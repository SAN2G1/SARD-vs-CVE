command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1455626	File	data/converged/CVE-2015-8617_php-src/ext_pcre_pcrelib_pcre_compile.c								
ANR	1455627	DeclStmt									
ANR	1455628	Decl							int	"int ( pcre_uint8 * , pcre_uchar * * , int , compile_data * , const pcre_uint32 * , unsigned int )"	add_list_to_class
ANR	1455629	DeclStmt									
ANR	1455630	Decl							BOOL	"BOOL ( int , pcre_uchar * * , const pcre_uchar * * , int * , BOOL , BOOL , int , int , pcre_uint32 * , pcre_int32 * , pcre_uint32 * , pcre_int32 * , branch_chain * , compile_data * , int * )"	compile_regex
ANR	1455631	DeclStmt									
ANR	1455632	Decl							const short int	const short int [ ]	escapes
ANR	1455633	DeclStmt									
ANR	1455634	Decl							const short int	const short int [ ]	escapes
ANR	1455635	ClassDef	verbitem	229:8:9971:10205							
ANR	1455636	DeclStmt									
ANR	1455637	Decl							int	int	len
ANR	1455638	DeclStmt									
ANR	1455639	Decl							int	int	op
ANR	1455640	DeclStmt									
ANR	1455641	Decl							int	int	op_arg
ANR	1455642	DeclStmt									
ANR	1455643	Decl							verbitem	verbitem	verbitem
ANR	1455644	DeclStmt									
ANR	1455645	Decl							const char	const char [ ]	verbnames
ANR	1455646	DeclStmt									
ANR	1455647	Decl							const verbitem	const verbitem [ ]	verbs
ANR	1455648	DeclStmt									
ANR	1455649	Decl							const int	const int	verbcount
ANR	1455650	DeclStmt									
ANR	1455651	Decl							const pcre_uchar	const pcre_uchar [ ]	sub_start_of_word
ANR	1455652	DeclStmt									
ANR	1455653	Decl							const pcre_uchar	const pcre_uchar [ ]	sub_end_of_word
ANR	1455654	DeclStmt									
ANR	1455655	Decl							const char	const char [ ]	posix_names
ANR	1455656	DeclStmt									
ANR	1455657	Decl							const pcre_uint8	const pcre_uint8 [ ]	posix_name_lengths
ANR	1455658	DeclStmt									
ANR	1455659	Decl							const int	const int [ ]	posix_class_maps
ANR	1455660	DeclStmt									
ANR	1455661	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PNd
ANR	1455662	DeclStmt									
ANR	1455663	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pNd
ANR	1455664	DeclStmt									
ANR	1455665	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PXsp
ANR	1455666	DeclStmt									
ANR	1455667	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pXsp
ANR	1455668	DeclStmt									
ANR	1455669	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PXwd
ANR	1455670	DeclStmt									
ANR	1455671	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pXwd
ANR	1455672	DeclStmt									
ANR	1455673	Decl							const pcre_uchar	const pcre_uchar * [ ]	substitutes
ANR	1455674	DeclStmt									
ANR	1455675	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pL
ANR	1455676	DeclStmt									
ANR	1455677	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pLl
ANR	1455678	DeclStmt									
ANR	1455679	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pLu
ANR	1455680	DeclStmt									
ANR	1455681	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pXan
ANR	1455682	DeclStmt									
ANR	1455683	Decl							const pcre_uchar	const pcre_uchar [ ]	string_h
ANR	1455684	DeclStmt									
ANR	1455685	Decl							const pcre_uchar	const pcre_uchar [ ]	string_pXps
ANR	1455686	DeclStmt									
ANR	1455687	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PL
ANR	1455688	DeclStmt									
ANR	1455689	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PLl
ANR	1455690	DeclStmt									
ANR	1455691	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PLu
ANR	1455692	DeclStmt									
ANR	1455693	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PXan
ANR	1455694	DeclStmt									
ANR	1455695	Decl							const pcre_uchar	const pcre_uchar [ ]	string_H
ANR	1455696	DeclStmt									
ANR	1455697	Decl							const pcre_uchar	const pcre_uchar [ ]	string_PXps
ANR	1455698	DeclStmt									
ANR	1455699	Decl							const pcre_uchar	const pcre_uchar * [ ]	posix_substitutes
ANR	1455700	DeclStmt									
ANR	1455701	Decl							const char	const char [ ]	error_texts
ANR	1455702	DeclStmt									
ANR	1455703	Decl							const pcre_uint8	const pcre_uint8 [ ]	digitab
ANR	1455704	DeclStmt									
ANR	1455705	Decl							const pcre_uint8	const pcre_uint8 [ ]	digitab
ANR	1455706	DeclStmt									
ANR	1455707	Decl							const pcre_uint8	const pcre_uint8 [ ]	ebcdic_chartab
ANR	1455708	DeclStmt									
ANR	1455709	Decl							const pcre_uint8	const pcre_uint8 [ ]	opcode_possessify
ANR	1455710	Function	find_error_text	881:0:40223:40436							
ANR	1455711	FunctionDef	find_error_text (int n)		1455710	0					
ANR	1455712	CompoundStatement		883:0:40266:40436	1455710	0					
ANR	1455713	IdentifierDeclStatement	const char * s = error_texts ;	884:0:40268:40295	1455710	0	True				
ANR	1455714	IdentifierDecl	* s = error_texts		1455710	0					
ANR	1455715	IdentifierDeclType	const char *		1455710	0					
ANR	1455716	Identifier	s		1455710	1					
ANR	1455717	AssignmentExpression	* s = error_texts		1455710	2		=			
ANR	1455718	Identifier	error_texts		1455710	0					
ANR	1455719	Identifier	error_texts		1455710	1					
ANR	1455720	ForStatement	for ( ; n > 0 ; n -- )		1455710	1					
ANR	1455721	Condition	n > 0	885:7:40304:40308	1455710	0	True				
ANR	1455722	RelationalExpression	n > 0		1455710	0		>			
ANR	1455723	Identifier	n		1455710	0					
ANR	1455724	PrimaryExpression	0		1455710	1					
ANR	1455725	PostIncDecOperationExpression	n --	885:14:40311:40313	1455710	1	True				
ANR	1455726	Identifier	n		1455710	0					
ANR	1455727	IncDec	--		1455710	1					
ANR	1455728	CompoundStatement		4:2:51:51	1455710	2					
ANR	1455729	WhileStatement	while ( * s ++ != CHAR_NULL )		1455710	0					
ANR	1455730	Condition	* s ++ != CHAR_NULL	887:9:40329:40345	1455710	0	True				
ANR	1455731	EqualityExpression	* s ++ != CHAR_NULL		1455710	0		!=			
ANR	1455732	UnaryOperationExpression	* s ++		1455710	0					
ANR	1455733	UnaryOperator	*		1455710	0					
ANR	1455734	PostIncDecOperationExpression	s ++		1455710	1					
ANR	1455735	Identifier	s		1455710	0					
ANR	1455736	IncDec	++		1455710	1					
ANR	1455737	Identifier	CHAR_NULL		1455710	1					
ANR	1455738	CompoundStatement		5:28:81:81	1455710	1					
ANR	1455739	ExpressionStatement		887:30:40350:40350	1455710	1	True				
ANR	1455740	IfStatement	if ( * s == CHAR_NULL )		1455710	2					
ANR	1455741	Condition	* s == CHAR_NULL	888:6:40358:40372	1455710	0	True				
ANR	1455742	EqualityExpression	* s == CHAR_NULL		1455710	0		==			
ANR	1455743	UnaryOperationExpression	* s		1455710	0					
ANR	1455744	UnaryOperator	*		1455710	0					
ANR	1455745	Identifier	s		1455710	1					
ANR	1455746	Identifier	CHAR_NULL		1455710	1					
ANR	1455747	ReturnStatement	"return ""Error text not found (please report)"" ;"	888:23:40375:40420	1455710	1	True				
ANR	1455748	PrimaryExpression	"""Error text not found (please report)"""		1455710	0					
ANR	1455749	ReturnStatement	return s ;	890:0:40426:40434	1455710	2	True				
ANR	1455750	Identifier	s		1455710	0					
ANR	1455751	ReturnType	static const char *		1455710	1					
ANR	1455752	Identifier	find_error_text		1455710	2					
ANR	1455753	ParameterList	int n		1455710	3					
ANR	1455754	Parameter	int n	882:16:40259:40263	1455710	0	True				
ANR	1455755	ParameterType	int		1455710	0					
ANR	1455756	Identifier	n		1455710	1					
ANR	1455757	CFGEntryNode	ENTRY		1455710		True				
ANR	1455758	CFGExitNode	EXIT		1455710		True				
ANR	1455759	Symbol	error_texts		1455710						
ANR	1455760	Symbol	* s ++		1455710						
ANR	1455761	Symbol	s		1455710						
ANR	1455762	Symbol	* s		1455710						
ANR	1455763	Symbol	n		1455710						
ANR	1455764	Symbol	CHAR_NULL		1455710						
ANR	1455765	Function	expand_workspace	908:0:40987:41685							
ANR	1455766	FunctionDef	expand_workspace (compile_data * cd)		1455765	0					
ANR	1455767	CompoundStatement		910:0:41033:41685	1455765	0					
ANR	1455768	IdentifierDeclStatement	pcre_uchar * newspace ;	911:0:41035:41055	1455765	0	True				
ANR	1455769	IdentifierDecl	* newspace		1455765	0					
ANR	1455770	IdentifierDeclType	pcre_uchar *		1455765	0					
ANR	1455771	Identifier	newspace		1455765	1					
ANR	1455772	IdentifierDeclStatement	int newsize = cd -> workspace_size * 2 ;	912:0:41057:41093	1455765	1	True				
ANR	1455773	IdentifierDecl	newsize = cd -> workspace_size * 2		1455765	0					
ANR	1455774	IdentifierDeclType	int		1455765	0					
ANR	1455775	Identifier	newsize		1455765	1					
ANR	1455776	AssignmentExpression	newsize = cd -> workspace_size * 2		1455765	2		=			
ANR	1455777	Identifier	newsize		1455765	0					
ANR	1455778	MultiplicativeExpression	cd -> workspace_size * 2		1455765	1		*			
ANR	1455779	PtrMemberAccess	cd -> workspace_size		1455765	0					
ANR	1455780	Identifier	cd		1455765	0					
ANR	1455781	Identifier	workspace_size		1455765	1					
ANR	1455782	PrimaryExpression	2		1455765	1					
ANR	1455783	IfStatement	if ( newsize > COMPILE_WORK_SIZE_MAX )		1455765	2					
ANR	1455784	Condition	newsize > COMPILE_WORK_SIZE_MAX	914:4:41100:41130	1455765	0	True				
ANR	1455785	RelationalExpression	newsize > COMPILE_WORK_SIZE_MAX		1455765	0		>			
ANR	1455786	Identifier	newsize		1455765	0					
ANR	1455787	Identifier	COMPILE_WORK_SIZE_MAX		1455765	1					
ANR	1455788	ExpressionStatement	newsize = COMPILE_WORK_SIZE_MAX	914:37:41133:41164	1455765	1	True				
ANR	1455789	AssignmentExpression	newsize = COMPILE_WORK_SIZE_MAX		1455765	0		=			
ANR	1455790	Identifier	newsize		1455765	0					
ANR	1455791	Identifier	COMPILE_WORK_SIZE_MAX		1455765	1					
ANR	1455792	IfStatement	if ( cd -> workspace_size >= COMPILE_WORK_SIZE_MAX || newsize - cd -> workspace_size < WORK_SIZE_SAFETY_MARGIN )		1455765	3					
ANR	1455793	Condition	cd -> workspace_size >= COMPILE_WORK_SIZE_MAX || newsize - cd -> workspace_size < WORK_SIZE_SAFETY_MARGIN	915:4:41170:41274	1455765	0	True				
ANR	1455794	OrExpression	cd -> workspace_size >= COMPILE_WORK_SIZE_MAX || newsize - cd -> workspace_size < WORK_SIZE_SAFETY_MARGIN		1455765	0		||			
ANR	1455795	RelationalExpression	cd -> workspace_size >= COMPILE_WORK_SIZE_MAX		1455765	0		>=			
ANR	1455796	PtrMemberAccess	cd -> workspace_size		1455765	0					
ANR	1455797	Identifier	cd		1455765	0					
ANR	1455798	Identifier	workspace_size		1455765	1					
ANR	1455799	Identifier	COMPILE_WORK_SIZE_MAX		1455765	1					
ANR	1455800	RelationalExpression	newsize - cd -> workspace_size < WORK_SIZE_SAFETY_MARGIN		1455765	1		<			
ANR	1455801	AdditiveExpression	newsize - cd -> workspace_size		1455765	0		-			
ANR	1455802	Identifier	newsize		1455765	0					
ANR	1455803	PtrMemberAccess	cd -> workspace_size		1455765	1					
ANR	1455804	Identifier	cd		1455765	0					
ANR	1455805	Identifier	workspace_size		1455765	1					
ANR	1455806	Identifier	WORK_SIZE_SAFETY_MARGIN		1455765	1					
ANR	1455807	ReturnStatement	return ERR72 ;	917:1:41278:41290	1455765	1	True				
ANR	1455808	Identifier	ERR72		1455765	0					
ANR	1455809	ExpressionStatement	newspace = ( PUBL ( malloc ) ) ( IN_UCHARS ( newsize ) )	919:0:41293:41338	1455765	4	True				
ANR	1455810	AssignmentExpression	newspace = ( PUBL ( malloc ) ) ( IN_UCHARS ( newsize ) )		1455765	0		=			
ANR	1455811	Identifier	newspace		1455765	0					
ANR	1455812	CallExpression	( PUBL ( malloc ) ) ( IN_UCHARS ( newsize ) )		1455765	1					
ANR	1455813	Callee	PUBL ( malloc )		1455765	0					
ANR	1455814	CallExpression	PUBL ( malloc )		1455765	0					
ANR	1455815	Callee	PUBL		1455765	0					
ANR	1455816	Identifier	PUBL		1455765	0					
ANR	1455817	ArgumentList	malloc		1455765	1					
ANR	1455818	Argument	malloc		1455765	0					
ANR	1455819	Identifier	malloc		1455765	0					
ANR	1455820	ArgumentList	IN_UCHARS ( newsize )		1455765	1					
ANR	1455821	Argument	IN_UCHARS ( newsize )		1455765	0					
ANR	1455822	CallExpression	IN_UCHARS ( newsize )		1455765	0					
ANR	1455823	Callee	IN_UCHARS		1455765	0					
ANR	1455824	Identifier	IN_UCHARS		1455765	0					
ANR	1455825	ArgumentList	newsize		1455765	1					
ANR	1455826	Argument	newsize		1455765	0					
ANR	1455827	Identifier	newsize		1455765	0					
ANR	1455828	IfStatement	if ( newspace == NULL )		1455765	5					
ANR	1455829	Condition	newspace == NULL	920:4:41344:41359	1455765	0	True				
ANR	1455830	EqualityExpression	newspace == NULL		1455765	0		==			
ANR	1455831	Identifier	newspace		1455765	0					
ANR	1455832	Identifier	NULL		1455765	1					
ANR	1455833	ReturnStatement	return ERR21 ;	920:22:41362:41374	1455765	1	True				
ANR	1455834	Identifier	ERR21		1455765	0					
ANR	1455835	ExpressionStatement	"memcpy ( newspace , cd -> start_workspace , cd -> workspace_size * sizeof ( pcre_uchar ) )"	921:0:41376:41454	1455765	6	True				
ANR	1455836	CallExpression	"memcpy ( newspace , cd -> start_workspace , cd -> workspace_size * sizeof ( pcre_uchar ) )"		1455765	0					
ANR	1455837	Callee	memcpy		1455765	0					
ANR	1455838	Identifier	memcpy		1455765	0					
ANR	1455839	ArgumentList	newspace		1455765	1					
ANR	1455840	Argument	newspace		1455765	0					
ANR	1455841	Identifier	newspace		1455765	0					
ANR	1455842	Argument	cd -> start_workspace		1455765	1					
ANR	1455843	PtrMemberAccess	cd -> start_workspace		1455765	0					
ANR	1455844	Identifier	cd		1455765	0					
ANR	1455845	Identifier	start_workspace		1455765	1					
ANR	1455846	Argument	cd -> workspace_size * sizeof ( pcre_uchar )		1455765	2					
ANR	1455847	MultiplicativeExpression	cd -> workspace_size * sizeof ( pcre_uchar )		1455765	0		*			
ANR	1455848	PtrMemberAccess	cd -> workspace_size		1455765	0					
ANR	1455849	Identifier	cd		1455765	0					
ANR	1455850	Identifier	workspace_size		1455765	1					
ANR	1455851	SizeofExpression	sizeof ( pcre_uchar )		1455765	1					
ANR	1455852	Sizeof	sizeof		1455765	0					
ANR	1455853	SizeofOperand	pcre_uchar		1455765	1					
ANR	1455854	ExpressionStatement	cd -> hwm = ( pcre_uchar * ) newspace + ( cd -> hwm - cd -> start_workspace )	922:0:41456:41522	1455765	7	True				
ANR	1455855	AssignmentExpression	cd -> hwm = ( pcre_uchar * ) newspace + ( cd -> hwm - cd -> start_workspace )		1455765	0		=			
ANR	1455856	PtrMemberAccess	cd -> hwm		1455765	0					
ANR	1455857	Identifier	cd		1455765	0					
ANR	1455858	Identifier	hwm		1455765	1					
ANR	1455859	AdditiveExpression	( pcre_uchar * ) newspace + ( cd -> hwm - cd -> start_workspace )		1455765	1		+			
ANR	1455860	CastExpression	( pcre_uchar * ) newspace		1455765	0					
ANR	1455861	CastTarget	pcre_uchar *		1455765	0					
ANR	1455862	Identifier	newspace		1455765	1					
ANR	1455863	AdditiveExpression	cd -> hwm - cd -> start_workspace		1455765	1		-			
ANR	1455864	PtrMemberAccess	cd -> hwm		1455765	0					
ANR	1455865	Identifier	cd		1455765	0					
ANR	1455866	Identifier	hwm		1455765	1					
ANR	1455867	PtrMemberAccess	cd -> start_workspace		1455765	1					
ANR	1455868	Identifier	cd		1455765	0					
ANR	1455869	Identifier	start_workspace		1455765	1					
ANR	1455870	IfStatement	if ( cd -> workspace_size > COMPILE_WORK_SIZE )		1455765	8					
ANR	1455871	Condition	cd -> workspace_size > COMPILE_WORK_SIZE	923:4:41528:41565	1455765	0	True				
ANR	1455872	RelationalExpression	cd -> workspace_size > COMPILE_WORK_SIZE		1455765	0		>			
ANR	1455873	PtrMemberAccess	cd -> workspace_size		1455765	0					
ANR	1455874	Identifier	cd		1455765	0					
ANR	1455875	Identifier	workspace_size		1455765	1					
ANR	1455876	Identifier	COMPILE_WORK_SIZE		1455765	1					
ANR	1455877	ExpressionStatement	( PUBL ( free ) ) ( ( void * ) cd -> start_workspace )	924:2:41570:41611	1455765	1	True				
ANR	1455878	CallExpression	( PUBL ( free ) ) ( ( void * ) cd -> start_workspace )		1455765	0					
ANR	1455879	Callee	PUBL ( free )		1455765	0					
ANR	1455880	CallExpression	PUBL ( free )		1455765	0					
ANR	1455881	Callee	PUBL		1455765	0					
ANR	1455882	Identifier	PUBL		1455765	0					
ANR	1455883	ArgumentList	free		1455765	1					
ANR	1455884	Argument	free		1455765	0					
ANR	1455885	Identifier	free		1455765	0					
ANR	1455886	ArgumentList	( void * ) cd -> start_workspace		1455765	1					
ANR	1455887	Argument	( void * ) cd -> start_workspace		1455765	0					
ANR	1455888	CastExpression	( void * ) cd -> start_workspace		1455765	0					
ANR	1455889	CastTarget	void *		1455765	0					
ANR	1455890	PtrMemberAccess	cd -> start_workspace		1455765	1					
ANR	1455891	Identifier	cd		1455765	0					
ANR	1455892	Identifier	start_workspace		1455765	1					
ANR	1455893	ExpressionStatement	cd -> start_workspace = newspace	925:0:41613:41643	1455765	9	True				
ANR	1455894	AssignmentExpression	cd -> start_workspace = newspace		1455765	0		=			
ANR	1455895	PtrMemberAccess	cd -> start_workspace		1455765	0					
ANR	1455896	Identifier	cd		1455765	0					
ANR	1455897	Identifier	start_workspace		1455765	1					
ANR	1455898	Identifier	newspace		1455765	1					
ANR	1455899	ExpressionStatement	cd -> workspace_size = newsize	926:0:41645:41673	1455765	10	True				
ANR	1455900	AssignmentExpression	cd -> workspace_size = newsize		1455765	0		=			
ANR	1455901	PtrMemberAccess	cd -> workspace_size		1455765	0					
ANR	1455902	Identifier	cd		1455765	0					
ANR	1455903	Identifier	workspace_size		1455765	1					
ANR	1455904	Identifier	newsize		1455765	1					
ANR	1455905	ReturnStatement	return 0 ;	927:0:41675:41683	1455765	11	True				
ANR	1455906	PrimaryExpression	0		1455765	0					
ANR	1455907	ReturnType	static int		1455765	1					
ANR	1455908	Identifier	expand_workspace		1455765	2					
ANR	1455909	ParameterList	compile_data * cd		1455765	3					
ANR	1455910	Parameter	compile_data * cd	909:17:41015:41030	1455765	0	True				
ANR	1455911	ParameterType	compile_data *		1455765	0					
ANR	1455912	Identifier	cd		1455765	1					
ANR	1455913	CFGEntryNode	ENTRY		1455765		True				
ANR	1455914	CFGExitNode	EXIT		1455765		True				
ANR	1455915	Symbol	cd		1455765						
ANR	1455916	Symbol	malloc		1455765						
ANR	1455917	Symbol	NULL		1455765						
ANR	1455918	Symbol	COMPILE_WORK_SIZE		1455765						
ANR	1455919	Symbol	* cd		1455765						
ANR	1455920	Symbol	WORK_SIZE_SAFETY_MARGIN		1455765						
ANR	1455921	Symbol	newsize		1455765						
ANR	1455922	Symbol	PUBL		1455765						
ANR	1455923	Symbol	IN_UCHARS		1455765						
ANR	1455924	Symbol	cd -> workspace_size		1455765						
ANR	1455925	Symbol	COMPILE_WORK_SIZE_MAX		1455765						
ANR	1455926	Symbol	ERR72		1455765						
ANR	1455927	Symbol	cd -> start_workspace		1455765						
ANR	1455928	Symbol	newspace		1455765						
ANR	1455929	Symbol	ERR21		1455765						
ANR	1455930	Symbol	cd -> hwm		1455765						
ANR	1455931	Symbol	free		1455765						
ANR	1455932	Function	is_counted_repeat	947:0:42196:42557							
ANR	1455933	FunctionDef	is_counted_repeat (const pcre_uchar * p)		1455932	0					
ANR	1455934	CompoundStatement		949:0:42247:42557	1455932	0					
ANR	1455935	IfStatement	if ( ! IS_DIGIT ( * p ) )		1455932	0					
ANR	1455936	Condition	! IS_DIGIT ( * p )	950:4:42253:42265	1455932	0	True				
ANR	1455937	UnaryOperationExpression	! IS_DIGIT ( * p )		1455932	0					
ANR	1455938	UnaryOperator	!		1455932	0					
ANR	1455939	CallExpression	IS_DIGIT ( * p )		1455932	1					
ANR	1455940	Callee	IS_DIGIT		1455932	0					
ANR	1455941	Identifier	IS_DIGIT		1455932	0					
ANR	1455942	ArgumentList	* p		1455932	1					
ANR	1455943	Argument	* p		1455932	0					
ANR	1455944	UnaryOperationExpression	* p		1455932	0					
ANR	1455945	UnaryOperator	*		1455932	0					
ANR	1455946	Identifier	p		1455932	1					
ANR	1455947	ReturnStatement	return FALSE ;	950:19:42268:42280	1455932	1	True				
ANR	1455948	Identifier	FALSE		1455932	0					
ANR	1455949	ExpressionStatement	p ++	951:0:42282:42285	1455932	1	True				
ANR	1455950	PostIncDecOperationExpression	p ++		1455932	0					
ANR	1455951	Identifier	p		1455932	0					
ANR	1455952	IncDec	++		1455932	1					
ANR	1455953	WhileStatement	while ( IS_DIGIT ( * p ) )		1455932	2					
ANR	1455954	Condition	IS_DIGIT ( * p )	952:7:42294:42305	1455932	0	True				
ANR	1455955	CallExpression	IS_DIGIT ( * p )		1455932	0					
ANR	1455956	Callee	IS_DIGIT		1455932	0					
ANR	1455957	Identifier	IS_DIGIT		1455932	0					
ANR	1455958	ArgumentList	* p		1455932	1					
ANR	1455959	Argument	* p		1455932	0					
ANR	1455960	UnaryOperationExpression	* p		1455932	0					
ANR	1455961	UnaryOperator	*		1455932	0					
ANR	1455962	Identifier	p		1455932	1					
ANR	1455963	ExpressionStatement	p ++	952:21:42308:42311	1455932	1	True				
ANR	1455964	PostIncDecOperationExpression	p ++		1455932	0					
ANR	1455965	Identifier	p		1455932	0					
ANR	1455966	IncDec	++		1455932	1					
ANR	1455967	IfStatement	if ( * p == CHAR_RIGHT_CURLY_BRACKET )		1455932	3					
ANR	1455968	Condition	* p == CHAR_RIGHT_CURLY_BRACKET	953:4:42317:42346	1455932	0	True				
ANR	1455969	EqualityExpression	* p == CHAR_RIGHT_CURLY_BRACKET		1455932	0		==			
ANR	1455970	UnaryOperationExpression	* p		1455932	0					
ANR	1455971	UnaryOperator	*		1455932	0					
ANR	1455972	Identifier	p		1455932	1					
ANR	1455973	Identifier	CHAR_RIGHT_CURLY_BRACKET		1455932	1					
ANR	1455974	ReturnStatement	return TRUE ;	953:36:42349:42360	1455932	1	True				
ANR	1455975	Identifier	TRUE		1455932	0					
ANR	1455976	IfStatement	if ( * p ++ != CHAR_COMMA )		1455932	4					
ANR	1455977	Condition	* p ++ != CHAR_COMMA	955:4:42367:42384	1455932	0	True				
ANR	1455978	EqualityExpression	* p ++ != CHAR_COMMA		1455932	0		!=			
ANR	1455979	UnaryOperationExpression	* p ++		1455932	0					
ANR	1455980	UnaryOperator	*		1455932	0					
ANR	1455981	PostIncDecOperationExpression	p ++		1455932	1					
ANR	1455982	Identifier	p		1455932	0					
ANR	1455983	IncDec	++		1455932	1					
ANR	1455984	Identifier	CHAR_COMMA		1455932	1					
ANR	1455985	ReturnStatement	return FALSE ;	955:24:42387:42399	1455932	1	True				
ANR	1455986	Identifier	FALSE		1455932	0					
ANR	1455987	IfStatement	if ( * p == CHAR_RIGHT_CURLY_BRACKET )		1455932	5					
ANR	1455988	Condition	* p == CHAR_RIGHT_CURLY_BRACKET	956:4:42405:42434	1455932	0	True				
ANR	1455989	EqualityExpression	* p == CHAR_RIGHT_CURLY_BRACKET		1455932	0		==			
ANR	1455990	UnaryOperationExpression	* p		1455932	0					
ANR	1455991	UnaryOperator	*		1455932	0					
ANR	1455992	Identifier	p		1455932	1					
ANR	1455993	Identifier	CHAR_RIGHT_CURLY_BRACKET		1455932	1					
ANR	1455994	ReturnStatement	return TRUE ;	956:36:42437:42448	1455932	1	True				
ANR	1455995	Identifier	TRUE		1455932	0					
ANR	1455996	IfStatement	if ( ! IS_DIGIT ( * p ) )		1455932	6					
ANR	1455997	Condition	! IS_DIGIT ( * p )	958:4:42455:42467	1455932	0	True				
ANR	1455998	UnaryOperationExpression	! IS_DIGIT ( * p )		1455932	0					
ANR	1455999	UnaryOperator	!		1455932	0					
ANR	1456000	CallExpression	IS_DIGIT ( * p )		1455932	1					
ANR	1456001	Callee	IS_DIGIT		1455932	0					
ANR	1456002	Identifier	IS_DIGIT		1455932	0					
ANR	1456003	ArgumentList	* p		1455932	1					
ANR	1456004	Argument	* p		1455932	0					
ANR	1456005	UnaryOperationExpression	* p		1455932	0					
ANR	1456006	UnaryOperator	*		1455932	0					
ANR	1456007	Identifier	p		1455932	1					
ANR	1456008	ReturnStatement	return FALSE ;	958:19:42470:42482	1455932	1	True				
ANR	1456009	Identifier	FALSE		1455932	0					
ANR	1456010	ExpressionStatement	p ++	959:0:42484:42487	1455932	7	True				
ANR	1456011	PostIncDecOperationExpression	p ++		1455932	0					
ANR	1456012	Identifier	p		1455932	0					
ANR	1456013	IncDec	++		1455932	1					
ANR	1456014	WhileStatement	while ( IS_DIGIT ( * p ) )		1455932	8					
ANR	1456015	Condition	IS_DIGIT ( * p )	960:7:42496:42507	1455932	0	True				
ANR	1456016	CallExpression	IS_DIGIT ( * p )		1455932	0					
ANR	1456017	Callee	IS_DIGIT		1455932	0					
ANR	1456018	Identifier	IS_DIGIT		1455932	0					
ANR	1456019	ArgumentList	* p		1455932	1					
ANR	1456020	Argument	* p		1455932	0					
ANR	1456021	UnaryOperationExpression	* p		1455932	0					
ANR	1456022	UnaryOperator	*		1455932	0					
ANR	1456023	Identifier	p		1455932	1					
ANR	1456024	ExpressionStatement	p ++	960:21:42510:42513	1455932	1	True				
ANR	1456025	PostIncDecOperationExpression	p ++		1455932	0					
ANR	1456026	Identifier	p		1455932	0					
ANR	1456027	IncDec	++		1455932	1					
ANR	1456028	ReturnStatement	return ( * p == CHAR_RIGHT_CURLY_BRACKET ) ;	962:0:42516:42555	1455932	9	True				
ANR	1456029	EqualityExpression	* p == CHAR_RIGHT_CURLY_BRACKET		1455932	0		==			
ANR	1456030	UnaryOperationExpression	* p		1455932	0					
ANR	1456031	UnaryOperator	*		1455932	0					
ANR	1456032	Identifier	p		1455932	1					
ANR	1456033	Identifier	CHAR_RIGHT_CURLY_BRACKET		1455932	1					
ANR	1456034	ReturnType	static BOOL		1455932	1					
ANR	1456035	Identifier	is_counted_repeat		1455932	2					
ANR	1456036	ParameterList	const pcre_uchar * p		1455932	3					
ANR	1456037	Parameter	const pcre_uchar * p	948:18:42226:42244	1455932	0	True				
ANR	1456038	ParameterType	const pcre_uchar *		1455932	0					
ANR	1456039	Identifier	p		1455932	1					
ANR	1456040	CFGEntryNode	ENTRY		1455932		True				
ANR	1456041	CFGExitNode	EXIT		1455932		True				
ANR	1456042	Symbol	p		1455932						
ANR	1456043	Symbol	* p ++		1455932						
ANR	1456044	Symbol	CHAR_COMMA		1455932						
ANR	1456045	Symbol	TRUE		1455932						
ANR	1456046	Symbol	* p		1455932						
ANR	1456047	Symbol	FALSE		1455932						
ANR	1456048	Symbol	IS_DIGIT		1455932						
ANR	1456049	Symbol	CHAR_RIGHT_CURLY_BRACKET		1455932						
ANR	1456050	Function	check_escape	992:0:43639:59095							
ANR	1456051	FunctionDef	"check_escape (const pcre_uchar * * ptrptr , pcre_uint32 * chptr , int * errorcodeptr , int bracount , int options , BOOL isclass)"		1456050	0					
ANR	1456052	CompoundStatement		995:0:43772:59095	1456050	0					
ANR	1456053	IdentifierDeclStatement	BOOL utf = ( options & PCRE_UTF8 ) != 0 ;	997:0:43824:43861	1456050	0	True				
ANR	1456054	IdentifierDecl	utf = ( options & PCRE_UTF8 ) != 0		1456050	0					
ANR	1456055	IdentifierDeclType	BOOL		1456050	0					
ANR	1456056	Identifier	utf		1456050	1					
ANR	1456057	AssignmentExpression	utf = ( options & PCRE_UTF8 ) != 0		1456050	2		=			
ANR	1456058	Identifier	utf		1456050	0					
ANR	1456059	EqualityExpression	( options & PCRE_UTF8 ) != 0		1456050	1		!=			
ANR	1456060	BitAndExpression	options & PCRE_UTF8		1456050	0		&			
ANR	1456061	Identifier	options		1456050	0					
ANR	1456062	Identifier	PCRE_UTF8		1456050	1					
ANR	1456063	PrimaryExpression	0		1456050	1					
ANR	1456064	IdentifierDeclStatement	const pcre_uchar * ptr = * ptrptr + 1 ;	998:0:43863:43898	1456050	1	True				
ANR	1456065	IdentifierDecl	* ptr = * ptrptr + 1		1456050	0					
ANR	1456066	IdentifierDeclType	const pcre_uchar *		1456050	0					
ANR	1456067	Identifier	ptr		1456050	1					
ANR	1456068	AssignmentExpression	* ptr = * ptrptr + 1		1456050	2		=			
ANR	1456069	Identifier	ptr		1456050	0					
ANR	1456070	AdditiveExpression	* ptrptr + 1		1456050	1		+			
ANR	1456071	UnaryOperationExpression	* ptrptr		1456050	0					
ANR	1456072	UnaryOperator	*		1456050	0					
ANR	1456073	Identifier	ptrptr		1456050	1					
ANR	1456074	PrimaryExpression	1		1456050	1					
ANR	1456075	IdentifierDeclStatement	pcre_uint32 c ;	999:0:43900:43913	1456050	2	True				
ANR	1456076	IdentifierDecl	c		1456050	0					
ANR	1456077	IdentifierDeclType	pcre_uint32		1456050	0					
ANR	1456078	Identifier	c		1456050	1					
ANR	1456079	IdentifierDeclStatement	int escape = 0 ;	1000:0:43915:43929	1456050	3	True				
ANR	1456080	IdentifierDecl	escape = 0		1456050	0					
ANR	1456081	IdentifierDeclType	int		1456050	0					
ANR	1456082	Identifier	escape		1456050	1					
ANR	1456083	AssignmentExpression	escape = 0		1456050	2		=			
ANR	1456084	Identifier	escape		1456050	0					
ANR	1456085	PrimaryExpression	0		1456050	1					
ANR	1456086	IdentifierDeclStatement	int i ;	1001:0:43931:43936	1456050	4	True				
ANR	1456087	IdentifierDecl	i		1456050	0					
ANR	1456088	IdentifierDeclType	int		1456050	0					
ANR	1456089	Identifier	i		1456050	1					
ANR	1456090	ExpressionStatement	"GETCHARINCTEST ( c , ptr )"	1003:0:43939:43961	1456050	5	True				
ANR	1456091	CallExpression	"GETCHARINCTEST ( c , ptr )"		1456050	0					
ANR	1456092	Callee	GETCHARINCTEST		1456050	0					
ANR	1456093	Identifier	GETCHARINCTEST		1456050	0					
ANR	1456094	ArgumentList	c		1456050	1					
ANR	1456095	Argument	c		1456050	0					
ANR	1456096	Identifier	c		1456050	0					
ANR	1456097	Argument	ptr		1456050	1					
ANR	1456098	Identifier	ptr		1456050	0					
ANR	1456099	ExpressionStatement	ptr --	1004:0:44018:44023	1456050	6	True				
ANR	1456100	PostIncDecOperationExpression	ptr --		1456050	0					
ANR	1456101	Identifier	ptr		1456050	0					
ANR	1456102	IncDec	--		1456050	1					
ANR	1456103	IfStatement	if ( c == CHAR_NULL )		1456050	7					
ANR	1456104	Condition	c == CHAR_NULL	1008:4:44162:44175	1456050	0	True				
ANR	1456105	EqualityExpression	c == CHAR_NULL		1456050	0		==			
ANR	1456106	Identifier	c		1456050	0					
ANR	1456107	Identifier	CHAR_NULL		1456050	1					
ANR	1456108	ExpressionStatement	* errorcodeptr = ERR1	1008:20:44178:44198	1456050	1	True				
ANR	1456109	AssignmentExpression	* errorcodeptr = ERR1		1456050	0		=			
ANR	1456110	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456111	UnaryOperator	*		1456050	0					
ANR	1456112	Identifier	errorcodeptr		1456050	1					
ANR	1456113	Identifier	ERR1		1456050	1					
ANR	1456114	ElseStatement	else		1456050	0					
ANR	1456115	IfStatement	if ( c < CHAR_0 || c > CHAR_z )		1456050	0					
ANR	1456116	Condition	c < CHAR_0 || c > CHAR_z	1016:9:44480:44503	1456050	0	True				
ANR	1456117	OrExpression	c < CHAR_0 || c > CHAR_z		1456050	0		||			
ANR	1456118	RelationalExpression	c < CHAR_0		1456050	0		<			
ANR	1456119	Identifier	c		1456050	0					
ANR	1456120	Identifier	CHAR_0		1456050	1					
ANR	1456121	RelationalExpression	c > CHAR_z		1456050	1		>			
ANR	1456122	Identifier	c		1456050	0					
ANR	1456123	Identifier	CHAR_z		1456050	1					
ANR	1456124	CompoundStatement		22:35:733:733	1456050	1					
ANR	1456125	ElseStatement	else		1456050	0					
ANR	1456126	IfStatement	if ( ( i = escapes [ c - CHAR_0 ] ) != 0 )		1456050	0					
ANR	1456127	Condition	( i = escapes [ c - CHAR_0 ] ) != 0	1017:9:44518:44547	1456050	0	True				
ANR	1456128	EqualityExpression	( i = escapes [ c - CHAR_0 ] ) != 0		1456050	0		!=			
ANR	1456129	AssignmentExpression	i = escapes [ c - CHAR_0 ]		1456050	0		=			
ANR	1456130	Identifier	i		1456050	0					
ANR	1456131	ArrayIndexing	escapes [ c - CHAR_0 ]		1456050	1					
ANR	1456132	Identifier	escapes		1456050	0					
ANR	1456133	AdditiveExpression	c - CHAR_0		1456050	1		-			
ANR	1456134	Identifier	c		1456050	0					
ANR	1456135	Identifier	CHAR_0		1456050	1					
ANR	1456136	PrimaryExpression	0		1456050	1					
ANR	1456137	CompoundStatement		24:2:779:779	1456050	1					
ANR	1456138	IfStatement	if ( i > 0 )		1456050	0					
ANR	1456139	Condition	i > 0	1018:8:44558:44562	1456050	0	True				
ANR	1456140	RelationalExpression	i > 0		1456050	0		>			
ANR	1456141	Identifier	i		1456050	0					
ANR	1456142	PrimaryExpression	0		1456050	1					
ANR	1456143	ExpressionStatement	c = ( pcre_uint32 ) i	1018:15:44565:44583	1456050	1	True				
ANR	1456144	AssignmentExpression	c = ( pcre_uint32 ) i		1456050	0		=			
ANR	1456145	Identifier	c		1456050	0					
ANR	1456146	CastExpression	( pcre_uint32 ) i		1456050	1					
ANR	1456147	CastTarget	pcre_uint32		1456050	0					
ANR	1456148	Identifier	i		1456050	1					
ANR	1456149	ElseStatement	else		1456050	0					
ANR	1456150	ExpressionStatement	escape = - i	1018:40:44590:44601	1456050	0	True				
ANR	1456151	AssignmentExpression	escape = - i		1456050	0		=			
ANR	1456152	Identifier	escape		1456050	0					
ANR	1456153	UnaryOperationExpression	- i		1456050	1					
ANR	1456154	UnaryOperator	-		1456050	0					
ANR	1456155	Identifier	i		1456050	1					
ANR	1456156	ElseStatement	else		1456050	0					
ANR	1456157	CompoundStatement		38:2:1203:1208	1456050	0					
ANR	1456158	IdentifierDeclStatement	const pcre_uchar * oldptr ;	1030:2:44914:44938	1456050	0	True				
ANR	1456159	IdentifierDecl	* oldptr		1456050	0					
ANR	1456160	IdentifierDeclType	const pcre_uchar *		1456050	0					
ANR	1456161	Identifier	oldptr		1456050	1					
ANR	1456162	IdentifierDeclStatement	"BOOL braced , negated , overflow ;"	1031:2:44942:44972	1456050	1	True				
ANR	1456163	IdentifierDecl	braced		1456050	0					
ANR	1456164	IdentifierDeclType	BOOL		1456050	0					
ANR	1456165	Identifier	braced		1456050	1					
ANR	1456166	IdentifierDecl	negated		1456050	1					
ANR	1456167	IdentifierDeclType	BOOL		1456050	0					
ANR	1456168	Identifier	negated		1456050	1					
ANR	1456169	IdentifierDecl	overflow		1456050	2					
ANR	1456170	IdentifierDeclType	BOOL		1456050	0					
ANR	1456171	Identifier	overflow		1456050	1					
ANR	1456172	IdentifierDeclStatement	int s ;	1032:2:44976:44981	1456050	2	True				
ANR	1456173	IdentifierDecl	s		1456050	0					
ANR	1456174	IdentifierDeclType	int		1456050	0					
ANR	1456175	Identifier	s		1456050	1					
ANR	1456176	SwitchStatement	switch ( c )		1456050	3					
ANR	1456177	Condition	c	1034:10:44994:44994	1456050	0	True				
ANR	1456178	Identifier	c		1456050	0					
ANR	1456179	CompoundStatement		41:4:1228:1228	1456050	1					
ANR	1456180	Label	case CHAR_l :	1039:4:45099:45110	1456050	0	True				
ANR	1456181	Identifier	CHAR_l		1456050	0					
ANR	1456182	Label	case CHAR_L :	1040:4:45116:45127	1456050	1	True				
ANR	1456183	Identifier	CHAR_L		1456050	0					
ANR	1456184	ExpressionStatement	* errorcodeptr = ERR37	1041:4:45133:45154	1456050	2	True				
ANR	1456185	AssignmentExpression	* errorcodeptr = ERR37		1456050	0		=			
ANR	1456186	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456187	UnaryOperator	*		1456050	0					
ANR	1456188	Identifier	errorcodeptr		1456050	1					
ANR	1456189	Identifier	ERR37		1456050	1					
ANR	1456190	BreakStatement	break ;	1042:4:45160:45165	1456050	3	True				
ANR	1456191	Label	case CHAR_u :	1044:4:45172:45183	1456050	4	True				
ANR	1456192	Identifier	CHAR_u		1456050	0					
ANR	1456193	IfStatement	if ( ( options & PCRE_JAVASCRIPT_COMPAT ) != 0 )		1456050	5					
ANR	1456194	Condition	( options & PCRE_JAVASCRIPT_COMPAT ) != 0	1045:8:45193:45231	1456050	0	True				
ANR	1456195	EqualityExpression	( options & PCRE_JAVASCRIPT_COMPAT ) != 0		1456050	0		!=			
ANR	1456196	BitAndExpression	options & PCRE_JAVASCRIPT_COMPAT		1456050	0		&			
ANR	1456197	Identifier	options		1456050	0					
ANR	1456198	Identifier	PCRE_JAVASCRIPT_COMPAT		1456050	1					
ANR	1456199	PrimaryExpression	0		1456050	1					
ANR	1456200	CompoundStatement		52:6:1467:1467	1456050	1					
ANR	1456201	IfStatement	if ( MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0 )		1456050	0					
ANR	1456202	Condition	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0	1049:10:45372:45631	1456050	0	True				
ANR	1456203	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		1456050	0		&&			
ANR	1456204	CallExpression	MAX_255 ( ptr [ 1 ] )		1456050	0					
ANR	1456205	Callee	MAX_255		1456050	0					
ANR	1456206	Identifier	MAX_255		1456050	0					
ANR	1456207	ArgumentList	ptr [ 1 ]		1456050	1					
ANR	1456208	Argument	ptr [ 1 ]		1456050	0					
ANR	1456209	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456210	Identifier	ptr		1456050	0					
ANR	1456211	PrimaryExpression	1		1456050	1					
ANR	1456212	AndExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		1456050	1		&&			
ANR	1456213	EqualityExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		1456050	0		!=			
ANR	1456214	BitAndExpression	digitab [ ptr [ 1 ] ] & ctype_xdigit		1456050	0		&			
ANR	1456215	ArrayIndexing	digitab [ ptr [ 1 ] ]		1456050	0					
ANR	1456216	Identifier	digitab		1456050	0					
ANR	1456217	ArrayIndexing	ptr [ 1 ]		1456050	1					
ANR	1456218	Identifier	ptr		1456050	0					
ANR	1456219	PrimaryExpression	1		1456050	1					
ANR	1456220	Identifier	ctype_xdigit		1456050	1					
ANR	1456221	PrimaryExpression	0		1456050	1					
ANR	1456222	AndExpression	MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		1456050	1		&&			
ANR	1456223	CallExpression	MAX_255 ( ptr [ 2 ] )		1456050	0					
ANR	1456224	Callee	MAX_255		1456050	0					
ANR	1456225	Identifier	MAX_255		1456050	0					
ANR	1456226	ArgumentList	ptr [ 2 ]		1456050	1					
ANR	1456227	Argument	ptr [ 2 ]		1456050	0					
ANR	1456228	ArrayIndexing	ptr [ 2 ]		1456050	0					
ANR	1456229	Identifier	ptr		1456050	0					
ANR	1456230	PrimaryExpression	2		1456050	1					
ANR	1456231	AndExpression	( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		1456050	1		&&			
ANR	1456232	EqualityExpression	( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		1456050	0		!=			
ANR	1456233	BitAndExpression	digitab [ ptr [ 2 ] ] & ctype_xdigit		1456050	0		&			
ANR	1456234	ArrayIndexing	digitab [ ptr [ 2 ] ]		1456050	0					
ANR	1456235	Identifier	digitab		1456050	0					
ANR	1456236	ArrayIndexing	ptr [ 2 ]		1456050	1					
ANR	1456237	Identifier	ptr		1456050	0					
ANR	1456238	PrimaryExpression	2		1456050	1					
ANR	1456239	Identifier	ctype_xdigit		1456050	1					
ANR	1456240	PrimaryExpression	0		1456050	1					
ANR	1456241	AndExpression	MAX_255 ( ptr [ 3 ] ) && ( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		1456050	1		&&			
ANR	1456242	CallExpression	MAX_255 ( ptr [ 3 ] )		1456050	0					
ANR	1456243	Callee	MAX_255		1456050	0					
ANR	1456244	Identifier	MAX_255		1456050	0					
ANR	1456245	ArgumentList	ptr [ 3 ]		1456050	1					
ANR	1456246	Argument	ptr [ 3 ]		1456050	0					
ANR	1456247	ArrayIndexing	ptr [ 3 ]		1456050	0					
ANR	1456248	Identifier	ptr		1456050	0					
ANR	1456249	PrimaryExpression	3		1456050	1					
ANR	1456250	AndExpression	( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		1456050	1		&&			
ANR	1456251	EqualityExpression	( digitab [ ptr [ 3 ] ] & ctype_xdigit ) != 0		1456050	0		!=			
ANR	1456252	BitAndExpression	digitab [ ptr [ 3 ] ] & ctype_xdigit		1456050	0		&			
ANR	1456253	ArrayIndexing	digitab [ ptr [ 3 ] ]		1456050	0					
ANR	1456254	Identifier	digitab		1456050	0					
ANR	1456255	ArrayIndexing	ptr [ 3 ]		1456050	1					
ANR	1456256	Identifier	ptr		1456050	0					
ANR	1456257	PrimaryExpression	3		1456050	1					
ANR	1456258	Identifier	ctype_xdigit		1456050	1					
ANR	1456259	PrimaryExpression	0		1456050	1					
ANR	1456260	AndExpression	MAX_255 ( ptr [ 4 ] ) && ( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		1456050	1		&&			
ANR	1456261	CallExpression	MAX_255 ( ptr [ 4 ] )		1456050	0					
ANR	1456262	Callee	MAX_255		1456050	0					
ANR	1456263	Identifier	MAX_255		1456050	0					
ANR	1456264	ArgumentList	ptr [ 4 ]		1456050	1					
ANR	1456265	Argument	ptr [ 4 ]		1456050	0					
ANR	1456266	ArrayIndexing	ptr [ 4 ]		1456050	0					
ANR	1456267	Identifier	ptr		1456050	0					
ANR	1456268	PrimaryExpression	4		1456050	1					
ANR	1456269	EqualityExpression	( digitab [ ptr [ 4 ] ] & ctype_xdigit ) != 0		1456050	1		!=			
ANR	1456270	BitAndExpression	digitab [ ptr [ 4 ] ] & ctype_xdigit		1456050	0		&			
ANR	1456271	ArrayIndexing	digitab [ ptr [ 4 ] ]		1456050	0					
ANR	1456272	Identifier	digitab		1456050	0					
ANR	1456273	ArrayIndexing	ptr [ 4 ]		1456050	1					
ANR	1456274	Identifier	ptr		1456050	0					
ANR	1456275	PrimaryExpression	4		1456050	1					
ANR	1456276	Identifier	ctype_xdigit		1456050	1					
ANR	1456277	PrimaryExpression	0		1456050	1					
ANR	1456278	CompoundStatement		59:8:1869:1869	1456050	1					
ANR	1456279	ExpressionStatement	c = 0	1054:8:45652:45657	1456050	0	True				
ANR	1456280	AssignmentExpression	c = 0		1456050	0		=			
ANR	1456281	Identifier	c		1456050	0					
ANR	1456282	PrimaryExpression	0		1456050	1					
ANR	1456283	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		1456050	1					
ANR	1456284	ForInit	i = 0 ;	1055:13:45672:45677	1456050	0	True				
ANR	1456285	AssignmentExpression	i = 0		1456050	0		=			
ANR	1456286	Identifier	i		1456050	0					
ANR	1456287	PrimaryExpression	0		1456050	1					
ANR	1456288	Condition	i < 4	1055:20:45679:45683	1456050	1	True				
ANR	1456289	RelationalExpression	i < 4		1456050	0		<			
ANR	1456290	Identifier	i		1456050	0					
ANR	1456291	PrimaryExpression	4		1456050	1					
ANR	1456292	UnaryExpression	++ i	1055:27:45686:45688	1456050	2	True				
ANR	1456293	IncDec	++		1456050	0					
ANR	1456294	Identifier	i		1456050	1					
ANR	1456295	CompoundStatement		63:19:1949:1974	1456050	3					
ANR	1456296	Statement	register	1057:10:45713:45720	1456050	0	True				
ANR	1456297	IdentifierDeclStatement	pcre_uint32 cc = * ( ++ ptr ) ;	1057:19:45722:45747	1456050	1	True				
ANR	1456298	IdentifierDecl	cc = * ( ++ ptr )		1456050	0					
ANR	1456299	IdentifierDeclType	pcre_uint32		1456050	0					
ANR	1456300	Identifier	cc		1456050	1					
ANR	1456301	AssignmentExpression	cc = * ( ++ ptr )		1456050	2		=			
ANR	1456302	Identifier	cc		1456050	0					
ANR	1456303	UnaryOperationExpression	* ( ++ ptr )		1456050	1					
ANR	1456304	UnaryOperator	*		1456050	0					
ANR	1456305	UnaryExpression	++ ptr		1456050	1					
ANR	1456306	IncDec	++		1456050	0					
ANR	1456307	Identifier	ptr		1456050	1					
ANR	1456308	IfStatement	if ( cc >= CHAR_a )		1456050	2					
ANR	1456309	Condition	cc >= CHAR_a	1059:14:45804:45815	1456050	0	True				
ANR	1456310	RelationalExpression	cc >= CHAR_a		1456050	0		>=			
ANR	1456311	Identifier	cc		1456050	0					
ANR	1456312	Identifier	CHAR_a		1456050	1					
ANR	1456313	ExpressionStatement	cc -= 32	1059:28:45818:45826	1456050	1	True				
ANR	1456314	AssignmentExpression	cc -= 32		1456050	0		-=			
ANR	1456315	Identifier	cc		1456050	0					
ANR	1456316	PrimaryExpression	32		1456050	1					
ANR	1456317	ExpressionStatement	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )	1060:10:45880:45939	1456050	3	True				
ANR	1456318	AssignmentExpression	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	0		=			
ANR	1456319	Identifier	c		1456050	0					
ANR	1456320	AdditiveExpression	( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	1		+			
ANR	1456321	ShiftExpression	c << 4		1456050	0		<<			
ANR	1456322	Identifier	c		1456050	0					
ANR	1456323	PrimaryExpression	4		1456050	1					
ANR	1456324	AdditiveExpression	cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	1		-			
ANR	1456325	Identifier	cc		1456050	0					
ANR	1456326	ConditionalExpression	( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 )		1456050	1					
ANR	1456327	Condition	cc < CHAR_A		1456050	0					
ANR	1456328	RelationalExpression	cc < CHAR_A		1456050	0		<			
ANR	1456329	Identifier	cc		1456050	0					
ANR	1456330	Identifier	CHAR_A		1456050	1					
ANR	1456331	Identifier	CHAR_0		1456050	1					
ANR	1456332	AdditiveExpression	CHAR_A - 10		1456050	2		-			
ANR	1456333	Identifier	CHAR_A		1456050	0					
ANR	1456334	PrimaryExpression	10		1456050	1					
ANR	1456335	IfStatement	if ( c > ( utf ? 0x10ffffU : 0xffU ) )		1456050	2					
ANR	1456336	Condition	c > ( utf ? 0x10ffffU : 0xffU )	1068:12:46190:46218	1456050	0	True				
ANR	1456337	RelationalExpression	c > ( utf ? 0x10ffffU : 0xffU )		1456050	0		>			
ANR	1456338	Identifier	c		1456050	0					
ANR	1456339	ConditionalExpression	utf ? 0x10ffffU : 0xffU		1456050	1					
ANR	1456340	Condition	utf		1456050	0					
ANR	1456341	Identifier	utf		1456050	0					
ANR	1456342	PrimaryExpression	0x10ffffU		1456050	1					
ANR	1456343	PrimaryExpression	0xffU		1456050	2					
ANR	1456344	CompoundStatement		80:10:2602:2602	1456050	1					
ANR	1456345	ExpressionStatement	* errorcodeptr = ERR76	1075:10:46387:46408	1456050	0	True				
ANR	1456346	AssignmentExpression	* errorcodeptr = ERR76		1456050	0		=			
ANR	1456347	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456348	UnaryOperator	*		1456050	0					
ANR	1456349	Identifier	errorcodeptr		1456050	1					
ANR	1456350	Identifier	ERR76		1456050	1					
ANR	1456351	ElseStatement	else		1456050	0					
ANR	1456352	IfStatement	if ( utf && c >= 0xd800 && c <= 0xdfff )		1456050	0					
ANR	1456353	Condition	utf && c >= 0xd800 && c <= 0xdfff	1077:17:46439:46471	1456050	0	True				
ANR	1456354	AndExpression	utf && c >= 0xd800 && c <= 0xdfff		1456050	0		&&			
ANR	1456355	Identifier	utf		1456050	0					
ANR	1456356	AndExpression	c >= 0xd800 && c <= 0xdfff		1456050	1		&&			
ANR	1456357	RelationalExpression	c >= 0xd800		1456050	0		>=			
ANR	1456358	Identifier	c		1456050	0					
ANR	1456359	PrimaryExpression	0xd800		1456050	1					
ANR	1456360	RelationalExpression	c <= 0xdfff		1456050	1		<=			
ANR	1456361	Identifier	c		1456050	0					
ANR	1456362	PrimaryExpression	0xdfff		1456050	1					
ANR	1456363	ExpressionStatement	* errorcodeptr = ERR73	1077:52:46474:46495	1456050	1	True				
ANR	1456364	AssignmentExpression	* errorcodeptr = ERR73		1456050	0		=			
ANR	1456365	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456366	UnaryOperator	*		1456050	0					
ANR	1456367	Identifier	errorcodeptr		1456050	1					
ANR	1456368	Identifier	ERR73		1456050	1					
ANR	1456369	ElseStatement	else		1456050	0					
ANR	1456370	ExpressionStatement	* errorcodeptr = ERR37	1081:6:46530:46551	1456050	0	True				
ANR	1456371	AssignmentExpression	* errorcodeptr = ERR37		1456050	0		=			
ANR	1456372	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456373	UnaryOperator	*		1456050	0					
ANR	1456374	Identifier	errorcodeptr		1456050	1					
ANR	1456375	Identifier	ERR37		1456050	1					
ANR	1456376	BreakStatement	break ;	1082:4:46557:46562	1456050	6	True				
ANR	1456377	Label	case CHAR_U :	1084:4:46569:46580	1456050	7	True				
ANR	1456378	Identifier	CHAR_U		1456050	0					
ANR	1456379	IfStatement	if ( ( options & PCRE_JAVASCRIPT_COMPAT ) == 0 )		1456050	8					
ANR	1456380	Condition	( options & PCRE_JAVASCRIPT_COMPAT ) == 0	1086:8:46644:46682	1456050	0	True				
ANR	1456381	EqualityExpression	( options & PCRE_JAVASCRIPT_COMPAT ) == 0		1456050	0		==			
ANR	1456382	BitAndExpression	options & PCRE_JAVASCRIPT_COMPAT		1456050	0		&			
ANR	1456383	Identifier	options		1456050	0					
ANR	1456384	Identifier	PCRE_JAVASCRIPT_COMPAT		1456050	1					
ANR	1456385	PrimaryExpression	0		1456050	1					
ANR	1456386	ExpressionStatement	* errorcodeptr = ERR37	1086:49:46685:46706	1456050	1	True				
ANR	1456387	AssignmentExpression	* errorcodeptr = ERR37		1456050	0		=			
ANR	1456388	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456389	UnaryOperator	*		1456050	0					
ANR	1456390	Identifier	errorcodeptr		1456050	1					
ANR	1456391	Identifier	ERR37		1456050	1					
ANR	1456392	BreakStatement	break ;	1087:4:46712:46717	1456050	9	True				
ANR	1456393	Label	case CHAR_g :	1106:4:47554:47565	1456050	10	True				
ANR	1456394	Identifier	CHAR_g		1456050	0					
ANR	1456395	IfStatement	if ( isclass )		1456050	11					
ANR	1456396	Condition	isclass	1107:8:47575:47581	1456050	0	True				
ANR	1456397	Identifier	isclass		1456050	0					
ANR	1456398	BreakStatement	break ;	1107:17:47584:47589	1456050	1	True				
ANR	1456399	IfStatement	if ( ptr [ 1 ] == CHAR_LESS_THAN_SIGN || ptr [ 1 ] == CHAR_APOSTROPHE )		1456050	12					
ANR	1456400	Condition	ptr [ 1 ] == CHAR_LESS_THAN_SIGN || ptr [ 1 ] == CHAR_APOSTROPHE	1108:8:47599:47656	1456050	0	True				
ANR	1456401	OrExpression	ptr [ 1 ] == CHAR_LESS_THAN_SIGN || ptr [ 1 ] == CHAR_APOSTROPHE		1456050	0		||			
ANR	1456402	EqualityExpression	ptr [ 1 ] == CHAR_LESS_THAN_SIGN		1456050	0		==			
ANR	1456403	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456404	Identifier	ptr		1456050	0					
ANR	1456405	PrimaryExpression	1		1456050	1					
ANR	1456406	Identifier	CHAR_LESS_THAN_SIGN		1456050	1					
ANR	1456407	EqualityExpression	ptr [ 1 ] == CHAR_APOSTROPHE		1456050	1		==			
ANR	1456408	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456409	Identifier	ptr		1456050	0					
ANR	1456410	PrimaryExpression	1		1456050	1					
ANR	1456411	Identifier	CHAR_APOSTROPHE		1456050	1					
ANR	1456412	CompoundStatement		115:6:3892:3892	1456050	1					
ANR	1456413	ExpressionStatement	escape = ESC_g	1110:6:47673:47687	1456050	0	True				
ANR	1456414	AssignmentExpression	escape = ESC_g		1456050	0		=			
ANR	1456415	Identifier	escape		1456050	0					
ANR	1456416	Identifier	ESC_g		1456050	1					
ANR	1456417	BreakStatement	break ;	1111:6:47695:47700	1456050	1	True				
ANR	1456418	IfStatement	if ( ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET )		1456050	13					
ANR	1456419	Condition	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET	1116:8:47763:47795	1456050	0	True				
ANR	1456420	EqualityExpression	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET		1456050	0		==			
ANR	1456421	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456422	Identifier	ptr		1456050	0					
ANR	1456423	PrimaryExpression	1		1456050	1					
ANR	1456424	Identifier	CHAR_LEFT_CURLY_BRACKET		1456050	1					
ANR	1456425	CompoundStatement		124:6:4039:4058	1456050	1					
ANR	1456426	IdentifierDeclStatement	const pcre_uchar * p ;	1118:6:47812:47831	1456050	0	True				
ANR	1456427	IdentifierDecl	* p		1456050	0					
ANR	1456428	IdentifierDeclType	const pcre_uchar *		1456050	0					
ANR	1456429	Identifier	p		1456050	1					
ANR	1456430	ForStatement	for ( p = ptr + 2 ; * p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET ; p ++ )		1456050	1					
ANR	1456431	ForInit	p = ptr + 2 ;	1119:11:47844:47853	1456050	0	True				
ANR	1456432	AssignmentExpression	p = ptr + 2		1456050	0		=			
ANR	1456433	Identifier	p		1456050	0					
ANR	1456434	AdditiveExpression	ptr + 2		1456050	1		+			
ANR	1456435	Identifier	ptr		1456050	0					
ANR	1456436	PrimaryExpression	2		1456050	1					
ANR	1456437	Condition	* p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET	1119:22:47855:47903	1456050	1	True				
ANR	1456438	AndExpression	* p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET		1456050	0		&&			
ANR	1456439	EqualityExpression	* p != CHAR_NULL		1456050	0		!=			
ANR	1456440	UnaryOperationExpression	* p		1456050	0					
ANR	1456441	UnaryOperator	*		1456050	0					
ANR	1456442	Identifier	p		1456050	1					
ANR	1456443	Identifier	CHAR_NULL		1456050	1					
ANR	1456444	EqualityExpression	* p != CHAR_RIGHT_CURLY_BRACKET		1456050	1		!=			
ANR	1456445	UnaryOperationExpression	* p		1456050	0					
ANR	1456446	UnaryOperator	*		1456050	0					
ANR	1456447	Identifier	p		1456050	1					
ANR	1456448	Identifier	CHAR_RIGHT_CURLY_BRACKET		1456050	1					
ANR	1456449	PostIncDecOperationExpression	p ++	1119:73:47906:47908	1456050	2	True				
ANR	1456450	Identifier	p		1456050	0					
ANR	1456451	IncDec	++		1456050	1					
ANR	1456452	IfStatement	if ( * p != CHAR_MINUS && ! IS_DIGIT ( * p ) )		1456050	3					
ANR	1456453	Condition	* p != CHAR_MINUS && ! IS_DIGIT ( * p )	1120:12:47923:47955	1456050	0	True				
ANR	1456454	AndExpression	* p != CHAR_MINUS && ! IS_DIGIT ( * p )		1456050	0		&&			
ANR	1456455	EqualityExpression	* p != CHAR_MINUS		1456050	0		!=			
ANR	1456456	UnaryOperationExpression	* p		1456050	0					
ANR	1456457	UnaryOperator	*		1456050	0					
ANR	1456458	Identifier	p		1456050	1					
ANR	1456459	Identifier	CHAR_MINUS		1456050	1					
ANR	1456460	UnaryOperationExpression	! IS_DIGIT ( * p )		1456050	1					
ANR	1456461	UnaryOperator	!		1456050	0					
ANR	1456462	CallExpression	IS_DIGIT ( * p )		1456050	1					
ANR	1456463	Callee	IS_DIGIT		1456050	0					
ANR	1456464	Identifier	IS_DIGIT		1456050	0					
ANR	1456465	ArgumentList	* p		1456050	1					
ANR	1456466	Argument	* p		1456050	0					
ANR	1456467	UnaryOperationExpression	* p		1456050	0					
ANR	1456468	UnaryOperator	*		1456050	0					
ANR	1456469	Identifier	p		1456050	1					
ANR	1456470	BreakStatement	break ;	1120:47:47958:47963	1456050	1	True				
ANR	1456471	IfStatement	if ( * p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET )		1456050	2					
ANR	1456472	Condition	* p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET	1121:10:47975:48023	1456050	0	True				
ANR	1456473	AndExpression	* p != CHAR_NULL && * p != CHAR_RIGHT_CURLY_BRACKET		1456050	0		&&			
ANR	1456474	EqualityExpression	* p != CHAR_NULL		1456050	0		!=			
ANR	1456475	UnaryOperationExpression	* p		1456050	0					
ANR	1456476	UnaryOperator	*		1456050	0					
ANR	1456477	Identifier	p		1456050	1					
ANR	1456478	Identifier	CHAR_NULL		1456050	1					
ANR	1456479	EqualityExpression	* p != CHAR_RIGHT_CURLY_BRACKET		1456050	1		!=			
ANR	1456480	UnaryOperationExpression	* p		1456050	0					
ANR	1456481	UnaryOperator	*		1456050	0					
ANR	1456482	Identifier	p		1456050	1					
ANR	1456483	Identifier	CHAR_RIGHT_CURLY_BRACKET		1456050	1					
ANR	1456484	CompoundStatement		128:8:4261:4261	1456050	1					
ANR	1456485	ExpressionStatement	escape = ESC_k	1123:8:48044:48058	1456050	0	True				
ANR	1456486	AssignmentExpression	escape = ESC_k		1456050	0		=			
ANR	1456487	Identifier	escape		1456050	0					
ANR	1456488	Identifier	ESC_k		1456050	1					
ANR	1456489	BreakStatement	break ;	1124:8:48068:48073	1456050	1	True				
ANR	1456490	ExpressionStatement	braced = TRUE	1126:6:48091:48104	1456050	3	True				
ANR	1456491	AssignmentExpression	braced = TRUE		1456050	0		=			
ANR	1456492	Identifier	braced		1456050	0					
ANR	1456493	Identifier	TRUE		1456050	1					
ANR	1456494	ExpressionStatement	ptr ++	1127:6:48112:48117	1456050	4	True				
ANR	1456495	PostIncDecOperationExpression	ptr ++		1456050	0					
ANR	1456496	Identifier	ptr		1456050	0					
ANR	1456497	IncDec	++		1456050	1					
ANR	1456498	ElseStatement	else		1456050	0					
ANR	1456499	ExpressionStatement	braced = FALSE	1129:9:48136:48150	1456050	0	True				
ANR	1456500	AssignmentExpression	braced = FALSE		1456050	0		=			
ANR	1456501	Identifier	braced		1456050	0					
ANR	1456502	Identifier	FALSE		1456050	1					
ANR	1456503	IfStatement	if ( ptr [ 1 ] == CHAR_MINUS )		1456050	14					
ANR	1456504	Condition	ptr [ 1 ] == CHAR_MINUS	1131:8:48161:48180	1456050	0	True				
ANR	1456505	EqualityExpression	ptr [ 1 ] == CHAR_MINUS		1456050	0		==			
ANR	1456506	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456507	Identifier	ptr		1456050	0					
ANR	1456508	PrimaryExpression	1		1456050	1					
ANR	1456509	Identifier	CHAR_MINUS		1456050	1					
ANR	1456510	CompoundStatement		138:6:4416:4416	1456050	1					
ANR	1456511	ExpressionStatement	negated = TRUE	1133:6:48197:48211	1456050	0	True				
ANR	1456512	AssignmentExpression	negated = TRUE		1456050	0		=			
ANR	1456513	Identifier	negated		1456050	0					
ANR	1456514	Identifier	TRUE		1456050	1					
ANR	1456515	ExpressionStatement	ptr ++	1134:6:48219:48224	1456050	1	True				
ANR	1456516	PostIncDecOperationExpression	ptr ++		1456050	0					
ANR	1456517	Identifier	ptr		1456050	0					
ANR	1456518	IncDec	++		1456050	1					
ANR	1456519	ElseStatement	else		1456050	0					
ANR	1456520	ExpressionStatement	negated = FALSE	1136:9:48243:48258	1456050	0	True				
ANR	1456521	AssignmentExpression	negated = FALSE		1456050	0		=			
ANR	1456522	Identifier	negated		1456050	0					
ANR	1456523	Identifier	FALSE		1456050	1					
ANR	1456524	ExpressionStatement	s = 0	1139:4:48341:48346	1456050	15	True				
ANR	1456525	AssignmentExpression	s = 0		1456050	0		=			
ANR	1456526	Identifier	s		1456050	0					
ANR	1456527	PrimaryExpression	0		1456050	1					
ANR	1456528	ExpressionStatement	overflow = FALSE	1140:4:48352:48368	1456050	16	True				
ANR	1456529	AssignmentExpression	overflow = FALSE		1456050	0		=			
ANR	1456530	Identifier	overflow		1456050	0					
ANR	1456531	Identifier	FALSE		1456050	1					
ANR	1456532	WhileStatement	while ( IS_DIGIT ( ptr [ 1 ] ) )		1456050	17					
ANR	1456533	Condition	IS_DIGIT ( ptr [ 1 ] )	1141:11:48381:48396	1456050	0	True				
ANR	1456534	CallExpression	IS_DIGIT ( ptr [ 1 ] )		1456050	0					
ANR	1456535	Callee	IS_DIGIT		1456050	0					
ANR	1456536	Identifier	IS_DIGIT		1456050	0					
ANR	1456537	ArgumentList	ptr [ 1 ]		1456050	1					
ANR	1456538	Argument	ptr [ 1 ]		1456050	0					
ANR	1456539	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456540	Identifier	ptr		1456050	0					
ANR	1456541	PrimaryExpression	1		1456050	1					
ANR	1456542	CompoundStatement		148:6:4632:4632	1456050	1					
ANR	1456543	IfStatement	if ( s > INT_MAX / 10 - 1 )		1456050	0					
ANR	1456544	Condition	s > INT_MAX / 10 - 1	1143:10:48417:48436	1456050	0	True				
ANR	1456545	RelationalExpression	s > INT_MAX / 10 - 1		1456050	0		>			
ANR	1456546	Identifier	s		1456050	0					
ANR	1456547	AdditiveExpression	INT_MAX / 10 - 1		1456050	1		-			
ANR	1456548	MultiplicativeExpression	INT_MAX / 10		1456050	0		/			
ANR	1456549	Identifier	INT_MAX		1456050	0					
ANR	1456550	PrimaryExpression	10		1456050	1					
ANR	1456551	PrimaryExpression	1		1456050	1					
ANR	1456552	CompoundStatement		150:8:4697:4697	1456050	1					
ANR	1456553	ExpressionStatement	overflow = TRUE	1145:8:48480:48495	1456050	0	True				
ANR	1456554	AssignmentExpression	overflow = TRUE		1456050	0		=			
ANR	1456555	Identifier	overflow		1456050	0					
ANR	1456556	Identifier	TRUE		1456050	1					
ANR	1456557	BreakStatement	break ;	1146:8:48505:48510	1456050	1	True				
ANR	1456558	ExpressionStatement	s = s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )	1148:6:48528:48565	1456050	1	True				
ANR	1456559	AssignmentExpression	s = s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )		1456050	0		=			
ANR	1456560	Identifier	s		1456050	0					
ANR	1456561	AdditiveExpression	s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )		1456050	1		+			
ANR	1456562	MultiplicativeExpression	s * 10		1456050	0		*			
ANR	1456563	Identifier	s		1456050	0					
ANR	1456564	PrimaryExpression	10		1456050	1					
ANR	1456565	CastExpression	( int ) ( * ( ++ ptr ) - CHAR_0 )		1456050	1					
ANR	1456566	CastTarget	int		1456050	0					
ANR	1456567	AdditiveExpression	* ( ++ ptr ) - CHAR_0		1456050	1		-			
ANR	1456568	UnaryOperationExpression	* ( ++ ptr )		1456050	0					
ANR	1456569	UnaryOperator	*		1456050	0					
ANR	1456570	UnaryExpression	++ ptr		1456050	1					
ANR	1456571	IncDec	++		1456050	0					
ANR	1456572	Identifier	ptr		1456050	1					
ANR	1456573	Identifier	CHAR_0		1456050	1					
ANR	1456574	IfStatement	if ( overflow )		1456050	18					
ANR	1456575	Condition	overflow	1150:8:48583:48590	1456050	0	True				
ANR	1456576	Identifier	overflow		1456050	0					
ANR	1456577	CompoundStatement		157:6:4849:4849	1456050	1					
ANR	1456578	WhileStatement	while ( IS_DIGIT ( ptr [ 1 ] ) )		1456050	0					
ANR	1456579	Condition	IS_DIGIT ( ptr [ 1 ] )	1152:13:48637:48652	1456050	0	True				
ANR	1456580	CallExpression	IS_DIGIT ( ptr [ 1 ] )		1456050	0					
ANR	1456581	Callee	IS_DIGIT		1456050	0					
ANR	1456582	Identifier	IS_DIGIT		1456050	0					
ANR	1456583	ArgumentList	ptr [ 1 ]		1456050	1					
ANR	1456584	Argument	ptr [ 1 ]		1456050	0					
ANR	1456585	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456586	Identifier	ptr		1456050	0					
ANR	1456587	PrimaryExpression	1		1456050	1					
ANR	1456588	ExpressionStatement	ptr ++	1153:8:48663:48668	1456050	1	True				
ANR	1456589	PostIncDecOperationExpression	ptr ++		1456050	0					
ANR	1456590	Identifier	ptr		1456050	0					
ANR	1456591	IncDec	++		1456050	1					
ANR	1456592	ExpressionStatement	* errorcodeptr = ERR61	1154:6:48676:48697	1456050	1	True				
ANR	1456593	AssignmentExpression	* errorcodeptr = ERR61		1456050	0		=			
ANR	1456594	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456595	UnaryOperator	*		1456050	0					
ANR	1456596	Identifier	errorcodeptr		1456050	1					
ANR	1456597	Identifier	ERR61		1456050	1					
ANR	1456598	BreakStatement	break ;	1155:6:48705:48710	1456050	2	True				
ANR	1456599	IfStatement	if ( braced && * ( ++ ptr ) != CHAR_RIGHT_CURLY_BRACKET )		1456050	19					
ANR	1456600	Condition	braced && * ( ++ ptr ) != CHAR_RIGHT_CURLY_BRACKET	1158:8:48729:48774	1456050	0	True				
ANR	1456601	AndExpression	braced && * ( ++ ptr ) != CHAR_RIGHT_CURLY_BRACKET		1456050	0		&&			
ANR	1456602	Identifier	braced		1456050	0					
ANR	1456603	EqualityExpression	* ( ++ ptr ) != CHAR_RIGHT_CURLY_BRACKET		1456050	1		!=			
ANR	1456604	UnaryOperationExpression	* ( ++ ptr )		1456050	0					
ANR	1456605	UnaryOperator	*		1456050	0					
ANR	1456606	UnaryExpression	++ ptr		1456050	1					
ANR	1456607	IncDec	++		1456050	0					
ANR	1456608	Identifier	ptr		1456050	1					
ANR	1456609	Identifier	CHAR_RIGHT_CURLY_BRACKET		1456050	1					
ANR	1456610	CompoundStatement		165:6:5010:5010	1456050	1					
ANR	1456611	ExpressionStatement	* errorcodeptr = ERR57	1160:6:48791:48812	1456050	0	True				
ANR	1456612	AssignmentExpression	* errorcodeptr = ERR57		1456050	0		=			
ANR	1456613	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456614	UnaryOperator	*		1456050	0					
ANR	1456615	Identifier	errorcodeptr		1456050	1					
ANR	1456616	Identifier	ERR57		1456050	1					
ANR	1456617	BreakStatement	break ;	1161:6:48820:48825	1456050	1	True				
ANR	1456618	IfStatement	if ( s == 0 )		1456050	20					
ANR	1456619	Condition	s == 0	1164:8:48844:48849	1456050	0	True				
ANR	1456620	EqualityExpression	s == 0		1456050	0		==			
ANR	1456621	Identifier	s		1456050	0					
ANR	1456622	PrimaryExpression	0		1456050	1					
ANR	1456623	CompoundStatement		171:6:5085:5085	1456050	1					
ANR	1456624	ExpressionStatement	* errorcodeptr = ERR58	1166:6:48866:48887	1456050	0	True				
ANR	1456625	AssignmentExpression	* errorcodeptr = ERR58		1456050	0		=			
ANR	1456626	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456627	UnaryOperator	*		1456050	0					
ANR	1456628	Identifier	errorcodeptr		1456050	1					
ANR	1456629	Identifier	ERR58		1456050	1					
ANR	1456630	BreakStatement	break ;	1167:6:48895:48900	1456050	1	True				
ANR	1456631	IfStatement	if ( negated )		1456050	21					
ANR	1456632	Condition	negated	1170:8:48919:48925	1456050	0	True				
ANR	1456633	Identifier	negated		1456050	0					
ANR	1456634	CompoundStatement		177:6:5161:5161	1456050	1					
ANR	1456635	IfStatement	if ( s > bracount )		1456050	0					
ANR	1456636	Condition	s > bracount	1172:10:48946:48957	1456050	0	True				
ANR	1456637	RelationalExpression	s > bracount		1456050	0		>			
ANR	1456638	Identifier	s		1456050	0					
ANR	1456639	Identifier	bracount		1456050	1					
ANR	1456640	CompoundStatement		179:8:5195:5195	1456050	1					
ANR	1456641	ExpressionStatement	* errorcodeptr = ERR15	1174:8:48978:48999	1456050	0	True				
ANR	1456642	AssignmentExpression	* errorcodeptr = ERR15		1456050	0		=			
ANR	1456643	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456644	UnaryOperator	*		1456050	0					
ANR	1456645	Identifier	errorcodeptr		1456050	1					
ANR	1456646	Identifier	ERR15		1456050	1					
ANR	1456647	BreakStatement	break ;	1175:8:49009:49014	1456050	1	True				
ANR	1456648	ExpressionStatement	s = bracount - ( s - 1 )	1177:6:49032:49054	1456050	1	True				
ANR	1456649	AssignmentExpression	s = bracount - ( s - 1 )		1456050	0		=			
ANR	1456650	Identifier	s		1456050	0					
ANR	1456651	AdditiveExpression	bracount - ( s - 1 )		1456050	1		-			
ANR	1456652	Identifier	bracount		1456050	0					
ANR	1456653	AdditiveExpression	s - 1		1456050	1		-			
ANR	1456654	Identifier	s		1456050	0					
ANR	1456655	PrimaryExpression	1		1456050	1					
ANR	1456656	ExpressionStatement	escape = - s	1180:4:49069:49080	1456050	22	True				
ANR	1456657	AssignmentExpression	escape = - s		1456050	0		=			
ANR	1456658	Identifier	escape		1456050	0					
ANR	1456659	UnaryOperationExpression	- s		1456050	1					
ANR	1456660	UnaryOperator	-		1456050	0					
ANR	1456661	Identifier	s		1456050	1					
ANR	1456662	BreakStatement	break ;	1181:4:49086:49091	1456050	23	True				
ANR	1456663	Label	case CHAR_1 :	1199:4:50036:50047	1456050	24	True				
ANR	1456664	Identifier	CHAR_1		1456050	0					
ANR	1456665	Label	case CHAR_2 :	1199:17:50049:50060	1456050	25	True				
ANR	1456666	Identifier	CHAR_2		1456050	0					
ANR	1456667	Label	case CHAR_3 :	1199:30:50062:50073	1456050	26	True				
ANR	1456668	Identifier	CHAR_3		1456050	0					
ANR	1456669	Label	case CHAR_4 :	1199:43:50075:50086	1456050	27	True				
ANR	1456670	Identifier	CHAR_4		1456050	0					
ANR	1456671	Label	case CHAR_5 :	1199:56:50088:50099	1456050	28	True				
ANR	1456672	Identifier	CHAR_5		1456050	0					
ANR	1456673	Label	case CHAR_6 :	1200:4:50105:50116	1456050	29	True				
ANR	1456674	Identifier	CHAR_6		1456050	0					
ANR	1456675	Label	case CHAR_7 :	1200:17:50118:50129	1456050	30	True				
ANR	1456676	Identifier	CHAR_7		1456050	0					
ANR	1456677	Label	case CHAR_8 :	1200:30:50131:50142	1456050	31	True				
ANR	1456678	Identifier	CHAR_8		1456050	0					
ANR	1456679	Label	case CHAR_9 :	1200:43:50144:50155	1456050	32	True				
ANR	1456680	Identifier	CHAR_9		1456050	0					
ANR	1456681	IfStatement	if ( ! isclass )		1456050	33					
ANR	1456682	Condition	! isclass	1202:8:50166:50173	1456050	0	True				
ANR	1456683	UnaryOperationExpression	! isclass		1456050	0					
ANR	1456684	UnaryOperator	!		1456050	0					
ANR	1456685	Identifier	isclass		1456050	1					
ANR	1456686	CompoundStatement		209:6:6409:6409	1456050	1					
ANR	1456687	ExpressionStatement	oldptr = ptr	1204:6:50190:50202	1456050	0	True				
ANR	1456688	AssignmentExpression	oldptr = ptr		1456050	0		=			
ANR	1456689	Identifier	oldptr		1456050	0					
ANR	1456690	Identifier	ptr		1456050	1					
ANR	1456691	ExpressionStatement	s = ( int ) ( c - CHAR_0 )	1206:6:50288:50308	1456050	1	True				
ANR	1456692	AssignmentExpression	s = ( int ) ( c - CHAR_0 )		1456050	0		=			
ANR	1456693	Identifier	s		1456050	0					
ANR	1456694	CastExpression	( int ) ( c - CHAR_0 )		1456050	1					
ANR	1456695	CastTarget	int		1456050	0					
ANR	1456696	AdditiveExpression	c - CHAR_0		1456050	1		-			
ANR	1456697	Identifier	c		1456050	0					
ANR	1456698	Identifier	CHAR_0		1456050	1					
ANR	1456699	ExpressionStatement	overflow = FALSE	1207:6:50316:50332	1456050	2	True				
ANR	1456700	AssignmentExpression	overflow = FALSE		1456050	0		=			
ANR	1456701	Identifier	overflow		1456050	0					
ANR	1456702	Identifier	FALSE		1456050	1					
ANR	1456703	WhileStatement	while ( IS_DIGIT ( ptr [ 1 ] ) )		1456050	3					
ANR	1456704	Condition	IS_DIGIT ( ptr [ 1 ] )	1208:13:50347:50362	1456050	0	True				
ANR	1456705	CallExpression	IS_DIGIT ( ptr [ 1 ] )		1456050	0					
ANR	1456706	Callee	IS_DIGIT		1456050	0					
ANR	1456707	Identifier	IS_DIGIT		1456050	0					
ANR	1456708	ArgumentList	ptr [ 1 ]		1456050	1					
ANR	1456709	Argument	ptr [ 1 ]		1456050	0					
ANR	1456710	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456711	Identifier	ptr		1456050	0					
ANR	1456712	PrimaryExpression	1		1456050	1					
ANR	1456713	CompoundStatement		215:8:6600:6600	1456050	1					
ANR	1456714	IfStatement	if ( s > INT_MAX / 10 - 1 )		1456050	0					
ANR	1456715	Condition	s > INT_MAX / 10 - 1	1210:12:50387:50406	1456050	0	True				
ANR	1456716	RelationalExpression	s > INT_MAX / 10 - 1		1456050	0		>			
ANR	1456717	Identifier	s		1456050	0					
ANR	1456718	AdditiveExpression	INT_MAX / 10 - 1		1456050	1		-			
ANR	1456719	MultiplicativeExpression	INT_MAX / 10		1456050	0		/			
ANR	1456720	Identifier	INT_MAX		1456050	0					
ANR	1456721	PrimaryExpression	10		1456050	1					
ANR	1456722	PrimaryExpression	1		1456050	1					
ANR	1456723	CompoundStatement		217:10:6669:6669	1456050	1					
ANR	1456724	ExpressionStatement	overflow = TRUE	1212:10:50454:50469	1456050	0	True				
ANR	1456725	AssignmentExpression	overflow = TRUE		1456050	0		=			
ANR	1456726	Identifier	overflow		1456050	0					
ANR	1456727	Identifier	TRUE		1456050	1					
ANR	1456728	BreakStatement	break ;	1213:10:50481:50486	1456050	1	True				
ANR	1456729	ExpressionStatement	s = s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )	1215:8:50508:50545	1456050	1	True				
ANR	1456730	AssignmentExpression	s = s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )		1456050	0		=			
ANR	1456731	Identifier	s		1456050	0					
ANR	1456732	AdditiveExpression	s * 10 + ( int ) ( * ( ++ ptr ) - CHAR_0 )		1456050	1		+			
ANR	1456733	MultiplicativeExpression	s * 10		1456050	0		*			
ANR	1456734	Identifier	s		1456050	0					
ANR	1456735	PrimaryExpression	10		1456050	1					
ANR	1456736	CastExpression	( int ) ( * ( ++ ptr ) - CHAR_0 )		1456050	1					
ANR	1456737	CastTarget	int		1456050	0					
ANR	1456738	AdditiveExpression	* ( ++ ptr ) - CHAR_0		1456050	1		-			
ANR	1456739	UnaryOperationExpression	* ( ++ ptr )		1456050	0					
ANR	1456740	UnaryOperator	*		1456050	0					
ANR	1456741	UnaryExpression	++ ptr		1456050	1					
ANR	1456742	IncDec	++		1456050	0					
ANR	1456743	Identifier	ptr		1456050	1					
ANR	1456744	Identifier	CHAR_0		1456050	1					
ANR	1456745	IfStatement	if ( overflow )		1456050	4					
ANR	1456746	Condition	overflow	1217:10:50567:50574	1456050	0	True				
ANR	1456747	Identifier	overflow		1456050	0					
ANR	1456748	CompoundStatement		224:8:6835:6835	1456050	1					
ANR	1456749	WhileStatement	while ( IS_DIGIT ( ptr [ 1 ] ) )		1456050	0					
ANR	1456750	Condition	IS_DIGIT ( ptr [ 1 ] )	1219:15:50625:50640	1456050	0	True				
ANR	1456751	CallExpression	IS_DIGIT ( ptr [ 1 ] )		1456050	0					
ANR	1456752	Callee	IS_DIGIT		1456050	0					
ANR	1456753	Identifier	IS_DIGIT		1456050	0					
ANR	1456754	ArgumentList	ptr [ 1 ]		1456050	1					
ANR	1456755	Argument	ptr [ 1 ]		1456050	0					
ANR	1456756	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456757	Identifier	ptr		1456050	0					
ANR	1456758	PrimaryExpression	1		1456050	1					
ANR	1456759	ExpressionStatement	ptr ++	1220:10:50653:50658	1456050	1	True				
ANR	1456760	PostIncDecOperationExpression	ptr ++		1456050	0					
ANR	1456761	Identifier	ptr		1456050	0					
ANR	1456762	IncDec	++		1456050	1					
ANR	1456763	ExpressionStatement	* errorcodeptr = ERR61	1221:8:50668:50689	1456050	1	True				
ANR	1456764	AssignmentExpression	* errorcodeptr = ERR61		1456050	0		=			
ANR	1456765	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456766	UnaryOperator	*		1456050	0					
ANR	1456767	Identifier	errorcodeptr		1456050	1					
ANR	1456768	Identifier	ERR61		1456050	1					
ANR	1456769	BreakStatement	break ;	1222:8:50699:50704	1456050	2	True				
ANR	1456770	IfStatement	if ( s < 8 || s <= bracount )		1456050	5					
ANR	1456771	Condition	s < 8 || s <= bracount	1224:10:50726:50747	1456050	0	True				
ANR	1456772	OrExpression	s < 8 || s <= bracount		1456050	0		||			
ANR	1456773	RelationalExpression	s < 8		1456050	0		<			
ANR	1456774	Identifier	s		1456050	0					
ANR	1456775	PrimaryExpression	8		1456050	1					
ANR	1456776	RelationalExpression	s <= bracount		1456050	1		<=			
ANR	1456777	Identifier	s		1456050	0					
ANR	1456778	Identifier	bracount		1456050	1					
ANR	1456779	CompoundStatement		231:8:7017:7017	1456050	1					
ANR	1456780	ExpressionStatement	escape = - s	1226:8:50800:50811	1456050	0	True				
ANR	1456781	AssignmentExpression	escape = - s		1456050	0		=			
ANR	1456782	Identifier	escape		1456050	0					
ANR	1456783	UnaryOperationExpression	- s		1456050	1					
ANR	1456784	UnaryOperator	-		1456050	0					
ANR	1456785	Identifier	s		1456050	1					
ANR	1456786	BreakStatement	break ;	1227:8:50821:50826	1456050	1	True				
ANR	1456787	ExpressionStatement	ptr = oldptr	1229:6:50844:50856	1456050	6	True				
ANR	1456788	AssignmentExpression	ptr = oldptr		1456050	0		=			
ANR	1456789	Identifier	ptr		1456050	0					
ANR	1456790	Identifier	oldptr		1456050	1					
ANR	1456791	IfStatement	if ( ( c = * ptr ) >= CHAR_8 )		1456050	34					
ANR	1456792	Condition	( c = * ptr ) >= CHAR_8	1237:8:51207:51226	1456050	0	True				
ANR	1456793	RelationalExpression	( c = * ptr ) >= CHAR_8		1456050	0		>=			
ANR	1456794	AssignmentExpression	c = * ptr		1456050	0		=			
ANR	1456795	Identifier	c		1456050	0					
ANR	1456796	UnaryOperationExpression	* ptr		1456050	1					
ANR	1456797	UnaryOperator	*		1456050	0					
ANR	1456798	Identifier	ptr		1456050	1					
ANR	1456799	Identifier	CHAR_8		1456050	1					
ANR	1456800	BreakStatement	break ;	1237:30:51229:51234	1456050	1	True				
ANR	1456801	Label	case CHAR_0 :	1247:4:51646:51657	1456050	35	True				
ANR	1456802	Identifier	CHAR_0		1456050	0					
ANR	1456803	ExpressionStatement	c -= CHAR_0	1248:4:51663:51674	1456050	36	True				
ANR	1456804	AssignmentExpression	c -= CHAR_0		1456050	0		-=			
ANR	1456805	Identifier	c		1456050	0					
ANR	1456806	Identifier	CHAR_0		1456050	1					
ANR	1456807	WhileStatement	while ( i ++ < 2 && ptr [ 1 ] >= CHAR_0 && ptr [ 1 ] <= CHAR_7 )		1456050	37					
ANR	1456808	Condition	i ++ < 2 && ptr [ 1 ] >= CHAR_0 && ptr [ 1 ] <= CHAR_7	1249:10:51686:51732	1456050	0	True				
ANR	1456809	AndExpression	i ++ < 2 && ptr [ 1 ] >= CHAR_0 && ptr [ 1 ] <= CHAR_7		1456050	0		&&			
ANR	1456810	RelationalExpression	i ++ < 2		1456050	0		<			
ANR	1456811	PostIncDecOperationExpression	i ++		1456050	0					
ANR	1456812	Identifier	i		1456050	0					
ANR	1456813	IncDec	++		1456050	1					
ANR	1456814	PrimaryExpression	2		1456050	1					
ANR	1456815	AndExpression	ptr [ 1 ] >= CHAR_0 && ptr [ 1 ] <= CHAR_7		1456050	1		&&			
ANR	1456816	RelationalExpression	ptr [ 1 ] >= CHAR_0		1456050	0		>=			
ANR	1456817	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456818	Identifier	ptr		1456050	0					
ANR	1456819	PrimaryExpression	1		1456050	1					
ANR	1456820	Identifier	CHAR_0		1456050	1					
ANR	1456821	RelationalExpression	ptr [ 1 ] <= CHAR_7		1456050	1		<=			
ANR	1456822	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456823	Identifier	ptr		1456050	0					
ANR	1456824	PrimaryExpression	1		1456050	1					
ANR	1456825	Identifier	CHAR_7		1456050	1					
ANR	1456826	ExpressionStatement	c = c * 8 + * ( ++ ptr ) - CHAR_0	1250:8:51743:51772	1456050	1	True				
ANR	1456827	AssignmentExpression	c = c * 8 + * ( ++ ptr ) - CHAR_0		1456050	0		=			
ANR	1456828	Identifier	c		1456050	0					
ANR	1456829	AdditiveExpression	c * 8 + * ( ++ ptr ) - CHAR_0		1456050	1		+			
ANR	1456830	MultiplicativeExpression	c * 8		1456050	0		*			
ANR	1456831	Identifier	c		1456050	0					
ANR	1456832	PrimaryExpression	8		1456050	1					
ANR	1456833	AdditiveExpression	* ( ++ ptr ) - CHAR_0		1456050	1		-			
ANR	1456834	UnaryOperationExpression	* ( ++ ptr )		1456050	0					
ANR	1456835	UnaryOperator	*		1456050	0					
ANR	1456836	UnaryExpression	++ ptr		1456050	1					
ANR	1456837	IncDec	++		1456050	0					
ANR	1456838	Identifier	ptr		1456050	1					
ANR	1456839	Identifier	CHAR_0		1456050	1					
ANR	1456840	IfStatement	if ( ! utf && c > 0xff )		1456050	38					
ANR	1456841	Condition	! utf && c > 0xff	1252:8:51803:51818	1456050	0	True				
ANR	1456842	AndExpression	! utf && c > 0xff		1456050	0		&&			
ANR	1456843	UnaryOperationExpression	! utf		1456050	0					
ANR	1456844	UnaryOperator	!		1456050	0					
ANR	1456845	Identifier	utf		1456050	1					
ANR	1456846	RelationalExpression	c > 0xff		1456050	1		>			
ANR	1456847	Identifier	c		1456050	0					
ANR	1456848	PrimaryExpression	0xff		1456050	1					
ANR	1456849	ExpressionStatement	* errorcodeptr = ERR51	1252:26:51821:51842	1456050	1	True				
ANR	1456850	AssignmentExpression	* errorcodeptr = ERR51		1456050	0		=			
ANR	1456851	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456852	UnaryOperator	*		1456050	0					
ANR	1456853	Identifier	errorcodeptr		1456050	1					
ANR	1456854	Identifier	ERR51		1456050	1					
ANR	1456855	BreakStatement	break ;	1254:4:51855:51860	1456050	39	True				
ANR	1456856	Label	case CHAR_o :	1259:4:52025:52036	1456050	40	True				
ANR	1456857	Identifier	CHAR_o		1456050	0					
ANR	1456858	IfStatement	if ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET )		1456050	41					
ANR	1456859	Condition	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET	1260:8:52046:52078	1456050	0	True				
ANR	1456860	EqualityExpression	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		1456050	0		!=			
ANR	1456861	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1456862	Identifier	ptr		1456050	0					
ANR	1456863	PrimaryExpression	1		1456050	1					
ANR	1456864	Identifier	CHAR_LEFT_CURLY_BRACKET		1456050	1					
ANR	1456865	ExpressionStatement	* errorcodeptr = ERR81	1260:43:52081:52102	1456050	1	True				
ANR	1456866	AssignmentExpression	* errorcodeptr = ERR81		1456050	0		=			
ANR	1456867	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456868	UnaryOperator	*		1456050	0					
ANR	1456869	Identifier	errorcodeptr		1456050	1					
ANR	1456870	Identifier	ERR81		1456050	1					
ANR	1456871	ElseStatement	else		1456050	0					
ANR	1456872	IfStatement	if ( ptr [ 2 ] == CHAR_RIGHT_CURLY_BRACKET )		1456050	0					
ANR	1456873	Condition	ptr [ 2 ] == CHAR_RIGHT_CURLY_BRACKET	1261:8:52117:52150	1456050	0	True				
ANR	1456874	EqualityExpression	ptr [ 2 ] == CHAR_RIGHT_CURLY_BRACKET		1456050	0		==			
ANR	1456875	ArrayIndexing	ptr [ 2 ]		1456050	0					
ANR	1456876	Identifier	ptr		1456050	0					
ANR	1456877	PrimaryExpression	2		1456050	1					
ANR	1456878	Identifier	CHAR_RIGHT_CURLY_BRACKET		1456050	1					
ANR	1456879	ExpressionStatement	* errorcodeptr = ERR86	1261:44:52153:52174	1456050	1	True				
ANR	1456880	AssignmentExpression	* errorcodeptr = ERR86		1456050	0		=			
ANR	1456881	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456882	UnaryOperator	*		1456050	0					
ANR	1456883	Identifier	errorcodeptr		1456050	1					
ANR	1456884	Identifier	ERR86		1456050	1					
ANR	1456885	ElseStatement	else		1456050	0					
ANR	1456886	CompoundStatement		268:6:8414:8414	1456050	0					
ANR	1456887	ExpressionStatement	ptr += 2	1263:6:52195:52203	1456050	0	True				
ANR	1456888	AssignmentExpression	ptr += 2		1456050	0		+=			
ANR	1456889	Identifier	ptr		1456050	0					
ANR	1456890	PrimaryExpression	2		1456050	1					
ANR	1456891	ExpressionStatement	c = 0	1264:6:52211:52216	1456050	1	True				
ANR	1456892	AssignmentExpression	c = 0		1456050	0		=			
ANR	1456893	Identifier	c		1456050	0					
ANR	1456894	PrimaryExpression	0		1456050	1					
ANR	1456895	ExpressionStatement	overflow = FALSE	1265:6:52224:52240	1456050	2	True				
ANR	1456896	AssignmentExpression	overflow = FALSE		1456050	0		=			
ANR	1456897	Identifier	overflow		1456050	0					
ANR	1456898	Identifier	FALSE		1456050	1					
ANR	1456899	WhileStatement	while ( * ptr >= CHAR_0 && * ptr <= CHAR_7 )		1456050	3					
ANR	1456900	Condition	* ptr >= CHAR_0 && * ptr <= CHAR_7	1266:13:52255:52286	1456050	0	True				
ANR	1456901	AndExpression	* ptr >= CHAR_0 && * ptr <= CHAR_7		1456050	0		&&			
ANR	1456902	RelationalExpression	* ptr >= CHAR_0		1456050	0		>=			
ANR	1456903	UnaryOperationExpression	* ptr		1456050	0					
ANR	1456904	UnaryOperator	*		1456050	0					
ANR	1456905	Identifier	ptr		1456050	1					
ANR	1456906	Identifier	CHAR_0		1456050	1					
ANR	1456907	RelationalExpression	* ptr <= CHAR_7		1456050	1		<=			
ANR	1456908	UnaryOperationExpression	* ptr		1456050	0					
ANR	1456909	UnaryOperator	*		1456050	0					
ANR	1456910	Identifier	ptr		1456050	1					
ANR	1456911	Identifier	CHAR_7		1456050	1					
ANR	1456912	CompoundStatement		274:17:8543:8566	1456050	1					
ANR	1456913	Statement	register	1268:8:52307:52314	1456050	0	True				
ANR	1456914	IdentifierDeclStatement	pcre_uint32 cc = * ptr ++ ;	1268:17:52316:52339	1456050	1	True				
ANR	1456915	IdentifierDecl	cc = * ptr ++		1456050	0					
ANR	1456916	IdentifierDeclType	pcre_uint32		1456050	0					
ANR	1456917	Identifier	cc		1456050	1					
ANR	1456918	AssignmentExpression	cc = * ptr ++		1456050	2		=			
ANR	1456919	Identifier	cc		1456050	0					
ANR	1456920	UnaryOperationExpression	* ptr ++		1456050	1					
ANR	1456921	UnaryOperator	*		1456050	0					
ANR	1456922	PostIncDecOperationExpression	ptr ++		1456050	1					
ANR	1456923	Identifier	ptr		1456050	0					
ANR	1456924	IncDec	++		1456050	1					
ANR	1456925	IfStatement	if ( c == 0 && cc == CHAR_0 )		1456050	2					
ANR	1456926	Condition	c == 0 && cc == CHAR_0	1269:12:52353:52374	1456050	0	True				
ANR	1456927	AndExpression	c == 0 && cc == CHAR_0		1456050	0		&&			
ANR	1456928	EqualityExpression	c == 0		1456050	0		==			
ANR	1456929	Identifier	c		1456050	0					
ANR	1456930	PrimaryExpression	0		1456050	1					
ANR	1456931	EqualityExpression	cc == CHAR_0		1456050	1		==			
ANR	1456932	Identifier	cc		1456050	0					
ANR	1456933	Identifier	CHAR_0		1456050	1					
ANR	1456934	ContinueStatement	continue ;	1269:36:52377:52385	1456050	1	True				
ANR	1456935	IfStatement	if ( c >= 0x20000000l )		1456050	3					
ANR	1456936	Condition	c >= 0x20000000l	1271:12:52446:52461	1456050	0	True				
ANR	1456937	RelationalExpression	c >= 0x20000000l		1456050	0		>=			
ANR	1456938	Identifier	c		1456050	0					
ANR	1456939	PrimaryExpression	0x20000000l		1456050	1					
ANR	1456940	CompoundStatement		277:30:8691:8691	1456050	1					
ANR	1456941	ExpressionStatement	overflow = TRUE	1271:32:52466:52481	1456050	0	True				
ANR	1456942	AssignmentExpression	overflow = TRUE		1456050	0		=			
ANR	1456943	Identifier	overflow		1456050	0					
ANR	1456944	Identifier	TRUE		1456050	1					
ANR	1456945	BreakStatement	break ;	1271:49:52483:52488	1456050	1	True				
ANR	1456946	ExpressionStatement	c = ( c << 3 ) + cc - CHAR_0	1273:8:52507:52534	1456050	4	True				
ANR	1456947	AssignmentExpression	c = ( c << 3 ) + cc - CHAR_0		1456050	0		=			
ANR	1456948	Identifier	c		1456050	0					
ANR	1456949	AdditiveExpression	( c << 3 ) + cc - CHAR_0		1456050	1		+			
ANR	1456950	ShiftExpression	c << 3		1456050	0		<<			
ANR	1456951	Identifier	c		1456050	0					
ANR	1456952	PrimaryExpression	3		1456050	1					
ANR	1456953	AdditiveExpression	cc - CHAR_0		1456050	1		-			
ANR	1456954	Identifier	cc		1456050	0					
ANR	1456955	Identifier	CHAR_0		1456050	1					
ANR	1456956	IfStatement	if ( c > ( utf ? 0x10ffffU : 0xffU ) )		1456050	5					
ANR	1456957	Condition	c > ( utf ? 0x10ffffU : 0xffU )	1275:12:52574:52602	1456050	0	True				
ANR	1456958	RelationalExpression	c > ( utf ? 0x10ffffU : 0xffU )		1456050	0		>			
ANR	1456959	Identifier	c		1456050	0					
ANR	1456960	ConditionalExpression	utf ? 0x10ffffU : 0xffU		1456050	1					
ANR	1456961	Condition	utf		1456050	0					
ANR	1456962	Identifier	utf		1456050	0					
ANR	1456963	PrimaryExpression	0x10ffffU		1456050	1					
ANR	1456964	PrimaryExpression	0xffU		1456050	2					
ANR	1456965	CompoundStatement		281:43:8832:8832	1456050	1					
ANR	1456966	ExpressionStatement	overflow = TRUE	1275:45:52607:52622	1456050	0	True				
ANR	1456967	AssignmentExpression	overflow = TRUE		1456050	0		=			
ANR	1456968	Identifier	overflow		1456050	0					
ANR	1456969	Identifier	TRUE		1456050	1					
ANR	1456970	BreakStatement	break ;	1275:62:52624:52629	1456050	1	True				
ANR	1456971	IfStatement	if ( overflow )		1456050	4					
ANR	1456972	Condition	overflow	1282:10:52853:52860	1456050	0	True				
ANR	1456973	Identifier	overflow		1456050	0					
ANR	1456974	CompoundStatement		289:8:9098:9098	1456050	1					
ANR	1456975	WhileStatement	while ( * ptr >= CHAR_0 && * ptr <= CHAR_7 )		1456050	0					
ANR	1456976	Condition	* ptr >= CHAR_0 && * ptr <= CHAR_7	1284:15:52888:52919	1456050	0	True				
ANR	1456977	AndExpression	* ptr >= CHAR_0 && * ptr <= CHAR_7		1456050	0		&&			
ANR	1456978	RelationalExpression	* ptr >= CHAR_0		1456050	0		>=			
ANR	1456979	UnaryOperationExpression	* ptr		1456050	0					
ANR	1456980	UnaryOperator	*		1456050	0					
ANR	1456981	Identifier	ptr		1456050	1					
ANR	1456982	Identifier	CHAR_0		1456050	1					
ANR	1456983	RelationalExpression	* ptr <= CHAR_7		1456050	1		<=			
ANR	1456984	UnaryOperationExpression	* ptr		1456050	0					
ANR	1456985	UnaryOperator	*		1456050	0					
ANR	1456986	Identifier	ptr		1456050	1					
ANR	1456987	Identifier	CHAR_7		1456050	1					
ANR	1456988	ExpressionStatement	ptr ++	1284:49:52922:52927	1456050	1	True				
ANR	1456989	PostIncDecOperationExpression	ptr ++		1456050	0					
ANR	1456990	Identifier	ptr		1456050	0					
ANR	1456991	IncDec	++		1456050	1					
ANR	1456992	ExpressionStatement	* errorcodeptr = ERR34	1285:8:52937:52958	1456050	1	True				
ANR	1456993	AssignmentExpression	* errorcodeptr = ERR34		1456050	0		=			
ANR	1456994	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1456995	UnaryOperator	*		1456050	0					
ANR	1456996	Identifier	errorcodeptr		1456050	1					
ANR	1456997	Identifier	ERR34		1456050	1					
ANR	1456998	ElseStatement	else		1456050	0					
ANR	1456999	IfStatement	if ( * ptr == CHAR_RIGHT_CURLY_BRACKET )		1456050	0					
ANR	1457000	Condition	* ptr == CHAR_RIGHT_CURLY_BRACKET	1287:15:52985:53016	1456050	0	True				
ANR	1457001	EqualityExpression	* ptr == CHAR_RIGHT_CURLY_BRACKET		1456050	0		==			
ANR	1457002	UnaryOperationExpression	* ptr		1456050	0					
ANR	1457003	UnaryOperator	*		1456050	0					
ANR	1457004	Identifier	ptr		1456050	1					
ANR	1457005	Identifier	CHAR_RIGHT_CURLY_BRACKET		1456050	1					
ANR	1457006	CompoundStatement		294:8:9254:9254	1456050	1					
ANR	1457007	IfStatement	if ( utf && c >= 0xd800 && c <= 0xdfff )		1456050	0					
ANR	1457008	Condition	utf && c >= 0xd800 && c <= 0xdfff	1289:12:53041:53073	1456050	0	True				
ANR	1457009	AndExpression	utf && c >= 0xd800 && c <= 0xdfff		1456050	0		&&			
ANR	1457010	Identifier	utf		1456050	0					
ANR	1457011	AndExpression	c >= 0xd800 && c <= 0xdfff		1456050	1		&&			
ANR	1457012	RelationalExpression	c >= 0xd800		1456050	0		>=			
ANR	1457013	Identifier	c		1456050	0					
ANR	1457014	PrimaryExpression	0xd800		1456050	1					
ANR	1457015	RelationalExpression	c <= 0xdfff		1456050	1		<=			
ANR	1457016	Identifier	c		1456050	0					
ANR	1457017	PrimaryExpression	0xdfff		1456050	1					
ANR	1457018	ExpressionStatement	* errorcodeptr = ERR73	1289:47:53076:53097	1456050	1	True				
ANR	1457019	AssignmentExpression	* errorcodeptr = ERR73		1456050	0		=			
ANR	1457020	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457021	UnaryOperator	*		1456050	0					
ANR	1457022	Identifier	errorcodeptr		1456050	1					
ANR	1457023	Identifier	ERR73		1456050	1					
ANR	1457024	ElseStatement	else		1456050	0					
ANR	1457025	ExpressionStatement	* errorcodeptr = ERR80	1291:11:53120:53141	1456050	0	True				
ANR	1457026	AssignmentExpression	* errorcodeptr = ERR80		1456050	0		=			
ANR	1457027	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457028	UnaryOperator	*		1456050	0					
ANR	1457029	Identifier	errorcodeptr		1456050	1					
ANR	1457030	Identifier	ERR80		1456050	1					
ANR	1457031	BreakStatement	break ;	1293:4:53155:53160	1456050	42	True				
ANR	1457032	Label	case CHAR_x :	1298:4:53302:53313	1456050	43	True				
ANR	1457033	Identifier	CHAR_x		1456050	0					
ANR	1457034	IfStatement	if ( ( options & PCRE_JAVASCRIPT_COMPAT ) != 0 )		1456050	44					
ANR	1457035	Condition	( options & PCRE_JAVASCRIPT_COMPAT ) != 0	1299:8:53323:53361	1456050	0	True				
ANR	1457036	EqualityExpression	( options & PCRE_JAVASCRIPT_COMPAT ) != 0		1456050	0		!=			
ANR	1457037	BitAndExpression	options & PCRE_JAVASCRIPT_COMPAT		1456050	0		&			
ANR	1457038	Identifier	options		1456050	0					
ANR	1457039	Identifier	PCRE_JAVASCRIPT_COMPAT		1456050	1					
ANR	1457040	PrimaryExpression	0		1456050	1					
ANR	1457041	CompoundStatement		306:6:9597:9597	1456050	1					
ANR	1457042	IfStatement	if ( MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0 )		1456050	0					
ANR	1457043	Condition	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0	1301:10:53382:53505	1456050	0	True				
ANR	1457044	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		1456050	0		&&			
ANR	1457045	CallExpression	MAX_255 ( ptr [ 1 ] )		1456050	0					
ANR	1457046	Callee	MAX_255		1456050	0					
ANR	1457047	Identifier	MAX_255		1456050	0					
ANR	1457048	ArgumentList	ptr [ 1 ]		1456050	1					
ANR	1457049	Argument	ptr [ 1 ]		1456050	0					
ANR	1457050	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1457051	Identifier	ptr		1456050	0					
ANR	1457052	PrimaryExpression	1		1456050	1					
ANR	1457053	AndExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 && MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		1456050	1		&&			
ANR	1457054	EqualityExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		1456050	0		!=			
ANR	1457055	BitAndExpression	digitab [ ptr [ 1 ] ] & ctype_xdigit		1456050	0		&			
ANR	1457056	ArrayIndexing	digitab [ ptr [ 1 ] ]		1456050	0					
ANR	1457057	Identifier	digitab		1456050	0					
ANR	1457058	ArrayIndexing	ptr [ 1 ]		1456050	1					
ANR	1457059	Identifier	ptr		1456050	0					
ANR	1457060	PrimaryExpression	1		1456050	1					
ANR	1457061	Identifier	ctype_xdigit		1456050	1					
ANR	1457062	PrimaryExpression	0		1456050	1					
ANR	1457063	AndExpression	MAX_255 ( ptr [ 2 ] ) && ( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		1456050	1		&&			
ANR	1457064	CallExpression	MAX_255 ( ptr [ 2 ] )		1456050	0					
ANR	1457065	Callee	MAX_255		1456050	0					
ANR	1457066	Identifier	MAX_255		1456050	0					
ANR	1457067	ArgumentList	ptr [ 2 ]		1456050	1					
ANR	1457068	Argument	ptr [ 2 ]		1456050	0					
ANR	1457069	ArrayIndexing	ptr [ 2 ]		1456050	0					
ANR	1457070	Identifier	ptr		1456050	0					
ANR	1457071	PrimaryExpression	2		1456050	1					
ANR	1457072	EqualityExpression	( digitab [ ptr [ 2 ] ] & ctype_xdigit ) != 0		1456050	1		!=			
ANR	1457073	BitAndExpression	digitab [ ptr [ 2 ] ] & ctype_xdigit		1456050	0		&			
ANR	1457074	ArrayIndexing	digitab [ ptr [ 2 ] ]		1456050	0					
ANR	1457075	Identifier	digitab		1456050	0					
ANR	1457076	ArrayIndexing	ptr [ 2 ]		1456050	1					
ANR	1457077	Identifier	ptr		1456050	0					
ANR	1457078	PrimaryExpression	2		1456050	1					
ANR	1457079	Identifier	ctype_xdigit		1456050	1					
ANR	1457080	PrimaryExpression	0		1456050	1					
ANR	1457081	CompoundStatement		309:8:9743:9743	1456050	1					
ANR	1457082	ExpressionStatement	c = 0	1304:8:53526:53531	1456050	0	True				
ANR	1457083	AssignmentExpression	c = 0		1456050	0		=			
ANR	1457084	Identifier	c		1456050	0					
ANR	1457085	PrimaryExpression	0		1456050	1					
ANR	1457086	ForStatement	for ( i = 0 ; i < 2 ; ++ i )		1456050	1					
ANR	1457087	ForInit	i = 0 ;	1305:13:53546:53551	1456050	0	True				
ANR	1457088	AssignmentExpression	i = 0		1456050	0		=			
ANR	1457089	Identifier	i		1456050	0					
ANR	1457090	PrimaryExpression	0		1456050	1					
ANR	1457091	Condition	i < 2	1305:20:53553:53557	1456050	1	True				
ANR	1457092	RelationalExpression	i < 2		1456050	0		<			
ANR	1457093	Identifier	i		1456050	0					
ANR	1457094	PrimaryExpression	2		1456050	1					
ANR	1457095	UnaryExpression	++ i	1305:27:53560:53562	1456050	2	True				
ANR	1457096	IncDec	++		1456050	0					
ANR	1457097	Identifier	i		1456050	1					
ANR	1457098	CompoundStatement		313:19:9823:9848	1456050	3					
ANR	1457099	Statement	register	1307:10:53587:53594	1456050	0	True				
ANR	1457100	IdentifierDeclStatement	pcre_uint32 cc = * ( ++ ptr ) ;	1307:19:53596:53621	1456050	1	True				
ANR	1457101	IdentifierDecl	cc = * ( ++ ptr )		1456050	0					
ANR	1457102	IdentifierDeclType	pcre_uint32		1456050	0					
ANR	1457103	Identifier	cc		1456050	1					
ANR	1457104	AssignmentExpression	cc = * ( ++ ptr )		1456050	2		=			
ANR	1457105	Identifier	cc		1456050	0					
ANR	1457106	UnaryOperationExpression	* ( ++ ptr )		1456050	1					
ANR	1457107	UnaryOperator	*		1456050	0					
ANR	1457108	UnaryExpression	++ ptr		1456050	1					
ANR	1457109	IncDec	++		1456050	0					
ANR	1457110	Identifier	ptr		1456050	1					
ANR	1457111	IfStatement	if ( cc >= CHAR_a )		1456050	2					
ANR	1457112	Condition	cc >= CHAR_a	1309:14:53678:53689	1456050	0	True				
ANR	1457113	RelationalExpression	cc >= CHAR_a		1456050	0		>=			
ANR	1457114	Identifier	cc		1456050	0					
ANR	1457115	Identifier	CHAR_a		1456050	1					
ANR	1457116	ExpressionStatement	cc -= 32	1309:28:53692:53700	1456050	1	True				
ANR	1457117	AssignmentExpression	cc -= 32		1456050	0		-=			
ANR	1457118	Identifier	cc		1456050	0					
ANR	1457119	PrimaryExpression	32		1456050	1					
ANR	1457120	ExpressionStatement	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )	1310:10:53754:53813	1456050	3	True				
ANR	1457121	AssignmentExpression	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	0		=			
ANR	1457122	Identifier	c		1456050	0					
ANR	1457123	AdditiveExpression	( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	1		+			
ANR	1457124	ShiftExpression	c << 4		1456050	0		<<			
ANR	1457125	Identifier	c		1456050	0					
ANR	1457126	PrimaryExpression	4		1456050	1					
ANR	1457127	AdditiveExpression	cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	1		-			
ANR	1457128	Identifier	cc		1456050	0					
ANR	1457129	ConditionalExpression	( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 )		1456050	1					
ANR	1457130	Condition	cc < CHAR_A		1456050	0					
ANR	1457131	RelationalExpression	cc < CHAR_A		1456050	0		<			
ANR	1457132	Identifier	cc		1456050	0					
ANR	1457133	Identifier	CHAR_A		1456050	1					
ANR	1457134	Identifier	CHAR_0		1456050	1					
ANR	1457135	AdditiveExpression	CHAR_A - 10		1456050	2		-			
ANR	1457136	Identifier	CHAR_A		1456050	0					
ANR	1457137	PrimaryExpression	10		1456050	1					
ANR	1457138	ElseStatement	else		1456050	0					
ANR	1457139	CompoundStatement		333:6:10732:10732	1456050	0					
ANR	1457140	IfStatement	if ( ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET )		1456050	0					
ANR	1457141	Condition	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET	1328:10:54517:54549	1456050	0	True				
ANR	1457142	EqualityExpression	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET		1456050	0		==			
ANR	1457143	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1457144	Identifier	ptr		1456050	0					
ANR	1457145	PrimaryExpression	1		1456050	1					
ANR	1457146	Identifier	CHAR_LEFT_CURLY_BRACKET		1456050	1					
ANR	1457147	CompoundStatement		335:8:10787:10787	1456050	1					
ANR	1457148	ExpressionStatement	ptr += 2	1330:8:54570:54578	1456050	0	True				
ANR	1457149	AssignmentExpression	ptr += 2		1456050	0		+=			
ANR	1457150	Identifier	ptr		1456050	0					
ANR	1457151	PrimaryExpression	2		1456050	1					
ANR	1457152	IfStatement	if ( * ptr == CHAR_RIGHT_CURLY_BRACKET )		1456050	1					
ANR	1457153	Condition	* ptr == CHAR_RIGHT_CURLY_BRACKET	1331:12:54592:54623	1456050	0	True				
ANR	1457154	EqualityExpression	* ptr == CHAR_RIGHT_CURLY_BRACKET		1456050	0		==			
ANR	1457155	UnaryOperationExpression	* ptr		1456050	0					
ANR	1457156	UnaryOperator	*		1456050	0					
ANR	1457157	Identifier	ptr		1456050	1					
ANR	1457158	Identifier	CHAR_RIGHT_CURLY_BRACKET		1456050	1					
ANR	1457159	CompoundStatement		338:10:10863:10863	1456050	1					
ANR	1457160	ExpressionStatement	* errorcodeptr = ERR86	1333:10:54648:54669	1456050	0	True				
ANR	1457161	AssignmentExpression	* errorcodeptr = ERR86		1456050	0		=			
ANR	1457162	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457163	UnaryOperator	*		1456050	0					
ANR	1457164	Identifier	errorcodeptr		1456050	1					
ANR	1457165	Identifier	ERR86		1456050	1					
ANR	1457166	BreakStatement	break ;	1334:10:54681:54686	1456050	1	True				
ANR	1457167	ExpressionStatement	c = 0	1336:8:54708:54713	1456050	2	True				
ANR	1457168	AssignmentExpression	c = 0		1456050	0		=			
ANR	1457169	Identifier	c		1456050	0					
ANR	1457170	PrimaryExpression	0		1456050	1					
ANR	1457171	ExpressionStatement	overflow = FALSE	1337:8:54723:54739	1456050	3	True				
ANR	1457172	AssignmentExpression	overflow = FALSE		1456050	0		=			
ANR	1457173	Identifier	overflow		1456050	0					
ANR	1457174	Identifier	FALSE		1456050	1					
ANR	1457175	WhileStatement	while ( MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0 )		1456050	4					
ANR	1457176	Condition	MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0	1338:15:54756:54807	1456050	0	True				
ANR	1457177	AndExpression	MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0		1456050	0		&&			
ANR	1457178	CallExpression	MAX_255 ( * ptr )		1456050	0					
ANR	1457179	Callee	MAX_255		1456050	0					
ANR	1457180	Identifier	MAX_255		1456050	0					
ANR	1457181	ArgumentList	* ptr		1456050	1					
ANR	1457182	Argument	* ptr		1456050	0					
ANR	1457183	UnaryOperationExpression	* ptr		1456050	0					
ANR	1457184	UnaryOperator	*		1456050	0					
ANR	1457185	Identifier	ptr		1456050	1					
ANR	1457186	EqualityExpression	( digitab [ * ptr ] & ctype_xdigit ) != 0		1456050	1		!=			
ANR	1457187	BitAndExpression	digitab [ * ptr ] & ctype_xdigit		1456050	0		&			
ANR	1457188	ArrayIndexing	digitab [ * ptr ]		1456050	0					
ANR	1457189	Identifier	digitab		1456050	0					
ANR	1457190	UnaryOperationExpression	* ptr		1456050	1					
ANR	1457191	UnaryOperator	*		1456050	0					
ANR	1457192	Identifier	ptr		1456050	1					
ANR	1457193	Identifier	ctype_xdigit		1456050	1					
ANR	1457194	PrimaryExpression	0		1456050	1					
ANR	1457195	CompoundStatement		346:19:11068:11091	1456050	1					
ANR	1457196	Statement	register	1340:10:54832:54839	1456050	0	True				
ANR	1457197	IdentifierDeclStatement	pcre_uint32 cc = * ptr ++ ;	1340:19:54841:54864	1456050	1	True				
ANR	1457198	IdentifierDecl	cc = * ptr ++		1456050	0					
ANR	1457199	IdentifierDeclType	pcre_uint32		1456050	0					
ANR	1457200	Identifier	cc		1456050	1					
ANR	1457201	AssignmentExpression	cc = * ptr ++		1456050	2		=			
ANR	1457202	Identifier	cc		1456050	0					
ANR	1457203	UnaryOperationExpression	* ptr ++		1456050	1					
ANR	1457204	UnaryOperator	*		1456050	0					
ANR	1457205	PostIncDecOperationExpression	ptr ++		1456050	1					
ANR	1457206	Identifier	ptr		1456050	0					
ANR	1457207	IncDec	++		1456050	1					
ANR	1457208	IfStatement	if ( c == 0 && cc == CHAR_0 )		1456050	2					
ANR	1457209	Condition	c == 0 && cc == CHAR_0	1341:14:54880:54901	1456050	0	True				
ANR	1457210	AndExpression	c == 0 && cc == CHAR_0		1456050	0		&&			
ANR	1457211	EqualityExpression	c == 0		1456050	0		==			
ANR	1457212	Identifier	c		1456050	0					
ANR	1457213	PrimaryExpression	0		1456050	1					
ANR	1457214	EqualityExpression	cc == CHAR_0		1456050	1		==			
ANR	1457215	Identifier	cc		1456050	0					
ANR	1457216	Identifier	CHAR_0		1456050	1					
ANR	1457217	ContinueStatement	continue ;	1341:38:54904:54912	1456050	1	True				
ANR	1457218	IfStatement	if ( c >= 0x10000000l )		1456050	3					
ANR	1457219	Condition	c >= 0x10000000l	1344:14:54976:54991	1456050	0	True				
ANR	1457220	RelationalExpression	c >= 0x10000000l		1456050	0		>=			
ANR	1457221	Identifier	c		1456050	0					
ANR	1457222	PrimaryExpression	0x10000000l		1456050	1					
ANR	1457223	CompoundStatement		350:32:11221:11221	1456050	1					
ANR	1457224	ExpressionStatement	overflow = TRUE	1344:34:54996:55011	1456050	0	True				
ANR	1457225	AssignmentExpression	overflow = TRUE		1456050	0		=			
ANR	1457226	Identifier	overflow		1456050	0					
ANR	1457227	Identifier	TRUE		1456050	1					
ANR	1457228	BreakStatement	break ;	1344:51:55013:55018	1456050	1	True				
ANR	1457229	IfStatement	if ( cc >= CHAR_a )		1456050	4					
ANR	1457230	Condition	cc >= CHAR_a	1348:14:55085:55096	1456050	0	True				
ANR	1457231	RelationalExpression	cc >= CHAR_a		1456050	0		>=			
ANR	1457232	Identifier	cc		1456050	0					
ANR	1457233	Identifier	CHAR_a		1456050	1					
ANR	1457234	ExpressionStatement	cc -= 32	1348:28:55099:55107	1456050	1	True				
ANR	1457235	AssignmentExpression	cc -= 32		1456050	0		-=			
ANR	1457236	Identifier	cc		1456050	0					
ANR	1457237	PrimaryExpression	32		1456050	1					
ANR	1457238	ExpressionStatement	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )	1349:10:55161:55220	1456050	5	True				
ANR	1457239	AssignmentExpression	c = ( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	0		=			
ANR	1457240	Identifier	c		1456050	0					
ANR	1457241	AdditiveExpression	( c << 4 ) + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	1		+			
ANR	1457242	ShiftExpression	c << 4		1456050	0		<<			
ANR	1457243	Identifier	c		1456050	0					
ANR	1457244	PrimaryExpression	4		1456050	1					
ANR	1457245	AdditiveExpression	cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	1		-			
ANR	1457246	Identifier	cc		1456050	0					
ANR	1457247	ConditionalExpression	( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 )		1456050	1					
ANR	1457248	Condition	cc < CHAR_A		1456050	0					
ANR	1457249	RelationalExpression	cc < CHAR_A		1456050	0		<			
ANR	1457250	Identifier	cc		1456050	0					
ANR	1457251	Identifier	CHAR_A		1456050	1					
ANR	1457252	Identifier	CHAR_0		1456050	1					
ANR	1457253	AdditiveExpression	CHAR_A - 10		1456050	2		-			
ANR	1457254	Identifier	CHAR_A		1456050	0					
ANR	1457255	PrimaryExpression	10		1456050	1					
ANR	1457256	IfStatement	if ( c > ( utf ? 0x10ffffU : 0xffU ) )		1456050	6					
ANR	1457257	Condition	c > ( utf ? 0x10ffffU : 0xffU )	1356:14:55461:55489	1456050	0	True				
ANR	1457258	RelationalExpression	c > ( utf ? 0x10ffffU : 0xffU )		1456050	0		>			
ANR	1457259	Identifier	c		1456050	0					
ANR	1457260	ConditionalExpression	utf ? 0x10ffffU : 0xffU		1456050	1					
ANR	1457261	Condition	utf		1456050	0					
ANR	1457262	Identifier	utf		1456050	0					
ANR	1457263	PrimaryExpression	0x10ffffU		1456050	1					
ANR	1457264	PrimaryExpression	0xffU		1456050	2					
ANR	1457265	CompoundStatement		362:45:11719:11719	1456050	1					
ANR	1457266	ExpressionStatement	overflow = TRUE	1356:47:55494:55509	1456050	0	True				
ANR	1457267	AssignmentExpression	overflow = TRUE		1456050	0		=			
ANR	1457268	Identifier	overflow		1456050	0					
ANR	1457269	Identifier	TRUE		1456050	1					
ANR	1457270	BreakStatement	break ;	1356:64:55511:55516	1456050	1	True				
ANR	1457271	IfStatement	if ( overflow )		1456050	5					
ANR	1457272	Condition	overflow	1364:12:55749:55756	1456050	0	True				
ANR	1457273	Identifier	overflow		1456050	0					
ANR	1457274	CompoundStatement		371:10:11996:11996	1456050	1					
ANR	1457275	WhileStatement	while ( MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0 )		1456050	0					
ANR	1457276	Condition	MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0	1366:17:55788:55839	1456050	0	True				
ANR	1457277	AndExpression	MAX_255 ( * ptr ) && ( digitab [ * ptr ] & ctype_xdigit ) != 0		1456050	0		&&			
ANR	1457278	CallExpression	MAX_255 ( * ptr )		1456050	0					
ANR	1457279	Callee	MAX_255		1456050	0					
ANR	1457280	Identifier	MAX_255		1456050	0					
ANR	1457281	ArgumentList	* ptr		1456050	1					
ANR	1457282	Argument	* ptr		1456050	0					
ANR	1457283	UnaryOperationExpression	* ptr		1456050	0					
ANR	1457284	UnaryOperator	*		1456050	0					
ANR	1457285	Identifier	ptr		1456050	1					
ANR	1457286	EqualityExpression	( digitab [ * ptr ] & ctype_xdigit ) != 0		1456050	1		!=			
ANR	1457287	BitAndExpression	digitab [ * ptr ] & ctype_xdigit		1456050	0		&			
ANR	1457288	ArrayIndexing	digitab [ * ptr ]		1456050	0					
ANR	1457289	Identifier	digitab		1456050	0					
ANR	1457290	UnaryOperationExpression	* ptr		1456050	1					
ANR	1457291	UnaryOperator	*		1456050	0					
ANR	1457292	Identifier	ptr		1456050	1					
ANR	1457293	Identifier	ctype_xdigit		1456050	1					
ANR	1457294	PrimaryExpression	0		1456050	1					
ANR	1457295	ExpressionStatement	ptr ++	1366:71:55842:55847	1456050	1	True				
ANR	1457296	PostIncDecOperationExpression	ptr ++		1456050	0					
ANR	1457297	Identifier	ptr		1456050	0					
ANR	1457298	IncDec	++		1456050	1					
ANR	1457299	ExpressionStatement	* errorcodeptr = ERR34	1367:10:55859:55880	1456050	1	True				
ANR	1457300	AssignmentExpression	* errorcodeptr = ERR34		1456050	0		=			
ANR	1457301	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457302	UnaryOperator	*		1456050	0					
ANR	1457303	Identifier	errorcodeptr		1456050	1					
ANR	1457304	Identifier	ERR34		1456050	1					
ANR	1457305	ElseStatement	else		1456050	0					
ANR	1457306	IfStatement	if ( * ptr == CHAR_RIGHT_CURLY_BRACKET )		1456050	0					
ANR	1457307	Condition	* ptr == CHAR_RIGHT_CURLY_BRACKET	1370:17:55912:55943	1456050	0	True				
ANR	1457308	EqualityExpression	* ptr == CHAR_RIGHT_CURLY_BRACKET		1456050	0		==			
ANR	1457309	UnaryOperationExpression	* ptr		1456050	0					
ANR	1457310	UnaryOperator	*		1456050	0					
ANR	1457311	Identifier	ptr		1456050	1					
ANR	1457312	Identifier	CHAR_RIGHT_CURLY_BRACKET		1456050	1					
ANR	1457313	CompoundStatement		377:10:12183:12183	1456050	1					
ANR	1457314	IfStatement	if ( utf && c >= 0xd800 && c <= 0xdfff )		1456050	0					
ANR	1457315	Condition	utf && c >= 0xd800 && c <= 0xdfff	1372:14:55972:56004	1456050	0	True				
ANR	1457316	AndExpression	utf && c >= 0xd800 && c <= 0xdfff		1456050	0		&&			
ANR	1457317	Identifier	utf		1456050	0					
ANR	1457318	AndExpression	c >= 0xd800 && c <= 0xdfff		1456050	1		&&			
ANR	1457319	RelationalExpression	c >= 0xd800		1456050	0		>=			
ANR	1457320	Identifier	c		1456050	0					
ANR	1457321	PrimaryExpression	0xd800		1456050	1					
ANR	1457322	RelationalExpression	c <= 0xdfff		1456050	1		<=			
ANR	1457323	Identifier	c		1456050	0					
ANR	1457324	PrimaryExpression	0xdfff		1456050	1					
ANR	1457325	ExpressionStatement	* errorcodeptr = ERR73	1372:49:56007:56028	1456050	1	True				
ANR	1457326	AssignmentExpression	* errorcodeptr = ERR73		1456050	0		=			
ANR	1457327	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457328	UnaryOperator	*		1456050	0					
ANR	1457329	Identifier	errorcodeptr		1456050	1					
ANR	1457330	Identifier	ERR73		1456050	1					
ANR	1457331	ElseStatement	else		1456050	0					
ANR	1457332	ExpressionStatement	* errorcodeptr = ERR79	1380:13:56328:56349	1456050	0	True				
ANR	1457333	AssignmentExpression	* errorcodeptr = ERR79		1456050	0		=			
ANR	1457334	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457335	UnaryOperator	*		1456050	0					
ANR	1457336	Identifier	errorcodeptr		1456050	1					
ANR	1457337	Identifier	ERR79		1456050	1					
ANR	1457338	ElseStatement	else		1456050	0					
ANR	1457339	CompoundStatement		392:8:12720:12720	1456050	0					
ANR	1457340	ExpressionStatement	c = 0	1387:8:56503:56508	1456050	0	True				
ANR	1457341	AssignmentExpression	c = 0		1456050	0		=			
ANR	1457342	Identifier	c		1456050	0					
ANR	1457343	PrimaryExpression	0		1456050	1					
ANR	1457344	WhileStatement	while ( i ++ < 2 && MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0 )		1456050	1					
ANR	1457345	Condition	i ++ < 2 && MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0	1388:15:56525:56591	1456050	0	True				
ANR	1457346	AndExpression	i ++ < 2 && MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		1456050	0		&&			
ANR	1457347	RelationalExpression	i ++ < 2		1456050	0		<			
ANR	1457348	PostIncDecOperationExpression	i ++		1456050	0					
ANR	1457349	Identifier	i		1456050	0					
ANR	1457350	IncDec	++		1456050	1					
ANR	1457351	PrimaryExpression	2		1456050	1					
ANR	1457352	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		1456050	1		&&			
ANR	1457353	CallExpression	MAX_255 ( ptr [ 1 ] )		1456050	0					
ANR	1457354	Callee	MAX_255		1456050	0					
ANR	1457355	Identifier	MAX_255		1456050	0					
ANR	1457356	ArgumentList	ptr [ 1 ]		1456050	1					
ANR	1457357	Argument	ptr [ 1 ]		1456050	0					
ANR	1457358	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1457359	Identifier	ptr		1456050	0					
ANR	1457360	PrimaryExpression	1		1456050	1					
ANR	1457361	EqualityExpression	( digitab [ ptr [ 1 ] ] & ctype_xdigit ) != 0		1456050	1		!=			
ANR	1457362	BitAndExpression	digitab [ ptr [ 1 ] ] & ctype_xdigit		1456050	0		&			
ANR	1457363	ArrayIndexing	digitab [ ptr [ 1 ] ]		1456050	0					
ANR	1457364	Identifier	digitab		1456050	0					
ANR	1457365	ArrayIndexing	ptr [ 1 ]		1456050	1					
ANR	1457366	Identifier	ptr		1456050	0					
ANR	1457367	PrimaryExpression	1		1456050	1					
ANR	1457368	Identifier	ctype_xdigit		1456050	1					
ANR	1457369	PrimaryExpression	0		1456050	1					
ANR	1457370	CompoundStatement		396:10:12843:12857	1456050	1					
ANR	1457371	IdentifierDeclStatement	pcre_uint32 cc ;	1390:10:56616:56630	1456050	0	True				
ANR	1457372	IdentifierDecl	cc		1456050	0					
ANR	1457373	IdentifierDeclType	pcre_uint32		1456050	0					
ANR	1457374	Identifier	cc		1456050	1					
ANR	1457375	ExpressionStatement	cc = * ( ++ ptr )	1391:10:56699:56712	1456050	1	True				
ANR	1457376	AssignmentExpression	cc = * ( ++ ptr )		1456050	0		=			
ANR	1457377	Identifier	cc		1456050	0					
ANR	1457378	UnaryOperationExpression	* ( ++ ptr )		1456050	1					
ANR	1457379	UnaryOperator	*		1456050	0					
ANR	1457380	UnaryExpression	++ ptr		1456050	1					
ANR	1457381	IncDec	++		1456050	0					
ANR	1457382	Identifier	ptr		1456050	1					
ANR	1457383	IfStatement	if ( cc >= CHAR_a )		1456050	2					
ANR	1457384	Condition	cc >= CHAR_a	1393:14:56820:56831	1456050	0	True				
ANR	1457385	RelationalExpression	cc >= CHAR_a		1456050	0		>=			
ANR	1457386	Identifier	cc		1456050	0					
ANR	1457387	Identifier	CHAR_a		1456050	1					
ANR	1457388	ExpressionStatement	cc -= 32	1393:28:56834:56842	1456050	1	True				
ANR	1457389	AssignmentExpression	cc -= 32		1456050	0		-=			
ANR	1457390	Identifier	cc		1456050	0					
ANR	1457391	PrimaryExpression	32		1456050	1					
ANR	1457392	ExpressionStatement	c = c * 16 + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )	1394:10:56895:56952	1456050	3	True				
ANR	1457393	AssignmentExpression	c = c * 16 + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	0		=			
ANR	1457394	Identifier	c		1456050	0					
ANR	1457395	AdditiveExpression	c * 16 + cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	1		+			
ANR	1457396	MultiplicativeExpression	c * 16		1456050	0		*			
ANR	1457397	Identifier	c		1456050	0					
ANR	1457398	PrimaryExpression	16		1456050	1					
ANR	1457399	AdditiveExpression	cc - ( ( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 ) )		1456050	1		-			
ANR	1457400	Identifier	cc		1456050	0					
ANR	1457401	ConditionalExpression	( cc < CHAR_A ) ? CHAR_0 : ( CHAR_A - 10 )		1456050	1					
ANR	1457402	Condition	cc < CHAR_A		1456050	0					
ANR	1457403	RelationalExpression	cc < CHAR_A		1456050	0		<			
ANR	1457404	Identifier	cc		1456050	0					
ANR	1457405	Identifier	CHAR_A		1456050	1					
ANR	1457406	Identifier	CHAR_0		1456050	1					
ANR	1457407	AdditiveExpression	CHAR_A - 10		1456050	2		-			
ANR	1457408	Identifier	CHAR_A		1456050	0					
ANR	1457409	PrimaryExpression	10		1456050	1					
ANR	1457410	BreakStatement	break ;	1402:4:57253:57258	1456050	45	True				
ANR	1457411	Label	case CHAR_c :	1409:4:57567:57578	1456050	46	True				
ANR	1457412	Identifier	CHAR_c		1456050	0					
ANR	1457413	ExpressionStatement	c = * ( ++ ptr )	1410:4:57584:57596	1456050	47	True				
ANR	1457414	AssignmentExpression	c = * ( ++ ptr )		1456050	0		=			
ANR	1457415	Identifier	c		1456050	0					
ANR	1457416	UnaryOperationExpression	* ( ++ ptr )		1456050	1					
ANR	1457417	UnaryOperator	*		1456050	0					
ANR	1457418	UnaryExpression	++ ptr		1456050	1					
ANR	1457419	IncDec	++		1456050	0					
ANR	1457420	Identifier	ptr		1456050	1					
ANR	1457421	IfStatement	if ( c == CHAR_NULL )		1456050	48					
ANR	1457422	Condition	c == CHAR_NULL	1411:8:57606:57619	1456050	0	True				
ANR	1457423	EqualityExpression	c == CHAR_NULL		1456050	0		==			
ANR	1457424	Identifier	c		1456050	0					
ANR	1457425	Identifier	CHAR_NULL		1456050	1					
ANR	1457426	CompoundStatement		418:6:13855:13855	1456050	1					
ANR	1457427	ExpressionStatement	* errorcodeptr = ERR2	1413:6:57636:57656	1456050	0	True				
ANR	1457428	AssignmentExpression	* errorcodeptr = ERR2		1456050	0		=			
ANR	1457429	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457430	UnaryOperator	*		1456050	0					
ANR	1457431	Identifier	errorcodeptr		1456050	1					
ANR	1457432	Identifier	ERR2		1456050	1					
ANR	1457433	BreakStatement	break ;	1414:6:57664:57669	1456050	1	True				
ANR	1457434	IfStatement	if ( c > 127 )		1456050	49					
ANR	1457435	Condition	c > 127	1417:8:57730:57736	1456050	0	True				
ANR	1457436	RelationalExpression	c > 127		1456050	0		>			
ANR	1457437	Identifier	c		1456050	0					
ANR	1457438	PrimaryExpression	127		1456050	1					
ANR	1457439	CompoundStatement		424:6:14017:14017	1456050	1					
ANR	1457440	ExpressionStatement	* errorcodeptr = ERR68	1419:6:57798:57819	1456050	0	True				
ANR	1457441	AssignmentExpression	* errorcodeptr = ERR68		1456050	0		=			
ANR	1457442	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457443	UnaryOperator	*		1456050	0					
ANR	1457444	Identifier	errorcodeptr		1456050	1					
ANR	1457445	Identifier	ERR68		1456050	1					
ANR	1457446	BreakStatement	break ;	1420:6:57827:57832	1456050	1	True				
ANR	1457447	IfStatement	if ( c >= CHAR_a && c <= CHAR_z )		1456050	50					
ANR	1457448	Condition	c >= CHAR_a && c <= CHAR_z	1422:8:57850:57875	1456050	0	True				
ANR	1457449	AndExpression	c >= CHAR_a && c <= CHAR_z		1456050	0		&&			
ANR	1457450	RelationalExpression	c >= CHAR_a		1456050	0		>=			
ANR	1457451	Identifier	c		1456050	0					
ANR	1457452	Identifier	CHAR_a		1456050	1					
ANR	1457453	RelationalExpression	c <= CHAR_z		1456050	1		<=			
ANR	1457454	Identifier	c		1456050	0					
ANR	1457455	Identifier	CHAR_z		1456050	1					
ANR	1457456	ExpressionStatement	c -= 32	1422:36:57878:57885	1456050	1	True				
ANR	1457457	AssignmentExpression	c -= 32		1456050	0		-=			
ANR	1457458	Identifier	c		1456050	0					
ANR	1457459	PrimaryExpression	32		1456050	1					
ANR	1457460	ExpressionStatement	c ^= 0x40	1423:4:57891:57900	1456050	51	True				
ANR	1457461	AssignmentExpression	c ^= 0x40		1456050	0		^=			
ANR	1457462	Identifier	c		1456050	0					
ANR	1457463	PrimaryExpression	0x40		1456050	1					
ANR	1457464	BreakStatement	break ;	1428:4:58011:58016	1456050	52	True				
ANR	1457465	Label	default :	1436:4:58382:58389	1456050	53	True				
ANR	1457466	Identifier	default		1456050	0					
ANR	1457467	IfStatement	if ( ( options & PCRE_EXTRA ) != 0 )		1456050	54					
ANR	1457468	Condition	( options & PCRE_EXTRA ) != 0	1437:8:58399:58425	1456050	0	True				
ANR	1457469	EqualityExpression	( options & PCRE_EXTRA ) != 0		1456050	0		!=			
ANR	1457470	BitAndExpression	options & PCRE_EXTRA		1456050	0		&			
ANR	1457471	Identifier	options		1456050	0					
ANR	1457472	Identifier	PCRE_EXTRA		1456050	1					
ANR	1457473	PrimaryExpression	0		1456050	1					
ANR	1457474	SwitchStatement	switch ( c )		1456050	1					
ANR	1457475	Condition	c	1437:44:58435:58435	1456050	0	True				
ANR	1457476	Identifier	c		1456050	0					
ANR	1457477	CompoundStatement		444:6:14671:14671	1456050	1					
ANR	1457478	Label	default :	1439:6:58452:58459	1456050	0	True				
ANR	1457479	Identifier	default		1456050	0					
ANR	1457480	ExpressionStatement	* errorcodeptr = ERR3	1440:6:58467:58487	1456050	1	True				
ANR	1457481	AssignmentExpression	* errorcodeptr = ERR3		1456050	0		=			
ANR	1457482	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457483	UnaryOperator	*		1456050	0					
ANR	1457484	Identifier	errorcodeptr		1456050	1					
ANR	1457485	Identifier	ERR3		1456050	1					
ANR	1457486	BreakStatement	break ;	1441:6:58495:58500	1456050	2	True				
ANR	1457487	BreakStatement	break ;	1443:4:58514:58519	1456050	55	True				
ANR	1457488	IfStatement	if ( escape == ESC_N && ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET && ! is_counted_repeat ( ptr + 2 ) )		1456050	8					
ANR	1457489	Condition	escape == ESC_N && ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET && ! is_counted_repeat ( ptr + 2 )	1451:4:58715:58800	1456050	0	True				
ANR	1457490	AndExpression	escape == ESC_N && ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET && ! is_counted_repeat ( ptr + 2 )		1456050	0		&&			
ANR	1457491	EqualityExpression	escape == ESC_N		1456050	0		==			
ANR	1457492	Identifier	escape		1456050	0					
ANR	1457493	Identifier	ESC_N		1456050	1					
ANR	1457494	AndExpression	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET && ! is_counted_repeat ( ptr + 2 )		1456050	1		&&			
ANR	1457495	EqualityExpression	ptr [ 1 ] == CHAR_LEFT_CURLY_BRACKET		1456050	0		==			
ANR	1457496	ArrayIndexing	ptr [ 1 ]		1456050	0					
ANR	1457497	Identifier	ptr		1456050	0					
ANR	1457498	PrimaryExpression	1		1456050	1					
ANR	1457499	Identifier	CHAR_LEFT_CURLY_BRACKET		1456050	1					
ANR	1457500	UnaryOperationExpression	! is_counted_repeat ( ptr + 2 )		1456050	1					
ANR	1457501	UnaryOperator	!		1456050	0					
ANR	1457502	CallExpression	is_counted_repeat ( ptr + 2 )		1456050	1					
ANR	1457503	Callee	is_counted_repeat		1456050	0					
ANR	1457504	Identifier	is_counted_repeat		1456050	0					
ANR	1457505	ArgumentList	ptr + 2		1456050	1					
ANR	1457506	Argument	ptr + 2		1456050	0					
ANR	1457507	AdditiveExpression	ptr + 2		1456050	0		+			
ANR	1457508	Identifier	ptr		1456050	0					
ANR	1457509	PrimaryExpression	2		1456050	1					
ANR	1457510	ExpressionStatement	* errorcodeptr = ERR37	1453:2:58805:58826	1456050	1	True				
ANR	1457511	AssignmentExpression	* errorcodeptr = ERR37		1456050	0		=			
ANR	1457512	UnaryOperationExpression	* errorcodeptr		1456050	0					
ANR	1457513	UnaryOperator	*		1456050	0					
ANR	1457514	Identifier	errorcodeptr		1456050	1					
ANR	1457515	Identifier	ERR37		1456050	1					
ANR	1457516	IfStatement	if ( ( options & PCRE_UCP ) != 0 && escape >= ESC_D && escape <= ESC_w )		1456050	9					
ANR	1457517	Condition	( options & PCRE_UCP ) != 0 && escape >= ESC_D && escape <= ESC_w	1457:4:58893:58955	1456050	0	True				
ANR	1457518	AndExpression	( options & PCRE_UCP ) != 0 && escape >= ESC_D && escape <= ESC_w		1456050	0		&&			
ANR	1457519	EqualityExpression	( options & PCRE_UCP ) != 0		1456050	0		!=			
ANR	1457520	BitAndExpression	options & PCRE_UCP		1456050	0		&			
ANR	1457521	Identifier	options		1456050	0					
ANR	1457522	Identifier	PCRE_UCP		1456050	1					
ANR	1457523	PrimaryExpression	0		1456050	1					
ANR	1457524	AndExpression	escape >= ESC_D && escape <= ESC_w		1456050	1		&&			
ANR	1457525	RelationalExpression	escape >= ESC_D		1456050	0		>=			
ANR	1457526	Identifier	escape		1456050	0					
ANR	1457527	Identifier	ESC_D		1456050	1					
ANR	1457528	RelationalExpression	escape <= ESC_w		1456050	1		<=			
ANR	1457529	Identifier	escape		1456050	0					
ANR	1457530	Identifier	ESC_w		1456050	1					
ANR	1457531	ExpressionStatement	escape += ( ESC_DU - ESC_D )	1458:2:58960:58986	1456050	1	True				
ANR	1457532	AssignmentExpression	escape += ( ESC_DU - ESC_D )		1456050	0		+=			
ANR	1457533	Identifier	escape		1456050	0					
ANR	1457534	AdditiveExpression	ESC_DU - ESC_D		1456050	1		-			
ANR	1457535	Identifier	ESC_DU		1456050	0					
ANR	1457536	Identifier	ESC_D		1456050	1					
ANR	1457537	ExpressionStatement	* ptrptr = ptr	1462:0:59053:59066	1456050	10	True				
ANR	1457538	AssignmentExpression	* ptrptr = ptr		1456050	0		=			
ANR	1457539	UnaryOperationExpression	* ptrptr		1456050	0					
ANR	1457540	UnaryOperator	*		1456050	0					
ANR	1457541	Identifier	ptrptr		1456050	1					
ANR	1457542	Identifier	ptr		1456050	1					
ANR	1457543	ExpressionStatement	* chptr = c	1463:0:59068:59078	1456050	11	True				
ANR	1457544	AssignmentExpression	* chptr = c		1456050	0		=			
ANR	1457545	UnaryOperationExpression	* chptr		1456050	0					
ANR	1457546	UnaryOperator	*		1456050	0					
ANR	1457547	Identifier	chptr		1456050	1					
ANR	1457548	Identifier	c		1456050	1					
ANR	1457549	ReturnStatement	return escape ;	1464:0:59080:59093	1456050	12	True				
ANR	1457550	Identifier	escape		1456050	0					
ANR	1457551	ReturnType	static int		1456050	1					
ANR	1457552	Identifier	check_escape		1456050	2					
ANR	1457553	ParameterList	"const pcre_uchar * * ptrptr , pcre_uint32 * chptr , int * errorcodeptr , int bracount , int options , BOOL isclass"		1456050	3					
ANR	1457554	Parameter	const pcre_uchar * * ptrptr	993:13:43663:43687	1456050	0	True				
ANR	1457555	ParameterType	const pcre_uchar * *		1456050	0					
ANR	1457556	Identifier	ptrptr		1456050	1					
ANR	1457557	Parameter	pcre_uint32 * chptr	993:40:43690:43707	1456050	1	True				
ANR	1457558	ParameterType	pcre_uint32 *		1456050	0					
ANR	1457559	Identifier	chptr		1456050	1					
ANR	1457560	Parameter	int * errorcodeptr	993:60:43710:43726	1456050	2	True				
ANR	1457561	ParameterType	int *		1456050	0					
ANR	1457562	Identifier	errorcodeptr		1456050	1					
ANR	1457563	Parameter	int bracount	994:2:43731:43742	1456050	3	True				
ANR	1457564	ParameterType	int		1456050	0					
ANR	1457565	Identifier	bracount		1456050	1					
ANR	1457566	Parameter	int options	994:16:43745:43755	1456050	4	True				
ANR	1457567	ParameterType	int		1456050	0					
ANR	1457568	Identifier	options		1456050	1					
ANR	1457569	Parameter	BOOL isclass	994:29:43758:43769	1456050	5	True				
ANR	1457570	ParameterType	BOOL		1456050	0					
ANR	1457571	Identifier	isclass		1456050	1					
ANR	1457572	CFGEntryNode	ENTRY		1456050		True				
ANR	1457573	CFGExitNode	EXIT		1456050		True				
ANR	1457574	Symbol	negated		1456050						
ANR	1457575	Symbol	ERR81		1456050						
ANR	1457576	Symbol	ESC_g		1456050						
ANR	1457577	Symbol	* escapes		1456050						
ANR	1457578	Symbol	ERR80		1456050						
ANR	1457579	Symbol	overflow		1456050						
ANR	1457580	Symbol	ERR73		1456050						
ANR	1457581	Symbol	ERR34		1456050						
ANR	1457582	Symbol	ERR79		1456050						
ANR	1457583	Symbol	ERR76		1456050						
ANR	1457584	Symbol	ESC_N		1456050						
ANR	1457585	Symbol	options		1456050						
ANR	1457586	Symbol	* ptr		1456050						
ANR	1457587	Symbol	* ptrptr		1456050						
ANR	1457588	Symbol	ERR37		1456050						
ANR	1457589	Symbol	* CHAR_0		1456050						
ANR	1457590	Symbol	escapes		1456050						
ANR	1457591	Symbol	utf		1456050						
ANR	1457592	Symbol	TRUE		1456050						
ANR	1457593	Symbol	ESC_D		1456050						
ANR	1457594	Symbol	ERR1		1456050						
ANR	1457595	Symbol	PCRE_UCP		1456050						
ANR	1457596	Symbol	ERR2		1456050						
ANR	1457597	Symbol	ctype_xdigit		1456050						
ANR	1457598	Symbol	ERR3		1456050						
ANR	1457599	Symbol	CHAR_NULL		1456050						
ANR	1457600	Symbol	CHAR_RIGHT_CURLY_BRACKET		1456050						
ANR	1457601	Symbol	ERR61		1456050						
ANR	1457602	Symbol	CHAR_LEFT_CURLY_BRACKET		1456050						
ANR	1457603	Symbol	ERR68		1456050						
ANR	1457604	Symbol	CHAR_LESS_THAN_SIGN		1456050						
ANR	1457605	Symbol	CHAR_APOSTROPHE		1456050						
ANR	1457606	Symbol	CHAR_z		1456050						
ANR	1457607	Symbol	braced		1456050						
ANR	1457608	Symbol	* digitab		1456050						
ANR	1457609	Symbol	* * ptr		1456050						
ANR	1457610	Symbol	PCRE_EXTRA		1456050						
ANR	1457611	Symbol	chptr		1456050						
ANR	1457612	Symbol	CHAR_a		1456050						
ANR	1457613	Symbol	ERR51		1456050						
ANR	1457614	Symbol	ESC_DU		1456050						
ANR	1457615	Symbol	ERR57		1456050						
ANR	1457616	Symbol	* ( ++ ptr )		1456050						
ANR	1457617	Symbol	INT_MAX		1456050						
ANR	1457618	Symbol	ERR58		1456050						
ANR	1457619	Symbol	ERR15		1456050						
ANR	1457620	Symbol	escape		1456050						
ANR	1457621	Symbol	isclass		1456050						
ANR	1457622	Symbol	cc		1456050						
ANR	1457623	Symbol	c		1456050						
ANR	1457624	Symbol	is_counted_repeat		1456050						
ANR	1457625	Symbol	CHAR_7		1456050						
ANR	1457626	Symbol	CHAR_8		1456050						
ANR	1457627	Symbol	* ptr ++		1456050						
ANR	1457628	Symbol	i		1456050						
ANR	1457629	Symbol	CHAR_0		1456050						
ANR	1457630	Symbol	* c		1456050						
ANR	1457631	Symbol	oldptr		1456050						
ANR	1457632	Symbol	errorcodeptr		1456050						
ANR	1457633	Symbol	PCRE_JAVASCRIPT_COMPAT		1456050						
ANR	1457634	Symbol	ptr		1456050						
ANR	1457635	Symbol	IS_DIGIT		1456050						
ANR	1457636	Symbol	p		1456050						
ANR	1457637	Symbol	ERR86		1456050						
ANR	1457638	Symbol	CHAR_A		1456050						
ANR	1457639	Symbol	ESC_k		1456050						
ANR	1457640	Symbol	s		1456050						
ANR	1457641	Symbol	* errorcodeptr		1456050						
ANR	1457642	Symbol	ptrptr		1456050						
ANR	1457643	Symbol	digitab		1456050						
ANR	1457644	Symbol	* chptr		1456050						
ANR	1457645	Symbol	bracount		1456050						
ANR	1457646	Symbol	CHAR_MINUS		1456050						
ANR	1457647	Symbol	MAX_255		1456050						
ANR	1457648	Symbol	* p		1456050						
ANR	1457649	Symbol	FALSE		1456050						
ANR	1457650	Symbol	PCRE_UTF8		1456050						
ANR	1457651	Symbol	ESC_w		1456050						
ANR	1457652	Function	get_ucp	1489:0:59960:61353							
ANR	1457653	FunctionDef	"get_ucp (const pcre_uchar * * ptrptr , BOOL * negptr , unsigned int * ptypeptr , unsigned int * pdataptr , int * errorcodeptr)"		1457652	0					
ANR	1457654	CompoundStatement		1492:0:60090:61353	1457652	0					
ANR	1457655	IdentifierDeclStatement	pcre_uchar c ;	1493:0:60092:60104	1457652	0	True				
ANR	1457656	IdentifierDecl	c		1457652	0					
ANR	1457657	IdentifierDeclType	pcre_uchar		1457652	0					
ANR	1457658	Identifier	c		1457652	1					
ANR	1457659	IdentifierDeclStatement	"int i , bot , top ;"	1494:0:60106:60121	1457652	1	True				
ANR	1457660	IdentifierDecl	i		1457652	0					
ANR	1457661	IdentifierDeclType	int		1457652	0					
ANR	1457662	Identifier	i		1457652	1					
ANR	1457663	IdentifierDecl	bot		1457652	1					
ANR	1457664	IdentifierDeclType	int		1457652	0					
ANR	1457665	Identifier	bot		1457652	1					
ANR	1457666	IdentifierDecl	top		1457652	2					
ANR	1457667	IdentifierDeclType	int		1457652	0					
ANR	1457668	Identifier	top		1457652	1					
ANR	1457669	IdentifierDeclStatement	const pcre_uchar * ptr = * ptrptr ;	1495:0:60123:60154	1457652	2	True				
ANR	1457670	IdentifierDecl	* ptr = * ptrptr		1457652	0					
ANR	1457671	IdentifierDeclType	const pcre_uchar *		1457652	0					
ANR	1457672	Identifier	ptr		1457652	1					
ANR	1457673	AssignmentExpression	* ptr = * ptrptr		1457652	2		=			
ANR	1457674	Identifier	ptr		1457652	0					
ANR	1457675	UnaryOperationExpression	* ptrptr		1457652	1					
ANR	1457676	UnaryOperator	*		1457652	0					
ANR	1457677	Identifier	ptrptr		1457652	1					
ANR	1457678	IdentifierDeclStatement	pcre_uchar name [ 32 ] ;	1496:0:60156:60175	1457652	3	True				
ANR	1457679	IdentifierDecl	name [ 32 ]		1457652	0					
ANR	1457680	IdentifierDeclType	pcre_uchar [ 32 ]		1457652	0					
ANR	1457681	Identifier	name		1457652	1					
ANR	1457682	PrimaryExpression	32		1457652	2					
ANR	1457683	ExpressionStatement	c = * ( ++ ptr )	1498:0:60178:60190	1457652	4	True				
ANR	1457684	AssignmentExpression	c = * ( ++ ptr )		1457652	0		=			
ANR	1457685	Identifier	c		1457652	0					
ANR	1457686	UnaryOperationExpression	* ( ++ ptr )		1457652	1					
ANR	1457687	UnaryOperator	*		1457652	0					
ANR	1457688	UnaryExpression	++ ptr		1457652	1					
ANR	1457689	IncDec	++		1457652	0					
ANR	1457690	Identifier	ptr		1457652	1					
ANR	1457691	IfStatement	if ( c == CHAR_NULL )		1457652	5					
ANR	1457692	Condition	c == CHAR_NULL	1499:4:60196:60209	1457652	0	True				
ANR	1457693	EqualityExpression	c == CHAR_NULL		1457652	0		==			
ANR	1457694	Identifier	c		1457652	0					
ANR	1457695	Identifier	CHAR_NULL		1457652	1					
ANR	1457696	GotoStatement	goto ERROR_RETURN ;	1499:20:60212:60229	1457652	1	True				
ANR	1457697	Identifier	ERROR_RETURN		1457652	0					
ANR	1457698	ExpressionStatement	* negptr = FALSE	1501:0:60232:60247	1457652	6	True				
ANR	1457699	AssignmentExpression	* negptr = FALSE		1457652	0		=			
ANR	1457700	UnaryOperationExpression	* negptr		1457652	0					
ANR	1457701	UnaryOperator	*		1457652	0					
ANR	1457702	Identifier	negptr		1457652	1					
ANR	1457703	Identifier	FALSE		1457652	1					
ANR	1457704	IfStatement	if ( c == CHAR_LEFT_CURLY_BRACKET )		1457652	7					
ANR	1457705	Condition	c == CHAR_LEFT_CURLY_BRACKET	1506:4:60342:60369	1457652	0	True				
ANR	1457706	EqualityExpression	c == CHAR_LEFT_CURLY_BRACKET		1457652	0		==			
ANR	1457707	Identifier	c		1457652	0					
ANR	1457708	Identifier	CHAR_LEFT_CURLY_BRACKET		1457652	1					
ANR	1457709	CompoundStatement		16:2:283:283	1457652	1					
ANR	1457710	IfStatement	if ( ptr [ 1 ] == CHAR_CIRCUMFLEX_ACCENT )		1457652	0					
ANR	1457711	Condition	ptr [ 1 ] == CHAR_CIRCUMFLEX_ACCENT	1508:6:60382:60413	1457652	0	True				
ANR	1457712	EqualityExpression	ptr [ 1 ] == CHAR_CIRCUMFLEX_ACCENT		1457652	0		==			
ANR	1457713	ArrayIndexing	ptr [ 1 ]		1457652	0					
ANR	1457714	Identifier	ptr		1457652	0					
ANR	1457715	PrimaryExpression	1		1457652	1					
ANR	1457716	Identifier	CHAR_CIRCUMFLEX_ACCENT		1457652	1					
ANR	1457717	CompoundStatement		18:4:329:329	1457652	1					
ANR	1457718	ExpressionStatement	* negptr = TRUE	1510:4:60426:60440	1457652	0	True				
ANR	1457719	AssignmentExpression	* negptr = TRUE		1457652	0		=			
ANR	1457720	UnaryOperationExpression	* negptr		1457652	0					
ANR	1457721	UnaryOperator	*		1457652	0					
ANR	1457722	Identifier	negptr		1457652	1					
ANR	1457723	Identifier	TRUE		1457652	1					
ANR	1457724	ExpressionStatement	ptr ++	1511:4:60446:60451	1457652	1	True				
ANR	1457725	PostIncDecOperationExpression	ptr ++		1457652	0					
ANR	1457726	Identifier	ptr		1457652	0					
ANR	1457727	IncDec	++		1457652	1					
ANR	1457728	ForStatement	for ( i = 0 ; i < ( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) ) - 1 ; i ++ )		1457652	1					
ANR	1457729	ForInit	i = 0 ;	1513:7:60466:60471	1457652	0	True				
ANR	1457730	AssignmentExpression	i = 0		1457652	0		=			
ANR	1457731	Identifier	i		1457652	0					
ANR	1457732	PrimaryExpression	0		1457652	1					
ANR	1457733	Condition	i < ( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) ) - 1	1513:14:60473:60520	1457652	1	True				
ANR	1457734	RelationalExpression	i < ( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) ) - 1		1457652	0		<			
ANR	1457735	Identifier	i		1457652	0					
ANR	1457736	AdditiveExpression	( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) ) - 1		1457652	1		-			
ANR	1457737	CastExpression	( int ) ( sizeof ( name ) / sizeof ( pcre_uchar ) )		1457652	0					
ANR	1457738	CastTarget	int		1457652	0					
ANR	1457739	MultiplicativeExpression	sizeof ( name ) / sizeof ( pcre_uchar )		1457652	1		/			
ANR	1457740	SizeofExpression	sizeof ( name )		1457652	0					
ANR	1457741	Sizeof	sizeof		1457652	0					
ANR	1457742	SizeofOperand	name		1457652	1					
ANR	1457743	SizeofExpression	sizeof ( pcre_uchar )		1457652	1					
ANR	1457744	Sizeof	sizeof		1457652	0					
ANR	1457745	SizeofOperand	pcre_uchar		1457652	1					
ANR	1457746	PrimaryExpression	1		1457652	1					
ANR	1457747	PostIncDecOperationExpression	i ++	1513:64:60523:60525	1457652	2	True				
ANR	1457748	Identifier	i		1457652	0					
ANR	1457749	IncDec	++		1457652	1					
ANR	1457750	CompoundStatement		23:4:441:441	1457652	3					
ANR	1457751	ExpressionStatement	c = * ( ++ ptr )	1515:4:60538:60550	1457652	0	True				
ANR	1457752	AssignmentExpression	c = * ( ++ ptr )		1457652	0		=			
ANR	1457753	Identifier	c		1457652	0					
ANR	1457754	UnaryOperationExpression	* ( ++ ptr )		1457652	1					
ANR	1457755	UnaryOperator	*		1457652	0					
ANR	1457756	UnaryExpression	++ ptr		1457652	1					
ANR	1457757	IncDec	++		1457652	0					
ANR	1457758	Identifier	ptr		1457652	1					
ANR	1457759	IfStatement	if ( c == CHAR_NULL )		1457652	1					
ANR	1457760	Condition	c == CHAR_NULL	1516:8:60560:60573	1457652	0	True				
ANR	1457761	EqualityExpression	c == CHAR_NULL		1457652	0		==			
ANR	1457762	Identifier	c		1457652	0					
ANR	1457763	Identifier	CHAR_NULL		1457652	1					
ANR	1457764	GotoStatement	goto ERROR_RETURN ;	1516:24:60576:60593	1457652	1	True				
ANR	1457765	Identifier	ERROR_RETURN		1457652	0					
ANR	1457766	IfStatement	if ( c == CHAR_RIGHT_CURLY_BRACKET )		1457652	2					
ANR	1457767	Condition	c == CHAR_RIGHT_CURLY_BRACKET	1517:8:60603:60631	1457652	0	True				
ANR	1457768	EqualityExpression	c == CHAR_RIGHT_CURLY_BRACKET		1457652	0		==			
ANR	1457769	Identifier	c		1457652	0					
ANR	1457770	Identifier	CHAR_RIGHT_CURLY_BRACKET		1457652	1					
ANR	1457771	BreakStatement	break ;	1517:39:60634:60639	1457652	1	True				
ANR	1457772	ExpressionStatement	name [ i ] = c	1518:4:60645:60656	1457652	3	True				
ANR	1457773	AssignmentExpression	name [ i ] = c		1457652	0		=			
ANR	1457774	ArrayIndexing	name [ i ]		1457652	0					
ANR	1457775	Identifier	name		1457652	0					
ANR	1457776	Identifier	i		1457652	1					
ANR	1457777	Identifier	c		1457652	1					
ANR	1457778	IfStatement	if ( c != CHAR_RIGHT_CURLY_BRACKET )		1457652	2					
ANR	1457779	Condition	c != CHAR_RIGHT_CURLY_BRACKET	1520:6:60670:60698	1457652	0	True				
ANR	1457780	EqualityExpression	c != CHAR_RIGHT_CURLY_BRACKET		1457652	0		!=			
ANR	1457781	Identifier	c		1457652	0					
ANR	1457782	Identifier	CHAR_RIGHT_CURLY_BRACKET		1457652	1					
ANR	1457783	GotoStatement	goto ERROR_RETURN ;	1520:37:60701:60718	1457652	1	True				
ANR	1457784	Identifier	ERROR_RETURN		1457652	0					
ANR	1457785	ExpressionStatement	name [ i ] = 0	1521:2:60722:60733	1457652	3	True				
ANR	1457786	AssignmentExpression	name [ i ] = 0		1457652	0		=			
ANR	1457787	ArrayIndexing	name [ i ]		1457652	0					
ANR	1457788	Identifier	name		1457652	0					
ANR	1457789	Identifier	i		1457652	1					
ANR	1457790	PrimaryExpression	0		1457652	1					
ANR	1457791	ElseStatement	else		1457652	0					
ANR	1457792	CompoundStatement		36:2:711:711	1457652	0					
ANR	1457793	ExpressionStatement	name [ 0 ] = c	1528:2:60806:60817	1457652	0	True				
ANR	1457794	AssignmentExpression	name [ 0 ] = c		1457652	0		=			
ANR	1457795	ArrayIndexing	name [ 0 ]		1457652	0					
ANR	1457796	Identifier	name		1457652	0					
ANR	1457797	PrimaryExpression	0		1457652	1					
ANR	1457798	Identifier	c		1457652	1					
ANR	1457799	ExpressionStatement	name [ 1 ] = 0	1529:2:60821:60832	1457652	1	True				
ANR	1457800	AssignmentExpression	name [ 1 ] = 0		1457652	0		=			
ANR	1457801	ArrayIndexing	name [ 1 ]		1457652	0					
ANR	1457802	Identifier	name		1457652	0					
ANR	1457803	PrimaryExpression	1		1457652	1					
ANR	1457804	PrimaryExpression	0		1457652	1					
ANR	1457805	ExpressionStatement	* ptrptr = ptr	1532:0:60839:60852	1457652	8	True				
ANR	1457806	AssignmentExpression	* ptrptr = ptr		1457652	0		=			
ANR	1457807	UnaryOperationExpression	* ptrptr		1457652	0					
ANR	1457808	UnaryOperator	*		1457652	0					
ANR	1457809	Identifier	ptrptr		1457652	1					
ANR	1457810	Identifier	ptr		1457652	1					
ANR	1457811	ExpressionStatement	bot = 0	1536:0:60918:60925	1457652	9	True				
ANR	1457812	AssignmentExpression	bot = 0		1457652	0		=			
ANR	1457813	Identifier	bot		1457652	0					
ANR	1457814	PrimaryExpression	0		1457652	1					
ANR	1457815	ExpressionStatement	top = PRIV ( utt_size )	1537:0:60927:60947	1457652	10	True				
ANR	1457816	AssignmentExpression	top = PRIV ( utt_size )		1457652	0		=			
ANR	1457817	Identifier	top		1457652	0					
ANR	1457818	CallExpression	PRIV ( utt_size )		1457652	1					
ANR	1457819	Callee	PRIV		1457652	0					
ANR	1457820	Identifier	PRIV		1457652	0					
ANR	1457821	ArgumentList	utt_size		1457652	1					
ANR	1457822	Argument	utt_size		1457652	0					
ANR	1457823	Identifier	utt_size		1457652	0					
ANR	1457824	WhileStatement	while ( bot < top )		1457652	11					
ANR	1457825	Condition	bot < top	1539:7:60957:60965	1457652	0	True				
ANR	1457826	RelationalExpression	bot < top		1457652	0		<			
ANR	1457827	Identifier	bot		1457652	0					
ANR	1457828	Identifier	top		1457652	1					
ANR	1457829	CompoundStatement		50:2:883:888	1457652	1					
ANR	1457830	IdentifierDeclStatement	int r ;	1541:2:60974:60979	1457652	0	True				
ANR	1457831	IdentifierDecl	r		1457652	0					
ANR	1457832	IdentifierDeclType	int		1457652	0					
ANR	1457833	Identifier	r		1457652	1					
ANR	1457834	ExpressionStatement	i = ( bot + top ) >> 1	1542:2:60983:61003	1457652	1	True				
ANR	1457835	AssignmentExpression	i = ( bot + top ) >> 1		1457652	0		=			
ANR	1457836	Identifier	i		1457652	0					
ANR	1457837	ShiftExpression	( bot + top ) >> 1		1457652	1		>>			
ANR	1457838	AdditiveExpression	bot + top		1457652	0		+			
ANR	1457839	Identifier	bot		1457652	0					
ANR	1457840	Identifier	top		1457652	1					
ANR	1457841	PrimaryExpression	1		1457652	1					
ANR	1457842	ExpressionStatement	"r = STRCMP_UC_C8 ( name , PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset )"	1543:2:61007:61073	1457652	2	True				
ANR	1457843	AssignmentExpression	"r = STRCMP_UC_C8 ( name , PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset )"		1457652	0		=			
ANR	1457844	Identifier	r		1457652	0					
ANR	1457845	CallExpression	"STRCMP_UC_C8 ( name , PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset )"		1457652	1					
ANR	1457846	Callee	STRCMP_UC_C8		1457652	0					
ANR	1457847	Identifier	STRCMP_UC_C8		1457652	0					
ANR	1457848	ArgumentList	name		1457652	1					
ANR	1457849	Argument	name		1457652	0					
ANR	1457850	Identifier	name		1457652	0					
ANR	1457851	Argument	PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset		1457652	1					
ANR	1457852	AdditiveExpression	PRIV ( utt_names ) + PRIV ( utt ) [ i ] . name_offset		1457652	0		+			
ANR	1457853	CallExpression	PRIV ( utt_names )		1457652	0					
ANR	1457854	Callee	PRIV		1457652	0					
ANR	1457855	Identifier	PRIV		1457652	0					
ANR	1457856	ArgumentList	utt_names		1457652	1					
ANR	1457857	Argument	utt_names		1457652	0					
ANR	1457858	Identifier	utt_names		1457652	0					
ANR	1457859	MemberAccess	PRIV ( utt ) [ i ] . name_offset		1457652	1					
ANR	1457860	ArrayIndexing	PRIV ( utt ) [ i ]		1457652	0					
ANR	1457861	CallExpression	PRIV ( utt )		1457652	0					
ANR	1457862	Callee	PRIV		1457652	0					
ANR	1457863	Identifier	PRIV		1457652	0					
ANR	1457864	ArgumentList	utt		1457652	1					
ANR	1457865	Argument	utt		1457652	0					
ANR	1457866	Identifier	utt		1457652	0					
ANR	1457867	Identifier	i		1457652	1					
ANR	1457868	Identifier	name_offset		1457652	1					
ANR	1457869	IfStatement	if ( r == 0 )		1457652	3					
ANR	1457870	Condition	r == 0	1544:6:61081:61086	1457652	0	True				
ANR	1457871	EqualityExpression	r == 0		1457652	0		==			
ANR	1457872	Identifier	r		1457652	0					
ANR	1457873	PrimaryExpression	0		1457652	1					
ANR	1457874	CompoundStatement		54:4:1002:1002	1457652	1					
ANR	1457875	ExpressionStatement	* ptypeptr = PRIV ( utt ) [ i ] . type	1546:4:61099:61128	1457652	0	True				
ANR	1457876	AssignmentExpression	* ptypeptr = PRIV ( utt ) [ i ] . type		1457652	0		=			
ANR	1457877	UnaryOperationExpression	* ptypeptr		1457652	0					
ANR	1457878	UnaryOperator	*		1457652	0					
ANR	1457879	Identifier	ptypeptr		1457652	1					
ANR	1457880	MemberAccess	PRIV ( utt ) [ i ] . type		1457652	1					
ANR	1457881	ArrayIndexing	PRIV ( utt ) [ i ]		1457652	0					
ANR	1457882	CallExpression	PRIV ( utt )		1457652	0					
ANR	1457883	Callee	PRIV		1457652	0					
ANR	1457884	Identifier	PRIV		1457652	0					
ANR	1457885	ArgumentList	utt		1457652	1					
ANR	1457886	Argument	utt		1457652	0					
ANR	1457887	Identifier	utt		1457652	0					
ANR	1457888	Identifier	i		1457652	1					
ANR	1457889	Identifier	type		1457652	1					
ANR	1457890	ExpressionStatement	* pdataptr = PRIV ( utt ) [ i ] . value	1547:4:61134:61164	1457652	1	True				
ANR	1457891	AssignmentExpression	* pdataptr = PRIV ( utt ) [ i ] . value		1457652	0		=			
ANR	1457892	UnaryOperationExpression	* pdataptr		1457652	0					
ANR	1457893	UnaryOperator	*		1457652	0					
ANR	1457894	Identifier	pdataptr		1457652	1					
ANR	1457895	MemberAccess	PRIV ( utt ) [ i ] . value		1457652	1					
ANR	1457896	ArrayIndexing	PRIV ( utt ) [ i ]		1457652	0					
ANR	1457897	CallExpression	PRIV ( utt )		1457652	0					
ANR	1457898	Callee	PRIV		1457652	0					
ANR	1457899	Identifier	PRIV		1457652	0					
ANR	1457900	ArgumentList	utt		1457652	1					
ANR	1457901	Argument	utt		1457652	0					
ANR	1457902	Identifier	utt		1457652	0					
ANR	1457903	Identifier	i		1457652	1					
ANR	1457904	Identifier	value		1457652	1					
ANR	1457905	ReturnStatement	return TRUE ;	1548:4:61170:61181	1457652	2	True				
ANR	1457906	Identifier	TRUE		1457652	0					
ANR	1457907	IfStatement	if ( r > 0 )		1457652	4					
ANR	1457908	Condition	r > 0	1550:6:61195:61199	1457652	0	True				
ANR	1457909	RelationalExpression	r > 0		1457652	0		>			
ANR	1457910	Identifier	r		1457652	0					
ANR	1457911	PrimaryExpression	0		1457652	1					
ANR	1457912	ExpressionStatement	bot = i + 1	1550:13:61202:61213	1457652	1	True				
ANR	1457913	AssignmentExpression	bot = i + 1		1457652	0		=			
ANR	1457914	Identifier	bot		1457652	0					
ANR	1457915	AdditiveExpression	i + 1		1457652	1		+			
ANR	1457916	Identifier	i		1457652	0					
ANR	1457917	PrimaryExpression	1		1457652	1					
ANR	1457918	ElseStatement	else		1457652	0					
ANR	1457919	ExpressionStatement	top = i	1550:31:61220:61227	1457652	0	True				
ANR	1457920	AssignmentExpression	top = i		1457652	0		=			
ANR	1457921	Identifier	top		1457652	0					
ANR	1457922	Identifier	i		1457652	1					
ANR	1457923	ExpressionStatement	* errorcodeptr = ERR47	1553:0:61234:61255	1457652	12	True				
ANR	1457924	AssignmentExpression	* errorcodeptr = ERR47		1457652	0		=			
ANR	1457925	UnaryOperationExpression	* errorcodeptr		1457652	0					
ANR	1457926	UnaryOperator	*		1457652	0					
ANR	1457927	Identifier	errorcodeptr		1457652	1					
ANR	1457928	Identifier	ERR47		1457652	1					
ANR	1457929	ExpressionStatement	* ptrptr = ptr	1554:0:61257:61270	1457652	13	True				
ANR	1457930	AssignmentExpression	* ptrptr = ptr		1457652	0		=			
ANR	1457931	UnaryOperationExpression	* ptrptr		1457652	0					
ANR	1457932	UnaryOperator	*		1457652	0					
ANR	1457933	Identifier	ptrptr		1457652	1					
ANR	1457934	Identifier	ptr		1457652	1					
ANR	1457935	ReturnStatement	return FALSE ;	1555:0:61272:61284	1457652	14	True				
ANR	1457936	Identifier	FALSE		1457652	0					
ANR	1457937	Label	ERROR_RETURN :	1557:0:61287:61299	1457652	15	True				
ANR	1457938	Identifier	ERROR_RETURN		1457652	0					
ANR	1457939	ExpressionStatement	* errorcodeptr = ERR46	1558:0:61301:61322	1457652	16	True				
ANR	1457940	AssignmentExpression	* errorcodeptr = ERR46		1457652	0		=			
ANR	1457941	UnaryOperationExpression	* errorcodeptr		1457652	0					
ANR	1457942	UnaryOperator	*		1457652	0					
ANR	1457943	Identifier	errorcodeptr		1457652	1					
ANR	1457944	Identifier	ERR46		1457652	1					
ANR	1457945	ExpressionStatement	* ptrptr = ptr	1559:0:61324:61337	1457652	17	True				
ANR	1457946	AssignmentExpression	* ptrptr = ptr		1457652	0		=			
ANR	1457947	UnaryOperationExpression	* ptrptr		1457652	0					
ANR	1457948	UnaryOperator	*		1457652	0					
ANR	1457949	Identifier	ptrptr		1457652	1					
ANR	1457950	Identifier	ptr		1457652	1					
ANR	1457951	ReturnStatement	return FALSE ;	1560:0:61339:61351	1457652	18	True				
ANR	1457952	Identifier	FALSE		1457652	0					
ANR	1457953	ReturnType	static BOOL		1457652	1					
ANR	1457954	Identifier	get_ucp		1457652	2					
ANR	1457955	ParameterList	"const pcre_uchar * * ptrptr , BOOL * negptr , unsigned int * ptypeptr , unsigned int * pdataptr , int * errorcodeptr"		1457652	3					
ANR	1457956	Parameter	const pcre_uchar * * ptrptr	1490:8:59980:60004	1457652	0	True				
ANR	1457957	ParameterType	const pcre_uchar * *		1457652	0					
ANR	1457958	Identifier	ptrptr		1457652	1					
ANR	1457959	Parameter	BOOL * negptr	1490:35:60007:60018	1457652	1	True				
ANR	1457960	ParameterType	BOOL *		1457652	0					
ANR	1457961	Identifier	negptr		1457652	1					
ANR	1457962	Parameter	unsigned int * ptypeptr	1490:49:60021:60042	1457652	2	True				
ANR	1457963	ParameterType	unsigned int *		1457652	0					
ANR	1457964	Identifier	ptypeptr		1457652	1					
ANR	1457965	Parameter	unsigned int * pdataptr	1491:2:60047:60068	1457652	3	True				
ANR	1457966	ParameterType	unsigned int *		1457652	0					
ANR	1457967	Identifier	pdataptr		1457652	1					
ANR	1457968	Parameter	int * errorcodeptr	1491:26:60071:60087	1457652	4	True				
ANR	1457969	ParameterType	int *		1457652	0					
ANR	1457970	Identifier	errorcodeptr		1457652	1					
ANR	1457971	CFGEntryNode	ENTRY		1457652		True				
ANR	1457972	CFGExitNode	EXIT		1457652		True				
ANR	1457973	Symbol	utt_names		1457652						
ANR	1457974	Symbol	bot		1457652						
ANR	1457975	Symbol	PRIV		1457652						
ANR	1457976	Symbol	PRIV ( utt ) [ i ] . type		1457652						
ANR	1457977	Symbol	top		1457652						
ANR	1457978	Symbol	utt_size		1457652						
ANR	1457979	Symbol	* ptr		1457652						
ANR	1457980	Symbol	* ( ++ ptr )		1457652						
ANR	1457981	Symbol	* ptrptr		1457652						
ANR	1457982	Symbol	pdataptr		1457652						
ANR	1457983	Symbol	* name		1457652						
ANR	1457984	Symbol	c		1457652						
ANR	1457985	Symbol	CHAR_CIRCUMFLEX_ACCENT		1457652						
ANR	1457986	Symbol	i		1457652						
ANR	1457987	Symbol	TRUE		1457652						
ANR	1457988	Symbol	* pdataptr		1457652						
ANR	1457989	Symbol	negptr		1457652						
ANR	1457990	Symbol	ptypeptr		1457652						
ANR	1457991	Symbol	errorcodeptr		1457652						
ANR	1457992	Symbol	ptr		1457652						
ANR	1457993	Symbol	CHAR_NULL		1457652						
ANR	1457994	Symbol	CHAR_RIGHT_CURLY_BRACKET		1457652						
ANR	1457995	Symbol	* PRIV		1457652						
ANR	1457996	Symbol	r		1457652						
ANR	1457997	Symbol	* i		1457652						
ANR	1457998	Symbol	utt		1457652						
ANR	1457999	Symbol	* errorcodeptr		1457652						
ANR	1458000	Symbol	CHAR_LEFT_CURLY_BRACKET		1457652						
ANR	1458001	Symbol	PRIV ( utt ) [ i ] . name_offset		1457652						
ANR	1458002	Symbol	STRCMP_UC_C8		1457652						
ANR	1458003	Symbol	ERR46		1457652						
ANR	1458004	Symbol	ptrptr		1457652						
ANR	1458005	Symbol	name		1457652						
ANR	1458006	Symbol	* negptr		1457652						
ANR	1458007	Symbol	PRIV ( utt ) [ i ] . value		1457652						
ANR	1458008	Symbol	FALSE		1457652						
ANR	1458009	Symbol	ERR47		1457652						
ANR	1458010	Symbol	* ptypeptr		1457652						
ANR	1458011	Function	read_repeat_counts	1585:0:62100:62798							
ANR	1458012	FunctionDef	"read_repeat_counts (const pcre_uchar * p , int * minp , int * maxp , int * errorcodeptr)"		1458011	0					
ANR	1458013	CompoundStatement		1587:0:62207:62798	1458011	0					
ANR	1458014	IdentifierDeclStatement	int min = 0 ;	1588:0:62209:62220	1458011	0	True				
ANR	1458015	IdentifierDecl	min = 0		1458011	0					
ANR	1458016	IdentifierDeclType	int		1458011	0					
ANR	1458017	Identifier	min		1458011	1					
ANR	1458018	AssignmentExpression	min = 0		1458011	2		=			
ANR	1458019	Identifier	min		1458011	0					
ANR	1458020	PrimaryExpression	0		1458011	1					
ANR	1458021	IdentifierDeclStatement	int max = - 1 ;	1589:0:62222:62234	1458011	1	True				
ANR	1458022	IdentifierDecl	max = - 1		1458011	0					
ANR	1458023	IdentifierDeclType	int		1458011	0					
ANR	1458024	Identifier	max		1458011	1					
ANR	1458025	AssignmentExpression	max = - 1		1458011	2		=			
ANR	1458026	Identifier	max		1458011	0					
ANR	1458027	UnaryOperationExpression	- 1		1458011	1					
ANR	1458028	UnaryOperator	-		1458011	0					
ANR	1458029	PrimaryExpression	1		1458011	1					
ANR	1458030	WhileStatement	while ( IS_DIGIT ( * p ) )		1458011	2					
ANR	1458031	Condition	IS_DIGIT ( * p )	1591:7:62244:62255	1458011	0	True				
ANR	1458032	CallExpression	IS_DIGIT ( * p )		1458011	0					
ANR	1458033	Callee	IS_DIGIT		1458011	0					
ANR	1458034	Identifier	IS_DIGIT		1458011	0					
ANR	1458035	ArgumentList	* p		1458011	1					
ANR	1458036	Argument	* p		1458011	0					
ANR	1458037	UnaryOperationExpression	* p		1458011	0					
ANR	1458038	UnaryOperator	*		1458011	0					
ANR	1458039	Identifier	p		1458011	1					
ANR	1458040	CompoundStatement		6:2:52:52	1458011	1					
ANR	1458041	ExpressionStatement	min = min * 10 + ( int ) ( * p ++ - CHAR_0 )	1593:2:62264:62301	1458011	0	True				
ANR	1458042	AssignmentExpression	min = min * 10 + ( int ) ( * p ++ - CHAR_0 )		1458011	0		=			
ANR	1458043	Identifier	min		1458011	0					
ANR	1458044	AdditiveExpression	min * 10 + ( int ) ( * p ++ - CHAR_0 )		1458011	1		+			
ANR	1458045	MultiplicativeExpression	min * 10		1458011	0		*			
ANR	1458046	Identifier	min		1458011	0					
ANR	1458047	PrimaryExpression	10		1458011	1					
ANR	1458048	CastExpression	( int ) ( * p ++ - CHAR_0 )		1458011	1					
ANR	1458049	CastTarget	int		1458011	0					
ANR	1458050	AdditiveExpression	* p ++ - CHAR_0		1458011	1		-			
ANR	1458051	UnaryOperationExpression	* p ++		1458011	0					
ANR	1458052	UnaryOperator	*		1458011	0					
ANR	1458053	PostIncDecOperationExpression	p ++		1458011	1					
ANR	1458054	Identifier	p		1458011	0					
ANR	1458055	IncDec	++		1458011	1					
ANR	1458056	Identifier	CHAR_0		1458011	1					
ANR	1458057	IfStatement	if ( min > 65535 )		1458011	1					
ANR	1458058	Condition	min > 65535	1594:6:62309:62319	1458011	0	True				
ANR	1458059	RelationalExpression	min > 65535		1458011	0		>			
ANR	1458060	Identifier	min		1458011	0					
ANR	1458061	PrimaryExpression	65535		1458011	1					
ANR	1458062	CompoundStatement		9:4:118:118	1458011	1					
ANR	1458063	ExpressionStatement	* errorcodeptr = ERR5	1596:4:62332:62352	1458011	0	True				
ANR	1458064	AssignmentExpression	* errorcodeptr = ERR5		1458011	0		=			
ANR	1458065	UnaryOperationExpression	* errorcodeptr		1458011	0					
ANR	1458066	UnaryOperator	*		1458011	0					
ANR	1458067	Identifier	errorcodeptr		1458011	1					
ANR	1458068	Identifier	ERR5		1458011	1					
ANR	1458069	ReturnStatement	return p ;	1597:4:62358:62366	1458011	1	True				
ANR	1458070	Identifier	p		1458011	0					
ANR	1458071	IfStatement	if ( * p == CHAR_RIGHT_CURLY_BRACKET )		1458011	3					
ANR	1458072	Condition	* p == CHAR_RIGHT_CURLY_BRACKET	1601:4:62383:62412	1458011	0	True				
ANR	1458073	EqualityExpression	* p == CHAR_RIGHT_CURLY_BRACKET		1458011	0		==			
ANR	1458074	UnaryOperationExpression	* p		1458011	0					
ANR	1458075	UnaryOperator	*		1458011	0					
ANR	1458076	Identifier	p		1458011	1					
ANR	1458077	Identifier	CHAR_RIGHT_CURLY_BRACKET		1458011	1					
ANR	1458078	ExpressionStatement	max = min	1601:36:62415:62424	1458011	1	True				
ANR	1458079	AssignmentExpression	max = min		1458011	0		=			
ANR	1458080	Identifier	max		1458011	0					
ANR	1458081	Identifier	min		1458011	1					
ANR	1458082	ElseStatement	else		1458011	0					
ANR	1458083	CompoundStatement		16:2:225:225	1458011	0					
ANR	1458084	IfStatement	if ( * ( ++ p ) != CHAR_RIGHT_CURLY_BRACKET )		1458011	0					
ANR	1458085	Condition	* ( ++ p ) != CHAR_RIGHT_CURLY_BRACKET	1603:6:62441:62474	1458011	0	True				
ANR	1458086	EqualityExpression	* ( ++ p ) != CHAR_RIGHT_CURLY_BRACKET		1458011	0		!=			
ANR	1458087	UnaryOperationExpression	* ( ++ p )		1458011	0					
ANR	1458088	UnaryOperator	*		1458011	0					
ANR	1458089	UnaryExpression	++ p		1458011	1					
ANR	1458090	IncDec	++		1458011	0					
ANR	1458091	Identifier	p		1458011	1					
ANR	1458092	Identifier	CHAR_RIGHT_CURLY_BRACKET		1458011	1					
ANR	1458093	CompoundStatement		18:4:273:273	1458011	1					
ANR	1458094	ExpressionStatement	max = 0	1605:4:62487:62494	1458011	0	True				
ANR	1458095	AssignmentExpression	max = 0		1458011	0		=			
ANR	1458096	Identifier	max		1458011	0					
ANR	1458097	PrimaryExpression	0		1458011	1					
ANR	1458098	WhileStatement	while ( IS_DIGIT ( * p ) )		1458011	1					
ANR	1458099	Condition	IS_DIGIT ( * p )	1606:10:62506:62517	1458011	0	True				
ANR	1458100	CallExpression	IS_DIGIT ( * p )		1458011	0					
ANR	1458101	Callee	IS_DIGIT		1458011	0					
ANR	1458102	Identifier	IS_DIGIT		1458011	0					
ANR	1458103	ArgumentList	* p		1458011	1					
ANR	1458104	Argument	* p		1458011	0					
ANR	1458105	UnaryOperationExpression	* p		1458011	0					
ANR	1458106	UnaryOperator	*		1458011	0					
ANR	1458107	Identifier	p		1458011	1					
ANR	1458108	CompoundStatement		21:6:318:318	1458011	1					
ANR	1458109	ExpressionStatement	max = max * 10 + ( int ) ( * p ++ - CHAR_0 )	1608:6:62534:62571	1458011	0	True				
ANR	1458110	AssignmentExpression	max = max * 10 + ( int ) ( * p ++ - CHAR_0 )		1458011	0		=			
ANR	1458111	Identifier	max		1458011	0					
ANR	1458112	AdditiveExpression	max * 10 + ( int ) ( * p ++ - CHAR_0 )		1458011	1		+			
ANR	1458113	MultiplicativeExpression	max * 10		1458011	0		*			
ANR	1458114	Identifier	max		1458011	0					
ANR	1458115	PrimaryExpression	10		1458011	1					
ANR	1458116	CastExpression	( int ) ( * p ++ - CHAR_0 )		1458011	1					
ANR	1458117	CastTarget	int		1458011	0					
ANR	1458118	AdditiveExpression	* p ++ - CHAR_0		1458011	1		-			
ANR	1458119	UnaryOperationExpression	* p ++		1458011	0					
ANR	1458120	UnaryOperator	*		1458011	0					
ANR	1458121	PostIncDecOperationExpression	p ++		1458011	1					
ANR	1458122	Identifier	p		1458011	0					
ANR	1458123	IncDec	++		1458011	1					
ANR	1458124	Identifier	CHAR_0		1458011	1					
ANR	1458125	IfStatement	if ( max > 65535 )		1458011	1					
ANR	1458126	Condition	max > 65535	1609:10:62583:62593	1458011	0	True				
ANR	1458127	RelationalExpression	max > 65535		1458011	0		>			
ANR	1458128	Identifier	max		1458011	0					
ANR	1458129	PrimaryExpression	65535		1458011	1					
ANR	1458130	CompoundStatement		24:8:396:396	1458011	1					
ANR	1458131	ExpressionStatement	* errorcodeptr = ERR5	1611:8:62614:62634	1458011	0	True				
ANR	1458132	AssignmentExpression	* errorcodeptr = ERR5		1458011	0		=			
ANR	1458133	UnaryOperationExpression	* errorcodeptr		1458011	0					
ANR	1458134	UnaryOperator	*		1458011	0					
ANR	1458135	Identifier	errorcodeptr		1458011	1					
ANR	1458136	Identifier	ERR5		1458011	1					
ANR	1458137	ReturnStatement	return p ;	1612:8:62644:62652	1458011	1	True				
ANR	1458138	Identifier	p		1458011	0					
ANR	1458139	IfStatement	if ( max < min )		1458011	2					
ANR	1458140	Condition	max < min	1615:8:62680:62688	1458011	0	True				
ANR	1458141	RelationalExpression	max < min		1458011	0		<			
ANR	1458142	Identifier	max		1458011	0					
ANR	1458143	Identifier	min		1458011	1					
ANR	1458144	CompoundStatement		30:6:489:489	1458011	1					
ANR	1458145	ExpressionStatement	* errorcodeptr = ERR4	1617:6:62705:62725	1458011	0	True				
ANR	1458146	AssignmentExpression	* errorcodeptr = ERR4		1458011	0		=			
ANR	1458147	UnaryOperationExpression	* errorcodeptr		1458011	0					
ANR	1458148	UnaryOperator	*		1458011	0					
ANR	1458149	Identifier	errorcodeptr		1458011	1					
ANR	1458150	Identifier	ERR4		1458011	1					
ANR	1458151	ReturnStatement	return p ;	1618:6:62733:62741	1458011	1	True				
ANR	1458152	Identifier	p		1458011	0					
ANR	1458153	ExpressionStatement	* minp = min	1623:0:62762:62773	1458011	4	True				
ANR	1458154	AssignmentExpression	* minp = min		1458011	0		=			
ANR	1458155	UnaryOperationExpression	* minp		1458011	0					
ANR	1458156	UnaryOperator	*		1458011	0					
ANR	1458157	Identifier	minp		1458011	1					
ANR	1458158	Identifier	min		1458011	1					
ANR	1458159	ExpressionStatement	* maxp = max	1624:0:62775:62786	1458011	5	True				
ANR	1458160	AssignmentExpression	* maxp = max		1458011	0		=			
ANR	1458161	UnaryOperationExpression	* maxp		1458011	0					
ANR	1458162	UnaryOperator	*		1458011	0					
ANR	1458163	Identifier	maxp		1458011	1					
ANR	1458164	Identifier	max		1458011	1					
ANR	1458165	ReturnStatement	return p ;	1625:0:62788:62796	1458011	6	True				
ANR	1458166	Identifier	p		1458011	0					
ANR	1458167	ReturnType	static const pcre_uchar *		1458011	1					
ANR	1458168	Identifier	read_repeat_counts		1458011	2					
ANR	1458169	ParameterList	"const pcre_uchar * p , int * minp , int * maxp , int * errorcodeptr"		1458011	3					
ANR	1458170	Parameter	const pcre_uchar * p	1586:19:62145:62163	1458011	0	True				
ANR	1458171	ParameterType	const pcre_uchar *		1458011	0					
ANR	1458172	Identifier	p		1458011	1					
ANR	1458173	Parameter	int * minp	1586:40:62166:62174	1458011	1	True				
ANR	1458174	ParameterType	int *		1458011	0					
ANR	1458175	Identifier	minp		1458011	1					
ANR	1458176	Parameter	int * maxp	1586:51:62177:62185	1458011	2	True				
ANR	1458177	ParameterType	int *		1458011	0					
ANR	1458178	Identifier	maxp		1458011	1					
ANR	1458179	Parameter	int * errorcodeptr	1586:62:62188:62204	1458011	3	True				
ANR	1458180	ParameterType	int *		1458011	0					
ANR	1458181	Identifier	errorcodeptr		1458011	1					
ANR	1458182	CFGEntryNode	ENTRY		1458011		True				
ANR	1458183	CFGExitNode	EXIT		1458011		True				
ANR	1458184	Symbol	* maxp		1458011						
ANR	1458185	Symbol	max		1458011						
ANR	1458186	Symbol	* p ++		1458011						
ANR	1458187	Symbol	minp		1458011						
ANR	1458188	Symbol	CHAR_0		1458011						
ANR	1458189	Symbol	errorcodeptr		1458011						
ANR	1458190	Symbol	IS_DIGIT		1458011						
ANR	1458191	Symbol	CHAR_RIGHT_CURLY_BRACKET		1458011						
ANR	1458192	Symbol	ERR4		1458011						
ANR	1458193	Symbol	p		1458011						
ANR	1458194	Symbol	ERR5		1458011						
ANR	1458195	Symbol	min		1458011						
ANR	1458196	Symbol	* errorcodeptr		1458011						
ANR	1458197	Symbol	* minp		1458011						
ANR	1458198	Symbol	* ( ++ p )		1458011						
ANR	1458199	Symbol	* p		1458011						
ANR	1458200	Symbol	maxp		1458011						
ANR	1458201	Function	first_significant_code	1647:0:63460:64157							
ANR	1458202	FunctionDef	"first_significant_code (const pcre_uchar * code , BOOL skipassert)"		1458201	0					
ANR	1458203	CompoundStatement		1649:0:63549:64157	1458201	0					
ANR	1458204	ForStatement	for ( ; ; )		1458201	0					
ANR	1458205	CompoundStatement		3:2:12:12	1458201	0					
ANR	1458206	SwitchStatement	switch ( ( int ) * code )		1458201	0					
ANR	1458207	Condition	( int ) * code	1652:10:63574:63583	1458201	0	True				
ANR	1458208	CastExpression	( int ) * code		1458201	0					
ANR	1458209	CastTarget	int		1458201	0					
ANR	1458210	UnaryOperationExpression	* code		1458201	1					
ANR	1458211	UnaryOperator	*		1458201	0					
ANR	1458212	Identifier	code		1458201	1					
ANR	1458213	CompoundStatement		5:4:40:40	1458201	1					
ANR	1458214	Label	case OP_ASSERT_NOT :	1654:4:63596:63614	1458201	0	True				
ANR	1458215	Identifier	OP_ASSERT_NOT		1458201	0					
ANR	1458216	Label	case OP_ASSERTBACK :	1655:4:63620:63638	1458201	1	True				
ANR	1458217	Identifier	OP_ASSERTBACK		1458201	0					
ANR	1458218	Label	case OP_ASSERTBACK_NOT :	1656:4:63644:63666	1458201	2	True				
ANR	1458219	Identifier	OP_ASSERTBACK_NOT		1458201	0					
ANR	1458220	IfStatement	if ( ! skipassert )		1458201	3					
ANR	1458221	Condition	! skipassert	1657:8:63676:63686	1458201	0	True				
ANR	1458222	UnaryOperationExpression	! skipassert		1458201	0					
ANR	1458223	UnaryOperator	!		1458201	0					
ANR	1458224	Identifier	skipassert		1458201	1					
ANR	1458225	ReturnStatement	return code ;	1657:21:63689:63700	1458201	1	True				
ANR	1458226	Identifier	code		1458201	0					
ANR	1458227	DoStatement	do		1458201	4					
ANR	1458228	ExpressionStatement	"code += GET ( code , 1 )"	1658:7:63709:63729	1458201	0	True				
ANR	1458229	AssignmentExpression	"code += GET ( code , 1 )"		1458201	0		+=			
ANR	1458230	Identifier	code		1458201	0					
ANR	1458231	CallExpression	"GET ( code , 1 )"		1458201	1					
ANR	1458232	Callee	GET		1458201	0					
ANR	1458233	Identifier	GET		1458201	0					
ANR	1458234	ArgumentList	code		1458201	1					
ANR	1458235	Argument	code		1458201	0					
ANR	1458236	Identifier	code		1458201	0					
ANR	1458237	Argument	1		1458201	1					
ANR	1458238	PrimaryExpression	1		1458201	0					
ANR	1458239	Condition	* code == OP_ALT	1658:36:63738:63752	1458201	1	True				
ANR	1458240	EqualityExpression	* code == OP_ALT		1458201	0		==			
ANR	1458241	UnaryOperationExpression	* code		1458201	0					
ANR	1458242	UnaryOperator	*		1458201	0					
ANR	1458243	Identifier	code		1458201	1					
ANR	1458244	Identifier	OP_ALT		1458201	1					
ANR	1458245	ExpressionStatement	code += PRIV ( OP_lengths ) [ * code ]	1659:4:63760:63791	1458201	5	True				
ANR	1458246	AssignmentExpression	code += PRIV ( OP_lengths ) [ * code ]		1458201	0		+=			
ANR	1458247	Identifier	code		1458201	0					
ANR	1458248	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		1458201	1					
ANR	1458249	CallExpression	PRIV ( OP_lengths )		1458201	0					
ANR	1458250	Callee	PRIV		1458201	0					
ANR	1458251	Identifier	PRIV		1458201	0					
ANR	1458252	ArgumentList	OP_lengths		1458201	1					
ANR	1458253	Argument	OP_lengths		1458201	0					
ANR	1458254	Identifier	OP_lengths		1458201	0					
ANR	1458255	UnaryOperationExpression	* code		1458201	1					
ANR	1458256	UnaryOperator	*		1458201	0					
ANR	1458257	Identifier	code		1458201	1					
ANR	1458258	BreakStatement	break ;	1660:4:63797:63802	1458201	6	True				
ANR	1458259	Label	case OP_WORD_BOUNDARY :	1662:4:63809:63830	1458201	7	True				
ANR	1458260	Identifier	OP_WORD_BOUNDARY		1458201	0					
ANR	1458261	Label	case OP_NOT_WORD_BOUNDARY :	1663:4:63836:63861	1458201	8	True				
ANR	1458262	Identifier	OP_NOT_WORD_BOUNDARY		1458201	0					
ANR	1458263	IfStatement	if ( ! skipassert )		1458201	9					
ANR	1458264	Condition	! skipassert	1664:8:63871:63881	1458201	0	True				
ANR	1458265	UnaryOperationExpression	! skipassert		1458201	0					
ANR	1458266	UnaryOperator	!		1458201	0					
ANR	1458267	Identifier	skipassert		1458201	1					
ANR	1458268	ReturnStatement	return code ;	1664:21:63884:63895	1458201	1	True				
ANR	1458269	Identifier	code		1458201	0					
ANR	1458270	Label	case OP_CALLOUT :	1667:4:63925:63940	1458201	10	True				
ANR	1458271	Identifier	OP_CALLOUT		1458201	0					
ANR	1458272	Label	case OP_CREF :	1668:4:63946:63958	1458201	11	True				
ANR	1458273	Identifier	OP_CREF		1458201	0					
ANR	1458274	Label	case OP_DNCREF :	1669:4:63964:63978	1458201	12	True				
ANR	1458275	Identifier	OP_DNCREF		1458201	0					
ANR	1458276	Label	case OP_RREF :	1670:4:63984:63996	1458201	13	True				
ANR	1458277	Identifier	OP_RREF		1458201	0					
ANR	1458278	Label	case OP_DNRREF :	1671:4:64002:64016	1458201	14	True				
ANR	1458279	Identifier	OP_DNRREF		1458201	0					
ANR	1458280	Label	case OP_DEF :	1672:4:64022:64033	1458201	15	True				
ANR	1458281	Identifier	OP_DEF		1458201	0					
ANR	1458282	ExpressionStatement	code += PRIV ( OP_lengths ) [ * code ]	1673:4:64039:64070	1458201	16	True				
ANR	1458283	AssignmentExpression	code += PRIV ( OP_lengths ) [ * code ]		1458201	0		+=			
ANR	1458284	Identifier	code		1458201	0					
ANR	1458285	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		1458201	1					
ANR	1458286	CallExpression	PRIV ( OP_lengths )		1458201	0					
ANR	1458287	Callee	PRIV		1458201	0					
ANR	1458288	Identifier	PRIV		1458201	0					
ANR	1458289	ArgumentList	OP_lengths		1458201	1					
ANR	1458290	Argument	OP_lengths		1458201	0					
ANR	1458291	Identifier	OP_lengths		1458201	0					
ANR	1458292	UnaryOperationExpression	* code		1458201	1					
ANR	1458293	UnaryOperator	*		1458201	0					
ANR	1458294	Identifier	code		1458201	1					
ANR	1458295	BreakStatement	break ;	1674:4:64076:64081	1458201	17	True				
ANR	1458296	Label	default :	1676:4:64088:64095	1458201	18	True				
ANR	1458297	Identifier	default		1458201	0					
ANR	1458298	ReturnStatement	return code ;	1677:4:64101:64112	1458201	19	True				
ANR	1458299	Identifier	code		1458201	0					
ANR	1458300	ReturnType	static const pcre_uchar *		1458201	1					
ANR	1458301	Identifier	first_significant_code		1458201	2					
ANR	1458302	ParameterList	"const pcre_uchar * code , BOOL skipassert"		1458201	3					
ANR	1458303	Parameter	const pcre_uchar * code	1648:23:63508:63529	1458201	0	True				
ANR	1458304	ParameterType	const pcre_uchar *		1458201	0					
ANR	1458305	Identifier	code		1458201	1					
ANR	1458306	Parameter	BOOL skipassert	1648:47:63532:63546	1458201	1	True				
ANR	1458307	ParameterType	BOOL		1458201	0					
ANR	1458308	Identifier	skipassert		1458201	1					
ANR	1458309	CFGEntryNode	ENTRY		1458201		True				
ANR	1458310	CFGExitNode	EXIT		1458201		True				
ANR	1458311	InfiniteForNode	true		1458201		True				
ANR	1458312	Symbol	* PRIV		1458201						
ANR	1458313	Symbol	code		1458201						
ANR	1458314	Symbol	GET		1458201						
ANR	1458315	Symbol	skipassert		1458201						
ANR	1458316	Symbol	OP_ALT		1458201						
ANR	1458317	Symbol	OP_lengths		1458201						
ANR	1458318	Symbol	PRIV		1458201						
ANR	1458319	Symbol	* * code		1458201						
ANR	1458320	Symbol	* code		1458201						
ANR	1458321	Function	find_fixedlength	1714:0:65565:73562							
ANR	1458322	FunctionDef	"find_fixedlength (pcre_uchar * code , BOOL utf , BOOL atend , compile_data * cd , recurse_check * recurses)"		1458321	0					
ANR	1458323	CompoundStatement		1717:0:65678:73562	1458321	0					
ANR	1458324	IdentifierDeclStatement	int length = - 1 ;	1718:0:65680:65695	1458321	0	True				
ANR	1458325	IdentifierDecl	length = - 1		1458321	0					
ANR	1458326	IdentifierDeclType	int		1458321	0					
ANR	1458327	Identifier	length		1458321	1					
ANR	1458328	AssignmentExpression	length = - 1		1458321	2		=			
ANR	1458329	Identifier	length		1458321	0					
ANR	1458330	UnaryOperationExpression	- 1		1458321	1					
ANR	1458331	UnaryOperator	-		1458321	0					
ANR	1458332	PrimaryExpression	1		1458321	1					
ANR	1458333	IdentifierDeclStatement	recurse_check this_recurse ;	1719:0:65697:65723	1458321	1	True				
ANR	1458334	IdentifierDecl	this_recurse		1458321	0					
ANR	1458335	IdentifierDeclType	recurse_check		1458321	0					
ANR	1458336	Identifier	this_recurse		1458321	1					
ANR	1458337	Statement	register	1720:0:65725:65732	1458321	2	True				
ANR	1458338	IdentifierDeclStatement	int branchlength = 0 ;	1720:9:65734:65754	1458321	3	True				
ANR	1458339	IdentifierDecl	branchlength = 0		1458321	0					
ANR	1458340	IdentifierDeclType	int		1458321	0					
ANR	1458341	Identifier	branchlength		1458321	1					
ANR	1458342	AssignmentExpression	branchlength = 0		1458321	2		=			
ANR	1458343	Identifier	branchlength		1458321	0					
ANR	1458344	PrimaryExpression	0		1458321	1					
ANR	1458345	Statement	register	1721:0:65756:65763	1458321	4	True				
ANR	1458346	IdentifierDeclStatement	pcre_uchar * cc = code + 1 + LINK_SIZE ;	1721:9:65765:65802	1458321	5	True				
ANR	1458347	IdentifierDecl	* cc = code + 1 + LINK_SIZE		1458321	0					
ANR	1458348	IdentifierDeclType	pcre_uchar *		1458321	0					
ANR	1458349	Identifier	cc		1458321	1					
ANR	1458350	AssignmentExpression	* cc = code + 1 + LINK_SIZE		1458321	2		=			
ANR	1458351	Identifier	cc		1458321	0					
ANR	1458352	AdditiveExpression	code + 1 + LINK_SIZE		1458321	1		+			
ANR	1458353	Identifier	code		1458321	0					
ANR	1458354	AdditiveExpression	1 + LINK_SIZE		1458321	1		+			
ANR	1458355	PrimaryExpression	1		1458321	0					
ANR	1458356	Identifier	LINK_SIZE		1458321	1					
ANR	1458357	ForStatement	for ( ; ; )		1458321	6					
ANR	1458358	CompoundStatement		14:11:318:337	1458321	0					
ANR	1458359	IdentifierDeclStatement	int d ;	1728:2:65956:65961	1458321	0	True				
ANR	1458360	IdentifierDecl	d		1458321	0					
ANR	1458361	IdentifierDeclType	int		1458321	0					
ANR	1458362	Identifier	d		1458321	1					
ANR	1458363	IdentifierDeclStatement	"pcre_uchar * ce , * cs ;"	1729:2:65965:65984	1458321	1	True				
ANR	1458364	IdentifierDecl	* ce		1458321	0					
ANR	1458365	IdentifierDeclType	pcre_uchar *		1458321	0					
ANR	1458366	Identifier	ce		1458321	1					
ANR	1458367	IdentifierDecl	* cs		1458321	1					
ANR	1458368	IdentifierDeclType	pcre_uchar *		1458321	0					
ANR	1458369	Identifier	cs		1458321	1					
ANR	1458370	Statement	register	1730:2:65988:65995	1458321	2	True				
ANR	1458371	IdentifierDeclStatement	pcre_uchar op = * cc ;	1730:11:65997:66016	1458321	3	True				
ANR	1458372	IdentifierDecl	op = * cc		1458321	0					
ANR	1458373	IdentifierDeclType	pcre_uchar		1458321	0					
ANR	1458374	Identifier	op		1458321	1					
ANR	1458375	AssignmentExpression	op = * cc		1458321	2		=			
ANR	1458376	Identifier	op		1458321	0					
ANR	1458377	UnaryOperationExpression	* cc		1458321	1					
ANR	1458378	UnaryOperator	*		1458321	0					
ANR	1458379	Identifier	cc		1458321	1					
ANR	1458380	SwitchStatement	switch ( op )		1458321	4					
ANR	1458381	Condition	op	1732:10:66029:66030	1458321	0	True				
ANR	1458382	Identifier	op		1458321	0					
ANR	1458383	CompoundStatement		17:4:358:358	1458321	1					
ANR	1458384	Label	case OP_CBRA :	1739:4:66307:66319	1458321	0	True				
ANR	1458385	Identifier	OP_CBRA		1458321	0					
ANR	1458386	Label	case OP_BRA :	1740:4:66325:66336	1458321	1	True				
ANR	1458387	Identifier	OP_BRA		1458321	0					
ANR	1458388	Label	case OP_ONCE :	1741:4:66342:66354	1458321	2	True				
ANR	1458389	Identifier	OP_ONCE		1458321	0					
ANR	1458390	Label	case OP_ONCE_NC :	1742:4:66360:66375	1458321	3	True				
ANR	1458391	Identifier	OP_ONCE_NC		1458321	0					
ANR	1458392	Label	case OP_COND :	1743:4:66381:66393	1458321	4	True				
ANR	1458393	Identifier	OP_COND		1458321	0					
ANR	1458394	ExpressionStatement	"d = find_fixedlength ( cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 ) , utf , atend , cd , recurses )"	1744:4:66399:66490	1458321	5	True				
ANR	1458395	AssignmentExpression	"d = find_fixedlength ( cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 ) , utf , atend , cd , recurses )"		1458321	0		=			
ANR	1458396	Identifier	d		1458321	0					
ANR	1458397	CallExpression	"find_fixedlength ( cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 ) , utf , atend , cd , recurses )"		1458321	1					
ANR	1458398	Callee	find_fixedlength		1458321	0					
ANR	1458399	Identifier	find_fixedlength		1458321	0					
ANR	1458400	ArgumentList	cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 )		1458321	1					
ANR	1458401	Argument	cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 )		1458321	0					
ANR	1458402	AdditiveExpression	cc + ( ( op == OP_CBRA ) ? IMM2_SIZE : 0 )		1458321	0		+			
ANR	1458403	Identifier	cc		1458321	0					
ANR	1458404	ConditionalExpression	( op == OP_CBRA ) ? IMM2_SIZE : 0		1458321	1					
ANR	1458405	Condition	op == OP_CBRA		1458321	0					
ANR	1458406	EqualityExpression	op == OP_CBRA		1458321	0		==			
ANR	1458407	Identifier	op		1458321	0					
ANR	1458408	Identifier	OP_CBRA		1458321	1					
ANR	1458409	Identifier	IMM2_SIZE		1458321	1					
ANR	1458410	PrimaryExpression	0		1458321	2					
ANR	1458411	Argument	utf		1458321	1					
ANR	1458412	Identifier	utf		1458321	0					
ANR	1458413	Argument	atend		1458321	2					
ANR	1458414	Identifier	atend		1458321	0					
ANR	1458415	Argument	cd		1458321	3					
ANR	1458416	Identifier	cd		1458321	0					
ANR	1458417	Argument	recurses		1458321	4					
ANR	1458418	Identifier	recurses		1458321	0					
ANR	1458419	IfStatement	if ( d < 0 )		1458321	6					
ANR	1458420	Condition	d < 0	1746:8:66500:66504	1458321	0	True				
ANR	1458421	RelationalExpression	d < 0		1458321	0		<			
ANR	1458422	Identifier	d		1458321	0					
ANR	1458423	PrimaryExpression	0		1458321	1					
ANR	1458424	ReturnStatement	return d ;	1746:15:66507:66515	1458321	1	True				
ANR	1458425	Identifier	d		1458321	0					
ANR	1458426	ExpressionStatement	branchlength += d	1747:4:66521:66538	1458321	7	True				
ANR	1458427	AssignmentExpression	branchlength += d		1458321	0		+=			
ANR	1458428	Identifier	branchlength		1458321	0					
ANR	1458429	Identifier	d		1458321	1					
ANR	1458430	DoStatement	do		1458321	8					
ANR	1458431	ExpressionStatement	"cc += GET ( cc , 1 )"	1748:7:66547:66563	1458321	0	True				
ANR	1458432	AssignmentExpression	"cc += GET ( cc , 1 )"		1458321	0		+=			
ANR	1458433	Identifier	cc		1458321	0					
ANR	1458434	CallExpression	"GET ( cc , 1 )"		1458321	1					
ANR	1458435	Callee	GET		1458321	0					
ANR	1458436	Identifier	GET		1458321	0					
ANR	1458437	ArgumentList	cc		1458321	1					
ANR	1458438	Argument	cc		1458321	0					
ANR	1458439	Identifier	cc		1458321	0					
ANR	1458440	Argument	1		1458321	1					
ANR	1458441	PrimaryExpression	1		1458321	0					
ANR	1458442	Condition	* cc == OP_ALT	1748:32:66572:66584	1458321	1	True				
ANR	1458443	EqualityExpression	* cc == OP_ALT		1458321	0		==			
ANR	1458444	UnaryOperationExpression	* cc		1458321	0					
ANR	1458445	UnaryOperator	*		1458321	0					
ANR	1458446	Identifier	cc		1458321	1					
ANR	1458447	Identifier	OP_ALT		1458321	1					
ANR	1458448	ExpressionStatement	cc += 1 + LINK_SIZE	1749:4:66592:66611	1458321	9	True				
ANR	1458449	AssignmentExpression	cc += 1 + LINK_SIZE		1458321	0		+=			
ANR	1458450	Identifier	cc		1458321	0					
ANR	1458451	AdditiveExpression	1 + LINK_SIZE		1458321	1		+			
ANR	1458452	PrimaryExpression	1		1458321	0					
ANR	1458453	Identifier	LINK_SIZE		1458321	1					
ANR	1458454	BreakStatement	break ;	1750:4:66617:66622	1458321	10	True				
ANR	1458455	Label	case OP_ALT :	1758:4:66996:67007	1458321	11	True				
ANR	1458456	Identifier	OP_ALT		1458321	0					
ANR	1458457	Label	case OP_KET :	1759:4:67013:67024	1458321	12	True				
ANR	1458458	Identifier	OP_KET		1458321	0					
ANR	1458459	Label	case OP_END :	1760:4:67030:67041	1458321	13	True				
ANR	1458460	Identifier	OP_END		1458321	0					
ANR	1458461	Label	case OP_ACCEPT :	1761:4:67047:67061	1458321	14	True				
ANR	1458462	Identifier	OP_ACCEPT		1458321	0					
ANR	1458463	Label	case OP_ASSERT_ACCEPT :	1762:4:67067:67088	1458321	15	True				
ANR	1458464	Identifier	OP_ASSERT_ACCEPT		1458321	0					
ANR	1458465	IfStatement	if ( length < 0 )		1458321	16					
ANR	1458466	Condition	length < 0	1763:8:67098:67107	1458321	0	True				
ANR	1458467	RelationalExpression	length < 0		1458321	0		<			
ANR	1458468	Identifier	length		1458321	0					
ANR	1458469	PrimaryExpression	0		1458321	1					
ANR	1458470	ExpressionStatement	length = branchlength	1763:20:67110:67131	1458321	1	True				
ANR	1458471	AssignmentExpression	length = branchlength		1458321	0		=			
ANR	1458472	Identifier	length		1458321	0					
ANR	1458473	Identifier	branchlength		1458321	1					
ANR	1458474	ElseStatement	else		1458321	0					
ANR	1458475	IfStatement	if ( length != branchlength )		1458321	0					
ANR	1458476	Condition	length != branchlength	1764:15:67148:67169	1458321	0	True				
ANR	1458477	EqualityExpression	length != branchlength		1458321	0		!=			
ANR	1458478	Identifier	length		1458321	0					
ANR	1458479	Identifier	branchlength		1458321	1					
ANR	1458480	ReturnStatement	return - 1 ;	1764:39:67172:67181	1458321	1	True				
ANR	1458481	UnaryOperationExpression	- 1		1458321	0					
ANR	1458482	UnaryOperator	-		1458321	0					
ANR	1458483	PrimaryExpression	1		1458321	1					
ANR	1458484	IfStatement	if ( * cc != OP_ALT )		1458321	17					
ANR	1458485	Condition	* cc != OP_ALT	1765:8:67191:67203	1458321	0	True				
ANR	1458486	EqualityExpression	* cc != OP_ALT		1458321	0		!=			
ANR	1458487	UnaryOperationExpression	* cc		1458321	0					
ANR	1458488	UnaryOperator	*		1458321	0					
ANR	1458489	Identifier	cc		1458321	1					
ANR	1458490	Identifier	OP_ALT		1458321	1					
ANR	1458491	ReturnStatement	return length ;	1765:23:67206:67219	1458321	1	True				
ANR	1458492	Identifier	length		1458321	0					
ANR	1458493	ExpressionStatement	cc += 1 + LINK_SIZE	1766:4:67225:67244	1458321	18	True				
ANR	1458494	AssignmentExpression	cc += 1 + LINK_SIZE		1458321	0		+=			
ANR	1458495	Identifier	cc		1458321	0					
ANR	1458496	AdditiveExpression	1 + LINK_SIZE		1458321	1		+			
ANR	1458497	PrimaryExpression	1		1458321	0					
ANR	1458498	Identifier	LINK_SIZE		1458321	1					
ANR	1458499	ExpressionStatement	branchlength = 0	1767:4:67250:67266	1458321	19	True				
ANR	1458500	AssignmentExpression	branchlength = 0		1458321	0		=			
ANR	1458501	Identifier	branchlength		1458321	0					
ANR	1458502	PrimaryExpression	0		1458321	1					
ANR	1458503	BreakStatement	break ;	1768:4:67272:67277	1458321	20	True				
ANR	1458504	Label	case OP_RECURSE :	1774:4:67487:67502	1458321	21	True				
ANR	1458505	Identifier	OP_RECURSE		1458321	0					
ANR	1458506	IfStatement	if ( ! atend )		1458321	22					
ANR	1458507	Condition	! atend	1775:8:67512:67517	1458321	0	True				
ANR	1458508	UnaryOperationExpression	! atend		1458321	0					
ANR	1458509	UnaryOperator	!		1458321	0					
ANR	1458510	Identifier	atend		1458321	1					
ANR	1458511	ReturnStatement	return - 3 ;	1775:16:67520:67529	1458321	1	True				
ANR	1458512	UnaryOperationExpression	- 3		1458321	0					
ANR	1458513	UnaryOperator	-		1458321	0					
ANR	1458514	PrimaryExpression	3		1458321	1					
ANR	1458515	ExpressionStatement	"cs = ce = ( pcre_uchar * ) cd -> start_code + GET ( cc , 1 )"	1776:4:67535:67586	1458321	23	True				
ANR	1458516	AssignmentExpression	"cs = ce = ( pcre_uchar * ) cd -> start_code + GET ( cc , 1 )"		1458321	0		=			
ANR	1458517	Identifier	cs		1458321	0					
ANR	1458518	AssignmentExpression	"ce = ( pcre_uchar * ) cd -> start_code + GET ( cc , 1 )"		1458321	1		=			
ANR	1458519	Identifier	ce		1458321	0					
ANR	1458520	AdditiveExpression	"( pcre_uchar * ) cd -> start_code + GET ( cc , 1 )"		1458321	1		+			
ANR	1458521	CastExpression	( pcre_uchar * ) cd -> start_code		1458321	0					
ANR	1458522	CastTarget	pcre_uchar *		1458321	0					
ANR	1458523	PtrMemberAccess	cd -> start_code		1458321	1					
ANR	1458524	Identifier	cd		1458321	0					
ANR	1458525	Identifier	start_code		1458321	1					
ANR	1458526	CallExpression	"GET ( cc , 1 )"		1458321	1					
ANR	1458527	Callee	GET		1458321	0					
ANR	1458528	Identifier	GET		1458321	0					
ANR	1458529	ArgumentList	cc		1458321	1					
ANR	1458530	Argument	cc		1458321	0					
ANR	1458531	Identifier	cc		1458321	0					
ANR	1458532	Argument	1		1458321	1					
ANR	1458533	PrimaryExpression	1		1458321	0					
ANR	1458534	DoStatement	do		1458321	24					
ANR	1458535	ExpressionStatement	"ce += GET ( ce , 1 )"	1777:7:67619:67635	1458321	0	True				
ANR	1458536	AssignmentExpression	"ce += GET ( ce , 1 )"		1458321	0		+=			
ANR	1458537	Identifier	ce		1458321	0					
ANR	1458538	CallExpression	"GET ( ce , 1 )"		1458321	1					
ANR	1458539	Callee	GET		1458321	0					
ANR	1458540	Identifier	GET		1458321	0					
ANR	1458541	ArgumentList	ce		1458321	1					
ANR	1458542	Argument	ce		1458321	0					
ANR	1458543	Identifier	ce		1458321	0					
ANR	1458544	Argument	1		1458321	1					
ANR	1458545	PrimaryExpression	1		1458321	0					
ANR	1458546	Condition	* ce == OP_ALT	1777:32:67644:67656	1458321	1	True				
ANR	1458547	EqualityExpression	* ce == OP_ALT		1458321	0		==			
ANR	1458548	UnaryOperationExpression	* ce		1458321	0					
ANR	1458549	UnaryOperator	*		1458321	0					
ANR	1458550	Identifier	ce		1458321	1					
ANR	1458551	Identifier	OP_ALT		1458321	1					
ANR	1458552	IfStatement	if ( cc > cs && cc < ce )		1458321	25					
ANR	1458553	Condition	cc > cs && cc < ce	1778:8:67699:67716	1458321	0	True				
ANR	1458554	AndExpression	cc > cs && cc < ce		1458321	0		&&			
ANR	1458555	RelationalExpression	cc > cs		1458321	0		>			
ANR	1458556	Identifier	cc		1458321	0					
ANR	1458557	Identifier	cs		1458321	1					
ANR	1458558	RelationalExpression	cc < ce		1458321	1		<			
ANR	1458559	Identifier	cc		1458321	0					
ANR	1458560	Identifier	ce		1458321	1					
ANR	1458561	ReturnStatement	return - 1 ;	1778:28:67719:67728	1458321	1	True				
ANR	1458562	UnaryOperationExpression	- 1		1458321	0					
ANR	1458563	UnaryOperator	-		1458321	0					
ANR	1458564	PrimaryExpression	1		1458321	1					
ANR	1458565	ElseStatement	else		1458321	0					
ANR	1458566	CompoundStatement		65:6:2144:2171	1458321	0					
ANR	1458567	IdentifierDeclStatement	recurse_check * r = recurses ;	1781:6:67823:67850	1458321	0	True				
ANR	1458568	IdentifierDecl	* r = recurses		1458321	0					
ANR	1458569	IdentifierDeclType	recurse_check *		1458321	0					
ANR	1458570	Identifier	r		1458321	1					
ANR	1458571	AssignmentExpression	* r = recurses		1458321	2		=			
ANR	1458572	Identifier	recurses		1458321	0					
ANR	1458573	Identifier	recurses		1458321	1					
ANR	1458574	ForStatement	for ( r = recurses ; r != NULL ; r = r -> prev )		1458321	1					
ANR	1458575	ForInit	r = recurses ;	1782:11:67863:67875	1458321	0	True				
ANR	1458576	AssignmentExpression	r = recurses		1458321	0		=			
ANR	1458577	Identifier	r		1458321	0					
ANR	1458578	Identifier	recurses		1458321	1					
ANR	1458579	Condition	r != NULL	1782:25:67877:67885	1458321	1	True				
ANR	1458580	EqualityExpression	r != NULL		1458321	0		!=			
ANR	1458581	Identifier	r		1458321	0					
ANR	1458582	Identifier	NULL		1458321	1					
ANR	1458583	AssignmentExpression	r = r -> prev	1782:36:67888:67898	1458321	2	True	=			
ANR	1458584	Identifier	r		1458321	0					
ANR	1458585	PtrMemberAccess	r -> prev		1458321	1					
ANR	1458586	Identifier	r		1458321	0					
ANR	1458587	Identifier	prev		1458321	1					
ANR	1458588	IfStatement	if ( r -> group == cs )		1458321	3					
ANR	1458589	Condition	r -> group == cs	1782:53:67905:67918	1458321	0	True				
ANR	1458590	EqualityExpression	r -> group == cs		1458321	0		==			
ANR	1458591	PtrMemberAccess	r -> group		1458321	0					
ANR	1458592	Identifier	r		1458321	0					
ANR	1458593	Identifier	group		1458321	1					
ANR	1458594	Identifier	cs		1458321	1					
ANR	1458595	BreakStatement	break ;	1782:69:67921:67926	1458321	1	True				
ANR	1458596	IfStatement	if ( r != NULL )		1458321	2					
ANR	1458597	Condition	r != NULL	1783:10:67938:67946	1458321	0	True				
ANR	1458598	EqualityExpression	r != NULL		1458321	0		!=			
ANR	1458599	Identifier	r		1458321	0					
ANR	1458600	Identifier	NULL		1458321	1					
ANR	1458601	ReturnStatement	return - 1 ;	1783:21:67949:67958	1458321	1	True				
ANR	1458602	UnaryOperationExpression	- 1		1458321	0					
ANR	1458603	UnaryOperator	-		1458321	0					
ANR	1458604	PrimaryExpression	1		1458321	1					
ANR	1458605	ExpressionStatement	this_recurse . prev = recurses	1785:4:67997:68025	1458321	26	True				
ANR	1458606	AssignmentExpression	this_recurse . prev = recurses		1458321	0		=			
ANR	1458607	MemberAccess	this_recurse . prev		1458321	0					
ANR	1458608	Identifier	this_recurse		1458321	0					
ANR	1458609	Identifier	prev		1458321	1					
ANR	1458610	Identifier	recurses		1458321	1					
ANR	1458611	ExpressionStatement	this_recurse . group = cs	1786:4:68031:68054	1458321	27	True				
ANR	1458612	AssignmentExpression	this_recurse . group = cs		1458321	0		=			
ANR	1458613	MemberAccess	this_recurse . group		1458321	0					
ANR	1458614	Identifier	this_recurse		1458321	0					
ANR	1458615	Identifier	group		1458321	1					
ANR	1458616	Identifier	cs		1458321	1					
ANR	1458617	ExpressionStatement	"d = find_fixedlength ( cs + IMM2_SIZE , utf , atend , cd , & this_recurse )"	1787:4:68060:68127	1458321	28	True				
ANR	1458618	AssignmentExpression	"d = find_fixedlength ( cs + IMM2_SIZE , utf , atend , cd , & this_recurse )"		1458321	0		=			
ANR	1458619	Identifier	d		1458321	0					
ANR	1458620	CallExpression	"find_fixedlength ( cs + IMM2_SIZE , utf , atend , cd , & this_recurse )"		1458321	1					
ANR	1458621	Callee	find_fixedlength		1458321	0					
ANR	1458622	Identifier	find_fixedlength		1458321	0					
ANR	1458623	ArgumentList	cs + IMM2_SIZE		1458321	1					
ANR	1458624	Argument	cs + IMM2_SIZE		1458321	0					
ANR	1458625	AdditiveExpression	cs + IMM2_SIZE		1458321	0		+			
ANR	1458626	Identifier	cs		1458321	0					
ANR	1458627	Identifier	IMM2_SIZE		1458321	1					
ANR	1458628	Argument	utf		1458321	1					
ANR	1458629	Identifier	utf		1458321	0					
ANR	1458630	Argument	atend		1458321	2					
ANR	1458631	Identifier	atend		1458321	0					
ANR	1458632	Argument	cd		1458321	3					
ANR	1458633	Identifier	cd		1458321	0					
ANR	1458634	Argument	& this_recurse		1458321	4					
ANR	1458635	UnaryOperationExpression	& this_recurse		1458321	0					
ANR	1458636	UnaryOperator	&		1458321	0					
ANR	1458637	Identifier	this_recurse		1458321	1					
ANR	1458638	IfStatement	if ( d < 0 )		1458321	29					
ANR	1458639	Condition	d < 0	1788:8:68137:68141	1458321	0	True				
ANR	1458640	RelationalExpression	d < 0		1458321	0		<			
ANR	1458641	Identifier	d		1458321	0					
ANR	1458642	PrimaryExpression	0		1458321	1					
ANR	1458643	ReturnStatement	return d ;	1788:15:68144:68152	1458321	1	True				
ANR	1458644	Identifier	d		1458321	0					
ANR	1458645	ExpressionStatement	branchlength += d	1789:4:68158:68175	1458321	30	True				
ANR	1458646	AssignmentExpression	branchlength += d		1458321	0		+=			
ANR	1458647	Identifier	branchlength		1458321	0					
ANR	1458648	Identifier	d		1458321	1					
ANR	1458649	ExpressionStatement	cc += 1 + LINK_SIZE	1790:4:68181:68200	1458321	31	True				
ANR	1458650	AssignmentExpression	cc += 1 + LINK_SIZE		1458321	0		+=			
ANR	1458651	Identifier	cc		1458321	0					
ANR	1458652	AdditiveExpression	1 + LINK_SIZE		1458321	1		+			
ANR	1458653	PrimaryExpression	1		1458321	0					
ANR	1458654	Identifier	LINK_SIZE		1458321	1					
ANR	1458655	BreakStatement	break ;	1791:4:68206:68211	1458321	32	True				
ANR	1458656	Label	case OP_ASSERT :	1795:4:68261:68275	1458321	33	True				
ANR	1458657	Identifier	OP_ASSERT		1458321	0					
ANR	1458658	Label	case OP_ASSERT_NOT :	1796:4:68281:68299	1458321	34	True				
ANR	1458659	Identifier	OP_ASSERT_NOT		1458321	0					
ANR	1458660	Label	case OP_ASSERTBACK :	1797:4:68305:68323	1458321	35	True				
ANR	1458661	Identifier	OP_ASSERTBACK		1458321	0					
ANR	1458662	Label	case OP_ASSERTBACK_NOT :	1798:4:68329:68351	1458321	36	True				
ANR	1458663	Identifier	OP_ASSERTBACK_NOT		1458321	0					
ANR	1458664	DoStatement	do		1458321	37					
ANR	1458665	ExpressionStatement	"cc += GET ( cc , 1 )"	1799:7:68360:68376	1458321	0	True				
ANR	1458666	AssignmentExpression	"cc += GET ( cc , 1 )"		1458321	0		+=			
ANR	1458667	Identifier	cc		1458321	0					
ANR	1458668	CallExpression	"GET ( cc , 1 )"		1458321	1					
ANR	1458669	Callee	GET		1458321	0					
ANR	1458670	Identifier	GET		1458321	0					
ANR	1458671	ArgumentList	cc		1458321	1					
ANR	1458672	Argument	cc		1458321	0					
ANR	1458673	Identifier	cc		1458321	0					
ANR	1458674	Argument	1		1458321	1					
ANR	1458675	PrimaryExpression	1		1458321	0					
ANR	1458676	Condition	* cc == OP_ALT	1799:32:68385:68397	1458321	1	True				
ANR	1458677	EqualityExpression	* cc == OP_ALT		1458321	0		==			
ANR	1458678	UnaryOperationExpression	* cc		1458321	0					
ANR	1458679	UnaryOperator	*		1458321	0					
ANR	1458680	Identifier	cc		1458321	1					
ANR	1458681	Identifier	OP_ALT		1458321	1					
ANR	1458682	ExpressionStatement	cc += PRIV ( OP_lengths ) [ * cc ]	1800:4:68405:68432	1458321	38	True				
ANR	1458683	AssignmentExpression	cc += PRIV ( OP_lengths ) [ * cc ]		1458321	0		+=			
ANR	1458684	Identifier	cc		1458321	0					
ANR	1458685	ArrayIndexing	PRIV ( OP_lengths ) [ * cc ]		1458321	1					
ANR	1458686	CallExpression	PRIV ( OP_lengths )		1458321	0					
ANR	1458687	Callee	PRIV		1458321	0					
ANR	1458688	Identifier	PRIV		1458321	0					
ANR	1458689	ArgumentList	OP_lengths		1458321	1					
ANR	1458690	Argument	OP_lengths		1458321	0					
ANR	1458691	Identifier	OP_lengths		1458321	0					
ANR	1458692	UnaryOperationExpression	* cc		1458321	1					
ANR	1458693	UnaryOperator	*		1458321	0					
ANR	1458694	Identifier	cc		1458321	1					
ANR	1458695	BreakStatement	break ;	1801:4:68438:68443	1458321	39	True				
ANR	1458696	Label	case OP_MARK :	1805:4:68501:68513	1458321	40	True				
ANR	1458697	Identifier	OP_MARK		1458321	0					
ANR	1458698	Label	case OP_PRUNE_ARG :	1806:4:68519:68536	1458321	41	True				
ANR	1458699	Identifier	OP_PRUNE_ARG		1458321	0					
ANR	1458700	Label	case OP_SKIP_ARG :	1807:4:68542:68558	1458321	42	True				
ANR	1458701	Identifier	OP_SKIP_ARG		1458321	0					
ANR	1458702	Label	case OP_THEN_ARG :	1808:4:68564:68580	1458321	43	True				
ANR	1458703	Identifier	OP_THEN_ARG		1458321	0					
ANR	1458704	ExpressionStatement	cc += cc [ 1 ] + PRIV ( OP_lengths ) [ * cc ]	1809:4:68586:68621	1458321	44	True				
ANR	1458705	AssignmentExpression	cc += cc [ 1 ] + PRIV ( OP_lengths ) [ * cc ]		1458321	0		+=			
ANR	1458706	Identifier	cc		1458321	0					
ANR	1458707	AdditiveExpression	cc [ 1 ] + PRIV ( OP_lengths ) [ * cc ]		1458321	1		+			
ANR	1458708	ArrayIndexing	cc [ 1 ]		1458321	0					
ANR	1458709	Identifier	cc		1458321	0					
ANR	1458710	PrimaryExpression	1		1458321	1					
ANR	1458711	ArrayIndexing	PRIV ( OP_lengths ) [ * cc ]		1458321	1					
ANR	1458712	CallExpression	PRIV ( OP_lengths )		1458321	0					
ANR	1458713	Callee	PRIV		1458321	0					
ANR	1458714	Identifier	PRIV		1458321	0					
ANR	1458715	ArgumentList	OP_lengths		1458321	1					
ANR	1458716	Argument	OP_lengths		1458321	0					
ANR	1458717	Identifier	OP_lengths		1458321	0					
ANR	1458718	UnaryOperationExpression	* cc		1458321	1					
ANR	1458719	UnaryOperator	*		1458321	0					
ANR	1458720	Identifier	cc		1458321	1					
ANR	1458721	BreakStatement	break ;	1810:4:68627:68632	1458321	45	True				
ANR	1458722	Label	case OP_CALLOUT :	1812:4:68639:68654	1458321	46	True				
ANR	1458723	Identifier	OP_CALLOUT		1458321	0					
ANR	1458724	Label	case OP_CIRC :	1813:4:68660:68672	1458321	47	True				
ANR	1458725	Identifier	OP_CIRC		1458321	0					
ANR	1458726	Label	case OP_CIRCM :	1814:4:68678:68691	1458321	48	True				
ANR	1458727	Identifier	OP_CIRCM		1458321	0					
ANR	1458728	Label	case OP_CLOSE :	1815:4:68697:68710	1458321	49	True				
ANR	1458729	Identifier	OP_CLOSE		1458321	0					
ANR	1458730	Label	case OP_COMMIT :	1816:4:68716:68730	1458321	50	True				
ANR	1458731	Identifier	OP_COMMIT		1458321	0					
ANR	1458732	Label	case OP_CREF :	1817:4:68736:68748	1458321	51	True				
ANR	1458733	Identifier	OP_CREF		1458321	0					
ANR	1458734	Label	case OP_DEF :	1818:4:68754:68765	1458321	52	True				
ANR	1458735	Identifier	OP_DEF		1458321	0					
ANR	1458736	Label	case OP_DNCREF :	1819:4:68771:68785	1458321	53	True				
ANR	1458737	Identifier	OP_DNCREF		1458321	0					
ANR	1458738	Label	case OP_DNRREF :	1820:4:68791:68805	1458321	54	True				
ANR	1458739	Identifier	OP_DNRREF		1458321	0					
ANR	1458740	Label	case OP_DOLL :	1821:4:68811:68823	1458321	55	True				
ANR	1458741	Identifier	OP_DOLL		1458321	0					
ANR	1458742	Label	case OP_DOLLM :	1822:4:68829:68842	1458321	56	True				
ANR	1458743	Identifier	OP_DOLLM		1458321	0					
ANR	1458744	Label	case OP_EOD :	1823:4:68848:68859	1458321	57	True				
ANR	1458745	Identifier	OP_EOD		1458321	0					
ANR	1458746	Label	case OP_EODN :	1824:4:68865:68877	1458321	58	True				
ANR	1458747	Identifier	OP_EODN		1458321	0					
ANR	1458748	Label	case OP_FAIL :	1825:4:68883:68895	1458321	59	True				
ANR	1458749	Identifier	OP_FAIL		1458321	0					
ANR	1458750	Label	case OP_NOT_WORD_BOUNDARY :	1826:4:68901:68926	1458321	60	True				
ANR	1458751	Identifier	OP_NOT_WORD_BOUNDARY		1458321	0					
ANR	1458752	Label	case OP_PRUNE :	1827:4:68932:68945	1458321	61	True				
ANR	1458753	Identifier	OP_PRUNE		1458321	0					
ANR	1458754	Label	case OP_REVERSE :	1828:4:68951:68966	1458321	62	True				
ANR	1458755	Identifier	OP_REVERSE		1458321	0					
ANR	1458756	Label	case OP_RREF :	1829:4:68972:68984	1458321	63	True				
ANR	1458757	Identifier	OP_RREF		1458321	0					
ANR	1458758	Label	case OP_SET_SOM :	1830:4:68990:69005	1458321	64	True				
ANR	1458759	Identifier	OP_SET_SOM		1458321	0					
ANR	1458760	Label	case OP_SKIP :	1831:4:69011:69023	1458321	65	True				
ANR	1458761	Identifier	OP_SKIP		1458321	0					
ANR	1458762	Label	case OP_SOD :	1832:4:69029:69040	1458321	66	True				
ANR	1458763	Identifier	OP_SOD		1458321	0					
ANR	1458764	Label	case OP_SOM :	1833:4:69046:69057	1458321	67	True				
ANR	1458765	Identifier	OP_SOM		1458321	0					
ANR	1458766	Label	case OP_THEN :	1834:4:69063:69075	1458321	68	True				
ANR	1458767	Identifier	OP_THEN		1458321	0					
ANR	1458768	Label	case OP_WORD_BOUNDARY :	1835:4:69081:69102	1458321	69	True				
ANR	1458769	Identifier	OP_WORD_BOUNDARY		1458321	0					
ANR	1458770	ExpressionStatement	cc += PRIV ( OP_lengths ) [ * cc ]	1836:4:69108:69135	1458321	70	True				
ANR	1458771	AssignmentExpression	cc += PRIV ( OP_lengths ) [ * cc ]		1458321	0		+=			
ANR	1458772	Identifier	cc		1458321	0					
ANR	1458773	ArrayIndexing	PRIV ( OP_lengths ) [ * cc ]		1458321	1					
ANR	1458774	CallExpression	PRIV ( OP_lengths )		1458321	0					
ANR	1458775	Callee	PRIV		1458321	0					
ANR	1458776	Identifier	PRIV		1458321	0					
ANR	1458777	ArgumentList	OP_lengths		1458321	1					
ANR	1458778	Argument	OP_lengths		1458321	0					
ANR	1458779	Identifier	OP_lengths		1458321	0					
ANR	1458780	UnaryOperationExpression	* cc		1458321	1					
ANR	1458781	UnaryOperator	*		1458321	0					
ANR	1458782	Identifier	cc		1458321	1					
ANR	1458783	BreakStatement	break ;	1837:4:69141:69146	1458321	71	True				
ANR	1458784	Label	case OP_CHAR :	1841:4:69190:69202	1458321	72	True				
ANR	1458785	Identifier	OP_CHAR		1458321	0					
ANR	1458786	Label	case OP_CHARI :	1842:4:69208:69221	1458321	73	True				
ANR	1458787	Identifier	OP_CHARI		1458321	0					
ANR	1458788	Label	case OP_NOT :	1843:4:69227:69238	1458321	74	True				
ANR	1458789	Identifier	OP_NOT		1458321	0					
ANR	1458790	Label	case OP_NOTI :	1844:4:69244:69256	1458321	75	True				
ANR	1458791	Identifier	OP_NOTI		1458321	0					
ANR	1458792	ExpressionStatement	branchlength ++	1845:4:69262:69276	1458321	76	True				
ANR	1458793	PostIncDecOperationExpression	branchlength ++		1458321	0					
ANR	1458794	Identifier	branchlength		1458321	0					
ANR	1458795	IncDec	++		1458321	1					
ANR	1458796	ExpressionStatement	cc += 2	1846:4:69282:69289	1458321	77	True				
ANR	1458797	AssignmentExpression	cc += 2		1458321	0		+=			
ANR	1458798	Identifier	cc		1458321	0					
ANR	1458799	PrimaryExpression	2		1458321	1					
ANR	1458800	IfStatement	if ( utf && HAS_EXTRALEN ( cc [ - 1 ] ) )		1458321	78					
ANR	1458801	Condition	utf && HAS_EXTRALEN ( cc [ - 1 ] )	1848:8:69318:69344	1458321	0	True				
ANR	1458802	AndExpression	utf && HAS_EXTRALEN ( cc [ - 1 ] )		1458321	0		&&			
ANR	1458803	Identifier	utf		1458321	0					
ANR	1458804	CallExpression	HAS_EXTRALEN ( cc [ - 1 ] )		1458321	1					
ANR	1458805	Callee	HAS_EXTRALEN		1458321	0					
ANR	1458806	Identifier	HAS_EXTRALEN		1458321	0					
ANR	1458807	ArgumentList	cc [ - 1 ]		1458321	1					
ANR	1458808	Argument	cc [ - 1 ]		1458321	0					
ANR	1458809	ArrayIndexing	cc [ - 1 ]		1458321	0					
ANR	1458810	Identifier	cc		1458321	0					
ANR	1458811	UnaryOperationExpression	- 1		1458321	1					
ANR	1458812	UnaryOperator	-		1458321	0					
ANR	1458813	PrimaryExpression	1		1458321	1					
ANR	1458814	ExpressionStatement	cc += GET_EXTRALEN ( cc [ - 1 ] )	1848:37:69347:69373	1458321	1	True				
ANR	1458815	AssignmentExpression	cc += GET_EXTRALEN ( cc [ - 1 ] )		1458321	0		+=			
ANR	1458816	Identifier	cc		1458321	0					
ANR	1458817	CallExpression	GET_EXTRALEN ( cc [ - 1 ] )		1458321	1					
ANR	1458818	Callee	GET_EXTRALEN		1458321	0					
ANR	1458819	Identifier	GET_EXTRALEN		1458321	0					
ANR	1458820	ArgumentList	cc [ - 1 ]		1458321	1					
ANR	1458821	Argument	cc [ - 1 ]		1458321	0					
ANR	1458822	ArrayIndexing	cc [ - 1 ]		1458321	0					
ANR	1458823	Identifier	cc		1458321	0					
ANR	1458824	UnaryOperationExpression	- 1		1458321	1					
ANR	1458825	UnaryOperator	-		1458321	0					
ANR	1458826	PrimaryExpression	1		1458321	1					
ANR	1458827	BreakStatement	break ;	1850:4:69386:69391	1458321	79	True				
ANR	1458828	Label	case OP_EXACT :	1855:4:69537:69550	1458321	80	True				
ANR	1458829	Identifier	OP_EXACT		1458321	0					
ANR	1458830	Label	case OP_EXACTI :	1856:4:69556:69570	1458321	81	True				
ANR	1458831	Identifier	OP_EXACTI		1458321	0					
ANR	1458832	Label	case OP_NOTEXACT :	1857:4:69576:69592	1458321	82	True				
ANR	1458833	Identifier	OP_NOTEXACT		1458321	0					
ANR	1458834	Label	case OP_NOTEXACTI :	1858:4:69598:69615	1458321	83	True				
ANR	1458835	Identifier	OP_NOTEXACTI		1458321	0					
ANR	1458836	ExpressionStatement	"branchlength += ( int ) GET2 ( cc , 1 )"	1859:4:69621:69652	1458321	84	True				
ANR	1458837	AssignmentExpression	"branchlength += ( int ) GET2 ( cc , 1 )"		1458321	0		+=			
ANR	1458838	Identifier	branchlength		1458321	0					
ANR	1458839	CastExpression	"( int ) GET2 ( cc , 1 )"		1458321	1					
ANR	1458840	CastTarget	int		1458321	0					
ANR	1458841	CallExpression	"GET2 ( cc , 1 )"		1458321	1					
ANR	1458842	Callee	GET2		1458321	0					
ANR	1458843	Identifier	GET2		1458321	0					
ANR	1458844	ArgumentList	cc		1458321	1					
ANR	1458845	Argument	cc		1458321	0					
ANR	1458846	Identifier	cc		1458321	0					
ANR	1458847	Argument	1		1458321	1					
ANR	1458848	PrimaryExpression	1		1458321	0					
ANR	1458849	ExpressionStatement	cc += 2 + IMM2_SIZE	1860:4:69658:69677	1458321	85	True				
ANR	1458850	AssignmentExpression	cc += 2 + IMM2_SIZE		1458321	0		+=			
ANR	1458851	Identifier	cc		1458321	0					
ANR	1458852	AdditiveExpression	2 + IMM2_SIZE		1458321	1		+			
ANR	1458853	PrimaryExpression	2		1458321	0					
ANR	1458854	Identifier	IMM2_SIZE		1458321	1					
ANR	1458855	IfStatement	if ( utf && HAS_EXTRALEN ( cc [ - 1 ] ) )		1458321	86					
ANR	1458856	Condition	utf && HAS_EXTRALEN ( cc [ - 1 ] )	1862:8:69706:69732	1458321	0	True				
ANR	1458857	AndExpression	utf && HAS_EXTRALEN ( cc [ - 1 ] )		1458321	0		&&			
ANR	1458858	Identifier	utf		1458321	0					
ANR	1458859	CallExpression	HAS_EXTRALEN ( cc [ - 1 ] )		1458321	1					
ANR	1458860	Callee	HAS_EXTRALEN		1458321	0					
ANR	1458861	Identifier	HAS_EXTRALEN		1458321	0					
ANR	1458862	ArgumentList	cc [ - 1 ]		1458321	1					
ANR	1458863	Argument	cc [ - 1 ]		1458321	0					
ANR	1458864	ArrayIndexing	cc [ - 1 ]		1458321	0					
ANR	1458865	Identifier	cc		1458321	0					
ANR	1458866	UnaryOperationExpression	- 1		1458321	1					
ANR	1458867	UnaryOperator	-		1458321	0					
ANR	1458868	PrimaryExpression	1		1458321	1					
ANR	1458869	ExpressionStatement	cc += GET_EXTRALEN ( cc [ - 1 ] )	1862:37:69735:69761	1458321	1	True				
ANR	1458870	AssignmentExpression	cc += GET_EXTRALEN ( cc [ - 1 ] )		1458321	0		+=			
ANR	1458871	Identifier	cc		1458321	0					
ANR	1458872	CallExpression	GET_EXTRALEN ( cc [ - 1 ] )		1458321	1					
ANR	1458873	Callee	GET_EXTRALEN		1458321	0					
ANR	1458874	Identifier	GET_EXTRALEN		1458321	0					
ANR	1458875	ArgumentList	cc [ - 1 ]		1458321	1					
ANR	1458876	Argument	cc [ - 1 ]		1458321	0					
ANR	1458877	ArrayIndexing	cc [ - 1 ]		1458321	0					
ANR	1458878	Identifier	cc		1458321	0					
ANR	1458879	UnaryOperationExpression	- 1		1458321	1					
ANR	1458880	UnaryOperator	-		1458321	0					
ANR	1458881	PrimaryExpression	1		1458321	1					
ANR	1458882	BreakStatement	break ;	1864:4:69774:69779	1458321	87	True				
ANR	1458883	Label	case OP_TYPEEXACT :	1866:4:69786:69803	1458321	88	True				
ANR	1458884	Identifier	OP_TYPEEXACT		1458321	0					
ANR	1458885	ExpressionStatement	"branchlength += GET2 ( cc , 1 )"	1867:4:69809:69835	1458321	89	True				
ANR	1458886	AssignmentExpression	"branchlength += GET2 ( cc , 1 )"		1458321	0		+=			
ANR	1458887	Identifier	branchlength		1458321	0					
ANR	1458888	CallExpression	"GET2 ( cc , 1 )"		1458321	1					
ANR	1458889	Callee	GET2		1458321	0					
ANR	1458890	Identifier	GET2		1458321	0					
ANR	1458891	ArgumentList	cc		1458321	1					
ANR	1458892	Argument	cc		1458321	0					
ANR	1458893	Identifier	cc		1458321	0					
ANR	1458894	Argument	1		1458321	1					
ANR	1458895	PrimaryExpression	1		1458321	0					
ANR	1458896	IfStatement	if ( cc [ 1 + IMM2_SIZE ] == OP_PROP || cc [ 1 + IMM2_SIZE ] == OP_NOTPROP )		1458321	90					
ANR	1458897	Condition	cc [ 1 + IMM2_SIZE ] == OP_PROP || cc [ 1 + IMM2_SIZE ] == OP_NOTPROP	1868:8:69845:69907	1458321	0	True				
ANR	1458898	OrExpression	cc [ 1 + IMM2_SIZE ] == OP_PROP || cc [ 1 + IMM2_SIZE ] == OP_NOTPROP		1458321	0		||			
ANR	1458899	EqualityExpression	cc [ 1 + IMM2_SIZE ] == OP_PROP		1458321	0		==			
ANR	1458900	ArrayIndexing	cc [ 1 + IMM2_SIZE ]		1458321	0					
ANR	1458901	Identifier	cc		1458321	0					
ANR	1458902	AdditiveExpression	1 + IMM2_SIZE		1458321	1		+			
ANR	1458903	PrimaryExpression	1		1458321	0					
ANR	1458904	Identifier	IMM2_SIZE		1458321	1					
ANR	1458905	Identifier	OP_PROP		1458321	1					
ANR	1458906	EqualityExpression	cc [ 1 + IMM2_SIZE ] == OP_NOTPROP		1458321	1		==			
ANR	1458907	ArrayIndexing	cc [ 1 + IMM2_SIZE ]		1458321	0					
ANR	1458908	Identifier	cc		1458321	0					
ANR	1458909	AdditiveExpression	1 + IMM2_SIZE		1458321	1		+			
ANR	1458910	PrimaryExpression	1		1458321	0					
ANR	1458911	Identifier	IMM2_SIZE		1458321	1					
ANR	1458912	Identifier	OP_NOTPROP		1458321	1					
ANR	1458913	ExpressionStatement	cc += 2	1869:6:69916:69923	1458321	1	True				
ANR	1458914	AssignmentExpression	cc += 2		1458321	0		+=			
ANR	1458915	Identifier	cc		1458321	0					
ANR	1458916	PrimaryExpression	2		1458321	1					
ANR	1458917	ExpressionStatement	cc += 1 + IMM2_SIZE + 1	1870:4:69929:69952	1458321	91	True				
ANR	1458918	AssignmentExpression	cc += 1 + IMM2_SIZE + 1		1458321	0		+=			
ANR	1458919	Identifier	cc		1458321	0					
ANR	1458920	AdditiveExpression	1 + IMM2_SIZE + 1		1458321	1		+			
ANR	1458921	PrimaryExpression	1		1458321	0					
ANR	1458922	AdditiveExpression	IMM2_SIZE + 1		1458321	1		+			
ANR	1458923	Identifier	IMM2_SIZE		1458321	0					
ANR	1458924	PrimaryExpression	1		1458321	1					
ANR	1458925	BreakStatement	break ;	1871:4:69958:69963	1458321	92	True				
ANR	1458926	Label	case OP_PROP :	1875:4:70009:70021	1458321	93	True				
ANR	1458927	Identifier	OP_PROP		1458321	0					
ANR	1458928	Label	case OP_NOTPROP :	1876:4:70027:70042	1458321	94	True				
ANR	1458929	Identifier	OP_NOTPROP		1458321	0					
ANR	1458930	ExpressionStatement	cc += 2	1877:4:70048:70055	1458321	95	True				
ANR	1458931	AssignmentExpression	cc += 2		1458321	0		+=			
ANR	1458932	Identifier	cc		1458321	0					
ANR	1458933	PrimaryExpression	2		1458321	1					
ANR	1458934	Label	case OP_HSPACE :	1880:4:70085:70099	1458321	96	True				
ANR	1458935	Identifier	OP_HSPACE		1458321	0					
ANR	1458936	Label	case OP_VSPACE :	1881:4:70105:70119	1458321	97	True				
ANR	1458937	Identifier	OP_VSPACE		1458321	0					
ANR	1458938	Label	case OP_NOT_HSPACE :	1882:4:70125:70143	1458321	98	True				
ANR	1458939	Identifier	OP_NOT_HSPACE		1458321	0					
ANR	1458940	Label	case OP_NOT_VSPACE :	1883:4:70149:70167	1458321	99	True				
ANR	1458941	Identifier	OP_NOT_VSPACE		1458321	0					
ANR	1458942	Label	case OP_NOT_DIGIT :	1884:4:70173:70190	1458321	100	True				
ANR	1458943	Identifier	OP_NOT_DIGIT		1458321	0					
ANR	1458944	Label	case OP_DIGIT :	1885:4:70196:70209	1458321	101	True				
ANR	1458945	Identifier	OP_DIGIT		1458321	0					
ANR	1458946	Label	case OP_NOT_WHITESPACE :	1886:4:70215:70237	1458321	102	True				
ANR	1458947	Identifier	OP_NOT_WHITESPACE		1458321	0					
ANR	1458948	Label	case OP_WHITESPACE :	1887:4:70243:70261	1458321	103	True				
ANR	1458949	Identifier	OP_WHITESPACE		1458321	0					
ANR	1458950	Label	case OP_NOT_WORDCHAR :	1888:4:70267:70287	1458321	104	True				
ANR	1458951	Identifier	OP_NOT_WORDCHAR		1458321	0					
ANR	1458952	Label	case OP_WORDCHAR :	1889:4:70293:70309	1458321	105	True				
ANR	1458953	Identifier	OP_WORDCHAR		1458321	0					
ANR	1458954	Label	case OP_ANY :	1890:4:70315:70326	1458321	106	True				
ANR	1458955	Identifier	OP_ANY		1458321	0					
ANR	1458956	Label	case OP_ALLANY :	1891:4:70332:70346	1458321	107	True				
ANR	1458957	Identifier	OP_ALLANY		1458321	0					
ANR	1458958	ExpressionStatement	branchlength ++	1892:4:70352:70366	1458321	108	True				
ANR	1458959	PostIncDecOperationExpression	branchlength ++		1458321	0					
ANR	1458960	Identifier	branchlength		1458321	0					
ANR	1458961	IncDec	++		1458321	1					
ANR	1458962	ExpressionStatement	cc ++	1893:4:70372:70376	1458321	109	True				
ANR	1458963	PostIncDecOperationExpression	cc ++		1458321	0					
ANR	1458964	Identifier	cc		1458321	0					
ANR	1458965	IncDec	++		1458321	1					
ANR	1458966	BreakStatement	break ;	1894:4:70382:70387	1458321	110	True				
ANR	1458967	Label	case OP_ANYBYTE :	1899:4:70517:70532	1458321	111	True				
ANR	1458968	Identifier	OP_ANYBYTE		1458321	0					
ANR	1458969	ReturnStatement	return - 2 ;	1900:4:70538:70547	1458321	112	True				
ANR	1458970	UnaryOperationExpression	- 2		1458321	0					
ANR	1458971	UnaryOperator	-		1458321	0					
ANR	1458972	PrimaryExpression	2		1458321	1					
ANR	1458973	Label	case OP_CLASS :	1904:4:70607:70620	1458321	113	True				
ANR	1458974	Identifier	OP_CLASS		1458321	0					
ANR	1458975	Label	case OP_NCLASS :	1905:4:70626:70640	1458321	114	True				
ANR	1458976	Identifier	OP_NCLASS		1458321	0					
ANR	1458977	Label	case OP_XCLASS :	1907:4:70722:70736	1458321	115	True				
ANR	1458978	Identifier	OP_XCLASS		1458321	0					
ANR	1458979	IfStatement	if ( op == OP_XCLASS )		1458321	116					
ANR	1458980	Condition	op == OP_XCLASS	1910:8:70864:70878	1458321	0	True				
ANR	1458981	EqualityExpression	op == OP_XCLASS		1458321	0		==			
ANR	1458982	Identifier	op		1458321	0					
ANR	1458983	Identifier	OP_XCLASS		1458321	1					
ANR	1458984	ExpressionStatement	"cc += GET ( cc , 1 )"	1911:6:70887:70903	1458321	1	True				
ANR	1458985	AssignmentExpression	"cc += GET ( cc , 1 )"		1458321	0		+=			
ANR	1458986	Identifier	cc		1458321	0					
ANR	1458987	CallExpression	"GET ( cc , 1 )"		1458321	1					
ANR	1458988	Callee	GET		1458321	0					
ANR	1458989	Identifier	GET		1458321	0					
ANR	1458990	ArgumentList	cc		1458321	1					
ANR	1458991	Argument	cc		1458321	0					
ANR	1458992	Identifier	cc		1458321	0					
ANR	1458993	Argument	1		1458321	1					
ANR	1458994	PrimaryExpression	1		1458321	0					
ANR	1458995	ElseStatement	else		1458321	0					
ANR	1458996	ExpressionStatement	cc += PRIV ( OP_lengths ) [ OP_CLASS ]	1913:6:70920:70952	1458321	0	True				
ANR	1458997	AssignmentExpression	cc += PRIV ( OP_lengths ) [ OP_CLASS ]		1458321	0		+=			
ANR	1458998	Identifier	cc		1458321	0					
ANR	1458999	ArrayIndexing	PRIV ( OP_lengths ) [ OP_CLASS ]		1458321	1					
ANR	1459000	CallExpression	PRIV ( OP_lengths )		1458321	0					
ANR	1459001	Callee	PRIV		1458321	0					
ANR	1459002	Identifier	PRIV		1458321	0					
ANR	1459003	ArgumentList	OP_lengths		1458321	1					
ANR	1459004	Argument	OP_lengths		1458321	0					
ANR	1459005	Identifier	OP_lengths		1458321	0					
ANR	1459006	Identifier	OP_CLASS		1458321	1					
ANR	1459007	SwitchStatement	switch ( * cc )		1458321	117					
ANR	1459008	Condition	* cc	1918:12:71018:71020	1458321	0	True				
ANR	1459009	UnaryOperationExpression	* cc		1458321	0					
ANR	1459010	UnaryOperator	*		1458321	0					
ANR	1459011	Identifier	cc		1458321	1					
ANR	1459012	CompoundStatement		203:6:5350:5350	1458321	1					
ANR	1459013	Label	case OP_CRSTAR :	1920:6:71037:71051	1458321	0	True				
ANR	1459014	Identifier	OP_CRSTAR		1458321	0					
ANR	1459015	Label	case OP_CRMINSTAR :	1921:6:71059:71076	1458321	1	True				
ANR	1459016	Identifier	OP_CRMINSTAR		1458321	0					
ANR	1459017	Label	case OP_CRPLUS :	1922:6:71084:71098	1458321	2	True				
ANR	1459018	Identifier	OP_CRPLUS		1458321	0					
ANR	1459019	Label	case OP_CRMINPLUS :	1923:6:71106:71123	1458321	3	True				
ANR	1459020	Identifier	OP_CRMINPLUS		1458321	0					
ANR	1459021	Label	case OP_CRQUERY :	1924:6:71131:71146	1458321	4	True				
ANR	1459022	Identifier	OP_CRQUERY		1458321	0					
ANR	1459023	Label	case OP_CRMINQUERY :	1925:6:71154:71172	1458321	5	True				
ANR	1459024	Identifier	OP_CRMINQUERY		1458321	0					
ANR	1459025	Label	case OP_CRPOSSTAR :	1926:6:71180:71197	1458321	6	True				
ANR	1459026	Identifier	OP_CRPOSSTAR		1458321	0					
ANR	1459027	Label	case OP_CRPOSPLUS :	1927:6:71205:71222	1458321	7	True				
ANR	1459028	Identifier	OP_CRPOSPLUS		1458321	0					
ANR	1459029	Label	case OP_CRPOSQUERY :	1928:6:71230:71248	1458321	8	True				
ANR	1459030	Identifier	OP_CRPOSQUERY		1458321	0					
ANR	1459031	ReturnStatement	return - 1 ;	1929:6:71256:71265	1458321	9	True				
ANR	1459032	UnaryOperationExpression	- 1		1458321	0					
ANR	1459033	UnaryOperator	-		1458321	0					
ANR	1459034	PrimaryExpression	1		1458321	1					
ANR	1459035	Label	case OP_CRRANGE :	1931:6:71274:71289	1458321	10	True				
ANR	1459036	Identifier	OP_CRRANGE		1458321	0					
ANR	1459037	Label	case OP_CRMINRANGE :	1932:6:71297:71315	1458321	11	True				
ANR	1459038	Identifier	OP_CRMINRANGE		1458321	0					
ANR	1459039	Label	case OP_CRPOSRANGE :	1933:6:71323:71341	1458321	12	True				
ANR	1459040	Identifier	OP_CRPOSRANGE		1458321	0					
ANR	1459041	IfStatement	"if ( GET2 ( cc , 1 ) != GET2 ( cc , 1 + IMM2_SIZE ) )"		1458321	13					
ANR	1459042	Condition	"GET2 ( cc , 1 ) != GET2 ( cc , 1 + IMM2_SIZE )"	1934:10:71353:71386	1458321	0	True				
ANR	1459043	EqualityExpression	"GET2 ( cc , 1 ) != GET2 ( cc , 1 + IMM2_SIZE )"		1458321	0		!=			
ANR	1459044	CallExpression	"GET2 ( cc , 1 )"		1458321	0					
ANR	1459045	Callee	GET2		1458321	0					
ANR	1459046	Identifier	GET2		1458321	0					
ANR	1459047	ArgumentList	cc		1458321	1					
ANR	1459048	Argument	cc		1458321	0					
ANR	1459049	Identifier	cc		1458321	0					
ANR	1459050	Argument	1		1458321	1					
ANR	1459051	PrimaryExpression	1		1458321	0					
ANR	1459052	CallExpression	"GET2 ( cc , 1 + IMM2_SIZE )"		1458321	1					
ANR	1459053	Callee	GET2		1458321	0					
ANR	1459054	Identifier	GET2		1458321	0					
ANR	1459055	ArgumentList	cc		1458321	1					
ANR	1459056	Argument	cc		1458321	0					
ANR	1459057	Identifier	cc		1458321	0					
ANR	1459058	Argument	1 + IMM2_SIZE		1458321	1					
ANR	1459059	AdditiveExpression	1 + IMM2_SIZE		1458321	0		+			
ANR	1459060	PrimaryExpression	1		1458321	0					
ANR	1459061	Identifier	IMM2_SIZE		1458321	1					
ANR	1459062	ReturnStatement	return - 1 ;	1934:46:71389:71398	1458321	1	True				
ANR	1459063	UnaryOperationExpression	- 1		1458321	0					
ANR	1459064	UnaryOperator	-		1458321	0					
ANR	1459065	PrimaryExpression	1		1458321	1					
ANR	1459066	ExpressionStatement	"branchlength += ( int ) GET2 ( cc , 1 )"	1935:6:71406:71437	1458321	14	True				
ANR	1459067	AssignmentExpression	"branchlength += ( int ) GET2 ( cc , 1 )"		1458321	0		+=			
ANR	1459068	Identifier	branchlength		1458321	0					
ANR	1459069	CastExpression	"( int ) GET2 ( cc , 1 )"		1458321	1					
ANR	1459070	CastTarget	int		1458321	0					
ANR	1459071	CallExpression	"GET2 ( cc , 1 )"		1458321	1					
ANR	1459072	Callee	GET2		1458321	0					
ANR	1459073	Identifier	GET2		1458321	0					
ANR	1459074	ArgumentList	cc		1458321	1					
ANR	1459075	Argument	cc		1458321	0					
ANR	1459076	Identifier	cc		1458321	0					
ANR	1459077	Argument	1		1458321	1					
ANR	1459078	PrimaryExpression	1		1458321	0					
ANR	1459079	ExpressionStatement	cc += 1 + 2 * IMM2_SIZE	1936:6:71445:71468	1458321	15	True				
ANR	1459080	AssignmentExpression	cc += 1 + 2 * IMM2_SIZE		1458321	0		+=			
ANR	1459081	Identifier	cc		1458321	0					
ANR	1459082	AdditiveExpression	1 + 2 * IMM2_SIZE		1458321	1		+			
ANR	1459083	PrimaryExpression	1		1458321	0					
ANR	1459084	MultiplicativeExpression	2 * IMM2_SIZE		1458321	1		*			
ANR	1459085	PrimaryExpression	2		1458321	0					
ANR	1459086	Identifier	IMM2_SIZE		1458321	1					
ANR	1459087	BreakStatement	break ;	1937:6:71476:71481	1458321	16	True				
ANR	1459088	Label	default :	1939:6:71490:71497	1458321	17	True				
ANR	1459089	Identifier	default		1458321	0					
ANR	1459090	ExpressionStatement	branchlength ++	1940:6:71505:71519	1458321	18	True				
ANR	1459091	PostIncDecOperationExpression	branchlength ++		1458321	0					
ANR	1459092	Identifier	branchlength		1458321	0					
ANR	1459093	IncDec	++		1458321	1					
ANR	1459094	BreakStatement	break ;	1942:4:71533:71538	1458321	118	True				
ANR	1459095	Label	case OP_ANYNL :	1946:4:71589:71602	1458321	119	True				
ANR	1459096	Identifier	OP_ANYNL		1458321	0					
ANR	1459097	Label	case OP_BRAMINZERO :	1947:4:71608:71626	1458321	120	True				
ANR	1459098	Identifier	OP_BRAMINZERO		1458321	0					
ANR	1459099	Label	case OP_BRAPOS :	1948:4:71632:71646	1458321	121	True				
ANR	1459100	Identifier	OP_BRAPOS		1458321	0					
ANR	1459101	Label	case OP_BRAPOSZERO :	1949:4:71652:71670	1458321	122	True				
ANR	1459102	Identifier	OP_BRAPOSZERO		1458321	0					
ANR	1459103	Label	case OP_BRAZERO :	1950:4:71676:71691	1458321	123	True				
ANR	1459104	Identifier	OP_BRAZERO		1458321	0					
ANR	1459105	Label	case OP_CBRAPOS :	1951:4:71697:71712	1458321	124	True				
ANR	1459106	Identifier	OP_CBRAPOS		1458321	0					
ANR	1459107	Label	case OP_EXTUNI :	1952:4:71718:71732	1458321	125	True				
ANR	1459108	Identifier	OP_EXTUNI		1458321	0					
ANR	1459109	Label	case OP_KETRMAX :	1953:4:71738:71753	1458321	126	True				
ANR	1459110	Identifier	OP_KETRMAX		1458321	0					
ANR	1459111	Label	case OP_KETRMIN :	1954:4:71759:71774	1458321	127	True				
ANR	1459112	Identifier	OP_KETRMIN		1458321	0					
ANR	1459113	Label	case OP_KETRPOS :	1955:4:71780:71795	1458321	128	True				
ANR	1459114	Identifier	OP_KETRPOS		1458321	0					
ANR	1459115	Label	case OP_MINPLUS :	1956:4:71801:71816	1458321	129	True				
ANR	1459116	Identifier	OP_MINPLUS		1458321	0					
ANR	1459117	Label	case OP_MINPLUSI :	1957:4:71822:71838	1458321	130	True				
ANR	1459118	Identifier	OP_MINPLUSI		1458321	0					
ANR	1459119	Label	case OP_MINQUERY :	1958:4:71844:71860	1458321	131	True				
ANR	1459120	Identifier	OP_MINQUERY		1458321	0					
ANR	1459121	Label	case OP_MINQUERYI :	1959:4:71866:71883	1458321	132	True				
ANR	1459122	Identifier	OP_MINQUERYI		1458321	0					
ANR	1459123	Label	case OP_MINSTAR :	1960:4:71889:71904	1458321	133	True				
ANR	1459124	Identifier	OP_MINSTAR		1458321	0					
ANR	1459125	Label	case OP_MINSTARI :	1961:4:71910:71926	1458321	134	True				
ANR	1459126	Identifier	OP_MINSTARI		1458321	0					
ANR	1459127	Label	case OP_MINUPTO :	1962:4:71932:71947	1458321	135	True				
ANR	1459128	Identifier	OP_MINUPTO		1458321	0					
ANR	1459129	Label	case OP_MINUPTOI :	1963:4:71953:71969	1458321	136	True				
ANR	1459130	Identifier	OP_MINUPTOI		1458321	0					
ANR	1459131	Label	case OP_NOTMINPLUS :	1964:4:71975:71993	1458321	137	True				
ANR	1459132	Identifier	OP_NOTMINPLUS		1458321	0					
ANR	1459133	Label	case OP_NOTMINPLUSI :	1965:4:71999:72018	1458321	138	True				
ANR	1459134	Identifier	OP_NOTMINPLUSI		1458321	0					
ANR	1459135	Label	case OP_NOTMINQUERY :	1966:4:72024:72043	1458321	139	True				
ANR	1459136	Identifier	OP_NOTMINQUERY		1458321	0					
ANR	1459137	Label	case OP_NOTMINQUERYI :	1967:4:72049:72069	1458321	140	True				
ANR	1459138	Identifier	OP_NOTMINQUERYI		1458321	0					
ANR	1459139	Label	case OP_NOTMINSTAR :	1968:4:72075:72093	1458321	141	True				
ANR	1459140	Identifier	OP_NOTMINSTAR		1458321	0					
ANR	1459141	Label	case OP_NOTMINSTARI :	1969:4:72099:72118	1458321	142	True				
ANR	1459142	Identifier	OP_NOTMINSTARI		1458321	0					
ANR	1459143	Label	case OP_NOTMINUPTO :	1970:4:72124:72142	1458321	143	True				
ANR	1459144	Identifier	OP_NOTMINUPTO		1458321	0					
ANR	1459145	Label	case OP_NOTMINUPTOI :	1971:4:72148:72167	1458321	144	True				
ANR	1459146	Identifier	OP_NOTMINUPTOI		1458321	0					
ANR	1459147	Label	case OP_NOTPLUS :	1972:4:72173:72188	1458321	145	True				
ANR	1459148	Identifier	OP_NOTPLUS		1458321	0					
ANR	1459149	Label	case OP_NOTPLUSI :	1973:4:72194:72210	1458321	146	True				
ANR	1459150	Identifier	OP_NOTPLUSI		1458321	0					
ANR	1459151	Label	case OP_NOTPOSPLUS :	1974:4:72216:72234	1458321	147	True				
ANR	1459152	Identifier	OP_NOTPOSPLUS		1458321	0					
ANR	1459153	Label	case OP_NOTPOSPLUSI :	1975:4:72240:72259	1458321	148	True				
ANR	1459154	Identifier	OP_NOTPOSPLUSI		1458321	0					
ANR	1459155	Label	case OP_NOTPOSQUERY :	1976:4:72265:72284	1458321	149	True				
ANR	1459156	Identifier	OP_NOTPOSQUERY		1458321	0					
ANR	1459157	Label	case OP_NOTPOSQUERYI :	1977:4:72290:72310	1458321	150	True				
ANR	1459158	Identifier	OP_NOTPOSQUERYI		1458321	0					
ANR	1459159	Label	case OP_NOTPOSSTAR :	1978:4:72316:72334	1458321	151	True				
ANR	1459160	Identifier	OP_NOTPOSSTAR		1458321	0					
ANR	1459161	Label	case OP_NOTPOSSTARI :	1979:4:72340:72359	1458321	152	True				
ANR	1459162	Identifier	OP_NOTPOSSTARI		1458321	0					
ANR	1459163	Label	case OP_NOTPOSUPTO :	1980:4:72365:72383	1458321	153	True				
ANR	1459164	Identifier	OP_NOTPOSUPTO		1458321	0					
ANR	1459165	Label	case OP_NOTPOSUPTOI :	1981:4:72389:72408	1458321	154	True				
ANR	1459166	Identifier	OP_NOTPOSUPTOI		1458321	0					
ANR	1459167	Label	case OP_NOTQUERY :	1982:4:72414:72430	1458321	155	True				
ANR	1459168	Identifier	OP_NOTQUERY		1458321	0					
ANR	1459169	Label	case OP_NOTQUERYI :	1983:4:72436:72453	1458321	156	True				
ANR	1459170	Identifier	OP_NOTQUERYI		1458321	0					
ANR	1459171	Label	case OP_NOTSTAR :	1984:4:72459:72474	1458321	157	True				
ANR	1459172	Identifier	OP_NOTSTAR		1458321	0					
ANR	1459173	Label	case OP_NOTSTARI :	1985:4:72480:72496	1458321	158	True				
ANR	1459174	Identifier	OP_NOTSTARI		1458321	0					
ANR	1459175	Label	case OP_NOTUPTO :	1986:4:72502:72517	1458321	159	True				
ANR	1459176	Identifier	OP_NOTUPTO		1458321	0					
ANR	1459177	Label	case OP_NOTUPTOI :	1987:4:72523:72539	1458321	160	True				
ANR	1459178	Identifier	OP_NOTUPTOI		1458321	0					
ANR	1459179	Label	case OP_PLUS :	1988:4:72545:72557	1458321	161	True				
ANR	1459180	Identifier	OP_PLUS		1458321	0					
ANR	1459181	Label	case OP_PLUSI :	1989:4:72563:72576	1458321	162	True				
ANR	1459182	Identifier	OP_PLUSI		1458321	0					
ANR	1459183	Label	case OP_POSPLUS :	1990:4:72582:72597	1458321	163	True				
ANR	1459184	Identifier	OP_POSPLUS		1458321	0					
ANR	1459185	Label	case OP_POSPLUSI :	1991:4:72603:72619	1458321	164	True				
ANR	1459186	Identifier	OP_POSPLUSI		1458321	0					
ANR	1459187	Label	case OP_POSQUERY :	1992:4:72625:72641	1458321	165	True				
ANR	1459188	Identifier	OP_POSQUERY		1458321	0					
ANR	1459189	Label	case OP_POSQUERYI :	1993:4:72647:72664	1458321	166	True				
ANR	1459190	Identifier	OP_POSQUERYI		1458321	0					
ANR	1459191	Label	case OP_POSSTAR :	1994:4:72670:72685	1458321	167	True				
ANR	1459192	Identifier	OP_POSSTAR		1458321	0					
ANR	1459193	Label	case OP_POSSTARI :	1995:4:72691:72707	1458321	168	True				
ANR	1459194	Identifier	OP_POSSTARI		1458321	0					
ANR	1459195	Label	case OP_POSUPTO :	1996:4:72713:72728	1458321	169	True				
ANR	1459196	Identifier	OP_POSUPTO		1458321	0					
ANR	1459197	Label	case OP_POSUPTOI :	1997:4:72734:72750	1458321	170	True				
ANR	1459198	Identifier	OP_POSUPTOI		1458321	0					
ANR	1459199	Label	case OP_QUERY :	1998:4:72756:72769	1458321	171	True				
ANR	1459200	Identifier	OP_QUERY		1458321	0					
ANR	1459201	Label	case OP_QUERYI :	1999:4:72775:72789	1458321	172	True				
ANR	1459202	Identifier	OP_QUERYI		1458321	0					
ANR	1459203	Label	case OP_REF :	2000:4:72795:72806	1458321	173	True				
ANR	1459204	Identifier	OP_REF		1458321	0					
ANR	1459205	Label	case OP_REFI :	2001:4:72812:72824	1458321	174	True				
ANR	1459206	Identifier	OP_REFI		1458321	0					
ANR	1459207	Label	case OP_DNREF :	2002:4:72830:72843	1458321	175	True				
ANR	1459208	Identifier	OP_DNREF		1458321	0					
ANR	1459209	Label	case OP_DNREFI :	2003:4:72849:72863	1458321	176	True				
ANR	1459210	Identifier	OP_DNREFI		1458321	0					
ANR	1459211	Label	case OP_SBRA :	2004:4:72869:72881	1458321	177	True				
ANR	1459212	Identifier	OP_SBRA		1458321	0					
ANR	1459213	Label	case OP_SBRAPOS :	2005:4:72887:72902	1458321	178	True				
ANR	1459214	Identifier	OP_SBRAPOS		1458321	0					
ANR	1459215	Label	case OP_SCBRA :	2006:4:72908:72921	1458321	179	True				
ANR	1459216	Identifier	OP_SCBRA		1458321	0					
ANR	1459217	Label	case OP_SCBRAPOS :	2007:4:72927:72943	1458321	180	True				
ANR	1459218	Identifier	OP_SCBRAPOS		1458321	0					
ANR	1459219	Label	case OP_SCOND :	2008:4:72949:72962	1458321	181	True				
ANR	1459220	Identifier	OP_SCOND		1458321	0					
ANR	1459221	Label	case OP_SKIPZERO :	2009:4:72968:72984	1458321	182	True				
ANR	1459222	Identifier	OP_SKIPZERO		1458321	0					
ANR	1459223	Label	case OP_STAR :	2010:4:72990:73002	1458321	183	True				
ANR	1459224	Identifier	OP_STAR		1458321	0					
ANR	1459225	Label	case OP_STARI :	2011:4:73008:73021	1458321	184	True				
ANR	1459226	Identifier	OP_STARI		1458321	0					
ANR	1459227	Label	case OP_TYPEMINPLUS :	2012:4:73027:73046	1458321	185	True				
ANR	1459228	Identifier	OP_TYPEMINPLUS		1458321	0					
ANR	1459229	Label	case OP_TYPEMINQUERY :	2013:4:73052:73072	1458321	186	True				
ANR	1459230	Identifier	OP_TYPEMINQUERY		1458321	0					
ANR	1459231	Label	case OP_TYPEMINSTAR :	2014:4:73078:73097	1458321	187	True				
ANR	1459232	Identifier	OP_TYPEMINSTAR		1458321	0					
ANR	1459233	Label	case OP_TYPEMINUPTO :	2015:4:73103:73122	1458321	188	True				
ANR	1459234	Identifier	OP_TYPEMINUPTO		1458321	0					
ANR	1459235	Label	case OP_TYPEPLUS :	2016:4:73128:73144	1458321	189	True				
ANR	1459236	Identifier	OP_TYPEPLUS		1458321	0					
ANR	1459237	Label	case OP_TYPEPOSPLUS :	2017:4:73150:73169	1458321	190	True				
ANR	1459238	Identifier	OP_TYPEPOSPLUS		1458321	0					
ANR	1459239	Label	case OP_TYPEPOSQUERY :	2018:4:73175:73195	1458321	191	True				
ANR	1459240	Identifier	OP_TYPEPOSQUERY		1458321	0					
ANR	1459241	Label	case OP_TYPEPOSSTAR :	2019:4:73201:73220	1458321	192	True				
ANR	1459242	Identifier	OP_TYPEPOSSTAR		1458321	0					
ANR	1459243	Label	case OP_TYPEPOSUPTO :	2020:4:73226:73245	1458321	193	True				
ANR	1459244	Identifier	OP_TYPEPOSUPTO		1458321	0					
ANR	1459245	Label	case OP_TYPEQUERY :	2021:4:73251:73268	1458321	194	True				
ANR	1459246	Identifier	OP_TYPEQUERY		1458321	0					
ANR	1459247	Label	case OP_TYPESTAR :	2022:4:73274:73290	1458321	195	True				
ANR	1459248	Identifier	OP_TYPESTAR		1458321	0					
ANR	1459249	Label	case OP_TYPEUPTO :	2023:4:73296:73312	1458321	196	True				
ANR	1459250	Identifier	OP_TYPEUPTO		1458321	0					
ANR	1459251	Label	case OP_UPTO :	2024:4:73318:73330	1458321	197	True				
ANR	1459252	Identifier	OP_UPTO		1458321	0					
ANR	1459253	Label	case OP_UPTOI :	2025:4:73336:73349	1458321	198	True				
ANR	1459254	Identifier	OP_UPTOI		1458321	0					
ANR	1459255	ReturnStatement	return - 1 ;	2026:4:73355:73364	1458321	199	True				
ANR	1459256	UnaryOperationExpression	- 1		1458321	0					
ANR	1459257	UnaryOperator	-		1458321	0					
ANR	1459258	PrimaryExpression	1		1458321	1					
ANR	1459259	Label	default :	2031:4:73498:73505	1458321	200	True				
ANR	1459260	Identifier	default		1458321	0					
ANR	1459261	ReturnStatement	return - 4 ;	2032:4:73511:73520	1458321	201	True				
ANR	1459262	UnaryOperationExpression	- 4		1458321	0					
ANR	1459263	UnaryOperator	-		1458321	0					
ANR	1459264	PrimaryExpression	4		1458321	1					
ANR	1459265	ReturnType	static int		1458321	1					
ANR	1459266	Identifier	find_fixedlength		1458321	2					
ANR	1459267	ParameterList	"pcre_uchar * code , BOOL utf , BOOL atend , compile_data * cd , recurse_check * recurses"		1458321	3					
ANR	1459268	Parameter	pcre_uchar * code	1715:17:65593:65608	1458321	0	True				
ANR	1459269	ParameterType	pcre_uchar *		1458321	0					
ANR	1459270	Identifier	code		1458321	1					
ANR	1459271	Parameter	BOOL utf	1715:35:65611:65618	1458321	1	True				
ANR	1459272	ParameterType	BOOL		1458321	0					
ANR	1459273	Identifier	utf		1458321	1					
ANR	1459274	Parameter	BOOL atend	1715:45:65621:65630	1458321	2	True				
ANR	1459275	ParameterType	BOOL		1458321	0					
ANR	1459276	Identifier	atend		1458321	1					
ANR	1459277	Parameter	compile_data * cd	1715:57:65633:65648	1458321	3	True				
ANR	1459278	ParameterType	compile_data *		1458321	0					
ANR	1459279	Identifier	cd		1458321	1					
ANR	1459280	Parameter	recurse_check * recurses	1716:2:65653:65675	1458321	4	True				
ANR	1459281	ParameterType	recurse_check *		1458321	0					
ANR	1459282	Identifier	recurses		1458321	1					
ANR	1459283	CFGEntryNode	ENTRY		1458321		True				
ANR	1459284	CFGExitNode	EXIT		1458321		True				
ANR	1459285	InfiniteForNode	true		1458321		True				
ANR	1459286	Symbol	this_recurse		1458321						
ANR	1459287	Symbol	code		1458321						
ANR	1459288	Symbol	* cd		1458321						
ANR	1459289	Symbol	* IMM2_SIZE		1458321						
ANR	1459290	Symbol	atend		1458321						
ANR	1459291	Symbol	* cc		1458321						
ANR	1459292	Symbol	OP_CBRA		1458321						
ANR	1459293	Symbol	OP_ALT		1458321						
ANR	1459294	Symbol	* OP_CLASS		1458321						
ANR	1459295	Symbol	cd -> start_code		1458321						
ANR	1459296	Symbol	PRIV		1458321						
ANR	1459297	Symbol	* ce		1458321						
ANR	1459298	Symbol	* * cc		1458321						
ANR	1459299	Symbol	r -> prev		1458321						
ANR	1459300	Symbol	GET_EXTRALEN		1458321						
ANR	1459301	Symbol	GET2		1458321						
ANR	1459302	Symbol	cc		1458321						
ANR	1459303	Symbol	cd		1458321						
ANR	1459304	Symbol	op		1458321						
ANR	1459305	Symbol	HAS_EXTRALEN		1458321						
ANR	1459306	Symbol	ce		1458321						
ANR	1459307	Symbol	NULL		1458321						
ANR	1459308	Symbol	d		1458321						
ANR	1459309	Symbol	recurses		1458321						
ANR	1459310	Symbol	OP_CLASS		1458321						
ANR	1459311	Symbol	utf		1458321						
ANR	1459312	Symbol	IMM2_SIZE		1458321						
ANR	1459313	Symbol	length		1458321						
ANR	1459314	Symbol	r -> group		1458321						
ANR	1459315	Symbol	this_recurse . prev		1458321						
ANR	1459316	Symbol	OP_NOTPROP		1458321						
ANR	1459317	Symbol	LINK_SIZE		1458321						
ANR	1459318	Symbol	cs		1458321						
ANR	1459319	Symbol	this_recurse . group		1458321						
ANR	1459320	Symbol	* PRIV		1458321						
ANR	1459321	Symbol	OP_PROP		1458321						
ANR	1459322	Symbol	r		1458321						
ANR	1459323	Symbol	& this_recurse		1458321						
ANR	1459324	Symbol	OP_XCLASS		1458321						
ANR	1459325	Symbol	branchlength		1458321						
ANR	1459326	Symbol	GET		1458321						
ANR	1459327	Symbol	OP_lengths		1458321						
ANR	1459328	Symbol	* r		1458321						
ANR	1459329	Symbol	find_fixedlength		1458321						
ANR	1459330	Function	find_bracket	2059:0:74314:77991							
ANR	1459331	FunctionDef	"find_bracket (const pcre_uchar * code , BOOL utf , int number)"		1459330	0					
ANR	1459332	CompoundStatement		2060:0:74379:77991	1459330	0					
ANR	1459333	ForStatement	for ( ; ; )		1459330	0					
ANR	1459334	CompoundStatement		4:11:25:45	1459330	0					
ANR	1459335	Statement	register	2063:2:74396:74403	1459330	0	True				
ANR	1459336	IdentifierDeclStatement	pcre_uchar c = * code ;	2063:11:74405:74425	1459330	1	True				
ANR	1459337	IdentifierDecl	c = * code		1459330	0					
ANR	1459338	IdentifierDeclType	pcre_uchar		1459330	0					
ANR	1459339	Identifier	c		1459330	1					
ANR	1459340	AssignmentExpression	c = * code		1459330	2		=			
ANR	1459341	Identifier	c		1459330	0					
ANR	1459342	UnaryOperationExpression	* code		1459330	1					
ANR	1459343	UnaryOperator	*		1459330	0					
ANR	1459344	Identifier	code		1459330	1					
ANR	1459345	IfStatement	if ( c == OP_END )		1459330	2					
ANR	1459346	Condition	c == OP_END	2065:6:74434:74444	1459330	0	True				
ANR	1459347	EqualityExpression	c == OP_END		1459330	0		==			
ANR	1459348	Identifier	c		1459330	0					
ANR	1459349	Identifier	OP_END		1459330	1					
ANR	1459350	ReturnStatement	return NULL ;	2065:19:74447:74458	1459330	1	True				
ANR	1459351	Identifier	NULL		1459330	0					
ANR	1459352	IfStatement	if ( c == OP_XCLASS )		1459330	3					
ANR	1459353	Condition	c == OP_XCLASS	2071:6:74689:74702	1459330	0	True				
ANR	1459354	EqualityExpression	c == OP_XCLASS		1459330	0		==			
ANR	1459355	Identifier	c		1459330	0					
ANR	1459356	Identifier	OP_XCLASS		1459330	1					
ANR	1459357	ExpressionStatement	"code += GET ( code , 1 )"	2071:22:74705:74725	1459330	1	True				
ANR	1459358	AssignmentExpression	"code += GET ( code , 1 )"		1459330	0		+=			
ANR	1459359	Identifier	code		1459330	0					
ANR	1459360	CallExpression	"GET ( code , 1 )"		1459330	1					
ANR	1459361	Callee	GET		1459330	0					
ANR	1459362	Identifier	GET		1459330	0					
ANR	1459363	ArgumentList	code		1459330	1					
ANR	1459364	Argument	code		1459330	0					
ANR	1459365	Identifier	code		1459330	0					
ANR	1459366	Argument	1		1459330	1					
ANR	1459367	PrimaryExpression	1		1459330	0					
ANR	1459368	ElseStatement	else		1459330	0					
ANR	1459369	IfStatement	if ( c == OP_REVERSE )		1459330	0					
ANR	1459370	Condition	c == OP_REVERSE	2075:11:74765:74779	1459330	0	True				
ANR	1459371	EqualityExpression	c == OP_REVERSE		1459330	0		==			
ANR	1459372	Identifier	c		1459330	0					
ANR	1459373	Identifier	OP_REVERSE		1459330	1					
ANR	1459374	CompoundStatement		17:4:406:406	1459330	1					
ANR	1459375	IfStatement	if ( number < 0 )		1459330	0					
ANR	1459376	Condition	number < 0	2077:8:74796:74805	1459330	0	True				
ANR	1459377	RelationalExpression	number < 0		1459330	0		<			
ANR	1459378	Identifier	number		1459330	0					
ANR	1459379	PrimaryExpression	0		1459330	1					
ANR	1459380	ReturnStatement	return ( pcre_uchar * ) code ;	2077:20:74808:74833	1459330	1	True				
ANR	1459381	CastExpression	( pcre_uchar * ) code		1459330	0					
ANR	1459382	CastTarget	pcre_uchar *		1459330	0					
ANR	1459383	Identifier	code		1459330	1					
ANR	1459384	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2078:4:74839:74866	1459330	1	True				
ANR	1459385	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1459330	0		+=			
ANR	1459386	Identifier	code		1459330	0					
ANR	1459387	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1459330	1					
ANR	1459388	CallExpression	PRIV ( OP_lengths )		1459330	0					
ANR	1459389	Callee	PRIV		1459330	0					
ANR	1459390	Identifier	PRIV		1459330	0					
ANR	1459391	ArgumentList	OP_lengths		1459330	1					
ANR	1459392	Argument	OP_lengths		1459330	0					
ANR	1459393	Identifier	OP_lengths		1459330	0					
ANR	1459394	Identifier	c		1459330	1					
ANR	1459395	ElseStatement	else		1459330	0					
ANR	1459396	IfStatement	if ( c == OP_CBRA || c == OP_SCBRA || c == OP_CBRAPOS || c == OP_SCBRAPOS )		1459330	0					
ANR	1459397	Condition	c == OP_CBRA || c == OP_SCBRA || c == OP_CBRAPOS || c == OP_SCBRAPOS	2083:11:74920:74998	1459330	0	True				
ANR	1459398	OrExpression	c == OP_CBRA || c == OP_SCBRA || c == OP_CBRAPOS || c == OP_SCBRAPOS		1459330	0		||			
ANR	1459399	EqualityExpression	c == OP_CBRA		1459330	0		==			
ANR	1459400	Identifier	c		1459330	0					
ANR	1459401	Identifier	OP_CBRA		1459330	1					
ANR	1459402	OrExpression	c == OP_SCBRA || c == OP_CBRAPOS || c == OP_SCBRAPOS		1459330	1		||			
ANR	1459403	EqualityExpression	c == OP_SCBRA		1459330	0		==			
ANR	1459404	Identifier	c		1459330	0					
ANR	1459405	Identifier	OP_SCBRA		1459330	1					
ANR	1459406	OrExpression	c == OP_CBRAPOS || c == OP_SCBRAPOS		1459330	1		||			
ANR	1459407	EqualityExpression	c == OP_CBRAPOS		1459330	0		==			
ANR	1459408	Identifier	c		1459330	0					
ANR	1459409	Identifier	OP_CBRAPOS		1459330	1					
ANR	1459410	EqualityExpression	c == OP_SCBRAPOS		1459330	1		==			
ANR	1459411	Identifier	c		1459330	0					
ANR	1459412	Identifier	OP_SCBRAPOS		1459330	1					
ANR	1459413	CompoundStatement		27:4:631:667	1459330	1					
ANR	1459414	IdentifierDeclStatement	"int n = ( int ) GET2 ( code , 1 + LINK_SIZE ) ;"	2086:4:75011:75047	1459330	0	True				
ANR	1459415	IdentifierDecl	"n = ( int ) GET2 ( code , 1 + LINK_SIZE )"		1459330	0					
ANR	1459416	IdentifierDeclType	int		1459330	0					
ANR	1459417	Identifier	n		1459330	1					
ANR	1459418	AssignmentExpression	"n = ( int ) GET2 ( code , 1 + LINK_SIZE )"		1459330	2		=			
ANR	1459419	Identifier	n		1459330	0					
ANR	1459420	CastExpression	"( int ) GET2 ( code , 1 + LINK_SIZE )"		1459330	1					
ANR	1459421	CastTarget	int		1459330	0					
ANR	1459422	CallExpression	"GET2 ( code , 1 + LINK_SIZE )"		1459330	1					
ANR	1459423	Callee	GET2		1459330	0					
ANR	1459424	Identifier	GET2		1459330	0					
ANR	1459425	ArgumentList	code		1459330	1					
ANR	1459426	Argument	code		1459330	0					
ANR	1459427	Identifier	code		1459330	0					
ANR	1459428	Argument	1 + LINK_SIZE		1459330	1					
ANR	1459429	AdditiveExpression	1 + LINK_SIZE		1459330	0		+			
ANR	1459430	PrimaryExpression	1		1459330	0					
ANR	1459431	Identifier	LINK_SIZE		1459330	1					
ANR	1459432	IfStatement	if ( n == number )		1459330	1					
ANR	1459433	Condition	n == number	2087:8:75057:75067	1459330	0	True				
ANR	1459434	EqualityExpression	n == number		1459330	0		==			
ANR	1459435	Identifier	n		1459330	0					
ANR	1459436	Identifier	number		1459330	1					
ANR	1459437	ReturnStatement	return ( pcre_uchar * ) code ;	2087:21:75070:75095	1459330	1	True				
ANR	1459438	CastExpression	( pcre_uchar * ) code		1459330	0					
ANR	1459439	CastTarget	pcre_uchar *		1459330	0					
ANR	1459440	Identifier	code		1459330	1					
ANR	1459441	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2088:4:75101:75128	1459330	2	True				
ANR	1459442	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1459330	0		+=			
ANR	1459443	Identifier	code		1459330	0					
ANR	1459444	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1459330	1					
ANR	1459445	CallExpression	PRIV ( OP_lengths )		1459330	0					
ANR	1459446	Callee	PRIV		1459330	0					
ANR	1459447	Identifier	PRIV		1459330	0					
ANR	1459448	ArgumentList	OP_lengths		1459330	1					
ANR	1459449	Argument	OP_lengths		1459330	0					
ANR	1459450	Identifier	OP_lengths		1459330	0					
ANR	1459451	Identifier	c		1459330	1					
ANR	1459452	ElseStatement	else		1459330	0					
ANR	1459453	CompoundStatement		38:4:1031:1031	1459330	0					
ANR	1459454	SwitchStatement	switch ( c )		1459330	0					
ANR	1459455	Condition	c	2098:11:75424:75424	1459330	0	True				
ANR	1459456	Identifier	c		1459330	0					
ANR	1459457	CompoundStatement		40:6:1053:1053	1459330	1					
ANR	1459458	Label	case OP_TYPESTAR :	2100:6:75441:75457	1459330	0	True				
ANR	1459459	Identifier	OP_TYPESTAR		1459330	0					
ANR	1459460	Label	case OP_TYPEMINSTAR :	2101:6:75465:75484	1459330	1	True				
ANR	1459461	Identifier	OP_TYPEMINSTAR		1459330	0					
ANR	1459462	Label	case OP_TYPEPLUS :	2102:6:75492:75508	1459330	2	True				
ANR	1459463	Identifier	OP_TYPEPLUS		1459330	0					
ANR	1459464	Label	case OP_TYPEMINPLUS :	2103:6:75516:75535	1459330	3	True				
ANR	1459465	Identifier	OP_TYPEMINPLUS		1459330	0					
ANR	1459466	Label	case OP_TYPEQUERY :	2104:6:75543:75560	1459330	4	True				
ANR	1459467	Identifier	OP_TYPEQUERY		1459330	0					
ANR	1459468	Label	case OP_TYPEMINQUERY :	2105:6:75568:75588	1459330	5	True				
ANR	1459469	Identifier	OP_TYPEMINQUERY		1459330	0					
ANR	1459470	Label	case OP_TYPEPOSSTAR :	2106:6:75596:75615	1459330	6	True				
ANR	1459471	Identifier	OP_TYPEPOSSTAR		1459330	0					
ANR	1459472	Label	case OP_TYPEPOSPLUS :	2107:6:75623:75642	1459330	7	True				
ANR	1459473	Identifier	OP_TYPEPOSPLUS		1459330	0					
ANR	1459474	Label	case OP_TYPEPOSQUERY :	2108:6:75650:75670	1459330	8	True				
ANR	1459475	Identifier	OP_TYPEPOSQUERY		1459330	0					
ANR	1459476	IfStatement	if ( code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP )		1459330	9					
ANR	1459477	Condition	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP	2109:10:75682:75724	1459330	0	True				
ANR	1459478	OrExpression	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP		1459330	0		||			
ANR	1459479	EqualityExpression	code [ 1 ] == OP_PROP		1459330	0		==			
ANR	1459480	ArrayIndexing	code [ 1 ]		1459330	0					
ANR	1459481	Identifier	code		1459330	0					
ANR	1459482	PrimaryExpression	1		1459330	1					
ANR	1459483	Identifier	OP_PROP		1459330	1					
ANR	1459484	EqualityExpression	code [ 1 ] == OP_NOTPROP		1459330	1		==			
ANR	1459485	ArrayIndexing	code [ 1 ]		1459330	0					
ANR	1459486	Identifier	code		1459330	0					
ANR	1459487	PrimaryExpression	1		1459330	1					
ANR	1459488	Identifier	OP_NOTPROP		1459330	1					
ANR	1459489	ExpressionStatement	code += 2	2109:55:75727:75736	1459330	1	True				
ANR	1459490	AssignmentExpression	code += 2		1459330	0		+=			
ANR	1459491	Identifier	code		1459330	0					
ANR	1459492	PrimaryExpression	2		1459330	1					
ANR	1459493	BreakStatement	break ;	2110:6:75744:75749	1459330	10	True				
ANR	1459494	Label	case OP_TYPEUPTO :	2112:6:75758:75774	1459330	11	True				
ANR	1459495	Identifier	OP_TYPEUPTO		1459330	0					
ANR	1459496	Label	case OP_TYPEMINUPTO :	2113:6:75782:75801	1459330	12	True				
ANR	1459497	Identifier	OP_TYPEMINUPTO		1459330	0					
ANR	1459498	Label	case OP_TYPEEXACT :	2114:6:75809:75826	1459330	13	True				
ANR	1459499	Identifier	OP_TYPEEXACT		1459330	0					
ANR	1459500	Label	case OP_TYPEPOSUPTO :	2115:6:75834:75853	1459330	14	True				
ANR	1459501	Identifier	OP_TYPEPOSUPTO		1459330	0					
ANR	1459502	IfStatement	if ( code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP )		1459330	15					
ANR	1459503	Condition	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP	2116:10:75865:75931	1459330	0	True				
ANR	1459504	OrExpression	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP		1459330	0		||			
ANR	1459505	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_PROP		1459330	0		==			
ANR	1459506	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1459330	0					
ANR	1459507	Identifier	code		1459330	0					
ANR	1459508	AdditiveExpression	1 + IMM2_SIZE		1459330	1		+			
ANR	1459509	PrimaryExpression	1		1459330	0					
ANR	1459510	Identifier	IMM2_SIZE		1459330	1					
ANR	1459511	Identifier	OP_PROP		1459330	1					
ANR	1459512	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_NOTPROP		1459330	1		==			
ANR	1459513	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1459330	0					
ANR	1459514	Identifier	code		1459330	0					
ANR	1459515	AdditiveExpression	1 + IMM2_SIZE		1459330	1		+			
ANR	1459516	PrimaryExpression	1		1459330	0					
ANR	1459517	Identifier	IMM2_SIZE		1459330	1					
ANR	1459518	Identifier	OP_NOTPROP		1459330	1					
ANR	1459519	ExpressionStatement	code += 2	2117:8:75942:75951	1459330	1	True				
ANR	1459520	AssignmentExpression	code += 2		1459330	0		+=			
ANR	1459521	Identifier	code		1459330	0					
ANR	1459522	PrimaryExpression	2		1459330	1					
ANR	1459523	BreakStatement	break ;	2118:6:75959:75964	1459330	16	True				
ANR	1459524	Label	case OP_MARK :	2120:6:75973:75985	1459330	17	True				
ANR	1459525	Identifier	OP_MARK		1459330	0					
ANR	1459526	Label	case OP_PRUNE_ARG :	2121:6:75993:76010	1459330	18	True				
ANR	1459527	Identifier	OP_PRUNE_ARG		1459330	0					
ANR	1459528	Label	case OP_SKIP_ARG :	2122:6:76018:76034	1459330	19	True				
ANR	1459529	Identifier	OP_SKIP_ARG		1459330	0					
ANR	1459530	Label	case OP_THEN_ARG :	2123:6:76042:76058	1459330	20	True				
ANR	1459531	Identifier	OP_THEN_ARG		1459330	0					
ANR	1459532	ExpressionStatement	code += code [ 1 ]	2124:6:76066:76081	1459330	21	True				
ANR	1459533	AssignmentExpression	code += code [ 1 ]		1459330	0		+=			
ANR	1459534	Identifier	code		1459330	0					
ANR	1459535	ArrayIndexing	code [ 1 ]		1459330	1					
ANR	1459536	Identifier	code		1459330	0					
ANR	1459537	PrimaryExpression	1		1459330	1					
ANR	1459538	BreakStatement	break ;	2125:6:76089:76094	1459330	22	True				
ANR	1459539	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2130:4:76159:76186	1459330	1	True				
ANR	1459540	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1459330	0		+=			
ANR	1459541	Identifier	code		1459330	0					
ANR	1459542	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1459330	1					
ANR	1459543	CallExpression	PRIV ( OP_lengths )		1459330	0					
ANR	1459544	Callee	PRIV		1459330	0					
ANR	1459545	Identifier	PRIV		1459330	0					
ANR	1459546	ArgumentList	OP_lengths		1459330	1					
ANR	1459547	Argument	OP_lengths		1459330	0					
ANR	1459548	Identifier	OP_lengths		1459330	0					
ANR	1459549	Identifier	c		1459330	1					
ANR	1459550	IfStatement	if ( utf )		1459330	2					
ANR	1459551	Condition	utf	2137:8:76445:76447	1459330	0	True				
ANR	1459552	Identifier	utf		1459330	0					
ANR	1459553	SwitchStatement	switch ( c )		1459330	1					
ANR	1459554	Condition	c	2137:20:76457:76457	1459330	0	True				
ANR	1459555	Identifier	c		1459330	0					
ANR	1459556	CompoundStatement		79:6:2086:2086	1459330	1					
ANR	1459557	Label	case OP_CHAR :	2139:6:76474:76486	1459330	0	True				
ANR	1459558	Identifier	OP_CHAR		1459330	0					
ANR	1459559	Label	case OP_CHARI :	2140:6:76494:76507	1459330	1	True				
ANR	1459560	Identifier	OP_CHARI		1459330	0					
ANR	1459561	Label	case OP_NOT :	2141:6:76515:76526	1459330	2	True				
ANR	1459562	Identifier	OP_NOT		1459330	0					
ANR	1459563	Label	case OP_NOTI :	2142:6:76534:76546	1459330	3	True				
ANR	1459564	Identifier	OP_NOTI		1459330	0					
ANR	1459565	Label	case OP_EXACT :	2143:6:76554:76567	1459330	4	True				
ANR	1459566	Identifier	OP_EXACT		1459330	0					
ANR	1459567	Label	case OP_EXACTI :	2144:6:76575:76589	1459330	5	True				
ANR	1459568	Identifier	OP_EXACTI		1459330	0					
ANR	1459569	Label	case OP_NOTEXACT :	2145:6:76597:76613	1459330	6	True				
ANR	1459570	Identifier	OP_NOTEXACT		1459330	0					
ANR	1459571	Label	case OP_NOTEXACTI :	2146:6:76621:76638	1459330	7	True				
ANR	1459572	Identifier	OP_NOTEXACTI		1459330	0					
ANR	1459573	Label	case OP_UPTO :	2147:6:76646:76658	1459330	8	True				
ANR	1459574	Identifier	OP_UPTO		1459330	0					
ANR	1459575	Label	case OP_UPTOI :	2148:6:76666:76679	1459330	9	True				
ANR	1459576	Identifier	OP_UPTOI		1459330	0					
ANR	1459577	Label	case OP_NOTUPTO :	2149:6:76687:76702	1459330	10	True				
ANR	1459578	Identifier	OP_NOTUPTO		1459330	0					
ANR	1459579	Label	case OP_NOTUPTOI :	2150:6:76710:76726	1459330	11	True				
ANR	1459580	Identifier	OP_NOTUPTOI		1459330	0					
ANR	1459581	Label	case OP_MINUPTO :	2151:6:76734:76749	1459330	12	True				
ANR	1459582	Identifier	OP_MINUPTO		1459330	0					
ANR	1459583	Label	case OP_MINUPTOI :	2152:6:76757:76773	1459330	13	True				
ANR	1459584	Identifier	OP_MINUPTOI		1459330	0					
ANR	1459585	Label	case OP_NOTMINUPTO :	2153:6:76781:76799	1459330	14	True				
ANR	1459586	Identifier	OP_NOTMINUPTO		1459330	0					
ANR	1459587	Label	case OP_NOTMINUPTOI :	2154:6:76807:76826	1459330	15	True				
ANR	1459588	Identifier	OP_NOTMINUPTOI		1459330	0					
ANR	1459589	Label	case OP_POSUPTO :	2155:6:76834:76849	1459330	16	True				
ANR	1459590	Identifier	OP_POSUPTO		1459330	0					
ANR	1459591	Label	case OP_POSUPTOI :	2156:6:76857:76873	1459330	17	True				
ANR	1459592	Identifier	OP_POSUPTOI		1459330	0					
ANR	1459593	Label	case OP_NOTPOSUPTO :	2157:6:76881:76899	1459330	18	True				
ANR	1459594	Identifier	OP_NOTPOSUPTO		1459330	0					
ANR	1459595	Label	case OP_NOTPOSUPTOI :	2158:6:76907:76926	1459330	19	True				
ANR	1459596	Identifier	OP_NOTPOSUPTOI		1459330	0					
ANR	1459597	Label	case OP_STAR :	2159:6:76934:76946	1459330	20	True				
ANR	1459598	Identifier	OP_STAR		1459330	0					
ANR	1459599	Label	case OP_STARI :	2160:6:76954:76967	1459330	21	True				
ANR	1459600	Identifier	OP_STARI		1459330	0					
ANR	1459601	Label	case OP_NOTSTAR :	2161:6:76975:76990	1459330	22	True				
ANR	1459602	Identifier	OP_NOTSTAR		1459330	0					
ANR	1459603	Label	case OP_NOTSTARI :	2162:6:76998:77014	1459330	23	True				
ANR	1459604	Identifier	OP_NOTSTARI		1459330	0					
ANR	1459605	Label	case OP_MINSTAR :	2163:6:77022:77037	1459330	24	True				
ANR	1459606	Identifier	OP_MINSTAR		1459330	0					
ANR	1459607	Label	case OP_MINSTARI :	2164:6:77045:77061	1459330	25	True				
ANR	1459608	Identifier	OP_MINSTARI		1459330	0					
ANR	1459609	Label	case OP_NOTMINSTAR :	2165:6:77069:77087	1459330	26	True				
ANR	1459610	Identifier	OP_NOTMINSTAR		1459330	0					
ANR	1459611	Label	case OP_NOTMINSTARI :	2166:6:77095:77114	1459330	27	True				
ANR	1459612	Identifier	OP_NOTMINSTARI		1459330	0					
ANR	1459613	Label	case OP_POSSTAR :	2167:6:77122:77137	1459330	28	True				
ANR	1459614	Identifier	OP_POSSTAR		1459330	0					
ANR	1459615	Label	case OP_POSSTARI :	2168:6:77145:77161	1459330	29	True				
ANR	1459616	Identifier	OP_POSSTARI		1459330	0					
ANR	1459617	Label	case OP_NOTPOSSTAR :	2169:6:77169:77187	1459330	30	True				
ANR	1459618	Identifier	OP_NOTPOSSTAR		1459330	0					
ANR	1459619	Label	case OP_NOTPOSSTARI :	2170:6:77195:77214	1459330	31	True				
ANR	1459620	Identifier	OP_NOTPOSSTARI		1459330	0					
ANR	1459621	Label	case OP_PLUS :	2171:6:77222:77234	1459330	32	True				
ANR	1459622	Identifier	OP_PLUS		1459330	0					
ANR	1459623	Label	case OP_PLUSI :	2172:6:77242:77255	1459330	33	True				
ANR	1459624	Identifier	OP_PLUSI		1459330	0					
ANR	1459625	Label	case OP_NOTPLUS :	2173:6:77263:77278	1459330	34	True				
ANR	1459626	Identifier	OP_NOTPLUS		1459330	0					
ANR	1459627	Label	case OP_NOTPLUSI :	2174:6:77286:77302	1459330	35	True				
ANR	1459628	Identifier	OP_NOTPLUSI		1459330	0					
ANR	1459629	Label	case OP_MINPLUS :	2175:6:77310:77325	1459330	36	True				
ANR	1459630	Identifier	OP_MINPLUS		1459330	0					
ANR	1459631	Label	case OP_MINPLUSI :	2176:6:77333:77349	1459330	37	True				
ANR	1459632	Identifier	OP_MINPLUSI		1459330	0					
ANR	1459633	Label	case OP_NOTMINPLUS :	2177:6:77357:77375	1459330	38	True				
ANR	1459634	Identifier	OP_NOTMINPLUS		1459330	0					
ANR	1459635	Label	case OP_NOTMINPLUSI :	2178:6:77383:77402	1459330	39	True				
ANR	1459636	Identifier	OP_NOTMINPLUSI		1459330	0					
ANR	1459637	Label	case OP_POSPLUS :	2179:6:77410:77425	1459330	40	True				
ANR	1459638	Identifier	OP_POSPLUS		1459330	0					
ANR	1459639	Label	case OP_POSPLUSI :	2180:6:77433:77449	1459330	41	True				
ANR	1459640	Identifier	OP_POSPLUSI		1459330	0					
ANR	1459641	Label	case OP_NOTPOSPLUS :	2181:6:77457:77475	1459330	42	True				
ANR	1459642	Identifier	OP_NOTPOSPLUS		1459330	0					
ANR	1459643	Label	case OP_NOTPOSPLUSI :	2182:6:77483:77502	1459330	43	True				
ANR	1459644	Identifier	OP_NOTPOSPLUSI		1459330	0					
ANR	1459645	Label	case OP_QUERY :	2183:6:77510:77523	1459330	44	True				
ANR	1459646	Identifier	OP_QUERY		1459330	0					
ANR	1459647	Label	case OP_QUERYI :	2184:6:77531:77545	1459330	45	True				
ANR	1459648	Identifier	OP_QUERYI		1459330	0					
ANR	1459649	Label	case OP_NOTQUERY :	2185:6:77553:77569	1459330	46	True				
ANR	1459650	Identifier	OP_NOTQUERY		1459330	0					
ANR	1459651	Label	case OP_NOTQUERYI :	2186:6:77577:77594	1459330	47	True				
ANR	1459652	Identifier	OP_NOTQUERYI		1459330	0					
ANR	1459653	Label	case OP_MINQUERY :	2187:6:77602:77618	1459330	48	True				
ANR	1459654	Identifier	OP_MINQUERY		1459330	0					
ANR	1459655	Label	case OP_MINQUERYI :	2188:6:77626:77643	1459330	49	True				
ANR	1459656	Identifier	OP_MINQUERYI		1459330	0					
ANR	1459657	Label	case OP_NOTMINQUERY :	2189:6:77651:77670	1459330	50	True				
ANR	1459658	Identifier	OP_NOTMINQUERY		1459330	0					
ANR	1459659	Label	case OP_NOTMINQUERYI :	2190:6:77678:77698	1459330	51	True				
ANR	1459660	Identifier	OP_NOTMINQUERYI		1459330	0					
ANR	1459661	Label	case OP_POSQUERY :	2191:6:77706:77722	1459330	52	True				
ANR	1459662	Identifier	OP_POSQUERY		1459330	0					
ANR	1459663	Label	case OP_POSQUERYI :	2192:6:77730:77747	1459330	53	True				
ANR	1459664	Identifier	OP_POSQUERYI		1459330	0					
ANR	1459665	Label	case OP_NOTPOSQUERY :	2193:6:77755:77774	1459330	54	True				
ANR	1459666	Identifier	OP_NOTPOSQUERY		1459330	0					
ANR	1459667	Label	case OP_NOTPOSQUERYI :	2194:6:77782:77802	1459330	55	True				
ANR	1459668	Identifier	OP_NOTPOSQUERYI		1459330	0					
ANR	1459669	IfStatement	if ( HAS_EXTRALEN ( code [ - 1 ] ) )		1459330	56					
ANR	1459670	Condition	HAS_EXTRALEN ( code [ - 1 ] )	2195:10:77814:77835	1459330	0	True				
ANR	1459671	CallExpression	HAS_EXTRALEN ( code [ - 1 ] )		1459330	0					
ANR	1459672	Callee	HAS_EXTRALEN		1459330	0					
ANR	1459673	Identifier	HAS_EXTRALEN		1459330	0					
ANR	1459674	ArgumentList	code [ - 1 ]		1459330	1					
ANR	1459675	Argument	code [ - 1 ]		1459330	0					
ANR	1459676	ArrayIndexing	code [ - 1 ]		1459330	0					
ANR	1459677	Identifier	code		1459330	0					
ANR	1459678	UnaryOperationExpression	- 1		1459330	1					
ANR	1459679	UnaryOperator	-		1459330	0					
ANR	1459680	PrimaryExpression	1		1459330	1					
ANR	1459681	ExpressionStatement	code += GET_EXTRALEN ( code [ - 1 ] )	2195:34:77838:77868	1459330	1	True				
ANR	1459682	AssignmentExpression	code += GET_EXTRALEN ( code [ - 1 ] )		1459330	0		+=			
ANR	1459683	Identifier	code		1459330	0					
ANR	1459684	CallExpression	GET_EXTRALEN ( code [ - 1 ] )		1459330	1					
ANR	1459685	Callee	GET_EXTRALEN		1459330	0					
ANR	1459686	Identifier	GET_EXTRALEN		1459330	0					
ANR	1459687	ArgumentList	code [ - 1 ]		1459330	1					
ANR	1459688	Argument	code [ - 1 ]		1459330	0					
ANR	1459689	ArrayIndexing	code [ - 1 ]		1459330	0					
ANR	1459690	Identifier	code		1459330	0					
ANR	1459691	UnaryOperationExpression	- 1		1459330	1					
ANR	1459692	UnaryOperator	-		1459330	0					
ANR	1459693	PrimaryExpression	1		1459330	1					
ANR	1459694	BreakStatement	break ;	2196:6:77876:77881	1459330	57	True				
ANR	1459695	ReturnType	PRIV		1459330	1					
ANR	1459696	Identifier	( find_bracket )		1459330	2					
ANR	1459697	Identifier	find_bracket		1459330	3					
ANR	1459698	ParameterList	"const pcre_uchar * code , BOOL utf , int number"		1459330	4					
ANR	1459699	Parameter	const pcre_uchar * code	2059:19:74333:74354	1459330	0	True				
ANR	1459700	ParameterType	const pcre_uchar *		1459330	0					
ANR	1459701	Identifier	code		1459330	1					
ANR	1459702	Parameter	BOOL utf	2059:43:74357:74364	1459330	1	True				
ANR	1459703	ParameterType	BOOL		1459330	0					
ANR	1459704	Identifier	utf		1459330	1					
ANR	1459705	Parameter	int number	2059:53:74367:74376	1459330	2	True				
ANR	1459706	ParameterType	int		1459330	0					
ANR	1459707	Identifier	number		1459330	1					
ANR	1459708	CFGEntryNode	ENTRY		1459330		True				
ANR	1459709	CFGExitNode	EXIT		1459330		True				
ANR	1459710	InfiniteForNode	true		1459330		True				
ANR	1459711	Symbol	code		1459330						
ANR	1459712	Symbol	* IMM2_SIZE		1459330						
ANR	1459713	Symbol	OP_CBRA		1459330						
ANR	1459714	Symbol	PRIV		1459330						
ANR	1459715	Symbol	number		1459330						
ANR	1459716	Symbol	OP_REVERSE		1459330						
ANR	1459717	Symbol	OP_CBRAPOS		1459330						
ANR	1459718	Symbol	GET_EXTRALEN		1459330						
ANR	1459719	Symbol	GET2		1459330						
ANR	1459720	Symbol	OP_SCBRAPOS		1459330						
ANR	1459721	Symbol	HAS_EXTRALEN		1459330						
ANR	1459722	Symbol	c		1459330						
ANR	1459723	Symbol	NULL		1459330						
ANR	1459724	Symbol	utf		1459330						
ANR	1459725	Symbol	IMM2_SIZE		1459330						
ANR	1459726	Symbol	* c		1459330						
ANR	1459727	Symbol	n		1459330						
ANR	1459728	Symbol	OP_NOTPROP		1459330						
ANR	1459729	Symbol	LINK_SIZE		1459330						
ANR	1459730	Symbol	* PRIV		1459330						
ANR	1459731	Symbol	OP_PROP		1459330						
ANR	1459732	Symbol	OP_XCLASS		1459330						
ANR	1459733	Symbol	GET		1459330						
ANR	1459734	Symbol	OP_lengths		1459330						
ANR	1459735	Symbol	* code		1459330						
ANR	1459736	Symbol	OP_END		1459330						
ANR	1459737	Symbol	OP_SCBRA		1459330						
ANR	1459738	Function	find_recurse	2221:0:78434:81751							
ANR	1459739	FunctionDef	"find_recurse (const pcre_uchar * code , BOOL utf)"		1459738	0					
ANR	1459740	CompoundStatement		2223:0:78507:81751	1459738	0					
ANR	1459741	ForStatement	for ( ; ; )		1459738	0					
ANR	1459742	CompoundStatement		4:11:25:45	1459738	0					
ANR	1459743	Statement	register	2226:2:78524:78531	1459738	0	True				
ANR	1459744	IdentifierDeclStatement	pcre_uchar c = * code ;	2226:11:78533:78553	1459738	1	True				
ANR	1459745	IdentifierDecl	c = * code		1459738	0					
ANR	1459746	IdentifierDeclType	pcre_uchar		1459738	0					
ANR	1459747	Identifier	c		1459738	1					
ANR	1459748	AssignmentExpression	c = * code		1459738	2		=			
ANR	1459749	Identifier	c		1459738	0					
ANR	1459750	UnaryOperationExpression	* code		1459738	1					
ANR	1459751	UnaryOperator	*		1459738	0					
ANR	1459752	Identifier	code		1459738	1					
ANR	1459753	IfStatement	if ( c == OP_END )		1459738	2					
ANR	1459754	Condition	c == OP_END	2227:6:78561:78571	1459738	0	True				
ANR	1459755	EqualityExpression	c == OP_END		1459738	0		==			
ANR	1459756	Identifier	c		1459738	0					
ANR	1459757	Identifier	OP_END		1459738	1					
ANR	1459758	ReturnStatement	return NULL ;	2227:19:78574:78585	1459738	1	True				
ANR	1459759	Identifier	NULL		1459738	0					
ANR	1459760	IfStatement	if ( c == OP_RECURSE )		1459738	3					
ANR	1459761	Condition	c == OP_RECURSE	2228:6:78593:78607	1459738	0	True				
ANR	1459762	EqualityExpression	c == OP_RECURSE		1459738	0		==			
ANR	1459763	Identifier	c		1459738	0					
ANR	1459764	Identifier	OP_RECURSE		1459738	1					
ANR	1459765	ReturnStatement	return code ;	2228:23:78610:78621	1459738	1	True				
ANR	1459766	Identifier	code		1459738	0					
ANR	1459767	IfStatement	if ( c == OP_XCLASS )		1459738	4					
ANR	1459768	Condition	c == OP_XCLASS	2234:6:78852:78865	1459738	0	True				
ANR	1459769	EqualityExpression	c == OP_XCLASS		1459738	0		==			
ANR	1459770	Identifier	c		1459738	0					
ANR	1459771	Identifier	OP_XCLASS		1459738	1					
ANR	1459772	ExpressionStatement	"code += GET ( code , 1 )"	2234:22:78868:78888	1459738	1	True				
ANR	1459773	AssignmentExpression	"code += GET ( code , 1 )"		1459738	0		+=			
ANR	1459774	Identifier	code		1459738	0					
ANR	1459775	CallExpression	"GET ( code , 1 )"		1459738	1					
ANR	1459776	Callee	GET		1459738	0					
ANR	1459777	Identifier	GET		1459738	0					
ANR	1459778	ArgumentList	code		1459738	1					
ANR	1459779	Argument	code		1459738	0					
ANR	1459780	Identifier	code		1459738	0					
ANR	1459781	Argument	1		1459738	1					
ANR	1459782	PrimaryExpression	1		1459738	0					
ANR	1459783	ElseStatement	else		1459738	0					
ANR	1459784	CompoundStatement		20:4:657:657	1459738	0					
ANR	1459785	SwitchStatement	switch ( c )		1459738	0					
ANR	1459786	Condition	c	2243:11:79178:79178	1459738	0	True				
ANR	1459787	Identifier	c		1459738	0					
ANR	1459788	CompoundStatement		22:6:679:679	1459738	1					
ANR	1459789	Label	case OP_TYPESTAR :	2245:6:79195:79211	1459738	0	True				
ANR	1459790	Identifier	OP_TYPESTAR		1459738	0					
ANR	1459791	Label	case OP_TYPEMINSTAR :	2246:6:79219:79238	1459738	1	True				
ANR	1459792	Identifier	OP_TYPEMINSTAR		1459738	0					
ANR	1459793	Label	case OP_TYPEPLUS :	2247:6:79246:79262	1459738	2	True				
ANR	1459794	Identifier	OP_TYPEPLUS		1459738	0					
ANR	1459795	Label	case OP_TYPEMINPLUS :	2248:6:79270:79289	1459738	3	True				
ANR	1459796	Identifier	OP_TYPEMINPLUS		1459738	0					
ANR	1459797	Label	case OP_TYPEQUERY :	2249:6:79297:79314	1459738	4	True				
ANR	1459798	Identifier	OP_TYPEQUERY		1459738	0					
ANR	1459799	Label	case OP_TYPEMINQUERY :	2250:6:79322:79342	1459738	5	True				
ANR	1459800	Identifier	OP_TYPEMINQUERY		1459738	0					
ANR	1459801	Label	case OP_TYPEPOSSTAR :	2251:6:79350:79369	1459738	6	True				
ANR	1459802	Identifier	OP_TYPEPOSSTAR		1459738	0					
ANR	1459803	Label	case OP_TYPEPOSPLUS :	2252:6:79377:79396	1459738	7	True				
ANR	1459804	Identifier	OP_TYPEPOSPLUS		1459738	0					
ANR	1459805	Label	case OP_TYPEPOSQUERY :	2253:6:79404:79424	1459738	8	True				
ANR	1459806	Identifier	OP_TYPEPOSQUERY		1459738	0					
ANR	1459807	IfStatement	if ( code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP )		1459738	9					
ANR	1459808	Condition	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP	2254:10:79436:79478	1459738	0	True				
ANR	1459809	OrExpression	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP		1459738	0		||			
ANR	1459810	EqualityExpression	code [ 1 ] == OP_PROP		1459738	0		==			
ANR	1459811	ArrayIndexing	code [ 1 ]		1459738	0					
ANR	1459812	Identifier	code		1459738	0					
ANR	1459813	PrimaryExpression	1		1459738	1					
ANR	1459814	Identifier	OP_PROP		1459738	1					
ANR	1459815	EqualityExpression	code [ 1 ] == OP_NOTPROP		1459738	1		==			
ANR	1459816	ArrayIndexing	code [ 1 ]		1459738	0					
ANR	1459817	Identifier	code		1459738	0					
ANR	1459818	PrimaryExpression	1		1459738	1					
ANR	1459819	Identifier	OP_NOTPROP		1459738	1					
ANR	1459820	ExpressionStatement	code += 2	2254:55:79481:79490	1459738	1	True				
ANR	1459821	AssignmentExpression	code += 2		1459738	0		+=			
ANR	1459822	Identifier	code		1459738	0					
ANR	1459823	PrimaryExpression	2		1459738	1					
ANR	1459824	BreakStatement	break ;	2255:6:79498:79503	1459738	10	True				
ANR	1459825	Label	case OP_TYPEPOSUPTO :	2257:6:79512:79531	1459738	11	True				
ANR	1459826	Identifier	OP_TYPEPOSUPTO		1459738	0					
ANR	1459827	Label	case OP_TYPEUPTO :	2258:6:79539:79555	1459738	12	True				
ANR	1459828	Identifier	OP_TYPEUPTO		1459738	0					
ANR	1459829	Label	case OP_TYPEMINUPTO :	2259:6:79563:79582	1459738	13	True				
ANR	1459830	Identifier	OP_TYPEMINUPTO		1459738	0					
ANR	1459831	Label	case OP_TYPEEXACT :	2260:6:79590:79607	1459738	14	True				
ANR	1459832	Identifier	OP_TYPEEXACT		1459738	0					
ANR	1459833	IfStatement	if ( code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP )		1459738	15					
ANR	1459834	Condition	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP	2261:10:79619:79685	1459738	0	True				
ANR	1459835	OrExpression	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP		1459738	0		||			
ANR	1459836	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_PROP		1459738	0		==			
ANR	1459837	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1459738	0					
ANR	1459838	Identifier	code		1459738	0					
ANR	1459839	AdditiveExpression	1 + IMM2_SIZE		1459738	1		+			
ANR	1459840	PrimaryExpression	1		1459738	0					
ANR	1459841	Identifier	IMM2_SIZE		1459738	1					
ANR	1459842	Identifier	OP_PROP		1459738	1					
ANR	1459843	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_NOTPROP		1459738	1		==			
ANR	1459844	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1459738	0					
ANR	1459845	Identifier	code		1459738	0					
ANR	1459846	AdditiveExpression	1 + IMM2_SIZE		1459738	1		+			
ANR	1459847	PrimaryExpression	1		1459738	0					
ANR	1459848	Identifier	IMM2_SIZE		1459738	1					
ANR	1459849	Identifier	OP_NOTPROP		1459738	1					
ANR	1459850	ExpressionStatement	code += 2	2262:8:79696:79705	1459738	1	True				
ANR	1459851	AssignmentExpression	code += 2		1459738	0		+=			
ANR	1459852	Identifier	code		1459738	0					
ANR	1459853	PrimaryExpression	2		1459738	1					
ANR	1459854	BreakStatement	break ;	2263:6:79713:79718	1459738	16	True				
ANR	1459855	Label	case OP_MARK :	2265:6:79727:79739	1459738	17	True				
ANR	1459856	Identifier	OP_MARK		1459738	0					
ANR	1459857	Label	case OP_PRUNE_ARG :	2266:6:79747:79764	1459738	18	True				
ANR	1459858	Identifier	OP_PRUNE_ARG		1459738	0					
ANR	1459859	Label	case OP_SKIP_ARG :	2267:6:79772:79788	1459738	19	True				
ANR	1459860	Identifier	OP_SKIP_ARG		1459738	0					
ANR	1459861	Label	case OP_THEN_ARG :	2268:6:79796:79812	1459738	20	True				
ANR	1459862	Identifier	OP_THEN_ARG		1459738	0					
ANR	1459863	ExpressionStatement	code += code [ 1 ]	2269:6:79820:79835	1459738	21	True				
ANR	1459864	AssignmentExpression	code += code [ 1 ]		1459738	0		+=			
ANR	1459865	Identifier	code		1459738	0					
ANR	1459866	ArrayIndexing	code [ 1 ]		1459738	1					
ANR	1459867	Identifier	code		1459738	0					
ANR	1459868	PrimaryExpression	1		1459738	1					
ANR	1459869	BreakStatement	break ;	2270:6:79843:79848	1459738	22	True				
ANR	1459870	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2275:4:79913:79940	1459738	1	True				
ANR	1459871	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1459738	0		+=			
ANR	1459872	Identifier	code		1459738	0					
ANR	1459873	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1459738	1					
ANR	1459874	CallExpression	PRIV ( OP_lengths )		1459738	0					
ANR	1459875	Callee	PRIV		1459738	0					
ANR	1459876	Identifier	PRIV		1459738	0					
ANR	1459877	ArgumentList	OP_lengths		1459738	1					
ANR	1459878	Argument	OP_lengths		1459738	0					
ANR	1459879	Identifier	OP_lengths		1459738	0					
ANR	1459880	Identifier	c		1459738	1					
ANR	1459881	IfStatement	if ( utf )		1459738	2					
ANR	1459882	Condition	utf	2282:8:80205:80207	1459738	0	True				
ANR	1459883	Identifier	utf		1459738	0					
ANR	1459884	SwitchStatement	switch ( c )		1459738	1					
ANR	1459885	Condition	c	2282:20:80217:80217	1459738	0	True				
ANR	1459886	Identifier	c		1459738	0					
ANR	1459887	CompoundStatement		61:6:1718:1718	1459738	1					
ANR	1459888	Label	case OP_CHAR :	2284:6:80234:80246	1459738	0	True				
ANR	1459889	Identifier	OP_CHAR		1459738	0					
ANR	1459890	Label	case OP_CHARI :	2285:6:80254:80267	1459738	1	True				
ANR	1459891	Identifier	OP_CHARI		1459738	0					
ANR	1459892	Label	case OP_NOT :	2286:6:80275:80286	1459738	2	True				
ANR	1459893	Identifier	OP_NOT		1459738	0					
ANR	1459894	Label	case OP_NOTI :	2287:6:80294:80306	1459738	3	True				
ANR	1459895	Identifier	OP_NOTI		1459738	0					
ANR	1459896	Label	case OP_EXACT :	2288:6:80314:80327	1459738	4	True				
ANR	1459897	Identifier	OP_EXACT		1459738	0					
ANR	1459898	Label	case OP_EXACTI :	2289:6:80335:80349	1459738	5	True				
ANR	1459899	Identifier	OP_EXACTI		1459738	0					
ANR	1459900	Label	case OP_NOTEXACT :	2290:6:80357:80373	1459738	6	True				
ANR	1459901	Identifier	OP_NOTEXACT		1459738	0					
ANR	1459902	Label	case OP_NOTEXACTI :	2291:6:80381:80398	1459738	7	True				
ANR	1459903	Identifier	OP_NOTEXACTI		1459738	0					
ANR	1459904	Label	case OP_UPTO :	2292:6:80406:80418	1459738	8	True				
ANR	1459905	Identifier	OP_UPTO		1459738	0					
ANR	1459906	Label	case OP_UPTOI :	2293:6:80426:80439	1459738	9	True				
ANR	1459907	Identifier	OP_UPTOI		1459738	0					
ANR	1459908	Label	case OP_NOTUPTO :	2294:6:80447:80462	1459738	10	True				
ANR	1459909	Identifier	OP_NOTUPTO		1459738	0					
ANR	1459910	Label	case OP_NOTUPTOI :	2295:6:80470:80486	1459738	11	True				
ANR	1459911	Identifier	OP_NOTUPTOI		1459738	0					
ANR	1459912	Label	case OP_MINUPTO :	2296:6:80494:80509	1459738	12	True				
ANR	1459913	Identifier	OP_MINUPTO		1459738	0					
ANR	1459914	Label	case OP_MINUPTOI :	2297:6:80517:80533	1459738	13	True				
ANR	1459915	Identifier	OP_MINUPTOI		1459738	0					
ANR	1459916	Label	case OP_NOTMINUPTO :	2298:6:80541:80559	1459738	14	True				
ANR	1459917	Identifier	OP_NOTMINUPTO		1459738	0					
ANR	1459918	Label	case OP_NOTMINUPTOI :	2299:6:80567:80586	1459738	15	True				
ANR	1459919	Identifier	OP_NOTMINUPTOI		1459738	0					
ANR	1459920	Label	case OP_POSUPTO :	2300:6:80594:80609	1459738	16	True				
ANR	1459921	Identifier	OP_POSUPTO		1459738	0					
ANR	1459922	Label	case OP_POSUPTOI :	2301:6:80617:80633	1459738	17	True				
ANR	1459923	Identifier	OP_POSUPTOI		1459738	0					
ANR	1459924	Label	case OP_NOTPOSUPTO :	2302:6:80641:80659	1459738	18	True				
ANR	1459925	Identifier	OP_NOTPOSUPTO		1459738	0					
ANR	1459926	Label	case OP_NOTPOSUPTOI :	2303:6:80667:80686	1459738	19	True				
ANR	1459927	Identifier	OP_NOTPOSUPTOI		1459738	0					
ANR	1459928	Label	case OP_STAR :	2304:6:80694:80706	1459738	20	True				
ANR	1459929	Identifier	OP_STAR		1459738	0					
ANR	1459930	Label	case OP_STARI :	2305:6:80714:80727	1459738	21	True				
ANR	1459931	Identifier	OP_STARI		1459738	0					
ANR	1459932	Label	case OP_NOTSTAR :	2306:6:80735:80750	1459738	22	True				
ANR	1459933	Identifier	OP_NOTSTAR		1459738	0					
ANR	1459934	Label	case OP_NOTSTARI :	2307:6:80758:80774	1459738	23	True				
ANR	1459935	Identifier	OP_NOTSTARI		1459738	0					
ANR	1459936	Label	case OP_MINSTAR :	2308:6:80782:80797	1459738	24	True				
ANR	1459937	Identifier	OP_MINSTAR		1459738	0					
ANR	1459938	Label	case OP_MINSTARI :	2309:6:80805:80821	1459738	25	True				
ANR	1459939	Identifier	OP_MINSTARI		1459738	0					
ANR	1459940	Label	case OP_NOTMINSTAR :	2310:6:80829:80847	1459738	26	True				
ANR	1459941	Identifier	OP_NOTMINSTAR		1459738	0					
ANR	1459942	Label	case OP_NOTMINSTARI :	2311:6:80855:80874	1459738	27	True				
ANR	1459943	Identifier	OP_NOTMINSTARI		1459738	0					
ANR	1459944	Label	case OP_POSSTAR :	2312:6:80882:80897	1459738	28	True				
ANR	1459945	Identifier	OP_POSSTAR		1459738	0					
ANR	1459946	Label	case OP_POSSTARI :	2313:6:80905:80921	1459738	29	True				
ANR	1459947	Identifier	OP_POSSTARI		1459738	0					
ANR	1459948	Label	case OP_NOTPOSSTAR :	2314:6:80929:80947	1459738	30	True				
ANR	1459949	Identifier	OP_NOTPOSSTAR		1459738	0					
ANR	1459950	Label	case OP_NOTPOSSTARI :	2315:6:80955:80974	1459738	31	True				
ANR	1459951	Identifier	OP_NOTPOSSTARI		1459738	0					
ANR	1459952	Label	case OP_PLUS :	2316:6:80982:80994	1459738	32	True				
ANR	1459953	Identifier	OP_PLUS		1459738	0					
ANR	1459954	Label	case OP_PLUSI :	2317:6:81002:81015	1459738	33	True				
ANR	1459955	Identifier	OP_PLUSI		1459738	0					
ANR	1459956	Label	case OP_NOTPLUS :	2318:6:81023:81038	1459738	34	True				
ANR	1459957	Identifier	OP_NOTPLUS		1459738	0					
ANR	1459958	Label	case OP_NOTPLUSI :	2319:6:81046:81062	1459738	35	True				
ANR	1459959	Identifier	OP_NOTPLUSI		1459738	0					
ANR	1459960	Label	case OP_MINPLUS :	2320:6:81070:81085	1459738	36	True				
ANR	1459961	Identifier	OP_MINPLUS		1459738	0					
ANR	1459962	Label	case OP_MINPLUSI :	2321:6:81093:81109	1459738	37	True				
ANR	1459963	Identifier	OP_MINPLUSI		1459738	0					
ANR	1459964	Label	case OP_NOTMINPLUS :	2322:6:81117:81135	1459738	38	True				
ANR	1459965	Identifier	OP_NOTMINPLUS		1459738	0					
ANR	1459966	Label	case OP_NOTMINPLUSI :	2323:6:81143:81162	1459738	39	True				
ANR	1459967	Identifier	OP_NOTMINPLUSI		1459738	0					
ANR	1459968	Label	case OP_POSPLUS :	2324:6:81170:81185	1459738	40	True				
ANR	1459969	Identifier	OP_POSPLUS		1459738	0					
ANR	1459970	Label	case OP_POSPLUSI :	2325:6:81193:81209	1459738	41	True				
ANR	1459971	Identifier	OP_POSPLUSI		1459738	0					
ANR	1459972	Label	case OP_NOTPOSPLUS :	2326:6:81217:81235	1459738	42	True				
ANR	1459973	Identifier	OP_NOTPOSPLUS		1459738	0					
ANR	1459974	Label	case OP_NOTPOSPLUSI :	2327:6:81243:81262	1459738	43	True				
ANR	1459975	Identifier	OP_NOTPOSPLUSI		1459738	0					
ANR	1459976	Label	case OP_QUERY :	2328:6:81270:81283	1459738	44	True				
ANR	1459977	Identifier	OP_QUERY		1459738	0					
ANR	1459978	Label	case OP_QUERYI :	2329:6:81291:81305	1459738	45	True				
ANR	1459979	Identifier	OP_QUERYI		1459738	0					
ANR	1459980	Label	case OP_NOTQUERY :	2330:6:81313:81329	1459738	46	True				
ANR	1459981	Identifier	OP_NOTQUERY		1459738	0					
ANR	1459982	Label	case OP_NOTQUERYI :	2331:6:81337:81354	1459738	47	True				
ANR	1459983	Identifier	OP_NOTQUERYI		1459738	0					
ANR	1459984	Label	case OP_MINQUERY :	2332:6:81362:81378	1459738	48	True				
ANR	1459985	Identifier	OP_MINQUERY		1459738	0					
ANR	1459986	Label	case OP_MINQUERYI :	2333:6:81386:81403	1459738	49	True				
ANR	1459987	Identifier	OP_MINQUERYI		1459738	0					
ANR	1459988	Label	case OP_NOTMINQUERY :	2334:6:81411:81430	1459738	50	True				
ANR	1459989	Identifier	OP_NOTMINQUERY		1459738	0					
ANR	1459990	Label	case OP_NOTMINQUERYI :	2335:6:81438:81458	1459738	51	True				
ANR	1459991	Identifier	OP_NOTMINQUERYI		1459738	0					
ANR	1459992	Label	case OP_POSQUERY :	2336:6:81466:81482	1459738	52	True				
ANR	1459993	Identifier	OP_POSQUERY		1459738	0					
ANR	1459994	Label	case OP_POSQUERYI :	2337:6:81490:81507	1459738	53	True				
ANR	1459995	Identifier	OP_POSQUERYI		1459738	0					
ANR	1459996	Label	case OP_NOTPOSQUERY :	2338:6:81515:81534	1459738	54	True				
ANR	1459997	Identifier	OP_NOTPOSQUERY		1459738	0					
ANR	1459998	Label	case OP_NOTPOSQUERYI :	2339:6:81542:81562	1459738	55	True				
ANR	1459999	Identifier	OP_NOTPOSQUERYI		1459738	0					
ANR	1460000	IfStatement	if ( HAS_EXTRALEN ( code [ - 1 ] ) )		1459738	56					
ANR	1460001	Condition	HAS_EXTRALEN ( code [ - 1 ] )	2340:10:81574:81595	1459738	0	True				
ANR	1460002	CallExpression	HAS_EXTRALEN ( code [ - 1 ] )		1459738	0					
ANR	1460003	Callee	HAS_EXTRALEN		1459738	0					
ANR	1460004	Identifier	HAS_EXTRALEN		1459738	0					
ANR	1460005	ArgumentList	code [ - 1 ]		1459738	1					
ANR	1460006	Argument	code [ - 1 ]		1459738	0					
ANR	1460007	ArrayIndexing	code [ - 1 ]		1459738	0					
ANR	1460008	Identifier	code		1459738	0					
ANR	1460009	UnaryOperationExpression	- 1		1459738	1					
ANR	1460010	UnaryOperator	-		1459738	0					
ANR	1460011	PrimaryExpression	1		1459738	1					
ANR	1460012	ExpressionStatement	code += GET_EXTRALEN ( code [ - 1 ] )	2340:34:81598:81628	1459738	1	True				
ANR	1460013	AssignmentExpression	code += GET_EXTRALEN ( code [ - 1 ] )		1459738	0		+=			
ANR	1460014	Identifier	code		1459738	0					
ANR	1460015	CallExpression	GET_EXTRALEN ( code [ - 1 ] )		1459738	1					
ANR	1460016	Callee	GET_EXTRALEN		1459738	0					
ANR	1460017	Identifier	GET_EXTRALEN		1459738	0					
ANR	1460018	ArgumentList	code [ - 1 ]		1459738	1					
ANR	1460019	Argument	code [ - 1 ]		1459738	0					
ANR	1460020	ArrayIndexing	code [ - 1 ]		1459738	0					
ANR	1460021	Identifier	code		1459738	0					
ANR	1460022	UnaryOperationExpression	- 1		1459738	1					
ANR	1460023	UnaryOperator	-		1459738	0					
ANR	1460024	PrimaryExpression	1		1459738	1					
ANR	1460025	BreakStatement	break ;	2341:6:81636:81641	1459738	57	True				
ANR	1460026	ReturnType	static const pcre_uchar *		1459738	1					
ANR	1460027	Identifier	find_recurse		1459738	2					
ANR	1460028	ParameterList	"const pcre_uchar * code , BOOL utf"		1459738	3					
ANR	1460029	Parameter	const pcre_uchar * code	2222:13:78473:78494	1459738	0	True				
ANR	1460030	ParameterType	const pcre_uchar *		1459738	0					
ANR	1460031	Identifier	code		1459738	1					
ANR	1460032	Parameter	BOOL utf	2222:37:78497:78504	1459738	1	True				
ANR	1460033	ParameterType	BOOL		1459738	0					
ANR	1460034	Identifier	utf		1459738	1					
ANR	1460035	CFGEntryNode	ENTRY		1459738		True				
ANR	1460036	CFGExitNode	EXIT		1459738		True				
ANR	1460037	InfiniteForNode	true		1459738		True				
ANR	1460038	Symbol	HAS_EXTRALEN		1459738						
ANR	1460039	Symbol	code		1459738						
ANR	1460040	Symbol	c		1459738						
ANR	1460041	Symbol	NULL		1459738						
ANR	1460042	Symbol	* IMM2_SIZE		1459738						
ANR	1460043	Symbol	utf		1459738						
ANR	1460044	Symbol	IMM2_SIZE		1459738						
ANR	1460045	Symbol	PRIV		1459738						
ANR	1460046	Symbol	* c		1459738						
ANR	1460047	Symbol	OP_NOTPROP		1459738						
ANR	1460048	Symbol	OP_RECURSE		1459738						
ANR	1460049	Symbol	OP_PROP		1459738						
ANR	1460050	Symbol	* PRIV		1459738						
ANR	1460051	Symbol	OP_XCLASS		1459738						
ANR	1460052	Symbol	GET		1459738						
ANR	1460053	Symbol	GET_EXTRALEN		1459738						
ANR	1460054	Symbol	OP_lengths		1459738						
ANR	1460055	Symbol	* code		1459738						
ANR	1460056	Symbol	OP_END		1459738						
ANR	1460057	Function	could_be_empty_branch	2374:0:82742:91667							
ANR	1460058	FunctionDef	"could_be_empty_branch (const pcre_uchar * code , const pcre_uchar * endcode , BOOL utf , compile_data * cd , recurse_check * recurses)"		1460057	0					
ANR	1460059	CompoundStatement		2377:0:82882:91667	1460057	0					
ANR	1460060	Statement	register	2378:0:82884:82891	1460057	0	True				
ANR	1460061	IdentifierDeclStatement	pcre_uchar c ;	2378:9:82893:82905	1460057	1	True				
ANR	1460062	IdentifierDecl	c		1460057	0					
ANR	1460063	IdentifierDeclType	pcre_uchar		1460057	0					
ANR	1460064	Identifier	c		1460057	1					
ANR	1460065	IdentifierDeclStatement	recurse_check this_recurse ;	2379:0:82907:82933	1460057	2	True				
ANR	1460066	IdentifierDecl	this_recurse		1460057	0					
ANR	1460067	IdentifierDeclType	recurse_check		1460057	0					
ANR	1460068	Identifier	this_recurse		1460057	1					
ANR	1460069	ForStatement	"for ( code = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , TRUE ) ; code < endcode ; code = first_significant_code ( code + PRIV ( OP_lengths ) [ c ] , TRUE ) )"		1460057	3					
ANR	1460070	ForInit	"code = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , TRUE ) ;"	2381:5:82941:83008	1460057	0	True				
ANR	1460071	AssignmentExpression	"code = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , TRUE )"		1460057	0		=			
ANR	1460072	Identifier	code		1460057	0					
ANR	1460073	CallExpression	"first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , TRUE )"		1460057	1					
ANR	1460074	Callee	first_significant_code		1460057	0					
ANR	1460075	Identifier	first_significant_code		1460057	0					
ANR	1460076	ArgumentList	code + PRIV ( OP_lengths ) [ * code ]		1460057	1					
ANR	1460077	Argument	code + PRIV ( OP_lengths ) [ * code ]		1460057	0					
ANR	1460078	AdditiveExpression	code + PRIV ( OP_lengths ) [ * code ]		1460057	0		+			
ANR	1460079	Identifier	code		1460057	0					
ANR	1460080	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		1460057	1					
ANR	1460081	CallExpression	PRIV ( OP_lengths )		1460057	0					
ANR	1460082	Callee	PRIV		1460057	0					
ANR	1460083	Identifier	PRIV		1460057	0					
ANR	1460084	ArgumentList	OP_lengths		1460057	1					
ANR	1460085	Argument	OP_lengths		1460057	0					
ANR	1460086	Identifier	OP_lengths		1460057	0					
ANR	1460087	UnaryOperationExpression	* code		1460057	1					
ANR	1460088	UnaryOperator	*		1460057	0					
ANR	1460089	Identifier	code		1460057	1					
ANR	1460090	Argument	TRUE		1460057	1					
ANR	1460091	Identifier	TRUE		1460057	0					
ANR	1460092	Condition	code < endcode	2382:5:83015:83028	1460057	1	True				
ANR	1460093	RelationalExpression	code < endcode		1460057	0		<			
ANR	1460094	Identifier	code		1460057	0					
ANR	1460095	Identifier	endcode		1460057	1					
ANR	1460096	AssignmentExpression	"code = first_significant_code ( code + PRIV ( OP_lengths ) [ c ] , TRUE )"	2383:5:83036:83098	1460057	2	True	=			
ANR	1460097	Identifier	code		1460057	0					
ANR	1460098	CallExpression	"first_significant_code ( code + PRIV ( OP_lengths ) [ c ] , TRUE )"		1460057	1					
ANR	1460099	Callee	first_significant_code		1460057	0					
ANR	1460100	Identifier	first_significant_code		1460057	0					
ANR	1460101	ArgumentList	code + PRIV ( OP_lengths ) [ c ]		1460057	1					
ANR	1460102	Argument	code + PRIV ( OP_lengths ) [ c ]		1460057	0					
ANR	1460103	AdditiveExpression	code + PRIV ( OP_lengths ) [ c ]		1460057	0		+			
ANR	1460104	Identifier	code		1460057	0					
ANR	1460105	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1460057	1					
ANR	1460106	CallExpression	PRIV ( OP_lengths )		1460057	0					
ANR	1460107	Callee	PRIV		1460057	0					
ANR	1460108	Identifier	PRIV		1460057	0					
ANR	1460109	ArgumentList	OP_lengths		1460057	1					
ANR	1460110	Argument	OP_lengths		1460057	0					
ANR	1460111	Identifier	OP_lengths		1460057	0					
ANR	1460112	Identifier	c		1460057	1					
ANR	1460113	Argument	TRUE		1460057	1					
ANR	1460114	Identifier	TRUE		1460057	0					
ANR	1460115	CompoundStatement		9:2:224:247	1460057	3					
ANR	1460116	IdentifierDeclStatement	const pcre_uchar * ccode ;	2385:2:83107:83130	1460057	0	True				
ANR	1460117	IdentifierDecl	* ccode		1460057	0					
ANR	1460118	IdentifierDeclType	const pcre_uchar *		1460057	0					
ANR	1460119	Identifier	ccode		1460057	1					
ANR	1460120	ExpressionStatement	c = * code	2387:2:83135:83144	1460057	1	True				
ANR	1460121	AssignmentExpression	c = * code		1460057	0		=			
ANR	1460122	Identifier	c		1460057	0					
ANR	1460123	UnaryOperationExpression	* code		1460057	1					
ANR	1460124	UnaryOperator	*		1460057	0					
ANR	1460125	Identifier	code		1460057	1					
ANR	1460126	IfStatement	if ( c == OP_ASSERT )		1460057	2					
ANR	1460127	Condition	c == OP_ASSERT	2392:6:83283:83296	1460057	0	True				
ANR	1460128	EqualityExpression	c == OP_ASSERT		1460057	0		==			
ANR	1460129	Identifier	c		1460057	0					
ANR	1460130	Identifier	OP_ASSERT		1460057	1					
ANR	1460131	CompoundStatement		17:4:420:420	1460057	1					
ANR	1460132	DoStatement	do		1460057	0					
ANR	1460133	ExpressionStatement	"code += GET ( code , 1 )"	2394:7:83312:83332	1460057	0	True				
ANR	1460134	AssignmentExpression	"code += GET ( code , 1 )"		1460057	0		+=			
ANR	1460135	Identifier	code		1460057	0					
ANR	1460136	CallExpression	"GET ( code , 1 )"		1460057	1					
ANR	1460137	Callee	GET		1460057	0					
ANR	1460138	Identifier	GET		1460057	0					
ANR	1460139	ArgumentList	code		1460057	1					
ANR	1460140	Argument	code		1460057	0					
ANR	1460141	Identifier	code		1460057	0					
ANR	1460142	Argument	1		1460057	1					
ANR	1460143	PrimaryExpression	1		1460057	0					
ANR	1460144	Condition	* code == OP_ALT	2394:36:83341:83355	1460057	1	True				
ANR	1460145	EqualityExpression	* code == OP_ALT		1460057	0		==			
ANR	1460146	UnaryOperationExpression	* code		1460057	0					
ANR	1460147	UnaryOperator	*		1460057	0					
ANR	1460148	Identifier	code		1460057	1					
ANR	1460149	Identifier	OP_ALT		1460057	1					
ANR	1460150	ExpressionStatement	c = * code	2395:4:83363:83372	1460057	1	True				
ANR	1460151	AssignmentExpression	c = * code		1460057	0		=			
ANR	1460152	Identifier	c		1460057	0					
ANR	1460153	UnaryOperationExpression	* code		1460057	1					
ANR	1460154	UnaryOperator	*		1460057	0					
ANR	1460155	Identifier	code		1460057	1					
ANR	1460156	ContinueStatement	continue ;	2396:4:83378:83386	1460057	2	True				
ANR	1460157	IfStatement	if ( c == OP_RECURSE )		1460057	3					
ANR	1460158	Condition	c == OP_RECURSE	2406:6:83825:83839	1460057	0	True				
ANR	1460159	EqualityExpression	c == OP_RECURSE		1460057	0		==			
ANR	1460160	Identifier	c		1460057	0					
ANR	1460161	Identifier	OP_RECURSE		1460057	1					
ANR	1460162	CompoundStatement		34:4:1070:1087	1460057	1					
ANR	1460163	IdentifierDeclStatement	"const pcre_uchar * scode = cd -> start_code + GET ( code , 1 ) ;"	2408:4:83852:83907	1460057	0	True				
ANR	1460164	IdentifierDecl	"* scode = cd -> start_code + GET ( code , 1 )"		1460057	0					
ANR	1460165	IdentifierDeclType	const pcre_uchar *		1460057	0					
ANR	1460166	Identifier	scode		1460057	1					
ANR	1460167	AssignmentExpression	"* scode = cd -> start_code + GET ( code , 1 )"		1460057	2		=			
ANR	1460168	Identifier	scode		1460057	0					
ANR	1460169	AdditiveExpression	"cd -> start_code + GET ( code , 1 )"		1460057	1		+			
ANR	1460170	PtrMemberAccess	cd -> start_code		1460057	0					
ANR	1460171	Identifier	cd		1460057	0					
ANR	1460172	Identifier	start_code		1460057	1					
ANR	1460173	CallExpression	"GET ( code , 1 )"		1460057	1					
ANR	1460174	Callee	GET		1460057	0					
ANR	1460175	Identifier	GET		1460057	0					
ANR	1460176	ArgumentList	code		1460057	1					
ANR	1460177	Argument	code		1460057	0					
ANR	1460178	Identifier	code		1460057	0					
ANR	1460179	Argument	1		1460057	1					
ANR	1460180	PrimaryExpression	1		1460057	0					
ANR	1460181	IdentifierDeclStatement	const pcre_uchar * endgroup = scode ;	2409:4:83913:83947	1460057	1	True				
ANR	1460182	IdentifierDecl	* endgroup = scode		1460057	0					
ANR	1460183	IdentifierDeclType	const pcre_uchar *		1460057	0					
ANR	1460184	Identifier	endgroup		1460057	1					
ANR	1460185	AssignmentExpression	* endgroup = scode		1460057	2		=			
ANR	1460186	Identifier	scode		1460057	0					
ANR	1460187	Identifier	scode		1460057	1					
ANR	1460188	IdentifierDeclStatement	BOOL empty_branch ;	2410:4:83953:83970	1460057	2	True				
ANR	1460189	IdentifierDecl	empty_branch		1460057	0					
ANR	1460190	IdentifierDeclType	BOOL		1460057	0					
ANR	1460191	Identifier	empty_branch		1460057	1					
ANR	1460192	IfStatement	if ( cd -> start_workspace != NULL )		1460057	3					
ANR	1460193	Condition	cd -> start_workspace != NULL	2416:8:84150:84176	1460057	0	True				
ANR	1460194	EqualityExpression	cd -> start_workspace != NULL		1460057	0		!=			
ANR	1460195	PtrMemberAccess	cd -> start_workspace		1460057	0					
ANR	1460196	Identifier	cd		1460057	0					
ANR	1460197	Identifier	start_workspace		1460057	1					
ANR	1460198	Identifier	NULL		1460057	1					
ANR	1460199	CompoundStatement		42:6:1310:1333	1460057	1					
ANR	1460200	IdentifierDeclStatement	const pcre_uchar * tcode ;	2418:6:84193:84216	1460057	0	True				
ANR	1460201	IdentifierDecl	* tcode		1460057	0					
ANR	1460202	IdentifierDeclType	const pcre_uchar *		1460057	0					
ANR	1460203	Identifier	tcode		1460057	1					
ANR	1460204	ForStatement	for ( tcode = cd -> start_workspace ; tcode < cd -> hwm ; tcode += LINK_SIZE )		1460057	1					
ANR	1460205	ForInit	tcode = cd -> start_workspace ;	2419:11:84229:84256	1460057	0	True				
ANR	1460206	AssignmentExpression	tcode = cd -> start_workspace		1460057	0		=			
ANR	1460207	Identifier	tcode		1460057	0					
ANR	1460208	PtrMemberAccess	cd -> start_workspace		1460057	1					
ANR	1460209	Identifier	cd		1460057	0					
ANR	1460210	Identifier	start_workspace		1460057	1					
ANR	1460211	Condition	tcode < cd -> hwm	2419:40:84258:84272	1460057	1	True				
ANR	1460212	RelationalExpression	tcode < cd -> hwm		1460057	0		<			
ANR	1460213	Identifier	tcode		1460057	0					
ANR	1460214	PtrMemberAccess	cd -> hwm		1460057	1					
ANR	1460215	Identifier	cd		1460057	0					
ANR	1460216	Identifier	hwm		1460057	1					
ANR	1460217	AssignmentExpression	tcode += LINK_SIZE	2419:57:84275:84292	1460057	2	True	+=			
ANR	1460218	Identifier	tcode		1460057	0					
ANR	1460219	Identifier	LINK_SIZE		1460057	1					
ANR	1460220	IfStatement	"if ( ( int ) GET ( tcode , 0 ) == ( int ) ( code + 1 - cd -> start_code ) )"		1460057	3					
ANR	1460221	Condition	"( int ) GET ( tcode , 0 ) == ( int ) ( code + 1 - cd -> start_code )"	2420:12:84307:84360	1460057	0	True				
ANR	1460222	EqualityExpression	"( int ) GET ( tcode , 0 ) == ( int ) ( code + 1 - cd -> start_code )"		1460057	0		==			
ANR	1460223	CastExpression	"( int ) GET ( tcode , 0 )"		1460057	0					
ANR	1460224	CastTarget	int		1460057	0					
ANR	1460225	CallExpression	"GET ( tcode , 0 )"		1460057	1					
ANR	1460226	Callee	GET		1460057	0					
ANR	1460227	Identifier	GET		1460057	0					
ANR	1460228	ArgumentList	tcode		1460057	1					
ANR	1460229	Argument	tcode		1460057	0					
ANR	1460230	Identifier	tcode		1460057	0					
ANR	1460231	Argument	0		1460057	1					
ANR	1460232	PrimaryExpression	0		1460057	0					
ANR	1460233	CastExpression	( int ) ( code + 1 - cd -> start_code )		1460057	1					
ANR	1460234	CastTarget	int		1460057	0					
ANR	1460235	AdditiveExpression	code + 1 - cd -> start_code		1460057	1		+			
ANR	1460236	Identifier	code		1460057	0					
ANR	1460237	AdditiveExpression	1 - cd -> start_code		1460057	1		-			
ANR	1460238	PrimaryExpression	1		1460057	0					
ANR	1460239	PtrMemberAccess	cd -> start_code		1460057	1					
ANR	1460240	Identifier	cd		1460057	0					
ANR	1460241	Identifier	start_code		1460057	1					
ANR	1460242	ReturnStatement	return TRUE ;	2420:68:84363:84374	1460057	1	True				
ANR	1460243	Identifier	TRUE		1460057	0					
ANR	1460244	IfStatement	"if ( GET ( scode , 1 ) == 0 )"		1460057	2					
ANR	1460245	Condition	"GET ( scode , 1 ) == 0"	2421:10:84386:84403	1460057	0	True				
ANR	1460246	EqualityExpression	"GET ( scode , 1 ) == 0"		1460057	0		==			
ANR	1460247	CallExpression	"GET ( scode , 1 )"		1460057	0					
ANR	1460248	Callee	GET		1460057	0					
ANR	1460249	Identifier	GET		1460057	0					
ANR	1460250	ArgumentList	scode		1460057	1					
ANR	1460251	Argument	scode		1460057	0					
ANR	1460252	Identifier	scode		1460057	0					
ANR	1460253	Argument	1		1460057	1					
ANR	1460254	PrimaryExpression	1		1460057	0					
ANR	1460255	PrimaryExpression	0		1460057	1					
ANR	1460256	ReturnStatement	return TRUE ;	2421:30:84406:84417	1460057	1	True				
ANR	1460257	Identifier	TRUE		1460057	0					
ANR	1460258	DoStatement	do		1460057	4					
ANR	1460259	ExpressionStatement	"endgroup += GET ( endgroup , 1 )"	2429:7:84747:84775	1460057	0	True				
ANR	1460260	AssignmentExpression	"endgroup += GET ( endgroup , 1 )"		1460057	0		+=			
ANR	1460261	Identifier	endgroup		1460057	0					
ANR	1460262	CallExpression	"GET ( endgroup , 1 )"		1460057	1					
ANR	1460263	Callee	GET		1460057	0					
ANR	1460264	Identifier	GET		1460057	0					
ANR	1460265	ArgumentList	endgroup		1460057	1					
ANR	1460266	Argument	endgroup		1460057	0					
ANR	1460267	Identifier	endgroup		1460057	0					
ANR	1460268	Argument	1		1460057	1					
ANR	1460269	PrimaryExpression	1		1460057	0					
ANR	1460270	Condition	* endgroup == OP_ALT	2429:44:84784:84802	1460057	1	True				
ANR	1460271	EqualityExpression	* endgroup == OP_ALT		1460057	0		==			
ANR	1460272	UnaryOperationExpression	* endgroup		1460057	0					
ANR	1460273	UnaryOperator	*		1460057	0					
ANR	1460274	Identifier	endgroup		1460057	1					
ANR	1460275	Identifier	OP_ALT		1460057	1					
ANR	1460276	IfStatement	if ( code >= scode && code <= endgroup )		1460057	5					
ANR	1460277	Condition	code >= scode && code <= endgroup	2430:8:84814:84846	1460057	0	True				
ANR	1460278	AndExpression	code >= scode && code <= endgroup		1460057	0		&&			
ANR	1460279	RelationalExpression	code >= scode		1460057	0		>=			
ANR	1460280	Identifier	code		1460057	0					
ANR	1460281	Identifier	scode		1460057	1					
ANR	1460282	RelationalExpression	code <= endgroup		1460057	1		<=			
ANR	1460283	Identifier	code		1460057	0					
ANR	1460284	Identifier	endgroup		1460057	1					
ANR	1460285	ContinueStatement	continue ;	2430:43:84849:84857	1460057	1	True				
ANR	1460286	ElseStatement	else		1460057	0					
ANR	1460287	CompoundStatement		57:6:2023:2050	1460057	0					
ANR	1460288	IdentifierDeclStatement	recurse_check * r = recurses ;	2433:6:84906:84933	1460057	0	True				
ANR	1460289	IdentifierDecl	* r = recurses		1460057	0					
ANR	1460290	IdentifierDeclType	recurse_check *		1460057	0					
ANR	1460291	Identifier	r		1460057	1					
ANR	1460292	AssignmentExpression	* r = recurses		1460057	2		=			
ANR	1460293	Identifier	recurses		1460057	0					
ANR	1460294	Identifier	recurses		1460057	1					
ANR	1460295	ForStatement	for ( r = recurses ; r != NULL ; r = r -> prev )		1460057	1					
ANR	1460296	ForInit	r = recurses ;	2434:11:84946:84958	1460057	0	True				
ANR	1460297	AssignmentExpression	r = recurses		1460057	0		=			
ANR	1460298	Identifier	r		1460057	0					
ANR	1460299	Identifier	recurses		1460057	1					
ANR	1460300	Condition	r != NULL	2434:25:84960:84968	1460057	1	True				
ANR	1460301	EqualityExpression	r != NULL		1460057	0		!=			
ANR	1460302	Identifier	r		1460057	0					
ANR	1460303	Identifier	NULL		1460057	1					
ANR	1460304	AssignmentExpression	r = r -> prev	2434:36:84971:84981	1460057	2	True	=			
ANR	1460305	Identifier	r		1460057	0					
ANR	1460306	PtrMemberAccess	r -> prev		1460057	1					
ANR	1460307	Identifier	r		1460057	0					
ANR	1460308	Identifier	prev		1460057	1					
ANR	1460309	IfStatement	if ( r -> group == scode )		1460057	3					
ANR	1460310	Condition	r -> group == scode	2435:12:84996:85012	1460057	0	True				
ANR	1460311	EqualityExpression	r -> group == scode		1460057	0		==			
ANR	1460312	PtrMemberAccess	r -> group		1460057	0					
ANR	1460313	Identifier	r		1460057	0					
ANR	1460314	Identifier	group		1460057	1					
ANR	1460315	Identifier	scode		1460057	1					
ANR	1460316	BreakStatement	break ;	2435:31:85015:85020	1460057	1	True				
ANR	1460317	IfStatement	if ( r != NULL )		1460057	2					
ANR	1460318	Condition	r != NULL	2436:10:85032:85040	1460057	0	True				
ANR	1460319	EqualityExpression	r != NULL		1460057	0		!=			
ANR	1460320	Identifier	r		1460057	0					
ANR	1460321	Identifier	NULL		1460057	1					
ANR	1460322	ContinueStatement	continue ;	2436:21:85043:85051	1460057	1	True				
ANR	1460323	ExpressionStatement	empty_branch = FALSE	2442:4:85217:85237	1460057	6	True				
ANR	1460324	AssignmentExpression	empty_branch = FALSE		1460057	0		=			
ANR	1460325	Identifier	empty_branch		1460057	0					
ANR	1460326	Identifier	FALSE		1460057	1					
ANR	1460327	ExpressionStatement	this_recurse . prev = recurses	2443:4:85243:85271	1460057	7	True				
ANR	1460328	AssignmentExpression	this_recurse . prev = recurses		1460057	0		=			
ANR	1460329	MemberAccess	this_recurse . prev		1460057	0					
ANR	1460330	Identifier	this_recurse		1460057	0					
ANR	1460331	Identifier	prev		1460057	1					
ANR	1460332	Identifier	recurses		1460057	1					
ANR	1460333	ExpressionStatement	this_recurse . group = scode	2444:4:85277:85303	1460057	8	True				
ANR	1460334	AssignmentExpression	this_recurse . group = scode		1460057	0		=			
ANR	1460335	MemberAccess	this_recurse . group		1460057	0					
ANR	1460336	Identifier	this_recurse		1460057	0					
ANR	1460337	Identifier	group		1460057	1					
ANR	1460338	Identifier	scode		1460057	1					
ANR	1460339	DoStatement	do		1460057	9					
ANR	1460340	CompoundStatement		71:6:2436:2436	1460057	0					
ANR	1460341	IfStatement	"if ( could_be_empty_branch ( scode , endcode , utf , cd , & this_recurse ) )"		1460057	0					
ANR	1460342	Condition	"could_be_empty_branch ( scode , endcode , utf , cd , & this_recurse )"	2448:10:85331:85391	1460057	0	True				
ANR	1460343	CallExpression	"could_be_empty_branch ( scode , endcode , utf , cd , & this_recurse )"		1460057	0					
ANR	1460344	Callee	could_be_empty_branch		1460057	0					
ANR	1460345	Identifier	could_be_empty_branch		1460057	0					
ANR	1460346	ArgumentList	scode		1460057	1					
ANR	1460347	Argument	scode		1460057	0					
ANR	1460348	Identifier	scode		1460057	0					
ANR	1460349	Argument	endcode		1460057	1					
ANR	1460350	Identifier	endcode		1460057	0					
ANR	1460351	Argument	utf		1460057	2					
ANR	1460352	Identifier	utf		1460057	0					
ANR	1460353	Argument	cd		1460057	3					
ANR	1460354	Identifier	cd		1460057	0					
ANR	1460355	Argument	& this_recurse		1460057	4					
ANR	1460356	UnaryOperationExpression	& this_recurse		1460057	0					
ANR	1460357	UnaryOperator	&		1460057	0					
ANR	1460358	Identifier	this_recurse		1460057	1					
ANR	1460359	CompoundStatement		73:8:2519:2519	1460057	1					
ANR	1460360	ExpressionStatement	empty_branch = TRUE	2450:8:85412:85431	1460057	0	True				
ANR	1460361	AssignmentExpression	empty_branch = TRUE		1460057	0		=			
ANR	1460362	Identifier	empty_branch		1460057	0					
ANR	1460363	Identifier	TRUE		1460057	1					
ANR	1460364	BreakStatement	break ;	2451:8:85441:85446	1460057	1	True				
ANR	1460365	ExpressionStatement	"scode += GET ( scode , 1 )"	2453:6:85464:85486	1460057	1	True				
ANR	1460366	AssignmentExpression	"scode += GET ( scode , 1 )"		1460057	0		+=			
ANR	1460367	Identifier	scode		1460057	0					
ANR	1460368	CallExpression	"GET ( scode , 1 )"		1460057	1					
ANR	1460369	Callee	GET		1460057	0					
ANR	1460370	Identifier	GET		1460057	0					
ANR	1460371	ArgumentList	scode		1460057	1					
ANR	1460372	Argument	scode		1460057	0					
ANR	1460373	Identifier	scode		1460057	0					
ANR	1460374	Argument	1		1460057	1					
ANR	1460375	PrimaryExpression	1		1460057	0					
ANR	1460376	Condition	* scode == OP_ALT	2455:11:85507:85522	1460057	1	True				
ANR	1460377	EqualityExpression	* scode == OP_ALT		1460057	0		==			
ANR	1460378	UnaryOperationExpression	* scode		1460057	0					
ANR	1460379	UnaryOperator	*		1460057	0					
ANR	1460380	Identifier	scode		1460057	1					
ANR	1460381	Identifier	OP_ALT		1460057	1					
ANR	1460382	IfStatement	if ( ! empty_branch )		1460057	10					
ANR	1460383	Condition	! empty_branch	2457:8:85535:85547	1460057	0	True				
ANR	1460384	UnaryOperationExpression	! empty_branch		1460057	0					
ANR	1460385	UnaryOperator	!		1460057	0					
ANR	1460386	Identifier	empty_branch		1460057	1					
ANR	1460387	ReturnStatement	return FALSE ;	2457:23:85550:85562	1460057	1	True				
ANR	1460388	Identifier	FALSE		1460057	0					
ANR	1460389	ContinueStatement	continue ;	2458:4:85602:85610	1460057	11	True				
ANR	1460390	IfStatement	if ( c == OP_BRAZERO || c == OP_BRAMINZERO || c == OP_SKIPZERO || c == OP_BRAPOSZERO )		1460057	4					
ANR	1460391	Condition	c == OP_BRAZERO || c == OP_BRAMINZERO || c == OP_SKIPZERO || c == OP_BRAPOSZERO	2463:6:85694:85778	1460057	0	True				
ANR	1460392	OrExpression	c == OP_BRAZERO || c == OP_BRAMINZERO || c == OP_SKIPZERO || c == OP_BRAPOSZERO		1460057	0		||			
ANR	1460393	EqualityExpression	c == OP_BRAZERO		1460057	0		==			
ANR	1460394	Identifier	c		1460057	0					
ANR	1460395	Identifier	OP_BRAZERO		1460057	1					
ANR	1460396	OrExpression	c == OP_BRAMINZERO || c == OP_SKIPZERO || c == OP_BRAPOSZERO		1460057	1		||			
ANR	1460397	EqualityExpression	c == OP_BRAMINZERO		1460057	0		==			
ANR	1460398	Identifier	c		1460057	0					
ANR	1460399	Identifier	OP_BRAMINZERO		1460057	1					
ANR	1460400	OrExpression	c == OP_SKIPZERO || c == OP_BRAPOSZERO		1460057	1		||			
ANR	1460401	EqualityExpression	c == OP_SKIPZERO		1460057	0		==			
ANR	1460402	Identifier	c		1460057	0					
ANR	1460403	Identifier	OP_SKIPZERO		1460057	1					
ANR	1460404	EqualityExpression	c == OP_BRAPOSZERO		1460057	1		==			
ANR	1460405	Identifier	c		1460057	0					
ANR	1460406	Identifier	OP_BRAPOSZERO		1460057	1					
ANR	1460407	CompoundStatement		89:4:2902:2902	1460057	1					
ANR	1460408	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	2466:4:85791:85818	1460057	0	True				
ANR	1460409	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1460057	0		+=			
ANR	1460410	Identifier	code		1460057	0					
ANR	1460411	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1460057	1					
ANR	1460412	CallExpression	PRIV ( OP_lengths )		1460057	0					
ANR	1460413	Callee	PRIV		1460057	0					
ANR	1460414	Identifier	PRIV		1460057	0					
ANR	1460415	ArgumentList	OP_lengths		1460057	1					
ANR	1460416	Argument	OP_lengths		1460057	0					
ANR	1460417	Identifier	OP_lengths		1460057	0					
ANR	1460418	Identifier	c		1460057	1					
ANR	1460419	DoStatement	do		1460057	1					
ANR	1460420	ExpressionStatement	"code += GET ( code , 1 )"	2467:7:85827:85847	1460057	0	True				
ANR	1460421	AssignmentExpression	"code += GET ( code , 1 )"		1460057	0		+=			
ANR	1460422	Identifier	code		1460057	0					
ANR	1460423	CallExpression	"GET ( code , 1 )"		1460057	1					
ANR	1460424	Callee	GET		1460057	0					
ANR	1460425	Identifier	GET		1460057	0					
ANR	1460426	ArgumentList	code		1460057	1					
ANR	1460427	Argument	code		1460057	0					
ANR	1460428	Identifier	code		1460057	0					
ANR	1460429	Argument	1		1460057	1					
ANR	1460430	PrimaryExpression	1		1460057	0					
ANR	1460431	Condition	* code == OP_ALT	2467:36:85856:85870	1460057	1	True				
ANR	1460432	EqualityExpression	* code == OP_ALT		1460057	0		==			
ANR	1460433	UnaryOperationExpression	* code		1460057	0					
ANR	1460434	UnaryOperator	*		1460057	0					
ANR	1460435	Identifier	code		1460057	1					
ANR	1460436	Identifier	OP_ALT		1460057	1					
ANR	1460437	ExpressionStatement	c = * code	2468:4:85878:85887	1460057	2	True				
ANR	1460438	AssignmentExpression	c = * code		1460057	0		=			
ANR	1460439	Identifier	c		1460057	0					
ANR	1460440	UnaryOperationExpression	* code		1460057	1					
ANR	1460441	UnaryOperator	*		1460057	0					
ANR	1460442	Identifier	code		1460057	1					
ANR	1460443	ContinueStatement	continue ;	2469:4:85893:85901	1460057	3	True				
ANR	1460444	IfStatement	if ( c == OP_SBRA || c == OP_SBRAPOS || c == OP_SCBRA || c == OP_SCBRAPOS )		1460057	5					
ANR	1460445	Condition	c == OP_SBRA || c == OP_SBRAPOS || c == OP_SCBRA || c == OP_SCBRAPOS	2475:6:86006:86080	1460057	0	True				
ANR	1460446	OrExpression	c == OP_SBRA || c == OP_SBRAPOS || c == OP_SCBRA || c == OP_SCBRAPOS		1460057	0		||			
ANR	1460447	EqualityExpression	c == OP_SBRA		1460057	0		==			
ANR	1460448	Identifier	c		1460057	0					
ANR	1460449	Identifier	OP_SBRA		1460057	1					
ANR	1460450	OrExpression	c == OP_SBRAPOS || c == OP_SCBRA || c == OP_SCBRAPOS		1460057	1		||			
ANR	1460451	EqualityExpression	c == OP_SBRAPOS		1460057	0		==			
ANR	1460452	Identifier	c		1460057	0					
ANR	1460453	Identifier	OP_SBRAPOS		1460057	1					
ANR	1460454	OrExpression	c == OP_SCBRA || c == OP_SCBRAPOS		1460057	1		||			
ANR	1460455	EqualityExpression	c == OP_SCBRA		1460057	0		==			
ANR	1460456	Identifier	c		1460057	0					
ANR	1460457	Identifier	OP_SCBRA		1460057	1					
ANR	1460458	EqualityExpression	c == OP_SCBRAPOS		1460057	1		==			
ANR	1460459	Identifier	c		1460057	0					
ANR	1460460	Identifier	OP_SCBRAPOS		1460057	1					
ANR	1460461	CompoundStatement		101:4:3204:3204	1460057	1					
ANR	1460462	DoStatement	do		1460057	0					
ANR	1460463	ExpressionStatement	"code += GET ( code , 1 )"	2478:7:86096:86116	1460057	0	True				
ANR	1460464	AssignmentExpression	"code += GET ( code , 1 )"		1460057	0		+=			
ANR	1460465	Identifier	code		1460057	0					
ANR	1460466	CallExpression	"GET ( code , 1 )"		1460057	1					
ANR	1460467	Callee	GET		1460057	0					
ANR	1460468	Identifier	GET		1460057	0					
ANR	1460469	ArgumentList	code		1460057	1					
ANR	1460470	Argument	code		1460057	0					
ANR	1460471	Identifier	code		1460057	0					
ANR	1460472	Argument	1		1460057	1					
ANR	1460473	PrimaryExpression	1		1460057	0					
ANR	1460474	Condition	* code == OP_ALT	2478:36:86125:86139	1460057	1	True				
ANR	1460475	EqualityExpression	* code == OP_ALT		1460057	0		==			
ANR	1460476	UnaryOperationExpression	* code		1460057	0					
ANR	1460477	UnaryOperator	*		1460057	0					
ANR	1460478	Identifier	code		1460057	1					
ANR	1460479	Identifier	OP_ALT		1460057	1					
ANR	1460480	ExpressionStatement	c = * code	2479:4:86147:86156	1460057	1	True				
ANR	1460481	AssignmentExpression	c = * code		1460057	0		=			
ANR	1460482	Identifier	c		1460057	0					
ANR	1460483	UnaryOperationExpression	* code		1460057	1					
ANR	1460484	UnaryOperator	*		1460057	0					
ANR	1460485	Identifier	code		1460057	1					
ANR	1460486	ContinueStatement	continue ;	2480:4:86162:86170	1460057	2	True				
ANR	1460487	IfStatement	if ( c == OP_BRA || c == OP_BRAPOS || c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND )		1460057	6					
ANR	1460488	Condition	c == OP_BRA || c == OP_BRAPOS || c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND	2485:6:86231:86364	1460057	0	True				
ANR	1460489	OrExpression	c == OP_BRA || c == OP_BRAPOS || c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND		1460057	0		||			
ANR	1460490	EqualityExpression	c == OP_BRA		1460057	0		==			
ANR	1460491	Identifier	c		1460057	0					
ANR	1460492	Identifier	OP_BRA		1460057	1					
ANR	1460493	OrExpression	c == OP_BRAPOS || c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND		1460057	1		||			
ANR	1460494	EqualityExpression	c == OP_BRAPOS		1460057	0		==			
ANR	1460495	Identifier	c		1460057	0					
ANR	1460496	Identifier	OP_BRAPOS		1460057	1					
ANR	1460497	OrExpression	c == OP_CBRA || c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND		1460057	1		||			
ANR	1460498	EqualityExpression	c == OP_CBRA		1460057	0		==			
ANR	1460499	Identifier	c		1460057	0					
ANR	1460500	Identifier	OP_CBRA		1460057	1					
ANR	1460501	OrExpression	c == OP_CBRAPOS || c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND		1460057	1		||			
ANR	1460502	EqualityExpression	c == OP_CBRAPOS		1460057	0		==			
ANR	1460503	Identifier	c		1460057	0					
ANR	1460504	Identifier	OP_CBRAPOS		1460057	1					
ANR	1460505	OrExpression	c == OP_ONCE || c == OP_ONCE_NC || c == OP_COND		1460057	1		||			
ANR	1460506	EqualityExpression	c == OP_ONCE		1460057	0		==			
ANR	1460507	Identifier	c		1460057	0					
ANR	1460508	Identifier	OP_ONCE		1460057	1					
ANR	1460509	OrExpression	c == OP_ONCE_NC || c == OP_COND		1460057	1		||			
ANR	1460510	EqualityExpression	c == OP_ONCE_NC		1460057	0		==			
ANR	1460511	Identifier	c		1460057	0					
ANR	1460512	Identifier	OP_ONCE_NC		1460057	1					
ANR	1460513	EqualityExpression	c == OP_COND		1460057	1		==			
ANR	1460514	Identifier	c		1460057	0					
ANR	1460515	Identifier	OP_COND		1460057	1					
ANR	1460516	CompoundStatement		114:4:3494:3511	1460057	1					
ANR	1460517	IdentifierDeclStatement	BOOL empty_branch ;	2490:4:86377:86394	1460057	0	True				
ANR	1460518	IdentifierDecl	empty_branch		1460057	0					
ANR	1460519	IdentifierDeclType	BOOL		1460057	0					
ANR	1460520	Identifier	empty_branch		1460057	1					
ANR	1460521	IfStatement	"if ( GET ( code , 1 ) == 0 )"		1460057	1					
ANR	1460522	Condition	"GET ( code , 1 ) == 0"	2491:8:86404:86420	1460057	0	True				
ANR	1460523	EqualityExpression	"GET ( code , 1 ) == 0"		1460057	0		==			
ANR	1460524	CallExpression	"GET ( code , 1 )"		1460057	0					
ANR	1460525	Callee	GET		1460057	0					
ANR	1460526	Identifier	GET		1460057	0					
ANR	1460527	ArgumentList	code		1460057	1					
ANR	1460528	Argument	code		1460057	0					
ANR	1460529	Identifier	code		1460057	0					
ANR	1460530	Argument	1		1460057	1					
ANR	1460531	PrimaryExpression	1		1460057	0					
ANR	1460532	PrimaryExpression	0		1460057	1					
ANR	1460533	ReturnStatement	return TRUE ;	2491:27:86423:86434	1460057	1	True				
ANR	1460534	Identifier	TRUE		1460057	0					
ANR	1460535	IfStatement	"if ( c == OP_COND && code [ GET ( code , 1 ) ] != OP_ALT )"		1460057	2					
ANR	1460536	Condition	"c == OP_COND && code [ GET ( code , 1 ) ] != OP_ALT"	2497:8:86696:86739	1460057	0	True				
ANR	1460537	AndExpression	"c == OP_COND && code [ GET ( code , 1 ) ] != OP_ALT"		1460057	0		&&			
ANR	1460538	EqualityExpression	c == OP_COND		1460057	0		==			
ANR	1460539	Identifier	c		1460057	0					
ANR	1460540	Identifier	OP_COND		1460057	1					
ANR	1460541	EqualityExpression	"code [ GET ( code , 1 ) ] != OP_ALT"		1460057	1		!=			
ANR	1460542	ArrayIndexing	"code [ GET ( code , 1 ) ]"		1460057	0					
ANR	1460543	Identifier	code		1460057	0					
ANR	1460544	CallExpression	"GET ( code , 1 )"		1460057	1					
ANR	1460545	Callee	GET		1460057	0					
ANR	1460546	Identifier	GET		1460057	0					
ANR	1460547	ArgumentList	code		1460057	1					
ANR	1460548	Argument	code		1460057	0					
ANR	1460549	Identifier	code		1460057	0					
ANR	1460550	Argument	1		1460057	1					
ANR	1460551	PrimaryExpression	1		1460057	0					
ANR	1460552	Identifier	OP_ALT		1460057	1					
ANR	1460553	ExpressionStatement	"code += GET ( code , 1 )"	2498:6:86748:86768	1460057	1	True				
ANR	1460554	AssignmentExpression	"code += GET ( code , 1 )"		1460057	0		+=			
ANR	1460555	Identifier	code		1460057	0					
ANR	1460556	CallExpression	"GET ( code , 1 )"		1460057	1					
ANR	1460557	Callee	GET		1460057	0					
ANR	1460558	Identifier	GET		1460057	0					
ANR	1460559	ArgumentList	code		1460057	1					
ANR	1460560	Argument	code		1460057	0					
ANR	1460561	Identifier	code		1460057	0					
ANR	1460562	Argument	1		1460057	1					
ANR	1460563	PrimaryExpression	1		1460057	0					
ANR	1460564	ElseStatement	else		1460057	0					
ANR	1460565	CompoundStatement		124:6:3902:3902	1460057	0					
ANR	1460566	ExpressionStatement	empty_branch = FALSE	2501:6:86793:86813	1460057	0	True				
ANR	1460567	AssignmentExpression	empty_branch = FALSE		1460057	0		=			
ANR	1460568	Identifier	empty_branch		1460057	0					
ANR	1460569	Identifier	FALSE		1460057	1					
ANR	1460570	DoStatement	do		1460057	1					
ANR	1460571	CompoundStatement		127:8:3949:3949	1460057	0					
ANR	1460572	IfStatement	"if ( ! empty_branch && could_be_empty_branch ( code , endcode , utf , cd , recurses ) )"		1460057	0					
ANR	1460573	Condition	"! empty_branch && could_be_empty_branch ( code , endcode , utf , cd , recurses )"	2504:12:86846:86927	1460057	0	True				
ANR	1460574	AndExpression	"! empty_branch && could_be_empty_branch ( code , endcode , utf , cd , recurses )"		1460057	0		&&			
ANR	1460575	UnaryOperationExpression	! empty_branch		1460057	0					
ANR	1460576	UnaryOperator	!		1460057	0					
ANR	1460577	Identifier	empty_branch		1460057	1					
ANR	1460578	CallExpression	"could_be_empty_branch ( code , endcode , utf , cd , recurses )"		1460057	1					
ANR	1460579	Callee	could_be_empty_branch		1460057	0					
ANR	1460580	Identifier	could_be_empty_branch		1460057	0					
ANR	1460581	ArgumentList	code		1460057	1					
ANR	1460582	Argument	code		1460057	0					
ANR	1460583	Identifier	code		1460057	0					
ANR	1460584	Argument	endcode		1460057	1					
ANR	1460585	Identifier	endcode		1460057	0					
ANR	1460586	Argument	utf		1460057	2					
ANR	1460587	Identifier	utf		1460057	0					
ANR	1460588	Argument	cd		1460057	3					
ANR	1460589	Identifier	cd		1460057	0					
ANR	1460590	Argument	recurses		1460057	4					
ANR	1460591	Identifier	recurses		1460057	0					
ANR	1460592	ExpressionStatement	empty_branch = TRUE	2505:21:86930:86949	1460057	1	True				
ANR	1460593	AssignmentExpression	empty_branch = TRUE		1460057	0		=			
ANR	1460594	Identifier	empty_branch		1460057	0					
ANR	1460595	Identifier	TRUE		1460057	1					
ANR	1460596	ExpressionStatement	"code += GET ( code , 1 )"	2506:8:86959:86979	1460057	1	True				
ANR	1460597	AssignmentExpression	"code += GET ( code , 1 )"		1460057	0		+=			
ANR	1460598	Identifier	code		1460057	0					
ANR	1460599	CallExpression	"GET ( code , 1 )"		1460057	1					
ANR	1460600	Callee	GET		1460057	0					
ANR	1460601	Identifier	GET		1460057	0					
ANR	1460602	ArgumentList	code		1460057	1					
ANR	1460603	Argument	code		1460057	0					
ANR	1460604	Identifier	code		1460057	0					
ANR	1460605	Argument	1		1460057	1					
ANR	1460606	PrimaryExpression	1		1460057	0					
ANR	1460607	Condition	* code == OP_ALT	2508:13:87004:87018	1460057	1	True				
ANR	1460608	EqualityExpression	* code == OP_ALT		1460057	0		==			
ANR	1460609	UnaryOperationExpression	* code		1460057	0					
ANR	1460610	UnaryOperator	*		1460057	0					
ANR	1460611	Identifier	code		1460057	1					
ANR	1460612	Identifier	OP_ALT		1460057	1					
ANR	1460613	IfStatement	if ( ! empty_branch )		1460057	2					
ANR	1460614	Condition	! empty_branch	2509:10:87032:87044	1460057	0	True				
ANR	1460615	UnaryOperationExpression	! empty_branch		1460057	0					
ANR	1460616	UnaryOperator	!		1460057	0					
ANR	1460617	Identifier	empty_branch		1460057	1					
ANR	1460618	ReturnStatement	return FALSE ;	2509:25:87047:87059	1460057	1	True				
ANR	1460619	Identifier	FALSE		1460057	0					
ANR	1460620	ExpressionStatement	c = * code	2512:4:87109:87118	1460057	3	True				
ANR	1460621	AssignmentExpression	c = * code		1460057	0		=			
ANR	1460622	Identifier	c		1460057	0					
ANR	1460623	UnaryOperationExpression	* code		1460057	1					
ANR	1460624	UnaryOperator	*		1460057	0					
ANR	1460625	Identifier	code		1460057	1					
ANR	1460626	ContinueStatement	continue ;	2513:4:87124:87132	1460057	4	True				
ANR	1460627	SwitchStatement	switch ( c )		1460057	7					
ANR	1460628	Condition	c	2518:10:87185:87185	1460057	0	True				
ANR	1460629	Identifier	c		1460057	0					
ANR	1460630	CompoundStatement		143:4:4309:4309	1460057	1					
ANR	1460631	Label	case OP_XCLASS :	2527:4:87561:87575	1460057	0	True				
ANR	1460632	Identifier	OP_XCLASS		1460057	0					
ANR	1460633	ExpressionStatement	"ccode = code += GET ( code , 1 )"	2528:4:87581:87609	1460057	1	True				
ANR	1460634	AssignmentExpression	"ccode = code += GET ( code , 1 )"		1460057	0		=			
ANR	1460635	Identifier	ccode		1460057	0					
ANR	1460636	AssignmentExpression	"code += GET ( code , 1 )"		1460057	1		+=			
ANR	1460637	Identifier	code		1460057	0					
ANR	1460638	CallExpression	"GET ( code , 1 )"		1460057	1					
ANR	1460639	Callee	GET		1460057	0					
ANR	1460640	Identifier	GET		1460057	0					
ANR	1460641	ArgumentList	code		1460057	1					
ANR	1460642	Argument	code		1460057	0					
ANR	1460643	Identifier	code		1460057	0					
ANR	1460644	Argument	1		1460057	1					
ANR	1460645	PrimaryExpression	1		1460057	0					
ANR	1460646	GotoStatement	goto CHECK_CLASS_REPEAT ;	2529:4:87615:87638	1460057	2	True				
ANR	1460647	Identifier	CHECK_CLASS_REPEAT		1460057	0					
ANR	1460648	Label	case OP_CLASS :	2532:4:87652:87665	1460057	3	True				
ANR	1460649	Identifier	OP_CLASS		1460057	0					
ANR	1460650	Label	case OP_NCLASS :	2533:4:87671:87685	1460057	4	True				
ANR	1460651	Identifier	OP_NCLASS		1460057	0					
ANR	1460652	ExpressionStatement	ccode = code + PRIV ( OP_lengths ) [ OP_CLASS ]	2534:4:87691:87732	1460057	5	True				
ANR	1460653	AssignmentExpression	ccode = code + PRIV ( OP_lengths ) [ OP_CLASS ]		1460057	0		=			
ANR	1460654	Identifier	ccode		1460057	0					
ANR	1460655	AdditiveExpression	code + PRIV ( OP_lengths ) [ OP_CLASS ]		1460057	1		+			
ANR	1460656	Identifier	code		1460057	0					
ANR	1460657	ArrayIndexing	PRIV ( OP_lengths ) [ OP_CLASS ]		1460057	1					
ANR	1460658	CallExpression	PRIV ( OP_lengths )		1460057	0					
ANR	1460659	Callee	PRIV		1460057	0					
ANR	1460660	Identifier	PRIV		1460057	0					
ANR	1460661	ArgumentList	OP_lengths		1460057	1					
ANR	1460662	Argument	OP_lengths		1460057	0					
ANR	1460663	Identifier	OP_lengths		1460057	0					
ANR	1460664	Identifier	OP_CLASS		1460057	1					
ANR	1460665	Label	CHECK_CLASS_REPEAT :	2537:4:87789:87807	1460057	6	True				
ANR	1460666	Identifier	CHECK_CLASS_REPEAT		1460057	0					
ANR	1460667	SwitchStatement	switch ( * ccode )		1460057	7					
ANR	1460668	Condition	* ccode	2540:12:87829:87834	1460057	0	True				
ANR	1460669	UnaryOperationExpression	* ccode		1460057	0					
ANR	1460670	UnaryOperator	*		1460057	0					
ANR	1460671	Identifier	ccode		1460057	1					
ANR	1460672	CompoundStatement		165:6:4960:4960	1460057	1					
ANR	1460673	Label	case OP_CRSTAR :	2542:6:87851:87865	1460057	0	True				
ANR	1460674	Identifier	OP_CRSTAR		1460057	0					
ANR	1460675	Label	case OP_CRMINSTAR :	2543:6:87921:87938	1460057	1	True				
ANR	1460676	Identifier	OP_CRMINSTAR		1460057	0					
ANR	1460677	Label	case OP_CRQUERY :	2544:6:87946:87961	1460057	2	True				
ANR	1460678	Identifier	OP_CRQUERY		1460057	0					
ANR	1460679	Label	case OP_CRMINQUERY :	2545:6:87969:87987	1460057	3	True				
ANR	1460680	Identifier	OP_CRMINQUERY		1460057	0					
ANR	1460681	Label	case OP_CRPOSSTAR :	2546:6:87995:88012	1460057	4	True				
ANR	1460682	Identifier	OP_CRPOSSTAR		1460057	0					
ANR	1460683	Label	case OP_CRPOSQUERY :	2547:6:88020:88038	1460057	5	True				
ANR	1460684	Identifier	OP_CRPOSQUERY		1460057	0					
ANR	1460685	BreakStatement	break ;	2548:6:88046:88051	1460057	6	True				
ANR	1460686	Label	default :	2550:6:88060:88067	1460057	7	True				
ANR	1460687	Identifier	default		1460057	0					
ANR	1460688	Label	case OP_CRPLUS :	2551:6:88130:88144	1460057	8	True				
ANR	1460689	Identifier	OP_CRPLUS		1460057	0					
ANR	1460690	Label	case OP_CRMINPLUS :	2552:6:88196:88213	1460057	9	True				
ANR	1460691	Identifier	OP_CRMINPLUS		1460057	0					
ANR	1460692	Label	case OP_CRPOSPLUS :	2553:6:88221:88238	1460057	10	True				
ANR	1460693	Identifier	OP_CRPOSPLUS		1460057	0					
ANR	1460694	ReturnStatement	return FALSE ;	2554:6:88246:88258	1460057	11	True				
ANR	1460695	Identifier	FALSE		1460057	0					
ANR	1460696	Label	case OP_CRRANGE :	2556:6:88267:88282	1460057	12	True				
ANR	1460697	Identifier	OP_CRRANGE		1460057	0					
ANR	1460698	Label	case OP_CRMINRANGE :	2557:6:88290:88308	1460057	13	True				
ANR	1460699	Identifier	OP_CRMINRANGE		1460057	0					
ANR	1460700	Label	case OP_CRPOSRANGE :	2558:6:88316:88334	1460057	14	True				
ANR	1460701	Identifier	OP_CRPOSRANGE		1460057	0					
ANR	1460702	IfStatement	"if ( GET2 ( ccode , 1 ) > 0 )"		1460057	15					
ANR	1460703	Condition	"GET2 ( ccode , 1 ) > 0"	2559:10:88346:88363	1460057	0	True				
ANR	1460704	RelationalExpression	"GET2 ( ccode , 1 ) > 0"		1460057	0		>			
ANR	1460705	CallExpression	"GET2 ( ccode , 1 )"		1460057	0					
ANR	1460706	Callee	GET2		1460057	0					
ANR	1460707	Identifier	GET2		1460057	0					
ANR	1460708	ArgumentList	ccode		1460057	1					
ANR	1460709	Argument	ccode		1460057	0					
ANR	1460710	Identifier	ccode		1460057	0					
ANR	1460711	Argument	1		1460057	1					
ANR	1460712	PrimaryExpression	1		1460057	0					
ANR	1460713	PrimaryExpression	0		1460057	1					
ANR	1460714	ReturnStatement	return FALSE ;	2559:30:88366:88378	1460057	1	True				
ANR	1460715	Identifier	FALSE		1460057	0					
ANR	1460716	BreakStatement	break ;	2560:6:88405:88410	1460057	16	True				
ANR	1460717	BreakStatement	break ;	2562:4:88424:88429	1460057	8	True				
ANR	1460718	Label	case OP_ANY :	2566:4:88483:88494	1460057	9	True				
ANR	1460719	Identifier	OP_ANY		1460057	0					
ANR	1460720	Label	case OP_ALLANY :	2567:4:88500:88514	1460057	10	True				
ANR	1460721	Identifier	OP_ALLANY		1460057	0					
ANR	1460722	Label	case OP_ANYBYTE :	2568:4:88520:88535	1460057	11	True				
ANR	1460723	Identifier	OP_ANYBYTE		1460057	0					
ANR	1460724	Label	case OP_PROP :	2570:4:88542:88554	1460057	12	True				
ANR	1460725	Identifier	OP_PROP		1460057	0					
ANR	1460726	Label	case OP_NOTPROP :	2571:4:88560:88575	1460057	13	True				
ANR	1460727	Identifier	OP_NOTPROP		1460057	0					
ANR	1460728	Label	case OP_ANYNL :	2572:4:88581:88594	1460057	14	True				
ANR	1460729	Identifier	OP_ANYNL		1460057	0					
ANR	1460730	Label	case OP_NOT_HSPACE :	2574:4:88601:88619	1460057	15	True				
ANR	1460731	Identifier	OP_NOT_HSPACE		1460057	0					
ANR	1460732	Label	case OP_HSPACE :	2575:4:88625:88639	1460057	16	True				
ANR	1460733	Identifier	OP_HSPACE		1460057	0					
ANR	1460734	Label	case OP_NOT_VSPACE :	2576:4:88645:88663	1460057	17	True				
ANR	1460735	Identifier	OP_NOT_VSPACE		1460057	0					
ANR	1460736	Label	case OP_VSPACE :	2577:4:88669:88683	1460057	18	True				
ANR	1460737	Identifier	OP_VSPACE		1460057	0					
ANR	1460738	Label	case OP_EXTUNI :	2578:4:88689:88703	1460057	19	True				
ANR	1460739	Identifier	OP_EXTUNI		1460057	0					
ANR	1460740	Label	case OP_NOT_DIGIT :	2580:4:88710:88727	1460057	20	True				
ANR	1460741	Identifier	OP_NOT_DIGIT		1460057	0					
ANR	1460742	Label	case OP_DIGIT :	2581:4:88733:88746	1460057	21	True				
ANR	1460743	Identifier	OP_DIGIT		1460057	0					
ANR	1460744	Label	case OP_NOT_WHITESPACE :	2582:4:88752:88774	1460057	22	True				
ANR	1460745	Identifier	OP_NOT_WHITESPACE		1460057	0					
ANR	1460746	Label	case OP_WHITESPACE :	2583:4:88780:88798	1460057	23	True				
ANR	1460747	Identifier	OP_WHITESPACE		1460057	0					
ANR	1460748	Label	case OP_NOT_WORDCHAR :	2584:4:88804:88824	1460057	24	True				
ANR	1460749	Identifier	OP_NOT_WORDCHAR		1460057	0					
ANR	1460750	Label	case OP_WORDCHAR :	2585:4:88830:88846	1460057	25	True				
ANR	1460751	Identifier	OP_WORDCHAR		1460057	0					
ANR	1460752	Label	case OP_CHAR :	2587:4:88853:88865	1460057	26	True				
ANR	1460753	Identifier	OP_CHAR		1460057	0					
ANR	1460754	Label	case OP_CHARI :	2588:4:88871:88884	1460057	27	True				
ANR	1460755	Identifier	OP_CHARI		1460057	0					
ANR	1460756	Label	case OP_NOT :	2589:4:88890:88901	1460057	28	True				
ANR	1460757	Identifier	OP_NOT		1460057	0					
ANR	1460758	Label	case OP_NOTI :	2590:4:88907:88919	1460057	29	True				
ANR	1460759	Identifier	OP_NOTI		1460057	0					
ANR	1460760	Label	case OP_PLUS :	2592:4:88926:88938	1460057	30	True				
ANR	1460761	Identifier	OP_PLUS		1460057	0					
ANR	1460762	Label	case OP_PLUSI :	2593:4:88944:88957	1460057	31	True				
ANR	1460763	Identifier	OP_PLUSI		1460057	0					
ANR	1460764	Label	case OP_MINPLUS :	2594:4:88963:88978	1460057	32	True				
ANR	1460765	Identifier	OP_MINPLUS		1460057	0					
ANR	1460766	Label	case OP_MINPLUSI :	2595:4:88984:89000	1460057	33	True				
ANR	1460767	Identifier	OP_MINPLUSI		1460057	0					
ANR	1460768	Label	case OP_NOTPLUS :	2597:4:89007:89022	1460057	34	True				
ANR	1460769	Identifier	OP_NOTPLUS		1460057	0					
ANR	1460770	Label	case OP_NOTPLUSI :	2598:4:89028:89044	1460057	35	True				
ANR	1460771	Identifier	OP_NOTPLUSI		1460057	0					
ANR	1460772	Label	case OP_NOTMINPLUS :	2599:4:89050:89068	1460057	36	True				
ANR	1460773	Identifier	OP_NOTMINPLUS		1460057	0					
ANR	1460774	Label	case OP_NOTMINPLUSI :	2600:4:89074:89093	1460057	37	True				
ANR	1460775	Identifier	OP_NOTMINPLUSI		1460057	0					
ANR	1460776	Label	case OP_POSPLUS :	2602:4:89100:89115	1460057	38	True				
ANR	1460777	Identifier	OP_POSPLUS		1460057	0					
ANR	1460778	Label	case OP_POSPLUSI :	2603:4:89121:89137	1460057	39	True				
ANR	1460779	Identifier	OP_POSPLUSI		1460057	0					
ANR	1460780	Label	case OP_NOTPOSPLUS :	2604:4:89143:89161	1460057	40	True				
ANR	1460781	Identifier	OP_NOTPOSPLUS		1460057	0					
ANR	1460782	Label	case OP_NOTPOSPLUSI :	2605:4:89167:89186	1460057	41	True				
ANR	1460783	Identifier	OP_NOTPOSPLUSI		1460057	0					
ANR	1460784	Label	case OP_EXACT :	2607:4:89193:89206	1460057	42	True				
ANR	1460785	Identifier	OP_EXACT		1460057	0					
ANR	1460786	Label	case OP_EXACTI :	2608:4:89212:89226	1460057	43	True				
ANR	1460787	Identifier	OP_EXACTI		1460057	0					
ANR	1460788	Label	case OP_NOTEXACT :	2609:4:89232:89248	1460057	44	True				
ANR	1460789	Identifier	OP_NOTEXACT		1460057	0					
ANR	1460790	Label	case OP_NOTEXACTI :	2610:4:89254:89271	1460057	45	True				
ANR	1460791	Identifier	OP_NOTEXACTI		1460057	0					
ANR	1460792	Label	case OP_TYPEPLUS :	2612:4:89278:89294	1460057	46	True				
ANR	1460793	Identifier	OP_TYPEPLUS		1460057	0					
ANR	1460794	Label	case OP_TYPEMINPLUS :	2613:4:89300:89319	1460057	47	True				
ANR	1460795	Identifier	OP_TYPEMINPLUS		1460057	0					
ANR	1460796	Label	case OP_TYPEPOSPLUS :	2614:4:89325:89344	1460057	48	True				
ANR	1460797	Identifier	OP_TYPEPOSPLUS		1460057	0					
ANR	1460798	Label	case OP_TYPEEXACT :	2615:4:89350:89367	1460057	49	True				
ANR	1460799	Identifier	OP_TYPEEXACT		1460057	0					
ANR	1460800	ReturnStatement	return FALSE ;	2617:4:89374:89386	1460057	50	True				
ANR	1460801	Identifier	FALSE		1460057	0					
ANR	1460802	Label	case OP_TYPESTAR :	2622:4:89516:89532	1460057	51	True				
ANR	1460803	Identifier	OP_TYPESTAR		1460057	0					
ANR	1460804	Label	case OP_TYPEMINSTAR :	2623:4:89538:89557	1460057	52	True				
ANR	1460805	Identifier	OP_TYPEMINSTAR		1460057	0					
ANR	1460806	Label	case OP_TYPEPOSSTAR :	2624:4:89563:89582	1460057	53	True				
ANR	1460807	Identifier	OP_TYPEPOSSTAR		1460057	0					
ANR	1460808	Label	case OP_TYPEQUERY :	2625:4:89588:89605	1460057	54	True				
ANR	1460809	Identifier	OP_TYPEQUERY		1460057	0					
ANR	1460810	Label	case OP_TYPEMINQUERY :	2626:4:89611:89631	1460057	55	True				
ANR	1460811	Identifier	OP_TYPEMINQUERY		1460057	0					
ANR	1460812	Label	case OP_TYPEPOSQUERY :	2627:4:89637:89657	1460057	56	True				
ANR	1460813	Identifier	OP_TYPEPOSQUERY		1460057	0					
ANR	1460814	IfStatement	if ( code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP )		1460057	57					
ANR	1460815	Condition	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP	2628:8:89667:89709	1460057	0	True				
ANR	1460816	OrExpression	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP		1460057	0		||			
ANR	1460817	EqualityExpression	code [ 1 ] == OP_PROP		1460057	0		==			
ANR	1460818	ArrayIndexing	code [ 1 ]		1460057	0					
ANR	1460819	Identifier	code		1460057	0					
ANR	1460820	PrimaryExpression	1		1460057	1					
ANR	1460821	Identifier	OP_PROP		1460057	1					
ANR	1460822	EqualityExpression	code [ 1 ] == OP_NOTPROP		1460057	1		==			
ANR	1460823	ArrayIndexing	code [ 1 ]		1460057	0					
ANR	1460824	Identifier	code		1460057	0					
ANR	1460825	PrimaryExpression	1		1460057	1					
ANR	1460826	Identifier	OP_NOTPROP		1460057	1					
ANR	1460827	ExpressionStatement	code += 2	2628:53:89712:89721	1460057	1	True				
ANR	1460828	AssignmentExpression	code += 2		1460057	0		+=			
ANR	1460829	Identifier	code		1460057	0					
ANR	1460830	PrimaryExpression	2		1460057	1					
ANR	1460831	BreakStatement	break ;	2629:4:89727:89732	1460057	58	True				
ANR	1460832	Label	case OP_TYPEUPTO :	2633:4:89765:89781	1460057	59	True				
ANR	1460833	Identifier	OP_TYPEUPTO		1460057	0					
ANR	1460834	Label	case OP_TYPEMINUPTO :	2634:4:89787:89806	1460057	60	True				
ANR	1460835	Identifier	OP_TYPEMINUPTO		1460057	0					
ANR	1460836	Label	case OP_TYPEPOSUPTO :	2635:4:89812:89831	1460057	61	True				
ANR	1460837	Identifier	OP_TYPEPOSUPTO		1460057	0					
ANR	1460838	IfStatement	if ( code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP )		1460057	62					
ANR	1460839	Condition	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP	2636:8:89841:89907	1460057	0	True				
ANR	1460840	OrExpression	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP		1460057	0		||			
ANR	1460841	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_PROP		1460057	0		==			
ANR	1460842	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1460057	0					
ANR	1460843	Identifier	code		1460057	0					
ANR	1460844	AdditiveExpression	1 + IMM2_SIZE		1460057	1		+			
ANR	1460845	PrimaryExpression	1		1460057	0					
ANR	1460846	Identifier	IMM2_SIZE		1460057	1					
ANR	1460847	Identifier	OP_PROP		1460057	1					
ANR	1460848	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_NOTPROP		1460057	1		==			
ANR	1460849	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1460057	0					
ANR	1460850	Identifier	code		1460057	0					
ANR	1460851	AdditiveExpression	1 + IMM2_SIZE		1460057	1		+			
ANR	1460852	PrimaryExpression	1		1460057	0					
ANR	1460853	Identifier	IMM2_SIZE		1460057	1					
ANR	1460854	Identifier	OP_NOTPROP		1460057	1					
ANR	1460855	ExpressionStatement	code += 2	2637:6:89916:89925	1460057	1	True				
ANR	1460856	AssignmentExpression	code += 2		1460057	0		+=			
ANR	1460857	Identifier	code		1460057	0					
ANR	1460858	PrimaryExpression	2		1460057	1					
ANR	1460859	BreakStatement	break ;	2638:4:89931:89936	1460057	63	True				
ANR	1460860	Label	case OP_KET :	2642:4:89968:89979	1460057	64	True				
ANR	1460861	Identifier	OP_KET		1460057	0					
ANR	1460862	Label	case OP_KETRMAX :	2643:4:89985:90000	1460057	65	True				
ANR	1460863	Identifier	OP_KETRMAX		1460057	0					
ANR	1460864	Label	case OP_KETRMIN :	2644:4:90006:90021	1460057	66	True				
ANR	1460865	Identifier	OP_KETRMIN		1460057	0					
ANR	1460866	Label	case OP_KETRPOS :	2645:4:90027:90042	1460057	67	True				
ANR	1460867	Identifier	OP_KETRPOS		1460057	0					
ANR	1460868	Label	case OP_ALT :	2646:4:90048:90059	1460057	68	True				
ANR	1460869	Identifier	OP_ALT		1460057	0					
ANR	1460870	ReturnStatement	return TRUE ;	2647:4:90065:90076	1460057	69	True				
ANR	1460871	Identifier	TRUE		1460057	0					
ANR	1460872	Label	case OP_STAR :	2654:4:90329:90341	1460057	70	True				
ANR	1460873	Identifier	OP_STAR		1460057	0					
ANR	1460874	Label	case OP_STARI :	2655:4:90347:90360	1460057	71	True				
ANR	1460875	Identifier	OP_STARI		1460057	0					
ANR	1460876	Label	case OP_NOTSTAR :	2656:4:90366:90381	1460057	72	True				
ANR	1460877	Identifier	OP_NOTSTAR		1460057	0					
ANR	1460878	Label	case OP_NOTSTARI :	2657:4:90387:90403	1460057	73	True				
ANR	1460879	Identifier	OP_NOTSTARI		1460057	0					
ANR	1460880	Label	case OP_MINSTAR :	2659:4:90410:90425	1460057	74	True				
ANR	1460881	Identifier	OP_MINSTAR		1460057	0					
ANR	1460882	Label	case OP_MINSTARI :	2660:4:90431:90447	1460057	75	True				
ANR	1460883	Identifier	OP_MINSTARI		1460057	0					
ANR	1460884	Label	case OP_NOTMINSTAR :	2661:4:90453:90471	1460057	76	True				
ANR	1460885	Identifier	OP_NOTMINSTAR		1460057	0					
ANR	1460886	Label	case OP_NOTMINSTARI :	2662:4:90477:90496	1460057	77	True				
ANR	1460887	Identifier	OP_NOTMINSTARI		1460057	0					
ANR	1460888	Label	case OP_POSSTAR :	2664:4:90503:90518	1460057	78	True				
ANR	1460889	Identifier	OP_POSSTAR		1460057	0					
ANR	1460890	Label	case OP_POSSTARI :	2665:4:90524:90540	1460057	79	True				
ANR	1460891	Identifier	OP_POSSTARI		1460057	0					
ANR	1460892	Label	case OP_NOTPOSSTAR :	2666:4:90546:90564	1460057	80	True				
ANR	1460893	Identifier	OP_NOTPOSSTAR		1460057	0					
ANR	1460894	Label	case OP_NOTPOSSTARI :	2667:4:90570:90589	1460057	81	True				
ANR	1460895	Identifier	OP_NOTPOSSTARI		1460057	0					
ANR	1460896	Label	case OP_QUERY :	2669:4:90596:90609	1460057	82	True				
ANR	1460897	Identifier	OP_QUERY		1460057	0					
ANR	1460898	Label	case OP_QUERYI :	2670:4:90615:90629	1460057	83	True				
ANR	1460899	Identifier	OP_QUERYI		1460057	0					
ANR	1460900	Label	case OP_NOTQUERY :	2671:4:90635:90651	1460057	84	True				
ANR	1460901	Identifier	OP_NOTQUERY		1460057	0					
ANR	1460902	Label	case OP_NOTQUERYI :	2672:4:90657:90674	1460057	85	True				
ANR	1460903	Identifier	OP_NOTQUERYI		1460057	0					
ANR	1460904	Label	case OP_MINQUERY :	2674:4:90681:90697	1460057	86	True				
ANR	1460905	Identifier	OP_MINQUERY		1460057	0					
ANR	1460906	Label	case OP_MINQUERYI :	2675:4:90703:90720	1460057	87	True				
ANR	1460907	Identifier	OP_MINQUERYI		1460057	0					
ANR	1460908	Label	case OP_NOTMINQUERY :	2676:4:90726:90745	1460057	88	True				
ANR	1460909	Identifier	OP_NOTMINQUERY		1460057	0					
ANR	1460910	Label	case OP_NOTMINQUERYI :	2677:4:90751:90771	1460057	89	True				
ANR	1460911	Identifier	OP_NOTMINQUERYI		1460057	0					
ANR	1460912	Label	case OP_POSQUERY :	2679:4:90778:90794	1460057	90	True				
ANR	1460913	Identifier	OP_POSQUERY		1460057	0					
ANR	1460914	Label	case OP_POSQUERYI :	2680:4:90800:90817	1460057	91	True				
ANR	1460915	Identifier	OP_POSQUERYI		1460057	0					
ANR	1460916	Label	case OP_NOTPOSQUERY :	2681:4:90823:90842	1460057	92	True				
ANR	1460917	Identifier	OP_NOTPOSQUERY		1460057	0					
ANR	1460918	Label	case OP_NOTPOSQUERYI :	2682:4:90848:90868	1460057	93	True				
ANR	1460919	Identifier	OP_NOTPOSQUERYI		1460057	0					
ANR	1460920	IfStatement	if ( utf && HAS_EXTRALEN ( code [ 1 ] ) )		1460057	94					
ANR	1460921	Condition	utf && HAS_EXTRALEN ( code [ 1 ] )	2684:8:90879:90906	1460057	0	True				
ANR	1460922	AndExpression	utf && HAS_EXTRALEN ( code [ 1 ] )		1460057	0		&&			
ANR	1460923	Identifier	utf		1460057	0					
ANR	1460924	CallExpression	HAS_EXTRALEN ( code [ 1 ] )		1460057	1					
ANR	1460925	Callee	HAS_EXTRALEN		1460057	0					
ANR	1460926	Identifier	HAS_EXTRALEN		1460057	0					
ANR	1460927	ArgumentList	code [ 1 ]		1460057	1					
ANR	1460928	Argument	code [ 1 ]		1460057	0					
ANR	1460929	ArrayIndexing	code [ 1 ]		1460057	0					
ANR	1460930	Identifier	code		1460057	0					
ANR	1460931	PrimaryExpression	1		1460057	1					
ANR	1460932	ExpressionStatement	code += GET_EXTRALEN ( code [ 1 ] )	2684:38:90909:90938	1460057	1	True				
ANR	1460933	AssignmentExpression	code += GET_EXTRALEN ( code [ 1 ] )		1460057	0		+=			
ANR	1460934	Identifier	code		1460057	0					
ANR	1460935	CallExpression	GET_EXTRALEN ( code [ 1 ] )		1460057	1					
ANR	1460936	Callee	GET_EXTRALEN		1460057	0					
ANR	1460937	Identifier	GET_EXTRALEN		1460057	0					
ANR	1460938	ArgumentList	code [ 1 ]		1460057	1					
ANR	1460939	Argument	code [ 1 ]		1460057	0					
ANR	1460940	ArrayIndexing	code [ 1 ]		1460057	0					
ANR	1460941	Identifier	code		1460057	0					
ANR	1460942	PrimaryExpression	1		1460057	1					
ANR	1460943	BreakStatement	break ;	2685:4:90944:90949	1460057	95	True				
ANR	1460944	Label	case OP_UPTO :	2687:4:90956:90968	1460057	96	True				
ANR	1460945	Identifier	OP_UPTO		1460057	0					
ANR	1460946	Label	case OP_UPTOI :	2688:4:90974:90987	1460057	97	True				
ANR	1460947	Identifier	OP_UPTOI		1460057	0					
ANR	1460948	Label	case OP_NOTUPTO :	2689:4:90993:91008	1460057	98	True				
ANR	1460949	Identifier	OP_NOTUPTO		1460057	0					
ANR	1460950	Label	case OP_NOTUPTOI :	2690:4:91014:91030	1460057	99	True				
ANR	1460951	Identifier	OP_NOTUPTOI		1460057	0					
ANR	1460952	Label	case OP_MINUPTO :	2692:4:91037:91052	1460057	100	True				
ANR	1460953	Identifier	OP_MINUPTO		1460057	0					
ANR	1460954	Label	case OP_MINUPTOI :	2693:4:91058:91074	1460057	101	True				
ANR	1460955	Identifier	OP_MINUPTOI		1460057	0					
ANR	1460956	Label	case OP_NOTMINUPTO :	2694:4:91080:91098	1460057	102	True				
ANR	1460957	Identifier	OP_NOTMINUPTO		1460057	0					
ANR	1460958	Label	case OP_NOTMINUPTOI :	2695:4:91104:91123	1460057	103	True				
ANR	1460959	Identifier	OP_NOTMINUPTOI		1460057	0					
ANR	1460960	Label	case OP_POSUPTO :	2697:4:91130:91145	1460057	104	True				
ANR	1460961	Identifier	OP_POSUPTO		1460057	0					
ANR	1460962	Label	case OP_POSUPTOI :	2698:4:91151:91167	1460057	105	True				
ANR	1460963	Identifier	OP_POSUPTOI		1460057	0					
ANR	1460964	Label	case OP_NOTPOSUPTO :	2699:4:91173:91191	1460057	106	True				
ANR	1460965	Identifier	OP_NOTPOSUPTO		1460057	0					
ANR	1460966	Label	case OP_NOTPOSUPTOI :	2700:4:91197:91216	1460057	107	True				
ANR	1460967	Identifier	OP_NOTPOSUPTOI		1460057	0					
ANR	1460968	IfStatement	if ( utf && HAS_EXTRALEN ( code [ 1 + IMM2_SIZE ] ) )		1460057	108					
ANR	1460969	Condition	utf && HAS_EXTRALEN ( code [ 1 + IMM2_SIZE ] )	2702:8:91227:91266	1460057	0	True				
ANR	1460970	AndExpression	utf && HAS_EXTRALEN ( code [ 1 + IMM2_SIZE ] )		1460057	0		&&			
ANR	1460971	Identifier	utf		1460057	0					
ANR	1460972	CallExpression	HAS_EXTRALEN ( code [ 1 + IMM2_SIZE ] )		1460057	1					
ANR	1460973	Callee	HAS_EXTRALEN		1460057	0					
ANR	1460974	Identifier	HAS_EXTRALEN		1460057	0					
ANR	1460975	ArgumentList	code [ 1 + IMM2_SIZE ]		1460057	1					
ANR	1460976	Argument	code [ 1 + IMM2_SIZE ]		1460057	0					
ANR	1460977	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1460057	0					
ANR	1460978	Identifier	code		1460057	0					
ANR	1460979	AdditiveExpression	1 + IMM2_SIZE		1460057	1		+			
ANR	1460980	PrimaryExpression	1		1460057	0					
ANR	1460981	Identifier	IMM2_SIZE		1460057	1					
ANR	1460982	ExpressionStatement	code += GET_EXTRALEN ( code [ 1 + IMM2_SIZE ] )	2702:50:91269:91310	1460057	1	True				
ANR	1460983	AssignmentExpression	code += GET_EXTRALEN ( code [ 1 + IMM2_SIZE ] )		1460057	0		+=			
ANR	1460984	Identifier	code		1460057	0					
ANR	1460985	CallExpression	GET_EXTRALEN ( code [ 1 + IMM2_SIZE ] )		1460057	1					
ANR	1460986	Callee	GET_EXTRALEN		1460057	0					
ANR	1460987	Identifier	GET_EXTRALEN		1460057	0					
ANR	1460988	ArgumentList	code [ 1 + IMM2_SIZE ]		1460057	1					
ANR	1460989	Argument	code [ 1 + IMM2_SIZE ]		1460057	0					
ANR	1460990	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1460057	0					
ANR	1460991	Identifier	code		1460057	0					
ANR	1460992	AdditiveExpression	1 + IMM2_SIZE		1460057	1		+			
ANR	1460993	PrimaryExpression	1		1460057	0					
ANR	1460994	Identifier	IMM2_SIZE		1460057	1					
ANR	1460995	BreakStatement	break ;	2703:4:91316:91321	1460057	109	True				
ANR	1460996	Label	case OP_MARK :	2709:4:91429:91441	1460057	110	True				
ANR	1460997	Identifier	OP_MARK		1460057	0					
ANR	1460998	Label	case OP_PRUNE_ARG :	2710:4:91447:91464	1460057	111	True				
ANR	1460999	Identifier	OP_PRUNE_ARG		1460057	0					
ANR	1461000	Label	case OP_SKIP_ARG :	2711:4:91470:91486	1460057	112	True				
ANR	1461001	Identifier	OP_SKIP_ARG		1460057	0					
ANR	1461002	Label	case OP_THEN_ARG :	2712:4:91492:91508	1460057	113	True				
ANR	1461003	Identifier	OP_THEN_ARG		1460057	0					
ANR	1461004	ExpressionStatement	code += code [ 1 ]	2713:4:91514:91529	1460057	114	True				
ANR	1461005	AssignmentExpression	code += code [ 1 ]		1460057	0		+=			
ANR	1461006	Identifier	code		1460057	0					
ANR	1461007	ArrayIndexing	code [ 1 ]		1460057	1					
ANR	1461008	Identifier	code		1460057	0					
ANR	1461009	PrimaryExpression	1		1460057	1					
ANR	1461010	BreakStatement	break ;	2714:4:91535:91540	1460057	115	True				
ANR	1461011	Label	default :	2718:4:91623:91630	1460057	116	True				
ANR	1461012	Identifier	default		1460057	0					
ANR	1461013	BreakStatement	break ;	2719:4:91636:91641	1460057	117	True				
ANR	1461014	ReturnStatement	return TRUE ;	2723:0:91654:91665	1460057	4	True				
ANR	1461015	Identifier	TRUE		1460057	0					
ANR	1461016	ReturnType	static BOOL		1460057	1					
ANR	1461017	Identifier	could_be_empty_branch		1460057	2					
ANR	1461018	ParameterList	"const pcre_uchar * code , const pcre_uchar * endcode , BOOL utf , compile_data * cd , recurse_check * recurses"		1460057	3					
ANR	1461019	Parameter	const pcre_uchar * code	2375:22:82776:82797	1460057	0	True				
ANR	1461020	ParameterType	const pcre_uchar *		1460057	0					
ANR	1461021	Identifier	code		1460057	1					
ANR	1461022	Parameter	const pcre_uchar * endcode	2375:46:82800:82824	1460057	1	True				
ANR	1461023	ParameterType	const pcre_uchar *		1460057	0					
ANR	1461024	Identifier	endcode		1460057	1					
ANR	1461025	Parameter	BOOL utf	2376:2:82829:82836	1460057	2	True				
ANR	1461026	ParameterType	BOOL		1460057	0					
ANR	1461027	Identifier	utf		1460057	1					
ANR	1461028	Parameter	compile_data * cd	2376:12:82839:82854	1460057	3	True				
ANR	1461029	ParameterType	compile_data *		1460057	0					
ANR	1461030	Identifier	cd		1460057	1					
ANR	1461031	Parameter	recurse_check * recurses	2376:30:82857:82879	1460057	4	True				
ANR	1461032	ParameterType	recurse_check *		1460057	0					
ANR	1461033	Identifier	recurses		1460057	1					
ANR	1461034	CFGEntryNode	ENTRY		1460057		True				
ANR	1461035	CFGExitNode	EXIT		1460057		True				
ANR	1461036	Symbol	* cd		1460057						
ANR	1461037	Symbol	* IMM2_SIZE		1460057						
ANR	1461038	Symbol	OP_CBRA		1460057						
ANR	1461039	Symbol	PRIV		1460057						
ANR	1461040	Symbol	* * code		1460057						
ANR	1461041	Symbol	* scode		1460057						
ANR	1461042	Symbol	cd -> hwm		1460057						
ANR	1461043	Symbol	OP_BRAZERO		1460057						
ANR	1461044	Symbol	GET2		1460057						
ANR	1461045	Symbol	* GET		1460057						
ANR	1461046	Symbol	HAS_EXTRALEN		1460057						
ANR	1461047	Symbol	NULL		1460057						
ANR	1461048	Symbol	recurses		1460057						
ANR	1461049	Symbol	OP_CLASS		1460057						
ANR	1461050	Symbol	utf		1460057						
ANR	1461051	Symbol	TRUE		1460057						
ANR	1461052	Symbol	OP_COND		1460057						
ANR	1461053	Symbol	r -> group		1460057						
ANR	1461054	Symbol	could_be_empty_branch		1460057						
ANR	1461055	Symbol	OP_SBRA		1460057						
ANR	1461056	Symbol	LINK_SIZE		1460057						
ANR	1461057	Symbol	OP_RECURSE		1460057						
ANR	1461058	Symbol	this_recurse . group		1460057						
ANR	1461059	Symbol	GET		1460057						
ANR	1461060	Symbol	OP_lengths		1460057						
ANR	1461061	Symbol	OP_BRAPOSZERO		1460057						
ANR	1461062	Symbol	* code		1460057						
ANR	1461063	Symbol	this_recurse		1460057						
ANR	1461064	Symbol	code		1460057						
ANR	1461065	Symbol	OP_SKIPZERO		1460057						
ANR	1461066	Symbol	OP_ONCE_NC		1460057						
ANR	1461067	Symbol	OP_ALT		1460057						
ANR	1461068	Symbol	* OP_CLASS		1460057						
ANR	1461069	Symbol	cd -> start_code		1460057						
ANR	1461070	Symbol	endgroup		1460057						
ANR	1461071	Symbol	r -> prev		1460057						
ANR	1461072	Symbol	cd -> start_workspace		1460057						
ANR	1461073	Symbol	first_significant_code		1460057						
ANR	1461074	Symbol	OP_CBRAPOS		1460057						
ANR	1461075	Symbol	* ccode		1460057						
ANR	1461076	Symbol	GET_EXTRALEN		1460057						
ANR	1461077	Symbol	OP_SBRAPOS		1460057						
ANR	1461078	Symbol	* endgroup		1460057						
ANR	1461079	Symbol	cd		1460057						
ANR	1461080	Symbol	OP_SCBRAPOS		1460057						
ANR	1461081	Symbol	c		1460057						
ANR	1461082	Symbol	scode		1460057						
ANR	1461083	Symbol	IMM2_SIZE		1460057						
ANR	1461084	Symbol	OP_ASSERT		1460057						
ANR	1461085	Symbol	this_recurse . prev		1460057						
ANR	1461086	Symbol	* c		1460057						
ANR	1461087	Symbol	OP_NOTPROP		1460057						
ANR	1461088	Symbol	OP_BRAPOS		1460057						
ANR	1461089	Symbol	tcode		1460057						
ANR	1461090	Symbol	OP_ONCE		1460057						
ANR	1461091	Symbol	* PRIV		1460057						
ANR	1461092	Symbol	ccode		1460057						
ANR	1461093	Symbol	OP_BRA		1460057						
ANR	1461094	Symbol	OP_PROP		1460057						
ANR	1461095	Symbol	endcode		1460057						
ANR	1461096	Symbol	r		1460057						
ANR	1461097	Symbol	empty_branch		1460057						
ANR	1461098	Symbol	& this_recurse		1460057						
ANR	1461099	Symbol	OP_BRAMINZERO		1460057						
ANR	1461100	Symbol	FALSE		1460057						
ANR	1461101	Symbol	* r		1460057						
ANR	1461102	Symbol	OP_SCBRA		1460057						
ANR	1461103	Function	could_be_empty	2749:0:92556:92882							
ANR	1461104	FunctionDef	"could_be_empty (const pcre_uchar * code , const pcre_uchar * endcode , branch_chain * bcptr , BOOL utf , compile_data * cd)"		1461103	0					
ANR	1461105	CompoundStatement		2752:0:92685:92882	1461103	0					
ANR	1461106	WhileStatement	while ( bcptr != NULL && bcptr -> current_branch >= code )		1461103	0					
ANR	1461107	Condition	bcptr != NULL && bcptr -> current_branch >= code	2753:7:92694:92739	1461103	0	True				
ANR	1461108	AndExpression	bcptr != NULL && bcptr -> current_branch >= code		1461103	0		&&			
ANR	1461109	EqualityExpression	bcptr != NULL		1461103	0		!=			
ANR	1461110	Identifier	bcptr		1461103	0					
ANR	1461111	Identifier	NULL		1461103	1					
ANR	1461112	RelationalExpression	bcptr -> current_branch >= code		1461103	1		>=			
ANR	1461113	PtrMemberAccess	bcptr -> current_branch		1461103	0					
ANR	1461114	Identifier	bcptr		1461103	0					
ANR	1461115	Identifier	current_branch		1461103	1					
ANR	1461116	Identifier	code		1461103	1					
ANR	1461117	CompoundStatement		3:2:58:58	1461103	1					
ANR	1461118	IfStatement	"if ( ! could_be_empty_branch ( bcptr -> current_branch , endcode , utf , cd , NULL ) )"		1461103	0					
ANR	1461119	Condition	"! could_be_empty_branch ( bcptr -> current_branch , endcode , utf , cd , NULL )"	2755:6:92752:92820	1461103	0	True				
ANR	1461120	UnaryOperationExpression	"! could_be_empty_branch ( bcptr -> current_branch , endcode , utf , cd , NULL )"		1461103	0					
ANR	1461121	UnaryOperator	!		1461103	0					
ANR	1461122	CallExpression	"could_be_empty_branch ( bcptr -> current_branch , endcode , utf , cd , NULL )"		1461103	1					
ANR	1461123	Callee	could_be_empty_branch		1461103	0					
ANR	1461124	Identifier	could_be_empty_branch		1461103	0					
ANR	1461125	ArgumentList	bcptr -> current_branch		1461103	1					
ANR	1461126	Argument	bcptr -> current_branch		1461103	0					
ANR	1461127	PtrMemberAccess	bcptr -> current_branch		1461103	0					
ANR	1461128	Identifier	bcptr		1461103	0					
ANR	1461129	Identifier	current_branch		1461103	1					
ANR	1461130	Argument	endcode		1461103	1					
ANR	1461131	Identifier	endcode		1461103	0					
ANR	1461132	Argument	utf		1461103	2					
ANR	1461133	Identifier	utf		1461103	0					
ANR	1461134	Argument	cd		1461103	3					
ANR	1461135	Identifier	cd		1461103	0					
ANR	1461136	Argument	NULL		1461103	4					
ANR	1461137	Identifier	NULL		1461103	0					
ANR	1461138	ReturnStatement	return FALSE ;	2756:4:92827:92839	1461103	1	True				
ANR	1461139	Identifier	FALSE		1461103	0					
ANR	1461140	ExpressionStatement	bcptr = bcptr -> outer	2757:2:92843:92863	1461103	1	True				
ANR	1461141	AssignmentExpression	bcptr = bcptr -> outer		1461103	0		=			
ANR	1461142	Identifier	bcptr		1461103	0					
ANR	1461143	PtrMemberAccess	bcptr -> outer		1461103	1					
ANR	1461144	Identifier	bcptr		1461103	0					
ANR	1461145	Identifier	outer		1461103	1					
ANR	1461146	ReturnStatement	return TRUE ;	2759:0:92869:92880	1461103	1	True				
ANR	1461147	Identifier	TRUE		1461103	0					
ANR	1461148	ReturnType	static BOOL		1461103	1					
ANR	1461149	Identifier	could_be_empty		1461103	2					
ANR	1461150	ParameterList	"const pcre_uchar * code , const pcre_uchar * endcode , branch_chain * bcptr , BOOL utf , compile_data * cd"		1461103	3					
ANR	1461151	Parameter	const pcre_uchar * code	2750:15:92583:92604	1461103	0	True				
ANR	1461152	ParameterType	const pcre_uchar *		1461103	0					
ANR	1461153	Identifier	code		1461103	1					
ANR	1461154	Parameter	const pcre_uchar * endcode	2750:39:92607:92631	1461103	1	True				
ANR	1461155	ParameterType	const pcre_uchar *		1461103	0					
ANR	1461156	Identifier	endcode		1461103	1					
ANR	1461157	Parameter	branch_chain * bcptr	2751:2:92636:92654	1461103	2	True				
ANR	1461158	ParameterType	branch_chain *		1461103	0					
ANR	1461159	Identifier	bcptr		1461103	1					
ANR	1461160	Parameter	BOOL utf	2751:23:92657:92664	1461103	3	True				
ANR	1461161	ParameterType	BOOL		1461103	0					
ANR	1461162	Identifier	utf		1461103	1					
ANR	1461163	Parameter	compile_data * cd	2751:33:92667:92682	1461103	4	True				
ANR	1461164	ParameterType	compile_data *		1461103	0					
ANR	1461165	Identifier	cd		1461103	1					
ANR	1461166	CFGEntryNode	ENTRY		1461103		True				
ANR	1461167	CFGExitNode	EXIT		1461103		True				
ANR	1461168	Symbol	cd		1461103						
ANR	1461169	Symbol	endcode		1461103						
ANR	1461170	Symbol	code		1461103						
ANR	1461171	Symbol	* bcptr		1461103						
ANR	1461172	Symbol	NULL		1461103						
ANR	1461173	Symbol	bcptr -> current_branch		1461103						
ANR	1461174	Symbol	utf		1461103						
ANR	1461175	Symbol	TRUE		1461103						
ANR	1461176	Symbol	FALSE		1461103						
ANR	1461177	Symbol	bcptr -> outer		1461103						
ANR	1461178	Symbol	could_be_empty_branch		1461103						
ANR	1461179	Symbol	bcptr		1461103						
ANR	1461180	Function	get_repeat_base	2775:0:93259:93548							
ANR	1461181	FunctionDef	get_repeat_base (pcre_uchar c)		1461180	0					
ANR	1461182	CompoundStatement		2777:0:93307:93548	1461180	0					
ANR	1461183	ReturnStatement	return ( c > OP_TYPEPOSUPTO ) ? c : ( c >= OP_TYPESTAR ) ? OP_TYPESTAR : ( c >= OP_NOTSTARI ) ? OP_NOTSTARI : ( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR ;	2778:0:93309:93546	1461180	0	True				
ANR	1461184	ConditionalExpression	( c > OP_TYPEPOSUPTO ) ? c : ( c >= OP_TYPESTAR ) ? OP_TYPESTAR : ( c >= OP_NOTSTARI ) ? OP_NOTSTARI : ( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR		1461180	0					
ANR	1461185	Condition	c > OP_TYPEPOSUPTO		1461180	0					
ANR	1461186	RelationalExpression	c > OP_TYPEPOSUPTO		1461180	0		>			
ANR	1461187	Identifier	c		1461180	0					
ANR	1461188	Identifier	OP_TYPEPOSUPTO		1461180	1					
ANR	1461189	Identifier	c		1461180	1					
ANR	1461190	ConditionalExpression	( c >= OP_TYPESTAR ) ? OP_TYPESTAR : ( c >= OP_NOTSTARI ) ? OP_NOTSTARI : ( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR		1461180	2					
ANR	1461191	Condition	c >= OP_TYPESTAR		1461180	0					
ANR	1461192	RelationalExpression	c >= OP_TYPESTAR		1461180	0		>=			
ANR	1461193	Identifier	c		1461180	0					
ANR	1461194	Identifier	OP_TYPESTAR		1461180	1					
ANR	1461195	Identifier	OP_TYPESTAR		1461180	1					
ANR	1461196	ConditionalExpression	( c >= OP_NOTSTARI ) ? OP_NOTSTARI : ( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR		1461180	2					
ANR	1461197	Condition	c >= OP_NOTSTARI		1461180	0					
ANR	1461198	RelationalExpression	c >= OP_NOTSTARI		1461180	0		>=			
ANR	1461199	Identifier	c		1461180	0					
ANR	1461200	Identifier	OP_NOTSTARI		1461180	1					
ANR	1461201	Identifier	OP_NOTSTARI		1461180	1					
ANR	1461202	ConditionalExpression	( c >= OP_NOTSTAR ) ? OP_NOTSTAR : ( c >= OP_STARI ) ? OP_STARI : OP_STAR		1461180	2					
ANR	1461203	Condition	c >= OP_NOTSTAR		1461180	0					
ANR	1461204	RelationalExpression	c >= OP_NOTSTAR		1461180	0		>=			
ANR	1461205	Identifier	c		1461180	0					
ANR	1461206	Identifier	OP_NOTSTAR		1461180	1					
ANR	1461207	Identifier	OP_NOTSTAR		1461180	1					
ANR	1461208	ConditionalExpression	( c >= OP_STARI ) ? OP_STARI : OP_STAR		1461180	2					
ANR	1461209	Condition	c >= OP_STARI		1461180	0					
ANR	1461210	RelationalExpression	c >= OP_STARI		1461180	0		>=			
ANR	1461211	Identifier	c		1461180	0					
ANR	1461212	Identifier	OP_STARI		1461180	1					
ANR	1461213	Identifier	OP_STARI		1461180	1					
ANR	1461214	Identifier	OP_STAR		1461180	2					
ANR	1461215	ReturnType	static pcre_uchar		1461180	1					
ANR	1461216	Identifier	get_repeat_base		1461180	2					
ANR	1461217	ParameterList	pcre_uchar c		1461180	3					
ANR	1461218	Parameter	pcre_uchar c	2776:16:93293:93304	1461180	0	True				
ANR	1461219	ParameterType	pcre_uchar		1461180	0					
ANR	1461220	Identifier	c		1461180	1					
ANR	1461221	CFGEntryNode	ENTRY		1461180		True				
ANR	1461222	CFGExitNode	EXIT		1461180		True				
ANR	1461223	Symbol	OP_NOTSTAR		1461180						
ANR	1461224	Symbol	OP_NOTSTARI		1461180						
ANR	1461225	Symbol	OP_STAR		1461180						
ANR	1461226	Symbol	c		1461180						
ANR	1461227	Symbol	OP_TYPEPOSUPTO		1461180						
ANR	1461228	Symbol	OP_TYPESTAR		1461180						
ANR	1461229	Symbol	OP_STARI		1461180						
ANR	1461230	Function	check_char_prop	2805:0:94059:95597							
ANR	1461231	FunctionDef	"check_char_prop (pcre_uint32 c , unsigned int ptype , unsigned int pdata , BOOL negated)"		1461230	0					
ANR	1461232	CompoundStatement		2808:0:94158:95597	1461230	0					
ANR	1461233	IdentifierDeclStatement	const pcre_uint32 * p ;	2809:0:94160:94180	1461230	0	True				
ANR	1461234	IdentifierDecl	* p		1461230	0					
ANR	1461235	IdentifierDeclType	const pcre_uint32 *		1461230	0					
ANR	1461236	Identifier	p		1461230	1					
ANR	1461237	IdentifierDeclStatement	const ucd_record * prop = GET_UCD ( c ) ;	2810:0:94182:94217	1461230	1	True				
ANR	1461238	IdentifierDecl	* prop = GET_UCD ( c )		1461230	0					
ANR	1461239	IdentifierDeclType	const ucd_record *		1461230	0					
ANR	1461240	Identifier	prop		1461230	1					
ANR	1461241	AssignmentExpression	* prop = GET_UCD ( c )		1461230	2		=			
ANR	1461242	Identifier	prop		1461230	0					
ANR	1461243	CallExpression	GET_UCD ( c )		1461230	1					
ANR	1461244	Callee	GET_UCD		1461230	0					
ANR	1461245	Identifier	GET_UCD		1461230	0					
ANR	1461246	ArgumentList	c		1461230	1					
ANR	1461247	Argument	c		1461230	0					
ANR	1461248	Identifier	c		1461230	0					
ANR	1461249	SwitchStatement	switch ( ptype )		1461230	2					
ANR	1461250	Condition	ptype	2812:7:94227:94231	1461230	0	True				
ANR	1461251	Identifier	ptype		1461230	0					
ANR	1461252	CompoundStatement		6:2:77:77	1461230	1					
ANR	1461253	Label	case PT_LAMP :	2814:2:94240:94252	1461230	0	True				
ANR	1461254	Identifier	PT_LAMP		1461230	0					
ANR	1461255	ReturnStatement	return ( prop -> chartype == ucp_Lu || prop -> chartype == ucp_Ll || prop -> chartype == ucp_Lt ) == negated ;	2815:2:94256:94376	1461230	1	True				
ANR	1461256	EqualityExpression	( prop -> chartype == ucp_Lu || prop -> chartype == ucp_Ll || prop -> chartype == ucp_Lt ) == negated		1461230	0		==			
ANR	1461257	OrExpression	prop -> chartype == ucp_Lu || prop -> chartype == ucp_Ll || prop -> chartype == ucp_Lt		1461230	0		||			
ANR	1461258	EqualityExpression	prop -> chartype == ucp_Lu		1461230	0		==			
ANR	1461259	PtrMemberAccess	prop -> chartype		1461230	0					
ANR	1461260	Identifier	prop		1461230	0					
ANR	1461261	Identifier	chartype		1461230	1					
ANR	1461262	Identifier	ucp_Lu		1461230	1					
ANR	1461263	OrExpression	prop -> chartype == ucp_Ll || prop -> chartype == ucp_Lt		1461230	1		||			
ANR	1461264	EqualityExpression	prop -> chartype == ucp_Ll		1461230	0		==			
ANR	1461265	PtrMemberAccess	prop -> chartype		1461230	0					
ANR	1461266	Identifier	prop		1461230	0					
ANR	1461267	Identifier	chartype		1461230	1					
ANR	1461268	Identifier	ucp_Ll		1461230	1					
ANR	1461269	EqualityExpression	prop -> chartype == ucp_Lt		1461230	1		==			
ANR	1461270	PtrMemberAccess	prop -> chartype		1461230	0					
ANR	1461271	Identifier	prop		1461230	0					
ANR	1461272	Identifier	chartype		1461230	1					
ANR	1461273	Identifier	ucp_Lt		1461230	1					
ANR	1461274	Identifier	negated		1461230	1					
ANR	1461275	Label	case PT_GC :	2819:2:94381:94391	1461230	2	True				
ANR	1461276	Identifier	PT_GC		1461230	0					
ANR	1461277	ReturnStatement	return ( pdata == PRIV ( ucp_gentype ) [ prop -> chartype ] ) == negated ;	2820:2:94395:94457	1461230	3	True				
ANR	1461278	EqualityExpression	( pdata == PRIV ( ucp_gentype ) [ prop -> chartype ] ) == negated		1461230	0		==			
ANR	1461279	EqualityExpression	pdata == PRIV ( ucp_gentype ) [ prop -> chartype ]		1461230	0		==			
ANR	1461280	Identifier	pdata		1461230	0					
ANR	1461281	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		1461230	1					
ANR	1461282	CallExpression	PRIV ( ucp_gentype )		1461230	0					
ANR	1461283	Callee	PRIV		1461230	0					
ANR	1461284	Identifier	PRIV		1461230	0					
ANR	1461285	ArgumentList	ucp_gentype		1461230	1					
ANR	1461286	Argument	ucp_gentype		1461230	0					
ANR	1461287	Identifier	ucp_gentype		1461230	0					
ANR	1461288	PtrMemberAccess	prop -> chartype		1461230	1					
ANR	1461289	Identifier	prop		1461230	0					
ANR	1461290	Identifier	chartype		1461230	1					
ANR	1461291	Identifier	negated		1461230	1					
ANR	1461292	Label	case PT_PC :	2822:2:94462:94472	1461230	4	True				
ANR	1461293	Identifier	PT_PC		1461230	0					
ANR	1461294	ReturnStatement	return ( pdata == prop -> chartype ) == negated ;	2823:2:94476:94519	1461230	5	True				
ANR	1461295	EqualityExpression	( pdata == prop -> chartype ) == negated		1461230	0		==			
ANR	1461296	EqualityExpression	pdata == prop -> chartype		1461230	0		==			
ANR	1461297	Identifier	pdata		1461230	0					
ANR	1461298	PtrMemberAccess	prop -> chartype		1461230	1					
ANR	1461299	Identifier	prop		1461230	0					
ANR	1461300	Identifier	chartype		1461230	1					
ANR	1461301	Identifier	negated		1461230	1					
ANR	1461302	Label	case PT_SC :	2825:2:94524:94534	1461230	6	True				
ANR	1461303	Identifier	PT_SC		1461230	0					
ANR	1461304	ReturnStatement	return ( pdata == prop -> script ) == negated ;	2826:2:94538:94579	1461230	7	True				
ANR	1461305	EqualityExpression	( pdata == prop -> script ) == negated		1461230	0		==			
ANR	1461306	EqualityExpression	pdata == prop -> script		1461230	0		==			
ANR	1461307	Identifier	pdata		1461230	0					
ANR	1461308	PtrMemberAccess	prop -> script		1461230	1					
ANR	1461309	Identifier	prop		1461230	0					
ANR	1461310	Identifier	script		1461230	1					
ANR	1461311	Identifier	negated		1461230	1					
ANR	1461312	Label	case PT_ALNUM :	2830:2:94612:94625	1461230	8	True				
ANR	1461313	Identifier	PT_ALNUM		1461230	0					
ANR	1461314	ReturnStatement	return ( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N ) == negated ;	2831:2:94629:94747	1461230	9	True				
ANR	1461315	EqualityExpression	( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N ) == negated		1461230	0		==			
ANR	1461316	OrExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N		1461230	0		||			
ANR	1461317	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L		1461230	0		==			
ANR	1461318	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		1461230	0					
ANR	1461319	CallExpression	PRIV ( ucp_gentype )		1461230	0					
ANR	1461320	Callee	PRIV		1461230	0					
ANR	1461321	Identifier	PRIV		1461230	0					
ANR	1461322	ArgumentList	ucp_gentype		1461230	1					
ANR	1461323	Argument	ucp_gentype		1461230	0					
ANR	1461324	Identifier	ucp_gentype		1461230	0					
ANR	1461325	PtrMemberAccess	prop -> chartype		1461230	1					
ANR	1461326	Identifier	prop		1461230	0					
ANR	1461327	Identifier	chartype		1461230	1					
ANR	1461328	Identifier	ucp_L		1461230	1					
ANR	1461329	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N		1461230	1		==			
ANR	1461330	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		1461230	0					
ANR	1461331	CallExpression	PRIV ( ucp_gentype )		1461230	0					
ANR	1461332	Callee	PRIV		1461230	0					
ANR	1461333	Identifier	PRIV		1461230	0					
ANR	1461334	ArgumentList	ucp_gentype		1461230	1					
ANR	1461335	Argument	ucp_gentype		1461230	0					
ANR	1461336	Identifier	ucp_gentype		1461230	0					
ANR	1461337	PtrMemberAccess	prop -> chartype		1461230	1					
ANR	1461338	Identifier	prop		1461230	0					
ANR	1461339	Identifier	chartype		1461230	1					
ANR	1461340	Identifier	ucp_N		1461230	1					
ANR	1461341	Identifier	negated		1461230	1					
ANR	1461342	Label	case PT_SPACE :	2838:2:94928:94941	1461230	10	True				
ANR	1461343	Identifier	PT_SPACE		1461230	0					
ANR	1461344	Label	case PT_PXSPACE :	2839:2:94965:94980	1461230	11	True				
ANR	1461345	Identifier	PT_PXSPACE		1461230	0					
ANR	1461346	SwitchStatement	switch ( c )		1461230	12					
ANR	1461347	Condition	c	2840:9:95010:95010	1461230	0	True				
ANR	1461348	Identifier	c		1461230	0					
ANR	1461349	CompoundStatement		34:4:858:858	1461230	1					
ANR	1461350	Label	HSPACE_CASES :	2842:4:95023:95035	1461230	0	True				
ANR	1461351	Identifier	HSPACE_CASES		1461230	0					
ANR	1461352	Label	VSPACE_CASES :	2843:4:95041:95053	1461230	1	True				
ANR	1461353	Identifier	VSPACE_CASES		1461230	0					
ANR	1461354	ReturnStatement	return negated ;	2844:4:95059:95073	1461230	2	True				
ANR	1461355	Identifier	negated		1461230	0					
ANR	1461356	Label	default :	2846:4:95080:95087	1461230	3	True				
ANR	1461357	Identifier	default		1461230	0					
ANR	1461358	ReturnStatement	return ( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_Z ) == negated ;	2847:4:95093:95155	1461230	4	True				
ANR	1461359	EqualityExpression	( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_Z ) == negated		1461230	0		==			
ANR	1461360	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_Z		1461230	0		==			
ANR	1461361	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		1461230	0					
ANR	1461362	CallExpression	PRIV ( ucp_gentype )		1461230	0					
ANR	1461363	Callee	PRIV		1461230	0					
ANR	1461364	Identifier	PRIV		1461230	0					
ANR	1461365	ArgumentList	ucp_gentype		1461230	1					
ANR	1461366	Argument	ucp_gentype		1461230	0					
ANR	1461367	Identifier	ucp_gentype		1461230	0					
ANR	1461368	PtrMemberAccess	prop -> chartype		1461230	1					
ANR	1461369	Identifier	prop		1461230	0					
ANR	1461370	Identifier	chartype		1461230	1					
ANR	1461371	Identifier	ucp_Z		1461230	1					
ANR	1461372	Identifier	negated		1461230	1					
ANR	1461373	BreakStatement	break ;	2849:2:95165:95170	1461230	13	True				
ANR	1461374	Label	case PT_WORD :	2851:2:95209:95221	1461230	14	True				
ANR	1461375	Identifier	PT_WORD		1461230	0					
ANR	1461376	ReturnStatement	return ( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N || c == CHAR_UNDERSCORE ) == negated ;	2852:2:95225:95377	1461230	15	True				
ANR	1461377	EqualityExpression	( PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N || c == CHAR_UNDERSCORE ) == negated		1461230	0		==			
ANR	1461378	OrExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L || PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N || c == CHAR_UNDERSCORE		1461230	0		||			
ANR	1461379	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_L		1461230	0		==			
ANR	1461380	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		1461230	0					
ANR	1461381	CallExpression	PRIV ( ucp_gentype )		1461230	0					
ANR	1461382	Callee	PRIV		1461230	0					
ANR	1461383	Identifier	PRIV		1461230	0					
ANR	1461384	ArgumentList	ucp_gentype		1461230	1					
ANR	1461385	Argument	ucp_gentype		1461230	0					
ANR	1461386	Identifier	ucp_gentype		1461230	0					
ANR	1461387	PtrMemberAccess	prop -> chartype		1461230	1					
ANR	1461388	Identifier	prop		1461230	0					
ANR	1461389	Identifier	chartype		1461230	1					
ANR	1461390	Identifier	ucp_L		1461230	1					
ANR	1461391	OrExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N || c == CHAR_UNDERSCORE		1461230	1		||			
ANR	1461392	EqualityExpression	PRIV ( ucp_gentype ) [ prop -> chartype ] == ucp_N		1461230	0		==			
ANR	1461393	ArrayIndexing	PRIV ( ucp_gentype ) [ prop -> chartype ]		1461230	0					
ANR	1461394	CallExpression	PRIV ( ucp_gentype )		1461230	0					
ANR	1461395	Callee	PRIV		1461230	0					
ANR	1461396	Identifier	PRIV		1461230	0					
ANR	1461397	ArgumentList	ucp_gentype		1461230	1					
ANR	1461398	Argument	ucp_gentype		1461230	0					
ANR	1461399	Identifier	ucp_gentype		1461230	0					
ANR	1461400	PtrMemberAccess	prop -> chartype		1461230	1					
ANR	1461401	Identifier	prop		1461230	0					
ANR	1461402	Identifier	chartype		1461230	1					
ANR	1461403	Identifier	ucp_N		1461230	1					
ANR	1461404	EqualityExpression	c == CHAR_UNDERSCORE		1461230	1		==			
ANR	1461405	Identifier	c		1461230	0					
ANR	1461406	Identifier	CHAR_UNDERSCORE		1461230	1					
ANR	1461407	Identifier	negated		1461230	1					
ANR	1461408	Label	case PT_CLIST :	2856:2:95382:95395	1461230	16	True				
ANR	1461409	Identifier	PT_CLIST		1461230	0					
ANR	1461410	ExpressionStatement	p = PRIV ( ucd_caseless_sets ) + prop -> caseset	2857:2:95399:95442	1461230	17	True				
ANR	1461411	AssignmentExpression	p = PRIV ( ucd_caseless_sets ) + prop -> caseset		1461230	0		=			
ANR	1461412	Identifier	p		1461230	0					
ANR	1461413	AdditiveExpression	PRIV ( ucd_caseless_sets ) + prop -> caseset		1461230	1		+			
ANR	1461414	CallExpression	PRIV ( ucd_caseless_sets )		1461230	0					
ANR	1461415	Callee	PRIV		1461230	0					
ANR	1461416	Identifier	PRIV		1461230	0					
ANR	1461417	ArgumentList	ucd_caseless_sets		1461230	1					
ANR	1461418	Argument	ucd_caseless_sets		1461230	0					
ANR	1461419	Identifier	ucd_caseless_sets		1461230	0					
ANR	1461420	PtrMemberAccess	prop -> caseset		1461230	1					
ANR	1461421	Identifier	prop		1461230	0					
ANR	1461422	Identifier	caseset		1461230	1					
ANR	1461423	ForStatement	for ( ; ; )		1461230	18					
ANR	1461424	CompoundStatement		52:4:1300:1300	1461230	0					
ANR	1461425	IfStatement	if ( c < * p )		1461230	0					
ANR	1461426	Condition	c < * p	2860:8:95469:95474	1461230	0	True				
ANR	1461427	RelationalExpression	c < * p		1461230	0		<			
ANR	1461428	Identifier	c		1461230	0					
ANR	1461429	UnaryOperationExpression	* p		1461230	1					
ANR	1461430	UnaryOperator	*		1461230	0					
ANR	1461431	Identifier	p		1461230	1					
ANR	1461432	ReturnStatement	return ! negated ;	2860:16:95477:95492	1461230	1	True				
ANR	1461433	UnaryOperationExpression	! negated		1461230	0					
ANR	1461434	UnaryOperator	!		1461230	0					
ANR	1461435	Identifier	negated		1461230	1					
ANR	1461436	IfStatement	if ( c == * p ++ )		1461230	1					
ANR	1461437	Condition	c == * p ++	2861:8:95502:95510	1461230	0	True				
ANR	1461438	EqualityExpression	c == * p ++		1461230	0		==			
ANR	1461439	Identifier	c		1461230	0					
ANR	1461440	UnaryOperationExpression	* p ++		1461230	1					
ANR	1461441	UnaryOperator	*		1461230	0					
ANR	1461442	PostIncDecOperationExpression	p ++		1461230	1					
ANR	1461443	Identifier	p		1461230	0					
ANR	1461444	IncDec	++		1461230	1					
ANR	1461445	ReturnStatement	return negated ;	2861:19:95513:95527	1461230	1	True				
ANR	1461446	Identifier	negated		1461230	0					
ANR	1461447	BreakStatement	break ;	2863:2:95537:95542	1461230	19	True				
ANR	1461448	ReturnStatement	return FALSE ;	2866:0:95583:95595	1461230	3	True				
ANR	1461449	Identifier	FALSE		1461230	0					
ANR	1461450	ReturnType	static BOOL		1461230	1					
ANR	1461451	Identifier	check_char_prop		1461230	2					
ANR	1461452	ParameterList	"pcre_uint32 c , unsigned int ptype , unsigned int pdata , BOOL negated"		1461230	3					
ANR	1461453	Parameter	pcre_uint32 c	2806:16:94087:94099	1461230	0	True				
ANR	1461454	ParameterType	pcre_uint32		1461230	0					
ANR	1461455	Identifier	c		1461230	1					
ANR	1461456	Parameter	unsigned int ptype	2806:31:94102:94119	1461230	1	True				
ANR	1461457	ParameterType	unsigned int		1461230	0					
ANR	1461458	Identifier	ptype		1461230	1					
ANR	1461459	Parameter	unsigned int pdata	2806:51:94122:94139	1461230	2	True				
ANR	1461460	ParameterType	unsigned int		1461230	0					
ANR	1461461	Identifier	pdata		1461230	1					
ANR	1461462	Parameter	BOOL negated	2807:2:94144:94155	1461230	3	True				
ANR	1461463	ParameterType	BOOL		1461230	0					
ANR	1461464	Identifier	negated		1461230	1					
ANR	1461465	CFGEntryNode	ENTRY		1461230		True				
ANR	1461466	CFGExitNode	EXIT		1461230		True				
ANR	1461467	InfiniteForNode	true		1461230		True				
ANR	1461468	Symbol	prop -> chartype		1461230						
ANR	1461469	Symbol	ucp_gentype		1461230						
ANR	1461470	Symbol	negated		1461230						
ANR	1461471	Symbol	pdata		1461230						
ANR	1461472	Symbol	GET_UCD		1461230						
ANR	1461473	Symbol	ptype		1461230						
ANR	1461474	Symbol	PRIV		1461230						
ANR	1461475	Symbol	ucd_caseless_sets		1461230						
ANR	1461476	Symbol	ucp_Ll		1461230						
ANR	1461477	Symbol	CHAR_UNDERSCORE		1461230						
ANR	1461478	Symbol	* * prop		1461230						
ANR	1461479	Symbol	* prop -> chartype		1461230						
ANR	1461480	Symbol	prop		1461230						
ANR	1461481	Symbol	ucp_Z		1461230						
ANR	1461482	Symbol	c		1461230						
ANR	1461483	Symbol	* p ++		1461230						
ANR	1461484	Symbol	ucp_Lu		1461230						
ANR	1461485	Symbol	ucp_Lt		1461230						
ANR	1461486	Symbol	ucp_N		1461230						
ANR	1461487	Symbol	p		1461230						
ANR	1461488	Symbol	ucp_L		1461230						
ANR	1461489	Symbol	* PRIV		1461230						
ANR	1461490	Symbol	prop -> caseset		1461230						
ANR	1461491	Symbol	* prop		1461230						
ANR	1461492	Symbol	* p		1461230						
ANR	1461493	Symbol	FALSE		1461230						
ANR	1461494	Symbol	prop -> script		1461230						
ANR	1461495	Function	get_chr_property_list	2893:0:96439:100026							
ANR	1461496	FunctionDef	"get_chr_property_list (const pcre_uchar * code , BOOL utf , const pcre_uint8 * fcc , pcre_uint32 * list)"		1461495	0					
ANR	1461497	CompoundStatement		2896:0:96565:100026	1461495	0					
ANR	1461498	IdentifierDeclStatement	pcre_uchar c = * code ;	2897:0:96567:96587	1461495	0	True				
ANR	1461499	IdentifierDecl	c = * code		1461495	0					
ANR	1461500	IdentifierDeclType	pcre_uchar		1461495	0					
ANR	1461501	Identifier	c		1461495	1					
ANR	1461502	AssignmentExpression	c = * code		1461495	2		=			
ANR	1461503	Identifier	c		1461495	0					
ANR	1461504	UnaryOperationExpression	* code		1461495	1					
ANR	1461505	UnaryOperator	*		1461495	0					
ANR	1461506	Identifier	code		1461495	1					
ANR	1461507	IdentifierDeclStatement	pcre_uchar base ;	2898:0:96589:96604	1461495	1	True				
ANR	1461508	IdentifierDecl	base		1461495	0					
ANR	1461509	IdentifierDeclType	pcre_uchar		1461495	0					
ANR	1461510	Identifier	base		1461495	1					
ANR	1461511	IdentifierDeclStatement	const pcre_uchar * end ;	2899:0:96606:96627	1461495	2	True				
ANR	1461512	IdentifierDecl	* end		1461495	0					
ANR	1461513	IdentifierDeclType	const pcre_uchar *		1461495	0					
ANR	1461514	Identifier	end		1461495	1					
ANR	1461515	IdentifierDeclStatement	pcre_uint32 chr ;	2900:0:96629:96644	1461495	3	True				
ANR	1461516	IdentifierDecl	chr		1461495	0					
ANR	1461517	IdentifierDeclType	pcre_uint32		1461495	0					
ANR	1461518	Identifier	chr		1461495	1					
ANR	1461519	IdentifierDeclStatement	pcre_uint32 * clist_dest ;	2903:0:96666:96689	1461495	4	True				
ANR	1461520	IdentifierDecl	* clist_dest		1461495	0					
ANR	1461521	IdentifierDeclType	pcre_uint32 *		1461495	0					
ANR	1461522	Identifier	clist_dest		1461495	1					
ANR	1461523	IdentifierDeclStatement	const pcre_uint32 * clist_src ;	2904:0:96691:96719	1461495	5	True				
ANR	1461524	IdentifierDecl	* clist_src		1461495	0					
ANR	1461525	IdentifierDeclType	const pcre_uint32 *		1461495	0					
ANR	1461526	Identifier	clist_src		1461495	1					
ANR	1461527	ExpressionStatement	list [ 0 ] = c	2909:0:96798:96809	1461495	6	True				
ANR	1461528	AssignmentExpression	list [ 0 ] = c		1461495	0		=			
ANR	1461529	ArrayIndexing	list [ 0 ]		1461495	0					
ANR	1461530	Identifier	list		1461495	0					
ANR	1461531	PrimaryExpression	0		1461495	1					
ANR	1461532	Identifier	c		1461495	1					
ANR	1461533	ExpressionStatement	list [ 1 ] = FALSE	2910:0:96811:96826	1461495	7	True				
ANR	1461534	AssignmentExpression	list [ 1 ] = FALSE		1461495	0		=			
ANR	1461535	ArrayIndexing	list [ 1 ]		1461495	0					
ANR	1461536	Identifier	list		1461495	0					
ANR	1461537	PrimaryExpression	1		1461495	1					
ANR	1461538	Identifier	FALSE		1461495	1					
ANR	1461539	ExpressionStatement	code ++	2911:0:96828:96834	1461495	8	True				
ANR	1461540	PostIncDecOperationExpression	code ++		1461495	0					
ANR	1461541	Identifier	code		1461495	0					
ANR	1461542	IncDec	++		1461495	1					
ANR	1461543	IfStatement	if ( c >= OP_STAR && c <= OP_TYPEPOSUPTO )		1461495	9					
ANR	1461544	Condition	c >= OP_STAR && c <= OP_TYPEPOSUPTO	2913:4:96841:96875	1461495	0	True				
ANR	1461545	AndExpression	c >= OP_STAR && c <= OP_TYPEPOSUPTO		1461495	0		&&			
ANR	1461546	RelationalExpression	c >= OP_STAR		1461495	0		>=			
ANR	1461547	Identifier	c		1461495	0					
ANR	1461548	Identifier	OP_STAR		1461495	1					
ANR	1461549	RelationalExpression	c <= OP_TYPEPOSUPTO		1461495	1		<=			
ANR	1461550	Identifier	c		1461495	0					
ANR	1461551	Identifier	OP_TYPEPOSUPTO		1461495	1					
ANR	1461552	CompoundStatement		19:2:314:314	1461495	1					
ANR	1461553	ExpressionStatement	base = get_repeat_base ( c )	2915:2:96884:96909	1461495	0	True				
ANR	1461554	AssignmentExpression	base = get_repeat_base ( c )		1461495	0		=			
ANR	1461555	Identifier	base		1461495	0					
ANR	1461556	CallExpression	get_repeat_base ( c )		1461495	1					
ANR	1461557	Callee	get_repeat_base		1461495	0					
ANR	1461558	Identifier	get_repeat_base		1461495	0					
ANR	1461559	ArgumentList	c		1461495	1					
ANR	1461560	Argument	c		1461495	0					
ANR	1461561	Identifier	c		1461495	0					
ANR	1461562	ExpressionStatement	c -= ( base - OP_STAR )	2916:2:96913:96934	1461495	1	True				
ANR	1461563	AssignmentExpression	c -= ( base - OP_STAR )		1461495	0		-=			
ANR	1461564	Identifier	c		1461495	0					
ANR	1461565	AdditiveExpression	base - OP_STAR		1461495	1		-			
ANR	1461566	Identifier	base		1461495	0					
ANR	1461567	Identifier	OP_STAR		1461495	1					
ANR	1461568	IfStatement	if ( c == OP_UPTO || c == OP_MINUPTO || c == OP_EXACT || c == OP_POSUPTO )		1461495	2					
ANR	1461569	Condition	c == OP_UPTO || c == OP_MINUPTO || c == OP_EXACT || c == OP_POSUPTO	2918:6:96943:97009	1461495	0	True				
ANR	1461570	OrExpression	c == OP_UPTO || c == OP_MINUPTO || c == OP_EXACT || c == OP_POSUPTO		1461495	0		||			
ANR	1461571	EqualityExpression	c == OP_UPTO		1461495	0		==			
ANR	1461572	Identifier	c		1461495	0					
ANR	1461573	Identifier	OP_UPTO		1461495	1					
ANR	1461574	OrExpression	c == OP_MINUPTO || c == OP_EXACT || c == OP_POSUPTO		1461495	1		||			
ANR	1461575	EqualityExpression	c == OP_MINUPTO		1461495	0		==			
ANR	1461576	Identifier	c		1461495	0					
ANR	1461577	Identifier	OP_MINUPTO		1461495	1					
ANR	1461578	OrExpression	c == OP_EXACT || c == OP_POSUPTO		1461495	1		||			
ANR	1461579	EqualityExpression	c == OP_EXACT		1461495	0		==			
ANR	1461580	Identifier	c		1461495	0					
ANR	1461581	Identifier	OP_EXACT		1461495	1					
ANR	1461582	EqualityExpression	c == OP_POSUPTO		1461495	1		==			
ANR	1461583	Identifier	c		1461495	0					
ANR	1461584	Identifier	OP_POSUPTO		1461495	1					
ANR	1461585	ExpressionStatement	code += IMM2_SIZE	2919:4:97016:97033	1461495	1	True				
ANR	1461586	AssignmentExpression	code += IMM2_SIZE		1461495	0		+=			
ANR	1461587	Identifier	code		1461495	0					
ANR	1461588	Identifier	IMM2_SIZE		1461495	1					
ANR	1461589	ExpressionStatement	list [ 1 ] = ( c != OP_PLUS && c != OP_MINPLUS && c != OP_EXACT && c != OP_POSPLUS )	2921:2:97038:97117	1461495	3	True				
ANR	1461590	AssignmentExpression	list [ 1 ] = ( c != OP_PLUS && c != OP_MINPLUS && c != OP_EXACT && c != OP_POSPLUS )		1461495	0		=			
ANR	1461591	ArrayIndexing	list [ 1 ]		1461495	0					
ANR	1461592	Identifier	list		1461495	0					
ANR	1461593	PrimaryExpression	1		1461495	1					
ANR	1461594	AndExpression	c != OP_PLUS && c != OP_MINPLUS && c != OP_EXACT && c != OP_POSPLUS		1461495	1		&&			
ANR	1461595	EqualityExpression	c != OP_PLUS		1461495	0		!=			
ANR	1461596	Identifier	c		1461495	0					
ANR	1461597	Identifier	OP_PLUS		1461495	1					
ANR	1461598	AndExpression	c != OP_MINPLUS && c != OP_EXACT && c != OP_POSPLUS		1461495	1		&&			
ANR	1461599	EqualityExpression	c != OP_MINPLUS		1461495	0		!=			
ANR	1461600	Identifier	c		1461495	0					
ANR	1461601	Identifier	OP_MINPLUS		1461495	1					
ANR	1461602	AndExpression	c != OP_EXACT && c != OP_POSPLUS		1461495	1		&&			
ANR	1461603	EqualityExpression	c != OP_EXACT		1461495	0		!=			
ANR	1461604	Identifier	c		1461495	0					
ANR	1461605	Identifier	OP_EXACT		1461495	1					
ANR	1461606	EqualityExpression	c != OP_POSPLUS		1461495	1		!=			
ANR	1461607	Identifier	c		1461495	0					
ANR	1461608	Identifier	OP_POSPLUS		1461495	1					
ANR	1461609	SwitchStatement	switch ( base )		1461495	4					
ANR	1461610	Condition	base	2923:9:97129:97132	1461495	0	True				
ANR	1461611	Identifier	base		1461495	0					
ANR	1461612	CompoundStatement		29:4:573:573	1461495	1					
ANR	1461613	Label	case OP_STAR :	2925:4:97145:97157	1461495	0	True				
ANR	1461614	Identifier	OP_STAR		1461495	0					
ANR	1461615	ExpressionStatement	list [ 0 ] = OP_CHAR	2926:4:97163:97180	1461495	1	True				
ANR	1461616	AssignmentExpression	list [ 0 ] = OP_CHAR		1461495	0		=			
ANR	1461617	ArrayIndexing	list [ 0 ]		1461495	0					
ANR	1461618	Identifier	list		1461495	0					
ANR	1461619	PrimaryExpression	0		1461495	1					
ANR	1461620	Identifier	OP_CHAR		1461495	1					
ANR	1461621	BreakStatement	break ;	2927:4:97186:97191	1461495	2	True				
ANR	1461622	Label	case OP_STARI :	2929:4:97198:97211	1461495	3	True				
ANR	1461623	Identifier	OP_STARI		1461495	0					
ANR	1461624	ExpressionStatement	list [ 0 ] = OP_CHARI	2930:4:97217:97235	1461495	4	True				
ANR	1461625	AssignmentExpression	list [ 0 ] = OP_CHARI		1461495	0		=			
ANR	1461626	ArrayIndexing	list [ 0 ]		1461495	0					
ANR	1461627	Identifier	list		1461495	0					
ANR	1461628	PrimaryExpression	0		1461495	1					
ANR	1461629	Identifier	OP_CHARI		1461495	1					
ANR	1461630	BreakStatement	break ;	2931:4:97241:97246	1461495	5	True				
ANR	1461631	Label	case OP_NOTSTAR :	2933:4:97253:97268	1461495	6	True				
ANR	1461632	Identifier	OP_NOTSTAR		1461495	0					
ANR	1461633	ExpressionStatement	list [ 0 ] = OP_NOT	2934:4:97274:97290	1461495	7	True				
ANR	1461634	AssignmentExpression	list [ 0 ] = OP_NOT		1461495	0		=			
ANR	1461635	ArrayIndexing	list [ 0 ]		1461495	0					
ANR	1461636	Identifier	list		1461495	0					
ANR	1461637	PrimaryExpression	0		1461495	1					
ANR	1461638	Identifier	OP_NOT		1461495	1					
ANR	1461639	BreakStatement	break ;	2935:4:97296:97301	1461495	8	True				
ANR	1461640	Label	case OP_NOTSTARI :	2937:4:97308:97324	1461495	9	True				
ANR	1461641	Identifier	OP_NOTSTARI		1461495	0					
ANR	1461642	ExpressionStatement	list [ 0 ] = OP_NOTI	2938:4:97330:97347	1461495	10	True				
ANR	1461643	AssignmentExpression	list [ 0 ] = OP_NOTI		1461495	0		=			
ANR	1461644	ArrayIndexing	list [ 0 ]		1461495	0					
ANR	1461645	Identifier	list		1461495	0					
ANR	1461646	PrimaryExpression	0		1461495	1					
ANR	1461647	Identifier	OP_NOTI		1461495	1					
ANR	1461648	BreakStatement	break ;	2939:4:97353:97358	1461495	11	True				
ANR	1461649	Label	case OP_TYPESTAR :	2941:4:97365:97381	1461495	12	True				
ANR	1461650	Identifier	OP_TYPESTAR		1461495	0					
ANR	1461651	ExpressionStatement	list [ 0 ] = * code	2942:4:97387:97402	1461495	13	True				
ANR	1461652	AssignmentExpression	list [ 0 ] = * code		1461495	0		=			
ANR	1461653	ArrayIndexing	list [ 0 ]		1461495	0					
ANR	1461654	Identifier	list		1461495	0					
ANR	1461655	PrimaryExpression	0		1461495	1					
ANR	1461656	UnaryOperationExpression	* code		1461495	1					
ANR	1461657	UnaryOperator	*		1461495	0					
ANR	1461658	Identifier	code		1461495	1					
ANR	1461659	ExpressionStatement	code ++	2943:4:97408:97414	1461495	14	True				
ANR	1461660	PostIncDecOperationExpression	code ++		1461495	0					
ANR	1461661	Identifier	code		1461495	0					
ANR	1461662	IncDec	++		1461495	1					
ANR	1461663	BreakStatement	break ;	2944:4:97420:97425	1461495	15	True				
ANR	1461664	ExpressionStatement	c = list [ 0 ]	2946:2:97435:97446	1461495	5	True				
ANR	1461665	AssignmentExpression	c = list [ 0 ]		1461495	0		=			
ANR	1461666	Identifier	c		1461495	0					
ANR	1461667	ArrayIndexing	list [ 0 ]		1461495	1					
ANR	1461668	Identifier	list		1461495	0					
ANR	1461669	PrimaryExpression	0		1461495	1					
ANR	1461670	SwitchStatement	switch ( c )		1461495	10					
ANR	1461671	Condition	c	2949:7:97460:97460	1461495	0	True				
ANR	1461672	Identifier	c		1461495	0					
ANR	1461673	CompoundStatement		55:2:899:899	1461495	1					
ANR	1461674	Label	case OP_NOT_DIGIT :	2951:2:97469:97486	1461495	0	True				
ANR	1461675	Identifier	OP_NOT_DIGIT		1461495	0					
ANR	1461676	Label	case OP_DIGIT :	2952:2:97490:97503	1461495	1	True				
ANR	1461677	Identifier	OP_DIGIT		1461495	0					
ANR	1461678	Label	case OP_NOT_WHITESPACE :	2953:2:97507:97529	1461495	2	True				
ANR	1461679	Identifier	OP_NOT_WHITESPACE		1461495	0					
ANR	1461680	Label	case OP_WHITESPACE :	2954:2:97533:97551	1461495	3	True				
ANR	1461681	Identifier	OP_WHITESPACE		1461495	0					
ANR	1461682	Label	case OP_NOT_WORDCHAR :	2955:2:97555:97575	1461495	4	True				
ANR	1461683	Identifier	OP_NOT_WORDCHAR		1461495	0					
ANR	1461684	Label	case OP_WORDCHAR :	2956:2:97579:97595	1461495	5	True				
ANR	1461685	Identifier	OP_WORDCHAR		1461495	0					
ANR	1461686	Label	case OP_ANY :	2957:2:97599:97610	1461495	6	True				
ANR	1461687	Identifier	OP_ANY		1461495	0					
ANR	1461688	Label	case OP_ALLANY :	2958:2:97614:97628	1461495	7	True				
ANR	1461689	Identifier	OP_ALLANY		1461495	0					
ANR	1461690	Label	case OP_ANYNL :	2959:2:97632:97645	1461495	8	True				
ANR	1461691	Identifier	OP_ANYNL		1461495	0					
ANR	1461692	Label	case OP_NOT_HSPACE :	2960:2:97649:97667	1461495	9	True				
ANR	1461693	Identifier	OP_NOT_HSPACE		1461495	0					
ANR	1461694	Label	case OP_HSPACE :	2961:2:97671:97685	1461495	10	True				
ANR	1461695	Identifier	OP_HSPACE		1461495	0					
ANR	1461696	Label	case OP_NOT_VSPACE :	2962:2:97689:97707	1461495	11	True				
ANR	1461697	Identifier	OP_NOT_VSPACE		1461495	0					
ANR	1461698	Label	case OP_VSPACE :	2963:2:97711:97725	1461495	12	True				
ANR	1461699	Identifier	OP_VSPACE		1461495	0					
ANR	1461700	Label	case OP_EXTUNI :	2964:2:97729:97743	1461495	13	True				
ANR	1461701	Identifier	OP_EXTUNI		1461495	0					
ANR	1461702	Label	case OP_EODN :	2965:2:97747:97759	1461495	14	True				
ANR	1461703	Identifier	OP_EODN		1461495	0					
ANR	1461704	Label	case OP_EOD :	2966:2:97763:97774	1461495	15	True				
ANR	1461705	Identifier	OP_EOD		1461495	0					
ANR	1461706	Label	case OP_DOLL :	2967:2:97778:97790	1461495	16	True				
ANR	1461707	Identifier	OP_DOLL		1461495	0					
ANR	1461708	Label	case OP_DOLLM :	2968:2:97794:97807	1461495	17	True				
ANR	1461709	Identifier	OP_DOLLM		1461495	0					
ANR	1461710	ReturnStatement	return code ;	2969:2:97811:97822	1461495	18	True				
ANR	1461711	Identifier	code		1461495	0					
ANR	1461712	Label	case OP_CHAR :	2971:2:97827:97839	1461495	19	True				
ANR	1461713	Identifier	OP_CHAR		1461495	0					
ANR	1461714	Label	case OP_NOT :	2972:2:97843:97854	1461495	20	True				
ANR	1461715	Identifier	OP_NOT		1461495	0					
ANR	1461716	ExpressionStatement	"GETCHARINCTEST ( chr , code )"	2973:2:97858:97883	1461495	21	True				
ANR	1461717	CallExpression	"GETCHARINCTEST ( chr , code )"		1461495	0					
ANR	1461718	Callee	GETCHARINCTEST		1461495	0					
ANR	1461719	Identifier	GETCHARINCTEST		1461495	0					
ANR	1461720	ArgumentList	chr		1461495	1					
ANR	1461721	Argument	chr		1461495	0					
ANR	1461722	Identifier	chr		1461495	0					
ANR	1461723	Argument	code		1461495	1					
ANR	1461724	Identifier	code		1461495	0					
ANR	1461725	ExpressionStatement	list [ 2 ] = chr	2974:2:97887:97900	1461495	22	True				
ANR	1461726	AssignmentExpression	list [ 2 ] = chr		1461495	0		=			
ANR	1461727	ArrayIndexing	list [ 2 ]		1461495	0					
ANR	1461728	Identifier	list		1461495	0					
ANR	1461729	PrimaryExpression	2		1461495	1					
ANR	1461730	Identifier	chr		1461495	1					
ANR	1461731	ExpressionStatement	list [ 3 ] = NOTACHAR	2975:2:97904:97922	1461495	23	True				
ANR	1461732	AssignmentExpression	list [ 3 ] = NOTACHAR		1461495	0		=			
ANR	1461733	ArrayIndexing	list [ 3 ]		1461495	0					
ANR	1461734	Identifier	list		1461495	0					
ANR	1461735	PrimaryExpression	3		1461495	1					
ANR	1461736	Identifier	NOTACHAR		1461495	1					
ANR	1461737	ReturnStatement	return code ;	2976:2:97926:97937	1461495	24	True				
ANR	1461738	Identifier	code		1461495	0					
ANR	1461739	Label	case OP_CHARI :	2978:2:97942:97955	1461495	25	True				
ANR	1461740	Identifier	OP_CHARI		1461495	0					
ANR	1461741	Label	case OP_NOTI :	2979:2:97959:97971	1461495	26	True				
ANR	1461742	Identifier	OP_NOTI		1461495	0					
ANR	1461743	ExpressionStatement	list [ 0 ] = ( c == OP_CHARI ) ? OP_CHAR : OP_NOT	2980:2:97975:98019	1461495	27	True				
ANR	1461744	AssignmentExpression	list [ 0 ] = ( c == OP_CHARI ) ? OP_CHAR : OP_NOT		1461495	0		=			
ANR	1461745	ArrayIndexing	list [ 0 ]		1461495	0					
ANR	1461746	Identifier	list		1461495	0					
ANR	1461747	PrimaryExpression	0		1461495	1					
ANR	1461748	ConditionalExpression	( c == OP_CHARI ) ? OP_CHAR : OP_NOT		1461495	1					
ANR	1461749	Condition	c == OP_CHARI		1461495	0					
ANR	1461750	EqualityExpression	c == OP_CHARI		1461495	0		==			
ANR	1461751	Identifier	c		1461495	0					
ANR	1461752	Identifier	OP_CHARI		1461495	1					
ANR	1461753	Identifier	OP_CHAR		1461495	1					
ANR	1461754	Identifier	OP_NOT		1461495	2					
ANR	1461755	ExpressionStatement	"GETCHARINCTEST ( chr , code )"	2981:2:98023:98048	1461495	28	True				
ANR	1461756	CallExpression	"GETCHARINCTEST ( chr , code )"		1461495	0					
ANR	1461757	Callee	GETCHARINCTEST		1461495	0					
ANR	1461758	Identifier	GETCHARINCTEST		1461495	0					
ANR	1461759	ArgumentList	chr		1461495	1					
ANR	1461760	Argument	chr		1461495	0					
ANR	1461761	Identifier	chr		1461495	0					
ANR	1461762	Argument	code		1461495	1					
ANR	1461763	Identifier	code		1461495	0					
ANR	1461764	ExpressionStatement	list [ 2 ] = chr	2982:2:98052:98065	1461495	29	True				
ANR	1461765	AssignmentExpression	list [ 2 ] = chr		1461495	0		=			
ANR	1461766	ArrayIndexing	list [ 2 ]		1461495	0					
ANR	1461767	Identifier	list		1461495	0					
ANR	1461768	PrimaryExpression	2		1461495	1					
ANR	1461769	Identifier	chr		1461495	1					
ANR	1461770	IfStatement	if ( chr < 128 || ( chr < 256 && ! utf ) )		1461495	30					
ANR	1461771	Condition	chr < 128 || ( chr < 256 && ! utf )	2985:6:98093:98124	1461495	0	True				
ANR	1461772	OrExpression	chr < 128 || ( chr < 256 && ! utf )		1461495	0		||			
ANR	1461773	RelationalExpression	chr < 128		1461495	0		<			
ANR	1461774	Identifier	chr		1461495	0					
ANR	1461775	PrimaryExpression	128		1461495	1					
ANR	1461776	AndExpression	chr < 256 && ! utf		1461495	1		&&			
ANR	1461777	RelationalExpression	chr < 256		1461495	0		<			
ANR	1461778	Identifier	chr		1461495	0					
ANR	1461779	PrimaryExpression	256		1461495	1					
ANR	1461780	UnaryOperationExpression	! utf		1461495	1					
ANR	1461781	UnaryOperator	!		1461495	0					
ANR	1461782	Identifier	utf		1461495	1					
ANR	1461783	ExpressionStatement	list [ 3 ] = fcc [ chr ]	2986:4:98131:98149	1461495	1	True				
ANR	1461784	AssignmentExpression	list [ 3 ] = fcc [ chr ]		1461495	0		=			
ANR	1461785	ArrayIndexing	list [ 3 ]		1461495	0					
ANR	1461786	Identifier	list		1461495	0					
ANR	1461787	PrimaryExpression	3		1461495	1					
ANR	1461788	ArrayIndexing	fcc [ chr ]		1461495	1					
ANR	1461789	Identifier	fcc		1461495	0					
ANR	1461790	Identifier	chr		1461495	1					
ANR	1461791	ElseStatement	else		1461495	0					
ANR	1461792	ExpressionStatement	list [ 3 ] = UCD_OTHERCASE ( chr )	2988:4:98162:98190	1461495	0	True				
ANR	1461793	AssignmentExpression	list [ 3 ] = UCD_OTHERCASE ( chr )		1461495	0		=			
ANR	1461794	ArrayIndexing	list [ 3 ]		1461495	0					
ANR	1461795	Identifier	list		1461495	0					
ANR	1461796	PrimaryExpression	3		1461495	1					
ANR	1461797	CallExpression	UCD_OTHERCASE ( chr )		1461495	1					
ANR	1461798	Callee	UCD_OTHERCASE		1461495	0					
ANR	1461799	Identifier	UCD_OTHERCASE		1461495	0					
ANR	1461800	ArgumentList	chr		1461495	1					
ANR	1461801	Argument	chr		1461495	0					
ANR	1461802	Identifier	chr		1461495	0					
ANR	1461803	IfStatement	if ( chr == list [ 3 ] )		1461495	31					
ANR	1461804	Condition	chr == list [ 3 ]	2997:6:98376:98389	1461495	0	True				
ANR	1461805	EqualityExpression	chr == list [ 3 ]		1461495	0		==			
ANR	1461806	Identifier	chr		1461495	0					
ANR	1461807	ArrayIndexing	list [ 3 ]		1461495	1					
ANR	1461808	Identifier	list		1461495	0					
ANR	1461809	PrimaryExpression	3		1461495	1					
ANR	1461810	ExpressionStatement	list [ 3 ] = NOTACHAR	2998:4:98396:98414	1461495	1	True				
ANR	1461811	AssignmentExpression	list [ 3 ] = NOTACHAR		1461495	0		=			
ANR	1461812	ArrayIndexing	list [ 3 ]		1461495	0					
ANR	1461813	Identifier	list		1461495	0					
ANR	1461814	PrimaryExpression	3		1461495	1					
ANR	1461815	Identifier	NOTACHAR		1461495	1					
ANR	1461816	ElseStatement	else		1461495	0					
ANR	1461817	ExpressionStatement	list [ 4 ] = NOTACHAR	3000:4:98427:98445	1461495	0	True				
ANR	1461818	AssignmentExpression	list [ 4 ] = NOTACHAR		1461495	0		=			
ANR	1461819	ArrayIndexing	list [ 4 ]		1461495	0					
ANR	1461820	Identifier	list		1461495	0					
ANR	1461821	PrimaryExpression	4		1461495	1					
ANR	1461822	Identifier	NOTACHAR		1461495	1					
ANR	1461823	ReturnStatement	return code ;	3001:2:98449:98460	1461495	32	True				
ANR	1461824	Identifier	code		1461495	0					
ANR	1461825	Label	case OP_PROP :	3004:2:98484:98496	1461495	33	True				
ANR	1461826	Identifier	OP_PROP		1461495	0					
ANR	1461827	Label	case OP_NOTPROP :	3005:2:98500:98515	1461495	34	True				
ANR	1461828	Identifier	OP_NOTPROP		1461495	0					
ANR	1461829	IfStatement	if ( code [ 0 ] != PT_CLIST )		1461495	35					
ANR	1461830	Condition	code [ 0 ] != PT_CLIST	3006:6:98523:98541	1461495	0	True				
ANR	1461831	EqualityExpression	code [ 0 ] != PT_CLIST		1461495	0		!=			
ANR	1461832	ArrayIndexing	code [ 0 ]		1461495	0					
ANR	1461833	Identifier	code		1461495	0					
ANR	1461834	PrimaryExpression	0		1461495	1					
ANR	1461835	Identifier	PT_CLIST		1461495	1					
ANR	1461836	CompoundStatement		112:4:1982:1982	1461495	1					
ANR	1461837	ExpressionStatement	list [ 2 ] = code [ 0 ]	3008:4:98554:98571	1461495	0	True				
ANR	1461838	AssignmentExpression	list [ 2 ] = code [ 0 ]		1461495	0		=			
ANR	1461839	ArrayIndexing	list [ 2 ]		1461495	0					
ANR	1461840	Identifier	list		1461495	0					
ANR	1461841	PrimaryExpression	2		1461495	1					
ANR	1461842	ArrayIndexing	code [ 0 ]		1461495	1					
ANR	1461843	Identifier	code		1461495	0					
ANR	1461844	PrimaryExpression	0		1461495	1					
ANR	1461845	ExpressionStatement	list [ 3 ] = code [ 1 ]	3009:4:98577:98594	1461495	1	True				
ANR	1461846	AssignmentExpression	list [ 3 ] = code [ 1 ]		1461495	0		=			
ANR	1461847	ArrayIndexing	list [ 3 ]		1461495	0					
ANR	1461848	Identifier	list		1461495	0					
ANR	1461849	PrimaryExpression	3		1461495	1					
ANR	1461850	ArrayIndexing	code [ 1 ]		1461495	1					
ANR	1461851	Identifier	code		1461495	0					
ANR	1461852	PrimaryExpression	1		1461495	1					
ANR	1461853	ReturnStatement	return code + 2 ;	3010:4:98600:98615	1461495	2	True				
ANR	1461854	AdditiveExpression	code + 2		1461495	0		+			
ANR	1461855	Identifier	code		1461495	0					
ANR	1461856	PrimaryExpression	2		1461495	1					
ANR	1461857	ExpressionStatement	clist_src = PRIV ( ucd_caseless_sets ) + code [ 1 ]	3015:2:98673:98718	1461495	36	True				
ANR	1461858	AssignmentExpression	clist_src = PRIV ( ucd_caseless_sets ) + code [ 1 ]		1461495	0		=			
ANR	1461859	Identifier	clist_src		1461495	0					
ANR	1461860	AdditiveExpression	PRIV ( ucd_caseless_sets ) + code [ 1 ]		1461495	1		+			
ANR	1461861	CallExpression	PRIV ( ucd_caseless_sets )		1461495	0					
ANR	1461862	Callee	PRIV		1461495	0					
ANR	1461863	Identifier	PRIV		1461495	0					
ANR	1461864	ArgumentList	ucd_caseless_sets		1461495	1					
ANR	1461865	Argument	ucd_caseless_sets		1461495	0					
ANR	1461866	Identifier	ucd_caseless_sets		1461495	0					
ANR	1461867	ArrayIndexing	code [ 1 ]		1461495	1					
ANR	1461868	Identifier	code		1461495	0					
ANR	1461869	PrimaryExpression	1		1461495	1					
ANR	1461870	ExpressionStatement	clist_dest = list + 2	3016:2:98722:98743	1461495	37	True				
ANR	1461871	AssignmentExpression	clist_dest = list + 2		1461495	0		=			
ANR	1461872	Identifier	clist_dest		1461495	0					
ANR	1461873	AdditiveExpression	list + 2		1461495	1		+			
ANR	1461874	Identifier	list		1461495	0					
ANR	1461875	PrimaryExpression	2		1461495	1					
ANR	1461876	ExpressionStatement	code += 2	3017:2:98747:98756	1461495	38	True				
ANR	1461877	AssignmentExpression	code += 2		1461495	0		+=			
ANR	1461878	Identifier	code		1461495	0					
ANR	1461879	PrimaryExpression	2		1461495	1					
ANR	1461880	DoStatement	do		1461495	39					
ANR	1461881	CompoundStatement		124:5:2198:2198	1461495	0					
ANR	1461882	IfStatement	if ( clist_dest >= list + 8 )		1461495	0					
ANR	1461883	Condition	clist_dest >= list + 8	3020:9:98775:98796	1461495	0	True				
ANR	1461884	RelationalExpression	clist_dest >= list + 8		1461495	0		>=			
ANR	1461885	Identifier	clist_dest		1461495	0					
ANR	1461886	AdditiveExpression	list + 8		1461495	1		+			
ANR	1461887	Identifier	list		1461495	0					
ANR	1461888	PrimaryExpression	8		1461495	1					
ANR	1461889	CompoundStatement		126:7:2240:2240	1461495	1					
ANR	1461890	ExpressionStatement	list [ 2 ] = code [ 0 ]	3024:7:98955:98972	1461495	0	True				
ANR	1461891	AssignmentExpression	list [ 2 ] = code [ 0 ]		1461495	0		=			
ANR	1461892	ArrayIndexing	list [ 2 ]		1461495	0					
ANR	1461893	Identifier	list		1461495	0					
ANR	1461894	PrimaryExpression	2		1461495	1					
ANR	1461895	ArrayIndexing	code [ 0 ]		1461495	1					
ANR	1461896	Identifier	code		1461495	0					
ANR	1461897	PrimaryExpression	0		1461495	1					
ANR	1461898	ExpressionStatement	list [ 3 ] = code [ 1 ]	3025:7:98981:98998	1461495	1	True				
ANR	1461899	AssignmentExpression	list [ 3 ] = code [ 1 ]		1461495	0		=			
ANR	1461900	ArrayIndexing	list [ 3 ]		1461495	0					
ANR	1461901	Identifier	list		1461495	0					
ANR	1461902	PrimaryExpression	3		1461495	1					
ANR	1461903	ArrayIndexing	code [ 1 ]		1461495	1					
ANR	1461904	Identifier	code		1461495	0					
ANR	1461905	PrimaryExpression	1		1461495	1					
ANR	1461906	ReturnStatement	return code ;	3026:7:99007:99018	1461495	2	True				
ANR	1461907	Identifier	code		1461495	0					
ANR	1461908	ExpressionStatement	* clist_dest ++ = * clist_src	3028:5:99034:99060	1461495	1	True				
ANR	1461909	AssignmentExpression	* clist_dest ++ = * clist_src		1461495	0		=			
ANR	1461910	UnaryOperationExpression	* clist_dest ++		1461495	0					
ANR	1461911	UnaryOperator	*		1461495	0					
ANR	1461912	PostIncDecOperationExpression	clist_dest ++		1461495	1					
ANR	1461913	Identifier	clist_dest		1461495	0					
ANR	1461914	IncDec	++		1461495	1					
ANR	1461915	UnaryOperationExpression	* clist_src		1461495	1					
ANR	1461916	UnaryOperator	*		1461495	0					
ANR	1461917	Identifier	clist_src		1461495	1					
ANR	1461918	Condition	* clist_src ++ != NOTACHAR	3030:8:99077:99100	1461495	1	True				
ANR	1461919	EqualityExpression	* clist_src ++ != NOTACHAR		1461495	0		!=			
ANR	1461920	UnaryOperationExpression	* clist_src ++		1461495	0					
ANR	1461921	UnaryOperator	*		1461495	0					
ANR	1461922	PostIncDecOperationExpression	clist_src ++		1461495	1					
ANR	1461923	Identifier	clist_src		1461495	0					
ANR	1461924	IncDec	++		1461495	1					
ANR	1461925	Identifier	NOTACHAR		1461495	1					
ANR	1461926	ExpressionStatement	list [ 0 ] = ( c == OP_PROP ) ? OP_CHAR : OP_NOT	3035:2:99203:99246	1461495	40	True				
ANR	1461927	AssignmentExpression	list [ 0 ] = ( c == OP_PROP ) ? OP_CHAR : OP_NOT		1461495	0		=			
ANR	1461928	ArrayIndexing	list [ 0 ]		1461495	0					
ANR	1461929	Identifier	list		1461495	0					
ANR	1461930	PrimaryExpression	0		1461495	1					
ANR	1461931	ConditionalExpression	( c == OP_PROP ) ? OP_CHAR : OP_NOT		1461495	1					
ANR	1461932	Condition	c == OP_PROP		1461495	0					
ANR	1461933	EqualityExpression	c == OP_PROP		1461495	0		==			
ANR	1461934	Identifier	c		1461495	0					
ANR	1461935	Identifier	OP_PROP		1461495	1					
ANR	1461936	Identifier	OP_CHAR		1461495	1					
ANR	1461937	Identifier	OP_NOT		1461495	2					
ANR	1461938	ReturnStatement	return code ;	3036:2:99250:99261	1461495	41	True				
ANR	1461939	Identifier	code		1461495	0					
ANR	1461940	Label	case OP_NCLASS :	3039:2:99273:99287	1461495	42	True				
ANR	1461941	Identifier	OP_NCLASS		1461495	0					
ANR	1461942	Label	case OP_CLASS :	3040:2:99291:99304	1461495	43	True				
ANR	1461943	Identifier	OP_CLASS		1461495	0					
ANR	1461944	Label	case OP_XCLASS :	3042:2:99358:99372	1461495	44	True				
ANR	1461945	Identifier	OP_XCLASS		1461495	0					
ANR	1461946	IfStatement	if ( c == OP_XCLASS )		1461495	45					
ANR	1461947	Condition	c == OP_XCLASS	3043:6:99380:99393	1461495	0	True				
ANR	1461948	EqualityExpression	c == OP_XCLASS		1461495	0		==			
ANR	1461949	Identifier	c		1461495	0					
ANR	1461950	Identifier	OP_XCLASS		1461495	1					
ANR	1461951	ExpressionStatement	"end = code + GET ( code , 0 ) - 1"	3044:4:99400:99429	1461495	1	True				
ANR	1461952	AssignmentExpression	"end = code + GET ( code , 0 ) - 1"		1461495	0		=			
ANR	1461953	Identifier	end		1461495	0					
ANR	1461954	AdditiveExpression	"code + GET ( code , 0 ) - 1"		1461495	1		+			
ANR	1461955	Identifier	code		1461495	0					
ANR	1461956	AdditiveExpression	"GET ( code , 0 ) - 1"		1461495	1		-			
ANR	1461957	CallExpression	"GET ( code , 0 )"		1461495	0					
ANR	1461958	Callee	GET		1461495	0					
ANR	1461959	Identifier	GET		1461495	0					
ANR	1461960	ArgumentList	code		1461495	1					
ANR	1461961	Argument	code		1461495	0					
ANR	1461962	Identifier	code		1461495	0					
ANR	1461963	Argument	0		1461495	1					
ANR	1461964	PrimaryExpression	0		1461495	0					
ANR	1461965	PrimaryExpression	1		1461495	1					
ANR	1461966	ElseStatement	else		1461495	0					
ANR	1461967	ExpressionStatement	end = code + 32 / sizeof ( pcre_uchar )	3047:4:99449:99485	1461495	0	True				
ANR	1461968	AssignmentExpression	end = code + 32 / sizeof ( pcre_uchar )		1461495	0		=			
ANR	1461969	Identifier	end		1461495	0					
ANR	1461970	AdditiveExpression	code + 32 / sizeof ( pcre_uchar )		1461495	1		+			
ANR	1461971	Identifier	code		1461495	0					
ANR	1461972	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		1461495	1		/			
ANR	1461973	PrimaryExpression	32		1461495	0					
ANR	1461974	SizeofExpression	sizeof ( pcre_uchar )		1461495	1					
ANR	1461975	Sizeof	sizeof		1461495	0					
ANR	1461976	SizeofOperand	pcre_uchar		1461495	1					
ANR	1461977	SwitchStatement	switch ( * end )		1461495	46					
ANR	1461978	Condition	* end	3049:9:99497:99500	1461495	0	True				
ANR	1461979	UnaryOperationExpression	* end		1461495	0					
ANR	1461980	UnaryOperator	*		1461495	0					
ANR	1461981	Identifier	end		1461495	1					
ANR	1461982	CompoundStatement		155:4:2941:2941	1461495	1					
ANR	1461983	Label	case OP_CRSTAR :	3051:4:99513:99527	1461495	0	True				
ANR	1461984	Identifier	OP_CRSTAR		1461495	0					
ANR	1461985	Label	case OP_CRMINSTAR :	3052:4:99533:99550	1461495	1	True				
ANR	1461986	Identifier	OP_CRMINSTAR		1461495	0					
ANR	1461987	Label	case OP_CRQUERY :	3053:4:99556:99571	1461495	2	True				
ANR	1461988	Identifier	OP_CRQUERY		1461495	0					
ANR	1461989	Label	case OP_CRMINQUERY :	3054:4:99577:99595	1461495	3	True				
ANR	1461990	Identifier	OP_CRMINQUERY		1461495	0					
ANR	1461991	Label	case OP_CRPOSSTAR :	3055:4:99601:99618	1461495	4	True				
ANR	1461992	Identifier	OP_CRPOSSTAR		1461495	0					
ANR	1461993	Label	case OP_CRPOSQUERY :	3056:4:99624:99642	1461495	5	True				
ANR	1461994	Identifier	OP_CRPOSQUERY		1461495	0					
ANR	1461995	ExpressionStatement	list [ 1 ] = TRUE	3057:4:99648:99662	1461495	6	True				
ANR	1461996	AssignmentExpression	list [ 1 ] = TRUE		1461495	0		=			
ANR	1461997	ArrayIndexing	list [ 1 ]		1461495	0					
ANR	1461998	Identifier	list		1461495	0					
ANR	1461999	PrimaryExpression	1		1461495	1					
ANR	1462000	Identifier	TRUE		1461495	1					
ANR	1462001	ExpressionStatement	end ++	3058:4:99668:99673	1461495	7	True				
ANR	1462002	PostIncDecOperationExpression	end ++		1461495	0					
ANR	1462003	Identifier	end		1461495	0					
ANR	1462004	IncDec	++		1461495	1					
ANR	1462005	BreakStatement	break ;	3059:4:99679:99684	1461495	8	True				
ANR	1462006	Label	case OP_CRPLUS :	3061:4:99691:99705	1461495	9	True				
ANR	1462007	Identifier	OP_CRPLUS		1461495	0					
ANR	1462008	Label	case OP_CRMINPLUS :	3062:4:99711:99728	1461495	10	True				
ANR	1462009	Identifier	OP_CRMINPLUS		1461495	0					
ANR	1462010	Label	case OP_CRPOSPLUS :	3063:4:99734:99751	1461495	11	True				
ANR	1462011	Identifier	OP_CRPOSPLUS		1461495	0					
ANR	1462012	ExpressionStatement	end ++	3064:4:99757:99762	1461495	12	True				
ANR	1462013	PostIncDecOperationExpression	end ++		1461495	0					
ANR	1462014	Identifier	end		1461495	0					
ANR	1462015	IncDec	++		1461495	1					
ANR	1462016	BreakStatement	break ;	3065:4:99768:99773	1461495	13	True				
ANR	1462017	Label	case OP_CRRANGE :	3067:4:99780:99795	1461495	14	True				
ANR	1462018	Identifier	OP_CRRANGE		1461495	0					
ANR	1462019	Label	case OP_CRMINRANGE :	3068:4:99801:99819	1461495	15	True				
ANR	1462020	Identifier	OP_CRMINRANGE		1461495	0					
ANR	1462021	Label	case OP_CRPOSRANGE :	3069:4:99825:99843	1461495	16	True				
ANR	1462022	Identifier	OP_CRPOSRANGE		1461495	0					
ANR	1462023	ExpressionStatement	"list [ 1 ] = ( GET2 ( end , 1 ) == 0 )"	3070:4:99849:99878	1461495	17	True				
ANR	1462024	AssignmentExpression	"list [ 1 ] = ( GET2 ( end , 1 ) == 0 )"		1461495	0		=			
ANR	1462025	ArrayIndexing	list [ 1 ]		1461495	0					
ANR	1462026	Identifier	list		1461495	0					
ANR	1462027	PrimaryExpression	1		1461495	1					
ANR	1462028	EqualityExpression	"GET2 ( end , 1 ) == 0"		1461495	1		==			
ANR	1462029	CallExpression	"GET2 ( end , 1 )"		1461495	0					
ANR	1462030	Callee	GET2		1461495	0					
ANR	1462031	Identifier	GET2		1461495	0					
ANR	1462032	ArgumentList	end		1461495	1					
ANR	1462033	Argument	end		1461495	0					
ANR	1462034	Identifier	end		1461495	0					
ANR	1462035	Argument	1		1461495	1					
ANR	1462036	PrimaryExpression	1		1461495	0					
ANR	1462037	PrimaryExpression	0		1461495	1					
ANR	1462038	ExpressionStatement	end += 1 + 2 * IMM2_SIZE	3071:4:99884:99908	1461495	18	True				
ANR	1462039	AssignmentExpression	end += 1 + 2 * IMM2_SIZE		1461495	0		+=			
ANR	1462040	Identifier	end		1461495	0					
ANR	1462041	AdditiveExpression	1 + 2 * IMM2_SIZE		1461495	1		+			
ANR	1462042	PrimaryExpression	1		1461495	0					
ANR	1462043	MultiplicativeExpression	2 * IMM2_SIZE		1461495	1		*			
ANR	1462044	PrimaryExpression	2		1461495	0					
ANR	1462045	Identifier	IMM2_SIZE		1461495	1					
ANR	1462046	BreakStatement	break ;	3072:4:99914:99919	1461495	19	True				
ANR	1462047	ExpressionStatement	list [ 2 ] = ( pcre_uint32 ) ( end - code )	3074:2:99929:99964	1461495	47	True				
ANR	1462048	AssignmentExpression	list [ 2 ] = ( pcre_uint32 ) ( end - code )		1461495	0		=			
ANR	1462049	ArrayIndexing	list [ 2 ]		1461495	0					
ANR	1462050	Identifier	list		1461495	0					
ANR	1462051	PrimaryExpression	2		1461495	1					
ANR	1462052	CastExpression	( pcre_uint32 ) ( end - code )		1461495	1					
ANR	1462053	CastTarget	pcre_uint32		1461495	0					
ANR	1462054	AdditiveExpression	end - code		1461495	1		-			
ANR	1462055	Identifier	end		1461495	0					
ANR	1462056	Identifier	code		1461495	1					
ANR	1462057	ReturnStatement	return end ;	3075:2:99968:99978	1461495	48	True				
ANR	1462058	Identifier	end		1461495	0					
ANR	1462059	ReturnStatement	return NULL ;	3077:0:99984:99995	1461495	11	True				
ANR	1462060	Identifier	NULL		1461495	0					
ANR	1462061	ReturnType	static const pcre_uchar *		1461495	1					
ANR	1462062	Identifier	get_chr_property_list		1461495	2					
ANR	1462063	ParameterList	"const pcre_uchar * code , BOOL utf , const pcre_uint8 * fcc , pcre_uint32 * list"		1461495	3					
ANR	1462064	Parameter	const pcre_uchar * code	2894:22:96487:96508	1461495	0	True				
ANR	1462065	ParameterType	const pcre_uchar *		1461495	0					
ANR	1462066	Identifier	code		1461495	1					
ANR	1462067	Parameter	BOOL utf	2894:46:96511:96518	1461495	1	True				
ANR	1462068	ParameterType	BOOL		1461495	0					
ANR	1462069	Identifier	utf		1461495	1					
ANR	1462070	Parameter	const pcre_uint8 * fcc	2895:2:96523:96543	1461495	2	True				
ANR	1462071	ParameterType	const pcre_uint8 *		1461495	0					
ANR	1462072	Identifier	fcc		1461495	1					
ANR	1462073	Parameter	pcre_uint32 * list	2895:25:96546:96562	1461495	3	True				
ANR	1462074	ParameterType	pcre_uint32 *		1461495	0					
ANR	1462075	Identifier	list		1461495	1					
ANR	1462076	CFGEntryNode	ENTRY		1461495		True				
ANR	1462077	CFGExitNode	EXIT		1461495		True				
ANR	1462078	Symbol	OP_EXACT		1461495						
ANR	1462079	Symbol	OP_STAR		1461495						
ANR	1462080	Symbol	code		1461495						
ANR	1462081	Symbol	OP_TYPEPOSUPTO		1461495						
ANR	1462082	Symbol	OP_UPTO		1461495						
ANR	1462083	Symbol	fcc		1461495						
ANR	1462084	Symbol	OP_PLUS		1461495						
ANR	1462085	Symbol	OP_CHARI		1461495						
ANR	1462086	Symbol	clist_dest		1461495						
ANR	1462087	Symbol	OP_MINUPTO		1461495						
ANR	1462088	Symbol	PRIV		1461495						
ANR	1462089	Symbol	get_repeat_base		1461495						
ANR	1462090	Symbol	* fcc		1461495						
ANR	1462091	Symbol	ucd_caseless_sets		1461495						
ANR	1462092	Symbol	* clist_src		1461495						
ANR	1462093	Symbol	clist_src		1461495						
ANR	1462094	Symbol	end		1461495						
ANR	1462095	Symbol	GET2		1461495						
ANR	1462096	Symbol	OP_CHAR		1461495						
ANR	1462097	Symbol	c		1461495						
ANR	1462098	Symbol	NULL		1461495						
ANR	1462099	Symbol	OP_POSPLUS		1461495						
ANR	1462100	Symbol	utf		1461495						
ANR	1462101	Symbol	IMM2_SIZE		1461495						
ANR	1462102	Symbol	* chr		1461495						
ANR	1462103	Symbol	* clist_src ++		1461495						
ANR	1462104	Symbol	TRUE		1461495						
ANR	1462105	Symbol	list		1461495						
ANR	1462106	Symbol	chr		1461495						
ANR	1462107	Symbol	* clist_dest ++		1461495						
ANR	1462108	Symbol	OP_MINPLUS		1461495						
ANR	1462109	Symbol	OP_PROP		1461495						
ANR	1462110	Symbol	OP_XCLASS		1461495						
ANR	1462111	Symbol	* list		1461495						
ANR	1462112	Symbol	UCD_OTHERCASE		1461495						
ANR	1462113	Symbol	NOTACHAR		1461495						
ANR	1462114	Symbol	OP_NOT		1461495						
ANR	1462115	Symbol	GET		1461495						
ANR	1462116	Symbol	FALSE		1461495						
ANR	1462117	Symbol	* end		1461495						
ANR	1462118	Symbol	OP_POSUPTO		1461495						
ANR	1462119	Symbol	OP_NOTI		1461495						
ANR	1462120	Symbol	* code		1461495						
ANR	1462121	Symbol	base		1461495						
ANR	1462122	Symbol	PT_CLIST		1461495						
ANR	1462123	Function	compare_opcodes	3098:0:100554:115225							
ANR	1462124	FunctionDef	"compare_opcodes (const pcre_uchar * code , BOOL utf , const compile_data * cd , const pcre_uint32 * base_list , const pcre_uchar * base_end , int * rec_limit)"		1462123	0					
ANR	1462125	CompoundStatement		3101:0:100716:115225	1462123	0					
ANR	1462126	IdentifierDeclStatement	pcre_uchar c ;	3102:0:100718:100730	1462123	0	True				
ANR	1462127	IdentifierDecl	c		1462123	0					
ANR	1462128	IdentifierDeclType	pcre_uchar		1462123	0					
ANR	1462129	Identifier	c		1462123	1					
ANR	1462130	IdentifierDeclStatement	pcre_uint32 list [ 8 ] ;	3103:0:100732:100751	1462123	1	True				
ANR	1462131	IdentifierDecl	list [ 8 ]		1462123	0					
ANR	1462132	IdentifierDeclType	pcre_uint32 [ 8 ]		1462123	0					
ANR	1462133	Identifier	list		1462123	1					
ANR	1462134	PrimaryExpression	8		1462123	2					
ANR	1462135	IdentifierDeclStatement	const pcre_uint32 * chr_ptr ;	3104:0:100753:100779	1462123	2	True				
ANR	1462136	IdentifierDecl	* chr_ptr		1462123	0					
ANR	1462137	IdentifierDeclType	const pcre_uint32 *		1462123	0					
ANR	1462138	Identifier	chr_ptr		1462123	1					
ANR	1462139	IdentifierDeclStatement	const pcre_uint32 * ochr_ptr ;	3105:0:100781:100808	1462123	3	True				
ANR	1462140	IdentifierDecl	* ochr_ptr		1462123	0					
ANR	1462141	IdentifierDeclType	const pcre_uint32 *		1462123	0					
ANR	1462142	Identifier	ochr_ptr		1462123	1					
ANR	1462143	IdentifierDeclStatement	const pcre_uint32 * list_ptr ;	3106:0:100810:100837	1462123	4	True				
ANR	1462144	IdentifierDecl	* list_ptr		1462123	0					
ANR	1462145	IdentifierDeclType	const pcre_uint32 *		1462123	0					
ANR	1462146	Identifier	list_ptr		1462123	1					
ANR	1462147	IdentifierDeclStatement	const pcre_uchar * next_code ;	3107:0:100839:100866	1462123	5	True				
ANR	1462148	IdentifierDecl	* next_code		1462123	0					
ANR	1462149	IdentifierDeclType	const pcre_uchar *		1462123	0					
ANR	1462150	Identifier	next_code		1462123	1					
ANR	1462151	IdentifierDeclStatement	const pcre_uchar * xclass_flags ;	3109:0:100918:100948	1462123	6	True				
ANR	1462152	IdentifierDecl	* xclass_flags		1462123	0					
ANR	1462153	IdentifierDeclType	const pcre_uchar *		1462123	0					
ANR	1462154	Identifier	xclass_flags		1462123	1					
ANR	1462155	IdentifierDeclStatement	const pcre_uint8 * class_bitset ;	3111:0:100957:100987	1462123	7	True				
ANR	1462156	IdentifierDecl	* class_bitset		1462123	0					
ANR	1462157	IdentifierDeclType	const pcre_uint8 *		1462123	0					
ANR	1462158	Identifier	class_bitset		1462123	1					
ANR	1462159	IdentifierDeclStatement	"const pcre_uint8 * set1 , * set2 , * set_end ;"	3112:0:100989:101028	1462123	8	True				
ANR	1462160	IdentifierDecl	* set1		1462123	0					
ANR	1462161	IdentifierDeclType	const pcre_uint8 *		1462123	0					
ANR	1462162	Identifier	set1		1462123	1					
ANR	1462163	IdentifierDecl	* set2		1462123	1					
ANR	1462164	IdentifierDeclType	const pcre_uint8 *		1462123	0					
ANR	1462165	Identifier	set2		1462123	1					
ANR	1462166	IdentifierDecl	* set_end		1462123	2					
ANR	1462167	IdentifierDeclType	const pcre_uint8 *		1462123	0					
ANR	1462168	Identifier	set_end		1462123	1					
ANR	1462169	IdentifierDeclStatement	pcre_uint32 chr ;	3113:0:101030:101045	1462123	9	True				
ANR	1462170	IdentifierDecl	chr		1462123	0					
ANR	1462171	IdentifierDeclType	pcre_uint32		1462123	0					
ANR	1462172	Identifier	chr		1462123	1					
ANR	1462173	IdentifierDeclStatement	"BOOL accepted , invert_bits ;"	3114:0:101047:101073	1462123	10	True				
ANR	1462174	IdentifierDecl	accepted		1462123	0					
ANR	1462175	IdentifierDeclType	BOOL		1462123	0					
ANR	1462176	Identifier	accepted		1462123	1					
ANR	1462177	IdentifierDecl	invert_bits		1462123	1					
ANR	1462178	IdentifierDeclType	BOOL		1462123	0					
ANR	1462179	Identifier	invert_bits		1462123	1					
ANR	1462180	IdentifierDeclStatement	BOOL entered_a_group = FALSE ;	3115:0:101075:101103	1462123	11	True				
ANR	1462181	IdentifierDecl	entered_a_group = FALSE		1462123	0					
ANR	1462182	IdentifierDeclType	BOOL		1462123	0					
ANR	1462183	Identifier	entered_a_group		1462123	1					
ANR	1462184	AssignmentExpression	entered_a_group = FALSE		1462123	2		=			
ANR	1462185	Identifier	FALSE		1462123	0					
ANR	1462186	Identifier	FALSE		1462123	1					
ANR	1462187	IfStatement	if ( * rec_limit == 0 )		1462123	12					
ANR	1462188	Condition	* rec_limit == 0	3117:4:101110:101124	1462123	0	True				
ANR	1462189	EqualityExpression	* rec_limit == 0		1462123	0		==			
ANR	1462190	UnaryOperationExpression	* rec_limit		1462123	0					
ANR	1462191	UnaryOperator	*		1462123	0					
ANR	1462192	Identifier	rec_limit		1462123	1					
ANR	1462193	PrimaryExpression	0		1462123	1					
ANR	1462194	ReturnStatement	return FALSE ;	3117:21:101127:101139	1462123	1	True				
ANR	1462195	Identifier	FALSE		1462123	0					
ANR	1462196	ExpressionStatement	-- ( * rec_limit )	3118:0:101141:101155	1462123	13	True				
ANR	1462197	UnaryExpression	-- ( * rec_limit )		1462123	0					
ANR	1462198	IncDec	--		1462123	0					
ANR	1462199	UnaryOperationExpression	* rec_limit		1462123	1					
ANR	1462200	UnaryOperator	*		1462123	0					
ANR	1462201	Identifier	rec_limit		1462123	1					
ANR	1462202	ForStatement	for ( ; ; )		1462123	14					
ANR	1462203	CompoundStatement		26:2:740:740	1462123	0					
ANR	1462204	ExpressionStatement	c = * code	3130:2:101566:101575	1462123	0	True				
ANR	1462205	AssignmentExpression	c = * code		1462123	0		=			
ANR	1462206	Identifier	c		1462123	0					
ANR	1462207	UnaryOperationExpression	* code		1462123	1					
ANR	1462208	UnaryOperator	*		1462123	0					
ANR	1462209	Identifier	code		1462123	1					
ANR	1462210	IfStatement	if ( c == OP_CALLOUT )		1462123	1					
ANR	1462211	Condition	c == OP_CALLOUT	3134:6:101612:101626	1462123	0	True				
ANR	1462212	EqualityExpression	c == OP_CALLOUT		1462123	0		==			
ANR	1462213	Identifier	c		1462123	0					
ANR	1462214	Identifier	OP_CALLOUT		1462123	1					
ANR	1462215	CompoundStatement		35:4:916:916	1462123	1					
ANR	1462216	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3136:4:101639:101666	1462123	0	True				
ANR	1462217	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1462123	0		+=			
ANR	1462218	Identifier	code		1462123	0					
ANR	1462219	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1462123	1					
ANR	1462220	CallExpression	PRIV ( OP_lengths )		1462123	0					
ANR	1462221	Callee	PRIV		1462123	0					
ANR	1462222	Identifier	PRIV		1462123	0					
ANR	1462223	ArgumentList	OP_lengths		1462123	1					
ANR	1462224	Argument	OP_lengths		1462123	0					
ANR	1462225	Identifier	OP_lengths		1462123	0					
ANR	1462226	Identifier	c		1462123	1					
ANR	1462227	ContinueStatement	continue ;	3137:4:101672:101680	1462123	1	True				
ANR	1462228	IfStatement	if ( c == OP_ALT )		1462123	2					
ANR	1462229	Condition	c == OP_ALT	3140:6:101695:101705	1462123	0	True				
ANR	1462230	EqualityExpression	c == OP_ALT		1462123	0		==			
ANR	1462231	Identifier	c		1462123	0					
ANR	1462232	Identifier	OP_ALT		1462123	1					
ANR	1462233	CompoundStatement		41:4:995:995	1462123	1					
ANR	1462234	DoStatement	do		1462123	0					
ANR	1462235	ExpressionStatement	"code += GET ( code , 1 )"	3142:7:101721:101741	1462123	0	True				
ANR	1462236	AssignmentExpression	"code += GET ( code , 1 )"		1462123	0		+=			
ANR	1462237	Identifier	code		1462123	0					
ANR	1462238	CallExpression	"GET ( code , 1 )"		1462123	1					
ANR	1462239	Callee	GET		1462123	0					
ANR	1462240	Identifier	GET		1462123	0					
ANR	1462241	ArgumentList	code		1462123	1					
ANR	1462242	Argument	code		1462123	0					
ANR	1462243	Identifier	code		1462123	0					
ANR	1462244	Argument	1		1462123	1					
ANR	1462245	PrimaryExpression	1		1462123	0					
ANR	1462246	Condition	* code == OP_ALT	3142:36:101750:101764	1462123	1	True				
ANR	1462247	EqualityExpression	* code == OP_ALT		1462123	0		==			
ANR	1462248	UnaryOperationExpression	* code		1462123	0					
ANR	1462249	UnaryOperator	*		1462123	0					
ANR	1462250	Identifier	code		1462123	1					
ANR	1462251	Identifier	OP_ALT		1462123	1					
ANR	1462252	ExpressionStatement	c = * code	3143:4:101772:101781	1462123	1	True				
ANR	1462253	AssignmentExpression	c = * code		1462123	0		=			
ANR	1462254	Identifier	c		1462123	0					
ANR	1462255	UnaryOperationExpression	* code		1462123	1					
ANR	1462256	UnaryOperator	*		1462123	0					
ANR	1462257	Identifier	code		1462123	1					
ANR	1462258	SwitchStatement	switch ( c )		1462123	3					
ANR	1462259	Condition	c	3146:9:101799:101799	1462123	0	True				
ANR	1462260	Identifier	c		1462123	0					
ANR	1462261	CompoundStatement		47:4:1089:1089	1462123	1					
ANR	1462262	Label	case OP_END :	3148:4:101812:101823	1462123	0	True				
ANR	1462263	Identifier	OP_END		1462123	0					
ANR	1462264	Label	case OP_KETRPOS :	3149:4:101829:101844	1462123	1	True				
ANR	1462265	Identifier	OP_KETRPOS		1462123	0					
ANR	1462266	ReturnStatement	return base_list [ 1 ] != 0 ;	3154:4:102060:102084	1462123	2	True				
ANR	1462267	EqualityExpression	base_list [ 1 ] != 0		1462123	0		!=			
ANR	1462268	ArrayIndexing	base_list [ 1 ]		1462123	0					
ANR	1462269	Identifier	base_list		1462123	0					
ANR	1462270	PrimaryExpression	1		1462123	1					
ANR	1462271	PrimaryExpression	0		1462123	1					
ANR	1462272	Label	case OP_KET :	3156:4:102091:102102	1462123	3	True				
ANR	1462273	Identifier	OP_KET		1462123	0					
ANR	1462274	IfStatement	if ( base_list [ 1 ] == 0 )		1462123	4					
ANR	1462275	Condition	base_list [ 1 ] == 0	3161:8:102307:102323	1462123	0	True				
ANR	1462276	EqualityExpression	base_list [ 1 ] == 0		1462123	0		==			
ANR	1462277	ArrayIndexing	base_list [ 1 ]		1462123	0					
ANR	1462278	Identifier	base_list		1462123	0					
ANR	1462279	PrimaryExpression	1		1462123	1					
ANR	1462280	PrimaryExpression	0		1462123	1					
ANR	1462281	ReturnStatement	return FALSE ;	3161:27:102326:102338	1462123	1	True				
ANR	1462282	Identifier	FALSE		1462123	0					
ANR	1462283	SwitchStatement	"switch ( * ( code - GET ( code , 1 ) ) )"		1462123	5					
ANR	1462284	Condition	"* ( code - GET ( code , 1 ) )"	3163:11:102352:102373	1462123	0	True				
ANR	1462285	UnaryOperationExpression	"* ( code - GET ( code , 1 ) )"		1462123	0					
ANR	1462286	UnaryOperator	*		1462123	0					
ANR	1462287	AdditiveExpression	"code - GET ( code , 1 )"		1462123	1		-			
ANR	1462288	Identifier	code		1462123	0					
ANR	1462289	CallExpression	"GET ( code , 1 )"		1462123	1					
ANR	1462290	Callee	GET		1462123	0					
ANR	1462291	Identifier	GET		1462123	0					
ANR	1462292	ArgumentList	code		1462123	1					
ANR	1462293	Argument	code		1462123	0					
ANR	1462294	Identifier	code		1462123	0					
ANR	1462295	Argument	1		1462123	1					
ANR	1462296	PrimaryExpression	1		1462123	0					
ANR	1462297	CompoundStatement		64:6:1665:1665	1462123	1					
ANR	1462298	Label	case OP_ASSERT :	3165:6:102390:102404	1462123	0	True				
ANR	1462299	Identifier	OP_ASSERT		1462123	0					
ANR	1462300	Label	case OP_ASSERT_NOT :	3166:6:102412:102430	1462123	1	True				
ANR	1462301	Identifier	OP_ASSERT_NOT		1462123	0					
ANR	1462302	Label	case OP_ASSERTBACK :	3167:6:102438:102456	1462123	2	True				
ANR	1462303	Identifier	OP_ASSERTBACK		1462123	0					
ANR	1462304	Label	case OP_ASSERTBACK_NOT :	3168:6:102464:102486	1462123	3	True				
ANR	1462305	Identifier	OP_ASSERTBACK_NOT		1462123	0					
ANR	1462306	Label	case OP_ONCE :	3169:6:102494:102506	1462123	4	True				
ANR	1462307	Identifier	OP_ONCE		1462123	0					
ANR	1462308	Label	case OP_ONCE_NC :	3170:6:102514:102529	1462123	5	True				
ANR	1462309	Identifier	OP_ONCE_NC		1462123	0					
ANR	1462310	ReturnStatement	return ! entered_a_group ;	3175:6:102746:102769	1462123	6	True				
ANR	1462311	UnaryOperationExpression	! entered_a_group		1462123	0					
ANR	1462312	UnaryOperator	!		1462123	0					
ANR	1462313	Identifier	entered_a_group		1462123	1					
ANR	1462314	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3178:4:102784:102811	1462123	6	True				
ANR	1462315	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1462123	0		+=			
ANR	1462316	Identifier	code		1462123	0					
ANR	1462317	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1462123	1					
ANR	1462318	CallExpression	PRIV ( OP_lengths )		1462123	0					
ANR	1462319	Callee	PRIV		1462123	0					
ANR	1462320	Identifier	PRIV		1462123	0					
ANR	1462321	ArgumentList	OP_lengths		1462123	1					
ANR	1462322	Argument	OP_lengths		1462123	0					
ANR	1462323	Identifier	OP_lengths		1462123	0					
ANR	1462324	Identifier	c		1462123	1					
ANR	1462325	ContinueStatement	continue ;	3179:4:102817:102825	1462123	7	True				
ANR	1462326	Label	case OP_ONCE :	3181:4:102832:102844	1462123	8	True				
ANR	1462327	Identifier	OP_ONCE		1462123	0					
ANR	1462328	Label	case OP_ONCE_NC :	3182:4:102850:102865	1462123	9	True				
ANR	1462329	Identifier	OP_ONCE_NC		1462123	0					
ANR	1462330	Label	case OP_BRA :	3183:4:102871:102882	1462123	10	True				
ANR	1462331	Identifier	OP_BRA		1462123	0					
ANR	1462332	Label	case OP_CBRA :	3184:4:102888:102900	1462123	11	True				
ANR	1462333	Identifier	OP_CBRA		1462123	0					
ANR	1462334	ExpressionStatement	"next_code = code + GET ( code , 1 )"	3185:4:102906:102937	1462123	12	True				
ANR	1462335	AssignmentExpression	"next_code = code + GET ( code , 1 )"		1462123	0		=			
ANR	1462336	Identifier	next_code		1462123	0					
ANR	1462337	AdditiveExpression	"code + GET ( code , 1 )"		1462123	1		+			
ANR	1462338	Identifier	code		1462123	0					
ANR	1462339	CallExpression	"GET ( code , 1 )"		1462123	1					
ANR	1462340	Callee	GET		1462123	0					
ANR	1462341	Identifier	GET		1462123	0					
ANR	1462342	ArgumentList	code		1462123	1					
ANR	1462343	Argument	code		1462123	0					
ANR	1462344	Identifier	code		1462123	0					
ANR	1462345	Argument	1		1462123	1					
ANR	1462346	PrimaryExpression	1		1462123	0					
ANR	1462347	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3186:4:102943:102970	1462123	13	True				
ANR	1462348	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1462123	0		+=			
ANR	1462349	Identifier	code		1462123	0					
ANR	1462350	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1462123	1					
ANR	1462351	CallExpression	PRIV ( OP_lengths )		1462123	0					
ANR	1462352	Callee	PRIV		1462123	0					
ANR	1462353	Identifier	PRIV		1462123	0					
ANR	1462354	ArgumentList	OP_lengths		1462123	1					
ANR	1462355	Argument	OP_lengths		1462123	0					
ANR	1462356	Identifier	OP_lengths		1462123	0					
ANR	1462357	Identifier	c		1462123	1					
ANR	1462358	WhileStatement	while ( * next_code == OP_ALT )		1462123	14					
ANR	1462359	Condition	* next_code == OP_ALT	3188:11:102984:103003	1462123	0	True				
ANR	1462360	EqualityExpression	* next_code == OP_ALT		1462123	0		==			
ANR	1462361	UnaryOperationExpression	* next_code		1462123	0					
ANR	1462362	UnaryOperator	*		1462123	0					
ANR	1462363	Identifier	next_code		1462123	1					
ANR	1462364	Identifier	OP_ALT		1462123	1					
ANR	1462365	CompoundStatement		89:6:2295:2295	1462123	1					
ANR	1462366	IfStatement	"if ( ! compare_opcodes ( code , utf , cd , base_list , base_end , rec_limit ) )"		1462123	0					
ANR	1462367	Condition	"! compare_opcodes ( code , utf , cd , base_list , base_end , rec_limit )"	3190:10:103024:103086	1462123	0	True				
ANR	1462368	UnaryOperationExpression	"! compare_opcodes ( code , utf , cd , base_list , base_end , rec_limit )"		1462123	0					
ANR	1462369	UnaryOperator	!		1462123	0					
ANR	1462370	CallExpression	"compare_opcodes ( code , utf , cd , base_list , base_end , rec_limit )"		1462123	1					
ANR	1462371	Callee	compare_opcodes		1462123	0					
ANR	1462372	Identifier	compare_opcodes		1462123	0					
ANR	1462373	ArgumentList	code		1462123	1					
ANR	1462374	Argument	code		1462123	0					
ANR	1462375	Identifier	code		1462123	0					
ANR	1462376	Argument	utf		1462123	1					
ANR	1462377	Identifier	utf		1462123	0					
ANR	1462378	Argument	cd		1462123	2					
ANR	1462379	Identifier	cd		1462123	0					
ANR	1462380	Argument	base_list		1462123	3					
ANR	1462381	Identifier	base_list		1462123	0					
ANR	1462382	Argument	base_end		1462123	4					
ANR	1462383	Identifier	base_end		1462123	0					
ANR	1462384	Argument	rec_limit		1462123	5					
ANR	1462385	Identifier	rec_limit		1462123	0					
ANR	1462386	ReturnStatement	return FALSE ;	3191:8:103097:103109	1462123	1	True				
ANR	1462387	Identifier	FALSE		1462123	0					
ANR	1462388	ExpressionStatement	code = next_code + 1 + LINK_SIZE	3192:6:103117:103149	1462123	1	True				
ANR	1462389	AssignmentExpression	code = next_code + 1 + LINK_SIZE		1462123	0		=			
ANR	1462390	Identifier	code		1462123	0					
ANR	1462391	AdditiveExpression	next_code + 1 + LINK_SIZE		1462123	1		+			
ANR	1462392	Identifier	next_code		1462123	0					
ANR	1462393	AdditiveExpression	1 + LINK_SIZE		1462123	1		+			
ANR	1462394	PrimaryExpression	1		1462123	0					
ANR	1462395	Identifier	LINK_SIZE		1462123	1					
ANR	1462396	ExpressionStatement	"next_code += GET ( next_code , 1 )"	3193:6:103157:103187	1462123	2	True				
ANR	1462397	AssignmentExpression	"next_code += GET ( next_code , 1 )"		1462123	0		+=			
ANR	1462398	Identifier	next_code		1462123	0					
ANR	1462399	CallExpression	"GET ( next_code , 1 )"		1462123	1					
ANR	1462400	Callee	GET		1462123	0					
ANR	1462401	Identifier	GET		1462123	0					
ANR	1462402	ArgumentList	next_code		1462123	1					
ANR	1462403	Argument	next_code		1462123	0					
ANR	1462404	Identifier	next_code		1462123	0					
ANR	1462405	Argument	1		1462123	1					
ANR	1462406	PrimaryExpression	1		1462123	0					
ANR	1462407	ExpressionStatement	entered_a_group = TRUE	3196:4:103202:103224	1462123	15	True				
ANR	1462408	AssignmentExpression	entered_a_group = TRUE		1462123	0		=			
ANR	1462409	Identifier	entered_a_group		1462123	0					
ANR	1462410	Identifier	TRUE		1462123	1					
ANR	1462411	ContinueStatement	continue ;	3197:4:103230:103238	1462123	16	True				
ANR	1462412	Label	case OP_BRAZERO :	3199:4:103245:103260	1462123	17	True				
ANR	1462413	Identifier	OP_BRAZERO		1462123	0					
ANR	1462414	Label	case OP_BRAMINZERO :	3200:4:103266:103284	1462123	18	True				
ANR	1462415	Identifier	OP_BRAMINZERO		1462123	0					
ANR	1462416	ExpressionStatement	next_code = code + 1	3202:4:103291:103311	1462123	19	True				
ANR	1462417	AssignmentExpression	next_code = code + 1		1462123	0		=			
ANR	1462418	Identifier	next_code		1462123	0					
ANR	1462419	AdditiveExpression	code + 1		1462123	1		+			
ANR	1462420	Identifier	code		1462123	0					
ANR	1462421	PrimaryExpression	1		1462123	1					
ANR	1462422	IfStatement	if ( * next_code != OP_BRA && * next_code != OP_CBRA && * next_code != OP_ONCE && * next_code != OP_ONCE_NC )		1462123	20					
ANR	1462423	Condition	* next_code != OP_BRA && * next_code != OP_CBRA && * next_code != OP_ONCE && * next_code != OP_ONCE_NC	3203:8:103321:103426	1462123	0	True				
ANR	1462424	AndExpression	* next_code != OP_BRA && * next_code != OP_CBRA && * next_code != OP_ONCE && * next_code != OP_ONCE_NC		1462123	0		&&			
ANR	1462425	EqualityExpression	* next_code != OP_BRA		1462123	0		!=			
ANR	1462426	UnaryOperationExpression	* next_code		1462123	0					
ANR	1462427	UnaryOperator	*		1462123	0					
ANR	1462428	Identifier	next_code		1462123	1					
ANR	1462429	Identifier	OP_BRA		1462123	1					
ANR	1462430	AndExpression	* next_code != OP_CBRA && * next_code != OP_ONCE && * next_code != OP_ONCE_NC		1462123	1		&&			
ANR	1462431	EqualityExpression	* next_code != OP_CBRA		1462123	0		!=			
ANR	1462432	UnaryOperationExpression	* next_code		1462123	0					
ANR	1462433	UnaryOperator	*		1462123	0					
ANR	1462434	Identifier	next_code		1462123	1					
ANR	1462435	Identifier	OP_CBRA		1462123	1					
ANR	1462436	AndExpression	* next_code != OP_ONCE && * next_code != OP_ONCE_NC		1462123	1		&&			
ANR	1462437	EqualityExpression	* next_code != OP_ONCE		1462123	0		!=			
ANR	1462438	UnaryOperationExpression	* next_code		1462123	0					
ANR	1462439	UnaryOperator	*		1462123	0					
ANR	1462440	Identifier	next_code		1462123	1					
ANR	1462441	Identifier	OP_ONCE		1462123	1					
ANR	1462442	EqualityExpression	* next_code != OP_ONCE_NC		1462123	1		!=			
ANR	1462443	UnaryOperationExpression	* next_code		1462123	0					
ANR	1462444	UnaryOperator	*		1462123	0					
ANR	1462445	Identifier	next_code		1462123	1					
ANR	1462446	Identifier	OP_ONCE_NC		1462123	1					
ANR	1462447	ReturnStatement	return FALSE ;	3204:62:103429:103441	1462123	1	True				
ANR	1462448	Identifier	FALSE		1462123	0					
ANR	1462449	DoStatement	do		1462123	21					
ANR	1462450	ExpressionStatement	"next_code += GET ( next_code , 1 )"	3206:7:103451:103481	1462123	0	True				
ANR	1462451	AssignmentExpression	"next_code += GET ( next_code , 1 )"		1462123	0		+=			
ANR	1462452	Identifier	next_code		1462123	0					
ANR	1462453	CallExpression	"GET ( next_code , 1 )"		1462123	1					
ANR	1462454	Callee	GET		1462123	0					
ANR	1462455	Identifier	GET		1462123	0					
ANR	1462456	ArgumentList	next_code		1462123	1					
ANR	1462457	Argument	next_code		1462123	0					
ANR	1462458	Identifier	next_code		1462123	0					
ANR	1462459	Argument	1		1462123	1					
ANR	1462460	PrimaryExpression	1		1462123	0					
ANR	1462461	Condition	* next_code == OP_ALT	3206:46:103490:103509	1462123	1	True				
ANR	1462462	EqualityExpression	* next_code == OP_ALT		1462123	0		==			
ANR	1462463	UnaryOperationExpression	* next_code		1462123	0					
ANR	1462464	UnaryOperator	*		1462123	0					
ANR	1462465	Identifier	next_code		1462123	1					
ANR	1462466	Identifier	OP_ALT		1462123	1					
ANR	1462467	ExpressionStatement	next_code += 1 + LINK_SIZE	3210:4:103602:103628	1462123	22	True				
ANR	1462468	AssignmentExpression	next_code += 1 + LINK_SIZE		1462123	0		+=			
ANR	1462469	Identifier	next_code		1462123	0					
ANR	1462470	AdditiveExpression	1 + LINK_SIZE		1462123	1		+			
ANR	1462471	PrimaryExpression	1		1462123	0					
ANR	1462472	Identifier	LINK_SIZE		1462123	1					
ANR	1462473	IfStatement	"if ( ! compare_opcodes ( next_code , utf , cd , base_list , base_end , rec_limit ) )"		1462123	23					
ANR	1462474	Condition	"! compare_opcodes ( next_code , utf , cd , base_list , base_end , rec_limit )"	3211:8:103638:103705	1462123	0	True				
ANR	1462475	UnaryOperationExpression	"! compare_opcodes ( next_code , utf , cd , base_list , base_end , rec_limit )"		1462123	0					
ANR	1462476	UnaryOperator	!		1462123	0					
ANR	1462477	CallExpression	"compare_opcodes ( next_code , utf , cd , base_list , base_end , rec_limit )"		1462123	1					
ANR	1462478	Callee	compare_opcodes		1462123	0					
ANR	1462479	Identifier	compare_opcodes		1462123	0					
ANR	1462480	ArgumentList	next_code		1462123	1					
ANR	1462481	Argument	next_code		1462123	0					
ANR	1462482	Identifier	next_code		1462123	0					
ANR	1462483	Argument	utf		1462123	1					
ANR	1462484	Identifier	utf		1462123	0					
ANR	1462485	Argument	cd		1462123	2					
ANR	1462486	Identifier	cd		1462123	0					
ANR	1462487	Argument	base_list		1462123	3					
ANR	1462488	Identifier	base_list		1462123	0					
ANR	1462489	Argument	base_end		1462123	4					
ANR	1462490	Identifier	base_end		1462123	0					
ANR	1462491	Argument	rec_limit		1462123	5					
ANR	1462492	Identifier	rec_limit		1462123	0					
ANR	1462493	ReturnStatement	return FALSE ;	3212:6:103714:103726	1462123	1	True				
ANR	1462494	Identifier	FALSE		1462123	0					
ANR	1462495	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3214:4:103733:103760	1462123	24	True				
ANR	1462496	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1462123	0		+=			
ANR	1462497	Identifier	code		1462123	0					
ANR	1462498	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1462123	1					
ANR	1462499	CallExpression	PRIV ( OP_lengths )		1462123	0					
ANR	1462500	Callee	PRIV		1462123	0					
ANR	1462501	Identifier	PRIV		1462123	0					
ANR	1462502	ArgumentList	OP_lengths		1462123	1					
ANR	1462503	Argument	OP_lengths		1462123	0					
ANR	1462504	Identifier	OP_lengths		1462123	0					
ANR	1462505	Identifier	c		1462123	1					
ANR	1462506	ContinueStatement	continue ;	3215:4:103766:103774	1462123	25	True				
ANR	1462507	Label	default :	3217:4:103781:103788	1462123	26	True				
ANR	1462508	Identifier	default		1462123	0					
ANR	1462509	BreakStatement	break ;	3218:4:103794:103799	1462123	27	True				
ANR	1462510	ExpressionStatement	"code = get_chr_property_list ( code , utf , cd -> fcc , list )"	3223:2:103874:103928	1462123	4	True				
ANR	1462511	AssignmentExpression	"code = get_chr_property_list ( code , utf , cd -> fcc , list )"		1462123	0		=			
ANR	1462512	Identifier	code		1462123	0					
ANR	1462513	CallExpression	"get_chr_property_list ( code , utf , cd -> fcc , list )"		1462123	1					
ANR	1462514	Callee	get_chr_property_list		1462123	0					
ANR	1462515	Identifier	get_chr_property_list		1462123	0					
ANR	1462516	ArgumentList	code		1462123	1					
ANR	1462517	Argument	code		1462123	0					
ANR	1462518	Identifier	code		1462123	0					
ANR	1462519	Argument	utf		1462123	1					
ANR	1462520	Identifier	utf		1462123	0					
ANR	1462521	Argument	cd -> fcc		1462123	2					
ANR	1462522	PtrMemberAccess	cd -> fcc		1462123	0					
ANR	1462523	Identifier	cd		1462123	0					
ANR	1462524	Identifier	fcc		1462123	1					
ANR	1462525	Argument	list		1462123	3					
ANR	1462526	Identifier	list		1462123	0					
ANR	1462527	IfStatement	if ( code == NULL )		1462123	5					
ANR	1462528	Condition	code == NULL	3224:6:103936:103947	1462123	0	True				
ANR	1462529	EqualityExpression	code == NULL		1462123	0		==			
ANR	1462530	Identifier	code		1462123	0					
ANR	1462531	Identifier	NULL		1462123	1					
ANR	1462532	ReturnStatement	return FALSE ;	3224:20:103950:103962	1462123	1	True				
ANR	1462533	Identifier	FALSE		1462123	0					
ANR	1462534	ElseStatement	else		1462123	0					
ANR	1462535	CompoundStatement		243:4:6159:6186	1462123	0					
ANR	1462536	IdentifierDeclStatement	"pcre_uint32 leftop , rightop ;"	3343:4:106876:106903	1462123	0	True				
ANR	1462537	IdentifierDecl	leftop		1462123	0					
ANR	1462538	IdentifierDeclType	pcre_uint32		1462123	0					
ANR	1462539	Identifier	leftop		1462123	1					
ANR	1462540	IdentifierDecl	rightop		1462123	1					
ANR	1462541	IdentifierDeclType	pcre_uint32		1462123	0					
ANR	1462542	Identifier	rightop		1462123	1					
ANR	1462543	ExpressionStatement	leftop = base_list [ 0 ]	3345:4:106910:106931	1462123	1	True				
ANR	1462544	AssignmentExpression	leftop = base_list [ 0 ]		1462123	0		=			
ANR	1462545	Identifier	leftop		1462123	0					
ANR	1462546	ArrayIndexing	base_list [ 0 ]		1462123	1					
ANR	1462547	Identifier	base_list		1462123	0					
ANR	1462548	PrimaryExpression	0		1462123	1					
ANR	1462549	ExpressionStatement	rightop = list [ 0 ]	3346:4:106937:106954	1462123	2	True				
ANR	1462550	AssignmentExpression	rightop = list [ 0 ]		1462123	0		=			
ANR	1462551	Identifier	rightop		1462123	0					
ANR	1462552	ArrayIndexing	list [ 0 ]		1462123	1					
ANR	1462553	Identifier	list		1462123	0					
ANR	1462554	PrimaryExpression	0		1462123	1					
ANR	1462555	ExpressionStatement	accepted = FALSE	3349:4:106980:106996	1462123	3	True				
ANR	1462556	AssignmentExpression	accepted = FALSE		1462123	0		=			
ANR	1462557	Identifier	accepted		1462123	0					
ANR	1462558	Identifier	FALSE		1462123	1					
ANR	1462559	IfStatement	if ( leftop == OP_PROP || leftop == OP_NOTPROP )		1462123	4					
ANR	1462560	Condition	leftop == OP_PROP || leftop == OP_NOTPROP	3350:8:107044:107084	1462123	0	True				
ANR	1462561	OrExpression	leftop == OP_PROP || leftop == OP_NOTPROP		1462123	0		||			
ANR	1462562	EqualityExpression	leftop == OP_PROP		1462123	0		==			
ANR	1462563	Identifier	leftop		1462123	0					
ANR	1462564	Identifier	OP_PROP		1462123	1					
ANR	1462565	EqualityExpression	leftop == OP_NOTPROP		1462123	1		==			
ANR	1462566	Identifier	leftop		1462123	0					
ANR	1462567	Identifier	OP_NOTPROP		1462123	1					
ANR	1462568	CompoundStatement		251:6:6376:6376	1462123	1					
ANR	1462569	IfStatement	if ( rightop == OP_EOD )		1462123	0					
ANR	1462570	Condition	rightop == OP_EOD	3352:10:107105:107121	1462123	0	True				
ANR	1462571	EqualityExpression	rightop == OP_EOD		1462123	0		==			
ANR	1462572	Identifier	rightop		1462123	0					
ANR	1462573	Identifier	OP_EOD		1462123	1					
ANR	1462574	ExpressionStatement	accepted = TRUE	3353:8:107132:107147	1462123	1	True				
ANR	1462575	AssignmentExpression	accepted = TRUE		1462123	0		=			
ANR	1462576	Identifier	accepted		1462123	0					
ANR	1462577	Identifier	TRUE		1462123	1					
ANR	1462578	ElseStatement	else		1462123	0					
ANR	1462579	IfStatement	if ( rightop == OP_PROP || rightop == OP_NOTPROP )		1462123	0					
ANR	1462580	Condition	rightop == OP_PROP || rightop == OP_NOTPROP	3354:15:107164:107206	1462123	0	True				
ANR	1462581	OrExpression	rightop == OP_PROP || rightop == OP_NOTPROP		1462123	0		||			
ANR	1462582	EqualityExpression	rightop == OP_PROP		1462123	0		==			
ANR	1462583	Identifier	rightop		1462123	0					
ANR	1462584	Identifier	OP_PROP		1462123	1					
ANR	1462585	EqualityExpression	rightop == OP_NOTPROP		1462123	1		==			
ANR	1462586	Identifier	rightop		1462123	0					
ANR	1462587	Identifier	OP_NOTPROP		1462123	1					
ANR	1462588	CompoundStatement		261:8:6678:6712	1462123	1					
ANR	1462589	IdentifierDeclStatement	int n ;	3356:8:107227:107232	1462123	0	True				
ANR	1462590	IdentifierDecl	n		1462123	0					
ANR	1462591	IdentifierDeclType	int		1462123	0					
ANR	1462592	Identifier	n		1462123	1					
ANR	1462593	IdentifierDeclStatement	const pcre_uint8 * p ;	3357:8:107242:107261	1462123	1	True				
ANR	1462594	IdentifierDecl	* p		1462123	0					
ANR	1462595	IdentifierDeclType	const pcre_uint8 *		1462123	0					
ANR	1462596	Identifier	p		1462123	1					
ANR	1462597	IdentifierDeclStatement	BOOL same = leftop == rightop ;	3358:8:107271:107300	1462123	2	True				
ANR	1462598	IdentifierDecl	same = leftop == rightop		1462123	0					
ANR	1462599	IdentifierDeclType	BOOL		1462123	0					
ANR	1462600	Identifier	same		1462123	1					
ANR	1462601	AssignmentExpression	same = leftop == rightop		1462123	2		=			
ANR	1462602	Identifier	same		1462123	0					
ANR	1462603	EqualityExpression	leftop == rightop		1462123	1		==			
ANR	1462604	Identifier	leftop		1462123	0					
ANR	1462605	Identifier	rightop		1462123	1					
ANR	1462606	IdentifierDeclStatement	BOOL lisprop = leftop == OP_PROP ;	3359:8:107310:107342	1462123	3	True				
ANR	1462607	IdentifierDecl	lisprop = leftop == OP_PROP		1462123	0					
ANR	1462608	IdentifierDeclType	BOOL		1462123	0					
ANR	1462609	Identifier	lisprop		1462123	1					
ANR	1462610	AssignmentExpression	lisprop = leftop == OP_PROP		1462123	2		=			
ANR	1462611	Identifier	lisprop		1462123	0					
ANR	1462612	EqualityExpression	leftop == OP_PROP		1462123	1		==			
ANR	1462613	Identifier	leftop		1462123	0					
ANR	1462614	Identifier	OP_PROP		1462123	1					
ANR	1462615	IdentifierDeclStatement	BOOL risprop = rightop == OP_PROP ;	3360:8:107352:107385	1462123	4	True				
ANR	1462616	IdentifierDecl	risprop = rightop == OP_PROP		1462123	0					
ANR	1462617	IdentifierDeclType	BOOL		1462123	0					
ANR	1462618	Identifier	risprop		1462123	1					
ANR	1462619	AssignmentExpression	risprop = rightop == OP_PROP		1462123	2		=			
ANR	1462620	Identifier	risprop		1462123	0					
ANR	1462621	EqualityExpression	rightop == OP_PROP		1462123	1		==			
ANR	1462622	Identifier	rightop		1462123	0					
ANR	1462623	Identifier	OP_PROP		1462123	1					
ANR	1462624	IdentifierDeclStatement	BOOL bothprop = lisprop && risprop ;	3361:8:107395:107429	1462123	5	True				
ANR	1462625	IdentifierDecl	bothprop = lisprop && risprop		1462123	0					
ANR	1462626	IdentifierDeclType	BOOL		1462123	0					
ANR	1462627	Identifier	bothprop		1462123	1					
ANR	1462628	AssignmentExpression	bothprop = lisprop && risprop		1462123	2		=			
ANR	1462629	Identifier	bothprop		1462123	0					
ANR	1462630	AndExpression	lisprop && risprop		1462123	1		&&			
ANR	1462631	Identifier	lisprop		1462123	0					
ANR	1462632	Identifier	risprop		1462123	1					
ANR	1462633	ExpressionStatement	n = propposstab [ base_list [ 2 ] ] [ list [ 2 ] ]	3372:8:107856:107894	1462123	6	True				
ANR	1462634	AssignmentExpression	n = propposstab [ base_list [ 2 ] ] [ list [ 2 ] ]		1462123	0		=			
ANR	1462635	Identifier	n		1462123	0					
ANR	1462636	ArrayIndexing	propposstab [ base_list [ 2 ] ] [ list [ 2 ] ]		1462123	1					
ANR	1462637	ArrayIndexing	propposstab [ base_list [ 2 ] ]		1462123	0					
ANR	1462638	Identifier	propposstab		1462123	0					
ANR	1462639	ArrayIndexing	base_list [ 2 ]		1462123	1					
ANR	1462640	Identifier	base_list		1462123	0					
ANR	1462641	PrimaryExpression	2		1462123	1					
ANR	1462642	ArrayIndexing	list [ 2 ]		1462123	1					
ANR	1462643	Identifier	list		1462123	0					
ANR	1462644	PrimaryExpression	2		1462123	1					
ANR	1462645	SwitchStatement	switch ( n )		1462123	7					
ANR	1462646	Condition	n	3373:15:107911:107911	1462123	0	True				
ANR	1462647	Identifier	n		1462123	0					
ANR	1462648	CompoundStatement		274:10:7207:7207	1462123	1					
ANR	1462649	Label	case 0 :	3375:10:107936:107942	1462123	0	True				
ANR	1462650	BreakStatement	break ;	3375:18:107944:107949	1462123	1	True				
ANR	1462651	Label	case 1 :	3376:10:107961:107967	1462123	2	True				
ANR	1462652	ExpressionStatement	accepted = bothprop	3376:18:107969:107988	1462123	3	True				
ANR	1462653	AssignmentExpression	accepted = bothprop		1462123	0		=			
ANR	1462654	Identifier	accepted		1462123	0					
ANR	1462655	Identifier	bothprop		1462123	1					
ANR	1462656	BreakStatement	break ;	3376:39:107990:107995	1462123	4	True				
ANR	1462657	Label	case 2 :	3377:10:108007:108013	1462123	5	True				
ANR	1462658	ExpressionStatement	accepted = ( base_list [ 3 ] == list [ 3 ] ) != same	3377:18:108015:108059	1462123	6	True				
ANR	1462659	AssignmentExpression	accepted = ( base_list [ 3 ] == list [ 3 ] ) != same		1462123	0		=			
ANR	1462660	Identifier	accepted		1462123	0					
ANR	1462661	EqualityExpression	( base_list [ 3 ] == list [ 3 ] ) != same		1462123	1		!=			
ANR	1462662	EqualityExpression	base_list [ 3 ] == list [ 3 ]		1462123	0		==			
ANR	1462663	ArrayIndexing	base_list [ 3 ]		1462123	0					
ANR	1462664	Identifier	base_list		1462123	0					
ANR	1462665	PrimaryExpression	3		1462123	1					
ANR	1462666	ArrayIndexing	list [ 3 ]		1462123	1					
ANR	1462667	Identifier	list		1462123	0					
ANR	1462668	PrimaryExpression	3		1462123	1					
ANR	1462669	Identifier	same		1462123	1					
ANR	1462670	BreakStatement	break ;	3377:64:108061:108066	1462123	7	True				
ANR	1462671	Label	case 3 :	3378:10:108078:108084	1462123	8	True				
ANR	1462672	ExpressionStatement	accepted = ! same	3378:18:108086:108102	1462123	9	True				
ANR	1462673	AssignmentExpression	accepted = ! same		1462123	0		=			
ANR	1462674	Identifier	accepted		1462123	0					
ANR	1462675	UnaryOperationExpression	! same		1462123	1					
ANR	1462676	UnaryOperator	!		1462123	0					
ANR	1462677	Identifier	same		1462123	1					
ANR	1462678	BreakStatement	break ;	3378:36:108104:108109	1462123	10	True				
ANR	1462679	Label	case 4 :	3380:10:108122:108128	1462123	11	True				
ANR	1462680	ExpressionStatement	accepted = risprop && catposstab [ base_list [ 3 ] ] [ list [ 3 ] ] == same	3381:10:108196:108259	1462123	12	True				
ANR	1462681	AssignmentExpression	accepted = risprop && catposstab [ base_list [ 3 ] ] [ list [ 3 ] ] == same		1462123	0		=			
ANR	1462682	Identifier	accepted		1462123	0					
ANR	1462683	AndExpression	risprop && catposstab [ base_list [ 3 ] ] [ list [ 3 ] ] == same		1462123	1		&&			
ANR	1462684	Identifier	risprop		1462123	0					
ANR	1462685	EqualityExpression	catposstab [ base_list [ 3 ] ] [ list [ 3 ] ] == same		1462123	1		==			
ANR	1462686	ArrayIndexing	catposstab [ base_list [ 3 ] ] [ list [ 3 ] ]		1462123	0					
ANR	1462687	ArrayIndexing	catposstab [ base_list [ 3 ] ]		1462123	0					
ANR	1462688	Identifier	catposstab		1462123	0					
ANR	1462689	ArrayIndexing	base_list [ 3 ]		1462123	1					
ANR	1462690	Identifier	base_list		1462123	0					
ANR	1462691	PrimaryExpression	3		1462123	1					
ANR	1462692	ArrayIndexing	list [ 3 ]		1462123	1					
ANR	1462693	Identifier	list		1462123	0					
ANR	1462694	PrimaryExpression	3		1462123	1					
ANR	1462695	Identifier	same		1462123	1					
ANR	1462696	BreakStatement	break ;	3382:10:108271:108276	1462123	13	True				
ANR	1462697	Label	case 5 :	3384:10:108289:108295	1462123	14	True				
ANR	1462698	ExpressionStatement	accepted = lisprop && catposstab [ list [ 3 ] ] [ base_list [ 3 ] ] == same	3385:10:108363:108426	1462123	15	True				
ANR	1462699	AssignmentExpression	accepted = lisprop && catposstab [ list [ 3 ] ] [ base_list [ 3 ] ] == same		1462123	0		=			
ANR	1462700	Identifier	accepted		1462123	0					
ANR	1462701	AndExpression	lisprop && catposstab [ list [ 3 ] ] [ base_list [ 3 ] ] == same		1462123	1		&&			
ANR	1462702	Identifier	lisprop		1462123	0					
ANR	1462703	EqualityExpression	catposstab [ list [ 3 ] ] [ base_list [ 3 ] ] == same		1462123	1		==			
ANR	1462704	ArrayIndexing	catposstab [ list [ 3 ] ] [ base_list [ 3 ] ]		1462123	0					
ANR	1462705	ArrayIndexing	catposstab [ list [ 3 ] ]		1462123	0					
ANR	1462706	Identifier	catposstab		1462123	0					
ANR	1462707	ArrayIndexing	list [ 3 ]		1462123	1					
ANR	1462708	Identifier	list		1462123	0					
ANR	1462709	PrimaryExpression	3		1462123	1					
ANR	1462710	ArrayIndexing	base_list [ 3 ]		1462123	1					
ANR	1462711	Identifier	base_list		1462123	0					
ANR	1462712	PrimaryExpression	3		1462123	1					
ANR	1462713	Identifier	same		1462123	1					
ANR	1462714	BreakStatement	break ;	3386:10:108438:108443	1462123	16	True				
ANR	1462715	Label	case 6 :	3407:10:109625:109631	1462123	17	True				
ANR	1462716	Label	case 7 :	3408:10:109690:109696	1462123	18	True				
ANR	1462717	Label	case 8 :	3409:10:109752:109758	1462123	19	True				
ANR	1462718	ExpressionStatement	p = posspropstab [ n - 6 ]	3410:10:109813:109834	1462123	20	True				
ANR	1462719	AssignmentExpression	p = posspropstab [ n - 6 ]		1462123	0		=			
ANR	1462720	Identifier	p		1462123	0					
ANR	1462721	ArrayIndexing	posspropstab [ n - 6 ]		1462123	1					
ANR	1462722	Identifier	posspropstab		1462123	0					
ANR	1462723	AdditiveExpression	n - 6		1462123	1		-			
ANR	1462724	Identifier	n		1462123	0					
ANR	1462725	PrimaryExpression	6		1462123	1					
ANR	1462726	ExpressionStatement	accepted = risprop && lisprop == ( list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop ) )	3411:10:109846:109985	1462123	21	True				
ANR	1462727	AssignmentExpression	accepted = risprop && lisprop == ( list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop ) )		1462123	0		=			
ANR	1462728	Identifier	accepted		1462123	0					
ANR	1462729	AndExpression	risprop && lisprop == ( list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop ) )		1462123	1		&&			
ANR	1462730	Identifier	risprop		1462123	0					
ANR	1462731	EqualityExpression	lisprop == ( list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop ) )		1462123	1		==			
ANR	1462732	Identifier	lisprop		1462123	0					
ANR	1462733	AndExpression	list [ 3 ] != p [ 0 ] && list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop )		1462123	1		&&			
ANR	1462734	EqualityExpression	list [ 3 ] != p [ 0 ]		1462123	0		!=			
ANR	1462735	ArrayIndexing	list [ 3 ]		1462123	0					
ANR	1462736	Identifier	list		1462123	0					
ANR	1462737	PrimaryExpression	3		1462123	1					
ANR	1462738	ArrayIndexing	p [ 0 ]		1462123	1					
ANR	1462739	Identifier	p		1462123	0					
ANR	1462740	PrimaryExpression	0		1462123	1					
ANR	1462741	AndExpression	list [ 3 ] != p [ 1 ] && ( list [ 3 ] != p [ 2 ] || ! lisprop )		1462123	1		&&			
ANR	1462742	EqualityExpression	list [ 3 ] != p [ 1 ]		1462123	0		!=			
ANR	1462743	ArrayIndexing	list [ 3 ]		1462123	0					
ANR	1462744	Identifier	list		1462123	0					
ANR	1462745	PrimaryExpression	3		1462123	1					
ANR	1462746	ArrayIndexing	p [ 1 ]		1462123	1					
ANR	1462747	Identifier	p		1462123	0					
ANR	1462748	PrimaryExpression	1		1462123	1					
ANR	1462749	OrExpression	list [ 3 ] != p [ 2 ] || ! lisprop		1462123	1		||			
ANR	1462750	EqualityExpression	list [ 3 ] != p [ 2 ]		1462123	0		!=			
ANR	1462751	ArrayIndexing	list [ 3 ]		1462123	0					
ANR	1462752	Identifier	list		1462123	0					
ANR	1462753	PrimaryExpression	3		1462123	1					
ANR	1462754	ArrayIndexing	p [ 2 ]		1462123	1					
ANR	1462755	Identifier	p		1462123	0					
ANR	1462756	PrimaryExpression	2		1462123	1					
ANR	1462757	UnaryOperationExpression	! lisprop		1462123	1					
ANR	1462758	UnaryOperator	!		1462123	0					
ANR	1462759	Identifier	lisprop		1462123	1					
ANR	1462760	BreakStatement	break ;	3415:10:109997:110002	1462123	22	True				
ANR	1462761	Label	case 9 :	3417:10:110015:110021	1462123	23	True				
ANR	1462762	Label	case 10 :	3418:10:110081:110088	1462123	24	True				
ANR	1462763	Label	case 11 :	3419:10:110144:110151	1462123	25	True				
ANR	1462764	ExpressionStatement	p = posspropstab [ n - 9 ]	3420:10:110206:110227	1462123	26	True				
ANR	1462765	AssignmentExpression	p = posspropstab [ n - 9 ]		1462123	0		=			
ANR	1462766	Identifier	p		1462123	0					
ANR	1462767	ArrayIndexing	posspropstab [ n - 9 ]		1462123	1					
ANR	1462768	Identifier	posspropstab		1462123	0					
ANR	1462769	AdditiveExpression	n - 9		1462123	1		-			
ANR	1462770	Identifier	n		1462123	0					
ANR	1462771	PrimaryExpression	9		1462123	1					
ANR	1462772	ExpressionStatement	accepted = lisprop && risprop == ( base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop ) )	3421:10:110239:110393	1462123	27	True				
ANR	1462773	AssignmentExpression	accepted = lisprop && risprop == ( base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop ) )		1462123	0		=			
ANR	1462774	Identifier	accepted		1462123	0					
ANR	1462775	AndExpression	lisprop && risprop == ( base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop ) )		1462123	1		&&			
ANR	1462776	Identifier	lisprop		1462123	0					
ANR	1462777	EqualityExpression	risprop == ( base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop ) )		1462123	1		==			
ANR	1462778	Identifier	risprop		1462123	0					
ANR	1462779	AndExpression	base_list [ 3 ] != p [ 0 ] && base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop )		1462123	1		&&			
ANR	1462780	EqualityExpression	base_list [ 3 ] != p [ 0 ]		1462123	0		!=			
ANR	1462781	ArrayIndexing	base_list [ 3 ]		1462123	0					
ANR	1462782	Identifier	base_list		1462123	0					
ANR	1462783	PrimaryExpression	3		1462123	1					
ANR	1462784	ArrayIndexing	p [ 0 ]		1462123	1					
ANR	1462785	Identifier	p		1462123	0					
ANR	1462786	PrimaryExpression	0		1462123	1					
ANR	1462787	AndExpression	base_list [ 3 ] != p [ 1 ] && ( base_list [ 3 ] != p [ 2 ] || ! risprop )		1462123	1		&&			
ANR	1462788	EqualityExpression	base_list [ 3 ] != p [ 1 ]		1462123	0		!=			
ANR	1462789	ArrayIndexing	base_list [ 3 ]		1462123	0					
ANR	1462790	Identifier	base_list		1462123	0					
ANR	1462791	PrimaryExpression	3		1462123	1					
ANR	1462792	ArrayIndexing	p [ 1 ]		1462123	1					
ANR	1462793	Identifier	p		1462123	0					
ANR	1462794	PrimaryExpression	1		1462123	1					
ANR	1462795	OrExpression	base_list [ 3 ] != p [ 2 ] || ! risprop		1462123	1		||			
ANR	1462796	EqualityExpression	base_list [ 3 ] != p [ 2 ]		1462123	0		!=			
ANR	1462797	ArrayIndexing	base_list [ 3 ]		1462123	0					
ANR	1462798	Identifier	base_list		1462123	0					
ANR	1462799	PrimaryExpression	3		1462123	1					
ANR	1462800	ArrayIndexing	p [ 2 ]		1462123	1					
ANR	1462801	Identifier	p		1462123	0					
ANR	1462802	PrimaryExpression	2		1462123	1					
ANR	1462803	UnaryOperationExpression	! risprop		1462123	1					
ANR	1462804	UnaryOperator	!		1462123	0					
ANR	1462805	Identifier	risprop		1462123	1					
ANR	1462806	BreakStatement	break ;	3425:10:110405:110410	1462123	28	True				
ANR	1462807	Label	case 12 :	3427:10:110423:110430	1462123	29	True				
ANR	1462808	Label	case 13 :	3428:10:110492:110499	1462123	30	True				
ANR	1462809	Label	case 14 :	3429:10:110558:110565	1462123	31	True				
ANR	1462810	ExpressionStatement	p = posspropstab [ n - 12 ]	3430:10:110623:110645	1462123	32	True				
ANR	1462811	AssignmentExpression	p = posspropstab [ n - 12 ]		1462123	0		=			
ANR	1462812	Identifier	p		1462123	0					
ANR	1462813	ArrayIndexing	posspropstab [ n - 12 ]		1462123	1					
ANR	1462814	Identifier	posspropstab		1462123	0					
ANR	1462815	AdditiveExpression	n - 12		1462123	1		-			
ANR	1462816	Identifier	n		1462123	0					
ANR	1462817	PrimaryExpression	12		1462123	1					
ANR	1462818	ExpressionStatement	accepted = risprop && lisprop == ( catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop ) )	3431:10:110657:110816	1462123	33	True				
ANR	1462819	AssignmentExpression	accepted = risprop && lisprop == ( catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop ) )		1462123	0		=			
ANR	1462820	Identifier	accepted		1462123	0					
ANR	1462821	AndExpression	risprop && lisprop == ( catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop ) )		1462123	1		&&			
ANR	1462822	Identifier	risprop		1462123	0					
ANR	1462823	EqualityExpression	lisprop == ( catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop ) )		1462123	1		==			
ANR	1462824	Identifier	lisprop		1462123	0					
ANR	1462825	AndExpression	catposstab [ p [ 0 ] ] [ list [ 3 ] ] && catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop )		1462123	1		&&			
ANR	1462826	ArrayIndexing	catposstab [ p [ 0 ] ] [ list [ 3 ] ]		1462123	0					
ANR	1462827	ArrayIndexing	catposstab [ p [ 0 ] ]		1462123	0					
ANR	1462828	Identifier	catposstab		1462123	0					
ANR	1462829	ArrayIndexing	p [ 0 ]		1462123	1					
ANR	1462830	Identifier	p		1462123	0					
ANR	1462831	PrimaryExpression	0		1462123	1					
ANR	1462832	ArrayIndexing	list [ 3 ]		1462123	1					
ANR	1462833	Identifier	list		1462123	0					
ANR	1462834	PrimaryExpression	3		1462123	1					
ANR	1462835	AndExpression	catposstab [ p [ 1 ] ] [ list [ 3 ] ] && ( list [ 3 ] != p [ 3 ] || ! lisprop )		1462123	1		&&			
ANR	1462836	ArrayIndexing	catposstab [ p [ 1 ] ] [ list [ 3 ] ]		1462123	0					
ANR	1462837	ArrayIndexing	catposstab [ p [ 1 ] ]		1462123	0					
ANR	1462838	Identifier	catposstab		1462123	0					
ANR	1462839	ArrayIndexing	p [ 1 ]		1462123	1					
ANR	1462840	Identifier	p		1462123	0					
ANR	1462841	PrimaryExpression	1		1462123	1					
ANR	1462842	ArrayIndexing	list [ 3 ]		1462123	1					
ANR	1462843	Identifier	list		1462123	0					
ANR	1462844	PrimaryExpression	3		1462123	1					
ANR	1462845	OrExpression	list [ 3 ] != p [ 3 ] || ! lisprop		1462123	1		||			
ANR	1462846	EqualityExpression	list [ 3 ] != p [ 3 ]		1462123	0		!=			
ANR	1462847	ArrayIndexing	list [ 3 ]		1462123	0					
ANR	1462848	Identifier	list		1462123	0					
ANR	1462849	PrimaryExpression	3		1462123	1					
ANR	1462850	ArrayIndexing	p [ 3 ]		1462123	1					
ANR	1462851	Identifier	p		1462123	0					
ANR	1462852	PrimaryExpression	3		1462123	1					
ANR	1462853	UnaryOperationExpression	! lisprop		1462123	1					
ANR	1462854	UnaryOperator	!		1462123	0					
ANR	1462855	Identifier	lisprop		1462123	1					
ANR	1462856	BreakStatement	break ;	3435:10:110828:110833	1462123	34	True				
ANR	1462857	Label	case 15 :	3437:10:110846:110853	1462123	35	True				
ANR	1462858	Label	case 16 :	3438:10:110915:110922	1462123	36	True				
ANR	1462859	Label	case 17 :	3439:10:110981:110988	1462123	37	True				
ANR	1462860	ExpressionStatement	p = posspropstab [ n - 15 ]	3440:10:111046:111068	1462123	38	True				
ANR	1462861	AssignmentExpression	p = posspropstab [ n - 15 ]		1462123	0		=			
ANR	1462862	Identifier	p		1462123	0					
ANR	1462863	ArrayIndexing	posspropstab [ n - 15 ]		1462123	1					
ANR	1462864	Identifier	posspropstab		1462123	0					
ANR	1462865	AdditiveExpression	n - 15		1462123	1		-			
ANR	1462866	Identifier	n		1462123	0					
ANR	1462867	PrimaryExpression	15		1462123	1					
ANR	1462868	ExpressionStatement	accepted = lisprop && risprop == ( catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop ) )	3441:10:111080:111254	1462123	39	True				
ANR	1462869	AssignmentExpression	accepted = lisprop && risprop == ( catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop ) )		1462123	0		=			
ANR	1462870	Identifier	accepted		1462123	0					
ANR	1462871	AndExpression	lisprop && risprop == ( catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop ) )		1462123	1		&&			
ANR	1462872	Identifier	lisprop		1462123	0					
ANR	1462873	EqualityExpression	risprop == ( catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop ) )		1462123	1		==			
ANR	1462874	Identifier	risprop		1462123	0					
ANR	1462875	AndExpression	catposstab [ p [ 0 ] ] [ base_list [ 3 ] ] && catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop )		1462123	1		&&			
ANR	1462876	ArrayIndexing	catposstab [ p [ 0 ] ] [ base_list [ 3 ] ]		1462123	0					
ANR	1462877	ArrayIndexing	catposstab [ p [ 0 ] ]		1462123	0					
ANR	1462878	Identifier	catposstab		1462123	0					
ANR	1462879	ArrayIndexing	p [ 0 ]		1462123	1					
ANR	1462880	Identifier	p		1462123	0					
ANR	1462881	PrimaryExpression	0		1462123	1					
ANR	1462882	ArrayIndexing	base_list [ 3 ]		1462123	1					
ANR	1462883	Identifier	base_list		1462123	0					
ANR	1462884	PrimaryExpression	3		1462123	1					
ANR	1462885	AndExpression	catposstab [ p [ 1 ] ] [ base_list [ 3 ] ] && ( base_list [ 3 ] != p [ 3 ] || ! risprop )		1462123	1		&&			
ANR	1462886	ArrayIndexing	catposstab [ p [ 1 ] ] [ base_list [ 3 ] ]		1462123	0					
ANR	1462887	ArrayIndexing	catposstab [ p [ 1 ] ]		1462123	0					
ANR	1462888	Identifier	catposstab		1462123	0					
ANR	1462889	ArrayIndexing	p [ 1 ]		1462123	1					
ANR	1462890	Identifier	p		1462123	0					
ANR	1462891	PrimaryExpression	1		1462123	1					
ANR	1462892	ArrayIndexing	base_list [ 3 ]		1462123	1					
ANR	1462893	Identifier	base_list		1462123	0					
ANR	1462894	PrimaryExpression	3		1462123	1					
ANR	1462895	OrExpression	base_list [ 3 ] != p [ 3 ] || ! risprop		1462123	1		||			
ANR	1462896	EqualityExpression	base_list [ 3 ] != p [ 3 ]		1462123	0		!=			
ANR	1462897	ArrayIndexing	base_list [ 3 ]		1462123	0					
ANR	1462898	Identifier	base_list		1462123	0					
ANR	1462899	PrimaryExpression	3		1462123	1					
ANR	1462900	ArrayIndexing	p [ 3 ]		1462123	1					
ANR	1462901	Identifier	p		1462123	0					
ANR	1462902	PrimaryExpression	3		1462123	1					
ANR	1462903	UnaryOperationExpression	! risprop		1462123	1					
ANR	1462904	UnaryOperator	!		1462123	0					
ANR	1462905	Identifier	risprop		1462123	1					
ANR	1462906	BreakStatement	break ;	3445:10:111266:111271	1462123	40	True				
ANR	1462907	ElseStatement	else		1462123	0					
ANR	1462908	ExpressionStatement	accepted = leftop >= FIRST_AUTOTAB_OP && leftop <= LAST_AUTOTAB_LEFT_OP && rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]	3453:4:111344:111574	1462123	0	True				
ANR	1462909	AssignmentExpression	accepted = leftop >= FIRST_AUTOTAB_OP && leftop <= LAST_AUTOTAB_LEFT_OP && rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		1462123	0		=			
ANR	1462910	Identifier	accepted		1462123	0					
ANR	1462911	AndExpression	leftop >= FIRST_AUTOTAB_OP && leftop <= LAST_AUTOTAB_LEFT_OP && rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		1462123	1		&&			
ANR	1462912	RelationalExpression	leftop >= FIRST_AUTOTAB_OP		1462123	0		>=			
ANR	1462913	Identifier	leftop		1462123	0					
ANR	1462914	Identifier	FIRST_AUTOTAB_OP		1462123	1					
ANR	1462915	AndExpression	leftop <= LAST_AUTOTAB_LEFT_OP && rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		1462123	1		&&			
ANR	1462916	RelationalExpression	leftop <= LAST_AUTOTAB_LEFT_OP		1462123	0		<=			
ANR	1462917	Identifier	leftop		1462123	0					
ANR	1462918	Identifier	LAST_AUTOTAB_LEFT_OP		1462123	1					
ANR	1462919	AndExpression	rightop >= FIRST_AUTOTAB_OP && rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		1462123	1		&&			
ANR	1462920	RelationalExpression	rightop >= FIRST_AUTOTAB_OP		1462123	0		>=			
ANR	1462921	Identifier	rightop		1462123	0					
ANR	1462922	Identifier	FIRST_AUTOTAB_OP		1462123	1					
ANR	1462923	AndExpression	rightop <= LAST_AUTOTAB_RIGHT_OP && autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		1462123	1		&&			
ANR	1462924	RelationalExpression	rightop <= LAST_AUTOTAB_RIGHT_OP		1462123	0		<=			
ANR	1462925	Identifier	rightop		1462123	0					
ANR	1462926	Identifier	LAST_AUTOTAB_RIGHT_OP		1462123	1					
ANR	1462927	ArrayIndexing	autoposstab [ leftop - FIRST_AUTOTAB_OP ] [ rightop - FIRST_AUTOTAB_OP ]		1462123	1					
ANR	1462928	ArrayIndexing	autoposstab [ leftop - FIRST_AUTOTAB_OP ]		1462123	0					
ANR	1462929	Identifier	autoposstab		1462123	0					
ANR	1462930	AdditiveExpression	leftop - FIRST_AUTOTAB_OP		1462123	1		-			
ANR	1462931	Identifier	leftop		1462123	0					
ANR	1462932	Identifier	FIRST_AUTOTAB_OP		1462123	1					
ANR	1462933	AdditiveExpression	rightop - FIRST_AUTOTAB_OP		1462123	1		-			
ANR	1462934	Identifier	rightop		1462123	0					
ANR	1462935	Identifier	FIRST_AUTOTAB_OP		1462123	1					
ANR	1462936	IfStatement	if ( ! accepted )		1462123	5					
ANR	1462937	Condition	! accepted	3457:8:111585:111593	1462123	0	True				
ANR	1462938	UnaryOperationExpression	! accepted		1462123	0					
ANR	1462939	UnaryOperator	!		1462123	0					
ANR	1462940	Identifier	accepted		1462123	1					
ANR	1462941	ReturnStatement	return FALSE ;	3457:19:111596:111608	1462123	1	True				
ANR	1462942	Identifier	FALSE		1462123	0					
ANR	1462943	IfStatement	if ( list [ 1 ] == 0 )		1462123	6					
ANR	1462944	Condition	list [ 1 ] == 0	3459:8:111619:111630	1462123	0	True				
ANR	1462945	EqualityExpression	list [ 1 ] == 0		1462123	0		==			
ANR	1462946	ArrayIndexing	list [ 1 ]		1462123	0					
ANR	1462947	Identifier	list		1462123	0					
ANR	1462948	PrimaryExpression	1		1462123	1					
ANR	1462949	PrimaryExpression	0		1462123	1					
ANR	1462950	ReturnStatement	return TRUE ;	3459:22:111633:111644	1462123	1	True				
ANR	1462951	Identifier	TRUE		1462123	0					
ANR	1462952	ContinueStatement	continue ;	3461:4:111686:111694	1462123	7	True				
ANR	1462953	IfStatement	if ( base_list [ 0 ] == OP_CHAR )		1462123	6					
ANR	1462954	Condition	base_list [ 0 ] == OP_CHAR	3229:6:104139:104161	1462123	0	True				
ANR	1462955	EqualityExpression	base_list [ 0 ] == OP_CHAR		1462123	0		==			
ANR	1462956	ArrayIndexing	base_list [ 0 ]		1462123	0					
ANR	1462957	Identifier	base_list		1462123	0					
ANR	1462958	PrimaryExpression	0		1462123	1					
ANR	1462959	Identifier	OP_CHAR		1462123	1					
ANR	1462960	CompoundStatement		130:4:3451:3451	1462123	1					
ANR	1462961	ExpressionStatement	chr_ptr = base_list + 2	3231:4:104174:104197	1462123	0	True				
ANR	1462962	AssignmentExpression	chr_ptr = base_list + 2		1462123	0		=			
ANR	1462963	Identifier	chr_ptr		1462123	0					
ANR	1462964	AdditiveExpression	base_list + 2		1462123	1		+			
ANR	1462965	Identifier	base_list		1462123	0					
ANR	1462966	PrimaryExpression	2		1462123	1					
ANR	1462967	ExpressionStatement	list_ptr = list	3232:4:104203:104218	1462123	1	True				
ANR	1462968	AssignmentExpression	list_ptr = list		1462123	0		=			
ANR	1462969	Identifier	list_ptr		1462123	0					
ANR	1462970	Identifier	list		1462123	1					
ANR	1462971	ElseStatement	else		1462123	0					
ANR	1462972	IfStatement	if ( list [ 0 ] == OP_CHAR )		1462123	0					
ANR	1462973	Condition	list [ 0 ] == OP_CHAR	3234:11:104237:104254	1462123	0	True				
ANR	1462974	EqualityExpression	list [ 0 ] == OP_CHAR		1462123	0		==			
ANR	1462975	ArrayIndexing	list [ 0 ]		1462123	0					
ANR	1462976	Identifier	list		1462123	0					
ANR	1462977	PrimaryExpression	0		1462123	1					
ANR	1462978	Identifier	OP_CHAR		1462123	1					
ANR	1462979	CompoundStatement		135:4:3544:3544	1462123	1					
ANR	1462980	ExpressionStatement	chr_ptr = list + 2	3236:4:104267:104285	1462123	0	True				
ANR	1462981	AssignmentExpression	chr_ptr = list + 2		1462123	0		=			
ANR	1462982	Identifier	chr_ptr		1462123	0					
ANR	1462983	AdditiveExpression	list + 2		1462123	1		+			
ANR	1462984	Identifier	list		1462123	0					
ANR	1462985	PrimaryExpression	2		1462123	1					
ANR	1462986	ExpressionStatement	list_ptr = base_list	3237:4:104291:104311	1462123	1	True				
ANR	1462987	AssignmentExpression	list_ptr = base_list		1462123	0		=			
ANR	1462988	Identifier	list_ptr		1462123	0					
ANR	1462989	Identifier	base_list		1462123	1					
ANR	1462990	ElseStatement	else		1462123	0					
ANR	1462991	Statement	if	3242:7:104395:104396	1462123	0	True				
ANR	1462992	Statement	(	3242:10:104398:104398	1462123	7	True				
ANR	1462993	Statement	base_list	3242:11:104399:104407	1462123	8	True				
ANR	1462994	Statement	[	3242:20:104408:104408	1462123	9	True				
ANR	1462995	Statement	0	3242:21:104409:104409	1462123	10	True				
ANR	1462996	Statement	]	3242:22:104410:104410	1462123	11	True				
ANR	1462997	Statement	==	3242:24:104412:104413	1462123	12	True				
ANR	1462998	Statement	OP_CLASS	3242:27:104415:104422	1462123	13	True				
ANR	1462999	Statement	||	3242:36:104424:104425	1462123	14	True				
ANR	1463000	Statement	list	3242:39:104427:104430	1462123	15	True				
ANR	1463001	Statement	[	3242:43:104431:104431	1462123	16	True				
ANR	1463002	Statement	0	3242:44:104432:104432	1462123	17	True				
ANR	1463003	Statement	]	3242:45:104433:104433	1462123	18	True				
ANR	1463004	Statement	==	3242:47:104435:104436	1462123	19	True				
ANR	1463005	Statement	OP_CLASS	3242:50:104438:104445	1462123	20	True				
ANR	1463006	Statement	||	3245:6:104547:104548	1462123	21	True				
ANR	1463007	Statement	(	3245:9:104550:104550	1462123	22	True				
ANR	1463008	Statement	!	3245:10:104551:104551	1462123	23	True				
ANR	1463009	Statement	utf	3245:11:104552:104554	1462123	24	True				
ANR	1463010	Statement	&&	3245:15:104556:104557	1462123	25	True				
ANR	1463011	Statement	(	3245:18:104559:104559	1462123	26	True				
ANR	1463012	Statement	base_list	3245:19:104560:104568	1462123	27	True				
ANR	1463013	Statement	[	3245:28:104569:104569	1462123	28	True				
ANR	1463014	Statement	0	3245:29:104570:104570	1462123	29	True				
ANR	1463015	Statement	]	3245:30:104571:104571	1462123	30	True				
ANR	1463016	Statement	==	3245:32:104573:104574	1462123	31	True				
ANR	1463017	Statement	OP_NCLASS	3245:35:104576:104584	1462123	32	True				
ANR	1463018	Statement	||	3245:45:104586:104587	1462123	33	True				
ANR	1463019	Statement	list	3245:48:104589:104592	1462123	34	True				
ANR	1463020	Statement	[	3245:52:104593:104593	1462123	35	True				
ANR	1463021	Statement	0	3245:53:104594:104594	1462123	36	True				
ANR	1463022	Statement	]	3245:54:104595:104595	1462123	37	True				
ANR	1463023	Statement	==	3245:56:104597:104598	1462123	38	True				
ANR	1463024	Statement	OP_NCLASS	3245:59:104600:104608	1462123	39	True				
ANR	1463025	Statement	)	3245:68:104609:104609	1462123	40	True				
ANR	1463026	Statement	)	3245:69:104610:104610	1462123	41	True				
ANR	1463027	Statement	)	3247:6:104625:104625	1462123	42	True				
ANR	1463028	CompoundStatement		148:4:3914:3914	1462123	43					
ANR	1463029	IfStatement	if ( base_list [ 0 ] == OP_CLASS || ( ! utf && base_list [ 0 ] == OP_NCLASS ) )		1462123	0					
ANR	1463030	Condition	base_list [ 0 ] == OP_CLASS || ( ! utf && base_list [ 0 ] == OP_NCLASS )	3250:8:104662:104724	1462123	0	True				
ANR	1463031	OrExpression	base_list [ 0 ] == OP_CLASS || ( ! utf && base_list [ 0 ] == OP_NCLASS )		1462123	0		||			
ANR	1463032	EqualityExpression	base_list [ 0 ] == OP_CLASS		1462123	0		==			
ANR	1463033	ArrayIndexing	base_list [ 0 ]		1462123	0					
ANR	1463034	Identifier	base_list		1462123	0					
ANR	1463035	PrimaryExpression	0		1462123	1					
ANR	1463036	Identifier	OP_CLASS		1462123	1					
ANR	1463037	AndExpression	! utf && base_list [ 0 ] == OP_NCLASS		1462123	1		&&			
ANR	1463038	UnaryOperationExpression	! utf		1462123	0					
ANR	1463039	UnaryOperator	!		1462123	0					
ANR	1463040	Identifier	utf		1462123	1					
ANR	1463041	EqualityExpression	base_list [ 0 ] == OP_NCLASS		1462123	1		==			
ANR	1463042	ArrayIndexing	base_list [ 0 ]		1462123	0					
ANR	1463043	Identifier	base_list		1462123	0					
ANR	1463044	PrimaryExpression	0		1462123	1					
ANR	1463045	Identifier	OP_NCLASS		1462123	1					
ANR	1463046	CompoundStatement		154:6:4063:4063	1462123	1					
ANR	1463047	ExpressionStatement	set1 = ( pcre_uint8 * ) ( base_end - base_list [ 2 ] )	3255:6:104788:104834	1462123	0	True				
ANR	1463048	AssignmentExpression	set1 = ( pcre_uint8 * ) ( base_end - base_list [ 2 ] )		1462123	0		=			
ANR	1463049	Identifier	set1		1462123	0					
ANR	1463050	CastExpression	( pcre_uint8 * ) ( base_end - base_list [ 2 ] )		1462123	1					
ANR	1463051	CastTarget	pcre_uint8 *		1462123	0					
ANR	1463052	AdditiveExpression	base_end - base_list [ 2 ]		1462123	1		-			
ANR	1463053	Identifier	base_end		1462123	0					
ANR	1463054	ArrayIndexing	base_list [ 2 ]		1462123	1					
ANR	1463055	Identifier	base_list		1462123	0					
ANR	1463056	PrimaryExpression	2		1462123	1					
ANR	1463057	ExpressionStatement	list_ptr = list	3256:6:104842:104857	1462123	1	True				
ANR	1463058	AssignmentExpression	list_ptr = list		1462123	0		=			
ANR	1463059	Identifier	list_ptr		1462123	0					
ANR	1463060	Identifier	list		1462123	1					
ANR	1463061	ElseStatement	else		1462123	0					
ANR	1463062	CompoundStatement		159:6:4165:4165	1462123	0					
ANR	1463063	ExpressionStatement	set1 = ( pcre_uint8 * ) ( code - list [ 2 ] )	3260:6:104890:104927	1462123	0	True				
ANR	1463064	AssignmentExpression	set1 = ( pcre_uint8 * ) ( code - list [ 2 ] )		1462123	0		=			
ANR	1463065	Identifier	set1		1462123	0					
ANR	1463066	CastExpression	( pcre_uint8 * ) ( code - list [ 2 ] )		1462123	1					
ANR	1463067	CastTarget	pcre_uint8 *		1462123	0					
ANR	1463068	AdditiveExpression	code - list [ 2 ]		1462123	1		-			
ANR	1463069	Identifier	code		1462123	0					
ANR	1463070	ArrayIndexing	list [ 2 ]		1462123	1					
ANR	1463071	Identifier	list		1462123	0					
ANR	1463072	PrimaryExpression	2		1462123	1					
ANR	1463073	ExpressionStatement	list_ptr = base_list	3261:6:104935:104955	1462123	1	True				
ANR	1463074	AssignmentExpression	list_ptr = base_list		1462123	0		=			
ANR	1463075	Identifier	list_ptr		1462123	0					
ANR	1463076	Identifier	base_list		1462123	1					
ANR	1463077	ExpressionStatement	invert_bits = FALSE	3264:4:104970:104989	1462123	1	True				
ANR	1463078	AssignmentExpression	invert_bits = FALSE		1462123	0		=			
ANR	1463079	Identifier	invert_bits		1462123	0					
ANR	1463080	Identifier	FALSE		1462123	1					
ANR	1463081	SwitchStatement	switch ( list_ptr [ 0 ] )		1462123	2					
ANR	1463082	Condition	list_ptr [ 0 ]	3265:11:105002:105012	1462123	0	True				
ANR	1463083	ArrayIndexing	list_ptr [ 0 ]		1462123	0					
ANR	1463084	Identifier	list_ptr		1462123	0					
ANR	1463085	PrimaryExpression	0		1462123	1					
ANR	1463086	CompoundStatement		166:6:4304:4304	1462123	1					
ANR	1463087	Label	case OP_CLASS :	3267:6:105029:105042	1462123	0	True				
ANR	1463088	Identifier	OP_CLASS		1462123	0					
ANR	1463089	Label	case OP_NCLASS :	3268:6:105050:105064	1462123	1	True				
ANR	1463090	Identifier	OP_NCLASS		1462123	0					
ANR	1463091	ExpressionStatement	set2 = ( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )	3269:6:105072:105154	1462123	2	True				
ANR	1463092	AssignmentExpression	set2 = ( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )		1462123	0		=			
ANR	1463093	Identifier	set2		1462123	0					
ANR	1463094	CastExpression	( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )		1462123	1					
ANR	1463095	CastTarget	pcre_uint8 *		1462123	0					
ANR	1463096	AdditiveExpression	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ]		1462123	1		-			
ANR	1463097	ConditionalExpression	list_ptr == list ? code : base_end		1462123	0					
ANR	1463098	Condition	list_ptr == list		1462123	0					
ANR	1463099	EqualityExpression	list_ptr == list		1462123	0		==			
ANR	1463100	Identifier	list_ptr		1462123	0					
ANR	1463101	Identifier	list		1462123	1					
ANR	1463102	Identifier	code		1462123	1					
ANR	1463103	Identifier	base_end		1462123	2					
ANR	1463104	ArrayIndexing	list_ptr [ 2 ]		1462123	1					
ANR	1463105	Identifier	list_ptr		1462123	0					
ANR	1463106	PrimaryExpression	2		1462123	1					
ANR	1463107	BreakStatement	break ;	3271:6:105162:105167	1462123	3	True				
ANR	1463108	Label	case OP_XCLASS :	3274:6:105226:105240	1462123	4	True				
ANR	1463109	Identifier	OP_XCLASS		1462123	0					
ANR	1463110	ExpressionStatement	xclass_flags = ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE	3275:6:105248:105325	1462123	5	True				
ANR	1463111	AssignmentExpression	xclass_flags = ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE		1462123	0		=			
ANR	1463112	Identifier	xclass_flags		1462123	0					
ANR	1463113	AdditiveExpression	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE		1462123	1		-			
ANR	1463114	ConditionalExpression	list_ptr == list ? code : base_end		1462123	0					
ANR	1463115	Condition	list_ptr == list		1462123	0					
ANR	1463116	EqualityExpression	list_ptr == list		1462123	0		==			
ANR	1463117	Identifier	list_ptr		1462123	0					
ANR	1463118	Identifier	list		1462123	1					
ANR	1463119	Identifier	code		1462123	1					
ANR	1463120	Identifier	base_end		1462123	2					
ANR	1463121	AdditiveExpression	list_ptr [ 2 ] + LINK_SIZE		1462123	1		+			
ANR	1463122	ArrayIndexing	list_ptr [ 2 ]		1462123	0					
ANR	1463123	Identifier	list_ptr		1462123	0					
ANR	1463124	PrimaryExpression	2		1462123	1					
ANR	1463125	Identifier	LINK_SIZE		1462123	1					
ANR	1463126	IfStatement	if ( ( * xclass_flags & XCL_HASPROP ) != 0 )		1462123	6					
ANR	1463127	Condition	( * xclass_flags & XCL_HASPROP ) != 0	3276:10:105337:105370	1462123	0	True				
ANR	1463128	EqualityExpression	( * xclass_flags & XCL_HASPROP ) != 0		1462123	0		!=			
ANR	1463129	BitAndExpression	* xclass_flags & XCL_HASPROP		1462123	0		&			
ANR	1463130	UnaryOperationExpression	* xclass_flags		1462123	0					
ANR	1463131	UnaryOperator	*		1462123	0					
ANR	1463132	Identifier	xclass_flags		1462123	1					
ANR	1463133	Identifier	XCL_HASPROP		1462123	1					
ANR	1463134	PrimaryExpression	0		1462123	1					
ANR	1463135	ReturnStatement	return FALSE ;	3276:46:105373:105385	1462123	1	True				
ANR	1463136	Identifier	FALSE		1462123	0					
ANR	1463137	IfStatement	if ( ( * xclass_flags & XCL_MAP ) == 0 )		1462123	7					
ANR	1463138	Condition	( * xclass_flags & XCL_MAP ) == 0	3277:10:105397:105426	1462123	0	True				
ANR	1463139	EqualityExpression	( * xclass_flags & XCL_MAP ) == 0		1462123	0		==			
ANR	1463140	BitAndExpression	* xclass_flags & XCL_MAP		1462123	0		&			
ANR	1463141	UnaryOperationExpression	* xclass_flags		1462123	0					
ANR	1463142	UnaryOperator	*		1462123	0					
ANR	1463143	Identifier	xclass_flags		1462123	1					
ANR	1463144	Identifier	XCL_MAP		1462123	1					
ANR	1463145	PrimaryExpression	0		1462123	1					
ANR	1463146	CompoundStatement		178:8:4720:4720	1462123	1					
ANR	1463147	IfStatement	if ( list [ 1 ] == 0 )		1462123	0					
ANR	1463148	Condition	list [ 1 ] == 0	3280:12:105503:105514	1462123	0	True				
ANR	1463149	EqualityExpression	list [ 1 ] == 0		1462123	0		==			
ANR	1463150	ArrayIndexing	list [ 1 ]		1462123	0					
ANR	1463151	Identifier	list		1462123	0					
ANR	1463152	PrimaryExpression	1		1462123	1					
ANR	1463153	PrimaryExpression	0		1462123	1					
ANR	1463154	ReturnStatement	return TRUE ;	3280:26:105517:105528	1462123	1	True				
ANR	1463155	Identifier	TRUE		1462123	0					
ANR	1463156	ContinueStatement	continue ;	3282:8:105578:105586	1462123	1	True				
ANR	1463157	ExpressionStatement	set2 = ( pcre_uint8 * ) ( xclass_flags + 1 )	3284:6:105604:105643	1462123	8	True				
ANR	1463158	AssignmentExpression	set2 = ( pcre_uint8 * ) ( xclass_flags + 1 )		1462123	0		=			
ANR	1463159	Identifier	set2		1462123	0					
ANR	1463160	CastExpression	( pcre_uint8 * ) ( xclass_flags + 1 )		1462123	1					
ANR	1463161	CastTarget	pcre_uint8 *		1462123	0					
ANR	1463162	AdditiveExpression	xclass_flags + 1		1462123	1		+			
ANR	1463163	Identifier	xclass_flags		1462123	0					
ANR	1463164	PrimaryExpression	1		1462123	1					
ANR	1463165	BreakStatement	break ;	3285:6:105651:105656	1462123	9	True				
ANR	1463166	Label	case OP_NOT_DIGIT :	3288:6:105672:105689	1462123	10	True				
ANR	1463167	Identifier	OP_NOT_DIGIT		1462123	0					
ANR	1463168	ExpressionStatement	invert_bits = TRUE	3289:6:105697:105715	1462123	11	True				
ANR	1463169	AssignmentExpression	invert_bits = TRUE		1462123	0		=			
ANR	1463170	Identifier	invert_bits		1462123	0					
ANR	1463171	Identifier	TRUE		1462123	1					
ANR	1463172	Label	case OP_DIGIT :	3291:6:105748:105761	1462123	12	True				
ANR	1463173	Identifier	OP_DIGIT		1462123	0					
ANR	1463174	ExpressionStatement	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_digit )	3292:6:105769:105814	1462123	13	True				
ANR	1463175	AssignmentExpression	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_digit )		1462123	0		=			
ANR	1463176	Identifier	set2		1462123	0					
ANR	1463177	CastExpression	( pcre_uint8 * ) ( cd -> cbits + cbit_digit )		1462123	1					
ANR	1463178	CastTarget	pcre_uint8 *		1462123	0					
ANR	1463179	AdditiveExpression	cd -> cbits + cbit_digit		1462123	1		+			
ANR	1463180	PtrMemberAccess	cd -> cbits		1462123	0					
ANR	1463181	Identifier	cd		1462123	0					
ANR	1463182	Identifier	cbits		1462123	1					
ANR	1463183	Identifier	cbit_digit		1462123	1					
ANR	1463184	BreakStatement	break ;	3293:6:105822:105827	1462123	14	True				
ANR	1463185	Label	case OP_NOT_WHITESPACE :	3295:6:105836:105858	1462123	15	True				
ANR	1463186	Identifier	OP_NOT_WHITESPACE		1462123	0					
ANR	1463187	ExpressionStatement	invert_bits = TRUE	3296:6:105866:105884	1462123	16	True				
ANR	1463188	AssignmentExpression	invert_bits = TRUE		1462123	0		=			
ANR	1463189	Identifier	invert_bits		1462123	0					
ANR	1463190	Identifier	TRUE		1462123	1					
ANR	1463191	Label	case OP_WHITESPACE :	3298:6:105917:105935	1462123	17	True				
ANR	1463192	Identifier	OP_WHITESPACE		1462123	0					
ANR	1463193	ExpressionStatement	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_space )	3299:6:105943:105988	1462123	18	True				
ANR	1463194	AssignmentExpression	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_space )		1462123	0		=			
ANR	1463195	Identifier	set2		1462123	0					
ANR	1463196	CastExpression	( pcre_uint8 * ) ( cd -> cbits + cbit_space )		1462123	1					
ANR	1463197	CastTarget	pcre_uint8 *		1462123	0					
ANR	1463198	AdditiveExpression	cd -> cbits + cbit_space		1462123	1		+			
ANR	1463199	PtrMemberAccess	cd -> cbits		1462123	0					
ANR	1463200	Identifier	cd		1462123	0					
ANR	1463201	Identifier	cbits		1462123	1					
ANR	1463202	Identifier	cbit_space		1462123	1					
ANR	1463203	BreakStatement	break ;	3300:6:105996:106001	1462123	19	True				
ANR	1463204	Label	case OP_NOT_WORDCHAR :	3302:6:106010:106030	1462123	20	True				
ANR	1463205	Identifier	OP_NOT_WORDCHAR		1462123	0					
ANR	1463206	ExpressionStatement	invert_bits = TRUE	3303:6:106038:106056	1462123	21	True				
ANR	1463207	AssignmentExpression	invert_bits = TRUE		1462123	0		=			
ANR	1463208	Identifier	invert_bits		1462123	0					
ANR	1463209	Identifier	TRUE		1462123	1					
ANR	1463210	Label	case OP_WORDCHAR :	3305:6:106089:106105	1462123	22	True				
ANR	1463211	Identifier	OP_WORDCHAR		1462123	0					
ANR	1463212	ExpressionStatement	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_word )	3306:6:106113:106157	1462123	23	True				
ANR	1463213	AssignmentExpression	set2 = ( pcre_uint8 * ) ( cd -> cbits + cbit_word )		1462123	0		=			
ANR	1463214	Identifier	set2		1462123	0					
ANR	1463215	CastExpression	( pcre_uint8 * ) ( cd -> cbits + cbit_word )		1462123	1					
ANR	1463216	CastTarget	pcre_uint8 *		1462123	0					
ANR	1463217	AdditiveExpression	cd -> cbits + cbit_word		1462123	1		+			
ANR	1463218	PtrMemberAccess	cd -> cbits		1462123	0					
ANR	1463219	Identifier	cd		1462123	0					
ANR	1463220	Identifier	cbits		1462123	1					
ANR	1463221	Identifier	cbit_word		1462123	1					
ANR	1463222	BreakStatement	break ;	3307:6:106165:106170	1462123	24	True				
ANR	1463223	Label	default :	3309:6:106179:106186	1462123	25	True				
ANR	1463224	Identifier	default		1462123	0					
ANR	1463225	ReturnStatement	return FALSE ;	3310:6:106194:106206	1462123	26	True				
ANR	1463226	Identifier	FALSE		1462123	0					
ANR	1463227	ExpressionStatement	set_end = set1 + 32	3315:4:106308:106327	1462123	3	True				
ANR	1463228	AssignmentExpression	set_end = set1 + 32		1462123	0		=			
ANR	1463229	Identifier	set_end		1462123	0					
ANR	1463230	AdditiveExpression	set1 + 32		1462123	1		+			
ANR	1463231	Identifier	set1		1462123	0					
ANR	1463232	PrimaryExpression	32		1462123	1					
ANR	1463233	IfStatement	if ( invert_bits )		1462123	4					
ANR	1463234	Condition	invert_bits	3316:8:106337:106347	1462123	0	True				
ANR	1463235	Identifier	invert_bits		1462123	0					
ANR	1463236	CompoundStatement		217:6:5639:5639	1462123	1					
ANR	1463237	DoStatement	do		1462123	0					
ANR	1463238	CompoundStatement		219:8:5658:5658	1462123	0					
ANR	1463239	IfStatement	if ( ( * set1 ++ & ~ ( * set2 ++ ) ) != 0 )		1462123	0					
ANR	1463240	Condition	( * set1 ++ & ~ ( * set2 ++ ) ) != 0	3320:12:106389:106415	1462123	0	True				
ANR	1463241	EqualityExpression	( * set1 ++ & ~ ( * set2 ++ ) ) != 0		1462123	0		!=			
ANR	1463242	BitAndExpression	* set1 ++ & ~ ( * set2 ++ )		1462123	0		&			
ANR	1463243	UnaryOperationExpression	* set1 ++		1462123	0					
ANR	1463244	UnaryOperator	*		1462123	0					
ANR	1463245	PostIncDecOperationExpression	set1 ++		1462123	1					
ANR	1463246	Identifier	set1		1462123	0					
ANR	1463247	IncDec	++		1462123	1					
ANR	1463248	UnaryOperationExpression	~ ( * set2 ++ )		1462123	1					
ANR	1463249	UnaryOperator	~		1462123	0					
ANR	1463250	UnaryOperationExpression	* set2 ++		1462123	1					
ANR	1463251	UnaryOperator	*		1462123	0					
ANR	1463252	PostIncDecOperationExpression	set2 ++		1462123	1					
ANR	1463253	Identifier	set2		1462123	0					
ANR	1463254	IncDec	++		1462123	1					
ANR	1463255	PrimaryExpression	0		1462123	1					
ANR	1463256	ReturnStatement	return FALSE ;	3320:41:106418:106430	1462123	1	True				
ANR	1463257	Identifier	FALSE		1462123	0					
ANR	1463258	Condition	set1 < set_end	3322:13:106455:106468	1462123	1	True				
ANR	1463259	RelationalExpression	set1 < set_end		1462123	0		<			
ANR	1463260	Identifier	set1		1462123	0					
ANR	1463261	Identifier	set_end		1462123	1					
ANR	1463262	ElseStatement	else		1462123	0					
ANR	1463263	CompoundStatement		225:6:5778:5778	1462123	0					
ANR	1463264	DoStatement	do		1462123	0					
ANR	1463265	CompoundStatement		227:8:5797:5797	1462123	0					
ANR	1463266	IfStatement	if ( ( * set1 ++ & * set2 ++ ) != 0 )		1462123	0					
ANR	1463267	Condition	( * set1 ++ & * set2 ++ ) != 0	3328:12:106528:106551	1462123	0	True				
ANR	1463268	EqualityExpression	( * set1 ++ & * set2 ++ ) != 0		1462123	0		!=			
ANR	1463269	BitAndExpression	* set1 ++ & * set2 ++		1462123	0		&			
ANR	1463270	UnaryOperationExpression	* set1 ++		1462123	0					
ANR	1463271	UnaryOperator	*		1462123	0					
ANR	1463272	PostIncDecOperationExpression	set1 ++		1462123	1					
ANR	1463273	Identifier	set1		1462123	0					
ANR	1463274	IncDec	++		1462123	1					
ANR	1463275	UnaryOperationExpression	* set2 ++		1462123	1					
ANR	1463276	UnaryOperator	*		1462123	0					
ANR	1463277	PostIncDecOperationExpression	set2 ++		1462123	1					
ANR	1463278	Identifier	set2		1462123	0					
ANR	1463279	IncDec	++		1462123	1					
ANR	1463280	PrimaryExpression	0		1462123	1					
ANR	1463281	ReturnStatement	return FALSE ;	3328:38:106554:106566	1462123	1	True				
ANR	1463282	Identifier	FALSE		1462123	0					
ANR	1463283	Condition	set1 < set_end	3330:13:106591:106604	1462123	1	True				
ANR	1463284	RelationalExpression	set1 < set_end		1462123	0		<			
ANR	1463285	Identifier	set1		1462123	0					
ANR	1463286	Identifier	set_end		1462123	1					
ANR	1463287	IfStatement	if ( list [ 1 ] == 0 )		1462123	5					
ANR	1463288	Condition	list [ 1 ] == 0	3333:8:106625:106636	1462123	0	True				
ANR	1463289	EqualityExpression	list [ 1 ] == 0		1462123	0		==			
ANR	1463290	ArrayIndexing	list [ 1 ]		1462123	0					
ANR	1463291	Identifier	list		1462123	0					
ANR	1463292	PrimaryExpression	1		1462123	1					
ANR	1463293	PrimaryExpression	0		1462123	1					
ANR	1463294	ReturnStatement	return TRUE ;	3333:22:106639:106650	1462123	1	True				
ANR	1463295	Identifier	TRUE		1462123	0					
ANR	1463296	ContinueStatement	continue ;	3335:4:106692:106700	1462123	6	True				
ANR	1463297	DoStatement	do		1462123	44					
ANR	1463298	CompoundStatement		368:4:11130:11130	1462123	0					
ANR	1463299	ExpressionStatement	chr = * chr_ptr	3469:4:111853:111867	1462123	0	True				
ANR	1463300	AssignmentExpression	chr = * chr_ptr		1462123	0		=			
ANR	1463301	Identifier	chr		1462123	0					
ANR	1463302	UnaryOperationExpression	* chr_ptr		1462123	1					
ANR	1463303	UnaryOperator	*		1462123	0					
ANR	1463304	Identifier	chr_ptr		1462123	1					
ANR	1463305	SwitchStatement	switch ( list_ptr [ 0 ] )		1462123	1					
ANR	1463306	Condition	list_ptr [ 0 ]	3471:11:111881:111891	1462123	0	True				
ANR	1463307	ArrayIndexing	list_ptr [ 0 ]		1462123	0					
ANR	1463308	Identifier	list_ptr		1462123	0					
ANR	1463309	PrimaryExpression	0		1462123	1					
ANR	1463310	CompoundStatement		372:6:11183:11183	1462123	1					
ANR	1463311	Label	case OP_CHAR :	3473:6:111908:111920	1462123	0	True				
ANR	1463312	Identifier	OP_CHAR		1462123	0					
ANR	1463313	ExpressionStatement	ochr_ptr = list_ptr + 2	3474:6:111928:111951	1462123	1	True				
ANR	1463314	AssignmentExpression	ochr_ptr = list_ptr + 2		1462123	0		=			
ANR	1463315	Identifier	ochr_ptr		1462123	0					
ANR	1463316	AdditiveExpression	list_ptr + 2		1462123	1		+			
ANR	1463317	Identifier	list_ptr		1462123	0					
ANR	1463318	PrimaryExpression	2		1462123	1					
ANR	1463319	DoStatement	do		1462123	2					
ANR	1463320	CompoundStatement		376:8:11253:11253	1462123	0					
ANR	1463321	IfStatement	if ( chr == * ochr_ptr )		1462123	0					
ANR	1463322	Condition	chr == * ochr_ptr	3477:12:111984:111999	1462123	0	True				
ANR	1463323	EqualityExpression	chr == * ochr_ptr		1462123	0		==			
ANR	1463324	Identifier	chr		1462123	0					
ANR	1463325	UnaryOperationExpression	* ochr_ptr		1462123	1					
ANR	1463326	UnaryOperator	*		1462123	0					
ANR	1463327	Identifier	ochr_ptr		1462123	1					
ANR	1463328	ReturnStatement	return FALSE ;	3477:30:112002:112014	1462123	1	True				
ANR	1463329	Identifier	FALSE		1462123	0					
ANR	1463330	ExpressionStatement	ochr_ptr ++	3478:8:112024:112034	1462123	1	True				
ANR	1463331	PostIncDecOperationExpression	ochr_ptr ++		1462123	0					
ANR	1463332	Identifier	ochr_ptr		1462123	0					
ANR	1463333	IncDec	++		1462123	1					
ANR	1463334	Condition	* ochr_ptr != NOTACHAR	3480:12:112058:112078	1462123	1	True				
ANR	1463335	EqualityExpression	* ochr_ptr != NOTACHAR		1462123	0		!=			
ANR	1463336	UnaryOperationExpression	* ochr_ptr		1462123	0					
ANR	1463337	UnaryOperator	*		1462123	0					
ANR	1463338	Identifier	ochr_ptr		1462123	1					
ANR	1463339	Identifier	NOTACHAR		1462123	1					
ANR	1463340	BreakStatement	break ;	3481:6:112088:112093	1462123	3	True				
ANR	1463341	Label	case OP_NOT :	3483:6:112102:112113	1462123	4	True				
ANR	1463342	Identifier	OP_NOT		1462123	0					
ANR	1463343	ExpressionStatement	ochr_ptr = list_ptr + 2	3484:6:112121:112144	1462123	5	True				
ANR	1463344	AssignmentExpression	ochr_ptr = list_ptr + 2		1462123	0		=			
ANR	1463345	Identifier	ochr_ptr		1462123	0					
ANR	1463346	AdditiveExpression	list_ptr + 2		1462123	1		+			
ANR	1463347	Identifier	list_ptr		1462123	0					
ANR	1463348	PrimaryExpression	2		1462123	1					
ANR	1463349	DoStatement	do		1462123	6					
ANR	1463350	CompoundStatement		386:8:11446:11446	1462123	0					
ANR	1463351	IfStatement	if ( chr == * ochr_ptr )		1462123	0					
ANR	1463352	Condition	chr == * ochr_ptr	3487:12:112177:112192	1462123	0	True				
ANR	1463353	EqualityExpression	chr == * ochr_ptr		1462123	0		==			
ANR	1463354	Identifier	chr		1462123	0					
ANR	1463355	UnaryOperationExpression	* ochr_ptr		1462123	1					
ANR	1463356	UnaryOperator	*		1462123	0					
ANR	1463357	Identifier	ochr_ptr		1462123	1					
ANR	1463358	BreakStatement	break ;	3488:10:112205:112210	1462123	1	True				
ANR	1463359	ExpressionStatement	ochr_ptr ++	3489:8:112220:112230	1462123	1	True				
ANR	1463360	PostIncDecOperationExpression	ochr_ptr ++		1462123	0					
ANR	1463361	Identifier	ochr_ptr		1462123	0					
ANR	1463362	IncDec	++		1462123	1					
ANR	1463363	Condition	* ochr_ptr != NOTACHAR	3491:12:112254:112274	1462123	1	True				
ANR	1463364	EqualityExpression	* ochr_ptr != NOTACHAR		1462123	0		!=			
ANR	1463365	UnaryOperationExpression	* ochr_ptr		1462123	0					
ANR	1463366	UnaryOperator	*		1462123	0					
ANR	1463367	Identifier	ochr_ptr		1462123	1					
ANR	1463368	Identifier	NOTACHAR		1462123	1					
ANR	1463369	IfStatement	if ( * ochr_ptr == NOTACHAR )		1462123	7					
ANR	1463370	Condition	* ochr_ptr == NOTACHAR	3492:10:112288:112308	1462123	0	True				
ANR	1463371	EqualityExpression	* ochr_ptr == NOTACHAR		1462123	0		==			
ANR	1463372	UnaryOperationExpression	* ochr_ptr		1462123	0					
ANR	1463373	UnaryOperator	*		1462123	0					
ANR	1463374	Identifier	ochr_ptr		1462123	1					
ANR	1463375	Identifier	NOTACHAR		1462123	1					
ANR	1463376	ReturnStatement	return FALSE ;	3492:33:112311:112323	1462123	1	True				
ANR	1463377	Identifier	FALSE		1462123	0					
ANR	1463378	BreakStatement	break ;	3493:6:112349:112354	1462123	8	True				
ANR	1463379	Label	case OP_DIGIT :	3498:6:112517:112530	1462123	9	True				
ANR	1463380	Identifier	OP_DIGIT		1462123	0					
ANR	1463381	IfStatement	if ( chr < 256 && ( cd -> ctypes [ chr ] & ctype_digit ) != 0 )		1462123	10					
ANR	1463382	Condition	chr < 256 && ( cd -> ctypes [ chr ] & ctype_digit ) != 0	3499:10:112542:112590	1462123	0	True				
ANR	1463383	AndExpression	chr < 256 && ( cd -> ctypes [ chr ] & ctype_digit ) != 0		1462123	0		&&			
ANR	1463384	RelationalExpression	chr < 256		1462123	0		<			
ANR	1463385	Identifier	chr		1462123	0					
ANR	1463386	PrimaryExpression	256		1462123	1					
ANR	1463387	EqualityExpression	( cd -> ctypes [ chr ] & ctype_digit ) != 0		1462123	1		!=			
ANR	1463388	BitAndExpression	cd -> ctypes [ chr ] & ctype_digit		1462123	0		&			
ANR	1463389	ArrayIndexing	cd -> ctypes [ chr ]		1462123	0					
ANR	1463390	PtrMemberAccess	cd -> ctypes		1462123	0					
ANR	1463391	Identifier	cd		1462123	0					
ANR	1463392	Identifier	ctypes		1462123	1					
ANR	1463393	Identifier	chr		1462123	1					
ANR	1463394	Identifier	ctype_digit		1462123	1					
ANR	1463395	PrimaryExpression	0		1462123	1					
ANR	1463396	ReturnStatement	return FALSE ;	3499:61:112593:112605	1462123	1	True				
ANR	1463397	Identifier	FALSE		1462123	0					
ANR	1463398	BreakStatement	break ;	3500:6:112613:112618	1462123	11	True				
ANR	1463399	Label	case OP_NOT_DIGIT :	3502:6:112627:112644	1462123	12	True				
ANR	1463400	Identifier	OP_NOT_DIGIT		1462123	0					
ANR	1463401	IfStatement	if ( chr > 255 || ( cd -> ctypes [ chr ] & ctype_digit ) == 0 )		1462123	13					
ANR	1463402	Condition	chr > 255 || ( cd -> ctypes [ chr ] & ctype_digit ) == 0	3503:10:112656:112704	1462123	0	True				
ANR	1463403	OrExpression	chr > 255 || ( cd -> ctypes [ chr ] & ctype_digit ) == 0		1462123	0		||			
ANR	1463404	RelationalExpression	chr > 255		1462123	0		>			
ANR	1463405	Identifier	chr		1462123	0					
ANR	1463406	PrimaryExpression	255		1462123	1					
ANR	1463407	EqualityExpression	( cd -> ctypes [ chr ] & ctype_digit ) == 0		1462123	1		==			
ANR	1463408	BitAndExpression	cd -> ctypes [ chr ] & ctype_digit		1462123	0		&			
ANR	1463409	ArrayIndexing	cd -> ctypes [ chr ]		1462123	0					
ANR	1463410	PtrMemberAccess	cd -> ctypes		1462123	0					
ANR	1463411	Identifier	cd		1462123	0					
ANR	1463412	Identifier	ctypes		1462123	1					
ANR	1463413	Identifier	chr		1462123	1					
ANR	1463414	Identifier	ctype_digit		1462123	1					
ANR	1463415	PrimaryExpression	0		1462123	1					
ANR	1463416	ReturnStatement	return FALSE ;	3503:61:112707:112719	1462123	1	True				
ANR	1463417	Identifier	FALSE		1462123	0					
ANR	1463418	BreakStatement	break ;	3504:6:112727:112732	1462123	14	True				
ANR	1463419	Label	case OP_WHITESPACE :	3506:6:112741:112759	1462123	15	True				
ANR	1463420	Identifier	OP_WHITESPACE		1462123	0					
ANR	1463421	IfStatement	if ( chr < 256 && ( cd -> ctypes [ chr ] & ctype_space ) != 0 )		1462123	16					
ANR	1463422	Condition	chr < 256 && ( cd -> ctypes [ chr ] & ctype_space ) != 0	3507:10:112771:112819	1462123	0	True				
ANR	1463423	AndExpression	chr < 256 && ( cd -> ctypes [ chr ] & ctype_space ) != 0		1462123	0		&&			
ANR	1463424	RelationalExpression	chr < 256		1462123	0		<			
ANR	1463425	Identifier	chr		1462123	0					
ANR	1463426	PrimaryExpression	256		1462123	1					
ANR	1463427	EqualityExpression	( cd -> ctypes [ chr ] & ctype_space ) != 0		1462123	1		!=			
ANR	1463428	BitAndExpression	cd -> ctypes [ chr ] & ctype_space		1462123	0		&			
ANR	1463429	ArrayIndexing	cd -> ctypes [ chr ]		1462123	0					
ANR	1463430	PtrMemberAccess	cd -> ctypes		1462123	0					
ANR	1463431	Identifier	cd		1462123	0					
ANR	1463432	Identifier	ctypes		1462123	1					
ANR	1463433	Identifier	chr		1462123	1					
ANR	1463434	Identifier	ctype_space		1462123	1					
ANR	1463435	PrimaryExpression	0		1462123	1					
ANR	1463436	ReturnStatement	return FALSE ;	3507:61:112822:112834	1462123	1	True				
ANR	1463437	Identifier	FALSE		1462123	0					
ANR	1463438	BreakStatement	break ;	3508:6:112842:112847	1462123	17	True				
ANR	1463439	Label	case OP_NOT_WHITESPACE :	3510:6:112856:112878	1462123	18	True				
ANR	1463440	Identifier	OP_NOT_WHITESPACE		1462123	0					
ANR	1463441	IfStatement	if ( chr > 255 || ( cd -> ctypes [ chr ] & ctype_space ) == 0 )		1462123	19					
ANR	1463442	Condition	chr > 255 || ( cd -> ctypes [ chr ] & ctype_space ) == 0	3511:10:112890:112938	1462123	0	True				
ANR	1463443	OrExpression	chr > 255 || ( cd -> ctypes [ chr ] & ctype_space ) == 0		1462123	0		||			
ANR	1463444	RelationalExpression	chr > 255		1462123	0		>			
ANR	1463445	Identifier	chr		1462123	0					
ANR	1463446	PrimaryExpression	255		1462123	1					
ANR	1463447	EqualityExpression	( cd -> ctypes [ chr ] & ctype_space ) == 0		1462123	1		==			
ANR	1463448	BitAndExpression	cd -> ctypes [ chr ] & ctype_space		1462123	0		&			
ANR	1463449	ArrayIndexing	cd -> ctypes [ chr ]		1462123	0					
ANR	1463450	PtrMemberAccess	cd -> ctypes		1462123	0					
ANR	1463451	Identifier	cd		1462123	0					
ANR	1463452	Identifier	ctypes		1462123	1					
ANR	1463453	Identifier	chr		1462123	1					
ANR	1463454	Identifier	ctype_space		1462123	1					
ANR	1463455	PrimaryExpression	0		1462123	1					
ANR	1463456	ReturnStatement	return FALSE ;	3511:61:112941:112953	1462123	1	True				
ANR	1463457	Identifier	FALSE		1462123	0					
ANR	1463458	BreakStatement	break ;	3512:6:112961:112966	1462123	20	True				
ANR	1463459	Label	case OP_WORDCHAR :	3514:6:112975:112991	1462123	21	True				
ANR	1463460	Identifier	OP_WORDCHAR		1462123	0					
ANR	1463461	IfStatement	if ( chr < 255 && ( cd -> ctypes [ chr ] & ctype_word ) != 0 )		1462123	22					
ANR	1463462	Condition	chr < 255 && ( cd -> ctypes [ chr ] & ctype_word ) != 0	3515:10:113003:113050	1462123	0	True				
ANR	1463463	AndExpression	chr < 255 && ( cd -> ctypes [ chr ] & ctype_word ) != 0		1462123	0		&&			
ANR	1463464	RelationalExpression	chr < 255		1462123	0		<			
ANR	1463465	Identifier	chr		1462123	0					
ANR	1463466	PrimaryExpression	255		1462123	1					
ANR	1463467	EqualityExpression	( cd -> ctypes [ chr ] & ctype_word ) != 0		1462123	1		!=			
ANR	1463468	BitAndExpression	cd -> ctypes [ chr ] & ctype_word		1462123	0		&			
ANR	1463469	ArrayIndexing	cd -> ctypes [ chr ]		1462123	0					
ANR	1463470	PtrMemberAccess	cd -> ctypes		1462123	0					
ANR	1463471	Identifier	cd		1462123	0					
ANR	1463472	Identifier	ctypes		1462123	1					
ANR	1463473	Identifier	chr		1462123	1					
ANR	1463474	Identifier	ctype_word		1462123	1					
ANR	1463475	PrimaryExpression	0		1462123	1					
ANR	1463476	ReturnStatement	return FALSE ;	3515:60:113053:113065	1462123	1	True				
ANR	1463477	Identifier	FALSE		1462123	0					
ANR	1463478	BreakStatement	break ;	3516:6:113073:113078	1462123	23	True				
ANR	1463479	Label	case OP_NOT_WORDCHAR :	3518:6:113087:113107	1462123	24	True				
ANR	1463480	Identifier	OP_NOT_WORDCHAR		1462123	0					
ANR	1463481	IfStatement	if ( chr > 255 || ( cd -> ctypes [ chr ] & ctype_word ) == 0 )		1462123	25					
ANR	1463482	Condition	chr > 255 || ( cd -> ctypes [ chr ] & ctype_word ) == 0	3519:10:113119:113166	1462123	0	True				
ANR	1463483	OrExpression	chr > 255 || ( cd -> ctypes [ chr ] & ctype_word ) == 0		1462123	0		||			
ANR	1463484	RelationalExpression	chr > 255		1462123	0		>			
ANR	1463485	Identifier	chr		1462123	0					
ANR	1463486	PrimaryExpression	255		1462123	1					
ANR	1463487	EqualityExpression	( cd -> ctypes [ chr ] & ctype_word ) == 0		1462123	1		==			
ANR	1463488	BitAndExpression	cd -> ctypes [ chr ] & ctype_word		1462123	0		&			
ANR	1463489	ArrayIndexing	cd -> ctypes [ chr ]		1462123	0					
ANR	1463490	PtrMemberAccess	cd -> ctypes		1462123	0					
ANR	1463491	Identifier	cd		1462123	0					
ANR	1463492	Identifier	ctypes		1462123	1					
ANR	1463493	Identifier	chr		1462123	1					
ANR	1463494	Identifier	ctype_word		1462123	1					
ANR	1463495	PrimaryExpression	0		1462123	1					
ANR	1463496	ReturnStatement	return FALSE ;	3519:60:113169:113181	1462123	1	True				
ANR	1463497	Identifier	FALSE		1462123	0					
ANR	1463498	BreakStatement	break ;	3520:6:113189:113194	1462123	26	True				
ANR	1463499	Label	case OP_HSPACE :	3522:6:113203:113217	1462123	27	True				
ANR	1463500	Identifier	OP_HSPACE		1462123	0					
ANR	1463501	SwitchStatement	switch ( chr )		1462123	28					
ANR	1463502	Condition	chr	3523:13:113232:113234	1462123	0	True				
ANR	1463503	Identifier	chr		1462123	0					
ANR	1463504	CompoundStatement		424:8:12528:12528	1462123	1					
ANR	1463505	Label	HSPACE_CASES :	3525:8:113255:113267	1462123	0	True				
ANR	1463506	Identifier	HSPACE_CASES		1462123	0					
ANR	1463507	ReturnStatement	return FALSE ;	3525:22:113269:113281	1462123	1	True				
ANR	1463508	Identifier	FALSE		1462123	0					
ANR	1463509	Label	default :	3526:8:113291:113298	1462123	2	True				
ANR	1463510	Identifier	default		1462123	0					
ANR	1463511	BreakStatement	break ;	3526:17:113300:113305	1462123	3	True				
ANR	1463512	BreakStatement	break ;	3528:6:113323:113328	1462123	29	True				
ANR	1463513	Label	case OP_NOT_HSPACE :	3530:6:113337:113355	1462123	30	True				
ANR	1463514	Identifier	OP_NOT_HSPACE		1462123	0					
ANR	1463515	SwitchStatement	switch ( chr )		1462123	31					
ANR	1463516	Condition	chr	3531:13:113370:113372	1462123	0	True				
ANR	1463517	Identifier	chr		1462123	0					
ANR	1463518	CompoundStatement		432:8:12666:12666	1462123	1					
ANR	1463519	Label	HSPACE_CASES :	3533:8:113393:113405	1462123	0	True				
ANR	1463520	Identifier	HSPACE_CASES		1462123	0					
ANR	1463521	BreakStatement	break ;	3533:22:113407:113412	1462123	1	True				
ANR	1463522	Label	default :	3534:8:113422:113429	1462123	2	True				
ANR	1463523	Identifier	default		1462123	0					
ANR	1463524	ReturnStatement	return FALSE ;	3534:17:113431:113443	1462123	3	True				
ANR	1463525	Identifier	FALSE		1462123	0					
ANR	1463526	BreakStatement	break ;	3536:6:113461:113466	1462123	32	True				
ANR	1463527	Label	case OP_ANYNL :	3538:6:113475:113488	1462123	33	True				
ANR	1463528	Identifier	OP_ANYNL		1462123	0					
ANR	1463529	Label	case OP_VSPACE :	3539:6:113496:113510	1462123	34	True				
ANR	1463530	Identifier	OP_VSPACE		1462123	0					
ANR	1463531	SwitchStatement	switch ( chr )		1462123	35					
ANR	1463532	Condition	chr	3540:13:113525:113527	1462123	0	True				
ANR	1463533	Identifier	chr		1462123	0					
ANR	1463534	CompoundStatement		441:8:12821:12821	1462123	1					
ANR	1463535	Label	VSPACE_CASES :	3542:8:113548:113560	1462123	0	True				
ANR	1463536	Identifier	VSPACE_CASES		1462123	0					
ANR	1463537	ReturnStatement	return FALSE ;	3542:22:113562:113574	1462123	1	True				
ANR	1463538	Identifier	FALSE		1462123	0					
ANR	1463539	Label	default :	3543:8:113584:113591	1462123	2	True				
ANR	1463540	Identifier	default		1462123	0					
ANR	1463541	BreakStatement	break ;	3543:17:113593:113598	1462123	3	True				
ANR	1463542	BreakStatement	break ;	3545:6:113616:113621	1462123	36	True				
ANR	1463543	Label	case OP_NOT_VSPACE :	3547:6:113630:113648	1462123	37	True				
ANR	1463544	Identifier	OP_NOT_VSPACE		1462123	0					
ANR	1463545	SwitchStatement	switch ( chr )		1462123	38					
ANR	1463546	Condition	chr	3548:13:113663:113665	1462123	0	True				
ANR	1463547	Identifier	chr		1462123	0					
ANR	1463548	CompoundStatement		449:8:12959:12959	1462123	1					
ANR	1463549	Label	VSPACE_CASES :	3550:8:113686:113698	1462123	0	True				
ANR	1463550	Identifier	VSPACE_CASES		1462123	0					
ANR	1463551	BreakStatement	break ;	3550:22:113700:113705	1462123	1	True				
ANR	1463552	Label	default :	3551:8:113715:113722	1462123	2	True				
ANR	1463553	Identifier	default		1462123	0					
ANR	1463554	ReturnStatement	return FALSE ;	3551:17:113724:113736	1462123	3	True				
ANR	1463555	Identifier	FALSE		1462123	0					
ANR	1463556	BreakStatement	break ;	3553:6:113754:113759	1462123	39	True				
ANR	1463557	Label	case OP_DOLL :	3555:6:113768:113780	1462123	40	True				
ANR	1463558	Identifier	OP_DOLL		1462123	0					
ANR	1463559	Label	case OP_EODN :	3556:6:113788:113800	1462123	41	True				
ANR	1463560	Identifier	OP_EODN		1462123	0					
ANR	1463561	SwitchStatement	switch ( chr )		1462123	42					
ANR	1463562	Condition	chr	3557:14:113816:113818	1462123	0	True				
ANR	1463563	Identifier	chr		1462123	0					
ANR	1463564	CompoundStatement		458:8:13112:13112	1462123	1					
ANR	1463565	Label	case CHAR_CR :	3559:8:113839:113851	1462123	0	True				
ANR	1463566	Identifier	CHAR_CR		1462123	0					
ANR	1463567	Label	case CHAR_LF :	3560:8:113861:113873	1462123	1	True				
ANR	1463568	Identifier	CHAR_LF		1462123	0					
ANR	1463569	Label	case CHAR_VT :	3561:8:113883:113895	1462123	2	True				
ANR	1463570	Identifier	CHAR_VT		1462123	0					
ANR	1463571	Label	case CHAR_FF :	3562:8:113905:113917	1462123	3	True				
ANR	1463572	Identifier	CHAR_FF		1462123	0					
ANR	1463573	Label	case CHAR_NEL :	3563:8:113927:113940	1462123	4	True				
ANR	1463574	Identifier	CHAR_NEL		1462123	0					
ANR	1463575	Label	case 0x2028 :	3565:8:113965:113976	1462123	5	True				
ANR	1463576	Label	case 0x2029 :	3566:8:113986:113997	1462123	6	True				
ANR	1463577	ReturnStatement	return FALSE ;	3568:8:114032:114044	1462123	7	True				
ANR	1463578	Identifier	FALSE		1462123	0					
ANR	1463579	BreakStatement	break ;	3570:6:114062:114067	1462123	43	True				
ANR	1463580	Label	case OP_EOD :	3572:6:114076:114087	1462123	44	True				
ANR	1463581	Identifier	OP_EOD		1462123	0					
ANR	1463582	BreakStatement	break ;	3573:6:114136:114141	1462123	45	True				
ANR	1463583	Label	case OP_PROP :	3576:6:114169:114181	1462123	46	True				
ANR	1463584	Identifier	OP_PROP		1462123	0					
ANR	1463585	Label	case OP_NOTPROP :	3577:6:114189:114204	1462123	47	True				
ANR	1463586	Identifier	OP_NOTPROP		1462123	0					
ANR	1463587	IfStatement	"if ( ! check_char_prop ( chr , list_ptr [ 2 ] , list_ptr [ 3 ] , list_ptr [ 0 ] == OP_NOTPROP ) )"		1462123	48					
ANR	1463588	Condition	"! check_char_prop ( chr , list_ptr [ 2 ] , list_ptr [ 3 ] , list_ptr [ 0 ] == OP_NOTPROP )"	3578:10:114216:114301	1462123	0	True				
ANR	1463589	UnaryOperationExpression	"! check_char_prop ( chr , list_ptr [ 2 ] , list_ptr [ 3 ] , list_ptr [ 0 ] == OP_NOTPROP )"		1462123	0					
ANR	1463590	UnaryOperator	!		1462123	0					
ANR	1463591	CallExpression	"check_char_prop ( chr , list_ptr [ 2 ] , list_ptr [ 3 ] , list_ptr [ 0 ] == OP_NOTPROP )"		1462123	1					
ANR	1463592	Callee	check_char_prop		1462123	0					
ANR	1463593	Identifier	check_char_prop		1462123	0					
ANR	1463594	ArgumentList	chr		1462123	1					
ANR	1463595	Argument	chr		1462123	0					
ANR	1463596	Identifier	chr		1462123	0					
ANR	1463597	Argument	list_ptr [ 2 ]		1462123	1					
ANR	1463598	ArrayIndexing	list_ptr [ 2 ]		1462123	0					
ANR	1463599	Identifier	list_ptr		1462123	0					
ANR	1463600	PrimaryExpression	2		1462123	1					
ANR	1463601	Argument	list_ptr [ 3 ]		1462123	2					
ANR	1463602	ArrayIndexing	list_ptr [ 3 ]		1462123	0					
ANR	1463603	Identifier	list_ptr		1462123	0					
ANR	1463604	PrimaryExpression	3		1462123	1					
ANR	1463605	Argument	list_ptr [ 0 ] == OP_NOTPROP		1462123	3					
ANR	1463606	EqualityExpression	list_ptr [ 0 ] == OP_NOTPROP		1462123	0		==			
ANR	1463607	ArrayIndexing	list_ptr [ 0 ]		1462123	0					
ANR	1463608	Identifier	list_ptr		1462123	0					
ANR	1463609	PrimaryExpression	0		1462123	1					
ANR	1463610	Identifier	OP_NOTPROP		1462123	1					
ANR	1463611	ReturnStatement	return FALSE ;	3580:8:114312:114324	1462123	1	True				
ANR	1463612	Identifier	FALSE		1462123	0					
ANR	1463613	BreakStatement	break ;	3581:6:114332:114337	1462123	49	True				
ANR	1463614	Label	case OP_NCLASS :	3584:6:114353:114367	1462123	50	True				
ANR	1463615	Identifier	OP_NCLASS		1462123	0					
ANR	1463616	IfStatement	if ( chr > 255 )		1462123	51					
ANR	1463617	Condition	chr > 255	3585:10:114379:114387	1462123	0	True				
ANR	1463618	RelationalExpression	chr > 255		1462123	0		>			
ANR	1463619	Identifier	chr		1462123	0					
ANR	1463620	PrimaryExpression	255		1462123	1					
ANR	1463621	ReturnStatement	return FALSE ;	3585:21:114390:114402	1462123	1	True				
ANR	1463622	Identifier	FALSE		1462123	0					
ANR	1463623	Label	case OP_CLASS :	3588:6:114436:114449	1462123	52	True				
ANR	1463624	Identifier	OP_CLASS		1462123	0					
ANR	1463625	IfStatement	if ( chr > 255 )		1462123	53					
ANR	1463626	Condition	chr > 255	3589:10:114461:114469	1462123	0	True				
ANR	1463627	RelationalExpression	chr > 255		1462123	0		>			
ANR	1463628	Identifier	chr		1462123	0					
ANR	1463629	PrimaryExpression	255		1462123	1					
ANR	1463630	BreakStatement	break ;	3589:21:114472:114477	1462123	1	True				
ANR	1463631	ExpressionStatement	class_bitset = ( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )	3590:6:114485:114575	1462123	54	True				
ANR	1463632	AssignmentExpression	class_bitset = ( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )		1462123	0		=			
ANR	1463633	Identifier	class_bitset		1462123	0					
ANR	1463634	CastExpression	( pcre_uint8 * ) ( ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] )		1462123	1					
ANR	1463635	CastTarget	pcre_uint8 *		1462123	0					
ANR	1463636	AdditiveExpression	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ]		1462123	1		-			
ANR	1463637	ConditionalExpression	list_ptr == list ? code : base_end		1462123	0					
ANR	1463638	Condition	list_ptr == list		1462123	0					
ANR	1463639	EqualityExpression	list_ptr == list		1462123	0		==			
ANR	1463640	Identifier	list_ptr		1462123	0					
ANR	1463641	Identifier	list		1462123	1					
ANR	1463642	Identifier	code		1462123	1					
ANR	1463643	Identifier	base_end		1462123	2					
ANR	1463644	ArrayIndexing	list_ptr [ 2 ]		1462123	1					
ANR	1463645	Identifier	list_ptr		1462123	0					
ANR	1463646	PrimaryExpression	2		1462123	1					
ANR	1463647	IfStatement	if ( ( class_bitset [ chr >> 3 ] & ( 1 << ( chr & 7 ) ) ) != 0 )		1462123	55					
ANR	1463648	Condition	( class_bitset [ chr >> 3 ] & ( 1 << ( chr & 7 ) ) ) != 0	3592:10:114587:114634	1462123	0	True				
ANR	1463649	EqualityExpression	( class_bitset [ chr >> 3 ] & ( 1 << ( chr & 7 ) ) ) != 0		1462123	0		!=			
ANR	1463650	BitAndExpression	class_bitset [ chr >> 3 ] & ( 1 << ( chr & 7 ) )		1462123	0		&			
ANR	1463651	ArrayIndexing	class_bitset [ chr >> 3 ]		1462123	0					
ANR	1463652	Identifier	class_bitset		1462123	0					
ANR	1463653	ShiftExpression	chr >> 3		1462123	1		>>			
ANR	1463654	Identifier	chr		1462123	0					
ANR	1463655	PrimaryExpression	3		1462123	1					
ANR	1463656	ShiftExpression	1 << ( chr & 7 )		1462123	1		<<			
ANR	1463657	PrimaryExpression	1		1462123	0					
ANR	1463658	BitAndExpression	chr & 7		1462123	1		&			
ANR	1463659	Identifier	chr		1462123	0					
ANR	1463660	PrimaryExpression	7		1462123	1					
ANR	1463661	PrimaryExpression	0		1462123	1					
ANR	1463662	ReturnStatement	return FALSE ;	3592:60:114637:114649	1462123	1	True				
ANR	1463663	Identifier	FALSE		1462123	0					
ANR	1463664	BreakStatement	break ;	3593:6:114657:114662	1462123	56	True				
ANR	1463665	Label	case OP_XCLASS :	3596:6:114721:114735	1462123	57	True				
ANR	1463666	Identifier	OP_XCLASS		1462123	0					
ANR	1463667	IfStatement	"if ( PRIV ( xclass ) ( chr , ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE , utf ) )"		1462123	58					
ANR	1463668	Condition	"PRIV ( xclass ) ( chr , ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE , utf )"	3597:10:114747:114842	1462123	0	True				
ANR	1463669	CallExpression	"PRIV ( xclass ) ( chr , ( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE , utf )"		1462123	0					
ANR	1463670	Callee	PRIV ( xclass )		1462123	0					
ANR	1463671	CallExpression	PRIV ( xclass )		1462123	0					
ANR	1463672	Callee	PRIV		1462123	0					
ANR	1463673	Identifier	PRIV		1462123	0					
ANR	1463674	ArgumentList	xclass		1462123	1					
ANR	1463675	Argument	xclass		1462123	0					
ANR	1463676	Identifier	xclass		1462123	0					
ANR	1463677	ArgumentList	chr		1462123	1					
ANR	1463678	Argument	chr		1462123	0					
ANR	1463679	Identifier	chr		1462123	0					
ANR	1463680	Argument	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE		1462123	1					
ANR	1463681	AdditiveExpression	( list_ptr == list ? code : base_end ) - list_ptr [ 2 ] + LINK_SIZE		1462123	0		-			
ANR	1463682	ConditionalExpression	list_ptr == list ? code : base_end		1462123	0					
ANR	1463683	Condition	list_ptr == list		1462123	0					
ANR	1463684	EqualityExpression	list_ptr == list		1462123	0		==			
ANR	1463685	Identifier	list_ptr		1462123	0					
ANR	1463686	Identifier	list		1462123	1					
ANR	1463687	Identifier	code		1462123	1					
ANR	1463688	Identifier	base_end		1462123	2					
ANR	1463689	AdditiveExpression	list_ptr [ 2 ] + LINK_SIZE		1462123	1		+			
ANR	1463690	ArrayIndexing	list_ptr [ 2 ]		1462123	0					
ANR	1463691	Identifier	list_ptr		1462123	0					
ANR	1463692	PrimaryExpression	2		1462123	1					
ANR	1463693	Identifier	LINK_SIZE		1462123	1					
ANR	1463694	Argument	utf		1462123	2					
ANR	1463695	Identifier	utf		1462123	0					
ANR	1463696	ReturnStatement	return FALSE ;	3598:41:114845:114857	1462123	1	True				
ANR	1463697	Identifier	FALSE		1462123	0					
ANR	1463698	BreakStatement	break ;	3599:6:114865:114870	1462123	59	True				
ANR	1463699	Label	default :	3602:6:114886:114893	1462123	60	True				
ANR	1463700	Identifier	default		1462123	0					
ANR	1463701	ReturnStatement	return FALSE ;	3603:6:114901:114913	1462123	61	True				
ANR	1463702	Identifier	FALSE		1462123	0					
ANR	1463703	ExpressionStatement	chr_ptr ++	3606:4:114928:114937	1462123	2	True				
ANR	1463704	PostIncDecOperationExpression	chr_ptr ++		1462123	0					
ANR	1463705	Identifier	chr_ptr		1462123	0					
ANR	1463706	IncDec	++		1462123	1					
ANR	1463707	Condition	* chr_ptr != NOTACHAR	3608:8:114953:114972	1462123	1	True				
ANR	1463708	EqualityExpression	* chr_ptr != NOTACHAR		1462123	0		!=			
ANR	1463709	UnaryOperationExpression	* chr_ptr		1462123	0					
ANR	1463710	UnaryOperator	*		1462123	0					
ANR	1463711	Identifier	chr_ptr		1462123	1					
ANR	1463712	Identifier	NOTACHAR		1462123	1					
ANR	1463713	IfStatement	if ( list [ 1 ] == 0 )		1462123	45					
ANR	1463714	Condition	list [ 1 ] == 0	3612:6:115049:115060	1462123	0	True				
ANR	1463715	EqualityExpression	list [ 1 ] == 0		1462123	0		==			
ANR	1463716	ArrayIndexing	list [ 1 ]		1462123	0					
ANR	1463717	Identifier	list		1462123	0					
ANR	1463718	PrimaryExpression	1		1462123	1					
ANR	1463719	PrimaryExpression	0		1462123	1					
ANR	1463720	ReturnStatement	return TRUE ;	3612:20:115063:115074	1462123	1	True				
ANR	1463721	Identifier	TRUE		1462123	0					
ANR	1463722	ReturnType	static BOOL		1462123	1					
ANR	1463723	Identifier	compare_opcodes		1462123	2					
ANR	1463724	ParameterList	"const pcre_uchar * code , BOOL utf , const compile_data * cd , const pcre_uint32 * base_list , const pcre_uchar * base_end , int * rec_limit"		1462123	3					
ANR	1463725	Parameter	const pcre_uchar * code	3099:16:100582:100603	1462123	0	True				
ANR	1463726	ParameterType	const pcre_uchar *		1462123	0					
ANR	1463727	Identifier	code		1462123	1					
ANR	1463728	Parameter	BOOL utf	3099:40:100606:100613	1462123	1	True				
ANR	1463729	ParameterType	BOOL		1462123	0					
ANR	1463730	Identifier	utf		1462123	1					
ANR	1463731	Parameter	const compile_data * cd	3099:50:100616:100637	1462123	2	True				
ANR	1463732	ParameterType	const compile_data *		1462123	0					
ANR	1463733	Identifier	cd		1462123	1					
ANR	1463734	Parameter	const pcre_uint32 * base_list	3100:2:100642:100669	1462123	3	True				
ANR	1463735	ParameterType	const pcre_uint32 *		1462123	0					
ANR	1463736	Identifier	base_list		1462123	1					
ANR	1463737	Parameter	const pcre_uchar * base_end	3100:32:100672:100697	1462123	4	True				
ANR	1463738	ParameterType	const pcre_uchar *		1462123	0					
ANR	1463739	Identifier	base_end		1462123	1					
ANR	1463740	Parameter	int * rec_limit	3100:60:100700:100713	1462123	5	True				
ANR	1463741	ParameterType	int *		1462123	0					
ANR	1463742	Identifier	rec_limit		1462123	1					
ANR	1463743	CFGEntryNode	ENTRY		1462123		True				
ANR	1463744	CFGExitNode	EXIT		1462123		True				
ANR	1463745	InfiniteForNode	true		1462123		True				
ANR	1463746	Symbol	* cd		1462123						
ANR	1463747	Symbol	base_end		1462123						
ANR	1463748	Symbol	catposstab		1462123						
ANR	1463749	Symbol	FIRST_AUTOTAB_OP		1462123						
ANR	1463750	Symbol	* leftop		1462123						
ANR	1463751	Symbol	OP_EOD		1462123						
ANR	1463752	Symbol	OP_CHAR		1462123						
ANR	1463753	Symbol	* GET		1462123						
ANR	1463754	Symbol	leftop		1462123						
ANR	1463755	Symbol	cbit_word		1462123						
ANR	1463756	Symbol	set2		1462123						
ANR	1463757	Symbol	OP_CLASS		1462123						
ANR	1463758	Symbol	"* ( code - GET ( code , 1 ) )"		1462123						
ANR	1463759	Symbol	set_end		1462123						
ANR	1463760	Symbol	* * FIRST_AUTOTAB_OP		1462123						
ANR	1463761	Symbol	lisprop		1462123						
ANR	1463762	Symbol	* autoposstab		1462123						
ANR	1463763	Symbol	LINK_SIZE		1462123						
ANR	1463764	Symbol	* * * p		1462123						
ANR	1463765	Symbol	OP_NCLASS		1462123						
ANR	1463766	Symbol	* chr_ptr		1462123						
ANR	1463767	Symbol	* * * list		1462123						
ANR	1463768	Symbol	LAST_AUTOTAB_LEFT_OP		1462123						
ANR	1463769	Symbol	GET		1462123						
ANR	1463770	Symbol	set1		1462123						
ANR	1463771	Symbol	* FIRST_AUTOTAB_OP		1462123						
ANR	1463772	Symbol	next_code		1462123						
ANR	1463773	Symbol	LAST_AUTOTAB_RIGHT_OP		1462123						
ANR	1463774	Symbol	risprop		1462123						
ANR	1463775	Symbol	OP_ONCE_NC		1462123						
ANR	1463776	Symbol	XCL_HASPROP		1462123						
ANR	1463777	Symbol	* class_bitset		1462123						
ANR	1463778	Symbol	OP_ALT		1462123						
ANR	1463779	Symbol	* * leftop		1462123						
ANR	1463780	Symbol	class_bitset		1462123						
ANR	1463781	Symbol	invert_bits		1462123						
ANR	1463782	Symbol	same		1462123						
ANR	1463783	Symbol	* xclass_flags		1462123						
ANR	1463784	Symbol	* * p		1462123						
ANR	1463785	Symbol	cd -> ctypes		1462123						
ANR	1463786	Symbol	check_char_prop		1462123						
ANR	1463787	Symbol	cd		1462123						
ANR	1463788	Symbol	c		1462123						
ANR	1463789	Symbol	* * catposstab		1462123						
ANR	1463790	Symbol	* * propposstab		1462123						
ANR	1463791	Symbol	XCL_MAP		1462123						
ANR	1463792	Symbol	ctype_space		1462123						
ANR	1463793	Symbol	xclass		1462123						
ANR	1463794	Symbol	* * autoposstab		1462123						
ANR	1463795	Symbol	OP_NOTPROP		1462123						
ANR	1463796	Symbol	n		1462123						
ANR	1463797	Symbol	cbit_digit		1462123						
ANR	1463798	Symbol	p		1462123						
ANR	1463799	Symbol	* PRIV		1462123						
ANR	1463800	Symbol	* catposstab		1462123						
ANR	1463801	Symbol	rightop		1462123						
ANR	1463802	Symbol	* ochr_ptr		1462123						
ANR	1463803	Symbol	propposstab		1462123						
ANR	1463804	Symbol	* list		1462123						
ANR	1463805	Symbol	* next_code		1462123						
ANR	1463806	Symbol	compare_opcodes		1462123						
ANR	1463807	Symbol	cd -> fcc		1462123						
ANR	1463808	Symbol	bothprop		1462123						
ANR	1463809	Symbol	* set1 ++		1462123						
ANR	1463810	Symbol	OP_CBRA		1462123						
ANR	1463811	Symbol	* propposstab		1462123						
ANR	1463812	Symbol	PRIV		1462123						
ANR	1463813	Symbol	autoposstab		1462123						
ANR	1463814	Symbol	* rec_limit		1462123						
ANR	1463815	Symbol	ochr_ptr		1462123						
ANR	1463816	Symbol	* cd -> ctypes		1462123						
ANR	1463817	Symbol	NULL		1462123						
ANR	1463818	Symbol	utf		1462123						
ANR	1463819	Symbol	chr_ptr		1462123						
ANR	1463820	Symbol	xclass_flags		1462123						
ANR	1463821	Symbol	accepted		1462123						
ANR	1463822	Symbol	OP_CALLOUT		1462123						
ANR	1463823	Symbol	TRUE		1462123						
ANR	1463824	Symbol	list		1462123						
ANR	1463825	Symbol	chr		1462123						
ANR	1463826	Symbol	ctype_word		1462123						
ANR	1463827	Symbol	ctype_digit		1462123						
ANR	1463828	Symbol	posspropstab		1462123						
ANR	1463829	Symbol	OP_lengths		1462123						
ANR	1463830	Symbol	* base_list		1462123						
ANR	1463831	Symbol	* * * base_list		1462123						
ANR	1463832	Symbol	cbit_space		1462123						
ANR	1463833	Symbol	* code		1462123						
ANR	1463834	Symbol	code		1462123						
ANR	1463835	Symbol	* posspropstab		1462123						
ANR	1463836	Symbol	* * cd		1462123						
ANR	1463837	Symbol	* * list		1462123						
ANR	1463838	Symbol	rec_limit		1462123						
ANR	1463839	Symbol	* list_ptr		1462123						
ANR	1463840	Symbol	cd -> cbits		1462123						
ANR	1463841	Symbol	* set2 ++		1462123						
ANR	1463842	Symbol	get_chr_property_list		1462123						
ANR	1463843	Symbol	* rightop		1462123						
ANR	1463844	Symbol	* chr		1462123						
ANR	1463845	Symbol	* c		1462123						
ANR	1463846	Symbol	OP_ONCE		1462123						
ANR	1463847	Symbol	entered_a_group		1462123						
ANR	1463848	Symbol	OP_BRA		1462123						
ANR	1463849	Symbol	OP_PROP		1462123						
ANR	1463850	Symbol	NOTACHAR		1462123						
ANR	1463851	Symbol	list_ptr		1462123						
ANR	1463852	Symbol	* n		1462123						
ANR	1463853	Symbol	FALSE		1462123						
ANR	1463854	Symbol	* p		1462123						
ANR	1463855	Symbol	base_list		1462123						
ANR	1463856	Symbol	* * base_list		1462123						
ANR	1463857	Function	auto_possessify	3637:0:115690:121019							
ANR	1463858	FunctionDef	"auto_possessify (pcre_uchar * code , BOOL utf , const compile_data * cd)"		1463857	0					
ANR	1463859	CompoundStatement		3639:0:115770:121019	1463857	0					
ANR	1463860	Statement	register	3640:0:115772:115779	1463857	0	True				
ANR	1463861	IdentifierDeclStatement	pcre_uchar c ;	3640:9:115781:115793	1463857	1	True				
ANR	1463862	IdentifierDecl	c		1463857	0					
ANR	1463863	IdentifierDeclType	pcre_uchar		1463857	0					
ANR	1463864	Identifier	c		1463857	1					
ANR	1463865	IdentifierDeclStatement	const pcre_uchar * end ;	3641:0:115795:115816	1463857	2	True				
ANR	1463866	IdentifierDecl	* end		1463857	0					
ANR	1463867	IdentifierDeclType	const pcre_uchar *		1463857	0					
ANR	1463868	Identifier	end		1463857	1					
ANR	1463869	IdentifierDeclStatement	pcre_uchar * repeat_opcode ;	3642:0:115818:115843	1463857	3	True				
ANR	1463870	IdentifierDecl	* repeat_opcode		1463857	0					
ANR	1463871	IdentifierDeclType	pcre_uchar *		1463857	0					
ANR	1463872	Identifier	repeat_opcode		1463857	1					
ANR	1463873	IdentifierDeclStatement	pcre_uint32 list [ 8 ] ;	3643:0:115845:115864	1463857	4	True				
ANR	1463874	IdentifierDecl	list [ 8 ]		1463857	0					
ANR	1463875	IdentifierDeclType	pcre_uint32 [ 8 ]		1463857	0					
ANR	1463876	Identifier	list		1463857	1					
ANR	1463877	PrimaryExpression	8		1463857	2					
ANR	1463878	IdentifierDeclStatement	int rec_limit ;	3644:0:115866:115879	1463857	5	True				
ANR	1463879	IdentifierDecl	rec_limit		1463857	0					
ANR	1463880	IdentifierDeclType	int		1463857	0					
ANR	1463881	Identifier	rec_limit		1463857	1					
ANR	1463882	ForStatement	for ( ; ; )		1463857	6					
ANR	1463883	CompoundStatement		9:2:122:122	1463857	0					
ANR	1463884	ExpressionStatement	c = * code	3648:2:115897:115906	1463857	0	True				
ANR	1463885	AssignmentExpression	c = * code		1463857	0		=			
ANR	1463886	Identifier	c		1463857	0					
ANR	1463887	UnaryOperationExpression	* code		1463857	1					
ANR	1463888	UnaryOperator	*		1463857	0					
ANR	1463889	Identifier	code		1463857	1					
ANR	1463890	IfStatement	if ( c >= OP_TABLE_LENGTH )		1463857	1					
ANR	1463891	Condition	c >= OP_TABLE_LENGTH	3656:6:116269:116288	1463857	0	True				
ANR	1463892	RelationalExpression	c >= OP_TABLE_LENGTH		1463857	0		>=			
ANR	1463893	Identifier	c		1463857	0					
ANR	1463894	Identifier	OP_TABLE_LENGTH		1463857	1					
ANR	1463895	ReturnStatement	return ;	3656:28:116291:116297	1463857	1	True				
ANR	1463896	IfStatement	if ( c >= OP_STAR && c <= OP_TYPEPOSUPTO )		1463857	2					
ANR	1463897	Condition	c >= OP_STAR && c <= OP_TYPEPOSUPTO	3658:6:116306:116340	1463857	0	True				
ANR	1463898	AndExpression	c >= OP_STAR && c <= OP_TYPEPOSUPTO		1463857	0		&&			
ANR	1463899	RelationalExpression	c >= OP_STAR		1463857	0		>=			
ANR	1463900	Identifier	c		1463857	0					
ANR	1463901	Identifier	OP_STAR		1463857	1					
ANR	1463902	RelationalExpression	c <= OP_TYPEPOSUPTO		1463857	1		<=			
ANR	1463903	Identifier	c		1463857	0					
ANR	1463904	Identifier	OP_TYPEPOSUPTO		1463857	1					
ANR	1463905	CompoundStatement		21:4:576:576	1463857	1					
ANR	1463906	ExpressionStatement	c -= get_repeat_base ( c ) - OP_STAR	3660:4:116353:116386	1463857	0	True				
ANR	1463907	AssignmentExpression	c -= get_repeat_base ( c ) - OP_STAR		1463857	0		-=			
ANR	1463908	Identifier	c		1463857	0					
ANR	1463909	AdditiveExpression	get_repeat_base ( c ) - OP_STAR		1463857	1		-			
ANR	1463910	CallExpression	get_repeat_base ( c )		1463857	0					
ANR	1463911	Callee	get_repeat_base		1463857	0					
ANR	1463912	Identifier	get_repeat_base		1463857	0					
ANR	1463913	ArgumentList	c		1463857	1					
ANR	1463914	Argument	c		1463857	0					
ANR	1463915	Identifier	c		1463857	0					
ANR	1463916	Identifier	OP_STAR		1463857	1					
ANR	1463917	ExpressionStatement	"end = ( c <= OP_MINUPTO ) ? get_chr_property_list ( code , utf , cd -> fcc , list ) : NULL"	3661:4:116392:116478	1463857	1	True				
ANR	1463918	AssignmentExpression	"end = ( c <= OP_MINUPTO ) ? get_chr_property_list ( code , utf , cd -> fcc , list ) : NULL"		1463857	0		=			
ANR	1463919	Identifier	end		1463857	0					
ANR	1463920	ConditionalExpression	"( c <= OP_MINUPTO ) ? get_chr_property_list ( code , utf , cd -> fcc , list ) : NULL"		1463857	1					
ANR	1463921	Condition	c <= OP_MINUPTO		1463857	0					
ANR	1463922	RelationalExpression	c <= OP_MINUPTO		1463857	0		<=			
ANR	1463923	Identifier	c		1463857	0					
ANR	1463924	Identifier	OP_MINUPTO		1463857	1					
ANR	1463925	CallExpression	"get_chr_property_list ( code , utf , cd -> fcc , list )"		1463857	1					
ANR	1463926	Callee	get_chr_property_list		1463857	0					
ANR	1463927	Identifier	get_chr_property_list		1463857	0					
ANR	1463928	ArgumentList	code		1463857	1					
ANR	1463929	Argument	code		1463857	0					
ANR	1463930	Identifier	code		1463857	0					
ANR	1463931	Argument	utf		1463857	1					
ANR	1463932	Identifier	utf		1463857	0					
ANR	1463933	Argument	cd -> fcc		1463857	2					
ANR	1463934	PtrMemberAccess	cd -> fcc		1463857	0					
ANR	1463935	Identifier	cd		1463857	0					
ANR	1463936	Identifier	fcc		1463857	1					
ANR	1463937	Argument	list		1463857	3					
ANR	1463938	Identifier	list		1463857	0					
ANR	1463939	Identifier	NULL		1463857	2					
ANR	1463940	ExpressionStatement	list [ 1 ] = c == OP_STAR || c == OP_PLUS || c == OP_QUERY || c == OP_UPTO	3663:4:116484:116555	1463857	2	True				
ANR	1463941	AssignmentExpression	list [ 1 ] = c == OP_STAR || c == OP_PLUS || c == OP_QUERY || c == OP_UPTO		1463857	0		=			
ANR	1463942	ArrayIndexing	list [ 1 ]		1463857	0					
ANR	1463943	Identifier	list		1463857	0					
ANR	1463944	PrimaryExpression	1		1463857	1					
ANR	1463945	OrExpression	c == OP_STAR || c == OP_PLUS || c == OP_QUERY || c == OP_UPTO		1463857	1		||			
ANR	1463946	EqualityExpression	c == OP_STAR		1463857	0		==			
ANR	1463947	Identifier	c		1463857	0					
ANR	1463948	Identifier	OP_STAR		1463857	1					
ANR	1463949	OrExpression	c == OP_PLUS || c == OP_QUERY || c == OP_UPTO		1463857	1		||			
ANR	1463950	EqualityExpression	c == OP_PLUS		1463857	0		==			
ANR	1463951	Identifier	c		1463857	0					
ANR	1463952	Identifier	OP_PLUS		1463857	1					
ANR	1463953	OrExpression	c == OP_QUERY || c == OP_UPTO		1463857	1		||			
ANR	1463954	EqualityExpression	c == OP_QUERY		1463857	0		==			
ANR	1463955	Identifier	c		1463857	0					
ANR	1463956	Identifier	OP_QUERY		1463857	1					
ANR	1463957	EqualityExpression	c == OP_UPTO		1463857	1		==			
ANR	1463958	Identifier	c		1463857	0					
ANR	1463959	Identifier	OP_UPTO		1463857	1					
ANR	1463960	ExpressionStatement	rec_limit = 1000	3665:4:116562:116578	1463857	3	True				
ANR	1463961	AssignmentExpression	rec_limit = 1000		1463857	0		=			
ANR	1463962	Identifier	rec_limit		1463857	0					
ANR	1463963	PrimaryExpression	1000		1463857	1					
ANR	1463964	IfStatement	"if ( end != NULL && compare_opcodes ( end , utf , cd , list , end , & rec_limit ) )"		1463857	4					
ANR	1463965	Condition	"end != NULL && compare_opcodes ( end , utf , cd , list , end , & rec_limit )"	3666:8:116588:116654	1463857	0	True				
ANR	1463966	AndExpression	"end != NULL && compare_opcodes ( end , utf , cd , list , end , & rec_limit )"		1463857	0		&&			
ANR	1463967	EqualityExpression	end != NULL		1463857	0		!=			
ANR	1463968	Identifier	end		1463857	0					
ANR	1463969	Identifier	NULL		1463857	1					
ANR	1463970	CallExpression	"compare_opcodes ( end , utf , cd , list , end , & rec_limit )"		1463857	1					
ANR	1463971	Callee	compare_opcodes		1463857	0					
ANR	1463972	Identifier	compare_opcodes		1463857	0					
ANR	1463973	ArgumentList	end		1463857	1					
ANR	1463974	Argument	end		1463857	0					
ANR	1463975	Identifier	end		1463857	0					
ANR	1463976	Argument	utf		1463857	1					
ANR	1463977	Identifier	utf		1463857	0					
ANR	1463978	Argument	cd		1463857	2					
ANR	1463979	Identifier	cd		1463857	0					
ANR	1463980	Argument	list		1463857	3					
ANR	1463981	Identifier	list		1463857	0					
ANR	1463982	Argument	end		1463857	4					
ANR	1463983	Identifier	end		1463857	0					
ANR	1463984	Argument	& rec_limit		1463857	5					
ANR	1463985	UnaryOperationExpression	& rec_limit		1463857	0					
ANR	1463986	UnaryOperator	&		1463857	0					
ANR	1463987	Identifier	rec_limit		1463857	1					
ANR	1463988	CompoundStatement		29:6:892:892	1463857	1					
ANR	1463989	SwitchStatement	switch ( c )		1463857	0					
ANR	1463990	Condition	c	3668:13:116678:116678	1463857	0	True				
ANR	1463991	Identifier	c		1463857	0					
ANR	1463992	CompoundStatement		31:8:918:918	1463857	1					
ANR	1463993	Label	case OP_STAR :	3670:8:116699:116711	1463857	0	True				
ANR	1463994	Identifier	OP_STAR		1463857	0					
ANR	1463995	ExpressionStatement	* code += OP_POSSTAR - OP_STAR	3671:8:116721:116750	1463857	1	True				
ANR	1463996	AssignmentExpression	* code += OP_POSSTAR - OP_STAR		1463857	0		+=			
ANR	1463997	UnaryOperationExpression	* code		1463857	0					
ANR	1463998	UnaryOperator	*		1463857	0					
ANR	1463999	Identifier	code		1463857	1					
ANR	1464000	AdditiveExpression	OP_POSSTAR - OP_STAR		1463857	1		-			
ANR	1464001	Identifier	OP_POSSTAR		1463857	0					
ANR	1464002	Identifier	OP_STAR		1463857	1					
ANR	1464003	BreakStatement	break ;	3672:8:116760:116765	1463857	2	True				
ANR	1464004	Label	case OP_MINSTAR :	3674:8:116776:116791	1463857	3	True				
ANR	1464005	Identifier	OP_MINSTAR		1463857	0					
ANR	1464006	ExpressionStatement	* code += OP_POSSTAR - OP_MINSTAR	3675:8:116801:116833	1463857	4	True				
ANR	1464007	AssignmentExpression	* code += OP_POSSTAR - OP_MINSTAR		1463857	0		+=			
ANR	1464008	UnaryOperationExpression	* code		1463857	0					
ANR	1464009	UnaryOperator	*		1463857	0					
ANR	1464010	Identifier	code		1463857	1					
ANR	1464011	AdditiveExpression	OP_POSSTAR - OP_MINSTAR		1463857	1		-			
ANR	1464012	Identifier	OP_POSSTAR		1463857	0					
ANR	1464013	Identifier	OP_MINSTAR		1463857	1					
ANR	1464014	BreakStatement	break ;	3676:8:116843:116848	1463857	5	True				
ANR	1464015	Label	case OP_PLUS :	3678:8:116859:116871	1463857	6	True				
ANR	1464016	Identifier	OP_PLUS		1463857	0					
ANR	1464017	ExpressionStatement	* code += OP_POSPLUS - OP_PLUS	3679:8:116881:116910	1463857	7	True				
ANR	1464018	AssignmentExpression	* code += OP_POSPLUS - OP_PLUS		1463857	0		+=			
ANR	1464019	UnaryOperationExpression	* code		1463857	0					
ANR	1464020	UnaryOperator	*		1463857	0					
ANR	1464021	Identifier	code		1463857	1					
ANR	1464022	AdditiveExpression	OP_POSPLUS - OP_PLUS		1463857	1		-			
ANR	1464023	Identifier	OP_POSPLUS		1463857	0					
ANR	1464024	Identifier	OP_PLUS		1463857	1					
ANR	1464025	BreakStatement	break ;	3680:8:116920:116925	1463857	8	True				
ANR	1464026	Label	case OP_MINPLUS :	3682:8:116936:116951	1463857	9	True				
ANR	1464027	Identifier	OP_MINPLUS		1463857	0					
ANR	1464028	ExpressionStatement	* code += OP_POSPLUS - OP_MINPLUS	3683:8:116961:116993	1463857	10	True				
ANR	1464029	AssignmentExpression	* code += OP_POSPLUS - OP_MINPLUS		1463857	0		+=			
ANR	1464030	UnaryOperationExpression	* code		1463857	0					
ANR	1464031	UnaryOperator	*		1463857	0					
ANR	1464032	Identifier	code		1463857	1					
ANR	1464033	AdditiveExpression	OP_POSPLUS - OP_MINPLUS		1463857	1		-			
ANR	1464034	Identifier	OP_POSPLUS		1463857	0					
ANR	1464035	Identifier	OP_MINPLUS		1463857	1					
ANR	1464036	BreakStatement	break ;	3684:8:117003:117008	1463857	11	True				
ANR	1464037	Label	case OP_QUERY :	3686:8:117019:117032	1463857	12	True				
ANR	1464038	Identifier	OP_QUERY		1463857	0					
ANR	1464039	ExpressionStatement	* code += OP_POSQUERY - OP_QUERY	3687:8:117042:117073	1463857	13	True				
ANR	1464040	AssignmentExpression	* code += OP_POSQUERY - OP_QUERY		1463857	0		+=			
ANR	1464041	UnaryOperationExpression	* code		1463857	0					
ANR	1464042	UnaryOperator	*		1463857	0					
ANR	1464043	Identifier	code		1463857	1					
ANR	1464044	AdditiveExpression	OP_POSQUERY - OP_QUERY		1463857	1		-			
ANR	1464045	Identifier	OP_POSQUERY		1463857	0					
ANR	1464046	Identifier	OP_QUERY		1463857	1					
ANR	1464047	BreakStatement	break ;	3688:8:117083:117088	1463857	14	True				
ANR	1464048	Label	case OP_MINQUERY :	3690:8:117099:117115	1463857	15	True				
ANR	1464049	Identifier	OP_MINQUERY		1463857	0					
ANR	1464050	ExpressionStatement	* code += OP_POSQUERY - OP_MINQUERY	3691:8:117125:117159	1463857	16	True				
ANR	1464051	AssignmentExpression	* code += OP_POSQUERY - OP_MINQUERY		1463857	0		+=			
ANR	1464052	UnaryOperationExpression	* code		1463857	0					
ANR	1464053	UnaryOperator	*		1463857	0					
ANR	1464054	Identifier	code		1463857	1					
ANR	1464055	AdditiveExpression	OP_POSQUERY - OP_MINQUERY		1463857	1		-			
ANR	1464056	Identifier	OP_POSQUERY		1463857	0					
ANR	1464057	Identifier	OP_MINQUERY		1463857	1					
ANR	1464058	BreakStatement	break ;	3692:8:117169:117174	1463857	17	True				
ANR	1464059	Label	case OP_UPTO :	3694:8:117185:117197	1463857	18	True				
ANR	1464060	Identifier	OP_UPTO		1463857	0					
ANR	1464061	ExpressionStatement	* code += OP_POSUPTO - OP_UPTO	3695:8:117207:117236	1463857	19	True				
ANR	1464062	AssignmentExpression	* code += OP_POSUPTO - OP_UPTO		1463857	0		+=			
ANR	1464063	UnaryOperationExpression	* code		1463857	0					
ANR	1464064	UnaryOperator	*		1463857	0					
ANR	1464065	Identifier	code		1463857	1					
ANR	1464066	AdditiveExpression	OP_POSUPTO - OP_UPTO		1463857	1		-			
ANR	1464067	Identifier	OP_POSUPTO		1463857	0					
ANR	1464068	Identifier	OP_UPTO		1463857	1					
ANR	1464069	BreakStatement	break ;	3696:8:117246:117251	1463857	20	True				
ANR	1464070	Label	case OP_MINUPTO :	3698:8:117262:117277	1463857	21	True				
ANR	1464071	Identifier	OP_MINUPTO		1463857	0					
ANR	1464072	ExpressionStatement	* code += OP_POSUPTO - OP_MINUPTO	3699:8:117287:117319	1463857	22	True				
ANR	1464073	AssignmentExpression	* code += OP_POSUPTO - OP_MINUPTO		1463857	0		+=			
ANR	1464074	UnaryOperationExpression	* code		1463857	0					
ANR	1464075	UnaryOperator	*		1463857	0					
ANR	1464076	Identifier	code		1463857	1					
ANR	1464077	AdditiveExpression	OP_POSUPTO - OP_MINUPTO		1463857	1		-			
ANR	1464078	Identifier	OP_POSUPTO		1463857	0					
ANR	1464079	Identifier	OP_MINUPTO		1463857	1					
ANR	1464080	BreakStatement	break ;	3700:8:117329:117334	1463857	23	True				
ANR	1464081	ExpressionStatement	c = * code	3703:4:117358:117367	1463857	5	True				
ANR	1464082	AssignmentExpression	c = * code		1463857	0		=			
ANR	1464083	Identifier	c		1463857	0					
ANR	1464084	UnaryOperationExpression	* code		1463857	1					
ANR	1464085	UnaryOperator	*		1463857	0					
ANR	1464086	Identifier	code		1463857	1					
ANR	1464087	ElseStatement	else		1463857	0					
ANR	1464088	IfStatement	if ( c == OP_CLASS || c == OP_NCLASS || c == OP_XCLASS )		1463857	0					
ANR	1464089	Condition	c == OP_CLASS || c == OP_NCLASS || c == OP_XCLASS	3705:11:117386:117434	1463857	0	True				
ANR	1464090	OrExpression	c == OP_CLASS || c == OP_NCLASS || c == OP_XCLASS		1463857	0		||			
ANR	1464091	EqualityExpression	c == OP_CLASS		1463857	0		==			
ANR	1464092	Identifier	c		1463857	0					
ANR	1464093	Identifier	OP_CLASS		1463857	1					
ANR	1464094	OrExpression	c == OP_NCLASS || c == OP_XCLASS		1463857	1		||			
ANR	1464095	EqualityExpression	c == OP_NCLASS		1463857	0		==			
ANR	1464096	Identifier	c		1463857	0					
ANR	1464097	Identifier	OP_NCLASS		1463857	1					
ANR	1464098	EqualityExpression	c == OP_XCLASS		1463857	1		==			
ANR	1464099	Identifier	c		1463857	0					
ANR	1464100	Identifier	OP_XCLASS		1463857	1					
ANR	1464101	CompoundStatement		68:4:1670:1670	1463857	1					
ANR	1464102	IfStatement	if ( c == OP_XCLASS )		1463857	0					
ANR	1464103	Condition	c == OP_XCLASS	3708:8:117501:117514	1463857	0	True				
ANR	1464104	EqualityExpression	c == OP_XCLASS		1463857	0		==			
ANR	1464105	Identifier	c		1463857	0					
ANR	1464106	Identifier	OP_XCLASS		1463857	1					
ANR	1464107	ExpressionStatement	"repeat_opcode = code + GET ( code , 1 )"	3709:6:117523:117558	1463857	1	True				
ANR	1464108	AssignmentExpression	"repeat_opcode = code + GET ( code , 1 )"		1463857	0		=			
ANR	1464109	Identifier	repeat_opcode		1463857	0					
ANR	1464110	AdditiveExpression	"code + GET ( code , 1 )"		1463857	1		+			
ANR	1464111	Identifier	code		1463857	0					
ANR	1464112	CallExpression	"GET ( code , 1 )"		1463857	1					
ANR	1464113	Callee	GET		1463857	0					
ANR	1464114	Identifier	GET		1463857	0					
ANR	1464115	ArgumentList	code		1463857	1					
ANR	1464116	Argument	code		1463857	0					
ANR	1464117	Identifier	code		1463857	0					
ANR	1464118	Argument	1		1463857	1					
ANR	1464119	PrimaryExpression	1		1463857	0					
ANR	1464120	ElseStatement	else		1463857	0					
ANR	1464121	ExpressionStatement	repeat_opcode = code + 1 + ( 32 / sizeof ( pcre_uchar ) )	3712:6:117582:117634	1463857	0	True				
ANR	1464122	AssignmentExpression	repeat_opcode = code + 1 + ( 32 / sizeof ( pcre_uchar ) )		1463857	0		=			
ANR	1464123	Identifier	repeat_opcode		1463857	0					
ANR	1464124	AdditiveExpression	code + 1 + ( 32 / sizeof ( pcre_uchar ) )		1463857	1		+			
ANR	1464125	Identifier	code		1463857	0					
ANR	1464126	AdditiveExpression	1 + ( 32 / sizeof ( pcre_uchar ) )		1463857	1		+			
ANR	1464127	PrimaryExpression	1		1463857	0					
ANR	1464128	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		1463857	1		/			
ANR	1464129	PrimaryExpression	32		1463857	0					
ANR	1464130	SizeofExpression	sizeof ( pcre_uchar )		1463857	1					
ANR	1464131	Sizeof	sizeof		1463857	0					
ANR	1464132	SizeofOperand	pcre_uchar		1463857	1					
ANR	1464133	ExpressionStatement	c = * repeat_opcode	3714:4:117641:117659	1463857	1	True				
ANR	1464134	AssignmentExpression	c = * repeat_opcode		1463857	0		=			
ANR	1464135	Identifier	c		1463857	0					
ANR	1464136	UnaryOperationExpression	* repeat_opcode		1463857	1					
ANR	1464137	UnaryOperator	*		1463857	0					
ANR	1464138	Identifier	repeat_opcode		1463857	1					
ANR	1464139	IfStatement	if ( c >= OP_CRSTAR && c <= OP_CRMINRANGE )		1463857	2					
ANR	1464140	Condition	c >= OP_CRSTAR && c <= OP_CRMINRANGE	3715:8:117669:117704	1463857	0	True				
ANR	1464141	AndExpression	c >= OP_CRSTAR && c <= OP_CRMINRANGE		1463857	0		&&			
ANR	1464142	RelationalExpression	c >= OP_CRSTAR		1463857	0		>=			
ANR	1464143	Identifier	c		1463857	0					
ANR	1464144	Identifier	OP_CRSTAR		1463857	1					
ANR	1464145	RelationalExpression	c <= OP_CRMINRANGE		1463857	1		<=			
ANR	1464146	Identifier	c		1463857	0					
ANR	1464147	Identifier	OP_CRMINRANGE		1463857	1					
ANR	1464148	CompoundStatement		78:6:1942:1942	1463857	1					
ANR	1464149	ExpressionStatement	"end = get_chr_property_list ( code , utf , cd -> fcc , list )"	3718:6:117755:117808	1463857	0	True				
ANR	1464150	AssignmentExpression	"end = get_chr_property_list ( code , utf , cd -> fcc , list )"		1463857	0		=			
ANR	1464151	Identifier	end		1463857	0					
ANR	1464152	CallExpression	"get_chr_property_list ( code , utf , cd -> fcc , list )"		1463857	1					
ANR	1464153	Callee	get_chr_property_list		1463857	0					
ANR	1464154	Identifier	get_chr_property_list		1463857	0					
ANR	1464155	ArgumentList	code		1463857	1					
ANR	1464156	Argument	code		1463857	0					
ANR	1464157	Identifier	code		1463857	0					
ANR	1464158	Argument	utf		1463857	1					
ANR	1464159	Identifier	utf		1463857	0					
ANR	1464160	Argument	cd -> fcc		1463857	2					
ANR	1464161	PtrMemberAccess	cd -> fcc		1463857	0					
ANR	1464162	Identifier	cd		1463857	0					
ANR	1464163	Identifier	fcc		1463857	1					
ANR	1464164	Argument	list		1463857	3					
ANR	1464165	Identifier	list		1463857	0					
ANR	1464166	ExpressionStatement	list [ 1 ] = ( c & 1 ) == 0	3720:6:117817:117839	1463857	1	True				
ANR	1464167	AssignmentExpression	list [ 1 ] = ( c & 1 ) == 0		1463857	0		=			
ANR	1464168	ArrayIndexing	list [ 1 ]		1463857	0					
ANR	1464169	Identifier	list		1463857	0					
ANR	1464170	PrimaryExpression	1		1463857	1					
ANR	1464171	EqualityExpression	( c & 1 ) == 0		1463857	1		==			
ANR	1464172	BitAndExpression	c & 1		1463857	0		&			
ANR	1464173	Identifier	c		1463857	0					
ANR	1464174	PrimaryExpression	1		1463857	1					
ANR	1464175	PrimaryExpression	0		1463857	1					
ANR	1464176	ExpressionStatement	rec_limit = 1000	3722:6:117848:117864	1463857	2	True				
ANR	1464177	AssignmentExpression	rec_limit = 1000		1463857	0		=			
ANR	1464178	Identifier	rec_limit		1463857	0					
ANR	1464179	PrimaryExpression	1000		1463857	1					
ANR	1464180	IfStatement	"if ( compare_opcodes ( end , utf , cd , list , end , & rec_limit ) )"		1463857	3					
ANR	1464181	Condition	"compare_opcodes ( end , utf , cd , list , end , & rec_limit )"	3723:10:117876:117927	1463857	0	True				
ANR	1464182	CallExpression	"compare_opcodes ( end , utf , cd , list , end , & rec_limit )"		1463857	0					
ANR	1464183	Callee	compare_opcodes		1463857	0					
ANR	1464184	Identifier	compare_opcodes		1463857	0					
ANR	1464185	ArgumentList	end		1463857	1					
ANR	1464186	Argument	end		1463857	0					
ANR	1464187	Identifier	end		1463857	0					
ANR	1464188	Argument	utf		1463857	1					
ANR	1464189	Identifier	utf		1463857	0					
ANR	1464190	Argument	cd		1463857	2					
ANR	1464191	Identifier	cd		1463857	0					
ANR	1464192	Argument	list		1463857	3					
ANR	1464193	Identifier	list		1463857	0					
ANR	1464194	Argument	end		1463857	4					
ANR	1464195	Identifier	end		1463857	0					
ANR	1464196	Argument	& rec_limit		1463857	5					
ANR	1464197	UnaryOperationExpression	& rec_limit		1463857	0					
ANR	1464198	UnaryOperator	&		1463857	0					
ANR	1464199	Identifier	rec_limit		1463857	1					
ANR	1464200	CompoundStatement		86:8:2167:2167	1463857	1					
ANR	1464201	SwitchStatement	switch ( c )		1463857	0					
ANR	1464202	Condition	c	3725:16:117956:117956	1463857	0	True				
ANR	1464203	Identifier	c		1463857	0					
ANR	1464204	CompoundStatement		88:10:2198:2198	1463857	1					
ANR	1464205	Label	case OP_CRSTAR :	3727:10:117981:117995	1463857	0	True				
ANR	1464206	Identifier	OP_CRSTAR		1463857	0					
ANR	1464207	Label	case OP_CRMINSTAR :	3728:10:118007:118024	1463857	1	True				
ANR	1464208	Identifier	OP_CRMINSTAR		1463857	0					
ANR	1464209	ExpressionStatement	* repeat_opcode = OP_CRPOSSTAR	3729:10:118036:118065	1463857	2	True				
ANR	1464210	AssignmentExpression	* repeat_opcode = OP_CRPOSSTAR		1463857	0		=			
ANR	1464211	UnaryOperationExpression	* repeat_opcode		1463857	0					
ANR	1464212	UnaryOperator	*		1463857	0					
ANR	1464213	Identifier	repeat_opcode		1463857	1					
ANR	1464214	Identifier	OP_CRPOSSTAR		1463857	1					
ANR	1464215	BreakStatement	break ;	3730:10:118077:118082	1463857	3	True				
ANR	1464216	Label	case OP_CRPLUS :	3732:10:118095:118109	1463857	4	True				
ANR	1464217	Identifier	OP_CRPLUS		1463857	0					
ANR	1464218	Label	case OP_CRMINPLUS :	3733:10:118121:118138	1463857	5	True				
ANR	1464219	Identifier	OP_CRMINPLUS		1463857	0					
ANR	1464220	ExpressionStatement	* repeat_opcode = OP_CRPOSPLUS	3734:10:118150:118179	1463857	6	True				
ANR	1464221	AssignmentExpression	* repeat_opcode = OP_CRPOSPLUS		1463857	0		=			
ANR	1464222	UnaryOperationExpression	* repeat_opcode		1463857	0					
ANR	1464223	UnaryOperator	*		1463857	0					
ANR	1464224	Identifier	repeat_opcode		1463857	1					
ANR	1464225	Identifier	OP_CRPOSPLUS		1463857	1					
ANR	1464226	BreakStatement	break ;	3735:10:118191:118196	1463857	7	True				
ANR	1464227	Label	case OP_CRQUERY :	3737:10:118209:118224	1463857	8	True				
ANR	1464228	Identifier	OP_CRQUERY		1463857	0					
ANR	1464229	Label	case OP_CRMINQUERY :	3738:10:118236:118254	1463857	9	True				
ANR	1464230	Identifier	OP_CRMINQUERY		1463857	0					
ANR	1464231	ExpressionStatement	* repeat_opcode = OP_CRPOSQUERY	3739:10:118266:118296	1463857	10	True				
ANR	1464232	AssignmentExpression	* repeat_opcode = OP_CRPOSQUERY		1463857	0		=			
ANR	1464233	UnaryOperationExpression	* repeat_opcode		1463857	0					
ANR	1464234	UnaryOperator	*		1463857	0					
ANR	1464235	Identifier	repeat_opcode		1463857	1					
ANR	1464236	Identifier	OP_CRPOSQUERY		1463857	1					
ANR	1464237	BreakStatement	break ;	3740:10:118308:118313	1463857	11	True				
ANR	1464238	Label	case OP_CRRANGE :	3742:10:118326:118341	1463857	12	True				
ANR	1464239	Identifier	OP_CRRANGE		1463857	0					
ANR	1464240	Label	case OP_CRMINRANGE :	3743:10:118353:118371	1463857	13	True				
ANR	1464241	Identifier	OP_CRMINRANGE		1463857	0					
ANR	1464242	ExpressionStatement	* repeat_opcode = OP_CRPOSRANGE	3744:10:118383:118413	1463857	14	True				
ANR	1464243	AssignmentExpression	* repeat_opcode = OP_CRPOSRANGE		1463857	0		=			
ANR	1464244	UnaryOperationExpression	* repeat_opcode		1463857	0					
ANR	1464245	UnaryOperator	*		1463857	0					
ANR	1464246	Identifier	repeat_opcode		1463857	1					
ANR	1464247	Identifier	OP_CRPOSRANGE		1463857	1					
ANR	1464248	BreakStatement	break ;	3745:10:118425:118430	1463857	15	True				
ANR	1464249	ExpressionStatement	c = * code	3749:4:118466:118475	1463857	3	True				
ANR	1464250	AssignmentExpression	c = * code		1463857	0		=			
ANR	1464251	Identifier	c		1463857	0					
ANR	1464252	UnaryOperationExpression	* code		1463857	1					
ANR	1464253	UnaryOperator	*		1463857	0					
ANR	1464254	Identifier	code		1463857	1					
ANR	1464255	SwitchStatement	switch ( c )		1463857	3					
ANR	1464256	Condition	c	3752:9:118493:118493	1463857	0	True				
ANR	1464257	Identifier	c		1463857	0					
ANR	1464258	CompoundStatement		115:4:2729:2729	1463857	1					
ANR	1464259	Label	case OP_END :	3754:4:118506:118517	1463857	0	True				
ANR	1464260	Identifier	OP_END		1463857	0					
ANR	1464261	ReturnStatement	return ;	3755:4:118523:118529	1463857	1	True				
ANR	1464262	Label	case OP_TYPESTAR :	3757:4:118536:118552	1463857	2	True				
ANR	1464263	Identifier	OP_TYPESTAR		1463857	0					
ANR	1464264	Label	case OP_TYPEMINSTAR :	3758:4:118558:118577	1463857	3	True				
ANR	1464265	Identifier	OP_TYPEMINSTAR		1463857	0					
ANR	1464266	Label	case OP_TYPEPLUS :	3759:4:118583:118599	1463857	4	True				
ANR	1464267	Identifier	OP_TYPEPLUS		1463857	0					
ANR	1464268	Label	case OP_TYPEMINPLUS :	3760:4:118605:118624	1463857	5	True				
ANR	1464269	Identifier	OP_TYPEMINPLUS		1463857	0					
ANR	1464270	Label	case OP_TYPEQUERY :	3761:4:118630:118647	1463857	6	True				
ANR	1464271	Identifier	OP_TYPEQUERY		1463857	0					
ANR	1464272	Label	case OP_TYPEMINQUERY :	3762:4:118653:118673	1463857	7	True				
ANR	1464273	Identifier	OP_TYPEMINQUERY		1463857	0					
ANR	1464274	Label	case OP_TYPEPOSSTAR :	3763:4:118679:118698	1463857	8	True				
ANR	1464275	Identifier	OP_TYPEPOSSTAR		1463857	0					
ANR	1464276	Label	case OP_TYPEPOSPLUS :	3764:4:118704:118723	1463857	9	True				
ANR	1464277	Identifier	OP_TYPEPOSPLUS		1463857	0					
ANR	1464278	Label	case OP_TYPEPOSQUERY :	3765:4:118729:118749	1463857	10	True				
ANR	1464279	Identifier	OP_TYPEPOSQUERY		1463857	0					
ANR	1464280	IfStatement	if ( code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP )		1463857	11					
ANR	1464281	Condition	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP	3766:8:118759:118801	1463857	0	True				
ANR	1464282	OrExpression	code [ 1 ] == OP_PROP || code [ 1 ] == OP_NOTPROP		1463857	0		||			
ANR	1464283	EqualityExpression	code [ 1 ] == OP_PROP		1463857	0		==			
ANR	1464284	ArrayIndexing	code [ 1 ]		1463857	0					
ANR	1464285	Identifier	code		1463857	0					
ANR	1464286	PrimaryExpression	1		1463857	1					
ANR	1464287	Identifier	OP_PROP		1463857	1					
ANR	1464288	EqualityExpression	code [ 1 ] == OP_NOTPROP		1463857	1		==			
ANR	1464289	ArrayIndexing	code [ 1 ]		1463857	0					
ANR	1464290	Identifier	code		1463857	0					
ANR	1464291	PrimaryExpression	1		1463857	1					
ANR	1464292	Identifier	OP_NOTPROP		1463857	1					
ANR	1464293	ExpressionStatement	code += 2	3766:53:118804:118813	1463857	1	True				
ANR	1464294	AssignmentExpression	code += 2		1463857	0		+=			
ANR	1464295	Identifier	code		1463857	0					
ANR	1464296	PrimaryExpression	2		1463857	1					
ANR	1464297	BreakStatement	break ;	3767:4:118819:118824	1463857	12	True				
ANR	1464298	Label	case OP_TYPEUPTO :	3769:4:118831:118847	1463857	13	True				
ANR	1464299	Identifier	OP_TYPEUPTO		1463857	0					
ANR	1464300	Label	case OP_TYPEMINUPTO :	3770:4:118853:118872	1463857	14	True				
ANR	1464301	Identifier	OP_TYPEMINUPTO		1463857	0					
ANR	1464302	Label	case OP_TYPEEXACT :	3771:4:118878:118895	1463857	15	True				
ANR	1464303	Identifier	OP_TYPEEXACT		1463857	0					
ANR	1464304	Label	case OP_TYPEPOSUPTO :	3772:4:118901:118920	1463857	16	True				
ANR	1464305	Identifier	OP_TYPEPOSUPTO		1463857	0					
ANR	1464306	IfStatement	if ( code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP )		1463857	17					
ANR	1464307	Condition	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP	3773:8:118930:118996	1463857	0	True				
ANR	1464308	OrExpression	code [ 1 + IMM2_SIZE ] == OP_PROP || code [ 1 + IMM2_SIZE ] == OP_NOTPROP		1463857	0		||			
ANR	1464309	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_PROP		1463857	0		==			
ANR	1464310	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1463857	0					
ANR	1464311	Identifier	code		1463857	0					
ANR	1464312	AdditiveExpression	1 + IMM2_SIZE		1463857	1		+			
ANR	1464313	PrimaryExpression	1		1463857	0					
ANR	1464314	Identifier	IMM2_SIZE		1463857	1					
ANR	1464315	Identifier	OP_PROP		1463857	1					
ANR	1464316	EqualityExpression	code [ 1 + IMM2_SIZE ] == OP_NOTPROP		1463857	1		==			
ANR	1464317	ArrayIndexing	code [ 1 + IMM2_SIZE ]		1463857	0					
ANR	1464318	Identifier	code		1463857	0					
ANR	1464319	AdditiveExpression	1 + IMM2_SIZE		1463857	1		+			
ANR	1464320	PrimaryExpression	1		1463857	0					
ANR	1464321	Identifier	IMM2_SIZE		1463857	1					
ANR	1464322	Identifier	OP_NOTPROP		1463857	1					
ANR	1464323	ExpressionStatement	code += 2	3774:6:119005:119014	1463857	1	True				
ANR	1464324	AssignmentExpression	code += 2		1463857	0		+=			
ANR	1464325	Identifier	code		1463857	0					
ANR	1464326	PrimaryExpression	2		1463857	1					
ANR	1464327	BreakStatement	break ;	3775:4:119020:119025	1463857	18	True				
ANR	1464328	Label	case OP_XCLASS :	3778:4:119082:119096	1463857	19	True				
ANR	1464329	Identifier	OP_XCLASS		1463857	0					
ANR	1464330	ExpressionStatement	"code += GET ( code , 1 )"	3779:4:119102:119122	1463857	20	True				
ANR	1464331	AssignmentExpression	"code += GET ( code , 1 )"		1463857	0		+=			
ANR	1464332	Identifier	code		1463857	0					
ANR	1464333	CallExpression	"GET ( code , 1 )"		1463857	1					
ANR	1464334	Callee	GET		1463857	0					
ANR	1464335	Identifier	GET		1463857	0					
ANR	1464336	ArgumentList	code		1463857	1					
ANR	1464337	Argument	code		1463857	0					
ANR	1464338	Identifier	code		1463857	0					
ANR	1464339	Argument	1		1463857	1					
ANR	1464340	PrimaryExpression	1		1463857	0					
ANR	1464341	BreakStatement	break ;	3780:4:119128:119133	1463857	21	True				
ANR	1464342	Label	case OP_MARK :	3783:4:119147:119159	1463857	22	True				
ANR	1464343	Identifier	OP_MARK		1463857	0					
ANR	1464344	Label	case OP_PRUNE_ARG :	3784:4:119165:119182	1463857	23	True				
ANR	1464345	Identifier	OP_PRUNE_ARG		1463857	0					
ANR	1464346	Label	case OP_SKIP_ARG :	3785:4:119188:119204	1463857	24	True				
ANR	1464347	Identifier	OP_SKIP_ARG		1463857	0					
ANR	1464348	Label	case OP_THEN_ARG :	3786:4:119210:119226	1463857	25	True				
ANR	1464349	Identifier	OP_THEN_ARG		1463857	0					
ANR	1464350	ExpressionStatement	code += code [ 1 ]	3787:4:119232:119247	1463857	26	True				
ANR	1464351	AssignmentExpression	code += code [ 1 ]		1463857	0		+=			
ANR	1464352	Identifier	code		1463857	0					
ANR	1464353	ArrayIndexing	code [ 1 ]		1463857	1					
ANR	1464354	Identifier	code		1463857	0					
ANR	1464355	PrimaryExpression	1		1463857	1					
ANR	1464356	BreakStatement	break ;	3788:4:119253:119258	1463857	27	True				
ANR	1464357	ExpressionStatement	code += PRIV ( OP_lengths ) [ c ]	3793:2:119317:119344	1463857	4	True				
ANR	1464358	AssignmentExpression	code += PRIV ( OP_lengths ) [ c ]		1463857	0		+=			
ANR	1464359	Identifier	code		1463857	0					
ANR	1464360	ArrayIndexing	PRIV ( OP_lengths ) [ c ]		1463857	1					
ANR	1464361	CallExpression	PRIV ( OP_lengths )		1463857	0					
ANR	1464362	Callee	PRIV		1463857	0					
ANR	1464363	Identifier	PRIV		1463857	0					
ANR	1464364	ArgumentList	OP_lengths		1463857	1					
ANR	1464365	Argument	OP_lengths		1463857	0					
ANR	1464366	Identifier	OP_lengths		1463857	0					
ANR	1464367	Identifier	c		1463857	1					
ANR	1464368	IfStatement	if ( utf )		1463857	5					
ANR	1464369	Condition	utf	3800:6:119601:119603	1463857	0	True				
ANR	1464370	Identifier	utf		1463857	0					
ANR	1464371	SwitchStatement	switch ( c )		1463857	1					
ANR	1464372	Condition	c	3800:18:119613:119613	1463857	0	True				
ANR	1464373	Identifier	c		1463857	0					
ANR	1464374	CompoundStatement		163:4:3849:3849	1463857	1					
ANR	1464375	Label	case OP_CHAR :	3802:4:119626:119638	1463857	0	True				
ANR	1464376	Identifier	OP_CHAR		1463857	0					
ANR	1464377	Label	case OP_CHARI :	3803:4:119644:119657	1463857	1	True				
ANR	1464378	Identifier	OP_CHARI		1463857	0					
ANR	1464379	Label	case OP_NOT :	3804:4:119663:119674	1463857	2	True				
ANR	1464380	Identifier	OP_NOT		1463857	0					
ANR	1464381	Label	case OP_NOTI :	3805:4:119680:119692	1463857	3	True				
ANR	1464382	Identifier	OP_NOTI		1463857	0					
ANR	1464383	Label	case OP_STAR :	3806:4:119698:119710	1463857	4	True				
ANR	1464384	Identifier	OP_STAR		1463857	0					
ANR	1464385	Label	case OP_MINSTAR :	3807:4:119716:119731	1463857	5	True				
ANR	1464386	Identifier	OP_MINSTAR		1463857	0					
ANR	1464387	Label	case OP_PLUS :	3808:4:119737:119749	1463857	6	True				
ANR	1464388	Identifier	OP_PLUS		1463857	0					
ANR	1464389	Label	case OP_MINPLUS :	3809:4:119755:119770	1463857	7	True				
ANR	1464390	Identifier	OP_MINPLUS		1463857	0					
ANR	1464391	Label	case OP_QUERY :	3810:4:119776:119789	1463857	8	True				
ANR	1464392	Identifier	OP_QUERY		1463857	0					
ANR	1464393	Label	case OP_MINQUERY :	3811:4:119795:119811	1463857	9	True				
ANR	1464394	Identifier	OP_MINQUERY		1463857	0					
ANR	1464395	Label	case OP_UPTO :	3812:4:119817:119829	1463857	10	True				
ANR	1464396	Identifier	OP_UPTO		1463857	0					
ANR	1464397	Label	case OP_MINUPTO :	3813:4:119835:119850	1463857	11	True				
ANR	1464398	Identifier	OP_MINUPTO		1463857	0					
ANR	1464399	Label	case OP_EXACT :	3814:4:119856:119869	1463857	12	True				
ANR	1464400	Identifier	OP_EXACT		1463857	0					
ANR	1464401	Label	case OP_POSSTAR :	3815:4:119875:119890	1463857	13	True				
ANR	1464402	Identifier	OP_POSSTAR		1463857	0					
ANR	1464403	Label	case OP_POSPLUS :	3816:4:119896:119911	1463857	14	True				
ANR	1464404	Identifier	OP_POSPLUS		1463857	0					
ANR	1464405	Label	case OP_POSQUERY :	3817:4:119917:119933	1463857	15	True				
ANR	1464406	Identifier	OP_POSQUERY		1463857	0					
ANR	1464407	Label	case OP_POSUPTO :	3818:4:119939:119954	1463857	16	True				
ANR	1464408	Identifier	OP_POSUPTO		1463857	0					
ANR	1464409	Label	case OP_STARI :	3819:4:119960:119973	1463857	17	True				
ANR	1464410	Identifier	OP_STARI		1463857	0					
ANR	1464411	Label	case OP_MINSTARI :	3820:4:119979:119995	1463857	18	True				
ANR	1464412	Identifier	OP_MINSTARI		1463857	0					
ANR	1464413	Label	case OP_PLUSI :	3821:4:120001:120014	1463857	19	True				
ANR	1464414	Identifier	OP_PLUSI		1463857	0					
ANR	1464415	Label	case OP_MINPLUSI :	3822:4:120020:120036	1463857	20	True				
ANR	1464416	Identifier	OP_MINPLUSI		1463857	0					
ANR	1464417	Label	case OP_QUERYI :	3823:4:120042:120056	1463857	21	True				
ANR	1464418	Identifier	OP_QUERYI		1463857	0					
ANR	1464419	Label	case OP_MINQUERYI :	3824:4:120062:120079	1463857	22	True				
ANR	1464420	Identifier	OP_MINQUERYI		1463857	0					
ANR	1464421	Label	case OP_UPTOI :	3825:4:120085:120098	1463857	23	True				
ANR	1464422	Identifier	OP_UPTOI		1463857	0					
ANR	1464423	Label	case OP_MINUPTOI :	3826:4:120104:120120	1463857	24	True				
ANR	1464424	Identifier	OP_MINUPTOI		1463857	0					
ANR	1464425	Label	case OP_EXACTI :	3827:4:120126:120140	1463857	25	True				
ANR	1464426	Identifier	OP_EXACTI		1463857	0					
ANR	1464427	Label	case OP_POSSTARI :	3828:4:120146:120162	1463857	26	True				
ANR	1464428	Identifier	OP_POSSTARI		1463857	0					
ANR	1464429	Label	case OP_POSPLUSI :	3829:4:120168:120184	1463857	27	True				
ANR	1464430	Identifier	OP_POSPLUSI		1463857	0					
ANR	1464431	Label	case OP_POSQUERYI :	3830:4:120190:120207	1463857	28	True				
ANR	1464432	Identifier	OP_POSQUERYI		1463857	0					
ANR	1464433	Label	case OP_POSUPTOI :	3831:4:120213:120229	1463857	29	True				
ANR	1464434	Identifier	OP_POSUPTOI		1463857	0					
ANR	1464435	Label	case OP_NOTSTAR :	3832:4:120235:120250	1463857	30	True				
ANR	1464436	Identifier	OP_NOTSTAR		1463857	0					
ANR	1464437	Label	case OP_NOTMINSTAR :	3833:4:120256:120274	1463857	31	True				
ANR	1464438	Identifier	OP_NOTMINSTAR		1463857	0					
ANR	1464439	Label	case OP_NOTPLUS :	3834:4:120280:120295	1463857	32	True				
ANR	1464440	Identifier	OP_NOTPLUS		1463857	0					
ANR	1464441	Label	case OP_NOTMINPLUS :	3835:4:120301:120319	1463857	33	True				
ANR	1464442	Identifier	OP_NOTMINPLUS		1463857	0					
ANR	1464443	Label	case OP_NOTQUERY :	3836:4:120325:120341	1463857	34	True				
ANR	1464444	Identifier	OP_NOTQUERY		1463857	0					
ANR	1464445	Label	case OP_NOTMINQUERY :	3837:4:120347:120366	1463857	35	True				
ANR	1464446	Identifier	OP_NOTMINQUERY		1463857	0					
ANR	1464447	Label	case OP_NOTUPTO :	3838:4:120372:120387	1463857	36	True				
ANR	1464448	Identifier	OP_NOTUPTO		1463857	0					
ANR	1464449	Label	case OP_NOTMINUPTO :	3839:4:120393:120411	1463857	37	True				
ANR	1464450	Identifier	OP_NOTMINUPTO		1463857	0					
ANR	1464451	Label	case OP_NOTEXACT :	3840:4:120417:120433	1463857	38	True				
ANR	1464452	Identifier	OP_NOTEXACT		1463857	0					
ANR	1464453	Label	case OP_NOTPOSSTAR :	3841:4:120439:120457	1463857	39	True				
ANR	1464454	Identifier	OP_NOTPOSSTAR		1463857	0					
ANR	1464455	Label	case OP_NOTPOSPLUS :	3842:4:120463:120481	1463857	40	True				
ANR	1464456	Identifier	OP_NOTPOSPLUS		1463857	0					
ANR	1464457	Label	case OP_NOTPOSQUERY :	3843:4:120487:120506	1463857	41	True				
ANR	1464458	Identifier	OP_NOTPOSQUERY		1463857	0					
ANR	1464459	Label	case OP_NOTPOSUPTO :	3844:4:120512:120530	1463857	42	True				
ANR	1464460	Identifier	OP_NOTPOSUPTO		1463857	0					
ANR	1464461	Label	case OP_NOTSTARI :	3845:4:120536:120552	1463857	43	True				
ANR	1464462	Identifier	OP_NOTSTARI		1463857	0					
ANR	1464463	Label	case OP_NOTMINSTARI :	3846:4:120558:120577	1463857	44	True				
ANR	1464464	Identifier	OP_NOTMINSTARI		1463857	0					
ANR	1464465	Label	case OP_NOTPLUSI :	3847:4:120583:120599	1463857	45	True				
ANR	1464466	Identifier	OP_NOTPLUSI		1463857	0					
ANR	1464467	Label	case OP_NOTMINPLUSI :	3848:4:120605:120624	1463857	46	True				
ANR	1464468	Identifier	OP_NOTMINPLUSI		1463857	0					
ANR	1464469	Label	case OP_NOTQUERYI :	3849:4:120630:120647	1463857	47	True				
ANR	1464470	Identifier	OP_NOTQUERYI		1463857	0					
ANR	1464471	Label	case OP_NOTMINQUERYI :	3850:4:120653:120673	1463857	48	True				
ANR	1464472	Identifier	OP_NOTMINQUERYI		1463857	0					
ANR	1464473	Label	case OP_NOTUPTOI :	3851:4:120679:120695	1463857	49	True				
ANR	1464474	Identifier	OP_NOTUPTOI		1463857	0					
ANR	1464475	Label	case OP_NOTMINUPTOI :	3852:4:120701:120720	1463857	50	True				
ANR	1464476	Identifier	OP_NOTMINUPTOI		1463857	0					
ANR	1464477	Label	case OP_NOTEXACTI :	3853:4:120726:120743	1463857	51	True				
ANR	1464478	Identifier	OP_NOTEXACTI		1463857	0					
ANR	1464479	Label	case OP_NOTPOSSTARI :	3854:4:120749:120768	1463857	52	True				
ANR	1464480	Identifier	OP_NOTPOSSTARI		1463857	0					
ANR	1464481	Label	case OP_NOTPOSPLUSI :	3855:4:120774:120793	1463857	53	True				
ANR	1464482	Identifier	OP_NOTPOSPLUSI		1463857	0					
ANR	1464483	Label	case OP_NOTPOSQUERYI :	3856:4:120799:120819	1463857	54	True				
ANR	1464484	Identifier	OP_NOTPOSQUERYI		1463857	0					
ANR	1464485	Label	case OP_NOTPOSUPTOI :	3857:4:120825:120844	1463857	55	True				
ANR	1464486	Identifier	OP_NOTPOSUPTOI		1463857	0					
ANR	1464487	IfStatement	if ( HAS_EXTRALEN ( code [ - 1 ] ) )		1463857	56					
ANR	1464488	Condition	HAS_EXTRALEN ( code [ - 1 ] )	3858:8:120854:120875	1463857	0	True				
ANR	1464489	CallExpression	HAS_EXTRALEN ( code [ - 1 ] )		1463857	0					
ANR	1464490	Callee	HAS_EXTRALEN		1463857	0					
ANR	1464491	Identifier	HAS_EXTRALEN		1463857	0					
ANR	1464492	ArgumentList	code [ - 1 ]		1463857	1					
ANR	1464493	Argument	code [ - 1 ]		1463857	0					
ANR	1464494	ArrayIndexing	code [ - 1 ]		1463857	0					
ANR	1464495	Identifier	code		1463857	0					
ANR	1464496	UnaryOperationExpression	- 1		1463857	1					
ANR	1464497	UnaryOperator	-		1463857	0					
ANR	1464498	PrimaryExpression	1		1463857	1					
ANR	1464499	ExpressionStatement	code += GET_EXTRALEN ( code [ - 1 ] )	3858:32:120878:120908	1463857	1	True				
ANR	1464500	AssignmentExpression	code += GET_EXTRALEN ( code [ - 1 ] )		1463857	0		+=			
ANR	1464501	Identifier	code		1463857	0					
ANR	1464502	CallExpression	GET_EXTRALEN ( code [ - 1 ] )		1463857	1					
ANR	1464503	Callee	GET_EXTRALEN		1463857	0					
ANR	1464504	Identifier	GET_EXTRALEN		1463857	0					
ANR	1464505	ArgumentList	code [ - 1 ]		1463857	1					
ANR	1464506	Argument	code [ - 1 ]		1463857	0					
ANR	1464507	ArrayIndexing	code [ - 1 ]		1463857	0					
ANR	1464508	Identifier	code		1463857	0					
ANR	1464509	UnaryOperationExpression	- 1		1463857	1					
ANR	1464510	UnaryOperator	-		1463857	0					
ANR	1464511	PrimaryExpression	1		1463857	1					
ANR	1464512	BreakStatement	break ;	3859:4:120914:120919	1463857	57	True				
ANR	1464513	ReturnType	static void		1463857	1					
ANR	1464514	Identifier	auto_possessify		1463857	2					
ANR	1464515	ParameterList	"pcre_uchar * code , BOOL utf , const compile_data * cd"		1463857	3					
ANR	1464516	Parameter	pcre_uchar * code	3638:16:115718:115733	1463857	0	True				
ANR	1464517	ParameterType	pcre_uchar *		1463857	0					
ANR	1464518	Identifier	code		1463857	1					
ANR	1464519	Parameter	BOOL utf	3638:34:115736:115743	1463857	1	True				
ANR	1464520	ParameterType	BOOL		1463857	0					
ANR	1464521	Identifier	utf		1463857	1					
ANR	1464522	Parameter	const compile_data * cd	3638:44:115746:115767	1463857	2	True				
ANR	1464523	ParameterType	const compile_data *		1463857	0					
ANR	1464524	Identifier	cd		1463857	1					
ANR	1464525	CFGEntryNode	ENTRY		1463857		True				
ANR	1464526	CFGExitNode	EXIT		1463857		True				
ANR	1464527	InfiniteForNode	true		1463857		True				
ANR	1464528	Symbol	compare_opcodes		1463857						
ANR	1464529	Symbol	OP_STAR		1463857						
ANR	1464530	Symbol	cd -> fcc		1463857						
ANR	1464531	Symbol	* cd		1463857						
ANR	1464532	Symbol	* IMM2_SIZE		1463857						
ANR	1464533	Symbol	OP_UPTO		1463857						
ANR	1464534	Symbol	OP_POSQUERY		1463857						
ANR	1464535	Symbol	PRIV		1463857						
ANR	1464536	Symbol	OP_CRPOSQUERY		1463857						
ANR	1464537	Symbol	HAS_EXTRALEN		1463857						
ANR	1464538	Symbol	NULL		1463857						
ANR	1464539	Symbol	* repeat_opcode		1463857						
ANR	1464540	Symbol	OP_CLASS		1463857						
ANR	1464541	Symbol	utf		1463857						
ANR	1464542	Symbol	OP_CRMINRANGE		1463857						
ANR	1464543	Symbol	list		1463857						
ANR	1464544	Symbol	OP_CRPOSPLUS		1463857						
ANR	1464545	Symbol	OP_MINPLUS		1463857						
ANR	1464546	Symbol	OP_NCLASS		1463857						
ANR	1464547	Symbol	OP_CRSTAR		1463857						
ANR	1464548	Symbol	OP_TABLE_LENGTH		1463857						
ANR	1464549	Symbol	GET		1463857						
ANR	1464550	Symbol	OP_lengths		1463857						
ANR	1464551	Symbol	OP_POSUPTO		1463857						
ANR	1464552	Symbol	* code		1463857						
ANR	1464553	Symbol	OP_POSSTAR		1463857						
ANR	1464554	Symbol	code		1463857						
ANR	1464555	Symbol	OP_TYPEPOSUPTO		1463857						
ANR	1464556	Symbol	OP_PLUS		1463857						
ANR	1464557	Symbol	OP_MINUPTO		1463857						
ANR	1464558	Symbol	get_repeat_base		1463857						
ANR	1464559	Symbol	OP_MINQUERY		1463857						
ANR	1464560	Symbol	repeat_opcode		1463857						
ANR	1464561	Symbol	rec_limit		1463857						
ANR	1464562	Symbol	OP_CRPOSRANGE		1463857						
ANR	1464563	Symbol	OP_CRPOSSTAR		1463857						
ANR	1464564	Symbol	GET_EXTRALEN		1463857						
ANR	1464565	Symbol	end		1463857						
ANR	1464566	Symbol	cd		1463857						
ANR	1464567	Symbol	OP_QUERY		1463857						
ANR	1464568	Symbol	c		1463857						
ANR	1464569	Symbol	OP_POSPLUS		1463857						
ANR	1464570	Symbol	get_chr_property_list		1463857						
ANR	1464571	Symbol	IMM2_SIZE		1463857						
ANR	1464572	Symbol	& rec_limit		1463857						
ANR	1464573	Symbol	* c		1463857						
ANR	1464574	Symbol	OP_NOTPROP		1463857						
ANR	1464575	Symbol	OP_PROP		1463857						
ANR	1464576	Symbol	* PRIV		1463857						
ANR	1464577	Symbol	OP_XCLASS		1463857						
ANR	1464578	Symbol	* list		1463857						
ANR	1464579	Symbol	OP_MINSTAR		1463857						
ANR	1464580	Function	check_posix_syntax	3911:0:123071:123858							
ANR	1464581	FunctionDef	"check_posix_syntax (const pcre_uchar * ptr , const pcre_uchar * * endptr)"		1464580	0					
ANR	1464582	CompoundStatement		3913:0:123152:123858	1464580	0					
ANR	1464583	IdentifierDeclStatement	pcre_uchar terminator ;	3914:0:123154:123175	1464580	0	True				
ANR	1464584	IdentifierDecl	terminator		1464580	0					
ANR	1464585	IdentifierDeclType	pcre_uchar		1464580	0					
ANR	1464586	Identifier	terminator		1464580	1					
ANR	1464587	ExpressionStatement	terminator = * ( ++ ptr )	3915:0:123234:123255	1464580	1	True				
ANR	1464588	AssignmentExpression	terminator = * ( ++ ptr )		1464580	0		=			
ANR	1464589	Identifier	terminator		1464580	0					
ANR	1464590	UnaryOperationExpression	* ( ++ ptr )		1464580	1					
ANR	1464591	UnaryOperator	*		1464580	0					
ANR	1464592	UnaryExpression	++ ptr		1464580	1					
ANR	1464593	IncDec	++		1464580	0					
ANR	1464594	Identifier	ptr		1464580	1					
ANR	1464595	ForStatement	for ( ++ ptr ; * ptr != CHAR_NULL ; ptr ++ )		1464580	2					
ANR	1464596	ForInit	++ ptr ;	3916:5:123319:123324	1464580	0	True				
ANR	1464597	UnaryExpression	++ ptr		1464580	0					
ANR	1464598	IncDec	++		1464580	0					
ANR	1464599	Identifier	ptr		1464580	1					
ANR	1464600	Condition	* ptr != CHAR_NULL	3916:12:123326:123342	1464580	1	True				
ANR	1464601	EqualityExpression	* ptr != CHAR_NULL		1464580	0		!=			
ANR	1464602	UnaryOperationExpression	* ptr		1464580	0					
ANR	1464603	UnaryOperator	*		1464580	0					
ANR	1464604	Identifier	ptr		1464580	1					
ANR	1464605	Identifier	CHAR_NULL		1464580	1					
ANR	1464606	PostIncDecOperationExpression	ptr ++	3916:31:123345:123349	1464580	2	True				
ANR	1464607	Identifier	ptr		1464580	0					
ANR	1464608	IncDec	++		1464580	1					
ANR	1464609	CompoundStatement		5:2:201:201	1464580	3					
ANR	1464610	IfStatement	if ( * ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET )		1464580	0					
ANR	1464611	Condition	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET	3918:6:123362:123422	1464580	0	True				
ANR	1464612	AndExpression	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		1464580	0		&&			
ANR	1464613	EqualityExpression	* ptr == CHAR_BACKSLASH		1464580	0		==			
ANR	1464614	UnaryOperationExpression	* ptr		1464580	0					
ANR	1464615	UnaryOperator	*		1464580	0					
ANR	1464616	Identifier	ptr		1464580	1					
ANR	1464617	Identifier	CHAR_BACKSLASH		1464580	1					
ANR	1464618	EqualityExpression	ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		1464580	1		==			
ANR	1464619	ArrayIndexing	ptr [ 1 ]		1464580	0					
ANR	1464620	Identifier	ptr		1464580	0					
ANR	1464621	PrimaryExpression	1		1464580	1					
ANR	1464622	Identifier	CHAR_RIGHT_SQUARE_BRACKET		1464580	1					
ANR	1464623	ExpressionStatement	ptr ++	3919:4:123429:123434	1464580	1	True				
ANR	1464624	PostIncDecOperationExpression	ptr ++		1464580	0					
ANR	1464625	Identifier	ptr		1464580	0					
ANR	1464626	IncDec	++		1464580	1					
ANR	1464627	ElseStatement	else		1464580	0					
ANR	1464628	IfStatement	if ( * ptr == CHAR_RIGHT_SQUARE_BRACKET )		1464580	0					
ANR	1464629	Condition	* ptr == CHAR_RIGHT_SQUARE_BRACKET	3920:11:123447:123479	1464580	0	True				
ANR	1464630	EqualityExpression	* ptr == CHAR_RIGHT_SQUARE_BRACKET		1464580	0		==			
ANR	1464631	UnaryOperationExpression	* ptr		1464580	0					
ANR	1464632	UnaryOperator	*		1464580	0					
ANR	1464633	Identifier	ptr		1464580	1					
ANR	1464634	Identifier	CHAR_RIGHT_SQUARE_BRACKET		1464580	1					
ANR	1464635	ReturnStatement	return FALSE ;	3920:46:123482:123494	1464580	1	True				
ANR	1464636	Identifier	FALSE		1464580	0					
ANR	1464637	ElseStatement	else		1464580	0					
ANR	1464638	CompoundStatement		10:4:354:354	1464580	0					
ANR	1464639	IfStatement	if ( * ptr == terminator && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET )		1464580	0					
ANR	1464640	Condition	* ptr == terminator && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET	3923:8:123517:123573	1464580	0	True				
ANR	1464641	AndExpression	* ptr == terminator && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		1464580	0		&&			
ANR	1464642	EqualityExpression	* ptr == terminator		1464580	0		==			
ANR	1464643	UnaryOperationExpression	* ptr		1464580	0					
ANR	1464644	UnaryOperator	*		1464580	0					
ANR	1464645	Identifier	ptr		1464580	1					
ANR	1464646	Identifier	terminator		1464580	1					
ANR	1464647	EqualityExpression	ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		1464580	1		==			
ANR	1464648	ArrayIndexing	ptr [ 1 ]		1464580	0					
ANR	1464649	Identifier	ptr		1464580	0					
ANR	1464650	PrimaryExpression	1		1464580	1					
ANR	1464651	Identifier	CHAR_RIGHT_SQUARE_BRACKET		1464580	1					
ANR	1464652	CompoundStatement		12:6:429:429	1464580	1					
ANR	1464653	ExpressionStatement	* endptr = ptr	3925:6:123590:123603	1464580	0	True				
ANR	1464654	AssignmentExpression	* endptr = ptr		1464580	0		=			
ANR	1464655	UnaryOperationExpression	* endptr		1464580	0					
ANR	1464656	UnaryOperator	*		1464580	0					
ANR	1464657	Identifier	endptr		1464580	1					
ANR	1464658	Identifier	ptr		1464580	1					
ANR	1464659	ReturnStatement	return TRUE ;	3926:6:123611:123622	1464580	1	True				
ANR	1464660	Identifier	TRUE		1464580	0					
ANR	1464661	IfStatement	"if ( * ptr == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , endptr ) )"		1464580	1					
ANR	1464662	Condition	"* ptr == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , endptr )"	3928:8:123640:123811	1464580	0	True				
ANR	1464663	AndExpression	"* ptr == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , endptr )"		1464580	0		&&			
ANR	1464664	EqualityExpression	* ptr == CHAR_LEFT_SQUARE_BRACKET		1464580	0		==			
ANR	1464665	UnaryOperationExpression	* ptr		1464580	0					
ANR	1464666	UnaryOperator	*		1464580	0					
ANR	1464667	Identifier	ptr		1464580	1					
ANR	1464668	Identifier	CHAR_LEFT_SQUARE_BRACKET		1464580	1					
ANR	1464669	AndExpression	"( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , endptr )"		1464580	1		&&			
ANR	1464670	OrExpression	ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		1464580	0		||			
ANR	1464671	EqualityExpression	ptr [ 1 ] == CHAR_COLON		1464580	0		==			
ANR	1464672	ArrayIndexing	ptr [ 1 ]		1464580	0					
ANR	1464673	Identifier	ptr		1464580	0					
ANR	1464674	PrimaryExpression	1		1464580	1					
ANR	1464675	Identifier	CHAR_COLON		1464580	1					
ANR	1464676	OrExpression	ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		1464580	1		||			
ANR	1464677	EqualityExpression	ptr [ 1 ] == CHAR_DOT		1464580	0		==			
ANR	1464678	ArrayIndexing	ptr [ 1 ]		1464580	0					
ANR	1464679	Identifier	ptr		1464580	0					
ANR	1464680	PrimaryExpression	1		1464580	1					
ANR	1464681	Identifier	CHAR_DOT		1464580	1					
ANR	1464682	EqualityExpression	ptr [ 1 ] == CHAR_EQUALS_SIGN		1464580	1		==			
ANR	1464683	ArrayIndexing	ptr [ 1 ]		1464580	0					
ANR	1464684	Identifier	ptr		1464580	0					
ANR	1464685	PrimaryExpression	1		1464580	1					
ANR	1464686	Identifier	CHAR_EQUALS_SIGN		1464580	1					
ANR	1464687	CallExpression	"check_posix_syntax ( ptr , endptr )"		1464580	1					
ANR	1464688	Callee	check_posix_syntax		1464580	0					
ANR	1464689	Identifier	check_posix_syntax		1464580	0					
ANR	1464690	ArgumentList	ptr		1464580	1					
ANR	1464691	Argument	ptr		1464580	0					
ANR	1464692	Identifier	ptr		1464580	0					
ANR	1464693	Argument	endptr		1464580	1					
ANR	1464694	Identifier	endptr		1464580	0					
ANR	1464695	ReturnStatement	return FALSE ;	3932:6:123820:123832	1464580	1	True				
ANR	1464696	Identifier	FALSE		1464580	0					
ANR	1464697	ReturnStatement	return FALSE ;	3935:0:123844:123856	1464580	3	True				
ANR	1464698	Identifier	FALSE		1464580	0					
ANR	1464699	ReturnType	static BOOL		1464580	1					
ANR	1464700	Identifier	check_posix_syntax		1464580	2					
ANR	1464701	ParameterList	"const pcre_uchar * ptr , const pcre_uchar * * endptr"		1464580	3					
ANR	1464702	Parameter	const pcre_uchar * ptr	3912:19:123102:123122	1464580	0	True				
ANR	1464703	ParameterType	const pcre_uchar *		1464580	0					
ANR	1464704	Identifier	ptr		1464580	1					
ANR	1464705	Parameter	const pcre_uchar * * endptr	3912:42:123125:123149	1464580	1	True				
ANR	1464706	ParameterType	const pcre_uchar * *		1464580	0					
ANR	1464707	Identifier	endptr		1464580	1					
ANR	1464708	CFGEntryNode	ENTRY		1464580		True				
ANR	1464709	CFGExitNode	EXIT		1464580		True				
ANR	1464710	Symbol	CHAR_COLON		1464580						
ANR	1464711	Symbol	endptr		1464580						
ANR	1464712	Symbol	* endptr		1464580						
ANR	1464713	Symbol	CHAR_BACKSLASH		1464580						
ANR	1464714	Symbol	TRUE		1464580						
ANR	1464715	Symbol	CHAR_DOT		1464580						
ANR	1464716	Symbol	ptr		1464580						
ANR	1464717	Symbol	CHAR_NULL		1464580						
ANR	1464718	Symbol	CHAR_EQUALS_SIGN		1464580						
ANR	1464719	Symbol	CHAR_RIGHT_SQUARE_BRACKET		1464580						
ANR	1464720	Symbol	* ptr		1464580						
ANR	1464721	Symbol	* ( ++ ptr )		1464580						
ANR	1464722	Symbol	check_posix_syntax		1464580						
ANR	1464723	Symbol	terminator		1464580						
ANR	1464724	Symbol	FALSE		1464580						
ANR	1464725	Symbol	CHAR_LEFT_SQUARE_BRACKET		1464580						
ANR	1464726	Function	check_posix_name	3955:0:124271:124603							
ANR	1464727	FunctionDef	"check_posix_name (const pcre_uchar * ptr , int len)"		1464726	0					
ANR	1464728	CompoundStatement		3957:0:124331:124603	1464726	0					
ANR	1464729	IdentifierDeclStatement	const char * pn = posix_names ;	3958:0:124333:124361	1464726	0	True				
ANR	1464730	IdentifierDecl	* pn = posix_names		1464726	0					
ANR	1464731	IdentifierDeclType	const char *		1464726	0					
ANR	1464732	Identifier	pn		1464726	1					
ANR	1464733	AssignmentExpression	* pn = posix_names		1464726	2		=			
ANR	1464734	Identifier	posix_names		1464726	0					
ANR	1464735	Identifier	posix_names		1464726	1					
ANR	1464736	Statement	register	3959:0:124363:124370	1464726	1	True				
ANR	1464737	IdentifierDeclStatement	int yield = 0 ;	3959:9:124372:124385	1464726	2	True				
ANR	1464738	IdentifierDecl	yield = 0		1464726	0					
ANR	1464739	IdentifierDeclType	int		1464726	0					
ANR	1464740	Identifier	yield		1464726	1					
ANR	1464741	AssignmentExpression	yield = 0		1464726	2		=			
ANR	1464742	Identifier	yield		1464726	0					
ANR	1464743	PrimaryExpression	0		1464726	1					
ANR	1464744	WhileStatement	while ( posix_name_lengths [ yield ] != 0 )		1464726	3					
ANR	1464745	Condition	posix_name_lengths [ yield ] != 0	3960:7:124394:124423	1464726	0	True				
ANR	1464746	EqualityExpression	posix_name_lengths [ yield ] != 0		1464726	0		!=			
ANR	1464747	ArrayIndexing	posix_name_lengths [ yield ]		1464726	0					
ANR	1464748	Identifier	posix_name_lengths		1464726	0					
ANR	1464749	Identifier	yield		1464726	1					
ANR	1464750	PrimaryExpression	0		1464726	1					
ANR	1464751	CompoundStatement		5:2:96:96	1464726	1					
ANR	1464752	IfStatement	"if ( len == posix_name_lengths [ yield ] && STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len ) == 0 )"		1464726	0					
ANR	1464753	Condition	"len == posix_name_lengths [ yield ] && STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len ) == 0"	3962:6:124436:124521	1464726	0	True				
ANR	1464754	AndExpression	"len == posix_name_lengths [ yield ] && STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len ) == 0"		1464726	0		&&			
ANR	1464755	EqualityExpression	len == posix_name_lengths [ yield ]		1464726	0		==			
ANR	1464756	Identifier	len		1464726	0					
ANR	1464757	ArrayIndexing	posix_name_lengths [ yield ]		1464726	1					
ANR	1464758	Identifier	posix_name_lengths		1464726	0					
ANR	1464759	Identifier	yield		1464726	1					
ANR	1464760	EqualityExpression	"STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len ) == 0"		1464726	1		==			
ANR	1464761	CallExpression	"STRNCMP_UC_C8 ( ptr , pn , ( unsigned int ) len )"		1464726	0					
ANR	1464762	Callee	STRNCMP_UC_C8		1464726	0					
ANR	1464763	Identifier	STRNCMP_UC_C8		1464726	0					
ANR	1464764	ArgumentList	ptr		1464726	1					
ANR	1464765	Argument	ptr		1464726	0					
ANR	1464766	Identifier	ptr		1464726	0					
ANR	1464767	Argument	pn		1464726	1					
ANR	1464768	Identifier	pn		1464726	0					
ANR	1464769	Argument	( unsigned int ) len		1464726	2					
ANR	1464770	CastExpression	( unsigned int ) len		1464726	0					
ANR	1464771	CastTarget	unsigned int		1464726	0					
ANR	1464772	Identifier	len		1464726	1					
ANR	1464773	PrimaryExpression	0		1464726	1					
ANR	1464774	ReturnStatement	return yield ;	3963:52:124524:124536	1464726	1	True				
ANR	1464775	Identifier	yield		1464726	0					
ANR	1464776	ExpressionStatement	pn += posix_name_lengths [ yield ] + 1	3964:2:124540:124575	1464726	1	True				
ANR	1464777	AssignmentExpression	pn += posix_name_lengths [ yield ] + 1		1464726	0		+=			
ANR	1464778	Identifier	pn		1464726	0					
ANR	1464779	AdditiveExpression	posix_name_lengths [ yield ] + 1		1464726	1		+			
ANR	1464780	ArrayIndexing	posix_name_lengths [ yield ]		1464726	0					
ANR	1464781	Identifier	posix_name_lengths		1464726	0					
ANR	1464782	Identifier	yield		1464726	1					
ANR	1464783	PrimaryExpression	1		1464726	1					
ANR	1464784	ExpressionStatement	yield ++	3965:2:124579:124586	1464726	2	True				
ANR	1464785	PostIncDecOperationExpression	yield ++		1464726	0					
ANR	1464786	Identifier	yield		1464726	0					
ANR	1464787	IncDec	++		1464726	1					
ANR	1464788	ReturnStatement	return - 1 ;	3967:0:124592:124601	1464726	4	True				
ANR	1464789	UnaryOperationExpression	- 1		1464726	0					
ANR	1464790	UnaryOperator	-		1464726	0					
ANR	1464791	PrimaryExpression	1		1464726	1					
ANR	1464792	ReturnType	static int		1464726	1					
ANR	1464793	Identifier	check_posix_name		1464726	2					
ANR	1464794	ParameterList	"const pcre_uchar * ptr , int len"		1464726	3					
ANR	1464795	Parameter	const pcre_uchar * ptr	3956:17:124299:124319	1464726	0	True				
ANR	1464796	ParameterType	const pcre_uchar *		1464726	0					
ANR	1464797	Identifier	ptr		1464726	1					
ANR	1464798	Parameter	int len	3956:40:124322:124328	1464726	1	True				
ANR	1464799	ParameterType	int		1464726	0					
ANR	1464800	Identifier	len		1464726	1					
ANR	1464801	CFGEntryNode	ENTRY		1464726		True				
ANR	1464802	CFGExitNode	EXIT		1464726		True				
ANR	1464803	Symbol	* posix_name_lengths		1464726						
ANR	1464804	Symbol	len		1464726						
ANR	1464805	Symbol	yield		1464726						
ANR	1464806	Symbol	STRNCMP_UC_C8		1464726						
ANR	1464807	Symbol	posix_name_lengths		1464726						
ANR	1464808	Symbol	* yield		1464726						
ANR	1464809	Symbol	pn		1464726						
ANR	1464810	Symbol	ptr		1464726						
ANR	1464811	Symbol	posix_names		1464726						
ANR	1464812	Function	adjust_recurse	4002:0:126142:126984							
ANR	1464813	FunctionDef	"adjust_recurse (pcre_uchar * group , int adjust , BOOL utf , compile_data * cd , size_t save_hwm_offset)"		1464812	0					
ANR	1464814	CompoundStatement		4005:0:126254:126984	1464812	0					
ANR	1464815	IdentifierDeclStatement	pcre_uchar * ptr = group ;	4006:0:126256:126279	1464812	0	True				
ANR	1464816	IdentifierDecl	* ptr = group		1464812	0					
ANR	1464817	IdentifierDeclType	pcre_uchar *		1464812	0					
ANR	1464818	Identifier	ptr		1464812	1					
ANR	1464819	AssignmentExpression	* ptr = group		1464812	2		=			
ANR	1464820	Identifier	group		1464812	0					
ANR	1464821	Identifier	group		1464812	1					
ANR	1464822	WhileStatement	"while ( ( ptr = ( pcre_uchar * ) find_recurse ( ptr , utf ) ) != NULL )"		1464812	1					
ANR	1464823	Condition	"( ptr = ( pcre_uchar * ) find_recurse ( ptr , utf ) ) != NULL"	4008:7:126289:126340	1464812	0	True				
ANR	1464824	EqualityExpression	"( ptr = ( pcre_uchar * ) find_recurse ( ptr , utf ) ) != NULL"		1464812	0		!=			
ANR	1464825	AssignmentExpression	"ptr = ( pcre_uchar * ) find_recurse ( ptr , utf )"		1464812	0		=			
ANR	1464826	Identifier	ptr		1464812	0					
ANR	1464827	CastExpression	"( pcre_uchar * ) find_recurse ( ptr , utf )"		1464812	1					
ANR	1464828	CastTarget	pcre_uchar *		1464812	0					
ANR	1464829	CallExpression	"find_recurse ( ptr , utf )"		1464812	1					
ANR	1464830	Callee	find_recurse		1464812	0					
ANR	1464831	Identifier	find_recurse		1464812	0					
ANR	1464832	ArgumentList	ptr		1464812	1					
ANR	1464833	Argument	ptr		1464812	0					
ANR	1464834	Identifier	ptr		1464812	0					
ANR	1464835	Argument	utf		1464812	1					
ANR	1464836	Identifier	utf		1464812	0					
ANR	1464837	Identifier	NULL		1464812	1					
ANR	1464838	CompoundStatement		7:2:108:122	1464812	1					
ANR	1464839	IdentifierDeclStatement	int offset ;	4010:2:126349:126359	1464812	0	True				
ANR	1464840	IdentifierDecl	offset		1464812	0					
ANR	1464841	IdentifierDeclType	int		1464812	0					
ANR	1464842	Identifier	offset		1464812	1					
ANR	1464843	IdentifierDeclStatement	pcre_uchar * hc ;	4011:2:126363:126377	1464812	1	True				
ANR	1464844	IdentifierDecl	* hc		1464812	0					
ANR	1464845	IdentifierDeclType	pcre_uchar *		1464812	0					
ANR	1464846	Identifier	hc		1464812	1					
ANR	1464847	ForStatement	for ( hc = ( pcre_uchar * ) cd -> start_workspace + save_hwm_offset ; hc < cd -> hwm ; hc += LINK_SIZE )		1464812	2					
ANR	1464848	ForInit	hc = ( pcre_uchar * ) cd -> start_workspace + save_hwm_offset ;	4016:7:126483:126539	1464812	0	True				
ANR	1464849	AssignmentExpression	hc = ( pcre_uchar * ) cd -> start_workspace + save_hwm_offset		1464812	0		=			
ANR	1464850	Identifier	hc		1464812	0					
ANR	1464851	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + save_hwm_offset		1464812	1		+			
ANR	1464852	CastExpression	( pcre_uchar * ) cd -> start_workspace		1464812	0					
ANR	1464853	CastTarget	pcre_uchar *		1464812	0					
ANR	1464854	PtrMemberAccess	cd -> start_workspace		1464812	1					
ANR	1464855	Identifier	cd		1464812	0					
ANR	1464856	Identifier	start_workspace		1464812	1					
ANR	1464857	Identifier	save_hwm_offset		1464812	1					
ANR	1464858	Condition	hc < cd -> hwm	4016:65:126541:126552	1464812	1	True				
ANR	1464859	RelationalExpression	hc < cd -> hwm		1464812	0		<			
ANR	1464860	Identifier	hc		1464812	0					
ANR	1464861	PtrMemberAccess	cd -> hwm		1464812	1					
ANR	1464862	Identifier	cd		1464812	0					
ANR	1464863	Identifier	hwm		1464812	1					
ANR	1464864	AssignmentExpression	hc += LINK_SIZE	4017:7:126562:126576	1464812	2	True	+=			
ANR	1464865	Identifier	hc		1464812	0					
ANR	1464866	Identifier	LINK_SIZE		1464812	1					
ANR	1464867	CompoundStatement		14:4:328:328	1464812	3					
ANR	1464868	ExpressionStatement	"offset = ( int ) GET ( hc , 0 )"	4019:4:126589:126613	1464812	0	True				
ANR	1464869	AssignmentExpression	"offset = ( int ) GET ( hc , 0 )"		1464812	0		=			
ANR	1464870	Identifier	offset		1464812	0					
ANR	1464871	CastExpression	"( int ) GET ( hc , 0 )"		1464812	1					
ANR	1464872	CastTarget	int		1464812	0					
ANR	1464873	CallExpression	"GET ( hc , 0 )"		1464812	1					
ANR	1464874	Callee	GET		1464812	0					
ANR	1464875	Identifier	GET		1464812	0					
ANR	1464876	ArgumentList	hc		1464812	1					
ANR	1464877	Argument	hc		1464812	0					
ANR	1464878	Identifier	hc		1464812	0					
ANR	1464879	Argument	0		1464812	1					
ANR	1464880	PrimaryExpression	0		1464812	0					
ANR	1464881	IfStatement	if ( cd -> start_code + offset == ptr + 1 )		1464812	1					
ANR	1464882	Condition	cd -> start_code + offset == ptr + 1	4020:8:126623:126656	1464812	0	True				
ANR	1464883	EqualityExpression	cd -> start_code + offset == ptr + 1		1464812	0		==			
ANR	1464884	AdditiveExpression	cd -> start_code + offset		1464812	0		+			
ANR	1464885	PtrMemberAccess	cd -> start_code		1464812	0					
ANR	1464886	Identifier	cd		1464812	0					
ANR	1464887	Identifier	start_code		1464812	1					
ANR	1464888	Identifier	offset		1464812	1					
ANR	1464889	AdditiveExpression	ptr + 1		1464812	1		+			
ANR	1464890	Identifier	ptr		1464812	0					
ANR	1464891	PrimaryExpression	1		1464812	1					
ANR	1464892	CompoundStatement		17:6:410:410	1464812	1					
ANR	1464893	ExpressionStatement	"PUT ( hc , 0 , offset + adjust )"	4022:6:126673:126700	1464812	0	True				
ANR	1464894	CallExpression	"PUT ( hc , 0 , offset + adjust )"		1464812	0					
ANR	1464895	Callee	PUT		1464812	0					
ANR	1464896	Identifier	PUT		1464812	0					
ANR	1464897	ArgumentList	hc		1464812	1					
ANR	1464898	Argument	hc		1464812	0					
ANR	1464899	Identifier	hc		1464812	0					
ANR	1464900	Argument	0		1464812	1					
ANR	1464901	PrimaryExpression	0		1464812	0					
ANR	1464902	Argument	offset + adjust		1464812	2					
ANR	1464903	AdditiveExpression	offset + adjust		1464812	0		+			
ANR	1464904	Identifier	offset		1464812	0					
ANR	1464905	Identifier	adjust		1464812	1					
ANR	1464906	BreakStatement	break ;	4023:6:126708:126713	1464812	1	True				
ANR	1464907	IfStatement	if ( hc >= cd -> hwm )		1464812	3					
ANR	1464908	Condition	hc >= cd -> hwm	4030:6:126825:126837	1464812	0	True				
ANR	1464909	RelationalExpression	hc >= cd -> hwm		1464812	0		>=			
ANR	1464910	Identifier	hc		1464812	0					
ANR	1464911	PtrMemberAccess	cd -> hwm		1464812	1					
ANR	1464912	Identifier	cd		1464812	0					
ANR	1464913	Identifier	hwm		1464812	1					
ANR	1464914	CompoundStatement		27:4:589:589	1464812	1					
ANR	1464915	ExpressionStatement	"offset = ( int ) GET ( ptr , 1 )"	4032:4:126850:126875	1464812	0	True				
ANR	1464916	AssignmentExpression	"offset = ( int ) GET ( ptr , 1 )"		1464812	0		=			
ANR	1464917	Identifier	offset		1464812	0					
ANR	1464918	CastExpression	"( int ) GET ( ptr , 1 )"		1464812	1					
ANR	1464919	CastTarget	int		1464812	0					
ANR	1464920	CallExpression	"GET ( ptr , 1 )"		1464812	1					
ANR	1464921	Callee	GET		1464812	0					
ANR	1464922	Identifier	GET		1464812	0					
ANR	1464923	ArgumentList	ptr		1464812	1					
ANR	1464924	Argument	ptr		1464812	0					
ANR	1464925	Identifier	ptr		1464812	0					
ANR	1464926	Argument	1		1464812	1					
ANR	1464927	PrimaryExpression	1		1464812	0					
ANR	1464928	IfStatement	if ( cd -> start_code + offset >= group )		1464812	1					
ANR	1464929	Condition	cd -> start_code + offset >= group	4033:8:126885:126916	1464812	0	True				
ANR	1464930	RelationalExpression	cd -> start_code + offset >= group		1464812	0		>=			
ANR	1464931	AdditiveExpression	cd -> start_code + offset		1464812	0		+			
ANR	1464932	PtrMemberAccess	cd -> start_code		1464812	0					
ANR	1464933	Identifier	cd		1464812	0					
ANR	1464934	Identifier	start_code		1464812	1					
ANR	1464935	Identifier	offset		1464812	1					
ANR	1464936	Identifier	group		1464812	1					
ANR	1464937	ExpressionStatement	"PUT ( ptr , 1 , offset + adjust )"	4033:42:126919:126947	1464812	1	True				
ANR	1464938	CallExpression	"PUT ( ptr , 1 , offset + adjust )"		1464812	0					
ANR	1464939	Callee	PUT		1464812	0					
ANR	1464940	Identifier	PUT		1464812	0					
ANR	1464941	ArgumentList	ptr		1464812	1					
ANR	1464942	Argument	ptr		1464812	0					
ANR	1464943	Identifier	ptr		1464812	0					
ANR	1464944	Argument	1		1464812	1					
ANR	1464945	PrimaryExpression	1		1464812	0					
ANR	1464946	Argument	offset + adjust		1464812	2					
ANR	1464947	AdditiveExpression	offset + adjust		1464812	0		+			
ANR	1464948	Identifier	offset		1464812	0					
ANR	1464949	Identifier	adjust		1464812	1					
ANR	1464950	ExpressionStatement	ptr += 1 + LINK_SIZE	4036:2:126958:126978	1464812	4	True				
ANR	1464951	AssignmentExpression	ptr += 1 + LINK_SIZE		1464812	0		+=			
ANR	1464952	Identifier	ptr		1464812	0					
ANR	1464953	AdditiveExpression	1 + LINK_SIZE		1464812	1		+			
ANR	1464954	PrimaryExpression	1		1464812	0					
ANR	1464955	Identifier	LINK_SIZE		1464812	1					
ANR	1464956	ReturnType	static void		1464812	1					
ANR	1464957	Identifier	adjust_recurse		1464812	2					
ANR	1464958	ParameterList	"pcre_uchar * group , int adjust , BOOL utf , compile_data * cd , size_t save_hwm_offset"		1464812	3					
ANR	1464959	Parameter	pcre_uchar * group	4003:15:126169:126185	1464812	0	True				
ANR	1464960	ParameterType	pcre_uchar *		1464812	0					
ANR	1464961	Identifier	group		1464812	1					
ANR	1464962	Parameter	int adjust	4003:34:126188:126197	1464812	1	True				
ANR	1464963	ParameterType	int		1464812	0					
ANR	1464964	Identifier	adjust		1464812	1					
ANR	1464965	Parameter	BOOL utf	4003:46:126200:126207	1464812	2	True				
ANR	1464966	ParameterType	BOOL		1464812	0					
ANR	1464967	Identifier	utf		1464812	1					
ANR	1464968	Parameter	compile_data * cd	4003:56:126210:126225	1464812	3	True				
ANR	1464969	ParameterType	compile_data *		1464812	0					
ANR	1464970	Identifier	cd		1464812	1					
ANR	1464971	Parameter	size_t save_hwm_offset	4004:2:126230:126251	1464812	4	True				
ANR	1464972	ParameterType	size_t		1464812	0					
ANR	1464973	Identifier	save_hwm_offset		1464812	1					
ANR	1464974	CFGEntryNode	ENTRY		1464812		True				
ANR	1464975	CFGExitNode	EXIT		1464812		True				
ANR	1464976	Symbol	cd		1464812						
ANR	1464977	Symbol	find_recurse		1464812						
ANR	1464978	Symbol	NULL		1464812						
ANR	1464979	Symbol	offset		1464812						
ANR	1464980	Symbol	* cd		1464812						
ANR	1464981	Symbol	utf		1464812						
ANR	1464982	Symbol	cd -> start_code		1464812						
ANR	1464983	Symbol	ptr		1464812						
ANR	1464984	Symbol	LINK_SIZE		1464812						
ANR	1464985	Symbol	cd -> start_workspace		1464812						
ANR	1464986	Symbol	adjust		1464812						
ANR	1464987	Symbol	save_hwm_offset		1464812						
ANR	1464988	Symbol	GET		1464812						
ANR	1464989	Symbol	cd -> hwm		1464812						
ANR	1464990	Symbol	hc		1464812						
ANR	1464991	Symbol	group		1464812						
ANR	1464992	Function	auto_callout	4057:0:127433:127729							
ANR	1464993	FunctionDef	"auto_callout (pcre_uchar * code , const pcre_uchar * ptr , compile_data * cd)"		1464992	0					
ANR	1464994	CompoundStatement		4059:0:127525:127729	1464992	0					
ANR	1464995	ExpressionStatement	* code ++ = OP_CALLOUT	4060:0:127527:127547	1464992	0	True				
ANR	1464996	AssignmentExpression	* code ++ = OP_CALLOUT		1464992	0		=			
ANR	1464997	UnaryOperationExpression	* code ++		1464992	0					
ANR	1464998	UnaryOperator	*		1464992	0					
ANR	1464999	PostIncDecOperationExpression	code ++		1464992	1					
ANR	1465000	Identifier	code		1464992	0					
ANR	1465001	IncDec	++		1464992	1					
ANR	1465002	Identifier	OP_CALLOUT		1464992	1					
ANR	1465003	ExpressionStatement	* code ++ = 255	4061:0:127549:127562	1464992	1	True				
ANR	1465004	AssignmentExpression	* code ++ = 255		1464992	0		=			
ANR	1465005	UnaryOperationExpression	* code ++		1464992	0					
ANR	1465006	UnaryOperator	*		1464992	0					
ANR	1465007	PostIncDecOperationExpression	code ++		1464992	1					
ANR	1465008	Identifier	code		1464992	0					
ANR	1465009	IncDec	++		1464992	1					
ANR	1465010	PrimaryExpression	255		1464992	1					
ANR	1465011	ExpressionStatement	"PUT ( code , 0 , ( int ) ( ptr - cd -> start_pattern ) )"	4062:0:127564:127608	1464992	2	True				
ANR	1465012	CallExpression	"PUT ( code , 0 , ( int ) ( ptr - cd -> start_pattern ) )"		1464992	0					
ANR	1465013	Callee	PUT		1464992	0					
ANR	1465014	Identifier	PUT		1464992	0					
ANR	1465015	ArgumentList	code		1464992	1					
ANR	1465016	Argument	code		1464992	0					
ANR	1465017	Identifier	code		1464992	0					
ANR	1465018	Argument	0		1464992	1					
ANR	1465019	PrimaryExpression	0		1464992	0					
ANR	1465020	Argument	( int ) ( ptr - cd -> start_pattern )		1464992	2					
ANR	1465021	CastExpression	( int ) ( ptr - cd -> start_pattern )		1464992	0					
ANR	1465022	CastTarget	int		1464992	0					
ANR	1465023	AdditiveExpression	ptr - cd -> start_pattern		1464992	1		-			
ANR	1465024	Identifier	ptr		1464992	0					
ANR	1465025	PtrMemberAccess	cd -> start_pattern		1464992	1					
ANR	1465026	Identifier	cd		1464992	0					
ANR	1465027	Identifier	start_pattern		1464992	1					
ANR	1465028	ExpressionStatement	"PUT ( code , LINK_SIZE , 0 )"	4063:0:127632:127655	1464992	3	True				
ANR	1465029	CallExpression	"PUT ( code , LINK_SIZE , 0 )"		1464992	0					
ANR	1465030	Callee	PUT		1464992	0					
ANR	1465031	Identifier	PUT		1464992	0					
ANR	1465032	ArgumentList	code		1464992	1					
ANR	1465033	Argument	code		1464992	0					
ANR	1465034	Identifier	code		1464992	0					
ANR	1465035	Argument	LINK_SIZE		1464992	1					
ANR	1465036	Identifier	LINK_SIZE		1464992	0					
ANR	1465037	Argument	0		1464992	2					
ANR	1465038	PrimaryExpression	0		1464992	0					
ANR	1465039	ReturnStatement	return code + 2 * LINK_SIZE ;	4064:0:127700:127727	1464992	4	True				
ANR	1465040	AdditiveExpression	code + 2 * LINK_SIZE		1464992	0		+			
ANR	1465041	Identifier	code		1464992	0					
ANR	1465042	MultiplicativeExpression	2 * LINK_SIZE		1464992	1		*			
ANR	1465043	PrimaryExpression	2		1464992	0					
ANR	1465044	Identifier	LINK_SIZE		1464992	1					
ANR	1465045	ReturnType	static pcre_uchar *		1464992	1					
ANR	1465046	Identifier	auto_callout		1464992	2					
ANR	1465047	ParameterList	"pcre_uchar * code , const pcre_uchar * ptr , compile_data * cd"		1464992	3					
ANR	1465048	Parameter	pcre_uchar * code	4058:13:127466:127481	1464992	0	True				
ANR	1465049	ParameterType	pcre_uchar *		1464992	0					
ANR	1465050	Identifier	code		1464992	1					
ANR	1465051	Parameter	const pcre_uchar * ptr	4058:31:127484:127504	1464992	1	True				
ANR	1465052	ParameterType	const pcre_uchar *		1464992	0					
ANR	1465053	Identifier	ptr		1464992	1					
ANR	1465054	Parameter	compile_data * cd	4058:54:127507:127522	1464992	2	True				
ANR	1465055	ParameterType	compile_data *		1464992	0					
ANR	1465056	Identifier	cd		1464992	1					
ANR	1465057	CFGEntryNode	ENTRY		1464992		True				
ANR	1465058	CFGExitNode	EXIT		1464992		True				
ANR	1465059	Symbol	cd		1464992						
ANR	1465060	Symbol	code		1464992						
ANR	1465061	Symbol	* cd		1464992						
ANR	1465062	Symbol	OP_CALLOUT		1464992						
ANR	1465063	Symbol	cd -> start_pattern		1464992						
ANR	1465064	Symbol	ptr		1464992						
ANR	1465065	Symbol	* code ++		1464992						
ANR	1465066	Symbol	LINK_SIZE		1464992						
ANR	1465067	Function	complete_callout	4085:0:128270:128490							
ANR	1465068	FunctionDef	"complete_callout (pcre_uchar * previous_callout , const pcre_uchar * ptr , compile_data * cd)"		1465067	0					
ANR	1465069	CompoundStatement		4087:0:128370:128490	1465067	0					
ANR	1465070	IdentifierDeclStatement	"int length = ( int ) ( ptr - cd -> start_pattern - GET ( previous_callout , 2 ) ) ;"	4088:0:128372:128442	1465067	0	True				
ANR	1465071	IdentifierDecl	"length = ( int ) ( ptr - cd -> start_pattern - GET ( previous_callout , 2 ) )"		1465067	0					
ANR	1465072	IdentifierDeclType	int		1465067	0					
ANR	1465073	Identifier	length		1465067	1					
ANR	1465074	AssignmentExpression	"length = ( int ) ( ptr - cd -> start_pattern - GET ( previous_callout , 2 ) )"		1465067	2		=			
ANR	1465075	Identifier	length		1465067	0					
ANR	1465076	CastExpression	"( int ) ( ptr - cd -> start_pattern - GET ( previous_callout , 2 ) )"		1465067	1					
ANR	1465077	CastTarget	int		1465067	0					
ANR	1465078	AdditiveExpression	"ptr - cd -> start_pattern - GET ( previous_callout , 2 )"		1465067	1		-			
ANR	1465079	Identifier	ptr		1465067	0					
ANR	1465080	AdditiveExpression	"cd -> start_pattern - GET ( previous_callout , 2 )"		1465067	1		-			
ANR	1465081	PtrMemberAccess	cd -> start_pattern		1465067	0					
ANR	1465082	Identifier	cd		1465067	0					
ANR	1465083	Identifier	start_pattern		1465067	1					
ANR	1465084	CallExpression	"GET ( previous_callout , 2 )"		1465067	1					
ANR	1465085	Callee	GET		1465067	0					
ANR	1465086	Identifier	GET		1465067	0					
ANR	1465087	ArgumentList	previous_callout		1465067	1					
ANR	1465088	Argument	previous_callout		1465067	0					
ANR	1465089	Identifier	previous_callout		1465067	0					
ANR	1465090	Argument	2		1465067	1					
ANR	1465091	PrimaryExpression	2		1465067	0					
ANR	1465092	ExpressionStatement	"PUT ( previous_callout , 2 + LINK_SIZE , length )"	4089:0:128444:128488	1465067	1	True				
ANR	1465093	CallExpression	"PUT ( previous_callout , 2 + LINK_SIZE , length )"		1465067	0					
ANR	1465094	Callee	PUT		1465067	0					
ANR	1465095	Identifier	PUT		1465067	0					
ANR	1465096	ArgumentList	previous_callout		1465067	1					
ANR	1465097	Argument	previous_callout		1465067	0					
ANR	1465098	Identifier	previous_callout		1465067	0					
ANR	1465099	Argument	2 + LINK_SIZE		1465067	1					
ANR	1465100	AdditiveExpression	2 + LINK_SIZE		1465067	0		+			
ANR	1465101	PrimaryExpression	2		1465067	0					
ANR	1465102	Identifier	LINK_SIZE		1465067	1					
ANR	1465103	Argument	length		1465067	2					
ANR	1465104	Identifier	length		1465067	0					
ANR	1465105	ReturnType	static void		1465067	1					
ANR	1465106	Identifier	complete_callout		1465067	2					
ANR	1465107	ParameterList	"pcre_uchar * previous_callout , const pcre_uchar * ptr , compile_data * cd"		1465067	3					
ANR	1465108	Parameter	pcre_uchar * previous_callout	4086:17:128299:128326	1465067	0	True				
ANR	1465109	ParameterType	pcre_uchar *		1465067	0					
ANR	1465110	Identifier	previous_callout		1465067	1					
ANR	1465111	Parameter	const pcre_uchar * ptr	4086:47:128329:128349	1465067	1	True				
ANR	1465112	ParameterType	const pcre_uchar *		1465067	0					
ANR	1465113	Identifier	ptr		1465067	1					
ANR	1465114	Parameter	compile_data * cd	4086:70:128352:128367	1465067	2	True				
ANR	1465115	ParameterType	compile_data *		1465067	0					
ANR	1465116	Identifier	cd		1465067	1					
ANR	1465117	CFGEntryNode	ENTRY		1465067		True				
ANR	1465118	CFGExitNode	EXIT		1465067		True				
ANR	1465119	Symbol	cd		1465067						
ANR	1465120	Symbol	* cd		1465067						
ANR	1465121	Symbol	GET		1465067						
ANR	1465122	Symbol	length		1465067						
ANR	1465123	Symbol	previous_callout		1465067						
ANR	1465124	Symbol	cd -> start_pattern		1465067						
ANR	1465125	Symbol	ptr		1465067						
ANR	1465126	Symbol	LINK_SIZE		1465067						
ANR	1465127	Function	get_othercase_range	4117:0:129400:130437							
ANR	1465128	FunctionDef	"get_othercase_range (pcre_uint32 * cptr , pcre_uint32 d , pcre_uint32 * ocptr , pcre_uint32 * odptr)"		1465127	0					
ANR	1465129	CompoundStatement		4120:0:129507:130437	1465127	0					
ANR	1465130	IdentifierDeclStatement	"pcre_uint32 c , othercase , next ;"	4121:0:129509:129539	1465127	0	True				
ANR	1465131	IdentifierDecl	c		1465127	0					
ANR	1465132	IdentifierDeclType	pcre_uint32		1465127	0					
ANR	1465133	Identifier	c		1465127	1					
ANR	1465134	IdentifierDecl	othercase		1465127	1					
ANR	1465135	IdentifierDeclType	pcre_uint32		1465127	0					
ANR	1465136	Identifier	othercase		1465127	1					
ANR	1465137	IdentifierDecl	next		1465127	2					
ANR	1465138	IdentifierDeclType	pcre_uint32		1465127	0					
ANR	1465139	Identifier	next		1465127	1					
ANR	1465140	IdentifierDeclStatement	unsigned int co ;	4122:0:129541:129556	1465127	1	True				
ANR	1465141	IdentifierDecl	co		1465127	0					
ANR	1465142	IdentifierDeclType	unsigned int		1465127	0					
ANR	1465143	Identifier	co		1465127	1					
ANR	1465144	ForStatement	for ( c = * cptr ; c <= d ; c ++ )		1465127	2					
ANR	1465145	ForInit	c = * cptr ;	4127:5:129682:129691	1465127	0	True				
ANR	1465146	AssignmentExpression	c = * cptr		1465127	0		=			
ANR	1465147	Identifier	c		1465127	0					
ANR	1465148	UnaryOperationExpression	* cptr		1465127	1					
ANR	1465149	UnaryOperator	*		1465127	0					
ANR	1465150	Identifier	cptr		1465127	1					
ANR	1465151	Condition	c <= d	4127:16:129693:129698	1465127	1	True				
ANR	1465152	RelationalExpression	c <= d		1465127	0		<=			
ANR	1465153	Identifier	c		1465127	0					
ANR	1465154	Identifier	d		1465127	1					
ANR	1465155	PostIncDecOperationExpression	c ++	4127:24:129701:129703	1465127	2	True				
ANR	1465156	Identifier	c		1465127	0					
ANR	1465157	IncDec	++		1465127	1					
ANR	1465158	CompoundStatement		9:2:200:200	1465127	3					
ANR	1465159	IfStatement	if ( ( co = UCD_CASESET ( c ) ) != 0 )		1465127	0					
ANR	1465160	Condition	( co = UCD_CASESET ( c ) ) != 0	4129:6:129716:129741	1465127	0	True				
ANR	1465161	EqualityExpression	( co = UCD_CASESET ( c ) ) != 0		1465127	0		!=			
ANR	1465162	AssignmentExpression	co = UCD_CASESET ( c )		1465127	0		=			
ANR	1465163	Identifier	co		1465127	0					
ANR	1465164	CallExpression	UCD_CASESET ( c )		1465127	1					
ANR	1465165	Callee	UCD_CASESET		1465127	0					
ANR	1465166	Identifier	UCD_CASESET		1465127	0					
ANR	1465167	ArgumentList	c		1465127	1					
ANR	1465168	Argument	c		1465127	0					
ANR	1465169	Identifier	c		1465127	0					
ANR	1465170	PrimaryExpression	0		1465127	1					
ANR	1465171	CompoundStatement		11:4:240:240	1465127	1					
ANR	1465172	ExpressionStatement	* ocptr = c ++	4131:4:129754:129766	1465127	0	True				
ANR	1465173	AssignmentExpression	* ocptr = c ++		1465127	0		=			
ANR	1465174	UnaryOperationExpression	* ocptr		1465127	0					
ANR	1465175	UnaryOperator	*		1465127	0					
ANR	1465176	Identifier	ocptr		1465127	1					
ANR	1465177	PostIncDecOperationExpression	c ++		1465127	1					
ANR	1465178	Identifier	c		1465127	0					
ANR	1465179	IncDec	++		1465127	1					
ANR	1465180	ExpressionStatement	* cptr = c	4132:4:129807:129816	1465127	1	True				
ANR	1465181	AssignmentExpression	* cptr = c		1465127	0		=			
ANR	1465182	UnaryOperationExpression	* cptr		1465127	0					
ANR	1465183	UnaryOperator	*		1465127	0					
ANR	1465184	Identifier	cptr		1465127	1					
ANR	1465185	Identifier	c		1465127	1					
ANR	1465186	ReturnStatement	return ( int ) co ;	4133:4:129853:129867	1465127	2	True				
ANR	1465187	CastExpression	( int ) co		1465127	0					
ANR	1465188	CastTarget	int		1465127	0					
ANR	1465189	Identifier	co		1465127	1					
ANR	1465190	IfStatement	if ( ( othercase = UCD_OTHERCASE ( c ) ) != c )		1465127	1					
ANR	1465191	Condition	( othercase = UCD_OTHERCASE ( c ) ) != c	4135:6:129881:129915	1465127	0	True				
ANR	1465192	EqualityExpression	( othercase = UCD_OTHERCASE ( c ) ) != c		1465127	0		!=			
ANR	1465193	AssignmentExpression	othercase = UCD_OTHERCASE ( c )		1465127	0		=			
ANR	1465194	Identifier	othercase		1465127	0					
ANR	1465195	CallExpression	UCD_OTHERCASE ( c )		1465127	1					
ANR	1465196	Callee	UCD_OTHERCASE		1465127	0					
ANR	1465197	Identifier	UCD_OTHERCASE		1465127	0					
ANR	1465198	ArgumentList	c		1465127	1					
ANR	1465199	Argument	c		1465127	0					
ANR	1465200	Identifier	c		1465127	0					
ANR	1465201	Identifier	c		1465127	1					
ANR	1465202	BreakStatement	break ;	4135:43:129918:129923	1465127	1	True				
ANR	1465203	IfStatement	if ( c > d )		1465127	3					
ANR	1465204	Condition	c > d	4138:4:129934:129938	1465127	0	True				
ANR	1465205	RelationalExpression	c > d		1465127	0		>			
ANR	1465206	Identifier	c		1465127	0					
ANR	1465207	Identifier	d		1465127	1					
ANR	1465208	ReturnStatement	return - 1 ;	4138:11:129941:129950	1465127	1	True				
ANR	1465209	UnaryOperationExpression	- 1		1465127	0					
ANR	1465210	UnaryOperator	-		1465127	0					
ANR	1465211	PrimaryExpression	1		1465127	1					
ANR	1465212	ExpressionStatement	* ocptr = othercase	4144:0:130172:130190	1465127	4	True				
ANR	1465213	AssignmentExpression	* ocptr = othercase		1465127	0		=			
ANR	1465214	UnaryOperationExpression	* ocptr		1465127	0					
ANR	1465215	UnaryOperator	*		1465127	0					
ANR	1465216	Identifier	ocptr		1465127	1					
ANR	1465217	Identifier	othercase		1465127	1					
ANR	1465218	ExpressionStatement	next = othercase + 1	4145:0:130192:130212	1465127	5	True				
ANR	1465219	AssignmentExpression	next = othercase + 1		1465127	0		=			
ANR	1465220	Identifier	next		1465127	0					
ANR	1465221	AdditiveExpression	othercase + 1		1465127	1		+			
ANR	1465222	Identifier	othercase		1465127	0					
ANR	1465223	PrimaryExpression	1		1465127	1					
ANR	1465224	ForStatement	for ( ++ c ; c <= d ; c ++ )		1465127	6					
ANR	1465225	ForInit	++ c ;	4147:5:130220:130223	1465127	0	True				
ANR	1465226	UnaryExpression	++ c		1465127	0					
ANR	1465227	IncDec	++		1465127	0					
ANR	1465228	Identifier	c		1465127	1					
ANR	1465229	Condition	c <= d	4147:10:130225:130230	1465127	1	True				
ANR	1465230	RelationalExpression	c <= d		1465127	0		<=			
ANR	1465231	Identifier	c		1465127	0					
ANR	1465232	Identifier	d		1465127	1					
ANR	1465233	PostIncDecOperationExpression	c ++	4147:18:130233:130235	1465127	2	True				
ANR	1465234	Identifier	c		1465127	0					
ANR	1465235	IncDec	++		1465127	1					
ANR	1465236	CompoundStatement		29:2:732:732	1465127	3					
ANR	1465237	IfStatement	if ( ( co = UCD_CASESET ( c ) ) != 0 || UCD_OTHERCASE ( c ) != next )		1465127	0					
ANR	1465238	Condition	( co = UCD_CASESET ( c ) ) != 0 || UCD_OTHERCASE ( c ) != next	4149:6:130248:130301	1465127	0	True				
ANR	1465239	OrExpression	( co = UCD_CASESET ( c ) ) != 0 || UCD_OTHERCASE ( c ) != next		1465127	0		||			
ANR	1465240	EqualityExpression	( co = UCD_CASESET ( c ) ) != 0		1465127	0		!=			
ANR	1465241	AssignmentExpression	co = UCD_CASESET ( c )		1465127	0		=			
ANR	1465242	Identifier	co		1465127	0					
ANR	1465243	CallExpression	UCD_CASESET ( c )		1465127	1					
ANR	1465244	Callee	UCD_CASESET		1465127	0					
ANR	1465245	Identifier	UCD_CASESET		1465127	0					
ANR	1465246	ArgumentList	c		1465127	1					
ANR	1465247	Argument	c		1465127	0					
ANR	1465248	Identifier	c		1465127	0					
ANR	1465249	PrimaryExpression	0		1465127	1					
ANR	1465250	EqualityExpression	UCD_OTHERCASE ( c ) != next		1465127	1		!=			
ANR	1465251	CallExpression	UCD_OTHERCASE ( c )		1465127	0					
ANR	1465252	Callee	UCD_OTHERCASE		1465127	0					
ANR	1465253	Identifier	UCD_OTHERCASE		1465127	0					
ANR	1465254	ArgumentList	c		1465127	1					
ANR	1465255	Argument	c		1465127	0					
ANR	1465256	Identifier	c		1465127	0					
ANR	1465257	Identifier	next		1465127	1					
ANR	1465258	BreakStatement	break ;	4149:62:130304:130309	1465127	1	True				
ANR	1465259	ExpressionStatement	next ++	4150:2:130313:130319	1465127	1	True				
ANR	1465260	PostIncDecOperationExpression	next ++		1465127	0					
ANR	1465261	Identifier	next		1465127	0					
ANR	1465262	IncDec	++		1465127	1					
ANR	1465263	ExpressionStatement	* odptr = next - 1	4153:0:130326:130343	1465127	7	True				
ANR	1465264	AssignmentExpression	* odptr = next - 1		1465127	0		=			
ANR	1465265	UnaryOperationExpression	* odptr		1465127	0					
ANR	1465266	UnaryOperator	*		1465127	0					
ANR	1465267	Identifier	odptr		1465127	1					
ANR	1465268	AdditiveExpression	next - 1		1465127	1		-			
ANR	1465269	Identifier	next		1465127	0					
ANR	1465270	PrimaryExpression	1		1465127	1					
ANR	1465271	ExpressionStatement	* cptr = c	4154:0:130378:130387	1465127	8	True				
ANR	1465272	AssignmentExpression	* cptr = c		1465127	0		=			
ANR	1465273	UnaryOperationExpression	* cptr		1465127	0					
ANR	1465274	UnaryOperator	*		1465127	0					
ANR	1465275	Identifier	cptr		1465127	1					
ANR	1465276	Identifier	c		1465127	1					
ANR	1465277	ReturnStatement	return 0 ;	4155:0:130427:130435	1465127	9	True				
ANR	1465278	PrimaryExpression	0		1465127	0					
ANR	1465279	ReturnType	static int		1465127	1					
ANR	1465280	Identifier	get_othercase_range		1465127	2					
ANR	1465281	ParameterList	"pcre_uint32 * cptr , pcre_uint32 d , pcre_uint32 * ocptr , pcre_uint32 * odptr"		1465127	3					
ANR	1465282	Parameter	pcre_uint32 * cptr	4118:20:129431:129447	1465127	0	True				
ANR	1465283	ParameterType	pcre_uint32 *		1465127	0					
ANR	1465284	Identifier	cptr		1465127	1					
ANR	1465285	Parameter	pcre_uint32 d	4118:39:129450:129462	1465127	1	True				
ANR	1465286	ParameterType	pcre_uint32		1465127	0					
ANR	1465287	Identifier	d		1465127	1					
ANR	1465288	Parameter	pcre_uint32 * ocptr	4118:54:129465:129482	1465127	2	True				
ANR	1465289	ParameterType	pcre_uint32 *		1465127	0					
ANR	1465290	Identifier	ocptr		1465127	1					
ANR	1465291	Parameter	pcre_uint32 * odptr	4119:2:129487:129504	1465127	3	True				
ANR	1465292	ParameterType	pcre_uint32 *		1465127	0					
ANR	1465293	Identifier	odptr		1465127	1					
ANR	1465294	CFGEntryNode	ENTRY		1465127		True				
ANR	1465295	CFGExitNode	EXIT		1465127		True				
ANR	1465296	Symbol	next		1465127						
ANR	1465297	Symbol	c		1465127						
ANR	1465298	Symbol	d		1465127						
ANR	1465299	Symbol	cptr		1465127						
ANR	1465300	Symbol	othercase		1465127						
ANR	1465301	Symbol	UCD_CASESET		1465127						
ANR	1465302	Symbol	co		1465127						
ANR	1465303	Symbol	* ocptr		1465127						
ANR	1465304	Symbol	* odptr		1465127						
ANR	1465305	Symbol	ocptr		1465127						
ANR	1465306	Symbol	odptr		1465127						
ANR	1465307	Symbol	UCD_OTHERCASE		1465127						
ANR	1465308	Symbol	* cptr		1465127						
ANR	1465309	Function	add_to_class	4182:0:131296:134921							
ANR	1465310	FunctionDef	"add_to_class (pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , pcre_uint32 start , pcre_uint32 end)"		1465309	0					
ANR	1465311	CompoundStatement		4185:0:131436:134921	1465309	0					
ANR	1465312	IdentifierDeclStatement	pcre_uint32 c ;	4186:0:131438:131451	1465309	0	True				
ANR	1465313	IdentifierDecl	c		1465309	0					
ANR	1465314	IdentifierDeclType	pcre_uint32		1465309	0					
ANR	1465315	Identifier	c		1465309	1					
ANR	1465316	IdentifierDeclStatement	pcre_uint32 classbits_end = ( end <= 0xff ? end : 0xff ) ;	4187:0:131453:131507	1465309	1	True				
ANR	1465317	IdentifierDecl	classbits_end = ( end <= 0xff ? end : 0xff )		1465309	0					
ANR	1465318	IdentifierDeclType	pcre_uint32		1465309	0					
ANR	1465319	Identifier	classbits_end		1465309	1					
ANR	1465320	AssignmentExpression	classbits_end = ( end <= 0xff ? end : 0xff )		1465309	2		=			
ANR	1465321	Identifier	classbits_end		1465309	0					
ANR	1465322	ConditionalExpression	end <= 0xff ? end : 0xff		1465309	1					
ANR	1465323	Condition	end <= 0xff		1465309	0					
ANR	1465324	RelationalExpression	end <= 0xff		1465309	0		<=			
ANR	1465325	Identifier	end		1465309	0					
ANR	1465326	PrimaryExpression	0xff		1465309	1					
ANR	1465327	Identifier	end		1465309	1					
ANR	1465328	PrimaryExpression	0xff		1465309	2					
ANR	1465329	IdentifierDeclStatement	int n8 = 0 ;	4188:0:131509:131519	1465309	2	True				
ANR	1465330	IdentifierDecl	n8 = 0		1465309	0					
ANR	1465331	IdentifierDeclType	int		1465309	0					
ANR	1465332	Identifier	n8		1465309	1					
ANR	1465333	AssignmentExpression	n8 = 0		1465309	2		=			
ANR	1465334	Identifier	n8		1465309	0					
ANR	1465335	PrimaryExpression	0		1465309	1					
ANR	1465336	IfStatement	if ( ( options & PCRE_CASELESS ) != 0 )		1465309	3					
ANR	1465337	Condition	( options & PCRE_CASELESS ) != 0	4195:4:131767:131796	1465309	0	True				
ANR	1465338	EqualityExpression	( options & PCRE_CASELESS ) != 0		1465309	0		!=			
ANR	1465339	BitAndExpression	options & PCRE_CASELESS		1465309	0		&			
ANR	1465340	Identifier	options		1465309	0					
ANR	1465341	Identifier	PCRE_CASELESS		1465309	1					
ANR	1465342	PrimaryExpression	0		1465309	1					
ANR	1465343	CompoundStatement		12:2:364:364	1465309	1					
ANR	1465344	IfStatement	if ( ( options & PCRE_UTF8 ) != 0 )		1465309	0					
ANR	1465345	Condition	( options & PCRE_UTF8 ) != 0	4198:6:131828:131853	1465309	0	True				
ANR	1465346	EqualityExpression	( options & PCRE_UTF8 ) != 0		1465309	0		!=			
ANR	1465347	BitAndExpression	options & PCRE_UTF8		1465309	0		&			
ANR	1465348	Identifier	options		1465309	0					
ANR	1465349	Identifier	PCRE_UTF8		1465309	1					
ANR	1465350	PrimaryExpression	0		1465309	1					
ANR	1465351	CompoundStatement		17:4:441:459	1465309	1					
ANR	1465352	IdentifierDeclStatement	int rc ;	4200:4:131866:131872	1465309	0	True				
ANR	1465353	IdentifierDecl	rc		1465309	0					
ANR	1465354	IdentifierDeclType	int		1465309	0					
ANR	1465355	Identifier	rc		1465309	1					
ANR	1465356	IdentifierDeclStatement	"pcre_uint32 oc , od ;"	4201:4:131878:131896	1465309	1	True				
ANR	1465357	IdentifierDecl	oc		1465309	0					
ANR	1465358	IdentifierDeclType	pcre_uint32		1465309	0					
ANR	1465359	Identifier	oc		1465309	1					
ANR	1465360	IdentifierDecl	od		1465309	1					
ANR	1465361	IdentifierDeclType	pcre_uint32		1465309	0					
ANR	1465362	Identifier	od		1465309	1					
ANR	1465363	ExpressionStatement	options &= ~PCRE_CASELESS	4203:4:131903:131928	1465309	2	True				
ANR	1465364	AssignmentExpression	options &= ~PCRE_CASELESS		1465309	0		&=			
ANR	1465365	Identifier	options		1465309	0					
ANR	1465366	Identifier	~PCRE_CASELESS		1465309	1					
ANR	1465367	ExpressionStatement	c = start	4204:4:131969:131978	1465309	3	True				
ANR	1465368	AssignmentExpression	c = start		1465309	0		=			
ANR	1465369	Identifier	c		1465309	0					
ANR	1465370	Identifier	start		1465309	1					
ANR	1465371	WhileStatement	"while ( ( rc = get_othercase_range ( & c , end , & oc , & od ) ) >= 0 )"		1465309	4					
ANR	1465372	Condition	"( rc = get_othercase_range ( & c , end , & oc , & od ) ) >= 0"	4206:11:131992:132041	1465309	0	True				
ANR	1465373	RelationalExpression	"( rc = get_othercase_range ( & c , end , & oc , & od ) ) >= 0"		1465309	0		>=			
ANR	1465374	AssignmentExpression	"rc = get_othercase_range ( & c , end , & oc , & od )"		1465309	0		=			
ANR	1465375	Identifier	rc		1465309	0					
ANR	1465376	CallExpression	"get_othercase_range ( & c , end , & oc , & od )"		1465309	1					
ANR	1465377	Callee	get_othercase_range		1465309	0					
ANR	1465378	Identifier	get_othercase_range		1465309	0					
ANR	1465379	ArgumentList	& c		1465309	1					
ANR	1465380	Argument	& c		1465309	0					
ANR	1465381	UnaryOperationExpression	& c		1465309	0					
ANR	1465382	UnaryOperator	&		1465309	0					
ANR	1465383	Identifier	c		1465309	1					
ANR	1465384	Argument	end		1465309	1					
ANR	1465385	Identifier	end		1465309	0					
ANR	1465386	Argument	& oc		1465309	2					
ANR	1465387	UnaryOperationExpression	& oc		1465309	0					
ANR	1465388	UnaryOperator	&		1465309	0					
ANR	1465389	Identifier	oc		1465309	1					
ANR	1465390	Argument	& od		1465309	3					
ANR	1465391	UnaryOperationExpression	& od		1465309	0					
ANR	1465392	UnaryOperator	&		1465309	0					
ANR	1465393	Identifier	od		1465309	1					
ANR	1465394	PrimaryExpression	0		1465309	1					
ANR	1465395	CompoundStatement		23:6:613:613	1465309	1					
ANR	1465396	IfStatement	if ( rc > 0 )		1465309	0					
ANR	1465397	Condition	rc > 0	4210:10:132136:132141	1465309	0	True				
ANR	1465398	RelationalExpression	rc > 0		1465309	0		>			
ANR	1465399	Identifier	rc		1465309	0					
ANR	1465400	PrimaryExpression	0		1465309	1					
ANR	1465401	ExpressionStatement	"n8 += add_list_to_class ( classbits , uchardptr , options , cd , PRIV ( ucd_caseless_sets ) + rc , oc )"	4210:18:132144:132244	1465309	1	True				
ANR	1465402	AssignmentExpression	"n8 += add_list_to_class ( classbits , uchardptr , options , cd , PRIV ( ucd_caseless_sets ) + rc , oc )"		1465309	0		+=			
ANR	1465403	Identifier	n8		1465309	0					
ANR	1465404	CallExpression	"add_list_to_class ( classbits , uchardptr , options , cd , PRIV ( ucd_caseless_sets ) + rc , oc )"		1465309	1					
ANR	1465405	Callee	add_list_to_class		1465309	0					
ANR	1465406	Identifier	add_list_to_class		1465309	0					
ANR	1465407	ArgumentList	classbits		1465309	1					
ANR	1465408	Argument	classbits		1465309	0					
ANR	1465409	Identifier	classbits		1465309	0					
ANR	1465410	Argument	uchardptr		1465309	1					
ANR	1465411	Identifier	uchardptr		1465309	0					
ANR	1465412	Argument	options		1465309	2					
ANR	1465413	Identifier	options		1465309	0					
ANR	1465414	Argument	cd		1465309	3					
ANR	1465415	Identifier	cd		1465309	0					
ANR	1465416	Argument	PRIV ( ucd_caseless_sets ) + rc		1465309	4					
ANR	1465417	AdditiveExpression	PRIV ( ucd_caseless_sets ) + rc		1465309	0		+			
ANR	1465418	CallExpression	PRIV ( ucd_caseless_sets )		1465309	0					
ANR	1465419	Callee	PRIV		1465309	0					
ANR	1465420	Identifier	PRIV		1465309	0					
ANR	1465421	ArgumentList	ucd_caseless_sets		1465309	1					
ANR	1465422	Argument	ucd_caseless_sets		1465309	0					
ANR	1465423	Identifier	ucd_caseless_sets		1465309	0					
ANR	1465424	Identifier	rc		1465309	1					
ANR	1465425	Argument	oc		1465309	5					
ANR	1465426	Identifier	oc		1465309	0					
ANR	1465427	ElseStatement	else		1465309	0					
ANR	1465428	IfStatement	if ( oc >= start && od <= end )		1465309	0					
ANR	1465429	Condition	oc >= start && od <= end	4215:15:132340:132363	1465309	0	True				
ANR	1465430	AndExpression	oc >= start && od <= end		1465309	0		&&			
ANR	1465431	RelationalExpression	oc >= start		1465309	0		>=			
ANR	1465432	Identifier	oc		1465309	0					
ANR	1465433	Identifier	start		1465309	1					
ANR	1465434	RelationalExpression	od <= end		1465309	1		<=			
ANR	1465435	Identifier	od		1465309	0					
ANR	1465436	Identifier	end		1465309	1					
ANR	1465437	ContinueStatement	continue ;	4215:41:132366:132374	1465309	1	True				
ANR	1465438	ElseStatement	else		1465309	0					
ANR	1465439	IfStatement	if ( oc < start && od >= start - 1 )		1465309	0					
ANR	1465440	Condition	oc < start && od >= start - 1	4221:15:132630:132658	1465309	0	True				
ANR	1465441	AndExpression	oc < start && od >= start - 1		1465309	0		&&			
ANR	1465442	RelationalExpression	oc < start		1465309	0		<			
ANR	1465443	Identifier	oc		1465309	0					
ANR	1465444	Identifier	start		1465309	1					
ANR	1465445	RelationalExpression	od >= start - 1		1465309	1		>=			
ANR	1465446	Identifier	od		1465309	0					
ANR	1465447	AdditiveExpression	start - 1		1465309	1		-			
ANR	1465448	Identifier	start		1465309	0					
ANR	1465449	PrimaryExpression	1		1465309	1					
ANR	1465450	ExpressionStatement	start = oc	4221:46:132661:132671	1465309	1	True				
ANR	1465451	AssignmentExpression	start = oc		1465309	0		=			
ANR	1465452	Identifier	start		1465309	0					
ANR	1465453	Identifier	oc		1465309	1					
ANR	1465454	ElseStatement	else		1465309	0					
ANR	1465455	IfStatement	if ( od > end && oc <= end + 1 )		1465309	0					
ANR	1465456	Condition	od > end && oc <= end + 1	4222:15:132711:132735	1465309	0	True				
ANR	1465457	AndExpression	od > end && oc <= end + 1		1465309	0		&&			
ANR	1465458	RelationalExpression	od > end		1465309	0		>			
ANR	1465459	Identifier	od		1465309	0					
ANR	1465460	Identifier	end		1465309	1					
ANR	1465461	RelationalExpression	oc <= end + 1		1465309	1		<=			
ANR	1465462	Identifier	oc		1465309	0					
ANR	1465463	AdditiveExpression	end + 1		1465309	1		+			
ANR	1465464	Identifier	end		1465309	0					
ANR	1465465	PrimaryExpression	1		1465309	1					
ANR	1465466	CompoundStatement		39:8:1309:1309	1465309	1					
ANR	1465467	ExpressionStatement	end = od	4224:8:132756:132764	1465309	0	True				
ANR	1465468	AssignmentExpression	end = od		1465309	0		=			
ANR	1465469	Identifier	end		1465309	0					
ANR	1465470	Identifier	od		1465309	1					
ANR	1465471	IfStatement	if ( end > classbits_end )		1465309	1					
ANR	1465472	Condition	end > classbits_end	4225:12:132805:132823	1465309	0	True				
ANR	1465473	RelationalExpression	end > classbits_end		1465309	0		>			
ANR	1465474	Identifier	end		1465309	0					
ANR	1465475	Identifier	classbits_end		1465309	1					
ANR	1465476	ExpressionStatement	classbits_end = ( end <= 0xff ? end : 0xff )	4225:33:132826:132868	1465309	1	True				
ANR	1465477	AssignmentExpression	classbits_end = ( end <= 0xff ? end : 0xff )		1465309	0		=			
ANR	1465478	Identifier	classbits_end		1465309	0					
ANR	1465479	ConditionalExpression	end <= 0xff ? end : 0xff		1465309	1					
ANR	1465480	Condition	end <= 0xff		1465309	0					
ANR	1465481	RelationalExpression	end <= 0xff		1465309	0		<=			
ANR	1465482	Identifier	end		1465309	0					
ANR	1465483	PrimaryExpression	0xff		1465309	1					
ANR	1465484	Identifier	end		1465309	1					
ANR	1465485	PrimaryExpression	0xff		1465309	2					
ANR	1465486	ElseStatement	else		1465309	0					
ANR	1465487	ExpressionStatement	"n8 += add_to_class ( classbits , uchardptr , options , cd , oc , od )"	4227:11:132891:132952	1465309	0	True				
ANR	1465488	AssignmentExpression	"n8 += add_to_class ( classbits , uchardptr , options , cd , oc , od )"		1465309	0		+=			
ANR	1465489	Identifier	n8		1465309	0					
ANR	1465490	CallExpression	"add_to_class ( classbits , uchardptr , options , cd , oc , od )"		1465309	1					
ANR	1465491	Callee	add_to_class		1465309	0					
ANR	1465492	Identifier	add_to_class		1465309	0					
ANR	1465493	ArgumentList	classbits		1465309	1					
ANR	1465494	Argument	classbits		1465309	0					
ANR	1465495	Identifier	classbits		1465309	0					
ANR	1465496	Argument	uchardptr		1465309	1					
ANR	1465497	Identifier	uchardptr		1465309	0					
ANR	1465498	Argument	options		1465309	2					
ANR	1465499	Identifier	options		1465309	0					
ANR	1465500	Argument	cd		1465309	3					
ANR	1465501	Identifier	cd		1465309	0					
ANR	1465502	Argument	oc		1465309	4					
ANR	1465503	Identifier	oc		1465309	0					
ANR	1465504	Argument	od		1465309	5					
ANR	1465505	Identifier	od		1465309	0					
ANR	1465506	ElseStatement	else		1465309	0					
ANR	1465507	ForStatement	for ( c = start ; c <= classbits_end ; c ++ )		1465309	0					
ANR	1465508	ForInit	c = start ;	4235:7:133042:133051	1465309	0	True				
ANR	1465509	AssignmentExpression	c = start		1465309	0		=			
ANR	1465510	Identifier	c		1465309	0					
ANR	1465511	Identifier	start		1465309	1					
ANR	1465512	Condition	c <= classbits_end	4235:18:133053:133070	1465309	1	True				
ANR	1465513	RelationalExpression	c <= classbits_end		1465309	0		<=			
ANR	1465514	Identifier	c		1465309	0					
ANR	1465515	Identifier	classbits_end		1465309	1					
ANR	1465516	PostIncDecOperationExpression	c ++	4235:38:133073:133075	1465309	2	True				
ANR	1465517	Identifier	c		1465309	0					
ANR	1465518	IncDec	++		1465309	1					
ANR	1465519	CompoundStatement		52:4:1645:1645	1465309	3					
ANR	1465520	ExpressionStatement	"SETBIT ( classbits , cd -> fcc [ c ] )"	4237:4:133088:133117	1465309	0	True				
ANR	1465521	CallExpression	"SETBIT ( classbits , cd -> fcc [ c ] )"		1465309	0					
ANR	1465522	Callee	SETBIT		1465309	0					
ANR	1465523	Identifier	SETBIT		1465309	0					
ANR	1465524	ArgumentList	classbits		1465309	1					
ANR	1465525	Argument	classbits		1465309	0					
ANR	1465526	Identifier	classbits		1465309	0					
ANR	1465527	Argument	cd -> fcc [ c ]		1465309	1					
ANR	1465528	ArrayIndexing	cd -> fcc [ c ]		1465309	0					
ANR	1465529	PtrMemberAccess	cd -> fcc		1465309	0					
ANR	1465530	Identifier	cd		1465309	0					
ANR	1465531	Identifier	fcc		1465309	1					
ANR	1465532	Identifier	c		1465309	1					
ANR	1465533	ExpressionStatement	n8 ++	4238:4:133123:133127	1465309	1	True				
ANR	1465534	PostIncDecOperationExpression	n8 ++		1465309	0					
ANR	1465535	Identifier	n8		1465309	0					
ANR	1465536	IncDec	++		1465309	1					
ANR	1465537	IfStatement	if ( ( options & PCRE_UTF8 ) == 0 )		1465309	4					
ANR	1465538	Condition	( options & PCRE_UTF8 ) == 0	4248:6:133367:133392	1465309	0	True				
ANR	1465539	EqualityExpression	( options & PCRE_UTF8 ) == 0		1465309	0		==			
ANR	1465540	BitAndExpression	options & PCRE_UTF8		1465309	0		&			
ANR	1465541	Identifier	options		1465309	0					
ANR	1465542	Identifier	PCRE_UTF8		1465309	1					
ANR	1465543	PrimaryExpression	0		1465309	1					
ANR	1465544	IfStatement	if ( end > 0xff )		1465309	1					
ANR	1465545	Condition	end > 0xff	4250:6:133408:133417	1465309	0	True				
ANR	1465546	RelationalExpression	end > 0xff		1465309	0		>			
ANR	1465547	Identifier	end		1465309	0					
ANR	1465548	PrimaryExpression	0xff		1465309	1					
ANR	1465549	ExpressionStatement	end = 0xff	4250:18:133420:133430	1465309	1	True				
ANR	1465550	AssignmentExpression	end = 0xff		1465309	0		=			
ANR	1465551	Identifier	end		1465309	0					
ANR	1465552	PrimaryExpression	0xff		1465309	1					
ANR	1465553	ForStatement	for ( c = start ; c <= classbits_end ; c ++ )		1465309	5					
ANR	1465554	ForInit	c = start ;	4262:5:133665:133674	1465309	0	True				
ANR	1465555	AssignmentExpression	c = start		1465309	0		=			
ANR	1465556	Identifier	c		1465309	0					
ANR	1465557	Identifier	start		1465309	1					
ANR	1465558	Condition	c <= classbits_end	4262:16:133676:133693	1465309	1	True				
ANR	1465559	RelationalExpression	c <= classbits_end		1465309	0		<=			
ANR	1465560	Identifier	c		1465309	0					
ANR	1465561	Identifier	classbits_end		1465309	1					
ANR	1465562	PostIncDecOperationExpression	c ++	4262:36:133696:133698	1465309	2	True				
ANR	1465563	Identifier	c		1465309	0					
ANR	1465564	IncDec	++		1465309	1					
ANR	1465565	CompoundStatement		79:2:2266:2266	1465309	3					
ANR	1465566	ExpressionStatement	"SETBIT ( classbits , c )"	4265:2:133761:133781	1465309	0	True				
ANR	1465567	CallExpression	"SETBIT ( classbits , c )"		1465309	0					
ANR	1465568	Callee	SETBIT		1465309	0					
ANR	1465569	Identifier	SETBIT		1465309	0					
ANR	1465570	ArgumentList	classbits		1465309	1					
ANR	1465571	Argument	classbits		1465309	0					
ANR	1465572	Identifier	classbits		1465309	0					
ANR	1465573	Argument	c		1465309	1					
ANR	1465574	Identifier	c		1465309	0					
ANR	1465575	ExpressionStatement	n8 ++	4266:2:133785:133789	1465309	1	True				
ANR	1465576	PostIncDecOperationExpression	n8 ++		1465309	0					
ANR	1465577	Identifier	n8		1465309	0					
ANR	1465578	IncDec	++		1465309	1					
ANR	1465579	IfStatement	if ( start <= 0xff )		1465309	6					
ANR	1465580	Condition	start <= 0xff	4270:4:133850:133862	1465309	0	True				
ANR	1465581	RelationalExpression	start <= 0xff		1465309	0		<=			
ANR	1465582	Identifier	start		1465309	0					
ANR	1465583	PrimaryExpression	0xff		1465309	1					
ANR	1465584	ExpressionStatement	start = 0xff + 1	4270:19:133865:133881	1465309	1	True				
ANR	1465585	AssignmentExpression	start = 0xff + 1		1465309	0		=			
ANR	1465586	Identifier	start		1465309	0					
ANR	1465587	AdditiveExpression	0xff + 1		1465309	1		+			
ANR	1465588	PrimaryExpression	0xff		1465309	0					
ANR	1465589	PrimaryExpression	1		1465309	1					
ANR	1465590	IfStatement	if ( end >= start )		1465309	7					
ANR	1465591	Condition	end >= start	4272:4:133888:133899	1465309	0	True				
ANR	1465592	RelationalExpression	end >= start		1465309	0		>=			
ANR	1465593	Identifier	end		1465309	0					
ANR	1465594	Identifier	start		1465309	1					
ANR	1465595	CompoundStatement		90:2:2471:2505	1465309	1					
ANR	1465596	IdentifierDeclStatement	pcre_uchar * uchardata = * uchardptr ;	4274:2:133908:133942	1465309	0	True				
ANR	1465597	IdentifierDecl	* uchardata = * uchardptr		1465309	0					
ANR	1465598	IdentifierDeclType	pcre_uchar *		1465309	0					
ANR	1465599	Identifier	uchardata		1465309	1					
ANR	1465600	AssignmentExpression	* uchardata = * uchardptr		1465309	2		=			
ANR	1465601	Identifier	uchardata		1465309	0					
ANR	1465602	UnaryOperationExpression	* uchardptr		1465309	1					
ANR	1465603	UnaryOperator	*		1465309	0					
ANR	1465604	Identifier	uchardptr		1465309	1					
ANR	1465605	IfStatement	if ( ( options & PCRE_UTF8 ) != 0 )		1465309	1					
ANR	1465606	Condition	( options & PCRE_UTF8 ) != 0	4276:6:133969:133994	1465309	0	True				
ANR	1465607	EqualityExpression	( options & PCRE_UTF8 ) != 0		1465309	0		!=			
ANR	1465608	BitAndExpression	options & PCRE_UTF8		1465309	0		&			
ANR	1465609	Identifier	options		1465309	0					
ANR	1465610	Identifier	PCRE_UTF8		1465309	1					
ANR	1465611	PrimaryExpression	0		1465309	1					
ANR	1465612	CompoundStatement		93:4:2602:2602	1465309	1					
ANR	1465613	IfStatement	if ( start < end )		1465309	0					
ANR	1465614	Condition	start < end	4278:8:134049:134059	1465309	0	True				
ANR	1465615	RelationalExpression	start < end		1465309	0		<			
ANR	1465616	Identifier	start		1465309	0					
ANR	1465617	Identifier	end		1465309	1					
ANR	1465618	CompoundStatement		95:6:2631:2631	1465309	1					
ANR	1465619	ExpressionStatement	* uchardata ++ = XCL_RANGE	4280:6:134076:134100	1465309	0	True				
ANR	1465620	AssignmentExpression	* uchardata ++ = XCL_RANGE		1465309	0		=			
ANR	1465621	UnaryOperationExpression	* uchardata ++		1465309	0					
ANR	1465622	UnaryOperator	*		1465309	0					
ANR	1465623	PostIncDecOperationExpression	uchardata ++		1465309	1					
ANR	1465624	Identifier	uchardata		1465309	0					
ANR	1465625	IncDec	++		1465309	1					
ANR	1465626	Identifier	XCL_RANGE		1465309	1					
ANR	1465627	ExpressionStatement	"uchardata += PRIV ( ord2utf ) ( start , uchardata )"	4281:6:134108:134152	1465309	1	True				
ANR	1465628	AssignmentExpression	"uchardata += PRIV ( ord2utf ) ( start , uchardata )"		1465309	0		+=			
ANR	1465629	Identifier	uchardata		1465309	0					
ANR	1465630	CallExpression	"PRIV ( ord2utf ) ( start , uchardata )"		1465309	1					
ANR	1465631	Callee	PRIV ( ord2utf )		1465309	0					
ANR	1465632	CallExpression	PRIV ( ord2utf )		1465309	0					
ANR	1465633	Callee	PRIV		1465309	0					
ANR	1465634	Identifier	PRIV		1465309	0					
ANR	1465635	ArgumentList	ord2utf		1465309	1					
ANR	1465636	Argument	ord2utf		1465309	0					
ANR	1465637	Identifier	ord2utf		1465309	0					
ANR	1465638	ArgumentList	start		1465309	1					
ANR	1465639	Argument	start		1465309	0					
ANR	1465640	Identifier	start		1465309	0					
ANR	1465641	Argument	uchardata		1465309	1					
ANR	1465642	Identifier	uchardata		1465309	0					
ANR	1465643	ExpressionStatement	"uchardata += PRIV ( ord2utf ) ( end , uchardata )"	4282:6:134160:134202	1465309	2	True				
ANR	1465644	AssignmentExpression	"uchardata += PRIV ( ord2utf ) ( end , uchardata )"		1465309	0		+=			
ANR	1465645	Identifier	uchardata		1465309	0					
ANR	1465646	CallExpression	"PRIV ( ord2utf ) ( end , uchardata )"		1465309	1					
ANR	1465647	Callee	PRIV ( ord2utf )		1465309	0					
ANR	1465648	CallExpression	PRIV ( ord2utf )		1465309	0					
ANR	1465649	Callee	PRIV		1465309	0					
ANR	1465650	Identifier	PRIV		1465309	0					
ANR	1465651	ArgumentList	ord2utf		1465309	1					
ANR	1465652	Argument	ord2utf		1465309	0					
ANR	1465653	Identifier	ord2utf		1465309	0					
ANR	1465654	ArgumentList	end		1465309	1					
ANR	1465655	Argument	end		1465309	0					
ANR	1465656	Identifier	end		1465309	0					
ANR	1465657	Argument	uchardata		1465309	1					
ANR	1465658	Identifier	uchardata		1465309	0					
ANR	1465659	ElseStatement	else		1465309	0					
ANR	1465660	IfStatement	if ( start == end )		1465309	0					
ANR	1465661	Condition	start == end	4284:13:134225:134236	1465309	0	True				
ANR	1465662	EqualityExpression	start == end		1465309	0		==			
ANR	1465663	Identifier	start		1465309	0					
ANR	1465664	Identifier	end		1465309	1					
ANR	1465665	CompoundStatement		101:6:2808:2808	1465309	1					
ANR	1465666	ExpressionStatement	* uchardata ++ = XCL_SINGLE	4286:6:134253:134278	1465309	0	True				
ANR	1465667	AssignmentExpression	* uchardata ++ = XCL_SINGLE		1465309	0		=			
ANR	1465668	UnaryOperationExpression	* uchardata ++		1465309	0					
ANR	1465669	UnaryOperator	*		1465309	0					
ANR	1465670	PostIncDecOperationExpression	uchardata ++		1465309	1					
ANR	1465671	Identifier	uchardata		1465309	0					
ANR	1465672	IncDec	++		1465309	1					
ANR	1465673	Identifier	XCL_SINGLE		1465309	1					
ANR	1465674	ExpressionStatement	"uchardata += PRIV ( ord2utf ) ( start , uchardata )"	4287:6:134286:134330	1465309	1	True				
ANR	1465675	AssignmentExpression	"uchardata += PRIV ( ord2utf ) ( start , uchardata )"		1465309	0		+=			
ANR	1465676	Identifier	uchardata		1465309	0					
ANR	1465677	CallExpression	"PRIV ( ord2utf ) ( start , uchardata )"		1465309	1					
ANR	1465678	Callee	PRIV ( ord2utf )		1465309	0					
ANR	1465679	CallExpression	PRIV ( ord2utf )		1465309	0					
ANR	1465680	Callee	PRIV		1465309	0					
ANR	1465681	Identifier	PRIV		1465309	0					
ANR	1465682	ArgumentList	ord2utf		1465309	1					
ANR	1465683	Argument	ord2utf		1465309	0					
ANR	1465684	Identifier	ord2utf		1465309	0					
ANR	1465685	ArgumentList	start		1465309	1					
ANR	1465686	Argument	start		1465309	0					
ANR	1465687	Identifier	start		1465309	0					
ANR	1465688	Argument	uchardata		1465309	1					
ANR	1465689	Identifier	uchardata		1465309	0					
ANR	1465690	ElseStatement	else		1465309	0					
ANR	1465691	CompoundStatement		113:4:3107:3107	1465309	0					
ANR	1465692	ExpressionStatement	* uchardptr = uchardata	4312:2:134768:134790	1465309	2	True				
ANR	1465693	AssignmentExpression	* uchardptr = uchardata		1465309	0		=			
ANR	1465694	UnaryOperationExpression	* uchardptr		1465309	0					
ANR	1465695	UnaryOperator	*		1465309	0					
ANR	1465696	Identifier	uchardptr		1465309	1					
ANR	1465697	Identifier	uchardata		1465309	1					
ANR	1465698	ReturnStatement	return n8 ;	4316:0:134874:134883	1465309	8	True				
ANR	1465699	Identifier	n8		1465309	0					
ANR	1465700	ReturnType	static int		1465309	1					
ANR	1465701	Identifier	add_to_class		1465309	2					
ANR	1465702	ParameterList	"pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , pcre_uint32 start , pcre_uint32 end"		1465309	3					
ANR	1465703	Parameter	pcre_uint8 * classbits	4183:13:131320:131340	1465309	0	True				
ANR	1465704	ParameterType	pcre_uint8 *		1465309	0					
ANR	1465705	Identifier	classbits		1465309	1					
ANR	1465706	Parameter	pcre_uchar * * uchardptr	4183:36:131343:131364	1465309	1	True				
ANR	1465707	ParameterType	pcre_uchar * *		1465309	0					
ANR	1465708	Identifier	uchardptr		1465309	1					
ANR	1465709	Parameter	int options	4183:60:131367:131377	1465309	2	True				
ANR	1465710	ParameterType	int		1465309	0					
ANR	1465711	Identifier	options		1465309	1					
ANR	1465712	Parameter	compile_data * cd	4184:2:131382:131397	1465309	3	True				
ANR	1465713	ParameterType	compile_data *		1465309	0					
ANR	1465714	Identifier	cd		1465309	1					
ANR	1465715	Parameter	pcre_uint32 start	4184:20:131400:131416	1465309	4	True				
ANR	1465716	ParameterType	pcre_uint32		1465309	0					
ANR	1465717	Identifier	start		1465309	1					
ANR	1465718	Parameter	pcre_uint32 end	4184:39:131419:131433	1465309	5	True				
ANR	1465719	ParameterType	pcre_uint32		1465309	0					
ANR	1465720	Identifier	end		1465309	1					
ANR	1465721	CFGEntryNode	ENTRY		1465309		True				
ANR	1465722	CFGExitNode	EXIT		1465309		True				
ANR	1465723	Symbol	cd -> fcc		1465309						
ANR	1465724	Symbol	* cd		1465309						
ANR	1465725	Symbol	~PCRE_CASELESS		1465309						
ANR	1465726	Symbol	n8		1465309						
ANR	1465727	Symbol	PRIV		1465309						
ANR	1465728	Symbol	add_to_class		1465309						
ANR	1465729	Symbol	uchardptr		1465309						
ANR	1465730	Symbol	classbits		1465309						
ANR	1465731	Symbol	* uchardptr		1465309						
ANR	1465732	Symbol	classbits_end		1465309						
ANR	1465733	Symbol	* * cd		1465309						
ANR	1465734	Symbol	ucd_caseless_sets		1465309						
ANR	1465735	Symbol	add_list_to_class		1465309						
ANR	1465736	Symbol	XCL_RANGE		1465309						
ANR	1465737	Symbol	oc		1465309						
ANR	1465738	Symbol	od		1465309						
ANR	1465739	Symbol	* uchardata ++		1465309						
ANR	1465740	Symbol	options		1465309						
ANR	1465741	Symbol	end		1465309						
ANR	1465742	Symbol	PCRE_CASELESS		1465309						
ANR	1465743	Symbol	& od		1465309						
ANR	1465744	Symbol	& oc		1465309						
ANR	1465745	Symbol	cd		1465309						
ANR	1465746	Symbol	c		1465309						
ANR	1465747	Symbol	ord2utf		1465309						
ANR	1465748	Symbol	start		1465309						
ANR	1465749	Symbol	& c		1465309						
ANR	1465750	Symbol	* cd -> fcc		1465309						
ANR	1465751	Symbol	uchardata		1465309						
ANR	1465752	Symbol	* c		1465309						
ANR	1465753	Symbol	rc		1465309						
ANR	1465754	Symbol	get_othercase_range		1465309						
ANR	1465755	Symbol	XCL_SINGLE		1465309						
ANR	1465756	Symbol	PCRE_UTF8		1465309						
ANR	1465757	Function	add_list_to_class	4346:0:135958:136338							
ANR	1465758	FunctionDef	"add_list_to_class (pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , const pcre_uint32 * p , unsigned int except)"		1465757	0					
ANR	1465759	CompoundStatement		4349:0:136110:136338	1465757	0					
ANR	1465760	IdentifierDeclStatement	int n8 = 0 ;	4350:0:136112:136122	1465757	0	True				
ANR	1465761	IdentifierDecl	n8 = 0		1465757	0					
ANR	1465762	IdentifierDeclType	int		1465757	0					
ANR	1465763	Identifier	n8		1465757	1					
ANR	1465764	AssignmentExpression	n8 = 0		1465757	2		=			
ANR	1465765	Identifier	n8		1465757	0					
ANR	1465766	PrimaryExpression	0		1465757	1					
ANR	1465767	WhileStatement	while ( p [ 0 ] < NOTACHAR )		1465757	1					
ANR	1465768	Condition	p [ 0 ] < NOTACHAR	4351:7:136131:136145	1465757	0	True				
ANR	1465769	RelationalExpression	p [ 0 ] < NOTACHAR		1465757	0		<			
ANR	1465770	ArrayIndexing	p [ 0 ]		1465757	0					
ANR	1465771	Identifier	p		1465757	0					
ANR	1465772	PrimaryExpression	0		1465757	1					
ANR	1465773	Identifier	NOTACHAR		1465757	1					
ANR	1465774	CompoundStatement		5:2:43:52	1465757	1					
ANR	1465775	IdentifierDeclStatement	int n = 0 ;	4353:2:136154:136163	1465757	0	True				
ANR	1465776	IdentifierDecl	n = 0		1465757	0					
ANR	1465777	IdentifierDeclType	int		1465757	0					
ANR	1465778	Identifier	n		1465757	1					
ANR	1465779	AssignmentExpression	n = 0		1465757	2		=			
ANR	1465780	Identifier	n		1465757	0					
ANR	1465781	PrimaryExpression	0		1465757	1					
ANR	1465782	IfStatement	if ( p [ 0 ] != except )		1465757	1					
ANR	1465783	Condition	p [ 0 ] != except	4354:6:136171:136184	1465757	0	True				
ANR	1465784	EqualityExpression	p [ 0 ] != except		1465757	0		!=			
ANR	1465785	ArrayIndexing	p [ 0 ]		1465757	0					
ANR	1465786	Identifier	p		1465757	0					
ANR	1465787	PrimaryExpression	0		1465757	1					
ANR	1465788	Identifier	except		1465757	1					
ANR	1465789	CompoundStatement		7:4:80:80	1465757	1					
ANR	1465790	WhileStatement	while ( p [ n + 1 ] == p [ 0 ] + n + 1 )		1465757	0					
ANR	1465791	Condition	p [ n + 1 ] == p [ 0 ] + n + 1	4356:10:136203:136224	1465757	0	True				
ANR	1465792	EqualityExpression	p [ n + 1 ] == p [ 0 ] + n + 1		1465757	0		==			
ANR	1465793	ArrayIndexing	p [ n + 1 ]		1465757	0					
ANR	1465794	Identifier	p		1465757	0					
ANR	1465795	AdditiveExpression	n + 1		1465757	1		+			
ANR	1465796	Identifier	n		1465757	0					
ANR	1465797	PrimaryExpression	1		1465757	1					
ANR	1465798	AdditiveExpression	p [ 0 ] + n + 1		1465757	1		+			
ANR	1465799	ArrayIndexing	p [ 0 ]		1465757	0					
ANR	1465800	Identifier	p		1465757	0					
ANR	1465801	PrimaryExpression	0		1465757	1					
ANR	1465802	AdditiveExpression	n + 1		1465757	1		+			
ANR	1465803	Identifier	n		1465757	0					
ANR	1465804	PrimaryExpression	1		1465757	1					
ANR	1465805	ExpressionStatement	n ++	4356:34:136227:136230	1465757	1	True				
ANR	1465806	PostIncDecOperationExpression	n ++		1465757	0					
ANR	1465807	Identifier	n		1465757	0					
ANR	1465808	IncDec	++		1465757	1					
ANR	1465809	ExpressionStatement	"n8 += add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] , p [ n ] )"	4357:4:136236:136301	1465757	1	True				
ANR	1465810	AssignmentExpression	"n8 += add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] , p [ n ] )"		1465757	0		+=			
ANR	1465811	Identifier	n8		1465757	0					
ANR	1465812	CallExpression	"add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] , p [ n ] )"		1465757	1					
ANR	1465813	Callee	add_to_class		1465757	0					
ANR	1465814	Identifier	add_to_class		1465757	0					
ANR	1465815	ArgumentList	classbits		1465757	1					
ANR	1465816	Argument	classbits		1465757	0					
ANR	1465817	Identifier	classbits		1465757	0					
ANR	1465818	Argument	uchardptr		1465757	1					
ANR	1465819	Identifier	uchardptr		1465757	0					
ANR	1465820	Argument	options		1465757	2					
ANR	1465821	Identifier	options		1465757	0					
ANR	1465822	Argument	cd		1465757	3					
ANR	1465823	Identifier	cd		1465757	0					
ANR	1465824	Argument	p [ 0 ]		1465757	4					
ANR	1465825	ArrayIndexing	p [ 0 ]		1465757	0					
ANR	1465826	Identifier	p		1465757	0					
ANR	1465827	PrimaryExpression	0		1465757	1					
ANR	1465828	Argument	p [ n ]		1465757	5					
ANR	1465829	ArrayIndexing	p [ n ]		1465757	0					
ANR	1465830	Identifier	p		1465757	0					
ANR	1465831	Identifier	n		1465757	1					
ANR	1465832	ExpressionStatement	p += n + 1	4359:2:136311:136321	1465757	2	True				
ANR	1465833	AssignmentExpression	p += n + 1		1465757	0		+=			
ANR	1465834	Identifier	p		1465757	0					
ANR	1465835	AdditiveExpression	n + 1		1465757	1		+			
ANR	1465836	Identifier	n		1465757	0					
ANR	1465837	PrimaryExpression	1		1465757	1					
ANR	1465838	ReturnStatement	return n8 ;	4361:0:136327:136336	1465757	2	True				
ANR	1465839	Identifier	n8		1465757	0					
ANR	1465840	ReturnType	static int		1465757	1					
ANR	1465841	Identifier	add_list_to_class		1465757	2					
ANR	1465842	ParameterList	"pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , const pcre_uint32 * p , unsigned int except"		1465757	3					
ANR	1465843	Parameter	pcre_uint8 * classbits	4347:18:135987:136007	1465757	0	True				
ANR	1465844	ParameterType	pcre_uint8 *		1465757	0					
ANR	1465845	Identifier	classbits		1465757	1					
ANR	1465846	Parameter	pcre_uchar * * uchardptr	4347:41:136010:136031	1465757	1	True				
ANR	1465847	ParameterType	pcre_uchar * *		1465757	0					
ANR	1465848	Identifier	uchardptr		1465757	1					
ANR	1465849	Parameter	int options	4347:65:136034:136044	1465757	2	True				
ANR	1465850	ParameterType	int		1465757	0					
ANR	1465851	Identifier	options		1465757	1					
ANR	1465852	Parameter	compile_data * cd	4348:2:136049:136064	1465757	3	True				
ANR	1465853	ParameterType	compile_data *		1465757	0					
ANR	1465854	Identifier	cd		1465757	1					
ANR	1465855	Parameter	const pcre_uint32 * p	4348:20:136067:136086	1465757	4	True				
ANR	1465856	ParameterType	const pcre_uint32 *		1465757	0					
ANR	1465857	Identifier	p		1465757	1					
ANR	1465858	Parameter	unsigned int except	4348:42:136089:136107	1465757	5	True				
ANR	1465859	ParameterType	unsigned int		1465757	0					
ANR	1465860	Identifier	except		1465757	1					
ANR	1465861	CFGEntryNode	ENTRY		1465757		True				
ANR	1465862	CFGExitNode	EXIT		1465757		True				
ANR	1465863	Symbol	p		1465757						
ANR	1465864	Symbol	cd		1465757						
ANR	1465865	Symbol	NOTACHAR		1465757						
ANR	1465866	Symbol	options		1465757						
ANR	1465867	Symbol	* n		1465757						
ANR	1465868	Symbol	except		1465757						
ANR	1465869	Symbol	n8		1465757						
ANR	1465870	Symbol	* p		1465757						
ANR	1465871	Symbol	add_to_class		1465757						
ANR	1465872	Symbol	uchardptr		1465757						
ANR	1465873	Symbol	classbits		1465757						
ANR	1465874	Symbol	n		1465757						
ANR	1465875	Function	add_not_list_to_class	4384:0:137012:137502							
ANR	1465876	FunctionDef	"add_not_list_to_class (pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , const pcre_uint32 * p)"		1465875	0					
ANR	1465877	CompoundStatement		4387:0:137147:137502	1465875	0					
ANR	1465878	IdentifierDeclStatement	BOOL utf = ( options & PCRE_UTF8 ) != 0 ;	4388:0:137149:137186	1465875	0	True				
ANR	1465879	IdentifierDecl	utf = ( options & PCRE_UTF8 ) != 0		1465875	0					
ANR	1465880	IdentifierDeclType	BOOL		1465875	0					
ANR	1465881	Identifier	utf		1465875	1					
ANR	1465882	AssignmentExpression	utf = ( options & PCRE_UTF8 ) != 0		1465875	2		=			
ANR	1465883	Identifier	utf		1465875	0					
ANR	1465884	EqualityExpression	( options & PCRE_UTF8 ) != 0		1465875	1		!=			
ANR	1465885	BitAndExpression	options & PCRE_UTF8		1465875	0		&			
ANR	1465886	Identifier	options		1465875	0					
ANR	1465887	Identifier	PCRE_UTF8		1465875	1					
ANR	1465888	PrimaryExpression	0		1465875	1					
ANR	1465889	IdentifierDeclStatement	int n8 = 0 ;	4389:0:137188:137198	1465875	1	True				
ANR	1465890	IdentifierDecl	n8 = 0		1465875	0					
ANR	1465891	IdentifierDeclType	int		1465875	0					
ANR	1465892	Identifier	n8		1465875	1					
ANR	1465893	AssignmentExpression	n8 = 0		1465875	2		=			
ANR	1465894	Identifier	n8		1465875	0					
ANR	1465895	PrimaryExpression	0		1465875	1					
ANR	1465896	IfStatement	if ( p [ 0 ] > 0 )		1465875	2					
ANR	1465897	Condition	p [ 0 ] > 0	4390:4:137204:137211	1465875	0	True				
ANR	1465898	RelationalExpression	p [ 0 ] > 0		1465875	0		>			
ANR	1465899	ArrayIndexing	p [ 0 ]		1465875	0					
ANR	1465900	Identifier	p		1465875	0					
ANR	1465901	PrimaryExpression	0		1465875	1					
ANR	1465902	PrimaryExpression	0		1465875	1					
ANR	1465903	ExpressionStatement	"n8 += add_to_class ( classbits , uchardptr , options , cd , 0 , p [ 0 ] - 1 )"	4391:2:137216:137282	1465875	1	True				
ANR	1465904	AssignmentExpression	"n8 += add_to_class ( classbits , uchardptr , options , cd , 0 , p [ 0 ] - 1 )"		1465875	0		+=			
ANR	1465905	Identifier	n8		1465875	0					
ANR	1465906	CallExpression	"add_to_class ( classbits , uchardptr , options , cd , 0 , p [ 0 ] - 1 )"		1465875	1					
ANR	1465907	Callee	add_to_class		1465875	0					
ANR	1465908	Identifier	add_to_class		1465875	0					
ANR	1465909	ArgumentList	classbits		1465875	1					
ANR	1465910	Argument	classbits		1465875	0					
ANR	1465911	Identifier	classbits		1465875	0					
ANR	1465912	Argument	uchardptr		1465875	1					
ANR	1465913	Identifier	uchardptr		1465875	0					
ANR	1465914	Argument	options		1465875	2					
ANR	1465915	Identifier	options		1465875	0					
ANR	1465916	Argument	cd		1465875	3					
ANR	1465917	Identifier	cd		1465875	0					
ANR	1465918	Argument	0		1465875	4					
ANR	1465919	PrimaryExpression	0		1465875	0					
ANR	1465920	Argument	p [ 0 ] - 1		1465875	5					
ANR	1465921	AdditiveExpression	p [ 0 ] - 1		1465875	0		-			
ANR	1465922	ArrayIndexing	p [ 0 ]		1465875	0					
ANR	1465923	Identifier	p		1465875	0					
ANR	1465924	PrimaryExpression	0		1465875	1					
ANR	1465925	PrimaryExpression	1		1465875	1					
ANR	1465926	WhileStatement	while ( p [ 0 ] < NOTACHAR )		1465875	3					
ANR	1465927	Condition	p [ 0 ] < NOTACHAR	4392:7:137291:137305	1465875	0	True				
ANR	1465928	RelationalExpression	p [ 0 ] < NOTACHAR		1465875	0		<			
ANR	1465929	ArrayIndexing	p [ 0 ]		1465875	0					
ANR	1465930	Identifier	p		1465875	0					
ANR	1465931	PrimaryExpression	0		1465875	1					
ANR	1465932	Identifier	NOTACHAR		1465875	1					
ANR	1465933	CompoundStatement		7:2:162:162	1465875	1					
ANR	1465934	WhileStatement	while ( p [ 1 ] == p [ 0 ] + 1 )		1465875	0					
ANR	1465935	Condition	p [ 1 ] == p [ 0 ] + 1	4394:9:137321:137336	1465875	0	True				
ANR	1465936	EqualityExpression	p [ 1 ] == p [ 0 ] + 1		1465875	0		==			
ANR	1465937	ArrayIndexing	p [ 1 ]		1465875	0					
ANR	1465938	Identifier	p		1465875	0					
ANR	1465939	PrimaryExpression	1		1465875	1					
ANR	1465940	AdditiveExpression	p [ 0 ] + 1		1465875	1		+			
ANR	1465941	ArrayIndexing	p [ 0 ]		1465875	0					
ANR	1465942	Identifier	p		1465875	0					
ANR	1465943	PrimaryExpression	0		1465875	1					
ANR	1465944	PrimaryExpression	1		1465875	1					
ANR	1465945	ExpressionStatement	p ++	4394:27:137339:137342	1465875	1	True				
ANR	1465946	PostIncDecOperationExpression	p ++		1465875	0					
ANR	1465947	Identifier	p		1465875	0					
ANR	1465948	IncDec	++		1465875	1					
ANR	1465949	ExpressionStatement	"n8 += add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] + 1 , ( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1 )"	4395:2:137346:137478	1465875	1	True				
ANR	1465950	AssignmentExpression	"n8 += add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] + 1 , ( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1 )"		1465875	0		+=			
ANR	1465951	Identifier	n8		1465875	0					
ANR	1465952	CallExpression	"add_to_class ( classbits , uchardptr , options , cd , p [ 0 ] + 1 , ( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1 )"		1465875	1					
ANR	1465953	Callee	add_to_class		1465875	0					
ANR	1465954	Identifier	add_to_class		1465875	0					
ANR	1465955	ArgumentList	classbits		1465875	1					
ANR	1465956	Argument	classbits		1465875	0					
ANR	1465957	Identifier	classbits		1465875	0					
ANR	1465958	Argument	uchardptr		1465875	1					
ANR	1465959	Identifier	uchardptr		1465875	0					
ANR	1465960	Argument	options		1465875	2					
ANR	1465961	Identifier	options		1465875	0					
ANR	1465962	Argument	cd		1465875	3					
ANR	1465963	Identifier	cd		1465875	0					
ANR	1465964	Argument	p [ 0 ] + 1		1465875	4					
ANR	1465965	AdditiveExpression	p [ 0 ] + 1		1465875	0		+			
ANR	1465966	ArrayIndexing	p [ 0 ]		1465875	0					
ANR	1465967	Identifier	p		1465875	0					
ANR	1465968	PrimaryExpression	0		1465875	1					
ANR	1465969	PrimaryExpression	1		1465875	1					
ANR	1465970	Argument	( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1		1465875	5					
ANR	1465971	ConditionalExpression	( p [ 1 ] == NOTACHAR ) ? ( utf ? 0x10ffffu : 0xffffffffu ) : p [ 1 ] - 1		1465875	0					
ANR	1465972	Condition	p [ 1 ] == NOTACHAR		1465875	0					
ANR	1465973	EqualityExpression	p [ 1 ] == NOTACHAR		1465875	0		==			
ANR	1465974	ArrayIndexing	p [ 1 ]		1465875	0					
ANR	1465975	Identifier	p		1465875	0					
ANR	1465976	PrimaryExpression	1		1465875	1					
ANR	1465977	Identifier	NOTACHAR		1465875	1					
ANR	1465978	ConditionalExpression	utf ? 0x10ffffu : 0xffffffffu		1465875	1					
ANR	1465979	Condition	utf		1465875	0					
ANR	1465980	Identifier	utf		1465875	0					
ANR	1465981	PrimaryExpression	0x10ffffu		1465875	1					
ANR	1465982	PrimaryExpression	0xffffffffu		1465875	2					
ANR	1465983	AdditiveExpression	p [ 1 ] - 1		1465875	2		-			
ANR	1465984	ArrayIndexing	p [ 1 ]		1465875	0					
ANR	1465985	Identifier	p		1465875	0					
ANR	1465986	PrimaryExpression	1		1465875	1					
ANR	1465987	PrimaryExpression	1		1465875	1					
ANR	1465988	ExpressionStatement	p ++	4397:2:137482:137485	1465875	2	True				
ANR	1465989	PostIncDecOperationExpression	p ++		1465875	0					
ANR	1465990	Identifier	p		1465875	0					
ANR	1465991	IncDec	++		1465875	1					
ANR	1465992	ReturnStatement	return n8 ;	4399:0:137491:137500	1465875	4	True				
ANR	1465993	Identifier	n8		1465875	0					
ANR	1465994	ReturnType	static int		1465875	1					
ANR	1465995	Identifier	add_not_list_to_class		1465875	2					
ANR	1465996	ParameterList	"pcre_uint8 * classbits , pcre_uchar * * uchardptr , int options , compile_data * cd , const pcre_uint32 * p"		1465875	3					
ANR	1465997	Parameter	pcre_uint8 * classbits	4385:22:137045:137065	1465875	0	True				
ANR	1465998	ParameterType	pcre_uint8 *		1465875	0					
ANR	1465999	Identifier	classbits		1465875	1					
ANR	1466000	Parameter	pcre_uchar * * uchardptr	4385:45:137068:137089	1465875	1	True				
ANR	1466001	ParameterType	pcre_uchar * *		1465875	0					
ANR	1466002	Identifier	uchardptr		1465875	1					
ANR	1466003	Parameter	int options	4386:2:137094:137104	1465875	2	True				
ANR	1466004	ParameterType	int		1465875	0					
ANR	1466005	Identifier	options		1465875	1					
ANR	1466006	Parameter	compile_data * cd	4386:15:137107:137122	1465875	3	True				
ANR	1466007	ParameterType	compile_data *		1465875	0					
ANR	1466008	Identifier	cd		1465875	1					
ANR	1466009	Parameter	const pcre_uint32 * p	4386:33:137125:137144	1465875	4	True				
ANR	1466010	ParameterType	const pcre_uint32 *		1465875	0					
ANR	1466011	Identifier	p		1465875	1					
ANR	1466012	CFGEntryNode	ENTRY		1465875		True				
ANR	1466013	CFGExitNode	EXIT		1465875		True				
ANR	1466014	Symbol	p		1465875						
ANR	1466015	Symbol	cd		1465875						
ANR	1466016	Symbol	utf		1465875						
ANR	1466017	Symbol	NOTACHAR		1465875						
ANR	1466018	Symbol	options		1465875						
ANR	1466019	Symbol	n8		1465875						
ANR	1466020	Symbol	* p		1465875						
ANR	1466021	Symbol	add_to_class		1465875						
ANR	1466022	Symbol	uchardptr		1465875						
ANR	1466023	Symbol	PCRE_UTF8		1465875						
ANR	1466024	Symbol	classbits		1465875						
ANR	1466025	Function	compile_branch	4433:0:138939:265617							
ANR	1466026	FunctionDef	"compile_branch (int * optionsptr , pcre_uchar * * codeptr , const pcre_uchar * * ptrptr , int * errorcodeptr , pcre_uint32 * firstcharptr , pcre_int32 * firstcharflagsptr , pcre_uint32 * reqcharptr , pcre_int32 * reqcharflagsptr , branch_chain * bcptr , int cond_depth , compile_data * cd , int * lengthptr)"		1466025	0					
ANR	1466027	CompoundStatement		4440:0:139244:265617	1466025	0					
ANR	1466028	IdentifierDeclStatement	"int repeat_type , op_type ;"	4441:0:139246:139270	1466025	0	True				
ANR	1466029	IdentifierDecl	repeat_type		1466025	0					
ANR	1466030	IdentifierDeclType	int		1466025	0					
ANR	1466031	Identifier	repeat_type		1466025	1					
ANR	1466032	IdentifierDecl	op_type		1466025	1					
ANR	1466033	IdentifierDeclType	int		1466025	0					
ANR	1466034	Identifier	op_type		1466025	1					
ANR	1466035	IdentifierDeclStatement	"int repeat_min = 0 , repeat_max = 0 ;"	4442:0:139272:139306	1466025	1	True				
ANR	1466036	IdentifierDecl	repeat_min = 0		1466025	0					
ANR	1466037	IdentifierDeclType	int		1466025	0					
ANR	1466038	Identifier	repeat_min		1466025	1					
ANR	1466039	AssignmentExpression	repeat_min = 0		1466025	2		=			
ANR	1466040	Identifier	repeat_min		1466025	0					
ANR	1466041	PrimaryExpression	0		1466025	1					
ANR	1466042	IdentifierDecl	repeat_max = 0		1466025	1					
ANR	1466043	IdentifierDeclType	int		1466025	0					
ANR	1466044	Identifier	repeat_max		1466025	1					
ANR	1466045	AssignmentExpression	repeat_max = 0		1466025	2		=			
ANR	1466046	Identifier	repeat_max		1466025	0					
ANR	1466047	PrimaryExpression	0		1466025	1					
ANR	1466048	IdentifierDeclStatement	int bravalue = 0 ;	4443:0:139345:139361	1466025	2	True				
ANR	1466049	IdentifierDecl	bravalue = 0		1466025	0					
ANR	1466050	IdentifierDeclType	int		1466025	0					
ANR	1466051	Identifier	bravalue		1466025	1					
ANR	1466052	AssignmentExpression	bravalue = 0		1466025	2		=			
ANR	1466053	Identifier	bravalue		1466025	0					
ANR	1466054	PrimaryExpression	0		1466025	1					
ANR	1466055	IdentifierDeclStatement	"int greedy_default , greedy_non_default ;"	4444:0:139363:139401	1466025	3	True				
ANR	1466056	IdentifierDecl	greedy_default		1466025	0					
ANR	1466057	IdentifierDeclType	int		1466025	0					
ANR	1466058	Identifier	greedy_default		1466025	1					
ANR	1466059	IdentifierDecl	greedy_non_default		1466025	1					
ANR	1466060	IdentifierDeclType	int		1466025	0					
ANR	1466061	Identifier	greedy_non_default		1466025	1					
ANR	1466062	IdentifierDeclStatement	"pcre_uint32 firstchar , reqchar ;"	4445:0:139403:139433	1466025	4	True				
ANR	1466063	IdentifierDecl	firstchar		1466025	0					
ANR	1466064	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1466065	Identifier	firstchar		1466025	1					
ANR	1466066	IdentifierDecl	reqchar		1466025	1					
ANR	1466067	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1466068	Identifier	reqchar		1466025	1					
ANR	1466069	IdentifierDeclStatement	"pcre_int32 firstcharflags , reqcharflags ;"	4446:0:139435:139474	1466025	5	True				
ANR	1466070	IdentifierDecl	firstcharflags		1466025	0					
ANR	1466071	IdentifierDeclType	pcre_int32		1466025	0					
ANR	1466072	Identifier	firstcharflags		1466025	1					
ANR	1466073	IdentifierDecl	reqcharflags		1466025	1					
ANR	1466074	IdentifierDeclType	pcre_int32		1466025	0					
ANR	1466075	Identifier	reqcharflags		1466025	1					
ANR	1466076	IdentifierDeclStatement	"pcre_uint32 zeroreqchar , zerofirstchar ;"	4447:0:139476:139514	1466025	6	True				
ANR	1466077	IdentifierDecl	zeroreqchar		1466025	0					
ANR	1466078	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1466079	Identifier	zeroreqchar		1466025	1					
ANR	1466080	IdentifierDecl	zerofirstchar		1466025	1					
ANR	1466081	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1466082	Identifier	zerofirstchar		1466025	1					
ANR	1466083	IdentifierDeclStatement	"pcre_int32 zeroreqcharflags , zerofirstcharflags ;"	4448:0:139516:139563	1466025	7	True				
ANR	1466084	IdentifierDecl	zeroreqcharflags		1466025	0					
ANR	1466085	IdentifierDeclType	pcre_int32		1466025	0					
ANR	1466086	Identifier	zeroreqcharflags		1466025	1					
ANR	1466087	IdentifierDecl	zerofirstcharflags		1466025	1					
ANR	1466088	IdentifierDeclType	pcre_int32		1466025	0					
ANR	1466089	Identifier	zerofirstcharflags		1466025	1					
ANR	1466090	IdentifierDeclStatement	"pcre_int32 req_caseopt , reqvary , tempreqvary ;"	4449:0:139565:139609	1466025	8	True				
ANR	1466091	IdentifierDecl	req_caseopt		1466025	0					
ANR	1466092	IdentifierDeclType	pcre_int32		1466025	0					
ANR	1466093	Identifier	req_caseopt		1466025	1					
ANR	1466094	IdentifierDecl	reqvary		1466025	1					
ANR	1466095	IdentifierDeclType	pcre_int32		1466025	0					
ANR	1466096	Identifier	reqvary		1466025	1					
ANR	1466097	IdentifierDecl	tempreqvary		1466025	2					
ANR	1466098	IdentifierDeclType	pcre_int32		1466025	0					
ANR	1466099	Identifier	tempreqvary		1466025	1					
ANR	1466100	IdentifierDeclStatement	int options = * optionsptr ;	4450:0:139611:139636	1466025	9	True				
ANR	1466101	IdentifierDecl	options = * optionsptr		1466025	0					
ANR	1466102	IdentifierDeclType	int		1466025	0					
ANR	1466103	Identifier	options		1466025	1					
ANR	1466104	AssignmentExpression	options = * optionsptr		1466025	2		=			
ANR	1466105	Identifier	options		1466025	0					
ANR	1466106	UnaryOperationExpression	* optionsptr		1466025	1					
ANR	1466107	UnaryOperator	*		1466025	0					
ANR	1466108	Identifier	optionsptr		1466025	1					
ANR	1466109	IdentifierDeclStatement	int after_manual_callout = 0 ;	4451:0:139681:139709	1466025	10	True				
ANR	1466110	IdentifierDecl	after_manual_callout = 0		1466025	0					
ANR	1466111	IdentifierDeclType	int		1466025	0					
ANR	1466112	Identifier	after_manual_callout		1466025	1					
ANR	1466113	AssignmentExpression	after_manual_callout = 0		1466025	2		=			
ANR	1466114	Identifier	after_manual_callout		1466025	0					
ANR	1466115	PrimaryExpression	0		1466025	1					
ANR	1466116	IdentifierDeclStatement	int length_prevgroup = 0 ;	4452:0:139711:139735	1466025	11	True				
ANR	1466117	IdentifierDecl	length_prevgroup = 0		1466025	0					
ANR	1466118	IdentifierDeclType	int		1466025	0					
ANR	1466119	Identifier	length_prevgroup		1466025	1					
ANR	1466120	AssignmentExpression	length_prevgroup = 0		1466025	2		=			
ANR	1466121	Identifier	length_prevgroup		1466025	0					
ANR	1466122	PrimaryExpression	0		1466025	1					
ANR	1466123	Statement	register	4453:0:139737:139744	1466025	12	True				
ANR	1466124	IdentifierDeclStatement	pcre_uint32 c ;	4453:9:139746:139759	1466025	13	True				
ANR	1466125	IdentifierDecl	c		1466025	0					
ANR	1466126	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1466127	Identifier	c		1466025	1					
ANR	1466128	IdentifierDeclStatement	int escape ;	4454:0:139761:139771	1466025	14	True				
ANR	1466129	IdentifierDecl	escape		1466025	0					
ANR	1466130	IdentifierDeclType	int		1466025	0					
ANR	1466131	Identifier	escape		1466025	1					
ANR	1466132	Statement	register	4455:0:139773:139780	1466025	15	True				
ANR	1466133	IdentifierDeclStatement	pcre_uchar * code = * codeptr ;	4455:9:139782:139809	1466025	16	True				
ANR	1466134	IdentifierDecl	* code = * codeptr		1466025	0					
ANR	1466135	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1466136	Identifier	code		1466025	1					
ANR	1466137	AssignmentExpression	* code = * codeptr		1466025	2		=			
ANR	1466138	Identifier	code		1466025	0					
ANR	1466139	UnaryOperationExpression	* codeptr		1466025	1					
ANR	1466140	UnaryOperator	*		1466025	0					
ANR	1466141	Identifier	codeptr		1466025	1					
ANR	1466142	IdentifierDeclStatement	pcre_uchar * last_code = code ;	4456:0:139811:139839	1466025	17	True				
ANR	1466143	IdentifierDecl	* last_code = code		1466025	0					
ANR	1466144	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1466145	Identifier	last_code		1466025	1					
ANR	1466146	AssignmentExpression	* last_code = code		1466025	2		=			
ANR	1466147	Identifier	code		1466025	0					
ANR	1466148	Identifier	code		1466025	1					
ANR	1466149	IdentifierDeclStatement	pcre_uchar * orig_code = code ;	4457:0:139841:139869	1466025	18	True				
ANR	1466150	IdentifierDecl	* orig_code = code		1466025	0					
ANR	1466151	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1466152	Identifier	orig_code		1466025	1					
ANR	1466153	AssignmentExpression	* orig_code = code		1466025	2		=			
ANR	1466154	Identifier	code		1466025	0					
ANR	1466155	Identifier	code		1466025	1					
ANR	1466156	IdentifierDeclStatement	pcre_uchar * tempcode ;	4458:0:139871:139891	1466025	19	True				
ANR	1466157	IdentifierDecl	* tempcode		1466025	0					
ANR	1466158	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1466159	Identifier	tempcode		1466025	1					
ANR	1466160	IdentifierDeclStatement	BOOL inescq = FALSE ;	4459:0:139893:139912	1466025	20	True				
ANR	1466161	IdentifierDecl	inescq = FALSE		1466025	0					
ANR	1466162	IdentifierDeclType	BOOL		1466025	0					
ANR	1466163	Identifier	inescq		1466025	1					
ANR	1466164	AssignmentExpression	inescq = FALSE		1466025	2		=			
ANR	1466165	Identifier	FALSE		1466025	0					
ANR	1466166	Identifier	FALSE		1466025	1					
ANR	1466167	IdentifierDeclStatement	BOOL groupsetfirstchar = FALSE ;	4460:0:139914:139944	1466025	21	True				
ANR	1466168	IdentifierDecl	groupsetfirstchar = FALSE		1466025	0					
ANR	1466169	IdentifierDeclType	BOOL		1466025	0					
ANR	1466170	Identifier	groupsetfirstchar		1466025	1					
ANR	1466171	AssignmentExpression	groupsetfirstchar = FALSE		1466025	2		=			
ANR	1466172	Identifier	FALSE		1466025	0					
ANR	1466173	Identifier	FALSE		1466025	1					
ANR	1466174	IdentifierDeclStatement	const pcre_uchar * ptr = * ptrptr ;	4461:0:139946:139977	1466025	22	True				
ANR	1466175	IdentifierDecl	* ptr = * ptrptr		1466025	0					
ANR	1466176	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1466177	Identifier	ptr		1466025	1					
ANR	1466178	AssignmentExpression	* ptr = * ptrptr		1466025	2		=			
ANR	1466179	Identifier	ptr		1466025	0					
ANR	1466180	UnaryOperationExpression	* ptrptr		1466025	1					
ANR	1466181	UnaryOperator	*		1466025	0					
ANR	1466182	Identifier	ptrptr		1466025	1					
ANR	1466183	IdentifierDeclStatement	const pcre_uchar * tempptr ;	4462:0:139979:140004	1466025	23	True				
ANR	1466184	IdentifierDecl	* tempptr		1466025	0					
ANR	1466185	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1466186	Identifier	tempptr		1466025	1					
ANR	1466187	IdentifierDeclStatement	const pcre_uchar * nestptr = NULL ;	4463:0:140006:140038	1466025	24	True				
ANR	1466188	IdentifierDecl	* nestptr = NULL		1466025	0					
ANR	1466189	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1466190	Identifier	nestptr		1466025	1					
ANR	1466191	AssignmentExpression	* nestptr = NULL		1466025	2		=			
ANR	1466192	Identifier	NULL		1466025	0					
ANR	1466193	Identifier	NULL		1466025	1					
ANR	1466194	IdentifierDeclStatement	pcre_uchar * previous = NULL ;	4464:0:140040:140067	1466025	25	True				
ANR	1466195	IdentifierDecl	* previous = NULL		1466025	0					
ANR	1466196	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1466197	Identifier	previous		1466025	1					
ANR	1466198	AssignmentExpression	* previous = NULL		1466025	2		=			
ANR	1466199	Identifier	NULL		1466025	0					
ANR	1466200	Identifier	NULL		1466025	1					
ANR	1466201	IdentifierDeclStatement	pcre_uchar * previous_callout = NULL ;	4465:0:140069:140104	1466025	26	True				
ANR	1466202	IdentifierDecl	* previous_callout = NULL		1466025	0					
ANR	1466203	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1466204	Identifier	previous_callout		1466025	1					
ANR	1466205	AssignmentExpression	* previous_callout = NULL		1466025	2		=			
ANR	1466206	Identifier	NULL		1466025	0					
ANR	1466207	Identifier	NULL		1466025	1					
ANR	1466208	IdentifierDeclStatement	size_t save_hwm_offset = 0 ;	4466:0:140106:140132	1466025	27	True				
ANR	1466209	IdentifierDecl	save_hwm_offset = 0		1466025	0					
ANR	1466210	IdentifierDeclType	size_t		1466025	0					
ANR	1466211	Identifier	save_hwm_offset		1466025	1					
ANR	1466212	AssignmentExpression	save_hwm_offset = 0		1466025	2		=			
ANR	1466213	Identifier	save_hwm_offset		1466025	0					
ANR	1466214	PrimaryExpression	0		1466025	1					
ANR	1466215	IdentifierDeclStatement	pcre_uint8 classbits [ 32 ] ;	4467:0:140134:140158	1466025	28	True				
ANR	1466216	IdentifierDecl	classbits [ 32 ]		1466025	0					
ANR	1466217	IdentifierDeclType	pcre_uint8 [ 32 ]		1466025	0					
ANR	1466218	Identifier	classbits		1466025	1					
ANR	1466219	PrimaryExpression	32		1466025	2					
ANR	1466220	IdentifierDeclStatement	BOOL utf = ( options & PCRE_UTF8 ) != 0 ;	4475:0:140433:140470	1466025	29	True				
ANR	1466221	IdentifierDecl	utf = ( options & PCRE_UTF8 ) != 0		1466025	0					
ANR	1466222	IdentifierDeclType	BOOL		1466025	0					
ANR	1466223	Identifier	utf		1466025	1					
ANR	1466224	AssignmentExpression	utf = ( options & PCRE_UTF8 ) != 0		1466025	2		=			
ANR	1466225	Identifier	utf		1466025	0					
ANR	1466226	EqualityExpression	( options & PCRE_UTF8 ) != 0		1466025	1		!=			
ANR	1466227	BitAndExpression	options & PCRE_UTF8		1466025	0		&			
ANR	1466228	Identifier	options		1466025	0					
ANR	1466229	Identifier	PCRE_UTF8		1466025	1					
ANR	1466230	PrimaryExpression	0		1466025	1					
ANR	1466231	IdentifierDeclStatement	pcre_uchar utf_chars [ 6 ] ;	4477:0:140495:140518	1466025	30	True				
ANR	1466232	IdentifierDecl	utf_chars [ 6 ]		1466025	0					
ANR	1466233	IdentifierDeclType	pcre_uchar [ 6 ]		1466025	0					
ANR	1466234	Identifier	utf_chars		1466025	1					
ANR	1466235	PrimaryExpression	6		1466025	2					
ANR	1466236	IdentifierDeclStatement	pcre_uchar * class_uchardata ;	4488:0:140835:140862	1466025	31	True				
ANR	1466237	IdentifierDecl	* class_uchardata		1466025	0					
ANR	1466238	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1466239	Identifier	class_uchardata		1466025	1					
ANR	1466240	IdentifierDeclStatement	BOOL xclass ;	4490:0:140914:140925	1466025	32	True				
ANR	1466241	IdentifierDecl	xclass		1466025	0					
ANR	1466242	IdentifierDeclType	BOOL		1466025	0					
ANR	1466243	Identifier	xclass		1466025	1					
ANR	1466244	IdentifierDeclStatement	pcre_uchar * class_uchardata_base ;	4491:0:140927:140959	1466025	33	True				
ANR	1466245	IdentifierDecl	* class_uchardata_base		1466025	0					
ANR	1466246	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1466247	Identifier	class_uchardata_base		1466025	1					
ANR	1466248	IfStatement	if ( lengthptr != NULL )		1466025	34					
ANR	1466249	Condition	lengthptr != NULL	4495:4:140991:141007	1466025	0	True				
ANR	1466250	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1466251	Identifier	lengthptr		1466025	0					
ANR	1466252	Identifier	NULL		1466025	1					
ANR	1466253	ExpressionStatement	"DPRINTF ( ( "">> start branch\\n"" ) )"	4495:23:141010:141040	1466025	1	True				
ANR	1466254	CallExpression	"DPRINTF ( ( "">> start branch\\n"" ) )"		1466025	0					
ANR	1466255	Callee	DPRINTF		1466025	0					
ANR	1466256	Identifier	DPRINTF		1466025	0					
ANR	1466257	ArgumentList	""">> start branch\\n"""		1466025	1					
ANR	1466258	Argument	""">> start branch\\n"""		1466025	0					
ANR	1466259	PrimaryExpression	""">> start branch\\n"""		1466025	0					
ANR	1466260	ExpressionStatement	greedy_default = ( ( options & PCRE_UNGREEDY ) != 0 )	4500:0:141116:141165	1466025	35	True				
ANR	1466261	AssignmentExpression	greedy_default = ( ( options & PCRE_UNGREEDY ) != 0 )		1466025	0		=			
ANR	1466262	Identifier	greedy_default		1466025	0					
ANR	1466263	EqualityExpression	( options & PCRE_UNGREEDY ) != 0		1466025	1		!=			
ANR	1466264	BitAndExpression	options & PCRE_UNGREEDY		1466025	0		&			
ANR	1466265	Identifier	options		1466025	0					
ANR	1466266	Identifier	PCRE_UNGREEDY		1466025	1					
ANR	1466267	PrimaryExpression	0		1466025	1					
ANR	1466268	ExpressionStatement	greedy_non_default = greedy_default ^ 1	4501:0:141167:141206	1466025	36	True				
ANR	1466269	AssignmentExpression	greedy_non_default = greedy_default ^ 1		1466025	0		=			
ANR	1466270	Identifier	greedy_non_default		1466025	0					
ANR	1466271	ExclusiveOrExpression	greedy_default ^ 1		1466025	1		^			
ANR	1466272	Identifier	greedy_default		1466025	0					
ANR	1466273	PrimaryExpression	1		1466025	1					
ANR	1466274	ExpressionStatement	firstchar = reqchar = zerofirstchar = zeroreqchar = 0	4513:0:141763:141816	1466025	37	True				
ANR	1466275	AssignmentExpression	firstchar = reqchar = zerofirstchar = zeroreqchar = 0		1466025	0		=			
ANR	1466276	Identifier	firstchar		1466025	0					
ANR	1466277	AssignmentExpression	reqchar = zerofirstchar = zeroreqchar = 0		1466025	1		=			
ANR	1466278	Identifier	reqchar		1466025	0					
ANR	1466279	AssignmentExpression	zerofirstchar = zeroreqchar = 0		1466025	1		=			
ANR	1466280	Identifier	zerofirstchar		1466025	0					
ANR	1466281	AssignmentExpression	zeroreqchar = 0		1466025	1		=			
ANR	1466282	Identifier	zeroreqchar		1466025	0					
ANR	1466283	PrimaryExpression	0		1466025	1					
ANR	1466284	ExpressionStatement	firstcharflags = reqcharflags = zerofirstcharflags = zeroreqcharflags = REQ_UNSET	4514:0:141818:141899	1466025	38	True				
ANR	1466285	AssignmentExpression	firstcharflags = reqcharflags = zerofirstcharflags = zeroreqcharflags = REQ_UNSET		1466025	0		=			
ANR	1466286	Identifier	firstcharflags		1466025	0					
ANR	1466287	AssignmentExpression	reqcharflags = zerofirstcharflags = zeroreqcharflags = REQ_UNSET		1466025	1		=			
ANR	1466288	Identifier	reqcharflags		1466025	0					
ANR	1466289	AssignmentExpression	zerofirstcharflags = zeroreqcharflags = REQ_UNSET		1466025	1		=			
ANR	1466290	Identifier	zerofirstcharflags		1466025	0					
ANR	1466291	AssignmentExpression	zeroreqcharflags = REQ_UNSET		1466025	1		=			
ANR	1466292	Identifier	zeroreqcharflags		1466025	0					
ANR	1466293	Identifier	REQ_UNSET		1466025	1					
ANR	1466294	ExpressionStatement	req_caseopt = ( ( options & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0	4522:0:142217:142279	1466025	39	True				
ANR	1466295	AssignmentExpression	req_caseopt = ( ( options & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0		1466025	0		=			
ANR	1466296	Identifier	req_caseopt		1466025	0					
ANR	1466297	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0		1466025	1					
ANR	1466298	Condition	( options & PCRE_CASELESS ) != 0		1466025	0					
ANR	1466299	EqualityExpression	( options & PCRE_CASELESS ) != 0		1466025	0		!=			
ANR	1466300	BitAndExpression	options & PCRE_CASELESS		1466025	0		&			
ANR	1466301	Identifier	options		1466025	0					
ANR	1466302	Identifier	PCRE_CASELESS		1466025	1					
ANR	1466303	PrimaryExpression	0		1466025	1					
ANR	1466304	Identifier	REQ_CASELESS		1466025	1					
ANR	1466305	PrimaryExpression	0		1466025	2					
ANR	1466306	ForStatement	for ( ; ; ptr ++ )		1466025	40					
ANR	1466307	PostIncDecOperationExpression	ptr ++	4526:8:142350:142354	1466025	0	True				
ANR	1466308	Identifier	ptr		1466025	0					
ANR	1466309	IncDec	++		1466025	1					
ANR	1466310	CompoundStatement		110:2:3633:3655	1466025	1					
ANR	1466311	IdentifierDeclStatement	BOOL negate_class ;	4528:2:142363:142380	1466025	0	True				
ANR	1466312	IdentifierDecl	negate_class		1466025	0					
ANR	1466313	IdentifierDeclType	BOOL		1466025	0					
ANR	1466314	Identifier	negate_class		1466025	1					
ANR	1466315	IdentifierDeclStatement	BOOL should_flip_negation ;	4529:2:142384:142409	1466025	1	True				
ANR	1466316	IdentifierDecl	should_flip_negation		1466025	0					
ANR	1466317	IdentifierDeclType	BOOL		1466025	0					
ANR	1466318	Identifier	should_flip_negation		1466025	1					
ANR	1466319	IdentifierDeclStatement	BOOL possessive_quantifier ;	4530:2:142413:142439	1466025	2	True				
ANR	1466320	IdentifierDecl	possessive_quantifier		1466025	0					
ANR	1466321	IdentifierDeclType	BOOL		1466025	0					
ANR	1466322	Identifier	possessive_quantifier		1466025	1					
ANR	1466323	IdentifierDeclStatement	BOOL is_quantifier ;	4531:2:142443:142461	1466025	3	True				
ANR	1466324	IdentifierDecl	is_quantifier		1466025	0					
ANR	1466325	IdentifierDeclType	BOOL		1466025	0					
ANR	1466326	Identifier	is_quantifier		1466025	1					
ANR	1466327	IdentifierDeclStatement	BOOL is_recurse ;	4532:2:142465:142480	1466025	4	True				
ANR	1466328	IdentifierDecl	is_recurse		1466025	0					
ANR	1466329	IdentifierDeclType	BOOL		1466025	0					
ANR	1466330	Identifier	is_recurse		1466025	1					
ANR	1466331	IdentifierDeclStatement	BOOL reset_bracount ;	4533:2:142484:142503	1466025	5	True				
ANR	1466332	IdentifierDecl	reset_bracount		1466025	0					
ANR	1466333	IdentifierDeclType	BOOL		1466025	0					
ANR	1466334	Identifier	reset_bracount		1466025	1					
ANR	1466335	IdentifierDeclStatement	int class_has_8bitchar ;	4534:2:142507:142529	1466025	6	True				
ANR	1466336	IdentifierDecl	class_has_8bitchar		1466025	0					
ANR	1466337	IdentifierDeclType	int		1466025	0					
ANR	1466338	Identifier	class_has_8bitchar		1466025	1					
ANR	1466339	IdentifierDeclStatement	int class_one_char ;	4535:2:142533:142551	1466025	7	True				
ANR	1466340	IdentifierDecl	class_one_char		1466025	0					
ANR	1466341	IdentifierDeclType	int		1466025	0					
ANR	1466342	Identifier	class_one_char		1466025	1					
ANR	1466343	IdentifierDeclStatement	BOOL xclass_has_prop ;	4537:2:142605:142625	1466025	8	True				
ANR	1466344	IdentifierDecl	xclass_has_prop		1466025	0					
ANR	1466345	IdentifierDeclType	BOOL		1466025	0					
ANR	1466346	Identifier	xclass_has_prop		1466025	1					
ANR	1466347	IdentifierDeclStatement	int newoptions ;	4539:2:142636:142650	1466025	9	True				
ANR	1466348	IdentifierDecl	newoptions		1466025	0					
ANR	1466349	IdentifierDeclType	int		1466025	0					
ANR	1466350	Identifier	newoptions		1466025	1					
ANR	1466351	IdentifierDeclStatement	int recno ;	4540:2:142654:142663	1466025	10	True				
ANR	1466352	IdentifierDecl	recno		1466025	0					
ANR	1466353	IdentifierDeclType	int		1466025	0					
ANR	1466354	Identifier	recno		1466025	1					
ANR	1466355	IdentifierDeclStatement	int refsign ;	4541:2:142667:142678	1466025	11	True				
ANR	1466356	IdentifierDecl	refsign		1466025	0					
ANR	1466357	IdentifierDeclType	int		1466025	0					
ANR	1466358	Identifier	refsign		1466025	1					
ANR	1466359	IdentifierDeclStatement	int skipbytes ;	4542:2:142682:142695	1466025	12	True				
ANR	1466360	IdentifierDecl	skipbytes		1466025	0					
ANR	1466361	IdentifierDeclType	int		1466025	0					
ANR	1466362	Identifier	skipbytes		1466025	1					
ANR	1466363	IdentifierDeclStatement	"pcre_uint32 subreqchar , subfirstchar ;"	4543:2:142699:142735	1466025	13	True				
ANR	1466364	IdentifierDecl	subreqchar		1466025	0					
ANR	1466365	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1466366	Identifier	subreqchar		1466025	1					
ANR	1466367	IdentifierDecl	subfirstchar		1466025	1					
ANR	1466368	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1466369	Identifier	subfirstchar		1466025	1					
ANR	1466370	IdentifierDeclStatement	"pcre_int32 subreqcharflags , subfirstcharflags ;"	4544:2:142739:142784	1466025	14	True				
ANR	1466371	IdentifierDecl	subreqcharflags		1466025	0					
ANR	1466372	IdentifierDeclType	pcre_int32		1466025	0					
ANR	1466373	Identifier	subreqcharflags		1466025	1					
ANR	1466374	IdentifierDecl	subfirstcharflags		1466025	1					
ANR	1466375	IdentifierDeclType	pcre_int32		1466025	0					
ANR	1466376	Identifier	subfirstcharflags		1466025	1					
ANR	1466377	IdentifierDeclStatement	int terminator ;	4545:2:142788:142802	1466025	15	True				
ANR	1466378	IdentifierDecl	terminator		1466025	0					
ANR	1466379	IdentifierDeclType	int		1466025	0					
ANR	1466380	Identifier	terminator		1466025	1					
ANR	1466381	IdentifierDeclStatement	unsigned int mclength ;	4546:2:142806:142827	1466025	16	True				
ANR	1466382	IdentifierDecl	mclength		1466025	0					
ANR	1466383	IdentifierDeclType	unsigned int		1466025	0					
ANR	1466384	Identifier	mclength		1466025	1					
ANR	1466385	IdentifierDeclStatement	unsigned int tempbracount ;	4547:2:142831:142856	1466025	17	True				
ANR	1466386	IdentifierDecl	tempbracount		1466025	0					
ANR	1466387	IdentifierDeclType	unsigned int		1466025	0					
ANR	1466388	Identifier	tempbracount		1466025	1					
ANR	1466389	IdentifierDeclStatement	pcre_uint32 ec ;	4548:2:142860:142874	1466025	18	True				
ANR	1466390	IdentifierDecl	ec		1466025	0					
ANR	1466391	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1466392	Identifier	ec		1466025	1					
ANR	1466393	IdentifierDeclStatement	pcre_uchar mcbuffer [ 8 ] ;	4549:2:142878:142900	1466025	19	True				
ANR	1466394	IdentifierDecl	mcbuffer [ 8 ]		1466025	0					
ANR	1466395	IdentifierDeclType	pcre_uchar [ 8 ]		1466025	0					
ANR	1466396	Identifier	mcbuffer		1466025	1					
ANR	1466397	PrimaryExpression	8		1466025	2					
ANR	1466398	ExpressionStatement	c = * ptr	4553:2:142948:142956	1466025	20	True				
ANR	1466399	AssignmentExpression	c = * ptr		1466025	0		=			
ANR	1466400	Identifier	c		1466025	0					
ANR	1466401	UnaryOperationExpression	* ptr		1466025	1					
ANR	1466402	UnaryOperator	*		1466025	0					
ANR	1466403	Identifier	ptr		1466025	1					
ANR	1466404	IfStatement	if ( c == CHAR_NULL && nestptr != NULL )		1466025	21					
ANR	1466405	Condition	c == CHAR_NULL && nestptr != NULL	4558:6:143094:143126	1466025	0	True				
ANR	1466406	AndExpression	c == CHAR_NULL && nestptr != NULL		1466025	0		&&			
ANR	1466407	EqualityExpression	c == CHAR_NULL		1466025	0		==			
ANR	1466408	Identifier	c		1466025	0					
ANR	1466409	Identifier	CHAR_NULL		1466025	1					
ANR	1466410	EqualityExpression	nestptr != NULL		1466025	1		!=			
ANR	1466411	Identifier	nestptr		1466025	0					
ANR	1466412	Identifier	NULL		1466025	1					
ANR	1466413	CompoundStatement		120:4:3888:3888	1466025	1					
ANR	1466414	ExpressionStatement	ptr = nestptr	4560:4:143139:143152	1466025	0	True				
ANR	1466415	AssignmentExpression	ptr = nestptr		1466025	0		=			
ANR	1466416	Identifier	ptr		1466025	0					
ANR	1466417	Identifier	nestptr		1466025	1					
ANR	1466418	ExpressionStatement	nestptr = NULL	4561:4:143158:143172	1466025	1	True				
ANR	1466419	AssignmentExpression	nestptr = NULL		1466025	0		=			
ANR	1466420	Identifier	nestptr		1466025	0					
ANR	1466421	Identifier	NULL		1466025	1					
ANR	1466422	ExpressionStatement	c = * ptr	4562:4:143178:143186	1466025	2	True				
ANR	1466423	AssignmentExpression	c = * ptr		1466025	0		=			
ANR	1466424	Identifier	c		1466025	0					
ANR	1466425	UnaryOperationExpression	* ptr		1466025	1					
ANR	1466426	UnaryOperator	*		1466025	0					
ANR	1466427	Identifier	ptr		1466025	1					
ANR	1466428	IfStatement	if ( lengthptr != NULL )		1466025	22					
ANR	1466429	Condition	lengthptr != NULL	4568:6:143312:143328	1466025	0	True				
ANR	1466430	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1466431	Identifier	lengthptr		1466025	0					
ANR	1466432	Identifier	NULL		1466025	1					
ANR	1466433	CompoundStatement		130:4:4090:4090	1466025	1					
ANR	1466434	IfStatement	if ( code > cd -> hwm )		1466025	0					
ANR	1466435	Condition	code > cd -> hwm	4571:8:143363:143376	1466025	0	True				
ANR	1466436	RelationalExpression	code > cd -> hwm		1466025	0		>			
ANR	1466437	Identifier	code		1466025	0					
ANR	1466438	PtrMemberAccess	cd -> hwm		1466025	1					
ANR	1466439	Identifier	cd		1466025	0					
ANR	1466440	Identifier	hwm		1466025	1					
ANR	1466441	ExpressionStatement	cd -> hwm = code	4571:24:143379:143393	1466025	1	True				
ANR	1466442	AssignmentExpression	cd -> hwm = code		1466025	0		=			
ANR	1466443	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1466444	Identifier	cd		1466025	0					
ANR	1466445	Identifier	hwm		1466025	1					
ANR	1466446	Identifier	code		1466025	1					
ANR	1466447	IfStatement	if ( code > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN )		1466025	1					
ANR	1466448	Condition	code > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN	4573:8:143448:143528	1466025	0	True				
ANR	1466449	RelationalExpression	code > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		1466025	0		>			
ANR	1466450	Identifier	code		1466025	0					
ANR	1466451	AdditiveExpression	cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		1466025	1		+			
ANR	1466452	PtrMemberAccess	cd -> start_workspace		1466025	0					
ANR	1466453	Identifier	cd		1466025	0					
ANR	1466454	Identifier	start_workspace		1466025	1					
ANR	1466455	AdditiveExpression	cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		1466025	1		-			
ANR	1466456	PtrMemberAccess	cd -> workspace_size		1466025	0					
ANR	1466457	Identifier	cd		1466025	0					
ANR	1466458	Identifier	workspace_size		1466025	1					
ANR	1466459	Identifier	WORK_SIZE_SAFETY_MARGIN		1466025	1					
ANR	1466460	CompoundStatement		136:6:4338:4338	1466025	1					
ANR	1466461	ExpressionStatement	* errorcodeptr = ERR52	4576:6:143591:143612	1466025	0	True				
ANR	1466462	AssignmentExpression	* errorcodeptr = ERR52		1466025	0		=			
ANR	1466463	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1466464	UnaryOperator	*		1466025	0					
ANR	1466465	Identifier	errorcodeptr		1466025	1					
ANR	1466466	Identifier	ERR52		1466025	1					
ANR	1466467	GotoStatement	goto FAILED ;	4577:6:143620:143631	1466025	1	True				
ANR	1466468	Identifier	FAILED		1466025	0					
ANR	1466469	IfStatement	if ( code < last_code )		1466025	2					
ANR	1466470	Condition	code < last_code	4586:8:143973:143988	1466025	0	True				
ANR	1466471	RelationalExpression	code < last_code		1466025	0		<			
ANR	1466472	Identifier	code		1466025	0					
ANR	1466473	Identifier	last_code		1466025	1					
ANR	1466474	ExpressionStatement	code = last_code	4586:26:143991:144007	1466025	1	True				
ANR	1466475	AssignmentExpression	code = last_code		1466025	0		=			
ANR	1466476	Identifier	code		1466025	0					
ANR	1466477	Identifier	last_code		1466025	1					
ANR	1466478	IfStatement	if ( OFLOW_MAX - * lengthptr < code - last_code )		1466025	3					
ANR	1466479	Condition	OFLOW_MAX - * lengthptr < code - last_code	4590:8:144065:144105	1466025	0	True				
ANR	1466480	RelationalExpression	OFLOW_MAX - * lengthptr < code - last_code		1466025	0		<			
ANR	1466481	AdditiveExpression	OFLOW_MAX - * lengthptr		1466025	0		-			
ANR	1466482	Identifier	OFLOW_MAX		1466025	0					
ANR	1466483	UnaryOperationExpression	* lengthptr		1466025	1					
ANR	1466484	UnaryOperator	*		1466025	0					
ANR	1466485	Identifier	lengthptr		1466025	1					
ANR	1466486	AdditiveExpression	code - last_code		1466025	1		-			
ANR	1466487	Identifier	code		1466025	0					
ANR	1466488	Identifier	last_code		1466025	1					
ANR	1466489	CompoundStatement		152:6:4869:4869	1466025	1					
ANR	1466490	ExpressionStatement	* errorcodeptr = ERR20	4592:6:144122:144143	1466025	0	True				
ANR	1466491	AssignmentExpression	* errorcodeptr = ERR20		1466025	0		=			
ANR	1466492	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1466493	UnaryOperator	*		1466025	0					
ANR	1466494	Identifier	errorcodeptr		1466025	1					
ANR	1466495	Identifier	ERR20		1466025	1					
ANR	1466496	GotoStatement	goto FAILED ;	4593:6:144151:144162	1466025	1	True				
ANR	1466497	Identifier	FAILED		1466025	0					
ANR	1466498	ExpressionStatement	* lengthptr += ( int ) ( code - last_code )	4596:4:144177:144214	1466025	4	True				
ANR	1466499	AssignmentExpression	* lengthptr += ( int ) ( code - last_code )		1466025	0		+=			
ANR	1466500	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1466501	UnaryOperator	*		1466025	0					
ANR	1466502	Identifier	lengthptr		1466025	1					
ANR	1466503	CastExpression	( int ) ( code - last_code )		1466025	1					
ANR	1466504	CastTarget	int		1466025	0					
ANR	1466505	AdditiveExpression	code - last_code		1466025	1		-			
ANR	1466506	Identifier	code		1466025	0					
ANR	1466507	Identifier	last_code		1466025	1					
ANR	1466508	ExpressionStatement	"DPRINTF ( ( ""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c ) )"	4597:4:144220:144314	1466025	5	True				
ANR	1466509	CallExpression	"DPRINTF ( ( ""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c ) )"		1466025	0					
ANR	1466510	Callee	DPRINTF		1466025	0					
ANR	1466511	Identifier	DPRINTF		1466025	0					
ANR	1466512	ArgumentList	"""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c"		1466025	1					
ANR	1466513	Argument	"""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c"		1466025	0					
ANR	1466514	Expression	"""length=%d added %d c=%c (0x%x)\\n"" , * lengthptr , ( int ) ( code - last_code ) , c , c"		1466025	0					
ANR	1466515	PrimaryExpression	"""length=%d added %d c=%c (0x%x)\\n"""		1466025	0					
ANR	1466516	Expression	"* lengthptr , ( int ) ( code - last_code ) , c , c"		1466025	1					
ANR	1466517	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1466518	UnaryOperator	*		1466025	0					
ANR	1466519	Identifier	lengthptr		1466025	1					
ANR	1466520	Expression	"( int ) ( code - last_code ) , c , c"		1466025	1					
ANR	1466521	CastExpression	( int ) ( code - last_code )		1466025	0					
ANR	1466522	CastTarget	int		1466025	0					
ANR	1466523	AdditiveExpression	code - last_code		1466025	1		-			
ANR	1466524	Identifier	code		1466025	0					
ANR	1466525	Identifier	last_code		1466025	1					
ANR	1466526	Expression	"c , c"		1466025	1					
ANR	1466527	Identifier	c		1466025	0					
ANR	1466528	Identifier	c		1466025	1					
ANR	1466529	IfStatement	if ( previous != NULL )		1466025	6					
ANR	1466530	Condition	previous != NULL	4604:8:144558:144573	1466025	0	True				
ANR	1466531	EqualityExpression	previous != NULL		1466025	0		!=			
ANR	1466532	Identifier	previous		1466025	0					
ANR	1466533	Identifier	NULL		1466025	1					
ANR	1466534	CompoundStatement		166:6:5337:5337	1466025	1					
ANR	1466535	IfStatement	if ( previous > orig_code )		1466025	0					
ANR	1466536	Condition	previous > orig_code	4606:10:144594:144613	1466025	0	True				
ANR	1466537	RelationalExpression	previous > orig_code		1466025	0		>			
ANR	1466538	Identifier	previous		1466025	0					
ANR	1466539	Identifier	orig_code		1466025	1					
ANR	1466540	CompoundStatement		168:8:5379:5379	1466025	1					
ANR	1466541	ExpressionStatement	"memmove ( orig_code , previous , IN_UCHARS ( code - previous ) )"	4608:8:144634:144690	1466025	0	True				
ANR	1466542	CallExpression	"memmove ( orig_code , previous , IN_UCHARS ( code - previous ) )"		1466025	0					
ANR	1466543	Callee	memmove		1466025	0					
ANR	1466544	Identifier	memmove		1466025	0					
ANR	1466545	ArgumentList	orig_code		1466025	1					
ANR	1466546	Argument	orig_code		1466025	0					
ANR	1466547	Identifier	orig_code		1466025	0					
ANR	1466548	Argument	previous		1466025	1					
ANR	1466549	Identifier	previous		1466025	0					
ANR	1466550	Argument	IN_UCHARS ( code - previous )		1466025	2					
ANR	1466551	CallExpression	IN_UCHARS ( code - previous )		1466025	0					
ANR	1466552	Callee	IN_UCHARS		1466025	0					
ANR	1466553	Identifier	IN_UCHARS		1466025	0					
ANR	1466554	ArgumentList	code - previous		1466025	1					
ANR	1466555	Argument	code - previous		1466025	0					
ANR	1466556	AdditiveExpression	code - previous		1466025	0		-			
ANR	1466557	Identifier	code		1466025	0					
ANR	1466558	Identifier	previous		1466025	1					
ANR	1466559	ExpressionStatement	code -= previous - orig_code	4609:8:144700:144728	1466025	1	True				
ANR	1466560	AssignmentExpression	code -= previous - orig_code		1466025	0		-=			
ANR	1466561	Identifier	code		1466025	0					
ANR	1466562	AdditiveExpression	previous - orig_code		1466025	1		-			
ANR	1466563	Identifier	previous		1466025	0					
ANR	1466564	Identifier	orig_code		1466025	1					
ANR	1466565	ExpressionStatement	previous = orig_code	4610:8:144738:144758	1466025	2	True				
ANR	1466566	AssignmentExpression	previous = orig_code		1466025	0		=			
ANR	1466567	Identifier	previous		1466025	0					
ANR	1466568	Identifier	orig_code		1466025	1					
ANR	1466569	ElseStatement	else		1466025	0					
ANR	1466570	ExpressionStatement	code = orig_code	4613:9:144787:144803	1466025	0	True				
ANR	1466571	AssignmentExpression	code = orig_code		1466025	0		=			
ANR	1466572	Identifier	code		1466025	0					
ANR	1466573	Identifier	orig_code		1466025	1					
ANR	1466574	ExpressionStatement	last_code = code	4618:4:144908:144924	1466025	7	True				
ANR	1466575	AssignmentExpression	last_code = code		1466025	0		=			
ANR	1466576	Identifier	last_code		1466025	0					
ANR	1466577	Identifier	code		1466025	1					
ANR	1466578	ElseStatement	else		1466025	0					
ANR	1466579	IfStatement	if ( cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN )		1466025	0					
ANR	1466580	Condition	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN	4624:11:145043:145129	1466025	0	True				
ANR	1466581	RelationalExpression	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		1466025	0		>			
ANR	1466582	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1466583	Identifier	cd		1466025	0					
ANR	1466584	Identifier	hwm		1466025	1					
ANR	1466585	AdditiveExpression	cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		1466025	1		+			
ANR	1466586	PtrMemberAccess	cd -> start_workspace		1466025	0					
ANR	1466587	Identifier	cd		1466025	0					
ANR	1466588	Identifier	start_workspace		1466025	1					
ANR	1466589	AdditiveExpression	cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		1466025	1		-			
ANR	1466590	PtrMemberAccess	cd -> workspace_size		1466025	0					
ANR	1466591	Identifier	cd		1466025	0					
ANR	1466592	Identifier	workspace_size		1466025	1					
ANR	1466593	Identifier	WORK_SIZE_SAFETY_MARGIN		1466025	1					
ANR	1466594	CompoundStatement		187:4:5891:5891	1466025	1					
ANR	1466595	ExpressionStatement	* errorcodeptr = ERR52	4627:4:145142:145163	1466025	0	True				
ANR	1466596	AssignmentExpression	* errorcodeptr = ERR52		1466025	0		=			
ANR	1466597	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1466598	UnaryOperator	*		1466025	0					
ANR	1466599	Identifier	errorcodeptr		1466025	1					
ANR	1466600	Identifier	ERR52		1466025	1					
ANR	1466601	GotoStatement	goto FAILED ;	4628:4:145169:145180	1466025	1	True				
ANR	1466602	Identifier	FAILED		1466025	0					
ANR	1466603	IfStatement	if ( inescq && c != CHAR_NULL )		1466025	23					
ANR	1466604	Condition	inescq && c != CHAR_NULL	4633:6:145264:145287	1466025	0	True				
ANR	1466605	AndExpression	inescq && c != CHAR_NULL		1466025	0		&&			
ANR	1466606	Identifier	inescq		1466025	0					
ANR	1466607	EqualityExpression	c != CHAR_NULL		1466025	1		!=			
ANR	1466608	Identifier	c		1466025	0					
ANR	1466609	Identifier	CHAR_NULL		1466025	1					
ANR	1466610	CompoundStatement		195:4:6049:6049	1466025	1					
ANR	1466611	IfStatement	if ( c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E )		1466025	0					
ANR	1466612	Condition	c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E	4635:8:145304:145342	1466025	0	True				
ANR	1466613	AndExpression	c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E		1466025	0		&&			
ANR	1466614	EqualityExpression	c == CHAR_BACKSLASH		1466025	0		==			
ANR	1466615	Identifier	c		1466025	0					
ANR	1466616	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1466617	EqualityExpression	ptr [ 1 ] == CHAR_E		1466025	1		==			
ANR	1466618	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1466619	Identifier	ptr		1466025	0					
ANR	1466620	PrimaryExpression	1		1466025	1					
ANR	1466621	Identifier	CHAR_E		1466025	1					
ANR	1466622	CompoundStatement		197:6:6106:6106	1466025	1					
ANR	1466623	ExpressionStatement	inescq = FALSE	4637:6:145359:145373	1466025	0	True				
ANR	1466624	AssignmentExpression	inescq = FALSE		1466025	0		=			
ANR	1466625	Identifier	inescq		1466025	0					
ANR	1466626	Identifier	FALSE		1466025	1					
ANR	1466627	ExpressionStatement	ptr ++	4638:6:145381:145386	1466025	1	True				
ANR	1466628	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1466629	Identifier	ptr		1466025	0					
ANR	1466630	IncDec	++		1466025	1					
ANR	1466631	ContinueStatement	continue ;	4639:6:145394:145402	1466025	2	True				
ANR	1466632	ElseStatement	else		1466025	0					
ANR	1466633	CompoundStatement		203:6:6182:6182	1466025	0					
ANR	1466634	IfStatement	if ( previous_callout != NULL )		1466025	0					
ANR	1466635	Condition	previous_callout != NULL	4643:10:145439:145462	1466025	0	True				
ANR	1466636	EqualityExpression	previous_callout != NULL		1466025	0		!=			
ANR	1466637	Identifier	previous_callout		1466025	0					
ANR	1466638	Identifier	NULL		1466025	1					
ANR	1466639	CompoundStatement		205:8:6228:6228	1466025	1					
ANR	1466640	IfStatement	if ( lengthptr == NULL )		1466025	0					
ANR	1466641	Condition	lengthptr == NULL	4645:12:145487:145503	1466025	0	True				
ANR	1466642	EqualityExpression	lengthptr == NULL		1466025	0		==			
ANR	1466643	Identifier	lengthptr		1466025	0					
ANR	1466644	Identifier	NULL		1466025	1					
ANR	1466645	ExpressionStatement	"complete_callout ( previous_callout , ptr , cd )"	4646:10:145558:145601	1466025	1	True				
ANR	1466646	CallExpression	"complete_callout ( previous_callout , ptr , cd )"		1466025	0					
ANR	1466647	Callee	complete_callout		1466025	0					
ANR	1466648	Identifier	complete_callout		1466025	0					
ANR	1466649	ArgumentList	previous_callout		1466025	1					
ANR	1466650	Argument	previous_callout		1466025	0					
ANR	1466651	Identifier	previous_callout		1466025	0					
ANR	1466652	Argument	ptr		1466025	1					
ANR	1466653	Identifier	ptr		1466025	0					
ANR	1466654	Argument	cd		1466025	2					
ANR	1466655	Identifier	cd		1466025	0					
ANR	1466656	ExpressionStatement	previous_callout = NULL	4647:8:145611:145634	1466025	1	True				
ANR	1466657	AssignmentExpression	previous_callout = NULL		1466025	0		=			
ANR	1466658	Identifier	previous_callout		1466025	0					
ANR	1466659	Identifier	NULL		1466025	1					
ANR	1466660	IfStatement	if ( ( options & PCRE_AUTO_CALLOUT ) != 0 )		1466025	1					
ANR	1466661	Condition	( options & PCRE_AUTO_CALLOUT ) != 0	4649:10:145656:145689	1466025	0	True				
ANR	1466662	EqualityExpression	( options & PCRE_AUTO_CALLOUT ) != 0		1466025	0		!=			
ANR	1466663	BitAndExpression	options & PCRE_AUTO_CALLOUT		1466025	0		&			
ANR	1466664	Identifier	options		1466025	0					
ANR	1466665	Identifier	PCRE_AUTO_CALLOUT		1466025	1					
ANR	1466666	PrimaryExpression	0		1466025	1					
ANR	1466667	CompoundStatement		211:8:6455:6455	1466025	1					
ANR	1466668	ExpressionStatement	previous_callout = code	4651:8:145710:145733	1466025	0	True				
ANR	1466669	AssignmentExpression	previous_callout = code		1466025	0		=			
ANR	1466670	Identifier	previous_callout		1466025	0					
ANR	1466671	Identifier	code		1466025	1					
ANR	1466672	ExpressionStatement	"code = auto_callout ( code , ptr , cd )"	4652:8:145743:145777	1466025	1	True				
ANR	1466673	AssignmentExpression	"code = auto_callout ( code , ptr , cd )"		1466025	0		=			
ANR	1466674	Identifier	code		1466025	0					
ANR	1466675	CallExpression	"auto_callout ( code , ptr , cd )"		1466025	1					
ANR	1466676	Callee	auto_callout		1466025	0					
ANR	1466677	Identifier	auto_callout		1466025	0					
ANR	1466678	ArgumentList	code		1466025	1					
ANR	1466679	Argument	code		1466025	0					
ANR	1466680	Identifier	code		1466025	0					
ANR	1466681	Argument	ptr		1466025	1					
ANR	1466682	Identifier	ptr		1466025	0					
ANR	1466683	Argument	cd		1466025	2					
ANR	1466684	Identifier	cd		1466025	0					
ANR	1466685	GotoStatement	goto NORMAL_CHAR ;	4654:6:145795:145811	1466025	2	True				
ANR	1466686	Identifier	NORMAL_CHAR		1466025	0					
ANR	1466687	IfStatement	if ( ( options & PCRE_EXTENDED ) != 0 )		1466025	24					
ANR	1466688	Condition	( options & PCRE_EXTENDED ) != 0	4662:6:146022:146051	1466025	0	True				
ANR	1466689	EqualityExpression	( options & PCRE_EXTENDED ) != 0		1466025	0		!=			
ANR	1466690	BitAndExpression	options & PCRE_EXTENDED		1466025	0		&			
ANR	1466691	Identifier	options		1466025	0					
ANR	1466692	Identifier	PCRE_EXTENDED		1466025	1					
ANR	1466693	PrimaryExpression	0		1466025	1					
ANR	1466694	CompoundStatement		224:4:6813:6813	1466025	1					
ANR	1466695	ForStatement	for ( ; ; )		1466025	0					
ANR	1466696	CompoundStatement		226:6:6834:6834	1466025	0					
ANR	1466697	WhileStatement	while ( MAX_255 ( c ) && ( cd -> ctypes [ c ] & ctype_space ) != 0 )		1466025	0					
ANR	1466698	Condition	MAX_255 ( c ) && ( cd -> ctypes [ c ] & ctype_space ) != 0	4666:13:146094:146141	1466025	0	True				
ANR	1466699	AndExpression	MAX_255 ( c ) && ( cd -> ctypes [ c ] & ctype_space ) != 0		1466025	0		&&			
ANR	1466700	CallExpression	MAX_255 ( c )		1466025	0					
ANR	1466701	Callee	MAX_255		1466025	0					
ANR	1466702	Identifier	MAX_255		1466025	0					
ANR	1466703	ArgumentList	c		1466025	1					
ANR	1466704	Argument	c		1466025	0					
ANR	1466705	Identifier	c		1466025	0					
ANR	1466706	EqualityExpression	( cd -> ctypes [ c ] & ctype_space ) != 0		1466025	1		!=			
ANR	1466707	BitAndExpression	cd -> ctypes [ c ] & ctype_space		1466025	0		&			
ANR	1466708	ArrayIndexing	cd -> ctypes [ c ]		1466025	0					
ANR	1466709	PtrMemberAccess	cd -> ctypes		1466025	0					
ANR	1466710	Identifier	cd		1466025	0					
ANR	1466711	Identifier	ctypes		1466025	1					
ANR	1466712	Identifier	c		1466025	1					
ANR	1466713	Identifier	ctype_space		1466025	1					
ANR	1466714	PrimaryExpression	0		1466025	1					
ANR	1466715	ExpressionStatement	c = * ( ++ ptr )	4666:63:146144:146156	1466025	1	True				
ANR	1466716	AssignmentExpression	c = * ( ++ ptr )		1466025	0		=			
ANR	1466717	Identifier	c		1466025	0					
ANR	1466718	UnaryOperationExpression	* ( ++ ptr )		1466025	1					
ANR	1466719	UnaryOperator	*		1466025	0					
ANR	1466720	UnaryExpression	++ ptr		1466025	1					
ANR	1466721	IncDec	++		1466025	0					
ANR	1466722	Identifier	ptr		1466025	1					
ANR	1466723	IfStatement	if ( c != CHAR_NUMBER_SIGN )		1466025	1					
ANR	1466724	Condition	c != CHAR_NUMBER_SIGN	4667:10:146168:146188	1466025	0	True				
ANR	1466725	EqualityExpression	c != CHAR_NUMBER_SIGN		1466025	0		!=			
ANR	1466726	Identifier	c		1466025	0					
ANR	1466727	Identifier	CHAR_NUMBER_SIGN		1466025	1					
ANR	1466728	BreakStatement	break ;	4667:33:146191:146196	1466025	1	True				
ANR	1466729	ExpressionStatement	ptr ++	4668:6:146204:146209	1466025	2	True				
ANR	1466730	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1466731	Identifier	ptr		1466025	0					
ANR	1466732	IncDec	++		1466025	1					
ANR	1466733	WhileStatement	while ( * ptr != CHAR_NULL )		1466025	3					
ANR	1466734	Condition	* ptr != CHAR_NULL	4669:13:146224:146240	1466025	0	True				
ANR	1466735	EqualityExpression	* ptr != CHAR_NULL		1466025	0		!=			
ANR	1466736	UnaryOperationExpression	* ptr		1466025	0					
ANR	1466737	UnaryOperator	*		1466025	0					
ANR	1466738	Identifier	ptr		1466025	1					
ANR	1466739	Identifier	CHAR_NULL		1466025	1					
ANR	1466740	CompoundStatement		231:8:7006:7006	1466025	1					
ANR	1466741	IfStatement	if ( IS_NEWLINE ( ptr ) )		1466025	0					
ANR	1466742	Condition	IS_NEWLINE ( ptr )	4671:12:146265:146279	1466025	0	True				
ANR	1466743	CallExpression	IS_NEWLINE ( ptr )		1466025	0					
ANR	1466744	Callee	IS_NEWLINE		1466025	0					
ANR	1466745	Identifier	IS_NEWLINE		1466025	0					
ANR	1466746	ArgumentList	ptr		1466025	1					
ANR	1466747	Argument	ptr		1466025	0					
ANR	1466748	Identifier	ptr		1466025	0					
ANR	1466749	CompoundStatement		233:10:7097:7097	1466025	1					
ANR	1466750	ExpressionStatement	ptr += cd -> nllen	4673:10:146412:146428	1466025	0	True				
ANR	1466751	AssignmentExpression	ptr += cd -> nllen		1466025	0		+=			
ANR	1466752	Identifier	ptr		1466025	0					
ANR	1466753	PtrMemberAccess	cd -> nllen		1466025	1					
ANR	1466754	Identifier	cd		1466025	0					
ANR	1466755	Identifier	nllen		1466025	1					
ANR	1466756	BreakStatement	break ;	4674:10:146440:146445	1466025	1	True				
ANR	1466757	ExpressionStatement	ptr ++	4676:8:146467:146472	1466025	1	True				
ANR	1466758	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1466759	Identifier	ptr		1466025	0					
ANR	1466760	IncDec	++		1466025	1					
ANR	1466761	IfStatement	if ( utf )		1466025	2					
ANR	1466762	Condition	utf	4678:12:146505:146507	1466025	0	True				
ANR	1466763	Identifier	utf		1466025	0					
ANR	1466764	ExpressionStatement	FORWARDCHAR ( ptr )	4678:17:146510:146526	1466025	1	True				
ANR	1466765	CallExpression	FORWARDCHAR ( ptr )		1466025	0					
ANR	1466766	Callee	FORWARDCHAR		1466025	0					
ANR	1466767	Identifier	FORWARDCHAR		1466025	0					
ANR	1466768	ArgumentList	ptr		1466025	1					
ANR	1466769	Argument	ptr		1466025	0					
ANR	1466770	Identifier	ptr		1466025	0					
ANR	1466771	ExpressionStatement	c = * ptr	4681:6:146551:146559	1466025	4	True				
ANR	1466772	AssignmentExpression	c = * ptr		1466025	0		=			
ANR	1466773	Identifier	c		1466025	0					
ANR	1466774	UnaryOperationExpression	* ptr		1466025	1					
ANR	1466775	UnaryOperator	*		1466025	0					
ANR	1466776	Identifier	ptr		1466025	1					
ANR	1466777	ExpressionStatement	is_quantifier = c == CHAR_ASTERISK || c == CHAR_PLUS || c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )	4687:2:146676:146825	1466025	25	True				
ANR	1466778	AssignmentExpression	is_quantifier = c == CHAR_ASTERISK || c == CHAR_PLUS || c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )		1466025	0		=			
ANR	1466779	Identifier	is_quantifier		1466025	0					
ANR	1466780	OrExpression	c == CHAR_ASTERISK || c == CHAR_PLUS || c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )		1466025	1		||			
ANR	1466781	EqualityExpression	c == CHAR_ASTERISK		1466025	0		==			
ANR	1466782	Identifier	c		1466025	0					
ANR	1466783	Identifier	CHAR_ASTERISK		1466025	1					
ANR	1466784	OrExpression	c == CHAR_PLUS || c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )		1466025	1		||			
ANR	1466785	EqualityExpression	c == CHAR_PLUS		1466025	0		==			
ANR	1466786	Identifier	c		1466025	0					
ANR	1466787	Identifier	CHAR_PLUS		1466025	1					
ANR	1466788	OrExpression	c == CHAR_QUESTION_MARK || ( c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 ) )		1466025	1		||			
ANR	1466789	EqualityExpression	c == CHAR_QUESTION_MARK		1466025	0		==			
ANR	1466790	Identifier	c		1466025	0					
ANR	1466791	Identifier	CHAR_QUESTION_MARK		1466025	1					
ANR	1466792	AndExpression	c == CHAR_LEFT_CURLY_BRACKET && is_counted_repeat ( ptr + 1 )		1466025	1		&&			
ANR	1466793	EqualityExpression	c == CHAR_LEFT_CURLY_BRACKET		1466025	0		==			
ANR	1466794	Identifier	c		1466025	0					
ANR	1466795	Identifier	CHAR_LEFT_CURLY_BRACKET		1466025	1					
ANR	1466796	CallExpression	is_counted_repeat ( ptr + 1 )		1466025	1					
ANR	1466797	Callee	is_counted_repeat		1466025	0					
ANR	1466798	Identifier	is_counted_repeat		1466025	0					
ANR	1466799	ArgumentList	ptr + 1		1466025	1					
ANR	1466800	Argument	ptr + 1		1466025	0					
ANR	1466801	AdditiveExpression	ptr + 1		1466025	0		+			
ANR	1466802	Identifier	ptr		1466025	0					
ANR	1466803	PrimaryExpression	1		1466025	1					
ANR	1466804	IfStatement	if ( ! is_quantifier && previous_callout != NULL && nestptr == NULL && after_manual_callout -- <= 0 )		1466025	26					
ANR	1466805	Condition	! is_quantifier && previous_callout != NULL && nestptr == NULL && after_manual_callout -- <= 0	4694:6:146989:147087	1466025	0	True				
ANR	1466806	AndExpression	! is_quantifier && previous_callout != NULL && nestptr == NULL && after_manual_callout -- <= 0		1466025	0		&&			
ANR	1466807	UnaryOperationExpression	! is_quantifier		1466025	0					
ANR	1466808	UnaryOperator	!		1466025	0					
ANR	1466809	Identifier	is_quantifier		1466025	1					
ANR	1466810	AndExpression	previous_callout != NULL && nestptr == NULL && after_manual_callout -- <= 0		1466025	1		&&			
ANR	1466811	EqualityExpression	previous_callout != NULL		1466025	0		!=			
ANR	1466812	Identifier	previous_callout		1466025	0					
ANR	1466813	Identifier	NULL		1466025	1					
ANR	1466814	AndExpression	nestptr == NULL && after_manual_callout -- <= 0		1466025	1		&&			
ANR	1466815	EqualityExpression	nestptr == NULL		1466025	0		==			
ANR	1466816	Identifier	nestptr		1466025	0					
ANR	1466817	Identifier	NULL		1466025	1					
ANR	1466818	RelationalExpression	after_manual_callout -- <= 0		1466025	1		<=			
ANR	1466819	PostIncDecOperationExpression	after_manual_callout --		1466025	0					
ANR	1466820	Identifier	after_manual_callout		1466025	0					
ANR	1466821	IncDec	--		1466025	1					
ANR	1466822	PrimaryExpression	0		1466025	1					
ANR	1466823	CompoundStatement		257:4:7849:7849	1466025	1					
ANR	1466824	IfStatement	if ( lengthptr == NULL )		1466025	0					
ANR	1466825	Condition	lengthptr == NULL	4697:8:147104:147120	1466025	0	True				
ANR	1466826	EqualityExpression	lengthptr == NULL		1466025	0		==			
ANR	1466827	Identifier	lengthptr		1466025	0					
ANR	1466828	Identifier	NULL		1466025	1					
ANR	1466829	ExpressionStatement	"complete_callout ( previous_callout , ptr , cd )"	4698:6:147175:147218	1466025	1	True				
ANR	1466830	CallExpression	"complete_callout ( previous_callout , ptr , cd )"		1466025	0					
ANR	1466831	Callee	complete_callout		1466025	0					
ANR	1466832	Identifier	complete_callout		1466025	0					
ANR	1466833	ArgumentList	previous_callout		1466025	1					
ANR	1466834	Argument	previous_callout		1466025	0					
ANR	1466835	Identifier	previous_callout		1466025	0					
ANR	1466836	Argument	ptr		1466025	1					
ANR	1466837	Identifier	ptr		1466025	0					
ANR	1466838	Argument	cd		1466025	2					
ANR	1466839	Identifier	cd		1466025	0					
ANR	1466840	ExpressionStatement	previous_callout = NULL	4699:4:147224:147247	1466025	1	True				
ANR	1466841	AssignmentExpression	previous_callout = NULL		1466025	0		=			
ANR	1466842	Identifier	previous_callout		1466025	0					
ANR	1466843	Identifier	NULL		1466025	1					
ANR	1466844	IfStatement	if ( ( options & PCRE_AUTO_CALLOUT ) != 0 && ! is_quantifier && nestptr == NULL )		1466025	27					
ANR	1466845	Condition	( options & PCRE_AUTO_CALLOUT ) != 0 && ! is_quantifier && nestptr == NULL	4705:6:147400:147470	1466025	0	True				
ANR	1466846	AndExpression	( options & PCRE_AUTO_CALLOUT ) != 0 && ! is_quantifier && nestptr == NULL		1466025	0		&&			
ANR	1466847	EqualityExpression	( options & PCRE_AUTO_CALLOUT ) != 0		1466025	0		!=			
ANR	1466848	BitAndExpression	options & PCRE_AUTO_CALLOUT		1466025	0		&			
ANR	1466849	Identifier	options		1466025	0					
ANR	1466850	Identifier	PCRE_AUTO_CALLOUT		1466025	1					
ANR	1466851	PrimaryExpression	0		1466025	1					
ANR	1466852	AndExpression	! is_quantifier && nestptr == NULL		1466025	1		&&			
ANR	1466853	UnaryOperationExpression	! is_quantifier		1466025	0					
ANR	1466854	UnaryOperator	!		1466025	0					
ANR	1466855	Identifier	is_quantifier		1466025	1					
ANR	1466856	EqualityExpression	nestptr == NULL		1466025	1		==			
ANR	1466857	Identifier	nestptr		1466025	0					
ANR	1466858	Identifier	NULL		1466025	1					
ANR	1466859	CompoundStatement		267:4:8232:8232	1466025	1					
ANR	1466860	ExpressionStatement	previous_callout = code	4707:4:147483:147506	1466025	0	True				
ANR	1466861	AssignmentExpression	previous_callout = code		1466025	0		=			
ANR	1466862	Identifier	previous_callout		1466025	0					
ANR	1466863	Identifier	code		1466025	1					
ANR	1466864	ExpressionStatement	"code = auto_callout ( code , ptr , cd )"	4708:4:147512:147546	1466025	1	True				
ANR	1466865	AssignmentExpression	"code = auto_callout ( code , ptr , cd )"		1466025	0		=			
ANR	1466866	Identifier	code		1466025	0					
ANR	1466867	CallExpression	"auto_callout ( code , ptr , cd )"		1466025	1					
ANR	1466868	Callee	auto_callout		1466025	0					
ANR	1466869	Identifier	auto_callout		1466025	0					
ANR	1466870	ArgumentList	code		1466025	1					
ANR	1466871	Argument	code		1466025	0					
ANR	1466872	Identifier	code		1466025	0					
ANR	1466873	Argument	ptr		1466025	1					
ANR	1466874	Identifier	ptr		1466025	0					
ANR	1466875	Argument	cd		1466025	2					
ANR	1466876	Identifier	cd		1466025	0					
ANR	1466877	SwitchStatement	switch ( c )		1466025	28					
ANR	1466878	Condition	c	4713:9:147604:147604	1466025	0	True				
ANR	1466879	Identifier	c		1466025	0					
ANR	1466880	CompoundStatement		275:4:8366:8366	1466025	1					
ANR	1466881	Label	case CHAR_NULL :	4716:4:147694:147708	1466025	0	True				
ANR	1466882	Identifier	CHAR_NULL		1466025	0					
ANR	1466883	Label	case CHAR_VERTICAL_LINE :	4717:4:147771:147794	1466025	1	True				
ANR	1466884	Identifier	CHAR_VERTICAL_LINE		1466025	0					
ANR	1466885	Label	case CHAR_RIGHT_PARENTHESIS :	4718:4:147822:147849	1466025	2	True				
ANR	1466886	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	0					
ANR	1466887	ExpressionStatement	* firstcharptr = firstchar	4719:4:147855:147880	1466025	3	True				
ANR	1466888	AssignmentExpression	* firstcharptr = firstchar		1466025	0		=			
ANR	1466889	UnaryOperationExpression	* firstcharptr		1466025	0					
ANR	1466890	UnaryOperator	*		1466025	0					
ANR	1466891	Identifier	firstcharptr		1466025	1					
ANR	1466892	Identifier	firstchar		1466025	1					
ANR	1466893	ExpressionStatement	* firstcharflagsptr = firstcharflags	4720:4:147886:147921	1466025	4	True				
ANR	1466894	AssignmentExpression	* firstcharflagsptr = firstcharflags		1466025	0		=			
ANR	1466895	UnaryOperationExpression	* firstcharflagsptr		1466025	0					
ANR	1466896	UnaryOperator	*		1466025	0					
ANR	1466897	Identifier	firstcharflagsptr		1466025	1					
ANR	1466898	Identifier	firstcharflags		1466025	1					
ANR	1466899	ExpressionStatement	* reqcharptr = reqchar	4721:4:147927:147948	1466025	5	True				
ANR	1466900	AssignmentExpression	* reqcharptr = reqchar		1466025	0		=			
ANR	1466901	UnaryOperationExpression	* reqcharptr		1466025	0					
ANR	1466902	UnaryOperator	*		1466025	0					
ANR	1466903	Identifier	reqcharptr		1466025	1					
ANR	1466904	Identifier	reqchar		1466025	1					
ANR	1466905	ExpressionStatement	* reqcharflagsptr = reqcharflags	4722:4:147954:147985	1466025	6	True				
ANR	1466906	AssignmentExpression	* reqcharflagsptr = reqcharflags		1466025	0		=			
ANR	1466907	UnaryOperationExpression	* reqcharflagsptr		1466025	0					
ANR	1466908	UnaryOperator	*		1466025	0					
ANR	1466909	Identifier	reqcharflagsptr		1466025	1					
ANR	1466910	Identifier	reqcharflags		1466025	1					
ANR	1466911	ExpressionStatement	* codeptr = code	4723:4:147991:148006	1466025	7	True				
ANR	1466912	AssignmentExpression	* codeptr = code		1466025	0		=			
ANR	1466913	UnaryOperationExpression	* codeptr		1466025	0					
ANR	1466914	UnaryOperator	*		1466025	0					
ANR	1466915	Identifier	codeptr		1466025	1					
ANR	1466916	Identifier	code		1466025	1					
ANR	1466917	ExpressionStatement	* ptrptr = ptr	4724:4:148012:148025	1466025	8	True				
ANR	1466918	AssignmentExpression	* ptrptr = ptr		1466025	0		=			
ANR	1466919	UnaryOperationExpression	* ptrptr		1466025	0					
ANR	1466920	UnaryOperator	*		1466025	0					
ANR	1466921	Identifier	ptrptr		1466025	1					
ANR	1466922	Identifier	ptr		1466025	1					
ANR	1466923	IfStatement	if ( lengthptr != NULL )		1466025	9					
ANR	1466924	Condition	lengthptr != NULL	4725:8:148035:148051	1466025	0	True				
ANR	1466925	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1466926	Identifier	lengthptr		1466025	0					
ANR	1466927	Identifier	NULL		1466025	1					
ANR	1466928	CompoundStatement		287:6:8815:8815	1466025	1					
ANR	1466929	IfStatement	if ( OFLOW_MAX - * lengthptr < code - last_code )		1466025	0					
ANR	1466930	Condition	OFLOW_MAX - * lengthptr < code - last_code	4727:10:148072:148112	1466025	0	True				
ANR	1466931	RelationalExpression	OFLOW_MAX - * lengthptr < code - last_code		1466025	0		<			
ANR	1466932	AdditiveExpression	OFLOW_MAX - * lengthptr		1466025	0		-			
ANR	1466933	Identifier	OFLOW_MAX		1466025	0					
ANR	1466934	UnaryOperationExpression	* lengthptr		1466025	1					
ANR	1466935	UnaryOperator	*		1466025	0					
ANR	1466936	Identifier	lengthptr		1466025	1					
ANR	1466937	AdditiveExpression	code - last_code		1466025	1		-			
ANR	1466938	Identifier	code		1466025	0					
ANR	1466939	Identifier	last_code		1466025	1					
ANR	1466940	CompoundStatement		289:8:8878:8878	1466025	1					
ANR	1466941	ExpressionStatement	* errorcodeptr = ERR20	4729:8:148133:148154	1466025	0	True				
ANR	1466942	AssignmentExpression	* errorcodeptr = ERR20		1466025	0		=			
ANR	1466943	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1466944	UnaryOperator	*		1466025	0					
ANR	1466945	Identifier	errorcodeptr		1466025	1					
ANR	1466946	Identifier	ERR20		1466025	1					
ANR	1466947	GotoStatement	goto FAILED ;	4730:8:148164:148175	1466025	1	True				
ANR	1466948	Identifier	FAILED		1466025	0					
ANR	1466949	ExpressionStatement	* lengthptr += ( int ) ( code - last_code )	4732:6:148193:148230	1466025	1	True				
ANR	1466950	AssignmentExpression	* lengthptr += ( int ) ( code - last_code )		1466025	0		+=			
ANR	1466951	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1466952	UnaryOperator	*		1466025	0					
ANR	1466953	Identifier	lengthptr		1466025	1					
ANR	1466954	CastExpression	( int ) ( code - last_code )		1466025	1					
ANR	1466955	CastTarget	int		1466025	0					
ANR	1466956	AdditiveExpression	code - last_code		1466025	1		-			
ANR	1466957	Identifier	code		1466025	0					
ANR	1466958	Identifier	last_code		1466025	1					
ANR	1466959	ExpressionStatement	"DPRINTF ( ( "">> end branch\\n"" ) )"	4733:6:148272:148300	1466025	2	True				
ANR	1466960	CallExpression	"DPRINTF ( ( "">> end branch\\n"" ) )"		1466025	0					
ANR	1466961	Callee	DPRINTF		1466025	0					
ANR	1466962	Identifier	DPRINTF		1466025	0					
ANR	1466963	ArgumentList	""">> end branch\\n"""		1466025	1					
ANR	1466964	Argument	""">> end branch\\n"""		1466025	0					
ANR	1466965	PrimaryExpression	""">> end branch\\n"""		1466025	0					
ANR	1466966	ReturnStatement	return TRUE ;	4735:4:148314:148325	1466025	10	True				
ANR	1466967	Identifier	TRUE		1466025	0					
ANR	1466968	Label	case CHAR_CIRCUMFLEX_ACCENT :	4742:4:148551:148578	1466025	11	True				
ANR	1466969	Identifier	CHAR_CIRCUMFLEX_ACCENT		1466025	0					
ANR	1466970	ExpressionStatement	previous = NULL	4743:4:148584:148599	1466025	12	True				
ANR	1466971	AssignmentExpression	previous = NULL		1466025	0		=			
ANR	1466972	Identifier	previous		1466025	0					
ANR	1466973	Identifier	NULL		1466025	1					
ANR	1466974	IfStatement	if ( ( options & PCRE_MULTILINE ) != 0 )		1466025	13					
ANR	1466975	Condition	( options & PCRE_MULTILINE ) != 0	4744:8:148609:148639	1466025	0	True				
ANR	1466976	EqualityExpression	( options & PCRE_MULTILINE ) != 0		1466025	0		!=			
ANR	1466977	BitAndExpression	options & PCRE_MULTILINE		1466025	0		&			
ANR	1466978	Identifier	options		1466025	0					
ANR	1466979	Identifier	PCRE_MULTILINE		1466025	1					
ANR	1466980	PrimaryExpression	0		1466025	1					
ANR	1466981	CompoundStatement		306:6:9403:9403	1466025	1					
ANR	1466982	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	0					
ANR	1466983	Condition	firstcharflags == REQ_UNSET	4746:10:148660:148686	1466025	0	True				
ANR	1466984	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1466985	Identifier	firstcharflags		1466025	0					
ANR	1466986	Identifier	REQ_UNSET		1466025	1					
ANR	1466987	ExpressionStatement	zerofirstcharflags = firstcharflags = REQ_NONE	4747:8:148697:148743	1466025	1	True				
ANR	1466988	AssignmentExpression	zerofirstcharflags = firstcharflags = REQ_NONE		1466025	0		=			
ANR	1466989	Identifier	zerofirstcharflags		1466025	0					
ANR	1466990	AssignmentExpression	firstcharflags = REQ_NONE		1466025	1		=			
ANR	1466991	Identifier	firstcharflags		1466025	0					
ANR	1466992	Identifier	REQ_NONE		1466025	1					
ANR	1466993	ExpressionStatement	* code ++ = OP_CIRCM	4748:6:148751:148769	1466025	1	True				
ANR	1466994	AssignmentExpression	* code ++ = OP_CIRCM		1466025	0		=			
ANR	1466995	UnaryOperationExpression	* code ++		1466025	0					
ANR	1466996	UnaryOperator	*		1466025	0					
ANR	1466997	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1466998	Identifier	code		1466025	0					
ANR	1466999	IncDec	++		1466025	1					
ANR	1467000	Identifier	OP_CIRCM		1466025	1					
ANR	1467001	ElseStatement	else		1466025	0					
ANR	1467002	ExpressionStatement	* code ++ = OP_CIRC	4750:9:148788:148805	1466025	0	True				
ANR	1467003	AssignmentExpression	* code ++ = OP_CIRC		1466025	0		=			
ANR	1467004	UnaryOperationExpression	* code ++		1466025	0					
ANR	1467005	UnaryOperator	*		1466025	0					
ANR	1467006	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1467007	Identifier	code		1466025	0					
ANR	1467008	IncDec	++		1466025	1					
ANR	1467009	Identifier	OP_CIRC		1466025	1					
ANR	1467010	BreakStatement	break ;	4751:4:148811:148816	1466025	14	True				
ANR	1467011	Label	case CHAR_DOLLAR_SIGN :	4753:4:148823:148844	1466025	15	True				
ANR	1467012	Identifier	CHAR_DOLLAR_SIGN		1466025	0					
ANR	1467013	ExpressionStatement	previous = NULL	4754:4:148850:148865	1466025	16	True				
ANR	1467014	AssignmentExpression	previous = NULL		1466025	0		=			
ANR	1467015	Identifier	previous		1466025	0					
ANR	1467016	Identifier	NULL		1466025	1					
ANR	1467017	ExpressionStatement	* code ++ = ( ( options & PCRE_MULTILINE ) != 0 ) ? OP_DOLLM : OP_DOLL	4755:4:148871:148934	1466025	17	True				
ANR	1467018	AssignmentExpression	* code ++ = ( ( options & PCRE_MULTILINE ) != 0 ) ? OP_DOLLM : OP_DOLL		1466025	0		=			
ANR	1467019	UnaryOperationExpression	* code ++		1466025	0					
ANR	1467020	UnaryOperator	*		1466025	0					
ANR	1467021	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1467022	Identifier	code		1466025	0					
ANR	1467023	IncDec	++		1466025	1					
ANR	1467024	ConditionalExpression	( ( options & PCRE_MULTILINE ) != 0 ) ? OP_DOLLM : OP_DOLL		1466025	1					
ANR	1467025	Condition	( options & PCRE_MULTILINE ) != 0		1466025	0					
ANR	1467026	EqualityExpression	( options & PCRE_MULTILINE ) != 0		1466025	0		!=			
ANR	1467027	BitAndExpression	options & PCRE_MULTILINE		1466025	0		&			
ANR	1467028	Identifier	options		1466025	0					
ANR	1467029	Identifier	PCRE_MULTILINE		1466025	1					
ANR	1467030	PrimaryExpression	0		1466025	1					
ANR	1467031	Identifier	OP_DOLLM		1466025	1					
ANR	1467032	Identifier	OP_DOLL		1466025	2					
ANR	1467033	BreakStatement	break ;	4756:4:148940:148945	1466025	18	True				
ANR	1467034	Label	case CHAR_DOT :	4761:4:149092:149105	1466025	19	True				
ANR	1467035	Identifier	CHAR_DOT		1466025	0					
ANR	1467036	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	20					
ANR	1467037	Condition	firstcharflags == REQ_UNSET	4762:8:149115:149141	1466025	0	True				
ANR	1467038	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1467039	Identifier	firstcharflags		1466025	0					
ANR	1467040	Identifier	REQ_UNSET		1466025	1					
ANR	1467041	ExpressionStatement	firstcharflags = REQ_NONE	4762:37:149144:149169	1466025	1	True				
ANR	1467042	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1467043	Identifier	firstcharflags		1466025	0					
ANR	1467044	Identifier	REQ_NONE		1466025	1					
ANR	1467045	ExpressionStatement	zerofirstchar = firstchar	4763:4:149175:149200	1466025	21	True				
ANR	1467046	AssignmentExpression	zerofirstchar = firstchar		1466025	0		=			
ANR	1467047	Identifier	zerofirstchar		1466025	0					
ANR	1467048	Identifier	firstchar		1466025	1					
ANR	1467049	ExpressionStatement	zerofirstcharflags = firstcharflags	4764:4:149206:149241	1466025	22	True				
ANR	1467050	AssignmentExpression	zerofirstcharflags = firstcharflags		1466025	0		=			
ANR	1467051	Identifier	zerofirstcharflags		1466025	0					
ANR	1467052	Identifier	firstcharflags		1466025	1					
ANR	1467053	ExpressionStatement	zeroreqchar = reqchar	4765:4:149247:149268	1466025	23	True				
ANR	1467054	AssignmentExpression	zeroreqchar = reqchar		1466025	0		=			
ANR	1467055	Identifier	zeroreqchar		1466025	0					
ANR	1467056	Identifier	reqchar		1466025	1					
ANR	1467057	ExpressionStatement	zeroreqcharflags = reqcharflags	4766:4:149274:149305	1466025	24	True				
ANR	1467058	AssignmentExpression	zeroreqcharflags = reqcharflags		1466025	0		=			
ANR	1467059	Identifier	zeroreqcharflags		1466025	0					
ANR	1467060	Identifier	reqcharflags		1466025	1					
ANR	1467061	ExpressionStatement	previous = code	4767:4:149311:149326	1466025	25	True				
ANR	1467062	AssignmentExpression	previous = code		1466025	0		=			
ANR	1467063	Identifier	previous		1466025	0					
ANR	1467064	Identifier	code		1466025	1					
ANR	1467065	ExpressionStatement	* code ++ = ( ( options & PCRE_DOTALL ) != 0 ) ? OP_ALLANY : OP_ANY	4768:4:149332:149391	1466025	26	True				
ANR	1467066	AssignmentExpression	* code ++ = ( ( options & PCRE_DOTALL ) != 0 ) ? OP_ALLANY : OP_ANY		1466025	0		=			
ANR	1467067	UnaryOperationExpression	* code ++		1466025	0					
ANR	1467068	UnaryOperator	*		1466025	0					
ANR	1467069	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1467070	Identifier	code		1466025	0					
ANR	1467071	IncDec	++		1466025	1					
ANR	1467072	ConditionalExpression	( ( options & PCRE_DOTALL ) != 0 ) ? OP_ALLANY : OP_ANY		1466025	1					
ANR	1467073	Condition	( options & PCRE_DOTALL ) != 0		1466025	0					
ANR	1467074	EqualityExpression	( options & PCRE_DOTALL ) != 0		1466025	0		!=			
ANR	1467075	BitAndExpression	options & PCRE_DOTALL		1466025	0		&			
ANR	1467076	Identifier	options		1466025	0					
ANR	1467077	Identifier	PCRE_DOTALL		1466025	1					
ANR	1467078	PrimaryExpression	0		1466025	1					
ANR	1467079	Identifier	OP_ALLANY		1466025	1					
ANR	1467080	Identifier	OP_ANY		1466025	2					
ANR	1467081	BreakStatement	break ;	4769:4:149397:149402	1466025	27	True				
ANR	1467082	Label	case CHAR_RIGHT_SQUARE_BRACKET :	4787:4:150307:150337	1466025	28	True				
ANR	1467083	Identifier	CHAR_RIGHT_SQUARE_BRACKET		1466025	0					
ANR	1467084	IfStatement	if ( ( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0 )		1466025	29					
ANR	1467085	Condition	( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0	4788:8:150347:150398	1466025	0	True				
ANR	1467086	EqualityExpression	( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0		1466025	0		!=			
ANR	1467087	BitAndExpression	cd -> external_options & PCRE_JAVASCRIPT_COMPAT		1466025	0		&			
ANR	1467088	PtrMemberAccess	cd -> external_options		1466025	0					
ANR	1467089	Identifier	cd		1466025	0					
ANR	1467090	Identifier	external_options		1466025	1					
ANR	1467091	Identifier	PCRE_JAVASCRIPT_COMPAT		1466025	1					
ANR	1467092	PrimaryExpression	0		1466025	1					
ANR	1467093	CompoundStatement		350:6:11162:11162	1466025	1					
ANR	1467094	ExpressionStatement	* errorcodeptr = ERR64	4790:6:150415:150436	1466025	0	True				
ANR	1467095	AssignmentExpression	* errorcodeptr = ERR64		1466025	0		=			
ANR	1467096	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1467097	UnaryOperator	*		1466025	0					
ANR	1467098	Identifier	errorcodeptr		1466025	1					
ANR	1467099	Identifier	ERR64		1466025	1					
ANR	1467100	GotoStatement	goto FAILED ;	4791:6:150444:150455	1466025	1	True				
ANR	1467101	Identifier	FAILED		1466025	0					
ANR	1467102	GotoStatement	goto NORMAL_CHAR ;	4793:4:150469:150485	1466025	30	True				
ANR	1467103	Identifier	NORMAL_CHAR		1466025	0					
ANR	1467104	Label	case CHAR_LEFT_SQUARE_BRACKET :	4801:4:150861:150890	1466025	31	True				
ANR	1467105	Identifier	CHAR_LEFT_SQUARE_BRACKET		1466025	0					
ANR	1467106	IfStatement	"if ( STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_STARTWORD , 6 ) == 0 )"		1466025	32					
ANR	1467107	Condition	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_STARTWORD , 6 ) == 0"	4802:8:150900:150951	1466025	0	True				
ANR	1467108	EqualityExpression	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_STARTWORD , 6 ) == 0"		1466025	0		==			
ANR	1467109	CallExpression	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_STARTWORD , 6 )"		1466025	0					
ANR	1467110	Callee	STRNCMP_UC_C8		1466025	0					
ANR	1467111	Identifier	STRNCMP_UC_C8		1466025	0					
ANR	1467112	ArgumentList	ptr + 1		1466025	1					
ANR	1467113	Argument	ptr + 1		1466025	0					
ANR	1467114	AdditiveExpression	ptr + 1		1466025	0		+			
ANR	1467115	Identifier	ptr		1466025	0					
ANR	1467116	PrimaryExpression	1		1466025	1					
ANR	1467117	Argument	STRING_WEIRD_STARTWORD		1466025	1					
ANR	1467118	Identifier	STRING_WEIRD_STARTWORD		1466025	0					
ANR	1467119	Argument	6		1466025	2					
ANR	1467120	PrimaryExpression	6		1466025	0					
ANR	1467121	PrimaryExpression	0		1466025	1					
ANR	1467122	CompoundStatement		364:6:11715:11715	1466025	1					
ANR	1467123	ExpressionStatement	nestptr = ptr + 7	4804:6:150968:150985	1466025	0	True				
ANR	1467124	AssignmentExpression	nestptr = ptr + 7		1466025	0		=			
ANR	1467125	Identifier	nestptr		1466025	0					
ANR	1467126	AdditiveExpression	ptr + 7		1466025	1		+			
ANR	1467127	Identifier	ptr		1466025	0					
ANR	1467128	PrimaryExpression	7		1466025	1					
ANR	1467129	ExpressionStatement	ptr = sub_start_of_word - 1	4805:6:150993:151020	1466025	1	True				
ANR	1467130	AssignmentExpression	ptr = sub_start_of_word - 1		1466025	0		=			
ANR	1467131	Identifier	ptr		1466025	0					
ANR	1467132	AdditiveExpression	sub_start_of_word - 1		1466025	1		-			
ANR	1467133	Identifier	sub_start_of_word		1466025	0					
ANR	1467134	PrimaryExpression	1		1466025	1					
ANR	1467135	ContinueStatement	continue ;	4806:6:151028:151036	1466025	2	True				
ANR	1467136	IfStatement	"if ( STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_ENDWORD , 6 ) == 0 )"		1466025	33					
ANR	1467137	Condition	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_ENDWORD , 6 ) == 0"	4809:8:151055:151104	1466025	0	True				
ANR	1467138	EqualityExpression	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_ENDWORD , 6 ) == 0"		1466025	0		==			
ANR	1467139	CallExpression	"STRNCMP_UC_C8 ( ptr + 1 , STRING_WEIRD_ENDWORD , 6 )"		1466025	0					
ANR	1467140	Callee	STRNCMP_UC_C8		1466025	0					
ANR	1467141	Identifier	STRNCMP_UC_C8		1466025	0					
ANR	1467142	ArgumentList	ptr + 1		1466025	1					
ANR	1467143	Argument	ptr + 1		1466025	0					
ANR	1467144	AdditiveExpression	ptr + 1		1466025	0		+			
ANR	1467145	Identifier	ptr		1466025	0					
ANR	1467146	PrimaryExpression	1		1466025	1					
ANR	1467147	Argument	STRING_WEIRD_ENDWORD		1466025	1					
ANR	1467148	Identifier	STRING_WEIRD_ENDWORD		1466025	0					
ANR	1467149	Argument	6		1466025	2					
ANR	1467150	PrimaryExpression	6		1466025	0					
ANR	1467151	PrimaryExpression	0		1466025	1					
ANR	1467152	CompoundStatement		371:6:11868:11868	1466025	1					
ANR	1467153	ExpressionStatement	nestptr = ptr + 7	4811:6:151121:151138	1466025	0	True				
ANR	1467154	AssignmentExpression	nestptr = ptr + 7		1466025	0		=			
ANR	1467155	Identifier	nestptr		1466025	0					
ANR	1467156	AdditiveExpression	ptr + 7		1466025	1		+			
ANR	1467157	Identifier	ptr		1466025	0					
ANR	1467158	PrimaryExpression	7		1466025	1					
ANR	1467159	ExpressionStatement	ptr = sub_end_of_word - 1	4812:6:151146:151171	1466025	1	True				
ANR	1467160	AssignmentExpression	ptr = sub_end_of_word - 1		1466025	0		=			
ANR	1467161	Identifier	ptr		1466025	0					
ANR	1467162	AdditiveExpression	sub_end_of_word - 1		1466025	1		-			
ANR	1467163	Identifier	sub_end_of_word		1466025	0					
ANR	1467164	PrimaryExpression	1		1466025	1					
ANR	1467165	ContinueStatement	continue ;	4813:6:151179:151187	1466025	2	True				
ANR	1467166	ExpressionStatement	previous = code	4818:4:151244:151259	1466025	34	True				
ANR	1467167	AssignmentExpression	previous = code		1466025	0		=			
ANR	1467168	Identifier	previous		1466025	0					
ANR	1467169	Identifier	code		1466025	1					
ANR	1467170	IfStatement	"if ( ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr ) )"		1466025	35					
ANR	1467171	Condition	"( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"	4823:8:151417:151544	1466025	0	True				
ANR	1467172	AndExpression	"( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		1466025	0		&&			
ANR	1467173	OrExpression	ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		1466025	0		||			
ANR	1467174	EqualityExpression	ptr [ 1 ] == CHAR_COLON		1466025	0		==			
ANR	1467175	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467176	Identifier	ptr		1466025	0					
ANR	1467177	PrimaryExpression	1		1466025	1					
ANR	1467178	Identifier	CHAR_COLON		1466025	1					
ANR	1467179	OrExpression	ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		1466025	1		||			
ANR	1467180	EqualityExpression	ptr [ 1 ] == CHAR_DOT		1466025	0		==			
ANR	1467181	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467182	Identifier	ptr		1466025	0					
ANR	1467183	PrimaryExpression	1		1466025	1					
ANR	1467184	Identifier	CHAR_DOT		1466025	1					
ANR	1467185	EqualityExpression	ptr [ 1 ] == CHAR_EQUALS_SIGN		1466025	1		==			
ANR	1467186	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467187	Identifier	ptr		1466025	0					
ANR	1467188	PrimaryExpression	1		1466025	1					
ANR	1467189	Identifier	CHAR_EQUALS_SIGN		1466025	1					
ANR	1467190	CallExpression	"check_posix_syntax ( ptr , & tempptr )"		1466025	1					
ANR	1467191	Callee	check_posix_syntax		1466025	0					
ANR	1467192	Identifier	check_posix_syntax		1466025	0					
ANR	1467193	ArgumentList	ptr		1466025	1					
ANR	1467194	Argument	ptr		1466025	0					
ANR	1467195	Identifier	ptr		1466025	0					
ANR	1467196	Argument	& tempptr		1466025	1					
ANR	1467197	UnaryOperationExpression	& tempptr		1466025	0					
ANR	1467198	UnaryOperator	&		1466025	0					
ANR	1467199	Identifier	tempptr		1466025	1					
ANR	1467200	CompoundStatement		387:6:12308:12308	1466025	1					
ANR	1467201	ExpressionStatement	* errorcodeptr = ( ptr [ 1 ] == CHAR_COLON ) ? ERR13 : ERR31	4827:6:151561:151614	1466025	0	True				
ANR	1467202	AssignmentExpression	* errorcodeptr = ( ptr [ 1 ] == CHAR_COLON ) ? ERR13 : ERR31		1466025	0		=			
ANR	1467203	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1467204	UnaryOperator	*		1466025	0					
ANR	1467205	Identifier	errorcodeptr		1466025	1					
ANR	1467206	ConditionalExpression	( ptr [ 1 ] == CHAR_COLON ) ? ERR13 : ERR31		1466025	1					
ANR	1467207	Condition	ptr [ 1 ] == CHAR_COLON		1466025	0					
ANR	1467208	EqualityExpression	ptr [ 1 ] == CHAR_COLON		1466025	0		==			
ANR	1467209	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467210	Identifier	ptr		1466025	0					
ANR	1467211	PrimaryExpression	1		1466025	1					
ANR	1467212	Identifier	CHAR_COLON		1466025	1					
ANR	1467213	Identifier	ERR13		1466025	1					
ANR	1467214	Identifier	ERR31		1466025	2					
ANR	1467215	GotoStatement	goto FAILED ;	4828:6:151622:151633	1466025	1	True				
ANR	1467216	Identifier	FAILED		1466025	0					
ANR	1467217	ElseStatement	else		1466025	0					
ANR	1467218	IfStatement	if ( ! negate_class && c == CHAR_CIRCUMFLEX_ACCENT )		1466025	0					
ANR	1467219	Condition	! negate_class && c == CHAR_CIRCUMFLEX_ACCENT	4848:15:152169:152212	1466025	0	True				
ANR	1467220	AndExpression	! negate_class && c == CHAR_CIRCUMFLEX_ACCENT		1466025	0		&&			
ANR	1467221	UnaryOperationExpression	! negate_class		1466025	0					
ANR	1467222	UnaryOperator	!		1466025	0					
ANR	1467223	Identifier	negate_class		1466025	1					
ANR	1467224	EqualityExpression	c == CHAR_CIRCUMFLEX_ACCENT		1466025	1		==			
ANR	1467225	Identifier	c		1466025	0					
ANR	1467226	Identifier	CHAR_CIRCUMFLEX_ACCENT		1466025	1					
ANR	1467227	ExpressionStatement	negate_class = TRUE	4849:8:152223:152242	1466025	1	True				
ANR	1467228	AssignmentExpression	negate_class = TRUE		1466025	0		=			
ANR	1467229	Identifier	negate_class		1466025	0					
ANR	1467230	Identifier	TRUE		1466025	1					
ANR	1467231	ElseStatement	else		1466025	0					
ANR	1467232	BreakStatement	break ;	4850:11:152255:152260	1466025	0	True				
ANR	1467233	ExpressionStatement	negate_class = FALSE	4835:4:151867:151887	1466025	36	True				
ANR	1467234	AssignmentExpression	negate_class = FALSE		1466025	0		=			
ANR	1467235	Identifier	negate_class		1466025	0					
ANR	1467236	Identifier	FALSE		1466025	1					
ANR	1467237	ForStatement	for ( ; ; )		1466025	37					
ANR	1467238	CompoundStatement		398:6:12663:12663	1466025	0					
ANR	1467239	ExpressionStatement	c = * ( ++ ptr )	4838:6:151916:151928	1466025	0	True				
ANR	1467240	AssignmentExpression	c = * ( ++ ptr )		1466025	0		=			
ANR	1467241	Identifier	c		1466025	0					
ANR	1467242	UnaryOperationExpression	* ( ++ ptr )		1466025	1					
ANR	1467243	UnaryOperator	*		1466025	0					
ANR	1467244	UnaryExpression	++ ptr		1466025	1					
ANR	1467245	IncDec	++		1466025	0					
ANR	1467246	Identifier	ptr		1466025	1					
ANR	1467247	IfStatement	if ( c == CHAR_BACKSLASH )		1466025	1					
ANR	1467248	Condition	c == CHAR_BACKSLASH	4839:10:151940:151958	1466025	0	True				
ANR	1467249	EqualityExpression	c == CHAR_BACKSLASH		1466025	0		==			
ANR	1467250	Identifier	c		1466025	0					
ANR	1467251	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1467252	CompoundStatement		401:8:12724:12724	1466025	1					
ANR	1467253	IfStatement	if ( ptr [ 1 ] == CHAR_E )		1466025	0					
ANR	1467254	Condition	ptr [ 1 ] == CHAR_E	4841:12:151983:151998	1466025	0	True				
ANR	1467255	EqualityExpression	ptr [ 1 ] == CHAR_E		1466025	0		==			
ANR	1467256	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467257	Identifier	ptr		1466025	0					
ANR	1467258	PrimaryExpression	1		1466025	1					
ANR	1467259	Identifier	CHAR_E		1466025	1					
ANR	1467260	ExpressionStatement	ptr ++	4842:10:152011:152016	1466025	1	True				
ANR	1467261	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1467262	Identifier	ptr		1466025	0					
ANR	1467263	IncDec	++		1466025	1					
ANR	1467264	ElseStatement	else		1466025	0					
ANR	1467265	Statement	if	4843:13:152031:152032	1466025	0	True				
ANR	1467266	Statement	(	4843:16:152034:152034	1466025	1	True				
ANR	1467267	Statement	STRNCMP_UC_C8	4843:17:152035:152047	1466025	2	True				
ANR	1467268	Statement	(	4843:30:152048:152048	1466025	3	True				
ANR	1467269	Statement	ptr	4843:31:152049:152051	1466025	4	True				
ANR	1467270	Statement	+	4843:35:152053:152053	1466025	5	True				
ANR	1467271	Statement	1	4843:37:152055:152055	1466025	6	True				
ANR	1467272	Statement	","	4843:38:152056:152056	1466025	7	True				
ANR	1467273	Statement	STR_Q	4843:40:152058:152062	1466025	8	True				
ANR	1467274	Statement	STR_BACKSLASH	4843:46:152064:152076	1466025	9	True				
ANR	1467275	Statement	STR_E	4843:60:152078:152082	1466025	10	True				
ANR	1467276	Statement	","	4843:65:152083:152083	1466025	11	True				
ANR	1467277	Statement	3	4843:67:152085:152085	1466025	12	True				
ANR	1467278	Statement	)	4843:68:152086:152086	1466025	13	True				
ANR	1467279	Statement	==	4843:70:152088:152089	1466025	14	True				
ANR	1467280	Statement	0	4843:73:152091:152091	1466025	15	True				
ANR	1467281	Statement	)	4843:74:152092:152092	1466025	16	True				
ANR	1467282	ExpressionStatement	ptr += 3	4844:10:152104:152112	1466025	17	True				
ANR	1467283	AssignmentExpression	ptr += 3		1466025	0		+=			
ANR	1467284	Identifier	ptr		1466025	0					
ANR	1467285	PrimaryExpression	3		1466025	1					
ANR	1467286	ElseStatement	else		1466025	0					
ANR	1467287	BreakStatement	break ;	4846:10:152137:152142	1466025	0	True				
ANR	1467288	IfStatement	if ( c == CHAR_RIGHT_SQUARE_BRACKET && ( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0 )		1466025	38					
ANR	1467289	Condition	c == CHAR_RIGHT_SQUARE_BRACKET && ( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0	4858:8:152564:152657	1466025	0	True				
ANR	1467290	AndExpression	c == CHAR_RIGHT_SQUARE_BRACKET && ( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0		1466025	0		&&			
ANR	1467291	EqualityExpression	c == CHAR_RIGHT_SQUARE_BRACKET		1466025	0		==			
ANR	1467292	Identifier	c		1466025	0					
ANR	1467293	Identifier	CHAR_RIGHT_SQUARE_BRACKET		1466025	1					
ANR	1467294	EqualityExpression	( cd -> external_options & PCRE_JAVASCRIPT_COMPAT ) != 0		1466025	1		!=			
ANR	1467295	BitAndExpression	cd -> external_options & PCRE_JAVASCRIPT_COMPAT		1466025	0		&			
ANR	1467296	PtrMemberAccess	cd -> external_options		1466025	0					
ANR	1467297	Identifier	cd		1466025	0					
ANR	1467298	Identifier	external_options		1466025	1					
ANR	1467299	Identifier	PCRE_JAVASCRIPT_COMPAT		1466025	1					
ANR	1467300	PrimaryExpression	0		1466025	1					
ANR	1467301	CompoundStatement		421:6:13421:13421	1466025	1					
ANR	1467302	ExpressionStatement	* code ++ = negate_class ? OP_ALLANY : OP_FAIL	4861:6:152674:152717	1466025	0	True				
ANR	1467303	AssignmentExpression	* code ++ = negate_class ? OP_ALLANY : OP_FAIL		1466025	0		=			
ANR	1467304	UnaryOperationExpression	* code ++		1466025	0					
ANR	1467305	UnaryOperator	*		1466025	0					
ANR	1467306	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1467307	Identifier	code		1466025	0					
ANR	1467308	IncDec	++		1466025	1					
ANR	1467309	ConditionalExpression	negate_class ? OP_ALLANY : OP_FAIL		1466025	1					
ANR	1467310	Condition	negate_class		1466025	0					
ANR	1467311	Identifier	negate_class		1466025	0					
ANR	1467312	Identifier	OP_ALLANY		1466025	1					
ANR	1467313	Identifier	OP_FAIL		1466025	2					
ANR	1467314	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	1					
ANR	1467315	Condition	firstcharflags == REQ_UNSET	4862:10:152729:152755	1466025	0	True				
ANR	1467316	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1467317	Identifier	firstcharflags		1466025	0					
ANR	1467318	Identifier	REQ_UNSET		1466025	1					
ANR	1467319	ExpressionStatement	firstcharflags = REQ_NONE	4862:39:152758:152783	1466025	1	True				
ANR	1467320	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1467321	Identifier	firstcharflags		1466025	0					
ANR	1467322	Identifier	REQ_NONE		1466025	1					
ANR	1467323	ExpressionStatement	zerofirstchar = firstchar	4863:6:152791:152816	1466025	2	True				
ANR	1467324	AssignmentExpression	zerofirstchar = firstchar		1466025	0		=			
ANR	1467325	Identifier	zerofirstchar		1466025	0					
ANR	1467326	Identifier	firstchar		1466025	1					
ANR	1467327	ExpressionStatement	zerofirstcharflags = firstcharflags	4864:6:152824:152859	1466025	3	True				
ANR	1467328	AssignmentExpression	zerofirstcharflags = firstcharflags		1466025	0		=			
ANR	1467329	Identifier	zerofirstcharflags		1466025	0					
ANR	1467330	Identifier	firstcharflags		1466025	1					
ANR	1467331	BreakStatement	break ;	4865:6:152867:152872	1466025	4	True				
ANR	1467332	ExpressionStatement	should_flip_negation = FALSE	4872:4:153094:153122	1466025	39	True				
ANR	1467333	AssignmentExpression	should_flip_negation = FALSE		1466025	0		=			
ANR	1467334	Identifier	should_flip_negation		1466025	0					
ANR	1467335	Identifier	FALSE		1466025	1					
ANR	1467336	ExpressionStatement	xclass = FALSE	4878:4:153266:153280	1466025	40	True				
ANR	1467337	AssignmentExpression	xclass = FALSE		1466025	0		=			
ANR	1467338	Identifier	xclass		1466025	0					
ANR	1467339	Identifier	FALSE		1466025	1					
ANR	1467340	ExpressionStatement	class_uchardata = code + LINK_SIZE + 2	4879:4:153286:153324	1466025	41	True				
ANR	1467341	AssignmentExpression	class_uchardata = code + LINK_SIZE + 2		1466025	0		=			
ANR	1467342	Identifier	class_uchardata		1466025	0					
ANR	1467343	AdditiveExpression	code + LINK_SIZE + 2		1466025	1		+			
ANR	1467344	Identifier	code		1466025	0					
ANR	1467345	AdditiveExpression	LINK_SIZE + 2		1466025	1		+			
ANR	1467346	Identifier	LINK_SIZE		1466025	0					
ANR	1467347	PrimaryExpression	2		1466025	1					
ANR	1467348	ExpressionStatement	class_uchardata_base = class_uchardata	4880:4:153355:153393	1466025	42	True				
ANR	1467349	AssignmentExpression	class_uchardata_base = class_uchardata		1466025	0		=			
ANR	1467350	Identifier	class_uchardata_base		1466025	0					
ANR	1467351	Identifier	class_uchardata		1466025	1					
ANR	1467352	ExpressionStatement	class_has_8bitchar = 0	4889:4:153760:153782	1466025	43	True				
ANR	1467353	AssignmentExpression	class_has_8bitchar = 0		1466025	0		=			
ANR	1467354	Identifier	class_has_8bitchar		1466025	0					
ANR	1467355	PrimaryExpression	0		1466025	1					
ANR	1467356	ExpressionStatement	class_one_char = 0	4890:4:153788:153806	1466025	44	True				
ANR	1467357	AssignmentExpression	class_one_char = 0		1466025	0		=			
ANR	1467358	Identifier	class_one_char		1466025	0					
ANR	1467359	PrimaryExpression	0		1466025	1					
ANR	1467360	ExpressionStatement	xclass_has_prop = FALSE	4892:4:153862:153885	1466025	45	True				
ANR	1467361	AssignmentExpression	xclass_has_prop = FALSE		1466025	0		=			
ANR	1467362	Identifier	xclass_has_prop		1466025	0					
ANR	1467363	Identifier	FALSE		1466025	1					
ANR	1467364	ExpressionStatement	"memset ( classbits , 0 , 32 * sizeof ( pcre_uint8 ) )"	4900:4:154137:154182	1466025	46	True				
ANR	1467365	CallExpression	"memset ( classbits , 0 , 32 * sizeof ( pcre_uint8 ) )"		1466025	0					
ANR	1467366	Callee	memset		1466025	0					
ANR	1467367	Identifier	memset		1466025	0					
ANR	1467368	ArgumentList	classbits		1466025	1					
ANR	1467369	Argument	classbits		1466025	0					
ANR	1467370	Identifier	classbits		1466025	0					
ANR	1467371	Argument	0		1466025	1					
ANR	1467372	PrimaryExpression	0		1466025	0					
ANR	1467373	Argument	32 * sizeof ( pcre_uint8 )		1466025	2					
ANR	1467374	MultiplicativeExpression	32 * sizeof ( pcre_uint8 )		1466025	0		*			
ANR	1467375	PrimaryExpression	32		1466025	0					
ANR	1467376	SizeofExpression	sizeof ( pcre_uint8 )		1466025	1					
ANR	1467377	Sizeof	sizeof		1466025	0					
ANR	1467378	SizeofOperand	pcre_uint8		1466025	1					
ANR	1467379	IfStatement	if ( c != CHAR_NULL )		1466025	47					
ANR	1467380	Condition	c != CHAR_NULL	4906:8:154404:154417	1466025	0	True				
ANR	1467381	EqualityExpression	c != CHAR_NULL		1466025	0		!=			
ANR	1467382	Identifier	c		1466025	0					
ANR	1467383	Identifier	CHAR_NULL		1466025	1					
ANR	1467384	DoStatement	do		1466025	1					
ANR	1467385	CompoundStatement		469:6:15192:15216	1466025	0					
ANR	1467386	IdentifierDeclStatement	const pcre_uchar * oldptr ;	4908:6:154437:154461	1466025	0	True				
ANR	1467387	IdentifierDecl	* oldptr		1466025	0					
ANR	1467388	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1467389	Identifier	oldptr		1466025	1					
ANR	1467390	IfStatement	if ( utf && HAS_EXTRALEN ( c ) )		1466025	1					
ANR	1467391	Condition	utf && HAS_EXTRALEN ( c )	4911:10:154493:154514	1466025	0	True				
ANR	1467392	AndExpression	utf && HAS_EXTRALEN ( c )		1466025	0		&&			
ANR	1467393	Identifier	utf		1466025	0					
ANR	1467394	CallExpression	HAS_EXTRALEN ( c )		1466025	1					
ANR	1467395	Callee	HAS_EXTRALEN		1466025	0					
ANR	1467396	Identifier	HAS_EXTRALEN		1466025	0					
ANR	1467397	ArgumentList	c		1466025	1					
ANR	1467398	Argument	c		1466025	0					
ANR	1467399	Identifier	c		1466025	0					
ANR	1467400	CompoundStatement		473:8:15280:15280	1466025	1					
ANR	1467401	ExpressionStatement	"GETCHARLEN ( c , ptr , ptr )"	4913:8:154599:154622	1466025	0	True				
ANR	1467402	CallExpression	"GETCHARLEN ( c , ptr , ptr )"		1466025	0					
ANR	1467403	Callee	GETCHARLEN		1466025	0					
ANR	1467404	Identifier	GETCHARLEN		1466025	0					
ANR	1467405	ArgumentList	c		1466025	1					
ANR	1467406	Argument	c		1466025	0					
ANR	1467407	Identifier	c		1466025	0					
ANR	1467408	Argument	ptr		1466025	1					
ANR	1467409	Identifier	ptr		1466025	0					
ANR	1467410	Argument	ptr		1466025	2					
ANR	1467411	Identifier	ptr		1466025	0					
ANR	1467412	IfStatement	if ( lengthptr != NULL && class_uchardata > class_uchardata_base )		1466025	2					
ANR	1467413	Condition	lengthptr != NULL && class_uchardata > class_uchardata_base	4924:10:155065:155123	1466025	0	True				
ANR	1467414	AndExpression	lengthptr != NULL && class_uchardata > class_uchardata_base		1466025	0		&&			
ANR	1467415	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1467416	Identifier	lengthptr		1466025	0					
ANR	1467417	Identifier	NULL		1466025	1					
ANR	1467418	RelationalExpression	class_uchardata > class_uchardata_base		1466025	1		>			
ANR	1467419	Identifier	class_uchardata		1466025	0					
ANR	1467420	Identifier	class_uchardata_base		1466025	1					
ANR	1467421	CompoundStatement		486:8:15889:15889	1466025	1					
ANR	1467422	ExpressionStatement	xclass = TRUE	4926:8:155144:155157	1466025	0	True				
ANR	1467423	AssignmentExpression	xclass = TRUE		1466025	0		=			
ANR	1467424	Identifier	xclass		1466025	0					
ANR	1467425	Identifier	TRUE		1466025	1					
ANR	1467426	ExpressionStatement	* lengthptr += ( int ) ( class_uchardata - class_uchardata_base )	4927:8:155167:155226	1466025	1	True				
ANR	1467427	AssignmentExpression	* lengthptr += ( int ) ( class_uchardata - class_uchardata_base )		1466025	0		+=			
ANR	1467428	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1467429	UnaryOperator	*		1466025	0					
ANR	1467430	Identifier	lengthptr		1466025	1					
ANR	1467431	CastExpression	( int ) ( class_uchardata - class_uchardata_base )		1466025	1					
ANR	1467432	CastTarget	int		1466025	0					
ANR	1467433	AdditiveExpression	class_uchardata - class_uchardata_base		1466025	1		-			
ANR	1467434	Identifier	class_uchardata		1466025	0					
ANR	1467435	Identifier	class_uchardata_base		1466025	1					
ANR	1467436	ExpressionStatement	class_uchardata = class_uchardata_base	4928:8:155236:155274	1466025	2	True				
ANR	1467437	AssignmentExpression	class_uchardata = class_uchardata_base		1466025	0		=			
ANR	1467438	Identifier	class_uchardata		1466025	0					
ANR	1467439	Identifier	class_uchardata_base		1466025	1					
ANR	1467440	IfStatement	if ( inescq )		1466025	3					
ANR	1467441	Condition	inescq	4934:10:155364:155369	1466025	0	True				
ANR	1467442	Identifier	inescq		1466025	0					
ANR	1467443	CompoundStatement		496:8:16135:16135	1466025	1					
ANR	1467444	IfStatement	if ( c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E )		1466025	0					
ANR	1467445	Condition	c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E	4936:12:155394:155432	1466025	0	True				
ANR	1467446	AndExpression	c == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E		1466025	0		&&			
ANR	1467447	EqualityExpression	c == CHAR_BACKSLASH		1466025	0		==			
ANR	1467448	Identifier	c		1466025	0					
ANR	1467449	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1467450	EqualityExpression	ptr [ 1 ] == CHAR_E		1466025	1		==			
ANR	1467451	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467452	Identifier	ptr		1466025	0					
ANR	1467453	PrimaryExpression	1		1466025	1					
ANR	1467454	Identifier	CHAR_E		1466025	1					
ANR	1467455	CompoundStatement		498:10:16223:16223	1466025	1					
ANR	1467456	ExpressionStatement	inescq = FALSE	4938:10:155480:155494	1466025	0	True				
ANR	1467457	AssignmentExpression	inescq = FALSE		1466025	0		=			
ANR	1467458	Identifier	inescq		1466025	0					
ANR	1467459	Identifier	FALSE		1466025	1					
ANR	1467460	ExpressionStatement	ptr ++	4939:10:155550:155555	1466025	1	True				
ANR	1467461	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1467462	Identifier	ptr		1466025	0					
ANR	1467463	IncDec	++		1466025	1					
ANR	1467464	ContinueStatement	continue ;	4940:10:155613:155621	1466025	2	True				
ANR	1467465	GotoStatement	goto CHECK_RANGE ;	4942:8:155692:155708	1466025	1	True				
ANR	1467466	Identifier	CHECK_RANGE		1466025	0					
ANR	1467467	IfStatement	"if ( c == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr ) )"		1466025	4					
ANR	1467468	Condition	"c == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"	4951:10:156098:156262	1466025	0	True				
ANR	1467469	AndExpression	"c == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		1466025	0		&&			
ANR	1467470	EqualityExpression	c == CHAR_LEFT_SQUARE_BRACKET		1466025	0		==			
ANR	1467471	Identifier	c		1466025	0					
ANR	1467472	Identifier	CHAR_LEFT_SQUARE_BRACKET		1466025	1					
ANR	1467473	AndExpression	"( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		1466025	1		&&			
ANR	1467474	OrExpression	ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		1466025	0		||			
ANR	1467475	EqualityExpression	ptr [ 1 ] == CHAR_COLON		1466025	0		==			
ANR	1467476	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467477	Identifier	ptr		1466025	0					
ANR	1467478	PrimaryExpression	1		1466025	1					
ANR	1467479	Identifier	CHAR_COLON		1466025	1					
ANR	1467480	OrExpression	ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		1466025	1		||			
ANR	1467481	EqualityExpression	ptr [ 1 ] == CHAR_DOT		1466025	0		==			
ANR	1467482	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467483	Identifier	ptr		1466025	0					
ANR	1467484	PrimaryExpression	1		1466025	1					
ANR	1467485	Identifier	CHAR_DOT		1466025	1					
ANR	1467486	EqualityExpression	ptr [ 1 ] == CHAR_EQUALS_SIGN		1466025	1		==			
ANR	1467487	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467488	Identifier	ptr		1466025	0					
ANR	1467489	PrimaryExpression	1		1466025	1					
ANR	1467490	Identifier	CHAR_EQUALS_SIGN		1466025	1					
ANR	1467491	CallExpression	"check_posix_syntax ( ptr , & tempptr )"		1466025	1					
ANR	1467492	Callee	check_posix_syntax		1466025	0					
ANR	1467493	Identifier	check_posix_syntax		1466025	0					
ANR	1467494	ArgumentList	ptr		1466025	1					
ANR	1467495	Argument	ptr		1466025	0					
ANR	1467496	Identifier	ptr		1466025	0					
ANR	1467497	Argument	& tempptr		1466025	1					
ANR	1467498	UnaryOperationExpression	& tempptr		1466025	0					
ANR	1467499	UnaryOperator	&		1466025	0					
ANR	1467500	Identifier	tempptr		1466025	1					
ANR	1467501	CompoundStatement		519:8:17171:17191	1466025	1					
ANR	1467502	IdentifierDeclStatement	BOOL local_negate = FALSE ;	4955:8:156283:156308	1466025	0	True				
ANR	1467503	IdentifierDecl	local_negate = FALSE		1466025	0					
ANR	1467504	IdentifierDeclType	BOOL		1466025	0					
ANR	1467505	Identifier	local_negate		1466025	1					
ANR	1467506	AssignmentExpression	local_negate = FALSE		1466025	2		=			
ANR	1467507	Identifier	FALSE		1466025	0					
ANR	1467508	Identifier	FALSE		1466025	1					
ANR	1467509	IdentifierDeclStatement	"int posix_class , taboffset , tabopt ;"	4956:8:156318:156352	1466025	1	True				
ANR	1467510	IdentifierDecl	posix_class		1466025	0					
ANR	1467511	IdentifierDeclType	int		1466025	0					
ANR	1467512	Identifier	posix_class		1466025	1					
ANR	1467513	IdentifierDecl	taboffset		1466025	1					
ANR	1467514	IdentifierDeclType	int		1466025	0					
ANR	1467515	Identifier	taboffset		1466025	1					
ANR	1467516	IdentifierDecl	tabopt		1466025	2					
ANR	1467517	IdentifierDeclType	int		1466025	0					
ANR	1467518	Identifier	tabopt		1466025	1					
ANR	1467519	Statement	register	4957:8:156362:156369	1466025	2	True				
ANR	1467520	IdentifierDeclStatement	const pcre_uint8 * cbits = cd -> cbits ;	4957:17:156371:156406	1466025	3	True				
ANR	1467521	IdentifierDecl	* cbits = cd -> cbits		1466025	0					
ANR	1467522	IdentifierDeclType	const pcre_uint8 *		1466025	0					
ANR	1467523	Identifier	cbits		1466025	1					
ANR	1467524	AssignmentExpression	* cbits = cd -> cbits		1466025	2		=			
ANR	1467525	Identifier	cbits		1466025	0					
ANR	1467526	PtrMemberAccess	cd -> cbits		1466025	1					
ANR	1467527	Identifier	cd		1466025	0					
ANR	1467528	Identifier	cbits		1466025	1					
ANR	1467529	IdentifierDeclStatement	pcre_uint8 pbits [ 32 ] ;	4958:8:156416:156436	1466025	4	True				
ANR	1467530	IdentifierDecl	pbits [ 32 ]		1466025	0					
ANR	1467531	IdentifierDeclType	pcre_uint8 [ 32 ]		1466025	0					
ANR	1467532	Identifier	pbits		1466025	1					
ANR	1467533	PrimaryExpression	32		1466025	2					
ANR	1467534	IfStatement	if ( ptr [ 1 ] != CHAR_COLON )		1466025	5					
ANR	1467535	Condition	ptr [ 1 ] != CHAR_COLON	4960:12:156451:156470	1466025	0	True				
ANR	1467536	EqualityExpression	ptr [ 1 ] != CHAR_COLON		1466025	0		!=			
ANR	1467537	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1467538	Identifier	ptr		1466025	0					
ANR	1467539	PrimaryExpression	1		1466025	1					
ANR	1467540	Identifier	CHAR_COLON		1466025	1					
ANR	1467541	CompoundStatement		522:10:17238:17238	1466025	1					
ANR	1467542	ExpressionStatement	* errorcodeptr = ERR31	4962:10:156495:156516	1466025	0	True				
ANR	1467543	AssignmentExpression	* errorcodeptr = ERR31		1466025	0		=			
ANR	1467544	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1467545	UnaryOperator	*		1466025	0					
ANR	1467546	Identifier	errorcodeptr		1466025	1					
ANR	1467547	Identifier	ERR31		1466025	1					
ANR	1467548	GotoStatement	goto FAILED ;	4963:10:156528:156539	1466025	1	True				
ANR	1467549	Identifier	FAILED		1466025	0					
ANR	1467550	ExpressionStatement	ptr += 2	4966:8:156562:156570	1466025	6	True				
ANR	1467551	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1467552	Identifier	ptr		1466025	0					
ANR	1467553	PrimaryExpression	2		1466025	1					
ANR	1467554	IfStatement	if ( * ptr == CHAR_CIRCUMFLEX_ACCENT )		1466025	7					
ANR	1467555	Condition	* ptr == CHAR_CIRCUMFLEX_ACCENT	4967:12:156584:156613	1466025	0	True				
ANR	1467556	EqualityExpression	* ptr == CHAR_CIRCUMFLEX_ACCENT		1466025	0		==			
ANR	1467557	UnaryOperationExpression	* ptr		1466025	0					
ANR	1467558	UnaryOperator	*		1466025	0					
ANR	1467559	Identifier	ptr		1466025	1					
ANR	1467560	Identifier	CHAR_CIRCUMFLEX_ACCENT		1466025	1					
ANR	1467561	CompoundStatement		529:10:17381:17381	1466025	1					
ANR	1467562	ExpressionStatement	local_negate = TRUE	4969:10:156638:156657	1466025	0	True				
ANR	1467563	AssignmentExpression	local_negate = TRUE		1466025	0		=			
ANR	1467564	Identifier	local_negate		1466025	0					
ANR	1467565	Identifier	TRUE		1466025	1					
ANR	1467566	ExpressionStatement	should_flip_negation = TRUE	4970:10:156669:156696	1466025	1	True				
ANR	1467567	AssignmentExpression	should_flip_negation = TRUE		1466025	0		=			
ANR	1467568	Identifier	should_flip_negation		1466025	0					
ANR	1467569	Identifier	TRUE		1466025	1					
ANR	1467570	ExpressionStatement	ptr ++	4971:10:156737:156742	1466025	2	True				
ANR	1467571	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1467572	Identifier	ptr		1466025	0					
ANR	1467573	IncDec	++		1466025	1					
ANR	1467574	ExpressionStatement	"posix_class = check_posix_name ( ptr , ( int ) ( tempptr - ptr ) )"	4974:8:156765:156822	1466025	8	True				
ANR	1467575	AssignmentExpression	"posix_class = check_posix_name ( ptr , ( int ) ( tempptr - ptr ) )"		1466025	0		=			
ANR	1467576	Identifier	posix_class		1466025	0					
ANR	1467577	CallExpression	"check_posix_name ( ptr , ( int ) ( tempptr - ptr ) )"		1466025	1					
ANR	1467578	Callee	check_posix_name		1466025	0					
ANR	1467579	Identifier	check_posix_name		1466025	0					
ANR	1467580	ArgumentList	ptr		1466025	1					
ANR	1467581	Argument	ptr		1466025	0					
ANR	1467582	Identifier	ptr		1466025	0					
ANR	1467583	Argument	( int ) ( tempptr - ptr )		1466025	1					
ANR	1467584	CastExpression	( int ) ( tempptr - ptr )		1466025	0					
ANR	1467585	CastTarget	int		1466025	0					
ANR	1467586	AdditiveExpression	tempptr - ptr		1466025	1		-			
ANR	1467587	Identifier	tempptr		1466025	0					
ANR	1467588	Identifier	ptr		1466025	1					
ANR	1467589	IfStatement	if ( posix_class < 0 )		1466025	9					
ANR	1467590	Condition	posix_class < 0	4975:12:156836:156850	1466025	0	True				
ANR	1467591	RelationalExpression	posix_class < 0		1466025	0		<			
ANR	1467592	Identifier	posix_class		1466025	0					
ANR	1467593	PrimaryExpression	0		1466025	1					
ANR	1467594	CompoundStatement		537:10:17618:17618	1466025	1					
ANR	1467595	ExpressionStatement	* errorcodeptr = ERR30	4977:10:156875:156896	1466025	0	True				
ANR	1467596	AssignmentExpression	* errorcodeptr = ERR30		1466025	0		=			
ANR	1467597	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1467598	UnaryOperator	*		1466025	0					
ANR	1467599	Identifier	errorcodeptr		1466025	1					
ANR	1467600	Identifier	ERR30		1466025	1					
ANR	1467601	GotoStatement	goto FAILED ;	4978:10:156908:156919	1466025	1	True				
ANR	1467602	Identifier	FAILED		1466025	0					
ANR	1467603	IfStatement	if ( ( options & PCRE_CASELESS ) != 0 && posix_class <= 2 )		1466025	10					
ANR	1467604	Condition	( options & PCRE_CASELESS ) != 0 && posix_class <= 2	4985:12:157143:157192	1466025	0	True				
ANR	1467605	AndExpression	( options & PCRE_CASELESS ) != 0 && posix_class <= 2		1466025	0		&&			
ANR	1467606	EqualityExpression	( options & PCRE_CASELESS ) != 0		1466025	0		!=			
ANR	1467607	BitAndExpression	options & PCRE_CASELESS		1466025	0		&			
ANR	1467608	Identifier	options		1466025	0					
ANR	1467609	Identifier	PCRE_CASELESS		1466025	1					
ANR	1467610	PrimaryExpression	0		1466025	1					
ANR	1467611	RelationalExpression	posix_class <= 2		1466025	1		<=			
ANR	1467612	Identifier	posix_class		1466025	0					
ANR	1467613	PrimaryExpression	2		1466025	1					
ANR	1467614	ExpressionStatement	posix_class = 0	4986:10:157205:157220	1466025	1	True				
ANR	1467615	AssignmentExpression	posix_class = 0		1466025	0		=			
ANR	1467616	Identifier	posix_class		1466025	0					
ANR	1467617	PrimaryExpression	0		1466025	1					
ANR	1467618	IfStatement	if ( ( options & PCRE_UCP ) != 0 )		1466025	11					
ANR	1467619	Condition	( options & PCRE_UCP ) != 0	4994:12:157506:157530	1466025	0	True				
ANR	1467620	EqualityExpression	( options & PCRE_UCP ) != 0		1466025	0		!=			
ANR	1467621	BitAndExpression	options & PCRE_UCP		1466025	0		&			
ANR	1467622	Identifier	options		1466025	0					
ANR	1467623	Identifier	PCRE_UCP		1466025	1					
ANR	1467624	PrimaryExpression	0		1466025	1					
ANR	1467625	CompoundStatement		558:10:18344:18404	1466025	1					
ANR	1467626	IdentifierDeclStatement	unsigned int ptype = 0 ;	4996:10:157555:157577	1466025	0	True				
ANR	1467627	IdentifierDecl	ptype = 0		1466025	0					
ANR	1467628	IdentifierDeclType	unsigned int		1466025	0					
ANR	1467629	Identifier	ptype		1466025	1					
ANR	1467630	AssignmentExpression	ptype = 0		1466025	2		=			
ANR	1467631	Identifier	ptype		1466025	0					
ANR	1467632	PrimaryExpression	0		1466025	1					
ANR	1467633	IdentifierDeclStatement	int pc = posix_class + ( ( local_negate ) ? POSIX_SUBSIZE / 2 : 0 ) ;	4997:10:157589:157649	1466025	1	True				
ANR	1467634	IdentifierDecl	pc = posix_class + ( ( local_negate ) ? POSIX_SUBSIZE / 2 : 0 )		1466025	0					
ANR	1467635	IdentifierDeclType	int		1466025	0					
ANR	1467636	Identifier	pc		1466025	1					
ANR	1467637	AssignmentExpression	pc = posix_class + ( ( local_negate ) ? POSIX_SUBSIZE / 2 : 0 )		1466025	2		=			
ANR	1467638	Identifier	pc		1466025	0					
ANR	1467639	AdditiveExpression	posix_class + ( ( local_negate ) ? POSIX_SUBSIZE / 2 : 0 )		1466025	1		+			
ANR	1467640	Identifier	posix_class		1466025	0					
ANR	1467641	ConditionalExpression	( local_negate ) ? POSIX_SUBSIZE / 2 : 0		1466025	1					
ANR	1467642	Condition	local_negate		1466025	0					
ANR	1467643	Identifier	local_negate		1466025	0					
ANR	1467644	MultiplicativeExpression	POSIX_SUBSIZE / 2		1466025	1		/			
ANR	1467645	Identifier	POSIX_SUBSIZE		1466025	0					
ANR	1467646	PrimaryExpression	2		1466025	1					
ANR	1467647	PrimaryExpression	0		1466025	2					
ANR	1467648	IfStatement	if ( posix_substitutes [ pc ] != NULL )		1466025	2					
ANR	1467649	Condition	posix_substitutes [ pc ] != NULL	5002:14:157787:157815	1466025	0	True				
ANR	1467650	EqualityExpression	posix_substitutes [ pc ] != NULL		1466025	0		!=			
ANR	1467651	ArrayIndexing	posix_substitutes [ pc ]		1466025	0					
ANR	1467652	Identifier	posix_substitutes		1466025	0					
ANR	1467653	Identifier	pc		1466025	1					
ANR	1467654	Identifier	NULL		1466025	1					
ANR	1467655	CompoundStatement		564:12:18585:18585	1466025	1					
ANR	1467656	ExpressionStatement	nestptr = tempptr + 1	5004:12:157844:157865	1466025	0	True				
ANR	1467657	AssignmentExpression	nestptr = tempptr + 1		1466025	0		=			
ANR	1467658	Identifier	nestptr		1466025	0					
ANR	1467659	AdditiveExpression	tempptr + 1		1466025	1		+			
ANR	1467660	Identifier	tempptr		1466025	0					
ANR	1467661	PrimaryExpression	1		1466025	1					
ANR	1467662	ExpressionStatement	ptr = posix_substitutes [ pc ] - 1	5005:12:157879:157910	1466025	1	True				
ANR	1467663	AssignmentExpression	ptr = posix_substitutes [ pc ] - 1		1466025	0		=			
ANR	1467664	Identifier	ptr		1466025	0					
ANR	1467665	AdditiveExpression	posix_substitutes [ pc ] - 1		1466025	1		-			
ANR	1467666	ArrayIndexing	posix_substitutes [ pc ]		1466025	0					
ANR	1467667	Identifier	posix_substitutes		1466025	0					
ANR	1467668	Identifier	pc		1466025	1					
ANR	1467669	PrimaryExpression	1		1466025	1					
ANR	1467670	ContinueStatement	continue ;	5006:12:157924:157932	1466025	2	True				
ANR	1467671	ElseStatement	else		1466025	0					
ANR	1467672	SwitchStatement	switch ( posix_class )		1466025	0					
ANR	1467673	Condition	posix_class	5012:22:158104:158114	1466025	0	True				
ANR	1467674	Identifier	posix_class		1466025	0					
ANR	1467675	CompoundStatement		574:12:18884:18884	1466025	1					
ANR	1467676	Label	case PC_GRAPH :	5014:12:158143:158156	1466025	0	True				
ANR	1467677	Identifier	PC_GRAPH		1466025	0					
ANR	1467678	ExpressionStatement	ptype = PT_PXGRAPH	5015:12:158170:158188	1466025	1	True				
ANR	1467679	AssignmentExpression	ptype = PT_PXGRAPH		1466025	0		=			
ANR	1467680	Identifier	ptype		1466025	0					
ANR	1467681	Identifier	PT_PXGRAPH		1466025	1					
ANR	1467682	Label	case PC_PRINT :	5017:12:158233:158246	1466025	2	True				
ANR	1467683	Identifier	PC_PRINT		1466025	0					
ANR	1467684	IfStatement	if ( ptype == 0 )		1466025	3					
ANR	1467685	Condition	ptype == 0	5018:16:158264:158273	1466025	0	True				
ANR	1467686	EqualityExpression	ptype == 0		1466025	0		==			
ANR	1467687	Identifier	ptype		1466025	0					
ANR	1467688	PrimaryExpression	0		1466025	1					
ANR	1467689	ExpressionStatement	ptype = PT_PXPRINT	5018:28:158276:158294	1466025	1	True				
ANR	1467690	AssignmentExpression	ptype = PT_PXPRINT		1466025	0		=			
ANR	1467691	Identifier	ptype		1466025	0					
ANR	1467692	Identifier	PT_PXPRINT		1466025	1					
ANR	1467693	Label	case PC_PUNCT :	5020:12:158339:158352	1466025	4	True				
ANR	1467694	Identifier	PC_PUNCT		1466025	0					
ANR	1467695	IfStatement	if ( ptype == 0 )		1466025	5					
ANR	1467696	Condition	ptype == 0	5021:16:158370:158379	1466025	0	True				
ANR	1467697	EqualityExpression	ptype == 0		1466025	0		==			
ANR	1467698	Identifier	ptype		1466025	0					
ANR	1467699	PrimaryExpression	0		1466025	1					
ANR	1467700	ExpressionStatement	ptype = PT_PXPUNCT	5021:28:158382:158400	1466025	1	True				
ANR	1467701	AssignmentExpression	ptype = PT_PXPUNCT		1466025	0		=			
ANR	1467702	Identifier	ptype		1466025	0					
ANR	1467703	Identifier	PT_PXPUNCT		1466025	1					
ANR	1467704	ExpressionStatement	* class_uchardata ++ = local_negate ? XCL_NOTPROP : XCL_PROP	5022:12:158414:158471	1466025	6	True				
ANR	1467705	AssignmentExpression	* class_uchardata ++ = local_negate ? XCL_NOTPROP : XCL_PROP		1466025	0		=			
ANR	1467706	UnaryOperationExpression	* class_uchardata ++		1466025	0					
ANR	1467707	UnaryOperator	*		1466025	0					
ANR	1467708	PostIncDecOperationExpression	class_uchardata ++		1466025	1					
ANR	1467709	Identifier	class_uchardata		1466025	0					
ANR	1467710	IncDec	++		1466025	1					
ANR	1467711	ConditionalExpression	local_negate ? XCL_NOTPROP : XCL_PROP		1466025	1					
ANR	1467712	Condition	local_negate		1466025	0					
ANR	1467713	Identifier	local_negate		1466025	0					
ANR	1467714	Identifier	XCL_NOTPROP		1466025	1					
ANR	1467715	Identifier	XCL_PROP		1466025	2					
ANR	1467716	ExpressionStatement	* class_uchardata ++ = ptype	5023:12:158485:158511	1466025	7	True				
ANR	1467717	AssignmentExpression	* class_uchardata ++ = ptype		1466025	0		=			
ANR	1467718	UnaryOperationExpression	* class_uchardata ++		1466025	0					
ANR	1467719	UnaryOperator	*		1466025	0					
ANR	1467720	PostIncDecOperationExpression	class_uchardata ++		1466025	1					
ANR	1467721	Identifier	class_uchardata		1466025	0					
ANR	1467722	IncDec	++		1466025	1					
ANR	1467723	Identifier	ptype		1466025	1					
ANR	1467724	ExpressionStatement	* class_uchardata ++ = 0	5024:12:158525:158547	1466025	8	True				
ANR	1467725	AssignmentExpression	* class_uchardata ++ = 0		1466025	0		=			
ANR	1467726	UnaryOperationExpression	* class_uchardata ++		1466025	0					
ANR	1467727	UnaryOperator	*		1466025	0					
ANR	1467728	PostIncDecOperationExpression	class_uchardata ++		1466025	1					
ANR	1467729	Identifier	class_uchardata		1466025	0					
ANR	1467730	IncDec	++		1466025	1					
ANR	1467731	PrimaryExpression	0		1466025	1					
ANR	1467732	ExpressionStatement	xclass_has_prop = TRUE	5025:12:158561:158583	1466025	9	True				
ANR	1467733	AssignmentExpression	xclass_has_prop = TRUE		1466025	0		=			
ANR	1467734	Identifier	xclass_has_prop		1466025	0					
ANR	1467735	Identifier	TRUE		1466025	1					
ANR	1467736	ExpressionStatement	ptr = tempptr + 1	5026:12:158597:158614	1466025	10	True				
ANR	1467737	AssignmentExpression	ptr = tempptr + 1		1466025	0		=			
ANR	1467738	Identifier	ptr		1466025	0					
ANR	1467739	AdditiveExpression	tempptr + 1		1466025	1		+			
ANR	1467740	Identifier	tempptr		1466025	0					
ANR	1467741	PrimaryExpression	1		1466025	1					
ANR	1467742	ContinueStatement	continue ;	5027:12:158628:158636	1466025	11	True				
ANR	1467743	Label	default :	5032:12:158785:158792	1466025	12	True				
ANR	1467744	Identifier	default		1466025	0					
ANR	1467745	BreakStatement	break ;	5033:12:158806:158811	1466025	13	True				
ANR	1467746	ExpressionStatement	posix_class *= 3	5043:8:159210:159226	1466025	12	True				
ANR	1467747	AssignmentExpression	posix_class *= 3		1466025	0		*=			
ANR	1467748	Identifier	posix_class		1466025	0					
ANR	1467749	PrimaryExpression	3		1466025	1					
ANR	1467750	ExpressionStatement	"memcpy ( pbits , cbits + posix_class_maps [ posix_class ] , 32 * sizeof ( pcre_uint8 ) )"	5047:8:159293:159380	1466025	13	True				
ANR	1467751	CallExpression	"memcpy ( pbits , cbits + posix_class_maps [ posix_class ] , 32 * sizeof ( pcre_uint8 ) )"		1466025	0					
ANR	1467752	Callee	memcpy		1466025	0					
ANR	1467753	Identifier	memcpy		1466025	0					
ANR	1467754	ArgumentList	pbits		1466025	1					
ANR	1467755	Argument	pbits		1466025	0					
ANR	1467756	Identifier	pbits		1466025	0					
ANR	1467757	Argument	cbits + posix_class_maps [ posix_class ]		1466025	1					
ANR	1467758	AdditiveExpression	cbits + posix_class_maps [ posix_class ]		1466025	0		+			
ANR	1467759	Identifier	cbits		1466025	0					
ANR	1467760	ArrayIndexing	posix_class_maps [ posix_class ]		1466025	1					
ANR	1467761	Identifier	posix_class_maps		1466025	0					
ANR	1467762	Identifier	posix_class		1466025	1					
ANR	1467763	Argument	32 * sizeof ( pcre_uint8 )		1466025	2					
ANR	1467764	MultiplicativeExpression	32 * sizeof ( pcre_uint8 )		1466025	0		*			
ANR	1467765	PrimaryExpression	32		1466025	0					
ANR	1467766	SizeofExpression	sizeof ( pcre_uint8 )		1466025	1					
ANR	1467767	Sizeof	sizeof		1466025	0					
ANR	1467768	SizeofOperand	pcre_uint8		1466025	1					
ANR	1467769	ExpressionStatement	taboffset = posix_class_maps [ posix_class + 1 ]	5052:8:159464:159509	1466025	14	True				
ANR	1467770	AssignmentExpression	taboffset = posix_class_maps [ posix_class + 1 ]		1466025	0		=			
ANR	1467771	Identifier	taboffset		1466025	0					
ANR	1467772	ArrayIndexing	posix_class_maps [ posix_class + 1 ]		1466025	1					
ANR	1467773	Identifier	posix_class_maps		1466025	0					
ANR	1467774	AdditiveExpression	posix_class + 1		1466025	1		+			
ANR	1467775	Identifier	posix_class		1466025	0					
ANR	1467776	PrimaryExpression	1		1466025	1					
ANR	1467777	ExpressionStatement	tabopt = posix_class_maps [ posix_class + 2 ]	5053:8:159519:159561	1466025	15	True				
ANR	1467778	AssignmentExpression	tabopt = posix_class_maps [ posix_class + 2 ]		1466025	0		=			
ANR	1467779	Identifier	tabopt		1466025	0					
ANR	1467780	ArrayIndexing	posix_class_maps [ posix_class + 2 ]		1466025	1					
ANR	1467781	Identifier	posix_class_maps		1466025	0					
ANR	1467782	AdditiveExpression	posix_class + 2		1466025	1		+			
ANR	1467783	Identifier	posix_class		1466025	0					
ANR	1467784	PrimaryExpression	2		1466025	1					
ANR	1467785	IfStatement	if ( taboffset >= 0 )		1466025	16					
ANR	1467786	Condition	taboffset >= 0	5055:12:159576:159589	1466025	0	True				
ANR	1467787	RelationalExpression	taboffset >= 0		1466025	0		>=			
ANR	1467788	Identifier	taboffset		1466025	0					
ANR	1467789	PrimaryExpression	0		1466025	1					
ANR	1467790	CompoundStatement		617:10:20357:20357	1466025	1					
ANR	1467791	IfStatement	if ( tabopt >= 0 )		1466025	0					
ANR	1467792	Condition	tabopt >= 0	5057:14:159618:159628	1466025	0	True				
ANR	1467793	RelationalExpression	tabopt >= 0		1466025	0		>=			
ANR	1467794	Identifier	tabopt		1466025	0					
ANR	1467795	PrimaryExpression	0		1466025	1					
ANR	1467796	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	1					
ANR	1467797	ForInit	c = 0 ;	5058:17:159648:159653	1466025	0	True				
ANR	1467798	AssignmentExpression	c = 0		1466025	0		=			
ANR	1467799	Identifier	c		1466025	0					
ANR	1467800	PrimaryExpression	0		1466025	1					
ANR	1467801	Condition	c < 32	5058:24:159655:159660	1466025	1	True				
ANR	1467802	RelationalExpression	c < 32		1466025	0		<			
ANR	1467803	Identifier	c		1466025	0					
ANR	1467804	PrimaryExpression	32		1466025	1					
ANR	1467805	PostIncDecOperationExpression	c ++	5058:32:159663:159665	1466025	2	True				
ANR	1467806	Identifier	c		1466025	0					
ANR	1467807	IncDec	++		1466025	1					
ANR	1467808	ExpressionStatement	pbits [ c ] |= cbits [ c + taboffset ]	5058:37:159668:159700	1466025	3	True				
ANR	1467809	AssignmentExpression	pbits [ c ] |= cbits [ c + taboffset ]		1466025	0		|=			
ANR	1467810	ArrayIndexing	pbits [ c ]		1466025	0					
ANR	1467811	Identifier	pbits		1466025	0					
ANR	1467812	Identifier	c		1466025	1					
ANR	1467813	ArrayIndexing	cbits [ c + taboffset ]		1466025	1					
ANR	1467814	Identifier	cbits		1466025	0					
ANR	1467815	AdditiveExpression	c + taboffset		1466025	1		+			
ANR	1467816	Identifier	c		1466025	0					
ANR	1467817	Identifier	taboffset		1466025	1					
ANR	1467818	ElseStatement	else		1466025	0					
ANR	1467819	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	0					
ANR	1467820	ForInit	c = 0 ;	5060:17:159734:159739	1466025	0	True				
ANR	1467821	AssignmentExpression	c = 0		1466025	0		=			
ANR	1467822	Identifier	c		1466025	0					
ANR	1467823	PrimaryExpression	0		1466025	1					
ANR	1467824	Condition	c < 32	5060:24:159741:159746	1466025	1	True				
ANR	1467825	RelationalExpression	c < 32		1466025	0		<			
ANR	1467826	Identifier	c		1466025	0					
ANR	1467827	PrimaryExpression	32		1466025	1					
ANR	1467828	PostIncDecOperationExpression	c ++	5060:32:159749:159751	1466025	2	True				
ANR	1467829	Identifier	c		1466025	0					
ANR	1467830	IncDec	++		1466025	1					
ANR	1467831	ExpressionStatement	pbits [ c ] &= ~cbits [ c + taboffset ]	5060:37:159754:159787	1466025	3	True				
ANR	1467832	AssignmentExpression	pbits [ c ] &= ~cbits [ c + taboffset ]		1466025	0		&=			
ANR	1467833	ArrayIndexing	pbits [ c ]		1466025	0					
ANR	1467834	Identifier	pbits		1466025	0					
ANR	1467835	Identifier	c		1466025	1					
ANR	1467836	ArrayIndexing	~cbits [ c + taboffset ]		1466025	1					
ANR	1467837	Identifier	~cbits		1466025	0					
ANR	1467838	AdditiveExpression	c + taboffset		1466025	1		+			
ANR	1467839	Identifier	c		1466025	0					
ANR	1467840	Identifier	taboffset		1466025	1					
ANR	1467841	IfStatement	if ( tabopt < 0 )		1466025	17					
ANR	1467842	Condition	tabopt < 0	5066:12:159960:159969	1466025	0	True				
ANR	1467843	RelationalExpression	tabopt < 0		1466025	0		<			
ANR	1467844	Identifier	tabopt		1466025	0					
ANR	1467845	PrimaryExpression	0		1466025	1					
ANR	1467846	ExpressionStatement	tabopt = - tabopt	5066:24:159972:159988	1466025	1	True				
ANR	1467847	AssignmentExpression	tabopt = - tabopt		1466025	0		=			
ANR	1467848	Identifier	tabopt		1466025	0					
ANR	1467849	UnaryOperationExpression	- tabopt		1466025	1					
ANR	1467850	UnaryOperator	-		1466025	0					
ANR	1467851	Identifier	tabopt		1466025	1					
ANR	1467852	IfStatement	if ( tabopt == 1 )		1466025	18					
ANR	1467853	Condition	tabopt == 1	5067:12:160002:160012	1466025	0	True				
ANR	1467854	EqualityExpression	tabopt == 1		1466025	0		==			
ANR	1467855	Identifier	tabopt		1466025	0					
ANR	1467856	PrimaryExpression	1		1466025	1					
ANR	1467857	ExpressionStatement	pbits [ 1 ] &= ~0x3c	5067:25:160015:160032	1466025	1	True				
ANR	1467858	AssignmentExpression	pbits [ 1 ] &= ~0x3c		1466025	0		&=			
ANR	1467859	ArrayIndexing	pbits [ 1 ]		1466025	0					
ANR	1467860	Identifier	pbits		1466025	0					
ANR	1467861	PrimaryExpression	1		1466025	1					
ANR	1467862	Identifier	~0x3c		1466025	1					
ANR	1467863	ElseStatement	else		1466025	0					
ANR	1467864	IfStatement	if ( tabopt == 2 )		1466025	0					
ANR	1467865	Condition	tabopt == 2	5068:19:160053:160063	1466025	0	True				
ANR	1467866	EqualityExpression	tabopt == 2		1466025	0		==			
ANR	1467867	Identifier	tabopt		1466025	0					
ANR	1467868	PrimaryExpression	2		1466025	1					
ANR	1467869	ExpressionStatement	pbits [ 11 ] &= 0x7f	5068:32:160066:160083	1466025	1	True				
ANR	1467870	AssignmentExpression	pbits [ 11 ] &= 0x7f		1466025	0		&=			
ANR	1467871	ArrayIndexing	pbits [ 11 ]		1466025	0					
ANR	1467872	Identifier	pbits		1466025	0					
ANR	1467873	PrimaryExpression	11		1466025	1					
ANR	1467874	PrimaryExpression	0x7f		1466025	1					
ANR	1467875	IfStatement	if ( local_negate )		1466025	19					
ANR	1467876	Condition	local_negate	5073:12:160216:160227	1466025	0	True				
ANR	1467877	Identifier	local_negate		1466025	0					
ANR	1467878	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	1					
ANR	1467879	ForInit	c = 0 ;	5074:15:160245:160250	1466025	0	True				
ANR	1467880	AssignmentExpression	c = 0		1466025	0		=			
ANR	1467881	Identifier	c		1466025	0					
ANR	1467882	PrimaryExpression	0		1466025	1					
ANR	1467883	Condition	c < 32	5074:22:160252:160257	1466025	1	True				
ANR	1467884	RelationalExpression	c < 32		1466025	0		<			
ANR	1467885	Identifier	c		1466025	0					
ANR	1467886	PrimaryExpression	32		1466025	1					
ANR	1467887	PostIncDecOperationExpression	c ++	5074:30:160260:160262	1466025	2	True				
ANR	1467888	Identifier	c		1466025	0					
ANR	1467889	IncDec	++		1466025	1					
ANR	1467890	ExpressionStatement	classbits [ c ] |= ~pbits [ c ]	5074:35:160265:160290	1466025	3	True				
ANR	1467891	AssignmentExpression	classbits [ c ] |= ~pbits [ c ]		1466025	0		|=			
ANR	1467892	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1467893	Identifier	classbits		1466025	0					
ANR	1467894	Identifier	c		1466025	1					
ANR	1467895	ArrayIndexing	~pbits [ c ]		1466025	1					
ANR	1467896	Identifier	~pbits		1466025	0					
ANR	1467897	Identifier	c		1466025	1					
ANR	1467898	ElseStatement	else		1466025	0					
ANR	1467899	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	0					
ANR	1467900	ForInit	c = 0 ;	5076:15:160320:160325	1466025	0	True				
ANR	1467901	AssignmentExpression	c = 0		1466025	0		=			
ANR	1467902	Identifier	c		1466025	0					
ANR	1467903	PrimaryExpression	0		1466025	1					
ANR	1467904	Condition	c < 32	5076:22:160327:160332	1466025	1	True				
ANR	1467905	RelationalExpression	c < 32		1466025	0		<			
ANR	1467906	Identifier	c		1466025	0					
ANR	1467907	PrimaryExpression	32		1466025	1					
ANR	1467908	PostIncDecOperationExpression	c ++	5076:30:160335:160337	1466025	2	True				
ANR	1467909	Identifier	c		1466025	0					
ANR	1467910	IncDec	++		1466025	1					
ANR	1467911	ExpressionStatement	classbits [ c ] |= pbits [ c ]	5076:35:160340:160364	1466025	3	True				
ANR	1467912	AssignmentExpression	classbits [ c ] |= pbits [ c ]		1466025	0		|=			
ANR	1467913	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1467914	Identifier	classbits		1466025	0					
ANR	1467915	Identifier	c		1466025	1					
ANR	1467916	ArrayIndexing	pbits [ c ]		1466025	1					
ANR	1467917	Identifier	pbits		1466025	0					
ANR	1467918	Identifier	c		1466025	1					
ANR	1467919	ExpressionStatement	ptr = tempptr + 1	5078:8:160375:160392	1466025	20	True				
ANR	1467920	AssignmentExpression	ptr = tempptr + 1		1466025	0		=			
ANR	1467921	Identifier	ptr		1466025	0					
ANR	1467922	AdditiveExpression	tempptr + 1		1466025	1		+			
ANR	1467923	Identifier	tempptr		1466025	0					
ANR	1467924	PrimaryExpression	1		1466025	1					
ANR	1467925	ExpressionStatement	class_has_8bitchar = 1	5080:8:160467:160489	1466025	21	True				
ANR	1467926	AssignmentExpression	class_has_8bitchar = 1		1466025	0		=			
ANR	1467927	Identifier	class_has_8bitchar		1466025	0					
ANR	1467928	PrimaryExpression	1		1466025	1					
ANR	1467929	ExpressionStatement	class_one_char = 2	5082:8:160559:160577	1466025	22	True				
ANR	1467930	AssignmentExpression	class_one_char = 2		1466025	0		=			
ANR	1467931	Identifier	class_one_char		1466025	0					
ANR	1467932	PrimaryExpression	2		1466025	1					
ANR	1467933	ContinueStatement	continue ;	5083:8:160587:160595	1466025	23	True				
ANR	1467934	IfStatement	if ( c == CHAR_BACKSLASH )		1466025	5					
ANR	1467935	Condition	c == CHAR_BACKSLASH	5095:10:161192:161210	1466025	0	True				
ANR	1467936	EqualityExpression	c == CHAR_BACKSLASH		1466025	0		==			
ANR	1467937	Identifier	c		1466025	0					
ANR	1467938	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1467939	CompoundStatement		657:8:21976:21976	1466025	1					
ANR	1467940	ExpressionStatement	"escape = check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , TRUE )"	5097:8:161231:161316	1466025	0	True				
ANR	1467941	AssignmentExpression	"escape = check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , TRUE )"		1466025	0		=			
ANR	1467942	Identifier	escape		1466025	0					
ANR	1467943	CallExpression	"check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , TRUE )"		1466025	1					
ANR	1467944	Callee	check_escape		1466025	0					
ANR	1467945	Identifier	check_escape		1466025	0					
ANR	1467946	ArgumentList	& ptr		1466025	1					
ANR	1467947	Argument	& ptr		1466025	0					
ANR	1467948	UnaryOperationExpression	& ptr		1466025	0					
ANR	1467949	UnaryOperator	&		1466025	0					
ANR	1467950	Identifier	ptr		1466025	1					
ANR	1467951	Argument	& ec		1466025	1					
ANR	1467952	UnaryOperationExpression	& ec		1466025	0					
ANR	1467953	UnaryOperator	&		1466025	0					
ANR	1467954	Identifier	ec		1466025	1					
ANR	1467955	Argument	errorcodeptr		1466025	2					
ANR	1467956	Identifier	errorcodeptr		1466025	0					
ANR	1467957	Argument	cd -> bracount		1466025	3					
ANR	1467958	PtrMemberAccess	cd -> bracount		1466025	0					
ANR	1467959	Identifier	cd		1466025	0					
ANR	1467960	Identifier	bracount		1466025	1					
ANR	1467961	Argument	options		1466025	4					
ANR	1467962	Identifier	options		1466025	0					
ANR	1467963	Argument	TRUE		1466025	5					
ANR	1467964	Identifier	TRUE		1466025	0					
ANR	1467965	IfStatement	if ( * errorcodeptr != 0 )		1466025	1					
ANR	1467966	Condition	* errorcodeptr != 0	5099:12:161330:161347	1466025	0	True				
ANR	1467967	EqualityExpression	* errorcodeptr != 0		1466025	0		!=			
ANR	1467968	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1467969	UnaryOperator	*		1466025	0					
ANR	1467970	Identifier	errorcodeptr		1466025	1					
ANR	1467971	PrimaryExpression	0		1466025	1					
ANR	1467972	GotoStatement	goto FAILED ;	5099:32:161350:161361	1466025	1	True				
ANR	1467973	Identifier	FAILED		1466025	0					
ANR	1467974	IfStatement	if ( escape == 0 )		1466025	2					
ANR	1467975	Condition	escape == 0	5100:12:161375:161385	1466025	0	True				
ANR	1467976	EqualityExpression	escape == 0		1466025	0		==			
ANR	1467977	Identifier	escape		1466025	0					
ANR	1467978	PrimaryExpression	0		1466025	1					
ANR	1467979	ExpressionStatement	c = ec	5100:25:161388:161394	1466025	1	True				
ANR	1467980	AssignmentExpression	c = ec		1466025	0		=			
ANR	1467981	Identifier	c		1466025	0					
ANR	1467982	Identifier	ec		1466025	1					
ANR	1467983	ElseStatement	else		1466025	0					
ANR	1467984	IfStatement	if ( escape == ESC_b )		1466025	0					
ANR	1467985	Condition	escape == ESC_b	5101:17:161413:161427	1466025	0	True				
ANR	1467986	EqualityExpression	escape == ESC_b		1466025	0		==			
ANR	1467987	Identifier	escape		1466025	0					
ANR	1467988	Identifier	ESC_b		1466025	1					
ANR	1467989	ExpressionStatement	c = CHAR_BS	5101:34:161430:161441	1466025	1	True				
ANR	1467990	AssignmentExpression	c = CHAR_BS		1466025	0		=			
ANR	1467991	Identifier	c		1466025	0					
ANR	1467992	Identifier	CHAR_BS		1466025	1					
ANR	1467993	ElseStatement	else		1466025	0					
ANR	1467994	IfStatement	if ( escape == ESC_N )		1466025	0					
ANR	1467995	Condition	escape == ESC_N	5102:17:161493:161507	1466025	0	True				
ANR	1467996	EqualityExpression	escape == ESC_N		1466025	0		==			
ANR	1467997	Identifier	escape		1466025	0					
ANR	1467998	Identifier	ESC_N		1466025	1					
ANR	1467999	CompoundStatement		664:10:22321:22321	1466025	1					
ANR	1468000	ExpressionStatement	* errorcodeptr = ERR71	5104:10:161578:161599	1466025	0	True				
ANR	1468001	AssignmentExpression	* errorcodeptr = ERR71		1466025	0		=			
ANR	1468002	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1468003	UnaryOperator	*		1466025	0					
ANR	1468004	Identifier	errorcodeptr		1466025	1					
ANR	1468005	Identifier	ERR71		1466025	1					
ANR	1468006	GotoStatement	goto FAILED ;	5105:10:161611:161622	1466025	1	True				
ANR	1468007	Identifier	FAILED		1466025	0					
ANR	1468008	ElseStatement	else		1466025	0					
ANR	1468009	IfStatement	if ( escape == ESC_Q )		1466025	0					
ANR	1468010	Condition	escape == ESC_Q	5107:17:161653:161667	1466025	0	True				
ANR	1468011	EqualityExpression	escape == ESC_Q		1466025	0		==			
ANR	1468012	Identifier	escape		1466025	0					
ANR	1468013	Identifier	ESC_Q		1466025	1					
ANR	1468014	CompoundStatement		669:10:22482:22482	1466025	1					
ANR	1468015	IfStatement	if ( ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E )		1466025	0					
ANR	1468016	Condition	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E	5109:14:161743:161786	1466025	0	True				
ANR	1468017	AndExpression	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E		1466025	0		&&			
ANR	1468018	EqualityExpression	ptr [ 1 ] == CHAR_BACKSLASH		1466025	0		==			
ANR	1468019	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468020	Identifier	ptr		1466025	0					
ANR	1468021	PrimaryExpression	1		1466025	1					
ANR	1468022	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1468023	EqualityExpression	ptr [ 2 ] == CHAR_E		1466025	1		==			
ANR	1468024	ArrayIndexing	ptr [ 2 ]		1466025	0					
ANR	1468025	Identifier	ptr		1466025	0					
ANR	1468026	PrimaryExpression	2		1466025	1					
ANR	1468027	Identifier	CHAR_E		1466025	1					
ANR	1468028	CompoundStatement		671:12:22556:22556	1466025	1					
ANR	1468029	ExpressionStatement	ptr += 2	5111:12:161815:161823	1466025	0	True				
ANR	1468030	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1468031	Identifier	ptr		1466025	0					
ANR	1468032	PrimaryExpression	2		1466025	1					
ANR	1468033	ElseStatement	else		1466025	0					
ANR	1468034	ExpressionStatement	inescq = TRUE	5113:15:161879:161892	1466025	0	True				
ANR	1468035	AssignmentExpression	inescq = TRUE		1466025	0		=			
ANR	1468036	Identifier	inescq		1466025	0					
ANR	1468037	Identifier	TRUE		1466025	1					
ANR	1468038	ContinueStatement	continue ;	5114:10:161904:161912	1466025	1	True				
ANR	1468039	ElseStatement	else		1466025	0					
ANR	1468040	IfStatement	if ( escape == ESC_E )		1466025	0					
ANR	1468041	Condition	escape == ESC_E	5116:17:161943:161957	1466025	0	True				
ANR	1468042	EqualityExpression	escape == ESC_E		1466025	0		==			
ANR	1468043	Identifier	escape		1466025	0					
ANR	1468044	Identifier	ESC_E		1466025	1					
ANR	1468045	ContinueStatement	continue ;	5116:34:161960:161968	1466025	1	True				
ANR	1468046	ElseStatement	else		1466025	0					
ANR	1468047	CompoundStatement		681:19:22794:22829	1466025	0					
ANR	1468048	Statement	register	5120:10:162030:162037	1466025	0	True				
ANR	1468049	IdentifierDeclStatement	const pcre_uint8 * cbits = cd -> cbits ;	5120:19:162039:162074	1466025	1	True				
ANR	1468050	IdentifierDecl	* cbits = cd -> cbits		1466025	0					
ANR	1468051	IdentifierDeclType	const pcre_uint8 *		1466025	0					
ANR	1468052	Identifier	cbits		1466025	1					
ANR	1468053	AssignmentExpression	* cbits = cd -> cbits		1466025	2		=			
ANR	1468054	Identifier	cbits		1466025	0					
ANR	1468055	PtrMemberAccess	cd -> cbits		1466025	1					
ANR	1468056	Identifier	cd		1466025	0					
ANR	1468057	Identifier	cbits		1466025	1					
ANR	1468058	ExpressionStatement	class_has_8bitchar ++	5122:10:162154:162174	1466025	2	True				
ANR	1468059	PostIncDecOperationExpression	class_has_8bitchar ++		1466025	0					
ANR	1468060	Identifier	class_has_8bitchar		1466025	0					
ANR	1468061	IncDec	++		1466025	1					
ANR	1468062	ExpressionStatement	class_one_char += 2	5124:10:162248:162267	1466025	3	True				
ANR	1468063	AssignmentExpression	class_one_char += 2		1466025	0		+=			
ANR	1468064	Identifier	class_one_char		1466025	0					
ANR	1468065	PrimaryExpression	2		1466025	1					
ANR	1468066	SwitchStatement	switch ( escape )		1466025	4					
ANR	1468067	Condition	escape	5126:18:162288:162293	1466025	0	True				
ANR	1468068	Identifier	escape		1466025	0					
ANR	1468069	CompoundStatement		688:12:23063:23063	1466025	1					
ANR	1468070	Label	case ESC_du :	5129:12:162341:162352	1466025	0	True				
ANR	1468071	Identifier	ESC_du		1466025	0					
ANR	1468072	Label	case ESC_DU :	5130:12:162414:162425	1466025	1	True				
ANR	1468073	Identifier	ESC_DU		1466025	0					
ANR	1468074	Label	case ESC_wu :	5131:12:162486:162497	1466025	2	True				
ANR	1468075	Identifier	ESC_wu		1466025	0					
ANR	1468076	Label	case ESC_WU :	5132:12:162560:162571	1466025	3	True				
ANR	1468077	Identifier	ESC_WU		1466025	0					
ANR	1468078	Label	case ESC_su :	5133:12:162636:162647	1466025	4	True				
ANR	1468079	Identifier	ESC_su		1466025	0					
ANR	1468080	Label	case ESC_SU :	5134:12:162701:162712	1466025	5	True				
ANR	1468081	Identifier	ESC_SU		1466025	0					
ANR	1468082	ExpressionStatement	nestptr = ptr	5135:12:162726:162739	1466025	6	True				
ANR	1468083	AssignmentExpression	nestptr = ptr		1466025	0		=			
ANR	1468084	Identifier	nestptr		1466025	0					
ANR	1468085	Identifier	ptr		1466025	1					
ANR	1468086	ExpressionStatement	ptr = substitutes [ escape - ESC_DU ] - 1	5136:12:162753:162791	1466025	7	True				
ANR	1468087	AssignmentExpression	ptr = substitutes [ escape - ESC_DU ] - 1		1466025	0		=			
ANR	1468088	Identifier	ptr		1466025	0					
ANR	1468089	AdditiveExpression	substitutes [ escape - ESC_DU ] - 1		1466025	1		-			
ANR	1468090	ArrayIndexing	substitutes [ escape - ESC_DU ]		1466025	0					
ANR	1468091	Identifier	substitutes		1466025	0					
ANR	1468092	AdditiveExpression	escape - ESC_DU		1466025	1		-			
ANR	1468093	Identifier	escape		1466025	0					
ANR	1468094	Identifier	ESC_DU		1466025	1					
ANR	1468095	PrimaryExpression	1		1466025	1					
ANR	1468096	ExpressionStatement	class_has_8bitchar --	5137:12:162835:162855	1466025	8	True				
ANR	1468097	PostIncDecOperationExpression	class_has_8bitchar --		1466025	0					
ANR	1468098	Identifier	class_has_8bitchar		1466025	0					
ANR	1468099	IncDec	--		1466025	1					
ANR	1468100	ContinueStatement	continue ;	5138:12:162896:162904	1466025	9	True				
ANR	1468101	Label	case ESC_d :	5140:12:162925:162935	1466025	10	True				
ANR	1468102	Identifier	ESC_d		1466025	0					
ANR	1468103	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	11					
ANR	1468104	ForInit	c = 0 ;	5141:17:162954:162959	1466025	0	True				
ANR	1468105	AssignmentExpression	c = 0		1466025	0		=			
ANR	1468106	Identifier	c		1466025	0					
ANR	1468107	PrimaryExpression	0		1466025	1					
ANR	1468108	Condition	c < 32	5141:24:162961:162966	1466025	1	True				
ANR	1468109	RelationalExpression	c < 32		1466025	0		<			
ANR	1468110	Identifier	c		1466025	0					
ANR	1468111	PrimaryExpression	32		1466025	1					
ANR	1468112	PostIncDecOperationExpression	c ++	5141:32:162969:162971	1466025	2	True				
ANR	1468113	Identifier	c		1466025	0					
ANR	1468114	IncDec	++		1466025	1					
ANR	1468115	ExpressionStatement	classbits [ c ] |= cbits [ c + cbit_digit ]	5141:37:162974:163009	1466025	3	True				
ANR	1468116	AssignmentExpression	classbits [ c ] |= cbits [ c + cbit_digit ]		1466025	0		|=			
ANR	1468117	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1468118	Identifier	classbits		1466025	0					
ANR	1468119	Identifier	c		1466025	1					
ANR	1468120	ArrayIndexing	cbits [ c + cbit_digit ]		1466025	1					
ANR	1468121	Identifier	cbits		1466025	0					
ANR	1468122	AdditiveExpression	c + cbit_digit		1466025	1		+			
ANR	1468123	Identifier	c		1466025	0					
ANR	1468124	Identifier	cbit_digit		1466025	1					
ANR	1468125	ContinueStatement	continue ;	5142:12:163023:163031	1466025	12	True				
ANR	1468126	Label	case ESC_D :	5144:12:163046:163056	1466025	13	True				
ANR	1468127	Identifier	ESC_D		1466025	0					
ANR	1468128	ExpressionStatement	should_flip_negation = TRUE	5145:12:163070:163097	1466025	14	True				
ANR	1468129	AssignmentExpression	should_flip_negation = TRUE		1466025	0		=			
ANR	1468130	Identifier	should_flip_negation		1466025	0					
ANR	1468131	Identifier	TRUE		1466025	1					
ANR	1468132	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	15					
ANR	1468133	ForInit	c = 0 ;	5146:17:163116:163121	1466025	0	True				
ANR	1468134	AssignmentExpression	c = 0		1466025	0		=			
ANR	1468135	Identifier	c		1466025	0					
ANR	1468136	PrimaryExpression	0		1466025	1					
ANR	1468137	Condition	c < 32	5146:24:163123:163128	1466025	1	True				
ANR	1468138	RelationalExpression	c < 32		1466025	0		<			
ANR	1468139	Identifier	c		1466025	0					
ANR	1468140	PrimaryExpression	32		1466025	1					
ANR	1468141	PostIncDecOperationExpression	c ++	5146:32:163131:163133	1466025	2	True				
ANR	1468142	Identifier	c		1466025	0					
ANR	1468143	IncDec	++		1466025	1					
ANR	1468144	ExpressionStatement	classbits [ c ] |= ~cbits [ c + cbit_digit ]	5146:37:163136:163172	1466025	3	True				
ANR	1468145	AssignmentExpression	classbits [ c ] |= ~cbits [ c + cbit_digit ]		1466025	0		|=			
ANR	1468146	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1468147	Identifier	classbits		1466025	0					
ANR	1468148	Identifier	c		1466025	1					
ANR	1468149	ArrayIndexing	~cbits [ c + cbit_digit ]		1466025	1					
ANR	1468150	Identifier	~cbits		1466025	0					
ANR	1468151	AdditiveExpression	c + cbit_digit		1466025	1		+			
ANR	1468152	Identifier	c		1466025	0					
ANR	1468153	Identifier	cbit_digit		1466025	1					
ANR	1468154	ContinueStatement	continue ;	5147:12:163186:163194	1466025	16	True				
ANR	1468155	Label	case ESC_w :	5149:12:163209:163219	1466025	17	True				
ANR	1468156	Identifier	ESC_w		1466025	0					
ANR	1468157	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	18					
ANR	1468158	ForInit	c = 0 ;	5150:17:163238:163243	1466025	0	True				
ANR	1468159	AssignmentExpression	c = 0		1466025	0		=			
ANR	1468160	Identifier	c		1466025	0					
ANR	1468161	PrimaryExpression	0		1466025	1					
ANR	1468162	Condition	c < 32	5150:24:163245:163250	1466025	1	True				
ANR	1468163	RelationalExpression	c < 32		1466025	0		<			
ANR	1468164	Identifier	c		1466025	0					
ANR	1468165	PrimaryExpression	32		1466025	1					
ANR	1468166	PostIncDecOperationExpression	c ++	5150:32:163253:163255	1466025	2	True				
ANR	1468167	Identifier	c		1466025	0					
ANR	1468168	IncDec	++		1466025	1					
ANR	1468169	ExpressionStatement	classbits [ c ] |= cbits [ c + cbit_word ]	5150:37:163258:163292	1466025	3	True				
ANR	1468170	AssignmentExpression	classbits [ c ] |= cbits [ c + cbit_word ]		1466025	0		|=			
ANR	1468171	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1468172	Identifier	classbits		1466025	0					
ANR	1468173	Identifier	c		1466025	1					
ANR	1468174	ArrayIndexing	cbits [ c + cbit_word ]		1466025	1					
ANR	1468175	Identifier	cbits		1466025	0					
ANR	1468176	AdditiveExpression	c + cbit_word		1466025	1		+			
ANR	1468177	Identifier	c		1466025	0					
ANR	1468178	Identifier	cbit_word		1466025	1					
ANR	1468179	ContinueStatement	continue ;	5151:12:163306:163314	1466025	19	True				
ANR	1468180	Label	case ESC_W :	5153:12:163329:163339	1466025	20	True				
ANR	1468181	Identifier	ESC_W		1466025	0					
ANR	1468182	ExpressionStatement	should_flip_negation = TRUE	5154:12:163353:163380	1466025	21	True				
ANR	1468183	AssignmentExpression	should_flip_negation = TRUE		1466025	0		=			
ANR	1468184	Identifier	should_flip_negation		1466025	0					
ANR	1468185	Identifier	TRUE		1466025	1					
ANR	1468186	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	22					
ANR	1468187	ForInit	c = 0 ;	5155:17:163399:163404	1466025	0	True				
ANR	1468188	AssignmentExpression	c = 0		1466025	0		=			
ANR	1468189	Identifier	c		1466025	0					
ANR	1468190	PrimaryExpression	0		1466025	1					
ANR	1468191	Condition	c < 32	5155:24:163406:163411	1466025	1	True				
ANR	1468192	RelationalExpression	c < 32		1466025	0		<			
ANR	1468193	Identifier	c		1466025	0					
ANR	1468194	PrimaryExpression	32		1466025	1					
ANR	1468195	PostIncDecOperationExpression	c ++	5155:32:163414:163416	1466025	2	True				
ANR	1468196	Identifier	c		1466025	0					
ANR	1468197	IncDec	++		1466025	1					
ANR	1468198	ExpressionStatement	classbits [ c ] |= ~cbits [ c + cbit_word ]	5155:37:163419:163454	1466025	3	True				
ANR	1468199	AssignmentExpression	classbits [ c ] |= ~cbits [ c + cbit_word ]		1466025	0		|=			
ANR	1468200	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1468201	Identifier	classbits		1466025	0					
ANR	1468202	Identifier	c		1466025	1					
ANR	1468203	ArrayIndexing	~cbits [ c + cbit_word ]		1466025	1					
ANR	1468204	Identifier	~cbits		1466025	0					
ANR	1468205	AdditiveExpression	c + cbit_word		1466025	1		+			
ANR	1468206	Identifier	c		1466025	0					
ANR	1468207	Identifier	cbit_word		1466025	1					
ANR	1468208	ContinueStatement	continue ;	5156:12:163468:163476	1466025	23	True				
ANR	1468209	Label	case ESC_s :	5165:12:163921:163931	1466025	24	True				
ANR	1468210	Identifier	ESC_s		1466025	0					
ANR	1468211	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	25					
ANR	1468212	ForInit	c = 0 ;	5166:17:163950:163955	1466025	0	True				
ANR	1468213	AssignmentExpression	c = 0		1466025	0		=			
ANR	1468214	Identifier	c		1466025	0					
ANR	1468215	PrimaryExpression	0		1466025	1					
ANR	1468216	Condition	c < 32	5166:24:163957:163962	1466025	1	True				
ANR	1468217	RelationalExpression	c < 32		1466025	0		<			
ANR	1468218	Identifier	c		1466025	0					
ANR	1468219	PrimaryExpression	32		1466025	1					
ANR	1468220	PostIncDecOperationExpression	c ++	5166:32:163965:163967	1466025	2	True				
ANR	1468221	Identifier	c		1466025	0					
ANR	1468222	IncDec	++		1466025	1					
ANR	1468223	ExpressionStatement	classbits [ c ] |= cbits [ c + cbit_space ]	5166:37:163970:164005	1466025	3	True				
ANR	1468224	AssignmentExpression	classbits [ c ] |= cbits [ c + cbit_space ]		1466025	0		|=			
ANR	1468225	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1468226	Identifier	classbits		1466025	0					
ANR	1468227	Identifier	c		1466025	1					
ANR	1468228	ArrayIndexing	cbits [ c + cbit_space ]		1466025	1					
ANR	1468229	Identifier	cbits		1466025	0					
ANR	1468230	AdditiveExpression	c + cbit_space		1466025	1		+			
ANR	1468231	Identifier	c		1466025	0					
ANR	1468232	Identifier	cbit_space		1466025	1					
ANR	1468233	ContinueStatement	continue ;	5167:12:164019:164027	1466025	26	True				
ANR	1468234	Label	case ESC_S :	5169:12:164042:164052	1466025	27	True				
ANR	1468235	Identifier	ESC_S		1466025	0					
ANR	1468236	ExpressionStatement	should_flip_negation = TRUE	5170:12:164066:164093	1466025	28	True				
ANR	1468237	AssignmentExpression	should_flip_negation = TRUE		1466025	0		=			
ANR	1468238	Identifier	should_flip_negation		1466025	0					
ANR	1468239	Identifier	TRUE		1466025	1					
ANR	1468240	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	29					
ANR	1468241	ForInit	c = 0 ;	5171:17:164112:164117	1466025	0	True				
ANR	1468242	AssignmentExpression	c = 0		1466025	0		=			
ANR	1468243	Identifier	c		1466025	0					
ANR	1468244	PrimaryExpression	0		1466025	1					
ANR	1468245	Condition	c < 32	5171:24:164119:164124	1466025	1	True				
ANR	1468246	RelationalExpression	c < 32		1466025	0		<			
ANR	1468247	Identifier	c		1466025	0					
ANR	1468248	PrimaryExpression	32		1466025	1					
ANR	1468249	PostIncDecOperationExpression	c ++	5171:32:164127:164129	1466025	2	True				
ANR	1468250	Identifier	c		1466025	0					
ANR	1468251	IncDec	++		1466025	1					
ANR	1468252	ExpressionStatement	classbits [ c ] |= ~cbits [ c + cbit_space ]	5171:37:164132:164168	1466025	3	True				
ANR	1468253	AssignmentExpression	classbits [ c ] |= ~cbits [ c + cbit_space ]		1466025	0		|=			
ANR	1468254	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1468255	Identifier	classbits		1466025	0					
ANR	1468256	Identifier	c		1466025	1					
ANR	1468257	ArrayIndexing	~cbits [ c + cbit_space ]		1466025	1					
ANR	1468258	Identifier	~cbits		1466025	0					
ANR	1468259	AdditiveExpression	c + cbit_space		1466025	1		+			
ANR	1468260	Identifier	c		1466025	0					
ANR	1468261	Identifier	cbit_space		1466025	1					
ANR	1468262	ContinueStatement	continue ;	5172:12:164182:164190	1466025	30	True				
ANR	1468263	Label	case ESC_h :	5176:12:164270:164280	1466025	31	True				
ANR	1468264	Identifier	ESC_h		1466025	0					
ANR	1468265	ExpressionStatement	"( void ) add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) , NOTACHAR )"	5177:12:164294:164402	1466025	32	True				
ANR	1468266	CastExpression	"( void ) add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) , NOTACHAR )"		1466025	0					
ANR	1468267	CastTarget	void		1466025	0					
ANR	1468268	CallExpression	"add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) , NOTACHAR )"		1466025	1					
ANR	1468269	Callee	add_list_to_class		1466025	0					
ANR	1468270	Identifier	add_list_to_class		1466025	0					
ANR	1468271	ArgumentList	classbits		1466025	1					
ANR	1468272	Argument	classbits		1466025	0					
ANR	1468273	Identifier	classbits		1466025	0					
ANR	1468274	Argument	& class_uchardata		1466025	1					
ANR	1468275	UnaryOperationExpression	& class_uchardata		1466025	0					
ANR	1468276	UnaryOperator	&		1466025	0					
ANR	1468277	Identifier	class_uchardata		1466025	1					
ANR	1468278	Argument	options		1466025	2					
ANR	1468279	Identifier	options		1466025	0					
ANR	1468280	Argument	cd		1466025	3					
ANR	1468281	Identifier	cd		1466025	0					
ANR	1468282	Argument	PRIV ( hspace_list )		1466025	4					
ANR	1468283	CallExpression	PRIV ( hspace_list )		1466025	0					
ANR	1468284	Callee	PRIV		1466025	0					
ANR	1468285	Identifier	PRIV		1466025	0					
ANR	1468286	ArgumentList	hspace_list		1466025	1					
ANR	1468287	Argument	hspace_list		1466025	0					
ANR	1468288	Identifier	hspace_list		1466025	0					
ANR	1468289	Argument	NOTACHAR		1466025	5					
ANR	1468290	Identifier	NOTACHAR		1466025	0					
ANR	1468291	ContinueStatement	continue ;	5179:12:164416:164424	1466025	33	True				
ANR	1468292	Label	case ESC_H :	5181:12:164439:164449	1466025	34	True				
ANR	1468293	Identifier	ESC_H		1466025	0					
ANR	1468294	ExpressionStatement	"( void ) add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) )"	5182:12:164463:164565	1466025	35	True				
ANR	1468295	CastExpression	"( void ) add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) )"		1466025	0					
ANR	1468296	CastTarget	void		1466025	0					
ANR	1468297	CallExpression	"add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( hspace_list ) )"		1466025	1					
ANR	1468298	Callee	add_not_list_to_class		1466025	0					
ANR	1468299	Identifier	add_not_list_to_class		1466025	0					
ANR	1468300	ArgumentList	classbits		1466025	1					
ANR	1468301	Argument	classbits		1466025	0					
ANR	1468302	Identifier	classbits		1466025	0					
ANR	1468303	Argument	& class_uchardata		1466025	1					
ANR	1468304	UnaryOperationExpression	& class_uchardata		1466025	0					
ANR	1468305	UnaryOperator	&		1466025	0					
ANR	1468306	Identifier	class_uchardata		1466025	1					
ANR	1468307	Argument	options		1466025	2					
ANR	1468308	Identifier	options		1466025	0					
ANR	1468309	Argument	cd		1466025	3					
ANR	1468310	Identifier	cd		1466025	0					
ANR	1468311	Argument	PRIV ( hspace_list )		1466025	4					
ANR	1468312	CallExpression	PRIV ( hspace_list )		1466025	0					
ANR	1468313	Callee	PRIV		1466025	0					
ANR	1468314	Identifier	PRIV		1466025	0					
ANR	1468315	ArgumentList	hspace_list		1466025	1					
ANR	1468316	Argument	hspace_list		1466025	0					
ANR	1468317	Identifier	hspace_list		1466025	0					
ANR	1468318	ContinueStatement	continue ;	5184:12:164579:164587	1466025	36	True				
ANR	1468319	Label	case ESC_v :	5186:12:164602:164612	1466025	37	True				
ANR	1468320	Identifier	ESC_v		1466025	0					
ANR	1468321	ExpressionStatement	"( void ) add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) , NOTACHAR )"	5187:12:164626:164734	1466025	38	True				
ANR	1468322	CastExpression	"( void ) add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) , NOTACHAR )"		1466025	0					
ANR	1468323	CastTarget	void		1466025	0					
ANR	1468324	CallExpression	"add_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) , NOTACHAR )"		1466025	1					
ANR	1468325	Callee	add_list_to_class		1466025	0					
ANR	1468326	Identifier	add_list_to_class		1466025	0					
ANR	1468327	ArgumentList	classbits		1466025	1					
ANR	1468328	Argument	classbits		1466025	0					
ANR	1468329	Identifier	classbits		1466025	0					
ANR	1468330	Argument	& class_uchardata		1466025	1					
ANR	1468331	UnaryOperationExpression	& class_uchardata		1466025	0					
ANR	1468332	UnaryOperator	&		1466025	0					
ANR	1468333	Identifier	class_uchardata		1466025	1					
ANR	1468334	Argument	options		1466025	2					
ANR	1468335	Identifier	options		1466025	0					
ANR	1468336	Argument	cd		1466025	3					
ANR	1468337	Identifier	cd		1466025	0					
ANR	1468338	Argument	PRIV ( vspace_list )		1466025	4					
ANR	1468339	CallExpression	PRIV ( vspace_list )		1466025	0					
ANR	1468340	Callee	PRIV		1466025	0					
ANR	1468341	Identifier	PRIV		1466025	0					
ANR	1468342	ArgumentList	vspace_list		1466025	1					
ANR	1468343	Argument	vspace_list		1466025	0					
ANR	1468344	Identifier	vspace_list		1466025	0					
ANR	1468345	Argument	NOTACHAR		1466025	5					
ANR	1468346	Identifier	NOTACHAR		1466025	0					
ANR	1468347	ContinueStatement	continue ;	5189:12:164748:164756	1466025	39	True				
ANR	1468348	Label	case ESC_V :	5191:12:164771:164781	1466025	40	True				
ANR	1468349	Identifier	ESC_V		1466025	0					
ANR	1468350	ExpressionStatement	"( void ) add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) )"	5192:12:164795:164897	1466025	41	True				
ANR	1468351	CastExpression	"( void ) add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) )"		1466025	0					
ANR	1468352	CastTarget	void		1466025	0					
ANR	1468353	CallExpression	"add_not_list_to_class ( classbits , & class_uchardata , options , cd , PRIV ( vspace_list ) )"		1466025	1					
ANR	1468354	Callee	add_not_list_to_class		1466025	0					
ANR	1468355	Identifier	add_not_list_to_class		1466025	0					
ANR	1468356	ArgumentList	classbits		1466025	1					
ANR	1468357	Argument	classbits		1466025	0					
ANR	1468358	Identifier	classbits		1466025	0					
ANR	1468359	Argument	& class_uchardata		1466025	1					
ANR	1468360	UnaryOperationExpression	& class_uchardata		1466025	0					
ANR	1468361	UnaryOperator	&		1466025	0					
ANR	1468362	Identifier	class_uchardata		1466025	1					
ANR	1468363	Argument	options		1466025	2					
ANR	1468364	Identifier	options		1466025	0					
ANR	1468365	Argument	cd		1466025	3					
ANR	1468366	Identifier	cd		1466025	0					
ANR	1468367	Argument	PRIV ( vspace_list )		1466025	4					
ANR	1468368	CallExpression	PRIV ( vspace_list )		1466025	0					
ANR	1468369	Callee	PRIV		1466025	0					
ANR	1468370	Identifier	PRIV		1466025	0					
ANR	1468371	ArgumentList	vspace_list		1466025	1					
ANR	1468372	Argument	vspace_list		1466025	0					
ANR	1468373	Identifier	vspace_list		1466025	0					
ANR	1468374	ContinueStatement	continue ;	5194:12:164911:164919	1466025	42	True				
ANR	1468375	Label	case ESC_p :	5197:12:164953:164963	1466025	43	True				
ANR	1468376	Identifier	ESC_p		1466025	0					
ANR	1468377	Label	case ESC_P :	5198:12:164977:164987	1466025	44	True				
ANR	1468378	Identifier	ESC_P		1466025	0					
ANR	1468379	CompoundStatement		762:14:25802:25835	1466025	45					
ANR	1468380	IdentifierDeclStatement	BOOL negated ;	5200:14:165019:165031	1466025	0	True				
ANR	1468381	IdentifierDecl	negated		1466025	0					
ANR	1468382	IdentifierDeclType	BOOL		1466025	0					
ANR	1468383	Identifier	negated		1466025	1					
ANR	1468384	IdentifierDeclStatement	"unsigned int ptype = 0 , pdata = 0 ;"	5201:14:165047:165080	1466025	1	True				
ANR	1468385	IdentifierDecl	ptype = 0		1466025	0					
ANR	1468386	IdentifierDeclType	unsigned int		1466025	0					
ANR	1468387	Identifier	ptype		1466025	1					
ANR	1468388	AssignmentExpression	ptype = 0		1466025	2		=			
ANR	1468389	Identifier	ptype		1466025	0					
ANR	1468390	PrimaryExpression	0		1466025	1					
ANR	1468391	IdentifierDecl	pdata = 0		1466025	1					
ANR	1468392	IdentifierDeclType	unsigned int		1466025	0					
ANR	1468393	Identifier	pdata		1466025	1					
ANR	1468394	AssignmentExpression	pdata = 0		1466025	2		=			
ANR	1468395	Identifier	pdata		1466025	0					
ANR	1468396	PrimaryExpression	0		1466025	1					
ANR	1468397	IfStatement	"if ( ! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr ) )"		1466025	2					
ANR	1468398	Condition	"! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"	5202:18:165100:165153	1466025	0	True				
ANR	1468399	UnaryOperationExpression	"! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"		1466025	0					
ANR	1468400	UnaryOperator	!		1466025	0					
ANR	1468401	CallExpression	"get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"		1466025	1					
ANR	1468402	Callee	get_ucp		1466025	0					
ANR	1468403	Identifier	get_ucp		1466025	0					
ANR	1468404	ArgumentList	& ptr		1466025	1					
ANR	1468405	Argument	& ptr		1466025	0					
ANR	1468406	UnaryOperationExpression	& ptr		1466025	0					
ANR	1468407	UnaryOperator	&		1466025	0					
ANR	1468408	Identifier	ptr		1466025	1					
ANR	1468409	Argument	& negated		1466025	1					
ANR	1468410	UnaryOperationExpression	& negated		1466025	0					
ANR	1468411	UnaryOperator	&		1466025	0					
ANR	1468412	Identifier	negated		1466025	1					
ANR	1468413	Argument	& ptype		1466025	2					
ANR	1468414	UnaryOperationExpression	& ptype		1466025	0					
ANR	1468415	UnaryOperator	&		1466025	0					
ANR	1468416	Identifier	ptype		1466025	1					
ANR	1468417	Argument	& pdata		1466025	3					
ANR	1468418	UnaryOperationExpression	& pdata		1466025	0					
ANR	1468419	UnaryOperator	&		1466025	0					
ANR	1468420	Identifier	pdata		1466025	1					
ANR	1468421	Argument	errorcodeptr		1466025	4					
ANR	1468422	Identifier	errorcodeptr		1466025	0					
ANR	1468423	GotoStatement	goto FAILED ;	5203:16:165172:165183	1466025	1	True				
ANR	1468424	Identifier	FAILED		1466025	0					
ANR	1468425	ExpressionStatement	* class_uchardata ++ = ( ( escape == ESC_p ) != negated ) ? XCL_PROP : XCL_NOTPROP	5204:14:165199:165290	1466025	3	True				
ANR	1468426	AssignmentExpression	* class_uchardata ++ = ( ( escape == ESC_p ) != negated ) ? XCL_PROP : XCL_NOTPROP		1466025	0		=			
ANR	1468427	UnaryOperationExpression	* class_uchardata ++		1466025	0					
ANR	1468428	UnaryOperator	*		1466025	0					
ANR	1468429	PostIncDecOperationExpression	class_uchardata ++		1466025	1					
ANR	1468430	Identifier	class_uchardata		1466025	0					
ANR	1468431	IncDec	++		1466025	1					
ANR	1468432	ConditionalExpression	( ( escape == ESC_p ) != negated ) ? XCL_PROP : XCL_NOTPROP		1466025	1					
ANR	1468433	Condition	( escape == ESC_p ) != negated		1466025	0					
ANR	1468434	EqualityExpression	( escape == ESC_p ) != negated		1466025	0		!=			
ANR	1468435	EqualityExpression	escape == ESC_p		1466025	0		==			
ANR	1468436	Identifier	escape		1466025	0					
ANR	1468437	Identifier	ESC_p		1466025	1					
ANR	1468438	Identifier	negated		1466025	1					
ANR	1468439	Identifier	XCL_PROP		1466025	1					
ANR	1468440	Identifier	XCL_NOTPROP		1466025	2					
ANR	1468441	ExpressionStatement	* class_uchardata ++ = ptype	5206:14:165306:165332	1466025	4	True				
ANR	1468442	AssignmentExpression	* class_uchardata ++ = ptype		1466025	0		=			
ANR	1468443	UnaryOperationExpression	* class_uchardata ++		1466025	0					
ANR	1468444	UnaryOperator	*		1466025	0					
ANR	1468445	PostIncDecOperationExpression	class_uchardata ++		1466025	1					
ANR	1468446	Identifier	class_uchardata		1466025	0					
ANR	1468447	IncDec	++		1466025	1					
ANR	1468448	Identifier	ptype		1466025	1					
ANR	1468449	ExpressionStatement	* class_uchardata ++ = pdata	5207:14:165348:165374	1466025	5	True				
ANR	1468450	AssignmentExpression	* class_uchardata ++ = pdata		1466025	0		=			
ANR	1468451	UnaryOperationExpression	* class_uchardata ++		1466025	0					
ANR	1468452	UnaryOperator	*		1466025	0					
ANR	1468453	PostIncDecOperationExpression	class_uchardata ++		1466025	1					
ANR	1468454	Identifier	class_uchardata		1466025	0					
ANR	1468455	IncDec	++		1466025	1					
ANR	1468456	Identifier	pdata		1466025	1					
ANR	1468457	ExpressionStatement	xclass_has_prop = TRUE	5208:14:165390:165412	1466025	6	True				
ANR	1468458	AssignmentExpression	xclass_has_prop = TRUE		1466025	0		=			
ANR	1468459	Identifier	xclass_has_prop		1466025	0					
ANR	1468460	Identifier	TRUE		1466025	1					
ANR	1468461	ExpressionStatement	class_has_8bitchar --	5209:14:165428:165448	1466025	7	True				
ANR	1468462	PostIncDecOperationExpression	class_has_8bitchar --		1466025	0					
ANR	1468463	Identifier	class_has_8bitchar		1466025	0					
ANR	1468464	IncDec	--		1466025	1					
ANR	1468465	ContinueStatement	continue ;	5210:14:165491:165499	1466025	8	True				
ANR	1468466	Label	default :	5217:12:165722:165729	1466025	46	True				
ANR	1468467	Identifier	default		1466025	0					
ANR	1468468	IfStatement	if ( ( options & PCRE_EXTRA ) != 0 )		1466025	47					
ANR	1468469	Condition	( options & PCRE_EXTRA ) != 0	5218:16:165747:165773	1466025	0	True				
ANR	1468470	EqualityExpression	( options & PCRE_EXTRA ) != 0		1466025	0		!=			
ANR	1468471	BitAndExpression	options & PCRE_EXTRA		1466025	0		&			
ANR	1468472	Identifier	options		1466025	0					
ANR	1468473	Identifier	PCRE_EXTRA		1466025	1					
ANR	1468474	PrimaryExpression	0		1466025	1					
ANR	1468475	CompoundStatement		780:14:26545:26545	1466025	1					
ANR	1468476	ExpressionStatement	* errorcodeptr = ERR7	5220:14:165806:165826	1466025	0	True				
ANR	1468477	AssignmentExpression	* errorcodeptr = ERR7		1466025	0		=			
ANR	1468478	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1468479	UnaryOperator	*		1466025	0					
ANR	1468480	Identifier	errorcodeptr		1466025	1					
ANR	1468481	Identifier	ERR7		1466025	1					
ANR	1468482	GotoStatement	goto FAILED ;	5221:14:165842:165853	1466025	1	True				
ANR	1468483	Identifier	FAILED		1466025	0					
ANR	1468484	ExpressionStatement	class_has_8bitchar --	5223:12:165883:165903	1466025	48	True				
ANR	1468485	PostIncDecOperationExpression	class_has_8bitchar --		1466025	0					
ANR	1468486	Identifier	class_has_8bitchar		1466025	0					
ANR	1468487	IncDec	--		1466025	1					
ANR	1468488	ExpressionStatement	class_one_char -= 2	5224:12:165957:165976	1466025	49	True				
ANR	1468489	AssignmentExpression	class_one_char -= 2		1466025	0		-=			
ANR	1468490	Identifier	class_one_char		1466025	0					
ANR	1468491	PrimaryExpression	2		1466025	1					
ANR	1468492	ExpressionStatement	c = * ptr	5225:12:166031:166039	1466025	50	True				
ANR	1468493	AssignmentExpression	c = * ptr		1466025	0		=			
ANR	1468494	Identifier	c		1466025	0					
ANR	1468495	UnaryOperationExpression	* ptr		1466025	1					
ANR	1468496	UnaryOperator	*		1466025	0					
ANR	1468497	Identifier	ptr		1466025	1					
ANR	1468498	BreakStatement	break ;	5226:12:166115:166120	1466025	51	True				
ANR	1468499	ExpressionStatement	escape = 0	5233:8:166279:166289	1466025	3	True				
ANR	1468500	AssignmentExpression	escape = 0		1466025	0		=			
ANR	1468501	Identifier	escape		1466025	0					
ANR	1468502	PrimaryExpression	0		1466025	1					
ANR	1468503	Label	CHECK_RANGE :	5242:6:166627:166638	1466025	6	True				
ANR	1468504	Identifier	CHECK_RANGE		1466025	0					
ANR	1468505	WhileStatement	while ( ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E )		1466025	7					
ANR	1468506	Condition	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E	5243:13:166653:166696	1466025	0	True				
ANR	1468507	AndExpression	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E		1466025	0		&&			
ANR	1468508	EqualityExpression	ptr [ 1 ] == CHAR_BACKSLASH		1466025	0		==			
ANR	1468509	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468510	Identifier	ptr		1466025	0					
ANR	1468511	PrimaryExpression	1		1466025	1					
ANR	1468512	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1468513	EqualityExpression	ptr [ 2 ] == CHAR_E		1466025	1		==			
ANR	1468514	ArrayIndexing	ptr [ 2 ]		1466025	0					
ANR	1468515	Identifier	ptr		1466025	0					
ANR	1468516	PrimaryExpression	2		1466025	1					
ANR	1468517	Identifier	CHAR_E		1466025	1					
ANR	1468518	CompoundStatement		805:8:27462:27462	1466025	1					
ANR	1468519	ExpressionStatement	inescq = FALSE	5245:8:166717:166731	1466025	0	True				
ANR	1468520	AssignmentExpression	inescq = FALSE		1466025	0		=			
ANR	1468521	Identifier	inescq		1466025	0					
ANR	1468522	Identifier	FALSE		1466025	1					
ANR	1468523	ExpressionStatement	ptr += 2	5246:8:166741:166749	1466025	1	True				
ANR	1468524	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1468525	Identifier	ptr		1466025	0					
ANR	1468526	PrimaryExpression	2		1466025	1					
ANR	1468527	ExpressionStatement	oldptr = ptr	5248:6:166767:166779	1466025	8	True				
ANR	1468528	AssignmentExpression	oldptr = ptr		1466025	0		=			
ANR	1468529	Identifier	oldptr		1466025	0					
ANR	1468530	Identifier	ptr		1466025	1					
ANR	1468531	IfStatement	if ( c == CHAR_CR || c == CHAR_NL )		1466025	9					
ANR	1468532	Condition	c == CHAR_CR || c == CHAR_NL	5252:10:166847:166874	1466025	0	True				
ANR	1468533	OrExpression	c == CHAR_CR || c == CHAR_NL		1466025	0		||			
ANR	1468534	EqualityExpression	c == CHAR_CR		1466025	0		==			
ANR	1468535	Identifier	c		1466025	0					
ANR	1468536	Identifier	CHAR_CR		1466025	1					
ANR	1468537	EqualityExpression	c == CHAR_NL		1466025	1		==			
ANR	1468538	Identifier	c		1466025	0					
ANR	1468539	Identifier	CHAR_NL		1466025	1					
ANR	1468540	ExpressionStatement	cd -> external_flags |= PCRE_HASCRORLF	5252:40:166877:166913	1466025	1	True				
ANR	1468541	AssignmentExpression	cd -> external_flags |= PCRE_HASCRORLF		1466025	0		|=			
ANR	1468542	PtrMemberAccess	cd -> external_flags		1466025	0					
ANR	1468543	Identifier	cd		1466025	0					
ANR	1468544	Identifier	external_flags		1466025	1					
ANR	1468545	Identifier	PCRE_HASCRORLF		1466025	1					
ANR	1468546	IfStatement	if ( ! inescq && ptr [ 1 ] == CHAR_MINUS )		1466025	10					
ANR	1468547	Condition	! inescq && ptr [ 1 ] == CHAR_MINUS	5256:10:166955:166985	1466025	0	True				
ANR	1468548	AndExpression	! inescq && ptr [ 1 ] == CHAR_MINUS		1466025	0		&&			
ANR	1468549	UnaryOperationExpression	! inescq		1466025	0					
ANR	1468550	UnaryOperator	!		1466025	0					
ANR	1468551	Identifier	inescq		1466025	1					
ANR	1468552	EqualityExpression	ptr [ 1 ] == CHAR_MINUS		1466025	1		==			
ANR	1468553	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468554	Identifier	ptr		1466025	0					
ANR	1468555	PrimaryExpression	1		1466025	1					
ANR	1468556	Identifier	CHAR_MINUS		1466025	1					
ANR	1468557	CompoundStatement		819:8:27761:27774	1466025	1					
ANR	1468558	IdentifierDeclStatement	pcre_uint32 d ;	5258:8:167006:167019	1466025	0	True				
ANR	1468559	IdentifierDecl	d		1466025	0					
ANR	1468560	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1468561	Identifier	d		1466025	1					
ANR	1468562	ExpressionStatement	ptr += 2	5259:8:167029:167037	1466025	1	True				
ANR	1468563	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1468564	Identifier	ptr		1466025	0					
ANR	1468565	PrimaryExpression	2		1466025	1					
ANR	1468566	WhileStatement	while ( * ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E )		1466025	2					
ANR	1468567	Condition	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E	5260:15:167054:167095	1466025	0	True				
ANR	1468568	AndExpression	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E		1466025	0		&&			
ANR	1468569	EqualityExpression	* ptr == CHAR_BACKSLASH		1466025	0		==			
ANR	1468570	UnaryOperationExpression	* ptr		1466025	0					
ANR	1468571	UnaryOperator	*		1466025	0					
ANR	1468572	Identifier	ptr		1466025	1					
ANR	1468573	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1468574	EqualityExpression	ptr [ 1 ] == CHAR_E		1466025	1		==			
ANR	1468575	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468576	Identifier	ptr		1466025	0					
ANR	1468577	PrimaryExpression	1		1466025	1					
ANR	1468578	Identifier	CHAR_E		1466025	1					
ANR	1468579	ExpressionStatement	ptr += 2	5260:59:167098:167106	1466025	1	True				
ANR	1468580	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1468581	Identifier	ptr		1466025	0					
ANR	1468582	PrimaryExpression	2		1466025	1					
ANR	1468583	WhileStatement	while ( * ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_Q )		1466025	3					
ANR	1468584	Condition	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_Q	5265:15:167218:167259	1466025	0	True				
ANR	1468585	AndExpression	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_Q		1466025	0		&&			
ANR	1468586	EqualityExpression	* ptr == CHAR_BACKSLASH		1466025	0		==			
ANR	1468587	UnaryOperationExpression	* ptr		1466025	0					
ANR	1468588	UnaryOperator	*		1466025	0					
ANR	1468589	Identifier	ptr		1466025	1					
ANR	1468590	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1468591	EqualityExpression	ptr [ 1 ] == CHAR_Q		1466025	1		==			
ANR	1468592	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468593	Identifier	ptr		1466025	0					
ANR	1468594	PrimaryExpression	1		1466025	1					
ANR	1468595	Identifier	CHAR_Q		1466025	1					
ANR	1468596	CompoundStatement		827:10:28027:28027	1466025	1					
ANR	1468597	ExpressionStatement	ptr += 2	5267:10:167284:167292	1466025	0	True				
ANR	1468598	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1468599	Identifier	ptr		1466025	0					
ANR	1468600	PrimaryExpression	2		1466025	1					
ANR	1468601	IfStatement	if ( * ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E )		1466025	1					
ANR	1468602	Condition	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E	5268:14:167308:167349	1466025	0	True				
ANR	1468603	AndExpression	* ptr == CHAR_BACKSLASH && ptr [ 1 ] == CHAR_E		1466025	0		&&			
ANR	1468604	EqualityExpression	* ptr == CHAR_BACKSLASH		1466025	0		==			
ANR	1468605	UnaryOperationExpression	* ptr		1466025	0					
ANR	1468606	UnaryOperator	*		1466025	0					
ANR	1468607	Identifier	ptr		1466025	1					
ANR	1468608	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1468609	EqualityExpression	ptr [ 1 ] == CHAR_E		1466025	1		==			
ANR	1468610	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468611	Identifier	ptr		1466025	0					
ANR	1468612	PrimaryExpression	1		1466025	1					
ANR	1468613	Identifier	CHAR_E		1466025	1					
ANR	1468614	CompoundStatement		830:12:28119:28119	1466025	1					
ANR	1468615	ExpressionStatement	ptr += 2	5269:14:167366:167374	1466025	0	True				
ANR	1468616	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1468617	Identifier	ptr		1466025	0					
ANR	1468618	PrimaryExpression	2		1466025	1					
ANR	1468619	ContinueStatement	continue ;	5269:24:167376:167384	1466025	1	True				
ANR	1468620	ExpressionStatement	inescq = TRUE	5270:10:167398:167411	1466025	2	True				
ANR	1468621	AssignmentExpression	inescq = TRUE		1466025	0		=			
ANR	1468622	Identifier	inescq		1466025	0					
ANR	1468623	Identifier	TRUE		1466025	1					
ANR	1468624	BreakStatement	break ;	5271:10:167423:167428	1466025	3	True				
ANR	1468625	IfStatement	if ( * ptr == CHAR_NULL || ( ! inescq && * ptr == CHAR_RIGHT_SQUARE_BRACKET ) )		1466025	4					
ANR	1468626	Condition	* ptr == CHAR_NULL || ( ! inescq && * ptr == CHAR_RIGHT_SQUARE_BRACKET )	5277:12:167615:167681	1466025	0	True				
ANR	1468627	OrExpression	* ptr == CHAR_NULL || ( ! inescq && * ptr == CHAR_RIGHT_SQUARE_BRACKET )		1466025	0		||			
ANR	1468628	EqualityExpression	* ptr == CHAR_NULL		1466025	0		==			
ANR	1468629	UnaryOperationExpression	* ptr		1466025	0					
ANR	1468630	UnaryOperator	*		1466025	0					
ANR	1468631	Identifier	ptr		1466025	1					
ANR	1468632	Identifier	CHAR_NULL		1466025	1					
ANR	1468633	AndExpression	! inescq && * ptr == CHAR_RIGHT_SQUARE_BRACKET		1466025	1		&&			
ANR	1468634	UnaryOperationExpression	! inescq		1466025	0					
ANR	1468635	UnaryOperator	!		1466025	0					
ANR	1468636	Identifier	inescq		1466025	1					
ANR	1468637	EqualityExpression	* ptr == CHAR_RIGHT_SQUARE_BRACKET		1466025	1		==			
ANR	1468638	UnaryOperationExpression	* ptr		1466025	0					
ANR	1468639	UnaryOperator	*		1466025	0					
ANR	1468640	Identifier	ptr		1466025	1					
ANR	1468641	Identifier	CHAR_RIGHT_SQUARE_BRACKET		1466025	1					
ANR	1468642	CompoundStatement		839:10:28449:28449	1466025	1					
ANR	1468643	ExpressionStatement	ptr = oldptr	5279:10:167706:167718	1466025	0	True				
ANR	1468644	AssignmentExpression	ptr = oldptr		1466025	0		=			
ANR	1468645	Identifier	ptr		1466025	0					
ANR	1468646	Identifier	oldptr		1466025	1					
ANR	1468647	GotoStatement	goto CLASS_SINGLE_CHARACTER ;	5280:10:167730:167757	1466025	1	True				
ANR	1468648	Identifier	CLASS_SINGLE_CHARACTER		1466025	0					
ANR	1468649	IfStatement	if ( utf )		1466025	5					
ANR	1468650	Condition	utf	5286:12:167883:167885	1466025	0	True				
ANR	1468651	Identifier	utf		1466025	0					
ANR	1468652	CompoundStatement		848:10:28653:28653	1466025	1					
ANR	1468653	ExpressionStatement	"GETCHARLEN ( d , ptr , ptr )"	5288:10:167974:167997	1466025	0	True				
ANR	1468654	CallExpression	"GETCHARLEN ( d , ptr , ptr )"		1466025	0					
ANR	1468655	Callee	GETCHARLEN		1466025	0					
ANR	1468656	Identifier	GETCHARLEN		1466025	0					
ANR	1468657	ArgumentList	d		1466025	1					
ANR	1468658	Argument	d		1466025	0					
ANR	1468659	Identifier	d		1466025	0					
ANR	1468660	Argument	ptr		1466025	1					
ANR	1468661	Identifier	ptr		1466025	0					
ANR	1468662	Argument	ptr		1466025	2					
ANR	1468663	Identifier	ptr		1466025	0					
ANR	1468664	ElseStatement	else		1466025	0					
ANR	1468665	ExpressionStatement	d = * ptr	5292:8:168084:168092	1466025	0	True				
ANR	1468666	AssignmentExpression	d = * ptr		1466025	0		=			
ANR	1468667	Identifier	d		1466025	0					
ANR	1468668	UnaryOperationExpression	* ptr		1466025	1					
ANR	1468669	UnaryOperator	*		1466025	0					
ANR	1468670	Identifier	ptr		1466025	1					
ANR	1468671	IfStatement	if ( ! inescq )		1466025	6					
ANR	1468672	Condition	! inescq	5300:12:168468:168474	1466025	0	True				
ANR	1468673	UnaryOperationExpression	! inescq		1466025	0					
ANR	1468674	UnaryOperator	!		1466025	0					
ANR	1468675	Identifier	inescq		1466025	1					
ANR	1468676	CompoundStatement		862:10:29242:29242	1466025	1					
ANR	1468677	IfStatement	if ( d == CHAR_BACKSLASH )		1466025	0					
ANR	1468678	Condition	d == CHAR_BACKSLASH	5302:14:168503:168521	1466025	0	True				
ANR	1468679	EqualityExpression	d == CHAR_BACKSLASH		1466025	0		==			
ANR	1468680	Identifier	d		1466025	0					
ANR	1468681	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1468682	CompoundStatement		865:12:29305:29316	1466025	1					
ANR	1468683	IdentifierDeclStatement	int descape ;	5304:12:168550:168561	1466025	0	True				
ANR	1468684	IdentifierDecl	descape		1466025	0					
ANR	1468685	IdentifierDeclType	int		1466025	0					
ANR	1468686	Identifier	descape		1466025	1					
ANR	1468687	ExpressionStatement	"descape = check_escape ( & ptr , & d , errorcodeptr , cd -> bracount , options , TRUE )"	5305:12:168575:168650	1466025	1	True				
ANR	1468688	AssignmentExpression	"descape = check_escape ( & ptr , & d , errorcodeptr , cd -> bracount , options , TRUE )"		1466025	0		=			
ANR	1468689	Identifier	descape		1466025	0					
ANR	1468690	CallExpression	"check_escape ( & ptr , & d , errorcodeptr , cd -> bracount , options , TRUE )"		1466025	1					
ANR	1468691	Callee	check_escape		1466025	0					
ANR	1468692	Identifier	check_escape		1466025	0					
ANR	1468693	ArgumentList	& ptr		1466025	1					
ANR	1468694	Argument	& ptr		1466025	0					
ANR	1468695	UnaryOperationExpression	& ptr		1466025	0					
ANR	1468696	UnaryOperator	&		1466025	0					
ANR	1468697	Identifier	ptr		1466025	1					
ANR	1468698	Argument	& d		1466025	1					
ANR	1468699	UnaryOperationExpression	& d		1466025	0					
ANR	1468700	UnaryOperator	&		1466025	0					
ANR	1468701	Identifier	d		1466025	1					
ANR	1468702	Argument	errorcodeptr		1466025	2					
ANR	1468703	Identifier	errorcodeptr		1466025	0					
ANR	1468704	Argument	cd -> bracount		1466025	3					
ANR	1468705	PtrMemberAccess	cd -> bracount		1466025	0					
ANR	1468706	Identifier	cd		1466025	0					
ANR	1468707	Identifier	bracount		1466025	1					
ANR	1468708	Argument	options		1466025	4					
ANR	1468709	Identifier	options		1466025	0					
ANR	1468710	Argument	TRUE		1466025	5					
ANR	1468711	Identifier	TRUE		1466025	0					
ANR	1468712	IfStatement	if ( * errorcodeptr != 0 )		1466025	2					
ANR	1468713	Condition	* errorcodeptr != 0	5306:16:168668:168685	1466025	0	True				
ANR	1468714	EqualityExpression	* errorcodeptr != 0		1466025	0		!=			
ANR	1468715	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1468716	UnaryOperator	*		1466025	0					
ANR	1468717	Identifier	errorcodeptr		1466025	1					
ANR	1468718	PrimaryExpression	0		1466025	1					
ANR	1468719	GotoStatement	goto FAILED ;	5306:36:168688:168699	1466025	1	True				
ANR	1468720	Identifier	FAILED		1466025	0					
ANR	1468721	IfStatement	if ( descape != 0 )		1466025	3					
ANR	1468722	Condition	descape != 0	5311:16:168837:168848	1466025	0	True				
ANR	1468723	EqualityExpression	descape != 0		1466025	0		!=			
ANR	1468724	Identifier	descape		1466025	0					
ANR	1468725	PrimaryExpression	0		1466025	1					
ANR	1468726	CompoundStatement		873:14:29620:29620	1466025	1					
ANR	1468727	IfStatement	if ( descape == ESC_b )		1466025	0					
ANR	1468728	Condition	descape == ESC_b	5313:18:168885:168900	1466025	0	True				
ANR	1468729	EqualityExpression	descape == ESC_b		1466025	0		==			
ANR	1468730	Identifier	descape		1466025	0					
ANR	1468731	Identifier	ESC_b		1466025	1					
ANR	1468732	ExpressionStatement	d = CHAR_BS	5313:36:168903:168914	1466025	1	True				
ANR	1468733	AssignmentExpression	d = CHAR_BS		1466025	0		=			
ANR	1468734	Identifier	d		1466025	0					
ANR	1468735	Identifier	CHAR_BS		1466025	1					
ANR	1468736	ElseStatement	else		1466025	0					
ANR	1468737	CompoundStatement		875:16:29692:29692	1466025	0					
ANR	1468738	ExpressionStatement	* errorcodeptr = ERR83	5315:16:168955:168976	1466025	0	True				
ANR	1468739	AssignmentExpression	* errorcodeptr = ERR83		1466025	0		=			
ANR	1468740	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1468741	UnaryOperator	*		1466025	0					
ANR	1468742	Identifier	errorcodeptr		1466025	1					
ANR	1468743	Identifier	ERR83		1466025	1					
ANR	1468744	GotoStatement	goto FAILED ;	5316:16:168994:169005	1466025	1	True				
ANR	1468745	Identifier	FAILED		1466025	0					
ANR	1468746	ElseStatement	else		1466025	0					
ANR	1468747	IfStatement	"if ( d == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr ) )"		1466025	0					
ANR	1468748	Condition	"d == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"	5323:19:169155:169356	1466025	0	True				
ANR	1468749	AndExpression	"d == CHAR_LEFT_SQUARE_BRACKET && ( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		1466025	0		&&			
ANR	1468750	EqualityExpression	d == CHAR_LEFT_SQUARE_BRACKET		1466025	0		==			
ANR	1468751	Identifier	d		1466025	0					
ANR	1468752	Identifier	CHAR_LEFT_SQUARE_BRACKET		1466025	1					
ANR	1468753	AndExpression	"( ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN ) && check_posix_syntax ( ptr , & tempptr )"		1466025	1		&&			
ANR	1468754	OrExpression	ptr [ 1 ] == CHAR_COLON || ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		1466025	0		||			
ANR	1468755	EqualityExpression	ptr [ 1 ] == CHAR_COLON		1466025	0		==			
ANR	1468756	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468757	Identifier	ptr		1466025	0					
ANR	1468758	PrimaryExpression	1		1466025	1					
ANR	1468759	Identifier	CHAR_COLON		1466025	1					
ANR	1468760	OrExpression	ptr [ 1 ] == CHAR_DOT || ptr [ 1 ] == CHAR_EQUALS_SIGN		1466025	1		||			
ANR	1468761	EqualityExpression	ptr [ 1 ] == CHAR_DOT		1466025	0		==			
ANR	1468762	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468763	Identifier	ptr		1466025	0					
ANR	1468764	PrimaryExpression	1		1466025	1					
ANR	1468765	Identifier	CHAR_DOT		1466025	1					
ANR	1468766	EqualityExpression	ptr [ 1 ] == CHAR_EQUALS_SIGN		1466025	1		==			
ANR	1468767	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468768	Identifier	ptr		1466025	0					
ANR	1468769	PrimaryExpression	1		1466025	1					
ANR	1468770	Identifier	CHAR_EQUALS_SIGN		1466025	1					
ANR	1468771	CallExpression	"check_posix_syntax ( ptr , & tempptr )"		1466025	1					
ANR	1468772	Callee	check_posix_syntax		1466025	0					
ANR	1468773	Identifier	check_posix_syntax		1466025	0					
ANR	1468774	ArgumentList	ptr		1466025	1					
ANR	1468775	Argument	ptr		1466025	0					
ANR	1468776	Identifier	ptr		1466025	0					
ANR	1468777	Argument	& tempptr		1466025	1					
ANR	1468778	UnaryOperationExpression	& tempptr		1466025	0					
ANR	1468779	UnaryOperator	&		1466025	0					
ANR	1468780	Identifier	tempptr		1466025	1					
ANR	1468781	CompoundStatement		888:12:30126:30126	1466025	1					
ANR	1468782	ExpressionStatement	* errorcodeptr = ERR83	5328:12:169385:169406	1466025	0	True				
ANR	1468783	AssignmentExpression	* errorcodeptr = ERR83		1466025	0		=			
ANR	1468784	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1468785	UnaryOperator	*		1466025	0					
ANR	1468786	Identifier	errorcodeptr		1466025	1					
ANR	1468787	Identifier	ERR83		1466025	1					
ANR	1468788	GotoStatement	goto FAILED ;	5329:12:169420:169431	1466025	1	True				
ANR	1468789	Identifier	FAILED		1466025	0					
ANR	1468790	IfStatement	if ( d < c )		1466025	7					
ANR	1468791	Condition	d < c	5336:12:169578:169582	1466025	0	True				
ANR	1468792	RelationalExpression	d < c		1466025	0		<			
ANR	1468793	Identifier	d		1466025	0					
ANR	1468794	Identifier	c		1466025	1					
ANR	1468795	CompoundStatement		898:10:30350:30350	1466025	1					
ANR	1468796	ExpressionStatement	* errorcodeptr = ERR8	5338:10:169607:169627	1466025	0	True				
ANR	1468797	AssignmentExpression	* errorcodeptr = ERR8		1466025	0		=			
ANR	1468798	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1468799	UnaryOperator	*		1466025	0					
ANR	1468800	Identifier	errorcodeptr		1466025	1					
ANR	1468801	Identifier	ERR8		1466025	1					
ANR	1468802	GotoStatement	goto FAILED ;	5339:10:169639:169650	1466025	1	True				
ANR	1468803	Identifier	FAILED		1466025	0					
ANR	1468804	IfStatement	if ( d == c )		1466025	8					
ANR	1468805	Condition	d == c	5341:12:169676:169681	1466025	0	True				
ANR	1468806	EqualityExpression	d == c		1466025	0		==			
ANR	1468807	Identifier	d		1466025	0					
ANR	1468808	Identifier	c		1466025	1					
ANR	1468809	GotoStatement	goto CLASS_SINGLE_CHARACTER ;	5341:20:169684:169711	1466025	1	True				
ANR	1468810	Identifier	CLASS_SINGLE_CHARACTER		1466025	0					
ANR	1468811	ExpressionStatement	class_one_char = 2	5347:8:169943:169961	1466025	9	True				
ANR	1468812	AssignmentExpression	class_one_char = 2		1466025	0		=			
ANR	1468813	Identifier	class_one_char		1466025	0					
ANR	1468814	PrimaryExpression	2		1466025	1					
ANR	1468815	IfStatement	if ( d == CHAR_CR || d == CHAR_NL )		1466025	10					
ANR	1468816	Condition	d == CHAR_CR || d == CHAR_NL	5351:12:170054:170081	1466025	0	True				
ANR	1468817	OrExpression	d == CHAR_CR || d == CHAR_NL		1466025	0		||			
ANR	1468818	EqualityExpression	d == CHAR_CR		1466025	0		==			
ANR	1468819	Identifier	d		1466025	0					
ANR	1468820	Identifier	CHAR_CR		1466025	1					
ANR	1468821	EqualityExpression	d == CHAR_NL		1466025	1		==			
ANR	1468822	Identifier	d		1466025	0					
ANR	1468823	Identifier	CHAR_NL		1466025	1					
ANR	1468824	ExpressionStatement	cd -> external_flags |= PCRE_HASCRORLF	5351:42:170084:170120	1466025	1	True				
ANR	1468825	AssignmentExpression	cd -> external_flags |= PCRE_HASCRORLF		1466025	0		|=			
ANR	1468826	PtrMemberAccess	cd -> external_flags		1466025	0					
ANR	1468827	Identifier	cd		1466025	0					
ANR	1468828	Identifier	external_flags		1466025	1					
ANR	1468829	Identifier	PCRE_HASCRORLF		1466025	1					
ANR	1468830	ExpressionStatement	"class_has_8bitchar += add_to_class ( classbits , & class_uchardata , options , cd , c , d )"	5353:8:170131:170223	1466025	11	True				
ANR	1468831	AssignmentExpression	"class_has_8bitchar += add_to_class ( classbits , & class_uchardata , options , cd , c , d )"		1466025	0		+=			
ANR	1468832	Identifier	class_has_8bitchar		1466025	0					
ANR	1468833	CallExpression	"add_to_class ( classbits , & class_uchardata , options , cd , c , d )"		1466025	1					
ANR	1468834	Callee	add_to_class		1466025	0					
ANR	1468835	Identifier	add_to_class		1466025	0					
ANR	1468836	ArgumentList	classbits		1466025	1					
ANR	1468837	Argument	classbits		1466025	0					
ANR	1468838	Identifier	classbits		1466025	0					
ANR	1468839	Argument	& class_uchardata		1466025	1					
ANR	1468840	UnaryOperationExpression	& class_uchardata		1466025	0					
ANR	1468841	UnaryOperator	&		1466025	0					
ANR	1468842	Identifier	class_uchardata		1466025	1					
ANR	1468843	Argument	options		1466025	2					
ANR	1468844	Identifier	options		1466025	0					
ANR	1468845	Argument	cd		1466025	3					
ANR	1468846	Identifier	cd		1466025	0					
ANR	1468847	Argument	c		1466025	4					
ANR	1468848	Identifier	c		1466025	0					
ANR	1468849	Argument	d		1466025	5					
ANR	1468850	Identifier	d		1466025	0					
ANR	1468851	ContinueStatement	continue ;	5356:8:170234:170242	1466025	12	True				
ANR	1468852	Label	CLASS_SINGLE_CHARACTER :	5365:6:170656:170678	1466025	11	True				
ANR	1468853	Identifier	CLASS_SINGLE_CHARACTER		1466025	0					
ANR	1468854	IfStatement	if ( class_one_char < 2 )		1466025	12					
ANR	1468855	Condition	class_one_char < 2	5366:10:170690:170707	1466025	0	True				
ANR	1468856	RelationalExpression	class_one_char < 2		1466025	0		<			
ANR	1468857	Identifier	class_one_char		1466025	0					
ANR	1468858	PrimaryExpression	2		1466025	1					
ANR	1468859	ExpressionStatement	class_one_char ++	5366:30:170710:170726	1466025	1	True				
ANR	1468860	PostIncDecOperationExpression	class_one_char ++		1466025	0					
ANR	1468861	Identifier	class_one_char		1466025	0					
ANR	1468862	IncDec	++		1466025	1					
ANR	1468863	IfStatement	if ( ! inescq && class_one_char == 1 && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET )		1466025	13					
ANR	1468864	Condition	! inescq && class_one_char == 1 && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET	5377:10:171318:171386	1466025	0	True				
ANR	1468865	AndExpression	! inescq && class_one_char == 1 && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		1466025	0		&&			
ANR	1468866	UnaryOperationExpression	! inescq		1466025	0					
ANR	1468867	UnaryOperator	!		1466025	0					
ANR	1468868	Identifier	inescq		1466025	1					
ANR	1468869	AndExpression	class_one_char == 1 && ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		1466025	1		&&			
ANR	1468870	EqualityExpression	class_one_char == 1		1466025	0		==			
ANR	1468871	Identifier	class_one_char		1466025	0					
ANR	1468872	PrimaryExpression	1		1466025	1					
ANR	1468873	EqualityExpression	ptr [ 1 ] == CHAR_RIGHT_SQUARE_BRACKET		1466025	1		==			
ANR	1468874	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1468875	Identifier	ptr		1466025	0					
ANR	1468876	PrimaryExpression	1		1466025	1					
ANR	1468877	Identifier	CHAR_RIGHT_SQUARE_BRACKET		1466025	1					
ANR	1468878	CompoundStatement		939:8:32152:32152	1466025	1					
ANR	1468879	ExpressionStatement	ptr ++	5379:8:171407:171412	1466025	0	True				
ANR	1468880	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1468881	Identifier	ptr		1466025	0					
ANR	1468882	IncDec	++		1466025	1					
ANR	1468883	ExpressionStatement	zeroreqchar = reqchar	5380:8:171422:171443	1466025	1	True				
ANR	1468884	AssignmentExpression	zeroreqchar = reqchar		1466025	0		=			
ANR	1468885	Identifier	zeroreqchar		1466025	0					
ANR	1468886	Identifier	reqchar		1466025	1					
ANR	1468887	ExpressionStatement	zeroreqcharflags = reqcharflags	5381:8:171453:171484	1466025	2	True				
ANR	1468888	AssignmentExpression	zeroreqcharflags = reqcharflags		1466025	0		=			
ANR	1468889	Identifier	zeroreqcharflags		1466025	0					
ANR	1468890	Identifier	reqcharflags		1466025	1					
ANR	1468891	IfStatement	if ( negate_class )		1466025	3					
ANR	1468892	Condition	negate_class	5383:12:171499:171510	1466025	0	True				
ANR	1468893	Identifier	negate_class		1466025	0					
ANR	1468894	CompoundStatement		947:10:32309:32314	1466025	1					
ANR	1468895	IdentifierDeclStatement	int d ;	5386:10:171554:171559	1466025	0	True				
ANR	1468896	IdentifierDecl	d		1466025	0					
ANR	1468897	IdentifierDeclType	int		1466025	0					
ANR	1468898	Identifier	d		1466025	1					
ANR	1468899	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	1					
ANR	1468900	Condition	firstcharflags == REQ_UNSET	5388:14:171582:171608	1466025	0	True				
ANR	1468901	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1468902	Identifier	firstcharflags		1466025	0					
ANR	1468903	Identifier	REQ_UNSET		1466025	1					
ANR	1468904	ExpressionStatement	firstcharflags = REQ_NONE	5388:43:171611:171636	1466025	1	True				
ANR	1468905	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1468906	Identifier	firstcharflags		1466025	0					
ANR	1468907	Identifier	REQ_NONE		1466025	1					
ANR	1468908	ExpressionStatement	zerofirstchar = firstchar	5389:10:171648:171673	1466025	2	True				
ANR	1468909	AssignmentExpression	zerofirstchar = firstchar		1466025	0		=			
ANR	1468910	Identifier	zerofirstchar		1466025	0					
ANR	1468911	Identifier	firstchar		1466025	1					
ANR	1468912	ExpressionStatement	zerofirstcharflags = firstcharflags	5390:10:171685:171720	1466025	3	True				
ANR	1468913	AssignmentExpression	zerofirstcharflags = firstcharflags		1466025	0		=			
ANR	1468914	Identifier	zerofirstcharflags		1466025	0					
ANR	1468915	Identifier	firstcharflags		1466025	1					
ANR	1468916	IfStatement	if ( utf && ( options & PCRE_CASELESS ) != 0 && ( d = UCD_CASESET ( c ) ) != 0 )		1466025	4					
ANR	1468917	Condition	utf && ( options & PCRE_CASELESS ) != 0 && ( d = UCD_CASESET ( c ) ) != 0	5397:14:171969:172048	1466025	0	True				
ANR	1468918	AndExpression	utf && ( options & PCRE_CASELESS ) != 0 && ( d = UCD_CASESET ( c ) ) != 0		1466025	0		&&			
ANR	1468919	Identifier	utf		1466025	0					
ANR	1468920	AndExpression	( options & PCRE_CASELESS ) != 0 && ( d = UCD_CASESET ( c ) ) != 0		1466025	1		&&			
ANR	1468921	EqualityExpression	( options & PCRE_CASELESS ) != 0		1466025	0		!=			
ANR	1468922	BitAndExpression	options & PCRE_CASELESS		1466025	0		&			
ANR	1468923	Identifier	options		1466025	0					
ANR	1468924	Identifier	PCRE_CASELESS		1466025	1					
ANR	1468925	PrimaryExpression	0		1466025	1					
ANR	1468926	EqualityExpression	( d = UCD_CASESET ( c ) ) != 0		1466025	1		!=			
ANR	1468927	AssignmentExpression	d = UCD_CASESET ( c )		1466025	0		=			
ANR	1468928	Identifier	d		1466025	0					
ANR	1468929	CallExpression	UCD_CASESET ( c )		1466025	1					
ANR	1468930	Callee	UCD_CASESET		1466025	0					
ANR	1468931	Identifier	UCD_CASESET		1466025	0					
ANR	1468932	ArgumentList	c		1466025	1					
ANR	1468933	Argument	c		1466025	0					
ANR	1468934	Identifier	c		1466025	0					
ANR	1468935	PrimaryExpression	0		1466025	1					
ANR	1468936	CompoundStatement		960:12:32818:32818	1466025	1					
ANR	1468937	ExpressionStatement	* code ++ = OP_NOTPROP	5400:12:172077:172097	1466025	0	True				
ANR	1468938	AssignmentExpression	* code ++ = OP_NOTPROP		1466025	0		=			
ANR	1468939	UnaryOperationExpression	* code ++		1466025	0					
ANR	1468940	UnaryOperator	*		1466025	0					
ANR	1468941	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1468942	Identifier	code		1466025	0					
ANR	1468943	IncDec	++		1466025	1					
ANR	1468944	Identifier	OP_NOTPROP		1466025	1					
ANR	1468945	ExpressionStatement	* code ++ = PT_CLIST	5401:12:172111:172129	1466025	1	True				
ANR	1468946	AssignmentExpression	* code ++ = PT_CLIST		1466025	0		=			
ANR	1468947	UnaryOperationExpression	* code ++		1466025	0					
ANR	1468948	UnaryOperator	*		1466025	0					
ANR	1468949	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1468950	Identifier	code		1466025	0					
ANR	1468951	IncDec	++		1466025	1					
ANR	1468952	Identifier	PT_CLIST		1466025	1					
ANR	1468953	ExpressionStatement	* code ++ = d	5402:12:172143:172154	1466025	2	True				
ANR	1468954	AssignmentExpression	* code ++ = d		1466025	0		=			
ANR	1468955	UnaryOperationExpression	* code ++		1466025	0					
ANR	1468956	UnaryOperator	*		1466025	0					
ANR	1468957	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1468958	Identifier	code		1466025	0					
ANR	1468959	IncDec	++		1466025	1					
ANR	1468960	Identifier	d		1466025	1					
ANR	1468961	ElseStatement	else		1466025	0					
ANR	1468962	CompoundStatement		969:12:33027:33027	1466025	0					
ANR	1468963	ExpressionStatement	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_NOTI : OP_NOT	5409:12:172286:172345	1466025	0	True				
ANR	1468964	AssignmentExpression	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_NOTI : OP_NOT		1466025	0		=			
ANR	1468965	UnaryOperationExpression	* code ++		1466025	0					
ANR	1468966	UnaryOperator	*		1466025	0					
ANR	1468967	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1468968	Identifier	code		1466025	0					
ANR	1468969	IncDec	++		1466025	1					
ANR	1468970	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? OP_NOTI : OP_NOT		1466025	1					
ANR	1468971	Condition	( options & PCRE_CASELESS ) != 0		1466025	0					
ANR	1468972	EqualityExpression	( options & PCRE_CASELESS ) != 0		1466025	0		!=			
ANR	1468973	BitAndExpression	options & PCRE_CASELESS		1466025	0		&			
ANR	1468974	Identifier	options		1466025	0					
ANR	1468975	Identifier	PCRE_CASELESS		1466025	1					
ANR	1468976	PrimaryExpression	0		1466025	1					
ANR	1468977	Identifier	OP_NOTI		1466025	1					
ANR	1468978	Identifier	OP_NOT		1466025	2					
ANR	1468979	IfStatement	if ( utf && c > MAX_VALUE_FOR_SINGLE_CHAR )		1466025	1					
ANR	1468980	Condition	utf && c > MAX_VALUE_FOR_SINGLE_CHAR	5411:16:172414:172449	1466025	0	True				
ANR	1468981	AndExpression	utf && c > MAX_VALUE_FOR_SINGLE_CHAR		1466025	0		&&			
ANR	1468982	Identifier	utf		1466025	0					
ANR	1468983	RelationalExpression	c > MAX_VALUE_FOR_SINGLE_CHAR		1466025	1		>			
ANR	1468984	Identifier	c		1466025	0					
ANR	1468985	Identifier	MAX_VALUE_FOR_SINGLE_CHAR		1466025	1					
ANR	1468986	ExpressionStatement	"code += PRIV ( ord2utf ) ( c , code )"	5412:14:172466:172496	1466025	1	True				
ANR	1468987	AssignmentExpression	"code += PRIV ( ord2utf ) ( c , code )"		1466025	0		+=			
ANR	1468988	Identifier	code		1466025	0					
ANR	1468989	CallExpression	"PRIV ( ord2utf ) ( c , code )"		1466025	1					
ANR	1468990	Callee	PRIV ( ord2utf )		1466025	0					
ANR	1468991	CallExpression	PRIV ( ord2utf )		1466025	0					
ANR	1468992	Callee	PRIV		1466025	0					
ANR	1468993	Identifier	PRIV		1466025	0					
ANR	1468994	ArgumentList	ord2utf		1466025	1					
ANR	1468995	Argument	ord2utf		1466025	0					
ANR	1468996	Identifier	ord2utf		1466025	0					
ANR	1468997	ArgumentList	c		1466025	1					
ANR	1468998	Argument	c		1466025	0					
ANR	1468999	Identifier	c		1466025	0					
ANR	1469000	Argument	code		1466025	1					
ANR	1469001	Identifier	code		1466025	0					
ANR	1469002	ElseStatement	else		1466025	0					
ANR	1469003	ExpressionStatement	* code ++ = c	5415:14:172536:172547	1466025	0	True				
ANR	1469004	AssignmentExpression	* code ++ = c		1466025	0		=			
ANR	1469005	UnaryOperationExpression	* code ++		1466025	0					
ANR	1469006	UnaryOperator	*		1466025	0					
ANR	1469007	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1469008	Identifier	code		1466025	0					
ANR	1469009	IncDec	++		1466025	1					
ANR	1469010	Identifier	c		1466025	1					
ANR	1469011	GotoStatement	goto END_CLASS ;	5420:10:172633:172647	1466025	5	True				
ANR	1469012	Identifier	END_CLASS		1466025	0					
ANR	1469013	IfStatement	if ( utf && c > MAX_VALUE_FOR_SINGLE_CHAR )		1466025	4					
ANR	1469014	Condition	utf && c > MAX_VALUE_FOR_SINGLE_CHAR	5427:12:172875:172910	1466025	0	True				
ANR	1469015	AndExpression	utf && c > MAX_VALUE_FOR_SINGLE_CHAR		1466025	0		&&			
ANR	1469016	Identifier	utf		1466025	0					
ANR	1469017	RelationalExpression	c > MAX_VALUE_FOR_SINGLE_CHAR		1466025	1		>			
ANR	1469018	Identifier	c		1466025	0					
ANR	1469019	Identifier	MAX_VALUE_FOR_SINGLE_CHAR		1466025	1					
ANR	1469020	ExpressionStatement	"mclength = PRIV ( ord2utf ) ( c , mcbuffer )"	5428:10:172923:172960	1466025	1	True				
ANR	1469021	AssignmentExpression	"mclength = PRIV ( ord2utf ) ( c , mcbuffer )"		1466025	0		=			
ANR	1469022	Identifier	mclength		1466025	0					
ANR	1469023	CallExpression	"PRIV ( ord2utf ) ( c , mcbuffer )"		1466025	1					
ANR	1469024	Callee	PRIV ( ord2utf )		1466025	0					
ANR	1469025	CallExpression	PRIV ( ord2utf )		1466025	0					
ANR	1469026	Callee	PRIV		1466025	0					
ANR	1469027	Identifier	PRIV		1466025	0					
ANR	1469028	ArgumentList	ord2utf		1466025	1					
ANR	1469029	Argument	ord2utf		1466025	0					
ANR	1469030	Identifier	ord2utf		1466025	0					
ANR	1469031	ArgumentList	c		1466025	1					
ANR	1469032	Argument	c		1466025	0					
ANR	1469033	Identifier	c		1466025	0					
ANR	1469034	Argument	mcbuffer		1466025	1					
ANR	1469035	Identifier	mcbuffer		1466025	0					
ANR	1469036	ElseStatement	else		1466025	0					
ANR	1469037	CompoundStatement		992:10:33747:33747	1466025	0					
ANR	1469038	ExpressionStatement	mcbuffer [ 0 ] = c	5432:10:173004:173019	1466025	0	True				
ANR	1469039	AssignmentExpression	mcbuffer [ 0 ] = c		1466025	0		=			
ANR	1469040	ArrayIndexing	mcbuffer [ 0 ]		1466025	0					
ANR	1469041	Identifier	mcbuffer		1466025	0					
ANR	1469042	PrimaryExpression	0		1466025	1					
ANR	1469043	Identifier	c		1466025	1					
ANR	1469044	ExpressionStatement	mclength = 1	5433:10:173031:173043	1466025	1	True				
ANR	1469045	AssignmentExpression	mclength = 1		1466025	0		=			
ANR	1469046	Identifier	mclength		1466025	0					
ANR	1469047	PrimaryExpression	1		1466025	1					
ANR	1469048	GotoStatement	goto ONE_CHAR ;	5435:8:173065:173078	1466025	5	True				
ANR	1469049	Identifier	ONE_CHAR		1466025	0					
ANR	1469050	ExpressionStatement	"class_has_8bitchar += add_to_class ( classbits , & class_uchardata , options , cd , c , c )"	5441:6:173273:173363	1466025	14	True				
ANR	1469051	AssignmentExpression	"class_has_8bitchar += add_to_class ( classbits , & class_uchardata , options , cd , c , c )"		1466025	0		+=			
ANR	1469052	Identifier	class_has_8bitchar		1466025	0					
ANR	1469053	CallExpression	"add_to_class ( classbits , & class_uchardata , options , cd , c , c )"		1466025	1					
ANR	1469054	Callee	add_to_class		1466025	0					
ANR	1469055	Identifier	add_to_class		1466025	0					
ANR	1469056	ArgumentList	classbits		1466025	1					
ANR	1469057	Argument	classbits		1466025	0					
ANR	1469058	Identifier	classbits		1466025	0					
ANR	1469059	Argument	& class_uchardata		1466025	1					
ANR	1469060	UnaryOperationExpression	& class_uchardata		1466025	0					
ANR	1469061	UnaryOperator	&		1466025	0					
ANR	1469062	Identifier	class_uchardata		1466025	1					
ANR	1469063	Argument	options		1466025	2					
ANR	1469064	Identifier	options		1466025	0					
ANR	1469065	Argument	cd		1466025	3					
ANR	1469066	Identifier	cd		1466025	0					
ANR	1469067	Argument	c		1466025	4					
ANR	1469068	Identifier	c		1466025	0					
ANR	1469069	Argument	c		1466025	5					
ANR	1469070	Identifier	c		1466025	0					
ANR	1469071	Condition	"( ( c = * ( ++ ptr ) ) != CHAR_NULL || ( nestptr != NULL && ( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL ) ) && ( c != CHAR_RIGHT_SQUARE_BRACKET || inescq )"	5449:11:173554:173746	1466025	1	True				
ANR	1469072	AndExpression	"( ( c = * ( ++ ptr ) ) != CHAR_NULL || ( nestptr != NULL && ( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL ) ) && ( c != CHAR_RIGHT_SQUARE_BRACKET || inescq )"		1466025	0		&&			
ANR	1469073	OrExpression	"( c = * ( ++ ptr ) ) != CHAR_NULL || ( nestptr != NULL && ( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL )"		1466025	0		||			
ANR	1469074	EqualityExpression	( c = * ( ++ ptr ) ) != CHAR_NULL		1466025	0		!=			
ANR	1469075	AssignmentExpression	c = * ( ++ ptr )		1466025	0		=			
ANR	1469076	Identifier	c		1466025	0					
ANR	1469077	UnaryOperationExpression	* ( ++ ptr )		1466025	1					
ANR	1469078	UnaryOperator	*		1466025	0					
ANR	1469079	UnaryExpression	++ ptr		1466025	1					
ANR	1469080	IncDec	++		1466025	0					
ANR	1469081	Identifier	ptr		1466025	1					
ANR	1469082	Identifier	CHAR_NULL		1466025	1					
ANR	1469083	AndExpression	"nestptr != NULL && ( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL"		1466025	1		&&			
ANR	1469084	EqualityExpression	nestptr != NULL		1466025	0		!=			
ANR	1469085	Identifier	nestptr		1466025	0					
ANR	1469086	Identifier	NULL		1466025	1					
ANR	1469087	EqualityExpression	"( ptr = nestptr , nestptr = NULL , c = * ( ++ ptr ) ) != CHAR_NULL"		1466025	1		!=			
ANR	1469088	Expression	"ptr = nestptr , nestptr = NULL , c = * ( ++ ptr )"		1466025	0					
ANR	1469089	AssignmentExpression	ptr = nestptr		1466025	0		=			
ANR	1469090	Identifier	ptr		1466025	0					
ANR	1469091	Identifier	nestptr		1466025	1					
ANR	1469092	Expression	"nestptr = NULL , c = * ( ++ ptr )"		1466025	1					
ANR	1469093	AssignmentExpression	nestptr = NULL		1466025	0		=			
ANR	1469094	Identifier	nestptr		1466025	0					
ANR	1469095	Identifier	NULL		1466025	1					
ANR	1469096	AssignmentExpression	c = * ( ++ ptr )		1466025	1		=			
ANR	1469097	Identifier	c		1466025	0					
ANR	1469098	UnaryOperationExpression	* ( ++ ptr )		1466025	1					
ANR	1469099	UnaryOperator	*		1466025	0					
ANR	1469100	UnaryExpression	++ ptr		1466025	1					
ANR	1469101	IncDec	++		1466025	0					
ANR	1469102	Identifier	ptr		1466025	1					
ANR	1469103	Identifier	CHAR_NULL		1466025	1					
ANR	1469104	OrExpression	c != CHAR_RIGHT_SQUARE_BRACKET || inescq		1466025	1		||			
ANR	1469105	EqualityExpression	c != CHAR_RIGHT_SQUARE_BRACKET		1466025	0		!=			
ANR	1469106	Identifier	c		1466025	0					
ANR	1469107	Identifier	CHAR_RIGHT_SQUARE_BRACKET		1466025	1					
ANR	1469108	Identifier	inescq		1466025	1					
ANR	1469109	IfStatement	if ( c == CHAR_NULL )		1466025	48					
ANR	1469110	Condition	c == CHAR_NULL	5456:8:173804:173817	1466025	0	True				
ANR	1469111	EqualityExpression	c == CHAR_NULL		1466025	0		==			
ANR	1469112	Identifier	c		1466025	0					
ANR	1469113	Identifier	CHAR_NULL		1466025	1					
ANR	1469114	CompoundStatement		1018:6:34581:34581	1466025	1					
ANR	1469115	ExpressionStatement	* errorcodeptr = ERR6	5458:6:173834:173854	1466025	0	True				
ANR	1469116	AssignmentExpression	* errorcodeptr = ERR6		1466025	0		=			
ANR	1469117	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1469118	UnaryOperator	*		1466025	0					
ANR	1469119	Identifier	errorcodeptr		1466025	1					
ANR	1469120	Identifier	ERR6		1466025	1					
ANR	1469121	GotoStatement	goto FAILED ;	5459:6:173862:173873	1466025	1	True				
ANR	1469122	Identifier	FAILED		1466025	0					
ANR	1469123	IfStatement	if ( class_uchardata > class_uchardata_base )		1466025	49					
ANR	1469124	Condition	class_uchardata > class_uchardata_base	5471:8:174469:174506	1466025	0	True				
ANR	1469125	RelationalExpression	class_uchardata > class_uchardata_base		1466025	0		>			
ANR	1469126	Identifier	class_uchardata		1466025	0					
ANR	1469127	Identifier	class_uchardata_base		1466025	1					
ANR	1469128	ExpressionStatement	xclass = TRUE	5471:48:174509:174522	1466025	1	True				
ANR	1469129	AssignmentExpression	xclass = TRUE		1466025	0		=			
ANR	1469130	Identifier	xclass		1466025	0					
ANR	1469131	Identifier	TRUE		1466025	1					
ANR	1469132	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	50					
ANR	1469133	Condition	firstcharflags == REQ_UNSET	5478:8:174732:174758	1466025	0	True				
ANR	1469134	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1469135	Identifier	firstcharflags		1466025	0					
ANR	1469136	Identifier	REQ_UNSET		1466025	1					
ANR	1469137	ExpressionStatement	firstcharflags = REQ_NONE	5478:37:174761:174786	1466025	1	True				
ANR	1469138	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1469139	Identifier	firstcharflags		1466025	0					
ANR	1469140	Identifier	REQ_NONE		1466025	1					
ANR	1469141	ExpressionStatement	zerofirstchar = firstchar	5479:4:174792:174817	1466025	51	True				
ANR	1469142	AssignmentExpression	zerofirstchar = firstchar		1466025	0		=			
ANR	1469143	Identifier	zerofirstchar		1466025	0					
ANR	1469144	Identifier	firstchar		1466025	1					
ANR	1469145	ExpressionStatement	zerofirstcharflags = firstcharflags	5480:4:174823:174858	1466025	52	True				
ANR	1469146	AssignmentExpression	zerofirstcharflags = firstcharflags		1466025	0		=			
ANR	1469147	Identifier	zerofirstcharflags		1466025	0					
ANR	1469148	Identifier	firstcharflags		1466025	1					
ANR	1469149	ExpressionStatement	zeroreqchar = reqchar	5481:4:174864:174885	1466025	53	True				
ANR	1469150	AssignmentExpression	zeroreqchar = reqchar		1466025	0		=			
ANR	1469151	Identifier	zeroreqchar		1466025	0					
ANR	1469152	Identifier	reqchar		1466025	1					
ANR	1469153	ExpressionStatement	zeroreqcharflags = reqcharflags	5482:4:174891:174922	1466025	54	True				
ANR	1469154	AssignmentExpression	zeroreqcharflags = reqcharflags		1466025	0		=			
ANR	1469155	Identifier	zeroreqcharflags		1466025	0					
ANR	1469156	Identifier	reqcharflags		1466025	1					
ANR	1469157	IfStatement	if ( xclass && ( ! should_flip_negation || ( options & PCRE_UCP ) != 0 ) )		1466025	55					
ANR	1469158	Condition	xclass && ( ! should_flip_negation || ( options & PCRE_UCP ) != 0 )	5493:8:175441:175502	1466025	0	True				
ANR	1469159	AndExpression	xclass && ( ! should_flip_negation || ( options & PCRE_UCP ) != 0 )		1466025	0		&&			
ANR	1469160	Identifier	xclass		1466025	0					
ANR	1469161	OrExpression	! should_flip_negation || ( options & PCRE_UCP ) != 0		1466025	1		||			
ANR	1469162	UnaryOperationExpression	! should_flip_negation		1466025	0					
ANR	1469163	UnaryOperator	!		1466025	0					
ANR	1469164	Identifier	should_flip_negation		1466025	1					
ANR	1469165	EqualityExpression	( options & PCRE_UCP ) != 0		1466025	1		!=			
ANR	1469166	BitAndExpression	options & PCRE_UCP		1466025	0		&			
ANR	1469167	Identifier	options		1466025	0					
ANR	1469168	Identifier	PCRE_UCP		1466025	1					
ANR	1469169	PrimaryExpression	0		1466025	1					
ANR	1469170	CompoundStatement		1059:6:36393:36393	1466025	1					
ANR	1469171	ExpressionStatement	* class_uchardata ++ = XCL_END	5499:6:175646:175674	1466025	0	True				
ANR	1469172	AssignmentExpression	* class_uchardata ++ = XCL_END		1466025	0		=			
ANR	1469173	UnaryOperationExpression	* class_uchardata ++		1466025	0					
ANR	1469174	UnaryOperator	*		1466025	0					
ANR	1469175	PostIncDecOperationExpression	class_uchardata ++		1466025	1					
ANR	1469176	Identifier	class_uchardata		1466025	0					
ANR	1469177	IncDec	++		1466025	1					
ANR	1469178	Identifier	XCL_END		1466025	1					
ANR	1469179	ExpressionStatement	* code ++ = OP_XCLASS	5500:6:175719:175738	1466025	1	True				
ANR	1469180	AssignmentExpression	* code ++ = OP_XCLASS		1466025	0		=			
ANR	1469181	UnaryOperationExpression	* code ++		1466025	0					
ANR	1469182	UnaryOperator	*		1466025	0					
ANR	1469183	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1469184	Identifier	code		1466025	0					
ANR	1469185	IncDec	++		1466025	1					
ANR	1469186	Identifier	OP_XCLASS		1466025	1					
ANR	1469187	ExpressionStatement	code += LINK_SIZE	5501:6:175746:175763	1466025	2	True				
ANR	1469188	AssignmentExpression	code += LINK_SIZE		1466025	0		+=			
ANR	1469189	Identifier	code		1466025	0					
ANR	1469190	Identifier	LINK_SIZE		1466025	1					
ANR	1469191	ExpressionStatement	* code = negate_class ? XCL_NOT : 0	5502:6:175771:175802	1466025	3	True				
ANR	1469192	AssignmentExpression	* code = negate_class ? XCL_NOT : 0		1466025	0		=			
ANR	1469193	UnaryOperationExpression	* code		1466025	0					
ANR	1469194	UnaryOperator	*		1466025	0					
ANR	1469195	Identifier	code		1466025	1					
ANR	1469196	ConditionalExpression	negate_class ? XCL_NOT : 0		1466025	1					
ANR	1469197	Condition	negate_class		1466025	0					
ANR	1469198	Identifier	negate_class		1466025	0					
ANR	1469199	Identifier	XCL_NOT		1466025	1					
ANR	1469200	PrimaryExpression	0		1466025	2					
ANR	1469201	IfStatement	if ( xclass_has_prop )		1466025	4					
ANR	1469202	Condition	xclass_has_prop	5503:10:175814:175828	1466025	0	True				
ANR	1469203	Identifier	xclass_has_prop		1466025	0					
ANR	1469204	ExpressionStatement	* code |= XCL_HASPROP	5503:27:175831:175851	1466025	1	True				
ANR	1469205	AssignmentExpression	* code |= XCL_HASPROP		1466025	0		|=			
ANR	1469206	UnaryOperationExpression	* code		1466025	0					
ANR	1469207	UnaryOperator	*		1466025	0					
ANR	1469208	Identifier	code		1466025	1					
ANR	1469209	Identifier	XCL_HASPROP		1466025	1					
ANR	1469210	IfStatement	if ( class_has_8bitchar > 0 )		1466025	5					
ANR	1469211	Condition	class_has_8bitchar > 0	5508:10:176018:176039	1466025	0	True				
ANR	1469212	RelationalExpression	class_has_8bitchar > 0		1466025	0		>			
ANR	1469213	Identifier	class_has_8bitchar		1466025	0					
ANR	1469214	PrimaryExpression	0		1466025	1					
ANR	1469215	CompoundStatement		1070:8:36805:36805	1466025	1					
ANR	1469216	ExpressionStatement	* code ++ |= XCL_MAP	5510:8:176060:176078	1466025	0	True				
ANR	1469217	AssignmentExpression	* code ++ |= XCL_MAP		1466025	0		|=			
ANR	1469218	UnaryOperationExpression	* code ++		1466025	0					
ANR	1469219	UnaryOperator	*		1466025	0					
ANR	1469220	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1469221	Identifier	code		1466025	0					
ANR	1469222	IncDec	++		1466025	1					
ANR	1469223	Identifier	XCL_MAP		1466025	1					
ANR	1469224	ExpressionStatement	"memmove ( code + ( 32 / sizeof ( pcre_uchar ) ) , code , IN_UCHARS ( class_uchardata - code ) )"	5511:8:176088:176180	1466025	1	True				
ANR	1469225	CallExpression	"memmove ( code + ( 32 / sizeof ( pcre_uchar ) ) , code , IN_UCHARS ( class_uchardata - code ) )"		1466025	0					
ANR	1469226	Callee	memmove		1466025	0					
ANR	1469227	Identifier	memmove		1466025	0					
ANR	1469228	ArgumentList	code + ( 32 / sizeof ( pcre_uchar ) )		1466025	1					
ANR	1469229	Argument	code + ( 32 / sizeof ( pcre_uchar ) )		1466025	0					
ANR	1469230	AdditiveExpression	code + ( 32 / sizeof ( pcre_uchar ) )		1466025	0		+			
ANR	1469231	Identifier	code		1466025	0					
ANR	1469232	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		1466025	1		/			
ANR	1469233	PrimaryExpression	32		1466025	0					
ANR	1469234	SizeofExpression	sizeof ( pcre_uchar )		1466025	1					
ANR	1469235	Sizeof	sizeof		1466025	0					
ANR	1469236	SizeofOperand	pcre_uchar		1466025	1					
ANR	1469237	Argument	code		1466025	1					
ANR	1469238	Identifier	code		1466025	0					
ANR	1469239	Argument	IN_UCHARS ( class_uchardata - code )		1466025	2					
ANR	1469240	CallExpression	IN_UCHARS ( class_uchardata - code )		1466025	0					
ANR	1469241	Callee	IN_UCHARS		1466025	0					
ANR	1469242	Identifier	IN_UCHARS		1466025	0					
ANR	1469243	ArgumentList	class_uchardata - code		1466025	1					
ANR	1469244	Argument	class_uchardata - code		1466025	0					
ANR	1469245	AdditiveExpression	class_uchardata - code		1466025	0		-			
ANR	1469246	Identifier	class_uchardata		1466025	0					
ANR	1469247	Identifier	code		1466025	1					
ANR	1469248	IfStatement	if ( negate_class && ! xclass_has_prop )		1466025	2					
ANR	1469249	Condition	negate_class && ! xclass_has_prop	5513:12:176194:176225	1466025	0	True				
ANR	1469250	AndExpression	negate_class && ! xclass_has_prop		1466025	0		&&			
ANR	1469251	Identifier	negate_class		1466025	0					
ANR	1469252	UnaryOperationExpression	! xclass_has_prop		1466025	1					
ANR	1469253	UnaryOperator	!		1466025	0					
ANR	1469254	Identifier	xclass_has_prop		1466025	1					
ANR	1469255	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	1					
ANR	1469256	ForInit	c = 0 ;	5514:15:176243:176248	1466025	0	True				
ANR	1469257	AssignmentExpression	c = 0		1466025	0		=			
ANR	1469258	Identifier	c		1466025	0					
ANR	1469259	PrimaryExpression	0		1466025	1					
ANR	1469260	Condition	c < 32	5514:22:176250:176255	1466025	1	True				
ANR	1469261	RelationalExpression	c < 32		1466025	0		<			
ANR	1469262	Identifier	c		1466025	0					
ANR	1469263	PrimaryExpression	32		1466025	1					
ANR	1469264	PostIncDecOperationExpression	c ++	5514:30:176258:176260	1466025	2	True				
ANR	1469265	Identifier	c		1466025	0					
ANR	1469266	IncDec	++		1466025	1					
ANR	1469267	ExpressionStatement	classbits [ c ] = ~classbits [ c ]	5514:35:176263:176291	1466025	3	True				
ANR	1469268	AssignmentExpression	classbits [ c ] = ~classbits [ c ]		1466025	0		=			
ANR	1469269	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1469270	Identifier	classbits		1466025	0					
ANR	1469271	Identifier	c		1466025	1					
ANR	1469272	ArrayIndexing	~classbits [ c ]		1466025	1					
ANR	1469273	Identifier	~classbits		1466025	0					
ANR	1469274	Identifier	c		1466025	1					
ANR	1469275	ExpressionStatement	"memcpy ( code , classbits , 32 )"	5515:8:176301:176328	1466025	3	True				
ANR	1469276	CallExpression	"memcpy ( code , classbits , 32 )"		1466025	0					
ANR	1469277	Callee	memcpy		1466025	0					
ANR	1469278	Identifier	memcpy		1466025	0					
ANR	1469279	ArgumentList	code		1466025	1					
ANR	1469280	Argument	code		1466025	0					
ANR	1469281	Identifier	code		1466025	0					
ANR	1469282	Argument	classbits		1466025	1					
ANR	1469283	Identifier	classbits		1466025	0					
ANR	1469284	Argument	32		1466025	2					
ANR	1469285	PrimaryExpression	32		1466025	0					
ANR	1469286	ExpressionStatement	code = class_uchardata + ( 32 / sizeof ( pcre_uchar ) )	5516:8:176338:176388	1466025	4	True				
ANR	1469287	AssignmentExpression	code = class_uchardata + ( 32 / sizeof ( pcre_uchar ) )		1466025	0		=			
ANR	1469288	Identifier	code		1466025	0					
ANR	1469289	AdditiveExpression	class_uchardata + ( 32 / sizeof ( pcre_uchar ) )		1466025	1		+			
ANR	1469290	Identifier	class_uchardata		1466025	0					
ANR	1469291	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		1466025	1		/			
ANR	1469292	PrimaryExpression	32		1466025	0					
ANR	1469293	SizeofExpression	sizeof ( pcre_uchar )		1466025	1					
ANR	1469294	Sizeof	sizeof		1466025	0					
ANR	1469295	SizeofOperand	pcre_uchar		1466025	1					
ANR	1469296	ElseStatement	else		1466025	0					
ANR	1469297	ExpressionStatement	code = class_uchardata	5518:11:176411:176433	1466025	0	True				
ANR	1469298	AssignmentExpression	code = class_uchardata		1466025	0		=			
ANR	1469299	Identifier	code		1466025	0					
ANR	1469300	Identifier	class_uchardata		1466025	1					
ANR	1469301	ExpressionStatement	"PUT ( previous , 1 , ( int ) ( code - previous ) )"	5522:6:176499:176539	1466025	6	True				
ANR	1469302	CallExpression	"PUT ( previous , 1 , ( int ) ( code - previous ) )"		1466025	0					
ANR	1469303	Callee	PUT		1466025	0					
ANR	1469304	Identifier	PUT		1466025	0					
ANR	1469305	ArgumentList	previous		1466025	1					
ANR	1469306	Argument	previous		1466025	0					
ANR	1469307	Identifier	previous		1466025	0					
ANR	1469308	Argument	1		1466025	1					
ANR	1469309	PrimaryExpression	1		1466025	0					
ANR	1469310	Argument	( int ) ( code - previous )		1466025	2					
ANR	1469311	CastExpression	( int ) ( code - previous )		1466025	0					
ANR	1469312	CastTarget	int		1466025	0					
ANR	1469313	AdditiveExpression	code - previous		1466025	1		-			
ANR	1469314	Identifier	code		1466025	0					
ANR	1469315	Identifier	previous		1466025	1					
ANR	1469316	BreakStatement	break ;	5523:6:176547:176552	1466025	7	True				
ANR	1469317	IfStatement	if ( lengthptr != NULL )		1466025	56					
ANR	1469318	Condition	lengthptr != NULL	5529:8:176692:176708	1466025	0	True				
ANR	1469319	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1469320	Identifier	lengthptr		1466025	0					
ANR	1469321	Identifier	NULL		1466025	1					
ANR	1469322	ExpressionStatement	* lengthptr += ( int ) ( class_uchardata - class_uchardata_base )	5530:6:176717:176776	1466025	1	True				
ANR	1469323	AssignmentExpression	* lengthptr += ( int ) ( class_uchardata - class_uchardata_base )		1466025	0		+=			
ANR	1469324	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1469325	UnaryOperator	*		1466025	0					
ANR	1469326	Identifier	lengthptr		1466025	1					
ANR	1469327	CastExpression	( int ) ( class_uchardata - class_uchardata_base )		1466025	1					
ANR	1469328	CastTarget	int		1466025	0					
ANR	1469329	AdditiveExpression	class_uchardata - class_uchardata_base		1466025	1		-			
ANR	1469330	Identifier	class_uchardata		1466025	0					
ANR	1469331	Identifier	class_uchardata_base		1466025	1					
ANR	1469332	ExpressionStatement	* code ++ = ( negate_class == should_flip_negation ) ? OP_CLASS : OP_NCLASS	5539:4:177135:177206	1466025	57	True				
ANR	1469333	AssignmentExpression	* code ++ = ( negate_class == should_flip_negation ) ? OP_CLASS : OP_NCLASS		1466025	0		=			
ANR	1469334	UnaryOperationExpression	* code ++		1466025	0					
ANR	1469335	UnaryOperator	*		1466025	0					
ANR	1469336	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1469337	Identifier	code		1466025	0					
ANR	1469338	IncDec	++		1466025	1					
ANR	1469339	ConditionalExpression	( negate_class == should_flip_negation ) ? OP_CLASS : OP_NCLASS		1466025	1					
ANR	1469340	Condition	negate_class == should_flip_negation		1466025	0					
ANR	1469341	EqualityExpression	negate_class == should_flip_negation		1466025	0		==			
ANR	1469342	Identifier	negate_class		1466025	0					
ANR	1469343	Identifier	should_flip_negation		1466025	1					
ANR	1469344	Identifier	OP_CLASS		1466025	1					
ANR	1469345	Identifier	OP_NCLASS		1466025	2					
ANR	1469346	IfStatement	if ( lengthptr == NULL )		1466025	58					
ANR	1469347	Condition	lengthptr == NULL	5540:8:177216:177232	1466025	0	True				
ANR	1469348	EqualityExpression	lengthptr == NULL		1466025	0		==			
ANR	1469349	Identifier	lengthptr		1466025	0					
ANR	1469350	Identifier	NULL		1466025	1					
ANR	1469351	CompoundStatement		1102:6:38040:38040	1466025	1					
ANR	1469352	IfStatement	if ( negate_class )		1466025	0					
ANR	1469353	Condition	negate_class	5542:10:177297:177308	1466025	0	True				
ANR	1469354	Identifier	negate_class		1466025	0					
ANR	1469355	ForStatement	for ( c = 0 ; c < 32 ; c ++ )		1466025	1					
ANR	1469356	ForInit	c = 0 ;	5543:13:177324:177329	1466025	0	True				
ANR	1469357	AssignmentExpression	c = 0		1466025	0		=			
ANR	1469358	Identifier	c		1466025	0					
ANR	1469359	PrimaryExpression	0		1466025	1					
ANR	1469360	Condition	c < 32	5543:20:177331:177336	1466025	1	True				
ANR	1469361	RelationalExpression	c < 32		1466025	0		<			
ANR	1469362	Identifier	c		1466025	0					
ANR	1469363	PrimaryExpression	32		1466025	1					
ANR	1469364	PostIncDecOperationExpression	c ++	5543:28:177339:177341	1466025	2	True				
ANR	1469365	Identifier	c		1466025	0					
ANR	1469366	IncDec	++		1466025	1					
ANR	1469367	ExpressionStatement	classbits [ c ] = ~classbits [ c ]	5543:33:177344:177372	1466025	3	True				
ANR	1469368	AssignmentExpression	classbits [ c ] = ~classbits [ c ]		1466025	0		=			
ANR	1469369	ArrayIndexing	classbits [ c ]		1466025	0					
ANR	1469370	Identifier	classbits		1466025	0					
ANR	1469371	Identifier	c		1466025	1					
ANR	1469372	ArrayIndexing	~classbits [ c ]		1466025	1					
ANR	1469373	Identifier	~classbits		1466025	0					
ANR	1469374	Identifier	c		1466025	1					
ANR	1469375	ExpressionStatement	"memcpy ( code , classbits , 32 )"	5544:6:177380:177407	1466025	1	True				
ANR	1469376	CallExpression	"memcpy ( code , classbits , 32 )"		1466025	0					
ANR	1469377	Callee	memcpy		1466025	0					
ANR	1469378	Identifier	memcpy		1466025	0					
ANR	1469379	ArgumentList	code		1466025	1					
ANR	1469380	Argument	code		1466025	0					
ANR	1469381	Identifier	code		1466025	0					
ANR	1469382	Argument	classbits		1466025	1					
ANR	1469383	Identifier	classbits		1466025	0					
ANR	1469384	Argument	32		1466025	2					
ANR	1469385	PrimaryExpression	32		1466025	0					
ANR	1469386	ExpressionStatement	code += 32 / sizeof ( pcre_uchar )	5546:4:177421:177452	1466025	59	True				
ANR	1469387	AssignmentExpression	code += 32 / sizeof ( pcre_uchar )		1466025	0		+=			
ANR	1469388	Identifier	code		1466025	0					
ANR	1469389	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		1466025	1		/			
ANR	1469390	PrimaryExpression	32		1466025	0					
ANR	1469391	SizeofExpression	sizeof ( pcre_uchar )		1466025	1					
ANR	1469392	Sizeof	sizeof		1466025	0					
ANR	1469393	SizeofOperand	pcre_uchar		1466025	1					
ANR	1469394	Label	END_CLASS :	5548:4:177459:177468	1466025	60	True				
ANR	1469395	Identifier	END_CLASS		1466025	0					
ANR	1469396	BreakStatement	break ;	5549:4:177474:177479	1466025	61	True				
ANR	1469397	Label	case CHAR_LEFT_CURLY_BRACKET :	5556:4:177673:177701	1466025	62	True				
ANR	1469398	Identifier	CHAR_LEFT_CURLY_BRACKET		1466025	0					
ANR	1469399	IfStatement	if ( ! is_quantifier )		1466025	63					
ANR	1469400	Condition	! is_quantifier	5557:8:177711:177724	1466025	0	True				
ANR	1469401	UnaryOperationExpression	! is_quantifier		1466025	0					
ANR	1469402	UnaryOperator	!		1466025	0					
ANR	1469403	Identifier	is_quantifier		1466025	1					
ANR	1469404	GotoStatement	goto NORMAL_CHAR ;	5557:24:177727:177743	1466025	1	True				
ANR	1469405	Identifier	NORMAL_CHAR		1466025	0					
ANR	1469406	ExpressionStatement	"ptr = read_repeat_counts ( ptr + 1 , & repeat_min , & repeat_max , errorcodeptr )"	5558:4:177749:177820	1466025	64	True				
ANR	1469407	AssignmentExpression	"ptr = read_repeat_counts ( ptr + 1 , & repeat_min , & repeat_max , errorcodeptr )"		1466025	0		=			
ANR	1469408	Identifier	ptr		1466025	0					
ANR	1469409	CallExpression	"read_repeat_counts ( ptr + 1 , & repeat_min , & repeat_max , errorcodeptr )"		1466025	1					
ANR	1469410	Callee	read_repeat_counts		1466025	0					
ANR	1469411	Identifier	read_repeat_counts		1466025	0					
ANR	1469412	ArgumentList	ptr + 1		1466025	1					
ANR	1469413	Argument	ptr + 1		1466025	0					
ANR	1469414	AdditiveExpression	ptr + 1		1466025	0		+			
ANR	1469415	Identifier	ptr		1466025	0					
ANR	1469416	PrimaryExpression	1		1466025	1					
ANR	1469417	Argument	& repeat_min		1466025	1					
ANR	1469418	UnaryOperationExpression	& repeat_min		1466025	0					
ANR	1469419	UnaryOperator	&		1466025	0					
ANR	1469420	Identifier	repeat_min		1466025	1					
ANR	1469421	Argument	& repeat_max		1466025	2					
ANR	1469422	UnaryOperationExpression	& repeat_max		1466025	0					
ANR	1469423	UnaryOperator	&		1466025	0					
ANR	1469424	Identifier	repeat_max		1466025	1					
ANR	1469425	Argument	errorcodeptr		1466025	3					
ANR	1469426	Identifier	errorcodeptr		1466025	0					
ANR	1469427	IfStatement	if ( * errorcodeptr != 0 )		1466025	65					
ANR	1469428	Condition	* errorcodeptr != 0	5559:8:177830:177847	1466025	0	True				
ANR	1469429	EqualityExpression	* errorcodeptr != 0		1466025	0		!=			
ANR	1469430	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1469431	UnaryOperator	*		1466025	0					
ANR	1469432	Identifier	errorcodeptr		1466025	1					
ANR	1469433	PrimaryExpression	0		1466025	1					
ANR	1469434	GotoStatement	goto FAILED ;	5559:28:177850:177861	1466025	1	True				
ANR	1469435	Identifier	FAILED		1466025	0					
ANR	1469436	GotoStatement	goto REPEAT ;	5560:4:177867:177878	1466025	66	True				
ANR	1469437	Identifier	REPEAT		1466025	0					
ANR	1469438	Label	case CHAR_ASTERISK :	5562:4:177885:177903	1466025	67	True				
ANR	1469439	Identifier	CHAR_ASTERISK		1466025	0					
ANR	1469440	ExpressionStatement	repeat_min = 0	5563:4:177909:177923	1466025	68	True				
ANR	1469441	AssignmentExpression	repeat_min = 0		1466025	0		=			
ANR	1469442	Identifier	repeat_min		1466025	0					
ANR	1469443	PrimaryExpression	0		1466025	1					
ANR	1469444	ExpressionStatement	repeat_max = - 1	5564:4:177929:177944	1466025	69	True				
ANR	1469445	AssignmentExpression	repeat_max = - 1		1466025	0		=			
ANR	1469446	Identifier	repeat_max		1466025	0					
ANR	1469447	UnaryOperationExpression	- 1		1466025	1					
ANR	1469448	UnaryOperator	-		1466025	0					
ANR	1469449	PrimaryExpression	1		1466025	1					
ANR	1469450	GotoStatement	goto REPEAT ;	5565:4:177950:177961	1466025	70	True				
ANR	1469451	Identifier	REPEAT		1466025	0					
ANR	1469452	Label	case CHAR_PLUS :	5567:4:177968:177982	1466025	71	True				
ANR	1469453	Identifier	CHAR_PLUS		1466025	0					
ANR	1469454	ExpressionStatement	repeat_min = 1	5568:4:177988:178002	1466025	72	True				
ANR	1469455	AssignmentExpression	repeat_min = 1		1466025	0		=			
ANR	1469456	Identifier	repeat_min		1466025	0					
ANR	1469457	PrimaryExpression	1		1466025	1					
ANR	1469458	ExpressionStatement	repeat_max = - 1	5569:4:178008:178023	1466025	73	True				
ANR	1469459	AssignmentExpression	repeat_max = - 1		1466025	0		=			
ANR	1469460	Identifier	repeat_max		1466025	0					
ANR	1469461	UnaryOperationExpression	- 1		1466025	1					
ANR	1469462	UnaryOperator	-		1466025	0					
ANR	1469463	PrimaryExpression	1		1466025	1					
ANR	1469464	GotoStatement	goto REPEAT ;	5570:4:178029:178040	1466025	74	True				
ANR	1469465	Identifier	REPEAT		1466025	0					
ANR	1469466	Label	case CHAR_QUESTION_MARK :	5572:4:178047:178070	1466025	75	True				
ANR	1469467	Identifier	CHAR_QUESTION_MARK		1466025	0					
ANR	1469468	ExpressionStatement	repeat_min = 0	5573:4:178076:178090	1466025	76	True				
ANR	1469469	AssignmentExpression	repeat_min = 0		1466025	0		=			
ANR	1469470	Identifier	repeat_min		1466025	0					
ANR	1469471	PrimaryExpression	0		1466025	1					
ANR	1469472	ExpressionStatement	repeat_max = 1	5574:4:178096:178110	1466025	77	True				
ANR	1469473	AssignmentExpression	repeat_max = 1		1466025	0		=			
ANR	1469474	Identifier	repeat_max		1466025	0					
ANR	1469475	PrimaryExpression	1		1466025	1					
ANR	1469476	Label	REPEAT :	5576:4:178117:178123	1466025	78	True				
ANR	1469477	Identifier	REPEAT		1466025	0					
ANR	1469478	IfStatement	if ( previous == NULL )		1466025	79					
ANR	1469479	Condition	previous == NULL	5577:8:178133:178148	1466025	0	True				
ANR	1469480	EqualityExpression	previous == NULL		1466025	0		==			
ANR	1469481	Identifier	previous		1466025	0					
ANR	1469482	Identifier	NULL		1466025	1					
ANR	1469483	CompoundStatement		1139:6:38912:38912	1466025	1					
ANR	1469484	ExpressionStatement	* errorcodeptr = ERR9	5579:6:178165:178185	1466025	0	True				
ANR	1469485	AssignmentExpression	* errorcodeptr = ERR9		1466025	0		=			
ANR	1469486	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1469487	UnaryOperator	*		1466025	0					
ANR	1469488	Identifier	errorcodeptr		1466025	1					
ANR	1469489	Identifier	ERR9		1466025	1					
ANR	1469490	GotoStatement	goto FAILED ;	5580:6:178193:178204	1466025	1	True				
ANR	1469491	Identifier	FAILED		1466025	0					
ANR	1469492	IfStatement	if ( repeat_min == 0 )		1466025	80					
ANR	1469493	Condition	repeat_min == 0	5583:8:178223:178237	1466025	0	True				
ANR	1469494	EqualityExpression	repeat_min == 0		1466025	0		==			
ANR	1469495	Identifier	repeat_min		1466025	0					
ANR	1469496	PrimaryExpression	0		1466025	1					
ANR	1469497	CompoundStatement		1145:6:39001:39001	1466025	1					
ANR	1469498	ExpressionStatement	firstchar = zerofirstchar	5585:6:178254:178279	1466025	0	True				
ANR	1469499	AssignmentExpression	firstchar = zerofirstchar		1466025	0		=			
ANR	1469500	Identifier	firstchar		1466025	0					
ANR	1469501	Identifier	zerofirstchar		1466025	1					
ANR	1469502	ExpressionStatement	firstcharflags = zerofirstcharflags	5586:6:178319:178354	1466025	1	True				
ANR	1469503	AssignmentExpression	firstcharflags = zerofirstcharflags		1466025	0		=			
ANR	1469504	Identifier	firstcharflags		1466025	0					
ANR	1469505	Identifier	zerofirstcharflags		1466025	1					
ANR	1469506	ExpressionStatement	reqchar = zeroreqchar	5587:6:178362:178383	1466025	2	True				
ANR	1469507	AssignmentExpression	reqchar = zeroreqchar		1466025	0		=			
ANR	1469508	Identifier	reqchar		1466025	0					
ANR	1469509	Identifier	zeroreqchar		1466025	1					
ANR	1469510	ExpressionStatement	reqcharflags = zeroreqcharflags	5588:6:178410:178441	1466025	3	True				
ANR	1469511	AssignmentExpression	reqcharflags = zeroreqcharflags		1466025	0		=			
ANR	1469512	Identifier	reqcharflags		1466025	0					
ANR	1469513	Identifier	zeroreqcharflags		1466025	1					
ANR	1469514	ExpressionStatement	reqvary = ( repeat_min == repeat_max ) ? 0 : REQ_VARY	5593:4:178517:178567	1466025	81	True				
ANR	1469515	AssignmentExpression	reqvary = ( repeat_min == repeat_max ) ? 0 : REQ_VARY		1466025	0		=			
ANR	1469516	Identifier	reqvary		1466025	0					
ANR	1469517	ConditionalExpression	( repeat_min == repeat_max ) ? 0 : REQ_VARY		1466025	1					
ANR	1469518	Condition	repeat_min == repeat_max		1466025	0					
ANR	1469519	EqualityExpression	repeat_min == repeat_max		1466025	0		==			
ANR	1469520	Identifier	repeat_min		1466025	0					
ANR	1469521	Identifier	repeat_max		1466025	1					
ANR	1469522	PrimaryExpression	0		1466025	1					
ANR	1469523	Identifier	REQ_VARY		1466025	2					
ANR	1469524	ExpressionStatement	op_type = 0	5595:4:178574:178585	1466025	82	True				
ANR	1469525	AssignmentExpression	op_type = 0		1466025	0		=			
ANR	1469526	Identifier	op_type		1466025	0					
ANR	1469527	PrimaryExpression	0		1466025	1					
ANR	1469528	ExpressionStatement	possessive_quantifier = FALSE	5596:4:178645:178674	1466025	83	True				
ANR	1469529	AssignmentExpression	possessive_quantifier = FALSE		1466025	0		=			
ANR	1469530	Identifier	possessive_quantifier		1466025	0					
ANR	1469531	Identifier	FALSE		1466025	1					
ANR	1469532	ExpressionStatement	tempcode = previous	5601:4:178836:178855	1466025	84	True				
ANR	1469533	AssignmentExpression	tempcode = previous		1466025	0		=			
ANR	1469534	Identifier	tempcode		1466025	0					
ANR	1469535	Identifier	previous		1466025	1					
ANR	1469536	IfStatement	if ( ( options & PCRE_EXTENDED ) != 0 )		1466025	85					
ANR	1469537	Condition	( options & PCRE_EXTENDED ) != 0	5607:8:179036:179065	1466025	0	True				
ANR	1469538	EqualityExpression	( options & PCRE_EXTENDED ) != 0		1466025	0		!=			
ANR	1469539	BitAndExpression	options & PCRE_EXTENDED		1466025	0		&			
ANR	1469540	Identifier	options		1466025	0					
ANR	1469541	Identifier	PCRE_EXTENDED		1466025	1					
ANR	1469542	PrimaryExpression	0		1466025	1					
ANR	1469543	CompoundStatement		1170:6:39837:39866	1466025	1					
ANR	1469544	IdentifierDeclStatement	const pcre_uchar * p = ptr + 1 ;	5609:6:179082:179111	1466025	0	True				
ANR	1469545	IdentifierDecl	* p = ptr + 1		1466025	0					
ANR	1469546	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1469547	Identifier	p		1466025	1					
ANR	1469548	AssignmentExpression	* p = ptr + 1		1466025	2		=			
ANR	1469549	Identifier	p		1466025	0					
ANR	1469550	AdditiveExpression	ptr + 1		1466025	1		+			
ANR	1469551	Identifier	ptr		1466025	0					
ANR	1469552	PrimaryExpression	1		1466025	1					
ANR	1469553	ForStatement	for ( ; ; )		1466025	1					
ANR	1469554	CompoundStatement		1172:8:39891:39891	1466025	0					
ANR	1469555	WhileStatement	while ( MAX_255 ( * p ) && ( cd -> ctypes [ * p ] & ctype_space ) != 0 )		1466025	0					
ANR	1469556	Condition	MAX_255 ( * p ) && ( cd -> ctypes [ * p ] & ctype_space ) != 0	5612:15:179153:179202	1466025	0	True				
ANR	1469557	AndExpression	MAX_255 ( * p ) && ( cd -> ctypes [ * p ] & ctype_space ) != 0		1466025	0		&&			
ANR	1469558	CallExpression	MAX_255 ( * p )		1466025	0					
ANR	1469559	Callee	MAX_255		1466025	0					
ANR	1469560	Identifier	MAX_255		1466025	0					
ANR	1469561	ArgumentList	* p		1466025	1					
ANR	1469562	Argument	* p		1466025	0					
ANR	1469563	UnaryOperationExpression	* p		1466025	0					
ANR	1469564	UnaryOperator	*		1466025	0					
ANR	1469565	Identifier	p		1466025	1					
ANR	1469566	EqualityExpression	( cd -> ctypes [ * p ] & ctype_space ) != 0		1466025	1		!=			
ANR	1469567	BitAndExpression	cd -> ctypes [ * p ] & ctype_space		1466025	0		&			
ANR	1469568	ArrayIndexing	cd -> ctypes [ * p ]		1466025	0					
ANR	1469569	PtrMemberAccess	cd -> ctypes		1466025	0					
ANR	1469570	Identifier	cd		1466025	0					
ANR	1469571	Identifier	ctypes		1466025	1					
ANR	1469572	UnaryOperationExpression	* p		1466025	1					
ANR	1469573	UnaryOperator	*		1466025	0					
ANR	1469574	Identifier	p		1466025	1					
ANR	1469575	Identifier	ctype_space		1466025	1					
ANR	1469576	PrimaryExpression	0		1466025	1					
ANR	1469577	ExpressionStatement	p ++	5612:67:179205:179208	1466025	1	True				
ANR	1469578	PostIncDecOperationExpression	p ++		1466025	0					
ANR	1469579	Identifier	p		1466025	0					
ANR	1469580	IncDec	++		1466025	1					
ANR	1469581	IfStatement	if ( * p != CHAR_NUMBER_SIGN )		1466025	1					
ANR	1469582	Condition	* p != CHAR_NUMBER_SIGN	5613:12:179222:179243	1466025	0	True				
ANR	1469583	EqualityExpression	* p != CHAR_NUMBER_SIGN		1466025	0		!=			
ANR	1469584	UnaryOperationExpression	* p		1466025	0					
ANR	1469585	UnaryOperator	*		1466025	0					
ANR	1469586	Identifier	p		1466025	1					
ANR	1469587	Identifier	CHAR_NUMBER_SIGN		1466025	1					
ANR	1469588	BreakStatement	break ;	5613:36:179246:179251	1466025	1	True				
ANR	1469589	ExpressionStatement	p ++	5614:8:179261:179264	1466025	2	True				
ANR	1469590	PostIncDecOperationExpression	p ++		1466025	0					
ANR	1469591	Identifier	p		1466025	0					
ANR	1469592	IncDec	++		1466025	1					
ANR	1469593	WhileStatement	while ( * p != CHAR_NULL )		1466025	3					
ANR	1469594	Condition	* p != CHAR_NULL	5615:15:179281:179295	1466025	0	True				
ANR	1469595	EqualityExpression	* p != CHAR_NULL		1466025	0		!=			
ANR	1469596	UnaryOperationExpression	* p		1466025	0					
ANR	1469597	UnaryOperator	*		1466025	0					
ANR	1469598	Identifier	p		1466025	1					
ANR	1469599	Identifier	CHAR_NULL		1466025	1					
ANR	1469600	CompoundStatement		1177:10:40063:40063	1466025	1					
ANR	1469601	IfStatement	if ( IS_NEWLINE ( p ) )		1466025	0					
ANR	1469602	Condition	IS_NEWLINE ( p )	5617:14:179324:179336	1466025	0	True				
ANR	1469603	CallExpression	IS_NEWLINE ( p )		1466025	0					
ANR	1469604	Callee	IS_NEWLINE		1466025	0					
ANR	1469605	Identifier	IS_NEWLINE		1466025	0					
ANR	1469606	ArgumentList	p		1466025	1					
ANR	1469607	Argument	p		1466025	0					
ANR	1469608	Identifier	p		1466025	0					
ANR	1469609	CompoundStatement		1179:12:40156:40156	1466025	1					
ANR	1469610	ExpressionStatement	p += cd -> nllen	5619:12:179471:179485	1466025	0	True				
ANR	1469611	AssignmentExpression	p += cd -> nllen		1466025	0		+=			
ANR	1469612	Identifier	p		1466025	0					
ANR	1469613	PtrMemberAccess	cd -> nllen		1466025	1					
ANR	1469614	Identifier	cd		1466025	0					
ANR	1469615	Identifier	nllen		1466025	1					
ANR	1469616	BreakStatement	break ;	5620:12:179499:179504	1466025	1	True				
ANR	1469617	ExpressionStatement	p ++	5622:10:179530:179533	1466025	1	True				
ANR	1469618	PostIncDecOperationExpression	p ++		1466025	0					
ANR	1469619	Identifier	p		1466025	0					
ANR	1469620	IncDec	++		1466025	1					
ANR	1469621	IfStatement	if ( utf )		1466025	2					
ANR	1469622	Condition	utf	5624:14:179568:179570	1466025	0	True				
ANR	1469623	Identifier	utf		1466025	0					
ANR	1469624	ExpressionStatement	FORWARDCHAR ( p )	5624:19:179573:179587	1466025	1	True				
ANR	1469625	CallExpression	FORWARDCHAR ( p )		1466025	0					
ANR	1469626	Callee	FORWARDCHAR		1466025	0					
ANR	1469627	Identifier	FORWARDCHAR		1466025	0					
ANR	1469628	ArgumentList	p		1466025	1					
ANR	1469629	Argument	p		1466025	0					
ANR	1469630	Identifier	p		1466025	0					
ANR	1469631	ExpressionStatement	ptr = p - 1	5628:6:179713:179724	1466025	2	True				
ANR	1469632	AssignmentExpression	ptr = p - 1		1466025	0		=			
ANR	1469633	Identifier	ptr		1466025	0					
ANR	1469634	AdditiveExpression	p - 1		1466025	1		-			
ANR	1469635	Identifier	p		1466025	0					
ANR	1469636	PrimaryExpression	1		1466025	1					
ANR	1469637	IfStatement	if ( ptr [ 1 ] == CHAR_PLUS )		1466025	86					
ANR	1469638	Condition	ptr [ 1 ] == CHAR_PLUS	5637:8:180135:180153	1466025	0	True				
ANR	1469639	EqualityExpression	ptr [ 1 ] == CHAR_PLUS		1466025	0		==			
ANR	1469640	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1469641	Identifier	ptr		1466025	0					
ANR	1469642	PrimaryExpression	1		1466025	1					
ANR	1469643	Identifier	CHAR_PLUS		1466025	1					
ANR	1469644	CompoundStatement		1199:6:40917:40917	1466025	1					
ANR	1469645	ExpressionStatement	repeat_type = 0	5639:6:180170:180185	1466025	0	True				
ANR	1469646	AssignmentExpression	repeat_type = 0		1466025	0		=			
ANR	1469647	Identifier	repeat_type		1466025	0					
ANR	1469648	PrimaryExpression	0		1466025	1					
ANR	1469649	ExpressionStatement	possessive_quantifier = TRUE	5640:6:180229:180257	1466025	1	True				
ANR	1469650	AssignmentExpression	possessive_quantifier = TRUE		1466025	0		=			
ANR	1469651	Identifier	possessive_quantifier		1466025	0					
ANR	1469652	Identifier	TRUE		1466025	1					
ANR	1469653	ExpressionStatement	ptr ++	5641:6:180265:180270	1466025	2	True				
ANR	1469654	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1469655	Identifier	ptr		1466025	0					
ANR	1469656	IncDec	++		1466025	1					
ANR	1469657	ElseStatement	else		1466025	0					
ANR	1469658	IfStatement	if ( ptr [ 1 ] == CHAR_QUESTION_MARK )		1466025	0					
ANR	1469659	Condition	ptr [ 1 ] == CHAR_QUESTION_MARK	5643:13:180293:180320	1466025	0	True				
ANR	1469660	EqualityExpression	ptr [ 1 ] == CHAR_QUESTION_MARK		1466025	0		==			
ANR	1469661	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1469662	Identifier	ptr		1466025	0					
ANR	1469663	PrimaryExpression	1		1466025	1					
ANR	1469664	Identifier	CHAR_QUESTION_MARK		1466025	1					
ANR	1469665	CompoundStatement		1205:6:41084:41084	1466025	1					
ANR	1469666	ExpressionStatement	repeat_type = greedy_non_default	5645:6:180337:180369	1466025	0	True				
ANR	1469667	AssignmentExpression	repeat_type = greedy_non_default		1466025	0		=			
ANR	1469668	Identifier	repeat_type		1466025	0					
ANR	1469669	Identifier	greedy_non_default		1466025	1					
ANR	1469670	ExpressionStatement	ptr ++	5646:6:180377:180382	1466025	1	True				
ANR	1469671	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1469672	Identifier	ptr		1466025	0					
ANR	1469673	IncDec	++		1466025	1					
ANR	1469674	ElseStatement	else		1466025	0					
ANR	1469675	ExpressionStatement	repeat_type = greedy_default	5648:9:180401:180429	1466025	0	True				
ANR	1469676	AssignmentExpression	repeat_type = greedy_default		1466025	0		=			
ANR	1469677	Identifier	repeat_type		1466025	0					
ANR	1469678	Identifier	greedy_default		1466025	1					
ANR	1469679	IfStatement	if ( * previous == OP_RECURSE )		1466025	87					
ANR	1469680	Condition	* previous == OP_RECURSE	5656:8:180819:180841	1466025	0	True				
ANR	1469681	EqualityExpression	* previous == OP_RECURSE		1466025	0		==			
ANR	1469682	UnaryOperationExpression	* previous		1466025	0					
ANR	1469683	UnaryOperator	*		1466025	0					
ANR	1469684	Identifier	previous		1466025	1					
ANR	1469685	Identifier	OP_RECURSE		1466025	1					
ANR	1469686	CompoundStatement		1218:6:41605:41605	1466025	1					
ANR	1469687	ExpressionStatement	"memmove ( previous + 1 + LINK_SIZE , previous , IN_UCHARS ( 1 + LINK_SIZE ) )"	5658:6:180858:180927	1466025	0	True				
ANR	1469688	CallExpression	"memmove ( previous + 1 + LINK_SIZE , previous , IN_UCHARS ( 1 + LINK_SIZE ) )"		1466025	0					
ANR	1469689	Callee	memmove		1466025	0					
ANR	1469690	Identifier	memmove		1466025	0					
ANR	1469691	ArgumentList	previous + 1 + LINK_SIZE		1466025	1					
ANR	1469692	Argument	previous + 1 + LINK_SIZE		1466025	0					
ANR	1469693	AdditiveExpression	previous + 1 + LINK_SIZE		1466025	0		+			
ANR	1469694	Identifier	previous		1466025	0					
ANR	1469695	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1469696	PrimaryExpression	1		1466025	0					
ANR	1469697	Identifier	LINK_SIZE		1466025	1					
ANR	1469698	Argument	previous		1466025	1					
ANR	1469699	Identifier	previous		1466025	0					
ANR	1469700	Argument	IN_UCHARS ( 1 + LINK_SIZE )		1466025	2					
ANR	1469701	CallExpression	IN_UCHARS ( 1 + LINK_SIZE )		1466025	0					
ANR	1469702	Callee	IN_UCHARS		1466025	0					
ANR	1469703	Identifier	IN_UCHARS		1466025	0					
ANR	1469704	ArgumentList	1 + LINK_SIZE		1466025	1					
ANR	1469705	Argument	1 + LINK_SIZE		1466025	0					
ANR	1469706	AdditiveExpression	1 + LINK_SIZE		1466025	0		+			
ANR	1469707	PrimaryExpression	1		1466025	0					
ANR	1469708	Identifier	LINK_SIZE		1466025	1					
ANR	1469709	ExpressionStatement	* previous = OP_ONCE	5659:6:180935:180954	1466025	1	True				
ANR	1469710	AssignmentExpression	* previous = OP_ONCE		1466025	0		=			
ANR	1469711	UnaryOperationExpression	* previous		1466025	0					
ANR	1469712	UnaryOperator	*		1466025	0					
ANR	1469713	Identifier	previous		1466025	1					
ANR	1469714	Identifier	OP_ONCE		1466025	1					
ANR	1469715	ExpressionStatement	"PUT ( previous , 1 , 2 + 2 * LINK_SIZE )"	5660:6:180962:180995	1466025	2	True				
ANR	1469716	CallExpression	"PUT ( previous , 1 , 2 + 2 * LINK_SIZE )"		1466025	0					
ANR	1469717	Callee	PUT		1466025	0					
ANR	1469718	Identifier	PUT		1466025	0					
ANR	1469719	ArgumentList	previous		1466025	1					
ANR	1469720	Argument	previous		1466025	0					
ANR	1469721	Identifier	previous		1466025	0					
ANR	1469722	Argument	1		1466025	1					
ANR	1469723	PrimaryExpression	1		1466025	0					
ANR	1469724	Argument	2 + 2 * LINK_SIZE		1466025	2					
ANR	1469725	AdditiveExpression	2 + 2 * LINK_SIZE		1466025	0		+			
ANR	1469726	PrimaryExpression	2		1466025	0					
ANR	1469727	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1469728	PrimaryExpression	2		1466025	0					
ANR	1469729	Identifier	LINK_SIZE		1466025	1					
ANR	1469730	ExpressionStatement	previous [ 2 + 2 * LINK_SIZE ] = OP_KET	5661:6:181003:181037	1466025	3	True				
ANR	1469731	AssignmentExpression	previous [ 2 + 2 * LINK_SIZE ] = OP_KET		1466025	0		=			
ANR	1469732	ArrayIndexing	previous [ 2 + 2 * LINK_SIZE ]		1466025	0					
ANR	1469733	Identifier	previous		1466025	0					
ANR	1469734	AdditiveExpression	2 + 2 * LINK_SIZE		1466025	1		+			
ANR	1469735	PrimaryExpression	2		1466025	0					
ANR	1469736	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1469737	PrimaryExpression	2		1466025	0					
ANR	1469738	Identifier	LINK_SIZE		1466025	1					
ANR	1469739	Identifier	OP_KET		1466025	1					
ANR	1469740	ExpressionStatement	"PUT ( previous , 3 + 2 * LINK_SIZE , 2 + 2 * LINK_SIZE )"	5662:6:181045:181092	1466025	4	True				
ANR	1469741	CallExpression	"PUT ( previous , 3 + 2 * LINK_SIZE , 2 + 2 * LINK_SIZE )"		1466025	0					
ANR	1469742	Callee	PUT		1466025	0					
ANR	1469743	Identifier	PUT		1466025	0					
ANR	1469744	ArgumentList	previous		1466025	1					
ANR	1469745	Argument	previous		1466025	0					
ANR	1469746	Identifier	previous		1466025	0					
ANR	1469747	Argument	3 + 2 * LINK_SIZE		1466025	1					
ANR	1469748	AdditiveExpression	3 + 2 * LINK_SIZE		1466025	0		+			
ANR	1469749	PrimaryExpression	3		1466025	0					
ANR	1469750	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1469751	PrimaryExpression	2		1466025	0					
ANR	1469752	Identifier	LINK_SIZE		1466025	1					
ANR	1469753	Argument	2 + 2 * LINK_SIZE		1466025	2					
ANR	1469754	AdditiveExpression	2 + 2 * LINK_SIZE		1466025	0		+			
ANR	1469755	PrimaryExpression	2		1466025	0					
ANR	1469756	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1469757	PrimaryExpression	2		1466025	0					
ANR	1469758	Identifier	LINK_SIZE		1466025	1					
ANR	1469759	ExpressionStatement	code += 2 + 2 * LINK_SIZE	5663:6:181100:181125	1466025	5	True				
ANR	1469760	AssignmentExpression	code += 2 + 2 * LINK_SIZE		1466025	0		+=			
ANR	1469761	Identifier	code		1466025	0					
ANR	1469762	AdditiveExpression	2 + 2 * LINK_SIZE		1466025	1		+			
ANR	1469763	PrimaryExpression	2		1466025	0					
ANR	1469764	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1469765	PrimaryExpression	2		1466025	0					
ANR	1469766	Identifier	LINK_SIZE		1466025	1					
ANR	1469767	ExpressionStatement	length_prevgroup = 3 + 3 * LINK_SIZE	5664:6:181133:181167	1466025	6	True				
ANR	1469768	AssignmentExpression	length_prevgroup = 3 + 3 * LINK_SIZE		1466025	0		=			
ANR	1469769	Identifier	length_prevgroup		1466025	0					
ANR	1469770	AdditiveExpression	3 + 3 * LINK_SIZE		1466025	1		+			
ANR	1469771	PrimaryExpression	3		1466025	0					
ANR	1469772	MultiplicativeExpression	3 * LINK_SIZE		1466025	1		*			
ANR	1469773	PrimaryExpression	3		1466025	0					
ANR	1469774	Identifier	LINK_SIZE		1466025	1					
ANR	1469775	IfStatement	if ( lengthptr == NULL && cd -> hwm >= cd -> start_workspace + LINK_SIZE )		1466025	7					
ANR	1469776	Condition	lengthptr == NULL && cd -> hwm >= cd -> start_workspace + LINK_SIZE	5669:10:181309:181371	1466025	0	True				
ANR	1469777	AndExpression	lengthptr == NULL && cd -> hwm >= cd -> start_workspace + LINK_SIZE		1466025	0		&&			
ANR	1469778	EqualityExpression	lengthptr == NULL		1466025	0		==			
ANR	1469779	Identifier	lengthptr		1466025	0					
ANR	1469780	Identifier	NULL		1466025	1					
ANR	1469781	RelationalExpression	cd -> hwm >= cd -> start_workspace + LINK_SIZE		1466025	1		>=			
ANR	1469782	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1469783	Identifier	cd		1466025	0					
ANR	1469784	Identifier	hwm		1466025	1					
ANR	1469785	AdditiveExpression	cd -> start_workspace + LINK_SIZE		1466025	1		+			
ANR	1469786	PtrMemberAccess	cd -> start_workspace		1466025	0					
ANR	1469787	Identifier	cd		1466025	0					
ANR	1469788	Identifier	start_workspace		1466025	1					
ANR	1469789	Identifier	LINK_SIZE		1466025	1					
ANR	1469790	CompoundStatement		1232:8:42147:42184	1466025	1					
ANR	1469791	IdentifierDeclStatement	"int offset = GET ( cd -> hwm , - LINK_SIZE ) ;"	5671:8:181392:181429	1466025	0	True				
ANR	1469792	IdentifierDecl	"offset = GET ( cd -> hwm , - LINK_SIZE )"		1466025	0					
ANR	1469793	IdentifierDeclType	int		1466025	0					
ANR	1469794	Identifier	offset		1466025	1					
ANR	1469795	AssignmentExpression	"offset = GET ( cd -> hwm , - LINK_SIZE )"		1466025	2		=			
ANR	1469796	Identifier	offset		1466025	0					
ANR	1469797	CallExpression	"GET ( cd -> hwm , - LINK_SIZE )"		1466025	1					
ANR	1469798	Callee	GET		1466025	0					
ANR	1469799	Identifier	GET		1466025	0					
ANR	1469800	ArgumentList	cd -> hwm		1466025	1					
ANR	1469801	Argument	cd -> hwm		1466025	0					
ANR	1469802	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1469803	Identifier	cd		1466025	0					
ANR	1469804	Identifier	hwm		1466025	1					
ANR	1469805	Argument	- LINK_SIZE		1466025	1					
ANR	1469806	UnaryOperationExpression	- LINK_SIZE		1466025	0					
ANR	1469807	UnaryOperator	-		1466025	0					
ANR	1469808	Identifier	LINK_SIZE		1466025	1					
ANR	1469809	IfStatement	if ( offset == previous + 1 - cd -> start_code )		1466025	1					
ANR	1469810	Condition	offset == previous + 1 - cd -> start_code	5672:12:181443:181481	1466025	0	True				
ANR	1469811	EqualityExpression	offset == previous + 1 - cd -> start_code		1466025	0		==			
ANR	1469812	Identifier	offset		1466025	0					
ANR	1469813	AdditiveExpression	previous + 1 - cd -> start_code		1466025	1		+			
ANR	1469814	Identifier	previous		1466025	0					
ANR	1469815	AdditiveExpression	1 - cd -> start_code		1466025	1		-			
ANR	1469816	PrimaryExpression	1		1466025	0					
ANR	1469817	PtrMemberAccess	cd -> start_code		1466025	1					
ANR	1469818	Identifier	cd		1466025	0					
ANR	1469819	Identifier	start_code		1466025	1					
ANR	1469820	ExpressionStatement	"PUT ( cd -> hwm , - LINK_SIZE , offset + 1 + LINK_SIZE )"	5673:10:181494:181542	1466025	1	True				
ANR	1469821	CallExpression	"PUT ( cd -> hwm , - LINK_SIZE , offset + 1 + LINK_SIZE )"		1466025	0					
ANR	1469822	Callee	PUT		1466025	0					
ANR	1469823	Identifier	PUT		1466025	0					
ANR	1469824	ArgumentList	cd -> hwm		1466025	1					
ANR	1469825	Argument	cd -> hwm		1466025	0					
ANR	1469826	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1469827	Identifier	cd		1466025	0					
ANR	1469828	Identifier	hwm		1466025	1					
ANR	1469829	Argument	- LINK_SIZE		1466025	1					
ANR	1469830	UnaryOperationExpression	- LINK_SIZE		1466025	0					
ANR	1469831	UnaryOperator	-		1466025	0					
ANR	1469832	Identifier	LINK_SIZE		1466025	1					
ANR	1469833	Argument	offset + 1 + LINK_SIZE		1466025	2					
ANR	1469834	AdditiveExpression	offset + 1 + LINK_SIZE		1466025	0		+			
ANR	1469835	Identifier	offset		1466025	0					
ANR	1469836	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1469837	PrimaryExpression	1		1466025	0					
ANR	1469838	Identifier	LINK_SIZE		1466025	1					
ANR	1469839	ElseStatement	else		1466025	0					
ANR	1469840	IfStatement	if ( * previous >= OP_ASSERT && * previous <= OP_COND )		1466025	0					
ANR	1469841	Condition	* previous >= OP_ASSERT && * previous <= OP_COND	5927:13:190118:190163	1466025	0	True				
ANR	1469842	AndExpression	* previous >= OP_ASSERT && * previous <= OP_COND		1466025	0		&&			
ANR	1469843	RelationalExpression	* previous >= OP_ASSERT		1466025	0		>=			
ANR	1469844	UnaryOperationExpression	* previous		1466025	0					
ANR	1469845	UnaryOperator	*		1466025	0					
ANR	1469846	Identifier	previous		1466025	1					
ANR	1469847	Identifier	OP_ASSERT		1466025	1					
ANR	1469848	RelationalExpression	* previous <= OP_COND		1466025	1		<=			
ANR	1469849	UnaryOperationExpression	* previous		1466025	0					
ANR	1469850	UnaryOperator	*		1466025	0					
ANR	1469851	Identifier	previous		1466025	1					
ANR	1469852	Identifier	OP_COND		1466025	1					
ANR	1469853	CompoundStatement		1494:6:51079:51108	1466025	1					
ANR	1469854	Statement	register	5929:6:190180:190187	1466025	0	True				
ANR	1469855	IdentifierDeclStatement	int i ;	5929:15:190189:190194	1466025	1	True				
ANR	1469856	IdentifierDecl	i		1466025	0					
ANR	1469857	IdentifierDeclType	int		1466025	0					
ANR	1469858	Identifier	i		1466025	1					
ANR	1469859	IdentifierDeclStatement	int len = ( int ) ( code - previous ) ;	5930:6:190202:190234	1466025	2	True				
ANR	1469860	IdentifierDecl	len = ( int ) ( code - previous )		1466025	0					
ANR	1469861	IdentifierDeclType	int		1466025	0					
ANR	1469862	Identifier	len		1466025	1					
ANR	1469863	AssignmentExpression	len = ( int ) ( code - previous )		1466025	2		=			
ANR	1469864	Identifier	len		1466025	0					
ANR	1469865	CastExpression	( int ) ( code - previous )		1466025	1					
ANR	1469866	CastTarget	int		1466025	0					
ANR	1469867	AdditiveExpression	code - previous		1466025	1		-			
ANR	1469868	Identifier	code		1466025	0					
ANR	1469869	Identifier	previous		1466025	1					
ANR	1469870	IdentifierDeclStatement	size_t base_hwm_offset = save_hwm_offset ;	5931:6:190242:190282	1466025	3	True				
ANR	1469871	IdentifierDecl	base_hwm_offset = save_hwm_offset		1466025	0					
ANR	1469872	IdentifierDeclType	size_t		1466025	0					
ANR	1469873	Identifier	base_hwm_offset		1466025	1					
ANR	1469874	AssignmentExpression	base_hwm_offset = save_hwm_offset		1466025	2		=			
ANR	1469875	Identifier	save_hwm_offset		1466025	0					
ANR	1469876	Identifier	save_hwm_offset		1466025	1					
ANR	1469877	IdentifierDeclStatement	pcre_uchar * bralink = NULL ;	5932:6:190290:190316	1466025	4	True				
ANR	1469878	IdentifierDecl	* bralink = NULL		1466025	0					
ANR	1469879	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1469880	Identifier	bralink		1466025	1					
ANR	1469881	AssignmentExpression	* bralink = NULL		1466025	2		=			
ANR	1469882	Identifier	NULL		1466025	0					
ANR	1469883	Identifier	NULL		1466025	1					
ANR	1469884	IdentifierDeclStatement	pcre_uchar * brazeroptr = NULL ;	5933:6:190324:190353	1466025	5	True				
ANR	1469885	IdentifierDecl	* brazeroptr = NULL		1466025	0					
ANR	1469886	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1469887	Identifier	brazeroptr		1466025	1					
ANR	1469888	AssignmentExpression	* brazeroptr = NULL		1466025	2		=			
ANR	1469889	Identifier	NULL		1466025	0					
ANR	1469890	Identifier	NULL		1466025	1					
ANR	1469891	IfStatement	if ( * previous == OP_COND && previous [ LINK_SIZE + 1 ] == OP_DEF )		1466025	6					
ANR	1469892	Condition	* previous == OP_COND && previous [ LINK_SIZE + 1 ] == OP_DEF	5938:10:190482:190536	1466025	0	True				
ANR	1469893	AndExpression	* previous == OP_COND && previous [ LINK_SIZE + 1 ] == OP_DEF		1466025	0		&&			
ANR	1469894	EqualityExpression	* previous == OP_COND		1466025	0		==			
ANR	1469895	UnaryOperationExpression	* previous		1466025	0					
ANR	1469896	UnaryOperator	*		1466025	0					
ANR	1469897	Identifier	previous		1466025	1					
ANR	1469898	Identifier	OP_COND		1466025	1					
ANR	1469899	EqualityExpression	previous [ LINK_SIZE + 1 ] == OP_DEF		1466025	1		==			
ANR	1469900	ArrayIndexing	previous [ LINK_SIZE + 1 ]		1466025	0					
ANR	1469901	Identifier	previous		1466025	0					
ANR	1469902	AdditiveExpression	LINK_SIZE + 1		1466025	1		+			
ANR	1469903	Identifier	LINK_SIZE		1466025	0					
ANR	1469904	PrimaryExpression	1		1466025	1					
ANR	1469905	Identifier	OP_DEF		1466025	1					
ANR	1469906	GotoStatement	goto END_REPEAT ;	5939:8:190547:190562	1466025	1	True				
ANR	1469907	Identifier	END_REPEAT		1466025	0					
ANR	1469908	IfStatement	if ( * previous < OP_ONCE )		1466025	7					
ANR	1469909	Condition	* previous < OP_ONCE	5946:10:190859:190877	1466025	0	True				
ANR	1469910	RelationalExpression	* previous < OP_ONCE		1466025	0		<			
ANR	1469911	UnaryOperationExpression	* previous		1466025	0					
ANR	1469912	UnaryOperator	*		1466025	0					
ANR	1469913	Identifier	previous		1466025	1					
ANR	1469914	Identifier	OP_ONCE		1466025	1					
ANR	1469915	CompoundStatement		1508:8:51662:51662	1466025	1					
ANR	1469916	IfStatement	if ( repeat_min > 0 )		1466025	0					
ANR	1469917	Condition	repeat_min > 0	5948:12:190921:190934	1466025	0	True				
ANR	1469918	RelationalExpression	repeat_min > 0		1466025	0		>			
ANR	1469919	Identifier	repeat_min		1466025	0					
ANR	1469920	PrimaryExpression	0		1466025	1					
ANR	1469921	GotoStatement	goto END_REPEAT ;	5948:28:190937:190952	1466025	1	True				
ANR	1469922	Identifier	END_REPEAT		1466025	0					
ANR	1469923	IfStatement	if ( repeat_max < 0 || repeat_max > 1 )		1466025	1					
ANR	1469924	Condition	repeat_max < 0 || repeat_max > 1	5949:12:190966:190997	1466025	0	True				
ANR	1469925	OrExpression	repeat_max < 0 || repeat_max > 1		1466025	0		||			
ANR	1469926	RelationalExpression	repeat_max < 0		1466025	0		<			
ANR	1469927	Identifier	repeat_max		1466025	0					
ANR	1469928	PrimaryExpression	0		1466025	1					
ANR	1469929	RelationalExpression	repeat_max > 1		1466025	1		>			
ANR	1469930	Identifier	repeat_max		1466025	0					
ANR	1469931	PrimaryExpression	1		1466025	1					
ANR	1469932	ExpressionStatement	repeat_max = 1	5949:46:191000:191014	1466025	1	True				
ANR	1469933	AssignmentExpression	repeat_max = 1		1466025	0		=			
ANR	1469934	Identifier	repeat_max		1466025	0					
ANR	1469935	PrimaryExpression	1		1466025	1					
ANR	1469936	IfStatement	if ( repeat_min == 0 )		1466025	8					
ANR	1469937	Condition	repeat_min == 0	5959:10:191451:191465	1466025	0	True				
ANR	1469938	EqualityExpression	repeat_min == 0		1466025	0		==			
ANR	1469939	Identifier	repeat_min		1466025	0					
ANR	1469940	PrimaryExpression	0		1466025	1					
ANR	1469941	CompoundStatement		1521:8:52231:52231	1466025	1					
ANR	1469942	IfStatement	if ( repeat_max <= 1 )		1466025	0					
ANR	1469943	Condition	repeat_max <= 1	5983:12:192466:192480	1466025	0	True				
ANR	1469944	RelationalExpression	repeat_max <= 1		1466025	0		<=			
ANR	1469945	Identifier	repeat_max		1466025	0					
ANR	1469946	PrimaryExpression	1		1466025	1					
ANR	1469947	CompoundStatement		1545:10:53284:53284	1466025	1					
ANR	1469948	ExpressionStatement	* code = OP_END	5985:10:192541:192555	1466025	0	True				
ANR	1469949	AssignmentExpression	* code = OP_END		1466025	0		=			
ANR	1469950	UnaryOperationExpression	* code		1466025	0					
ANR	1469951	UnaryOperator	*		1466025	0					
ANR	1469952	Identifier	code		1466025	1					
ANR	1469953	Identifier	OP_END		1466025	1					
ANR	1469954	ExpressionStatement	"adjust_recurse ( previous , 1 , utf , cd , save_hwm_offset )"	5986:10:192567:192620	1466025	1	True				
ANR	1469955	CallExpression	"adjust_recurse ( previous , 1 , utf , cd , save_hwm_offset )"		1466025	0					
ANR	1469956	Callee	adjust_recurse		1466025	0					
ANR	1469957	Identifier	adjust_recurse		1466025	0					
ANR	1469958	ArgumentList	previous		1466025	1					
ANR	1469959	Argument	previous		1466025	0					
ANR	1469960	Identifier	previous		1466025	0					
ANR	1469961	Argument	1		1466025	1					
ANR	1469962	PrimaryExpression	1		1466025	0					
ANR	1469963	Argument	utf		1466025	2					
ANR	1469964	Identifier	utf		1466025	0					
ANR	1469965	Argument	cd		1466025	3					
ANR	1469966	Identifier	cd		1466025	0					
ANR	1469967	Argument	save_hwm_offset		1466025	4					
ANR	1469968	Identifier	save_hwm_offset		1466025	0					
ANR	1469969	ExpressionStatement	"memmove ( previous + 1 , previous , IN_UCHARS ( len ) )"	5987:10:192632:192679	1466025	2	True				
ANR	1469970	CallExpression	"memmove ( previous + 1 , previous , IN_UCHARS ( len ) )"		1466025	0					
ANR	1469971	Callee	memmove		1466025	0					
ANR	1469972	Identifier	memmove		1466025	0					
ANR	1469973	ArgumentList	previous + 1		1466025	1					
ANR	1469974	Argument	previous + 1		1466025	0					
ANR	1469975	AdditiveExpression	previous + 1		1466025	0		+			
ANR	1469976	Identifier	previous		1466025	0					
ANR	1469977	PrimaryExpression	1		1466025	1					
ANR	1469978	Argument	previous		1466025	1					
ANR	1469979	Identifier	previous		1466025	0					
ANR	1469980	Argument	IN_UCHARS ( len )		1466025	2					
ANR	1469981	CallExpression	IN_UCHARS ( len )		1466025	0					
ANR	1469982	Callee	IN_UCHARS		1466025	0					
ANR	1469983	Identifier	IN_UCHARS		1466025	0					
ANR	1469984	ArgumentList	len		1466025	1					
ANR	1469985	Argument	len		1466025	0					
ANR	1469986	Identifier	len		1466025	0					
ANR	1469987	ExpressionStatement	code ++	5988:10:192691:192697	1466025	3	True				
ANR	1469988	PostIncDecOperationExpression	code ++		1466025	0					
ANR	1469989	Identifier	code		1466025	0					
ANR	1469990	IncDec	++		1466025	1					
ANR	1469991	IfStatement	if ( repeat_max == 0 )		1466025	4					
ANR	1469992	Condition	repeat_max == 0	5989:14:192713:192727	1466025	0	True				
ANR	1469993	EqualityExpression	repeat_max == 0		1466025	0		==			
ANR	1469994	Identifier	repeat_max		1466025	0					
ANR	1469995	PrimaryExpression	0		1466025	1					
ANR	1469996	CompoundStatement		1551:12:53497:53497	1466025	1					
ANR	1469997	ExpressionStatement	* previous ++ = OP_SKIPZERO	5991:12:192756:192781	1466025	0	True				
ANR	1469998	AssignmentExpression	* previous ++ = OP_SKIPZERO		1466025	0		=			
ANR	1469999	UnaryOperationExpression	* previous ++		1466025	0					
ANR	1470000	UnaryOperator	*		1466025	0					
ANR	1470001	PostIncDecOperationExpression	previous ++		1466025	1					
ANR	1470002	Identifier	previous		1466025	0					
ANR	1470003	IncDec	++		1466025	1					
ANR	1470004	Identifier	OP_SKIPZERO		1466025	1					
ANR	1470005	GotoStatement	goto END_REPEAT ;	5992:12:192795:192810	1466025	1	True				
ANR	1470006	Identifier	END_REPEAT		1466025	0					
ANR	1470007	ExpressionStatement	brazeroptr = previous	5994:10:192836:192857	1466025	5	True				
ANR	1470008	AssignmentExpression	brazeroptr = previous		1466025	0		=			
ANR	1470009	Identifier	brazeroptr		1466025	0					
ANR	1470010	Identifier	previous		1466025	1					
ANR	1470011	ExpressionStatement	* previous ++ = OP_BRAZERO + repeat_type	5995:10:192909:192947	1466025	6	True				
ANR	1470012	AssignmentExpression	* previous ++ = OP_BRAZERO + repeat_type		1466025	0		=			
ANR	1470013	UnaryOperationExpression	* previous ++		1466025	0					
ANR	1470014	UnaryOperator	*		1466025	0					
ANR	1470015	PostIncDecOperationExpression	previous ++		1466025	1					
ANR	1470016	Identifier	previous		1466025	0					
ANR	1470017	IncDec	++		1466025	1					
ANR	1470018	AdditiveExpression	OP_BRAZERO + repeat_type		1466025	1		+			
ANR	1470019	Identifier	OP_BRAZERO		1466025	0					
ANR	1470020	Identifier	repeat_type		1466025	1					
ANR	1470021	ElseStatement	else		1466025	0					
ANR	1470022	CompoundStatement		1569:10:54291:54301	1466025	0					
ANR	1470023	IdentifierDeclStatement	int offset ;	6008:10:193536:193546	1466025	0	True				
ANR	1470024	IdentifierDecl	offset		1466025	0					
ANR	1470025	IdentifierDeclType	int		1466025	0					
ANR	1470026	Identifier	offset		1466025	1					
ANR	1470027	ExpressionStatement	* code = OP_END	6009:10:193558:193572	1466025	1	True				
ANR	1470028	AssignmentExpression	* code = OP_END		1466025	0		=			
ANR	1470029	UnaryOperationExpression	* code		1466025	0					
ANR	1470030	UnaryOperator	*		1466025	0					
ANR	1470031	Identifier	code		1466025	1					
ANR	1470032	Identifier	OP_END		1466025	1					
ANR	1470033	ExpressionStatement	"adjust_recurse ( previous , 2 + LINK_SIZE , utf , cd , save_hwm_offset )"	6010:10:193584:193649	1466025	2	True				
ANR	1470034	CallExpression	"adjust_recurse ( previous , 2 + LINK_SIZE , utf , cd , save_hwm_offset )"		1466025	0					
ANR	1470035	Callee	adjust_recurse		1466025	0					
ANR	1470036	Identifier	adjust_recurse		1466025	0					
ANR	1470037	ArgumentList	previous		1466025	1					
ANR	1470038	Argument	previous		1466025	0					
ANR	1470039	Identifier	previous		1466025	0					
ANR	1470040	Argument	2 + LINK_SIZE		1466025	1					
ANR	1470041	AdditiveExpression	2 + LINK_SIZE		1466025	0		+			
ANR	1470042	PrimaryExpression	2		1466025	0					
ANR	1470043	Identifier	LINK_SIZE		1466025	1					
ANR	1470044	Argument	utf		1466025	2					
ANR	1470045	Identifier	utf		1466025	0					
ANR	1470046	Argument	cd		1466025	3					
ANR	1470047	Identifier	cd		1466025	0					
ANR	1470048	Argument	save_hwm_offset		1466025	4					
ANR	1470049	Identifier	save_hwm_offset		1466025	0					
ANR	1470050	ExpressionStatement	"memmove ( previous + 2 + LINK_SIZE , previous , IN_UCHARS ( len ) )"	6011:10:193661:193720	1466025	3	True				
ANR	1470051	CallExpression	"memmove ( previous + 2 + LINK_SIZE , previous , IN_UCHARS ( len ) )"		1466025	0					
ANR	1470052	Callee	memmove		1466025	0					
ANR	1470053	Identifier	memmove		1466025	0					
ANR	1470054	ArgumentList	previous + 2 + LINK_SIZE		1466025	1					
ANR	1470055	Argument	previous + 2 + LINK_SIZE		1466025	0					
ANR	1470056	AdditiveExpression	previous + 2 + LINK_SIZE		1466025	0		+			
ANR	1470057	Identifier	previous		1466025	0					
ANR	1470058	AdditiveExpression	2 + LINK_SIZE		1466025	1		+			
ANR	1470059	PrimaryExpression	2		1466025	0					
ANR	1470060	Identifier	LINK_SIZE		1466025	1					
ANR	1470061	Argument	previous		1466025	1					
ANR	1470062	Identifier	previous		1466025	0					
ANR	1470063	Argument	IN_UCHARS ( len )		1466025	2					
ANR	1470064	CallExpression	IN_UCHARS ( len )		1466025	0					
ANR	1470065	Callee	IN_UCHARS		1466025	0					
ANR	1470066	Identifier	IN_UCHARS		1466025	0					
ANR	1470067	ArgumentList	len		1466025	1					
ANR	1470068	Argument	len		1466025	0					
ANR	1470069	Identifier	len		1466025	0					
ANR	1470070	ExpressionStatement	code += 2 + LINK_SIZE	6012:10:193732:193753	1466025	4	True				
ANR	1470071	AssignmentExpression	code += 2 + LINK_SIZE		1466025	0		+=			
ANR	1470072	Identifier	code		1466025	0					
ANR	1470073	AdditiveExpression	2 + LINK_SIZE		1466025	1		+			
ANR	1470074	PrimaryExpression	2		1466025	0					
ANR	1470075	Identifier	LINK_SIZE		1466025	1					
ANR	1470076	ExpressionStatement	* previous ++ = OP_BRAZERO + repeat_type	6013:10:193765:193803	1466025	5	True				
ANR	1470077	AssignmentExpression	* previous ++ = OP_BRAZERO + repeat_type		1466025	0		=			
ANR	1470078	UnaryOperationExpression	* previous ++		1466025	0					
ANR	1470079	UnaryOperator	*		1466025	0					
ANR	1470080	PostIncDecOperationExpression	previous ++		1466025	1					
ANR	1470081	Identifier	previous		1466025	0					
ANR	1470082	IncDec	++		1466025	1					
ANR	1470083	AdditiveExpression	OP_BRAZERO + repeat_type		1466025	1		+			
ANR	1470084	Identifier	OP_BRAZERO		1466025	0					
ANR	1470085	Identifier	repeat_type		1466025	1					
ANR	1470086	ExpressionStatement	* previous ++ = OP_BRA	6014:10:193815:193835	1466025	6	True				
ANR	1470087	AssignmentExpression	* previous ++ = OP_BRA		1466025	0		=			
ANR	1470088	UnaryOperationExpression	* previous ++		1466025	0					
ANR	1470089	UnaryOperator	*		1466025	0					
ANR	1470090	PostIncDecOperationExpression	previous ++		1466025	1					
ANR	1470091	Identifier	previous		1466025	0					
ANR	1470092	IncDec	++		1466025	1					
ANR	1470093	Identifier	OP_BRA		1466025	1					
ANR	1470094	ExpressionStatement	offset = ( bralink == NULL ) ? 0 : ( int ) ( previous - bralink )	6019:10:193994:194051	1466025	7	True				
ANR	1470095	AssignmentExpression	offset = ( bralink == NULL ) ? 0 : ( int ) ( previous - bralink )		1466025	0		=			
ANR	1470096	Identifier	offset		1466025	0					
ANR	1470097	ConditionalExpression	( bralink == NULL ) ? 0 : ( int ) ( previous - bralink )		1466025	1					
ANR	1470098	Condition	bralink == NULL		1466025	0					
ANR	1470099	EqualityExpression	bralink == NULL		1466025	0		==			
ANR	1470100	Identifier	bralink		1466025	0					
ANR	1470101	Identifier	NULL		1466025	1					
ANR	1470102	PrimaryExpression	0		1466025	1					
ANR	1470103	CastExpression	( int ) ( previous - bralink )		1466025	2					
ANR	1470104	CastTarget	int		1466025	0					
ANR	1470105	AdditiveExpression	previous - bralink		1466025	1		-			
ANR	1470106	Identifier	previous		1466025	0					
ANR	1470107	Identifier	bralink		1466025	1					
ANR	1470108	ExpressionStatement	bralink = previous	6020:10:194063:194081	1466025	8	True				
ANR	1470109	AssignmentExpression	bralink = previous		1466025	0		=			
ANR	1470110	Identifier	bralink		1466025	0					
ANR	1470111	Identifier	previous		1466025	1					
ANR	1470112	ExpressionStatement	"PUTINC ( previous , 0 , offset )"	6021:10:194093:194120	1466025	9	True				
ANR	1470113	CallExpression	"PUTINC ( previous , 0 , offset )"		1466025	0					
ANR	1470114	Callee	PUTINC		1466025	0					
ANR	1470115	Identifier	PUTINC		1466025	0					
ANR	1470116	ArgumentList	previous		1466025	1					
ANR	1470117	Argument	previous		1466025	0					
ANR	1470118	Identifier	previous		1466025	0					
ANR	1470119	Argument	0		1466025	1					
ANR	1470120	PrimaryExpression	0		1466025	0					
ANR	1470121	Argument	offset		1466025	2					
ANR	1470122	Identifier	offset		1466025	0					
ANR	1470123	ExpressionStatement	repeat_max --	6024:8:194143:194155	1466025	1	True				
ANR	1470124	PostIncDecOperationExpression	repeat_max --		1466025	0					
ANR	1470125	Identifier	repeat_max		1466025	0					
ANR	1470126	IncDec	--		1466025	1					
ANR	1470127	ElseStatement	else		1466025	0					
ANR	1470128	CompoundStatement		1596:8:55404:55404	1466025	0					
ANR	1470129	IfStatement	if ( repeat_min > 1 )		1466025	0					
ANR	1470130	Condition	repeat_min > 1	6036:12:194663:194676	1466025	0	True				
ANR	1470131	RelationalExpression	repeat_min > 1		1466025	0		>			
ANR	1470132	Identifier	repeat_min		1466025	0					
ANR	1470133	PrimaryExpression	1		1466025	1					
ANR	1470134	CompoundStatement		1598:10:55444:55444	1466025	1					
ANR	1470135	IfStatement	if ( lengthptr != NULL )		1466025	0					
ANR	1470136	Condition	lengthptr != NULL	6043:14:194996:195012	1466025	0	True				
ANR	1470137	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1470138	Identifier	lengthptr		1466025	0					
ANR	1470139	Identifier	NULL		1466025	1					
ANR	1470140	CompoundStatement		1606:12:55796:55841	1466025	1					
ANR	1470141	IdentifierDeclStatement	int delta = ( repeat_min - 1 ) * length_prevgroup ;	6045:12:195041:195086	1466025	0	True				
ANR	1470142	IdentifierDecl	delta = ( repeat_min - 1 ) * length_prevgroup		1466025	0					
ANR	1470143	IdentifierDeclType	int		1466025	0					
ANR	1470144	Identifier	delta		1466025	1					
ANR	1470145	AssignmentExpression	delta = ( repeat_min - 1 ) * length_prevgroup		1466025	2		=			
ANR	1470146	Identifier	delta		1466025	0					
ANR	1470147	MultiplicativeExpression	( repeat_min - 1 ) * length_prevgroup		1466025	1		*			
ANR	1470148	AdditiveExpression	repeat_min - 1		1466025	0		-			
ANR	1470149	Identifier	repeat_min		1466025	0					
ANR	1470150	PrimaryExpression	1		1466025	1					
ANR	1470151	Identifier	length_prevgroup		1466025	1					
ANR	1470152	IfStatement	if ( ( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta )		1466025	1					
ANR	1470153	Condition	( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta	6046:16:195104:195286	1466025	0	True				
ANR	1470154	OrExpression	( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta		1466025	0		||			
ANR	1470155	RelationalExpression	( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup > ( INT64_OR_DOUBLE ) INT_MAX		1466025	0		>			
ANR	1470156	MultiplicativeExpression	( INT64_OR_DOUBLE ) ( repeat_min - 1 ) * ( INT64_OR_DOUBLE ) length_prevgroup		1466025	0		*			
ANR	1470157	CastExpression	( INT64_OR_DOUBLE ) ( repeat_min - 1 )		1466025	0					
ANR	1470158	CastTarget	INT64_OR_DOUBLE		1466025	0					
ANR	1470159	AdditiveExpression	repeat_min - 1		1466025	1		-			
ANR	1470160	Identifier	repeat_min		1466025	0					
ANR	1470161	PrimaryExpression	1		1466025	1					
ANR	1470162	CastExpression	( INT64_OR_DOUBLE ) length_prevgroup		1466025	1					
ANR	1470163	CastTarget	INT64_OR_DOUBLE		1466025	0					
ANR	1470164	Identifier	length_prevgroup		1466025	1					
ANR	1470165	CastExpression	( INT64_OR_DOUBLE ) INT_MAX		1466025	1					
ANR	1470166	CastTarget	INT64_OR_DOUBLE		1466025	0					
ANR	1470167	Identifier	INT_MAX		1466025	1					
ANR	1470168	RelationalExpression	OFLOW_MAX - * lengthptr < delta		1466025	1		<			
ANR	1470169	AdditiveExpression	OFLOW_MAX - * lengthptr		1466025	0		-			
ANR	1470170	Identifier	OFLOW_MAX		1466025	0					
ANR	1470171	UnaryOperationExpression	* lengthptr		1466025	1					
ANR	1470172	UnaryOperator	*		1466025	0					
ANR	1470173	Identifier	lengthptr		1466025	1					
ANR	1470174	Identifier	delta		1466025	1					
ANR	1470175	CompoundStatement		1611:14:56058:56058	1466025	1					
ANR	1470176	ExpressionStatement	* errorcodeptr = ERR20	6051:14:195319:195340	1466025	0	True				
ANR	1470177	AssignmentExpression	* errorcodeptr = ERR20		1466025	0		=			
ANR	1470178	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1470179	UnaryOperator	*		1466025	0					
ANR	1470180	Identifier	errorcodeptr		1466025	1					
ANR	1470181	Identifier	ERR20		1466025	1					
ANR	1470182	GotoStatement	goto FAILED ;	6052:14:195356:195367	1466025	1	True				
ANR	1470183	Identifier	FAILED		1466025	0					
ANR	1470184	ExpressionStatement	* lengthptr += delta	6054:12:195397:195416	1466025	2	True				
ANR	1470185	AssignmentExpression	* lengthptr += delta		1466025	0		+=			
ANR	1470186	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1470187	UnaryOperator	*		1466025	0					
ANR	1470188	Identifier	lengthptr		1466025	1					
ANR	1470189	Identifier	delta		1466025	1					
ANR	1470190	ElseStatement	else		1466025	0					
ANR	1470191	CompoundStatement		1624:12:56475:56475	1466025	0					
ANR	1470192	IfStatement	if ( groupsetfirstchar && reqcharflags < 0 )		1466025	0					
ANR	1470193	Condition	groupsetfirstchar && reqcharflags < 0	6064:16:195738:195774	1466025	0	True				
ANR	1470194	AndExpression	groupsetfirstchar && reqcharflags < 0		1466025	0		&&			
ANR	1470195	Identifier	groupsetfirstchar		1466025	0					
ANR	1470196	RelationalExpression	reqcharflags < 0		1466025	1		<			
ANR	1470197	Identifier	reqcharflags		1466025	0					
ANR	1470198	PrimaryExpression	0		1466025	1					
ANR	1470199	CompoundStatement		1626:14:56546:56546	1466025	1					
ANR	1470200	ExpressionStatement	reqchar = firstchar	6066:14:195807:195826	1466025	0	True				
ANR	1470201	AssignmentExpression	reqchar = firstchar		1466025	0		=			
ANR	1470202	Identifier	reqchar		1466025	0					
ANR	1470203	Identifier	firstchar		1466025	1					
ANR	1470204	ExpressionStatement	reqcharflags = firstcharflags	6067:14:195842:195871	1466025	1	True				
ANR	1470205	AssignmentExpression	reqcharflags = firstcharflags		1466025	0		=			
ANR	1470206	Identifier	reqcharflags		1466025	0					
ANR	1470207	Identifier	firstcharflags		1466025	1					
ANR	1470208	ForStatement	for ( i = 1 ; i < repeat_min ; i ++ )		1466025	1					
ANR	1470209	ForInit	i = 1 ;	6070:17:195907:195912	1466025	0	True				
ANR	1470210	AssignmentExpression	i = 1		1466025	0		=			
ANR	1470211	Identifier	i		1466025	0					
ANR	1470212	PrimaryExpression	1		1466025	1					
ANR	1470213	Condition	i < repeat_min	6070:24:195914:195927	1466025	1	True				
ANR	1470214	RelationalExpression	i < repeat_min		1466025	0		<			
ANR	1470215	Identifier	i		1466025	0					
ANR	1470216	Identifier	repeat_min		1466025	1					
ANR	1470217	PostIncDecOperationExpression	i ++	6070:40:195930:195932	1466025	2	True				
ANR	1470218	Identifier	i		1466025	0					
ANR	1470219	IncDec	++		1466025	1					
ANR	1470220	CompoundStatement		1634:14:56750:56804	1466025	3					
ANR	1470221	IdentifierDeclStatement	pcre_uchar * hc ;	6072:14:195965:195979	1466025	0	True				
ANR	1470222	IdentifierDecl	* hc		1466025	0					
ANR	1470223	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1470224	Identifier	hc		1466025	1					
ANR	1470225	IdentifierDeclStatement	size_t this_hwm_offset = cd -> hwm - cd -> start_workspace ;	6073:14:195995:196049	1466025	1	True				
ANR	1470226	IdentifierDecl	this_hwm_offset = cd -> hwm - cd -> start_workspace		1466025	0					
ANR	1470227	IdentifierDeclType	size_t		1466025	0					
ANR	1470228	Identifier	this_hwm_offset		1466025	1					
ANR	1470229	AssignmentExpression	this_hwm_offset = cd -> hwm - cd -> start_workspace		1466025	2		=			
ANR	1470230	Identifier	this_hwm_offset		1466025	0					
ANR	1470231	AdditiveExpression	cd -> hwm - cd -> start_workspace		1466025	1		-			
ANR	1470232	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1470233	Identifier	cd		1466025	0					
ANR	1470234	Identifier	hwm		1466025	1					
ANR	1470235	PtrMemberAccess	cd -> start_workspace		1466025	1					
ANR	1470236	Identifier	cd		1466025	0					
ANR	1470237	Identifier	start_workspace		1466025	1					
ANR	1470238	ExpressionStatement	"memcpy ( code , previous , IN_UCHARS ( len ) )"	6074:14:196065:196103	1466025	2	True				
ANR	1470239	CallExpression	"memcpy ( code , previous , IN_UCHARS ( len ) )"		1466025	0					
ANR	1470240	Callee	memcpy		1466025	0					
ANR	1470241	Identifier	memcpy		1466025	0					
ANR	1470242	ArgumentList	code		1466025	1					
ANR	1470243	Argument	code		1466025	0					
ANR	1470244	Identifier	code		1466025	0					
ANR	1470245	Argument	previous		1466025	1					
ANR	1470246	Identifier	previous		1466025	0					
ANR	1470247	Argument	IN_UCHARS ( len )		1466025	2					
ANR	1470248	CallExpression	IN_UCHARS ( len )		1466025	0					
ANR	1470249	Callee	IN_UCHARS		1466025	0					
ANR	1470250	Identifier	IN_UCHARS		1466025	0					
ANR	1470251	ArgumentList	len		1466025	1					
ANR	1470252	Argument	len		1466025	0					
ANR	1470253	Identifier	len		1466025	0					
ANR	1470254	WhileStatement	while ( cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset ) )		1466025	3					
ANR	1470255	Condition	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )	6076:21:196127:196282	1466025	0	True				
ANR	1470256	RelationalExpression	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		1466025	0		>			
ANR	1470257	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1470258	Identifier	cd		1466025	0					
ANR	1470259	Identifier	hwm		1466025	1					
ANR	1470260	AdditiveExpression	cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		1466025	1		+			
ANR	1470261	PtrMemberAccess	cd -> start_workspace		1466025	0					
ANR	1470262	Identifier	cd		1466025	0					
ANR	1470263	Identifier	start_workspace		1466025	1					
ANR	1470264	AdditiveExpression	cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		1466025	1		-			
ANR	1470265	PtrMemberAccess	cd -> workspace_size		1466025	0					
ANR	1470266	Identifier	cd		1466025	0					
ANR	1470267	Identifier	workspace_size		1466025	1					
ANR	1470268	AdditiveExpression	WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		1466025	1		-			
ANR	1470269	Identifier	WORK_SIZE_SAFETY_MARGIN		1466025	0					
ANR	1470270	AdditiveExpression	this_hwm_offset - base_hwm_offset		1466025	1		-			
ANR	1470271	Identifier	this_hwm_offset		1466025	0					
ANR	1470272	Identifier	base_hwm_offset		1466025	1					
ANR	1470273	CompoundStatement		1640:16:57056:57056	1466025	1					
ANR	1470274	ExpressionStatement	* errorcodeptr = expand_workspace ( cd )	6080:16:196319:196355	1466025	0	True				
ANR	1470275	AssignmentExpression	* errorcodeptr = expand_workspace ( cd )		1466025	0		=			
ANR	1470276	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1470277	UnaryOperator	*		1466025	0					
ANR	1470278	Identifier	errorcodeptr		1466025	1					
ANR	1470279	CallExpression	expand_workspace ( cd )		1466025	1					
ANR	1470280	Callee	expand_workspace		1466025	0					
ANR	1470281	Identifier	expand_workspace		1466025	0					
ANR	1470282	ArgumentList	cd		1466025	1					
ANR	1470283	Argument	cd		1466025	0					
ANR	1470284	Identifier	cd		1466025	0					
ANR	1470285	IfStatement	if ( * errorcodeptr != 0 )		1466025	1					
ANR	1470286	Condition	* errorcodeptr != 0	6081:20:196377:196394	1466025	0	True				
ANR	1470287	EqualityExpression	* errorcodeptr != 0		1466025	0		!=			
ANR	1470288	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1470289	UnaryOperator	*		1466025	0					
ANR	1470290	Identifier	errorcodeptr		1466025	1					
ANR	1470291	PrimaryExpression	0		1466025	1					
ANR	1470292	GotoStatement	goto FAILED ;	6081:40:196397:196408	1466025	1	True				
ANR	1470293	Identifier	FAILED		1466025	0					
ANR	1470294	ForStatement	for ( hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset ; hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset ; hc += LINK_SIZE )		1466025	4					
ANR	1470295	ForInit	hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset ;	6084:19:196448:196504	1466025	0	True				
ANR	1470296	AssignmentExpression	hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset		1466025	0		=			
ANR	1470297	Identifier	hc		1466025	0					
ANR	1470298	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + base_hwm_offset		1466025	1		+			
ANR	1470299	CastExpression	( pcre_uchar * ) cd -> start_workspace		1466025	0					
ANR	1470300	CastTarget	pcre_uchar *		1466025	0					
ANR	1470301	PtrMemberAccess	cd -> start_workspace		1466025	1					
ANR	1470302	Identifier	cd		1466025	0					
ANR	1470303	Identifier	start_workspace		1466025	1					
ANR	1470304	Identifier	base_hwm_offset		1466025	1					
ANR	1470305	Condition	hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset	6085:19:196525:196580	1466025	1	True				
ANR	1470306	RelationalExpression	hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset		1466025	0		<			
ANR	1470307	Identifier	hc		1466025	0					
ANR	1470308	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + this_hwm_offset		1466025	1		+			
ANR	1470309	CastExpression	( pcre_uchar * ) cd -> start_workspace		1466025	0					
ANR	1470310	CastTarget	pcre_uchar *		1466025	0					
ANR	1470311	PtrMemberAccess	cd -> start_workspace		1466025	1					
ANR	1470312	Identifier	cd		1466025	0					
ANR	1470313	Identifier	start_workspace		1466025	1					
ANR	1470314	Identifier	this_hwm_offset		1466025	1					
ANR	1470315	AssignmentExpression	hc += LINK_SIZE	6086:19:196602:196616	1466025	2	True	+=			
ANR	1470316	Identifier	hc		1466025	0					
ANR	1470317	Identifier	LINK_SIZE		1466025	1					
ANR	1470318	CompoundStatement		1648:16:57390:57390	1466025	3					
ANR	1470319	ExpressionStatement	"PUT ( cd -> hwm , 0 , GET ( hc , 0 ) + len )"	6088:16:196653:196686	1466025	0	True				
ANR	1470320	CallExpression	"PUT ( cd -> hwm , 0 , GET ( hc , 0 ) + len )"		1466025	0					
ANR	1470321	Callee	PUT		1466025	0					
ANR	1470322	Identifier	PUT		1466025	0					
ANR	1470323	ArgumentList	cd -> hwm		1466025	1					
ANR	1470324	Argument	cd -> hwm		1466025	0					
ANR	1470325	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1470326	Identifier	cd		1466025	0					
ANR	1470327	Identifier	hwm		1466025	1					
ANR	1470328	Argument	0		1466025	1					
ANR	1470329	PrimaryExpression	0		1466025	0					
ANR	1470330	Argument	"GET ( hc , 0 ) + len"		1466025	2					
ANR	1470331	AdditiveExpression	"GET ( hc , 0 ) + len"		1466025	0		+			
ANR	1470332	CallExpression	"GET ( hc , 0 )"		1466025	0					
ANR	1470333	Callee	GET		1466025	0					
ANR	1470334	Identifier	GET		1466025	0					
ANR	1470335	ArgumentList	hc		1466025	1					
ANR	1470336	Argument	hc		1466025	0					
ANR	1470337	Identifier	hc		1466025	0					
ANR	1470338	Argument	0		1466025	1					
ANR	1470339	PrimaryExpression	0		1466025	0					
ANR	1470340	Identifier	len		1466025	1					
ANR	1470341	ExpressionStatement	cd -> hwm += LINK_SIZE	6089:16:196704:196724	1466025	1	True				
ANR	1470342	AssignmentExpression	cd -> hwm += LINK_SIZE		1466025	0		+=			
ANR	1470343	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1470344	Identifier	cd		1466025	0					
ANR	1470345	Identifier	hwm		1466025	1					
ANR	1470346	Identifier	LINK_SIZE		1466025	1					
ANR	1470347	ExpressionStatement	base_hwm_offset = this_hwm_offset	6091:14:196758:196791	1466025	5	True				
ANR	1470348	AssignmentExpression	base_hwm_offset = this_hwm_offset		1466025	0		=			
ANR	1470349	Identifier	base_hwm_offset		1466025	0					
ANR	1470350	Identifier	this_hwm_offset		1466025	1					
ANR	1470351	ExpressionStatement	code += len	6092:14:196807:196818	1466025	6	True				
ANR	1470352	AssignmentExpression	code += len		1466025	0		+=			
ANR	1470353	Identifier	code		1466025	0					
ANR	1470354	Identifier	len		1466025	1					
ANR	1470355	IfStatement	if ( repeat_max > 0 )		1466025	1					
ANR	1470356	Condition	repeat_max > 0	6097:12:196875:196888	1466025	0	True				
ANR	1470357	RelationalExpression	repeat_max > 0		1466025	0		>			
ANR	1470358	Identifier	repeat_max		1466025	0					
ANR	1470359	PrimaryExpression	0		1466025	1					
ANR	1470360	ExpressionStatement	repeat_max -= repeat_min	6097:28:196891:196915	1466025	1	True				
ANR	1470361	AssignmentExpression	repeat_max -= repeat_min		1466025	0		-=			
ANR	1470362	Identifier	repeat_max		1466025	0					
ANR	1470363	Identifier	repeat_min		1466025	1					
ANR	1470364	IfStatement	if ( repeat_max >= 0 )		1466025	9					
ANR	1470365	Condition	repeat_max >= 0	6107:10:197382:197396	1466025	0	True				
ANR	1470366	RelationalExpression	repeat_max >= 0		1466025	0		>=			
ANR	1470367	Identifier	repeat_max		1466025	0					
ANR	1470368	PrimaryExpression	0		1466025	1					
ANR	1470369	CompoundStatement		1669:8:58162:58162	1466025	1					
ANR	1470370	IfStatement	if ( lengthptr != NULL && repeat_max > 0 )		1466025	0					
ANR	1470371	Condition	lengthptr != NULL && repeat_max > 0	6116:12:197876:197910	1466025	0	True				
ANR	1470372	AndExpression	lengthptr != NULL && repeat_max > 0		1466025	0		&&			
ANR	1470373	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1470374	Identifier	lengthptr		1466025	0					
ANR	1470375	Identifier	NULL		1466025	1					
ANR	1470376	RelationalExpression	repeat_max > 0		1466025	1		>			
ANR	1470377	Identifier	repeat_max		1466025	0					
ANR	1470378	PrimaryExpression	0		1466025	1					
ANR	1470379	CompoundStatement		1679:10:58690:58795	1466025	1					
ANR	1470380	IdentifierDeclStatement	int delta = repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) - 2 - 2 * LINK_SIZE ;	6118:10:197935:198040	1466025	0	True				
ANR	1470381	IdentifierDecl	delta = repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) - 2 - 2 * LINK_SIZE		1466025	0					
ANR	1470382	IdentifierDeclType	int		1466025	0					
ANR	1470383	Identifier	delta		1466025	1					
ANR	1470384	AssignmentExpression	delta = repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) - 2 - 2 * LINK_SIZE		1466025	2		=			
ANR	1470385	Identifier	delta		1466025	0					
ANR	1470386	AdditiveExpression	repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) - 2 - 2 * LINK_SIZE		1466025	1		-			
ANR	1470387	MultiplicativeExpression	repeat_max * ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE )		1466025	0		*			
ANR	1470388	Identifier	repeat_max		1466025	0					
ANR	1470389	AdditiveExpression	length_prevgroup + 1 + 2 + 2 * LINK_SIZE		1466025	1		+			
ANR	1470390	Identifier	length_prevgroup		1466025	0					
ANR	1470391	AdditiveExpression	1 + 2 + 2 * LINK_SIZE		1466025	1		+			
ANR	1470392	PrimaryExpression	1		1466025	0					
ANR	1470393	AdditiveExpression	2 + 2 * LINK_SIZE		1466025	1		+			
ANR	1470394	PrimaryExpression	2		1466025	0					
ANR	1470395	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1470396	PrimaryExpression	2		1466025	0					
ANR	1470397	Identifier	LINK_SIZE		1466025	1					
ANR	1470398	AdditiveExpression	2 - 2 * LINK_SIZE		1466025	1		-			
ANR	1470399	PrimaryExpression	2		1466025	0					
ANR	1470400	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1470401	PrimaryExpression	2		1466025	0					
ANR	1470402	Identifier	LINK_SIZE		1466025	1					
ANR	1470403	IfStatement	if ( ( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta )		1466025	1					
ANR	1470404	Condition	( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta	6120:14:198086:198281	1466025	0	True				
ANR	1470405	OrExpression	( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) > ( INT64_OR_DOUBLE ) INT_MAX || OFLOW_MAX - * lengthptr < delta		1466025	0		||			
ANR	1470406	RelationalExpression	( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE ) > ( INT64_OR_DOUBLE ) INT_MAX		1466025	0		>			
ANR	1470407	MultiplicativeExpression	( INT64_OR_DOUBLE ) repeat_max * ( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE )		1466025	0		*			
ANR	1470408	CastExpression	( INT64_OR_DOUBLE ) repeat_max		1466025	0					
ANR	1470409	CastTarget	INT64_OR_DOUBLE		1466025	0					
ANR	1470410	Identifier	repeat_max		1466025	1					
ANR	1470411	CastExpression	( INT64_OR_DOUBLE ) ( length_prevgroup + 1 + 2 + 2 * LINK_SIZE )		1466025	1					
ANR	1470412	CastTarget	INT64_OR_DOUBLE		1466025	0					
ANR	1470413	AdditiveExpression	length_prevgroup + 1 + 2 + 2 * LINK_SIZE		1466025	1		+			
ANR	1470414	Identifier	length_prevgroup		1466025	0					
ANR	1470415	AdditiveExpression	1 + 2 + 2 * LINK_SIZE		1466025	1		+			
ANR	1470416	PrimaryExpression	1		1466025	0					
ANR	1470417	AdditiveExpression	2 + 2 * LINK_SIZE		1466025	1		+			
ANR	1470418	PrimaryExpression	2		1466025	0					
ANR	1470419	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1470420	PrimaryExpression	2		1466025	0					
ANR	1470421	Identifier	LINK_SIZE		1466025	1					
ANR	1470422	CastExpression	( INT64_OR_DOUBLE ) INT_MAX		1466025	1					
ANR	1470423	CastTarget	INT64_OR_DOUBLE		1466025	0					
ANR	1470424	Identifier	INT_MAX		1466025	1					
ANR	1470425	RelationalExpression	OFLOW_MAX - * lengthptr < delta		1466025	1		<			
ANR	1470426	AdditiveExpression	OFLOW_MAX - * lengthptr		1466025	0		-			
ANR	1470427	Identifier	OFLOW_MAX		1466025	0					
ANR	1470428	UnaryOperationExpression	* lengthptr		1466025	1					
ANR	1470429	UnaryOperator	*		1466025	0					
ANR	1470430	Identifier	lengthptr		1466025	1					
ANR	1470431	Identifier	delta		1466025	1					
ANR	1470432	CompoundStatement		1685:12:59051:59051	1466025	1					
ANR	1470433	ExpressionStatement	* errorcodeptr = ERR20	6125:12:198310:198331	1466025	0	True				
ANR	1470434	AssignmentExpression	* errorcodeptr = ERR20		1466025	0		=			
ANR	1470435	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1470436	UnaryOperator	*		1466025	0					
ANR	1470437	Identifier	errorcodeptr		1466025	1					
ANR	1470438	Identifier	ERR20		1466025	1					
ANR	1470439	GotoStatement	goto FAILED ;	6126:12:198345:198356	1466025	1	True				
ANR	1470440	Identifier	FAILED		1466025	0					
ANR	1470441	ExpressionStatement	* lengthptr += delta	6128:10:198382:198401	1466025	2	True				
ANR	1470442	AssignmentExpression	* lengthptr += delta		1466025	0		+=			
ANR	1470443	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1470444	UnaryOperator	*		1466025	0					
ANR	1470445	Identifier	lengthptr		1466025	1					
ANR	1470446	Identifier	delta		1466025	1					
ANR	1470447	ElseStatement	else		1466025	0					
ANR	1470448	ForStatement	for ( i = repeat_max - 1 ; i >= 0 ; i -- )		1466025	0					
ANR	1470449	ForInit	i = repeat_max - 1 ;	6133:18:198476:198494	1466025	0	True				
ANR	1470450	AssignmentExpression	i = repeat_max - 1		1466025	0		=			
ANR	1470451	Identifier	i		1466025	0					
ANR	1470452	AdditiveExpression	repeat_max - 1		1466025	1		-			
ANR	1470453	Identifier	repeat_max		1466025	0					
ANR	1470454	PrimaryExpression	1		1466025	1					
ANR	1470455	Condition	i >= 0	6133:38:198496:198501	1466025	1	True				
ANR	1470456	RelationalExpression	i >= 0		1466025	0		>=			
ANR	1470457	Identifier	i		1466025	0					
ANR	1470458	PrimaryExpression	0		1466025	1					
ANR	1470459	PostIncDecOperationExpression	i --	6133:46:198504:198506	1466025	2	True				
ANR	1470460	Identifier	i		1466025	0					
ANR	1470461	IncDec	--		1466025	1					
ANR	1470462	CompoundStatement		1697:10:59312:59366	1466025	3					
ANR	1470463	IdentifierDeclStatement	pcre_uchar * hc ;	6135:10:198531:198545	1466025	0	True				
ANR	1470464	IdentifierDecl	* hc		1466025	0					
ANR	1470465	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1470466	Identifier	hc		1466025	1					
ANR	1470467	IdentifierDeclStatement	size_t this_hwm_offset = cd -> hwm - cd -> start_workspace ;	6136:10:198557:198611	1466025	1	True				
ANR	1470468	IdentifierDecl	this_hwm_offset = cd -> hwm - cd -> start_workspace		1466025	0					
ANR	1470469	IdentifierDeclType	size_t		1466025	0					
ANR	1470470	Identifier	this_hwm_offset		1466025	1					
ANR	1470471	AssignmentExpression	this_hwm_offset = cd -> hwm - cd -> start_workspace		1466025	2		=			
ANR	1470472	Identifier	this_hwm_offset		1466025	0					
ANR	1470473	AdditiveExpression	cd -> hwm - cd -> start_workspace		1466025	1		-			
ANR	1470474	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1470475	Identifier	cd		1466025	0					
ANR	1470476	Identifier	hwm		1466025	1					
ANR	1470477	PtrMemberAccess	cd -> start_workspace		1466025	1					
ANR	1470478	Identifier	cd		1466025	0					
ANR	1470479	Identifier	start_workspace		1466025	1					
ANR	1470480	ExpressionStatement	* code ++ = OP_BRAZERO + repeat_type	6138:10:198624:198658	1466025	2	True				
ANR	1470481	AssignmentExpression	* code ++ = OP_BRAZERO + repeat_type		1466025	0		=			
ANR	1470482	UnaryOperationExpression	* code ++		1466025	0					
ANR	1470483	UnaryOperator	*		1466025	0					
ANR	1470484	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1470485	Identifier	code		1466025	0					
ANR	1470486	IncDec	++		1466025	1					
ANR	1470487	AdditiveExpression	OP_BRAZERO + repeat_type		1466025	1		+			
ANR	1470488	Identifier	OP_BRAZERO		1466025	0					
ANR	1470489	Identifier	repeat_type		1466025	1					
ANR	1470490	IfStatement	if ( i != 0 )		1466025	3					
ANR	1470491	Condition	i != 0	6143:14:198793:198798	1466025	0	True				
ANR	1470492	EqualityExpression	i != 0		1466025	0		!=			
ANR	1470493	Identifier	i		1466025	0					
ANR	1470494	PrimaryExpression	0		1466025	1					
ANR	1470495	CompoundStatement		1706:12:59582:59592	1466025	1					
ANR	1470496	IdentifierDeclStatement	int offset ;	6145:12:198827:198837	1466025	0	True				
ANR	1470497	IdentifierDecl	offset		1466025	0					
ANR	1470498	IdentifierDeclType	int		1466025	0					
ANR	1470499	Identifier	offset		1466025	1					
ANR	1470500	ExpressionStatement	* code ++ = OP_BRA	6146:12:198851:198867	1466025	1	True				
ANR	1470501	AssignmentExpression	* code ++ = OP_BRA		1466025	0		=			
ANR	1470502	UnaryOperationExpression	* code ++		1466025	0					
ANR	1470503	UnaryOperator	*		1466025	0					
ANR	1470504	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1470505	Identifier	code		1466025	0					
ANR	1470506	IncDec	++		1466025	1					
ANR	1470507	Identifier	OP_BRA		1466025	1					
ANR	1470508	ExpressionStatement	offset = ( bralink == NULL ) ? 0 : ( int ) ( code - bralink )	6147:12:198881:198934	1466025	2	True				
ANR	1470509	AssignmentExpression	offset = ( bralink == NULL ) ? 0 : ( int ) ( code - bralink )		1466025	0		=			
ANR	1470510	Identifier	offset		1466025	0					
ANR	1470511	ConditionalExpression	( bralink == NULL ) ? 0 : ( int ) ( code - bralink )		1466025	1					
ANR	1470512	Condition	bralink == NULL		1466025	0					
ANR	1470513	EqualityExpression	bralink == NULL		1466025	0		==			
ANR	1470514	Identifier	bralink		1466025	0					
ANR	1470515	Identifier	NULL		1466025	1					
ANR	1470516	PrimaryExpression	0		1466025	1					
ANR	1470517	CastExpression	( int ) ( code - bralink )		1466025	2					
ANR	1470518	CastTarget	int		1466025	0					
ANR	1470519	AdditiveExpression	code - bralink		1466025	1		-			
ANR	1470520	Identifier	code		1466025	0					
ANR	1470521	Identifier	bralink		1466025	1					
ANR	1470522	ExpressionStatement	bralink = code	6148:12:198948:198962	1466025	3	True				
ANR	1470523	AssignmentExpression	bralink = code		1466025	0		=			
ANR	1470524	Identifier	bralink		1466025	0					
ANR	1470525	Identifier	code		1466025	1					
ANR	1470526	ExpressionStatement	"PUTINC ( code , 0 , offset )"	6149:12:198976:198999	1466025	4	True				
ANR	1470527	CallExpression	"PUTINC ( code , 0 , offset )"		1466025	0					
ANR	1470528	Callee	PUTINC		1466025	0					
ANR	1470529	Identifier	PUTINC		1466025	0					
ANR	1470530	ArgumentList	code		1466025	1					
ANR	1470531	Argument	code		1466025	0					
ANR	1470532	Identifier	code		1466025	0					
ANR	1470533	Argument	0		1466025	1					
ANR	1470534	PrimaryExpression	0		1466025	0					
ANR	1470535	Argument	offset		1466025	2					
ANR	1470536	Identifier	offset		1466025	0					
ANR	1470537	ExpressionStatement	"memcpy ( code , previous , IN_UCHARS ( len ) )"	6152:10:199026:199064	1466025	4	True				
ANR	1470538	CallExpression	"memcpy ( code , previous , IN_UCHARS ( len ) )"		1466025	0					
ANR	1470539	Callee	memcpy		1466025	0					
ANR	1470540	Identifier	memcpy		1466025	0					
ANR	1470541	ArgumentList	code		1466025	1					
ANR	1470542	Argument	code		1466025	0					
ANR	1470543	Identifier	code		1466025	0					
ANR	1470544	Argument	previous		1466025	1					
ANR	1470545	Identifier	previous		1466025	0					
ANR	1470546	Argument	IN_UCHARS ( len )		1466025	2					
ANR	1470547	CallExpression	IN_UCHARS ( len )		1466025	0					
ANR	1470548	Callee	IN_UCHARS		1466025	0					
ANR	1470549	Identifier	IN_UCHARS		1466025	0					
ANR	1470550	ArgumentList	len		1466025	1					
ANR	1470551	Argument	len		1466025	0					
ANR	1470552	Identifier	len		1466025	0					
ANR	1470553	WhileStatement	while ( cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset ) )		1466025	5					
ANR	1470554	Condition	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )	6157:17:199188:199335	1466025	0	True				
ANR	1470555	RelationalExpression	cd -> hwm > cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		1466025	0		>			
ANR	1470556	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1470557	Identifier	cd		1466025	0					
ANR	1470558	Identifier	hwm		1466025	1					
ANR	1470559	AdditiveExpression	cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		1466025	1		+			
ANR	1470560	PtrMemberAccess	cd -> start_workspace		1466025	0					
ANR	1470561	Identifier	cd		1466025	0					
ANR	1470562	Identifier	start_workspace		1466025	1					
ANR	1470563	AdditiveExpression	cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		1466025	1		-			
ANR	1470564	PtrMemberAccess	cd -> workspace_size		1466025	0					
ANR	1470565	Identifier	cd		1466025	0					
ANR	1470566	Identifier	workspace_size		1466025	1					
ANR	1470567	AdditiveExpression	WORK_SIZE_SAFETY_MARGIN - ( this_hwm_offset - base_hwm_offset )		1466025	1		-			
ANR	1470568	Identifier	WORK_SIZE_SAFETY_MARGIN		1466025	0					
ANR	1470569	AdditiveExpression	this_hwm_offset - base_hwm_offset		1466025	1		-			
ANR	1470570	Identifier	this_hwm_offset		1466025	0					
ANR	1470571	Identifier	base_hwm_offset		1466025	1					
ANR	1470572	CompoundStatement		1721:12:60105:60105	1466025	1					
ANR	1470573	ExpressionStatement	* errorcodeptr = expand_workspace ( cd )	6161:12:199364:199400	1466025	0	True				
ANR	1470574	AssignmentExpression	* errorcodeptr = expand_workspace ( cd )		1466025	0		=			
ANR	1470575	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1470576	UnaryOperator	*		1466025	0					
ANR	1470577	Identifier	errorcodeptr		1466025	1					
ANR	1470578	CallExpression	expand_workspace ( cd )		1466025	1					
ANR	1470579	Callee	expand_workspace		1466025	0					
ANR	1470580	Identifier	expand_workspace		1466025	0					
ANR	1470581	ArgumentList	cd		1466025	1					
ANR	1470582	Argument	cd		1466025	0					
ANR	1470583	Identifier	cd		1466025	0					
ANR	1470584	IfStatement	if ( * errorcodeptr != 0 )		1466025	1					
ANR	1470585	Condition	* errorcodeptr != 0	6162:16:199418:199435	1466025	0	True				
ANR	1470586	EqualityExpression	* errorcodeptr != 0		1466025	0		!=			
ANR	1470587	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1470588	UnaryOperator	*		1466025	0					
ANR	1470589	Identifier	errorcodeptr		1466025	1					
ANR	1470590	PrimaryExpression	0		1466025	1					
ANR	1470591	GotoStatement	goto FAILED ;	6162:36:199438:199449	1466025	1	True				
ANR	1470592	Identifier	FAILED		1466025	0					
ANR	1470593	ForStatement	for ( hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset ; hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset ; hc += LINK_SIZE )		1466025	6					
ANR	1470594	ForInit	hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset ;	6165:15:199481:199537	1466025	0	True				
ANR	1470595	AssignmentExpression	hc = ( pcre_uchar * ) cd -> start_workspace + base_hwm_offset		1466025	0		=			
ANR	1470596	Identifier	hc		1466025	0					
ANR	1470597	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + base_hwm_offset		1466025	1		+			
ANR	1470598	CastExpression	( pcre_uchar * ) cd -> start_workspace		1466025	0					
ANR	1470599	CastTarget	pcre_uchar *		1466025	0					
ANR	1470600	PtrMemberAccess	cd -> start_workspace		1466025	1					
ANR	1470601	Identifier	cd		1466025	0					
ANR	1470602	Identifier	start_workspace		1466025	1					
ANR	1470603	Identifier	base_hwm_offset		1466025	1					
ANR	1470604	Condition	hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset	6166:15:199554:199609	1466025	1	True				
ANR	1470605	RelationalExpression	hc < ( pcre_uchar * ) cd -> start_workspace + this_hwm_offset		1466025	0		<			
ANR	1470606	Identifier	hc		1466025	0					
ANR	1470607	AdditiveExpression	( pcre_uchar * ) cd -> start_workspace + this_hwm_offset		1466025	1		+			
ANR	1470608	CastExpression	( pcre_uchar * ) cd -> start_workspace		1466025	0					
ANR	1470609	CastTarget	pcre_uchar *		1466025	0					
ANR	1470610	PtrMemberAccess	cd -> start_workspace		1466025	1					
ANR	1470611	Identifier	cd		1466025	0					
ANR	1470612	Identifier	start_workspace		1466025	1					
ANR	1470613	Identifier	this_hwm_offset		1466025	1					
ANR	1470614	AssignmentExpression	hc += LINK_SIZE	6167:15:199627:199641	1466025	2	True	+=			
ANR	1470615	Identifier	hc		1466025	0					
ANR	1470616	Identifier	LINK_SIZE		1466025	1					
ANR	1470617	CompoundStatement		1729:12:60411:60411	1466025	3					
ANR	1470618	ExpressionStatement	"PUT ( cd -> hwm , 0 , GET ( hc , 0 ) + len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 ) )"	6169:12:199670:199733	1466025	0	True				
ANR	1470619	CallExpression	"PUT ( cd -> hwm , 0 , GET ( hc , 0 ) + len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 ) )"		1466025	0					
ANR	1470620	Callee	PUT		1466025	0					
ANR	1470621	Identifier	PUT		1466025	0					
ANR	1470622	ArgumentList	cd -> hwm		1466025	1					
ANR	1470623	Argument	cd -> hwm		1466025	0					
ANR	1470624	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1470625	Identifier	cd		1466025	0					
ANR	1470626	Identifier	hwm		1466025	1					
ANR	1470627	Argument	0		1466025	1					
ANR	1470628	PrimaryExpression	0		1466025	0					
ANR	1470629	Argument	"GET ( hc , 0 ) + len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 )"		1466025	2					
ANR	1470630	AdditiveExpression	"GET ( hc , 0 ) + len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 )"		1466025	0		+			
ANR	1470631	CallExpression	"GET ( hc , 0 )"		1466025	0					
ANR	1470632	Callee	GET		1466025	0					
ANR	1470633	Identifier	GET		1466025	0					
ANR	1470634	ArgumentList	hc		1466025	1					
ANR	1470635	Argument	hc		1466025	0					
ANR	1470636	Identifier	hc		1466025	0					
ANR	1470637	Argument	0		1466025	1					
ANR	1470638	PrimaryExpression	0		1466025	0					
ANR	1470639	AdditiveExpression	len + ( ( i != 0 ) ? 2 + LINK_SIZE : 1 )		1466025	1		+			
ANR	1470640	Identifier	len		1466025	0					
ANR	1470641	ConditionalExpression	( i != 0 ) ? 2 + LINK_SIZE : 1		1466025	1					
ANR	1470642	Condition	i != 0		1466025	0					
ANR	1470643	EqualityExpression	i != 0		1466025	0		!=			
ANR	1470644	Identifier	i		1466025	0					
ANR	1470645	PrimaryExpression	0		1466025	1					
ANR	1470646	AdditiveExpression	2 + LINK_SIZE		1466025	1		+			
ANR	1470647	PrimaryExpression	2		1466025	0					
ANR	1470648	Identifier	LINK_SIZE		1466025	1					
ANR	1470649	PrimaryExpression	1		1466025	2					
ANR	1470650	ExpressionStatement	cd -> hwm += LINK_SIZE	6170:12:199747:199767	1466025	1	True				
ANR	1470651	AssignmentExpression	cd -> hwm += LINK_SIZE		1466025	0		+=			
ANR	1470652	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1470653	Identifier	cd		1466025	0					
ANR	1470654	Identifier	hwm		1466025	1					
ANR	1470655	Identifier	LINK_SIZE		1466025	1					
ANR	1470656	ExpressionStatement	base_hwm_offset = this_hwm_offset	6172:10:199793:199826	1466025	7	True				
ANR	1470657	AssignmentExpression	base_hwm_offset = this_hwm_offset		1466025	0		=			
ANR	1470658	Identifier	base_hwm_offset		1466025	0					
ANR	1470659	Identifier	this_hwm_offset		1466025	1					
ANR	1470660	ExpressionStatement	code += len	6173:10:199838:199849	1466025	8	True				
ANR	1470661	AssignmentExpression	code += len		1466025	0		+=			
ANR	1470662	Identifier	code		1466025	0					
ANR	1470663	Identifier	len		1466025	1					
ANR	1470664	WhileStatement	while ( bralink != NULL )		1466025	1					
ANR	1470665	Condition	bralink != NULL	6179:15:200019:200033	1466025	0	True				
ANR	1470666	EqualityExpression	bralink != NULL		1466025	0		!=			
ANR	1470667	Identifier	bralink		1466025	0					
ANR	1470668	Identifier	NULL		1466025	1					
ANR	1470669	CompoundStatement		1744:10:60892:60923	1466025	1					
ANR	1470670	IdentifierDeclStatement	int oldlinkoffset ;	6181:10:200058:200075	1466025	0	True				
ANR	1470671	IdentifierDecl	oldlinkoffset		1466025	0					
ANR	1470672	IdentifierDeclType	int		1466025	0					
ANR	1470673	Identifier	oldlinkoffset		1466025	1					
ANR	1470674	IdentifierDeclStatement	int offset = ( int ) ( code - bralink + 1 ) ;	6182:10:200087:200125	1466025	1	True				
ANR	1470675	IdentifierDecl	offset = ( int ) ( code - bralink + 1 )		1466025	0					
ANR	1470676	IdentifierDeclType	int		1466025	0					
ANR	1470677	Identifier	offset		1466025	1					
ANR	1470678	AssignmentExpression	offset = ( int ) ( code - bralink + 1 )		1466025	2		=			
ANR	1470679	Identifier	offset		1466025	0					
ANR	1470680	CastExpression	( int ) ( code - bralink + 1 )		1466025	1					
ANR	1470681	CastTarget	int		1466025	0					
ANR	1470682	AdditiveExpression	code - bralink + 1		1466025	1		-			
ANR	1470683	Identifier	code		1466025	0					
ANR	1470684	AdditiveExpression	bralink + 1		1466025	1		+			
ANR	1470685	Identifier	bralink		1466025	0					
ANR	1470686	PrimaryExpression	1		1466025	1					
ANR	1470687	IdentifierDeclStatement	pcre_uchar * bra = code - offset ;	6183:10:200137:200168	1466025	2	True				
ANR	1470688	IdentifierDecl	* bra = code - offset		1466025	0					
ANR	1470689	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1470690	Identifier	bra		1466025	1					
ANR	1470691	AssignmentExpression	* bra = code - offset		1466025	2		=			
ANR	1470692	Identifier	bra		1466025	0					
ANR	1470693	AdditiveExpression	code - offset		1466025	1		-			
ANR	1470694	Identifier	code		1466025	0					
ANR	1470695	Identifier	offset		1466025	1					
ANR	1470696	ExpressionStatement	"oldlinkoffset = GET ( bra , 1 )"	6184:10:200180:200207	1466025	3	True				
ANR	1470697	AssignmentExpression	"oldlinkoffset = GET ( bra , 1 )"		1466025	0		=			
ANR	1470698	Identifier	oldlinkoffset		1466025	0					
ANR	1470699	CallExpression	"GET ( bra , 1 )"		1466025	1					
ANR	1470700	Callee	GET		1466025	0					
ANR	1470701	Identifier	GET		1466025	0					
ANR	1470702	ArgumentList	bra		1466025	1					
ANR	1470703	Argument	bra		1466025	0					
ANR	1470704	Identifier	bra		1466025	0					
ANR	1470705	Argument	1		1466025	1					
ANR	1470706	PrimaryExpression	1		1466025	0					
ANR	1470707	ExpressionStatement	bralink = ( oldlinkoffset == 0 ) ? NULL : bralink - oldlinkoffset	6185:10:200219:200281	1466025	4	True				
ANR	1470708	AssignmentExpression	bralink = ( oldlinkoffset == 0 ) ? NULL : bralink - oldlinkoffset		1466025	0		=			
ANR	1470709	Identifier	bralink		1466025	0					
ANR	1470710	ConditionalExpression	( oldlinkoffset == 0 ) ? NULL : bralink - oldlinkoffset		1466025	1					
ANR	1470711	Condition	oldlinkoffset == 0		1466025	0					
ANR	1470712	EqualityExpression	oldlinkoffset == 0		1466025	0		==			
ANR	1470713	Identifier	oldlinkoffset		1466025	0					
ANR	1470714	PrimaryExpression	0		1466025	1					
ANR	1470715	Identifier	NULL		1466025	1					
ANR	1470716	AdditiveExpression	bralink - oldlinkoffset		1466025	2		-			
ANR	1470717	Identifier	bralink		1466025	0					
ANR	1470718	Identifier	oldlinkoffset		1466025	1					
ANR	1470719	ExpressionStatement	* code ++ = OP_KET	6186:10:200293:200309	1466025	5	True				
ANR	1470720	AssignmentExpression	* code ++ = OP_KET		1466025	0		=			
ANR	1470721	UnaryOperationExpression	* code ++		1466025	0					
ANR	1470722	UnaryOperator	*		1466025	0					
ANR	1470723	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1470724	Identifier	code		1466025	0					
ANR	1470725	IncDec	++		1466025	1					
ANR	1470726	Identifier	OP_KET		1466025	1					
ANR	1470727	ExpressionStatement	"PUTINC ( code , 0 , offset )"	6187:10:200321:200344	1466025	6	True				
ANR	1470728	CallExpression	"PUTINC ( code , 0 , offset )"		1466025	0					
ANR	1470729	Callee	PUTINC		1466025	0					
ANR	1470730	Identifier	PUTINC		1466025	0					
ANR	1470731	ArgumentList	code		1466025	1					
ANR	1470732	Argument	code		1466025	0					
ANR	1470733	Identifier	code		1466025	0					
ANR	1470734	Argument	0		1466025	1					
ANR	1470735	PrimaryExpression	0		1466025	0					
ANR	1470736	Argument	offset		1466025	2					
ANR	1470737	Identifier	offset		1466025	0					
ANR	1470738	ExpressionStatement	"PUT ( bra , 1 , offset )"	6188:10:200356:200375	1466025	7	True				
ANR	1470739	CallExpression	"PUT ( bra , 1 , offset )"		1466025	0					
ANR	1470740	Callee	PUT		1466025	0					
ANR	1470741	Identifier	PUT		1466025	0					
ANR	1470742	ArgumentList	bra		1466025	1					
ANR	1470743	Argument	bra		1466025	0					
ANR	1470744	Identifier	bra		1466025	0					
ANR	1470745	Argument	1		1466025	1					
ANR	1470746	PrimaryExpression	1		1466025	0					
ANR	1470747	Argument	offset		1466025	2					
ANR	1470748	Identifier	offset		1466025	0					
ANR	1470749	ElseStatement	else		1466025	0					
ANR	1470750	CompoundStatement		1781:8:62732:62779	1466025	0					
ANR	1470751	IdentifierDeclStatement	pcre_uchar * ketcode = code - 1 - LINK_SIZE ;	6219:8:201925:201967	1466025	0	True				
ANR	1470752	IdentifierDecl	* ketcode = code - 1 - LINK_SIZE		1466025	0					
ANR	1470753	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1470754	Identifier	ketcode		1466025	1					
ANR	1470755	AssignmentExpression	* ketcode = code - 1 - LINK_SIZE		1466025	2		=			
ANR	1470756	Identifier	ketcode		1466025	0					
ANR	1470757	AdditiveExpression	code - 1 - LINK_SIZE		1466025	1		-			
ANR	1470758	Identifier	code		1466025	0					
ANR	1470759	AdditiveExpression	1 - LINK_SIZE		1466025	1		-			
ANR	1470760	PrimaryExpression	1		1466025	0					
ANR	1470761	Identifier	LINK_SIZE		1466025	1					
ANR	1470762	IdentifierDeclStatement	"pcre_uchar * bracode = ketcode - GET ( ketcode , 1 ) ;"	6220:8:201977:202024	1466025	1	True				
ANR	1470763	IdentifierDecl	"* bracode = ketcode - GET ( ketcode , 1 )"		1466025	0					
ANR	1470764	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1470765	Identifier	bracode		1466025	1					
ANR	1470766	AssignmentExpression	"* bracode = ketcode - GET ( ketcode , 1 )"		1466025	2		=			
ANR	1470767	Identifier	bracode		1466025	0					
ANR	1470768	AdditiveExpression	"ketcode - GET ( ketcode , 1 )"		1466025	1		-			
ANR	1470769	Identifier	ketcode		1466025	0					
ANR	1470770	CallExpression	"GET ( ketcode , 1 )"		1466025	1					
ANR	1470771	Callee	GET		1466025	0					
ANR	1470772	Identifier	GET		1466025	0					
ANR	1470773	ArgumentList	ketcode		1466025	1					
ANR	1470774	Argument	ketcode		1466025	0					
ANR	1470775	Identifier	ketcode		1466025	0					
ANR	1470776	Argument	1		1466025	1					
ANR	1470777	PrimaryExpression	1		1466025	0					
ANR	1470778	IfStatement	if ( ( * bracode == OP_ONCE || * bracode == OP_ONCE_NC ) && possessive_quantifier )		1466025	2					
ANR	1470779	Condition	( * bracode == OP_ONCE || * bracode == OP_ONCE_NC ) && possessive_quantifier	6224:12:202104:202187	1466025	0	True				
ANR	1470780	AndExpression	( * bracode == OP_ONCE || * bracode == OP_ONCE_NC ) && possessive_quantifier		1466025	0		&&			
ANR	1470781	OrExpression	* bracode == OP_ONCE || * bracode == OP_ONCE_NC		1466025	0		||			
ANR	1470782	EqualityExpression	* bracode == OP_ONCE		1466025	0		==			
ANR	1470783	UnaryOperationExpression	* bracode		1466025	0					
ANR	1470784	UnaryOperator	*		1466025	0					
ANR	1470785	Identifier	bracode		1466025	1					
ANR	1470786	Identifier	OP_ONCE		1466025	1					
ANR	1470787	EqualityExpression	* bracode == OP_ONCE_NC		1466025	1		==			
ANR	1470788	UnaryOperationExpression	* bracode		1466025	0					
ANR	1470789	UnaryOperator	*		1466025	0					
ANR	1470790	Identifier	bracode		1466025	1					
ANR	1470791	Identifier	OP_ONCE_NC		1466025	1					
ANR	1470792	Identifier	possessive_quantifier		1466025	1					
ANR	1470793	ExpressionStatement	* bracode = OP_BRA	6225:35:202190:202207	1466025	1	True				
ANR	1470794	AssignmentExpression	* bracode = OP_BRA		1466025	0		=			
ANR	1470795	UnaryOperationExpression	* bracode		1466025	0					
ANR	1470796	UnaryOperator	*		1466025	0					
ANR	1470797	Identifier	bracode		1466025	1					
ANR	1470798	Identifier	OP_BRA		1466025	1					
ANR	1470799	IfStatement	if ( * bracode == OP_ONCE || * bracode == OP_ONCE_NC )		1466025	3					
ANR	1470800	Condition	* bracode == OP_ONCE || * bracode == OP_ONCE_NC	6230:12:202316:202360	1466025	0	True				
ANR	1470801	OrExpression	* bracode == OP_ONCE || * bracode == OP_ONCE_NC		1466025	0		||			
ANR	1470802	EqualityExpression	* bracode == OP_ONCE		1466025	0		==			
ANR	1470803	UnaryOperationExpression	* bracode		1466025	0					
ANR	1470804	UnaryOperator	*		1466025	0					
ANR	1470805	Identifier	bracode		1466025	1					
ANR	1470806	Identifier	OP_ONCE		1466025	1					
ANR	1470807	EqualityExpression	* bracode == OP_ONCE_NC		1466025	1		==			
ANR	1470808	UnaryOperationExpression	* bracode		1466025	0					
ANR	1470809	UnaryOperator	*		1466025	0					
ANR	1470810	Identifier	bracode		1466025	1					
ANR	1470811	Identifier	OP_ONCE_NC		1466025	1					
ANR	1470812	ExpressionStatement	* ketcode = OP_KETRMAX + repeat_type	6231:10:202373:202408	1466025	1	True				
ANR	1470813	AssignmentExpression	* ketcode = OP_KETRMAX + repeat_type		1466025	0		=			
ANR	1470814	UnaryOperationExpression	* ketcode		1466025	0					
ANR	1470815	UnaryOperator	*		1466025	0					
ANR	1470816	Identifier	ketcode		1466025	1					
ANR	1470817	AdditiveExpression	OP_KETRMAX + repeat_type		1466025	1		+			
ANR	1470818	Identifier	OP_KETRMAX		1466025	0					
ANR	1470819	Identifier	repeat_type		1466025	1					
ANR	1470820	ElseStatement	else		1466025	0					
ANR	1470821	CompoundStatement		1798:10:63310:63310	1466025	0					
ANR	1470822	IfStatement	if ( lengthptr == NULL )		1466025	0					
ANR	1470823	Condition	lengthptr == NULL	6240:14:202643:202659	1466025	0	True				
ANR	1470824	EqualityExpression	lengthptr == NULL		1466025	0		==			
ANR	1470825	Identifier	lengthptr		1466025	0					
ANR	1470826	Identifier	NULL		1466025	1					
ANR	1470827	CompoundStatement		1803:12:63443:63470	1466025	1					
ANR	1470828	IdentifierDeclStatement	pcre_uchar * scode = bracode ;	6242:12:202688:202715	1466025	0	True				
ANR	1470829	IdentifierDecl	* scode = bracode		1466025	0					
ANR	1470830	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1470831	Identifier	scode		1466025	1					
ANR	1470832	AssignmentExpression	* scode = bracode		1466025	2		=			
ANR	1470833	Identifier	bracode		1466025	0					
ANR	1470834	Identifier	bracode		1466025	1					
ANR	1470835	DoStatement	do		1466025	1					
ANR	1470836	CompoundStatement		1805:14:63501:63501	1466025	0					
ANR	1470837	IfStatement	"if ( could_be_empty_branch ( scode , ketcode , utf , cd , NULL ) )"		1466025	0					
ANR	1470838	Condition	"could_be_empty_branch ( scode , ketcode , utf , cd , NULL )"	6245:18:202766:202817	1466025	0	True				
ANR	1470839	CallExpression	"could_be_empty_branch ( scode , ketcode , utf , cd , NULL )"		1466025	0					
ANR	1470840	Callee	could_be_empty_branch		1466025	0					
ANR	1470841	Identifier	could_be_empty_branch		1466025	0					
ANR	1470842	ArgumentList	scode		1466025	1					
ANR	1470843	Argument	scode		1466025	0					
ANR	1470844	Identifier	scode		1466025	0					
ANR	1470845	Argument	ketcode		1466025	1					
ANR	1470846	Identifier	ketcode		1466025	0					
ANR	1470847	Argument	utf		1466025	2					
ANR	1470848	Identifier	utf		1466025	0					
ANR	1470849	Argument	cd		1466025	3					
ANR	1470850	Identifier	cd		1466025	0					
ANR	1470851	Argument	NULL		1466025	4					
ANR	1470852	Identifier	NULL		1466025	0					
ANR	1470853	CompoundStatement		1807:16:63591:63591	1466025	1					
ANR	1470854	ExpressionStatement	* bracode += OP_SBRA - OP_BRA	6247:16:202854:202882	1466025	0	True				
ANR	1470855	AssignmentExpression	* bracode += OP_SBRA - OP_BRA		1466025	0		+=			
ANR	1470856	UnaryOperationExpression	* bracode		1466025	0					
ANR	1470857	UnaryOperator	*		1466025	0					
ANR	1470858	Identifier	bracode		1466025	1					
ANR	1470859	AdditiveExpression	OP_SBRA - OP_BRA		1466025	1		-			
ANR	1470860	Identifier	OP_SBRA		1466025	0					
ANR	1470861	Identifier	OP_BRA		1466025	1					
ANR	1470862	BreakStatement	break ;	6248:16:202900:202905	1466025	1	True				
ANR	1470863	ExpressionStatement	"scode += GET ( scode , 1 )"	6250:14:202939:202961	1466025	1	True				
ANR	1470864	AssignmentExpression	"scode += GET ( scode , 1 )"		1466025	0		+=			
ANR	1470865	Identifier	scode		1466025	0					
ANR	1470866	CallExpression	"GET ( scode , 1 )"		1466025	1					
ANR	1470867	Callee	GET		1466025	0					
ANR	1470868	Identifier	GET		1466025	0					
ANR	1470869	ArgumentList	scode		1466025	1					
ANR	1470870	Argument	scode		1466025	0					
ANR	1470871	Identifier	scode		1466025	0					
ANR	1470872	Argument	1		1466025	1					
ANR	1470873	PrimaryExpression	1		1466025	0					
ANR	1470874	Condition	* scode == OP_ALT	6252:19:202998:203013	1466025	1	True				
ANR	1470875	EqualityExpression	* scode == OP_ALT		1466025	0		==			
ANR	1470876	UnaryOperationExpression	* scode		1466025	0					
ANR	1470877	UnaryOperator	*		1466025	0					
ANR	1470878	Identifier	scode		1466025	1					
ANR	1470879	Identifier	OP_ALT		1466025	1					
ANR	1470880	IfStatement	if ( possessive_quantifier )		1466025	1					
ANR	1470881	Condition	possessive_quantifier	6257:14:203094:203114	1466025	0	True				
ANR	1470882	Identifier	possessive_quantifier		1466025	0					
ANR	1470883	CompoundStatement		1819:12:63884:63884	1466025	1					
ANR	1470884	IfStatement	if ( * bracode == OP_COND || * bracode == OP_SCOND )		1466025	0					
ANR	1470885	Condition	* bracode == OP_COND || * bracode == OP_SCOND	6264:16:203458:203500	1466025	0	True				
ANR	1470886	OrExpression	* bracode == OP_COND || * bracode == OP_SCOND		1466025	0		||			
ANR	1470887	EqualityExpression	* bracode == OP_COND		1466025	0		==			
ANR	1470888	UnaryOperationExpression	* bracode		1466025	0					
ANR	1470889	UnaryOperator	*		1466025	0					
ANR	1470890	Identifier	bracode		1466025	1					
ANR	1470891	Identifier	OP_COND		1466025	1					
ANR	1470892	EqualityExpression	* bracode == OP_SCOND		1466025	1		==			
ANR	1470893	UnaryOperationExpression	* bracode		1466025	0					
ANR	1470894	UnaryOperator	*		1466025	0					
ANR	1470895	Identifier	bracode		1466025	1					
ANR	1470896	Identifier	OP_SCOND		1466025	1					
ANR	1470897	CompoundStatement		1827:14:64288:64320	1466025	1					
ANR	1470898	IdentifierDeclStatement	int nlen = ( int ) ( code - bracode ) ;	6266:14:203533:203565	1466025	0	True				
ANR	1470899	IdentifierDecl	nlen = ( int ) ( code - bracode )		1466025	0					
ANR	1470900	IdentifierDeclType	int		1466025	0					
ANR	1470901	Identifier	nlen		1466025	1					
ANR	1470902	AssignmentExpression	nlen = ( int ) ( code - bracode )		1466025	2		=			
ANR	1470903	Identifier	nlen		1466025	0					
ANR	1470904	CastExpression	( int ) ( code - bracode )		1466025	1					
ANR	1470905	CastTarget	int		1466025	0					
ANR	1470906	AdditiveExpression	code - bracode		1466025	1		-			
ANR	1470907	Identifier	code		1466025	0					
ANR	1470908	Identifier	bracode		1466025	1					
ANR	1470909	ExpressionStatement	* code = OP_END	6267:14:203581:203595	1466025	1	True				
ANR	1470910	AssignmentExpression	* code = OP_END		1466025	0		=			
ANR	1470911	UnaryOperationExpression	* code		1466025	0					
ANR	1470912	UnaryOperator	*		1466025	0					
ANR	1470913	Identifier	code		1466025	1					
ANR	1470914	Identifier	OP_END		1466025	1					
ANR	1470915	ExpressionStatement	"adjust_recurse ( bracode , 1 + LINK_SIZE , utf , cd , save_hwm_offset )"	6268:14:203611:203675	1466025	2	True				
ANR	1470916	CallExpression	"adjust_recurse ( bracode , 1 + LINK_SIZE , utf , cd , save_hwm_offset )"		1466025	0					
ANR	1470917	Callee	adjust_recurse		1466025	0					
ANR	1470918	Identifier	adjust_recurse		1466025	0					
ANR	1470919	ArgumentList	bracode		1466025	1					
ANR	1470920	Argument	bracode		1466025	0					
ANR	1470921	Identifier	bracode		1466025	0					
ANR	1470922	Argument	1 + LINK_SIZE		1466025	1					
ANR	1470923	AdditiveExpression	1 + LINK_SIZE		1466025	0		+			
ANR	1470924	PrimaryExpression	1		1466025	0					
ANR	1470925	Identifier	LINK_SIZE		1466025	1					
ANR	1470926	Argument	utf		1466025	2					
ANR	1470927	Identifier	utf		1466025	0					
ANR	1470928	Argument	cd		1466025	3					
ANR	1470929	Identifier	cd		1466025	0					
ANR	1470930	Argument	save_hwm_offset		1466025	4					
ANR	1470931	Identifier	save_hwm_offset		1466025	0					
ANR	1470932	ExpressionStatement	"memmove ( bracode + 1 + LINK_SIZE , bracode , IN_UCHARS ( nlen ) )"	6269:14:203691:203749	1466025	3	True				
ANR	1470933	CallExpression	"memmove ( bracode + 1 + LINK_SIZE , bracode , IN_UCHARS ( nlen ) )"		1466025	0					
ANR	1470934	Callee	memmove		1466025	0					
ANR	1470935	Identifier	memmove		1466025	0					
ANR	1470936	ArgumentList	bracode + 1 + LINK_SIZE		1466025	1					
ANR	1470937	Argument	bracode + 1 + LINK_SIZE		1466025	0					
ANR	1470938	AdditiveExpression	bracode + 1 + LINK_SIZE		1466025	0		+			
ANR	1470939	Identifier	bracode		1466025	0					
ANR	1470940	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1470941	PrimaryExpression	1		1466025	0					
ANR	1470942	Identifier	LINK_SIZE		1466025	1					
ANR	1470943	Argument	bracode		1466025	1					
ANR	1470944	Identifier	bracode		1466025	0					
ANR	1470945	Argument	IN_UCHARS ( nlen )		1466025	2					
ANR	1470946	CallExpression	IN_UCHARS ( nlen )		1466025	0					
ANR	1470947	Callee	IN_UCHARS		1466025	0					
ANR	1470948	Identifier	IN_UCHARS		1466025	0					
ANR	1470949	ArgumentList	nlen		1466025	1					
ANR	1470950	Argument	nlen		1466025	0					
ANR	1470951	Identifier	nlen		1466025	0					
ANR	1470952	ExpressionStatement	code += 1 + LINK_SIZE	6270:14:203765:203786	1466025	4	True				
ANR	1470953	AssignmentExpression	code += 1 + LINK_SIZE		1466025	0		+=			
ANR	1470954	Identifier	code		1466025	0					
ANR	1470955	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1470956	PrimaryExpression	1		1466025	0					
ANR	1470957	Identifier	LINK_SIZE		1466025	1					
ANR	1470958	ExpressionStatement	nlen += 1 + LINK_SIZE	6271:14:203802:203823	1466025	5	True				
ANR	1470959	AssignmentExpression	nlen += 1 + LINK_SIZE		1466025	0		+=			
ANR	1470960	Identifier	nlen		1466025	0					
ANR	1470961	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1470962	PrimaryExpression	1		1466025	0					
ANR	1470963	Identifier	LINK_SIZE		1466025	1					
ANR	1470964	ExpressionStatement	* bracode = OP_BRAPOS	6272:14:203839:203859	1466025	6	True				
ANR	1470965	AssignmentExpression	* bracode = OP_BRAPOS		1466025	0		=			
ANR	1470966	UnaryOperationExpression	* bracode		1466025	0					
ANR	1470967	UnaryOperator	*		1466025	0					
ANR	1470968	Identifier	bracode		1466025	1					
ANR	1470969	Identifier	OP_BRAPOS		1466025	1					
ANR	1470970	ExpressionStatement	* code ++ = OP_KETRPOS	6273:14:203875:203895	1466025	7	True				
ANR	1470971	AssignmentExpression	* code ++ = OP_KETRPOS		1466025	0		=			
ANR	1470972	UnaryOperationExpression	* code ++		1466025	0					
ANR	1470973	UnaryOperator	*		1466025	0					
ANR	1470974	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1470975	Identifier	code		1466025	0					
ANR	1470976	IncDec	++		1466025	1					
ANR	1470977	Identifier	OP_KETRPOS		1466025	1					
ANR	1470978	ExpressionStatement	"PUTINC ( code , 0 , nlen )"	6274:14:203911:203932	1466025	8	True				
ANR	1470979	CallExpression	"PUTINC ( code , 0 , nlen )"		1466025	0					
ANR	1470980	Callee	PUTINC		1466025	0					
ANR	1470981	Identifier	PUTINC		1466025	0					
ANR	1470982	ArgumentList	code		1466025	1					
ANR	1470983	Argument	code		1466025	0					
ANR	1470984	Identifier	code		1466025	0					
ANR	1470985	Argument	0		1466025	1					
ANR	1470986	PrimaryExpression	0		1466025	0					
ANR	1470987	Argument	nlen		1466025	2					
ANR	1470988	Identifier	nlen		1466025	0					
ANR	1470989	ExpressionStatement	"PUT ( bracode , 1 , nlen )"	6275:14:203948:203969	1466025	9	True				
ANR	1470990	CallExpression	"PUT ( bracode , 1 , nlen )"		1466025	0					
ANR	1470991	Callee	PUT		1466025	0					
ANR	1470992	Identifier	PUT		1466025	0					
ANR	1470993	ArgumentList	bracode		1466025	1					
ANR	1470994	Argument	bracode		1466025	0					
ANR	1470995	Identifier	bracode		1466025	0					
ANR	1470996	Argument	1		1466025	1					
ANR	1470997	PrimaryExpression	1		1466025	0					
ANR	1470998	Argument	nlen		1466025	2					
ANR	1470999	Identifier	nlen		1466025	0					
ANR	1471000	ElseStatement	else		1466025	0					
ANR	1471001	CompoundStatement		1842:14:64856:64856	1466025	0					
ANR	1471002	ExpressionStatement	* bracode += 1	6282:14:204117:204130	1466025	0	True				
ANR	1471003	AssignmentExpression	* bracode += 1		1466025	0		+=			
ANR	1471004	UnaryOperationExpression	* bracode		1466025	0					
ANR	1471005	UnaryOperator	*		1466025	0					
ANR	1471006	Identifier	bracode		1466025	1					
ANR	1471007	PrimaryExpression	1		1466025	1					
ANR	1471008	ExpressionStatement	* ketcode = OP_KETRPOS	6283:14:204190:204211	1466025	1	True				
ANR	1471009	AssignmentExpression	* ketcode = OP_KETRPOS		1466025	0		=			
ANR	1471010	UnaryOperationExpression	* ketcode		1466025	0					
ANR	1471011	UnaryOperator	*		1466025	0					
ANR	1471012	Identifier	ketcode		1466025	1					
ANR	1471013	Identifier	OP_KETRPOS		1466025	1					
ANR	1471014	IfStatement	if ( brazeroptr != NULL )		1466025	1					
ANR	1471015	Condition	brazeroptr != NULL	6289:16:204383:204400	1466025	0	True				
ANR	1471016	EqualityExpression	brazeroptr != NULL		1466025	0		!=			
ANR	1471017	Identifier	brazeroptr		1466025	0					
ANR	1471018	Identifier	NULL		1466025	1					
ANR	1471019	ExpressionStatement	* brazeroptr = OP_BRAPOSZERO	6289:36:204403:204430	1466025	1	True				
ANR	1471020	AssignmentExpression	* brazeroptr = OP_BRAPOSZERO		1466025	0		=			
ANR	1471021	UnaryOperationExpression	* brazeroptr		1466025	0					
ANR	1471022	UnaryOperator	*		1466025	0					
ANR	1471023	Identifier	brazeroptr		1466025	1					
ANR	1471024	Identifier	OP_BRAPOSZERO		1466025	1					
ANR	1471025	IfStatement	if ( repeat_min < 2 )		1466025	2					
ANR	1471026	Condition	repeat_min < 2	6290:16:204448:204461	1466025	0	True				
ANR	1471027	RelationalExpression	repeat_min < 2		1466025	0		<			
ANR	1471028	Identifier	repeat_min		1466025	0					
ANR	1471029	PrimaryExpression	2		1466025	1					
ANR	1471030	ExpressionStatement	possessive_quantifier = FALSE	6290:32:204464:204493	1466025	1	True				
ANR	1471031	AssignmentExpression	possessive_quantifier = FALSE		1466025	0		=			
ANR	1471032	Identifier	possessive_quantifier		1466025	0					
ANR	1471033	Identifier	FALSE		1466025	1					
ANR	1471034	ElseStatement	else		1466025	0					
ANR	1471035	ExpressionStatement	* ketcode = OP_KETRMAX + repeat_type	6295:15:204568:204603	1466025	0	True				
ANR	1471036	AssignmentExpression	* ketcode = OP_KETRMAX + repeat_type		1466025	0		=			
ANR	1471037	UnaryOperationExpression	* ketcode		1466025	0					
ANR	1471038	UnaryOperator	*		1466025	0					
ANR	1471039	Identifier	ketcode		1466025	1					
ANR	1471040	AdditiveExpression	OP_KETRMAX + repeat_type		1466025	1		+			
ANR	1471041	Identifier	OP_KETRMAX		1466025	0					
ANR	1471042	Identifier	repeat_type		1466025	1					
ANR	1471043	ElseStatement	else		1466025	0					
ANR	1471044	IfStatement	if ( * previous == OP_FAIL )		1466025	0					
ANR	1471045	Condition	* previous == OP_FAIL	6305:13:204942:204961	1466025	0	True				
ANR	1471046	EqualityExpression	* previous == OP_FAIL		1466025	0		==			
ANR	1471047	UnaryOperationExpression	* previous		1466025	0					
ANR	1471048	UnaryOperator	*		1466025	0					
ANR	1471049	Identifier	previous		1466025	1					
ANR	1471050	Identifier	OP_FAIL		1466025	1					
ANR	1471051	GotoStatement	goto END_REPEAT ;	6305:35:204964:204979	1466025	1	True				
ANR	1471052	Identifier	END_REPEAT		1466025	0					
ANR	1471053	ElseStatement	else		1466025	0					
ANR	1471054	CompoundStatement		1871:6:65798:65798	1466025	0					
ANR	1471055	ExpressionStatement	* errorcodeptr = ERR11	6311:6:205051:205072	1466025	0	True				
ANR	1471056	AssignmentExpression	* errorcodeptr = ERR11		1466025	0		=			
ANR	1471057	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1471058	UnaryOperator	*		1466025	0					
ANR	1471059	Identifier	errorcodeptr		1466025	1					
ANR	1471060	Identifier	ERR11		1466025	1					
ANR	1471061	GotoStatement	goto FAILED ;	6312:6:205080:205091	1466025	1	True				
ANR	1471062	Identifier	FAILED		1466025	0					
ANR	1471063	IfStatement	if ( * previous == OP_CHAR || * previous == OP_CHARI || * previous == OP_NOT || * previous == OP_NOTI )		1466025	88					
ANR	1471064	Condition	* previous == OP_CHAR || * previous == OP_CHARI || * previous == OP_NOT || * previous == OP_NOTI	5685:8:181983:182082	1466025	0	True				
ANR	1471065	OrExpression	* previous == OP_CHAR || * previous == OP_CHARI || * previous == OP_NOT || * previous == OP_NOTI		1466025	0		||			
ANR	1471066	EqualityExpression	* previous == OP_CHAR		1466025	0		==			
ANR	1471067	UnaryOperationExpression	* previous		1466025	0					
ANR	1471068	UnaryOperator	*		1466025	0					
ANR	1471069	Identifier	previous		1466025	1					
ANR	1471070	Identifier	OP_CHAR		1466025	1					
ANR	1471071	OrExpression	* previous == OP_CHARI || * previous == OP_NOT || * previous == OP_NOTI		1466025	1		||			
ANR	1471072	EqualityExpression	* previous == OP_CHARI		1466025	0		==			
ANR	1471073	UnaryOperationExpression	* previous		1466025	0					
ANR	1471074	UnaryOperator	*		1466025	0					
ANR	1471075	Identifier	previous		1466025	1					
ANR	1471076	Identifier	OP_CHARI		1466025	1					
ANR	1471077	OrExpression	* previous == OP_NOT || * previous == OP_NOTI		1466025	1		||			
ANR	1471078	EqualityExpression	* previous == OP_NOT		1466025	0		==			
ANR	1471079	UnaryOperationExpression	* previous		1466025	0					
ANR	1471080	UnaryOperator	*		1466025	0					
ANR	1471081	Identifier	previous		1466025	1					
ANR	1471082	Identifier	OP_NOT		1466025	1					
ANR	1471083	EqualityExpression	* previous == OP_NOTI		1466025	1		==			
ANR	1471084	UnaryOperationExpression	* previous		1466025	0					
ANR	1471085	UnaryOperator	*		1466025	0					
ANR	1471086	Identifier	previous		1466025	1					
ANR	1471087	Identifier	OP_NOTI		1466025	1					
ANR	1471088	CompoundStatement		1248:6:42846:42846	1466025	1					
ANR	1471089	SwitchStatement	switch ( * previous )		1466025	0					
ANR	1471090	Condition	* previous	5688:14:182107:182115	1466025	0	True				
ANR	1471091	UnaryOperationExpression	* previous		1466025	0					
ANR	1471092	UnaryOperator	*		1466025	0					
ANR	1471093	Identifier	previous		1466025	1					
ANR	1471094	CompoundStatement		1250:8:42881:42881	1466025	1					
ANR	1471095	Label	default :	5690:8:182136:182143	1466025	0	True				
ANR	1471096	Identifier	default		1466025	0					
ANR	1471097	Label	case OP_CHAR :	5691:8:182180:182192	1466025	1	True				
ANR	1471098	Identifier	OP_CHAR		1466025	0					
ANR	1471099	ExpressionStatement	op_type = OP_STAR - OP_STAR	5691:23:182195:182222	1466025	2	True				
ANR	1471100	AssignmentExpression	op_type = OP_STAR - OP_STAR		1466025	0		=			
ANR	1471101	Identifier	op_type		1466025	0					
ANR	1471102	AdditiveExpression	OP_STAR - OP_STAR		1466025	1		-			
ANR	1471103	Identifier	OP_STAR		1466025	0					
ANR	1471104	Identifier	OP_STAR		1466025	1					
ANR	1471105	BreakStatement	break ;	5691:52:182224:182229	1466025	3	True				
ANR	1471106	Label	case OP_CHARI :	5692:8:182239:182252	1466025	4	True				
ANR	1471107	Identifier	OP_CHARI		1466025	0					
ANR	1471108	ExpressionStatement	op_type = OP_STARI - OP_STAR	5692:23:182254:182282	1466025	5	True				
ANR	1471109	AssignmentExpression	op_type = OP_STARI - OP_STAR		1466025	0		=			
ANR	1471110	Identifier	op_type		1466025	0					
ANR	1471111	AdditiveExpression	OP_STARI - OP_STAR		1466025	1		-			
ANR	1471112	Identifier	OP_STARI		1466025	0					
ANR	1471113	Identifier	OP_STAR		1466025	1					
ANR	1471114	BreakStatement	break ;	5692:53:182284:182289	1466025	6	True				
ANR	1471115	Label	case OP_NOT :	5693:8:182299:182310	1466025	7	True				
ANR	1471116	Identifier	OP_NOT		1466025	0					
ANR	1471117	ExpressionStatement	op_type = OP_NOTSTAR - OP_STAR	5693:23:182314:182344	1466025	8	True				
ANR	1471118	AssignmentExpression	op_type = OP_NOTSTAR - OP_STAR		1466025	0		=			
ANR	1471119	Identifier	op_type		1466025	0					
ANR	1471120	AdditiveExpression	OP_NOTSTAR - OP_STAR		1466025	1		-			
ANR	1471121	Identifier	OP_NOTSTAR		1466025	0					
ANR	1471122	Identifier	OP_STAR		1466025	1					
ANR	1471123	BreakStatement	break ;	5693:55:182346:182351	1466025	9	True				
ANR	1471124	Label	case OP_NOTI :	5694:8:182361:182373	1466025	10	True				
ANR	1471125	Identifier	OP_NOTI		1466025	0					
ANR	1471126	ExpressionStatement	op_type = OP_NOTSTARI - OP_STAR	5694:23:182376:182407	1466025	11	True				
ANR	1471127	AssignmentExpression	op_type = OP_NOTSTARI - OP_STAR		1466025	0		=			
ANR	1471128	Identifier	op_type		1466025	0					
ANR	1471129	AdditiveExpression	OP_NOTSTARI - OP_STAR		1466025	1		-			
ANR	1471130	Identifier	OP_NOTSTARI		1466025	0					
ANR	1471131	Identifier	OP_STAR		1466025	1					
ANR	1471132	BreakStatement	break ;	5694:56:182409:182414	1466025	12	True				
ANR	1471133	IfStatement	if ( utf && NOT_FIRSTCHAR ( code [ - 1 ] ) )		1466025	1					
ANR	1471134	Condition	utf && NOT_FIRSTCHAR ( code [ - 1 ] )	5703:10:182773:182802	1466025	0	True				
ANR	1471135	AndExpression	utf && NOT_FIRSTCHAR ( code [ - 1 ] )		1466025	0		&&			
ANR	1471136	Identifier	utf		1466025	0					
ANR	1471137	CallExpression	NOT_FIRSTCHAR ( code [ - 1 ] )		1466025	1					
ANR	1471138	Callee	NOT_FIRSTCHAR		1466025	0					
ANR	1471139	Identifier	NOT_FIRSTCHAR		1466025	0					
ANR	1471140	ArgumentList	code [ - 1 ]		1466025	1					
ANR	1471141	Argument	code [ - 1 ]		1466025	0					
ANR	1471142	ArrayIndexing	code [ - 1 ]		1466025	0					
ANR	1471143	Identifier	code		1466025	0					
ANR	1471144	UnaryOperationExpression	- 1		1466025	1					
ANR	1471145	UnaryOperator	-		1466025	0					
ANR	1471146	PrimaryExpression	1		1466025	1					
ANR	1471147	CompoundStatement		1266:8:43578:43609	1466025	1					
ANR	1471148	IdentifierDeclStatement	pcre_uchar * lastchar = code - 1 ;	5705:8:182823:182854	1466025	0	True				
ANR	1471149	IdentifierDecl	* lastchar = code - 1		1466025	0					
ANR	1471150	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1471151	Identifier	lastchar		1466025	1					
ANR	1471152	AssignmentExpression	* lastchar = code - 1		1466025	2		=			
ANR	1471153	Identifier	lastchar		1466025	0					
ANR	1471154	AdditiveExpression	code - 1		1466025	1		-			
ANR	1471155	Identifier	code		1466025	0					
ANR	1471156	PrimaryExpression	1		1466025	1					
ANR	1471157	ExpressionStatement	BACKCHAR ( lastchar )	5706:8:182864:182882	1466025	1	True				
ANR	1471158	CallExpression	BACKCHAR ( lastchar )		1466025	0					
ANR	1471159	Callee	BACKCHAR		1466025	0					
ANR	1471160	Identifier	BACKCHAR		1466025	0					
ANR	1471161	ArgumentList	lastchar		1466025	1					
ANR	1471162	Argument	lastchar		1466025	0					
ANR	1471163	Identifier	lastchar		1466025	0					
ANR	1471164	ExpressionStatement	c = ( int ) ( code - lastchar )	5707:8:182892:182918	1466025	2	True				
ANR	1471165	AssignmentExpression	c = ( int ) ( code - lastchar )		1466025	0		=			
ANR	1471166	Identifier	c		1466025	0					
ANR	1471167	CastExpression	( int ) ( code - lastchar )		1466025	1					
ANR	1471168	CastTarget	int		1466025	0					
ANR	1471169	AdditiveExpression	code - lastchar		1466025	1		-			
ANR	1471170	Identifier	code		1466025	0					
ANR	1471171	Identifier	lastchar		1466025	1					
ANR	1471172	ExpressionStatement	"memcpy ( utf_chars , lastchar , IN_UCHARS ( c ) )"	5708:8:182964:183005	1466025	3	True				
ANR	1471173	CallExpression	"memcpy ( utf_chars , lastchar , IN_UCHARS ( c ) )"		1466025	0					
ANR	1471174	Callee	memcpy		1466025	0					
ANR	1471175	Identifier	memcpy		1466025	0					
ANR	1471176	ArgumentList	utf_chars		1466025	1					
ANR	1471177	Argument	utf_chars		1466025	0					
ANR	1471178	Identifier	utf_chars		1466025	0					
ANR	1471179	Argument	lastchar		1466025	1					
ANR	1471180	Identifier	lastchar		1466025	0					
ANR	1471181	Argument	IN_UCHARS ( c )		1466025	2					
ANR	1471182	CallExpression	IN_UCHARS ( c )		1466025	0					
ANR	1471183	Callee	IN_UCHARS		1466025	0					
ANR	1471184	Identifier	IN_UCHARS		1466025	0					
ANR	1471185	ArgumentList	c		1466025	1					
ANR	1471186	Argument	c		1466025	0					
ANR	1471187	Identifier	c		1466025	0					
ANR	1471188	ExpressionStatement	c |= UTF_LENGTH	5709:8:183035:183050	1466025	4	True				
ANR	1471189	AssignmentExpression	c |= UTF_LENGTH		1466025	0		|=			
ANR	1471190	Identifier	c		1466025	0					
ANR	1471191	Identifier	UTF_LENGTH		1466025	1					
ANR	1471192	ElseStatement	else		1466025	0					
ANR	1471193	CompoundStatement		1277:8:44050:44050	1466025	0					
ANR	1471194	ExpressionStatement	c = code [ - 1 ]	5717:8:183305:183317	1466025	0	True				
ANR	1471195	AssignmentExpression	c = code [ - 1 ]		1466025	0		=			
ANR	1471196	Identifier	c		1466025	0					
ANR	1471197	ArrayIndexing	code [ - 1 ]		1466025	1					
ANR	1471198	Identifier	code		1466025	0					
ANR	1471199	UnaryOperationExpression	- 1		1466025	1					
ANR	1471200	UnaryOperator	-		1466025	0					
ANR	1471201	PrimaryExpression	1		1466025	1					
ANR	1471202	IfStatement	if ( * previous <= OP_CHARI && repeat_min > 1 )		1466025	1					
ANR	1471203	Condition	* previous <= OP_CHARI && repeat_min > 1	5718:12:183331:183369	1466025	0	True				
ANR	1471204	AndExpression	* previous <= OP_CHARI && repeat_min > 1		1466025	0		&&			
ANR	1471205	RelationalExpression	* previous <= OP_CHARI		1466025	0		<=			
ANR	1471206	UnaryOperationExpression	* previous		1466025	0					
ANR	1471207	UnaryOperator	*		1466025	0					
ANR	1471208	Identifier	previous		1466025	1					
ANR	1471209	Identifier	OP_CHARI		1466025	1					
ANR	1471210	RelationalExpression	repeat_min > 1		1466025	1		>			
ANR	1471211	Identifier	repeat_min		1466025	0					
ANR	1471212	PrimaryExpression	1		1466025	1					
ANR	1471213	CompoundStatement		1280:10:44137:44137	1466025	1					
ANR	1471214	ExpressionStatement	reqchar = c	5720:10:183394:183405	1466025	0	True				
ANR	1471215	AssignmentExpression	reqchar = c		1466025	0		=			
ANR	1471216	Identifier	reqchar		1466025	0					
ANR	1471217	Identifier	c		1466025	1					
ANR	1471218	ExpressionStatement	reqcharflags = req_caseopt | cd -> req_varyopt	5721:10:183417:183461	1466025	1	True				
ANR	1471219	AssignmentExpression	reqcharflags = req_caseopt | cd -> req_varyopt		1466025	0		=			
ANR	1471220	Identifier	reqcharflags		1466025	0					
ANR	1471221	InclusiveOrExpression	req_caseopt | cd -> req_varyopt		1466025	1		|			
ANR	1471222	Identifier	req_caseopt		1466025	0					
ANR	1471223	PtrMemberAccess	cd -> req_varyopt		1466025	1					
ANR	1471224	Identifier	cd		1466025	0					
ANR	1471225	Identifier	req_varyopt		1466025	1					
ANR	1471226	GotoStatement	goto OUTPUT_SINGLE_REPEAT ;	5725:6:183492:183517	1466025	2	True				
ANR	1471227	Identifier	OUTPUT_SINGLE_REPEAT		1466025	0					
ANR	1471228	ElseStatement	else		1466025	0					
ANR	1471229	IfStatement	if ( * previous < OP_EODN )		1466025	0					
ANR	1471230	Condition	* previous < OP_EODN	5735:13:184008:184026	1466025	0	True				
ANR	1471231	RelationalExpression	* previous < OP_EODN		1466025	0		<			
ANR	1471232	UnaryOperationExpression	* previous		1466025	0					
ANR	1471233	UnaryOperator	*		1466025	0					
ANR	1471234	Identifier	previous		1466025	1					
ANR	1471235	Identifier	OP_EODN		1466025	1					
ANR	1471236	CompoundStatement		1299:6:44825:44850	1466025	1					
ANR	1471237	IdentifierDeclStatement	pcre_uchar * oldcode ;	5737:6:184043:184062	1466025	0	True				
ANR	1471238	IdentifierDecl	* oldcode		1466025	0					
ANR	1471239	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1471240	Identifier	oldcode		1466025	1					
ANR	1471241	IdentifierDeclStatement	"int prop_type , prop_value ;"	5738:6:184070:184095	1466025	1	True				
ANR	1471242	IdentifierDecl	prop_type		1466025	0					
ANR	1471243	IdentifierDeclType	int		1466025	0					
ANR	1471244	Identifier	prop_type		1466025	1					
ANR	1471245	IdentifierDecl	prop_value		1466025	1					
ANR	1471246	IdentifierDeclType	int		1466025	0					
ANR	1471247	Identifier	prop_value		1466025	1					
ANR	1471248	ExpressionStatement	op_type = OP_TYPESTAR - OP_STAR	5739:6:184103:184134	1466025	2	True				
ANR	1471249	AssignmentExpression	op_type = OP_TYPESTAR - OP_STAR		1466025	0		=			
ANR	1471250	Identifier	op_type		1466025	0					
ANR	1471251	AdditiveExpression	OP_TYPESTAR - OP_STAR		1466025	1		-			
ANR	1471252	Identifier	OP_TYPESTAR		1466025	0					
ANR	1471253	Identifier	OP_STAR		1466025	1					
ANR	1471254	ExpressionStatement	c = * previous	5740:6:184166:184179	1466025	3	True				
ANR	1471255	AssignmentExpression	c = * previous		1466025	0		=			
ANR	1471256	Identifier	c		1466025	0					
ANR	1471257	UnaryOperationExpression	* previous		1466025	1					
ANR	1471258	UnaryOperator	*		1466025	0					
ANR	1471259	Identifier	previous		1466025	1					
ANR	1471260	Label	OUTPUT_SINGLE_REPEAT :	5742:6:184188:184208	1466025	4	True				
ANR	1471261	Identifier	OUTPUT_SINGLE_REPEAT		1466025	0					
ANR	1471262	IfStatement	if ( * previous == OP_PROP || * previous == OP_NOTPROP )		1466025	5					
ANR	1471263	Condition	* previous == OP_PROP || * previous == OP_NOTPROP	5743:10:184220:184266	1466025	0	True				
ANR	1471264	OrExpression	* previous == OP_PROP || * previous == OP_NOTPROP		1466025	0		||			
ANR	1471265	EqualityExpression	* previous == OP_PROP		1466025	0		==			
ANR	1471266	UnaryOperationExpression	* previous		1466025	0					
ANR	1471267	UnaryOperator	*		1466025	0					
ANR	1471268	Identifier	previous		1466025	1					
ANR	1471269	Identifier	OP_PROP		1466025	1					
ANR	1471270	EqualityExpression	* previous == OP_NOTPROP		1466025	1		==			
ANR	1471271	UnaryOperationExpression	* previous		1466025	0					
ANR	1471272	UnaryOperator	*		1466025	0					
ANR	1471273	Identifier	previous		1466025	1					
ANR	1471274	Identifier	OP_NOTPROP		1466025	1					
ANR	1471275	CompoundStatement		1305:8:45032:45032	1466025	1					
ANR	1471276	ExpressionStatement	prop_type = previous [ 1 ]	5745:8:184287:184310	1466025	0	True				
ANR	1471277	AssignmentExpression	prop_type = previous [ 1 ]		1466025	0		=			
ANR	1471278	Identifier	prop_type		1466025	0					
ANR	1471279	ArrayIndexing	previous [ 1 ]		1466025	1					
ANR	1471280	Identifier	previous		1466025	0					
ANR	1471281	PrimaryExpression	1		1466025	1					
ANR	1471282	ExpressionStatement	prop_value = previous [ 2 ]	5746:8:184320:184344	1466025	1	True				
ANR	1471283	AssignmentExpression	prop_value = previous [ 2 ]		1466025	0		=			
ANR	1471284	Identifier	prop_value		1466025	0					
ANR	1471285	ArrayIndexing	previous [ 2 ]		1466025	1					
ANR	1471286	Identifier	previous		1466025	0					
ANR	1471287	PrimaryExpression	2		1466025	1					
ANR	1471288	ElseStatement	else		1466025	0					
ANR	1471289	ExpressionStatement	prop_type = prop_value = - 1	5748:11:184367:184394	1466025	0	True				
ANR	1471290	AssignmentExpression	prop_type = prop_value = - 1		1466025	0		=			
ANR	1471291	Identifier	prop_type		1466025	0					
ANR	1471292	AssignmentExpression	prop_value = - 1		1466025	1		=			
ANR	1471293	Identifier	prop_value		1466025	0					
ANR	1471294	UnaryOperationExpression	- 1		1466025	1					
ANR	1471295	UnaryOperator	-		1466025	0					
ANR	1471296	PrimaryExpression	1		1466025	1					
ANR	1471297	ExpressionStatement	oldcode = code	5750:6:184403:184417	1466025	6	True				
ANR	1471298	AssignmentExpression	oldcode = code		1466025	0		=			
ANR	1471299	Identifier	oldcode		1466025	0					
ANR	1471300	Identifier	code		1466025	1					
ANR	1471301	ExpressionStatement	code = previous	5751:6:184425:184440	1466025	7	True				
ANR	1471302	AssignmentExpression	code = previous		1466025	0		=			
ANR	1471303	Identifier	code		1466025	0					
ANR	1471304	Identifier	previous		1466025	1					
ANR	1471305	IfStatement	if ( repeat_max == 0 )		1466025	8					
ANR	1471306	Condition	repeat_max == 0	5756:10:184664:184678	1466025	0	True				
ANR	1471307	EqualityExpression	repeat_max == 0		1466025	0		==			
ANR	1471308	Identifier	repeat_max		1466025	0					
ANR	1471309	PrimaryExpression	0		1466025	1					
ANR	1471310	GotoStatement	goto END_REPEAT ;	5756:27:184681:184696	1466025	1	True				
ANR	1471311	Identifier	END_REPEAT		1466025	0					
ANR	1471312	ExpressionStatement	repeat_type += op_type	5760:6:184759:184781	1466025	9	True				
ANR	1471313	AssignmentExpression	repeat_type += op_type		1466025	0		+=			
ANR	1471314	Identifier	repeat_type		1466025	0					
ANR	1471315	Identifier	op_type		1466025	1					
ANR	1471316	IfStatement	if ( repeat_min == 0 )		1466025	10					
ANR	1471317	Condition	repeat_min == 0	5765:10:184916:184930	1466025	0	True				
ANR	1471318	EqualityExpression	repeat_min == 0		1466025	0		==			
ANR	1471319	Identifier	repeat_min		1466025	0					
ANR	1471320	PrimaryExpression	0		1466025	1					
ANR	1471321	CompoundStatement		1327:8:45696:45696	1466025	1					
ANR	1471322	IfStatement	if ( repeat_max == - 1 )		1466025	0					
ANR	1471323	Condition	repeat_max == - 1	5767:12:184955:184970	1466025	0	True				
ANR	1471324	EqualityExpression	repeat_max == - 1		1466025	0		==			
ANR	1471325	Identifier	repeat_max		1466025	0					
ANR	1471326	UnaryOperationExpression	- 1		1466025	1					
ANR	1471327	UnaryOperator	-		1466025	0					
ANR	1471328	PrimaryExpression	1		1466025	1					
ANR	1471329	ExpressionStatement	* code ++ = OP_STAR + repeat_type	5767:30:184973:185004	1466025	1	True				
ANR	1471330	AssignmentExpression	* code ++ = OP_STAR + repeat_type		1466025	0		=			
ANR	1471331	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471332	UnaryOperator	*		1466025	0					
ANR	1471333	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471334	Identifier	code		1466025	0					
ANR	1471335	IncDec	++		1466025	1					
ANR	1471336	AdditiveExpression	OP_STAR + repeat_type		1466025	1		+			
ANR	1471337	Identifier	OP_STAR		1466025	0					
ANR	1471338	Identifier	repeat_type		1466025	1					
ANR	1471339	ElseStatement	else		1466025	0					
ANR	1471340	IfStatement	if ( repeat_max == 1 )		1466025	0					
ANR	1471341	Condition	repeat_max == 1	5768:19:185025:185039	1466025	0	True				
ANR	1471342	EqualityExpression	repeat_max == 1		1466025	0		==			
ANR	1471343	Identifier	repeat_max		1466025	0					
ANR	1471344	PrimaryExpression	1		1466025	1					
ANR	1471345	ExpressionStatement	* code ++ = OP_QUERY + repeat_type	5768:36:185042:185074	1466025	1	True				
ANR	1471346	AssignmentExpression	* code ++ = OP_QUERY + repeat_type		1466025	0		=			
ANR	1471347	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471348	UnaryOperator	*		1466025	0					
ANR	1471349	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471350	Identifier	code		1466025	0					
ANR	1471351	IncDec	++		1466025	1					
ANR	1471352	AdditiveExpression	OP_QUERY + repeat_type		1466025	1		+			
ANR	1471353	Identifier	OP_QUERY		1466025	0					
ANR	1471354	Identifier	repeat_type		1466025	1					
ANR	1471355	ElseStatement	else		1466025	0					
ANR	1471356	CompoundStatement		1331:10:45854:45854	1466025	0					
ANR	1471357	ExpressionStatement	* code ++ = OP_UPTO + repeat_type	5771:10:185111:185142	1466025	0	True				
ANR	1471358	AssignmentExpression	* code ++ = OP_UPTO + repeat_type		1466025	0		=			
ANR	1471359	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471360	UnaryOperator	*		1466025	0					
ANR	1471361	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471362	Identifier	code		1466025	0					
ANR	1471363	IncDec	++		1466025	1					
ANR	1471364	AdditiveExpression	OP_UPTO + repeat_type		1466025	1		+			
ANR	1471365	Identifier	OP_UPTO		1466025	0					
ANR	1471366	Identifier	repeat_type		1466025	1					
ANR	1471367	ExpressionStatement	"PUT2INC ( code , 0 , repeat_max )"	5772:10:185154:185182	1466025	1	True				
ANR	1471368	CallExpression	"PUT2INC ( code , 0 , repeat_max )"		1466025	0					
ANR	1471369	Callee	PUT2INC		1466025	0					
ANR	1471370	Identifier	PUT2INC		1466025	0					
ANR	1471371	ArgumentList	code		1466025	1					
ANR	1471372	Argument	code		1466025	0					
ANR	1471373	Identifier	code		1466025	0					
ANR	1471374	Argument	0		1466025	1					
ANR	1471375	PrimaryExpression	0		1466025	0					
ANR	1471376	Argument	repeat_max		1466025	2					
ANR	1471377	Identifier	repeat_max		1466025	0					
ANR	1471378	ElseStatement	else		1466025	0					
ANR	1471379	IfStatement	if ( repeat_min == 1 )		1466025	0					
ANR	1471380	Condition	repeat_min == 1	5781:15:185490:185504	1466025	0	True				
ANR	1471381	EqualityExpression	repeat_min == 1		1466025	0		==			
ANR	1471382	Identifier	repeat_min		1466025	0					
ANR	1471383	PrimaryExpression	1		1466025	1					
ANR	1471384	CompoundStatement		1343:8:46270:46270	1466025	1					
ANR	1471385	IfStatement	if ( repeat_max == - 1 )		1466025	0					
ANR	1471386	Condition	repeat_max == - 1	5783:12:185529:185544	1466025	0	True				
ANR	1471387	EqualityExpression	repeat_max == - 1		1466025	0		==			
ANR	1471388	Identifier	repeat_max		1466025	0					
ANR	1471389	UnaryOperationExpression	- 1		1466025	1					
ANR	1471390	UnaryOperator	-		1466025	0					
ANR	1471391	PrimaryExpression	1		1466025	1					
ANR	1471392	ExpressionStatement	* code ++ = OP_PLUS + repeat_type	5784:10:185557:185588	1466025	1	True				
ANR	1471393	AssignmentExpression	* code ++ = OP_PLUS + repeat_type		1466025	0		=			
ANR	1471394	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471395	UnaryOperator	*		1466025	0					
ANR	1471396	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471397	Identifier	code		1466025	0					
ANR	1471398	IncDec	++		1466025	1					
ANR	1471399	AdditiveExpression	OP_PLUS + repeat_type		1466025	1		+			
ANR	1471400	Identifier	OP_PLUS		1466025	0					
ANR	1471401	Identifier	repeat_type		1466025	1					
ANR	1471402	ElseStatement	else		1466025	0					
ANR	1471403	CompoundStatement		1347:10:46368:46368	1466025	0					
ANR	1471404	ExpressionStatement	code = oldcode	5787:10:185625:185639	1466025	0	True				
ANR	1471405	AssignmentExpression	code = oldcode		1466025	0		=			
ANR	1471406	Identifier	code		1466025	0					
ANR	1471407	Identifier	oldcode		1466025	1					
ANR	1471408	IfStatement	if ( repeat_max == 1 )		1466025	1					
ANR	1471409	Condition	repeat_max == 1	5788:14:185706:185720	1466025	0	True				
ANR	1471410	EqualityExpression	repeat_max == 1		1466025	0		==			
ANR	1471411	Identifier	repeat_max		1466025	0					
ANR	1471412	PrimaryExpression	1		1466025	1					
ANR	1471413	GotoStatement	goto END_REPEAT ;	5788:31:185723:185738	1466025	1	True				
ANR	1471414	Identifier	END_REPEAT		1466025	0					
ANR	1471415	ExpressionStatement	* code ++ = OP_UPTO + repeat_type	5789:10:185750:185781	1466025	2	True				
ANR	1471416	AssignmentExpression	* code ++ = OP_UPTO + repeat_type		1466025	0		=			
ANR	1471417	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471418	UnaryOperator	*		1466025	0					
ANR	1471419	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471420	Identifier	code		1466025	0					
ANR	1471421	IncDec	++		1466025	1					
ANR	1471422	AdditiveExpression	OP_UPTO + repeat_type		1466025	1		+			
ANR	1471423	Identifier	OP_UPTO		1466025	0					
ANR	1471424	Identifier	repeat_type		1466025	1					
ANR	1471425	ExpressionStatement	"PUT2INC ( code , 0 , repeat_max - 1 )"	5790:10:185793:185825	1466025	3	True				
ANR	1471426	CallExpression	"PUT2INC ( code , 0 , repeat_max - 1 )"		1466025	0					
ANR	1471427	Callee	PUT2INC		1466025	0					
ANR	1471428	Identifier	PUT2INC		1466025	0					
ANR	1471429	ArgumentList	code		1466025	1					
ANR	1471430	Argument	code		1466025	0					
ANR	1471431	Identifier	code		1466025	0					
ANR	1471432	Argument	0		1466025	1					
ANR	1471433	PrimaryExpression	0		1466025	0					
ANR	1471434	Argument	repeat_max - 1		1466025	2					
ANR	1471435	AdditiveExpression	repeat_max - 1		1466025	0		-			
ANR	1471436	Identifier	repeat_max		1466025	0					
ANR	1471437	PrimaryExpression	1		1466025	1					
ANR	1471438	ElseStatement	else		1466025	0					
ANR	1471439	CompoundStatement		1359:8:46749:46749	1466025	0					
ANR	1471440	ExpressionStatement	* code ++ = OP_EXACT + op_type	5799:8:186004:186032	1466025	0	True				
ANR	1471441	AssignmentExpression	* code ++ = OP_EXACT + op_type		1466025	0		=			
ANR	1471442	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471443	UnaryOperator	*		1466025	0					
ANR	1471444	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471445	Identifier	code		1466025	0					
ANR	1471446	IncDec	++		1466025	1					
ANR	1471447	AdditiveExpression	OP_EXACT + op_type		1466025	1		+			
ANR	1471448	Identifier	OP_EXACT		1466025	0					
ANR	1471449	Identifier	op_type		1466025	1					
ANR	1471450	ExpressionStatement	"PUT2INC ( code , 0 , repeat_min )"	5800:8:186083:186111	1466025	1	True				
ANR	1471451	CallExpression	"PUT2INC ( code , 0 , repeat_min )"		1466025	0					
ANR	1471452	Callee	PUT2INC		1466025	0					
ANR	1471453	Identifier	PUT2INC		1466025	0					
ANR	1471454	ArgumentList	code		1466025	1					
ANR	1471455	Argument	code		1466025	0					
ANR	1471456	Identifier	code		1466025	0					
ANR	1471457	Argument	0		1466025	1					
ANR	1471458	PrimaryExpression	0		1466025	0					
ANR	1471459	Argument	repeat_min		1466025	2					
ANR	1471460	Identifier	repeat_min		1466025	0					
ANR	1471461	IfStatement	if ( repeat_max < 0 )		1466025	2					
ANR	1471462	Condition	repeat_max < 0	5808:12:186483:186496	1466025	0	True				
ANR	1471463	RelationalExpression	repeat_max < 0		1466025	0		<			
ANR	1471464	Identifier	repeat_max		1466025	0					
ANR	1471465	PrimaryExpression	0		1466025	1					
ANR	1471466	CompoundStatement		1370:10:47264:47264	1466025	1					
ANR	1471467	IfStatement	if ( utf && ( c & UTF_LENGTH ) != 0 )		1466025	0					
ANR	1471468	Condition	utf && ( c & UTF_LENGTH ) != 0	5811:14:186576:186603	1466025	0	True				
ANR	1471469	AndExpression	utf && ( c & UTF_LENGTH ) != 0		1466025	0		&&			
ANR	1471470	Identifier	utf		1466025	0					
ANR	1471471	EqualityExpression	( c & UTF_LENGTH ) != 0		1466025	1		!=			
ANR	1471472	BitAndExpression	c & UTF_LENGTH		1466025	0		&			
ANR	1471473	Identifier	c		1466025	0					
ANR	1471474	Identifier	UTF_LENGTH		1466025	1					
ANR	1471475	PrimaryExpression	0		1466025	1					
ANR	1471476	CompoundStatement		1373:12:47373:47373	1466025	1					
ANR	1471477	ExpressionStatement	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"	5813:12:186632:186673	1466025	0	True				
ANR	1471478	CallExpression	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"		1466025	0					
ANR	1471479	Callee	memcpy		1466025	0					
ANR	1471480	Identifier	memcpy		1466025	0					
ANR	1471481	ArgumentList	code		1466025	1					
ANR	1471482	Argument	code		1466025	0					
ANR	1471483	Identifier	code		1466025	0					
ANR	1471484	Argument	utf_chars		1466025	1					
ANR	1471485	Identifier	utf_chars		1466025	0					
ANR	1471486	Argument	IN_UCHARS ( c & 7 )		1466025	2					
ANR	1471487	CallExpression	IN_UCHARS ( c & 7 )		1466025	0					
ANR	1471488	Callee	IN_UCHARS		1466025	0					
ANR	1471489	Identifier	IN_UCHARS		1466025	0					
ANR	1471490	ArgumentList	c & 7		1466025	1					
ANR	1471491	Argument	c & 7		1466025	0					
ANR	1471492	BitAndExpression	c & 7		1466025	0		&			
ANR	1471493	Identifier	c		1466025	0					
ANR	1471494	PrimaryExpression	7		1466025	1					
ANR	1471495	ExpressionStatement	code += c & 7	5814:12:186687:186700	1466025	1	True				
ANR	1471496	AssignmentExpression	code += c & 7		1466025	0		+=			
ANR	1471497	Identifier	code		1466025	0					
ANR	1471498	BitAndExpression	c & 7		1466025	1		&			
ANR	1471499	Identifier	c		1466025	0					
ANR	1471500	PrimaryExpression	7		1466025	1					
ANR	1471501	ElseStatement	else		1466025	0					
ANR	1471502	CompoundStatement		1379:12:47505:47505	1466025	0					
ANR	1471503	ExpressionStatement	* code ++ = c	5819:12:186764:186775	1466025	0	True				
ANR	1471504	AssignmentExpression	* code ++ = c		1466025	0		=			
ANR	1471505	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471506	UnaryOperator	*		1466025	0					
ANR	1471507	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471508	Identifier	code		1466025	0					
ANR	1471509	IncDec	++		1466025	1					
ANR	1471510	Identifier	c		1466025	1					
ANR	1471511	IfStatement	if ( prop_type >= 0 )		1466025	1					
ANR	1471512	Condition	prop_type >= 0	5820:16:186793:186806	1466025	0	True				
ANR	1471513	RelationalExpression	prop_type >= 0		1466025	0		>=			
ANR	1471514	Identifier	prop_type		1466025	0					
ANR	1471515	PrimaryExpression	0		1466025	1					
ANR	1471516	CompoundStatement		1382:14:47578:47578	1466025	1					
ANR	1471517	ExpressionStatement	* code ++ = prop_type	5822:14:186839:186858	1466025	0	True				
ANR	1471518	AssignmentExpression	* code ++ = prop_type		1466025	0		=			
ANR	1471519	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471520	UnaryOperator	*		1466025	0					
ANR	1471521	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471522	Identifier	code		1466025	0					
ANR	1471523	IncDec	++		1466025	1					
ANR	1471524	Identifier	prop_type		1466025	1					
ANR	1471525	ExpressionStatement	* code ++ = prop_value	5823:14:186874:186894	1466025	1	True				
ANR	1471526	AssignmentExpression	* code ++ = prop_value		1466025	0		=			
ANR	1471527	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471528	UnaryOperator	*		1466025	0					
ANR	1471529	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471530	Identifier	code		1466025	0					
ANR	1471531	IncDec	++		1466025	1					
ANR	1471532	Identifier	prop_value		1466025	1					
ANR	1471533	ExpressionStatement	* code ++ = OP_STAR + repeat_type	5826:10:186936:186967	1466025	1	True				
ANR	1471534	AssignmentExpression	* code ++ = OP_STAR + repeat_type		1466025	0		=			
ANR	1471535	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471536	UnaryOperator	*		1466025	0					
ANR	1471537	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471538	Identifier	code		1466025	0					
ANR	1471539	IncDec	++		1466025	1					
ANR	1471540	AdditiveExpression	OP_STAR + repeat_type		1466025	1		+			
ANR	1471541	Identifier	OP_STAR		1466025	0					
ANR	1471542	Identifier	repeat_type		1466025	1					
ANR	1471543	ElseStatement	else		1466025	0					
ANR	1471544	IfStatement	if ( repeat_max != repeat_min )		1466025	0					
ANR	1471545	Condition	repeat_max != repeat_min	5833:17:187215:187238	1466025	0	True				
ANR	1471546	EqualityExpression	repeat_max != repeat_min		1466025	0		!=			
ANR	1471547	Identifier	repeat_max		1466025	0					
ANR	1471548	Identifier	repeat_min		1466025	1					
ANR	1471549	CompoundStatement		1395:10:48006:48006	1466025	1					
ANR	1471550	IfStatement	if ( utf && ( c & UTF_LENGTH ) != 0 )		1466025	0					
ANR	1471551	Condition	utf && ( c & UTF_LENGTH ) != 0	5836:14:187318:187345	1466025	0	True				
ANR	1471552	AndExpression	utf && ( c & UTF_LENGTH ) != 0		1466025	0		&&			
ANR	1471553	Identifier	utf		1466025	0					
ANR	1471554	EqualityExpression	( c & UTF_LENGTH ) != 0		1466025	1		!=			
ANR	1471555	BitAndExpression	c & UTF_LENGTH		1466025	0		&			
ANR	1471556	Identifier	c		1466025	0					
ANR	1471557	Identifier	UTF_LENGTH		1466025	1					
ANR	1471558	PrimaryExpression	0		1466025	1					
ANR	1471559	CompoundStatement		1398:12:48115:48115	1466025	1					
ANR	1471560	ExpressionStatement	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"	5838:12:187374:187415	1466025	0	True				
ANR	1471561	CallExpression	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"		1466025	0					
ANR	1471562	Callee	memcpy		1466025	0					
ANR	1471563	Identifier	memcpy		1466025	0					
ANR	1471564	ArgumentList	code		1466025	1					
ANR	1471565	Argument	code		1466025	0					
ANR	1471566	Identifier	code		1466025	0					
ANR	1471567	Argument	utf_chars		1466025	1					
ANR	1471568	Identifier	utf_chars		1466025	0					
ANR	1471569	Argument	IN_UCHARS ( c & 7 )		1466025	2					
ANR	1471570	CallExpression	IN_UCHARS ( c & 7 )		1466025	0					
ANR	1471571	Callee	IN_UCHARS		1466025	0					
ANR	1471572	Identifier	IN_UCHARS		1466025	0					
ANR	1471573	ArgumentList	c & 7		1466025	1					
ANR	1471574	Argument	c & 7		1466025	0					
ANR	1471575	BitAndExpression	c & 7		1466025	0		&			
ANR	1471576	Identifier	c		1466025	0					
ANR	1471577	PrimaryExpression	7		1466025	1					
ANR	1471578	ExpressionStatement	code += c & 7	5839:12:187429:187442	1466025	1	True				
ANR	1471579	AssignmentExpression	code += c & 7		1466025	0		+=			
ANR	1471580	Identifier	code		1466025	0					
ANR	1471581	BitAndExpression	c & 7		1466025	1		&			
ANR	1471582	Identifier	c		1466025	0					
ANR	1471583	PrimaryExpression	7		1466025	1					
ANR	1471584	ElseStatement	else		1466025	0					
ANR	1471585	ExpressionStatement	* code ++ = c	5843:10:187490:187501	1466025	0	True				
ANR	1471586	AssignmentExpression	* code ++ = c		1466025	0		=			
ANR	1471587	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471588	UnaryOperator	*		1466025	0					
ANR	1471589	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471590	Identifier	code		1466025	0					
ANR	1471591	IncDec	++		1466025	1					
ANR	1471592	Identifier	c		1466025	1					
ANR	1471593	IfStatement	if ( prop_type >= 0 )		1466025	1					
ANR	1471594	Condition	prop_type >= 0	5844:14:187517:187530	1466025	0	True				
ANR	1471595	RelationalExpression	prop_type >= 0		1466025	0		>=			
ANR	1471596	Identifier	prop_type		1466025	0					
ANR	1471597	PrimaryExpression	0		1466025	1					
ANR	1471598	CompoundStatement		1406:12:48300:48300	1466025	1					
ANR	1471599	ExpressionStatement	* code ++ = prop_type	5846:12:187559:187578	1466025	0	True				
ANR	1471600	AssignmentExpression	* code ++ = prop_type		1466025	0		=			
ANR	1471601	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471602	UnaryOperator	*		1466025	0					
ANR	1471603	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471604	Identifier	code		1466025	0					
ANR	1471605	IncDec	++		1466025	1					
ANR	1471606	Identifier	prop_type		1466025	1					
ANR	1471607	ExpressionStatement	* code ++ = prop_value	5847:12:187592:187612	1466025	1	True				
ANR	1471608	AssignmentExpression	* code ++ = prop_value		1466025	0		=			
ANR	1471609	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471610	UnaryOperator	*		1466025	0					
ANR	1471611	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471612	Identifier	code		1466025	0					
ANR	1471613	IncDec	++		1466025	1					
ANR	1471614	Identifier	prop_value		1466025	1					
ANR	1471615	ExpressionStatement	repeat_max -= repeat_min	5849:10:187638:187662	1466025	2	True				
ANR	1471616	AssignmentExpression	repeat_max -= repeat_min		1466025	0		-=			
ANR	1471617	Identifier	repeat_max		1466025	0					
ANR	1471618	Identifier	repeat_min		1466025	1					
ANR	1471619	IfStatement	if ( repeat_max == 1 )		1466025	3					
ANR	1471620	Condition	repeat_max == 1	5851:14:187679:187693	1466025	0	True				
ANR	1471621	EqualityExpression	repeat_max == 1		1466025	0		==			
ANR	1471622	Identifier	repeat_max		1466025	0					
ANR	1471623	PrimaryExpression	1		1466025	1					
ANR	1471624	CompoundStatement		1413:12:48463:48463	1466025	1					
ANR	1471625	ExpressionStatement	* code ++ = OP_QUERY + repeat_type	5853:12:187722:187754	1466025	0	True				
ANR	1471626	AssignmentExpression	* code ++ = OP_QUERY + repeat_type		1466025	0		=			
ANR	1471627	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471628	UnaryOperator	*		1466025	0					
ANR	1471629	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471630	Identifier	code		1466025	0					
ANR	1471631	IncDec	++		1466025	1					
ANR	1471632	AdditiveExpression	OP_QUERY + repeat_type		1466025	1		+			
ANR	1471633	Identifier	OP_QUERY		1466025	0					
ANR	1471634	Identifier	repeat_type		1466025	1					
ANR	1471635	ElseStatement	else		1466025	0					
ANR	1471636	CompoundStatement		1417:12:48552:48552	1466025	0					
ANR	1471637	ExpressionStatement	* code ++ = OP_UPTO + repeat_type	5857:12:187811:187842	1466025	0	True				
ANR	1471638	AssignmentExpression	* code ++ = OP_UPTO + repeat_type		1466025	0		=			
ANR	1471639	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471640	UnaryOperator	*		1466025	0					
ANR	1471641	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471642	Identifier	code		1466025	0					
ANR	1471643	IncDec	++		1466025	1					
ANR	1471644	AdditiveExpression	OP_UPTO + repeat_type		1466025	1		+			
ANR	1471645	Identifier	OP_UPTO		1466025	0					
ANR	1471646	Identifier	repeat_type		1466025	1					
ANR	1471647	ExpressionStatement	"PUT2INC ( code , 0 , repeat_max )"	5858:12:187856:187884	1466025	1	True				
ANR	1471648	CallExpression	"PUT2INC ( code , 0 , repeat_max )"		1466025	0					
ANR	1471649	Callee	PUT2INC		1466025	0					
ANR	1471650	Identifier	PUT2INC		1466025	0					
ANR	1471651	ArgumentList	code		1466025	1					
ANR	1471652	Argument	code		1466025	0					
ANR	1471653	Identifier	code		1466025	0					
ANR	1471654	Argument	0		1466025	1					
ANR	1471655	PrimaryExpression	0		1466025	0					
ANR	1471656	Argument	repeat_max		1466025	2					
ANR	1471657	Identifier	repeat_max		1466025	0					
ANR	1471658	IfStatement	if ( utf && ( c & UTF_LENGTH ) != 0 )		1466025	11					
ANR	1471659	Condition	utf && ( c & UTF_LENGTH ) != 0	5866:10:188061:188088	1466025	0	True				
ANR	1471660	AndExpression	utf && ( c & UTF_LENGTH ) != 0		1466025	0		&&			
ANR	1471661	Identifier	utf		1466025	0					
ANR	1471662	EqualityExpression	( c & UTF_LENGTH ) != 0		1466025	1		!=			
ANR	1471663	BitAndExpression	c & UTF_LENGTH		1466025	0		&			
ANR	1471664	Identifier	c		1466025	0					
ANR	1471665	Identifier	UTF_LENGTH		1466025	1					
ANR	1471666	PrimaryExpression	0		1466025	1					
ANR	1471667	CompoundStatement		1428:8:48854:48854	1466025	1					
ANR	1471668	ExpressionStatement	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"	5868:8:188109:188150	1466025	0	True				
ANR	1471669	CallExpression	"memcpy ( code , utf_chars , IN_UCHARS ( c & 7 ) )"		1466025	0					
ANR	1471670	Callee	memcpy		1466025	0					
ANR	1471671	Identifier	memcpy		1466025	0					
ANR	1471672	ArgumentList	code		1466025	1					
ANR	1471673	Argument	code		1466025	0					
ANR	1471674	Identifier	code		1466025	0					
ANR	1471675	Argument	utf_chars		1466025	1					
ANR	1471676	Identifier	utf_chars		1466025	0					
ANR	1471677	Argument	IN_UCHARS ( c & 7 )		1466025	2					
ANR	1471678	CallExpression	IN_UCHARS ( c & 7 )		1466025	0					
ANR	1471679	Callee	IN_UCHARS		1466025	0					
ANR	1471680	Identifier	IN_UCHARS		1466025	0					
ANR	1471681	ArgumentList	c & 7		1466025	1					
ANR	1471682	Argument	c & 7		1466025	0					
ANR	1471683	BitAndExpression	c & 7		1466025	0		&			
ANR	1471684	Identifier	c		1466025	0					
ANR	1471685	PrimaryExpression	7		1466025	1					
ANR	1471686	ExpressionStatement	code += c & 7	5869:8:188160:188173	1466025	1	True				
ANR	1471687	AssignmentExpression	code += c & 7		1466025	0		+=			
ANR	1471688	Identifier	code		1466025	0					
ANR	1471689	BitAndExpression	c & 7		1466025	1		&			
ANR	1471690	Identifier	c		1466025	0					
ANR	1471691	PrimaryExpression	7		1466025	1					
ANR	1471692	ElseStatement	else		1466025	0					
ANR	1471693	ExpressionStatement	* code ++ = c	5873:6:188209:188220	1466025	0	True				
ANR	1471694	AssignmentExpression	* code ++ = c		1466025	0		=			
ANR	1471695	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471696	UnaryOperator	*		1466025	0					
ANR	1471697	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471698	Identifier	code		1466025	0					
ANR	1471699	IncDec	++		1466025	1					
ANR	1471700	Identifier	c		1466025	1					
ANR	1471701	IfStatement	if ( prop_type >= 0 )		1466025	12					
ANR	1471702	Condition	prop_type >= 0	5879:10:188371:188384	1466025	0	True				
ANR	1471703	RelationalExpression	prop_type >= 0		1466025	0		>=			
ANR	1471704	Identifier	prop_type		1466025	0					
ANR	1471705	PrimaryExpression	0		1466025	1					
ANR	1471706	CompoundStatement		1441:8:49150:49150	1466025	1					
ANR	1471707	ExpressionStatement	* code ++ = prop_type	5881:8:188405:188424	1466025	0	True				
ANR	1471708	AssignmentExpression	* code ++ = prop_type		1466025	0		=			
ANR	1471709	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471710	UnaryOperator	*		1466025	0					
ANR	1471711	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471712	Identifier	code		1466025	0					
ANR	1471713	IncDec	++		1466025	1					
ANR	1471714	Identifier	prop_type		1466025	1					
ANR	1471715	ExpressionStatement	* code ++ = prop_value	5882:8:188434:188454	1466025	1	True				
ANR	1471716	AssignmentExpression	* code ++ = prop_value		1466025	0		=			
ANR	1471717	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471718	UnaryOperator	*		1466025	0					
ANR	1471719	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471720	Identifier	code		1466025	0					
ANR	1471721	IncDec	++		1466025	1					
ANR	1471722	Identifier	prop_value		1466025	1					
ANR	1471723	ElseStatement	else		1466025	0					
ANR	1471724	Statement	if	5890:9:188643:188644	1466025	0	True				
ANR	1471725	Statement	(	5890:12:188646:188646	1466025	89	True				
ANR	1471726	Statement	*	5890:13:188647:188647	1466025	90	True				
ANR	1471727	Statement	previous	5890:14:188648:188655	1466025	91	True				
ANR	1471728	Statement	==	5890:23:188657:188658	1466025	92	True				
ANR	1471729	Statement	OP_CLASS	5890:26:188660:188667	1466025	93	True				
ANR	1471730	Statement	||	5890:35:188669:188670	1466025	94	True				
ANR	1471731	Statement	*	5890:38:188672:188672	1466025	95	True				
ANR	1471732	Statement	previous	5890:39:188673:188680	1466025	96	True				
ANR	1471733	Statement	==	5890:48:188682:188683	1466025	97	True				
ANR	1471734	Statement	OP_NCLASS	5890:51:188685:188693	1466025	98	True				
ANR	1471735	Statement	||	5890:61:188695:188696	1466025	99	True				
ANR	1471736	Statement	*	5892:13:188761:188761	1466025	100	True				
ANR	1471737	Statement	previous	5892:14:188762:188769	1466025	101	True				
ANR	1471738	Statement	==	5892:23:188771:188772	1466025	102	True				
ANR	1471739	Statement	OP_XCLASS	5892:26:188774:188782	1466025	103	True				
ANR	1471740	Statement	||	5892:36:188784:188785	1466025	104	True				
ANR	1471741	Statement	*	5894:13:188807:188807	1466025	105	True				
ANR	1471742	Statement	previous	5894:14:188808:188815	1466025	106	True				
ANR	1471743	Statement	==	5894:23:188817:188818	1466025	107	True				
ANR	1471744	Statement	OP_REF	5894:26:188820:188825	1466025	108	True				
ANR	1471745	Statement	||	5894:35:188829:188830	1466025	109	True				
ANR	1471746	Statement	*	5894:38:188832:188832	1466025	110	True				
ANR	1471747	Statement	previous	5894:39:188833:188840	1466025	111	True				
ANR	1471748	Statement	==	5894:48:188842:188843	1466025	112	True				
ANR	1471749	Statement	OP_REFI	5894:51:188845:188851	1466025	113	True				
ANR	1471750	Statement	||	5894:59:188853:188854	1466025	114	True				
ANR	1471751	Statement	*	5895:13:188869:188869	1466025	115	True				
ANR	1471752	Statement	previous	5895:14:188870:188877	1466025	116	True				
ANR	1471753	Statement	==	5895:23:188879:188880	1466025	117	True				
ANR	1471754	Statement	OP_DNREF	5895:26:188882:188889	1466025	118	True				
ANR	1471755	Statement	||	5895:35:188891:188892	1466025	119	True				
ANR	1471756	Statement	*	5895:38:188894:188894	1466025	120	True				
ANR	1471757	Statement	previous	5895:39:188895:188902	1466025	121	True				
ANR	1471758	Statement	==	5895:48:188904:188905	1466025	122	True				
ANR	1471759	Statement	OP_DNREFI	5895:51:188907:188915	1466025	123	True				
ANR	1471760	Statement	)	5895:60:188916:188916	1466025	124	True				
ANR	1471761	CompoundStatement		1457:6:49679:49679	1466025	125					
ANR	1471762	IfStatement	if ( repeat_max == 0 )		1466025	0					
ANR	1471763	Condition	repeat_max == 0	5897:10:188936:188950	1466025	0	True				
ANR	1471764	EqualityExpression	repeat_max == 0		1466025	0		==			
ANR	1471765	Identifier	repeat_max		1466025	0					
ANR	1471766	PrimaryExpression	0		1466025	1					
ANR	1471767	CompoundStatement		1459:8:49716:49716	1466025	1					
ANR	1471768	ExpressionStatement	code = previous	5899:8:188971:188986	1466025	0	True				
ANR	1471769	AssignmentExpression	code = previous		1466025	0		=			
ANR	1471770	Identifier	code		1466025	0					
ANR	1471771	Identifier	previous		1466025	1					
ANR	1471772	GotoStatement	goto END_REPEAT ;	5900:8:188996:189011	1466025	1	True				
ANR	1471773	Identifier	END_REPEAT		1466025	0					
ANR	1471774	IfStatement	if ( repeat_min == 0 && repeat_max == - 1 )		1466025	1					
ANR	1471775	Condition	repeat_min == 0 && repeat_max == - 1	5903:10:189034:189068	1466025	0	True				
ANR	1471776	AndExpression	repeat_min == 0 && repeat_max == - 1		1466025	0		&&			
ANR	1471777	EqualityExpression	repeat_min == 0		1466025	0		==			
ANR	1471778	Identifier	repeat_min		1466025	0					
ANR	1471779	PrimaryExpression	0		1466025	1					
ANR	1471780	EqualityExpression	repeat_max == - 1		1466025	1		==			
ANR	1471781	Identifier	repeat_max		1466025	0					
ANR	1471782	UnaryOperationExpression	- 1		1466025	1					
ANR	1471783	UnaryOperator	-		1466025	0					
ANR	1471784	PrimaryExpression	1		1466025	1					
ANR	1471785	ExpressionStatement	* code ++ = OP_CRSTAR + repeat_type	5904:8:189079:189112	1466025	1	True				
ANR	1471786	AssignmentExpression	* code ++ = OP_CRSTAR + repeat_type		1466025	0		=			
ANR	1471787	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471788	UnaryOperator	*		1466025	0					
ANR	1471789	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471790	Identifier	code		1466025	0					
ANR	1471791	IncDec	++		1466025	1					
ANR	1471792	AdditiveExpression	OP_CRSTAR + repeat_type		1466025	1		+			
ANR	1471793	Identifier	OP_CRSTAR		1466025	0					
ANR	1471794	Identifier	repeat_type		1466025	1					
ANR	1471795	ElseStatement	else		1466025	0					
ANR	1471796	IfStatement	if ( repeat_min == 1 && repeat_max == - 1 )		1466025	0					
ANR	1471797	Condition	repeat_min == 1 && repeat_max == - 1	5905:15:189129:189163	1466025	0	True				
ANR	1471798	AndExpression	repeat_min == 1 && repeat_max == - 1		1466025	0		&&			
ANR	1471799	EqualityExpression	repeat_min == 1		1466025	0		==			
ANR	1471800	Identifier	repeat_min		1466025	0					
ANR	1471801	PrimaryExpression	1		1466025	1					
ANR	1471802	EqualityExpression	repeat_max == - 1		1466025	1		==			
ANR	1471803	Identifier	repeat_max		1466025	0					
ANR	1471804	UnaryOperationExpression	- 1		1466025	1					
ANR	1471805	UnaryOperator	-		1466025	0					
ANR	1471806	PrimaryExpression	1		1466025	1					
ANR	1471807	ExpressionStatement	* code ++ = OP_CRPLUS + repeat_type	5906:8:189174:189207	1466025	1	True				
ANR	1471808	AssignmentExpression	* code ++ = OP_CRPLUS + repeat_type		1466025	0		=			
ANR	1471809	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471810	UnaryOperator	*		1466025	0					
ANR	1471811	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471812	Identifier	code		1466025	0					
ANR	1471813	IncDec	++		1466025	1					
ANR	1471814	AdditiveExpression	OP_CRPLUS + repeat_type		1466025	1		+			
ANR	1471815	Identifier	OP_CRPLUS		1466025	0					
ANR	1471816	Identifier	repeat_type		1466025	1					
ANR	1471817	ElseStatement	else		1466025	0					
ANR	1471818	IfStatement	if ( repeat_min == 0 && repeat_max == 1 )		1466025	0					
ANR	1471819	Condition	repeat_min == 0 && repeat_max == 1	5907:15:189224:189257	1466025	0	True				
ANR	1471820	AndExpression	repeat_min == 0 && repeat_max == 1		1466025	0		&&			
ANR	1471821	EqualityExpression	repeat_min == 0		1466025	0		==			
ANR	1471822	Identifier	repeat_min		1466025	0					
ANR	1471823	PrimaryExpression	0		1466025	1					
ANR	1471824	EqualityExpression	repeat_max == 1		1466025	1		==			
ANR	1471825	Identifier	repeat_max		1466025	0					
ANR	1471826	PrimaryExpression	1		1466025	1					
ANR	1471827	ExpressionStatement	* code ++ = OP_CRQUERY + repeat_type	5908:8:189268:189302	1466025	1	True				
ANR	1471828	AssignmentExpression	* code ++ = OP_CRQUERY + repeat_type		1466025	0		=			
ANR	1471829	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471830	UnaryOperator	*		1466025	0					
ANR	1471831	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471832	Identifier	code		1466025	0					
ANR	1471833	IncDec	++		1466025	1					
ANR	1471834	AdditiveExpression	OP_CRQUERY + repeat_type		1466025	1		+			
ANR	1471835	Identifier	OP_CRQUERY		1466025	0					
ANR	1471836	Identifier	repeat_type		1466025	1					
ANR	1471837	ElseStatement	else		1466025	0					
ANR	1471838	CompoundStatement		1471:8:50078:50078	1466025	0					
ANR	1471839	ExpressionStatement	* code ++ = OP_CRRANGE + repeat_type	5911:8:189333:189367	1466025	0	True				
ANR	1471840	AssignmentExpression	* code ++ = OP_CRRANGE + repeat_type		1466025	0		=			
ANR	1471841	UnaryOperationExpression	* code ++		1466025	0					
ANR	1471842	UnaryOperator	*		1466025	0					
ANR	1471843	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1471844	Identifier	code		1466025	0					
ANR	1471845	IncDec	++		1466025	1					
ANR	1471846	AdditiveExpression	OP_CRRANGE + repeat_type		1466025	1		+			
ANR	1471847	Identifier	OP_CRRANGE		1466025	0					
ANR	1471848	Identifier	repeat_type		1466025	1					
ANR	1471849	ExpressionStatement	"PUT2INC ( code , 0 , repeat_min )"	5912:8:189377:189405	1466025	1	True				
ANR	1471850	CallExpression	"PUT2INC ( code , 0 , repeat_min )"		1466025	0					
ANR	1471851	Callee	PUT2INC		1466025	0					
ANR	1471852	Identifier	PUT2INC		1466025	0					
ANR	1471853	ArgumentList	code		1466025	1					
ANR	1471854	Argument	code		1466025	0					
ANR	1471855	Identifier	code		1466025	0					
ANR	1471856	Argument	0		1466025	1					
ANR	1471857	PrimaryExpression	0		1466025	0					
ANR	1471858	Argument	repeat_min		1466025	2					
ANR	1471859	Identifier	repeat_min		1466025	0					
ANR	1471860	IfStatement	if ( repeat_max == - 1 )		1466025	2					
ANR	1471861	Condition	repeat_max == - 1	5913:12:189419:189434	1466025	0	True				
ANR	1471862	EqualityExpression	repeat_max == - 1		1466025	0		==			
ANR	1471863	Identifier	repeat_max		1466025	0					
ANR	1471864	UnaryOperationExpression	- 1		1466025	1					
ANR	1471865	UnaryOperator	-		1466025	0					
ANR	1471866	PrimaryExpression	1		1466025	1					
ANR	1471867	ExpressionStatement	repeat_max = 0	5913:30:189437:189451	1466025	1	True				
ANR	1471868	AssignmentExpression	repeat_max = 0		1466025	0		=			
ANR	1471869	Identifier	repeat_max		1466025	0					
ANR	1471870	PrimaryExpression	0		1466025	1					
ANR	1471871	ExpressionStatement	"PUT2INC ( code , 0 , repeat_max )"	5914:8:189492:189520	1466025	3	True				
ANR	1471872	CallExpression	"PUT2INC ( code , 0 , repeat_max )"		1466025	0					
ANR	1471873	Callee	PUT2INC		1466025	0					
ANR	1471874	Identifier	PUT2INC		1466025	0					
ANR	1471875	ArgumentList	code		1466025	1					
ANR	1471876	Argument	code		1466025	0					
ANR	1471877	Identifier	code		1466025	0					
ANR	1471878	Argument	0		1466025	1					
ANR	1471879	PrimaryExpression	0		1466025	0					
ANR	1471880	Argument	repeat_max		1466025	2					
ANR	1471881	Identifier	repeat_max		1466025	0					
ANR	1471882	IfStatement	if ( possessive_quantifier )		1466025	126					
ANR	1471883	Condition	possessive_quantifier	6327:8:205828:205848	1466025	0	True				
ANR	1471884	Identifier	possessive_quantifier		1466025	0					
ANR	1471885	CompoundStatement		1890:6:66620:66627	1466025	1					
ANR	1471886	IdentifierDeclStatement	int len ;	6329:6:205865:205872	1466025	0	True				
ANR	1471887	IdentifierDecl	len		1466025	0					
ANR	1471888	IdentifierDeclType	int		1466025	0					
ANR	1471889	Identifier	len		1466025	1					
ANR	1471890	SwitchStatement	switch ( * tempcode )		1466025	1					
ANR	1471891	Condition	* tempcode	6337:13:206257:206265	1466025	0	True				
ANR	1471892	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1471893	UnaryOperator	*		1466025	0					
ANR	1471894	Identifier	tempcode		1466025	1					
ANR	1471895	CompoundStatement		1899:8:67031:67031	1466025	1					
ANR	1471896	Label	case OP_TYPEEXACT :	6339:8:206286:206303	1466025	0	True				
ANR	1471897	Identifier	OP_TYPEEXACT		1466025	0					
ANR	1471898	ExpressionStatement	tempcode += PRIV ( OP_lengths ) [ * tempcode ] + ( ( tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP ) ? 2 : 0 )	6340:8:206313:206461	1466025	1	True				
ANR	1471899	AssignmentExpression	tempcode += PRIV ( OP_lengths ) [ * tempcode ] + ( ( tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP ) ? 2 : 0 )		1466025	0		+=			
ANR	1471900	Identifier	tempcode		1466025	0					
ANR	1471901	AdditiveExpression	PRIV ( OP_lengths ) [ * tempcode ] + ( ( tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP ) ? 2 : 0 )		1466025	1		+			
ANR	1471902	ArrayIndexing	PRIV ( OP_lengths ) [ * tempcode ]		1466025	0					
ANR	1471903	CallExpression	PRIV ( OP_lengths )		1466025	0					
ANR	1471904	Callee	PRIV		1466025	0					
ANR	1471905	Identifier	PRIV		1466025	0					
ANR	1471906	ArgumentList	OP_lengths		1466025	1					
ANR	1471907	Argument	OP_lengths		1466025	0					
ANR	1471908	Identifier	OP_lengths		1466025	0					
ANR	1471909	UnaryOperationExpression	* tempcode		1466025	1					
ANR	1471910	UnaryOperator	*		1466025	0					
ANR	1471911	Identifier	tempcode		1466025	1					
ANR	1471912	ConditionalExpression	( tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP ) ? 2 : 0		1466025	1					
ANR	1471913	Condition	tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP		1466025	0					
ANR	1471914	OrExpression	tempcode [ 1 + IMM2_SIZE ] == OP_PROP || tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP		1466025	0		||			
ANR	1471915	EqualityExpression	tempcode [ 1 + IMM2_SIZE ] == OP_PROP		1466025	0		==			
ANR	1471916	ArrayIndexing	tempcode [ 1 + IMM2_SIZE ]		1466025	0					
ANR	1471917	Identifier	tempcode		1466025	0					
ANR	1471918	AdditiveExpression	1 + IMM2_SIZE		1466025	1		+			
ANR	1471919	PrimaryExpression	1		1466025	0					
ANR	1471920	Identifier	IMM2_SIZE		1466025	1					
ANR	1471921	Identifier	OP_PROP		1466025	1					
ANR	1471922	EqualityExpression	tempcode [ 1 + IMM2_SIZE ] == OP_NOTPROP		1466025	1		==			
ANR	1471923	ArrayIndexing	tempcode [ 1 + IMM2_SIZE ]		1466025	0					
ANR	1471924	Identifier	tempcode		1466025	0					
ANR	1471925	AdditiveExpression	1 + IMM2_SIZE		1466025	1		+			
ANR	1471926	PrimaryExpression	1		1466025	0					
ANR	1471927	Identifier	IMM2_SIZE		1466025	1					
ANR	1471928	Identifier	OP_NOTPROP		1466025	1					
ANR	1471929	PrimaryExpression	2		1466025	1					
ANR	1471930	PrimaryExpression	0		1466025	2					
ANR	1471931	BreakStatement	break ;	6343:8:206471:206476	1466025	2	True				
ANR	1471932	Label	case OP_CHAR :	6347:8:206553:206565	1466025	3	True				
ANR	1471933	Identifier	OP_CHAR		1466025	0					
ANR	1471934	Label	case OP_CHARI :	6348:8:206575:206588	1466025	4	True				
ANR	1471935	Identifier	OP_CHARI		1466025	0					
ANR	1471936	Label	case OP_NOT :	6349:8:206598:206609	1466025	5	True				
ANR	1471937	Identifier	OP_NOT		1466025	0					
ANR	1471938	Label	case OP_NOTI :	6350:8:206619:206631	1466025	6	True				
ANR	1471939	Identifier	OP_NOTI		1466025	0					
ANR	1471940	Label	case OP_EXACT :	6351:8:206641:206654	1466025	7	True				
ANR	1471941	Identifier	OP_EXACT		1466025	0					
ANR	1471942	Label	case OP_EXACTI :	6352:8:206664:206678	1466025	8	True				
ANR	1471943	Identifier	OP_EXACTI		1466025	0					
ANR	1471944	Label	case OP_NOTEXACT :	6353:8:206688:206704	1466025	9	True				
ANR	1471945	Identifier	OP_NOTEXACT		1466025	0					
ANR	1471946	Label	case OP_NOTEXACTI :	6354:8:206714:206731	1466025	10	True				
ANR	1471947	Identifier	OP_NOTEXACTI		1466025	0					
ANR	1471948	ExpressionStatement	tempcode += PRIV ( OP_lengths ) [ * tempcode ]	6355:8:206741:206780	1466025	11	True				
ANR	1471949	AssignmentExpression	tempcode += PRIV ( OP_lengths ) [ * tempcode ]		1466025	0		+=			
ANR	1471950	Identifier	tempcode		1466025	0					
ANR	1471951	ArrayIndexing	PRIV ( OP_lengths ) [ * tempcode ]		1466025	1					
ANR	1471952	CallExpression	PRIV ( OP_lengths )		1466025	0					
ANR	1471953	Callee	PRIV		1466025	0					
ANR	1471954	Identifier	PRIV		1466025	0					
ANR	1471955	ArgumentList	OP_lengths		1466025	1					
ANR	1471956	Argument	OP_lengths		1466025	0					
ANR	1471957	Identifier	OP_lengths		1466025	0					
ANR	1471958	UnaryOperationExpression	* tempcode		1466025	1					
ANR	1471959	UnaryOperator	*		1466025	0					
ANR	1471960	Identifier	tempcode		1466025	1					
ANR	1471961	IfStatement	if ( utf && HAS_EXTRALEN ( tempcode [ - 1 ] ) )		1466025	12					
ANR	1471962	Condition	utf && HAS_EXTRALEN ( tempcode [ - 1 ] )	6357:12:206813:206845	1466025	0	True				
ANR	1471963	AndExpression	utf && HAS_EXTRALEN ( tempcode [ - 1 ] )		1466025	0		&&			
ANR	1471964	Identifier	utf		1466025	0					
ANR	1471965	CallExpression	HAS_EXTRALEN ( tempcode [ - 1 ] )		1466025	1					
ANR	1471966	Callee	HAS_EXTRALEN		1466025	0					
ANR	1471967	Identifier	HAS_EXTRALEN		1466025	0					
ANR	1471968	ArgumentList	tempcode [ - 1 ]		1466025	1					
ANR	1471969	Argument	tempcode [ - 1 ]		1466025	0					
ANR	1471970	ArrayIndexing	tempcode [ - 1 ]		1466025	0					
ANR	1471971	Identifier	tempcode		1466025	0					
ANR	1471972	UnaryOperationExpression	- 1		1466025	1					
ANR	1471973	UnaryOperator	-		1466025	0					
ANR	1471974	PrimaryExpression	1		1466025	1					
ANR	1471975	ExpressionStatement	tempcode += GET_EXTRALEN ( tempcode [ - 1 ] )	6358:10:206858:206896	1466025	1	True				
ANR	1471976	AssignmentExpression	tempcode += GET_EXTRALEN ( tempcode [ - 1 ] )		1466025	0		+=			
ANR	1471977	Identifier	tempcode		1466025	0					
ANR	1471978	CallExpression	GET_EXTRALEN ( tempcode [ - 1 ] )		1466025	1					
ANR	1471979	Callee	GET_EXTRALEN		1466025	0					
ANR	1471980	Identifier	GET_EXTRALEN		1466025	0					
ANR	1471981	ArgumentList	tempcode [ - 1 ]		1466025	1					
ANR	1471982	Argument	tempcode [ - 1 ]		1466025	0					
ANR	1471983	ArrayIndexing	tempcode [ - 1 ]		1466025	0					
ANR	1471984	Identifier	tempcode		1466025	0					
ANR	1471985	UnaryOperationExpression	- 1		1466025	1					
ANR	1471986	UnaryOperator	-		1466025	0					
ANR	1471987	PrimaryExpression	1		1466025	1					
ANR	1471988	BreakStatement	break ;	6360:8:206913:206918	1466025	13	True				
ANR	1471989	Label	case OP_CLASS :	6365:8:207047:207060	1466025	14	True				
ANR	1471990	Identifier	OP_CLASS		1466025	0					
ANR	1471991	Label	case OP_NCLASS :	6366:8:207070:207084	1466025	15	True				
ANR	1471992	Identifier	OP_NCLASS		1466025	0					
ANR	1471993	ExpressionStatement	tempcode += 1 + 32 / sizeof ( pcre_uchar )	6367:8:207094:207131	1466025	16	True				
ANR	1471994	AssignmentExpression	tempcode += 1 + 32 / sizeof ( pcre_uchar )		1466025	0		+=			
ANR	1471995	Identifier	tempcode		1466025	0					
ANR	1471996	AdditiveExpression	1 + 32 / sizeof ( pcre_uchar )		1466025	1		+			
ANR	1471997	PrimaryExpression	1		1466025	0					
ANR	1471998	MultiplicativeExpression	32 / sizeof ( pcre_uchar )		1466025	1		/			
ANR	1471999	PrimaryExpression	32		1466025	0					
ANR	1472000	SizeofExpression	sizeof ( pcre_uchar )		1466025	1					
ANR	1472001	Sizeof	sizeof		1466025	0					
ANR	1472002	SizeofOperand	pcre_uchar		1466025	1					
ANR	1472003	BreakStatement	break ;	6368:8:207141:207146	1466025	17	True				
ANR	1472004	Label	case OP_XCLASS :	6371:8:207207:207221	1466025	18	True				
ANR	1472005	Identifier	OP_XCLASS		1466025	0					
ANR	1472006	ExpressionStatement	"tempcode += GET ( tempcode , 1 )"	6372:8:207231:207259	1466025	19	True				
ANR	1472007	AssignmentExpression	"tempcode += GET ( tempcode , 1 )"		1466025	0		+=			
ANR	1472008	Identifier	tempcode		1466025	0					
ANR	1472009	CallExpression	"GET ( tempcode , 1 )"		1466025	1					
ANR	1472010	Callee	GET		1466025	0					
ANR	1472011	Identifier	GET		1466025	0					
ANR	1472012	ArgumentList	tempcode		1466025	1					
ANR	1472013	Argument	tempcode		1466025	0					
ANR	1472014	Identifier	tempcode		1466025	0					
ANR	1472015	Argument	1		1466025	1					
ANR	1472016	PrimaryExpression	1		1466025	0					
ANR	1472017	BreakStatement	break ;	6373:8:207269:207274	1466025	20	True				
ANR	1472018	ExpressionStatement	len = ( int ) ( code - tempcode )	6383:6:207688:207716	1466025	2	True				
ANR	1472019	AssignmentExpression	len = ( int ) ( code - tempcode )		1466025	0		=			
ANR	1472020	Identifier	len		1466025	0					
ANR	1472021	CastExpression	( int ) ( code - tempcode )		1466025	1					
ANR	1472022	CastTarget	int		1466025	0					
ANR	1472023	AdditiveExpression	code - tempcode		1466025	1		-			
ANR	1472024	Identifier	code		1466025	0					
ANR	1472025	Identifier	tempcode		1466025	1					
ANR	1472026	IfStatement	if ( len > 0 )		1466025	3					
ANR	1472027	Condition	len > 0	6384:10:207728:207734	1466025	0	True				
ANR	1472028	RelationalExpression	len > 0		1466025	0		>			
ANR	1472029	Identifier	len		1466025	0					
ANR	1472030	PrimaryExpression	0		1466025	1					
ANR	1472031	CompoundStatement		1947:8:68510:68542	1466025	1					
ANR	1472032	IdentifierDeclStatement	unsigned int repcode = * tempcode ;	6386:8:207755:207787	1466025	0	True				
ANR	1472033	IdentifierDecl	repcode = * tempcode		1466025	0					
ANR	1472034	IdentifierDeclType	unsigned int		1466025	0					
ANR	1472035	Identifier	repcode		1466025	1					
ANR	1472036	AssignmentExpression	repcode = * tempcode		1466025	2		=			
ANR	1472037	Identifier	repcode		1466025	0					
ANR	1472038	UnaryOperationExpression	* tempcode		1466025	1					
ANR	1472039	UnaryOperator	*		1466025	0					
ANR	1472040	Identifier	tempcode		1466025	1					
ANR	1472041	IfStatement	if ( repcode < OP_CALLOUT && opcode_possessify [ repcode ] > 0 )		1466025	1					
ANR	1472042	Condition	repcode < OP_CALLOUT && opcode_possessify [ repcode ] > 0	6392:12:207969:208022	1466025	0	True				
ANR	1472043	AndExpression	repcode < OP_CALLOUT && opcode_possessify [ repcode ] > 0		1466025	0		&&			
ANR	1472044	RelationalExpression	repcode < OP_CALLOUT		1466025	0		<			
ANR	1472045	Identifier	repcode		1466025	0					
ANR	1472046	Identifier	OP_CALLOUT		1466025	1					
ANR	1472047	RelationalExpression	opcode_possessify [ repcode ] > 0		1466025	1		>			
ANR	1472048	ArrayIndexing	opcode_possessify [ repcode ]		1466025	0					
ANR	1472049	Identifier	opcode_possessify		1466025	0					
ANR	1472050	Identifier	repcode		1466025	1					
ANR	1472051	PrimaryExpression	0		1466025	1					
ANR	1472052	ExpressionStatement	* tempcode = opcode_possessify [ repcode ]	6393:10:208035:208073	1466025	1	True				
ANR	1472053	AssignmentExpression	* tempcode = opcode_possessify [ repcode ]		1466025	0		=			
ANR	1472054	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472055	UnaryOperator	*		1466025	0					
ANR	1472056	Identifier	tempcode		1466025	1					
ANR	1472057	ArrayIndexing	opcode_possessify [ repcode ]		1466025	1					
ANR	1472058	Identifier	opcode_possessify		1466025	0					
ANR	1472059	Identifier	repcode		1466025	1					
ANR	1472060	ElseStatement	else		1466025	0					
ANR	1472061	CompoundStatement		1961:10:69068:69068	1466025	0					
ANR	1472062	ExpressionStatement	* code = OP_END	6401:10:208325:208339	1466025	0	True				
ANR	1472063	AssignmentExpression	* code = OP_END		1466025	0		=			
ANR	1472064	UnaryOperationExpression	* code		1466025	0					
ANR	1472065	UnaryOperator	*		1466025	0					
ANR	1472066	Identifier	code		1466025	1					
ANR	1472067	Identifier	OP_END		1466025	1					
ANR	1472068	ExpressionStatement	"adjust_recurse ( tempcode , 1 + LINK_SIZE , utf , cd , save_hwm_offset )"	6402:10:208351:208416	1466025	1	True				
ANR	1472069	CallExpression	"adjust_recurse ( tempcode , 1 + LINK_SIZE , utf , cd , save_hwm_offset )"		1466025	0					
ANR	1472070	Callee	adjust_recurse		1466025	0					
ANR	1472071	Identifier	adjust_recurse		1466025	0					
ANR	1472072	ArgumentList	tempcode		1466025	1					
ANR	1472073	Argument	tempcode		1466025	0					
ANR	1472074	Identifier	tempcode		1466025	0					
ANR	1472075	Argument	1 + LINK_SIZE		1466025	1					
ANR	1472076	AdditiveExpression	1 + LINK_SIZE		1466025	0		+			
ANR	1472077	PrimaryExpression	1		1466025	0					
ANR	1472078	Identifier	LINK_SIZE		1466025	1					
ANR	1472079	Argument	utf		1466025	2					
ANR	1472080	Identifier	utf		1466025	0					
ANR	1472081	Argument	cd		1466025	3					
ANR	1472082	Identifier	cd		1466025	0					
ANR	1472083	Argument	save_hwm_offset		1466025	4					
ANR	1472084	Identifier	save_hwm_offset		1466025	0					
ANR	1472085	ExpressionStatement	"memmove ( tempcode + 1 + LINK_SIZE , tempcode , IN_UCHARS ( len ) )"	6403:10:208428:208487	1466025	2	True				
ANR	1472086	CallExpression	"memmove ( tempcode + 1 + LINK_SIZE , tempcode , IN_UCHARS ( len ) )"		1466025	0					
ANR	1472087	Callee	memmove		1466025	0					
ANR	1472088	Identifier	memmove		1466025	0					
ANR	1472089	ArgumentList	tempcode + 1 + LINK_SIZE		1466025	1					
ANR	1472090	Argument	tempcode + 1 + LINK_SIZE		1466025	0					
ANR	1472091	AdditiveExpression	tempcode + 1 + LINK_SIZE		1466025	0		+			
ANR	1472092	Identifier	tempcode		1466025	0					
ANR	1472093	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1472094	PrimaryExpression	1		1466025	0					
ANR	1472095	Identifier	LINK_SIZE		1466025	1					
ANR	1472096	Argument	tempcode		1466025	1					
ANR	1472097	Identifier	tempcode		1466025	0					
ANR	1472098	Argument	IN_UCHARS ( len )		1466025	2					
ANR	1472099	CallExpression	IN_UCHARS ( len )		1466025	0					
ANR	1472100	Callee	IN_UCHARS		1466025	0					
ANR	1472101	Identifier	IN_UCHARS		1466025	0					
ANR	1472102	ArgumentList	len		1466025	1					
ANR	1472103	Argument	len		1466025	0					
ANR	1472104	Identifier	len		1466025	0					
ANR	1472105	ExpressionStatement	code += 1 + LINK_SIZE	6404:10:208499:208520	1466025	3	True				
ANR	1472106	AssignmentExpression	code += 1 + LINK_SIZE		1466025	0		+=			
ANR	1472107	Identifier	code		1466025	0					
ANR	1472108	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1472109	PrimaryExpression	1		1466025	0					
ANR	1472110	Identifier	LINK_SIZE		1466025	1					
ANR	1472111	ExpressionStatement	len += 1 + LINK_SIZE	6405:10:208532:208552	1466025	4	True				
ANR	1472112	AssignmentExpression	len += 1 + LINK_SIZE		1466025	0		+=			
ANR	1472113	Identifier	len		1466025	0					
ANR	1472114	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1472115	PrimaryExpression	1		1466025	0					
ANR	1472116	Identifier	LINK_SIZE		1466025	1					
ANR	1472117	ExpressionStatement	tempcode [ 0 ] = OP_ONCE	6406:10:208564:208585	1466025	5	True				
ANR	1472118	AssignmentExpression	tempcode [ 0 ] = OP_ONCE		1466025	0		=			
ANR	1472119	ArrayIndexing	tempcode [ 0 ]		1466025	0					
ANR	1472120	Identifier	tempcode		1466025	0					
ANR	1472121	PrimaryExpression	0		1466025	1					
ANR	1472122	Identifier	OP_ONCE		1466025	1					
ANR	1472123	ExpressionStatement	* code ++ = OP_KET	6407:10:208597:208613	1466025	6	True				
ANR	1472124	AssignmentExpression	* code ++ = OP_KET		1466025	0		=			
ANR	1472125	UnaryOperationExpression	* code ++		1466025	0					
ANR	1472126	UnaryOperator	*		1466025	0					
ANR	1472127	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1472128	Identifier	code		1466025	0					
ANR	1472129	IncDec	++		1466025	1					
ANR	1472130	Identifier	OP_KET		1466025	1					
ANR	1472131	ExpressionStatement	"PUTINC ( code , 0 , len )"	6408:10:208625:208645	1466025	7	True				
ANR	1472132	CallExpression	"PUTINC ( code , 0 , len )"		1466025	0					
ANR	1472133	Callee	PUTINC		1466025	0					
ANR	1472134	Identifier	PUTINC		1466025	0					
ANR	1472135	ArgumentList	code		1466025	1					
ANR	1472136	Argument	code		1466025	0					
ANR	1472137	Identifier	code		1466025	0					
ANR	1472138	Argument	0		1466025	1					
ANR	1472139	PrimaryExpression	0		1466025	0					
ANR	1472140	Argument	len		1466025	2					
ANR	1472141	Identifier	len		1466025	0					
ANR	1472142	ExpressionStatement	"PUT ( tempcode , 1 , len )"	6409:10:208657:208678	1466025	8	True				
ANR	1472143	CallExpression	"PUT ( tempcode , 1 , len )"		1466025	0					
ANR	1472144	Callee	PUT		1466025	0					
ANR	1472145	Identifier	PUT		1466025	0					
ANR	1472146	ArgumentList	tempcode		1466025	1					
ANR	1472147	Argument	tempcode		1466025	0					
ANR	1472148	Identifier	tempcode		1466025	0					
ANR	1472149	Argument	1		1466025	1					
ANR	1472150	PrimaryExpression	1		1466025	0					
ANR	1472151	Argument	len		1466025	2					
ANR	1472152	Identifier	len		1466025	0					
ANR	1472153	IfStatement	if ( len > 0 )		1466025	4					
ANR	1472154	Condition	len > 0	6414:10:208726:208732	1466025	0	True				
ANR	1472155	RelationalExpression	len > 0		1466025	0		>			
ANR	1472156	Identifier	len		1466025	0					
ANR	1472157	PrimaryExpression	0		1466025	1					
ANR	1472158	SwitchStatement	switch ( * tempcode )		1466025	1					
ANR	1472159	Condition	* tempcode	6414:27:208743:208751	1466025	0	True				
ANR	1472160	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472161	UnaryOperator	*		1466025	0					
ANR	1472162	Identifier	tempcode		1466025	1					
ANR	1472163	CompoundStatement		1976:8:69517:69517	1466025	1					
ANR	1472164	Label	case OP_STAR :	6416:8:208772:208784	1466025	0	True				
ANR	1472165	Identifier	OP_STAR		1466025	0					
ANR	1472166	ExpressionStatement	* tempcode = OP_POSSTAR	6416:23:208787:208809	1466025	1	True				
ANR	1472167	AssignmentExpression	* tempcode = OP_POSSTAR		1466025	0		=			
ANR	1472168	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472169	UnaryOperator	*		1466025	0					
ANR	1472170	Identifier	tempcode		1466025	1					
ANR	1472171	Identifier	OP_POSSTAR		1466025	1					
ANR	1472172	BreakStatement	break ;	6416:47:208811:208816	1466025	2	True				
ANR	1472173	Label	case OP_PLUS :	6417:8:208826:208838	1466025	3	True				
ANR	1472174	Identifier	OP_PLUS		1466025	0					
ANR	1472175	ExpressionStatement	* tempcode = OP_POSPLUS	6417:23:208841:208863	1466025	4	True				
ANR	1472176	AssignmentExpression	* tempcode = OP_POSPLUS		1466025	0		=			
ANR	1472177	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472178	UnaryOperator	*		1466025	0					
ANR	1472179	Identifier	tempcode		1466025	1					
ANR	1472180	Identifier	OP_POSPLUS		1466025	1					
ANR	1472181	BreakStatement	break ;	6417:47:208865:208870	1466025	5	True				
ANR	1472182	Label	case OP_QUERY :	6418:8:208880:208893	1466025	6	True				
ANR	1472183	Identifier	OP_QUERY		1466025	0					
ANR	1472184	ExpressionStatement	* tempcode = OP_POSQUERY	6418:23:208895:208918	1466025	7	True				
ANR	1472185	AssignmentExpression	* tempcode = OP_POSQUERY		1466025	0		=			
ANR	1472186	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472187	UnaryOperator	*		1466025	0					
ANR	1472188	Identifier	tempcode		1466025	1					
ANR	1472189	Identifier	OP_POSQUERY		1466025	1					
ANR	1472190	BreakStatement	break ;	6418:48:208920:208925	1466025	8	True				
ANR	1472191	Label	case OP_UPTO :	6419:8:208935:208947	1466025	9	True				
ANR	1472192	Identifier	OP_UPTO		1466025	0					
ANR	1472193	ExpressionStatement	* tempcode = OP_POSUPTO	6419:23:208950:208972	1466025	10	True				
ANR	1472194	AssignmentExpression	* tempcode = OP_POSUPTO		1466025	0		=			
ANR	1472195	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472196	UnaryOperator	*		1466025	0					
ANR	1472197	Identifier	tempcode		1466025	1					
ANR	1472198	Identifier	OP_POSUPTO		1466025	1					
ANR	1472199	BreakStatement	break ;	6419:47:208974:208979	1466025	11	True				
ANR	1472200	Label	case OP_STARI :	6421:8:208990:209003	1466025	12	True				
ANR	1472201	Identifier	OP_STARI		1466025	0					
ANR	1472202	ExpressionStatement	* tempcode = OP_POSSTARI	6421:24:209006:209029	1466025	13	True				
ANR	1472203	AssignmentExpression	* tempcode = OP_POSSTARI		1466025	0		=			
ANR	1472204	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472205	UnaryOperator	*		1466025	0					
ANR	1472206	Identifier	tempcode		1466025	1					
ANR	1472207	Identifier	OP_POSSTARI		1466025	1					
ANR	1472208	BreakStatement	break ;	6421:49:209031:209036	1466025	14	True				
ANR	1472209	Label	case OP_PLUSI :	6422:8:209046:209059	1466025	15	True				
ANR	1472210	Identifier	OP_PLUSI		1466025	0					
ANR	1472211	ExpressionStatement	* tempcode = OP_POSPLUSI	6422:24:209062:209085	1466025	16	True				
ANR	1472212	AssignmentExpression	* tempcode = OP_POSPLUSI		1466025	0		=			
ANR	1472213	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472214	UnaryOperator	*		1466025	0					
ANR	1472215	Identifier	tempcode		1466025	1					
ANR	1472216	Identifier	OP_POSPLUSI		1466025	1					
ANR	1472217	BreakStatement	break ;	6422:49:209087:209092	1466025	17	True				
ANR	1472218	Label	case OP_QUERYI :	6423:8:209102:209116	1466025	18	True				
ANR	1472219	Identifier	OP_QUERYI		1466025	0					
ANR	1472220	ExpressionStatement	* tempcode = OP_POSQUERYI	6423:24:209118:209142	1466025	19	True				
ANR	1472221	AssignmentExpression	* tempcode = OP_POSQUERYI		1466025	0		=			
ANR	1472222	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472223	UnaryOperator	*		1466025	0					
ANR	1472224	Identifier	tempcode		1466025	1					
ANR	1472225	Identifier	OP_POSQUERYI		1466025	1					
ANR	1472226	BreakStatement	break ;	6423:50:209144:209149	1466025	20	True				
ANR	1472227	Label	case OP_UPTOI :	6424:8:209159:209172	1466025	21	True				
ANR	1472228	Identifier	OP_UPTOI		1466025	0					
ANR	1472229	ExpressionStatement	* tempcode = OP_POSUPTOI	6424:24:209175:209198	1466025	22	True				
ANR	1472230	AssignmentExpression	* tempcode = OP_POSUPTOI		1466025	0		=			
ANR	1472231	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472232	UnaryOperator	*		1466025	0					
ANR	1472233	Identifier	tempcode		1466025	1					
ANR	1472234	Identifier	OP_POSUPTOI		1466025	1					
ANR	1472235	BreakStatement	break ;	6424:49:209200:209205	1466025	23	True				
ANR	1472236	Label	case OP_NOTSTAR :	6426:8:209216:209231	1466025	24	True				
ANR	1472237	Identifier	OP_NOTSTAR		1466025	0					
ANR	1472238	ExpressionStatement	* tempcode = OP_NOTPOSSTAR	6426:26:209234:209259	1466025	25	True				
ANR	1472239	AssignmentExpression	* tempcode = OP_NOTPOSSTAR		1466025	0		=			
ANR	1472240	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472241	UnaryOperator	*		1466025	0					
ANR	1472242	Identifier	tempcode		1466025	1					
ANR	1472243	Identifier	OP_NOTPOSSTAR		1466025	1					
ANR	1472244	BreakStatement	break ;	6426:53:209261:209266	1466025	26	True				
ANR	1472245	Label	case OP_NOTPLUS :	6427:8:209276:209291	1466025	27	True				
ANR	1472246	Identifier	OP_NOTPLUS		1466025	0					
ANR	1472247	ExpressionStatement	* tempcode = OP_NOTPOSPLUS	6427:26:209294:209319	1466025	28	True				
ANR	1472248	AssignmentExpression	* tempcode = OP_NOTPOSPLUS		1466025	0		=			
ANR	1472249	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472250	UnaryOperator	*		1466025	0					
ANR	1472251	Identifier	tempcode		1466025	1					
ANR	1472252	Identifier	OP_NOTPOSPLUS		1466025	1					
ANR	1472253	BreakStatement	break ;	6427:53:209321:209326	1466025	29	True				
ANR	1472254	Label	case OP_NOTQUERY :	6428:8:209336:209352	1466025	30	True				
ANR	1472255	Identifier	OP_NOTQUERY		1466025	0					
ANR	1472256	ExpressionStatement	* tempcode = OP_NOTPOSQUERY	6428:26:209354:209380	1466025	31	True				
ANR	1472257	AssignmentExpression	* tempcode = OP_NOTPOSQUERY		1466025	0		=			
ANR	1472258	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472259	UnaryOperator	*		1466025	0					
ANR	1472260	Identifier	tempcode		1466025	1					
ANR	1472261	Identifier	OP_NOTPOSQUERY		1466025	1					
ANR	1472262	BreakStatement	break ;	6428:54:209382:209387	1466025	32	True				
ANR	1472263	Label	case OP_NOTUPTO :	6429:8:209397:209412	1466025	33	True				
ANR	1472264	Identifier	OP_NOTUPTO		1466025	0					
ANR	1472265	ExpressionStatement	* tempcode = OP_NOTPOSUPTO	6429:26:209415:209440	1466025	34	True				
ANR	1472266	AssignmentExpression	* tempcode = OP_NOTPOSUPTO		1466025	0		=			
ANR	1472267	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472268	UnaryOperator	*		1466025	0					
ANR	1472269	Identifier	tempcode		1466025	1					
ANR	1472270	Identifier	OP_NOTPOSUPTO		1466025	1					
ANR	1472271	BreakStatement	break ;	6429:53:209442:209447	1466025	35	True				
ANR	1472272	Label	case OP_NOTSTARI :	6431:8:209458:209474	1466025	36	True				
ANR	1472273	Identifier	OP_NOTSTARI		1466025	0					
ANR	1472274	ExpressionStatement	* tempcode = OP_NOTPOSSTARI	6431:27:209477:209503	1466025	37	True				
ANR	1472275	AssignmentExpression	* tempcode = OP_NOTPOSSTARI		1466025	0		=			
ANR	1472276	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472277	UnaryOperator	*		1466025	0					
ANR	1472278	Identifier	tempcode		1466025	1					
ANR	1472279	Identifier	OP_NOTPOSSTARI		1466025	1					
ANR	1472280	BreakStatement	break ;	6431:55:209505:209510	1466025	38	True				
ANR	1472281	Label	case OP_NOTPLUSI :	6432:8:209520:209536	1466025	39	True				
ANR	1472282	Identifier	OP_NOTPLUSI		1466025	0					
ANR	1472283	ExpressionStatement	* tempcode = OP_NOTPOSPLUSI	6432:27:209539:209565	1466025	40	True				
ANR	1472284	AssignmentExpression	* tempcode = OP_NOTPOSPLUSI		1466025	0		=			
ANR	1472285	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472286	UnaryOperator	*		1466025	0					
ANR	1472287	Identifier	tempcode		1466025	1					
ANR	1472288	Identifier	OP_NOTPOSPLUSI		1466025	1					
ANR	1472289	BreakStatement	break ;	6432:55:209567:209572	1466025	41	True				
ANR	1472290	Label	case OP_NOTQUERYI :	6433:8:209582:209599	1466025	42	True				
ANR	1472291	Identifier	OP_NOTQUERYI		1466025	0					
ANR	1472292	ExpressionStatement	* tempcode = OP_NOTPOSQUERYI	6433:27:209601:209628	1466025	43	True				
ANR	1472293	AssignmentExpression	* tempcode = OP_NOTPOSQUERYI		1466025	0		=			
ANR	1472294	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472295	UnaryOperator	*		1466025	0					
ANR	1472296	Identifier	tempcode		1466025	1					
ANR	1472297	Identifier	OP_NOTPOSQUERYI		1466025	1					
ANR	1472298	BreakStatement	break ;	6433:56:209630:209635	1466025	44	True				
ANR	1472299	Label	case OP_NOTUPTOI :	6434:8:209645:209661	1466025	45	True				
ANR	1472300	Identifier	OP_NOTUPTOI		1466025	0					
ANR	1472301	ExpressionStatement	* tempcode = OP_NOTPOSUPTOI	6434:27:209664:209690	1466025	46	True				
ANR	1472302	AssignmentExpression	* tempcode = OP_NOTPOSUPTOI		1466025	0		=			
ANR	1472303	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472304	UnaryOperator	*		1466025	0					
ANR	1472305	Identifier	tempcode		1466025	1					
ANR	1472306	Identifier	OP_NOTPOSUPTOI		1466025	1					
ANR	1472307	BreakStatement	break ;	6434:55:209692:209697	1466025	47	True				
ANR	1472308	Label	case OP_TYPESTAR :	6436:8:209708:209724	1466025	48	True				
ANR	1472309	Identifier	OP_TYPESTAR		1466025	0					
ANR	1472310	ExpressionStatement	* tempcode = OP_TYPEPOSSTAR	6436:27:209727:209753	1466025	49	True				
ANR	1472311	AssignmentExpression	* tempcode = OP_TYPEPOSSTAR		1466025	0		=			
ANR	1472312	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472313	UnaryOperator	*		1466025	0					
ANR	1472314	Identifier	tempcode		1466025	1					
ANR	1472315	Identifier	OP_TYPEPOSSTAR		1466025	1					
ANR	1472316	BreakStatement	break ;	6436:55:209755:209760	1466025	50	True				
ANR	1472317	Label	case OP_TYPEPLUS :	6437:8:209770:209786	1466025	51	True				
ANR	1472318	Identifier	OP_TYPEPLUS		1466025	0					
ANR	1472319	ExpressionStatement	* tempcode = OP_TYPEPOSPLUS	6437:27:209789:209815	1466025	52	True				
ANR	1472320	AssignmentExpression	* tempcode = OP_TYPEPOSPLUS		1466025	0		=			
ANR	1472321	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472322	UnaryOperator	*		1466025	0					
ANR	1472323	Identifier	tempcode		1466025	1					
ANR	1472324	Identifier	OP_TYPEPOSPLUS		1466025	1					
ANR	1472325	BreakStatement	break ;	6437:55:209817:209822	1466025	53	True				
ANR	1472326	Label	case OP_TYPEQUERY :	6438:8:209832:209849	1466025	54	True				
ANR	1472327	Identifier	OP_TYPEQUERY		1466025	0					
ANR	1472328	ExpressionStatement	* tempcode = OP_TYPEPOSQUERY	6438:27:209851:209878	1466025	55	True				
ANR	1472329	AssignmentExpression	* tempcode = OP_TYPEPOSQUERY		1466025	0		=			
ANR	1472330	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472331	UnaryOperator	*		1466025	0					
ANR	1472332	Identifier	tempcode		1466025	1					
ANR	1472333	Identifier	OP_TYPEPOSQUERY		1466025	1					
ANR	1472334	BreakStatement	break ;	6438:56:209880:209885	1466025	56	True				
ANR	1472335	Label	case OP_TYPEUPTO :	6439:8:209895:209911	1466025	57	True				
ANR	1472336	Identifier	OP_TYPEUPTO		1466025	0					
ANR	1472337	ExpressionStatement	* tempcode = OP_TYPEPOSUPTO	6439:27:209914:209940	1466025	58	True				
ANR	1472338	AssignmentExpression	* tempcode = OP_TYPEPOSUPTO		1466025	0		=			
ANR	1472339	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472340	UnaryOperator	*		1466025	0					
ANR	1472341	Identifier	tempcode		1466025	1					
ANR	1472342	Identifier	OP_TYPEPOSUPTO		1466025	1					
ANR	1472343	BreakStatement	break ;	6439:55:209942:209947	1466025	59	True				
ANR	1472344	Label	case OP_CRSTAR :	6441:8:209958:209972	1466025	60	True				
ANR	1472345	Identifier	OP_CRSTAR		1466025	0					
ANR	1472346	ExpressionStatement	* tempcode = OP_CRPOSSTAR	6441:26:209976:210000	1466025	61	True				
ANR	1472347	AssignmentExpression	* tempcode = OP_CRPOSSTAR		1466025	0		=			
ANR	1472348	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472349	UnaryOperator	*		1466025	0					
ANR	1472350	Identifier	tempcode		1466025	1					
ANR	1472351	Identifier	OP_CRPOSSTAR		1466025	1					
ANR	1472352	BreakStatement	break ;	6441:52:210002:210007	1466025	62	True				
ANR	1472353	Label	case OP_CRPLUS :	6442:8:210017:210031	1466025	63	True				
ANR	1472354	Identifier	OP_CRPLUS		1466025	0					
ANR	1472355	ExpressionStatement	* tempcode = OP_CRPOSPLUS	6442:26:210035:210059	1466025	64	True				
ANR	1472356	AssignmentExpression	* tempcode = OP_CRPOSPLUS		1466025	0		=			
ANR	1472357	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472358	UnaryOperator	*		1466025	0					
ANR	1472359	Identifier	tempcode		1466025	1					
ANR	1472360	Identifier	OP_CRPOSPLUS		1466025	1					
ANR	1472361	BreakStatement	break ;	6442:52:210061:210066	1466025	65	True				
ANR	1472362	Label	case OP_CRQUERY :	6443:8:210076:210091	1466025	66	True				
ANR	1472363	Identifier	OP_CRQUERY		1466025	0					
ANR	1472364	ExpressionStatement	* tempcode = OP_CRPOSQUERY	6443:26:210094:210119	1466025	67	True				
ANR	1472365	AssignmentExpression	* tempcode = OP_CRPOSQUERY		1466025	0		=			
ANR	1472366	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472367	UnaryOperator	*		1466025	0					
ANR	1472368	Identifier	tempcode		1466025	1					
ANR	1472369	Identifier	OP_CRPOSQUERY		1466025	1					
ANR	1472370	BreakStatement	break ;	6443:53:210121:210126	1466025	68	True				
ANR	1472371	Label	case OP_CRRANGE :	6444:8:210136:210151	1466025	69	True				
ANR	1472372	Identifier	OP_CRRANGE		1466025	0					
ANR	1472373	ExpressionStatement	* tempcode = OP_CRPOSRANGE	6444:26:210154:210179	1466025	70	True				
ANR	1472374	AssignmentExpression	* tempcode = OP_CRPOSRANGE		1466025	0		=			
ANR	1472375	UnaryOperationExpression	* tempcode		1466025	0					
ANR	1472376	UnaryOperator	*		1466025	0					
ANR	1472377	Identifier	tempcode		1466025	1					
ANR	1472378	Identifier	OP_CRPOSRANGE		1466025	1					
ANR	1472379	BreakStatement	break ;	6444:53:210181:210186	1466025	71	True				
ANR	1472380	Label	default :	6449:8:210320:210327	1466025	72	True				
ANR	1472381	Identifier	default		1466025	0					
ANR	1472382	ExpressionStatement	* code = OP_END	6450:8:210337:210351	1466025	73	True				
ANR	1472383	AssignmentExpression	* code = OP_END		1466025	0		=			
ANR	1472384	UnaryOperationExpression	* code		1466025	0					
ANR	1472385	UnaryOperator	*		1466025	0					
ANR	1472386	Identifier	code		1466025	1					
ANR	1472387	Identifier	OP_END		1466025	1					
ANR	1472388	ExpressionStatement	"adjust_recurse ( tempcode , 1 + LINK_SIZE , utf , cd , save_hwm_offset )"	6451:8:210361:210426	1466025	74	True				
ANR	1472389	CallExpression	"adjust_recurse ( tempcode , 1 + LINK_SIZE , utf , cd , save_hwm_offset )"		1466025	0					
ANR	1472390	Callee	adjust_recurse		1466025	0					
ANR	1472391	Identifier	adjust_recurse		1466025	0					
ANR	1472392	ArgumentList	tempcode		1466025	1					
ANR	1472393	Argument	tempcode		1466025	0					
ANR	1472394	Identifier	tempcode		1466025	0					
ANR	1472395	Argument	1 + LINK_SIZE		1466025	1					
ANR	1472396	AdditiveExpression	1 + LINK_SIZE		1466025	0		+			
ANR	1472397	PrimaryExpression	1		1466025	0					
ANR	1472398	Identifier	LINK_SIZE		1466025	1					
ANR	1472399	Argument	utf		1466025	2					
ANR	1472400	Identifier	utf		1466025	0					
ANR	1472401	Argument	cd		1466025	3					
ANR	1472402	Identifier	cd		1466025	0					
ANR	1472403	Argument	save_hwm_offset		1466025	4					
ANR	1472404	Identifier	save_hwm_offset		1466025	0					
ANR	1472405	ExpressionStatement	"memmove ( tempcode + 1 + LINK_SIZE , tempcode , IN_UCHARS ( len ) )"	6452:8:210436:210495	1466025	75	True				
ANR	1472406	CallExpression	"memmove ( tempcode + 1 + LINK_SIZE , tempcode , IN_UCHARS ( len ) )"		1466025	0					
ANR	1472407	Callee	memmove		1466025	0					
ANR	1472408	Identifier	memmove		1466025	0					
ANR	1472409	ArgumentList	tempcode + 1 + LINK_SIZE		1466025	1					
ANR	1472410	Argument	tempcode + 1 + LINK_SIZE		1466025	0					
ANR	1472411	AdditiveExpression	tempcode + 1 + LINK_SIZE		1466025	0		+			
ANR	1472412	Identifier	tempcode		1466025	0					
ANR	1472413	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1472414	PrimaryExpression	1		1466025	0					
ANR	1472415	Identifier	LINK_SIZE		1466025	1					
ANR	1472416	Argument	tempcode		1466025	1					
ANR	1472417	Identifier	tempcode		1466025	0					
ANR	1472418	Argument	IN_UCHARS ( len )		1466025	2					
ANR	1472419	CallExpression	IN_UCHARS ( len )		1466025	0					
ANR	1472420	Callee	IN_UCHARS		1466025	0					
ANR	1472421	Identifier	IN_UCHARS		1466025	0					
ANR	1472422	ArgumentList	len		1466025	1					
ANR	1472423	Argument	len		1466025	0					
ANR	1472424	Identifier	len		1466025	0					
ANR	1472425	ExpressionStatement	code += 1 + LINK_SIZE	6453:8:210505:210526	1466025	76	True				
ANR	1472426	AssignmentExpression	code += 1 + LINK_SIZE		1466025	0		+=			
ANR	1472427	Identifier	code		1466025	0					
ANR	1472428	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1472429	PrimaryExpression	1		1466025	0					
ANR	1472430	Identifier	LINK_SIZE		1466025	1					
ANR	1472431	ExpressionStatement	len += 1 + LINK_SIZE	6454:8:210536:210556	1466025	77	True				
ANR	1472432	AssignmentExpression	len += 1 + LINK_SIZE		1466025	0		+=			
ANR	1472433	Identifier	len		1466025	0					
ANR	1472434	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1472435	PrimaryExpression	1		1466025	0					
ANR	1472436	Identifier	LINK_SIZE		1466025	1					
ANR	1472437	ExpressionStatement	tempcode [ 0 ] = OP_ONCE	6455:8:210566:210587	1466025	78	True				
ANR	1472438	AssignmentExpression	tempcode [ 0 ] = OP_ONCE		1466025	0		=			
ANR	1472439	ArrayIndexing	tempcode [ 0 ]		1466025	0					
ANR	1472440	Identifier	tempcode		1466025	0					
ANR	1472441	PrimaryExpression	0		1466025	1					
ANR	1472442	Identifier	OP_ONCE		1466025	1					
ANR	1472443	ExpressionStatement	* code ++ = OP_KET	6456:8:210597:210613	1466025	79	True				
ANR	1472444	AssignmentExpression	* code ++ = OP_KET		1466025	0		=			
ANR	1472445	UnaryOperationExpression	* code ++		1466025	0					
ANR	1472446	UnaryOperator	*		1466025	0					
ANR	1472447	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1472448	Identifier	code		1466025	0					
ANR	1472449	IncDec	++		1466025	1					
ANR	1472450	Identifier	OP_KET		1466025	1					
ANR	1472451	ExpressionStatement	"PUTINC ( code , 0 , len )"	6457:8:210623:210643	1466025	80	True				
ANR	1472452	CallExpression	"PUTINC ( code , 0 , len )"		1466025	0					
ANR	1472453	Callee	PUTINC		1466025	0					
ANR	1472454	Identifier	PUTINC		1466025	0					
ANR	1472455	ArgumentList	code		1466025	1					
ANR	1472456	Argument	code		1466025	0					
ANR	1472457	Identifier	code		1466025	0					
ANR	1472458	Argument	0		1466025	1					
ANR	1472459	PrimaryExpression	0		1466025	0					
ANR	1472460	Argument	len		1466025	2					
ANR	1472461	Identifier	len		1466025	0					
ANR	1472462	ExpressionStatement	"PUT ( tempcode , 1 , len )"	6458:8:210653:210674	1466025	81	True				
ANR	1472463	CallExpression	"PUT ( tempcode , 1 , len )"		1466025	0					
ANR	1472464	Callee	PUT		1466025	0					
ANR	1472465	Identifier	PUT		1466025	0					
ANR	1472466	ArgumentList	tempcode		1466025	1					
ANR	1472467	Argument	tempcode		1466025	0					
ANR	1472468	Identifier	tempcode		1466025	0					
ANR	1472469	Argument	1		1466025	1					
ANR	1472470	PrimaryExpression	1		1466025	0					
ANR	1472471	Argument	len		1466025	2					
ANR	1472472	Identifier	len		1466025	0					
ANR	1472473	BreakStatement	break ;	6459:8:210684:210689	1466025	82	True				
ANR	1472474	Label	END_REPEAT :	6468:4:210942:210952	1466025	127	True				
ANR	1472475	Identifier	END_REPEAT		1466025	0					
ANR	1472476	ExpressionStatement	previous = NULL	6469:4:210958:210973	1466025	128	True				
ANR	1472477	AssignmentExpression	previous = NULL		1466025	0		=			
ANR	1472478	Identifier	previous		1466025	0					
ANR	1472479	Identifier	NULL		1466025	1					
ANR	1472480	ExpressionStatement	cd -> req_varyopt |= reqvary	6470:4:210979:211005	1466025	129	True				
ANR	1472481	AssignmentExpression	cd -> req_varyopt |= reqvary		1466025	0		|=			
ANR	1472482	PtrMemberAccess	cd -> req_varyopt		1466025	0					
ANR	1472483	Identifier	cd		1466025	0					
ANR	1472484	Identifier	req_varyopt		1466025	1					
ANR	1472485	Identifier	reqvary		1466025	1					
ANR	1472486	BreakStatement	break ;	6471:4:211011:211016	1466025	130	True				
ANR	1472487	Label	case CHAR_LEFT_PARENTHESIS :	6479:4:211281:211307	1466025	131	True				
ANR	1472488	Identifier	CHAR_LEFT_PARENTHESIS		1466025	0					
ANR	1472489	ExpressionStatement	ptr ++	6480:4:211313:211318	1466025	132	True				
ANR	1472490	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1472491	Identifier	ptr		1466025	0					
ANR	1472492	IncDec	++		1466025	1					
ANR	1472493	IfStatement	if ( ptr [ 0 ] == CHAR_QUESTION_MARK && ptr [ 1 ] == CHAR_NUMBER_SIGN )		1466025	133					
ANR	1472494	Condition	ptr [ 0 ] == CHAR_QUESTION_MARK && ptr [ 1 ] == CHAR_NUMBER_SIGN	6485:8:211455:211512	1466025	0	True				
ANR	1472495	AndExpression	ptr [ 0 ] == CHAR_QUESTION_MARK && ptr [ 1 ] == CHAR_NUMBER_SIGN		1466025	0		&&			
ANR	1472496	EqualityExpression	ptr [ 0 ] == CHAR_QUESTION_MARK		1466025	0		==			
ANR	1472497	ArrayIndexing	ptr [ 0 ]		1466025	0					
ANR	1472498	Identifier	ptr		1466025	0					
ANR	1472499	PrimaryExpression	0		1466025	1					
ANR	1472500	Identifier	CHAR_QUESTION_MARK		1466025	1					
ANR	1472501	EqualityExpression	ptr [ 1 ] == CHAR_NUMBER_SIGN		1466025	1		==			
ANR	1472502	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1472503	Identifier	ptr		1466025	0					
ANR	1472504	PrimaryExpression	1		1466025	1					
ANR	1472505	Identifier	CHAR_NUMBER_SIGN		1466025	1					
ANR	1472506	CompoundStatement		2047:6:72276:72276	1466025	1					
ANR	1472507	ExpressionStatement	ptr += 2	6487:6:211529:211537	1466025	0	True				
ANR	1472508	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1472509	Identifier	ptr		1466025	0					
ANR	1472510	PrimaryExpression	2		1466025	1					
ANR	1472511	WhileStatement	while ( * ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS )		1466025	1					
ANR	1472512	Condition	* ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS	6488:13:211552:211602	1466025	0	True				
ANR	1472513	AndExpression	* ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS		1466025	0		&&			
ANR	1472514	EqualityExpression	* ptr != CHAR_NULL		1466025	0		!=			
ANR	1472515	UnaryOperationExpression	* ptr		1466025	0					
ANR	1472516	UnaryOperator	*		1466025	0					
ANR	1472517	Identifier	ptr		1466025	1					
ANR	1472518	Identifier	CHAR_NULL		1466025	1					
ANR	1472519	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		1466025	1		!=			
ANR	1472520	UnaryOperationExpression	* ptr		1466025	0					
ANR	1472521	UnaryOperator	*		1466025	0					
ANR	1472522	Identifier	ptr		1466025	1					
ANR	1472523	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1472524	ExpressionStatement	ptr ++	6488:66:211605:211610	1466025	1	True				
ANR	1472525	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1472526	Identifier	ptr		1466025	0					
ANR	1472527	IncDec	++		1466025	1					
ANR	1472528	IfStatement	if ( * ptr == CHAR_NULL )		1466025	2					
ANR	1472529	Condition	* ptr == CHAR_NULL	6489:10:211622:211638	1466025	0	True				
ANR	1472530	EqualityExpression	* ptr == CHAR_NULL		1466025	0		==			
ANR	1472531	UnaryOperationExpression	* ptr		1466025	0					
ANR	1472532	UnaryOperator	*		1466025	0					
ANR	1472533	Identifier	ptr		1466025	1					
ANR	1472534	Identifier	CHAR_NULL		1466025	1					
ANR	1472535	CompoundStatement		2051:8:72404:72404	1466025	1					
ANR	1472536	ExpressionStatement	* errorcodeptr = ERR18	6491:8:211659:211680	1466025	0	True				
ANR	1472537	AssignmentExpression	* errorcodeptr = ERR18		1466025	0		=			
ANR	1472538	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1472539	UnaryOperator	*		1466025	0					
ANR	1472540	Identifier	errorcodeptr		1466025	1					
ANR	1472541	Identifier	ERR18		1466025	1					
ANR	1472542	GotoStatement	goto FAILED ;	6492:8:211690:211701	1466025	1	True				
ANR	1472543	Identifier	FAILED		1466025	0					
ANR	1472544	ContinueStatement	continue ;	6494:6:211719:211727	1466025	3	True				
ANR	1472545	IfStatement	if ( ptr [ 0 ] == CHAR_ASTERISK && ( ptr [ 1 ] == ':' || ( MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 ) ) ) )		1466025	134					
ANR	1472546	Condition	ptr [ 0 ] == CHAR_ASTERISK && ( ptr [ 1 ] == ':' || ( MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 ) ) )	6499:8:211818:211935	1466025	0	True				
ANR	1472547	AndExpression	ptr [ 0 ] == CHAR_ASTERISK && ( ptr [ 1 ] == ':' || ( MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 ) ) )		1466025	0		&&			
ANR	1472548	EqualityExpression	ptr [ 0 ] == CHAR_ASTERISK		1466025	0		==			
ANR	1472549	ArrayIndexing	ptr [ 0 ]		1466025	0					
ANR	1472550	Identifier	ptr		1466025	0					
ANR	1472551	PrimaryExpression	0		1466025	1					
ANR	1472552	Identifier	CHAR_ASTERISK		1466025	1					
ANR	1472553	OrExpression	ptr [ 1 ] == ':' || ( MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 ) )		1466025	1		||			
ANR	1472554	EqualityExpression	ptr [ 1 ] == ':'		1466025	0		==			
ANR	1472555	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1472556	Identifier	ptr		1466025	0					
ANR	1472557	PrimaryExpression	1		1466025	1					
ANR	1472558	PrimaryExpression	':'		1466025	1					
ANR	1472559	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( ( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0 )		1466025	1		&&			
ANR	1472560	CallExpression	MAX_255 ( ptr [ 1 ] )		1466025	0					
ANR	1472561	Callee	MAX_255		1466025	0					
ANR	1472562	Identifier	MAX_255		1466025	0					
ANR	1472563	ArgumentList	ptr [ 1 ]		1466025	1					
ANR	1472564	Argument	ptr [ 1 ]		1466025	0					
ANR	1472565	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1472566	Identifier	ptr		1466025	0					
ANR	1472567	PrimaryExpression	1		1466025	1					
ANR	1472568	EqualityExpression	( cd -> ctypes [ ptr [ 1 ] ] & ctype_letter ) != 0		1466025	1		!=			
ANR	1472569	BitAndExpression	cd -> ctypes [ ptr [ 1 ] ] & ctype_letter		1466025	0		&			
ANR	1472570	ArrayIndexing	cd -> ctypes [ ptr [ 1 ] ]		1466025	0					
ANR	1472571	PtrMemberAccess	cd -> ctypes		1466025	0					
ANR	1472572	Identifier	cd		1466025	0					
ANR	1472573	Identifier	ctypes		1466025	1					
ANR	1472574	ArrayIndexing	ptr [ 1 ]		1466025	1					
ANR	1472575	Identifier	ptr		1466025	0					
ANR	1472576	PrimaryExpression	1		1466025	1					
ANR	1472577	Identifier	ctype_letter		1466025	1					
ANR	1472578	PrimaryExpression	0		1466025	1					
ANR	1472579	CompoundStatement		2067:6:72825:72853	1466025	1					
ANR	1472580	IdentifierDeclStatement	"int i , namelen ;"	6502:6:211952:211966	1466025	0	True				
ANR	1472581	IdentifierDecl	i		1466025	0					
ANR	1472582	IdentifierDeclType	int		1466025	0					
ANR	1472583	Identifier	i		1466025	1					
ANR	1472584	IdentifierDecl	namelen		1466025	1					
ANR	1472585	IdentifierDeclType	int		1466025	0					
ANR	1472586	Identifier	namelen		1466025	1					
ANR	1472587	IdentifierDeclStatement	int arglen = 0 ;	6503:6:211974:211988	1466025	1	True				
ANR	1472588	IdentifierDecl	arglen = 0		1466025	0					
ANR	1472589	IdentifierDeclType	int		1466025	0					
ANR	1472590	Identifier	arglen		1466025	1					
ANR	1472591	AssignmentExpression	arglen = 0		1466025	2		=			
ANR	1472592	Identifier	arglen		1466025	0					
ANR	1472593	PrimaryExpression	0		1466025	1					
ANR	1472594	IdentifierDeclStatement	const char * vn = verbnames ;	6504:6:211996:212022	1466025	2	True				
ANR	1472595	IdentifierDecl	* vn = verbnames		1466025	0					
ANR	1472596	IdentifierDeclType	const char *		1466025	0					
ANR	1472597	Identifier	vn		1466025	1					
ANR	1472598	AssignmentExpression	* vn = verbnames		1466025	2		=			
ANR	1472599	Identifier	verbnames		1466025	0					
ANR	1472600	Identifier	verbnames		1466025	1					
ANR	1472601	IdentifierDeclStatement	const pcre_uchar * name = ptr + 1 ;	6505:6:212030:212062	1466025	3	True				
ANR	1472602	IdentifierDecl	* name = ptr + 1		1466025	0					
ANR	1472603	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1472604	Identifier	name		1466025	1					
ANR	1472605	AssignmentExpression	* name = ptr + 1		1466025	2		=			
ANR	1472606	Identifier	name		1466025	0					
ANR	1472607	AdditiveExpression	ptr + 1		1466025	1		+			
ANR	1472608	Identifier	ptr		1466025	0					
ANR	1472609	PrimaryExpression	1		1466025	1					
ANR	1472610	IdentifierDeclStatement	const pcre_uchar * arg = NULL ;	6506:6:212070:212098	1466025	4	True				
ANR	1472611	IdentifierDecl	* arg = NULL		1466025	0					
ANR	1472612	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1472613	Identifier	arg		1466025	1					
ANR	1472614	AssignmentExpression	* arg = NULL		1466025	2		=			
ANR	1472615	Identifier	NULL		1466025	0					
ANR	1472616	Identifier	NULL		1466025	1					
ANR	1472617	ExpressionStatement	previous = NULL	6507:6:212106:212121	1466025	5	True				
ANR	1472618	AssignmentExpression	previous = NULL		1466025	0		=			
ANR	1472619	Identifier	previous		1466025	0					
ANR	1472620	Identifier	NULL		1466025	1					
ANR	1472621	ExpressionStatement	ptr ++	6508:6:212129:212134	1466025	6	True				
ANR	1472622	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1472623	Identifier	ptr		1466025	0					
ANR	1472624	IncDec	++		1466025	1					
ANR	1472625	WhileStatement	while ( MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_letter ) != 0 )		1466025	7					
ANR	1472626	Condition	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_letter ) != 0	6509:13:212149:212203	1466025	0	True				
ANR	1472627	AndExpression	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_letter ) != 0		1466025	0		&&			
ANR	1472628	CallExpression	MAX_255 ( * ptr )		1466025	0					
ANR	1472629	Callee	MAX_255		1466025	0					
ANR	1472630	Identifier	MAX_255		1466025	0					
ANR	1472631	ArgumentList	* ptr		1466025	1					
ANR	1472632	Argument	* ptr		1466025	0					
ANR	1472633	UnaryOperationExpression	* ptr		1466025	0					
ANR	1472634	UnaryOperator	*		1466025	0					
ANR	1472635	Identifier	ptr		1466025	1					
ANR	1472636	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_letter ) != 0		1466025	1		!=			
ANR	1472637	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_letter		1466025	0		&			
ANR	1472638	ArrayIndexing	cd -> ctypes [ * ptr ]		1466025	0					
ANR	1472639	PtrMemberAccess	cd -> ctypes		1466025	0					
ANR	1472640	Identifier	cd		1466025	0					
ANR	1472641	Identifier	ctypes		1466025	1					
ANR	1472642	UnaryOperationExpression	* ptr		1466025	1					
ANR	1472643	UnaryOperator	*		1466025	0					
ANR	1472644	Identifier	ptr		1466025	1					
ANR	1472645	Identifier	ctype_letter		1466025	1					
ANR	1472646	PrimaryExpression	0		1466025	1					
ANR	1472647	ExpressionStatement	ptr ++	6509:70:212206:212211	1466025	1	True				
ANR	1472648	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1472649	Identifier	ptr		1466025	0					
ANR	1472650	IncDec	++		1466025	1					
ANR	1472651	ExpressionStatement	namelen = ( int ) ( ptr - name )	6510:6:212219:212246	1466025	8	True				
ANR	1472652	AssignmentExpression	namelen = ( int ) ( ptr - name )		1466025	0		=			
ANR	1472653	Identifier	namelen		1466025	0					
ANR	1472654	CastExpression	( int ) ( ptr - name )		1466025	1					
ANR	1472655	CastTarget	int		1466025	0					
ANR	1472656	AdditiveExpression	ptr - name		1466025	1		-			
ANR	1472657	Identifier	ptr		1466025	0					
ANR	1472658	Identifier	name		1466025	1					
ANR	1472659	IfStatement	if ( * ptr == CHAR_COLON )		1466025	9					
ANR	1472660	Condition	* ptr == CHAR_COLON	6516:10:212457:212474	1466025	0	True				
ANR	1472661	EqualityExpression	* ptr == CHAR_COLON		1466025	0		==			
ANR	1472662	UnaryOperationExpression	* ptr		1466025	0					
ANR	1472663	UnaryOperator	*		1466025	0					
ANR	1472664	Identifier	ptr		1466025	1					
ANR	1472665	Identifier	CHAR_COLON		1466025	1					
ANR	1472666	CompoundStatement		2078:8:73240:73240	1466025	1					
ANR	1472667	ExpressionStatement	arg = ++ ptr	6518:8:212495:212506	1466025	0	True				
ANR	1472668	AssignmentExpression	arg = ++ ptr		1466025	0		=			
ANR	1472669	Identifier	arg		1466025	0					
ANR	1472670	UnaryExpression	++ ptr		1466025	1					
ANR	1472671	IncDec	++		1466025	0					
ANR	1472672	Identifier	ptr		1466025	1					
ANR	1472673	WhileStatement	while ( * ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS )		1466025	1					
ANR	1472674	Condition	* ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS	6519:15:212523:212573	1466025	0	True				
ANR	1472675	AndExpression	* ptr != CHAR_NULL && * ptr != CHAR_RIGHT_PARENTHESIS		1466025	0		&&			
ANR	1472676	EqualityExpression	* ptr != CHAR_NULL		1466025	0		!=			
ANR	1472677	UnaryOperationExpression	* ptr		1466025	0					
ANR	1472678	UnaryOperator	*		1466025	0					
ANR	1472679	Identifier	ptr		1466025	1					
ANR	1472680	Identifier	CHAR_NULL		1466025	1					
ANR	1472681	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		1466025	1		!=			
ANR	1472682	UnaryOperationExpression	* ptr		1466025	0					
ANR	1472683	UnaryOperator	*		1466025	0					
ANR	1472684	Identifier	ptr		1466025	1					
ANR	1472685	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1472686	ExpressionStatement	ptr ++	6519:68:212576:212581	1466025	1	True				
ANR	1472687	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1472688	Identifier	ptr		1466025	0					
ANR	1472689	IncDec	++		1466025	1					
ANR	1472690	ExpressionStatement	arglen = ( int ) ( ptr - arg )	6520:8:212591:212616	1466025	2	True				
ANR	1472691	AssignmentExpression	arglen = ( int ) ( ptr - arg )		1466025	0		=			
ANR	1472692	Identifier	arglen		1466025	0					
ANR	1472693	CastExpression	( int ) ( ptr - arg )		1466025	1					
ANR	1472694	CastTarget	int		1466025	0					
ANR	1472695	AdditiveExpression	ptr - arg		1466025	1		-			
ANR	1472696	Identifier	ptr		1466025	0					
ANR	1472697	Identifier	arg		1466025	1					
ANR	1472698	IfStatement	if ( ( unsigned int ) arglen > MAX_MARK )		1466025	3					
ANR	1472699	Condition	( unsigned int ) arglen > MAX_MARK	6521:12:212630:212660	1466025	0	True				
ANR	1472700	RelationalExpression	( unsigned int ) arglen > MAX_MARK		1466025	0		>			
ANR	1472701	CastExpression	( unsigned int ) arglen		1466025	0					
ANR	1472702	CastTarget	unsigned int		1466025	0					
ANR	1472703	Identifier	arglen		1466025	1					
ANR	1472704	Identifier	MAX_MARK		1466025	1					
ANR	1472705	CompoundStatement		2083:10:73428:73428	1466025	1					
ANR	1472706	ExpressionStatement	* errorcodeptr = ERR75	6523:10:212685:212706	1466025	0	True				
ANR	1472707	AssignmentExpression	* errorcodeptr = ERR75		1466025	0		=			
ANR	1472708	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1472709	UnaryOperator	*		1466025	0					
ANR	1472710	Identifier	errorcodeptr		1466025	1					
ANR	1472711	Identifier	ERR75		1466025	1					
ANR	1472712	GotoStatement	goto FAILED ;	6524:10:212718:212729	1466025	1	True				
ANR	1472713	Identifier	FAILED		1466025	0					
ANR	1472714	IfStatement	if ( * ptr != CHAR_RIGHT_PARENTHESIS )		1466025	10					
ANR	1472715	Condition	* ptr != CHAR_RIGHT_PARENTHESIS	6528:10:212764:212793	1466025	0	True				
ANR	1472716	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		1466025	0		!=			
ANR	1472717	UnaryOperationExpression	* ptr		1466025	0					
ANR	1472718	UnaryOperator	*		1466025	0					
ANR	1472719	Identifier	ptr		1466025	1					
ANR	1472720	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1472721	CompoundStatement		2090:8:73559:73559	1466025	1					
ANR	1472722	ExpressionStatement	* errorcodeptr = ERR60	6530:8:212814:212835	1466025	0	True				
ANR	1472723	AssignmentExpression	* errorcodeptr = ERR60		1466025	0		=			
ANR	1472724	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1472725	UnaryOperator	*		1466025	0					
ANR	1472726	Identifier	errorcodeptr		1466025	1					
ANR	1472727	Identifier	ERR60		1466025	1					
ANR	1472728	GotoStatement	goto FAILED ;	6531:8:212845:212856	1466025	1	True				
ANR	1472729	Identifier	FAILED		1466025	0					
ANR	1472730	ForStatement	for ( i = 0 ; i < verbcount ; i ++ )		1466025	11					
ANR	1472731	ForInit	i = 0 ;	6536:11:212922:212927	1466025	0	True				
ANR	1472732	AssignmentExpression	i = 0		1466025	0		=			
ANR	1472733	Identifier	i		1466025	0					
ANR	1472734	PrimaryExpression	0		1466025	1					
ANR	1472735	Condition	i < verbcount	6536:18:212929:212941	1466025	1	True				
ANR	1472736	RelationalExpression	i < verbcount		1466025	0		<			
ANR	1472737	Identifier	i		1466025	0					
ANR	1472738	Identifier	verbcount		1466025	1					
ANR	1472739	PostIncDecOperationExpression	i ++	6536:33:212944:212946	1466025	2	True				
ANR	1472740	Identifier	i		1466025	0					
ANR	1472741	IncDec	++		1466025	1					
ANR	1472742	CompoundStatement		2098:8:73712:73712	1466025	3					
ANR	1472743	IfStatement	"if ( namelen == verbs [ i ] . len && STRNCMP_UC_C8 ( name , vn , namelen ) == 0 )"		1466025	0					
ANR	1472744	Condition	"namelen == verbs [ i ] . len && STRNCMP_UC_C8 ( name , vn , namelen ) == 0"	6538:12:212971:213046	1466025	0	True				
ANR	1472745	AndExpression	"namelen == verbs [ i ] . len && STRNCMP_UC_C8 ( name , vn , namelen ) == 0"		1466025	0		&&			
ANR	1472746	EqualityExpression	namelen == verbs [ i ] . len		1466025	0		==			
ANR	1472747	Identifier	namelen		1466025	0					
ANR	1472748	MemberAccess	verbs [ i ] . len		1466025	1					
ANR	1472749	ArrayIndexing	verbs [ i ]		1466025	0					
ANR	1472750	Identifier	verbs		1466025	0					
ANR	1472751	Identifier	i		1466025	1					
ANR	1472752	Identifier	len		1466025	1					
ANR	1472753	EqualityExpression	"STRNCMP_UC_C8 ( name , vn , namelen ) == 0"		1466025	1		==			
ANR	1472754	CallExpression	"STRNCMP_UC_C8 ( name , vn , namelen )"		1466025	0					
ANR	1472755	Callee	STRNCMP_UC_C8		1466025	0					
ANR	1472756	Identifier	STRNCMP_UC_C8		1466025	0					
ANR	1472757	ArgumentList	name		1466025	1					
ANR	1472758	Argument	name		1466025	0					
ANR	1472759	Identifier	name		1466025	0					
ANR	1472760	Argument	vn		1466025	1					
ANR	1472761	Identifier	vn		1466025	0					
ANR	1472762	Argument	namelen		1466025	2					
ANR	1472763	Identifier	namelen		1466025	0					
ANR	1472764	PrimaryExpression	0		1466025	1					
ANR	1472765	CompoundStatement		2102:10:73826:73837	1466025	1					
ANR	1472766	IdentifierDeclStatement	int setverb ;	6541:10:213071:213082	1466025	0	True				
ANR	1472767	IdentifierDecl	setverb		1466025	0					
ANR	1472768	IdentifierDeclType	int		1466025	0					
ANR	1472769	Identifier	setverb		1466025	1					
ANR	1472770	IfStatement	if ( verbs [ i ] . op == OP_ACCEPT )		1466025	1					
ANR	1472771	Condition	verbs [ i ] . op == OP_ACCEPT	6546:14:213216:213239	1466025	0	True				
ANR	1472772	EqualityExpression	verbs [ i ] . op == OP_ACCEPT		1466025	0		==			
ANR	1472773	MemberAccess	verbs [ i ] . op		1466025	0					
ANR	1472774	ArrayIndexing	verbs [ i ]		1466025	0					
ANR	1472775	Identifier	verbs		1466025	0					
ANR	1472776	Identifier	i		1466025	1					
ANR	1472777	Identifier	op		1466025	1					
ANR	1472778	Identifier	OP_ACCEPT		1466025	1					
ANR	1472779	CompoundStatement		2109:12:74023:74039	1466025	1					
ANR	1472780	IdentifierDeclStatement	open_capitem * oc ;	6548:12:213268:213284	1466025	0	True				
ANR	1472781	IdentifierDecl	* oc		1466025	0					
ANR	1472782	IdentifierDeclType	open_capitem *		1466025	0					
ANR	1472783	Identifier	oc		1466025	1					
ANR	1472784	IfStatement	if ( arglen != 0 )		1466025	1					
ANR	1472785	Condition	arglen != 0	6549:16:213302:213312	1466025	0	True				
ANR	1472786	EqualityExpression	arglen != 0		1466025	0		!=			
ANR	1472787	Identifier	arglen		1466025	0					
ANR	1472788	PrimaryExpression	0		1466025	1					
ANR	1472789	CompoundStatement		2111:14:74084:74084	1466025	1					
ANR	1472790	ExpressionStatement	* errorcodeptr = ERR59	6551:14:213345:213366	1466025	0	True				
ANR	1472791	AssignmentExpression	* errorcodeptr = ERR59		1466025	0		=			
ANR	1472792	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1472793	UnaryOperator	*		1466025	0					
ANR	1472794	Identifier	errorcodeptr		1466025	1					
ANR	1472795	Identifier	ERR59		1466025	1					
ANR	1472796	GotoStatement	goto FAILED ;	6552:14:213382:213393	1466025	1	True				
ANR	1472797	Identifier	FAILED		1466025	0					
ANR	1472798	ExpressionStatement	cd -> had_accept = TRUE	6554:12:213423:213444	1466025	2	True				
ANR	1472799	AssignmentExpression	cd -> had_accept = TRUE		1466025	0		=			
ANR	1472800	PtrMemberAccess	cd -> had_accept		1466025	0					
ANR	1472801	Identifier	cd		1466025	0					
ANR	1472802	Identifier	had_accept		1466025	1					
ANR	1472803	Identifier	TRUE		1466025	1					
ANR	1472804	ForStatement	for ( oc = cd -> open_caps ; oc != NULL ; oc = oc -> next )		1466025	3					
ANR	1472805	ForInit	oc = cd -> open_caps ;	6555:17:213463:213481	1466025	0	True				
ANR	1472806	AssignmentExpression	oc = cd -> open_caps		1466025	0		=			
ANR	1472807	Identifier	oc		1466025	0					
ANR	1472808	PtrMemberAccess	cd -> open_caps		1466025	1					
ANR	1472809	Identifier	cd		1466025	0					
ANR	1472810	Identifier	open_caps		1466025	1					
ANR	1472811	Condition	oc != NULL	6555:37:213483:213492	1466025	1	True				
ANR	1472812	EqualityExpression	oc != NULL		1466025	0		!=			
ANR	1472813	Identifier	oc		1466025	0					
ANR	1472814	Identifier	NULL		1466025	1					
ANR	1472815	AssignmentExpression	oc = oc -> next	6555:49:213495:213507	1466025	2	True	=			
ANR	1472816	Identifier	oc		1466025	0					
ANR	1472817	PtrMemberAccess	oc -> next		1466025	1					
ANR	1472818	Identifier	oc		1466025	0					
ANR	1472819	Identifier	next		1466025	1					
ANR	1472820	CompoundStatement		2117:14:74279:74279	1466025	3					
ANR	1472821	ExpressionStatement	* code ++ = OP_CLOSE	6557:14:213540:213558	1466025	0	True				
ANR	1472822	AssignmentExpression	* code ++ = OP_CLOSE		1466025	0		=			
ANR	1472823	UnaryOperationExpression	* code ++		1466025	0					
ANR	1472824	UnaryOperator	*		1466025	0					
ANR	1472825	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1472826	Identifier	code		1466025	0					
ANR	1472827	IncDec	++		1466025	1					
ANR	1472828	Identifier	OP_CLOSE		1466025	1					
ANR	1472829	ExpressionStatement	"PUT2INC ( code , 0 , oc -> number )"	6558:14:213574:213602	1466025	1	True				
ANR	1472830	CallExpression	"PUT2INC ( code , 0 , oc -> number )"		1466025	0					
ANR	1472831	Callee	PUT2INC		1466025	0					
ANR	1472832	Identifier	PUT2INC		1466025	0					
ANR	1472833	ArgumentList	code		1466025	1					
ANR	1472834	Argument	code		1466025	0					
ANR	1472835	Identifier	code		1466025	0					
ANR	1472836	Argument	0		1466025	1					
ANR	1472837	PrimaryExpression	0		1466025	0					
ANR	1472838	Argument	oc -> number		1466025	2					
ANR	1472839	PtrMemberAccess	oc -> number		1466025	0					
ANR	1472840	Identifier	oc		1466025	0					
ANR	1472841	Identifier	number		1466025	1					
ANR	1472842	ExpressionStatement	setverb = * code ++ = ( cd -> assert_depth > 0 ) ? OP_ASSERT_ACCEPT : OP_ACCEPT	6560:12:213632:213718	1466025	4	True				
ANR	1472843	AssignmentExpression	setverb = * code ++ = ( cd -> assert_depth > 0 ) ? OP_ASSERT_ACCEPT : OP_ACCEPT		1466025	0		=			
ANR	1472844	Identifier	setverb		1466025	0					
ANR	1472845	AssignmentExpression	* code ++ = ( cd -> assert_depth > 0 ) ? OP_ASSERT_ACCEPT : OP_ACCEPT		1466025	1		=			
ANR	1472846	UnaryOperationExpression	* code ++		1466025	0					
ANR	1472847	UnaryOperator	*		1466025	0					
ANR	1472848	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1472849	Identifier	code		1466025	0					
ANR	1472850	IncDec	++		1466025	1					
ANR	1472851	ConditionalExpression	( cd -> assert_depth > 0 ) ? OP_ASSERT_ACCEPT : OP_ACCEPT		1466025	1					
ANR	1472852	Condition	cd -> assert_depth > 0		1466025	0					
ANR	1472853	RelationalExpression	cd -> assert_depth > 0		1466025	0		>			
ANR	1472854	PtrMemberAccess	cd -> assert_depth		1466025	0					
ANR	1472855	Identifier	cd		1466025	0					
ANR	1472856	Identifier	assert_depth		1466025	1					
ANR	1472857	PrimaryExpression	0		1466025	1					
ANR	1472858	Identifier	OP_ASSERT_ACCEPT		1466025	1					
ANR	1472859	Identifier	OP_ACCEPT		1466025	2					
ANR	1472860	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	5					
ANR	1472861	Condition	firstcharflags == REQ_UNSET	6564:16:213790:213816	1466025	0	True				
ANR	1472862	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1472863	Identifier	firstcharflags		1466025	0					
ANR	1472864	Identifier	REQ_UNSET		1466025	1					
ANR	1472865	ExpressionStatement	firstcharflags = REQ_NONE	6564:45:213819:213844	1466025	1	True				
ANR	1472866	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1472867	Identifier	firstcharflags		1466025	0					
ANR	1472868	Identifier	REQ_NONE		1466025	1					
ANR	1472869	ElseStatement	else		1466025	0					
ANR	1472870	IfStatement	if ( arglen == 0 )		1466025	0					
ANR	1472871	Condition	arglen == 0	6569:19:213941:213951	1466025	0	True				
ANR	1472872	EqualityExpression	arglen == 0		1466025	0		==			
ANR	1472873	Identifier	arglen		1466025	0					
ANR	1472874	PrimaryExpression	0		1466025	1					
ANR	1472875	CompoundStatement		2131:12:74721:74721	1466025	1					
ANR	1472876	IfStatement	if ( verbs [ i ] . op < 0 )		1466025	0					
ANR	1472877	Condition	verbs [ i ] . op < 0	6571:16:213984:213998	1466025	0	True				
ANR	1472878	RelationalExpression	verbs [ i ] . op < 0		1466025	0		<			
ANR	1472879	MemberAccess	verbs [ i ] . op		1466025	0					
ANR	1472880	ArrayIndexing	verbs [ i ]		1466025	0					
ANR	1472881	Identifier	verbs		1466025	0					
ANR	1472882	Identifier	i		1466025	1					
ANR	1472883	Identifier	op		1466025	1					
ANR	1472884	PrimaryExpression	0		1466025	1					
ANR	1472885	CompoundStatement		2133:14:74800:74800	1466025	1					
ANR	1472886	ExpressionStatement	* errorcodeptr = ERR66	6573:14:214061:214082	1466025	0	True				
ANR	1472887	AssignmentExpression	* errorcodeptr = ERR66		1466025	0		=			
ANR	1472888	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1472889	UnaryOperator	*		1466025	0					
ANR	1472890	Identifier	errorcodeptr		1466025	1					
ANR	1472891	Identifier	ERR66		1466025	1					
ANR	1472892	GotoStatement	goto FAILED ;	6574:14:214098:214109	1466025	1	True				
ANR	1472893	Identifier	FAILED		1466025	0					
ANR	1472894	ExpressionStatement	setverb = * code ++ = verbs [ i ] . op	6576:12:214139:214170	1466025	1	True				
ANR	1472895	AssignmentExpression	setverb = * code ++ = verbs [ i ] . op		1466025	0		=			
ANR	1472896	Identifier	setverb		1466025	0					
ANR	1472897	AssignmentExpression	* code ++ = verbs [ i ] . op		1466025	1		=			
ANR	1472898	UnaryOperationExpression	* code ++		1466025	0					
ANR	1472899	UnaryOperator	*		1466025	0					
ANR	1472900	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1472901	Identifier	code		1466025	0					
ANR	1472902	IncDec	++		1466025	1					
ANR	1472903	MemberAccess	verbs [ i ] . op		1466025	1					
ANR	1472904	ArrayIndexing	verbs [ i ]		1466025	0					
ANR	1472905	Identifier	verbs		1466025	0					
ANR	1472906	Identifier	i		1466025	1					
ANR	1472907	Identifier	op		1466025	1					
ANR	1472908	ElseStatement	else		1466025	0					
ANR	1472909	CompoundStatement		2141:12:74969:74969	1466025	0					
ANR	1472910	IfStatement	if ( verbs [ i ] . op_arg < 0 )		1466025	0					
ANR	1472911	Condition	verbs [ i ] . op_arg < 0	6581:16:214232:214250	1466025	0	True				
ANR	1472912	RelationalExpression	verbs [ i ] . op_arg < 0		1466025	0		<			
ANR	1472913	MemberAccess	verbs [ i ] . op_arg		1466025	0					
ANR	1472914	ArrayIndexing	verbs [ i ]		1466025	0					
ANR	1472915	Identifier	verbs		1466025	0					
ANR	1472916	Identifier	i		1466025	1					
ANR	1472917	Identifier	op_arg		1466025	1					
ANR	1472918	PrimaryExpression	0		1466025	1					
ANR	1472919	CompoundStatement		2143:14:75052:75052	1466025	1					
ANR	1472920	ExpressionStatement	* errorcodeptr = ERR59	6583:14:214313:214334	1466025	0	True				
ANR	1472921	AssignmentExpression	* errorcodeptr = ERR59		1466025	0		=			
ANR	1472922	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1472923	UnaryOperator	*		1466025	0					
ANR	1472924	Identifier	errorcodeptr		1466025	1					
ANR	1472925	Identifier	ERR59		1466025	1					
ANR	1472926	GotoStatement	goto FAILED ;	6584:14:214350:214361	1466025	1	True				
ANR	1472927	Identifier	FAILED		1466025	0					
ANR	1472928	ExpressionStatement	setverb = * code ++ = verbs [ i ] . op_arg	6586:12:214391:214426	1466025	1	True				
ANR	1472929	AssignmentExpression	setverb = * code ++ = verbs [ i ] . op_arg		1466025	0		=			
ANR	1472930	Identifier	setverb		1466025	0					
ANR	1472931	AssignmentExpression	* code ++ = verbs [ i ] . op_arg		1466025	1		=			
ANR	1472932	UnaryOperationExpression	* code ++		1466025	0					
ANR	1472933	UnaryOperator	*		1466025	0					
ANR	1472934	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1472935	Identifier	code		1466025	0					
ANR	1472936	IncDec	++		1466025	1					
ANR	1472937	MemberAccess	verbs [ i ] . op_arg		1466025	1					
ANR	1472938	ArrayIndexing	verbs [ i ]		1466025	0					
ANR	1472939	Identifier	verbs		1466025	0					
ANR	1472940	Identifier	i		1466025	1					
ANR	1472941	Identifier	op_arg		1466025	1					
ANR	1472942	ExpressionStatement	* code ++ = arglen	6587:12:214440:214456	1466025	2	True				
ANR	1472943	AssignmentExpression	* code ++ = arglen		1466025	0		=			
ANR	1472944	UnaryOperationExpression	* code ++		1466025	0					
ANR	1472945	UnaryOperator	*		1466025	0					
ANR	1472946	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1472947	Identifier	code		1466025	0					
ANR	1472948	IncDec	++		1466025	1					
ANR	1472949	Identifier	arglen		1466025	1					
ANR	1472950	ExpressionStatement	"memcpy ( code , arg , IN_UCHARS ( arglen ) )"	6588:12:214470:214506	1466025	3	True				
ANR	1472951	CallExpression	"memcpy ( code , arg , IN_UCHARS ( arglen ) )"		1466025	0					
ANR	1472952	Callee	memcpy		1466025	0					
ANR	1472953	Identifier	memcpy		1466025	0					
ANR	1472954	ArgumentList	code		1466025	1					
ANR	1472955	Argument	code		1466025	0					
ANR	1472956	Identifier	code		1466025	0					
ANR	1472957	Argument	arg		1466025	1					
ANR	1472958	Identifier	arg		1466025	0					
ANR	1472959	Argument	IN_UCHARS ( arglen )		1466025	2					
ANR	1472960	CallExpression	IN_UCHARS ( arglen )		1466025	0					
ANR	1472961	Callee	IN_UCHARS		1466025	0					
ANR	1472962	Identifier	IN_UCHARS		1466025	0					
ANR	1472963	ArgumentList	arglen		1466025	1					
ANR	1472964	Argument	arglen		1466025	0					
ANR	1472965	Identifier	arglen		1466025	0					
ANR	1472966	ExpressionStatement	code += arglen	6589:12:214520:214534	1466025	4	True				
ANR	1472967	AssignmentExpression	code += arglen		1466025	0		+=			
ANR	1472968	Identifier	code		1466025	0					
ANR	1472969	Identifier	arglen		1466025	1					
ANR	1472970	ExpressionStatement	* code ++ = 0	6590:12:214548:214559	1466025	5	True				
ANR	1472971	AssignmentExpression	* code ++ = 0		1466025	0		=			
ANR	1472972	UnaryOperationExpression	* code ++		1466025	0					
ANR	1472973	UnaryOperator	*		1466025	0					
ANR	1472974	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1472975	Identifier	code		1466025	0					
ANR	1472976	IncDec	++		1466025	1					
ANR	1472977	PrimaryExpression	0		1466025	1					
ANR	1472978	SwitchStatement	switch ( setverb )		1466025	2					
ANR	1472979	Condition	setverb	6593:18:214594:214600	1466025	0	True				
ANR	1472980	Identifier	setverb		1466025	0					
ANR	1472981	CompoundStatement		2155:12:75370:75370	1466025	1					
ANR	1472982	Label	case OP_THEN :	6595:12:214629:214641	1466025	0	True				
ANR	1472983	Identifier	OP_THEN		1466025	0					
ANR	1472984	Label	case OP_THEN_ARG :	6596:12:214655:214671	1466025	1	True				
ANR	1472985	Identifier	OP_THEN_ARG		1466025	0					
ANR	1472986	ExpressionStatement	cd -> external_flags |= PCRE_HASTHEN	6597:12:214685:214719	1466025	2	True				
ANR	1472987	AssignmentExpression	cd -> external_flags |= PCRE_HASTHEN		1466025	0		|=			
ANR	1472988	PtrMemberAccess	cd -> external_flags		1466025	0					
ANR	1472989	Identifier	cd		1466025	0					
ANR	1472990	Identifier	external_flags		1466025	1					
ANR	1472991	Identifier	PCRE_HASTHEN		1466025	1					
ANR	1472992	BreakStatement	break ;	6598:12:214733:214738	1466025	3	True				
ANR	1472993	Label	case OP_PRUNE :	6600:12:214753:214766	1466025	4	True				
ANR	1472994	Identifier	OP_PRUNE		1466025	0					
ANR	1472995	Label	case OP_PRUNE_ARG :	6601:12:214780:214797	1466025	5	True				
ANR	1472996	Identifier	OP_PRUNE_ARG		1466025	0					
ANR	1472997	Label	case OP_SKIP :	6602:12:214811:214823	1466025	6	True				
ANR	1472998	Identifier	OP_SKIP		1466025	0					
ANR	1472999	Label	case OP_SKIP_ARG :	6603:12:214837:214853	1466025	7	True				
ANR	1473000	Identifier	OP_SKIP_ARG		1466025	0					
ANR	1473001	ExpressionStatement	cd -> had_pruneorskip = TRUE	6604:12:214867:214893	1466025	8	True				
ANR	1473002	AssignmentExpression	cd -> had_pruneorskip = TRUE		1466025	0		=			
ANR	1473003	PtrMemberAccess	cd -> had_pruneorskip		1466025	0					
ANR	1473004	Identifier	cd		1466025	0					
ANR	1473005	Identifier	had_pruneorskip		1466025	1					
ANR	1473006	Identifier	TRUE		1466025	1					
ANR	1473007	BreakStatement	break ;	6605:12:214907:214912	1466025	9	True				
ANR	1473008	BreakStatement	break ;	6608:10:214939:214944	1466025	3	True				
ANR	1473009	ExpressionStatement	vn += verbs [ i ] . len + 1	6611:8:214996:215018	1466025	1	True				
ANR	1473010	AssignmentExpression	vn += verbs [ i ] . len + 1		1466025	0		+=			
ANR	1473011	Identifier	vn		1466025	0					
ANR	1473012	AdditiveExpression	verbs [ i ] . len + 1		1466025	1		+			
ANR	1473013	MemberAccess	verbs [ i ] . len		1466025	0					
ANR	1473014	ArrayIndexing	verbs [ i ]		1466025	0					
ANR	1473015	Identifier	verbs		1466025	0					
ANR	1473016	Identifier	i		1466025	1					
ANR	1473017	Identifier	len		1466025	1					
ANR	1473018	PrimaryExpression	1		1466025	1					
ANR	1473019	IfStatement	if ( i < verbcount )		1466025	12					
ANR	1473020	Condition	i < verbcount	6614:10:215041:215053	1466025	0	True				
ANR	1473021	RelationalExpression	i < verbcount		1466025	0		<			
ANR	1473022	Identifier	i		1466025	0					
ANR	1473023	Identifier	verbcount		1466025	1					
ANR	1473024	ContinueStatement	continue ;	6614:25:215056:215064	1466025	1	True				
ANR	1473025	ExpressionStatement	* errorcodeptr = ERR60	6615:6:215109:215130	1466025	13	True				
ANR	1473026	AssignmentExpression	* errorcodeptr = ERR60		1466025	0		=			
ANR	1473027	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1473028	UnaryOperator	*		1466025	0					
ANR	1473029	Identifier	errorcodeptr		1466025	1					
ANR	1473030	Identifier	ERR60		1466025	1					
ANR	1473031	GotoStatement	goto FAILED ;	6616:6:215173:215184	1466025	14	True				
ANR	1473032	Identifier	FAILED		1466025	0					
ANR	1473033	ExpressionStatement	newoptions = options	6621:4:215244:215264	1466025	135	True				
ANR	1473034	AssignmentExpression	newoptions = options		1466025	0		=			
ANR	1473035	Identifier	newoptions		1466025	0					
ANR	1473036	Identifier	options		1466025	1					
ANR	1473037	ExpressionStatement	skipbytes = 0	6622:4:215270:215283	1466025	136	True				
ANR	1473038	AssignmentExpression	skipbytes = 0		1466025	0		=			
ANR	1473039	Identifier	skipbytes		1466025	0					
ANR	1473040	PrimaryExpression	0		1466025	1					
ANR	1473041	ExpressionStatement	bravalue = OP_CBRA	6623:4:215289:215307	1466025	137	True				
ANR	1473042	AssignmentExpression	bravalue = OP_CBRA		1466025	0		=			
ANR	1473043	Identifier	bravalue		1466025	0					
ANR	1473044	Identifier	OP_CBRA		1466025	1					
ANR	1473045	ExpressionStatement	save_hwm_offset = cd -> hwm - cd -> start_workspace	6624:4:215313:215360	1466025	138	True				
ANR	1473046	AssignmentExpression	save_hwm_offset = cd -> hwm - cd -> start_workspace		1466025	0		=			
ANR	1473047	Identifier	save_hwm_offset		1466025	0					
ANR	1473048	AdditiveExpression	cd -> hwm - cd -> start_workspace		1466025	1		-			
ANR	1473049	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1473050	Identifier	cd		1466025	0					
ANR	1473051	Identifier	hwm		1466025	1					
ANR	1473052	PtrMemberAccess	cd -> start_workspace		1466025	1					
ANR	1473053	Identifier	cd		1466025	0					
ANR	1473054	Identifier	start_workspace		1466025	1					
ANR	1473055	ExpressionStatement	reset_bracount = FALSE	6625:4:215366:215388	1466025	139	True				
ANR	1473056	AssignmentExpression	reset_bracount = FALSE		1466025	0		=			
ANR	1473057	Identifier	reset_bracount		1466025	0					
ANR	1473058	Identifier	FALSE		1466025	1					
ANR	1473059	IfStatement	if ( * ptr == CHAR_QUESTION_MARK )		1466025	140					
ANR	1473060	Condition	* ptr == CHAR_QUESTION_MARK	6630:8:215553:215578	1466025	0	True				
ANR	1473061	EqualityExpression	* ptr == CHAR_QUESTION_MARK		1466025	0		==			
ANR	1473062	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473063	UnaryOperator	*		1466025	0					
ANR	1473064	Identifier	ptr		1466025	1					
ANR	1473065	Identifier	CHAR_QUESTION_MARK		1466025	1					
ANR	1473066	CompoundStatement		2196:6:76433:76449	1466025	1					
ANR	1473067	IdentifierDeclStatement	"int i , set , unset , namelen ;"	6632:6:215595:215621	1466025	0	True				
ANR	1473068	IdentifierDecl	i		1466025	0					
ANR	1473069	IdentifierDeclType	int		1466025	0					
ANR	1473070	Identifier	i		1466025	1					
ANR	1473071	IdentifierDecl	set		1466025	1					
ANR	1473072	IdentifierDeclType	int		1466025	0					
ANR	1473073	Identifier	set		1466025	1					
ANR	1473074	IdentifierDecl	unset		1466025	2					
ANR	1473075	IdentifierDeclType	int		1466025	0					
ANR	1473076	Identifier	unset		1466025	1					
ANR	1473077	IdentifierDecl	namelen		1466025	3					
ANR	1473078	IdentifierDeclType	int		1466025	0					
ANR	1473079	Identifier	namelen		1466025	1					
ANR	1473080	IdentifierDeclStatement	int * optset ;	6633:6:215629:215640	1466025	1	True				
ANR	1473081	IdentifierDecl	* optset		1466025	0					
ANR	1473082	IdentifierDeclType	int *		1466025	0					
ANR	1473083	Identifier	optset		1466025	1					
ANR	1473084	IdentifierDeclStatement	const pcre_uchar * name ;	6634:6:215648:215670	1466025	2	True				
ANR	1473085	IdentifierDecl	* name		1466025	0					
ANR	1473086	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1473087	Identifier	name		1466025	1					
ANR	1473088	IdentifierDeclStatement	pcre_uchar * slot ;	6635:6:215678:215694	1466025	3	True				
ANR	1473089	IdentifierDecl	* slot		1466025	0					
ANR	1473090	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1473091	Identifier	slot		1466025	1					
ANR	1473092	SwitchStatement	switch ( * ( ++ ptr ) )		1466025	4					
ANR	1473093	Condition	* ( ++ ptr )	6637:14:215711:215718	1466025	0	True				
ANR	1473094	UnaryOperationExpression	* ( ++ ptr )		1466025	0					
ANR	1473095	UnaryOperator	*		1466025	0					
ANR	1473096	UnaryExpression	++ ptr		1466025	1					
ANR	1473097	IncDec	++		1466025	0					
ANR	1473098	Identifier	ptr		1466025	1					
ANR	1473099	CompoundStatement		2199:8:76484:76484	1466025	1					
ANR	1473100	Label	case CHAR_VERTICAL_LINE :	6640:8:215814:215837	1466025	0	True				
ANR	1473101	Identifier	CHAR_VERTICAL_LINE		1466025	0					
ANR	1473102	ExpressionStatement	reset_bracount = TRUE	6641:8:215890:215911	1466025	1	True				
ANR	1473103	AssignmentExpression	reset_bracount = TRUE		1466025	0		=			
ANR	1473104	Identifier	reset_bracount		1466025	0					
ANR	1473105	Identifier	TRUE		1466025	1					
ANR	1473106	Label	case CHAR_COLON :	6645:8:216024:216039	1466025	2	True				
ANR	1473107	Identifier	CHAR_COLON		1466025	0					
ANR	1473108	ExpressionStatement	bravalue = OP_BRA	6646:8:216086:216103	1466025	3	True				
ANR	1473109	AssignmentExpression	bravalue = OP_BRA		1466025	0		=			
ANR	1473110	Identifier	bravalue		1466025	0					
ANR	1473111	Identifier	OP_BRA		1466025	1					
ANR	1473112	ExpressionStatement	ptr ++	6647:8:216113:216118	1466025	4	True				
ANR	1473113	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1473114	Identifier	ptr		1466025	0					
ANR	1473115	IncDec	++		1466025	1					
ANR	1473116	BreakStatement	break ;	6648:8:216128:216133	1466025	5	True				
ANR	1473117	Label	case CHAR_LEFT_PARENTHESIS :	6652:8:216220:216246	1466025	6	True				
ANR	1473118	Identifier	CHAR_LEFT_PARENTHESIS		1466025	0					
ANR	1473119	ExpressionStatement	bravalue = OP_COND	6653:8:216256:216274	1466025	7	True				
ANR	1473120	AssignmentExpression	bravalue = OP_COND		1466025	0		=			
ANR	1473121	Identifier	bravalue		1466025	0					
ANR	1473122	Identifier	OP_COND		1466025	1					
ANR	1473123	ExpressionStatement	tempptr = ptr	6654:8:216314:216327	1466025	8	True				
ANR	1473124	AssignmentExpression	tempptr = ptr		1466025	0		=			
ANR	1473125	Identifier	tempptr		1466025	0					
ANR	1473126	Identifier	ptr		1466025	1					
ANR	1473127	IfStatement	if ( ptr [ 1 ] == CHAR_QUESTION_MARK && ptr [ 2 ] == CHAR_C )		1466025	9					
ANR	1473128	Condition	ptr [ 1 ] == CHAR_QUESTION_MARK && ptr [ 2 ] == CHAR_C	6673:12:217280:217327	1466025	0	True				
ANR	1473129	AndExpression	ptr [ 1 ] == CHAR_QUESTION_MARK && ptr [ 2 ] == CHAR_C		1466025	0		&&			
ANR	1473130	EqualityExpression	ptr [ 1 ] == CHAR_QUESTION_MARK		1466025	0		==			
ANR	1473131	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1473132	Identifier	ptr		1466025	0					
ANR	1473133	PrimaryExpression	1		1466025	1					
ANR	1473134	Identifier	CHAR_QUESTION_MARK		1466025	1					
ANR	1473135	EqualityExpression	ptr [ 2 ] == CHAR_C		1466025	1		==			
ANR	1473136	ArrayIndexing	ptr [ 2 ]		1466025	0					
ANR	1473137	Identifier	ptr		1466025	0					
ANR	1473138	PrimaryExpression	2		1466025	1					
ANR	1473139	Identifier	CHAR_C		1466025	1					
ANR	1473140	CompoundStatement		2235:10:78095:78095	1466025	1					
ANR	1473141	ForStatement	for ( i = 3 ; ; i ++ )		1466025	0					
ANR	1473142	ForInit	i = 3 ;	6675:15:217357:217362	1466025	0	True				
ANR	1473143	AssignmentExpression	i = 3		1466025	0		=			
ANR	1473144	Identifier	i		1466025	0					
ANR	1473145	PrimaryExpression	3		1466025	1					
ANR	1473146	PostIncDecOperationExpression	i ++	6675:23:217365:217367	1466025	1	True				
ANR	1473147	Identifier	i		1466025	0					
ANR	1473148	IncDec	++		1466025	1					
ANR	1473149	IfStatement	if ( ! IS_DIGIT ( ptr [ i ] ) )		1466025	2					
ANR	1473150	Condition	! IS_DIGIT ( ptr [ i ] )	6675:32:217374:217390	1466025	0	True				
ANR	1473151	UnaryOperationExpression	! IS_DIGIT ( ptr [ i ] )		1466025	0					
ANR	1473152	UnaryOperator	!		1466025	0					
ANR	1473153	CallExpression	IS_DIGIT ( ptr [ i ] )		1466025	1					
ANR	1473154	Callee	IS_DIGIT		1466025	0					
ANR	1473155	Identifier	IS_DIGIT		1466025	0					
ANR	1473156	ArgumentList	ptr [ i ]		1466025	1					
ANR	1473157	Argument	ptr [ i ]		1466025	0					
ANR	1473158	ArrayIndexing	ptr [ i ]		1466025	0					
ANR	1473159	Identifier	ptr		1466025	0					
ANR	1473160	Identifier	i		1466025	1					
ANR	1473161	BreakStatement	break ;	6675:51:217393:217398	1466025	1	True				
ANR	1473162	IfStatement	if ( ptr [ i ] == CHAR_RIGHT_PARENTHESIS )		1466025	1					
ANR	1473163	Condition	ptr [ i ] == CHAR_RIGHT_PARENTHESIS	6676:14:217414:217445	1466025	0	True				
ANR	1473164	EqualityExpression	ptr [ i ] == CHAR_RIGHT_PARENTHESIS		1466025	0		==			
ANR	1473165	ArrayIndexing	ptr [ i ]		1466025	0					
ANR	1473166	Identifier	ptr		1466025	0					
ANR	1473167	Identifier	i		1466025	1					
ANR	1473168	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1473169	ExpressionStatement	tempptr += i + 1	6677:12:217460:217476	1466025	1	True				
ANR	1473170	AssignmentExpression	tempptr += i + 1		1466025	0		+=			
ANR	1473171	Identifier	tempptr		1466025	0					
ANR	1473172	AdditiveExpression	i + 1		1466025	1		+			
ANR	1473173	Identifier	i		1466025	0					
ANR	1473174	PrimaryExpression	1		1466025	1					
ANR	1473175	IfStatement	if ( tempptr [ 1 ] == CHAR_QUESTION_MARK && ( tempptr [ 2 ] == CHAR_EQUALS_SIGN || tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) ) ) )		1466025	10					
ANR	1473176	Condition	tempptr [ 1 ] == CHAR_QUESTION_MARK && ( tempptr [ 2 ] == CHAR_EQUALS_SIGN || tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) ) )	6684:12:217706:218011	1466025	0	True				
ANR	1473177	AndExpression	tempptr [ 1 ] == CHAR_QUESTION_MARK && ( tempptr [ 2 ] == CHAR_EQUALS_SIGN || tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) ) )		1466025	0		&&			
ANR	1473178	EqualityExpression	tempptr [ 1 ] == CHAR_QUESTION_MARK		1466025	0		==			
ANR	1473179	ArrayIndexing	tempptr [ 1 ]		1466025	0					
ANR	1473180	Identifier	tempptr		1466025	0					
ANR	1473181	PrimaryExpression	1		1466025	1					
ANR	1473182	Identifier	CHAR_QUESTION_MARK		1466025	1					
ANR	1473183	OrExpression	tempptr [ 2 ] == CHAR_EQUALS_SIGN || tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) )		1466025	1		||			
ANR	1473184	EqualityExpression	tempptr [ 2 ] == CHAR_EQUALS_SIGN		1466025	0		==			
ANR	1473185	ArrayIndexing	tempptr [ 2 ]		1466025	0					
ANR	1473186	Identifier	tempptr		1466025	0					
ANR	1473187	PrimaryExpression	2		1466025	1					
ANR	1473188	Identifier	CHAR_EQUALS_SIGN		1466025	1					
ANR	1473189	OrExpression	tempptr [ 2 ] == CHAR_EXCLAMATION_MARK || ( tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK ) )		1466025	1		||			
ANR	1473190	EqualityExpression	tempptr [ 2 ] == CHAR_EXCLAMATION_MARK		1466025	0		==			
ANR	1473191	ArrayIndexing	tempptr [ 2 ]		1466025	0					
ANR	1473192	Identifier	tempptr		1466025	0					
ANR	1473193	PrimaryExpression	2		1466025	1					
ANR	1473194	Identifier	CHAR_EXCLAMATION_MARK		1466025	1					
ANR	1473195	AndExpression	tempptr [ 2 ] == CHAR_LESS_THAN_SIGN && ( tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK )		1466025	1		&&			
ANR	1473196	EqualityExpression	tempptr [ 2 ] == CHAR_LESS_THAN_SIGN		1466025	0		==			
ANR	1473197	ArrayIndexing	tempptr [ 2 ]		1466025	0					
ANR	1473198	Identifier	tempptr		1466025	0					
ANR	1473199	PrimaryExpression	2		1466025	1					
ANR	1473200	Identifier	CHAR_LESS_THAN_SIGN		1466025	1					
ANR	1473201	OrExpression	tempptr [ 3 ] == CHAR_EQUALS_SIGN || tempptr [ 3 ] == CHAR_EXCLAMATION_MARK		1466025	1		||			
ANR	1473202	EqualityExpression	tempptr [ 3 ] == CHAR_EQUALS_SIGN		1466025	0		==			
ANR	1473203	ArrayIndexing	tempptr [ 3 ]		1466025	0					
ANR	1473204	Identifier	tempptr		1466025	0					
ANR	1473205	PrimaryExpression	3		1466025	1					
ANR	1473206	Identifier	CHAR_EQUALS_SIGN		1466025	1					
ANR	1473207	EqualityExpression	tempptr [ 3 ] == CHAR_EXCLAMATION_MARK		1466025	1		==			
ANR	1473208	ArrayIndexing	tempptr [ 3 ]		1466025	0					
ANR	1473209	Identifier	tempptr		1466025	0					
ANR	1473210	PrimaryExpression	3		1466025	1					
ANR	1473211	Identifier	CHAR_EXCLAMATION_MARK		1466025	1					
ANR	1473212	CompoundStatement		2251:10:78779:78779	1466025	1					
ANR	1473213	ExpressionStatement	cd -> iscondassert = TRUE	6691:10:218036:218059	1466025	0	True				
ANR	1473214	AssignmentExpression	cd -> iscondassert = TRUE		1466025	0		=			
ANR	1473215	PtrMemberAccess	cd -> iscondassert		1466025	0					
ANR	1473216	Identifier	cd		1466025	0					
ANR	1473217	Identifier	iscondassert		1466025	1					
ANR	1473218	Identifier	TRUE		1466025	1					
ANR	1473219	BreakStatement	break ;	6692:10:218071:218076	1466025	1	True				
ANR	1473220	ExpressionStatement	code [ 1 + LINK_SIZE ] = OP_CREF	6698:8:218255:218282	1466025	11	True				
ANR	1473221	AssignmentExpression	code [ 1 + LINK_SIZE ] = OP_CREF		1466025	0		=			
ANR	1473222	ArrayIndexing	code [ 1 + LINK_SIZE ]		1466025	0					
ANR	1473223	Identifier	code		1466025	0					
ANR	1473224	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1473225	PrimaryExpression	1		1466025	0					
ANR	1473226	Identifier	LINK_SIZE		1466025	1					
ANR	1473227	Identifier	OP_CREF		1466025	1					
ANR	1473228	ExpressionStatement	skipbytes = 1 + IMM2_SIZE	6699:8:218292:218315	1466025	12	True				
ANR	1473229	AssignmentExpression	skipbytes = 1 + IMM2_SIZE		1466025	0		=			
ANR	1473230	Identifier	skipbytes		1466025	0					
ANR	1473231	AdditiveExpression	1 + IMM2_SIZE		1466025	1		+			
ANR	1473232	PrimaryExpression	1		1466025	0					
ANR	1473233	Identifier	IMM2_SIZE		1466025	1					
ANR	1473234	ExpressionStatement	refsign = - 1	6700:8:218325:218337	1466025	13	True				
ANR	1473235	AssignmentExpression	refsign = - 1		1466025	0		=			
ANR	1473236	Identifier	refsign		1466025	0					
ANR	1473237	UnaryOperationExpression	- 1		1466025	1					
ANR	1473238	UnaryOperator	-		1466025	0					
ANR	1473239	PrimaryExpression	1		1466025	1					
ANR	1473240	ExpressionStatement	namelen = - 1	6701:8:218373:218385	1466025	14	True				
ANR	1473241	AssignmentExpression	namelen = - 1		1466025	0		=			
ANR	1473242	Identifier	namelen		1466025	0					
ANR	1473243	UnaryOperationExpression	- 1		1466025	1					
ANR	1473244	UnaryOperator	-		1466025	0					
ANR	1473245	PrimaryExpression	1		1466025	1					
ANR	1473246	ExpressionStatement	name = NULL	6702:8:218446:218457	1466025	15	True				
ANR	1473247	AssignmentExpression	name = NULL		1466025	0		=			
ANR	1473248	Identifier	name		1466025	0					
ANR	1473249	Identifier	NULL		1466025	1					
ANR	1473250	ExpressionStatement	recno = 0	6703:8:218506:218515	1466025	16	True				
ANR	1473251	AssignmentExpression	recno = 0		1466025	0		=			
ANR	1473252	Identifier	recno		1466025	0					
ANR	1473253	PrimaryExpression	0		1466025	1					
ANR	1473254	ExpressionStatement	ptr ++	6707:8:218631:218636	1466025	17	True				
ANR	1473255	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1473256	Identifier	ptr		1466025	0					
ANR	1473257	IncDec	++		1466025	1					
ANR	1473258	IfStatement	if ( * ptr == CHAR_R && ptr [ 1 ] == CHAR_AMPERSAND )		1466025	18					
ANR	1473259	Condition	* ptr == CHAR_R && ptr [ 1 ] == CHAR_AMPERSAND	6708:12:218650:218691	1466025	0	True				
ANR	1473260	AndExpression	* ptr == CHAR_R && ptr [ 1 ] == CHAR_AMPERSAND		1466025	0		&&			
ANR	1473261	EqualityExpression	* ptr == CHAR_R		1466025	0		==			
ANR	1473262	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473263	UnaryOperator	*		1466025	0					
ANR	1473264	Identifier	ptr		1466025	1					
ANR	1473265	Identifier	CHAR_R		1466025	1					
ANR	1473266	EqualityExpression	ptr [ 1 ] == CHAR_AMPERSAND		1466025	1		==			
ANR	1473267	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1473268	Identifier	ptr		1466025	0					
ANR	1473269	PrimaryExpression	1		1466025	1					
ANR	1473270	Identifier	CHAR_AMPERSAND		1466025	1					
ANR	1473271	CompoundStatement		2270:10:79459:79459	1466025	1					
ANR	1473272	ExpressionStatement	terminator = - 1	6710:10:218716:218731	1466025	0	True				
ANR	1473273	AssignmentExpression	terminator = - 1		1466025	0		=			
ANR	1473274	Identifier	terminator		1466025	0					
ANR	1473275	UnaryOperationExpression	- 1		1466025	1					
ANR	1473276	UnaryOperator	-		1466025	0					
ANR	1473277	PrimaryExpression	1		1466025	1					
ANR	1473278	ExpressionStatement	ptr += 2	6711:10:218743:218751	1466025	1	True				
ANR	1473279	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1473280	Identifier	ptr		1466025	0					
ANR	1473281	PrimaryExpression	2		1466025	1					
ANR	1473282	ExpressionStatement	code [ 1 + LINK_SIZE ] = OP_RREF	6712:10:218763:218790	1466025	2	True				
ANR	1473283	AssignmentExpression	code [ 1 + LINK_SIZE ] = OP_RREF		1466025	0		=			
ANR	1473284	ArrayIndexing	code [ 1 + LINK_SIZE ]		1466025	0					
ANR	1473285	Identifier	code		1466025	0					
ANR	1473286	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1473287	PrimaryExpression	1		1466025	0					
ANR	1473288	Identifier	LINK_SIZE		1466025	1					
ANR	1473289	Identifier	OP_RREF		1466025	1					
ANR	1473290	ElseStatement	else		1466025	0					
ANR	1473291	IfStatement	if ( * ptr == CHAR_LESS_THAN_SIGN )		1466025	0					
ANR	1473292	Condition	* ptr == CHAR_LESS_THAN_SIGN	6719:17:219083:219109	1466025	0	True				
ANR	1473293	EqualityExpression	* ptr == CHAR_LESS_THAN_SIGN		1466025	0		==			
ANR	1473294	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473295	UnaryOperator	*		1466025	0					
ANR	1473296	Identifier	ptr		1466025	1					
ANR	1473297	Identifier	CHAR_LESS_THAN_SIGN		1466025	1					
ANR	1473298	CompoundStatement		2281:10:79877:79877	1466025	1					
ANR	1473299	ExpressionStatement	terminator = CHAR_GREATER_THAN_SIGN	6721:10:219134:219169	1466025	0	True				
ANR	1473300	AssignmentExpression	terminator = CHAR_GREATER_THAN_SIGN		1466025	0		=			
ANR	1473301	Identifier	terminator		1466025	0					
ANR	1473302	Identifier	CHAR_GREATER_THAN_SIGN		1466025	1					
ANR	1473303	ExpressionStatement	ptr ++	6722:10:219181:219186	1466025	1	True				
ANR	1473304	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1473305	Identifier	ptr		1466025	0					
ANR	1473306	IncDec	++		1466025	1					
ANR	1473307	ElseStatement	else		1466025	0					
ANR	1473308	IfStatement	if ( * ptr == CHAR_APOSTROPHE )		1466025	0					
ANR	1473309	Condition	* ptr == CHAR_APOSTROPHE	6724:17:219217:219239	1466025	0	True				
ANR	1473310	EqualityExpression	* ptr == CHAR_APOSTROPHE		1466025	0		==			
ANR	1473311	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473312	UnaryOperator	*		1466025	0					
ANR	1473313	Identifier	ptr		1466025	1					
ANR	1473314	Identifier	CHAR_APOSTROPHE		1466025	1					
ANR	1473315	CompoundStatement		2286:10:80007:80007	1466025	1					
ANR	1473316	ExpressionStatement	terminator = CHAR_APOSTROPHE	6726:10:219264:219292	1466025	0	True				
ANR	1473317	AssignmentExpression	terminator = CHAR_APOSTROPHE		1466025	0		=			
ANR	1473318	Identifier	terminator		1466025	0					
ANR	1473319	Identifier	CHAR_APOSTROPHE		1466025	1					
ANR	1473320	ExpressionStatement	ptr ++	6727:10:219304:219309	1466025	1	True				
ANR	1473321	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1473322	Identifier	ptr		1466025	0					
ANR	1473323	IncDec	++		1466025	1					
ANR	1473324	ElseStatement	else		1466025	0					
ANR	1473325	CompoundStatement		2291:10:80101:80101	1466025	0					
ANR	1473326	ExpressionStatement	terminator = CHAR_NULL	6731:10:219358:219380	1466025	0	True				
ANR	1473327	AssignmentExpression	terminator = CHAR_NULL		1466025	0		=			
ANR	1473328	Identifier	terminator		1466025	0					
ANR	1473329	Identifier	CHAR_NULL		1466025	1					
ANR	1473330	IfStatement	if ( * ptr == CHAR_MINUS || * ptr == CHAR_PLUS )		1466025	1					
ANR	1473331	Condition	* ptr == CHAR_MINUS || * ptr == CHAR_PLUS	6732:14:219396:219434	1466025	0	True				
ANR	1473332	OrExpression	* ptr == CHAR_MINUS || * ptr == CHAR_PLUS		1466025	0		||			
ANR	1473333	EqualityExpression	* ptr == CHAR_MINUS		1466025	0		==			
ANR	1473334	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473335	UnaryOperator	*		1466025	0					
ANR	1473336	Identifier	ptr		1466025	1					
ANR	1473337	Identifier	CHAR_MINUS		1466025	1					
ANR	1473338	EqualityExpression	* ptr == CHAR_PLUS		1466025	1		==			
ANR	1473339	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473340	UnaryOperator	*		1466025	0					
ANR	1473341	Identifier	ptr		1466025	1					
ANR	1473342	Identifier	CHAR_PLUS		1466025	1					
ANR	1473343	ExpressionStatement	refsign = * ptr ++	6732:55:219437:219453	1466025	1	True				
ANR	1473344	AssignmentExpression	refsign = * ptr ++		1466025	0		=			
ANR	1473345	Identifier	refsign		1466025	0					
ANR	1473346	UnaryOperationExpression	* ptr ++		1466025	1					
ANR	1473347	UnaryOperator	*		1466025	0					
ANR	1473348	PostIncDecOperationExpression	ptr ++		1466025	1					
ANR	1473349	Identifier	ptr		1466025	0					
ANR	1473350	IncDec	++		1466025	1					
ANR	1473351	ElseStatement	else		1466025	0					
ANR	1473352	IfStatement	if ( IS_DIGIT ( * ptr ) )		1466025	0					
ANR	1473353	Condition	IS_DIGIT ( * ptr )	6733:21:219476:219489	1466025	0	True				
ANR	1473354	CallExpression	IS_DIGIT ( * ptr )		1466025	0					
ANR	1473355	Callee	IS_DIGIT		1466025	0					
ANR	1473356	Identifier	IS_DIGIT		1466025	0					
ANR	1473357	ArgumentList	* ptr		1466025	1					
ANR	1473358	Argument	* ptr		1466025	0					
ANR	1473359	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473360	UnaryOperator	*		1466025	0					
ANR	1473361	Identifier	ptr		1466025	1					
ANR	1473362	ExpressionStatement	refsign = 0	6733:37:219492:219503	1466025	1	True				
ANR	1473363	AssignmentExpression	refsign = 0		1466025	0		=			
ANR	1473364	Identifier	refsign		1466025	0					
ANR	1473365	PrimaryExpression	0		1466025	1					
ANR	1473366	IfStatement	if ( refsign >= 0 )		1466025	19					
ANR	1473367	Condition	refsign >= 0	6738:12:219561:219572	1466025	0	True				
ANR	1473368	RelationalExpression	refsign >= 0		1466025	0		>=			
ANR	1473369	Identifier	refsign		1466025	0					
ANR	1473370	PrimaryExpression	0		1466025	1					
ANR	1473371	CompoundStatement		2300:10:80340:80340	1466025	1					
ANR	1473372	WhileStatement	while ( IS_DIGIT ( * ptr ) )		1466025	0					
ANR	1473373	Condition	IS_DIGIT ( * ptr )	6740:17:219604:219617	1466025	0	True				
ANR	1473374	CallExpression	IS_DIGIT ( * ptr )		1466025	0					
ANR	1473375	Callee	IS_DIGIT		1466025	0					
ANR	1473376	Identifier	IS_DIGIT		1466025	0					
ANR	1473377	ArgumentList	* ptr		1466025	1					
ANR	1473378	Argument	* ptr		1466025	0					
ANR	1473379	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473380	UnaryOperator	*		1466025	0					
ANR	1473381	Identifier	ptr		1466025	1					
ANR	1473382	CompoundStatement		2302:12:80387:80387	1466025	1					
ANR	1473383	ExpressionStatement	recno = recno * 10 + ( int ) ( * ptr - CHAR_0 )	6742:12:219646:219687	1466025	0	True				
ANR	1473384	AssignmentExpression	recno = recno * 10 + ( int ) ( * ptr - CHAR_0 )		1466025	0		=			
ANR	1473385	Identifier	recno		1466025	0					
ANR	1473386	AdditiveExpression	recno * 10 + ( int ) ( * ptr - CHAR_0 )		1466025	1		+			
ANR	1473387	MultiplicativeExpression	recno * 10		1466025	0		*			
ANR	1473388	Identifier	recno		1466025	0					
ANR	1473389	PrimaryExpression	10		1466025	1					
ANR	1473390	CastExpression	( int ) ( * ptr - CHAR_0 )		1466025	1					
ANR	1473391	CastTarget	int		1466025	0					
ANR	1473392	AdditiveExpression	* ptr - CHAR_0		1466025	1		-			
ANR	1473393	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473394	UnaryOperator	*		1466025	0					
ANR	1473395	Identifier	ptr		1466025	1					
ANR	1473396	Identifier	CHAR_0		1466025	1					
ANR	1473397	ExpressionStatement	ptr ++	6743:12:219701:219706	1466025	1	True				
ANR	1473398	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1473399	Identifier	ptr		1466025	0					
ANR	1473400	IncDec	++		1466025	1					
ANR	1473401	ElseStatement	else		1466025	0					
ANR	1473402	CompoundStatement		2314:10:80829:80829	1466025	0					
ANR	1473403	IfStatement	if ( IS_DIGIT ( * ptr ) )		1466025	0					
ANR	1473404	Condition	IS_DIGIT ( * ptr )	6754:14:220090:220103	1466025	0	True				
ANR	1473405	CallExpression	IS_DIGIT ( * ptr )		1466025	0					
ANR	1473406	Callee	IS_DIGIT		1466025	0					
ANR	1473407	Identifier	IS_DIGIT		1466025	0					
ANR	1473408	ArgumentList	* ptr		1466025	1					
ANR	1473409	Argument	* ptr		1466025	0					
ANR	1473410	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473411	UnaryOperator	*		1466025	0					
ANR	1473412	Identifier	ptr		1466025	1					
ANR	1473413	CompoundStatement		2316:12:80873:80873	1466025	1					
ANR	1473414	ExpressionStatement	* errorcodeptr = ERR84	6756:12:220132:220153	1466025	0	True				
ANR	1473415	AssignmentExpression	* errorcodeptr = ERR84		1466025	0		=			
ANR	1473416	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1473417	UnaryOperator	*		1466025	0					
ANR	1473418	Identifier	errorcodeptr		1466025	1					
ANR	1473419	Identifier	ERR84		1466025	1					
ANR	1473420	GotoStatement	goto FAILED ;	6757:12:220167:220178	1466025	1	True				
ANR	1473421	Identifier	FAILED		1466025	0					
ANR	1473422	IfStatement	if ( ! MAX_255 ( * ptr ) || ( cd -> ctypes [ * ptr ] & ctype_word ) == 0 )		1466025	1					
ANR	1473423	Condition	! MAX_255 ( * ptr ) || ( cd -> ctypes [ * ptr ] & ctype_word ) == 0	6759:14:220208:220261	1466025	0	True				
ANR	1473424	OrExpression	! MAX_255 ( * ptr ) || ( cd -> ctypes [ * ptr ] & ctype_word ) == 0		1466025	0		||			
ANR	1473425	UnaryOperationExpression	! MAX_255 ( * ptr )		1466025	0					
ANR	1473426	UnaryOperator	!		1466025	0					
ANR	1473427	CallExpression	MAX_255 ( * ptr )		1466025	1					
ANR	1473428	Callee	MAX_255		1466025	0					
ANR	1473429	Identifier	MAX_255		1466025	0					
ANR	1473430	ArgumentList	* ptr		1466025	1					
ANR	1473431	Argument	* ptr		1466025	0					
ANR	1473432	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473433	UnaryOperator	*		1466025	0					
ANR	1473434	Identifier	ptr		1466025	1					
ANR	1473435	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_word ) == 0		1466025	1		==			
ANR	1473436	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_word		1466025	0		&			
ANR	1473437	ArrayIndexing	cd -> ctypes [ * ptr ]		1466025	0					
ANR	1473438	PtrMemberAccess	cd -> ctypes		1466025	0					
ANR	1473439	Identifier	cd		1466025	0					
ANR	1473440	Identifier	ctypes		1466025	1					
ANR	1473441	UnaryOperationExpression	* ptr		1466025	1					
ANR	1473442	UnaryOperator	*		1466025	0					
ANR	1473443	Identifier	ptr		1466025	1					
ANR	1473444	Identifier	ctype_word		1466025	1					
ANR	1473445	PrimaryExpression	0		1466025	1					
ANR	1473446	CompoundStatement		2321:12:81031:81031	1466025	1					
ANR	1473447	ExpressionStatement	* errorcodeptr = ERR28	6761:12:220290:220311	1466025	0	True				
ANR	1473448	AssignmentExpression	* errorcodeptr = ERR28		1466025	0		=			
ANR	1473449	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1473450	UnaryOperator	*		1466025	0					
ANR	1473451	Identifier	errorcodeptr		1466025	1					
ANR	1473452	Identifier	ERR28		1466025	1					
ANR	1473453	GotoStatement	goto FAILED ;	6762:12:220352:220363	1466025	1	True				
ANR	1473454	Identifier	FAILED		1466025	0					
ANR	1473455	ExpressionStatement	name = ptr ++	6764:10:220389:220401	1466025	2	True				
ANR	1473456	AssignmentExpression	name = ptr ++		1466025	0		=			
ANR	1473457	Identifier	name		1466025	0					
ANR	1473458	PostIncDecOperationExpression	ptr ++		1466025	1					
ANR	1473459	Identifier	ptr		1466025	0					
ANR	1473460	IncDec	++		1466025	1					
ANR	1473461	WhileStatement	while ( MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0 )		1466025	3					
ANR	1473462	Condition	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0	6765:17:220420:220472	1466025	0	True				
ANR	1473463	AndExpression	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0		1466025	0		&&			
ANR	1473464	CallExpression	MAX_255 ( * ptr )		1466025	0					
ANR	1473465	Callee	MAX_255		1466025	0					
ANR	1473466	Identifier	MAX_255		1466025	0					
ANR	1473467	ArgumentList	* ptr		1466025	1					
ANR	1473468	Argument	* ptr		1466025	0					
ANR	1473469	UnaryOperationExpression	* ptr		1466025	0					
ANR	1473470	UnaryOperator	*		1466025	0					
ANR	1473471	Identifier	ptr		1466025	1					
ANR	1473472	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_word ) != 0		1466025	1		!=			
ANR	1473473	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_word		1466025	0		&			
ANR	1473474	ArrayIndexing	cd -> ctypes [ * ptr ]		1466025	0					
ANR	1473475	PtrMemberAccess	cd -> ctypes		1466025	0					
ANR	1473476	Identifier	cd		1466025	0					
ANR	1473477	Identifier	ctypes		1466025	1					
ANR	1473478	UnaryOperationExpression	* ptr		1466025	1					
ANR	1473479	UnaryOperator	*		1466025	0					
ANR	1473480	Identifier	ptr		1466025	1					
ANR	1473481	Identifier	ctype_word		1466025	1					
ANR	1473482	PrimaryExpression	0		1466025	1					
ANR	1473483	CompoundStatement		2327:12:81242:81242	1466025	1					
ANR	1473484	ExpressionStatement	ptr ++	6767:12:220501:220506	1466025	0	True				
ANR	1473485	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1473486	Identifier	ptr		1466025	0					
ANR	1473487	IncDec	++		1466025	1					
ANR	1473488	ExpressionStatement	namelen = ( int ) ( ptr - name )	6769:10:220532:220559	1466025	4	True				
ANR	1473489	AssignmentExpression	namelen = ( int ) ( ptr - name )		1466025	0		=			
ANR	1473490	Identifier	namelen		1466025	0					
ANR	1473491	CastExpression	( int ) ( ptr - name )		1466025	1					
ANR	1473492	CastTarget	int		1466025	0					
ANR	1473493	AdditiveExpression	ptr - name		1466025	1		-			
ANR	1473494	Identifier	ptr		1466025	0					
ANR	1473495	Identifier	name		1466025	1					
ANR	1473496	IfStatement	if ( lengthptr != NULL )		1466025	5					
ANR	1473497	Condition	lengthptr != NULL	6770:14:220575:220591	1466025	0	True				
ANR	1473498	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1473499	Identifier	lengthptr		1466025	0					
ANR	1473500	Identifier	NULL		1466025	1					
ANR	1473501	ExpressionStatement	* lengthptr += IMM2_SIZE	6770:33:220594:220617	1466025	1	True				
ANR	1473502	AssignmentExpression	* lengthptr += IMM2_SIZE		1466025	0		+=			
ANR	1473503	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1473504	UnaryOperator	*		1466025	0					
ANR	1473505	Identifier	lengthptr		1466025	1					
ANR	1473506	Identifier	IMM2_SIZE		1466025	1					
ANR	1473507	IfStatement	if ( ( terminator > 0 && * ptr ++ != ( pcre_uchar ) terminator ) || * ptr ++ != CHAR_RIGHT_PARENTHESIS )		1466025	20					
ANR	1473508	Condition	( terminator > 0 && * ptr ++ != ( pcre_uchar ) terminator ) || * ptr ++ != CHAR_RIGHT_PARENTHESIS	6775:12:220680:220779	1466025	0	True				
ANR	1473509	OrExpression	( terminator > 0 && * ptr ++ != ( pcre_uchar ) terminator ) || * ptr ++ != CHAR_RIGHT_PARENTHESIS		1466025	0		||			
ANR	1473510	AndExpression	terminator > 0 && * ptr ++ != ( pcre_uchar ) terminator		1466025	0		&&			
ANR	1473511	RelationalExpression	terminator > 0		1466025	0		>			
ANR	1473512	Identifier	terminator		1466025	0					
ANR	1473513	PrimaryExpression	0		1466025	1					
ANR	1473514	EqualityExpression	* ptr ++ != ( pcre_uchar ) terminator		1466025	1		!=			
ANR	1473515	UnaryOperationExpression	* ptr ++		1466025	0					
ANR	1473516	UnaryOperator	*		1466025	0					
ANR	1473517	PostIncDecOperationExpression	ptr ++		1466025	1					
ANR	1473518	Identifier	ptr		1466025	0					
ANR	1473519	IncDec	++		1466025	1					
ANR	1473520	CastExpression	( pcre_uchar ) terminator		1466025	1					
ANR	1473521	CastTarget	pcre_uchar		1466025	0					
ANR	1473522	Identifier	terminator		1466025	1					
ANR	1473523	EqualityExpression	* ptr ++ != CHAR_RIGHT_PARENTHESIS		1466025	1		!=			
ANR	1473524	UnaryOperationExpression	* ptr ++		1466025	0					
ANR	1473525	UnaryOperator	*		1466025	0					
ANR	1473526	PostIncDecOperationExpression	ptr ++		1466025	1					
ANR	1473527	Identifier	ptr		1466025	0					
ANR	1473528	IncDec	++		1466025	1					
ANR	1473529	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1473530	CompoundStatement		2338:10:81547:81547	1466025	1					
ANR	1473531	ExpressionStatement	ptr --	6778:10:220804:220809	1466025	0	True				
ANR	1473532	PostIncDecOperationExpression	ptr --		1466025	0					
ANR	1473533	Identifier	ptr		1466025	0					
ANR	1473534	IncDec	--		1466025	1					
ANR	1473535	ExpressionStatement	* errorcodeptr = ERR26	6779:10:220857:220878	1466025	1	True				
ANR	1473536	AssignmentExpression	* errorcodeptr = ERR26		1466025	0		=			
ANR	1473537	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1473538	UnaryOperator	*		1466025	0					
ANR	1473539	Identifier	errorcodeptr		1466025	1					
ANR	1473540	Identifier	ERR26		1466025	1					
ANR	1473541	GotoStatement	goto FAILED ;	6780:10:220922:220933	1466025	2	True				
ANR	1473542	Identifier	FAILED		1466025	0					
ANR	1473543	IfStatement	if ( lengthptr != NULL )		1466025	21					
ANR	1473544	Condition	lengthptr != NULL	6785:12:221024:221040	1466025	0	True				
ANR	1473545	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1473546	Identifier	lengthptr		1466025	0					
ANR	1473547	Identifier	NULL		1466025	1					
ANR	1473548	BreakStatement	break ;	6785:31:221043:221048	1466025	1	True				
ANR	1473549	IfStatement	if ( refsign >= 0 )		1466025	22					
ANR	1473550	Condition	refsign >= 0	6791:12:221230:221241	1466025	0	True				
ANR	1473551	RelationalExpression	refsign >= 0		1466025	0		>=			
ANR	1473552	Identifier	refsign		1466025	0					
ANR	1473553	PrimaryExpression	0		1466025	1					
ANR	1473554	CompoundStatement		2353:10:82009:82009	1466025	1					
ANR	1473555	IfStatement	if ( recno <= 0 )		1466025	0					
ANR	1473556	Condition	recno <= 0	6793:14:221270:221279	1466025	0	True				
ANR	1473557	RelationalExpression	recno <= 0		1466025	0		<=			
ANR	1473558	Identifier	recno		1466025	0					
ANR	1473559	PrimaryExpression	0		1466025	1					
ANR	1473560	CompoundStatement		2355:12:82049:82049	1466025	1					
ANR	1473561	ExpressionStatement	* errorcodeptr = ERR35	6795:12:221308:221329	1466025	0	True				
ANR	1473562	AssignmentExpression	* errorcodeptr = ERR35		1466025	0		=			
ANR	1473563	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1473564	UnaryOperator	*		1466025	0					
ANR	1473565	Identifier	errorcodeptr		1466025	1					
ANR	1473566	Identifier	ERR35		1466025	1					
ANR	1473567	GotoStatement	goto FAILED ;	6796:12:221343:221354	1466025	1	True				
ANR	1473568	Identifier	FAILED		1466025	0					
ANR	1473569	IfStatement	if ( refsign != 0 )		1466025	1					
ANR	1473570	Condition	refsign != 0	6798:14:221384:221395	1466025	0	True				
ANR	1473571	EqualityExpression	refsign != 0		1466025	0		!=			
ANR	1473572	Identifier	refsign		1466025	0					
ANR	1473573	PrimaryExpression	0		1466025	1					
ANR	1473574	ExpressionStatement	recno = ( refsign == CHAR_MINUS ) ? cd -> bracount - recno + 1 : recno + cd -> bracount	6798:28:221398:221490	1466025	1	True				
ANR	1473575	AssignmentExpression	recno = ( refsign == CHAR_MINUS ) ? cd -> bracount - recno + 1 : recno + cd -> bracount		1466025	0		=			
ANR	1473576	Identifier	recno		1466025	0					
ANR	1473577	ConditionalExpression	( refsign == CHAR_MINUS ) ? cd -> bracount - recno + 1 : recno + cd -> bracount		1466025	1					
ANR	1473578	Condition	refsign == CHAR_MINUS		1466025	0					
ANR	1473579	EqualityExpression	refsign == CHAR_MINUS		1466025	0		==			
ANR	1473580	Identifier	refsign		1466025	0					
ANR	1473581	Identifier	CHAR_MINUS		1466025	1					
ANR	1473582	AdditiveExpression	cd -> bracount - recno + 1		1466025	1		-			
ANR	1473583	PtrMemberAccess	cd -> bracount		1466025	0					
ANR	1473584	Identifier	cd		1466025	0					
ANR	1473585	Identifier	bracount		1466025	1					
ANR	1473586	AdditiveExpression	recno + 1		1466025	1		+			
ANR	1473587	Identifier	recno		1466025	0					
ANR	1473588	PrimaryExpression	1		1466025	1					
ANR	1473589	AdditiveExpression	recno + cd -> bracount		1466025	2		+			
ANR	1473590	Identifier	recno		1466025	0					
ANR	1473591	PtrMemberAccess	cd -> bracount		1466025	1					
ANR	1473592	Identifier	cd		1466025	0					
ANR	1473593	Identifier	bracount		1466025	1					
ANR	1473594	IfStatement	if ( recno <= 0 || recno > cd -> final_bracount )		1466025	2					
ANR	1473595	Condition	recno <= 0 || recno > cd -> final_bracount	6800:14:221506:221545	1466025	0	True				
ANR	1473596	OrExpression	recno <= 0 || recno > cd -> final_bracount		1466025	0		||			
ANR	1473597	RelationalExpression	recno <= 0		1466025	0		<=			
ANR	1473598	Identifier	recno		1466025	0					
ANR	1473599	PrimaryExpression	0		1466025	1					
ANR	1473600	RelationalExpression	recno > cd -> final_bracount		1466025	1		>			
ANR	1473601	Identifier	recno		1466025	0					
ANR	1473602	PtrMemberAccess	cd -> final_bracount		1466025	1					
ANR	1473603	Identifier	cd		1466025	0					
ANR	1473604	Identifier	final_bracount		1466025	1					
ANR	1473605	CompoundStatement		2362:12:82315:82315	1466025	1					
ANR	1473606	ExpressionStatement	* errorcodeptr = ERR15	6802:12:221574:221595	1466025	0	True				
ANR	1473607	AssignmentExpression	* errorcodeptr = ERR15		1466025	0		=			
ANR	1473608	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1473609	UnaryOperator	*		1466025	0					
ANR	1473610	Identifier	errorcodeptr		1466025	1					
ANR	1473611	Identifier	ERR15		1466025	1					
ANR	1473612	GotoStatement	goto FAILED ;	6803:12:221609:221620	1466025	1	True				
ANR	1473613	Identifier	FAILED		1466025	0					
ANR	1473614	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE , recno )"	6805:10:221646:221676	1466025	3	True				
ANR	1473615	CallExpression	"PUT2 ( code , 2 + LINK_SIZE , recno )"		1466025	0					
ANR	1473616	Callee	PUT2		1466025	0					
ANR	1473617	Identifier	PUT2		1466025	0					
ANR	1473618	ArgumentList	code		1466025	1					
ANR	1473619	Argument	code		1466025	0					
ANR	1473620	Identifier	code		1466025	0					
ANR	1473621	Argument	2 + LINK_SIZE		1466025	1					
ANR	1473622	AdditiveExpression	2 + LINK_SIZE		1466025	0		+			
ANR	1473623	PrimaryExpression	2		1466025	0					
ANR	1473624	Identifier	LINK_SIZE		1466025	1					
ANR	1473625	Argument	recno		1466025	2					
ANR	1473626	Identifier	recno		1466025	0					
ANR	1473627	IfStatement	if ( recno > cd -> top_backref )		1466025	4					
ANR	1473628	Condition	recno > cd -> top_backref	6806:14:221692:221714	1466025	0	True				
ANR	1473629	RelationalExpression	recno > cd -> top_backref		1466025	0		>			
ANR	1473630	Identifier	recno		1466025	0					
ANR	1473631	PtrMemberAccess	cd -> top_backref		1466025	1					
ANR	1473632	Identifier	cd		1466025	0					
ANR	1473633	Identifier	top_backref		1466025	1					
ANR	1473634	ExpressionStatement	cd -> top_backref = recno	6806:39:221717:221740	1466025	1	True				
ANR	1473635	AssignmentExpression	cd -> top_backref = recno		1466025	0		=			
ANR	1473636	PtrMemberAccess	cd -> top_backref		1466025	0					
ANR	1473637	Identifier	cd		1466025	0					
ANR	1473638	Identifier	top_backref		1466025	1					
ANR	1473639	Identifier	recno		1466025	1					
ANR	1473640	BreakStatement	break ;	6807:10:221752:221757	1466025	5	True				
ANR	1473641	ExpressionStatement	slot = cd -> name_table	6812:8:221824:221845	1466025	23	True				
ANR	1473642	AssignmentExpression	slot = cd -> name_table		1466025	0		=			
ANR	1473643	Identifier	slot		1466025	0					
ANR	1473644	PtrMemberAccess	cd -> name_table		1466025	1					
ANR	1473645	Identifier	cd		1466025	0					
ANR	1473646	Identifier	name_table		1466025	1					
ANR	1473647	ForStatement	for ( i = 0 ; i < cd -> names_found ; i ++ )		1466025	24					
ANR	1473648	ForInit	i = 0 ;	6813:13:221860:221865	1466025	0	True				
ANR	1473649	AssignmentExpression	i = 0		1466025	0		=			
ANR	1473650	Identifier	i		1466025	0					
ANR	1473651	PrimaryExpression	0		1466025	1					
ANR	1473652	Condition	i < cd -> names_found	6813:20:221867:221885	1466025	1	True				
ANR	1473653	RelationalExpression	i < cd -> names_found		1466025	0		<			
ANR	1473654	Identifier	i		1466025	0					
ANR	1473655	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1473656	Identifier	cd		1466025	0					
ANR	1473657	Identifier	names_found		1466025	1					
ANR	1473658	PostIncDecOperationExpression	i ++	6813:41:221888:221890	1466025	2	True				
ANR	1473659	Identifier	i		1466025	0					
ANR	1473660	IncDec	++		1466025	1					
ANR	1473661	CompoundStatement		2375:10:82658:82658	1466025	3					
ANR	1473662	IfStatement	"if ( STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0 )"		1466025	0					
ANR	1473663	Condition	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0"	6815:14:221919:221967	1466025	0	True				
ANR	1473664	EqualityExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0"		1466025	0		==			
ANR	1473665	CallExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen )"		1466025	0					
ANR	1473666	Callee	STRNCMP_UC_UC		1466025	0					
ANR	1473667	Identifier	STRNCMP_UC_UC		1466025	0					
ANR	1473668	ArgumentList	name		1466025	1					
ANR	1473669	Argument	name		1466025	0					
ANR	1473670	Identifier	name		1466025	0					
ANR	1473671	Argument	slot + IMM2_SIZE		1466025	1					
ANR	1473672	AdditiveExpression	slot + IMM2_SIZE		1466025	0		+			
ANR	1473673	Identifier	slot		1466025	0					
ANR	1473674	Identifier	IMM2_SIZE		1466025	1					
ANR	1473675	Argument	namelen		1466025	2					
ANR	1473676	Identifier	namelen		1466025	0					
ANR	1473677	PrimaryExpression	0		1466025	1					
ANR	1473678	BreakStatement	break ;	6815:65:221970:221975	1466025	1	True				
ANR	1473679	ExpressionStatement	slot += cd -> name_entry_size	6816:10:221987:222014	1466025	1	True				
ANR	1473680	AssignmentExpression	slot += cd -> name_entry_size		1466025	0		+=			
ANR	1473681	Identifier	slot		1466025	0					
ANR	1473682	PtrMemberAccess	cd -> name_entry_size		1466025	1					
ANR	1473683	Identifier	cd		1466025	0					
ANR	1473684	Identifier	name_entry_size		1466025	1					
ANR	1473685	IfStatement	if ( i < cd -> names_found )		1466025	25					
ANR	1473686	Condition	i < cd -> names_found	6824:12:222285:222303	1466025	0	True				
ANR	1473687	RelationalExpression	i < cd -> names_found		1466025	0		<			
ANR	1473688	Identifier	i		1466025	0					
ANR	1473689	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1473690	Identifier	cd		1466025	0					
ANR	1473691	Identifier	names_found		1466025	1					
ANR	1473692	CompoundStatement		2388:10:83111:83124	1466025	1					
ANR	1473693	IdentifierDeclStatement	int offset = i ++ ;	6826:10:222328:222344	1466025	0	True				
ANR	1473694	IdentifierDecl	offset = i ++		1466025	0					
ANR	1473695	IdentifierDeclType	int		1466025	0					
ANR	1473696	Identifier	offset		1466025	1					
ANR	1473697	AssignmentExpression	offset = i ++		1466025	2		=			
ANR	1473698	Identifier	offset		1466025	0					
ANR	1473699	PostIncDecOperationExpression	i ++		1466025	1					
ANR	1473700	Identifier	i		1466025	0					
ANR	1473701	IncDec	++		1466025	1					
ANR	1473702	IdentifierDeclStatement	int count = 1 ;	6827:10:222356:222369	1466025	1	True				
ANR	1473703	IdentifierDecl	count = 1		1466025	0					
ANR	1473704	IdentifierDeclType	int		1466025	0					
ANR	1473705	Identifier	count		1466025	1					
ANR	1473706	AssignmentExpression	count = 1		1466025	2		=			
ANR	1473707	Identifier	count		1466025	0					
ANR	1473708	PrimaryExpression	1		1466025	1					
ANR	1473709	ExpressionStatement	"recno = GET2 ( slot , 0 )"	6828:10:222381:222402	1466025	2	True				
ANR	1473710	AssignmentExpression	"recno = GET2 ( slot , 0 )"		1466025	0		=			
ANR	1473711	Identifier	recno		1466025	0					
ANR	1473712	CallExpression	"GET2 ( slot , 0 )"		1466025	1					
ANR	1473713	Callee	GET2		1466025	0					
ANR	1473714	Identifier	GET2		1466025	0					
ANR	1473715	ArgumentList	slot		1466025	1					
ANR	1473716	Argument	slot		1466025	0					
ANR	1473717	Identifier	slot		1466025	0					
ANR	1473718	Argument	0		1466025	1					
ANR	1473719	PrimaryExpression	0		1466025	0					
ANR	1473720	IfStatement	if ( recno > cd -> top_backref )		1466025	3					
ANR	1473721	Condition	recno > cd -> top_backref	6829:14:222450:222472	1466025	0	True				
ANR	1473722	RelationalExpression	recno > cd -> top_backref		1466025	0		>			
ANR	1473723	Identifier	recno		1466025	0					
ANR	1473724	PtrMemberAccess	cd -> top_backref		1466025	1					
ANR	1473725	Identifier	cd		1466025	0					
ANR	1473726	Identifier	top_backref		1466025	1					
ANR	1473727	ExpressionStatement	cd -> top_backref = recno	6829:39:222475:222498	1466025	1	True				
ANR	1473728	AssignmentExpression	cd -> top_backref = recno		1466025	0		=			
ANR	1473729	PtrMemberAccess	cd -> top_backref		1466025	0					
ANR	1473730	Identifier	cd		1466025	0					
ANR	1473731	Identifier	top_backref		1466025	1					
ANR	1473732	Identifier	recno		1466025	1					
ANR	1473733	ForStatement	for ( ; i < cd -> names_found ; i ++ )		1466025	4					
ANR	1473734	Condition	i < cd -> names_found	6830:17:222517:222535	1466025	0	True				
ANR	1473735	RelationalExpression	i < cd -> names_found		1466025	0		<			
ANR	1473736	Identifier	i		1466025	0					
ANR	1473737	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1473738	Identifier	cd		1466025	0					
ANR	1473739	Identifier	names_found		1466025	1					
ANR	1473740	PostIncDecOperationExpression	i ++	6830:38:222538:222540	1466025	1	True				
ANR	1473741	Identifier	i		1466025	0					
ANR	1473742	IncDec	++		1466025	1					
ANR	1473743	CompoundStatement		2392:12:83310:83310	1466025	2					
ANR	1473744	ExpressionStatement	slot += cd -> name_entry_size	6832:12:222569:222596	1466025	0	True				
ANR	1473745	AssignmentExpression	slot += cd -> name_entry_size		1466025	0		+=			
ANR	1473746	Identifier	slot		1466025	0					
ANR	1473747	PtrMemberAccess	cd -> name_entry_size		1466025	1					
ANR	1473748	Identifier	cd		1466025	0					
ANR	1473749	Identifier	name_entry_size		1466025	1					
ANR	1473750	IfStatement	"if ( STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) != 0 || ( slot + IMM2_SIZE ) [ namelen ] != 0 )"		1466025	1					
ANR	1473751	Condition	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) != 0 || ( slot + IMM2_SIZE ) [ namelen ] != 0"	6833:16:222614:222710	1466025	0	True				
ANR	1473752	OrExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) != 0 || ( slot + IMM2_SIZE ) [ namelen ] != 0"		1466025	0		||			
ANR	1473753	EqualityExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) != 0"		1466025	0		!=			
ANR	1473754	CallExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen )"		1466025	0					
ANR	1473755	Callee	STRNCMP_UC_UC		1466025	0					
ANR	1473756	Identifier	STRNCMP_UC_UC		1466025	0					
ANR	1473757	ArgumentList	name		1466025	1					
ANR	1473758	Argument	name		1466025	0					
ANR	1473759	Identifier	name		1466025	0					
ANR	1473760	Argument	slot + IMM2_SIZE		1466025	1					
ANR	1473761	AdditiveExpression	slot + IMM2_SIZE		1466025	0		+			
ANR	1473762	Identifier	slot		1466025	0					
ANR	1473763	Identifier	IMM2_SIZE		1466025	1					
ANR	1473764	Argument	namelen		1466025	2					
ANR	1473765	Identifier	namelen		1466025	0					
ANR	1473766	PrimaryExpression	0		1466025	1					
ANR	1473767	EqualityExpression	( slot + IMM2_SIZE ) [ namelen ] != 0		1466025	1		!=			
ANR	1473768	ArrayIndexing	( slot + IMM2_SIZE ) [ namelen ]		1466025	0					
ANR	1473769	AdditiveExpression	slot + IMM2_SIZE		1466025	0		+			
ANR	1473770	Identifier	slot		1466025	0					
ANR	1473771	Identifier	IMM2_SIZE		1466025	1					
ANR	1473772	Identifier	namelen		1466025	1					
ANR	1473773	PrimaryExpression	0		1466025	1					
ANR	1473774	BreakStatement	break ;	6834:46:222713:222718	1466025	1	True				
ANR	1473775	ExpressionStatement	count ++	6835:12:222732:222739	1466025	2	True				
ANR	1473776	PostIncDecOperationExpression	count ++		1466025	0					
ANR	1473777	Identifier	count		1466025	0					
ANR	1473778	IncDec	++		1466025	1					
ANR	1473779	IfStatement	if ( count > 1 )		1466025	5					
ANR	1473780	Condition	count > 1	6838:14:222770:222778	1466025	0	True				
ANR	1473781	RelationalExpression	count > 1		1466025	0		>			
ANR	1473782	Identifier	count		1466025	0					
ANR	1473783	PrimaryExpression	1		1466025	1					
ANR	1473784	CompoundStatement		2400:12:83548:83548	1466025	1					
ANR	1473785	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE , offset )"	6840:12:222807:222838	1466025	0	True				
ANR	1473786	CallExpression	"PUT2 ( code , 2 + LINK_SIZE , offset )"		1466025	0					
ANR	1473787	Callee	PUT2		1466025	0					
ANR	1473788	Identifier	PUT2		1466025	0					
ANR	1473789	ArgumentList	code		1466025	1					
ANR	1473790	Argument	code		1466025	0					
ANR	1473791	Identifier	code		1466025	0					
ANR	1473792	Argument	2 + LINK_SIZE		1466025	1					
ANR	1473793	AdditiveExpression	2 + LINK_SIZE		1466025	0		+			
ANR	1473794	PrimaryExpression	2		1466025	0					
ANR	1473795	Identifier	LINK_SIZE		1466025	1					
ANR	1473796	Argument	offset		1466025	2					
ANR	1473797	Identifier	offset		1466025	0					
ANR	1473798	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE + IMM2_SIZE , count )"	6841:12:222852:222892	1466025	1	True				
ANR	1473799	CallExpression	"PUT2 ( code , 2 + LINK_SIZE + IMM2_SIZE , count )"		1466025	0					
ANR	1473800	Callee	PUT2		1466025	0					
ANR	1473801	Identifier	PUT2		1466025	0					
ANR	1473802	ArgumentList	code		1466025	1					
ANR	1473803	Argument	code		1466025	0					
ANR	1473804	Identifier	code		1466025	0					
ANR	1473805	Argument	2 + LINK_SIZE + IMM2_SIZE		1466025	1					
ANR	1473806	AdditiveExpression	2 + LINK_SIZE + IMM2_SIZE		1466025	0		+			
ANR	1473807	PrimaryExpression	2		1466025	0					
ANR	1473808	AdditiveExpression	LINK_SIZE + IMM2_SIZE		1466025	1		+			
ANR	1473809	Identifier	LINK_SIZE		1466025	0					
ANR	1473810	Identifier	IMM2_SIZE		1466025	1					
ANR	1473811	Argument	count		1466025	2					
ANR	1473812	Identifier	count		1466025	0					
ANR	1473813	ExpressionStatement	skipbytes += IMM2_SIZE	6842:12:222906:222928	1466025	2	True				
ANR	1473814	AssignmentExpression	skipbytes += IMM2_SIZE		1466025	0		+=			
ANR	1473815	Identifier	skipbytes		1466025	0					
ANR	1473816	Identifier	IMM2_SIZE		1466025	1					
ANR	1473817	ExpressionStatement	code [ 1 + LINK_SIZE ] ++	6843:12:222942:222961	1466025	3	True				
ANR	1473818	PostIncDecOperationExpression	code [ 1 + LINK_SIZE ] ++		1466025	0					
ANR	1473819	ArrayIndexing	code [ 1 + LINK_SIZE ]		1466025	0					
ANR	1473820	Identifier	code		1466025	0					
ANR	1473821	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1473822	PrimaryExpression	1		1466025	0					
ANR	1473823	Identifier	LINK_SIZE		1466025	1					
ANR	1473824	IncDec	++		1466025	1					
ANR	1473825	ElseStatement	else		1466025	0					
ANR	1473826	CompoundStatement		2407:12:83788:83788	1466025	0					
ANR	1473827	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE , recno )"	6847:12:223047:223077	1466025	0	True				
ANR	1473828	CallExpression	"PUT2 ( code , 2 + LINK_SIZE , recno )"		1466025	0					
ANR	1473829	Callee	PUT2		1466025	0					
ANR	1473830	Identifier	PUT2		1466025	0					
ANR	1473831	ArgumentList	code		1466025	1					
ANR	1473832	Argument	code		1466025	0					
ANR	1473833	Identifier	code		1466025	0					
ANR	1473834	Argument	2 + LINK_SIZE		1466025	1					
ANR	1473835	AdditiveExpression	2 + LINK_SIZE		1466025	0		+			
ANR	1473836	PrimaryExpression	2		1466025	0					
ANR	1473837	Identifier	LINK_SIZE		1466025	1					
ANR	1473838	Argument	recno		1466025	2					
ANR	1473839	Identifier	recno		1466025	0					
ANR	1473840	ElseStatement	else		1466025	0					
ANR	1473841	IfStatement	if ( terminator != CHAR_NULL )		1466025	0					
ANR	1473842	Condition	terminator != CHAR_NULL	6857:17:223514:223536	1466025	0	True				
ANR	1473843	EqualityExpression	terminator != CHAR_NULL		1466025	0		!=			
ANR	1473844	Identifier	terminator		1466025	0					
ANR	1473845	Identifier	CHAR_NULL		1466025	1					
ANR	1473846	CompoundStatement		2419:10:84304:84304	1466025	1					
ANR	1473847	ExpressionStatement	* errorcodeptr = ERR15	6859:10:223561:223582	1466025	0	True				
ANR	1473848	AssignmentExpression	* errorcodeptr = ERR15		1466025	0		=			
ANR	1473849	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1473850	UnaryOperator	*		1466025	0					
ANR	1473851	Identifier	errorcodeptr		1466025	1					
ANR	1473852	Identifier	ERR15		1466025	1					
ANR	1473853	GotoStatement	goto FAILED ;	6860:10:223594:223605	1466025	1	True				
ANR	1473854	Identifier	FAILED		1466025	0					
ANR	1473855	ElseStatement	else		1466025	0					
ANR	1473856	IfStatement	if ( * name == CHAR_R )		1466025	0					
ANR	1473857	Condition	* name == CHAR_R	6866:17:223748:223762	1466025	0	True				
ANR	1473858	EqualityExpression	* name == CHAR_R		1466025	0		==			
ANR	1473859	UnaryOperationExpression	* name		1466025	0					
ANR	1473860	UnaryOperator	*		1466025	0					
ANR	1473861	Identifier	name		1466025	1					
ANR	1473862	Identifier	CHAR_R		1466025	1					
ANR	1473863	CompoundStatement		2428:10:84530:84530	1466025	1					
ANR	1473864	ExpressionStatement	recno = 0	6868:10:223787:223796	1466025	0	True				
ANR	1473865	AssignmentExpression	recno = 0		1466025	0		=			
ANR	1473866	Identifier	recno		1466025	0					
ANR	1473867	PrimaryExpression	0		1466025	1					
ANR	1473868	ForStatement	for ( i = 1 ; i < namelen ; i ++ )		1466025	1					
ANR	1473869	ForInit	i = 1 ;	6869:15:223813:223818	1466025	0	True				
ANR	1473870	AssignmentExpression	i = 1		1466025	0		=			
ANR	1473871	Identifier	i		1466025	0					
ANR	1473872	PrimaryExpression	1		1466025	1					
ANR	1473873	Condition	i < namelen	6869:22:223820:223830	1466025	1	True				
ANR	1473874	RelationalExpression	i < namelen		1466025	0		<			
ANR	1473875	Identifier	i		1466025	0					
ANR	1473876	Identifier	namelen		1466025	1					
ANR	1473877	PostIncDecOperationExpression	i ++	6869:35:223833:223835	1466025	2	True				
ANR	1473878	Identifier	i		1466025	0					
ANR	1473879	IncDec	++		1466025	1					
ANR	1473880	CompoundStatement		2431:12:84605:84605	1466025	3					
ANR	1473881	IfStatement	if ( ! IS_DIGIT ( name [ i ] ) )		1466025	0					
ANR	1473882	Condition	! IS_DIGIT ( name [ i ] )	6871:16:223868:223885	1466025	0	True				
ANR	1473883	UnaryOperationExpression	! IS_DIGIT ( name [ i ] )		1466025	0					
ANR	1473884	UnaryOperator	!		1466025	0					
ANR	1473885	CallExpression	IS_DIGIT ( name [ i ] )		1466025	1					
ANR	1473886	Callee	IS_DIGIT		1466025	0					
ANR	1473887	Identifier	IS_DIGIT		1466025	0					
ANR	1473888	ArgumentList	name [ i ]		1466025	1					
ANR	1473889	Argument	name [ i ]		1466025	0					
ANR	1473890	ArrayIndexing	name [ i ]		1466025	0					
ANR	1473891	Identifier	name		1466025	0					
ANR	1473892	Identifier	i		1466025	1					
ANR	1473893	CompoundStatement		2433:14:84657:84657	1466025	1					
ANR	1473894	ExpressionStatement	* errorcodeptr = ERR15	6873:14:223918:223939	1466025	0	True				
ANR	1473895	AssignmentExpression	* errorcodeptr = ERR15		1466025	0		=			
ANR	1473896	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1473897	UnaryOperator	*		1466025	0					
ANR	1473898	Identifier	errorcodeptr		1466025	1					
ANR	1473899	Identifier	ERR15		1466025	1					
ANR	1473900	GotoStatement	goto FAILED ;	6874:14:223955:223966	1466025	1	True				
ANR	1473901	Identifier	FAILED		1466025	0					
ANR	1473902	ExpressionStatement	recno = recno * 10 + name [ i ] - CHAR_0	6876:12:223996:224033	1466025	1	True				
ANR	1473903	AssignmentExpression	recno = recno * 10 + name [ i ] - CHAR_0		1466025	0		=			
ANR	1473904	Identifier	recno		1466025	0					
ANR	1473905	AdditiveExpression	recno * 10 + name [ i ] - CHAR_0		1466025	1		+			
ANR	1473906	MultiplicativeExpression	recno * 10		1466025	0		*			
ANR	1473907	Identifier	recno		1466025	0					
ANR	1473908	PrimaryExpression	10		1466025	1					
ANR	1473909	AdditiveExpression	name [ i ] - CHAR_0		1466025	1		-			
ANR	1473910	ArrayIndexing	name [ i ]		1466025	0					
ANR	1473911	Identifier	name		1466025	0					
ANR	1473912	Identifier	i		1466025	1					
ANR	1473913	Identifier	CHAR_0		1466025	1					
ANR	1473914	IfStatement	if ( recno == 0 )		1466025	2					
ANR	1473915	Condition	recno == 0	6878:14:224063:224072	1466025	0	True				
ANR	1473916	EqualityExpression	recno == 0		1466025	0		==			
ANR	1473917	Identifier	recno		1466025	0					
ANR	1473918	PrimaryExpression	0		1466025	1					
ANR	1473919	ExpressionStatement	recno = RREF_ANY	6878:26:224075:224091	1466025	1	True				
ANR	1473920	AssignmentExpression	recno = RREF_ANY		1466025	0		=			
ANR	1473921	Identifier	recno		1466025	0					
ANR	1473922	Identifier	RREF_ANY		1466025	1					
ANR	1473923	ExpressionStatement	code [ 1 + LINK_SIZE ] = OP_RREF	6879:10:224103:224130	1466025	3	True				
ANR	1473924	AssignmentExpression	code [ 1 + LINK_SIZE ] = OP_RREF		1466025	0		=			
ANR	1473925	ArrayIndexing	code [ 1 + LINK_SIZE ]		1466025	0					
ANR	1473926	Identifier	code		1466025	0					
ANR	1473927	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1473928	PrimaryExpression	1		1466025	0					
ANR	1473929	Identifier	LINK_SIZE		1466025	1					
ANR	1473930	Identifier	OP_RREF		1466025	1					
ANR	1473931	ExpressionStatement	"PUT2 ( code , 2 + LINK_SIZE , recno )"	6880:10:224170:224200	1466025	4	True				
ANR	1473932	CallExpression	"PUT2 ( code , 2 + LINK_SIZE , recno )"		1466025	0					
ANR	1473933	Callee	PUT2		1466025	0					
ANR	1473934	Identifier	PUT2		1466025	0					
ANR	1473935	ArgumentList	code		1466025	1					
ANR	1473936	Argument	code		1466025	0					
ANR	1473937	Identifier	code		1466025	0					
ANR	1473938	Argument	2 + LINK_SIZE		1466025	1					
ANR	1473939	AdditiveExpression	2 + LINK_SIZE		1466025	0		+			
ANR	1473940	PrimaryExpression	2		1466025	0					
ANR	1473941	Identifier	LINK_SIZE		1466025	1					
ANR	1473942	Argument	recno		1466025	2					
ANR	1473943	Identifier	recno		1466025	0					
ANR	1473944	ElseStatement	else		1466025	0					
ANR	1473945	IfStatement	"if ( namelen == 6 && STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 ) == 0 )"		1466025	0					
ANR	1473946	Condition	"namelen == 6 && STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 ) == 0"	6886:17:224327:224384	1466025	0	True				
ANR	1473947	AndExpression	"namelen == 6 && STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 ) == 0"		1466025	0		&&			
ANR	1473948	EqualityExpression	namelen == 6		1466025	0		==			
ANR	1473949	Identifier	namelen		1466025	0					
ANR	1473950	PrimaryExpression	6		1466025	1					
ANR	1473951	EqualityExpression	"STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 ) == 0"		1466025	1		==			
ANR	1473952	CallExpression	"STRNCMP_UC_C8 ( name , STRING_DEFINE , 6 )"		1466025	0					
ANR	1473953	Callee	STRNCMP_UC_C8		1466025	0					
ANR	1473954	Identifier	STRNCMP_UC_C8		1466025	0					
ANR	1473955	ArgumentList	name		1466025	1					
ANR	1473956	Argument	name		1466025	0					
ANR	1473957	Identifier	name		1466025	0					
ANR	1473958	Argument	STRING_DEFINE		1466025	1					
ANR	1473959	Identifier	STRING_DEFINE		1466025	0					
ANR	1473960	Argument	6		1466025	2					
ANR	1473961	PrimaryExpression	6		1466025	0					
ANR	1473962	PrimaryExpression	0		1466025	1					
ANR	1473963	CompoundStatement		2448:10:85152:85152	1466025	1					
ANR	1473964	ExpressionStatement	code [ 1 + LINK_SIZE ] = OP_DEF	6888:10:224409:224435	1466025	0	True				
ANR	1473965	AssignmentExpression	code [ 1 + LINK_SIZE ] = OP_DEF		1466025	0		=			
ANR	1473966	ArrayIndexing	code [ 1 + LINK_SIZE ]		1466025	0					
ANR	1473967	Identifier	code		1466025	0					
ANR	1473968	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1473969	PrimaryExpression	1		1466025	0					
ANR	1473970	Identifier	LINK_SIZE		1466025	1					
ANR	1473971	Identifier	OP_DEF		1466025	1					
ANR	1473972	ExpressionStatement	skipbytes = 1	6889:10:224447:224460	1466025	1	True				
ANR	1473973	AssignmentExpression	skipbytes = 1		1466025	0		=			
ANR	1473974	Identifier	skipbytes		1466025	0					
ANR	1473975	PrimaryExpression	1		1466025	1					
ANR	1473976	ElseStatement	else		1466025	0					
ANR	1473977	CompoundStatement		2456:10:85309:85309	1466025	0					
ANR	1473978	ExpressionStatement	* errorcodeptr = ERR15	6896:10:224566:224587	1466025	0	True				
ANR	1473979	AssignmentExpression	* errorcodeptr = ERR15		1466025	0		=			
ANR	1473980	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1473981	UnaryOperator	*		1466025	0					
ANR	1473982	Identifier	errorcodeptr		1466025	1					
ANR	1473983	Identifier	ERR15		1466025	1					
ANR	1473984	GotoStatement	goto FAILED ;	6897:10:224599:224610	1466025	1	True				
ANR	1473985	Identifier	FAILED		1466025	0					
ANR	1473986	BreakStatement	break ;	6899:8:224632:224637	1466025	26	True				
ANR	1473987	Label	case CHAR_EQUALS_SIGN :	6903:8:224724:224745	1466025	27	True				
ANR	1473988	Identifier	CHAR_EQUALS_SIGN		1466025	0					
ANR	1473989	ExpressionStatement	bravalue = OP_ASSERT	6904:8:224796:224816	1466025	28	True				
ANR	1473990	AssignmentExpression	bravalue = OP_ASSERT		1466025	0		=			
ANR	1473991	Identifier	bravalue		1466025	0					
ANR	1473992	Identifier	OP_ASSERT		1466025	1					
ANR	1473993	ExpressionStatement	cd -> assert_depth += 1	6905:8:224826:224847	1466025	29	True				
ANR	1473994	AssignmentExpression	cd -> assert_depth += 1		1466025	0		+=			
ANR	1473995	PtrMemberAccess	cd -> assert_depth		1466025	0					
ANR	1473996	Identifier	cd		1466025	0					
ANR	1473997	Identifier	assert_depth		1466025	1					
ANR	1473998	PrimaryExpression	1		1466025	1					
ANR	1473999	ExpressionStatement	ptr ++	6906:8:224857:224862	1466025	30	True				
ANR	1474000	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1474001	Identifier	ptr		1466025	0					
ANR	1474002	IncDec	++		1466025	1					
ANR	1474003	BreakStatement	break ;	6907:8:224872:224877	1466025	31	True				
ANR	1474004	Label	case CHAR_EXCLAMATION_MARK :	6916:8:225306:225332	1466025	32	True				
ANR	1474005	Identifier	CHAR_EXCLAMATION_MARK		1466025	0					
ANR	1474006	ExpressionStatement	ptr ++	6917:8:225378:225383	1466025	33	True				
ANR	1474007	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1474008	Identifier	ptr		1466025	0					
ANR	1474009	IncDec	++		1466025	1					
ANR	1474010	IfStatement	if ( * ptr == CHAR_RIGHT_PARENTHESIS && ptr [ 1 ] != CHAR_ASTERISK && ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) ) )		1466025	34					
ANR	1474011	Condition	* ptr == CHAR_RIGHT_PARENTHESIS && ptr [ 1 ] != CHAR_ASTERISK && ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )	6918:12:225397:225601	1466025	0	True				
ANR	1474012	AndExpression	* ptr == CHAR_RIGHT_PARENTHESIS && ptr [ 1 ] != CHAR_ASTERISK && ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )		1466025	0		&&			
ANR	1474013	EqualityExpression	* ptr == CHAR_RIGHT_PARENTHESIS		1466025	0		==			
ANR	1474014	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474015	UnaryOperator	*		1466025	0					
ANR	1474016	Identifier	ptr		1466025	1					
ANR	1474017	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1474018	AndExpression	ptr [ 1 ] != CHAR_ASTERISK && ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )		1466025	1		&&			
ANR	1474019	EqualityExpression	ptr [ 1 ] != CHAR_ASTERISK		1466025	0		!=			
ANR	1474020	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1474021	Identifier	ptr		1466025	0					
ANR	1474022	PrimaryExpression	1		1466025	1					
ANR	1474023	Identifier	CHAR_ASTERISK		1466025	1					
ANR	1474024	AndExpression	ptr [ 1 ] != CHAR_PLUS && ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )		1466025	1		&&			
ANR	1474025	EqualityExpression	ptr [ 1 ] != CHAR_PLUS		1466025	0		!=			
ANR	1474026	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1474027	Identifier	ptr		1466025	0					
ANR	1474028	PrimaryExpression	1		1466025	1					
ANR	1474029	Identifier	CHAR_PLUS		1466025	1					
ANR	1474030	AndExpression	ptr [ 1 ] != CHAR_QUESTION_MARK && ( ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 ) )		1466025	1		&&			
ANR	1474031	EqualityExpression	ptr [ 1 ] != CHAR_QUESTION_MARK		1466025	0		!=			
ANR	1474032	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1474033	Identifier	ptr		1466025	0					
ANR	1474034	PrimaryExpression	1		1466025	1					
ANR	1474035	Identifier	CHAR_QUESTION_MARK		1466025	1					
ANR	1474036	OrExpression	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET || ! is_counted_repeat ( ptr + 2 )		1466025	1		||			
ANR	1474037	EqualityExpression	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		1466025	0		!=			
ANR	1474038	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1474039	Identifier	ptr		1466025	0					
ANR	1474040	PrimaryExpression	1		1466025	1					
ANR	1474041	Identifier	CHAR_LEFT_CURLY_BRACKET		1466025	1					
ANR	1474042	UnaryOperationExpression	! is_counted_repeat ( ptr + 2 )		1466025	1					
ANR	1474043	UnaryOperator	!		1466025	0					
ANR	1474044	CallExpression	is_counted_repeat ( ptr + 2 )		1466025	1					
ANR	1474045	Callee	is_counted_repeat		1466025	0					
ANR	1474046	Identifier	is_counted_repeat		1466025	0					
ANR	1474047	ArgumentList	ptr + 2		1466025	1					
ANR	1474048	Argument	ptr + 2		1466025	0					
ANR	1474049	AdditiveExpression	ptr + 2		1466025	0		+			
ANR	1474050	Identifier	ptr		1466025	0					
ANR	1474051	PrimaryExpression	2		1466025	1					
ANR	1474052	CompoundStatement		2482:10:86369:86369	1466025	1					
ANR	1474053	ExpressionStatement	* code ++ = OP_FAIL	6922:10:225626:225643	1466025	0	True				
ANR	1474054	AssignmentExpression	* code ++ = OP_FAIL		1466025	0		=			
ANR	1474055	UnaryOperationExpression	* code ++		1466025	0					
ANR	1474056	UnaryOperator	*		1466025	0					
ANR	1474057	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1474058	Identifier	code		1466025	0					
ANR	1474059	IncDec	++		1466025	1					
ANR	1474060	Identifier	OP_FAIL		1466025	1					
ANR	1474061	ExpressionStatement	previous = NULL	6923:10:225655:225670	1466025	1	True				
ANR	1474062	AssignmentExpression	previous = NULL		1466025	0		=			
ANR	1474063	Identifier	previous		1466025	0					
ANR	1474064	Identifier	NULL		1466025	1					
ANR	1474065	ContinueStatement	continue ;	6924:10:225682:225690	1466025	2	True				
ANR	1474066	ExpressionStatement	bravalue = OP_ASSERT_NOT	6926:8:225712:225736	1466025	35	True				
ANR	1474067	AssignmentExpression	bravalue = OP_ASSERT_NOT		1466025	0		=			
ANR	1474068	Identifier	bravalue		1466025	0					
ANR	1474069	Identifier	OP_ASSERT_NOT		1466025	1					
ANR	1474070	ExpressionStatement	cd -> assert_depth += 1	6927:8:225746:225767	1466025	36	True				
ANR	1474071	AssignmentExpression	cd -> assert_depth += 1		1466025	0		+=			
ANR	1474072	PtrMemberAccess	cd -> assert_depth		1466025	0					
ANR	1474073	Identifier	cd		1466025	0					
ANR	1474074	Identifier	assert_depth		1466025	1					
ANR	1474075	PrimaryExpression	1		1466025	1					
ANR	1474076	BreakStatement	break ;	6928:8:225777:225782	1466025	37	True				
ANR	1474077	Label	case CHAR_LESS_THAN_SIGN :	6932:8:225869:225893	1466025	38	True				
ANR	1474078	Identifier	CHAR_LESS_THAN_SIGN		1466025	0					
ANR	1474079	SwitchStatement	switch ( ptr [ 1 ] )		1466025	39					
ANR	1474080	Condition	ptr [ 1 ]	6933:16:225957:225962	1466025	0	True				
ANR	1474081	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1474082	Identifier	ptr		1466025	0					
ANR	1474083	PrimaryExpression	1		1466025	1					
ANR	1474084	CompoundStatement		2495:10:86730:86730	1466025	1					
ANR	1474085	Label	case CHAR_EQUALS_SIGN :	6935:10:225987:226008	1466025	0	True				
ANR	1474086	Identifier	CHAR_EQUALS_SIGN		1466025	0					
ANR	1474087	ExpressionStatement	bravalue = OP_ASSERTBACK	6936:10:226060:226084	1466025	1	True				
ANR	1474088	AssignmentExpression	bravalue = OP_ASSERTBACK		1466025	0		=			
ANR	1474089	Identifier	bravalue		1466025	0					
ANR	1474090	Identifier	OP_ASSERTBACK		1466025	1					
ANR	1474091	ExpressionStatement	cd -> assert_depth += 1	6937:10:226096:226117	1466025	2	True				
ANR	1474092	AssignmentExpression	cd -> assert_depth += 1		1466025	0		+=			
ANR	1474093	PtrMemberAccess	cd -> assert_depth		1466025	0					
ANR	1474094	Identifier	cd		1466025	0					
ANR	1474095	Identifier	assert_depth		1466025	1					
ANR	1474096	PrimaryExpression	1		1466025	1					
ANR	1474097	ExpressionStatement	ptr += 2	6938:10:226129:226137	1466025	3	True				
ANR	1474098	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1474099	Identifier	ptr		1466025	0					
ANR	1474100	PrimaryExpression	2		1466025	1					
ANR	1474101	BreakStatement	break ;	6939:10:226149:226154	1466025	4	True				
ANR	1474102	Label	case CHAR_EXCLAMATION_MARK :	6941:10:226167:226193	1466025	5	True				
ANR	1474103	Identifier	CHAR_EXCLAMATION_MARK		1466025	0					
ANR	1474104	ExpressionStatement	bravalue = OP_ASSERTBACK_NOT	6942:10:226240:226268	1466025	6	True				
ANR	1474105	AssignmentExpression	bravalue = OP_ASSERTBACK_NOT		1466025	0		=			
ANR	1474106	Identifier	bravalue		1466025	0					
ANR	1474107	Identifier	OP_ASSERTBACK_NOT		1466025	1					
ANR	1474108	ExpressionStatement	cd -> assert_depth += 1	6943:10:226280:226301	1466025	7	True				
ANR	1474109	AssignmentExpression	cd -> assert_depth += 1		1466025	0		+=			
ANR	1474110	PtrMemberAccess	cd -> assert_depth		1466025	0					
ANR	1474111	Identifier	cd		1466025	0					
ANR	1474112	Identifier	assert_depth		1466025	1					
ANR	1474113	PrimaryExpression	1		1466025	1					
ANR	1474114	ExpressionStatement	ptr += 2	6944:10:226313:226321	1466025	8	True				
ANR	1474115	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1474116	Identifier	ptr		1466025	0					
ANR	1474117	PrimaryExpression	2		1466025	1					
ANR	1474118	BreakStatement	break ;	6945:10:226333:226338	1466025	9	True				
ANR	1474119	Label	default :	6947:10:226351:226358	1466025	10	True				
ANR	1474120	Identifier	default		1466025	0					
ANR	1474121	IfStatement	if ( MAX_255 ( ptr [ 1 ] ) && ( cd -> ctypes [ ptr [ 1 ] ] & ctype_word ) != 0 )		1466025	11					
ANR	1474122	Condition	MAX_255 ( ptr [ 1 ] ) && ( cd -> ctypes [ ptr [ 1 ] ] & ctype_word ) != 0	6948:14:226426:226482	1466025	0	True				
ANR	1474123	AndExpression	MAX_255 ( ptr [ 1 ] ) && ( cd -> ctypes [ ptr [ 1 ] ] & ctype_word ) != 0		1466025	0		&&			
ANR	1474124	CallExpression	MAX_255 ( ptr [ 1 ] )		1466025	0					
ANR	1474125	Callee	MAX_255		1466025	0					
ANR	1474126	Identifier	MAX_255		1466025	0					
ANR	1474127	ArgumentList	ptr [ 1 ]		1466025	1					
ANR	1474128	Argument	ptr [ 1 ]		1466025	0					
ANR	1474129	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1474130	Identifier	ptr		1466025	0					
ANR	1474131	PrimaryExpression	1		1466025	1					
ANR	1474132	EqualityExpression	( cd -> ctypes [ ptr [ 1 ] ] & ctype_word ) != 0		1466025	1		!=			
ANR	1474133	BitAndExpression	cd -> ctypes [ ptr [ 1 ] ] & ctype_word		1466025	0		&			
ANR	1474134	ArrayIndexing	cd -> ctypes [ ptr [ 1 ] ]		1466025	0					
ANR	1474135	PtrMemberAccess	cd -> ctypes		1466025	0					
ANR	1474136	Identifier	cd		1466025	0					
ANR	1474137	Identifier	ctypes		1466025	1					
ANR	1474138	ArrayIndexing	ptr [ 1 ]		1466025	1					
ANR	1474139	Identifier	ptr		1466025	0					
ANR	1474140	PrimaryExpression	1		1466025	1					
ANR	1474141	Identifier	ctype_word		1466025	1					
ANR	1474142	PrimaryExpression	0		1466025	1					
ANR	1474143	GotoStatement	goto DEFINE_NAME ;	6949:12:226497:226513	1466025	1	True				
ANR	1474144	Identifier	DEFINE_NAME		1466025	0					
ANR	1474145	ExpressionStatement	ptr ++	6950:10:226525:226530	1466025	12	True				
ANR	1474146	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1474147	Identifier	ptr		1466025	0					
ANR	1474148	IncDec	++		1466025	1					
ANR	1474149	ExpressionStatement	* errorcodeptr = ERR24	6951:10:226590:226611	1466025	13	True				
ANR	1474150	AssignmentExpression	* errorcodeptr = ERR24		1466025	0		=			
ANR	1474151	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474152	UnaryOperator	*		1466025	0					
ANR	1474153	Identifier	errorcodeptr		1466025	1					
ANR	1474154	Identifier	ERR24		1466025	1					
ANR	1474155	GotoStatement	goto FAILED ;	6952:10:226623:226634	1466025	14	True				
ANR	1474156	Identifier	FAILED		1466025	0					
ANR	1474157	BreakStatement	break ;	6954:8:226656:226661	1466025	40	True				
ANR	1474158	Label	case CHAR_GREATER_THAN_SIGN :	6958:8:226748:226775	1466025	41	True				
ANR	1474159	Identifier	CHAR_GREATER_THAN_SIGN		1466025	0					
ANR	1474160	ExpressionStatement	bravalue = OP_ONCE	6959:8:226819:226837	1466025	42	True				
ANR	1474161	AssignmentExpression	bravalue = OP_ONCE		1466025	0		=			
ANR	1474162	Identifier	bravalue		1466025	0					
ANR	1474163	Identifier	OP_ONCE		1466025	1					
ANR	1474164	ExpressionStatement	ptr ++	6960:8:226847:226852	1466025	43	True				
ANR	1474165	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1474166	Identifier	ptr		1466025	0					
ANR	1474167	IncDec	++		1466025	1					
ANR	1474168	BreakStatement	break ;	6961:8:226862:226867	1466025	44	True				
ANR	1474169	Label	case CHAR_C :	6965:8:226954:226965	1466025	45	True				
ANR	1474170	Identifier	CHAR_C		1466025	0					
ANR	1474171	ExpressionStatement	previous_callout = code	6966:8:227034:227057	1466025	46	True				
ANR	1474172	AssignmentExpression	previous_callout = code		1466025	0		=			
ANR	1474173	Identifier	previous_callout		1466025	0					
ANR	1474174	Identifier	code		1466025	1					
ANR	1474175	ExpressionStatement	after_manual_callout = 1	6967:8:227103:227127	1466025	47	True				
ANR	1474176	AssignmentExpression	after_manual_callout = 1		1466025	0		=			
ANR	1474177	Identifier	after_manual_callout		1466025	0					
ANR	1474178	PrimaryExpression	1		1466025	1					
ANR	1474179	ExpressionStatement	* code ++ = OP_CALLOUT	6968:8:227178:227198	1466025	48	True				
ANR	1474180	AssignmentExpression	* code ++ = OP_CALLOUT		1466025	0		=			
ANR	1474181	UnaryOperationExpression	* code ++		1466025	0					
ANR	1474182	UnaryOperator	*		1466025	0					
ANR	1474183	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1474184	Identifier	code		1466025	0					
ANR	1474185	IncDec	++		1466025	1					
ANR	1474186	Identifier	OP_CALLOUT		1466025	1					
ANR	1474187	CompoundStatement		2531:10:87977:87986	1466025	49					
ANR	1474188	IdentifierDeclStatement	int n = 0 ;	6970:10:227222:227231	1466025	0	True				
ANR	1474189	IdentifierDecl	n = 0		1466025	0					
ANR	1474190	IdentifierDeclType	int		1466025	0					
ANR	1474191	Identifier	n		1466025	1					
ANR	1474192	AssignmentExpression	n = 0		1466025	2		=			
ANR	1474193	Identifier	n		1466025	0					
ANR	1474194	PrimaryExpression	0		1466025	1					
ANR	1474195	ExpressionStatement	ptr ++	6971:10:227243:227248	1466025	1	True				
ANR	1474196	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1474197	Identifier	ptr		1466025	0					
ANR	1474198	IncDec	++		1466025	1					
ANR	1474199	WhileStatement	while ( IS_DIGIT ( * ptr ) )		1466025	2					
ANR	1474200	Condition	IS_DIGIT ( * ptr )	6972:16:227266:227279	1466025	0	True				
ANR	1474201	CallExpression	IS_DIGIT ( * ptr )		1466025	0					
ANR	1474202	Callee	IS_DIGIT		1466025	0					
ANR	1474203	Identifier	IS_DIGIT		1466025	0					
ANR	1474204	ArgumentList	* ptr		1466025	1					
ANR	1474205	Argument	* ptr		1466025	0					
ANR	1474206	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474207	UnaryOperator	*		1466025	0					
ANR	1474208	Identifier	ptr		1466025	1					
ANR	1474209	ExpressionStatement	n = n * 10 + * ptr ++ - CHAR_0	6973:12:227294:227322	1466025	1	True				
ANR	1474210	AssignmentExpression	n = n * 10 + * ptr ++ - CHAR_0		1466025	0		=			
ANR	1474211	Identifier	n		1466025	0					
ANR	1474212	AdditiveExpression	n * 10 + * ptr ++ - CHAR_0		1466025	1		+			
ANR	1474213	MultiplicativeExpression	n * 10		1466025	0		*			
ANR	1474214	Identifier	n		1466025	0					
ANR	1474215	PrimaryExpression	10		1466025	1					
ANR	1474216	AdditiveExpression	* ptr ++ - CHAR_0		1466025	1		-			
ANR	1474217	UnaryOperationExpression	* ptr ++		1466025	0					
ANR	1474218	UnaryOperator	*		1466025	0					
ANR	1474219	PostIncDecOperationExpression	ptr ++		1466025	1					
ANR	1474220	Identifier	ptr		1466025	0					
ANR	1474221	IncDec	++		1466025	1					
ANR	1474222	Identifier	CHAR_0		1466025	1					
ANR	1474223	IfStatement	if ( * ptr != CHAR_RIGHT_PARENTHESIS )		1466025	3					
ANR	1474224	Condition	* ptr != CHAR_RIGHT_PARENTHESIS	6974:14:227338:227367	1466025	0	True				
ANR	1474225	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		1466025	0		!=			
ANR	1474226	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474227	UnaryOperator	*		1466025	0					
ANR	1474228	Identifier	ptr		1466025	1					
ANR	1474229	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1474230	CompoundStatement		2536:12:88137:88137	1466025	1					
ANR	1474231	ExpressionStatement	* errorcodeptr = ERR39	6976:12:227396:227417	1466025	0	True				
ANR	1474232	AssignmentExpression	* errorcodeptr = ERR39		1466025	0		=			
ANR	1474233	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474234	UnaryOperator	*		1466025	0					
ANR	1474235	Identifier	errorcodeptr		1466025	1					
ANR	1474236	Identifier	ERR39		1466025	1					
ANR	1474237	GotoStatement	goto FAILED ;	6977:12:227431:227442	1466025	1	True				
ANR	1474238	Identifier	FAILED		1466025	0					
ANR	1474239	IfStatement	if ( n > 255 )		1466025	4					
ANR	1474240	Condition	n > 255	6979:14:227472:227478	1466025	0	True				
ANR	1474241	RelationalExpression	n > 255		1466025	0		>			
ANR	1474242	Identifier	n		1466025	0					
ANR	1474243	PrimaryExpression	255		1466025	1					
ANR	1474244	CompoundStatement		2541:12:88248:88248	1466025	1					
ANR	1474245	ExpressionStatement	* errorcodeptr = ERR38	6981:12:227507:227528	1466025	0	True				
ANR	1474246	AssignmentExpression	* errorcodeptr = ERR38		1466025	0		=			
ANR	1474247	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474248	UnaryOperator	*		1466025	0					
ANR	1474249	Identifier	errorcodeptr		1466025	1					
ANR	1474250	Identifier	ERR38		1466025	1					
ANR	1474251	GotoStatement	goto FAILED ;	6982:12:227542:227553	1466025	1	True				
ANR	1474252	Identifier	FAILED		1466025	0					
ANR	1474253	ExpressionStatement	* code ++ = n	6984:10:227579:227590	1466025	5	True				
ANR	1474254	AssignmentExpression	* code ++ = n		1466025	0		=			
ANR	1474255	UnaryOperationExpression	* code ++		1466025	0					
ANR	1474256	UnaryOperator	*		1466025	0					
ANR	1474257	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1474258	Identifier	code		1466025	0					
ANR	1474259	IncDec	++		1466025	1					
ANR	1474260	Identifier	n		1466025	1					
ANR	1474261	ExpressionStatement	"PUT ( code , 0 , ( int ) ( ptr - cd -> start_pattern + 1 ) )"	6985:10:227602:227650	1466025	6	True				
ANR	1474262	CallExpression	"PUT ( code , 0 , ( int ) ( ptr - cd -> start_pattern + 1 ) )"		1466025	0					
ANR	1474263	Callee	PUT		1466025	0					
ANR	1474264	Identifier	PUT		1466025	0					
ANR	1474265	ArgumentList	code		1466025	1					
ANR	1474266	Argument	code		1466025	0					
ANR	1474267	Identifier	code		1466025	0					
ANR	1474268	Argument	0		1466025	1					
ANR	1474269	PrimaryExpression	0		1466025	0					
ANR	1474270	Argument	( int ) ( ptr - cd -> start_pattern + 1 )		1466025	2					
ANR	1474271	CastExpression	( int ) ( ptr - cd -> start_pattern + 1 )		1466025	0					
ANR	1474272	CastTarget	int		1466025	0					
ANR	1474273	AdditiveExpression	ptr - cd -> start_pattern + 1		1466025	1		-			
ANR	1474274	Identifier	ptr		1466025	0					
ANR	1474275	AdditiveExpression	cd -> start_pattern + 1		1466025	1		+			
ANR	1474276	PtrMemberAccess	cd -> start_pattern		1466025	0					
ANR	1474277	Identifier	cd		1466025	0					
ANR	1474278	Identifier	start_pattern		1466025	1					
ANR	1474279	PrimaryExpression	1		1466025	1					
ANR	1474280	ExpressionStatement	"PUT ( code , LINK_SIZE , 0 )"	6986:10:227683:227706	1466025	7	True				
ANR	1474281	CallExpression	"PUT ( code , LINK_SIZE , 0 )"		1466025	0					
ANR	1474282	Callee	PUT		1466025	0					
ANR	1474283	Identifier	PUT		1466025	0					
ANR	1474284	ArgumentList	code		1466025	1					
ANR	1474285	Argument	code		1466025	0					
ANR	1474286	Identifier	code		1466025	0					
ANR	1474287	Argument	LINK_SIZE		1466025	1					
ANR	1474288	Identifier	LINK_SIZE		1466025	0					
ANR	1474289	Argument	0		1466025	2					
ANR	1474290	PrimaryExpression	0		1466025	0					
ANR	1474291	ExpressionStatement	code += 2 * LINK_SIZE	6987:10:227764:227785	1466025	8	True				
ANR	1474292	AssignmentExpression	code += 2 * LINK_SIZE		1466025	0		+=			
ANR	1474293	Identifier	code		1466025	0					
ANR	1474294	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1474295	PrimaryExpression	2		1466025	0					
ANR	1474296	Identifier	LINK_SIZE		1466025	1					
ANR	1474297	ExpressionStatement	previous = NULL	6989:8:227807:227822	1466025	50	True				
ANR	1474298	AssignmentExpression	previous = NULL		1466025	0		=			
ANR	1474299	Identifier	previous		1466025	0					
ANR	1474300	Identifier	NULL		1466025	1					
ANR	1474301	ContinueStatement	continue ;	6990:8:227832:227840	1466025	51	True				
ANR	1474302	Label	case CHAR_P :	6994:8:227927:227938	1466025	52	True				
ANR	1474303	Identifier	CHAR_P		1466025	0					
ANR	1474304	IfStatement	if ( * ( ++ ptr ) == CHAR_EQUALS_SIGN || * ptr == CHAR_GREATER_THAN_SIGN )		1466025	53					
ANR	1474305	Condition	* ( ++ ptr ) == CHAR_EQUALS_SIGN || * ptr == CHAR_GREATER_THAN_SIGN	6995:12:228010:228083	1466025	0	True				
ANR	1474306	OrExpression	* ( ++ ptr ) == CHAR_EQUALS_SIGN || * ptr == CHAR_GREATER_THAN_SIGN		1466025	0		||			
ANR	1474307	EqualityExpression	* ( ++ ptr ) == CHAR_EQUALS_SIGN		1466025	0		==			
ANR	1474308	UnaryOperationExpression	* ( ++ ptr )		1466025	0					
ANR	1474309	UnaryOperator	*		1466025	0					
ANR	1474310	UnaryExpression	++ ptr		1466025	1					
ANR	1474311	IncDec	++		1466025	0					
ANR	1474312	Identifier	ptr		1466025	1					
ANR	1474313	Identifier	CHAR_EQUALS_SIGN		1466025	1					
ANR	1474314	EqualityExpression	* ptr == CHAR_GREATER_THAN_SIGN		1466025	1		==			
ANR	1474315	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474316	UnaryOperator	*		1466025	0					
ANR	1474317	Identifier	ptr		1466025	1					
ANR	1474318	Identifier	CHAR_GREATER_THAN_SIGN		1466025	1					
ANR	1474319	CompoundStatement		2558:10:88881:88881	1466025	1					
ANR	1474320	ExpressionStatement	is_recurse = * ptr == CHAR_GREATER_THAN_SIGN	6998:10:228138:228181	1466025	0	True				
ANR	1474321	AssignmentExpression	is_recurse = * ptr == CHAR_GREATER_THAN_SIGN		1466025	0		=			
ANR	1474322	Identifier	is_recurse		1466025	0					
ANR	1474323	EqualityExpression	* ptr == CHAR_GREATER_THAN_SIGN		1466025	1		==			
ANR	1474324	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474325	UnaryOperator	*		1466025	0					
ANR	1474326	Identifier	ptr		1466025	1					
ANR	1474327	Identifier	CHAR_GREATER_THAN_SIGN		1466025	1					
ANR	1474328	ExpressionStatement	terminator = CHAR_RIGHT_PARENTHESIS	6999:10:228193:228228	1466025	1	True				
ANR	1474329	AssignmentExpression	terminator = CHAR_RIGHT_PARENTHESIS		1466025	0		=			
ANR	1474330	Identifier	terminator		1466025	0					
ANR	1474331	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1474332	GotoStatement	goto NAMED_REF_OR_RECURSE ;	7000:10:228240:228265	1466025	2	True				
ANR	1474333	Identifier	NAMED_REF_OR_RECURSE		1466025	0					
ANR	1474334	ElseStatement	else		1466025	0					
ANR	1474335	IfStatement	if ( * ptr != CHAR_LESS_THAN_SIGN )		1466025	0					
ANR	1474336	Condition	* ptr != CHAR_LESS_THAN_SIGN	7002:17:228296:228322	1466025	0	True				
ANR	1474337	EqualityExpression	* ptr != CHAR_LESS_THAN_SIGN		1466025	0		!=			
ANR	1474338	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474339	UnaryOperator	*		1466025	0					
ANR	1474340	Identifier	ptr		1466025	1					
ANR	1474341	Identifier	CHAR_LESS_THAN_SIGN		1466025	1					
ANR	1474342	CompoundStatement		2564:10:89124:89124	1466025	1					
ANR	1474343	ExpressionStatement	* errorcodeptr = ERR41	7004:10:228381:228402	1466025	0	True				
ANR	1474344	AssignmentExpression	* errorcodeptr = ERR41		1466025	0		=			
ANR	1474345	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474346	UnaryOperator	*		1466025	0					
ANR	1474347	Identifier	errorcodeptr		1466025	1					
ANR	1474348	Identifier	ERR41		1466025	1					
ANR	1474349	GotoStatement	goto FAILED ;	7005:10:228414:228425	1466025	1	True				
ANR	1474350	Identifier	FAILED		1466025	0					
ANR	1474351	Label	DEFINE_NAME :	7011:8:228584:228595	1466025	54	True				
ANR	1474352	Identifier	DEFINE_NAME		1466025	0					
ANR	1474353	Label	case CHAR_APOSTROPHE :	7012:8:228642:228662	1466025	55	True				
ANR	1474354	Identifier	CHAR_APOSTROPHE		1466025	0					
ANR	1474355	ExpressionStatement	terminator = ( * ptr == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE	7013:8:228672:228766	1466025	56	True				
ANR	1474356	AssignmentExpression	terminator = ( * ptr == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE		1466025	0		=			
ANR	1474357	Identifier	terminator		1466025	0					
ANR	1474358	ConditionalExpression	( * ptr == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE		1466025	1					
ANR	1474359	Condition	* ptr == CHAR_LESS_THAN_SIGN		1466025	0					
ANR	1474360	EqualityExpression	* ptr == CHAR_LESS_THAN_SIGN		1466025	0		==			
ANR	1474361	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474362	UnaryOperator	*		1466025	0					
ANR	1474363	Identifier	ptr		1466025	1					
ANR	1474364	Identifier	CHAR_LESS_THAN_SIGN		1466025	1					
ANR	1474365	Identifier	CHAR_GREATER_THAN_SIGN		1466025	1					
ANR	1474366	Identifier	CHAR_APOSTROPHE		1466025	2					
ANR	1474367	ExpressionStatement	name = ++ ptr	7015:8:228776:228788	1466025	57	True				
ANR	1474368	AssignmentExpression	name = ++ ptr		1466025	0		=			
ANR	1474369	Identifier	name		1466025	0					
ANR	1474370	UnaryExpression	++ ptr		1466025	1					
ANR	1474371	IncDec	++		1466025	0					
ANR	1474372	Identifier	ptr		1466025	1					
ANR	1474373	IfStatement	if ( IS_DIGIT ( * ptr ) )		1466025	58					
ANR	1474374	Condition	IS_DIGIT ( * ptr )	7016:12:228802:228815	1466025	0	True				
ANR	1474375	CallExpression	IS_DIGIT ( * ptr )		1466025	0					
ANR	1474376	Callee	IS_DIGIT		1466025	0					
ANR	1474377	Identifier	IS_DIGIT		1466025	0					
ANR	1474378	ArgumentList	* ptr		1466025	1					
ANR	1474379	Argument	* ptr		1466025	0					
ANR	1474380	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474381	UnaryOperator	*		1466025	0					
ANR	1474382	Identifier	ptr		1466025	1					
ANR	1474383	CompoundStatement		2578:10:89583:89583	1466025	1					
ANR	1474384	ExpressionStatement	* errorcodeptr = ERR84	7018:10:228840:228861	1466025	0	True				
ANR	1474385	AssignmentExpression	* errorcodeptr = ERR84		1466025	0		=			
ANR	1474386	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474387	UnaryOperator	*		1466025	0					
ANR	1474388	Identifier	errorcodeptr		1466025	1					
ANR	1474389	Identifier	ERR84		1466025	1					
ANR	1474390	GotoStatement	goto FAILED ;	7019:10:228918:228929	1466025	1	True				
ANR	1474391	Identifier	FAILED		1466025	0					
ANR	1474392	WhileStatement	while ( MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0 )		1466025	59					
ANR	1474393	Condition	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0	7021:15:228958:229010	1466025	0	True				
ANR	1474394	AndExpression	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0		1466025	0		&&			
ANR	1474395	CallExpression	MAX_255 ( * ptr )		1466025	0					
ANR	1474396	Callee	MAX_255		1466025	0					
ANR	1474397	Identifier	MAX_255		1466025	0					
ANR	1474398	ArgumentList	* ptr		1466025	1					
ANR	1474399	Argument	* ptr		1466025	0					
ANR	1474400	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474401	UnaryOperator	*		1466025	0					
ANR	1474402	Identifier	ptr		1466025	1					
ANR	1474403	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_word ) != 0		1466025	1		!=			
ANR	1474404	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_word		1466025	0		&			
ANR	1474405	ArrayIndexing	cd -> ctypes [ * ptr ]		1466025	0					
ANR	1474406	PtrMemberAccess	cd -> ctypes		1466025	0					
ANR	1474407	Identifier	cd		1466025	0					
ANR	1474408	Identifier	ctypes		1466025	1					
ANR	1474409	UnaryOperationExpression	* ptr		1466025	1					
ANR	1474410	UnaryOperator	*		1466025	0					
ANR	1474411	Identifier	ptr		1466025	1					
ANR	1474412	Identifier	ctype_word		1466025	1					
ANR	1474413	PrimaryExpression	0		1466025	1					
ANR	1474414	ExpressionStatement	ptr ++	7021:70:229013:229018	1466025	1	True				
ANR	1474415	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1474416	Identifier	ptr		1466025	0					
ANR	1474417	IncDec	++		1466025	1					
ANR	1474418	ExpressionStatement	namelen = ( int ) ( ptr - name )	7022:8:229028:229055	1466025	60	True				
ANR	1474419	AssignmentExpression	namelen = ( int ) ( ptr - name )		1466025	0		=			
ANR	1474420	Identifier	namelen		1466025	0					
ANR	1474421	CastExpression	( int ) ( ptr - name )		1466025	1					
ANR	1474422	CastTarget	int		1466025	0					
ANR	1474423	AdditiveExpression	ptr - name		1466025	1		-			
ANR	1474424	Identifier	ptr		1466025	0					
ANR	1474425	Identifier	name		1466025	1					
ANR	1474426	IfStatement	if ( lengthptr != NULL )		1466025	61					
ANR	1474427	Condition	lengthptr != NULL	7030:12:229391:229407	1466025	0	True				
ANR	1474428	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1474429	Identifier	lengthptr		1466025	0					
ANR	1474430	Identifier	NULL		1466025	1					
ANR	1474431	CompoundStatement		2594:10:90214:90251	1466025	1					
ANR	1474432	IdentifierDeclStatement	named_group * ng ;	7032:10:229432:229447	1466025	0	True				
ANR	1474433	IdentifierDecl	* ng		1466025	0					
ANR	1474434	IdentifierDeclType	named_group *		1466025	0					
ANR	1474435	Identifier	ng		1466025	1					
ANR	1474436	IdentifierDeclStatement	pcre_uint32 number = cd -> bracount + 1 ;	7033:10:229459:229496	1466025	1	True				
ANR	1474437	IdentifierDecl	number = cd -> bracount + 1		1466025	0					
ANR	1474438	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1474439	Identifier	number		1466025	1					
ANR	1474440	AssignmentExpression	number = cd -> bracount + 1		1466025	2		=			
ANR	1474441	Identifier	number		1466025	0					
ANR	1474442	AdditiveExpression	cd -> bracount + 1		1466025	1		+			
ANR	1474443	PtrMemberAccess	cd -> bracount		1466025	0					
ANR	1474444	Identifier	cd		1466025	0					
ANR	1474445	Identifier	bracount		1466025	1					
ANR	1474446	PrimaryExpression	1		1466025	1					
ANR	1474447	IfStatement	if ( * ptr != ( pcre_uchar ) terminator )		1466025	2					
ANR	1474448	Condition	* ptr != ( pcre_uchar ) terminator	7035:14:229513:229542	1466025	0	True				
ANR	1474449	EqualityExpression	* ptr != ( pcre_uchar ) terminator		1466025	0		!=			
ANR	1474450	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474451	UnaryOperator	*		1466025	0					
ANR	1474452	Identifier	ptr		1466025	1					
ANR	1474453	CastExpression	( pcre_uchar ) terminator		1466025	1					
ANR	1474454	CastTarget	pcre_uchar		1466025	0					
ANR	1474455	Identifier	terminator		1466025	1					
ANR	1474456	CompoundStatement		2597:12:90312:90312	1466025	1					
ANR	1474457	ExpressionStatement	* errorcodeptr = ERR42	7037:12:229571:229592	1466025	0	True				
ANR	1474458	AssignmentExpression	* errorcodeptr = ERR42		1466025	0		=			
ANR	1474459	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474460	UnaryOperator	*		1466025	0					
ANR	1474461	Identifier	errorcodeptr		1466025	1					
ANR	1474462	Identifier	ERR42		1466025	1					
ANR	1474463	GotoStatement	goto FAILED ;	7038:12:229606:229617	1466025	1	True				
ANR	1474464	Identifier	FAILED		1466025	0					
ANR	1474465	IfStatement	if ( cd -> names_found >= MAX_NAME_COUNT )		1466025	3					
ANR	1474466	Condition	cd -> names_found >= MAX_NAME_COUNT	7041:14:229648:229680	1466025	0	True				
ANR	1474467	RelationalExpression	cd -> names_found >= MAX_NAME_COUNT		1466025	0		>=			
ANR	1474468	PtrMemberAccess	cd -> names_found		1466025	0					
ANR	1474469	Identifier	cd		1466025	0					
ANR	1474470	Identifier	names_found		1466025	1					
ANR	1474471	Identifier	MAX_NAME_COUNT		1466025	1					
ANR	1474472	CompoundStatement		2603:12:90450:90450	1466025	1					
ANR	1474473	ExpressionStatement	* errorcodeptr = ERR49	7043:12:229709:229730	1466025	0	True				
ANR	1474474	AssignmentExpression	* errorcodeptr = ERR49		1466025	0		=			
ANR	1474475	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474476	UnaryOperator	*		1466025	0					
ANR	1474477	Identifier	errorcodeptr		1466025	1					
ANR	1474478	Identifier	ERR49		1466025	1					
ANR	1474479	GotoStatement	goto FAILED ;	7044:12:229744:229755	1466025	1	True				
ANR	1474480	Identifier	FAILED		1466025	0					
ANR	1474481	IfStatement	if ( namelen + IMM2_SIZE + 1 > cd -> name_entry_size )		1466025	4					
ANR	1474482	Condition	namelen + IMM2_SIZE + 1 > cd -> name_entry_size	7047:14:229786:229830	1466025	0	True				
ANR	1474483	RelationalExpression	namelen + IMM2_SIZE + 1 > cd -> name_entry_size		1466025	0		>			
ANR	1474484	AdditiveExpression	namelen + IMM2_SIZE + 1		1466025	0		+			
ANR	1474485	Identifier	namelen		1466025	0					
ANR	1474486	AdditiveExpression	IMM2_SIZE + 1		1466025	1		+			
ANR	1474487	Identifier	IMM2_SIZE		1466025	0					
ANR	1474488	PrimaryExpression	1		1466025	1					
ANR	1474489	PtrMemberAccess	cd -> name_entry_size		1466025	1					
ANR	1474490	Identifier	cd		1466025	0					
ANR	1474491	Identifier	name_entry_size		1466025	1					
ANR	1474492	CompoundStatement		2609:12:90600:90600	1466025	1					
ANR	1474493	ExpressionStatement	cd -> name_entry_size = namelen + IMM2_SIZE + 1	7049:12:229859:229904	1466025	0	True				
ANR	1474494	AssignmentExpression	cd -> name_entry_size = namelen + IMM2_SIZE + 1		1466025	0		=			
ANR	1474495	PtrMemberAccess	cd -> name_entry_size		1466025	0					
ANR	1474496	Identifier	cd		1466025	0					
ANR	1474497	Identifier	name_entry_size		1466025	1					
ANR	1474498	AdditiveExpression	namelen + IMM2_SIZE + 1		1466025	1		+			
ANR	1474499	Identifier	namelen		1466025	0					
ANR	1474500	AdditiveExpression	IMM2_SIZE + 1		1466025	1		+			
ANR	1474501	Identifier	IMM2_SIZE		1466025	0					
ANR	1474502	PrimaryExpression	1		1466025	1					
ANR	1474503	IfStatement	if ( namelen > MAX_NAME_SIZE )		1466025	1					
ANR	1474504	Condition	namelen > MAX_NAME_SIZE	7050:16:229922:229944	1466025	0	True				
ANR	1474505	RelationalExpression	namelen > MAX_NAME_SIZE		1466025	0		>			
ANR	1474506	Identifier	namelen		1466025	0					
ANR	1474507	Identifier	MAX_NAME_SIZE		1466025	1					
ANR	1474508	CompoundStatement		2612:14:90716:90716	1466025	1					
ANR	1474509	ExpressionStatement	* errorcodeptr = ERR48	7052:14:229977:229998	1466025	0	True				
ANR	1474510	AssignmentExpression	* errorcodeptr = ERR48		1466025	0		=			
ANR	1474511	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474512	UnaryOperator	*		1466025	0					
ANR	1474513	Identifier	errorcodeptr		1466025	1					
ANR	1474514	Identifier	ERR48		1466025	1					
ANR	1474515	GotoStatement	goto FAILED ;	7053:14:230014:230025	1466025	1	True				
ANR	1474516	Identifier	FAILED		1466025	0					
ANR	1474517	ExpressionStatement	ng = cd -> named_groups	7064:10:230521:230542	1466025	5	True				
ANR	1474518	AssignmentExpression	ng = cd -> named_groups		1466025	0		=			
ANR	1474519	Identifier	ng		1466025	0					
ANR	1474520	PtrMemberAccess	cd -> named_groups		1466025	1					
ANR	1474521	Identifier	cd		1466025	0					
ANR	1474522	Identifier	named_groups		1466025	1					
ANR	1474523	ForStatement	"for ( i = 0 ; i < cd -> names_found ; i ++ , ng ++ )"		1466025	6					
ANR	1474524	ForInit	i = 0 ;	7065:15:230559:230564	1466025	0	True				
ANR	1474525	AssignmentExpression	i = 0		1466025	0		=			
ANR	1474526	Identifier	i		1466025	0					
ANR	1474527	PrimaryExpression	0		1466025	1					
ANR	1474528	Condition	i < cd -> names_found	7065:22:230566:230584	1466025	1	True				
ANR	1474529	RelationalExpression	i < cd -> names_found		1466025	0		<			
ANR	1474530	Identifier	i		1466025	0					
ANR	1474531	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1474532	Identifier	cd		1466025	0					
ANR	1474533	Identifier	names_found		1466025	1					
ANR	1474534	Expression	"i ++ , ng ++"	7065:43:230587:230595	1466025	2	True				
ANR	1474535	PostIncDecOperationExpression	i ++		1466025	0					
ANR	1474536	Identifier	i		1466025	0					
ANR	1474537	IncDec	++		1466025	1					
ANR	1474538	PostIncDecOperationExpression	ng ++		1466025	1					
ANR	1474539	Identifier	ng		1466025	0					
ANR	1474540	IncDec	++		1466025	1					
ANR	1474541	CompoundStatement		2627:12:91365:91365	1466025	3					
ANR	1474542	IfStatement	"if ( namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0 )"		1466025	0					
ANR	1474543	Condition	"namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"	7067:16:230628:230711	1466025	0	True				
ANR	1474544	AndExpression	"namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"		1466025	0		&&			
ANR	1474545	EqualityExpression	namelen == ng -> length		1466025	0		==			
ANR	1474546	Identifier	namelen		1466025	0					
ANR	1474547	PtrMemberAccess	ng -> length		1466025	1					
ANR	1474548	Identifier	ng		1466025	0					
ANR	1474549	Identifier	length		1466025	1					
ANR	1474550	EqualityExpression	"STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"		1466025	1		==			
ANR	1474551	CallExpression	"STRNCMP_UC_UC ( name , ng -> name , namelen )"		1466025	0					
ANR	1474552	Callee	STRNCMP_UC_UC		1466025	0					
ANR	1474553	Identifier	STRNCMP_UC_UC		1466025	0					
ANR	1474554	ArgumentList	name		1466025	1					
ANR	1474555	Argument	name		1466025	0					
ANR	1474556	Identifier	name		1466025	0					
ANR	1474557	Argument	ng -> name		1466025	1					
ANR	1474558	PtrMemberAccess	ng -> name		1466025	0					
ANR	1474559	Identifier	ng		1466025	0					
ANR	1474560	Identifier	name		1466025	1					
ANR	1474561	Argument	namelen		1466025	2					
ANR	1474562	Identifier	namelen		1466025	0					
ANR	1474563	PrimaryExpression	0		1466025	1					
ANR	1474564	CompoundStatement		2630:14:91483:91483	1466025	1					
ANR	1474565	IfStatement	if ( ng -> number == number )		1466025	0					
ANR	1474566	Condition	ng -> number == number	7070:18:230748:230767	1466025	0	True				
ANR	1474567	EqualityExpression	ng -> number == number		1466025	0		==			
ANR	1474568	PtrMemberAccess	ng -> number		1466025	0					
ANR	1474569	Identifier	ng		1466025	0					
ANR	1474570	Identifier	number		1466025	1					
ANR	1474571	Identifier	number		1466025	1					
ANR	1474572	BreakStatement	break ;	7070:40:230770:230775	1466025	1	True				
ANR	1474573	IfStatement	if ( ( options & PCRE_DUPNAMES ) == 0 )		1466025	1					
ANR	1474574	Condition	( options & PCRE_DUPNAMES ) == 0	7071:18:230795:230824	1466025	0	True				
ANR	1474575	EqualityExpression	( options & PCRE_DUPNAMES ) == 0		1466025	0		==			
ANR	1474576	BitAndExpression	options & PCRE_DUPNAMES		1466025	0		&			
ANR	1474577	Identifier	options		1466025	0					
ANR	1474578	Identifier	PCRE_DUPNAMES		1466025	1					
ANR	1474579	PrimaryExpression	0		1466025	1					
ANR	1474580	CompoundStatement		2633:16:91598:91598	1466025	1					
ANR	1474581	ExpressionStatement	* errorcodeptr = ERR43	7073:16:230861:230882	1466025	0	True				
ANR	1474582	AssignmentExpression	* errorcodeptr = ERR43		1466025	0		=			
ANR	1474583	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474584	UnaryOperator	*		1466025	0					
ANR	1474585	Identifier	errorcodeptr		1466025	1					
ANR	1474586	Identifier	ERR43		1466025	1					
ANR	1474587	GotoStatement	goto FAILED ;	7074:16:230900:230911	1466025	1	True				
ANR	1474588	Identifier	FAILED		1466025	0					
ANR	1474589	ExpressionStatement	cd -> dupnames = TRUE	7076:14:230945:230964	1466025	2	True				
ANR	1474590	AssignmentExpression	cd -> dupnames = TRUE		1466025	0		=			
ANR	1474591	PtrMemberAccess	cd -> dupnames		1466025	0					
ANR	1474592	Identifier	cd		1466025	0					
ANR	1474593	Identifier	dupnames		1466025	1					
ANR	1474594	Identifier	TRUE		1466025	1					
ANR	1474595	ElseStatement	else		1466025	0					
ANR	1474596	IfStatement	if ( ng -> number == number )		1466025	0					
ANR	1474597	Condition	ng -> number == number	7078:21:231032:231051	1466025	0	True				
ANR	1474598	EqualityExpression	ng -> number == number		1466025	0		==			
ANR	1474599	PtrMemberAccess	ng -> number		1466025	0					
ANR	1474600	Identifier	ng		1466025	0					
ANR	1474601	Identifier	number		1466025	1					
ANR	1474602	Identifier	number		1466025	1					
ANR	1474603	CompoundStatement		2640:14:91823:91823	1466025	1					
ANR	1474604	ExpressionStatement	* errorcodeptr = ERR65	7080:14:231084:231105	1466025	0	True				
ANR	1474605	AssignmentExpression	* errorcodeptr = ERR65		1466025	0		=			
ANR	1474606	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474607	UnaryOperator	*		1466025	0					
ANR	1474608	Identifier	errorcodeptr		1466025	1					
ANR	1474609	Identifier	ERR65		1466025	1					
ANR	1474610	GotoStatement	goto FAILED ;	7081:14:231121:231132	1466025	1	True				
ANR	1474611	Identifier	FAILED		1466025	0					
ANR	1474612	IfStatement	if ( i >= cd -> names_found )		1466025	7					
ANR	1474613	Condition	i >= cd -> names_found	7085:14:231179:231198	1466025	0	True				
ANR	1474614	RelationalExpression	i >= cd -> names_found		1466025	0		>=			
ANR	1474615	Identifier	i		1466025	0					
ANR	1474616	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1474617	Identifier	cd		1466025	0					
ANR	1474618	Identifier	names_found		1466025	1					
ANR	1474619	CompoundStatement		2647:12:92011:92011	1466025	1					
ANR	1474620	IfStatement	if ( cd -> names_found >= cd -> named_group_list_size )		1466025	0					
ANR	1474621	Condition	cd -> names_found >= cd -> named_group_list_size	7089:16:231329:231372	1466025	0	True				
ANR	1474622	RelationalExpression	cd -> names_found >= cd -> named_group_list_size		1466025	0		>=			
ANR	1474623	PtrMemberAccess	cd -> names_found		1466025	0					
ANR	1474624	Identifier	cd		1466025	0					
ANR	1474625	Identifier	names_found		1466025	1					
ANR	1474626	PtrMemberAccess	cd -> named_group_list_size		1466025	1					
ANR	1474627	Identifier	cd		1466025	0					
ANR	1474628	Identifier	named_group_list_size		1466025	1					
ANR	1474629	CompoundStatement		2653:14:92219:92305	1466025	1					
ANR	1474630	IdentifierDeclStatement	int newsize = cd -> named_group_list_size * 2 ;	7091:14:231405:231448	1466025	0	True				
ANR	1474631	IdentifierDecl	newsize = cd -> named_group_list_size * 2		1466025	0					
ANR	1474632	IdentifierDeclType	int		1466025	0					
ANR	1474633	Identifier	newsize		1466025	1					
ANR	1474634	AssignmentExpression	newsize = cd -> named_group_list_size * 2		1466025	2		=			
ANR	1474635	Identifier	newsize		1466025	0					
ANR	1474636	MultiplicativeExpression	cd -> named_group_list_size * 2		1466025	1		*			
ANR	1474637	PtrMemberAccess	cd -> named_group_list_size		1466025	0					
ANR	1474638	Identifier	cd		1466025	0					
ANR	1474639	Identifier	named_group_list_size		1466025	1					
ANR	1474640	PrimaryExpression	2		1466025	1					
ANR	1474641	IdentifierDeclStatement	named_group * newspace = ( PUBL ( malloc ) ) ( newsize * sizeof ( named_group ) ) ;	7092:14:231464:231550	1466025	1	True				
ANR	1474642	IdentifierDecl	* newspace = ( PUBL ( malloc ) ) ( newsize * sizeof ( named_group ) )		1466025	0					
ANR	1474643	IdentifierDeclType	named_group *		1466025	0					
ANR	1474644	Identifier	newspace		1466025	1					
ANR	1474645	AssignmentExpression	* newspace = ( PUBL ( malloc ) ) ( newsize * sizeof ( named_group ) )		1466025	2		=			
ANR	1474646	Identifier	newspace		1466025	0					
ANR	1474647	CallExpression	( PUBL ( malloc ) ) ( newsize * sizeof ( named_group ) )		1466025	1					
ANR	1474648	Callee	PUBL ( malloc )		1466025	0					
ANR	1474649	CallExpression	PUBL ( malloc )		1466025	0					
ANR	1474650	Callee	PUBL		1466025	0					
ANR	1474651	Identifier	PUBL		1466025	0					
ANR	1474652	ArgumentList	malloc		1466025	1					
ANR	1474653	Argument	malloc		1466025	0					
ANR	1474654	Identifier	malloc		1466025	0					
ANR	1474655	ArgumentList	newsize * sizeof ( named_group )		1466025	1					
ANR	1474656	Argument	newsize * sizeof ( named_group )		1466025	0					
ANR	1474657	MultiplicativeExpression	newsize * sizeof ( named_group )		1466025	0		*			
ANR	1474658	Identifier	newsize		1466025	0					
ANR	1474659	SizeofExpression	sizeof ( named_group )		1466025	1					
ANR	1474660	Sizeof	sizeof		1466025	0					
ANR	1474661	SizeofOperand	named_group		1466025	1					
ANR	1474662	IfStatement	if ( newspace == NULL )		1466025	2					
ANR	1474663	Condition	newspace == NULL	7095:18:231571:231586	1466025	0	True				
ANR	1474664	EqualityExpression	newspace == NULL		1466025	0		==			
ANR	1474665	Identifier	newspace		1466025	0					
ANR	1474666	Identifier	NULL		1466025	1					
ANR	1474667	CompoundStatement		2657:16:92360:92360	1466025	1					
ANR	1474668	ExpressionStatement	* errorcodeptr = ERR21	7097:16:231623:231644	1466025	0	True				
ANR	1474669	AssignmentExpression	* errorcodeptr = ERR21		1466025	0		=			
ANR	1474670	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474671	UnaryOperator	*		1466025	0					
ANR	1474672	Identifier	errorcodeptr		1466025	1					
ANR	1474673	Identifier	ERR21		1466025	1					
ANR	1474674	GotoStatement	goto FAILED ;	7098:16:231662:231673	1466025	1	True				
ANR	1474675	Identifier	FAILED		1466025	0					
ANR	1474676	ExpressionStatement	"memcpy ( newspace , cd -> named_groups , cd -> named_group_list_size * sizeof ( named_group ) )"	7101:14:231708:231807	1466025	3	True				
ANR	1474677	CallExpression	"memcpy ( newspace , cd -> named_groups , cd -> named_group_list_size * sizeof ( named_group ) )"		1466025	0					
ANR	1474678	Callee	memcpy		1466025	0					
ANR	1474679	Identifier	memcpy		1466025	0					
ANR	1474680	ArgumentList	newspace		1466025	1					
ANR	1474681	Argument	newspace		1466025	0					
ANR	1474682	Identifier	newspace		1466025	0					
ANR	1474683	Argument	cd -> named_groups		1466025	1					
ANR	1474684	PtrMemberAccess	cd -> named_groups		1466025	0					
ANR	1474685	Identifier	cd		1466025	0					
ANR	1474686	Identifier	named_groups		1466025	1					
ANR	1474687	Argument	cd -> named_group_list_size * sizeof ( named_group )		1466025	2					
ANR	1474688	MultiplicativeExpression	cd -> named_group_list_size * sizeof ( named_group )		1466025	0		*			
ANR	1474689	PtrMemberAccess	cd -> named_group_list_size		1466025	0					
ANR	1474690	Identifier	cd		1466025	0					
ANR	1474691	Identifier	named_group_list_size		1466025	1					
ANR	1474692	SizeofExpression	sizeof ( named_group )		1466025	1					
ANR	1474693	Sizeof	sizeof		1466025	0					
ANR	1474694	SizeofOperand	named_group		1466025	1					
ANR	1474695	IfStatement	if ( cd -> named_group_list_size > NAMED_GROUP_LIST_SIZE )		1466025	4					
ANR	1474696	Condition	cd -> named_group_list_size > NAMED_GROUP_LIST_SIZE	7103:18:231827:231875	1466025	0	True				
ANR	1474697	RelationalExpression	cd -> named_group_list_size > NAMED_GROUP_LIST_SIZE		1466025	0		>			
ANR	1474698	PtrMemberAccess	cd -> named_group_list_size		1466025	0					
ANR	1474699	Identifier	cd		1466025	0					
ANR	1474700	Identifier	named_group_list_size		1466025	1					
ANR	1474701	Identifier	NAMED_GROUP_LIST_SIZE		1466025	1					
ANR	1474702	ExpressionStatement	( PUBL ( free ) ) ( ( void * ) cd -> named_groups )	7104:16:231894:231932	1466025	1	True				
ANR	1474703	CallExpression	( PUBL ( free ) ) ( ( void * ) cd -> named_groups )		1466025	0					
ANR	1474704	Callee	PUBL ( free )		1466025	0					
ANR	1474705	CallExpression	PUBL ( free )		1466025	0					
ANR	1474706	Callee	PUBL		1466025	0					
ANR	1474707	Identifier	PUBL		1466025	0					
ANR	1474708	ArgumentList	free		1466025	1					
ANR	1474709	Argument	free		1466025	0					
ANR	1474710	Identifier	free		1466025	0					
ANR	1474711	ArgumentList	( void * ) cd -> named_groups		1466025	1					
ANR	1474712	Argument	( void * ) cd -> named_groups		1466025	0					
ANR	1474713	CastExpression	( void * ) cd -> named_groups		1466025	0					
ANR	1474714	CastTarget	void *		1466025	0					
ANR	1474715	PtrMemberAccess	cd -> named_groups		1466025	1					
ANR	1474716	Identifier	cd		1466025	0					
ANR	1474717	Identifier	named_groups		1466025	1					
ANR	1474718	ExpressionStatement	cd -> named_groups = newspace	7105:14:231948:231975	1466025	5	True				
ANR	1474719	AssignmentExpression	cd -> named_groups = newspace		1466025	0		=			
ANR	1474720	PtrMemberAccess	cd -> named_groups		1466025	0					
ANR	1474721	Identifier	cd		1466025	0					
ANR	1474722	Identifier	named_groups		1466025	1					
ANR	1474723	Identifier	newspace		1466025	1					
ANR	1474724	ExpressionStatement	cd -> named_group_list_size = newsize	7106:14:231991:232026	1466025	6	True				
ANR	1474725	AssignmentExpression	cd -> named_group_list_size = newsize		1466025	0		=			
ANR	1474726	PtrMemberAccess	cd -> named_group_list_size		1466025	0					
ANR	1474727	Identifier	cd		1466025	0					
ANR	1474728	Identifier	named_group_list_size		1466025	1					
ANR	1474729	Identifier	newsize		1466025	1					
ANR	1474730	ExpressionStatement	cd -> named_groups [ cd -> names_found ] . name = name	7109:12:232057:232102	1466025	1	True				
ANR	1474731	AssignmentExpression	cd -> named_groups [ cd -> names_found ] . name = name		1466025	0		=			
ANR	1474732	MemberAccess	cd -> named_groups [ cd -> names_found ] . name		1466025	0					
ANR	1474733	ArrayIndexing	cd -> named_groups [ cd -> names_found ]		1466025	0					
ANR	1474734	PtrMemberAccess	cd -> named_groups		1466025	0					
ANR	1474735	Identifier	cd		1466025	0					
ANR	1474736	Identifier	named_groups		1466025	1					
ANR	1474737	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1474738	Identifier	cd		1466025	0					
ANR	1474739	Identifier	names_found		1466025	1					
ANR	1474740	Identifier	name		1466025	1					
ANR	1474741	Identifier	name		1466025	1					
ANR	1474742	ExpressionStatement	cd -> named_groups [ cd -> names_found ] . length = namelen	7110:12:232116:232166	1466025	2	True				
ANR	1474743	AssignmentExpression	cd -> named_groups [ cd -> names_found ] . length = namelen		1466025	0		=			
ANR	1474744	MemberAccess	cd -> named_groups [ cd -> names_found ] . length		1466025	0					
ANR	1474745	ArrayIndexing	cd -> named_groups [ cd -> names_found ]		1466025	0					
ANR	1474746	PtrMemberAccess	cd -> named_groups		1466025	0					
ANR	1474747	Identifier	cd		1466025	0					
ANR	1474748	Identifier	named_groups		1466025	1					
ANR	1474749	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1474750	Identifier	cd		1466025	0					
ANR	1474751	Identifier	names_found		1466025	1					
ANR	1474752	Identifier	length		1466025	1					
ANR	1474753	Identifier	namelen		1466025	1					
ANR	1474754	ExpressionStatement	cd -> named_groups [ cd -> names_found ] . number = number	7111:12:232180:232229	1466025	3	True				
ANR	1474755	AssignmentExpression	cd -> named_groups [ cd -> names_found ] . number = number		1466025	0		=			
ANR	1474756	MemberAccess	cd -> named_groups [ cd -> names_found ] . number		1466025	0					
ANR	1474757	ArrayIndexing	cd -> named_groups [ cd -> names_found ]		1466025	0					
ANR	1474758	PtrMemberAccess	cd -> named_groups		1466025	0					
ANR	1474759	Identifier	cd		1466025	0					
ANR	1474760	Identifier	named_groups		1466025	1					
ANR	1474761	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1474762	Identifier	cd		1466025	0					
ANR	1474763	Identifier	names_found		1466025	1					
ANR	1474764	Identifier	number		1466025	1					
ANR	1474765	Identifier	number		1466025	1					
ANR	1474766	ExpressionStatement	cd -> names_found ++	7112:12:232243:232260	1466025	4	True				
ANR	1474767	PostIncDecOperationExpression	cd -> names_found ++		1466025	0					
ANR	1474768	PtrMemberAccess	cd -> names_found		1466025	0					
ANR	1474769	Identifier	cd		1466025	0					
ANR	1474770	Identifier	names_found		1466025	1					
ANR	1474771	IncDec	++		1466025	1					
ANR	1474772	ExpressionStatement	ptr ++	7116:8:232297:232302	1466025	62	True				
ANR	1474773	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1474774	Identifier	ptr		1466025	0					
ANR	1474775	IncDec	++		1466025	1					
ANR	1474776	GotoStatement	goto NUMBERED_GROUP ;	7117:8:232370:232389	1466025	63	True				
ANR	1474777	Identifier	NUMBERED_GROUP		1466025	0					
ANR	1474778	Label	case CHAR_AMPERSAND :	7121:8:232476:232495	1466025	64	True				
ANR	1474779	Identifier	CHAR_AMPERSAND		1466025	0					
ANR	1474780	ExpressionStatement	terminator = CHAR_RIGHT_PARENTHESIS	7122:8:232555:232590	1466025	65	True				
ANR	1474781	AssignmentExpression	terminator = CHAR_RIGHT_PARENTHESIS		1466025	0		=			
ANR	1474782	Identifier	terminator		1466025	0					
ANR	1474783	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1474784	ExpressionStatement	is_recurse = TRUE	7123:8:232600:232617	1466025	66	True				
ANR	1474785	AssignmentExpression	is_recurse = TRUE		1466025	0		=			
ANR	1474786	Identifier	is_recurse		1466025	0					
ANR	1474787	Identifier	TRUE		1466025	1					
ANR	1474788	Label	NAMED_REF_OR_RECURSE :	7132:8:233038:233058	1466025	67	True				
ANR	1474789	Identifier	NAMED_REF_OR_RECURSE		1466025	0					
ANR	1474790	ExpressionStatement	name = ++ ptr	7133:8:233068:233080	1466025	68	True				
ANR	1474791	AssignmentExpression	name = ++ ptr		1466025	0		=			
ANR	1474792	Identifier	name		1466025	0					
ANR	1474793	UnaryExpression	++ ptr		1466025	1					
ANR	1474794	IncDec	++		1466025	0					
ANR	1474795	Identifier	ptr		1466025	1					
ANR	1474796	IfStatement	if ( IS_DIGIT ( * ptr ) )		1466025	69					
ANR	1474797	Condition	IS_DIGIT ( * ptr )	7134:12:233094:233107	1466025	0	True				
ANR	1474798	CallExpression	IS_DIGIT ( * ptr )		1466025	0					
ANR	1474799	Callee	IS_DIGIT		1466025	0					
ANR	1474800	Identifier	IS_DIGIT		1466025	0					
ANR	1474801	ArgumentList	* ptr		1466025	1					
ANR	1474802	Argument	* ptr		1466025	0					
ANR	1474803	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474804	UnaryOperator	*		1466025	0					
ANR	1474805	Identifier	ptr		1466025	1					
ANR	1474806	CompoundStatement		2696:10:93875:93875	1466025	1					
ANR	1474807	ExpressionStatement	* errorcodeptr = ERR84	7136:10:233132:233153	1466025	0	True				
ANR	1474808	AssignmentExpression	* errorcodeptr = ERR84		1466025	0		=			
ANR	1474809	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474810	UnaryOperator	*		1466025	0					
ANR	1474811	Identifier	errorcodeptr		1466025	1					
ANR	1474812	Identifier	ERR84		1466025	1					
ANR	1474813	GotoStatement	goto FAILED ;	7137:10:233210:233221	1466025	1	True				
ANR	1474814	Identifier	FAILED		1466025	0					
ANR	1474815	WhileStatement	while ( MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0 )		1466025	70					
ANR	1474816	Condition	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0	7139:15:233250:233302	1466025	0	True				
ANR	1474817	AndExpression	MAX_255 ( * ptr ) && ( cd -> ctypes [ * ptr ] & ctype_word ) != 0		1466025	0		&&			
ANR	1474818	CallExpression	MAX_255 ( * ptr )		1466025	0					
ANR	1474819	Callee	MAX_255		1466025	0					
ANR	1474820	Identifier	MAX_255		1466025	0					
ANR	1474821	ArgumentList	* ptr		1466025	1					
ANR	1474822	Argument	* ptr		1466025	0					
ANR	1474823	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474824	UnaryOperator	*		1466025	0					
ANR	1474825	Identifier	ptr		1466025	1					
ANR	1474826	EqualityExpression	( cd -> ctypes [ * ptr ] & ctype_word ) != 0		1466025	1		!=			
ANR	1474827	BitAndExpression	cd -> ctypes [ * ptr ] & ctype_word		1466025	0		&			
ANR	1474828	ArrayIndexing	cd -> ctypes [ * ptr ]		1466025	0					
ANR	1474829	PtrMemberAccess	cd -> ctypes		1466025	0					
ANR	1474830	Identifier	cd		1466025	0					
ANR	1474831	Identifier	ctypes		1466025	1					
ANR	1474832	UnaryOperationExpression	* ptr		1466025	1					
ANR	1474833	UnaryOperator	*		1466025	0					
ANR	1474834	Identifier	ptr		1466025	1					
ANR	1474835	Identifier	ctype_word		1466025	1					
ANR	1474836	PrimaryExpression	0		1466025	1					
ANR	1474837	ExpressionStatement	ptr ++	7139:70:233305:233310	1466025	1	True				
ANR	1474838	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1474839	Identifier	ptr		1466025	0					
ANR	1474840	IncDec	++		1466025	1					
ANR	1474841	ExpressionStatement	namelen = ( int ) ( ptr - name )	7140:8:233320:233347	1466025	71	True				
ANR	1474842	AssignmentExpression	namelen = ( int ) ( ptr - name )		1466025	0		=			
ANR	1474843	Identifier	namelen		1466025	0					
ANR	1474844	CastExpression	( int ) ( ptr - name )		1466025	1					
ANR	1474845	CastTarget	int		1466025	0					
ANR	1474846	AdditiveExpression	ptr - name		1466025	1		-			
ANR	1474847	Identifier	ptr		1466025	0					
ANR	1474848	Identifier	name		1466025	1					
ANR	1474849	IfStatement	if ( lengthptr != NULL )		1466025	72					
ANR	1474850	Condition	lengthptr != NULL	7149:12:233796:233812	1466025	0	True				
ANR	1474851	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1474852	Identifier	lengthptr		1466025	0					
ANR	1474853	Identifier	NULL		1466025	1					
ANR	1474854	CompoundStatement		2712:10:94592:94607	1466025	1					
ANR	1474855	IdentifierDeclStatement	named_group * ng ;	7151:10:233837:233852	1466025	0	True				
ANR	1474856	IdentifierDecl	* ng		1466025	0					
ANR	1474857	IdentifierDeclType	named_group *		1466025	0					
ANR	1474858	Identifier	ng		1466025	1					
ANR	1474859	IfStatement	if ( namelen == 0 )		1466025	1					
ANR	1474860	Condition	namelen == 0	7153:14:233869:233880	1466025	0	True				
ANR	1474861	EqualityExpression	namelen == 0		1466025	0		==			
ANR	1474862	Identifier	namelen		1466025	0					
ANR	1474863	PrimaryExpression	0		1466025	1					
ANR	1474864	CompoundStatement		2715:12:94650:94650	1466025	1					
ANR	1474865	ExpressionStatement	* errorcodeptr = ERR62	7155:12:233909:233930	1466025	0	True				
ANR	1474866	AssignmentExpression	* errorcodeptr = ERR62		1466025	0		=			
ANR	1474867	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474868	UnaryOperator	*		1466025	0					
ANR	1474869	Identifier	errorcodeptr		1466025	1					
ANR	1474870	Identifier	ERR62		1466025	1					
ANR	1474871	GotoStatement	goto FAILED ;	7156:12:233944:233955	1466025	1	True				
ANR	1474872	Identifier	FAILED		1466025	0					
ANR	1474873	IfStatement	if ( * ptr != ( pcre_uchar ) terminator )		1466025	2					
ANR	1474874	Condition	* ptr != ( pcre_uchar ) terminator	7158:14:233985:234014	1466025	0	True				
ANR	1474875	EqualityExpression	* ptr != ( pcre_uchar ) terminator		1466025	0		!=			
ANR	1474876	UnaryOperationExpression	* ptr		1466025	0					
ANR	1474877	UnaryOperator	*		1466025	0					
ANR	1474878	Identifier	ptr		1466025	1					
ANR	1474879	CastExpression	( pcre_uchar ) terminator		1466025	1					
ANR	1474880	CastTarget	pcre_uchar		1466025	0					
ANR	1474881	Identifier	terminator		1466025	1					
ANR	1474882	CompoundStatement		2720:12:94784:94784	1466025	1					
ANR	1474883	ExpressionStatement	* errorcodeptr = ERR42	7160:12:234043:234064	1466025	0	True				
ANR	1474884	AssignmentExpression	* errorcodeptr = ERR42		1466025	0		=			
ANR	1474885	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474886	UnaryOperator	*		1466025	0					
ANR	1474887	Identifier	errorcodeptr		1466025	1					
ANR	1474888	Identifier	ERR42		1466025	1					
ANR	1474889	GotoStatement	goto FAILED ;	7161:12:234078:234089	1466025	1	True				
ANR	1474890	Identifier	FAILED		1466025	0					
ANR	1474891	IfStatement	if ( namelen > MAX_NAME_SIZE )		1466025	3					
ANR	1474892	Condition	namelen > MAX_NAME_SIZE	7163:14:234119:234141	1466025	0	True				
ANR	1474893	RelationalExpression	namelen > MAX_NAME_SIZE		1466025	0		>			
ANR	1474894	Identifier	namelen		1466025	0					
ANR	1474895	Identifier	MAX_NAME_SIZE		1466025	1					
ANR	1474896	CompoundStatement		2725:12:94911:94911	1466025	1					
ANR	1474897	ExpressionStatement	* errorcodeptr = ERR48	7165:12:234170:234191	1466025	0	True				
ANR	1474898	AssignmentExpression	* errorcodeptr = ERR48		1466025	0		=			
ANR	1474899	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1474900	UnaryOperator	*		1466025	0					
ANR	1474901	Identifier	errorcodeptr		1466025	1					
ANR	1474902	Identifier	ERR48		1466025	1					
ANR	1474903	GotoStatement	goto FAILED ;	7166:12:234205:234216	1466025	1	True				
ANR	1474904	Identifier	FAILED		1466025	0					
ANR	1474905	ExpressionStatement	ng = cd -> named_groups	7174:10:234495:234516	1466025	4	True				
ANR	1474906	AssignmentExpression	ng = cd -> named_groups		1466025	0		=			
ANR	1474907	Identifier	ng		1466025	0					
ANR	1474908	PtrMemberAccess	cd -> named_groups		1466025	1					
ANR	1474909	Identifier	cd		1466025	0					
ANR	1474910	Identifier	named_groups		1466025	1					
ANR	1474911	ForStatement	"for ( i = 0 ; i < cd -> names_found ; i ++ , ng ++ )"		1466025	5					
ANR	1474912	ForInit	i = 0 ;	7175:15:234533:234538	1466025	0	True				
ANR	1474913	AssignmentExpression	i = 0		1466025	0		=			
ANR	1474914	Identifier	i		1466025	0					
ANR	1474915	PrimaryExpression	0		1466025	1					
ANR	1474916	Condition	i < cd -> names_found	7175:22:234540:234558	1466025	1	True				
ANR	1474917	RelationalExpression	i < cd -> names_found		1466025	0		<			
ANR	1474918	Identifier	i		1466025	0					
ANR	1474919	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1474920	Identifier	cd		1466025	0					
ANR	1474921	Identifier	names_found		1466025	1					
ANR	1474922	Expression	"i ++ , ng ++"	7175:43:234561:234569	1466025	2	True				
ANR	1474923	PostIncDecOperationExpression	i ++		1466025	0					
ANR	1474924	Identifier	i		1466025	0					
ANR	1474925	IncDec	++		1466025	1					
ANR	1474926	PostIncDecOperationExpression	ng ++		1466025	1					
ANR	1474927	Identifier	ng		1466025	0					
ANR	1474928	IncDec	++		1466025	1					
ANR	1474929	CompoundStatement		2737:12:95339:95339	1466025	3					
ANR	1474930	IfStatement	"if ( namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0 )"		1466025	0					
ANR	1474931	Condition	"namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"	7177:16:234602:234685	1466025	0	True				
ANR	1474932	AndExpression	"namelen == ng -> length && STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"		1466025	0		&&			
ANR	1474933	EqualityExpression	namelen == ng -> length		1466025	0		==			
ANR	1474934	Identifier	namelen		1466025	0					
ANR	1474935	PtrMemberAccess	ng -> length		1466025	1					
ANR	1474936	Identifier	ng		1466025	0					
ANR	1474937	Identifier	length		1466025	1					
ANR	1474938	EqualityExpression	"STRNCMP_UC_UC ( name , ng -> name , namelen ) == 0"		1466025	1		==			
ANR	1474939	CallExpression	"STRNCMP_UC_UC ( name , ng -> name , namelen )"		1466025	0					
ANR	1474940	Callee	STRNCMP_UC_UC		1466025	0					
ANR	1474941	Identifier	STRNCMP_UC_UC		1466025	0					
ANR	1474942	ArgumentList	name		1466025	1					
ANR	1474943	Argument	name		1466025	0					
ANR	1474944	Identifier	name		1466025	0					
ANR	1474945	Argument	ng -> name		1466025	1					
ANR	1474946	PtrMemberAccess	ng -> name		1466025	0					
ANR	1474947	Identifier	ng		1466025	0					
ANR	1474948	Identifier	name		1466025	1					
ANR	1474949	Argument	namelen		1466025	2					
ANR	1474950	Identifier	namelen		1466025	0					
ANR	1474951	PrimaryExpression	0		1466025	1					
ANR	1474952	BreakStatement	break ;	7179:14:234702:234707	1466025	1	True				
ANR	1474953	ExpressionStatement	recno = ( i < cd -> names_found ) ? ng -> number : 0	7181:10:234733:234778	1466025	6	True				
ANR	1474954	AssignmentExpression	recno = ( i < cd -> names_found ) ? ng -> number : 0		1466025	0		=			
ANR	1474955	Identifier	recno		1466025	0					
ANR	1474956	ConditionalExpression	( i < cd -> names_found ) ? ng -> number : 0		1466025	1					
ANR	1474957	Condition	i < cd -> names_found		1466025	0					
ANR	1474958	RelationalExpression	i < cd -> names_found		1466025	0		<			
ANR	1474959	Identifier	i		1466025	0					
ANR	1474960	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1474961	Identifier	cd		1466025	0					
ANR	1474962	Identifier	names_found		1466025	1					
ANR	1474963	PtrMemberAccess	ng -> number		1466025	1					
ANR	1474964	Identifier	ng		1466025	0					
ANR	1474965	Identifier	number		1466025	1					
ANR	1474966	PrimaryExpression	0		1466025	2					
ANR	1474967	IfStatement	if ( ! is_recurse )		1466025	7					
ANR	1474968	Condition	! is_recurse	7185:14:234841:234851	1466025	0	True				
ANR	1474969	UnaryOperationExpression	! is_recurse		1466025	0					
ANR	1474970	UnaryOperator	!		1466025	0					
ANR	1474971	Identifier	is_recurse		1466025	1					
ANR	1474972	ExpressionStatement	cd -> namedrefcount ++	7185:27:234854:234873	1466025	1	True				
ANR	1474973	PostIncDecOperationExpression	cd -> namedrefcount ++		1466025	0					
ANR	1474974	PtrMemberAccess	cd -> namedrefcount		1466025	0					
ANR	1474975	Identifier	cd		1466025	0					
ANR	1474976	Identifier	namedrefcount		1466025	1					
ANR	1474977	IncDec	++		1466025	1					
ANR	1474978	ExpressionStatement	* lengthptr += IMM2_SIZE	7191:10:235072:235095	1466025	8	True				
ANR	1474979	AssignmentExpression	* lengthptr += IMM2_SIZE		1466025	0		+=			
ANR	1474980	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1474981	UnaryOperator	*		1466025	0					
ANR	1474982	Identifier	lengthptr		1466025	1					
ANR	1474983	Identifier	IMM2_SIZE		1466025	1					
ANR	1474984	ElseStatement	else		1466025	0					
ANR	1474985	CompoundStatement		2761:10:96186:96186	1466025	0					
ANR	1474986	ExpressionStatement	slot = cd -> name_table	7201:10:235443:235464	1466025	0	True				
ANR	1474987	AssignmentExpression	slot = cd -> name_table		1466025	0		=			
ANR	1474988	Identifier	slot		1466025	0					
ANR	1474989	PtrMemberAccess	cd -> name_table		1466025	1					
ANR	1474990	Identifier	cd		1466025	0					
ANR	1474991	Identifier	name_table		1466025	1					
ANR	1474992	ForStatement	for ( i = 0 ; i < cd -> names_found ; i ++ )		1466025	1					
ANR	1474993	ForInit	i = 0 ;	7202:15:235481:235486	1466025	0	True				
ANR	1474994	AssignmentExpression	i = 0		1466025	0		=			
ANR	1474995	Identifier	i		1466025	0					
ANR	1474996	PrimaryExpression	0		1466025	1					
ANR	1474997	Condition	i < cd -> names_found	7202:22:235488:235506	1466025	1	True				
ANR	1474998	RelationalExpression	i < cd -> names_found		1466025	0		<			
ANR	1474999	Identifier	i		1466025	0					
ANR	1475000	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1475001	Identifier	cd		1466025	0					
ANR	1475002	Identifier	names_found		1466025	1					
ANR	1475003	PostIncDecOperationExpression	i ++	7202:43:235509:235511	1466025	2	True				
ANR	1475004	Identifier	i		1466025	0					
ANR	1475005	IncDec	++		1466025	1					
ANR	1475006	CompoundStatement		2764:12:96281:96281	1466025	3					
ANR	1475007	IfStatement	"if ( STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0 && slot [ IMM2_SIZE + namelen ] == 0 )"		1466025	0					
ANR	1475008	Condition	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0 && slot [ IMM2_SIZE + namelen ] == 0"	7204:16:235544:235640	1466025	0	True				
ANR	1475009	AndExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0 && slot [ IMM2_SIZE + namelen ] == 0"		1466025	0		&&			
ANR	1475010	EqualityExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen ) == 0"		1466025	0		==			
ANR	1475011	CallExpression	"STRNCMP_UC_UC ( name , slot + IMM2_SIZE , namelen )"		1466025	0					
ANR	1475012	Callee	STRNCMP_UC_UC		1466025	0					
ANR	1475013	Identifier	STRNCMP_UC_UC		1466025	0					
ANR	1475014	ArgumentList	name		1466025	1					
ANR	1475015	Argument	name		1466025	0					
ANR	1475016	Identifier	name		1466025	0					
ANR	1475017	Argument	slot + IMM2_SIZE		1466025	1					
ANR	1475018	AdditiveExpression	slot + IMM2_SIZE		1466025	0		+			
ANR	1475019	Identifier	slot		1466025	0					
ANR	1475020	Identifier	IMM2_SIZE		1466025	1					
ANR	1475021	Argument	namelen		1466025	2					
ANR	1475022	Identifier	namelen		1466025	0					
ANR	1475023	PrimaryExpression	0		1466025	1					
ANR	1475024	EqualityExpression	slot [ IMM2_SIZE + namelen ] == 0		1466025	1		==			
ANR	1475025	ArrayIndexing	slot [ IMM2_SIZE + namelen ]		1466025	0					
ANR	1475026	Identifier	slot		1466025	0					
ANR	1475027	AdditiveExpression	IMM2_SIZE + namelen		1466025	1		+			
ANR	1475028	Identifier	IMM2_SIZE		1466025	0					
ANR	1475029	Identifier	namelen		1466025	1					
ANR	1475030	PrimaryExpression	0		1466025	1					
ANR	1475031	BreakStatement	break ;	7206:14:235657:235662	1466025	1	True				
ANR	1475032	ExpressionStatement	slot += cd -> name_entry_size	7207:12:235676:235703	1466025	1	True				
ANR	1475033	AssignmentExpression	slot += cd -> name_entry_size		1466025	0		+=			
ANR	1475034	Identifier	slot		1466025	0					
ANR	1475035	PtrMemberAccess	cd -> name_entry_size		1466025	1					
ANR	1475036	Identifier	cd		1466025	0					
ANR	1475037	Identifier	name_entry_size		1466025	1					
ANR	1475038	IfStatement	if ( i < cd -> names_found )		1466025	2					
ANR	1475039	Condition	i < cd -> names_found	7210:14:235734:235752	1466025	0	True				
ANR	1475040	RelationalExpression	i < cd -> names_found		1466025	0		<			
ANR	1475041	Identifier	i		1466025	0					
ANR	1475042	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1475043	Identifier	cd		1466025	0					
ANR	1475044	Identifier	names_found		1466025	1					
ANR	1475045	CompoundStatement		2772:12:96522:96522	1466025	1					
ANR	1475046	ExpressionStatement	"recno = GET2 ( slot , 0 )"	7212:12:235781:235802	1466025	0	True				
ANR	1475047	AssignmentExpression	"recno = GET2 ( slot , 0 )"		1466025	0		=			
ANR	1475048	Identifier	recno		1466025	0					
ANR	1475049	CallExpression	"GET2 ( slot , 0 )"		1466025	1					
ANR	1475050	Callee	GET2		1466025	0					
ANR	1475051	Identifier	GET2		1466025	0					
ANR	1475052	ArgumentList	slot		1466025	1					
ANR	1475053	Argument	slot		1466025	0					
ANR	1475054	Identifier	slot		1466025	0					
ANR	1475055	Argument	0		1466025	1					
ANR	1475056	PrimaryExpression	0		1466025	0					
ANR	1475057	ElseStatement	else		1466025	0					
ANR	1475058	CompoundStatement		2776:12:96600:96600	1466025	0					
ANR	1475059	ExpressionStatement	* errorcodeptr = ERR15	7216:12:235859:235880	1466025	0	True				
ANR	1475060	AssignmentExpression	* errorcodeptr = ERR15		1466025	0		=			
ANR	1475061	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475062	UnaryOperator	*		1466025	0					
ANR	1475063	Identifier	errorcodeptr		1466025	1					
ANR	1475064	Identifier	ERR15		1466025	1					
ANR	1475065	GotoStatement	goto FAILED ;	7217:12:235894:235905	1466025	1	True				
ANR	1475066	Identifier	FAILED		1466025	0					
ANR	1475067	IfStatement	if ( is_recurse )		1466025	73					
ANR	1475068	Condition	is_recurse	7224:12:236061:236070	1466025	0	True				
ANR	1475069	Identifier	is_recurse		1466025	0					
ANR	1475070	GotoStatement	goto HANDLE_RECURSION ;	7224:24:236073:236094	1466025	1	True				
ANR	1475071	Identifier	HANDLE_RECURSION		1466025	0					
ANR	1475072	IfStatement	if ( lengthptr == NULL && cd -> dupnames )		1466025	74					
ANR	1475073	Condition	lengthptr == NULL && cd -> dupnames	7229:12:236229:236261	1466025	0	True				
ANR	1475074	AndExpression	lengthptr == NULL && cd -> dupnames		1466025	0		&&			
ANR	1475075	EqualityExpression	lengthptr == NULL		1466025	0		==			
ANR	1475076	Identifier	lengthptr		1466025	0					
ANR	1475077	Identifier	NULL		1466025	1					
ANR	1475078	PtrMemberAccess	cd -> dupnames		1466025	1					
ANR	1475079	Identifier	cd		1466025	0					
ANR	1475080	Identifier	dupnames		1466025	1					
ANR	1475081	CompoundStatement		2794:10:97100:97146	1466025	1					
ANR	1475082	IdentifierDeclStatement	int count = 1 ;	7231:10:236286:236299	1466025	0	True				
ANR	1475083	IdentifierDecl	count = 1		1466025	0					
ANR	1475084	IdentifierDeclType	int		1466025	0					
ANR	1475085	Identifier	count		1466025	1					
ANR	1475086	AssignmentExpression	count = 1		1466025	2		=			
ANR	1475087	Identifier	count		1466025	0					
ANR	1475088	PrimaryExpression	1		1466025	1					
ANR	1475089	IdentifierDeclStatement	unsigned int index = i ;	7232:10:236311:236333	1466025	1	True				
ANR	1475090	IdentifierDecl	index = i		1466025	0					
ANR	1475091	IdentifierDeclType	unsigned int		1466025	0					
ANR	1475092	Identifier	index		1466025	1					
ANR	1475093	AssignmentExpression	index = i		1466025	2		=			
ANR	1475094	Identifier	i		1466025	0					
ANR	1475095	Identifier	i		1466025	1					
ANR	1475096	IdentifierDeclStatement	pcre_uchar * cslot = slot + cd -> name_entry_size ;	7233:10:236345:236391	1466025	2	True				
ANR	1475097	IdentifierDecl	* cslot = slot + cd -> name_entry_size		1466025	0					
ANR	1475098	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1475099	Identifier	cslot		1466025	1					
ANR	1475100	AssignmentExpression	* cslot = slot + cd -> name_entry_size		1466025	2		=			
ANR	1475101	Identifier	cslot		1466025	0					
ANR	1475102	AdditiveExpression	slot + cd -> name_entry_size		1466025	1		+			
ANR	1475103	Identifier	slot		1466025	0					
ANR	1475104	PtrMemberAccess	cd -> name_entry_size		1466025	1					
ANR	1475105	Identifier	cd		1466025	0					
ANR	1475106	Identifier	name_entry_size		1466025	1					
ANR	1475107	ForStatement	for ( i ++ ; i < cd -> names_found ; i ++ )		1466025	3					
ANR	1475108	ForInit	i ++ ;	7235:15:236409:236412	1466025	0	True				
ANR	1475109	PostIncDecOperationExpression	i ++		1466025	0					
ANR	1475110	Identifier	i		1466025	0					
ANR	1475111	IncDec	++		1466025	1					
ANR	1475112	Condition	i < cd -> names_found	7235:20:236414:236432	1466025	1	True				
ANR	1475113	RelationalExpression	i < cd -> names_found		1466025	0		<			
ANR	1475114	Identifier	i		1466025	0					
ANR	1475115	PtrMemberAccess	cd -> names_found		1466025	1					
ANR	1475116	Identifier	cd		1466025	0					
ANR	1475117	Identifier	names_found		1466025	1					
ANR	1475118	PostIncDecOperationExpression	i ++	7235:41:236435:236437	1466025	2	True				
ANR	1475119	Identifier	i		1466025	0					
ANR	1475120	IncDec	++		1466025	1					
ANR	1475121	CompoundStatement		2797:12:97207:97207	1466025	3					
ANR	1475122	IfStatement	"if ( STRCMP_UC_UC ( slot + IMM2_SIZE , cslot + IMM2_SIZE ) != 0 )"		1466025	0					
ANR	1475123	Condition	"STRCMP_UC_UC ( slot + IMM2_SIZE , cslot + IMM2_SIZE ) != 0"	7237:16:236470:236523	1466025	0	True				
ANR	1475124	EqualityExpression	"STRCMP_UC_UC ( slot + IMM2_SIZE , cslot + IMM2_SIZE ) != 0"		1466025	0		!=			
ANR	1475125	CallExpression	"STRCMP_UC_UC ( slot + IMM2_SIZE , cslot + IMM2_SIZE )"		1466025	0					
ANR	1475126	Callee	STRCMP_UC_UC		1466025	0					
ANR	1475127	Identifier	STRCMP_UC_UC		1466025	0					
ANR	1475128	ArgumentList	slot + IMM2_SIZE		1466025	1					
ANR	1475129	Argument	slot + IMM2_SIZE		1466025	0					
ANR	1475130	AdditiveExpression	slot + IMM2_SIZE		1466025	0		+			
ANR	1475131	Identifier	slot		1466025	0					
ANR	1475132	Identifier	IMM2_SIZE		1466025	1					
ANR	1475133	Argument	cslot + IMM2_SIZE		1466025	1					
ANR	1475134	AdditiveExpression	cslot + IMM2_SIZE		1466025	0		+			
ANR	1475135	Identifier	cslot		1466025	0					
ANR	1475136	Identifier	IMM2_SIZE		1466025	1					
ANR	1475137	PrimaryExpression	0		1466025	1					
ANR	1475138	BreakStatement	break ;	7237:72:236526:236531	1466025	1	True				
ANR	1475139	ExpressionStatement	count ++	7240:12:236547:236554	1466025	1	True				
ANR	1475140	PostIncDecOperationExpression	count ++		1466025	0					
ANR	1475141	Identifier	count		1466025	0					
ANR	1475142	IncDec	++		1466025	1					
ANR	1475143	ExpressionStatement	cslot += cd -> name_entry_size	7241:12:236568:236596	1466025	2	True				
ANR	1475144	AssignmentExpression	cslot += cd -> name_entry_size		1466025	0		+=			
ANR	1475145	Identifier	cslot		1466025	0					
ANR	1475146	PtrMemberAccess	cd -> name_entry_size		1466025	1					
ANR	1475147	Identifier	cd		1466025	0					
ANR	1475148	Identifier	name_entry_size		1466025	1					
ANR	1475149	IfStatement	if ( count > 1 )		1466025	4					
ANR	1475150	Condition	count > 1	7244:14:236627:236635	1466025	0	True				
ANR	1475151	RelationalExpression	count > 1		1466025	0		>			
ANR	1475152	Identifier	count		1466025	0					
ANR	1475153	PrimaryExpression	1		1466025	1					
ANR	1475154	CompoundStatement		2806:12:97405:97405	1466025	1					
ANR	1475155	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	0					
ANR	1475156	Condition	firstcharflags == REQ_UNSET	7246:16:236668:236694	1466025	0	True				
ANR	1475157	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1475158	Identifier	firstcharflags		1466025	0					
ANR	1475159	Identifier	REQ_UNSET		1466025	1					
ANR	1475160	ExpressionStatement	firstcharflags = REQ_NONE	7246:45:236697:236722	1466025	1	True				
ANR	1475161	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1475162	Identifier	firstcharflags		1466025	0					
ANR	1475163	Identifier	REQ_NONE		1466025	1					
ANR	1475164	ExpressionStatement	previous = code	7247:12:236736:236751	1466025	1	True				
ANR	1475165	AssignmentExpression	previous = code		1466025	0		=			
ANR	1475166	Identifier	previous		1466025	0					
ANR	1475167	Identifier	code		1466025	1					
ANR	1475168	ExpressionStatement	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_DNREFI : OP_DNREF	7248:12:236765:236829	1466025	2	True				
ANR	1475169	AssignmentExpression	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_DNREFI : OP_DNREF		1466025	0		=			
ANR	1475170	UnaryOperationExpression	* code ++		1466025	0					
ANR	1475171	UnaryOperator	*		1466025	0					
ANR	1475172	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1475173	Identifier	code		1466025	0					
ANR	1475174	IncDec	++		1466025	1					
ANR	1475175	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? OP_DNREFI : OP_DNREF		1466025	1					
ANR	1475176	Condition	( options & PCRE_CASELESS ) != 0		1466025	0					
ANR	1475177	EqualityExpression	( options & PCRE_CASELESS ) != 0		1466025	0		!=			
ANR	1475178	BitAndExpression	options & PCRE_CASELESS		1466025	0		&			
ANR	1475179	Identifier	options		1466025	0					
ANR	1475180	Identifier	PCRE_CASELESS		1466025	1					
ANR	1475181	PrimaryExpression	0		1466025	1					
ANR	1475182	Identifier	OP_DNREFI		1466025	1					
ANR	1475183	Identifier	OP_DNREF		1466025	2					
ANR	1475184	ExpressionStatement	"PUT2INC ( code , 0 , index )"	7249:12:236843:236866	1466025	3	True				
ANR	1475185	CallExpression	"PUT2INC ( code , 0 , index )"		1466025	0					
ANR	1475186	Callee	PUT2INC		1466025	0					
ANR	1475187	Identifier	PUT2INC		1466025	0					
ANR	1475188	ArgumentList	code		1466025	1					
ANR	1475189	Argument	code		1466025	0					
ANR	1475190	Identifier	code		1466025	0					
ANR	1475191	Argument	0		1466025	1					
ANR	1475192	PrimaryExpression	0		1466025	0					
ANR	1475193	Argument	index		1466025	2					
ANR	1475194	Identifier	index		1466025	0					
ANR	1475195	ExpressionStatement	"PUT2INC ( code , 0 , count )"	7250:12:236880:236903	1466025	4	True				
ANR	1475196	CallExpression	"PUT2INC ( code , 0 , count )"		1466025	0					
ANR	1475197	Callee	PUT2INC		1466025	0					
ANR	1475198	Identifier	PUT2INC		1466025	0					
ANR	1475199	ArgumentList	code		1466025	1					
ANR	1475200	Argument	code		1466025	0					
ANR	1475201	Identifier	code		1466025	0					
ANR	1475202	Argument	0		1466025	1					
ANR	1475203	PrimaryExpression	0		1466025	0					
ANR	1475204	Argument	count		1466025	2					
ANR	1475205	Identifier	count		1466025	0					
ANR	1475206	ForStatement	for ( ; slot < cslot ; slot += cd -> name_entry_size )		1466025	5					
ANR	1475207	Condition	slot < cslot	7254:19:236987:236998	1466025	0	True				
ANR	1475208	RelationalExpression	slot < cslot		1466025	0		<			
ANR	1475209	Identifier	slot		1466025	0					
ANR	1475210	Identifier	cslot		1466025	1					
ANR	1475211	AssignmentExpression	slot += cd -> name_entry_size	7254:33:237001:237027	1466025	1	True	+=			
ANR	1475212	Identifier	slot		1466025	0					
ANR	1475213	PtrMemberAccess	cd -> name_entry_size		1466025	1					
ANR	1475214	Identifier	cd		1466025	0					
ANR	1475215	Identifier	name_entry_size		1466025	1					
ANR	1475216	CompoundStatement		2817:14:97815:97831	1466025	2					
ANR	1475217	IdentifierDeclStatement	open_capitem * oc ;	7256:14:237060:237076	1466025	0	True				
ANR	1475218	IdentifierDecl	* oc		1466025	0					
ANR	1475219	IdentifierDeclType	open_capitem *		1466025	0					
ANR	1475220	Identifier	oc		1466025	1					
ANR	1475221	ExpressionStatement	"recno = GET2 ( slot , 0 )"	7257:14:237092:237113	1466025	1	True				
ANR	1475222	AssignmentExpression	"recno = GET2 ( slot , 0 )"		1466025	0		=			
ANR	1475223	Identifier	recno		1466025	0					
ANR	1475224	CallExpression	"GET2 ( slot , 0 )"		1466025	1					
ANR	1475225	Callee	GET2		1466025	0					
ANR	1475226	Identifier	GET2		1466025	0					
ANR	1475227	ArgumentList	slot		1466025	1					
ANR	1475228	Argument	slot		1466025	0					
ANR	1475229	Identifier	slot		1466025	0					
ANR	1475230	Argument	0		1466025	1					
ANR	1475231	PrimaryExpression	0		1466025	0					
ANR	1475232	ExpressionStatement	cd -> backref_map |= ( recno < 32 ) ? ( 1 << recno ) : 1	7258:14:237129:237178	1466025	2	True				
ANR	1475233	AssignmentExpression	cd -> backref_map |= ( recno < 32 ) ? ( 1 << recno ) : 1		1466025	0		|=			
ANR	1475234	PtrMemberAccess	cd -> backref_map		1466025	0					
ANR	1475235	Identifier	cd		1466025	0					
ANR	1475236	Identifier	backref_map		1466025	1					
ANR	1475237	ConditionalExpression	( recno < 32 ) ? ( 1 << recno ) : 1		1466025	1					
ANR	1475238	Condition	recno < 32		1466025	0					
ANR	1475239	RelationalExpression	recno < 32		1466025	0		<			
ANR	1475240	Identifier	recno		1466025	0					
ANR	1475241	PrimaryExpression	32		1466025	1					
ANR	1475242	ShiftExpression	1 << recno		1466025	1		<<			
ANR	1475243	PrimaryExpression	1		1466025	0					
ANR	1475244	Identifier	recno		1466025	1					
ANR	1475245	PrimaryExpression	1		1466025	2					
ANR	1475246	IfStatement	if ( recno > cd -> top_backref )		1466025	3					
ANR	1475247	Condition	recno > cd -> top_backref	7259:18:237198:237220	1466025	0	True				
ANR	1475248	RelationalExpression	recno > cd -> top_backref		1466025	0		>			
ANR	1475249	Identifier	recno		1466025	0					
ANR	1475250	PtrMemberAccess	cd -> top_backref		1466025	1					
ANR	1475251	Identifier	cd		1466025	0					
ANR	1475252	Identifier	top_backref		1466025	1					
ANR	1475253	ExpressionStatement	cd -> top_backref = recno	7259:43:237223:237246	1466025	1	True				
ANR	1475254	AssignmentExpression	cd -> top_backref = recno		1466025	0		=			
ANR	1475255	PtrMemberAccess	cd -> top_backref		1466025	0					
ANR	1475256	Identifier	cd		1466025	0					
ANR	1475257	Identifier	top_backref		1466025	1					
ANR	1475258	Identifier	recno		1466025	1					
ANR	1475259	ForStatement	for ( oc = cd -> open_caps ; oc != NULL ; oc = oc -> next )		1466025	4					
ANR	1475260	ForInit	oc = cd -> open_caps ;	7265:19:237471:237489	1466025	0	True				
ANR	1475261	AssignmentExpression	oc = cd -> open_caps		1466025	0		=			
ANR	1475262	Identifier	oc		1466025	0					
ANR	1475263	PtrMemberAccess	cd -> open_caps		1466025	1					
ANR	1475264	Identifier	cd		1466025	0					
ANR	1475265	Identifier	open_caps		1466025	1					
ANR	1475266	Condition	oc != NULL	7265:39:237491:237500	1466025	1	True				
ANR	1475267	EqualityExpression	oc != NULL		1466025	0		!=			
ANR	1475268	Identifier	oc		1466025	0					
ANR	1475269	Identifier	NULL		1466025	1					
ANR	1475270	AssignmentExpression	oc = oc -> next	7265:51:237503:237515	1466025	2	True	=			
ANR	1475271	Identifier	oc		1466025	0					
ANR	1475272	PtrMemberAccess	oc -> next		1466025	1					
ANR	1475273	Identifier	oc		1466025	0					
ANR	1475274	Identifier	next		1466025	1					
ANR	1475275	CompoundStatement		2827:16:98289:98289	1466025	3					
ANR	1475276	IfStatement	if ( oc -> number == recno )		1466025	0					
ANR	1475277	Condition	oc -> number == recno	7267:20:237556:237574	1466025	0	True				
ANR	1475278	EqualityExpression	oc -> number == recno		1466025	0		==			
ANR	1475279	PtrMemberAccess	oc -> number		1466025	0					
ANR	1475280	Identifier	oc		1466025	0					
ANR	1475281	Identifier	number		1466025	1					
ANR	1475282	Identifier	recno		1466025	1					
ANR	1475283	CompoundStatement		2829:18:98350:98350	1466025	1					
ANR	1475284	ExpressionStatement	oc -> flag = TRUE	7269:18:237615:237630	1466025	0	True				
ANR	1475285	AssignmentExpression	oc -> flag = TRUE		1466025	0		=			
ANR	1475286	PtrMemberAccess	oc -> flag		1466025	0					
ANR	1475287	Identifier	oc		1466025	0					
ANR	1475288	Identifier	flag		1466025	1					
ANR	1475289	Identifier	TRUE		1466025	1					
ANR	1475290	BreakStatement	break ;	7270:18:237650:237655	1466025	1	True				
ANR	1475291	ContinueStatement	continue ;	7275:12:237724:237732	1466025	6	True				
ANR	1475292	GotoStatement	goto HANDLE_REFERENCE ;	7281:8:237854:237875	1466025	75	True				
ANR	1475293	Identifier	HANDLE_REFERENCE		1466025	0					
ANR	1475294	Label	case CHAR_R :	7285:8:237962:237973	1466025	76	True				
ANR	1475295	Identifier	CHAR_R		1466025	0					
ANR	1475296	ExpressionStatement	ptr ++	7286:8:238012:238017	1466025	77	True				
ANR	1475297	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1475298	Identifier	ptr		1466025	0					
ANR	1475299	IncDec	++		1466025	1					
ANR	1475300	Label	case CHAR_MINUS :	7291:8:238174:238189	1466025	78	True				
ANR	1475301	Identifier	CHAR_MINUS		1466025	0					
ANR	1475302	Label	case CHAR_PLUS :	7291:25:238191:238205	1466025	79	True				
ANR	1475303	Identifier	CHAR_PLUS		1466025	0					
ANR	1475304	Label	case CHAR_0 :	7292:8:238246:238257	1466025	80	True				
ANR	1475305	Identifier	CHAR_0		1466025	0					
ANR	1475306	Label	case CHAR_1 :	7292:21:238259:238270	1466025	81	True				
ANR	1475307	Identifier	CHAR_1		1466025	0					
ANR	1475308	Label	case CHAR_2 :	7292:34:238272:238283	1466025	82	True				
ANR	1475309	Identifier	CHAR_2		1466025	0					
ANR	1475310	Label	case CHAR_3 :	7292:47:238285:238296	1466025	83	True				
ANR	1475311	Identifier	CHAR_3		1466025	0					
ANR	1475312	Label	case CHAR_4 :	7292:60:238298:238309	1466025	84	True				
ANR	1475313	Identifier	CHAR_4		1466025	0					
ANR	1475314	Label	case CHAR_5 :	7293:8:238319:238330	1466025	85	True				
ANR	1475315	Identifier	CHAR_5		1466025	0					
ANR	1475316	Label	case CHAR_6 :	7293:21:238332:238343	1466025	86	True				
ANR	1475317	Identifier	CHAR_6		1466025	0					
ANR	1475318	Label	case CHAR_7 :	7293:34:238345:238356	1466025	87	True				
ANR	1475319	Identifier	CHAR_7		1466025	0					
ANR	1475320	Label	case CHAR_8 :	7293:47:238358:238369	1466025	88	True				
ANR	1475321	Identifier	CHAR_8		1466025	0					
ANR	1475322	Label	case CHAR_9 :	7293:60:238371:238382	1466025	89	True				
ANR	1475323	Identifier	CHAR_9		1466025	0					
ANR	1475324	CompoundStatement		2856:10:99161:99185	1466025	90					
ANR	1475325	IdentifierDeclStatement	const pcre_uchar * called ;	7295:10:238406:238430	1466025	0	True				
ANR	1475326	IdentifierDecl	* called		1466025	0					
ANR	1475327	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1475328	Identifier	called		1466025	1					
ANR	1475329	ExpressionStatement	terminator = CHAR_RIGHT_PARENTHESIS	7296:10:238442:238477	1466025	1	True				
ANR	1475330	AssignmentExpression	terminator = CHAR_RIGHT_PARENTHESIS		1466025	0		=			
ANR	1475331	Identifier	terminator		1466025	0					
ANR	1475332	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1475333	Label	HANDLE_NUMERICAL_RECURSION :	7304:10:238821:238847	1466025	2	True				
ANR	1475334	Identifier	HANDLE_NUMERICAL_RECURSION		1466025	0					
ANR	1475335	IfStatement	if ( ( refsign = * ptr ) == CHAR_PLUS )		1466025	3					
ANR	1475336	Condition	( refsign = * ptr ) == CHAR_PLUS	7306:14:238864:238892	1466025	0	True				
ANR	1475337	EqualityExpression	( refsign = * ptr ) == CHAR_PLUS		1466025	0		==			
ANR	1475338	AssignmentExpression	refsign = * ptr		1466025	0		=			
ANR	1475339	Identifier	refsign		1466025	0					
ANR	1475340	UnaryOperationExpression	* ptr		1466025	1					
ANR	1475341	UnaryOperator	*		1466025	0					
ANR	1475342	Identifier	ptr		1466025	1					
ANR	1475343	Identifier	CHAR_PLUS		1466025	1					
ANR	1475344	CompoundStatement		2868:12:99662:99662	1466025	1					
ANR	1475345	ExpressionStatement	ptr ++	7308:12:238921:238926	1466025	0	True				
ANR	1475346	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1475347	Identifier	ptr		1466025	0					
ANR	1475348	IncDec	++		1466025	1					
ANR	1475349	IfStatement	if ( ! IS_DIGIT ( * ptr ) )		1466025	1					
ANR	1475350	Condition	! IS_DIGIT ( * ptr )	7309:16:238944:238958	1466025	0	True				
ANR	1475351	UnaryOperationExpression	! IS_DIGIT ( * ptr )		1466025	0					
ANR	1475352	UnaryOperator	!		1466025	0					
ANR	1475353	CallExpression	IS_DIGIT ( * ptr )		1466025	1					
ANR	1475354	Callee	IS_DIGIT		1466025	0					
ANR	1475355	Identifier	IS_DIGIT		1466025	0					
ANR	1475356	ArgumentList	* ptr		1466025	1					
ANR	1475357	Argument	* ptr		1466025	0					
ANR	1475358	UnaryOperationExpression	* ptr		1466025	0					
ANR	1475359	UnaryOperator	*		1466025	0					
ANR	1475360	Identifier	ptr		1466025	1					
ANR	1475361	CompoundStatement		2871:14:99730:99730	1466025	1					
ANR	1475362	ExpressionStatement	* errorcodeptr = ERR63	7311:14:238991:239012	1466025	0	True				
ANR	1475363	AssignmentExpression	* errorcodeptr = ERR63		1466025	0		=			
ANR	1475364	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475365	UnaryOperator	*		1466025	0					
ANR	1475366	Identifier	errorcodeptr		1466025	1					
ANR	1475367	Identifier	ERR63		1466025	1					
ANR	1475368	GotoStatement	goto FAILED ;	7312:14:239028:239039	1466025	1	True				
ANR	1475369	Identifier	FAILED		1466025	0					
ANR	1475370	ElseStatement	else		1466025	0					
ANR	1475371	IfStatement	if ( refsign == CHAR_MINUS )		1466025	0					
ANR	1475372	Condition	refsign == CHAR_MINUS	7315:19:239090:239110	1466025	0	True				
ANR	1475373	EqualityExpression	refsign == CHAR_MINUS		1466025	0		==			
ANR	1475374	Identifier	refsign		1466025	0					
ANR	1475375	Identifier	CHAR_MINUS		1466025	1					
ANR	1475376	CompoundStatement		2877:12:99880:99880	1466025	1					
ANR	1475377	IfStatement	if ( ! IS_DIGIT ( ptr [ 1 ] ) )		1466025	0					
ANR	1475378	Condition	! IS_DIGIT ( ptr [ 1 ] )	7317:16:239143:239159	1466025	0	True				
ANR	1475379	UnaryOperationExpression	! IS_DIGIT ( ptr [ 1 ] )		1466025	0					
ANR	1475380	UnaryOperator	!		1466025	0					
ANR	1475381	CallExpression	IS_DIGIT ( ptr [ 1 ] )		1466025	1					
ANR	1475382	Callee	IS_DIGIT		1466025	0					
ANR	1475383	Identifier	IS_DIGIT		1466025	0					
ANR	1475384	ArgumentList	ptr [ 1 ]		1466025	1					
ANR	1475385	Argument	ptr [ 1 ]		1466025	0					
ANR	1475386	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1475387	Identifier	ptr		1466025	0					
ANR	1475388	PrimaryExpression	1		1466025	1					
ANR	1475389	GotoStatement	goto OTHER_CHAR_AFTER_QUERY ;	7318:14:239176:239203	1466025	1	True				
ANR	1475390	Identifier	OTHER_CHAR_AFTER_QUERY		1466025	0					
ANR	1475391	ExpressionStatement	ptr ++	7319:12:239217:239222	1466025	1	True				
ANR	1475392	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1475393	Identifier	ptr		1466025	0					
ANR	1475394	IncDec	++		1466025	1					
ANR	1475395	ExpressionStatement	recno = 0	7322:10:239249:239258	1466025	4	True				
ANR	1475396	AssignmentExpression	recno = 0		1466025	0		=			
ANR	1475397	Identifier	recno		1466025	0					
ANR	1475398	PrimaryExpression	0		1466025	1					
ANR	1475399	WhileStatement	while ( IS_DIGIT ( * ptr ) )		1466025	5					
ANR	1475400	Condition	IS_DIGIT ( * ptr )	7323:16:239276:239289	1466025	0	True				
ANR	1475401	CallExpression	IS_DIGIT ( * ptr )		1466025	0					
ANR	1475402	Callee	IS_DIGIT		1466025	0					
ANR	1475403	Identifier	IS_DIGIT		1466025	0					
ANR	1475404	ArgumentList	* ptr		1466025	1					
ANR	1475405	Argument	* ptr		1466025	0					
ANR	1475406	UnaryOperationExpression	* ptr		1466025	0					
ANR	1475407	UnaryOperator	*		1466025	0					
ANR	1475408	Identifier	ptr		1466025	1					
ANR	1475409	ExpressionStatement	recno = recno * 10 + * ptr ++ - CHAR_0	7324:12:239304:239340	1466025	1	True				
ANR	1475410	AssignmentExpression	recno = recno * 10 + * ptr ++ - CHAR_0		1466025	0		=			
ANR	1475411	Identifier	recno		1466025	0					
ANR	1475412	AdditiveExpression	recno * 10 + * ptr ++ - CHAR_0		1466025	1		+			
ANR	1475413	MultiplicativeExpression	recno * 10		1466025	0		*			
ANR	1475414	Identifier	recno		1466025	0					
ANR	1475415	PrimaryExpression	10		1466025	1					
ANR	1475416	AdditiveExpression	* ptr ++ - CHAR_0		1466025	1		-			
ANR	1475417	UnaryOperationExpression	* ptr ++		1466025	0					
ANR	1475418	UnaryOperator	*		1466025	0					
ANR	1475419	PostIncDecOperationExpression	ptr ++		1466025	1					
ANR	1475420	Identifier	ptr		1466025	0					
ANR	1475421	IncDec	++		1466025	1					
ANR	1475422	Identifier	CHAR_0		1466025	1					
ANR	1475423	IfStatement	if ( * ptr != ( pcre_uchar ) terminator )		1466025	6					
ANR	1475424	Condition	* ptr != ( pcre_uchar ) terminator	7326:14:239357:239386	1466025	0	True				
ANR	1475425	EqualityExpression	* ptr != ( pcre_uchar ) terminator		1466025	0		!=			
ANR	1475426	UnaryOperationExpression	* ptr		1466025	0					
ANR	1475427	UnaryOperator	*		1466025	0					
ANR	1475428	Identifier	ptr		1466025	1					
ANR	1475429	CastExpression	( pcre_uchar ) terminator		1466025	1					
ANR	1475430	CastTarget	pcre_uchar		1466025	0					
ANR	1475431	Identifier	terminator		1466025	1					
ANR	1475432	CompoundStatement		2888:12:100156:100156	1466025	1					
ANR	1475433	ExpressionStatement	* errorcodeptr = ERR29	7328:12:239415:239436	1466025	0	True				
ANR	1475434	AssignmentExpression	* errorcodeptr = ERR29		1466025	0		=			
ANR	1475435	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475436	UnaryOperator	*		1466025	0					
ANR	1475437	Identifier	errorcodeptr		1466025	1					
ANR	1475438	Identifier	ERR29		1466025	1					
ANR	1475439	GotoStatement	goto FAILED ;	7329:12:239450:239461	1466025	1	True				
ANR	1475440	Identifier	FAILED		1466025	0					
ANR	1475441	IfStatement	if ( refsign == CHAR_MINUS )		1466025	7					
ANR	1475442	Condition	refsign == CHAR_MINUS	7332:14:239492:239512	1466025	0	True				
ANR	1475443	EqualityExpression	refsign == CHAR_MINUS		1466025	0		==			
ANR	1475444	Identifier	refsign		1466025	0					
ANR	1475445	Identifier	CHAR_MINUS		1466025	1					
ANR	1475446	CompoundStatement		2894:12:100282:100282	1466025	1					
ANR	1475447	IfStatement	if ( recno == 0 )		1466025	0					
ANR	1475448	Condition	recno == 0	7334:16:239545:239554	1466025	0	True				
ANR	1475449	EqualityExpression	recno == 0		1466025	0		==			
ANR	1475450	Identifier	recno		1466025	0					
ANR	1475451	PrimaryExpression	0		1466025	1					
ANR	1475452	CompoundStatement		2896:14:100326:100326	1466025	1					
ANR	1475453	ExpressionStatement	* errorcodeptr = ERR58	7336:14:239587:239608	1466025	0	True				
ANR	1475454	AssignmentExpression	* errorcodeptr = ERR58		1466025	0		=			
ANR	1475455	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475456	UnaryOperator	*		1466025	0					
ANR	1475457	Identifier	errorcodeptr		1466025	1					
ANR	1475458	Identifier	ERR58		1466025	1					
ANR	1475459	GotoStatement	goto FAILED ;	7337:14:239624:239635	1466025	1	True				
ANR	1475460	Identifier	FAILED		1466025	0					
ANR	1475461	ExpressionStatement	recno = cd -> bracount - recno + 1	7339:12:239665:239697	1466025	1	True				
ANR	1475462	AssignmentExpression	recno = cd -> bracount - recno + 1		1466025	0		=			
ANR	1475463	Identifier	recno		1466025	0					
ANR	1475464	AdditiveExpression	cd -> bracount - recno + 1		1466025	1		-			
ANR	1475465	PtrMemberAccess	cd -> bracount		1466025	0					
ANR	1475466	Identifier	cd		1466025	0					
ANR	1475467	Identifier	bracount		1466025	1					
ANR	1475468	AdditiveExpression	recno + 1		1466025	1		+			
ANR	1475469	Identifier	recno		1466025	0					
ANR	1475470	PrimaryExpression	1		1466025	1					
ANR	1475471	IfStatement	if ( recno <= 0 )		1466025	2					
ANR	1475472	Condition	recno <= 0	7340:16:239715:239724	1466025	0	True				
ANR	1475473	RelationalExpression	recno <= 0		1466025	0		<=			
ANR	1475474	Identifier	recno		1466025	0					
ANR	1475475	PrimaryExpression	0		1466025	1					
ANR	1475476	CompoundStatement		2902:14:100496:100496	1466025	1					
ANR	1475477	ExpressionStatement	* errorcodeptr = ERR15	7342:14:239757:239778	1466025	0	True				
ANR	1475478	AssignmentExpression	* errorcodeptr = ERR15		1466025	0		=			
ANR	1475479	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475480	UnaryOperator	*		1466025	0					
ANR	1475481	Identifier	errorcodeptr		1466025	1					
ANR	1475482	Identifier	ERR15		1466025	1					
ANR	1475483	GotoStatement	goto FAILED ;	7343:14:239794:239805	1466025	1	True				
ANR	1475484	Identifier	FAILED		1466025	0					
ANR	1475485	ElseStatement	else		1466025	0					
ANR	1475486	IfStatement	if ( refsign == CHAR_PLUS )		1466025	0					
ANR	1475487	Condition	refsign == CHAR_PLUS	7346:19:239856:239875	1466025	0	True				
ANR	1475488	EqualityExpression	refsign == CHAR_PLUS		1466025	0		==			
ANR	1475489	Identifier	refsign		1466025	0					
ANR	1475490	Identifier	CHAR_PLUS		1466025	1					
ANR	1475491	CompoundStatement		2908:12:100645:100645	1466025	1					
ANR	1475492	IfStatement	if ( recno == 0 )		1466025	0					
ANR	1475493	Condition	recno == 0	7348:16:239908:239917	1466025	0	True				
ANR	1475494	EqualityExpression	recno == 0		1466025	0		==			
ANR	1475495	Identifier	recno		1466025	0					
ANR	1475496	PrimaryExpression	0		1466025	1					
ANR	1475497	CompoundStatement		2910:14:100689:100689	1466025	1					
ANR	1475498	ExpressionStatement	* errorcodeptr = ERR58	7350:14:239950:239971	1466025	0	True				
ANR	1475499	AssignmentExpression	* errorcodeptr = ERR58		1466025	0		=			
ANR	1475500	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475501	UnaryOperator	*		1466025	0					
ANR	1475502	Identifier	errorcodeptr		1466025	1					
ANR	1475503	Identifier	ERR58		1466025	1					
ANR	1475504	GotoStatement	goto FAILED ;	7351:14:239987:239998	1466025	1	True				
ANR	1475505	Identifier	FAILED		1466025	0					
ANR	1475506	ExpressionStatement	recno += cd -> bracount	7353:12:240028:240049	1466025	1	True				
ANR	1475507	AssignmentExpression	recno += cd -> bracount		1466025	0		+=			
ANR	1475508	Identifier	recno		1466025	0					
ANR	1475509	PtrMemberAccess	cd -> bracount		1466025	1					
ANR	1475510	Identifier	cd		1466025	0					
ANR	1475511	Identifier	bracount		1466025	1					
ANR	1475512	Label	HANDLE_RECURSION :	7358:10:240150:240166	1466025	8	True				
ANR	1475513	Identifier	HANDLE_RECURSION		1466025	0					
ANR	1475514	ExpressionStatement	previous = code	7360:10:240179:240194	1466025	9	True				
ANR	1475515	AssignmentExpression	previous = code		1466025	0		=			
ANR	1475516	Identifier	previous		1466025	0					
ANR	1475517	Identifier	code		1466025	1					
ANR	1475518	ExpressionStatement	called = cd -> start_code	7361:10:240206:240229	1466025	10	True				
ANR	1475519	AssignmentExpression	called = cd -> start_code		1466025	0		=			
ANR	1475520	Identifier	called		1466025	0					
ANR	1475521	PtrMemberAccess	cd -> start_code		1466025	1					
ANR	1475522	Identifier	cd		1466025	0					
ANR	1475523	Identifier	start_code		1466025	1					
ANR	1475524	IfStatement	if ( lengthptr == NULL )		1466025	11					
ANR	1475525	Condition	lengthptr == NULL	7370:14:240677:240693	1466025	0	True				
ANR	1475526	EqualityExpression	lengthptr == NULL		1466025	0		==			
ANR	1475527	Identifier	lengthptr		1466025	0					
ANR	1475528	Identifier	NULL		1466025	1					
ANR	1475529	CompoundStatement		2932:12:101463:101463	1466025	1					
ANR	1475530	ExpressionStatement	* code = OP_END	7372:12:240722:240736	1466025	0	True				
ANR	1475531	AssignmentExpression	* code = OP_END		1466025	0		=			
ANR	1475532	UnaryOperationExpression	* code		1466025	0					
ANR	1475533	UnaryOperator	*		1466025	0					
ANR	1475534	Identifier	code		1466025	1					
ANR	1475535	Identifier	OP_END		1466025	1					
ANR	1475536	IfStatement	if ( recno != 0 )		1466025	1					
ANR	1475537	Condition	recno != 0	7373:16:240754:240763	1466025	0	True				
ANR	1475538	EqualityExpression	recno != 0		1466025	0		!=			
ANR	1475539	Identifier	recno		1466025	0					
ANR	1475540	PrimaryExpression	0		1466025	1					
ANR	1475541	ExpressionStatement	"called = PRIV ( find_bracket ) ( cd -> start_code , utf , recno )"	7374:14:240780:240835	1466025	1	True				
ANR	1475542	AssignmentExpression	"called = PRIV ( find_bracket ) ( cd -> start_code , utf , recno )"		1466025	0		=			
ANR	1475543	Identifier	called		1466025	0					
ANR	1475544	CallExpression	"PRIV ( find_bracket ) ( cd -> start_code , utf , recno )"		1466025	1					
ANR	1475545	Callee	PRIV ( find_bracket )		1466025	0					
ANR	1475546	CallExpression	PRIV ( find_bracket )		1466025	0					
ANR	1475547	Callee	PRIV		1466025	0					
ANR	1475548	Identifier	PRIV		1466025	0					
ANR	1475549	ArgumentList	find_bracket		1466025	1					
ANR	1475550	Argument	find_bracket		1466025	0					
ANR	1475551	Identifier	find_bracket		1466025	0					
ANR	1475552	ArgumentList	cd -> start_code		1466025	1					
ANR	1475553	Argument	cd -> start_code		1466025	0					
ANR	1475554	PtrMemberAccess	cd -> start_code		1466025	0					
ANR	1475555	Identifier	cd		1466025	0					
ANR	1475556	Identifier	start_code		1466025	1					
ANR	1475557	Argument	utf		1466025	1					
ANR	1475558	Identifier	utf		1466025	0					
ANR	1475559	Argument	recno		1466025	2					
ANR	1475560	Identifier	recno		1466025	0					
ANR	1475561	IfStatement	if ( called == NULL )		1466025	2					
ANR	1475562	Condition	called == NULL	7378:16:240891:240904	1466025	0	True				
ANR	1475563	EqualityExpression	called == NULL		1466025	0		==			
ANR	1475564	Identifier	called		1466025	0					
ANR	1475565	Identifier	NULL		1466025	1					
ANR	1475566	CompoundStatement		2940:14:101676:101676	1466025	1					
ANR	1475567	IfStatement	if ( recno > cd -> final_bracount )		1466025	0					
ANR	1475568	Condition	recno > cd -> final_bracount	7380:18:240941:240966	1466025	0	True				
ANR	1475569	RelationalExpression	recno > cd -> final_bracount		1466025	0		>			
ANR	1475570	Identifier	recno		1466025	0					
ANR	1475571	PtrMemberAccess	cd -> final_bracount		1466025	1					
ANR	1475572	Identifier	cd		1466025	0					
ANR	1475573	Identifier	final_bracount		1466025	1					
ANR	1475574	CompoundStatement		2942:16:101740:101740	1466025	1					
ANR	1475575	ExpressionStatement	* errorcodeptr = ERR15	7382:16:241003:241024	1466025	0	True				
ANR	1475576	AssignmentExpression	* errorcodeptr = ERR15		1466025	0		=			
ANR	1475577	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475578	UnaryOperator	*		1466025	0					
ANR	1475579	Identifier	errorcodeptr		1466025	1					
ANR	1475580	Identifier	ERR15		1466025	1					
ANR	1475581	GotoStatement	goto FAILED ;	7383:16:241042:241053	1466025	1	True				
ANR	1475582	Identifier	FAILED		1466025	0					
ANR	1475583	ExpressionStatement	called = cd -> start_code + recno	7390:14:241314:241345	1466025	1	True				
ANR	1475584	AssignmentExpression	called = cd -> start_code + recno		1466025	0		=			
ANR	1475585	Identifier	called		1466025	0					
ANR	1475586	AdditiveExpression	cd -> start_code + recno		1466025	1		+			
ANR	1475587	PtrMemberAccess	cd -> start_code		1466025	0					
ANR	1475588	Identifier	cd		1466025	0					
ANR	1475589	Identifier	start_code		1466025	1					
ANR	1475590	Identifier	recno		1466025	1					
ANR	1475591	IfStatement	if ( cd -> hwm >= cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN )		1466025	2					
ANR	1475592	Condition	cd -> hwm >= cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN	7391:18:241365:241459	1466025	0	True				
ANR	1475593	RelationalExpression	cd -> hwm >= cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		1466025	0		>=			
ANR	1475594	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1475595	Identifier	cd		1466025	0					
ANR	1475596	Identifier	hwm		1466025	1					
ANR	1475597	AdditiveExpression	cd -> start_workspace + cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		1466025	1		+			
ANR	1475598	PtrMemberAccess	cd -> start_workspace		1466025	0					
ANR	1475599	Identifier	cd		1466025	0					
ANR	1475600	Identifier	start_workspace		1466025	1					
ANR	1475601	AdditiveExpression	cd -> workspace_size - WORK_SIZE_SAFETY_MARGIN		1466025	1		-			
ANR	1475602	PtrMemberAccess	cd -> workspace_size		1466025	0					
ANR	1475603	Identifier	cd		1466025	0					
ANR	1475604	Identifier	workspace_size		1466025	1					
ANR	1475605	Identifier	WORK_SIZE_SAFETY_MARGIN		1466025	1					
ANR	1475606	CompoundStatement		2954:16:102233:102233	1466025	1					
ANR	1475607	ExpressionStatement	* errorcodeptr = expand_workspace ( cd )	7394:16:241496:241532	1466025	0	True				
ANR	1475608	AssignmentExpression	* errorcodeptr = expand_workspace ( cd )		1466025	0		=			
ANR	1475609	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475610	UnaryOperator	*		1466025	0					
ANR	1475611	Identifier	errorcodeptr		1466025	1					
ANR	1475612	CallExpression	expand_workspace ( cd )		1466025	1					
ANR	1475613	Callee	expand_workspace		1466025	0					
ANR	1475614	Identifier	expand_workspace		1466025	0					
ANR	1475615	ArgumentList	cd		1466025	1					
ANR	1475616	Argument	cd		1466025	0					
ANR	1475617	Identifier	cd		1466025	0					
ANR	1475618	IfStatement	if ( * errorcodeptr != 0 )		1466025	1					
ANR	1475619	Condition	* errorcodeptr != 0	7395:20:241554:241571	1466025	0	True				
ANR	1475620	EqualityExpression	* errorcodeptr != 0		1466025	0		!=			
ANR	1475621	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475622	UnaryOperator	*		1466025	0					
ANR	1475623	Identifier	errorcodeptr		1466025	1					
ANR	1475624	PrimaryExpression	0		1466025	1					
ANR	1475625	GotoStatement	goto FAILED ;	7395:40:241574:241585	1466025	1	True				
ANR	1475626	Identifier	FAILED		1466025	0					
ANR	1475627	ExpressionStatement	"PUTINC ( cd -> hwm , 0 , ( int ) ( code + 1 - cd -> start_code ) )"	7397:14:241619:241671	1466025	3	True				
ANR	1475628	CallExpression	"PUTINC ( cd -> hwm , 0 , ( int ) ( code + 1 - cd -> start_code ) )"		1466025	0					
ANR	1475629	Callee	PUTINC		1466025	0					
ANR	1475630	Identifier	PUTINC		1466025	0					
ANR	1475631	ArgumentList	cd -> hwm		1466025	1					
ANR	1475632	Argument	cd -> hwm		1466025	0					
ANR	1475633	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1475634	Identifier	cd		1466025	0					
ANR	1475635	Identifier	hwm		1466025	1					
ANR	1475636	Argument	0		1466025	1					
ANR	1475637	PrimaryExpression	0		1466025	0					
ANR	1475638	Argument	( int ) ( code + 1 - cd -> start_code )		1466025	2					
ANR	1475639	CastExpression	( int ) ( code + 1 - cd -> start_code )		1466025	0					
ANR	1475640	CastTarget	int		1466025	0					
ANR	1475641	AdditiveExpression	code + 1 - cd -> start_code		1466025	1		+			
ANR	1475642	Identifier	code		1466025	0					
ANR	1475643	AdditiveExpression	1 - cd -> start_code		1466025	1		-			
ANR	1475644	PrimaryExpression	1		1466025	0					
ANR	1475645	PtrMemberAccess	cd -> start_code		1466025	1					
ANR	1475646	Identifier	cd		1466025	0					
ANR	1475647	Identifier	start_code		1466025	1					
ANR	1475648	ElseStatement	else		1466025	0					
ANR	1475649	IfStatement	"if ( GET ( called , 1 ) == 0 && cond_depth <= 0 && could_be_empty ( called , code , bcptr , utf , cd ) )"		1466025	0					
ANR	1475650	Condition	"GET ( called , 1 ) == 0 && cond_depth <= 0 && could_be_empty ( called , code , bcptr , utf , cd )"	7409:21:242303:242409	1466025	0	True				
ANR	1475651	AndExpression	"GET ( called , 1 ) == 0 && cond_depth <= 0 && could_be_empty ( called , code , bcptr , utf , cd )"		1466025	0		&&			
ANR	1475652	EqualityExpression	"GET ( called , 1 ) == 0"		1466025	0		==			
ANR	1475653	CallExpression	"GET ( called , 1 )"		1466025	0					
ANR	1475654	Callee	GET		1466025	0					
ANR	1475655	Identifier	GET		1466025	0					
ANR	1475656	ArgumentList	called		1466025	1					
ANR	1475657	Argument	called		1466025	0					
ANR	1475658	Identifier	called		1466025	0					
ANR	1475659	Argument	1		1466025	1					
ANR	1475660	PrimaryExpression	1		1466025	0					
ANR	1475661	PrimaryExpression	0		1466025	1					
ANR	1475662	AndExpression	"cond_depth <= 0 && could_be_empty ( called , code , bcptr , utf , cd )"		1466025	1		&&			
ANR	1475663	RelationalExpression	cond_depth <= 0		1466025	0		<=			
ANR	1475664	Identifier	cond_depth		1466025	0					
ANR	1475665	PrimaryExpression	0		1466025	1					
ANR	1475666	CallExpression	"could_be_empty ( called , code , bcptr , utf , cd )"		1466025	1					
ANR	1475667	Callee	could_be_empty		1466025	0					
ANR	1475668	Identifier	could_be_empty		1466025	0					
ANR	1475669	ArgumentList	called		1466025	1					
ANR	1475670	Argument	called		1466025	0					
ANR	1475671	Identifier	called		1466025	0					
ANR	1475672	Argument	code		1466025	1					
ANR	1475673	Identifier	code		1466025	0					
ANR	1475674	Argument	bcptr		1466025	2					
ANR	1475675	Identifier	bcptr		1466025	0					
ANR	1475676	Argument	utf		1466025	3					
ANR	1475677	Identifier	utf		1466025	0					
ANR	1475678	Argument	cd		1466025	4					
ANR	1475679	Identifier	cd		1466025	0					
ANR	1475680	CompoundStatement		2972:14:103181:103181	1466025	1					
ANR	1475681	ExpressionStatement	* errorcodeptr = ERR40	7412:14:242442:242463	1466025	0	True				
ANR	1475682	AssignmentExpression	* errorcodeptr = ERR40		1466025	0		=			
ANR	1475683	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475684	UnaryOperator	*		1466025	0					
ANR	1475685	Identifier	errorcodeptr		1466025	1					
ANR	1475686	Identifier	ERR40		1466025	1					
ANR	1475687	GotoStatement	goto FAILED ;	7413:14:242479:242490	1466025	1	True				
ANR	1475688	Identifier	FAILED		1466025	0					
ANR	1475689	ExpressionStatement	* code = OP_RECURSE	7421:10:242729:242747	1466025	12	True				
ANR	1475690	AssignmentExpression	* code = OP_RECURSE		1466025	0		=			
ANR	1475691	UnaryOperationExpression	* code		1466025	0					
ANR	1475692	UnaryOperator	*		1466025	0					
ANR	1475693	Identifier	code		1466025	1					
ANR	1475694	Identifier	OP_RECURSE		1466025	1					
ANR	1475695	ExpressionStatement	"PUT ( code , 1 , ( int ) ( called - cd -> start_code ) )"	7422:10:242759:242803	1466025	13	True				
ANR	1475696	CallExpression	"PUT ( code , 1 , ( int ) ( called - cd -> start_code ) )"		1466025	0					
ANR	1475697	Callee	PUT		1466025	0					
ANR	1475698	Identifier	PUT		1466025	0					
ANR	1475699	ArgumentList	code		1466025	1					
ANR	1475700	Argument	code		1466025	0					
ANR	1475701	Identifier	code		1466025	0					
ANR	1475702	Argument	1		1466025	1					
ANR	1475703	PrimaryExpression	1		1466025	0					
ANR	1475704	Argument	( int ) ( called - cd -> start_code )		1466025	2					
ANR	1475705	CastExpression	( int ) ( called - cd -> start_code )		1466025	0					
ANR	1475706	CastTarget	int		1466025	0					
ANR	1475707	AdditiveExpression	called - cd -> start_code		1466025	1		-			
ANR	1475708	Identifier	called		1466025	0					
ANR	1475709	PtrMemberAccess	cd -> start_code		1466025	1					
ANR	1475710	Identifier	cd		1466025	0					
ANR	1475711	Identifier	start_code		1466025	1					
ANR	1475712	ExpressionStatement	code += 1 + LINK_SIZE	7423:10:242815:242836	1466025	14	True				
ANR	1475713	AssignmentExpression	code += 1 + LINK_SIZE		1466025	0		+=			
ANR	1475714	Identifier	code		1466025	0					
ANR	1475715	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1475716	PrimaryExpression	1		1466025	0					
ANR	1475717	Identifier	LINK_SIZE		1466025	1					
ANR	1475718	ExpressionStatement	groupsetfirstchar = FALSE	7424:10:242848:242873	1466025	15	True				
ANR	1475719	AssignmentExpression	groupsetfirstchar = FALSE		1466025	0		=			
ANR	1475720	Identifier	groupsetfirstchar		1466025	0					
ANR	1475721	Identifier	FALSE		1466025	1					
ANR	1475722	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	91					
ANR	1475723	Condition	firstcharflags == REQ_UNSET	7429:12:242948:242974	1466025	0	True				
ANR	1475724	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1475725	Identifier	firstcharflags		1466025	0					
ANR	1475726	Identifier	REQ_UNSET		1466025	1					
ANR	1475727	ExpressionStatement	firstcharflags = REQ_NONE	7429:41:242977:243002	1466025	1	True				
ANR	1475728	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1475729	Identifier	firstcharflags		1466025	0					
ANR	1475730	Identifier	REQ_NONE		1466025	1					
ANR	1475731	ContinueStatement	continue ;	7430:8:243012:243020	1466025	92	True				
ANR	1475732	Label	default :	7434:8:243107:243114	1466025	93	True				
ANR	1475733	Identifier	default		1466025	0					
ANR	1475734	Label	OTHER_CHAR_AFTER_QUERY :	7435:8:243182:243204	1466025	94	True				
ANR	1475735	Identifier	OTHER_CHAR_AFTER_QUERY		1466025	0					
ANR	1475736	ExpressionStatement	set = unset = 0	7436:8:243214:243229	1466025	95	True				
ANR	1475737	AssignmentExpression	set = unset = 0		1466025	0		=			
ANR	1475738	Identifier	set		1466025	0					
ANR	1475739	AssignmentExpression	unset = 0		1466025	1		=			
ANR	1475740	Identifier	unset		1466025	0					
ANR	1475741	PrimaryExpression	0		1466025	1					
ANR	1475742	ExpressionStatement	optset = & set	7437:8:243239:243252	1466025	96	True				
ANR	1475743	AssignmentExpression	optset = & set		1466025	0		=			
ANR	1475744	Identifier	optset		1466025	0					
ANR	1475745	UnaryOperationExpression	& set		1466025	1					
ANR	1475746	UnaryOperator	&		1466025	0					
ANR	1475747	Identifier	set		1466025	1					
ANR	1475748	WhileStatement	while ( * ptr != CHAR_RIGHT_PARENTHESIS && * ptr != CHAR_COLON )		1466025	97					
ANR	1475749	Condition	* ptr != CHAR_RIGHT_PARENTHESIS && * ptr != CHAR_COLON	7439:15:243270:243321	1466025	0	True				
ANR	1475750	AndExpression	* ptr != CHAR_RIGHT_PARENTHESIS && * ptr != CHAR_COLON		1466025	0		&&			
ANR	1475751	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		1466025	0		!=			
ANR	1475752	UnaryOperationExpression	* ptr		1466025	0					
ANR	1475753	UnaryOperator	*		1466025	0					
ANR	1475754	Identifier	ptr		1466025	1					
ANR	1475755	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1475756	EqualityExpression	* ptr != CHAR_COLON		1466025	1		!=			
ANR	1475757	UnaryOperationExpression	* ptr		1466025	0					
ANR	1475758	UnaryOperator	*		1466025	0					
ANR	1475759	Identifier	ptr		1466025	1					
ANR	1475760	Identifier	CHAR_COLON		1466025	1					
ANR	1475761	CompoundStatement		3001:10:104089:104089	1466025	1					
ANR	1475762	SwitchStatement	switch ( * ptr ++ )		1466025	0					
ANR	1475763	Condition	* ptr ++	7441:18:243354:243359	1466025	0	True				
ANR	1475764	UnaryOperationExpression	* ptr ++		1466025	0					
ANR	1475765	UnaryOperator	*		1466025	0					
ANR	1475766	PostIncDecOperationExpression	ptr ++		1466025	1					
ANR	1475767	Identifier	ptr		1466025	0					
ANR	1475768	IncDec	++		1466025	1					
ANR	1475769	CompoundStatement		3003:12:104129:104129	1466025	1					
ANR	1475770	Label	case CHAR_MINUS :	7443:12:243388:243403	1466025	0	True				
ANR	1475771	Identifier	CHAR_MINUS		1466025	0					
ANR	1475772	ExpressionStatement	optset = & unset	7443:29:243405:243420	1466025	1	True				
ANR	1475773	AssignmentExpression	optset = & unset		1466025	0		=			
ANR	1475774	Identifier	optset		1466025	0					
ANR	1475775	UnaryOperationExpression	& unset		1466025	1					
ANR	1475776	UnaryOperator	&		1466025	0					
ANR	1475777	Identifier	unset		1466025	1					
ANR	1475778	BreakStatement	break ;	7443:46:243422:243427	1466025	2	True				
ANR	1475779	Label	case CHAR_J :	7445:12:243442:243453	1466025	3	True				
ANR	1475780	Identifier	CHAR_J		1466025	0					
ANR	1475781	ExpressionStatement	* optset |= PCRE_DUPNAMES	7446:12:243523:243547	1466025	4	True				
ANR	1475782	AssignmentExpression	* optset |= PCRE_DUPNAMES		1466025	0		|=			
ANR	1475783	UnaryOperationExpression	* optset		1466025	0					
ANR	1475784	UnaryOperator	*		1466025	0					
ANR	1475785	Identifier	optset		1466025	1					
ANR	1475786	Identifier	PCRE_DUPNAMES		1466025	1					
ANR	1475787	ExpressionStatement	cd -> external_flags |= PCRE_JCHANGED	7447:12:243561:243596	1466025	5	True				
ANR	1475788	AssignmentExpression	cd -> external_flags |= PCRE_JCHANGED		1466025	0		|=			
ANR	1475789	PtrMemberAccess	cd -> external_flags		1466025	0					
ANR	1475790	Identifier	cd		1466025	0					
ANR	1475791	Identifier	external_flags		1466025	1					
ANR	1475792	Identifier	PCRE_JCHANGED		1466025	1					
ANR	1475793	BreakStatement	break ;	7448:12:243610:243615	1466025	6	True				
ANR	1475794	Label	case CHAR_i :	7450:12:243630:243641	1466025	7	True				
ANR	1475795	Identifier	CHAR_i		1466025	0					
ANR	1475796	ExpressionStatement	* optset |= PCRE_CASELESS	7450:25:243643:243667	1466025	8	True				
ANR	1475797	AssignmentExpression	* optset |= PCRE_CASELESS		1466025	0		|=			
ANR	1475798	UnaryOperationExpression	* optset		1466025	0					
ANR	1475799	UnaryOperator	*		1466025	0					
ANR	1475800	Identifier	optset		1466025	1					
ANR	1475801	Identifier	PCRE_CASELESS		1466025	1					
ANR	1475802	BreakStatement	break ;	7450:51:243669:243674	1466025	9	True				
ANR	1475803	Label	case CHAR_m :	7451:12:243688:243699	1466025	10	True				
ANR	1475804	Identifier	CHAR_m		1466025	0					
ANR	1475805	ExpressionStatement	* optset |= PCRE_MULTILINE	7451:25:243701:243726	1466025	11	True				
ANR	1475806	AssignmentExpression	* optset |= PCRE_MULTILINE		1466025	0		|=			
ANR	1475807	UnaryOperationExpression	* optset		1466025	0					
ANR	1475808	UnaryOperator	*		1466025	0					
ANR	1475809	Identifier	optset		1466025	1					
ANR	1475810	Identifier	PCRE_MULTILINE		1466025	1					
ANR	1475811	BreakStatement	break ;	7451:52:243728:243733	1466025	12	True				
ANR	1475812	Label	case CHAR_s :	7452:12:243747:243758	1466025	13	True				
ANR	1475813	Identifier	CHAR_s		1466025	0					
ANR	1475814	ExpressionStatement	* optset |= PCRE_DOTALL	7452:25:243760:243782	1466025	14	True				
ANR	1475815	AssignmentExpression	* optset |= PCRE_DOTALL		1466025	0		|=			
ANR	1475816	UnaryOperationExpression	* optset		1466025	0					
ANR	1475817	UnaryOperator	*		1466025	0					
ANR	1475818	Identifier	optset		1466025	1					
ANR	1475819	Identifier	PCRE_DOTALL		1466025	1					
ANR	1475820	BreakStatement	break ;	7452:49:243784:243789	1466025	15	True				
ANR	1475821	Label	case CHAR_x :	7453:12:243803:243814	1466025	16	True				
ANR	1475822	Identifier	CHAR_x		1466025	0					
ANR	1475823	ExpressionStatement	* optset |= PCRE_EXTENDED	7453:25:243816:243840	1466025	17	True				
ANR	1475824	AssignmentExpression	* optset |= PCRE_EXTENDED		1466025	0		|=			
ANR	1475825	UnaryOperationExpression	* optset		1466025	0					
ANR	1475826	UnaryOperator	*		1466025	0					
ANR	1475827	Identifier	optset		1466025	1					
ANR	1475828	Identifier	PCRE_EXTENDED		1466025	1					
ANR	1475829	BreakStatement	break ;	7453:51:243842:243847	1466025	18	True				
ANR	1475830	Label	case CHAR_U :	7454:12:243861:243872	1466025	19	True				
ANR	1475831	Identifier	CHAR_U		1466025	0					
ANR	1475832	ExpressionStatement	* optset |= PCRE_UNGREEDY	7454:25:243874:243898	1466025	20	True				
ANR	1475833	AssignmentExpression	* optset |= PCRE_UNGREEDY		1466025	0		|=			
ANR	1475834	UnaryOperationExpression	* optset		1466025	0					
ANR	1475835	UnaryOperator	*		1466025	0					
ANR	1475836	Identifier	optset		1466025	1					
ANR	1475837	Identifier	PCRE_UNGREEDY		1466025	1					
ANR	1475838	BreakStatement	break ;	7454:51:243900:243905	1466025	21	True				
ANR	1475839	Label	case CHAR_X :	7455:12:243919:243930	1466025	22	True				
ANR	1475840	Identifier	CHAR_X		1466025	0					
ANR	1475841	ExpressionStatement	* optset |= PCRE_EXTRA	7455:25:243932:243953	1466025	23	True				
ANR	1475842	AssignmentExpression	* optset |= PCRE_EXTRA		1466025	0		|=			
ANR	1475843	UnaryOperationExpression	* optset		1466025	0					
ANR	1475844	UnaryOperator	*		1466025	0					
ANR	1475845	Identifier	optset		1466025	1					
ANR	1475846	Identifier	PCRE_EXTRA		1466025	1					
ANR	1475847	BreakStatement	break ;	7455:48:243955:243960	1466025	24	True				
ANR	1475848	Label	default :	7457:12:243975:243982	1466025	25	True				
ANR	1475849	Identifier	default		1466025	0					
ANR	1475850	ExpressionStatement	* errorcodeptr = ERR12	7457:22:243985:244006	1466025	26	True				
ANR	1475851	AssignmentExpression	* errorcodeptr = ERR12		1466025	0		=			
ANR	1475852	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1475853	UnaryOperator	*		1466025	0					
ANR	1475854	Identifier	errorcodeptr		1466025	1					
ANR	1475855	Identifier	ERR12		1466025	1					
ANR	1475856	ExpressionStatement	ptr --	7458:22:244030:244035	1466025	27	True				
ANR	1475857	PostIncDecOperationExpression	ptr --		1466025	0					
ANR	1475858	Identifier	ptr		1466025	0					
ANR	1475859	IncDec	--		1466025	1					
ANR	1475860	GotoStatement	goto FAILED ;	7459:22:244087:244098	1466025	28	True				
ANR	1475861	Identifier	FAILED		1466025	0					
ANR	1475862	ExpressionStatement	newoptions = ( options | set ) & ( ~unset )	7465:8:244213:244252	1466025	98	True				
ANR	1475863	AssignmentExpression	newoptions = ( options | set ) & ( ~unset )		1466025	0		=			
ANR	1475864	Identifier	newoptions		1466025	0					
ANR	1475865	BitAndExpression	( options | set ) & ( ~unset )		1466025	1		&			
ANR	1475866	InclusiveOrExpression	options | set		1466025	0		|			
ANR	1475867	Identifier	options		1466025	0					
ANR	1475868	Identifier	set		1466025	1					
ANR	1475869	Identifier	~unset		1466025	1					
ANR	1475870	IfStatement	if ( * ptr == CHAR_RIGHT_PARENTHESIS )		1466025	99					
ANR	1475871	Condition	* ptr == CHAR_RIGHT_PARENTHESIS	7488:12:245557:245586	1466025	0	True				
ANR	1475872	EqualityExpression	* ptr == CHAR_RIGHT_PARENTHESIS		1466025	0		==			
ANR	1475873	UnaryOperationExpression	* ptr		1466025	0					
ANR	1475874	UnaryOperator	*		1466025	0					
ANR	1475875	Identifier	ptr		1466025	1					
ANR	1475876	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1475877	CompoundStatement		3050:10:106354:106354	1466025	1					
ANR	1475878	IfStatement	if ( code == cd -> start_code + 1 + LINK_SIZE && ( lengthptr == NULL || * lengthptr == 2 + 2 * LINK_SIZE ) )		1466025	0					
ANR	1475879	Condition	code == cd -> start_code + 1 + LINK_SIZE && ( lengthptr == NULL || * lengthptr == 2 + 2 * LINK_SIZE )	7490:14:245615:245723	1466025	0	True				
ANR	1475880	AndExpression	code == cd -> start_code + 1 + LINK_SIZE && ( lengthptr == NULL || * lengthptr == 2 + 2 * LINK_SIZE )		1466025	0		&&			
ANR	1475881	EqualityExpression	code == cd -> start_code + 1 + LINK_SIZE		1466025	0		==			
ANR	1475882	Identifier	code		1466025	0					
ANR	1475883	AdditiveExpression	cd -> start_code + 1 + LINK_SIZE		1466025	1		+			
ANR	1475884	PtrMemberAccess	cd -> start_code		1466025	0					
ANR	1475885	Identifier	cd		1466025	0					
ANR	1475886	Identifier	start_code		1466025	1					
ANR	1475887	AdditiveExpression	1 + LINK_SIZE		1466025	1		+			
ANR	1475888	PrimaryExpression	1		1466025	0					
ANR	1475889	Identifier	LINK_SIZE		1466025	1					
ANR	1475890	OrExpression	lengthptr == NULL || * lengthptr == 2 + 2 * LINK_SIZE		1466025	1		||			
ANR	1475891	EqualityExpression	lengthptr == NULL		1466025	0		==			
ANR	1475892	Identifier	lengthptr		1466025	0					
ANR	1475893	Identifier	NULL		1466025	1					
ANR	1475894	EqualityExpression	* lengthptr == 2 + 2 * LINK_SIZE		1466025	1		==			
ANR	1475895	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1475896	UnaryOperator	*		1466025	0					
ANR	1475897	Identifier	lengthptr		1466025	1					
ANR	1475898	AdditiveExpression	2 + 2 * LINK_SIZE		1466025	1		+			
ANR	1475899	PrimaryExpression	2		1466025	0					
ANR	1475900	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1475901	PrimaryExpression	2		1466025	0					
ANR	1475902	Identifier	LINK_SIZE		1466025	1					
ANR	1475903	CompoundStatement		3053:12:106493:106493	1466025	1					
ANR	1475904	ExpressionStatement	cd -> external_options = newoptions	7493:12:245752:245785	1466025	0	True				
ANR	1475905	AssignmentExpression	cd -> external_options = newoptions		1466025	0		=			
ANR	1475906	PtrMemberAccess	cd -> external_options		1466025	0					
ANR	1475907	Identifier	cd		1466025	0					
ANR	1475908	Identifier	external_options		1466025	1					
ANR	1475909	Identifier	newoptions		1466025	1					
ANR	1475910	ElseStatement	else		1466025	0					
ANR	1475911	CompoundStatement		3057:12:106583:106583	1466025	0					
ANR	1475912	ExpressionStatement	greedy_default = ( ( newoptions & PCRE_UNGREEDY ) != 0 )	7497:12:245842:245894	1466025	0	True				
ANR	1475913	AssignmentExpression	greedy_default = ( ( newoptions & PCRE_UNGREEDY ) != 0 )		1466025	0		=			
ANR	1475914	Identifier	greedy_default		1466025	0					
ANR	1475915	EqualityExpression	( newoptions & PCRE_UNGREEDY ) != 0		1466025	1		!=			
ANR	1475916	BitAndExpression	newoptions & PCRE_UNGREEDY		1466025	0		&			
ANR	1475917	Identifier	newoptions		1466025	0					
ANR	1475918	Identifier	PCRE_UNGREEDY		1466025	1					
ANR	1475919	PrimaryExpression	0		1466025	1					
ANR	1475920	ExpressionStatement	greedy_non_default = greedy_default ^ 1	7498:12:245908:245947	1466025	1	True				
ANR	1475921	AssignmentExpression	greedy_non_default = greedy_default ^ 1		1466025	0		=			
ANR	1475922	Identifier	greedy_non_default		1466025	0					
ANR	1475923	ExclusiveOrExpression	greedy_default ^ 1		1466025	1		^			
ANR	1475924	Identifier	greedy_default		1466025	0					
ANR	1475925	PrimaryExpression	1		1466025	1					
ANR	1475926	ExpressionStatement	req_caseopt = ( ( newoptions & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0	7499:12:245961:246026	1466025	2	True				
ANR	1475927	AssignmentExpression	req_caseopt = ( ( newoptions & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0		1466025	0		=			
ANR	1475928	Identifier	req_caseopt		1466025	0					
ANR	1475929	ConditionalExpression	( ( newoptions & PCRE_CASELESS ) != 0 ) ? REQ_CASELESS : 0		1466025	1					
ANR	1475930	Condition	( newoptions & PCRE_CASELESS ) != 0		1466025	0					
ANR	1475931	EqualityExpression	( newoptions & PCRE_CASELESS ) != 0		1466025	0		!=			
ANR	1475932	BitAndExpression	newoptions & PCRE_CASELESS		1466025	0		&			
ANR	1475933	Identifier	newoptions		1466025	0					
ANR	1475934	Identifier	PCRE_CASELESS		1466025	1					
ANR	1475935	PrimaryExpression	0		1466025	1					
ANR	1475936	Identifier	REQ_CASELESS		1466025	1					
ANR	1475937	PrimaryExpression	0		1466025	2					
ANR	1475938	ExpressionStatement	* optionsptr = options = newoptions	7505:10:246161:246195	1466025	1	True				
ANR	1475939	AssignmentExpression	* optionsptr = options = newoptions		1466025	0		=			
ANR	1475940	UnaryOperationExpression	* optionsptr		1466025	0					
ANR	1475941	UnaryOperator	*		1466025	0					
ANR	1475942	Identifier	optionsptr		1466025	1					
ANR	1475943	AssignmentExpression	options = newoptions		1466025	1		=			
ANR	1475944	Identifier	options		1466025	0					
ANR	1475945	Identifier	newoptions		1466025	1					
ANR	1475946	ExpressionStatement	previous = NULL	7506:10:246207:246222	1466025	2	True				
ANR	1475947	AssignmentExpression	previous = NULL		1466025	0		=			
ANR	1475948	Identifier	previous		1466025	0					
ANR	1475949	Identifier	NULL		1466025	1					
ANR	1475950	ContinueStatement	continue ;	7507:10:246274:246282	1466025	3	True				
ANR	1475951	ExpressionStatement	bravalue = OP_BRA	7515:8:246621:246638	1466025	100	True				
ANR	1475952	AssignmentExpression	bravalue = OP_BRA		1466025	0		=			
ANR	1475953	Identifier	bravalue		1466025	0					
ANR	1475954	Identifier	OP_BRA		1466025	1					
ANR	1475955	ExpressionStatement	ptr ++	7516:8:246648:246653	1466025	101	True				
ANR	1475956	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1475957	Identifier	ptr		1466025	0					
ANR	1475958	IncDec	++		1466025	1					
ANR	1475959	ElseStatement	else		1466025	0					
ANR	1475960	IfStatement	if ( ( options & PCRE_NO_AUTO_CAPTURE ) != 0 )		1466025	0					
ANR	1475961	Condition	( options & PCRE_NO_AUTO_CAPTURE ) != 0	7524:13:246946:246982	1466025	0	True				
ANR	1475962	EqualityExpression	( options & PCRE_NO_AUTO_CAPTURE ) != 0		1466025	0		!=			
ANR	1475963	BitAndExpression	options & PCRE_NO_AUTO_CAPTURE		1466025	0		&			
ANR	1475964	Identifier	options		1466025	0					
ANR	1475965	Identifier	PCRE_NO_AUTO_CAPTURE		1466025	1					
ANR	1475966	PrimaryExpression	0		1466025	1					
ANR	1475967	CompoundStatement		3086:6:107746:107746	1466025	1					
ANR	1475968	ExpressionStatement	bravalue = OP_BRA	7526:6:246999:247016	1466025	0	True				
ANR	1475969	AssignmentExpression	bravalue = OP_BRA		1466025	0		=			
ANR	1475970	Identifier	bravalue		1466025	0					
ANR	1475971	Identifier	OP_BRA		1466025	1					
ANR	1475972	ElseStatement	else		1466025	0					
ANR	1475973	CompoundStatement		3093:6:107840:107840	1466025	0					
ANR	1475974	Label	NUMBERED_GROUP :	7533:6:247093:247107	1466025	0	True				
ANR	1475975	Identifier	NUMBERED_GROUP		1466025	0					
ANR	1475976	ExpressionStatement	cd -> bracount += 1	7534:6:247115:247132	1466025	1	True				
ANR	1475977	AssignmentExpression	cd -> bracount += 1		1466025	0		+=			
ANR	1475978	PtrMemberAccess	cd -> bracount		1466025	0					
ANR	1475979	Identifier	cd		1466025	0					
ANR	1475980	Identifier	bracount		1466025	1					
ANR	1475981	PrimaryExpression	1		1466025	1					
ANR	1475982	ExpressionStatement	"PUT2 ( code , 1 + LINK_SIZE , cd -> bracount )"	7535:6:247140:247177	1466025	2	True				
ANR	1475983	CallExpression	"PUT2 ( code , 1 + LINK_SIZE , cd -> bracount )"		1466025	0					
ANR	1475984	Callee	PUT2		1466025	0					
ANR	1475985	Identifier	PUT2		1466025	0					
ANR	1475986	ArgumentList	code		1466025	1					
ANR	1475987	Argument	code		1466025	0					
ANR	1475988	Identifier	code		1466025	0					
ANR	1475989	Argument	1 + LINK_SIZE		1466025	1					
ANR	1475990	AdditiveExpression	1 + LINK_SIZE		1466025	0		+			
ANR	1475991	PrimaryExpression	1		1466025	0					
ANR	1475992	Identifier	LINK_SIZE		1466025	1					
ANR	1475993	Argument	cd -> bracount		1466025	2					
ANR	1475994	PtrMemberAccess	cd -> bracount		1466025	0					
ANR	1475995	Identifier	cd		1466025	0					
ANR	1475996	Identifier	bracount		1466025	1					
ANR	1475997	ExpressionStatement	skipbytes = IMM2_SIZE	7536:6:247185:247206	1466025	3	True				
ANR	1475998	AssignmentExpression	skipbytes = IMM2_SIZE		1466025	0		=			
ANR	1475999	Identifier	skipbytes		1466025	0					
ANR	1476000	Identifier	IMM2_SIZE		1466025	1					
ANR	1476001	IfStatement	if ( ( cd -> parens_depth += 1 ) > PARENS_NEST_LIMIT )		1466025	141					
ANR	1476002	Condition	( cd -> parens_depth += 1 ) > PARENS_NEST_LIMIT	7542:8:247319:247361	1466025	0	True				
ANR	1476003	RelationalExpression	( cd -> parens_depth += 1 ) > PARENS_NEST_LIMIT		1466025	0		>			
ANR	1476004	AssignmentExpression	cd -> parens_depth += 1		1466025	0		+=			
ANR	1476005	PtrMemberAccess	cd -> parens_depth		1466025	0					
ANR	1476006	Identifier	cd		1466025	0					
ANR	1476007	Identifier	parens_depth		1466025	1					
ANR	1476008	PrimaryExpression	1		1466025	1					
ANR	1476009	Identifier	PARENS_NEST_LIMIT		1466025	1					
ANR	1476010	CompoundStatement		3104:6:108125:108125	1466025	1					
ANR	1476011	ExpressionStatement	* errorcodeptr = ERR82	7544:6:247378:247399	1466025	0	True				
ANR	1476012	AssignmentExpression	* errorcodeptr = ERR82		1466025	0		=			
ANR	1476013	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1476014	UnaryOperator	*		1466025	0					
ANR	1476015	Identifier	errorcodeptr		1466025	1					
ANR	1476016	Identifier	ERR82		1466025	1					
ANR	1476017	GotoStatement	goto FAILED ;	7545:6:247407:247418	1466025	1	True				
ANR	1476018	Identifier	FAILED		1466025	0					
ANR	1476019	IfStatement	if ( bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT && cd -> iscondassert )		1466025	142					
ANR	1476020	Condition	bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT && cd -> iscondassert	7556:8:247983:248064	1466025	0	True				
ANR	1476021	AndExpression	bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT && cd -> iscondassert		1466025	0		&&			
ANR	1476022	RelationalExpression	bravalue >= OP_ASSERT		1466025	0		>=			
ANR	1476023	Identifier	bravalue		1466025	0					
ANR	1476024	Identifier	OP_ASSERT		1466025	1					
ANR	1476025	AndExpression	bravalue <= OP_ASSERTBACK_NOT && cd -> iscondassert		1466025	1		&&			
ANR	1476026	RelationalExpression	bravalue <= OP_ASSERTBACK_NOT		1466025	0		<=			
ANR	1476027	Identifier	bravalue		1466025	0					
ANR	1476028	Identifier	OP_ASSERTBACK_NOT		1466025	1					
ANR	1476029	PtrMemberAccess	cd -> iscondassert		1466025	1					
ANR	1476030	Identifier	cd		1466025	0					
ANR	1476031	Identifier	iscondassert		1466025	1					
ANR	1476032	CompoundStatement		3119:6:108828:108828	1466025	1					
ANR	1476033	ExpressionStatement	previous = NULL	7559:6:248081:248096	1466025	0	True				
ANR	1476034	AssignmentExpression	previous = NULL		1466025	0		=			
ANR	1476035	Identifier	previous		1466025	0					
ANR	1476036	Identifier	NULL		1466025	1					
ANR	1476037	ExpressionStatement	cd -> iscondassert = FALSE	7560:6:248104:248128	1466025	1	True				
ANR	1476038	AssignmentExpression	cd -> iscondassert = FALSE		1466025	0		=			
ANR	1476039	PtrMemberAccess	cd -> iscondassert		1466025	0					
ANR	1476040	Identifier	cd		1466025	0					
ANR	1476041	Identifier	iscondassert		1466025	1					
ANR	1476042	Identifier	FALSE		1466025	1					
ANR	1476043	ElseStatement	else		1466025	0					
ANR	1476044	ExpressionStatement	previous = code	7562:9:248147:248162	1466025	0	True				
ANR	1476045	AssignmentExpression	previous = code		1466025	0		=			
ANR	1476046	Identifier	previous		1466025	0					
ANR	1476047	Identifier	code		1466025	1					
ANR	1476048	ExpressionStatement	* code = bravalue	7564:4:248169:248185	1466025	143	True				
ANR	1476049	AssignmentExpression	* code = bravalue		1466025	0		=			
ANR	1476050	UnaryOperationExpression	* code		1466025	0					
ANR	1476051	UnaryOperator	*		1466025	0					
ANR	1476052	Identifier	code		1466025	1					
ANR	1476053	Identifier	bravalue		1466025	1					
ANR	1476054	ExpressionStatement	tempcode = code	7565:4:248191:248206	1466025	144	True				
ANR	1476055	AssignmentExpression	tempcode = code		1466025	0		=			
ANR	1476056	Identifier	tempcode		1466025	0					
ANR	1476057	Identifier	code		1466025	1					
ANR	1476058	ExpressionStatement	tempreqvary = cd -> req_varyopt	7566:4:248212:248241	1466025	145	True				
ANR	1476059	AssignmentExpression	tempreqvary = cd -> req_varyopt		1466025	0		=			
ANR	1476060	Identifier	tempreqvary		1466025	0					
ANR	1476061	PtrMemberAccess	cd -> req_varyopt		1466025	1					
ANR	1476062	Identifier	cd		1466025	0					
ANR	1476063	Identifier	req_varyopt		1466025	1					
ANR	1476064	ExpressionStatement	tempbracount = cd -> bracount	7567:4:248286:248313	1466025	146	True				
ANR	1476065	AssignmentExpression	tempbracount = cd -> bracount		1466025	0		=			
ANR	1476066	Identifier	tempbracount		1466025	0					
ANR	1476067	PtrMemberAccess	cd -> bracount		1466025	1					
ANR	1476068	Identifier	cd		1466025	0					
ANR	1476069	Identifier	bracount		1466025	1					
ANR	1476070	ExpressionStatement	length_prevgroup = 0	7568:4:248360:248380	1466025	147	True				
ANR	1476071	AssignmentExpression	length_prevgroup = 0		1466025	0		=			
ANR	1476072	Identifier	length_prevgroup		1466025	0					
ANR	1476073	PrimaryExpression	0		1466025	1					
ANR	1476074	IfStatement	"if ( ! compile_regex ( newoptions , & tempcode , & ptr , errorcodeptr , ( bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT ) , reset_bracount , skipbytes , cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 ) , & subfirstchar , & subfirstcharflags , & subreqchar , & subreqcharflags , bcptr , cd , ( lengthptr == NULL ) ? NULL : & length_prevgroup ) )"		1466025	148					
ANR	1476075	Condition	"! compile_regex ( newoptions , & tempcode , & ptr , errorcodeptr , ( bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT ) , reset_bracount , skipbytes , cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 ) , & subfirstchar , & subfirstcharflags , & subreqchar , & subreqcharflags , bcptr , cd , ( lengthptr == NULL ) ? NULL : & length_prevgroup )"	7570:8:248446:249586	1466025	0	True				
ANR	1476076	UnaryOperationExpression	"! compile_regex ( newoptions , & tempcode , & ptr , errorcodeptr , ( bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT ) , reset_bracount , skipbytes , cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 ) , & subfirstchar , & subfirstcharflags , & subreqchar , & subreqcharflags , bcptr , cd , ( lengthptr == NULL ) ? NULL : & length_prevgroup )"		1466025	0					
ANR	1476077	UnaryOperator	!		1466025	0					
ANR	1476078	CallExpression	"compile_regex ( newoptions , & tempcode , & ptr , errorcodeptr , ( bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT ) , reset_bracount , skipbytes , cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 ) , & subfirstchar , & subfirstcharflags , & subreqchar , & subreqcharflags , bcptr , cd , ( lengthptr == NULL ) ? NULL : & length_prevgroup )"		1466025	1					
ANR	1476079	Callee	compile_regex		1466025	0					
ANR	1476080	Identifier	compile_regex		1466025	0					
ANR	1476081	ArgumentList	newoptions		1466025	1					
ANR	1476082	Argument	newoptions		1466025	0					
ANR	1476083	Identifier	newoptions		1466025	0					
ANR	1476084	Argument	& tempcode		1466025	1					
ANR	1476085	UnaryOperationExpression	& tempcode		1466025	0					
ANR	1476086	UnaryOperator	&		1466025	0					
ANR	1476087	Identifier	tempcode		1466025	1					
ANR	1476088	Argument	& ptr		1466025	2					
ANR	1476089	UnaryOperationExpression	& ptr		1466025	0					
ANR	1476090	UnaryOperator	&		1466025	0					
ANR	1476091	Identifier	ptr		1466025	1					
ANR	1476092	Argument	errorcodeptr		1466025	3					
ANR	1476093	Identifier	errorcodeptr		1466025	0					
ANR	1476094	Argument	bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT		1466025	4					
ANR	1476095	OrExpression	bravalue == OP_ASSERTBACK || bravalue == OP_ASSERTBACK_NOT		1466025	0		||			
ANR	1476096	EqualityExpression	bravalue == OP_ASSERTBACK		1466025	0		==			
ANR	1476097	Identifier	bravalue		1466025	0					
ANR	1476098	Identifier	OP_ASSERTBACK		1466025	1					
ANR	1476099	EqualityExpression	bravalue == OP_ASSERTBACK_NOT		1466025	1		==			
ANR	1476100	Identifier	bravalue		1466025	0					
ANR	1476101	Identifier	OP_ASSERTBACK_NOT		1466025	1					
ANR	1476102	Argument	reset_bracount		1466025	5					
ANR	1476103	Identifier	reset_bracount		1466025	0					
ANR	1476104	Argument	skipbytes		1466025	6					
ANR	1476105	Identifier	skipbytes		1466025	0					
ANR	1476106	Argument	cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 )		1466025	7					
ANR	1476107	AdditiveExpression	cond_depth + ( ( bravalue == OP_COND ) ? 1 : 0 )		1466025	0		+			
ANR	1476108	Identifier	cond_depth		1466025	0					
ANR	1476109	ConditionalExpression	( bravalue == OP_COND ) ? 1 : 0		1466025	1					
ANR	1476110	Condition	bravalue == OP_COND		1466025	0					
ANR	1476111	EqualityExpression	bravalue == OP_COND		1466025	0		==			
ANR	1476112	Identifier	bravalue		1466025	0					
ANR	1476113	Identifier	OP_COND		1466025	1					
ANR	1476114	PrimaryExpression	1		1466025	1					
ANR	1476115	PrimaryExpression	0		1466025	2					
ANR	1476116	Argument	& subfirstchar		1466025	8					
ANR	1476117	UnaryOperationExpression	& subfirstchar		1466025	0					
ANR	1476118	UnaryOperator	&		1466025	0					
ANR	1476119	Identifier	subfirstchar		1466025	1					
ANR	1476120	Argument	& subfirstcharflags		1466025	9					
ANR	1476121	UnaryOperationExpression	& subfirstcharflags		1466025	0					
ANR	1476122	UnaryOperator	&		1466025	0					
ANR	1476123	Identifier	subfirstcharflags		1466025	1					
ANR	1476124	Argument	& subreqchar		1466025	10					
ANR	1476125	UnaryOperationExpression	& subreqchar		1466025	0					
ANR	1476126	UnaryOperator	&		1466025	0					
ANR	1476127	Identifier	subreqchar		1466025	1					
ANR	1476128	Argument	& subreqcharflags		1466025	11					
ANR	1476129	UnaryOperationExpression	& subreqcharflags		1466025	0					
ANR	1476130	UnaryOperator	&		1466025	0					
ANR	1476131	Identifier	subreqcharflags		1466025	1					
ANR	1476132	Argument	bcptr		1466025	12					
ANR	1476133	Identifier	bcptr		1466025	0					
ANR	1476134	Argument	cd		1466025	13					
ANR	1476135	Identifier	cd		1466025	0					
ANR	1476136	Argument	( lengthptr == NULL ) ? NULL : & length_prevgroup		1466025	14					
ANR	1476137	ConditionalExpression	( lengthptr == NULL ) ? NULL : & length_prevgroup		1466025	0					
ANR	1476138	Condition	lengthptr == NULL		1466025	0					
ANR	1476139	EqualityExpression	lengthptr == NULL		1466025	0		==			
ANR	1476140	Identifier	lengthptr		1466025	0					
ANR	1476141	Identifier	NULL		1466025	1					
ANR	1476142	Identifier	NULL		1466025	1					
ANR	1476143	UnaryOperationExpression	& length_prevgroup		1466025	2					
ANR	1476144	UnaryOperator	&		1466025	0					
ANR	1476145	Identifier	length_prevgroup		1466025	1					
ANR	1476146	GotoStatement	goto FAILED ;	7590:6:249595:249606	1466025	1	True				
ANR	1476147	Identifier	FAILED		1466025	0					
ANR	1476148	ExpressionStatement	cd -> parens_depth -= 1	7592:4:249613:249634	1466025	149	True				
ANR	1476149	AssignmentExpression	cd -> parens_depth -= 1		1466025	0		-=			
ANR	1476150	PtrMemberAccess	cd -> parens_depth		1466025	0					
ANR	1476151	Identifier	cd		1466025	0					
ANR	1476152	Identifier	parens_depth		1466025	1					
ANR	1476153	PrimaryExpression	1		1466025	1					
ANR	1476154	IfStatement	if ( bravalue == OP_ONCE && cd -> bracount <= tempbracount )		1466025	150					
ANR	1476155	Condition	bravalue == OP_ONCE && cd -> bracount <= tempbracount	7597:8:249773:249823	1466025	0	True				
ANR	1476156	AndExpression	bravalue == OP_ONCE && cd -> bracount <= tempbracount		1466025	0		&&			
ANR	1476157	EqualityExpression	bravalue == OP_ONCE		1466025	0		==			
ANR	1476158	Identifier	bravalue		1466025	0					
ANR	1476159	Identifier	OP_ONCE		1466025	1					
ANR	1476160	RelationalExpression	cd -> bracount <= tempbracount		1466025	1		<=			
ANR	1476161	PtrMemberAccess	cd -> bracount		1466025	0					
ANR	1476162	Identifier	cd		1466025	0					
ANR	1476163	Identifier	bracount		1466025	1					
ANR	1476164	Identifier	tempbracount		1466025	1					
ANR	1476165	ExpressionStatement	* code = OP_ONCE_NC	7598:6:249832:249850	1466025	1	True				
ANR	1476166	AssignmentExpression	* code = OP_ONCE_NC		1466025	0		=			
ANR	1476167	UnaryOperationExpression	* code		1466025	0					
ANR	1476168	UnaryOperator	*		1466025	0					
ANR	1476169	Identifier	code		1466025	1					
ANR	1476170	Identifier	OP_ONCE_NC		1466025	1					
ANR	1476171	IfStatement	if ( bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT )		1466025	151					
ANR	1476172	Condition	bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT	7600:8:249861:249914	1466025	0	True				
ANR	1476173	AndExpression	bravalue >= OP_ASSERT && bravalue <= OP_ASSERTBACK_NOT		1466025	0		&&			
ANR	1476174	RelationalExpression	bravalue >= OP_ASSERT		1466025	0		>=			
ANR	1476175	Identifier	bravalue		1466025	0					
ANR	1476176	Identifier	OP_ASSERT		1466025	1					
ANR	1476177	RelationalExpression	bravalue <= OP_ASSERTBACK_NOT		1466025	1		<=			
ANR	1476178	Identifier	bravalue		1466025	0					
ANR	1476179	Identifier	OP_ASSERTBACK_NOT		1466025	1					
ANR	1476180	ExpressionStatement	cd -> assert_depth -= 1	7601:6:249923:249944	1466025	1	True				
ANR	1476181	AssignmentExpression	cd -> assert_depth -= 1		1466025	0		-=			
ANR	1476182	PtrMemberAccess	cd -> assert_depth		1466025	0					
ANR	1476183	Identifier	cd		1466025	0					
ANR	1476184	Identifier	assert_depth		1466025	1					
ANR	1476185	PrimaryExpression	1		1466025	1					
ANR	1476186	IfStatement	if ( bravalue == OP_COND && lengthptr == NULL )		1466025	152					
ANR	1476187	Condition	bravalue == OP_COND && lengthptr == NULL	7612:8:250413:250452	1466025	0	True				
ANR	1476188	AndExpression	bravalue == OP_COND && lengthptr == NULL		1466025	0		&&			
ANR	1476189	EqualityExpression	bravalue == OP_COND		1466025	0		==			
ANR	1476190	Identifier	bravalue		1466025	0					
ANR	1476191	Identifier	OP_COND		1466025	1					
ANR	1476192	EqualityExpression	lengthptr == NULL		1466025	1		==			
ANR	1476193	Identifier	lengthptr		1466025	0					
ANR	1476194	Identifier	NULL		1466025	1					
ANR	1476195	CompoundStatement		3176:6:111253:111270	1466025	1					
ANR	1476196	IdentifierDeclStatement	pcre_uchar * tc = code ;	7614:6:250469:250490	1466025	0	True				
ANR	1476197	IdentifierDecl	* tc = code		1466025	0					
ANR	1476198	IdentifierDeclType	pcre_uchar *		1466025	0					
ANR	1476199	Identifier	tc		1466025	1					
ANR	1476200	AssignmentExpression	* tc = code		1466025	2		=			
ANR	1476201	Identifier	code		1466025	0					
ANR	1476202	Identifier	code		1466025	1					
ANR	1476203	IdentifierDeclStatement	int condcount = 0 ;	7615:6:250498:250515	1466025	1	True				
ANR	1476204	IdentifierDecl	condcount = 0		1466025	0					
ANR	1476205	IdentifierDeclType	int		1466025	0					
ANR	1476206	Identifier	condcount		1466025	1					
ANR	1476207	AssignmentExpression	condcount = 0		1466025	2		=			
ANR	1476208	Identifier	condcount		1466025	0					
ANR	1476209	PrimaryExpression	0		1466025	1					
ANR	1476210	DoStatement	do		1466025	2					
ANR	1476211	CompoundStatement		3178:9:111282:111282	1466025	0					
ANR	1476212	ExpressionStatement	condcount ++	7618:9:250538:250549	1466025	0	True				
ANR	1476213	PostIncDecOperationExpression	condcount ++		1466025	0					
ANR	1476214	Identifier	condcount		1466025	0					
ANR	1476215	IncDec	++		1466025	1					
ANR	1476216	ExpressionStatement	"tc += GET ( tc , 1 )"	7619:9:250560:250575	1466025	1	True				
ANR	1476217	AssignmentExpression	"tc += GET ( tc , 1 )"		1466025	0		+=			
ANR	1476218	Identifier	tc		1466025	0					
ANR	1476219	CallExpression	"GET ( tc , 1 )"		1466025	1					
ANR	1476220	Callee	GET		1466025	0					
ANR	1476221	Identifier	GET		1466025	0					
ANR	1476222	ArgumentList	tc		1466025	1					
ANR	1476223	Argument	tc		1466025	0					
ANR	1476224	Identifier	tc		1466025	0					
ANR	1476225	Argument	1		1466025	1					
ANR	1476226	PrimaryExpression	1		1466025	0					
ANR	1476227	Condition	* tc != OP_KET	7621:13:250601:250613	1466025	1	True				
ANR	1476228	EqualityExpression	* tc != OP_KET		1466025	0		!=			
ANR	1476229	UnaryOperationExpression	* tc		1466025	0					
ANR	1476230	UnaryOperator	*		1466025	0					
ANR	1476231	Identifier	tc		1466025	1					
ANR	1476232	Identifier	OP_KET		1466025	1					
ANR	1476233	IfStatement	if ( code [ LINK_SIZE + 1 ] == OP_DEF )		1466025	3					
ANR	1476234	Condition	code [ LINK_SIZE + 1 ] == OP_DEF	7626:10:250750:250776	1466025	0	True				
ANR	1476235	EqualityExpression	code [ LINK_SIZE + 1 ] == OP_DEF		1466025	0		==			
ANR	1476236	ArrayIndexing	code [ LINK_SIZE + 1 ]		1466025	0					
ANR	1476237	Identifier	code		1466025	0					
ANR	1476238	AdditiveExpression	LINK_SIZE + 1		1466025	1		+			
ANR	1476239	Identifier	LINK_SIZE		1466025	0					
ANR	1476240	PrimaryExpression	1		1466025	1					
ANR	1476241	Identifier	OP_DEF		1466025	1					
ANR	1476242	CompoundStatement		3188:8:111542:111542	1466025	1					
ANR	1476243	IfStatement	if ( condcount > 1 )		1466025	0					
ANR	1476244	Condition	condcount > 1	7628:12:250801:250813	1466025	0	True				
ANR	1476245	RelationalExpression	condcount > 1		1466025	0		>			
ANR	1476246	Identifier	condcount		1466025	0					
ANR	1476247	PrimaryExpression	1		1466025	1					
ANR	1476248	CompoundStatement		3190:10:111581:111581	1466025	1					
ANR	1476249	ExpressionStatement	* errorcodeptr = ERR54	7630:10:250838:250859	1466025	0	True				
ANR	1476250	AssignmentExpression	* errorcodeptr = ERR54		1466025	0		=			
ANR	1476251	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1476252	UnaryOperator	*		1466025	0					
ANR	1476253	Identifier	errorcodeptr		1466025	1					
ANR	1476254	Identifier	ERR54		1466025	1					
ANR	1476255	GotoStatement	goto FAILED ;	7631:10:250871:250882	1466025	1	True				
ANR	1476256	Identifier	FAILED		1466025	0					
ANR	1476257	ExpressionStatement	bravalue = OP_DEF	7633:8:250904:250921	1466025	1	True				
ANR	1476258	AssignmentExpression	bravalue = OP_DEF		1466025	0		=			
ANR	1476259	Identifier	bravalue		1466025	0					
ANR	1476260	Identifier	OP_DEF		1466025	1					
ANR	1476261	ElseStatement	else		1466025	0					
ANR	1476262	CompoundStatement		3202:8:111948:111948	1466025	0					
ANR	1476263	IfStatement	if ( condcount > 2 )		1466025	0					
ANR	1476264	Condition	condcount > 2	7642:12:251207:251219	1466025	0	True				
ANR	1476265	RelationalExpression	condcount > 2		1466025	0		>			
ANR	1476266	Identifier	condcount		1466025	0					
ANR	1476267	PrimaryExpression	2		1466025	1					
ANR	1476268	CompoundStatement		3204:10:111987:111987	1466025	1					
ANR	1476269	ExpressionStatement	* errorcodeptr = ERR27	7644:10:251244:251265	1466025	0	True				
ANR	1476270	AssignmentExpression	* errorcodeptr = ERR27		1466025	0		=			
ANR	1476271	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1476272	UnaryOperator	*		1466025	0					
ANR	1476273	Identifier	errorcodeptr		1466025	1					
ANR	1476274	Identifier	ERR27		1466025	1					
ANR	1476275	GotoStatement	goto FAILED ;	7645:10:251277:251288	1466025	1	True				
ANR	1476276	Identifier	FAILED		1466025	0					
ANR	1476277	IfStatement	if ( condcount == 1 )		1466025	1					
ANR	1476278	Condition	condcount == 1	7647:12:251314:251327	1466025	0	True				
ANR	1476279	EqualityExpression	condcount == 1		1466025	0		==			
ANR	1476280	Identifier	condcount		1466025	0					
ANR	1476281	PrimaryExpression	1		1466025	1					
ANR	1476282	ExpressionStatement	subfirstcharflags = subreqcharflags = REQ_NONE	7647:28:251330:251376	1466025	1	True				
ANR	1476283	AssignmentExpression	subfirstcharflags = subreqcharflags = REQ_NONE		1466025	0		=			
ANR	1476284	Identifier	subfirstcharflags		1466025	0					
ANR	1476285	AssignmentExpression	subreqcharflags = REQ_NONE		1466025	1		=			
ANR	1476286	Identifier	subreqcharflags		1466025	0					
ANR	1476287	Identifier	REQ_NONE		1466025	1					
ANR	1476288	IfStatement	if ( * ptr != CHAR_RIGHT_PARENTHESIS )		1466025	153					
ANR	1476289	Condition	* ptr != CHAR_RIGHT_PARENTHESIS	7653:8:251444:251473	1466025	0	True				
ANR	1476290	EqualityExpression	* ptr != CHAR_RIGHT_PARENTHESIS		1466025	0		!=			
ANR	1476291	UnaryOperationExpression	* ptr		1466025	0					
ANR	1476292	UnaryOperator	*		1466025	0					
ANR	1476293	Identifier	ptr		1466025	1					
ANR	1476294	Identifier	CHAR_RIGHT_PARENTHESIS		1466025	1					
ANR	1476295	CompoundStatement		3215:6:112237:112237	1466025	1					
ANR	1476296	ExpressionStatement	* errorcodeptr = ERR14	7655:6:251490:251511	1466025	0	True				
ANR	1476297	AssignmentExpression	* errorcodeptr = ERR14		1466025	0		=			
ANR	1476298	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1476299	UnaryOperator	*		1466025	0					
ANR	1476300	Identifier	errorcodeptr		1466025	1					
ANR	1476301	Identifier	ERR14		1466025	1					
ANR	1476302	GotoStatement	goto FAILED ;	7656:6:251519:251530	1466025	1	True				
ANR	1476303	Identifier	FAILED		1466025	0					
ANR	1476304	IfStatement	if ( lengthptr != NULL )		1466025	154					
ANR	1476305	Condition	lengthptr != NULL	7664:8:251818:251834	1466025	0	True				
ANR	1476306	EqualityExpression	lengthptr != NULL		1466025	0		!=			
ANR	1476307	Identifier	lengthptr		1466025	0					
ANR	1476308	Identifier	NULL		1466025	1					
ANR	1476309	CompoundStatement		3226:6:112598:112598	1466025	1					
ANR	1476310	IfStatement	if ( OFLOW_MAX - * lengthptr < length_prevgroup - 2 - 2 * LINK_SIZE )		1466025	0					
ANR	1476311	Condition	OFLOW_MAX - * lengthptr < length_prevgroup - 2 - 2 * LINK_SIZE	7666:10:251855:251913	1466025	0	True				
ANR	1476312	RelationalExpression	OFLOW_MAX - * lengthptr < length_prevgroup - 2 - 2 * LINK_SIZE		1466025	0		<			
ANR	1476313	AdditiveExpression	OFLOW_MAX - * lengthptr		1466025	0		-			
ANR	1476314	Identifier	OFLOW_MAX		1466025	0					
ANR	1476315	UnaryOperationExpression	* lengthptr		1466025	1					
ANR	1476316	UnaryOperator	*		1466025	0					
ANR	1476317	Identifier	lengthptr		1466025	1					
ANR	1476318	AdditiveExpression	length_prevgroup - 2 - 2 * LINK_SIZE		1466025	1		-			
ANR	1476319	Identifier	length_prevgroup		1466025	0					
ANR	1476320	AdditiveExpression	2 - 2 * LINK_SIZE		1466025	1		-			
ANR	1476321	PrimaryExpression	2		1466025	0					
ANR	1476322	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1476323	PrimaryExpression	2		1466025	0					
ANR	1476324	Identifier	LINK_SIZE		1466025	1					
ANR	1476325	CompoundStatement		3228:8:112679:112679	1466025	1					
ANR	1476326	ExpressionStatement	* errorcodeptr = ERR20	7668:8:251934:251955	1466025	0	True				
ANR	1476327	AssignmentExpression	* errorcodeptr = ERR20		1466025	0		=			
ANR	1476328	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1476329	UnaryOperator	*		1466025	0					
ANR	1476330	Identifier	errorcodeptr		1466025	1					
ANR	1476331	Identifier	ERR20		1466025	1					
ANR	1476332	GotoStatement	goto FAILED ;	7669:8:251965:251976	1466025	1	True				
ANR	1476333	Identifier	FAILED		1466025	0					
ANR	1476334	ExpressionStatement	* lengthptr += length_prevgroup - 2 - 2 * LINK_SIZE	7671:6:251994:252042	1466025	1	True				
ANR	1476335	AssignmentExpression	* lengthptr += length_prevgroup - 2 - 2 * LINK_SIZE		1466025	0		+=			
ANR	1476336	UnaryOperationExpression	* lengthptr		1466025	0					
ANR	1476337	UnaryOperator	*		1466025	0					
ANR	1476338	Identifier	lengthptr		1466025	1					
ANR	1476339	AdditiveExpression	length_prevgroup - 2 - 2 * LINK_SIZE		1466025	1		-			
ANR	1476340	Identifier	length_prevgroup		1466025	0					
ANR	1476341	AdditiveExpression	2 - 2 * LINK_SIZE		1466025	1		-			
ANR	1476342	PrimaryExpression	2		1466025	0					
ANR	1476343	MultiplicativeExpression	2 * LINK_SIZE		1466025	1		*			
ANR	1476344	PrimaryExpression	2		1466025	0					
ANR	1476345	Identifier	LINK_SIZE		1466025	1					
ANR	1476346	ExpressionStatement	code ++	7672:6:252050:252056	1466025	2	True				
ANR	1476347	PostIncDecOperationExpression	code ++		1466025	0					
ANR	1476348	Identifier	code		1466025	0					
ANR	1476349	IncDec	++		1466025	1					
ANR	1476350	ExpressionStatement	"PUTINC ( code , 0 , 1 + LINK_SIZE )"	7673:6:252103:252133	1466025	3	True				
ANR	1476351	CallExpression	"PUTINC ( code , 0 , 1 + LINK_SIZE )"		1466025	0					
ANR	1476352	Callee	PUTINC		1466025	0					
ANR	1476353	Identifier	PUTINC		1466025	0					
ANR	1476354	ArgumentList	code		1466025	1					
ANR	1476355	Argument	code		1466025	0					
ANR	1476356	Identifier	code		1466025	0					
ANR	1476357	Argument	0		1466025	1					
ANR	1476358	PrimaryExpression	0		1466025	0					
ANR	1476359	Argument	1 + LINK_SIZE		1466025	2					
ANR	1476360	AdditiveExpression	1 + LINK_SIZE		1466025	0		+			
ANR	1476361	PrimaryExpression	1		1466025	0					
ANR	1476362	Identifier	LINK_SIZE		1466025	1					
ANR	1476363	ExpressionStatement	* code ++ = OP_KET	7674:6:252141:252157	1466025	4	True				
ANR	1476364	AssignmentExpression	* code ++ = OP_KET		1466025	0		=			
ANR	1476365	UnaryOperationExpression	* code ++		1466025	0					
ANR	1476366	UnaryOperator	*		1466025	0					
ANR	1476367	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1476368	Identifier	code		1466025	0					
ANR	1476369	IncDec	++		1466025	1					
ANR	1476370	Identifier	OP_KET		1466025	1					
ANR	1476371	ExpressionStatement	"PUTINC ( code , 0 , 1 + LINK_SIZE )"	7675:6:252165:252195	1466025	5	True				
ANR	1476372	CallExpression	"PUTINC ( code , 0 , 1 + LINK_SIZE )"		1466025	0					
ANR	1476373	Callee	PUTINC		1466025	0					
ANR	1476374	Identifier	PUTINC		1466025	0					
ANR	1476375	ArgumentList	code		1466025	1					
ANR	1476376	Argument	code		1466025	0					
ANR	1476377	Identifier	code		1466025	0					
ANR	1476378	Argument	0		1466025	1					
ANR	1476379	PrimaryExpression	0		1466025	0					
ANR	1476380	Argument	1 + LINK_SIZE		1466025	2					
ANR	1476381	AdditiveExpression	1 + LINK_SIZE		1466025	0		+			
ANR	1476382	PrimaryExpression	1		1466025	0					
ANR	1476383	Identifier	LINK_SIZE		1466025	1					
ANR	1476384	BreakStatement	break ;	7676:6:252203:252208	1466025	6	True				
ANR	1476385	ExpressionStatement	code = tempcode	7681:4:252361:252376	1466025	155	True				
ANR	1476386	AssignmentExpression	code = tempcode		1466025	0		=			
ANR	1476387	Identifier	code		1466025	0					
ANR	1476388	Identifier	tempcode		1466025	1					
ANR	1476389	IfStatement	if ( bravalue == OP_DEF )		1466025	156					
ANR	1476390	Condition	bravalue == OP_DEF	7686:8:252478:252495	1466025	0	True				
ANR	1476391	EqualityExpression	bravalue == OP_DEF		1466025	0		==			
ANR	1476392	Identifier	bravalue		1466025	0					
ANR	1476393	Identifier	OP_DEF		1466025	1					
ANR	1476394	BreakStatement	break ;	7686:28:252498:252503	1466025	1	True				
ANR	1476395	ExpressionStatement	zeroreqchar = reqchar	7695:4:252917:252938	1466025	157	True				
ANR	1476396	AssignmentExpression	zeroreqchar = reqchar		1466025	0		=			
ANR	1476397	Identifier	zeroreqchar		1466025	0					
ANR	1476398	Identifier	reqchar		1466025	1					
ANR	1476399	ExpressionStatement	zeroreqcharflags = reqcharflags	7696:4:252944:252975	1466025	158	True				
ANR	1476400	AssignmentExpression	zeroreqcharflags = reqcharflags		1466025	0		=			
ANR	1476401	Identifier	zeroreqcharflags		1466025	0					
ANR	1476402	Identifier	reqcharflags		1466025	1					
ANR	1476403	ExpressionStatement	zerofirstchar = firstchar	7697:4:252981:253006	1466025	159	True				
ANR	1476404	AssignmentExpression	zerofirstchar = firstchar		1466025	0		=			
ANR	1476405	Identifier	zerofirstchar		1466025	0					
ANR	1476406	Identifier	firstchar		1466025	1					
ANR	1476407	ExpressionStatement	zerofirstcharflags = firstcharflags	7698:4:253012:253047	1466025	160	True				
ANR	1476408	AssignmentExpression	zerofirstcharflags = firstcharflags		1466025	0		=			
ANR	1476409	Identifier	zerofirstcharflags		1466025	0					
ANR	1476410	Identifier	firstcharflags		1466025	1					
ANR	1476411	ExpressionStatement	groupsetfirstchar = FALSE	7699:4:253053:253078	1466025	161	True				
ANR	1476412	AssignmentExpression	groupsetfirstchar = FALSE		1466025	0		=			
ANR	1476413	Identifier	groupsetfirstchar		1466025	0					
ANR	1476414	Identifier	FALSE		1466025	1					
ANR	1476415	IfStatement	if ( bravalue >= OP_ONCE )		1466025	162					
ANR	1476416	Condition	bravalue >= OP_ONCE	7701:8:253089:253107	1466025	0	True				
ANR	1476417	RelationalExpression	bravalue >= OP_ONCE		1466025	0		>=			
ANR	1476418	Identifier	bravalue		1466025	0					
ANR	1476419	Identifier	OP_ONCE		1466025	1					
ANR	1476420	CompoundStatement		3263:6:113871:113871	1466025	1					
ANR	1476421	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	0					
ANR	1476422	Condition	firstcharflags == REQ_UNSET	7709:10:253480:253506	1466025	0	True				
ANR	1476423	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1476424	Identifier	firstcharflags		1466025	0					
ANR	1476425	Identifier	REQ_UNSET		1466025	1					
ANR	1476426	CompoundStatement		3271:8:114272:114272	1466025	1					
ANR	1476427	IfStatement	if ( subfirstcharflags >= 0 )		1466025	0					
ANR	1476428	Condition	subfirstcharflags >= 0	7711:12:253531:253552	1466025	0	True				
ANR	1476429	RelationalExpression	subfirstcharflags >= 0		1466025	0		>=			
ANR	1476430	Identifier	subfirstcharflags		1466025	0					
ANR	1476431	PrimaryExpression	0		1466025	1					
ANR	1476432	CompoundStatement		3273:10:114320:114320	1466025	1					
ANR	1476433	ExpressionStatement	firstchar = subfirstchar	7713:10:253577:253601	1466025	0	True				
ANR	1476434	AssignmentExpression	firstchar = subfirstchar		1466025	0		=			
ANR	1476435	Identifier	firstchar		1466025	0					
ANR	1476436	Identifier	subfirstchar		1466025	1					
ANR	1476437	ExpressionStatement	firstcharflags = subfirstcharflags	7714:10:253613:253647	1466025	1	True				
ANR	1476438	AssignmentExpression	firstcharflags = subfirstcharflags		1466025	0		=			
ANR	1476439	Identifier	firstcharflags		1466025	0					
ANR	1476440	Identifier	subfirstcharflags		1466025	1					
ANR	1476441	ExpressionStatement	groupsetfirstchar = TRUE	7715:10:253659:253683	1466025	2	True				
ANR	1476442	AssignmentExpression	groupsetfirstchar = TRUE		1466025	0		=			
ANR	1476443	Identifier	groupsetfirstchar		1466025	0					
ANR	1476444	Identifier	TRUE		1466025	1					
ANR	1476445	ElseStatement	else		1466025	0					
ANR	1476446	ExpressionStatement	firstcharflags = REQ_NONE	7717:13:253710:253735	1466025	0	True				
ANR	1476447	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1476448	Identifier	firstcharflags		1466025	0					
ANR	1476449	Identifier	REQ_NONE		1466025	1					
ANR	1476450	ExpressionStatement	zerofirstcharflags = REQ_NONE	7718:8:253745:253774	1466025	1	True				
ANR	1476451	AssignmentExpression	zerofirstcharflags = REQ_NONE		1466025	0		=			
ANR	1476452	Identifier	zerofirstcharflags		1466025	0					
ANR	1476453	Identifier	REQ_NONE		1466025	1					
ANR	1476454	ElseStatement	else		1466025	0					
ANR	1476455	IfStatement	if ( subfirstcharflags >= 0 && subreqcharflags < 0 )		1466025	0					
ANR	1476456	Condition	subfirstcharflags >= 0 && subreqcharflags < 0	7725:15:253983:254027	1466025	0	True				
ANR	1476457	AndExpression	subfirstcharflags >= 0 && subreqcharflags < 0		1466025	0		&&			
ANR	1476458	RelationalExpression	subfirstcharflags >= 0		1466025	0		>=			
ANR	1476459	Identifier	subfirstcharflags		1466025	0					
ANR	1476460	PrimaryExpression	0		1466025	1					
ANR	1476461	RelationalExpression	subreqcharflags < 0		1466025	1		<			
ANR	1476462	Identifier	subreqcharflags		1466025	0					
ANR	1476463	PrimaryExpression	0		1466025	1					
ANR	1476464	CompoundStatement		3287:8:114793:114793	1466025	1					
ANR	1476465	ExpressionStatement	subreqchar = subfirstchar	7727:8:254048:254073	1466025	0	True				
ANR	1476466	AssignmentExpression	subreqchar = subfirstchar		1466025	0		=			
ANR	1476467	Identifier	subreqchar		1466025	0					
ANR	1476468	Identifier	subfirstchar		1466025	1					
ANR	1476469	ExpressionStatement	subreqcharflags = subfirstcharflags | tempreqvary	7728:8:254083:254132	1466025	1	True				
ANR	1476470	AssignmentExpression	subreqcharflags = subfirstcharflags | tempreqvary		1466025	0		=			
ANR	1476471	Identifier	subreqcharflags		1466025	0					
ANR	1476472	InclusiveOrExpression	subfirstcharflags | tempreqvary		1466025	1		|			
ANR	1476473	Identifier	subfirstcharflags		1466025	0					
ANR	1476474	Identifier	tempreqvary		1466025	1					
ANR	1476475	IfStatement	if ( subreqcharflags >= 0 )		1466025	1					
ANR	1476476	Condition	subreqcharflags >= 0	7734:10:254288:254307	1466025	0	True				
ANR	1476477	RelationalExpression	subreqcharflags >= 0		1466025	0		>=			
ANR	1476478	Identifier	subreqcharflags		1466025	0					
ANR	1476479	PrimaryExpression	0		1466025	1					
ANR	1476480	CompoundStatement		3296:8:115073:115073	1466025	1					
ANR	1476481	ExpressionStatement	reqchar = subreqchar	7736:8:254328:254348	1466025	0	True				
ANR	1476482	AssignmentExpression	reqchar = subreqchar		1466025	0		=			
ANR	1476483	Identifier	reqchar		1466025	0					
ANR	1476484	Identifier	subreqchar		1466025	1					
ANR	1476485	ExpressionStatement	reqcharflags = subreqcharflags	7737:8:254358:254388	1466025	1	True				
ANR	1476486	AssignmentExpression	reqcharflags = subreqcharflags		1466025	0		=			
ANR	1476487	Identifier	reqcharflags		1466025	0					
ANR	1476488	Identifier	subreqcharflags		1466025	1					
ANR	1476489	ElseStatement	else		1466025	0					
ANR	1476490	IfStatement	if ( bravalue == OP_ASSERT && subreqcharflags >= 0 )		1466025	0					
ANR	1476491	Condition	bravalue == OP_ASSERT && subreqcharflags >= 0	7749:13:254936:254980	1466025	0	True				
ANR	1476492	AndExpression	bravalue == OP_ASSERT && subreqcharflags >= 0		1466025	0		&&			
ANR	1476493	EqualityExpression	bravalue == OP_ASSERT		1466025	0		==			
ANR	1476494	Identifier	bravalue		1466025	0					
ANR	1476495	Identifier	OP_ASSERT		1466025	1					
ANR	1476496	RelationalExpression	subreqcharflags >= 0		1466025	1		>=			
ANR	1476497	Identifier	subreqcharflags		1466025	0					
ANR	1476498	PrimaryExpression	0		1466025	1					
ANR	1476499	CompoundStatement		3311:6:115744:115744	1466025	1					
ANR	1476500	ExpressionStatement	reqchar = subreqchar	7751:6:254997:255017	1466025	0	True				
ANR	1476501	AssignmentExpression	reqchar = subreqchar		1466025	0		=			
ANR	1476502	Identifier	reqchar		1466025	0					
ANR	1476503	Identifier	subreqchar		1466025	1					
ANR	1476504	ExpressionStatement	reqcharflags = subreqcharflags	7752:6:255025:255055	1466025	1	True				
ANR	1476505	AssignmentExpression	reqcharflags = subreqcharflags		1466025	0		=			
ANR	1476506	Identifier	reqcharflags		1466025	0					
ANR	1476507	Identifier	subreqcharflags		1466025	1					
ANR	1476508	BreakStatement	break ;	7754:4:255069:255074	1466025	163	True				
ANR	1476509	Label	case CHAR_BACKSLASH :	7766:4:255678:255697	1466025	164	True				
ANR	1476510	Identifier	CHAR_BACKSLASH		1466025	0					
ANR	1476511	ExpressionStatement	tempptr = ptr	7767:4:255703:255716	1466025	165	True				
ANR	1476512	AssignmentExpression	tempptr = ptr		1466025	0		=			
ANR	1476513	Identifier	tempptr		1466025	0					
ANR	1476514	Identifier	ptr		1466025	1					
ANR	1476515	ExpressionStatement	"escape = check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , FALSE )"	7768:4:255722:255798	1466025	166	True				
ANR	1476516	AssignmentExpression	"escape = check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , FALSE )"		1466025	0		=			
ANR	1476517	Identifier	escape		1466025	0					
ANR	1476518	CallExpression	"check_escape ( & ptr , & ec , errorcodeptr , cd -> bracount , options , FALSE )"		1466025	1					
ANR	1476519	Callee	check_escape		1466025	0					
ANR	1476520	Identifier	check_escape		1466025	0					
ANR	1476521	ArgumentList	& ptr		1466025	1					
ANR	1476522	Argument	& ptr		1466025	0					
ANR	1476523	UnaryOperationExpression	& ptr		1466025	0					
ANR	1476524	UnaryOperator	&		1466025	0					
ANR	1476525	Identifier	ptr		1466025	1					
ANR	1476526	Argument	& ec		1466025	1					
ANR	1476527	UnaryOperationExpression	& ec		1466025	0					
ANR	1476528	UnaryOperator	&		1466025	0					
ANR	1476529	Identifier	ec		1466025	1					
ANR	1476530	Argument	errorcodeptr		1466025	2					
ANR	1476531	Identifier	errorcodeptr		1466025	0					
ANR	1476532	Argument	cd -> bracount		1466025	3					
ANR	1476533	PtrMemberAccess	cd -> bracount		1466025	0					
ANR	1476534	Identifier	cd		1466025	0					
ANR	1476535	Identifier	bracount		1466025	1					
ANR	1476536	Argument	options		1466025	4					
ANR	1476537	Identifier	options		1466025	0					
ANR	1476538	Argument	FALSE		1466025	5					
ANR	1476539	Identifier	FALSE		1466025	0					
ANR	1476540	IfStatement	if ( * errorcodeptr != 0 )		1466025	167					
ANR	1476541	Condition	* errorcodeptr != 0	7769:8:255808:255825	1466025	0	True				
ANR	1476542	EqualityExpression	* errorcodeptr != 0		1466025	0		!=			
ANR	1476543	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1476544	UnaryOperator	*		1466025	0					
ANR	1476545	Identifier	errorcodeptr		1466025	1					
ANR	1476546	PrimaryExpression	0		1466025	1					
ANR	1476547	GotoStatement	goto FAILED ;	7769:28:255828:255839	1466025	1	True				
ANR	1476548	Identifier	FAILED		1466025	0					
ANR	1476549	IfStatement	if ( escape == 0 )		1466025	168					
ANR	1476550	Condition	escape == 0	7771:8:255850:255860	1466025	0	True				
ANR	1476551	EqualityExpression	escape == 0		1466025	0		==			
ANR	1476552	Identifier	escape		1466025	0					
ANR	1476553	PrimaryExpression	0		1466025	1					
ANR	1476554	ExpressionStatement	c = ec	7772:6:255928:255934	1466025	1	True				
ANR	1476555	AssignmentExpression	c = ec		1466025	0		=			
ANR	1476556	Identifier	c		1466025	0					
ANR	1476557	Identifier	ec		1466025	1					
ANR	1476558	ElseStatement	else		1466025	0					
ANR	1476559	CompoundStatement		3335:6:116706:116706	1466025	0					
ANR	1476560	IfStatement	if ( escape == ESC_Q )		1466025	0					
ANR	1476561	Condition	escape == ESC_Q	7775:10:255963:255977	1466025	0	True				
ANR	1476562	EqualityExpression	escape == ESC_Q		1466025	0		==			
ANR	1476563	Identifier	escape		1466025	0					
ANR	1476564	Identifier	ESC_Q		1466025	1					
ANR	1476565	CompoundStatement		3337:8:116790:116790	1466025	1					
ANR	1476566	IfStatement	if ( ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E )		1466025	0					
ANR	1476567	Condition	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E	7777:12:256049:256092	1466025	0	True				
ANR	1476568	AndExpression	ptr [ 1 ] == CHAR_BACKSLASH && ptr [ 2 ] == CHAR_E		1466025	0		&&			
ANR	1476569	EqualityExpression	ptr [ 1 ] == CHAR_BACKSLASH		1466025	0		==			
ANR	1476570	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1476571	Identifier	ptr		1466025	0					
ANR	1476572	PrimaryExpression	1		1466025	1					
ANR	1476573	Identifier	CHAR_BACKSLASH		1466025	1					
ANR	1476574	EqualityExpression	ptr [ 2 ] == CHAR_E		1466025	1		==			
ANR	1476575	ArrayIndexing	ptr [ 2 ]		1466025	0					
ANR	1476576	Identifier	ptr		1466025	0					
ANR	1476577	PrimaryExpression	2		1466025	1					
ANR	1476578	Identifier	CHAR_E		1466025	1					
ANR	1476579	ExpressionStatement	ptr += 2	7778:10:256105:256113	1466025	1	True				
ANR	1476580	AssignmentExpression	ptr += 2		1466025	0		+=			
ANR	1476581	Identifier	ptr		1466025	0					
ANR	1476582	PrimaryExpression	2		1466025	1					
ANR	1476583	ElseStatement	else		1466025	0					
ANR	1476584	ExpressionStatement	inescq = TRUE	7779:17:256171:256184	1466025	0	True				
ANR	1476585	AssignmentExpression	inescq = TRUE		1466025	0		=			
ANR	1476586	Identifier	inescq		1466025	0					
ANR	1476587	Identifier	TRUE		1466025	1					
ANR	1476588	ContinueStatement	continue ;	7780:8:256194:256202	1466025	1	True				
ANR	1476589	IfStatement	if ( escape == ESC_E )		1466025	1					
ANR	1476590	Condition	escape == ESC_E	7783:10:256225:256239	1466025	0	True				
ANR	1476591	EqualityExpression	escape == ESC_E		1466025	0		==			
ANR	1476592	Identifier	escape		1466025	0					
ANR	1476593	Identifier	ESC_E		1466025	1					
ANR	1476594	ContinueStatement	continue ;	7783:27:256242:256250	1466025	1	True				
ANR	1476595	IfStatement	if ( firstcharflags == REQ_UNSET && escape > ESC_b && escape < ESC_Z )		1466025	2					
ANR	1476596	Condition	firstcharflags == REQ_UNSET && escape > ESC_b && escape < ESC_Z	7788:10:256441:256503	1466025	0	True				
ANR	1476597	AndExpression	firstcharflags == REQ_UNSET && escape > ESC_b && escape < ESC_Z		1466025	0		&&			
ANR	1476598	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1476599	Identifier	firstcharflags		1466025	0					
ANR	1476600	Identifier	REQ_UNSET		1466025	1					
ANR	1476601	AndExpression	escape > ESC_b && escape < ESC_Z		1466025	1		&&			
ANR	1476602	RelationalExpression	escape > ESC_b		1466025	0		>			
ANR	1476603	Identifier	escape		1466025	0					
ANR	1476604	Identifier	ESC_b		1466025	1					
ANR	1476605	RelationalExpression	escape < ESC_Z		1466025	1		<			
ANR	1476606	Identifier	escape		1466025	0					
ANR	1476607	Identifier	ESC_Z		1466025	1					
ANR	1476608	ExpressionStatement	firstcharflags = REQ_NONE	7789:8:256514:256539	1466025	1	True				
ANR	1476609	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1476610	Identifier	firstcharflags		1466025	0					
ANR	1476611	Identifier	REQ_NONE		1466025	1					
ANR	1476612	ExpressionStatement	zerofirstchar = firstchar	7793:6:256622:256647	1466025	3	True				
ANR	1476613	AssignmentExpression	zerofirstchar = firstchar		1466025	0		=			
ANR	1476614	Identifier	zerofirstchar		1466025	0					
ANR	1476615	Identifier	firstchar		1466025	1					
ANR	1476616	ExpressionStatement	zerofirstcharflags = firstcharflags	7794:6:256655:256690	1466025	4	True				
ANR	1476617	AssignmentExpression	zerofirstcharflags = firstcharflags		1466025	0		=			
ANR	1476618	Identifier	zerofirstcharflags		1466025	0					
ANR	1476619	Identifier	firstcharflags		1466025	1					
ANR	1476620	ExpressionStatement	zeroreqchar = reqchar	7795:6:256698:256719	1466025	5	True				
ANR	1476621	AssignmentExpression	zeroreqchar = reqchar		1466025	0		=			
ANR	1476622	Identifier	zeroreqchar		1466025	0					
ANR	1476623	Identifier	reqchar		1466025	1					
ANR	1476624	ExpressionStatement	zeroreqcharflags = reqcharflags	7796:6:256727:256758	1466025	6	True				
ANR	1476625	AssignmentExpression	zeroreqcharflags = reqcharflags		1466025	0		=			
ANR	1476626	Identifier	zeroreqcharflags		1466025	0					
ANR	1476627	Identifier	reqcharflags		1466025	1					
ANR	1476628	IfStatement	if ( escape == ESC_g )		1466025	7					
ANR	1476629	Condition	escape == ESC_g	7805:10:257200:257214	1466025	0	True				
ANR	1476630	EqualityExpression	escape == ESC_g		1466025	0		==			
ANR	1476631	Identifier	escape		1466025	0					
ANR	1476632	Identifier	ESC_g		1466025	1					
ANR	1476633	CompoundStatement		3369:8:118019:118033	1466025	1					
ANR	1476634	IdentifierDeclStatement	const pcre_uchar * p ;	7807:8:257235:257254	1466025	0	True				
ANR	1476635	IdentifierDecl	* p		1466025	0					
ANR	1476636	IdentifierDeclType	const pcre_uchar *		1466025	0					
ANR	1476637	Identifier	p		1466025	1					
ANR	1476638	IdentifierDeclStatement	pcre_uint32 cf ;	7808:8:257264:257278	1466025	1	True				
ANR	1476639	IdentifierDecl	cf		1466025	0					
ANR	1476640	IdentifierDeclType	pcre_uint32		1466025	0					
ANR	1476641	Identifier	cf		1466025	1					
ANR	1476642	ExpressionStatement	save_hwm_offset = cd -> hwm - cd -> start_workspace	7810:8:257289:257336	1466025	2	True				
ANR	1476643	AssignmentExpression	save_hwm_offset = cd -> hwm - cd -> start_workspace		1466025	0		=			
ANR	1476644	Identifier	save_hwm_offset		1466025	0					
ANR	1476645	AdditiveExpression	cd -> hwm - cd -> start_workspace		1466025	1		-			
ANR	1476646	PtrMemberAccess	cd -> hwm		1466025	0					
ANR	1476647	Identifier	cd		1466025	0					
ANR	1476648	Identifier	hwm		1466025	1					
ANR	1476649	PtrMemberAccess	cd -> start_workspace		1466025	1					
ANR	1476650	Identifier	cd		1466025	0					
ANR	1476651	Identifier	start_workspace		1466025	1					
ANR	1476652	ExpressionStatement	terminator = ( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE	7811:8:257392:257490	1466025	3	True				
ANR	1476653	AssignmentExpression	terminator = ( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE		1466025	0		=			
ANR	1476654	Identifier	terminator		1466025	0					
ANR	1476655	ConditionalExpression	( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : CHAR_APOSTROPHE		1466025	1					
ANR	1476656	Condition	* ( ++ ptr ) == CHAR_LESS_THAN_SIGN		1466025	0					
ANR	1476657	EqualityExpression	* ( ++ ptr ) == CHAR_LESS_THAN_SIGN		1466025	0		==			
ANR	1476658	UnaryOperationExpression	* ( ++ ptr )		1466025	0					
ANR	1476659	UnaryOperator	*		1466025	0					
ANR	1476660	UnaryExpression	++ ptr		1466025	1					
ANR	1476661	IncDec	++		1466025	0					
ANR	1476662	Identifier	ptr		1466025	1					
ANR	1476663	Identifier	CHAR_LESS_THAN_SIGN		1466025	1					
ANR	1476664	Identifier	CHAR_GREATER_THAN_SIGN		1466025	1					
ANR	1476665	Identifier	CHAR_APOSTROPHE		1466025	2					
ANR	1476666	ExpressionStatement	skipbytes = 0	7819:8:257784:257797	1466025	4	True				
ANR	1476667	AssignmentExpression	skipbytes = 0		1466025	0		=			
ANR	1476668	Identifier	skipbytes		1466025	0					
ANR	1476669	PrimaryExpression	0		1466025	1					
ANR	1476670	ExpressionStatement	reset_bracount = FALSE	7820:8:257807:257829	1466025	5	True				
ANR	1476671	AssignmentExpression	reset_bracount = FALSE		1466025	0		=			
ANR	1476672	Identifier	reset_bracount		1466025	0					
ANR	1476673	Identifier	FALSE		1466025	1					
ANR	1476674	ExpressionStatement	cf = ptr [ 1 ]	7824:8:257916:257927	1466025	6	True				
ANR	1476675	AssignmentExpression	cf = ptr [ 1 ]		1466025	0		=			
ANR	1476676	Identifier	cf		1466025	0					
ANR	1476677	ArrayIndexing	ptr [ 1 ]		1466025	1					
ANR	1476678	Identifier	ptr		1466025	0					
ANR	1476679	PrimaryExpression	1		1466025	1					
ANR	1476680	IfStatement	if ( cf != CHAR_PLUS && cf != CHAR_MINUS && ! IS_DIGIT ( cf ) )		1466025	7					
ANR	1476681	Condition	cf != CHAR_PLUS && cf != CHAR_MINUS && ! IS_DIGIT ( cf )	7825:12:257941:257992	1466025	0	True				
ANR	1476682	AndExpression	cf != CHAR_PLUS && cf != CHAR_MINUS && ! IS_DIGIT ( cf )		1466025	0		&&			
ANR	1476683	EqualityExpression	cf != CHAR_PLUS		1466025	0		!=			
ANR	1476684	Identifier	cf		1466025	0					
ANR	1476685	Identifier	CHAR_PLUS		1466025	1					
ANR	1476686	AndExpression	cf != CHAR_MINUS && ! IS_DIGIT ( cf )		1466025	1		&&			
ANR	1476687	EqualityExpression	cf != CHAR_MINUS		1466025	0		!=			
ANR	1476688	Identifier	cf		1466025	0					
ANR	1476689	Identifier	CHAR_MINUS		1466025	1					
ANR	1476690	UnaryOperationExpression	! IS_DIGIT ( cf )		1466025	1					
ANR	1476691	UnaryOperator	!		1466025	0					
ANR	1476692	CallExpression	IS_DIGIT ( cf )		1466025	1					
ANR	1476693	Callee	IS_DIGIT		1466025	0					
ANR	1476694	Identifier	IS_DIGIT		1466025	0					
ANR	1476695	ArgumentList	cf		1466025	1					
ANR	1476696	Argument	cf		1466025	0					
ANR	1476697	Identifier	cf		1466025	0					
ANR	1476698	CompoundStatement		3387:10:118760:118760	1466025	1					
ANR	1476699	ExpressionStatement	is_recurse = TRUE	7827:10:258017:258034	1466025	0	True				
ANR	1476700	AssignmentExpression	is_recurse = TRUE		1466025	0		=			
ANR	1476701	Identifier	is_recurse		1466025	0					
ANR	1476702	Identifier	TRUE		1466025	1					
ANR	1476703	GotoStatement	goto NAMED_REF_OR_RECURSE ;	7828:10:258046:258071	1466025	1	True				
ANR	1476704	Identifier	NAMED_REF_OR_RECURSE		1466025	0					
ANR	1476705	ExpressionStatement	p = ptr + 2	7834:8:258198:258209	1466025	8	True				
ANR	1476706	AssignmentExpression	p = ptr + 2		1466025	0		=			
ANR	1476707	Identifier	p		1466025	0					
ANR	1476708	AdditiveExpression	ptr + 2		1466025	1		+			
ANR	1476709	Identifier	ptr		1466025	0					
ANR	1476710	PrimaryExpression	2		1466025	1					
ANR	1476711	WhileStatement	while ( IS_DIGIT ( * p ) )		1466025	9					
ANR	1476712	Condition	IS_DIGIT ( * p )	7835:15:258226:258237	1466025	0	True				
ANR	1476713	CallExpression	IS_DIGIT ( * p )		1466025	0					
ANR	1476714	Callee	IS_DIGIT		1466025	0					
ANR	1476715	Identifier	IS_DIGIT		1466025	0					
ANR	1476716	ArgumentList	* p		1466025	1					
ANR	1476717	Argument	* p		1466025	0					
ANR	1476718	UnaryOperationExpression	* p		1466025	0					
ANR	1476719	UnaryOperator	*		1466025	0					
ANR	1476720	Identifier	p		1466025	1					
ANR	1476721	ExpressionStatement	p ++	7835:29:258240:258243	1466025	1	True				
ANR	1476722	PostIncDecOperationExpression	p ++		1466025	0					
ANR	1476723	Identifier	p		1466025	0					
ANR	1476724	IncDec	++		1466025	1					
ANR	1476725	IfStatement	if ( * p != ( pcre_uchar ) terminator )		1466025	10					
ANR	1476726	Condition	* p != ( pcre_uchar ) terminator	7836:12:258257:258284	1466025	0	True				
ANR	1476727	EqualityExpression	* p != ( pcre_uchar ) terminator		1466025	0		!=			
ANR	1476728	UnaryOperationExpression	* p		1466025	0					
ANR	1476729	UnaryOperator	*		1466025	0					
ANR	1476730	Identifier	p		1466025	1					
ANR	1476731	CastExpression	( pcre_uchar ) terminator		1466025	1					
ANR	1476732	CastTarget	pcre_uchar		1466025	0					
ANR	1476733	Identifier	terminator		1466025	1					
ANR	1476734	CompoundStatement		3398:10:119052:119052	1466025	1					
ANR	1476735	ExpressionStatement	* errorcodeptr = ERR57	7838:10:258309:258330	1466025	0	True				
ANR	1476736	AssignmentExpression	* errorcodeptr = ERR57		1466025	0		=			
ANR	1476737	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1476738	UnaryOperator	*		1466025	0					
ANR	1476739	Identifier	errorcodeptr		1466025	1					
ANR	1476740	Identifier	ERR57		1466025	1					
ANR	1476741	BreakStatement	break ;	7839:10:258342:258347	1466025	1	True				
ANR	1476742	ExpressionStatement	ptr ++	7841:8:258369:258374	1466025	11	True				
ANR	1476743	PostIncDecOperationExpression	ptr ++		1466025	0					
ANR	1476744	Identifier	ptr		1466025	0					
ANR	1476745	IncDec	++		1466025	1					
ANR	1476746	GotoStatement	goto HANDLE_NUMERICAL_RECURSION ;	7842:8:258384:258415	1466025	12	True				
ANR	1476747	Identifier	HANDLE_NUMERICAL_RECURSION		1466025	0					
ANR	1476748	IfStatement	if ( escape == ESC_k )		1466025	8					
ANR	1476749	Condition	escape == ESC_k	7848:10:258562:258576	1466025	0	True				
ANR	1476750	EqualityExpression	escape == ESC_k		1466025	0		==			
ANR	1476751	Identifier	escape		1466025	0					
ANR	1476752	Identifier	ESC_k		1466025	1					
ANR	1476753	CompoundStatement		3410:8:119342:119342	1466025	1					
ANR	1476754	IfStatement	if ( ( ptr [ 1 ] != CHAR_LESS_THAN_SIGN && ptr [ 1 ] != CHAR_APOSTROPHE && ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET ) )		1466025	0					
ANR	1476755	Condition	ptr [ 1 ] != CHAR_LESS_THAN_SIGN && ptr [ 1 ] != CHAR_APOSTROPHE && ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET	7850:12:258601:258707	1466025	0	True				
ANR	1476756	AndExpression	ptr [ 1 ] != CHAR_LESS_THAN_SIGN && ptr [ 1 ] != CHAR_APOSTROPHE && ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		1466025	0		&&			
ANR	1476757	EqualityExpression	ptr [ 1 ] != CHAR_LESS_THAN_SIGN		1466025	0		!=			
ANR	1476758	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1476759	Identifier	ptr		1466025	0					
ANR	1476760	PrimaryExpression	1		1466025	1					
ANR	1476761	Identifier	CHAR_LESS_THAN_SIGN		1466025	1					
ANR	1476762	AndExpression	ptr [ 1 ] != CHAR_APOSTROPHE && ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		1466025	1		&&			
ANR	1476763	EqualityExpression	ptr [ 1 ] != CHAR_APOSTROPHE		1466025	0		!=			
ANR	1476764	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1476765	Identifier	ptr		1466025	0					
ANR	1476766	PrimaryExpression	1		1466025	1					
ANR	1476767	Identifier	CHAR_APOSTROPHE		1466025	1					
ANR	1476768	EqualityExpression	ptr [ 1 ] != CHAR_LEFT_CURLY_BRACKET		1466025	1		!=			
ANR	1476769	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1476770	Identifier	ptr		1466025	0					
ANR	1476771	PrimaryExpression	1		1466025	1					
ANR	1476772	Identifier	CHAR_LEFT_CURLY_BRACKET		1466025	1					
ANR	1476773	CompoundStatement		3413:10:119475:119475	1466025	1					
ANR	1476774	ExpressionStatement	* errorcodeptr = ERR69	7853:10:258732:258753	1466025	0	True				
ANR	1476775	AssignmentExpression	* errorcodeptr = ERR69		1466025	0		=			
ANR	1476776	UnaryOperationExpression	* errorcodeptr		1466025	0					
ANR	1476777	UnaryOperator	*		1466025	0					
ANR	1476778	Identifier	errorcodeptr		1466025	1					
ANR	1476779	Identifier	ERR69		1466025	1					
ANR	1476780	BreakStatement	break ;	7854:10:258765:258770	1466025	1	True				
ANR	1476781	ExpressionStatement	is_recurse = FALSE	7856:8:258792:258810	1466025	1	True				
ANR	1476782	AssignmentExpression	is_recurse = FALSE		1466025	0		=			
ANR	1476783	Identifier	is_recurse		1466025	0					
ANR	1476784	Identifier	FALSE		1466025	1					
ANR	1476785	ExpressionStatement	terminator = ( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : ( * ptr == CHAR_APOSTROPHE ) ? CHAR_APOSTROPHE : CHAR_RIGHT_CURLY_BRACKET	7857:8:258820:258982	1466025	2	True				
ANR	1476786	AssignmentExpression	terminator = ( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : ( * ptr == CHAR_APOSTROPHE ) ? CHAR_APOSTROPHE : CHAR_RIGHT_CURLY_BRACKET		1466025	0		=			
ANR	1476787	Identifier	terminator		1466025	0					
ANR	1476788	ConditionalExpression	( * ( ++ ptr ) == CHAR_LESS_THAN_SIGN ) ? CHAR_GREATER_THAN_SIGN : ( * ptr == CHAR_APOSTROPHE ) ? CHAR_APOSTROPHE : CHAR_RIGHT_CURLY_BRACKET		1466025	1					
ANR	1476789	Condition	* ( ++ ptr ) == CHAR_LESS_THAN_SIGN		1466025	0					
ANR	1476790	EqualityExpression	* ( ++ ptr ) == CHAR_LESS_THAN_SIGN		1466025	0		==			
ANR	1476791	UnaryOperationExpression	* ( ++ ptr )		1466025	0					
ANR	1476792	UnaryOperator	*		1466025	0					
ANR	1476793	UnaryExpression	++ ptr		1466025	1					
ANR	1476794	IncDec	++		1466025	0					
ANR	1476795	Identifier	ptr		1466025	1					
ANR	1476796	Identifier	CHAR_LESS_THAN_SIGN		1466025	1					
ANR	1476797	Identifier	CHAR_GREATER_THAN_SIGN		1466025	1					
ANR	1476798	ConditionalExpression	( * ptr == CHAR_APOSTROPHE ) ? CHAR_APOSTROPHE : CHAR_RIGHT_CURLY_BRACKET		1466025	2					
ANR	1476799	Condition	* ptr == CHAR_APOSTROPHE		1466025	0					
ANR	1476800	EqualityExpression	* ptr == CHAR_APOSTROPHE		1466025	0		==			
ANR	1476801	UnaryOperationExpression	* ptr		1466025	0					
ANR	1476802	UnaryOperator	*		1466025	0					
ANR	1476803	Identifier	ptr		1466025	1					
ANR	1476804	Identifier	CHAR_APOSTROPHE		1466025	1					
ANR	1476805	Identifier	CHAR_APOSTROPHE		1466025	1					
ANR	1476806	Identifier	CHAR_RIGHT_CURLY_BRACKET		1466025	2					
ANR	1476807	GotoStatement	goto NAMED_REF_OR_RECURSE ;	7860:8:258992:259017	1466025	3	True				
ANR	1476808	Identifier	NAMED_REF_OR_RECURSE		1466025	0					
ANR	1476809	IfStatement	if ( escape < 0 )		1466025	9					
ANR	1476810	Condition	escape < 0	7867:10:259212:259221	1466025	0	True				
ANR	1476811	RelationalExpression	escape < 0		1466025	0		<			
ANR	1476812	Identifier	escape		1466025	0					
ANR	1476813	PrimaryExpression	0		1466025	1					
ANR	1476814	CompoundStatement		3430:8:119997:120013	1466025	1					
ANR	1476815	IdentifierDeclStatement	open_capitem * oc ;	7869:8:259242:259258	1466025	0	True				
ANR	1476816	IdentifierDecl	* oc		1466025	0					
ANR	1476817	IdentifierDeclType	open_capitem *		1466025	0					
ANR	1476818	Identifier	oc		1466025	1					
ANR	1476819	ExpressionStatement	recno = - escape	7870:8:259268:259283	1466025	1	True				
ANR	1476820	AssignmentExpression	recno = - escape		1466025	0		=			
ANR	1476821	Identifier	recno		1466025	0					
ANR	1476822	UnaryOperationExpression	- escape		1466025	1					
ANR	1476823	UnaryOperator	-		1466025	0					
ANR	1476824	Identifier	escape		1466025	1					
ANR	1476825	Label	HANDLE_REFERENCE :	7875:8:259427:259443	1466025	2	True				
ANR	1476826	Identifier	HANDLE_REFERENCE		1466025	0					
ANR	1476827	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	3					
ANR	1476828	Condition	firstcharflags == REQ_UNSET	7876:12:259457:259483	1466025	0	True				
ANR	1476829	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1476830	Identifier	firstcharflags		1466025	0					
ANR	1476831	Identifier	REQ_UNSET		1466025	1					
ANR	1476832	ExpressionStatement	firstcharflags = REQ_NONE	7876:41:259486:259511	1466025	1	True				
ANR	1476833	AssignmentExpression	firstcharflags = REQ_NONE		1466025	0		=			
ANR	1476834	Identifier	firstcharflags		1466025	0					
ANR	1476835	Identifier	REQ_NONE		1466025	1					
ANR	1476836	ExpressionStatement	previous = code	7877:8:259521:259536	1466025	4	True				
ANR	1476837	AssignmentExpression	previous = code		1466025	0		=			
ANR	1476838	Identifier	previous		1466025	0					
ANR	1476839	Identifier	code		1466025	1					
ANR	1476840	ExpressionStatement	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_REFI : OP_REF	7878:8:259546:259606	1466025	5	True				
ANR	1476841	AssignmentExpression	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_REFI : OP_REF		1466025	0		=			
ANR	1476842	UnaryOperationExpression	* code ++		1466025	0					
ANR	1476843	UnaryOperator	*		1466025	0					
ANR	1476844	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1476845	Identifier	code		1466025	0					
ANR	1476846	IncDec	++		1466025	1					
ANR	1476847	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? OP_REFI : OP_REF		1466025	1					
ANR	1476848	Condition	( options & PCRE_CASELESS ) != 0		1466025	0					
ANR	1476849	EqualityExpression	( options & PCRE_CASELESS ) != 0		1466025	0		!=			
ANR	1476850	BitAndExpression	options & PCRE_CASELESS		1466025	0		&			
ANR	1476851	Identifier	options		1466025	0					
ANR	1476852	Identifier	PCRE_CASELESS		1466025	1					
ANR	1476853	PrimaryExpression	0		1466025	1					
ANR	1476854	Identifier	OP_REFI		1466025	1					
ANR	1476855	Identifier	OP_REF		1466025	2					
ANR	1476856	ExpressionStatement	"PUT2INC ( code , 0 , recno )"	7879:8:259616:259639	1466025	6	True				
ANR	1476857	CallExpression	"PUT2INC ( code , 0 , recno )"		1466025	0					
ANR	1476858	Callee	PUT2INC		1466025	0					
ANR	1476859	Identifier	PUT2INC		1466025	0					
ANR	1476860	ArgumentList	code		1466025	1					
ANR	1476861	Argument	code		1466025	0					
ANR	1476862	Identifier	code		1466025	0					
ANR	1476863	Argument	0		1466025	1					
ANR	1476864	PrimaryExpression	0		1466025	0					
ANR	1476865	Argument	recno		1466025	2					
ANR	1476866	Identifier	recno		1466025	0					
ANR	1476867	ExpressionStatement	cd -> backref_map |= ( recno < 32 ) ? ( 1 << recno ) : 1	7880:8:259649:259698	1466025	7	True				
ANR	1476868	AssignmentExpression	cd -> backref_map |= ( recno < 32 ) ? ( 1 << recno ) : 1		1466025	0		|=			
ANR	1476869	PtrMemberAccess	cd -> backref_map		1466025	0					
ANR	1476870	Identifier	cd		1466025	0					
ANR	1476871	Identifier	backref_map		1466025	1					
ANR	1476872	ConditionalExpression	( recno < 32 ) ? ( 1 << recno ) : 1		1466025	1					
ANR	1476873	Condition	recno < 32		1466025	0					
ANR	1476874	RelationalExpression	recno < 32		1466025	0		<			
ANR	1476875	Identifier	recno		1466025	0					
ANR	1476876	PrimaryExpression	32		1466025	1					
ANR	1476877	ShiftExpression	1 << recno		1466025	1		<<			
ANR	1476878	PrimaryExpression	1		1466025	0					
ANR	1476879	Identifier	recno		1466025	1					
ANR	1476880	PrimaryExpression	1		1466025	2					
ANR	1476881	IfStatement	if ( recno > cd -> top_backref )		1466025	8					
ANR	1476882	Condition	recno > cd -> top_backref	7881:12:259712:259734	1466025	0	True				
ANR	1476883	RelationalExpression	recno > cd -> top_backref		1466025	0		>			
ANR	1476884	Identifier	recno		1466025	0					
ANR	1476885	PtrMemberAccess	cd -> top_backref		1466025	1					
ANR	1476886	Identifier	cd		1466025	0					
ANR	1476887	Identifier	top_backref		1466025	1					
ANR	1476888	ExpressionStatement	cd -> top_backref = recno	7881:37:259737:259760	1466025	1	True				
ANR	1476889	AssignmentExpression	cd -> top_backref = recno		1466025	0		=			
ANR	1476890	PtrMemberAccess	cd -> top_backref		1466025	0					
ANR	1476891	Identifier	cd		1466025	0					
ANR	1476892	Identifier	top_backref		1466025	1					
ANR	1476893	Identifier	recno		1466025	1					
ANR	1476894	ForStatement	for ( oc = cd -> open_caps ; oc != NULL ; oc = oc -> next )		1466025	9					
ANR	1476895	ForInit	oc = cd -> open_caps ;	7887:13:259961:259979	1466025	0	True				
ANR	1476896	AssignmentExpression	oc = cd -> open_caps		1466025	0		=			
ANR	1476897	Identifier	oc		1466025	0					
ANR	1476898	PtrMemberAccess	cd -> open_caps		1466025	1					
ANR	1476899	Identifier	cd		1466025	0					
ANR	1476900	Identifier	open_caps		1466025	1					
ANR	1476901	Condition	oc != NULL	7887:33:259981:259990	1466025	1	True				
ANR	1476902	EqualityExpression	oc != NULL		1466025	0		!=			
ANR	1476903	Identifier	oc		1466025	0					
ANR	1476904	Identifier	NULL		1466025	1					
ANR	1476905	AssignmentExpression	oc = oc -> next	7887:45:259993:260005	1466025	2	True	=			
ANR	1476906	Identifier	oc		1466025	0					
ANR	1476907	PtrMemberAccess	oc -> next		1466025	1					
ANR	1476908	Identifier	oc		1466025	0					
ANR	1476909	Identifier	next		1466025	1					
ANR	1476910	CompoundStatement		3449:10:120773:120773	1466025	3					
ANR	1476911	IfStatement	if ( oc -> number == recno )		1466025	0					
ANR	1476912	Condition	oc -> number == recno	7889:14:260034:260052	1466025	0	True				
ANR	1476913	EqualityExpression	oc -> number == recno		1466025	0		==			
ANR	1476914	PtrMemberAccess	oc -> number		1466025	0					
ANR	1476915	Identifier	oc		1466025	0					
ANR	1476916	Identifier	number		1466025	1					
ANR	1476917	Identifier	recno		1466025	1					
ANR	1476918	CompoundStatement		3451:12:120822:120822	1466025	1					
ANR	1476919	ExpressionStatement	oc -> flag = TRUE	7891:12:260081:260096	1466025	0	True				
ANR	1476920	AssignmentExpression	oc -> flag = TRUE		1466025	0		=			
ANR	1476921	PtrMemberAccess	oc -> flag		1466025	0					
ANR	1476922	Identifier	oc		1466025	0					
ANR	1476923	Identifier	flag		1466025	1					
ANR	1476924	Identifier	TRUE		1466025	1					
ANR	1476925	BreakStatement	break ;	7892:12:260110:260115	1466025	1	True				
ANR	1476926	ElseStatement	else		1466025	0					
ANR	1476927	IfStatement	if ( escape == ESC_P || escape == ESC_p )		1466025	0					
ANR	1476928	Condition	escape == ESC_P || escape == ESC_p	7900:15:260248:260281	1466025	0	True				
ANR	1476929	OrExpression	escape == ESC_P || escape == ESC_p		1466025	0		||			
ANR	1476930	EqualityExpression	escape == ESC_P		1466025	0		==			
ANR	1476931	Identifier	escape		1466025	0					
ANR	1476932	Identifier	ESC_P		1466025	1					
ANR	1476933	EqualityExpression	escape == ESC_p		1466025	1		==			
ANR	1476934	Identifier	escape		1466025	0					
ANR	1476935	Identifier	ESC_p		1466025	1					
ANR	1476936	CompoundStatement		3464:8:121079:121112	1466025	1					
ANR	1476937	IdentifierDeclStatement	BOOL negated ;	7902:8:260302:260314	1466025	0	True				
ANR	1476938	IdentifierDecl	negated		1466025	0					
ANR	1476939	IdentifierDeclType	BOOL		1466025	0					
ANR	1476940	Identifier	negated		1466025	1					
ANR	1476941	IdentifierDeclStatement	"unsigned int ptype = 0 , pdata = 0 ;"	7903:8:260324:260357	1466025	1	True				
ANR	1476942	IdentifierDecl	ptype = 0		1466025	0					
ANR	1476943	IdentifierDeclType	unsigned int		1466025	0					
ANR	1476944	Identifier	ptype		1466025	1					
ANR	1476945	AssignmentExpression	ptype = 0		1466025	2		=			
ANR	1476946	Identifier	ptype		1466025	0					
ANR	1476947	PrimaryExpression	0		1466025	1					
ANR	1476948	IdentifierDecl	pdata = 0		1466025	1					
ANR	1476949	IdentifierDeclType	unsigned int		1466025	0					
ANR	1476950	Identifier	pdata		1466025	1					
ANR	1476951	AssignmentExpression	pdata = 0		1466025	2		=			
ANR	1476952	Identifier	pdata		1466025	0					
ANR	1476953	PrimaryExpression	0		1466025	1					
ANR	1476954	IfStatement	"if ( ! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr ) )"		1466025	2					
ANR	1476955	Condition	"! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"	7904:12:260371:260424	1466025	0	True				
ANR	1476956	UnaryOperationExpression	"! get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"		1466025	0					
ANR	1476957	UnaryOperator	!		1466025	0					
ANR	1476958	CallExpression	"get_ucp ( & ptr , & negated , & ptype , & pdata , errorcodeptr )"		1466025	1					
ANR	1476959	Callee	get_ucp		1466025	0					
ANR	1476960	Identifier	get_ucp		1466025	0					
ANR	1476961	ArgumentList	& ptr		1466025	1					
ANR	1476962	Argument	& ptr		1466025	0					
ANR	1476963	UnaryOperationExpression	& ptr		1466025	0					
ANR	1476964	UnaryOperator	&		1466025	0					
ANR	1476965	Identifier	ptr		1466025	1					
ANR	1476966	Argument	& negated		1466025	1					
ANR	1476967	UnaryOperationExpression	& negated		1466025	0					
ANR	1476968	UnaryOperator	&		1466025	0					
ANR	1476969	Identifier	negated		1466025	1					
ANR	1476970	Argument	& ptype		1466025	2					
ANR	1476971	UnaryOperationExpression	& ptype		1466025	0					
ANR	1476972	UnaryOperator	&		1466025	0					
ANR	1476973	Identifier	ptype		1466025	1					
ANR	1476974	Argument	& pdata		1466025	3					
ANR	1476975	UnaryOperationExpression	& pdata		1466025	0					
ANR	1476976	UnaryOperator	&		1466025	0					
ANR	1476977	Identifier	pdata		1466025	1					
ANR	1476978	Argument	errorcodeptr		1466025	4					
ANR	1476979	Identifier	errorcodeptr		1466025	0					
ANR	1476980	GotoStatement	goto FAILED ;	7905:10:260437:260448	1466025	1	True				
ANR	1476981	Identifier	FAILED		1466025	0					
ANR	1476982	ExpressionStatement	previous = code	7906:8:260458:260473	1466025	3	True				
ANR	1476983	AssignmentExpression	previous = code		1466025	0		=			
ANR	1476984	Identifier	previous		1466025	0					
ANR	1476985	Identifier	code		1466025	1					
ANR	1476986	ExpressionStatement	* code ++ = ( ( escape == ESC_p ) != negated ) ? OP_PROP : OP_NOTPROP	7907:8:260483:260545	1466025	4	True				
ANR	1476987	AssignmentExpression	* code ++ = ( ( escape == ESC_p ) != negated ) ? OP_PROP : OP_NOTPROP		1466025	0		=			
ANR	1476988	UnaryOperationExpression	* code ++		1466025	0					
ANR	1476989	UnaryOperator	*		1466025	0					
ANR	1476990	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1476991	Identifier	code		1466025	0					
ANR	1476992	IncDec	++		1466025	1					
ANR	1476993	ConditionalExpression	( ( escape == ESC_p ) != negated ) ? OP_PROP : OP_NOTPROP		1466025	1					
ANR	1476994	Condition	( escape == ESC_p ) != negated		1466025	0					
ANR	1476995	EqualityExpression	( escape == ESC_p ) != negated		1466025	0		!=			
ANR	1476996	EqualityExpression	escape == ESC_p		1466025	0		==			
ANR	1476997	Identifier	escape		1466025	0					
ANR	1476998	Identifier	ESC_p		1466025	1					
ANR	1476999	Identifier	negated		1466025	1					
ANR	1477000	Identifier	OP_PROP		1466025	1					
ANR	1477001	Identifier	OP_NOTPROP		1466025	2					
ANR	1477002	ExpressionStatement	* code ++ = ptype	7908:8:260555:260570	1466025	5	True				
ANR	1477003	AssignmentExpression	* code ++ = ptype		1466025	0		=			
ANR	1477004	UnaryOperationExpression	* code ++		1466025	0					
ANR	1477005	UnaryOperator	*		1466025	0					
ANR	1477006	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1477007	Identifier	code		1466025	0					
ANR	1477008	IncDec	++		1466025	1					
ANR	1477009	Identifier	ptype		1466025	1					
ANR	1477010	ExpressionStatement	* code ++ = pdata	7909:8:260580:260595	1466025	6	True				
ANR	1477011	AssignmentExpression	* code ++ = pdata		1466025	0		=			
ANR	1477012	UnaryOperationExpression	* code ++		1466025	0					
ANR	1477013	UnaryOperator	*		1466025	0					
ANR	1477014	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1477015	Identifier	code		1466025	0					
ANR	1477016	IncDec	++		1466025	1					
ANR	1477017	Identifier	pdata		1466025	1					
ANR	1477018	ElseStatement	else		1466025	0					
ANR	1477019	CompoundStatement		3491:8:121983:121983	1466025	0					
ANR	1477020	IfStatement	if ( ( escape == ESC_b || escape == ESC_B || escape == ESC_A ) && cd -> max_lookbehind == 0 )		1466025	0					
ANR	1477021	Condition	( escape == ESC_b || escape == ESC_B || escape == ESC_A ) && cd -> max_lookbehind == 0	7931:12:261242:261336	1466025	0	True				
ANR	1477022	AndExpression	( escape == ESC_b || escape == ESC_B || escape == ESC_A ) && cd -> max_lookbehind == 0		1466025	0		&&			
ANR	1477023	OrExpression	escape == ESC_b || escape == ESC_B || escape == ESC_A		1466025	0		||			
ANR	1477024	EqualityExpression	escape == ESC_b		1466025	0		==			
ANR	1477025	Identifier	escape		1466025	0					
ANR	1477026	Identifier	ESC_b		1466025	1					
ANR	1477027	OrExpression	escape == ESC_B || escape == ESC_A		1466025	1		||			
ANR	1477028	EqualityExpression	escape == ESC_B		1466025	0		==			
ANR	1477029	Identifier	escape		1466025	0					
ANR	1477030	Identifier	ESC_B		1466025	1					
ANR	1477031	EqualityExpression	escape == ESC_A		1466025	1		==			
ANR	1477032	Identifier	escape		1466025	0					
ANR	1477033	Identifier	ESC_A		1466025	1					
ANR	1477034	EqualityExpression	cd -> max_lookbehind == 0		1466025	1		==			
ANR	1477035	PtrMemberAccess	cd -> max_lookbehind		1466025	0					
ANR	1477036	Identifier	cd		1466025	0					
ANR	1477037	Identifier	max_lookbehind		1466025	1					
ANR	1477038	PrimaryExpression	0		1466025	1					
ANR	1477039	ExpressionStatement	cd -> max_lookbehind = 1	7933:10:261349:261371	1466025	1	True				
ANR	1477040	AssignmentExpression	cd -> max_lookbehind = 1		1466025	0		=			
ANR	1477041	PtrMemberAccess	cd -> max_lookbehind		1466025	0					
ANR	1477042	Identifier	cd		1466025	0					
ANR	1477043	Identifier	max_lookbehind		1466025	1					
ANR	1477044	PrimaryExpression	1		1466025	1					
ANR	1477045	IfStatement	if ( escape >= ESC_DU && escape <= ESC_wu )		1466025	1					
ANR	1477046	Condition	escape >= ESC_DU && escape <= ESC_wu	7935:12:261404:261439	1466025	0	True				
ANR	1477047	AndExpression	escape >= ESC_DU && escape <= ESC_wu		1466025	0		&&			
ANR	1477048	RelationalExpression	escape >= ESC_DU		1466025	0		>=			
ANR	1477049	Identifier	escape		1466025	0					
ANR	1477050	Identifier	ESC_DU		1466025	1					
ANR	1477051	RelationalExpression	escape <= ESC_wu		1466025	1		<=			
ANR	1477052	Identifier	escape		1466025	0					
ANR	1477053	Identifier	ESC_wu		1466025	1					
ANR	1477054	CompoundStatement		3497:10:122207:122207	1466025	1					
ANR	1477055	ExpressionStatement	nestptr = ptr + 1	7937:10:261464:261481	1466025	0	True				
ANR	1477056	AssignmentExpression	nestptr = ptr + 1		1466025	0		=			
ANR	1477057	Identifier	nestptr		1466025	0					
ANR	1477058	AdditiveExpression	ptr + 1		1466025	1		+			
ANR	1477059	Identifier	ptr		1466025	0					
ANR	1477060	PrimaryExpression	1		1466025	1					
ANR	1477061	ExpressionStatement	ptr = substitutes [ escape - ESC_DU ] - 1	7938:10:261533:261571	1466025	1	True				
ANR	1477062	AssignmentExpression	ptr = substitutes [ escape - ESC_DU ] - 1		1466025	0		=			
ANR	1477063	Identifier	ptr		1466025	0					
ANR	1477064	AdditiveExpression	substitutes [ escape - ESC_DU ] - 1		1466025	1		-			
ANR	1477065	ArrayIndexing	substitutes [ escape - ESC_DU ]		1466025	0					
ANR	1477066	Identifier	substitutes		1466025	0					
ANR	1477067	AdditiveExpression	escape - ESC_DU		1466025	1		-			
ANR	1477068	Identifier	escape		1466025	0					
ANR	1477069	Identifier	ESC_DU		1466025	1					
ANR	1477070	PrimaryExpression	1		1466025	1					
ANR	1477071	ElseStatement	else		1466025	0					
ANR	1477072	CompoundStatement		3506:10:122539:122539	1466025	0					
ANR	1477073	ExpressionStatement	previous = ( escape > ESC_b && escape < ESC_Z ) ? code : NULL	7946:10:261796:261854	1466025	0	True				
ANR	1477074	AssignmentExpression	previous = ( escape > ESC_b && escape < ESC_Z ) ? code : NULL		1466025	0		=			
ANR	1477075	Identifier	previous		1466025	0					
ANR	1477076	ConditionalExpression	( escape > ESC_b && escape < ESC_Z ) ? code : NULL		1466025	1					
ANR	1477077	Condition	escape > ESC_b && escape < ESC_Z		1466025	0					
ANR	1477078	AndExpression	escape > ESC_b && escape < ESC_Z		1466025	0		&&			
ANR	1477079	RelationalExpression	escape > ESC_b		1466025	0		>			
ANR	1477080	Identifier	escape		1466025	0					
ANR	1477081	Identifier	ESC_b		1466025	1					
ANR	1477082	RelationalExpression	escape < ESC_Z		1466025	1		<			
ANR	1477083	Identifier	escape		1466025	0					
ANR	1477084	Identifier	ESC_Z		1466025	1					
ANR	1477085	Identifier	code		1466025	1					
ANR	1477086	Identifier	NULL		1466025	2					
ANR	1477087	ExpressionStatement	* code ++ = ( ! utf && escape == ESC_C ) ? OP_ALLANY : escape	7947:10:261866:261921	1466025	1	True				
ANR	1477088	AssignmentExpression	* code ++ = ( ! utf && escape == ESC_C ) ? OP_ALLANY : escape		1466025	0		=			
ANR	1477089	UnaryOperationExpression	* code ++		1466025	0					
ANR	1477090	UnaryOperator	*		1466025	0					
ANR	1477091	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1477092	Identifier	code		1466025	0					
ANR	1477093	IncDec	++		1466025	1					
ANR	1477094	ConditionalExpression	( ! utf && escape == ESC_C ) ? OP_ALLANY : escape		1466025	1					
ANR	1477095	Condition	! utf && escape == ESC_C		1466025	0					
ANR	1477096	AndExpression	! utf && escape == ESC_C		1466025	0		&&			
ANR	1477097	UnaryOperationExpression	! utf		1466025	0					
ANR	1477098	UnaryOperator	!		1466025	0					
ANR	1477099	Identifier	utf		1466025	1					
ANR	1477100	EqualityExpression	escape == ESC_C		1466025	1		==			
ANR	1477101	Identifier	escape		1466025	0					
ANR	1477102	Identifier	ESC_C		1466025	1					
ANR	1477103	Identifier	OP_ALLANY		1466025	1					
ANR	1477104	Identifier	escape		1466025	2					
ANR	1477105	ContinueStatement	continue ;	7950:6:261951:261959	1466025	10	True				
ANR	1477106	IfStatement	if ( utf && c > MAX_VALUE_FOR_SINGLE_CHAR )		1466025	169					
ANR	1477107	Condition	utf && c > MAX_VALUE_FOR_SINGLE_CHAR	7958:8:262223:262258	1466025	0	True				
ANR	1477108	AndExpression	utf && c > MAX_VALUE_FOR_SINGLE_CHAR		1466025	0		&&			
ANR	1477109	Identifier	utf		1466025	0					
ANR	1477110	RelationalExpression	c > MAX_VALUE_FOR_SINGLE_CHAR		1466025	1		>			
ANR	1477111	Identifier	c		1466025	0					
ANR	1477112	Identifier	MAX_VALUE_FOR_SINGLE_CHAR		1466025	1					
ANR	1477113	ExpressionStatement	"mclength = PRIV ( ord2utf ) ( c , mcbuffer )"	7959:6:262267:262304	1466025	1	True				
ANR	1477114	AssignmentExpression	"mclength = PRIV ( ord2utf ) ( c , mcbuffer )"		1466025	0		=			
ANR	1477115	Identifier	mclength		1466025	0					
ANR	1477116	CallExpression	"PRIV ( ord2utf ) ( c , mcbuffer )"		1466025	1					
ANR	1477117	Callee	PRIV ( ord2utf )		1466025	0					
ANR	1477118	CallExpression	PRIV ( ord2utf )		1466025	0					
ANR	1477119	Callee	PRIV		1466025	0					
ANR	1477120	Identifier	PRIV		1466025	0					
ANR	1477121	ArgumentList	ord2utf		1466025	1					
ANR	1477122	Argument	ord2utf		1466025	0					
ANR	1477123	Identifier	ord2utf		1466025	0					
ANR	1477124	ArgumentList	c		1466025	1					
ANR	1477125	Argument	c		1466025	0					
ANR	1477126	Identifier	c		1466025	0					
ANR	1477127	Argument	mcbuffer		1466025	1					
ANR	1477128	Identifier	mcbuffer		1466025	0					
ANR	1477129	ElseStatement	else		1466025	0					
ANR	1477130	CompoundStatement		3524:5:123083:123083	1466025	0					
ANR	1477131	ExpressionStatement	mcbuffer [ 0 ] = c	7964:5:262335:262350	1466025	0	True				
ANR	1477132	AssignmentExpression	mcbuffer [ 0 ] = c		1466025	0		=			
ANR	1477133	ArrayIndexing	mcbuffer [ 0 ]		1466025	0					
ANR	1477134	Identifier	mcbuffer		1466025	0					
ANR	1477135	PrimaryExpression	0		1466025	1					
ANR	1477136	Identifier	c		1466025	1					
ANR	1477137	ExpressionStatement	mclength = 1	7965:5:262357:262369	1466025	1	True				
ANR	1477138	AssignmentExpression	mclength = 1		1466025	0		=			
ANR	1477139	Identifier	mclength		1466025	0					
ANR	1477140	PrimaryExpression	1		1466025	1					
ANR	1477141	GotoStatement	goto ONE_CHAR ;	7967:4:262382:262395	1466025	170	True				
ANR	1477142	Identifier	ONE_CHAR		1466025	0					
ANR	1477143	Label	default :	7975:4:262668:262675	1466025	171	True				
ANR	1477144	Identifier	default		1466025	0					
ANR	1477145	Label	NORMAL_CHAR :	7976:4:262681:262692	1466025	172	True				
ANR	1477146	Identifier	NORMAL_CHAR		1466025	0					
ANR	1477147	ExpressionStatement	mclength = 1	7977:4:262698:262710	1466025	173	True				
ANR	1477148	AssignmentExpression	mclength = 1		1466025	0		=			
ANR	1477149	Identifier	mclength		1466025	0					
ANR	1477150	PrimaryExpression	1		1466025	1					
ANR	1477151	ExpressionStatement	mcbuffer [ 0 ] = c	7978:4:262716:262731	1466025	174	True				
ANR	1477152	AssignmentExpression	mcbuffer [ 0 ] = c		1466025	0		=			
ANR	1477153	ArrayIndexing	mcbuffer [ 0 ]		1466025	0					
ANR	1477154	Identifier	mcbuffer		1466025	0					
ANR	1477155	PrimaryExpression	0		1466025	1					
ANR	1477156	Identifier	c		1466025	1					
ANR	1477157	IfStatement	if ( utf && HAS_EXTRALEN ( c ) )		1466025	175					
ANR	1477158	Condition	utf && HAS_EXTRALEN ( c )	7981:8:262761:262782	1466025	0	True				
ANR	1477159	AndExpression	utf && HAS_EXTRALEN ( c )		1466025	0		&&			
ANR	1477160	Identifier	utf		1466025	0					
ANR	1477161	CallExpression	HAS_EXTRALEN ( c )		1466025	1					
ANR	1477162	Callee	HAS_EXTRALEN		1466025	0					
ANR	1477163	Identifier	HAS_EXTRALEN		1466025	0					
ANR	1477164	ArgumentList	c		1466025	1					
ANR	1477165	Argument	c		1466025	0					
ANR	1477166	Identifier	c		1466025	0					
ANR	1477167	ExpressionStatement	"ACROSSCHAR ( TRUE , ptr [ 1 ] , mcbuffer [ mclength ++ ] = * ( ++ ptr ) )"	7982:6:262791:262848	1466025	1	True				
ANR	1477168	CallExpression	"ACROSSCHAR ( TRUE , ptr [ 1 ] , mcbuffer [ mclength ++ ] = * ( ++ ptr ) )"		1466025	0					
ANR	1477169	Callee	ACROSSCHAR		1466025	0					
ANR	1477170	Identifier	ACROSSCHAR		1466025	0					
ANR	1477171	ArgumentList	TRUE		1466025	1					
ANR	1477172	Argument	TRUE		1466025	0					
ANR	1477173	Identifier	TRUE		1466025	0					
ANR	1477174	Argument	ptr [ 1 ]		1466025	1					
ANR	1477175	ArrayIndexing	ptr [ 1 ]		1466025	0					
ANR	1477176	Identifier	ptr		1466025	0					
ANR	1477177	PrimaryExpression	1		1466025	1					
ANR	1477178	Argument	mcbuffer [ mclength ++ ] = * ( ++ ptr )		1466025	2					
ANR	1477179	AssignmentExpression	mcbuffer [ mclength ++ ] = * ( ++ ptr )		1466025	0		=			
ANR	1477180	ArrayIndexing	mcbuffer [ mclength ++ ]		1466025	0					
ANR	1477181	Identifier	mcbuffer		1466025	0					
ANR	1477182	PostIncDecOperationExpression	mclength ++		1466025	1					
ANR	1477183	Identifier	mclength		1466025	0					
ANR	1477184	IncDec	++		1466025	1					
ANR	1477185	UnaryOperationExpression	* ( ++ ptr )		1466025	1					
ANR	1477186	UnaryOperator	*		1466025	0					
ANR	1477187	UnaryExpression	++ ptr		1466025	1					
ANR	1477188	IncDec	++		1466025	0					
ANR	1477189	Identifier	ptr		1466025	1					
ANR	1477190	Label	ONE_CHAR :	7988:4:263010:263018	1466025	176	True				
ANR	1477191	Identifier	ONE_CHAR		1466025	0					
ANR	1477192	ExpressionStatement	previous = code	7989:4:263024:263039	1466025	177	True				
ANR	1477193	AssignmentExpression	previous = code		1466025	0		=			
ANR	1477194	Identifier	previous		1466025	0					
ANR	1477195	Identifier	code		1466025	1					
ANR	1477196	IfStatement	if ( utf && ( options & PCRE_CASELESS ) != 0 )		1466025	178					
ANR	1477197	Condition	utf && ( options & PCRE_CASELESS ) != 0	7996:8:263262:263298	1466025	0	True				
ANR	1477198	AndExpression	utf && ( options & PCRE_CASELESS ) != 0		1466025	0		&&			
ANR	1477199	Identifier	utf		1466025	0					
ANR	1477200	EqualityExpression	( options & PCRE_CASELESS ) != 0		1466025	1		!=			
ANR	1477201	BitAndExpression	options & PCRE_CASELESS		1466025	0		&			
ANR	1477202	Identifier	options		1466025	0					
ANR	1477203	Identifier	PCRE_CASELESS		1466025	1					
ANR	1477204	PrimaryExpression	0		1466025	1					
ANR	1477205	CompoundStatement		3558:6:124062:124062	1466025	1					
ANR	1477206	ExpressionStatement	"GETCHAR ( c , mcbuffer )"	7998:6:263315:263335	1466025	0	True				
ANR	1477207	CallExpression	"GETCHAR ( c , mcbuffer )"		1466025	0					
ANR	1477208	Callee	GETCHAR		1466025	0					
ANR	1477209	Identifier	GETCHAR		1466025	0					
ANR	1477210	ArgumentList	c		1466025	1					
ANR	1477211	Argument	c		1466025	0					
ANR	1477212	Identifier	c		1466025	0					
ANR	1477213	Argument	mcbuffer		1466025	1					
ANR	1477214	Identifier	mcbuffer		1466025	0					
ANR	1477215	IfStatement	if ( ( c = UCD_CASESET ( c ) ) != 0 )		1466025	1					
ANR	1477216	Condition	( c = UCD_CASESET ( c ) ) != 0	7999:10:263347:263371	1466025	0	True				
ANR	1477217	EqualityExpression	( c = UCD_CASESET ( c ) ) != 0		1466025	0		!=			
ANR	1477218	AssignmentExpression	c = UCD_CASESET ( c )		1466025	0		=			
ANR	1477219	Identifier	c		1466025	0					
ANR	1477220	CallExpression	UCD_CASESET ( c )		1466025	1					
ANR	1477221	Callee	UCD_CASESET		1466025	0					
ANR	1477222	Identifier	UCD_CASESET		1466025	0					
ANR	1477223	ArgumentList	c		1466025	1					
ANR	1477224	Argument	c		1466025	0					
ANR	1477225	Identifier	c		1466025	0					
ANR	1477226	PrimaryExpression	0		1466025	1					
ANR	1477227	CompoundStatement		3561:8:124137:124137	1466025	1					
ANR	1477228	ExpressionStatement	* code ++ = OP_PROP	8001:8:263392:263409	1466025	0	True				
ANR	1477229	AssignmentExpression	* code ++ = OP_PROP		1466025	0		=			
ANR	1477230	UnaryOperationExpression	* code ++		1466025	0					
ANR	1477231	UnaryOperator	*		1466025	0					
ANR	1477232	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1477233	Identifier	code		1466025	0					
ANR	1477234	IncDec	++		1466025	1					
ANR	1477235	Identifier	OP_PROP		1466025	1					
ANR	1477236	ExpressionStatement	* code ++ = PT_CLIST	8002:8:263419:263437	1466025	1	True				
ANR	1477237	AssignmentExpression	* code ++ = PT_CLIST		1466025	0		=			
ANR	1477238	UnaryOperationExpression	* code ++		1466025	0					
ANR	1477239	UnaryOperator	*		1466025	0					
ANR	1477240	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1477241	Identifier	code		1466025	0					
ANR	1477242	IncDec	++		1466025	1					
ANR	1477243	Identifier	PT_CLIST		1466025	1					
ANR	1477244	ExpressionStatement	* code ++ = c	8003:8:263447:263458	1466025	2	True				
ANR	1477245	AssignmentExpression	* code ++ = c		1466025	0		=			
ANR	1477246	UnaryOperationExpression	* code ++		1466025	0					
ANR	1477247	UnaryOperator	*		1466025	0					
ANR	1477248	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1477249	Identifier	code		1466025	0					
ANR	1477250	IncDec	++		1466025	1					
ANR	1477251	Identifier	c		1466025	1					
ANR	1477252	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	3					
ANR	1477253	Condition	firstcharflags == REQ_UNSET	8004:12:263472:263498	1466025	0	True				
ANR	1477254	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1477255	Identifier	firstcharflags		1466025	0					
ANR	1477256	Identifier	REQ_UNSET		1466025	1					
ANR	1477257	ExpressionStatement	firstcharflags = zerofirstcharflags = REQ_NONE	8005:10:263511:263557	1466025	1	True				
ANR	1477258	AssignmentExpression	firstcharflags = zerofirstcharflags = REQ_NONE		1466025	0		=			
ANR	1477259	Identifier	firstcharflags		1466025	0					
ANR	1477260	AssignmentExpression	zerofirstcharflags = REQ_NONE		1466025	1		=			
ANR	1477261	Identifier	zerofirstcharflags		1466025	0					
ANR	1477262	Identifier	REQ_NONE		1466025	1					
ANR	1477263	BreakStatement	break ;	8006:8:263567:263572	1466025	4	True				
ANR	1477264	ExpressionStatement	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_CHARI : OP_CHAR	8013:4:263672:263734	1466025	179	True				
ANR	1477265	AssignmentExpression	* code ++ = ( ( options & PCRE_CASELESS ) != 0 ) ? OP_CHARI : OP_CHAR		1466025	0		=			
ANR	1477266	UnaryOperationExpression	* code ++		1466025	0					
ANR	1477267	UnaryOperator	*		1466025	0					
ANR	1477268	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1477269	Identifier	code		1466025	0					
ANR	1477270	IncDec	++		1466025	1					
ANR	1477271	ConditionalExpression	( ( options & PCRE_CASELESS ) != 0 ) ? OP_CHARI : OP_CHAR		1466025	1					
ANR	1477272	Condition	( options & PCRE_CASELESS ) != 0		1466025	0					
ANR	1477273	EqualityExpression	( options & PCRE_CASELESS ) != 0		1466025	0		!=			
ANR	1477274	BitAndExpression	options & PCRE_CASELESS		1466025	0		&			
ANR	1477275	Identifier	options		1466025	0					
ANR	1477276	Identifier	PCRE_CASELESS		1466025	1					
ANR	1477277	PrimaryExpression	0		1466025	1					
ANR	1477278	Identifier	OP_CHARI		1466025	1					
ANR	1477279	Identifier	OP_CHAR		1466025	2					
ANR	1477280	ForStatement	for ( c = 0 ; c < mclength ; c ++ )		1466025	180					
ANR	1477281	ForInit	c = 0 ;	8014:9:263745:263750	1466025	0	True				
ANR	1477282	AssignmentExpression	c = 0		1466025	0		=			
ANR	1477283	Identifier	c		1466025	0					
ANR	1477284	PrimaryExpression	0		1466025	1					
ANR	1477285	Condition	c < mclength	8014:16:263752:263763	1466025	1	True				
ANR	1477286	RelationalExpression	c < mclength		1466025	0		<			
ANR	1477287	Identifier	c		1466025	0					
ANR	1477288	Identifier	mclength		1466025	1					
ANR	1477289	PostIncDecOperationExpression	c ++	8014:30:263766:263768	1466025	2	True				
ANR	1477290	Identifier	c		1466025	0					
ANR	1477291	IncDec	++		1466025	1					
ANR	1477292	ExpressionStatement	* code ++ = mcbuffer [ c ]	8014:35:263771:263792	1466025	3	True				
ANR	1477293	AssignmentExpression	* code ++ = mcbuffer [ c ]		1466025	0		=			
ANR	1477294	UnaryOperationExpression	* code ++		1466025	0					
ANR	1477295	UnaryOperator	*		1466025	0					
ANR	1477296	PostIncDecOperationExpression	code ++		1466025	1					
ANR	1477297	Identifier	code		1466025	0					
ANR	1477298	IncDec	++		1466025	1					
ANR	1477299	ArrayIndexing	mcbuffer [ c ]		1466025	1					
ANR	1477300	Identifier	mcbuffer		1466025	0					
ANR	1477301	Identifier	c		1466025	1					
ANR	1477302	IfStatement	if ( mcbuffer [ 0 ] == CHAR_CR || mcbuffer [ 0 ] == CHAR_NL )		1466025	181					
ANR	1477303	Condition	mcbuffer [ 0 ] == CHAR_CR || mcbuffer [ 0 ] == CHAR_NL	8018:8:263845:263892	1466025	0	True				
ANR	1477304	OrExpression	mcbuffer [ 0 ] == CHAR_CR || mcbuffer [ 0 ] == CHAR_NL		1466025	0		||			
ANR	1477305	EqualityExpression	mcbuffer [ 0 ] == CHAR_CR		1466025	0		==			
ANR	1477306	ArrayIndexing	mcbuffer [ 0 ]		1466025	0					
ANR	1477307	Identifier	mcbuffer		1466025	0					
ANR	1477308	PrimaryExpression	0		1466025	1					
ANR	1477309	Identifier	CHAR_CR		1466025	1					
ANR	1477310	EqualityExpression	mcbuffer [ 0 ] == CHAR_NL		1466025	1		==			
ANR	1477311	ArrayIndexing	mcbuffer [ 0 ]		1466025	0					
ANR	1477312	Identifier	mcbuffer		1466025	0					
ANR	1477313	PrimaryExpression	0		1466025	1					
ANR	1477314	Identifier	CHAR_NL		1466025	1					
ANR	1477315	ExpressionStatement	cd -> external_flags |= PCRE_HASCRORLF	8019:6:263901:263937	1466025	1	True				
ANR	1477316	AssignmentExpression	cd -> external_flags |= PCRE_HASCRORLF		1466025	0		|=			
ANR	1477317	PtrMemberAccess	cd -> external_flags		1466025	0					
ANR	1477318	Identifier	cd		1466025	0					
ANR	1477319	Identifier	external_flags		1466025	1					
ANR	1477320	Identifier	PCRE_HASCRORLF		1466025	1					
ANR	1477321	IfStatement	if ( firstcharflags == REQ_UNSET )		1466025	182					
ANR	1477322	Condition	firstcharflags == REQ_UNSET	8026:8:264193:264219	1466025	0	True				
ANR	1477323	EqualityExpression	firstcharflags == REQ_UNSET		1466025	0		==			
ANR	1477324	Identifier	firstcharflags		1466025	0					
ANR	1477325	Identifier	REQ_UNSET		1466025	1					
ANR	1477326	CompoundStatement		3588:6:124983:124983	1466025	1					
ANR	1477327	ExpressionStatement	zerofirstcharflags = REQ_NONE	8028:6:264236:264265	1466025	0	True				
ANR	1477328	AssignmentExpression	zerofirstcharflags = REQ_NONE		1466025	0		=			
ANR	1477329	Identifier	zerofirstcharflags		1466025	0					
ANR	1477330	Identifier	REQ_NONE		1466025	1					
ANR	1477331	ExpressionStatement	zeroreqchar = reqchar	8029:6:264273:264294	1466025	1	True				
ANR	1477332	AssignmentExpression	zeroreqchar = reqchar		1466025	0		=			
ANR	1477333	Identifier	zeroreqchar		1466025	0					
ANR	1477334	Identifier	reqchar		1466025	1					
ANR	1477335	ExpressionStatement	zeroreqcharflags = reqcharflags	8030:6:264302:264333	1466025	2	True				
ANR	1477336	AssignmentExpression	zeroreqcharflags = reqcharflags		1466025	0		=			
ANR	1477337	Identifier	zeroreqcharflags		1466025	0					
ANR	1477338	Identifier	reqcharflags		1466025	1					
ANR	1477339	IfStatement	if ( mclength == 1 || req_caseopt == 0 )		1466025	3					
ANR	1477340	Condition	mclength == 1 || req_caseopt == 0	8035:10:264475:264507	1466025	0	True				
ANR	1477341	OrExpression	mclength == 1 || req_caseopt == 0		1466025	0		||			
ANR	1477342	EqualityExpression	mclength == 1		1466025	0		==			
ANR	1477343	Identifier	mclength		1466025	0					
ANR	1477344	PrimaryExpression	1		1466025	1					
ANR	1477345	EqualityExpression	req_caseopt == 0		1466025	1		==			
ANR	1477346	Identifier	req_caseopt		1466025	0					
ANR	1477347	PrimaryExpression	0		1466025	1					
ANR	1477348	CompoundStatement		3597:8:125273:125273	1466025	1					
ANR	1477349	ExpressionStatement	firstchar = mcbuffer [ 0 ] | req_caseopt	8037:8:264528:264565	1466025	0	True				
ANR	1477350	AssignmentExpression	firstchar = mcbuffer [ 0 ] | req_caseopt		1466025	0		=			
ANR	1477351	Identifier	firstchar		1466025	0					
ANR	1477352	InclusiveOrExpression	mcbuffer [ 0 ] | req_caseopt		1466025	1		|			
ANR	1477353	ArrayIndexing	mcbuffer [ 0 ]		1466025	0					
ANR	1477354	Identifier	mcbuffer		1466025	0					
ANR	1477355	PrimaryExpression	0		1466025	1					
ANR	1477356	Identifier	req_caseopt		1466025	1					
ANR	1477357	ExpressionStatement	firstchar = mcbuffer [ 0 ]	8038:8:264575:264598	1466025	1	True				
ANR	1477358	AssignmentExpression	firstchar = mcbuffer [ 0 ]		1466025	0		=			
ANR	1477359	Identifier	firstchar		1466025	0					
ANR	1477360	ArrayIndexing	mcbuffer [ 0 ]		1466025	1					
ANR	1477361	Identifier	mcbuffer		1466025	0					
ANR	1477362	PrimaryExpression	0		1466025	1					
ANR	1477363	ExpressionStatement	firstcharflags = req_caseopt	8039:8:264608:264636	1466025	2	True				
ANR	1477364	AssignmentExpression	firstcharflags = req_caseopt		1466025	0		=			
ANR	1477365	Identifier	firstcharflags		1466025	0					
ANR	1477366	Identifier	req_caseopt		1466025	1					
ANR	1477367	IfStatement	if ( mclength != 1 )		1466025	3					
ANR	1477368	Condition	mclength != 1	8041:12:264651:264663	1466025	0	True				
ANR	1477369	EqualityExpression	mclength != 1		1466025	0		!=			
ANR	1477370	Identifier	mclength		1466025	0					
ANR	1477371	PrimaryExpression	1		1466025	1					
ANR	1477372	CompoundStatement		3603:10:125431:125431	1466025	1					
ANR	1477373	ExpressionStatement	reqchar = code [ - 1 ]	8043:10:264688:264706	1466025	0	True				
ANR	1477374	AssignmentExpression	reqchar = code [ - 1 ]		1466025	0		=			
ANR	1477375	Identifier	reqchar		1466025	0					
ANR	1477376	ArrayIndexing	code [ - 1 ]		1466025	1					
ANR	1477377	Identifier	code		1466025	0					
ANR	1477378	UnaryOperationExpression	- 1		1466025	1					
ANR	1477379	UnaryOperator	-		1466025	0					
ANR	1477380	PrimaryExpression	1		1466025	1					
ANR	1477381	ExpressionStatement	reqcharflags = cd -> req_varyopt	8044:10:264718:264748	1466025	1	True				
ANR	1477382	AssignmentExpression	reqcharflags = cd -> req_varyopt		1466025	0		=			
ANR	1477383	Identifier	reqcharflags		1466025	0					
ANR	1477384	PtrMemberAccess	cd -> req_varyopt		1466025	1					
ANR	1477385	Identifier	cd		1466025	0					
ANR	1477386	Identifier	req_varyopt		1466025	1					
ANR	1477387	ElseStatement	else		1466025	0					
ANR	1477388	ExpressionStatement	firstcharflags = reqcharflags = REQ_NONE	8047:11:264783:264823	1466025	0	True				
ANR	1477389	AssignmentExpression	firstcharflags = reqcharflags = REQ_NONE		1466025	0		=			
ANR	1477390	Identifier	firstcharflags		1466025	0					
ANR	1477391	AssignmentExpression	reqcharflags = REQ_NONE		1466025	1		=			
ANR	1477392	Identifier	reqcharflags		1466025	0					
ANR	1477393	Identifier	REQ_NONE		1466025	1					
ANR	1477394	ElseStatement	else		1466025	0					
ANR	1477395	CompoundStatement		3615:6:125720:125720	1466025	0					
ANR	1477396	ExpressionStatement	zerofirstchar = firstchar	8055:6:264973:264998	1466025	0	True				
ANR	1477397	AssignmentExpression	zerofirstchar = firstchar		1466025	0		=			
ANR	1477398	Identifier	zerofirstchar		1466025	0					
ANR	1477399	Identifier	firstchar		1466025	1					
ANR	1477400	ExpressionStatement	zerofirstcharflags = firstcharflags	8056:6:265006:265041	1466025	1	True				
ANR	1477401	AssignmentExpression	zerofirstcharflags = firstcharflags		1466025	0		=			
ANR	1477402	Identifier	zerofirstcharflags		1466025	0					
ANR	1477403	Identifier	firstcharflags		1466025	1					
ANR	1477404	ExpressionStatement	zeroreqchar = reqchar	8057:6:265049:265070	1466025	2	True				
ANR	1477405	AssignmentExpression	zeroreqchar = reqchar		1466025	0		=			
ANR	1477406	Identifier	zeroreqchar		1466025	0					
ANR	1477407	Identifier	reqchar		1466025	1					
ANR	1477408	ExpressionStatement	zeroreqcharflags = reqcharflags	8058:6:265078:265109	1466025	3	True				
ANR	1477409	AssignmentExpression	zeroreqcharflags = reqcharflags		1466025	0		=			
ANR	1477410	Identifier	zeroreqcharflags		1466025	0					
ANR	1477411	Identifier	reqcharflags		1466025	1					
ANR	1477412	IfStatement	if ( mclength == 1 || req_caseopt == 0 )		1466025	4					
ANR	1477413	Condition	mclength == 1 || req_caseopt == 0	8059:10:265121:265153	1466025	0	True				
ANR	1477414	OrExpression	mclength == 1 || req_caseopt == 0		1466025	0		||			
ANR	1477415	EqualityExpression	mclength == 1		1466025	0		==			
ANR	1477416	Identifier	mclength		1466025	0					
ANR	1477417	PrimaryExpression	1		1466025	1					
ANR	1477418	EqualityExpression	req_caseopt == 0		1466025	1		==			
ANR	1477419	Identifier	req_caseopt		1466025	0					
ANR	1477420	PrimaryExpression	0		1466025	1					
ANR	1477421	CompoundStatement		3621:8:125919:125919	1466025	1					
ANR	1477422	ExpressionStatement	reqchar = code [ - 1 ]	8061:8:265174:265192	1466025	0	True				
ANR	1477423	AssignmentExpression	reqchar = code [ - 1 ]		1466025	0		=			
ANR	1477424	Identifier	reqchar		1466025	0					
ANR	1477425	ArrayIndexing	code [ - 1 ]		1466025	1					
ANR	1477426	Identifier	code		1466025	0					
ANR	1477427	UnaryOperationExpression	- 1		1466025	1					
ANR	1477428	UnaryOperator	-		1466025	0					
ANR	1477429	PrimaryExpression	1		1466025	1					
ANR	1477430	ExpressionStatement	reqcharflags = req_caseopt | cd -> req_varyopt	8062:8:265202:265246	1466025	1	True				
ANR	1477431	AssignmentExpression	reqcharflags = req_caseopt | cd -> req_varyopt		1466025	0		=			
ANR	1477432	Identifier	reqcharflags		1466025	0					
ANR	1477433	InclusiveOrExpression	req_caseopt | cd -> req_varyopt		1466025	1		|			
ANR	1477434	Identifier	req_caseopt		1466025	0					
ANR	1477435	PtrMemberAccess	cd -> req_varyopt		1466025	1					
ANR	1477436	Identifier	cd		1466025	0					
ANR	1477437	Identifier	req_varyopt		1466025	1					
ANR	1477438	BreakStatement	break ;	8066:4:265271:265276	1466025	183	True				
ANR	1477439	Label	FAILED :	8075:0:265580:265586	1466025	41	True				
ANR	1477440	Identifier	FAILED		1466025	0					
ANR	1477441	ExpressionStatement	* ptrptr = ptr	8076:0:265588:265601	1466025	42	True				
ANR	1477442	AssignmentExpression	* ptrptr = ptr		1466025	0		=			
ANR	1477443	UnaryOperationExpression	* ptrptr		1466025	0					
ANR	1477444	UnaryOperator	*		1466025	0					
ANR	1477445	Identifier	ptrptr		1466025	1					
ANR	1477446	Identifier	ptr		1466025	1					
ANR	1477447	ReturnStatement	return FALSE ;	8077:0:265603:265615	1466025	43	True				
ANR	1477448	Identifier	FALSE		1466025	0					
ANR	1477449	ReturnType	static BOOL		1466025	1					
ANR	1477450	Identifier	compile_branch		1466025	2					
ANR	1477451	ParameterList	"int * optionsptr , pcre_uchar * * codeptr , const pcre_uchar * * ptrptr , int * errorcodeptr , pcre_uint32 * firstcharptr , pcre_int32 * firstcharflagsptr , pcre_uint32 * reqcharptr , pcre_int32 * reqcharflagsptr , branch_chain * bcptr , int cond_depth , compile_data * cd , int * lengthptr"		1466025	3					
ANR	1477452	Parameter	int * optionsptr	4434:15:138966:138980	1466025	0	True				
ANR	1477453	ParameterType	int *		1466025	0					
ANR	1477454	Identifier	optionsptr		1466025	1					
ANR	1477455	Parameter	pcre_uchar * * codeptr	4434:32:138983:139002	1466025	1	True				
ANR	1477456	ParameterType	pcre_uchar * *		1466025	0					
ANR	1477457	Identifier	codeptr		1466025	1					
ANR	1477458	Parameter	const pcre_uchar * * ptrptr	4435:2:139007:139031	1466025	2	True				
ANR	1477459	ParameterType	const pcre_uchar * *		1466025	0					
ANR	1477460	Identifier	ptrptr		1466025	1					
ANR	1477461	Parameter	int * errorcodeptr	4435:29:139034:139050	1466025	3	True				
ANR	1477462	ParameterType	int *		1466025	0					
ANR	1477463	Identifier	errorcodeptr		1466025	1					
ANR	1477464	Parameter	pcre_uint32 * firstcharptr	4436:2:139055:139079	1466025	4	True				
ANR	1477465	ParameterType	pcre_uint32 *		1466025	0					
ANR	1477466	Identifier	firstcharptr		1466025	1					
ANR	1477467	Parameter	pcre_int32 * firstcharflagsptr	4436:29:139082:139110	1466025	5	True				
ANR	1477468	ParameterType	pcre_int32 *		1466025	0					
ANR	1477469	Identifier	firstcharflagsptr		1466025	1					
ANR	1477470	Parameter	pcre_uint32 * reqcharptr	4437:2:139115:139137	1466025	6	True				
ANR	1477471	ParameterType	pcre_uint32 *		1466025	0					
ANR	1477472	Identifier	reqcharptr		1466025	1					
ANR	1477473	Parameter	pcre_int32 * reqcharflagsptr	4437:27:139140:139166	1466025	7	True				
ANR	1477474	ParameterType	pcre_int32 *		1466025	0					
ANR	1477475	Identifier	reqcharflagsptr		1466025	1					
ANR	1477476	Parameter	branch_chain * bcptr	4438:2:139171:139189	1466025	8	True				
ANR	1477477	ParameterType	branch_chain *		1466025	0					
ANR	1477478	Identifier	bcptr		1466025	1					
ANR	1477479	Parameter	int cond_depth	4438:23:139192:139205	1466025	9	True				
ANR	1477480	ParameterType	int		1466025	0					
ANR	1477481	Identifier	cond_depth		1466025	1					
ANR	1477482	Parameter	compile_data * cd	4439:2:139210:139225	1466025	10	True				
ANR	1477483	ParameterType	compile_data *		1466025	0					
ANR	1477484	Identifier	cd		1466025	1					
ANR	1477485	Parameter	int * lengthptr	4439:20:139228:139241	1466025	11	True				
ANR	1477486	ParameterType	int *		1466025	0					
ANR	1477487	Identifier	lengthptr		1466025	1					
ANR	1477488	CFGEntryNode	ENTRY		1466025		True				
ANR	1477489	CFGExitNode	EXIT		1466025		True				
ANR	1477490	InfiniteForNode	true		1466025		True				
ANR	1477491	InfiniteForNode	true		1466025		True				
ANR	1477492	InfiniteForNode	true		1466025		True				
ANR	1477493	InfiniteForNode	true		1466025		True				
ANR	1477494	InfiniteForNode	true		1466025		True				
ANR	1477495	Symbol	arglen		1466025						
ANR	1477496	Symbol	ESC_Z		1466025						
ANR	1477497	Symbol	* cd		1466025						
ANR	1477498	Symbol	OP_CREF		1466025						
ANR	1477499	Symbol	local_negate		1466025						
ANR	1477500	Symbol	ESC_b		1466025						
ANR	1477501	Symbol	ESC_g		1466025						
ANR	1477502	Symbol	cd -> max_lookbehind		1466025						
ANR	1477503	Symbol	ESC_Q		1466025						
ANR	1477504	Symbol	PARENS_NEST_LIMIT		1466025						
ANR	1477505	Symbol	ESC_P		1466025						
ANR	1477506	Symbol	ESC_N		1466025						
ANR	1477507	Symbol	& ptype		1466025						
ANR	1477508	Symbol	OP_BRAZERO		1466025						
ANR	1477509	Symbol	HAS_EXTRALEN		1466025						
ANR	1477510	Symbol	cbit_word		1466025						
ANR	1477511	Symbol	recno		1466025						
ANR	1477512	Symbol	ESC_A		1466025						
ANR	1477513	Symbol	ESC_E		1466025						
ANR	1477514	Symbol	ESC_C		1466025						
ANR	1477515	Symbol	ESC_B		1466025						
ANR	1477516	Symbol	* classbits		1466025						
ANR	1477517	Symbol	STRNCMP_UC_UC		1466025						
ANR	1477518	Symbol	CHAR_NULL		1466025						
ANR	1477519	Symbol	OP_NCLASS		1466025						
ANR	1477520	Symbol	check_posix_name		1466025						
ANR	1477521	Symbol	OP_NOT		1466025						
ANR	1477522	Symbol	subfirstcharflags		1466025						
ANR	1477523	Symbol	& length_prevgroup		1466025						
ANR	1477524	Symbol	* * ptr		1466025						
ANR	1477525	Symbol	nestptr		1466025						
ANR	1477526	Symbol	req_caseopt		1466025						
ANR	1477527	Symbol	MAX_MARK		1466025						
ANR	1477528	Symbol	OP_CRQUERY		1466025						
ANR	1477529	Symbol	newspace		1466025						
ANR	1477530	Symbol	~classbits		1466025						
ANR	1477531	Symbol	OP_CRPOSSTAR		1466025						
ANR	1477532	Symbol	& subreqchar		1466025						
ANR	1477533	Symbol	OP_CIRC		1466025						
ANR	1477534	Symbol	cd		1466025						
ANR	1477535	Symbol	ketcode		1466025						
ANR	1477536	Symbol	c		1466025						
ANR	1477537	Symbol	refsign		1466025						
ANR	1477538	Symbol	set		1466025						
ANR	1477539	Symbol	ng -> length		1466025						
ANR	1477540	Symbol	cf		1466025						
ANR	1477541	Symbol	d		1466025						
ANR	1477542	Symbol	repeat_type		1466025						
ANR	1477543	Symbol	hspace_list		1466025						
ANR	1477544	Symbol	ESC_wu		1466025						
ANR	1477545	Symbol	* codeptr		1466025						
ANR	1477546	Symbol	i		1466025						
ANR	1477547	Symbol	ctype_space		1466025						
ANR	1477548	Symbol	firstcharflagsptr		1466025						
ANR	1477549	Symbol	cbit_digit		1466025						
ANR	1477550	Symbol	n		1466025						
ANR	1477551	Symbol	p		1466025						
ANR	1477552	Symbol	possessive_quantifier		1466025						
ANR	1477553	Symbol	PT_PXPUNCT		1466025						
ANR	1477554	Symbol	tempptr		1466025						
ANR	1477555	Symbol	OP_TYPESTAR		1466025						
ANR	1477556	Symbol	firstcharflags		1466025						
ANR	1477557	Symbol	& pdata		1466025						
ANR	1477558	Symbol	negated		1466025						
ANR	1477559	Symbol	CHAR_RIGHT_PARENTHESIS		1466025						
ANR	1477560	Symbol	MAX_VALUE_FOR_SINGLE_CHAR		1466025						
ANR	1477561	Symbol	oc -> flag		1466025						
ANR	1477562	Symbol	WORK_SIZE_SAFETY_MARGIN		1466025						
ANR	1477563	Symbol	* IMM2_SIZE		1466025						
ANR	1477564	Symbol	CHAR_DOT		1466025						
ANR	1477565	Symbol	repeat_min		1466025						
ANR	1477566	Symbol	cd -> external_options		1466025						
ANR	1477567	Symbol	NAMED_GROUP_LIST_SIZE		1466025						
ANR	1477568	Symbol	IN_UCHARS		1466025						
ANR	1477569	Symbol	STRING_WEIRD_STARTWORD		1466025						
ANR	1477570	Symbol	OP_NOTPOSQUERY		1466025						
ANR	1477571	Symbol	mcbuffer		1466025						
ANR	1477572	Symbol	save_hwm_offset		1466025						
ANR	1477573	Symbol	* ptrptr		1466025						
ANR	1477574	Symbol	reset_bracount		1466025						
ANR	1477575	Symbol	ec		1466025						
ANR	1477576	Symbol	tempbracount		1466025						
ANR	1477577	Symbol	CHAR_CIRCUMFLEX_ACCENT		1466025						
ANR	1477578	Symbol	* posix_class		1466025						
ANR	1477579	Symbol	OP_NOTPOSUPTOI		1466025						
ANR	1477580	Symbol	count		1466025						
ANR	1477581	Symbol	cd -> open_caps		1466025						
ANR	1477582	Symbol	OP_SBRA		1466025						
ANR	1477583	Symbol	* verbs		1466025						
ANR	1477584	Symbol	ctype_word		1466025						
ANR	1477585	Symbol	get_ucp		1466025						
ANR	1477586	Symbol	OP_TYPEPOSQUERY		1466025						
ANR	1477587	Symbol	OP_CRSTAR		1466025						
ANR	1477588	Symbol	* pbits		1466025						
ANR	1477589	Symbol	CHAR_LESS_THAN_SIGN		1466025						
ANR	1477590	Symbol	OP_DNREFI		1466025						
ANR	1477591	Symbol	* class_uchardata ++		1466025						
ANR	1477592	Symbol	cd -> named_groups [ cd -> names_found ] . name		1466025						
ANR	1477593	Symbol	cbit_space		1466025						
ANR	1477594	Symbol	OP_TYPEPOSUPTO		1466025						
ANR	1477595	Symbol	cd -> assert_depth		1466025						
ANR	1477596	Symbol	& negated		1466025						
ANR	1477597	Symbol	OP_SKIPZERO		1466025						
ANR	1477598	Symbol	PT_PXGRAPH		1466025						
ANR	1477599	Symbol	* cd -> named_groups		1466025						
ANR	1477600	Symbol	~unset		1466025						
ANR	1477601	Symbol	OFLOW_MAX		1466025						
ANR	1477602	Symbol	should_flip_negation		1466025						
ANR	1477603	Symbol	cd -> named_groups [ cd -> names_found ] . number		1466025						
ANR	1477604	Symbol	check_posix_syntax		1466025						
ANR	1477605	Symbol	* cbit_word		1466025						
ANR	1477606	Symbol	CHAR_LEFT_SQUARE_BRACKET		1466025						
ANR	1477607	Symbol	OP_CRRANGE		1466025						
ANR	1477608	Symbol	OP_TYPEPOSSTAR		1466025						
ANR	1477609	Symbol	OP_ALLANY		1466025						
ANR	1477610	Symbol	sub_end_of_word		1466025						
ANR	1477611	Symbol	bravalue		1466025						
ANR	1477612	Symbol	tempreqvary		1466025						
ANR	1477613	Symbol	oldptr		1466025						
ANR	1477614	Symbol	* optionsptr		1466025						
ANR	1477615	Symbol	OP_BRAPOS		1466025						
ANR	1477616	Symbol	ERR83		1466025						
ANR	1477617	Symbol	ERR84		1466025						
ANR	1477618	Symbol	ptrptr		1466025						
ANR	1477619	Symbol	PCRE_DOTALL		1466025						
ANR	1477620	Symbol	NOTACHAR		1466025						
ANR	1477621	Symbol	CHAR_MINUS		1466025						
ANR	1477622	Symbol	hc		1466025						
ANR	1477623	Symbol	OP_STAR		1466025						
ANR	1477624	Symbol	called		1466025						
ANR	1477625	Symbol	OP_UPTO		1466025						
ANR	1477626	Symbol	OP_POSQUERY		1466025						
ANR	1477627	Symbol	namelen		1466025						
ANR	1477628	Symbol	classbits		1466025						
ANR	1477629	Symbol	OP_ANY		1466025						
ANR	1477630	Symbol	PCRE_EXTENDED		1466025						
ANR	1477631	Symbol	* LINK_SIZE		1466025						
ANR	1477632	Symbol	ERR82		1466025						
ANR	1477633	Symbol	posix_class		1466025						
ANR	1477634	Symbol	ERR75		1466025						
ANR	1477635	Symbol	number		1466025						
ANR	1477636	Symbol	zeroreqchar		1466025						
ANR	1477637	Symbol	read_repeat_counts		1466025						
ANR	1477638	Symbol	OP_STARI		1466025						
ANR	1477639	Symbol	* posix_class_maps		1466025						
ANR	1477640	Symbol	* * tempcode		1466025						
ANR	1477641	Symbol	OP_CLASS		1466025						
ANR	1477642	Symbol	OP_REFI		1466025						
ANR	1477643	Symbol	index		1466025						
ANR	1477644	Symbol	PUBL		1466025						
ANR	1477645	Symbol	inescq		1466025						
ANR	1477646	Symbol	OP_ASSERTBACK_NOT		1466025						
ANR	1477647	Symbol	ERR71		1466025						
ANR	1477648	Symbol	descape		1466025						
ANR	1477649	Symbol	ERR63		1466025						
ANR	1477650	Symbol	ERR64		1466025						
ANR	1477651	Symbol	& subfirstchar		1466025						
ANR	1477652	Symbol	repcode		1466025						
ANR	1477653	Symbol	could_be_empty		1466025						
ANR	1477654	Symbol	ERR62		1466025						
ANR	1477655	Symbol	ERR65		1466025						
ANR	1477656	Symbol	ERR66		1466025						
ANR	1477657	Symbol	& subfirstcharflags		1466025						
ANR	1477658	Symbol	OP_NOTPOSSTARI		1466025						
ANR	1477659	Symbol	ERR69		1466025						
ANR	1477660	Symbol	newoptions		1466025						
ANR	1477661	Symbol	cd -> parens_depth		1466025						
ANR	1477662	Symbol	cslot		1466025						
ANR	1477663	Symbol	OP_ALT		1466025						
ANR	1477664	Symbol	OP_CRPLUS		1466025						
ANR	1477665	Symbol	ERR60		1466025						
ANR	1477666	Symbol	ERR52		1466025						
ANR	1477667	Symbol	negate_class		1466025						
ANR	1477668	Symbol	ERR57		1466025						
ANR	1477669	Symbol	OP_POSUPTOI		1466025						
ANR	1477670	Symbol	ERR54		1466025						
ANR	1477671	Symbol	* ( ++ ptr )		1466025						
ANR	1477672	Symbol	& class_uchardata		1466025						
ANR	1477673	Symbol	oldcode		1466025						
ANR	1477674	Symbol	cd -> namedrefcount		1466025						
ANR	1477675	Symbol	ERR58		1466025						
ANR	1477676	Symbol	ERR59		1466025						
ANR	1477677	Symbol	* name		1466025						
ANR	1477678	Symbol	malloc		1466025						
ANR	1477679	Symbol	CHAR_ASTERISK		1466025						
ANR	1477680	Symbol	ord2utf		1466025						
ANR	1477681	Symbol	OP_POSPLUS		1466025						
ANR	1477682	Symbol	XCL_NOTPROP		1466025						
ANR	1477683	Symbol	REQ_UNSET		1466025						
ANR	1477684	Symbol	PCRE_MULTILINE		1466025						
ANR	1477685	Symbol	errorcodeptr		1466025						
ANR	1477686	Symbol	OP_NOTSTAR		1466025						
ANR	1477687	Symbol	ERR41		1466025						
ANR	1477688	Symbol	* PRIV		1466025						
ANR	1477689	Symbol	ERR42		1466025						
ANR	1477690	Symbol	PCRE_DUPNAMES		1466025						
ANR	1477691	Symbol	ERR40		1466025						
ANR	1477692	Symbol	* errorcodeptr		1466025						
ANR	1477693	Symbol	zerofirstchar		1466025						
ANR	1477694	Symbol	ERR43		1466025						
ANR	1477695	Symbol	ERR49		1466025						
ANR	1477696	Symbol	ERR48		1466025						
ANR	1477697	Symbol	* ng		1466025						
ANR	1477698	Symbol	* ~pbits		1466025						
ANR	1477699	Symbol	* lengthptr		1466025						
ANR	1477700	Symbol	* posix_substitutes		1466025						
ANR	1477701	Symbol	tabopt		1466025						
ANR	1477702	Symbol	unset		1466025						
ANR	1477703	Symbol	& tempptr		1466025						
ANR	1477704	Symbol	ERR30		1466025						
ANR	1477705	Symbol	OP_POSSTARI		1466025						
ANR	1477706	Symbol	* slot		1466025						
ANR	1477707	Symbol	compile_regex		1466025						
ANR	1477708	Symbol	ERR31		1466025						
ANR	1477709	Symbol	class_has_8bitchar		1466025						
ANR	1477710	Symbol	ERR35		1466025						
ANR	1477711	Symbol	ERR38		1466025						
ANR	1477712	Symbol	cd -> hwm		1466025						
ANR	1477713	Symbol	* oc		1466025						
ANR	1477714	Symbol	ERR39		1466025						
ANR	1477715	Symbol	verbcount		1466025						
ANR	1477716	Symbol	verbs		1466025						
ANR	1477717	Symbol	CHAR_NL		1466025						
ANR	1477718	Symbol	REQ_NONE		1466025						
ANR	1477719	Symbol	* cd -> ctypes		1466025						
ANR	1477720	Symbol	opcode_possessify		1466025						
ANR	1477721	Symbol	cd -> named_group_list_size		1466025						
ANR	1477722	Symbol	NULL		1466025						
ANR	1477723	Symbol	cd -> nllen		1466025						
ANR	1477724	Symbol	OP_CLOSE		1466025						
ANR	1477725	Symbol	utf		1466025						
ANR	1477726	Symbol	substitutes		1466025						
ANR	1477727	Symbol	* cd -> names_found		1466025						
ANR	1477728	Symbol	TRUE		1466025						
ANR	1477729	Symbol	PCRE_UNGREEDY		1466025						
ANR	1477730	Symbol	PCRE_UCP		1466025						
ANR	1477731	Symbol	ERR20		1466025						
ANR	1477732	Symbol	reqchar		1466025						
ANR	1477733	Symbol	ERR24		1466025						
ANR	1477734	Symbol	ERR21		1466025						
ANR	1477735	Symbol	ERR27		1466025						
ANR	1477736	Symbol	CHAR_APOSTROPHE		1466025						
ANR	1477737	Symbol	ERR28		1466025						
ANR	1477738	Symbol	ng		1466025						
ANR	1477739	Symbol	* pc		1466025						
ANR	1477740	Symbol	OP_lengths		1466025						
ANR	1477741	Symbol	ERR26		1466025						
ANR	1477742	Symbol	find_bracket		1466025						
ANR	1477743	Symbol	* code		1466025						
ANR	1477744	Symbol	OP_KET		1466025						
ANR	1477745	Symbol	ERR29		1466025						
ANR	1477746	Symbol	* firstcharptr		1466025						
ANR	1477747	Symbol	bralink		1466025						
ANR	1477748	Symbol	codeptr		1466025						
ANR	1477749	Symbol	code		1466025						
ANR	1477750	Symbol	& unset		1466025						
ANR	1477751	Symbol	ng -> number		1466025						
ANR	1477752	Symbol	OP_PLUS		1466025						
ANR	1477753	Symbol	ptype		1466025						
ANR	1477754	Symbol	slot		1466025						
ANR	1477755	Symbol	& ptr		1466025						
ANR	1477756	Symbol	ESC_DU		1466025						
ANR	1477757	Symbol	oc		1466025						
ANR	1477758	Symbol	ERR12		1466025						
ANR	1477759	Symbol	ERR13		1466025						
ANR	1477760	Symbol	class_uchardata		1466025						
ANR	1477761	Symbol	ERR11		1466025						
ANR	1477762	Symbol	ctype_letter		1466025						
ANR	1477763	Symbol	ERR14		1466025						
ANR	1477764	Symbol	cd -> cbits		1466025						
ANR	1477765	Symbol	ERR15		1466025						
ANR	1477766	Symbol	is_recurse		1466025						
ANR	1477767	Symbol	ERR18		1466025						
ANR	1477768	Symbol	XCL_NOT		1466025						
ANR	1477769	Symbol	repeat_max		1466025						
ANR	1477770	Symbol	OP_QUERY		1466025						
ANR	1477771	Symbol	CHAR_PLUS		1466025						
ANR	1477772	Symbol	UTF_LENGTH		1466025						
ANR	1477773	Symbol	* ptr ++		1466025						
ANR	1477774	Symbol	* c		1466025						
ANR	1477775	Symbol	cd -> req_varyopt		1466025						
ANR	1477776	Symbol	xclass_has_prop		1466025						
ANR	1477777	Symbol	OP_BRA		1466025						
ANR	1477778	Symbol	firstchar		1466025						
ANR	1477779	Symbol	pc		1466025						
ANR	1477780	Symbol	* i		1466025						
ANR	1477781	Symbol	PCRE_HASTHEN		1466025						
ANR	1477782	Symbol	cond_depth		1466025						
ANR	1477783	Symbol	MAX_255		1466025						
ANR	1477784	Symbol	CHAR_QUESTION_MARK		1466025						
ANR	1477785	Symbol	* p		1466025						
ANR	1477786	Symbol	* code ++		1466025						
ANR	1477787	Symbol	* cbit_digit		1466025						
ANR	1477788	Symbol	length_prevgroup		1466025						
ANR	1477789	Symbol	OP_DOLL		1466025						
ANR	1477790	Symbol	* optset		1466025						
ANR	1477791	Symbol	delta		1466025						
ANR	1477792	Symbol	mclength		1466025						
ANR	1477793	Symbol	prop_type		1466025						
ANR	1477794	Symbol	last_code		1466025						
ANR	1477795	Symbol	bra		1466025						
ANR	1477796	Symbol	verbs [ i ] . op_arg		1466025						
ANR	1477797	Symbol	len		1466025						
ANR	1477798	Symbol	* bracode		1466025						
ANR	1477799	Symbol	OP_KETRMAX		1466025						
ANR	1477800	Symbol	oc -> number		1466025						
ANR	1477801	Symbol	OP_CHAR		1466025						
ANR	1477802	Symbol	OP_CRPOSQUERY		1466025						
ANR	1477803	Symbol	* ~classbits		1466025						
ANR	1477804	Symbol	expand_workspace		1466025						
ANR	1477805	Symbol	OP_ASSERTBACK		1466025						
ANR	1477806	Symbol	OP_COND		1466025						
ANR	1477807	Symbol	oldlinkoffset		1466025						
ANR	1477808	Symbol	LINK_SIZE		1466025						
ANR	1477809	Symbol	CHAR_RIGHT_CURLY_BRACKET		1466025						
ANR	1477810	Symbol	OP_RECURSE		1466025						
ANR	1477811	Symbol	cd -> name_table		1466025						
ANR	1477812	Symbol	greedy_default		1466025						
ANR	1477813	Symbol	* tc		1466025						
ANR	1477814	Symbol	OP_NOTPOSUPTO		1466025						
ANR	1477815	Symbol	OP_POSUPTO		1466025						
ANR	1477816	Symbol	STRCMP_UC_UC		1466025						
ANR	1477817	Symbol	OP_NOTPOSSTAR		1466025						
ANR	1477818	Symbol	OP_POSSTAR		1466025						
ANR	1477819	Symbol	OP_END		1466025						
ANR	1477820	Symbol	cd -> had_accept		1466025						
ANR	1477821	Symbol	pdata		1466025						
ANR	1477822	Symbol	XCL_HASPROP		1466025						
ANR	1477823	Symbol	cbits		1466025						
ANR	1477824	Symbol	REQ_CASELESS		1466025						
ANR	1477825	Symbol	cd -> start_code		1466025						
ANR	1477826	Symbol	* substitutes		1466025						
ANR	1477827	Symbol	OP_CRPOSRANGE		1466025						
ANR	1477828	Symbol	OP_FAIL		1466025						
ANR	1477829	Symbol	vspace_list		1466025						
ANR	1477830	Symbol	arg		1466025						
ANR	1477831	Symbol	* ESC_DU		1466025						
ANR	1477832	Symbol	OP_POSPLUSI		1466025						
ANR	1477833	Symbol	free		1466025						
ANR	1477834	Symbol	escape		1466025						
ANR	1477835	Symbol	cd -> top_backref		1466025						
ANR	1477836	Symbol	is_counted_repeat		1466025						
ANR	1477837	Symbol	scode		1466025						
ANR	1477838	Symbol	cd -> named_groups		1466025						
ANR	1477839	Symbol	OP_CIRCM		1466025						
ANR	1477840	Symbol	CHAR_BACKSLASH		1466025						
ANR	1477841	Symbol	xclass		1466025						
ANR	1477842	Symbol	posix_substitutes		1466025						
ANR	1477843	Symbol	OP_NOTPROP		1466025						
ANR	1477844	Symbol	IS_DIGIT		1466025						
ANR	1477845	Symbol	tc		1466025						
ANR	1477846	Symbol	* cbits		1466025						
ANR	1477847	Symbol	cd -> had_pruneorskip		1466025						
ANR	1477848	Symbol	verbs [ i ] . len		1466025						
ANR	1477849	Symbol	STRNCMP_UC_C8		1466025						
ANR	1477850	Symbol	CHAR_RIGHT_SQUARE_BRACKET		1466025						
ANR	1477851	Symbol	OP_REF		1466025						
ANR	1477852	Symbol	optionsptr		1466025						
ANR	1477853	Symbol	cd -> external_flags		1466025						
ANR	1477854	Symbol	groupsetfirstchar		1466025						
ANR	1477855	Symbol	OP_ACCEPT		1466025						
ANR	1477856	Symbol	* previous		1466025						
ANR	1477857	Symbol	OP_CBRA		1466025						
ANR	1477858	Symbol	~cbits		1466025						
ANR	1477859	Symbol	& subreqcharflags		1466025						
ANR	1477860	Symbol	zerofirstcharflags		1466025						
ANR	1477861	Symbol	PRIV		1466025						
ANR	1477862	Symbol	UCD_CASESET		1466025						
ANR	1477863	Symbol	* repcode		1466025						
ANR	1477864	Symbol	OP_RREF		1466025						
ANR	1477865	Symbol	* taboffset		1466025						
ANR	1477866	Symbol	XCL_PROP		1466025						
ANR	1477867	Symbol	PCRE_HASCRORLF		1466025						
ANR	1477868	Symbol	terminator		1466025						
ANR	1477869	Symbol	REQ_VARY		1466025						
ANR	1477870	Symbol	bcptr		1466025						
ANR	1477871	Symbol	reqvary		1466025						
ANR	1477872	Symbol	OP_NOTSTARI		1466025						
ANR	1477873	Symbol	subfirstchar		1466025						
ANR	1477874	Symbol	CHAR_NUMBER_SIGN		1466025						
ANR	1477875	Symbol	orig_code		1466025						
ANR	1477876	Symbol	auto_callout		1466025						
ANR	1477877	Symbol	could_be_empty_branch		1466025						
ANR	1477878	Symbol	* cbit_space		1466025						
ANR	1477879	Symbol	CHAR_EXCLAMATION_MARK		1466025						
ANR	1477880	Symbol	vn		1466025						
ANR	1477881	Symbol	name		1466025						
ANR	1477882	Symbol	OP_EODN		1466025						
ANR	1477883	Symbol	op_type		1466025						
ANR	1477884	Symbol	class_one_char		1466025						
ANR	1477885	Symbol	* ~cbits		1466025						
ANR	1477886	Symbol	PT_CLIST		1466025						
ANR	1477887	Symbol	taboffset		1466025						
ANR	1477888	Symbol	& ec		1466025						
ANR	1477889	Symbol	cd -> final_bracount		1466025						
ANR	1477890	Symbol	RREF_ANY		1466025						
ANR	1477891	Symbol	PCRE_EXTRA		1466025						
ANR	1477892	Symbol	reqcharflagsptr		1466025						
ANR	1477893	Symbol	& tempcode		1466025						
ANR	1477894	Symbol	* reqcharptr		1466025						
ANR	1477895	Symbol	cd -> start_workspace		1466025						
ANR	1477896	Symbol	* mcbuffer		1466025						
ANR	1477897	Symbol	nlen		1466025						
ANR	1477898	Symbol	verbnames		1466025						
ANR	1477899	Symbol	GET_EXTRALEN		1466025						
ANR	1477900	Symbol	OP_NOTPOSQUERYI		1466025						
ANR	1477901	Symbol	setverb		1466025						
ANR	1477902	Symbol	OP_POSQUERYI		1466025						
ANR	1477903	Symbol	~pbits		1466025						
ANR	1477904	Symbol	previous		1466025						
ANR	1477905	Symbol	* tempptr		1466025						
ANR	1477906	Symbol	IMM2_SIZE		1466025						
ANR	1477907	Symbol	PT_PXPRINT		1466025						
ANR	1477908	Symbol	this_hwm_offset		1466025						
ANR	1477909	Symbol	& d		1466025						
ANR	1477910	Symbol	OP_DOLLM		1466025						
ANR	1477911	Symbol	& repeat_max		1466025						
ANR	1477912	Symbol	check_escape		1466025						
ANR	1477913	Symbol	ptr		1466025						
ANR	1477914	Symbol	CHAR_EQUALS_SIGN		1466025						
ANR	1477915	Symbol	OP_ONCE		1466025						
ANR	1477916	Symbol	OP_XCLASS		1466025						
ANR	1477917	Symbol	tempcode		1466025						
ANR	1477918	Symbol	PCRE_AUTO_CALLOUT		1466025						
ANR	1477919	Symbol	FALSE		1466025						
ANR	1477920	Symbol	PCRE_UTF8		1466025						
ANR	1477921	Symbol	* brazeroptr		1466025						
ANR	1477922	Symbol	STRING_DEFINE		1466025						
ANR	1477923	Symbol	CHAR_BS		1466025						
ANR	1477924	Symbol	optset		1466025						
ANR	1477925	Symbol	* firstcharflagsptr		1466025						
ANR	1477926	Symbol	cd -> names_found		1466025						
ANR	1477927	Symbol	subreqchar		1466025						
ANR	1477928	Symbol	cd -> name_entry_size		1466025						
ANR	1477929	Symbol	subreqcharflags		1466025						
ANR	1477930	Symbol	cd -> workspace_size		1466025						
ANR	1477931	Symbol	STRING_WEIRD_ENDWORD		1466025						
ANR	1477932	Symbol	PCRE_JCHANGED		1466025						
ANR	1477933	Symbol	options		1466025						
ANR	1477934	Symbol	oc -> next		1466025						
ANR	1477935	Symbol	posix_class_maps		1466025						
ANR	1477936	Symbol	CHAR_CR		1466025						
ANR	1477937	Symbol	OP_NOTPOSPLUSI		1466025						
ANR	1477938	Symbol	* tempcode		1466025						
ANR	1477939	Symbol	OP_SCOND		1466025						
ANR	1477940	Symbol	pbits		1466025						
ANR	1477941	Symbol	POSIX_SUBSIZE		1466025						
ANR	1477942	Symbol	is_quantifier		1466025						
ANR	1477943	Symbol	MAX_NAME_SIZE		1466025						
ANR	1477944	Symbol	firstcharptr		1466025						
ANR	1477945	Symbol	CHAR_LEFT_CURLY_BRACKET		1466025						
ANR	1477946	Symbol	sub_start_of_word		1466025						
ANR	1477947	Symbol	GET		1466025						
ANR	1477948	Symbol	OP_ASSERT_NOT		1466025						
ANR	1477949	Symbol	cd -> backref_map		1466025						
ANR	1477950	Symbol	PCRE_NO_AUTO_CAPTURE		1466025						
ANR	1477951	Symbol	CHAR_COLON		1466025						
ANR	1477952	Symbol	cd -> named_groups [ cd -> names_found ] . length		1466025						
ANR	1477953	Symbol	OP_ONCE_NC		1466025						
ANR	1477954	Symbol	skipbytes		1466025						
ANR	1477955	Symbol	* reqcharflagsptr		1466025						
ANR	1477956	Symbol	ng -> name		1466025						
ANR	1477957	Symbol	NOT_FIRSTCHAR		1466025						
ANR	1477958	Symbol	bracode		1466025						
ANR	1477959	Symbol	& set		1466025						
ANR	1477960	Symbol	~0x3c		1466025						
ANR	1477961	Symbol	reqcharflags		1466025						
ANR	1477962	Symbol	zeroreqcharflags		1466025						
ANR	1477963	Symbol	CHAR_AMPERSAND		1466025						
ANR	1477964	Symbol	prop_value		1466025						
ANR	1477965	Symbol	INT_MAX		1466025						
ANR	1477966	Symbol	PCRE_CASELESS		1466025						
ANR	1477967	Symbol	* * p		1466025						
ANR	1477968	Symbol	reqcharptr		1466025						
ANR	1477969	Symbol	cd -> ctypes		1466025						
ANR	1477970	Symbol	brazeroptr		1466025						
ANR	1477971	Symbol	XCL_MAP		1466025						
ANR	1477972	Symbol	verbs [ i ] . op		1466025						
ANR	1477973	Symbol	PCRE_JAVASCRIPT_COMPAT		1466025						
ANR	1477974	Symbol	MAX_NAME_COUNT		1466025						
ANR	1477975	Symbol	OP_NOTPOSPLUS		1466025						
ANR	1477976	Symbol	cd -> bracount		1466025						
ANR	1477977	Symbol	OP_NOTI		1466025						
ANR	1477978	Symbol	condcount		1466025						
ANR	1477979	Symbol	OP_EXACT		1466025						
ANR	1477980	Symbol	OP_CHARI		1466025						
ANR	1477981	Symbol	* previous ++		1466025						
ANR	1477982	Symbol	* scode		1466025						
ANR	1477983	Symbol	utf_chars		1466025						
ANR	1477984	Symbol	* ptr		1466025						
ANR	1477985	Symbol	OP_TYPEPOSPLUS		1466025						
ANR	1477986	Symbol	GET2		1466025						
ANR	1477987	Symbol	* escape		1466025						
ANR	1477988	Symbol	offset		1466025						
ANR	1477989	Symbol	OP_DNREF		1466025						
ANR	1477990	Symbol	newsize		1466025						
ANR	1477991	Symbol	greedy_non_default		1466025						
ANR	1477992	Symbol	OP_CALLOUT		1466025						
ANR	1477993	Symbol	OP_CRPOSPLUS		1466025						
ANR	1477994	Symbol	lengthptr		1466025						
ANR	1477995	Symbol	ERR6		1466025						
ANR	1477996	Symbol	ERR7		1466025						
ANR	1477997	Symbol	ERR8		1466025						
ANR	1477998	Symbol	ERR9		1466025						
ANR	1477999	Symbol	* namelen		1466025						
ANR	1478000	Symbol	OP_BRAPOSZERO		1466025						
ANR	1478001	Symbol	CHAR_Q		1466025						
ANR	1478002	Symbol	CHAR_R		1466025						
ANR	1478003	Symbol	* opcode_possessify		1466025						
ANR	1478004	Symbol	cd -> dupnames		1466025						
ANR	1478005	Symbol	add_to_class		1466025						
ANR	1478006	Symbol	* * cd		1466025						
ANR	1478007	Symbol	* ketcode		1466025						
ANR	1478008	Symbol	class_uchardata_base		1466025						
ANR	1478009	Symbol	IS_NEWLINE		1466025						
ANR	1478010	Symbol	cd -> start_pattern		1466025						
ANR	1478011	Symbol	after_manual_callout		1466025						
ANR	1478012	Symbol	OP_DEF		1466025						
ANR	1478013	Symbol	lastchar		1466025						
ANR	1478014	Symbol	base_hwm_offset		1466025						
ANR	1478015	Symbol	XCL_END		1466025						
ANR	1478016	Symbol	OP_ASSERT_ACCEPT		1466025						
ANR	1478017	Symbol	OP_KETRPOS		1466025						
ANR	1478018	Symbol	OP_ASSERT		1466025						
ANR	1478019	Symbol	previous_callout		1466025						
ANR	1478020	Symbol	CHAR_0		1466025						
ANR	1478021	Symbol	CHAR_C		1466025						
ANR	1478022	Symbol	OP_PROP		1466025						
ANR	1478023	Symbol	ESC_k		1466025						
ANR	1478024	Symbol	ESC_p		1466025						
ANR	1478025	Symbol	cd -> iscondassert		1466025						
ANR	1478026	Symbol	CHAR_E		1466025						
ANR	1478027	Symbol	CHAR_GREATER_THAN_SIGN		1466025						
ANR	1478028	Symbol	& repeat_min		1466025						
ANR	1478029	Function	compile_regex	8114:0:267342:277405							
ANR	1478030	FunctionDef	"compile_regex (int options , pcre_uchar * * codeptr , const pcre_uchar * * ptrptr , int * errorcodeptr , BOOL lookbehind , BOOL reset_bracount , int skipbytes , int cond_depth , pcre_uint32 * firstcharptr , pcre_int32 * firstcharflagsptr , pcre_uint32 * reqcharptr , pcre_int32 * reqcharflagsptr , branch_chain * bcptr , compile_data * cd , int * lengthptr)"		1478029	0					
ANR	1478031	CompoundStatement		8121:0:267695:277405	1478029	0					
ANR	1478032	IdentifierDeclStatement	const pcre_uchar * ptr = * ptrptr ;	8122:0:267697:267728	1478029	0	True				
ANR	1478033	IdentifierDecl	* ptr = * ptrptr		1478029	0					
ANR	1478034	IdentifierDeclType	const pcre_uchar *		1478029	0					
ANR	1478035	Identifier	ptr		1478029	1					
ANR	1478036	AssignmentExpression	* ptr = * ptrptr		1478029	2		=			
ANR	1478037	Identifier	ptr		1478029	0					
ANR	1478038	UnaryOperationExpression	* ptrptr		1478029	1					
ANR	1478039	UnaryOperator	*		1478029	0					
ANR	1478040	Identifier	ptrptr		1478029	1					
ANR	1478041	IdentifierDeclStatement	pcre_uchar * code = * codeptr ;	8123:0:267730:267757	1478029	1	True				
ANR	1478042	IdentifierDecl	* code = * codeptr		1478029	0					
ANR	1478043	IdentifierDeclType	pcre_uchar *		1478029	0					
ANR	1478044	Identifier	code		1478029	1					
ANR	1478045	AssignmentExpression	* code = * codeptr		1478029	2		=			
ANR	1478046	Identifier	code		1478029	0					
ANR	1478047	UnaryOperationExpression	* codeptr		1478029	1					
ANR	1478048	UnaryOperator	*		1478029	0					
ANR	1478049	Identifier	codeptr		1478029	1					
ANR	1478050	IdentifierDeclStatement	pcre_uchar * last_branch = code ;	8124:0:267759:267789	1478029	2	True				
ANR	1478051	IdentifierDecl	* last_branch = code		1478029	0					
ANR	1478052	IdentifierDeclType	pcre_uchar *		1478029	0					
ANR	1478053	Identifier	last_branch		1478029	1					
ANR	1478054	AssignmentExpression	* last_branch = code		1478029	2		=			
ANR	1478055	Identifier	code		1478029	0					
ANR	1478056	Identifier	code		1478029	1					
ANR	1478057	IdentifierDeclStatement	pcre_uchar * start_bracket = code ;	8125:0:267791:267823	1478029	3	True				
ANR	1478058	IdentifierDecl	* start_bracket = code		1478029	0					
ANR	1478059	IdentifierDeclType	pcre_uchar *		1478029	0					
ANR	1478060	Identifier	start_bracket		1478029	1					
ANR	1478061	AssignmentExpression	* start_bracket = code		1478029	2		=			
ANR	1478062	Identifier	code		1478029	0					
ANR	1478063	Identifier	code		1478029	1					
ANR	1478064	IdentifierDeclStatement	pcre_uchar * reverse_count = NULL ;	8126:0:267825:267857	1478029	4	True				
ANR	1478065	IdentifierDecl	* reverse_count = NULL		1478029	0					
ANR	1478066	IdentifierDeclType	pcre_uchar *		1478029	0					
ANR	1478067	Identifier	reverse_count		1478029	1					
ANR	1478068	AssignmentExpression	* reverse_count = NULL		1478029	2		=			
ANR	1478069	Identifier	NULL		1478029	0					
ANR	1478070	Identifier	NULL		1478029	1					
ANR	1478071	IdentifierDeclStatement	open_capitem capitem ;	8127:0:267859:267879	1478029	5	True				
ANR	1478072	IdentifierDecl	capitem		1478029	0					
ANR	1478073	IdentifierDeclType	open_capitem		1478029	0					
ANR	1478074	Identifier	capitem		1478029	1					
ANR	1478075	IdentifierDeclStatement	int capnumber = 0 ;	8128:0:267881:267898	1478029	6	True				
ANR	1478076	IdentifierDecl	capnumber = 0		1478029	0					
ANR	1478077	IdentifierDeclType	int		1478029	0					
ANR	1478078	Identifier	capnumber		1478029	1					
ANR	1478079	AssignmentExpression	capnumber = 0		1478029	2		=			
ANR	1478080	Identifier	capnumber		1478029	0					
ANR	1478081	PrimaryExpression	0		1478029	1					
ANR	1478082	IdentifierDeclStatement	"pcre_uint32 firstchar , reqchar ;"	8129:0:267900:267930	1478029	7	True				
ANR	1478083	IdentifierDecl	firstchar		1478029	0					
ANR	1478084	IdentifierDeclType	pcre_uint32		1478029	0					
ANR	1478085	Identifier	firstchar		1478029	1					
ANR	1478086	IdentifierDecl	reqchar		1478029	1					
ANR	1478087	IdentifierDeclType	pcre_uint32		1478029	0					
ANR	1478088	Identifier	reqchar		1478029	1					
ANR	1478089	IdentifierDeclStatement	"pcre_int32 firstcharflags , reqcharflags ;"	8130:0:267932:267971	1478029	8	True				
ANR	1478090	IdentifierDecl	firstcharflags		1478029	0					
ANR	1478091	IdentifierDeclType	pcre_int32		1478029	0					
ANR	1478092	Identifier	firstcharflags		1478029	1					
ANR	1478093	IdentifierDecl	reqcharflags		1478029	1					
ANR	1478094	IdentifierDeclType	pcre_int32		1478029	0					
ANR	1478095	Identifier	reqcharflags		1478029	1					
ANR	1478096	IdentifierDeclStatement	"pcre_uint32 branchfirstchar , branchreqchar ;"	8131:0:267973:268015	1478029	9	True				
ANR	1478097	IdentifierDecl	branchfirstchar		1478029	0					
ANR	1478098	IdentifierDeclType	pcre_uint32		1478029	0					
ANR	1478099	Identifier	branchfirstchar		1478029	1					
ANR	1478100	IdentifierDecl	branchreqchar		1478029	1					
ANR	1478101	IdentifierDeclType	pcre_uint32		1478029	0					
ANR	1478102	Identifier	branchreqchar		1478029	1					
ANR	1478103	IdentifierDeclStatement	"pcre_int32 branchfirstcharflags , branchreqcharflags ;"	8132:0:268017:268068	1478029	10	True				
ANR	1478104	IdentifierDecl	branchfirstcharflags		1478029	0					
ANR	1478105	IdentifierDeclType	pcre_int32		1478029	0					
ANR	1478106	Identifier	branchfirstcharflags		1478029	1					
ANR	1478107	IdentifierDecl	branchreqcharflags		1478029	1					
ANR	1478108	IdentifierDeclType	pcre_int32		1478029	0					
ANR	1478109	Identifier	branchreqcharflags		1478029	1					
ANR	1478110	IdentifierDeclStatement	int length ;	8133:0:268070:268080	1478029	11	True				
ANR	1478111	IdentifierDecl	length		1478029	0					
ANR	1478112	IdentifierDeclType	int		1478029	0					
ANR	1478113	Identifier	length		1478029	1					
ANR	1478114	IdentifierDeclStatement	unsigned int orig_bracount ;	8134:0:268082:268108	1478029	12	True				
ANR	1478115	IdentifierDecl	orig_bracount		1478029	0					
ANR	1478116	IdentifierDeclType	unsigned int		1478029	0					
ANR	1478117	Identifier	orig_bracount		1478029	1					
ANR	1478118	IdentifierDeclStatement	unsigned int max_bracount ;	8135:0:268110:268135	1478029	13	True				
ANR	1478119	IdentifierDecl	max_bracount		1478029	0					
ANR	1478120	IdentifierDeclType	unsigned int		1478029	0					
ANR	1478121	Identifier	max_bracount		1478029	1					
ANR	1478122	IdentifierDeclStatement	branch_chain bc ;	8136:0:268137:268152	1478029	14	True				
ANR	1478123	IdentifierDecl	bc		1478029	0					
ANR	1478124	IdentifierDeclType	branch_chain		1478029	0					
ANR	1478125	Identifier	bc		1478029	1					
ANR	1478126	IdentifierDeclStatement	size_t save_hwm_offset ;	8137:0:268154:268176	1478029	15	True				
ANR	1478127	IdentifierDecl	save_hwm_offset		1478029	0					
ANR	1478128	IdentifierDeclType	size_t		1478029	0					
ANR	1478129	Identifier	save_hwm_offset		1478029	1					
ANR	1478130	IfStatement	if ( PUBL ( stack_guard ) != NULL && PUBL ( stack_guard ) ( ) )		1478029	16					
ANR	1478131	Condition	PUBL ( stack_guard ) != NULL && PUBL ( stack_guard ) ( )	8141:4:268261:268308	1478029	0	True				
ANR	1478132	AndExpression	PUBL ( stack_guard ) != NULL && PUBL ( stack_guard ) ( )		1478029	0		&&			
ANR	1478133	EqualityExpression	PUBL ( stack_guard ) != NULL		1478029	0		!=			
ANR	1478134	CallExpression	PUBL ( stack_guard )		1478029	0					
ANR	1478135	Callee	PUBL		1478029	0					
ANR	1478136	Identifier	PUBL		1478029	0					
ANR	1478137	ArgumentList	stack_guard		1478029	1					
ANR	1478138	Argument	stack_guard		1478029	0					
ANR	1478139	Identifier	stack_guard		1478029	0					
ANR	1478140	Identifier	NULL		1478029	1					
ANR	1478141	CallExpression	PUBL ( stack_guard ) ( )		1478029	1					
ANR	1478142	Callee	PUBL ( stack_guard )		1478029	0					
ANR	1478143	CallExpression	PUBL ( stack_guard )		1478029	0					
ANR	1478144	Callee	PUBL		1478029	0					
ANR	1478145	Identifier	PUBL		1478029	0					
ANR	1478146	ArgumentList	stack_guard		1478029	1					
ANR	1478147	Argument	stack_guard		1478029	0					
ANR	1478148	Identifier	stack_guard		1478029	0					
ANR	1478149	ArgumentList			1478029	1					
ANR	1478150	CompoundStatement		22:2:617:617	1478029	1					
ANR	1478151	ExpressionStatement	* errorcodeptr = ERR85	8143:2:268317:268337	1478029	0	True				
ANR	1478152	AssignmentExpression	* errorcodeptr = ERR85		1478029	0		=			
ANR	1478153	UnaryOperationExpression	* errorcodeptr		1478029	0					
ANR	1478154	UnaryOperator	*		1478029	0					
ANR	1478155	Identifier	errorcodeptr		1478029	1					
ANR	1478156	Identifier	ERR85		1478029	1					
ANR	1478157	ReturnStatement	return FALSE ;	8144:2:268341:268353	1478029	1	True				
ANR	1478158	Identifier	FALSE		1478029	0					
ANR	1478159	ExpressionStatement	bc . outer = bcptr	8149:0:268396:268412	1478029	17	True				
ANR	1478160	AssignmentExpression	bc . outer = bcptr		1478029	0		=			
ANR	1478161	MemberAccess	bc . outer		1478029	0					
ANR	1478162	Identifier	bc		1478029	0					
ANR	1478163	Identifier	outer		1478029	1					
ANR	1478164	Identifier	bcptr		1478029	1					
ANR	1478165	ExpressionStatement	bc . current_branch = code	8150:0:268414:268438	1478029	18	True				
ANR	1478166	AssignmentExpression	bc . current_branch = code		1478029	0		=			
ANR	1478167	MemberAccess	bc . current_branch		1478029	0					
ANR	1478168	Identifier	bc		1478029	0					
ANR	1478169	Identifier	current_branch		1478029	1					
ANR	1478170	Identifier	code		1478029	1					
ANR	1478171	ExpressionStatement	firstchar = reqchar = 0	8152:0:268441:268464	1478029	19	True				
ANR	1478172	AssignmentExpression	firstchar = reqchar = 0		1478029	0		=			
ANR	1478173	Identifier	firstchar		1478029	0					
ANR	1478174	AssignmentExpression	reqchar = 0		1478029	1		=			
ANR	1478175	Identifier	reqchar		1478029	0					
ANR	1478176	PrimaryExpression	0		1478029	1					
ANR	1478177	ExpressionStatement	firstcharflags = reqcharflags = REQ_UNSET	8153:0:268466:268507	1478029	20	True				
ANR	1478178	AssignmentExpression	firstcharflags = reqcharflags = REQ_UNSET		1478029	0		=			
ANR	1478179	Identifier	firstcharflags		1478029	0					
ANR	1478180	AssignmentExpression	reqcharflags = REQ_UNSET		1478029	1		=			
ANR	1478181	Identifier	reqcharflags		1478029	0					
ANR	1478182	Identifier	REQ_UNSET		1478029	1					
ANR	1478183	ExpressionStatement	save_hwm_offset = cd -> hwm - cd -> start_workspace	8155:0:268510:268557	1478029	21	True				
ANR	1478184	AssignmentExpression	save_hwm_offset = cd -> hwm - cd -> start_workspace		1478029	0		=			
ANR	1478185	Identifier	save_hwm_offset		1478029	0					
ANR	1478186	AdditiveExpression	cd -> hwm - cd -> start_workspace		1478029	1		-			
ANR	1478187	PtrMemberAccess	cd -> hwm		1478029	0					
ANR	1478188	Identifier	cd		1478029	0					
ANR	1478189	Identifier	hwm		1478029	1					
ANR	1478190	PtrMemberAccess	cd -> start_workspace		1478029	1					
ANR	1478191	Identifier	cd		1478029	0					
ANR	1478192	Identifier	start_workspace		1478029	1					
ANR	1478193	ExpressionStatement	length = 2 + 2 * LINK_SIZE + skipbytes	8164:0:268999:269035	1478029	22	True				
ANR	1478194	AssignmentExpression	length = 2 + 2 * LINK_SIZE + skipbytes		1478029	0		=			
ANR	1478195	Identifier	length		1478029	0					
ANR	1478196	AdditiveExpression	2 + 2 * LINK_SIZE + skipbytes		1478029	1		+			
ANR	1478197	PrimaryExpression	2		1478029	0					
ANR	1478198	AdditiveExpression	2 * LINK_SIZE + skipbytes		1478029	1		+			
ANR	1478199	MultiplicativeExpression	2 * LINK_SIZE		1478029	0		*			
ANR	1478200	PrimaryExpression	2		1478029	0					
ANR	1478201	Identifier	LINK_SIZE		1478029	1					
ANR	1478202	Identifier	skipbytes		1478029	1					
ANR	1478203	IfStatement	if ( * code == OP_CBRA )		1478029	23					
ANR	1478204	Condition	* code == OP_CBRA	8177:4:269735:269750	1478029	0	True				
ANR	1478205	EqualityExpression	* code == OP_CBRA		1478029	0		==			
ANR	1478206	UnaryOperationExpression	* code		1478029	0					
ANR	1478207	UnaryOperator	*		1478029	0					
ANR	1478208	Identifier	code		1478029	1					
ANR	1478209	Identifier	OP_CBRA		1478029	1					
ANR	1478210	CompoundStatement		58:2:2059:2059	1478029	1					
ANR	1478211	ExpressionStatement	"capnumber = GET2 ( code , 1 + LINK_SIZE )"	8179:2:269759:269796	1478029	0	True				
ANR	1478212	AssignmentExpression	"capnumber = GET2 ( code , 1 + LINK_SIZE )"		1478029	0		=			
ANR	1478213	Identifier	capnumber		1478029	0					
ANR	1478214	CallExpression	"GET2 ( code , 1 + LINK_SIZE )"		1478029	1					
ANR	1478215	Callee	GET2		1478029	0					
ANR	1478216	Identifier	GET2		1478029	0					
ANR	1478217	ArgumentList	code		1478029	1					
ANR	1478218	Argument	code		1478029	0					
ANR	1478219	Identifier	code		1478029	0					
ANR	1478220	Argument	1 + LINK_SIZE		1478029	1					
ANR	1478221	AdditiveExpression	1 + LINK_SIZE		1478029	0		+			
ANR	1478222	PrimaryExpression	1		1478029	0					
ANR	1478223	Identifier	LINK_SIZE		1478029	1					
ANR	1478224	ExpressionStatement	capitem . number = capnumber	8180:2:269800:269826	1478029	1	True				
ANR	1478225	AssignmentExpression	capitem . number = capnumber		1478029	0		=			
ANR	1478226	MemberAccess	capitem . number		1478029	0					
ANR	1478227	Identifier	capitem		1478029	0					
ANR	1478228	Identifier	number		1478029	1					
ANR	1478229	Identifier	capnumber		1478029	1					
ANR	1478230	ExpressionStatement	capitem . next = cd -> open_caps	8181:2:269830:269858	1478029	2	True				
ANR	1478231	AssignmentExpression	capitem . next = cd -> open_caps		1478029	0		=			
ANR	1478232	MemberAccess	capitem . next		1478029	0					
ANR	1478233	Identifier	capitem		1478029	0					
ANR	1478234	Identifier	next		1478029	1					
ANR	1478235	PtrMemberAccess	cd -> open_caps		1478029	1					
ANR	1478236	Identifier	cd		1478029	0					
ANR	1478237	Identifier	open_caps		1478029	1					
ANR	1478238	ExpressionStatement	capitem . flag = FALSE	8182:2:269862:269882	1478029	3	True				
ANR	1478239	AssignmentExpression	capitem . flag = FALSE		1478029	0		=			
ANR	1478240	MemberAccess	capitem . flag		1478029	0					
ANR	1478241	Identifier	capitem		1478029	0					
ANR	1478242	Identifier	flag		1478029	1					
ANR	1478243	Identifier	FALSE		1478029	1					
ANR	1478244	ExpressionStatement	cd -> open_caps = & capitem	8183:2:269886:269910	1478029	4	True				
ANR	1478245	AssignmentExpression	cd -> open_caps = & capitem		1478029	0		=			
ANR	1478246	PtrMemberAccess	cd -> open_caps		1478029	0					
ANR	1478247	Identifier	cd		1478029	0					
ANR	1478248	Identifier	open_caps		1478029	1					
ANR	1478249	UnaryOperationExpression	& capitem		1478029	1					
ANR	1478250	UnaryOperator	&		1478029	0					
ANR	1478251	Identifier	capitem		1478029	1					
ANR	1478252	ExpressionStatement	"PUT ( code , 1 , 0 )"	8188:0:269983:269998	1478029	24	True				
ANR	1478253	CallExpression	"PUT ( code , 1 , 0 )"		1478029	0					
ANR	1478254	Callee	PUT		1478029	0					
ANR	1478255	Identifier	PUT		1478029	0					
ANR	1478256	ArgumentList	code		1478029	1					
ANR	1478257	Argument	code		1478029	0					
ANR	1478258	Identifier	code		1478029	0					
ANR	1478259	Argument	1		1478029	1					
ANR	1478260	PrimaryExpression	1		1478029	0					
ANR	1478261	Argument	0		1478029	2					
ANR	1478262	PrimaryExpression	0		1478029	0					
ANR	1478263	ExpressionStatement	code += 1 + LINK_SIZE + skipbytes	8189:0:270000:270033	1478029	25	True				
ANR	1478264	AssignmentExpression	code += 1 + LINK_SIZE + skipbytes		1478029	0		+=			
ANR	1478265	Identifier	code		1478029	0					
ANR	1478266	AdditiveExpression	1 + LINK_SIZE + skipbytes		1478029	1		+			
ANR	1478267	PrimaryExpression	1		1478029	0					
ANR	1478268	AdditiveExpression	LINK_SIZE + skipbytes		1478029	1		+			
ANR	1478269	Identifier	LINK_SIZE		1478029	0					
ANR	1478270	Identifier	skipbytes		1478029	1					
ANR	1478271	ExpressionStatement	orig_bracount = max_bracount = cd -> bracount	8193:0:270076:270119	1478029	26	True				
ANR	1478272	AssignmentExpression	orig_bracount = max_bracount = cd -> bracount		1478029	0		=			
ANR	1478273	Identifier	orig_bracount		1478029	0					
ANR	1478274	AssignmentExpression	max_bracount = cd -> bracount		1478029	1		=			
ANR	1478275	Identifier	max_bracount		1478029	0					
ANR	1478276	PtrMemberAccess	cd -> bracount		1478029	1					
ANR	1478277	Identifier	cd		1478029	0					
ANR	1478278	Identifier	bracount		1478029	1					
ANR	1478279	ForStatement	for ( ; ; )		1478029	27					
ANR	1478280	CompoundStatement		75:2:2436:2436	1478029	0					
ANR	1478281	IfStatement	if ( reset_bracount )		1478029	0					
ANR	1478282	Condition	reset_bracount	8199:6:270245:270258	1478029	0	True				
ANR	1478283	Identifier	reset_bracount		1478029	0					
ANR	1478284	ExpressionStatement	cd -> bracount = orig_bracount	8199:22:270261:270289	1478029	1	True				
ANR	1478285	AssignmentExpression	cd -> bracount = orig_bracount		1478029	0		=			
ANR	1478286	PtrMemberAccess	cd -> bracount		1478029	0					
ANR	1478287	Identifier	cd		1478029	0					
ANR	1478288	Identifier	bracount		1478029	1					
ANR	1478289	Identifier	orig_bracount		1478029	1					
ANR	1478290	IfStatement	if ( lookbehind )		1478029	1					
ANR	1478291	Condition	lookbehind	8203:6:270355:270364	1478029	0	True				
ANR	1478292	Identifier	lookbehind		1478029	0					
ANR	1478293	CompoundStatement		84:4:2675:2675	1478029	1					
ANR	1478294	ExpressionStatement	* code ++ = OP_REVERSE	8205:4:270377:270397	1478029	0	True				
ANR	1478295	AssignmentExpression	* code ++ = OP_REVERSE		1478029	0		=			
ANR	1478296	UnaryOperationExpression	* code ++		1478029	0					
ANR	1478297	UnaryOperator	*		1478029	0					
ANR	1478298	PostIncDecOperationExpression	code ++		1478029	1					
ANR	1478299	Identifier	code		1478029	0					
ANR	1478300	IncDec	++		1478029	1					
ANR	1478301	Identifier	OP_REVERSE		1478029	1					
ANR	1478302	ExpressionStatement	reverse_count = code	8206:4:270403:270423	1478029	1	True				
ANR	1478303	AssignmentExpression	reverse_count = code		1478029	0		=			
ANR	1478304	Identifier	reverse_count		1478029	0					
ANR	1478305	Identifier	code		1478029	1					
ANR	1478306	ExpressionStatement	"PUTINC ( code , 0 , 0 )"	8207:4:270429:270447	1478029	2	True				
ANR	1478307	CallExpression	"PUTINC ( code , 0 , 0 )"		1478029	0					
ANR	1478308	Callee	PUTINC		1478029	0					
ANR	1478309	Identifier	PUTINC		1478029	0					
ANR	1478310	ArgumentList	code		1478029	1					
ANR	1478311	Argument	code		1478029	0					
ANR	1478312	Identifier	code		1478029	0					
ANR	1478313	Argument	0		1478029	1					
ANR	1478314	PrimaryExpression	0		1478029	0					
ANR	1478315	Argument	0		1478029	2					
ANR	1478316	PrimaryExpression	0		1478029	0					
ANR	1478317	ExpressionStatement	length += 1 + LINK_SIZE	8208:4:270453:270476	1478029	3	True				
ANR	1478318	AssignmentExpression	length += 1 + LINK_SIZE		1478029	0		+=			
ANR	1478319	Identifier	length		1478029	0					
ANR	1478320	AdditiveExpression	1 + LINK_SIZE		1478029	1		+			
ANR	1478321	PrimaryExpression	1		1478029	0					
ANR	1478322	Identifier	LINK_SIZE		1478029	1					
ANR	1478323	IfStatement	"if ( ! compile_branch ( & options , & code , & ptr , errorcodeptr , & branchfirstchar , & branchfirstcharflags , & branchreqchar , & branchreqcharflags , & bc , cond_depth , cd , ( lengthptr == NULL ) ? NULL : & length ) )"		1478029	2					
ANR	1478324	Condition	"! compile_branch ( & options , & code , & ptr , errorcodeptr , & branchfirstchar , & branchfirstcharflags , & branchreqchar , & branchreqcharflags , & bc , cond_depth , cd , ( lengthptr == NULL ) ? NULL : & length )"	8214:6:270590:270793	1478029	0	True				
ANR	1478325	UnaryOperationExpression	"! compile_branch ( & options , & code , & ptr , errorcodeptr , & branchfirstchar , & branchfirstcharflags , & branchreqchar , & branchreqcharflags , & bc , cond_depth , cd , ( lengthptr == NULL ) ? NULL : & length )"		1478029	0					
ANR	1478326	UnaryOperator	!		1478029	0					
ANR	1478327	CallExpression	"compile_branch ( & options , & code , & ptr , errorcodeptr , & branchfirstchar , & branchfirstcharflags , & branchreqchar , & branchreqcharflags , & bc , cond_depth , cd , ( lengthptr == NULL ) ? NULL : & length )"		1478029	1					
ANR	1478328	Callee	compile_branch		1478029	0					
ANR	1478329	Identifier	compile_branch		1478029	0					
ANR	1478330	ArgumentList	& options		1478029	1					
ANR	1478331	Argument	& options		1478029	0					
ANR	1478332	UnaryOperationExpression	& options		1478029	0					
ANR	1478333	UnaryOperator	&		1478029	0					
ANR	1478334	Identifier	options		1478029	1					
ANR	1478335	Argument	& code		1478029	1					
ANR	1478336	UnaryOperationExpression	& code		1478029	0					
ANR	1478337	UnaryOperator	&		1478029	0					
ANR	1478338	Identifier	code		1478029	1					
ANR	1478339	Argument	& ptr		1478029	2					
ANR	1478340	UnaryOperationExpression	& ptr		1478029	0					
ANR	1478341	UnaryOperator	&		1478029	0					
ANR	1478342	Identifier	ptr		1478029	1					
ANR	1478343	Argument	errorcodeptr		1478029	3					
ANR	1478344	Identifier	errorcodeptr		1478029	0					
ANR	1478345	Argument	& branchfirstchar		1478029	4					
ANR	1478346	UnaryOperationExpression	& branchfirstchar		1478029	0					
ANR	1478347	UnaryOperator	&		1478029	0					
ANR	1478348	Identifier	branchfirstchar		1478029	1					
ANR	1478349	Argument	& branchfirstcharflags		1478029	5					
ANR	1478350	UnaryOperationExpression	& branchfirstcharflags		1478029	0					
ANR	1478351	UnaryOperator	&		1478029	0					
ANR	1478352	Identifier	branchfirstcharflags		1478029	1					
ANR	1478353	Argument	& branchreqchar		1478029	6					
ANR	1478354	UnaryOperationExpression	& branchreqchar		1478029	0					
ANR	1478355	UnaryOperator	&		1478029	0					
ANR	1478356	Identifier	branchreqchar		1478029	1					
ANR	1478357	Argument	& branchreqcharflags		1478029	7					
ANR	1478358	UnaryOperationExpression	& branchreqcharflags		1478029	0					
ANR	1478359	UnaryOperator	&		1478029	0					
ANR	1478360	Identifier	branchreqcharflags		1478029	1					
ANR	1478361	Argument	& bc		1478029	8					
ANR	1478362	UnaryOperationExpression	& bc		1478029	0					
ANR	1478363	UnaryOperator	&		1478029	0					
ANR	1478364	Identifier	bc		1478029	1					
ANR	1478365	Argument	cond_depth		1478029	9					
ANR	1478366	Identifier	cond_depth		1478029	0					
ANR	1478367	Argument	cd		1478029	10					
ANR	1478368	Identifier	cd		1478029	0					
ANR	1478369	Argument	( lengthptr == NULL ) ? NULL : & length		1478029	11					
ANR	1478370	ConditionalExpression	( lengthptr == NULL ) ? NULL : & length		1478029	0					
ANR	1478371	Condition	lengthptr == NULL		1478029	0					
ANR	1478372	EqualityExpression	lengthptr == NULL		1478029	0		==			
ANR	1478373	Identifier	lengthptr		1478029	0					
ANR	1478374	Identifier	NULL		1478029	1					
ANR	1478375	Identifier	NULL		1478029	1					
ANR	1478376	UnaryOperationExpression	& length		1478029	2					
ANR	1478377	UnaryOperator	&		1478029	0					
ANR	1478378	Identifier	length		1478029	1					
ANR	1478379	CompoundStatement		97:4:3104:3104	1478029	1					
ANR	1478380	ExpressionStatement	* ptrptr = ptr	8218:4:270806:270819	1478029	0	True				
ANR	1478381	AssignmentExpression	* ptrptr = ptr		1478029	0		=			
ANR	1478382	UnaryOperationExpression	* ptrptr		1478029	0					
ANR	1478383	UnaryOperator	*		1478029	0					
ANR	1478384	Identifier	ptrptr		1478029	1					
ANR	1478385	Identifier	ptr		1478029	1					
ANR	1478386	ReturnStatement	return FALSE ;	8219:4:270825:270837	1478029	1	True				
ANR	1478387	Identifier	FALSE		1478029	0					
ANR	1478388	IfStatement	if ( cd -> bracount > max_bracount )		1478029	3					
ANR	1478389	Condition	cd -> bracount > max_bracount	8225:6:270956:270982	1478029	0	True				
ANR	1478390	RelationalExpression	cd -> bracount > max_bracount		1478029	0		>			
ANR	1478391	PtrMemberAccess	cd -> bracount		1478029	0					
ANR	1478392	Identifier	cd		1478029	0					
ANR	1478393	Identifier	bracount		1478029	1					
ANR	1478394	Identifier	max_bracount		1478029	1					
ANR	1478395	ExpressionStatement	max_bracount = cd -> bracount	8225:35:270985:271012	1478029	1	True				
ANR	1478396	AssignmentExpression	max_bracount = cd -> bracount		1478029	0		=			
ANR	1478397	Identifier	max_bracount		1478029	0					
ANR	1478398	PtrMemberAccess	cd -> bracount		1478029	1					
ANR	1478399	Identifier	cd		1478029	0					
ANR	1478400	Identifier	bracount		1478029	1					
ANR	1478401	IfStatement	if ( lengthptr == NULL )		1478029	4					
ANR	1478402	Condition	lengthptr == NULL	8229:6:271099:271115	1478029	0	True				
ANR	1478403	EqualityExpression	lengthptr == NULL		1478029	0		==			
ANR	1478404	Identifier	lengthptr		1478029	0					
ANR	1478405	Identifier	NULL		1478029	1					
ANR	1478406	CompoundStatement		110:4:3426:3426	1478029	1					
ANR	1478407	IfStatement	if ( * last_branch != OP_ALT )		1478029	0					
ANR	1478408	Condition	* last_branch != OP_ALT	8234:8:271257:271278	1478029	0	True				
ANR	1478409	EqualityExpression	* last_branch != OP_ALT		1478029	0		!=			
ANR	1478410	UnaryOperationExpression	* last_branch		1478029	0					
ANR	1478411	UnaryOperator	*		1478029	0					
ANR	1478412	Identifier	last_branch		1478029	1					
ANR	1478413	Identifier	OP_ALT		1478029	1					
ANR	1478414	CompoundStatement		115:6:3591:3591	1478029	1					
ANR	1478415	ExpressionStatement	firstchar = branchfirstchar	8236:6:271295:271322	1478029	0	True				
ANR	1478416	AssignmentExpression	firstchar = branchfirstchar		1478029	0		=			
ANR	1478417	Identifier	firstchar		1478029	0					
ANR	1478418	Identifier	branchfirstchar		1478029	1					
ANR	1478419	ExpressionStatement	firstcharflags = branchfirstcharflags	8237:6:271330:271367	1478029	1	True				
ANR	1478420	AssignmentExpression	firstcharflags = branchfirstcharflags		1478029	0		=			
ANR	1478421	Identifier	firstcharflags		1478029	0					
ANR	1478422	Identifier	branchfirstcharflags		1478029	1					
ANR	1478423	ExpressionStatement	reqchar = branchreqchar	8238:6:271375:271398	1478029	2	True				
ANR	1478424	AssignmentExpression	reqchar = branchreqchar		1478029	0		=			
ANR	1478425	Identifier	reqchar		1478029	0					
ANR	1478426	Identifier	branchreqchar		1478029	1					
ANR	1478427	ExpressionStatement	reqcharflags = branchreqcharflags	8239:6:271406:271439	1478029	3	True				
ANR	1478428	AssignmentExpression	reqcharflags = branchreqcharflags		1478029	0		=			
ANR	1478429	Identifier	reqcharflags		1478029	0					
ANR	1478430	Identifier	branchreqcharflags		1478029	1					
ANR	1478431	ElseStatement	else		1478029	0					
ANR	1478432	CompoundStatement		128:6:4036:4036	1478029	0					
ANR	1478433	IfStatement	if ( firstcharflags >= 0 && ( firstcharflags != branchfirstcharflags || firstchar != branchfirstchar ) )		1478029	0					
ANR	1478434	Condition	firstcharflags >= 0 && ( firstcharflags != branchfirstcharflags || firstchar != branchfirstchar )	8253:10:271972:272076	1478029	0	True				
ANR	1478435	AndExpression	firstcharflags >= 0 && ( firstcharflags != branchfirstcharflags || firstchar != branchfirstchar )		1478029	0		&&			
ANR	1478436	RelationalExpression	firstcharflags >= 0		1478029	0		>=			
ANR	1478437	Identifier	firstcharflags		1478029	0					
ANR	1478438	PrimaryExpression	0		1478029	1					
ANR	1478439	OrExpression	firstcharflags != branchfirstcharflags || firstchar != branchfirstchar		1478029	1		||			
ANR	1478440	EqualityExpression	firstcharflags != branchfirstcharflags		1478029	0		!=			
ANR	1478441	Identifier	firstcharflags		1478029	0					
ANR	1478442	Identifier	branchfirstcharflags		1478029	1					
ANR	1478443	EqualityExpression	firstchar != branchfirstchar		1478029	1		!=			
ANR	1478444	Identifier	firstchar		1478029	0					
ANR	1478445	Identifier	branchfirstchar		1478029	1					
ANR	1478446	CompoundStatement		135:8:4391:4391	1478029	1					
ANR	1478447	IfStatement	if ( reqcharflags < 0 )		1478029	0					
ANR	1478448	Condition	reqcharflags < 0	8256:12:272101:272116	1478029	0	True				
ANR	1478449	RelationalExpression	reqcharflags < 0		1478029	0		<			
ANR	1478450	Identifier	reqcharflags		1478029	0					
ANR	1478451	PrimaryExpression	0		1478029	1					
ANR	1478452	CompoundStatement		137:10:4433:4433	1478029	1					
ANR	1478453	ExpressionStatement	reqchar = firstchar	8258:10:272141:272160	1478029	0	True				
ANR	1478454	AssignmentExpression	reqchar = firstchar		1478029	0		=			
ANR	1478455	Identifier	reqchar		1478029	0					
ANR	1478456	Identifier	firstchar		1478029	1					
ANR	1478457	ExpressionStatement	reqcharflags = firstcharflags	8259:10:272172:272201	1478029	1	True				
ANR	1478458	AssignmentExpression	reqcharflags = firstcharflags		1478029	0		=			
ANR	1478459	Identifier	reqcharflags		1478029	0					
ANR	1478460	Identifier	firstcharflags		1478029	1					
ANR	1478461	ExpressionStatement	firstcharflags = REQ_NONE	8261:8:272223:272248	1478029	1	True				
ANR	1478462	AssignmentExpression	firstcharflags = REQ_NONE		1478029	0		=			
ANR	1478463	Identifier	firstcharflags		1478029	0					
ANR	1478464	Identifier	REQ_NONE		1478029	1					
ANR	1478465	IfStatement	if ( firstcharflags < 0 && branchfirstcharflags >= 0 && branchreqcharflags < 0 )		1478029	1					
ANR	1478466	Condition	firstcharflags < 0 && branchfirstcharflags >= 0 && branchreqcharflags < 0	8267:10:272415:272487	1478029	0	True				
ANR	1478467	AndExpression	firstcharflags < 0 && branchfirstcharflags >= 0 && branchreqcharflags < 0		1478029	0		&&			
ANR	1478468	RelationalExpression	firstcharflags < 0		1478029	0		<			
ANR	1478469	Identifier	firstcharflags		1478029	0					
ANR	1478470	PrimaryExpression	0		1478029	1					
ANR	1478471	AndExpression	branchfirstcharflags >= 0 && branchreqcharflags < 0		1478029	1		&&			
ANR	1478472	RelationalExpression	branchfirstcharflags >= 0		1478029	0		>=			
ANR	1478473	Identifier	branchfirstcharflags		1478029	0					
ANR	1478474	PrimaryExpression	0		1478029	1					
ANR	1478475	RelationalExpression	branchreqcharflags < 0		1478029	1		<			
ANR	1478476	Identifier	branchreqcharflags		1478029	0					
ANR	1478477	PrimaryExpression	0		1478029	1					
ANR	1478478	CompoundStatement		148:8:4802:4802	1478029	1					
ANR	1478479	ExpressionStatement	branchreqchar = branchfirstchar	8269:8:272508:272539	1478029	0	True				
ANR	1478480	AssignmentExpression	branchreqchar = branchfirstchar		1478029	0		=			
ANR	1478481	Identifier	branchreqchar		1478029	0					
ANR	1478482	Identifier	branchfirstchar		1478029	1					
ANR	1478483	ExpressionStatement	branchreqcharflags = branchfirstcharflags	8270:8:272549:272590	1478029	1	True				
ANR	1478484	AssignmentExpression	branchreqcharflags = branchfirstcharflags		1478029	0		=			
ANR	1478485	Identifier	branchreqcharflags		1478029	0					
ANR	1478486	Identifier	branchfirstcharflags		1478029	1					
ANR	1478487	IfStatement	if ( ( ( reqcharflags & ~REQ_VARY ) != ( branchreqcharflags & ~REQ_VARY ) ) || reqchar != branchreqchar )		1478029	2					
ANR	1478488	Condition	( ( reqcharflags & ~REQ_VARY ) != ( branchreqcharflags & ~REQ_VARY ) ) || reqchar != branchreqchar	8275:10:272661:272762	1478029	0	True				
ANR	1478489	OrExpression	( ( reqcharflags & ~REQ_VARY ) != ( branchreqcharflags & ~REQ_VARY ) ) || reqchar != branchreqchar		1478029	0		||			
ANR	1478490	EqualityExpression	( reqcharflags & ~REQ_VARY ) != ( branchreqcharflags & ~REQ_VARY )		1478029	0		!=			
ANR	1478491	BitAndExpression	reqcharflags & ~REQ_VARY		1478029	0		&			
ANR	1478492	Identifier	reqcharflags		1478029	0					
ANR	1478493	Identifier	~REQ_VARY		1478029	1					
ANR	1478494	BitAndExpression	branchreqcharflags & ~REQ_VARY		1478029	1		&			
ANR	1478495	Identifier	branchreqcharflags		1478029	0					
ANR	1478496	Identifier	~REQ_VARY		1478029	1					
ANR	1478497	EqualityExpression	reqchar != branchreqchar		1478029	1		!=			
ANR	1478498	Identifier	reqchar		1478029	0					
ANR	1478499	Identifier	branchreqchar		1478029	1					
ANR	1478500	ExpressionStatement	reqcharflags = REQ_NONE	8277:8:272773:272796	1478029	1	True				
ANR	1478501	AssignmentExpression	reqcharflags = REQ_NONE		1478029	0		=			
ANR	1478502	Identifier	reqcharflags		1478029	0					
ANR	1478503	Identifier	REQ_NONE		1478029	1					
ANR	1478504	ElseStatement	else		1478029	0					
ANR	1478505	CompoundStatement		159:8:5121:5121	1478029	0					
ANR	1478506	ExpressionStatement	reqchar = branchreqchar	8280:8:272827:272850	1478029	0	True				
ANR	1478507	AssignmentExpression	reqchar = branchreqchar		1478029	0		=			
ANR	1478508	Identifier	reqchar		1478029	0					
ANR	1478509	Identifier	branchreqchar		1478029	1					
ANR	1478510	ExpressionStatement	reqcharflags |= branchreqcharflags	8281:8:272860:272894	1478029	1	True				
ANR	1478511	AssignmentExpression	reqcharflags |= branchreqcharflags		1478029	0		|=			
ANR	1478512	Identifier	reqcharflags		1478029	0					
ANR	1478513	Identifier	branchreqcharflags		1478029	1					
ANR	1478514	IfStatement	if ( lookbehind )		1478029	1					
ANR	1478515	Condition	lookbehind	8293:8:273448:273457	1478029	0	True				
ANR	1478516	Identifier	lookbehind		1478029	0					
ANR	1478517	CompoundStatement		175:6:5778:5794	1478029	1					
ANR	1478518	IdentifierDeclStatement	int fixed_length ;	8295:6:273474:273490	1478029	0	True				
ANR	1478519	IdentifierDecl	fixed_length		1478029	0					
ANR	1478520	IdentifierDeclType	int		1478029	0					
ANR	1478521	Identifier	fixed_length		1478029	1					
ANR	1478522	ExpressionStatement	* code = OP_END	8296:6:273498:273512	1478029	1	True				
ANR	1478523	AssignmentExpression	* code = OP_END		1478029	0		=			
ANR	1478524	UnaryOperationExpression	* code		1478029	0					
ANR	1478525	UnaryOperator	*		1478029	0					
ANR	1478526	Identifier	code		1478029	1					
ANR	1478527	Identifier	OP_END		1478029	1					
ANR	1478528	ExpressionStatement	"fixed_length = find_fixedlength ( last_branch , ( options & PCRE_UTF8 ) != 0 , FALSE , cd , NULL )"	8297:6:273520:273618	1478029	2	True				
ANR	1478529	AssignmentExpression	"fixed_length = find_fixedlength ( last_branch , ( options & PCRE_UTF8 ) != 0 , FALSE , cd , NULL )"		1478029	0		=			
ANR	1478530	Identifier	fixed_length		1478029	0					
ANR	1478531	CallExpression	"find_fixedlength ( last_branch , ( options & PCRE_UTF8 ) != 0 , FALSE , cd , NULL )"		1478029	1					
ANR	1478532	Callee	find_fixedlength		1478029	0					
ANR	1478533	Identifier	find_fixedlength		1478029	0					
ANR	1478534	ArgumentList	last_branch		1478029	1					
ANR	1478535	Argument	last_branch		1478029	0					
ANR	1478536	Identifier	last_branch		1478029	0					
ANR	1478537	Argument	( options & PCRE_UTF8 ) != 0		1478029	1					
ANR	1478538	EqualityExpression	( options & PCRE_UTF8 ) != 0		1478029	0		!=			
ANR	1478539	BitAndExpression	options & PCRE_UTF8		1478029	0		&			
ANR	1478540	Identifier	options		1478029	0					
ANR	1478541	Identifier	PCRE_UTF8		1478029	1					
ANR	1478542	PrimaryExpression	0		1478029	1					
ANR	1478543	Argument	FALSE		1478029	2					
ANR	1478544	Identifier	FALSE		1478029	0					
ANR	1478545	Argument	cd		1478029	3					
ANR	1478546	Identifier	cd		1478029	0					
ANR	1478547	Argument	NULL		1478029	4					
ANR	1478548	Identifier	NULL		1478029	0					
ANR	1478549	ExpressionStatement	"DPRINTF ( ( ""fixed length = %d\\n"" , fixed_length ) )"	8299:6:273626:273672	1478029	3	True				
ANR	1478550	CallExpression	"DPRINTF ( ( ""fixed length = %d\\n"" , fixed_length ) )"		1478029	0					
ANR	1478551	Callee	DPRINTF		1478029	0					
ANR	1478552	Identifier	DPRINTF		1478029	0					
ANR	1478553	ArgumentList	"""fixed length = %d\\n"" , fixed_length"		1478029	1					
ANR	1478554	Argument	"""fixed length = %d\\n"" , fixed_length"		1478029	0					
ANR	1478555	Expression	"""fixed length = %d\\n"" , fixed_length"		1478029	0					
ANR	1478556	PrimaryExpression	"""fixed length = %d\\n"""		1478029	0					
ANR	1478557	Identifier	fixed_length		1478029	1					
ANR	1478558	IfStatement	if ( fixed_length == - 3 )		1478029	4					
ANR	1478559	Condition	fixed_length == - 3	8300:10:273684:273701	1478029	0	True				
ANR	1478560	EqualityExpression	fixed_length == - 3		1478029	0		==			
ANR	1478561	Identifier	fixed_length		1478029	0					
ANR	1478562	UnaryOperationExpression	- 3		1478029	1					
ANR	1478563	UnaryOperator	-		1478029	0					
ANR	1478564	PrimaryExpression	3		1478029	1					
ANR	1478565	CompoundStatement		181:8:6016:6016	1478029	1					
ANR	1478566	ExpressionStatement	cd -> check_lookbehind = TRUE	8302:8:273722:273749	1478029	0	True				
ANR	1478567	AssignmentExpression	cd -> check_lookbehind = TRUE		1478029	0		=			
ANR	1478568	PtrMemberAccess	cd -> check_lookbehind		1478029	0					
ANR	1478569	Identifier	cd		1478029	0					
ANR	1478570	Identifier	check_lookbehind		1478029	1					
ANR	1478571	Identifier	TRUE		1478029	1					
ANR	1478572	ElseStatement	else		1478029	0					
ANR	1478573	IfStatement	if ( fixed_length < 0 )		1478029	0					
ANR	1478574	Condition	fixed_length < 0	8304:15:273776:273791	1478029	0	True				
ANR	1478575	RelationalExpression	fixed_length < 0		1478029	0		<			
ANR	1478576	Identifier	fixed_length		1478029	0					
ANR	1478577	PrimaryExpression	0		1478029	1					
ANR	1478578	CompoundStatement		185:8:6106:6106	1478029	1					
ANR	1478579	ExpressionStatement	* errorcodeptr = ( fixed_length == - 2 ) ? ERR36 : ( fixed_length == - 4 ) ? ERR70 : ERR25	8306:8:273812:273916	1478029	0	True				
ANR	1478580	AssignmentExpression	* errorcodeptr = ( fixed_length == - 2 ) ? ERR36 : ( fixed_length == - 4 ) ? ERR70 : ERR25		1478029	0		=			
ANR	1478581	UnaryOperationExpression	* errorcodeptr		1478029	0					
ANR	1478582	UnaryOperator	*		1478029	0					
ANR	1478583	Identifier	errorcodeptr		1478029	1					
ANR	1478584	ConditionalExpression	( fixed_length == - 2 ) ? ERR36 : ( fixed_length == - 4 ) ? ERR70 : ERR25		1478029	1					
ANR	1478585	Condition	fixed_length == - 2		1478029	0					
ANR	1478586	EqualityExpression	fixed_length == - 2		1478029	0		==			
ANR	1478587	Identifier	fixed_length		1478029	0					
ANR	1478588	UnaryOperationExpression	- 2		1478029	1					
ANR	1478589	UnaryOperator	-		1478029	0					
ANR	1478590	PrimaryExpression	2		1478029	1					
ANR	1478591	Identifier	ERR36		1478029	1					
ANR	1478592	ConditionalExpression	( fixed_length == - 4 ) ? ERR70 : ERR25		1478029	2					
ANR	1478593	Condition	fixed_length == - 4		1478029	0					
ANR	1478594	EqualityExpression	fixed_length == - 4		1478029	0		==			
ANR	1478595	Identifier	fixed_length		1478029	0					
ANR	1478596	UnaryOperationExpression	- 4		1478029	1					
ANR	1478597	UnaryOperator	-		1478029	0					
ANR	1478598	PrimaryExpression	4		1478029	1					
ANR	1478599	Identifier	ERR70		1478029	1					
ANR	1478600	Identifier	ERR25		1478029	2					
ANR	1478601	ExpressionStatement	* ptrptr = ptr	8308:8:273926:273939	1478029	1	True				
ANR	1478602	AssignmentExpression	* ptrptr = ptr		1478029	0		=			
ANR	1478603	UnaryOperationExpression	* ptrptr		1478029	0					
ANR	1478604	UnaryOperator	*		1478029	0					
ANR	1478605	Identifier	ptrptr		1478029	1					
ANR	1478606	Identifier	ptr		1478029	1					
ANR	1478607	ReturnStatement	return FALSE ;	8309:8:273949:273961	1478029	2	True				
ANR	1478608	Identifier	FALSE		1478029	0					
ANR	1478609	ElseStatement	else		1478029	0					
ANR	1478610	CompoundStatement		192:8:6296:6296	1478029	0					
ANR	1478611	IfStatement	if ( fixed_length > cd -> max_lookbehind )		1478029	0					
ANR	1478612	Condition	fixed_length > cd -> max_lookbehind	8313:12:274006:274038	1478029	0	True				
ANR	1478613	RelationalExpression	fixed_length > cd -> max_lookbehind		1478029	0		>			
ANR	1478614	Identifier	fixed_length		1478029	0					
ANR	1478615	PtrMemberAccess	cd -> max_lookbehind		1478029	1					
ANR	1478616	Identifier	cd		1478029	0					
ANR	1478617	Identifier	max_lookbehind		1478029	1					
ANR	1478618	ExpressionStatement	cd -> max_lookbehind = fixed_length	8314:10:274051:274084	1478029	1	True				
ANR	1478619	AssignmentExpression	cd -> max_lookbehind = fixed_length		1478029	0		=			
ANR	1478620	PtrMemberAccess	cd -> max_lookbehind		1478029	0					
ANR	1478621	Identifier	cd		1478029	0					
ANR	1478622	Identifier	max_lookbehind		1478029	1					
ANR	1478623	Identifier	fixed_length		1478029	1					
ANR	1478624	ExpressionStatement	"PUT ( reverse_count , 0 , fixed_length )"	8315:8:274094:274129	1478029	1	True				
ANR	1478625	CallExpression	"PUT ( reverse_count , 0 , fixed_length )"		1478029	0					
ANR	1478626	Callee	PUT		1478029	0					
ANR	1478627	Identifier	PUT		1478029	0					
ANR	1478628	ArgumentList	reverse_count		1478029	1					
ANR	1478629	Argument	reverse_count		1478029	0					
ANR	1478630	Identifier	reverse_count		1478029	0					
ANR	1478631	Argument	0		1478029	1					
ANR	1478632	PrimaryExpression	0		1478029	0					
ANR	1478633	Argument	fixed_length		1478029	2					
ANR	1478634	Identifier	fixed_length		1478029	0					
ANR	1478635	IfStatement	if ( * ptr != CHAR_VERTICAL_LINE )		1478029	5					
ANR	1478636	Condition	* ptr != CHAR_VERTICAL_LINE	8327:6:274621:274646	1478029	0	True				
ANR	1478637	EqualityExpression	* ptr != CHAR_VERTICAL_LINE		1478029	0		!=			
ANR	1478638	UnaryOperationExpression	* ptr		1478029	0					
ANR	1478639	UnaryOperator	*		1478029	0					
ANR	1478640	Identifier	ptr		1478029	1					
ANR	1478641	Identifier	CHAR_VERTICAL_LINE		1478029	1					
ANR	1478642	CompoundStatement		208:4:6957:6957	1478029	1					
ANR	1478643	IfStatement	if ( lengthptr == NULL )		1478029	0					
ANR	1478644	Condition	lengthptr == NULL	8329:8:274663:274679	1478029	0	True				
ANR	1478645	EqualityExpression	lengthptr == NULL		1478029	0		==			
ANR	1478646	Identifier	lengthptr		1478029	0					
ANR	1478647	Identifier	NULL		1478029	1					
ANR	1478648	CompoundStatement		211:6:7000:7045	1478029	1					
ANR	1478649	IdentifierDeclStatement	int branch_length = ( int ) ( code - last_branch ) ;	8331:6:274696:274741	1478029	0	True				
ANR	1478650	IdentifierDecl	branch_length = ( int ) ( code - last_branch )		1478029	0					
ANR	1478651	IdentifierDeclType	int		1478029	0					
ANR	1478652	Identifier	branch_length		1478029	1					
ANR	1478653	AssignmentExpression	branch_length = ( int ) ( code - last_branch )		1478029	2		=			
ANR	1478654	Identifier	branch_length		1478029	0					
ANR	1478655	CastExpression	( int ) ( code - last_branch )		1478029	1					
ANR	1478656	CastTarget	int		1478029	0					
ANR	1478657	AdditiveExpression	code - last_branch		1478029	1		-			
ANR	1478658	Identifier	code		1478029	0					
ANR	1478659	Identifier	last_branch		1478029	1					
ANR	1478660	DoStatement	do		1478029	1					
ANR	1478661	CompoundStatement		214:8:7074:7111	1478029	0					
ANR	1478662	IdentifierDeclStatement	"int prev_length = GET ( last_branch , 1 ) ;"	8334:8:274770:274807	1478029	0	True				
ANR	1478663	IdentifierDecl	"prev_length = GET ( last_branch , 1 )"		1478029	0					
ANR	1478664	IdentifierDeclType	int		1478029	0					
ANR	1478665	Identifier	prev_length		1478029	1					
ANR	1478666	AssignmentExpression	"prev_length = GET ( last_branch , 1 )"		1478029	2		=			
ANR	1478667	Identifier	prev_length		1478029	0					
ANR	1478668	CallExpression	"GET ( last_branch , 1 )"		1478029	1					
ANR	1478669	Callee	GET		1478029	0					
ANR	1478670	Identifier	GET		1478029	0					
ANR	1478671	ArgumentList	last_branch		1478029	1					
ANR	1478672	Argument	last_branch		1478029	0					
ANR	1478673	Identifier	last_branch		1478029	0					
ANR	1478674	Argument	1		1478029	1					
ANR	1478675	PrimaryExpression	1		1478029	0					
ANR	1478676	ExpressionStatement	"PUT ( last_branch , 1 , branch_length )"	8335:8:274817:274851	1478029	1	True				
ANR	1478677	CallExpression	"PUT ( last_branch , 1 , branch_length )"		1478029	0					
ANR	1478678	Callee	PUT		1478029	0					
ANR	1478679	Identifier	PUT		1478029	0					
ANR	1478680	ArgumentList	last_branch		1478029	1					
ANR	1478681	Argument	last_branch		1478029	0					
ANR	1478682	Identifier	last_branch		1478029	0					
ANR	1478683	Argument	1		1478029	1					
ANR	1478684	PrimaryExpression	1		1478029	0					
ANR	1478685	Argument	branch_length		1478029	2					
ANR	1478686	Identifier	branch_length		1478029	0					
ANR	1478687	ExpressionStatement	branch_length = prev_length	8336:8:274861:274888	1478029	2	True				
ANR	1478688	AssignmentExpression	branch_length = prev_length		1478029	0		=			
ANR	1478689	Identifier	branch_length		1478029	0					
ANR	1478690	Identifier	prev_length		1478029	1					
ANR	1478691	ExpressionStatement	last_branch -= branch_length	8337:8:274898:274926	1478029	3	True				
ANR	1478692	AssignmentExpression	last_branch -= branch_length		1478029	0		-=			
ANR	1478693	Identifier	last_branch		1478029	0					
ANR	1478694	Identifier	branch_length		1478029	1					
ANR	1478695	Condition	branch_length > 0	8339:13:274951:274967	1478029	1	True				
ANR	1478696	RelationalExpression	branch_length > 0		1478029	0		>			
ANR	1478697	Identifier	branch_length		1478029	0					
ANR	1478698	PrimaryExpression	0		1478029	1					
ANR	1478699	ExpressionStatement	* code = OP_KET	8344:4:275011:275025	1478029	1	True				
ANR	1478700	AssignmentExpression	* code = OP_KET		1478029	0		=			
ANR	1478701	UnaryOperationExpression	* code		1478029	0					
ANR	1478702	UnaryOperator	*		1478029	0					
ANR	1478703	Identifier	code		1478029	1					
ANR	1478704	Identifier	OP_KET		1478029	1					
ANR	1478705	ExpressionStatement	"PUT ( code , 1 , ( int ) ( code - start_bracket ) )"	8345:4:275031:275072	1478029	2	True				
ANR	1478706	CallExpression	"PUT ( code , 1 , ( int ) ( code - start_bracket ) )"		1478029	0					
ANR	1478707	Callee	PUT		1478029	0					
ANR	1478708	Identifier	PUT		1478029	0					
ANR	1478709	ArgumentList	code		1478029	1					
ANR	1478710	Argument	code		1478029	0					
ANR	1478711	Identifier	code		1478029	0					
ANR	1478712	Argument	1		1478029	1					
ANR	1478713	PrimaryExpression	1		1478029	0					
ANR	1478714	Argument	( int ) ( code - start_bracket )		1478029	2					
ANR	1478715	CastExpression	( int ) ( code - start_bracket )		1478029	0					
ANR	1478716	CastTarget	int		1478029	0					
ANR	1478717	AdditiveExpression	code - start_bracket		1478029	1		-			
ANR	1478718	Identifier	code		1478029	0					
ANR	1478719	Identifier	start_bracket		1478029	1					
ANR	1478720	ExpressionStatement	code += 1 + LINK_SIZE	8346:4:275078:275099	1478029	3	True				
ANR	1478721	AssignmentExpression	code += 1 + LINK_SIZE		1478029	0		+=			
ANR	1478722	Identifier	code		1478029	0					
ANR	1478723	AdditiveExpression	1 + LINK_SIZE		1478029	1		+			
ANR	1478724	PrimaryExpression	1		1478029	0					
ANR	1478725	Identifier	LINK_SIZE		1478029	1					
ANR	1478726	IfStatement	if ( capnumber > 0 )		1478029	4					
ANR	1478727	Condition	capnumber > 0	8353:8:275417:275429	1478029	0	True				
ANR	1478728	RelationalExpression	capnumber > 0		1478029	0		>			
ANR	1478729	Identifier	capnumber		1478029	0					
ANR	1478730	PrimaryExpression	0		1478029	1					
ANR	1478731	CompoundStatement		234:6:7742:7742	1478029	1					
ANR	1478732	IfStatement	if ( cd -> open_caps -> flag )		1478029	0					
ANR	1478733	Condition	cd -> open_caps -> flag	8355:10:275450:275468	1478029	0	True				
ANR	1478734	PtrMemberAccess	cd -> open_caps -> flag		1478029	0					
ANR	1478735	PtrMemberAccess	cd -> open_caps		1478029	0					
ANR	1478736	Identifier	cd		1478029	0					
ANR	1478737	Identifier	open_caps		1478029	1					
ANR	1478738	Identifier	flag		1478029	1					
ANR	1478739	CompoundStatement		236:8:7783:7783	1478029	1					
ANR	1478740	ExpressionStatement	* code = OP_END	8357:8:275489:275503	1478029	0	True				
ANR	1478741	AssignmentExpression	* code = OP_END		1478029	0		=			
ANR	1478742	UnaryOperationExpression	* code		1478029	0					
ANR	1478743	UnaryOperator	*		1478029	0					
ANR	1478744	Identifier	code		1478029	1					
ANR	1478745	Identifier	OP_END		1478029	1					
ANR	1478746	ExpressionStatement	"adjust_recurse ( start_bracket , 1 + LINK_SIZE , ( options & PCRE_UTF8 ) != 0 , cd , save_hwm_offset )"	8358:8:275513:275616	1478029	1	True				
ANR	1478747	CallExpression	"adjust_recurse ( start_bracket , 1 + LINK_SIZE , ( options & PCRE_UTF8 ) != 0 , cd , save_hwm_offset )"		1478029	0					
ANR	1478748	Callee	adjust_recurse		1478029	0					
ANR	1478749	Identifier	adjust_recurse		1478029	0					
ANR	1478750	ArgumentList	start_bracket		1478029	1					
ANR	1478751	Argument	start_bracket		1478029	0					
ANR	1478752	Identifier	start_bracket		1478029	0					
ANR	1478753	Argument	1 + LINK_SIZE		1478029	1					
ANR	1478754	AdditiveExpression	1 + LINK_SIZE		1478029	0		+			
ANR	1478755	PrimaryExpression	1		1478029	0					
ANR	1478756	Identifier	LINK_SIZE		1478029	1					
ANR	1478757	Argument	( options & PCRE_UTF8 ) != 0		1478029	2					
ANR	1478758	EqualityExpression	( options & PCRE_UTF8 ) != 0		1478029	0		!=			
ANR	1478759	BitAndExpression	options & PCRE_UTF8		1478029	0		&			
ANR	1478760	Identifier	options		1478029	0					
ANR	1478761	Identifier	PCRE_UTF8		1478029	1					
ANR	1478762	PrimaryExpression	0		1478029	1					
ANR	1478763	Argument	cd		1478029	3					
ANR	1478764	Identifier	cd		1478029	0					
ANR	1478765	Argument	save_hwm_offset		1478029	4					
ANR	1478766	Identifier	save_hwm_offset		1478029	0					
ANR	1478767	ExpressionStatement	"memmove ( start_bracket + 1 + LINK_SIZE , start_bracket , IN_UCHARS ( code - start_bracket ) )"	8360:8:275626:275722	1478029	2	True				
ANR	1478768	CallExpression	"memmove ( start_bracket + 1 + LINK_SIZE , start_bracket , IN_UCHARS ( code - start_bracket ) )"		1478029	0					
ANR	1478769	Callee	memmove		1478029	0					
ANR	1478770	Identifier	memmove		1478029	0					
ANR	1478771	ArgumentList	start_bracket + 1 + LINK_SIZE		1478029	1					
ANR	1478772	Argument	start_bracket + 1 + LINK_SIZE		1478029	0					
ANR	1478773	AdditiveExpression	start_bracket + 1 + LINK_SIZE		1478029	0		+			
ANR	1478774	Identifier	start_bracket		1478029	0					
ANR	1478775	AdditiveExpression	1 + LINK_SIZE		1478029	1		+			
ANR	1478776	PrimaryExpression	1		1478029	0					
ANR	1478777	Identifier	LINK_SIZE		1478029	1					
ANR	1478778	Argument	start_bracket		1478029	1					
ANR	1478779	Identifier	start_bracket		1478029	0					
ANR	1478780	Argument	IN_UCHARS ( code - start_bracket )		1478029	2					
ANR	1478781	CallExpression	IN_UCHARS ( code - start_bracket )		1478029	0					
ANR	1478782	Callee	IN_UCHARS		1478029	0					
ANR	1478783	Identifier	IN_UCHARS		1478029	0					
ANR	1478784	ArgumentList	code - start_bracket		1478029	1					
ANR	1478785	Argument	code - start_bracket		1478029	0					
ANR	1478786	AdditiveExpression	code - start_bracket		1478029	0		-			
ANR	1478787	Identifier	code		1478029	0					
ANR	1478788	Identifier	start_bracket		1478029	1					
ANR	1478789	ExpressionStatement	* start_bracket = OP_ONCE	8362:8:275732:275756	1478029	3	True				
ANR	1478790	AssignmentExpression	* start_bracket = OP_ONCE		1478029	0		=			
ANR	1478791	UnaryOperationExpression	* start_bracket		1478029	0					
ANR	1478792	UnaryOperator	*		1478029	0					
ANR	1478793	Identifier	start_bracket		1478029	1					
ANR	1478794	Identifier	OP_ONCE		1478029	1					
ANR	1478795	ExpressionStatement	code += 1 + LINK_SIZE	8363:8:275766:275787	1478029	4	True				
ANR	1478796	AssignmentExpression	code += 1 + LINK_SIZE		1478029	0		+=			
ANR	1478797	Identifier	code		1478029	0					
ANR	1478798	AdditiveExpression	1 + LINK_SIZE		1478029	1		+			
ANR	1478799	PrimaryExpression	1		1478029	0					
ANR	1478800	Identifier	LINK_SIZE		1478029	1					
ANR	1478801	ExpressionStatement	"PUT ( start_bracket , 1 , ( int ) ( code - start_bracket ) )"	8364:8:275797:275847	1478029	5	True				
ANR	1478802	CallExpression	"PUT ( start_bracket , 1 , ( int ) ( code - start_bracket ) )"		1478029	0					
ANR	1478803	Callee	PUT		1478029	0					
ANR	1478804	Identifier	PUT		1478029	0					
ANR	1478805	ArgumentList	start_bracket		1478029	1					
ANR	1478806	Argument	start_bracket		1478029	0					
ANR	1478807	Identifier	start_bracket		1478029	0					
ANR	1478808	Argument	1		1478029	1					
ANR	1478809	PrimaryExpression	1		1478029	0					
ANR	1478810	Argument	( int ) ( code - start_bracket )		1478029	2					
ANR	1478811	CastExpression	( int ) ( code - start_bracket )		1478029	0					
ANR	1478812	CastTarget	int		1478029	0					
ANR	1478813	AdditiveExpression	code - start_bracket		1478029	1		-			
ANR	1478814	Identifier	code		1478029	0					
ANR	1478815	Identifier	start_bracket		1478029	1					
ANR	1478816	ExpressionStatement	* code = OP_KET	8365:8:275857:275871	1478029	6	True				
ANR	1478817	AssignmentExpression	* code = OP_KET		1478029	0		=			
ANR	1478818	UnaryOperationExpression	* code		1478029	0					
ANR	1478819	UnaryOperator	*		1478029	0					
ANR	1478820	Identifier	code		1478029	1					
ANR	1478821	Identifier	OP_KET		1478029	1					
ANR	1478822	ExpressionStatement	"PUT ( code , 1 , ( int ) ( code - start_bracket ) )"	8366:8:275881:275922	1478029	7	True				
ANR	1478823	CallExpression	"PUT ( code , 1 , ( int ) ( code - start_bracket ) )"		1478029	0					
ANR	1478824	Callee	PUT		1478029	0					
ANR	1478825	Identifier	PUT		1478029	0					
ANR	1478826	ArgumentList	code		1478029	1					
ANR	1478827	Argument	code		1478029	0					
ANR	1478828	Identifier	code		1478029	0					
ANR	1478829	Argument	1		1478029	1					
ANR	1478830	PrimaryExpression	1		1478029	0					
ANR	1478831	Argument	( int ) ( code - start_bracket )		1478029	2					
ANR	1478832	CastExpression	( int ) ( code - start_bracket )		1478029	0					
ANR	1478833	CastTarget	int		1478029	0					
ANR	1478834	AdditiveExpression	code - start_bracket		1478029	1		-			
ANR	1478835	Identifier	code		1478029	0					
ANR	1478836	Identifier	start_bracket		1478029	1					
ANR	1478837	ExpressionStatement	code += 1 + LINK_SIZE	8367:8:275932:275953	1478029	8	True				
ANR	1478838	AssignmentExpression	code += 1 + LINK_SIZE		1478029	0		+=			
ANR	1478839	Identifier	code		1478029	0					
ANR	1478840	AdditiveExpression	1 + LINK_SIZE		1478029	1		+			
ANR	1478841	PrimaryExpression	1		1478029	0					
ANR	1478842	Identifier	LINK_SIZE		1478029	1					
ANR	1478843	ExpressionStatement	length += 2 + 2 * LINK_SIZE	8368:8:275963:275988	1478029	9	True				
ANR	1478844	AssignmentExpression	length += 2 + 2 * LINK_SIZE		1478029	0		+=			
ANR	1478845	Identifier	length		1478029	0					
ANR	1478846	AdditiveExpression	2 + 2 * LINK_SIZE		1478029	1		+			
ANR	1478847	PrimaryExpression	2		1478029	0					
ANR	1478848	MultiplicativeExpression	2 * LINK_SIZE		1478029	1		*			
ANR	1478849	PrimaryExpression	2		1478029	0					
ANR	1478850	Identifier	LINK_SIZE		1478029	1					
ANR	1478851	ExpressionStatement	cd -> open_caps = cd -> open_caps -> next	8370:6:276006:276041	1478029	1	True				
ANR	1478852	AssignmentExpression	cd -> open_caps = cd -> open_caps -> next		1478029	0		=			
ANR	1478853	PtrMemberAccess	cd -> open_caps		1478029	0					
ANR	1478854	Identifier	cd		1478029	0					
ANR	1478855	Identifier	open_caps		1478029	1					
ANR	1478856	PtrMemberAccess	cd -> open_caps -> next		1478029	1					
ANR	1478857	PtrMemberAccess	cd -> open_caps		1478029	0					
ANR	1478858	Identifier	cd		1478029	0					
ANR	1478859	Identifier	open_caps		1478029	1					
ANR	1478860	Identifier	next		1478029	1					
ANR	1478861	ExpressionStatement	cd -> bracount = max_bracount	8375:4:276130:276157	1478029	5	True				
ANR	1478862	AssignmentExpression	cd -> bracount = max_bracount		1478029	0		=			
ANR	1478863	PtrMemberAccess	cd -> bracount		1478029	0					
ANR	1478864	Identifier	cd		1478029	0					
ANR	1478865	Identifier	bracount		1478029	1					
ANR	1478866	Identifier	max_bracount		1478029	1					
ANR	1478867	ExpressionStatement	* codeptr = code	8379:4:276199:276214	1478029	6	True				
ANR	1478868	AssignmentExpression	* codeptr = code		1478029	0		=			
ANR	1478869	UnaryOperationExpression	* codeptr		1478029	0					
ANR	1478870	UnaryOperator	*		1478029	0					
ANR	1478871	Identifier	codeptr		1478029	1					
ANR	1478872	Identifier	code		1478029	1					
ANR	1478873	ExpressionStatement	* ptrptr = ptr	8380:4:276220:276233	1478029	7	True				
ANR	1478874	AssignmentExpression	* ptrptr = ptr		1478029	0		=			
ANR	1478875	UnaryOperationExpression	* ptrptr		1478029	0					
ANR	1478876	UnaryOperator	*		1478029	0					
ANR	1478877	Identifier	ptrptr		1478029	1					
ANR	1478878	Identifier	ptr		1478029	1					
ANR	1478879	ExpressionStatement	* firstcharptr = firstchar	8381:4:276239:276264	1478029	8	True				
ANR	1478880	AssignmentExpression	* firstcharptr = firstchar		1478029	0		=			
ANR	1478881	UnaryOperationExpression	* firstcharptr		1478029	0					
ANR	1478882	UnaryOperator	*		1478029	0					
ANR	1478883	Identifier	firstcharptr		1478029	1					
ANR	1478884	Identifier	firstchar		1478029	1					
ANR	1478885	ExpressionStatement	* firstcharflagsptr = firstcharflags	8382:4:276270:276305	1478029	9	True				
ANR	1478886	AssignmentExpression	* firstcharflagsptr = firstcharflags		1478029	0		=			
ANR	1478887	UnaryOperationExpression	* firstcharflagsptr		1478029	0					
ANR	1478888	UnaryOperator	*		1478029	0					
ANR	1478889	Identifier	firstcharflagsptr		1478029	1					
ANR	1478890	Identifier	firstcharflags		1478029	1					
ANR	1478891	ExpressionStatement	* reqcharptr = reqchar	8383:4:276311:276332	1478029	10	True				
ANR	1478892	AssignmentExpression	* reqcharptr = reqchar		1478029	0		=			
ANR	1478893	UnaryOperationExpression	* reqcharptr		1478029	0					
ANR	1478894	UnaryOperator	*		1478029	0					
ANR	1478895	Identifier	reqcharptr		1478029	1					
ANR	1478896	Identifier	reqchar		1478029	1					
ANR	1478897	ExpressionStatement	* reqcharflagsptr = reqcharflags	8384:4:276338:276369	1478029	11	True				
ANR	1478898	AssignmentExpression	* reqcharflagsptr = reqcharflags		1478029	0		=			
ANR	1478899	UnaryOperationExpression	* reqcharflagsptr		1478029	0					
ANR	1478900	UnaryOperator	*		1478029	0					
ANR	1478901	Identifier	reqcharflagsptr		1478029	1					
ANR	1478902	Identifier	reqcharflags		1478029	1					
ANR	1478903	IfStatement	if ( lengthptr != NULL )		1478029	12					
ANR	1478904	Condition	lengthptr != NULL	8385:8:276379:276395	1478029	0	True				
ANR	1478905	EqualityExpression	lengthptr != NULL		1478029	0		!=			
ANR	1478906	Identifier	lengthptr		1478029	0					
ANR	1478907	Identifier	NULL		1478029	1					
ANR	1478908	CompoundStatement		266:6:8708:8708	1478029	1					
ANR	1478909	IfStatement	if ( OFLOW_MAX - * lengthptr < length )		1478029	0					
ANR	1478910	Condition	OFLOW_MAX - * lengthptr < length	8387:10:276416:276446	1478029	0	True				
ANR	1478911	RelationalExpression	OFLOW_MAX - * lengthptr < length		1478029	0		<			
ANR	1478912	AdditiveExpression	OFLOW_MAX - * lengthptr		1478029	0		-			
ANR	1478913	Identifier	OFLOW_MAX		1478029	0					
ANR	1478914	UnaryOperationExpression	* lengthptr		1478029	1					
ANR	1478915	UnaryOperator	*		1478029	0					
ANR	1478916	Identifier	lengthptr		1478029	1					
ANR	1478917	Identifier	length		1478029	1					
ANR	1478918	CompoundStatement		268:8:8761:8761	1478029	1					
ANR	1478919	ExpressionStatement	* errorcodeptr = ERR20	8389:8:276467:276488	1478029	0	True				
ANR	1478920	AssignmentExpression	* errorcodeptr = ERR20		1478029	0		=			
ANR	1478921	UnaryOperationExpression	* errorcodeptr		1478029	0					
ANR	1478922	UnaryOperator	*		1478029	0					
ANR	1478923	Identifier	errorcodeptr		1478029	1					
ANR	1478924	Identifier	ERR20		1478029	1					
ANR	1478925	ReturnStatement	return FALSE ;	8390:8:276498:276510	1478029	1	True				
ANR	1478926	Identifier	FALSE		1478029	0					
ANR	1478927	ExpressionStatement	* lengthptr += length	8392:6:276528:276548	1478029	1	True				
ANR	1478928	AssignmentExpression	* lengthptr += length		1478029	0		+=			
ANR	1478929	UnaryOperationExpression	* lengthptr		1478029	0					
ANR	1478930	UnaryOperator	*		1478029	0					
ANR	1478931	Identifier	lengthptr		1478029	1					
ANR	1478932	Identifier	length		1478029	1					
ANR	1478933	ReturnStatement	return TRUE ;	8394:4:276562:276573	1478029	13	True				
ANR	1478934	Identifier	TRUE		1478029	0					
ANR	1478935	IfStatement	if ( lengthptr != NULL )		1478029	6					
ANR	1478936	Condition	lengthptr != NULL	8406:6:277094:277110	1478029	0	True				
ANR	1478937	EqualityExpression	lengthptr != NULL		1478029	0		!=			
ANR	1478938	Identifier	lengthptr		1478029	0					
ANR	1478939	Identifier	NULL		1478029	1					
ANR	1478940	CompoundStatement		287:4:9421:9421	1478029	1					
ANR	1478941	ExpressionStatement	code = * codeptr + 1 + LINK_SIZE + skipbytes	8408:4:277123:277166	1478029	0	True				
ANR	1478942	AssignmentExpression	code = * codeptr + 1 + LINK_SIZE + skipbytes		1478029	0		=			
ANR	1478943	Identifier	code		1478029	0					
ANR	1478944	AdditiveExpression	* codeptr + 1 + LINK_SIZE + skipbytes		1478029	1		+			
ANR	1478945	UnaryOperationExpression	* codeptr		1478029	0					
ANR	1478946	UnaryOperator	*		1478029	0					
ANR	1478947	Identifier	codeptr		1478029	1					
ANR	1478948	AdditiveExpression	1 + LINK_SIZE + skipbytes		1478029	1		+			
ANR	1478949	PrimaryExpression	1		1478029	0					
ANR	1478950	AdditiveExpression	LINK_SIZE + skipbytes		1478029	1		+			
ANR	1478951	Identifier	LINK_SIZE		1478029	0					
ANR	1478952	Identifier	skipbytes		1478029	1					
ANR	1478953	ExpressionStatement	length += 1 + LINK_SIZE	8409:4:277172:277195	1478029	1	True				
ANR	1478954	AssignmentExpression	length += 1 + LINK_SIZE		1478029	0		+=			
ANR	1478955	Identifier	length		1478029	0					
ANR	1478956	AdditiveExpression	1 + LINK_SIZE		1478029	1		+			
ANR	1478957	PrimaryExpression	1		1478029	0					
ANR	1478958	Identifier	LINK_SIZE		1478029	1					
ANR	1478959	ElseStatement	else		1478029	0					
ANR	1478960	CompoundStatement		292:4:9518:9518	1478029	0					
ANR	1478961	ExpressionStatement	* code = OP_ALT	8413:4:277220:277234	1478029	0	True				
ANR	1478962	AssignmentExpression	* code = OP_ALT		1478029	0		=			
ANR	1478963	UnaryOperationExpression	* code		1478029	0					
ANR	1478964	UnaryOperator	*		1478029	0					
ANR	1478965	Identifier	code		1478029	1					
ANR	1478966	Identifier	OP_ALT		1478029	1					
ANR	1478967	ExpressionStatement	"PUT ( code , 1 , ( int ) ( code - last_branch ) )"	8414:4:277240:277279	1478029	1	True				
ANR	1478968	CallExpression	"PUT ( code , 1 , ( int ) ( code - last_branch ) )"		1478029	0					
ANR	1478969	Callee	PUT		1478029	0					
ANR	1478970	Identifier	PUT		1478029	0					
ANR	1478971	ArgumentList	code		1478029	1					
ANR	1478972	Argument	code		1478029	0					
ANR	1478973	Identifier	code		1478029	0					
ANR	1478974	Argument	1		1478029	1					
ANR	1478975	PrimaryExpression	1		1478029	0					
ANR	1478976	Argument	( int ) ( code - last_branch )		1478029	2					
ANR	1478977	CastExpression	( int ) ( code - last_branch )		1478029	0					
ANR	1478978	CastTarget	int		1478029	0					
ANR	1478979	AdditiveExpression	code - last_branch		1478029	1		-			
ANR	1478980	Identifier	code		1478029	0					
ANR	1478981	Identifier	last_branch		1478029	1					
ANR	1478982	ExpressionStatement	bc . current_branch = last_branch = code	8415:4:277285:277323	1478029	2	True				
ANR	1478983	AssignmentExpression	bc . current_branch = last_branch = code		1478029	0		=			
ANR	1478984	MemberAccess	bc . current_branch		1478029	0					
ANR	1478985	Identifier	bc		1478029	0					
ANR	1478986	Identifier	current_branch		1478029	1					
ANR	1478987	AssignmentExpression	last_branch = code		1478029	1		=			
ANR	1478988	Identifier	last_branch		1478029	0					
ANR	1478989	Identifier	code		1478029	1					
ANR	1478990	ExpressionStatement	code += 1 + LINK_SIZE	8416:4:277329:277350	1478029	3	True				
ANR	1478991	AssignmentExpression	code += 1 + LINK_SIZE		1478029	0		+=			
ANR	1478992	Identifier	code		1478029	0					
ANR	1478993	AdditiveExpression	1 + LINK_SIZE		1478029	1		+			
ANR	1478994	PrimaryExpression	1		1478029	0					
ANR	1478995	Identifier	LINK_SIZE		1478029	1					
ANR	1478996	ExpressionStatement	ptr ++	8419:2:277361:277366	1478029	7	True				
ANR	1478997	PostIncDecOperationExpression	ptr ++		1478029	0					
ANR	1478998	Identifier	ptr		1478029	0					
ANR	1478999	IncDec	++		1478029	1					
ANR	1479000	ReturnType	static BOOL		1478029	1					
ANR	1479001	Identifier	compile_regex		1478029	2					
ANR	1479002	ParameterList	"int options , pcre_uchar * * codeptr , const pcre_uchar * * ptrptr , int * errorcodeptr , BOOL lookbehind , BOOL reset_bracount , int skipbytes , int cond_depth , pcre_uint32 * firstcharptr , pcre_int32 * firstcharflagsptr , pcre_uint32 * reqcharptr , pcre_int32 * reqcharflagsptr , branch_chain * bcptr , compile_data * cd , int * lengthptr"		1478029	3					
ANR	1479003	Parameter	int options	8115:14:267368:267378	1478029	0	True				
ANR	1479004	ParameterType	int		1478029	0					
ANR	1479005	Identifier	options		1478029	1					
ANR	1479006	Parameter	pcre_uchar * * codeptr	8115:27:267381:267400	1478029	1	True				
ANR	1479007	ParameterType	pcre_uchar * *		1478029	0					
ANR	1479008	Identifier	codeptr		1478029	1					
ANR	1479009	Parameter	const pcre_uchar * * ptrptr	8115:49:267403:267427	1478029	2	True				
ANR	1479010	ParameterType	const pcre_uchar * *		1478029	0					
ANR	1479011	Identifier	ptrptr		1478029	1					
ANR	1479012	Parameter	int * errorcodeptr	8116:2:267432:267448	1478029	3	True				
ANR	1479013	ParameterType	int *		1478029	0					
ANR	1479014	Identifier	errorcodeptr		1478029	1					
ANR	1479015	Parameter	BOOL lookbehind	8116:21:267451:267465	1478029	4	True				
ANR	1479016	ParameterType	BOOL		1478029	0					
ANR	1479017	Identifier	lookbehind		1478029	1					
ANR	1479018	Parameter	BOOL reset_bracount	8116:38:267468:267486	1478029	5	True				
ANR	1479019	ParameterType	BOOL		1478029	0					
ANR	1479020	Identifier	reset_bracount		1478029	1					
ANR	1479021	Parameter	int skipbytes	8116:59:267489:267501	1478029	6	True				
ANR	1479022	ParameterType	int		1478029	0					
ANR	1479023	Identifier	skipbytes		1478029	1					
ANR	1479024	Parameter	int cond_depth	8117:2:267506:267519	1478029	7	True				
ANR	1479025	ParameterType	int		1478029	0					
ANR	1479026	Identifier	cond_depth		1478029	1					
ANR	1479027	Parameter	pcre_uint32 * firstcharptr	8118:2:267524:267548	1478029	8	True				
ANR	1479028	ParameterType	pcre_uint32 *		1478029	0					
ANR	1479029	Identifier	firstcharptr		1478029	1					
ANR	1479030	Parameter	pcre_int32 * firstcharflagsptr	8118:29:267551:267579	1478029	9	True				
ANR	1479031	ParameterType	pcre_int32 *		1478029	0					
ANR	1479032	Identifier	firstcharflagsptr		1478029	1					
ANR	1479033	Parameter	pcre_uint32 * reqcharptr	8119:2:267584:267606	1478029	10	True				
ANR	1479034	ParameterType	pcre_uint32 *		1478029	0					
ANR	1479035	Identifier	reqcharptr		1478029	1					
ANR	1479036	Parameter	pcre_int32 * reqcharflagsptr	8119:27:267609:267635	1478029	11	True				
ANR	1479037	ParameterType	pcre_int32 *		1478029	0					
ANR	1479038	Identifier	reqcharflagsptr		1478029	1					
ANR	1479039	Parameter	branch_chain * bcptr	8120:2:267640:267658	1478029	12	True				
ANR	1479040	ParameterType	branch_chain *		1478029	0					
ANR	1479041	Identifier	bcptr		1478029	1					
ANR	1479042	Parameter	compile_data * cd	8120:23:267661:267676	1478029	13	True				
ANR	1479043	ParameterType	compile_data *		1478029	0					
ANR	1479044	Identifier	cd		1478029	1					
ANR	1479045	Parameter	int * lengthptr	8120:41:267679:267692	1478029	14	True				
ANR	1479046	ParameterType	int *		1478029	0					
ANR	1479047	Identifier	lengthptr		1478029	1					
ANR	1479048	CFGEntryNode	ENTRY		1478029		True				
ANR	1479049	CFGExitNode	EXIT		1478029		True				
ANR	1479050	InfiniteForNode	true		1478029		True				
ANR	1479051	Symbol	* cd		1478029						
ANR	1479052	Symbol	* firstcharflagsptr		1478029						
ANR	1479053	Symbol	branchfirstcharflags		1478029						
ANR	1479054	Symbol	cd -> check_lookbehind		1478029						
ANR	1479055	Symbol	capitem		1478029						
ANR	1479056	Symbol	stack_guard		1478029						
ANR	1479057	Symbol	cd -> max_lookbehind		1478029						
ANR	1479058	Symbol	capitem . next		1478029						
ANR	1479059	Symbol	compile_branch		1478029						
ANR	1479060	Symbol	options		1478029						
ANR	1479061	Symbol	lookbehind		1478029						
ANR	1479062	Symbol	max_bracount		1478029						
ANR	1479063	Symbol	capitem . number		1478029						
ANR	1479064	Symbol	PUBL		1478029						
ANR	1479065	Symbol	bc . outer		1478029						
ANR	1479066	Symbol	ERR70		1478029						
ANR	1479067	Symbol	LINK_SIZE		1478029						
ANR	1479068	Symbol	firstcharptr		1478029						
ANR	1479069	Symbol	GET		1478029						
ANR	1479070	Symbol	CHAR_VERTICAL_LINE		1478029						
ANR	1479071	Symbol	OP_END		1478029						
ANR	1479072	Symbol	capnumber		1478029						
ANR	1479073	Symbol	& branchfirstcharflags		1478029						
ANR	1479074	Symbol	bc		1478029						
ANR	1479075	Symbol	cd -> open_caps -> next		1478029						
ANR	1479076	Symbol	OP_ALT		1478029						
ANR	1479077	Symbol	skipbytes		1478029						
ANR	1479078	Symbol	* reqcharflagsptr		1478029						
ANR	1479079	Symbol	orig_bracount		1478029						
ANR	1479080	Symbol	& branchreqcharflags		1478029						
ANR	1479081	Symbol	reqcharflags		1478029						
ANR	1479082	Symbol	reqcharptr		1478029						
ANR	1479083	Symbol	branchfirstchar		1478029						
ANR	1479084	Symbol	last_branch		1478029						
ANR	1479085	Symbol	cd		1478029						
ANR	1479086	Symbol	& length		1478029						
ANR	1479087	Symbol	fixed_length		1478029						
ANR	1479088	Symbol	& branchreqchar		1478029						
ANR	1479089	Symbol	* start_bracket		1478029						
ANR	1479090	Symbol	* codeptr		1478029						
ANR	1479091	Symbol	& bc		1478029						
ANR	1479092	Symbol	firstcharflagsptr		1478029						
ANR	1479093	Symbol	REQ_UNSET		1478029						
ANR	1479094	Symbol	errorcodeptr		1478029						
ANR	1479095	Symbol	& code		1478029						
ANR	1479096	Symbol	& options		1478029						
ANR	1479097	Symbol	* errorcodeptr		1478029						
ANR	1479098	Symbol	cd -> bracount		1478029						
ANR	1479099	Symbol	prev_length		1478029						
ANR	1479100	Symbol	reverse_count		1478029						
ANR	1479101	Symbol	find_fixedlength		1478029						
ANR	1479102	Symbol	* lengthptr		1478029						
ANR	1479103	Symbol	firstcharflags		1478029						
ANR	1479104	Symbol	OP_CBRA		1478029						
ANR	1479105	Symbol	IN_UCHARS		1478029						
ANR	1479106	Symbol	OP_REVERSE		1478029						
ANR	1479107	Symbol	save_hwm_offset		1478029						
ANR	1479108	Symbol	* cd -> open_caps		1478029						
ANR	1479109	Symbol	* ptr		1478029						
ANR	1479110	Symbol	* ptrptr		1478029						
ANR	1479111	Symbol	cd -> hwm		1478029						
ANR	1479112	Symbol	ERR36		1478029						
ANR	1479113	Symbol	GET2		1478029						
ANR	1479114	Symbol	* last_branch		1478029						
ANR	1479115	Symbol	reset_bracount		1478029						
ANR	1479116	Symbol	bcptr		1478029						
ANR	1479117	Symbol	REQ_NONE		1478029						
ANR	1479118	Symbol	branchreqchar		1478029						
ANR	1479119	Symbol	NULL		1478029						
ANR	1479120	Symbol	~REQ_VARY		1478029						
ANR	1479121	Symbol	TRUE		1478029						
ANR	1479122	Symbol	cd -> open_caps		1478029						
ANR	1479123	Symbol	lengthptr		1478029						
ANR	1479124	Symbol	ERR20		1478029						
ANR	1479125	Symbol	start_bracket		1478029						
ANR	1479126	Symbol	reqchar		1478029						
ANR	1479127	Symbol	ERR25		1478029						
ANR	1479128	Symbol	* code		1478029						
ANR	1479129	Symbol	OP_KET		1478029						
ANR	1479130	Symbol	* firstcharptr		1478029						
ANR	1479131	Symbol	& branchfirstchar		1478029						
ANR	1479132	Symbol	codeptr		1478029						
ANR	1479133	Symbol	code		1478029						
ANR	1479134	Symbol	cd -> open_caps -> flag		1478029						
ANR	1479135	Symbol	branch_length		1478029						
ANR	1479136	Symbol	OFLOW_MAX		1478029						
ANR	1479137	Symbol	reqcharflagsptr		1478029						
ANR	1479138	Symbol	* * cd		1478029						
ANR	1479139	Symbol	* reqcharptr		1478029						
ANR	1479140	Symbol	cd -> start_workspace		1478029						
ANR	1479141	Symbol	& capitem		1478029						
ANR	1479142	Symbol	& ptr		1478029						
ANR	1479143	Symbol	branchreqcharflags		1478029						
ANR	1479144	Symbol	length		1478029						
ANR	1479145	Symbol	capitem . flag		1478029						
ANR	1479146	Symbol	ptr		1478029						
ANR	1479147	Symbol	ERR85		1478029						
ANR	1479148	Symbol	OP_ONCE		1478029						
ANR	1479149	Symbol	firstchar		1478029						
ANR	1479150	Symbol	ptrptr		1478029						
ANR	1479151	Symbol	cond_depth		1478029						
ANR	1479152	Symbol	FALSE		1478029						
ANR	1479153	Symbol	PCRE_UTF8		1478029						
ANR	1479154	Symbol	bc . current_branch		1478029						
ANR	1479155	Symbol	* code ++		1478029						
ANR	1479156	Function	is_anchored	8468:0:279324:281078							
ANR	1479157	FunctionDef	"is_anchored (register const pcre_uchar * code , unsigned int bracket_map , compile_data * cd , int atomcount)"		1479156	0					
ANR	1479158	CompoundStatement		8471:0:279442:281078	1479156	0					
ANR	1479159	DoStatement	do		1479156	0					
ANR	1479160	CompoundStatement		5:12:116:131	1479156	0					
ANR	1479161	IdentifierDeclStatement	"const pcre_uchar * scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE ) ;"	8473:3:279452:279545	1479156	0	True				
ANR	1479162	IdentifierDecl	"* scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		1479156	0					
ANR	1479163	IdentifierDeclType	const pcre_uchar *		1479156	0					
ANR	1479164	Identifier	scode		1479156	1					
ANR	1479165	AssignmentExpression	"* scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		1479156	2		=			
ANR	1479166	Identifier	scode		1479156	0					
ANR	1479167	CallExpression	"first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		1479156	1					
ANR	1479168	Callee	first_significant_code		1479156	0					
ANR	1479169	Identifier	first_significant_code		1479156	0					
ANR	1479170	ArgumentList	code + PRIV ( OP_lengths ) [ * code ]		1479156	1					
ANR	1479171	Argument	code + PRIV ( OP_lengths ) [ * code ]		1479156	0					
ANR	1479172	AdditiveExpression	code + PRIV ( OP_lengths ) [ * code ]		1479156	0		+			
ANR	1479173	Identifier	code		1479156	0					
ANR	1479174	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		1479156	1					
ANR	1479175	CallExpression	PRIV ( OP_lengths )		1479156	0					
ANR	1479176	Callee	PRIV		1479156	0					
ANR	1479177	Identifier	PRIV		1479156	0					
ANR	1479178	ArgumentList	OP_lengths		1479156	1					
ANR	1479179	Argument	OP_lengths		1479156	0					
ANR	1479180	Identifier	OP_lengths		1479156	0					
ANR	1479181	UnaryOperationExpression	* code		1479156	1					
ANR	1479182	UnaryOperator	*		1479156	0					
ANR	1479183	Identifier	code		1479156	1					
ANR	1479184	Argument	FALSE		1479156	1					
ANR	1479185	Identifier	FALSE		1479156	0					
ANR	1479186	Statement	register	8475:3:279550:279557	1479156	1	True				
ANR	1479187	IdentifierDeclStatement	int op = * scode ;	8475:12:279559:279574	1479156	2	True				
ANR	1479188	IdentifierDecl	op = * scode		1479156	0					
ANR	1479189	IdentifierDeclType	int		1479156	0					
ANR	1479190	Identifier	op		1479156	1					
ANR	1479191	AssignmentExpression	op = * scode		1479156	2		=			
ANR	1479192	Identifier	op		1479156	0					
ANR	1479193	UnaryOperationExpression	* scode		1479156	1					
ANR	1479194	UnaryOperator	*		1479156	0					
ANR	1479195	Identifier	scode		1479156	1					
ANR	1479196	IfStatement	if ( op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS )		1479156	3					
ANR	1479197	Condition	op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS	8479:7:279617:279692	1479156	0	True				
ANR	1479198	OrExpression	op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS		1479156	0		||			
ANR	1479199	EqualityExpression	op == OP_BRA		1479156	0		==			
ANR	1479200	Identifier	op		1479156	0					
ANR	1479201	Identifier	OP_BRA		1479156	1					
ANR	1479202	OrExpression	op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS		1479156	1		||			
ANR	1479203	EqualityExpression	op == OP_BRAPOS		1479156	0		==			
ANR	1479204	Identifier	op		1479156	0					
ANR	1479205	Identifier	OP_BRAPOS		1479156	1					
ANR	1479206	OrExpression	op == OP_SBRA || op == OP_SBRAPOS		1479156	1		||			
ANR	1479207	EqualityExpression	op == OP_SBRA		1479156	0		==			
ANR	1479208	Identifier	op		1479156	0					
ANR	1479209	Identifier	OP_SBRA		1479156	1					
ANR	1479210	EqualityExpression	op == OP_SBRAPOS		1479156	1		==			
ANR	1479211	Identifier	op		1479156	0					
ANR	1479212	Identifier	OP_SBRAPOS		1479156	1					
ANR	1479213	CompoundStatement		11:5:257:257	1479156	1					
ANR	1479214	IfStatement	"if ( ! is_anchored ( scode , bracket_map , cd , atomcount ) )"		1479156	0					
ANR	1479215	Condition	"! is_anchored ( scode , bracket_map , cd , atomcount )"	8482:9:279711:279757	1479156	0	True				
ANR	1479216	UnaryOperationExpression	"! is_anchored ( scode , bracket_map , cd , atomcount )"		1479156	0					
ANR	1479217	UnaryOperator	!		1479156	0					
ANR	1479218	CallExpression	"is_anchored ( scode , bracket_map , cd , atomcount )"		1479156	1					
ANR	1479219	Callee	is_anchored		1479156	0					
ANR	1479220	Identifier	is_anchored		1479156	0					
ANR	1479221	ArgumentList	scode		1479156	1					
ANR	1479222	Argument	scode		1479156	0					
ANR	1479223	Identifier	scode		1479156	0					
ANR	1479224	Argument	bracket_map		1479156	1					
ANR	1479225	Identifier	bracket_map		1479156	0					
ANR	1479226	Argument	cd		1479156	2					
ANR	1479227	Identifier	cd		1479156	0					
ANR	1479228	Argument	atomcount		1479156	3					
ANR	1479229	Identifier	atomcount		1479156	0					
ANR	1479230	ReturnStatement	return FALSE ;	8482:58:279760:279772	1479156	1	True				
ANR	1479231	Identifier	FALSE		1479156	0					
ANR	1479232	ElseStatement	else		1479156	0					
ANR	1479233	IfStatement	if ( op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS )		1479156	0					
ANR	1479234	Condition	op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS	8487:12:279823:279907	1479156	0	True				
ANR	1479235	OrExpression	op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS		1479156	0		||			
ANR	1479236	EqualityExpression	op == OP_CBRA		1479156	0		==			
ANR	1479237	Identifier	op		1479156	0					
ANR	1479238	Identifier	OP_CBRA		1479156	1					
ANR	1479239	OrExpression	op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS		1479156	1		||			
ANR	1479240	EqualityExpression	op == OP_CBRAPOS		1479156	0		==			
ANR	1479241	Identifier	op		1479156	0					
ANR	1479242	Identifier	OP_CBRAPOS		1479156	1					
ANR	1479243	OrExpression	op == OP_SCBRA || op == OP_SCBRAPOS		1479156	1		||			
ANR	1479244	EqualityExpression	op == OP_SCBRA		1479156	0		==			
ANR	1479245	Identifier	op		1479156	0					
ANR	1479246	Identifier	OP_SCBRA		1479156	1					
ANR	1479247	EqualityExpression	op == OP_SCBRAPOS		1479156	1		==			
ANR	1479248	Identifier	op		1479156	0					
ANR	1479249	Identifier	OP_SCBRAPOS		1479156	1					
ANR	1479250	CompoundStatement		21:5:518:570	1479156	1					
ANR	1479251	IdentifierDeclStatement	"int n = GET2 ( scode , 1 + LINK_SIZE ) ;"	8490:5:279922:279954	1479156	0	True				
ANR	1479252	IdentifierDecl	"n = GET2 ( scode , 1 + LINK_SIZE )"		1479156	0					
ANR	1479253	IdentifierDeclType	int		1479156	0					
ANR	1479254	Identifier	n		1479156	1					
ANR	1479255	AssignmentExpression	"n = GET2 ( scode , 1 + LINK_SIZE )"		1479156	2		=			
ANR	1479256	Identifier	n		1479156	0					
ANR	1479257	CallExpression	"GET2 ( scode , 1 + LINK_SIZE )"		1479156	1					
ANR	1479258	Callee	GET2		1479156	0					
ANR	1479259	Identifier	GET2		1479156	0					
ANR	1479260	ArgumentList	scode		1479156	1					
ANR	1479261	Argument	scode		1479156	0					
ANR	1479262	Identifier	scode		1479156	0					
ANR	1479263	Argument	1 + LINK_SIZE		1479156	1					
ANR	1479264	AdditiveExpression	1 + LINK_SIZE		1479156	0		+			
ANR	1479265	PrimaryExpression	1		1479156	0					
ANR	1479266	Identifier	LINK_SIZE		1479156	1					
ANR	1479267	IdentifierDeclStatement	int new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 ) ;	8491:5:279961:280013	1479156	1	True				
ANR	1479268	IdentifierDecl	new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		1479156	0					
ANR	1479269	IdentifierDeclType	int		1479156	0					
ANR	1479270	Identifier	new_map		1479156	1					
ANR	1479271	AssignmentExpression	new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		1479156	2		=			
ANR	1479272	Identifier	new_map		1479156	0					
ANR	1479273	InclusiveOrExpression	bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		1479156	1		|			
ANR	1479274	Identifier	bracket_map		1479156	0					
ANR	1479275	ConditionalExpression	( n < 32 ) ? ( 1 << n ) : 1		1479156	1					
ANR	1479276	Condition	n < 32		1479156	0					
ANR	1479277	RelationalExpression	n < 32		1479156	0		<			
ANR	1479278	Identifier	n		1479156	0					
ANR	1479279	PrimaryExpression	32		1479156	1					
ANR	1479280	ShiftExpression	1 << n		1479156	1		<<			
ANR	1479281	PrimaryExpression	1		1479156	0					
ANR	1479282	Identifier	n		1479156	1					
ANR	1479283	PrimaryExpression	1		1479156	2					
ANR	1479284	IfStatement	"if ( ! is_anchored ( scode , new_map , cd , atomcount ) )"		1479156	2					
ANR	1479285	Condition	"! is_anchored ( scode , new_map , cd , atomcount )"	8492:9:280024:280066	1479156	0	True				
ANR	1479286	UnaryOperationExpression	"! is_anchored ( scode , new_map , cd , atomcount )"		1479156	0					
ANR	1479287	UnaryOperator	!		1479156	0					
ANR	1479288	CallExpression	"is_anchored ( scode , new_map , cd , atomcount )"		1479156	1					
ANR	1479289	Callee	is_anchored		1479156	0					
ANR	1479290	Identifier	is_anchored		1479156	0					
ANR	1479291	ArgumentList	scode		1479156	1					
ANR	1479292	Argument	scode		1479156	0					
ANR	1479293	Identifier	scode		1479156	0					
ANR	1479294	Argument	new_map		1479156	1					
ANR	1479295	Identifier	new_map		1479156	0					
ANR	1479296	Argument	cd		1479156	2					
ANR	1479297	Identifier	cd		1479156	0					
ANR	1479298	Argument	atomcount		1479156	3					
ANR	1479299	Identifier	atomcount		1479156	0					
ANR	1479300	ReturnStatement	return FALSE ;	8492:54:280069:280081	1479156	1	True				
ANR	1479301	Identifier	FALSE		1479156	0					
ANR	1479302	ElseStatement	else		1479156	0					
ANR	1479303	IfStatement	if ( op == OP_ASSERT || op == OP_COND )		1479156	0					
ANR	1479304	Condition	op == OP_ASSERT || op == OP_COND	8497:12:280156:280187	1479156	0	True				
ANR	1479305	OrExpression	op == OP_ASSERT || op == OP_COND		1479156	0		||			
ANR	1479306	EqualityExpression	op == OP_ASSERT		1479156	0		==			
ANR	1479307	Identifier	op		1479156	0					
ANR	1479308	Identifier	OP_ASSERT		1479156	1					
ANR	1479309	EqualityExpression	op == OP_COND		1479156	1		==			
ANR	1479310	Identifier	op		1479156	0					
ANR	1479311	Identifier	OP_COND		1479156	1					
ANR	1479312	CompoundStatement		28:5:752:752	1479156	1					
ANR	1479313	IfStatement	"if ( ! is_anchored ( scode , bracket_map , cd , atomcount ) )"		1479156	0					
ANR	1479314	Condition	"! is_anchored ( scode , bracket_map , cd , atomcount )"	8499:9:280206:280252	1479156	0	True				
ANR	1479315	UnaryOperationExpression	"! is_anchored ( scode , bracket_map , cd , atomcount )"		1479156	0					
ANR	1479316	UnaryOperator	!		1479156	0					
ANR	1479317	CallExpression	"is_anchored ( scode , bracket_map , cd , atomcount )"		1479156	1					
ANR	1479318	Callee	is_anchored		1479156	0					
ANR	1479319	Identifier	is_anchored		1479156	0					
ANR	1479320	ArgumentList	scode		1479156	1					
ANR	1479321	Argument	scode		1479156	0					
ANR	1479322	Identifier	scode		1479156	0					
ANR	1479323	Argument	bracket_map		1479156	1					
ANR	1479324	Identifier	bracket_map		1479156	0					
ANR	1479325	Argument	cd		1479156	2					
ANR	1479326	Identifier	cd		1479156	0					
ANR	1479327	Argument	atomcount		1479156	3					
ANR	1479328	Identifier	atomcount		1479156	0					
ANR	1479329	ReturnStatement	return FALSE ;	8499:58:280255:280267	1479156	1	True				
ANR	1479330	Identifier	FALSE		1479156	0					
ANR	1479331	ElseStatement	else		1479156	0					
ANR	1479332	IfStatement	if ( op == OP_ONCE || op == OP_ONCE_NC )		1479156	0					
ANR	1479333	Condition	op == OP_ONCE || op == OP_ONCE_NC	8504:12:280313:280345	1479156	0	True				
ANR	1479334	OrExpression	op == OP_ONCE || op == OP_ONCE_NC		1479156	0		||			
ANR	1479335	EqualityExpression	op == OP_ONCE		1479156	0		==			
ANR	1479336	Identifier	op		1479156	0					
ANR	1479337	Identifier	OP_ONCE		1479156	1					
ANR	1479338	EqualityExpression	op == OP_ONCE_NC		1479156	1		==			
ANR	1479339	Identifier	op		1479156	0					
ANR	1479340	Identifier	OP_ONCE_NC		1479156	1					
ANR	1479341	CompoundStatement		35:5:910:910	1479156	1					
ANR	1479342	IfStatement	"if ( ! is_anchored ( scode , bracket_map , cd , atomcount + 1 ) )"		1479156	0					
ANR	1479343	Condition	"! is_anchored ( scode , bracket_map , cd , atomcount + 1 )"	8506:9:280364:280414	1479156	0	True				
ANR	1479344	UnaryOperationExpression	"! is_anchored ( scode , bracket_map , cd , atomcount + 1 )"		1479156	0					
ANR	1479345	UnaryOperator	!		1479156	0					
ANR	1479346	CallExpression	"is_anchored ( scode , bracket_map , cd , atomcount + 1 )"		1479156	1					
ANR	1479347	Callee	is_anchored		1479156	0					
ANR	1479348	Identifier	is_anchored		1479156	0					
ANR	1479349	ArgumentList	scode		1479156	1					
ANR	1479350	Argument	scode		1479156	0					
ANR	1479351	Identifier	scode		1479156	0					
ANR	1479352	Argument	bracket_map		1479156	1					
ANR	1479353	Identifier	bracket_map		1479156	0					
ANR	1479354	Argument	cd		1479156	2					
ANR	1479355	Identifier	cd		1479156	0					
ANR	1479356	Argument	atomcount + 1		1479156	3					
ANR	1479357	AdditiveExpression	atomcount + 1		1479156	0		+			
ANR	1479358	Identifier	atomcount		1479156	0					
ANR	1479359	PrimaryExpression	1		1479156	1					
ANR	1479360	ReturnStatement	return FALSE ;	8507:7:280424:280436	1479156	1	True				
ANR	1479361	Identifier	FALSE		1479156	0					
ANR	1479362	ElseStatement	else		1479156	0					
ANR	1479363	IfStatement	if ( ( op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR ) )		1479156	0					
ANR	1479364	Condition	op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR	8514:12:280624:280703	1479156	0	True				
ANR	1479365	OrExpression	op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR		1479156	0		||			
ANR	1479366	EqualityExpression	op == OP_TYPESTAR		1479156	0		==			
ANR	1479367	Identifier	op		1479156	0					
ANR	1479368	Identifier	OP_TYPESTAR		1479156	1					
ANR	1479369	OrExpression	op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR		1479156	1		||			
ANR	1479370	EqualityExpression	op == OP_TYPEMINSTAR		1479156	0		==			
ANR	1479371	Identifier	op		1479156	0					
ANR	1479372	Identifier	OP_TYPEMINSTAR		1479156	1					
ANR	1479373	EqualityExpression	op == OP_TYPEPOSSTAR		1479156	1		==			
ANR	1479374	Identifier	op		1479156	0					
ANR	1479375	Identifier	OP_TYPEPOSSTAR		1479156	1					
ANR	1479376	CompoundStatement		46:5:1268:1268	1479156	1					
ANR	1479377	IfStatement	if ( scode [ 1 ] != OP_ALLANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip )		1479156	0					
ANR	1479378	Condition	scode [ 1 ] != OP_ALLANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip	8517:9:280722:280831	1479156	0	True				
ANR	1479379	OrExpression	scode [ 1 ] != OP_ALLANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip		1479156	0		||			
ANR	1479380	EqualityExpression	scode [ 1 ] != OP_ALLANY		1479156	0		!=			
ANR	1479381	ArrayIndexing	scode [ 1 ]		1479156	0					
ANR	1479382	Identifier	scode		1479156	0					
ANR	1479383	PrimaryExpression	1		1479156	1					
ANR	1479384	Identifier	OP_ALLANY		1479156	1					
ANR	1479385	OrExpression	( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip		1479156	1		||			
ANR	1479386	EqualityExpression	( bracket_map & cd -> backref_map ) != 0		1479156	0		!=			
ANR	1479387	BitAndExpression	bracket_map & cd -> backref_map		1479156	0		&			
ANR	1479388	Identifier	bracket_map		1479156	0					
ANR	1479389	PtrMemberAccess	cd -> backref_map		1479156	1					
ANR	1479390	Identifier	cd		1479156	0					
ANR	1479391	Identifier	backref_map		1479156	1					
ANR	1479392	PrimaryExpression	0		1479156	1					
ANR	1479393	OrExpression	atomcount > 0 || cd -> had_pruneorskip		1479156	1		||			
ANR	1479394	RelationalExpression	atomcount > 0		1479156	0		>			
ANR	1479395	Identifier	atomcount		1479156	0					
ANR	1479396	PrimaryExpression	0		1479156	1					
ANR	1479397	PtrMemberAccess	cd -> had_pruneorskip		1479156	1					
ANR	1479398	Identifier	cd		1479156	0					
ANR	1479399	Identifier	had_pruneorskip		1479156	1					
ANR	1479400	ReturnStatement	return FALSE ;	8519:7:280841:280853	1479156	1	True				
ANR	1479401	Identifier	FALSE		1479156	0					
ANR	1479402	ElseStatement	else		1479156	0					
ANR	1479403	IfStatement	if ( op != OP_SOD && op != OP_SOM && op != OP_CIRC )		1479156	0					
ANR	1479404	Condition	op != OP_SOD && op != OP_SOM && op != OP_CIRC	8524:12:280914:280958	1479156	0	True				
ANR	1479405	AndExpression	op != OP_SOD && op != OP_SOM && op != OP_CIRC		1479156	0		&&			
ANR	1479406	EqualityExpression	op != OP_SOD		1479156	0		!=			
ANR	1479407	Identifier	op		1479156	0					
ANR	1479408	Identifier	OP_SOD		1479156	1					
ANR	1479409	AndExpression	op != OP_SOM && op != OP_CIRC		1479156	1		&&			
ANR	1479410	EqualityExpression	op != OP_SOM		1479156	0		!=			
ANR	1479411	Identifier	op		1479156	0					
ANR	1479412	Identifier	OP_SOM		1479156	1					
ANR	1479413	EqualityExpression	op != OP_CIRC		1479156	1		!=			
ANR	1479414	Identifier	op		1479156	0					
ANR	1479415	Identifier	OP_CIRC		1479156	1					
ANR	1479416	ReturnStatement	return FALSE ;	8524:59:280961:280973	1479156	1	True				
ANR	1479417	Identifier	FALSE		1479156	0					
ANR	1479418	ExpressionStatement	"code += GET ( code , 1 )"	8526:3:280979:280999	1479156	4	True				
ANR	1479419	AssignmentExpression	"code += GET ( code , 1 )"		1479156	0		+=			
ANR	1479420	Identifier	code		1479156	0					
ANR	1479421	CallExpression	"GET ( code , 1 )"		1479156	1					
ANR	1479422	Callee	GET		1479156	0					
ANR	1479423	Identifier	GET		1479156	0					
ANR	1479424	ArgumentList	code		1479156	1					
ANR	1479425	Argument	code		1479156	0					
ANR	1479426	Identifier	code		1479156	0					
ANR	1479427	Argument	1		1479156	1					
ANR	1479428	PrimaryExpression	1		1479156	0					
ANR	1479429	Condition	* code == OP_ALT	8528:7:281013:281027	1479156	1	True				
ANR	1479430	EqualityExpression	* code == OP_ALT		1479156	0		==			
ANR	1479431	UnaryOperationExpression	* code		1479156	0					
ANR	1479432	UnaryOperator	*		1479156	0					
ANR	1479433	Identifier	code		1479156	1					
ANR	1479434	Identifier	OP_ALT		1479156	1					
ANR	1479435	ReturnStatement	return TRUE ;	8529:0:281065:281076	1479156	1	True				
ANR	1479436	Identifier	TRUE		1479156	0					
ANR	1479437	ReturnType	static BOOL		1479156	1					
ANR	1479438	Identifier	is_anchored		1479156	2					
ANR	1479439	ParameterList	"register const pcre_uchar * code , unsigned int bracket_map , compile_data * cd , int atomcount"		1479156	3					
ANR	1479440	Parameter	register const pcre_uchar * code	8469:12:279348:279378	1479156	0	True				
ANR	1479441	ParameterType	register const pcre_uchar *		1479156	0					
ANR	1479442	Identifier	code		1479156	1					
ANR	1479443	Parameter	unsigned int bracket_map	8469:45:279381:279404	1479156	1	True				
ANR	1479444	ParameterType	unsigned int		1479156	0					
ANR	1479445	Identifier	bracket_map		1479156	1					
ANR	1479446	Parameter	compile_data * cd	8470:2:279409:279424	1479156	2	True				
ANR	1479447	ParameterType	compile_data *		1479156	0					
ANR	1479448	Identifier	cd		1479156	1					
ANR	1479449	Parameter	int atomcount	8470:20:279427:279439	1479156	3	True				
ANR	1479450	ParameterType	int		1479156	0					
ANR	1479451	Identifier	atomcount		1479156	1					
ANR	1479452	CFGEntryNode	ENTRY		1479156		True				
ANR	1479453	CFGExitNode	EXIT		1479156		True				
ANR	1479454	Symbol	code		1479156						
ANR	1479455	Symbol	is_anchored		1479156						
ANR	1479456	Symbol	* cd		1479156						
ANR	1479457	Symbol	OP_CBRA		1479156						
ANR	1479458	Symbol	OP_ONCE_NC		1479156						
ANR	1479459	Symbol	OP_ALT		1479156						
ANR	1479460	Symbol	PRIV		1479156						
ANR	1479461	Symbol	* * code		1479156						
ANR	1479462	Symbol	* scode		1479156						
ANR	1479463	Symbol	OP_TYPEMINSTAR		1479156						
ANR	1479464	Symbol	first_significant_code		1479156						
ANR	1479465	Symbol	OP_CBRAPOS		1479156						
ANR	1479466	Symbol	OP_SBRAPOS		1479156						
ANR	1479467	Symbol	GET2		1479156						
ANR	1479468	Symbol	OP_TYPEPOSSTAR		1479156						
ANR	1479469	Symbol	OP_CIRC		1479156						
ANR	1479470	Symbol	OP_ALLANY		1479156						
ANR	1479471	Symbol	cd		1479156						
ANR	1479472	Symbol	op		1479156						
ANR	1479473	Symbol	OP_SCBRAPOS		1479156						
ANR	1479474	Symbol	bracket_map		1479156						
ANR	1479475	Symbol	scode		1479156						
ANR	1479476	Symbol	OP_SOD		1479156						
ANR	1479477	Symbol	TRUE		1479156						
ANR	1479478	Symbol	OP_COND		1479156						
ANR	1479479	Symbol	OP_ASSERT		1479156						
ANR	1479480	Symbol	OP_SBRA		1479156						
ANR	1479481	Symbol	n		1479156						
ANR	1479482	Symbol	atomcount		1479156						
ANR	1479483	Symbol	OP_BRAPOS		1479156						
ANR	1479484	Symbol	LINK_SIZE		1479156						
ANR	1479485	Symbol	OP_ONCE		1479156						
ANR	1479486	Symbol	* PRIV		1479156						
ANR	1479487	Symbol	OP_BRA		1479156						
ANR	1479488	Symbol	OP_SOM		1479156						
ANR	1479489	Symbol	cd -> had_pruneorskip		1479156						
ANR	1479490	Symbol	GET		1479156						
ANR	1479491	Symbol	FALSE		1479156						
ANR	1479492	Symbol	OP_lengths		1479156						
ANR	1479493	Symbol	OP_TYPESTAR		1479156						
ANR	1479494	Symbol	new_map		1479156						
ANR	1479495	Symbol	cd -> backref_map		1479156						
ANR	1479496	Symbol	* code		1479156						
ANR	1479497	Symbol	OP_SCBRA		1479156						
ANR	1479498	Function	is_startline	8558:0:282213:285198							
ANR	1479499	FunctionDef	"is_startline (const pcre_uchar * code , unsigned int bracket_map , compile_data * cd , int atomcount)"		1479498	0					
ANR	1479500	CompoundStatement		8561:0:282323:285198	1479498	0					
ANR	1479501	DoStatement	do		1479498	0					
ANR	1479502	CompoundStatement		5:12:116:131	1479498	0					
ANR	1479503	IdentifierDeclStatement	"const pcre_uchar * scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE ) ;"	8563:3:282333:282426	1479498	0	True				
ANR	1479504	IdentifierDecl	"* scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		1479498	0					
ANR	1479505	IdentifierDeclType	const pcre_uchar *		1479498	0					
ANR	1479506	Identifier	scode		1479498	1					
ANR	1479507	AssignmentExpression	"* scode = first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		1479498	2		=			
ANR	1479508	Identifier	scode		1479498	0					
ANR	1479509	CallExpression	"first_significant_code ( code + PRIV ( OP_lengths ) [ * code ] , FALSE )"		1479498	1					
ANR	1479510	Callee	first_significant_code		1479498	0					
ANR	1479511	Identifier	first_significant_code		1479498	0					
ANR	1479512	ArgumentList	code + PRIV ( OP_lengths ) [ * code ]		1479498	1					
ANR	1479513	Argument	code + PRIV ( OP_lengths ) [ * code ]		1479498	0					
ANR	1479514	AdditiveExpression	code + PRIV ( OP_lengths ) [ * code ]		1479498	0		+			
ANR	1479515	Identifier	code		1479498	0					
ANR	1479516	ArrayIndexing	PRIV ( OP_lengths ) [ * code ]		1479498	1					
ANR	1479517	CallExpression	PRIV ( OP_lengths )		1479498	0					
ANR	1479518	Callee	PRIV		1479498	0					
ANR	1479519	Identifier	PRIV		1479498	0					
ANR	1479520	ArgumentList	OP_lengths		1479498	1					
ANR	1479521	Argument	OP_lengths		1479498	0					
ANR	1479522	Identifier	OP_lengths		1479498	0					
ANR	1479523	UnaryOperationExpression	* code		1479498	1					
ANR	1479524	UnaryOperator	*		1479498	0					
ANR	1479525	Identifier	code		1479498	1					
ANR	1479526	Argument	FALSE		1479498	1					
ANR	1479527	Identifier	FALSE		1479498	0					
ANR	1479528	Statement	register	8565:3:282431:282438	1479498	1	True				
ANR	1479529	IdentifierDeclStatement	int op = * scode ;	8565:12:282440:282455	1479498	2	True				
ANR	1479530	IdentifierDecl	op = * scode		1479498	0					
ANR	1479531	IdentifierDeclType	int		1479498	0					
ANR	1479532	Identifier	op		1479498	1					
ANR	1479533	AssignmentExpression	op = * scode		1479498	2		=			
ANR	1479534	Identifier	op		1479498	0					
ANR	1479535	UnaryOperationExpression	* scode		1479498	1					
ANR	1479536	UnaryOperator	*		1479498	0					
ANR	1479537	Identifier	scode		1479498	1					
ANR	1479538	IfStatement	if ( op == OP_COND )		1479498	3					
ANR	1479539	Condition	op == OP_COND	8572:7:282747:282759	1479498	0	True				
ANR	1479540	EqualityExpression	op == OP_COND		1479498	0		==			
ANR	1479541	Identifier	op		1479498	0					
ANR	1479542	Identifier	OP_COND		1479498	1					
ANR	1479543	CompoundStatement		13:5:443:443	1479498	1					
ANR	1479544	ExpressionStatement	scode += 1 + LINK_SIZE	8574:5:282774:282796	1479498	0	True				
ANR	1479545	AssignmentExpression	scode += 1 + LINK_SIZE		1479498	0		+=			
ANR	1479546	Identifier	scode		1479498	0					
ANR	1479547	AdditiveExpression	1 + LINK_SIZE		1479498	1		+			
ANR	1479548	PrimaryExpression	1		1479498	0					
ANR	1479549	Identifier	LINK_SIZE		1479498	1					
ANR	1479550	IfStatement	if ( * scode == OP_CALLOUT )		1479498	1					
ANR	1479551	Condition	* scode == OP_CALLOUT	8575:9:282807:282826	1479498	0	True				
ANR	1479552	EqualityExpression	* scode == OP_CALLOUT		1479498	0		==			
ANR	1479553	UnaryOperationExpression	* scode		1479498	0					
ANR	1479554	UnaryOperator	*		1479498	0					
ANR	1479555	Identifier	scode		1479498	1					
ANR	1479556	Identifier	OP_CALLOUT		1479498	1					
ANR	1479557	ExpressionStatement	scode += PRIV ( OP_lengths ) [ OP_CALLOUT ]	8575:31:282829:282866	1479498	1	True				
ANR	1479558	AssignmentExpression	scode += PRIV ( OP_lengths ) [ OP_CALLOUT ]		1479498	0		+=			
ANR	1479559	Identifier	scode		1479498	0					
ANR	1479560	ArrayIndexing	PRIV ( OP_lengths ) [ OP_CALLOUT ]		1479498	1					
ANR	1479561	CallExpression	PRIV ( OP_lengths )		1479498	0					
ANR	1479562	Callee	PRIV		1479498	0					
ANR	1479563	Identifier	PRIV		1479498	0					
ANR	1479564	ArgumentList	OP_lengths		1479498	1					
ANR	1479565	Argument	OP_lengths		1479498	0					
ANR	1479566	Identifier	OP_lengths		1479498	0					
ANR	1479567	Identifier	OP_CALLOUT		1479498	1					
ANR	1479568	SwitchStatement	switch ( * scode )		1479498	2					
ANR	1479569	Condition	* scode	8576:13:282881:282886	1479498	0	True				
ANR	1479570	UnaryOperationExpression	* scode		1479498	0					
ANR	1479571	UnaryOperator	*		1479498	0					
ANR	1479572	Identifier	scode		1479498	1					
ANR	1479573	CompoundStatement		17:7:572:572	1479498	1					
ANR	1479574	Label	case OP_CREF :	8578:7:282905:282917	1479498	0	True				
ANR	1479575	Identifier	OP_CREF		1479498	0					
ANR	1479576	Label	case OP_DNCREF :	8579:7:282926:282940	1479498	1	True				
ANR	1479577	Identifier	OP_DNCREF		1479498	0					
ANR	1479578	Label	case OP_RREF :	8580:7:282949:282961	1479498	2	True				
ANR	1479579	Identifier	OP_RREF		1479498	0					
ANR	1479580	Label	case OP_DNRREF :	8581:7:282970:282984	1479498	3	True				
ANR	1479581	Identifier	OP_DNRREF		1479498	0					
ANR	1479582	Label	case OP_DEF :	8582:7:282993:283004	1479498	4	True				
ANR	1479583	Identifier	OP_DEF		1479498	0					
ANR	1479584	Label	case OP_FAIL :	8583:7:283013:283025	1479498	5	True				
ANR	1479585	Identifier	OP_FAIL		1479498	0					
ANR	1479586	ReturnStatement	return FALSE ;	8584:7:283034:283046	1479498	6	True				
ANR	1479587	Identifier	FALSE		1479498	0					
ANR	1479588	Label	default :	8586:7:283056:283063	1479498	7	True				
ANR	1479589	Identifier	default		1479498	0					
ANR	1479590	IfStatement	"if ( ! is_startline ( scode , bracket_map , cd , atomcount ) )"		1479498	8					
ANR	1479591	Condition	"! is_startline ( scode , bracket_map , cd , atomcount )"	8587:11:283096:283143	1479498	0	True				
ANR	1479592	UnaryOperationExpression	"! is_startline ( scode , bracket_map , cd , atomcount )"		1479498	0					
ANR	1479593	UnaryOperator	!		1479498	0					
ANR	1479594	CallExpression	"is_startline ( scode , bracket_map , cd , atomcount )"		1479498	1					
ANR	1479595	Callee	is_startline		1479498	0					
ANR	1479596	Identifier	is_startline		1479498	0					
ANR	1479597	ArgumentList	scode		1479498	1					
ANR	1479598	Argument	scode		1479498	0					
ANR	1479599	Identifier	scode		1479498	0					
ANR	1479600	Argument	bracket_map		1479498	1					
ANR	1479601	Identifier	bracket_map		1479498	0					
ANR	1479602	Argument	cd		1479498	2					
ANR	1479603	Identifier	cd		1479498	0					
ANR	1479604	Argument	atomcount		1479498	3					
ANR	1479605	Identifier	atomcount		1479498	0					
ANR	1479606	ReturnStatement	return FALSE ;	8587:61:283146:283158	1479498	1	True				
ANR	1479607	Identifier	FALSE		1479498	0					
ANR	1479608	DoStatement	do		1479498	9					
ANR	1479609	ExpressionStatement	"scode += GET ( scode , 1 )"	8588:10:283170:283192	1479498	0	True				
ANR	1479610	AssignmentExpression	"scode += GET ( scode , 1 )"		1479498	0		+=			
ANR	1479611	Identifier	scode		1479498	0					
ANR	1479612	CallExpression	"GET ( scode , 1 )"		1479498	1					
ANR	1479613	Callee	GET		1479498	0					
ANR	1479614	Identifier	GET		1479498	0					
ANR	1479615	ArgumentList	scode		1479498	1					
ANR	1479616	Argument	scode		1479498	0					
ANR	1479617	Identifier	scode		1479498	0					
ANR	1479618	Argument	1		1479498	1					
ANR	1479619	PrimaryExpression	1		1479498	0					
ANR	1479620	Condition	* scode == OP_ALT	8588:41:283201:283216	1479498	1	True				
ANR	1479621	EqualityExpression	* scode == OP_ALT		1479498	0		==			
ANR	1479622	UnaryOperationExpression	* scode		1479498	0					
ANR	1479623	UnaryOperator	*		1479498	0					
ANR	1479624	Identifier	scode		1479498	1					
ANR	1479625	Identifier	OP_ALT		1479498	1					
ANR	1479626	ExpressionStatement	scode += 1 + LINK_SIZE	8589:7:283227:283249	1479498	10	True				
ANR	1479627	AssignmentExpression	scode += 1 + LINK_SIZE		1479498	0		+=			
ANR	1479628	Identifier	scode		1479498	0					
ANR	1479629	AdditiveExpression	1 + LINK_SIZE		1479498	1		+			
ANR	1479630	PrimaryExpression	1		1479498	0					
ANR	1479631	Identifier	LINK_SIZE		1479498	1					
ANR	1479632	BreakStatement	break ;	8590:7:283258:283263	1479498	11	True				
ANR	1479633	ExpressionStatement	"scode = first_significant_code ( scode , FALSE )"	8592:5:283279:283323	1479498	3	True				
ANR	1479634	AssignmentExpression	"scode = first_significant_code ( scode , FALSE )"		1479498	0		=			
ANR	1479635	Identifier	scode		1479498	0					
ANR	1479636	CallExpression	"first_significant_code ( scode , FALSE )"		1479498	1					
ANR	1479637	Callee	first_significant_code		1479498	0					
ANR	1479638	Identifier	first_significant_code		1479498	0					
ANR	1479639	ArgumentList	scode		1479498	1					
ANR	1479640	Argument	scode		1479498	0					
ANR	1479641	Identifier	scode		1479498	0					
ANR	1479642	Argument	FALSE		1479498	1					
ANR	1479643	Identifier	FALSE		1479498	0					
ANR	1479644	ExpressionStatement	op = * scode	8593:5:283330:283341	1479498	4	True				
ANR	1479645	AssignmentExpression	op = * scode		1479498	0		=			
ANR	1479646	Identifier	op		1479498	0					
ANR	1479647	UnaryOperationExpression	* scode		1479498	1					
ANR	1479648	UnaryOperator	*		1479498	0					
ANR	1479649	Identifier	scode		1479498	1					
ANR	1479650	IfStatement	if ( op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS )		1479498	4					
ANR	1479651	Condition	op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS	8598:7:283391:283466	1479498	0	True				
ANR	1479652	OrExpression	op == OP_BRA || op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS		1479498	0		||			
ANR	1479653	EqualityExpression	op == OP_BRA		1479498	0		==			
ANR	1479654	Identifier	op		1479498	0					
ANR	1479655	Identifier	OP_BRA		1479498	1					
ANR	1479656	OrExpression	op == OP_BRAPOS || op == OP_SBRA || op == OP_SBRAPOS		1479498	1		||			
ANR	1479657	EqualityExpression	op == OP_BRAPOS		1479498	0		==			
ANR	1479658	Identifier	op		1479498	0					
ANR	1479659	Identifier	OP_BRAPOS		1479498	1					
ANR	1479660	OrExpression	op == OP_SBRA || op == OP_SBRAPOS		1479498	1		||			
ANR	1479661	EqualityExpression	op == OP_SBRA		1479498	0		==			
ANR	1479662	Identifier	op		1479498	0					
ANR	1479663	Identifier	OP_SBRA		1479498	1					
ANR	1479664	EqualityExpression	op == OP_SBRAPOS		1479498	1		==			
ANR	1479665	Identifier	op		1479498	0					
ANR	1479666	Identifier	OP_SBRAPOS		1479498	1					
ANR	1479667	CompoundStatement		40:5:1150:1150	1479498	1					
ANR	1479668	IfStatement	"if ( ! is_startline ( scode , bracket_map , cd , atomcount ) )"		1479498	0					
ANR	1479669	Condition	"! is_startline ( scode , bracket_map , cd , atomcount )"	8601:9:283485:283532	1479498	0	True				
ANR	1479670	UnaryOperationExpression	"! is_startline ( scode , bracket_map , cd , atomcount )"		1479498	0					
ANR	1479671	UnaryOperator	!		1479498	0					
ANR	1479672	CallExpression	"is_startline ( scode , bracket_map , cd , atomcount )"		1479498	1					
ANR	1479673	Callee	is_startline		1479498	0					
ANR	1479674	Identifier	is_startline		1479498	0					
ANR	1479675	ArgumentList	scode		1479498	1					
ANR	1479676	Argument	scode		1479498	0					
ANR	1479677	Identifier	scode		1479498	0					
ANR	1479678	Argument	bracket_map		1479498	1					
ANR	1479679	Identifier	bracket_map		1479498	0					
ANR	1479680	Argument	cd		1479498	2					
ANR	1479681	Identifier	cd		1479498	0					
ANR	1479682	Argument	atomcount		1479498	3					
ANR	1479683	Identifier	atomcount		1479498	0					
ANR	1479684	ReturnStatement	return FALSE ;	8601:59:283535:283547	1479498	1	True				
ANR	1479685	Identifier	FALSE		1479498	0					
ANR	1479686	ElseStatement	else		1479498	0					
ANR	1479687	IfStatement	if ( op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS )		1479498	0					
ANR	1479688	Condition	op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS	8606:12:283598:283682	1479498	0	True				
ANR	1479689	OrExpression	op == OP_CBRA || op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS		1479498	0		||			
ANR	1479690	EqualityExpression	op == OP_CBRA		1479498	0		==			
ANR	1479691	Identifier	op		1479498	0					
ANR	1479692	Identifier	OP_CBRA		1479498	1					
ANR	1479693	OrExpression	op == OP_CBRAPOS || op == OP_SCBRA || op == OP_SCBRAPOS		1479498	1		||			
ANR	1479694	EqualityExpression	op == OP_CBRAPOS		1479498	0		==			
ANR	1479695	Identifier	op		1479498	0					
ANR	1479696	Identifier	OP_CBRAPOS		1479498	1					
ANR	1479697	OrExpression	op == OP_SCBRA || op == OP_SCBRAPOS		1479498	1		||			
ANR	1479698	EqualityExpression	op == OP_SCBRA		1479498	0		==			
ANR	1479699	Identifier	op		1479498	0					
ANR	1479700	Identifier	OP_SCBRA		1479498	1					
ANR	1479701	EqualityExpression	op == OP_SCBRAPOS		1479498	1		==			
ANR	1479702	Identifier	op		1479498	0					
ANR	1479703	Identifier	OP_SCBRAPOS		1479498	1					
ANR	1479704	CompoundStatement		50:5:1412:1464	1479498	1					
ANR	1479705	IdentifierDeclStatement	"int n = GET2 ( scode , 1 + LINK_SIZE ) ;"	8609:5:283697:283729	1479498	0	True				
ANR	1479706	IdentifierDecl	"n = GET2 ( scode , 1 + LINK_SIZE )"		1479498	0					
ANR	1479707	IdentifierDeclType	int		1479498	0					
ANR	1479708	Identifier	n		1479498	1					
ANR	1479709	AssignmentExpression	"n = GET2 ( scode , 1 + LINK_SIZE )"		1479498	2		=			
ANR	1479710	Identifier	n		1479498	0					
ANR	1479711	CallExpression	"GET2 ( scode , 1 + LINK_SIZE )"		1479498	1					
ANR	1479712	Callee	GET2		1479498	0					
ANR	1479713	Identifier	GET2		1479498	0					
ANR	1479714	ArgumentList	scode		1479498	1					
ANR	1479715	Argument	scode		1479498	0					
ANR	1479716	Identifier	scode		1479498	0					
ANR	1479717	Argument	1 + LINK_SIZE		1479498	1					
ANR	1479718	AdditiveExpression	1 + LINK_SIZE		1479498	0		+			
ANR	1479719	PrimaryExpression	1		1479498	0					
ANR	1479720	Identifier	LINK_SIZE		1479498	1					
ANR	1479721	IdentifierDeclStatement	int new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 ) ;	8610:5:283736:283788	1479498	1	True				
ANR	1479722	IdentifierDecl	new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		1479498	0					
ANR	1479723	IdentifierDeclType	int		1479498	0					
ANR	1479724	Identifier	new_map		1479498	1					
ANR	1479725	AssignmentExpression	new_map = bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		1479498	2		=			
ANR	1479726	Identifier	new_map		1479498	0					
ANR	1479727	InclusiveOrExpression	bracket_map | ( ( n < 32 ) ? ( 1 << n ) : 1 )		1479498	1		|			
ANR	1479728	Identifier	bracket_map		1479498	0					
ANR	1479729	ConditionalExpression	( n < 32 ) ? ( 1 << n ) : 1		1479498	1					
ANR	1479730	Condition	n < 32		1479498	0					
ANR	1479731	RelationalExpression	n < 32		1479498	0		<			
ANR	1479732	Identifier	n		1479498	0					
ANR	1479733	PrimaryExpression	32		1479498	1					
ANR	1479734	ShiftExpression	1 << n		1479498	1		<<			
ANR	1479735	PrimaryExpression	1		1479498	0					
ANR	1479736	Identifier	n		1479498	1					
ANR	1479737	PrimaryExpression	1		1479498	2					
ANR	1479738	IfStatement	"if ( ! is_startline ( scode , new_map , cd , atomcount ) )"		1479498	2					
ANR	1479739	Condition	"! is_startline ( scode , new_map , cd , atomcount )"	8611:9:283799:283842	1479498	0	True				
ANR	1479740	UnaryOperationExpression	"! is_startline ( scode , new_map , cd , atomcount )"		1479498	0					
ANR	1479741	UnaryOperator	!		1479498	0					
ANR	1479742	CallExpression	"is_startline ( scode , new_map , cd , atomcount )"		1479498	1					
ANR	1479743	Callee	is_startline		1479498	0					
ANR	1479744	Identifier	is_startline		1479498	0					
ANR	1479745	ArgumentList	scode		1479498	1					
ANR	1479746	Argument	scode		1479498	0					
ANR	1479747	Identifier	scode		1479498	0					
ANR	1479748	Argument	new_map		1479498	1					
ANR	1479749	Identifier	new_map		1479498	0					
ANR	1479750	Argument	cd		1479498	2					
ANR	1479751	Identifier	cd		1479498	0					
ANR	1479752	Argument	atomcount		1479498	3					
ANR	1479753	Identifier	atomcount		1479498	0					
ANR	1479754	ReturnStatement	return FALSE ;	8611:55:283845:283857	1479498	1	True				
ANR	1479755	Identifier	FALSE		1479498	0					
ANR	1479756	ElseStatement	else		1479498	0					
ANR	1479757	IfStatement	if ( op == OP_ASSERT )		1479498	0					
ANR	1479758	Condition	op == OP_ASSERT	8616:12:283917:283931	1479498	0	True				
ANR	1479759	EqualityExpression	op == OP_ASSERT		1479498	0		==			
ANR	1479760	Identifier	op		1479498	0					
ANR	1479761	Identifier	OP_ASSERT		1479498	1					
ANR	1479762	CompoundStatement		57:5:1615:1615	1479498	1					
ANR	1479763	IfStatement	"if ( ! is_startline ( scode , bracket_map , cd , atomcount ) )"		1479498	0					
ANR	1479764	Condition	"! is_startline ( scode , bracket_map , cd , atomcount )"	8618:9:283950:283997	1479498	0	True				
ANR	1479765	UnaryOperationExpression	"! is_startline ( scode , bracket_map , cd , atomcount )"		1479498	0					
ANR	1479766	UnaryOperator	!		1479498	0					
ANR	1479767	CallExpression	"is_startline ( scode , bracket_map , cd , atomcount )"		1479498	1					
ANR	1479768	Callee	is_startline		1479498	0					
ANR	1479769	Identifier	is_startline		1479498	0					
ANR	1479770	ArgumentList	scode		1479498	1					
ANR	1479771	Argument	scode		1479498	0					
ANR	1479772	Identifier	scode		1479498	0					
ANR	1479773	Argument	bracket_map		1479498	1					
ANR	1479774	Identifier	bracket_map		1479498	0					
ANR	1479775	Argument	cd		1479498	2					
ANR	1479776	Identifier	cd		1479498	0					
ANR	1479777	Argument	atomcount		1479498	3					
ANR	1479778	Identifier	atomcount		1479498	0					
ANR	1479779	ReturnStatement	return FALSE ;	8618:59:284000:284012	1479498	1	True				
ANR	1479780	Identifier	FALSE		1479498	0					
ANR	1479781	ElseStatement	else		1479498	0					
ANR	1479782	IfStatement	if ( op == OP_ONCE || op == OP_ONCE_NC )		1479498	0					
ANR	1479783	Condition	op == OP_ONCE || op == OP_ONCE_NC	8623:12:284060:284092	1479498	0	True				
ANR	1479784	OrExpression	op == OP_ONCE || op == OP_ONCE_NC		1479498	0		||			
ANR	1479785	EqualityExpression	op == OP_ONCE		1479498	0		==			
ANR	1479786	Identifier	op		1479498	0					
ANR	1479787	Identifier	OP_ONCE		1479498	1					
ANR	1479788	EqualityExpression	op == OP_ONCE_NC		1479498	1		==			
ANR	1479789	Identifier	op		1479498	0					
ANR	1479790	Identifier	OP_ONCE_NC		1479498	1					
ANR	1479791	CompoundStatement		64:5:1776:1776	1479498	1					
ANR	1479792	IfStatement	"if ( ! is_startline ( scode , bracket_map , cd , atomcount + 1 ) )"		1479498	0					
ANR	1479793	Condition	"! is_startline ( scode , bracket_map , cd , atomcount + 1 )"	8625:9:284111:284162	1479498	0	True				
ANR	1479794	UnaryOperationExpression	"! is_startline ( scode , bracket_map , cd , atomcount + 1 )"		1479498	0					
ANR	1479795	UnaryOperator	!		1479498	0					
ANR	1479796	CallExpression	"is_startline ( scode , bracket_map , cd , atomcount + 1 )"		1479498	1					
ANR	1479797	Callee	is_startline		1479498	0					
ANR	1479798	Identifier	is_startline		1479498	0					
ANR	1479799	ArgumentList	scode		1479498	1					
ANR	1479800	Argument	scode		1479498	0					
ANR	1479801	Identifier	scode		1479498	0					
ANR	1479802	Argument	bracket_map		1479498	1					
ANR	1479803	Identifier	bracket_map		1479498	0					
ANR	1479804	Argument	cd		1479498	2					
ANR	1479805	Identifier	cd		1479498	0					
ANR	1479806	Argument	atomcount + 1		1479498	3					
ANR	1479807	AdditiveExpression	atomcount + 1		1479498	0		+			
ANR	1479808	Identifier	atomcount		1479498	0					
ANR	1479809	PrimaryExpression	1		1479498	1					
ANR	1479810	ReturnStatement	return FALSE ;	8625:63:284165:284177	1479498	1	True				
ANR	1479811	Identifier	FALSE		1479498	0					
ANR	1479812	ElseStatement	else		1479498	0					
ANR	1479813	IfStatement	if ( op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR )		1479498	0					
ANR	1479814	Condition	op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR	8634:12:284532:284596	1479498	0	True				
ANR	1479815	OrExpression	op == OP_TYPESTAR || op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR		1479498	0		||			
ANR	1479816	EqualityExpression	op == OP_TYPESTAR		1479498	0		==			
ANR	1479817	Identifier	op		1479498	0					
ANR	1479818	Identifier	OP_TYPESTAR		1479498	1					
ANR	1479819	OrExpression	op == OP_TYPEMINSTAR || op == OP_TYPEPOSSTAR		1479498	1		||			
ANR	1479820	EqualityExpression	op == OP_TYPEMINSTAR		1479498	0		==			
ANR	1479821	Identifier	op		1479498	0					
ANR	1479822	Identifier	OP_TYPEMINSTAR		1479498	1					
ANR	1479823	EqualityExpression	op == OP_TYPEPOSSTAR		1479498	1		==			
ANR	1479824	Identifier	op		1479498	0					
ANR	1479825	Identifier	OP_TYPEPOSSTAR		1479498	1					
ANR	1479826	CompoundStatement		75:5:2280:2280	1479498	1					
ANR	1479827	IfStatement	if ( scode [ 1 ] != OP_ANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip )		1479498	0					
ANR	1479828	Condition	scode [ 1 ] != OP_ANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip	8636:9:284615:284721	1479498	0	True				
ANR	1479829	OrExpression	scode [ 1 ] != OP_ANY || ( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip		1479498	0		||			
ANR	1479830	EqualityExpression	scode [ 1 ] != OP_ANY		1479498	0		!=			
ANR	1479831	ArrayIndexing	scode [ 1 ]		1479498	0					
ANR	1479832	Identifier	scode		1479498	0					
ANR	1479833	PrimaryExpression	1		1479498	1					
ANR	1479834	Identifier	OP_ANY		1479498	1					
ANR	1479835	OrExpression	( bracket_map & cd -> backref_map ) != 0 || atomcount > 0 || cd -> had_pruneorskip		1479498	1		||			
ANR	1479836	EqualityExpression	( bracket_map & cd -> backref_map ) != 0		1479498	0		!=			
ANR	1479837	BitAndExpression	bracket_map & cd -> backref_map		1479498	0		&			
ANR	1479838	Identifier	bracket_map		1479498	0					
ANR	1479839	PtrMemberAccess	cd -> backref_map		1479498	1					
ANR	1479840	Identifier	cd		1479498	0					
ANR	1479841	Identifier	backref_map		1479498	1					
ANR	1479842	PrimaryExpression	0		1479498	1					
ANR	1479843	OrExpression	atomcount > 0 || cd -> had_pruneorskip		1479498	1		||			
ANR	1479844	RelationalExpression	atomcount > 0		1479498	0		>			
ANR	1479845	Identifier	atomcount		1479498	0					
ANR	1479846	PrimaryExpression	0		1479498	1					
ANR	1479847	PtrMemberAccess	cd -> had_pruneorskip		1479498	1					
ANR	1479848	Identifier	cd		1479498	0					
ANR	1479849	Identifier	had_pruneorskip		1479498	1					
ANR	1479850	ReturnStatement	return FALSE ;	8638:7:284731:284743	1479498	1	True				
ANR	1479851	Identifier	FALSE		1479498	0					
ANR	1479852	ElseStatement	else		1479498	0					
ANR	1479853	IfStatement	if ( op != OP_CIRC && op != OP_CIRCM )		1479498	0					
ANR	1479854	Condition	op != OP_CIRC && op != OP_CIRCM	8646:12:285007:285037	1479498	0	True				
ANR	1479855	AndExpression	op != OP_CIRC && op != OP_CIRCM		1479498	0		&&			
ANR	1479856	EqualityExpression	op != OP_CIRC		1479498	0		!=			
ANR	1479857	Identifier	op		1479498	0					
ANR	1479858	Identifier	OP_CIRC		1479498	1					
ANR	1479859	EqualityExpression	op != OP_CIRCM		1479498	1		!=			
ANR	1479860	Identifier	op		1479498	0					
ANR	1479861	Identifier	OP_CIRCM		1479498	1					
ANR	1479862	ReturnStatement	return FALSE ;	8646:45:285040:285052	1479498	1	True				
ANR	1479863	Identifier	FALSE		1479498	0					
ANR	1479864	ExpressionStatement	"code += GET ( code , 1 )"	8650:3:285100:285120	1479498	5	True				
ANR	1479865	AssignmentExpression	"code += GET ( code , 1 )"		1479498	0		+=			
ANR	1479866	Identifier	code		1479498	0					
ANR	1479867	CallExpression	"GET ( code , 1 )"		1479498	1					
ANR	1479868	Callee	GET		1479498	0					
ANR	1479869	Identifier	GET		1479498	0					
ANR	1479870	ArgumentList	code		1479498	1					
ANR	1479871	Argument	code		1479498	0					
ANR	1479872	Identifier	code		1479498	0					
ANR	1479873	Argument	1		1479498	1					
ANR	1479874	PrimaryExpression	1		1479498	0					
ANR	1479875	Condition	* code == OP_ALT	8652:7:285134:285148	1479498	1	True				
ANR	1479876	EqualityExpression	* code == OP_ALT		1479498	0		==			
ANR	1479877	UnaryOperationExpression	* code		1479498	0					
ANR	1479878	UnaryOperator	*		1479498	0					
ANR	1479879	Identifier	code		1479498	1					
ANR	1479880	Identifier	OP_ALT		1479498	1					
ANR	1479881	ReturnStatement	return TRUE ;	8653:0:285185:285196	1479498	1	True				
ANR	1479882	Identifier	TRUE		1479498	0					
ANR	1479883	ReturnType	static BOOL		1479498	1					
ANR	1479884	Identifier	is_startline		1479498	2					
ANR	1479885	ParameterList	"const pcre_uchar * code , unsigned int bracket_map , compile_data * cd , int atomcount"		1479498	3					
ANR	1479886	Parameter	const pcre_uchar * code	8559:13:282238:282259	1479498	0	True				
ANR	1479887	ParameterType	const pcre_uchar *		1479498	0					
ANR	1479888	Identifier	code		1479498	1					
ANR	1479889	Parameter	unsigned int bracket_map	8559:37:282262:282285	1479498	1	True				
ANR	1479890	ParameterType	unsigned int		1479498	0					
ANR	1479891	Identifier	bracket_map		1479498	1					
ANR	1479892	Parameter	compile_data * cd	8560:2:282290:282305	1479498	2	True				
ANR	1479893	ParameterType	compile_data *		1479498	0					
ANR	1479894	Identifier	cd		1479498	1					
ANR	1479895	Parameter	int atomcount	8560:20:282308:282320	1479498	3	True				
ANR	1479896	ParameterType	int		1479498	0					
ANR	1479897	Identifier	atomcount		1479498	1					
ANR	1479898	CFGEntryNode	ENTRY		1479498		True				
ANR	1479899	CFGExitNode	EXIT		1479498		True				
ANR	1479900	Symbol	code		1479498						
ANR	1479901	Symbol	* cd		1479498						
ANR	1479902	Symbol	OP_CBRA		1479498						
ANR	1479903	Symbol	OP_ONCE_NC		1479498						
ANR	1479904	Symbol	OP_ALT		1479498						
ANR	1479905	Symbol	PRIV		1479498						
ANR	1479906	Symbol	* * code		1479498						
ANR	1479907	Symbol	OP_ANY		1479498						
ANR	1479908	Symbol	* scode		1479498						
ANR	1479909	Symbol	OP_TYPEMINSTAR		1479498						
ANR	1479910	Symbol	first_significant_code		1479498						
ANR	1479911	Symbol	OP_CBRAPOS		1479498						
ANR	1479912	Symbol	OP_SBRAPOS		1479498						
ANR	1479913	Symbol	GET2		1479498						
ANR	1479914	Symbol	OP_TYPEPOSSTAR		1479498						
ANR	1479915	Symbol	OP_CIRC		1479498						
ANR	1479916	Symbol	cd		1479498						
ANR	1479917	Symbol	op		1479498						
ANR	1479918	Symbol	OP_SCBRAPOS		1479498						
ANR	1479919	Symbol	bracket_map		1479498						
ANR	1479920	Symbol	scode		1479498						
ANR	1479921	Symbol	OP_CIRCM		1479498						
ANR	1479922	Symbol	OP_CALLOUT		1479498						
ANR	1479923	Symbol	TRUE		1479498						
ANR	1479924	Symbol	OP_COND		1479498						
ANR	1479925	Symbol	OP_ASSERT		1479498						
ANR	1479926	Symbol	OP_SBRA		1479498						
ANR	1479927	Symbol	n		1479498						
ANR	1479928	Symbol	atomcount		1479498						
ANR	1479929	Symbol	LINK_SIZE		1479498						
ANR	1479930	Symbol	OP_BRAPOS		1479498						
ANR	1479931	Symbol	OP_ONCE		1479498						
ANR	1479932	Symbol	* PRIV		1479498						
ANR	1479933	Symbol	OP_BRA		1479498						
ANR	1479934	Symbol	cd -> had_pruneorskip		1479498						
ANR	1479935	Symbol	GET		1479498						
ANR	1479936	Symbol	FALSE		1479498						
ANR	1479937	Symbol	OP_lengths		1479498						
ANR	1479938	Symbol	OP_TYPESTAR		1479498						
ANR	1479939	Symbol	is_startline		1479498						
ANR	1479940	Symbol	new_map		1479498						
ANR	1479941	Symbol	cd -> backref_map		1479498						
ANR	1479942	Symbol	* code		1479498						
ANR	1479943	Symbol	* OP_CALLOUT		1479498						
ANR	1479944	Symbol	OP_SCBRA		1479498						
ANR	1479945	Function	find_firstassertedchar	8679:0:286189:287783							
ANR	1479946	FunctionDef	"find_firstassertedchar (const pcre_uchar * code , pcre_int32 * flags , BOOL inassert)"		1479945	0					
ANR	1479947	CompoundStatement		8682:0:286291:287783	1479945	0					
ANR	1479948	Statement	register	8683:0:286293:286300	1479945	0	True				
ANR	1479949	IdentifierDeclStatement	pcre_uint32 c = 0 ;	8683:9:286302:286319	1479945	1	True				
ANR	1479950	IdentifierDecl	c = 0		1479945	0					
ANR	1479951	IdentifierDeclType	pcre_uint32		1479945	0					
ANR	1479952	Identifier	c		1479945	1					
ANR	1479953	AssignmentExpression	c = 0		1479945	2		=			
ANR	1479954	Identifier	c		1479945	0					
ANR	1479955	PrimaryExpression	0		1479945	1					
ANR	1479956	IdentifierDeclStatement	int cflags = REQ_NONE ;	8684:0:286321:286342	1479945	2	True				
ANR	1479957	IdentifierDecl	cflags = REQ_NONE		1479945	0					
ANR	1479958	IdentifierDeclType	int		1479945	0					
ANR	1479959	Identifier	cflags		1479945	1					
ANR	1479960	AssignmentExpression	cflags = REQ_NONE		1479945	2		=			
ANR	1479961	Identifier	REQ_NONE		1479945	0					
ANR	1479962	Identifier	REQ_NONE		1479945	1					
ANR	1479963	ExpressionStatement	* flags = REQ_NONE	8686:0:286345:286362	1479945	3	True				
ANR	1479964	AssignmentExpression	* flags = REQ_NONE		1479945	0		=			
ANR	1479965	UnaryOperationExpression	* flags		1479945	0					
ANR	1479966	UnaryOperator	*		1479945	0					
ANR	1479967	Identifier	flags		1479945	1					
ANR	1479968	Identifier	REQ_NONE		1479945	1					
ANR	1479969	DoStatement	do		1479945	4					
ANR	1479970	CompoundStatement		13:12:337:359	1479945	0					
ANR	1479971	IdentifierDeclStatement	pcre_uint32 d ;	8688:3:286372:286385	1479945	0	True				
ANR	1479972	IdentifierDecl	d		1479945	0					
ANR	1479973	IdentifierDeclType	pcre_uint32		1479945	0					
ANR	1479974	Identifier	d		1479945	1					
ANR	1479975	IdentifierDeclStatement	int dflags ;	8689:3:286390:286400	1479945	1	True				
ANR	1479976	IdentifierDecl	dflags		1479945	0					
ANR	1479977	IdentifierDeclType	int		1479945	0					
ANR	1479978	Identifier	dflags		1479945	1					
ANR	1479979	IdentifierDeclStatement	int xl = ( * code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS ) ? IMM2_SIZE : 0 ;	8690:3:286405:286526	1479945	2	True				
ANR	1479980	IdentifierDecl	xl = ( * code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS ) ? IMM2_SIZE : 0		1479945	0					
ANR	1479981	IdentifierDeclType	int		1479945	0					
ANR	1479982	Identifier	xl		1479945	1					
ANR	1479983	AssignmentExpression	xl = ( * code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS ) ? IMM2_SIZE : 0		1479945	2		=			
ANR	1479984	Identifier	xl		1479945	0					
ANR	1479985	ConditionalExpression	( * code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS ) ? IMM2_SIZE : 0		1479945	1					
ANR	1479986	Condition	* code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS		1479945	0					
ANR	1479987	OrExpression	* code == OP_CBRA || * code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS		1479945	0		||			
ANR	1479988	EqualityExpression	* code == OP_CBRA		1479945	0		==			
ANR	1479989	UnaryOperationExpression	* code		1479945	0					
ANR	1479990	UnaryOperator	*		1479945	0					
ANR	1479991	Identifier	code		1479945	1					
ANR	1479992	Identifier	OP_CBRA		1479945	1					
ANR	1479993	OrExpression	* code == OP_SCBRA || * code == OP_CBRAPOS || * code == OP_SCBRAPOS		1479945	1		||			
ANR	1479994	EqualityExpression	* code == OP_SCBRA		1479945	0		==			
ANR	1479995	UnaryOperationExpression	* code		1479945	0					
ANR	1479996	UnaryOperator	*		1479945	0					
ANR	1479997	Identifier	code		1479945	1					
ANR	1479998	Identifier	OP_SCBRA		1479945	1					
ANR	1479999	OrExpression	* code == OP_CBRAPOS || * code == OP_SCBRAPOS		1479945	1		||			
ANR	1480000	EqualityExpression	* code == OP_CBRAPOS		1479945	0		==			
ANR	1480001	UnaryOperationExpression	* code		1479945	0					
ANR	1480002	UnaryOperator	*		1479945	0					
ANR	1480003	Identifier	code		1479945	1					
ANR	1480004	Identifier	OP_CBRAPOS		1479945	1					
ANR	1480005	EqualityExpression	* code == OP_SCBRAPOS		1479945	1		==			
ANR	1480006	UnaryOperationExpression	* code		1479945	0					
ANR	1480007	UnaryOperator	*		1479945	0					
ANR	1480008	Identifier	code		1479945	1					
ANR	1480009	Identifier	OP_SCBRAPOS		1479945	1					
ANR	1480010	Identifier	IMM2_SIZE		1479945	1					
ANR	1480011	PrimaryExpression	0		1479945	2					
ANR	1480012	IdentifierDeclStatement	"const pcre_uchar * scode = first_significant_code ( code + 1 + LINK_SIZE + xl , TRUE ) ;"	8692:3:286531:286615	1479945	3	True				
ANR	1480013	IdentifierDecl	"* scode = first_significant_code ( code + 1 + LINK_SIZE + xl , TRUE )"		1479945	0					
ANR	1480014	IdentifierDeclType	const pcre_uchar *		1479945	0					
ANR	1480015	Identifier	scode		1479945	1					
ANR	1480016	AssignmentExpression	"* scode = first_significant_code ( code + 1 + LINK_SIZE + xl , TRUE )"		1479945	2		=			
ANR	1480017	Identifier	scode		1479945	0					
ANR	1480018	CallExpression	"first_significant_code ( code + 1 + LINK_SIZE + xl , TRUE )"		1479945	1					
ANR	1480019	Callee	first_significant_code		1479945	0					
ANR	1480020	Identifier	first_significant_code		1479945	0					
ANR	1480021	ArgumentList	code + 1 + LINK_SIZE + xl		1479945	1					
ANR	1480022	Argument	code + 1 + LINK_SIZE + xl		1479945	0					
ANR	1480023	AdditiveExpression	code + 1 + LINK_SIZE + xl		1479945	0		+			
ANR	1480024	Identifier	code		1479945	0					
ANR	1480025	AdditiveExpression	1 + LINK_SIZE + xl		1479945	1		+			
ANR	1480026	PrimaryExpression	1		1479945	0					
ANR	1480027	AdditiveExpression	LINK_SIZE + xl		1479945	1		+			
ANR	1480028	Identifier	LINK_SIZE		1479945	0					
ANR	1480029	Identifier	xl		1479945	1					
ANR	1480030	Argument	TRUE		1479945	1					
ANR	1480031	Identifier	TRUE		1479945	0					
ANR	1480032	Statement	register	8694:3:286620:286627	1479945	4	True				
ANR	1480033	IdentifierDeclStatement	pcre_uchar op = * scode ;	8694:12:286629:286651	1479945	5	True				
ANR	1480034	IdentifierDecl	op = * scode		1479945	0					
ANR	1480035	IdentifierDeclType	pcre_uchar		1479945	0					
ANR	1480036	Identifier	op		1479945	1					
ANR	1480037	AssignmentExpression	op = * scode		1479945	2		=			
ANR	1480038	Identifier	op		1479945	0					
ANR	1480039	UnaryOperationExpression	* scode		1479945	1					
ANR	1480040	UnaryOperator	*		1479945	0					
ANR	1480041	Identifier	scode		1479945	1					
ANR	1480042	SwitchStatement	switch ( op )		1479945	6					
ANR	1480043	Condition	op	8696:10:286664:286665	1479945	0	True				
ANR	1480044	Identifier	op		1479945	0					
ANR	1480045	CompoundStatement		16:5:381:381	1479945	1					
ANR	1480046	Label	default :	8698:5:286680:286687	1479945	0	True				
ANR	1480047	Identifier	default		1479945	0					
ANR	1480048	ReturnStatement	return 0 ;	8699:5:286694:286702	1479945	1	True				
ANR	1480049	PrimaryExpression	0		1479945	0					
ANR	1480050	Label	case OP_BRA :	8701:5:286710:286721	1479945	2	True				
ANR	1480051	Identifier	OP_BRA		1479945	0					
ANR	1480052	Label	case OP_BRAPOS :	8702:5:286728:286742	1479945	3	True				
ANR	1480053	Identifier	OP_BRAPOS		1479945	0					
ANR	1480054	Label	case OP_CBRA :	8703:5:286749:286761	1479945	4	True				
ANR	1480055	Identifier	OP_CBRA		1479945	0					
ANR	1480056	Label	case OP_SCBRA :	8704:5:286768:286781	1479945	5	True				
ANR	1480057	Identifier	OP_SCBRA		1479945	0					
ANR	1480058	Label	case OP_CBRAPOS :	8705:5:286788:286803	1479945	6	True				
ANR	1480059	Identifier	OP_CBRAPOS		1479945	0					
ANR	1480060	Label	case OP_SCBRAPOS :	8706:5:286810:286826	1479945	7	True				
ANR	1480061	Identifier	OP_SCBRAPOS		1479945	0					
ANR	1480062	Label	case OP_ASSERT :	8707:5:286833:286847	1479945	8	True				
ANR	1480063	Identifier	OP_ASSERT		1479945	0					
ANR	1480064	Label	case OP_ONCE :	8708:5:286854:286866	1479945	9	True				
ANR	1480065	Identifier	OP_ONCE		1479945	0					
ANR	1480066	Label	case OP_ONCE_NC :	8709:5:286873:286888	1479945	10	True				
ANR	1480067	Identifier	OP_ONCE_NC		1479945	0					
ANR	1480068	ExpressionStatement	"d = find_firstassertedchar ( scode , & dflags , op == OP_ASSERT )"	8710:5:286895:286954	1479945	11	True				
ANR	1480069	AssignmentExpression	"d = find_firstassertedchar ( scode , & dflags , op == OP_ASSERT )"		1479945	0		=			
ANR	1480070	Identifier	d		1479945	0					
ANR	1480071	CallExpression	"find_firstassertedchar ( scode , & dflags , op == OP_ASSERT )"		1479945	1					
ANR	1480072	Callee	find_firstassertedchar		1479945	0					
ANR	1480073	Identifier	find_firstassertedchar		1479945	0					
ANR	1480074	ArgumentList	scode		1479945	1					
ANR	1480075	Argument	scode		1479945	0					
ANR	1480076	Identifier	scode		1479945	0					
ANR	1480077	Argument	& dflags		1479945	1					
ANR	1480078	UnaryOperationExpression	& dflags		1479945	0					
ANR	1480079	UnaryOperator	&		1479945	0					
ANR	1480080	Identifier	dflags		1479945	1					
ANR	1480081	Argument	op == OP_ASSERT		1479945	2					
ANR	1480082	EqualityExpression	op == OP_ASSERT		1479945	0		==			
ANR	1480083	Identifier	op		1479945	0					
ANR	1480084	Identifier	OP_ASSERT		1479945	1					
ANR	1480085	IfStatement	if ( dflags < 0 )		1479945	12					
ANR	1480086	Condition	dflags < 0	8711:9:286965:286974	1479945	0	True				
ANR	1480087	RelationalExpression	dflags < 0		1479945	0		<			
ANR	1480088	Identifier	dflags		1479945	0					
ANR	1480089	PrimaryExpression	0		1479945	1					
ANR	1480090	ReturnStatement	return 0 ;	8712:7:286984:286992	1479945	1	True				
ANR	1480091	PrimaryExpression	0		1479945	0					
ANR	1480092	IfStatement	if ( cflags < 0 )		1479945	13					
ANR	1480093	Condition	cflags < 0	8713:9:287003:287012	1479945	0	True				
ANR	1480094	RelationalExpression	cflags < 0		1479945	0		<			
ANR	1480095	Identifier	cflags		1479945	0					
ANR	1480096	PrimaryExpression	0		1479945	1					
ANR	1480097	CompoundStatement		32:21:723:723	1479945	1					
ANR	1480098	ExpressionStatement	c = d	8713:23:287017:287022	1479945	0	True				
ANR	1480099	AssignmentExpression	c = d		1479945	0		=			
ANR	1480100	Identifier	c		1479945	0					
ANR	1480101	Identifier	d		1479945	1					
ANR	1480102	ExpressionStatement	cflags = dflags	8713:30:287024:287039	1479945	1	True				
ANR	1480103	AssignmentExpression	cflags = dflags		1479945	0		=			
ANR	1480104	Identifier	cflags		1479945	0					
ANR	1480105	Identifier	dflags		1479945	1					
ANR	1480106	ElseStatement	else		1479945	0					
ANR	1480107	IfStatement	if ( c != d || cflags != dflags )		1479945	0					
ANR	1480108	Condition	c != d || cflags != dflags	8713:58:287052:287077	1479945	0	True				
ANR	1480109	OrExpression	c != d || cflags != dflags		1479945	0		||			
ANR	1480110	EqualityExpression	c != d		1479945	0		!=			
ANR	1480111	Identifier	c		1479945	0					
ANR	1480112	Identifier	d		1479945	1					
ANR	1480113	EqualityExpression	cflags != dflags		1479945	1		!=			
ANR	1480114	Identifier	cflags		1479945	0					
ANR	1480115	Identifier	dflags		1479945	1					
ANR	1480116	ReturnStatement	return 0 ;	8713:86:287080:287088	1479945	1	True				
ANR	1480117	PrimaryExpression	0		1479945	0					
ANR	1480118	BreakStatement	break ;	8714:5:287095:287100	1479945	14	True				
ANR	1480119	Label	case OP_EXACT :	8716:5:287108:287121	1479945	15	True				
ANR	1480120	Identifier	OP_EXACT		1479945	0					
ANR	1480121	ExpressionStatement	scode += IMM2_SIZE	8717:5:287128:287146	1479945	16	True				
ANR	1480122	AssignmentExpression	scode += IMM2_SIZE		1479945	0		+=			
ANR	1480123	Identifier	scode		1479945	0					
ANR	1480124	Identifier	IMM2_SIZE		1479945	1					
ANR	1480125	Label	case OP_CHAR :	8720:5:287178:287190	1479945	17	True				
ANR	1480126	Identifier	OP_CHAR		1479945	0					
ANR	1480127	Label	case OP_PLUS :	8721:5:287197:287209	1479945	18	True				
ANR	1480128	Identifier	OP_PLUS		1479945	0					
ANR	1480129	Label	case OP_MINPLUS :	8722:5:287216:287231	1479945	19	True				
ANR	1480130	Identifier	OP_MINPLUS		1479945	0					
ANR	1480131	Label	case OP_POSPLUS :	8723:5:287238:287253	1479945	20	True				
ANR	1480132	Identifier	OP_POSPLUS		1479945	0					
ANR	1480133	IfStatement	if ( ! inassert )		1479945	21					
ANR	1480134	Condition	! inassert	8724:9:287264:287272	1479945	0	True				
ANR	1480135	UnaryOperationExpression	! inassert		1479945	0					
ANR	1480136	UnaryOperator	!		1479945	0					
ANR	1480137	Identifier	inassert		1479945	1					
ANR	1480138	ReturnStatement	return 0 ;	8724:20:287275:287283	1479945	1	True				
ANR	1480139	PrimaryExpression	0		1479945	0					
ANR	1480140	IfStatement	if ( cflags < 0 )		1479945	22					
ANR	1480141	Condition	cflags < 0	8725:9:287294:287303	1479945	0	True				
ANR	1480142	RelationalExpression	cflags < 0		1479945	0		<			
ANR	1480143	Identifier	cflags		1479945	0					
ANR	1480144	PrimaryExpression	0		1479945	1					
ANR	1480145	CompoundStatement		44:21:1014:1014	1479945	1					
ANR	1480146	ExpressionStatement	c = scode [ 1 ]	8725:23:287308:287320	1479945	0	True				
ANR	1480147	AssignmentExpression	c = scode [ 1 ]		1479945	0		=			
ANR	1480148	Identifier	c		1479945	0					
ANR	1480149	ArrayIndexing	scode [ 1 ]		1479945	1					
ANR	1480150	Identifier	scode		1479945	0					
ANR	1480151	PrimaryExpression	1		1479945	1					
ANR	1480152	ExpressionStatement	cflags = 0	8725:37:287322:287332	1479945	1	True				
ANR	1480153	AssignmentExpression	cflags = 0		1479945	0		=			
ANR	1480154	Identifier	cflags		1479945	0					
ANR	1480155	PrimaryExpression	0		1479945	1					
ANR	1480156	ElseStatement	else		1479945	0					
ANR	1480157	IfStatement	if ( c != scode [ 1 ] )		1479945	0					
ANR	1480158	Condition	c != scode [ 1 ]	8726:16:287352:287364	1479945	0	True				
ANR	1480159	EqualityExpression	c != scode [ 1 ]		1479945	0		!=			
ANR	1480160	Identifier	c		1479945	0					
ANR	1480161	ArrayIndexing	scode [ 1 ]		1479945	1					
ANR	1480162	Identifier	scode		1479945	0					
ANR	1480163	PrimaryExpression	1		1479945	1					
ANR	1480164	ReturnStatement	return 0 ;	8726:31:287367:287375	1479945	1	True				
ANR	1480165	PrimaryExpression	0		1479945	0					
ANR	1480166	BreakStatement	break ;	8727:5:287382:287387	1479945	23	True				
ANR	1480167	Label	case OP_EXACTI :	8729:5:287395:287409	1479945	24	True				
ANR	1480168	Identifier	OP_EXACTI		1479945	0					
ANR	1480169	ExpressionStatement	scode += IMM2_SIZE	8730:5:287416:287434	1479945	25	True				
ANR	1480170	AssignmentExpression	scode += IMM2_SIZE		1479945	0		+=			
ANR	1480171	Identifier	scode		1479945	0					
ANR	1480172	Identifier	IMM2_SIZE		1479945	1					
ANR	1480173	Label	case OP_CHARI :	8733:5:287466:287479	1479945	26	True				
ANR	1480174	Identifier	OP_CHARI		1479945	0					
ANR	1480175	Label	case OP_PLUSI :	8734:5:287486:287499	1479945	27	True				
ANR	1480176	Identifier	OP_PLUSI		1479945	0					
ANR	1480177	Label	case OP_MINPLUSI :	8735:5:287506:287522	1479945	28	True				
ANR	1480178	Identifier	OP_MINPLUSI		1479945	0					
ANR	1480179	Label	case OP_POSPLUSI :	8736:5:287529:287545	1479945	29	True				
ANR	1480180	Identifier	OP_POSPLUSI		1479945	0					
ANR	1480181	IfStatement	if ( ! inassert )		1479945	30					
ANR	1480182	Condition	! inassert	8737:9:287556:287564	1479945	0	True				
ANR	1480183	UnaryOperationExpression	! inassert		1479945	0					
ANR	1480184	UnaryOperator	!		1479945	0					
ANR	1480185	Identifier	inassert		1479945	1					
ANR	1480186	ReturnStatement	return 0 ;	8737:20:287567:287575	1479945	1	True				
ANR	1480187	PrimaryExpression	0		1479945	0					
ANR	1480188	IfStatement	if ( cflags < 0 )		1479945	31					
ANR	1480189	Condition	cflags < 0	8738:9:287586:287595	1479945	0	True				
ANR	1480190	RelationalExpression	cflags < 0		1479945	0		<			
ANR	1480191	Identifier	cflags		1479945	0					
ANR	1480192	PrimaryExpression	0		1479945	1					
ANR	1480193	CompoundStatement		57:21:1306:1306	1479945	1					
ANR	1480194	ExpressionStatement	c = scode [ 1 ]	8738:23:287600:287612	1479945	0	True				
ANR	1480195	AssignmentExpression	c = scode [ 1 ]		1479945	0		=			
ANR	1480196	Identifier	c		1479945	0					
ANR	1480197	ArrayIndexing	scode [ 1 ]		1479945	1					
ANR	1480198	Identifier	scode		1479945	0					
ANR	1480199	PrimaryExpression	1		1479945	1					
ANR	1480200	ExpressionStatement	cflags = REQ_CASELESS	8738:37:287614:287635	1479945	1	True				
ANR	1480201	AssignmentExpression	cflags = REQ_CASELESS		1479945	0		=			
ANR	1480202	Identifier	cflags		1479945	0					
ANR	1480203	Identifier	REQ_CASELESS		1479945	1					
ANR	1480204	ElseStatement	else		1479945	0					
ANR	1480205	IfStatement	if ( c != scode [ 1 ] )		1479945	0					
ANR	1480206	Condition	c != scode [ 1 ]	8739:16:287655:287667	1479945	0	True				
ANR	1480207	EqualityExpression	c != scode [ 1 ]		1479945	0		!=			
ANR	1480208	Identifier	c		1479945	0					
ANR	1480209	ArrayIndexing	scode [ 1 ]		1479945	1					
ANR	1480210	Identifier	scode		1479945	0					
ANR	1480211	PrimaryExpression	1		1479945	1					
ANR	1480212	ReturnStatement	return 0 ;	8739:31:287670:287678	1479945	1	True				
ANR	1480213	PrimaryExpression	0		1479945	0					
ANR	1480214	BreakStatement	break ;	8740:5:287685:287690	1479945	32	True				
ANR	1480215	ExpressionStatement	"code += GET ( code , 1 )"	8743:3:287703:287723	1479945	7	True				
ANR	1480216	AssignmentExpression	"code += GET ( code , 1 )"		1479945	0		+=			
ANR	1480217	Identifier	code		1479945	0					
ANR	1480218	CallExpression	"GET ( code , 1 )"		1479945	1					
ANR	1480219	Callee	GET		1479945	0					
ANR	1480220	Identifier	GET		1479945	0					
ANR	1480221	ArgumentList	code		1479945	1					
ANR	1480222	Argument	code		1479945	0					
ANR	1480223	Identifier	code		1479945	0					
ANR	1480224	Argument	1		1479945	1					
ANR	1480225	PrimaryExpression	1		1479945	0					
ANR	1480226	Condition	* code == OP_ALT	8745:7:287737:287751	1479945	1	True				
ANR	1480227	EqualityExpression	* code == OP_ALT		1479945	0		==			
ANR	1480228	UnaryOperationExpression	* code		1479945	0					
ANR	1480229	UnaryOperator	*		1479945	0					
ANR	1480230	Identifier	code		1479945	1					
ANR	1480231	Identifier	OP_ALT		1479945	1					
ANR	1480232	ExpressionStatement	* flags = cflags	8747:0:287756:287771	1479945	5	True				
ANR	1480233	AssignmentExpression	* flags = cflags		1479945	0		=			
ANR	1480234	UnaryOperationExpression	* flags		1479945	0					
ANR	1480235	UnaryOperator	*		1479945	0					
ANR	1480236	Identifier	flags		1479945	1					
ANR	1480237	Identifier	cflags		1479945	1					
ANR	1480238	ReturnStatement	return c ;	8748:0:287773:287781	1479945	6	True				
ANR	1480239	Identifier	c		1479945	0					
ANR	1480240	ReturnType	static pcre_uint32		1479945	1					
ANR	1480241	Identifier	find_firstassertedchar		1479945	2					
ANR	1480242	ParameterList	"const pcre_uchar * code , pcre_int32 * flags , BOOL inassert"		1479945	3					
ANR	1480243	Parameter	const pcre_uchar * code	8680:23:286231:286252	1479945	0	True				
ANR	1480244	ParameterType	const pcre_uchar *		1479945	0					
ANR	1480245	Identifier	code		1479945	1					
ANR	1480246	Parameter	pcre_int32 * flags	8680:47:286255:286271	1479945	1	True				
ANR	1480247	ParameterType	pcre_int32 *		1479945	0					
ANR	1480248	Identifier	flags		1479945	1					
ANR	1480249	Parameter	BOOL inassert	8681:2:286276:286288	1479945	2	True				
ANR	1480250	ParameterType	BOOL		1479945	0					
ANR	1480251	Identifier	inassert		1479945	1					
ANR	1480252	CFGEntryNode	ENTRY		1479945		True				
ANR	1480253	CFGExitNode	EXIT		1479945		True				
ANR	1480254	Symbol	find_firstassertedchar		1479945						
ANR	1480255	Symbol	code		1479945						
ANR	1480256	Symbol	OP_CBRA		1479945						
ANR	1480257	Symbol	flags		1479945						
ANR	1480258	Symbol	OP_ALT		1479945						
ANR	1480259	Symbol	REQ_CASELESS		1479945						
ANR	1480260	Symbol	* scode		1479945						
ANR	1480261	Symbol	dflags		1479945						
ANR	1480262	Symbol	OP_CBRAPOS		1479945						
ANR	1480263	Symbol	first_significant_code		1479945						
ANR	1480264	Symbol	REQ_NONE		1479945						
ANR	1480265	Symbol	* flags		1479945						
ANR	1480266	Symbol	OP_SCBRAPOS		1479945						
ANR	1480267	Symbol	op		1479945						
ANR	1480268	Symbol	c		1479945						
ANR	1480269	Symbol	scode		1479945						
ANR	1480270	Symbol	d		1479945						
ANR	1480271	Symbol	IMM2_SIZE		1479945						
ANR	1480272	Symbol	TRUE		1479945						
ANR	1480273	Symbol	OP_ASSERT		1479945						
ANR	1480274	Symbol	LINK_SIZE		1479945						
ANR	1480275	Symbol	inassert		1479945						
ANR	1480276	Symbol	xl		1479945						
ANR	1480277	Symbol	& dflags		1479945						
ANR	1480278	Symbol	GET		1479945						
ANR	1480279	Symbol	cflags		1479945						
ANR	1480280	Symbol	* code		1479945						
ANR	1480281	Symbol	OP_SCBRA		1479945						
ANR	1480282	Function	add_name	8770:0:288318:289330							
ANR	1480283	FunctionDef	"add_name (compile_data * cd , const pcre_uchar * name , int length , unsigned int groupno)"		1480282	0					
ANR	1480284	CompoundStatement		8773:0:288417:289330	1480282	0					
ANR	1480285	IdentifierDeclStatement	int i ;	8774:0:288419:288424	1480282	0	True				
ANR	1480286	IdentifierDecl	i		1480282	0					
ANR	1480287	IdentifierDeclType	int		1480282	0					
ANR	1480288	Identifier	i		1480282	1					
ANR	1480289	IdentifierDeclStatement	pcre_uchar * slot = cd -> name_table ;	8775:0:288426:288459	1480282	1	True				
ANR	1480290	IdentifierDecl	* slot = cd -> name_table		1480282	0					
ANR	1480291	IdentifierDeclType	pcre_uchar *		1480282	0					
ANR	1480292	Identifier	slot		1480282	1					
ANR	1480293	AssignmentExpression	* slot = cd -> name_table		1480282	2		=			
ANR	1480294	Identifier	slot		1480282	0					
ANR	1480295	PtrMemberAccess	cd -> name_table		1480282	1					
ANR	1480296	Identifier	cd		1480282	0					
ANR	1480297	Identifier	name_table		1480282	1					
ANR	1480298	ForStatement	for ( i = 0 ; i < cd -> names_found ; i ++ )		1480282	2					
ANR	1480299	ForInit	i = 0 ;	8777:5:288467:288472	1480282	0	True				
ANR	1480300	AssignmentExpression	i = 0		1480282	0		=			
ANR	1480301	Identifier	i		1480282	0					
ANR	1480302	PrimaryExpression	0		1480282	1					
ANR	1480303	Condition	i < cd -> names_found	8777:12:288474:288492	1480282	1	True				
ANR	1480304	RelationalExpression	i < cd -> names_found		1480282	0		<			
ANR	1480305	Identifier	i		1480282	0					
ANR	1480306	PtrMemberAccess	cd -> names_found		1480282	1					
ANR	1480307	Identifier	cd		1480282	0					
ANR	1480308	Identifier	names_found		1480282	1					
ANR	1480309	PostIncDecOperationExpression	i ++	8777:33:288495:288497	1480282	2	True				
ANR	1480310	Identifier	i		1480282	0					
ANR	1480311	IncDec	++		1480282	1					
ANR	1480312	CompoundStatement		7:2:88:145	1480282	3					
ANR	1480313	IdentifierDeclStatement	"int crc = memcmp ( name , slot + IMM2_SIZE , IN_UCHARS ( length ) ) ;"	8779:2:288506:288563	1480282	0	True				
ANR	1480314	IdentifierDecl	"crc = memcmp ( name , slot + IMM2_SIZE , IN_UCHARS ( length ) )"		1480282	0					
ANR	1480315	IdentifierDeclType	int		1480282	0					
ANR	1480316	Identifier	crc		1480282	1					
ANR	1480317	AssignmentExpression	"crc = memcmp ( name , slot + IMM2_SIZE , IN_UCHARS ( length ) )"		1480282	2		=			
ANR	1480318	Identifier	crc		1480282	0					
ANR	1480319	CallExpression	"memcmp ( name , slot + IMM2_SIZE , IN_UCHARS ( length ) )"		1480282	1					
ANR	1480320	Callee	memcmp		1480282	0					
ANR	1480321	Identifier	memcmp		1480282	0					
ANR	1480322	ArgumentList	name		1480282	1					
ANR	1480323	Argument	name		1480282	0					
ANR	1480324	Identifier	name		1480282	0					
ANR	1480325	Argument	slot + IMM2_SIZE		1480282	1					
ANR	1480326	AdditiveExpression	slot + IMM2_SIZE		1480282	0		+			
ANR	1480327	Identifier	slot		1480282	0					
ANR	1480328	Identifier	IMM2_SIZE		1480282	1					
ANR	1480329	Argument	IN_UCHARS ( length )		1480282	2					
ANR	1480330	CallExpression	IN_UCHARS ( length )		1480282	0					
ANR	1480331	Callee	IN_UCHARS		1480282	0					
ANR	1480332	Identifier	IN_UCHARS		1480282	0					
ANR	1480333	ArgumentList	length		1480282	1					
ANR	1480334	Argument	length		1480282	0					
ANR	1480335	Identifier	length		1480282	0					
ANR	1480336	IfStatement	if ( crc == 0 && slot [ IMM2_SIZE + length ] != 0 )		1480282	1					
ANR	1480337	Condition	crc == 0 && slot [ IMM2_SIZE + length ] != 0	8780:6:288571:288609	1480282	0	True				
ANR	1480338	AndExpression	crc == 0 && slot [ IMM2_SIZE + length ] != 0		1480282	0		&&			
ANR	1480339	EqualityExpression	crc == 0		1480282	0		==			
ANR	1480340	Identifier	crc		1480282	0					
ANR	1480341	PrimaryExpression	0		1480282	1					
ANR	1480342	EqualityExpression	slot [ IMM2_SIZE + length ] != 0		1480282	1		!=			
ANR	1480343	ArrayIndexing	slot [ IMM2_SIZE + length ]		1480282	0					
ANR	1480344	Identifier	slot		1480282	0					
ANR	1480345	AdditiveExpression	IMM2_SIZE + length		1480282	1		+			
ANR	1480346	Identifier	IMM2_SIZE		1480282	0					
ANR	1480347	Identifier	length		1480282	1					
ANR	1480348	PrimaryExpression	0		1480282	1					
ANR	1480349	ExpressionStatement	crc = - 1	8781:4:288616:288624	1480282	1	True				
ANR	1480350	AssignmentExpression	crc = - 1		1480282	0		=			
ANR	1480351	Identifier	crc		1480282	0					
ANR	1480352	UnaryOperationExpression	- 1		1480282	1					
ANR	1480353	UnaryOperator	-		1480282	0					
ANR	1480354	PrimaryExpression	1		1480282	1					
ANR	1480355	IfStatement	if ( crc < 0 )		1480282	2					
ANR	1480356	Condition	crc < 0	8788:6:288971:288977	1480282	0	True				
ANR	1480357	RelationalExpression	crc < 0		1480282	0		<			
ANR	1480358	Identifier	crc		1480282	0					
ANR	1480359	PrimaryExpression	0		1480282	1					
ANR	1480360	CompoundStatement		17:4:566:566	1480282	1					
ANR	1480361	ExpressionStatement	"memmove ( slot + cd -> name_entry_size , slot , IN_UCHARS ( ( cd -> names_found - i ) * cd -> name_entry_size ) )"	8790:4:288990:289093	1480282	0	True				
ANR	1480362	CallExpression	"memmove ( slot + cd -> name_entry_size , slot , IN_UCHARS ( ( cd -> names_found - i ) * cd -> name_entry_size ) )"		1480282	0					
ANR	1480363	Callee	memmove		1480282	0					
ANR	1480364	Identifier	memmove		1480282	0					
ANR	1480365	ArgumentList	slot + cd -> name_entry_size		1480282	1					
ANR	1480366	Argument	slot + cd -> name_entry_size		1480282	0					
ANR	1480367	AdditiveExpression	slot + cd -> name_entry_size		1480282	0		+			
ANR	1480368	Identifier	slot		1480282	0					
ANR	1480369	PtrMemberAccess	cd -> name_entry_size		1480282	1					
ANR	1480370	Identifier	cd		1480282	0					
ANR	1480371	Identifier	name_entry_size		1480282	1					
ANR	1480372	Argument	slot		1480282	1					
ANR	1480373	Identifier	slot		1480282	0					
ANR	1480374	Argument	IN_UCHARS ( ( cd -> names_found - i ) * cd -> name_entry_size )		1480282	2					
ANR	1480375	CallExpression	IN_UCHARS ( ( cd -> names_found - i ) * cd -> name_entry_size )		1480282	0					
ANR	1480376	Callee	IN_UCHARS		1480282	0					
ANR	1480377	Identifier	IN_UCHARS		1480282	0					
ANR	1480378	ArgumentList	( cd -> names_found - i ) * cd -> name_entry_size		1480282	1					
ANR	1480379	Argument	( cd -> names_found - i ) * cd -> name_entry_size		1480282	0					
ANR	1480380	MultiplicativeExpression	( cd -> names_found - i ) * cd -> name_entry_size		1480282	0		*			
ANR	1480381	AdditiveExpression	cd -> names_found - i		1480282	0		-			
ANR	1480382	PtrMemberAccess	cd -> names_found		1480282	0					
ANR	1480383	Identifier	cd		1480282	0					
ANR	1480384	Identifier	names_found		1480282	1					
ANR	1480385	Identifier	i		1480282	1					
ANR	1480386	PtrMemberAccess	cd -> name_entry_size		1480282	1					
ANR	1480387	Identifier	cd		1480282	0					
ANR	1480388	Identifier	name_entry_size		1480282	1					
ANR	1480389	BreakStatement	break ;	8792:4:289099:289104	1480282	1	True				
ANR	1480390	ExpressionStatement	slot += cd -> name_entry_size	8797:2:289172:289199	1480282	3	True				
ANR	1480391	AssignmentExpression	slot += cd -> name_entry_size		1480282	0		+=			
ANR	1480392	Identifier	slot		1480282	0					
ANR	1480393	PtrMemberAccess	cd -> name_entry_size		1480282	1					
ANR	1480394	Identifier	cd		1480282	0					
ANR	1480395	Identifier	name_entry_size		1480282	1					
ANR	1480396	ExpressionStatement	"PUT2 ( slot , 0 , groupno )"	8800:0:289206:289228	1480282	3	True				
ANR	1480397	CallExpression	"PUT2 ( slot , 0 , groupno )"		1480282	0					
ANR	1480398	Callee	PUT2		1480282	0					
ANR	1480399	Identifier	PUT2		1480282	0					
ANR	1480400	ArgumentList	slot		1480282	1					
ANR	1480401	Argument	slot		1480282	0					
ANR	1480402	Identifier	slot		1480282	0					
ANR	1480403	Argument	0		1480282	1					
ANR	1480404	PrimaryExpression	0		1480282	0					
ANR	1480405	Argument	groupno		1480282	2					
ANR	1480406	Identifier	groupno		1480282	0					
ANR	1480407	ExpressionStatement	"memcpy ( slot + IMM2_SIZE , name , IN_UCHARS ( length ) )"	8801:0:289230:289279	1480282	4	True				
ANR	1480408	CallExpression	"memcpy ( slot + IMM2_SIZE , name , IN_UCHARS ( length ) )"		1480282	0					
ANR	1480409	Callee	memcpy		1480282	0					
ANR	1480410	Identifier	memcpy		1480282	0					
ANR	1480411	ArgumentList	slot + IMM2_SIZE		1480282	1					
ANR	1480412	Argument	slot + IMM2_SIZE		1480282	0					
ANR	1480413	AdditiveExpression	slot + IMM2_SIZE		1480282	0		+			
ANR	1480414	Identifier	slot		1480282	0					
ANR	1480415	Identifier	IMM2_SIZE		1480282	1					
ANR	1480416	Argument	name		1480282	1					
ANR	1480417	Identifier	name		1480282	0					
ANR	1480418	Argument	IN_UCHARS ( length )		1480282	2					
ANR	1480419	CallExpression	IN_UCHARS ( length )		1480282	0					
ANR	1480420	Callee	IN_UCHARS		1480282	0					
ANR	1480421	Identifier	IN_UCHARS		1480282	0					
ANR	1480422	ArgumentList	length		1480282	1					
ANR	1480423	Argument	length		1480282	0					
ANR	1480424	Identifier	length		1480282	0					
ANR	1480425	ExpressionStatement	slot [ IMM2_SIZE + length ] = 0	8802:0:289281:289309	1480282	5	True				
ANR	1480426	AssignmentExpression	slot [ IMM2_SIZE + length ] = 0		1480282	0		=			
ANR	1480427	ArrayIndexing	slot [ IMM2_SIZE + length ]		1480282	0					
ANR	1480428	Identifier	slot		1480282	0					
ANR	1480429	AdditiveExpression	IMM2_SIZE + length		1480282	1		+			
ANR	1480430	Identifier	IMM2_SIZE		1480282	0					
ANR	1480431	Identifier	length		1480282	1					
ANR	1480432	PrimaryExpression	0		1480282	1					
ANR	1480433	ExpressionStatement	cd -> names_found ++	8803:0:289311:289328	1480282	6	True				
ANR	1480434	PostIncDecOperationExpression	cd -> names_found ++		1480282	0					
ANR	1480435	PtrMemberAccess	cd -> names_found		1480282	0					
ANR	1480436	Identifier	cd		1480282	0					
ANR	1480437	Identifier	names_found		1480282	1					
ANR	1480438	IncDec	++		1480282	1					
ANR	1480439	ReturnType	static void		1480282	1					
ANR	1480440	Identifier	add_name		1480282	2					
ANR	1480441	ParameterList	"compile_data * cd , const pcre_uchar * name , int length , unsigned int groupno"		1480282	3					
ANR	1480442	Parameter	compile_data * cd	8771:9:288339:288354	1480282	0	True				
ANR	1480443	ParameterType	compile_data *		1480282	0					
ANR	1480444	Identifier	cd		1480282	1					
ANR	1480445	Parameter	const pcre_uchar * name	8771:27:288357:288378	1480282	1	True				
ANR	1480446	ParameterType	const pcre_uchar *		1480282	0					
ANR	1480447	Identifier	name		1480282	1					
ANR	1480448	Parameter	int length	8771:51:288381:288390	1480282	2	True				
ANR	1480449	ParameterType	int		1480282	0					
ANR	1480450	Identifier	length		1480282	1					
ANR	1480451	Parameter	unsigned int groupno	8772:2:288395:288414	1480282	3	True				
ANR	1480452	ParameterType	unsigned int		1480282	0					
ANR	1480453	Identifier	groupno		1480282	1					
ANR	1480454	CFGEntryNode	ENTRY		1480282		True				
ANR	1480455	CFGExitNode	EXIT		1480282		True				
ANR	1480456	Symbol	cd		1480282						
ANR	1480457	Symbol	* cd		1480282						
ANR	1480458	Symbol	* IMM2_SIZE		1480282						
ANR	1480459	Symbol	IMM2_SIZE		1480282						
ANR	1480460	Symbol	length		1480282						
ANR	1480461	Symbol	i		1480282						
ANR	1480462	Symbol	cd -> names_found		1480282						
ANR	1480463	Symbol	slot		1480282						
ANR	1480464	Symbol	cd -> name_entry_size		1480282						
ANR	1480465	Symbol	IN_UCHARS		1480282						
ANR	1480466	Symbol	cd -> name_table		1480282						
ANR	1480467	Symbol	* slot		1480282						
ANR	1480468	Symbol	memcmp		1480282						
ANR	1480469	Symbol	crc		1480282						
ANR	1480470	Symbol	name		1480282						
ANR	1480471	Symbol	* length		1480282						
ANR	1480472	Symbol	groupno		1480282						
ANR	1480473	DeclStmt									
ANR	1480474	Decl							REAL_PCRE	REAL_PCRE *	re
ANR	1480475	DeclStmt									
ANR	1480476	Decl							int	int	length
ANR	1480477	DeclStmt									
ANR	1480478	Decl							pcre_int32	pcre_int32	firstcharflags
ANR	1480479	Decl							pcre_int32	pcre_int32	reqcharflags
ANR	1480480	DeclStmt									
ANR	1480481	Decl							pcre_uint32	pcre_uint32	firstchar
ANR	1480482	Decl							pcre_uint32	pcre_uint32	reqchar
ANR	1480483	DeclStmt									
ANR	1480484	Decl							pcre_uint32	pcre_uint32	limit_match
ANR	1480485	DeclStmt									
ANR	1480486	Decl							pcre_uint32	pcre_uint32	limit_recursion
ANR	1480487	DeclStmt									
ANR	1480488	Decl							int	int	newline
ANR	1480489	DeclStmt									
ANR	1480490	Decl							int	int	errorcode
ANR	1480491	DeclStmt									
ANR	1480492	Decl							int	int	skipatstart
ANR	1480493	DeclStmt									
ANR	1480494	Decl							BOOL	BOOL	utf
ANR	1480495	DeclStmt									
ANR	1480496	Decl							BOOL	BOOL	never_utf
ANR	1480497	DeclStmt									
ANR	1480498	Decl							size_t	size_t	size
ANR	1480499	DeclStmt									
ANR	1480500	Decl							pcre_uchar	pcre_uchar *	code
ANR	1480501	DeclStmt									
ANR	1480502	Decl							const pcre_uchar	const pcre_uchar *	codestart
ANR	1480503	DeclStmt									
ANR	1480504	Decl							const pcre_uchar	const pcre_uchar *	ptr
ANR	1480505	DeclStmt									
ANR	1480506	Decl							compile_data	compile_data	compile_block
ANR	1480507	DeclStmt									
ANR	1480508	Decl							compile_data	compile_data *	cd
ANR	1480509	DeclStmt									
ANR	1480510	Decl							pcre_uchar	pcre_uchar [ COMPILE_WORK_SIZE ]	cworkspace
ANR	1480511	DeclStmt									
ANR	1480512	Decl							named_group	named_group [ NAMED_GROUP_LIST_SIZE ]	named_groups
ANR	1480513	DeclStmt									
ANR	1480514	Decl							int	int	newnl
ANR	1480515	DeclStmt									
ANR	1480516	Decl							int	int	newbsr
ANR	1480517	DeclStmt									
ANR	1480518	Decl							pcre_uint32	pcre_uint32	c
ANR	1480519	DeclStmt									
ANR	1480520	Decl							int	int	p
ANR	1480521	DeclStmt									
ANR	1480522	Decl							pcre_uint32	pcre_uint32	c
ANR	1480523	DeclStmt									
ANR	1480524	Decl							int	int	p
ANR	1480525	DeclStmt									
ANR	1480526	Decl							int	int	i
ANR	1480527	DeclStmt									
ANR	1480528	Decl							named_group	named_group *	ng
ANR	1480529	DeclStmt									
ANR	1480530	Decl							int	int	prev_recno
ANR	1480531	DeclStmt									
ANR	1480532	Decl							const pcre_uchar	const pcre_uchar *	groupptr
ANR	1480533	DeclStmt									
ANR	1480534	Decl							int	int	offset
ANR	1480535	Decl							int	int	recno
ANR	1480536	DeclStmt									
ANR	1480537	Decl							pcre_uchar	pcre_uchar *	temp
ANR	1480538	DeclStmt									
ANR	1480539	Decl							pcre_uchar	pcre_uchar *	cc
ANR	1480540	DeclStmt									
ANR	1480541	Decl							int	int	fixed_length
ANR	1480542	DeclStmt									
ANR	1480543	Decl							pcre_uchar	pcre_uchar *	be
ANR	1480544	DeclStmt									
ANR	1480545	Decl							int	int	end_op
ANR	1480546	DeclStmt									
ANR	1480547	Decl							pcre_uchar	pcre_uchar	ch
ANR	1480548	DeclStmt									
ANR	1480549	Decl							const char	const char *	caseless
ANR	1480550	DeclStmt									
ANR	1480551	Decl							pcre_uchar	pcre_uchar	ch
ANR	1480552	DeclStmt									
ANR	1480553	Decl							const char	const char *	caseless
