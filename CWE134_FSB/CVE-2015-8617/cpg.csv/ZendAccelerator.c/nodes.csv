command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8335	File	data/converged/CVE-2015-8617_php-src/ZendAccelerator.c								
ANR	8336	DeclStmt									
ANR	8337	Decl							int	int	uid_t
ANR	8338	DeclStmt									
ANR	8339	Decl							int	int	gid_t
ANR	8340	DeclStmt									
ANR	8341	Decl							zend_accel_globals	zend_accel_globals	accel_globals
ANR	8342	DeclStmt									
ANR	8343	Decl							int	int	accel_globals_id
ANR	8344	DeclStmt									
ANR	8345	Decl							zend_accel_shared_globals	zend_accel_shared_globals *	accel_shared_globals
ANR	8346	DeclStmt									
ANR	8347	Decl							zend_bool	zend_bool	accel_startup_ok
ANR	8348	DeclStmt									
ANR	8349	Decl							char	char *	zps_failure_reason
ANR	8350	DeclStmt									
ANR	8351	Decl							char	char *	zps_api_failure_reason
ANR	8352	DeclStmt									
ANR	8353	Decl							zend_bool	zend_bool	fallback_process
ANR	8354	DeclStmt									
ANR	8355	Decl							"zend_op_array * ( * ) ( zend_file_handle * file_handle , int type )"	"zend_op_array * ( * ) ( zend_file_handle * file_handle , int type )"	accelerator_orig_compile_file
ANR	8356	DeclStmt									
ANR	8357	Decl							"int ( * ) ( const char * filename , zend_file_handle * handle )"	"int ( * ) ( const char * filename , zend_file_handle * handle )"	accelerator_orig_zend_stream_open_function
ANR	8358	DeclStmt									
ANR	8359	Decl							"zend_string * ( * ) ( const char * filename , int filename_len )"	"zend_string * ( * ) ( const char * filename , int filename_len )"	accelerator_orig_zend_resolve_path
ANR	8360	DeclStmt									
ANR	8361	Decl							void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	orig_chdir
ANR	8362	Function	zend_accel_get_time	128:0:3951:4152							
ANR	8363	FunctionDef	zend_accel_get_time ()		8362	0					
ANR	8364	CompoundStatement		129:0:3991:4152	8362	0					
ANR	8365	IdentifierDeclStatement	FILETIME now ;	130:1:3994:4006	8362	0	True				
ANR	8366	IdentifierDecl	now		8362	0					
ANR	8367	IdentifierDeclType	FILETIME		8362	0					
ANR	8368	Identifier	now		8362	1					
ANR	8369	ExpressionStatement	GetSystemTimeAsFileTime ( & now )	131:1:4009:4038	8362	1	True				
ANR	8370	CallExpression	GetSystemTimeAsFileTime ( & now )		8362	0					
ANR	8371	Callee	GetSystemTimeAsFileTime		8362	0					
ANR	8372	Identifier	GetSystemTimeAsFileTime		8362	0					
ANR	8373	ArgumentList	& now		8362	1					
ANR	8374	Argument	& now		8362	0					
ANR	8375	UnaryOperationExpression	& now		8362	0					
ANR	8376	UnaryOperator	&		8362	0					
ANR	8377	Identifier	now		8362	1					
ANR	8378	ReturnStatement	return ( time_t ) ( ( ( ( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime ) - 116444736000000000L ) / 10000000 ) ;	133:1:4042:4150	8362	2	True				
ANR	8379	CastExpression	( time_t ) ( ( ( ( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime ) - 116444736000000000L ) / 10000000 )		8362	0					
ANR	8380	CastTarget	time_t		8362	0					
ANR	8381	MultiplicativeExpression	( ( ( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime ) - 116444736000000000L ) / 10000000		8362	1		/			
ANR	8382	AdditiveExpression	( ( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime ) - 116444736000000000L		8362	0		-			
ANR	8383	InclusiveOrExpression	( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime		8362	0		|			
ANR	8384	ShiftExpression	( ( __int64 ) now . dwHighDateTime ) << 32		8362	0		<<			
ANR	8385	CastExpression	( __int64 ) now . dwHighDateTime		8362	0					
ANR	8386	CastTarget	__int64		8362	0					
ANR	8387	MemberAccess	now . dwHighDateTime		8362	1					
ANR	8388	Identifier	now		8362	0					
ANR	8389	Identifier	dwHighDateTime		8362	1					
ANR	8390	PrimaryExpression	32		8362	1					
ANR	8391	MemberAccess	now . dwLowDateTime		8362	1					
ANR	8392	Identifier	now		8362	0					
ANR	8393	Identifier	dwLowDateTime		8362	1					
ANR	8394	PrimaryExpression	116444736000000000L		8362	1					
ANR	8395	PrimaryExpression	10000000		8362	1					
ANR	8396	ReturnType	static time_t		8362	1					
ANR	8397	Identifier	zend_accel_get_time		8362	2					
ANR	8398	ParameterList			8362	3					
ANR	8399	CFGEntryNode	ENTRY		8362		True				
ANR	8400	CFGExitNode	EXIT		8362		True				
ANR	8401	Symbol	now . dwLowDateTime		8362						
ANR	8402	Symbol	now		8362						
ANR	8403	Symbol	& now		8362						
ANR	8404	Symbol	now . dwHighDateTime		8362						
ANR	8405	Function	is_stream_path	139:0:4210:4539							
ANR	8406	FunctionDef	is_stream_path (const char * filename)		8405	0					
ANR	8407	CompoundStatement		140:0:4265:4539	8405	0					
ANR	8408	IdentifierDeclStatement	const char * p ;	141:1:4268:4281	8405	0	True				
ANR	8409	IdentifierDecl	* p		8405	0					
ANR	8410	IdentifierDeclType	const char *		8405	0					
ANR	8411	Identifier	p		8405	1					
ANR	8412	ForStatement	for ( p = filename ; ( * p >= 'a' && * p <= 'z' ) || ( * p >= 'A' && * p <= 'Z' ) || ( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.' ; p ++ )		8405	1					
ANR	8413	ForInit	p = filename ;	143:6:4290:4302	8405	0	True				
ANR	8414	AssignmentExpression	p = filename		8405	0		=			
ANR	8415	Identifier	p		8405	0					
ANR	8416	Identifier	filename		8405	1					
ANR	8417	Condition	( * p >= 'a' && * p <= 'z' ) || ( * p >= 'A' && * p <= 'Z' ) || ( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.'	144:6:4310:4446	8405	1	True				
ANR	8418	OrExpression	( * p >= 'a' && * p <= 'z' ) || ( * p >= 'A' && * p <= 'Z' ) || ( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.'		8405	0		||			
ANR	8419	AndExpression	* p >= 'a' && * p <= 'z'		8405	0		&&			
ANR	8420	RelationalExpression	* p >= 'a'		8405	0		>=			
ANR	8421	UnaryOperationExpression	* p		8405	0					
ANR	8422	UnaryOperator	*		8405	0					
ANR	8423	Identifier	p		8405	1					
ANR	8424	PrimaryExpression	'a'		8405	1					
ANR	8425	RelationalExpression	* p <= 'z'		8405	1		<=			
ANR	8426	UnaryOperationExpression	* p		8405	0					
ANR	8427	UnaryOperator	*		8405	0					
ANR	8428	Identifier	p		8405	1					
ANR	8429	PrimaryExpression	'z'		8405	1					
ANR	8430	OrExpression	( * p >= 'A' && * p <= 'Z' ) || ( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.'		8405	1		||			
ANR	8431	AndExpression	* p >= 'A' && * p <= 'Z'		8405	0		&&			
ANR	8432	RelationalExpression	* p >= 'A'		8405	0		>=			
ANR	8433	UnaryOperationExpression	* p		8405	0					
ANR	8434	UnaryOperator	*		8405	0					
ANR	8435	Identifier	p		8405	1					
ANR	8436	PrimaryExpression	'A'		8405	1					
ANR	8437	RelationalExpression	* p <= 'Z'		8405	1		<=			
ANR	8438	UnaryOperationExpression	* p		8405	0					
ANR	8439	UnaryOperator	*		8405	0					
ANR	8440	Identifier	p		8405	1					
ANR	8441	PrimaryExpression	'Z'		8405	1					
ANR	8442	OrExpression	( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.'		8405	1		||			
ANR	8443	AndExpression	* p >= '0' && * p <= '9'		8405	0		&&			
ANR	8444	RelationalExpression	* p >= '0'		8405	0		>=			
ANR	8445	UnaryOperationExpression	* p		8405	0					
ANR	8446	UnaryOperator	*		8405	0					
ANR	8447	Identifier	p		8405	1					
ANR	8448	PrimaryExpression	'0'		8405	1					
ANR	8449	RelationalExpression	* p <= '9'		8405	1		<=			
ANR	8450	UnaryOperationExpression	* p		8405	0					
ANR	8451	UnaryOperator	*		8405	0					
ANR	8452	Identifier	p		8405	1					
ANR	8453	PrimaryExpression	'9'		8405	1					
ANR	8454	OrExpression	* p == '+' || * p == '-' || * p == '.'		8405	1		||			
ANR	8455	EqualityExpression	* p == '+'		8405	0		==			
ANR	8456	UnaryOperationExpression	* p		8405	0					
ANR	8457	UnaryOperator	*		8405	0					
ANR	8458	Identifier	p		8405	1					
ANR	8459	PrimaryExpression	'+'		8405	1					
ANR	8460	OrExpression	* p == '-' || * p == '.'		8405	1		||			
ANR	8461	EqualityExpression	* p == '-'		8405	0		==			
ANR	8462	UnaryOperationExpression	* p		8405	0					
ANR	8463	UnaryOperator	*		8405	0					
ANR	8464	Identifier	p		8405	1					
ANR	8465	PrimaryExpression	'-'		8405	1					
ANR	8466	EqualityExpression	* p == '.'		8405	1		==			
ANR	8467	UnaryOperationExpression	* p		8405	0					
ANR	8468	UnaryOperator	*		8405	0					
ANR	8469	Identifier	p		8405	1					
ANR	8470	PrimaryExpression	'.'		8405	1					
ANR	8471	PostIncDecOperationExpression	p ++	148:6:4455:4457	8405	2	True				
ANR	8472	Identifier	p		8405	0					
ANR	8473	IncDec	++		8405	1					
ANR	8474	ExpressionStatement		148:10:4459:4459	8405	3	True				
ANR	8475	ReturnStatement	return ( ( p != filename ) && ( p [ 0 ] == ':' ) && ( p [ 1 ] == '/' ) && ( p [ 2 ] == '/' ) ) ;	149:1:4462:4537	8405	2	True				
ANR	8476	AndExpression	( p != filename ) && ( p [ 0 ] == ':' ) && ( p [ 1 ] == '/' ) && ( p [ 2 ] == '/' )		8405	0		&&			
ANR	8477	EqualityExpression	p != filename		8405	0		!=			
ANR	8478	Identifier	p		8405	0					
ANR	8479	Identifier	filename		8405	1					
ANR	8480	AndExpression	( p [ 0 ] == ':' ) && ( p [ 1 ] == '/' ) && ( p [ 2 ] == '/' )		8405	1		&&			
ANR	8481	EqualityExpression	p [ 0 ] == ':'		8405	0		==			
ANR	8482	ArrayIndexing	p [ 0 ]		8405	0					
ANR	8483	Identifier	p		8405	0					
ANR	8484	PrimaryExpression	0		8405	1					
ANR	8485	PrimaryExpression	':'		8405	1					
ANR	8486	AndExpression	( p [ 1 ] == '/' ) && ( p [ 2 ] == '/' )		8405	1		&&			
ANR	8487	EqualityExpression	p [ 1 ] == '/'		8405	0		==			
ANR	8488	ArrayIndexing	p [ 1 ]		8405	0					
ANR	8489	Identifier	p		8405	0					
ANR	8490	PrimaryExpression	1		8405	1					
ANR	8491	PrimaryExpression	'/'		8405	1					
ANR	8492	EqualityExpression	p [ 2 ] == '/'		8405	1		==			
ANR	8493	ArrayIndexing	p [ 2 ]		8405	0					
ANR	8494	Identifier	p		8405	0					
ANR	8495	PrimaryExpression	2		8405	1					
ANR	8496	PrimaryExpression	'/'		8405	1					
ANR	8497	ReturnType	static inline int		8405	1					
ANR	8498	Identifier	is_stream_path		8405	2					
ANR	8499	ParameterList	const char * filename		8405	3					
ANR	8500	Parameter	const char * filename	139:33:4243:4262	8405	0	True				
ANR	8501	ParameterType	const char *		8405	0					
ANR	8502	Identifier	filename		8405	1					
ANR	8503	CFGEntryNode	ENTRY		8405		True				
ANR	8504	CFGExitNode	EXIT		8405		True				
ANR	8505	Symbol	p		8405						
ANR	8506	Symbol	filename		8405						
ANR	8507	Symbol	* p		8405						
ANR	8508	Function	is_cacheable_stream_path	152:0:4542:4741							
ANR	8509	FunctionDef	is_cacheable_stream_path (const char * filename)		8508	0					
ANR	8510	CompoundStatement		153:0:4607:4741	8508	0					
ANR	8511	ReturnStatement	"return memcmp ( filename , ""file://"" , sizeof ( ""file://"" ) - 1 ) == 0 || memcmp ( filename , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) == 0 ;"	154:1:4610:4739	8508	0	True				
ANR	8512	OrExpression	"memcmp ( filename , ""file://"" , sizeof ( ""file://"" ) - 1 ) == 0 || memcmp ( filename , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) == 0"		8508	0		||			
ANR	8513	EqualityExpression	"memcmp ( filename , ""file://"" , sizeof ( ""file://"" ) - 1 ) == 0"		8508	0		==			
ANR	8514	CallExpression	"memcmp ( filename , ""file://"" , sizeof ( ""file://"" ) - 1 )"		8508	0					
ANR	8515	Callee	memcmp		8508	0					
ANR	8516	Identifier	memcmp		8508	0					
ANR	8517	ArgumentList	filename		8508	1					
ANR	8518	Argument	filename		8508	0					
ANR	8519	Identifier	filename		8508	0					
ANR	8520	Argument	"""file://"""		8508	1					
ANR	8521	PrimaryExpression	"""file://"""		8508	0					
ANR	8522	Argument	"sizeof ( ""file://"" ) - 1"		8508	2					
ANR	8523	AdditiveExpression	"sizeof ( ""file://"" ) - 1"		8508	0		-			
ANR	8524	SizeofExpression	"sizeof ( ""file://"" )"		8508	0					
ANR	8525	Sizeof	sizeof		8508	0					
ANR	8526	PrimaryExpression	"""file://"""		8508	1					
ANR	8527	PrimaryExpression	1		8508	1					
ANR	8528	PrimaryExpression	0		8508	1					
ANR	8529	EqualityExpression	"memcmp ( filename , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) == 0"		8508	1		==			
ANR	8530	CallExpression	"memcmp ( filename , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"		8508	0					
ANR	8531	Callee	memcmp		8508	0					
ANR	8532	Identifier	memcmp		8508	0					
ANR	8533	ArgumentList	filename		8508	1					
ANR	8534	Argument	filename		8508	0					
ANR	8535	Identifier	filename		8508	0					
ANR	8536	Argument	"""phar://"""		8508	1					
ANR	8537	PrimaryExpression	"""phar://"""		8508	0					
ANR	8538	Argument	"sizeof ( ""phar://"" ) - 1"		8508	2					
ANR	8539	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		8508	0		-			
ANR	8540	SizeofExpression	"sizeof ( ""phar://"" )"		8508	0					
ANR	8541	Sizeof	sizeof		8508	0					
ANR	8542	PrimaryExpression	"""phar://"""		8508	1					
ANR	8543	PrimaryExpression	1		8508	1					
ANR	8544	PrimaryExpression	0		8508	1					
ANR	8545	ReturnType	static inline int		8508	1					
ANR	8546	Identifier	is_cacheable_stream_path		8508	2					
ANR	8547	ParameterList	const char * filename		8508	3					
ANR	8548	Parameter	const char * filename	152:43:4585:4604	8508	0	True				
ANR	8549	ParameterType	const char *		8508	0					
ANR	8550	Identifier	filename		8508	1					
ANR	8551	CFGEntryNode	ENTRY		8508		True				
ANR	8552	CFGExitNode	EXIT		8508		True				
ANR	8553	Symbol	filename		8508						
ANR	8554	Symbol	memcmp		8508						
ANR	8555	DeclStmt									
ANR	8556	Decl							char	char [ MAXPATHLEN ]	cwd
ANR	8557	Function	accel_getcwd	182:0:5320:5622							
ANR	8558	FunctionDef	accel_getcwd ()		8557	0					
ANR	8559	CompoundStatement		183:0:5366:5622	8557	0					
ANR	8560	IfStatement	if ( ZCG ( cwd ) )		8557	0					
ANR	8561	Condition	ZCG ( cwd )	184:5:5373:5380	8557	0	True				
ANR	8562	CallExpression	ZCG ( cwd )		8557	0					
ANR	8563	Callee	ZCG		8557	0					
ANR	8564	Identifier	ZCG		8557	0					
ANR	8565	ArgumentList	cwd		8557	1					
ANR	8566	Argument	cwd		8557	0					
ANR	8567	Identifier	cwd		8557	0					
ANR	8568	CompoundStatement		2:15:16:16	8557	1					
ANR	8569	ReturnStatement	return ZCG ( cwd ) ;	185:2:5387:5402	8557	0	True				
ANR	8570	CallExpression	ZCG ( cwd )		8557	0					
ANR	8571	Callee	ZCG		8557	0					
ANR	8572	Identifier	ZCG		8557	0					
ANR	8573	ArgumentList	cwd		8557	1					
ANR	8574	Argument	cwd		8557	0					
ANR	8575	Identifier	cwd		8557	0					
ANR	8576	ElseStatement	else		8557	0					
ANR	8577	CompoundStatement		5:2:49:73	8557	0					
ANR	8578	IdentifierDeclStatement	char cwd [ MAXPATHLEN + 1 ] ;	187:2:5416:5440	8557	0	True				
ANR	8579	IdentifierDecl	cwd [ MAXPATHLEN + 1 ]		8557	0					
ANR	8580	IdentifierDeclType	char [ MAXPATHLEN + 1 ]		8557	0					
ANR	8581	Identifier	cwd		8557	1					
ANR	8582	AdditiveExpression	MAXPATHLEN + 1		8557	2		+			
ANR	8583	Identifier	MAXPATHLEN		8557	0					
ANR	8584	PrimaryExpression	1		8557	1					
ANR	8585	IfStatement	"if ( ! VCWD_GETCWD ( cwd , MAXPATHLEN ) )"		8557	1					
ANR	8586	Condition	"! VCWD_GETCWD ( cwd , MAXPATHLEN )"	189:6:5449:5477	8557	0	True				
ANR	8587	UnaryOperationExpression	"! VCWD_GETCWD ( cwd , MAXPATHLEN )"		8557	0					
ANR	8588	UnaryOperator	!		8557	0					
ANR	8589	CallExpression	"VCWD_GETCWD ( cwd , MAXPATHLEN )"		8557	1					
ANR	8590	Callee	VCWD_GETCWD		8557	0					
ANR	8591	Identifier	VCWD_GETCWD		8557	0					
ANR	8592	ArgumentList	cwd		8557	1					
ANR	8593	Argument	cwd		8557	0					
ANR	8594	Identifier	cwd		8557	0					
ANR	8595	Argument	MAXPATHLEN		8557	1					
ANR	8596	Identifier	MAXPATHLEN		8557	0					
ANR	8597	CompoundStatement		7:37:113:113	8557	1					
ANR	8598	ReturnStatement	return NULL ;	190:3:5485:5496	8557	0	True				
ANR	8599	Identifier	NULL		8557	0					
ANR	8600	ExpressionStatement	"ZCG ( cwd ) = zend_string_init ( cwd , strlen ( cwd ) , 0 )"	192:2:5504:5552	8557	2	True				
ANR	8601	AssignmentExpression	"ZCG ( cwd ) = zend_string_init ( cwd , strlen ( cwd ) , 0 )"		8557	0		=			
ANR	8602	CallExpression	ZCG ( cwd )		8557	0					
ANR	8603	Callee	ZCG		8557	0					
ANR	8604	Identifier	ZCG		8557	0					
ANR	8605	ArgumentList	cwd		8557	1					
ANR	8606	Argument	cwd		8557	0					
ANR	8607	Identifier	cwd		8557	0					
ANR	8608	CallExpression	"zend_string_init ( cwd , strlen ( cwd ) , 0 )"		8557	1					
ANR	8609	Callee	zend_string_init		8557	0					
ANR	8610	Identifier	zend_string_init		8557	0					
ANR	8611	ArgumentList	cwd		8557	1					
ANR	8612	Argument	cwd		8557	0					
ANR	8613	Identifier	cwd		8557	0					
ANR	8614	Argument	strlen ( cwd )		8557	1					
ANR	8615	CallExpression	strlen ( cwd )		8557	0					
ANR	8616	Callee	strlen		8557	0					
ANR	8617	Identifier	strlen		8557	0					
ANR	8618	ArgumentList	cwd		8557	1					
ANR	8619	Argument	cwd		8557	0					
ANR	8620	Identifier	cwd		8557	0					
ANR	8621	Argument	0		8557	2					
ANR	8622	PrimaryExpression	0		8557	0					
ANR	8623	ExpressionStatement	ZCG ( cwd_key_len ) = 0	193:2:5556:5576	8557	3	True				
ANR	8624	AssignmentExpression	ZCG ( cwd_key_len ) = 0		8557	0		=			
ANR	8625	CallExpression	ZCG ( cwd_key_len )		8557	0					
ANR	8626	Callee	ZCG		8557	0					
ANR	8627	Identifier	ZCG		8557	0					
ANR	8628	ArgumentList	cwd_key_len		8557	1					
ANR	8629	Argument	cwd_key_len		8557	0					
ANR	8630	Identifier	cwd_key_len		8557	0					
ANR	8631	PrimaryExpression	0		8557	1					
ANR	8632	ExpressionStatement	ZCG ( cwd_check ) = 1	194:2:5580:5598	8557	4	True				
ANR	8633	AssignmentExpression	ZCG ( cwd_check ) = 1		8557	0		=			
ANR	8634	CallExpression	ZCG ( cwd_check )		8557	0					
ANR	8635	Callee	ZCG		8557	0					
ANR	8636	Identifier	ZCG		8557	0					
ANR	8637	ArgumentList	cwd_check		8557	1					
ANR	8638	Argument	cwd_check		8557	0					
ANR	8639	Identifier	cwd_check		8557	0					
ANR	8640	PrimaryExpression	1		8557	1					
ANR	8641	ReturnStatement	return ZCG ( cwd ) ;	195:2:5602:5617	8557	5	True				
ANR	8642	CallExpression	ZCG ( cwd )		8557	0					
ANR	8643	Callee	ZCG		8557	0					
ANR	8644	Identifier	ZCG		8557	0					
ANR	8645	ArgumentList	cwd		8557	1					
ANR	8646	Argument	cwd		8557	0					
ANR	8647	Identifier	cwd		8557	0					
ANR	8648	ReturnType	static inline zend_string *		8557	1					
ANR	8649	Identifier	accel_getcwd		8557	2					
ANR	8650	ParameterList			8557	3					
ANR	8651	CFGEntryNode	ENTRY		8557		True				
ANR	8652	CFGExitNode	EXIT		8557		True				
ANR	8653	Symbol	cwd		8557						
ANR	8654	Symbol	MAXPATHLEN		8557						
ANR	8655	Symbol	strlen		8557						
ANR	8656	Symbol	zend_string_init		8557						
ANR	8657	Symbol	NULL		8557						
ANR	8658	Symbol	VCWD_GETCWD		8557						
ANR	8659	Symbol	cwd_check		8557						
ANR	8660	Symbol	ZCG		8557						
ANR	8661	Symbol	cwd_key_len		8557						
ANR	8662	Function	zend_accel_schedule_restart_if_necessary	199:0:5625:5889							
ANR	8663	FunctionDef	zend_accel_schedule_restart_if_necessary (zend_accel_restart_reason reason)		8662	0					
ANR	8664	CompoundStatement		200:0:5705:5889	8662	0					
ANR	8665	IfStatement	if ( ( ( ( double ) ZSMMG ( wasted_shared_memory ) ) / ZCG ( accel_directives ) . memory_consumption ) >= ZCG ( accel_directives ) . max_wasted_percentage )		8662	0					
ANR	8666	Condition	( ( ( double ) ZSMMG ( wasted_shared_memory ) ) / ZCG ( accel_directives ) . memory_consumption ) >= ZCG ( accel_directives ) . max_wasted_percentage	201:5:5712:5841	8662	0	True				
ANR	8667	RelationalExpression	( ( ( double ) ZSMMG ( wasted_shared_memory ) ) / ZCG ( accel_directives ) . memory_consumption ) >= ZCG ( accel_directives ) . max_wasted_percentage		8662	0		>=			
ANR	8668	MultiplicativeExpression	( ( double ) ZSMMG ( wasted_shared_memory ) ) / ZCG ( accel_directives ) . memory_consumption		8662	0		/			
ANR	8669	CastExpression	( double ) ZSMMG ( wasted_shared_memory )		8662	0					
ANR	8670	CastTarget	double		8662	0					
ANR	8671	CallExpression	ZSMMG ( wasted_shared_memory )		8662	1					
ANR	8672	Callee	ZSMMG		8662	0					
ANR	8673	Identifier	ZSMMG		8662	0					
ANR	8674	ArgumentList	wasted_shared_memory		8662	1					
ANR	8675	Argument	wasted_shared_memory		8662	0					
ANR	8676	Identifier	wasted_shared_memory		8662	0					
ANR	8677	MemberAccess	ZCG ( accel_directives ) . memory_consumption		8662	1					
ANR	8678	CallExpression	ZCG ( accel_directives )		8662	0					
ANR	8679	Callee	ZCG		8662	0					
ANR	8680	Identifier	ZCG		8662	0					
ANR	8681	ArgumentList	accel_directives		8662	1					
ANR	8682	Argument	accel_directives		8662	0					
ANR	8683	Identifier	accel_directives		8662	0					
ANR	8684	Identifier	memory_consumption		8662	1					
ANR	8685	MemberAccess	ZCG ( accel_directives ) . max_wasted_percentage		8662	1					
ANR	8686	CallExpression	ZCG ( accel_directives )		8662	0					
ANR	8687	Callee	ZCG		8662	0					
ANR	8688	Identifier	ZCG		8662	0					
ANR	8689	ArgumentList	accel_directives		8662	1					
ANR	8690	Argument	accel_directives		8662	0					
ANR	8691	Identifier	accel_directives		8662	0					
ANR	8692	Identifier	max_wasted_percentage		8662	1					
ANR	8693	CompoundStatement		2:137:138:138	8662	1					
ANR	8694	ExpressionStatement	zend_accel_schedule_restart ( reason )	202:3:5849:5884	8662	0	True				
ANR	8695	CallExpression	zend_accel_schedule_restart ( reason )		8662	0					
ANR	8696	Callee	zend_accel_schedule_restart		8662	0					
ANR	8697	Identifier	zend_accel_schedule_restart		8662	0					
ANR	8698	ArgumentList	reason		8662	1					
ANR	8699	Argument	reason		8662	0					
ANR	8700	Identifier	reason		8662	0					
ANR	8701	ReturnType	void		8662	1					
ANR	8702	Identifier	zend_accel_schedule_restart_if_necessary		8662	2					
ANR	8703	ParameterList	zend_accel_restart_reason reason		8662	3					
ANR	8704	Parameter	zend_accel_restart_reason reason	199:46:5671:5702	8662	0	True				
ANR	8705	ParameterType	zend_accel_restart_reason		8662	0					
ANR	8706	Identifier	reason		8662	1					
ANR	8707	CFGEntryNode	ENTRY		8662		True				
ANR	8708	CFGExitNode	EXIT		8662		True				
ANR	8709	Symbol	reason		8662						
ANR	8710	Symbol	wasted_shared_memory		8662						
ANR	8711	Symbol	ZSMMG		8662						
ANR	8712	Symbol	ZCG ( accel_directives ) . max_wasted_percentage		8662						
ANR	8713	Symbol	ZCG ( accel_directives ) . memory_consumption		8662						
ANR	8714	Symbol	accel_directives		8662						
ANR	8715	Symbol	ZCG		8662						
ANR	8716	DeclStmt									
ANR	8717	Decl							int	int	ret
ANR	8718	DeclStmt									
ANR	8719	Decl							zend_string * ( * ) ( zend_string * str )	zend_string * ( * ) ( zend_string * str )	orig_new_interned_string
ANR	8720	DeclStmt									
ANR	8721	Decl							void ( * ) ( void )	void ( * ) ( void )	orig_interned_strings_snapshot
ANR	8722	DeclStmt									
ANR	8723	Decl							void ( * ) ( void )	void ( * ) ( void )	orig_interned_strings_restore
ANR	8724	Function	accel_new_interned_string_for_php	232:0:6839:6926							
ANR	8725	FunctionDef	accel_new_interned_string_for_php (zend_string * str)		8724	0					
ANR	8726	CompoundStatement		233:0:6911:6926	8724	0					
ANR	8727	ReturnStatement	return str ;	234:1:6914:6924	8724	0	True				
ANR	8728	Identifier	str		8724	0					
ANR	8729	ReturnType	static zend_string *		8724	1					
ANR	8730	Identifier	accel_new_interned_string_for_php		8724	2					
ANR	8731	ParameterList	zend_string * str		8724	3					
ANR	8732	Parameter	zend_string * str	232:54:6893:6908	8724	0	True				
ANR	8733	ParameterType	zend_string *		8724	0					
ANR	8734	Identifier	str		8724	1					
ANR	8735	CFGEntryNode	ENTRY		8724		True				
ANR	8736	CFGExitNode	EXIT		8724		True				
ANR	8737	Symbol	str		8724						
ANR	8738	Function	accel_interned_strings_snapshot_for_php	237:0:6929:6989							
ANR	8739	FunctionDef	accel_interned_strings_snapshot_for_php ()		8738	0					
ANR	8740	CompoundStatement		238:0:6987:6989	8738	0					
ANR	8741	ReturnType	static void		8738	1					
ANR	8742	Identifier	accel_interned_strings_snapshot_for_php		8738	2					
ANR	8743	ParameterList			8738	3					
ANR	8744	CFGEntryNode	ENTRY		8738		True				
ANR	8745	CFGExitNode	EXIT		8738		True				
ANR	8746	Function	accel_interned_strings_restore_for_php	241:0:6992:7051							
ANR	8747	FunctionDef	accel_interned_strings_restore_for_php ()		8746	0					
ANR	8748	CompoundStatement		242:0:7049:7051	8746	0					
ANR	8749	ReturnType	static void		8746	1					
ANR	8750	Identifier	accel_interned_strings_restore_for_php		8746	2					
ANR	8751	ParameterList			8746	3					
ANR	8752	CFGEntryNode	ENTRY		8746		True				
ANR	8753	CFGExitNode	EXIT		8746		True				
ANR	8754	Function	accel_interned_strings_restore_state	246:0:7066:8108							
ANR	8755	FunctionDef	accel_interned_strings_restore_state ()		8754	0					
ANR	8756	CompoundStatement		247:0:7121:8108	8754	0					
ANR	8757	IdentifierDeclStatement	uint idx = ZCSG ( interned_strings ) . nNumUsed ;	248:4:7127:7169	8754	0	True				
ANR	8758	IdentifierDecl	idx = ZCSG ( interned_strings ) . nNumUsed		8754	0					
ANR	8759	IdentifierDeclType	uint		8754	0					
ANR	8760	Identifier	idx		8754	1					
ANR	8761	AssignmentExpression	idx = ZCSG ( interned_strings ) . nNumUsed		8754	2		=			
ANR	8762	Identifier	idx		8754	0					
ANR	8763	MemberAccess	ZCSG ( interned_strings ) . nNumUsed		8754	1					
ANR	8764	CallExpression	ZCSG ( interned_strings )		8754	0					
ANR	8765	Callee	ZCSG		8754	0					
ANR	8766	Identifier	ZCSG		8754	0					
ANR	8767	ArgumentList	interned_strings		8754	1					
ANR	8768	Argument	interned_strings		8754	0					
ANR	8769	Identifier	interned_strings		8754	0					
ANR	8770	Identifier	nNumUsed		8754	1					
ANR	8771	IdentifierDeclStatement	uint nIndex ;	249:4:7175:7186	8754	1	True				
ANR	8772	IdentifierDecl	nIndex		8754	0					
ANR	8773	IdentifierDeclType	uint		8754	0					
ANR	8774	Identifier	nIndex		8754	1					
ANR	8775	IdentifierDeclStatement	Bucket * p ;	250:4:7192:7201	8754	2	True				
ANR	8776	IdentifierDecl	* p		8754	0					
ANR	8777	IdentifierDeclType	Bucket *		8754	0					
ANR	8778	Identifier	p		8754	1					
ANR	8779	ExpressionStatement	"memset ( ZCSG ( interned_strings_saved_top ) , 0 , ZCSG ( interned_strings_top ) - ZCSG ( interned_strings_saved_top ) )"	252:1:7205:7314	8754	3	True				
ANR	8780	CallExpression	"memset ( ZCSG ( interned_strings_saved_top ) , 0 , ZCSG ( interned_strings_top ) - ZCSG ( interned_strings_saved_top ) )"		8754	0					
ANR	8781	Callee	memset		8754	0					
ANR	8782	Identifier	memset		8754	0					
ANR	8783	ArgumentList	ZCSG ( interned_strings_saved_top )		8754	1					
ANR	8784	Argument	ZCSG ( interned_strings_saved_top )		8754	0					
ANR	8785	CallExpression	ZCSG ( interned_strings_saved_top )		8754	0					
ANR	8786	Callee	ZCSG		8754	0					
ANR	8787	Identifier	ZCSG		8754	0					
ANR	8788	ArgumentList	interned_strings_saved_top		8754	1					
ANR	8789	Argument	interned_strings_saved_top		8754	0					
ANR	8790	Identifier	interned_strings_saved_top		8754	0					
ANR	8791	Argument	0		8754	1					
ANR	8792	PrimaryExpression	0		8754	0					
ANR	8793	Argument	ZCSG ( interned_strings_top ) - ZCSG ( interned_strings_saved_top )		8754	2					
ANR	8794	AdditiveExpression	ZCSG ( interned_strings_top ) - ZCSG ( interned_strings_saved_top )		8754	0		-			
ANR	8795	CallExpression	ZCSG ( interned_strings_top )		8754	0					
ANR	8796	Callee	ZCSG		8754	0					
ANR	8797	Identifier	ZCSG		8754	0					
ANR	8798	ArgumentList	interned_strings_top		8754	1					
ANR	8799	Argument	interned_strings_top		8754	0					
ANR	8800	Identifier	interned_strings_top		8754	0					
ANR	8801	CallExpression	ZCSG ( interned_strings_saved_top )		8754	1					
ANR	8802	Callee	ZCSG		8754	0					
ANR	8803	Identifier	ZCSG		8754	0					
ANR	8804	ArgumentList	interned_strings_saved_top		8754	1					
ANR	8805	Argument	interned_strings_saved_top		8754	0					
ANR	8806	Identifier	interned_strings_saved_top		8754	0					
ANR	8807	ExpressionStatement	ZCSG ( interned_strings_top ) = ZCSG ( interned_strings_saved_top )	254:1:7317:7378	8754	4	True				
ANR	8808	AssignmentExpression	ZCSG ( interned_strings_top ) = ZCSG ( interned_strings_saved_top )		8754	0		=			
ANR	8809	CallExpression	ZCSG ( interned_strings_top )		8754	0					
ANR	8810	Callee	ZCSG		8754	0					
ANR	8811	Identifier	ZCSG		8754	0					
ANR	8812	ArgumentList	interned_strings_top		8754	1					
ANR	8813	Argument	interned_strings_top		8754	0					
ANR	8814	Identifier	interned_strings_top		8754	0					
ANR	8815	CallExpression	ZCSG ( interned_strings_saved_top )		8754	1					
ANR	8816	Callee	ZCSG		8754	0					
ANR	8817	Identifier	ZCSG		8754	0					
ANR	8818	ArgumentList	interned_strings_saved_top		8754	1					
ANR	8819	Argument	interned_strings_saved_top		8754	0					
ANR	8820	Identifier	interned_strings_saved_top		8754	0					
ANR	8821	WhileStatement	while ( idx > 0 )		8754	5					
ANR	8822	Condition	idx > 0	255:11:7391:7397	8754	0	True				
ANR	8823	RelationalExpression	idx > 0		8754	0		>			
ANR	8824	Identifier	idx		8754	0					
ANR	8825	PrimaryExpression	0		8754	1					
ANR	8826	CompoundStatement		9:20:278:278	8754	1					
ANR	8827	ExpressionStatement	idx --	256:5:7407:7412	8754	0	True				
ANR	8828	PostIncDecOperationExpression	idx --		8754	0					
ANR	8829	Identifier	idx		8754	0					
ANR	8830	IncDec	--		8754	1					
ANR	8831	ExpressionStatement	p = ZCSG ( interned_strings ) . arData + idx	257:2:7416:7455	8754	1	True				
ANR	8832	AssignmentExpression	p = ZCSG ( interned_strings ) . arData + idx		8754	0		=			
ANR	8833	Identifier	p		8754	0					
ANR	8834	AdditiveExpression	ZCSG ( interned_strings ) . arData + idx		8754	1		+			
ANR	8835	MemberAccess	ZCSG ( interned_strings ) . arData		8754	0					
ANR	8836	CallExpression	ZCSG ( interned_strings )		8754	0					
ANR	8837	Callee	ZCSG		8754	0					
ANR	8838	Identifier	ZCSG		8754	0					
ANR	8839	ArgumentList	interned_strings		8754	1					
ANR	8840	Argument	interned_strings		8754	0					
ANR	8841	Identifier	interned_strings		8754	0					
ANR	8842	Identifier	arData		8754	1					
ANR	8843	Identifier	idx		8754	1					
ANR	8844	IfStatement	if ( ( char * ) p -> key < ZCSG ( interned_strings_top ) )		8754	2					
ANR	8845	Condition	( char * ) p -> key < ZCSG ( interned_strings_top )	258:6:7463:7504	8754	0	True				
ANR	8846	RelationalExpression	( char * ) p -> key < ZCSG ( interned_strings_top )		8754	0		<			
ANR	8847	CastExpression	( char * ) p -> key		8754	0					
ANR	8848	CastTarget	char *		8754	0					
ANR	8849	PtrMemberAccess	p -> key		8754	1					
ANR	8850	Identifier	p		8754	0					
ANR	8851	Identifier	key		8754	1					
ANR	8852	CallExpression	ZCSG ( interned_strings_top )		8754	1					
ANR	8853	Callee	ZCSG		8754	0					
ANR	8854	Identifier	ZCSG		8754	0					
ANR	8855	ArgumentList	interned_strings_top		8754	1					
ANR	8856	Argument	interned_strings_top		8754	0					
ANR	8857	Identifier	interned_strings_top		8754	0					
ANR	8858	BreakStatement	break ;	258:50:7507:7512	8754	1	True				
ANR	8859	ExpressionStatement	ZCSG ( interned_strings ) . nNumUsed --	259:2:7516:7549	8754	3	True				
ANR	8860	PostIncDecOperationExpression	ZCSG ( interned_strings ) . nNumUsed --		8754	0					
ANR	8861	MemberAccess	ZCSG ( interned_strings ) . nNumUsed		8754	0					
ANR	8862	CallExpression	ZCSG ( interned_strings )		8754	0					
ANR	8863	Callee	ZCSG		8754	0					
ANR	8864	Identifier	ZCSG		8754	0					
ANR	8865	ArgumentList	interned_strings		8754	1					
ANR	8866	Argument	interned_strings		8754	0					
ANR	8867	Identifier	interned_strings		8754	0					
ANR	8868	Identifier	nNumUsed		8754	1					
ANR	8869	IncDec	--		8754	1					
ANR	8870	ExpressionStatement	ZCSG ( interned_strings ) . nNumOfElements --	260:2:7553:7592	8754	4	True				
ANR	8871	PostIncDecOperationExpression	ZCSG ( interned_strings ) . nNumOfElements --		8754	0					
ANR	8872	MemberAccess	ZCSG ( interned_strings ) . nNumOfElements		8754	0					
ANR	8873	CallExpression	ZCSG ( interned_strings )		8754	0					
ANR	8874	Callee	ZCSG		8754	0					
ANR	8875	Identifier	ZCSG		8754	0					
ANR	8876	ArgumentList	interned_strings		8754	1					
ANR	8877	Argument	interned_strings		8754	0					
ANR	8878	Identifier	interned_strings		8754	0					
ANR	8879	Identifier	nNumOfElements		8754	1					
ANR	8880	IncDec	--		8754	1					
ANR	8881	ExpressionStatement	nIndex = p -> h | ZCSG ( interned_strings ) . nTableMask	262:2:7597:7646	8754	5	True				
ANR	8882	AssignmentExpression	nIndex = p -> h | ZCSG ( interned_strings ) . nTableMask		8754	0		=			
ANR	8883	Identifier	nIndex		8754	0					
ANR	8884	InclusiveOrExpression	p -> h | ZCSG ( interned_strings ) . nTableMask		8754	1		|			
ANR	8885	PtrMemberAccess	p -> h		8754	0					
ANR	8886	Identifier	p		8754	0					
ANR	8887	Identifier	h		8754	1					
ANR	8888	MemberAccess	ZCSG ( interned_strings ) . nTableMask		8754	1					
ANR	8889	CallExpression	ZCSG ( interned_strings )		8754	0					
ANR	8890	Callee	ZCSG		8754	0					
ANR	8891	Identifier	ZCSG		8754	0					
ANR	8892	ArgumentList	interned_strings		8754	1					
ANR	8893	Argument	interned_strings		8754	0					
ANR	8894	Identifier	interned_strings		8754	0					
ANR	8895	Identifier	nTableMask		8754	1					
ANR	8896	IfStatement	"if ( HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) == HT_IDX_TO_HASH ( idx ) )"		8754	6					
ANR	8897	Condition	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) == HT_IDX_TO_HASH ( idx )"	263:6:7654:7716	8754	0	True				
ANR	8898	EqualityExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) == HT_IDX_TO_HASH ( idx )"		8754	0		==			
ANR	8899	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		8754	0					
ANR	8900	Callee	HT_HASH		8754	0					
ANR	8901	Identifier	HT_HASH		8754	0					
ANR	8902	ArgumentList	& ZCSG ( interned_strings )		8754	1					
ANR	8903	Argument	& ZCSG ( interned_strings )		8754	0					
ANR	8904	UnaryOperationExpression	& ZCSG ( interned_strings )		8754	0					
ANR	8905	UnaryOperator	&		8754	0					
ANR	8906	CallExpression	ZCSG ( interned_strings )		8754	1					
ANR	8907	Callee	ZCSG		8754	0					
ANR	8908	Identifier	ZCSG		8754	0					
ANR	8909	ArgumentList	interned_strings		8754	1					
ANR	8910	Argument	interned_strings		8754	0					
ANR	8911	Identifier	interned_strings		8754	0					
ANR	8912	Argument	nIndex		8754	1					
ANR	8913	Identifier	nIndex		8754	0					
ANR	8914	CallExpression	HT_IDX_TO_HASH ( idx )		8754	1					
ANR	8915	Callee	HT_IDX_TO_HASH		8754	0					
ANR	8916	Identifier	HT_IDX_TO_HASH		8754	0					
ANR	8917	ArgumentList	idx		8754	1					
ANR	8918	Argument	idx		8754	0					
ANR	8919	Identifier	idx		8754	0					
ANR	8920	CompoundStatement		17:71:597:597	8754	1					
ANR	8921	ExpressionStatement	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) = Z_NEXT ( p -> val )"	264:3:7724:7781	8754	0	True				
ANR	8922	AssignmentExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) = Z_NEXT ( p -> val )"		8754	0		=			
ANR	8923	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		8754	0					
ANR	8924	Callee	HT_HASH		8754	0					
ANR	8925	Identifier	HT_HASH		8754	0					
ANR	8926	ArgumentList	& ZCSG ( interned_strings )		8754	1					
ANR	8927	Argument	& ZCSG ( interned_strings )		8754	0					
ANR	8928	UnaryOperationExpression	& ZCSG ( interned_strings )		8754	0					
ANR	8929	UnaryOperator	&		8754	0					
ANR	8930	CallExpression	ZCSG ( interned_strings )		8754	1					
ANR	8931	Callee	ZCSG		8754	0					
ANR	8932	Identifier	ZCSG		8754	0					
ANR	8933	ArgumentList	interned_strings		8754	1					
ANR	8934	Argument	interned_strings		8754	0					
ANR	8935	Identifier	interned_strings		8754	0					
ANR	8936	Argument	nIndex		8754	1					
ANR	8937	Identifier	nIndex		8754	0					
ANR	8938	CallExpression	Z_NEXT ( p -> val )		8754	1					
ANR	8939	Callee	Z_NEXT		8754	0					
ANR	8940	Identifier	Z_NEXT		8754	0					
ANR	8941	ArgumentList	p -> val		8754	1					
ANR	8942	Argument	p -> val		8754	0					
ANR	8943	PtrMemberAccess	p -> val		8754	0					
ANR	8944	Identifier	p		8754	0					
ANR	8945	Identifier	val		8754	1					
ANR	8946	ElseStatement	else		8754	0					
ANR	8947	CompoundStatement		20:3:675:731	8754	0					
ANR	8948	IdentifierDeclStatement	"uint32_t prev = HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) ;"	266:3:7797:7853	8754	0	True				
ANR	8949	IdentifierDecl	"prev = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		8754	0					
ANR	8950	IdentifierDeclType	uint32_t		8754	0					
ANR	8951	Identifier	prev		8754	1					
ANR	8952	AssignmentExpression	"prev = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		8754	2		=			
ANR	8953	Identifier	prev		8754	0					
ANR	8954	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		8754	1					
ANR	8955	Callee	HT_HASH		8754	0					
ANR	8956	Identifier	HT_HASH		8754	0					
ANR	8957	ArgumentList	& ZCSG ( interned_strings )		8754	1					
ANR	8958	Argument	& ZCSG ( interned_strings )		8754	0					
ANR	8959	UnaryOperationExpression	& ZCSG ( interned_strings )		8754	0					
ANR	8960	UnaryOperator	&		8754	0					
ANR	8961	CallExpression	ZCSG ( interned_strings )		8754	1					
ANR	8962	Callee	ZCSG		8754	0					
ANR	8963	Identifier	ZCSG		8754	0					
ANR	8964	ArgumentList	interned_strings		8754	1					
ANR	8965	Argument	interned_strings		8754	0					
ANR	8966	Identifier	interned_strings		8754	0					
ANR	8967	Argument	nIndex		8754	1					
ANR	8968	Identifier	nIndex		8754	0					
ANR	8969	WhileStatement	"while ( Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) != idx )"		8754	1					
ANR	8970	Condition	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) != idx"	267:10:7865:7932	8754	0	True				
ANR	8971	EqualityExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) != idx"		8754	0		!=			
ANR	8972	CallExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"		8754	0					
ANR	8973	Callee	Z_NEXT		8754	0					
ANR	8974	Identifier	Z_NEXT		8754	0					
ANR	8975	ArgumentList	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754	1					
ANR	8976	Argument	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754	0					
ANR	8977	PtrMemberAccess	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754	0					
ANR	8978	CallExpression	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev )"		8754	0					
ANR	8979	Callee	HT_HASH_TO_BUCKET		8754	0					
ANR	8980	Identifier	HT_HASH_TO_BUCKET		8754	0					
ANR	8981	ArgumentList	& ZCSG ( interned_strings )		8754	1					
ANR	8982	Argument	& ZCSG ( interned_strings )		8754	0					
ANR	8983	UnaryOperationExpression	& ZCSG ( interned_strings )		8754	0					
ANR	8984	UnaryOperator	&		8754	0					
ANR	8985	CallExpression	ZCSG ( interned_strings )		8754	1					
ANR	8986	Callee	ZCSG		8754	0					
ANR	8987	Identifier	ZCSG		8754	0					
ANR	8988	ArgumentList	interned_strings		8754	1					
ANR	8989	Argument	interned_strings		8754	0					
ANR	8990	Identifier	interned_strings		8754	0					
ANR	8991	Argument	prev		8754	1					
ANR	8992	Identifier	prev		8754	0					
ANR	8993	Identifier	val		8754	1					
ANR	8994	Identifier	idx		8754	1					
ANR	8995	CompoundStatement		21:80:813:813	8754	1					
ANR	8996	ExpressionStatement	"prev = Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"	268:4:7941:8009	8754	0	True				
ANR	8997	AssignmentExpression	"prev = Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"		8754	0		=			
ANR	8998	Identifier	prev		8754	0					
ANR	8999	CallExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"		8754	1					
ANR	9000	Callee	Z_NEXT		8754	0					
ANR	9001	Identifier	Z_NEXT		8754	0					
ANR	9002	ArgumentList	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754	1					
ANR	9003	Argument	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754	0					
ANR	9004	PtrMemberAccess	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754	0					
ANR	9005	CallExpression	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev )"		8754	0					
ANR	9006	Callee	HT_HASH_TO_BUCKET		8754	0					
ANR	9007	Identifier	HT_HASH_TO_BUCKET		8754	0					
ANR	9008	ArgumentList	& ZCSG ( interned_strings )		8754	1					
ANR	9009	Argument	& ZCSG ( interned_strings )		8754	0					
ANR	9010	UnaryOperationExpression	& ZCSG ( interned_strings )		8754	0					
ANR	9011	UnaryOperator	&		8754	0					
ANR	9012	CallExpression	ZCSG ( interned_strings )		8754	1					
ANR	9013	Callee	ZCSG		8754	0					
ANR	9014	Identifier	ZCSG		8754	0					
ANR	9015	ArgumentList	interned_strings		8754	1					
ANR	9016	Argument	interned_strings		8754	0					
ANR	9017	Identifier	interned_strings		8754	0					
ANR	9018	Argument	prev		8754	1					
ANR	9019	Identifier	prev		8754	0					
ANR	9020	Identifier	val		8754	1					
ANR	9021	ExpressionStatement	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) = Z_NEXT ( p -> val )"	270:3:8020:8098	8754	2	True				
ANR	9022	AssignmentExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) = Z_NEXT ( p -> val )"		8754	0		=			
ANR	9023	CallExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"		8754	0					
ANR	9024	Callee	Z_NEXT		8754	0					
ANR	9025	Identifier	Z_NEXT		8754	0					
ANR	9026	ArgumentList	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754	1					
ANR	9027	Argument	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754	0					
ANR	9028	PtrMemberAccess	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754	0					
ANR	9029	CallExpression	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev )"		8754	0					
ANR	9030	Callee	HT_HASH_TO_BUCKET		8754	0					
ANR	9031	Identifier	HT_HASH_TO_BUCKET		8754	0					
ANR	9032	ArgumentList	& ZCSG ( interned_strings )		8754	1					
ANR	9033	Argument	& ZCSG ( interned_strings )		8754	0					
ANR	9034	UnaryOperationExpression	& ZCSG ( interned_strings )		8754	0					
ANR	9035	UnaryOperator	&		8754	0					
ANR	9036	CallExpression	ZCSG ( interned_strings )		8754	1					
ANR	9037	Callee	ZCSG		8754	0					
ANR	9038	Identifier	ZCSG		8754	0					
ANR	9039	ArgumentList	interned_strings		8754	1					
ANR	9040	Argument	interned_strings		8754	0					
ANR	9041	Identifier	interned_strings		8754	0					
ANR	9042	Argument	prev		8754	1					
ANR	9043	Identifier	prev		8754	0					
ANR	9044	Identifier	val		8754	1					
ANR	9045	CallExpression	Z_NEXT ( p -> val )		8754	1					
ANR	9046	Callee	Z_NEXT		8754	0					
ANR	9047	Identifier	Z_NEXT		8754	0					
ANR	9048	ArgumentList	p -> val		8754	1					
ANR	9049	Argument	p -> val		8754	0					
ANR	9050	PtrMemberAccess	p -> val		8754	0					
ANR	9051	Identifier	p		8754	0					
ANR	9052	Identifier	val		8754	1					
ANR	9053	ReturnType	static void		8754	1					
ANR	9054	Identifier	accel_interned_strings_restore_state		8754	2					
ANR	9055	ParameterList			8754	3					
ANR	9056	CFGEntryNode	ENTRY		8754		True				
ANR	9057	CFGExitNode	EXIT		8754		True				
ANR	9058	Symbol	* HT_HASH_TO_BUCKET		8754						
ANR	9059	Symbol	prev		8754						
ANR	9060	Symbol	nIndex		8754						
ANR	9061	Symbol	Z_NEXT		8754						
ANR	9062	Symbol	ZCSG ( interned_strings ) . nNumUsed		8754						
ANR	9063	Symbol	ZCSG ( interned_strings ) . arData		8754						
ANR	9064	Symbol	HT_IDX_TO_HASH		8754						
ANR	9065	Symbol	p -> val		8754						
ANR	9066	Symbol	p -> key		8754						
ANR	9067	Symbol	p		8754						
ANR	9068	Symbol	interned_strings_top		8754						
ANR	9069	Symbol	& ZCSG		8754						
ANR	9070	Symbol	ZCSG		8754						
ANR	9071	Symbol	HT_HASH		8754						
ANR	9072	Symbol	interned_strings_saved_top		8754						
ANR	9073	Symbol	ZCSG ( interned_strings ) . nTableMask		8754						
ANR	9074	Symbol	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		8754						
ANR	9075	Symbol	* p		8754						
ANR	9076	Symbol	idx		8754						
ANR	9077	Symbol	interned_strings		8754						
ANR	9078	Symbol	ZCSG ( interned_strings ) . nNumOfElements		8754						
ANR	9079	Symbol	p -> h		8754						
ANR	9080	Symbol	HT_HASH_TO_BUCKET		8754						
ANR	9081	Function	accel_interned_strings_save_state	275:0:8111:8229							
ANR	9082	FunctionDef	accel_interned_strings_save_state ()		9081	0					
ANR	9083	CompoundStatement		276:0:8163:8229	9081	0					
ANR	9084	ExpressionStatement	ZCSG ( interned_strings_saved_top ) = ZCSG ( interned_strings_top )	277:1:8166:8227	9081	0	True				
ANR	9085	AssignmentExpression	ZCSG ( interned_strings_saved_top ) = ZCSG ( interned_strings_top )		9081	0		=			
ANR	9086	CallExpression	ZCSG ( interned_strings_saved_top )		9081	0					
ANR	9087	Callee	ZCSG		9081	0					
ANR	9088	Identifier	ZCSG		9081	0					
ANR	9089	ArgumentList	interned_strings_saved_top		9081	1					
ANR	9090	Argument	interned_strings_saved_top		9081	0					
ANR	9091	Identifier	interned_strings_saved_top		9081	0					
ANR	9092	CallExpression	ZCSG ( interned_strings_top )		9081	1					
ANR	9093	Callee	ZCSG		9081	0					
ANR	9094	Identifier	ZCSG		9081	0					
ANR	9095	ArgumentList	interned_strings_top		9081	1					
ANR	9096	Argument	interned_strings_top		9081	0					
ANR	9097	Identifier	interned_strings_top		9081	0					
ANR	9098	ReturnType	static void		9081	1					
ANR	9099	Identifier	accel_interned_strings_save_state		9081	2					
ANR	9100	ParameterList			9081	3					
ANR	9101	CFGEntryNode	ENTRY		9081		True				
ANR	9102	CFGExitNode	EXIT		9081		True				
ANR	9103	Symbol	interned_strings_top		9081						
ANR	9104	Symbol	ZCSG		9081						
ANR	9105	Symbol	interned_strings_saved_top		9081						
ANR	9106	Function	accel_find_interned_string	282:0:8251:9024							
ANR	9107	FunctionDef	accel_find_interned_string (zend_string * str)		9106	0					
ANR	9108	CompoundStatement		283:0:8316:9024	9106	0					
ANR	9109	IdentifierDeclStatement	zend_ulong h ;	285:1:8387:8399	9106	0	True				
ANR	9110	IdentifierDecl	h		9106	0					
ANR	9111	IdentifierDeclType	zend_ulong		9106	0					
ANR	9112	Identifier	h		9106	1					
ANR	9113	IdentifierDeclStatement	uint nIndex ;	286:1:8402:8413	9106	1	True				
ANR	9114	IdentifierDecl	nIndex		9106	0					
ANR	9115	IdentifierDeclType	uint		9106	0					
ANR	9116	Identifier	nIndex		9106	1					
ANR	9117	IdentifierDeclStatement	uint idx ;	287:1:8416:8424	9106	2	True				
ANR	9118	IdentifierDecl	idx		9106	0					
ANR	9119	IdentifierDeclType	uint		9106	0					
ANR	9120	Identifier	idx		9106	1					
ANR	9121	IdentifierDeclStatement	"Bucket * arData , * p ;"	288:1:8427:8445	9106	3	True				
ANR	9122	IdentifierDecl	* arData		9106	0					
ANR	9123	IdentifierDeclType	Bucket *		9106	0					
ANR	9124	Identifier	arData		9106	1					
ANR	9125	IdentifierDecl	* p		9106	1					
ANR	9126	IdentifierDeclType	Bucket *		9106	0					
ANR	9127	Identifier	p		9106	1					
ANR	9128	IfStatement	if ( IS_ACCEL_INTERNED ( str ) )		9106	4					
ANR	9129	Condition	IS_ACCEL_INTERNED ( str )	290:5:8453:8474	9106	0	True				
ANR	9130	CallExpression	IS_ACCEL_INTERNED ( str )		9106	0					
ANR	9131	Callee	IS_ACCEL_INTERNED		9106	0					
ANR	9132	Identifier	IS_ACCEL_INTERNED		9106	0					
ANR	9133	ArgumentList	str		9106	1					
ANR	9134	Argument	str		9106	0					
ANR	9135	Identifier	str		9106	0					
ANR	9136	CompoundStatement		8:29:160:160	9106	1					
ANR	9137	ReturnStatement	return str ;	292:2:8524:8534	9106	0	True				
ANR	9138	Identifier	str		9106	0					
ANR	9139	ExpressionStatement	h = zend_string_hash_val ( str )	295:1:8541:8570	9106	5	True				
ANR	9140	AssignmentExpression	h = zend_string_hash_val ( str )		9106	0		=			
ANR	9141	Identifier	h		9106	0					
ANR	9142	CallExpression	zend_string_hash_val ( str )		9106	1					
ANR	9143	Callee	zend_string_hash_val		9106	0					
ANR	9144	Identifier	zend_string_hash_val		9106	0					
ANR	9145	ArgumentList	str		9106	1					
ANR	9146	Argument	str		9106	0					
ANR	9147	Identifier	str		9106	0					
ANR	9148	ExpressionStatement	nIndex = h | ZCSG ( interned_strings ) . nTableMask	296:1:8573:8619	9106	6	True				
ANR	9149	AssignmentExpression	nIndex = h | ZCSG ( interned_strings ) . nTableMask		9106	0		=			
ANR	9150	Identifier	nIndex		9106	0					
ANR	9151	InclusiveOrExpression	h | ZCSG ( interned_strings ) . nTableMask		9106	1		|			
ANR	9152	Identifier	h		9106	0					
ANR	9153	MemberAccess	ZCSG ( interned_strings ) . nTableMask		9106	1					
ANR	9154	CallExpression	ZCSG ( interned_strings )		9106	0					
ANR	9155	Callee	ZCSG		9106	0					
ANR	9156	Identifier	ZCSG		9106	0					
ANR	9157	ArgumentList	interned_strings		9106	1					
ANR	9158	Argument	interned_strings		9106	0					
ANR	9159	Identifier	interned_strings		9106	0					
ANR	9160	Identifier	nTableMask		9106	1					
ANR	9161	ExpressionStatement	"idx = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"	299:1:8665:8711	9106	7	True				
ANR	9162	AssignmentExpression	"idx = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		9106	0		=			
ANR	9163	Identifier	idx		9106	0					
ANR	9164	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		9106	1					
ANR	9165	Callee	HT_HASH		9106	0					
ANR	9166	Identifier	HT_HASH		9106	0					
ANR	9167	ArgumentList	& ZCSG ( interned_strings )		9106	1					
ANR	9168	Argument	& ZCSG ( interned_strings )		9106	0					
ANR	9169	UnaryOperationExpression	& ZCSG ( interned_strings )		9106	0					
ANR	9170	UnaryOperator	&		9106	0					
ANR	9171	CallExpression	ZCSG ( interned_strings )		9106	1					
ANR	9172	Callee	ZCSG		9106	0					
ANR	9173	Identifier	ZCSG		9106	0					
ANR	9174	ArgumentList	interned_strings		9106	1					
ANR	9175	Argument	interned_strings		9106	0					
ANR	9176	Identifier	interned_strings		9106	0					
ANR	9177	Argument	nIndex		9106	1					
ANR	9178	Identifier	nIndex		9106	0					
ANR	9179	ExpressionStatement	arData = ZCSG ( interned_strings ) . arData	300:1:8714:8752	9106	8	True				
ANR	9180	AssignmentExpression	arData = ZCSG ( interned_strings ) . arData		9106	0		=			
ANR	9181	Identifier	arData		9106	0					
ANR	9182	MemberAccess	ZCSG ( interned_strings ) . arData		9106	1					
ANR	9183	CallExpression	ZCSG ( interned_strings )		9106	0					
ANR	9184	Callee	ZCSG		9106	0					
ANR	9185	Identifier	ZCSG		9106	0					
ANR	9186	ArgumentList	interned_strings		9106	1					
ANR	9187	Argument	interned_strings		9106	0					
ANR	9188	Identifier	interned_strings		9106	0					
ANR	9189	Identifier	arData		9106	1					
ANR	9190	WhileStatement	while ( idx != HT_INVALID_IDX )		9106	9					
ANR	9191	Condition	idx != HT_INVALID_IDX	301:8:8762:8782	9106	0	True				
ANR	9192	EqualityExpression	idx != HT_INVALID_IDX		9106	0		!=			
ANR	9193	Identifier	idx		9106	0					
ANR	9194	Identifier	HT_INVALID_IDX		9106	1					
ANR	9195	CompoundStatement		19:31:468:468	9106	1					
ANR	9196	ExpressionStatement	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"	302:2:8789:8826	9106	0	True				
ANR	9197	AssignmentExpression	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"		9106	0		=			
ANR	9198	Identifier	p		9106	0					
ANR	9199	CallExpression	"HT_HASH_TO_BUCKET_EX ( arData , idx )"		9106	1					
ANR	9200	Callee	HT_HASH_TO_BUCKET_EX		9106	0					
ANR	9201	Identifier	HT_HASH_TO_BUCKET_EX		9106	0					
ANR	9202	ArgumentList	arData		9106	1					
ANR	9203	Argument	arData		9106	0					
ANR	9204	Identifier	arData		9106	0					
ANR	9205	Argument	idx		9106	1					
ANR	9206	Identifier	idx		9106	0					
ANR	9207	IfStatement	if ( ( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) ) )		9106	1					
ANR	9208	Condition	( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) )	303:6:8834:8883	9106	0	True				
ANR	9209	AndExpression	( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) )		9106	0		&&			
ANR	9210	EqualityExpression	p -> h == h		9106	0		==			
ANR	9211	PtrMemberAccess	p -> h		9106	0					
ANR	9212	Identifier	p		9106	0					
ANR	9213	Identifier	h		9106	1					
ANR	9214	Identifier	h		9106	1					
ANR	9215	EqualityExpression	ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str )		9106	1		==			
ANR	9216	CallExpression	ZSTR_LEN ( p -> key )		9106	0					
ANR	9217	Callee	ZSTR_LEN		9106	0					
ANR	9218	Identifier	ZSTR_LEN		9106	0					
ANR	9219	ArgumentList	p -> key		9106	1					
ANR	9220	Argument	p -> key		9106	0					
ANR	9221	PtrMemberAccess	p -> key		9106	0					
ANR	9222	Identifier	p		9106	0					
ANR	9223	Identifier	key		9106	1					
ANR	9224	CallExpression	ZSTR_LEN ( str )		9106	1					
ANR	9225	Callee	ZSTR_LEN		9106	0					
ANR	9226	Identifier	ZSTR_LEN		9106	0					
ANR	9227	ArgumentList	str		9106	1					
ANR	9228	Argument	str		9106	0					
ANR	9229	Identifier	str		9106	0					
ANR	9230	CompoundStatement		21:58:569:569	9106	1					
ANR	9231	IfStatement	"if ( ! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) ) )"		9106	0					
ANR	9232	Condition	"! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"	304:7:8895:8949	9106	0	True				
ANR	9233	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		9106	0					
ANR	9234	UnaryOperator	!		9106	0					
ANR	9235	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		9106	1					
ANR	9236	Callee	memcmp		9106	0					
ANR	9237	Identifier	memcmp		9106	0					
ANR	9238	ArgumentList	ZSTR_VAL ( p -> key )		9106	1					
ANR	9239	Argument	ZSTR_VAL ( p -> key )		9106	0					
ANR	9240	CallExpression	ZSTR_VAL ( p -> key )		9106	0					
ANR	9241	Callee	ZSTR_VAL		9106	0					
ANR	9242	Identifier	ZSTR_VAL		9106	0					
ANR	9243	ArgumentList	p -> key		9106	1					
ANR	9244	Argument	p -> key		9106	0					
ANR	9245	PtrMemberAccess	p -> key		9106	0					
ANR	9246	Identifier	p		9106	0					
ANR	9247	Identifier	key		9106	1					
ANR	9248	Argument	ZSTR_VAL ( str )		9106	1					
ANR	9249	CallExpression	ZSTR_VAL ( str )		9106	0					
ANR	9250	Callee	ZSTR_VAL		9106	0					
ANR	9251	Identifier	ZSTR_VAL		9106	0					
ANR	9252	ArgumentList	str		9106	1					
ANR	9253	Argument	str		9106	0					
ANR	9254	Identifier	str		9106	0					
ANR	9255	Argument	ZSTR_LEN ( str )		9106	2					
ANR	9256	CallExpression	ZSTR_LEN ( str )		9106	0					
ANR	9257	Callee	ZSTR_LEN		9106	0					
ANR	9258	Identifier	ZSTR_LEN		9106	0					
ANR	9259	ArgumentList	str		9106	1					
ANR	9260	Argument	str		9106	0					
ANR	9261	Identifier	str		9106	0					
ANR	9262	CompoundStatement		22:64:635:635	9106	1					
ANR	9263	ReturnStatement	return p -> key ;	305:4:8958:8971	9106	0	True				
ANR	9264	PtrMemberAccess	p -> key		9106	0					
ANR	9265	Identifier	p		9106	0					
ANR	9266	Identifier	key		9106	1					
ANR	9267	ExpressionStatement	idx = Z_NEXT ( p -> val )	308:2:8984:9004	9106	2	True				
ANR	9268	AssignmentExpression	idx = Z_NEXT ( p -> val )		9106	0		=			
ANR	9269	Identifier	idx		9106	0					
ANR	9270	CallExpression	Z_NEXT ( p -> val )		9106	1					
ANR	9271	Callee	Z_NEXT		9106	0					
ANR	9272	Identifier	Z_NEXT		9106	0					
ANR	9273	ArgumentList	p -> val		9106	1					
ANR	9274	Argument	p -> val		9106	0					
ANR	9275	PtrMemberAccess	p -> val		9106	0					
ANR	9276	Identifier	p		9106	0					
ANR	9277	Identifier	val		9106	1					
ANR	9278	ReturnStatement	return NULL ;	311:1:9011:9022	9106	10	True				
ANR	9279	Identifier	NULL		9106	0					
ANR	9280	ReturnType	static zend_string *		9106	1					
ANR	9281	Identifier	accel_find_interned_string		9106	2					
ANR	9282	ParameterList	zend_string * str		9106	3					
ANR	9283	Parameter	zend_string * str	282:47:8298:8313	9106	0	True				
ANR	9284	ParameterType	zend_string *		9106	0					
ANR	9285	Identifier	str		9106	1					
ANR	9286	CFGEntryNode	ENTRY		9106		True				
ANR	9287	CFGExitNode	EXIT		9106		True				
ANR	9288	Symbol	IS_ACCEL_INTERNED		9106						
ANR	9289	Symbol	Z_NEXT		9106						
ANR	9290	Symbol	ZCSG ( interned_strings ) . arData		9106						
ANR	9291	Symbol	memcmp		9106						
ANR	9292	Symbol	ZCSG		9106						
ANR	9293	Symbol	HT_HASH		9106						
ANR	9294	Symbol	arData		9106						
ANR	9295	Symbol	zend_string_hash_val		9106						
ANR	9296	Symbol	p -> h		9106						
ANR	9297	Symbol	HT_INVALID_IDX		9106						
ANR	9298	Symbol	NULL		9106						
ANR	9299	Symbol	h		9106						
ANR	9300	Symbol	nIndex		9106						
ANR	9301	Symbol	p -> val		9106						
ANR	9302	Symbol	p -> key		9106						
ANR	9303	Symbol	ZSTR_VAL		9106						
ANR	9304	Symbol	str		9106						
ANR	9305	Symbol	p		9106						
ANR	9306	Symbol	& ZCSG		9106						
ANR	9307	Symbol	ZCSG ( interned_strings ) . nTableMask		9106						
ANR	9308	Symbol	HT_HASH_TO_BUCKET_EX		9106						
ANR	9309	Symbol	ZSTR_LEN		9106						
ANR	9310	Symbol	* p		9106						
ANR	9311	Symbol	idx		9106						
ANR	9312	Symbol	interned_strings		9106						
ANR	9313	Function	accel_new_interned_string	315:0:9034:11118							
ANR	9314	FunctionDef	accel_new_interned_string (zend_string * str)		9313	0					
ANR	9315	CompoundStatement		316:0:9091:11118	9313	0					
ANR	9316	IdentifierDeclStatement	zend_ulong h ;	319:1:9174:9186	9313	0	True				
ANR	9317	IdentifierDecl	h		9313	0					
ANR	9318	IdentifierDeclType	zend_ulong		9313	0					
ANR	9319	Identifier	h		9313	1					
ANR	9320	IdentifierDeclStatement	uint nIndex ;	320:1:9189:9200	9313	1	True				
ANR	9321	IdentifierDecl	nIndex		9313	0					
ANR	9322	IdentifierDeclType	uint		9313	0					
ANR	9323	Identifier	nIndex		9313	1					
ANR	9324	IdentifierDeclStatement	uint idx ;	321:1:9203:9211	9313	2	True				
ANR	9325	IdentifierDecl	idx		9313	0					
ANR	9326	IdentifierDeclType	uint		9313	0					
ANR	9327	Identifier	idx		9313	1					
ANR	9328	IdentifierDeclStatement	Bucket * p ;	322:1:9214:9223	9313	3	True				
ANR	9329	IdentifierDecl	* p		9313	0					
ANR	9330	IdentifierDeclType	Bucket *		9313	0					
ANR	9331	Identifier	p		9313	1					
ANR	9332	IfStatement	if ( ZCG ( accel_directives ) . file_cache_only )		9313	4					
ANR	9333	Condition	ZCG ( accel_directives ) . file_cache_only	325:5:9262:9298	9313	0	True				
ANR	9334	MemberAccess	ZCG ( accel_directives ) . file_cache_only		9313	0					
ANR	9335	CallExpression	ZCG ( accel_directives )		9313	0					
ANR	9336	Callee	ZCG		9313	0					
ANR	9337	Identifier	ZCG		9313	0					
ANR	9338	ArgumentList	accel_directives		9313	1					
ANR	9339	Argument	accel_directives		9313	0					
ANR	9340	Identifier	accel_directives		9313	0					
ANR	9341	Identifier	file_cache_only		9313	1					
ANR	9342	CompoundStatement		10:44:209:209	9313	1					
ANR	9343	ReturnStatement	return str ;	326:2:9305:9315	9313	0	True				
ANR	9344	Identifier	str		9313	0					
ANR	9345	IfStatement	if ( IS_ACCEL_INTERNED ( str ) )		9313	5					
ANR	9346	Condition	IS_ACCEL_INTERNED ( str )	330:5:9333:9354	9313	0	True				
ANR	9347	CallExpression	IS_ACCEL_INTERNED ( str )		9313	0					
ANR	9348	Callee	IS_ACCEL_INTERNED		9313	0					
ANR	9349	Identifier	IS_ACCEL_INTERNED		9313	0					
ANR	9350	ArgumentList	str		9313	1					
ANR	9351	Argument	str		9313	0					
ANR	9352	Identifier	str		9313	0					
ANR	9353	CompoundStatement		15:29:265:265	9313	1					
ANR	9354	ReturnStatement	return str ;	332:2:9404:9414	9313	0	True				
ANR	9355	Identifier	str		9313	0					
ANR	9356	ExpressionStatement	h = zend_string_hash_val ( str )	335:1:9421:9450	9313	6	True				
ANR	9357	AssignmentExpression	h = zend_string_hash_val ( str )		9313	0		=			
ANR	9358	Identifier	h		9313	0					
ANR	9359	CallExpression	zend_string_hash_val ( str )		9313	1					
ANR	9360	Callee	zend_string_hash_val		9313	0					
ANR	9361	Identifier	zend_string_hash_val		9313	0					
ANR	9362	ArgumentList	str		9313	1					
ANR	9363	Argument	str		9313	0					
ANR	9364	Identifier	str		9313	0					
ANR	9365	ExpressionStatement	nIndex = h | ZCSG ( interned_strings ) . nTableMask	336:1:9453:9499	9313	7	True				
ANR	9366	AssignmentExpression	nIndex = h | ZCSG ( interned_strings ) . nTableMask		9313	0		=			
ANR	9367	Identifier	nIndex		9313	0					
ANR	9368	InclusiveOrExpression	h | ZCSG ( interned_strings ) . nTableMask		9313	1		|			
ANR	9369	Identifier	h		9313	0					
ANR	9370	MemberAccess	ZCSG ( interned_strings ) . nTableMask		9313	1					
ANR	9371	CallExpression	ZCSG ( interned_strings )		9313	0					
ANR	9372	Callee	ZCSG		9313	0					
ANR	9373	Identifier	ZCSG		9313	0					
ANR	9374	ArgumentList	interned_strings		9313	1					
ANR	9375	Argument	interned_strings		9313	0					
ANR	9376	Identifier	interned_strings		9313	0					
ANR	9377	Identifier	nTableMask		9313	1					
ANR	9378	ExpressionStatement	"idx = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"	339:1:9545:9591	9313	8	True				
ANR	9379	AssignmentExpression	"idx = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		9313	0		=			
ANR	9380	Identifier	idx		9313	0					
ANR	9381	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		9313	1					
ANR	9382	Callee	HT_HASH		9313	0					
ANR	9383	Identifier	HT_HASH		9313	0					
ANR	9384	ArgumentList	& ZCSG ( interned_strings )		9313	1					
ANR	9385	Argument	& ZCSG ( interned_strings )		9313	0					
ANR	9386	UnaryOperationExpression	& ZCSG ( interned_strings )		9313	0					
ANR	9387	UnaryOperator	&		9313	0					
ANR	9388	CallExpression	ZCSG ( interned_strings )		9313	1					
ANR	9389	Callee	ZCSG		9313	0					
ANR	9390	Identifier	ZCSG		9313	0					
ANR	9391	ArgumentList	interned_strings		9313	1					
ANR	9392	Argument	interned_strings		9313	0					
ANR	9393	Identifier	interned_strings		9313	0					
ANR	9394	Argument	nIndex		9313	1					
ANR	9395	Identifier	nIndex		9313	0					
ANR	9396	WhileStatement	while ( idx != HT_INVALID_IDX )		9313	9					
ANR	9397	Condition	idx != HT_INVALID_IDX	340:8:9601:9621	9313	0	True				
ANR	9398	EqualityExpression	idx != HT_INVALID_IDX		9313	0		!=			
ANR	9399	Identifier	idx		9313	0					
ANR	9400	Identifier	HT_INVALID_IDX		9313	1					
ANR	9401	CompoundStatement		25:31:532:532	9313	1					
ANR	9402	ExpressionStatement	"p = HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , idx )"	341:2:9628:9679	9313	0	True				
ANR	9403	AssignmentExpression	"p = HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , idx )"		9313	0		=			
ANR	9404	Identifier	p		9313	0					
ANR	9405	CallExpression	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , idx )"		9313	1					
ANR	9406	Callee	HT_HASH_TO_BUCKET		9313	0					
ANR	9407	Identifier	HT_HASH_TO_BUCKET		9313	0					
ANR	9408	ArgumentList	& ZCSG ( interned_strings )		9313	1					
ANR	9409	Argument	& ZCSG ( interned_strings )		9313	0					
ANR	9410	UnaryOperationExpression	& ZCSG ( interned_strings )		9313	0					
ANR	9411	UnaryOperator	&		9313	0					
ANR	9412	CallExpression	ZCSG ( interned_strings )		9313	1					
ANR	9413	Callee	ZCSG		9313	0					
ANR	9414	Identifier	ZCSG		9313	0					
ANR	9415	ArgumentList	interned_strings		9313	1					
ANR	9416	Argument	interned_strings		9313	0					
ANR	9417	Identifier	interned_strings		9313	0					
ANR	9418	Argument	idx		9313	1					
ANR	9419	Identifier	idx		9313	0					
ANR	9420	IfStatement	if ( ( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) ) )		9313	1					
ANR	9421	Condition	( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) )	342:6:9687:9736	9313	0	True				
ANR	9422	AndExpression	( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) )		9313	0		&&			
ANR	9423	EqualityExpression	p -> h == h		9313	0		==			
ANR	9424	PtrMemberAccess	p -> h		9313	0					
ANR	9425	Identifier	p		9313	0					
ANR	9426	Identifier	h		9313	1					
ANR	9427	Identifier	h		9313	1					
ANR	9428	EqualityExpression	ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str )		9313	1		==			
ANR	9429	CallExpression	ZSTR_LEN ( p -> key )		9313	0					
ANR	9430	Callee	ZSTR_LEN		9313	0					
ANR	9431	Identifier	ZSTR_LEN		9313	0					
ANR	9432	ArgumentList	p -> key		9313	1					
ANR	9433	Argument	p -> key		9313	0					
ANR	9434	PtrMemberAccess	p -> key		9313	0					
ANR	9435	Identifier	p		9313	0					
ANR	9436	Identifier	key		9313	1					
ANR	9437	CallExpression	ZSTR_LEN ( str )		9313	1					
ANR	9438	Callee	ZSTR_LEN		9313	0					
ANR	9439	Identifier	ZSTR_LEN		9313	0					
ANR	9440	ArgumentList	str		9313	1					
ANR	9441	Argument	str		9313	0					
ANR	9442	Identifier	str		9313	0					
ANR	9443	CompoundStatement		27:58:647:647	9313	1					
ANR	9444	IfStatement	"if ( ! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) ) )"		9313	0					
ANR	9445	Condition	"! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"	343:7:9748:9802	9313	0	True				
ANR	9446	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		9313	0					
ANR	9447	UnaryOperator	!		9313	0					
ANR	9448	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		9313	1					
ANR	9449	Callee	memcmp		9313	0					
ANR	9450	Identifier	memcmp		9313	0					
ANR	9451	ArgumentList	ZSTR_VAL ( p -> key )		9313	1					
ANR	9452	Argument	ZSTR_VAL ( p -> key )		9313	0					
ANR	9453	CallExpression	ZSTR_VAL ( p -> key )		9313	0					
ANR	9454	Callee	ZSTR_VAL		9313	0					
ANR	9455	Identifier	ZSTR_VAL		9313	0					
ANR	9456	ArgumentList	p -> key		9313	1					
ANR	9457	Argument	p -> key		9313	0					
ANR	9458	PtrMemberAccess	p -> key		9313	0					
ANR	9459	Identifier	p		9313	0					
ANR	9460	Identifier	key		9313	1					
ANR	9461	Argument	ZSTR_VAL ( str )		9313	1					
ANR	9462	CallExpression	ZSTR_VAL ( str )		9313	0					
ANR	9463	Callee	ZSTR_VAL		9313	0					
ANR	9464	Identifier	ZSTR_VAL		9313	0					
ANR	9465	ArgumentList	str		9313	1					
ANR	9466	Argument	str		9313	0					
ANR	9467	Identifier	str		9313	0					
ANR	9468	Argument	ZSTR_LEN ( str )		9313	2					
ANR	9469	CallExpression	ZSTR_LEN ( str )		9313	0					
ANR	9470	Callee	ZSTR_LEN		9313	0					
ANR	9471	Identifier	ZSTR_LEN		9313	0					
ANR	9472	ArgumentList	str		9313	1					
ANR	9473	Argument	str		9313	0					
ANR	9474	Identifier	str		9313	0					
ANR	9475	CompoundStatement		28:64:713:713	9313	1					
ANR	9476	ExpressionStatement	zend_string_release ( str )	344:4:9811:9835	9313	0	True				
ANR	9477	CallExpression	zend_string_release ( str )		9313	0					
ANR	9478	Callee	zend_string_release		9313	0					
ANR	9479	Identifier	zend_string_release		9313	0					
ANR	9480	ArgumentList	str		9313	1					
ANR	9481	Argument	str		9313	0					
ANR	9482	Identifier	str		9313	0					
ANR	9483	ReturnStatement	return p -> key ;	345:4:9841:9854	9313	1	True				
ANR	9484	PtrMemberAccess	p -> key		9313	0					
ANR	9485	Identifier	p		9313	0					
ANR	9486	Identifier	key		9313	1					
ANR	9487	ExpressionStatement	idx = Z_NEXT ( p -> val )	348:2:9867:9887	9313	2	True				
ANR	9488	AssignmentExpression	idx = Z_NEXT ( p -> val )		9313	0		=			
ANR	9489	Identifier	idx		9313	0					
ANR	9490	CallExpression	Z_NEXT ( p -> val )		9313	1					
ANR	9491	Callee	Z_NEXT		9313	0					
ANR	9492	Identifier	Z_NEXT		9313	0					
ANR	9493	ArgumentList	p -> val		9313	1					
ANR	9494	Argument	p -> val		9313	0					
ANR	9495	PtrMemberAccess	p -> val		9313	0					
ANR	9496	Identifier	p		9313	0					
ANR	9497	Identifier	val		9313	1					
ANR	9498	IfStatement	if ( ZCSG ( interned_strings_top ) + ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) ) >= ZCSG ( interned_strings_end ) )		9313	10					
ANR	9499	Condition	ZCSG ( interned_strings_top ) + ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) ) >= ZCSG ( interned_strings_end )	351:5:9898:10015	9313	0	True				
ANR	9500	RelationalExpression	ZCSG ( interned_strings_top ) + ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) ) >= ZCSG ( interned_strings_end )		9313	0		>=			
ANR	9501	AdditiveExpression	ZCSG ( interned_strings_top ) + ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )		9313	0		+			
ANR	9502	CallExpression	ZCSG ( interned_strings_top )		9313	0					
ANR	9503	Callee	ZCSG		9313	0					
ANR	9504	Identifier	ZCSG		9313	0					
ANR	9505	ArgumentList	interned_strings_top		9313	1					
ANR	9506	Argument	interned_strings_top		9313	0					
ANR	9507	Identifier	interned_strings_top		9313	0					
ANR	9508	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )		9313	1					
ANR	9509	Callee	ZEND_MM_ALIGNED_SIZE		9313	0					
ANR	9510	Identifier	ZEND_MM_ALIGNED_SIZE		9313	0					
ANR	9511	ArgumentList	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		9313	1					
ANR	9512	Argument	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		9313	0					
ANR	9513	CallExpression	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		9313	0					
ANR	9514	Callee	_ZSTR_STRUCT_SIZE		9313	0					
ANR	9515	Identifier	_ZSTR_STRUCT_SIZE		9313	0					
ANR	9516	ArgumentList	ZSTR_LEN ( str )		9313	1					
ANR	9517	Argument	ZSTR_LEN ( str )		9313	0					
ANR	9518	CallExpression	ZSTR_LEN ( str )		9313	0					
ANR	9519	Callee	ZSTR_LEN		9313	0					
ANR	9520	Identifier	ZSTR_LEN		9313	0					
ANR	9521	ArgumentList	str		9313	1					
ANR	9522	Argument	str		9313	0					
ANR	9523	Identifier	str		9313	0					
ANR	9524	CallExpression	ZCSG ( interned_strings_end )		9313	1					
ANR	9525	Callee	ZCSG		9313	0					
ANR	9526	Identifier	ZCSG		9313	0					
ANR	9527	ArgumentList	interned_strings_end		9313	1					
ANR	9528	Argument	interned_strings_end		9313	0					
ANR	9529	Identifier	interned_strings_end		9313	0					
ANR	9530	CompoundStatement		37:33:926:926	9313	1					
ANR	9531	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_WARNING , ""Interned string buffer overflow"" )"	354:2:10080:10150	9313	0	True				
ANR	9532	CallExpression	"zend_accel_error ( ACCEL_LOG_WARNING , ""Interned string buffer overflow"" )"		9313	0					
ANR	9533	Callee	zend_accel_error		9313	0					
ANR	9534	Identifier	zend_accel_error		9313	0					
ANR	9535	ArgumentList	ACCEL_LOG_WARNING		9313	1					
ANR	9536	Argument	ACCEL_LOG_WARNING		9313	0					
ANR	9537	Identifier	ACCEL_LOG_WARNING		9313	0					
ANR	9538	Argument	"""Interned string buffer overflow"""		9313	1					
ANR	9539	PrimaryExpression	"""Interned string buffer overflow"""		9313	0					
ANR	9540	ReturnStatement	return str ;	355:2:10154:10164	9313	1	True				
ANR	9541	Identifier	str		9313	0					
ANR	9542	ExpressionStatement	idx = ZCSG ( interned_strings ) . nNumUsed ++	360:1:10241:10280	9313	11	True				
ANR	9543	AssignmentExpression	idx = ZCSG ( interned_strings ) . nNumUsed ++		9313	0		=			
ANR	9544	Identifier	idx		9313	0					
ANR	9545	PostIncDecOperationExpression	ZCSG ( interned_strings ) . nNumUsed ++		9313	1					
ANR	9546	MemberAccess	ZCSG ( interned_strings ) . nNumUsed		9313	0					
ANR	9547	CallExpression	ZCSG ( interned_strings )		9313	0					
ANR	9548	Callee	ZCSG		9313	0					
ANR	9549	Identifier	ZCSG		9313	0					
ANR	9550	ArgumentList	interned_strings		9313	1					
ANR	9551	Argument	interned_strings		9313	0					
ANR	9552	Identifier	interned_strings		9313	0					
ANR	9553	Identifier	nNumUsed		9313	1					
ANR	9554	IncDec	++		9313	1					
ANR	9555	ExpressionStatement	ZCSG ( interned_strings ) . nNumOfElements ++	361:1:10283:10322	9313	12	True				
ANR	9556	PostIncDecOperationExpression	ZCSG ( interned_strings ) . nNumOfElements ++		9313	0					
ANR	9557	MemberAccess	ZCSG ( interned_strings ) . nNumOfElements		9313	0					
ANR	9558	CallExpression	ZCSG ( interned_strings )		9313	0					
ANR	9559	Callee	ZCSG		9313	0					
ANR	9560	Identifier	ZCSG		9313	0					
ANR	9561	ArgumentList	interned_strings		9313	1					
ANR	9562	Argument	interned_strings		9313	0					
ANR	9563	Identifier	interned_strings		9313	0					
ANR	9564	Identifier	nNumOfElements		9313	1					
ANR	9565	IncDec	++		9313	1					
ANR	9566	ExpressionStatement	p = ZCSG ( interned_strings ) . arData + idx	362:1:10325:10364	9313	13	True				
ANR	9567	AssignmentExpression	p = ZCSG ( interned_strings ) . arData + idx		9313	0		=			
ANR	9568	Identifier	p		9313	0					
ANR	9569	AdditiveExpression	ZCSG ( interned_strings ) . arData + idx		9313	1		+			
ANR	9570	MemberAccess	ZCSG ( interned_strings ) . arData		9313	0					
ANR	9571	CallExpression	ZCSG ( interned_strings )		9313	0					
ANR	9572	Callee	ZCSG		9313	0					
ANR	9573	Identifier	ZCSG		9313	0					
ANR	9574	ArgumentList	interned_strings		9313	1					
ANR	9575	Argument	interned_strings		9313	0					
ANR	9576	Identifier	interned_strings		9313	0					
ANR	9577	Identifier	arData		9313	1					
ANR	9578	Identifier	idx		9313	1					
ANR	9579	ExpressionStatement	p -> key = ( zend_string * ) ZCSG ( interned_strings_top )	363:1:10367:10417	9313	14	True				
ANR	9580	AssignmentExpression	p -> key = ( zend_string * ) ZCSG ( interned_strings_top )		9313	0		=			
ANR	9581	PtrMemberAccess	p -> key		9313	0					
ANR	9582	Identifier	p		9313	0					
ANR	9583	Identifier	key		9313	1					
ANR	9584	CastExpression	( zend_string * ) ZCSG ( interned_strings_top )		9313	1					
ANR	9585	CastTarget	zend_string *		9313	0					
ANR	9586	CallExpression	ZCSG ( interned_strings_top )		9313	1					
ANR	9587	Callee	ZCSG		9313	0					
ANR	9588	Identifier	ZCSG		9313	0					
ANR	9589	ArgumentList	interned_strings_top		9313	1					
ANR	9590	Argument	interned_strings_top		9313	0					
ANR	9591	Identifier	interned_strings_top		9313	0					
ANR	9592	ExpressionStatement	ZCSG ( interned_strings_top ) += ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )	364:1:10420:10504	9313	15	True				
ANR	9593	AssignmentExpression	ZCSG ( interned_strings_top ) += ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )		9313	0		+=			
ANR	9594	CallExpression	ZCSG ( interned_strings_top )		9313	0					
ANR	9595	Callee	ZCSG		9313	0					
ANR	9596	Identifier	ZCSG		9313	0					
ANR	9597	ArgumentList	interned_strings_top		9313	1					
ANR	9598	Argument	interned_strings_top		9313	0					
ANR	9599	Identifier	interned_strings_top		9313	0					
ANR	9600	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )		9313	1					
ANR	9601	Callee	ZEND_MM_ALIGNED_SIZE		9313	0					
ANR	9602	Identifier	ZEND_MM_ALIGNED_SIZE		9313	0					
ANR	9603	ArgumentList	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		9313	1					
ANR	9604	Argument	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		9313	0					
ANR	9605	CallExpression	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		9313	0					
ANR	9606	Callee	_ZSTR_STRUCT_SIZE		9313	0					
ANR	9607	Identifier	_ZSTR_STRUCT_SIZE		9313	0					
ANR	9608	ArgumentList	ZSTR_LEN ( str )		9313	1					
ANR	9609	Argument	ZSTR_LEN ( str )		9313	0					
ANR	9610	CallExpression	ZSTR_LEN ( str )		9313	0					
ANR	9611	Callee	ZSTR_LEN		9313	0					
ANR	9612	Identifier	ZSTR_LEN		9313	0					
ANR	9613	ArgumentList	str		9313	1					
ANR	9614	Argument	str		9313	0					
ANR	9615	Identifier	str		9313	0					
ANR	9616	ExpressionStatement	p -> h = h	365:1:10507:10515	9313	16	True				
ANR	9617	AssignmentExpression	p -> h = h		9313	0		=			
ANR	9618	PtrMemberAccess	p -> h		9313	0					
ANR	9619	Identifier	p		9313	0					
ANR	9620	Identifier	h		9313	1					
ANR	9621	Identifier	h		9313	1					
ANR	9622	ExpressionStatement	GC_REFCOUNT ( p -> key ) = 1	366:1:10518:10541	9313	17	True				
ANR	9623	AssignmentExpression	GC_REFCOUNT ( p -> key ) = 1		9313	0		=			
ANR	9624	CallExpression	GC_REFCOUNT ( p -> key )		9313	0					
ANR	9625	Callee	GC_REFCOUNT		9313	0					
ANR	9626	Identifier	GC_REFCOUNT		9313	0					
ANR	9627	ArgumentList	p -> key		9313	1					
ANR	9628	Argument	p -> key		9313	0					
ANR	9629	PtrMemberAccess	p -> key		9313	0					
ANR	9630	Identifier	p		9313	0					
ANR	9631	Identifier	key		9313	1					
ANR	9632	PrimaryExpression	1		9313	1					
ANR	9633	ExpressionStatement	GC_TYPE_INFO ( p -> key ) = IS_STRING | ( ( IS_STR_INTERNED | IS_STR_PERMANENT ) << 8 )	369:1:10585:10663	9313	18	True				
ANR	9634	AssignmentExpression	GC_TYPE_INFO ( p -> key ) = IS_STRING | ( ( IS_STR_INTERNED | IS_STR_PERMANENT ) << 8 )		9313	0		=			
ANR	9635	CallExpression	GC_TYPE_INFO ( p -> key )		9313	0					
ANR	9636	Callee	GC_TYPE_INFO		9313	0					
ANR	9637	Identifier	GC_TYPE_INFO		9313	0					
ANR	9638	ArgumentList	p -> key		9313	1					
ANR	9639	Argument	p -> key		9313	0					
ANR	9640	PtrMemberAccess	p -> key		9313	0					
ANR	9641	Identifier	p		9313	0					
ANR	9642	Identifier	key		9313	1					
ANR	9643	InclusiveOrExpression	IS_STRING | ( ( IS_STR_INTERNED | IS_STR_PERMANENT ) << 8 )		9313	1		|			
ANR	9644	Identifier	IS_STRING		9313	0					
ANR	9645	ShiftExpression	( IS_STR_INTERNED | IS_STR_PERMANENT ) << 8		9313	1		<<			
ANR	9646	InclusiveOrExpression	IS_STR_INTERNED | IS_STR_PERMANENT		9313	0		|			
ANR	9647	Identifier	IS_STR_INTERNED		9313	0					
ANR	9648	Identifier	IS_STR_PERMANENT		9313	1					
ANR	9649	PrimaryExpression	8		9313	1					
ANR	9650	ExpressionStatement	ZSTR_H ( p -> key ) = ZSTR_H ( str )	374:1:10765:10793	9313	19	True				
ANR	9651	AssignmentExpression	ZSTR_H ( p -> key ) = ZSTR_H ( str )		9313	0		=			
ANR	9652	CallExpression	ZSTR_H ( p -> key )		9313	0					
ANR	9653	Callee	ZSTR_H		9313	0					
ANR	9654	Identifier	ZSTR_H		9313	0					
ANR	9655	ArgumentList	p -> key		9313	1					
ANR	9656	Argument	p -> key		9313	0					
ANR	9657	PtrMemberAccess	p -> key		9313	0					
ANR	9658	Identifier	p		9313	0					
ANR	9659	Identifier	key		9313	1					
ANR	9660	CallExpression	ZSTR_H ( str )		9313	1					
ANR	9661	Callee	ZSTR_H		9313	0					
ANR	9662	Identifier	ZSTR_H		9313	0					
ANR	9663	ArgumentList	str		9313	1					
ANR	9664	Argument	str		9313	0					
ANR	9665	Identifier	str		9313	0					
ANR	9666	ExpressionStatement	ZSTR_LEN ( p -> key ) = ZSTR_LEN ( str )	375:1:10796:10828	9313	20	True				
ANR	9667	AssignmentExpression	ZSTR_LEN ( p -> key ) = ZSTR_LEN ( str )		9313	0		=			
ANR	9668	CallExpression	ZSTR_LEN ( p -> key )		9313	0					
ANR	9669	Callee	ZSTR_LEN		9313	0					
ANR	9670	Identifier	ZSTR_LEN		9313	0					
ANR	9671	ArgumentList	p -> key		9313	1					
ANR	9672	Argument	p -> key		9313	0					
ANR	9673	PtrMemberAccess	p -> key		9313	0					
ANR	9674	Identifier	p		9313	0					
ANR	9675	Identifier	key		9313	1					
ANR	9676	CallExpression	ZSTR_LEN ( str )		9313	1					
ANR	9677	Callee	ZSTR_LEN		9313	0					
ANR	9678	Identifier	ZSTR_LEN		9313	0					
ANR	9679	ArgumentList	str		9313	1					
ANR	9680	Argument	str		9313	0					
ANR	9681	Identifier	str		9313	0					
ANR	9682	ExpressionStatement	"memcpy ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"	376:1:10831:10885	9313	21	True				
ANR	9683	CallExpression	"memcpy ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		9313	0					
ANR	9684	Callee	memcpy		9313	0					
ANR	9685	Identifier	memcpy		9313	0					
ANR	9686	ArgumentList	ZSTR_VAL ( p -> key )		9313	1					
ANR	9687	Argument	ZSTR_VAL ( p -> key )		9313	0					
ANR	9688	CallExpression	ZSTR_VAL ( p -> key )		9313	0					
ANR	9689	Callee	ZSTR_VAL		9313	0					
ANR	9690	Identifier	ZSTR_VAL		9313	0					
ANR	9691	ArgumentList	p -> key		9313	1					
ANR	9692	Argument	p -> key		9313	0					
ANR	9693	PtrMemberAccess	p -> key		9313	0					
ANR	9694	Identifier	p		9313	0					
ANR	9695	Identifier	key		9313	1					
ANR	9696	Argument	ZSTR_VAL ( str )		9313	1					
ANR	9697	CallExpression	ZSTR_VAL ( str )		9313	0					
ANR	9698	Callee	ZSTR_VAL		9313	0					
ANR	9699	Identifier	ZSTR_VAL		9313	0					
ANR	9700	ArgumentList	str		9313	1					
ANR	9701	Argument	str		9313	0					
ANR	9702	Identifier	str		9313	0					
ANR	9703	Argument	ZSTR_LEN ( str )		9313	2					
ANR	9704	CallExpression	ZSTR_LEN ( str )		9313	0					
ANR	9705	Callee	ZSTR_LEN		9313	0					
ANR	9706	Identifier	ZSTR_LEN		9313	0					
ANR	9707	ArgumentList	str		9313	1					
ANR	9708	Argument	str		9313	0					
ANR	9709	Identifier	str		9313	0					
ANR	9710	ExpressionStatement	"ZVAL_INTERNED_STR ( & p -> val , p -> key )"	377:1:10888:10922	9313	22	True				
ANR	9711	CallExpression	"ZVAL_INTERNED_STR ( & p -> val , p -> key )"		9313	0					
ANR	9712	Callee	ZVAL_INTERNED_STR		9313	0					
ANR	9713	Identifier	ZVAL_INTERNED_STR		9313	0					
ANR	9714	ArgumentList	& p -> val		9313	1					
ANR	9715	Argument	& p -> val		9313	0					
ANR	9716	UnaryOperationExpression	& p -> val		9313	0					
ANR	9717	UnaryOperator	&		9313	0					
ANR	9718	PtrMemberAccess	p -> val		9313	1					
ANR	9719	Identifier	p		9313	0					
ANR	9720	Identifier	val		9313	1					
ANR	9721	Argument	p -> key		9313	1					
ANR	9722	PtrMemberAccess	p -> key		9313	0					
ANR	9723	Identifier	p		9313	0					
ANR	9724	Identifier	key		9313	1					
ANR	9725	ExpressionStatement	"Z_NEXT ( p -> val ) = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"	378:1:10925:10982	9313	23	True				
ANR	9726	AssignmentExpression	"Z_NEXT ( p -> val ) = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		9313	0		=			
ANR	9727	CallExpression	Z_NEXT ( p -> val )		9313	0					
ANR	9728	Callee	Z_NEXT		9313	0					
ANR	9729	Identifier	Z_NEXT		9313	0					
ANR	9730	ArgumentList	p -> val		9313	1					
ANR	9731	Argument	p -> val		9313	0					
ANR	9732	PtrMemberAccess	p -> val		9313	0					
ANR	9733	Identifier	p		9313	0					
ANR	9734	Identifier	val		9313	1					
ANR	9735	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		9313	1					
ANR	9736	Callee	HT_HASH		9313	0					
ANR	9737	Identifier	HT_HASH		9313	0					
ANR	9738	ArgumentList	& ZCSG ( interned_strings )		9313	1					
ANR	9739	Argument	& ZCSG ( interned_strings )		9313	0					
ANR	9740	UnaryOperationExpression	& ZCSG ( interned_strings )		9313	0					
ANR	9741	UnaryOperator	&		9313	0					
ANR	9742	CallExpression	ZCSG ( interned_strings )		9313	1					
ANR	9743	Callee	ZCSG		9313	0					
ANR	9744	Identifier	ZCSG		9313	0					
ANR	9745	ArgumentList	interned_strings		9313	1					
ANR	9746	Argument	interned_strings		9313	0					
ANR	9747	Identifier	interned_strings		9313	0					
ANR	9748	Argument	nIndex		9313	1					
ANR	9749	Identifier	nIndex		9313	0					
ANR	9750	ExpressionStatement	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) = HT_IDX_TO_HASH ( idx )"	379:1:10985:11047	9313	24	True				
ANR	9751	AssignmentExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) = HT_IDX_TO_HASH ( idx )"		9313	0		=			
ANR	9752	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		9313	0					
ANR	9753	Callee	HT_HASH		9313	0					
ANR	9754	Identifier	HT_HASH		9313	0					
ANR	9755	ArgumentList	& ZCSG ( interned_strings )		9313	1					
ANR	9756	Argument	& ZCSG ( interned_strings )		9313	0					
ANR	9757	UnaryOperationExpression	& ZCSG ( interned_strings )		9313	0					
ANR	9758	UnaryOperator	&		9313	0					
ANR	9759	CallExpression	ZCSG ( interned_strings )		9313	1					
ANR	9760	Callee	ZCSG		9313	0					
ANR	9761	Identifier	ZCSG		9313	0					
ANR	9762	ArgumentList	interned_strings		9313	1					
ANR	9763	Argument	interned_strings		9313	0					
ANR	9764	Identifier	interned_strings		9313	0					
ANR	9765	Argument	nIndex		9313	1					
ANR	9766	Identifier	nIndex		9313	0					
ANR	9767	CallExpression	HT_IDX_TO_HASH ( idx )		9313	1					
ANR	9768	Callee	HT_IDX_TO_HASH		9313	0					
ANR	9769	Identifier	HT_IDX_TO_HASH		9313	0					
ANR	9770	ArgumentList	idx		9313	1					
ANR	9771	Argument	idx		9313	0					
ANR	9772	Identifier	idx		9313	0					
ANR	9773	ExpressionStatement	zend_string_release ( str )	380:1:11050:11074	9313	25	True				
ANR	9774	CallExpression	zend_string_release ( str )		9313	0					
ANR	9775	Callee	zend_string_release		9313	0					
ANR	9776	Identifier	zend_string_release		9313	0					
ANR	9777	ArgumentList	str		9313	1					
ANR	9778	Argument	str		9313	0					
ANR	9779	Identifier	str		9313	0					
ANR	9780	ReturnStatement	return p -> key ;	381:1:11077:11090	9313	26	True				
ANR	9781	PtrMemberAccess	p -> key		9313	0					
ANR	9782	Identifier	p		9313	0					
ANR	9783	Identifier	key		9313	1					
ANR	9784	ReturnType	zend_string *		9313	1					
ANR	9785	Identifier	accel_new_interned_string		9313	2					
ANR	9786	ParameterList	zend_string * str		9313	3					
ANR	9787	Parameter	zend_string * str	315:39:9073:9088	9313	0	True				
ANR	9788	ParameterType	zend_string *		9313	0					
ANR	9789	Identifier	str		9313	1					
ANR	9790	CFGEntryNode	ENTRY		9313		True				
ANR	9791	CFGExitNode	EXIT		9313		True				
ANR	9792	Symbol	IS_ACCEL_INTERNED		9313						
ANR	9793	Symbol	interned_strings_end		9313						
ANR	9794	Symbol	_ZSTR_STRUCT_SIZE		9313						
ANR	9795	Symbol	IS_STR_PERMANENT		9313						
ANR	9796	Symbol	Z_NEXT		9313						
ANR	9797	Symbol	ZCSG ( interned_strings ) . nNumUsed		9313						
ANR	9798	Symbol	ZCSG ( interned_strings ) . arData		9313						
ANR	9799	Symbol	ZSTR_H		9313						
ANR	9800	Symbol	interned_strings_top		9313						
ANR	9801	Symbol	memcmp		9313						
ANR	9802	Symbol	ZCSG		9313						
ANR	9803	Symbol	HT_HASH		9313						
ANR	9804	Symbol	ACCEL_LOG_WARNING		9313						
ANR	9805	Symbol	IS_STR_INTERNED		9313						
ANR	9806	Symbol	zend_string_hash_val		9313						
ANR	9807	Symbol	IS_STRING		9313						
ANR	9808	Symbol	GC_TYPE_INFO		9313						
ANR	9809	Symbol	ZCSG ( interned_strings ) . nNumOfElements		9313						
ANR	9810	Symbol	GC_REFCOUNT		9313						
ANR	9811	Symbol	p -> h		9313						
ANR	9812	Symbol	& p -> val		9313						
ANR	9813	Symbol	HT_INVALID_IDX		9313						
ANR	9814	Symbol	ZEND_MM_ALIGNED_SIZE		9313						
ANR	9815	Symbol	h		9313						
ANR	9816	Symbol	nIndex		9313						
ANR	9817	Symbol	p -> val		9313						
ANR	9818	Symbol	HT_IDX_TO_HASH		9313						
ANR	9819	Symbol	p -> key		9313						
ANR	9820	Symbol	ZSTR_VAL		9313						
ANR	9821	Symbol	str		9313						
ANR	9822	Symbol	p		9313						
ANR	9823	Symbol	& ZCSG		9313						
ANR	9824	Symbol	ZCSG ( interned_strings ) . nTableMask		9313						
ANR	9825	Symbol	ZSTR_LEN		9313						
ANR	9826	Symbol	* p		9313						
ANR	9827	Symbol	idx		9313						
ANR	9828	Symbol	ZCG ( accel_directives ) . file_cache_only		9313						
ANR	9829	Symbol	interned_strings		9313						
ANR	9830	Symbol	accel_directives		9313						
ANR	9831	Symbol	ZCG		9313						
ANR	9832	Symbol	HT_HASH_TO_BUCKET		9313						
ANR	9833	Function	accel_use_shm_interned_strings	389:0:11212:14013							
ANR	9834	FunctionDef	accel_use_shm_interned_strings ()		9833	0					
ANR	9835	CompoundStatement		390:0:11261:14013	9833	0					
ANR	9836	IdentifierDeclStatement	"uint idx , j ;"	391:1:11264:11275	9833	0	True				
ANR	9837	IdentifierDecl	idx		9833	0					
ANR	9838	IdentifierDeclType	uint		9833	0					
ANR	9839	Identifier	idx		9833	1					
ANR	9840	IdentifierDecl	j		9833	1					
ANR	9841	IdentifierDeclType	uint		9833	0					
ANR	9842	Identifier	j		9833	1					
ANR	9843	IdentifierDeclStatement	"Bucket * p , * q ;"	392:1:11278:11291	9833	1	True				
ANR	9844	IdentifierDecl	* p		9833	0					
ANR	9845	IdentifierDeclType	Bucket *		9833	0					
ANR	9846	Identifier	p		9833	1					
ANR	9847	IdentifierDecl	* q		9833	1					
ANR	9848	IdentifierDeclType	Bucket *		9833	0					
ANR	9849	Identifier	q		9833	1					
ANR	9850	ExpressionStatement	CG ( empty_string ) = accel_new_interned_string ( CG ( empty_string ) )	395:1:11315:11377	9833	2	True				
ANR	9851	AssignmentExpression	CG ( empty_string ) = accel_new_interned_string ( CG ( empty_string ) )		9833	0		=			
ANR	9852	CallExpression	CG ( empty_string )		9833	0					
ANR	9853	Callee	CG		9833	0					
ANR	9854	Identifier	CG		9833	0					
ANR	9855	ArgumentList	empty_string		9833	1					
ANR	9856	Argument	empty_string		9833	0					
ANR	9857	Identifier	empty_string		9833	0					
ANR	9858	CallExpression	accel_new_interned_string ( CG ( empty_string ) )		9833	1					
ANR	9859	Callee	accel_new_interned_string		9833	0					
ANR	9860	Identifier	accel_new_interned_string		9833	0					
ANR	9861	ArgumentList	CG ( empty_string )		9833	1					
ANR	9862	Argument	CG ( empty_string )		9833	0					
ANR	9863	CallExpression	CG ( empty_string )		9833	0					
ANR	9864	Callee	CG		9833	0					
ANR	9865	Identifier	CG		9833	0					
ANR	9866	ArgumentList	empty_string		9833	1					
ANR	9867	Argument	empty_string		9833	0					
ANR	9868	Identifier	empty_string		9833	0					
ANR	9869	ForStatement	for ( j = 0 ; j < 256 ; j ++ )		9833	3					
ANR	9870	ForInit	j = 0 ;	396:6:11385:11390	9833	0	True				
ANR	9871	AssignmentExpression	j = 0		9833	0		=			
ANR	9872	Identifier	j		9833	0					
ANR	9873	PrimaryExpression	0		9833	1					
ANR	9874	Condition	j < 256	396:13:11392:11398	9833	1	True				
ANR	9875	RelationalExpression	j < 256		9833	0		<			
ANR	9876	Identifier	j		9833	0					
ANR	9877	PrimaryExpression	256		9833	1					
ANR	9878	PostIncDecOperationExpression	j ++	396:22:11401:11403	9833	2	True				
ANR	9879	Identifier	j		9833	0					
ANR	9880	IncDec	++		9833	1					
ANR	9881	CompoundStatement		8:2:148:157	9833	3					
ANR	9882	IdentifierDeclStatement	char s [ 2 ] ;	397:2:11410:11419	9833	0	True				
ANR	9883	IdentifierDecl	s [ 2 ]		9833	0					
ANR	9884	IdentifierDeclType	char [ 2 ]		9833	0					
ANR	9885	Identifier	s		9833	1					
ANR	9886	PrimaryExpression	2		9833	2					
ANR	9887	ExpressionStatement	s [ 0 ] = j	398:2:11423:11431	9833	1	True				
ANR	9888	AssignmentExpression	s [ 0 ] = j		9833	0		=			
ANR	9889	ArrayIndexing	s [ 0 ]		9833	0					
ANR	9890	Identifier	s		9833	0					
ANR	9891	PrimaryExpression	0		9833	1					
ANR	9892	Identifier	j		9833	1					
ANR	9893	ExpressionStatement	s [ 1 ] = 0	399:2:11435:11443	9833	2	True				
ANR	9894	AssignmentExpression	s [ 1 ] = 0		9833	0		=			
ANR	9895	ArrayIndexing	s [ 1 ]		9833	0					
ANR	9896	Identifier	s		9833	0					
ANR	9897	PrimaryExpression	1		9833	1					
ANR	9898	PrimaryExpression	0		9833	1					
ANR	9899	ExpressionStatement	"CG ( one_char_string ) [ j ] = accel_new_interned_string ( zend_string_init ( s , 1 , 0 ) )"	400:2:11447:11524	9833	3	True				
ANR	9900	AssignmentExpression	"CG ( one_char_string ) [ j ] = accel_new_interned_string ( zend_string_init ( s , 1 , 0 ) )"		9833	0		=			
ANR	9901	ArrayIndexing	CG ( one_char_string ) [ j ]		9833	0					
ANR	9902	CallExpression	CG ( one_char_string )		9833	0					
ANR	9903	Callee	CG		9833	0					
ANR	9904	Identifier	CG		9833	0					
ANR	9905	ArgumentList	one_char_string		9833	1					
ANR	9906	Argument	one_char_string		9833	0					
ANR	9907	Identifier	one_char_string		9833	0					
ANR	9908	Identifier	j		9833	1					
ANR	9909	CallExpression	"accel_new_interned_string ( zend_string_init ( s , 1 , 0 ) )"		9833	1					
ANR	9910	Callee	accel_new_interned_string		9833	0					
ANR	9911	Identifier	accel_new_interned_string		9833	0					
ANR	9912	ArgumentList	"zend_string_init ( s , 1 , 0 )"		9833	1					
ANR	9913	Argument	"zend_string_init ( s , 1 , 0 )"		9833	0					
ANR	9914	CallExpression	"zend_string_init ( s , 1 , 0 )"		9833	0					
ANR	9915	Callee	zend_string_init		9833	0					
ANR	9916	Identifier	zend_string_init		9833	0					
ANR	9917	ArgumentList	s		9833	1					
ANR	9918	Argument	s		9833	0					
ANR	9919	Identifier	s		9833	0					
ANR	9920	Argument	1		9833	1					
ANR	9921	PrimaryExpression	1		9833	0					
ANR	9922	Argument	0		9833	2					
ANR	9923	PrimaryExpression	0		9833	0					
ANR	9924	ForStatement	for ( idx = 0 ; idx < CG ( function_table ) -> nNumUsed ; idx ++ )		9833	4					
ANR	9925	ForInit	idx = 0 ;	404:6:11568:11575	9833	0	True				
ANR	9926	AssignmentExpression	idx = 0		9833	0		=			
ANR	9927	Identifier	idx		9833	0					
ANR	9928	PrimaryExpression	0		9833	1					
ANR	9929	Condition	idx < CG ( function_table ) -> nNumUsed	404:15:11577:11610	9833	1	True				
ANR	9930	RelationalExpression	idx < CG ( function_table ) -> nNumUsed		9833	0		<			
ANR	9931	Identifier	idx		9833	0					
ANR	9932	PtrMemberAccess	CG ( function_table ) -> nNumUsed		9833	1					
ANR	9933	CallExpression	CG ( function_table )		9833	0					
ANR	9934	Callee	CG		9833	0					
ANR	9935	Identifier	CG		9833	0					
ANR	9936	ArgumentList	function_table		9833	1					
ANR	9937	Argument	function_table		9833	0					
ANR	9938	Identifier	function_table		9833	0					
ANR	9939	Identifier	nNumUsed		9833	1					
ANR	9940	PostIncDecOperationExpression	idx ++	404:51:11613:11617	9833	2	True				
ANR	9941	Identifier	idx		9833	0					
ANR	9942	IncDec	++		9833	1					
ANR	9943	CompoundStatement		15:58:358:358	9833	3					
ANR	9944	ExpressionStatement	p = CG ( function_table ) -> arData + idx	405:2:11624:11660	9833	0	True				
ANR	9945	AssignmentExpression	p = CG ( function_table ) -> arData + idx		9833	0		=			
ANR	9946	Identifier	p		9833	0					
ANR	9947	AdditiveExpression	CG ( function_table ) -> arData + idx		9833	1		+			
ANR	9948	PtrMemberAccess	CG ( function_table ) -> arData		9833	0					
ANR	9949	CallExpression	CG ( function_table )		9833	0					
ANR	9950	Callee	CG		9833	0					
ANR	9951	Identifier	CG		9833	0					
ANR	9952	ArgumentList	function_table		9833	1					
ANR	9953	Argument	function_table		9833	0					
ANR	9954	Identifier	function_table		9833	0					
ANR	9955	Identifier	arData		9833	1					
ANR	9956	Identifier	idx		9833	1					
ANR	9957	IfStatement	if ( Z_TYPE ( p -> val ) == IS_UNDEF )		9833	1					
ANR	9958	Condition	Z_TYPE ( p -> val ) == IS_UNDEF	406:6:11668:11693	9833	0	True				
ANR	9959	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		9833	0		==			
ANR	9960	CallExpression	Z_TYPE ( p -> val )		9833	0					
ANR	9961	Callee	Z_TYPE		9833	0					
ANR	9962	Identifier	Z_TYPE		9833	0					
ANR	9963	ArgumentList	p -> val		9833	1					
ANR	9964	Argument	p -> val		9833	0					
ANR	9965	PtrMemberAccess	p -> val		9833	0					
ANR	9966	Identifier	p		9833	0					
ANR	9967	Identifier	val		9833	1					
ANR	9968	Identifier	IS_UNDEF		9833	1					
ANR	9969	ContinueStatement	continue ;	406:34:11696:11704	9833	1	True				
ANR	9970	IfStatement	if ( p -> key )		9833	2					
ANR	9971	Condition	p -> key	407:6:11712:11717	9833	0	True				
ANR	9972	PtrMemberAccess	p -> key		9833	0					
ANR	9973	Identifier	p		9833	0					
ANR	9974	Identifier	key		9833	1					
ANR	9975	CompoundStatement		18:14:458:458	9833	1					
ANR	9976	ExpressionStatement	p -> key = accel_new_interned_string ( p -> key )	408:3:11725:11767	9833	0	True				
ANR	9977	AssignmentExpression	p -> key = accel_new_interned_string ( p -> key )		9833	0		=			
ANR	9978	PtrMemberAccess	p -> key		9833	0					
ANR	9979	Identifier	p		9833	0					
ANR	9980	Identifier	key		9833	1					
ANR	9981	CallExpression	accel_new_interned_string ( p -> key )		9833	1					
ANR	9982	Callee	accel_new_interned_string		9833	0					
ANR	9983	Identifier	accel_new_interned_string		9833	0					
ANR	9984	ArgumentList	p -> key		9833	1					
ANR	9985	Argument	p -> key		9833	0					
ANR	9986	PtrMemberAccess	p -> key		9833	0					
ANR	9987	Identifier	p		9833	0					
ANR	9988	Identifier	key		9833	1					
ANR	9989	IfStatement	if ( Z_FUNC ( p -> val ) -> common . function_name )		9833	3					
ANR	9990	Condition	Z_FUNC ( p -> val ) -> common . function_name	410:6:11779:11814	9833	0	True				
ANR	9991	MemberAccess	Z_FUNC ( p -> val ) -> common . function_name		9833	0					
ANR	9992	PtrMemberAccess	Z_FUNC ( p -> val ) -> common		9833	0					
ANR	9993	CallExpression	Z_FUNC ( p -> val )		9833	0					
ANR	9994	Callee	Z_FUNC		9833	0					
ANR	9995	Identifier	Z_FUNC		9833	0					
ANR	9996	ArgumentList	p -> val		9833	1					
ANR	9997	Argument	p -> val		9833	0					
ANR	9998	PtrMemberAccess	p -> val		9833	0					
ANR	9999	Identifier	p		9833	0					
ANR	10000	Identifier	val		9833	1					
ANR	10001	Identifier	common		9833	1					
ANR	10002	Identifier	function_name		9833	1					
ANR	10003	CompoundStatement		21:44:555:555	9833	1					
ANR	10004	ExpressionStatement	Z_FUNC ( p -> val ) -> common . function_name = accel_new_interned_string ( Z_FUNC ( p -> val ) -> common . function_name )	411:3:11822:11924	9833	0	True				
ANR	10005	AssignmentExpression	Z_FUNC ( p -> val ) -> common . function_name = accel_new_interned_string ( Z_FUNC ( p -> val ) -> common . function_name )		9833	0		=			
ANR	10006	MemberAccess	Z_FUNC ( p -> val ) -> common . function_name		9833	0					
ANR	10007	PtrMemberAccess	Z_FUNC ( p -> val ) -> common		9833	0					
ANR	10008	CallExpression	Z_FUNC ( p -> val )		9833	0					
ANR	10009	Callee	Z_FUNC		9833	0					
ANR	10010	Identifier	Z_FUNC		9833	0					
ANR	10011	ArgumentList	p -> val		9833	1					
ANR	10012	Argument	p -> val		9833	0					
ANR	10013	PtrMemberAccess	p -> val		9833	0					
ANR	10014	Identifier	p		9833	0					
ANR	10015	Identifier	val		9833	1					
ANR	10016	Identifier	common		9833	1					
ANR	10017	Identifier	function_name		9833	1					
ANR	10018	CallExpression	accel_new_interned_string ( Z_FUNC ( p -> val ) -> common . function_name )		9833	1					
ANR	10019	Callee	accel_new_interned_string		9833	0					
ANR	10020	Identifier	accel_new_interned_string		9833	0					
ANR	10021	ArgumentList	Z_FUNC ( p -> val ) -> common . function_name		9833	1					
ANR	10022	Argument	Z_FUNC ( p -> val ) -> common . function_name		9833	0					
ANR	10023	MemberAccess	Z_FUNC ( p -> val ) -> common . function_name		9833	0					
ANR	10024	PtrMemberAccess	Z_FUNC ( p -> val ) -> common		9833	0					
ANR	10025	CallExpression	Z_FUNC ( p -> val )		9833	0					
ANR	10026	Callee	Z_FUNC		9833	0					
ANR	10027	Identifier	Z_FUNC		9833	0					
ANR	10028	ArgumentList	p -> val		9833	1					
ANR	10029	Argument	p -> val		9833	0					
ANR	10030	PtrMemberAccess	p -> val		9833	0					
ANR	10031	Identifier	p		9833	0					
ANR	10032	Identifier	val		9833	1					
ANR	10033	Identifier	common		9833	1					
ANR	10034	Identifier	function_name		9833	1					
ANR	10035	ForStatement	for ( idx = 0 ; idx < CG ( class_table ) -> nNumUsed ; idx ++ )		9833	5					
ANR	10036	ForInit	idx = 0 ;	416:6:12019:12026	9833	0	True				
ANR	10037	AssignmentExpression	idx = 0		9833	0		=			
ANR	10038	Identifier	idx		9833	0					
ANR	10039	PrimaryExpression	0		9833	1					
ANR	10040	Condition	idx < CG ( class_table ) -> nNumUsed	416:15:12028:12058	9833	1	True				
ANR	10041	RelationalExpression	idx < CG ( class_table ) -> nNumUsed		9833	0		<			
ANR	10042	Identifier	idx		9833	0					
ANR	10043	PtrMemberAccess	CG ( class_table ) -> nNumUsed		9833	1					
ANR	10044	CallExpression	CG ( class_table )		9833	0					
ANR	10045	Callee	CG		9833	0					
ANR	10046	Identifier	CG		9833	0					
ANR	10047	ArgumentList	class_table		9833	1					
ANR	10048	Argument	class_table		9833	0					
ANR	10049	Identifier	class_table		9833	0					
ANR	10050	Identifier	nNumUsed		9833	1					
ANR	10051	PostIncDecOperationExpression	idx ++	416:48:12061:12065	9833	2	True				
ANR	10052	Identifier	idx		9833	0					
ANR	10053	IncDec	++		9833	1					
ANR	10054	CompoundStatement		28:2:810:830	9833	3					
ANR	10055	IdentifierDeclStatement	zend_class_entry * ce ;	417:2:12072:12092	9833	0	True				
ANR	10056	IdentifierDecl	* ce		9833	0					
ANR	10057	IdentifierDeclType	zend_class_entry *		9833	0					
ANR	10058	Identifier	ce		9833	1					
ANR	10059	ExpressionStatement	p = CG ( class_table ) -> arData + idx	419:2:12097:12130	9833	1	True				
ANR	10060	AssignmentExpression	p = CG ( class_table ) -> arData + idx		9833	0		=			
ANR	10061	Identifier	p		9833	0					
ANR	10062	AdditiveExpression	CG ( class_table ) -> arData + idx		9833	1		+			
ANR	10063	PtrMemberAccess	CG ( class_table ) -> arData		9833	0					
ANR	10064	CallExpression	CG ( class_table )		9833	0					
ANR	10065	Callee	CG		9833	0					
ANR	10066	Identifier	CG		9833	0					
ANR	10067	ArgumentList	class_table		9833	1					
ANR	10068	Argument	class_table		9833	0					
ANR	10069	Identifier	class_table		9833	0					
ANR	10070	Identifier	arData		9833	1					
ANR	10071	Identifier	idx		9833	1					
ANR	10072	IfStatement	if ( Z_TYPE ( p -> val ) == IS_UNDEF )		9833	2					
ANR	10073	Condition	Z_TYPE ( p -> val ) == IS_UNDEF	420:6:12138:12163	9833	0	True				
ANR	10074	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		9833	0		==			
ANR	10075	CallExpression	Z_TYPE ( p -> val )		9833	0					
ANR	10076	Callee	Z_TYPE		9833	0					
ANR	10077	Identifier	Z_TYPE		9833	0					
ANR	10078	ArgumentList	p -> val		9833	1					
ANR	10079	Argument	p -> val		9833	0					
ANR	10080	PtrMemberAccess	p -> val		9833	0					
ANR	10081	Identifier	p		9833	0					
ANR	10082	Identifier	val		9833	1					
ANR	10083	Identifier	IS_UNDEF		9833	1					
ANR	10084	ContinueStatement	continue ;	420:34:12166:12174	9833	1	True				
ANR	10085	ExpressionStatement	ce = ( zend_class_entry * ) Z_PTR ( p -> val )	421:2:12178:12215	9833	3	True				
ANR	10086	AssignmentExpression	ce = ( zend_class_entry * ) Z_PTR ( p -> val )		9833	0		=			
ANR	10087	Identifier	ce		9833	0					
ANR	10088	CastExpression	( zend_class_entry * ) Z_PTR ( p -> val )		9833	1					
ANR	10089	CastTarget	zend_class_entry *		9833	0					
ANR	10090	CallExpression	Z_PTR ( p -> val )		9833	1					
ANR	10091	Callee	Z_PTR		9833	0					
ANR	10092	Identifier	Z_PTR		9833	0					
ANR	10093	ArgumentList	p -> val		9833	1					
ANR	10094	Argument	p -> val		9833	0					
ANR	10095	PtrMemberAccess	p -> val		9833	0					
ANR	10096	Identifier	p		9833	0					
ANR	10097	Identifier	val		9833	1					
ANR	10098	IfStatement	if ( p -> key )		9833	4					
ANR	10099	Condition	p -> key	423:6:12224:12229	9833	0	True				
ANR	10100	PtrMemberAccess	p -> key		9833	0					
ANR	10101	Identifier	p		9833	0					
ANR	10102	Identifier	key		9833	1					
ANR	10103	CompoundStatement		34:14:970:970	9833	1					
ANR	10104	ExpressionStatement	p -> key = accel_new_interned_string ( p -> key )	424:3:12237:12279	9833	0	True				
ANR	10105	AssignmentExpression	p -> key = accel_new_interned_string ( p -> key )		9833	0		=			
ANR	10106	PtrMemberAccess	p -> key		9833	0					
ANR	10107	Identifier	p		9833	0					
ANR	10108	Identifier	key		9833	1					
ANR	10109	CallExpression	accel_new_interned_string ( p -> key )		9833	1					
ANR	10110	Callee	accel_new_interned_string		9833	0					
ANR	10111	Identifier	accel_new_interned_string		9833	0					
ANR	10112	ArgumentList	p -> key		9833	1					
ANR	10113	Argument	p -> key		9833	0					
ANR	10114	PtrMemberAccess	p -> key		9833	0					
ANR	10115	Identifier	p		9833	0					
ANR	10116	Identifier	key		9833	1					
ANR	10117	IfStatement	if ( ce -> name )		9833	5					
ANR	10118	Condition	ce -> name	427:6:12292:12299	9833	0	True				
ANR	10119	PtrMemberAccess	ce -> name		9833	0					
ANR	10120	Identifier	ce		9833	0					
ANR	10121	Identifier	name		9833	1					
ANR	10122	CompoundStatement		38:16:1040:1040	9833	1					
ANR	10123	ExpressionStatement	ce -> name = accel_new_interned_string ( ce -> name )	428:3:12307:12353	9833	0	True				
ANR	10124	AssignmentExpression	ce -> name = accel_new_interned_string ( ce -> name )		9833	0		=			
ANR	10125	PtrMemberAccess	ce -> name		9833	0					
ANR	10126	Identifier	ce		9833	0					
ANR	10127	Identifier	name		9833	1					
ANR	10128	CallExpression	accel_new_interned_string ( ce -> name )		9833	1					
ANR	10129	Callee	accel_new_interned_string		9833	0					
ANR	10130	Identifier	accel_new_interned_string		9833	0					
ANR	10131	ArgumentList	ce -> name		9833	1					
ANR	10132	Argument	ce -> name		9833	0					
ANR	10133	PtrMemberAccess	ce -> name		9833	0					
ANR	10134	Identifier	ce		9833	0					
ANR	10135	Identifier	name		9833	1					
ANR	10136	ForStatement	for ( j = 0 ; j < ce -> properties_info . nNumUsed ; j ++ )		9833	6					
ANR	10137	ForInit	j = 0 ;	431:7:12367:12372	9833	0	True				
ANR	10138	AssignmentExpression	j = 0		9833	0		=			
ANR	10139	Identifier	j		9833	0					
ANR	10140	PrimaryExpression	0		9833	1					
ANR	10141	Condition	j < ce -> properties_info . nNumUsed	431:14:12374:12405	9833	1	True				
ANR	10142	RelationalExpression	j < ce -> properties_info . nNumUsed		9833	0		<			
ANR	10143	Identifier	j		9833	0					
ANR	10144	MemberAccess	ce -> properties_info . nNumUsed		9833	1					
ANR	10145	PtrMemberAccess	ce -> properties_info		9833	0					
ANR	10146	Identifier	ce		9833	0					
ANR	10147	Identifier	properties_info		9833	1					
ANR	10148	Identifier	nNumUsed		9833	1					
ANR	10149	PostIncDecOperationExpression	j ++	431:48:12408:12410	9833	2	True				
ANR	10150	Identifier	j		9833	0					
ANR	10151	IncDec	++		9833	1					
ANR	10152	CompoundStatement		43:3:1156:1180	9833	3					
ANR	10153	IdentifierDeclStatement	zend_property_info * info ;	432:3:12418:12442	9833	0	True				
ANR	10154	IdentifierDecl	* info		9833	0					
ANR	10155	IdentifierDeclType	zend_property_info *		9833	0					
ANR	10156	Identifier	info		9833	1					
ANR	10157	ExpressionStatement	q = ce -> properties_info . arData + j	434:3:12448:12482	9833	1	True				
ANR	10158	AssignmentExpression	q = ce -> properties_info . arData + j		9833	0		=			
ANR	10159	Identifier	q		9833	0					
ANR	10160	AdditiveExpression	ce -> properties_info . arData + j		9833	1		+			
ANR	10161	MemberAccess	ce -> properties_info . arData		9833	0					
ANR	10162	PtrMemberAccess	ce -> properties_info		9833	0					
ANR	10163	Identifier	ce		9833	0					
ANR	10164	Identifier	properties_info		9833	1					
ANR	10165	Identifier	arData		9833	1					
ANR	10166	Identifier	j		9833	1					
ANR	10167	IfStatement	if ( Z_TYPE ( q -> val ) == IS_UNDEF )		9833	2					
ANR	10168	Condition	Z_TYPE ( q -> val ) == IS_UNDEF	435:7:12491:12516	9833	0	True				
ANR	10169	EqualityExpression	Z_TYPE ( q -> val ) == IS_UNDEF		9833	0		==			
ANR	10170	CallExpression	Z_TYPE ( q -> val )		9833	0					
ANR	10171	Callee	Z_TYPE		9833	0					
ANR	10172	Identifier	Z_TYPE		9833	0					
ANR	10173	ArgumentList	q -> val		9833	1					
ANR	10174	Argument	q -> val		9833	0					
ANR	10175	PtrMemberAccess	q -> val		9833	0					
ANR	10176	Identifier	q		9833	0					
ANR	10177	Identifier	val		9833	1					
ANR	10178	Identifier	IS_UNDEF		9833	1					
ANR	10179	ContinueStatement	continue ;	435:35:12519:12527	9833	1	True				
ANR	10180	ExpressionStatement	info = ( zend_property_info * ) Z_PTR ( q -> val )	437:3:12533:12574	9833	3	True				
ANR	10181	AssignmentExpression	info = ( zend_property_info * ) Z_PTR ( q -> val )		9833	0		=			
ANR	10182	Identifier	info		9833	0					
ANR	10183	CastExpression	( zend_property_info * ) Z_PTR ( q -> val )		9833	1					
ANR	10184	CastTarget	zend_property_info *		9833	0					
ANR	10185	CallExpression	Z_PTR ( q -> val )		9833	1					
ANR	10186	Callee	Z_PTR		9833	0					
ANR	10187	Identifier	Z_PTR		9833	0					
ANR	10188	ArgumentList	q -> val		9833	1					
ANR	10189	Argument	q -> val		9833	0					
ANR	10190	PtrMemberAccess	q -> val		9833	0					
ANR	10191	Identifier	q		9833	0					
ANR	10192	Identifier	val		9833	1					
ANR	10193	IfStatement	if ( q -> key )		9833	4					
ANR	10194	Condition	q -> key	439:7:12584:12589	9833	0	True				
ANR	10195	PtrMemberAccess	q -> key		9833	0					
ANR	10196	Identifier	q		9833	0					
ANR	10197	Identifier	key		9833	1					
ANR	10198	CompoundStatement		50:15:1330:1330	9833	1					
ANR	10199	ExpressionStatement	q -> key = accel_new_interned_string ( q -> key )	440:4:12598:12640	9833	0	True				
ANR	10200	AssignmentExpression	q -> key = accel_new_interned_string ( q -> key )		9833	0		=			
ANR	10201	PtrMemberAccess	q -> key		9833	0					
ANR	10202	Identifier	q		9833	0					
ANR	10203	Identifier	key		9833	1					
ANR	10204	CallExpression	accel_new_interned_string ( q -> key )		9833	1					
ANR	10205	Callee	accel_new_interned_string		9833	0					
ANR	10206	Identifier	accel_new_interned_string		9833	0					
ANR	10207	ArgumentList	q -> key		9833	1					
ANR	10208	Argument	q -> key		9833	0					
ANR	10209	PtrMemberAccess	q -> key		9833	0					
ANR	10210	Identifier	q		9833	0					
ANR	10211	Identifier	key		9833	1					
ANR	10212	IfStatement	if ( info -> name )		9833	5					
ANR	10213	Condition	info -> name	443:7:12655:12664	9833	0	True				
ANR	10214	PtrMemberAccess	info -> name		9833	0					
ANR	10215	Identifier	info		9833	0					
ANR	10216	Identifier	name		9833	1					
ANR	10217	CompoundStatement		54:19:1405:1405	9833	1					
ANR	10218	ExpressionStatement	info -> name = accel_new_interned_string ( info -> name )	444:4:12673:12723	9833	0	True				
ANR	10219	AssignmentExpression	info -> name = accel_new_interned_string ( info -> name )		9833	0		=			
ANR	10220	PtrMemberAccess	info -> name		9833	0					
ANR	10221	Identifier	info		9833	0					
ANR	10222	Identifier	name		9833	1					
ANR	10223	CallExpression	accel_new_interned_string ( info -> name )		9833	1					
ANR	10224	Callee	accel_new_interned_string		9833	0					
ANR	10225	Identifier	accel_new_interned_string		9833	0					
ANR	10226	ArgumentList	info -> name		9833	1					
ANR	10227	Argument	info -> name		9833	0					
ANR	10228	PtrMemberAccess	info -> name		9833	0					
ANR	10229	Identifier	info		9833	0					
ANR	10230	Identifier	name		9833	1					
ANR	10231	ForStatement	for ( j = 0 ; j < ce -> function_table . nNumUsed ; j ++ )		9833	7					
ANR	10232	ForInit	j = 0 ;	448:7:12742:12747	9833	0	True				
ANR	10233	AssignmentExpression	j = 0		9833	0		=			
ANR	10234	Identifier	j		9833	0					
ANR	10235	PrimaryExpression	0		9833	1					
ANR	10236	Condition	j < ce -> function_table . nNumUsed	448:14:12749:12779	9833	1	True				
ANR	10237	RelationalExpression	j < ce -> function_table . nNumUsed		9833	0		<			
ANR	10238	Identifier	j		9833	0					
ANR	10239	MemberAccess	ce -> function_table . nNumUsed		9833	1					
ANR	10240	PtrMemberAccess	ce -> function_table		9833	0					
ANR	10241	Identifier	ce		9833	0					
ANR	10242	Identifier	function_table		9833	1					
ANR	10243	Identifier	nNumUsed		9833	1					
ANR	10244	PostIncDecOperationExpression	j ++	448:47:12782:12784	9833	2	True				
ANR	10245	Identifier	j		9833	0					
ANR	10246	IncDec	++		9833	1					
ANR	10247	CompoundStatement		59:52:1525:1525	9833	3					
ANR	10248	ExpressionStatement	q = ce -> function_table . arData + j	449:3:12792:12825	9833	0	True				
ANR	10249	AssignmentExpression	q = ce -> function_table . arData + j		9833	0		=			
ANR	10250	Identifier	q		9833	0					
ANR	10251	AdditiveExpression	ce -> function_table . arData + j		9833	1		+			
ANR	10252	MemberAccess	ce -> function_table . arData		9833	0					
ANR	10253	PtrMemberAccess	ce -> function_table		9833	0					
ANR	10254	Identifier	ce		9833	0					
ANR	10255	Identifier	function_table		9833	1					
ANR	10256	Identifier	arData		9833	1					
ANR	10257	Identifier	j		9833	1					
ANR	10258	IfStatement	if ( Z_TYPE ( q -> val ) == IS_UNDEF )		9833	1					
ANR	10259	Condition	Z_TYPE ( q -> val ) == IS_UNDEF	450:7:12834:12859	9833	0	True				
ANR	10260	EqualityExpression	Z_TYPE ( q -> val ) == IS_UNDEF		9833	0		==			
ANR	10261	CallExpression	Z_TYPE ( q -> val )		9833	0					
ANR	10262	Callee	Z_TYPE		9833	0					
ANR	10263	Identifier	Z_TYPE		9833	0					
ANR	10264	ArgumentList	q -> val		9833	1					
ANR	10265	Argument	q -> val		9833	0					
ANR	10266	PtrMemberAccess	q -> val		9833	0					
ANR	10267	Identifier	q		9833	0					
ANR	10268	Identifier	val		9833	1					
ANR	10269	Identifier	IS_UNDEF		9833	1					
ANR	10270	ContinueStatement	continue ;	450:35:12862:12870	9833	1	True				
ANR	10271	IfStatement	if ( q -> key )		9833	2					
ANR	10272	Condition	q -> key	451:7:12879:12884	9833	0	True				
ANR	10273	PtrMemberAccess	q -> key		9833	0					
ANR	10274	Identifier	q		9833	0					
ANR	10275	Identifier	key		9833	1					
ANR	10276	CompoundStatement		62:15:1625:1625	9833	1					
ANR	10277	ExpressionStatement	q -> key = accel_new_interned_string ( q -> key )	452:4:12893:12935	9833	0	True				
ANR	10278	AssignmentExpression	q -> key = accel_new_interned_string ( q -> key )		9833	0		=			
ANR	10279	PtrMemberAccess	q -> key		9833	0					
ANR	10280	Identifier	q		9833	0					
ANR	10281	Identifier	key		9833	1					
ANR	10282	CallExpression	accel_new_interned_string ( q -> key )		9833	1					
ANR	10283	Callee	accel_new_interned_string		9833	0					
ANR	10284	Identifier	accel_new_interned_string		9833	0					
ANR	10285	ArgumentList	q -> key		9833	1					
ANR	10286	Argument	q -> key		9833	0					
ANR	10287	PtrMemberAccess	q -> key		9833	0					
ANR	10288	Identifier	q		9833	0					
ANR	10289	Identifier	key		9833	1					
ANR	10290	IfStatement	if ( Z_FUNC ( q -> val ) -> common . function_name )		9833	3					
ANR	10291	Condition	Z_FUNC ( q -> val ) -> common . function_name	454:7:12949:12984	9833	0	True				
ANR	10292	MemberAccess	Z_FUNC ( q -> val ) -> common . function_name		9833	0					
ANR	10293	PtrMemberAccess	Z_FUNC ( q -> val ) -> common		9833	0					
ANR	10294	CallExpression	Z_FUNC ( q -> val )		9833	0					
ANR	10295	Callee	Z_FUNC		9833	0					
ANR	10296	Identifier	Z_FUNC		9833	0					
ANR	10297	ArgumentList	q -> val		9833	1					
ANR	10298	Argument	q -> val		9833	0					
ANR	10299	PtrMemberAccess	q -> val		9833	0					
ANR	10300	Identifier	q		9833	0					
ANR	10301	Identifier	val		9833	1					
ANR	10302	Identifier	common		9833	1					
ANR	10303	Identifier	function_name		9833	1					
ANR	10304	CompoundStatement		65:45:1725:1725	9833	1					
ANR	10305	ExpressionStatement	Z_FUNC ( q -> val ) -> common . function_name = accel_new_interned_string ( Z_FUNC ( q -> val ) -> common . function_name )	455:4:12993:13095	9833	0	True				
ANR	10306	AssignmentExpression	Z_FUNC ( q -> val ) -> common . function_name = accel_new_interned_string ( Z_FUNC ( q -> val ) -> common . function_name )		9833	0		=			
ANR	10307	MemberAccess	Z_FUNC ( q -> val ) -> common . function_name		9833	0					
ANR	10308	PtrMemberAccess	Z_FUNC ( q -> val ) -> common		9833	0					
ANR	10309	CallExpression	Z_FUNC ( q -> val )		9833	0					
ANR	10310	Callee	Z_FUNC		9833	0					
ANR	10311	Identifier	Z_FUNC		9833	0					
ANR	10312	ArgumentList	q -> val		9833	1					
ANR	10313	Argument	q -> val		9833	0					
ANR	10314	PtrMemberAccess	q -> val		9833	0					
ANR	10315	Identifier	q		9833	0					
ANR	10316	Identifier	val		9833	1					
ANR	10317	Identifier	common		9833	1					
ANR	10318	Identifier	function_name		9833	1					
ANR	10319	CallExpression	accel_new_interned_string ( Z_FUNC ( q -> val ) -> common . function_name )		9833	1					
ANR	10320	Callee	accel_new_interned_string		9833	0					
ANR	10321	Identifier	accel_new_interned_string		9833	0					
ANR	10322	ArgumentList	Z_FUNC ( q -> val ) -> common . function_name		9833	1					
ANR	10323	Argument	Z_FUNC ( q -> val ) -> common . function_name		9833	0					
ANR	10324	MemberAccess	Z_FUNC ( q -> val ) -> common . function_name		9833	0					
ANR	10325	PtrMemberAccess	Z_FUNC ( q -> val ) -> common		9833	0					
ANR	10326	CallExpression	Z_FUNC ( q -> val )		9833	0					
ANR	10327	Callee	Z_FUNC		9833	0					
ANR	10328	Identifier	Z_FUNC		9833	0					
ANR	10329	ArgumentList	q -> val		9833	1					
ANR	10330	Argument	q -> val		9833	0					
ANR	10331	PtrMemberAccess	q -> val		9833	0					
ANR	10332	Identifier	q		9833	0					
ANR	10333	Identifier	val		9833	1					
ANR	10334	Identifier	common		9833	1					
ANR	10335	Identifier	function_name		9833	1					
ANR	10336	ForStatement	for ( j = 0 ; j < ce -> constants_table . nNumUsed ; j ++ )		9833	8					
ANR	10337	ForInit	j = 0 ;	459:7:13114:13119	9833	0	True				
ANR	10338	AssignmentExpression	j = 0		9833	0		=			
ANR	10339	Identifier	j		9833	0					
ANR	10340	PrimaryExpression	0		9833	1					
ANR	10341	Condition	j < ce -> constants_table . nNumUsed	459:14:13121:13152	9833	1	True				
ANR	10342	RelationalExpression	j < ce -> constants_table . nNumUsed		9833	0		<			
ANR	10343	Identifier	j		9833	0					
ANR	10344	MemberAccess	ce -> constants_table . nNumUsed		9833	1					
ANR	10345	PtrMemberAccess	ce -> constants_table		9833	0					
ANR	10346	Identifier	ce		9833	0					
ANR	10347	Identifier	constants_table		9833	1					
ANR	10348	Identifier	nNumUsed		9833	1					
ANR	10349	PostIncDecOperationExpression	j ++	459:48:13155:13157	9833	2	True				
ANR	10350	Identifier	j		9833	0					
ANR	10351	IncDec	++		9833	1					
ANR	10352	CompoundStatement		70:53:1898:1898	9833	3					
ANR	10353	ExpressionStatement	q = ce -> constants_table . arData + j	460:3:13165:13199	9833	0	True				
ANR	10354	AssignmentExpression	q = ce -> constants_table . arData + j		9833	0		=			
ANR	10355	Identifier	q		9833	0					
ANR	10356	AdditiveExpression	ce -> constants_table . arData + j		9833	1		+			
ANR	10357	MemberAccess	ce -> constants_table . arData		9833	0					
ANR	10358	PtrMemberAccess	ce -> constants_table		9833	0					
ANR	10359	Identifier	ce		9833	0					
ANR	10360	Identifier	constants_table		9833	1					
ANR	10361	Identifier	arData		9833	1					
ANR	10362	Identifier	j		9833	1					
ANR	10363	IfStatement	if ( ! Z_TYPE ( q -> val ) == IS_UNDEF )		9833	1					
ANR	10364	Condition	! Z_TYPE ( q -> val ) == IS_UNDEF	461:7:13208:13234	9833	0	True				
ANR	10365	EqualityExpression	! Z_TYPE ( q -> val ) == IS_UNDEF		9833	0		==			
ANR	10366	UnaryOperationExpression	! Z_TYPE ( q -> val )		9833	0					
ANR	10367	UnaryOperator	!		9833	0					
ANR	10368	CallExpression	Z_TYPE ( q -> val )		9833	1					
ANR	10369	Callee	Z_TYPE		9833	0					
ANR	10370	Identifier	Z_TYPE		9833	0					
ANR	10371	ArgumentList	q -> val		9833	1					
ANR	10372	Argument	q -> val		9833	0					
ANR	10373	PtrMemberAccess	q -> val		9833	0					
ANR	10374	Identifier	q		9833	0					
ANR	10375	Identifier	val		9833	1					
ANR	10376	Identifier	IS_UNDEF		9833	1					
ANR	10377	ContinueStatement	continue ;	461:36:13237:13245	9833	1	True				
ANR	10378	IfStatement	if ( q -> key )		9833	2					
ANR	10379	Condition	q -> key	462:7:13254:13259	9833	0	True				
ANR	10380	PtrMemberAccess	q -> key		9833	0					
ANR	10381	Identifier	q		9833	0					
ANR	10382	Identifier	key		9833	1					
ANR	10383	CompoundStatement		73:15:2000:2000	9833	1					
ANR	10384	ExpressionStatement	q -> key = accel_new_interned_string ( q -> key )	463:4:13268:13310	9833	0	True				
ANR	10385	AssignmentExpression	q -> key = accel_new_interned_string ( q -> key )		9833	0		=			
ANR	10386	PtrMemberAccess	q -> key		9833	0					
ANR	10387	Identifier	q		9833	0					
ANR	10388	Identifier	key		9833	1					
ANR	10389	CallExpression	accel_new_interned_string ( q -> key )		9833	1					
ANR	10390	Callee	accel_new_interned_string		9833	0					
ANR	10391	Identifier	accel_new_interned_string		9833	0					
ANR	10392	ArgumentList	q -> key		9833	1					
ANR	10393	Argument	q -> key		9833	0					
ANR	10394	PtrMemberAccess	q -> key		9833	0					
ANR	10395	Identifier	q		9833	0					
ANR	10396	Identifier	key		9833	1					
ANR	10397	ForStatement	for ( idx = 0 ; idx < EG ( zend_constants ) -> nNumUsed ; idx ++ )		9833	6					
ANR	10398	ForInit	idx = 0 ;	469:6:13357:13364	9833	0	True				
ANR	10399	AssignmentExpression	idx = 0		9833	0		=			
ANR	10400	Identifier	idx		9833	0					
ANR	10401	PrimaryExpression	0		9833	1					
ANR	10402	Condition	idx < EG ( zend_constants ) -> nNumUsed	469:15:13366:13399	9833	1	True				
ANR	10403	RelationalExpression	idx < EG ( zend_constants ) -> nNumUsed		9833	0		<			
ANR	10404	Identifier	idx		9833	0					
ANR	10405	PtrMemberAccess	EG ( zend_constants ) -> nNumUsed		9833	1					
ANR	10406	CallExpression	EG ( zend_constants )		9833	0					
ANR	10407	Callee	EG		9833	0					
ANR	10408	Identifier	EG		9833	0					
ANR	10409	ArgumentList	zend_constants		9833	1					
ANR	10410	Argument	zend_constants		9833	0					
ANR	10411	Identifier	zend_constants		9833	0					
ANR	10412	Identifier	nNumUsed		9833	1					
ANR	10413	PostIncDecOperationExpression	idx ++	469:51:13402:13406	9833	2	True				
ANR	10414	Identifier	idx		9833	0					
ANR	10415	IncDec	++		9833	1					
ANR	10416	CompoundStatement		80:58:2147:2147	9833	3					
ANR	10417	ExpressionStatement	p = EG ( zend_constants ) -> arData + idx	470:2:13413:13449	9833	0	True				
ANR	10418	AssignmentExpression	p = EG ( zend_constants ) -> arData + idx		9833	0		=			
ANR	10419	Identifier	p		9833	0					
ANR	10420	AdditiveExpression	EG ( zend_constants ) -> arData + idx		9833	1		+			
ANR	10421	PtrMemberAccess	EG ( zend_constants ) -> arData		9833	0					
ANR	10422	CallExpression	EG ( zend_constants )		9833	0					
ANR	10423	Callee	EG		9833	0					
ANR	10424	Identifier	EG		9833	0					
ANR	10425	ArgumentList	zend_constants		9833	1					
ANR	10426	Argument	zend_constants		9833	0					
ANR	10427	Identifier	zend_constants		9833	0					
ANR	10428	Identifier	arData		9833	1					
ANR	10429	Identifier	idx		9833	1					
ANR	10430	IfStatement	if ( ! Z_TYPE ( p -> val ) == IS_UNDEF )		9833	1					
ANR	10431	Condition	! Z_TYPE ( p -> val ) == IS_UNDEF	471:6:13457:13483	9833	0	True				
ANR	10432	EqualityExpression	! Z_TYPE ( p -> val ) == IS_UNDEF		9833	0		==			
ANR	10433	UnaryOperationExpression	! Z_TYPE ( p -> val )		9833	0					
ANR	10434	UnaryOperator	!		9833	0					
ANR	10435	CallExpression	Z_TYPE ( p -> val )		9833	1					
ANR	10436	Callee	Z_TYPE		9833	0					
ANR	10437	Identifier	Z_TYPE		9833	0					
ANR	10438	ArgumentList	p -> val		9833	1					
ANR	10439	Argument	p -> val		9833	0					
ANR	10440	PtrMemberAccess	p -> val		9833	0					
ANR	10441	Identifier	p		9833	0					
ANR	10442	Identifier	val		9833	1					
ANR	10443	Identifier	IS_UNDEF		9833	1					
ANR	10444	ContinueStatement	continue ;	471:35:13486:13494	9833	1	True				
ANR	10445	IfStatement	if ( p -> key )		9833	2					
ANR	10446	Condition	p -> key	472:6:13502:13507	9833	0	True				
ANR	10447	PtrMemberAccess	p -> key		9833	0					
ANR	10448	Identifier	p		9833	0					
ANR	10449	Identifier	key		9833	1					
ANR	10450	CompoundStatement		83:14:2248:2248	9833	1					
ANR	10451	ExpressionStatement	p -> key = accel_new_interned_string ( p -> key )	473:3:13515:13557	9833	0	True				
ANR	10452	AssignmentExpression	p -> key = accel_new_interned_string ( p -> key )		9833	0		=			
ANR	10453	PtrMemberAccess	p -> key		9833	0					
ANR	10454	Identifier	p		9833	0					
ANR	10455	Identifier	key		9833	1					
ANR	10456	CallExpression	accel_new_interned_string ( p -> key )		9833	1					
ANR	10457	Callee	accel_new_interned_string		9833	0					
ANR	10458	Identifier	accel_new_interned_string		9833	0					
ANR	10459	ArgumentList	p -> key		9833	1					
ANR	10460	Argument	p -> key		9833	0					
ANR	10461	PtrMemberAccess	p -> key		9833	0					
ANR	10462	Identifier	p		9833	0					
ANR	10463	Identifier	key		9833	1					
ANR	10464	ForStatement	for ( idx = 0 ; idx < CG ( auto_globals ) -> nNumUsed ; idx ++ )		9833	7					
ANR	10465	ForInit	idx = 0 ;	478:6:13613:13620	9833	0	True				
ANR	10466	AssignmentExpression	idx = 0		9833	0		=			
ANR	10467	Identifier	idx		9833	0					
ANR	10468	PrimaryExpression	0		9833	1					
ANR	10469	Condition	idx < CG ( auto_globals ) -> nNumUsed	478:15:13622:13653	9833	1	True				
ANR	10470	RelationalExpression	idx < CG ( auto_globals ) -> nNumUsed		9833	0		<			
ANR	10471	Identifier	idx		9833	0					
ANR	10472	PtrMemberAccess	CG ( auto_globals ) -> nNumUsed		9833	1					
ANR	10473	CallExpression	CG ( auto_globals )		9833	0					
ANR	10474	Callee	CG		9833	0					
ANR	10475	Identifier	CG		9833	0					
ANR	10476	ArgumentList	auto_globals		9833	1					
ANR	10477	Argument	auto_globals		9833	0					
ANR	10478	Identifier	auto_globals		9833	0					
ANR	10479	Identifier	nNumUsed		9833	1					
ANR	10480	PostIncDecOperationExpression	idx ++	478:49:13656:13660	9833	2	True				
ANR	10481	Identifier	idx		9833	0					
ANR	10482	IncDec	++		9833	1					
ANR	10483	CompoundStatement		90:2:2405:2434	9833	3					
ANR	10484	IdentifierDeclStatement	zend_auto_global * auto_global ;	479:2:13667:13696	9833	0	True				
ANR	10485	IdentifierDecl	* auto_global		9833	0					
ANR	10486	IdentifierDeclType	zend_auto_global *		9833	0					
ANR	10487	Identifier	auto_global		9833	1					
ANR	10488	ExpressionStatement	p = CG ( auto_globals ) -> arData + idx	481:2:13701:13735	9833	1	True				
ANR	10489	AssignmentExpression	p = CG ( auto_globals ) -> arData + idx		9833	0		=			
ANR	10490	Identifier	p		9833	0					
ANR	10491	AdditiveExpression	CG ( auto_globals ) -> arData + idx		9833	1		+			
ANR	10492	PtrMemberAccess	CG ( auto_globals ) -> arData		9833	0					
ANR	10493	CallExpression	CG ( auto_globals )		9833	0					
ANR	10494	Callee	CG		9833	0					
ANR	10495	Identifier	CG		9833	0					
ANR	10496	ArgumentList	auto_globals		9833	1					
ANR	10497	Argument	auto_globals		9833	0					
ANR	10498	Identifier	auto_globals		9833	0					
ANR	10499	Identifier	arData		9833	1					
ANR	10500	Identifier	idx		9833	1					
ANR	10501	IfStatement	if ( Z_TYPE ( p -> val ) == IS_UNDEF )		9833	2					
ANR	10502	Condition	Z_TYPE ( p -> val ) == IS_UNDEF	482:6:13743:13768	9833	0	True				
ANR	10503	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		9833	0		==			
ANR	10504	CallExpression	Z_TYPE ( p -> val )		9833	0					
ANR	10505	Callee	Z_TYPE		9833	0					
ANR	10506	Identifier	Z_TYPE		9833	0					
ANR	10507	ArgumentList	p -> val		9833	1					
ANR	10508	Argument	p -> val		9833	0					
ANR	10509	PtrMemberAccess	p -> val		9833	0					
ANR	10510	Identifier	p		9833	0					
ANR	10511	Identifier	val		9833	1					
ANR	10512	Identifier	IS_UNDEF		9833	1					
ANR	10513	ContinueStatement	continue ;	482:34:13771:13779	9833	1	True				
ANR	10514	ExpressionStatement	auto_global = ( zend_auto_global * ) Z_PTR ( p -> val )	484:2:13784:13830	9833	3	True				
ANR	10515	AssignmentExpression	auto_global = ( zend_auto_global * ) Z_PTR ( p -> val )		9833	0		=			
ANR	10516	Identifier	auto_global		9833	0					
ANR	10517	CastExpression	( zend_auto_global * ) Z_PTR ( p -> val )		9833	1					
ANR	10518	CastTarget	zend_auto_global *		9833	0					
ANR	10519	CallExpression	Z_PTR ( p -> val )		9833	1					
ANR	10520	Callee	Z_PTR		9833	0					
ANR	10521	Identifier	Z_PTR		9833	0					
ANR	10522	ArgumentList	p -> val		9833	1					
ANR	10523	Argument	p -> val		9833	0					
ANR	10524	PtrMemberAccess	p -> val		9833	0					
ANR	10525	Identifier	p		9833	0					
ANR	10526	Identifier	val		9833	1					
ANR	10527	ExpressionStatement		484:49:13831:13831	9833	4	True				
ANR	10528	ExpressionStatement	zend_string_addref ( auto_global -> name )	486:2:13836:13873	9833	5	True				
ANR	10529	CallExpression	zend_string_addref ( auto_global -> name )		9833	0					
ANR	10530	Callee	zend_string_addref		9833	0					
ANR	10531	Identifier	zend_string_addref		9833	0					
ANR	10532	ArgumentList	auto_global -> name		9833	1					
ANR	10533	Argument	auto_global -> name		9833	0					
ANR	10534	PtrMemberAccess	auto_global -> name		9833	0					
ANR	10535	Identifier	auto_global		9833	0					
ANR	10536	Identifier	name		9833	1					
ANR	10537	ExpressionStatement	auto_global -> name = accel_new_interned_string ( auto_global -> name )	487:2:13877:13941	9833	6	True				
ANR	10538	AssignmentExpression	auto_global -> name = accel_new_interned_string ( auto_global -> name )		9833	0		=			
ANR	10539	PtrMemberAccess	auto_global -> name		9833	0					
ANR	10540	Identifier	auto_global		9833	0					
ANR	10541	Identifier	name		9833	1					
ANR	10542	CallExpression	accel_new_interned_string ( auto_global -> name )		9833	1					
ANR	10543	Callee	accel_new_interned_string		9833	0					
ANR	10544	Identifier	accel_new_interned_string		9833	0					
ANR	10545	ArgumentList	auto_global -> name		9833	1					
ANR	10546	Argument	auto_global -> name		9833	0					
ANR	10547	PtrMemberAccess	auto_global -> name		9833	0					
ANR	10548	Identifier	auto_global		9833	0					
ANR	10549	Identifier	name		9833	1					
ANR	10550	IfStatement	if ( p -> key )		9833	7					
ANR	10551	Condition	p -> key	488:6:13949:13954	9833	0	True				
ANR	10552	PtrMemberAccess	p -> key		9833	0					
ANR	10553	Identifier	p		9833	0					
ANR	10554	Identifier	key		9833	1					
ANR	10555	CompoundStatement		99:14:2695:2695	9833	1					
ANR	10556	ExpressionStatement	p -> key = accel_new_interned_string ( p -> key )	489:3:13962:14004	9833	0	True				
ANR	10557	AssignmentExpression	p -> key = accel_new_interned_string ( p -> key )		9833	0		=			
ANR	10558	PtrMemberAccess	p -> key		9833	0					
ANR	10559	Identifier	p		9833	0					
ANR	10560	Identifier	key		9833	1					
ANR	10561	CallExpression	accel_new_interned_string ( p -> key )		9833	1					
ANR	10562	Callee	accel_new_interned_string		9833	0					
ANR	10563	Identifier	accel_new_interned_string		9833	0					
ANR	10564	ArgumentList	p -> key		9833	1					
ANR	10565	Argument	p -> key		9833	0					
ANR	10566	PtrMemberAccess	p -> key		9833	0					
ANR	10567	Identifier	p		9833	0					
ANR	10568	Identifier	key		9833	1					
ANR	10569	ReturnType	static void		9833	1					
ANR	10570	Identifier	accel_use_shm_interned_strings		9833	2					
ANR	10571	ParameterList			9833	3					
ANR	10572	CFGEntryNode	ENTRY		9833		True				
ANR	10573	CFGExitNode	EXIT		9833		True				
ANR	10574	Symbol	ce -> constants_table		9833						
ANR	10575	Symbol	auto_global		9833						
ANR	10576	Symbol	* CG		9833						
ANR	10577	Symbol	Z_TYPE		9833						
ANR	10578	Symbol	* ce		9833						
ANR	10579	Symbol	Z_FUNC ( q -> val ) -> common		9833						
ANR	10580	Symbol	empty_string		9833						
ANR	10581	Symbol	one_char_string		9833						
ANR	10582	Symbol	q -> key		9833						
ANR	10583	Symbol	zend_string_init		9833						
ANR	10584	Symbol	ce -> properties_info . arData		9833						
ANR	10585	Symbol	zend_constants		9833						
ANR	10586	Symbol	* Z_FUNC		9833						
ANR	10587	Symbol	Z_FUNC ( q -> val ) -> common . function_name		9833						
ANR	10588	Symbol	ce -> name		9833						
ANR	10589	Symbol	IS_UNDEF		9833						
ANR	10590	Symbol	info		9833						
ANR	10591	Symbol	EG		9833						
ANR	10592	Symbol	auto_global -> name		9833						
ANR	10593	Symbol	p -> key		9833						
ANR	10594	Symbol	ce -> properties_info		9833						
ANR	10595	Symbol	auto_globals		9833						
ANR	10596	Symbol	q -> val		9833						
ANR	10597	Symbol	EG ( zend_constants ) -> arData		9833						
ANR	10598	Symbol	idx		9833						
ANR	10599	Symbol	function_table		9833						
ANR	10600	Symbol	accel_new_interned_string		9833						
ANR	10601	Symbol	CG ( class_table ) -> arData		9833						
ANR	10602	Symbol	Z_FUNC ( p -> val ) -> common		9833						
ANR	10603	Symbol	Z_PTR		9833						
ANR	10604	Symbol	* EG		9833						
ANR	10605	Symbol	CG ( function_table ) -> nNumUsed		9833						
ANR	10606	Symbol	ce -> function_table . nNumUsed		9833						
ANR	10607	Symbol	* auto_global		9833						
ANR	10608	Symbol	info -> name		9833						
ANR	10609	Symbol	class_table		9833						
ANR	10610	Symbol	EG ( zend_constants ) -> nNumUsed		9833						
ANR	10611	Symbol	ce		9833						
ANR	10612	Symbol	CG		9833						
ANR	10613	Symbol	Z_FUNC		9833						
ANR	10614	Symbol	ce -> constants_table . nNumUsed		9833						
ANR	10615	Symbol	CG ( auto_globals ) -> nNumUsed		9833						
ANR	10616	Symbol	j		9833						
ANR	10617	Symbol	CG ( auto_globals ) -> arData		9833						
ANR	10618	Symbol	p -> val		9833						
ANR	10619	Symbol	CG ( class_table ) -> nNumUsed		9833						
ANR	10620	Symbol	p		9833						
ANR	10621	Symbol	q		9833						
ANR	10622	Symbol	ce -> constants_table . arData		9833						
ANR	10623	Symbol	s		9833						
ANR	10624	Symbol	CG ( function_table ) -> arData		9833						
ANR	10625	Symbol	ce -> function_table . arData		9833						
ANR	10626	Symbol	* j		9833						
ANR	10627	Symbol	* p		9833						
ANR	10628	Symbol	* q		9833						
ANR	10629	Symbol	* info		9833						
ANR	10630	Symbol	ce -> function_table		9833						
ANR	10631	Symbol	ce -> properties_info . nNumUsed		9833						
ANR	10632	Symbol	* s		9833						
ANR	10633	Symbol	Z_FUNC ( p -> val ) -> common . function_name		9833						
ANR	10634	Function	accel_restart_enter	495:0:14023:14387							
ANR	10635	FunctionDef	accel_restart_enter ()		10634	0					
ANR	10636	CompoundStatement		496:0:14068:14387	10634	0					
ANR	10637	ExpressionStatement	INCREMENT ( restart_in )	498:1:14089:14110	10634	0	True				
ANR	10638	CallExpression	INCREMENT ( restart_in )		10634	0					
ANR	10639	Callee	INCREMENT		10634	0					
ANR	10640	Identifier	INCREMENT		10634	0					
ANR	10641	ArgumentList	restart_in		10634	1					
ANR	10642	Argument	restart_in		10634	0					
ANR	10643	Identifier	restart_in		10634	0					
ANR	10644	ExpressionStatement	ZCSG ( restart_in_progress ) = 1	506:1:14356:14385	10634	1	True				
ANR	10645	AssignmentExpression	ZCSG ( restart_in_progress ) = 1		10634	0		=			
ANR	10646	CallExpression	ZCSG ( restart_in_progress )		10634	0					
ANR	10647	Callee	ZCSG		10634	0					
ANR	10648	Identifier	ZCSG		10634	0					
ANR	10649	ArgumentList	restart_in_progress		10634	1					
ANR	10650	Argument	restart_in_progress		10634	0					
ANR	10651	Identifier	restart_in_progress		10634	0					
ANR	10652	PrimaryExpression	1		10634	1					
ANR	10653	ReturnType	static inline void		10634	1					
ANR	10654	Identifier	accel_restart_enter		10634	2					
ANR	10655	ParameterList			10634	3					
ANR	10656	CFGEntryNode	ENTRY		10634		True				
ANR	10657	CFGExitNode	EXIT		10634		True				
ANR	10658	Symbol	ZCSG		10634						
ANR	10659	Symbol	restart_in		10634						
ANR	10660	Symbol	restart_in_progress		10634						
ANR	10661	Function	accel_restart_leave	509:0:14390:14780							
ANR	10662	FunctionDef	accel_restart_leave ()		10661	0					
ANR	10663	CompoundStatement		510:0:14435:14780	10661	0					
ANR	10664	ExpressionStatement	ZCSG ( restart_in_progress ) = 0	512:1:14456:14485	10661	0	True				
ANR	10665	AssignmentExpression	ZCSG ( restart_in_progress ) = 0		10661	0		=			
ANR	10666	CallExpression	ZCSG ( restart_in_progress )		10661	0					
ANR	10667	Callee	ZCSG		10661	0					
ANR	10668	Identifier	ZCSG		10661	0					
ANR	10669	ArgumentList	restart_in_progress		10661	1					
ANR	10670	Argument	restart_in_progress		10661	0					
ANR	10671	Identifier	restart_in_progress		10661	0					
ANR	10672	PrimaryExpression	0		10661	1					
ANR	10673	ExpressionStatement	DECREMENT ( restart_in )	513:1:14488:14509	10661	1	True				
ANR	10674	CallExpression	DECREMENT ( restart_in )		10661	0					
ANR	10675	Callee	DECREMENT		10661	0					
ANR	10676	Identifier	DECREMENT		10661	0					
ANR	10677	ArgumentList	restart_in		10661	1					
ANR	10678	Argument	restart_in		10661	0					
ANR	10679	Identifier	restart_in		10661	0					
ANR	10680	ReturnType	static inline void		10661	1					
ANR	10681	Identifier	accel_restart_leave		10661	2					
ANR	10682	ParameterList			10661	3					
ANR	10683	CFGEntryNode	ENTRY		10661		True				
ANR	10684	CFGExitNode	EXIT		10661		True				
ANR	10685	Symbol	ZCSG		10661						
ANR	10686	Symbol	restart_in		10661						
ANR	10687	Symbol	restart_in_progress		10661						
ANR	10688	Function	accel_restart_is_active	524:0:14783:15288							
ANR	10689	FunctionDef	accel_restart_is_active ()		10688	0					
ANR	10690	CompoundStatement		525:0:14831:15288	10688	0					
ANR	10691	IfStatement	if ( ZCSG ( restart_in_progress ) )		10688	0					
ANR	10692	Condition	ZCSG ( restart_in_progress )	526:5:14838:14862	10688	0	True				
ANR	10693	CallExpression	ZCSG ( restart_in_progress )		10688	0					
ANR	10694	Callee	ZCSG		10688	0					
ANR	10695	Identifier	ZCSG		10688	0					
ANR	10696	ArgumentList	restart_in_progress		10688	1					
ANR	10697	Argument	restart_in_progress		10688	0					
ANR	10698	Identifier	restart_in_progress		10688	0					
ANR	10699	CompoundStatement		2:32:33:33	10688	1					
ANR	10700	ExpressionStatement	"FLOCK_STRUCTURE ( restart_check , F_WRLCK , SEEK_SET , 2 , 1 )"	528:2:14888:14943	10688	0	True				
ANR	10701	CallExpression	"FLOCK_STRUCTURE ( restart_check , F_WRLCK , SEEK_SET , 2 , 1 )"		10688	0					
ANR	10702	Callee	FLOCK_STRUCTURE		10688	0					
ANR	10703	Identifier	FLOCK_STRUCTURE		10688	0					
ANR	10704	ArgumentList	restart_check		10688	1					
ANR	10705	Argument	restart_check		10688	0					
ANR	10706	Identifier	restart_check		10688	0					
ANR	10707	Argument	F_WRLCK		10688	1					
ANR	10708	Identifier	F_WRLCK		10688	0					
ANR	10709	Argument	SEEK_SET		10688	2					
ANR	10710	Identifier	SEEK_SET		10688	0					
ANR	10711	Argument	2		10688	3					
ANR	10712	PrimaryExpression	2		10688	0					
ANR	10713	Argument	1		10688	4					
ANR	10714	PrimaryExpression	1		10688	0					
ANR	10715	IfStatement	"if ( fcntl ( lock_file , F_GETLK , & restart_check ) == - 1 )"		10688	1					
ANR	10716	Condition	"fcntl ( lock_file , F_GETLK , & restart_check ) == - 1"	530:6:14952:14998	10688	0	True				
ANR	10717	EqualityExpression	"fcntl ( lock_file , F_GETLK , & restart_check ) == - 1"		10688	0		==			
ANR	10718	CallExpression	"fcntl ( lock_file , F_GETLK , & restart_check )"		10688	0					
ANR	10719	Callee	fcntl		10688	0					
ANR	10720	Identifier	fcntl		10688	0					
ANR	10721	ArgumentList	lock_file		10688	1					
ANR	10722	Argument	lock_file		10688	0					
ANR	10723	Identifier	lock_file		10688	0					
ANR	10724	Argument	F_GETLK		10688	1					
ANR	10725	Identifier	F_GETLK		10688	0					
ANR	10726	Argument	& restart_check		10688	2					
ANR	10727	UnaryOperationExpression	& restart_check		10688	0					
ANR	10728	UnaryOperator	&		10688	0					
ANR	10729	Identifier	restart_check		10688	1					
ANR	10730	UnaryOperationExpression	- 1		10688	1					
ANR	10731	UnaryOperator	-		10688	0					
ANR	10732	PrimaryExpression	1		10688	1					
ANR	10733	CompoundStatement		6:55:169:169	10688	1					
ANR	10734	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""RestartC:  %s (%d)"" , strerror ( errno ) , errno )"	531:3:15006:15085	10688	0	True				
ANR	10735	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""RestartC:  %s (%d)"" , strerror ( errno ) , errno )"		10688	0					
ANR	10736	Callee	zend_accel_error		10688	0					
ANR	10737	Identifier	zend_accel_error		10688	0					
ANR	10738	ArgumentList	ACCEL_LOG_DEBUG		10688	1					
ANR	10739	Argument	ACCEL_LOG_DEBUG		10688	0					
ANR	10740	Identifier	ACCEL_LOG_DEBUG		10688	0					
ANR	10741	Argument	"""RestartC:  %s (%d)"""		10688	1					
ANR	10742	PrimaryExpression	"""RestartC:  %s (%d)"""		10688	0					
ANR	10743	Argument	strerror ( errno )		10688	2					
ANR	10744	CallExpression	strerror ( errno )		10688	0					
ANR	10745	Callee	strerror		10688	0					
ANR	10746	Identifier	strerror		10688	0					
ANR	10747	ArgumentList	errno		10688	1					
ANR	10748	Argument	errno		10688	0					
ANR	10749	Identifier	errno		10688	0					
ANR	10750	Argument	errno		10688	3					
ANR	10751	Identifier	errno		10688	0					
ANR	10752	ReturnStatement	return FAILURE ;	532:3:15090:15104	10688	1	True				
ANR	10753	Identifier	FAILURE		10688	0					
ANR	10754	IfStatement	if ( restart_check . l_type == F_UNLCK )		10688	2					
ANR	10755	Condition	restart_check . l_type == F_UNLCK	534:6:15116:15146	10688	0	True				
ANR	10756	EqualityExpression	restart_check . l_type == F_UNLCK		10688	0		==			
ANR	10757	MemberAccess	restart_check . l_type		10688	0					
ANR	10758	Identifier	restart_check		10688	0					
ANR	10759	Identifier	l_type		10688	1					
ANR	10760	Identifier	F_UNLCK		10688	1					
ANR	10761	CompoundStatement		10:39:317:317	10688	1					
ANR	10762	ExpressionStatement	ZCSG ( restart_in_progress ) = 0	535:3:15154:15183	10688	0	True				
ANR	10763	AssignmentExpression	ZCSG ( restart_in_progress ) = 0		10688	0		=			
ANR	10764	CallExpression	ZCSG ( restart_in_progress )		10688	0					
ANR	10765	Callee	ZCSG		10688	0					
ANR	10766	Identifier	ZCSG		10688	0					
ANR	10767	ArgumentList	restart_in_progress		10688	1					
ANR	10768	Argument	restart_in_progress		10688	0					
ANR	10769	Identifier	restart_in_progress		10688	0					
ANR	10770	PrimaryExpression	0		10688	1					
ANR	10771	ReturnStatement	return 0 ;	536:3:15188:15196	10688	1	True				
ANR	10772	PrimaryExpression	0		10688	0					
ANR	10773	ElseStatement	else		10688	0					
ANR	10774	CompoundStatement		13:9:375:375	10688	0					
ANR	10775	ReturnStatement	return 1 ;	538:3:15212:15220	10688	0	True				
ANR	10776	PrimaryExpression	1		10688	0					
ANR	10777	ReturnStatement	return 0 ;	544:1:15278:15286	10688	1	True				
ANR	10778	PrimaryExpression	0		10688	0					
ANR	10779	ReturnType	static inline int		10688	1					
ANR	10780	Identifier	accel_restart_is_active		10688	2					
ANR	10781	ParameterList			10688	3					
ANR	10782	CFGEntryNode	ENTRY		10688		True				
ANR	10783	CFGExitNode	EXIT		10688		True				
ANR	10784	Symbol	SEEK_SET		10688						
ANR	10785	Symbol	F_WRLCK		10688						
ANR	10786	Symbol	F_UNLCK		10688						
ANR	10787	Symbol	restart_check		10688						
ANR	10788	Symbol	errno		10688						
ANR	10789	Symbol	F_GETLK		10688						
ANR	10790	Symbol	fcntl		10688						
ANR	10791	Symbol	restart_in_progress		10688						
ANR	10792	Symbol	FAILURE		10688						
ANR	10793	Symbol	strerror		10688						
ANR	10794	Symbol	ZCSG		10688						
ANR	10795	Symbol	ACCEL_LOG_DEBUG		10688						
ANR	10796	Symbol	restart_check . l_type		10688						
ANR	10797	Symbol	& restart_check		10688						
ANR	10798	Symbol	lock_file		10688						
ANR	10799	Function	accel_activate_add	548:0:15332:15651							
ANR	10800	FunctionDef	accel_activate_add ()		10799	0					
ANR	10801	CompoundStatement		549:0:15376:15651	10799	0					
ANR	10802	ExpressionStatement	INCREMENT ( mem_usage )	551:1:15397:15417	10799	0	True				
ANR	10803	CallExpression	INCREMENT ( mem_usage )		10799	0					
ANR	10804	Callee	INCREMENT		10799	0					
ANR	10805	Identifier	INCREMENT		10799	0					
ANR	10806	ArgumentList	mem_usage		10799	1					
ANR	10807	Argument	mem_usage		10799	0					
ANR	10808	Identifier	mem_usage		10799	0					
ANR	10809	ReturnType	static inline void		10799	1					
ANR	10810	Identifier	accel_activate_add		10799	2					
ANR	10811	ParameterList			10799	3					
ANR	10812	CFGEntryNode	ENTRY		10799		True				
ANR	10813	CFGExitNode	EXIT		10799		True				
ANR	10814	Symbol	mem_usage		10799						
ANR	10815	Function	accel_deactivate_sub	562:0:15691:16061							
ANR	10816	FunctionDef	accel_deactivate_sub ()		10815	0					
ANR	10817	CompoundStatement		563:0:15737:16061	10815	0					
ANR	10818	IfStatement	if ( ZCG ( counted ) )		10815	0					
ANR	10819	Condition	ZCG ( counted )	565:5:15762:15773	10815	0	True				
ANR	10820	CallExpression	ZCG ( counted )		10815	0					
ANR	10821	Callee	ZCG		10815	0					
ANR	10822	Identifier	ZCG		10815	0					
ANR	10823	ArgumentList	counted		10815	1					
ANR	10824	Argument	counted		10815	0					
ANR	10825	Identifier	counted		10815	0					
ANR	10826	CompoundStatement		3:19:38:38	10815	1					
ANR	10827	ExpressionStatement	DECREMENT ( mem_usage )	566:2:15780:15800	10815	0	True				
ANR	10828	CallExpression	DECREMENT ( mem_usage )		10815	0					
ANR	10829	Callee	DECREMENT		10815	0					
ANR	10830	Identifier	DECREMENT		10815	0					
ANR	10831	ArgumentList	mem_usage		10815	1					
ANR	10832	Argument	mem_usage		10815	0					
ANR	10833	Identifier	mem_usage		10815	0					
ANR	10834	ExpressionStatement	ZCG ( counted ) = 0	567:2:15804:15820	10815	1	True				
ANR	10835	AssignmentExpression	ZCG ( counted ) = 0		10815	0		=			
ANR	10836	CallExpression	ZCG ( counted )		10815	0					
ANR	10837	Callee	ZCG		10815	0					
ANR	10838	Identifier	ZCG		10815	0					
ANR	10839	ArgumentList	counted		10815	1					
ANR	10840	Argument	counted		10815	0					
ANR	10841	Identifier	counted		10815	0					
ANR	10842	PrimaryExpression	0		10815	1					
ANR	10843	ReturnType	static inline void		10815	1					
ANR	10844	Identifier	accel_deactivate_sub		10815	2					
ANR	10845	ParameterList			10815	3					
ANR	10846	CFGEntryNode	ENTRY		10815		True				
ANR	10847	CFGExitNode	EXIT		10815		True				
ANR	10848	Symbol	mem_usage		10815						
ANR	10849	Symbol	counted		10815						
ANR	10850	Symbol	ZCG		10815						
ANR	10851	Function	accel_unlock_all	578:0:16064:16393							
ANR	10852	FunctionDef	accel_unlock_all ()		10851	0					
ANR	10853	CompoundStatement		579:0:16106:16393	10851	0					
ANR	10854	ExpressionStatement	accel_deactivate_sub ( )	581:1:16127:16149	10851	0	True				
ANR	10855	CallExpression	accel_deactivate_sub ( )		10851	0					
ANR	10856	Callee	accel_deactivate_sub		10851	0					
ANR	10857	Identifier	accel_deactivate_sub		10851	0					
ANR	10858	ArgumentList			10851	1					
ANR	10859	ReturnType	static inline void		10851	1					
ANR	10860	Identifier	accel_unlock_all		10851	2					
ANR	10861	ParameterList			10851	3					
ANR	10862	CFGEntryNode	ENTRY		10851		True				
ANR	10863	CFGExitNode	EXIT		10851		True				
ANR	10864	Function	kill_all_lockers	592:0:16415:17584							
ANR	10865	FunctionDef	kill_all_lockers (struct flock * mem_usage_check)		10864	0					
ANR	10866	CompoundStatement		593:0:16482:17584	10864	0					
ANR	10867	IdentifierDeclStatement	int tries = 10 ;	594:1:16485:16499	10864	0	True				
ANR	10868	IdentifierDecl	tries = 10		10864	0					
ANR	10869	IdentifierDeclType	int		10864	0					
ANR	10870	Identifier	tries		10864	1					
ANR	10871	AssignmentExpression	tries = 10		10864	2		=			
ANR	10872	Identifier	tries		10864	0					
ANR	10873	PrimaryExpression	10		10864	1					
ANR	10874	ExpressionStatement	ZCSG ( force_restart_time ) = 0	597:1:16581:16609	10864	1	True				
ANR	10875	AssignmentExpression	ZCSG ( force_restart_time ) = 0		10864	0		=			
ANR	10876	CallExpression	ZCSG ( force_restart_time )		10864	0					
ANR	10877	Callee	ZCSG		10864	0					
ANR	10878	Identifier	ZCSG		10864	0					
ANR	10879	ArgumentList	force_restart_time		10864	1					
ANR	10880	Argument	force_restart_time		10864	0					
ANR	10881	Identifier	force_restart_time		10864	0					
ANR	10882	PrimaryExpression	0		10864	1					
ANR	10883	WhileStatement	while ( mem_usage_check -> l_pid > 0 )		10864	2					
ANR	10884	Condition	mem_usage_check -> l_pid > 0	598:8:16619:16644	10864	0	True				
ANR	10885	RelationalExpression	mem_usage_check -> l_pid > 0		10864	0		>			
ANR	10886	PtrMemberAccess	mem_usage_check -> l_pid		10864	0					
ANR	10887	Identifier	mem_usage_check		10864	0					
ANR	10888	Identifier	l_pid		10864	1					
ANR	10889	PrimaryExpression	0		10864	1					
ANR	10890	CompoundStatement		6:36:164:164	10864	1					
ANR	10891	WhileStatement	while ( tries -- )		10864	0					
ANR	10892	Condition	tries --	599:9:16658:16664	10864	0	True				
ANR	10893	PostIncDecOperationExpression	tries --		10864	0					
ANR	10894	Identifier	tries		10864	0					
ANR	10895	IncDec	--		10864	1					
ANR	10896	CompoundStatement		7:18:184:184	10864	1					
ANR	10897	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_ERROR , ""Killed locker %d"" , mem_usage_check -> l_pid )"	600:3:16672:16749	10864	0	True				
ANR	10898	CallExpression	"zend_accel_error ( ACCEL_LOG_ERROR , ""Killed locker %d"" , mem_usage_check -> l_pid )"		10864	0					
ANR	10899	Callee	zend_accel_error		10864	0					
ANR	10900	Identifier	zend_accel_error		10864	0					
ANR	10901	ArgumentList	ACCEL_LOG_ERROR		10864	1					
ANR	10902	Argument	ACCEL_LOG_ERROR		10864	0					
ANR	10903	Identifier	ACCEL_LOG_ERROR		10864	0					
ANR	10904	Argument	"""Killed locker %d"""		10864	1					
ANR	10905	PrimaryExpression	"""Killed locker %d"""		10864	0					
ANR	10906	Argument	mem_usage_check -> l_pid		10864	2					
ANR	10907	PtrMemberAccess	mem_usage_check -> l_pid		10864	0					
ANR	10908	Identifier	mem_usage_check		10864	0					
ANR	10909	Identifier	l_pid		10864	1					
ANR	10910	IfStatement	"if ( kill ( mem_usage_check -> l_pid , SIGKILL ) )"		10864	1					
ANR	10911	Condition	"kill ( mem_usage_check -> l_pid , SIGKILL )"	601:7:16758:16794	10864	0	True				
ANR	10912	CallExpression	"kill ( mem_usage_check -> l_pid , SIGKILL )"		10864	0					
ANR	10913	Callee	kill		10864	0					
ANR	10914	Identifier	kill		10864	0					
ANR	10915	ArgumentList	mem_usage_check -> l_pid		10864	1					
ANR	10916	Argument	mem_usage_check -> l_pid		10864	0					
ANR	10917	PtrMemberAccess	mem_usage_check -> l_pid		10864	0					
ANR	10918	Identifier	mem_usage_check		10864	0					
ANR	10919	Identifier	l_pid		10864	1					
ANR	10920	Argument	SIGKILL		10864	1					
ANR	10921	Identifier	SIGKILL		10864	0					
ANR	10922	CompoundStatement		9:46:314:314	10864	1					
ANR	10923	BreakStatement	break ;	602:4:16803:16808	10864	0	True				
ANR	10924	ExpressionStatement	usleep ( 20000 )	605:3:16851:16864	10864	2	True				
ANR	10925	CallExpression	usleep ( 20000 )		10864	0					
ANR	10926	Callee	usleep		10864	0					
ANR	10927	Identifier	usleep		10864	0					
ANR	10928	ArgumentList	20000		10864	1					
ANR	10929	Argument	20000		10864	0					
ANR	10930	PrimaryExpression	20000		10864	0					
ANR	10931	IfStatement	"if ( kill ( mem_usage_check -> l_pid , 0 ) )"		10864	3					
ANR	10932	Condition	"kill ( mem_usage_check -> l_pid , 0 )"	606:7:16873:16903	10864	0	True				
ANR	10933	CallExpression	"kill ( mem_usage_check -> l_pid , 0 )"		10864	0					
ANR	10934	Callee	kill		10864	0					
ANR	10935	Identifier	kill		10864	0					
ANR	10936	ArgumentList	mem_usage_check -> l_pid		10864	1					
ANR	10937	Argument	mem_usage_check -> l_pid		10864	0					
ANR	10938	PtrMemberAccess	mem_usage_check -> l_pid		10864	0					
ANR	10939	Identifier	mem_usage_check		10864	0					
ANR	10940	Identifier	l_pid		10864	1					
ANR	10941	Argument	0		10864	1					
ANR	10942	PrimaryExpression	0		10864	0					
ANR	10943	CompoundStatement		14:40:423:423	10864	1					
ANR	10944	BreakStatement	break ;	608:4:16936:16941	10864	0	True				
ANR	10945	ExpressionStatement	usleep ( 10000 )	610:3:16951:16964	10864	4	True				
ANR	10946	CallExpression	usleep ( 10000 )		10864	0					
ANR	10947	Callee	usleep		10864	0					
ANR	10948	Identifier	usleep		10864	0					
ANR	10949	ArgumentList	10000		10864	1					
ANR	10950	Argument	10000		10864	0					
ANR	10951	PrimaryExpression	10000		10864	0					
ANR	10952	IfStatement	if ( ! tries )		10864	1					
ANR	10953	Condition	! tries	612:6:16976:16981	10864	0	True				
ANR	10954	UnaryOperationExpression	! tries		10864	0					
ANR	10955	UnaryOperator	!		10864	0					
ANR	10956	Identifier	tries		10864	1					
ANR	10957	CompoundStatement		20:14:501:501	10864	1					
ANR	10958	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_ERROR , ""Can't kill %d after 20 tries!"" , mem_usage_check -> l_pid )"	613:3:16989:17079	10864	0	True				
ANR	10959	CallExpression	"zend_accel_error ( ACCEL_LOG_ERROR , ""Can't kill %d after 20 tries!"" , mem_usage_check -> l_pid )"		10864	0					
ANR	10960	Callee	zend_accel_error		10864	0					
ANR	10961	Identifier	zend_accel_error		10864	0					
ANR	10962	ArgumentList	ACCEL_LOG_ERROR		10864	1					
ANR	10963	Argument	ACCEL_LOG_ERROR		10864	0					
ANR	10964	Identifier	ACCEL_LOG_ERROR		10864	0					
ANR	10965	Argument	"""Can't kill %d after 20 tries!"""		10864	1					
ANR	10966	PrimaryExpression	"""Can't kill %d after 20 tries!"""		10864	0					
ANR	10967	Argument	mem_usage_check -> l_pid		10864	2					
ANR	10968	PtrMemberAccess	mem_usage_check -> l_pid		10864	0					
ANR	10969	Identifier	mem_usage_check		10864	0					
ANR	10970	Identifier	l_pid		10864	1					
ANR	10971	ExpressionStatement	ZCSG ( force_restart_time ) = time ( NULL )	614:3:17084:17121	10864	1	True				
ANR	10972	AssignmentExpression	ZCSG ( force_restart_time ) = time ( NULL )		10864	0		=			
ANR	10973	CallExpression	ZCSG ( force_restart_time )		10864	0					
ANR	10974	Callee	ZCSG		10864	0					
ANR	10975	Identifier	ZCSG		10864	0					
ANR	10976	ArgumentList	force_restart_time		10864	1					
ANR	10977	Argument	force_restart_time		10864	0					
ANR	10978	Identifier	force_restart_time		10864	0					
ANR	10979	CallExpression	time ( NULL )		10864	1					
ANR	10980	Callee	time		10864	0					
ANR	10981	Identifier	time		10864	0					
ANR	10982	ArgumentList	NULL		10864	1					
ANR	10983	Argument	NULL		10864	0					
ANR	10984	Identifier	NULL		10864	0					
ANR	10985	ExpressionStatement	mem_usage_check -> l_type = F_WRLCK	617:2:17167:17200	10864	2	True				
ANR	10986	AssignmentExpression	mem_usage_check -> l_type = F_WRLCK		10864	0		=			
ANR	10987	PtrMemberAccess	mem_usage_check -> l_type		10864	0					
ANR	10988	Identifier	mem_usage_check		10864	0					
ANR	10989	Identifier	l_type		10864	1					
ANR	10990	Identifier	F_WRLCK		10864	1					
ANR	10991	ExpressionStatement	mem_usage_check -> l_whence = SEEK_SET	618:2:17204:17240	10864	3	True				
ANR	10992	AssignmentExpression	mem_usage_check -> l_whence = SEEK_SET		10864	0		=			
ANR	10993	PtrMemberAccess	mem_usage_check -> l_whence		10864	0					
ANR	10994	Identifier	mem_usage_check		10864	0					
ANR	10995	Identifier	l_whence		10864	1					
ANR	10996	Identifier	SEEK_SET		10864	1					
ANR	10997	ExpressionStatement	mem_usage_check -> l_start = 1	619:2:17244:17272	10864	4	True				
ANR	10998	AssignmentExpression	mem_usage_check -> l_start = 1		10864	0		=			
ANR	10999	PtrMemberAccess	mem_usage_check -> l_start		10864	0					
ANR	11000	Identifier	mem_usage_check		10864	0					
ANR	11001	Identifier	l_start		10864	1					
ANR	11002	PrimaryExpression	1		10864	1					
ANR	11003	ExpressionStatement	mem_usage_check -> l_len = 1	620:2:17276:17302	10864	5	True				
ANR	11004	AssignmentExpression	mem_usage_check -> l_len = 1		10864	0		=			
ANR	11005	PtrMemberAccess	mem_usage_check -> l_len		10864	0					
ANR	11006	Identifier	mem_usage_check		10864	0					
ANR	11007	Identifier	l_len		10864	1					
ANR	11008	PrimaryExpression	1		10864	1					
ANR	11009	ExpressionStatement	mem_usage_check -> l_pid = - 1	621:2:17306:17333	10864	6	True				
ANR	11010	AssignmentExpression	mem_usage_check -> l_pid = - 1		10864	0		=			
ANR	11011	PtrMemberAccess	mem_usage_check -> l_pid		10864	0					
ANR	11012	Identifier	mem_usage_check		10864	0					
ANR	11013	Identifier	l_pid		10864	1					
ANR	11014	UnaryOperationExpression	- 1		10864	1					
ANR	11015	UnaryOperator	-		10864	0					
ANR	11016	PrimaryExpression	1		10864	1					
ANR	11017	IfStatement	"if ( fcntl ( lock_file , F_GETLK , mem_usage_check ) == - 1 )"		10864	7					
ANR	11018	Condition	"fcntl ( lock_file , F_GETLK , mem_usage_check ) == - 1"	622:6:17341:17388	10864	0	True				
ANR	11019	EqualityExpression	"fcntl ( lock_file , F_GETLK , mem_usage_check ) == - 1"		10864	0		==			
ANR	11020	CallExpression	"fcntl ( lock_file , F_GETLK , mem_usage_check )"		10864	0					
ANR	11021	Callee	fcntl		10864	0					
ANR	11022	Identifier	fcntl		10864	0					
ANR	11023	ArgumentList	lock_file		10864	1					
ANR	11024	Argument	lock_file		10864	0					
ANR	11025	Identifier	lock_file		10864	0					
ANR	11026	Argument	F_GETLK		10864	1					
ANR	11027	Identifier	F_GETLK		10864	0					
ANR	11028	Argument	mem_usage_check		10864	2					
ANR	11029	Identifier	mem_usage_check		10864	0					
ANR	11030	UnaryOperationExpression	- 1		10864	1					
ANR	11031	UnaryOperator	-		10864	0					
ANR	11032	PrimaryExpression	1		10864	1					
ANR	11033	CompoundStatement		30:56:908:908	10864	1					
ANR	11034	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""KLockers:  %s (%d)"" , strerror ( errno ) , errno )"	623:3:17396:17475	10864	0	True				
ANR	11035	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""KLockers:  %s (%d)"" , strerror ( errno ) , errno )"		10864	0					
ANR	11036	Callee	zend_accel_error		10864	0					
ANR	11037	Identifier	zend_accel_error		10864	0					
ANR	11038	ArgumentList	ACCEL_LOG_DEBUG		10864	1					
ANR	11039	Argument	ACCEL_LOG_DEBUG		10864	0					
ANR	11040	Identifier	ACCEL_LOG_DEBUG		10864	0					
ANR	11041	Argument	"""KLockers:  %s (%d)"""		10864	1					
ANR	11042	PrimaryExpression	"""KLockers:  %s (%d)"""		10864	0					
ANR	11043	Argument	strerror ( errno )		10864	2					
ANR	11044	CallExpression	strerror ( errno )		10864	0					
ANR	11045	Callee	strerror		10864	0					
ANR	11046	Identifier	strerror		10864	0					
ANR	11047	ArgumentList	errno		10864	1					
ANR	11048	Argument	errno		10864	0					
ANR	11049	Identifier	errno		10864	0					
ANR	11050	Argument	errno		10864	3					
ANR	11051	Identifier	errno		10864	0					
ANR	11052	BreakStatement	break ;	624:3:17480:17485	10864	1	True				
ANR	11053	IfStatement	if ( mem_usage_check -> l_type == F_UNLCK || mem_usage_check -> l_pid <= 0 )		10864	8					
ANR	11054	Condition	mem_usage_check -> l_type == F_UNLCK || mem_usage_check -> l_pid <= 0	627:6:17498:17562	10864	0	True				
ANR	11055	OrExpression	mem_usage_check -> l_type == F_UNLCK || mem_usage_check -> l_pid <= 0		10864	0		||			
ANR	11056	EqualityExpression	mem_usage_check -> l_type == F_UNLCK		10864	0		==			
ANR	11057	PtrMemberAccess	mem_usage_check -> l_type		10864	0					
ANR	11058	Identifier	mem_usage_check		10864	0					
ANR	11059	Identifier	l_type		10864	1					
ANR	11060	Identifier	F_UNLCK		10864	1					
ANR	11061	RelationalExpression	mem_usage_check -> l_pid <= 0		10864	1		<=			
ANR	11062	PtrMemberAccess	mem_usage_check -> l_pid		10864	0					
ANR	11063	Identifier	mem_usage_check		10864	0					
ANR	11064	Identifier	l_pid		10864	1					
ANR	11065	PrimaryExpression	0		10864	1					
ANR	11066	CompoundStatement		35:73:1082:1082	10864	1					
ANR	11067	BreakStatement	break ;	628:3:17570:17575	10864	0	True				
ANR	11068	ReturnType	static inline void		10864	1					
ANR	11069	Identifier	kill_all_lockers		10864	2					
ANR	11070	ParameterList	struct flock * mem_usage_check		10864	3					
ANR	11071	Parameter	struct flock * mem_usage_check	592:36:16451:16479	10864	0	True				
ANR	11072	ParameterType	struct flock *		10864	0					
ANR	11073	Identifier	mem_usage_check		10864	1					
ANR	11074	CFGEntryNode	ENTRY		10864		True				
ANR	11075	CFGExitNode	EXIT		10864		True				
ANR	11076	Symbol	F_WRLCK		10864						
ANR	11077	Symbol	SEEK_SET		10864						
ANR	11078	Symbol	F_UNLCK		10864						
ANR	11079	Symbol	tries		10864						
ANR	11080	Symbol	errno		10864						
ANR	11081	Symbol	mem_usage_check		10864						
ANR	11082	Symbol	NULL		10864						
ANR	11083	Symbol	F_GETLK		10864						
ANR	11084	Symbol	fcntl		10864						
ANR	11085	Symbol	kill		10864						
ANR	11086	Symbol	mem_usage_check -> l_start		10864						
ANR	11087	Symbol	mem_usage_check -> l_len		10864						
ANR	11088	Symbol	SIGKILL		10864						
ANR	11089	Symbol	strerror		10864						
ANR	11090	Symbol	ZCSG		10864						
ANR	11091	Symbol	mem_usage_check -> l_pid		10864						
ANR	11092	Symbol	ACCEL_LOG_DEBUG		10864						
ANR	11093	Symbol	* mem_usage_check		10864						
ANR	11094	Symbol	force_restart_time		10864						
ANR	11095	Symbol	mem_usage_check -> l_whence		10864						
ANR	11096	Symbol	time		10864						
ANR	11097	Symbol	lock_file		10864						
ANR	11098	Symbol	mem_usage_check -> l_type		10864						
ANR	11099	Symbol	ACCEL_LOG_ERROR		10864						
ANR	11100	Function	accel_is_inactive	634:0:17594:18465							
ANR	11101	FunctionDef	accel_is_inactive ()		11100	0					
ANR	11102	CompoundStatement		635:0:17636:18465	11100	0					
ANR	11103	IfStatement	if ( LOCKVAL ( mem_usage ) == 0 )		11100	0					
ANR	11104	Condition	LOCKVAL ( mem_usage ) == 0	637:5:17661:17683	11100	0	True				
ANR	11105	EqualityExpression	LOCKVAL ( mem_usage ) == 0		11100	0		==			
ANR	11106	CallExpression	LOCKVAL ( mem_usage )		11100	0					
ANR	11107	Callee	LOCKVAL		11100	0					
ANR	11108	Identifier	LOCKVAL		11100	0					
ANR	11109	ArgumentList	mem_usage		11100	1					
ANR	11110	Argument	mem_usage		11100	0					
ANR	11111	Identifier	mem_usage		11100	0					
ANR	11112	PrimaryExpression	0		11100	1					
ANR	11113	CompoundStatement		3:30:49:49	11100	1					
ANR	11114	ReturnStatement	return SUCCESS ;	638:2:17690:17704	11100	0	True				
ANR	11115	Identifier	SUCCESS		11100	0					
ANR	11116	ReturnStatement	return FAILURE ;	662:1:18449:18463	11100	1	True				
ANR	11117	Identifier	FAILURE		11100	0					
ANR	11118	ReturnType	static inline int		11100	1					
ANR	11119	Identifier	accel_is_inactive		11100	2					
ANR	11120	ParameterList			11100	3					
ANR	11121	CFGEntryNode	ENTRY		11100		True				
ANR	11122	CFGExitNode	EXIT		11100		True				
ANR	11123	Symbol	mem_usage		11100						
ANR	11124	Symbol	SUCCESS		11100						
ANR	11125	Symbol	LOCKVAL		11100						
ANR	11126	Symbol	FAILURE		11100						
ANR	11127	Function	zend_get_stream_timestamp	665:0:18468:19297							
ANR	11128	FunctionDef	"zend_get_stream_timestamp (const char * filename , zend_stat_t * statbuf)"		11127	0					
ANR	11129	CompoundStatement		666:0:18549:19297	11127	0					
ANR	11130	IdentifierDeclStatement	php_stream_wrapper * wrapper ;	667:1:18552:18579	11127	0	True				
ANR	11131	IdentifierDecl	* wrapper		11127	0					
ANR	11132	IdentifierDeclType	php_stream_wrapper *		11127	0					
ANR	11133	Identifier	wrapper		11127	1					
ANR	11134	IdentifierDeclStatement	php_stream_statbuf stream_statbuf ;	668:1:18582:18615	11127	1	True				
ANR	11135	IdentifierDecl	stream_statbuf		11127	0					
ANR	11136	IdentifierDeclType	php_stream_statbuf		11127	0					
ANR	11137	Identifier	stream_statbuf		11127	1					
ANR	11138	IdentifierDeclStatement	"int ret , er ;"	669:1:18618:18629	11127	2	True				
ANR	11139	IdentifierDecl	ret		11127	0					
ANR	11140	IdentifierDeclType	int		11127	0					
ANR	11141	Identifier	ret		11127	1					
ANR	11142	IdentifierDecl	er		11127	1					
ANR	11143	IdentifierDeclType	int		11127	0					
ANR	11144	Identifier	er		11127	1					
ANR	11145	IfStatement	if ( ! filename )		11127	3					
ANR	11146	Condition	! filename	671:5:18637:18645	11127	0	True				
ANR	11147	UnaryOperationExpression	! filename		11127	0					
ANR	11148	UnaryOperator	!		11127	0					
ANR	11149	Identifier	filename		11127	1					
ANR	11150	CompoundStatement		6:16:98:98	11127	1					
ANR	11151	ReturnStatement	return FAILURE ;	672:2:18652:18666	11127	0	True				
ANR	11152	Identifier	FAILURE		11127	0					
ANR	11153	ExpressionStatement	"wrapper = php_stream_locate_url_wrapper ( filename , NULL , STREAM_LOCATE_WRAPPERS_ONLY )"	675:1:18673:18757	11127	4	True				
ANR	11154	AssignmentExpression	"wrapper = php_stream_locate_url_wrapper ( filename , NULL , STREAM_LOCATE_WRAPPERS_ONLY )"		11127	0		=			
ANR	11155	Identifier	wrapper		11127	0					
ANR	11156	CallExpression	"php_stream_locate_url_wrapper ( filename , NULL , STREAM_LOCATE_WRAPPERS_ONLY )"		11127	1					
ANR	11157	Callee	php_stream_locate_url_wrapper		11127	0					
ANR	11158	Identifier	php_stream_locate_url_wrapper		11127	0					
ANR	11159	ArgumentList	filename		11127	1					
ANR	11160	Argument	filename		11127	0					
ANR	11161	Identifier	filename		11127	0					
ANR	11162	Argument	NULL		11127	1					
ANR	11163	Identifier	NULL		11127	0					
ANR	11164	Argument	STREAM_LOCATE_WRAPPERS_ONLY		11127	2					
ANR	11165	Identifier	STREAM_LOCATE_WRAPPERS_ONLY		11127	0					
ANR	11166	IfStatement	if ( ! wrapper )		11127	5					
ANR	11167	Condition	! wrapper	676:5:18764:18771	11127	0	True				
ANR	11168	UnaryOperationExpression	! wrapper		11127	0					
ANR	11169	UnaryOperator	!		11127	0					
ANR	11170	Identifier	wrapper		11127	1					
ANR	11171	CompoundStatement		11:15:224:224	11127	1					
ANR	11172	ReturnStatement	return FAILURE ;	677:2:18778:18792	11127	0	True				
ANR	11173	Identifier	FAILURE		11127	0					
ANR	11174	IfStatement	if ( ! wrapper -> wops || ! wrapper -> wops -> url_stat )		11127	6					
ANR	11175	Condition	! wrapper -> wops || ! wrapper -> wops -> url_stat	679:5:18802:18843	11127	0	True				
ANR	11176	OrExpression	! wrapper -> wops || ! wrapper -> wops -> url_stat		11127	0		||			
ANR	11177	UnaryOperationExpression	! wrapper -> wops		11127	0					
ANR	11178	UnaryOperator	!		11127	0					
ANR	11179	PtrMemberAccess	wrapper -> wops		11127	1					
ANR	11180	Identifier	wrapper		11127	0					
ANR	11181	Identifier	wops		11127	1					
ANR	11182	UnaryOperationExpression	! wrapper -> wops -> url_stat		11127	1					
ANR	11183	UnaryOperator	!		11127	0					
ANR	11184	PtrMemberAccess	wrapper -> wops -> url_stat		11127	1					
ANR	11185	PtrMemberAccess	wrapper -> wops		11127	0					
ANR	11186	Identifier	wrapper		11127	0					
ANR	11187	Identifier	wops		11127	1					
ANR	11188	Identifier	url_stat		11127	1					
ANR	11189	CompoundStatement		14:49:296:296	11127	1					
ANR	11190	ExpressionStatement	statbuf -> st_mtime = 1	680:2:18850:18871	11127	0	True				
ANR	11191	AssignmentExpression	statbuf -> st_mtime = 1		11127	0		=			
ANR	11192	PtrMemberAccess	statbuf -> st_mtime		11127	0					
ANR	11193	Identifier	statbuf		11127	0					
ANR	11194	Identifier	st_mtime		11127	1					
ANR	11195	PrimaryExpression	1		11127	1					
ANR	11196	ReturnStatement	return SUCCESS ;	681:2:18875:18889	11127	1	True				
ANR	11197	Identifier	SUCCESS		11127	0					
ANR	11198	ExpressionStatement	er = EG ( error_reporting )	684:1:18962:18986	11127	7	True				
ANR	11199	AssignmentExpression	er = EG ( error_reporting )		11127	0		=			
ANR	11200	Identifier	er		11127	0					
ANR	11201	CallExpression	EG ( error_reporting )		11127	1					
ANR	11202	Callee	EG		11127	0					
ANR	11203	Identifier	EG		11127	0					
ANR	11204	ArgumentList	error_reporting		11127	1					
ANR	11205	Argument	error_reporting		11127	0					
ANR	11206	Identifier	error_reporting		11127	0					
ANR	11207	ExpressionStatement	EG ( error_reporting ) = 0	685:1:18989:19012	11127	8	True				
ANR	11208	AssignmentExpression	EG ( error_reporting ) = 0		11127	0		=			
ANR	11209	CallExpression	EG ( error_reporting )		11127	0					
ANR	11210	Callee	EG		11127	0					
ANR	11211	Identifier	EG		11127	0					
ANR	11212	ArgumentList	error_reporting		11127	1					
ANR	11213	Argument	error_reporting		11127	0					
ANR	11214	Identifier	error_reporting		11127	0					
ANR	11215	PrimaryExpression	0		11127	1					
ANR	11216	Statement	zend_try	686:1:19015:19022	11127	9	True				
ANR	11217	CompoundStatement		21:10:474:474	11127	10					
ANR	11218	ExpressionStatement	"ret = wrapper -> wops -> url_stat ( wrapper , ( char * ) filename , PHP_STREAM_URL_STAT_QUIET , & stream_statbuf , NULL )"	687:2:19028:19133	11127	0	True				
ANR	11219	AssignmentExpression	"ret = wrapper -> wops -> url_stat ( wrapper , ( char * ) filename , PHP_STREAM_URL_STAT_QUIET , & stream_statbuf , NULL )"		11127	0		=			
ANR	11220	Identifier	ret		11127	0					
ANR	11221	CallExpression	"wrapper -> wops -> url_stat ( wrapper , ( char * ) filename , PHP_STREAM_URL_STAT_QUIET , & stream_statbuf , NULL )"		11127	1					
ANR	11222	Callee	wrapper -> wops -> url_stat		11127	0					
ANR	11223	PtrMemberAccess	wrapper -> wops -> url_stat		11127	0					
ANR	11224	PtrMemberAccess	wrapper -> wops		11127	0					
ANR	11225	Identifier	wrapper		11127	0					
ANR	11226	Identifier	wops		11127	1					
ANR	11227	Identifier	url_stat		11127	1					
ANR	11228	ArgumentList	wrapper		11127	1					
ANR	11229	Argument	wrapper		11127	0					
ANR	11230	Identifier	wrapper		11127	0					
ANR	11231	Argument	( char * ) filename		11127	1					
ANR	11232	CastExpression	( char * ) filename		11127	0					
ANR	11233	CastTarget	char *		11127	0					
ANR	11234	Identifier	filename		11127	1					
ANR	11235	Argument	PHP_STREAM_URL_STAT_QUIET		11127	2					
ANR	11236	Identifier	PHP_STREAM_URL_STAT_QUIET		11127	0					
ANR	11237	Argument	& stream_statbuf		11127	3					
ANR	11238	UnaryOperationExpression	& stream_statbuf		11127	0					
ANR	11239	UnaryOperator	&		11127	0					
ANR	11240	Identifier	stream_statbuf		11127	1					
ANR	11241	Argument	NULL		11127	4					
ANR	11242	Identifier	NULL		11127	0					
ANR	11243	Statement	zend_catch	688:3:19138:19147	11127	11	True				
ANR	11244	CompoundStatement		23:14:599:599	11127	12					
ANR	11245	ExpressionStatement	ret = - 1	689:2:19153:19161	11127	0	True				
ANR	11246	AssignmentExpression	ret = - 1		11127	0		=			
ANR	11247	Identifier	ret		11127	0					
ANR	11248	UnaryOperationExpression	- 1		11127	1					
ANR	11249	UnaryOperator	-		11127	0					
ANR	11250	PrimaryExpression	1		11127	1					
ANR	11251	ExpressionStatement	zend_end_try ( )	690:3:19166:19180	11127	13	True				
ANR	11252	CallExpression	zend_end_try ( )		11127	0					
ANR	11253	Callee	zend_end_try		11127	0					
ANR	11254	Identifier	zend_end_try		11127	0					
ANR	11255	ArgumentList			11127	1					
ANR	11256	ExpressionStatement	EG ( error_reporting ) = er	691:1:19183:19207	11127	14	True				
ANR	11257	AssignmentExpression	EG ( error_reporting ) = er		11127	0		=			
ANR	11258	CallExpression	EG ( error_reporting )		11127	0					
ANR	11259	Callee	EG		11127	0					
ANR	11260	Identifier	EG		11127	0					
ANR	11261	ArgumentList	error_reporting		11127	1					
ANR	11262	Argument	error_reporting		11127	0					
ANR	11263	Identifier	error_reporting		11127	0					
ANR	11264	Identifier	er		11127	1					
ANR	11265	IfStatement	if ( ret != 0 )		11127	15					
ANR	11266	Condition	ret != 0	693:5:19215:19222	11127	0	True				
ANR	11267	EqualityExpression	ret != 0		11127	0		!=			
ANR	11268	Identifier	ret		11127	0					
ANR	11269	PrimaryExpression	0		11127	1					
ANR	11270	CompoundStatement		28:15:675:675	11127	1					
ANR	11271	ReturnStatement	return FAILURE ;	694:2:19229:19243	11127	0	True				
ANR	11272	Identifier	FAILURE		11127	0					
ANR	11273	ExpressionStatement	* statbuf = stream_statbuf . sb	697:1:19250:19278	11127	16	True				
ANR	11274	AssignmentExpression	* statbuf = stream_statbuf . sb		11127	0		=			
ANR	11275	UnaryOperationExpression	* statbuf		11127	0					
ANR	11276	UnaryOperator	*		11127	0					
ANR	11277	Identifier	statbuf		11127	1					
ANR	11278	MemberAccess	stream_statbuf . sb		11127	1					
ANR	11279	Identifier	stream_statbuf		11127	0					
ANR	11280	Identifier	sb		11127	1					
ANR	11281	ReturnStatement	return SUCCESS ;	698:1:19281:19295	11127	17	True				
ANR	11282	Identifier	SUCCESS		11127	0					
ANR	11283	ReturnType	static int		11127	1					
ANR	11284	Identifier	zend_get_stream_timestamp		11127	2					
ANR	11285	ParameterList	"const char * filename , zend_stat_t * statbuf"		11127	3					
ANR	11286	Parameter	const char * filename	665:37:18505:18524	11127	0	True				
ANR	11287	ParameterType	const char *		11127	0					
ANR	11288	Identifier	filename		11127	1					
ANR	11289	Parameter	zend_stat_t * statbuf	665:59:18527:18546	11127	1	True				
ANR	11290	ParameterType	zend_stat_t *		11127	0					
ANR	11291	Identifier	statbuf		11127	1					
ANR	11292	CFGEntryNode	ENTRY		11127		True				
ANR	11293	CFGExitNode	EXIT		11127		True				
ANR	11294	Symbol	ret		11127						
ANR	11295	Symbol	* statbuf		11127						
ANR	11296	Symbol	EG		11127						
ANR	11297	Symbol	NULL		11127						
ANR	11298	Symbol	SUCCESS		11127						
ANR	11299	Symbol	* wrapper		11127						
ANR	11300	Symbol	* wrapper -> wops		11127						
ANR	11301	Symbol	& stream_statbuf		11127						
ANR	11302	Symbol	STREAM_LOCATE_WRAPPERS_ONLY		11127						
ANR	11303	Symbol	stream_statbuf		11127						
ANR	11304	Symbol	wrapper		11127						
ANR	11305	Symbol	error_reporting		11127						
ANR	11306	Symbol	* * wrapper		11127						
ANR	11307	Symbol	PHP_STREAM_URL_STAT_QUIET		11127						
ANR	11308	Symbol	er		11127						
ANR	11309	Symbol	FAILURE		11127						
ANR	11310	Symbol	filename		11127						
ANR	11311	Symbol	wrapper -> wops -> url_stat		11127						
ANR	11312	Symbol	statbuf		11127						
ANR	11313	Symbol	wrapper -> wops		11127						
ANR	11314	Symbol	statbuf -> st_mtime		11127						
ANR	11315	Symbol	php_stream_locate_url_wrapper		11127						
ANR	11316	Symbol	stream_statbuf . sb		11127						
ANR	11317	Function	zend_get_file_handle_timestamp_win	702:0:19315:20438							
ANR	11318	FunctionDef	"zend_get_file_handle_timestamp_win (zend_file_handle * file_handle , size_t * size)"		11317	0					
ANR	11319	CompoundStatement		703:0:19415:20438	11317	0					
ANR	11320	Statement	static	704:1:19418:19423	11317	0	True				
ANR	11321	IdentifierDeclStatement	unsigned __int64 utc_base = 0 ;	704:8:19425:19454	11317	1	True				
ANR	11322	IdentifierDecl	utc_base = 0		11317	0					
ANR	11323	IdentifierDeclType	unsigned __int64		11317	0					
ANR	11324	Identifier	utc_base		11317	1					
ANR	11325	AssignmentExpression	utc_base = 0		11317	2		=			
ANR	11326	Identifier	utc_base		11317	0					
ANR	11327	PrimaryExpression	0		11317	1					
ANR	11328	Statement	static	705:1:19457:19462	11317	2	True				
ANR	11329	IdentifierDeclStatement	FILETIME utc_base_ft ;	705:8:19464:19484	11317	3	True				
ANR	11330	IdentifierDecl	utc_base_ft		11317	0					
ANR	11331	IdentifierDeclType	FILETIME		11317	0					
ANR	11332	Identifier	utc_base_ft		11317	1					
ANR	11333	IdentifierDeclStatement	WIN32_FILE_ATTRIBUTE_DATA fdata ;	706:1:19487:19518	11317	4	True				
ANR	11334	IdentifierDecl	fdata		11317	0					
ANR	11335	IdentifierDeclType	WIN32_FILE_ATTRIBUTE_DATA		11317	0					
ANR	11336	Identifier	fdata		11317	1					
ANR	11337	IfStatement	if ( ! file_handle -> opened_path )		11317	5					
ANR	11338	Condition	! file_handle -> opened_path	708:5:19526:19550	11317	0	True				
ANR	11339	UnaryOperationExpression	! file_handle -> opened_path		11317	0					
ANR	11340	UnaryOperator	!		11317	0					
ANR	11341	PtrMemberAccess	file_handle -> opened_path		11317	1					
ANR	11342	Identifier	file_handle		11317	0					
ANR	11343	Identifier	opened_path		11317	1					
ANR	11344	CompoundStatement		6:32:137:137	11317	1					
ANR	11345	ReturnStatement	return 0 ;	709:2:19557:19565	11317	0	True				
ANR	11346	PrimaryExpression	0		11317	0					
ANR	11347	IfStatement	if ( ! utc_base )		11317	6					
ANR	11348	Condition	! utc_base	712:5:19576:19584	11317	0	True				
ANR	11349	UnaryOperationExpression	! utc_base		11317	0					
ANR	11350	UnaryOperator	!		11317	0					
ANR	11351	Identifier	utc_base		11317	1					
ANR	11352	CompoundStatement		11:2:175:188	11317	1					
ANR	11353	IdentifierDeclStatement	SYSTEMTIME st ;	713:2:19591:19604	11317	0	True				
ANR	11354	IdentifierDecl	st		11317	0					
ANR	11355	IdentifierDeclType	SYSTEMTIME		11317	0					
ANR	11356	Identifier	st		11317	1					
ANR	11357	ExpressionStatement	st . wYear = 1970	715:2:19609:19624	11317	1	True				
ANR	11358	AssignmentExpression	st . wYear = 1970		11317	0		=			
ANR	11359	MemberAccess	st . wYear		11317	0					
ANR	11360	Identifier	st		11317	0					
ANR	11361	Identifier	wYear		11317	1					
ANR	11362	PrimaryExpression	1970		11317	1					
ANR	11363	ExpressionStatement	st . wMonth = 1	716:2:19628:19641	11317	2	True				
ANR	11364	AssignmentExpression	st . wMonth = 1		11317	0		=			
ANR	11365	MemberAccess	st . wMonth		11317	0					
ANR	11366	Identifier	st		11317	0					
ANR	11367	Identifier	wMonth		11317	1					
ANR	11368	PrimaryExpression	1		11317	1					
ANR	11369	ExpressionStatement	st . wDay = 1	717:2:19645:19656	11317	3	True				
ANR	11370	AssignmentExpression	st . wDay = 1		11317	0		=			
ANR	11371	MemberAccess	st . wDay		11317	0					
ANR	11372	Identifier	st		11317	0					
ANR	11373	Identifier	wDay		11317	1					
ANR	11374	PrimaryExpression	1		11317	1					
ANR	11375	ExpressionStatement	st . wHour = 0	718:2:19660:19672	11317	4	True				
ANR	11376	AssignmentExpression	st . wHour = 0		11317	0		=			
ANR	11377	MemberAccess	st . wHour		11317	0					
ANR	11378	Identifier	st		11317	0					
ANR	11379	Identifier	wHour		11317	1					
ANR	11380	PrimaryExpression	0		11317	1					
ANR	11381	ExpressionStatement	st . wMinute = 0	719:2:19676:19690	11317	5	True				
ANR	11382	AssignmentExpression	st . wMinute = 0		11317	0		=			
ANR	11383	MemberAccess	st . wMinute		11317	0					
ANR	11384	Identifier	st		11317	0					
ANR	11385	Identifier	wMinute		11317	1					
ANR	11386	PrimaryExpression	0		11317	1					
ANR	11387	ExpressionStatement	st . wSecond = 0	720:2:19694:19708	11317	6	True				
ANR	11388	AssignmentExpression	st . wSecond = 0		11317	0		=			
ANR	11389	MemberAccess	st . wSecond		11317	0					
ANR	11390	Identifier	st		11317	0					
ANR	11391	Identifier	wSecond		11317	1					
ANR	11392	PrimaryExpression	0		11317	1					
ANR	11393	ExpressionStatement	st . wMilliseconds = 0	721:2:19712:19732	11317	7	True				
ANR	11394	AssignmentExpression	st . wMilliseconds = 0		11317	0		=			
ANR	11395	MemberAccess	st . wMilliseconds		11317	0					
ANR	11396	Identifier	st		11317	0					
ANR	11397	Identifier	wMilliseconds		11317	1					
ANR	11398	PrimaryExpression	0		11317	1					
ANR	11399	ExpressionStatement	"SystemTimeToFileTime ( & st , & utc_base_ft )"	723:2:19737:19777	11317	8	True				
ANR	11400	CallExpression	"SystemTimeToFileTime ( & st , & utc_base_ft )"		11317	0					
ANR	11401	Callee	SystemTimeToFileTime		11317	0					
ANR	11402	Identifier	SystemTimeToFileTime		11317	0					
ANR	11403	ArgumentList	& st		11317	1					
ANR	11404	Argument	& st		11317	0					
ANR	11405	UnaryOperationExpression	& st		11317	0					
ANR	11406	UnaryOperator	&		11317	0					
ANR	11407	Identifier	st		11317	1					
ANR	11408	Argument	& utc_base_ft		11317	1					
ANR	11409	UnaryOperationExpression	& utc_base_ft		11317	0					
ANR	11410	UnaryOperator	&		11317	0					
ANR	11411	Identifier	utc_base_ft		11317	1					
ANR	11412	ExpressionStatement	utc_base = ( ( ( unsigned __int64 ) utc_base_ft . dwHighDateTime ) << 32 ) + utc_base_ft . dwLowDateTime	724:2:19781:19874	11317	9	True				
ANR	11413	AssignmentExpression	utc_base = ( ( ( unsigned __int64 ) utc_base_ft . dwHighDateTime ) << 32 ) + utc_base_ft . dwLowDateTime		11317	0		=			
ANR	11414	Identifier	utc_base		11317	0					
ANR	11415	AdditiveExpression	( ( ( unsigned __int64 ) utc_base_ft . dwHighDateTime ) << 32 ) + utc_base_ft . dwLowDateTime		11317	1		+			
ANR	11416	ShiftExpression	( ( unsigned __int64 ) utc_base_ft . dwHighDateTime ) << 32		11317	0		<<			
ANR	11417	CastExpression	( unsigned __int64 ) utc_base_ft . dwHighDateTime		11317	0					
ANR	11418	CastTarget	unsigned __int64		11317	0					
ANR	11419	MemberAccess	utc_base_ft . dwHighDateTime		11317	1					
ANR	11420	Identifier	utc_base_ft		11317	0					
ANR	11421	Identifier	dwHighDateTime		11317	1					
ANR	11422	PrimaryExpression	32		11317	1					
ANR	11423	MemberAccess	utc_base_ft . dwLowDateTime		11317	1					
ANR	11424	Identifier	utc_base_ft		11317	0					
ANR	11425	Identifier	dwLowDateTime		11317	1					
ANR	11426	IfStatement	"if ( file_handle -> opened_path && GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata ) != 0 )"		11317	7					
ANR	11427	Condition	"file_handle -> opened_path && GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata ) != 0"	727:5:19888:20001	11317	0	True				
ANR	11428	AndExpression	"file_handle -> opened_path && GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata ) != 0"		11317	0		&&			
ANR	11429	PtrMemberAccess	file_handle -> opened_path		11317	0					
ANR	11430	Identifier	file_handle		11317	0					
ANR	11431	Identifier	opened_path		11317	1					
ANR	11432	EqualityExpression	"GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata ) != 0"		11317	1		!=			
ANR	11433	CallExpression	"GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata )"		11317	0					
ANR	11434	Callee	GetFileAttributesEx		11317	0					
ANR	11435	Identifier	GetFileAttributesEx		11317	0					
ANR	11436	ArgumentList	file_handle -> opened_path -> val		11317	1					
ANR	11437	Argument	file_handle -> opened_path -> val		11317	0					
ANR	11438	PtrMemberAccess	file_handle -> opened_path -> val		11317	0					
ANR	11439	PtrMemberAccess	file_handle -> opened_path		11317	0					
ANR	11440	Identifier	file_handle		11317	0					
ANR	11441	Identifier	opened_path		11317	1					
ANR	11442	Identifier	val		11317	1					
ANR	11443	Argument	GetFileExInfoStandard		11317	1					
ANR	11444	Identifier	GetFileExInfoStandard		11317	0					
ANR	11445	Argument	& fdata		11317	2					
ANR	11446	UnaryOperationExpression	& fdata		11317	0					
ANR	11447	UnaryOperator	&		11317	0					
ANR	11448	Identifier	fdata		11317	1					
ANR	11449	PrimaryExpression	0		11317	1					
ANR	11450	CompoundStatement		26:2:592:614	11317	1					
ANR	11451	IdentifierDeclStatement	unsigned __int64 ftime ;	728:2:20008:20030	11317	0	True				
ANR	11452	IdentifierDecl	ftime		11317	0					
ANR	11453	IdentifierDeclType	unsigned __int64		11317	0					
ANR	11454	Identifier	ftime		11317	1					
ANR	11455	IfStatement	"if ( CompareFileTime ( & fdata . ftLastWriteTime , & utc_base_ft ) < 0 )"		11317	1					
ANR	11456	Condition	"CompareFileTime ( & fdata . ftLastWriteTime , & utc_base_ft ) < 0"	730:6:20039:20096	11317	0	True				
ANR	11457	RelationalExpression	"CompareFileTime ( & fdata . ftLastWriteTime , & utc_base_ft ) < 0"		11317	0		<			
ANR	11458	CallExpression	"CompareFileTime ( & fdata . ftLastWriteTime , & utc_base_ft )"		11317	0					
ANR	11459	Callee	CompareFileTime		11317	0					
ANR	11460	Identifier	CompareFileTime		11317	0					
ANR	11461	ArgumentList	& fdata . ftLastWriteTime		11317	1					
ANR	11462	Argument	& fdata . ftLastWriteTime		11317	0					
ANR	11463	UnaryOperationExpression	& fdata . ftLastWriteTime		11317	0					
ANR	11464	UnaryOperator	&		11317	0					
ANR	11465	MemberAccess	fdata . ftLastWriteTime		11317	1					
ANR	11466	Identifier	fdata		11317	0					
ANR	11467	Identifier	ftLastWriteTime		11317	1					
ANR	11468	Argument	& utc_base_ft		11317	1					
ANR	11469	UnaryOperationExpression	& utc_base_ft		11317	0					
ANR	11470	UnaryOperator	&		11317	0					
ANR	11471	Identifier	utc_base_ft		11317	1					
ANR	11472	PrimaryExpression	0		11317	1					
ANR	11473	CompoundStatement		28:66:683:683	11317	1					
ANR	11474	ReturnStatement	return 0 ;	731:3:20104:20112	11317	0	True				
ANR	11475	PrimaryExpression	0		11317	0					
ANR	11476	ExpressionStatement	ftime = ( ( ( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime ) << 32 ) + fdata . ftLastWriteTime . dwLowDateTime - utc_base	734:2:20121:20242	11317	2	True				
ANR	11477	AssignmentExpression	ftime = ( ( ( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime ) << 32 ) + fdata . ftLastWriteTime . dwLowDateTime - utc_base		11317	0		=			
ANR	11478	Identifier	ftime		11317	0					
ANR	11479	AdditiveExpression	( ( ( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime ) << 32 ) + fdata . ftLastWriteTime . dwLowDateTime - utc_base		11317	1		+			
ANR	11480	ShiftExpression	( ( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime ) << 32		11317	0		<<			
ANR	11481	CastExpression	( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime		11317	0					
ANR	11482	CastTarget	unsigned __int64		11317	0					
ANR	11483	MemberAccess	fdata . ftLastWriteTime . dwHighDateTime		11317	1					
ANR	11484	MemberAccess	fdata . ftLastWriteTime		11317	0					
ANR	11485	Identifier	fdata		11317	0					
ANR	11486	Identifier	ftLastWriteTime		11317	1					
ANR	11487	Identifier	dwHighDateTime		11317	1					
ANR	11488	PrimaryExpression	32		11317	1					
ANR	11489	AdditiveExpression	fdata . ftLastWriteTime . dwLowDateTime - utc_base		11317	1		-			
ANR	11490	MemberAccess	fdata . ftLastWriteTime . dwLowDateTime		11317	0					
ANR	11491	MemberAccess	fdata . ftLastWriteTime		11317	0					
ANR	11492	Identifier	fdata		11317	0					
ANR	11493	Identifier	ftLastWriteTime		11317	1					
ANR	11494	Identifier	dwLowDateTime		11317	1					
ANR	11495	Identifier	utc_base		11317	1					
ANR	11496	ExpressionStatement	ftime /= 10000000L	735:2:20246:20264	11317	3	True				
ANR	11497	AssignmentExpression	ftime /= 10000000L		11317	0		/=			
ANR	11498	Identifier	ftime		11317	0					
ANR	11499	PrimaryExpression	10000000L		11317	1					
ANR	11500	IfStatement	if ( size )		11317	4					
ANR	11501	Condition	size	737:6:20273:20276	11317	0	True				
ANR	11502	Identifier	size		11317	0					
ANR	11503	CompoundStatement		35:12:863:863	11317	1					
ANR	11504	ExpressionStatement	* size = ( size_t ) ( ( ( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32 ) + ( unsigned __int64 ) fdata . nFileSizeLow )	738:3:20284:20388	11317	0	True				
ANR	11505	AssignmentExpression	* size = ( size_t ) ( ( ( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32 ) + ( unsigned __int64 ) fdata . nFileSizeLow )		11317	0		=			
ANR	11506	UnaryOperationExpression	* size		11317	0					
ANR	11507	UnaryOperator	*		11317	0					
ANR	11508	Identifier	size		11317	1					
ANR	11509	CastExpression	( size_t ) ( ( ( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32 ) + ( unsigned __int64 ) fdata . nFileSizeLow )		11317	1					
ANR	11510	CastTarget	size_t		11317	0					
ANR	11511	AdditiveExpression	( ( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32 ) + ( unsigned __int64 ) fdata . nFileSizeLow		11317	1		+			
ANR	11512	ShiftExpression	( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32		11317	0		<<			
ANR	11513	CastExpression	( unsigned __int64 ) fdata . nFileSizeHigh		11317	0					
ANR	11514	CastTarget	unsigned __int64		11317	0					
ANR	11515	MemberAccess	fdata . nFileSizeHigh		11317	1					
ANR	11516	Identifier	fdata		11317	0					
ANR	11517	Identifier	nFileSizeHigh		11317	1					
ANR	11518	PrimaryExpression	32		11317	1					
ANR	11519	CastExpression	( unsigned __int64 ) fdata . nFileSizeLow		11317	1					
ANR	11520	CastTarget	unsigned __int64		11317	0					
ANR	11521	MemberAccess	fdata . nFileSizeLow		11317	1					
ANR	11522	Identifier	fdata		11317	0					
ANR	11523	Identifier	nFileSizeLow		11317	1					
ANR	11524	ReturnStatement	return ( accel_time_t ) ftime ;	740:2:20396:20422	11317	5	True				
ANR	11525	CastExpression	( accel_time_t ) ftime		11317	0					
ANR	11526	CastTarget	accel_time_t		11317	0					
ANR	11527	Identifier	ftime		11317	1					
ANR	11528	ReturnStatement	return 0 ;	742:1:20428:20436	11317	8	True				
ANR	11529	PrimaryExpression	0		11317	0					
ANR	11530	ReturnType	static accel_time_t		11317	1					
ANR	11531	Identifier	zend_get_file_handle_timestamp_win		11317	2					
ANR	11532	ParameterList	"zend_file_handle * file_handle , size_t * size"		11317	3					
ANR	11533	Parameter	zend_file_handle * file_handle	702:55:19370:19398	11317	0	True				
ANR	11534	ParameterType	zend_file_handle *		11317	0					
ANR	11535	Identifier	file_handle		11317	1					
ANR	11536	Parameter	size_t * size	702:86:19401:19412	11317	1	True				
ANR	11537	ParameterType	size_t *		11317	0					
ANR	11538	Identifier	size		11317	1					
ANR	11539	CFGEntryNode	ENTRY		11317		True				
ANR	11540	CFGExitNode	EXIT		11317		True				
ANR	11541	Symbol	& utc_base_ft		11317						
ANR	11542	Symbol	& fdata		11317						
ANR	11543	Symbol	GetFileAttributesEx		11317						
ANR	11544	Symbol	st . wHour		11317						
ANR	11545	Symbol	st . wMonth		11317						
ANR	11546	Symbol	& st		11317						
ANR	11547	Symbol	fdata . nFileSizeLow		11317						
ANR	11548	Symbol	* * file_handle		11317						
ANR	11549	Symbol	st . wMinute		11317						
ANR	11550	Symbol	* file_handle		11317						
ANR	11551	Symbol	fdata . ftLastWriteTime . dwLowDateTime		11317						
ANR	11552	Symbol	st . wMilliseconds		11317						
ANR	11553	Symbol	* size		11317						
ANR	11554	Symbol	& fdata . ftLastWriteTime		11317						
ANR	11555	Symbol	utc_base		11317						
ANR	11556	Symbol	fdata . ftLastWriteTime . dwHighDateTime		11317						
ANR	11557	Symbol	GetFileExInfoStandard		11317						
ANR	11558	Symbol	fdata		11317						
ANR	11559	Symbol	ftime		11317						
ANR	11560	Symbol	fdata . nFileSizeHigh		11317						
ANR	11561	Symbol	utc_base_ft		11317						
ANR	11562	Symbol	st		11317						
ANR	11563	Symbol	file_handle -> opened_path -> val		11317						
ANR	11564	Symbol	st . wSecond		11317						
ANR	11565	Symbol	* file_handle -> opened_path		11317						
ANR	11566	Symbol	file_handle		11317						
ANR	11567	Symbol	file_handle -> opened_path		11317						
ANR	11568	Symbol	st . wDay		11317						
ANR	11569	Symbol	utc_base_ft . dwLowDateTime		11317						
ANR	11570	Symbol	utc_base_ft . dwHighDateTime		11317						
ANR	11571	Symbol	size		11317						
ANR	11572	Symbol	st . wYear		11317						
ANR	11573	Symbol	CompareFileTime		11317						
ANR	11574	Symbol	fdata . ftLastWriteTime		11317						
ANR	11575	Function	zend_get_file_handle_timestamp	746:0:20448:22444							
ANR	11576	FunctionDef	"zend_get_file_handle_timestamp (zend_file_handle * file_handle , size_t * size)"		11575	0					
ANR	11577	CompoundStatement		747:0:20537:22444	11575	0					
ANR	11578	IdentifierDeclStatement	zend_stat_t statbuf ;	748:1:20540:20559	11575	0	True				
ANR	11579	IdentifierDecl	statbuf		11575	0					
ANR	11580	IdentifierDeclType	zend_stat_t		11575	0					
ANR	11581	Identifier	statbuf		11575	1					
ANR	11582	IdentifierDeclStatement	accel_time_t res ;	750:1:20580:20596	11575	1	True				
ANR	11583	IdentifierDecl	res		11575	0					
ANR	11584	IdentifierDeclType	accel_time_t		11575	0					
ANR	11585	Identifier	res		11575	1					
ANR	11586	IfStatement	if ( sapi_module . get_stat && ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated )		11575	2					
ANR	11587	Condition	sapi_module . get_stat && ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated	753:5:20611:20730	11575	0	True				
ANR	11588	AndExpression	sapi_module . get_stat && ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated		11575	0		&&			
ANR	11589	MemberAccess	sapi_module . get_stat		11575	0					
ANR	11590	Identifier	sapi_module		11575	0					
ANR	11591	Identifier	get_stat		11575	1					
ANR	11592	AndExpression	! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated		11575	1		&&			
ANR	11593	UnaryOperationExpression	! EG ( current_execute_data )		11575	0					
ANR	11594	UnaryOperator	!		11575	0					
ANR	11595	CallExpression	EG ( current_execute_data )		11575	1					
ANR	11596	Callee	EG		11575	0					
ANR	11597	Identifier	EG		11575	0					
ANR	11598	ArgumentList	current_execute_data		11575	1					
ANR	11599	Argument	current_execute_data		11575	0					
ANR	11600	Identifier	current_execute_data		11575	0					
ANR	11601	EqualityExpression	file_handle -> filename == SG ( request_info ) . path_translated		11575	1		==			
ANR	11602	PtrMemberAccess	file_handle -> filename		11575	0					
ANR	11603	Identifier	file_handle		11575	0					
ANR	11604	Identifier	filename		11575	1					
ANR	11605	MemberAccess	SG ( request_info ) . path_translated		11575	1					
ANR	11606	CallExpression	SG ( request_info )		11575	0					
ANR	11607	Callee	SG		11575	0					
ANR	11608	Identifier	SG		11575	0					
ANR	11609	ArgumentList	request_info		11575	1					
ANR	11610	Argument	request_info		11575	0					
ANR	11611	Identifier	request_info		11575	0					
ANR	11612	Identifier	path_translated		11575	1					
ANR	11613	CompoundStatement		11:2:200:244	11575	1					
ANR	11614	IdentifierDeclStatement	zend_stat_t * tmpbuf = sapi_module . get_stat ( ) ;	757:2:20738:20782	11575	0	True				
ANR	11615	IdentifierDecl	* tmpbuf = sapi_module . get_stat ( )		11575	0					
ANR	11616	IdentifierDeclType	zend_stat_t *		11575	0					
ANR	11617	Identifier	tmpbuf		11575	1					
ANR	11618	AssignmentExpression	* tmpbuf = sapi_module . get_stat ( )		11575	2		=			
ANR	11619	Identifier	tmpbuf		11575	0					
ANR	11620	CallExpression	sapi_module . get_stat ( )		11575	1					
ANR	11621	Callee	sapi_module . get_stat		11575	0					
ANR	11622	MemberAccess	sapi_module . get_stat		11575	0					
ANR	11623	Identifier	sapi_module		11575	0					
ANR	11624	Identifier	get_stat		11575	1					
ANR	11625	ArgumentList			11575	1					
ANR	11626	IfStatement	if ( tmpbuf )		11575	1					
ANR	11627	Condition	tmpbuf	759:6:20791:20796	11575	0	True				
ANR	11628	Identifier	tmpbuf		11575	0					
ANR	11629	CompoundStatement		13:14:261:261	11575	1					
ANR	11630	IfStatement	if ( size )		11575	0					
ANR	11631	Condition	size	760:7:20808:20811	11575	0	True				
ANR	11632	Identifier	size		11575	0					
ANR	11633	CompoundStatement		14:13:276:276	11575	1					
ANR	11634	ExpressionStatement	* size = tmpbuf -> st_size	761:4:20820:20843	11575	0	True				
ANR	11635	AssignmentExpression	* size = tmpbuf -> st_size		11575	0		=			
ANR	11636	UnaryOperationExpression	* size		11575	0					
ANR	11637	UnaryOperator	*		11575	0					
ANR	11638	Identifier	size		11575	1					
ANR	11639	PtrMemberAccess	tmpbuf -> st_size		11575	1					
ANR	11640	Identifier	tmpbuf		11575	0					
ANR	11641	Identifier	st_size		11575	1					
ANR	11642	ReturnStatement	return tmpbuf -> st_mtime ;	763:3:20853:20876	11575	1	True				
ANR	11643	PtrMemberAccess	tmpbuf -> st_mtime		11575	0					
ANR	11644	Identifier	tmpbuf		11575	0					
ANR	11645	Identifier	st_mtime		11575	1					
ANR	11646	ExpressionStatement	"res = zend_get_file_handle_timestamp_win ( file_handle , size )"	768:1:20905:20964	11575	3	True				
ANR	11647	AssignmentExpression	"res = zend_get_file_handle_timestamp_win ( file_handle , size )"		11575	0		=			
ANR	11648	Identifier	res		11575	0					
ANR	11649	CallExpression	"zend_get_file_handle_timestamp_win ( file_handle , size )"		11575	1					
ANR	11650	Callee	zend_get_file_handle_timestamp_win		11575	0					
ANR	11651	Identifier	zend_get_file_handle_timestamp_win		11575	0					
ANR	11652	ArgumentList	file_handle		11575	1					
ANR	11653	Argument	file_handle		11575	0					
ANR	11654	Identifier	file_handle		11575	0					
ANR	11655	Argument	size		11575	1					
ANR	11656	Identifier	size		11575	0					
ANR	11657	IfStatement	if ( res )		11575	4					
ANR	11658	Condition	res	769:5:20971:20973	11575	0	True				
ANR	11659	Identifier	res		11575	0					
ANR	11660	CompoundStatement		23:10:438:438	11575	1					
ANR	11661	ReturnStatement	return res ;	770:2:20980:20990	11575	0	True				
ANR	11662	Identifier	res		11575	0					
ANR	11663	SwitchStatement	switch ( file_handle -> type )		11575	5					
ANR	11664	Condition	file_handle -> type	774:9:21012:21028	11575	0	True				
ANR	11665	PtrMemberAccess	file_handle -> type		11575	0					
ANR	11666	Identifier	file_handle		11575	0					
ANR	11667	Identifier	type		11575	1					
ANR	11668	CompoundStatement		28:28:493:493	11575	1					
ANR	11669	Label	case ZEND_HANDLE_FD :	775:2:21035:21054	11575	0	True				
ANR	11670	Identifier	ZEND_HANDLE_FD		11575	0					
ANR	11671	IfStatement	"if ( zend_fstat ( file_handle -> handle . fd , & statbuf ) == - 1 )"		11575	1					
ANR	11672	Condition	"zend_fstat ( file_handle -> handle . fd , & statbuf ) == - 1"	776:7:21063:21112	11575	0	True				
ANR	11673	EqualityExpression	"zend_fstat ( file_handle -> handle . fd , & statbuf ) == - 1"		11575	0		==			
ANR	11674	CallExpression	"zend_fstat ( file_handle -> handle . fd , & statbuf )"		11575	0					
ANR	11675	Callee	zend_fstat		11575	0					
ANR	11676	Identifier	zend_fstat		11575	0					
ANR	11677	ArgumentList	file_handle -> handle . fd		11575	1					
ANR	11678	Argument	file_handle -> handle . fd		11575	0					
ANR	11679	MemberAccess	file_handle -> handle . fd		11575	0					
ANR	11680	PtrMemberAccess	file_handle -> handle		11575	0					
ANR	11681	Identifier	file_handle		11575	0					
ANR	11682	Identifier	handle		11575	1					
ANR	11683	Identifier	fd		11575	1					
ANR	11684	Argument	& statbuf		11575	1					
ANR	11685	UnaryOperationExpression	& statbuf		11575	0					
ANR	11686	UnaryOperator	&		11575	0					
ANR	11687	Identifier	statbuf		11575	1					
ANR	11688	UnaryOperationExpression	- 1		11575	1					
ANR	11689	UnaryOperator	-		11575	0					
ANR	11690	PrimaryExpression	1		11575	1					
ANR	11691	CompoundStatement		30:59:577:577	11575	1					
ANR	11692	ReturnStatement	return 0 ;	777:4:21121:21129	11575	0	True				
ANR	11693	PrimaryExpression	0		11575	0					
ANR	11694	BreakStatement	break ;	779:3:21139:21144	11575	2	True				
ANR	11695	Label	case ZEND_HANDLE_FP :	780:2:21148:21167	11575	3	True				
ANR	11696	Identifier	ZEND_HANDLE_FP		11575	0					
ANR	11697	IfStatement	"if ( zend_fstat ( fileno ( file_handle -> handle . fp ) , & statbuf ) == - 1 )"		11575	4					
ANR	11698	Condition	"zend_fstat ( fileno ( file_handle -> handle . fp ) , & statbuf ) == - 1"	781:7:21176:21233	11575	0	True				
ANR	11699	EqualityExpression	"zend_fstat ( fileno ( file_handle -> handle . fp ) , & statbuf ) == - 1"		11575	0		==			
ANR	11700	CallExpression	"zend_fstat ( fileno ( file_handle -> handle . fp ) , & statbuf )"		11575	0					
ANR	11701	Callee	zend_fstat		11575	0					
ANR	11702	Identifier	zend_fstat		11575	0					
ANR	11703	ArgumentList	fileno ( file_handle -> handle . fp )		11575	1					
ANR	11704	Argument	fileno ( file_handle -> handle . fp )		11575	0					
ANR	11705	CallExpression	fileno ( file_handle -> handle . fp )		11575	0					
ANR	11706	Callee	fileno		11575	0					
ANR	11707	Identifier	fileno		11575	0					
ANR	11708	ArgumentList	file_handle -> handle . fp		11575	1					
ANR	11709	Argument	file_handle -> handle . fp		11575	0					
ANR	11710	MemberAccess	file_handle -> handle . fp		11575	0					
ANR	11711	PtrMemberAccess	file_handle -> handle		11575	0					
ANR	11712	Identifier	file_handle		11575	0					
ANR	11713	Identifier	handle		11575	1					
ANR	11714	Identifier	fp		11575	1					
ANR	11715	Argument	& statbuf		11575	1					
ANR	11716	UnaryOperationExpression	& statbuf		11575	0					
ANR	11717	UnaryOperator	&		11575	0					
ANR	11718	Identifier	statbuf		11575	1					
ANR	11719	UnaryOperationExpression	- 1		11575	1					
ANR	11720	UnaryOperator	-		11575	0					
ANR	11721	PrimaryExpression	1		11575	1					
ANR	11722	CompoundStatement		35:67:698:698	11575	1					
ANR	11723	IfStatement	"if ( zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS )"		11575	0					
ANR	11724	Condition	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS"	782:8:21246:21314	11575	0	True				
ANR	11725	EqualityExpression	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS"		11575	0		!=			
ANR	11726	CallExpression	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf )"		11575	0					
ANR	11727	Callee	zend_get_stream_timestamp		11575	0					
ANR	11728	Identifier	zend_get_stream_timestamp		11575	0					
ANR	11729	ArgumentList	file_handle -> filename		11575	1					
ANR	11730	Argument	file_handle -> filename		11575	0					
ANR	11731	PtrMemberAccess	file_handle -> filename		11575	0					
ANR	11732	Identifier	file_handle		11575	0					
ANR	11733	Identifier	filename		11575	1					
ANR	11734	Argument	& statbuf		11575	1					
ANR	11735	UnaryOperationExpression	& statbuf		11575	0					
ANR	11736	UnaryOperator	&		11575	0					
ANR	11737	Identifier	statbuf		11575	1					
ANR	11738	Identifier	SUCCESS		11575	1					
ANR	11739	CompoundStatement		36:79:779:779	11575	1					
ANR	11740	ReturnStatement	return 0 ;	783:5:21324:21332	11575	0	True				
ANR	11741	PrimaryExpression	0		11575	0					
ANR	11742	BreakStatement	break ;	786:3:21348:21353	11575	5	True				
ANR	11743	Label	case ZEND_HANDLE_FILENAME :	787:2:21357:21382	11575	6	True				
ANR	11744	Identifier	ZEND_HANDLE_FILENAME		11575	0					
ANR	11745	Label	case ZEND_HANDLE_MAPPED :	788:2:21386:21409	11575	7	True				
ANR	11746	Identifier	ZEND_HANDLE_MAPPED		11575	0					
ANR	11747	IfStatement	if ( file_handle -> opened_path )		11575	8					
ANR	11748	Condition	file_handle -> opened_path	789:7:21418:21441	11575	0	True				
ANR	11749	PtrMemberAccess	file_handle -> opened_path		11575	0					
ANR	11750	Identifier	file_handle		11575	0					
ANR	11751	Identifier	opened_path		11575	1					
ANR	11752	CompoundStatement		44:4:912:964	11575	1					
ANR	11753	IdentifierDeclStatement	char * file_path = ZSTR_VAL ( file_handle -> opened_path ) ;	790:4:21450:21502	11575	0	True				
ANR	11754	IdentifierDecl	* file_path = ZSTR_VAL ( file_handle -> opened_path )		11575	0					
ANR	11755	IdentifierDeclType	char *		11575	0					
ANR	11756	Identifier	file_path		11575	1					
ANR	11757	AssignmentExpression	* file_path = ZSTR_VAL ( file_handle -> opened_path )		11575	2		=			
ANR	11758	Identifier	file_path		11575	0					
ANR	11759	CallExpression	ZSTR_VAL ( file_handle -> opened_path )		11575	1					
ANR	11760	Callee	ZSTR_VAL		11575	0					
ANR	11761	Identifier	ZSTR_VAL		11575	0					
ANR	11762	ArgumentList	file_handle -> opened_path		11575	1					
ANR	11763	Argument	file_handle -> opened_path		11575	0					
ANR	11764	PtrMemberAccess	file_handle -> opened_path		11575	0					
ANR	11765	Identifier	file_handle		11575	0					
ANR	11766	Identifier	opened_path		11575	1					
ANR	11767	IfStatement	if ( is_stream_path ( file_path ) )		11575	1					
ANR	11768	Condition	is_stream_path ( file_path )	792:8:21513:21537	11575	0	True				
ANR	11769	CallExpression	is_stream_path ( file_path )		11575	0					
ANR	11770	Callee	is_stream_path		11575	0					
ANR	11771	Identifier	is_stream_path		11575	0					
ANR	11772	ArgumentList	file_path		11575	1					
ANR	11773	Argument	file_path		11575	0					
ANR	11774	Identifier	file_path		11575	0					
ANR	11775	CompoundStatement		46:35:1002:1002	11575	1					
ANR	11776	IfStatement	"if ( zend_get_stream_timestamp ( file_path , & statbuf ) == SUCCESS )"		11575	0					
ANR	11777	Condition	"zend_get_stream_timestamp ( file_path , & statbuf ) == SUCCESS"	793:9:21551:21607	11575	0	True				
ANR	11778	EqualityExpression	"zend_get_stream_timestamp ( file_path , & statbuf ) == SUCCESS"		11575	0		==			
ANR	11779	CallExpression	"zend_get_stream_timestamp ( file_path , & statbuf )"		11575	0					
ANR	11780	Callee	zend_get_stream_timestamp		11575	0					
ANR	11781	Identifier	zend_get_stream_timestamp		11575	0					
ANR	11782	ArgumentList	file_path		11575	1					
ANR	11783	Argument	file_path		11575	0					
ANR	11784	Identifier	file_path		11575	0					
ANR	11785	Argument	& statbuf		11575	1					
ANR	11786	UnaryOperationExpression	& statbuf		11575	0					
ANR	11787	UnaryOperator	&		11575	0					
ANR	11788	Identifier	statbuf		11575	1					
ANR	11789	Identifier	SUCCESS		11575	1					
ANR	11790	CompoundStatement		47:68:1072:1072	11575	1					
ANR	11791	BreakStatement	break ;	794:6:21618:21623	11575	0	True				
ANR	11792	IfStatement	"if ( VCWD_STAT ( file_path , & statbuf ) != - 1 )"		11575	2					
ANR	11793	Condition	"VCWD_STAT ( file_path , & statbuf ) != - 1"	797:8:21646:21681	11575	0	True				
ANR	11794	EqualityExpression	"VCWD_STAT ( file_path , & statbuf ) != - 1"		11575	0		!=			
ANR	11795	CallExpression	"VCWD_STAT ( file_path , & statbuf )"		11575	0					
ANR	11796	Callee	VCWD_STAT		11575	0					
ANR	11797	Identifier	VCWD_STAT		11575	0					
ANR	11798	ArgumentList	file_path		11575	1					
ANR	11799	Argument	file_path		11575	0					
ANR	11800	Identifier	file_path		11575	0					
ANR	11801	Argument	& statbuf		11575	1					
ANR	11802	UnaryOperationExpression	& statbuf		11575	0					
ANR	11803	UnaryOperator	&		11575	0					
ANR	11804	Identifier	statbuf		11575	1					
ANR	11805	UnaryOperationExpression	- 1		11575	1					
ANR	11806	UnaryOperator	-		11575	0					
ANR	11807	PrimaryExpression	1		11575	1					
ANR	11808	CompoundStatement		51:46:1146:1146	11575	1					
ANR	11809	BreakStatement	break ;	798:5:21691:21696	11575	0	True				
ANR	11810	IfStatement	"if ( zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS )"		11575	9					
ANR	11811	Condition	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS"	802:7:21717:21785	11575	0	True				
ANR	11812	EqualityExpression	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS"		11575	0		!=			
ANR	11813	CallExpression	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf )"		11575	0					
ANR	11814	Callee	zend_get_stream_timestamp		11575	0					
ANR	11815	Identifier	zend_get_stream_timestamp		11575	0					
ANR	11816	ArgumentList	file_handle -> filename		11575	1					
ANR	11817	Argument	file_handle -> filename		11575	0					
ANR	11818	PtrMemberAccess	file_handle -> filename		11575	0					
ANR	11819	Identifier	file_handle		11575	0					
ANR	11820	Identifier	filename		11575	1					
ANR	11821	Argument	& statbuf		11575	1					
ANR	11822	UnaryOperationExpression	& statbuf		11575	0					
ANR	11823	UnaryOperator	&		11575	0					
ANR	11824	Identifier	statbuf		11575	1					
ANR	11825	Identifier	SUCCESS		11575	1					
ANR	11826	CompoundStatement		56:78:1250:1250	11575	1					
ANR	11827	ReturnStatement	return 0 ;	803:4:21794:21802	11575	0	True				
ANR	11828	PrimaryExpression	0		11575	0					
ANR	11829	BreakStatement	break ;	805:3:21812:21817	11575	10	True				
ANR	11830	Label	case ZEND_HANDLE_STREAM :	806:2:21821:21844	11575	11	True				
ANR	11831	Identifier	ZEND_HANDLE_STREAM		11575	0					
ANR	11832	CompoundStatement		64:4:1418:1429	11575	12					
ANR	11833	IdentifierDeclStatement	php_stream * stream = ( php_stream * ) file_handle -> handle . stream . handle ;	808:4:21855:21923	11575	0	True				
ANR	11834	IdentifierDecl	* stream = ( php_stream * ) file_handle -> handle . stream . handle		11575	0					
ANR	11835	IdentifierDeclType	php_stream *		11575	0					
ANR	11836	Identifier	stream		11575	1					
ANR	11837	AssignmentExpression	* stream = ( php_stream * ) file_handle -> handle . stream . handle		11575	2		=			
ANR	11838	Identifier	stream		11575	0					
ANR	11839	CastExpression	( php_stream * ) file_handle -> handle . stream . handle		11575	1					
ANR	11840	CastTarget	php_stream *		11575	0					
ANR	11841	MemberAccess	file_handle -> handle . stream . handle		11575	1					
ANR	11842	MemberAccess	file_handle -> handle . stream		11575	0					
ANR	11843	PtrMemberAccess	file_handle -> handle		11575	0					
ANR	11844	Identifier	file_handle		11575	0					
ANR	11845	Identifier	handle		11575	1					
ANR	11846	Identifier	stream		11575	1					
ANR	11847	Identifier	handle		11575	1					
ANR	11848	IdentifierDeclStatement	php_stream_statbuf sb ;	809:4:21929:21950	11575	1	True				
ANR	11849	IdentifierDecl	sb		11575	0					
ANR	11850	IdentifierDeclType	php_stream_statbuf		11575	0					
ANR	11851	Identifier	sb		11575	1					
ANR	11852	IdentifierDeclStatement	"int ret , er ;"	810:4:21956:21967	11575	2	True				
ANR	11853	IdentifierDecl	ret		11575	0					
ANR	11854	IdentifierDeclType	int		11575	0					
ANR	11855	Identifier	ret		11575	1					
ANR	11856	IdentifierDecl	er		11575	1					
ANR	11857	IdentifierDeclType	int		11575	0					
ANR	11858	Identifier	er		11575	1					
ANR	11859	IfStatement	if ( ! stream || ! stream -> ops || ! stream -> ops -> stat )		11575	3					
ANR	11860	Condition	! stream || ! stream -> ops || ! stream -> ops -> stat	812:8:21978:22038	11575	0	True				
ANR	11861	OrExpression	! stream || ! stream -> ops || ! stream -> ops -> stat		11575	0		||			
ANR	11862	UnaryOperationExpression	! stream		11575	0					
ANR	11863	UnaryOperator	!		11575	0					
ANR	11864	Identifier	stream		11575	1					
ANR	11865	OrExpression	! stream -> ops || ! stream -> ops -> stat		11575	1		||			
ANR	11866	UnaryOperationExpression	! stream -> ops		11575	0					
ANR	11867	UnaryOperator	!		11575	0					
ANR	11868	PtrMemberAccess	stream -> ops		11575	1					
ANR	11869	Identifier	stream		11575	0					
ANR	11870	Identifier	ops		11575	1					
ANR	11871	UnaryOperationExpression	! stream -> ops -> stat		11575	1					
ANR	11872	UnaryOperator	!		11575	0					
ANR	11873	PtrMemberAccess	stream -> ops -> stat		11575	1					
ANR	11874	PtrMemberAccess	stream -> ops		11575	0					
ANR	11875	Identifier	stream		11575	0					
ANR	11876	Identifier	ops		11575	1					
ANR	11877	Identifier	stat		11575	1					
ANR	11878	CompoundStatement		68:28:1503:1503	11575	1					
ANR	11879	ReturnStatement	return 0 ;	815:5:22048:22056	11575	0	True				
ANR	11880	PrimaryExpression	0		11575	0					
ANR	11881	ExpressionStatement	er = EG ( error_reporting )	818:4:22069:22093	11575	4	True				
ANR	11882	AssignmentExpression	er = EG ( error_reporting )		11575	0		=			
ANR	11883	Identifier	er		11575	0					
ANR	11884	CallExpression	EG ( error_reporting )		11575	1					
ANR	11885	Callee	EG		11575	0					
ANR	11886	Identifier	EG		11575	0					
ANR	11887	ArgumentList	error_reporting		11575	1					
ANR	11888	Argument	error_reporting		11575	0					
ANR	11889	Identifier	error_reporting		11575	0					
ANR	11890	ExpressionStatement	EG ( error_reporting ) = 0	819:4:22099:22122	11575	5	True				
ANR	11891	AssignmentExpression	EG ( error_reporting ) = 0		11575	0		=			
ANR	11892	CallExpression	EG ( error_reporting )		11575	0					
ANR	11893	Callee	EG		11575	0					
ANR	11894	Identifier	EG		11575	0					
ANR	11895	ArgumentList	error_reporting		11575	1					
ANR	11896	Argument	error_reporting		11575	0					
ANR	11897	Identifier	error_reporting		11575	0					
ANR	11898	PrimaryExpression	0		11575	1					
ANR	11899	Statement	zend_try	820:4:22128:22135	11575	6	True				
ANR	11900	CompoundStatement		74:13:1599:1599	11575	7					
ANR	11901	ExpressionStatement	"ret = stream -> ops -> stat ( stream , & sb )"	821:5:22144:22180	11575	0	True				
ANR	11902	AssignmentExpression	"ret = stream -> ops -> stat ( stream , & sb )"		11575	0		=			
ANR	11903	Identifier	ret		11575	0					
ANR	11904	CallExpression	"stream -> ops -> stat ( stream , & sb )"		11575	1					
ANR	11905	Callee	stream -> ops -> stat		11575	0					
ANR	11906	PtrMemberAccess	stream -> ops -> stat		11575	0					
ANR	11907	PtrMemberAccess	stream -> ops		11575	0					
ANR	11908	Identifier	stream		11575	0					
ANR	11909	Identifier	ops		11575	1					
ANR	11910	Identifier	stat		11575	1					
ANR	11911	ArgumentList	stream		11575	1					
ANR	11912	Argument	stream		11575	0					
ANR	11913	Identifier	stream		11575	0					
ANR	11914	Argument	& sb		11575	1					
ANR	11915	UnaryOperationExpression	& sb		11575	0					
ANR	11916	UnaryOperator	&		11575	0					
ANR	11917	Identifier	sb		11575	1					
ANR	11918	Statement	zend_catch	822:6:22188:22197	11575	8	True				
ANR	11919	CompoundStatement		76:17:1661:1661	11575	9					
ANR	11920	ExpressionStatement	ret = - 1	823:5:22206:22214	11575	0	True				
ANR	11921	AssignmentExpression	ret = - 1		11575	0		=			
ANR	11922	Identifier	ret		11575	0					
ANR	11923	UnaryOperationExpression	- 1		11575	1					
ANR	11924	UnaryOperator	-		11575	0					
ANR	11925	PrimaryExpression	1		11575	1					
ANR	11926	ExpressionStatement	zend_end_try ( )	824:6:22222:22236	11575	10	True				
ANR	11927	CallExpression	zend_end_try ( )		11575	0					
ANR	11928	Callee	zend_end_try		11575	0					
ANR	11929	Identifier	zend_end_try		11575	0					
ANR	11930	ArgumentList			11575	1					
ANR	11931	ExpressionStatement	EG ( error_reporting ) = er	825:4:22242:22266	11575	11	True				
ANR	11932	AssignmentExpression	EG ( error_reporting ) = er		11575	0		=			
ANR	11933	CallExpression	EG ( error_reporting )		11575	0					
ANR	11934	Callee	EG		11575	0					
ANR	11935	Identifier	EG		11575	0					
ANR	11936	ArgumentList	error_reporting		11575	1					
ANR	11937	Argument	error_reporting		11575	0					
ANR	11938	Identifier	error_reporting		11575	0					
ANR	11939	Identifier	er		11575	1					
ANR	11940	IfStatement	if ( ret != 0 )		11575	12					
ANR	11941	Condition	ret != 0	826:8:22276:22283	11575	0	True				
ANR	11942	EqualityExpression	ret != 0		11575	0		!=			
ANR	11943	Identifier	ret		11575	0					
ANR	11944	PrimaryExpression	0		11575	1					
ANR	11945	CompoundStatement		80:18:1748:1748	11575	1					
ANR	11946	ReturnStatement	return 0 ;	827:5:22293:22301	11575	0	True				
ANR	11947	PrimaryExpression	0		11575	0					
ANR	11948	ExpressionStatement	statbuf = sb . sb	830:4:22314:22329	11575	13	True				
ANR	11949	AssignmentExpression	statbuf = sb . sb		11575	0		=			
ANR	11950	Identifier	statbuf		11575	0					
ANR	11951	MemberAccess	sb . sb		11575	1					
ANR	11952	Identifier	sb		11575	0					
ANR	11953	Identifier	sb		11575	1					
ANR	11954	BreakStatement	break ;	832:3:22339:22344	11575	13	True				
ANR	11955	Label	default :	834:2:22349:22356	11575	14	True				
ANR	11956	Identifier	default		11575	0					
ANR	11957	ReturnStatement	return 0 ;	835:3:22361:22369	11575	15	True				
ANR	11958	PrimaryExpression	0		11575	0					
ANR	11959	IfStatement	if ( size )		11575	6					
ANR	11960	Condition	size	838:5:22380:22383	11575	0	True				
ANR	11961	Identifier	size		11575	0					
ANR	11962	CompoundStatement		92:11:1848:1848	11575	1					
ANR	11963	ExpressionStatement	* size = statbuf . st_size	839:2:22390:22413	11575	0	True				
ANR	11964	AssignmentExpression	* size = statbuf . st_size		11575	0		=			
ANR	11965	UnaryOperationExpression	* size		11575	0					
ANR	11966	UnaryOperator	*		11575	0					
ANR	11967	Identifier	size		11575	1					
ANR	11968	MemberAccess	statbuf . st_size		11575	1					
ANR	11969	Identifier	statbuf		11575	0					
ANR	11970	Identifier	st_size		11575	1					
ANR	11971	ReturnStatement	return statbuf . st_mtime ;	841:1:22419:22442	11575	7	True				
ANR	11972	MemberAccess	statbuf . st_mtime		11575	0					
ANR	11973	Identifier	statbuf		11575	0					
ANR	11974	Identifier	st_mtime		11575	1					
ANR	11975	ReturnType	accel_time_t		11575	1					
ANR	11976	Identifier	zend_get_file_handle_timestamp		11575	2					
ANR	11977	ParameterList	"zend_file_handle * file_handle , size_t * size"		11575	3					
ANR	11978	Parameter	zend_file_handle * file_handle	746:44:20492:20520	11575	0	True				
ANR	11979	ParameterType	zend_file_handle *		11575	0					
ANR	11980	Identifier	file_handle		11575	1					
ANR	11981	Parameter	size_t * size	746:75:20523:20534	11575	1	True				
ANR	11982	ParameterType	size_t *		11575	0					
ANR	11983	Identifier	size		11575	1					
ANR	11984	CFGEntryNode	ENTRY		11575		True				
ANR	11985	CFGExitNode	EXIT		11575		True				
ANR	11986	Symbol	file_path		11575						
ANR	11987	Symbol	file_handle -> handle		11575						
ANR	11988	Symbol	zend_fstat		11575						
ANR	11989	Symbol	current_execute_data		11575						
ANR	11990	Symbol	error_reporting		11575						
ANR	11991	Symbol	file_handle -> handle . fd		11575						
ANR	11992	Symbol	sapi_module . get_stat		11575						
ANR	11993	Symbol	* size		11575						
ANR	11994	Symbol	& sb		11575						
ANR	11995	Symbol	tmpbuf -> st_mtime		11575						
ANR	11996	Symbol	& statbuf		11575						
ANR	11997	Symbol	statbuf . st_size		11575						
ANR	11998	Symbol	stream -> ops -> stat		11575						
ANR	11999	Symbol	file_handle -> handle . fp		11575						
ANR	12000	Symbol	ret		11575						
ANR	12001	Symbol	res		11575						
ANR	12002	Symbol	EG		11575						
ANR	12003	Symbol	SG ( request_info ) . path_translated		11575						
ANR	12004	Symbol	VCWD_STAT		11575						
ANR	12005	Symbol	file_handle		11575						
ANR	12006	Symbol	er		11575						
ANR	12007	Symbol	file_handle -> opened_path		11575						
ANR	12008	Symbol	file_handle -> filename		11575						
ANR	12009	Symbol	zend_get_stream_timestamp		11575						
ANR	12010	Symbol	size		11575						
ANR	12011	Symbol	fileno		11575						
ANR	12012	Symbol	* stream		11575						
ANR	12013	Symbol	* * stream		11575						
ANR	12014	Symbol	statbuf . st_mtime		11575						
ANR	12015	Symbol	file_handle -> handle . stream . handle		11575						
ANR	12016	Symbol	sb . sb		11575						
ANR	12017	Symbol	* file_handle		11575						
ANR	12018	Symbol	sb		11575						
ANR	12019	Symbol	is_stream_path		11575						
ANR	12020	Symbol	file_handle -> type		11575						
ANR	12021	Symbol	* stream -> ops		11575						
ANR	12022	Symbol	SG		11575						
ANR	12023	Symbol	stream		11575						
ANR	12024	Symbol	tmpbuf		11575						
ANR	12025	Symbol	SUCCESS		11575						
ANR	12026	Symbol	stream -> ops		11575						
ANR	12027	Symbol	* tmpbuf		11575						
ANR	12028	Symbol	ZSTR_VAL		11575						
ANR	12029	Symbol	sapi_module		11575						
ANR	12030	Symbol	statbuf		11575						
ANR	12031	Symbol	request_info		11575						
ANR	12032	Symbol	zend_get_file_handle_timestamp_win		11575						
ANR	12033	Symbol	file_handle -> handle . stream		11575						
ANR	12034	Symbol	tmpbuf -> st_size		11575						
ANR	12035	Function	do_validate_timestamps	844:0:22447:24414							
ANR	12036	FunctionDef	"do_validate_timestamps (zend_persistent_script * persistent_script , zend_file_handle * file_handle)"		12035	0					
ANR	12037	CompoundStatement		845:0:22562:24414	12035	0					
ANR	12038	IdentifierDeclStatement	zend_file_handle ps_handle ;	846:1:22565:22591	12035	0	True				
ANR	12039	IdentifierDecl	ps_handle		12035	0					
ANR	12040	IdentifierDeclType	zend_file_handle		12035	0					
ANR	12041	Identifier	ps_handle		12035	1					
ANR	12042	IdentifierDeclStatement	zend_string * full_path_ptr = NULL ;	847:1:22594:22627	12035	1	True				
ANR	12043	IdentifierDecl	* full_path_ptr = NULL		12035	0					
ANR	12044	IdentifierDeclType	zend_string *		12035	0					
ANR	12045	Identifier	full_path_ptr		12035	1					
ANR	12046	AssignmentExpression	* full_path_ptr = NULL		12035	2		=			
ANR	12047	Identifier	NULL		12035	0					
ANR	12048	Identifier	NULL		12035	1					
ANR	12049	IfStatement	if ( file_handle -> opened_path )		12035	2					
ANR	12050	Condition	file_handle -> opened_path	853:5:22816:22839	12035	0	True				
ANR	12051	PtrMemberAccess	file_handle -> opened_path		12035	0					
ANR	12052	Identifier	file_handle		12035	0					
ANR	12053	Identifier	opened_path		12035	1					
ANR	12054	CompoundStatement		9:31:279:279	12035	1					
ANR	12055	IfStatement	"if ( persistent_script -> full_path != file_handle -> opened_path && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0 ) )"		12035	0					
ANR	12056	Condition	"persistent_script -> full_path != file_handle -> opened_path && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0 )"	854:6:22850:23127	12035	0	True				
ANR	12057	AndExpression	"persistent_script -> full_path != file_handle -> opened_path && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0 )"		12035	0		&&			
ANR	12058	EqualityExpression	persistent_script -> full_path != file_handle -> opened_path		12035	0		!=			
ANR	12059	PtrMemberAccess	persistent_script -> full_path		12035	0					
ANR	12060	Identifier	persistent_script		12035	0					
ANR	12061	Identifier	full_path		12035	1					
ANR	12062	PtrMemberAccess	file_handle -> opened_path		12035	1					
ANR	12063	Identifier	file_handle		12035	0					
ANR	12064	Identifier	opened_path		12035	1					
ANR	12065	OrExpression	"ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0"		12035	1		||			
ANR	12066	EqualityExpression	ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path )		12035	0		!=			
ANR	12067	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		12035	0					
ANR	12068	Callee	ZSTR_LEN		12035	0					
ANR	12069	Identifier	ZSTR_LEN		12035	0					
ANR	12070	ArgumentList	persistent_script -> full_path		12035	1					
ANR	12071	Argument	persistent_script -> full_path		12035	0					
ANR	12072	PtrMemberAccess	persistent_script -> full_path		12035	0					
ANR	12073	Identifier	persistent_script		12035	0					
ANR	12074	Identifier	full_path		12035	1					
ANR	12075	CallExpression	ZSTR_LEN ( file_handle -> opened_path )		12035	1					
ANR	12076	Callee	ZSTR_LEN		12035	0					
ANR	12077	Identifier	ZSTR_LEN		12035	0					
ANR	12078	ArgumentList	file_handle -> opened_path		12035	1					
ANR	12079	Argument	file_handle -> opened_path		12035	0					
ANR	12080	PtrMemberAccess	file_handle -> opened_path		12035	0					
ANR	12081	Identifier	file_handle		12035	0					
ANR	12082	Identifier	opened_path		12035	1					
ANR	12083	EqualityExpression	"memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0"		12035	1		!=			
ANR	12084	CallExpression	"memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) )"		12035	0					
ANR	12085	Callee	memcmp		12035	0					
ANR	12086	Identifier	memcmp		12035	0					
ANR	12087	ArgumentList	ZSTR_VAL ( persistent_script -> full_path )		12035	1					
ANR	12088	Argument	ZSTR_VAL ( persistent_script -> full_path )		12035	0					
ANR	12089	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		12035	0					
ANR	12090	Callee	ZSTR_VAL		12035	0					
ANR	12091	Identifier	ZSTR_VAL		12035	0					
ANR	12092	ArgumentList	persistent_script -> full_path		12035	1					
ANR	12093	Argument	persistent_script -> full_path		12035	0					
ANR	12094	PtrMemberAccess	persistent_script -> full_path		12035	0					
ANR	12095	Identifier	persistent_script		12035	0					
ANR	12096	Identifier	full_path		12035	1					
ANR	12097	Argument	ZSTR_VAL ( file_handle -> opened_path )		12035	1					
ANR	12098	CallExpression	ZSTR_VAL ( file_handle -> opened_path )		12035	0					
ANR	12099	Callee	ZSTR_VAL		12035	0					
ANR	12100	Identifier	ZSTR_VAL		12035	0					
ANR	12101	ArgumentList	file_handle -> opened_path		12035	1					
ANR	12102	Argument	file_handle -> opened_path		12035	0					
ANR	12103	PtrMemberAccess	file_handle -> opened_path		12035	0					
ANR	12104	Identifier	file_handle		12035	0					
ANR	12105	Identifier	opened_path		12035	1					
ANR	12106	Argument	ZSTR_LEN ( file_handle -> opened_path )		12035	2					
ANR	12107	CallExpression	ZSTR_LEN ( file_handle -> opened_path )		12035	0					
ANR	12108	Callee	ZSTR_LEN		12035	0					
ANR	12109	Identifier	ZSTR_LEN		12035	0					
ANR	12110	ArgumentList	file_handle -> opened_path		12035	1					
ANR	12111	Argument	file_handle -> opened_path		12035	0					
ANR	12112	PtrMemberAccess	file_handle -> opened_path		12035	0					
ANR	12113	Identifier	file_handle		12035	0					
ANR	12114	Identifier	opened_path		12035	1					
ANR	12115	PrimaryExpression	0		12035	1					
ANR	12116	CompoundStatement		12:133:567:567	12035	1					
ANR	12117	ReturnStatement	return FAILURE ;	857:3:23135:23149	12035	0	True				
ANR	12118	Identifier	FAILURE		12035	0					
ANR	12119	ElseStatement	else		12035	0					
ANR	12120	CompoundStatement		15:8:600:600	12035	0					
ANR	12121	ExpressionStatement	"full_path_ptr = accelerator_orig_zend_resolve_path ( file_handle -> filename , strlen ( file_handle -> filename ) )"	860:2:23167:23271	12035	0	True				
ANR	12122	AssignmentExpression	"full_path_ptr = accelerator_orig_zend_resolve_path ( file_handle -> filename , strlen ( file_handle -> filename ) )"		12035	0		=			
ANR	12123	Identifier	full_path_ptr		12035	0					
ANR	12124	CallExpression	"accelerator_orig_zend_resolve_path ( file_handle -> filename , strlen ( file_handle -> filename ) )"		12035	1					
ANR	12125	Callee	accelerator_orig_zend_resolve_path		12035	0					
ANR	12126	Identifier	accelerator_orig_zend_resolve_path		12035	0					
ANR	12127	ArgumentList	file_handle -> filename		12035	1					
ANR	12128	Argument	file_handle -> filename		12035	0					
ANR	12129	PtrMemberAccess	file_handle -> filename		12035	0					
ANR	12130	Identifier	file_handle		12035	0					
ANR	12131	Identifier	filename		12035	1					
ANR	12132	Argument	strlen ( file_handle -> filename )		12035	1					
ANR	12133	CallExpression	strlen ( file_handle -> filename )		12035	0					
ANR	12134	Callee	strlen		12035	0					
ANR	12135	Identifier	strlen		12035	0					
ANR	12136	ArgumentList	file_handle -> filename		12035	1					
ANR	12137	Argument	file_handle -> filename		12035	0					
ANR	12138	PtrMemberAccess	file_handle -> filename		12035	0					
ANR	12139	Identifier	file_handle		12035	0					
ANR	12140	Identifier	filename		12035	1					
ANR	12141	IfStatement	"if ( full_path_ptr && persistent_script -> full_path != full_path_ptr && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0 ) )"		12035	1					
ANR	12142	Condition	"full_path_ptr && persistent_script -> full_path != full_path_ptr && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0 )"	861:6:23279:23535	12035	0	True				
ANR	12143	AndExpression	"full_path_ptr && persistent_script -> full_path != full_path_ptr && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0 )"		12035	0		&&			
ANR	12144	Identifier	full_path_ptr		12035	0					
ANR	12145	AndExpression	"persistent_script -> full_path != full_path_ptr && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0 )"		12035	1		&&			
ANR	12146	EqualityExpression	persistent_script -> full_path != full_path_ptr		12035	0		!=			
ANR	12147	PtrMemberAccess	persistent_script -> full_path		12035	0					
ANR	12148	Identifier	persistent_script		12035	0					
ANR	12149	Identifier	full_path		12035	1					
ANR	12150	Identifier	full_path_ptr		12035	1					
ANR	12151	OrExpression	"ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0"		12035	1		||			
ANR	12152	EqualityExpression	ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr )		12035	0		!=			
ANR	12153	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		12035	0					
ANR	12154	Callee	ZSTR_LEN		12035	0					
ANR	12155	Identifier	ZSTR_LEN		12035	0					
ANR	12156	ArgumentList	persistent_script -> full_path		12035	1					
ANR	12157	Argument	persistent_script -> full_path		12035	0					
ANR	12158	PtrMemberAccess	persistent_script -> full_path		12035	0					
ANR	12159	Identifier	persistent_script		12035	0					
ANR	12160	Identifier	full_path		12035	1					
ANR	12161	CallExpression	ZSTR_LEN ( full_path_ptr )		12035	1					
ANR	12162	Callee	ZSTR_LEN		12035	0					
ANR	12163	Identifier	ZSTR_LEN		12035	0					
ANR	12164	ArgumentList	full_path_ptr		12035	1					
ANR	12165	Argument	full_path_ptr		12035	0					
ANR	12166	Identifier	full_path_ptr		12035	0					
ANR	12167	EqualityExpression	"memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0"		12035	1		!=			
ANR	12168	CallExpression	"memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) )"		12035	0					
ANR	12169	Callee	memcmp		12035	0					
ANR	12170	Identifier	memcmp		12035	0					
ANR	12171	ArgumentList	ZSTR_VAL ( persistent_script -> full_path )		12035	1					
ANR	12172	Argument	ZSTR_VAL ( persistent_script -> full_path )		12035	0					
ANR	12173	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		12035	0					
ANR	12174	Callee	ZSTR_VAL		12035	0					
ANR	12175	Identifier	ZSTR_VAL		12035	0					
ANR	12176	ArgumentList	persistent_script -> full_path		12035	1					
ANR	12177	Argument	persistent_script -> full_path		12035	0					
ANR	12178	PtrMemberAccess	persistent_script -> full_path		12035	0					
ANR	12179	Identifier	persistent_script		12035	0					
ANR	12180	Identifier	full_path		12035	1					
ANR	12181	Argument	ZSTR_VAL ( full_path_ptr )		12035	1					
ANR	12182	CallExpression	ZSTR_VAL ( full_path_ptr )		12035	0					
ANR	12183	Callee	ZSTR_VAL		12035	0					
ANR	12184	Identifier	ZSTR_VAL		12035	0					
ANR	12185	ArgumentList	full_path_ptr		12035	1					
ANR	12186	Argument	full_path_ptr		12035	0					
ANR	12187	Identifier	full_path_ptr		12035	0					
ANR	12188	Argument	ZSTR_LEN ( full_path_ptr )		12035	2					
ANR	12189	CallExpression	ZSTR_LEN ( full_path_ptr )		12035	0					
ANR	12190	Callee	ZSTR_LEN		12035	0					
ANR	12191	Identifier	ZSTR_LEN		12035	0					
ANR	12192	ArgumentList	full_path_ptr		12035	1					
ANR	12193	Argument	full_path_ptr		12035	0					
ANR	12194	Identifier	full_path_ptr		12035	0					
ANR	12195	PrimaryExpression	0		12035	1					
ANR	12196	CompoundStatement		20:111:975:975	12035	1					
ANR	12197	ExpressionStatement	zend_string_release ( full_path_ptr )	865:3:23543:23577	12035	0	True				
ANR	12198	CallExpression	zend_string_release ( full_path_ptr )		12035	0					
ANR	12199	Callee	zend_string_release		12035	0					
ANR	12200	Identifier	zend_string_release		12035	0					
ANR	12201	ArgumentList	full_path_ptr		12035	1					
ANR	12202	Argument	full_path_ptr		12035	0					
ANR	12203	Identifier	full_path_ptr		12035	0					
ANR	12204	ReturnStatement	return FAILURE ;	866:3:23582:23596	12035	1	True				
ANR	12205	Identifier	FAILURE		12035	0					
ANR	12206	ExpressionStatement	file_handle -> opened_path = full_path_ptr	868:2:23604:23644	12035	2	True				
ANR	12207	AssignmentExpression	file_handle -> opened_path = full_path_ptr		12035	0		=			
ANR	12208	PtrMemberAccess	file_handle -> opened_path		12035	0					
ANR	12209	Identifier	file_handle		12035	0					
ANR	12210	Identifier	opened_path		12035	1					
ANR	12211	Identifier	full_path_ptr		12035	1					
ANR	12212	IfStatement	if ( persistent_script -> timestamp == 0 )		12035	3					
ANR	12213	Condition	persistent_script -> timestamp == 0	871:5:23655:23687	12035	0	True				
ANR	12214	EqualityExpression	persistent_script -> timestamp == 0		12035	0		==			
ANR	12215	PtrMemberAccess	persistent_script -> timestamp		12035	0					
ANR	12216	Identifier	persistent_script		12035	0					
ANR	12217	Identifier	timestamp		12035	1					
ANR	12218	PrimaryExpression	0		12035	1					
ANR	12219	CompoundStatement		27:40:1127:1127	12035	1					
ANR	12220	IfStatement	if ( full_path_ptr )		12035	0					
ANR	12221	Condition	full_path_ptr	872:6:23698:23710	12035	0	True				
ANR	12222	Identifier	full_path_ptr		12035	0					
ANR	12223	CompoundStatement		28:21:1150:1150	12035	1					
ANR	12224	ExpressionStatement	zend_string_release ( full_path_ptr )	873:3:23718:23752	12035	0	True				
ANR	12225	CallExpression	zend_string_release ( full_path_ptr )		12035	0					
ANR	12226	Callee	zend_string_release		12035	0					
ANR	12227	Identifier	zend_string_release		12035	0					
ANR	12228	ArgumentList	full_path_ptr		12035	1					
ANR	12229	Argument	full_path_ptr		12035	0					
ANR	12230	Identifier	full_path_ptr		12035	0					
ANR	12231	ExpressionStatement	file_handle -> opened_path = NULL	874:3:23757:23788	12035	1	True				
ANR	12232	AssignmentExpression	file_handle -> opened_path = NULL		12035	0		=			
ANR	12233	PtrMemberAccess	file_handle -> opened_path		12035	0					
ANR	12234	Identifier	file_handle		12035	0					
ANR	12235	Identifier	opened_path		12035	1					
ANR	12236	Identifier	NULL		12035	1					
ANR	12237	ReturnStatement	return FAILURE ;	876:2:23796:23810	12035	1	True				
ANR	12238	Identifier	FAILURE		12035	0					
ANR	12239	IfStatement	"if ( zend_get_file_handle_timestamp ( file_handle , NULL ) == persistent_script -> timestamp )"		12035	4					
ANR	12240	Condition	"zend_get_file_handle_timestamp ( file_handle , NULL ) == persistent_script -> timestamp"	879:5:23821:23901	12035	0	True				
ANR	12241	EqualityExpression	"zend_get_file_handle_timestamp ( file_handle , NULL ) == persistent_script -> timestamp"		12035	0		==			
ANR	12242	CallExpression	"zend_get_file_handle_timestamp ( file_handle , NULL )"		12035	0					
ANR	12243	Callee	zend_get_file_handle_timestamp		12035	0					
ANR	12244	Identifier	zend_get_file_handle_timestamp		12035	0					
ANR	12245	ArgumentList	file_handle		12035	1					
ANR	12246	Argument	file_handle		12035	0					
ANR	12247	Identifier	file_handle		12035	0					
ANR	12248	Argument	NULL		12035	1					
ANR	12249	Identifier	NULL		12035	0					
ANR	12250	PtrMemberAccess	persistent_script -> timestamp		12035	1					
ANR	12251	Identifier	persistent_script		12035	0					
ANR	12252	Identifier	timestamp		12035	1					
ANR	12253	CompoundStatement		35:88:1341:1341	12035	1					
ANR	12254	IfStatement	if ( full_path_ptr )		12035	0					
ANR	12255	Condition	full_path_ptr	880:6:23912:23924	12035	0	True				
ANR	12256	Identifier	full_path_ptr		12035	0					
ANR	12257	CompoundStatement		36:21:1364:1364	12035	1					
ANR	12258	ExpressionStatement	zend_string_release ( full_path_ptr )	881:3:23932:23966	12035	0	True				
ANR	12259	CallExpression	zend_string_release ( full_path_ptr )		12035	0					
ANR	12260	Callee	zend_string_release		12035	0					
ANR	12261	Identifier	zend_string_release		12035	0					
ANR	12262	ArgumentList	full_path_ptr		12035	1					
ANR	12263	Argument	full_path_ptr		12035	0					
ANR	12264	Identifier	full_path_ptr		12035	0					
ANR	12265	ExpressionStatement	file_handle -> opened_path = NULL	882:3:23971:24002	12035	1	True				
ANR	12266	AssignmentExpression	file_handle -> opened_path = NULL		12035	0		=			
ANR	12267	PtrMemberAccess	file_handle -> opened_path		12035	0					
ANR	12268	Identifier	file_handle		12035	0					
ANR	12269	Identifier	opened_path		12035	1					
ANR	12270	Identifier	NULL		12035	1					
ANR	12271	ReturnStatement	return SUCCESS ;	884:2:24010:24024	12035	1	True				
ANR	12272	Identifier	SUCCESS		12035	0					
ANR	12273	IfStatement	if ( full_path_ptr )		12035	5					
ANR	12274	Condition	full_path_ptr	886:5:24034:24046	12035	0	True				
ANR	12275	Identifier	full_path_ptr		12035	0					
ANR	12276	CompoundStatement		42:20:1486:1486	12035	1					
ANR	12277	ExpressionStatement	zend_string_release ( full_path_ptr )	887:2:24053:24087	12035	0	True				
ANR	12278	CallExpression	zend_string_release ( full_path_ptr )		12035	0					
ANR	12279	Callee	zend_string_release		12035	0					
ANR	12280	Identifier	zend_string_release		12035	0					
ANR	12281	ArgumentList	full_path_ptr		12035	1					
ANR	12282	Argument	full_path_ptr		12035	0					
ANR	12283	Identifier	full_path_ptr		12035	0					
ANR	12284	ExpressionStatement	file_handle -> opened_path = NULL	888:2:24091:24122	12035	1	True				
ANR	12285	AssignmentExpression	file_handle -> opened_path = NULL		12035	0		=			
ANR	12286	PtrMemberAccess	file_handle -> opened_path		12035	0					
ANR	12287	Identifier	file_handle		12035	0					
ANR	12288	Identifier	opened_path		12035	1					
ANR	12289	Identifier	NULL		12035	1					
ANR	12290	ExpressionStatement	ps_handle . type = ZEND_HANDLE_FILENAME	891:1:24129:24166	12035	6	True				
ANR	12291	AssignmentExpression	ps_handle . type = ZEND_HANDLE_FILENAME		12035	0		=			
ANR	12292	MemberAccess	ps_handle . type		12035	0					
ANR	12293	Identifier	ps_handle		12035	0					
ANR	12294	Identifier	type		12035	1					
ANR	12295	Identifier	ZEND_HANDLE_FILENAME		12035	1					
ANR	12296	ExpressionStatement	ps_handle . filename = ZSTR_VAL ( persistent_script -> full_path )	892:1:24169:24228	12035	7	True				
ANR	12297	AssignmentExpression	ps_handle . filename = ZSTR_VAL ( persistent_script -> full_path )		12035	0		=			
ANR	12298	MemberAccess	ps_handle . filename		12035	0					
ANR	12299	Identifier	ps_handle		12035	0					
ANR	12300	Identifier	filename		12035	1					
ANR	12301	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		12035	1					
ANR	12302	Callee	ZSTR_VAL		12035	0					
ANR	12303	Identifier	ZSTR_VAL		12035	0					
ANR	12304	ArgumentList	persistent_script -> full_path		12035	1					
ANR	12305	Argument	persistent_script -> full_path		12035	0					
ANR	12306	PtrMemberAccess	persistent_script -> full_path		12035	0					
ANR	12307	Identifier	persistent_script		12035	0					
ANR	12308	Identifier	full_path		12035	1					
ANR	12309	ExpressionStatement	ps_handle . opened_path = persistent_script -> full_path	893:1:24231:24283	12035	8	True				
ANR	12310	AssignmentExpression	ps_handle . opened_path = persistent_script -> full_path		12035	0		=			
ANR	12311	MemberAccess	ps_handle . opened_path		12035	0					
ANR	12312	Identifier	ps_handle		12035	0					
ANR	12313	Identifier	opened_path		12035	1					
ANR	12314	PtrMemberAccess	persistent_script -> full_path		12035	1					
ANR	12315	Identifier	persistent_script		12035	0					
ANR	12316	Identifier	full_path		12035	1					
ANR	12317	IfStatement	"if ( zend_get_file_handle_timestamp ( & ps_handle , NULL ) == persistent_script -> timestamp )"		12035	9					
ANR	12318	Condition	"zend_get_file_handle_timestamp ( & ps_handle , NULL ) == persistent_script -> timestamp"	895:5:24291:24370	12035	0	True				
ANR	12319	EqualityExpression	"zend_get_file_handle_timestamp ( & ps_handle , NULL ) == persistent_script -> timestamp"		12035	0		==			
ANR	12320	CallExpression	"zend_get_file_handle_timestamp ( & ps_handle , NULL )"		12035	0					
ANR	12321	Callee	zend_get_file_handle_timestamp		12035	0					
ANR	12322	Identifier	zend_get_file_handle_timestamp		12035	0					
ANR	12323	ArgumentList	& ps_handle		12035	1					
ANR	12324	Argument	& ps_handle		12035	0					
ANR	12325	UnaryOperationExpression	& ps_handle		12035	0					
ANR	12326	UnaryOperator	&		12035	0					
ANR	12327	Identifier	ps_handle		12035	1					
ANR	12328	Argument	NULL		12035	1					
ANR	12329	Identifier	NULL		12035	0					
ANR	12330	PtrMemberAccess	persistent_script -> timestamp		12035	1					
ANR	12331	Identifier	persistent_script		12035	0					
ANR	12332	Identifier	timestamp		12035	1					
ANR	12333	CompoundStatement		51:87:1810:1810	12035	1					
ANR	12334	ReturnStatement	return SUCCESS ;	896:2:24377:24391	12035	0	True				
ANR	12335	Identifier	SUCCESS		12035	0					
ANR	12336	ReturnStatement	return FAILURE ;	899:1:24398:24412	12035	10	True				
ANR	12337	Identifier	FAILURE		12035	0					
ANR	12338	ReturnType	static inline int		12035	1					
ANR	12339	Identifier	do_validate_timestamps		12035	2					
ANR	12340	ParameterList	"zend_persistent_script * persistent_script , zend_file_handle * file_handle"		12035	3					
ANR	12341	Parameter	zend_persistent_script * persistent_script	844:41:22488:22528	12035	0	True				
ANR	12342	ParameterType	zend_persistent_script *		12035	0					
ANR	12343	Identifier	persistent_script		12035	1					
ANR	12344	Parameter	zend_file_handle * file_handle	844:84:22531:22559	12035	1	True				
ANR	12345	ParameterType	zend_file_handle *		12035	0					
ANR	12346	Identifier	file_handle		12035	1					
ANR	12347	CFGEntryNode	ENTRY		12035		True				
ANR	12348	CFGExitNode	EXIT		12035		True				
ANR	12349	Symbol	& ps_handle		12035						
ANR	12350	Symbol	ps_handle . filename		12035						
ANR	12351	Symbol	zend_get_file_handle_timestamp		12035						
ANR	12352	Symbol	NULL		12035						
ANR	12353	Symbol	SUCCESS		12035						
ANR	12354	Symbol	ps_handle . opened_path		12035						
ANR	12355	Symbol	persistent_script		12035						
ANR	12356	Symbol	accelerator_orig_zend_resolve_path		12035						
ANR	12357	Symbol	ps_handle . type		12035						
ANR	12358	Symbol	file_handle		12035						
ANR	12359	Symbol	* persistent_script		12035						
ANR	12360	Symbol	FAILURE		12035						
ANR	12361	Symbol	ps_handle		12035						
ANR	12362	Symbol	* file_handle		12035						
ANR	12363	Symbol	file_handle -> opened_path		12035						
ANR	12364	Symbol	ZSTR_VAL		12035						
ANR	12365	Symbol	strlen		12035						
ANR	12366	Symbol	persistent_script -> full_path		12035						
ANR	12367	Symbol	memcmp		12035						
ANR	12368	Symbol	file_handle -> filename		12035						
ANR	12369	Symbol	persistent_script -> timestamp		12035						
ANR	12370	Symbol	ZEND_HANDLE_FILENAME		12035						
ANR	12371	Symbol	ZSTR_LEN		12035						
ANR	12372	Symbol	full_path_ptr		12035						
ANR	12373	Function	validate_timestamp_and_record	902:0:24417:24905							
ANR	12374	FunctionDef	"validate_timestamp_and_record (zend_persistent_script * persistent_script , zend_file_handle * file_handle)"		12373	0					
ANR	12375	CompoundStatement		903:0:24525:24905	12373	0					
ANR	12376	IfStatement	if ( ZCG ( accel_directives ) . revalidate_freq && persistent_script -> dynamic_members . revalidate >= ZCG ( request_time ) )		12373	0					
ANR	12377	Condition	ZCG ( accel_directives ) . revalidate_freq && persistent_script -> dynamic_members . revalidate >= ZCG ( request_time )	904:5:24532:24643	12373	0	True				
ANR	12378	AndExpression	ZCG ( accel_directives ) . revalidate_freq && persistent_script -> dynamic_members . revalidate >= ZCG ( request_time )		12373	0		&&			
ANR	12379	MemberAccess	ZCG ( accel_directives ) . revalidate_freq		12373	0					
ANR	12380	CallExpression	ZCG ( accel_directives )		12373	0					
ANR	12381	Callee	ZCG		12373	0					
ANR	12382	Identifier	ZCG		12373	0					
ANR	12383	ArgumentList	accel_directives		12373	1					
ANR	12384	Argument	accel_directives		12373	0					
ANR	12385	Identifier	accel_directives		12373	0					
ANR	12386	Identifier	revalidate_freq		12373	1					
ANR	12387	RelationalExpression	persistent_script -> dynamic_members . revalidate >= ZCG ( request_time )		12373	1		>=			
ANR	12388	MemberAccess	persistent_script -> dynamic_members . revalidate		12373	0					
ANR	12389	PtrMemberAccess	persistent_script -> dynamic_members		12373	0					
ANR	12390	Identifier	persistent_script		12373	0					
ANR	12391	Identifier	dynamic_members		12373	1					
ANR	12392	Identifier	revalidate		12373	1					
ANR	12393	CallExpression	ZCG ( request_time )		12373	1					
ANR	12394	Callee	ZCG		12373	0					
ANR	12395	Identifier	ZCG		12373	0					
ANR	12396	ArgumentList	request_time		12373	1					
ANR	12397	Argument	request_time		12373	0					
ANR	12398	Identifier	request_time		12373	0					
ANR	12399	CompoundStatement		3:73:120:120	12373	1					
ANR	12400	ReturnStatement	return SUCCESS ;	906:2:24650:24664	12373	0	True				
ANR	12401	Identifier	SUCCESS		12373	0					
ANR	12402	ElseStatement	else		12373	0					
ANR	12403	IfStatement	"if ( do_validate_timestamps ( persistent_script , file_handle ) == FAILURE )"		12373	0					
ANR	12404	Condition	"do_validate_timestamps ( persistent_script , file_handle ) == FAILURE"	907:12:24678:24742	12373	0	True				
ANR	12405	EqualityExpression	"do_validate_timestamps ( persistent_script , file_handle ) == FAILURE"		12373	0		==			
ANR	12406	CallExpression	"do_validate_timestamps ( persistent_script , file_handle )"		12373	0					
ANR	12407	Callee	do_validate_timestamps		12373	0					
ANR	12408	Identifier	do_validate_timestamps		12373	0					
ANR	12409	ArgumentList	persistent_script		12373	1					
ANR	12410	Argument	persistent_script		12373	0					
ANR	12411	Identifier	persistent_script		12373	0					
ANR	12412	Argument	file_handle		12373	1					
ANR	12413	Identifier	file_handle		12373	0					
ANR	12414	Identifier	FAILURE		12373	1					
ANR	12415	CompoundStatement		5:79:219:219	12373	1					
ANR	12416	ReturnStatement	return FAILURE ;	908:2:24749:24763	12373	0	True				
ANR	12417	Identifier	FAILURE		12373	0					
ANR	12418	ElseStatement	else		12373	0					
ANR	12419	CompoundStatement		7:8:247:247	12373	0					
ANR	12420	ExpressionStatement	persistent_script -> dynamic_members . revalidate = ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq	910:2:24777:24882	12373	0	True				
ANR	12421	AssignmentExpression	persistent_script -> dynamic_members . revalidate = ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq		12373	0		=			
ANR	12422	MemberAccess	persistent_script -> dynamic_members . revalidate		12373	0					
ANR	12423	PtrMemberAccess	persistent_script -> dynamic_members		12373	0					
ANR	12424	Identifier	persistent_script		12373	0					
ANR	12425	Identifier	dynamic_members		12373	1					
ANR	12426	Identifier	revalidate		12373	1					
ANR	12427	AdditiveExpression	ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq		12373	1		+			
ANR	12428	CallExpression	ZCG ( request_time )		12373	0					
ANR	12429	Callee	ZCG		12373	0					
ANR	12430	Identifier	ZCG		12373	0					
ANR	12431	ArgumentList	request_time		12373	1					
ANR	12432	Argument	request_time		12373	0					
ANR	12433	Identifier	request_time		12373	0					
ANR	12434	MemberAccess	ZCG ( accel_directives ) . revalidate_freq		12373	1					
ANR	12435	CallExpression	ZCG ( accel_directives )		12373	0					
ANR	12436	Callee	ZCG		12373	0					
ANR	12437	Identifier	ZCG		12373	0					
ANR	12438	ArgumentList	accel_directives		12373	1					
ANR	12439	Argument	accel_directives		12373	0					
ANR	12440	Identifier	accel_directives		12373	0					
ANR	12441	Identifier	revalidate_freq		12373	1					
ANR	12442	ReturnStatement	return SUCCESS ;	911:2:24886:24900	12373	1	True				
ANR	12443	Identifier	SUCCESS		12373	0					
ANR	12444	ReturnType	int		12373	1					
ANR	12445	Identifier	validate_timestamp_and_record		12373	2					
ANR	12446	ParameterList	"zend_persistent_script * persistent_script , zend_file_handle * file_handle"		12373	3					
ANR	12447	Parameter	zend_persistent_script * persistent_script	902:34:24451:24491	12373	0	True				
ANR	12448	ParameterType	zend_persistent_script *		12373	0					
ANR	12449	Identifier	persistent_script		12373	1					
ANR	12450	Parameter	zend_file_handle * file_handle	902:77:24494:24522	12373	1	True				
ANR	12451	ParameterType	zend_file_handle *		12373	0					
ANR	12452	Identifier	file_handle		12373	1					
ANR	12453	CFGEntryNode	ENTRY		12373		True				
ANR	12454	CFGExitNode	EXIT		12373		True				
ANR	12455	Symbol	persistent_script -> dynamic_members		12373						
ANR	12456	Symbol	request_time		12373						
ANR	12457	Symbol	SUCCESS		12373						
ANR	12458	Symbol	do_validate_timestamps		12373						
ANR	12459	Symbol	persistent_script		12373						
ANR	12460	Symbol	file_handle		12373						
ANR	12461	Symbol	accel_directives		12373						
ANR	12462	Symbol	* persistent_script		12373						
ANR	12463	Symbol	FAILURE		12373						
ANR	12464	Symbol	persistent_script -> dynamic_members . revalidate		12373						
ANR	12465	Symbol	ZCG		12373						
ANR	12466	Symbol	ZCG ( accel_directives ) . revalidate_freq		12373						
ANR	12467	Function	accel_make_persistent_key	918:0:25105:29736							
ANR	12468	FunctionDef	"accel_make_persistent_key (const char * path , int path_length , int * key_len)"		12467	0					
ANR	12469	CompoundStatement		919:0:25186:29736	12467	0					
ANR	12470	IdentifierDeclStatement	int key_length ;	920:1:25189:25203	12467	0	True				
ANR	12471	IdentifierDecl	key_length		12467	0					
ANR	12472	IdentifierDeclType	int		12467	0					
ANR	12473	Identifier	key_length		12467	1					
ANR	12474	IfStatement	"if ( IS_ABSOLUTE_PATH ( path , path_length ) )"		12467	1					
ANR	12475	Condition	"IS_ABSOLUTE_PATH ( path , path_length )"	923:8:25291:25325	12467	0	True				
ANR	12476	CallExpression	"IS_ABSOLUTE_PATH ( path , path_length )"		12467	0					
ANR	12477	Callee	IS_ABSOLUTE_PATH		12467	0					
ANR	12478	Identifier	IS_ABSOLUTE_PATH		12467	0					
ANR	12479	ArgumentList	path		12467	1					
ANR	12480	Argument	path		12467	0					
ANR	12481	Identifier	path		12467	0					
ANR	12482	Argument	path_length		12467	1					
ANR	12483	Identifier	path_length		12467	0					
ANR	12484	CompoundStatement		5:45:141:141	12467	1					
ANR	12485	ExpressionStatement	ZCG ( key_len ) = 0	925:2:25345:25361	12467	0	True				
ANR	12486	AssignmentExpression	ZCG ( key_len ) = 0		12467	0		=			
ANR	12487	CallExpression	ZCG ( key_len )		12467	0					
ANR	12488	Callee	ZCG		12467	0					
ANR	12489	Identifier	ZCG		12467	0					
ANR	12490	ArgumentList	key_len		12467	1					
ANR	12491	Argument	key_len		12467	0					
ANR	12492	Identifier	key_len		12467	0					
ANR	12493	PrimaryExpression	0		12467	1					
ANR	12494	ElseStatement	else		12467	0					
ANR	12495	IfStatement	if ( UNEXPECTED ( is_stream_path ( path ) ) )		12467	0					
ANR	12496	Condition	UNEXPECTED ( is_stream_path ( path ) )	926:15:25378:25409	12467	0	True				
ANR	12497	CallExpression	UNEXPECTED ( is_stream_path ( path ) )		12467	0					
ANR	12498	Callee	UNEXPECTED		12467	0					
ANR	12499	Identifier	UNEXPECTED		12467	0					
ANR	12500	ArgumentList	is_stream_path ( path )		12467	1					
ANR	12501	Argument	is_stream_path ( path )		12467	0					
ANR	12502	CallExpression	is_stream_path ( path )		12467	0					
ANR	12503	Callee	is_stream_path		12467	0					
ANR	12504	Identifier	is_stream_path		12467	0					
ANR	12505	ArgumentList	path		12467	1					
ANR	12506	Argument	path		12467	0					
ANR	12507	Identifier	path		12467	0					
ANR	12508	CompoundStatement		8:49:225:225	12467	1					
ANR	12509	IfStatement	if ( ! is_cacheable_stream_path ( path ) )		12467	0					
ANR	12510	Condition	! is_cacheable_stream_path ( path )	927:6:25420:25450	12467	0	True				
ANR	12511	UnaryOperationExpression	! is_cacheable_stream_path ( path )		12467	0					
ANR	12512	UnaryOperator	!		12467	0					
ANR	12513	CallExpression	is_cacheable_stream_path ( path )		12467	1					
ANR	12514	Callee	is_cacheable_stream_path		12467	0					
ANR	12515	Identifier	is_cacheable_stream_path		12467	0					
ANR	12516	ArgumentList	path		12467	1					
ANR	12517	Argument	path		12467	0					
ANR	12518	Identifier	path		12467	0					
ANR	12519	CompoundStatement		9:39:266:266	12467	1					
ANR	12520	ReturnStatement	return NULL ;	928:3:25458:25469	12467	0	True				
ANR	12521	Identifier	NULL		12467	0					
ANR	12522	ExpressionStatement	ZCG ( key_len ) = 0	931:2:25490:25506	12467	1	True				
ANR	12523	AssignmentExpression	ZCG ( key_len ) = 0		12467	0		=			
ANR	12524	CallExpression	ZCG ( key_len )		12467	0					
ANR	12525	Callee	ZCG		12467	0					
ANR	12526	Identifier	ZCG		12467	0					
ANR	12527	ArgumentList	key_len		12467	1					
ANR	12528	Argument	key_len		12467	0					
ANR	12529	Identifier	key_len		12467	0					
ANR	12530	PrimaryExpression	0		12467	1					
ANR	12531	ElseStatement	else		12467	0					
ANR	12532	IfStatement	if ( UNEXPECTED ( ! ZCG ( accel_directives ) . use_cwd ) )		12467	0					
ANR	12533	Condition	UNEXPECTED ( ! ZCG ( accel_directives ) . use_cwd )	932:15:25523:25564	12467	0	True				
ANR	12534	CallExpression	UNEXPECTED ( ! ZCG ( accel_directives ) . use_cwd )		12467	0					
ANR	12535	Callee	UNEXPECTED		12467	0					
ANR	12536	Identifier	UNEXPECTED		12467	0					
ANR	12537	ArgumentList	! ZCG ( accel_directives ) . use_cwd		12467	1					
ANR	12538	Argument	! ZCG ( accel_directives ) . use_cwd		12467	0					
ANR	12539	UnaryOperationExpression	! ZCG ( accel_directives ) . use_cwd		12467	0					
ANR	12540	UnaryOperator	!		12467	0					
ANR	12541	MemberAccess	ZCG ( accel_directives ) . use_cwd		12467	1					
ANR	12542	CallExpression	ZCG ( accel_directives )		12467	0					
ANR	12543	Callee	ZCG		12467	0					
ANR	12544	Identifier	ZCG		12467	0					
ANR	12545	ArgumentList	accel_directives		12467	1					
ANR	12546	Argument	accel_directives		12467	0					
ANR	12547	Identifier	accel_directives		12467	0					
ANR	12548	Identifier	use_cwd		12467	1					
ANR	12549	CompoundStatement		14:59:380:380	12467	1					
ANR	12550	ExpressionStatement	ZCG ( key_len ) = 0	934:2:25584:25600	12467	0	True				
ANR	12551	AssignmentExpression	ZCG ( key_len ) = 0		12467	0		=			
ANR	12552	CallExpression	ZCG ( key_len )		12467	0					
ANR	12553	Callee	ZCG		12467	0					
ANR	12554	Identifier	ZCG		12467	0					
ANR	12555	ArgumentList	key_len		12467	1					
ANR	12556	Argument	key_len		12467	0					
ANR	12557	Identifier	key_len		12467	0					
ANR	12558	PrimaryExpression	0		12467	1					
ANR	12559	ElseStatement	else		12467	0					
ANR	12560	CompoundStatement		21:2:556:584	12467	0					
ANR	12561	IdentifierDeclStatement	"const char * include_path = NULL , * cwd = NULL ;"	936:2:25617:25661	12467	0	True				
ANR	12562	IdentifierDecl	* include_path = NULL		12467	0					
ANR	12563	IdentifierDeclType	const char *		12467	0					
ANR	12564	Identifier	include_path		12467	1					
ANR	12565	AssignmentExpression	* include_path = NULL		12467	2		=			
ANR	12566	Identifier	NULL		12467	0					
ANR	12567	Identifier	NULL		12467	1					
ANR	12568	IdentifierDecl	* cwd = NULL		12467	1					
ANR	12569	IdentifierDeclType	const char *		12467	0					
ANR	12570	Identifier	cwd		12467	1					
ANR	12571	AssignmentExpression	* cwd = NULL		12467	2		=			
ANR	12572	Identifier	NULL		12467	0					
ANR	12573	Identifier	NULL		12467	1					
ANR	12574	IdentifierDeclStatement	"int include_path_len = 0 , cwd_len = 0 ;"	937:2:25665:25702	12467	1	True				
ANR	12575	IdentifierDecl	include_path_len = 0		12467	0					
ANR	12576	IdentifierDeclType	int		12467	0					
ANR	12577	Identifier	include_path_len		12467	1					
ANR	12578	AssignmentExpression	include_path_len = 0		12467	2		=			
ANR	12579	Identifier	include_path_len		12467	0					
ANR	12580	PrimaryExpression	0		12467	1					
ANR	12581	IdentifierDecl	cwd_len = 0		12467	1					
ANR	12582	IdentifierDeclType	int		12467	0					
ANR	12583	Identifier	cwd_len		12467	1					
ANR	12584	AssignmentExpression	cwd_len = 0		12467	2		=			
ANR	12585	Identifier	cwd_len		12467	0					
ANR	12586	PrimaryExpression	0		12467	1					
ANR	12587	IdentifierDeclStatement	zend_string * parent_script = NULL ;	938:2:25706:25739	12467	2	True				
ANR	12588	IdentifierDecl	* parent_script = NULL		12467	0					
ANR	12589	IdentifierDeclType	zend_string *		12467	0					
ANR	12590	Identifier	parent_script		12467	1					
ANR	12591	AssignmentExpression	* parent_script = NULL		12467	2		=			
ANR	12592	Identifier	NULL		12467	0					
ANR	12593	Identifier	NULL		12467	1					
ANR	12594	IdentifierDeclStatement	size_t parent_script_len = 0 ;	939:2:25743:25771	12467	3	True				
ANR	12595	IdentifierDecl	parent_script_len = 0		12467	0					
ANR	12596	IdentifierDeclType	size_t		12467	0					
ANR	12597	Identifier	parent_script_len		12467	1					
ANR	12598	AssignmentExpression	parent_script_len = 0		12467	2		=			
ANR	12599	Identifier	parent_script_len		12467	0					
ANR	12600	PrimaryExpression	0		12467	1					
ANR	12601	IfStatement	if ( EXPECTED ( ZCG ( cwd_key_len ) ) )		12467	4					
ANR	12602	Condition	EXPECTED ( ZCG ( cwd_key_len ) )	941:6:25780:25805	12467	0	True				
ANR	12603	CallExpression	EXPECTED ( ZCG ( cwd_key_len ) )		12467	0					
ANR	12604	Callee	EXPECTED		12467	0					
ANR	12605	Identifier	EXPECTED		12467	0					
ANR	12606	ArgumentList	ZCG ( cwd_key_len )		12467	1					
ANR	12607	Argument	ZCG ( cwd_key_len )		12467	0					
ANR	12608	CallExpression	ZCG ( cwd_key_len )		12467	0					
ANR	12609	Callee	ZCG		12467	0					
ANR	12610	Identifier	ZCG		12467	0					
ANR	12611	ArgumentList	cwd_key_len		12467	1					
ANR	12612	Argument	cwd_key_len		12467	0					
ANR	12613	Identifier	cwd_key_len		12467	0					
ANR	12614	CompoundStatement		23:34:621:621	12467	1					
ANR	12615	ExpressionStatement	cwd = ZCG ( cwd_key )	942:3:25813:25831	12467	0	True				
ANR	12616	AssignmentExpression	cwd = ZCG ( cwd_key )		12467	0		=			
ANR	12617	Identifier	cwd		12467	0					
ANR	12618	CallExpression	ZCG ( cwd_key )		12467	1					
ANR	12619	Callee	ZCG		12467	0					
ANR	12620	Identifier	ZCG		12467	0					
ANR	12621	ArgumentList	cwd_key		12467	1					
ANR	12622	Argument	cwd_key		12467	0					
ANR	12623	Identifier	cwd_key		12467	0					
ANR	12624	ExpressionStatement	cwd_len = ZCG ( cwd_key_len )	943:3:25836:25862	12467	1	True				
ANR	12625	AssignmentExpression	cwd_len = ZCG ( cwd_key_len )		12467	0		=			
ANR	12626	Identifier	cwd_len		12467	0					
ANR	12627	CallExpression	ZCG ( cwd_key_len )		12467	1					
ANR	12628	Callee	ZCG		12467	0					
ANR	12629	Identifier	ZCG		12467	0					
ANR	12630	ArgumentList	cwd_key_len		12467	1					
ANR	12631	Argument	cwd_key_len		12467	0					
ANR	12632	Identifier	cwd_key_len		12467	0					
ANR	12633	ElseStatement	else		12467	0					
ANR	12634	CompoundStatement		27:3:691:728	12467	0					
ANR	12635	IdentifierDeclStatement	zend_string * cwd_str = accel_getcwd ( ) ;	945:3:25878:25915	12467	0	True				
ANR	12636	IdentifierDecl	* cwd_str = accel_getcwd ( )		12467	0					
ANR	12637	IdentifierDeclType	zend_string *		12467	0					
ANR	12638	Identifier	cwd_str		12467	1					
ANR	12639	AssignmentExpression	* cwd_str = accel_getcwd ( )		12467	2		=			
ANR	12640	Identifier	cwd_str		12467	0					
ANR	12641	CallExpression	accel_getcwd ( )		12467	1					
ANR	12642	Callee	accel_getcwd		12467	0					
ANR	12643	Identifier	accel_getcwd		12467	0					
ANR	12644	ArgumentList			12467	1					
ANR	12645	IfStatement	if ( UNEXPECTED ( ! cwd_str ) )		12467	1					
ANR	12646	Condition	UNEXPECTED ( ! cwd_str )	947:7:25925:25944	12467	0	True				
ANR	12647	CallExpression	UNEXPECTED ( ! cwd_str )		12467	0					
ANR	12648	Callee	UNEXPECTED		12467	0					
ANR	12649	Identifier	UNEXPECTED		12467	0					
ANR	12650	ArgumentList	! cwd_str		12467	1					
ANR	12651	Argument	! cwd_str		12467	0					
ANR	12652	UnaryOperationExpression	! cwd_str		12467	0					
ANR	12653	UnaryOperator	!		12467	0					
ANR	12654	Identifier	cwd_str		12467	1					
ANR	12655	CompoundStatement		29:29:760:760	12467	1					
ANR	12656	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""getcwd() failed for '%s' (%d), please try to set opcache.use_cwd to 0 in ini file"" , path , errno )"	949:4:25998:26128	12467	0	True				
ANR	12657	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""getcwd() failed for '%s' (%d), please try to set opcache.use_cwd to 0 in ini file"" , path , errno )"		12467	0					
ANR	12658	Callee	zend_accel_error		12467	0					
ANR	12659	Identifier	zend_accel_error		12467	0					
ANR	12660	ArgumentList	ACCEL_LOG_INFO		12467	1					
ANR	12661	Argument	ACCEL_LOG_INFO		12467	0					
ANR	12662	Identifier	ACCEL_LOG_INFO		12467	0					
ANR	12663	Argument	"""getcwd() failed for '%s' (%d), please try to set opcache.use_cwd to 0 in ini file"""		12467	1					
ANR	12664	PrimaryExpression	"""getcwd() failed for '%s' (%d), please try to set opcache.use_cwd to 0 in ini file"""		12467	0					
ANR	12665	Argument	path		12467	2					
ANR	12666	Identifier	path		12467	0					
ANR	12667	Argument	errno		12467	3					
ANR	12668	Identifier	errno		12467	0					
ANR	12669	ReturnStatement	return NULL ;	950:4:26134:26145	12467	1	True				
ANR	12670	Identifier	NULL		12467	0					
ANR	12671	ExpressionStatement	cwd = ZSTR_VAL ( cwd_str )	952:3:26155:26178	12467	2	True				
ANR	12672	AssignmentExpression	cwd = ZSTR_VAL ( cwd_str )		12467	0		=			
ANR	12673	Identifier	cwd		12467	0					
ANR	12674	CallExpression	ZSTR_VAL ( cwd_str )		12467	1					
ANR	12675	Callee	ZSTR_VAL		12467	0					
ANR	12676	Identifier	ZSTR_VAL		12467	0					
ANR	12677	ArgumentList	cwd_str		12467	1					
ANR	12678	Argument	cwd_str		12467	0					
ANR	12679	Identifier	cwd_str		12467	0					
ANR	12680	ExpressionStatement	cwd_len = ZSTR_LEN ( cwd_str )	953:3:26183:26210	12467	3	True				
ANR	12681	AssignmentExpression	cwd_len = ZSTR_LEN ( cwd_str )		12467	0		=			
ANR	12682	Identifier	cwd_len		12467	0					
ANR	12683	CallExpression	ZSTR_LEN ( cwd_str )		12467	1					
ANR	12684	Callee	ZSTR_LEN		12467	0					
ANR	12685	Identifier	ZSTR_LEN		12467	0					
ANR	12686	ArgumentList	cwd_str		12467	1					
ANR	12687	Argument	cwd_str		12467	0					
ANR	12688	Identifier	cwd_str		12467	0					
ANR	12689	IfStatement	if ( ZCG ( cwd_check ) )		12467	4					
ANR	12690	Condition	ZCG ( cwd_check )	955:7:26231:26244	12467	0	True				
ANR	12691	CallExpression	ZCG ( cwd_check )		12467	0					
ANR	12692	Callee	ZCG		12467	0					
ANR	12693	Identifier	ZCG		12467	0					
ANR	12694	ArgumentList	cwd_check		12467	1					
ANR	12695	Argument	cwd_check		12467	0					
ANR	12696	Identifier	cwd_check		12467	0					
ANR	12697	CompoundStatement		37:23:1060:1060	12467	1					
ANR	12698	ExpressionStatement	ZCG ( cwd_check ) = 0	956:4:26253:26271	12467	0	True				
ANR	12699	AssignmentExpression	ZCG ( cwd_check ) = 0		12467	0		=			
ANR	12700	CallExpression	ZCG ( cwd_check )		12467	0					
ANR	12701	Callee	ZCG		12467	0					
ANR	12702	Identifier	ZCG		12467	0					
ANR	12703	ArgumentList	cwd_check		12467	1					
ANR	12704	Argument	cwd_check		12467	0					
ANR	12705	Identifier	cwd_check		12467	0					
ANR	12706	PrimaryExpression	0		12467	1					
ANR	12707	IfStatement	if ( ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) )		12467	1					
ANR	12708	Condition	ZCG ( counted ) || ZCSG ( accelerator_enabled )	957:8:26281:26323	12467	0	True				
ANR	12709	OrExpression	ZCG ( counted ) || ZCSG ( accelerator_enabled )		12467	0		||			
ANR	12710	CallExpression	ZCG ( counted )		12467	0					
ANR	12711	Callee	ZCG		12467	0					
ANR	12712	Identifier	ZCG		12467	0					
ANR	12713	ArgumentList	counted		12467	1					
ANR	12714	Argument	counted		12467	0					
ANR	12715	Identifier	counted		12467	0					
ANR	12716	CallExpression	ZCSG ( accelerator_enabled )		12467	1					
ANR	12717	Callee	ZCSG		12467	0					
ANR	12718	Identifier	ZCSG		12467	0					
ANR	12719	ArgumentList	accelerator_enabled		12467	1					
ANR	12720	Argument	accelerator_enabled		12467	0					
ANR	12721	Identifier	accelerator_enabled		12467	0					
ANR	12722	CompoundStatement		41:5:1147:1201	12467	1					
ANR	12723	IdentifierDeclStatement	zend_string * str = accel_find_interned_string ( cwd_str ) ;	959:5:26334:26388	12467	0	True				
ANR	12724	IdentifierDecl	* str = accel_find_interned_string ( cwd_str )		12467	0					
ANR	12725	IdentifierDeclType	zend_string *		12467	0					
ANR	12726	Identifier	str		12467	1					
ANR	12727	AssignmentExpression	* str = accel_find_interned_string ( cwd_str )		12467	2		=			
ANR	12728	Identifier	str		12467	0					
ANR	12729	CallExpression	accel_find_interned_string ( cwd_str )		12467	1					
ANR	12730	Callee	accel_find_interned_string		12467	0					
ANR	12731	Identifier	accel_find_interned_string		12467	0					
ANR	12732	ArgumentList	cwd_str		12467	1					
ANR	12733	Argument	cwd_str		12467	0					
ANR	12734	Identifier	cwd_str		12467	0					
ANR	12735	IfStatement	if ( ! str )		12467	1					
ANR	12736	Condition	! str	960:9:26399:26402	12467	0	True				
ANR	12737	UnaryOperationExpression	! str		12467	0					
ANR	12738	UnaryOperator	!		12467	0					
ANR	12739	Identifier	str		12467	1					
ANR	12740	CompoundStatement		42:15:1218:1218	12467	1					
ANR	12741	ExpressionStatement	SHM_UNPROTECT ( )	961:6:26413:26428	12467	0	True				
ANR	12742	CallExpression	SHM_UNPROTECT ( )		12467	0					
ANR	12743	Callee	SHM_UNPROTECT		12467	0					
ANR	12744	Identifier	SHM_UNPROTECT		12467	0					
ANR	12745	ArgumentList			12467	1					
ANR	12746	ExpressionStatement	zend_shared_alloc_lock ( )	962:6:26436:26460	12467	1	True				
ANR	12747	CallExpression	zend_shared_alloc_lock ( )		12467	0					
ANR	12748	Callee	zend_shared_alloc_lock		12467	0					
ANR	12749	Identifier	zend_shared_alloc_lock		12467	0					
ANR	12750	ArgumentList			12467	1					
ANR	12751	ExpressionStatement	str = accel_new_interned_string ( zend_string_copy ( cwd_str ) )	963:6:26468:26526	12467	2	True				
ANR	12752	AssignmentExpression	str = accel_new_interned_string ( zend_string_copy ( cwd_str ) )		12467	0		=			
ANR	12753	Identifier	str		12467	0					
ANR	12754	CallExpression	accel_new_interned_string ( zend_string_copy ( cwd_str ) )		12467	1					
ANR	12755	Callee	accel_new_interned_string		12467	0					
ANR	12756	Identifier	accel_new_interned_string		12467	0					
ANR	12757	ArgumentList	zend_string_copy ( cwd_str )		12467	1					
ANR	12758	Argument	zend_string_copy ( cwd_str )		12467	0					
ANR	12759	CallExpression	zend_string_copy ( cwd_str )		12467	0					
ANR	12760	Callee	zend_string_copy		12467	0					
ANR	12761	Identifier	zend_string_copy		12467	0					
ANR	12762	ArgumentList	cwd_str		12467	1					
ANR	12763	Argument	cwd_str		12467	0					
ANR	12764	Identifier	cwd_str		12467	0					
ANR	12765	IfStatement	if ( str == cwd_str )		12467	3					
ANR	12766	Condition	str == cwd_str	964:10:26538:26551	12467	0	True				
ANR	12767	EqualityExpression	str == cwd_str		12467	0		==			
ANR	12768	Identifier	str		12467	0					
ANR	12769	Identifier	cwd_str		12467	1					
ANR	12770	CompoundStatement		46:26:1367:1367	12467	1					
ANR	12771	ExpressionStatement	str = NULL	965:7:26563:26573	12467	0	True				
ANR	12772	AssignmentExpression	str = NULL		12467	0		=			
ANR	12773	Identifier	str		12467	0					
ANR	12774	Identifier	NULL		12467	1					
ANR	12775	ExpressionStatement	zend_shared_alloc_unlock ( )	967:6:26589:26615	12467	4	True				
ANR	12776	CallExpression	zend_shared_alloc_unlock ( )		12467	0					
ANR	12777	Callee	zend_shared_alloc_unlock		12467	0					
ANR	12778	Identifier	zend_shared_alloc_unlock		12467	0					
ANR	12779	ArgumentList			12467	1					
ANR	12780	ExpressionStatement	SHM_PROTECT ( )	968:6:26623:26636	12467	5	True				
ANR	12781	CallExpression	SHM_PROTECT ( )		12467	0					
ANR	12782	Callee	SHM_PROTECT		12467	0					
ANR	12783	Identifier	SHM_PROTECT		12467	0					
ANR	12784	ArgumentList			12467	1					
ANR	12785	IfStatement	if ( str )		12467	2					
ANR	12786	Condition	str	970:9:26654:26656	12467	0	True				
ANR	12787	Identifier	str		12467	0					
ANR	12788	CompoundStatement		54:6:1500:1603	12467	1					
ANR	12789	IdentifierDeclStatement	char buf [ 32 ] ;	971:6:26667:26679	12467	0	True				
ANR	12790	IdentifierDecl	buf [ 32 ]		12467	0					
ANR	12791	IdentifierDeclType	char [ 32 ]		12467	0					
ANR	12792	Identifier	buf		12467	1					
ANR	12793	PrimaryExpression	32		12467	2					
ANR	12794	IdentifierDeclStatement	"char * res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) ) ;"	972:6:26687:26790	12467	1	True				
ANR	12795	IdentifierDecl	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		12467	0					
ANR	12796	IdentifierDeclType	char *		12467	0					
ANR	12797	Identifier	res		12467	1					
ANR	12798	AssignmentExpression	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		12467	2		=			
ANR	12799	Identifier	res		12467	0					
ANR	12800	CallExpression	"zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		12467	1					
ANR	12801	Callee	zend_print_long_to_buf		12467	0					
ANR	12802	Identifier	zend_print_long_to_buf		12467	0					
ANR	12803	ArgumentList	buf + sizeof ( buf ) - 1		12467	1					
ANR	12804	Argument	buf + sizeof ( buf ) - 1		12467	0					
ANR	12805	AdditiveExpression	buf + sizeof ( buf ) - 1		12467	0		+			
ANR	12806	Identifier	buf		12467	0					
ANR	12807	AdditiveExpression	sizeof ( buf ) - 1		12467	1		-			
ANR	12808	SizeofExpression	sizeof ( buf )		12467	0					
ANR	12809	Sizeof	sizeof		12467	0					
ANR	12810	SizeofOperand	buf		12467	1					
ANR	12811	PrimaryExpression	1		12467	1					
ANR	12812	Argument	ZSTR_VAL ( str ) - ZCSG ( interned_strings_start )		12467	1					
ANR	12813	AdditiveExpression	ZSTR_VAL ( str ) - ZCSG ( interned_strings_start )		12467	0		-			
ANR	12814	CallExpression	ZSTR_VAL ( str )		12467	0					
ANR	12815	Callee	ZSTR_VAL		12467	0					
ANR	12816	Identifier	ZSTR_VAL		12467	0					
ANR	12817	ArgumentList	str		12467	1					
ANR	12818	Argument	str		12467	0					
ANR	12819	Identifier	str		12467	0					
ANR	12820	CallExpression	ZCSG ( interned_strings_start )		12467	1					
ANR	12821	Callee	ZCSG		12467	0					
ANR	12822	Identifier	ZCSG		12467	0					
ANR	12823	ArgumentList	interned_strings_start		12467	1					
ANR	12824	Argument	interned_strings_start		12467	0					
ANR	12825	Identifier	interned_strings_start		12467	0					
ANR	12826	ExpressionStatement	cwd_len = ZCG ( cwd_key_len ) = buf + sizeof ( buf ) - 1 - res	974:6:26799:26855	12467	2	True				
ANR	12827	AssignmentExpression	cwd_len = ZCG ( cwd_key_len ) = buf + sizeof ( buf ) - 1 - res		12467	0		=			
ANR	12828	Identifier	cwd_len		12467	0					
ANR	12829	AssignmentExpression	ZCG ( cwd_key_len ) = buf + sizeof ( buf ) - 1 - res		12467	1		=			
ANR	12830	CallExpression	ZCG ( cwd_key_len )		12467	0					
ANR	12831	Callee	ZCG		12467	0					
ANR	12832	Identifier	ZCG		12467	0					
ANR	12833	ArgumentList	cwd_key_len		12467	1					
ANR	12834	Argument	cwd_key_len		12467	0					
ANR	12835	Identifier	cwd_key_len		12467	0					
ANR	12836	AdditiveExpression	buf + sizeof ( buf ) - 1 - res		12467	1		+			
ANR	12837	Identifier	buf		12467	0					
ANR	12838	AdditiveExpression	sizeof ( buf ) - 1 - res		12467	1		-			
ANR	12839	SizeofExpression	sizeof ( buf )		12467	0					
ANR	12840	Sizeof	sizeof		12467	0					
ANR	12841	SizeofOperand	buf		12467	1					
ANR	12842	AdditiveExpression	1 - res		12467	1		-			
ANR	12843	PrimaryExpression	1		12467	0					
ANR	12844	Identifier	res		12467	1					
ANR	12845	ExpressionStatement	cwd = ZCG ( cwd_key )	975:6:26863:26881	12467	3	True				
ANR	12846	AssignmentExpression	cwd = ZCG ( cwd_key )		12467	0		=			
ANR	12847	Identifier	cwd		12467	0					
ANR	12848	CallExpression	ZCG ( cwd_key )		12467	1					
ANR	12849	Callee	ZCG		12467	0					
ANR	12850	Identifier	ZCG		12467	0					
ANR	12851	ArgumentList	cwd_key		12467	1					
ANR	12852	Argument	cwd_key		12467	0					
ANR	12853	Identifier	cwd_key		12467	0					
ANR	12854	ExpressionStatement	"memcpy ( ZCG ( cwd_key ) , res , cwd_len + 1 )"	976:6:26889:26927	12467	4	True				
ANR	12855	CallExpression	"memcpy ( ZCG ( cwd_key ) , res , cwd_len + 1 )"		12467	0					
ANR	12856	Callee	memcpy		12467	0					
ANR	12857	Identifier	memcpy		12467	0					
ANR	12858	ArgumentList	ZCG ( cwd_key )		12467	1					
ANR	12859	Argument	ZCG ( cwd_key )		12467	0					
ANR	12860	CallExpression	ZCG ( cwd_key )		12467	0					
ANR	12861	Callee	ZCG		12467	0					
ANR	12862	Identifier	ZCG		12467	0					
ANR	12863	ArgumentList	cwd_key		12467	1					
ANR	12864	Argument	cwd_key		12467	0					
ANR	12865	Identifier	cwd_key		12467	0					
ANR	12866	Argument	res		12467	1					
ANR	12867	Identifier	res		12467	0					
ANR	12868	Argument	cwd_len + 1		12467	2					
ANR	12869	AdditiveExpression	cwd_len + 1		12467	0		+			
ANR	12870	Identifier	cwd_len		12467	0					
ANR	12871	PrimaryExpression	1		12467	1					
ANR	12872	IfStatement	if ( EXPECTED ( ZCG ( include_path_key_len ) ) )		12467	5					
ANR	12873	Condition	EXPECTED ( ZCG ( include_path_key_len ) )	983:6:26965:26999	12467	0	True				
ANR	12874	CallExpression	EXPECTED ( ZCG ( include_path_key_len ) )		12467	0					
ANR	12875	Callee	EXPECTED		12467	0					
ANR	12876	Identifier	EXPECTED		12467	0					
ANR	12877	ArgumentList	ZCG ( include_path_key_len )		12467	1					
ANR	12878	Argument	ZCG ( include_path_key_len )		12467	0					
ANR	12879	CallExpression	ZCG ( include_path_key_len )		12467	0					
ANR	12880	Callee	ZCG		12467	0					
ANR	12881	Identifier	ZCG		12467	0					
ANR	12882	ArgumentList	include_path_key_len		12467	1					
ANR	12883	Argument	include_path_key_len		12467	0					
ANR	12884	Identifier	include_path_key_len		12467	0					
ANR	12885	CompoundStatement		65:43:1815:1815	12467	1					
ANR	12886	ExpressionStatement	include_path = ZCG ( include_path_key )	984:3:27007:27043	12467	0	True				
ANR	12887	AssignmentExpression	include_path = ZCG ( include_path_key )		12467	0		=			
ANR	12888	Identifier	include_path		12467	0					
ANR	12889	CallExpression	ZCG ( include_path_key )		12467	1					
ANR	12890	Callee	ZCG		12467	0					
ANR	12891	Identifier	ZCG		12467	0					
ANR	12892	ArgumentList	include_path_key		12467	1					
ANR	12893	Argument	include_path_key		12467	0					
ANR	12894	Identifier	include_path_key		12467	0					
ANR	12895	ExpressionStatement	include_path_len = ZCG ( include_path_key_len )	985:3:27048:27092	12467	1	True				
ANR	12896	AssignmentExpression	include_path_len = ZCG ( include_path_key_len )		12467	0		=			
ANR	12897	Identifier	include_path_len		12467	0					
ANR	12898	CallExpression	ZCG ( include_path_key_len )		12467	1					
ANR	12899	Callee	ZCG		12467	0					
ANR	12900	Identifier	ZCG		12467	0					
ANR	12901	ArgumentList	include_path_key_len		12467	1					
ANR	12902	Argument	include_path_key_len		12467	0					
ANR	12903	Identifier	include_path_key_len		12467	0					
ANR	12904	ElseStatement	else		12467	0					
ANR	12905	IfStatement	if ( ! ZCG ( include_path ) || ZSTR_LEN ( ZCG ( include_path ) ) == 0 )		12467	0					
ANR	12906	Condition	! ZCG ( include_path ) || ZSTR_LEN ( ZCG ( include_path ) ) == 0	986:13:27107:27160	12467	0	True				
ANR	12907	OrExpression	! ZCG ( include_path ) || ZSTR_LEN ( ZCG ( include_path ) ) == 0		12467	0		||			
ANR	12908	UnaryOperationExpression	! ZCG ( include_path )		12467	0					
ANR	12909	UnaryOperator	!		12467	0					
ANR	12910	CallExpression	ZCG ( include_path )		12467	1					
ANR	12911	Callee	ZCG		12467	0					
ANR	12912	Identifier	ZCG		12467	0					
ANR	12913	ArgumentList	include_path		12467	1					
ANR	12914	Argument	include_path		12467	0					
ANR	12915	Identifier	include_path		12467	0					
ANR	12916	EqualityExpression	ZSTR_LEN ( ZCG ( include_path ) ) == 0		12467	1		==			
ANR	12917	CallExpression	ZSTR_LEN ( ZCG ( include_path ) )		12467	0					
ANR	12918	Callee	ZSTR_LEN		12467	0					
ANR	12919	Identifier	ZSTR_LEN		12467	0					
ANR	12920	ArgumentList	ZCG ( include_path )		12467	1					
ANR	12921	Argument	ZCG ( include_path )		12467	0					
ANR	12922	CallExpression	ZCG ( include_path )		12467	0					
ANR	12923	Callee	ZCG		12467	0					
ANR	12924	Identifier	ZCG		12467	0					
ANR	12925	ArgumentList	include_path		12467	1					
ANR	12926	Argument	include_path		12467	0					
ANR	12927	Identifier	include_path		12467	0					
ANR	12928	PrimaryExpression	0		12467	1					
ANR	12929	CompoundStatement		68:69:1976:1976	12467	1					
ANR	12930	ExpressionStatement	"include_path = """""	987:3:27168:27185	12467	0	True				
ANR	12931	AssignmentExpression	"include_path = """""		12467	0		=			
ANR	12932	Identifier	include_path		12467	0					
ANR	12933	PrimaryExpression	""""""		12467	1					
ANR	12934	ExpressionStatement	include_path_len = 0	988:3:27190:27210	12467	1	True				
ANR	12935	AssignmentExpression	include_path_len = 0		12467	0		=			
ANR	12936	Identifier	include_path_len		12467	0					
ANR	12937	PrimaryExpression	0		12467	1					
ANR	12938	ElseStatement	else		12467	0					
ANR	12939	CompoundStatement		71:9:2034:2034	12467	0					
ANR	12940	ExpressionStatement	include_path = ZSTR_VAL ( ZCG ( include_path ) )	990:3:27226:27268	12467	0	True				
ANR	12941	AssignmentExpression	include_path = ZSTR_VAL ( ZCG ( include_path ) )		12467	0		=			
ANR	12942	Identifier	include_path		12467	0					
ANR	12943	CallExpression	ZSTR_VAL ( ZCG ( include_path ) )		12467	1					
ANR	12944	Callee	ZSTR_VAL		12467	0					
ANR	12945	Identifier	ZSTR_VAL		12467	0					
ANR	12946	ArgumentList	ZCG ( include_path )		12467	1					
ANR	12947	Argument	ZCG ( include_path )		12467	0					
ANR	12948	CallExpression	ZCG ( include_path )		12467	0					
ANR	12949	Callee	ZCG		12467	0					
ANR	12950	Identifier	ZCG		12467	0					
ANR	12951	ArgumentList	include_path		12467	1					
ANR	12952	Argument	include_path		12467	0					
ANR	12953	Identifier	include_path		12467	0					
ANR	12954	ExpressionStatement	include_path_len = ZSTR_LEN ( ZCG ( include_path ) )	991:3:27273:27319	12467	1	True				
ANR	12955	AssignmentExpression	include_path_len = ZSTR_LEN ( ZCG ( include_path ) )		12467	0		=			
ANR	12956	Identifier	include_path_len		12467	0					
ANR	12957	CallExpression	ZSTR_LEN ( ZCG ( include_path ) )		12467	1					
ANR	12958	Callee	ZSTR_LEN		12467	0					
ANR	12959	Identifier	ZSTR_LEN		12467	0					
ANR	12960	ArgumentList	ZCG ( include_path )		12467	1					
ANR	12961	Argument	ZCG ( include_path )		12467	0					
ANR	12962	CallExpression	ZCG ( include_path )		12467	0					
ANR	12963	Callee	ZCG		12467	0					
ANR	12964	Identifier	ZCG		12467	0					
ANR	12965	ArgumentList	include_path		12467	1					
ANR	12966	Argument	include_path		12467	0					
ANR	12967	Identifier	include_path		12467	0					
ANR	12968	IfStatement	if ( ZCG ( include_path_check ) )		12467	2					
ANR	12969	Condition	ZCG ( include_path_check )	994:7:27341:27363	12467	0	True				
ANR	12970	CallExpression	ZCG ( include_path_check )		12467	0					
ANR	12971	Callee	ZCG		12467	0					
ANR	12972	Identifier	ZCG		12467	0					
ANR	12973	ArgumentList	include_path_check		12467	1					
ANR	12974	Argument	include_path_check		12467	0					
ANR	12975	Identifier	include_path_check		12467	0					
ANR	12976	CompoundStatement		76:32:2179:2179	12467	1					
ANR	12977	ExpressionStatement	ZCG ( include_path_check ) = 0	995:4:27372:27399	12467	0	True				
ANR	12978	AssignmentExpression	ZCG ( include_path_check ) = 0		12467	0		=			
ANR	12979	CallExpression	ZCG ( include_path_check )		12467	0					
ANR	12980	Callee	ZCG		12467	0					
ANR	12981	Identifier	ZCG		12467	0					
ANR	12982	ArgumentList	include_path_check		12467	1					
ANR	12983	Argument	include_path_check		12467	0					
ANR	12984	Identifier	include_path_check		12467	0					
ANR	12985	PrimaryExpression	0		12467	1					
ANR	12986	IfStatement	if ( ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) )		12467	1					
ANR	12987	Condition	ZCG ( counted ) || ZCSG ( accelerator_enabled )	996:8:27409:27451	12467	0	True				
ANR	12988	OrExpression	ZCG ( counted ) || ZCSG ( accelerator_enabled )		12467	0		||			
ANR	12989	CallExpression	ZCG ( counted )		12467	0					
ANR	12990	Callee	ZCG		12467	0					
ANR	12991	Identifier	ZCG		12467	0					
ANR	12992	ArgumentList	counted		12467	1					
ANR	12993	Argument	counted		12467	0					
ANR	12994	Identifier	counted		12467	0					
ANR	12995	CallExpression	ZCSG ( accelerator_enabled )		12467	1					
ANR	12996	Callee	ZCSG		12467	0					
ANR	12997	Identifier	ZCSG		12467	0					
ANR	12998	ArgumentList	accelerator_enabled		12467	1					
ANR	12999	Argument	accelerator_enabled		12467	0					
ANR	13000	Identifier	accelerator_enabled		12467	0					
ANR	13001	CompoundStatement		80:5:2275:2339	12467	1					
ANR	13002	IdentifierDeclStatement	zend_string * str = accel_find_interned_string ( ZCG ( include_path ) ) ;	998:5:27462:27526	12467	0	True				
ANR	13003	IdentifierDecl	* str = accel_find_interned_string ( ZCG ( include_path ) )		12467	0					
ANR	13004	IdentifierDeclType	zend_string *		12467	0					
ANR	13005	Identifier	str		12467	1					
ANR	13006	AssignmentExpression	* str = accel_find_interned_string ( ZCG ( include_path ) )		12467	2		=			
ANR	13007	Identifier	str		12467	0					
ANR	13008	CallExpression	accel_find_interned_string ( ZCG ( include_path ) )		12467	1					
ANR	13009	Callee	accel_find_interned_string		12467	0					
ANR	13010	Identifier	accel_find_interned_string		12467	0					
ANR	13011	ArgumentList	ZCG ( include_path )		12467	1					
ANR	13012	Argument	ZCG ( include_path )		12467	0					
ANR	13013	CallExpression	ZCG ( include_path )		12467	0					
ANR	13014	Callee	ZCG		12467	0					
ANR	13015	Identifier	ZCG		12467	0					
ANR	13016	ArgumentList	include_path		12467	1					
ANR	13017	Argument	include_path		12467	0					
ANR	13018	Identifier	include_path		12467	0					
ANR	13019	IfStatement	if ( ! str )		12467	1					
ANR	13020	Condition	! str	999:9:27537:27540	12467	0	True				
ANR	13021	UnaryOperationExpression	! str		12467	0					
ANR	13022	UnaryOperator	!		12467	0					
ANR	13023	Identifier	str		12467	1					
ANR	13024	CompoundStatement		81:15:2356:2356	12467	1					
ANR	13025	ExpressionStatement	SHM_UNPROTECT ( )	1000:6:27551:27566	12467	0	True				
ANR	13026	CallExpression	SHM_UNPROTECT ( )		12467	0					
ANR	13027	Callee	SHM_UNPROTECT		12467	0					
ANR	13028	Identifier	SHM_UNPROTECT		12467	0					
ANR	13029	ArgumentList			12467	1					
ANR	13030	ExpressionStatement	zend_shared_alloc_lock ( )	1001:6:27574:27598	12467	1	True				
ANR	13031	CallExpression	zend_shared_alloc_lock ( )		12467	0					
ANR	13032	Callee	zend_shared_alloc_lock		12467	0					
ANR	13033	Identifier	zend_shared_alloc_lock		12467	0					
ANR	13034	ArgumentList			12467	1					
ANR	13035	ExpressionStatement	str = accel_new_interned_string ( zend_string_copy ( ZCG ( include_path ) ) )	1002:6:27606:27674	12467	2	True				
ANR	13036	AssignmentExpression	str = accel_new_interned_string ( zend_string_copy ( ZCG ( include_path ) ) )		12467	0		=			
ANR	13037	Identifier	str		12467	0					
ANR	13038	CallExpression	accel_new_interned_string ( zend_string_copy ( ZCG ( include_path ) ) )		12467	1					
ANR	13039	Callee	accel_new_interned_string		12467	0					
ANR	13040	Identifier	accel_new_interned_string		12467	0					
ANR	13041	ArgumentList	zend_string_copy ( ZCG ( include_path ) )		12467	1					
ANR	13042	Argument	zend_string_copy ( ZCG ( include_path ) )		12467	0					
ANR	13043	CallExpression	zend_string_copy ( ZCG ( include_path ) )		12467	0					
ANR	13044	Callee	zend_string_copy		12467	0					
ANR	13045	Identifier	zend_string_copy		12467	0					
ANR	13046	ArgumentList	ZCG ( include_path )		12467	1					
ANR	13047	Argument	ZCG ( include_path )		12467	0					
ANR	13048	CallExpression	ZCG ( include_path )		12467	0					
ANR	13049	Callee	ZCG		12467	0					
ANR	13050	Identifier	ZCG		12467	0					
ANR	13051	ArgumentList	include_path		12467	1					
ANR	13052	Argument	include_path		12467	0					
ANR	13053	Identifier	include_path		12467	0					
ANR	13054	IfStatement	if ( str == ZCG ( include_path ) )		12467	3					
ANR	13055	Condition	str == ZCG ( include_path )	1003:10:27686:27709	12467	0	True				
ANR	13056	EqualityExpression	str == ZCG ( include_path )		12467	0		==			
ANR	13057	Identifier	str		12467	0					
ANR	13058	CallExpression	ZCG ( include_path )		12467	1					
ANR	13059	Callee	ZCG		12467	0					
ANR	13060	Identifier	ZCG		12467	0					
ANR	13061	ArgumentList	include_path		12467	1					
ANR	13062	Argument	include_path		12467	0					
ANR	13063	Identifier	include_path		12467	0					
ANR	13064	CompoundStatement		85:36:2525:2525	12467	1					
ANR	13065	ExpressionStatement	str = NULL	1004:7:27721:27731	12467	0	True				
ANR	13066	AssignmentExpression	str = NULL		12467	0		=			
ANR	13067	Identifier	str		12467	0					
ANR	13068	Identifier	NULL		12467	1					
ANR	13069	ExpressionStatement	zend_shared_alloc_unlock ( )	1006:6:27747:27773	12467	4	True				
ANR	13070	CallExpression	zend_shared_alloc_unlock ( )		12467	0					
ANR	13071	Callee	zend_shared_alloc_unlock		12467	0					
ANR	13072	Identifier	zend_shared_alloc_unlock		12467	0					
ANR	13073	ArgumentList			12467	1					
ANR	13074	ExpressionStatement	SHM_PROTECT ( )	1007:6:27781:27794	12467	5	True				
ANR	13075	CallExpression	SHM_PROTECT ( )		12467	0					
ANR	13076	Callee	SHM_PROTECT		12467	0					
ANR	13077	Identifier	SHM_PROTECT		12467	0					
ANR	13078	ArgumentList			12467	1					
ANR	13079	IfStatement	if ( str )		12467	2					
ANR	13080	Condition	str	1009:9:27812:27814	12467	0	True				
ANR	13081	Identifier	str		12467	0					
ANR	13082	CompoundStatement		93:6:2658:2761	12467	1					
ANR	13083	IdentifierDeclStatement	char buf [ 32 ] ;	1010:6:27825:27837	12467	0	True				
ANR	13084	IdentifierDecl	buf [ 32 ]		12467	0					
ANR	13085	IdentifierDeclType	char [ 32 ]		12467	0					
ANR	13086	Identifier	buf		12467	1					
ANR	13087	PrimaryExpression	32		12467	2					
ANR	13088	IdentifierDeclStatement	"char * res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) ) ;"	1011:6:27845:27948	12467	1	True				
ANR	13089	IdentifierDecl	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		12467	0					
ANR	13090	IdentifierDeclType	char *		12467	0					
ANR	13091	Identifier	res		12467	1					
ANR	13092	AssignmentExpression	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		12467	2		=			
ANR	13093	Identifier	res		12467	0					
ANR	13094	CallExpression	"zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		12467	1					
ANR	13095	Callee	zend_print_long_to_buf		12467	0					
ANR	13096	Identifier	zend_print_long_to_buf		12467	0					
ANR	13097	ArgumentList	buf + sizeof ( buf ) - 1		12467	1					
ANR	13098	Argument	buf + sizeof ( buf ) - 1		12467	0					
ANR	13099	AdditiveExpression	buf + sizeof ( buf ) - 1		12467	0		+			
ANR	13100	Identifier	buf		12467	0					
ANR	13101	AdditiveExpression	sizeof ( buf ) - 1		12467	1		-			
ANR	13102	SizeofExpression	sizeof ( buf )		12467	0					
ANR	13103	Sizeof	sizeof		12467	0					
ANR	13104	SizeofOperand	buf		12467	1					
ANR	13105	PrimaryExpression	1		12467	1					
ANR	13106	Argument	ZSTR_VAL ( str ) - ZCSG ( interned_strings_start )		12467	1					
ANR	13107	AdditiveExpression	ZSTR_VAL ( str ) - ZCSG ( interned_strings_start )		12467	0		-			
ANR	13108	CallExpression	ZSTR_VAL ( str )		12467	0					
ANR	13109	Callee	ZSTR_VAL		12467	0					
ANR	13110	Identifier	ZSTR_VAL		12467	0					
ANR	13111	ArgumentList	str		12467	1					
ANR	13112	Argument	str		12467	0					
ANR	13113	Identifier	str		12467	0					
ANR	13114	CallExpression	ZCSG ( interned_strings_start )		12467	1					
ANR	13115	Callee	ZCSG		12467	0					
ANR	13116	Identifier	ZCSG		12467	0					
ANR	13117	ArgumentList	interned_strings_start		12467	1					
ANR	13118	Argument	interned_strings_start		12467	0					
ANR	13119	Identifier	interned_strings_start		12467	0					
ANR	13120	ExpressionStatement	include_path_len = ZCG ( include_path_key_len ) = buf + sizeof ( buf ) - 1 - res	1013:6:27957:28031	12467	2	True				
ANR	13121	AssignmentExpression	include_path_len = ZCG ( include_path_key_len ) = buf + sizeof ( buf ) - 1 - res		12467	0		=			
ANR	13122	Identifier	include_path_len		12467	0					
ANR	13123	AssignmentExpression	ZCG ( include_path_key_len ) = buf + sizeof ( buf ) - 1 - res		12467	1		=			
ANR	13124	CallExpression	ZCG ( include_path_key_len )		12467	0					
ANR	13125	Callee	ZCG		12467	0					
ANR	13126	Identifier	ZCG		12467	0					
ANR	13127	ArgumentList	include_path_key_len		12467	1					
ANR	13128	Argument	include_path_key_len		12467	0					
ANR	13129	Identifier	include_path_key_len		12467	0					
ANR	13130	AdditiveExpression	buf + sizeof ( buf ) - 1 - res		12467	1		+			
ANR	13131	Identifier	buf		12467	0					
ANR	13132	AdditiveExpression	sizeof ( buf ) - 1 - res		12467	1		-			
ANR	13133	SizeofExpression	sizeof ( buf )		12467	0					
ANR	13134	Sizeof	sizeof		12467	0					
ANR	13135	SizeofOperand	buf		12467	1					
ANR	13136	AdditiveExpression	1 - res		12467	1		-			
ANR	13137	PrimaryExpression	1		12467	0					
ANR	13138	Identifier	res		12467	1					
ANR	13139	ExpressionStatement	include_path = ZCG ( include_path_key )	1014:6:28039:28075	12467	3	True				
ANR	13140	AssignmentExpression	include_path = ZCG ( include_path_key )		12467	0		=			
ANR	13141	Identifier	include_path		12467	0					
ANR	13142	CallExpression	ZCG ( include_path_key )		12467	1					
ANR	13143	Callee	ZCG		12467	0					
ANR	13144	Identifier	ZCG		12467	0					
ANR	13145	ArgumentList	include_path_key		12467	1					
ANR	13146	Argument	include_path_key		12467	0					
ANR	13147	Identifier	include_path_key		12467	0					
ANR	13148	ExpressionStatement	"memcpy ( ZCG ( include_path_key ) , res , include_path_len + 1 )"	1015:6:28083:28139	12467	4	True				
ANR	13149	CallExpression	"memcpy ( ZCG ( include_path_key ) , res , include_path_len + 1 )"		12467	0					
ANR	13150	Callee	memcpy		12467	0					
ANR	13151	Identifier	memcpy		12467	0					
ANR	13152	ArgumentList	ZCG ( include_path_key )		12467	1					
ANR	13153	Argument	ZCG ( include_path_key )		12467	0					
ANR	13154	CallExpression	ZCG ( include_path_key )		12467	0					
ANR	13155	Callee	ZCG		12467	0					
ANR	13156	Identifier	ZCG		12467	0					
ANR	13157	ArgumentList	include_path_key		12467	1					
ANR	13158	Argument	include_path_key		12467	0					
ANR	13159	Identifier	include_path_key		12467	0					
ANR	13160	Argument	res		12467	1					
ANR	13161	Identifier	res		12467	0					
ANR	13162	Argument	include_path_len + 1		12467	2					
ANR	13163	AdditiveExpression	include_path_len + 1		12467	0		+			
ANR	13164	Identifier	include_path_len		12467	0					
ANR	13165	PrimaryExpression	1		12467	1					
ANR	13166	IfStatement	if ( UNEXPECTED ( ( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) ) ) )		12467	6					
ANR	13167	Condition	UNEXPECTED ( ( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) ) )	1023:6:28206:28291	12467	0	True				
ANR	13168	CallExpression	UNEXPECTED ( ( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) ) )		12467	0					
ANR	13169	Callee	UNEXPECTED		12467	0					
ANR	13170	Identifier	UNEXPECTED		12467	0					
ANR	13171	ArgumentList	( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) )		12467	1					
ANR	13172	Argument	( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) )		12467	0					
ANR	13173	RelationalExpression	( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) )		12467	0		>=			
ANR	13174	CastExpression	( size_t ) ( cwd_len + path_length + include_path_len + 2 )		12467	0					
ANR	13175	CastTarget	size_t		12467	0					
ANR	13176	AdditiveExpression	cwd_len + path_length + include_path_len + 2		12467	1		+			
ANR	13177	Identifier	cwd_len		12467	0					
ANR	13178	AdditiveExpression	path_length + include_path_len + 2		12467	1		+			
ANR	13179	Identifier	path_length		12467	0					
ANR	13180	AdditiveExpression	include_path_len + 2		12467	1		+			
ANR	13181	Identifier	include_path_len		12467	0					
ANR	13182	PrimaryExpression	2		12467	1					
ANR	13183	SizeofExpression	sizeof ( ZCG ( key ) )		12467	1					
ANR	13184	Sizeof	sizeof		12467	0					
ANR	13185	CallExpression	ZCG ( key )		12467	1					
ANR	13186	Callee	ZCG		12467	0					
ANR	13187	Identifier	ZCG		12467	0					
ANR	13188	ArgumentList	key		12467	1					
ANR	13189	Argument	key		12467	0					
ANR	13190	Identifier	key		12467	0					
ANR	13191	CompoundStatement		105:94:3107:3107	12467	1					
ANR	13192	ReturnStatement	return NULL ;	1024:3:28299:28310	12467	0	True				
ANR	13193	Identifier	NULL		12467	0					
ANR	13194	ExpressionStatement	"memcpy ( ZCG ( key ) , path , path_length )"	1032:2:28517:28552	12467	7	True				
ANR	13195	CallExpression	"memcpy ( ZCG ( key ) , path , path_length )"		12467	0					
ANR	13196	Callee	memcpy		12467	0					
ANR	13197	Identifier	memcpy		12467	0					
ANR	13198	ArgumentList	ZCG ( key )		12467	1					
ANR	13199	Argument	ZCG ( key )		12467	0					
ANR	13200	CallExpression	ZCG ( key )		12467	0					
ANR	13201	Callee	ZCG		12467	0					
ANR	13202	Identifier	ZCG		12467	0					
ANR	13203	ArgumentList	key		12467	1					
ANR	13204	Argument	key		12467	0					
ANR	13205	Identifier	key		12467	0					
ANR	13206	Argument	path		12467	1					
ANR	13207	Identifier	path		12467	0					
ANR	13208	Argument	path_length		12467	2					
ANR	13209	Identifier	path_length		12467	0					
ANR	13210	ExpressionStatement	ZCG ( key ) [ path_length ] = ':'	1033:2:28556:28583	12467	8	True				
ANR	13211	AssignmentExpression	ZCG ( key ) [ path_length ] = ':'		12467	0		=			
ANR	13212	ArrayIndexing	ZCG ( key ) [ path_length ]		12467	0					
ANR	13213	CallExpression	ZCG ( key )		12467	0					
ANR	13214	Callee	ZCG		12467	0					
ANR	13215	Identifier	ZCG		12467	0					
ANR	13216	ArgumentList	key		12467	1					
ANR	13217	Argument	key		12467	0					
ANR	13218	Identifier	key		12467	0					
ANR	13219	Identifier	path_length		12467	1					
ANR	13220	PrimaryExpression	':'		12467	1					
ANR	13221	ExpressionStatement	key_length = path_length + 1	1034:2:28587:28615	12467	9	True				
ANR	13222	AssignmentExpression	key_length = path_length + 1		12467	0		=			
ANR	13223	Identifier	key_length		12467	0					
ANR	13224	AdditiveExpression	path_length + 1		12467	1		+			
ANR	13225	Identifier	path_length		12467	0					
ANR	13226	PrimaryExpression	1		12467	1					
ANR	13227	ExpressionStatement	"memcpy ( ZCG ( key ) + key_length , cwd , cwd_len )"	1035:2:28619:28662	12467	10	True				
ANR	13228	CallExpression	"memcpy ( ZCG ( key ) + key_length , cwd , cwd_len )"		12467	0					
ANR	13229	Callee	memcpy		12467	0					
ANR	13230	Identifier	memcpy		12467	0					
ANR	13231	ArgumentList	ZCG ( key ) + key_length		12467	1					
ANR	13232	Argument	ZCG ( key ) + key_length		12467	0					
ANR	13233	AdditiveExpression	ZCG ( key ) + key_length		12467	0		+			
ANR	13234	CallExpression	ZCG ( key )		12467	0					
ANR	13235	Callee	ZCG		12467	0					
ANR	13236	Identifier	ZCG		12467	0					
ANR	13237	ArgumentList	key		12467	1					
ANR	13238	Argument	key		12467	0					
ANR	13239	Identifier	key		12467	0					
ANR	13240	Identifier	key_length		12467	1					
ANR	13241	Argument	cwd		12467	1					
ANR	13242	Identifier	cwd		12467	0					
ANR	13243	Argument	cwd_len		12467	2					
ANR	13244	Identifier	cwd_len		12467	0					
ANR	13245	ExpressionStatement	key_length += cwd_len	1036:2:28666:28687	12467	11	True				
ANR	13246	AssignmentExpression	key_length += cwd_len		12467	0		+=			
ANR	13247	Identifier	key_length		12467	0					
ANR	13248	Identifier	cwd_len		12467	1					
ANR	13249	IfStatement	if ( include_path_len )		12467	12					
ANR	13250	Condition	include_path_len	1038:6:28696:28711	12467	0	True				
ANR	13251	Identifier	include_path_len		12467	0					
ANR	13252	CompoundStatement		120:24:3527:3527	12467	1					
ANR	13253	ExpressionStatement	ZCG ( key ) [ key_length ] = ':'	1039:3:28719:28745	12467	0	True				
ANR	13254	AssignmentExpression	ZCG ( key ) [ key_length ] = ':'		12467	0		=			
ANR	13255	ArrayIndexing	ZCG ( key ) [ key_length ]		12467	0					
ANR	13256	CallExpression	ZCG ( key )		12467	0					
ANR	13257	Callee	ZCG		12467	0					
ANR	13258	Identifier	ZCG		12467	0					
ANR	13259	ArgumentList	key		12467	1					
ANR	13260	Argument	key		12467	0					
ANR	13261	Identifier	key		12467	0					
ANR	13262	Identifier	key_length		12467	1					
ANR	13263	PrimaryExpression	':'		12467	1					
ANR	13264	ExpressionStatement	key_length += 1	1040:3:28750:28765	12467	1	True				
ANR	13265	AssignmentExpression	key_length += 1		12467	0		+=			
ANR	13266	Identifier	key_length		12467	0					
ANR	13267	PrimaryExpression	1		12467	1					
ANR	13268	ExpressionStatement	"memcpy ( ZCG ( key ) + key_length , include_path , include_path_len )"	1041:3:28770:28831	12467	2	True				
ANR	13269	CallExpression	"memcpy ( ZCG ( key ) + key_length , include_path , include_path_len )"		12467	0					
ANR	13270	Callee	memcpy		12467	0					
ANR	13271	Identifier	memcpy		12467	0					
ANR	13272	ArgumentList	ZCG ( key ) + key_length		12467	1					
ANR	13273	Argument	ZCG ( key ) + key_length		12467	0					
ANR	13274	AdditiveExpression	ZCG ( key ) + key_length		12467	0		+			
ANR	13275	CallExpression	ZCG ( key )		12467	0					
ANR	13276	Callee	ZCG		12467	0					
ANR	13277	Identifier	ZCG		12467	0					
ANR	13278	ArgumentList	key		12467	1					
ANR	13279	Argument	key		12467	0					
ANR	13280	Identifier	key		12467	0					
ANR	13281	Identifier	key_length		12467	1					
ANR	13282	Argument	include_path		12467	1					
ANR	13283	Identifier	include_path		12467	0					
ANR	13284	Argument	include_path_len		12467	2					
ANR	13285	Identifier	include_path_len		12467	0					
ANR	13286	ExpressionStatement	key_length += include_path_len	1042:3:28836:28866	12467	3	True				
ANR	13287	AssignmentExpression	key_length += include_path_len		12467	0		+=			
ANR	13288	Identifier	key_length		12467	0					
ANR	13289	Identifier	include_path_len		12467	1					
ANR	13290	IfStatement	if ( EXPECTED ( EG ( current_execute_data ) ) && EXPECTED ( ( parent_script = zend_get_executed_filename_ex ( ) ) != NULL ) )		12467	13					
ANR	13291	Condition	EXPECTED ( EG ( current_execute_data ) ) && EXPECTED ( ( parent_script = zend_get_executed_filename_ex ( ) ) != NULL )	1049:6:29039:29149	12467	0	True				
ANR	13292	AndExpression	EXPECTED ( EG ( current_execute_data ) ) && EXPECTED ( ( parent_script = zend_get_executed_filename_ex ( ) ) != NULL )		12467	0		&&			
ANR	13293	CallExpression	EXPECTED ( EG ( current_execute_data ) )		12467	0					
ANR	13294	Callee	EXPECTED		12467	0					
ANR	13295	Identifier	EXPECTED		12467	0					
ANR	13296	ArgumentList	EG ( current_execute_data )		12467	1					
ANR	13297	Argument	EG ( current_execute_data )		12467	0					
ANR	13298	CallExpression	EG ( current_execute_data )		12467	0					
ANR	13299	Callee	EG		12467	0					
ANR	13300	Identifier	EG		12467	0					
ANR	13301	ArgumentList	current_execute_data		12467	1					
ANR	13302	Argument	current_execute_data		12467	0					
ANR	13303	Identifier	current_execute_data		12467	0					
ANR	13304	CallExpression	EXPECTED ( ( parent_script = zend_get_executed_filename_ex ( ) ) != NULL )		12467	1					
ANR	13305	Callee	EXPECTED		12467	0					
ANR	13306	Identifier	EXPECTED		12467	0					
ANR	13307	ArgumentList	( parent_script = zend_get_executed_filename_ex ( ) ) != NULL		12467	1					
ANR	13308	Argument	( parent_script = zend_get_executed_filename_ex ( ) ) != NULL		12467	0					
ANR	13309	EqualityExpression	( parent_script = zend_get_executed_filename_ex ( ) ) != NULL		12467	0		!=			
ANR	13310	AssignmentExpression	parent_script = zend_get_executed_filename_ex ( )		12467	0		=			
ANR	13311	Identifier	parent_script		12467	0					
ANR	13312	CallExpression	zend_get_executed_filename_ex ( )		12467	1					
ANR	13313	Callee	zend_get_executed_filename_ex		12467	0					
ANR	13314	Identifier	zend_get_executed_filename_ex		12467	0					
ANR	13315	ArgumentList			12467	1					
ANR	13316	Identifier	NULL		12467	1					
ANR	13317	CompoundStatement		132:75:3965:3965	12467	1					
ANR	13318	ExpressionStatement	parent_script_len = ZSTR_LEN ( parent_script )	1052:3:29158:29201	12467	0	True				
ANR	13319	AssignmentExpression	parent_script_len = ZSTR_LEN ( parent_script )		12467	0		=			
ANR	13320	Identifier	parent_script_len		12467	0					
ANR	13321	CallExpression	ZSTR_LEN ( parent_script )		12467	1					
ANR	13322	Callee	ZSTR_LEN		12467	0					
ANR	13323	Identifier	ZSTR_LEN		12467	0					
ANR	13324	ArgumentList	parent_script		12467	1					
ANR	13325	Argument	parent_script		12467	0					
ANR	13326	Identifier	parent_script		12467	0					
ANR	13327	WhileStatement	while ( ( -- parent_script_len > 0 ) && ! IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] ) )		12467	1					
ANR	13328	Condition	( -- parent_script_len > 0 ) && ! IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] )	1053:10:29213:29294	12467	0	True				
ANR	13329	AndExpression	( -- parent_script_len > 0 ) && ! IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] )		12467	0		&&			
ANR	13330	RelationalExpression	-- parent_script_len > 0		12467	0		>			
ANR	13331	UnaryExpression	-- parent_script_len		12467	0					
ANR	13332	IncDec	--		12467	0					
ANR	13333	Identifier	parent_script_len		12467	1					
ANR	13334	PrimaryExpression	0		12467	1					
ANR	13335	UnaryOperationExpression	! IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] )		12467	1					
ANR	13336	UnaryOperator	!		12467	0					
ANR	13337	CallExpression	IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] )		12467	1					
ANR	13338	Callee	IS_SLASH		12467	0					
ANR	13339	Identifier	IS_SLASH		12467	0					
ANR	13340	ArgumentList	ZSTR_VAL ( parent_script ) [ parent_script_len ]		12467	1					
ANR	13341	Argument	ZSTR_VAL ( parent_script ) [ parent_script_len ]		12467	0					
ANR	13342	ArrayIndexing	ZSTR_VAL ( parent_script ) [ parent_script_len ]		12467	0					
ANR	13343	CallExpression	ZSTR_VAL ( parent_script )		12467	0					
ANR	13344	Callee	ZSTR_VAL		12467	0					
ANR	13345	Identifier	ZSTR_VAL		12467	0					
ANR	13346	ArgumentList	parent_script		12467	1					
ANR	13347	Argument	parent_script		12467	0					
ANR	13348	Identifier	parent_script		12467	0					
ANR	13349	Identifier	parent_script_len		12467	1					
ANR	13350	ExpressionStatement		1053:93:29296:29296	12467	1	True				
ANR	13351	IfStatement	if ( UNEXPECTED ( ( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) ) ) )		12467	2					
ANR	13352	Condition	UNEXPECTED ( ( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) ) )	1055:7:29306:29381	12467	0	True				
ANR	13353	CallExpression	UNEXPECTED ( ( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) ) )		12467	0					
ANR	13354	Callee	UNEXPECTED		12467	0					
ANR	13355	Identifier	UNEXPECTED		12467	0					
ANR	13356	ArgumentList	( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) )		12467	1					
ANR	13357	Argument	( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) )		12467	0					
ANR	13358	RelationalExpression	( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) )		12467	0		>=			
ANR	13359	CastExpression	( size_t ) ( key_length + parent_script_len + 1 )		12467	0					
ANR	13360	CastTarget	size_t		12467	0					
ANR	13361	AdditiveExpression	key_length + parent_script_len + 1		12467	1		+			
ANR	13362	Identifier	key_length		12467	0					
ANR	13363	AdditiveExpression	parent_script_len + 1		12467	1		+			
ANR	13364	Identifier	parent_script_len		12467	0					
ANR	13365	PrimaryExpression	1		12467	1					
ANR	13366	SizeofExpression	sizeof ( ZCG ( key ) )		12467	1					
ANR	13367	Sizeof	sizeof		12467	0					
ANR	13368	CallExpression	ZCG ( key )		12467	1					
ANR	13369	Callee	ZCG		12467	0					
ANR	13370	Identifier	ZCG		12467	0					
ANR	13371	ArgumentList	key		12467	1					
ANR	13372	Argument	key		12467	0					
ANR	13373	Identifier	key		12467	0					
ANR	13374	CompoundStatement		137:85:4197:4197	12467	1					
ANR	13375	ReturnStatement	return NULL ;	1056:4:29390:29401	12467	0	True				
ANR	13376	Identifier	NULL		12467	0					
ANR	13377	ExpressionStatement	ZCG ( key ) [ key_length ] = ':'	1058:3:29411:29437	12467	3	True				
ANR	13378	AssignmentExpression	ZCG ( key ) [ key_length ] = ':'		12467	0		=			
ANR	13379	ArrayIndexing	ZCG ( key ) [ key_length ]		12467	0					
ANR	13380	CallExpression	ZCG ( key )		12467	0					
ANR	13381	Callee	ZCG		12467	0					
ANR	13382	Identifier	ZCG		12467	0					
ANR	13383	ArgumentList	key		12467	1					
ANR	13384	Argument	key		12467	0					
ANR	13385	Identifier	key		12467	0					
ANR	13386	Identifier	key_length		12467	1					
ANR	13387	PrimaryExpression	':'		12467	1					
ANR	13388	ExpressionStatement	key_length += 1	1059:3:29442:29457	12467	4	True				
ANR	13389	AssignmentExpression	key_length += 1		12467	0		+=			
ANR	13390	Identifier	key_length		12467	0					
ANR	13391	PrimaryExpression	1		12467	1					
ANR	13392	ExpressionStatement	"memcpy ( ZCG ( key ) + key_length , ZSTR_VAL ( parent_script ) , parent_script_len )"	1060:3:29462:29535	12467	5	True				
ANR	13393	CallExpression	"memcpy ( ZCG ( key ) + key_length , ZSTR_VAL ( parent_script ) , parent_script_len )"		12467	0					
ANR	13394	Callee	memcpy		12467	0					
ANR	13395	Identifier	memcpy		12467	0					
ANR	13396	ArgumentList	ZCG ( key ) + key_length		12467	1					
ANR	13397	Argument	ZCG ( key ) + key_length		12467	0					
ANR	13398	AdditiveExpression	ZCG ( key ) + key_length		12467	0		+			
ANR	13399	CallExpression	ZCG ( key )		12467	0					
ANR	13400	Callee	ZCG		12467	0					
ANR	13401	Identifier	ZCG		12467	0					
ANR	13402	ArgumentList	key		12467	1					
ANR	13403	Argument	key		12467	0					
ANR	13404	Identifier	key		12467	0					
ANR	13405	Identifier	key_length		12467	1					
ANR	13406	Argument	ZSTR_VAL ( parent_script )		12467	1					
ANR	13407	CallExpression	ZSTR_VAL ( parent_script )		12467	0					
ANR	13408	Callee	ZSTR_VAL		12467	0					
ANR	13409	Identifier	ZSTR_VAL		12467	0					
ANR	13410	ArgumentList	parent_script		12467	1					
ANR	13411	Argument	parent_script		12467	0					
ANR	13412	Identifier	parent_script		12467	0					
ANR	13413	Argument	parent_script_len		12467	2					
ANR	13414	Identifier	parent_script_len		12467	0					
ANR	13415	ExpressionStatement	key_length += parent_script_len	1061:3:29540:29571	12467	6	True				
ANR	13416	AssignmentExpression	key_length += parent_script_len		12467	0		+=			
ANR	13417	Identifier	key_length		12467	0					
ANR	13418	Identifier	parent_script_len		12467	1					
ANR	13419	ExpressionStatement	ZCG ( key ) [ key_length ] = '\\0'	1063:2:29579:29606	12467	14	True				
ANR	13420	AssignmentExpression	ZCG ( key ) [ key_length ] = '\\0'		12467	0		=			
ANR	13421	ArrayIndexing	ZCG ( key ) [ key_length ]		12467	0					
ANR	13422	CallExpression	ZCG ( key )		12467	0					
ANR	13423	Callee	ZCG		12467	0					
ANR	13424	Identifier	ZCG		12467	0					
ANR	13425	ArgumentList	key		12467	1					
ANR	13426	Argument	key		12467	0					
ANR	13427	Identifier	key		12467	0					
ANR	13428	Identifier	key_length		12467	1					
ANR	13429	PrimaryExpression	'\\0'		12467	1					
ANR	13430	ExpressionStatement	* key_len = ZCG ( key_len ) = key_length	1064:2:29610:29646	12467	15	True				
ANR	13431	AssignmentExpression	* key_len = ZCG ( key_len ) = key_length		12467	0		=			
ANR	13432	UnaryOperationExpression	* key_len		12467	0					
ANR	13433	UnaryOperator	*		12467	0					
ANR	13434	Identifier	key_len		12467	1					
ANR	13435	AssignmentExpression	ZCG ( key_len ) = key_length		12467	1		=			
ANR	13436	CallExpression	ZCG ( key_len )		12467	0					
ANR	13437	Callee	ZCG		12467	0					
ANR	13438	Identifier	ZCG		12467	0					
ANR	13439	ArgumentList	key_len		12467	1					
ANR	13440	Argument	key_len		12467	0					
ANR	13441	Identifier	key_len		12467	0					
ANR	13442	Identifier	key_length		12467	1					
ANR	13443	ReturnStatement	return ZCG ( key ) ;	1065:2:29650:29665	12467	16	True				
ANR	13444	CallExpression	ZCG ( key )		12467	0					
ANR	13445	Callee	ZCG		12467	0					
ANR	13446	Identifier	ZCG		12467	0					
ANR	13447	ArgumentList	key		12467	1					
ANR	13448	Argument	key		12467	0					
ANR	13449	Identifier	key		12467	0					
ANR	13450	ExpressionStatement	* key_len = path_length	1069:1:29691:29713	12467	2	True				
ANR	13451	AssignmentExpression	* key_len = path_length		12467	0		=			
ANR	13452	UnaryOperationExpression	* key_len		12467	0					
ANR	13453	UnaryOperator	*		12467	0					
ANR	13454	Identifier	key_len		12467	1					
ANR	13455	Identifier	path_length		12467	1					
ANR	13456	ReturnStatement	return ( char * ) path ;	1070:1:29716:29734	12467	3	True				
ANR	13457	CastExpression	( char * ) path		12467	0					
ANR	13458	CastTarget	char *		12467	0					
ANR	13459	Identifier	path		12467	1					
ANR	13460	ReturnType	char *		12467	1					
ANR	13461	Identifier	accel_make_persistent_key		12467	2					
ANR	13462	ParameterList	"const char * path , int path_length , int * key_len"		12467	3					
ANR	13463	Parameter	const char * path	918:32:25137:25152	12467	0	True				
ANR	13464	ParameterType	const char *		12467	0					
ANR	13465	Identifier	path		12467	1					
ANR	13466	Parameter	int path_length	918:50:25155:25169	12467	1	True				
ANR	13467	ParameterType	int		12467	0					
ANR	13468	Identifier	path_length		12467	1					
ANR	13469	Parameter	int * key_len	918:67:25172:25183	12467	2	True				
ANR	13470	ParameterType	int *		12467	0					
ANR	13471	Identifier	key_len		12467	1					
ANR	13472	CFGEntryNode	ENTRY		12467		True				
ANR	13473	CFGExitNode	EXIT		12467		True				
ANR	13474	Symbol	cwd_len		12467						
ANR	13475	Symbol	current_execute_data		12467						
ANR	13476	Symbol	zend_print_long_to_buf		12467						
ANR	13477	Symbol	accel_getcwd		12467						
ANR	13478	Symbol	path		12467						
ANR	13479	Symbol	ZCSG		12467						
ANR	13480	Symbol	include_path_len		12467						
ANR	13481	Symbol	* ZCG		12467						
ANR	13482	Symbol	accel_find_interned_string		12467						
ANR	13483	Symbol	parent_script_len		12467						
ANR	13484	Symbol	path_length		12467						
ANR	13485	Symbol	zend_get_executed_filename_ex		12467						
ANR	13486	Symbol	* parent_script_len		12467						
ANR	13487	Symbol	* ZSTR_VAL		12467						
ANR	13488	Symbol	res		12467						
ANR	13489	Symbol	errno		12467						
ANR	13490	Symbol	EG		12467						
ANR	13491	Symbol	NULL		12467						
ANR	13492	Symbol	IS_SLASH		12467						
ANR	13493	Symbol	cwd_str		12467						
ANR	13494	Symbol	* key_length		12467						
ANR	13495	Symbol	cwd_check		12467						
ANR	13496	Symbol	zend_string_copy		12467						
ANR	13497	Symbol	ZCG ( accel_directives ) . use_cwd		12467						
ANR	13498	Symbol	cwd_key_len		12467						
ANR	13499	Symbol	str		12467						
ANR	13500	Symbol	IS_ABSOLUTE_PATH		12467						
ANR	13501	Symbol	parent_script		12467						
ANR	13502	Symbol	ZCG		12467						
ANR	13503	Symbol	accel_new_interned_string		12467						
ANR	13504	Symbol	include_path_check		12467						
ANR	13505	Symbol	include_path_key_len		12467						
ANR	13506	Symbol	is_stream_path		12467						
ANR	13507	Symbol	UNEXPECTED		12467						
ANR	13508	Symbol	include_path		12467						
ANR	13509	Symbol	cwd_key		12467						
ANR	13510	Symbol	key_length		12467						
ANR	13511	Symbol	include_path_key		12467						
ANR	13512	Symbol	ACCEL_LOG_INFO		12467						
ANR	13513	Symbol	* path_length		12467						
ANR	13514	Symbol	interned_strings_start		12467						
ANR	13515	Symbol	key		12467						
ANR	13516	Symbol	key_len		12467						
ANR	13517	Symbol	is_cacheable_stream_path		12467						
ANR	13518	Symbol	ZSTR_VAL		12467						
ANR	13519	Symbol	accelerator_enabled		12467						
ANR	13520	Symbol	cwd		12467						
ANR	13521	Symbol	buf		12467						
ANR	13522	Symbol	* key_len		12467						
ANR	13523	Symbol	ZSTR_LEN		12467						
ANR	13524	Symbol	counted		12467						
ANR	13525	Symbol	accel_directives		12467						
ANR	13526	Symbol	EXPECTED		12467						
ANR	13527	Function	zend_accel_invalidate	1073:0:29739:31308							
ANR	13528	FunctionDef	"zend_accel_invalidate (const char * filename , int filename_len , zend_bool force)"		13527	0					
ANR	13529	CompoundStatement		1074:0:29822:31308	13527	0					
ANR	13530	IdentifierDeclStatement	zend_string * realpath ;	1075:1:29825:29846	13527	0	True				
ANR	13531	IdentifierDecl	* realpath		13527	0					
ANR	13532	IdentifierDeclType	zend_string *		13527	0					
ANR	13533	Identifier	realpath		13527	1					
ANR	13534	IdentifierDeclStatement	zend_persistent_script * persistent_script ;	1076:1:29849:29890	13527	1	True				
ANR	13535	IdentifierDecl	* persistent_script		13527	0					
ANR	13536	IdentifierDeclType	zend_persistent_script *		13527	0					
ANR	13537	Identifier	persistent_script		13527	1					
ANR	13538	IfStatement	if ( ! ZCG ( enabled ) || ! accel_startup_ok || ! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS )		13527	2					
ANR	13539	Condition	! ZCG ( enabled ) || ! accel_startup_ok || ! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS	1078:5:29898:30003	13527	0	True				
ANR	13540	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok || ! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS		13527	0		||			
ANR	13541	UnaryOperationExpression	! ZCG ( enabled )		13527	0					
ANR	13542	UnaryOperator	!		13527	0					
ANR	13543	CallExpression	ZCG ( enabled )		13527	1					
ANR	13544	Callee	ZCG		13527	0					
ANR	13545	Identifier	ZCG		13527	0					
ANR	13546	ArgumentList	enabled		13527	1					
ANR	13547	Argument	enabled		13527	0					
ANR	13548	Identifier	enabled		13527	0					
ANR	13549	OrExpression	! accel_startup_ok || ! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS		13527	1		||			
ANR	13550	UnaryOperationExpression	! accel_startup_ok		13527	0					
ANR	13551	UnaryOperator	!		13527	0					
ANR	13552	Identifier	accel_startup_ok		13527	1					
ANR	13553	OrExpression	! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS		13527	1		||			
ANR	13554	UnaryOperationExpression	! ZCSG ( accelerator_enabled )		13527	0					
ANR	13555	UnaryOperator	!		13527	0					
ANR	13556	CallExpression	ZCSG ( accelerator_enabled )		13527	1					
ANR	13557	Callee	ZCSG		13527	0					
ANR	13558	Identifier	ZCSG		13527	0					
ANR	13559	ArgumentList	accelerator_enabled		13527	1					
ANR	13560	Argument	accelerator_enabled		13527	0					
ANR	13561	Identifier	accelerator_enabled		13527	0					
ANR	13562	EqualityExpression	accelerator_shm_read_lock ( ) != SUCCESS		13527	1		!=			
ANR	13563	CallExpression	accelerator_shm_read_lock ( )		13527	0					
ANR	13564	Callee	accelerator_shm_read_lock		13527	0					
ANR	13565	Identifier	accelerator_shm_read_lock		13527	0					
ANR	13566	ArgumentList			13527	1					
ANR	13567	Identifier	SUCCESS		13527	1					
ANR	13568	CompoundStatement		5:113:183:183	13527	1					
ANR	13569	ReturnStatement	return FAILURE ;	1079:2:30010:30024	13527	0	True				
ANR	13570	Identifier	FAILURE		13527	0					
ANR	13571	ExpressionStatement	"realpath = accelerator_orig_zend_resolve_path ( filename , filename_len )"	1082:1:30031:30100	13527	3	True				
ANR	13572	AssignmentExpression	"realpath = accelerator_orig_zend_resolve_path ( filename , filename_len )"		13527	0		=			
ANR	13573	Identifier	realpath		13527	0					
ANR	13574	CallExpression	"accelerator_orig_zend_resolve_path ( filename , filename_len )"		13527	1					
ANR	13575	Callee	accelerator_orig_zend_resolve_path		13527	0					
ANR	13576	Identifier	accelerator_orig_zend_resolve_path		13527	0					
ANR	13577	ArgumentList	filename		13527	1					
ANR	13578	Argument	filename		13527	0					
ANR	13579	Identifier	filename		13527	0					
ANR	13580	Argument	filename_len		13527	1					
ANR	13581	Identifier	filename_len		13527	0					
ANR	13582	IfStatement	if ( ! realpath )		13527	4					
ANR	13583	Condition	! realpath	1084:5:30108:30116	13527	0	True				
ANR	13584	UnaryOperationExpression	! realpath		13527	0					
ANR	13585	UnaryOperator	!		13527	0					
ANR	13586	Identifier	realpath		13527	1					
ANR	13587	CompoundStatement		11:16:296:296	13527	1					
ANR	13588	ReturnStatement	return FAILURE ;	1085:2:30123:30137	13527	0	True				
ANR	13589	Identifier	FAILURE		13527	0					
ANR	13590	IfStatement	if ( ZCG ( accel_directives ) . file_cache )		13527	5					
ANR	13591	Condition	ZCG ( accel_directives ) . file_cache	1089:5:30179:30210	13527	0	True				
ANR	13592	MemberAccess	ZCG ( accel_directives ) . file_cache		13527	0					
ANR	13593	CallExpression	ZCG ( accel_directives )		13527	0					
ANR	13594	Callee	ZCG		13527	0					
ANR	13595	Identifier	ZCG		13527	0					
ANR	13596	ArgumentList	accel_directives		13527	1					
ANR	13597	Argument	accel_directives		13527	0					
ANR	13598	Identifier	accel_directives		13527	0					
ANR	13599	Identifier	file_cache		13527	1					
ANR	13600	CompoundStatement		16:39:390:390	13527	1					
ANR	13601	ExpressionStatement	zend_file_cache_invalidate ( realpath )	1090:2:30217:30253	13527	0	True				
ANR	13602	CallExpression	zend_file_cache_invalidate ( realpath )		13527	0					
ANR	13603	Callee	zend_file_cache_invalidate		13527	0					
ANR	13604	Identifier	zend_file_cache_invalidate		13527	0					
ANR	13605	ArgumentList	realpath		13527	1					
ANR	13606	Argument	realpath		13527	0					
ANR	13607	Identifier	realpath		13527	0					
ANR	13608	ExpressionStatement	"persistent_script = zend_accel_hash_find ( & ZCSG ( hash ) , realpath )"	1094:1:30267:30330	13527	6	True				
ANR	13609	AssignmentExpression	"persistent_script = zend_accel_hash_find ( & ZCSG ( hash ) , realpath )"		13527	0		=			
ANR	13610	Identifier	persistent_script		13527	0					
ANR	13611	CallExpression	"zend_accel_hash_find ( & ZCSG ( hash ) , realpath )"		13527	1					
ANR	13612	Callee	zend_accel_hash_find		13527	0					
ANR	13613	Identifier	zend_accel_hash_find		13527	0					
ANR	13614	ArgumentList	& ZCSG ( hash )		13527	1					
ANR	13615	Argument	& ZCSG ( hash )		13527	0					
ANR	13616	UnaryOperationExpression	& ZCSG ( hash )		13527	0					
ANR	13617	UnaryOperator	&		13527	0					
ANR	13618	CallExpression	ZCSG ( hash )		13527	1					
ANR	13619	Callee	ZCSG		13527	0					
ANR	13620	Identifier	ZCSG		13527	0					
ANR	13621	ArgumentList	hash		13527	1					
ANR	13622	Argument	hash		13527	0					
ANR	13623	Identifier	hash		13527	0					
ANR	13624	Argument	realpath		13527	1					
ANR	13625	Identifier	realpath		13527	0					
ANR	13626	IfStatement	if ( persistent_script && ! persistent_script -> corrupted )		13527	7					
ANR	13627	Condition	persistent_script && ! persistent_script -> corrupted	1095:5:30337:30386	13527	0	True				
ANR	13628	AndExpression	persistent_script && ! persistent_script -> corrupted		13527	0		&&			
ANR	13629	Identifier	persistent_script		13527	0					
ANR	13630	UnaryOperationExpression	! persistent_script -> corrupted		13527	1					
ANR	13631	UnaryOperator	!		13527	0					
ANR	13632	PtrMemberAccess	persistent_script -> corrupted		13527	1					
ANR	13633	Identifier	persistent_script		13527	0					
ANR	13634	Identifier	corrupted		13527	1					
ANR	13635	CompoundStatement		23:2:570:598	13527	1					
ANR	13636	IdentifierDeclStatement	zend_file_handle file_handle ;	1096:2:30393:30421	13527	0	True				
ANR	13637	IdentifierDecl	file_handle		13527	0					
ANR	13638	IdentifierDeclType	zend_file_handle		13527	0					
ANR	13639	Identifier	file_handle		13527	1					
ANR	13640	ExpressionStatement	file_handle . type = ZEND_HANDLE_FILENAME	1098:2:30426:30465	13527	1	True				
ANR	13641	AssignmentExpression	file_handle . type = ZEND_HANDLE_FILENAME		13527	0		=			
ANR	13642	MemberAccess	file_handle . type		13527	0					
ANR	13643	Identifier	file_handle		13527	0					
ANR	13644	Identifier	type		13527	1					
ANR	13645	Identifier	ZEND_HANDLE_FILENAME		13527	1					
ANR	13646	ExpressionStatement	file_handle . filename = ZSTR_VAL ( realpath )	1099:2:30469:30510	13527	2	True				
ANR	13647	AssignmentExpression	file_handle . filename = ZSTR_VAL ( realpath )		13527	0		=			
ANR	13648	MemberAccess	file_handle . filename		13527	0					
ANR	13649	Identifier	file_handle		13527	0					
ANR	13650	Identifier	filename		13527	1					
ANR	13651	CallExpression	ZSTR_VAL ( realpath )		13527	1					
ANR	13652	Callee	ZSTR_VAL		13527	0					
ANR	13653	Identifier	ZSTR_VAL		13527	0					
ANR	13654	ArgumentList	realpath		13527	1					
ANR	13655	Argument	realpath		13527	0					
ANR	13656	Identifier	realpath		13527	0					
ANR	13657	ExpressionStatement	file_handle . opened_path = realpath	1100:2:30514:30548	13527	3	True				
ANR	13658	AssignmentExpression	file_handle . opened_path = realpath		13527	0		=			
ANR	13659	MemberAccess	file_handle . opened_path		13527	0					
ANR	13660	Identifier	file_handle		13527	0					
ANR	13661	Identifier	opened_path		13527	1					
ANR	13662	Identifier	realpath		13527	1					
ANR	13663	IfStatement	"if ( force || ! ZCG ( accel_directives ) . validate_timestamps || do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE )"		13527	4					
ANR	13664	Condition	"force || ! ZCG ( accel_directives ) . validate_timestamps || do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE"	1102:6:30557:30683	13527	0	True				
ANR	13665	OrExpression	"force || ! ZCG ( accel_directives ) . validate_timestamps || do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE"		13527	0		||			
ANR	13666	Identifier	force		13527	0					
ANR	13667	OrExpression	"! ZCG ( accel_directives ) . validate_timestamps || do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE"		13527	1		||			
ANR	13668	UnaryOperationExpression	! ZCG ( accel_directives ) . validate_timestamps		13527	0					
ANR	13669	UnaryOperator	!		13527	0					
ANR	13670	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		13527	1					
ANR	13671	CallExpression	ZCG ( accel_directives )		13527	0					
ANR	13672	Callee	ZCG		13527	0					
ANR	13673	Identifier	ZCG		13527	0					
ANR	13674	ArgumentList	accel_directives		13527	1					
ANR	13675	Argument	accel_directives		13527	0					
ANR	13676	Identifier	accel_directives		13527	0					
ANR	13677	Identifier	validate_timestamps		13527	1					
ANR	13678	EqualityExpression	"do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE"		13527	1		==			
ANR	13679	CallExpression	"do_validate_timestamps ( persistent_script , & file_handle )"		13527	0					
ANR	13680	Callee	do_validate_timestamps		13527	0					
ANR	13681	Identifier	do_validate_timestamps		13527	0					
ANR	13682	ArgumentList	persistent_script		13527	1					
ANR	13683	Argument	persistent_script		13527	0					
ANR	13684	Identifier	persistent_script		13527	0					
ANR	13685	Argument	& file_handle		13527	1					
ANR	13686	UnaryOperationExpression	& file_handle		13527	0					
ANR	13687	UnaryOperator	&		13527	0					
ANR	13688	Identifier	file_handle		13527	1					
ANR	13689	Identifier	FAILURE		13527	1					
ANR	13690	CompoundStatement		31:71:863:863	13527	1					
ANR	13691	ExpressionStatement	SHM_UNPROTECT ( )	1105:3:30691:30706	13527	0	True				
ANR	13692	CallExpression	SHM_UNPROTECT ( )		13527	0					
ANR	13693	Callee	SHM_UNPROTECT		13527	0					
ANR	13694	Identifier	SHM_UNPROTECT		13527	0					
ANR	13695	ArgumentList			13527	1					
ANR	13696	ExpressionStatement	zend_shared_alloc_lock ( )	1106:3:30711:30735	13527	1	True				
ANR	13697	CallExpression	zend_shared_alloc_lock ( )		13527	0					
ANR	13698	Callee	zend_shared_alloc_lock		13527	0					
ANR	13699	Identifier	zend_shared_alloc_lock		13527	0					
ANR	13700	ArgumentList			13527	1					
ANR	13701	IfStatement	if ( ! persistent_script -> corrupted )		13527	2					
ANR	13702	Condition	! persistent_script -> corrupted	1107:7:30744:30772	13527	0	True				
ANR	13703	UnaryOperationExpression	! persistent_script -> corrupted		13527	0					
ANR	13704	UnaryOperator	!		13527	0					
ANR	13705	PtrMemberAccess	persistent_script -> corrupted		13527	1					
ANR	13706	Identifier	persistent_script		13527	0					
ANR	13707	Identifier	corrupted		13527	1					
ANR	13708	CompoundStatement		34:38:952:952	13527	1					
ANR	13709	ExpressionStatement	persistent_script -> corrupted = 1	1108:4:30781:30813	13527	0	True				
ANR	13710	AssignmentExpression	persistent_script -> corrupted = 1		13527	0		=			
ANR	13711	PtrMemberAccess	persistent_script -> corrupted		13527	0					
ANR	13712	Identifier	persistent_script		13527	0					
ANR	13713	Identifier	corrupted		13527	1					
ANR	13714	PrimaryExpression	1		13527	1					
ANR	13715	ExpressionStatement	persistent_script -> timestamp = 0	1109:4:30819:30851	13527	1	True				
ANR	13716	AssignmentExpression	persistent_script -> timestamp = 0		13527	0		=			
ANR	13717	PtrMemberAccess	persistent_script -> timestamp		13527	0					
ANR	13718	Identifier	persistent_script		13527	0					
ANR	13719	Identifier	timestamp		13527	1					
ANR	13720	PrimaryExpression	0		13527	1					
ANR	13721	ExpressionStatement	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption	1110:4:30857:30941	13527	2	True				
ANR	13722	AssignmentExpression	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption		13527	0		+=			
ANR	13723	CallExpression	ZSMMG ( wasted_shared_memory )		13527	0					
ANR	13724	Callee	ZSMMG		13527	0					
ANR	13725	Identifier	ZSMMG		13527	0					
ANR	13726	ArgumentList	wasted_shared_memory		13527	1					
ANR	13727	Argument	wasted_shared_memory		13527	0					
ANR	13728	Identifier	wasted_shared_memory		13527	0					
ANR	13729	MemberAccess	persistent_script -> dynamic_members . memory_consumption		13527	1					
ANR	13730	PtrMemberAccess	persistent_script -> dynamic_members		13527	0					
ANR	13731	Identifier	persistent_script		13527	0					
ANR	13732	Identifier	dynamic_members		13527	1					
ANR	13733	Identifier	memory_consumption		13527	1					
ANR	13734	IfStatement	if ( ZSMMG ( memory_exhausted ) )		13527	3					
ANR	13735	Condition	ZSMMG ( memory_exhausted )	1111:8:30951:30973	13527	0	True				
ANR	13736	CallExpression	ZSMMG ( memory_exhausted )		13527	0					
ANR	13737	Callee	ZSMMG		13527	0					
ANR	13738	Identifier	ZSMMG		13527	0					
ANR	13739	ArgumentList	memory_exhausted		13527	1					
ANR	13740	Argument	memory_exhausted		13527	0					
ANR	13741	Identifier	memory_exhausted		13527	0					
ANR	13742	CompoundStatement		39:5:1160:1278	13527	1					
ANR	13743	IdentifierDeclStatement	zend_accel_restart_reason reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM ;	1112:5:30983:31101	13527	0	True				
ANR	13744	IdentifierDecl	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		13527	0					
ANR	13745	IdentifierDeclType	zend_accel_restart_reason		13527	0					
ANR	13746	Identifier	reason		13527	1					
ANR	13747	AssignmentExpression	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		13527	2		=			
ANR	13748	Identifier	reason		13527	0					
ANR	13749	ConditionalExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		13527	1					
ANR	13750	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )		13527	0					
ANR	13751	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		13527	0					
ANR	13752	Callee	zend_accel_hash_is_full		13527	0					
ANR	13753	Identifier	zend_accel_hash_is_full		13527	0					
ANR	13754	ArgumentList	& ZCSG ( hash )		13527	1					
ANR	13755	Argument	& ZCSG ( hash )		13527	0					
ANR	13756	UnaryOperationExpression	& ZCSG ( hash )		13527	0					
ANR	13757	UnaryOperator	&		13527	0					
ANR	13758	CallExpression	ZCSG ( hash )		13527	1					
ANR	13759	Callee	ZCSG		13527	0					
ANR	13760	Identifier	ZCSG		13527	0					
ANR	13761	ArgumentList	hash		13527	1					
ANR	13762	Argument	hash		13527	0					
ANR	13763	Identifier	hash		13527	0					
ANR	13764	Identifier	ACCEL_RESTART_HASH		13527	1					
ANR	13765	Identifier	ACCEL_RESTART_OOM		13527	2					
ANR	13766	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( reason )	1114:5:31108:31156	13527	1	True				
ANR	13767	CallExpression	zend_accel_schedule_restart_if_necessary ( reason )		13527	0					
ANR	13768	Callee	zend_accel_schedule_restart_if_necessary		13527	0					
ANR	13769	Identifier	zend_accel_schedule_restart_if_necessary		13527	0					
ANR	13770	ArgumentList	reason		13527	1					
ANR	13771	Argument	reason		13527	0					
ANR	13772	Identifier	reason		13527	0					
ANR	13773	ExpressionStatement	zend_shared_alloc_unlock ( )	1117:3:31172:31198	13527	3	True				
ANR	13774	CallExpression	zend_shared_alloc_unlock ( )		13527	0					
ANR	13775	Callee	zend_shared_alloc_unlock		13527	0					
ANR	13776	Identifier	zend_shared_alloc_unlock		13527	0					
ANR	13777	ArgumentList			13527	1					
ANR	13778	ExpressionStatement	SHM_PROTECT ( )	1118:3:31203:31216	13527	4	True				
ANR	13779	CallExpression	SHM_PROTECT ( )		13527	0					
ANR	13780	Callee	SHM_PROTECT		13527	0					
ANR	13781	Identifier	SHM_PROTECT		13527	0					
ANR	13782	ArgumentList			13527	1					
ANR	13783	ExpressionStatement	accelerator_shm_read_unlock ( )	1122:1:31227:31256	13527	8	True				
ANR	13784	CallExpression	accelerator_shm_read_unlock ( )		13527	0					
ANR	13785	Callee	accelerator_shm_read_unlock		13527	0					
ANR	13786	Identifier	accelerator_shm_read_unlock		13527	0					
ANR	13787	ArgumentList			13527	1					
ANR	13788	ExpressionStatement	zend_string_release ( realpath )	1123:1:31259:31288	13527	9	True				
ANR	13789	CallExpression	zend_string_release ( realpath )		13527	0					
ANR	13790	Callee	zend_string_release		13527	0					
ANR	13791	Identifier	zend_string_release		13527	0					
ANR	13792	ArgumentList	realpath		13527	1					
ANR	13793	Argument	realpath		13527	0					
ANR	13794	Identifier	realpath		13527	0					
ANR	13795	ReturnStatement	return SUCCESS ;	1125:1:31292:31306	13527	10	True				
ANR	13796	Identifier	SUCCESS		13527	0					
ANR	13797	ReturnType	int		13527	1					
ANR	13798	Identifier	zend_accel_invalidate		13527	2					
ANR	13799	ParameterList	"const char * filename , int filename_len , zend_bool force"		13527	3					
ANR	13800	Parameter	const char * filename	1073:26:29765:29784	13527	0	True				
ANR	13801	ParameterType	const char *		13527	0					
ANR	13802	Identifier	filename		13527	1					
ANR	13803	Parameter	int filename_len	1073:48:29787:29802	13527	1	True				
ANR	13804	ParameterType	int		13527	0					
ANR	13805	Identifier	filename_len		13527	1					
ANR	13806	Parameter	zend_bool force	1073:66:29805:29819	13527	2	True				
ANR	13807	ParameterType	zend_bool		13527	0					
ANR	13808	Identifier	force		13527	1					
ANR	13809	CFGEntryNode	ENTRY		13527		True				
ANR	13810	CFGExitNode	EXIT		13527		True				
ANR	13811	Symbol	accel_startup_ok		13527						
ANR	13812	Symbol	ACCEL_RESTART_HASH		13527						
ANR	13813	Symbol	file_handle . opened_path		13527						
ANR	13814	Symbol	reason		13527						
ANR	13815	Symbol	wasted_shared_memory		13527						
ANR	13816	Symbol	realpath		13527						
ANR	13817	Symbol	ACCEL_RESTART_OOM		13527						
ANR	13818	Symbol	ZCG ( accel_directives ) . validate_timestamps		13527						
ANR	13819	Symbol	file_handle . type		13527						
ANR	13820	Symbol	accelerator_orig_zend_resolve_path		13527						
ANR	13821	Symbol	zend_accel_hash_find		13527						
ANR	13822	Symbol	enabled		13527						
ANR	13823	Symbol	ZCSG		13527						
ANR	13824	Symbol	persistent_script -> timestamp		13527						
ANR	13825	Symbol	ZSMMG		13527						
ANR	13826	Symbol	filename_len		13527						
ANR	13827	Symbol	zend_accel_hash_is_full		13527						
ANR	13828	Symbol	& file_handle		13527						
ANR	13829	Symbol	persistent_script -> dynamic_members		13527						
ANR	13830	Symbol	SUCCESS		13527						
ANR	13831	Symbol	memory_exhausted		13527						
ANR	13832	Symbol	do_validate_timestamps		13527						
ANR	13833	Symbol	persistent_script		13527						
ANR	13834	Symbol	FAILURE		13527						
ANR	13835	Symbol	* persistent_script		13527						
ANR	13836	Symbol	file_handle		13527						
ANR	13837	Symbol	persistent_script -> corrupted		13527						
ANR	13838	Symbol	file_handle . filename		13527						
ANR	13839	Symbol	accelerator_enabled		13527						
ANR	13840	Symbol	ZSTR_VAL		13527						
ANR	13841	Symbol	persistent_script -> dynamic_members . memory_consumption		13527						
ANR	13842	Symbol	& ZCSG		13527						
ANR	13843	Symbol	filename		13527						
ANR	13844	Symbol	ZEND_HANDLE_FILENAME		13527						
ANR	13845	Symbol	accelerator_shm_read_lock		13527						
ANR	13846	Symbol	force		13527						
ANR	13847	Symbol	accel_directives		13527						
ANR	13848	Symbol	ZCG ( accel_directives ) . file_cache		13527						
ANR	13849	Symbol	hash		13527						
ANR	13850	Symbol	ZCG		13527						
ANR	13851	Function	zend_accel_add_key	1129:0:31361:32105							
ANR	13852	FunctionDef	"zend_accel_add_key (char * key , unsigned int key_length , zend_accel_hash_entry * bucket)"		13851	0					
ANR	13853	CompoundStatement		1130:0:31459:32105	13851	0					
ANR	13854	IfStatement	"if ( ! zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length ) )"		13851	0					
ANR	13855	Condition	"! zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"	1131:5:31466:31520	13851	0	True				
ANR	13856	UnaryOperationExpression	"! zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"		13851	0					
ANR	13857	UnaryOperator	!		13851	0					
ANR	13858	CallExpression	"zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"		13851	1					
ANR	13859	Callee	zend_accel_hash_str_find		13851	0					
ANR	13860	Identifier	zend_accel_hash_str_find		13851	0					
ANR	13861	ArgumentList	& ZCSG ( hash )		13851	1					
ANR	13862	Argument	& ZCSG ( hash )		13851	0					
ANR	13863	UnaryOperationExpression	& ZCSG ( hash )		13851	0					
ANR	13864	UnaryOperator	&		13851	0					
ANR	13865	CallExpression	ZCSG ( hash )		13851	1					
ANR	13866	Callee	ZCSG		13851	0					
ANR	13867	Identifier	ZCSG		13851	0					
ANR	13868	ArgumentList	hash		13851	1					
ANR	13869	Argument	hash		13851	0					
ANR	13870	Identifier	hash		13851	0					
ANR	13871	Argument	key		13851	1					
ANR	13872	Identifier	key		13851	0					
ANR	13873	Argument	key_length		13851	2					
ANR	13874	Identifier	key_length		13851	0					
ANR	13875	CompoundStatement		2:62:63:63	13851	1					
ANR	13876	IfStatement	if ( zend_accel_hash_is_full ( & ZCSG ( hash ) ) )		13851	0					
ANR	13877	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )	1132:6:31531:31566	13851	0	True				
ANR	13878	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		13851	0					
ANR	13879	Callee	zend_accel_hash_is_full		13851	0					
ANR	13880	Identifier	zend_accel_hash_is_full		13851	0					
ANR	13881	ArgumentList	& ZCSG ( hash )		13851	1					
ANR	13882	Argument	& ZCSG ( hash )		13851	0					
ANR	13883	UnaryOperationExpression	& ZCSG ( hash )		13851	0					
ANR	13884	UnaryOperator	&		13851	0					
ANR	13885	CallExpression	ZCSG ( hash )		13851	1					
ANR	13886	Callee	ZCSG		13851	0					
ANR	13887	Identifier	ZCSG		13851	0					
ANR	13888	ArgumentList	hash		13851	1					
ANR	13889	Argument	hash		13851	0					
ANR	13890	Identifier	hash		13851	0					
ANR	13891	CompoundStatement		3:44:109:109	13851	1					
ANR	13892	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"	1133:3:31574:31641	13851	0	True				
ANR	13893	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"		13851	0					
ANR	13894	Callee	zend_accel_error		13851	0					
ANR	13895	Identifier	zend_accel_error		13851	0					
ANR	13896	ArgumentList	ACCEL_LOG_DEBUG		13851	1					
ANR	13897	Argument	ACCEL_LOG_DEBUG		13851	0					
ANR	13898	Identifier	ACCEL_LOG_DEBUG		13851	0					
ANR	13899	Argument	"""No more entries in hash table!"""		13851	1					
ANR	13900	PrimaryExpression	"""No more entries in hash table!"""		13851	0					
ANR	13901	ExpressionStatement	ZSMMG ( memory_exhausted ) = 1	1134:3:31646:31673	13851	1	True				
ANR	13902	AssignmentExpression	ZSMMG ( memory_exhausted ) = 1		13851	0		=			
ANR	13903	CallExpression	ZSMMG ( memory_exhausted )		13851	0					
ANR	13904	Callee	ZSMMG		13851	0					
ANR	13905	Identifier	ZSMMG		13851	0					
ANR	13906	ArgumentList	memory_exhausted		13851	1					
ANR	13907	Argument	memory_exhausted		13851	0					
ANR	13908	Identifier	memory_exhausted		13851	0					
ANR	13909	PrimaryExpression	1		13851	1					
ANR	13910	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )	1135:3:31678:31738	13851	2	True				
ANR	13911	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )		13851	0					
ANR	13912	Callee	zend_accel_schedule_restart_if_necessary		13851	0					
ANR	13913	Identifier	zend_accel_schedule_restart_if_necessary		13851	0					
ANR	13914	ArgumentList	ACCEL_RESTART_HASH		13851	1					
ANR	13915	Argument	ACCEL_RESTART_HASH		13851	0					
ANR	13916	Identifier	ACCEL_RESTART_HASH		13851	0					
ANR	13917	ElseStatement	else		13851	0					
ANR	13918	CompoundStatement		8:3:294:343	13851	0					
ANR	13919	IdentifierDeclStatement	char * new_key = zend_shared_alloc ( key_length + 1 ) ;	1137:3:31754:31803	13851	0	True				
ANR	13920	IdentifierDecl	* new_key = zend_shared_alloc ( key_length + 1 )		13851	0					
ANR	13921	IdentifierDeclType	char *		13851	0					
ANR	13922	Identifier	new_key		13851	1					
ANR	13923	AssignmentExpression	* new_key = zend_shared_alloc ( key_length + 1 )		13851	2		=			
ANR	13924	Identifier	new_key		13851	0					
ANR	13925	CallExpression	zend_shared_alloc ( key_length + 1 )		13851	1					
ANR	13926	Callee	zend_shared_alloc		13851	0					
ANR	13927	Identifier	zend_shared_alloc		13851	0					
ANR	13928	ArgumentList	key_length + 1		13851	1					
ANR	13929	Argument	key_length + 1		13851	0					
ANR	13930	AdditiveExpression	key_length + 1		13851	0		+			
ANR	13931	Identifier	key_length		13851	0					
ANR	13932	PrimaryExpression	1		13851	1					
ANR	13933	IfStatement	if ( new_key )		13851	1					
ANR	13934	Condition	new_key	1138:7:31812:31818	13851	0	True				
ANR	13935	Identifier	new_key		13851	0					
ANR	13936	CompoundStatement		9:16:361:361	13851	1					
ANR	13937	ExpressionStatement	"memcpy ( new_key , key , key_length + 1 )"	1139:4:31827:31863	13851	0	True				
ANR	13938	CallExpression	"memcpy ( new_key , key , key_length + 1 )"		13851	0					
ANR	13939	Callee	memcpy		13851	0					
ANR	13940	Identifier	memcpy		13851	0					
ANR	13941	ArgumentList	new_key		13851	1					
ANR	13942	Argument	new_key		13851	0					
ANR	13943	Identifier	new_key		13851	0					
ANR	13944	Argument	key		13851	1					
ANR	13945	Identifier	key		13851	0					
ANR	13946	Argument	key_length + 1		13851	2					
ANR	13947	AdditiveExpression	key_length + 1		13851	0		+			
ANR	13948	Identifier	key_length		13851	0					
ANR	13949	PrimaryExpression	1		13851	1					
ANR	13950	IfStatement	"if ( zend_accel_hash_update ( & ZCSG ( hash ) , new_key , key_length , 1 , bucket ) )"		13851	1					
ANR	13951	Condition	"zend_accel_hash_update ( & ZCSG ( hash ) , new_key , key_length , 1 , bucket )"	1140:8:31873:31939	13851	0	True				
ANR	13952	CallExpression	"zend_accel_hash_update ( & ZCSG ( hash ) , new_key , key_length , 1 , bucket )"		13851	0					
ANR	13953	Callee	zend_accel_hash_update		13851	0					
ANR	13954	Identifier	zend_accel_hash_update		13851	0					
ANR	13955	ArgumentList	& ZCSG ( hash )		13851	1					
ANR	13956	Argument	& ZCSG ( hash )		13851	0					
ANR	13957	UnaryOperationExpression	& ZCSG ( hash )		13851	0					
ANR	13958	UnaryOperator	&		13851	0					
ANR	13959	CallExpression	ZCSG ( hash )		13851	1					
ANR	13960	Callee	ZCSG		13851	0					
ANR	13961	Identifier	ZCSG		13851	0					
ANR	13962	ArgumentList	hash		13851	1					
ANR	13963	Argument	hash		13851	0					
ANR	13964	Identifier	hash		13851	0					
ANR	13965	Argument	new_key		13851	1					
ANR	13966	Identifier	new_key		13851	0					
ANR	13967	Argument	key_length		13851	2					
ANR	13968	Identifier	key_length		13851	0					
ANR	13969	Argument	1		13851	3					
ANR	13970	PrimaryExpression	1		13851	0					
ANR	13971	Argument	bucket		13851	4					
ANR	13972	Identifier	bucket		13851	0					
ANR	13973	CompoundStatement		11:77:482:482	13851	1					
ANR	13974	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""Added key '%s'"" , new_key )"	1141:5:31949:32008	13851	0	True				
ANR	13975	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""Added key '%s'"" , new_key )"		13851	0					
ANR	13976	Callee	zend_accel_error		13851	0					
ANR	13977	Identifier	zend_accel_error		13851	0					
ANR	13978	ArgumentList	ACCEL_LOG_INFO		13851	1					
ANR	13979	Argument	ACCEL_LOG_INFO		13851	0					
ANR	13980	Identifier	ACCEL_LOG_INFO		13851	0					
ANR	13981	Argument	"""Added key '%s'"""		13851	1					
ANR	13982	PrimaryExpression	"""Added key '%s'"""		13851	0					
ANR	13983	Argument	new_key		13851	2					
ANR	13984	Identifier	new_key		13851	0					
ANR	13985	ElseStatement	else		13851	0					
ANR	13986	CompoundStatement		14:10:566:566	13851	0					
ANR	13987	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_OOM )	1144:4:32032:32091	13851	0	True				
ANR	13988	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_OOM )		13851	0					
ANR	13989	Callee	zend_accel_schedule_restart_if_necessary		13851	0					
ANR	13990	Identifier	zend_accel_schedule_restart_if_necessary		13851	0					
ANR	13991	ArgumentList	ACCEL_RESTART_OOM		13851	1					
ANR	13992	Argument	ACCEL_RESTART_OOM		13851	0					
ANR	13993	Identifier	ACCEL_RESTART_OOM		13851	0					
ANR	13994	ReturnType	static void		13851	1					
ANR	13995	Identifier	zend_accel_add_key		13851	2					
ANR	13996	ParameterList	"char * key , unsigned int key_length , zend_accel_hash_entry * bucket"		13851	3					
ANR	13997	Parameter	char * key	1129:31:31392:31400	13851	0	True				
ANR	13998	ParameterType	char *		13851	0					
ANR	13999	Identifier	key		13851	1					
ANR	14000	Parameter	unsigned int key_length	1129:42:31403:31425	13851	1	True				
ANR	14001	ParameterType	unsigned int		13851	0					
ANR	14002	Identifier	key_length		13851	1					
ANR	14003	Parameter	zend_accel_hash_entry * bucket	1129:67:31428:31456	13851	2	True				
ANR	14004	ParameterType	zend_accel_hash_entry *		13851	0					
ANR	14005	Identifier	bucket		13851	1					
ANR	14006	CFGEntryNode	ENTRY		13851		True				
ANR	14007	CFGExitNode	EXIT		13851		True				
ANR	14008	Symbol	ACCEL_RESTART_HASH		13851						
ANR	14009	Symbol	new_key		13851						
ANR	14010	Symbol	zend_shared_alloc		13851						
ANR	14011	Symbol	zend_accel_hash_update		13851						
ANR	14012	Symbol	ACCEL_RESTART_OOM		13851						
ANR	14013	Symbol	memory_exhausted		13851						
ANR	14014	Symbol	bucket		13851						
ANR	14015	Symbol	& ZCSG		13851						
ANR	14016	Symbol	ZSMMG		13851						
ANR	14017	Symbol	ACCEL_LOG_DEBUG		13851						
ANR	14018	Symbol	key_length		13851						
ANR	14019	Symbol	ACCEL_LOG_INFO		13851						
ANR	14020	Symbol	zend_accel_hash_str_find		13851						
ANR	14021	Symbol	key		13851						
ANR	14022	Symbol	hash		13851						
ANR	14023	Symbol	zend_accel_hash_is_full		13851						
ANR	14024	Function	cache_script_in_file_cache	1151:0:32139:34060							
ANR	14025	FunctionDef	"cache_script_in_file_cache (zend_persistent_script * new_persistent_script , int * from_shared_memory)"		14024	0					
ANR	14026	CompoundStatement		1152:0:32269:34060	14024	0					
ANR	14027	IdentifierDeclStatement	uint memory_used ;	1153:1:32272:32288	14024	0	True				
ANR	14028	IdentifierDecl	memory_used		14024	0					
ANR	14029	IdentifierDeclType	uint		14024	0					
ANR	14030	Identifier	memory_used		14024	1					
ANR	14031	IfStatement	if ( ! zend_accel_script_persistable ( new_persistent_script ) )		14024	1					
ANR	14032	Condition	! zend_accel_script_persistable ( new_persistent_script )	1156:5:32350:32402	14024	0	True				
ANR	14033	UnaryOperationExpression	! zend_accel_script_persistable ( new_persistent_script )		14024	0					
ANR	14034	UnaryOperator	!		14024	0					
ANR	14035	CallExpression	zend_accel_script_persistable ( new_persistent_script )		14024	1					
ANR	14036	Callee	zend_accel_script_persistable		14024	0					
ANR	14037	Identifier	zend_accel_script_persistable		14024	0					
ANR	14038	ArgumentList	new_persistent_script		14024	1					
ANR	14039	Argument	new_persistent_script		14024	0					
ANR	14040	Identifier	new_persistent_script		14024	0					
ANR	14041	CompoundStatement		5:60:135:135	14024	1					
ANR	14042	ReturnStatement	return new_persistent_script ;	1157:2:32409:32437	14024	0	True				
ANR	14043	Identifier	new_persistent_script		14024	0					
ANR	14044	IfStatement	if ( ! zend_accel_script_optimize ( new_persistent_script ) )		14024	2					
ANR	14045	Condition	! zend_accel_script_optimize ( new_persistent_script )	1160:5:32448:32497	14024	0	True				
ANR	14046	UnaryOperationExpression	! zend_accel_script_optimize ( new_persistent_script )		14024	0					
ANR	14047	UnaryOperator	!		14024	0					
ANR	14048	CallExpression	zend_accel_script_optimize ( new_persistent_script )		14024	1					
ANR	14049	Callee	zend_accel_script_optimize		14024	0					
ANR	14050	Identifier	zend_accel_script_optimize		14024	0					
ANR	14051	ArgumentList	new_persistent_script		14024	1					
ANR	14052	Argument	new_persistent_script		14024	0					
ANR	14053	Identifier	new_persistent_script		14024	0					
ANR	14054	CompoundStatement		9:57:230:230	14024	1					
ANR	14055	ReturnStatement	return new_persistent_script ;	1161:2:32504:32532	14024	0	True				
ANR	14056	Identifier	new_persistent_script		14024	0					
ANR	14057	ExpressionStatement	zend_shared_alloc_init_xlat_table ( )	1164:1:32539:32574	14024	3	True				
ANR	14058	CallExpression	zend_shared_alloc_init_xlat_table ( )		14024	0					
ANR	14059	Callee	zend_shared_alloc_init_xlat_table		14024	0					
ANR	14060	Identifier	zend_shared_alloc_init_xlat_table		14024	0					
ANR	14061	ArgumentList			14024	1					
ANR	14062	ExpressionStatement	"memory_used = zend_accel_script_persist_calc ( new_persistent_script , NULL , 0 )"	1167:1:32620:32696	14024	4	True				
ANR	14063	AssignmentExpression	"memory_used = zend_accel_script_persist_calc ( new_persistent_script , NULL , 0 )"		14024	0		=			
ANR	14064	Identifier	memory_used		14024	0					
ANR	14065	CallExpression	"zend_accel_script_persist_calc ( new_persistent_script , NULL , 0 )"		14024	1					
ANR	14066	Callee	zend_accel_script_persist_calc		14024	0					
ANR	14067	Identifier	zend_accel_script_persist_calc		14024	0					
ANR	14068	ArgumentList	new_persistent_script		14024	1					
ANR	14069	Argument	new_persistent_script		14024	0					
ANR	14070	Identifier	new_persistent_script		14024	0					
ANR	14071	Argument	NULL		14024	1					
ANR	14072	Identifier	NULL		14024	0					
ANR	14073	Argument	0		14024	2					
ANR	14074	PrimaryExpression	0		14024	0					
ANR	14075	ExpressionStatement	"ZCG ( mem ) = zend_arena_alloc ( & CG ( arena ) , memory_used + 64 )"	1172:1:32778:32835	14024	5	True				
ANR	14076	AssignmentExpression	"ZCG ( mem ) = zend_arena_alloc ( & CG ( arena ) , memory_used + 64 )"		14024	0		=			
ANR	14077	CallExpression	ZCG ( mem )		14024	0					
ANR	14078	Callee	ZCG		14024	0					
ANR	14079	Identifier	ZCG		14024	0					
ANR	14080	ArgumentList	mem		14024	1					
ANR	14081	Argument	mem		14024	0					
ANR	14082	Identifier	mem		14024	0					
ANR	14083	CallExpression	"zend_arena_alloc ( & CG ( arena ) , memory_used + 64 )"		14024	1					
ANR	14084	Callee	zend_arena_alloc		14024	0					
ANR	14085	Identifier	zend_arena_alloc		14024	0					
ANR	14086	ArgumentList	& CG ( arena )		14024	1					
ANR	14087	Argument	& CG ( arena )		14024	0					
ANR	14088	UnaryOperationExpression	& CG ( arena )		14024	0					
ANR	14089	UnaryOperator	&		14024	0					
ANR	14090	CallExpression	CG ( arena )		14024	1					
ANR	14091	Callee	CG		14024	0					
ANR	14092	Identifier	CG		14024	0					
ANR	14093	ArgumentList	arena		14024	1					
ANR	14094	Argument	arena		14024	0					
ANR	14095	Identifier	arena		14024	0					
ANR	14096	Argument	memory_used + 64		14024	1					
ANR	14097	AdditiveExpression	memory_used + 64		14024	0		+			
ANR	14098	Identifier	memory_used		14024	0					
ANR	14099	PrimaryExpression	64		14024	1					
ANR	14100	ExpressionStatement	ZCG ( mem ) = ( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )	1173:1:32838:32897	14024	6	True				
ANR	14101	AssignmentExpression	ZCG ( mem ) = ( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )		14024	0		=			
ANR	14102	CallExpression	ZCG ( mem )		14024	0					
ANR	14103	Callee	ZCG		14024	0					
ANR	14104	Identifier	ZCG		14024	0					
ANR	14105	ArgumentList	mem		14024	1					
ANR	14106	Argument	mem		14024	0					
ANR	14107	Identifier	mem		14024	0					
ANR	14108	CastExpression	( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )		14024	1					
ANR	14109	CastTarget	void *		14024	0					
ANR	14110	BitAndExpression	( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L		14024	1		&			
ANR	14111	AdditiveExpression	( zend_uintptr_t ) ZCG ( mem ) + 63L		14024	0		+			
ANR	14112	CastExpression	( zend_uintptr_t ) ZCG ( mem )		14024	0					
ANR	14113	CastTarget	zend_uintptr_t		14024	0					
ANR	14114	CallExpression	ZCG ( mem )		14024	1					
ANR	14115	Callee	ZCG		14024	0					
ANR	14116	Identifier	ZCG		14024	0					
ANR	14117	ArgumentList	mem		14024	1					
ANR	14118	Argument	mem		14024	0					
ANR	14119	Identifier	mem		14024	0					
ANR	14120	PrimaryExpression	63L		14024	1					
ANR	14121	Identifier	~63L		14024	1					
ANR	14122	ExpressionStatement	"new_persistent_script = zend_accel_script_persist ( new_persistent_script , NULL , 0 )"	1179:1:33000:33081	14024	7	True				
ANR	14123	AssignmentExpression	"new_persistent_script = zend_accel_script_persist ( new_persistent_script , NULL , 0 )"		14024	0		=			
ANR	14124	Identifier	new_persistent_script		14024	0					
ANR	14125	CallExpression	"zend_accel_script_persist ( new_persistent_script , NULL , 0 )"		14024	1					
ANR	14126	Callee	zend_accel_script_persist		14024	0					
ANR	14127	Identifier	zend_accel_script_persist		14024	0					
ANR	14128	ArgumentList	new_persistent_script		14024	1					
ANR	14129	Argument	new_persistent_script		14024	0					
ANR	14130	Identifier	new_persistent_script		14024	0					
ANR	14131	Argument	NULL		14024	1					
ANR	14132	Identifier	NULL		14024	0					
ANR	14133	Argument	0		14024	2					
ANR	14134	PrimaryExpression	0		14024	0					
ANR	14135	ExpressionStatement	zend_shared_alloc_destroy_xlat_table ( )	1181:1:33085:33123	14024	8	True				
ANR	14136	CallExpression	zend_shared_alloc_destroy_xlat_table ( )		14024	0					
ANR	14137	Callee	zend_shared_alloc_destroy_xlat_table		14024	0					
ANR	14138	Identifier	zend_shared_alloc_destroy_xlat_table		14024	0					
ANR	14139	ArgumentList			14024	1					
ANR	14140	ExpressionStatement	"new_persistent_script -> is_phar = new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"	1183:1:33127:33323	14024	9	True				
ANR	14141	AssignmentExpression	"new_persistent_script -> is_phar = new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14024	0		=			
ANR	14142	PtrMemberAccess	new_persistent_script -> is_phar		14024	0					
ANR	14143	Identifier	new_persistent_script		14024	0					
ANR	14144	Identifier	is_phar		14024	1					
ANR	14145	AndExpression	"new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14024	1		&&			
ANR	14146	PtrMemberAccess	new_persistent_script -> full_path		14024	0					
ANR	14147	Identifier	new_persistent_script		14024	0					
ANR	14148	Identifier	full_path		14024	1					
ANR	14149	AndExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14024	1		&&			
ANR	14150	CallExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" )"		14024	0					
ANR	14151	Callee	strstr		14024	0					
ANR	14152	Identifier	strstr		14024	0					
ANR	14153	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		14024	1					
ANR	14154	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		14024	0					
ANR	14155	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		14024	0					
ANR	14156	Callee	ZSTR_VAL		14024	0					
ANR	14157	Identifier	ZSTR_VAL		14024	0					
ANR	14158	ArgumentList	new_persistent_script -> full_path		14024	1					
ANR	14159	Argument	new_persistent_script -> full_path		14024	0					
ANR	14160	PtrMemberAccess	new_persistent_script -> full_path		14024	0					
ANR	14161	Identifier	new_persistent_script		14024	0					
ANR	14162	Identifier	full_path		14024	1					
ANR	14163	Argument	""".phar"""		14024	1					
ANR	14164	PrimaryExpression	""".phar"""		14024	0					
ANR	14165	UnaryOperationExpression	"! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14024	1					
ANR	14166	UnaryOperator	!		14024	0					
ANR	14167	CallExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14024	1					
ANR	14168	Callee	strstr		14024	0					
ANR	14169	Identifier	strstr		14024	0					
ANR	14170	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		14024	1					
ANR	14171	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		14024	0					
ANR	14172	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		14024	0					
ANR	14173	Callee	ZSTR_VAL		14024	0					
ANR	14174	Identifier	ZSTR_VAL		14024	0					
ANR	14175	ArgumentList	new_persistent_script -> full_path		14024	1					
ANR	14176	Argument	new_persistent_script -> full_path		14024	0					
ANR	14177	PtrMemberAccess	new_persistent_script -> full_path		14024	0					
ANR	14178	Identifier	new_persistent_script		14024	0					
ANR	14179	Identifier	full_path		14024	1					
ANR	14180	Argument	"""://"""		14024	1					
ANR	14181	PrimaryExpression	"""://"""		14024	0					
ANR	14182	IfStatement	if ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem ) )		14024	10					
ANR	14183	Condition	( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem )	1189:5:33356:33437	14024	0	True				
ANR	14184	EqualityExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem )		14024	0		!=			
ANR	14185	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		14024	0		+			
ANR	14186	CastExpression	( char * ) new_persistent_script -> mem		14024	0					
ANR	14187	CastTarget	char *		14024	0					
ANR	14188	PtrMemberAccess	new_persistent_script -> mem		14024	1					
ANR	14189	Identifier	new_persistent_script		14024	0					
ANR	14190	Identifier	mem		14024	1					
ANR	14191	PtrMemberAccess	new_persistent_script -> size		14024	1					
ANR	14192	Identifier	new_persistent_script		14024	0					
ANR	14193	Identifier	size		14024	1					
ANR	14194	CastExpression	( char * ) ZCG ( mem )		14024	1					
ANR	14195	CastTarget	char *		14024	0					
ANR	14196	CallExpression	ZCG ( mem )		14024	1					
ANR	14197	Callee	ZCG		14024	0					
ANR	14198	Identifier	ZCG		14024	0					
ANR	14199	ArgumentList	mem		14024	1					
ANR	14200	Argument	mem		14024	0					
ANR	14201	Identifier	mem		14024	0					
ANR	14202	CompoundStatement		38:89:1170:1170	14024	1					
ANR	14203	ExpressionStatement	"zend_accel_error ( ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING , ""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"" , ZSTR_VAL ( new_persistent_script -> full_path ) , new_persistent_script -> mem , ( char * ) new_persistent_script -> mem + new_persistent_script -> size , ZCG ( mem ) )"	1190:2:33444:33836	14024	0	True				
ANR	14204	CallExpression	"zend_accel_error ( ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING , ""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"" , ZSTR_VAL ( new_persistent_script -> full_path ) , new_persistent_script -> mem , ( char * ) new_persistent_script -> mem + new_persistent_script -> size , ZCG ( mem ) )"		14024	0					
ANR	14205	Callee	zend_accel_error		14024	0					
ANR	14206	Identifier	zend_accel_error		14024	0					
ANR	14207	ArgumentList	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		14024	1					
ANR	14208	Argument	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		14024	0					
ANR	14209	ConditionalExpression	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		14024	0					
ANR	14210	Condition	( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem )		14024	0					
ANR	14211	RelationalExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem )		14024	0		<			
ANR	14212	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		14024	0		+			
ANR	14213	CastExpression	( char * ) new_persistent_script -> mem		14024	0					
ANR	14214	CastTarget	char *		14024	0					
ANR	14215	PtrMemberAccess	new_persistent_script -> mem		14024	1					
ANR	14216	Identifier	new_persistent_script		14024	0					
ANR	14217	Identifier	mem		14024	1					
ANR	14218	PtrMemberAccess	new_persistent_script -> size		14024	1					
ANR	14219	Identifier	new_persistent_script		14024	0					
ANR	14220	Identifier	size		14024	1					
ANR	14221	CastExpression	( char * ) ZCG ( mem )		14024	1					
ANR	14222	CastTarget	char *		14024	0					
ANR	14223	CallExpression	ZCG ( mem )		14024	1					
ANR	14224	Callee	ZCG		14024	0					
ANR	14225	Identifier	ZCG		14024	0					
ANR	14226	ArgumentList	mem		14024	1					
ANR	14227	Argument	mem		14024	0					
ANR	14228	Identifier	mem		14024	0					
ANR	14229	Identifier	ACCEL_LOG_ERROR		14024	1					
ANR	14230	Identifier	ACCEL_LOG_WARNING		14024	2					
ANR	14231	Argument	"""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"""		14024	1					
ANR	14232	PrimaryExpression	"""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"""		14024	0					
ANR	14233	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		14024	2					
ANR	14234	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		14024	0					
ANR	14235	Callee	ZSTR_VAL		14024	0					
ANR	14236	Identifier	ZSTR_VAL		14024	0					
ANR	14237	ArgumentList	new_persistent_script -> full_path		14024	1					
ANR	14238	Argument	new_persistent_script -> full_path		14024	0					
ANR	14239	PtrMemberAccess	new_persistent_script -> full_path		14024	0					
ANR	14240	Identifier	new_persistent_script		14024	0					
ANR	14241	Identifier	full_path		14024	1					
ANR	14242	Argument	new_persistent_script -> mem		14024	3					
ANR	14243	PtrMemberAccess	new_persistent_script -> mem		14024	0					
ANR	14244	Identifier	new_persistent_script		14024	0					
ANR	14245	Identifier	mem		14024	1					
ANR	14246	Argument	( char * ) new_persistent_script -> mem + new_persistent_script -> size		14024	4					
ANR	14247	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		14024	0		+			
ANR	14248	CastExpression	( char * ) new_persistent_script -> mem		14024	0					
ANR	14249	CastTarget	char *		14024	0					
ANR	14250	PtrMemberAccess	new_persistent_script -> mem		14024	1					
ANR	14251	Identifier	new_persistent_script		14024	0					
ANR	14252	Identifier	mem		14024	1					
ANR	14253	PtrMemberAccess	new_persistent_script -> size		14024	1					
ANR	14254	Identifier	new_persistent_script		14024	0					
ANR	14255	Identifier	size		14024	1					
ANR	14256	Argument	ZCG ( mem )		14024	5					
ANR	14257	CallExpression	ZCG ( mem )		14024	0					
ANR	14258	Callee	ZCG		14024	0					
ANR	14259	Identifier	ZCG		14024	0					
ANR	14260	ArgumentList	mem		14024	1					
ANR	14261	Argument	mem		14024	0					
ANR	14262	Identifier	mem		14024	0					
ANR	14263	ExpressionStatement	new_persistent_script -> dynamic_members . checksum = zend_accel_script_checksum ( new_persistent_script )	1199:1:33843:33942	14024	11	True				
ANR	14264	AssignmentExpression	new_persistent_script -> dynamic_members . checksum = zend_accel_script_checksum ( new_persistent_script )		14024	0		=			
ANR	14265	MemberAccess	new_persistent_script -> dynamic_members . checksum		14024	0					
ANR	14266	PtrMemberAccess	new_persistent_script -> dynamic_members		14024	0					
ANR	14267	Identifier	new_persistent_script		14024	0					
ANR	14268	Identifier	dynamic_members		14024	1					
ANR	14269	Identifier	checksum		14024	1					
ANR	14270	CallExpression	zend_accel_script_checksum ( new_persistent_script )		14024	1					
ANR	14271	Callee	zend_accel_script_checksum		14024	0					
ANR	14272	Identifier	zend_accel_script_checksum		14024	0					
ANR	14273	ArgumentList	new_persistent_script		14024	1					
ANR	14274	Argument	new_persistent_script		14024	0					
ANR	14275	Identifier	new_persistent_script		14024	0					
ANR	14276	ExpressionStatement	"zend_file_cache_script_store ( new_persistent_script , 0 )"	1201:1:33946:34000	14024	12	True				
ANR	14277	CallExpression	"zend_file_cache_script_store ( new_persistent_script , 0 )"		14024	0					
ANR	14278	Callee	zend_file_cache_script_store		14024	0					
ANR	14279	Identifier	zend_file_cache_script_store		14024	0					
ANR	14280	ArgumentList	new_persistent_script		14024	1					
ANR	14281	Argument	new_persistent_script		14024	0					
ANR	14282	Identifier	new_persistent_script		14024	0					
ANR	14283	Argument	0		14024	1					
ANR	14284	PrimaryExpression	0		14024	0					
ANR	14285	ExpressionStatement	* from_shared_memory = 1	1203:1:34004:34027	14024	13	True				
ANR	14286	AssignmentExpression	* from_shared_memory = 1		14024	0		=			
ANR	14287	UnaryOperationExpression	* from_shared_memory		14024	0					
ANR	14288	UnaryOperator	*		14024	0					
ANR	14289	Identifier	from_shared_memory		14024	1					
ANR	14290	PrimaryExpression	1		14024	1					
ANR	14291	ReturnStatement	return new_persistent_script ;	1204:1:34030:34058	14024	14	True				
ANR	14292	Identifier	new_persistent_script		14024	0					
ANR	14293	ReturnType	static zend_persistent_script *		14024	1					
ANR	14294	Identifier	cache_script_in_file_cache		14024	2					
ANR	14295	ParameterList	"zend_persistent_script * new_persistent_script , int * from_shared_memory"		14024	3					
ANR	14296	Parameter	zend_persistent_script * new_persistent_script	1151:58:32197:32241	14024	0	True				
ANR	14297	ParameterType	zend_persistent_script *		14024	0					
ANR	14298	Identifier	new_persistent_script		14024	1					
ANR	14299	Parameter	int * from_shared_memory	1151:105:32244:32266	14024	1	True				
ANR	14300	ParameterType	int *		14024	0					
ANR	14301	Identifier	from_shared_memory		14024	1					
ANR	14302	CFGEntryNode	ENTRY		14024		True				
ANR	14303	CFGExitNode	EXIT		14024		True				
ANR	14304	Symbol	new_persistent_script -> full_path		14024						
ANR	14305	Symbol	arena		14024						
ANR	14306	Symbol	~63L		14024						
ANR	14307	Symbol	from_shared_memory		14024						
ANR	14308	Symbol	& CG		14024						
ANR	14309	Symbol	new_persistent_script -> mem		14024						
ANR	14310	Symbol	new_persistent_script -> is_phar		14024						
ANR	14311	Symbol	mem		14024						
ANR	14312	Symbol	ACCEL_LOG_WARNING		14024						
ANR	14313	Symbol	new_persistent_script		14024						
ANR	14314	Symbol	ACCEL_LOG_ERROR		14024						
ANR	14315	Symbol	* from_shared_memory		14024						
ANR	14316	Symbol	NULL		14024						
ANR	14317	Symbol	zend_accel_script_persistable		14024						
ANR	14318	Symbol	zend_arena_alloc		14024						
ANR	14319	Symbol	memory_used		14024						
ANR	14320	Symbol	zend_accel_script_persist_calc		14024						
ANR	14321	Symbol	ZSTR_VAL		14024						
ANR	14322	Symbol	zend_accel_script_persist		14024						
ANR	14323	Symbol	new_persistent_script -> dynamic_members		14024						
ANR	14324	Symbol	strstr		14024						
ANR	14325	Symbol	new_persistent_script -> dynamic_members . checksum		14024						
ANR	14326	Symbol	zend_accel_script_checksum		14024						
ANR	14327	Symbol	* new_persistent_script		14024						
ANR	14328	Symbol	zend_accel_script_optimize		14024						
ANR	14329	Symbol	new_persistent_script -> size		14024						
ANR	14330	Symbol	ZCG		14024						
ANR	14331	Function	cache_script_in_shared_memory	1208:0:34070:38542							
ANR	14332	FunctionDef	"cache_script_in_shared_memory (zend_persistent_script * new_persistent_script , char * key , unsigned int key_length , int * from_shared_memory)"		14331	0					
ANR	14333	CompoundStatement		1209:0:34239:38542	14331	0					
ANR	14334	IdentifierDeclStatement	zend_accel_hash_entry * bucket ;	1210:1:34242:34271	14331	0	True				
ANR	14335	IdentifierDecl	* bucket		14331	0					
ANR	14336	IdentifierDeclType	zend_accel_hash_entry *		14331	0					
ANR	14337	Identifier	bucket		14331	1					
ANR	14338	IdentifierDeclStatement	uint memory_used ;	1211:1:34274:34290	14331	1	True				
ANR	14339	IdentifierDecl	memory_used		14331	0					
ANR	14340	IdentifierDeclType	uint		14331	0					
ANR	14341	Identifier	memory_used		14331	1					
ANR	14342	IfStatement	if ( ! zend_accel_script_persistable ( new_persistent_script ) )		14331	2					
ANR	14343	Condition	! zend_accel_script_persistable ( new_persistent_script )	1214:5:34352:34404	14331	0	True				
ANR	14344	UnaryOperationExpression	! zend_accel_script_persistable ( new_persistent_script )		14331	0					
ANR	14345	UnaryOperator	!		14331	0					
ANR	14346	CallExpression	zend_accel_script_persistable ( new_persistent_script )		14331	1					
ANR	14347	Callee	zend_accel_script_persistable		14331	0					
ANR	14348	Identifier	zend_accel_script_persistable		14331	0					
ANR	14349	ArgumentList	new_persistent_script		14331	1					
ANR	14350	Argument	new_persistent_script		14331	0					
ANR	14351	Identifier	new_persistent_script		14331	0					
ANR	14352	CompoundStatement		6:60:167:167	14331	1					
ANR	14353	ReturnStatement	return new_persistent_script ;	1215:2:34411:34439	14331	0	True				
ANR	14354	Identifier	new_persistent_script		14331	0					
ANR	14355	IfStatement	if ( ! zend_accel_script_optimize ( new_persistent_script ) )		14331	3					
ANR	14356	Condition	! zend_accel_script_optimize ( new_persistent_script )	1218:5:34450:34499	14331	0	True				
ANR	14357	UnaryOperationExpression	! zend_accel_script_optimize ( new_persistent_script )		14331	0					
ANR	14358	UnaryOperator	!		14331	0					
ANR	14359	CallExpression	zend_accel_script_optimize ( new_persistent_script )		14331	1					
ANR	14360	Callee	zend_accel_script_optimize		14331	0					
ANR	14361	Identifier	zend_accel_script_optimize		14331	0					
ANR	14362	ArgumentList	new_persistent_script		14331	1					
ANR	14363	Argument	new_persistent_script		14331	0					
ANR	14364	Identifier	new_persistent_script		14331	0					
ANR	14365	CompoundStatement		10:57:262:262	14331	1					
ANR	14366	ReturnStatement	return new_persistent_script ;	1219:2:34506:34534	14331	0	True				
ANR	14367	Identifier	new_persistent_script		14331	0					
ANR	14368	ExpressionStatement	zend_shared_alloc_lock ( )	1223:1:34563:34587	14331	4	True				
ANR	14369	CallExpression	zend_shared_alloc_lock ( )		14331	0					
ANR	14370	Callee	zend_shared_alloc_lock		14331	0					
ANR	14371	Identifier	zend_shared_alloc_lock		14331	0					
ANR	14372	ArgumentList			14331	1					
ANR	14373	IfStatement	if ( zend_accel_hash_is_full ( & ZCSG ( hash ) ) )		14331	5					
ANR	14374	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )	1225:5:34595:34630	14331	0	True				
ANR	14375	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		14331	0					
ANR	14376	Callee	zend_accel_hash_is_full		14331	0					
ANR	14377	Identifier	zend_accel_hash_is_full		14331	0					
ANR	14378	ArgumentList	& ZCSG ( hash )		14331	1					
ANR	14379	Argument	& ZCSG ( hash )		14331	0					
ANR	14380	UnaryOperationExpression	& ZCSG ( hash )		14331	0					
ANR	14381	UnaryOperator	&		14331	0					
ANR	14382	CallExpression	ZCSG ( hash )		14331	1					
ANR	14383	Callee	ZCSG		14331	0					
ANR	14384	Identifier	ZCSG		14331	0					
ANR	14385	ArgumentList	hash		14331	1					
ANR	14386	Argument	hash		14331	0					
ANR	14387	Identifier	hash		14331	0					
ANR	14388	CompoundStatement		17:43:393:393	14331	1					
ANR	14389	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"	1226:2:34637:34704	14331	0	True				
ANR	14390	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"		14331	0					
ANR	14391	Callee	zend_accel_error		14331	0					
ANR	14392	Identifier	zend_accel_error		14331	0					
ANR	14393	ArgumentList	ACCEL_LOG_DEBUG		14331	1					
ANR	14394	Argument	ACCEL_LOG_DEBUG		14331	0					
ANR	14395	Identifier	ACCEL_LOG_DEBUG		14331	0					
ANR	14396	Argument	"""No more entries in hash table!"""		14331	1					
ANR	14397	PrimaryExpression	"""No more entries in hash table!"""		14331	0					
ANR	14398	ExpressionStatement	ZSMMG ( memory_exhausted ) = 1	1227:2:34708:34735	14331	1	True				
ANR	14399	AssignmentExpression	ZSMMG ( memory_exhausted ) = 1		14331	0		=			
ANR	14400	CallExpression	ZSMMG ( memory_exhausted )		14331	0					
ANR	14401	Callee	ZSMMG		14331	0					
ANR	14402	Identifier	ZSMMG		14331	0					
ANR	14403	ArgumentList	memory_exhausted		14331	1					
ANR	14404	Argument	memory_exhausted		14331	0					
ANR	14405	Identifier	memory_exhausted		14331	0					
ANR	14406	PrimaryExpression	1		14331	1					
ANR	14407	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )	1228:2:34739:34799	14331	2	True				
ANR	14408	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )		14331	0					
ANR	14409	Callee	zend_accel_schedule_restart_if_necessary		14331	0					
ANR	14410	Identifier	zend_accel_schedule_restart_if_necessary		14331	0					
ANR	14411	ArgumentList	ACCEL_RESTART_HASH		14331	1					
ANR	14412	Argument	ACCEL_RESTART_HASH		14331	0					
ANR	14413	Identifier	ACCEL_RESTART_HASH		14331	0					
ANR	14414	ExpressionStatement	zend_shared_alloc_unlock ( )	1229:2:34803:34829	14331	3	True				
ANR	14415	CallExpression	zend_shared_alloc_unlock ( )		14331	0					
ANR	14416	Callee	zend_shared_alloc_unlock		14331	0					
ANR	14417	Identifier	zend_shared_alloc_unlock		14331	0					
ANR	14418	ArgumentList			14331	1					
ANR	14419	ReturnStatement	return new_persistent_script ;	1230:2:34833:34861	14331	4	True				
ANR	14420	Identifier	new_persistent_script		14331	0					
ANR	14421	ExpressionStatement	"bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , new_persistent_script -> full_path )"	1236:1:35034:35116	14331	6	True				
ANR	14422	AssignmentExpression	"bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , new_persistent_script -> full_path )"		14331	0		=			
ANR	14423	Identifier	bucket		14331	0					
ANR	14424	CallExpression	"zend_accel_hash_find_entry ( & ZCSG ( hash ) , new_persistent_script -> full_path )"		14331	1					
ANR	14425	Callee	zend_accel_hash_find_entry		14331	0					
ANR	14426	Identifier	zend_accel_hash_find_entry		14331	0					
ANR	14427	ArgumentList	& ZCSG ( hash )		14331	1					
ANR	14428	Argument	& ZCSG ( hash )		14331	0					
ANR	14429	UnaryOperationExpression	& ZCSG ( hash )		14331	0					
ANR	14430	UnaryOperator	&		14331	0					
ANR	14431	CallExpression	ZCSG ( hash )		14331	1					
ANR	14432	Callee	ZCSG		14331	0					
ANR	14433	Identifier	ZCSG		14331	0					
ANR	14434	ArgumentList	hash		14331	1					
ANR	14435	Argument	hash		14331	0					
ANR	14436	Identifier	hash		14331	0					
ANR	14437	Argument	new_persistent_script -> full_path		14331	1					
ANR	14438	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14439	Identifier	new_persistent_script		14331	0					
ANR	14440	Identifier	full_path		14331	1					
ANR	14441	IfStatement	if ( bucket )		14331	7					
ANR	14442	Condition	bucket	1237:5:35123:35128	14331	0	True				
ANR	14443	Identifier	bucket		14331	0					
ANR	14444	CompoundStatement		30:2:895:986	14331	1					
ANR	14445	IdentifierDeclStatement	zend_persistent_script * existing_persistent_script = ( zend_persistent_script * ) bucket -> data ;	1238:2:35135:35226	14331	0	True				
ANR	14446	IdentifierDecl	* existing_persistent_script = ( zend_persistent_script * ) bucket -> data		14331	0					
ANR	14447	IdentifierDeclType	zend_persistent_script *		14331	0					
ANR	14448	Identifier	existing_persistent_script		14331	1					
ANR	14449	AssignmentExpression	* existing_persistent_script = ( zend_persistent_script * ) bucket -> data		14331	2		=			
ANR	14450	Identifier	existing_persistent_script		14331	0					
ANR	14451	CastExpression	( zend_persistent_script * ) bucket -> data		14331	1					
ANR	14452	CastTarget	zend_persistent_script *		14331	0					
ANR	14453	PtrMemberAccess	bucket -> data		14331	1					
ANR	14454	Identifier	bucket		14331	0					
ANR	14455	Identifier	data		14331	1					
ANR	14456	IfStatement	if ( ! existing_persistent_script -> corrupted )		14331	1					
ANR	14457	Condition	! existing_persistent_script -> corrupted	1240:6:35235:35272	14331	0	True				
ANR	14458	UnaryOperationExpression	! existing_persistent_script -> corrupted		14331	0					
ANR	14459	UnaryOperator	!		14331	0					
ANR	14460	PtrMemberAccess	existing_persistent_script -> corrupted		14331	1					
ANR	14461	Identifier	existing_persistent_script		14331	0					
ANR	14462	Identifier	corrupted		14331	1					
ANR	14463	CompoundStatement		32:46:1035:1035	14331	1					
ANR	14464	IfStatement	if ( key && ( ! ZCG ( accel_directives ) . validate_timestamps || ( new_persistent_script -> timestamp == existing_persistent_script -> timestamp ) ) )		14331	0					
ANR	14465	Condition	key && ( ! ZCG ( accel_directives ) . validate_timestamps || ( new_persistent_script -> timestamp == existing_persistent_script -> timestamp ) )	1241:7:35284:35428	14331	0	True				
ANR	14466	AndExpression	key && ( ! ZCG ( accel_directives ) . validate_timestamps || ( new_persistent_script -> timestamp == existing_persistent_script -> timestamp ) )		14331	0		&&			
ANR	14467	Identifier	key		14331	0					
ANR	14468	OrExpression	! ZCG ( accel_directives ) . validate_timestamps || ( new_persistent_script -> timestamp == existing_persistent_script -> timestamp )		14331	1		||			
ANR	14469	UnaryOperationExpression	! ZCG ( accel_directives ) . validate_timestamps		14331	0					
ANR	14470	UnaryOperator	!		14331	0					
ANR	14471	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		14331	1					
ANR	14472	CallExpression	ZCG ( accel_directives )		14331	0					
ANR	14473	Callee	ZCG		14331	0					
ANR	14474	Identifier	ZCG		14331	0					
ANR	14475	ArgumentList	accel_directives		14331	1					
ANR	14476	Argument	accel_directives		14331	0					
ANR	14477	Identifier	accel_directives		14331	0					
ANR	14478	Identifier	validate_timestamps		14331	1					
ANR	14479	EqualityExpression	new_persistent_script -> timestamp == existing_persistent_script -> timestamp		14331	1		==			
ANR	14480	PtrMemberAccess	new_persistent_script -> timestamp		14331	0					
ANR	14481	Identifier	new_persistent_script		14331	0					
ANR	14482	Identifier	timestamp		14331	1					
ANR	14483	PtrMemberAccess	existing_persistent_script -> timestamp		14331	1					
ANR	14484	Identifier	existing_persistent_script		14331	0					
ANR	14485	Identifier	timestamp		14331	1					
ANR	14486	CompoundStatement		35:86:1191:1191	14331	1					
ANR	14487	ExpressionStatement	"zend_accel_add_key ( key , key_length , bucket )"	1244:4:35437:35480	14331	0	True				
ANR	14488	CallExpression	"zend_accel_add_key ( key , key_length , bucket )"		14331	0					
ANR	14489	Callee	zend_accel_add_key		14331	0					
ANR	14490	Identifier	zend_accel_add_key		14331	0					
ANR	14491	ArgumentList	key		14331	1					
ANR	14492	Argument	key		14331	0					
ANR	14493	Identifier	key		14331	0					
ANR	14494	Argument	key_length		14331	1					
ANR	14495	Identifier	key_length		14331	0					
ANR	14496	Argument	bucket		14331	2					
ANR	14497	Identifier	bucket		14331	0					
ANR	14498	ExpressionStatement	zend_shared_alloc_unlock ( )	1246:3:35490:35516	14331	1	True				
ANR	14499	CallExpression	zend_shared_alloc_unlock ( )		14331	0					
ANR	14500	Callee	zend_shared_alloc_unlock		14331	0					
ANR	14501	Identifier	zend_shared_alloc_unlock		14331	0					
ANR	14502	ArgumentList			14331	1					
ANR	14503	ReturnStatement	return new_persistent_script ;	1247:3:35521:35549	14331	2	True				
ANR	14504	Identifier	new_persistent_script		14331	0					
ANR	14505	ExpressionStatement	zend_shared_alloc_init_xlat_table ( )	1252:1:35561:35596	14331	8	True				
ANR	14506	CallExpression	zend_shared_alloc_init_xlat_table ( )		14331	0					
ANR	14507	Callee	zend_shared_alloc_init_xlat_table		14331	0					
ANR	14508	Identifier	zend_shared_alloc_init_xlat_table		14331	0					
ANR	14509	ArgumentList			14331	1					
ANR	14510	ExpressionStatement	"memory_used = zend_accel_script_persist_calc ( new_persistent_script , key , key_length )"	1255:1:35642:35726	14331	9	True				
ANR	14511	AssignmentExpression	"memory_used = zend_accel_script_persist_calc ( new_persistent_script , key , key_length )"		14331	0		=			
ANR	14512	Identifier	memory_used		14331	0					
ANR	14513	CallExpression	"zend_accel_script_persist_calc ( new_persistent_script , key , key_length )"		14331	1					
ANR	14514	Callee	zend_accel_script_persist_calc		14331	0					
ANR	14515	Identifier	zend_accel_script_persist_calc		14331	0					
ANR	14516	ArgumentList	new_persistent_script		14331	1					
ANR	14517	Argument	new_persistent_script		14331	0					
ANR	14518	Identifier	new_persistent_script		14331	0					
ANR	14519	Argument	key		14331	1					
ANR	14520	Identifier	key		14331	0					
ANR	14521	Argument	key_length		14331	2					
ANR	14522	Identifier	key_length		14331	0					
ANR	14523	ExpressionStatement	ZCG ( mem ) = zend_shared_alloc ( memory_used + 64 )	1260:1:35809:35855	14331	10	True				
ANR	14524	AssignmentExpression	ZCG ( mem ) = zend_shared_alloc ( memory_used + 64 )		14331	0		=			
ANR	14525	CallExpression	ZCG ( mem )		14331	0					
ANR	14526	Callee	ZCG		14331	0					
ANR	14527	Identifier	ZCG		14331	0					
ANR	14528	ArgumentList	mem		14331	1					
ANR	14529	Argument	mem		14331	0					
ANR	14530	Identifier	mem		14331	0					
ANR	14531	CallExpression	zend_shared_alloc ( memory_used + 64 )		14331	1					
ANR	14532	Callee	zend_shared_alloc		14331	0					
ANR	14533	Identifier	zend_shared_alloc		14331	0					
ANR	14534	ArgumentList	memory_used + 64		14331	1					
ANR	14535	Argument	memory_used + 64		14331	0					
ANR	14536	AdditiveExpression	memory_used + 64		14331	0		+			
ANR	14537	Identifier	memory_used		14331	0					
ANR	14538	PrimaryExpression	64		14331	1					
ANR	14539	ExpressionStatement	ZCG ( mem ) = ( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )	1261:1:35858:35917	14331	11	True				
ANR	14540	AssignmentExpression	ZCG ( mem ) = ( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )		14331	0		=			
ANR	14541	CallExpression	ZCG ( mem )		14331	0					
ANR	14542	Callee	ZCG		14331	0					
ANR	14543	Identifier	ZCG		14331	0					
ANR	14544	ArgumentList	mem		14331	1					
ANR	14545	Argument	mem		14331	0					
ANR	14546	Identifier	mem		14331	0					
ANR	14547	CastExpression	( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )		14331	1					
ANR	14548	CastTarget	void *		14331	0					
ANR	14549	BitAndExpression	( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L		14331	1		&			
ANR	14550	AdditiveExpression	( zend_uintptr_t ) ZCG ( mem ) + 63L		14331	0		+			
ANR	14551	CastExpression	( zend_uintptr_t ) ZCG ( mem )		14331	0					
ANR	14552	CastTarget	zend_uintptr_t		14331	0					
ANR	14553	CallExpression	ZCG ( mem )		14331	1					
ANR	14554	Callee	ZCG		14331	0					
ANR	14555	Identifier	ZCG		14331	0					
ANR	14556	ArgumentList	mem		14331	1					
ANR	14557	Argument	mem		14331	0					
ANR	14558	Identifier	mem		14331	0					
ANR	14559	PrimaryExpression	63L		14331	1					
ANR	14560	Identifier	~63L		14331	1					
ANR	14561	IfStatement	if ( ! ZCG ( mem ) )		14331	12					
ANR	14562	Condition	! ZCG ( mem )	1265:5:35981:35989	14331	0	True				
ANR	14563	UnaryOperationExpression	! ZCG ( mem )		14331	0					
ANR	14564	UnaryOperator	!		14331	0					
ANR	14565	CallExpression	ZCG ( mem )		14331	1					
ANR	14566	Callee	ZCG		14331	0					
ANR	14567	Identifier	ZCG		14331	0					
ANR	14568	ArgumentList	mem		14331	1					
ANR	14569	Argument	mem		14331	0					
ANR	14570	Identifier	mem		14331	0					
ANR	14571	CompoundStatement		57:16:1752:1752	14331	1					
ANR	14572	ExpressionStatement	zend_shared_alloc_destroy_xlat_table ( )	1266:2:35996:36034	14331	0	True				
ANR	14573	CallExpression	zend_shared_alloc_destroy_xlat_table ( )		14331	0					
ANR	14574	Callee	zend_shared_alloc_destroy_xlat_table		14331	0					
ANR	14575	Identifier	zend_shared_alloc_destroy_xlat_table		14331	0					
ANR	14576	ArgumentList			14331	1					
ANR	14577	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_OOM )	1267:2:36038:36097	14331	1	True				
ANR	14578	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_OOM )		14331	0					
ANR	14579	Callee	zend_accel_schedule_restart_if_necessary		14331	0					
ANR	14580	Identifier	zend_accel_schedule_restart_if_necessary		14331	0					
ANR	14581	ArgumentList	ACCEL_RESTART_OOM		14331	1					
ANR	14582	Argument	ACCEL_RESTART_OOM		14331	0					
ANR	14583	Identifier	ACCEL_RESTART_OOM		14331	0					
ANR	14584	ExpressionStatement	zend_shared_alloc_unlock ( )	1268:2:36101:36127	14331	2	True				
ANR	14585	CallExpression	zend_shared_alloc_unlock ( )		14331	0					
ANR	14586	Callee	zend_shared_alloc_unlock		14331	0					
ANR	14587	Identifier	zend_shared_alloc_unlock		14331	0					
ANR	14588	ArgumentList			14331	1					
ANR	14589	ReturnStatement	return new_persistent_script ;	1269:2:36131:36159	14331	3	True				
ANR	14590	Identifier	new_persistent_script		14331	0					
ANR	14591	ExpressionStatement	"new_persistent_script = zend_accel_script_persist ( new_persistent_script , & key , key_length )"	1273:1:36197:36287	14331	13	True				
ANR	14592	AssignmentExpression	"new_persistent_script = zend_accel_script_persist ( new_persistent_script , & key , key_length )"		14331	0		=			
ANR	14593	Identifier	new_persistent_script		14331	0					
ANR	14594	CallExpression	"zend_accel_script_persist ( new_persistent_script , & key , key_length )"		14331	1					
ANR	14595	Callee	zend_accel_script_persist		14331	0					
ANR	14596	Identifier	zend_accel_script_persist		14331	0					
ANR	14597	ArgumentList	new_persistent_script		14331	1					
ANR	14598	Argument	new_persistent_script		14331	0					
ANR	14599	Identifier	new_persistent_script		14331	0					
ANR	14600	Argument	& key		14331	1					
ANR	14601	UnaryOperationExpression	& key		14331	0					
ANR	14602	UnaryOperator	&		14331	0					
ANR	14603	Identifier	key		14331	1					
ANR	14604	Argument	key_length		14331	2					
ANR	14605	Identifier	key_length		14331	0					
ANR	14606	ExpressionStatement	zend_shared_alloc_destroy_xlat_table ( )	1275:1:36291:36329	14331	14	True				
ANR	14607	CallExpression	zend_shared_alloc_destroy_xlat_table ( )		14331	0					
ANR	14608	Callee	zend_shared_alloc_destroy_xlat_table		14331	0					
ANR	14609	Identifier	zend_shared_alloc_destroy_xlat_table		14331	0					
ANR	14610	ArgumentList			14331	1					
ANR	14611	ExpressionStatement	"new_persistent_script -> is_phar = new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"	1277:1:36333:36529	14331	15	True				
ANR	14612	AssignmentExpression	"new_persistent_script -> is_phar = new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14331	0		=			
ANR	14613	PtrMemberAccess	new_persistent_script -> is_phar		14331	0					
ANR	14614	Identifier	new_persistent_script		14331	0					
ANR	14615	Identifier	is_phar		14331	1					
ANR	14616	AndExpression	"new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14331	1		&&			
ANR	14617	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14618	Identifier	new_persistent_script		14331	0					
ANR	14619	Identifier	full_path		14331	1					
ANR	14620	AndExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14331	1		&&			
ANR	14621	CallExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" )"		14331	0					
ANR	14622	Callee	strstr		14331	0					
ANR	14623	Identifier	strstr		14331	0					
ANR	14624	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		14331	1					
ANR	14625	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		14331	0					
ANR	14626	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		14331	0					
ANR	14627	Callee	ZSTR_VAL		14331	0					
ANR	14628	Identifier	ZSTR_VAL		14331	0					
ANR	14629	ArgumentList	new_persistent_script -> full_path		14331	1					
ANR	14630	Argument	new_persistent_script -> full_path		14331	0					
ANR	14631	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14632	Identifier	new_persistent_script		14331	0					
ANR	14633	Identifier	full_path		14331	1					
ANR	14634	Argument	""".phar"""		14331	1					
ANR	14635	PrimaryExpression	""".phar"""		14331	0					
ANR	14636	UnaryOperationExpression	"! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14331	1					
ANR	14637	UnaryOperator	!		14331	0					
ANR	14638	CallExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		14331	1					
ANR	14639	Callee	strstr		14331	0					
ANR	14640	Identifier	strstr		14331	0					
ANR	14641	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		14331	1					
ANR	14642	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		14331	0					
ANR	14643	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		14331	0					
ANR	14644	Callee	ZSTR_VAL		14331	0					
ANR	14645	Identifier	ZSTR_VAL		14331	0					
ANR	14646	ArgumentList	new_persistent_script -> full_path		14331	1					
ANR	14647	Argument	new_persistent_script -> full_path		14331	0					
ANR	14648	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14649	Identifier	new_persistent_script		14331	0					
ANR	14650	Identifier	full_path		14331	1					
ANR	14651	Argument	"""://"""		14331	1					
ANR	14652	PrimaryExpression	"""://"""		14331	0					
ANR	14653	IfStatement	if ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem ) )		14331	16					
ANR	14654	Condition	( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem )	1283:5:36562:36643	14331	0	True				
ANR	14655	EqualityExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem )		14331	0		!=			
ANR	14656	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		14331	0		+			
ANR	14657	CastExpression	( char * ) new_persistent_script -> mem		14331	0					
ANR	14658	CastTarget	char *		14331	0					
ANR	14659	PtrMemberAccess	new_persistent_script -> mem		14331	1					
ANR	14660	Identifier	new_persistent_script		14331	0					
ANR	14661	Identifier	mem		14331	1					
ANR	14662	PtrMemberAccess	new_persistent_script -> size		14331	1					
ANR	14663	Identifier	new_persistent_script		14331	0					
ANR	14664	Identifier	size		14331	1					
ANR	14665	CastExpression	( char * ) ZCG ( mem )		14331	1					
ANR	14666	CastTarget	char *		14331	0					
ANR	14667	CallExpression	ZCG ( mem )		14331	1					
ANR	14668	Callee	ZCG		14331	0					
ANR	14669	Identifier	ZCG		14331	0					
ANR	14670	ArgumentList	mem		14331	1					
ANR	14671	Argument	mem		14331	0					
ANR	14672	Identifier	mem		14331	0					
ANR	14673	CompoundStatement		75:89:2406:2406	14331	1					
ANR	14674	ExpressionStatement	"zend_accel_error ( ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING , ""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"" , ZSTR_VAL ( new_persistent_script -> full_path ) , new_persistent_script -> mem , ( char * ) new_persistent_script -> mem + new_persistent_script -> size , ZCG ( mem ) )"	1284:2:36650:37042	14331	0	True				
ANR	14675	CallExpression	"zend_accel_error ( ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING , ""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"" , ZSTR_VAL ( new_persistent_script -> full_path ) , new_persistent_script -> mem , ( char * ) new_persistent_script -> mem + new_persistent_script -> size , ZCG ( mem ) )"		14331	0					
ANR	14676	Callee	zend_accel_error		14331	0					
ANR	14677	Identifier	zend_accel_error		14331	0					
ANR	14678	ArgumentList	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		14331	1					
ANR	14679	Argument	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		14331	0					
ANR	14680	ConditionalExpression	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		14331	0					
ANR	14681	Condition	( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem )		14331	0					
ANR	14682	RelationalExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem )		14331	0		<			
ANR	14683	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		14331	0		+			
ANR	14684	CastExpression	( char * ) new_persistent_script -> mem		14331	0					
ANR	14685	CastTarget	char *		14331	0					
ANR	14686	PtrMemberAccess	new_persistent_script -> mem		14331	1					
ANR	14687	Identifier	new_persistent_script		14331	0					
ANR	14688	Identifier	mem		14331	1					
ANR	14689	PtrMemberAccess	new_persistent_script -> size		14331	1					
ANR	14690	Identifier	new_persistent_script		14331	0					
ANR	14691	Identifier	size		14331	1					
ANR	14692	CastExpression	( char * ) ZCG ( mem )		14331	1					
ANR	14693	CastTarget	char *		14331	0					
ANR	14694	CallExpression	ZCG ( mem )		14331	1					
ANR	14695	Callee	ZCG		14331	0					
ANR	14696	Identifier	ZCG		14331	0					
ANR	14697	ArgumentList	mem		14331	1					
ANR	14698	Argument	mem		14331	0					
ANR	14699	Identifier	mem		14331	0					
ANR	14700	Identifier	ACCEL_LOG_ERROR		14331	1					
ANR	14701	Identifier	ACCEL_LOG_WARNING		14331	2					
ANR	14702	Argument	"""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"""		14331	1					
ANR	14703	PrimaryExpression	"""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"""		14331	0					
ANR	14704	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		14331	2					
ANR	14705	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		14331	0					
ANR	14706	Callee	ZSTR_VAL		14331	0					
ANR	14707	Identifier	ZSTR_VAL		14331	0					
ANR	14708	ArgumentList	new_persistent_script -> full_path		14331	1					
ANR	14709	Argument	new_persistent_script -> full_path		14331	0					
ANR	14710	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14711	Identifier	new_persistent_script		14331	0					
ANR	14712	Identifier	full_path		14331	1					
ANR	14713	Argument	new_persistent_script -> mem		14331	3					
ANR	14714	PtrMemberAccess	new_persistent_script -> mem		14331	0					
ANR	14715	Identifier	new_persistent_script		14331	0					
ANR	14716	Identifier	mem		14331	1					
ANR	14717	Argument	( char * ) new_persistent_script -> mem + new_persistent_script -> size		14331	4					
ANR	14718	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		14331	0		+			
ANR	14719	CastExpression	( char * ) new_persistent_script -> mem		14331	0					
ANR	14720	CastTarget	char *		14331	0					
ANR	14721	PtrMemberAccess	new_persistent_script -> mem		14331	1					
ANR	14722	Identifier	new_persistent_script		14331	0					
ANR	14723	Identifier	mem		14331	1					
ANR	14724	PtrMemberAccess	new_persistent_script -> size		14331	1					
ANR	14725	Identifier	new_persistent_script		14331	0					
ANR	14726	Identifier	size		14331	1					
ANR	14727	Argument	ZCG ( mem )		14331	5					
ANR	14728	CallExpression	ZCG ( mem )		14331	0					
ANR	14729	Callee	ZCG		14331	0					
ANR	14730	Identifier	ZCG		14331	0					
ANR	14731	ArgumentList	mem		14331	1					
ANR	14732	Argument	mem		14331	0					
ANR	14733	Identifier	mem		14331	0					
ANR	14734	ExpressionStatement	new_persistent_script -> dynamic_members . checksum = zend_accel_script_checksum ( new_persistent_script )	1293:1:37049:37148	14331	17	True				
ANR	14735	AssignmentExpression	new_persistent_script -> dynamic_members . checksum = zend_accel_script_checksum ( new_persistent_script )		14331	0		=			
ANR	14736	MemberAccess	new_persistent_script -> dynamic_members . checksum		14331	0					
ANR	14737	PtrMemberAccess	new_persistent_script -> dynamic_members		14331	0					
ANR	14738	Identifier	new_persistent_script		14331	0					
ANR	14739	Identifier	dynamic_members		14331	1					
ANR	14740	Identifier	checksum		14331	1					
ANR	14741	CallExpression	zend_accel_script_checksum ( new_persistent_script )		14331	1					
ANR	14742	Callee	zend_accel_script_checksum		14331	0					
ANR	14743	Identifier	zend_accel_script_checksum		14331	0					
ANR	14744	ArgumentList	new_persistent_script		14331	1					
ANR	14745	Argument	new_persistent_script		14331	0					
ANR	14746	Identifier	new_persistent_script		14331	0					
ANR	14747	ExpressionStatement	"bucket = zend_accel_hash_update ( & ZCSG ( hash ) , ZSTR_VAL ( new_persistent_script -> full_path ) , ZSTR_LEN ( new_persistent_script -> full_path ) , 0 , new_persistent_script )"	1296:1:37200:37358	14331	18	True				
ANR	14748	AssignmentExpression	"bucket = zend_accel_hash_update ( & ZCSG ( hash ) , ZSTR_VAL ( new_persistent_script -> full_path ) , ZSTR_LEN ( new_persistent_script -> full_path ) , 0 , new_persistent_script )"		14331	0		=			
ANR	14749	Identifier	bucket		14331	0					
ANR	14750	CallExpression	"zend_accel_hash_update ( & ZCSG ( hash ) , ZSTR_VAL ( new_persistent_script -> full_path ) , ZSTR_LEN ( new_persistent_script -> full_path ) , 0 , new_persistent_script )"		14331	1					
ANR	14751	Callee	zend_accel_hash_update		14331	0					
ANR	14752	Identifier	zend_accel_hash_update		14331	0					
ANR	14753	ArgumentList	& ZCSG ( hash )		14331	1					
ANR	14754	Argument	& ZCSG ( hash )		14331	0					
ANR	14755	UnaryOperationExpression	& ZCSG ( hash )		14331	0					
ANR	14756	UnaryOperator	&		14331	0					
ANR	14757	CallExpression	ZCSG ( hash )		14331	1					
ANR	14758	Callee	ZCSG		14331	0					
ANR	14759	Identifier	ZCSG		14331	0					
ANR	14760	ArgumentList	hash		14331	1					
ANR	14761	Argument	hash		14331	0					
ANR	14762	Identifier	hash		14331	0					
ANR	14763	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		14331	1					
ANR	14764	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		14331	0					
ANR	14765	Callee	ZSTR_VAL		14331	0					
ANR	14766	Identifier	ZSTR_VAL		14331	0					
ANR	14767	ArgumentList	new_persistent_script -> full_path		14331	1					
ANR	14768	Argument	new_persistent_script -> full_path		14331	0					
ANR	14769	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14770	Identifier	new_persistent_script		14331	0					
ANR	14771	Identifier	full_path		14331	1					
ANR	14772	Argument	ZSTR_LEN ( new_persistent_script -> full_path )		14331	2					
ANR	14773	CallExpression	ZSTR_LEN ( new_persistent_script -> full_path )		14331	0					
ANR	14774	Callee	ZSTR_LEN		14331	0					
ANR	14775	Identifier	ZSTR_LEN		14331	0					
ANR	14776	ArgumentList	new_persistent_script -> full_path		14331	1					
ANR	14777	Argument	new_persistent_script -> full_path		14331	0					
ANR	14778	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14779	Identifier	new_persistent_script		14331	0					
ANR	14780	Identifier	full_path		14331	1					
ANR	14781	Argument	0		14331	3					
ANR	14782	PrimaryExpression	0		14331	0					
ANR	14783	Argument	new_persistent_script		14331	4					
ANR	14784	Identifier	new_persistent_script		14331	0					
ANR	14785	IfStatement	if ( bucket )		14331	19					
ANR	14786	Condition	bucket	1297:5:37365:37370	14331	0	True				
ANR	14787	Identifier	bucket		14331	0					
ANR	14788	CompoundStatement		89:13:3133:3133	14331	1					
ANR	14789	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""Cached script '%s'"" , new_persistent_script -> full_path )"	1298:2:37377:37465	14331	0	True				
ANR	14790	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""Cached script '%s'"" , new_persistent_script -> full_path )"		14331	0					
ANR	14791	Callee	zend_accel_error		14331	0					
ANR	14792	Identifier	zend_accel_error		14331	0					
ANR	14793	ArgumentList	ACCEL_LOG_INFO		14331	1					
ANR	14794	Argument	ACCEL_LOG_INFO		14331	0					
ANR	14795	Identifier	ACCEL_LOG_INFO		14331	0					
ANR	14796	Argument	"""Cached script '%s'"""		14331	1					
ANR	14797	PrimaryExpression	"""Cached script '%s'"""		14331	0					
ANR	14798	Argument	new_persistent_script -> full_path		14331	2					
ANR	14799	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14800	Identifier	new_persistent_script		14331	0					
ANR	14801	Identifier	full_path		14331	1					
ANR	14802	IfStatement	"if ( key && memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0 && ( ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0 ) )"		14331	1					
ANR	14803	Condition	"key && memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0 && ( ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0 )"	1299:6:37473:37769	14331	0	True				
ANR	14804	AndExpression	"key && memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0 && ( ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0 )"		14331	0		&&			
ANR	14805	Identifier	key		14331	0					
ANR	14806	AndExpression	"memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0 && ( ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0 )"		14331	1		&&			
ANR	14807	EqualityExpression	"memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0"		14331	0		!=			
ANR	14808	CallExpression	"memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"		14331	0					
ANR	14809	Callee	memcmp		14331	0					
ANR	14810	Identifier	memcmp		14331	0					
ANR	14811	ArgumentList	key		14331	1					
ANR	14812	Argument	key		14331	0					
ANR	14813	Identifier	key		14331	0					
ANR	14814	Argument	"""phar://"""		14331	1					
ANR	14815	PrimaryExpression	"""phar://"""		14331	0					
ANR	14816	Argument	"sizeof ( ""phar://"" ) - 1"		14331	2					
ANR	14817	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		14331	0		-			
ANR	14818	SizeofExpression	"sizeof ( ""phar://"" )"		14331	0					
ANR	14819	Sizeof	sizeof		14331	0					
ANR	14820	PrimaryExpression	"""phar://"""		14331	1					
ANR	14821	PrimaryExpression	1		14331	1					
ANR	14822	PrimaryExpression	0		14331	1					
ANR	14823	OrExpression	"ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0"		14331	1		||			
ANR	14824	EqualityExpression	ZSTR_LEN ( new_persistent_script -> full_path ) != key_length		14331	0		!=			
ANR	14825	CallExpression	ZSTR_LEN ( new_persistent_script -> full_path )		14331	0					
ANR	14826	Callee	ZSTR_LEN		14331	0					
ANR	14827	Identifier	ZSTR_LEN		14331	0					
ANR	14828	ArgumentList	new_persistent_script -> full_path		14331	1					
ANR	14829	Argument	new_persistent_script -> full_path		14331	0					
ANR	14830	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14831	Identifier	new_persistent_script		14331	0					
ANR	14832	Identifier	full_path		14331	1					
ANR	14833	Identifier	key_length		14331	1					
ANR	14834	EqualityExpression	"memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0"		14331	1		!=			
ANR	14835	CallExpression	"memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length )"		14331	0					
ANR	14836	Callee	memcmp		14331	0					
ANR	14837	Identifier	memcmp		14331	0					
ANR	14838	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		14331	1					
ANR	14839	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		14331	0					
ANR	14840	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		14331	0					
ANR	14841	Callee	ZSTR_VAL		14331	0					
ANR	14842	Identifier	ZSTR_VAL		14331	0					
ANR	14843	ArgumentList	new_persistent_script -> full_path		14331	1					
ANR	14844	Argument	new_persistent_script -> full_path		14331	0					
ANR	14845	PtrMemberAccess	new_persistent_script -> full_path		14331	0					
ANR	14846	Identifier	new_persistent_script		14331	0					
ANR	14847	Identifier	full_path		14331	1					
ANR	14848	Argument	key		14331	1					
ANR	14849	Identifier	key		14331	0					
ANR	14850	Argument	key_length		14331	2					
ANR	14851	Identifier	key_length		14331	0					
ANR	14852	PrimaryExpression	0		14331	1					
ANR	14853	CompoundStatement		95:82:3532:3532	14331	1					
ANR	14854	IfStatement	"if ( zend_accel_hash_update ( & ZCSG ( hash ) , key , key_length , 1 , bucket ) )"		14331	0					
ANR	14855	Condition	"zend_accel_hash_update ( & ZCSG ( hash ) , key , key_length , 1 , bucket )"	1305:7:37843:37905	14331	0	True				
ANR	14856	CallExpression	"zend_accel_hash_update ( & ZCSG ( hash ) , key , key_length , 1 , bucket )"		14331	0					
ANR	14857	Callee	zend_accel_hash_update		14331	0					
ANR	14858	Identifier	zend_accel_hash_update		14331	0					
ANR	14859	ArgumentList	& ZCSG ( hash )		14331	1					
ANR	14860	Argument	& ZCSG ( hash )		14331	0					
ANR	14861	UnaryOperationExpression	& ZCSG ( hash )		14331	0					
ANR	14862	UnaryOperator	&		14331	0					
ANR	14863	CallExpression	ZCSG ( hash )		14331	1					
ANR	14864	Callee	ZCSG		14331	0					
ANR	14865	Identifier	ZCSG		14331	0					
ANR	14866	ArgumentList	hash		14331	1					
ANR	14867	Argument	hash		14331	0					
ANR	14868	Identifier	hash		14331	0					
ANR	14869	Argument	key		14331	1					
ANR	14870	Identifier	key		14331	0					
ANR	14871	Argument	key_length		14331	2					
ANR	14872	Identifier	key_length		14331	0					
ANR	14873	Argument	1		14331	3					
ANR	14874	PrimaryExpression	1		14331	0					
ANR	14875	Argument	bucket		14331	4					
ANR	14876	Identifier	bucket		14331	0					
ANR	14877	CompoundStatement		97:72:3668:3668	14331	1					
ANR	14878	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""Added key '%s'"" , key )"	1306:4:37914:37969	14331	0	True				
ANR	14879	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""Added key '%s'"" , key )"		14331	0					
ANR	14880	Callee	zend_accel_error		14331	0					
ANR	14881	Identifier	zend_accel_error		14331	0					
ANR	14882	ArgumentList	ACCEL_LOG_INFO		14331	1					
ANR	14883	Argument	ACCEL_LOG_INFO		14331	0					
ANR	14884	Identifier	ACCEL_LOG_INFO		14331	0					
ANR	14885	Argument	"""Added key '%s'"""		14331	1					
ANR	14886	PrimaryExpression	"""Added key '%s'"""		14331	0					
ANR	14887	Argument	key		14331	2					
ANR	14888	Identifier	key		14331	0					
ANR	14889	ElseStatement	else		14331	0					
ANR	14890	CompoundStatement		99:10:3741:3741	14331	0					
ANR	14891	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"	1308:4:37987:38054	14331	0	True				
ANR	14892	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"		14331	0					
ANR	14893	Callee	zend_accel_error		14331	0					
ANR	14894	Identifier	zend_accel_error		14331	0					
ANR	14895	ArgumentList	ACCEL_LOG_DEBUG		14331	1					
ANR	14896	Argument	ACCEL_LOG_DEBUG		14331	0					
ANR	14897	Identifier	ACCEL_LOG_DEBUG		14331	0					
ANR	14898	Argument	"""No more entries in hash table!"""		14331	1					
ANR	14899	PrimaryExpression	"""No more entries in hash table!"""		14331	0					
ANR	14900	ExpressionStatement	ZSMMG ( memory_exhausted ) = 1	1309:4:38060:38087	14331	1	True				
ANR	14901	AssignmentExpression	ZSMMG ( memory_exhausted ) = 1		14331	0		=			
ANR	14902	CallExpression	ZSMMG ( memory_exhausted )		14331	0					
ANR	14903	Callee	ZSMMG		14331	0					
ANR	14904	Identifier	ZSMMG		14331	0					
ANR	14905	ArgumentList	memory_exhausted		14331	1					
ANR	14906	Argument	memory_exhausted		14331	0					
ANR	14907	Identifier	memory_exhausted		14331	0					
ANR	14908	PrimaryExpression	1		14331	1					
ANR	14909	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )	1310:4:38093:38153	14331	2	True				
ANR	14910	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )		14331	0					
ANR	14911	Callee	zend_accel_schedule_restart_if_necessary		14331	0					
ANR	14912	Identifier	zend_accel_schedule_restart_if_necessary		14331	0					
ANR	14913	ArgumentList	ACCEL_RESTART_HASH		14331	1					
ANR	14914	Argument	ACCEL_RESTART_HASH		14331	0					
ANR	14915	Identifier	ACCEL_RESTART_HASH		14331	0					
ANR	14916	ExpressionStatement	new_persistent_script -> dynamic_members . memory_consumption = ZEND_ALIGNED_SIZE ( new_persistent_script -> size )	1315:1:38169:38275	14331	20	True				
ANR	14917	AssignmentExpression	new_persistent_script -> dynamic_members . memory_consumption = ZEND_ALIGNED_SIZE ( new_persistent_script -> size )		14331	0		=			
ANR	14918	MemberAccess	new_persistent_script -> dynamic_members . memory_consumption		14331	0					
ANR	14919	PtrMemberAccess	new_persistent_script -> dynamic_members		14331	0					
ANR	14920	Identifier	new_persistent_script		14331	0					
ANR	14921	Identifier	dynamic_members		14331	1					
ANR	14922	Identifier	memory_consumption		14331	1					
ANR	14923	CallExpression	ZEND_ALIGNED_SIZE ( new_persistent_script -> size )		14331	1					
ANR	14924	Callee	ZEND_ALIGNED_SIZE		14331	0					
ANR	14925	Identifier	ZEND_ALIGNED_SIZE		14331	0					
ANR	14926	ArgumentList	new_persistent_script -> size		14331	1					
ANR	14927	Argument	new_persistent_script -> size		14331	0					
ANR	14928	PtrMemberAccess	new_persistent_script -> size		14331	0					
ANR	14929	Identifier	new_persistent_script		14331	0					
ANR	14930	Identifier	size		14331	1					
ANR	14931	ExpressionStatement	zend_shared_alloc_unlock ( )	1317:1:38279:38305	14331	21	True				
ANR	14932	CallExpression	zend_shared_alloc_unlock ( )		14331	0					
ANR	14933	Callee	zend_shared_alloc_unlock		14331	0					
ANR	14934	Identifier	zend_shared_alloc_unlock		14331	0					
ANR	14935	ArgumentList			14331	1					
ANR	14936	IfStatement	if ( ZCG ( accel_directives ) . file_cache )		14331	22					
ANR	14937	Condition	ZCG ( accel_directives ) . file_cache	1320:5:38344:38375	14331	0	True				
ANR	14938	MemberAccess	ZCG ( accel_directives ) . file_cache		14331	0					
ANR	14939	CallExpression	ZCG ( accel_directives )		14331	0					
ANR	14940	Callee	ZCG		14331	0					
ANR	14941	Identifier	ZCG		14331	0					
ANR	14942	ArgumentList	accel_directives		14331	1					
ANR	14943	Argument	accel_directives		14331	0					
ANR	14944	Identifier	accel_directives		14331	0					
ANR	14945	Identifier	file_cache		14331	1					
ANR	14946	CompoundStatement		112:39:4138:4138	14331	1					
ANR	14947	ExpressionStatement	SHM_PROTECT ( )	1321:2:38382:38395	14331	0	True				
ANR	14948	CallExpression	SHM_PROTECT ( )		14331	0					
ANR	14949	Callee	SHM_PROTECT		14331	0					
ANR	14950	Identifier	SHM_PROTECT		14331	0					
ANR	14951	ArgumentList			14331	1					
ANR	14952	ExpressionStatement	"zend_file_cache_script_store ( new_persistent_script , 1 )"	1322:2:38399:38453	14331	1	True				
ANR	14953	CallExpression	"zend_file_cache_script_store ( new_persistent_script , 1 )"		14331	0					
ANR	14954	Callee	zend_file_cache_script_store		14331	0					
ANR	14955	Identifier	zend_file_cache_script_store		14331	0					
ANR	14956	ArgumentList	new_persistent_script		14331	1					
ANR	14957	Argument	new_persistent_script		14331	0					
ANR	14958	Identifier	new_persistent_script		14331	0					
ANR	14959	Argument	1		14331	1					
ANR	14960	PrimaryExpression	1		14331	0					
ANR	14961	ExpressionStatement	SHM_UNPROTECT ( )	1323:2:38457:38472	14331	2	True				
ANR	14962	CallExpression	SHM_UNPROTECT ( )		14331	0					
ANR	14963	Callee	SHM_UNPROTECT		14331	0					
ANR	14964	Identifier	SHM_UNPROTECT		14331	0					
ANR	14965	ArgumentList			14331	1					
ANR	14966	ExpressionStatement	* from_shared_memory = 1	1327:1:38486:38509	14331	23	True				
ANR	14967	AssignmentExpression	* from_shared_memory = 1		14331	0		=			
ANR	14968	UnaryOperationExpression	* from_shared_memory		14331	0					
ANR	14969	UnaryOperator	*		14331	0					
ANR	14970	Identifier	from_shared_memory		14331	1					
ANR	14971	PrimaryExpression	1		14331	1					
ANR	14972	ReturnStatement	return new_persistent_script ;	1328:1:38512:38540	14331	24	True				
ANR	14973	Identifier	new_persistent_script		14331	0					
ANR	14974	ReturnType	static zend_persistent_script *		14331	1					
ANR	14975	Identifier	cache_script_in_shared_memory		14331	2					
ANR	14976	ParameterList	"zend_persistent_script * new_persistent_script , char * key , unsigned int key_length , int * from_shared_memory"		14331	3					
ANR	14977	Parameter	zend_persistent_script * new_persistent_script	1208:61:34131:34175	14331	0	True				
ANR	14978	ParameterType	zend_persistent_script *		14331	0					
ANR	14979	Identifier	new_persistent_script		14331	1					
ANR	14980	Parameter	char * key	1208:108:34178:34186	14331	1	True				
ANR	14981	ParameterType	char *		14331	0					
ANR	14982	Identifier	key		14331	1					
ANR	14983	Parameter	unsigned int key_length	1208:119:34189:34211	14331	2	True				
ANR	14984	ParameterType	unsigned int		14331	0					
ANR	14985	Identifier	key_length		14331	1					
ANR	14986	Parameter	int * from_shared_memory	1208:144:34214:34236	14331	3	True				
ANR	14987	ParameterType	int *		14331	0					
ANR	14988	Identifier	from_shared_memory		14331	1					
ANR	14989	CFGEntryNode	ENTRY		14331		True				
ANR	14990	CFGExitNode	EXIT		14331		True				
ANR	14991	Symbol	new_persistent_script -> timestamp		14331						
ANR	14992	Symbol	new_persistent_script -> full_path		14331						
ANR	14993	Symbol	ACCEL_RESTART_OOM		14331						
ANR	14994	Symbol	existing_persistent_script -> corrupted		14331						
ANR	14995	Symbol	new_persistent_script -> dynamic_members . memory_consumption		14331						
ANR	14996	Symbol	from_shared_memory		14331						
ANR	14997	Symbol	new_persistent_script -> is_phar		14331						
ANR	14998	Symbol	memcmp		14331						
ANR	14999	Symbol	ACCEL_LOG_DEBUG		14331						
ANR	15000	Symbol	ZEND_ALIGNED_SIZE		14331						
ANR	15001	Symbol	new_persistent_script		14331						
ANR	15002	Symbol	ACCEL_LOG_ERROR		14331						
ANR	15003	Symbol	* existing_persistent_script		14331						
ANR	15004	Symbol	zend_accel_hash_update		14331						
ANR	15005	Symbol	zend_accel_script_persistable		14331						
ANR	15006	Symbol	memory_used		14331						
ANR	15007	Symbol	memory_exhausted		14331						
ANR	15008	Symbol	zend_accel_script_persist_calc		14331						
ANR	15009	Symbol	bucket		14331						
ANR	15010	Symbol	& ZCSG		14331						
ANR	15011	Symbol	* bucket		14331						
ANR	15012	Symbol	new_persistent_script -> dynamic_members		14331						
ANR	15013	Symbol	strstr		14331						
ANR	15014	Symbol	zend_accel_script_checksum		14331						
ANR	15015	Symbol	hash		14331						
ANR	15016	Symbol	ZCG ( accel_directives ) . file_cache		14331						
ANR	15017	Symbol	ZCG		14331						
ANR	15018	Symbol	ACCEL_RESTART_HASH		14331						
ANR	15019	Symbol	zend_shared_alloc		14331						
ANR	15020	Symbol	zend_accel_hash_find_entry		14331						
ANR	15021	Symbol	& key		14331						
ANR	15022	Symbol	existing_persistent_script		14331						
ANR	15023	Symbol	ZCG ( accel_directives ) . validate_timestamps		14331						
ANR	15024	Symbol	~63L		14331						
ANR	15025	Symbol	new_persistent_script -> mem		14331						
ANR	15026	Symbol	mem		14331						
ANR	15027	Symbol	ZSMMG		14331						
ANR	15028	Symbol	ACCEL_LOG_WARNING		14331						
ANR	15029	Symbol	key_length		14331						
ANR	15030	Symbol	ACCEL_LOG_INFO		14331						
ANR	15031	Symbol	existing_persistent_script -> timestamp		14331						
ANR	15032	Symbol	key		14331						
ANR	15033	Symbol	zend_accel_hash_is_full		14331						
ANR	15034	Symbol	* from_shared_memory		14331						
ANR	15035	Symbol	bucket -> data		14331						
ANR	15036	Symbol	ZSTR_VAL		14331						
ANR	15037	Symbol	zend_accel_script_persist		14331						
ANR	15038	Symbol	new_persistent_script -> dynamic_members . checksum		14331						
ANR	15039	Symbol	ZSTR_LEN		14331						
ANR	15040	Symbol	* new_persistent_script		14331						
ANR	15041	Symbol	accel_directives		14331						
ANR	15042	Symbol	zend_accel_script_optimize		14331						
ANR	15043	Symbol	new_persistent_script -> size		14331						
ANR	15044	ClassDef	jit_auto_global_info	1331:13:38558:38815							
ANR	15045	DeclStmt									
ANR	15046	Decl							const char	const char *	name
ANR	15047	DeclStmt									
ANR	15048	Decl							size_t	size_t	len
ANR	15049	DeclStmt									
ANR	15050	Decl							jit_auto_global_info	jit_auto_global_info [ ]	jit_auto_globals_info
ANR	15051	DeclStmt									
ANR	15052	Decl							zend_string	zend_string * [ 4 ]	jit_auto_globals_str
ANR	15053	Function	zend_accel_get_auto_globals	1344:0:38864:39174							
ANR	15054	FunctionDef	zend_accel_get_auto_globals ()		15053	0					
ANR	15055	CompoundStatement		1345:0:38909:39174	15053	0					
ANR	15056	IdentifierDeclStatement	"int i , ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) ) ;"	1346:1:38912:38995	15053	0	True				
ANR	15057	IdentifierDecl	i		15053	0					
ANR	15058	IdentifierDeclType	int		15053	0					
ANR	15059	Identifier	i		15053	1					
ANR	15060	IdentifierDecl	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		15053	1					
ANR	15061	IdentifierDeclType	int		15053	0					
ANR	15062	Identifier	ag_size		15053	1					
ANR	15063	AssignmentExpression	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		15053	2		=			
ANR	15064	Identifier	ag_size		15053	0					
ANR	15065	MultiplicativeExpression	sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] )		15053	1		/			
ANR	15066	SizeofExpression	sizeof ( jit_auto_globals_info )		15053	0					
ANR	15067	Sizeof	sizeof		15053	0					
ANR	15068	SizeofOperand	jit_auto_globals_info		15053	1					
ANR	15069	SizeofExpression	sizeof ( jit_auto_globals_info [ 0 ] )		15053	1					
ANR	15070	Sizeof	sizeof		15053	0					
ANR	15071	ArrayIndexing	jit_auto_globals_info [ 0 ]		15053	1					
ANR	15072	Identifier	jit_auto_globals_info		15053	0					
ANR	15073	PrimaryExpression	0		15053	1					
ANR	15074	IdentifierDeclStatement	int n = 1 ;	1347:1:38998:39007	15053	1	True				
ANR	15075	IdentifierDecl	n = 1		15053	0					
ANR	15076	IdentifierDeclType	int		15053	0					
ANR	15077	Identifier	n		15053	1					
ANR	15078	AssignmentExpression	n = 1		15053	2		=			
ANR	15079	Identifier	n		15053	0					
ANR	15080	PrimaryExpression	1		15053	1					
ANR	15081	IdentifierDeclStatement	int mask = 0 ;	1348:1:39010:39022	15053	2	True				
ANR	15082	IdentifierDecl	mask = 0		15053	0					
ANR	15083	IdentifierDeclType	int		15053	0					
ANR	15084	Identifier	mask		15053	1					
ANR	15085	AssignmentExpression	mask = 0		15053	2		=			
ANR	15086	Identifier	mask		15053	0					
ANR	15087	PrimaryExpression	0		15053	1					
ANR	15088	ForStatement	for ( i = 0 ; i < ag_size ; i ++ )		15053	3					
ANR	15089	ForInit	i = 0 ;	1350:6:39031:39036	15053	0	True				
ANR	15090	AssignmentExpression	i = 0		15053	0		=			
ANR	15091	Identifier	i		15053	0					
ANR	15092	PrimaryExpression	0		15053	1					
ANR	15093	Condition	i < ag_size	1350:13:39038:39048	15053	1	True				
ANR	15094	RelationalExpression	i < ag_size		15053	0		<			
ANR	15095	Identifier	i		15053	0					
ANR	15096	Identifier	ag_size		15053	1					
ANR	15097	PostIncDecOperationExpression	i ++	1350:27:39052:39054	15053	2	True				
ANR	15098	Identifier	i		15053	0					
ANR	15099	IncDec	++		15053	1					
ANR	15100	CompoundStatement		6:32:147:147	15053	3					
ANR	15101	IfStatement	"if ( zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ i ] ) )"		15053	0					
ANR	15102	Condition	"zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ i ] )"	1351:6:39065:39124	15053	0	True				
ANR	15103	CallExpression	"zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ i ] )"		15053	0					
ANR	15104	Callee	zend_hash_exists		15053	0					
ANR	15105	Identifier	zend_hash_exists		15053	0					
ANR	15106	ArgumentList	& EG ( symbol_table )		15053	1					
ANR	15107	Argument	& EG ( symbol_table )		15053	0					
ANR	15108	UnaryOperationExpression	& EG ( symbol_table )		15053	0					
ANR	15109	UnaryOperator	&		15053	0					
ANR	15110	CallExpression	EG ( symbol_table )		15053	1					
ANR	15111	Callee	EG		15053	0					
ANR	15112	Identifier	EG		15053	0					
ANR	15113	ArgumentList	symbol_table		15053	1					
ANR	15114	Argument	symbol_table		15053	0					
ANR	15115	Identifier	symbol_table		15053	0					
ANR	15116	Argument	jit_auto_globals_str [ i ]		15053	1					
ANR	15117	ArrayIndexing	jit_auto_globals_str [ i ]		15053	0					
ANR	15118	Identifier	jit_auto_globals_str		15053	0					
ANR	15119	Identifier	i		15053	1					
ANR	15120	CompoundStatement		7:68:217:217	15053	1					
ANR	15121	ExpressionStatement	mask |= n	1352:3:39132:39141	15053	0	True				
ANR	15122	AssignmentExpression	mask |= n		15053	0		|=			
ANR	15123	Identifier	mask		15053	0					
ANR	15124	Identifier	n		15053	1					
ANR	15125	ExpressionStatement	n += n	1354:2:39149:39155	15053	1	True				
ANR	15126	AssignmentExpression	n += n		15053	0		+=			
ANR	15127	Identifier	n		15053	0					
ANR	15128	Identifier	n		15053	1					
ANR	15129	ReturnStatement	return mask ;	1356:1:39161:39172	15053	4	True				
ANR	15130	Identifier	mask		15053	0					
ANR	15131	ReturnType	static int		15053	1					
ANR	15132	Identifier	zend_accel_get_auto_globals		15053	2					
ANR	15133	ParameterList			15053	3					
ANR	15134	CFGEntryNode	ENTRY		15053		True				
ANR	15135	CFGExitNode	EXIT		15053		True				
ANR	15136	Symbol	* i		15053						
ANR	15137	Symbol	jit_auto_globals_info		15053						
ANR	15138	Symbol	jit_auto_globals_str		15053						
ANR	15139	Symbol	i		15053						
ANR	15140	Symbol	zend_hash_exists		15053						
ANR	15141	Symbol	ag_size		15053						
ANR	15142	Symbol	symbol_table		15053						
ANR	15143	Symbol	* jit_auto_globals_str		15053						
ANR	15144	Symbol	* jit_auto_globals_info		15053						
ANR	15145	Symbol	& EG		15053						
ANR	15146	Symbol	n		15053						
ANR	15147	Symbol	mask		15053						
ANR	15148	Function	zend_accel_get_auto_globals_no_jit	1359:0:39177:39326							
ANR	15149	FunctionDef	zend_accel_get_auto_globals_no_jit ()		15148	0					
ANR	15150	CompoundStatement		1360:0:39229:39326	15148	0					
ANR	15151	IfStatement	"if ( zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ 3 ] ) )"		15148	0					
ANR	15152	Condition	"zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ 3 ] )"	1361:5:39236:39295	15148	0	True				
ANR	15153	CallExpression	"zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ 3 ] )"		15148	0					
ANR	15154	Callee	zend_hash_exists		15148	0					
ANR	15155	Identifier	zend_hash_exists		15148	0					
ANR	15156	ArgumentList	& EG ( symbol_table )		15148	1					
ANR	15157	Argument	& EG ( symbol_table )		15148	0					
ANR	15158	UnaryOperationExpression	& EG ( symbol_table )		15148	0					
ANR	15159	UnaryOperator	&		15148	0					
ANR	15160	CallExpression	EG ( symbol_table )		15148	1					
ANR	15161	Callee	EG		15148	0					
ANR	15162	Identifier	EG		15148	0					
ANR	15163	ArgumentList	symbol_table		15148	1					
ANR	15164	Argument	symbol_table		15148	0					
ANR	15165	Identifier	symbol_table		15148	0					
ANR	15166	Argument	jit_auto_globals_str [ 3 ]		15148	1					
ANR	15167	ArrayIndexing	jit_auto_globals_str [ 3 ]		15148	0					
ANR	15168	Identifier	jit_auto_globals_str		15148	0					
ANR	15169	PrimaryExpression	3		15148	1					
ANR	15170	CompoundStatement		2:67:68:68	15148	1					
ANR	15171	ReturnStatement	return 8 ;	1362:2:39302:39310	15148	0	True				
ANR	15172	PrimaryExpression	8		15148	0					
ANR	15173	ReturnStatement	return 0 ;	1364:1:39316:39324	15148	1	True				
ANR	15174	PrimaryExpression	0		15148	0					
ANR	15175	ReturnType	static int		15148	1					
ANR	15176	Identifier	zend_accel_get_auto_globals_no_jit		15148	2					
ANR	15177	ParameterList			15148	3					
ANR	15178	CFGEntryNode	ENTRY		15148		True				
ANR	15179	CFGExitNode	EXIT		15148		True				
ANR	15180	Symbol	jit_auto_globals_str		15148						
ANR	15181	Symbol	zend_hash_exists		15148						
ANR	15182	Symbol	symbol_table		15148						
ANR	15183	Symbol	* jit_auto_globals_str		15148						
ANR	15184	Symbol	& EG		15148						
ANR	15185	Function	zend_accel_set_auto_globals	1367:0:39329:39665							
ANR	15186	FunctionDef	zend_accel_set_auto_globals (int mask)		15185	0					
ANR	15187	CompoundStatement		1368:0:39379:39665	15185	0					
ANR	15188	IdentifierDeclStatement	"int i , ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) ) ;"	1369:1:39382:39465	15185	0	True				
ANR	15189	IdentifierDecl	i		15185	0					
ANR	15190	IdentifierDeclType	int		15185	0					
ANR	15191	Identifier	i		15185	1					
ANR	15192	IdentifierDecl	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		15185	1					
ANR	15193	IdentifierDeclType	int		15185	0					
ANR	15194	Identifier	ag_size		15185	1					
ANR	15195	AssignmentExpression	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		15185	2		=			
ANR	15196	Identifier	ag_size		15185	0					
ANR	15197	MultiplicativeExpression	sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] )		15185	1		/			
ANR	15198	SizeofExpression	sizeof ( jit_auto_globals_info )		15185	0					
ANR	15199	Sizeof	sizeof		15185	0					
ANR	15200	SizeofOperand	jit_auto_globals_info		15185	1					
ANR	15201	SizeofExpression	sizeof ( jit_auto_globals_info [ 0 ] )		15185	1					
ANR	15202	Sizeof	sizeof		15185	0					
ANR	15203	ArrayIndexing	jit_auto_globals_info [ 0 ]		15185	1					
ANR	15204	Identifier	jit_auto_globals_info		15185	0					
ANR	15205	PrimaryExpression	0		15185	1					
ANR	15206	IdentifierDeclStatement	int n = 1 ;	1370:1:39468:39477	15185	1	True				
ANR	15207	IdentifierDecl	n = 1		15185	0					
ANR	15208	IdentifierDeclType	int		15185	0					
ANR	15209	Identifier	n		15185	1					
ANR	15210	AssignmentExpression	n = 1		15185	2		=			
ANR	15211	Identifier	n		15185	0					
ANR	15212	PrimaryExpression	1		15185	1					
ANR	15213	ForStatement	for ( i = 0 ; i < ag_size ; i ++ )		15185	2					
ANR	15214	ForInit	i = 0 ;	1372:6:39486:39491	15185	0	True				
ANR	15215	AssignmentExpression	i = 0		15185	0		=			
ANR	15216	Identifier	i		15185	0					
ANR	15217	PrimaryExpression	0		15185	1					
ANR	15218	Condition	i < ag_size	1372:13:39493:39503	15185	1	True				
ANR	15219	RelationalExpression	i < ag_size		15185	0		<			
ANR	15220	Identifier	i		15185	0					
ANR	15221	Identifier	ag_size		15185	1					
ANR	15222	PostIncDecOperationExpression	i ++	1372:27:39507:39509	15185	2	True				
ANR	15223	Identifier	i		15185	0					
ANR	15224	IncDec	++		15185	1					
ANR	15225	CompoundStatement		5:32:132:132	15185	3					
ANR	15226	IfStatement	if ( ( mask & n ) && ! ( ZCG ( auto_globals_mask ) & n ) )		15185	0					
ANR	15227	Condition	( mask & n ) && ! ( ZCG ( auto_globals_mask ) & n )	1373:6:39520:39562	15185	0	True				
ANR	15228	AndExpression	( mask & n ) && ! ( ZCG ( auto_globals_mask ) & n )		15185	0		&&			
ANR	15229	BitAndExpression	mask & n		15185	0		&			
ANR	15230	Identifier	mask		15185	0					
ANR	15231	Identifier	n		15185	1					
ANR	15232	UnaryOperationExpression	! ( ZCG ( auto_globals_mask ) & n )		15185	1					
ANR	15233	UnaryOperator	!		15185	0					
ANR	15234	BitAndExpression	ZCG ( auto_globals_mask ) & n		15185	1		&			
ANR	15235	CallExpression	ZCG ( auto_globals_mask )		15185	0					
ANR	15236	Callee	ZCG		15185	0					
ANR	15237	Identifier	ZCG		15185	0					
ANR	15238	ArgumentList	auto_globals_mask		15185	1					
ANR	15239	Argument	auto_globals_mask		15185	0					
ANR	15240	Identifier	auto_globals_mask		15185	0					
ANR	15241	Identifier	n		15185	1					
ANR	15242	CompoundStatement		6:51:185:185	15185	1					
ANR	15243	ExpressionStatement	ZCG ( auto_globals_mask ) |= n	1374:3:39570:39597	15185	0	True				
ANR	15244	AssignmentExpression	ZCG ( auto_globals_mask ) |= n		15185	0		|=			
ANR	15245	CallExpression	ZCG ( auto_globals_mask )		15185	0					
ANR	15246	Callee	ZCG		15185	0					
ANR	15247	Identifier	ZCG		15185	0					
ANR	15248	ArgumentList	auto_globals_mask		15185	1					
ANR	15249	Argument	auto_globals_mask		15185	0					
ANR	15250	Identifier	auto_globals_mask		15185	0					
ANR	15251	Identifier	n		15185	1					
ANR	15252	ExpressionStatement	zend_is_auto_global ( jit_auto_globals_str [ i ] )	1375:3:39602:39646	15185	1	True				
ANR	15253	CallExpression	zend_is_auto_global ( jit_auto_globals_str [ i ] )		15185	0					
ANR	15254	Callee	zend_is_auto_global		15185	0					
ANR	15255	Identifier	zend_is_auto_global		15185	0					
ANR	15256	ArgumentList	jit_auto_globals_str [ i ]		15185	1					
ANR	15257	Argument	jit_auto_globals_str [ i ]		15185	0					
ANR	15258	ArrayIndexing	jit_auto_globals_str [ i ]		15185	0					
ANR	15259	Identifier	jit_auto_globals_str		15185	0					
ANR	15260	Identifier	i		15185	1					
ANR	15261	ExpressionStatement	n += n	1377:2:39654:39660	15185	1	True				
ANR	15262	AssignmentExpression	n += n		15185	0		+=			
ANR	15263	Identifier	n		15185	0					
ANR	15264	Identifier	n		15185	1					
ANR	15265	ReturnType	static void		15185	1					
ANR	15266	Identifier	zend_accel_set_auto_globals		15185	2					
ANR	15267	ParameterList	int mask		15185	3					
ANR	15268	Parameter	int mask	1367:40:39369:39376	15185	0	True				
ANR	15269	ParameterType	int		15185	0					
ANR	15270	Identifier	mask		15185	1					
ANR	15271	CFGEntryNode	ENTRY		15185		True				
ANR	15272	CFGExitNode	EXIT		15185		True				
ANR	15273	Symbol	auto_globals_mask		15185						
ANR	15274	Symbol	* i		15185						
ANR	15275	Symbol	jit_auto_globals_info		15185						
ANR	15276	Symbol	jit_auto_globals_str		15185						
ANR	15277	Symbol	i		15185						
ANR	15278	Symbol	ag_size		15185						
ANR	15279	Symbol	* jit_auto_globals_str		15185						
ANR	15280	Symbol	* jit_auto_globals_info		15185						
ANR	15281	Symbol	n		15185						
ANR	15282	Symbol	mask		15185						
ANR	15283	Symbol	ZCG		15185						
ANR	15284	Function	zend_accel_init_auto_globals	1381:0:39668:40080							
ANR	15285	FunctionDef	zend_accel_init_auto_globals ()		15284	0					
ANR	15286	CompoundStatement		1382:0:39715:40080	15284	0					
ANR	15287	IdentifierDeclStatement	"int i , ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) ) ;"	1383:1:39718:39801	15284	0	True				
ANR	15288	IdentifierDecl	i		15284	0					
ANR	15289	IdentifierDeclType	int		15284	0					
ANR	15290	Identifier	i		15284	1					
ANR	15291	IdentifierDecl	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		15284	1					
ANR	15292	IdentifierDeclType	int		15284	0					
ANR	15293	Identifier	ag_size		15284	1					
ANR	15294	AssignmentExpression	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		15284	2		=			
ANR	15295	Identifier	ag_size		15284	0					
ANR	15296	MultiplicativeExpression	sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] )		15284	1		/			
ANR	15297	SizeofExpression	sizeof ( jit_auto_globals_info )		15284	0					
ANR	15298	Sizeof	sizeof		15284	0					
ANR	15299	SizeofOperand	jit_auto_globals_info		15284	1					
ANR	15300	SizeofExpression	sizeof ( jit_auto_globals_info [ 0 ] )		15284	1					
ANR	15301	Sizeof	sizeof		15284	0					
ANR	15302	ArrayIndexing	jit_auto_globals_info [ 0 ]		15284	1					
ANR	15303	Identifier	jit_auto_globals_info		15284	0					
ANR	15304	PrimaryExpression	0		15284	1					
ANR	15305	ForStatement	for ( i = 0 ; i < ag_size ; i ++ )		15284	1					
ANR	15306	ForInit	i = 0 ;	1385:6:39810:39815	15284	0	True				
ANR	15307	AssignmentExpression	i = 0		15284	0		=			
ANR	15308	Identifier	i		15284	0					
ANR	15309	PrimaryExpression	0		15284	1					
ANR	15310	Condition	i < ag_size	1385:13:39817:39827	15284	1	True				
ANR	15311	RelationalExpression	i < ag_size		15284	0		<			
ANR	15312	Identifier	i		15284	0					
ANR	15313	Identifier	ag_size		15284	1					
ANR	15314	PostIncDecOperationExpression	i ++	1385:27:39831:39833	15284	2	True				
ANR	15315	Identifier	i		15284	0					
ANR	15316	IncDec	++		15284	1					
ANR	15317	CompoundStatement		4:32:120:120	15284	3					
ANR	15318	ExpressionStatement	"jit_auto_globals_str [ i ] = zend_string_init ( jit_auto_globals_info [ i ] . name , jit_auto_globals_info [ i ] . len , 1 )"	1386:2:39840:39946	15284	0	True				
ANR	15319	AssignmentExpression	"jit_auto_globals_str [ i ] = zend_string_init ( jit_auto_globals_info [ i ] . name , jit_auto_globals_info [ i ] . len , 1 )"		15284	0		=			
ANR	15320	ArrayIndexing	jit_auto_globals_str [ i ]		15284	0					
ANR	15321	Identifier	jit_auto_globals_str		15284	0					
ANR	15322	Identifier	i		15284	1					
ANR	15323	CallExpression	"zend_string_init ( jit_auto_globals_info [ i ] . name , jit_auto_globals_info [ i ] . len , 1 )"		15284	1					
ANR	15324	Callee	zend_string_init		15284	0					
ANR	15325	Identifier	zend_string_init		15284	0					
ANR	15326	ArgumentList	jit_auto_globals_info [ i ] . name		15284	1					
ANR	15327	Argument	jit_auto_globals_info [ i ] . name		15284	0					
ANR	15328	MemberAccess	jit_auto_globals_info [ i ] . name		15284	0					
ANR	15329	ArrayIndexing	jit_auto_globals_info [ i ]		15284	0					
ANR	15330	Identifier	jit_auto_globals_info		15284	0					
ANR	15331	Identifier	i		15284	1					
ANR	15332	Identifier	name		15284	1					
ANR	15333	Argument	jit_auto_globals_info [ i ] . len		15284	1					
ANR	15334	MemberAccess	jit_auto_globals_info [ i ] . len		15284	0					
ANR	15335	ArrayIndexing	jit_auto_globals_info [ i ]		15284	0					
ANR	15336	Identifier	jit_auto_globals_info		15284	0					
ANR	15337	Identifier	i		15284	1					
ANR	15338	Identifier	len		15284	1					
ANR	15339	Argument	1		15284	2					
ANR	15340	PrimaryExpression	1		15284	0					
ANR	15341	ExpressionStatement	zend_string_hash_val ( jit_auto_globals_str [ i ] )	1387:2:39950:39995	15284	1	True				
ANR	15342	CallExpression	zend_string_hash_val ( jit_auto_globals_str [ i ] )		15284	0					
ANR	15343	Callee	zend_string_hash_val		15284	0					
ANR	15344	Identifier	zend_string_hash_val		15284	0					
ANR	15345	ArgumentList	jit_auto_globals_str [ i ]		15284	1					
ANR	15346	Argument	jit_auto_globals_str [ i ]		15284	0					
ANR	15347	ArrayIndexing	jit_auto_globals_str [ i ]		15284	0					
ANR	15348	Identifier	jit_auto_globals_str		15284	0					
ANR	15349	Identifier	i		15284	1					
ANR	15350	ExpressionStatement	jit_auto_globals_str [ i ] = accel_new_interned_string ( jit_auto_globals_str [ i ] )	1388:2:39999:40075	15284	2	True				
ANR	15351	AssignmentExpression	jit_auto_globals_str [ i ] = accel_new_interned_string ( jit_auto_globals_str [ i ] )		15284	0		=			
ANR	15352	ArrayIndexing	jit_auto_globals_str [ i ]		15284	0					
ANR	15353	Identifier	jit_auto_globals_str		15284	0					
ANR	15354	Identifier	i		15284	1					
ANR	15355	CallExpression	accel_new_interned_string ( jit_auto_globals_str [ i ] )		15284	1					
ANR	15356	Callee	accel_new_interned_string		15284	0					
ANR	15357	Identifier	accel_new_interned_string		15284	0					
ANR	15358	ArgumentList	jit_auto_globals_str [ i ]		15284	1					
ANR	15359	Argument	jit_auto_globals_str [ i ]		15284	0					
ANR	15360	ArrayIndexing	jit_auto_globals_str [ i ]		15284	0					
ANR	15361	Identifier	jit_auto_globals_str		15284	0					
ANR	15362	Identifier	i		15284	1					
ANR	15363	ReturnType	static void		15284	1					
ANR	15364	Identifier	zend_accel_init_auto_globals		15284	2					
ANR	15365	ParameterList			15284	3					
ANR	15366	CFGEntryNode	ENTRY		15284		True				
ANR	15367	CFGExitNode	EXIT		15284		True				
ANR	15368	Symbol	zend_string_init		15284						
ANR	15369	Symbol	accel_new_interned_string		15284						
ANR	15370	Symbol	* i		15284						
ANR	15371	Symbol	jit_auto_globals_info		15284						
ANR	15372	Symbol	jit_auto_globals_info [ i ] . name		15284						
ANR	15373	Symbol	jit_auto_globals_str		15284						
ANR	15374	Symbol	jit_auto_globals_info [ i ] . len		15284						
ANR	15375	Symbol	i		15284						
ANR	15376	Symbol	ag_size		15284						
ANR	15377	Symbol	* jit_auto_globals_str		15284						
ANR	15378	Symbol	* jit_auto_globals_info		15284						
ANR	15379	Function	opcache_compile_file	1392:0:40083:45574							
ANR	15380	FunctionDef	"opcache_compile_file (zend_file_handle * file_handle , int type , char * key , unsigned int key_length , zend_op_array * * op_array_p)"		15379	0					
ANR	15381	CompoundStatement		1393:0:40240:45574	15379	0					
ANR	15382	IdentifierDeclStatement	zend_persistent_script * new_persistent_script ;	1394:1:40243:40288	15379	0	True				
ANR	15383	IdentifierDecl	* new_persistent_script		15379	0					
ANR	15384	IdentifierDeclType	zend_persistent_script *		15379	0					
ANR	15385	Identifier	new_persistent_script		15379	1					
ANR	15386	IdentifierDeclStatement	zend_op_array * orig_active_op_array ;	1395:1:40291:40326	15379	1	True				
ANR	15387	IdentifierDecl	* orig_active_op_array		15379	0					
ANR	15388	IdentifierDeclType	zend_op_array *		15379	0					
ANR	15389	Identifier	orig_active_op_array		15379	1					
ANR	15390	IdentifierDeclStatement	"HashTable * orig_function_table , * orig_class_table ;"	1396:1:40329:40378	15379	2	True				
ANR	15391	IdentifierDecl	* orig_function_table		15379	0					
ANR	15392	IdentifierDeclType	HashTable *		15379	0					
ANR	15393	Identifier	orig_function_table		15379	1					
ANR	15394	IdentifierDecl	* orig_class_table		15379	1					
ANR	15395	IdentifierDeclType	HashTable *		15379	0					
ANR	15396	Identifier	orig_class_table		15379	1					
ANR	15397	IdentifierDeclStatement	zval orig_user_error_handler ;	1397:1:40381:40409	15379	3	True				
ANR	15398	IdentifierDecl	orig_user_error_handler		15379	0					
ANR	15399	IdentifierDeclType	zval		15379	0					
ANR	15400	Identifier	orig_user_error_handler		15379	1					
ANR	15401	IdentifierDeclStatement	zend_op_array * op_array ;	1398:1:40412:40435	15379	4	True				
ANR	15402	IdentifierDecl	* op_array		15379	0					
ANR	15403	IdentifierDeclType	zend_op_array *		15379	0					
ANR	15404	Identifier	op_array		15379	1					
ANR	15405	IdentifierDeclStatement	int do_bailout = 0 ;	1399:1:40438:40456	15379	5	True				
ANR	15406	IdentifierDecl	do_bailout = 0		15379	0					
ANR	15407	IdentifierDeclType	int		15379	0					
ANR	15408	Identifier	do_bailout		15379	1					
ANR	15409	AssignmentExpression	do_bailout = 0		15379	2		=			
ANR	15410	Identifier	do_bailout		15379	0					
ANR	15411	PrimaryExpression	0		15379	1					
ANR	15412	IdentifierDeclStatement	accel_time_t timestamp = 0 ;	1400:1:40459:40485	15379	6	True				
ANR	15413	IdentifierDecl	timestamp = 0		15379	0					
ANR	15414	IdentifierDeclType	accel_time_t		15379	0					
ANR	15415	Identifier	timestamp		15379	1					
ANR	15416	AssignmentExpression	timestamp = 0		15379	2		=			
ANR	15417	Identifier	timestamp		15379	0					
ANR	15418	PrimaryExpression	0		15379	1					
ANR	15419	IdentifierDeclStatement	uint32_t orig_compiler_options = 0 ;	1401:1:40488:40522	15379	7	True				
ANR	15420	IdentifierDecl	orig_compiler_options = 0		15379	0					
ANR	15421	IdentifierDeclType	uint32_t		15379	0					
ANR	15422	Identifier	orig_compiler_options		15379	1					
ANR	15423	AssignmentExpression	orig_compiler_options = 0		15379	2		=			
ANR	15424	Identifier	orig_compiler_options		15379	0					
ANR	15425	PrimaryExpression	0		15379	1					
ANR	15426	IfStatement	if ( file_handle -> type == ZEND_HANDLE_FILENAME )		15379	8					
ANR	15427	Condition	file_handle -> type == ZEND_HANDLE_FILENAME	1404:8:40560:40600	15379	0	True				
ANR	15428	EqualityExpression	file_handle -> type == ZEND_HANDLE_FILENAME		15379	0		==			
ANR	15429	PtrMemberAccess	file_handle -> type		15379	0					
ANR	15430	Identifier	file_handle		15379	0					
ANR	15431	Identifier	type		15379	1					
ANR	15432	Identifier	ZEND_HANDLE_FILENAME		15379	1					
ANR	15433	CompoundStatement		12:51:362:362	15379	1					
ANR	15434	IfStatement	"if ( accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == SUCCESS )"		15379	0					
ANR	15435	Condition	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == SUCCESS"	1405:12:40617:40705	15379	0	True				
ANR	15436	EqualityExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == SUCCESS"		15379	0		==			
ANR	15437	CallExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle )"		15379	0					
ANR	15438	Callee	accelerator_orig_zend_stream_open_function		15379	0					
ANR	15439	Identifier	accelerator_orig_zend_stream_open_function		15379	0					
ANR	15440	ArgumentList	file_handle -> filename		15379	1					
ANR	15441	Argument	file_handle -> filename		15379	0					
ANR	15442	PtrMemberAccess	file_handle -> filename		15379	0					
ANR	15443	Identifier	file_handle		15379	0					
ANR	15444	Identifier	filename		15379	1					
ANR	15445	Argument	file_handle		15379	1					
ANR	15446	Identifier	file_handle		15379	0					
ANR	15447	Identifier	SUCCESS		15379	1					
ANR	15448	CompoundStatement		13:103:467:467	15379	1					
ANR	15449	IfStatement	if ( key == ZCG ( key ) )		15379	0					
ANR	15450	Condition	key == ZCG ( key )	1407:13:40788:40802	15379	0	True				
ANR	15451	EqualityExpression	key == ZCG ( key )		15379	0		==			
ANR	15452	Identifier	key		15379	0					
ANR	15453	CallExpression	ZCG ( key )		15379	1					
ANR	15454	Callee	ZCG		15379	0					
ANR	15455	Identifier	ZCG		15379	0					
ANR	15456	ArgumentList	key		15379	1					
ANR	15457	Argument	key		15379	0					
ANR	15458	Identifier	key		15379	0					
ANR	15459	CompoundStatement		15:30:564:564	15379	1					
ANR	15460	ExpressionStatement	key_length = ZCG ( key_len )	1408:10:40817:40842	15379	0	True				
ANR	15461	AssignmentExpression	key_length = ZCG ( key_len )		15379	0		=			
ANR	15462	Identifier	key_length		15379	0					
ANR	15463	CallExpression	ZCG ( key_len )		15379	1					
ANR	15464	Callee	ZCG		15379	0					
ANR	15465	Identifier	ZCG		15379	0					
ANR	15466	ArgumentList	key_len		15379	1					
ANR	15467	Argument	key_len		15379	0					
ANR	15468	Identifier	key_len		15379	0					
ANR	15469	ElseStatement	else		15379	0					
ANR	15470	CompoundStatement		18:15:629:629	15379	0					
ANR	15471	ExpressionStatement	* op_array_p = NULL	1411:3:40875:40893	15379	0	True				
ANR	15472	AssignmentExpression	* op_array_p = NULL		15379	0		=			
ANR	15473	UnaryOperationExpression	* op_array_p		15379	0					
ANR	15474	UnaryOperator	*		15379	0					
ANR	15475	Identifier	op_array_p		15379	1					
ANR	15476	Identifier	NULL		15379	1					
ANR	15477	IfStatement	if ( type == ZEND_REQUIRE )		15379	1					
ANR	15478	Condition	type == ZEND_REQUIRE	1412:7:40902:40921	15379	0	True				
ANR	15479	EqualityExpression	type == ZEND_REQUIRE		15379	0		==			
ANR	15480	Identifier	type		15379	0					
ANR	15481	Identifier	ZEND_REQUIRE		15379	1					
ANR	15482	CompoundStatement		20:29:683:683	15379	1					
ANR	15483	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"	1413:4:40930:41003	15379	0	True				
ANR	15484	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"		15379	0					
ANR	15485	Callee	zend_message_dispatcher		15379	0					
ANR	15486	Identifier	zend_message_dispatcher		15379	0					
ANR	15487	ArgumentList	ZMSG_FAILED_REQUIRE_FOPEN		15379	1					
ANR	15488	Argument	ZMSG_FAILED_REQUIRE_FOPEN		15379	0					
ANR	15489	Identifier	ZMSG_FAILED_REQUIRE_FOPEN		15379	0					
ANR	15490	Argument	file_handle -> filename		15379	1					
ANR	15491	PtrMemberAccess	file_handle -> filename		15379	0					
ANR	15492	Identifier	file_handle		15379	0					
ANR	15493	Identifier	filename		15379	1					
ANR	15494	ExpressionStatement	zend_bailout ( )	1414:4:41009:41023	15379	1	True				
ANR	15495	CallExpression	zend_bailout ( )		15379	0					
ANR	15496	Callee	zend_bailout		15379	0					
ANR	15497	Identifier	zend_bailout		15379	0					
ANR	15498	ArgumentList			15379	1					
ANR	15499	ElseStatement	else		15379	0					
ANR	15500	CompoundStatement		23:10:794:794	15379	0					
ANR	15501	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"	1416:4:41041:41114	15379	0	True				
ANR	15502	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"		15379	0					
ANR	15503	Callee	zend_message_dispatcher		15379	0					
ANR	15504	Identifier	zend_message_dispatcher		15379	0					
ANR	15505	ArgumentList	ZMSG_FAILED_INCLUDE_FOPEN		15379	1					
ANR	15506	Argument	ZMSG_FAILED_INCLUDE_FOPEN		15379	0					
ANR	15507	Identifier	ZMSG_FAILED_INCLUDE_FOPEN		15379	0					
ANR	15508	Argument	file_handle -> filename		15379	1					
ANR	15509	PtrMemberAccess	file_handle -> filename		15379	0					
ANR	15510	Identifier	file_handle		15379	0					
ANR	15511	Identifier	filename		15379	1					
ANR	15512	ReturnStatement	return NULL ;	1418:3:41124:41135	15379	2	True				
ANR	15513	Identifier	NULL		15379	0					
ANR	15514	IfStatement	"if ( file_handle -> opened_path && zend_accel_blacklist_is_blacklisted ( & accel_blacklist , ZSTR_VAL ( file_handle -> opened_path ) ) )"		15379	9					
ANR	15515	Condition	"file_handle -> opened_path && zend_accel_blacklist_is_blacklisted ( & accel_blacklist , ZSTR_VAL ( file_handle -> opened_path ) )"	1423:5:41221:41337	15379	0	True				
ANR	15516	AndExpression	"file_handle -> opened_path && zend_accel_blacklist_is_blacklisted ( & accel_blacklist , ZSTR_VAL ( file_handle -> opened_path ) )"		15379	0		&&			
ANR	15517	PtrMemberAccess	file_handle -> opened_path		15379	0					
ANR	15518	Identifier	file_handle		15379	0					
ANR	15519	Identifier	opened_path		15379	1					
ANR	15520	CallExpression	"zend_accel_blacklist_is_blacklisted ( & accel_blacklist , ZSTR_VAL ( file_handle -> opened_path ) )"		15379	1					
ANR	15521	Callee	zend_accel_blacklist_is_blacklisted		15379	0					
ANR	15522	Identifier	zend_accel_blacklist_is_blacklisted		15379	0					
ANR	15523	ArgumentList	& accel_blacklist		15379	1					
ANR	15524	Argument	& accel_blacklist		15379	0					
ANR	15525	UnaryOperationExpression	& accel_blacklist		15379	0					
ANR	15526	UnaryOperator	&		15379	0					
ANR	15527	Identifier	accel_blacklist		15379	1					
ANR	15528	Argument	ZSTR_VAL ( file_handle -> opened_path )		15379	1					
ANR	15529	CallExpression	ZSTR_VAL ( file_handle -> opened_path )		15379	0					
ANR	15530	Callee	ZSTR_VAL		15379	0					
ANR	15531	Identifier	ZSTR_VAL		15379	0					
ANR	15532	ArgumentList	file_handle -> opened_path		15379	1					
ANR	15533	Argument	file_handle -> opened_path		15379	0					
ANR	15534	PtrMemberAccess	file_handle -> opened_path		15379	0					
ANR	15535	Identifier	file_handle		15379	0					
ANR	15536	Identifier	opened_path		15379	1					
ANR	15537	CompoundStatement		31:124:1099:1099	15379	1					
ANR	15538	ExpressionStatement	ZCSG ( blacklist_misses ) ++	1424:2:41344:41368	15379	0	True				
ANR	15539	PostIncDecOperationExpression	ZCSG ( blacklist_misses ) ++		15379	0					
ANR	15540	CallExpression	ZCSG ( blacklist_misses )		15379	0					
ANR	15541	Callee	ZCSG		15379	0					
ANR	15542	Identifier	ZCSG		15379	0					
ANR	15543	ArgumentList	blacklist_misses		15379	1					
ANR	15544	Argument	blacklist_misses		15379	0					
ANR	15545	Identifier	blacklist_misses		15379	0					
ANR	15546	IncDec	++		15379	1					
ANR	15547	ExpressionStatement	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1425:2:41372:41434	15379	1	True				
ANR	15548	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		15379	0		=			
ANR	15549	UnaryOperationExpression	* op_array_p		15379	0					
ANR	15550	UnaryOperator	*		15379	0					
ANR	15551	Identifier	op_array_p		15379	1					
ANR	15552	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		15379	1					
ANR	15553	Callee	accelerator_orig_compile_file		15379	0					
ANR	15554	Identifier	accelerator_orig_compile_file		15379	0					
ANR	15555	ArgumentList	file_handle		15379	1					
ANR	15556	Argument	file_handle		15379	0					
ANR	15557	Identifier	file_handle		15379	0					
ANR	15558	Argument	type		15379	1					
ANR	15559	Identifier	type		15379	0					
ANR	15560	ReturnStatement	return NULL ;	1426:2:41438:41449	15379	2	True				
ANR	15561	Identifier	NULL		15379	0					
ANR	15562	IfStatement	if ( ZCG ( accel_directives ) . validate_timestamps || ZCG ( accel_directives ) . file_update_protection || ZCG ( accel_directives ) . max_file_size > 0 )		15379	10					
ANR	15563	Condition	ZCG ( accel_directives ) . validate_timestamps || ZCG ( accel_directives ) . file_update_protection || ZCG ( accel_directives ) . max_file_size > 0	1429:5:41460:41601	15379	0	True				
ANR	15564	OrExpression	ZCG ( accel_directives ) . validate_timestamps || ZCG ( accel_directives ) . file_update_protection || ZCG ( accel_directives ) . max_file_size > 0		15379	0		||			
ANR	15565	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		15379	0					
ANR	15566	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	15567	Callee	ZCG		15379	0					
ANR	15568	Identifier	ZCG		15379	0					
ANR	15569	ArgumentList	accel_directives		15379	1					
ANR	15570	Argument	accel_directives		15379	0					
ANR	15571	Identifier	accel_directives		15379	0					
ANR	15572	Identifier	validate_timestamps		15379	1					
ANR	15573	OrExpression	ZCG ( accel_directives ) . file_update_protection || ZCG ( accel_directives ) . max_file_size > 0		15379	1		||			
ANR	15574	MemberAccess	ZCG ( accel_directives ) . file_update_protection		15379	0					
ANR	15575	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	15576	Callee	ZCG		15379	0					
ANR	15577	Identifier	ZCG		15379	0					
ANR	15578	ArgumentList	accel_directives		15379	1					
ANR	15579	Argument	accel_directives		15379	0					
ANR	15580	Identifier	accel_directives		15379	0					
ANR	15581	Identifier	file_update_protection		15379	1					
ANR	15582	RelationalExpression	ZCG ( accel_directives ) . max_file_size > 0		15379	1		>			
ANR	15583	MemberAccess	ZCG ( accel_directives ) . max_file_size		15379	0					
ANR	15584	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	15585	Callee	ZCG		15379	0					
ANR	15586	Identifier	ZCG		15379	0					
ANR	15587	ArgumentList	accel_directives		15379	1					
ANR	15588	Argument	accel_directives		15379	0					
ANR	15589	Identifier	accel_directives		15379	0					
ANR	15590	Identifier	max_file_size		15379	1					
ANR	15591	PrimaryExpression	0		15379	1					
ANR	15592	CompoundStatement		40:2:1367:1382	15379	1					
ANR	15593	IdentifierDeclStatement	size_t size = 0 ;	1432:2:41608:41623	15379	0	True				
ANR	15594	IdentifierDecl	size = 0		15379	0					
ANR	15595	IdentifierDeclType	size_t		15379	0					
ANR	15596	Identifier	size		15379	1					
ANR	15597	AssignmentExpression	size = 0		15379	2		=			
ANR	15598	Identifier	size		15379	0					
ANR	15599	PrimaryExpression	0		15379	1					
ANR	15600	ExpressionStatement	"timestamp = zend_get_file_handle_timestamp ( file_handle , ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL )"	1437:2:41742:41853	15379	1	True				
ANR	15601	AssignmentExpression	"timestamp = zend_get_file_handle_timestamp ( file_handle , ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL )"		15379	0		=			
ANR	15602	Identifier	timestamp		15379	0					
ANR	15603	CallExpression	"zend_get_file_handle_timestamp ( file_handle , ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL )"		15379	1					
ANR	15604	Callee	zend_get_file_handle_timestamp		15379	0					
ANR	15605	Identifier	zend_get_file_handle_timestamp		15379	0					
ANR	15606	ArgumentList	file_handle		15379	1					
ANR	15607	Argument	file_handle		15379	0					
ANR	15608	Identifier	file_handle		15379	0					
ANR	15609	Argument	ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL		15379	1					
ANR	15610	ConditionalExpression	ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL		15379	0					
ANR	15611	Condition	ZCG ( accel_directives ) . max_file_size > 0		15379	0					
ANR	15612	RelationalExpression	ZCG ( accel_directives ) . max_file_size > 0		15379	0		>			
ANR	15613	MemberAccess	ZCG ( accel_directives ) . max_file_size		15379	0					
ANR	15614	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	15615	Callee	ZCG		15379	0					
ANR	15616	Identifier	ZCG		15379	0					
ANR	15617	ArgumentList	accel_directives		15379	1					
ANR	15618	Argument	accel_directives		15379	0					
ANR	15619	Identifier	accel_directives		15379	0					
ANR	15620	Identifier	max_file_size		15379	1					
ANR	15621	PrimaryExpression	0		15379	1					
ANR	15622	UnaryOperationExpression	& size		15379	1					
ANR	15623	UnaryOperator	&		15379	0					
ANR	15624	Identifier	size		15379	1					
ANR	15625	Identifier	NULL		15379	2					
ANR	15626	IfStatement	if ( timestamp == 0 )		15379	2					
ANR	15627	Condition	timestamp == 0	1442:6:41965:41978	15379	0	True				
ANR	15628	EqualityExpression	timestamp == 0		15379	0		==			
ANR	15629	Identifier	timestamp		15379	0					
ANR	15630	PrimaryExpression	0		15379	1					
ANR	15631	CompoundStatement		50:22:1740:1740	15379	1					
ANR	15632	ExpressionStatement	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1443:3:41986:42048	15379	0	True				
ANR	15633	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		15379	0		=			
ANR	15634	UnaryOperationExpression	* op_array_p		15379	0					
ANR	15635	UnaryOperator	*		15379	0					
ANR	15636	Identifier	op_array_p		15379	1					
ANR	15637	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		15379	1					
ANR	15638	Callee	accelerator_orig_compile_file		15379	0					
ANR	15639	Identifier	accelerator_orig_compile_file		15379	0					
ANR	15640	ArgumentList	file_handle		15379	1					
ANR	15641	Argument	file_handle		15379	0					
ANR	15642	Identifier	file_handle		15379	0					
ANR	15643	Argument	type		15379	1					
ANR	15644	Identifier	type		15379	0					
ANR	15645	ReturnStatement	return NULL ;	1444:3:42053:42064	15379	1	True				
ANR	15646	Identifier	NULL		15379	0					
ANR	15647	IfStatement	if ( ZCG ( accel_directives ) . file_update_protection && ( ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection < timestamp ) )		15379	3					
ANR	15648	Condition	ZCG ( accel_directives ) . file_update_protection && ( ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection < timestamp )	1448:6:42151:42282	15379	0	True				
ANR	15649	AndExpression	ZCG ( accel_directives ) . file_update_protection && ( ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection < timestamp )		15379	0		&&			
ANR	15650	MemberAccess	ZCG ( accel_directives ) . file_update_protection		15379	0					
ANR	15651	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	15652	Callee	ZCG		15379	0					
ANR	15653	Identifier	ZCG		15379	0					
ANR	15654	ArgumentList	accel_directives		15379	1					
ANR	15655	Argument	accel_directives		15379	0					
ANR	15656	Identifier	accel_directives		15379	0					
ANR	15657	Identifier	file_update_protection		15379	1					
ANR	15658	RelationalExpression	ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection < timestamp		15379	1		<			
ANR	15659	AdditiveExpression	ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection		15379	0		-			
ANR	15660	CallExpression	ZCG ( request_time )		15379	0					
ANR	15661	Callee	ZCG		15379	0					
ANR	15662	Identifier	ZCG		15379	0					
ANR	15663	ArgumentList	request_time		15379	1					
ANR	15664	Argument	request_time		15379	0					
ANR	15665	Identifier	request_time		15379	0					
ANR	15666	MemberAccess	ZCG ( accel_directives ) . file_update_protection		15379	1					
ANR	15667	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	15668	Callee	ZCG		15379	0					
ANR	15669	Identifier	ZCG		15379	0					
ANR	15670	ArgumentList	accel_directives		15379	1					
ANR	15671	Argument	accel_directives		15379	0					
ANR	15672	Identifier	accel_directives		15379	0					
ANR	15673	Identifier	file_update_protection		15379	1					
ANR	15674	Identifier	timestamp		15379	1					
ANR	15675	CompoundStatement		57:86:2044:2044	15379	1					
ANR	15676	ExpressionStatement	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1450:3:42290:42352	15379	0	True				
ANR	15677	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		15379	0		=			
ANR	15678	UnaryOperationExpression	* op_array_p		15379	0					
ANR	15679	UnaryOperator	*		15379	0					
ANR	15680	Identifier	op_array_p		15379	1					
ANR	15681	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		15379	1					
ANR	15682	Callee	accelerator_orig_compile_file		15379	0					
ANR	15683	Identifier	accelerator_orig_compile_file		15379	0					
ANR	15684	ArgumentList	file_handle		15379	1					
ANR	15685	Argument	file_handle		15379	0					
ANR	15686	Identifier	file_handle		15379	0					
ANR	15687	Argument	type		15379	1					
ANR	15688	Identifier	type		15379	0					
ANR	15689	ReturnStatement	return NULL ;	1451:3:42357:42368	15379	1	True				
ANR	15690	Identifier	NULL		15379	0					
ANR	15691	IfStatement	if ( ZCG ( accel_directives ) . max_file_size > 0 && size > ( size_t ) ZCG ( accel_directives ) . max_file_size )		15379	4					
ANR	15692	Condition	ZCG ( accel_directives ) . max_file_size > 0 && size > ( size_t ) ZCG ( accel_directives ) . max_file_size	1454:6:42381:42473	15379	0	True				
ANR	15693	AndExpression	ZCG ( accel_directives ) . max_file_size > 0 && size > ( size_t ) ZCG ( accel_directives ) . max_file_size		15379	0		&&			
ANR	15694	RelationalExpression	ZCG ( accel_directives ) . max_file_size > 0		15379	0		>			
ANR	15695	MemberAccess	ZCG ( accel_directives ) . max_file_size		15379	0					
ANR	15696	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	15697	Callee	ZCG		15379	0					
ANR	15698	Identifier	ZCG		15379	0					
ANR	15699	ArgumentList	accel_directives		15379	1					
ANR	15700	Argument	accel_directives		15379	0					
ANR	15701	Identifier	accel_directives		15379	0					
ANR	15702	Identifier	max_file_size		15379	1					
ANR	15703	PrimaryExpression	0		15379	1					
ANR	15704	RelationalExpression	size > ( size_t ) ZCG ( accel_directives ) . max_file_size		15379	1		>			
ANR	15705	Identifier	size		15379	0					
ANR	15706	CastExpression	( size_t ) ZCG ( accel_directives ) . max_file_size		15379	1					
ANR	15707	CastTarget	size_t		15379	0					
ANR	15708	MemberAccess	ZCG ( accel_directives ) . max_file_size		15379	1					
ANR	15709	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	15710	Callee	ZCG		15379	0					
ANR	15711	Identifier	ZCG		15379	0					
ANR	15712	ArgumentList	accel_directives		15379	1					
ANR	15713	Argument	accel_directives		15379	0					
ANR	15714	Identifier	accel_directives		15379	0					
ANR	15715	Identifier	max_file_size		15379	1					
ANR	15716	CompoundStatement		62:101:2235:2235	15379	1					
ANR	15717	ExpressionStatement	ZCSG ( blacklist_misses ) ++	1455:3:42481:42505	15379	0	True				
ANR	15718	PostIncDecOperationExpression	ZCSG ( blacklist_misses ) ++		15379	0					
ANR	15719	CallExpression	ZCSG ( blacklist_misses )		15379	0					
ANR	15720	Callee	ZCSG		15379	0					
ANR	15721	Identifier	ZCSG		15379	0					
ANR	15722	ArgumentList	blacklist_misses		15379	1					
ANR	15723	Argument	blacklist_misses		15379	0					
ANR	15724	Identifier	blacklist_misses		15379	0					
ANR	15725	IncDec	++		15379	1					
ANR	15726	ExpressionStatement	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1456:3:42510:42572	15379	1	True				
ANR	15727	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		15379	0		=			
ANR	15728	UnaryOperationExpression	* op_array_p		15379	0					
ANR	15729	UnaryOperator	*		15379	0					
ANR	15730	Identifier	op_array_p		15379	1					
ANR	15731	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		15379	1					
ANR	15732	Callee	accelerator_orig_compile_file		15379	0					
ANR	15733	Identifier	accelerator_orig_compile_file		15379	0					
ANR	15734	ArgumentList	file_handle		15379	1					
ANR	15735	Argument	file_handle		15379	0					
ANR	15736	Identifier	file_handle		15379	0					
ANR	15737	Argument	type		15379	1					
ANR	15738	Identifier	type		15379	0					
ANR	15739	ReturnStatement	return NULL ;	1457:3:42577:42588	15379	2	True				
ANR	15740	Identifier	NULL		15379	0					
ANR	15741	ExpressionStatement	new_persistent_script = create_persistent_script ( )	1461:1:42599:42649	15379	11	True				
ANR	15742	AssignmentExpression	new_persistent_script = create_persistent_script ( )		15379	0		=			
ANR	15743	Identifier	new_persistent_script		15379	0					
ANR	15744	CallExpression	create_persistent_script ( )		15379	1					
ANR	15745	Callee	create_persistent_script		15379	0					
ANR	15746	Identifier	create_persistent_script		15379	0					
ANR	15747	ArgumentList			15379	1					
ANR	15748	ExpressionStatement	orig_active_op_array = CG ( active_op_array )	1464:1:42734:42776	15379	12	True				
ANR	15749	AssignmentExpression	orig_active_op_array = CG ( active_op_array )		15379	0		=			
ANR	15750	Identifier	orig_active_op_array		15379	0					
ANR	15751	CallExpression	CG ( active_op_array )		15379	1					
ANR	15752	Callee	CG		15379	0					
ANR	15753	Identifier	CG		15379	0					
ANR	15754	ArgumentList	active_op_array		15379	1					
ANR	15755	Argument	active_op_array		15379	0					
ANR	15756	Identifier	active_op_array		15379	0					
ANR	15757	ExpressionStatement	orig_function_table = CG ( function_table )	1465:1:42779:42819	15379	13	True				
ANR	15758	AssignmentExpression	orig_function_table = CG ( function_table )		15379	0		=			
ANR	15759	Identifier	orig_function_table		15379	0					
ANR	15760	CallExpression	CG ( function_table )		15379	1					
ANR	15761	Callee	CG		15379	0					
ANR	15762	Identifier	CG		15379	0					
ANR	15763	ArgumentList	function_table		15379	1					
ANR	15764	Argument	function_table		15379	0					
ANR	15765	Identifier	function_table		15379	0					
ANR	15766	ExpressionStatement	orig_class_table = CG ( class_table )	1466:1:42822:42856	15379	14	True				
ANR	15767	AssignmentExpression	orig_class_table = CG ( class_table )		15379	0		=			
ANR	15768	Identifier	orig_class_table		15379	0					
ANR	15769	CallExpression	CG ( class_table )		15379	1					
ANR	15770	Callee	CG		15379	0					
ANR	15771	Identifier	CG		15379	0					
ANR	15772	ArgumentList	class_table		15379	1					
ANR	15773	Argument	class_table		15379	0					
ANR	15774	Identifier	class_table		15379	0					
ANR	15775	ExpressionStatement	"ZVAL_COPY_VALUE ( & orig_user_error_handler , & EG ( user_error_handler ) )"	1467:1:42859:42925	15379	15	True				
ANR	15776	CallExpression	"ZVAL_COPY_VALUE ( & orig_user_error_handler , & EG ( user_error_handler ) )"		15379	0					
ANR	15777	Callee	ZVAL_COPY_VALUE		15379	0					
ANR	15778	Identifier	ZVAL_COPY_VALUE		15379	0					
ANR	15779	ArgumentList	& orig_user_error_handler		15379	1					
ANR	15780	Argument	& orig_user_error_handler		15379	0					
ANR	15781	UnaryOperationExpression	& orig_user_error_handler		15379	0					
ANR	15782	UnaryOperator	&		15379	0					
ANR	15783	Identifier	orig_user_error_handler		15379	1					
ANR	15784	Argument	& EG ( user_error_handler )		15379	1					
ANR	15785	UnaryOperationExpression	& EG ( user_error_handler )		15379	0					
ANR	15786	UnaryOperator	&		15379	0					
ANR	15787	CallExpression	EG ( user_error_handler )		15379	1					
ANR	15788	Callee	EG		15379	0					
ANR	15789	Identifier	EG		15379	0					
ANR	15790	ArgumentList	user_error_handler		15379	1					
ANR	15791	Argument	user_error_handler		15379	0					
ANR	15792	Identifier	user_error_handler		15379	0					
ANR	15793	ExpressionStatement	CG ( function_table ) = & ZCG ( function_table )	1470:1:42960:43001	15379	16	True				
ANR	15794	AssignmentExpression	CG ( function_table ) = & ZCG ( function_table )		15379	0		=			
ANR	15795	CallExpression	CG ( function_table )		15379	0					
ANR	15796	Callee	CG		15379	0					
ANR	15797	Identifier	CG		15379	0					
ANR	15798	ArgumentList	function_table		15379	1					
ANR	15799	Argument	function_table		15379	0					
ANR	15800	Identifier	function_table		15379	0					
ANR	15801	UnaryOperationExpression	& ZCG ( function_table )		15379	1					
ANR	15802	UnaryOperator	&		15379	0					
ANR	15803	CallExpression	ZCG ( function_table )		15379	1					
ANR	15804	Callee	ZCG		15379	0					
ANR	15805	Identifier	ZCG		15379	0					
ANR	15806	ArgumentList	function_table		15379	1					
ANR	15807	Argument	function_table		15379	0					
ANR	15808	Identifier	function_table		15379	0					
ANR	15809	ExpressionStatement	EG ( class_table ) = CG ( class_table ) = & new_persistent_script -> class_table	1471:1:43004:43075	15379	17	True				
ANR	15810	AssignmentExpression	EG ( class_table ) = CG ( class_table ) = & new_persistent_script -> class_table		15379	0		=			
ANR	15811	CallExpression	EG ( class_table )		15379	0					
ANR	15812	Callee	EG		15379	0					
ANR	15813	Identifier	EG		15379	0					
ANR	15814	ArgumentList	class_table		15379	1					
ANR	15815	Argument	class_table		15379	0					
ANR	15816	Identifier	class_table		15379	0					
ANR	15817	AssignmentExpression	CG ( class_table ) = & new_persistent_script -> class_table		15379	1		=			
ANR	15818	CallExpression	CG ( class_table )		15379	0					
ANR	15819	Callee	CG		15379	0					
ANR	15820	Identifier	CG		15379	0					
ANR	15821	ArgumentList	class_table		15379	1					
ANR	15822	Argument	class_table		15379	0					
ANR	15823	Identifier	class_table		15379	0					
ANR	15824	UnaryOperationExpression	& new_persistent_script -> class_table		15379	1					
ANR	15825	UnaryOperator	&		15379	0					
ANR	15826	PtrMemberAccess	new_persistent_script -> class_table		15379	1					
ANR	15827	Identifier	new_persistent_script		15379	0					
ANR	15828	Identifier	class_table		15379	1					
ANR	15829	ExpressionStatement	ZVAL_UNDEF ( & EG ( user_error_handler ) )	1472:1:43078:43113	15379	18	True				
ANR	15830	CallExpression	ZVAL_UNDEF ( & EG ( user_error_handler ) )		15379	0					
ANR	15831	Callee	ZVAL_UNDEF		15379	0					
ANR	15832	Identifier	ZVAL_UNDEF		15379	0					
ANR	15833	ArgumentList	& EG ( user_error_handler )		15379	1					
ANR	15834	Argument	& EG ( user_error_handler )		15379	0					
ANR	15835	UnaryOperationExpression	& EG ( user_error_handler )		15379	0					
ANR	15836	UnaryOperator	&		15379	0					
ANR	15837	CallExpression	EG ( user_error_handler )		15379	1					
ANR	15838	Callee	EG		15379	0					
ANR	15839	Identifier	EG		15379	0					
ANR	15840	ArgumentList	user_error_handler		15379	1					
ANR	15841	Argument	user_error_handler		15379	0					
ANR	15842	Identifier	user_error_handler		15379	0					
ANR	15843	Statement	zend_try	1474:1:43117:43124	15379	19	True				
ANR	15844	CompoundStatement		82:10:2885:2885	15379	20					
ANR	15845	ExpressionStatement	orig_compiler_options = CG ( compiler_options )	1475:2:43130:43174	15379	0	True				
ANR	15846	AssignmentExpression	orig_compiler_options = CG ( compiler_options )		15379	0		=			
ANR	15847	Identifier	orig_compiler_options		15379	0					
ANR	15848	CallExpression	CG ( compiler_options )		15379	1					
ANR	15849	Callee	CG		15379	0					
ANR	15850	Identifier	CG		15379	0					
ANR	15851	ArgumentList	compiler_options		15379	1					
ANR	15852	Argument	compiler_options		15379	0					
ANR	15853	Identifier	compiler_options		15379	0					
ANR	15854	ExpressionStatement	CG ( compiler_options ) |= ZEND_COMPILE_HANDLE_OP_ARRAY	1476:2:43178:43230	15379	1	True				
ANR	15855	AssignmentExpression	CG ( compiler_options ) |= ZEND_COMPILE_HANDLE_OP_ARRAY		15379	0		|=			
ANR	15856	CallExpression	CG ( compiler_options )		15379	0					
ANR	15857	Callee	CG		15379	0					
ANR	15858	Identifier	CG		15379	0					
ANR	15859	ArgumentList	compiler_options		15379	1					
ANR	15860	Argument	compiler_options		15379	0					
ANR	15861	Identifier	compiler_options		15379	0					
ANR	15862	Identifier	ZEND_COMPILE_HANDLE_OP_ARRAY		15379	1					
ANR	15863	ExpressionStatement	CG ( compiler_options ) |= ZEND_COMPILE_IGNORE_INTERNAL_CLASSES	1477:2:43234:43294	15379	2	True				
ANR	15864	AssignmentExpression	CG ( compiler_options ) |= ZEND_COMPILE_IGNORE_INTERNAL_CLASSES		15379	0		|=			
ANR	15865	CallExpression	CG ( compiler_options )		15379	0					
ANR	15866	Callee	CG		15379	0					
ANR	15867	Identifier	CG		15379	0					
ANR	15868	ArgumentList	compiler_options		15379	1					
ANR	15869	Argument	compiler_options		15379	0					
ANR	15870	Identifier	compiler_options		15379	0					
ANR	15871	Identifier	ZEND_COMPILE_IGNORE_INTERNAL_CLASSES		15379	1					
ANR	15872	ExpressionStatement	CG ( compiler_options ) |= ZEND_COMPILE_DELAYED_BINDING	1478:2:43298:43350	15379	3	True				
ANR	15873	AssignmentExpression	CG ( compiler_options ) |= ZEND_COMPILE_DELAYED_BINDING		15379	0		|=			
ANR	15874	CallExpression	CG ( compiler_options )		15379	0					
ANR	15875	Callee	CG		15379	0					
ANR	15876	Identifier	CG		15379	0					
ANR	15877	ArgumentList	compiler_options		15379	1					
ANR	15878	Argument	compiler_options		15379	0					
ANR	15879	Identifier	compiler_options		15379	0					
ANR	15880	Identifier	ZEND_COMPILE_DELAYED_BINDING		15379	1					
ANR	15881	ExpressionStatement	CG ( compiler_options ) |= ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION	1479:2:43354:43415	15379	4	True				
ANR	15882	AssignmentExpression	CG ( compiler_options ) |= ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		15379	0		|=			
ANR	15883	CallExpression	CG ( compiler_options )		15379	0					
ANR	15884	Callee	CG		15379	0					
ANR	15885	Identifier	CG		15379	0					
ANR	15886	ArgumentList	compiler_options		15379	1					
ANR	15887	Argument	compiler_options		15379	0					
ANR	15888	Identifier	compiler_options		15379	0					
ANR	15889	Identifier	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		15379	1					
ANR	15890	ExpressionStatement	"op_array = * op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1480:2:43419:43492	15379	5	True				
ANR	15891	AssignmentExpression	"op_array = * op_array_p = accelerator_orig_compile_file ( file_handle , type )"		15379	0		=			
ANR	15892	Identifier	op_array		15379	0					
ANR	15893	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		15379	1		=			
ANR	15894	UnaryOperationExpression	* op_array_p		15379	0					
ANR	15895	UnaryOperator	*		15379	0					
ANR	15896	Identifier	op_array_p		15379	1					
ANR	15897	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		15379	1					
ANR	15898	Callee	accelerator_orig_compile_file		15379	0					
ANR	15899	Identifier	accelerator_orig_compile_file		15379	0					
ANR	15900	ArgumentList	file_handle		15379	1					
ANR	15901	Argument	file_handle		15379	0					
ANR	15902	Identifier	file_handle		15379	0					
ANR	15903	Argument	type		15379	1					
ANR	15904	Identifier	type		15379	0					
ANR	15905	ExpressionStatement	CG ( compiler_options ) = orig_compiler_options	1481:2:43496:43540	15379	6	True				
ANR	15906	AssignmentExpression	CG ( compiler_options ) = orig_compiler_options		15379	0		=			
ANR	15907	CallExpression	CG ( compiler_options )		15379	0					
ANR	15908	Callee	CG		15379	0					
ANR	15909	Identifier	CG		15379	0					
ANR	15910	ArgumentList	compiler_options		15379	1					
ANR	15911	Argument	compiler_options		15379	0					
ANR	15912	Identifier	compiler_options		15379	0					
ANR	15913	Identifier	orig_compiler_options		15379	1					
ANR	15914	Statement	zend_catch	1482:3:43545:43554	15379	21	True				
ANR	15915	CompoundStatement		90:14:3315:3315	15379	22					
ANR	15916	ExpressionStatement	op_array = NULL	1483:2:43560:43575	15379	0	True				
ANR	15917	AssignmentExpression	op_array = NULL		15379	0		=			
ANR	15918	Identifier	op_array		15379	0					
ANR	15919	Identifier	NULL		15379	1					
ANR	15920	ExpressionStatement	do_bailout = 1	1484:2:43579:43593	15379	1	True				
ANR	15921	AssignmentExpression	do_bailout = 1		15379	0		=			
ANR	15922	Identifier	do_bailout		15379	0					
ANR	15923	PrimaryExpression	1		15379	1					
ANR	15924	ExpressionStatement	CG ( compiler_options ) = orig_compiler_options	1485:2:43597:43641	15379	2	True				
ANR	15925	AssignmentExpression	CG ( compiler_options ) = orig_compiler_options		15379	0		=			
ANR	15926	CallExpression	CG ( compiler_options )		15379	0					
ANR	15927	Callee	CG		15379	0					
ANR	15928	Identifier	CG		15379	0					
ANR	15929	ArgumentList	compiler_options		15379	1					
ANR	15930	Argument	compiler_options		15379	0					
ANR	15931	Identifier	compiler_options		15379	0					
ANR	15932	Identifier	orig_compiler_options		15379	1					
ANR	15933	ExpressionStatement	zend_end_try ( )	1486:3:43646:43660	15379	23	True				
ANR	15934	CallExpression	zend_end_try ( )		15379	0					
ANR	15935	Callee	zend_end_try		15379	0					
ANR	15936	Identifier	zend_end_try		15379	0					
ANR	15937	ArgumentList			15379	1					
ANR	15938	ExpressionStatement	CG ( active_op_array ) = orig_active_op_array	1489:1:43689:43731	15379	24	True				
ANR	15939	AssignmentExpression	CG ( active_op_array ) = orig_active_op_array		15379	0		=			
ANR	15940	CallExpression	CG ( active_op_array )		15379	0					
ANR	15941	Callee	CG		15379	0					
ANR	15942	Identifier	CG		15379	0					
ANR	15943	ArgumentList	active_op_array		15379	1					
ANR	15944	Argument	active_op_array		15379	0					
ANR	15945	Identifier	active_op_array		15379	0					
ANR	15946	Identifier	orig_active_op_array		15379	1					
ANR	15947	ExpressionStatement	CG ( function_table ) = orig_function_table	1490:1:43734:43774	15379	25	True				
ANR	15948	AssignmentExpression	CG ( function_table ) = orig_function_table		15379	0		=			
ANR	15949	CallExpression	CG ( function_table )		15379	0					
ANR	15950	Callee	CG		15379	0					
ANR	15951	Identifier	CG		15379	0					
ANR	15952	ArgumentList	function_table		15379	1					
ANR	15953	Argument	function_table		15379	0					
ANR	15954	Identifier	function_table		15379	0					
ANR	15955	Identifier	orig_function_table		15379	1					
ANR	15956	ExpressionStatement	EG ( class_table ) = CG ( class_table ) = orig_class_table	1491:1:43777:43829	15379	26	True				
ANR	15957	AssignmentExpression	EG ( class_table ) = CG ( class_table ) = orig_class_table		15379	0		=			
ANR	15958	CallExpression	EG ( class_table )		15379	0					
ANR	15959	Callee	EG		15379	0					
ANR	15960	Identifier	EG		15379	0					
ANR	15961	ArgumentList	class_table		15379	1					
ANR	15962	Argument	class_table		15379	0					
ANR	15963	Identifier	class_table		15379	0					
ANR	15964	AssignmentExpression	CG ( class_table ) = orig_class_table		15379	1		=			
ANR	15965	CallExpression	CG ( class_table )		15379	0					
ANR	15966	Callee	CG		15379	0					
ANR	15967	Identifier	CG		15379	0					
ANR	15968	ArgumentList	class_table		15379	1					
ANR	15969	Argument	class_table		15379	0					
ANR	15970	Identifier	class_table		15379	0					
ANR	15971	Identifier	orig_class_table		15379	1					
ANR	15972	ExpressionStatement	EG ( user_error_handler ) = orig_user_error_handler	1492:1:43832:43880	15379	27	True				
ANR	15973	AssignmentExpression	EG ( user_error_handler ) = orig_user_error_handler		15379	0		=			
ANR	15974	CallExpression	EG ( user_error_handler )		15379	0					
ANR	15975	Callee	EG		15379	0					
ANR	15976	Identifier	EG		15379	0					
ANR	15977	ArgumentList	user_error_handler		15379	1					
ANR	15978	Argument	user_error_handler		15379	0					
ANR	15979	Identifier	user_error_handler		15379	0					
ANR	15980	Identifier	orig_user_error_handler		15379	1					
ANR	15981	IfStatement	if ( ! op_array )		15379	28					
ANR	15982	Condition	! op_array	1494:5:43888:43896	15379	0	True				
ANR	15983	UnaryOperationExpression	! op_array		15379	0					
ANR	15984	UnaryOperator	!		15379	0					
ANR	15985	Identifier	op_array		15379	1					
ANR	15986	CompoundStatement		102:16:3658:3658	15379	1					
ANR	15987	ExpressionStatement	"free_persistent_script ( new_persistent_script , 1 )"	1496:2:43930:43978	15379	0	True				
ANR	15988	CallExpression	"free_persistent_script ( new_persistent_script , 1 )"		15379	0					
ANR	15989	Callee	free_persistent_script		15379	0					
ANR	15990	Identifier	free_persistent_script		15379	0					
ANR	15991	ArgumentList	new_persistent_script		15379	1					
ANR	15992	Argument	new_persistent_script		15379	0					
ANR	15993	Identifier	new_persistent_script		15379	0					
ANR	15994	Argument	1		15379	1					
ANR	15995	PrimaryExpression	1		15379	0					
ANR	15996	ExpressionStatement	zend_accel_free_user_functions ( & ZCG ( function_table ) )	1497:2:43982:44034	15379	1	True				
ANR	15997	CallExpression	zend_accel_free_user_functions ( & ZCG ( function_table ) )		15379	0					
ANR	15998	Callee	zend_accel_free_user_functions		15379	0					
ANR	15999	Identifier	zend_accel_free_user_functions		15379	0					
ANR	16000	ArgumentList	& ZCG ( function_table )		15379	1					
ANR	16001	Argument	& ZCG ( function_table )		15379	0					
ANR	16002	UnaryOperationExpression	& ZCG ( function_table )		15379	0					
ANR	16003	UnaryOperator	&		15379	0					
ANR	16004	CallExpression	ZCG ( function_table )		15379	1					
ANR	16005	Callee	ZCG		15379	0					
ANR	16006	Identifier	ZCG		15379	0					
ANR	16007	ArgumentList	function_table		15379	1					
ANR	16008	Argument	function_table		15379	0					
ANR	16009	Identifier	function_table		15379	0					
ANR	16010	IfStatement	if ( do_bailout )		15379	2					
ANR	16011	Condition	do_bailout	1498:6:44042:44051	15379	0	True				
ANR	16012	Identifier	do_bailout		15379	0					
ANR	16013	CompoundStatement		106:18:3813:3813	15379	1					
ANR	16014	ExpressionStatement	zend_bailout ( )	1499:3:44059:44073	15379	0	True				
ANR	16015	CallExpression	zend_bailout ( )		15379	0					
ANR	16016	Callee	zend_bailout		15379	0					
ANR	16017	Identifier	zend_bailout		15379	0					
ANR	16018	ArgumentList			15379	1					
ANR	16019	ReturnStatement	return NULL ;	1501:2:44081:44092	15379	3	True				
ANR	16020	Identifier	NULL		15379	0					
ANR	16021	ExpressionStatement	"zend_accel_move_user_functions ( & ZCG ( function_table ) , & new_persistent_script -> function_table )"	1508:1:44229:44321	15379	29	True				
ANR	16022	CallExpression	"zend_accel_move_user_functions ( & ZCG ( function_table ) , & new_persistent_script -> function_table )"		15379	0					
ANR	16023	Callee	zend_accel_move_user_functions		15379	0					
ANR	16024	Identifier	zend_accel_move_user_functions		15379	0					
ANR	16025	ArgumentList	& ZCG ( function_table )		15379	1					
ANR	16026	Argument	& ZCG ( function_table )		15379	0					
ANR	16027	UnaryOperationExpression	& ZCG ( function_table )		15379	0					
ANR	16028	UnaryOperator	&		15379	0					
ANR	16029	CallExpression	ZCG ( function_table )		15379	1					
ANR	16030	Callee	ZCG		15379	0					
ANR	16031	Identifier	ZCG		15379	0					
ANR	16032	ArgumentList	function_table		15379	1					
ANR	16033	Argument	function_table		15379	0					
ANR	16034	Identifier	function_table		15379	0					
ANR	16035	Argument	& new_persistent_script -> function_table		15379	1					
ANR	16036	UnaryOperationExpression	& new_persistent_script -> function_table		15379	0					
ANR	16037	UnaryOperator	&		15379	0					
ANR	16038	PtrMemberAccess	new_persistent_script -> function_table		15379	1					
ANR	16039	Identifier	new_persistent_script		15379	0					
ANR	16040	Identifier	function_table		15379	1					
ANR	16041	ExpressionStatement	new_persistent_script -> main_op_array = * op_array	1509:1:44324:44372	15379	30	True				
ANR	16042	AssignmentExpression	new_persistent_script -> main_op_array = * op_array		15379	0		=			
ANR	16043	PtrMemberAccess	new_persistent_script -> main_op_array		15379	0					
ANR	16044	Identifier	new_persistent_script		15379	0					
ANR	16045	Identifier	main_op_array		15379	1					
ANR	16046	UnaryOperationExpression	* op_array		15379	1					
ANR	16047	UnaryOperator	*		15379	0					
ANR	16048	Identifier	op_array		15379	1					
ANR	16049	ExpressionStatement	efree ( op_array )	1511:1:44376:44391	15379	31	True				
ANR	16050	CallExpression	efree ( op_array )		15379	0					
ANR	16051	Callee	efree		15379	0					
ANR	16052	Identifier	efree		15379	0					
ANR	16053	ArgumentList	op_array		15379	1					
ANR	16054	Argument	op_array		15379	0					
ANR	16055	Identifier	op_array		15379	0					
ANR	16056	IfStatement	if ( PG ( auto_globals_jit ) )		15379	32					
ANR	16057	Condition	PG ( auto_globals_jit )	1515:5:44644:44663	15379	0	True				
ANR	16058	CallExpression	PG ( auto_globals_jit )		15379	0					
ANR	16059	Callee	PG		15379	0					
ANR	16060	Identifier	PG		15379	0					
ANR	16061	ArgumentList	auto_globals_jit		15379	1					
ANR	16062	Argument	auto_globals_jit		15379	0					
ANR	16063	Identifier	auto_globals_jit		15379	0					
ANR	16064	CompoundStatement		123:27:4425:4425	15379	1					
ANR	16065	ExpressionStatement	new_persistent_script -> ping_auto_globals_mask = zend_accel_get_auto_globals ( )	1516:2:44670:44747	15379	0	True				
ANR	16066	AssignmentExpression	new_persistent_script -> ping_auto_globals_mask = zend_accel_get_auto_globals ( )		15379	0		=			
ANR	16067	PtrMemberAccess	new_persistent_script -> ping_auto_globals_mask		15379	0					
ANR	16068	Identifier	new_persistent_script		15379	0					
ANR	16069	Identifier	ping_auto_globals_mask		15379	1					
ANR	16070	CallExpression	zend_accel_get_auto_globals ( )		15379	1					
ANR	16071	Callee	zend_accel_get_auto_globals		15379	0					
ANR	16072	Identifier	zend_accel_get_auto_globals		15379	0					
ANR	16073	ArgumentList			15379	1					
ANR	16074	ElseStatement	else		15379	0					
ANR	16075	CompoundStatement		125:8:4516:4516	15379	0					
ANR	16076	ExpressionStatement	new_persistent_script -> ping_auto_globals_mask = zend_accel_get_auto_globals_no_jit ( )	1518:2:44761:44845	15379	0	True				
ANR	16077	AssignmentExpression	new_persistent_script -> ping_auto_globals_mask = zend_accel_get_auto_globals_no_jit ( )		15379	0		=			
ANR	16078	PtrMemberAccess	new_persistent_script -> ping_auto_globals_mask		15379	0					
ANR	16079	Identifier	new_persistent_script		15379	0					
ANR	16080	Identifier	ping_auto_globals_mask		15379	1					
ANR	16081	CallExpression	zend_accel_get_auto_globals_no_jit ( )		15379	1					
ANR	16082	Callee	zend_accel_get_auto_globals_no_jit		15379	0					
ANR	16083	Identifier	zend_accel_get_auto_globals_no_jit		15379	0					
ANR	16084	ArgumentList			15379	1					
ANR	16085	IfStatement	if ( ZCG ( accel_directives ) . validate_timestamps )		15379	33					
ANR	16086	Condition	ZCG ( accel_directives ) . validate_timestamps	1521:5:44856:44896	15379	0	True				
ANR	16087	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		15379	0					
ANR	16088	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	16089	Callee	ZCG		15379	0					
ANR	16090	Identifier	ZCG		15379	0					
ANR	16091	ArgumentList	accel_directives		15379	1					
ANR	16092	Argument	accel_directives		15379	0					
ANR	16093	Identifier	accel_directives		15379	0					
ANR	16094	Identifier	validate_timestamps		15379	1					
ANR	16095	CompoundStatement		129:48:4658:4658	15379	1					
ANR	16096	ExpressionStatement	new_persistent_script -> timestamp = timestamp	1525:2:45017:45061	15379	0	True				
ANR	16097	AssignmentExpression	new_persistent_script -> timestamp = timestamp		15379	0		=			
ANR	16098	PtrMemberAccess	new_persistent_script -> timestamp		15379	0					
ANR	16099	Identifier	new_persistent_script		15379	0					
ANR	16100	Identifier	timestamp		15379	1					
ANR	16101	Identifier	timestamp		15379	1					
ANR	16102	ExpressionStatement	new_persistent_script -> dynamic_members . revalidate = ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq	1526:2:45065:45174	15379	1	True				
ANR	16103	AssignmentExpression	new_persistent_script -> dynamic_members . revalidate = ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq		15379	0		=			
ANR	16104	MemberAccess	new_persistent_script -> dynamic_members . revalidate		15379	0					
ANR	16105	PtrMemberAccess	new_persistent_script -> dynamic_members		15379	0					
ANR	16106	Identifier	new_persistent_script		15379	0					
ANR	16107	Identifier	dynamic_members		15379	1					
ANR	16108	Identifier	revalidate		15379	1					
ANR	16109	AdditiveExpression	ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq		15379	1		+			
ANR	16110	CallExpression	ZCG ( request_time )		15379	0					
ANR	16111	Callee	ZCG		15379	0					
ANR	16112	Identifier	ZCG		15379	0					
ANR	16113	ArgumentList	request_time		15379	1					
ANR	16114	Argument	request_time		15379	0					
ANR	16115	Identifier	request_time		15379	0					
ANR	16116	MemberAccess	ZCG ( accel_directives ) . revalidate_freq		15379	1					
ANR	16117	CallExpression	ZCG ( accel_directives )		15379	0					
ANR	16118	Callee	ZCG		15379	0					
ANR	16119	Identifier	ZCG		15379	0					
ANR	16120	ArgumentList	accel_directives		15379	1					
ANR	16121	Argument	accel_directives		15379	0					
ANR	16122	Identifier	accel_directives		15379	0					
ANR	16123	Identifier	revalidate_freq		15379	1					
ANR	16124	IfStatement	if ( file_handle -> opened_path )		15379	34					
ANR	16125	Condition	file_handle -> opened_path	1529:5:45185:45208	15379	0	True				
ANR	16126	PtrMemberAccess	file_handle -> opened_path		15379	0					
ANR	16127	Identifier	file_handle		15379	0					
ANR	16128	Identifier	opened_path		15379	1					
ANR	16129	CompoundStatement		137:31:4970:4970	15379	1					
ANR	16130	ExpressionStatement	new_persistent_script -> full_path = zend_string_copy ( file_handle -> opened_path )	1530:2:45215:45292	15379	0	True				
ANR	16131	AssignmentExpression	new_persistent_script -> full_path = zend_string_copy ( file_handle -> opened_path )		15379	0		=			
ANR	16132	PtrMemberAccess	new_persistent_script -> full_path		15379	0					
ANR	16133	Identifier	new_persistent_script		15379	0					
ANR	16134	Identifier	full_path		15379	1					
ANR	16135	CallExpression	zend_string_copy ( file_handle -> opened_path )		15379	1					
ANR	16136	Callee	zend_string_copy		15379	0					
ANR	16137	Identifier	zend_string_copy		15379	0					
ANR	16138	ArgumentList	file_handle -> opened_path		15379	1					
ANR	16139	Argument	file_handle -> opened_path		15379	0					
ANR	16140	PtrMemberAccess	file_handle -> opened_path		15379	0					
ANR	16141	Identifier	file_handle		15379	0					
ANR	16142	Identifier	opened_path		15379	1					
ANR	16143	ElseStatement	else		15379	0					
ANR	16144	CompoundStatement		139:8:5061:5061	15379	0					
ANR	16145	ExpressionStatement	"new_persistent_script -> full_path = zend_string_init ( file_handle -> filename , strlen ( file_handle -> filename ) , 0 )"	1532:2:45306:45414	15379	0	True				
ANR	16146	AssignmentExpression	"new_persistent_script -> full_path = zend_string_init ( file_handle -> filename , strlen ( file_handle -> filename ) , 0 )"		15379	0		=			
ANR	16147	PtrMemberAccess	new_persistent_script -> full_path		15379	0					
ANR	16148	Identifier	new_persistent_script		15379	0					
ANR	16149	Identifier	full_path		15379	1					
ANR	16150	CallExpression	"zend_string_init ( file_handle -> filename , strlen ( file_handle -> filename ) , 0 )"		15379	1					
ANR	16151	Callee	zend_string_init		15379	0					
ANR	16152	Identifier	zend_string_init		15379	0					
ANR	16153	ArgumentList	file_handle -> filename		15379	1					
ANR	16154	Argument	file_handle -> filename		15379	0					
ANR	16155	PtrMemberAccess	file_handle -> filename		15379	0					
ANR	16156	Identifier	file_handle		15379	0					
ANR	16157	Identifier	filename		15379	1					
ANR	16158	Argument	strlen ( file_handle -> filename )		15379	1					
ANR	16159	CallExpression	strlen ( file_handle -> filename )		15379	0					
ANR	16160	Callee	strlen		15379	0					
ANR	16161	Identifier	strlen		15379	0					
ANR	16162	ArgumentList	file_handle -> filename		15379	1					
ANR	16163	Argument	file_handle -> filename		15379	0					
ANR	16164	PtrMemberAccess	file_handle -> filename		15379	0					
ANR	16165	Identifier	file_handle		15379	0					
ANR	16166	Identifier	filename		15379	1					
ANR	16167	Argument	0		15379	2					
ANR	16168	PrimaryExpression	0		15379	0					
ANR	16169	ExpressionStatement	zend_string_hash_val ( new_persistent_script -> full_path )	1534:1:45420:45474	15379	35	True				
ANR	16170	CallExpression	zend_string_hash_val ( new_persistent_script -> full_path )		15379	0					
ANR	16171	Callee	zend_string_hash_val		15379	0					
ANR	16172	Identifier	zend_string_hash_val		15379	0					
ANR	16173	ArgumentList	new_persistent_script -> full_path		15379	1					
ANR	16174	Argument	new_persistent_script -> full_path		15379	0					
ANR	16175	PtrMemberAccess	new_persistent_script -> full_path		15379	0					
ANR	16176	Identifier	new_persistent_script		15379	0					
ANR	16177	Identifier	full_path		15379	1					
ANR	16178	ReturnStatement	return new_persistent_script ;	1537:1:45544:45572	15379	36	True				
ANR	16179	Identifier	new_persistent_script		15379	0					
ANR	16180	ReturnType	static zend_persistent_script *		15379	1					
ANR	16181	Identifier	opcache_compile_file		15379	2					
ANR	16182	ParameterList	"zend_file_handle * file_handle , int type , char * key , unsigned int key_length , zend_op_array * * op_array_p"		15379	3					
ANR	16183	Parameter	zend_file_handle * file_handle	1392:52:40135:40163	15379	0	True				
ANR	16184	ParameterType	zend_file_handle *		15379	0					
ANR	16185	Identifier	file_handle		15379	1					
ANR	16186	Parameter	int type	1392:83:40166:40173	15379	1	True				
ANR	16187	ParameterType	int		15379	0					
ANR	16188	Identifier	type		15379	1					
ANR	16189	Parameter	char * key	1392:93:40176:40184	15379	2	True				
ANR	16190	ParameterType	char *		15379	0					
ANR	16191	Identifier	key		15379	1					
ANR	16192	Parameter	unsigned int key_length	1392:104:40187:40209	15379	3	True				
ANR	16193	ParameterType	unsigned int		15379	0					
ANR	16194	Identifier	key_length		15379	1					
ANR	16195	Parameter	zend_op_array * * op_array_p	1392:129:40212:40237	15379	4	True				
ANR	16196	ParameterType	zend_op_array * *		15379	0					
ANR	16197	Identifier	op_array_p		15379	1					
ANR	16198	CFGEntryNode	ENTRY		15379		True				
ANR	16199	CFGExitNode	EXIT		15379		True				
ANR	16200	Symbol	new_persistent_script -> timestamp		15379						
ANR	16201	Symbol	new_persistent_script -> full_path		15379						
ANR	16202	Symbol	new_persistent_script -> dynamic_members . revalidate		15379						
ANR	16203	Symbol	new_persistent_script -> main_op_array		15379						
ANR	16204	Symbol	type		15379						
ANR	16205	Symbol	orig_compiler_options		15379						
ANR	16206	Symbol	strlen		15379						
ANR	16207	Symbol	zend_string_init		15379						
ANR	16208	Symbol	ZEND_COMPILE_DELAYED_BINDING		15379						
ANR	16209	Symbol	ZCSG		15379						
ANR	16210	Symbol	new_persistent_script		15379						
ANR	16211	Symbol	zend_get_file_handle_timestamp		15379						
ANR	16212	Symbol	EG		15379						
ANR	16213	Symbol	orig_user_error_handler		15379						
ANR	16214	Symbol	NULL		15379						
ANR	16215	Symbol	ZMSG_FAILED_INCLUDE_FOPEN		15379						
ANR	16216	Symbol	blacklist_misses		15379						
ANR	16217	Symbol	zend_string_copy		15379						
ANR	16218	Symbol	ZCG ( accel_directives ) . file_update_protection		15379						
ANR	16219	Symbol	file_handle		15379						
ANR	16220	Symbol	* op_array		15379						
ANR	16221	Symbol	* op_array_p		15379						
ANR	16222	Symbol	file_handle -> opened_path		15379						
ANR	16223	Symbol	ZCG ( accel_directives ) . revalidate_freq		15379						
ANR	16224	Symbol	file_handle -> filename		15379						
ANR	16225	Symbol	size		15379						
ANR	16226	Symbol	new_persistent_script -> dynamic_members		15379						
ANR	16227	Symbol	ZMSG_FAILED_REQUIRE_FOPEN		15379						
ANR	16228	Symbol	ZEND_HANDLE_FILENAME		15379						
ANR	16229	Symbol	do_bailout		15379						
ANR	16230	Symbol	function_table		15379						
ANR	16231	Symbol	op_array_p		15379						
ANR	16232	Symbol	ZCG		15379						
ANR	16233	Symbol	& orig_user_error_handler		15379						
ANR	16234	Symbol	& accel_blacklist		15379						
ANR	16235	Symbol	new_persistent_script -> ping_auto_globals_mask		15379						
ANR	16236	Symbol	user_error_handler		15379						
ANR	16237	Symbol	ZCG ( accel_directives ) . validate_timestamps		15379						
ANR	16238	Symbol	auto_globals_jit		15379						
ANR	16239	Symbol	ZCG ( accel_directives ) . max_file_size		15379						
ANR	16240	Symbol	zend_accel_blacklist_is_blacklisted		15379						
ANR	16241	Symbol	create_persistent_script		15379						
ANR	16242	Symbol	accelerator_orig_compile_file		15379						
ANR	16243	Symbol	& EG		15379						
ANR	16244	Symbol	* file_handle		15379						
ANR	16245	Symbol	zend_accel_get_auto_globals_no_jit		15379						
ANR	16246	Symbol	file_handle -> type		15379						
ANR	16247	Symbol	compiler_options		15379						
ANR	16248	Symbol	accelerator_orig_zend_stream_open_function		15379						
ANR	16249	Symbol	request_time		15379						
ANR	16250	Symbol	& new_persistent_script -> class_table		15379						
ANR	16251	Symbol	key_length		15379						
ANR	16252	Symbol	orig_active_op_array		15379						
ANR	16253	Symbol	class_table		15379						
ANR	16254	Symbol	ZEND_COMPILE_IGNORE_INTERNAL_CLASSES		15379						
ANR	16255	Symbol	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		15379						
ANR	16256	Symbol	key		15379						
ANR	16257	Symbol	orig_function_table		15379						
ANR	16258	Symbol	timestamp		15379						
ANR	16259	Symbol	key_len		15379						
ANR	16260	Symbol	ZEND_COMPILE_HANDLE_OP_ARRAY		15379						
ANR	16261	Symbol	& new_persistent_script -> function_table		15379						
ANR	16262	Symbol	orig_class_table		15379						
ANR	16263	Symbol	SUCCESS		15379						
ANR	16264	Symbol	& ZCG		15379						
ANR	16265	Symbol	CG		15379						
ANR	16266	Symbol	active_op_array		15379						
ANR	16267	Symbol	& size		15379						
ANR	16268	Symbol	ZSTR_VAL		15379						
ANR	16269	Symbol	zend_accel_get_auto_globals		15379						
ANR	16270	Symbol	ZEND_REQUIRE		15379						
ANR	16271	Symbol	PG		15379						
ANR	16272	Symbol	accel_directives		15379						
ANR	16273	Symbol	* new_persistent_script		15379						
ANR	16274	Symbol	op_array		15379						
ANR	16275	Function	file_cache_compile_file	1541:0:45608:48203							
ANR	16276	FunctionDef	"file_cache_compile_file (zend_file_handle * file_handle , int type)"		16275	0					
ANR	16277	CompoundStatement		1542:0:45688:48203	16275	0					
ANR	16278	IdentifierDeclStatement	zend_persistent_script * persistent_script ;	1543:1:45691:45732	16275	0	True				
ANR	16279	IdentifierDecl	* persistent_script		16275	0					
ANR	16280	IdentifierDeclType	zend_persistent_script *		16275	0					
ANR	16281	Identifier	persistent_script		16275	1					
ANR	16282	IdentifierDeclStatement	zend_op_array * op_array = NULL ;	1544:1:45735:45765	16275	1	True				
ANR	16283	IdentifierDecl	* op_array = NULL		16275	0					
ANR	16284	IdentifierDeclType	zend_op_array *		16275	0					
ANR	16285	Identifier	op_array		16275	1					
ANR	16286	AssignmentExpression	* op_array = NULL		16275	2		=			
ANR	16287	Identifier	NULL		16275	0					
ANR	16288	Identifier	NULL		16275	1					
ANR	16289	IdentifierDeclStatement	int from_memory ;	1545:1:45768:45783	16275	2	True				
ANR	16290	IdentifierDecl	from_memory		16275	0					
ANR	16291	IdentifierDeclType	int		16275	0					
ANR	16292	Identifier	from_memory		16275	1					
ANR	16293	IfStatement	if ( is_stream_path ( file_handle -> filename ) && ! is_cacheable_stream_path ( file_handle -> filename ) )		16275	3					
ANR	16294	Condition	is_stream_path ( file_handle -> filename ) && ! is_cacheable_stream_path ( file_handle -> filename )	1547:5:45838:45931	16275	0	True				
ANR	16295	AndExpression	is_stream_path ( file_handle -> filename ) && ! is_cacheable_stream_path ( file_handle -> filename )		16275	0		&&			
ANR	16296	CallExpression	is_stream_path ( file_handle -> filename )		16275	0					
ANR	16297	Callee	is_stream_path		16275	0					
ANR	16298	Identifier	is_stream_path		16275	0					
ANR	16299	ArgumentList	file_handle -> filename		16275	1					
ANR	16300	Argument	file_handle -> filename		16275	0					
ANR	16301	PtrMemberAccess	file_handle -> filename		16275	0					
ANR	16302	Identifier	file_handle		16275	0					
ANR	16303	Identifier	filename		16275	1					
ANR	16304	UnaryOperationExpression	! is_cacheable_stream_path ( file_handle -> filename )		16275	1					
ANR	16305	UnaryOperator	!		16275	0					
ANR	16306	CallExpression	is_cacheable_stream_path ( file_handle -> filename )		16275	1					
ANR	16307	Callee	is_cacheable_stream_path		16275	0					
ANR	16308	Identifier	is_cacheable_stream_path		16275	0					
ANR	16309	ArgumentList	file_handle -> filename		16275	1					
ANR	16310	Argument	file_handle -> filename		16275	0					
ANR	16311	PtrMemberAccess	file_handle -> filename		16275	0					
ANR	16312	Identifier	file_handle		16275	0					
ANR	16313	Identifier	filename		16275	1					
ANR	16314	CompoundStatement		7:55:245:245	16275	1					
ANR	16315	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1549:2:45938:45993	16275	0	True				
ANR	16316	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		16275	0					
ANR	16317	Callee	accelerator_orig_compile_file		16275	0					
ANR	16318	Identifier	accelerator_orig_compile_file		16275	0					
ANR	16319	ArgumentList	file_handle		16275	1					
ANR	16320	Argument	file_handle		16275	0					
ANR	16321	Identifier	file_handle		16275	0					
ANR	16322	Argument	type		16275	1					
ANR	16323	Identifier	type		16275	0					
ANR	16324	IfStatement	if ( ! file_handle -> opened_path )		16275	4					
ANR	16325	Condition	! file_handle -> opened_path	1552:5:46004:46028	16275	0	True				
ANR	16326	UnaryOperationExpression	! file_handle -> opened_path		16275	0					
ANR	16327	UnaryOperator	!		16275	0					
ANR	16328	PtrMemberAccess	file_handle -> opened_path		16275	1					
ANR	16329	Identifier	file_handle		16275	0					
ANR	16330	Identifier	opened_path		16275	1					
ANR	16331	CompoundStatement		11:32:342:342	16275	1					
ANR	16332	IfStatement	"if ( file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE )"		16275	0					
ANR	16333	Condition	"file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"	1553:6:46039:46178	16275	0	True				
ANR	16334	AndExpression	"file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"		16275	0		&&			
ANR	16335	EqualityExpression	file_handle -> type == ZEND_HANDLE_FILENAME		16275	0		==			
ANR	16336	PtrMemberAccess	file_handle -> type		16275	0					
ANR	16337	Identifier	file_handle		16275	0					
ANR	16338	Identifier	type		16275	1					
ANR	16339	Identifier	ZEND_HANDLE_FILENAME		16275	1					
ANR	16340	EqualityExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"		16275	1		==			
ANR	16341	CallExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle )"		16275	0					
ANR	16342	Callee	accelerator_orig_zend_stream_open_function		16275	0					
ANR	16343	Identifier	accelerator_orig_zend_stream_open_function		16275	0					
ANR	16344	ArgumentList	file_handle -> filename		16275	1					
ANR	16345	Argument	file_handle -> filename		16275	0					
ANR	16346	PtrMemberAccess	file_handle -> filename		16275	0					
ANR	16347	Identifier	file_handle		16275	0					
ANR	16348	Identifier	filename		16275	1					
ANR	16349	Argument	file_handle		16275	1					
ANR	16350	Identifier	file_handle		16275	0					
ANR	16351	Identifier	FAILURE		16275	1					
ANR	16352	CompoundStatement		13:97:492:492	16275	1					
ANR	16353	IfStatement	if ( type == ZEND_REQUIRE )		16275	0					
ANR	16354	Condition	type == ZEND_REQUIRE	1555:7:46190:46209	16275	0	True				
ANR	16355	EqualityExpression	type == ZEND_REQUIRE		16275	0		==			
ANR	16356	Identifier	type		16275	0					
ANR	16357	Identifier	ZEND_REQUIRE		16275	1					
ANR	16358	CompoundStatement		14:29:523:523	16275	1					
ANR	16359	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"	1556:4:46218:46291	16275	0	True				
ANR	16360	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"		16275	0					
ANR	16361	Callee	zend_message_dispatcher		16275	0					
ANR	16362	Identifier	zend_message_dispatcher		16275	0					
ANR	16363	ArgumentList	ZMSG_FAILED_REQUIRE_FOPEN		16275	1					
ANR	16364	Argument	ZMSG_FAILED_REQUIRE_FOPEN		16275	0					
ANR	16365	Identifier	ZMSG_FAILED_REQUIRE_FOPEN		16275	0					
ANR	16366	Argument	file_handle -> filename		16275	1					
ANR	16367	PtrMemberAccess	file_handle -> filename		16275	0					
ANR	16368	Identifier	file_handle		16275	0					
ANR	16369	Identifier	filename		16275	1					
ANR	16370	ExpressionStatement	zend_bailout ( )	1557:4:46297:46311	16275	1	True				
ANR	16371	CallExpression	zend_bailout ( )		16275	0					
ANR	16372	Callee	zend_bailout		16275	0					
ANR	16373	Identifier	zend_bailout		16275	0					
ANR	16374	ArgumentList			16275	1					
ANR	16375	ElseStatement	else		16275	0					
ANR	16376	CompoundStatement		17:10:634:634	16275	0					
ANR	16377	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"	1559:4:46329:46402	16275	0	True				
ANR	16378	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"		16275	0					
ANR	16379	Callee	zend_message_dispatcher		16275	0					
ANR	16380	Identifier	zend_message_dispatcher		16275	0					
ANR	16381	ArgumentList	ZMSG_FAILED_INCLUDE_FOPEN		16275	1					
ANR	16382	Argument	ZMSG_FAILED_INCLUDE_FOPEN		16275	0					
ANR	16383	Identifier	ZMSG_FAILED_INCLUDE_FOPEN		16275	0					
ANR	16384	Argument	file_handle -> filename		16275	1					
ANR	16385	PtrMemberAccess	file_handle -> filename		16275	0					
ANR	16386	Identifier	file_handle		16275	0					
ANR	16387	Identifier	filename		16275	1					
ANR	16388	ReturnStatement	return NULL ;	1561:3:46412:46423	16275	1	True				
ANR	16389	Identifier	NULL		16275	0					
ANR	16390	ExpressionStatement	persistent_script = zend_file_cache_script_load ( file_handle )	1565:1:46437:46497	16275	5	True				
ANR	16391	AssignmentExpression	persistent_script = zend_file_cache_script_load ( file_handle )		16275	0		=			
ANR	16392	Identifier	persistent_script		16275	0					
ANR	16393	CallExpression	zend_file_cache_script_load ( file_handle )		16275	1					
ANR	16394	Callee	zend_file_cache_script_load		16275	0					
ANR	16395	Identifier	zend_file_cache_script_load		16275	0					
ANR	16396	ArgumentList	file_handle		16275	1					
ANR	16397	Argument	file_handle		16275	0					
ANR	16398	Identifier	file_handle		16275	0					
ANR	16399	IfStatement	if ( persistent_script )		16275	6					
ANR	16400	Condition	persistent_script	1566:5:46504:46520	16275	0	True				
ANR	16401	Identifier	persistent_script		16275	0					
ANR	16402	CompoundStatement		25:24:834:834	16275	1					
ANR	16403	IfStatement	if ( persistent_script -> full_path )		16275	0					
ANR	16404	Condition	persistent_script -> full_path	1568:6:46564:46591	16275	0	True				
ANR	16405	PtrMemberAccess	persistent_script -> full_path		16275	0					
ANR	16406	Identifier	persistent_script		16275	0					
ANR	16407	Identifier	full_path		16275	1					
ANR	16408	CompoundStatement		27:36:905:905	16275	1					
ANR	16409	IfStatement	if ( ! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE ) )		16275	0					
ANR	16410	Condition	! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )	1569:7:46603:47015	16275	0	True				
ANR	16411	OrExpression	! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16275	0		||			
ANR	16412	UnaryOperationExpression	! EG ( current_execute_data )		16275	0					
ANR	16413	UnaryOperator	!		16275	0					
ANR	16414	CallExpression	EG ( current_execute_data )		16275	1					
ANR	16415	Callee	EG		16275	0					
ANR	16416	Identifier	EG		16275	0					
ANR	16417	ArgumentList	current_execute_data		16275	1					
ANR	16418	Argument	current_execute_data		16275	0					
ANR	16419	Identifier	current_execute_data		16275	0					
ANR	16420	OrExpression	! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16275	1		||			
ANR	16421	UnaryOperationExpression	! EG ( current_execute_data ) -> opline		16275	0					
ANR	16422	UnaryOperator	!		16275	0					
ANR	16423	PtrMemberAccess	EG ( current_execute_data ) -> opline		16275	1					
ANR	16424	CallExpression	EG ( current_execute_data )		16275	0					
ANR	16425	Callee	EG		16275	0					
ANR	16426	Identifier	EG		16275	0					
ANR	16427	ArgumentList	current_execute_data		16275	1					
ANR	16428	Argument	current_execute_data		16275	0					
ANR	16429	Identifier	current_execute_data		16275	0					
ANR	16430	Identifier	opline		16275	1					
ANR	16431	OrExpression	! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16275	1		||			
ANR	16432	UnaryOperationExpression	! EG ( current_execute_data ) -> func		16275	0					
ANR	16433	UnaryOperator	!		16275	0					
ANR	16434	PtrMemberAccess	EG ( current_execute_data ) -> func		16275	1					
ANR	16435	CallExpression	EG ( current_execute_data )		16275	0					
ANR	16436	Callee	EG		16275	0					
ANR	16437	Identifier	EG		16275	0					
ANR	16438	ArgumentList	current_execute_data		16275	1					
ANR	16439	Argument	current_execute_data		16275	0					
ANR	16440	Identifier	current_execute_data		16275	0					
ANR	16441	Identifier	func		16275	1					
ANR	16442	OrExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16275	1		||			
ANR	16443	UnaryOperationExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		16275	0					
ANR	16444	UnaryOperator	!		16275	0					
ANR	16445	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		16275	1					
ANR	16446	Callee	ZEND_USER_CODE		16275	0					
ANR	16447	Identifier	ZEND_USER_CODE		16275	0					
ANR	16448	ArgumentList	EG ( current_execute_data ) -> func -> common . type		16275	1					
ANR	16449	Argument	EG ( current_execute_data ) -> func -> common . type		16275	0					
ANR	16450	MemberAccess	EG ( current_execute_data ) -> func -> common . type		16275	0					
ANR	16451	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		16275	0					
ANR	16452	PtrMemberAccess	EG ( current_execute_data ) -> func		16275	0					
ANR	16453	CallExpression	EG ( current_execute_data )		16275	0					
ANR	16454	Callee	EG		16275	0					
ANR	16455	Identifier	EG		16275	0					
ANR	16456	ArgumentList	current_execute_data		16275	1					
ANR	16457	Argument	current_execute_data		16275	0					
ANR	16458	Identifier	current_execute_data		16275	0					
ANR	16459	Identifier	func		16275	1					
ANR	16460	Identifier	common		16275	1					
ANR	16461	Identifier	type		16275	1					
ANR	16462	OrExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16275	1		||			
ANR	16463	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		16275	0		!=			
ANR	16464	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		16275	0					
ANR	16465	PtrMemberAccess	EG ( current_execute_data ) -> opline		16275	0					
ANR	16466	CallExpression	EG ( current_execute_data )		16275	0					
ANR	16467	Callee	EG		16275	0					
ANR	16468	Identifier	EG		16275	0					
ANR	16469	ArgumentList	current_execute_data		16275	1					
ANR	16470	Argument	current_execute_data		16275	0					
ANR	16471	Identifier	current_execute_data		16275	0					
ANR	16472	Identifier	opline		16275	1					
ANR	16473	Identifier	opcode		16275	1					
ANR	16474	Identifier	ZEND_INCLUDE_OR_EVAL		16275	1					
ANR	16475	AndExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE		16275	1		&&			
ANR	16476	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE		16275	0		!=			
ANR	16477	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		16275	0					
ANR	16478	PtrMemberAccess	EG ( current_execute_data ) -> opline		16275	0					
ANR	16479	CallExpression	EG ( current_execute_data )		16275	0					
ANR	16480	Callee	EG		16275	0					
ANR	16481	Identifier	EG		16275	0					
ANR	16482	ArgumentList	current_execute_data		16275	1					
ANR	16483	Argument	current_execute_data		16275	0					
ANR	16484	Identifier	current_execute_data		16275	0					
ANR	16485	Identifier	opline		16275	1					
ANR	16486	Identifier	extended_value		16275	1					
ANR	16487	Identifier	ZEND_INCLUDE_ONCE		16275	1					
ANR	16488	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE		16275	1		!=			
ANR	16489	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		16275	0					
ANR	16490	PtrMemberAccess	EG ( current_execute_data ) -> opline		16275	0					
ANR	16491	CallExpression	EG ( current_execute_data )		16275	0					
ANR	16492	Callee	EG		16275	0					
ANR	16493	Identifier	EG		16275	0					
ANR	16494	ArgumentList	current_execute_data		16275	1					
ANR	16495	Argument	current_execute_data		16275	0					
ANR	16496	Identifier	current_execute_data		16275	0					
ANR	16497	Identifier	opline		16275	1					
ANR	16498	Identifier	extended_value		16275	1					
ANR	16499	Identifier	ZEND_REQUIRE_ONCE		16275	1					
ANR	16500	CompoundStatement		33:80:1329:1329	16275	1					
ANR	16501	IfStatement	"if ( zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL )"		16275	0					
ANR	16502	Condition	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL"	1575:8:47028:47113	16275	0	True				
ANR	16503	EqualityExpression	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL"		16275	0		!=			
ANR	16504	CallExpression	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path )"		16275	0					
ANR	16505	Callee	zend_hash_add_empty_element		16275	0					
ANR	16506	Identifier	zend_hash_add_empty_element		16275	0					
ANR	16507	ArgumentList	& EG ( included_files )		16275	1					
ANR	16508	Argument	& EG ( included_files )		16275	0					
ANR	16509	UnaryOperationExpression	& EG ( included_files )		16275	0					
ANR	16510	UnaryOperator	&		16275	0					
ANR	16511	CallExpression	EG ( included_files )		16275	1					
ANR	16512	Callee	EG		16275	0					
ANR	16513	Identifier	EG		16275	0					
ANR	16514	ArgumentList	included_files		16275	1					
ANR	16515	Argument	included_files		16275	0					
ANR	16516	Identifier	included_files		16275	0					
ANR	16517	Argument	persistent_script -> full_path		16275	1					
ANR	16518	PtrMemberAccess	persistent_script -> full_path		16275	0					
ANR	16519	Identifier	persistent_script		16275	0					
ANR	16520	Identifier	full_path		16275	1					
ANR	16521	Identifier	NULL		16275	1					
ANR	16522	CompoundStatement		34:96:1427:1427	16275	1					
ANR	16523	IfStatement	if ( persistent_script -> is_phar )		16275	0					
ANR	16524	Condition	persistent_script -> is_phar	1577:9:47187:47212	16275	0	True				
ANR	16525	PtrMemberAccess	persistent_script -> is_phar		16275	0					
ANR	16526	Identifier	persistent_script		16275	0					
ANR	16527	Identifier	is_phar		16275	1					
ANR	16528	CompoundStatement		38:6:1564:1645	16275	1					
ANR	16529	IdentifierDeclStatement	php_stream_statbuf ssb ;	1578:6:47223:47245	16275	0	True				
ANR	16530	IdentifierDecl	ssb		16275	0					
ANR	16531	IdentifierDeclType	php_stream_statbuf		16275	0					
ANR	16532	Identifier	ssb		16275	1					
ANR	16533	IdentifierDeclStatement	"char * fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) ) ;"	1579:6:47253:47334	16275	1	True				
ANR	16534	IdentifierDecl	"* fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		16275	0					
ANR	16535	IdentifierDeclType	char *		16275	0					
ANR	16536	Identifier	fname		16275	1					
ANR	16537	AssignmentExpression	"* fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		16275	2		=			
ANR	16538	Identifier	fname		16275	0					
ANR	16539	CallExpression	"emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		16275	1					
ANR	16540	Callee	emalloc		16275	0					
ANR	16541	Identifier	emalloc		16275	0					
ANR	16542	ArgumentList	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		16275	1					
ANR	16543	Argument	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		16275	0					
ANR	16544	AdditiveExpression	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		16275	0		+			
ANR	16545	SizeofExpression	"sizeof ( ""phar://"" )"		16275	0					
ANR	16546	Sizeof	sizeof		16275	0					
ANR	16547	PrimaryExpression	"""phar://"""		16275	1					
ANR	16548	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		16275	1					
ANR	16549	Callee	ZSTR_LEN		16275	0					
ANR	16550	Identifier	ZSTR_LEN		16275	0					
ANR	16551	ArgumentList	persistent_script -> full_path		16275	1					
ANR	16552	Argument	persistent_script -> full_path		16275	0					
ANR	16553	PtrMemberAccess	persistent_script -> full_path		16275	0					
ANR	16554	Identifier	persistent_script		16275	0					
ANR	16555	Identifier	full_path		16275	1					
ANR	16556	ExpressionStatement	"memcpy ( fname , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"	1581:6:47343:47390	16275	2	True				
ANR	16557	CallExpression	"memcpy ( fname , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"		16275	0					
ANR	16558	Callee	memcpy		16275	0					
ANR	16559	Identifier	memcpy		16275	0					
ANR	16560	ArgumentList	fname		16275	1					
ANR	16561	Argument	fname		16275	0					
ANR	16562	Identifier	fname		16275	0					
ANR	16563	Argument	"""phar://"""		16275	1					
ANR	16564	PrimaryExpression	"""phar://"""		16275	0					
ANR	16565	Argument	"sizeof ( ""phar://"" ) - 1"		16275	2					
ANR	16566	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		16275	0		-			
ANR	16567	SizeofExpression	"sizeof ( ""phar://"" )"		16275	0					
ANR	16568	Sizeof	sizeof		16275	0					
ANR	16569	PrimaryExpression	"""phar://"""		16275	1					
ANR	16570	PrimaryExpression	1		16275	1					
ANR	16571	ExpressionStatement	"memcpy ( fname + sizeof ( ""phar://"" ) - 1 , ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_LEN ( persistent_script -> full_path ) + 1 )"	1582:6:47398:47519	16275	3	True				
ANR	16572	CallExpression	"memcpy ( fname + sizeof ( ""phar://"" ) - 1 , ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_LEN ( persistent_script -> full_path ) + 1 )"		16275	0					
ANR	16573	Callee	memcpy		16275	0					
ANR	16574	Identifier	memcpy		16275	0					
ANR	16575	ArgumentList	"fname + sizeof ( ""phar://"" ) - 1"		16275	1					
ANR	16576	Argument	"fname + sizeof ( ""phar://"" ) - 1"		16275	0					
ANR	16577	AdditiveExpression	"fname + sizeof ( ""phar://"" ) - 1"		16275	0		+			
ANR	16578	Identifier	fname		16275	0					
ANR	16579	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		16275	1		-			
ANR	16580	SizeofExpression	"sizeof ( ""phar://"" )"		16275	0					
ANR	16581	Sizeof	sizeof		16275	0					
ANR	16582	PrimaryExpression	"""phar://"""		16275	1					
ANR	16583	PrimaryExpression	1		16275	1					
ANR	16584	Argument	ZSTR_VAL ( persistent_script -> full_path )		16275	1					
ANR	16585	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		16275	0					
ANR	16586	Callee	ZSTR_VAL		16275	0					
ANR	16587	Identifier	ZSTR_VAL		16275	0					
ANR	16588	ArgumentList	persistent_script -> full_path		16275	1					
ANR	16589	Argument	persistent_script -> full_path		16275	0					
ANR	16590	PtrMemberAccess	persistent_script -> full_path		16275	0					
ANR	16591	Identifier	persistent_script		16275	0					
ANR	16592	Identifier	full_path		16275	1					
ANR	16593	Argument	ZSTR_LEN ( persistent_script -> full_path ) + 1		16275	2					
ANR	16594	AdditiveExpression	ZSTR_LEN ( persistent_script -> full_path ) + 1		16275	0		+			
ANR	16595	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		16275	0					
ANR	16596	Callee	ZSTR_LEN		16275	0					
ANR	16597	Identifier	ZSTR_LEN		16275	0					
ANR	16598	ArgumentList	persistent_script -> full_path		16275	1					
ANR	16599	Argument	persistent_script -> full_path		16275	0					
ANR	16600	PtrMemberAccess	persistent_script -> full_path		16275	0					
ANR	16601	Identifier	persistent_script		16275	0					
ANR	16602	Identifier	full_path		16275	1					
ANR	16603	PrimaryExpression	1		16275	1					
ANR	16604	ExpressionStatement	"php_stream_stat_path ( fname , & ssb )"	1583:6:47527:47560	16275	4	True				
ANR	16605	CallExpression	"php_stream_stat_path ( fname , & ssb )"		16275	0					
ANR	16606	Callee	php_stream_stat_path		16275	0					
ANR	16607	Identifier	php_stream_stat_path		16275	0					
ANR	16608	ArgumentList	fname		16275	1					
ANR	16609	Argument	fname		16275	0					
ANR	16610	Identifier	fname		16275	0					
ANR	16611	Argument	& ssb		16275	1					
ANR	16612	UnaryOperationExpression	& ssb		16275	0					
ANR	16613	UnaryOperator	&		16275	0					
ANR	16614	Identifier	ssb		16275	1					
ANR	16615	ExpressionStatement	efree ( fname )	1584:6:47568:47580	16275	5	True				
ANR	16616	CallExpression	efree ( fname )		16275	0					
ANR	16617	Callee	efree		16275	0					
ANR	16618	Identifier	efree		16275	0					
ANR	16619	ArgumentList	fname		16275	1					
ANR	16620	Argument	fname		16275	0					
ANR	16621	Identifier	fname		16275	0					
ANR	16622	ExpressionStatement	zend_file_handle_dtor ( file_handle )	1589:2:47606:47640	16275	1	True				
ANR	16623	CallExpression	zend_file_handle_dtor ( file_handle )		16275	0					
ANR	16624	Callee	zend_file_handle_dtor		16275	0					
ANR	16625	Identifier	zend_file_handle_dtor		16275	0					
ANR	16626	ArgumentList	file_handle		16275	1					
ANR	16627	Argument	file_handle		16275	0					
ANR	16628	Identifier	file_handle		16275	0					
ANR	16629	ExpressionStatement	persistent_script -> dynamic_members . last_used = ZCG ( request_time )	1591:2:47645:47709	16275	2	True				
ANR	16630	AssignmentExpression	persistent_script -> dynamic_members . last_used = ZCG ( request_time )		16275	0		=			
ANR	16631	MemberAccess	persistent_script -> dynamic_members . last_used		16275	0					
ANR	16632	PtrMemberAccess	persistent_script -> dynamic_members		16275	0					
ANR	16633	Identifier	persistent_script		16275	0					
ANR	16634	Identifier	dynamic_members		16275	1					
ANR	16635	Identifier	last_used		16275	1					
ANR	16636	CallExpression	ZCG ( request_time )		16275	1					
ANR	16637	Callee	ZCG		16275	0					
ANR	16638	Identifier	ZCG		16275	0					
ANR	16639	ArgumentList	request_time		16275	1					
ANR	16640	Argument	request_time		16275	0					
ANR	16641	Identifier	request_time		16275	0					
ANR	16642	IfStatement	if ( persistent_script -> ping_auto_globals_mask )		16275	3					
ANR	16643	Condition	persistent_script -> ping_auto_globals_mask	1593:9:47721:47761	16275	0	True				
ANR	16644	PtrMemberAccess	persistent_script -> ping_auto_globals_mask		16275	0					
ANR	16645	Identifier	persistent_script		16275	0					
ANR	16646	Identifier	ping_auto_globals_mask		16275	1					
ANR	16647	CompoundStatement		52:52:2075:2075	16275	1					
ANR	16648	ExpressionStatement	zend_accel_set_auto_globals ( persistent_script -> ping_auto_globals_mask )	1594:3:47769:47839	16275	0	True				
ANR	16649	CallExpression	zend_accel_set_auto_globals ( persistent_script -> ping_auto_globals_mask )		16275	0					
ANR	16650	Callee	zend_accel_set_auto_globals		16275	0					
ANR	16651	Identifier	zend_accel_set_auto_globals		16275	0					
ANR	16652	ArgumentList	persistent_script -> ping_auto_globals_mask		16275	1					
ANR	16653	Argument	persistent_script -> ping_auto_globals_mask		16275	0					
ANR	16654	PtrMemberAccess	persistent_script -> ping_auto_globals_mask		16275	0					
ANR	16655	Identifier	persistent_script		16275	0					
ANR	16656	Identifier	ping_auto_globals_mask		16275	1					
ANR	16657	ReturnStatement	"return zend_accel_load_script ( persistent_script , 1 ) ;"	1597:2:47848:47899	16275	4	True				
ANR	16658	CallExpression	"zend_accel_load_script ( persistent_script , 1 )"		16275	0					
ANR	16659	Callee	zend_accel_load_script		16275	0					
ANR	16660	Identifier	zend_accel_load_script		16275	0					
ANR	16661	ArgumentList	persistent_script		16275	1					
ANR	16662	Argument	persistent_script		16275	0					
ANR	16663	Identifier	persistent_script		16275	0					
ANR	16664	Argument	1		16275	1					
ANR	16665	PrimaryExpression	1		16275	0					
ANR	16666	ExpressionStatement	"persistent_script = opcache_compile_file ( file_handle , type , NULL , 0 , & op_array )"	1600:1:47906:47985	16275	7	True				
ANR	16667	AssignmentExpression	"persistent_script = opcache_compile_file ( file_handle , type , NULL , 0 , & op_array )"		16275	0		=			
ANR	16668	Identifier	persistent_script		16275	0					
ANR	16669	CallExpression	"opcache_compile_file ( file_handle , type , NULL , 0 , & op_array )"		16275	1					
ANR	16670	Callee	opcache_compile_file		16275	0					
ANR	16671	Identifier	opcache_compile_file		16275	0					
ANR	16672	ArgumentList	file_handle		16275	1					
ANR	16673	Argument	file_handle		16275	0					
ANR	16674	Identifier	file_handle		16275	0					
ANR	16675	Argument	type		16275	1					
ANR	16676	Identifier	type		16275	0					
ANR	16677	Argument	NULL		16275	2					
ANR	16678	Identifier	NULL		16275	0					
ANR	16679	Argument	0		16275	3					
ANR	16680	PrimaryExpression	0		16275	0					
ANR	16681	Argument	& op_array		16275	4					
ANR	16682	UnaryOperationExpression	& op_array		16275	0					
ANR	16683	UnaryOperator	&		16275	0					
ANR	16684	Identifier	op_array		16275	1					
ANR	16685	IfStatement	if ( persistent_script )		16275	8					
ANR	16686	Condition	persistent_script	1602:5:47993:48009	16275	0	True				
ANR	16687	Identifier	persistent_script		16275	0					
ANR	16688	CompoundStatement		61:24:2323:2323	16275	1					
ANR	16689	ExpressionStatement	from_memory = 0	1603:2:48016:48031	16275	0	True				
ANR	16690	AssignmentExpression	from_memory = 0		16275	0		=			
ANR	16691	Identifier	from_memory		16275	0					
ANR	16692	PrimaryExpression	0		16275	1					
ANR	16693	ExpressionStatement	"persistent_script = cache_script_in_file_cache ( persistent_script , & from_memory )"	1604:2:48035:48114	16275	1	True				
ANR	16694	AssignmentExpression	"persistent_script = cache_script_in_file_cache ( persistent_script , & from_memory )"		16275	0		=			
ANR	16695	Identifier	persistent_script		16275	0					
ANR	16696	CallExpression	"cache_script_in_file_cache ( persistent_script , & from_memory )"		16275	1					
ANR	16697	Callee	cache_script_in_file_cache		16275	0					
ANR	16698	Identifier	cache_script_in_file_cache		16275	0					
ANR	16699	ArgumentList	persistent_script		16275	1					
ANR	16700	Argument	persistent_script		16275	0					
ANR	16701	Identifier	persistent_script		16275	0					
ANR	16702	Argument	& from_memory		16275	1					
ANR	16703	UnaryOperationExpression	& from_memory		16275	0					
ANR	16704	UnaryOperator	&		16275	0					
ANR	16705	Identifier	from_memory		16275	1					
ANR	16706	ReturnStatement	"return zend_accel_load_script ( persistent_script , from_memory ) ;"	1605:2:48118:48179	16275	2	True				
ANR	16707	CallExpression	"zend_accel_load_script ( persistent_script , from_memory )"		16275	0					
ANR	16708	Callee	zend_accel_load_script		16275	0					
ANR	16709	Identifier	zend_accel_load_script		16275	0					
ANR	16710	ArgumentList	persistent_script		16275	1					
ANR	16711	Argument	persistent_script		16275	0					
ANR	16712	Identifier	persistent_script		16275	0					
ANR	16713	Argument	from_memory		16275	1					
ANR	16714	Identifier	from_memory		16275	0					
ANR	16715	ReturnStatement	return op_array ;	1608:1:48186:48201	16275	9	True				
ANR	16716	Identifier	op_array		16275	0					
ANR	16717	ReturnType	zend_op_array *		16275	1					
ANR	16718	Identifier	file_cache_compile_file		16275	2					
ANR	16719	ParameterList	"zend_file_handle * file_handle , int type"		16275	3					
ANR	16720	Parameter	zend_file_handle * file_handle	1541:39:45647:45675	16275	0	True				
ANR	16721	ParameterType	zend_file_handle *		16275	0					
ANR	16722	Identifier	file_handle		16275	1					
ANR	16723	Parameter	int type	1541:70:45678:45685	16275	1	True				
ANR	16724	ParameterType	int		16275	0					
ANR	16725	Identifier	type		16275	1					
ANR	16726	CFGEntryNode	ENTRY		16275		True				
ANR	16727	CFGExitNode	EXIT		16275		True				
ANR	16728	Symbol	ssb		16275						
ANR	16729	Symbol	persistent_script -> ping_auto_globals_mask		16275						
ANR	16730	Symbol	EG ( current_execute_data ) -> func		16275						
ANR	16731	Symbol	EG ( current_execute_data ) -> func -> common . type		16275						
ANR	16732	Symbol	& from_memory		16275						
ANR	16733	Symbol	current_execute_data		16275						
ANR	16734	Symbol	type		16275						
ANR	16735	Symbol	* * EG		16275						
ANR	16736	Symbol	persistent_script -> full_path		16275						
ANR	16737	Symbol	zend_hash_add_empty_element		16275						
ANR	16738	Symbol	zend_file_cache_script_load		16275						
ANR	16739	Symbol	fname		16275						
ANR	16740	Symbol	EG		16275						
ANR	16741	Symbol	NULL		16275						
ANR	16742	Symbol	from_memory		16275						
ANR	16743	Symbol	ZMSG_FAILED_INCLUDE_FOPEN		16275						
ANR	16744	Symbol	* EG ( current_execute_data ) -> opline		16275						
ANR	16745	Symbol	* EG ( current_execute_data ) -> func		16275						
ANR	16746	Symbol	file_handle		16275						
ANR	16747	Symbol	* persistent_script		16275						
ANR	16748	Symbol	file_handle -> opened_path		16275						
ANR	16749	Symbol	& ssb		16275						
ANR	16750	Symbol	file_handle -> filename		16275						
ANR	16751	Symbol	ZMSG_FAILED_REQUIRE_FOPEN		16275						
ANR	16752	Symbol	ZEND_HANDLE_FILENAME		16275						
ANR	16753	Symbol	cache_script_in_file_cache		16275						
ANR	16754	Symbol	ZEND_USER_CODE		16275						
ANR	16755	Symbol	opcache_compile_file		16275						
ANR	16756	Symbol	ZCG		16275						
ANR	16757	Symbol	persistent_script -> dynamic_members . last_used		16275						
ANR	16758	Symbol	accelerator_orig_compile_file		16275						
ANR	16759	Symbol	* EG		16275						
ANR	16760	Symbol	EG ( current_execute_data ) -> opline		16275						
ANR	16761	Symbol	& op_array		16275						
ANR	16762	Symbol	& EG		16275						
ANR	16763	Symbol	EG ( current_execute_data ) -> opline -> extended_value		16275						
ANR	16764	Symbol	* file_handle		16275						
ANR	16765	Symbol	is_stream_path		16275						
ANR	16766	Symbol	file_handle -> type		16275						
ANR	16767	Symbol	emalloc		16275						
ANR	16768	Symbol	accelerator_orig_zend_stream_open_function		16275						
ANR	16769	Symbol	persistent_script -> is_phar		16275						
ANR	16770	Symbol	request_time		16275						
ANR	16771	Symbol	ZEND_INCLUDE_OR_EVAL		16275						
ANR	16772	Symbol	included_files		16275						
ANR	16773	Symbol	ZEND_INCLUDE_ONCE		16275						
ANR	16774	Symbol	zend_accel_load_script		16275						
ANR	16775	Symbol	persistent_script -> dynamic_members		16275						
ANR	16776	Symbol	EG ( current_execute_data ) -> opline -> opcode		16275						
ANR	16777	Symbol	ZEND_REQUIRE_ONCE		16275						
ANR	16778	Symbol	persistent_script		16275						
ANR	16779	Symbol	FAILURE		16275						
ANR	16780	Symbol	is_cacheable_stream_path		16275						
ANR	16781	Symbol	ZSTR_VAL		16275						
ANR	16782	Symbol	EG ( current_execute_data ) -> func -> common		16275						
ANR	16783	Symbol	ZEND_REQUIRE		16275						
ANR	16784	Symbol	ZSTR_LEN		16275						
ANR	16785	Symbol	op_array		16275						
ANR	16786	Function	persistent_compile_file	1613:0:48246:56955							
ANR	16787	FunctionDef	"persistent_compile_file (zend_file_handle * file_handle , int type)"		16786	0					
ANR	16788	CompoundStatement		1614:0:48326:56955	16786	0					
ANR	16789	IdentifierDeclStatement	zend_persistent_script * persistent_script = NULL ;	1615:1:48329:48377	16786	0	True				
ANR	16790	IdentifierDecl	* persistent_script = NULL		16786	0					
ANR	16791	IdentifierDeclType	zend_persistent_script *		16786	0					
ANR	16792	Identifier	persistent_script		16786	1					
ANR	16793	AssignmentExpression	* persistent_script = NULL		16786	2		=			
ANR	16794	Identifier	NULL		16786	0					
ANR	16795	Identifier	NULL		16786	1					
ANR	16796	IdentifierDeclStatement	char * key = NULL ;	1616:1:48380:48396	16786	1	True				
ANR	16797	IdentifierDecl	* key = NULL		16786	0					
ANR	16798	IdentifierDeclType	char *		16786	0					
ANR	16799	Identifier	key		16786	1					
ANR	16800	AssignmentExpression	* key = NULL		16786	2		=			
ANR	16801	Identifier	NULL		16786	0					
ANR	16802	Identifier	NULL		16786	1					
ANR	16803	IdentifierDeclStatement	int key_length ;	1617:1:48399:48413	16786	2	True				
ANR	16804	IdentifierDecl	key_length		16786	0					
ANR	16805	IdentifierDeclType	int		16786	0					
ANR	16806	Identifier	key_length		16786	1					
ANR	16807	IdentifierDeclStatement	int from_shared_memory ;	1618:1:48416:48438	16786	3	True				
ANR	16808	IdentifierDecl	from_shared_memory		16786	0					
ANR	16809	IdentifierDeclType	int		16786	0					
ANR	16810	Identifier	from_shared_memory		16786	1					
ANR	16811	IfStatement	if ( ! file_handle -> filename || ! ZCG ( enabled ) || ! accel_startup_ok )		16786	4					
ANR	16812	Condition	! file_handle -> filename || ! ZCG ( enabled ) || ! accel_startup_ok	1620:5:48493:48552	16786	0	True				
ANR	16813	OrExpression	! file_handle -> filename || ! ZCG ( enabled ) || ! accel_startup_ok		16786	0		||			
ANR	16814	UnaryOperationExpression	! file_handle -> filename		16786	0					
ANR	16815	UnaryOperator	!		16786	0					
ANR	16816	PtrMemberAccess	file_handle -> filename		16786	1					
ANR	16817	Identifier	file_handle		16786	0					
ANR	16818	Identifier	filename		16786	1					
ANR	16819	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok		16786	1		||			
ANR	16820	UnaryOperationExpression	! ZCG ( enabled )		16786	0					
ANR	16821	UnaryOperator	!		16786	0					
ANR	16822	CallExpression	ZCG ( enabled )		16786	1					
ANR	16823	Callee	ZCG		16786	0					
ANR	16824	Identifier	ZCG		16786	0					
ANR	16825	ArgumentList	enabled		16786	1					
ANR	16826	Argument	enabled		16786	0					
ANR	16827	Identifier	enabled		16786	0					
ANR	16828	UnaryOperationExpression	! accel_startup_ok		16786	1					
ANR	16829	UnaryOperator	!		16786	0					
ANR	16830	Identifier	accel_startup_ok		16786	1					
ANR	16831	CompoundStatement		7:67:228:228	16786	1					
ANR	16832	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1622:2:48630:48685	16786	0	True				
ANR	16833	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		16786	0					
ANR	16834	Callee	accelerator_orig_compile_file		16786	0					
ANR	16835	Identifier	accelerator_orig_compile_file		16786	0					
ANR	16836	ArgumentList	file_handle		16786	1					
ANR	16837	Argument	file_handle		16786	0					
ANR	16838	Identifier	file_handle		16786	0					
ANR	16839	Argument	type		16786	1					
ANR	16840	Identifier	type		16786	0					
ANR	16841	ElseStatement	else		16786	0					
ANR	16842	IfStatement	if ( ZCG ( accel_directives ) . file_cache_only )		16786	0					
ANR	16843	Condition	ZCG ( accel_directives ) . file_cache_only	1624:12:48730:48766	16786	0	True				
ANR	16844	MemberAccess	ZCG ( accel_directives ) . file_cache_only		16786	0					
ANR	16845	CallExpression	ZCG ( accel_directives )		16786	0					
ANR	16846	Callee	ZCG		16786	0					
ANR	16847	Identifier	ZCG		16786	0					
ANR	16848	ArgumentList	accel_directives		16786	1					
ANR	16849	Argument	accel_directives		16786	0					
ANR	16850	Identifier	accel_directives		16786	0					
ANR	16851	Identifier	file_cache_only		16786	1					
ANR	16852	CompoundStatement		11:51:442:442	16786	1					
ANR	16853	ReturnStatement	"return file_cache_compile_file ( file_handle , type ) ;"	1625:2:48773:48822	16786	0	True				
ANR	16854	CallExpression	"file_cache_compile_file ( file_handle , type )"		16786	0					
ANR	16855	Callee	file_cache_compile_file		16786	0					
ANR	16856	Identifier	file_cache_compile_file		16786	0					
ANR	16857	ArgumentList	file_handle		16786	1					
ANR	16858	Argument	file_handle		16786	0					
ANR	16859	Identifier	file_handle		16786	0					
ANR	16860	Argument	type		16786	1					
ANR	16861	Identifier	type		16786	0					
ANR	16862	ElseStatement	else		16786	0					
ANR	16863	IfStatement	if ( ( ! ZCG ( counted ) && ! ZCSG ( accelerator_enabled ) ) || ( ZCSG ( restart_in_progress ) && accel_restart_is_active ( ) ) )		16786	0					
ANR	16864	Condition	( ! ZCG ( counted ) && ! ZCSG ( accelerator_enabled ) ) || ( ZCSG ( restart_in_progress ) && accel_restart_is_active ( ) )	1627:12:48843:48959	16786	0	True				
ANR	16865	OrExpression	( ! ZCG ( counted ) && ! ZCSG ( accelerator_enabled ) ) || ( ZCSG ( restart_in_progress ) && accel_restart_is_active ( ) )		16786	0		||			
ANR	16866	AndExpression	! ZCG ( counted ) && ! ZCSG ( accelerator_enabled )		16786	0		&&			
ANR	16867	UnaryOperationExpression	! ZCG ( counted )		16786	0					
ANR	16868	UnaryOperator	!		16786	0					
ANR	16869	CallExpression	ZCG ( counted )		16786	1					
ANR	16870	Callee	ZCG		16786	0					
ANR	16871	Identifier	ZCG		16786	0					
ANR	16872	ArgumentList	counted		16786	1					
ANR	16873	Argument	counted		16786	0					
ANR	16874	Identifier	counted		16786	0					
ANR	16875	UnaryOperationExpression	! ZCSG ( accelerator_enabled )		16786	1					
ANR	16876	UnaryOperator	!		16786	0					
ANR	16877	CallExpression	ZCSG ( accelerator_enabled )		16786	1					
ANR	16878	Callee	ZCSG		16786	0					
ANR	16879	Identifier	ZCSG		16786	0					
ANR	16880	ArgumentList	accelerator_enabled		16786	1					
ANR	16881	Argument	accelerator_enabled		16786	0					
ANR	16882	Identifier	accelerator_enabled		16786	0					
ANR	16883	AndExpression	ZCSG ( restart_in_progress ) && accel_restart_is_active ( )		16786	1		&&			
ANR	16884	CallExpression	ZCSG ( restart_in_progress )		16786	0					
ANR	16885	Callee	ZCSG		16786	0					
ANR	16886	Identifier	ZCSG		16786	0					
ANR	16887	ArgumentList	restart_in_progress		16786	1					
ANR	16888	Argument	restart_in_progress		16786	0					
ANR	16889	Identifier	restart_in_progress		16786	0					
ANR	16890	CallExpression	accel_restart_is_active ( )		16786	1					
ANR	16891	Callee	accel_restart_is_active		16786	0					
ANR	16892	Identifier	accel_restart_is_active		16786	0					
ANR	16893	ArgumentList			16786	1					
ANR	16894	CompoundStatement		15:70:635:635	16786	1					
ANR	16895	IfStatement	if ( ZCG ( accel_directives ) . file_cache )		16786	0					
ANR	16896	Condition	ZCG ( accel_directives ) . file_cache	1630:6:49001:49032	16786	0	True				
ANR	16897	MemberAccess	ZCG ( accel_directives ) . file_cache		16786	0					
ANR	16898	CallExpression	ZCG ( accel_directives )		16786	0					
ANR	16899	Callee	ZCG		16786	0					
ANR	16900	Identifier	ZCG		16786	0					
ANR	16901	ArgumentList	accel_directives		16786	1					
ANR	16902	Argument	accel_directives		16786	0					
ANR	16903	Identifier	accel_directives		16786	0					
ANR	16904	Identifier	file_cache		16786	1					
ANR	16905	CompoundStatement		17:40:708:708	16786	1					
ANR	16906	ReturnStatement	"return file_cache_compile_file ( file_handle , type ) ;"	1631:3:49040:49089	16786	0	True				
ANR	16907	CallExpression	"file_cache_compile_file ( file_handle , type )"		16786	0					
ANR	16908	Callee	file_cache_compile_file		16786	0					
ANR	16909	Identifier	file_cache_compile_file		16786	0					
ANR	16910	ArgumentList	file_handle		16786	1					
ANR	16911	Argument	file_handle		16786	0					
ANR	16912	Identifier	file_handle		16786	0					
ANR	16913	Argument	type		16786	1					
ANR	16914	Identifier	type		16786	0					
ANR	16915	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1634:2:49104:49159	16786	1	True				
ANR	16916	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		16786	0					
ANR	16917	Callee	accelerator_orig_compile_file		16786	0					
ANR	16918	Identifier	accelerator_orig_compile_file		16786	0					
ANR	16919	ArgumentList	file_handle		16786	1					
ANR	16920	Argument	file_handle		16786	0					
ANR	16921	Identifier	file_handle		16786	0					
ANR	16922	Argument	type		16786	1					
ANR	16923	Identifier	type		16786	0					
ANR	16924	IfStatement	if ( ZCG ( cache_persistent_script ) && ( ( ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline ) ) )		16786	5					
ANR	16925	Condition	ZCG ( cache_persistent_script ) && ( ( ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline ) )	1640:5:49360:49740	16786	0	True				
ANR	16926	AndExpression	ZCG ( cache_persistent_script ) && ( ( ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline ) )		16786	0		&&			
ANR	16927	CallExpression	ZCG ( cache_persistent_script )		16786	0					
ANR	16928	Callee	ZCG		16786	0					
ANR	16929	Identifier	ZCG		16786	0					
ANR	16930	ArgumentList	cache_persistent_script		16786	1					
ANR	16931	Argument	cache_persistent_script		16786	0					
ANR	16932	Identifier	cache_persistent_script		16786	0					
ANR	16933	OrExpression	( ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline )		16786	1		||			
ANR	16934	AndExpression	! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL		16786	0		&&			
ANR	16935	UnaryOperationExpression	! EG ( current_execute_data )		16786	0					
ANR	16936	UnaryOperator	!		16786	0					
ANR	16937	CallExpression	EG ( current_execute_data )		16786	1					
ANR	16938	Callee	EG		16786	0					
ANR	16939	Identifier	EG		16786	0					
ANR	16940	ArgumentList	current_execute_data		16786	1					
ANR	16941	Argument	current_execute_data		16786	0					
ANR	16942	Identifier	current_execute_data		16786	0					
ANR	16943	AndExpression	file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL		16786	1		&&			
ANR	16944	EqualityExpression	file_handle -> filename == SG ( request_info ) . path_translated		16786	0		==			
ANR	16945	PtrMemberAccess	file_handle -> filename		16786	0					
ANR	16946	Identifier	file_handle		16786	0					
ANR	16947	Identifier	filename		16786	1					
ANR	16948	MemberAccess	SG ( request_info ) . path_translated		16786	1					
ANR	16949	CallExpression	SG ( request_info )		16786	0					
ANR	16950	Callee	SG		16786	0					
ANR	16951	Identifier	SG		16786	0					
ANR	16952	ArgumentList	request_info		16786	1					
ANR	16953	Argument	request_info		16786	0					
ANR	16954	Identifier	request_info		16786	0					
ANR	16955	Identifier	path_translated		16786	1					
ANR	16956	EqualityExpression	ZCG ( cache_opline ) == NULL		16786	1		==			
ANR	16957	CallExpression	ZCG ( cache_opline )		16786	0					
ANR	16958	Callee	ZCG		16786	0					
ANR	16959	Identifier	ZCG		16786	0					
ANR	16960	ArgumentList	cache_opline		16786	1					
ANR	16961	Argument	cache_opline		16786	0					
ANR	16962	Identifier	cache_opline		16786	0					
ANR	16963	Identifier	NULL		16786	1					
ANR	16964	AndExpression	EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		16786	1		&&			
ANR	16965	CallExpression	EG ( current_execute_data )		16786	0					
ANR	16966	Callee	EG		16786	0					
ANR	16967	Identifier	EG		16786	0					
ANR	16968	ArgumentList	current_execute_data		16786	1					
ANR	16969	Argument	current_execute_data		16786	0					
ANR	16970	Identifier	current_execute_data		16786	0					
ANR	16971	AndExpression	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		16786	1		&&			
ANR	16972	PtrMemberAccess	EG ( current_execute_data ) -> func		16786	0					
ANR	16973	CallExpression	EG ( current_execute_data )		16786	0					
ANR	16974	Callee	EG		16786	0					
ANR	16975	Identifier	EG		16786	0					
ANR	16976	ArgumentList	current_execute_data		16786	1					
ANR	16977	Argument	current_execute_data		16786	0					
ANR	16978	Identifier	current_execute_data		16786	0					
ANR	16979	Identifier	func		16786	1					
ANR	16980	AndExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		16786	1		&&			
ANR	16981	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		16786	0					
ANR	16982	Callee	ZEND_USER_CODE		16786	0					
ANR	16983	Identifier	ZEND_USER_CODE		16786	0					
ANR	16984	ArgumentList	EG ( current_execute_data ) -> func -> common . type		16786	1					
ANR	16985	Argument	EG ( current_execute_data ) -> func -> common . type		16786	0					
ANR	16986	MemberAccess	EG ( current_execute_data ) -> func -> common . type		16786	0					
ANR	16987	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		16786	0					
ANR	16988	PtrMemberAccess	EG ( current_execute_data ) -> func		16786	0					
ANR	16989	CallExpression	EG ( current_execute_data )		16786	0					
ANR	16990	Callee	EG		16786	0					
ANR	16991	Identifier	EG		16786	0					
ANR	16992	ArgumentList	current_execute_data		16786	1					
ANR	16993	Argument	current_execute_data		16786	0					
ANR	16994	Identifier	current_execute_data		16786	0					
ANR	16995	Identifier	func		16786	1					
ANR	16996	Identifier	common		16786	1					
ANR	16997	Identifier	type		16786	1					
ANR	16998	EqualityExpression	ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		16786	1		==			
ANR	16999	CallExpression	ZCG ( cache_opline )		16786	0					
ANR	17000	Callee	ZCG		16786	0					
ANR	17001	Identifier	ZCG		16786	0					
ANR	17002	ArgumentList	cache_opline		16786	1					
ANR	17003	Argument	cache_opline		16786	0					
ANR	17004	Identifier	cache_opline		16786	0					
ANR	17005	PtrMemberAccess	EG ( current_execute_data ) -> opline		16786	1					
ANR	17006	CallExpression	EG ( current_execute_data )		16786	0					
ANR	17007	Callee	EG		16786	0					
ANR	17008	Identifier	EG		16786	0					
ANR	17009	ArgumentList	current_execute_data		16786	1					
ANR	17010	Argument	current_execute_data		16786	0					
ANR	17011	Identifier	current_execute_data		16786	0					
ANR	17012	Identifier	opline		16786	1					
ANR	17013	CompoundStatement		34:64:1416:1416	16786	1					
ANR	17014	ExpressionStatement	persistent_script = ZCG ( cache_persistent_script )	1649:2:49748:49796	16786	0	True				
ANR	17015	AssignmentExpression	persistent_script = ZCG ( cache_persistent_script )		16786	0		=			
ANR	17016	Identifier	persistent_script		16786	0					
ANR	17017	CallExpression	ZCG ( cache_persistent_script )		16786	1					
ANR	17018	Callee	ZCG		16786	0					
ANR	17019	Identifier	ZCG		16786	0					
ANR	17020	ArgumentList	cache_persistent_script		16786	1					
ANR	17021	Argument	cache_persistent_script		16786	0					
ANR	17022	Identifier	cache_persistent_script		16786	0					
ANR	17023	IfStatement	if ( ZCG ( key_len ) )		16786	1					
ANR	17024	Condition	ZCG ( key_len )	1650:6:49804:49815	16786	0	True				
ANR	17025	CallExpression	ZCG ( key_len )		16786	0					
ANR	17026	Callee	ZCG		16786	0					
ANR	17027	Identifier	ZCG		16786	0					
ANR	17028	ArgumentList	key_len		16786	1					
ANR	17029	Argument	key_len		16786	0					
ANR	17030	Identifier	key_len		16786	0					
ANR	17031	CompoundStatement		37:20:1491:1491	16786	1					
ANR	17032	ExpressionStatement	key = ZCG ( key )	1651:3:49823:49837	16786	0	True				
ANR	17033	AssignmentExpression	key = ZCG ( key )		16786	0		=			
ANR	17034	Identifier	key		16786	0					
ANR	17035	CallExpression	ZCG ( key )		16786	1					
ANR	17036	Callee	ZCG		16786	0					
ANR	17037	Identifier	ZCG		16786	0					
ANR	17038	ArgumentList	key		16786	1					
ANR	17039	Argument	key		16786	0					
ANR	17040	Identifier	key		16786	0					
ANR	17041	ExpressionStatement	key_length = ZCG ( key_len )	1652:3:49842:49867	16786	1	True				
ANR	17042	AssignmentExpression	key_length = ZCG ( key_len )		16786	0		=			
ANR	17043	Identifier	key_length		16786	0					
ANR	17044	CallExpression	ZCG ( key_len )		16786	1					
ANR	17045	Callee	ZCG		16786	0					
ANR	17046	Identifier	ZCG		16786	0					
ANR	17047	ArgumentList	key_len		16786	1					
ANR	17048	Argument	key_len		16786	0					
ANR	17049	Identifier	key_len		16786	0					
ANR	17050	ElseStatement	else		16786	0					
ANR	17051	CompoundStatement		42:8:1555:1555	16786	0					
ANR	17052	IfStatement	if ( ! ZCG ( accel_directives ) . revalidate_path )		16786	0					
ANR	17053	Condition	! ZCG ( accel_directives ) . revalidate_path	1656:6:49890:49927	16786	0	True				
ANR	17054	UnaryOperationExpression	! ZCG ( accel_directives ) . revalidate_path		16786	0					
ANR	17055	UnaryOperator	!		16786	0					
ANR	17056	MemberAccess	ZCG ( accel_directives ) . revalidate_path		16786	1					
ANR	17057	CallExpression	ZCG ( accel_directives )		16786	0					
ANR	17058	Callee	ZCG		16786	0					
ANR	17059	Identifier	ZCG		16786	0					
ANR	17060	ArgumentList	accel_directives		16786	1					
ANR	17061	Argument	accel_directives		16786	0					
ANR	17062	Identifier	accel_directives		16786	0					
ANR	17063	Identifier	revalidate_path		16786	1					
ANR	17064	CompoundStatement		43:46:1603:1603	16786	1					
ANR	17065	ExpressionStatement	"key = accel_make_persistent_key ( file_handle -> filename , strlen ( file_handle -> filename ) , & key_length )"	1658:3:49977:50075	16786	0	True				
ANR	17066	AssignmentExpression	"key = accel_make_persistent_key ( file_handle -> filename , strlen ( file_handle -> filename ) , & key_length )"		16786	0		=			
ANR	17067	Identifier	key		16786	0					
ANR	17068	CallExpression	"accel_make_persistent_key ( file_handle -> filename , strlen ( file_handle -> filename ) , & key_length )"		16786	1					
ANR	17069	Callee	accel_make_persistent_key		16786	0					
ANR	17070	Identifier	accel_make_persistent_key		16786	0					
ANR	17071	ArgumentList	file_handle -> filename		16786	1					
ANR	17072	Argument	file_handle -> filename		16786	0					
ANR	17073	PtrMemberAccess	file_handle -> filename		16786	0					
ANR	17074	Identifier	file_handle		16786	0					
ANR	17075	Identifier	filename		16786	1					
ANR	17076	Argument	strlen ( file_handle -> filename )		16786	1					
ANR	17077	CallExpression	strlen ( file_handle -> filename )		16786	0					
ANR	17078	Callee	strlen		16786	0					
ANR	17079	Identifier	strlen		16786	0					
ANR	17080	ArgumentList	file_handle -> filename		16786	1					
ANR	17081	Argument	file_handle -> filename		16786	0					
ANR	17082	PtrMemberAccess	file_handle -> filename		16786	0					
ANR	17083	Identifier	file_handle		16786	0					
ANR	17084	Identifier	filename		16786	1					
ANR	17085	Argument	& key_length		16786	2					
ANR	17086	UnaryOperationExpression	& key_length		16786	0					
ANR	17087	UnaryOperator	&		16786	0					
ANR	17088	Identifier	key_length		16786	1					
ANR	17089	IfStatement	if ( ! key )		16786	1					
ANR	17090	Condition	! key	1659:7:50084:50087	16786	0	True				
ANR	17091	UnaryOperationExpression	! key		16786	0					
ANR	17092	UnaryOperator	!		16786	0					
ANR	17093	Identifier	key		16786	1					
ANR	17094	CompoundStatement		46:13:1763:1763	16786	1					
ANR	17095	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1660:4:50096:50151	16786	0	True				
ANR	17096	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		16786	0					
ANR	17097	Callee	accelerator_orig_compile_file		16786	0					
ANR	17098	Identifier	accelerator_orig_compile_file		16786	0					
ANR	17099	ArgumentList	file_handle		16786	1					
ANR	17100	Argument	file_handle		16786	0					
ANR	17101	Identifier	file_handle		16786	0					
ANR	17102	Argument	type		16786	1					
ANR	17103	Identifier	type		16786	0					
ANR	17104	ExpressionStatement	"persistent_script = zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"	1662:3:50161:50235	16786	2	True				
ANR	17105	AssignmentExpression	"persistent_script = zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"		16786	0		=			
ANR	17106	Identifier	persistent_script		16786	0					
ANR	17107	CallExpression	"zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"		16786	1					
ANR	17108	Callee	zend_accel_hash_str_find		16786	0					
ANR	17109	Identifier	zend_accel_hash_str_find		16786	0					
ANR	17110	ArgumentList	& ZCSG ( hash )		16786	1					
ANR	17111	Argument	& ZCSG ( hash )		16786	0					
ANR	17112	UnaryOperationExpression	& ZCSG ( hash )		16786	0					
ANR	17113	UnaryOperator	&		16786	0					
ANR	17114	CallExpression	ZCSG ( hash )		16786	1					
ANR	17115	Callee	ZCSG		16786	0					
ANR	17116	Identifier	ZCSG		16786	0					
ANR	17117	ArgumentList	hash		16786	1					
ANR	17118	Argument	hash		16786	0					
ANR	17119	Identifier	hash		16786	0					
ANR	17120	Argument	key		16786	1					
ANR	17121	Identifier	key		16786	0					
ANR	17122	Argument	key_length		16786	2					
ANR	17123	Identifier	key_length		16786	0					
ANR	17124	IfStatement	if ( ! persistent_script )		16786	1					
ANR	17125	Condition	! persistent_script	1664:6:50247:50264	16786	0	True				
ANR	17126	UnaryOperationExpression	! persistent_script		16786	0					
ANR	17127	UnaryOperator	!		16786	0					
ANR	17128	Identifier	persistent_script		16786	1					
ANR	17129	CompoundStatement		53:3:1998:2027	16786	1					
ANR	17130	IdentifierDeclStatement	zend_accel_hash_entry * bucket ;	1666:3:50325:50354	16786	0	True				
ANR	17131	IdentifierDecl	* bucket		16786	0					
ANR	17132	IdentifierDeclType	zend_accel_hash_entry *		16786	0					
ANR	17133	Identifier	bucket		16786	1					
ANR	17134	IfStatement	"if ( file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE )"		16786	1					
ANR	17135	Condition	"file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"	1669:10:50406:50549	16786	0	True				
ANR	17136	AndExpression	"file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"		16786	0		&&			
ANR	17137	EqualityExpression	file_handle -> type == ZEND_HANDLE_FILENAME		16786	0		==			
ANR	17138	PtrMemberAccess	file_handle -> type		16786	0					
ANR	17139	Identifier	file_handle		16786	0					
ANR	17140	Identifier	type		16786	1					
ANR	17141	Identifier	ZEND_HANDLE_FILENAME		16786	1					
ANR	17142	EqualityExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"		16786	1		==			
ANR	17143	CallExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle )"		16786	0					
ANR	17144	Callee	accelerator_orig_zend_stream_open_function		16786	0					
ANR	17145	Identifier	accelerator_orig_zend_stream_open_function		16786	0					
ANR	17146	ArgumentList	file_handle -> filename		16786	1					
ANR	17147	Argument	file_handle -> filename		16786	0					
ANR	17148	PtrMemberAccess	file_handle -> filename		16786	0					
ANR	17149	Identifier	file_handle		16786	0					
ANR	17150	Identifier	filename		16786	1					
ANR	17151	Argument	file_handle		16786	1					
ANR	17152	Identifier	file_handle		16786	0					
ANR	17153	Identifier	FAILURE		16786	1					
ANR	17154	CompoundStatement		57:101:2225:2225	16786	1					
ANR	17155	IfStatement	if ( type == ZEND_REQUIRE )		16786	0					
ANR	17156	Condition	type == ZEND_REQUIRE	1671:8:50562:50581	16786	0	True				
ANR	17157	EqualityExpression	type == ZEND_REQUIRE		16786	0		==			
ANR	17158	Identifier	type		16786	0					
ANR	17159	Identifier	ZEND_REQUIRE		16786	1					
ANR	17160	CompoundStatement		58:30:2257:2257	16786	1					
ANR	17161	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"	1672:5:50591:50664	16786	0	True				
ANR	17162	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"		16786	0					
ANR	17163	Callee	zend_message_dispatcher		16786	0					
ANR	17164	Identifier	zend_message_dispatcher		16786	0					
ANR	17165	ArgumentList	ZMSG_FAILED_REQUIRE_FOPEN		16786	1					
ANR	17166	Argument	ZMSG_FAILED_REQUIRE_FOPEN		16786	0					
ANR	17167	Identifier	ZMSG_FAILED_REQUIRE_FOPEN		16786	0					
ANR	17168	Argument	file_handle -> filename		16786	1					
ANR	17169	PtrMemberAccess	file_handle -> filename		16786	0					
ANR	17170	Identifier	file_handle		16786	0					
ANR	17171	Identifier	filename		16786	1					
ANR	17172	ExpressionStatement	zend_bailout ( )	1673:5:50671:50685	16786	1	True				
ANR	17173	CallExpression	zend_bailout ( )		16786	0					
ANR	17174	Callee	zend_bailout		16786	0					
ANR	17175	Identifier	zend_bailout		16786	0					
ANR	17176	ArgumentList			16786	1					
ANR	17177	ElseStatement	else		16786	0					
ANR	17178	CompoundStatement		61:11:2371:2371	16786	0					
ANR	17179	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"	1675:5:50705:50778	16786	0	True				
ANR	17180	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"		16786	0					
ANR	17181	Callee	zend_message_dispatcher		16786	0					
ANR	17182	Identifier	zend_message_dispatcher		16786	0					
ANR	17183	ArgumentList	ZMSG_FAILED_INCLUDE_FOPEN		16786	1					
ANR	17184	Argument	ZMSG_FAILED_INCLUDE_FOPEN		16786	0					
ANR	17185	Identifier	ZMSG_FAILED_INCLUDE_FOPEN		16786	0					
ANR	17186	Argument	file_handle -> filename		16786	1					
ANR	17187	PtrMemberAccess	file_handle -> filename		16786	0					
ANR	17188	Identifier	file_handle		16786	0					
ANR	17189	Identifier	filename		16786	1					
ANR	17190	ReturnStatement	return NULL ;	1677:4:50790:50801	16786	1	True				
ANR	17191	Identifier	NULL		16786	0					
ANR	17192	IfStatement	if ( file_handle -> opened_path )		16786	2					
ANR	17193	Condition	file_handle -> opened_path	1680:7:50819:50842	16786	0	True				
ANR	17194	PtrMemberAccess	file_handle -> opened_path		16786	0					
ANR	17195	Identifier	file_handle		16786	0					
ANR	17196	Identifier	opened_path		16786	1					
ANR	17197	CompoundStatement		67:33:2518:2518	16786	1					
ANR	17198	ExpressionStatement	"bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , file_handle -> opened_path )"	1681:4:50851:50925	16786	0	True				
ANR	17199	AssignmentExpression	"bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , file_handle -> opened_path )"		16786	0		=			
ANR	17200	Identifier	bucket		16786	0					
ANR	17201	CallExpression	"zend_accel_hash_find_entry ( & ZCSG ( hash ) , file_handle -> opened_path )"		16786	1					
ANR	17202	Callee	zend_accel_hash_find_entry		16786	0					
ANR	17203	Identifier	zend_accel_hash_find_entry		16786	0					
ANR	17204	ArgumentList	& ZCSG ( hash )		16786	1					
ANR	17205	Argument	& ZCSG ( hash )		16786	0					
ANR	17206	UnaryOperationExpression	& ZCSG ( hash )		16786	0					
ANR	17207	UnaryOperator	&		16786	0					
ANR	17208	CallExpression	ZCSG ( hash )		16786	1					
ANR	17209	Callee	ZCSG		16786	0					
ANR	17210	Identifier	ZCSG		16786	0					
ANR	17211	ArgumentList	hash		16786	1					
ANR	17212	Argument	hash		16786	0					
ANR	17213	Identifier	hash		16786	0					
ANR	17214	Argument	file_handle -> opened_path		16786	1					
ANR	17215	PtrMemberAccess	file_handle -> opened_path		16786	0					
ANR	17216	Identifier	file_handle		16786	0					
ANR	17217	Identifier	opened_path		16786	1					
ANR	17218	IfStatement	if ( bucket )		16786	1					
ANR	17219	Condition	bucket	1683:8:50936:50941	16786	0	True				
ANR	17220	Identifier	bucket		16786	0					
ANR	17221	CompoundStatement		70:16:2617:2617	16786	1					
ANR	17222	ExpressionStatement	persistent_script = ( zend_persistent_script * ) bucket -> data	1684:5:50951:51009	16786	0	True				
ANR	17223	AssignmentExpression	persistent_script = ( zend_persistent_script * ) bucket -> data		16786	0		=			
ANR	17224	Identifier	persistent_script		16786	0					
ANR	17225	CastExpression	( zend_persistent_script * ) bucket -> data		16786	1					
ANR	17226	CastTarget	zend_persistent_script *		16786	0					
ANR	17227	PtrMemberAccess	bucket -> data		16786	1					
ANR	17228	Identifier	bucket		16786	0					
ANR	17229	Identifier	data		16786	1					
ANR	17230	IfStatement	if ( key && ! persistent_script -> corrupted )		16786	1					
ANR	17231	Condition	key && ! persistent_script -> corrupted	1686:9:51021:51056	16786	0	True				
ANR	17232	AndExpression	key && ! persistent_script -> corrupted		16786	0		&&			
ANR	17233	Identifier	key		16786	0					
ANR	17234	UnaryOperationExpression	! persistent_script -> corrupted		16786	1					
ANR	17235	UnaryOperator	!		16786	0					
ANR	17236	PtrMemberAccess	persistent_script -> corrupted		16786	1					
ANR	17237	Identifier	persistent_script		16786	0					
ANR	17238	Identifier	corrupted		16786	1					
ANR	17239	CompoundStatement		73:47:2732:2732	16786	1					
ANR	17240	ExpressionStatement	SHM_UNPROTECT ( )	1687:6:51067:51082	16786	0	True				
ANR	17241	CallExpression	SHM_UNPROTECT ( )		16786	0					
ANR	17242	Callee	SHM_UNPROTECT		16786	0					
ANR	17243	Identifier	SHM_UNPROTECT		16786	0					
ANR	17244	ArgumentList			16786	1					
ANR	17245	ExpressionStatement	zend_shared_alloc_lock ( )	1688:6:51090:51114	16786	1	True				
ANR	17246	CallExpression	zend_shared_alloc_lock ( )		16786	0					
ANR	17247	Callee	zend_shared_alloc_lock		16786	0					
ANR	17248	Identifier	zend_shared_alloc_lock		16786	0					
ANR	17249	ArgumentList			16786	1					
ANR	17250	ExpressionStatement	"zend_accel_add_key ( key , key_length , bucket )"	1689:6:51122:51165	16786	2	True				
ANR	17251	CallExpression	"zend_accel_add_key ( key , key_length , bucket )"		16786	0					
ANR	17252	Callee	zend_accel_add_key		16786	0					
ANR	17253	Identifier	zend_accel_add_key		16786	0					
ANR	17254	ArgumentList	key		16786	1					
ANR	17255	Argument	key		16786	0					
ANR	17256	Identifier	key		16786	0					
ANR	17257	Argument	key_length		16786	1					
ANR	17258	Identifier	key_length		16786	0					
ANR	17259	Argument	bucket		16786	2					
ANR	17260	Identifier	bucket		16786	0					
ANR	17261	ExpressionStatement	zend_shared_alloc_unlock ( )	1690:6:51173:51199	16786	3	True				
ANR	17262	CallExpression	zend_shared_alloc_unlock ( )		16786	0					
ANR	17263	Callee	zend_shared_alloc_unlock		16786	0					
ANR	17264	Identifier	zend_shared_alloc_unlock		16786	0					
ANR	17265	ArgumentList			16786	1					
ANR	17266	ExpressionStatement	SHM_PROTECT ( )	1691:6:51207:51220	16786	4	True				
ANR	17267	CallExpression	SHM_PROTECT ( )		16786	0					
ANR	17268	Callee	SHM_PROTECT		16786	0					
ANR	17269	Identifier	SHM_PROTECT		16786	0					
ANR	17270	ArgumentList			16786	1					
ANR	17271	ExpressionStatement	ZCG ( cache_opline ) = NULL	1699:1:51268:51292	16786	6	True				
ANR	17272	AssignmentExpression	ZCG ( cache_opline ) = NULL		16786	0		=			
ANR	17273	CallExpression	ZCG ( cache_opline )		16786	0					
ANR	17274	Callee	ZCG		16786	0					
ANR	17275	Identifier	ZCG		16786	0					
ANR	17276	ArgumentList	cache_opline		16786	1					
ANR	17277	Argument	cache_opline		16786	0					
ANR	17278	Identifier	cache_opline		16786	0					
ANR	17279	Identifier	NULL		16786	1					
ANR	17280	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1700:1:51295:51330	16786	7	True				
ANR	17281	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		16786	0		=			
ANR	17282	CallExpression	ZCG ( cache_persistent_script )		16786	0					
ANR	17283	Callee	ZCG		16786	0					
ANR	17284	Identifier	ZCG		16786	0					
ANR	17285	ArgumentList	cache_persistent_script		16786	1					
ANR	17286	Argument	cache_persistent_script		16786	0					
ANR	17287	Identifier	cache_persistent_script		16786	0					
ANR	17288	Identifier	NULL		16786	1					
ANR	17289	IfStatement	if ( persistent_script && persistent_script -> corrupted )		16786	8					
ANR	17290	Condition	persistent_script && persistent_script -> corrupted	1702:5:51338:51386	16786	0	True				
ANR	17291	AndExpression	persistent_script && persistent_script -> corrupted		16786	0		&&			
ANR	17292	Identifier	persistent_script		16786	0					
ANR	17293	PtrMemberAccess	persistent_script -> corrupted		16786	1					
ANR	17294	Identifier	persistent_script		16786	0					
ANR	17295	Identifier	corrupted		16786	1					
ANR	17296	CompoundStatement		89:56:3062:3062	16786	1					
ANR	17297	ExpressionStatement	persistent_script = NULL	1703:2:51393:51417	16786	0	True				
ANR	17298	AssignmentExpression	persistent_script = NULL		16786	0		=			
ANR	17299	Identifier	persistent_script		16786	0					
ANR	17300	Identifier	NULL		16786	1					
ANR	17301	IfStatement	if ( ! ZCG ( counted ) )		16786	9					
ANR	17302	Condition	! ZCG ( counted )	1710:5:51606:51618	16786	0	True				
ANR	17303	UnaryOperationExpression	! ZCG ( counted )		16786	0					
ANR	17304	UnaryOperator	!		16786	0					
ANR	17305	CallExpression	ZCG ( counted )		16786	1					
ANR	17306	Callee	ZCG		16786	0					
ANR	17307	Identifier	ZCG		16786	0					
ANR	17308	ArgumentList	counted		16786	1					
ANR	17309	Argument	counted		16786	0					
ANR	17310	Identifier	counted		16786	0					
ANR	17311	CompoundStatement		97:20:3294:3294	16786	1					
ANR	17312	ExpressionStatement	ZCG ( counted ) = 1	1711:2:51625:51641	16786	0	True				
ANR	17313	AssignmentExpression	ZCG ( counted ) = 1		16786	0		=			
ANR	17314	CallExpression	ZCG ( counted )		16786	0					
ANR	17315	Callee	ZCG		16786	0					
ANR	17316	Identifier	ZCG		16786	0					
ANR	17317	ArgumentList	counted		16786	1					
ANR	17318	Argument	counted		16786	0					
ANR	17319	Identifier	counted		16786	0					
ANR	17320	PrimaryExpression	1		16786	1					
ANR	17321	ExpressionStatement	accel_activate_add ( )	1712:2:51645:51665	16786	1	True				
ANR	17322	CallExpression	accel_activate_add ( )		16786	0					
ANR	17323	Callee	accel_activate_add		16786	0					
ANR	17324	Identifier	accel_activate_add		16786	0					
ANR	17325	ArgumentList			16786	1					
ANR	17326	ExpressionStatement	SHM_UNPROTECT ( )	1715:1:51672:51687	16786	10	True				
ANR	17327	CallExpression	SHM_UNPROTECT ( )		16786	0					
ANR	17328	Callee	SHM_UNPROTECT		16786	0					
ANR	17329	Identifier	SHM_UNPROTECT		16786	0					
ANR	17330	ArgumentList			16786	1					
ANR	17331	IfStatement	if ( persistent_script && ZCG ( accel_directives ) . validate_timestamps )		16786	11					
ANR	17332	Condition	persistent_script && ZCG ( accel_directives ) . validate_timestamps	1718:5:51767:51828	16786	0	True				
ANR	17333	AndExpression	persistent_script && ZCG ( accel_directives ) . validate_timestamps		16786	0		&&			
ANR	17334	Identifier	persistent_script		16786	0					
ANR	17335	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		16786	1					
ANR	17336	CallExpression	ZCG ( accel_directives )		16786	0					
ANR	17337	Callee	ZCG		16786	0					
ANR	17338	Identifier	ZCG		16786	0					
ANR	17339	ArgumentList	accel_directives		16786	1					
ANR	17340	Argument	accel_directives		16786	0					
ANR	17341	Identifier	accel_directives		16786	0					
ANR	17342	Identifier	validate_timestamps		16786	1					
ANR	17343	CompoundStatement		105:69:3504:3504	16786	1					
ANR	17344	IfStatement	"if ( validate_timestamp_and_record ( persistent_script , file_handle ) == FAILURE )"		16786	0					
ANR	17345	Condition	"validate_timestamp_and_record ( persistent_script , file_handle ) == FAILURE"	1719:6:51839:51910	16786	0	True				
ANR	17346	EqualityExpression	"validate_timestamp_and_record ( persistent_script , file_handle ) == FAILURE"		16786	0		==			
ANR	17347	CallExpression	"validate_timestamp_and_record ( persistent_script , file_handle )"		16786	0					
ANR	17348	Callee	validate_timestamp_and_record		16786	0					
ANR	17349	Identifier	validate_timestamp_and_record		16786	0					
ANR	17350	ArgumentList	persistent_script		16786	1					
ANR	17351	Argument	persistent_script		16786	0					
ANR	17352	Identifier	persistent_script		16786	0					
ANR	17353	Argument	file_handle		16786	1					
ANR	17354	Identifier	file_handle		16786	0					
ANR	17355	Identifier	FAILURE		16786	1					
ANR	17356	CompoundStatement		106:80:3586:3586	16786	1					
ANR	17357	ExpressionStatement	zend_shared_alloc_lock ( )	1720:3:51918:51942	16786	0	True				
ANR	17358	CallExpression	zend_shared_alloc_lock ( )		16786	0					
ANR	17359	Callee	zend_shared_alloc_lock		16786	0					
ANR	17360	Identifier	zend_shared_alloc_lock		16786	0					
ANR	17361	ArgumentList			16786	1					
ANR	17362	IfStatement	if ( ! persistent_script -> corrupted )		16786	1					
ANR	17363	Condition	! persistent_script -> corrupted	1721:7:51951:51979	16786	0	True				
ANR	17364	UnaryOperationExpression	! persistent_script -> corrupted		16786	0					
ANR	17365	UnaryOperator	!		16786	0					
ANR	17366	PtrMemberAccess	persistent_script -> corrupted		16786	1					
ANR	17367	Identifier	persistent_script		16786	0					
ANR	17368	Identifier	corrupted		16786	1					
ANR	17369	CompoundStatement		108:38:3655:3655	16786	1					
ANR	17370	ExpressionStatement	persistent_script -> corrupted = 1	1722:4:51988:52020	16786	0	True				
ANR	17371	AssignmentExpression	persistent_script -> corrupted = 1		16786	0		=			
ANR	17372	PtrMemberAccess	persistent_script -> corrupted		16786	0					
ANR	17373	Identifier	persistent_script		16786	0					
ANR	17374	Identifier	corrupted		16786	1					
ANR	17375	PrimaryExpression	1		16786	1					
ANR	17376	ExpressionStatement	persistent_script -> timestamp = 0	1723:4:52026:52058	16786	1	True				
ANR	17377	AssignmentExpression	persistent_script -> timestamp = 0		16786	0		=			
ANR	17378	PtrMemberAccess	persistent_script -> timestamp		16786	0					
ANR	17379	Identifier	persistent_script		16786	0					
ANR	17380	Identifier	timestamp		16786	1					
ANR	17381	PrimaryExpression	0		16786	1					
ANR	17382	ExpressionStatement	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption	1724:4:52064:52148	16786	2	True				
ANR	17383	AssignmentExpression	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption		16786	0		+=			
ANR	17384	CallExpression	ZSMMG ( wasted_shared_memory )		16786	0					
ANR	17385	Callee	ZSMMG		16786	0					
ANR	17386	Identifier	ZSMMG		16786	0					
ANR	17387	ArgumentList	wasted_shared_memory		16786	1					
ANR	17388	Argument	wasted_shared_memory		16786	0					
ANR	17389	Identifier	wasted_shared_memory		16786	0					
ANR	17390	MemberAccess	persistent_script -> dynamic_members . memory_consumption		16786	1					
ANR	17391	PtrMemberAccess	persistent_script -> dynamic_members		16786	0					
ANR	17392	Identifier	persistent_script		16786	0					
ANR	17393	Identifier	dynamic_members		16786	1					
ANR	17394	Identifier	memory_consumption		16786	1					
ANR	17395	IfStatement	if ( ZSMMG ( memory_exhausted ) )		16786	3					
ANR	17396	Condition	ZSMMG ( memory_exhausted )	1725:8:52158:52180	16786	0	True				
ANR	17397	CallExpression	ZSMMG ( memory_exhausted )		16786	0					
ANR	17398	Callee	ZSMMG		16786	0					
ANR	17399	Identifier	ZSMMG		16786	0					
ANR	17400	ArgumentList	memory_exhausted		16786	1					
ANR	17401	Argument	memory_exhausted		16786	0					
ANR	17402	Identifier	memory_exhausted		16786	0					
ANR	17403	CompoundStatement		113:5:3863:3981	16786	1					
ANR	17404	IdentifierDeclStatement	zend_accel_restart_reason reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM ;	1726:5:52190:52308	16786	0	True				
ANR	17405	IdentifierDecl	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		16786	0					
ANR	17406	IdentifierDeclType	zend_accel_restart_reason		16786	0					
ANR	17407	Identifier	reason		16786	1					
ANR	17408	AssignmentExpression	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		16786	2		=			
ANR	17409	Identifier	reason		16786	0					
ANR	17410	ConditionalExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		16786	1					
ANR	17411	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )		16786	0					
ANR	17412	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		16786	0					
ANR	17413	Callee	zend_accel_hash_is_full		16786	0					
ANR	17414	Identifier	zend_accel_hash_is_full		16786	0					
ANR	17415	ArgumentList	& ZCSG ( hash )		16786	1					
ANR	17416	Argument	& ZCSG ( hash )		16786	0					
ANR	17417	UnaryOperationExpression	& ZCSG ( hash )		16786	0					
ANR	17418	UnaryOperator	&		16786	0					
ANR	17419	CallExpression	ZCSG ( hash )		16786	1					
ANR	17420	Callee	ZCSG		16786	0					
ANR	17421	Identifier	ZCSG		16786	0					
ANR	17422	ArgumentList	hash		16786	1					
ANR	17423	Argument	hash		16786	0					
ANR	17424	Identifier	hash		16786	0					
ANR	17425	Identifier	ACCEL_RESTART_HASH		16786	1					
ANR	17426	Identifier	ACCEL_RESTART_OOM		16786	2					
ANR	17427	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( reason )	1728:5:52315:52363	16786	1	True				
ANR	17428	CallExpression	zend_accel_schedule_restart_if_necessary ( reason )		16786	0					
ANR	17429	Callee	zend_accel_schedule_restart_if_necessary		16786	0					
ANR	17430	Identifier	zend_accel_schedule_restart_if_necessary		16786	0					
ANR	17431	ArgumentList	reason		16786	1					
ANR	17432	Argument	reason		16786	0					
ANR	17433	Identifier	reason		16786	0					
ANR	17434	ExpressionStatement	zend_shared_alloc_unlock ( )	1731:3:52379:52405	16786	2	True				
ANR	17435	CallExpression	zend_shared_alloc_unlock ( )		16786	0					
ANR	17436	Callee	zend_shared_alloc_unlock		16786	0					
ANR	17437	Identifier	zend_shared_alloc_unlock		16786	0					
ANR	17438	ArgumentList			16786	1					
ANR	17439	ExpressionStatement	persistent_script = NULL	1732:3:52410:52434	16786	3	True				
ANR	17440	AssignmentExpression	persistent_script = NULL		16786	0		=			
ANR	17441	Identifier	persistent_script		16786	0					
ANR	17442	Identifier	NULL		16786	1					
ANR	17443	IfStatement	if ( persistent_script && ZCG ( accel_directives ) . consistency_checks && persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0 )		16786	12					
ANR	17444	Condition	persistent_script && ZCG ( accel_directives ) . consistency_checks && persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0	1737:5:52514:52667	16786	0	True				
ANR	17445	AndExpression	persistent_script && ZCG ( accel_directives ) . consistency_checks && persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0		16786	0		&&			
ANR	17446	Identifier	persistent_script		16786	0					
ANR	17447	AndExpression	ZCG ( accel_directives ) . consistency_checks && persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0		16786	1		&&			
ANR	17448	MemberAccess	ZCG ( accel_directives ) . consistency_checks		16786	0					
ANR	17449	CallExpression	ZCG ( accel_directives )		16786	0					
ANR	17450	Callee	ZCG		16786	0					
ANR	17451	Identifier	ZCG		16786	0					
ANR	17452	ArgumentList	accel_directives		16786	1					
ANR	17453	Argument	accel_directives		16786	0					
ANR	17454	Identifier	accel_directives		16786	0					
ANR	17455	Identifier	consistency_checks		16786	1					
ANR	17456	EqualityExpression	persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0		16786	1		==			
ANR	17457	MultiplicativeExpression	persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks		16786	0		%			
ANR	17458	MemberAccess	persistent_script -> dynamic_members . hits		16786	0					
ANR	17459	PtrMemberAccess	persistent_script -> dynamic_members		16786	0					
ANR	17460	Identifier	persistent_script		16786	0					
ANR	17461	Identifier	dynamic_members		16786	1					
ANR	17462	Identifier	hits		16786	1					
ANR	17463	MemberAccess	ZCG ( accel_directives ) . consistency_checks		16786	1					
ANR	17464	CallExpression	ZCG ( accel_directives )		16786	0					
ANR	17465	Callee	ZCG		16786	0					
ANR	17466	Identifier	ZCG		16786	0					
ANR	17467	ArgumentList	accel_directives		16786	1					
ANR	17468	Argument	accel_directives		16786	0					
ANR	17469	Identifier	accel_directives		16786	0					
ANR	17470	Identifier	consistency_checks		16786	1					
ANR	17471	PrimaryExpression	0		16786	1					
ANR	17472	CompoundStatement		127:2:4348:4417	16786	1					
ANR	17473	IdentifierDeclStatement	unsigned int checksum = zend_accel_script_checksum ( persistent_script ) ;	1740:2:52675:52744	16786	0	True				
ANR	17474	IdentifierDecl	checksum = zend_accel_script_checksum ( persistent_script )		16786	0					
ANR	17475	IdentifierDeclType	unsigned int		16786	0					
ANR	17476	Identifier	checksum		16786	1					
ANR	17477	AssignmentExpression	checksum = zend_accel_script_checksum ( persistent_script )		16786	2		=			
ANR	17478	Identifier	checksum		16786	0					
ANR	17479	CallExpression	zend_accel_script_checksum ( persistent_script )		16786	1					
ANR	17480	Callee	zend_accel_script_checksum		16786	0					
ANR	17481	Identifier	zend_accel_script_checksum		16786	0					
ANR	17482	ArgumentList	persistent_script		16786	1					
ANR	17483	Argument	persistent_script		16786	0					
ANR	17484	Identifier	persistent_script		16786	0					
ANR	17485	IfStatement	if ( checksum != persistent_script -> dynamic_members . checksum )		16786	1					
ANR	17486	Condition	checksum != persistent_script -> dynamic_members . checksum	1741:6:52752:52806	16786	0	True				
ANR	17487	EqualityExpression	checksum != persistent_script -> dynamic_members . checksum		16786	0		!=			
ANR	17488	Identifier	checksum		16786	0					
ANR	17489	MemberAccess	persistent_script -> dynamic_members . checksum		16786	1					
ANR	17490	PtrMemberAccess	persistent_script -> dynamic_members		16786	0					
ANR	17491	Identifier	persistent_script		16786	0					
ANR	17492	Identifier	dynamic_members		16786	1					
ANR	17493	Identifier	checksum		16786	1					
ANR	17494	CompoundStatement		128:64:4483:4483	16786	1					
ANR	17495	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""Checksum failed for '%s':  expected=0x%0.8X, found=0x%0.8X"" , persistent_script -> full_path , persistent_script -> dynamic_members . checksum , checksum )"	1743:3:52846:53033	16786	0	True				
ANR	17496	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""Checksum failed for '%s':  expected=0x%0.8X, found=0x%0.8X"" , persistent_script -> full_path , persistent_script -> dynamic_members . checksum , checksum )"		16786	0					
ANR	17497	Callee	zend_accel_error		16786	0					
ANR	17498	Identifier	zend_accel_error		16786	0					
ANR	17499	ArgumentList	ACCEL_LOG_INFO		16786	1					
ANR	17500	Argument	ACCEL_LOG_INFO		16786	0					
ANR	17501	Identifier	ACCEL_LOG_INFO		16786	0					
ANR	17502	Argument	"""Checksum failed for '%s':  expected=0x%0.8X, found=0x%0.8X"""		16786	1					
ANR	17503	PrimaryExpression	"""Checksum failed for '%s':  expected=0x%0.8X, found=0x%0.8X"""		16786	0					
ANR	17504	Argument	persistent_script -> full_path		16786	2					
ANR	17505	PtrMemberAccess	persistent_script -> full_path		16786	0					
ANR	17506	Identifier	persistent_script		16786	0					
ANR	17507	Identifier	full_path		16786	1					
ANR	17508	Argument	persistent_script -> dynamic_members . checksum		16786	3					
ANR	17509	MemberAccess	persistent_script -> dynamic_members . checksum		16786	0					
ANR	17510	PtrMemberAccess	persistent_script -> dynamic_members		16786	0					
ANR	17511	Identifier	persistent_script		16786	0					
ANR	17512	Identifier	dynamic_members		16786	1					
ANR	17513	Identifier	checksum		16786	1					
ANR	17514	Argument	checksum		16786	4					
ANR	17515	Identifier	checksum		16786	0					
ANR	17516	ExpressionStatement	zend_shared_alloc_lock ( )	1745:3:53038:53062	16786	1	True				
ANR	17517	CallExpression	zend_shared_alloc_lock ( )		16786	0					
ANR	17518	Callee	zend_shared_alloc_lock		16786	0					
ANR	17519	Identifier	zend_shared_alloc_lock		16786	0					
ANR	17520	ArgumentList			16786	1					
ANR	17521	IfStatement	if ( ! persistent_script -> corrupted )		16786	2					
ANR	17522	Condition	! persistent_script -> corrupted	1746:7:53071:53099	16786	0	True				
ANR	17523	UnaryOperationExpression	! persistent_script -> corrupted		16786	0					
ANR	17524	UnaryOperator	!		16786	0					
ANR	17525	PtrMemberAccess	persistent_script -> corrupted		16786	1					
ANR	17526	Identifier	persistent_script		16786	0					
ANR	17527	Identifier	corrupted		16786	1					
ANR	17528	CompoundStatement		133:38:4775:4775	16786	1					
ANR	17529	ExpressionStatement	persistent_script -> corrupted = 1	1747:4:53108:53140	16786	0	True				
ANR	17530	AssignmentExpression	persistent_script -> corrupted = 1		16786	0		=			
ANR	17531	PtrMemberAccess	persistent_script -> corrupted		16786	0					
ANR	17532	Identifier	persistent_script		16786	0					
ANR	17533	Identifier	corrupted		16786	1					
ANR	17534	PrimaryExpression	1		16786	1					
ANR	17535	ExpressionStatement	persistent_script -> timestamp = 0	1748:4:53146:53178	16786	1	True				
ANR	17536	AssignmentExpression	persistent_script -> timestamp = 0		16786	0		=			
ANR	17537	PtrMemberAccess	persistent_script -> timestamp		16786	0					
ANR	17538	Identifier	persistent_script		16786	0					
ANR	17539	Identifier	timestamp		16786	1					
ANR	17540	PrimaryExpression	0		16786	1					
ANR	17541	ExpressionStatement	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption	1749:4:53184:53268	16786	2	True				
ANR	17542	AssignmentExpression	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption		16786	0		+=			
ANR	17543	CallExpression	ZSMMG ( wasted_shared_memory )		16786	0					
ANR	17544	Callee	ZSMMG		16786	0					
ANR	17545	Identifier	ZSMMG		16786	0					
ANR	17546	ArgumentList	wasted_shared_memory		16786	1					
ANR	17547	Argument	wasted_shared_memory		16786	0					
ANR	17548	Identifier	wasted_shared_memory		16786	0					
ANR	17549	MemberAccess	persistent_script -> dynamic_members . memory_consumption		16786	1					
ANR	17550	PtrMemberAccess	persistent_script -> dynamic_members		16786	0					
ANR	17551	Identifier	persistent_script		16786	0					
ANR	17552	Identifier	dynamic_members		16786	1					
ANR	17553	Identifier	memory_consumption		16786	1					
ANR	17554	IfStatement	if ( ZSMMG ( memory_exhausted ) )		16786	3					
ANR	17555	Condition	ZSMMG ( memory_exhausted )	1750:8:53278:53300	16786	0	True				
ANR	17556	CallExpression	ZSMMG ( memory_exhausted )		16786	0					
ANR	17557	Callee	ZSMMG		16786	0					
ANR	17558	Identifier	ZSMMG		16786	0					
ANR	17559	ArgumentList	memory_exhausted		16786	1					
ANR	17560	Argument	memory_exhausted		16786	0					
ANR	17561	Identifier	memory_exhausted		16786	0					
ANR	17562	CompoundStatement		138:5:4983:5101	16786	1					
ANR	17563	IdentifierDeclStatement	zend_accel_restart_reason reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM ;	1751:5:53310:53428	16786	0	True				
ANR	17564	IdentifierDecl	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		16786	0					
ANR	17565	IdentifierDeclType	zend_accel_restart_reason		16786	0					
ANR	17566	Identifier	reason		16786	1					
ANR	17567	AssignmentExpression	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		16786	2		=			
ANR	17568	Identifier	reason		16786	0					
ANR	17569	ConditionalExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		16786	1					
ANR	17570	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )		16786	0					
ANR	17571	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		16786	0					
ANR	17572	Callee	zend_accel_hash_is_full		16786	0					
ANR	17573	Identifier	zend_accel_hash_is_full		16786	0					
ANR	17574	ArgumentList	& ZCSG ( hash )		16786	1					
ANR	17575	Argument	& ZCSG ( hash )		16786	0					
ANR	17576	UnaryOperationExpression	& ZCSG ( hash )		16786	0					
ANR	17577	UnaryOperator	&		16786	0					
ANR	17578	CallExpression	ZCSG ( hash )		16786	1					
ANR	17579	Callee	ZCSG		16786	0					
ANR	17580	Identifier	ZCSG		16786	0					
ANR	17581	ArgumentList	hash		16786	1					
ANR	17582	Argument	hash		16786	0					
ANR	17583	Identifier	hash		16786	0					
ANR	17584	Identifier	ACCEL_RESTART_HASH		16786	1					
ANR	17585	Identifier	ACCEL_RESTART_OOM		16786	2					
ANR	17586	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( reason )	1753:5:53435:53483	16786	1	True				
ANR	17587	CallExpression	zend_accel_schedule_restart_if_necessary ( reason )		16786	0					
ANR	17588	Callee	zend_accel_schedule_restart_if_necessary		16786	0					
ANR	17589	Identifier	zend_accel_schedule_restart_if_necessary		16786	0					
ANR	17590	ArgumentList	reason		16786	1					
ANR	17591	Argument	reason		16786	0					
ANR	17592	Identifier	reason		16786	0					
ANR	17593	ExpressionStatement	zend_shared_alloc_unlock ( )	1756:3:53499:53525	16786	3	True				
ANR	17594	CallExpression	zend_shared_alloc_unlock ( )		16786	0					
ANR	17595	Callee	zend_shared_alloc_unlock		16786	0					
ANR	17596	Identifier	zend_shared_alloc_unlock		16786	0					
ANR	17597	ArgumentList			16786	1					
ANR	17598	ExpressionStatement	persistent_script = NULL	1757:3:53530:53554	16786	4	True				
ANR	17599	AssignmentExpression	persistent_script = NULL		16786	0		=			
ANR	17600	Identifier	persistent_script		16786	0					
ANR	17601	Identifier	NULL		16786	1					
ANR	17602	IfStatement	if ( ! persistent_script && ZCG ( accel_directives ) . file_cache )		16786	13					
ANR	17603	Condition	! persistent_script && ZCG ( accel_directives ) . file_cache	1763:5:53636:53689	16786	0	True				
ANR	17604	AndExpression	! persistent_script && ZCG ( accel_directives ) . file_cache		16786	0		&&			
ANR	17605	UnaryOperationExpression	! persistent_script		16786	0					
ANR	17606	UnaryOperator	!		16786	0					
ANR	17607	Identifier	persistent_script		16786	1					
ANR	17608	MemberAccess	ZCG ( accel_directives ) . file_cache		16786	1					
ANR	17609	CallExpression	ZCG ( accel_directives )		16786	0					
ANR	17610	Callee	ZCG		16786	0					
ANR	17611	Identifier	ZCG		16786	0					
ANR	17612	ArgumentList	accel_directives		16786	1					
ANR	17613	Argument	accel_directives		16786	0					
ANR	17614	Identifier	accel_directives		16786	0					
ANR	17615	Identifier	file_cache		16786	1					
ANR	17616	CompoundStatement		150:61:5365:5365	16786	1					
ANR	17617	ExpressionStatement	persistent_script = zend_file_cache_script_load ( file_handle )	1764:2:53696:53756	16786	0	True				
ANR	17618	AssignmentExpression	persistent_script = zend_file_cache_script_load ( file_handle )		16786	0		=			
ANR	17619	Identifier	persistent_script		16786	0					
ANR	17620	CallExpression	zend_file_cache_script_load ( file_handle )		16786	1					
ANR	17621	Callee	zend_file_cache_script_load		16786	0					
ANR	17622	Identifier	zend_file_cache_script_load		16786	0					
ANR	17623	ArgumentList	file_handle		16786	1					
ANR	17624	Argument	file_handle		16786	0					
ANR	17625	Identifier	file_handle		16786	0					
ANR	17626	IfStatement	if ( ! persistent_script )		16786	14					
ANR	17627	Condition	! persistent_script	1769:5:53843:53860	16786	0	True				
ANR	17628	UnaryOperationExpression	! persistent_script		16786	0					
ANR	17629	UnaryOperator	!		16786	0					
ANR	17630	Identifier	persistent_script		16786	1					
ANR	17631	CompoundStatement		158:2:5616:5639	16786	1					
ANR	17632	IdentifierDeclStatement	uint32_t old_const_num = zend_hash_next_free_element ( EG ( zend_constants ) ) ;	1770:2:53867:53939	16786	0	True				
ANR	17633	IdentifierDecl	old_const_num = zend_hash_next_free_element ( EG ( zend_constants ) )		16786	0					
ANR	17634	IdentifierDeclType	uint32_t		16786	0					
ANR	17635	Identifier	old_const_num		16786	1					
ANR	17636	AssignmentExpression	old_const_num = zend_hash_next_free_element ( EG ( zend_constants ) )		16786	2		=			
ANR	17637	Identifier	old_const_num		16786	0					
ANR	17638	CallExpression	zend_hash_next_free_element ( EG ( zend_constants ) )		16786	1					
ANR	17639	Callee	zend_hash_next_free_element		16786	0					
ANR	17640	Identifier	zend_hash_next_free_element		16786	0					
ANR	17641	ArgumentList	EG ( zend_constants )		16786	1					
ANR	17642	Argument	EG ( zend_constants )		16786	0					
ANR	17643	CallExpression	EG ( zend_constants )		16786	0					
ANR	17644	Callee	EG		16786	0					
ANR	17645	Identifier	EG		16786	0					
ANR	17646	ArgumentList	zend_constants		16786	1					
ANR	17647	Argument	zend_constants		16786	0					
ANR	17648	Identifier	zend_constants		16786	0					
ANR	17649	IdentifierDeclStatement	zend_op_array * op_array ;	1771:2:53943:53966	16786	1	True				
ANR	17650	IdentifierDecl	* op_array		16786	0					
ANR	17651	IdentifierDeclType	zend_op_array *		16786	0					
ANR	17652	Identifier	op_array		16786	1					
ANR	17653	ExpressionStatement	ZCSG ( misses ) ++	1774:2:53992:54006	16786	2	True				
ANR	17654	PostIncDecOperationExpression	ZCSG ( misses ) ++		16786	0					
ANR	17655	CallExpression	ZCSG ( misses )		16786	0					
ANR	17656	Callee	ZCSG		16786	0					
ANR	17657	Identifier	ZCSG		16786	0					
ANR	17658	ArgumentList	misses		16786	1					
ANR	17659	Argument	misses		16786	0					
ANR	17660	Identifier	misses		16786	0					
ANR	17661	IncDec	++		16786	1					
ANR	17662	IfStatement	if ( ZSMMG ( memory_exhausted ) || ZCSG ( restart_pending ) )		16786	3					
ANR	17663	Condition	ZSMMG ( memory_exhausted ) || ZCSG ( restart_pending )	1777:6:54075:54122	16786	0	True				
ANR	17664	OrExpression	ZSMMG ( memory_exhausted ) || ZCSG ( restart_pending )		16786	0		||			
ANR	17665	CallExpression	ZSMMG ( memory_exhausted )		16786	0					
ANR	17666	Callee	ZSMMG		16786	0					
ANR	17667	Identifier	ZSMMG		16786	0					
ANR	17668	ArgumentList	memory_exhausted		16786	1					
ANR	17669	Argument	memory_exhausted		16786	0					
ANR	17670	Identifier	memory_exhausted		16786	0					
ANR	17671	CallExpression	ZCSG ( restart_pending )		16786	1					
ANR	17672	Callee	ZCSG		16786	0					
ANR	17673	Identifier	ZCSG		16786	0					
ANR	17674	ArgumentList	restart_pending		16786	1					
ANR	17675	Argument	restart_pending		16786	0					
ANR	17676	Identifier	restart_pending		16786	0					
ANR	17677	CompoundStatement		164:56:5798:5798	16786	1					
ANR	17678	ExpressionStatement	SHM_PROTECT ( )	1778:3:54130:54143	16786	0	True				
ANR	17679	CallExpression	SHM_PROTECT ( )		16786	0					
ANR	17680	Callee	SHM_PROTECT		16786	0					
ANR	17681	Identifier	SHM_PROTECT		16786	0					
ANR	17682	ArgumentList			16786	1					
ANR	17683	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1779:3:54148:54203	16786	1	True				
ANR	17684	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		16786	0					
ANR	17685	Callee	accelerator_orig_compile_file		16786	0					
ANR	17686	Identifier	accelerator_orig_compile_file		16786	0					
ANR	17687	ArgumentList	file_handle		16786	1					
ANR	17688	Argument	file_handle		16786	0					
ANR	17689	Identifier	file_handle		16786	0					
ANR	17690	Argument	type		16786	1					
ANR	17691	Identifier	type		16786	0					
ANR	17692	ExpressionStatement	from_shared_memory = 0	1785:8:54381:54403	16786	4	True				
ANR	17693	AssignmentExpression	from_shared_memory = 0		16786	0		=			
ANR	17694	Identifier	from_shared_memory		16786	0					
ANR	17695	PrimaryExpression	0		16786	1					
ANR	17696	ExpressionStatement	"persistent_script = opcache_compile_file ( file_handle , type , key , key ? key_length : 0 , & op_array )"	1786:2:54407:54504	16786	5	True				
ANR	17697	AssignmentExpression	"persistent_script = opcache_compile_file ( file_handle , type , key , key ? key_length : 0 , & op_array )"		16786	0		=			
ANR	17698	Identifier	persistent_script		16786	0					
ANR	17699	CallExpression	"opcache_compile_file ( file_handle , type , key , key ? key_length : 0 , & op_array )"		16786	1					
ANR	17700	Callee	opcache_compile_file		16786	0					
ANR	17701	Identifier	opcache_compile_file		16786	0					
ANR	17702	ArgumentList	file_handle		16786	1					
ANR	17703	Argument	file_handle		16786	0					
ANR	17704	Identifier	file_handle		16786	0					
ANR	17705	Argument	type		16786	1					
ANR	17706	Identifier	type		16786	0					
ANR	17707	Argument	key		16786	2					
ANR	17708	Identifier	key		16786	0					
ANR	17709	Argument	key ? key_length : 0		16786	3					
ANR	17710	ConditionalExpression	key ? key_length : 0		16786	0					
ANR	17711	Condition	key		16786	0					
ANR	17712	Identifier	key		16786	0					
ANR	17713	Identifier	key_length		16786	1					
ANR	17714	PrimaryExpression	0		16786	2					
ANR	17715	Argument	& op_array		16786	4					
ANR	17716	UnaryOperationExpression	& op_array		16786	0					
ANR	17717	UnaryOperator	&		16786	0					
ANR	17718	Identifier	op_array		16786	1					
ANR	17719	IfStatement	if ( persistent_script )		16786	6					
ANR	17720	Condition	persistent_script	1787:6:54512:54528	16786	0	True				
ANR	17721	Identifier	persistent_script		16786	0					
ANR	17722	CompoundStatement		174:25:6204:6204	16786	1					
ANR	17723	ExpressionStatement	"persistent_script = cache_script_in_shared_memory ( persistent_script , key , key ? key_length : 0 , & from_shared_memory )"	1788:3:54536:54652	16786	0	True				
ANR	17724	AssignmentExpression	"persistent_script = cache_script_in_shared_memory ( persistent_script , key , key ? key_length : 0 , & from_shared_memory )"		16786	0		=			
ANR	17725	Identifier	persistent_script		16786	0					
ANR	17726	CallExpression	"cache_script_in_shared_memory ( persistent_script , key , key ? key_length : 0 , & from_shared_memory )"		16786	1					
ANR	17727	Callee	cache_script_in_shared_memory		16786	0					
ANR	17728	Identifier	cache_script_in_shared_memory		16786	0					
ANR	17729	ArgumentList	persistent_script		16786	1					
ANR	17730	Argument	persistent_script		16786	0					
ANR	17731	Identifier	persistent_script		16786	0					
ANR	17732	Argument	key		16786	1					
ANR	17733	Identifier	key		16786	0					
ANR	17734	Argument	key ? key_length : 0		16786	2					
ANR	17735	ConditionalExpression	key ? key_length : 0		16786	0					
ANR	17736	Condition	key		16786	0					
ANR	17737	Identifier	key		16786	0					
ANR	17738	Identifier	key_length		16786	1					
ANR	17739	PrimaryExpression	0		16786	2					
ANR	17740	Argument	& from_shared_memory		16786	3					
ANR	17741	UnaryOperationExpression	& from_shared_memory		16786	0					
ANR	17742	UnaryOperator	&		16786	0					
ANR	17743	Identifier	from_shared_memory		16786	1					
ANR	17744	IfStatement	if ( ! persistent_script )		16786	7					
ANR	17745	Condition	! persistent_script	1794:6:54781:54798	16786	0	True				
ANR	17746	UnaryOperationExpression	! persistent_script		16786	0					
ANR	17747	UnaryOperator	!		16786	0					
ANR	17748	Identifier	persistent_script		16786	1					
ANR	17749	CompoundStatement		181:26:6474:6474	16786	1					
ANR	17750	ExpressionStatement	SHM_PROTECT ( )	1795:3:54806:54819	16786	0	True				
ANR	17751	CallExpression	SHM_PROTECT ( )		16786	0					
ANR	17752	Callee	SHM_PROTECT		16786	0					
ANR	17753	Identifier	SHM_PROTECT		16786	0					
ANR	17754	ArgumentList			16786	1					
ANR	17755	ReturnStatement	return op_array ;	1796:3:54824:54839	16786	1	True				
ANR	17756	Identifier	op_array		16786	0					
ANR	17757	IfStatement	if ( from_shared_memory )		16786	8					
ANR	17758	Condition	from_shared_memory	1798:6:54851:54868	16786	0	True				
ANR	17759	Identifier	from_shared_memory		16786	0					
ANR	17760	CompoundStatement		187:3:6597:6669	16786	1					
ANR	17761	IdentifierDeclStatement	uint32_t new_const_num = zend_hash_next_free_element ( EG ( zend_constants ) ) ;	1800:3:54924:54996	16786	0	True				
ANR	17762	IdentifierDecl	new_const_num = zend_hash_next_free_element ( EG ( zend_constants ) )		16786	0					
ANR	17763	IdentifierDeclType	uint32_t		16786	0					
ANR	17764	Identifier	new_const_num		16786	1					
ANR	17765	AssignmentExpression	new_const_num = zend_hash_next_free_element ( EG ( zend_constants ) )		16786	2		=			
ANR	17766	Identifier	new_const_num		16786	0					
ANR	17767	CallExpression	zend_hash_next_free_element ( EG ( zend_constants ) )		16786	1					
ANR	17768	Callee	zend_hash_next_free_element		16786	0					
ANR	17769	Identifier	zend_hash_next_free_element		16786	0					
ANR	17770	ArgumentList	EG ( zend_constants )		16786	1					
ANR	17771	Argument	EG ( zend_constants )		16786	0					
ANR	17772	CallExpression	EG ( zend_constants )		16786	0					
ANR	17773	Callee	EG		16786	0					
ANR	17774	Identifier	EG		16786	0					
ANR	17775	ArgumentList	zend_constants		16786	1					
ANR	17776	Argument	zend_constants		16786	0					
ANR	17777	Identifier	zend_constants		16786	0					
ANR	17778	WhileStatement	while ( new_const_num > old_const_num )		16786	1					
ANR	17779	Condition	new_const_num > old_const_num	1801:10:55008:55036	16786	0	True				
ANR	17780	RelationalExpression	new_const_num > old_const_num		16786	0		>			
ANR	17781	Identifier	new_const_num		16786	0					
ANR	17782	Identifier	old_const_num		16786	1					
ANR	17783	CompoundStatement		188:41:6712:6712	16786	1					
ANR	17784	ExpressionStatement	new_const_num --	1802:4:55045:55060	16786	0	True				
ANR	17785	PostIncDecOperationExpression	new_const_num --		16786	0					
ANR	17786	Identifier	new_const_num		16786	0					
ANR	17787	IncDec	--		16786	1					
ANR	17788	ExpressionStatement	"zend_hash_index_del ( EG ( zend_constants ) , new_const_num )"	1803:4:55066:55120	16786	1	True				
ANR	17789	CallExpression	"zend_hash_index_del ( EG ( zend_constants ) , new_const_num )"		16786	0					
ANR	17790	Callee	zend_hash_index_del		16786	0					
ANR	17791	Identifier	zend_hash_index_del		16786	0					
ANR	17792	ArgumentList	EG ( zend_constants )		16786	1					
ANR	17793	Argument	EG ( zend_constants )		16786	0					
ANR	17794	CallExpression	EG ( zend_constants )		16786	0					
ANR	17795	Callee	EG		16786	0					
ANR	17796	Identifier	EG		16786	0					
ANR	17797	ArgumentList	zend_constants		16786	1					
ANR	17798	Argument	zend_constants		16786	0					
ANR	17799	Identifier	zend_constants		16786	0					
ANR	17800	Argument	new_const_num		16786	1					
ANR	17801	Identifier	new_const_num		16786	0					
ANR	17802	ElseStatement	else		16786	0					
ANR	17803	CompoundStatement		193:8:6812:6812	16786	0					
ANR	17804	ExpressionStatement	ZCSG ( hits ) ++	1809:2:55160:55172	16786	0	True				
ANR	17805	PostIncDecOperationExpression	ZCSG ( hits ) ++		16786	0					
ANR	17806	CallExpression	ZCSG ( hits )		16786	0					
ANR	17807	Callee	ZCSG		16786	0					
ANR	17808	Identifier	ZCSG		16786	0					
ANR	17809	ArgumentList	hits		16786	1					
ANR	17810	Argument	hits		16786	0					
ANR	17811	Identifier	hits		16786	0					
ANR	17812	IncDec	++		16786	1					
ANR	17813	ExpressionStatement	persistent_script -> dynamic_members . hits ++	1810:2:55208:55249	16786	1	True				
ANR	17814	PostIncDecOperationExpression	persistent_script -> dynamic_members . hits ++		16786	0					
ANR	17815	MemberAccess	persistent_script -> dynamic_members . hits		16786	0					
ANR	17816	PtrMemberAccess	persistent_script -> dynamic_members		16786	0					
ANR	17817	Identifier	persistent_script		16786	0					
ANR	17818	Identifier	dynamic_members		16786	1					
ANR	17819	Identifier	hits		16786	1					
ANR	17820	IncDec	++		16786	1					
ANR	17821	IfStatement	if ( persistent_script -> full_path )		16786	2					
ANR	17822	Condition	persistent_script -> full_path	1821:6:55491:55518	16786	0	True				
ANR	17823	PtrMemberAccess	persistent_script -> full_path		16786	0					
ANR	17824	Identifier	persistent_script		16786	0					
ANR	17825	Identifier	full_path		16786	1					
ANR	17826	CompoundStatement		208:36:7194:7194	16786	1					
ANR	17827	IfStatement	if ( ! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE ) )		16786	0					
ANR	17828	Condition	! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )	1822:7:55530:55942	16786	0	True				
ANR	17829	OrExpression	! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16786	0		||			
ANR	17830	UnaryOperationExpression	! EG ( current_execute_data )		16786	0					
ANR	17831	UnaryOperator	!		16786	0					
ANR	17832	CallExpression	EG ( current_execute_data )		16786	1					
ANR	17833	Callee	EG		16786	0					
ANR	17834	Identifier	EG		16786	0					
ANR	17835	ArgumentList	current_execute_data		16786	1					
ANR	17836	Argument	current_execute_data		16786	0					
ANR	17837	Identifier	current_execute_data		16786	0					
ANR	17838	OrExpression	! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16786	1		||			
ANR	17839	UnaryOperationExpression	! EG ( current_execute_data ) -> opline		16786	0					
ANR	17840	UnaryOperator	!		16786	0					
ANR	17841	PtrMemberAccess	EG ( current_execute_data ) -> opline		16786	1					
ANR	17842	CallExpression	EG ( current_execute_data )		16786	0					
ANR	17843	Callee	EG		16786	0					
ANR	17844	Identifier	EG		16786	0					
ANR	17845	ArgumentList	current_execute_data		16786	1					
ANR	17846	Argument	current_execute_data		16786	0					
ANR	17847	Identifier	current_execute_data		16786	0					
ANR	17848	Identifier	opline		16786	1					
ANR	17849	OrExpression	! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16786	1		||			
ANR	17850	UnaryOperationExpression	! EG ( current_execute_data ) -> func		16786	0					
ANR	17851	UnaryOperator	!		16786	0					
ANR	17852	PtrMemberAccess	EG ( current_execute_data ) -> func		16786	1					
ANR	17853	CallExpression	EG ( current_execute_data )		16786	0					
ANR	17854	Callee	EG		16786	0					
ANR	17855	Identifier	EG		16786	0					
ANR	17856	ArgumentList	current_execute_data		16786	1					
ANR	17857	Argument	current_execute_data		16786	0					
ANR	17858	Identifier	current_execute_data		16786	0					
ANR	17859	Identifier	func		16786	1					
ANR	17860	OrExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16786	1		||			
ANR	17861	UnaryOperationExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		16786	0					
ANR	17862	UnaryOperator	!		16786	0					
ANR	17863	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		16786	1					
ANR	17864	Callee	ZEND_USER_CODE		16786	0					
ANR	17865	Identifier	ZEND_USER_CODE		16786	0					
ANR	17866	ArgumentList	EG ( current_execute_data ) -> func -> common . type		16786	1					
ANR	17867	Argument	EG ( current_execute_data ) -> func -> common . type		16786	0					
ANR	17868	MemberAccess	EG ( current_execute_data ) -> func -> common . type		16786	0					
ANR	17869	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		16786	0					
ANR	17870	PtrMemberAccess	EG ( current_execute_data ) -> func		16786	0					
ANR	17871	CallExpression	EG ( current_execute_data )		16786	0					
ANR	17872	Callee	EG		16786	0					
ANR	17873	Identifier	EG		16786	0					
ANR	17874	ArgumentList	current_execute_data		16786	1					
ANR	17875	Argument	current_execute_data		16786	0					
ANR	17876	Identifier	current_execute_data		16786	0					
ANR	17877	Identifier	func		16786	1					
ANR	17878	Identifier	common		16786	1					
ANR	17879	Identifier	type		16786	1					
ANR	17880	OrExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		16786	1		||			
ANR	17881	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		16786	0		!=			
ANR	17882	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		16786	0					
ANR	17883	PtrMemberAccess	EG ( current_execute_data ) -> opline		16786	0					
ANR	17884	CallExpression	EG ( current_execute_data )		16786	0					
ANR	17885	Callee	EG		16786	0					
ANR	17886	Identifier	EG		16786	0					
ANR	17887	ArgumentList	current_execute_data		16786	1					
ANR	17888	Argument	current_execute_data		16786	0					
ANR	17889	Identifier	current_execute_data		16786	0					
ANR	17890	Identifier	opline		16786	1					
ANR	17891	Identifier	opcode		16786	1					
ANR	17892	Identifier	ZEND_INCLUDE_OR_EVAL		16786	1					
ANR	17893	AndExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE		16786	1		&&			
ANR	17894	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE		16786	0		!=			
ANR	17895	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		16786	0					
ANR	17896	PtrMemberAccess	EG ( current_execute_data ) -> opline		16786	0					
ANR	17897	CallExpression	EG ( current_execute_data )		16786	0					
ANR	17898	Callee	EG		16786	0					
ANR	17899	Identifier	EG		16786	0					
ANR	17900	ArgumentList	current_execute_data		16786	1					
ANR	17901	Argument	current_execute_data		16786	0					
ANR	17902	Identifier	current_execute_data		16786	0					
ANR	17903	Identifier	opline		16786	1					
ANR	17904	Identifier	extended_value		16786	1					
ANR	17905	Identifier	ZEND_INCLUDE_ONCE		16786	1					
ANR	17906	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE		16786	1		!=			
ANR	17907	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		16786	0					
ANR	17908	PtrMemberAccess	EG ( current_execute_data ) -> opline		16786	0					
ANR	17909	CallExpression	EG ( current_execute_data )		16786	0					
ANR	17910	Callee	EG		16786	0					
ANR	17911	Identifier	EG		16786	0					
ANR	17912	ArgumentList	current_execute_data		16786	1					
ANR	17913	Argument	current_execute_data		16786	0					
ANR	17914	Identifier	current_execute_data		16786	0					
ANR	17915	Identifier	opline		16786	1					
ANR	17916	Identifier	extended_value		16786	1					
ANR	17917	Identifier	ZEND_REQUIRE_ONCE		16786	1					
ANR	17918	CompoundStatement		214:80:7618:7618	16786	1					
ANR	17919	IfStatement	"if ( zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL )"		16786	0					
ANR	17920	Condition	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL"	1828:8:55955:56040	16786	0	True				
ANR	17921	EqualityExpression	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL"		16786	0		!=			
ANR	17922	CallExpression	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path )"		16786	0					
ANR	17923	Callee	zend_hash_add_empty_element		16786	0					
ANR	17924	Identifier	zend_hash_add_empty_element		16786	0					
ANR	17925	ArgumentList	& EG ( included_files )		16786	1					
ANR	17926	Argument	& EG ( included_files )		16786	0					
ANR	17927	UnaryOperationExpression	& EG ( included_files )		16786	0					
ANR	17928	UnaryOperator	&		16786	0					
ANR	17929	CallExpression	EG ( included_files )		16786	1					
ANR	17930	Callee	EG		16786	0					
ANR	17931	Identifier	EG		16786	0					
ANR	17932	ArgumentList	included_files		16786	1					
ANR	17933	Argument	included_files		16786	0					
ANR	17934	Identifier	included_files		16786	0					
ANR	17935	Argument	persistent_script -> full_path		16786	1					
ANR	17936	PtrMemberAccess	persistent_script -> full_path		16786	0					
ANR	17937	Identifier	persistent_script		16786	0					
ANR	17938	Identifier	full_path		16786	1					
ANR	17939	Identifier	NULL		16786	1					
ANR	17940	CompoundStatement		215:96:7716:7716	16786	1					
ANR	17941	IfStatement	if ( persistent_script -> is_phar )		16786	0					
ANR	17942	Condition	persistent_script -> is_phar	1830:9:56114:56139	16786	0	True				
ANR	17943	PtrMemberAccess	persistent_script -> is_phar		16786	0					
ANR	17944	Identifier	persistent_script		16786	0					
ANR	17945	Identifier	is_phar		16786	1					
ANR	17946	CompoundStatement		219:6:7853:7934	16786	1					
ANR	17947	IdentifierDeclStatement	php_stream_statbuf ssb ;	1831:6:56150:56172	16786	0	True				
ANR	17948	IdentifierDecl	ssb		16786	0					
ANR	17949	IdentifierDeclType	php_stream_statbuf		16786	0					
ANR	17950	Identifier	ssb		16786	1					
ANR	17951	IdentifierDeclStatement	"char * fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) ) ;"	1832:6:56180:56261	16786	1	True				
ANR	17952	IdentifierDecl	"* fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		16786	0					
ANR	17953	IdentifierDeclType	char *		16786	0					
ANR	17954	Identifier	fname		16786	1					
ANR	17955	AssignmentExpression	"* fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		16786	2		=			
ANR	17956	Identifier	fname		16786	0					
ANR	17957	CallExpression	"emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		16786	1					
ANR	17958	Callee	emalloc		16786	0					
ANR	17959	Identifier	emalloc		16786	0					
ANR	17960	ArgumentList	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		16786	1					
ANR	17961	Argument	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		16786	0					
ANR	17962	AdditiveExpression	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		16786	0		+			
ANR	17963	SizeofExpression	"sizeof ( ""phar://"" )"		16786	0					
ANR	17964	Sizeof	sizeof		16786	0					
ANR	17965	PrimaryExpression	"""phar://"""		16786	1					
ANR	17966	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		16786	1					
ANR	17967	Callee	ZSTR_LEN		16786	0					
ANR	17968	Identifier	ZSTR_LEN		16786	0					
ANR	17969	ArgumentList	persistent_script -> full_path		16786	1					
ANR	17970	Argument	persistent_script -> full_path		16786	0					
ANR	17971	PtrMemberAccess	persistent_script -> full_path		16786	0					
ANR	17972	Identifier	persistent_script		16786	0					
ANR	17973	Identifier	full_path		16786	1					
ANR	17974	ExpressionStatement	"memcpy ( fname , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"	1834:6:56270:56317	16786	2	True				
ANR	17975	CallExpression	"memcpy ( fname , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"		16786	0					
ANR	17976	Callee	memcpy		16786	0					
ANR	17977	Identifier	memcpy		16786	0					
ANR	17978	ArgumentList	fname		16786	1					
ANR	17979	Argument	fname		16786	0					
ANR	17980	Identifier	fname		16786	0					
ANR	17981	Argument	"""phar://"""		16786	1					
ANR	17982	PrimaryExpression	"""phar://"""		16786	0					
ANR	17983	Argument	"sizeof ( ""phar://"" ) - 1"		16786	2					
ANR	17984	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		16786	0		-			
ANR	17985	SizeofExpression	"sizeof ( ""phar://"" )"		16786	0					
ANR	17986	Sizeof	sizeof		16786	0					
ANR	17987	PrimaryExpression	"""phar://"""		16786	1					
ANR	17988	PrimaryExpression	1		16786	1					
ANR	17989	ExpressionStatement	"memcpy ( fname + sizeof ( ""phar://"" ) - 1 , ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_LEN ( persistent_script -> full_path ) + 1 )"	1835:6:56325:56446	16786	3	True				
ANR	17990	CallExpression	"memcpy ( fname + sizeof ( ""phar://"" ) - 1 , ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_LEN ( persistent_script -> full_path ) + 1 )"		16786	0					
ANR	17991	Callee	memcpy		16786	0					
ANR	17992	Identifier	memcpy		16786	0					
ANR	17993	ArgumentList	"fname + sizeof ( ""phar://"" ) - 1"		16786	1					
ANR	17994	Argument	"fname + sizeof ( ""phar://"" ) - 1"		16786	0					
ANR	17995	AdditiveExpression	"fname + sizeof ( ""phar://"" ) - 1"		16786	0		+			
ANR	17996	Identifier	fname		16786	0					
ANR	17997	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		16786	1		-			
ANR	17998	SizeofExpression	"sizeof ( ""phar://"" )"		16786	0					
ANR	17999	Sizeof	sizeof		16786	0					
ANR	18000	PrimaryExpression	"""phar://"""		16786	1					
ANR	18001	PrimaryExpression	1		16786	1					
ANR	18002	Argument	ZSTR_VAL ( persistent_script -> full_path )		16786	1					
ANR	18003	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		16786	0					
ANR	18004	Callee	ZSTR_VAL		16786	0					
ANR	18005	Identifier	ZSTR_VAL		16786	0					
ANR	18006	ArgumentList	persistent_script -> full_path		16786	1					
ANR	18007	Argument	persistent_script -> full_path		16786	0					
ANR	18008	PtrMemberAccess	persistent_script -> full_path		16786	0					
ANR	18009	Identifier	persistent_script		16786	0					
ANR	18010	Identifier	full_path		16786	1					
ANR	18011	Argument	ZSTR_LEN ( persistent_script -> full_path ) + 1		16786	2					
ANR	18012	AdditiveExpression	ZSTR_LEN ( persistent_script -> full_path ) + 1		16786	0		+			
ANR	18013	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		16786	0					
ANR	18014	Callee	ZSTR_LEN		16786	0					
ANR	18015	Identifier	ZSTR_LEN		16786	0					
ANR	18016	ArgumentList	persistent_script -> full_path		16786	1					
ANR	18017	Argument	persistent_script -> full_path		16786	0					
ANR	18018	PtrMemberAccess	persistent_script -> full_path		16786	0					
ANR	18019	Identifier	persistent_script		16786	0					
ANR	18020	Identifier	full_path		16786	1					
ANR	18021	PrimaryExpression	1		16786	1					
ANR	18022	ExpressionStatement	"php_stream_stat_path ( fname , & ssb )"	1836:6:56454:56487	16786	4	True				
ANR	18023	CallExpression	"php_stream_stat_path ( fname , & ssb )"		16786	0					
ANR	18024	Callee	php_stream_stat_path		16786	0					
ANR	18025	Identifier	php_stream_stat_path		16786	0					
ANR	18026	ArgumentList	fname		16786	1					
ANR	18027	Argument	fname		16786	0					
ANR	18028	Identifier	fname		16786	0					
ANR	18029	Argument	& ssb		16786	1					
ANR	18030	UnaryOperationExpression	& ssb		16786	0					
ANR	18031	UnaryOperator	&		16786	0					
ANR	18032	Identifier	ssb		16786	1					
ANR	18033	ExpressionStatement	efree ( fname )	1837:6:56495:56507	16786	5	True				
ANR	18034	CallExpression	efree ( fname )		16786	0					
ANR	18035	Callee	efree		16786	0					
ANR	18036	Identifier	efree		16786	0					
ANR	18037	ArgumentList	fname		16786	1					
ANR	18038	Argument	fname		16786	0					
ANR	18039	Identifier	fname		16786	0					
ANR	18040	ExpressionStatement	zend_file_handle_dtor ( file_handle )	1842:2:56533:56567	16786	3	True				
ANR	18041	CallExpression	zend_file_handle_dtor ( file_handle )		16786	0					
ANR	18042	Callee	zend_file_handle_dtor		16786	0					
ANR	18043	Identifier	zend_file_handle_dtor		16786	0					
ANR	18044	ArgumentList	file_handle		16786	1					
ANR	18045	Argument	file_handle		16786	0					
ANR	18046	Identifier	file_handle		16786	0					
ANR	18047	ExpressionStatement	from_shared_memory = 1	1843:2:56571:56593	16786	4	True				
ANR	18048	AssignmentExpression	from_shared_memory = 1		16786	0		=			
ANR	18049	Identifier	from_shared_memory		16786	0					
ANR	18050	PrimaryExpression	1		16786	1					
ANR	18051	ExpressionStatement	persistent_script -> dynamic_members . last_used = ZCG ( request_time )	1846:1:56600:56664	16786	15	True				
ANR	18052	AssignmentExpression	persistent_script -> dynamic_members . last_used = ZCG ( request_time )		16786	0		=			
ANR	18053	MemberAccess	persistent_script -> dynamic_members . last_used		16786	0					
ANR	18054	PtrMemberAccess	persistent_script -> dynamic_members		16786	0					
ANR	18055	Identifier	persistent_script		16786	0					
ANR	18056	Identifier	dynamic_members		16786	1					
ANR	18057	Identifier	last_used		16786	1					
ANR	18058	CallExpression	ZCG ( request_time )		16786	1					
ANR	18059	Callee	ZCG		16786	0					
ANR	18060	Identifier	ZCG		16786	0					
ANR	18061	ArgumentList	request_time		16786	1					
ANR	18062	Argument	request_time		16786	0					
ANR	18063	Identifier	request_time		16786	0					
ANR	18064	ExpressionStatement	SHM_PROTECT ( )	1848:1:56668:56681	16786	16	True				
ANR	18065	CallExpression	SHM_PROTECT ( )		16786	0					
ANR	18066	Callee	SHM_PROTECT		16786	0					
ANR	18067	Identifier	SHM_PROTECT		16786	0					
ANR	18068	ArgumentList			16786	1					
ANR	18069	IfStatement	if ( persistent_script -> ping_auto_globals_mask )		16786	17					
ANR	18070	Condition	persistent_script -> ping_auto_globals_mask	1851:8:56761:56801	16786	0	True				
ANR	18071	PtrMemberAccess	persistent_script -> ping_auto_globals_mask		16786	0					
ANR	18072	Identifier	persistent_script		16786	0					
ANR	18073	Identifier	ping_auto_globals_mask		16786	1					
ANR	18074	CompoundStatement		238:51:8477:8477	16786	1					
ANR	18075	ExpressionStatement	zend_accel_set_auto_globals ( persistent_script -> ping_auto_globals_mask )	1852:2:56808:56878	16786	0	True				
ANR	18076	CallExpression	zend_accel_set_auto_globals ( persistent_script -> ping_auto_globals_mask )		16786	0					
ANR	18077	Callee	zend_accel_set_auto_globals		16786	0					
ANR	18078	Identifier	zend_accel_set_auto_globals		16786	0					
ANR	18079	ArgumentList	persistent_script -> ping_auto_globals_mask		16786	1					
ANR	18080	Argument	persistent_script -> ping_auto_globals_mask		16786	0					
ANR	18081	PtrMemberAccess	persistent_script -> ping_auto_globals_mask		16786	0					
ANR	18082	Identifier	persistent_script		16786	0					
ANR	18083	Identifier	ping_auto_globals_mask		16786	1					
ANR	18084	ReturnStatement	"return zend_accel_load_script ( persistent_script , from_shared_memory ) ;"	1855:1:56885:56953	16786	18	True				
ANR	18085	CallExpression	"zend_accel_load_script ( persistent_script , from_shared_memory )"		16786	0					
ANR	18086	Callee	zend_accel_load_script		16786	0					
ANR	18087	Identifier	zend_accel_load_script		16786	0					
ANR	18088	ArgumentList	persistent_script		16786	1					
ANR	18089	Argument	persistent_script		16786	0					
ANR	18090	Identifier	persistent_script		16786	0					
ANR	18091	Argument	from_shared_memory		16786	1					
ANR	18092	Identifier	from_shared_memory		16786	0					
ANR	18093	ReturnType	zend_op_array *		16786	1					
ANR	18094	Identifier	persistent_compile_file		16786	2					
ANR	18095	ParameterList	"zend_file_handle * file_handle , int type"		16786	3					
ANR	18096	Parameter	zend_file_handle * file_handle	1613:39:48285:48313	16786	0	True				
ANR	18097	ParameterType	zend_file_handle *		16786	0					
ANR	18098	Identifier	file_handle		16786	1					
ANR	18099	Parameter	int type	1613:70:48316:48323	16786	1	True				
ANR	18100	ParameterType	int		16786	0					
ANR	18101	Identifier	type		16786	1					
ANR	18102	CFGEntryNode	ENTRY		16786		True				
ANR	18103	CFGExitNode	EXIT		16786		True				
ANR	18104	Symbol	reason		16786						
ANR	18105	Symbol	ssb		16786						
ANR	18106	Symbol	EG ( current_execute_data ) -> func -> common . type		16786						
ANR	18107	Symbol	type		16786						
ANR	18108	Symbol	* * EG		16786						
ANR	18109	Symbol	new_const_num		16786						
ANR	18110	Symbol	from_shared_memory		16786						
ANR	18111	Symbol	persistent_script -> full_path		16786						
ANR	18112	Symbol	ZCSG		16786						
ANR	18113	Symbol	persistent_script -> timestamp		16786						
ANR	18114	Symbol	& from_shared_memory		16786						
ANR	18115	Symbol	zend_file_cache_script_load		16786						
ANR	18116	Symbol	fname		16786						
ANR	18117	Symbol	memory_exhausted		16786						
ANR	18118	Symbol	* EG ( current_execute_data ) -> opline		16786						
ANR	18119	Symbol	* EG ( current_execute_data ) -> func		16786						
ANR	18120	Symbol	file_handle		16786						
ANR	18121	Symbol	cache_opline		16786						
ANR	18122	Symbol	persistent_script -> corrupted		16786						
ANR	18123	Symbol	persistent_script -> dynamic_members . hits		16786						
ANR	18124	Symbol	& ssb		16786						
ANR	18125	Symbol	bucket		16786						
ANR	18126	Symbol	& ZCSG		16786						
ANR	18127	Symbol	file_handle -> filename		16786						
ANR	18128	Symbol	* bucket		16786						
ANR	18129	Symbol	ZMSG_FAILED_REQUIRE_FOPEN		16786						
ANR	18130	Symbol	ZEND_USER_CODE		16786						
ANR	18131	Symbol	opcache_compile_file		16786						
ANR	18132	Symbol	ZCG ( accel_directives ) . file_cache_only		16786						
ANR	18133	Symbol	hash		16786						
ANR	18134	Symbol	ZCG		16786						
ANR	18135	Symbol	persistent_script -> dynamic_members . last_used		16786						
ANR	18136	Symbol	accel_startup_ok		16786						
ANR	18137	Symbol	zend_accel_hash_find_entry		16786						
ANR	18138	Symbol	wasted_shared_memory		16786						
ANR	18139	Symbol	accelerator_orig_compile_file		16786						
ANR	18140	Symbol	* EG		16786						
ANR	18141	Symbol	EG ( current_execute_data ) -> opline		16786						
ANR	18142	Symbol	& op_array		16786						
ANR	18143	Symbol	enabled		16786						
ANR	18144	Symbol	* file_handle		16786						
ANR	18145	Symbol	file_handle -> type		16786						
ANR	18146	Symbol	accelerator_orig_zend_stream_open_function		16786						
ANR	18147	Symbol	persistent_script -> is_phar		16786						
ANR	18148	Symbol	SG		16786						
ANR	18149	Symbol	ZCG ( accel_directives ) . consistency_checks		16786						
ANR	18150	Symbol	misses		16786						
ANR	18151	Symbol	key_length		16786						
ANR	18152	Symbol	included_files		16786						
ANR	18153	Symbol	key		16786						
ANR	18154	Symbol	key_len		16786						
ANR	18155	Symbol	ZEND_INCLUDE_ONCE		16786						
ANR	18156	Symbol	validate_timestamp_and_record		16786						
ANR	18157	Symbol	ZEND_REQUIRE_ONCE		16786						
ANR	18158	Symbol	EG ( current_execute_data ) -> opline -> opcode		16786						
ANR	18159	Symbol	persistent_script		16786						
ANR	18160	Symbol	FAILURE		16786						
ANR	18161	Symbol	hits		16786						
ANR	18162	Symbol	EG ( current_execute_data ) -> func -> common		16786						
ANR	18163	Symbol	ZEND_REQUIRE		16786						
ANR	18164	Symbol	zend_accel_hash_str_find		16786						
ANR	18165	Symbol	accel_directives		16786						
ANR	18166	Symbol	ZCG ( accel_directives ) . revalidate_path		16786						
ANR	18167	Symbol	op_array		16786						
ANR	18168	Symbol	persistent_script -> ping_auto_globals_mask		16786						
ANR	18169	Symbol	ACCEL_RESTART_OOM		16786						
ANR	18170	Symbol	EG ( current_execute_data ) -> func		16786						
ANR	18171	Symbol	current_execute_data		16786						
ANR	18172	Symbol	strlen		16786						
ANR	18173	Symbol	& key_length		16786						
ANR	18174	Symbol	zend_constants		16786						
ANR	18175	Symbol	zend_hash_add_empty_element		16786						
ANR	18176	Symbol	accel_make_persistent_key		16786						
ANR	18177	Symbol	EG		16786						
ANR	18178	Symbol	NULL		16786						
ANR	18179	Symbol	SG ( request_info ) . path_translated		16786						
ANR	18180	Symbol	ZMSG_FAILED_INCLUDE_FOPEN		16786						
ANR	18181	Symbol	restart_pending		16786						
ANR	18182	Symbol	* persistent_script		16786						
ANR	18183	Symbol	file_handle -> opened_path		16786						
ANR	18184	Symbol	persistent_script -> dynamic_members . memory_consumption		16786						
ANR	18185	Symbol	persistent_script -> dynamic_members . checksum		16786						
ANR	18186	Symbol	file_cache_compile_file		16786						
ANR	18187	Symbol	ZEND_HANDLE_FILENAME		16786						
ANR	18188	Symbol	zend_accel_script_checksum		16786						
ANR	18189	Symbol	accel_restart_is_active		16786						
ANR	18190	Symbol	ZCG ( accel_directives ) . file_cache		16786						
ANR	18191	Symbol	old_const_num		16786						
ANR	18192	Symbol	ACCEL_RESTART_HASH		16786						
ANR	18193	Symbol	ZCG ( accel_directives ) . validate_timestamps		16786						
ANR	18194	Symbol	cache_script_in_shared_memory		16786						
ANR	18195	Symbol	restart_in_progress		16786						
ANR	18196	Symbol	cache_persistent_script		16786						
ANR	18197	Symbol	& EG		16786						
ANR	18198	Symbol	EG ( current_execute_data ) -> opline -> extended_value		16786						
ANR	18199	Symbol	emalloc		16786						
ANR	18200	Symbol	request_time		16786						
ANR	18201	Symbol	ZSMMG		16786						
ANR	18202	Symbol	checksum		16786						
ANR	18203	Symbol	ACCEL_LOG_INFO		16786						
ANR	18204	Symbol	ZEND_INCLUDE_OR_EVAL		16786						
ANR	18205	Symbol	zend_accel_hash_is_full		16786						
ANR	18206	Symbol	zend_accel_load_script		16786						
ANR	18207	Symbol	persistent_script -> dynamic_members		16786						
ANR	18208	Symbol	bucket -> data		16786						
ANR	18209	Symbol	zend_hash_next_free_element		16786						
ANR	18210	Symbol	accelerator_enabled		16786						
ANR	18211	Symbol	ZSTR_VAL		16786						
ANR	18212	Symbol	request_info		16786						
ANR	18213	Symbol	ZSTR_LEN		16786						
ANR	18214	Symbol	counted		16786						
ANR	18215	Function	persistent_stream_open_function	1859:0:57026:57980							
ANR	18216	FunctionDef	"persistent_stream_open_function (const char * filename , zend_file_handle * handle)"		18215	0					
ANR	18217	CompoundStatement		1860:0:57117:57980	18215	0					
ANR	18218	IfStatement	if ( ZCG ( cache_persistent_script ) )		18215	0					
ANR	18219	Condition	ZCG ( cache_persistent_script )	1861:5:57124:57151	18215	0	True				
ANR	18220	CallExpression	ZCG ( cache_persistent_script )		18215	0					
ANR	18221	Callee	ZCG		18215	0					
ANR	18222	Identifier	ZCG		18215	0					
ANR	18223	ArgumentList	cache_persistent_script		18215	1					
ANR	18224	Argument	cache_persistent_script		18215	0					
ANR	18225	Identifier	cache_persistent_script		18215	0					
ANR	18226	CompoundStatement		2:35:36:36	18215	1					
ANR	18227	IfStatement	if ( ( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline ) )		18215	0					
ANR	18228	Condition	( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline )	1863:6:57239:57567	18215	0	True				
ANR	18229	OrExpression	( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline )		18215	0		||			
ANR	18230	AndExpression	! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL		18215	0		&&			
ANR	18231	UnaryOperationExpression	! EG ( current_execute_data )		18215	0					
ANR	18232	UnaryOperator	!		18215	0					
ANR	18233	CallExpression	EG ( current_execute_data )		18215	1					
ANR	18234	Callee	EG		18215	0					
ANR	18235	Identifier	EG		18215	0					
ANR	18236	ArgumentList	current_execute_data		18215	1					
ANR	18237	Argument	current_execute_data		18215	0					
ANR	18238	Identifier	current_execute_data		18215	0					
ANR	18239	AndExpression	filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL		18215	1		&&			
ANR	18240	EqualityExpression	filename == SG ( request_info ) . path_translated		18215	0		==			
ANR	18241	Identifier	filename		18215	0					
ANR	18242	MemberAccess	SG ( request_info ) . path_translated		18215	1					
ANR	18243	CallExpression	SG ( request_info )		18215	0					
ANR	18244	Callee	SG		18215	0					
ANR	18245	Identifier	SG		18215	0					
ANR	18246	ArgumentList	request_info		18215	1					
ANR	18247	Argument	request_info		18215	0					
ANR	18248	Identifier	request_info		18215	0					
ANR	18249	Identifier	path_translated		18215	1					
ANR	18250	EqualityExpression	ZCG ( cache_opline ) == NULL		18215	1		==			
ANR	18251	CallExpression	ZCG ( cache_opline )		18215	0					
ANR	18252	Callee	ZCG		18215	0					
ANR	18253	Identifier	ZCG		18215	0					
ANR	18254	ArgumentList	cache_opline		18215	1					
ANR	18255	Argument	cache_opline		18215	0					
ANR	18256	Identifier	cache_opline		18215	0					
ANR	18257	Identifier	NULL		18215	1					
ANR	18258	AndExpression	EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		18215	1		&&			
ANR	18259	CallExpression	EG ( current_execute_data )		18215	0					
ANR	18260	Callee	EG		18215	0					
ANR	18261	Identifier	EG		18215	0					
ANR	18262	ArgumentList	current_execute_data		18215	1					
ANR	18263	Argument	current_execute_data		18215	0					
ANR	18264	Identifier	current_execute_data		18215	0					
ANR	18265	AndExpression	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		18215	1		&&			
ANR	18266	PtrMemberAccess	EG ( current_execute_data ) -> func		18215	0					
ANR	18267	CallExpression	EG ( current_execute_data )		18215	0					
ANR	18268	Callee	EG		18215	0					
ANR	18269	Identifier	EG		18215	0					
ANR	18270	ArgumentList	current_execute_data		18215	1					
ANR	18271	Argument	current_execute_data		18215	0					
ANR	18272	Identifier	current_execute_data		18215	0					
ANR	18273	Identifier	func		18215	1					
ANR	18274	AndExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		18215	1		&&			
ANR	18275	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		18215	0					
ANR	18276	Callee	ZEND_USER_CODE		18215	0					
ANR	18277	Identifier	ZEND_USER_CODE		18215	0					
ANR	18278	ArgumentList	EG ( current_execute_data ) -> func -> common . type		18215	1					
ANR	18279	Argument	EG ( current_execute_data ) -> func -> common . type		18215	0					
ANR	18280	MemberAccess	EG ( current_execute_data ) -> func -> common . type		18215	0					
ANR	18281	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		18215	0					
ANR	18282	PtrMemberAccess	EG ( current_execute_data ) -> func		18215	0					
ANR	18283	CallExpression	EG ( current_execute_data )		18215	0					
ANR	18284	Callee	EG		18215	0					
ANR	18285	Identifier	EG		18215	0					
ANR	18286	ArgumentList	current_execute_data		18215	1					
ANR	18287	Argument	current_execute_data		18215	0					
ANR	18288	Identifier	current_execute_data		18215	0					
ANR	18289	Identifier	func		18215	1					
ANR	18290	Identifier	common		18215	1					
ANR	18291	Identifier	type		18215	1					
ANR	18292	EqualityExpression	ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		18215	1		==			
ANR	18293	CallExpression	ZCG ( cache_opline )		18215	0					
ANR	18294	Callee	ZCG		18215	0					
ANR	18295	Identifier	ZCG		18215	0					
ANR	18296	ArgumentList	cache_opline		18215	1					
ANR	18297	Argument	cache_opline		18215	0					
ANR	18298	Identifier	cache_opline		18215	0					
ANR	18299	PtrMemberAccess	EG ( current_execute_data ) -> opline		18215	1					
ANR	18300	CallExpression	EG ( current_execute_data )		18215	0					
ANR	18301	Callee	EG		18215	0					
ANR	18302	Identifier	EG		18215	0					
ANR	18303	ArgumentList	current_execute_data		18215	1					
ANR	18304	Argument	current_execute_data		18215	0					
ANR	18305	Identifier	current_execute_data		18215	0					
ANR	18306	Identifier	opline		18215	1					
ANR	18307	CompoundStatement		10:63:452:452	18215	1					
ANR	18308	ExpressionStatement	handle -> filename = ( char * ) filename	1872:3:57627:57661	18215	0	True				
ANR	18309	AssignmentExpression	handle -> filename = ( char * ) filename		18215	0		=			
ANR	18310	PtrMemberAccess	handle -> filename		18215	0					
ANR	18311	Identifier	handle		18215	0					
ANR	18312	Identifier	filename		18215	1					
ANR	18313	CastExpression	( char * ) filename		18215	1					
ANR	18314	CastTarget	char *		18215	0					
ANR	18315	Identifier	filename		18215	1					
ANR	18316	ExpressionStatement	handle -> free_filename = 0	1873:3:57666:57691	18215	1	True				
ANR	18317	AssignmentExpression	handle -> free_filename = 0		18215	0		=			
ANR	18318	PtrMemberAccess	handle -> free_filename		18215	0					
ANR	18319	Identifier	handle		18215	0					
ANR	18320	Identifier	free_filename		18215	1					
ANR	18321	PrimaryExpression	0		18215	1					
ANR	18322	ExpressionStatement	handle -> opened_path = zend_string_copy ( ZCG ( cache_persistent_script ) -> full_path )	1874:3:57696:57775	18215	2	True				
ANR	18323	AssignmentExpression	handle -> opened_path = zend_string_copy ( ZCG ( cache_persistent_script ) -> full_path )		18215	0		=			
ANR	18324	PtrMemberAccess	handle -> opened_path		18215	0					
ANR	18325	Identifier	handle		18215	0					
ANR	18326	Identifier	opened_path		18215	1					
ANR	18327	CallExpression	zend_string_copy ( ZCG ( cache_persistent_script ) -> full_path )		18215	1					
ANR	18328	Callee	zend_string_copy		18215	0					
ANR	18329	Identifier	zend_string_copy		18215	0					
ANR	18330	ArgumentList	ZCG ( cache_persistent_script ) -> full_path		18215	1					
ANR	18331	Argument	ZCG ( cache_persistent_script ) -> full_path		18215	0					
ANR	18332	PtrMemberAccess	ZCG ( cache_persistent_script ) -> full_path		18215	0					
ANR	18333	CallExpression	ZCG ( cache_persistent_script )		18215	0					
ANR	18334	Callee	ZCG		18215	0					
ANR	18335	Identifier	ZCG		18215	0					
ANR	18336	ArgumentList	cache_persistent_script		18215	1					
ANR	18337	Argument	cache_persistent_script		18215	0					
ANR	18338	Identifier	cache_persistent_script		18215	0					
ANR	18339	Identifier	full_path		18215	1					
ANR	18340	ExpressionStatement	handle -> type = ZEND_HANDLE_FILENAME	1875:3:57780:57815	18215	3	True				
ANR	18341	AssignmentExpression	handle -> type = ZEND_HANDLE_FILENAME		18215	0		=			
ANR	18342	PtrMemberAccess	handle -> type		18215	0					
ANR	18343	Identifier	handle		18215	0					
ANR	18344	Identifier	type		18215	1					
ANR	18345	Identifier	ZEND_HANDLE_FILENAME		18215	1					
ANR	18346	ReturnStatement	return SUCCESS ;	1876:3:57820:57834	18215	4	True				
ANR	18347	Identifier	SUCCESS		18215	0					
ANR	18348	ExpressionStatement	ZCG ( cache_opline ) = NULL	1878:2:57842:57866	18215	1	True				
ANR	18349	AssignmentExpression	ZCG ( cache_opline ) = NULL		18215	0		=			
ANR	18350	CallExpression	ZCG ( cache_opline )		18215	0					
ANR	18351	Callee	ZCG		18215	0					
ANR	18352	Identifier	ZCG		18215	0					
ANR	18353	ArgumentList	cache_opline		18215	1					
ANR	18354	Argument	cache_opline		18215	0					
ANR	18355	Identifier	cache_opline		18215	0					
ANR	18356	Identifier	NULL		18215	1					
ANR	18357	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1879:2:57870:57905	18215	2	True				
ANR	18358	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		18215	0		=			
ANR	18359	CallExpression	ZCG ( cache_persistent_script )		18215	0					
ANR	18360	Callee	ZCG		18215	0					
ANR	18361	Identifier	ZCG		18215	0					
ANR	18362	ArgumentList	cache_persistent_script		18215	1					
ANR	18363	Argument	cache_persistent_script		18215	0					
ANR	18364	Identifier	cache_persistent_script		18215	0					
ANR	18365	Identifier	NULL		18215	1					
ANR	18366	ReturnStatement	"return accelerator_orig_zend_stream_open_function ( filename , handle ) ;"	1881:1:57911:57978	18215	1	True				
ANR	18367	CallExpression	"accelerator_orig_zend_stream_open_function ( filename , handle )"		18215	0					
ANR	18368	Callee	accelerator_orig_zend_stream_open_function		18215	0					
ANR	18369	Identifier	accelerator_orig_zend_stream_open_function		18215	0					
ANR	18370	ArgumentList	filename		18215	1					
ANR	18371	Argument	filename		18215	0					
ANR	18372	Identifier	filename		18215	0					
ANR	18373	Argument	handle		18215	1					
ANR	18374	Identifier	handle		18215	0					
ANR	18375	ReturnType	static int		18215	1					
ANR	18376	Identifier	persistent_stream_open_function		18215	2					
ANR	18377	ParameterList	"const char * filename , zend_file_handle * handle"		18215	3					
ANR	18378	Parameter	const char * filename	1859:43:57069:57088	18215	0	True				
ANR	18379	ParameterType	const char *		18215	0					
ANR	18380	Identifier	filename		18215	1					
ANR	18381	Parameter	zend_file_handle * handle	1859:65:57091:57114	18215	1	True				
ANR	18382	ParameterType	zend_file_handle *		18215	0					
ANR	18383	Identifier	handle		18215	1					
ANR	18384	CFGEntryNode	ENTRY		18215		True				
ANR	18385	CFGExitNode	EXIT		18215		True				
ANR	18386	Symbol	ZCG ( cache_persistent_script ) -> full_path		18215						
ANR	18387	Symbol	EG ( current_execute_data ) -> func		18215						
ANR	18388	Symbol	EG ( current_execute_data ) -> func -> common . type		18215						
ANR	18389	Symbol	current_execute_data		18215						
ANR	18390	Symbol	* EG		18215						
ANR	18391	Symbol	* * EG		18215						
ANR	18392	Symbol	EG ( current_execute_data ) -> opline		18215						
ANR	18393	Symbol	cache_persistent_script		18215						
ANR	18394	Symbol	handle -> free_filename		18215						
ANR	18395	Symbol	accelerator_orig_zend_stream_open_function		18215						
ANR	18396	Symbol	SG		18215						
ANR	18397	Symbol	* ZCG		18215						
ANR	18398	Symbol	handle -> type		18215						
ANR	18399	Symbol	EG		18215						
ANR	18400	Symbol	NULL		18215						
ANR	18401	Symbol	SUCCESS		18215						
ANR	18402	Symbol	SG ( request_info ) . path_translated		18215						
ANR	18403	Symbol	handle -> filename		18215						
ANR	18404	Symbol	* handle		18215						
ANR	18405	Symbol	handle -> opened_path		18215						
ANR	18406	Symbol	handle		18215						
ANR	18407	Symbol	zend_string_copy		18215						
ANR	18408	Symbol	* EG ( current_execute_data ) -> func		18215						
ANR	18409	Symbol	cache_opline		18215						
ANR	18410	Symbol	filename		18215						
ANR	18411	Symbol	EG ( current_execute_data ) -> func -> common		18215						
ANR	18412	Symbol	ZEND_HANDLE_FILENAME		18215						
ANR	18413	Symbol	request_info		18215						
ANR	18414	Symbol	ZEND_USER_CODE		18215						
ANR	18415	Symbol	ZCG		18215						
ANR	18416	Function	persistent_zend_resolve_path	1885:0:58043:60897							
ANR	18417	FunctionDef	"persistent_zend_resolve_path (const char * filename , int filename_len)"		18416	0					
ANR	18418	CompoundStatement		1886:0:58132:60897	18416	0					
ANR	18419	IfStatement	if ( ZCG ( enabled ) && accel_startup_ok && ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress ) )		18416	0					
ANR	18420	Condition	ZCG ( enabled ) && accel_startup_ok && ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress )	1887:5:58139:58257	18416	0	True				
ANR	18421	AndExpression	ZCG ( enabled ) && accel_startup_ok && ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress )		18416	0		&&			
ANR	18422	CallExpression	ZCG ( enabled )		18416	0					
ANR	18423	Callee	ZCG		18416	0					
ANR	18424	Identifier	ZCG		18416	0					
ANR	18425	ArgumentList	enabled		18416	1					
ANR	18426	Argument	enabled		18416	0					
ANR	18427	Identifier	enabled		18416	0					
ANR	18428	AndExpression	accel_startup_ok && ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress )		18416	1		&&			
ANR	18429	Identifier	accel_startup_ok		18416	0					
ANR	18430	AndExpression	( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress )		18416	1		&&			
ANR	18431	OrExpression	ZCG ( counted ) || ZCSG ( accelerator_enabled )		18416	0		||			
ANR	18432	CallExpression	ZCG ( counted )		18416	0					
ANR	18433	Callee	ZCG		18416	0					
ANR	18434	Identifier	ZCG		18416	0					
ANR	18435	ArgumentList	counted		18416	1					
ANR	18436	Argument	counted		18416	0					
ANR	18437	Identifier	counted		18416	0					
ANR	18438	CallExpression	ZCSG ( accelerator_enabled )		18416	1					
ANR	18439	Callee	ZCSG		18416	0					
ANR	18440	Identifier	ZCSG		18416	0					
ANR	18441	ArgumentList	accelerator_enabled		18416	1					
ANR	18442	Argument	accelerator_enabled		18416	0					
ANR	18443	Identifier	accelerator_enabled		18416	0					
ANR	18444	UnaryOperationExpression	! ZCSG ( restart_in_progress )		18416	1					
ANR	18445	UnaryOperator	!		18416	0					
ANR	18446	CallExpression	ZCSG ( restart_in_progress )		18416	1					
ANR	18447	Callee	ZCSG		18416	0					
ANR	18448	Identifier	ZCSG		18416	0					
ANR	18449	ArgumentList	restart_in_progress		18416	1					
ANR	18450	Argument	restart_in_progress		18416	0					
ANR	18451	Identifier	restart_in_progress		18416	0					
ANR	18452	CompoundStatement		4:33:127:127	18416	1					
ANR	18453	IfStatement	if ( ( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE ) ) )		18416	0					
ANR	18454	Condition	( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE ) )	1892:6:58346:58812	18416	0	True				
ANR	18455	OrExpression	( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE ) )		18416	0		||			
ANR	18456	AndExpression	! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated		18416	0		&&			
ANR	18457	UnaryOperationExpression	! EG ( current_execute_data )		18416	0					
ANR	18458	UnaryOperator	!		18416	0					
ANR	18459	CallExpression	EG ( current_execute_data )		18416	1					
ANR	18460	Callee	EG		18416	0					
ANR	18461	Identifier	EG		18416	0					
ANR	18462	ArgumentList	current_execute_data		18416	1					
ANR	18463	Argument	current_execute_data		18416	0					
ANR	18464	Identifier	current_execute_data		18416	0					
ANR	18465	EqualityExpression	filename == SG ( request_info ) . path_translated		18416	1		==			
ANR	18466	Identifier	filename		18416	0					
ANR	18467	MemberAccess	SG ( request_info ) . path_translated		18416	1					
ANR	18468	CallExpression	SG ( request_info )		18416	0					
ANR	18469	Callee	SG		18416	0					
ANR	18470	Identifier	SG		18416	0					
ANR	18471	ArgumentList	request_info		18416	1					
ANR	18472	Argument	request_info		18416	0					
ANR	18473	Identifier	request_info		18416	0					
ANR	18474	Identifier	path_translated		18416	1					
ANR	18475	AndExpression	EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE )		18416	1		&&			
ANR	18476	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18477	Callee	EG		18416	0					
ANR	18478	Identifier	EG		18416	0					
ANR	18479	ArgumentList	current_execute_data		18416	1					
ANR	18480	Argument	current_execute_data		18416	0					
ANR	18481	Identifier	current_execute_data		18416	0					
ANR	18482	AndExpression	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE )		18416	1		&&			
ANR	18483	PtrMemberAccess	EG ( current_execute_data ) -> func		18416	0					
ANR	18484	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18485	Callee	EG		18416	0					
ANR	18486	Identifier	EG		18416	0					
ANR	18487	ArgumentList	current_execute_data		18416	1					
ANR	18488	Argument	current_execute_data		18416	0					
ANR	18489	Identifier	current_execute_data		18416	0					
ANR	18490	Identifier	func		18416	1					
ANR	18491	AndExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE )		18416	1		&&			
ANR	18492	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		18416	0					
ANR	18493	Callee	ZEND_USER_CODE		18416	0					
ANR	18494	Identifier	ZEND_USER_CODE		18416	0					
ANR	18495	ArgumentList	EG ( current_execute_data ) -> func -> common . type		18416	1					
ANR	18496	Argument	EG ( current_execute_data ) -> func -> common . type		18416	0					
ANR	18497	MemberAccess	EG ( current_execute_data ) -> func -> common . type		18416	0					
ANR	18498	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		18416	0					
ANR	18499	PtrMemberAccess	EG ( current_execute_data ) -> func		18416	0					
ANR	18500	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18501	Callee	EG		18416	0					
ANR	18502	Identifier	EG		18416	0					
ANR	18503	ArgumentList	current_execute_data		18416	1					
ANR	18504	Argument	current_execute_data		18416	0					
ANR	18505	Identifier	current_execute_data		18416	0					
ANR	18506	Identifier	func		18416	1					
ANR	18507	Identifier	common		18416	1					
ANR	18508	Identifier	type		18416	1					
ANR	18509	AndExpression	EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE )		18416	1		&&			
ANR	18510	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL		18416	0		==			
ANR	18511	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		18416	0					
ANR	18512	PtrMemberAccess	EG ( current_execute_data ) -> opline		18416	0					
ANR	18513	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18514	Callee	EG		18416	0					
ANR	18515	Identifier	EG		18416	0					
ANR	18516	ArgumentList	current_execute_data		18416	1					
ANR	18517	Argument	current_execute_data		18416	0					
ANR	18518	Identifier	current_execute_data		18416	0					
ANR	18519	Identifier	opline		18416	1					
ANR	18520	Identifier	opcode		18416	1					
ANR	18521	Identifier	ZEND_INCLUDE_OR_EVAL		18416	1					
ANR	18522	OrExpression	EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE		18416	1		||			
ANR	18523	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE		18416	0		==			
ANR	18524	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		18416	0					
ANR	18525	PtrMemberAccess	EG ( current_execute_data ) -> opline		18416	0					
ANR	18526	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18527	Callee	EG		18416	0					
ANR	18528	Identifier	EG		18416	0					
ANR	18529	ArgumentList	current_execute_data		18416	1					
ANR	18530	Argument	current_execute_data		18416	0					
ANR	18531	Identifier	current_execute_data		18416	0					
ANR	18532	Identifier	opline		18416	1					
ANR	18533	Identifier	extended_value		18416	1					
ANR	18534	Identifier	ZEND_INCLUDE_ONCE		18416	1					
ANR	18535	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE		18416	1		==			
ANR	18536	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		18416	0					
ANR	18537	PtrMemberAccess	EG ( current_execute_data ) -> opline		18416	0					
ANR	18538	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18539	Callee	EG		18416	0					
ANR	18540	Identifier	EG		18416	0					
ANR	18541	ArgumentList	current_execute_data		18416	1					
ANR	18542	Argument	current_execute_data		18416	0					
ANR	18543	Identifier	current_execute_data		18416	0					
ANR	18544	Identifier	opline		18416	1					
ANR	18545	Identifier	extended_value		18416	1					
ANR	18546	Identifier	ZEND_REQUIRE_ONCE		18416	1					
ANR	18547	CompoundStatement		19:3:789:805	18416	1					
ANR	18548	IdentifierDeclStatement	zend_string * resolved_path ;	1902:3:58872:58898	18416	0	True				
ANR	18549	IdentifierDecl	* resolved_path		18416	0					
ANR	18550	IdentifierDeclType	zend_string *		18416	0					
ANR	18551	Identifier	resolved_path		18416	1					
ANR	18552	IdentifierDeclStatement	int key_length ;	1903:3:58903:58917	18416	1	True				
ANR	18553	IdentifierDecl	key_length		18416	0					
ANR	18554	IdentifierDeclType	int		18416	0					
ANR	18555	Identifier	key_length		18416	1					
ANR	18556	IdentifierDeclStatement	char * key = NULL ;	1904:3:58922:58938	18416	2	True				
ANR	18557	IdentifierDecl	* key = NULL		18416	0					
ANR	18558	IdentifierDeclType	char *		18416	0					
ANR	18559	Identifier	key		18416	1					
ANR	18560	AssignmentExpression	* key = NULL		18416	2		=			
ANR	18561	Identifier	NULL		18416	0					
ANR	18562	Identifier	NULL		18416	1					
ANR	18563	IfStatement	if ( ! ZCG ( accel_directives ) . revalidate_path )		18416	3					
ANR	18564	Condition	! ZCG ( accel_directives ) . revalidate_path	1906:7:58951:58988	18416	0	True				
ANR	18565	UnaryOperationExpression	! ZCG ( accel_directives ) . revalidate_path		18416	0					
ANR	18566	UnaryOperator	!		18416	0					
ANR	18567	MemberAccess	ZCG ( accel_directives ) . revalidate_path		18416	1					
ANR	18568	CallExpression	ZCG ( accel_directives )		18416	0					
ANR	18569	Callee	ZCG		18416	0					
ANR	18570	Identifier	ZCG		18416	0					
ANR	18571	ArgumentList	accel_directives		18416	1					
ANR	18572	Argument	accel_directives		18416	0					
ANR	18573	Identifier	accel_directives		18416	0					
ANR	18574	Identifier	revalidate_path		18416	1					
ANR	18575	CompoundStatement		21:47:858:858	18416	1					
ANR	18576	ExpressionStatement	"key = accel_make_persistent_key ( filename , filename_len , & key_length )"	1908:4:59033:59101	18416	0	True				
ANR	18577	AssignmentExpression	"key = accel_make_persistent_key ( filename , filename_len , & key_length )"		18416	0		=			
ANR	18578	Identifier	key		18416	0					
ANR	18579	CallExpression	"accel_make_persistent_key ( filename , filename_len , & key_length )"		18416	1					
ANR	18580	Callee	accel_make_persistent_key		18416	0					
ANR	18581	Identifier	accel_make_persistent_key		18416	0					
ANR	18582	ArgumentList	filename		18416	1					
ANR	18583	Argument	filename		18416	0					
ANR	18584	Identifier	filename		18416	0					
ANR	18585	Argument	filename_len		18416	1					
ANR	18586	Identifier	filename_len		18416	0					
ANR	18587	Argument	& key_length		18416	2					
ANR	18588	UnaryOperationExpression	& key_length		18416	0					
ANR	18589	UnaryOperator	&		18416	0					
ANR	18590	Identifier	key_length		18416	1					
ANR	18591	IfStatement	if ( key )		18416	1					
ANR	18592	Condition	key	1909:8:59111:59113	18416	0	True				
ANR	18593	Identifier	key		18416	0					
ANR	18594	CompoundStatement		25:5:990:1082	18416	1					
ANR	18595	IdentifierDeclStatement	"zend_accel_hash_entry * bucket = zend_accel_hash_str_find_entry ( & ZCSG ( hash ) , key , key_length ) ;"	1910:5:59123:59215	18416	0	True				
ANR	18596	IdentifierDecl	"* bucket = zend_accel_hash_str_find_entry ( & ZCSG ( hash ) , key , key_length )"		18416	0					
ANR	18597	IdentifierDeclType	zend_accel_hash_entry *		18416	0					
ANR	18598	Identifier	bucket		18416	1					
ANR	18599	AssignmentExpression	"* bucket = zend_accel_hash_str_find_entry ( & ZCSG ( hash ) , key , key_length )"		18416	2		=			
ANR	18600	Identifier	bucket		18416	0					
ANR	18601	CallExpression	"zend_accel_hash_str_find_entry ( & ZCSG ( hash ) , key , key_length )"		18416	1					
ANR	18602	Callee	zend_accel_hash_str_find_entry		18416	0					
ANR	18603	Identifier	zend_accel_hash_str_find_entry		18416	0					
ANR	18604	ArgumentList	& ZCSG ( hash )		18416	1					
ANR	18605	Argument	& ZCSG ( hash )		18416	0					
ANR	18606	UnaryOperationExpression	& ZCSG ( hash )		18416	0					
ANR	18607	UnaryOperator	&		18416	0					
ANR	18608	CallExpression	ZCSG ( hash )		18416	1					
ANR	18609	Callee	ZCSG		18416	0					
ANR	18610	Identifier	ZCSG		18416	0					
ANR	18611	ArgumentList	hash		18416	1					
ANR	18612	Argument	hash		18416	0					
ANR	18613	Identifier	hash		18416	0					
ANR	18614	Argument	key		18416	1					
ANR	18615	Identifier	key		18416	0					
ANR	18616	Argument	key_length		18416	2					
ANR	18617	Identifier	key_length		18416	0					
ANR	18618	IfStatement	if ( bucket != NULL )		18416	1					
ANR	18619	Condition	bucket != NULL	1911:9:59226:59239	18416	0	True				
ANR	18620	EqualityExpression	bucket != NULL		18416	0		!=			
ANR	18621	Identifier	bucket		18416	0					
ANR	18622	Identifier	NULL		18416	1					
ANR	18623	CompoundStatement		27:6:1117:1199	18416	1					
ANR	18624	IdentifierDeclStatement	zend_persistent_script * persistent_script = ( zend_persistent_script * ) bucket -> data ;	1912:6:59250:59332	18416	0	True				
ANR	18625	IdentifierDecl	* persistent_script = ( zend_persistent_script * ) bucket -> data		18416	0					
ANR	18626	IdentifierDeclType	zend_persistent_script *		18416	0					
ANR	18627	Identifier	persistent_script		18416	1					
ANR	18628	AssignmentExpression	* persistent_script = ( zend_persistent_script * ) bucket -> data		18416	2		=			
ANR	18629	Identifier	persistent_script		18416	0					
ANR	18630	CastExpression	( zend_persistent_script * ) bucket -> data		18416	1					
ANR	18631	CastTarget	zend_persistent_script *		18416	0					
ANR	18632	PtrMemberAccess	bucket -> data		18416	1					
ANR	18633	Identifier	bucket		18416	0					
ANR	18634	Identifier	data		18416	1					
ANR	18635	IfStatement	if ( ! persistent_script -> corrupted )		18416	1					
ANR	18636	Condition	! persistent_script -> corrupted	1913:10:59344:59372	18416	0	True				
ANR	18637	UnaryOperationExpression	! persistent_script -> corrupted		18416	0					
ANR	18638	UnaryOperator	!		18416	0					
ANR	18639	PtrMemberAccess	persistent_script -> corrupted		18416	1					
ANR	18640	Identifier	persistent_script		18416	0					
ANR	18641	Identifier	corrupted		18416	1					
ANR	18642	CompoundStatement		28:41:1242:1242	18416	1					
ANR	18643	ExpressionStatement	ZCG ( cache_opline ) = EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL	1914:7:59384:59470	18416	0	True				
ANR	18644	AssignmentExpression	ZCG ( cache_opline ) = EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL		18416	0		=			
ANR	18645	CallExpression	ZCG ( cache_opline )		18416	0					
ANR	18646	Callee	ZCG		18416	0					
ANR	18647	Identifier	ZCG		18416	0					
ANR	18648	ArgumentList	cache_opline		18416	1					
ANR	18649	Argument	cache_opline		18416	0					
ANR	18650	Identifier	cache_opline		18416	0					
ANR	18651	ConditionalExpression	EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL		18416	1					
ANR	18652	Condition	EG ( current_execute_data )		18416	0					
ANR	18653	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18654	Callee	EG		18416	0					
ANR	18655	Identifier	EG		18416	0					
ANR	18656	ArgumentList	current_execute_data		18416	1					
ANR	18657	Argument	current_execute_data		18416	0					
ANR	18658	Identifier	current_execute_data		18416	0					
ANR	18659	PtrMemberAccess	EG ( current_execute_data ) -> opline		18416	1					
ANR	18660	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18661	Callee	EG		18416	0					
ANR	18662	Identifier	EG		18416	0					
ANR	18663	ArgumentList	current_execute_data		18416	1					
ANR	18664	Argument	current_execute_data		18416	0					
ANR	18665	Identifier	current_execute_data		18416	0					
ANR	18666	Identifier	opline		18416	1					
ANR	18667	Identifier	NULL		18416	2					
ANR	18668	ExpressionStatement	ZCG ( cache_persistent_script ) = persistent_script	1915:7:59479:59527	18416	1	True				
ANR	18669	AssignmentExpression	ZCG ( cache_persistent_script ) = persistent_script		18416	0		=			
ANR	18670	CallExpression	ZCG ( cache_persistent_script )		18416	0					
ANR	18671	Callee	ZCG		18416	0					
ANR	18672	Identifier	ZCG		18416	0					
ANR	18673	ArgumentList	cache_persistent_script		18416	1					
ANR	18674	Argument	cache_persistent_script		18416	0					
ANR	18675	Identifier	cache_persistent_script		18416	0					
ANR	18676	Identifier	persistent_script		18416	1					
ANR	18677	ReturnStatement	return zend_string_copy ( persistent_script -> full_path ) ;	1916:7:59536:59589	18416	2	True				
ANR	18678	CallExpression	zend_string_copy ( persistent_script -> full_path )		18416	0					
ANR	18679	Callee	zend_string_copy		18416	0					
ANR	18680	Identifier	zend_string_copy		18416	0					
ANR	18681	ArgumentList	persistent_script -> full_path		18416	1					
ANR	18682	Argument	persistent_script -> full_path		18416	0					
ANR	18683	PtrMemberAccess	persistent_script -> full_path		18416	0					
ANR	18684	Identifier	persistent_script		18416	0					
ANR	18685	Identifier	full_path		18416	1					
ANR	18686	ElseStatement	else		18416	0					
ANR	18687	CompoundStatement		34:11:1484:1484	18416	0					
ANR	18688	ExpressionStatement	ZCG ( cache_opline ) = NULL	1920:5:59624:59648	18416	0	True				
ANR	18689	AssignmentExpression	ZCG ( cache_opline ) = NULL		18416	0		=			
ANR	18690	CallExpression	ZCG ( cache_opline )		18416	0					
ANR	18691	Callee	ZCG		18416	0					
ANR	18692	Identifier	ZCG		18416	0					
ANR	18693	ArgumentList	cache_opline		18416	1					
ANR	18694	Argument	cache_opline		18416	0					
ANR	18695	Identifier	cache_opline		18416	0					
ANR	18696	Identifier	NULL		18416	1					
ANR	18697	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1921:5:59655:59690	18416	1	True				
ANR	18698	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		18416	0		=			
ANR	18699	CallExpression	ZCG ( cache_persistent_script )		18416	0					
ANR	18700	Callee	ZCG		18416	0					
ANR	18701	Identifier	ZCG		18416	0					
ANR	18702	ArgumentList	cache_persistent_script		18416	1					
ANR	18703	Argument	cache_persistent_script		18416	0					
ANR	18704	Identifier	cache_persistent_script		18416	0					
ANR	18705	Identifier	NULL		18416	1					
ANR	18706	ReturnStatement	"return accelerator_orig_zend_resolve_path ( filename , filename_len ) ;"	1922:5:59697:59762	18416	2	True				
ANR	18707	CallExpression	"accelerator_orig_zend_resolve_path ( filename , filename_len )"		18416	0					
ANR	18708	Callee	accelerator_orig_zend_resolve_path		18416	0					
ANR	18709	Identifier	accelerator_orig_zend_resolve_path		18416	0					
ANR	18710	ArgumentList	filename		18416	1					
ANR	18711	Argument	filename		18416	0					
ANR	18712	Identifier	filename		18416	0					
ANR	18713	Argument	filename_len		18416	1					
ANR	18714	Identifier	filename_len		18416	0					
ANR	18715	ExpressionStatement	"resolved_path = accelerator_orig_zend_resolve_path ( filename , filename_len )"	1927:3:59812:59886	18416	4	True				
ANR	18716	AssignmentExpression	"resolved_path = accelerator_orig_zend_resolve_path ( filename , filename_len )"		18416	0		=			
ANR	18717	Identifier	resolved_path		18416	0					
ANR	18718	CallExpression	"accelerator_orig_zend_resolve_path ( filename , filename_len )"		18416	1					
ANR	18719	Callee	accelerator_orig_zend_resolve_path		18416	0					
ANR	18720	Identifier	accelerator_orig_zend_resolve_path		18416	0					
ANR	18721	ArgumentList	filename		18416	1					
ANR	18722	Argument	filename		18416	0					
ANR	18723	Identifier	filename		18416	0					
ANR	18724	Argument	filename_len		18416	1					
ANR	18725	Identifier	filename_len		18416	0					
ANR	18726	IfStatement	if ( resolved_path )		18416	5					
ANR	18727	Condition	resolved_path	1929:7:59896:59908	18416	0	True				
ANR	18728	Identifier	resolved_path		18416	0					
ANR	18729	CompoundStatement		46:4:1814:1900	18416	1					
ANR	18730	IdentifierDeclStatement	"zend_accel_hash_entry * bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , resolved_path ) ;"	1931:4:59947:60033	18416	0	True				
ANR	18731	IdentifierDecl	"* bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , resolved_path )"		18416	0					
ANR	18732	IdentifierDeclType	zend_accel_hash_entry *		18416	0					
ANR	18733	Identifier	bucket		18416	1					
ANR	18734	AssignmentExpression	"* bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , resolved_path )"		18416	2		=			
ANR	18735	Identifier	bucket		18416	0					
ANR	18736	CallExpression	"zend_accel_hash_find_entry ( & ZCSG ( hash ) , resolved_path )"		18416	1					
ANR	18737	Callee	zend_accel_hash_find_entry		18416	0					
ANR	18738	Identifier	zend_accel_hash_find_entry		18416	0					
ANR	18739	ArgumentList	& ZCSG ( hash )		18416	1					
ANR	18740	Argument	& ZCSG ( hash )		18416	0					
ANR	18741	UnaryOperationExpression	& ZCSG ( hash )		18416	0					
ANR	18742	UnaryOperator	&		18416	0					
ANR	18743	CallExpression	ZCSG ( hash )		18416	1					
ANR	18744	Callee	ZCSG		18416	0					
ANR	18745	Identifier	ZCSG		18416	0					
ANR	18746	ArgumentList	hash		18416	1					
ANR	18747	Argument	hash		18416	0					
ANR	18748	Identifier	hash		18416	0					
ANR	18749	Argument	resolved_path		18416	1					
ANR	18750	Identifier	resolved_path		18416	0					
ANR	18751	IfStatement	if ( bucket )		18416	1					
ANR	18752	Condition	bucket	1932:8:60043:60048	18416	0	True				
ANR	18753	Identifier	bucket		18416	0					
ANR	18754	CompoundStatement		48:5:1925:2007	18416	1					
ANR	18755	IdentifierDeclStatement	zend_persistent_script * persistent_script = ( zend_persistent_script * ) bucket -> data ;	1933:5:60058:60140	18416	0	True				
ANR	18756	IdentifierDecl	* persistent_script = ( zend_persistent_script * ) bucket -> data		18416	0					
ANR	18757	IdentifierDeclType	zend_persistent_script *		18416	0					
ANR	18758	Identifier	persistent_script		18416	1					
ANR	18759	AssignmentExpression	* persistent_script = ( zend_persistent_script * ) bucket -> data		18416	2		=			
ANR	18760	Identifier	persistent_script		18416	0					
ANR	18761	CastExpression	( zend_persistent_script * ) bucket -> data		18416	1					
ANR	18762	CastTarget	zend_persistent_script *		18416	0					
ANR	18763	PtrMemberAccess	bucket -> data		18416	1					
ANR	18764	Identifier	bucket		18416	0					
ANR	18765	Identifier	data		18416	1					
ANR	18766	IfStatement	if ( ! persistent_script -> corrupted )		18416	1					
ANR	18767	Condition	! persistent_script -> corrupted	1934:9:60151:60179	18416	0	True				
ANR	18768	UnaryOperationExpression	! persistent_script -> corrupted		18416	0					
ANR	18769	UnaryOperator	!		18416	0					
ANR	18770	PtrMemberAccess	persistent_script -> corrupted		18416	1					
ANR	18771	Identifier	persistent_script		18416	0					
ANR	18772	Identifier	corrupted		18416	1					
ANR	18773	CompoundStatement		49:40:2049:2049	18416	1					
ANR	18774	IfStatement	if ( key )		18416	0					
ANR	18775	Condition	key	1935:10:60194:60196	18416	0	True				
ANR	18776	Identifier	key		18416	0					
ANR	18777	CompoundStatement		50:15:2066:2066	18416	1					
ANR	18778	ExpressionStatement	SHM_UNPROTECT ( )	1937:7:60259:60274	18416	0	True				
ANR	18779	CallExpression	SHM_UNPROTECT ( )		18416	0					
ANR	18780	Callee	SHM_UNPROTECT		18416	0					
ANR	18781	Identifier	SHM_UNPROTECT		18416	0					
ANR	18782	ArgumentList			18416	1					
ANR	18783	ExpressionStatement	zend_shared_alloc_lock ( )	1938:7:60283:60307	18416	1	True				
ANR	18784	CallExpression	zend_shared_alloc_lock ( )		18416	0					
ANR	18785	Callee	zend_shared_alloc_lock		18416	0					
ANR	18786	Identifier	zend_shared_alloc_lock		18416	0					
ANR	18787	ArgumentList			18416	1					
ANR	18788	ExpressionStatement	"zend_accel_add_key ( key , key_length , bucket )"	1939:7:60316:60359	18416	2	True				
ANR	18789	CallExpression	"zend_accel_add_key ( key , key_length , bucket )"		18416	0					
ANR	18790	Callee	zend_accel_add_key		18416	0					
ANR	18791	Identifier	zend_accel_add_key		18416	0					
ANR	18792	ArgumentList	key		18416	1					
ANR	18793	Argument	key		18416	0					
ANR	18794	Identifier	key		18416	0					
ANR	18795	Argument	key_length		18416	1					
ANR	18796	Identifier	key_length		18416	0					
ANR	18797	Argument	bucket		18416	2					
ANR	18798	Identifier	bucket		18416	0					
ANR	18799	ExpressionStatement	zend_shared_alloc_unlock ( )	1940:7:60368:60394	18416	3	True				
ANR	18800	CallExpression	zend_shared_alloc_unlock ( )		18416	0					
ANR	18801	Callee	zend_shared_alloc_unlock		18416	0					
ANR	18802	Identifier	zend_shared_alloc_unlock		18416	0					
ANR	18803	ArgumentList			18416	1					
ANR	18804	ExpressionStatement	SHM_PROTECT ( )	1941:7:60403:60416	18416	4	True				
ANR	18805	CallExpression	SHM_PROTECT ( )		18416	0					
ANR	18806	Callee	SHM_PROTECT		18416	0					
ANR	18807	Identifier	SHM_PROTECT		18416	0					
ANR	18808	ArgumentList			18416	1					
ANR	18809	ElseStatement	else		18416	0					
ANR	18810	CompoundStatement		57:13:2298:2298	18416	0					
ANR	18811	ExpressionStatement	ZCG ( key_len ) = 0	1943:7:60440:60456	18416	0	True				
ANR	18812	AssignmentExpression	ZCG ( key_len ) = 0		18416	0		=			
ANR	18813	CallExpression	ZCG ( key_len )		18416	0					
ANR	18814	Callee	ZCG		18416	0					
ANR	18815	Identifier	ZCG		18416	0					
ANR	18816	ArgumentList	key_len		18416	1					
ANR	18817	Argument	key_len		18416	0					
ANR	18818	Identifier	key_len		18416	0					
ANR	18819	PrimaryExpression	0		18416	1					
ANR	18820	ExpressionStatement	ZCG ( cache_opline ) = EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL	1945:6:60472:60558	18416	1	True				
ANR	18821	AssignmentExpression	ZCG ( cache_opline ) = EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL		18416	0		=			
ANR	18822	CallExpression	ZCG ( cache_opline )		18416	0					
ANR	18823	Callee	ZCG		18416	0					
ANR	18824	Identifier	ZCG		18416	0					
ANR	18825	ArgumentList	cache_opline		18416	1					
ANR	18826	Argument	cache_opline		18416	0					
ANR	18827	Identifier	cache_opline		18416	0					
ANR	18828	ConditionalExpression	EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL		18416	1					
ANR	18829	Condition	EG ( current_execute_data )		18416	0					
ANR	18830	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18831	Callee	EG		18416	0					
ANR	18832	Identifier	EG		18416	0					
ANR	18833	ArgumentList	current_execute_data		18416	1					
ANR	18834	Argument	current_execute_data		18416	0					
ANR	18835	Identifier	current_execute_data		18416	0					
ANR	18836	PtrMemberAccess	EG ( current_execute_data ) -> opline		18416	1					
ANR	18837	CallExpression	EG ( current_execute_data )		18416	0					
ANR	18838	Callee	EG		18416	0					
ANR	18839	Identifier	EG		18416	0					
ANR	18840	ArgumentList	current_execute_data		18416	1					
ANR	18841	Argument	current_execute_data		18416	0					
ANR	18842	Identifier	current_execute_data		18416	0					
ANR	18843	Identifier	opline		18416	1					
ANR	18844	Identifier	NULL		18416	2					
ANR	18845	ExpressionStatement	ZCG ( cache_persistent_script ) = persistent_script	1946:6:60566:60614	18416	2	True				
ANR	18846	AssignmentExpression	ZCG ( cache_persistent_script ) = persistent_script		18416	0		=			
ANR	18847	CallExpression	ZCG ( cache_persistent_script )		18416	0					
ANR	18848	Callee	ZCG		18416	0					
ANR	18849	Identifier	ZCG		18416	0					
ANR	18850	ArgumentList	cache_persistent_script		18416	1					
ANR	18851	Argument	cache_persistent_script		18416	0					
ANR	18852	Identifier	cache_persistent_script		18416	0					
ANR	18853	Identifier	persistent_script		18416	1					
ANR	18854	ReturnStatement	return resolved_path ;	1947:6:60622:60642	18416	3	True				
ANR	18855	Identifier	resolved_path		18416	0					
ANR	18856	ExpressionStatement	ZCG ( cache_opline ) = NULL	1952:3:60666:60690	18416	6	True				
ANR	18857	AssignmentExpression	ZCG ( cache_opline ) = NULL		18416	0		=			
ANR	18858	CallExpression	ZCG ( cache_opline )		18416	0					
ANR	18859	Callee	ZCG		18416	0					
ANR	18860	Identifier	ZCG		18416	0					
ANR	18861	ArgumentList	cache_opline		18416	1					
ANR	18862	Argument	cache_opline		18416	0					
ANR	18863	Identifier	cache_opline		18416	0					
ANR	18864	Identifier	NULL		18416	1					
ANR	18865	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1953:3:60695:60730	18416	7	True				
ANR	18866	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		18416	0		=			
ANR	18867	CallExpression	ZCG ( cache_persistent_script )		18416	0					
ANR	18868	Callee	ZCG		18416	0					
ANR	18869	Identifier	ZCG		18416	0					
ANR	18870	ArgumentList	cache_persistent_script		18416	1					
ANR	18871	Argument	cache_persistent_script		18416	0					
ANR	18872	Identifier	cache_persistent_script		18416	0					
ANR	18873	Identifier	NULL		18416	1					
ANR	18874	ReturnStatement	return resolved_path ;	1954:3:60735:60755	18416	8	True				
ANR	18875	Identifier	resolved_path		18416	0					
ANR	18876	ExpressionStatement	ZCG ( cache_opline ) = NULL	1957:1:60765:60789	18416	1	True				
ANR	18877	AssignmentExpression	ZCG ( cache_opline ) = NULL		18416	0		=			
ANR	18878	CallExpression	ZCG ( cache_opline )		18416	0					
ANR	18879	Callee	ZCG		18416	0					
ANR	18880	Identifier	ZCG		18416	0					
ANR	18881	ArgumentList	cache_opline		18416	1					
ANR	18882	Argument	cache_opline		18416	0					
ANR	18883	Identifier	cache_opline		18416	0					
ANR	18884	Identifier	NULL		18416	1					
ANR	18885	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1958:1:60792:60827	18416	2	True				
ANR	18886	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		18416	0		=			
ANR	18887	CallExpression	ZCG ( cache_persistent_script )		18416	0					
ANR	18888	Callee	ZCG		18416	0					
ANR	18889	Identifier	ZCG		18416	0					
ANR	18890	ArgumentList	cache_persistent_script		18416	1					
ANR	18891	Argument	cache_persistent_script		18416	0					
ANR	18892	Identifier	cache_persistent_script		18416	0					
ANR	18893	Identifier	NULL		18416	1					
ANR	18894	ReturnStatement	"return accelerator_orig_zend_resolve_path ( filename , filename_len ) ;"	1959:1:60830:60895	18416	3	True				
ANR	18895	CallExpression	"accelerator_orig_zend_resolve_path ( filename , filename_len )"		18416	0					
ANR	18896	Callee	accelerator_orig_zend_resolve_path		18416	0					
ANR	18897	Identifier	accelerator_orig_zend_resolve_path		18416	0					
ANR	18898	ArgumentList	filename		18416	1					
ANR	18899	Argument	filename		18416	0					
ANR	18900	Identifier	filename		18416	0					
ANR	18901	Argument	filename_len		18416	1					
ANR	18902	Identifier	filename_len		18416	0					
ANR	18903	ReturnType	static zend_string *		18416	1					
ANR	18904	Identifier	persistent_zend_resolve_path		18416	2					
ANR	18905	ParameterList	"const char * filename , int filename_len"		18416	3					
ANR	18906	Parameter	const char * filename	1885:49:58092:58111	18416	0	True				
ANR	18907	ParameterType	const char *		18416	0					
ANR	18908	Identifier	filename		18416	1					
ANR	18909	Parameter	int filename_len	1885:71:58114:58129	18416	1	True				
ANR	18910	ParameterType	int		18416	0					
ANR	18911	Identifier	filename_len		18416	1					
ANR	18912	CFGEntryNode	ENTRY		18416		True				
ANR	18913	CFGExitNode	EXIT		18416		True				
ANR	18914	Symbol	EG ( current_execute_data ) -> func -> common . type		18416						
ANR	18915	Symbol	EG ( current_execute_data ) -> func		18416						
ANR	18916	Symbol	current_execute_data		18416						
ANR	18917	Symbol	* * EG		18416						
ANR	18918	Symbol	accelerator_orig_zend_resolve_path		18416						
ANR	18919	Symbol	& key_length		18416						
ANR	18920	Symbol	persistent_script -> full_path		18416						
ANR	18921	Symbol	ZCSG		18416						
ANR	18922	Symbol	filename_len		18416						
ANR	18923	Symbol	resolved_path		18416						
ANR	18924	Symbol	accel_make_persistent_key		18416						
ANR	18925	Symbol	EG		18416						
ANR	18926	Symbol	NULL		18416						
ANR	18927	Symbol	SG ( request_info ) . path_translated		18416						
ANR	18928	Symbol	* EG ( current_execute_data ) -> opline		18416						
ANR	18929	Symbol	zend_string_copy		18416						
ANR	18930	Symbol	* EG ( current_execute_data ) -> func		18416						
ANR	18931	Symbol	* persistent_script		18416						
ANR	18932	Symbol	persistent_script -> corrupted		18416						
ANR	18933	Symbol	cache_opline		18416						
ANR	18934	Symbol	zend_accel_hash_str_find_entry		18416						
ANR	18935	Symbol	bucket		18416						
ANR	18936	Symbol	& ZCSG		18416						
ANR	18937	Symbol	filename		18416						
ANR	18938	Symbol	* bucket		18416						
ANR	18939	Symbol	ZEND_USER_CODE		18416						
ANR	18940	Symbol	hash		18416						
ANR	18941	Symbol	ZCG		18416						
ANR	18942	Symbol	accel_startup_ok		18416						
ANR	18943	Symbol	zend_accel_hash_find_entry		18416						
ANR	18944	Symbol	restart_in_progress		18416						
ANR	18945	Symbol	* EG		18416						
ANR	18946	Symbol	EG ( current_execute_data ) -> opline		18416						
ANR	18947	Symbol	cache_persistent_script		18416						
ANR	18948	Symbol	enabled		18416						
ANR	18949	Symbol	EG ( current_execute_data ) -> opline -> extended_value		18416						
ANR	18950	Symbol	SG		18416						
ANR	18951	Symbol	key_length		18416						
ANR	18952	Symbol	ZEND_INCLUDE_OR_EVAL		18416						
ANR	18953	Symbol	key		18416						
ANR	18954	Symbol	key_len		18416						
ANR	18955	Symbol	ZEND_INCLUDE_ONCE		18416						
ANR	18956	Symbol	ZEND_REQUIRE_ONCE		18416						
ANR	18957	Symbol	EG ( current_execute_data ) -> opline -> opcode		18416						
ANR	18958	Symbol	bucket -> data		18416						
ANR	18959	Symbol	persistent_script		18416						
ANR	18960	Symbol	accelerator_enabled		18416						
ANR	18961	Symbol	EG ( current_execute_data ) -> func -> common		18416						
ANR	18962	Symbol	request_info		18416						
ANR	18963	Symbol	counted		18416						
ANR	18964	Symbol	accel_directives		18416						
ANR	18965	Symbol	ZCG ( accel_directives ) . revalidate_path		18416						
ANR	18966	Function	zend_reset_cache_vars	1962:0:60900:61130							
ANR	18967	FunctionDef	zend_reset_cache_vars ()		18966	0					
ANR	18968	CompoundStatement		1963:0:60940:61130	18966	0					
ANR	18969	ExpressionStatement	ZSMMG ( memory_exhausted ) = 0	1964:1:60943:60970	18966	0	True				
ANR	18970	AssignmentExpression	ZSMMG ( memory_exhausted ) = 0		18966	0		=			
ANR	18971	CallExpression	ZSMMG ( memory_exhausted )		18966	0					
ANR	18972	Callee	ZSMMG		18966	0					
ANR	18973	Identifier	ZSMMG		18966	0					
ANR	18974	ArgumentList	memory_exhausted		18966	1					
ANR	18975	Argument	memory_exhausted		18966	0					
ANR	18976	Identifier	memory_exhausted		18966	0					
ANR	18977	PrimaryExpression	0		18966	1					
ANR	18978	ExpressionStatement	ZCSG ( hits ) = 0	1965:1:60973:60987	18966	1	True				
ANR	18979	AssignmentExpression	ZCSG ( hits ) = 0		18966	0		=			
ANR	18980	CallExpression	ZCSG ( hits )		18966	0					
ANR	18981	Callee	ZCSG		18966	0					
ANR	18982	Identifier	ZCSG		18966	0					
ANR	18983	ArgumentList	hits		18966	1					
ANR	18984	Argument	hits		18966	0					
ANR	18985	Identifier	hits		18966	0					
ANR	18986	PrimaryExpression	0		18966	1					
ANR	18987	ExpressionStatement	ZCSG ( misses ) = 0	1966:1:60990:61006	18966	2	True				
ANR	18988	AssignmentExpression	ZCSG ( misses ) = 0		18966	0		=			
ANR	18989	CallExpression	ZCSG ( misses )		18966	0					
ANR	18990	Callee	ZCSG		18966	0					
ANR	18991	Identifier	ZCSG		18966	0					
ANR	18992	ArgumentList	misses		18966	1					
ANR	18993	Argument	misses		18966	0					
ANR	18994	Identifier	misses		18966	0					
ANR	18995	PrimaryExpression	0		18966	1					
ANR	18996	ExpressionStatement	ZCSG ( blacklist_misses ) = 0	1967:1:61009:61035	18966	3	True				
ANR	18997	AssignmentExpression	ZCSG ( blacklist_misses ) = 0		18966	0		=			
ANR	18998	CallExpression	ZCSG ( blacklist_misses )		18966	0					
ANR	18999	Callee	ZCSG		18966	0					
ANR	19000	Identifier	ZCSG		18966	0					
ANR	19001	ArgumentList	blacklist_misses		18966	1					
ANR	19002	Argument	blacklist_misses		18966	0					
ANR	19003	Identifier	blacklist_misses		18966	0					
ANR	19004	PrimaryExpression	0		18966	1					
ANR	19005	ExpressionStatement	ZSMMG ( wasted_shared_memory ) = 0	1968:1:61038:61069	18966	4	True				
ANR	19006	AssignmentExpression	ZSMMG ( wasted_shared_memory ) = 0		18966	0		=			
ANR	19007	CallExpression	ZSMMG ( wasted_shared_memory )		18966	0					
ANR	19008	Callee	ZSMMG		18966	0					
ANR	19009	Identifier	ZSMMG		18966	0					
ANR	19010	ArgumentList	wasted_shared_memory		18966	1					
ANR	19011	Argument	wasted_shared_memory		18966	0					
ANR	19012	Identifier	wasted_shared_memory		18966	0					
ANR	19013	PrimaryExpression	0		18966	1					
ANR	19014	ExpressionStatement	ZCSG ( restart_pending ) = 0	1969:1:61072:61097	18966	5	True				
ANR	19015	AssignmentExpression	ZCSG ( restart_pending ) = 0		18966	0		=			
ANR	19016	CallExpression	ZCSG ( restart_pending )		18966	0					
ANR	19017	Callee	ZCSG		18966	0					
ANR	19018	Identifier	ZCSG		18966	0					
ANR	19019	ArgumentList	restart_pending		18966	1					
ANR	19020	Argument	restart_pending		18966	0					
ANR	19021	Identifier	restart_pending		18966	0					
ANR	19022	PrimaryExpression	0		18966	1					
ANR	19023	ExpressionStatement	ZCSG ( force_restart_time ) = 0	1970:1:61100:61128	18966	6	True				
ANR	19024	AssignmentExpression	ZCSG ( force_restart_time ) = 0		18966	0		=			
ANR	19025	CallExpression	ZCSG ( force_restart_time )		18966	0					
ANR	19026	Callee	ZCSG		18966	0					
ANR	19027	Identifier	ZCSG		18966	0					
ANR	19028	ArgumentList	force_restart_time		18966	1					
ANR	19029	Argument	force_restart_time		18966	0					
ANR	19030	Identifier	force_restart_time		18966	0					
ANR	19031	PrimaryExpression	0		18966	1					
ANR	19032	ReturnType	static void		18966	1					
ANR	19033	Identifier	zend_reset_cache_vars		18966	2					
ANR	19034	ParameterList			18966	3					
ANR	19035	CFGEntryNode	ENTRY		18966		True				
ANR	19036	CFGExitNode	EXIT		18966		True				
ANR	19037	Symbol	hits		18966						
ANR	19038	Symbol	wasted_shared_memory		18966						
ANR	19039	Symbol	ZCSG		18966						
ANR	19040	Symbol	ZSMMG		18966						
ANR	19041	Symbol	misses		18966						
ANR	19042	Symbol	blacklist_misses		18966						
ANR	19043	Symbol	restart_pending		18966						
ANR	19044	Symbol	force_restart_time		18966						
ANR	19045	Symbol	memory_exhausted		18966						
ANR	19046	Function	accel_reset_pcre_cache	1973:0:61133:61431							
ANR	19047	FunctionDef	accel_reset_pcre_cache ()		19046	0					
ANR	19048	CompoundStatement		1974:0:61174:61431	19046	0					
ANR	19049	IdentifierDeclStatement	Bucket * p ;	1975:1:61177:61186	19046	0	True				
ANR	19050	IdentifierDecl	* p		19046	0					
ANR	19051	IdentifierDeclType	Bucket *		19046	0					
ANR	19052	Identifier	p		19046	1					
ANR	19053	Statement	ZEND_HASH_FOREACH_BUCKET	1977:1:61190:61213	19046	1	True				
ANR	19054	Statement	(	1977:25:61214:61214	19046	2	True				
ANR	19055	Statement	&	1977:26:61215:61215	19046	3	True				
ANR	19056	Statement	PCRE_G	1977:27:61216:61221	19046	4	True				
ANR	19057	Statement	(	1977:33:61222:61222	19046	5	True				
ANR	19058	Statement	pcre_cache	1977:34:61223:61232	19046	6	True				
ANR	19059	Statement	)	1977:44:61233:61233	19046	7	True				
ANR	19060	Statement	","	1977:45:61234:61234	19046	8	True				
ANR	19061	Statement	p	1977:47:61236:61236	19046	9	True				
ANR	19062	Statement	)	1977:48:61237:61237	19046	10	True				
ANR	19063	CompoundStatement		4:50:64:64	19046	11					
ANR	19064	IfStatement	if ( ZSTR_IS_INTERNED ( p -> key ) )		19046	0					
ANR	19065	Condition	ZSTR_IS_INTERNED ( p -> key )	1979:6:61304:61327	19046	0	True				
ANR	19066	CallExpression	ZSTR_IS_INTERNED ( p -> key )		19046	0					
ANR	19067	Callee	ZSTR_IS_INTERNED		19046	0					
ANR	19068	Identifier	ZSTR_IS_INTERNED		19046	0					
ANR	19069	ArgumentList	p -> key		19046	1					
ANR	19070	Argument	p -> key		19046	0					
ANR	19071	PtrMemberAccess	p -> key		19046	0					
ANR	19072	Identifier	p		19046	0					
ANR	19073	Identifier	key		19046	1					
ANR	19074	CompoundStatement		6:32:155:155	19046	1					
ANR	19075	ExpressionStatement	p -> key = NULL	1980:3:61335:61348	19046	0	True				
ANR	19076	AssignmentExpression	p -> key = NULL		19046	0		=			
ANR	19077	PtrMemberAccess	p -> key		19046	0					
ANR	19078	Identifier	p		19046	0					
ANR	19079	Identifier	key		19046	1					
ANR	19080	Identifier	NULL		19046	1					
ANR	19081	ExpressionStatement	"zend_hash_del_bucket ( & PCRE_G ( pcre_cache ) , p )"	1981:3:61353:61397	19046	1	True				
ANR	19082	CallExpression	"zend_hash_del_bucket ( & PCRE_G ( pcre_cache ) , p )"		19046	0					
ANR	19083	Callee	zend_hash_del_bucket		19046	0					
ANR	19084	Identifier	zend_hash_del_bucket		19046	0					
ANR	19085	ArgumentList	& PCRE_G ( pcre_cache )		19046	1					
ANR	19086	Argument	& PCRE_G ( pcre_cache )		19046	0					
ANR	19087	UnaryOperationExpression	& PCRE_G ( pcre_cache )		19046	0					
ANR	19088	UnaryOperator	&		19046	0					
ANR	19089	CallExpression	PCRE_G ( pcre_cache )		19046	1					
ANR	19090	Callee	PCRE_G		19046	0					
ANR	19091	Identifier	PCRE_G		19046	0					
ANR	19092	ArgumentList	pcre_cache		19046	1					
ANR	19093	Argument	pcre_cache		19046	0					
ANR	19094	Identifier	pcre_cache		19046	0					
ANR	19095	Argument	p		19046	1					
ANR	19096	Identifier	p		19046	0					
ANR	19097	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1983:3:61406:61429	19046	12	True				
ANR	19098	CallExpression	ZEND_HASH_FOREACH_END ( )		19046	0					
ANR	19099	Callee	ZEND_HASH_FOREACH_END		19046	0					
ANR	19100	Identifier	ZEND_HASH_FOREACH_END		19046	0					
ANR	19101	ArgumentList			19046	1					
ANR	19102	ReturnType	static void		19046	1					
ANR	19103	Identifier	accel_reset_pcre_cache		19046	2					
ANR	19104	ParameterList			19046	3					
ANR	19105	CFGEntryNode	ENTRY		19046		True				
ANR	19106	CFGExitNode	EXIT		19046		True				
ANR	19107	Symbol	p		19046						
ANR	19108	Symbol	NULL		19046						
ANR	19109	Symbol	& PCRE_G		19046						
ANR	19110	Symbol	ZSTR_IS_INTERNED		19046						
ANR	19111	Symbol	pcre_cache		19046						
ANR	19112	Symbol	* p		19046						
ANR	19113	Symbol	p -> key		19046						
ANR	19114	Function	accel_activate	1986:0:61434:64263							
ANR	19115	FunctionDef	accel_activate ()		19114	0					
ANR	19116	CompoundStatement		1987:0:61467:64263	19114	0					
ANR	19117	IdentifierDeclStatement	zend_bool reset_pcre = 0 ;	1988:1:61470:61494	19114	0	True				
ANR	19118	IdentifierDecl	reset_pcre = 0		19114	0					
ANR	19119	IdentifierDeclType	zend_bool		19114	0					
ANR	19120	Identifier	reset_pcre		19114	1					
ANR	19121	AssignmentExpression	reset_pcre = 0		19114	2		=			
ANR	19122	Identifier	reset_pcre		19114	0					
ANR	19123	PrimaryExpression	0		19114	1					
ANR	19124	IfStatement	if ( ! ZCG ( enabled ) || ! accel_startup_ok )		19114	1					
ANR	19125	Condition	! ZCG ( enabled ) || ! accel_startup_ok	1990:5:61502:61535	19114	0	True				
ANR	19126	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok		19114	0		||			
ANR	19127	UnaryOperationExpression	! ZCG ( enabled )		19114	0					
ANR	19128	UnaryOperator	!		19114	0					
ANR	19129	CallExpression	ZCG ( enabled )		19114	1					
ANR	19130	Callee	ZCG		19114	0					
ANR	19131	Identifier	ZCG		19114	0					
ANR	19132	ArgumentList	enabled		19114	1					
ANR	19133	Argument	enabled		19114	0					
ANR	19134	Identifier	enabled		19114	0					
ANR	19135	UnaryOperationExpression	! accel_startup_ok		19114	1					
ANR	19136	UnaryOperator	!		19114	0					
ANR	19137	Identifier	accel_startup_ok		19114	1					
ANR	19138	CompoundStatement		4:41:70:70	19114	1					
ANR	19139	ReturnStatement	return ;	1991:2:61542:61548	19114	0	True				
ANR	19140	IfStatement	if ( ! ZCG ( function_table ) . nTableSize )		19114	2					
ANR	19141	Condition	! ZCG ( function_table ) . nTableSize	1994:5:61559:61589	19114	0	True				
ANR	19142	UnaryOperationExpression	! ZCG ( function_table ) . nTableSize		19114	0					
ANR	19143	UnaryOperator	!		19114	0					
ANR	19144	MemberAccess	ZCG ( function_table ) . nTableSize		19114	1					
ANR	19145	CallExpression	ZCG ( function_table )		19114	0					
ANR	19146	Callee	ZCG		19114	0					
ANR	19147	Identifier	ZCG		19114	0					
ANR	19148	ArgumentList	function_table		19114	1					
ANR	19149	Argument	function_table		19114	0					
ANR	19150	Identifier	function_table		19114	0					
ANR	19151	Identifier	nTableSize		19114	1					
ANR	19152	CompoundStatement		8:38:124:124	19114	1					
ANR	19153	ExpressionStatement	"zend_hash_init ( & ZCG ( function_table ) , zend_hash_num_elements ( CG ( function_table ) ) , NULL , ZEND_FUNCTION_DTOR , 1 )"	1995:2:61596:61705	19114	0	True				
ANR	19154	CallExpression	"zend_hash_init ( & ZCG ( function_table ) , zend_hash_num_elements ( CG ( function_table ) ) , NULL , ZEND_FUNCTION_DTOR , 1 )"		19114	0					
ANR	19155	Callee	zend_hash_init		19114	0					
ANR	19156	Identifier	zend_hash_init		19114	0					
ANR	19157	ArgumentList	& ZCG ( function_table )		19114	1					
ANR	19158	Argument	& ZCG ( function_table )		19114	0					
ANR	19159	UnaryOperationExpression	& ZCG ( function_table )		19114	0					
ANR	19160	UnaryOperator	&		19114	0					
ANR	19161	CallExpression	ZCG ( function_table )		19114	1					
ANR	19162	Callee	ZCG		19114	0					
ANR	19163	Identifier	ZCG		19114	0					
ANR	19164	ArgumentList	function_table		19114	1					
ANR	19165	Argument	function_table		19114	0					
ANR	19166	Identifier	function_table		19114	0					
ANR	19167	Argument	zend_hash_num_elements ( CG ( function_table ) )		19114	1					
ANR	19168	CallExpression	zend_hash_num_elements ( CG ( function_table ) )		19114	0					
ANR	19169	Callee	zend_hash_num_elements		19114	0					
ANR	19170	Identifier	zend_hash_num_elements		19114	0					
ANR	19171	ArgumentList	CG ( function_table )		19114	1					
ANR	19172	Argument	CG ( function_table )		19114	0					
ANR	19173	CallExpression	CG ( function_table )		19114	0					
ANR	19174	Callee	CG		19114	0					
ANR	19175	Identifier	CG		19114	0					
ANR	19176	ArgumentList	function_table		19114	1					
ANR	19177	Argument	function_table		19114	0					
ANR	19178	Identifier	function_table		19114	0					
ANR	19179	Argument	NULL		19114	2					
ANR	19180	Identifier	NULL		19114	0					
ANR	19181	Argument	ZEND_FUNCTION_DTOR		19114	3					
ANR	19182	Identifier	ZEND_FUNCTION_DTOR		19114	0					
ANR	19183	Argument	1		19114	4					
ANR	19184	PrimaryExpression	1		19114	0					
ANR	19185	ExpressionStatement	zend_accel_copy_internal_functions ( )	1996:2:61709:61745	19114	1	True				
ANR	19186	CallExpression	zend_accel_copy_internal_functions ( )		19114	0					
ANR	19187	Callee	zend_accel_copy_internal_functions		19114	0					
ANR	19188	Identifier	zend_accel_copy_internal_functions		19114	0					
ANR	19189	ArgumentList			19114	1					
ANR	19190	ExpressionStatement	ZCG ( auto_globals_mask ) = 0	2000:1:61821:61847	19114	3	True				
ANR	19191	AssignmentExpression	ZCG ( auto_globals_mask ) = 0		19114	0		=			
ANR	19192	CallExpression	ZCG ( auto_globals_mask )		19114	0					
ANR	19193	Callee	ZCG		19114	0					
ANR	19194	Identifier	ZCG		19114	0					
ANR	19195	ArgumentList	auto_globals_mask		19114	1					
ANR	19196	Argument	auto_globals_mask		19114	0					
ANR	19197	Identifier	auto_globals_mask		19114	0					
ANR	19198	PrimaryExpression	0		19114	1					
ANR	19199	ExpressionStatement	ZCG ( request_time ) = ( time_t ) sapi_get_request_time ( )	2001:1:61850:61901	19114	4	True				
ANR	19200	AssignmentExpression	ZCG ( request_time ) = ( time_t ) sapi_get_request_time ( )		19114	0		=			
ANR	19201	CallExpression	ZCG ( request_time )		19114	0					
ANR	19202	Callee	ZCG		19114	0					
ANR	19203	Identifier	ZCG		19114	0					
ANR	19204	ArgumentList	request_time		19114	1					
ANR	19205	Argument	request_time		19114	0					
ANR	19206	Identifier	request_time		19114	0					
ANR	19207	CastExpression	( time_t ) sapi_get_request_time ( )		19114	1					
ANR	19208	CastTarget	time_t		19114	0					
ANR	19209	CallExpression	sapi_get_request_time ( )		19114	1					
ANR	19210	Callee	sapi_get_request_time		19114	0					
ANR	19211	Identifier	sapi_get_request_time		19114	0					
ANR	19212	ArgumentList			19114	1					
ANR	19213	ExpressionStatement	ZCG ( cache_opline ) = NULL	2002:1:61904:61928	19114	5	True				
ANR	19214	AssignmentExpression	ZCG ( cache_opline ) = NULL		19114	0		=			
ANR	19215	CallExpression	ZCG ( cache_opline )		19114	0					
ANR	19216	Callee	ZCG		19114	0					
ANR	19217	Identifier	ZCG		19114	0					
ANR	19218	ArgumentList	cache_opline		19114	1					
ANR	19219	Argument	cache_opline		19114	0					
ANR	19220	Identifier	cache_opline		19114	0					
ANR	19221	Identifier	NULL		19114	1					
ANR	19222	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	2003:1:61931:61966	19114	6	True				
ANR	19223	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		19114	0		=			
ANR	19224	CallExpression	ZCG ( cache_persistent_script )		19114	0					
ANR	19225	Callee	ZCG		19114	0					
ANR	19226	Identifier	ZCG		19114	0					
ANR	19227	ArgumentList	cache_persistent_script		19114	1					
ANR	19228	Argument	cache_persistent_script		19114	0					
ANR	19229	Identifier	cache_persistent_script		19114	0					
ANR	19230	Identifier	NULL		19114	1					
ANR	19231	ExpressionStatement	ZCG ( include_path_key_len ) = 0	2004:1:61969:61998	19114	7	True				
ANR	19232	AssignmentExpression	ZCG ( include_path_key_len ) = 0		19114	0		=			
ANR	19233	CallExpression	ZCG ( include_path_key_len )		19114	0					
ANR	19234	Callee	ZCG		19114	0					
ANR	19235	Identifier	ZCG		19114	0					
ANR	19236	ArgumentList	include_path_key_len		19114	1					
ANR	19237	Argument	include_path_key_len		19114	0					
ANR	19238	Identifier	include_path_key_len		19114	0					
ANR	19239	PrimaryExpression	0		19114	1					
ANR	19240	ExpressionStatement	ZCG ( include_path_check ) = 1	2005:1:62001:62028	19114	8	True				
ANR	19241	AssignmentExpression	ZCG ( include_path_check ) = 1		19114	0		=			
ANR	19242	CallExpression	ZCG ( include_path_check )		19114	0					
ANR	19243	Callee	ZCG		19114	0					
ANR	19244	Identifier	ZCG		19114	0					
ANR	19245	ArgumentList	include_path_check		19114	1					
ANR	19246	Argument	include_path_check		19114	0					
ANR	19247	Identifier	include_path_check		19114	0					
ANR	19248	PrimaryExpression	1		19114	1					
ANR	19249	IfStatement	if ( ZCG ( internal_functions_count ) != zend_hash_num_elements ( & ZCG ( function_table ) ) )		19114	9					
ANR	19250	Condition	ZCG ( internal_functions_count ) != zend_hash_num_elements ( & ZCG ( function_table ) )	2008:5:62107:62183	19114	0	True				
ANR	19251	EqualityExpression	ZCG ( internal_functions_count ) != zend_hash_num_elements ( & ZCG ( function_table ) )		19114	0		!=			
ANR	19252	CallExpression	ZCG ( internal_functions_count )		19114	0					
ANR	19253	Callee	ZCG		19114	0					
ANR	19254	Identifier	ZCG		19114	0					
ANR	19255	ArgumentList	internal_functions_count		19114	1					
ANR	19256	Argument	internal_functions_count		19114	0					
ANR	19257	Identifier	internal_functions_count		19114	0					
ANR	19258	CallExpression	zend_hash_num_elements ( & ZCG ( function_table ) )		19114	1					
ANR	19259	Callee	zend_hash_num_elements		19114	0					
ANR	19260	Identifier	zend_hash_num_elements		19114	0					
ANR	19261	ArgumentList	& ZCG ( function_table )		19114	1					
ANR	19262	Argument	& ZCG ( function_table )		19114	0					
ANR	19263	UnaryOperationExpression	& ZCG ( function_table )		19114	0					
ANR	19264	UnaryOperator	&		19114	0					
ANR	19265	CallExpression	ZCG ( function_table )		19114	1					
ANR	19266	Callee	ZCG		19114	0					
ANR	19267	Identifier	ZCG		19114	0					
ANR	19268	ArgumentList	function_table		19114	1					
ANR	19269	Argument	function_table		19114	0					
ANR	19270	Identifier	function_table		19114	0					
ANR	19271	CompoundStatement		22:84:718:718	19114	1					
ANR	19272	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_WARNING , ""Internal functions count changed - was %d, now %d"" , ZCG ( internal_functions_count ) , zend_hash_num_elements ( & ZCG ( function_table ) ) )"	2009:2:62190:62355	19114	0	True				
ANR	19273	CallExpression	"zend_accel_error ( ACCEL_LOG_WARNING , ""Internal functions count changed - was %d, now %d"" , ZCG ( internal_functions_count ) , zend_hash_num_elements ( & ZCG ( function_table ) ) )"		19114	0					
ANR	19274	Callee	zend_accel_error		19114	0					
ANR	19275	Identifier	zend_accel_error		19114	0					
ANR	19276	ArgumentList	ACCEL_LOG_WARNING		19114	1					
ANR	19277	Argument	ACCEL_LOG_WARNING		19114	0					
ANR	19278	Identifier	ACCEL_LOG_WARNING		19114	0					
ANR	19279	Argument	"""Internal functions count changed - was %d, now %d"""		19114	1					
ANR	19280	PrimaryExpression	"""Internal functions count changed - was %d, now %d"""		19114	0					
ANR	19281	Argument	ZCG ( internal_functions_count )		19114	2					
ANR	19282	CallExpression	ZCG ( internal_functions_count )		19114	0					
ANR	19283	Callee	ZCG		19114	0					
ANR	19284	Identifier	ZCG		19114	0					
ANR	19285	ArgumentList	internal_functions_count		19114	1					
ANR	19286	Argument	internal_functions_count		19114	0					
ANR	19287	Identifier	internal_functions_count		19114	0					
ANR	19288	Argument	zend_hash_num_elements ( & ZCG ( function_table ) )		19114	3					
ANR	19289	CallExpression	zend_hash_num_elements ( & ZCG ( function_table ) )		19114	0					
ANR	19290	Callee	zend_hash_num_elements		19114	0					
ANR	19291	Identifier	zend_hash_num_elements		19114	0					
ANR	19292	ArgumentList	& ZCG ( function_table )		19114	1					
ANR	19293	Argument	& ZCG ( function_table )		19114	0					
ANR	19294	UnaryOperationExpression	& ZCG ( function_table )		19114	0					
ANR	19295	UnaryOperator	&		19114	0					
ANR	19296	CallExpression	ZCG ( function_table )		19114	1					
ANR	19297	Callee	ZCG		19114	0					
ANR	19298	Identifier	ZCG		19114	0					
ANR	19299	ArgumentList	function_table		19114	1					
ANR	19300	Argument	function_table		19114	0					
ANR	19301	Identifier	function_table		19114	0					
ANR	19302	ExpressionStatement	ZCG ( cwd ) = NULL	2012:1:62362:62377	19114	10	True				
ANR	19303	AssignmentExpression	ZCG ( cwd ) = NULL		19114	0		=			
ANR	19304	CallExpression	ZCG ( cwd )		19114	0					
ANR	19305	Callee	ZCG		19114	0					
ANR	19306	Identifier	ZCG		19114	0					
ANR	19307	ArgumentList	cwd		19114	1					
ANR	19308	Argument	cwd		19114	0					
ANR	19309	Identifier	cwd		19114	0					
ANR	19310	Identifier	NULL		19114	1					
ANR	19311	ExpressionStatement	ZCG ( cwd_key_len ) = 0	2013:1:62380:62400	19114	11	True				
ANR	19312	AssignmentExpression	ZCG ( cwd_key_len ) = 0		19114	0		=			
ANR	19313	CallExpression	ZCG ( cwd_key_len )		19114	0					
ANR	19314	Callee	ZCG		19114	0					
ANR	19315	Identifier	ZCG		19114	0					
ANR	19316	ArgumentList	cwd_key_len		19114	1					
ANR	19317	Argument	cwd_key_len		19114	0					
ANR	19318	Identifier	cwd_key_len		19114	0					
ANR	19319	PrimaryExpression	0		19114	1					
ANR	19320	ExpressionStatement	ZCG ( cwd_check ) = 1	2014:1:62403:62421	19114	12	True				
ANR	19321	AssignmentExpression	ZCG ( cwd_check ) = 1		19114	0		=			
ANR	19322	CallExpression	ZCG ( cwd_check )		19114	0					
ANR	19323	Callee	ZCG		19114	0					
ANR	19324	Identifier	ZCG		19114	0					
ANR	19325	ArgumentList	cwd_check		19114	1					
ANR	19326	Argument	cwd_check		19114	0					
ANR	19327	Identifier	cwd_check		19114	0					
ANR	19328	PrimaryExpression	1		19114	1					
ANR	19329	IfStatement	if ( ZCG ( accel_directives ) . file_cache_only )		19114	13					
ANR	19330	Condition	ZCG ( accel_directives ) . file_cache_only	2017:5:62460:62496	19114	0	True				
ANR	19331	MemberAccess	ZCG ( accel_directives ) . file_cache_only		19114	0					
ANR	19332	CallExpression	ZCG ( accel_directives )		19114	0					
ANR	19333	Callee	ZCG		19114	0					
ANR	19334	Identifier	ZCG		19114	0					
ANR	19335	ArgumentList	accel_directives		19114	1					
ANR	19336	Argument	accel_directives		19114	0					
ANR	19337	Identifier	accel_directives		19114	0					
ANR	19338	Identifier	file_cache_only		19114	1					
ANR	19339	CompoundStatement		31:44:1031:1031	19114	1					
ANR	19340	ReturnStatement	return ;	2018:2:62503:62509	19114	0	True				
ANR	19341	ExpressionStatement	SHM_UNPROTECT ( )	2022:1:62523:62538	19114	14	True				
ANR	19342	CallExpression	SHM_UNPROTECT ( )		19114	0					
ANR	19343	Callee	SHM_UNPROTECT		19114	0					
ANR	19344	Identifier	SHM_UNPROTECT		19114	0					
ANR	19345	ArgumentList			19114	1					
ANR	19346	IfStatement	if ( ZCG ( counted ) )		19114	15					
ANR	19347	Condition	ZCG ( counted )	2024:5:62546:62557	19114	0	True				
ANR	19348	CallExpression	ZCG ( counted )		19114	0					
ANR	19349	Callee	ZCG		19114	0					
ANR	19350	Identifier	ZCG		19114	0					
ANR	19351	ArgumentList	counted		19114	1					
ANR	19352	Argument	counted		19114	0					
ANR	19353	Identifier	counted		19114	0					
ANR	19354	CompoundStatement		38:19:1092:1092	19114	1					
ANR	19355	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_WARNING , ""Stuck count for thread id %d"" , tsrm_thread_id ( ) )"	2026:2:62575:62660	19114	0	True				
ANR	19356	CallExpression	"zend_accel_error ( ACCEL_LOG_WARNING , ""Stuck count for thread id %d"" , tsrm_thread_id ( ) )"		19114	0					
ANR	19357	Callee	zend_accel_error		19114	0					
ANR	19358	Identifier	zend_accel_error		19114	0					
ANR	19359	ArgumentList	ACCEL_LOG_WARNING		19114	1					
ANR	19360	Argument	ACCEL_LOG_WARNING		19114	0					
ANR	19361	Identifier	ACCEL_LOG_WARNING		19114	0					
ANR	19362	Argument	"""Stuck count for thread id %d"""		19114	1					
ANR	19363	PrimaryExpression	"""Stuck count for thread id %d"""		19114	0					
ANR	19364	Argument	tsrm_thread_id ( )		19114	2					
ANR	19365	CallExpression	tsrm_thread_id ( )		19114	0					
ANR	19366	Callee	tsrm_thread_id		19114	0					
ANR	19367	Identifier	tsrm_thread_id		19114	0					
ANR	19368	ArgumentList			19114	1					
ANR	19369	ExpressionStatement	accel_unlock_all ( )	2030:2:62752:62770	19114	1	True				
ANR	19370	CallExpression	accel_unlock_all ( )		19114	0					
ANR	19371	Callee	accel_unlock_all		19114	0					
ANR	19372	Identifier	accel_unlock_all		19114	0					
ANR	19373	ArgumentList			19114	1					
ANR	19374	ExpressionStatement	ZCG ( counted ) = 0	2031:2:62774:62790	19114	2	True				
ANR	19375	AssignmentExpression	ZCG ( counted ) = 0		19114	0		=			
ANR	19376	CallExpression	ZCG ( counted )		19114	0					
ANR	19377	Callee	ZCG		19114	0					
ANR	19378	Identifier	ZCG		19114	0					
ANR	19379	ArgumentList	counted		19114	1					
ANR	19380	Argument	counted		19114	0					
ANR	19381	Identifier	counted		19114	0					
ANR	19382	PrimaryExpression	0		19114	1					
ANR	19383	IfStatement	if ( ZCSG ( restart_pending ) )		19114	16					
ANR	19384	Condition	ZCSG ( restart_pending )	2034:5:62801:62821	19114	0	True				
ANR	19385	CallExpression	ZCSG ( restart_pending )		19114	0					
ANR	19386	Callee	ZCSG		19114	0					
ANR	19387	Identifier	ZCSG		19114	0					
ANR	19388	ArgumentList	restart_pending		19114	1					
ANR	19389	Argument	restart_pending		19114	0					
ANR	19390	Identifier	restart_pending		19114	0					
ANR	19391	CompoundStatement		48:28:1356:1356	19114	1					
ANR	19392	ExpressionStatement	zend_shared_alloc_lock ( )	2035:2:62828:62852	19114	0	True				
ANR	19393	CallExpression	zend_shared_alloc_lock ( )		19114	0					
ANR	19394	Callee	zend_shared_alloc_lock		19114	0					
ANR	19395	Identifier	zend_shared_alloc_lock		19114	0					
ANR	19396	ArgumentList			19114	1					
ANR	19397	IfStatement	if ( ZCSG ( restart_pending ) != 0 )		19114	1					
ANR	19398	Condition	ZCSG ( restart_pending ) != 0	2036:6:62860:62885	19114	0	True				
ANR	19399	EqualityExpression	ZCSG ( restart_pending ) != 0		19114	0		!=			
ANR	19400	CallExpression	ZCSG ( restart_pending )		19114	0					
ANR	19401	Callee	ZCSG		19114	0					
ANR	19402	Identifier	ZCSG		19114	0					
ANR	19403	ArgumentList	restart_pending		19114	1					
ANR	19404	Argument	restart_pending		19114	0					
ANR	19405	Identifier	restart_pending		19114	0					
ANR	19406	PrimaryExpression	0		19114	1					
ANR	19407	CompoundStatement		50:34:1420:1420	19114	1					
ANR	19408	IfStatement	if ( accel_is_inactive ( ) == SUCCESS )		19114	0					
ANR	19409	Condition	accel_is_inactive ( ) == SUCCESS	2037:7:62983:63012	19114	0	True				
ANR	19410	EqualityExpression	accel_is_inactive ( ) == SUCCESS		19114	0		==			
ANR	19411	CallExpression	accel_is_inactive ( )		19114	0					
ANR	19412	Callee	accel_is_inactive		19114	0					
ANR	19413	Identifier	accel_is_inactive		19114	0					
ANR	19414	ArgumentList			19114	1					
ANR	19415	Identifier	SUCCESS		19114	1					
ANR	19416	CompoundStatement		51:39:1547:1547	19114	1					
ANR	19417	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""Restarting!"" )"	2038:4:63021:63069	19114	0	True				
ANR	19418	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""Restarting!"" )"		19114	0					
ANR	19419	Callee	zend_accel_error		19114	0					
ANR	19420	Identifier	zend_accel_error		19114	0					
ANR	19421	ArgumentList	ACCEL_LOG_DEBUG		19114	1					
ANR	19422	Argument	ACCEL_LOG_DEBUG		19114	0					
ANR	19423	Identifier	ACCEL_LOG_DEBUG		19114	0					
ANR	19424	Argument	"""Restarting!"""		19114	1					
ANR	19425	PrimaryExpression	"""Restarting!"""		19114	0					
ANR	19426	ExpressionStatement	ZCSG ( restart_pending ) = 0	2039:4:63075:63100	19114	1	True				
ANR	19427	AssignmentExpression	ZCSG ( restart_pending ) = 0		19114	0		=			
ANR	19428	CallExpression	ZCSG ( restart_pending )		19114	0					
ANR	19429	Callee	ZCSG		19114	0					
ANR	19430	Identifier	ZCSG		19114	0					
ANR	19431	ArgumentList	restart_pending		19114	1					
ANR	19432	Argument	restart_pending		19114	0					
ANR	19433	Identifier	restart_pending		19114	0					
ANR	19434	PrimaryExpression	0		19114	1					
ANR	19435	Statement	switch	2040:4:63106:63111	19114	2	True				
ANR	19436	Statement	ZCSG	2040:11:63113:63116	19114	3	True				
ANR	19437	Statement	(	2040:15:63117:63117	19114	4	True				
ANR	19438	Statement	restart_reason	2040:16:63118:63131	19114	5	True				
ANR	19439	Statement	)	2040:30:63132:63132	19114	6	True				
ANR	19440	CompoundStatement		54:32:1666:1666	19114	7					
ANR	19441	Label	case ACCEL_RESTART_OOM :	2041:5:63141:63163	19114	0	True				
ANR	19442	Identifier	ACCEL_RESTART_OOM		19114	0					
ANR	19443	ExpressionStatement	ZCSG ( oom_restarts ) ++	2042:6:63171:63191	19114	1	True				
ANR	19444	PostIncDecOperationExpression	ZCSG ( oom_restarts ) ++		19114	0					
ANR	19445	CallExpression	ZCSG ( oom_restarts )		19114	0					
ANR	19446	Callee	ZCSG		19114	0					
ANR	19447	Identifier	ZCSG		19114	0					
ANR	19448	ArgumentList	oom_restarts		19114	1					
ANR	19449	Argument	oom_restarts		19114	0					
ANR	19450	Identifier	oom_restarts		19114	0					
ANR	19451	IncDec	++		19114	1					
ANR	19452	BreakStatement	break ;	2043:6:63199:63204	19114	2	True				
ANR	19453	Label	case ACCEL_RESTART_HASH :	2044:5:63211:63234	19114	3	True				
ANR	19454	Identifier	ACCEL_RESTART_HASH		19114	0					
ANR	19455	ExpressionStatement	ZCSG ( hash_restarts ) ++	2045:6:63242:63263	19114	4	True				
ANR	19456	PostIncDecOperationExpression	ZCSG ( hash_restarts ) ++		19114	0					
ANR	19457	CallExpression	ZCSG ( hash_restarts )		19114	0					
ANR	19458	Callee	ZCSG		19114	0					
ANR	19459	Identifier	ZCSG		19114	0					
ANR	19460	ArgumentList	hash_restarts		19114	1					
ANR	19461	Argument	hash_restarts		19114	0					
ANR	19462	Identifier	hash_restarts		19114	0					
ANR	19463	IncDec	++		19114	1					
ANR	19464	BreakStatement	break ;	2046:6:63271:63276	19114	5	True				
ANR	19465	Label	case ACCEL_RESTART_USER :	2047:5:63283:63306	19114	6	True				
ANR	19466	Identifier	ACCEL_RESTART_USER		19114	0					
ANR	19467	ExpressionStatement	ZCSG ( manual_restarts ) ++	2048:6:63314:63337	19114	7	True				
ANR	19468	PostIncDecOperationExpression	ZCSG ( manual_restarts ) ++		19114	0					
ANR	19469	CallExpression	ZCSG ( manual_restarts )		19114	0					
ANR	19470	Callee	ZCSG		19114	0					
ANR	19471	Identifier	ZCSG		19114	0					
ANR	19472	ArgumentList	manual_restarts		19114	1					
ANR	19473	Argument	manual_restarts		19114	0					
ANR	19474	Identifier	manual_restarts		19114	0					
ANR	19475	IncDec	++		19114	1					
ANR	19476	BreakStatement	break ;	2049:6:63345:63350	19114	8	True				
ANR	19477	ExpressionStatement	accel_restart_enter ( )	2051:4:63362:63383	19114	8	True				
ANR	19478	CallExpression	accel_restart_enter ( )		19114	0					
ANR	19479	Callee	accel_restart_enter		19114	0					
ANR	19480	Identifier	accel_restart_enter		19114	0					
ANR	19481	ArgumentList			19114	1					
ANR	19482	ExpressionStatement	zend_reset_cache_vars ( )	2053:4:63390:63413	19114	9	True				
ANR	19483	CallExpression	zend_reset_cache_vars ( )		19114	0					
ANR	19484	Callee	zend_reset_cache_vars		19114	0					
ANR	19485	Identifier	zend_reset_cache_vars		19114	0					
ANR	19486	ArgumentList			19114	1					
ANR	19487	ExpressionStatement	zend_accel_hash_clean ( & ZCSG ( hash ) )	2054:4:63419:63453	19114	10	True				
ANR	19488	CallExpression	zend_accel_hash_clean ( & ZCSG ( hash ) )		19114	0					
ANR	19489	Callee	zend_accel_hash_clean		19114	0					
ANR	19490	Identifier	zend_accel_hash_clean		19114	0					
ANR	19491	ArgumentList	& ZCSG ( hash )		19114	1					
ANR	19492	Argument	& ZCSG ( hash )		19114	0					
ANR	19493	UnaryOperationExpression	& ZCSG ( hash )		19114	0					
ANR	19494	UnaryOperator	&		19114	0					
ANR	19495	CallExpression	ZCSG ( hash )		19114	1					
ANR	19496	Callee	ZCSG		19114	0					
ANR	19497	Identifier	ZCSG		19114	0					
ANR	19498	ArgumentList	hash		19114	1					
ANR	19499	Argument	hash		19114	0					
ANR	19500	Identifier	hash		19114	0					
ANR	19501	IfStatement	if ( ZCG ( accel_directives ) . interned_strings_buffer )		19114	11					
ANR	19502	Condition	ZCG ( accel_directives ) . interned_strings_buffer	2057:8:63482:63526	19114	0	True				
ANR	19503	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		19114	0					
ANR	19504	CallExpression	ZCG ( accel_directives )		19114	0					
ANR	19505	Callee	ZCG		19114	0					
ANR	19506	Identifier	ZCG		19114	0					
ANR	19507	ArgumentList	accel_directives		19114	1					
ANR	19508	Argument	accel_directives		19114	0					
ANR	19509	Identifier	accel_directives		19114	0					
ANR	19510	Identifier	interned_strings_buffer		19114	1					
ANR	19511	CompoundStatement		71:55:2061:2061	19114	1					
ANR	19512	ExpressionStatement	accel_interned_strings_restore_state ( )	2058:5:63536:63574	19114	0	True				
ANR	19513	CallExpression	accel_interned_strings_restore_state ( )		19114	0					
ANR	19514	Callee	accel_interned_strings_restore_state		19114	0					
ANR	19515	Identifier	accel_interned_strings_restore_state		19114	0					
ANR	19516	ArgumentList			19114	1					
ANR	19517	ExpressionStatement	zend_shared_alloc_restore_state ( )	2062:4:63594:63627	19114	12	True				
ANR	19518	CallExpression	zend_shared_alloc_restore_state ( )		19114	0					
ANR	19519	Callee	zend_shared_alloc_restore_state		19114	0					
ANR	19520	Identifier	zend_shared_alloc_restore_state		19114	0					
ANR	19521	ArgumentList			19114	1					
ANR	19522	ExpressionStatement	ZCSG ( accelerator_enabled ) = ZCSG ( cache_status_before_restart )	2063:4:63633:63694	19114	13	True				
ANR	19523	AssignmentExpression	ZCSG ( accelerator_enabled ) = ZCSG ( cache_status_before_restart )		19114	0		=			
ANR	19524	CallExpression	ZCSG ( accelerator_enabled )		19114	0					
ANR	19525	Callee	ZCSG		19114	0					
ANR	19526	Identifier	ZCSG		19114	0					
ANR	19527	ArgumentList	accelerator_enabled		19114	1					
ANR	19528	Argument	accelerator_enabled		19114	0					
ANR	19529	Identifier	accelerator_enabled		19114	0					
ANR	19530	CallExpression	ZCSG ( cache_status_before_restart )		19114	1					
ANR	19531	Callee	ZCSG		19114	0					
ANR	19532	Identifier	ZCSG		19114	0					
ANR	19533	ArgumentList	cache_status_before_restart		19114	1					
ANR	19534	Argument	cache_status_before_restart		19114	0					
ANR	19535	Identifier	cache_status_before_restart		19114	0					
ANR	19536	IfStatement	if ( ZCSG ( last_restart_time ) < ZCG ( request_time ) )		19114	14					
ANR	19537	Condition	ZCSG ( last_restart_time ) < ZCG ( request_time )	2064:8:63704:63746	19114	0	True				
ANR	19538	RelationalExpression	ZCSG ( last_restart_time ) < ZCG ( request_time )		19114	0		<			
ANR	19539	CallExpression	ZCSG ( last_restart_time )		19114	0					
ANR	19540	Callee	ZCSG		19114	0					
ANR	19541	Identifier	ZCSG		19114	0					
ANR	19542	ArgumentList	last_restart_time		19114	1					
ANR	19543	Argument	last_restart_time		19114	0					
ANR	19544	Identifier	last_restart_time		19114	0					
ANR	19545	CallExpression	ZCG ( request_time )		19114	1					
ANR	19546	Callee	ZCG		19114	0					
ANR	19547	Identifier	ZCG		19114	0					
ANR	19548	ArgumentList	request_time		19114	1					
ANR	19549	Argument	request_time		19114	0					
ANR	19550	Identifier	request_time		19114	0					
ANR	19551	CompoundStatement		78:53:2281:2281	19114	1					
ANR	19552	ExpressionStatement	ZCSG ( last_restart_time ) = ZCG ( request_time )	2065:5:63756:63799	19114	0	True				
ANR	19553	AssignmentExpression	ZCSG ( last_restart_time ) = ZCG ( request_time )		19114	0		=			
ANR	19554	CallExpression	ZCSG ( last_restart_time )		19114	0					
ANR	19555	Callee	ZCSG		19114	0					
ANR	19556	Identifier	ZCSG		19114	0					
ANR	19557	ArgumentList	last_restart_time		19114	1					
ANR	19558	Argument	last_restart_time		19114	0					
ANR	19559	Identifier	last_restart_time		19114	0					
ANR	19560	CallExpression	ZCG ( request_time )		19114	1					
ANR	19561	Callee	ZCG		19114	0					
ANR	19562	Identifier	ZCG		19114	0					
ANR	19563	ArgumentList	request_time		19114	1					
ANR	19564	Argument	request_time		19114	0					
ANR	19565	Identifier	request_time		19114	0					
ANR	19566	ElseStatement	else		19114	0					
ANR	19567	CompoundStatement		80:11:2344:2344	19114	0					
ANR	19568	ExpressionStatement	ZCSG ( last_restart_time ) ++	2067:5:63819:63844	19114	0	True				
ANR	19569	PostIncDecOperationExpression	ZCSG ( last_restart_time ) ++		19114	0					
ANR	19570	CallExpression	ZCSG ( last_restart_time )		19114	0					
ANR	19571	Callee	ZCSG		19114	0					
ANR	19572	Identifier	ZCSG		19114	0					
ANR	19573	ArgumentList	last_restart_time		19114	1					
ANR	19574	Argument	last_restart_time		19114	0					
ANR	19575	Identifier	last_restart_time		19114	0					
ANR	19576	IncDec	++		19114	1					
ANR	19577	ExpressionStatement	accel_restart_leave ( )	2069:4:63856:63877	19114	15	True				
ANR	19578	CallExpression	accel_restart_leave ( )		19114	0					
ANR	19579	Callee	accel_restart_leave		19114	0					
ANR	19580	Identifier	accel_restart_leave		19114	0					
ANR	19581	ArgumentList			19114	1					
ANR	19582	ElseStatement	else		19114	0					
ANR	19583	CompoundStatement		85:9:2425:2425	19114	0					
ANR	19584	ExpressionStatement	reset_pcre = 1	2072:3:63898:63912	19114	0	True				
ANR	19585	AssignmentExpression	reset_pcre = 1		19114	0		=			
ANR	19586	Identifier	reset_pcre		19114	0					
ANR	19587	PrimaryExpression	1		19114	1					
ANR	19588	ExpressionStatement	zend_shared_alloc_unlock ( )	2074:2:63920:63946	19114	2	True				
ANR	19589	CallExpression	zend_shared_alloc_unlock ( )		19114	0					
ANR	19590	Callee	zend_shared_alloc_unlock		19114	0					
ANR	19591	Identifier	zend_shared_alloc_unlock		19114	0					
ANR	19592	ArgumentList			19114	1					
ANR	19593	ExpressionStatement	SHM_PROTECT ( )	2077:1:63953:63966	19114	17	True				
ANR	19594	CallExpression	SHM_PROTECT ( )		19114	0					
ANR	19595	Callee	SHM_PROTECT		19114	0					
ANR	19596	Identifier	SHM_PROTECT		19114	0					
ANR	19597	ArgumentList			19114	1					
ANR	19598	IfStatement	if ( ZCSG ( last_restart_time ) != ZCG ( last_restart_time ) )		19114	18					
ANR	19599	Condition	ZCSG ( last_restart_time ) != ZCG ( last_restart_time )	2079:5:63974:64022	19114	0	True				
ANR	19600	EqualityExpression	ZCSG ( last_restart_time ) != ZCG ( last_restart_time )		19114	0		!=			
ANR	19601	CallExpression	ZCSG ( last_restart_time )		19114	0					
ANR	19602	Callee	ZCSG		19114	0					
ANR	19603	Identifier	ZCSG		19114	0					
ANR	19604	ArgumentList	last_restart_time		19114	1					
ANR	19605	Argument	last_restart_time		19114	0					
ANR	19606	Identifier	last_restart_time		19114	0					
ANR	19607	CallExpression	ZCG ( last_restart_time )		19114	1					
ANR	19608	Callee	ZCG		19114	0					
ANR	19609	Identifier	ZCG		19114	0					
ANR	19610	ArgumentList	last_restart_time		19114	1					
ANR	19611	Argument	last_restart_time		19114	0					
ANR	19612	Identifier	last_restart_time		19114	0					
ANR	19613	CompoundStatement		93:56:2557:2557	19114	1					
ANR	19614	ExpressionStatement	ZCG ( last_restart_time ) = ZCSG ( last_restart_time )	2081:2:64060:64108	19114	0	True				
ANR	19615	AssignmentExpression	ZCG ( last_restart_time ) = ZCSG ( last_restart_time )		19114	0		=			
ANR	19616	CallExpression	ZCG ( last_restart_time )		19114	0					
ANR	19617	Callee	ZCG		19114	0					
ANR	19618	Identifier	ZCG		19114	0					
ANR	19619	ArgumentList	last_restart_time		19114	1					
ANR	19620	Argument	last_restart_time		19114	0					
ANR	19621	Identifier	last_restart_time		19114	0					
ANR	19622	CallExpression	ZCSG ( last_restart_time )		19114	1					
ANR	19623	Callee	ZCSG		19114	0					
ANR	19624	Identifier	ZCSG		19114	0					
ANR	19625	ArgumentList	last_restart_time		19114	1					
ANR	19626	Argument	last_restart_time		19114	0					
ANR	19627	Identifier	last_restart_time		19114	0					
ANR	19628	ExpressionStatement	realpath_cache_clean ( )	2084:2:64153:64175	19114	1	True				
ANR	19629	CallExpression	realpath_cache_clean ( )		19114	0					
ANR	19630	Callee	realpath_cache_clean		19114	0					
ANR	19631	Identifier	realpath_cache_clean		19114	0					
ANR	19632	ArgumentList			19114	1					
ANR	19633	ExpressionStatement	accel_reset_pcre_cache ( )	2086:2:64180:64204	19114	2	True				
ANR	19634	CallExpression	accel_reset_pcre_cache ( )		19114	0					
ANR	19635	Callee	accel_reset_pcre_cache		19114	0					
ANR	19636	Identifier	accel_reset_pcre_cache		19114	0					
ANR	19637	ArgumentList			19114	1					
ANR	19638	ElseStatement	else		19114	0					
ANR	19639	IfStatement	if ( reset_pcre )		19114	0					
ANR	19640	Condition	reset_pcre	2087:12:64218:64227	19114	0	True				
ANR	19641	Identifier	reset_pcre		19114	0					
ANR	19642	CompoundStatement		101:24:2762:2762	19114	1					
ANR	19643	ExpressionStatement	accel_reset_pcre_cache ( )	2088:2:64234:64258	19114	0	True				
ANR	19644	CallExpression	accel_reset_pcre_cache ( )		19114	0					
ANR	19645	Callee	accel_reset_pcre_cache		19114	0					
ANR	19646	Identifier	accel_reset_pcre_cache		19114	0					
ANR	19647	ArgumentList			19114	1					
ANR	19648	ReturnType	static void		19114	1					
ANR	19649	Identifier	accel_activate		19114	2					
ANR	19650	ParameterList			19114	3					
ANR	19651	CFGEntryNode	ENTRY		19114		True				
ANR	19652	CFGExitNode	EXIT		19114		True				
ANR	19653	CFGErrorNode	ERROR		19114		True				
ANR	19654	Symbol	accel_startup_ok		19114						
ANR	19655	Symbol	reset_pcre		19114						
ANR	19656	Symbol	include_path_check		19114						
ANR	19657	Symbol	cache_status_before_restart		19114						
ANR	19658	Symbol	include_path_key_len		19114						
ANR	19659	Symbol	internal_functions_count		19114						
ANR	19660	Symbol	cache_persistent_script		19114						
ANR	19661	Symbol	enabled		19114						
ANR	19662	Symbol	tsrm_thread_id		19114						
ANR	19663	Symbol	request_time		19114						
ANR	19664	Symbol	ZCSG		19114						
ANR	19665	Symbol	ACCEL_LOG_WARNING		19114						
ANR	19666	Symbol	ACCEL_LOG_DEBUG		19114						
ANR	19667	Symbol	ZEND_FUNCTION_DTOR		19114						
ANR	19668	Symbol	& ZCG		19114						
ANR	19669	Symbol	NULL		19114						
ANR	19670	Symbol	SUCCESS		19114						
ANR	19671	Symbol	CG		19114						
ANR	19672	Symbol	zend_hash_num_elements		19114						
ANR	19673	Symbol	restart_pending		19114						
ANR	19674	Symbol	cwd_check		19114						
ANR	19675	Symbol	cache_opline		19114						
ANR	19676	Symbol	cwd_key_len		19114						
ANR	19677	Symbol	accelerator_enabled		19114						
ANR	19678	Symbol	auto_globals_mask		19114						
ANR	19679	Symbol	cwd		19114						
ANR	19680	Symbol	& ZCSG		19114						
ANR	19681	Symbol	accel_is_inactive		19114						
ANR	19682	Symbol	oom_restarts		19114						
ANR	19683	Symbol	last_restart_time		19114						
ANR	19684	Symbol	counted		19114						
ANR	19685	Symbol	manual_restarts		19114						
ANR	19686	Symbol	ZCG ( accel_directives ) . interned_strings_buffer		19114						
ANR	19687	Symbol	function_table		19114						
ANR	19688	Symbol	ZCG ( accel_directives ) . file_cache_only		19114						
ANR	19689	Symbol	accel_directives		19114						
ANR	19690	Symbol	sapi_get_request_time		19114						
ANR	19691	Symbol	hash		19114						
ANR	19692	Symbol	ZCG		19114						
ANR	19693	Symbol	ZCG ( function_table ) . nTableSize		19114						
ANR	19694	Symbol	hash_restarts		19114						
ANR	19695	DeclStmt									
ANR	19696	Decl							void	void ( HashTable * ht )	accel_fast_hash_destroy
ANR	19697	Function	accel_fast_zval_dtor	2102:0:64580:65267							
ANR	19698	FunctionDef	accel_fast_zval_dtor (zval * zvalue)		19697	0					
ANR	19699	CompoundStatement		2103:0:64627:65267	19697	0					
ANR	19700	Label	tail_call :	2104:0:64629:64638	19697	0	True				
ANR	19701	Identifier	tail_call		19697	0					
ANR	19702	SwitchStatement	switch ( Z_TYPE_P ( zvalue ) )		19697	1					
ANR	19703	Condition	Z_TYPE_P ( zvalue )	2105:9:64649:64664	19697	0	True				
ANR	19704	CallExpression	Z_TYPE_P ( zvalue )		19697	0					
ANR	19705	Callee	Z_TYPE_P		19697	0					
ANR	19706	Identifier	Z_TYPE_P		19697	0					
ANR	19707	ArgumentList	zvalue		19697	1					
ANR	19708	Argument	zvalue		19697	0					
ANR	19709	Identifier	zvalue		19697	0					
ANR	19710	CompoundStatement		3:27:39:39	19697	1					
ANR	19711	Label	case IS_ARRAY :	2106:2:64671:64684	19697	0	True				
ANR	19712	Identifier	IS_ARRAY		19697	0					
ANR	19713	ExpressionStatement	GC_REMOVE_FROM_BUFFER ( Z_ARR_P ( zvalue ) )	2107:3:64689:64727	19697	1	True				
ANR	19714	CallExpression	GC_REMOVE_FROM_BUFFER ( Z_ARR_P ( zvalue ) )		19697	0					
ANR	19715	Callee	GC_REMOVE_FROM_BUFFER		19697	0					
ANR	19716	Identifier	GC_REMOVE_FROM_BUFFER		19697	0					
ANR	19717	ArgumentList	Z_ARR_P ( zvalue )		19697	1					
ANR	19718	Argument	Z_ARR_P ( zvalue )		19697	0					
ANR	19719	CallExpression	Z_ARR_P ( zvalue )		19697	0					
ANR	19720	Callee	Z_ARR_P		19697	0					
ANR	19721	Identifier	Z_ARR_P		19697	0					
ANR	19722	ArgumentList	zvalue		19697	1					
ANR	19723	Argument	zvalue		19697	0					
ANR	19724	Identifier	zvalue		19697	0					
ANR	19725	IfStatement	if ( Z_ARR_P ( zvalue ) != & EG ( symbol_table ) )		19697	2					
ANR	19726	Condition	Z_ARR_P ( zvalue ) != & EG ( symbol_table )	2108:7:64736:64771	19697	0	True				
ANR	19727	EqualityExpression	Z_ARR_P ( zvalue ) != & EG ( symbol_table )		19697	0		!=			
ANR	19728	CallExpression	Z_ARR_P ( zvalue )		19697	0					
ANR	19729	Callee	Z_ARR_P		19697	0					
ANR	19730	Identifier	Z_ARR_P		19697	0					
ANR	19731	ArgumentList	zvalue		19697	1					
ANR	19732	Argument	zvalue		19697	0					
ANR	19733	Identifier	zvalue		19697	0					
ANR	19734	UnaryOperationExpression	& EG ( symbol_table )		19697	1					
ANR	19735	UnaryOperator	&		19697	0					
ANR	19736	CallExpression	EG ( symbol_table )		19697	1					
ANR	19737	Callee	EG		19697	0					
ANR	19738	Identifier	EG		19697	0					
ANR	19739	ArgumentList	symbol_table		19697	1					
ANR	19740	Argument	symbol_table		19697	0					
ANR	19741	Identifier	symbol_table		19697	0					
ANR	19742	CompoundStatement		6:45:146:146	19697	1					
ANR	19743	ExpressionStatement	ZVAL_NULL ( zvalue )	2110:4:64812:64829	19697	0	True				
ANR	19744	CallExpression	ZVAL_NULL ( zvalue )		19697	0					
ANR	19745	Callee	ZVAL_NULL		19697	0					
ANR	19746	Identifier	ZVAL_NULL		19697	0					
ANR	19747	ArgumentList	zvalue		19697	1					
ANR	19748	Argument	zvalue		19697	0					
ANR	19749	Identifier	zvalue		19697	0					
ANR	19750	ExpressionStatement	accel_fast_hash_destroy ( Z_ARRVAL_P ( zvalue ) )	2111:4:64835:64878	19697	1	True				
ANR	19751	CallExpression	accel_fast_hash_destroy ( Z_ARRVAL_P ( zvalue ) )		19697	0					
ANR	19752	Callee	accel_fast_hash_destroy		19697	0					
ANR	19753	Identifier	accel_fast_hash_destroy		19697	0					
ANR	19754	ArgumentList	Z_ARRVAL_P ( zvalue )		19697	1					
ANR	19755	Argument	Z_ARRVAL_P ( zvalue )		19697	0					
ANR	19756	CallExpression	Z_ARRVAL_P ( zvalue )		19697	0					
ANR	19757	Callee	Z_ARRVAL_P		19697	0					
ANR	19758	Identifier	Z_ARRVAL_P		19697	0					
ANR	19759	ArgumentList	zvalue		19697	1					
ANR	19760	Argument	zvalue		19697	0					
ANR	19761	Identifier	zvalue		19697	0					
ANR	19762	BreakStatement	break ;	2113:3:64888:64893	19697	3	True				
ANR	19763	Label	case IS_OBJECT :	2114:2:64897:64911	19697	4	True				
ANR	19764	Identifier	IS_OBJECT		19697	0					
ANR	19765	ExpressionStatement	OBJ_RELEASE ( Z_OBJ_P ( zvalue ) )	2115:3:64916:64944	19697	5	True				
ANR	19766	CallExpression	OBJ_RELEASE ( Z_OBJ_P ( zvalue ) )		19697	0					
ANR	19767	Callee	OBJ_RELEASE		19697	0					
ANR	19768	Identifier	OBJ_RELEASE		19697	0					
ANR	19769	ArgumentList	Z_OBJ_P ( zvalue )		19697	1					
ANR	19770	Argument	Z_OBJ_P ( zvalue )		19697	0					
ANR	19771	CallExpression	Z_OBJ_P ( zvalue )		19697	0					
ANR	19772	Callee	Z_OBJ_P		19697	0					
ANR	19773	Identifier	Z_OBJ_P		19697	0					
ANR	19774	ArgumentList	zvalue		19697	1					
ANR	19775	Argument	zvalue		19697	0					
ANR	19776	Identifier	zvalue		19697	0					
ANR	19777	BreakStatement	break ;	2116:3:64949:64954	19697	6	True				
ANR	19778	Label	case IS_RESOURCE :	2117:2:64958:64974	19697	7	True				
ANR	19779	Identifier	IS_RESOURCE		19697	0					
ANR	19780	ExpressionStatement	zend_list_delete ( Z_RES_P ( zvalue ) )	2118:3:64979:65012	19697	8	True				
ANR	19781	CallExpression	zend_list_delete ( Z_RES_P ( zvalue ) )		19697	0					
ANR	19782	Callee	zend_list_delete		19697	0					
ANR	19783	Identifier	zend_list_delete		19697	0					
ANR	19784	ArgumentList	Z_RES_P ( zvalue )		19697	1					
ANR	19785	Argument	Z_RES_P ( zvalue )		19697	0					
ANR	19786	CallExpression	Z_RES_P ( zvalue )		19697	0					
ANR	19787	Callee	Z_RES_P		19697	0					
ANR	19788	Identifier	Z_RES_P		19697	0					
ANR	19789	ArgumentList	zvalue		19697	1					
ANR	19790	Argument	zvalue		19697	0					
ANR	19791	Identifier	zvalue		19697	0					
ANR	19792	BreakStatement	break ;	2119:3:65017:65022	19697	9	True				
ANR	19793	Label	case IS_REFERENCE :	2120:2:65026:65043	19697	10	True				
ANR	19794	Identifier	IS_REFERENCE		19697	0					
ANR	19795	CompoundStatement		19:4:423:460	19697	11					
ANR	19796	IdentifierDeclStatement	zend_reference * ref = Z_REF_P ( zvalue ) ;	2121:4:65051:65088	19697	0	True				
ANR	19797	IdentifierDecl	* ref = Z_REF_P ( zvalue )		19697	0					
ANR	19798	IdentifierDeclType	zend_reference *		19697	0					
ANR	19799	Identifier	ref		19697	1					
ANR	19800	AssignmentExpression	* ref = Z_REF_P ( zvalue )		19697	2		=			
ANR	19801	Identifier	ref		19697	0					
ANR	19802	CallExpression	Z_REF_P ( zvalue )		19697	1					
ANR	19803	Callee	Z_REF_P		19697	0					
ANR	19804	Identifier	Z_REF_P		19697	0					
ANR	19805	ArgumentList	zvalue		19697	1					
ANR	19806	Argument	zvalue		19697	0					
ANR	19807	Identifier	zvalue		19697	0					
ANR	19808	IfStatement	if ( -- GC_REFCOUNT ( ref ) == 0 )		19697	1					
ANR	19809	Condition	-- GC_REFCOUNT ( ref ) == 0	2123:8:65099:65121	19697	0	True				
ANR	19810	EqualityExpression	-- GC_REFCOUNT ( ref ) == 0		19697	0		==			
ANR	19811	UnaryExpression	-- GC_REFCOUNT ( ref )		19697	0					
ANR	19812	IncDec	--		19697	0					
ANR	19813	CallExpression	GC_REFCOUNT ( ref )		19697	1					
ANR	19814	Callee	GC_REFCOUNT		19697	0					
ANR	19815	Identifier	GC_REFCOUNT		19697	0					
ANR	19816	ArgumentList	ref		19697	1					
ANR	19817	Argument	ref		19697	0					
ANR	19818	Identifier	ref		19697	0					
ANR	19819	PrimaryExpression	0		19697	1					
ANR	19820	CompoundStatement		21:33:496:496	19697	1					
ANR	19821	IfStatement	if ( Z_REFCOUNTED ( ref -> val ) && Z_DELREF ( ref -> val ) == 0 )		19697	0					
ANR	19822	Condition	Z_REFCOUNTED ( ref -> val ) && Z_DELREF ( ref -> val ) == 0	2124:9:65135:65183	19697	0	True				
ANR	19823	AndExpression	Z_REFCOUNTED ( ref -> val ) && Z_DELREF ( ref -> val ) == 0		19697	0		&&			
ANR	19824	CallExpression	Z_REFCOUNTED ( ref -> val )		19697	0					
ANR	19825	Callee	Z_REFCOUNTED		19697	0					
ANR	19826	Identifier	Z_REFCOUNTED		19697	0					
ANR	19827	ArgumentList	ref -> val		19697	1					
ANR	19828	Argument	ref -> val		19697	0					
ANR	19829	PtrMemberAccess	ref -> val		19697	0					
ANR	19830	Identifier	ref		19697	0					
ANR	19831	Identifier	val		19697	1					
ANR	19832	EqualityExpression	Z_DELREF ( ref -> val ) == 0		19697	1		==			
ANR	19833	CallExpression	Z_DELREF ( ref -> val )		19697	0					
ANR	19834	Callee	Z_DELREF		19697	0					
ANR	19835	Identifier	Z_DELREF		19697	0					
ANR	19836	ArgumentList	ref -> val		19697	1					
ANR	19837	Argument	ref -> val		19697	0					
ANR	19838	PtrMemberAccess	ref -> val		19697	0					
ANR	19839	Identifier	ref		19697	0					
ANR	19840	Identifier	val		19697	1					
ANR	19841	PrimaryExpression	0		19697	1					
ANR	19842	CompoundStatement		22:60:558:558	19697	1					
ANR	19843	ExpressionStatement	zvalue = & ref -> val	2125:6:65194:65212	19697	0	True				
ANR	19844	AssignmentExpression	zvalue = & ref -> val		19697	0		=			
ANR	19845	Identifier	zvalue		19697	0					
ANR	19846	UnaryOperationExpression	& ref -> val		19697	1					
ANR	19847	UnaryOperator	&		19697	0					
ANR	19848	PtrMemberAccess	ref -> val		19697	1					
ANR	19849	Identifier	ref		19697	0					
ANR	19850	Identifier	val		19697	1					
ANR	19851	GotoStatement	goto tail_call ;	2126:6:65220:65234	19697	1	True				
ANR	19852	Identifier	tail_call		19697	0					
ANR	19853	BreakStatement	break ;	2130:3:65257:65262	19697	12	True				
ANR	19854	ReturnType	static void		19697	1					
ANR	19855	Identifier	accel_fast_zval_dtor		19697	2					
ANR	19856	ParameterList	zval * zvalue		19697	3					
ANR	19857	Parameter	zval * zvalue	2102:33:64613:64624	19697	0	True				
ANR	19858	ParameterType	zval *		19697	0					
ANR	19859	Identifier	zvalue		19697	1					
ANR	19860	CFGEntryNode	ENTRY		19697		True				
ANR	19861	CFGExitNode	EXIT		19697		True				
ANR	19862	Symbol	Z_OBJ_P		19697						
ANR	19863	Symbol	ref -> val		19697						
ANR	19864	Symbol	Z_ARR_P		19697						
ANR	19865	Symbol	symbol_table		19697						
ANR	19866	Symbol	zvalue		19697						
ANR	19867	Symbol	Z_TYPE_P		19697						
ANR	19868	Symbol	& EG		19697						
ANR	19869	Symbol	Z_REF_P		19697						
ANR	19870	Symbol	ref		19697						
ANR	19871	Symbol	& ref -> val		19697						
ANR	19872	Symbol	Z_ARRVAL_P		19697						
ANR	19873	Symbol	Z_RES_P		19697						
ANR	19874	Symbol	GC_REFCOUNT		19697						
ANR	19875	Symbol	* ref		19697						
ANR	19876	Symbol	Z_DELREF		19697						
ANR	19877	Symbol	Z_REFCOUNTED		19697						
ANR	19878	Function	accel_fast_hash_destroy	2134:0:65270:65505							
ANR	19879	FunctionDef	accel_fast_hash_destroy (HashTable * ht)		19878	0					
ANR	19880	CompoundStatement		2135:0:65321:65505	19878	0					
ANR	19881	IdentifierDeclStatement	Bucket * p = ht -> arData ;	2136:1:65324:65346	19878	0	True				
ANR	19882	IdentifierDecl	* p = ht -> arData		19878	0					
ANR	19883	IdentifierDeclType	Bucket *		19878	0					
ANR	19884	Identifier	p		19878	1					
ANR	19885	AssignmentExpression	* p = ht -> arData		19878	2		=			
ANR	19886	Identifier	p		19878	0					
ANR	19887	PtrMemberAccess	ht -> arData		19878	1					
ANR	19888	Identifier	ht		19878	0					
ANR	19889	Identifier	arData		19878	1					
ANR	19890	IdentifierDeclStatement	Bucket * end = p + ht -> nNumUsed ;	2137:1:65349:65379	19878	1	True				
ANR	19891	IdentifierDecl	* end = p + ht -> nNumUsed		19878	0					
ANR	19892	IdentifierDeclType	Bucket *		19878	0					
ANR	19893	Identifier	end		19878	1					
ANR	19894	AssignmentExpression	* end = p + ht -> nNumUsed		19878	2		=			
ANR	19895	Identifier	end		19878	0					
ANR	19896	AdditiveExpression	p + ht -> nNumUsed		19878	1		+			
ANR	19897	Identifier	p		19878	0					
ANR	19898	PtrMemberAccess	ht -> nNumUsed		19878	1					
ANR	19899	Identifier	ht		19878	0					
ANR	19900	Identifier	nNumUsed		19878	1					
ANR	19901	WhileStatement	while ( p != end )		19878	2					
ANR	19902	Condition	p != end	2139:8:65390:65397	19878	0	True				
ANR	19903	EqualityExpression	p != end		19878	0		!=			
ANR	19904	Identifier	p		19878	0					
ANR	19905	Identifier	end		19878	1					
ANR	19906	CompoundStatement		5:18:78:78	19878	1					
ANR	19907	IfStatement	if ( Z_REFCOUNTED ( p -> val ) && Z_DELREF ( p -> val ) == 0 )		19878	0					
ANR	19908	Condition	Z_REFCOUNTED ( p -> val ) && Z_DELREF ( p -> val ) == 0	2140:6:65408:65452	19878	0	True				
ANR	19909	AndExpression	Z_REFCOUNTED ( p -> val ) && Z_DELREF ( p -> val ) == 0		19878	0		&&			
ANR	19910	CallExpression	Z_REFCOUNTED ( p -> val )		19878	0					
ANR	19911	Callee	Z_REFCOUNTED		19878	0					
ANR	19912	Identifier	Z_REFCOUNTED		19878	0					
ANR	19913	ArgumentList	p -> val		19878	1					
ANR	19914	Argument	p -> val		19878	0					
ANR	19915	PtrMemberAccess	p -> val		19878	0					
ANR	19916	Identifier	p		19878	0					
ANR	19917	Identifier	val		19878	1					
ANR	19918	EqualityExpression	Z_DELREF ( p -> val ) == 0		19878	1		==			
ANR	19919	CallExpression	Z_DELREF ( p -> val )		19878	0					
ANR	19920	Callee	Z_DELREF		19878	0					
ANR	19921	Identifier	Z_DELREF		19878	0					
ANR	19922	ArgumentList	p -> val		19878	1					
ANR	19923	Argument	p -> val		19878	0					
ANR	19924	PtrMemberAccess	p -> val		19878	0					
ANR	19925	Identifier	p		19878	0					
ANR	19926	Identifier	val		19878	1					
ANR	19927	PrimaryExpression	0		19878	1					
ANR	19928	CompoundStatement		6:53:133:133	19878	1					
ANR	19929	ExpressionStatement	accel_fast_zval_dtor ( & p -> val )	2141:3:65460:65489	19878	0	True				
ANR	19930	CallExpression	accel_fast_zval_dtor ( & p -> val )		19878	0					
ANR	19931	Callee	accel_fast_zval_dtor		19878	0					
ANR	19932	Identifier	accel_fast_zval_dtor		19878	0					
ANR	19933	ArgumentList	& p -> val		19878	1					
ANR	19934	Argument	& p -> val		19878	0					
ANR	19935	UnaryOperationExpression	& p -> val		19878	0					
ANR	19936	UnaryOperator	&		19878	0					
ANR	19937	PtrMemberAccess	p -> val		19878	1					
ANR	19938	Identifier	p		19878	0					
ANR	19939	Identifier	val		19878	1					
ANR	19940	ExpressionStatement	p ++	2143:2:65497:65500	19878	1	True				
ANR	19941	PostIncDecOperationExpression	p ++		19878	0					
ANR	19942	Identifier	p		19878	0					
ANR	19943	IncDec	++		19878	1					
ANR	19944	ReturnType	static void		19878	1					
ANR	19945	Identifier	accel_fast_hash_destroy		19878	2					
ANR	19946	ParameterList	HashTable * ht		19878	3					
ANR	19947	Parameter	HashTable * ht	2134:36:65306:65318	19878	0	True				
ANR	19948	ParameterType	HashTable *		19878	0					
ANR	19949	Identifier	ht		19878	1					
ANR	19950	CFGEntryNode	ENTRY		19878		True				
ANR	19951	CFGExitNode	EXIT		19878		True				
ANR	19952	Symbol	p		19878						
ANR	19953	Symbol	* ht		19878						
ANR	19954	Symbol	ht -> arData		19878						
ANR	19955	Symbol	end		19878						
ANR	19956	Symbol	* p		19878						
ANR	19957	Symbol	ht		19878						
ANR	19958	Symbol	p -> val		19878						
ANR	19959	Symbol	ht -> nNumUsed		19878						
ANR	19960	Symbol	Z_DELREF		19878						
ANR	19961	Symbol	Z_REFCOUNTED		19878						
ANR	19962	Symbol	& p -> val		19878						
ANR	19963	Function	zend_accel_fast_del_bucket	2147:0:65508:65967							
ANR	19964	FunctionDef	"zend_accel_fast_del_bucket (HashTable * ht , uint32_t idx , Bucket * p)"		19963	0					
ANR	19965	CompoundStatement		2148:0:65594:65967	19963	0					
ANR	19966	IdentifierDeclStatement	uint32_t nIndex = p -> h | ht -> nTableMask ;	2149:1:65597:65636	19963	0	True				
ANR	19967	IdentifierDecl	nIndex = p -> h | ht -> nTableMask		19963	0					
ANR	19968	IdentifierDeclType	uint32_t		19963	0					
ANR	19969	Identifier	nIndex		19963	1					
ANR	19970	AssignmentExpression	nIndex = p -> h | ht -> nTableMask		19963	2		=			
ANR	19971	Identifier	nIndex		19963	0					
ANR	19972	InclusiveOrExpression	p -> h | ht -> nTableMask		19963	1		|			
ANR	19973	PtrMemberAccess	p -> h		19963	0					
ANR	19974	Identifier	p		19963	0					
ANR	19975	Identifier	h		19963	1					
ANR	19976	PtrMemberAccess	ht -> nTableMask		19963	1					
ANR	19977	Identifier	ht		19963	0					
ANR	19978	Identifier	nTableMask		19963	1					
ANR	19979	IdentifierDeclStatement	"uint32_t i = HT_HASH ( ht , nIndex ) ;"	2150:1:65639:65671	19963	1	True				
ANR	19980	IdentifierDecl	"i = HT_HASH ( ht , nIndex )"		19963	0					
ANR	19981	IdentifierDeclType	uint32_t		19963	0					
ANR	19982	Identifier	i		19963	1					
ANR	19983	AssignmentExpression	"i = HT_HASH ( ht , nIndex )"		19963	2		=			
ANR	19984	Identifier	i		19963	0					
ANR	19985	CallExpression	"HT_HASH ( ht , nIndex )"		19963	1					
ANR	19986	Callee	HT_HASH		19963	0					
ANR	19987	Identifier	HT_HASH		19963	0					
ANR	19988	ArgumentList	ht		19963	1					
ANR	19989	Argument	ht		19963	0					
ANR	19990	Identifier	ht		19963	0					
ANR	19991	Argument	nIndex		19963	1					
ANR	19992	Identifier	nIndex		19963	0					
ANR	19993	ExpressionStatement	ht -> nNumOfElements --	2152:1:65675:65695	19963	2	True				
ANR	19994	PostIncDecOperationExpression	ht -> nNumOfElements --		19963	0					
ANR	19995	PtrMemberAccess	ht -> nNumOfElements		19963	0					
ANR	19996	Identifier	ht		19963	0					
ANR	19997	Identifier	nNumOfElements		19963	1					
ANR	19998	IncDec	--		19963	1					
ANR	19999	IfStatement	if ( idx != i )		19963	3					
ANR	20000	Condition	idx != i	2153:5:65702:65709	19963	0	True				
ANR	20001	EqualityExpression	idx != i		19963	0		!=			
ANR	20002	Identifier	idx		19963	0					
ANR	20003	Identifier	i		19963	1					
ANR	20004	CompoundStatement		7:2:121:160	19963	1					
ANR	20005	IdentifierDeclStatement	"Bucket * prev = HT_HASH_TO_BUCKET ( ht , i ) ;"	2154:2:65716:65755	19963	0	True				
ANR	20006	IdentifierDecl	"* prev = HT_HASH_TO_BUCKET ( ht , i )"		19963	0					
ANR	20007	IdentifierDeclType	Bucket *		19963	0					
ANR	20008	Identifier	prev		19963	1					
ANR	20009	AssignmentExpression	"* prev = HT_HASH_TO_BUCKET ( ht , i )"		19963	2		=			
ANR	20010	Identifier	prev		19963	0					
ANR	20011	CallExpression	"HT_HASH_TO_BUCKET ( ht , i )"		19963	1					
ANR	20012	Callee	HT_HASH_TO_BUCKET		19963	0					
ANR	20013	Identifier	HT_HASH_TO_BUCKET		19963	0					
ANR	20014	ArgumentList	ht		19963	1					
ANR	20015	Argument	ht		19963	0					
ANR	20016	Identifier	ht		19963	0					
ANR	20017	Argument	i		19963	1					
ANR	20018	Identifier	i		19963	0					
ANR	20019	WhileStatement	while ( Z_NEXT ( prev -> val ) != idx )		19963	1					
ANR	20020	Condition	Z_NEXT ( prev -> val ) != idx	2155:9:65766:65789	19963	0	True				
ANR	20021	EqualityExpression	Z_NEXT ( prev -> val ) != idx		19963	0		!=			
ANR	20022	CallExpression	Z_NEXT ( prev -> val )		19963	0					
ANR	20023	Callee	Z_NEXT		19963	0					
ANR	20024	Identifier	Z_NEXT		19963	0					
ANR	20025	ArgumentList	prev -> val		19963	1					
ANR	20026	Argument	prev -> val		19963	0					
ANR	20027	PtrMemberAccess	prev -> val		19963	0					
ANR	20028	Identifier	prev		19963	0					
ANR	20029	Identifier	val		19963	1					
ANR	20030	Identifier	idx		19963	1					
ANR	20031	CompoundStatement		8:35:197:197	19963	1					
ANR	20032	ExpressionStatement	i = Z_NEXT ( prev -> val )	2156:3:65797:65818	19963	0	True				
ANR	20033	AssignmentExpression	i = Z_NEXT ( prev -> val )		19963	0		=			
ANR	20034	Identifier	i		19963	0					
ANR	20035	CallExpression	Z_NEXT ( prev -> val )		19963	1					
ANR	20036	Callee	Z_NEXT		19963	0					
ANR	20037	Identifier	Z_NEXT		19963	0					
ANR	20038	ArgumentList	prev -> val		19963	1					
ANR	20039	Argument	prev -> val		19963	0					
ANR	20040	PtrMemberAccess	prev -> val		19963	0					
ANR	20041	Identifier	prev		19963	0					
ANR	20042	Identifier	val		19963	1					
ANR	20043	ExpressionStatement	"prev = HT_HASH_TO_BUCKET ( ht , i )"	2157:3:65823:65854	19963	1	True				
ANR	20044	AssignmentExpression	"prev = HT_HASH_TO_BUCKET ( ht , i )"		19963	0		=			
ANR	20045	Identifier	prev		19963	0					
ANR	20046	CallExpression	"HT_HASH_TO_BUCKET ( ht , i )"		19963	1					
ANR	20047	Callee	HT_HASH_TO_BUCKET		19963	0					
ANR	20048	Identifier	HT_HASH_TO_BUCKET		19963	0					
ANR	20049	ArgumentList	ht		19963	1					
ANR	20050	Argument	ht		19963	0					
ANR	20051	Identifier	ht		19963	0					
ANR	20052	Argument	i		19963	1					
ANR	20053	Identifier	i		19963	0					
ANR	20054	ExpressionStatement	Z_NEXT ( prev -> val ) = Z_NEXT ( p -> val )	2159:2:65862:65896	19963	2	True				
ANR	20055	AssignmentExpression	Z_NEXT ( prev -> val ) = Z_NEXT ( p -> val )		19963	0		=			
ANR	20056	CallExpression	Z_NEXT ( prev -> val )		19963	0					
ANR	20057	Callee	Z_NEXT		19963	0					
ANR	20058	Identifier	Z_NEXT		19963	0					
ANR	20059	ArgumentList	prev -> val		19963	1					
ANR	20060	Argument	prev -> val		19963	0					
ANR	20061	PtrMemberAccess	prev -> val		19963	0					
ANR	20062	Identifier	prev		19963	0					
ANR	20063	Identifier	val		19963	1					
ANR	20064	CallExpression	Z_NEXT ( p -> val )		19963	1					
ANR	20065	Callee	Z_NEXT		19963	0					
ANR	20066	Identifier	Z_NEXT		19963	0					
ANR	20067	ArgumentList	p -> val		19963	1					
ANR	20068	Argument	p -> val		19963	0					
ANR	20069	PtrMemberAccess	p -> val		19963	0					
ANR	20070	Identifier	p		19963	0					
ANR	20071	Identifier	val		19963	1					
ANR	20072	ElseStatement	else		19963	0					
ANR	20073	CompoundStatement		13:9:312:312	19963	0					
ANR	20074	ExpressionStatement	"HT_HASH ( ht , p -> h | ht -> nTableMask ) = Z_NEXT ( p -> val )"	2161:2:65911:65962	19963	0	True				
ANR	20075	AssignmentExpression	"HT_HASH ( ht , p -> h | ht -> nTableMask ) = Z_NEXT ( p -> val )"		19963	0		=			
ANR	20076	CallExpression	"HT_HASH ( ht , p -> h | ht -> nTableMask )"		19963	0					
ANR	20077	Callee	HT_HASH		19963	0					
ANR	20078	Identifier	HT_HASH		19963	0					
ANR	20079	ArgumentList	ht		19963	1					
ANR	20080	Argument	ht		19963	0					
ANR	20081	Identifier	ht		19963	0					
ANR	20082	Argument	p -> h | ht -> nTableMask		19963	1					
ANR	20083	InclusiveOrExpression	p -> h | ht -> nTableMask		19963	0		|			
ANR	20084	PtrMemberAccess	p -> h		19963	0					
ANR	20085	Identifier	p		19963	0					
ANR	20086	Identifier	h		19963	1					
ANR	20087	PtrMemberAccess	ht -> nTableMask		19963	1					
ANR	20088	Identifier	ht		19963	0					
ANR	20089	Identifier	nTableMask		19963	1					
ANR	20090	CallExpression	Z_NEXT ( p -> val )		19963	1					
ANR	20091	Callee	Z_NEXT		19963	0					
ANR	20092	Identifier	Z_NEXT		19963	0					
ANR	20093	ArgumentList	p -> val		19963	1					
ANR	20094	Argument	p -> val		19963	0					
ANR	20095	PtrMemberAccess	p -> val		19963	0					
ANR	20096	Identifier	p		19963	0					
ANR	20097	Identifier	val		19963	1					
ANR	20098	ReturnType	static inline void		19963	1					
ANR	20099	Identifier	zend_accel_fast_del_bucket		19963	2					
ANR	20100	ParameterList	"HashTable * ht , uint32_t idx , Bucket * p"		19963	3					
ANR	20101	Parameter	HashTable * ht	2147:46:65554:65566	19963	0	True				
ANR	20102	ParameterType	HashTable *		19963	0					
ANR	20103	Identifier	ht		19963	1					
ANR	20104	Parameter	uint32_t idx	2147:61:65569:65580	19963	1	True				
ANR	20105	ParameterType	uint32_t		19963	0					
ANR	20106	Identifier	idx		19963	1					
ANR	20107	Parameter	Bucket * p	2147:75:65583:65591	19963	2	True				
ANR	20108	ParameterType	Bucket *		19963	0					
ANR	20109	Identifier	p		19963	1					
ANR	20110	CFGEntryNode	ENTRY		19963		True				
ANR	20111	CFGExitNode	EXIT		19963		True				
ANR	20112	Symbol	ht -> nTableMask		19963						
ANR	20113	Symbol	prev		19963						
ANR	20114	Symbol	prev -> val		19963						
ANR	20115	Symbol	nIndex		19963						
ANR	20116	Symbol	i		19963						
ANR	20117	Symbol	* prev		19963						
ANR	20118	Symbol	Z_NEXT		19963						
ANR	20119	Symbol	ht		19963						
ANR	20120	Symbol	p -> val		19963						
ANR	20121	Symbol	p		19963						
ANR	20122	Symbol	* ht		19963						
ANR	20123	Symbol	HT_HASH		19963						
ANR	20124	Symbol	* p		19963						
ANR	20125	Symbol	idx		19963						
ANR	20126	Symbol	p -> h		19963						
ANR	20127	Symbol	ht -> nNumOfElements		19963						
ANR	20128	Symbol	HT_HASH_TO_BUCKET		19963						
ANR	20129	Function	zend_accel_fast_shutdown	2165:0:65970:69425							
ANR	20130	FunctionDef	zend_accel_fast_shutdown ()		20129	0					
ANR	20131	CompoundStatement		2166:0:66013:69425	20129	0					
ANR	20132	IfStatement	if ( EG ( full_tables_cleanup ) )		20129	0					
ANR	20133	Condition	EG ( full_tables_cleanup )	2167:5:66020:66042	20129	0	True				
ANR	20134	CallExpression	EG ( full_tables_cleanup )		20129	0					
ANR	20135	Callee	EG		20129	0					
ANR	20136	Identifier	EG		20129	0					
ANR	20137	ArgumentList	full_tables_cleanup		20129	1					
ANR	20138	Argument	full_tables_cleanup		20129	0					
ANR	20139	Identifier	full_tables_cleanup		20129	0					
ANR	20140	CompoundStatement		2:30:31:31	20129	1					
ANR	20141	ReturnStatement	return ;	2168:2:66049:66055	20129	0	True				
ANR	20142	IfStatement	if ( EG ( objects_store ) . top > 1 || zend_hash_num_elements ( & EG ( regular_list ) ) > 0 )		20129	1					
ANR	20143	Condition	EG ( objects_store ) . top > 1 || zend_hash_num_elements ( & EG ( regular_list ) ) > 0	2171:5:66066:66139	20129	0	True				
ANR	20144	OrExpression	EG ( objects_store ) . top > 1 || zend_hash_num_elements ( & EG ( regular_list ) ) > 0		20129	0		||			
ANR	20145	RelationalExpression	EG ( objects_store ) . top > 1		20129	0		>			
ANR	20146	MemberAccess	EG ( objects_store ) . top		20129	0					
ANR	20147	CallExpression	EG ( objects_store )		20129	0					
ANR	20148	Callee	EG		20129	0					
ANR	20149	Identifier	EG		20129	0					
ANR	20150	ArgumentList	objects_store		20129	1					
ANR	20151	Argument	objects_store		20129	0					
ANR	20152	Identifier	objects_store		20129	0					
ANR	20153	Identifier	top		20129	1					
ANR	20154	PrimaryExpression	1		20129	1					
ANR	20155	RelationalExpression	zend_hash_num_elements ( & EG ( regular_list ) ) > 0		20129	1		>			
ANR	20156	CallExpression	zend_hash_num_elements ( & EG ( regular_list ) )		20129	0					
ANR	20157	Callee	zend_hash_num_elements		20129	0					
ANR	20158	Identifier	zend_hash_num_elements		20129	0					
ANR	20159	ArgumentList	& EG ( regular_list )		20129	1					
ANR	20160	Argument	& EG ( regular_list )		20129	0					
ANR	20161	UnaryOperationExpression	& EG ( regular_list )		20129	0					
ANR	20162	UnaryOperator	&		20129	0					
ANR	20163	CallExpression	EG ( regular_list )		20129	1					
ANR	20164	Callee	EG		20129	0					
ANR	20165	Identifier	EG		20129	0					
ANR	20166	ArgumentList	regular_list		20129	1					
ANR	20167	Argument	regular_list		20129	0					
ANR	20168	Identifier	regular_list		20129	0					
ANR	20169	PrimaryExpression	0		20129	1					
ANR	20170	CompoundStatement		6:81:128:128	20129	1					
ANR	20171	Statement	zend_try	2173:2:66225:66232	20129	0	True				
ANR	20172	CompoundStatement		8:11:220:220	20129	1					
ANR	20173	Statement	ZEND_HASH_REVERSE_FOREACH	2174:3:66239:66263	20129	0	True				
ANR	20174	Statement	(	2174:28:66264:66264	20129	1	True				
ANR	20175	Statement	&	2174:29:66265:66265	20129	2	True				
ANR	20176	Statement	EG	2174:30:66266:66267	20129	3	True				
ANR	20177	Statement	(	2174:32:66268:66268	20129	4	True				
ANR	20178	Statement	symbol_table	2174:33:66269:66280	20129	5	True				
ANR	20179	Statement	)	2174:45:66281:66281	20129	6	True				
ANR	20180	Statement	","	2174:46:66282:66282	20129	7	True				
ANR	20181	Statement	0	2174:48:66284:66284	20129	8	True				
ANR	20182	Statement	)	2174:49:66285:66285	20129	9	True				
ANR	20183	CompoundStatement		9:51:273:273	20129	10					
ANR	20184	IfStatement	if ( Z_REFCOUNTED ( _p -> val ) && Z_DELREF ( _p -> val ) == 0 )		20129	0					
ANR	20185	Condition	Z_REFCOUNTED ( _p -> val ) && Z_DELREF ( _p -> val ) == 0	2175:8:66297:66343	20129	0	True				
ANR	20186	AndExpression	Z_REFCOUNTED ( _p -> val ) && Z_DELREF ( _p -> val ) == 0		20129	0		&&			
ANR	20187	CallExpression	Z_REFCOUNTED ( _p -> val )		20129	0					
ANR	20188	Callee	Z_REFCOUNTED		20129	0					
ANR	20189	Identifier	Z_REFCOUNTED		20129	0					
ANR	20190	ArgumentList	_p -> val		20129	1					
ANR	20191	Argument	_p -> val		20129	0					
ANR	20192	PtrMemberAccess	_p -> val		20129	0					
ANR	20193	Identifier	_p		20129	0					
ANR	20194	Identifier	val		20129	1					
ANR	20195	EqualityExpression	Z_DELREF ( _p -> val ) == 0		20129	1		==			
ANR	20196	CallExpression	Z_DELREF ( _p -> val )		20129	0					
ANR	20197	Callee	Z_DELREF		20129	0					
ANR	20198	Identifier	Z_DELREF		20129	0					
ANR	20199	ArgumentList	_p -> val		20129	1					
ANR	20200	Argument	_p -> val		20129	0					
ANR	20201	PtrMemberAccess	_p -> val		20129	0					
ANR	20202	Identifier	_p		20129	0					
ANR	20203	Identifier	val		20129	1					
ANR	20204	PrimaryExpression	0		20129	1					
ANR	20205	CompoundStatement		10:57:332:332	20129	1					
ANR	20206	ExpressionStatement	accel_fast_zval_dtor ( & _p -> val )	2176:5:66353:66383	20129	0	True				
ANR	20207	CallExpression	accel_fast_zval_dtor ( & _p -> val )		20129	0					
ANR	20208	Callee	accel_fast_zval_dtor		20129	0					
ANR	20209	Identifier	accel_fast_zval_dtor		20129	0					
ANR	20210	ArgumentList	& _p -> val		20129	1					
ANR	20211	Argument	& _p -> val		20129	0					
ANR	20212	UnaryOperationExpression	& _p -> val		20129	0					
ANR	20213	UnaryOperator	&		20129	0					
ANR	20214	PtrMemberAccess	_p -> val		20129	1					
ANR	20215	Identifier	_p		20129	0					
ANR	20216	Identifier	val		20129	1					
ANR	20217	ExpressionStatement	"zend_accel_fast_del_bucket ( & EG ( symbol_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2178:4:66395:66468	20129	1	True				
ANR	20218	CallExpression	"zend_accel_fast_del_bucket ( & EG ( symbol_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		20129	0					
ANR	20219	Callee	zend_accel_fast_del_bucket		20129	0					
ANR	20220	Identifier	zend_accel_fast_del_bucket		20129	0					
ANR	20221	ArgumentList	& EG ( symbol_table )		20129	1					
ANR	20222	Argument	& EG ( symbol_table )		20129	0					
ANR	20223	UnaryOperationExpression	& EG ( symbol_table )		20129	0					
ANR	20224	UnaryOperator	&		20129	0					
ANR	20225	CallExpression	EG ( symbol_table )		20129	1					
ANR	20226	Callee	EG		20129	0					
ANR	20227	Identifier	EG		20129	0					
ANR	20228	ArgumentList	symbol_table		20129	1					
ANR	20229	Argument	symbol_table		20129	0					
ANR	20230	Identifier	symbol_table		20129	0					
ANR	20231	Argument	HT_IDX_TO_HASH ( _idx - 1 )		20129	1					
ANR	20232	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		20129	0					
ANR	20233	Callee	HT_IDX_TO_HASH		20129	0					
ANR	20234	Identifier	HT_IDX_TO_HASH		20129	0					
ANR	20235	ArgumentList	_idx - 1		20129	1					
ANR	20236	Argument	_idx - 1		20129	0					
ANR	20237	AdditiveExpression	_idx - 1		20129	0		-			
ANR	20238	Identifier	_idx		20129	0					
ANR	20239	PrimaryExpression	1		20129	1					
ANR	20240	Argument	_p		20129	2					
ANR	20241	Identifier	_p		20129	0					
ANR	20242	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2179:5:66475:66498	20129	11	True				
ANR	20243	CallExpression	ZEND_HASH_FOREACH_END ( )		20129	0					
ANR	20244	Callee	ZEND_HASH_FOREACH_END		20129	0					
ANR	20245	Identifier	ZEND_HASH_FOREACH_END		20129	0					
ANR	20246	ArgumentList			20129	1					
ANR	20247	ExpressionStatement	zend_end_try ( )	2180:4:66504:66518	20129	2	True				
ANR	20248	CallExpression	zend_end_try ( )		20129	0					
ANR	20249	Callee	zend_end_try		20129	0					
ANR	20250	Identifier	zend_end_try		20129	0					
ANR	20251	ArgumentList			20129	1					
ANR	20252	ExpressionStatement	"zend_hash_init ( & EG ( symbol_table ) , 8 , NULL , NULL , 0 )"	2181:2:66522:66573	20129	3	True				
ANR	20253	CallExpression	"zend_hash_init ( & EG ( symbol_table ) , 8 , NULL , NULL , 0 )"		20129	0					
ANR	20254	Callee	zend_hash_init		20129	0					
ANR	20255	Identifier	zend_hash_init		20129	0					
ANR	20256	ArgumentList	& EG ( symbol_table )		20129	1					
ANR	20257	Argument	& EG ( symbol_table )		20129	0					
ANR	20258	UnaryOperationExpression	& EG ( symbol_table )		20129	0					
ANR	20259	UnaryOperator	&		20129	0					
ANR	20260	CallExpression	EG ( symbol_table )		20129	1					
ANR	20261	Callee	EG		20129	0					
ANR	20262	Identifier	EG		20129	0					
ANR	20263	ArgumentList	symbol_table		20129	1					
ANR	20264	Argument	symbol_table		20129	0					
ANR	20265	Identifier	symbol_table		20129	0					
ANR	20266	Argument	8		20129	1					
ANR	20267	PrimaryExpression	8		20129	0					
ANR	20268	Argument	NULL		20129	2					
ANR	20269	Identifier	NULL		20129	0					
ANR	20270	Argument	NULL		20129	3					
ANR	20271	Identifier	NULL		20129	0					
ANR	20272	Argument	0		20129	4					
ANR	20273	PrimaryExpression	0		20129	0					
ANR	20274	Statement	ZEND_HASH_REVERSE_FOREACH	2183:2:66578:66602	20129	4	True				
ANR	20275	Statement	(	2183:27:66603:66603	20129	5	True				
ANR	20276	Statement	EG	2183:28:66604:66605	20129	6	True				
ANR	20277	Statement	(	2183:30:66606:66606	20129	7	True				
ANR	20278	Statement	function_table	2183:31:66607:66620	20129	8	True				
ANR	20279	Statement	)	2183:45:66621:66621	20129	9	True				
ANR	20280	Statement	","	2183:46:66622:66622	20129	10	True				
ANR	20281	Statement	0	2183:48:66624:66624	20129	11	True				
ANR	20282	Statement	)	2183:49:66625:66625	20129	12	True				
ANR	20283	CompoundStatement		19:3:618:654	20129	13					
ANR	20284	IdentifierDeclStatement	zend_function * func = Z_PTR ( _p -> val ) ;	2184:3:66632:66668	20129	0	True				
ANR	20285	IdentifierDecl	* func = Z_PTR ( _p -> val )		20129	0					
ANR	20286	IdentifierDeclType	zend_function *		20129	0					
ANR	20287	Identifier	func		20129	1					
ANR	20288	AssignmentExpression	* func = Z_PTR ( _p -> val )		20129	2		=			
ANR	20289	Identifier	func		20129	0					
ANR	20290	CallExpression	Z_PTR ( _p -> val )		20129	1					
ANR	20291	Callee	Z_PTR		20129	0					
ANR	20292	Identifier	Z_PTR		20129	0					
ANR	20293	ArgumentList	_p -> val		20129	1					
ANR	20294	Argument	_p -> val		20129	0					
ANR	20295	PtrMemberAccess	_p -> val		20129	0					
ANR	20296	Identifier	_p		20129	0					
ANR	20297	Identifier	val		20129	1					
ANR	20298	IfStatement	if ( func -> type == ZEND_INTERNAL_FUNCTION )		20129	1					
ANR	20299	Condition	func -> type == ZEND_INTERNAL_FUNCTION	2186:7:66678:66713	20129	0	True				
ANR	20300	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		20129	0		==			
ANR	20301	PtrMemberAccess	func -> type		20129	0					
ANR	20302	Identifier	func		20129	0					
ANR	20303	Identifier	type		20129	1					
ANR	20304	Identifier	ZEND_INTERNAL_FUNCTION		20129	1					
ANR	20305	CompoundStatement		21:45:702:702	20129	1					
ANR	20306	BreakStatement	break ;	2187:4:66722:66727	20129	0	True				
ANR	20307	ElseStatement	else		20129	0					
ANR	20308	CompoundStatement		23:10:725:725	20129	0					
ANR	20309	IfStatement	if ( func -> op_array . static_variables )		20129	0					
ANR	20310	Condition	func -> op_array . static_variables	2189:8:66749:66779	20129	0	True				
ANR	20311	MemberAccess	func -> op_array . static_variables		20129	0					
ANR	20312	PtrMemberAccess	func -> op_array		20129	0					
ANR	20313	Identifier	func		20129	0					
ANR	20314	Identifier	op_array		20129	1					
ANR	20315	Identifier	static_variables		20129	1					
ANR	20316	CompoundStatement		24:41:768:768	20129	1					
ANR	20317	IfStatement	if ( ! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE ) )		20129	0					
ANR	20318	Condition	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )	2190:9:66793:66857	20129	0	True				
ANR	20319	UnaryOperationExpression	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )		20129	0					
ANR	20320	UnaryOperator	!		20129	0					
ANR	20321	BitAndExpression	GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE		20129	1		&			
ANR	20322	CallExpression	GC_FLAGS ( func -> op_array . static_variables )		20129	0					
ANR	20323	Callee	GC_FLAGS		20129	0					
ANR	20324	Identifier	GC_FLAGS		20129	0					
ANR	20325	ArgumentList	func -> op_array . static_variables		20129	1					
ANR	20326	Argument	func -> op_array . static_variables		20129	0					
ANR	20327	MemberAccess	func -> op_array . static_variables		20129	0					
ANR	20328	PtrMemberAccess	func -> op_array		20129	0					
ANR	20329	Identifier	func		20129	0					
ANR	20330	Identifier	op_array		20129	1					
ANR	20331	Identifier	static_variables		20129	1					
ANR	20332	Identifier	IS_ARRAY_IMMUTABLE		20129	1					
ANR	20333	CompoundStatement		25:76:846:846	20129	1					
ANR	20334	IfStatement	if ( -- GC_REFCOUNT ( func -> op_array . static_variables ) == 0 )		20129	0					
ANR	20335	Condition	-- GC_REFCOUNT ( func -> op_array . static_variables ) == 0	2191:10:66872:66922	20129	0	True				
ANR	20336	EqualityExpression	-- GC_REFCOUNT ( func -> op_array . static_variables ) == 0		20129	0		==			
ANR	20337	UnaryExpression	-- GC_REFCOUNT ( func -> op_array . static_variables )		20129	0					
ANR	20338	IncDec	--		20129	0					
ANR	20339	CallExpression	GC_REFCOUNT ( func -> op_array . static_variables )		20129	1					
ANR	20340	Callee	GC_REFCOUNT		20129	0					
ANR	20341	Identifier	GC_REFCOUNT		20129	0					
ANR	20342	ArgumentList	func -> op_array . static_variables		20129	1					
ANR	20343	Argument	func -> op_array . static_variables		20129	0					
ANR	20344	MemberAccess	func -> op_array . static_variables		20129	0					
ANR	20345	PtrMemberAccess	func -> op_array		20129	0					
ANR	20346	Identifier	func		20129	0					
ANR	20347	Identifier	op_array		20129	1					
ANR	20348	Identifier	static_variables		20129	1					
ANR	20349	PrimaryExpression	0		20129	1					
ANR	20350	CompoundStatement		26:63:911:911	20129	1					
ANR	20351	ExpressionStatement	accel_fast_hash_destroy ( func -> op_array . static_variables )	2192:7:66934:66990	20129	0	True				
ANR	20352	CallExpression	accel_fast_hash_destroy ( func -> op_array . static_variables )		20129	0					
ANR	20353	Callee	accel_fast_hash_destroy		20129	0					
ANR	20354	Identifier	accel_fast_hash_destroy		20129	0					
ANR	20355	ArgumentList	func -> op_array . static_variables		20129	1					
ANR	20356	Argument	func -> op_array . static_variables		20129	0					
ANR	20357	MemberAccess	func -> op_array . static_variables		20129	0					
ANR	20358	PtrMemberAccess	func -> op_array		20129	0					
ANR	20359	Identifier	func		20129	0					
ANR	20360	Identifier	op_array		20129	1					
ANR	20361	Identifier	static_variables		20129	1					
ANR	20362	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( function_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2196:4:67017:67091	20129	1	True				
ANR	20363	CallExpression	"zend_accel_fast_del_bucket ( EG ( function_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		20129	0					
ANR	20364	Callee	zend_accel_fast_del_bucket		20129	0					
ANR	20365	Identifier	zend_accel_fast_del_bucket		20129	0					
ANR	20366	ArgumentList	EG ( function_table )		20129	1					
ANR	20367	Argument	EG ( function_table )		20129	0					
ANR	20368	CallExpression	EG ( function_table )		20129	0					
ANR	20369	Callee	EG		20129	0					
ANR	20370	Identifier	EG		20129	0					
ANR	20371	ArgumentList	function_table		20129	1					
ANR	20372	Argument	function_table		20129	0					
ANR	20373	Identifier	function_table		20129	0					
ANR	20374	Argument	HT_IDX_TO_HASH ( _idx - 1 )		20129	1					
ANR	20375	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		20129	0					
ANR	20376	Callee	HT_IDX_TO_HASH		20129	0					
ANR	20377	Identifier	HT_IDX_TO_HASH		20129	0					
ANR	20378	ArgumentList	_idx - 1		20129	1					
ANR	20379	Argument	_idx - 1		20129	0					
ANR	20380	AdditiveExpression	_idx - 1		20129	0		-			
ANR	20381	Identifier	_idx		20129	0					
ANR	20382	PrimaryExpression	1		20129	1					
ANR	20383	Argument	_p		20129	2					
ANR	20384	Identifier	_p		20129	0					
ANR	20385	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2198:4:67102:67125	20129	14	True				
ANR	20386	CallExpression	ZEND_HASH_FOREACH_END ( )		20129	0					
ANR	20387	Callee	ZEND_HASH_FOREACH_END		20129	0					
ANR	20388	Identifier	ZEND_HASH_FOREACH_END		20129	0					
ANR	20389	ArgumentList			20129	1					
ANR	20390	Statement	ZEND_HASH_REVERSE_FOREACH	2200:2:67130:67154	20129	15	True				
ANR	20391	Statement	(	2200:27:67155:67155	20129	16	True				
ANR	20392	Statement	EG	2200:28:67156:67157	20129	17	True				
ANR	20393	Statement	(	2200:30:67158:67158	20129	18	True				
ANR	20394	Statement	class_table	2200:31:67159:67169	20129	19	True				
ANR	20395	Statement	)	2200:42:67170:67170	20129	20	True				
ANR	20396	Statement	","	2200:43:67171:67171	20129	21	True				
ANR	20397	Statement	0	2200:45:67173:67173	20129	22	True				
ANR	20398	Statement	)	2200:46:67174:67174	20129	23	True				
ANR	20399	CompoundStatement		36:3:1167:1204	20129	24					
ANR	20400	IdentifierDeclStatement	zend_class_entry * ce = Z_PTR ( _p -> val ) ;	2201:3:67181:67218	20129	0	True				
ANR	20401	IdentifierDecl	* ce = Z_PTR ( _p -> val )		20129	0					
ANR	20402	IdentifierDeclType	zend_class_entry *		20129	0					
ANR	20403	Identifier	ce		20129	1					
ANR	20404	AssignmentExpression	* ce = Z_PTR ( _p -> val )		20129	2		=			
ANR	20405	Identifier	ce		20129	0					
ANR	20406	CallExpression	Z_PTR ( _p -> val )		20129	1					
ANR	20407	Callee	Z_PTR		20129	0					
ANR	20408	Identifier	Z_PTR		20129	0					
ANR	20409	ArgumentList	_p -> val		20129	1					
ANR	20410	Argument	_p -> val		20129	0					
ANR	20411	PtrMemberAccess	_p -> val		20129	0					
ANR	20412	Identifier	_p		20129	0					
ANR	20413	Identifier	val		20129	1					
ANR	20414	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		20129	1					
ANR	20415	Condition	ce -> type == ZEND_INTERNAL_CLASS	2203:7:67228:67258	20129	0	True				
ANR	20416	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		20129	0		==			
ANR	20417	PtrMemberAccess	ce -> type		20129	0					
ANR	20418	Identifier	ce		20129	0					
ANR	20419	Identifier	type		20129	1					
ANR	20420	Identifier	ZEND_INTERNAL_CLASS		20129	1					
ANR	20421	CompoundStatement		38:40:1247:1247	20129	1					
ANR	20422	BreakStatement	break ;	2204:4:67267:67272	20129	0	True				
ANR	20423	ElseStatement	else		20129	0					
ANR	20424	CompoundStatement		40:10:1270:1270	20129	0					
ANR	20425	IfStatement	if ( ce -> ce_flags & ZEND_HAS_STATIC_IN_METHODS )		20129	0					
ANR	20426	Condition	ce -> ce_flags & ZEND_HAS_STATIC_IN_METHODS	2206:8:67294:67334	20129	0	True				
ANR	20427	BitAndExpression	ce -> ce_flags & ZEND_HAS_STATIC_IN_METHODS		20129	0		&			
ANR	20428	PtrMemberAccess	ce -> ce_flags		20129	0					
ANR	20429	Identifier	ce		20129	0					
ANR	20430	Identifier	ce_flags		20129	1					
ANR	20431	Identifier	ZEND_HAS_STATIC_IN_METHODS		20129	1					
ANR	20432	CompoundStatement		42:5:1330:1349	20129	1					
ANR	20433	IdentifierDeclStatement	zend_function * func ;	2207:5:67344:67363	20129	0	True				
ANR	20434	IdentifierDecl	* func		20129	0					
ANR	20435	IdentifierDeclType	zend_function *		20129	0					
ANR	20436	Identifier	func		20129	1					
ANR	20437	Statement	ZEND_HASH_FOREACH_PTR	2209:5:67371:67391	20129	1	True				
ANR	20438	Statement	(	2209:26:67392:67392	20129	2	True				
ANR	20439	Statement	&	2209:27:67393:67393	20129	3	True				
ANR	20440	Statement	ce	2209:28:67394:67395	20129	4	True				
ANR	20441	Statement	->	2209:30:67396:67397	20129	5	True				
ANR	20442	Statement	function_table	2209:32:67398:67411	20129	6	True				
ANR	20443	Statement	","	2209:46:67412:67412	20129	7	True				
ANR	20444	Statement	func	2209:48:67414:67417	20129	8	True				
ANR	20445	Statement	)	2209:52:67418:67418	20129	9	True				
ANR	20446	CompoundStatement		44:54:1406:1406	20129	10					
ANR	20447	IfStatement	if ( func -> type == ZEND_USER_FUNCTION )		20129	0					
ANR	20448	Condition	func -> type == ZEND_USER_FUNCTION	2210:10:67432:67463	20129	0	True				
ANR	20449	EqualityExpression	func -> type == ZEND_USER_FUNCTION		20129	0		==			
ANR	20450	PtrMemberAccess	func -> type		20129	0					
ANR	20451	Identifier	func		20129	0					
ANR	20452	Identifier	type		20129	1					
ANR	20453	Identifier	ZEND_USER_FUNCTION		20129	1					
ANR	20454	CompoundStatement		45:44:1452:1452	20129	1					
ANR	20455	IfStatement	if ( func -> op_array . static_variables )		20129	0					
ANR	20456	Condition	func -> op_array . static_variables	2211:11:67479:67509	20129	0	True				
ANR	20457	MemberAccess	func -> op_array . static_variables		20129	0					
ANR	20458	PtrMemberAccess	func -> op_array		20129	0					
ANR	20459	Identifier	func		20129	0					
ANR	20460	Identifier	op_array		20129	1					
ANR	20461	Identifier	static_variables		20129	1					
ANR	20462	CompoundStatement		46:44:1498:1498	20129	1					
ANR	20463	IfStatement	if ( ! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE ) )		20129	0					
ANR	20464	Condition	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )	2212:12:67526:67590	20129	0	True				
ANR	20465	UnaryOperationExpression	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )		20129	0					
ANR	20466	UnaryOperator	!		20129	0					
ANR	20467	BitAndExpression	GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE		20129	1		&			
ANR	20468	CallExpression	GC_FLAGS ( func -> op_array . static_variables )		20129	0					
ANR	20469	Callee	GC_FLAGS		20129	0					
ANR	20470	Identifier	GC_FLAGS		20129	0					
ANR	20471	ArgumentList	func -> op_array . static_variables		20129	1					
ANR	20472	Argument	func -> op_array . static_variables		20129	0					
ANR	20473	MemberAccess	func -> op_array . static_variables		20129	0					
ANR	20474	PtrMemberAccess	func -> op_array		20129	0					
ANR	20475	Identifier	func		20129	0					
ANR	20476	Identifier	op_array		20129	1					
ANR	20477	Identifier	static_variables		20129	1					
ANR	20478	Identifier	IS_ARRAY_IMMUTABLE		20129	1					
ANR	20479	CompoundStatement		47:79:1579:1579	20129	1					
ANR	20480	IfStatement	if ( -- GC_REFCOUNT ( func -> op_array . static_variables ) == 0 )		20129	0					
ANR	20481	Condition	-- GC_REFCOUNT ( func -> op_array . static_variables ) == 0	2213:13:67608:67658	20129	0	True				
ANR	20482	EqualityExpression	-- GC_REFCOUNT ( func -> op_array . static_variables ) == 0		20129	0		==			
ANR	20483	UnaryExpression	-- GC_REFCOUNT ( func -> op_array . static_variables )		20129	0					
ANR	20484	IncDec	--		20129	0					
ANR	20485	CallExpression	GC_REFCOUNT ( func -> op_array . static_variables )		20129	1					
ANR	20486	Callee	GC_REFCOUNT		20129	0					
ANR	20487	Identifier	GC_REFCOUNT		20129	0					
ANR	20488	ArgumentList	func -> op_array . static_variables		20129	1					
ANR	20489	Argument	func -> op_array . static_variables		20129	0					
ANR	20490	MemberAccess	func -> op_array . static_variables		20129	0					
ANR	20491	PtrMemberAccess	func -> op_array		20129	0					
ANR	20492	Identifier	func		20129	0					
ANR	20493	Identifier	op_array		20129	1					
ANR	20494	Identifier	static_variables		20129	1					
ANR	20495	PrimaryExpression	0		20129	1					
ANR	20496	CompoundStatement		48:66:1647:1647	20129	1					
ANR	20497	ExpressionStatement	accel_fast_hash_destroy ( func -> op_array . static_variables )	2214:10:67673:67729	20129	0	True				
ANR	20498	CallExpression	accel_fast_hash_destroy ( func -> op_array . static_variables )		20129	0					
ANR	20499	Callee	accel_fast_hash_destroy		20129	0					
ANR	20500	Identifier	accel_fast_hash_destroy		20129	0					
ANR	20501	ArgumentList	func -> op_array . static_variables		20129	1					
ANR	20502	Argument	func -> op_array . static_variables		20129	0					
ANR	20503	MemberAccess	func -> op_array . static_variables		20129	0					
ANR	20504	PtrMemberAccess	func -> op_array		20129	0					
ANR	20505	Identifier	func		20129	0					
ANR	20506	Identifier	op_array		20129	1					
ANR	20507	Identifier	static_variables		20129	1					
ANR	20508	ExpressionStatement	func -> op_array . static_variables = NULL	2217:8:67760:67798	20129	1	True				
ANR	20509	AssignmentExpression	func -> op_array . static_variables = NULL		20129	0		=			
ANR	20510	MemberAccess	func -> op_array . static_variables		20129	0					
ANR	20511	PtrMemberAccess	func -> op_array		20129	0					
ANR	20512	Identifier	func		20129	0					
ANR	20513	Identifier	op_array		20129	1					
ANR	20514	Identifier	static_variables		20129	1					
ANR	20515	Identifier	NULL		20129	1					
ANR	20516	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2220:7:67824:67847	20129	11	True				
ANR	20517	CallExpression	ZEND_HASH_FOREACH_END ( )		20129	0					
ANR	20518	Callee	ZEND_HASH_FOREACH_END		20129	0					
ANR	20519	Identifier	ZEND_HASH_FOREACH_END		20129	0					
ANR	20520	ArgumentList			20129	1					
ANR	20521	IfStatement	if ( ce -> static_members_table )		20129	1					
ANR	20522	Condition	ce -> static_members_table	2222:8:67863:67886	20129	0	True				
ANR	20523	PtrMemberAccess	ce -> static_members_table		20129	0					
ANR	20524	Identifier	ce		20129	0					
ANR	20525	Identifier	static_members_table		20129	1					
ANR	20526	CompoundStatement		58:5:1882:1887	20129	1					
ANR	20527	IdentifierDeclStatement	int i ;	2223:5:67896:67901	20129	0	True				
ANR	20528	IdentifierDecl	i		20129	0					
ANR	20529	IdentifierDeclType	int		20129	0					
ANR	20530	Identifier	i		20129	1					
ANR	20531	ForStatement	for ( i = 0 ; i < ce -> default_static_members_count ; i ++ )		20129	1					
ANR	20532	ForInit	i = 0 ;	2225:10:67914:67919	20129	0	True				
ANR	20533	AssignmentExpression	i = 0		20129	0		=			
ANR	20534	Identifier	i		20129	0					
ANR	20535	PrimaryExpression	0		20129	1					
ANR	20536	Condition	i < ce -> default_static_members_count	2225:17:67921:67956	20129	1	True				
ANR	20537	RelationalExpression	i < ce -> default_static_members_count		20129	0		<			
ANR	20538	Identifier	i		20129	0					
ANR	20539	PtrMemberAccess	ce -> default_static_members_count		20129	1					
ANR	20540	Identifier	ce		20129	0					
ANR	20541	Identifier	default_static_members_count		20129	1					
ANR	20542	PostIncDecOperationExpression	i ++	2225:55:67959:67961	20129	2	True				
ANR	20543	Identifier	i		20129	0					
ANR	20544	IncDec	++		20129	1					
ANR	20545	CompoundStatement		61:6:1958:1997	20129	3					
ANR	20546	IdentifierDeclStatement	zval * zv = & ce -> static_members_table [ i ] ;	2226:6:67972:68011	20129	0	True				
ANR	20547	IdentifierDecl	* zv = & ce -> static_members_table [ i ]		20129	0					
ANR	20548	IdentifierDeclType	zval *		20129	0					
ANR	20549	Identifier	zv		20129	1					
ANR	20550	AssignmentExpression	* zv = & ce -> static_members_table [ i ]		20129	2		=			
ANR	20551	Identifier	zv		20129	0					
ANR	20552	UnaryOperationExpression	& ce -> static_members_table [ i ]		20129	1					
ANR	20553	UnaryOperator	&		20129	0					
ANR	20554	ArrayIndexing	ce -> static_members_table [ i ]		20129	1					
ANR	20555	PtrMemberAccess	ce -> static_members_table		20129	0					
ANR	20556	Identifier	ce		20129	0					
ANR	20557	Identifier	static_members_table		20129	1					
ANR	20558	Identifier	i		20129	1					
ANR	20559	ExpressionStatement	ZVAL_UNDEF ( & ce -> static_members_table [ i ] )	2227:6:68019:68059	20129	1	True				
ANR	20560	CallExpression	ZVAL_UNDEF ( & ce -> static_members_table [ i ] )		20129	0					
ANR	20561	Callee	ZVAL_UNDEF		20129	0					
ANR	20562	Identifier	ZVAL_UNDEF		20129	0					
ANR	20563	ArgumentList	& ce -> static_members_table [ i ]		20129	1					
ANR	20564	Argument	& ce -> static_members_table [ i ]		20129	0					
ANR	20565	UnaryOperationExpression	& ce -> static_members_table [ i ]		20129	0					
ANR	20566	UnaryOperator	&		20129	0					
ANR	20567	ArrayIndexing	ce -> static_members_table [ i ]		20129	1					
ANR	20568	PtrMemberAccess	ce -> static_members_table		20129	0					
ANR	20569	Identifier	ce		20129	0					
ANR	20570	Identifier	static_members_table		20129	1					
ANR	20571	Identifier	i		20129	1					
ANR	20572	IfStatement	if ( Z_REFCOUNTED_P ( zv ) && Z_DELREF_P ( zv ) == 0 )		20129	2					
ANR	20573	Condition	Z_REFCOUNTED_P ( zv ) && Z_DELREF_P ( zv ) == 0	2228:10:68071:68111	20129	0	True				
ANR	20574	AndExpression	Z_REFCOUNTED_P ( zv ) && Z_DELREF_P ( zv ) == 0		20129	0		&&			
ANR	20575	CallExpression	Z_REFCOUNTED_P ( zv )		20129	0					
ANR	20576	Callee	Z_REFCOUNTED_P		20129	0					
ANR	20577	Identifier	Z_REFCOUNTED_P		20129	0					
ANR	20578	ArgumentList	zv		20129	1					
ANR	20579	Argument	zv		20129	0					
ANR	20580	Identifier	zv		20129	0					
ANR	20581	EqualityExpression	Z_DELREF_P ( zv ) == 0		20129	1		==			
ANR	20582	CallExpression	Z_DELREF_P ( zv )		20129	0					
ANR	20583	Callee	Z_DELREF_P		20129	0					
ANR	20584	Identifier	Z_DELREF_P		20129	0					
ANR	20585	ArgumentList	zv		20129	1					
ANR	20586	Argument	zv		20129	0					
ANR	20587	Identifier	zv		20129	0					
ANR	20588	PrimaryExpression	0		20129	1					
ANR	20589	CompoundStatement		63:53:2100:2100	20129	1					
ANR	20590	ExpressionStatement	accel_fast_zval_dtor ( zv )	2229:7:68123:68147	20129	0	True				
ANR	20591	CallExpression	accel_fast_zval_dtor ( zv )		20129	0					
ANR	20592	Callee	accel_fast_zval_dtor		20129	0					
ANR	20593	Identifier	accel_fast_zval_dtor		20129	0					
ANR	20594	ArgumentList	zv		20129	1					
ANR	20595	Argument	zv		20129	0					
ANR	20596	Identifier	zv		20129	0					
ANR	20597	ExpressionStatement	ce -> static_members_table = NULL	2232:5:68169:68200	20129	2	True				
ANR	20598	AssignmentExpression	ce -> static_members_table = NULL		20129	0		=			
ANR	20599	PtrMemberAccess	ce -> static_members_table		20129	0					
ANR	20600	Identifier	ce		20129	0					
ANR	20601	Identifier	static_members_table		20129	1					
ANR	20602	Identifier	NULL		20129	1					
ANR	20603	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( class_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2234:4:68212:68283	20129	2	True				
ANR	20604	CallExpression	"zend_accel_fast_del_bucket ( EG ( class_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		20129	0					
ANR	20605	Callee	zend_accel_fast_del_bucket		20129	0					
ANR	20606	Identifier	zend_accel_fast_del_bucket		20129	0					
ANR	20607	ArgumentList	EG ( class_table )		20129	1					
ANR	20608	Argument	EG ( class_table )		20129	0					
ANR	20609	CallExpression	EG ( class_table )		20129	0					
ANR	20610	Callee	EG		20129	0					
ANR	20611	Identifier	EG		20129	0					
ANR	20612	ArgumentList	class_table		20129	1					
ANR	20613	Argument	class_table		20129	0					
ANR	20614	Identifier	class_table		20129	0					
ANR	20615	Argument	HT_IDX_TO_HASH ( _idx - 1 )		20129	1					
ANR	20616	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		20129	0					
ANR	20617	Callee	HT_IDX_TO_HASH		20129	0					
ANR	20618	Identifier	HT_IDX_TO_HASH		20129	0					
ANR	20619	ArgumentList	_idx - 1		20129	1					
ANR	20620	Argument	_idx - 1		20129	0					
ANR	20621	AdditiveExpression	_idx - 1		20129	0		-			
ANR	20622	Identifier	_idx		20129	0					
ANR	20623	PrimaryExpression	1		20129	1					
ANR	20624	Argument	_p		20129	2					
ANR	20625	Identifier	_p		20129	0					
ANR	20626	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2236:4:68294:68317	20129	25	True				
ANR	20627	CallExpression	ZEND_HASH_FOREACH_END ( )		20129	0					
ANR	20628	Callee	ZEND_HASH_FOREACH_END		20129	0					
ANR	20629	Identifier	ZEND_HASH_FOREACH_END		20129	0					
ANR	20630	ArgumentList			20129	1					
ANR	20631	ElseStatement	else		20129	0					
ANR	20632	CompoundStatement		73:8:2314:2314	20129	0					
ANR	20633	ExpressionStatement	"zend_hash_init ( & EG ( symbol_table ) , 8 , NULL , NULL , 0 )"	2240:2:68333:68384	20129	0	True				
ANR	20634	CallExpression	"zend_hash_init ( & EG ( symbol_table ) , 8 , NULL , NULL , 0 )"		20129	0					
ANR	20635	Callee	zend_hash_init		20129	0					
ANR	20636	Identifier	zend_hash_init		20129	0					
ANR	20637	ArgumentList	& EG ( symbol_table )		20129	1					
ANR	20638	Argument	& EG ( symbol_table )		20129	0					
ANR	20639	UnaryOperationExpression	& EG ( symbol_table )		20129	0					
ANR	20640	UnaryOperator	&		20129	0					
ANR	20641	CallExpression	EG ( symbol_table )		20129	1					
ANR	20642	Callee	EG		20129	0					
ANR	20643	Identifier	EG		20129	0					
ANR	20644	ArgumentList	symbol_table		20129	1					
ANR	20645	Argument	symbol_table		20129	0					
ANR	20646	Identifier	symbol_table		20129	0					
ANR	20647	Argument	8		20129	1					
ANR	20648	PrimaryExpression	8		20129	0					
ANR	20649	Argument	NULL		20129	2					
ANR	20650	Identifier	NULL		20129	0					
ANR	20651	Argument	NULL		20129	3					
ANR	20652	Identifier	NULL		20129	0					
ANR	20653	Argument	0		20129	4					
ANR	20654	PrimaryExpression	0		20129	0					
ANR	20655	Statement	ZEND_HASH_REVERSE_FOREACH	2242:2:68389:68413	20129	1	True				
ANR	20656	Statement	(	2242:27:68414:68414	20129	2	True				
ANR	20657	Statement	EG	2242:28:68415:68416	20129	3	True				
ANR	20658	Statement	(	2242:30:68417:68417	20129	4	True				
ANR	20659	Statement	function_table	2242:31:68418:68431	20129	5	True				
ANR	20660	Statement	)	2242:45:68432:68432	20129	6	True				
ANR	20661	Statement	","	2242:46:68433:68433	20129	7	True				
ANR	20662	Statement	0	2242:48:68435:68435	20129	8	True				
ANR	20663	Statement	)	2242:49:68436:68436	20129	9	True				
ANR	20664	CompoundStatement		78:3:2429:2465	20129	10					
ANR	20665	IdentifierDeclStatement	zend_function * func = Z_PTR ( _p -> val ) ;	2243:3:68443:68479	20129	0	True				
ANR	20666	IdentifierDecl	* func = Z_PTR ( _p -> val )		20129	0					
ANR	20667	IdentifierDeclType	zend_function *		20129	0					
ANR	20668	Identifier	func		20129	1					
ANR	20669	AssignmentExpression	* func = Z_PTR ( _p -> val )		20129	2		=			
ANR	20670	Identifier	func		20129	0					
ANR	20671	CallExpression	Z_PTR ( _p -> val )		20129	1					
ANR	20672	Callee	Z_PTR		20129	0					
ANR	20673	Identifier	Z_PTR		20129	0					
ANR	20674	ArgumentList	_p -> val		20129	1					
ANR	20675	Argument	_p -> val		20129	0					
ANR	20676	PtrMemberAccess	_p -> val		20129	0					
ANR	20677	Identifier	_p		20129	0					
ANR	20678	Identifier	val		20129	1					
ANR	20679	IfStatement	if ( func -> type == ZEND_INTERNAL_FUNCTION )		20129	1					
ANR	20680	Condition	func -> type == ZEND_INTERNAL_FUNCTION	2245:7:68489:68524	20129	0	True				
ANR	20681	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		20129	0		==			
ANR	20682	PtrMemberAccess	func -> type		20129	0					
ANR	20683	Identifier	func		20129	0					
ANR	20684	Identifier	type		20129	1					
ANR	20685	Identifier	ZEND_INTERNAL_FUNCTION		20129	1					
ANR	20686	CompoundStatement		80:45:2513:2513	20129	1					
ANR	20687	BreakStatement	break ;	2246:4:68533:68538	20129	0	True				
ANR	20688	ElseStatement	else		20129	0					
ANR	20689	CompoundStatement		82:10:2536:2536	20129	0					
ANR	20690	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( function_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2248:4:68556:68630	20129	0	True				
ANR	20691	CallExpression	"zend_accel_fast_del_bucket ( EG ( function_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		20129	0					
ANR	20692	Callee	zend_accel_fast_del_bucket		20129	0					
ANR	20693	Identifier	zend_accel_fast_del_bucket		20129	0					
ANR	20694	ArgumentList	EG ( function_table )		20129	1					
ANR	20695	Argument	EG ( function_table )		20129	0					
ANR	20696	CallExpression	EG ( function_table )		20129	0					
ANR	20697	Callee	EG		20129	0					
ANR	20698	Identifier	EG		20129	0					
ANR	20699	ArgumentList	function_table		20129	1					
ANR	20700	Argument	function_table		20129	0					
ANR	20701	Identifier	function_table		20129	0					
ANR	20702	Argument	HT_IDX_TO_HASH ( _idx - 1 )		20129	1					
ANR	20703	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		20129	0					
ANR	20704	Callee	HT_IDX_TO_HASH		20129	0					
ANR	20705	Identifier	HT_IDX_TO_HASH		20129	0					
ANR	20706	ArgumentList	_idx - 1		20129	1					
ANR	20707	Argument	_idx - 1		20129	0					
ANR	20708	AdditiveExpression	_idx - 1		20129	0		-			
ANR	20709	Identifier	_idx		20129	0					
ANR	20710	PrimaryExpression	1		20129	1					
ANR	20711	Argument	_p		20129	2					
ANR	20712	Identifier	_p		20129	0					
ANR	20713	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2250:4:68641:68664	20129	11	True				
ANR	20714	CallExpression	ZEND_HASH_FOREACH_END ( )		20129	0					
ANR	20715	Callee	ZEND_HASH_FOREACH_END		20129	0					
ANR	20716	Identifier	ZEND_HASH_FOREACH_END		20129	0					
ANR	20717	ArgumentList			20129	1					
ANR	20718	Statement	ZEND_HASH_REVERSE_FOREACH	2252:2:68669:68693	20129	12	True				
ANR	20719	Statement	(	2252:27:68694:68694	20129	13	True				
ANR	20720	Statement	EG	2252:28:68695:68696	20129	14	True				
ANR	20721	Statement	(	2252:30:68697:68697	20129	15	True				
ANR	20722	Statement	class_table	2252:31:68698:68708	20129	16	True				
ANR	20723	Statement	)	2252:42:68709:68709	20129	17	True				
ANR	20724	Statement	","	2252:43:68710:68710	20129	18	True				
ANR	20725	Statement	0	2252:45:68712:68712	20129	19	True				
ANR	20726	Statement	)	2252:46:68713:68713	20129	20	True				
ANR	20727	CompoundStatement		88:3:2706:2743	20129	21					
ANR	20728	IdentifierDeclStatement	zend_class_entry * ce = Z_PTR ( _p -> val ) ;	2253:3:68720:68757	20129	0	True				
ANR	20729	IdentifierDecl	* ce = Z_PTR ( _p -> val )		20129	0					
ANR	20730	IdentifierDeclType	zend_class_entry *		20129	0					
ANR	20731	Identifier	ce		20129	1					
ANR	20732	AssignmentExpression	* ce = Z_PTR ( _p -> val )		20129	2		=			
ANR	20733	Identifier	ce		20129	0					
ANR	20734	CallExpression	Z_PTR ( _p -> val )		20129	1					
ANR	20735	Callee	Z_PTR		20129	0					
ANR	20736	Identifier	Z_PTR		20129	0					
ANR	20737	ArgumentList	_p -> val		20129	1					
ANR	20738	Argument	_p -> val		20129	0					
ANR	20739	PtrMemberAccess	_p -> val		20129	0					
ANR	20740	Identifier	_p		20129	0					
ANR	20741	Identifier	val		20129	1					
ANR	20742	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		20129	1					
ANR	20743	Condition	ce -> type == ZEND_INTERNAL_CLASS	2255:7:68767:68797	20129	0	True				
ANR	20744	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		20129	0		==			
ANR	20745	PtrMemberAccess	ce -> type		20129	0					
ANR	20746	Identifier	ce		20129	0					
ANR	20747	Identifier	type		20129	1					
ANR	20748	Identifier	ZEND_INTERNAL_CLASS		20129	1					
ANR	20749	CompoundStatement		90:40:2786:2786	20129	1					
ANR	20750	BreakStatement	break ;	2256:4:68806:68811	20129	0	True				
ANR	20751	ElseStatement	else		20129	0					
ANR	20752	CompoundStatement		92:10:2809:2809	20129	0					
ANR	20753	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( class_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2258:4:68829:68900	20129	0	True				
ANR	20754	CallExpression	"zend_accel_fast_del_bucket ( EG ( class_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		20129	0					
ANR	20755	Callee	zend_accel_fast_del_bucket		20129	0					
ANR	20756	Identifier	zend_accel_fast_del_bucket		20129	0					
ANR	20757	ArgumentList	EG ( class_table )		20129	1					
ANR	20758	Argument	EG ( class_table )		20129	0					
ANR	20759	CallExpression	EG ( class_table )		20129	0					
ANR	20760	Callee	EG		20129	0					
ANR	20761	Identifier	EG		20129	0					
ANR	20762	ArgumentList	class_table		20129	1					
ANR	20763	Argument	class_table		20129	0					
ANR	20764	Identifier	class_table		20129	0					
ANR	20765	Argument	HT_IDX_TO_HASH ( _idx - 1 )		20129	1					
ANR	20766	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		20129	0					
ANR	20767	Callee	HT_IDX_TO_HASH		20129	0					
ANR	20768	Identifier	HT_IDX_TO_HASH		20129	0					
ANR	20769	ArgumentList	_idx - 1		20129	1					
ANR	20770	Argument	_idx - 1		20129	0					
ANR	20771	AdditiveExpression	_idx - 1		20129	0		-			
ANR	20772	Identifier	_idx		20129	0					
ANR	20773	PrimaryExpression	1		20129	1					
ANR	20774	Argument	_p		20129	2					
ANR	20775	Identifier	_p		20129	0					
ANR	20776	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2260:4:68911:68934	20129	22	True				
ANR	20777	CallExpression	ZEND_HASH_FOREACH_END ( )		20129	0					
ANR	20778	Callee	ZEND_HASH_FOREACH_END		20129	0					
ANR	20779	Identifier	ZEND_HASH_FOREACH_END		20129	0					
ANR	20780	ArgumentList			20129	1					
ANR	20781	Statement	ZEND_HASH_REVERSE_FOREACH	2263:1:68941:68965	20129	2	True				
ANR	20782	Statement	(	2263:26:68966:68966	20129	3	True				
ANR	20783	Statement	EG	2263:27:68967:68968	20129	4	True				
ANR	20784	Statement	(	2263:29:68969:68969	20129	5	True				
ANR	20785	Statement	zend_constants	2263:30:68970:68983	20129	6	True				
ANR	20786	Statement	)	2263:44:68984:68984	20129	7	True				
ANR	20787	Statement	","	2263:45:68985:68985	20129	8	True				
ANR	20788	Statement	0	2263:47:68987:68987	20129	9	True				
ANR	20789	Statement	)	2263:48:68988:68988	20129	10	True				
ANR	20790	CompoundStatement		99:2:2980:3013	20129	11					
ANR	20791	IdentifierDeclStatement	zend_constant * c = Z_PTR ( _p -> val ) ;	2264:2:68994:69027	20129	0	True				
ANR	20792	IdentifierDecl	* c = Z_PTR ( _p -> val )		20129	0					
ANR	20793	IdentifierDeclType	zend_constant *		20129	0					
ANR	20794	Identifier	c		20129	1					
ANR	20795	AssignmentExpression	* c = Z_PTR ( _p -> val )		20129	2		=			
ANR	20796	Identifier	c		20129	0					
ANR	20797	CallExpression	Z_PTR ( _p -> val )		20129	1					
ANR	20798	Callee	Z_PTR		20129	0					
ANR	20799	Identifier	Z_PTR		20129	0					
ANR	20800	ArgumentList	_p -> val		20129	1					
ANR	20801	Argument	_p -> val		20129	0					
ANR	20802	PtrMemberAccess	_p -> val		20129	0					
ANR	20803	Identifier	_p		20129	0					
ANR	20804	Identifier	val		20129	1					
ANR	20805	IfStatement	if ( c -> flags & CONST_PERSISTENT )		20129	1					
ANR	20806	Condition	c -> flags & CONST_PERSISTENT	2266:6:69036:69062	20129	0	True				
ANR	20807	BitAndExpression	c -> flags & CONST_PERSISTENT		20129	0		&			
ANR	20808	PtrMemberAccess	c -> flags		20129	0					
ANR	20809	Identifier	c		20129	0					
ANR	20810	Identifier	flags		20129	1					
ANR	20811	Identifier	CONST_PERSISTENT		20129	1					
ANR	20812	CompoundStatement		101:35:3051:3051	20129	1					
ANR	20813	BreakStatement	break ;	2267:3:69070:69075	20129	0	True				
ANR	20814	ElseStatement	else		20129	0					
ANR	20815	CompoundStatement		103:9:3072:3072	20129	0					
ANR	20816	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( zend_constants ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2269:3:69091:69165	20129	0	True				
ANR	20817	CallExpression	"zend_accel_fast_del_bucket ( EG ( zend_constants ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		20129	0					
ANR	20818	Callee	zend_accel_fast_del_bucket		20129	0					
ANR	20819	Identifier	zend_accel_fast_del_bucket		20129	0					
ANR	20820	ArgumentList	EG ( zend_constants )		20129	1					
ANR	20821	Argument	EG ( zend_constants )		20129	0					
ANR	20822	CallExpression	EG ( zend_constants )		20129	0					
ANR	20823	Callee	EG		20129	0					
ANR	20824	Identifier	EG		20129	0					
ANR	20825	ArgumentList	zend_constants		20129	1					
ANR	20826	Argument	zend_constants		20129	0					
ANR	20827	Identifier	zend_constants		20129	0					
ANR	20828	Argument	HT_IDX_TO_HASH ( _idx - 1 )		20129	1					
ANR	20829	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		20129	0					
ANR	20830	Callee	HT_IDX_TO_HASH		20129	0					
ANR	20831	Identifier	HT_IDX_TO_HASH		20129	0					
ANR	20832	ArgumentList	_idx - 1		20129	1					
ANR	20833	Argument	_idx - 1		20129	0					
ANR	20834	AdditiveExpression	_idx - 1		20129	0		-			
ANR	20835	Identifier	_idx		20129	0					
ANR	20836	PrimaryExpression	1		20129	1					
ANR	20837	Argument	_p		20129	2					
ANR	20838	Identifier	_p		20129	0					
ANR	20839	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2271:3:69174:69197	20129	12	True				
ANR	20840	CallExpression	ZEND_HASH_FOREACH_END ( )		20129	0					
ANR	20841	Callee	ZEND_HASH_FOREACH_END		20129	0					
ANR	20842	Identifier	ZEND_HASH_FOREACH_END		20129	0					
ANR	20843	ArgumentList			20129	1					
ANR	20844	ExpressionStatement	EG ( function_table ) -> nNumUsed = EG ( function_table ) -> nNumOfElements	2272:1:69200:69265	20129	13	True				
ANR	20845	AssignmentExpression	EG ( function_table ) -> nNumUsed = EG ( function_table ) -> nNumOfElements		20129	0		=			
ANR	20846	PtrMemberAccess	EG ( function_table ) -> nNumUsed		20129	0					
ANR	20847	CallExpression	EG ( function_table )		20129	0					
ANR	20848	Callee	EG		20129	0					
ANR	20849	Identifier	EG		20129	0					
ANR	20850	ArgumentList	function_table		20129	1					
ANR	20851	Argument	function_table		20129	0					
ANR	20852	Identifier	function_table		20129	0					
ANR	20853	Identifier	nNumUsed		20129	1					
ANR	20854	PtrMemberAccess	EG ( function_table ) -> nNumOfElements		20129	1					
ANR	20855	CallExpression	EG ( function_table )		20129	0					
ANR	20856	Callee	EG		20129	0					
ANR	20857	Identifier	EG		20129	0					
ANR	20858	ArgumentList	function_table		20129	1					
ANR	20859	Argument	function_table		20129	0					
ANR	20860	Identifier	function_table		20129	0					
ANR	20861	Identifier	nNumOfElements		20129	1					
ANR	20862	ExpressionStatement	EG ( class_table ) -> nNumUsed = EG ( class_table ) -> nNumOfElements	2273:1:69268:69327	20129	14	True				
ANR	20863	AssignmentExpression	EG ( class_table ) -> nNumUsed = EG ( class_table ) -> nNumOfElements		20129	0		=			
ANR	20864	PtrMemberAccess	EG ( class_table ) -> nNumUsed		20129	0					
ANR	20865	CallExpression	EG ( class_table )		20129	0					
ANR	20866	Callee	EG		20129	0					
ANR	20867	Identifier	EG		20129	0					
ANR	20868	ArgumentList	class_table		20129	1					
ANR	20869	Argument	class_table		20129	0					
ANR	20870	Identifier	class_table		20129	0					
ANR	20871	Identifier	nNumUsed		20129	1					
ANR	20872	PtrMemberAccess	EG ( class_table ) -> nNumOfElements		20129	1					
ANR	20873	CallExpression	EG ( class_table )		20129	0					
ANR	20874	Callee	EG		20129	0					
ANR	20875	Identifier	EG		20129	0					
ANR	20876	ArgumentList	class_table		20129	1					
ANR	20877	Argument	class_table		20129	0					
ANR	20878	Identifier	class_table		20129	0					
ANR	20879	Identifier	nNumOfElements		20129	1					
ANR	20880	ExpressionStatement	EG ( zend_constants ) -> nNumUsed = EG ( zend_constants ) -> nNumOfElements	2274:1:69330:69395	20129	15	True				
ANR	20881	AssignmentExpression	EG ( zend_constants ) -> nNumUsed = EG ( zend_constants ) -> nNumOfElements		20129	0		=			
ANR	20882	PtrMemberAccess	EG ( zend_constants ) -> nNumUsed		20129	0					
ANR	20883	CallExpression	EG ( zend_constants )		20129	0					
ANR	20884	Callee	EG		20129	0					
ANR	20885	Identifier	EG		20129	0					
ANR	20886	ArgumentList	zend_constants		20129	1					
ANR	20887	Argument	zend_constants		20129	0					
ANR	20888	Identifier	zend_constants		20129	0					
ANR	20889	Identifier	nNumUsed		20129	1					
ANR	20890	PtrMemberAccess	EG ( zend_constants ) -> nNumOfElements		20129	1					
ANR	20891	CallExpression	EG ( zend_constants )		20129	0					
ANR	20892	Callee	EG		20129	0					
ANR	20893	Identifier	EG		20129	0					
ANR	20894	ArgumentList	zend_constants		20129	1					
ANR	20895	Argument	zend_constants		20129	0					
ANR	20896	Identifier	zend_constants		20129	0					
ANR	20897	Identifier	nNumOfElements		20129	1					
ANR	20898	ExpressionStatement	CG ( unclean_shutdown ) = 1	2276:1:69399:69423	20129	16	True				
ANR	20899	AssignmentExpression	CG ( unclean_shutdown ) = 1		20129	0		=			
ANR	20900	CallExpression	CG ( unclean_shutdown )		20129	0					
ANR	20901	Callee	CG		20129	0					
ANR	20902	Identifier	CG		20129	0					
ANR	20903	ArgumentList	unclean_shutdown		20129	1					
ANR	20904	Argument	unclean_shutdown		20129	0					
ANR	20905	Identifier	unclean_shutdown		20129	0					
ANR	20906	PrimaryExpression	1		20129	1					
ANR	20907	ReturnType	static void		20129	1					
ANR	20908	Identifier	zend_accel_fast_shutdown		20129	2					
ANR	20909	ParameterList			20129	3					
ANR	20910	CFGEntryNode	ENTRY		20129		True				
ANR	20911	CFGExitNode	EXIT		20129		True				
ANR	20912	CFGErrorNode	ERROR		20129		True				
ANR	20913	Symbol	EG ( zend_constants ) -> nNumOfElements		20129						
ANR	20914	Symbol	GC_FLAGS		20129						
ANR	20915	Symbol	* ce		20129						
ANR	20916	Symbol	func -> op_array		20129						
ANR	20917	Symbol	ce -> static_members_table		20129						
ANR	20918	Symbol	EG ( objects_store ) . top		20129						
ANR	20919	Symbol	ZEND_INTERNAL_FUNCTION		20129						
ANR	20920	Symbol	zend_constants		20129						
ANR	20921	Symbol	ZEND_USER_FUNCTION		20129						
ANR	20922	Symbol	CONST_PERSISTENT		20129						
ANR	20923	Symbol	ZEND_INTERNAL_CLASS		20129						
ANR	20924	Symbol	EG		20129						
ANR	20925	Symbol	NULL		20129						
ANR	20926	Symbol	ZEND_HAS_STATIC_IN_METHODS		20129						
ANR	20927	Symbol	symbol_table		20129						
ANR	20928	Symbol	HT_IDX_TO_HASH		20129						
ANR	20929	Symbol	EG ( class_table ) -> nNumOfElements		20129						
ANR	20930	Symbol	ce -> ce_flags		20129						
ANR	20931	Symbol	* _p		20129						
ANR	20932	Symbol	_p -> val		20129						
ANR	20933	Symbol	regular_list		20129						
ANR	20934	Symbol	Z_REFCOUNTED_P		20129						
ANR	20935	Symbol	function_table		20129						
ANR	20936	Symbol	zv		20129						
ANR	20937	Symbol	Z_DELREF		20129						
ANR	20938	Symbol	Z_REFCOUNTED		20129						
ANR	20939	Symbol	EG ( function_table ) -> nNumUsed		20129						
ANR	20940	Symbol	ce -> type		20129						
ANR	20941	Symbol	c -> flags		20129						
ANR	20942	Symbol	ce -> default_static_members_count		20129						
ANR	20943	Symbol	Z_PTR		20129						
ANR	20944	Symbol	* EG		20129						
ANR	20945	Symbol	& EG		20129						
ANR	20946	Symbol	_idx		20129						
ANR	20947	Symbol	full_tables_cleanup		20129						
ANR	20948	Symbol	& _p -> val		20129						
ANR	20949	Symbol	Z_DELREF_P		20129						
ANR	20950	Symbol	func -> type		20129						
ANR	20951	Symbol	class_table		20129						
ANR	20952	Symbol	EG ( zend_constants ) -> nNumUsed		20129						
ANR	20953	Symbol	GC_REFCOUNT		20129						
ANR	20954	Symbol	ce		20129						
ANR	20955	Symbol	c		20129						
ANR	20956	Symbol	* func		20129						
ANR	20957	Symbol	CG		20129						
ANR	20958	Symbol	zend_hash_num_elements		20129						
ANR	20959	Symbol	objects_store		20129						
ANR	20960	Symbol	i		20129						
ANR	20961	Symbol	IS_ARRAY_IMMUTABLE		20129						
ANR	20962	Symbol	* c		20129						
ANR	20963	Symbol	EG ( function_table ) -> nNumOfElements		20129						
ANR	20964	Symbol	_p		20129						
ANR	20965	Symbol	unclean_shutdown		20129						
ANR	20966	Symbol	func		20129						
ANR	20967	Symbol	func -> op_array . static_variables		20129						
ANR	20968	Symbol	EG ( class_table ) -> nNumUsed		20129						
ANR	20969	Function	accel_deactivate	2280:0:69435:70041							
ANR	20970	FunctionDef	accel_deactivate ()		20969	0					
ANR	20971	CompoundStatement		2281:0:69470:70041	20969	0					
ANR	20972	IfStatement	if ( ! ZCG ( enabled ) || ! accel_startup_ok )		20969	0					
ANR	20973	Condition	! ZCG ( enabled ) || ! accel_startup_ok	2287:5:69681:69714	20969	0	True				
ANR	20974	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok		20969	0		||			
ANR	20975	UnaryOperationExpression	! ZCG ( enabled )		20969	0					
ANR	20976	UnaryOperator	!		20969	0					
ANR	20977	CallExpression	ZCG ( enabled )		20969	1					
ANR	20978	Callee	ZCG		20969	0					
ANR	20979	Identifier	ZCG		20969	0					
ANR	20980	ArgumentList	enabled		20969	1					
ANR	20981	Argument	enabled		20969	0					
ANR	20982	Identifier	enabled		20969	0					
ANR	20983	UnaryOperationExpression	! accel_startup_ok		20969	1					
ANR	20984	UnaryOperator	!		20969	0					
ANR	20985	Identifier	accel_startup_ok		20969	1					
ANR	20986	CompoundStatement		7:41:246:246	20969	1					
ANR	20987	ReturnStatement	return ;	2288:2:69721:69727	20969	0	True				
ANR	20988	ExpressionStatement	zend_shared_alloc_safe_unlock ( )	2291:1:69734:69765	20969	1	True				
ANR	20989	CallExpression	zend_shared_alloc_safe_unlock ( )		20969	0					
ANR	20990	Callee	zend_shared_alloc_safe_unlock		20969	0					
ANR	20991	Identifier	zend_shared_alloc_safe_unlock		20969	0					
ANR	20992	ArgumentList			20969	1					
ANR	20993	ExpressionStatement	accel_unlock_all ( )	2292:1:69811:69829	20969	2	True				
ANR	20994	CallExpression	accel_unlock_all ( )		20969	0					
ANR	20995	Callee	accel_unlock_all		20969	0					
ANR	20996	Identifier	accel_unlock_all		20969	0					
ANR	20997	ArgumentList			20969	1					
ANR	20998	ExpressionStatement	ZCG ( counted ) = 0	2293:1:69832:69848	20969	3	True				
ANR	20999	AssignmentExpression	ZCG ( counted ) = 0		20969	0		=			
ANR	21000	CallExpression	ZCG ( counted )		20969	0					
ANR	21001	Callee	ZCG		20969	0					
ANR	21002	Identifier	ZCG		20969	0					
ANR	21003	ArgumentList	counted		20969	1					
ANR	21004	Argument	counted		20969	0					
ANR	21005	Identifier	counted		20969	0					
ANR	21006	PrimaryExpression	0		20969	1					
ANR	21007	IfStatement	if ( ZCG ( accel_directives ) . fast_shutdown && is_zend_mm ( ) )		20969	4					
ANR	21008	Condition	ZCG ( accel_directives ) . fast_shutdown && is_zend_mm ( )	2296:5:69872:69922	20969	0	True				
ANR	21009	AndExpression	ZCG ( accel_directives ) . fast_shutdown && is_zend_mm ( )		20969	0		&&			
ANR	21010	MemberAccess	ZCG ( accel_directives ) . fast_shutdown		20969	0					
ANR	21011	CallExpression	ZCG ( accel_directives )		20969	0					
ANR	21012	Callee	ZCG		20969	0					
ANR	21013	Identifier	ZCG		20969	0					
ANR	21014	ArgumentList	accel_directives		20969	1					
ANR	21015	Argument	accel_directives		20969	0					
ANR	21016	Identifier	accel_directives		20969	0					
ANR	21017	Identifier	fast_shutdown		20969	1					
ANR	21018	CallExpression	is_zend_mm ( )		20969	1					
ANR	21019	Callee	is_zend_mm		20969	0					
ANR	21020	Identifier	is_zend_mm		20969	0					
ANR	21021	ArgumentList			20969	1					
ANR	21022	CompoundStatement		16:58:454:454	20969	1					
ANR	21023	ExpressionStatement	zend_accel_fast_shutdown ( )	2297:2:69929:69955	20969	0	True				
ANR	21024	CallExpression	zend_accel_fast_shutdown ( )		20969	0					
ANR	21025	Callee	zend_accel_fast_shutdown		20969	0					
ANR	21026	Identifier	zend_accel_fast_shutdown		20969	0					
ANR	21027	ArgumentList			20969	1					
ANR	21028	IfStatement	if ( ZCG ( cwd ) )		20969	5					
ANR	21029	Condition	ZCG ( cwd )	2301:5:69973:69980	20969	0	True				
ANR	21030	CallExpression	ZCG ( cwd )		20969	0					
ANR	21031	Callee	ZCG		20969	0					
ANR	21032	Identifier	ZCG		20969	0					
ANR	21033	ArgumentList	cwd		20969	1					
ANR	21034	Argument	cwd		20969	0					
ANR	21035	Identifier	cwd		20969	0					
ANR	21036	CompoundStatement		21:15:512:512	20969	1					
ANR	21037	ExpressionStatement	zend_string_release ( ZCG ( cwd ) )	2302:2:69987:70016	20969	0	True				
ANR	21038	CallExpression	zend_string_release ( ZCG ( cwd ) )		20969	0					
ANR	21039	Callee	zend_string_release		20969	0					
ANR	21040	Identifier	zend_string_release		20969	0					
ANR	21041	ArgumentList	ZCG ( cwd )		20969	1					
ANR	21042	Argument	ZCG ( cwd )		20969	0					
ANR	21043	CallExpression	ZCG ( cwd )		20969	0					
ANR	21044	Callee	ZCG		20969	0					
ANR	21045	Identifier	ZCG		20969	0					
ANR	21046	ArgumentList	cwd		20969	1					
ANR	21047	Argument	cwd		20969	0					
ANR	21048	Identifier	cwd		20969	0					
ANR	21049	ExpressionStatement	ZCG ( cwd ) = NULL	2303:2:70020:70035	20969	1	True				
ANR	21050	AssignmentExpression	ZCG ( cwd ) = NULL		20969	0		=			
ANR	21051	CallExpression	ZCG ( cwd )		20969	0					
ANR	21052	Callee	ZCG		20969	0					
ANR	21053	Identifier	ZCG		20969	0					
ANR	21054	ArgumentList	cwd		20969	1					
ANR	21055	Argument	cwd		20969	0					
ANR	21056	Identifier	cwd		20969	0					
ANR	21057	Identifier	NULL		20969	1					
ANR	21058	ReturnType	static void		20969	1					
ANR	21059	Identifier	accel_deactivate		20969	2					
ANR	21060	ParameterList			20969	3					
ANR	21061	CFGEntryNode	ENTRY		20969		True				
ANR	21062	CFGExitNode	EXIT		20969		True				
ANR	21063	Symbol	accel_startup_ok		20969						
ANR	21064	Symbol	cwd		20969						
ANR	21065	Symbol	is_zend_mm		20969						
ANR	21066	Symbol	NULL		20969						
ANR	21067	Symbol	counted		20969						
ANR	21068	Symbol	ZCG ( accel_directives ) . fast_shutdown		20969						
ANR	21069	Symbol	accel_directives		20969						
ANR	21070	Symbol	enabled		20969						
ANR	21071	Symbol	ZCG		20969						
ANR	21072	Function	accelerator_remove_cb	2308:0:70044:70677							
ANR	21073	FunctionDef	"accelerator_remove_cb (zend_extension * element1 , zend_extension * element2)"		21072	0					
ANR	21074	CompoundStatement		2309:0:70129:70677	21072	0					
ANR	21075	ExpressionStatement	( void ) element2	2310:1:70132:70146	21072	0	True				
ANR	21076	CastExpression	( void ) element2		21072	0					
ANR	21077	CastTarget	void		21072	0					
ANR	21078	Identifier	element2		21072	1					
ANR	21079	IfStatement	"if ( ! strcmp ( element1 -> name , ACCELERATOR_PRODUCT_NAME ) )"		21072	1					
ANR	21080	Condition	"! strcmp ( element1 -> name , ACCELERATOR_PRODUCT_NAME )"	2312:5:70184:70233	21072	0	True				
ANR	21081	UnaryOperationExpression	"! strcmp ( element1 -> name , ACCELERATOR_PRODUCT_NAME )"		21072	0					
ANR	21082	UnaryOperator	!		21072	0					
ANR	21083	CallExpression	"strcmp ( element1 -> name , ACCELERATOR_PRODUCT_NAME )"		21072	1					
ANR	21084	Callee	strcmp		21072	0					
ANR	21085	Identifier	strcmp		21072	0					
ANR	21086	ArgumentList	element1 -> name		21072	1					
ANR	21087	Argument	element1 -> name		21072	0					
ANR	21088	PtrMemberAccess	element1 -> name		21072	0					
ANR	21089	Identifier	element1		21072	0					
ANR	21090	Identifier	name		21072	1					
ANR	21091	Argument	ACCELERATOR_PRODUCT_NAME		21072	1					
ANR	21092	Identifier	ACCELERATOR_PRODUCT_NAME		21072	0					
ANR	21093	CompoundStatement		4:57:106:106	21072	1					
ANR	21094	ExpressionStatement	element1 -> startup = NULL	2313:2:70240:70264	21072	0	True				
ANR	21095	AssignmentExpression	element1 -> startup = NULL		21072	0		=			
ANR	21096	PtrMemberAccess	element1 -> startup		21072	0					
ANR	21097	Identifier	element1		21072	0					
ANR	21098	Identifier	startup		21072	1					
ANR	21099	Identifier	NULL		21072	1					
ANR	21100	ExpressionStatement	element1 -> shutdown = NULL	2316:2:70340:70365	21072	1	True				
ANR	21101	AssignmentExpression	element1 -> shutdown = NULL		21072	0		=			
ANR	21102	PtrMemberAccess	element1 -> shutdown		21072	0					
ANR	21103	Identifier	element1		21072	0					
ANR	21104	Identifier	shutdown		21072	1					
ANR	21105	Identifier	NULL		21072	1					
ANR	21106	ExpressionStatement	element1 -> activate = NULL	2318:2:70376:70401	21072	2	True				
ANR	21107	AssignmentExpression	element1 -> activate = NULL		21072	0		=			
ANR	21108	PtrMemberAccess	element1 -> activate		21072	0					
ANR	21109	Identifier	element1		21072	0					
ANR	21110	Identifier	activate		21072	1					
ANR	21111	Identifier	NULL		21072	1					
ANR	21112	ExpressionStatement	element1 -> deactivate = NULL	2319:2:70405:70432	21072	3	True				
ANR	21113	AssignmentExpression	element1 -> deactivate = NULL		21072	0		=			
ANR	21114	PtrMemberAccess	element1 -> deactivate		21072	0					
ANR	21115	Identifier	element1		21072	0					
ANR	21116	Identifier	deactivate		21072	1					
ANR	21117	Identifier	NULL		21072	1					
ANR	21118	ExpressionStatement	element1 -> op_array_handler = NULL	2320:2:70436:70469	21072	4	True				
ANR	21119	AssignmentExpression	element1 -> op_array_handler = NULL		21072	0		=			
ANR	21120	PtrMemberAccess	element1 -> op_array_handler		21072	0					
ANR	21121	Identifier	element1		21072	0					
ANR	21122	Identifier	op_array_handler		21072	1					
ANR	21123	Identifier	NULL		21072	1					
ANR	21124	Statement	fprintf	2323:8:70506:70512	21072	5	True				
ANR	21125	Statement	(	2323:15:70513:70513	21072	6	True				
ANR	21126	Statement	stderr	2323:16:70514:70519	21072	7	True				
ANR	21127	Statement	","	2323:22:70520:70520	21072	8	True				
ANR	21128	Statement	ACCELERATOR_PRODUCT_NAME	2323:24:70522:70545	21072	9	True				
ANR	21129	Statement	""" is disabled: %s\\n"""	2323:49:70547:70566	21072	10	True				
ANR	21130	Statement	","	2323:69:70567:70567	21072	11	True				
ANR	21131	Statement	(	2323:71:70569:70569	21072	12	True				
ANR	21132	Statement	zps_failure_reason	2323:72:70570:70587	21072	13	True				
ANR	21133	Statement	?	2323:91:70589:70589	21072	14	True				
ANR	21134	Label	zps_failure_reason :	2323:93:70591:70610	21072	15	True				
ANR	21135	Identifier	zps_failure_reason		21072	0					
ANR	21136	Statement	"""unknown error"""	2323:114:70612:70626	21072	16	True				
ANR	21137	Statement	)	2323:129:70627:70627	21072	17	True				
ANR	21138	Statement	)	2323:130:70628:70628	21072	18	True				
ANR	21139	ExpressionStatement		2323:131:70629:70629	21072	19	True				
ANR	21140	ExpressionStatement	fflush ( stderr )	2324:8:70639:70653	21072	20	True				
ANR	21141	CallExpression	fflush ( stderr )		21072	0					
ANR	21142	Callee	fflush		21072	0					
ANR	21143	Identifier	fflush		21072	0					
ANR	21144	ArgumentList	stderr		21072	1					
ANR	21145	Argument	stderr		21072	0					
ANR	21146	Identifier	stderr		21072	0					
ANR	21147	ReturnStatement	return 0 ;	2328:1:70667:70675	21072	2	True				
ANR	21148	PrimaryExpression	0		21072	0					
ANR	21149	ReturnType	static int		21072	1					
ANR	21150	Identifier	accelerator_remove_cb		21072	2					
ANR	21151	ParameterList	"zend_extension * element1 , zend_extension * element2"		21072	3					
ANR	21152	Parameter	zend_extension * element1	2308:33:70077:70100	21072	0	True				
ANR	21153	ParameterType	zend_extension *		21072	0					
ANR	21154	Identifier	element1		21072	1					
ANR	21155	Parameter	zend_extension * element2	2308:59:70103:70126	21072	1	True				
ANR	21156	ParameterType	zend_extension *		21072	0					
ANR	21157	Identifier	element2		21072	1					
ANR	21158	CFGEntryNode	ENTRY		21072		True				
ANR	21159	CFGExitNode	EXIT		21072		True				
ANR	21160	Symbol	strcmp		21072						
ANR	21161	Symbol	NULL		21072						
ANR	21162	Symbol	element1 -> name		21072						
ANR	21163	Symbol	stderr		21072						
ANR	21164	Symbol	ACCELERATOR_PRODUCT_NAME		21072						
ANR	21165	Symbol	* element1		21072						
ANR	21166	Symbol	element1 -> shutdown		21072						
ANR	21167	Symbol	element1 -> deactivate		21072						
ANR	21168	Symbol	element1		21072						
ANR	21169	Symbol	element2		21072						
ANR	21170	Symbol	element1 -> activate		21072						
ANR	21171	Symbol	element1 -> op_array_handler		21072						
ANR	21172	Symbol	element1 -> startup		21072						
ANR	21173	Function	zps_startup_failure	2331:0:70680:70980							
ANR	21174	FunctionDef	"zps_startup_failure (char * reason , char * api_reason , int ( * cb ) ( zend_extension * , zend_extension * ))"		21173	0					
ANR	21175	CompoundStatement		2332:0:70791:70980	21173	0					
ANR	21176	ExpressionStatement	accel_startup_ok = 0	2333:1:70794:70814	21173	0	True				
ANR	21177	AssignmentExpression	accel_startup_ok = 0		21173	0		=			
ANR	21178	Identifier	accel_startup_ok		21173	0					
ANR	21179	PrimaryExpression	0		21173	1					
ANR	21180	ExpressionStatement	zps_failure_reason = reason	2334:1:70817:70844	21173	1	True				
ANR	21181	AssignmentExpression	zps_failure_reason = reason		21173	0		=			
ANR	21182	Identifier	zps_failure_reason		21173	0					
ANR	21183	Identifier	reason		21173	1					
ANR	21184	ExpressionStatement	zps_api_failure_reason = api_reason ? api_reason : reason	2335:1:70847:70900	21173	2	True				
ANR	21185	AssignmentExpression	zps_api_failure_reason = api_reason ? api_reason : reason		21173	0		=			
ANR	21186	Identifier	zps_api_failure_reason		21173	0					
ANR	21187	ConditionalExpression	api_reason ? api_reason : reason		21173	1					
ANR	21188	Condition	api_reason		21173	0					
ANR	21189	Identifier	api_reason		21173	0					
ANR	21190	Identifier	api_reason		21173	1					
ANR	21191	Identifier	reason		21173	2					
ANR	21192	Statement	zend_llist_del_element	2336:1:70903:70924	21173	3	True				
ANR	21193	Statement	(	2336:23:70925:70925	21173	4	True				
ANR	21194	Statement	&	2336:24:70926:70926	21173	5	True				
ANR	21195	Statement	zend_extensions	2336:25:70927:70941	21173	6	True				
ANR	21196	Statement	","	2336:40:70942:70942	21173	7	True				
ANR	21197	Statement	NULL	2336:42:70944:70947	21173	8	True				
ANR	21198	Statement	","	2336:46:70948:70948	21173	9	True				
ANR	21199	Statement	(	2336:48:70950:70950	21173	10	True				
ANR	21200	Statement	int	2336:49:70951:70953	21173	11	True				
ANR	21201	Statement	(	2336:53:70955:70955	21173	12	True				
ANR	21202	Statement	*	2336:54:70956:70956	21173	13	True				
ANR	21203	Statement	)	2336:55:70957:70957	21173	14	True				
ANR	21204	Statement	(	2336:56:70958:70958	21173	15	True				
ANR	21205	Statement	void	2336:57:70959:70962	21173	16	True				
ANR	21206	Statement	*	2336:62:70964:70964	21173	17	True				
ANR	21207	Statement	","	2336:63:70965:70965	21173	18	True				
ANR	21208	Statement	void	2336:65:70967:70970	21173	19	True				
ANR	21209	Statement	*	2336:70:70972:70972	21173	20	True				
ANR	21210	Statement	)	2336:71:70973:70973	21173	21	True				
ANR	21211	Statement	)	2336:72:70974:70974	21173	22	True				
ANR	21212	Statement	cb	2336:73:70975:70976	21173	23	True				
ANR	21213	Statement	)	2336:75:70977:70977	21173	24	True				
ANR	21214	ExpressionStatement		2336:76:70978:70978	21173	25	True				
ANR	21215	ReturnType	static void		21173	1					
ANR	21216	Identifier	zps_startup_failure		21173	2					
ANR	21217	ParameterList	"char * reason , char * api_reason , int ( * cb ) ( zend_extension * , zend_extension * )"		21173	3					
ANR	21218	Parameter	char * reason	2331:32:70712:70723	21173	0	True				
ANR	21219	ParameterType	char *		21173	0					
ANR	21220	Identifier	reason		21173	1					
ANR	21221	Parameter	char * api_reason	2331:46:70726:70741	21173	1	True				
ANR	21222	ParameterType	char *		21173	0					
ANR	21223	Identifier	api_reason		21173	1					
ANR	21224	Parameter	"int ( * cb ) ( zend_extension * , zend_extension * )"	2331:64:70744:70788	21173	2	True				
ANR	21225	ParameterType	"(( zend_extension * , zend_extension * ) int) *"		21173	0					
ANR	21226	Identifier	cb		21173	1					
ANR	21227	CFGEntryNode	ENTRY		21173		True				
ANR	21228	CFGExitNode	EXIT		21173		True				
ANR	21229	Symbol	accel_startup_ok		21173						
ANR	21230	Symbol	reason		21173						
ANR	21231	Symbol	zps_failure_reason		21173						
ANR	21232	Symbol	api_reason		21173						
ANR	21233	Symbol	zps_api_failure_reason		21173						
ANR	21234	Symbol	cb		21173						
ANR	21235	Function	accel_find_sapi	2339:0:70983:71589							
ANR	21236	FunctionDef	accel_find_sapi ()		21235	0					
ANR	21237	CompoundStatement		2340:0:71023:71589	21235	0					
ANR	21238	Statement	static	2341:1:71026:71031	21235	0	True				
ANR	21239	IdentifierDeclStatement	"const char * supported_sapis [ ] = { ""apache"" , ""fastcgi"" , ""cli-server"" , ""cgi-fcgi"" , ""fpm-fcgi"" , ""isapi"" , ""apache2filter"" , ""apache2handler"" , ""litespeed"" , NULL } ;"	2341:8:71033:71210	21235	1	True				
ANR	21240	IdentifierDecl	"* supported_sapis [ ] = { ""apache"" , ""fastcgi"" , ""cli-server"" , ""cgi-fcgi"" , ""fpm-fcgi"" , ""isapi"" , ""apache2filter"" , ""apache2handler"" , ""litespeed"" , NULL }"		21235	0					
ANR	21241	IdentifierDeclType	const char * [ ]		21235	0					
ANR	21242	Identifier	supported_sapis		21235	1					
ANR	21243	AssignmentExpression	"* supported_sapis [ ] = { ""apache"" , ""fastcgi"" , ""cli-server"" , ""cgi-fcgi"" , ""fpm-fcgi"" , ""isapi"" , ""apache2filter"" , ""apache2handler"" , ""litespeed"" , NULL }"		21235	2		=			
ANR	21244	Identifier	supported_sapis		21235	0					
ANR	21245	InitializerList	"""apache"""		21235	1					
ANR	21246	PrimaryExpression	"""apache"""		21235	0					
ANR	21247	PrimaryExpression	"""fastcgi"""		21235	1					
ANR	21248	PrimaryExpression	"""cli-server"""		21235	2					
ANR	21249	PrimaryExpression	"""cgi-fcgi"""		21235	3					
ANR	21250	PrimaryExpression	"""fpm-fcgi"""		21235	4					
ANR	21251	PrimaryExpression	"""isapi"""		21235	5					
ANR	21252	PrimaryExpression	"""apache2filter"""		21235	6					
ANR	21253	PrimaryExpression	"""apache2handler"""		21235	7					
ANR	21254	PrimaryExpression	"""litespeed"""		21235	8					
ANR	21255	Identifier	NULL		21235	9					
ANR	21256	IdentifierDeclStatement	const char * * sapi_name ;	2353:1:71213:71235	21235	2	True				
ANR	21257	IdentifierDecl	* * sapi_name		21235	0					
ANR	21258	IdentifierDeclType	const char * *		21235	0					
ANR	21259	Identifier	sapi_name		21235	1					
ANR	21260	IfStatement	if ( sapi_module . name )		21235	3					
ANR	21261	Condition	sapi_module . name	2355:5:71243:71258	21235	0	True				
ANR	21262	MemberAccess	sapi_module . name		21235	0					
ANR	21263	Identifier	sapi_module		21235	0					
ANR	21264	Identifier	name		21235	1					
ANR	21265	CompoundStatement		16:23:237:237	21235	1					
ANR	21266	ForStatement	for ( sapi_name = supported_sapis ; * sapi_name ; sapi_name ++ )		21235	0					
ANR	21267	ForInit	sapi_name = supported_sapis ;	2356:7:71270:71297	21235	0	True				
ANR	21268	AssignmentExpression	sapi_name = supported_sapis		21235	0		=			
ANR	21269	Identifier	sapi_name		21235	0					
ANR	21270	Identifier	supported_sapis		21235	1					
ANR	21271	Condition	* sapi_name	2356:36:71299:71308	21235	1	True				
ANR	21272	UnaryOperationExpression	* sapi_name		21235	0					
ANR	21273	UnaryOperator	*		21235	0					
ANR	21274	Identifier	sapi_name		21235	1					
ANR	21275	PostIncDecOperationExpression	sapi_name ++	2356:48:71311:71321	21235	2	True				
ANR	21276	Identifier	sapi_name		21235	0					
ANR	21277	IncDec	++		21235	1					
ANR	21278	CompoundStatement		17:61:300:300	21235	3					
ANR	21279	IfStatement	"if ( strcmp ( sapi_module . name , * sapi_name ) == 0 )"		21235	0					
ANR	21280	Condition	"strcmp ( sapi_module . name , * sapi_name ) == 0"	2357:7:71333:71373	21235	0	True				
ANR	21281	EqualityExpression	"strcmp ( sapi_module . name , * sapi_name ) == 0"		21235	0		==			
ANR	21282	CallExpression	"strcmp ( sapi_module . name , * sapi_name )"		21235	0					
ANR	21283	Callee	strcmp		21235	0					
ANR	21284	Identifier	strcmp		21235	0					
ANR	21285	ArgumentList	sapi_module . name		21235	1					
ANR	21286	Argument	sapi_module . name		21235	0					
ANR	21287	MemberAccess	sapi_module . name		21235	0					
ANR	21288	Identifier	sapi_module		21235	0					
ANR	21289	Identifier	name		21235	1					
ANR	21290	Argument	* sapi_name		21235	1					
ANR	21291	UnaryOperationExpression	* sapi_name		21235	0					
ANR	21292	UnaryOperator	*		21235	0					
ANR	21293	Identifier	sapi_name		21235	1					
ANR	21294	PrimaryExpression	0		21235	1					
ANR	21295	CompoundStatement		18:50:352:352	21235	1					
ANR	21296	ReturnStatement	return SUCCESS ;	2358:4:71382:71396	21235	0	True				
ANR	21297	Identifier	SUCCESS		21235	0					
ANR	21298	IfStatement	"if ( ZCG ( accel_directives ) . enable_cli && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""phpdbg"" ) == 0 ) )"		21235	1					
ANR	21299	Condition	"ZCG ( accel_directives ) . enable_cli && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""phpdbg"" ) == 0 )"	2361:6:71413:71540	21235	0	True				
ANR	21300	AndExpression	"ZCG ( accel_directives ) . enable_cli && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""phpdbg"" ) == 0 )"		21235	0		&&			
ANR	21301	MemberAccess	ZCG ( accel_directives ) . enable_cli		21235	0					
ANR	21302	CallExpression	ZCG ( accel_directives )		21235	0					
ANR	21303	Callee	ZCG		21235	0					
ANR	21304	Identifier	ZCG		21235	0					
ANR	21305	ArgumentList	accel_directives		21235	1					
ANR	21306	Argument	accel_directives		21235	0					
ANR	21307	Identifier	accel_directives		21235	0					
ANR	21308	Identifier	enable_cli		21235	1					
ANR	21309	OrExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""phpdbg"" ) == 0"		21235	1		||			
ANR	21310	EqualityExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0"		21235	0		==			
ANR	21311	CallExpression	"strcmp ( sapi_module . name , ""cli"" )"		21235	0					
ANR	21312	Callee	strcmp		21235	0					
ANR	21313	Identifier	strcmp		21235	0					
ANR	21314	ArgumentList	sapi_module . name		21235	1					
ANR	21315	Argument	sapi_module . name		21235	0					
ANR	21316	MemberAccess	sapi_module . name		21235	0					
ANR	21317	Identifier	sapi_module		21235	0					
ANR	21318	Identifier	name		21235	1					
ANR	21319	Argument	"""cli"""		21235	1					
ANR	21320	PrimaryExpression	"""cli"""		21235	0					
ANR	21321	PrimaryExpression	0		21235	1					
ANR	21322	EqualityExpression	"strcmp ( sapi_module . name , ""phpdbg"" ) == 0"		21235	1		==			
ANR	21323	CallExpression	"strcmp ( sapi_module . name , ""phpdbg"" )"		21235	0					
ANR	21324	Callee	strcmp		21235	0					
ANR	21325	Identifier	strcmp		21235	0					
ANR	21326	ArgumentList	sapi_module . name		21235	1					
ANR	21327	Argument	sapi_module . name		21235	0					
ANR	21328	MemberAccess	sapi_module . name		21235	0					
ANR	21329	Identifier	sapi_module		21235	0					
ANR	21330	Identifier	name		21235	1					
ANR	21331	Argument	"""phpdbg"""		21235	1					
ANR	21332	PrimaryExpression	"""phpdbg"""		21235	0					
ANR	21333	PrimaryExpression	0		21235	1					
ANR	21334	CompoundStatement		24:49:519:519	21235	1					
ANR	21335	ReturnStatement	return SUCCESS ;	2364:3:71548:71562	21235	0	True				
ANR	21336	Identifier	SUCCESS		21235	0					
ANR	21337	ReturnStatement	return FAILURE ;	2368:1:71573:71587	21235	4	True				
ANR	21338	Identifier	FAILURE		21235	0					
ANR	21339	ReturnType	static inline int		21235	1					
ANR	21340	Identifier	accel_find_sapi		21235	2					
ANR	21341	ParameterList			21235	3					
ANR	21342	CFGEntryNode	ENTRY		21235		True				
ANR	21343	CFGExitNode	EXIT		21235		True				
ANR	21344	Symbol	strcmp		21235						
ANR	21345	Symbol	NULL		21235						
ANR	21346	Symbol	sapi_module		21235						
ANR	21347	Symbol	SUCCESS		21235						
ANR	21348	Symbol	sapi_module . name		21235						
ANR	21349	Symbol	* sapi_name		21235						
ANR	21350	Symbol	supported_sapis		21235						
ANR	21351	Symbol	sapi_name		21235						
ANR	21352	Symbol	ZCG ( accel_directives ) . enable_cli		21235						
ANR	21353	Symbol	accel_directives		21235						
ANR	21354	Symbol	FAILURE		21235						
ANR	21355	Symbol	ZCG		21235						
ANR	21356	Function	zend_accel_init_shm	2371:0:71592:74202							
ANR	21357	FunctionDef	zend_accel_init_shm ()		21356	0					
ANR	21358	CompoundStatement		2372:0:71629:74202	21356	0					
ANR	21359	ExpressionStatement	zend_shared_alloc_lock ( )	2373:1:71632:71656	21356	0	True				
ANR	21360	CallExpression	zend_shared_alloc_lock ( )		21356	0					
ANR	21361	Callee	zend_shared_alloc_lock		21356	0					
ANR	21362	Identifier	zend_shared_alloc_lock		21356	0					
ANR	21363	ArgumentList			21356	1					
ANR	21364	ExpressionStatement	accel_shared_globals = zend_shared_alloc ( sizeof ( zend_accel_shared_globals ) )	2375:1:71660:71735	21356	1	True				
ANR	21365	AssignmentExpression	accel_shared_globals = zend_shared_alloc ( sizeof ( zend_accel_shared_globals ) )		21356	0		=			
ANR	21366	Identifier	accel_shared_globals		21356	0					
ANR	21367	CallExpression	zend_shared_alloc ( sizeof ( zend_accel_shared_globals ) )		21356	1					
ANR	21368	Callee	zend_shared_alloc		21356	0					
ANR	21369	Identifier	zend_shared_alloc		21356	0					
ANR	21370	ArgumentList	sizeof ( zend_accel_shared_globals )		21356	1					
ANR	21371	Argument	sizeof ( zend_accel_shared_globals )		21356	0					
ANR	21372	SizeofExpression	sizeof ( zend_accel_shared_globals )		21356	0					
ANR	21373	Sizeof	sizeof		21356	0					
ANR	21374	SizeofOperand	zend_accel_shared_globals		21356	1					
ANR	21375	IfStatement	if ( ! accel_shared_globals )		21356	2					
ANR	21376	Condition	! accel_shared_globals	2376:5:71742:71762	21356	0	True				
ANR	21377	UnaryOperationExpression	! accel_shared_globals		21356	0					
ANR	21378	UnaryOperator	!		21356	0					
ANR	21379	Identifier	accel_shared_globals		21356	1					
ANR	21380	CompoundStatement		5:28:135:135	21356	1					
ANR	21381	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""Insufficient shared memory!"" )"	2377:2:71769:71833	21356	0	True				
ANR	21382	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""Insufficient shared memory!"" )"		21356	0					
ANR	21383	Callee	zend_accel_error		21356	0					
ANR	21384	Identifier	zend_accel_error		21356	0					
ANR	21385	ArgumentList	ACCEL_LOG_FATAL		21356	1					
ANR	21386	Argument	ACCEL_LOG_FATAL		21356	0					
ANR	21387	Identifier	ACCEL_LOG_FATAL		21356	0					
ANR	21388	Argument	"""Insufficient shared memory!"""		21356	1					
ANR	21389	PrimaryExpression	"""Insufficient shared memory!"""		21356	0					
ANR	21390	ExpressionStatement	zend_shared_alloc_unlock ( )	2378:2:71837:71863	21356	1	True				
ANR	21391	CallExpression	zend_shared_alloc_unlock ( )		21356	0					
ANR	21392	Callee	zend_shared_alloc_unlock		21356	0					
ANR	21393	Identifier	zend_shared_alloc_unlock		21356	0					
ANR	21394	ArgumentList			21356	1					
ANR	21395	ReturnStatement	return FAILURE ;	2379:2:71867:71881	21356	2	True				
ANR	21396	Identifier	FAILURE		21356	0					
ANR	21397	ExpressionStatement	ZSMMG ( app_shared_globals ) = accel_shared_globals	2381:1:71887:71935	21356	3	True				
ANR	21398	AssignmentExpression	ZSMMG ( app_shared_globals ) = accel_shared_globals		21356	0		=			
ANR	21399	CallExpression	ZSMMG ( app_shared_globals )		21356	0					
ANR	21400	Callee	ZSMMG		21356	0					
ANR	21401	Identifier	ZSMMG		21356	0					
ANR	21402	ArgumentList	app_shared_globals		21356	1					
ANR	21403	Argument	app_shared_globals		21356	0					
ANR	21404	Identifier	app_shared_globals		21356	0					
ANR	21405	Identifier	accel_shared_globals		21356	1					
ANR	21406	ExpressionStatement	"zend_accel_hash_init ( & ZCSG ( hash ) , ZCG ( accel_directives ) . max_accelerated_files )"	2383:1:71939:72017	21356	4	True				
ANR	21407	CallExpression	"zend_accel_hash_init ( & ZCSG ( hash ) , ZCG ( accel_directives ) . max_accelerated_files )"		21356	0					
ANR	21408	Callee	zend_accel_hash_init		21356	0					
ANR	21409	Identifier	zend_accel_hash_init		21356	0					
ANR	21410	ArgumentList	& ZCSG ( hash )		21356	1					
ANR	21411	Argument	& ZCSG ( hash )		21356	0					
ANR	21412	UnaryOperationExpression	& ZCSG ( hash )		21356	0					
ANR	21413	UnaryOperator	&		21356	0					
ANR	21414	CallExpression	ZCSG ( hash )		21356	1					
ANR	21415	Callee	ZCSG		21356	0					
ANR	21416	Identifier	ZCSG		21356	0					
ANR	21417	ArgumentList	hash		21356	1					
ANR	21418	Argument	hash		21356	0					
ANR	21419	Identifier	hash		21356	0					
ANR	21420	Argument	ZCG ( accel_directives ) . max_accelerated_files		21356	1					
ANR	21421	MemberAccess	ZCG ( accel_directives ) . max_accelerated_files		21356	0					
ANR	21422	CallExpression	ZCG ( accel_directives )		21356	0					
ANR	21423	Callee	ZCG		21356	0					
ANR	21424	Identifier	ZCG		21356	0					
ANR	21425	ArgumentList	accel_directives		21356	1					
ANR	21426	Argument	accel_directives		21356	0					
ANR	21427	Identifier	accel_directives		21356	0					
ANR	21428	Identifier	max_accelerated_files		21356	1					
ANR	21429	ExpressionStatement	ZCSG ( interned_strings_start ) = ZCSG ( interned_strings_end ) = NULL	2385:1:72021:72085	21356	5	True				
ANR	21430	AssignmentExpression	ZCSG ( interned_strings_start ) = ZCSG ( interned_strings_end ) = NULL		21356	0		=			
ANR	21431	CallExpression	ZCSG ( interned_strings_start )		21356	0					
ANR	21432	Callee	ZCSG		21356	0					
ANR	21433	Identifier	ZCSG		21356	0					
ANR	21434	ArgumentList	interned_strings_start		21356	1					
ANR	21435	Argument	interned_strings_start		21356	0					
ANR	21436	Identifier	interned_strings_start		21356	0					
ANR	21437	AssignmentExpression	ZCSG ( interned_strings_end ) = NULL		21356	1		=			
ANR	21438	CallExpression	ZCSG ( interned_strings_end )		21356	0					
ANR	21439	Callee	ZCSG		21356	0					
ANR	21440	Identifier	ZCSG		21356	0					
ANR	21441	ArgumentList	interned_strings_end		21356	1					
ANR	21442	Argument	interned_strings_end		21356	0					
ANR	21443	Identifier	interned_strings_end		21356	0					
ANR	21444	Identifier	NULL		21356	1					
ANR	21445	IdentifierDeclStatement	"ifndef ZTS zend_hash_init ( & ZCSG ( interned_strings ) , ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 ) , NULL , NULL , 1 ) ;"	2386:2:72089:72287	21356	6	True				
ANR	21446	IdentifierDecl	"zend_hash_init ( & ZCSG ( interned_strings ) , ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 ) , NULL , NULL , 1 )"		21356	0					
ANR	21447	IdentifierDeclType	ifndef ZTS		21356	0					
ANR	21448	Identifier	zend_hash_init		21356	1					
ANR	21449	Expression	"& ZCSG ( interned_strings ) , ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 ) , NULL , NULL , 1"		21356	2					
ANR	21450	UnaryOperationExpression	& ZCSG ( interned_strings )		21356	0					
ANR	21451	UnaryOperator	&		21356	0					
ANR	21452	CallExpression	ZCSG ( interned_strings )		21356	1					
ANR	21453	Callee	ZCSG		21356	0					
ANR	21454	Identifier	ZCSG		21356	0					
ANR	21455	ArgumentList	interned_strings		21356	1					
ANR	21456	Argument	interned_strings		21356	0					
ANR	21457	Identifier	interned_strings		21356	0					
ANR	21458	Expression	"( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 ) , NULL , NULL , 1"		21356	1					
ANR	21459	MultiplicativeExpression	( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 )		21356	0		/			
ANR	21460	MultiplicativeExpression	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		21356	0		*			
ANR	21461	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		21356	0					
ANR	21462	CallExpression	ZCG ( accel_directives )		21356	0					
ANR	21463	Callee	ZCG		21356	0					
ANR	21464	Identifier	ZCG		21356	0					
ANR	21465	ArgumentList	accel_directives		21356	1					
ANR	21466	Argument	accel_directives		21356	0					
ANR	21467	Identifier	accel_directives		21356	0					
ANR	21468	Identifier	interned_strings_buffer		21356	1					
ANR	21469	MultiplicativeExpression	1024 * 1024		21356	1		*			
ANR	21470	PrimaryExpression	1024		21356	0					
ANR	21471	PrimaryExpression	1024		21356	1					
ANR	21472	AdditiveExpression	sizeof ( Bucket ) + sizeof ( Bucket * ) + 8		21356	1		+			
ANR	21473	SizeofExpression	sizeof ( Bucket )		21356	0					
ANR	21474	Sizeof	sizeof		21356	0					
ANR	21475	SizeofOperand	Bucket		21356	1					
ANR	21476	AdditiveExpression	sizeof ( Bucket * ) + 8		21356	1		+			
ANR	21477	SizeofExpression	sizeof ( Bucket * )		21356	0					
ANR	21478	Sizeof	sizeof		21356	0					
ANR	21479	SizeofOperand	Bucket *		21356	1					
ANR	21480	PrimaryExpression	8		21356	1					
ANR	21481	Expression	"NULL , NULL , 1"		21356	1					
ANR	21482	Identifier	NULL		21356	0					
ANR	21483	Expression	"NULL , 1"		21356	1					
ANR	21484	Identifier	NULL		21356	0					
ANR	21485	PrimaryExpression	1		21356	1					
ANR	21486	IfStatement	if ( ZCG ( accel_directives ) . interned_strings_buffer )		21356	7					
ANR	21487	Condition	ZCG ( accel_directives ) . interned_strings_buffer	2388:5:72294:72338	21356	0	True				
ANR	21488	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		21356	0					
ANR	21489	CallExpression	ZCG ( accel_directives )		21356	0					
ANR	21490	Callee	ZCG		21356	0					
ANR	21491	Identifier	ZCG		21356	0					
ANR	21492	ArgumentList	accel_directives		21356	1					
ANR	21493	Argument	accel_directives		21356	0					
ANR	21494	Identifier	accel_directives		21356	0					
ANR	21495	Identifier	interned_strings_buffer		21356	1					
ANR	21496	CompoundStatement		18:2:715:725	21356	1					
ANR	21497	IdentifierDeclStatement	void * data ;	2389:2:72345:72355	21356	0	True				
ANR	21498	IdentifierDecl	* data		21356	0					
ANR	21499	IdentifierDeclType	void *		21356	0					
ANR	21500	Identifier	data		21356	1					
ANR	21501	ExpressionStatement	ZCSG ( interned_strings ) . nTableMask = - ZCSG ( interned_strings ) . nTableSize	2391:2:72360:72430	21356	1	True				
ANR	21502	AssignmentExpression	ZCSG ( interned_strings ) . nTableMask = - ZCSG ( interned_strings ) . nTableSize		21356	0		=			
ANR	21503	MemberAccess	ZCSG ( interned_strings ) . nTableMask		21356	0					
ANR	21504	CallExpression	ZCSG ( interned_strings )		21356	0					
ANR	21505	Callee	ZCSG		21356	0					
ANR	21506	Identifier	ZCSG		21356	0					
ANR	21507	ArgumentList	interned_strings		21356	1					
ANR	21508	Argument	interned_strings		21356	0					
ANR	21509	Identifier	interned_strings		21356	0					
ANR	21510	Identifier	nTableMask		21356	1					
ANR	21511	UnaryOperationExpression	- ZCSG ( interned_strings ) . nTableSize		21356	1					
ANR	21512	UnaryOperator	-		21356	0					
ANR	21513	MemberAccess	ZCSG ( interned_strings ) . nTableSize		21356	1					
ANR	21514	CallExpression	ZCSG ( interned_strings )		21356	0					
ANR	21515	Callee	ZCSG		21356	0					
ANR	21516	Identifier	ZCSG		21356	0					
ANR	21517	ArgumentList	interned_strings		21356	1					
ANR	21518	Argument	interned_strings		21356	0					
ANR	21519	Identifier	interned_strings		21356	0					
ANR	21520	Identifier	nTableSize		21356	1					
ANR	21521	ExpressionStatement	data = zend_shared_alloc ( HT_SIZE ( & ZCSG ( interned_strings ) ) )	2392:2:72434:72492	21356	2	True				
ANR	21522	AssignmentExpression	data = zend_shared_alloc ( HT_SIZE ( & ZCSG ( interned_strings ) ) )		21356	0		=			
ANR	21523	Identifier	data		21356	0					
ANR	21524	CallExpression	zend_shared_alloc ( HT_SIZE ( & ZCSG ( interned_strings ) ) )		21356	1					
ANR	21525	Callee	zend_shared_alloc		21356	0					
ANR	21526	Identifier	zend_shared_alloc		21356	0					
ANR	21527	ArgumentList	HT_SIZE ( & ZCSG ( interned_strings ) )		21356	1					
ANR	21528	Argument	HT_SIZE ( & ZCSG ( interned_strings ) )		21356	0					
ANR	21529	CallExpression	HT_SIZE ( & ZCSG ( interned_strings ) )		21356	0					
ANR	21530	Callee	HT_SIZE		21356	0					
ANR	21531	Identifier	HT_SIZE		21356	0					
ANR	21532	ArgumentList	& ZCSG ( interned_strings )		21356	1					
ANR	21533	Argument	& ZCSG ( interned_strings )		21356	0					
ANR	21534	UnaryOperationExpression	& ZCSG ( interned_strings )		21356	0					
ANR	21535	UnaryOperator	&		21356	0					
ANR	21536	CallExpression	ZCSG ( interned_strings )		21356	1					
ANR	21537	Callee	ZCSG		21356	0					
ANR	21538	Identifier	ZCSG		21356	0					
ANR	21539	ArgumentList	interned_strings		21356	1					
ANR	21540	Argument	interned_strings		21356	0					
ANR	21541	Identifier	interned_strings		21356	0					
ANR	21542	ExpressionStatement	ZCSG ( interned_strings_start ) = zend_shared_alloc ( ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) )	2393:2:72496:72607	21356	3	True				
ANR	21543	AssignmentExpression	ZCSG ( interned_strings_start ) = zend_shared_alloc ( ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) )		21356	0		=			
ANR	21544	CallExpression	ZCSG ( interned_strings_start )		21356	0					
ANR	21545	Callee	ZCSG		21356	0					
ANR	21546	Identifier	ZCSG		21356	0					
ANR	21547	ArgumentList	interned_strings_start		21356	1					
ANR	21548	Argument	interned_strings_start		21356	0					
ANR	21549	Identifier	interned_strings_start		21356	0					
ANR	21550	CallExpression	zend_shared_alloc ( ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) )		21356	1					
ANR	21551	Callee	zend_shared_alloc		21356	0					
ANR	21552	Identifier	zend_shared_alloc		21356	0					
ANR	21553	ArgumentList	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		21356	1					
ANR	21554	Argument	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		21356	0					
ANR	21555	MultiplicativeExpression	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		21356	0		*			
ANR	21556	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		21356	0					
ANR	21557	CallExpression	ZCG ( accel_directives )		21356	0					
ANR	21558	Callee	ZCG		21356	0					
ANR	21559	Identifier	ZCG		21356	0					
ANR	21560	ArgumentList	accel_directives		21356	1					
ANR	21561	Argument	accel_directives		21356	0					
ANR	21562	Identifier	accel_directives		21356	0					
ANR	21563	Identifier	interned_strings_buffer		21356	1					
ANR	21564	MultiplicativeExpression	1024 * 1024		21356	1		*			
ANR	21565	PrimaryExpression	1024		21356	0					
ANR	21566	PrimaryExpression	1024		21356	1					
ANR	21567	IfStatement	if ( ! data || ! ZCSG ( interned_strings_start ) )		21356	4					
ANR	21568	Condition	! data || ! ZCSG ( interned_strings_start )	2394:6:72615:72652	21356	0	True				
ANR	21569	OrExpression	! data || ! ZCSG ( interned_strings_start )		21356	0		||			
ANR	21570	UnaryOperationExpression	! data		21356	0					
ANR	21571	UnaryOperator	!		21356	0					
ANR	21572	Identifier	data		21356	1					
ANR	21573	UnaryOperationExpression	! ZCSG ( interned_strings_start )		21356	1					
ANR	21574	UnaryOperator	!		21356	0					
ANR	21575	CallExpression	ZCSG ( interned_strings_start )		21356	1					
ANR	21576	Callee	ZCSG		21356	0					
ANR	21577	Identifier	ZCSG		21356	0					
ANR	21578	ArgumentList	interned_strings_start		21356	1					
ANR	21579	Argument	interned_strings_start		21356	0					
ANR	21580	Identifier	interned_strings_start		21356	0					
ANR	21581	CompoundStatement		23:46:1025:1025	21356	1					
ANR	21582	Statement	zend_accel_error	2395:3:72660:72675	21356	0	True				
ANR	21583	Statement	(	2395:19:72676:72676	21356	1	True				
ANR	21584	Statement	ACCEL_LOG_FATAL	2395:20:72677:72691	21356	2	True				
ANR	21585	Statement	","	2395:35:72692:72692	21356	3	True				
ANR	21586	Statement	ACCELERATOR_PRODUCT_NAME	2395:37:72694:72717	21356	4	True				
ANR	21587	Statement	""" cannot allocate buffer for interned strings"""	2395:62:72719:72764	21356	5	True				
ANR	21588	Statement	)	2395:108:72765:72765	21356	6	True				
ANR	21589	ExpressionStatement		2395:109:72766:72766	21356	7	True				
ANR	21590	ExpressionStatement	zend_shared_alloc_unlock ( )	2396:3:72771:72797	21356	8	True				
ANR	21591	CallExpression	zend_shared_alloc_unlock ( )		21356	0					
ANR	21592	Callee	zend_shared_alloc_unlock		21356	0					
ANR	21593	Identifier	zend_shared_alloc_unlock		21356	0					
ANR	21594	ArgumentList			21356	1					
ANR	21595	ReturnStatement	return FAILURE ;	2397:3:72802:72816	21356	9	True				
ANR	21596	Identifier	FAILURE		21356	0					
ANR	21597	ExpressionStatement	"HT_SET_DATA_ADDR ( & ZCSG ( interned_strings ) , data )"	2399:2:72824:72871	21356	5	True				
ANR	21598	CallExpression	"HT_SET_DATA_ADDR ( & ZCSG ( interned_strings ) , data )"		21356	0					
ANR	21599	Callee	HT_SET_DATA_ADDR		21356	0					
ANR	21600	Identifier	HT_SET_DATA_ADDR		21356	0					
ANR	21601	ArgumentList	& ZCSG ( interned_strings )		21356	1					
ANR	21602	Argument	& ZCSG ( interned_strings )		21356	0					
ANR	21603	UnaryOperationExpression	& ZCSG ( interned_strings )		21356	0					
ANR	21604	UnaryOperator	&		21356	0					
ANR	21605	CallExpression	ZCSG ( interned_strings )		21356	1					
ANR	21606	Callee	ZCSG		21356	0					
ANR	21607	Identifier	ZCSG		21356	0					
ANR	21608	ArgumentList	interned_strings		21356	1					
ANR	21609	Argument	interned_strings		21356	0					
ANR	21610	Identifier	interned_strings		21356	0					
ANR	21611	Argument	data		21356	1					
ANR	21612	Identifier	data		21356	0					
ANR	21613	ExpressionStatement	HT_HASH_RESET ( & ZCSG ( interned_strings ) )	2400:2:72875:72913	21356	6	True				
ANR	21614	CallExpression	HT_HASH_RESET ( & ZCSG ( interned_strings ) )		21356	0					
ANR	21615	Callee	HT_HASH_RESET		21356	0					
ANR	21616	Identifier	HT_HASH_RESET		21356	0					
ANR	21617	ArgumentList	& ZCSG ( interned_strings )		21356	1					
ANR	21618	Argument	& ZCSG ( interned_strings )		21356	0					
ANR	21619	UnaryOperationExpression	& ZCSG ( interned_strings )		21356	0					
ANR	21620	UnaryOperator	&		21356	0					
ANR	21621	CallExpression	ZCSG ( interned_strings )		21356	1					
ANR	21622	Callee	ZCSG		21356	0					
ANR	21623	Identifier	ZCSG		21356	0					
ANR	21624	ArgumentList	interned_strings		21356	1					
ANR	21625	Argument	interned_strings		21356	0					
ANR	21626	Identifier	interned_strings		21356	0					
ANR	21627	ExpressionStatement	ZCSG ( interned_strings_end ) = ZCSG ( interned_strings_start ) + ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 )	2401:2:72917:73040	21356	7	True				
ANR	21628	AssignmentExpression	ZCSG ( interned_strings_end ) = ZCSG ( interned_strings_start ) + ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 )		21356	0		=			
ANR	21629	CallExpression	ZCSG ( interned_strings_end )		21356	0					
ANR	21630	Callee	ZCSG		21356	0					
ANR	21631	Identifier	ZCSG		21356	0					
ANR	21632	ArgumentList	interned_strings_end		21356	1					
ANR	21633	Argument	interned_strings_end		21356	0					
ANR	21634	Identifier	interned_strings_end		21356	0					
ANR	21635	AdditiveExpression	ZCSG ( interned_strings_start ) + ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 )		21356	1		+			
ANR	21636	CallExpression	ZCSG ( interned_strings_start )		21356	0					
ANR	21637	Callee	ZCSG		21356	0					
ANR	21638	Identifier	ZCSG		21356	0					
ANR	21639	ArgumentList	interned_strings_start		21356	1					
ANR	21640	Argument	interned_strings_start		21356	0					
ANR	21641	Identifier	interned_strings_start		21356	0					
ANR	21642	MultiplicativeExpression	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		21356	1		*			
ANR	21643	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		21356	0					
ANR	21644	CallExpression	ZCG ( accel_directives )		21356	0					
ANR	21645	Callee	ZCG		21356	0					
ANR	21646	Identifier	ZCG		21356	0					
ANR	21647	ArgumentList	accel_directives		21356	1					
ANR	21648	Argument	accel_directives		21356	0					
ANR	21649	Identifier	accel_directives		21356	0					
ANR	21650	Identifier	interned_strings_buffer		21356	1					
ANR	21651	MultiplicativeExpression	1024 * 1024		21356	1		*			
ANR	21652	PrimaryExpression	1024		21356	0					
ANR	21653	PrimaryExpression	1024		21356	1					
ANR	21654	ExpressionStatement	ZCSG ( interned_strings_top ) = ZCSG ( interned_strings_start )	2402:2:73044:73103	21356	8	True				
ANR	21655	AssignmentExpression	ZCSG ( interned_strings_top ) = ZCSG ( interned_strings_start )		21356	0		=			
ANR	21656	CallExpression	ZCSG ( interned_strings_top )		21356	0					
ANR	21657	Callee	ZCSG		21356	0					
ANR	21658	Identifier	ZCSG		21356	0					
ANR	21659	ArgumentList	interned_strings_top		21356	1					
ANR	21660	Argument	interned_strings_top		21356	0					
ANR	21661	Identifier	interned_strings_top		21356	0					
ANR	21662	CallExpression	ZCSG ( interned_strings_start )		21356	1					
ANR	21663	Callee	ZCSG		21356	0					
ANR	21664	Identifier	ZCSG		21356	0					
ANR	21665	ArgumentList	interned_strings_start		21356	1					
ANR	21666	Argument	interned_strings_start		21356	0					
ANR	21667	Identifier	interned_strings_start		21356	0					
ANR	21668	IdentifierDeclStatement	endif orig_new_interned_string = zend_new_interned_string ;	2409:2:73353:73412	21356	8	True				
ANR	21669	IdentifierDecl	orig_new_interned_string = zend_new_interned_string		21356	0					
ANR	21670	IdentifierDeclType	endif		21356	0					
ANR	21671	Identifier	orig_new_interned_string		21356	1					
ANR	21672	AssignmentExpression	orig_new_interned_string = zend_new_interned_string		21356	2		=			
ANR	21673	Identifier	zend_new_interned_string		21356	0					
ANR	21674	Identifier	zend_new_interned_string		21356	1					
ANR	21675	ExpressionStatement	orig_interned_strings_snapshot = zend_interned_strings_snapshot	2412:1:73415:73478	21356	9	True				
ANR	21676	AssignmentExpression	orig_interned_strings_snapshot = zend_interned_strings_snapshot		21356	0		=			
ANR	21677	Identifier	orig_interned_strings_snapshot		21356	0					
ANR	21678	Identifier	zend_interned_strings_snapshot		21356	1					
ANR	21679	ExpressionStatement	orig_interned_strings_restore = zend_interned_strings_restore	2413:1:73481:73542	21356	10	True				
ANR	21680	AssignmentExpression	orig_interned_strings_restore = zend_interned_strings_restore		21356	0		=			
ANR	21681	Identifier	orig_interned_strings_restore		21356	0					
ANR	21682	Identifier	zend_interned_strings_restore		21356	1					
ANR	21683	ExpressionStatement	zend_new_interned_string = accel_new_interned_string_for_php	2414:1:73545:73605	21356	11	True				
ANR	21684	AssignmentExpression	zend_new_interned_string = accel_new_interned_string_for_php		21356	0		=			
ANR	21685	Identifier	zend_new_interned_string		21356	0					
ANR	21686	Identifier	accel_new_interned_string_for_php		21356	1					
ANR	21687	ExpressionStatement	zend_interned_strings_snapshot = accel_interned_strings_snapshot_for_php	2415:1:73608:73680	21356	12	True				
ANR	21688	AssignmentExpression	zend_interned_strings_snapshot = accel_interned_strings_snapshot_for_php		21356	0		=			
ANR	21689	Identifier	zend_interned_strings_snapshot		21356	0					
ANR	21690	Identifier	accel_interned_strings_snapshot_for_php		21356	1					
ANR	21691	ExpressionStatement	zend_interned_strings_restore = accel_interned_strings_restore_for_php	2416:1:73683:73753	21356	13	True				
ANR	21692	AssignmentExpression	zend_interned_strings_restore = accel_interned_strings_restore_for_php		21356	0		=			
ANR	21693	Identifier	zend_interned_strings_restore		21356	0					
ANR	21694	Identifier	accel_interned_strings_restore_for_php		21356	1					
ANR	21695	Statement	ifndef	2418:2:73758:73763	21356	14	True				
ANR	21696	Statement	ZTS	2418:9:73765:73767	21356	15	True				
ANR	21697	IfStatement	if ( ZCG ( accel_directives ) . interned_strings_buffer )		21356	16					
ANR	21698	Condition	ZCG ( accel_directives ) . interned_strings_buffer	2419:5:73774:73818	21356	0	True				
ANR	21699	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		21356	0					
ANR	21700	CallExpression	ZCG ( accel_directives )		21356	0					
ANR	21701	Callee	ZCG		21356	0					
ANR	21702	Identifier	ZCG		21356	0					
ANR	21703	ArgumentList	accel_directives		21356	1					
ANR	21704	Argument	accel_directives		21356	0					
ANR	21705	Identifier	accel_directives		21356	0					
ANR	21706	Identifier	interned_strings_buffer		21356	1					
ANR	21707	CompoundStatement		48:52:2191:2191	21356	1					
ANR	21708	ExpressionStatement	accel_use_shm_interned_strings ( )	2420:2:73825:73857	21356	0	True				
ANR	21709	CallExpression	accel_use_shm_interned_strings ( )		21356	0					
ANR	21710	Callee	accel_use_shm_interned_strings		21356	0					
ANR	21711	Identifier	accel_use_shm_interned_strings		21356	0					
ANR	21712	ArgumentList			21356	1					
ANR	21713	ExpressionStatement	accel_interned_strings_save_state ( )	2421:2:73861:73896	21356	1	True				
ANR	21714	CallExpression	accel_interned_strings_save_state ( )		21356	0					
ANR	21715	Callee	accel_interned_strings_save_state		21356	0					
ANR	21716	Identifier	accel_interned_strings_save_state		21356	0					
ANR	21717	ArgumentList			21356	1					
ANR	21718	IdentifierDeclStatement	endif zend_reset_cache_vars ( ) ;	2423:2:73903:73934	21356	17	True				
ANR	21719	IdentifierDecl	zend_reset_cache_vars ( )		21356	0					
ANR	21720	IdentifierDeclType	endif		21356	0					
ANR	21721	Identifier	zend_reset_cache_vars		21356	1					
ANR	21722	ExpressionStatement	ZCSG ( oom_restarts ) = 0	2427:1:73938:73960	21356	18	True				
ANR	21723	AssignmentExpression	ZCSG ( oom_restarts ) = 0		21356	0		=			
ANR	21724	CallExpression	ZCSG ( oom_restarts )		21356	0					
ANR	21725	Callee	ZCSG		21356	0					
ANR	21726	Identifier	ZCSG		21356	0					
ANR	21727	ArgumentList	oom_restarts		21356	1					
ANR	21728	Argument	oom_restarts		21356	0					
ANR	21729	Identifier	oom_restarts		21356	0					
ANR	21730	PrimaryExpression	0		21356	1					
ANR	21731	ExpressionStatement	ZCSG ( hash_restarts ) = 0	2428:1:73963:73986	21356	19	True				
ANR	21732	AssignmentExpression	ZCSG ( hash_restarts ) = 0		21356	0		=			
ANR	21733	CallExpression	ZCSG ( hash_restarts )		21356	0					
ANR	21734	Callee	ZCSG		21356	0					
ANR	21735	Identifier	ZCSG		21356	0					
ANR	21736	ArgumentList	hash_restarts		21356	1					
ANR	21737	Argument	hash_restarts		21356	0					
ANR	21738	Identifier	hash_restarts		21356	0					
ANR	21739	PrimaryExpression	0		21356	1					
ANR	21740	ExpressionStatement	ZCSG ( manual_restarts ) = 0	2429:1:73989:74014	21356	20	True				
ANR	21741	AssignmentExpression	ZCSG ( manual_restarts ) = 0		21356	0		=			
ANR	21742	CallExpression	ZCSG ( manual_restarts )		21356	0					
ANR	21743	Callee	ZCSG		21356	0					
ANR	21744	Identifier	ZCSG		21356	0					
ANR	21745	ArgumentList	manual_restarts		21356	1					
ANR	21746	Argument	manual_restarts		21356	0					
ANR	21747	Identifier	manual_restarts		21356	0					
ANR	21748	PrimaryExpression	0		21356	1					
ANR	21749	ExpressionStatement	ZCSG ( accelerator_enabled ) = 1	2431:1:74018:74047	21356	21	True				
ANR	21750	AssignmentExpression	ZCSG ( accelerator_enabled ) = 1		21356	0		=			
ANR	21751	CallExpression	ZCSG ( accelerator_enabled )		21356	0					
ANR	21752	Callee	ZCSG		21356	0					
ANR	21753	Identifier	ZCSG		21356	0					
ANR	21754	ArgumentList	accelerator_enabled		21356	1					
ANR	21755	Argument	accelerator_enabled		21356	0					
ANR	21756	Identifier	accelerator_enabled		21356	0					
ANR	21757	PrimaryExpression	1		21356	1					
ANR	21758	ExpressionStatement	ZCSG ( start_time ) = zend_accel_get_time ( )	2432:1:74050:74090	21356	22	True				
ANR	21759	AssignmentExpression	ZCSG ( start_time ) = zend_accel_get_time ( )		21356	0		=			
ANR	21760	CallExpression	ZCSG ( start_time )		21356	0					
ANR	21761	Callee	ZCSG		21356	0					
ANR	21762	Identifier	ZCSG		21356	0					
ANR	21763	ArgumentList	start_time		21356	1					
ANR	21764	Argument	start_time		21356	0					
ANR	21765	Identifier	start_time		21356	0					
ANR	21766	CallExpression	zend_accel_get_time ( )		21356	1					
ANR	21767	Callee	zend_accel_get_time		21356	0					
ANR	21768	Identifier	zend_accel_get_time		21356	0					
ANR	21769	ArgumentList			21356	1					
ANR	21770	ExpressionStatement	ZCSG ( last_restart_time ) = 0	2433:1:74093:74120	21356	23	True				
ANR	21771	AssignmentExpression	ZCSG ( last_restart_time ) = 0		21356	0		=			
ANR	21772	CallExpression	ZCSG ( last_restart_time )		21356	0					
ANR	21773	Callee	ZCSG		21356	0					
ANR	21774	Identifier	ZCSG		21356	0					
ANR	21775	ArgumentList	last_restart_time		21356	1					
ANR	21776	Argument	last_restart_time		21356	0					
ANR	21777	Identifier	last_restart_time		21356	0					
ANR	21778	PrimaryExpression	0		21356	1					
ANR	21779	ExpressionStatement	ZCSG ( restart_in_progress ) = 0	2434:1:74123:74152	21356	24	True				
ANR	21780	AssignmentExpression	ZCSG ( restart_in_progress ) = 0		21356	0		=			
ANR	21781	CallExpression	ZCSG ( restart_in_progress )		21356	0					
ANR	21782	Callee	ZCSG		21356	0					
ANR	21783	Identifier	ZCSG		21356	0					
ANR	21784	ArgumentList	restart_in_progress		21356	1					
ANR	21785	Argument	restart_in_progress		21356	0					
ANR	21786	Identifier	restart_in_progress		21356	0					
ANR	21787	PrimaryExpression	0		21356	1					
ANR	21788	ExpressionStatement	zend_shared_alloc_unlock ( )	2436:1:74156:74182	21356	25	True				
ANR	21789	CallExpression	zend_shared_alloc_unlock ( )		21356	0					
ANR	21790	Callee	zend_shared_alloc_unlock		21356	0					
ANR	21791	Identifier	zend_shared_alloc_unlock		21356	0					
ANR	21792	ArgumentList			21356	1					
ANR	21793	ReturnStatement	return SUCCESS ;	2438:1:74186:74200	21356	26	True				
ANR	21794	Identifier	SUCCESS		21356	0					
ANR	21795	ReturnType	static int		21356	1					
ANR	21796	Identifier	zend_accel_init_shm		21356	2					
ANR	21797	ParameterList			21356	3					
ANR	21798	CFGEntryNode	ENTRY		21356		True				
ANR	21799	CFGExitNode	EXIT		21356		True				
ANR	21800	Symbol	zend_shared_alloc		21356						
ANR	21801	Symbol	ACCEL_LOG_FATAL		21356						
ANR	21802	Symbol	data		21356						
ANR	21803	Symbol	interned_strings_end		21356						
ANR	21804	Symbol	orig_interned_strings_snapshot		21356						
ANR	21805	Symbol	restart_in_progress		21356						
ANR	21806	Symbol	zend_accel_get_time		21356						
ANR	21807	Symbol	interned_strings_top		21356						
ANR	21808	Symbol	ZCG ( accel_directives ) . max_accelerated_files		21356						
ANR	21809	Symbol	ZCSG		21356						
ANR	21810	Symbol	ZSMMG		21356						
ANR	21811	Symbol	zend_interned_strings_restore		21356						
ANR	21812	Symbol	accel_shared_globals		21356						
ANR	21813	Symbol	ZCSG ( interned_strings ) . nTableSize		21356						
ANR	21814	Symbol	interned_strings_start		21356						
ANR	21815	Symbol	orig_interned_strings_restore		21356						
ANR	21816	Symbol	app_shared_globals		21356						
ANR	21817	Symbol	NULL		21356						
ANR	21818	Symbol	SUCCESS		21356						
ANR	21819	Symbol	accel_interned_strings_restore_for_php		21356						
ANR	21820	Symbol	zend_interned_strings_snapshot		21356						
ANR	21821	Symbol	accel_new_interned_string_for_php		21356						
ANR	21822	Symbol	FAILURE		21356						
ANR	21823	Symbol	HT_SIZE		21356						
ANR	21824	Symbol	accelerator_enabled		21356						
ANR	21825	Symbol	orig_new_interned_string		21356						
ANR	21826	Symbol	start_time		21356						
ANR	21827	Symbol	& ZCSG		21356						
ANR	21828	Symbol	accel_interned_strings_snapshot_for_php		21356						
ANR	21829	Symbol	zend_new_interned_string		21356						
ANR	21830	Symbol	oom_restarts		21356						
ANR	21831	Symbol	last_restart_time		21356						
ANR	21832	Symbol	ZCSG ( interned_strings ) . nTableMask		21356						
ANR	21833	Symbol	ZCG ( accel_directives ) . interned_strings_buffer		21356						
ANR	21834	Symbol	manual_restarts		21356						
ANR	21835	Symbol	zend_reset_cache_vars		21356						
ANR	21836	Symbol	zend_hash_init		21356						
ANR	21837	Symbol	interned_strings		21356						
ANR	21838	Symbol	accel_directives		21356						
ANR	21839	Symbol	hash		21356						
ANR	21840	Symbol	ZCG		21356						
ANR	21841	Symbol	hash_restarts		21356						
ANR	21842	Function	accel_globals_ctor	2441:0:74205:74412							
ANR	21843	FunctionDef	accel_globals_ctor (zend_accel_globals * accel_globals)		21842	0					
ANR	21844	CompoundStatement		2442:0:74271:74412	21842	0					
ANR	21845	ExpressionStatement	ZEND_TSRMLS_CACHE_UPDATE ( )	2444:1:74322:74348	21842	0	True				
ANR	21846	CallExpression	ZEND_TSRMLS_CACHE_UPDATE ( )		21842	0					
ANR	21847	Callee	ZEND_TSRMLS_CACHE_UPDATE		21842	0					
ANR	21848	Identifier	ZEND_TSRMLS_CACHE_UPDATE		21842	0					
ANR	21849	ArgumentList			21842	1					
ANR	21850	ExpressionStatement	"memset ( accel_globals , 0 , sizeof ( zend_accel_globals ) )"	2446:1:74358:74410	21842	1	True				
ANR	21851	CallExpression	"memset ( accel_globals , 0 , sizeof ( zend_accel_globals ) )"		21842	0					
ANR	21852	Callee	memset		21842	0					
ANR	21853	Identifier	memset		21842	0					
ANR	21854	ArgumentList	accel_globals		21842	1					
ANR	21855	Argument	accel_globals		21842	0					
ANR	21856	Identifier	accel_globals		21842	0					
ANR	21857	Argument	0		21842	1					
ANR	21858	PrimaryExpression	0		21842	0					
ANR	21859	Argument	sizeof ( zend_accel_globals )		21842	2					
ANR	21860	SizeofExpression	sizeof ( zend_accel_globals )		21842	0					
ANR	21861	Sizeof	sizeof		21842	0					
ANR	21862	SizeofOperand	zend_accel_globals		21842	1					
ANR	21863	ReturnType	static void		21842	1					
ANR	21864	Identifier	accel_globals_ctor		21842	2					
ANR	21865	ParameterList	zend_accel_globals * accel_globals		21842	3					
ANR	21866	Parameter	zend_accel_globals * accel_globals	2441:31:74236:74268	21842	0	True				
ANR	21867	ParameterType	zend_accel_globals *		21842	0					
ANR	21868	Identifier	accel_globals		21842	1					
ANR	21869	CFGEntryNode	ENTRY		21842		True				
ANR	21870	CFGExitNode	EXIT		21842		True				
ANR	21871	Symbol	accel_globals		21842						
ANR	21872	Function	accel_globals_internal_func_dtor	2449:0:74415:74492							
ANR	21873	FunctionDef	accel_globals_internal_func_dtor (zval * zv)		21872	0					
ANR	21874	CompoundStatement		2450:0:74470:74492	21872	0					
ANR	21875	ExpressionStatement	free ( Z_PTR_P ( zv ) )	2451:1:74473:74490	21872	0	True				
ANR	21876	CallExpression	free ( Z_PTR_P ( zv ) )		21872	0					
ANR	21877	Callee	free		21872	0					
ANR	21878	Identifier	free		21872	0					
ANR	21879	ArgumentList	Z_PTR_P ( zv )		21872	1					
ANR	21880	Argument	Z_PTR_P ( zv )		21872	0					
ANR	21881	CallExpression	Z_PTR_P ( zv )		21872	0					
ANR	21882	Callee	Z_PTR_P		21872	0					
ANR	21883	Identifier	Z_PTR_P		21872	0					
ANR	21884	ArgumentList	zv		21872	1					
ANR	21885	Argument	zv		21872	0					
ANR	21886	Identifier	zv		21872	0					
ANR	21887	ReturnType	static void		21872	1					
ANR	21888	Identifier	accel_globals_internal_func_dtor		21872	2					
ANR	21889	ParameterList	zval * zv		21872	3					
ANR	21890	Parameter	zval * zv	2449:45:74460:74467	21872	0	True				
ANR	21891	ParameterType	zval *		21872	0					
ANR	21892	Identifier	zv		21872	1					
ANR	21893	CFGEntryNode	ENTRY		21872		True				
ANR	21894	CFGExitNode	EXIT		21872		True				
ANR	21895	Symbol	Z_PTR_P		21872						
ANR	21896	Symbol	zv		21872						
ANR	21897	Function	accel_globals_dtor	2454:0:74495:74748							
ANR	21898	FunctionDef	accel_globals_dtor (zend_accel_globals * accel_globals)		21897	0					
ANR	21899	CompoundStatement		2455:0:74561:74748	21897	0					
ANR	21900	IfStatement	if ( accel_globals -> function_table . nTableSize )		21897	0					
ANR	21901	Condition	accel_globals -> function_table . nTableSize	2456:5:74568:74607	21897	0	True				
ANR	21902	MemberAccess	accel_globals -> function_table . nTableSize		21897	0					
ANR	21903	PtrMemberAccess	accel_globals -> function_table		21897	0					
ANR	21904	Identifier	accel_globals		21897	0					
ANR	21905	Identifier	function_table		21897	1					
ANR	21906	Identifier	nTableSize		21897	1					
ANR	21907	CompoundStatement		2:47:48:48	21897	1					
ANR	21908	ExpressionStatement	accel_globals -> function_table . pDestructor = accel_globals_internal_func_dtor	2457:2:74614:74690	21897	0	True				
ANR	21909	AssignmentExpression	accel_globals -> function_table . pDestructor = accel_globals_internal_func_dtor		21897	0		=			
ANR	21910	MemberAccess	accel_globals -> function_table . pDestructor		21897	0					
ANR	21911	PtrMemberAccess	accel_globals -> function_table		21897	0					
ANR	21912	Identifier	accel_globals		21897	0					
ANR	21913	Identifier	function_table		21897	1					
ANR	21914	Identifier	pDestructor		21897	1					
ANR	21915	Identifier	accel_globals_internal_func_dtor		21897	1					
ANR	21916	ExpressionStatement	zend_hash_destroy ( & accel_globals -> function_table )	2458:2:74694:74743	21897	1	True				
ANR	21917	CallExpression	zend_hash_destroy ( & accel_globals -> function_table )		21897	0					
ANR	21918	Callee	zend_hash_destroy		21897	0					
ANR	21919	Identifier	zend_hash_destroy		21897	0					
ANR	21920	ArgumentList	& accel_globals -> function_table		21897	1					
ANR	21921	Argument	& accel_globals -> function_table		21897	0					
ANR	21922	UnaryOperationExpression	& accel_globals -> function_table		21897	0					
ANR	21923	UnaryOperator	&		21897	0					
ANR	21924	PtrMemberAccess	accel_globals -> function_table		21897	1					
ANR	21925	Identifier	accel_globals		21897	0					
ANR	21926	Identifier	function_table		21897	1					
ANR	21927	ReturnType	static void		21897	1					
ANR	21928	Identifier	accel_globals_dtor		21897	2					
ANR	21929	ParameterList	zend_accel_globals * accel_globals		21897	3					
ANR	21930	Parameter	zend_accel_globals * accel_globals	2454:31:74526:74558	21897	0	True				
ANR	21931	ParameterType	zend_accel_globals *		21897	0					
ANR	21932	Identifier	accel_globals		21897	1					
ANR	21933	CFGEntryNode	ENTRY		21897		True				
ANR	21934	CFGExitNode	EXIT		21897		True				
ANR	21935	Symbol	accel_globals		21897						
ANR	21936	Symbol	* accel_globals		21897						
ANR	21937	Symbol	accel_globals -> function_table . pDestructor		21897						
ANR	21938	Symbol	accel_globals_internal_func_dtor		21897						
ANR	21939	Symbol	& accel_globals -> function_table		21897						
ANR	21940	Symbol	accel_globals -> function_table		21897						
ANR	21941	Symbol	accel_globals -> function_table . nTableSize		21897						
ANR	21942	Function	accel_gen_system_id	2464:0:74935:75765							
ANR	21943	FunctionDef	accel_gen_system_id ()		21942	0					
ANR	21944	CompoundStatement		2465:0:74973:75765	21942	0					
ANR	21945	IdentifierDeclStatement	PHP_MD5_CTX context ;	2466:1:74976:74995	21942	0	True				
ANR	21946	IdentifierDecl	context		21942	0					
ANR	21947	IdentifierDeclType	PHP_MD5_CTX		21942	0					
ANR	21948	Identifier	context		21942	1					
ANR	21949	IdentifierDeclStatement	"unsigned char digest [ 16 ] , c ;"	2467:1:74998:75025	21942	1	True				
ANR	21950	IdentifierDecl	digest [ 16 ]		21942	0					
ANR	21951	IdentifierDeclType	unsigned char [ 16 ]		21942	0					
ANR	21952	Identifier	digest		21942	1					
ANR	21953	PrimaryExpression	16		21942	2					
ANR	21954	IdentifierDecl	c		21942	1					
ANR	21955	IdentifierDeclType	unsigned char		21942	0					
ANR	21956	Identifier	c		21942	1					
ANR	21957	IdentifierDeclStatement	char * md5str = ZCG ( system_id ) ;	2468:1:75028:75057	21942	2	True				
ANR	21958	IdentifierDecl	* md5str = ZCG ( system_id )		21942	0					
ANR	21959	IdentifierDeclType	char *		21942	0					
ANR	21960	Identifier	md5str		21942	1					
ANR	21961	AssignmentExpression	* md5str = ZCG ( system_id )		21942	2		=			
ANR	21962	Identifier	md5str		21942	0					
ANR	21963	CallExpression	ZCG ( system_id )		21942	1					
ANR	21964	Callee	ZCG		21942	0					
ANR	21965	Identifier	ZCG		21942	0					
ANR	21966	ArgumentList	system_id		21942	1					
ANR	21967	Argument	system_id		21942	0					
ANR	21968	Identifier	system_id		21942	0					
ANR	21969	IdentifierDeclStatement	int i ;	2469:1:75060:75065	21942	3	True				
ANR	21970	IdentifierDecl	i		21942	0					
ANR	21971	IdentifierDeclType	int		21942	0					
ANR	21972	Identifier	i		21942	1					
ANR	21973	ExpressionStatement	PHP_MD5Init ( & context )	2471:1:75069:75090	21942	4	True				
ANR	21974	CallExpression	PHP_MD5Init ( & context )		21942	0					
ANR	21975	Callee	PHP_MD5Init		21942	0					
ANR	21976	Identifier	PHP_MD5Init		21942	0					
ANR	21977	ArgumentList	& context		21942	1					
ANR	21978	Argument	& context		21942	0					
ANR	21979	UnaryOperationExpression	& context		21942	0					
ANR	21980	UnaryOperator	&		21942	0					
ANR	21981	Identifier	context		21942	1					
ANR	21982	ExpressionStatement	"PHP_MD5Update ( & context , PHP_VERSION , sizeof ( PHP_VERSION ) - 1 )"	2472:1:75093:75152	21942	5	True				
ANR	21983	CallExpression	"PHP_MD5Update ( & context , PHP_VERSION , sizeof ( PHP_VERSION ) - 1 )"		21942	0					
ANR	21984	Callee	PHP_MD5Update		21942	0					
ANR	21985	Identifier	PHP_MD5Update		21942	0					
ANR	21986	ArgumentList	& context		21942	1					
ANR	21987	Argument	& context		21942	0					
ANR	21988	UnaryOperationExpression	& context		21942	0					
ANR	21989	UnaryOperator	&		21942	0					
ANR	21990	Identifier	context		21942	1					
ANR	21991	Argument	PHP_VERSION		21942	1					
ANR	21992	Identifier	PHP_VERSION		21942	0					
ANR	21993	Argument	sizeof ( PHP_VERSION ) - 1		21942	2					
ANR	21994	AdditiveExpression	sizeof ( PHP_VERSION ) - 1		21942	0		-			
ANR	21995	SizeofExpression	sizeof ( PHP_VERSION )		21942	0					
ANR	21996	Sizeof	sizeof		21942	0					
ANR	21997	SizeofOperand	PHP_VERSION		21942	1					
ANR	21998	PrimaryExpression	1		21942	1					
ANR	21999	ExpressionStatement	"PHP_MD5Update ( & context , ZEND_EXTENSION_BUILD_ID , sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1 )"	2473:1:75155:75238	21942	6	True				
ANR	22000	CallExpression	"PHP_MD5Update ( & context , ZEND_EXTENSION_BUILD_ID , sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1 )"		21942	0					
ANR	22001	Callee	PHP_MD5Update		21942	0					
ANR	22002	Identifier	PHP_MD5Update		21942	0					
ANR	22003	ArgumentList	& context		21942	1					
ANR	22004	Argument	& context		21942	0					
ANR	22005	UnaryOperationExpression	& context		21942	0					
ANR	22006	UnaryOperator	&		21942	0					
ANR	22007	Identifier	context		21942	1					
ANR	22008	Argument	ZEND_EXTENSION_BUILD_ID		21942	1					
ANR	22009	Identifier	ZEND_EXTENSION_BUILD_ID		21942	0					
ANR	22010	Argument	sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1		21942	2					
ANR	22011	AdditiveExpression	sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1		21942	0		-			
ANR	22012	SizeofExpression	sizeof ( ZEND_EXTENSION_BUILD_ID )		21942	0					
ANR	22013	Sizeof	sizeof		21942	0					
ANR	22014	SizeofOperand	ZEND_EXTENSION_BUILD_ID		21942	1					
ANR	22015	PrimaryExpression	1		21942	1					
ANR	22016	ExpressionStatement	"PHP_MD5Update ( & context , ZEND_BIN_ID , sizeof ( ZEND_BIN_ID ) - 1 )"	2474:1:75241:75300	21942	7	True				
ANR	22017	CallExpression	"PHP_MD5Update ( & context , ZEND_BIN_ID , sizeof ( ZEND_BIN_ID ) - 1 )"		21942	0					
ANR	22018	Callee	PHP_MD5Update		21942	0					
ANR	22019	Identifier	PHP_MD5Update		21942	0					
ANR	22020	ArgumentList	& context		21942	1					
ANR	22021	Argument	& context		21942	0					
ANR	22022	UnaryOperationExpression	& context		21942	0					
ANR	22023	UnaryOperator	&		21942	0					
ANR	22024	Identifier	context		21942	1					
ANR	22025	Argument	ZEND_BIN_ID		21942	1					
ANR	22026	Identifier	ZEND_BIN_ID		21942	0					
ANR	22027	Argument	sizeof ( ZEND_BIN_ID ) - 1		21942	2					
ANR	22028	AdditiveExpression	sizeof ( ZEND_BIN_ID ) - 1		21942	0		-			
ANR	22029	SizeofExpression	sizeof ( ZEND_BIN_ID )		21942	0					
ANR	22030	Sizeof	sizeof		21942	0					
ANR	22031	SizeofOperand	ZEND_BIN_ID		21942	1					
ANR	22032	PrimaryExpression	1		21942	1					
ANR	22033	IfStatement	"if ( strstr ( PHP_VERSION , ""-dev"" ) != 0 )"		21942	8					
ANR	22034	Condition	"strstr ( PHP_VERSION , ""-dev"" ) != 0"	2475:5:75307:75338	21942	0	True				
ANR	22035	EqualityExpression	"strstr ( PHP_VERSION , ""-dev"" ) != 0"		21942	0		!=			
ANR	22036	CallExpression	"strstr ( PHP_VERSION , ""-dev"" )"		21942	0					
ANR	22037	Callee	strstr		21942	0					
ANR	22038	Identifier	strstr		21942	0					
ANR	22039	ArgumentList	PHP_VERSION		21942	1					
ANR	22040	Argument	PHP_VERSION		21942	0					
ANR	22041	Identifier	PHP_VERSION		21942	0					
ANR	22042	Argument	"""-dev"""		21942	1					
ANR	22043	PrimaryExpression	"""-dev"""		21942	0					
ANR	22044	PrimaryExpression	0		21942	1					
ANR	22045	CompoundStatement		11:39:367:367	21942	1					
ANR	22046	ExpressionStatement	"PHP_MD5Update ( & context , __DATE__ , sizeof ( __DATE__ ) - 1 )"	2477:2:75409:75462	21942	0	True				
ANR	22047	CallExpression	"PHP_MD5Update ( & context , __DATE__ , sizeof ( __DATE__ ) - 1 )"		21942	0					
ANR	22048	Callee	PHP_MD5Update		21942	0					
ANR	22049	Identifier	PHP_MD5Update		21942	0					
ANR	22050	ArgumentList	& context		21942	1					
ANR	22051	Argument	& context		21942	0					
ANR	22052	UnaryOperationExpression	& context		21942	0					
ANR	22053	UnaryOperator	&		21942	0					
ANR	22054	Identifier	context		21942	1					
ANR	22055	Argument	__DATE__		21942	1					
ANR	22056	Identifier	__DATE__		21942	0					
ANR	22057	Argument	sizeof ( __DATE__ ) - 1		21942	2					
ANR	22058	AdditiveExpression	sizeof ( __DATE__ ) - 1		21942	0		-			
ANR	22059	SizeofExpression	sizeof ( __DATE__ )		21942	0					
ANR	22060	Sizeof	sizeof		21942	0					
ANR	22061	SizeofOperand	__DATE__		21942	1					
ANR	22062	PrimaryExpression	1		21942	1					
ANR	22063	ExpressionStatement	"PHP_MD5Update ( & context , __TIME__ , sizeof ( __TIME__ ) - 1 )"	2478:2:75466:75519	21942	1	True				
ANR	22064	CallExpression	"PHP_MD5Update ( & context , __TIME__ , sizeof ( __TIME__ ) - 1 )"		21942	0					
ANR	22065	Callee	PHP_MD5Update		21942	0					
ANR	22066	Identifier	PHP_MD5Update		21942	0					
ANR	22067	ArgumentList	& context		21942	1					
ANR	22068	Argument	& context		21942	0					
ANR	22069	UnaryOperationExpression	& context		21942	0					
ANR	22070	UnaryOperator	&		21942	0					
ANR	22071	Identifier	context		21942	1					
ANR	22072	Argument	__TIME__		21942	1					
ANR	22073	Identifier	__TIME__		21942	0					
ANR	22074	Argument	sizeof ( __TIME__ ) - 1		21942	2					
ANR	22075	AdditiveExpression	sizeof ( __TIME__ ) - 1		21942	0		-			
ANR	22076	SizeofExpression	sizeof ( __TIME__ )		21942	0					
ANR	22077	Sizeof	sizeof		21942	0					
ANR	22078	SizeofOperand	__TIME__		21942	1					
ANR	22079	PrimaryExpression	1		21942	1					
ANR	22080	ExpressionStatement	"PHP_MD5Final ( digest , & context )"	2480:1:75525:75555	21942	9	True				
ANR	22081	CallExpression	"PHP_MD5Final ( digest , & context )"		21942	0					
ANR	22082	Callee	PHP_MD5Final		21942	0					
ANR	22083	Identifier	PHP_MD5Final		21942	0					
ANR	22084	ArgumentList	digest		21942	1					
ANR	22085	Argument	digest		21942	0					
ANR	22086	Identifier	digest		21942	0					
ANR	22087	Argument	& context		21942	1					
ANR	22088	UnaryOperationExpression	& context		21942	0					
ANR	22089	UnaryOperator	&		21942	0					
ANR	22090	Identifier	context		21942	1					
ANR	22091	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		21942	10					
ANR	22092	ForInit	i = 0 ;	2481:6:75563:75568	21942	0	True				
ANR	22093	AssignmentExpression	i = 0		21942	0		=			
ANR	22094	Identifier	i		21942	0					
ANR	22095	PrimaryExpression	0		21942	1					
ANR	22096	Condition	i < 16	2481:13:75570:75575	21942	1	True				
ANR	22097	RelationalExpression	i < 16		21942	0		<			
ANR	22098	Identifier	i		21942	0					
ANR	22099	PrimaryExpression	16		21942	1					
ANR	22100	PostIncDecOperationExpression	i ++	2481:21:75578:75580	21942	2	True				
ANR	22101	Identifier	i		21942	0					
ANR	22102	IncDec	++		21942	1					
ANR	22103	CompoundStatement		17:26:609:609	21942	3					
ANR	22104	ExpressionStatement	c = digest [ i ] >> 4	2482:2:75587:75605	21942	0	True				
ANR	22105	AssignmentExpression	c = digest [ i ] >> 4		21942	0		=			
ANR	22106	Identifier	c		21942	0					
ANR	22107	ShiftExpression	digest [ i ] >> 4		21942	1		>>			
ANR	22108	ArrayIndexing	digest [ i ]		21942	0					
ANR	22109	Identifier	digest		21942	0					
ANR	22110	Identifier	i		21942	1					
ANR	22111	PrimaryExpression	4		21942	1					
ANR	22112	ExpressionStatement	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'	2483:2:75609:75646	21942	1	True				
ANR	22113	AssignmentExpression	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'		21942	0		=			
ANR	22114	Identifier	c		21942	0					
ANR	22115	ConditionalExpression	( c <= 9 ) ? c + '0' : c - 10 + 'a'		21942	1					
ANR	22116	Condition	c <= 9		21942	0					
ANR	22117	RelationalExpression	c <= 9		21942	0		<=			
ANR	22118	Identifier	c		21942	0					
ANR	22119	PrimaryExpression	9		21942	1					
ANR	22120	AdditiveExpression	c + '0'		21942	1		+			
ANR	22121	Identifier	c		21942	0					
ANR	22122	PrimaryExpression	'0'		21942	1					
ANR	22123	AdditiveExpression	c - 10 + 'a'		21942	2		-			
ANR	22124	Identifier	c		21942	0					
ANR	22125	AdditiveExpression	10 + 'a'		21942	1		+			
ANR	22126	PrimaryExpression	10		21942	0					
ANR	22127	PrimaryExpression	'a'		21942	1					
ANR	22128	ExpressionStatement	md5str [ i * 2 ] = c	2484:2:75650:75667	21942	2	True				
ANR	22129	AssignmentExpression	md5str [ i * 2 ] = c		21942	0		=			
ANR	22130	ArrayIndexing	md5str [ i * 2 ]		21942	0					
ANR	22131	Identifier	md5str		21942	0					
ANR	22132	MultiplicativeExpression	i * 2		21942	1		*			
ANR	22133	Identifier	i		21942	0					
ANR	22134	PrimaryExpression	2		21942	1					
ANR	22135	Identifier	c		21942	1					
ANR	22136	ExpressionStatement	c = digest [ i ] & 0x0f	2485:2:75671:75692	21942	3	True				
ANR	22137	AssignmentExpression	c = digest [ i ] & 0x0f		21942	0		=			
ANR	22138	Identifier	c		21942	0					
ANR	22139	BitAndExpression	digest [ i ] & 0x0f		21942	1		&			
ANR	22140	ArrayIndexing	digest [ i ]		21942	0					
ANR	22141	Identifier	digest		21942	0					
ANR	22142	Identifier	i		21942	1					
ANR	22143	PrimaryExpression	0x0f		21942	1					
ANR	22144	ExpressionStatement	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'	2486:2:75696:75733	21942	4	True				
ANR	22145	AssignmentExpression	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'		21942	0		=			
ANR	22146	Identifier	c		21942	0					
ANR	22147	ConditionalExpression	( c <= 9 ) ? c + '0' : c - 10 + 'a'		21942	1					
ANR	22148	Condition	c <= 9		21942	0					
ANR	22149	RelationalExpression	c <= 9		21942	0		<=			
ANR	22150	Identifier	c		21942	0					
ANR	22151	PrimaryExpression	9		21942	1					
ANR	22152	AdditiveExpression	c + '0'		21942	1		+			
ANR	22153	Identifier	c		21942	0					
ANR	22154	PrimaryExpression	'0'		21942	1					
ANR	22155	AdditiveExpression	c - 10 + 'a'		21942	2		-			
ANR	22156	Identifier	c		21942	0					
ANR	22157	AdditiveExpression	10 + 'a'		21942	1		+			
ANR	22158	PrimaryExpression	10		21942	0					
ANR	22159	PrimaryExpression	'a'		21942	1					
ANR	22160	ExpressionStatement	md5str [ ( i * 2 ) + 1 ] = c	2487:2:75737:75760	21942	5	True				
ANR	22161	AssignmentExpression	md5str [ ( i * 2 ) + 1 ] = c		21942	0		=			
ANR	22162	ArrayIndexing	md5str [ ( i * 2 ) + 1 ]		21942	0					
ANR	22163	Identifier	md5str		21942	0					
ANR	22164	AdditiveExpression	( i * 2 ) + 1		21942	1		+			
ANR	22165	MultiplicativeExpression	i * 2		21942	0		*			
ANR	22166	Identifier	i		21942	0					
ANR	22167	PrimaryExpression	2		21942	1					
ANR	22168	PrimaryExpression	1		21942	1					
ANR	22169	Identifier	c		21942	1					
ANR	22170	ReturnType	static void		21942	1					
ANR	22171	Identifier	accel_gen_system_id		21942	2					
ANR	22172	ParameterList			21942	3					
ANR	22173	CFGEntryNode	ENTRY		21942		True				
ANR	22174	CFGExitNode	EXIT		21942		True				
ANR	22175	Symbol	c		21942						
ANR	22176	Symbol	PHP_VERSION		21942						
ANR	22177	Symbol	ZEND_BIN_ID		21942						
ANR	22178	Symbol	system_id		21942						
ANR	22179	Symbol	md5str		21942						
ANR	22180	Symbol	i		21942						
ANR	22181	Symbol	__DATE__		21942						
ANR	22182	Symbol	* digest		21942						
ANR	22183	Symbol	& context		21942						
ANR	22184	Symbol	__TIME__		21942						
ANR	22185	Symbol	* i		21942						
ANR	22186	Symbol	strstr		21942						
ANR	22187	Symbol	context		21942						
ANR	22188	Symbol	digest		21942						
ANR	22189	Symbol	ZEND_EXTENSION_BUILD_ID		21942						
ANR	22190	Symbol	* md5str		21942						
ANR	22191	Symbol	ZCG		21942						
ANR	22192	Function	accel_remap_huge_pages	2505:0:76058:77594							
ANR	22193	FunctionDef	"accel_remap_huge_pages (void * start , size_t size , const char * name , size_t offset)"		22192	0					
ANR	22194	CompoundStatement		2506:0:76151:77594	22192	0					
ANR	22195	IdentifierDeclStatement	void * ret = MAP_FAILED ;	2507:1:76154:76176	22192	0	True				
ANR	22196	IdentifierDecl	* ret = MAP_FAILED		22192	0					
ANR	22197	IdentifierDeclType	void *		22192	0					
ANR	22198	Identifier	ret		22192	1					
ANR	22199	AssignmentExpression	* ret = MAP_FAILED		22192	2		=			
ANR	22200	Identifier	MAP_FAILED		22192	0					
ANR	22201	Identifier	MAP_FAILED		22192	1					
ANR	22202	IdentifierDeclStatement	void * mem ;	2508:1:76179:76188	22192	1	True				
ANR	22203	IdentifierDecl	* mem		22192	0					
ANR	22204	IdentifierDeclType	void *		22192	0					
ANR	22205	Identifier	mem		22192	1					
ANR	22206	ExpressionStatement	"mem = mmap ( NULL , size , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"	2510:1:76192:76280	22192	2	True				
ANR	22207	AssignmentExpression	"mem = mmap ( NULL , size , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"		22192	0		=			
ANR	22208	Identifier	mem		22192	0					
ANR	22209	CallExpression	"mmap ( NULL , size , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"		22192	1					
ANR	22210	Callee	mmap		22192	0					
ANR	22211	Identifier	mmap		22192	0					
ANR	22212	ArgumentList	NULL		22192	1					
ANR	22213	Argument	NULL		22192	0					
ANR	22214	Identifier	NULL		22192	0					
ANR	22215	Argument	size		22192	1					
ANR	22216	Identifier	size		22192	0					
ANR	22217	Argument	PROT_READ | PROT_WRITE		22192	2					
ANR	22218	InclusiveOrExpression	PROT_READ | PROT_WRITE		22192	0		|			
ANR	22219	Identifier	PROT_READ		22192	0					
ANR	22220	Identifier	PROT_WRITE		22192	1					
ANR	22221	Argument	MAP_PRIVATE | MAP_ANONYMOUS		22192	3					
ANR	22222	InclusiveOrExpression	MAP_PRIVATE | MAP_ANONYMOUS		22192	0		|			
ANR	22223	Identifier	MAP_PRIVATE		22192	0					
ANR	22224	Identifier	MAP_ANONYMOUS		22192	1					
ANR	22225	Argument	- 1		22192	4					
ANR	22226	UnaryOperationExpression	- 1		22192	0					
ANR	22227	UnaryOperator	-		22192	0					
ANR	22228	PrimaryExpression	1		22192	1					
ANR	22229	Argument	0		22192	5					
ANR	22230	PrimaryExpression	0		22192	0					
ANR	22231	IfStatement	if ( mem == MAP_FAILED )		22192	3					
ANR	22232	Condition	mem == MAP_FAILED	2514:5:76287:76303	22192	0	True				
ANR	22233	EqualityExpression	mem == MAP_FAILED		22192	0		==			
ANR	22234	Identifier	mem		22192	0					
ANR	22235	Identifier	MAP_FAILED		22192	1					
ANR	22236	CompoundStatement		9:24:154:154	22192	1					
ANR	22237	Statement	zend_error	2515:2:76310:76319	22192	0	True				
ANR	22238	Statement	(	2515:12:76320:76320	22192	1	True				
ANR	22239	Statement	E_WARNING	2515:13:76321:76329	22192	2	True				
ANR	22240	Statement	","	2515:22:76330:76330	22192	3	True				
ANR	22241	Statement	ACCELERATOR_PRODUCT_NAME	2516:3:76335:76358	22192	4	True				
ANR	22242	Statement	""" huge_code_pages: mmap failed: %s (%d)"""	2516:28:76360:76399	22192	5	True				
ANR	22243	Statement	","	2516:68:76400:76400	22192	6	True				
ANR	22244	Statement	strerror	2517:3:76405:76412	22192	7	True				
ANR	22245	Statement	(	2517:11:76413:76413	22192	8	True				
ANR	22246	Statement	errno	2517:12:76414:76418	22192	9	True				
ANR	22247	Statement	)	2517:17:76419:76419	22192	10	True				
ANR	22248	Statement	","	2517:18:76420:76420	22192	11	True				
ANR	22249	Statement	errno	2517:20:76422:76426	22192	12	True				
ANR	22250	Statement	)	2517:25:76427:76427	22192	13	True				
ANR	22251	ExpressionStatement		2517:26:76428:76428	22192	14	True				
ANR	22252	ReturnStatement	return - 1 ;	2518:2:76432:76441	22192	15	True				
ANR	22253	UnaryOperationExpression	- 1		22192	0					
ANR	22254	UnaryOperator	-		22192	0					
ANR	22255	PrimaryExpression	1		22192	1					
ANR	22256	ExpressionStatement	"memcpy ( mem , start , size )"	2520:1:76447:76471	22192	4	True				
ANR	22257	CallExpression	"memcpy ( mem , start , size )"		22192	0					
ANR	22258	Callee	memcpy		22192	0					
ANR	22259	Identifier	memcpy		22192	0					
ANR	22260	ArgumentList	mem		22192	1					
ANR	22261	Argument	mem		22192	0					
ANR	22262	Identifier	mem		22192	0					
ANR	22263	Argument	start		22192	1					
ANR	22264	Identifier	start		22192	0					
ANR	22265	Argument	size		22192	2					
ANR	22266	Identifier	size		22192	0					
ANR	22267	IdentifierDeclStatement	"ifdef MAP_HUGETLB ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB , - 1 , 0 ) ;"	2522:3:76477:76623	22192	5	True				
ANR	22268	IdentifierDecl	"ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB , - 1 , 0 )"		22192	0					
ANR	22269	IdentifierDeclType	ifdef MAP_HUGETLB		22192	0					
ANR	22270	Identifier	ret		22192	1					
ANR	22271	AssignmentExpression	"ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB , - 1 , 0 )"		22192	2		=			
ANR	22272	Identifier	ret		22192	0					
ANR	22273	CallExpression	"mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB , - 1 , 0 )"		22192	1					
ANR	22274	Callee	mmap		22192	0					
ANR	22275	Identifier	mmap		22192	0					
ANR	22276	ArgumentList	start		22192	1					
ANR	22277	Argument	start		22192	0					
ANR	22278	Identifier	start		22192	0					
ANR	22279	Argument	size		22192	1					
ANR	22280	Identifier	size		22192	0					
ANR	22281	Argument	PROT_READ | PROT_WRITE | PROT_EXEC		22192	2					
ANR	22282	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		22192	0		|			
ANR	22283	Identifier	PROT_READ		22192	0					
ANR	22284	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		22192	1		|			
ANR	22285	Identifier	PROT_WRITE		22192	0					
ANR	22286	Identifier	PROT_EXEC		22192	1					
ANR	22287	Argument	MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB		22192	3					
ANR	22288	InclusiveOrExpression	MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB		22192	0		|			
ANR	22289	Identifier	MAP_PRIVATE		22192	0					
ANR	22290	InclusiveOrExpression	MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB		22192	1		|			
ANR	22291	Identifier	MAP_ANONYMOUS		22192	0					
ANR	22292	InclusiveOrExpression	MAP_FIXED | MAP_HUGETLB		22192	1		|			
ANR	22293	Identifier	MAP_FIXED		22192	0					
ANR	22294	Identifier	MAP_HUGETLB		22192	1					
ANR	22295	Argument	- 1		22192	4					
ANR	22296	UnaryOperationExpression	- 1		22192	0					
ANR	22297	UnaryOperator	-		22192	0					
ANR	22298	PrimaryExpression	1		22192	1					
ANR	22299	Argument	0		22192	5					
ANR	22300	PrimaryExpression	0		22192	0					
ANR	22301	Statement	endif	2527:3:76628:76632	22192	6	True				
ANR	22302	IfStatement	if ( ret == MAP_FAILED )		22192	7					
ANR	22303	Condition	ret == MAP_FAILED	2528:5:76639:76655	22192	0	True				
ANR	22304	EqualityExpression	ret == MAP_FAILED		22192	0		==			
ANR	22305	Identifier	ret		22192	0					
ANR	22306	Identifier	MAP_FAILED		22192	1					
ANR	22307	CompoundStatement		23:24:506:506	22192	1					
ANR	22308	ExpressionStatement	"ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED , - 1 , 0 )"	2529:2:76662:76778	22192	0	True				
ANR	22309	AssignmentExpression	"ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED , - 1 , 0 )"		22192	0		=			
ANR	22310	Identifier	ret		22192	0					
ANR	22311	CallExpression	"mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED , - 1 , 0 )"		22192	1					
ANR	22312	Callee	mmap		22192	0					
ANR	22313	Identifier	mmap		22192	0					
ANR	22314	ArgumentList	start		22192	1					
ANR	22315	Argument	start		22192	0					
ANR	22316	Identifier	start		22192	0					
ANR	22317	Argument	size		22192	1					
ANR	22318	Identifier	size		22192	0					
ANR	22319	Argument	PROT_READ | PROT_WRITE | PROT_EXEC		22192	2					
ANR	22320	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		22192	0		|			
ANR	22321	Identifier	PROT_READ		22192	0					
ANR	22322	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		22192	1		|			
ANR	22323	Identifier	PROT_WRITE		22192	0					
ANR	22324	Identifier	PROT_EXEC		22192	1					
ANR	22325	Argument	MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED		22192	3					
ANR	22326	InclusiveOrExpression	MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED		22192	0		|			
ANR	22327	Identifier	MAP_PRIVATE		22192	0					
ANR	22328	InclusiveOrExpression	MAP_ANONYMOUS | MAP_FIXED		22192	1		|			
ANR	22329	Identifier	MAP_ANONYMOUS		22192	0					
ANR	22330	Identifier	MAP_FIXED		22192	1					
ANR	22331	Argument	- 1		22192	4					
ANR	22332	UnaryOperationExpression	- 1		22192	0					
ANR	22333	UnaryOperator	-		22192	0					
ANR	22334	PrimaryExpression	1		22192	1					
ANR	22335	Argument	0		22192	5					
ANR	22336	PrimaryExpression	0		22192	0					
ANR	22337	ExpressionStatement	ZEND_ASSERT ( ret != MAP_FAILED )	2534:2:76816:76846	22192	1	True				
ANR	22338	CallExpression	ZEND_ASSERT ( ret != MAP_FAILED )		22192	0					
ANR	22339	Callee	ZEND_ASSERT		22192	0					
ANR	22340	Identifier	ZEND_ASSERT		22192	0					
ANR	22341	ArgumentList	ret != MAP_FAILED		22192	1					
ANR	22342	Argument	ret != MAP_FAILED		22192	0					
ANR	22343	EqualityExpression	ret != MAP_FAILED		22192	0		!=			
ANR	22344	Identifier	ret		22192	0					
ANR	22345	Identifier	MAP_FAILED		22192	1					
ANR	22346	Statement	ifdef	2535:3:76851:76855	22192	2	True				
ANR	22347	Statement	MADV_HUGEPAGE	2535:9:76857:76869	22192	3	True				
ANR	22348	IfStatement	"if ( - 1 == madvise ( start , size , MADV_HUGEPAGE ) )"		22192	4					
ANR	22349	Condition	"- 1 == madvise ( start , size , MADV_HUGEPAGE )"	2536:6:76877:76917	22192	0	True				
ANR	22350	EqualityExpression	"- 1 == madvise ( start , size , MADV_HUGEPAGE )"		22192	0		==			
ANR	22351	UnaryOperationExpression	- 1		22192	0					
ANR	22352	UnaryOperator	-		22192	0					
ANR	22353	PrimaryExpression	1		22192	1					
ANR	22354	CallExpression	"madvise ( start , size , MADV_HUGEPAGE )"		22192	1					
ANR	22355	Callee	madvise		22192	0					
ANR	22356	Identifier	madvise		22192	0					
ANR	22357	ArgumentList	start		22192	1					
ANR	22358	Argument	start		22192	0					
ANR	22359	Identifier	start		22192	0					
ANR	22360	Argument	size		22192	1					
ANR	22361	Identifier	size		22192	0					
ANR	22362	Argument	MADV_HUGEPAGE		22192	2					
ANR	22363	Identifier	MADV_HUGEPAGE		22192	0					
ANR	22364	CompoundStatement		31:49:768:768	22192	1					
ANR	22365	ExpressionStatement	"memcpy ( start , mem , size )"	2537:3:76925:76949	22192	0	True				
ANR	22366	CallExpression	"memcpy ( start , mem , size )"		22192	0					
ANR	22367	Callee	memcpy		22192	0					
ANR	22368	Identifier	memcpy		22192	0					
ANR	22369	ArgumentList	start		22192	1					
ANR	22370	Argument	start		22192	0					
ANR	22371	Identifier	start		22192	0					
ANR	22372	Argument	mem		22192	1					
ANR	22373	Identifier	mem		22192	0					
ANR	22374	Argument	size		22192	2					
ANR	22375	Identifier	size		22192	0					
ANR	22376	ExpressionStatement	"mprotect ( start , size , PROT_READ | PROT_EXEC )"	2538:3:76954:76998	22192	1	True				
ANR	22377	CallExpression	"mprotect ( start , size , PROT_READ | PROT_EXEC )"		22192	0					
ANR	22378	Callee	mprotect		22192	0					
ANR	22379	Identifier	mprotect		22192	0					
ANR	22380	ArgumentList	start		22192	1					
ANR	22381	Argument	start		22192	0					
ANR	22382	Identifier	start		22192	0					
ANR	22383	Argument	size		22192	1					
ANR	22384	Identifier	size		22192	0					
ANR	22385	Argument	PROT_READ | PROT_EXEC		22192	2					
ANR	22386	InclusiveOrExpression	PROT_READ | PROT_EXEC		22192	0		|			
ANR	22387	Identifier	PROT_READ		22192	0					
ANR	22388	Identifier	PROT_EXEC		22192	1					
ANR	22389	ExpressionStatement	"munmap ( mem , size )"	2539:3:77003:77020	22192	2	True				
ANR	22390	CallExpression	"munmap ( mem , size )"		22192	0					
ANR	22391	Callee	munmap		22192	0					
ANR	22392	Identifier	munmap		22192	0					
ANR	22393	ArgumentList	mem		22192	1					
ANR	22394	Argument	mem		22192	0					
ANR	22395	Identifier	mem		22192	0					
ANR	22396	Argument	size		22192	1					
ANR	22397	Identifier	size		22192	0					
ANR	22398	Statement	zend_error	2540:3:77025:77034	22192	3	True				
ANR	22399	Statement	(	2540:13:77035:77035	22192	4	True				
ANR	22400	Statement	E_WARNING	2540:14:77036:77044	22192	5	True				
ANR	22401	Statement	","	2540:23:77045:77045	22192	6	True				
ANR	22402	Statement	ACCELERATOR_PRODUCT_NAME	2541:4:77051:77074	22192	7	True				
ANR	22403	Statement	""" huge_code_pages: madvise(HUGEPAGE) failed: %s (%d)"""	2541:29:77076:77128	22192	8	True				
ANR	22404	Statement	","	2541:82:77129:77129	22192	9	True				
ANR	22405	Statement	strerror	2542:4:77135:77142	22192	10	True				
ANR	22406	Statement	(	2542:12:77143:77143	22192	11	True				
ANR	22407	Statement	errno	2542:13:77144:77148	22192	12	True				
ANR	22408	Statement	)	2542:18:77149:77149	22192	13	True				
ANR	22409	Statement	","	2542:19:77150:77150	22192	14	True				
ANR	22410	Statement	errno	2542:21:77152:77156	22192	15	True				
ANR	22411	Statement	)	2542:26:77157:77157	22192	16	True				
ANR	22412	ExpressionStatement		2542:27:77158:77158	22192	17	True				
ANR	22413	ReturnStatement	return - 1 ;	2543:3:77163:77172	22192	18	True				
ANR	22414	UnaryOperationExpression	- 1		22192	0					
ANR	22415	UnaryOperator	-		22192	0					
ANR	22416	PrimaryExpression	1		22192	1					
ANR	22417	ElseStatement	else		22192	0					
ANR	22418	ExpressionStatement	"memcpy ( start , mem , size )"	2546:2:77188:77212	22192	0	True				
ANR	22419	CallExpression	"memcpy ( start , mem , size )"		22192	0					
ANR	22420	Callee	memcpy		22192	0					
ANR	22421	Identifier	memcpy		22192	0					
ANR	22422	ArgumentList	start		22192	1					
ANR	22423	Argument	start		22192	0					
ANR	22424	Identifier	start		22192	0					
ANR	22425	Argument	mem		22192	1					
ANR	22426	Identifier	mem		22192	0					
ANR	22427	Argument	size		22192	2					
ANR	22428	Identifier	size		22192	0					
ANR	22429	ExpressionStatement	"mprotect ( start , size , PROT_READ | PROT_EXEC )"	2547:2:77216:77260	22192	5	True				
ANR	22430	CallExpression	"mprotect ( start , size , PROT_READ | PROT_EXEC )"		22192	0					
ANR	22431	Callee	mprotect		22192	0					
ANR	22432	Identifier	mprotect		22192	0					
ANR	22433	ArgumentList	start		22192	1					
ANR	22434	Argument	start		22192	0					
ANR	22435	Identifier	start		22192	0					
ANR	22436	Argument	size		22192	1					
ANR	22437	Identifier	size		22192	0					
ANR	22438	Argument	PROT_READ | PROT_EXEC		22192	2					
ANR	22439	InclusiveOrExpression	PROT_READ | PROT_EXEC		22192	0		|			
ANR	22440	Identifier	PROT_READ		22192	0					
ANR	22441	Identifier	PROT_EXEC		22192	1					
ANR	22442	ExpressionStatement	"munmap ( mem , size )"	2548:2:77264:77281	22192	6	True				
ANR	22443	CallExpression	"munmap ( mem , size )"		22192	0					
ANR	22444	Callee	munmap		22192	0					
ANR	22445	Identifier	munmap		22192	0					
ANR	22446	ArgumentList	mem		22192	1					
ANR	22447	Argument	mem		22192	0					
ANR	22448	Identifier	mem		22192	0					
ANR	22449	Argument	size		22192	1					
ANR	22450	Identifier	size		22192	0					
ANR	22451	Statement	zend_error	2549:2:77285:77294	22192	7	True				
ANR	22452	Statement	(	2549:12:77295:77295	22192	8	True				
ANR	22453	Statement	E_WARNING	2549:13:77296:77304	22192	9	True				
ANR	22454	Statement	","	2549:22:77305:77305	22192	10	True				
ANR	22455	Statement	ACCELERATOR_PRODUCT_NAME	2550:3:77310:77333	22192	11	True				
ANR	22456	Statement	""" huge_code_pages: mmap(HUGETLB) failed: %s (%d)"""	2550:28:77335:77383	22192	12	True				
ANR	22457	Statement	","	2550:77:77384:77384	22192	13	True				
ANR	22458	Statement	strerror	2551:3:77389:77396	22192	14	True				
ANR	22459	Statement	(	2551:11:77397:77397	22192	15	True				
ANR	22460	Statement	errno	2551:12:77398:77402	22192	16	True				
ANR	22461	Statement	)	2551:17:77403:77403	22192	17	True				
ANR	22462	Statement	","	2551:18:77404:77404	22192	18	True				
ANR	22463	Statement	errno	2551:20:77406:77410	22192	19	True				
ANR	22464	Statement	)	2551:25:77411:77411	22192	20	True				
ANR	22465	ExpressionStatement		2551:26:77412:77412	22192	21	True				
ANR	22466	ReturnStatement	return - 1 ;	2552:2:77416:77425	22192	22	True				
ANR	22467	UnaryOperationExpression	- 1		22192	0					
ANR	22468	UnaryOperator	-		22192	0					
ANR	22469	PrimaryExpression	1		22192	1					
ANR	22470	Statement	endif	2553:3:77430:77434	22192	23	True				
ANR	22471	IfStatement	if ( ret == start )		22192	8					
ANR	22472	Condition	ret == start	2556:5:77445:77456	22192	0	True				
ANR	22473	EqualityExpression	ret == start		22192	0		==			
ANR	22474	Identifier	ret		22192	0					
ANR	22475	Identifier	start		22192	1					
ANR	22476	CompoundStatement		51:19:1307:1307	22192	1					
ANR	22477	ExpressionStatement	"memcpy ( start , mem , size )"	2557:2:77463:77487	22192	0	True				
ANR	22478	CallExpression	"memcpy ( start , mem , size )"		22192	0					
ANR	22479	Callee	memcpy		22192	0					
ANR	22480	Identifier	memcpy		22192	0					
ANR	22481	ArgumentList	start		22192	1					
ANR	22482	Argument	start		22192	0					
ANR	22483	Identifier	start		22192	0					
ANR	22484	Argument	mem		22192	1					
ANR	22485	Identifier	mem		22192	0					
ANR	22486	Argument	size		22192	2					
ANR	22487	Identifier	size		22192	0					
ANR	22488	ExpressionStatement	"mprotect ( start , size , PROT_READ | PROT_EXEC )"	2558:2:77491:77535	22192	1	True				
ANR	22489	CallExpression	"mprotect ( start , size , PROT_READ | PROT_EXEC )"		22192	0					
ANR	22490	Callee	mprotect		22192	0					
ANR	22491	Identifier	mprotect		22192	0					
ANR	22492	ArgumentList	start		22192	1					
ANR	22493	Argument	start		22192	0					
ANR	22494	Identifier	start		22192	0					
ANR	22495	Argument	size		22192	1					
ANR	22496	Identifier	size		22192	0					
ANR	22497	Argument	PROT_READ | PROT_EXEC		22192	2					
ANR	22498	InclusiveOrExpression	PROT_READ | PROT_EXEC		22192	0		|			
ANR	22499	Identifier	PROT_READ		22192	0					
ANR	22500	Identifier	PROT_EXEC		22192	1					
ANR	22501	ExpressionStatement	"munmap ( mem , size )"	2560:1:77541:77558	22192	9	True				
ANR	22502	CallExpression	"munmap ( mem , size )"		22192	0					
ANR	22503	Callee	munmap		22192	0					
ANR	22504	Identifier	munmap		22192	0					
ANR	22505	ArgumentList	mem		22192	1					
ANR	22506	Argument	mem		22192	0					
ANR	22507	Identifier	mem		22192	0					
ANR	22508	Argument	size		22192	1					
ANR	22509	Identifier	size		22192	0					
ANR	22510	ReturnStatement	return ( ret == start ) ? 0 : - 1 ;	2562:1:77562:77592	22192	10	True				
ANR	22511	ConditionalExpression	( ret == start ) ? 0 : - 1		22192	0					
ANR	22512	Condition	ret == start		22192	0					
ANR	22513	EqualityExpression	ret == start		22192	0		==			
ANR	22514	Identifier	ret		22192	0					
ANR	22515	Identifier	start		22192	1					
ANR	22516	PrimaryExpression	0		22192	1					
ANR	22517	UnaryOperationExpression	- 1		22192	2					
ANR	22518	UnaryOperator	-		22192	0					
ANR	22519	PrimaryExpression	1		22192	1					
ANR	22520	ReturnType	static int		22192	1					
ANR	22521	Identifier	accel_remap_huge_pages		22192	2					
ANR	22522	ParameterList	"void * start , size_t size , const char * name , size_t offset"		22192	3					
ANR	22523	Parameter	void * start	2505:34:76092:76102	22192	0	True				
ANR	22524	ParameterType	void *		22192	0					
ANR	22525	Identifier	start		22192	1					
ANR	22526	Parameter	size_t size	2505:47:76105:76115	22192	1	True				
ANR	22527	ParameterType	size_t		22192	0					
ANR	22528	Identifier	size		22192	1					
ANR	22529	Parameter	const char * name	2505:60:76118:76133	22192	2	True				
ANR	22530	ParameterType	const char *		22192	0					
ANR	22531	Identifier	name		22192	1					
ANR	22532	Parameter	size_t offset	2505:78:76136:76148	22192	3	True				
ANR	22533	ParameterType	size_t		22192	0					
ANR	22534	Identifier	offset		22192	1					
ANR	22535	CFGEntryNode	ENTRY		22192		True				
ANR	22536	CFGExitNode	EXIT		22192		True				
ANR	22537	Symbol	ret		22192						
ANR	22538	Symbol	NULL		22192						
ANR	22539	Symbol	MAP_ANONYMOUS		22192						
ANR	22540	Symbol	offset		22192						
ANR	22541	Symbol	MADV_HUGEPAGE		22192						
ANR	22542	Symbol	start		22192						
ANR	22543	Symbol	PROT_EXEC		22192						
ANR	22544	Symbol	PROT_READ		22192						
ANR	22545	Symbol	MAP_HUGETLB		22192						
ANR	22546	Symbol	MAP_FAILED		22192						
ANR	22547	Symbol	MAP_PRIVATE		22192						
ANR	22548	Symbol	madvise		22192						
ANR	22549	Symbol	size		22192						
ANR	22550	Symbol	mem		22192						
ANR	22551	Symbol	PROT_WRITE		22192						
ANR	22552	Symbol	name		22192						
ANR	22553	Symbol	mmap		22192						
ANR	22554	Symbol	MAP_FIXED		22192						
ANR	22555	Function	accel_move_code_to_huge_pages	2565:0:77597:78450							
ANR	22556	FunctionDef	accel_move_code_to_huge_pages ()		22555	0					
ANR	22557	CompoundStatement		2566:0:77645:78450	22555	0					
ANR	22558	IdentifierDeclStatement	FILE * f ;	2567:1:77648:77655	22555	0	True				
ANR	22559	IdentifierDecl	* f		22555	0					
ANR	22560	IdentifierDeclType	FILE *		22555	0					
ANR	22561	Identifier	f		22555	1					
ANR	22562	Statement	long	2568:1:77658:77661	22555	1	True				
ANR	22563	IdentifierDeclStatement	unsigned int huge_page_size = 2 * 1024 * 1024 ;	2568:6:77663:77708	22555	2	True				
ANR	22564	IdentifierDecl	huge_page_size = 2 * 1024 * 1024		22555	0					
ANR	22565	IdentifierDeclType	unsigned int		22555	0					
ANR	22566	Identifier	huge_page_size		22555	1					
ANR	22567	AssignmentExpression	huge_page_size = 2 * 1024 * 1024		22555	2		=			
ANR	22568	Identifier	huge_page_size		22555	0					
ANR	22569	MultiplicativeExpression	2 * 1024 * 1024		22555	1		*			
ANR	22570	PrimaryExpression	2		22555	0					
ANR	22571	MultiplicativeExpression	1024 * 1024		22555	1		*			
ANR	22572	PrimaryExpression	1024		22555	0					
ANR	22573	PrimaryExpression	1024		22555	1					
ANR	22574	ExpressionStatement	"f = fopen ( ""/proc/self/maps"" , ""r"" )"	2570:1:77712:77745	22555	3	True				
ANR	22575	AssignmentExpression	"f = fopen ( ""/proc/self/maps"" , ""r"" )"		22555	0		=			
ANR	22576	Identifier	f		22555	0					
ANR	22577	CallExpression	"fopen ( ""/proc/self/maps"" , ""r"" )"		22555	1					
ANR	22578	Callee	fopen		22555	0					
ANR	22579	Identifier	fopen		22555	0					
ANR	22580	ArgumentList	"""/proc/self/maps"""		22555	1					
ANR	22581	Argument	"""/proc/self/maps"""		22555	0					
ANR	22582	PrimaryExpression	"""/proc/self/maps"""		22555	0					
ANR	22583	Argument	"""r"""		22555	1					
ANR	22584	PrimaryExpression	"""r"""		22555	0					
ANR	22585	IfStatement	if ( f )		22555	4					
ANR	22586	Condition	f	2571:5:77752:77752	22555	0	True				
ANR	22587	Identifier	f		22555	0					
ANR	22588	CompoundStatement		9:2:203:210	22555	1					
ANR	22589	Statement	long	2572:2:77759:77762	22555	0	True				
ANR	22590	IdentifierDeclStatement	"unsigned int start , end , offset , inode ;"	2572:7:77764:77803	22555	1	True				
ANR	22591	IdentifierDecl	start		22555	0					
ANR	22592	IdentifierDeclType	unsigned int		22555	0					
ANR	22593	Identifier	start		22555	1					
ANR	22594	IdentifierDecl	end		22555	1					
ANR	22595	IdentifierDeclType	unsigned int		22555	0					
ANR	22596	Identifier	end		22555	1					
ANR	22597	IdentifierDecl	offset		22555	2					
ANR	22598	IdentifierDeclType	unsigned int		22555	0					
ANR	22599	Identifier	offset		22555	1					
ANR	22600	IdentifierDecl	inode		22555	3					
ANR	22601	IdentifierDeclType	unsigned int		22555	0					
ANR	22602	Identifier	inode		22555	1					
ANR	22603	IdentifierDeclStatement	"char perm [ 5 ] , dev [ 6 ] , name [ MAXPATHLEN ] ;"	2573:2:77807:77845	22555	2	True				
ANR	22604	IdentifierDecl	perm [ 5 ]		22555	0					
ANR	22605	IdentifierDeclType	char [ 5 ]		22555	0					
ANR	22606	Identifier	perm		22555	1					
ANR	22607	PrimaryExpression	5		22555	2					
ANR	22608	IdentifierDecl	dev [ 6 ]		22555	1					
ANR	22609	IdentifierDeclType	char [ 6 ]		22555	0					
ANR	22610	Identifier	dev		22555	1					
ANR	22611	PrimaryExpression	6		22555	2					
ANR	22612	IdentifierDecl	name [ MAXPATHLEN ]		22555	2					
ANR	22613	IdentifierDeclType	char [ MAXPATHLEN ]		22555	0					
ANR	22614	Identifier	name		22555	1					
ANR	22615	Identifier	MAXPATHLEN		22555	2					
ANR	22616	IdentifierDeclStatement	int ret ;	2574:2:77849:77856	22555	3	True				
ANR	22617	IdentifierDecl	ret		22555	0					
ANR	22618	IdentifierDeclType	int		22555	0					
ANR	22619	Identifier	ret		22555	1					
ANR	22620	ExpressionStatement	"ret = fscanf ( f , ""%lx-%lx %4s %lx %5s %ld %s\\n"" , & start , & end , perm , & offset , dev , & inode , name )"	2576:2:77861:77956	22555	4	True				
ANR	22621	AssignmentExpression	"ret = fscanf ( f , ""%lx-%lx %4s %lx %5s %ld %s\\n"" , & start , & end , perm , & offset , dev , & inode , name )"		22555	0		=			
ANR	22622	Identifier	ret		22555	0					
ANR	22623	CallExpression	"fscanf ( f , ""%lx-%lx %4s %lx %5s %ld %s\\n"" , & start , & end , perm , & offset , dev , & inode , name )"		22555	1					
ANR	22624	Callee	fscanf		22555	0					
ANR	22625	Identifier	fscanf		22555	0					
ANR	22626	ArgumentList	f		22555	1					
ANR	22627	Argument	f		22555	0					
ANR	22628	Identifier	f		22555	0					
ANR	22629	Argument	"""%lx-%lx %4s %lx %5s %ld %s\\n"""		22555	1					
ANR	22630	PrimaryExpression	"""%lx-%lx %4s %lx %5s %ld %s\\n"""		22555	0					
ANR	22631	Argument	& start		22555	2					
ANR	22632	UnaryOperationExpression	& start		22555	0					
ANR	22633	UnaryOperator	&		22555	0					
ANR	22634	Identifier	start		22555	1					
ANR	22635	Argument	& end		22555	3					
ANR	22636	UnaryOperationExpression	& end		22555	0					
ANR	22637	UnaryOperator	&		22555	0					
ANR	22638	Identifier	end		22555	1					
ANR	22639	Argument	perm		22555	4					
ANR	22640	Identifier	perm		22555	0					
ANR	22641	Argument	& offset		22555	5					
ANR	22642	UnaryOperationExpression	& offset		22555	0					
ANR	22643	UnaryOperator	&		22555	0					
ANR	22644	Identifier	offset		22555	1					
ANR	22645	Argument	dev		22555	6					
ANR	22646	Identifier	dev		22555	0					
ANR	22647	Argument	& inode		22555	7					
ANR	22648	UnaryOperationExpression	& inode		22555	0					
ANR	22649	UnaryOperator	&		22555	0					
ANR	22650	Identifier	inode		22555	1					
ANR	22651	Argument	name		22555	8					
ANR	22652	Identifier	name		22555	0					
ANR	22653	IfStatement	if ( ret == 7 && perm [ 0 ] == 'r' && perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/' )		22555	5					
ANR	22654	Condition	ret == 7 && perm [ 0 ] == 'r' && perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/'	2577:6:77964:78043	22555	0	True				
ANR	22655	AndExpression	ret == 7 && perm [ 0 ] == 'r' && perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/'		22555	0		&&			
ANR	22656	EqualityExpression	ret == 7		22555	0		==			
ANR	22657	Identifier	ret		22555	0					
ANR	22658	PrimaryExpression	7		22555	1					
ANR	22659	AndExpression	perm [ 0 ] == 'r' && perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/'		22555	1		&&			
ANR	22660	EqualityExpression	perm [ 0 ] == 'r'		22555	0		==			
ANR	22661	ArrayIndexing	perm [ 0 ]		22555	0					
ANR	22662	Identifier	perm		22555	0					
ANR	22663	PrimaryExpression	0		22555	1					
ANR	22664	PrimaryExpression	'r'		22555	1					
ANR	22665	AndExpression	perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/'		22555	1		&&			
ANR	22666	EqualityExpression	perm [ 1 ] == '-'		22555	0		==			
ANR	22667	ArrayIndexing	perm [ 1 ]		22555	0					
ANR	22668	Identifier	perm		22555	0					
ANR	22669	PrimaryExpression	1		22555	1					
ANR	22670	PrimaryExpression	'-'		22555	1					
ANR	22671	AndExpression	perm [ 2 ] == 'x' && name [ 0 ] == '/'		22555	1		&&			
ANR	22672	EqualityExpression	perm [ 2 ] == 'x'		22555	0		==			
ANR	22673	ArrayIndexing	perm [ 2 ]		22555	0					
ANR	22674	Identifier	perm		22555	0					
ANR	22675	PrimaryExpression	2		22555	1					
ANR	22676	PrimaryExpression	'x'		22555	1					
ANR	22677	EqualityExpression	name [ 0 ] == '/'		22555	1		==			
ANR	22678	ArrayIndexing	name [ 0 ]		22555	0					
ANR	22679	Identifier	name		22555	0					
ANR	22680	PrimaryExpression	0		22555	1					
ANR	22681	PrimaryExpression	'/'		22555	1					
ANR	22682	CompoundStatement		14:8:492:544	22555	1					
ANR	22683	Statement	long	2578:3:78051:78054	22555	0	True				
ANR	22684	IdentifierDeclStatement	"unsigned int seg_start = ZEND_MM_ALIGNED_SIZE_EX ( start , huge_page_size ) ;"	2578:8:78056:78128	22555	1	True				
ANR	22685	IdentifierDecl	"seg_start = ZEND_MM_ALIGNED_SIZE_EX ( start , huge_page_size )"		22555	0					
ANR	22686	IdentifierDeclType	unsigned int		22555	0					
ANR	22687	Identifier	seg_start		22555	1					
ANR	22688	AssignmentExpression	"seg_start = ZEND_MM_ALIGNED_SIZE_EX ( start , huge_page_size )"		22555	2		=			
ANR	22689	Identifier	seg_start		22555	0					
ANR	22690	CallExpression	"ZEND_MM_ALIGNED_SIZE_EX ( start , huge_page_size )"		22555	1					
ANR	22691	Callee	ZEND_MM_ALIGNED_SIZE_EX		22555	0					
ANR	22692	Identifier	ZEND_MM_ALIGNED_SIZE_EX		22555	0					
ANR	22693	ArgumentList	start		22555	1					
ANR	22694	Argument	start		22555	0					
ANR	22695	Identifier	start		22555	0					
ANR	22696	Argument	huge_page_size		22555	1					
ANR	22697	Identifier	huge_page_size		22555	0					
ANR	22698	Statement	long	2579:3:78133:78136	22555	2	True				
ANR	22699	IdentifierDeclStatement	unsigned int seg_end = ( end & ~ ( huge_page_size - 1L ) ) ;	2579:8:78138:78190	22555	3	True				
ANR	22700	IdentifierDecl	seg_end = ( end & ~ ( huge_page_size - 1L ) )		22555	0					
ANR	22701	IdentifierDeclType	unsigned int		22555	0					
ANR	22702	Identifier	seg_end		22555	1					
ANR	22703	AssignmentExpression	seg_end = ( end & ~ ( huge_page_size - 1L ) )		22555	2		=			
ANR	22704	Identifier	seg_end		22555	0					
ANR	22705	BitAndExpression	end & ~ ( huge_page_size - 1L )		22555	1		&			
ANR	22706	Identifier	end		22555	0					
ANR	22707	UnaryOperationExpression	~ ( huge_page_size - 1L )		22555	1					
ANR	22708	UnaryOperator	~		22555	0					
ANR	22709	AdditiveExpression	huge_page_size - 1L		22555	1		-			
ANR	22710	Identifier	huge_page_size		22555	0					
ANR	22711	PrimaryExpression	1L		22555	1					
ANR	22712	IfStatement	if ( seg_end > seg_start )		22555	4					
ANR	22713	Condition	seg_end > seg_start	2581:7:78200:78218	22555	0	True				
ANR	22714	RelationalExpression	seg_end > seg_start		22555	0		>			
ANR	22715	Identifier	seg_end		22555	0					
ANR	22716	Identifier	seg_start		22555	1					
ANR	22717	CompoundStatement		16:28:575:575	22555	1					
ANR	22718	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""remap to huge page %lx-%lx %s \\n"" , seg_start , seg_end , name )"	2582:4:78227:78322	22555	0	True				
ANR	22719	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""remap to huge page %lx-%lx %s \\n"" , seg_start , seg_end , name )"		22555	0					
ANR	22720	Callee	zend_accel_error		22555	0					
ANR	22721	Identifier	zend_accel_error		22555	0					
ANR	22722	ArgumentList	ACCEL_LOG_DEBUG		22555	1					
ANR	22723	Argument	ACCEL_LOG_DEBUG		22555	0					
ANR	22724	Identifier	ACCEL_LOG_DEBUG		22555	0					
ANR	22725	Argument	"""remap to huge page %lx-%lx %s \\n"""		22555	1					
ANR	22726	PrimaryExpression	"""remap to huge page %lx-%lx %s \\n"""		22555	0					
ANR	22727	Argument	seg_start		22555	2					
ANR	22728	Identifier	seg_start		22555	0					
ANR	22729	Argument	seg_end		22555	3					
ANR	22730	Identifier	seg_end		22555	0					
ANR	22731	Argument	name		22555	4					
ANR	22732	Identifier	name		22555	0					
ANR	22733	ExpressionStatement	"accel_remap_huge_pages ( ( void * ) seg_start , seg_end - seg_start , name , offset + seg_start - start )"	2583:4:78328:78423	22555	1	True				
ANR	22734	CallExpression	"accel_remap_huge_pages ( ( void * ) seg_start , seg_end - seg_start , name , offset + seg_start - start )"		22555	0					
ANR	22735	Callee	accel_remap_huge_pages		22555	0					
ANR	22736	Identifier	accel_remap_huge_pages		22555	0					
ANR	22737	ArgumentList	( void * ) seg_start		22555	1					
ANR	22738	Argument	( void * ) seg_start		22555	0					
ANR	22739	CastExpression	( void * ) seg_start		22555	0					
ANR	22740	CastTarget	void *		22555	0					
ANR	22741	Identifier	seg_start		22555	1					
ANR	22742	Argument	seg_end - seg_start		22555	1					
ANR	22743	AdditiveExpression	seg_end - seg_start		22555	0		-			
ANR	22744	Identifier	seg_end		22555	0					
ANR	22745	Identifier	seg_start		22555	1					
ANR	22746	Argument	name		22555	2					
ANR	22747	Identifier	name		22555	0					
ANR	22748	Argument	offset + seg_start - start		22555	3					
ANR	22749	AdditiveExpression	offset + seg_start - start		22555	0		+			
ANR	22750	Identifier	offset		22555	0					
ANR	22751	AdditiveExpression	seg_start - start		22555	1		-			
ANR	22752	Identifier	seg_start		22555	0					
ANR	22753	Identifier	start		22555	1					
ANR	22754	ExpressionStatement	fclose ( f )	2586:2:78436:78445	22555	6	True				
ANR	22755	CallExpression	fclose ( f )		22555	0					
ANR	22756	Callee	fclose		22555	0					
ANR	22757	Identifier	fclose		22555	0					
ANR	22758	ArgumentList	f		22555	1					
ANR	22759	Argument	f		22555	0					
ANR	22760	Identifier	f		22555	0					
ANR	22761	ReturnType	static void		22555	1					
ANR	22762	Identifier	accel_move_code_to_huge_pages		22555	2					
ANR	22763	ParameterList			22555	3					
ANR	22764	CFGEntryNode	ENTRY		22555		True				
ANR	22765	CFGExitNode	EXIT		22555		True				
ANR	22766	Symbol	ret		22555						
ANR	22767	Symbol	* name		22555						
ANR	22768	Symbol	fopen		22555						
ANR	22769	Symbol	huge_page_size		22555						
ANR	22770	Symbol	offset		22555						
ANR	22771	Symbol	perm		22555						
ANR	22772	Symbol	* perm		22555						
ANR	22773	Symbol	seg_start		22555						
ANR	22774	Symbol	f		22555						
ANR	22775	Symbol	& offset		22555						
ANR	22776	Symbol	& end		22555						
ANR	22777	Symbol	start		22555						
ANR	22778	Symbol	ZEND_MM_ALIGNED_SIZE_EX		22555						
ANR	22779	Symbol	seg_end		22555						
ANR	22780	Symbol	inode		22555						
ANR	22781	Symbol	fscanf		22555						
ANR	22782	Symbol	& inode		22555						
ANR	22783	Symbol	dev		22555						
ANR	22784	Symbol	ACCEL_LOG_DEBUG		22555						
ANR	22785	Symbol	name		22555						
ANR	22786	Symbol	end		22555						
ANR	22787	Symbol	& start		22555						
ANR	22788	Function	accel_move_code_to_huge_pages	2590:0:78459:78640							
ANR	22789	FunctionDef	accel_move_code_to_huge_pages ()		22788	0					
ANR	22790	CompoundStatement		2591:0:78507:78640	22788	0					
ANR	22791	Statement	zend_error	2592:1:78510:78519	22788	0	True				
ANR	22792	Statement	(	2592:11:78520:78520	22788	1	True				
ANR	22793	Statement	E_WARNING	2592:12:78521:78529	22788	2	True				
ANR	22794	Statement	","	2592:21:78530:78530	22788	3	True				
ANR	22795	Statement	ACCELERATOR_PRODUCT_NAME	2592:23:78532:78555	22788	4	True				
ANR	22796	Statement	""": opcache.huge_code_pages has no affect as huge page is not supported"""	2592:48:78557:78627	22788	5	True				
ANR	22797	Statement	)	2592:119:78628:78628	22788	6	True				
ANR	22798	ExpressionStatement		2592:120:78629:78629	22788	7	True				
ANR	22799	ReturnStatement	return ;	2593:1:78632:78638	22788	8	True				
ANR	22800	ReturnType	static void		22788	1					
ANR	22801	Identifier	accel_move_code_to_huge_pages		22788	2					
ANR	22802	ParameterList			22788	3					
ANR	22803	CFGEntryNode	ENTRY		22788		True				
ANR	22804	CFGExitNode	EXIT		22788		True				
ANR	22805	Function	accel_startup	2598:0:78738:84541							
ANR	22806	FunctionDef	accel_startup (zend_extension * extension)		22805	0					
ANR	22807	CompoundStatement		2599:0:78790:84541	22805	0					
ANR	22808	IdentifierDeclStatement	zend_function * func ;	2600:1:78793:78812	22805	0	True				
ANR	22809	IdentifierDecl	* func		22805	0					
ANR	22810	IdentifierDeclType	zend_function *		22805	0					
ANR	22811	Identifier	func		22805	1					
ANR	22812	IdentifierDeclStatement	zend_ini_entry * ini_entry ;	2601:1:78815:78840	22805	1	True				
ANR	22813	IdentifierDecl	* ini_entry		22805	0					
ANR	22814	IdentifierDeclType	zend_ini_entry *		22805	0					
ANR	22815	Identifier	ini_entry		22805	1					
ANR	22816	ExpressionStatement	"accel_globals_id = ts_allocate_id ( & accel_globals_id , sizeof ( zend_accel_globals ) , ( ts_allocate_ctor ) accel_globals_ctor , ( ts_allocate_dtor ) accel_globals_dtor )"	2604:1:78855:79013	22805	2	True				
ANR	22817	AssignmentExpression	"accel_globals_id = ts_allocate_id ( & accel_globals_id , sizeof ( zend_accel_globals ) , ( ts_allocate_ctor ) accel_globals_ctor , ( ts_allocate_dtor ) accel_globals_dtor )"		22805	0		=			
ANR	22818	Identifier	accel_globals_id		22805	0					
ANR	22819	CallExpression	"ts_allocate_id ( & accel_globals_id , sizeof ( zend_accel_globals ) , ( ts_allocate_ctor ) accel_globals_ctor , ( ts_allocate_dtor ) accel_globals_dtor )"		22805	1					
ANR	22820	Callee	ts_allocate_id		22805	0					
ANR	22821	Identifier	ts_allocate_id		22805	0					
ANR	22822	ArgumentList	& accel_globals_id		22805	1					
ANR	22823	Argument	& accel_globals_id		22805	0					
ANR	22824	UnaryOperationExpression	& accel_globals_id		22805	0					
ANR	22825	UnaryOperator	&		22805	0					
ANR	22826	Identifier	accel_globals_id		22805	1					
ANR	22827	Argument	sizeof ( zend_accel_globals )		22805	1					
ANR	22828	SizeofExpression	sizeof ( zend_accel_globals )		22805	0					
ANR	22829	Sizeof	sizeof		22805	0					
ANR	22830	SizeofOperand	zend_accel_globals		22805	1					
ANR	22831	Argument	( ts_allocate_ctor ) accel_globals_ctor		22805	2					
ANR	22832	CastExpression	( ts_allocate_ctor ) accel_globals_ctor		22805	0					
ANR	22833	CastTarget	ts_allocate_ctor		22805	0					
ANR	22834	Identifier	accel_globals_ctor		22805	1					
ANR	22835	Argument	( ts_allocate_dtor ) accel_globals_dtor		22805	3					
ANR	22836	CastExpression	( ts_allocate_dtor ) accel_globals_dtor		22805	0					
ANR	22837	CastTarget	ts_allocate_dtor		22805	0					
ANR	22838	Identifier	accel_globals_dtor		22805	1					
ANR	22839	ExpressionStatement	_setmaxstdio ( 2048 )	2610:1:79085:79103	22805	3	True				
ANR	22840	CallExpression	_setmaxstdio ( 2048 )		22805	0					
ANR	22841	Callee	_setmaxstdio		22805	0					
ANR	22842	Identifier	_setmaxstdio		22805	0					
ANR	22843	ArgumentList	2048		22805	1					
ANR	22844	Argument	2048		22805	0					
ANR	22845	PrimaryExpression	2048		22805	0					
ANR	22846	IfStatement	if ( start_accel_module ( ) == FAILURE )		22805	4					
ANR	22847	Condition	start_accel_module ( ) == FAILURE	2613:5:79180:79210	22805	0	True				
ANR	22848	EqualityExpression	start_accel_module ( ) == FAILURE		22805	0		==			
ANR	22849	CallExpression	start_accel_module ( )		22805	0					
ANR	22850	Callee	start_accel_module		22805	0					
ANR	22851	Identifier	start_accel_module		22805	0					
ANR	22852	ArgumentList			22805	1					
ANR	22853	Identifier	FAILURE		22805	1					
ANR	22854	CompoundStatement		15:38:422:422	22805	1					
ANR	22855	ExpressionStatement	accel_startup_ok = 0	2614:2:79217:79237	22805	0	True				
ANR	22856	AssignmentExpression	accel_startup_ok = 0		22805	0		=			
ANR	22857	Identifier	accel_startup_ok		22805	0					
ANR	22858	PrimaryExpression	0		22805	1					
ANR	22859	Statement	zend_error	2615:2:79241:79250	22805	1	True				
ANR	22860	Statement	(	2615:12:79251:79251	22805	2	True				
ANR	22861	Statement	E_WARNING	2615:13:79252:79260	22805	3	True				
ANR	22862	Statement	","	2615:22:79261:79261	22805	4	True				
ANR	22863	Statement	ACCELERATOR_PRODUCT_NAME	2615:24:79263:79286	22805	5	True				
ANR	22864	Statement	""": module registration failed!"""	2615:49:79288:79318	22805	6	True				
ANR	22865	Statement	)	2615:80:79319:79319	22805	7	True				
ANR	22866	ExpressionStatement		2615:81:79320:79320	22805	8	True				
ANR	22867	ReturnStatement	return FAILURE ;	2616:2:79324:79338	22805	9	True				
ANR	22868	Identifier	FAILURE		22805	0					
ANR	22869	ExpressionStatement	accel_gen_system_id ( )	2619:1:79345:79366	22805	5	True				
ANR	22870	CallExpression	accel_gen_system_id ( )		22805	0					
ANR	22871	Callee	accel_gen_system_id		22805	0					
ANR	22872	Identifier	accel_gen_system_id		22805	0					
ANR	22873	ArgumentList			22805	1					
ANR	22874	IfStatement	"if ( ZCG ( accel_directives ) . huge_code_pages && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0 ) )"		22805	6					
ANR	22875	Condition	"ZCG ( accel_directives ) . huge_code_pages && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0 )"	2622:5:79402:79634	22805	0	True				
ANR	22876	AndExpression	"ZCG ( accel_directives ) . huge_code_pages && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0 )"		22805	0		&&			
ANR	22877	MemberAccess	ZCG ( accel_directives ) . huge_code_pages		22805	0					
ANR	22878	CallExpression	ZCG ( accel_directives )		22805	0					
ANR	22879	Callee	ZCG		22805	0					
ANR	22880	Identifier	ZCG		22805	0					
ANR	22881	ArgumentList	accel_directives		22805	1					
ANR	22882	Argument	accel_directives		22805	0					
ANR	22883	Identifier	accel_directives		22805	0					
ANR	22884	Identifier	huge_code_pages		22805	1					
ANR	22885	OrExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0"		22805	1		||			
ANR	22886	EqualityExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0"		22805	0		==			
ANR	22887	CallExpression	"strcmp ( sapi_module . name , ""cli"" )"		22805	0					
ANR	22888	Callee	strcmp		22805	0					
ANR	22889	Identifier	strcmp		22805	0					
ANR	22890	ArgumentList	sapi_module . name		22805	1					
ANR	22891	Argument	sapi_module . name		22805	0					
ANR	22892	MemberAccess	sapi_module . name		22805	0					
ANR	22893	Identifier	sapi_module		22805	0					
ANR	22894	Identifier	name		22805	1					
ANR	22895	Argument	"""cli"""		22805	1					
ANR	22896	PrimaryExpression	"""cli"""		22805	0					
ANR	22897	PrimaryExpression	0		22805	1					
ANR	22898	OrExpression	"strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0"		22805	1		||			
ANR	22899	EqualityExpression	"strcmp ( sapi_module . name , ""cli-server"" ) == 0"		22805	0		==			
ANR	22900	CallExpression	"strcmp ( sapi_module . name , ""cli-server"" )"		22805	0					
ANR	22901	Callee	strcmp		22805	0					
ANR	22902	Identifier	strcmp		22805	0					
ANR	22903	ArgumentList	sapi_module . name		22805	1					
ANR	22904	Argument	sapi_module . name		22805	0					
ANR	22905	MemberAccess	sapi_module . name		22805	0					
ANR	22906	Identifier	sapi_module		22805	0					
ANR	22907	Identifier	name		22805	1					
ANR	22908	Argument	"""cli-server"""		22805	1					
ANR	22909	PrimaryExpression	"""cli-server"""		22805	0					
ANR	22910	PrimaryExpression	0		22805	1					
ANR	22911	OrExpression	"strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0"		22805	1		||			
ANR	22912	EqualityExpression	"strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0"		22805	0		==			
ANR	22913	CallExpression	"strcmp ( sapi_module . name , ""cgi-fcgi"" )"		22805	0					
ANR	22914	Callee	strcmp		22805	0					
ANR	22915	Identifier	strcmp		22805	0					
ANR	22916	ArgumentList	sapi_module . name		22805	1					
ANR	22917	Argument	sapi_module . name		22805	0					
ANR	22918	MemberAccess	sapi_module . name		22805	0					
ANR	22919	Identifier	sapi_module		22805	0					
ANR	22920	Identifier	name		22805	1					
ANR	22921	Argument	"""cgi-fcgi"""		22805	1					
ANR	22922	PrimaryExpression	"""cgi-fcgi"""		22805	0					
ANR	22923	PrimaryExpression	0		22805	1					
ANR	22924	EqualityExpression	"strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0"		22805	1		==			
ANR	22925	CallExpression	"strcmp ( sapi_module . name , ""fpm-fcgi"" )"		22805	0					
ANR	22926	Callee	strcmp		22805	0					
ANR	22927	Identifier	strcmp		22805	0					
ANR	22928	ArgumentList	sapi_module . name		22805	1					
ANR	22929	Argument	sapi_module . name		22805	0					
ANR	22930	MemberAccess	sapi_module . name		22805	0					
ANR	22931	Identifier	sapi_module		22805	0					
ANR	22932	Identifier	name		22805	1					
ANR	22933	Argument	"""fpm-fcgi"""		22805	1					
ANR	22934	PrimaryExpression	"""fpm-fcgi"""		22805	0					
ANR	22935	PrimaryExpression	0		22805	1					
ANR	22936	CompoundStatement		28:47:846:846	22805	1					
ANR	22937	ExpressionStatement	accel_move_code_to_huge_pages ( )	2627:2:79641:79672	22805	0	True				
ANR	22938	CallExpression	accel_move_code_to_huge_pages ( )		22805	0					
ANR	22939	Callee	accel_move_code_to_huge_pages		22805	0					
ANR	22940	Identifier	accel_move_code_to_huge_pages		22805	0					
ANR	22941	ArgumentList			22805	1					
ANR	22942	IfStatement	if ( accel_find_sapi ( ) == FAILURE )		22805	7					
ANR	22943	Condition	accel_find_sapi ( ) == FAILURE	2632:5:79768:79795	22805	0	True				
ANR	22944	EqualityExpression	accel_find_sapi ( ) == FAILURE		22805	0		==			
ANR	22945	CallExpression	accel_find_sapi ( )		22805	0					
ANR	22946	Callee	accel_find_sapi		22805	0					
ANR	22947	Identifier	accel_find_sapi		22805	0					
ANR	22948	ArgumentList			22805	1					
ANR	22949	Identifier	FAILURE		22805	1					
ANR	22950	CompoundStatement		34:35:1007:1007	22805	1					
ANR	22951	ExpressionStatement	accel_startup_ok = 0	2633:2:79802:79822	22805	0	True				
ANR	22952	AssignmentExpression	accel_startup_ok = 0		22805	0		=			
ANR	22953	Identifier	accel_startup_ok		22805	0					
ANR	22954	PrimaryExpression	0		22805	1					
ANR	22955	IfStatement	"if ( ! ZCG ( accel_directives ) . enable_cli && strcmp ( sapi_module . name , ""cli"" ) == 0 )"		22805	1					
ANR	22956	Condition	"! ZCG ( accel_directives ) . enable_cli && strcmp ( sapi_module . name , ""cli"" ) == 0"	2634:6:79830:79908	22805	0	True				
ANR	22957	AndExpression	"! ZCG ( accel_directives ) . enable_cli && strcmp ( sapi_module . name , ""cli"" ) == 0"		22805	0		&&			
ANR	22958	UnaryOperationExpression	! ZCG ( accel_directives ) . enable_cli		22805	0					
ANR	22959	UnaryOperator	!		22805	0					
ANR	22960	MemberAccess	ZCG ( accel_directives ) . enable_cli		22805	1					
ANR	22961	CallExpression	ZCG ( accel_directives )		22805	0					
ANR	22962	Callee	ZCG		22805	0					
ANR	22963	Identifier	ZCG		22805	0					
ANR	22964	ArgumentList	accel_directives		22805	1					
ANR	22965	Argument	accel_directives		22805	0					
ANR	22966	Identifier	accel_directives		22805	0					
ANR	22967	Identifier	enable_cli		22805	1					
ANR	22968	EqualityExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0"		22805	1		==			
ANR	22969	CallExpression	"strcmp ( sapi_module . name , ""cli"" )"		22805	0					
ANR	22970	Callee	strcmp		22805	0					
ANR	22971	Identifier	strcmp		22805	0					
ANR	22972	ArgumentList	sapi_module . name		22805	1					
ANR	22973	Argument	sapi_module . name		22805	0					
ANR	22974	MemberAccess	sapi_module . name		22805	0					
ANR	22975	Identifier	sapi_module		22805	0					
ANR	22976	Identifier	name		22805	1					
ANR	22977	Argument	"""cli"""		22805	1					
ANR	22978	PrimaryExpression	"""cli"""		22805	0					
ANR	22979	PrimaryExpression	0		22805	1					
ANR	22980	CompoundStatement		37:44:1120:1120	22805	1					
ANR	22981	ExpressionStatement	"zps_startup_failure ( ""Opcode Caching is disabled for CLI"" , NULL , accelerator_remove_cb )"	2636:3:79916:80002	22805	0	True				
ANR	22982	CallExpression	"zps_startup_failure ( ""Opcode Caching is disabled for CLI"" , NULL , accelerator_remove_cb )"		22805	0					
ANR	22983	Callee	zps_startup_failure		22805	0					
ANR	22984	Identifier	zps_startup_failure		22805	0					
ANR	22985	ArgumentList	"""Opcode Caching is disabled for CLI"""		22805	1					
ANR	22986	Argument	"""Opcode Caching is disabled for CLI"""		22805	0					
ANR	22987	PrimaryExpression	"""Opcode Caching is disabled for CLI"""		22805	0					
ANR	22988	Argument	NULL		22805	1					
ANR	22989	Identifier	NULL		22805	0					
ANR	22990	Argument	accelerator_remove_cb		22805	2					
ANR	22991	Identifier	accelerator_remove_cb		22805	0					
ANR	22992	ElseStatement	else		22805	0					
ANR	22993	CompoundStatement		39:9:1222:1222	22805	0					
ANR	22994	ExpressionStatement	"zps_startup_failure ( ""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"" , NULL , accelerator_remove_cb )"	2638:3:80018:80153	22805	0	True				
ANR	22995	CallExpression	"zps_startup_failure ( ""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"" , NULL , accelerator_remove_cb )"		22805	0					
ANR	22996	Callee	zps_startup_failure		22805	0					
ANR	22997	Identifier	zps_startup_failure		22805	0					
ANR	22998	ArgumentList	"""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"""		22805	1					
ANR	22999	Argument	"""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"""		22805	0					
ANR	23000	PrimaryExpression	"""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"""		22805	0					
ANR	23001	Argument	NULL		22805	1					
ANR	23002	Identifier	NULL		22805	0					
ANR	23003	Argument	accelerator_remove_cb		22805	2					
ANR	23004	Identifier	accelerator_remove_cb		22805	0					
ANR	23005	ReturnStatement	return SUCCESS ;	2640:2:80161:80175	22805	2	True				
ANR	23006	Identifier	SUCCESS		22805	0					
ANR	23007	IfStatement	if ( ZCG ( enabled ) == 0 )		22805	8					
ANR	23008	Condition	ZCG ( enabled ) == 0	2643:5:80186:80202	22805	0	True				
ANR	23009	EqualityExpression	ZCG ( enabled ) == 0		22805	0		==			
ANR	23010	CallExpression	ZCG ( enabled )		22805	0					
ANR	23011	Callee	ZCG		22805	0					
ANR	23012	Identifier	ZCG		22805	0					
ANR	23013	ArgumentList	enabled		22805	1					
ANR	23014	Argument	enabled		22805	0					
ANR	23015	Identifier	enabled		22805	0					
ANR	23016	PrimaryExpression	0		22805	1					
ANR	23017	CompoundStatement		45:24:1414:1414	22805	1					
ANR	23018	ReturnStatement	return SUCCESS ;	2644:2:80209:80224	22805	0	True				
ANR	23019	Identifier	SUCCESS		22805	0					
ANR	23020	IfStatement	if ( ! ZCG ( accel_directives ) . file_cache_only )		22805	9					
ANR	23021	Condition	! ZCG ( accel_directives ) . file_cache_only	2651:5:80407:80444	22805	0	True				
ANR	23022	UnaryOperationExpression	! ZCG ( accel_directives ) . file_cache_only		22805	0					
ANR	23023	UnaryOperator	!		22805	0					
ANR	23024	MemberAccess	ZCG ( accel_directives ) . file_cache_only		22805	1					
ANR	23025	CallExpression	ZCG ( accel_directives )		22805	0					
ANR	23026	Callee	ZCG		22805	0					
ANR	23027	Identifier	ZCG		22805	0					
ANR	23028	ArgumentList	accel_directives		22805	1					
ANR	23029	Argument	accel_directives		22805	0					
ANR	23030	Identifier	accel_directives		22805	0					
ANR	23031	Identifier	file_cache_only		22805	1					
ANR	23032	CompoundStatement		53:45:1656:1656	22805	1					
ANR	23033	SwitchStatement	switch ( zend_shared_alloc_startup ( ZCG ( accel_directives ) . memory_consumption ) )		22805	0					
ANR	23034	Condition	zend_shared_alloc_startup ( ZCG ( accel_directives ) . memory_consumption )	2655:10:80482:80548	22805	0	True				
ANR	23035	CallExpression	zend_shared_alloc_startup ( ZCG ( accel_directives ) . memory_consumption )		22805	0					
ANR	23036	Callee	zend_shared_alloc_startup		22805	0					
ANR	23037	Identifier	zend_shared_alloc_startup		22805	0					
ANR	23038	ArgumentList	ZCG ( accel_directives ) . memory_consumption		22805	1					
ANR	23039	Argument	ZCG ( accel_directives ) . memory_consumption		22805	0					
ANR	23040	MemberAccess	ZCG ( accel_directives ) . memory_consumption		22805	0					
ANR	23041	CallExpression	ZCG ( accel_directives )		22805	0					
ANR	23042	Callee	ZCG		22805	0					
ANR	23043	Identifier	ZCG		22805	0					
ANR	23044	ArgumentList	accel_directives		22805	1					
ANR	23045	Argument	accel_directives		22805	0					
ANR	23046	Identifier	accel_directives		22805	0					
ANR	23047	Identifier	memory_consumption		22805	1					
ANR	23048	CompoundStatement		57:79:1760:1760	22805	1					
ANR	23049	Label	case ALLOC_SUCCESS :	2656:3:80556:80574	22805	0	True				
ANR	23050	Identifier	ALLOC_SUCCESS		22805	0					
ANR	23051	IfStatement	if ( zend_accel_init_shm ( ) == FAILURE )		22805	1					
ANR	23052	Condition	zend_accel_init_shm ( ) == FAILURE	2657:8:80584:80615	22805	0	True				
ANR	23053	EqualityExpression	zend_accel_init_shm ( ) == FAILURE		22805	0		==			
ANR	23054	CallExpression	zend_accel_init_shm ( )		22805	0					
ANR	23055	Callee	zend_accel_init_shm		22805	0					
ANR	23056	Identifier	zend_accel_init_shm		22805	0					
ANR	23057	ArgumentList			22805	1					
ANR	23058	Identifier	FAILURE		22805	1					
ANR	23059	CompoundStatement		59:42:1827:1827	22805	1					
ANR	23060	ExpressionStatement	accel_startup_ok = 0	2658:5:80625:80645	22805	0	True				
ANR	23061	AssignmentExpression	accel_startup_ok = 0		22805	0		=			
ANR	23062	Identifier	accel_startup_ok		22805	0					
ANR	23063	PrimaryExpression	0		22805	1					
ANR	23064	ReturnStatement	return FAILURE ;	2659:5:80652:80666	22805	1	True				
ANR	23065	Identifier	FAILURE		22805	0					
ANR	23066	BreakStatement	break ;	2661:4:80678:80683	22805	2	True				
ANR	23067	Label	case ALLOC_FAILURE :	2662:3:80688:80706	22805	3	True				
ANR	23068	Identifier	ALLOC_FAILURE		22805	0					
ANR	23069	ExpressionStatement	accel_startup_ok = 0	2663:4:80712:80732	22805	4	True				
ANR	23070	AssignmentExpression	accel_startup_ok = 0		22805	0		=			
ANR	23071	Identifier	accel_startup_ok		22805	0					
ANR	23072	PrimaryExpression	0		22805	1					
ANR	23073	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""Failure to initialize shared memory structures - probably not enough shared memory."" )"	2664:4:80738:80858	22805	5	True				
ANR	23074	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""Failure to initialize shared memory structures - probably not enough shared memory."" )"		22805	0					
ANR	23075	Callee	zend_accel_error		22805	0					
ANR	23076	Identifier	zend_accel_error		22805	0					
ANR	23077	ArgumentList	ACCEL_LOG_FATAL		22805	1					
ANR	23078	Argument	ACCEL_LOG_FATAL		22805	0					
ANR	23079	Identifier	ACCEL_LOG_FATAL		22805	0					
ANR	23080	Argument	"""Failure to initialize shared memory structures - probably not enough shared memory."""		22805	1					
ANR	23081	PrimaryExpression	"""Failure to initialize shared memory structures - probably not enough shared memory."""		22805	0					
ANR	23082	ReturnStatement	return SUCCESS ;	2665:4:80864:80878	22805	6	True				
ANR	23083	Identifier	SUCCESS		22805	0					
ANR	23084	Label	case SUCCESSFULLY_REATTACHED :	2666:3:80883:80911	22805	7	True				
ANR	23085	Identifier	SUCCESSFULLY_REATTACHED		22805	0					
ANR	23086	ExpressionStatement	zend_shared_alloc_lock ( )	2667:4:80917:80941	22805	8	True				
ANR	23087	CallExpression	zend_shared_alloc_lock ( )		22805	0					
ANR	23088	Callee	zend_shared_alloc_lock		22805	0					
ANR	23089	Identifier	zend_shared_alloc_lock		22805	0					
ANR	23090	ArgumentList			22805	1					
ANR	23091	ExpressionStatement	accel_shared_globals = ( zend_accel_shared_globals * ) ZSMMG ( app_shared_globals )	2668:4:80947:81025	22805	9	True				
ANR	23092	AssignmentExpression	accel_shared_globals = ( zend_accel_shared_globals * ) ZSMMG ( app_shared_globals )		22805	0		=			
ANR	23093	Identifier	accel_shared_globals		22805	0					
ANR	23094	CastExpression	( zend_accel_shared_globals * ) ZSMMG ( app_shared_globals )		22805	1					
ANR	23095	CastTarget	zend_accel_shared_globals *		22805	0					
ANR	23096	CallExpression	ZSMMG ( app_shared_globals )		22805	1					
ANR	23097	Callee	ZSMMG		22805	0					
ANR	23098	Identifier	ZSMMG		22805	0					
ANR	23099	ArgumentList	app_shared_globals		22805	1					
ANR	23100	Argument	app_shared_globals		22805	0					
ANR	23101	Identifier	app_shared_globals		22805	0					
ANR	23102	ExpressionStatement	orig_new_interned_string = zend_new_interned_string	2669:4:81031:81082	22805	10	True				
ANR	23103	AssignmentExpression	orig_new_interned_string = zend_new_interned_string		22805	0		=			
ANR	23104	Identifier	orig_new_interned_string		22805	0					
ANR	23105	Identifier	zend_new_interned_string		22805	1					
ANR	23106	ExpressionStatement	orig_interned_strings_snapshot = zend_interned_strings_snapshot	2670:4:81088:81151	22805	11	True				
ANR	23107	AssignmentExpression	orig_interned_strings_snapshot = zend_interned_strings_snapshot		22805	0		=			
ANR	23108	Identifier	orig_interned_strings_snapshot		22805	0					
ANR	23109	Identifier	zend_interned_strings_snapshot		22805	1					
ANR	23110	ExpressionStatement	orig_interned_strings_restore = zend_interned_strings_restore	2671:4:81157:81218	22805	12	True				
ANR	23111	AssignmentExpression	orig_interned_strings_restore = zend_interned_strings_restore		22805	0		=			
ANR	23112	Identifier	orig_interned_strings_restore		22805	0					
ANR	23113	Identifier	zend_interned_strings_restore		22805	1					
ANR	23114	ExpressionStatement	zend_new_interned_string = accel_new_interned_string_for_php	2673:4:81225:81285	22805	13	True				
ANR	23115	AssignmentExpression	zend_new_interned_string = accel_new_interned_string_for_php		22805	0		=			
ANR	23116	Identifier	zend_new_interned_string		22805	0					
ANR	23117	Identifier	accel_new_interned_string_for_php		22805	1					
ANR	23118	ExpressionStatement	zend_interned_strings_snapshot = accel_interned_strings_snapshot_for_php	2674:4:81291:81363	22805	14	True				
ANR	23119	AssignmentExpression	zend_interned_strings_snapshot = accel_interned_strings_snapshot_for_php		22805	0		=			
ANR	23120	Identifier	zend_interned_strings_snapshot		22805	0					
ANR	23121	Identifier	accel_interned_strings_snapshot_for_php		22805	1					
ANR	23122	ExpressionStatement	zend_interned_strings_restore = accel_interned_strings_restore_for_php	2675:4:81369:81439	22805	15	True				
ANR	23123	AssignmentExpression	zend_interned_strings_restore = accel_interned_strings_restore_for_php		22805	0		=			
ANR	23124	Identifier	zend_interned_strings_restore		22805	0					
ANR	23125	Identifier	accel_interned_strings_restore_for_php		22805	1					
ANR	23126	ExpressionStatement	accel_use_shm_interned_strings ( )	2677:4:81457:81489	22805	16	True				
ANR	23127	CallExpression	accel_use_shm_interned_strings ( )		22805	0					
ANR	23128	Callee	accel_use_shm_interned_strings		22805	0					
ANR	23129	Identifier	accel_use_shm_interned_strings		22805	0					
ANR	23130	ArgumentList			22805	1					
ANR	23131	ExpressionStatement	zend_shared_alloc_unlock ( )	2679:4:81502:81528	22805	17	True				
ANR	23132	CallExpression	zend_shared_alloc_unlock ( )		22805	0					
ANR	23133	Callee	zend_shared_alloc_unlock		22805	0					
ANR	23134	Identifier	zend_shared_alloc_unlock		22805	0					
ANR	23135	ArgumentList			22805	1					
ANR	23136	BreakStatement	break ;	2680:4:81534:81539	22805	18	True				
ANR	23137	Label	case FAILED_REATTACHED :	2681:3:81544:81566	22805	19	True				
ANR	23138	Identifier	FAILED_REATTACHED		22805	0					
ANR	23139	ExpressionStatement	accel_startup_ok = 0	2682:4:81572:81592	22805	20	True				
ANR	23140	AssignmentExpression	accel_startup_ok = 0		22805	0		=			
ANR	23141	Identifier	accel_startup_ok		22805	0					
ANR	23142	PrimaryExpression	0		22805	1					
ANR	23143	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""Failure to initialize shared memory structures - can not reattach to exiting shared memory."" )"	2683:4:81598:81726	22805	21	True				
ANR	23144	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""Failure to initialize shared memory structures - can not reattach to exiting shared memory."" )"		22805	0					
ANR	23145	Callee	zend_accel_error		22805	0					
ANR	23146	Identifier	zend_accel_error		22805	0					
ANR	23147	ArgumentList	ACCEL_LOG_FATAL		22805	1					
ANR	23148	Argument	ACCEL_LOG_FATAL		22805	0					
ANR	23149	Identifier	ACCEL_LOG_FATAL		22805	0					
ANR	23150	Argument	"""Failure to initialize shared memory structures - can not reattach to exiting shared memory."""		22805	1					
ANR	23151	PrimaryExpression	"""Failure to initialize shared memory structures - can not reattach to exiting shared memory."""		22805	0					
ANR	23152	ReturnStatement	return SUCCESS ;	2684:4:81732:81746	22805	22	True				
ANR	23153	Identifier	SUCCESS		22805	0					
ANR	23154	BreakStatement	break ;	2685:4:81752:81757	22805	23	True				
ANR	23155	Label	case ALLOC_FALLBACK :	2687:3:81793:81812	22805	24	True				
ANR	23156	Identifier	ALLOC_FALLBACK		22805	0					
ANR	23157	ExpressionStatement	zend_shared_alloc_lock ( )	2688:4:81818:81842	22805	25	True				
ANR	23158	CallExpression	zend_shared_alloc_lock ( )		22805	0					
ANR	23159	Callee	zend_shared_alloc_lock		22805	0					
ANR	23160	Identifier	zend_shared_alloc_lock		22805	0					
ANR	23161	ArgumentList			22805	1					
ANR	23162	ExpressionStatement	fallback_process = 1	2689:4:81848:81868	22805	26	True				
ANR	23163	AssignmentExpression	fallback_process = 1		22805	0		=			
ANR	23164	Identifier	fallback_process		22805	0					
ANR	23165	PrimaryExpression	1		22805	1					
ANR	23166	ExpressionStatement	zend_accel_init_auto_globals ( )	2690:4:81874:81904	22805	27	True				
ANR	23167	CallExpression	zend_accel_init_auto_globals ( )		22805	0					
ANR	23168	Callee	zend_accel_init_auto_globals		22805	0					
ANR	23169	Identifier	zend_accel_init_auto_globals		22805	0					
ANR	23170	ArgumentList			22805	1					
ANR	23171	ExpressionStatement	zend_shared_alloc_unlock ( )	2691:4:81910:81936	22805	28	True				
ANR	23172	CallExpression	zend_shared_alloc_unlock ( )		22805	0					
ANR	23173	Callee	zend_shared_alloc_unlock		22805	0					
ANR	23174	Identifier	zend_shared_alloc_unlock		22805	0					
ANR	23175	ArgumentList			22805	1					
ANR	23176	GotoStatement	goto file_cache_fallback ;	2692:4:81942:81966	22805	29	True				
ANR	23177	Identifier	file_cache_fallback		22805	0					
ANR	23178	BreakStatement	break ;	2693:4:81972:81977	22805	30	True				
ANR	23179	ExpressionStatement	ZCG ( last_restart_time ) = ZCSG ( last_restart_time )	2700:2:82122:82170	22805	1	True				
ANR	23180	AssignmentExpression	ZCG ( last_restart_time ) = ZCSG ( last_restart_time )		22805	0		=			
ANR	23181	CallExpression	ZCG ( last_restart_time )		22805	0					
ANR	23182	Callee	ZCG		22805	0					
ANR	23183	Identifier	ZCG		22805	0					
ANR	23184	ArgumentList	last_restart_time		22805	1					
ANR	23185	Argument	last_restart_time		22805	0					
ANR	23186	Identifier	last_restart_time		22805	0					
ANR	23187	CallExpression	ZCSG ( last_restart_time )		22805	1					
ANR	23188	Callee	ZCSG		22805	0					
ANR	23189	Identifier	ZCSG		22805	0					
ANR	23190	ArgumentList	last_restart_time		22805	1					
ANR	23191	Argument	last_restart_time		22805	0					
ANR	23192	Identifier	last_restart_time		22805	0					
ANR	23193	ExpressionStatement	zend_accel_init_auto_globals ( )	2703:2:82208:82238	22805	2	True				
ANR	23194	CallExpression	zend_accel_init_auto_globals ( )		22805	0					
ANR	23195	Callee	zend_accel_init_auto_globals		22805	0					
ANR	23196	Identifier	zend_accel_init_auto_globals		22805	0					
ANR	23197	ArgumentList			22805	1					
ANR	23198	ExpressionStatement	zend_shared_alloc_lock ( )	2705:2:82243:82267	22805	3	True				
ANR	23199	CallExpression	zend_shared_alloc_lock ( )		22805	0					
ANR	23200	Callee	zend_shared_alloc_lock		22805	0					
ANR	23201	Identifier	zend_shared_alloc_lock		22805	0					
ANR	23202	ArgumentList			22805	1					
ANR	23203	ExpressionStatement	zend_shared_alloc_save_state ( )	2706:2:82271:82301	22805	4	True				
ANR	23204	CallExpression	zend_shared_alloc_save_state ( )		22805	0					
ANR	23205	Callee	zend_shared_alloc_save_state		22805	0					
ANR	23206	Identifier	zend_shared_alloc_save_state		22805	0					
ANR	23207	ArgumentList			22805	1					
ANR	23208	ExpressionStatement	zend_shared_alloc_unlock ( )	2707:2:82305:82331	22805	5	True				
ANR	23209	CallExpression	zend_shared_alloc_unlock ( )		22805	0					
ANR	23210	Callee	zend_shared_alloc_unlock		22805	0					
ANR	23211	Identifier	zend_shared_alloc_unlock		22805	0					
ANR	23212	ArgumentList			22805	1					
ANR	23213	ExpressionStatement	SHM_PROTECT ( )	2709:2:82336:82349	22805	6	True				
ANR	23214	CallExpression	SHM_PROTECT ( )		22805	0					
ANR	23215	Callee	SHM_PROTECT		22805	0					
ANR	23216	Identifier	SHM_PROTECT		22805	0					
ANR	23217	ArgumentList			22805	1					
ANR	23218	ElseStatement	else		22805	0					
ANR	23219	IfStatement	if ( ! ZCG ( accel_directives ) . file_cache )		22805	0					
ANR	23220	Condition	! ZCG ( accel_directives ) . file_cache	2711:12:82394:82426	22805	0	True				
ANR	23221	UnaryOperationExpression	! ZCG ( accel_directives ) . file_cache		22805	0					
ANR	23222	UnaryOperator	!		22805	0					
ANR	23223	MemberAccess	ZCG ( accel_directives ) . file_cache		22805	1					
ANR	23224	CallExpression	ZCG ( accel_directives )		22805	0					
ANR	23225	Callee	ZCG		22805	0					
ANR	23226	Identifier	ZCG		22805	0					
ANR	23227	ArgumentList	accel_directives		22805	1					
ANR	23228	Argument	accel_directives		22805	0					
ANR	23229	Identifier	accel_directives		22805	0					
ANR	23230	Identifier	file_cache		22805	1					
ANR	23231	CompoundStatement		113:47:3638:3638	22805	1					
ANR	23232	ExpressionStatement	accel_startup_ok = 0	2712:2:82433:82453	22805	0	True				
ANR	23233	AssignmentExpression	accel_startup_ok = 0		22805	0		=			
ANR	23234	Identifier	accel_startup_ok		22805	0					
ANR	23235	PrimaryExpression	0		22805	1					
ANR	23236	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""opcache.file_cache_only is set without a proper setting of opcache.file_cache"" )"	2713:2:82457:82571	22805	1	True				
ANR	23237	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""opcache.file_cache_only is set without a proper setting of opcache.file_cache"" )"		22805	0					
ANR	23238	Callee	zend_accel_error		22805	0					
ANR	23239	Identifier	zend_accel_error		22805	0					
ANR	23240	ArgumentList	ACCEL_LOG_FATAL		22805	1					
ANR	23241	Argument	ACCEL_LOG_FATAL		22805	0					
ANR	23242	Identifier	ACCEL_LOG_FATAL		22805	0					
ANR	23243	Argument	"""opcache.file_cache_only is set without a proper setting of opcache.file_cache"""		22805	1					
ANR	23244	PrimaryExpression	"""opcache.file_cache_only is set without a proper setting of opcache.file_cache"""		22805	0					
ANR	23245	ReturnStatement	return SUCCESS ;	2714:2:82575:82589	22805	2	True				
ANR	23246	Identifier	SUCCESS		22805	0					
ANR	23247	ElseStatement	else		22805	0					
ANR	23248	CompoundStatement		117:8:3808:3808	22805	0					
ANR	23249	ExpressionStatement	"accel_shared_globals = calloc ( 1 , sizeof ( zend_accel_shared_globals ) )"	2716:2:82603:82670	22805	0	True				
ANR	23250	AssignmentExpression	"accel_shared_globals = calloc ( 1 , sizeof ( zend_accel_shared_globals ) )"		22805	0		=			
ANR	23251	Identifier	accel_shared_globals		22805	0					
ANR	23252	CallExpression	"calloc ( 1 , sizeof ( zend_accel_shared_globals ) )"		22805	1					
ANR	23253	Callee	calloc		22805	0					
ANR	23254	Identifier	calloc		22805	0					
ANR	23255	ArgumentList	1		22805	1					
ANR	23256	Argument	1		22805	0					
ANR	23257	PrimaryExpression	1		22805	0					
ANR	23258	Argument	sizeof ( zend_accel_shared_globals )		22805	1					
ANR	23259	SizeofExpression	sizeof ( zend_accel_shared_globals )		22805	0					
ANR	23260	Sizeof	sizeof		22805	0					
ANR	23261	SizeofOperand	zend_accel_shared_globals		22805	1					
ANR	23262	ExpressionStatement	zend_accel_init_auto_globals ( )	2719:2:82708:82738	22805	1	True				
ANR	23263	CallExpression	zend_accel_init_auto_globals ( )		22805	0					
ANR	23264	Callee	zend_accel_init_auto_globals		22805	0					
ANR	23265	Identifier	zend_accel_init_auto_globals		22805	0					
ANR	23266	ArgumentList			22805	1					
ANR	23267	Label	file_cache_fallback :	2723:0:82781:82800	22805	10	True				
ANR	23268	Identifier	file_cache_fallback		22805	0					
ANR	23269	ExpressionStatement	accelerator_orig_compile_file = zend_compile_file	2727:1:82836:82885	22805	11	True				
ANR	23270	AssignmentExpression	accelerator_orig_compile_file = zend_compile_file		22805	0		=			
ANR	23271	Identifier	accelerator_orig_compile_file		22805	0					
ANR	23272	Identifier	zend_compile_file		22805	1					
ANR	23273	ExpressionStatement	zend_compile_file = persistent_compile_file	2728:1:82888:82931	22805	12	True				
ANR	23274	AssignmentExpression	zend_compile_file = persistent_compile_file		22805	0		=			
ANR	23275	Identifier	zend_compile_file		22805	0					
ANR	23276	Identifier	persistent_compile_file		22805	1					
ANR	23277	ExpressionStatement	accelerator_orig_zend_stream_open_function = zend_stream_open_function	2732:1:83043:83113	22805	13	True				
ANR	23278	AssignmentExpression	accelerator_orig_zend_stream_open_function = zend_stream_open_function		22805	0		=			
ANR	23279	Identifier	accelerator_orig_zend_stream_open_function		22805	0					
ANR	23280	Identifier	zend_stream_open_function		22805	1					
ANR	23281	ExpressionStatement	zend_stream_open_function = persistent_stream_open_function	2733:1:83116:83175	22805	14	True				
ANR	23282	AssignmentExpression	zend_stream_open_function = persistent_stream_open_function		22805	0		=			
ANR	23283	Identifier	zend_stream_open_function		22805	0					
ANR	23284	Identifier	persistent_stream_open_function		22805	1					
ANR	23285	ExpressionStatement	accelerator_orig_zend_resolve_path = zend_resolve_path	2737:1:83296:83350	22805	15	True				
ANR	23286	AssignmentExpression	accelerator_orig_zend_resolve_path = zend_resolve_path		22805	0		=			
ANR	23287	Identifier	accelerator_orig_zend_resolve_path		22805	0					
ANR	23288	Identifier	zend_resolve_path		22805	1					
ANR	23289	ExpressionStatement	zend_resolve_path = persistent_zend_resolve_path	2738:1:83353:83401	22805	16	True				
ANR	23290	AssignmentExpression	zend_resolve_path = persistent_zend_resolve_path		22805	0		=			
ANR	23291	Identifier	zend_resolve_path		22805	0					
ANR	23292	Identifier	persistent_zend_resolve_path		22805	1					
ANR	23293	IfStatement	"if ( ( func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 ) ) != NULL && func -> type == ZEND_INTERNAL_FUNCTION )"		22805	17					
ANR	23294	Condition	"( func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 ) ) != NULL && func -> type == ZEND_INTERNAL_FUNCTION"	2741:5:83442:83573	22805	0	True				
ANR	23295	AndExpression	"( func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 ) ) != NULL && func -> type == ZEND_INTERNAL_FUNCTION"		22805	0		&&			
ANR	23296	EqualityExpression	"( func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 ) ) != NULL"		22805	0		!=			
ANR	23297	AssignmentExpression	"func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 )"		22805	0		=			
ANR	23298	Identifier	func		22805	0					
ANR	23299	CallExpression	"zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 )"		22805	1					
ANR	23300	Callee	zend_hash_str_find_ptr		22805	0					
ANR	23301	Identifier	zend_hash_str_find_ptr		22805	0					
ANR	23302	ArgumentList	CG ( function_table )		22805	1					
ANR	23303	Argument	CG ( function_table )		22805	0					
ANR	23304	CallExpression	CG ( function_table )		22805	0					
ANR	23305	Callee	CG		22805	0					
ANR	23306	Identifier	CG		22805	0					
ANR	23307	ArgumentList	function_table		22805	1					
ANR	23308	Argument	function_table		22805	0					
ANR	23309	Identifier	function_table		22805	0					
ANR	23310	Argument	"""chdir"""		22805	1					
ANR	23311	PrimaryExpression	"""chdir"""		22805	0					
ANR	23312	Argument	"sizeof ( ""chdir"" ) - 1"		22805	2					
ANR	23313	AdditiveExpression	"sizeof ( ""chdir"" ) - 1"		22805	0		-			
ANR	23314	SizeofExpression	"sizeof ( ""chdir"" )"		22805	0					
ANR	23315	Sizeof	sizeof		22805	0					
ANR	23316	PrimaryExpression	"""chdir"""		22805	1					
ANR	23317	PrimaryExpression	1		22805	1					
ANR	23318	Identifier	NULL		22805	1					
ANR	23319	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		22805	1		==			
ANR	23320	PtrMemberAccess	func -> type		22805	0					
ANR	23321	Identifier	func		22805	0					
ANR	23322	Identifier	type		22805	1					
ANR	23323	Identifier	ZEND_INTERNAL_FUNCTION		22805	1					
ANR	23324	CompoundStatement		144:43:4785:4785	22805	1					
ANR	23325	ExpressionStatement	orig_chdir = func -> internal_function . handler	2743:2:83580:83624	22805	0	True				
ANR	23326	AssignmentExpression	orig_chdir = func -> internal_function . handler		22805	0		=			
ANR	23327	Identifier	orig_chdir		22805	0					
ANR	23328	MemberAccess	func -> internal_function . handler		22805	1					
ANR	23329	PtrMemberAccess	func -> internal_function		22805	0					
ANR	23330	Identifier	func		22805	0					
ANR	23331	Identifier	internal_function		22805	1					
ANR	23332	Identifier	handler		22805	1					
ANR	23333	ExpressionStatement	func -> internal_function . handler = ZEND_FN ( accel_chdir )	2744:2:83628:83682	22805	1	True				
ANR	23334	AssignmentExpression	func -> internal_function . handler = ZEND_FN ( accel_chdir )		22805	0		=			
ANR	23335	MemberAccess	func -> internal_function . handler		22805	0					
ANR	23336	PtrMemberAccess	func -> internal_function		22805	0					
ANR	23337	Identifier	func		22805	0					
ANR	23338	Identifier	internal_function		22805	1					
ANR	23339	Identifier	handler		22805	1					
ANR	23340	CallExpression	ZEND_FN ( accel_chdir )		22805	1					
ANR	23341	Callee	ZEND_FN		22805	0					
ANR	23342	Identifier	ZEND_FN		22805	0					
ANR	23343	ArgumentList	accel_chdir		22805	1					
ANR	23344	Argument	accel_chdir		22805	0					
ANR	23345	Identifier	accel_chdir		22805	0					
ANR	23346	ExpressionStatement	ZCG ( cwd ) = NULL	2746:1:83688:83703	22805	18	True				
ANR	23347	AssignmentExpression	ZCG ( cwd ) = NULL		22805	0		=			
ANR	23348	CallExpression	ZCG ( cwd )		22805	0					
ANR	23349	Callee	ZCG		22805	0					
ANR	23350	Identifier	ZCG		22805	0					
ANR	23351	ArgumentList	cwd		22805	1					
ANR	23352	Argument	cwd		22805	0					
ANR	23353	Identifier	cwd		22805	0					
ANR	23354	Identifier	NULL		22805	1					
ANR	23355	ExpressionStatement	ZCG ( include_path ) = NULL	2747:1:83706:83730	22805	19	True				
ANR	23356	AssignmentExpression	ZCG ( include_path ) = NULL		22805	0		=			
ANR	23357	CallExpression	ZCG ( include_path )		22805	0					
ANR	23358	Callee	ZCG		22805	0					
ANR	23359	Identifier	ZCG		22805	0					
ANR	23360	ArgumentList	include_path		22805	1					
ANR	23361	Argument	include_path		22805	0					
ANR	23362	Identifier	include_path		22805	0					
ANR	23363	Identifier	NULL		22805	1					
ANR	23364	IfStatement	"if ( ( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL )"		22805	20					
ANR	23365	Condition	"( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL"	2750:5:83787:83892	22805	0	True				
ANR	23366	EqualityExpression	"( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL"		22805	0		!=			
ANR	23367	AssignmentExpression	"ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 )"		22805	0		=			
ANR	23368	Identifier	ini_entry		22805	0					
ANR	23369	CallExpression	"zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 )"		22805	1					
ANR	23370	Callee	zend_hash_str_find_ptr		22805	0					
ANR	23371	Identifier	zend_hash_str_find_ptr		22805	0					
ANR	23372	ArgumentList	EG ( ini_directives )		22805	1					
ANR	23373	Argument	EG ( ini_directives )		22805	0					
ANR	23374	CallExpression	EG ( ini_directives )		22805	0					
ANR	23375	Callee	EG		22805	0					
ANR	23376	Identifier	EG		22805	0					
ANR	23377	ArgumentList	ini_directives		22805	1					
ANR	23378	Argument	ini_directives		22805	0					
ANR	23379	Identifier	ini_directives		22805	0					
ANR	23380	Argument	"""include_path"""		22805	1					
ANR	23381	PrimaryExpression	"""include_path"""		22805	0					
ANR	23382	Argument	"sizeof ( ""include_path"" ) - 1"		22805	2					
ANR	23383	AdditiveExpression	"sizeof ( ""include_path"" ) - 1"		22805	0		-			
ANR	23384	SizeofExpression	"sizeof ( ""include_path"" )"		22805	0					
ANR	23385	Sizeof	sizeof		22805	0					
ANR	23386	PrimaryExpression	"""include_path"""		22805	1					
ANR	23387	PrimaryExpression	1		22805	1					
ANR	23388	Identifier	NULL		22805	1					
ANR	23389	CompoundStatement		152:113:5104:5104	22805	1					
ANR	23390	ExpressionStatement	ZCG ( include_path ) = ini_entry -> value	2751:2:83899:83935	22805	0	True				
ANR	23391	AssignmentExpression	ZCG ( include_path ) = ini_entry -> value		22805	0		=			
ANR	23392	CallExpression	ZCG ( include_path )		22805	0					
ANR	23393	Callee	ZCG		22805	0					
ANR	23394	Identifier	ZCG		22805	0					
ANR	23395	ArgumentList	include_path		22805	1					
ANR	23396	Argument	include_path		22805	0					
ANR	23397	Identifier	include_path		22805	0					
ANR	23398	PtrMemberAccess	ini_entry -> value		22805	1					
ANR	23399	Identifier	ini_entry		22805	0					
ANR	23400	Identifier	value		22805	1					
ANR	23401	ExpressionStatement	orig_include_path_on_modify = ini_entry -> on_modify	2752:2:83939:83989	22805	1	True				
ANR	23402	AssignmentExpression	orig_include_path_on_modify = ini_entry -> on_modify		22805	0		=			
ANR	23403	Identifier	orig_include_path_on_modify		22805	0					
ANR	23404	PtrMemberAccess	ini_entry -> on_modify		22805	1					
ANR	23405	Identifier	ini_entry		22805	0					
ANR	23406	Identifier	on_modify		22805	1					
ANR	23407	ExpressionStatement	ini_entry -> on_modify = accel_include_path_on_modify	2753:2:83993:84044	22805	2	True				
ANR	23408	AssignmentExpression	ini_entry -> on_modify = accel_include_path_on_modify		22805	0		=			
ANR	23409	PtrMemberAccess	ini_entry -> on_modify		22805	0					
ANR	23410	Identifier	ini_entry		22805	0					
ANR	23411	Identifier	on_modify		22805	1					
ANR	23412	Identifier	accel_include_path_on_modify		22805	1					
ANR	23413	ExpressionStatement	accel_startup_ok = 1	2756:1:84051:84071	22805	21	True				
ANR	23414	AssignmentExpression	accel_startup_ok = 1		22805	0		=			
ANR	23415	Identifier	accel_startup_ok		22805	0					
ANR	23416	PrimaryExpression	1		22805	1					
ANR	23417	ExpressionStatement	zend_accel_override_file_functions ( )	2759:1:84134:84170	22805	22	True				
ANR	23418	CallExpression	zend_accel_override_file_functions ( )		22805	0					
ANR	23419	Callee	zend_accel_override_file_functions		22805	0					
ANR	23420	Identifier	zend_accel_override_file_functions		22805	0					
ANR	23421	ArgumentList			22805	1					
ANR	23422	ExpressionStatement	accel_blacklist . entries = NULL	2762:1:84197:84227	22805	23	True				
ANR	23423	AssignmentExpression	accel_blacklist . entries = NULL		22805	0		=			
ANR	23424	MemberAccess	accel_blacklist . entries		22805	0					
ANR	23425	Identifier	accel_blacklist		22805	0					
ANR	23426	Identifier	entries		22805	1					
ANR	23427	Identifier	NULL		22805	1					
ANR	23428	IfStatement	if ( ZCG ( enabled ) && accel_startup_ok && ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename ) )		22805	24					
ANR	23429	Condition	ZCG ( enabled ) && accel_startup_ok && ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename )	2763:5:84234:84374	22805	0	True				
ANR	23430	AndExpression	ZCG ( enabled ) && accel_startup_ok && ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename )		22805	0		&&			
ANR	23431	CallExpression	ZCG ( enabled )		22805	0					
ANR	23432	Callee	ZCG		22805	0					
ANR	23433	Identifier	ZCG		22805	0					
ANR	23434	ArgumentList	enabled		22805	1					
ANR	23435	Argument	enabled		22805	0					
ANR	23436	Identifier	enabled		22805	0					
ANR	23437	AndExpression	accel_startup_ok && ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename )		22805	1		&&			
ANR	23438	Identifier	accel_startup_ok		22805	0					
ANR	23439	AndExpression	ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename )		22805	1		&&			
ANR	23440	MemberAccess	ZCG ( accel_directives ) . user_blacklist_filename		22805	0					
ANR	23441	CallExpression	ZCG ( accel_directives )		22805	0					
ANR	23442	Callee	ZCG		22805	0					
ANR	23443	Identifier	ZCG		22805	0					
ANR	23444	ArgumentList	accel_directives		22805	1					
ANR	23445	Argument	accel_directives		22805	0					
ANR	23446	Identifier	accel_directives		22805	0					
ANR	23447	Identifier	user_blacklist_filename		22805	1					
ANR	23448	UnaryOperationExpression	* ZCG ( accel_directives . user_blacklist_filename )		22805	1					
ANR	23449	UnaryOperator	*		22805	0					
ANR	23450	CallExpression	ZCG ( accel_directives . user_blacklist_filename )		22805	1					
ANR	23451	Callee	ZCG		22805	0					
ANR	23452	Identifier	ZCG		22805	0					
ANR	23453	ArgumentList	accel_directives . user_blacklist_filename		22805	1					
ANR	23454	Argument	accel_directives . user_blacklist_filename		22805	0					
ANR	23455	MemberAccess	accel_directives . user_blacklist_filename		22805	0					
ANR	23456	Identifier	accel_directives		22805	0					
ANR	23457	Identifier	user_blacklist_filename		22805	1					
ANR	23458	CompoundStatement		167:53:5586:5586	22805	1					
ANR	23459	ExpressionStatement	zend_accel_blacklist_init ( & accel_blacklist )	2766:2:84381:84424	22805	0	True				
ANR	23460	CallExpression	zend_accel_blacklist_init ( & accel_blacklist )		22805	0					
ANR	23461	Callee	zend_accel_blacklist_init		22805	0					
ANR	23462	Identifier	zend_accel_blacklist_init		22805	0					
ANR	23463	ArgumentList	& accel_blacklist		22805	1					
ANR	23464	Argument	& accel_blacklist		22805	0					
ANR	23465	UnaryOperationExpression	& accel_blacklist		22805	0					
ANR	23466	UnaryOperator	&		22805	0					
ANR	23467	Identifier	accel_blacklist		22805	1					
ANR	23468	ExpressionStatement	"zend_accel_blacklist_load ( & accel_blacklist , ZCG ( accel_directives . user_blacklist_filename ) )"	2767:2:84428:84518	22805	1	True				
ANR	23469	CallExpression	"zend_accel_blacklist_load ( & accel_blacklist , ZCG ( accel_directives . user_blacklist_filename ) )"		22805	0					
ANR	23470	Callee	zend_accel_blacklist_load		22805	0					
ANR	23471	Identifier	zend_accel_blacklist_load		22805	0					
ANR	23472	ArgumentList	& accel_blacklist		22805	1					
ANR	23473	Argument	& accel_blacklist		22805	0					
ANR	23474	UnaryOperationExpression	& accel_blacklist		22805	0					
ANR	23475	UnaryOperator	&		22805	0					
ANR	23476	Identifier	accel_blacklist		22805	1					
ANR	23477	Argument	ZCG ( accel_directives . user_blacklist_filename )		22805	1					
ANR	23478	CallExpression	ZCG ( accel_directives . user_blacklist_filename )		22805	0					
ANR	23479	Callee	ZCG		22805	0					
ANR	23480	Identifier	ZCG		22805	0					
ANR	23481	ArgumentList	accel_directives . user_blacklist_filename		22805	1					
ANR	23482	Argument	accel_directives . user_blacklist_filename		22805	0					
ANR	23483	MemberAccess	accel_directives . user_blacklist_filename		22805	0					
ANR	23484	Identifier	accel_directives		22805	0					
ANR	23485	Identifier	user_blacklist_filename		22805	1					
ANR	23486	ReturnStatement	return SUCCESS ;	2770:1:84525:84539	22805	25	True				
ANR	23487	Identifier	SUCCESS		22805	0					
ANR	23488	ReturnType	static int		22805	1					
ANR	23489	Identifier	accel_startup		22805	2					
ANR	23490	ParameterList	zend_extension * extension		22805	3					
ANR	23491	Parameter	zend_extension * extension	2598:25:78763:78787	22805	0	True				
ANR	23492	ParameterType	zend_extension *		22805	0					
ANR	23493	Identifier	extension		22805	1					
ANR	23494	CFGEntryNode	ENTRY		22805		True				
ANR	23495	CFGExitNode	EXIT		22805		True				
ANR	23496	Symbol	accel_globals_ctor		22805						
ANR	23497	Symbol	accel_globals_id		22805						
ANR	23498	Symbol	ACCEL_LOG_FATAL		22805						
ANR	23499	Symbol	orig_chdir		22805						
ANR	23500	Symbol	zend_resolve_path		22805						
ANR	23501	Symbol	orig_interned_strings_snapshot		22805						
ANR	23502	Symbol	accelerator_orig_zend_resolve_path		22805						
ANR	23503	Symbol	ts_allocate_id		22805						
ANR	23504	Symbol	ZEND_INTERNAL_FUNCTION		22805						
ANR	23505	Symbol	ZCSG		22805						
ANR	23506	Symbol	zend_interned_strings_restore		22805						
ANR	23507	Symbol	accel_shared_globals		22805						
ANR	23508	Symbol	* ZCG		22805						
ANR	23509	Symbol	start_accel_module		22805						
ANR	23510	Symbol	ZCG ( accel_directives ) . enable_cli		22805						
ANR	23511	Symbol	func -> internal_function		22805						
ANR	23512	Symbol	strcmp		22805						
ANR	23513	Symbol	accel_globals_dtor		22805						
ANR	23514	Symbol	EG		22805						
ANR	23515	Symbol	NULL		22805						
ANR	23516	Symbol	ini_entry -> on_modify		22805						
ANR	23517	Symbol	zend_interned_strings_snapshot		22805						
ANR	23518	Symbol	accel_blacklist . entries		22805						
ANR	23519	Symbol	accel_new_interned_string_for_php		22805						
ANR	23520	Symbol	accel_directives . user_blacklist_filename		22805						
ANR	23521	Symbol	orig_new_interned_string		22805						
ANR	23522	Symbol	accel_interned_strings_snapshot_for_php		22805						
ANR	23523	Symbol	* ini_entry		22805						
ANR	23524	Symbol	persistent_stream_open_function		22805						
ANR	23525	Symbol	func -> internal_function . handler		22805						
ANR	23526	Symbol	last_restart_time		22805						
ANR	23527	Symbol	zend_compile_file		22805						
ANR	23528	Symbol	ZCG ( accel_directives ) . file_cache_only		22805						
ANR	23529	Symbol	function_table		22805						
ANR	23530	Symbol	ZEND_FN		22805						
ANR	23531	Symbol	ZCG ( accel_directives ) . file_cache		22805						
ANR	23532	Symbol	ZCG		22805						
ANR	23533	Symbol	accel_startup_ok		22805						
ANR	23534	Symbol	& accel_blacklist		22805						
ANR	23535	Symbol	extension		22805						
ANR	23536	Symbol	zend_shared_alloc_startup		22805						
ANR	23537	Symbol	ZCG ( accel_directives ) . user_blacklist_filename		22805						
ANR	23538	Symbol	calloc		22805						
ANR	23539	Symbol	accelerator_orig_compile_file		22805						
ANR	23540	Symbol	accel_chdir		22805						
ANR	23541	Symbol	enabled		22805						
ANR	23542	Symbol	accelerator_orig_zend_stream_open_function		22805						
ANR	23543	Symbol	include_path		22805						
ANR	23544	Symbol	sapi_module . name		22805						
ANR	23545	Symbol	ZSMMG		22805						
ANR	23546	Symbol	zend_stream_open_function		22805						
ANR	23547	Symbol	ZCG ( accel_directives ) . memory_consumption		22805						
ANR	23548	Symbol	zend_hash_str_find_ptr		22805						
ANR	23549	Symbol	persistent_zend_resolve_path		22805						
ANR	23550	Symbol	func -> type		22805						
ANR	23551	Symbol	& accel_globals_id		22805						
ANR	23552	Symbol	accel_blacklist		22805						
ANR	23553	Symbol	orig_interned_strings_restore		22805						
ANR	23554	Symbol	persistent_compile_file		22805						
ANR	23555	Symbol	ini_directives		22805						
ANR	23556	Symbol	app_shared_globals		22805						
ANR	23557	Symbol	SUCCESS		22805						
ANR	23558	Symbol	CG		22805						
ANR	23559	Symbol	* func		22805						
ANR	23560	Symbol	accel_interned_strings_restore_for_php		22805						
ANR	23561	Symbol	FAILURE		22805						
ANR	23562	Symbol	accel_include_path_on_modify		22805						
ANR	23563	Symbol	cwd		22805						
ANR	23564	Symbol	ini_entry -> value		22805						
ANR	23565	Symbol	fallback_process		22805						
ANR	23566	Symbol	sapi_module		22805						
ANR	23567	Symbol	zend_accel_init_shm		22805						
ANR	23568	Symbol	zend_new_interned_string		22805						
ANR	23569	Symbol	func		22805						
ANR	23570	Symbol	ini_entry		22805						
ANR	23571	Symbol	ZCG ( accel_directives ) . huge_code_pages		22805						
ANR	23572	Symbol	accelerator_remove_cb		22805						
ANR	23573	Symbol	orig_include_path_on_modify		22805						
ANR	23574	Symbol	accel_directives		22805						
ANR	23575	Symbol	* ZCG ( accel_directives . user_blacklist_filename )		22805						
ANR	23576	Symbol	accel_find_sapi		22805						
ANR	23577	Function	accel_free_ts_resources	2773:0:84544:84677							
ANR	23578	FunctionDef	accel_free_ts_resources ()		23577	0					
ANR	23579	CompoundStatement		2774:0:84582:84677	23577	0					
ANR	23580	ExpressionStatement	accel_globals_dtor ( & accel_globals )	2776:1:84597:84631	23577	0	True				
ANR	23581	CallExpression	accel_globals_dtor ( & accel_globals )		23577	0					
ANR	23582	Callee	accel_globals_dtor		23577	0					
ANR	23583	Identifier	accel_globals_dtor		23577	0					
ANR	23584	ArgumentList	& accel_globals		23577	1					
ANR	23585	Argument	& accel_globals		23577	0					
ANR	23586	UnaryOperationExpression	& accel_globals		23577	0					
ANR	23587	UnaryOperator	&		23577	0					
ANR	23588	Identifier	accel_globals		23577	1					
ANR	23589	ReturnType	static void		23577	1					
ANR	23590	Identifier	accel_free_ts_resources		23577	2					
ANR	23591	ParameterList			23577	3					
ANR	23592	CFGEntryNode	ENTRY		23577		True				
ANR	23593	CFGExitNode	EXIT		23577		True				
ANR	23594	Symbol	& accel_globals		23577						
ANR	23595	Function	accel_shutdown	2782:0:84680:85758							
ANR	23596	FunctionDef	accel_shutdown ()		23595	0					
ANR	23597	CompoundStatement		2783:0:84706:85758	23595	0					
ANR	23598	IdentifierDeclStatement	zend_ini_entry * ini_entry ;	2784:1:84709:84734	23595	0	True				
ANR	23599	IdentifierDecl	* ini_entry		23595	0					
ANR	23600	IdentifierDeclType	zend_ini_entry *		23595	0					
ANR	23601	Identifier	ini_entry		23595	1					
ANR	23602	IdentifierDeclStatement	zend_bool file_cache_only = 0 ;	2785:1:84737:84766	23595	1	True				
ANR	23603	IdentifierDecl	file_cache_only = 0		23595	0					
ANR	23604	IdentifierDeclType	zend_bool		23595	0					
ANR	23605	Identifier	file_cache_only		23595	1					
ANR	23606	AssignmentExpression	file_cache_only = 0		23595	2		=			
ANR	23607	Identifier	file_cache_only		23595	0					
ANR	23608	PrimaryExpression	0		23595	1					
ANR	23609	ExpressionStatement	zend_accel_blacklist_shutdown ( & accel_blacklist )	2787:1:84770:84817	23595	2	True				
ANR	23610	CallExpression	zend_accel_blacklist_shutdown ( & accel_blacklist )		23595	0					
ANR	23611	Callee	zend_accel_blacklist_shutdown		23595	0					
ANR	23612	Identifier	zend_accel_blacklist_shutdown		23595	0					
ANR	23613	ArgumentList	& accel_blacklist		23595	1					
ANR	23614	Argument	& accel_blacklist		23595	0					
ANR	23615	UnaryOperationExpression	& accel_blacklist		23595	0					
ANR	23616	UnaryOperator	&		23595	0					
ANR	23617	Identifier	accel_blacklist		23595	1					
ANR	23618	IfStatement	if ( ! ZCG ( enabled ) || ! accel_startup_ok )		23595	3					
ANR	23619	Condition	! ZCG ( enabled ) || ! accel_startup_ok	2789:5:84825:84858	23595	0	True				
ANR	23620	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok		23595	0		||			
ANR	23621	UnaryOperationExpression	! ZCG ( enabled )		23595	0					
ANR	23622	UnaryOperator	!		23595	0					
ANR	23623	CallExpression	ZCG ( enabled )		23595	1					
ANR	23624	Callee	ZCG		23595	0					
ANR	23625	Identifier	ZCG		23595	0					
ANR	23626	ArgumentList	enabled		23595	1					
ANR	23627	Argument	enabled		23595	0					
ANR	23628	Identifier	enabled		23595	0					
ANR	23629	UnaryOperationExpression	! accel_startup_ok		23595	1					
ANR	23630	UnaryOperator	!		23595	0					
ANR	23631	Identifier	accel_startup_ok		23595	1					
ANR	23632	CompoundStatement		7:41:154:154	23595	1					
ANR	23633	ExpressionStatement	accel_free_ts_resources ( )	2790:2:84865:84890	23595	0	True				
ANR	23634	CallExpression	accel_free_ts_resources ( )		23595	0					
ANR	23635	Callee	accel_free_ts_resources		23595	0					
ANR	23636	Identifier	accel_free_ts_resources		23595	0					
ANR	23637	ArgumentList			23595	1					
ANR	23638	ReturnStatement	return ;	2791:2:84894:84900	23595	1	True				
ANR	23639	IfStatement	if ( ZCG ( accel_directives ) . interned_strings_buffer )		23595	4					
ANR	23640	Condition	ZCG ( accel_directives ) . interned_strings_buffer	2794:5:84911:84955	23595	0	True				
ANR	23641	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		23595	0					
ANR	23642	CallExpression	ZCG ( accel_directives )		23595	0					
ANR	23643	Callee	ZCG		23595	0					
ANR	23644	Identifier	ZCG		23595	0					
ANR	23645	ArgumentList	accel_directives		23595	1					
ANR	23646	Argument	accel_directives		23595	0					
ANR	23647	Identifier	accel_directives		23595	0					
ANR	23648	Identifier	interned_strings_buffer		23595	1					
ANR	23649	CompoundStatement		12:52:251:251	23595	1					
ANR	23650	ExpressionStatement	zend_hash_clean ( CG ( auto_globals ) )	2796:2:84974:85007	23595	0	True				
ANR	23651	CallExpression	zend_hash_clean ( CG ( auto_globals ) )		23595	0					
ANR	23652	Callee	zend_hash_clean		23595	0					
ANR	23653	Identifier	zend_hash_clean		23595	0					
ANR	23654	ArgumentList	CG ( auto_globals )		23595	1					
ANR	23655	Argument	CG ( auto_globals )		23595	0					
ANR	23656	CallExpression	CG ( auto_globals )		23595	0					
ANR	23657	Callee	CG		23595	0					
ANR	23658	Identifier	CG		23595	0					
ANR	23659	ArgumentList	auto_globals		23595	1					
ANR	23660	Argument	auto_globals		23595	0					
ANR	23661	Identifier	auto_globals		23595	0					
ANR	23662	ExpressionStatement	zend_hash_clean ( CG ( function_table ) )	2797:2:85011:85046	23595	1	True				
ANR	23663	CallExpression	zend_hash_clean ( CG ( function_table ) )		23595	0					
ANR	23664	Callee	zend_hash_clean		23595	0					
ANR	23665	Identifier	zend_hash_clean		23595	0					
ANR	23666	ArgumentList	CG ( function_table )		23595	1					
ANR	23667	Argument	CG ( function_table )		23595	0					
ANR	23668	CallExpression	CG ( function_table )		23595	0					
ANR	23669	Callee	CG		23595	0					
ANR	23670	Identifier	CG		23595	0					
ANR	23671	ArgumentList	function_table		23595	1					
ANR	23672	Argument	function_table		23595	0					
ANR	23673	Identifier	function_table		23595	0					
ANR	23674	ExpressionStatement	zend_hash_clean ( CG ( class_table ) )	2798:2:85050:85082	23595	2	True				
ANR	23675	CallExpression	zend_hash_clean ( CG ( class_table ) )		23595	0					
ANR	23676	Callee	zend_hash_clean		23595	0					
ANR	23677	Identifier	zend_hash_clean		23595	0					
ANR	23678	ArgumentList	CG ( class_table )		23595	1					
ANR	23679	Argument	CG ( class_table )		23595	0					
ANR	23680	CallExpression	CG ( class_table )		23595	0					
ANR	23681	Callee	CG		23595	0					
ANR	23682	Identifier	CG		23595	0					
ANR	23683	ArgumentList	class_table		23595	1					
ANR	23684	Argument	class_table		23595	0					
ANR	23685	Identifier	class_table		23595	0					
ANR	23686	ExpressionStatement	zend_hash_clean ( EG ( zend_constants ) )	2799:2:85086:85121	23595	3	True				
ANR	23687	CallExpression	zend_hash_clean ( EG ( zend_constants ) )		23595	0					
ANR	23688	Callee	zend_hash_clean		23595	0					
ANR	23689	Identifier	zend_hash_clean		23595	0					
ANR	23690	ArgumentList	EG ( zend_constants )		23595	1					
ANR	23691	Argument	EG ( zend_constants )		23595	0					
ANR	23692	CallExpression	EG ( zend_constants )		23595	0					
ANR	23693	Callee	EG		23595	0					
ANR	23694	Identifier	EG		23595	0					
ANR	23695	ArgumentList	zend_constants		23595	1					
ANR	23696	Argument	zend_constants		23595	0					
ANR	23697	Identifier	zend_constants		23595	0					
ANR	23698	ExpressionStatement	accel_reset_pcre_cache ( )	2803:1:85135:85159	23595	5	True				
ANR	23699	CallExpression	accel_reset_pcre_cache ( )		23595	0					
ANR	23700	Callee	accel_reset_pcre_cache		23595	0					
ANR	23701	Identifier	accel_reset_pcre_cache		23595	0					
ANR	23702	ArgumentList			23595	1					
ANR	23703	ExpressionStatement	zend_new_interned_string = orig_new_interned_string	2805:1:85163:85214	23595	6	True				
ANR	23704	AssignmentExpression	zend_new_interned_string = orig_new_interned_string		23595	0		=			
ANR	23705	Identifier	zend_new_interned_string		23595	0					
ANR	23706	Identifier	orig_new_interned_string		23595	1					
ANR	23707	ExpressionStatement	zend_interned_strings_snapshot = orig_interned_strings_snapshot	2806:1:85217:85280	23595	7	True				
ANR	23708	AssignmentExpression	zend_interned_strings_snapshot = orig_interned_strings_snapshot		23595	0		=			
ANR	23709	Identifier	zend_interned_strings_snapshot		23595	0					
ANR	23710	Identifier	orig_interned_strings_snapshot		23595	1					
ANR	23711	ExpressionStatement	zend_interned_strings_restore = orig_interned_strings_restore	2807:1:85283:85344	23595	8	True				
ANR	23712	AssignmentExpression	zend_interned_strings_restore = orig_interned_strings_restore		23595	0		=			
ANR	23713	Identifier	zend_interned_strings_restore		23595	0					
ANR	23714	Identifier	orig_interned_strings_restore		23595	1					
ANR	23715	ExpressionStatement	file_cache_only = ZCG ( accel_directives ) . file_cache_only	2810:1:85379:85434	23595	9	True				
ANR	23716	AssignmentExpression	file_cache_only = ZCG ( accel_directives ) . file_cache_only		23595	0		=			
ANR	23717	Identifier	file_cache_only		23595	0					
ANR	23718	MemberAccess	ZCG ( accel_directives ) . file_cache_only		23595	1					
ANR	23719	CallExpression	ZCG ( accel_directives )		23595	0					
ANR	23720	Callee	ZCG		23595	0					
ANR	23721	Identifier	ZCG		23595	0					
ANR	23722	ArgumentList	accel_directives		23595	1					
ANR	23723	Argument	accel_directives		23595	0					
ANR	23724	Identifier	accel_directives		23595	0					
ANR	23725	Identifier	file_cache_only		23595	1					
ANR	23726	ExpressionStatement	accel_free_ts_resources ( )	2813:1:85445:85470	23595	10	True				
ANR	23727	CallExpression	accel_free_ts_resources ( )		23595	0					
ANR	23728	Callee	accel_free_ts_resources		23595	0					
ANR	23729	Identifier	accel_free_ts_resources		23595	0					
ANR	23730	ArgumentList			23595	1					
ANR	23731	IfStatement	if ( ! file_cache_only )		23595	11					
ANR	23732	Condition	! file_cache_only	2815:5:85478:85493	23595	0	True				
ANR	23733	UnaryOperationExpression	! file_cache_only		23595	0					
ANR	23734	UnaryOperator	!		23595	0					
ANR	23735	Identifier	file_cache_only		23595	1					
ANR	23736	CompoundStatement		33:23:789:789	23595	1					
ANR	23737	ExpressionStatement	zend_shared_alloc_shutdown ( )	2816:2:85500:85528	23595	0	True				
ANR	23738	CallExpression	zend_shared_alloc_shutdown ( )		23595	0					
ANR	23739	Callee	zend_shared_alloc_shutdown		23595	0					
ANR	23740	Identifier	zend_shared_alloc_shutdown		23595	0					
ANR	23741	ArgumentList			23595	1					
ANR	23742	ExpressionStatement	zend_compile_file = accelerator_orig_compile_file	2818:1:85534:85583	23595	12	True				
ANR	23743	AssignmentExpression	zend_compile_file = accelerator_orig_compile_file		23595	0		=			
ANR	23744	Identifier	zend_compile_file		23595	0					
ANR	23745	Identifier	accelerator_orig_compile_file		23595	1					
ANR	23746	IfStatement	"if ( ( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL )"		23595	13					
ANR	23747	Condition	"( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL"	2820:5:85591:85696	23595	0	True				
ANR	23748	EqualityExpression	"( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL"		23595	0		!=			
ANR	23749	AssignmentExpression	"ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 )"		23595	0		=			
ANR	23750	Identifier	ini_entry		23595	0					
ANR	23751	CallExpression	"zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 )"		23595	1					
ANR	23752	Callee	zend_hash_str_find_ptr		23595	0					
ANR	23753	Identifier	zend_hash_str_find_ptr		23595	0					
ANR	23754	ArgumentList	EG ( ini_directives )		23595	1					
ANR	23755	Argument	EG ( ini_directives )		23595	0					
ANR	23756	CallExpression	EG ( ini_directives )		23595	0					
ANR	23757	Callee	EG		23595	0					
ANR	23758	Identifier	EG		23595	0					
ANR	23759	ArgumentList	ini_directives		23595	1					
ANR	23760	Argument	ini_directives		23595	0					
ANR	23761	Identifier	ini_directives		23595	0					
ANR	23762	Argument	"""include_path"""		23595	1					
ANR	23763	PrimaryExpression	"""include_path"""		23595	0					
ANR	23764	Argument	"sizeof ( ""include_path"" ) - 1"		23595	2					
ANR	23765	AdditiveExpression	"sizeof ( ""include_path"" ) - 1"		23595	0		-			
ANR	23766	SizeofExpression	"sizeof ( ""include_path"" )"		23595	0					
ANR	23767	Sizeof	sizeof		23595	0					
ANR	23768	PrimaryExpression	"""include_path"""		23595	1					
ANR	23769	PrimaryExpression	1		23595	1					
ANR	23770	Identifier	NULL		23595	1					
ANR	23771	CompoundStatement		38:113:992:992	23595	1					
ANR	23772	ExpressionStatement	ini_entry -> on_modify = orig_include_path_on_modify	2821:2:85703:85753	23595	0	True				
ANR	23773	AssignmentExpression	ini_entry -> on_modify = orig_include_path_on_modify		23595	0		=			
ANR	23774	PtrMemberAccess	ini_entry -> on_modify		23595	0					
ANR	23775	Identifier	ini_entry		23595	0					
ANR	23776	Identifier	on_modify		23595	1					
ANR	23777	Identifier	orig_include_path_on_modify		23595	1					
ANR	23778	ReturnType	void		23595	1					
ANR	23779	Identifier	accel_shutdown		23595	2					
ANR	23780	ParameterList			23595	3					
ANR	23781	CFGEntryNode	ENTRY		23595		True				
ANR	23782	CFGExitNode	EXIT		23595		True				
ANR	23783	Symbol	accel_startup_ok		23595						
ANR	23784	Symbol	& accel_blacklist		23595						
ANR	23785	Symbol	orig_interned_strings_snapshot		23595						
ANR	23786	Symbol	accelerator_orig_compile_file		23595						
ANR	23787	Symbol	enabled		23595						
ANR	23788	Symbol	zend_constants		23595						
ANR	23789	Symbol	zend_interned_strings_restore		23595						
ANR	23790	Symbol	zend_hash_str_find_ptr		23595						
ANR	23791	Symbol	class_table		23595						
ANR	23792	Symbol	orig_interned_strings_restore		23595						
ANR	23793	Symbol	ini_directives		23595						
ANR	23794	Symbol	EG		23595						
ANR	23795	Symbol	NULL		23595						
ANR	23796	Symbol	CG		23595						
ANR	23797	Symbol	ini_entry -> on_modify		23595						
ANR	23798	Symbol	zend_interned_strings_snapshot		23595						
ANR	23799	Symbol	auto_globals		23595						
ANR	23800	Symbol	orig_new_interned_string		23595						
ANR	23801	Symbol	* ini_entry		23595						
ANR	23802	Symbol	zend_new_interned_string		23595						
ANR	23803	Symbol	file_cache_only		23595						
ANR	23804	Symbol	ini_entry		23595						
ANR	23805	Symbol	ZCG ( accel_directives ) . interned_strings_buffer		23595						
ANR	23806	Symbol	zend_compile_file		23595						
ANR	23807	Symbol	orig_include_path_on_modify		23595						
ANR	23808	Symbol	function_table		23595						
ANR	23809	Symbol	ZCG ( accel_directives ) . file_cache_only		23595						
ANR	23810	Symbol	accel_directives		23595						
ANR	23811	Symbol	ZCG		23595						
ANR	23812	Function	zend_accel_schedule_restart	2825:0:85761:86347							
ANR	23813	FunctionDef	zend_accel_schedule_restart (zend_accel_restart_reason reason)		23812	0					
ANR	23814	CompoundStatement		2826:0:85828:86347	23812	0					
ANR	23815	IfStatement	if ( ZCSG ( restart_pending ) )		23812	0					
ANR	23816	Condition	ZCSG ( restart_pending )	2827:5:85835:85855	23812	0	True				
ANR	23817	CallExpression	ZCSG ( restart_pending )		23812	0					
ANR	23818	Callee	ZCSG		23812	0					
ANR	23819	Identifier	ZCSG		23812	0					
ANR	23820	ArgumentList	restart_pending		23812	1					
ANR	23821	Argument	restart_pending		23812	0					
ANR	23822	Identifier	restart_pending		23812	0					
ANR	23823	CompoundStatement		2:28:29:29	23812	1					
ANR	23824	ReturnStatement	return ;	2829:2:85891:85897	23812	0	True				
ANR	23825	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""Restart Scheduled!"" )"	2831:1:85903:85958	23812	1	True				
ANR	23826	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""Restart Scheduled!"" )"		23812	0					
ANR	23827	Callee	zend_accel_error		23812	0					
ANR	23828	Identifier	zend_accel_error		23812	0					
ANR	23829	ArgumentList	ACCEL_LOG_DEBUG		23812	1					
ANR	23830	Argument	ACCEL_LOG_DEBUG		23812	0					
ANR	23831	Identifier	ACCEL_LOG_DEBUG		23812	0					
ANR	23832	Argument	"""Restart Scheduled!"""		23812	1					
ANR	23833	PrimaryExpression	"""Restart Scheduled!"""		23812	0					
ANR	23834	ExpressionStatement	SHM_UNPROTECT ( )	2833:1:85962:85977	23812	2	True				
ANR	23835	CallExpression	SHM_UNPROTECT ( )		23812	0					
ANR	23836	Callee	SHM_UNPROTECT		23812	0					
ANR	23837	Identifier	SHM_UNPROTECT		23812	0					
ANR	23838	ArgumentList			23812	1					
ANR	23839	ExpressionStatement	ZCSG ( restart_pending ) = 1	2834:1:85980:86005	23812	3	True				
ANR	23840	AssignmentExpression	ZCSG ( restart_pending ) = 1		23812	0		=			
ANR	23841	CallExpression	ZCSG ( restart_pending )		23812	0					
ANR	23842	Callee	ZCSG		23812	0					
ANR	23843	Identifier	ZCSG		23812	0					
ANR	23844	ArgumentList	restart_pending		23812	1					
ANR	23845	Argument	restart_pending		23812	0					
ANR	23846	Identifier	restart_pending		23812	0					
ANR	23847	PrimaryExpression	1		23812	1					
ANR	23848	ExpressionStatement	ZCSG ( restart_reason ) = reason	2835:1:86008:86037	23812	4	True				
ANR	23849	AssignmentExpression	ZCSG ( restart_reason ) = reason		23812	0		=			
ANR	23850	CallExpression	ZCSG ( restart_reason )		23812	0					
ANR	23851	Callee	ZCSG		23812	0					
ANR	23852	Identifier	ZCSG		23812	0					
ANR	23853	ArgumentList	restart_reason		23812	1					
ANR	23854	Argument	restart_reason		23812	0					
ANR	23855	Identifier	restart_reason		23812	0					
ANR	23856	Identifier	reason		23812	1					
ANR	23857	ExpressionStatement	ZCSG ( cache_status_before_restart ) = ZCSG ( accelerator_enabled )	2836:1:86040:86101	23812	5	True				
ANR	23858	AssignmentExpression	ZCSG ( cache_status_before_restart ) = ZCSG ( accelerator_enabled )		23812	0		=			
ANR	23859	CallExpression	ZCSG ( cache_status_before_restart )		23812	0					
ANR	23860	Callee	ZCSG		23812	0					
ANR	23861	Identifier	ZCSG		23812	0					
ANR	23862	ArgumentList	cache_status_before_restart		23812	1					
ANR	23863	Argument	cache_status_before_restart		23812	0					
ANR	23864	Identifier	cache_status_before_restart		23812	0					
ANR	23865	CallExpression	ZCSG ( accelerator_enabled )		23812	1					
ANR	23866	Callee	ZCSG		23812	0					
ANR	23867	Identifier	ZCSG		23812	0					
ANR	23868	ArgumentList	accelerator_enabled		23812	1					
ANR	23869	Argument	accelerator_enabled		23812	0					
ANR	23870	Identifier	accelerator_enabled		23812	0					
ANR	23871	ExpressionStatement	ZCSG ( accelerator_enabled ) = 0	2837:1:86104:86133	23812	6	True				
ANR	23872	AssignmentExpression	ZCSG ( accelerator_enabled ) = 0		23812	0		=			
ANR	23873	CallExpression	ZCSG ( accelerator_enabled )		23812	0					
ANR	23874	Callee	ZCSG		23812	0					
ANR	23875	Identifier	ZCSG		23812	0					
ANR	23876	ArgumentList	accelerator_enabled		23812	1					
ANR	23877	Argument	accelerator_enabled		23812	0					
ANR	23878	Identifier	accelerator_enabled		23812	0					
ANR	23879	PrimaryExpression	0		23812	1					
ANR	23880	IfStatement	if ( ZCG ( accel_directives ) . force_restart_timeout )		23812	7					
ANR	23881	Condition	ZCG ( accel_directives ) . force_restart_timeout	2839:5:86141:86183	23812	0	True				
ANR	23882	MemberAccess	ZCG ( accel_directives ) . force_restart_timeout		23812	0					
ANR	23883	CallExpression	ZCG ( accel_directives )		23812	0					
ANR	23884	Callee	ZCG		23812	0					
ANR	23885	Identifier	ZCG		23812	0					
ANR	23886	ArgumentList	accel_directives		23812	1					
ANR	23887	Argument	accel_directives		23812	0					
ANR	23888	Identifier	accel_directives		23812	0					
ANR	23889	Identifier	force_restart_timeout		23812	1					
ANR	23890	CompoundStatement		14:50:357:357	23812	1					
ANR	23891	ExpressionStatement	ZCSG ( force_restart_time ) = zend_accel_get_time ( ) + ZCG ( accel_directives ) . force_restart_timeout	2840:2:86190:86284	23812	0	True				
ANR	23892	AssignmentExpression	ZCSG ( force_restart_time ) = zend_accel_get_time ( ) + ZCG ( accel_directives ) . force_restart_timeout		23812	0		=			
ANR	23893	CallExpression	ZCSG ( force_restart_time )		23812	0					
ANR	23894	Callee	ZCSG		23812	0					
ANR	23895	Identifier	ZCSG		23812	0					
ANR	23896	ArgumentList	force_restart_time		23812	1					
ANR	23897	Argument	force_restart_time		23812	0					
ANR	23898	Identifier	force_restart_time		23812	0					
ANR	23899	AdditiveExpression	zend_accel_get_time ( ) + ZCG ( accel_directives ) . force_restart_timeout		23812	1		+			
ANR	23900	CallExpression	zend_accel_get_time ( )		23812	0					
ANR	23901	Callee	zend_accel_get_time		23812	0					
ANR	23902	Identifier	zend_accel_get_time		23812	0					
ANR	23903	ArgumentList			23812	1					
ANR	23904	MemberAccess	ZCG ( accel_directives ) . force_restart_timeout		23812	1					
ANR	23905	CallExpression	ZCG ( accel_directives )		23812	0					
ANR	23906	Callee	ZCG		23812	0					
ANR	23907	Identifier	ZCG		23812	0					
ANR	23908	ArgumentList	accel_directives		23812	1					
ANR	23909	Argument	accel_directives		23812	0					
ANR	23910	Identifier	accel_directives		23812	0					
ANR	23911	Identifier	force_restart_timeout		23812	1					
ANR	23912	ElseStatement	else		23812	0					
ANR	23913	CompoundStatement		16:8:465:465	23812	0					
ANR	23914	ExpressionStatement	ZCSG ( force_restart_time ) = 0	2842:2:86298:86326	23812	0	True				
ANR	23915	AssignmentExpression	ZCSG ( force_restart_time ) = 0		23812	0		=			
ANR	23916	CallExpression	ZCSG ( force_restart_time )		23812	0					
ANR	23917	Callee	ZCSG		23812	0					
ANR	23918	Identifier	ZCSG		23812	0					
ANR	23919	ArgumentList	force_restart_time		23812	1					
ANR	23920	Argument	force_restart_time		23812	0					
ANR	23921	Identifier	force_restart_time		23812	0					
ANR	23922	PrimaryExpression	0		23812	1					
ANR	23923	ExpressionStatement	SHM_PROTECT ( )	2844:1:86332:86345	23812	8	True				
ANR	23924	CallExpression	SHM_PROTECT ( )		23812	0					
ANR	23925	Callee	SHM_PROTECT		23812	0					
ANR	23926	Identifier	SHM_PROTECT		23812	0					
ANR	23927	ArgumentList			23812	1					
ANR	23928	ReturnType	void		23812	1					
ANR	23929	Identifier	zend_accel_schedule_restart		23812	2					
ANR	23930	ParameterList	zend_accel_restart_reason reason		23812	3					
ANR	23931	Parameter	zend_accel_restart_reason reason	2825:33:85794:85825	23812	0	True				
ANR	23932	ParameterType	zend_accel_restart_reason		23812	0					
ANR	23933	Identifier	reason		23812	1					
ANR	23934	CFGEntryNode	ENTRY		23812		True				
ANR	23935	CFGExitNode	EXIT		23812		True				
ANR	23936	Symbol	reason		23812						
ANR	23937	Symbol	zend_accel_get_time		23812						
ANR	23938	Symbol	ZCSG		23812						
ANR	23939	Symbol	ACCEL_LOG_DEBUG		23812						
ANR	23940	Symbol	restart_pending		23812						
ANR	23941	Symbol	cache_status_before_restart		23812						
ANR	23942	Symbol	ZCG ( accel_directives ) . force_restart_timeout		23812						
ANR	23943	Symbol	force_restart_time		23812						
ANR	23944	Symbol	restart_reason		23812						
ANR	23945	Symbol	accel_directives		23812						
ANR	23946	Symbol	accelerator_enabled		23812						
ANR	23947	Symbol	ZCG		23812						
ANR	23948	Function	accelerator_shm_read_lock	2859:0:86773:87416							
ANR	23949	FunctionDef	accelerator_shm_read_lock ()		23948	0					
ANR	23950	CompoundStatement		2860:0:86809:87416	23948	0					
ANR	23951	IfStatement	if ( ZCG ( counted ) )		23948	0					
ANR	23952	Condition	ZCG ( counted )	2861:5:86816:86827	23948	0	True				
ANR	23953	CallExpression	ZCG ( counted )		23948	0					
ANR	23954	Callee	ZCG		23948	0					
ANR	23955	Identifier	ZCG		23948	0					
ANR	23956	ArgumentList	counted		23948	1					
ANR	23957	Argument	counted		23948	0					
ANR	23958	Identifier	counted		23948	0					
ANR	23959	CompoundStatement		2:19:20:20	23948	1					
ANR	23960	ReturnStatement	return SUCCESS ;	2863:2:86921:86935	23948	0	True				
ANR	23961	Identifier	SUCCESS		23948	0					
ANR	23962	ElseStatement	else		23948	0					
ANR	23963	CompoundStatement		5:8:135:135	23948	0					
ANR	23964	ExpressionStatement	accel_activate_add ( )	2867:2:87071:87091	23948	0	True				
ANR	23965	CallExpression	accel_activate_add ( )		23948	0					
ANR	23966	Callee	accel_activate_add		23948	0					
ANR	23967	Identifier	accel_activate_add		23948	0					
ANR	23968	ArgumentList			23948	1					
ANR	23969	IfStatement	if ( ZCSG ( restart_in_progress ) )		23948	1					
ANR	23970	Condition	ZCSG ( restart_in_progress )	2869:6:87217:87241	23948	0	True				
ANR	23971	CallExpression	ZCSG ( restart_in_progress )		23948	0					
ANR	23972	Callee	ZCSG		23948	0					
ANR	23973	Identifier	ZCSG		23948	0					
ANR	23974	ArgumentList	restart_in_progress		23948	1					
ANR	23975	Argument	restart_in_progress		23948	0					
ANR	23976	Identifier	restart_in_progress		23948	0					
ANR	23977	CompoundStatement		10:33:434:434	23948	1					
ANR	23978	ExpressionStatement	accel_deactivate_now ( )	2871:3:87327:87349	23948	0	True				
ANR	23979	CallExpression	accel_deactivate_now ( )		23948	0					
ANR	23980	Callee	accel_deactivate_now		23948	0					
ANR	23981	Identifier	accel_deactivate_now		23948	0					
ANR	23982	ArgumentList			23948	1					
ANR	23983	ReturnStatement	return FAILURE ;	2872:3:87376:87390	23948	1	True				
ANR	23984	Identifier	FAILURE		23948	0					
ANR	23985	ReturnStatement	return SUCCESS ;	2875:1:87400:87414	23948	1	True				
ANR	23986	Identifier	SUCCESS		23948	0					
ANR	23987	ReturnType	int		23948	1					
ANR	23988	Identifier	accelerator_shm_read_lock		23948	2					
ANR	23989	ParameterList			23948	3					
ANR	23990	CFGEntryNode	ENTRY		23948		True				
ANR	23991	CFGExitNode	EXIT		23948		True				
ANR	23992	Symbol	SUCCESS		23948						
ANR	23993	Symbol	ZCSG		23948						
ANR	23994	Symbol	counted		23948						
ANR	23995	Symbol	restart_in_progress		23948						
ANR	23996	Symbol	FAILURE		23948						
ANR	23997	Symbol	ZCG		23948						
ANR	23998	Function	accelerator_shm_read_unlock	2879:0:87488:87661							
ANR	23999	FunctionDef	accelerator_shm_read_unlock ()		23998	0					
ANR	24000	CompoundStatement		2880:0:87527:87661	23998	0					
ANR	24001	IfStatement	if ( ! ZCG ( counted ) )		23998	0					
ANR	24002	Condition	! ZCG ( counted )	2881:5:87534:87546	23998	0	True				
ANR	24003	UnaryOperationExpression	! ZCG ( counted )		23998	0					
ANR	24004	UnaryOperator	!		23998	0					
ANR	24005	CallExpression	ZCG ( counted )		23998	1					
ANR	24006	Callee	ZCG		23998	0					
ANR	24007	Identifier	ZCG		23998	0					
ANR	24008	ArgumentList	counted		23998	1					
ANR	24009	Argument	counted		23998	0					
ANR	24010	Identifier	counted		23998	0					
ANR	24011	CompoundStatement		2:20:21:21	23998	1					
ANR	24012	ExpressionStatement	accel_deactivate_now ( )	2883:2:87634:87656	23998	0	True				
ANR	24013	CallExpression	accel_deactivate_now ( )		23998	0					
ANR	24014	Callee	accel_deactivate_now		23998	0					
ANR	24015	Identifier	accel_deactivate_now		23998	0					
ANR	24016	ArgumentList			23998	1					
ANR	24017	ReturnType	void		23998	1					
ANR	24018	Identifier	accelerator_shm_read_unlock		23998	2					
ANR	24019	ParameterList			23998	3					
ANR	24020	CFGEntryNode	ENTRY		23998		True				
ANR	24021	CFGExitNode	EXIT		23998		True				
ANR	24022	Symbol	counted		23998						
ANR	24023	Symbol	ZCG		23998						
ANR	24024	DeclStmt									
ANR	24025	Decl							ZEND_EXT_API zend_extension	ZEND_EXT_API zend_extension	zend_extension_entry
