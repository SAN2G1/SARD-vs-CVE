command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1387161	File	data/converged/CVE-2015-8617_php-src/ext_opcache_ZendAccelerator.c								
ANR	1387162	DeclStmt									
ANR	1387163	Decl							int	int	uid_t
ANR	1387164	DeclStmt									
ANR	1387165	Decl							int	int	gid_t
ANR	1387166	DeclStmt									
ANR	1387167	Decl							zend_accel_globals	zend_accel_globals	accel_globals
ANR	1387168	DeclStmt									
ANR	1387169	Decl							int	int	accel_globals_id
ANR	1387170	DeclStmt									
ANR	1387171	Decl							zend_accel_shared_globals	zend_accel_shared_globals *	accel_shared_globals
ANR	1387172	DeclStmt									
ANR	1387173	Decl							zend_bool	zend_bool	accel_startup_ok
ANR	1387174	DeclStmt									
ANR	1387175	Decl							char	char *	zps_failure_reason
ANR	1387176	DeclStmt									
ANR	1387177	Decl							char	char *	zps_api_failure_reason
ANR	1387178	DeclStmt									
ANR	1387179	Decl							zend_bool	zend_bool	fallback_process
ANR	1387180	DeclStmt									
ANR	1387181	Decl							"zend_op_array * ( * ) ( zend_file_handle * file_handle , int type )"	"zend_op_array * ( * ) ( zend_file_handle * file_handle , int type )"	accelerator_orig_compile_file
ANR	1387182	DeclStmt									
ANR	1387183	Decl							"int ( * ) ( const char * filename , zend_file_handle * handle )"	"int ( * ) ( const char * filename , zend_file_handle * handle )"	accelerator_orig_zend_stream_open_function
ANR	1387184	DeclStmt									
ANR	1387185	Decl							"zend_string * ( * ) ( const char * filename , int filename_len )"	"zend_string * ( * ) ( const char * filename , int filename_len )"	accelerator_orig_zend_resolve_path
ANR	1387186	DeclStmt									
ANR	1387187	Decl							void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	orig_chdir
ANR	1387188	Function	zend_accel_get_time	128:0:3951:4152							
ANR	1387189	FunctionDef	zend_accel_get_time ()		1387188	0					
ANR	1387190	CompoundStatement		129:0:3991:4152	1387188	0					
ANR	1387191	IdentifierDeclStatement	FILETIME now ;	130:1:3994:4006	1387188	0	True				
ANR	1387192	IdentifierDecl	now		1387188	0					
ANR	1387193	IdentifierDeclType	FILETIME		1387188	0					
ANR	1387194	Identifier	now		1387188	1					
ANR	1387195	ExpressionStatement	GetSystemTimeAsFileTime ( & now )	131:1:4009:4038	1387188	1	True				
ANR	1387196	CallExpression	GetSystemTimeAsFileTime ( & now )		1387188	0					
ANR	1387197	Callee	GetSystemTimeAsFileTime		1387188	0					
ANR	1387198	Identifier	GetSystemTimeAsFileTime		1387188	0					
ANR	1387199	ArgumentList	& now		1387188	1					
ANR	1387200	Argument	& now		1387188	0					
ANR	1387201	UnaryOperationExpression	& now		1387188	0					
ANR	1387202	UnaryOperator	&		1387188	0					
ANR	1387203	Identifier	now		1387188	1					
ANR	1387204	ReturnStatement	return ( time_t ) ( ( ( ( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime ) - 116444736000000000L ) / 10000000 ) ;	133:1:4042:4150	1387188	2	True				
ANR	1387205	CastExpression	( time_t ) ( ( ( ( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime ) - 116444736000000000L ) / 10000000 )		1387188	0					
ANR	1387206	CastTarget	time_t		1387188	0					
ANR	1387207	MultiplicativeExpression	( ( ( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime ) - 116444736000000000L ) / 10000000		1387188	1		/			
ANR	1387208	AdditiveExpression	( ( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime ) - 116444736000000000L		1387188	0		-			
ANR	1387209	InclusiveOrExpression	( ( ( __int64 ) now . dwHighDateTime ) << 32 ) | now . dwLowDateTime		1387188	0		|			
ANR	1387210	ShiftExpression	( ( __int64 ) now . dwHighDateTime ) << 32		1387188	0		<<			
ANR	1387211	CastExpression	( __int64 ) now . dwHighDateTime		1387188	0					
ANR	1387212	CastTarget	__int64		1387188	0					
ANR	1387213	MemberAccess	now . dwHighDateTime		1387188	1					
ANR	1387214	Identifier	now		1387188	0					
ANR	1387215	Identifier	dwHighDateTime		1387188	1					
ANR	1387216	PrimaryExpression	32		1387188	1					
ANR	1387217	MemberAccess	now . dwLowDateTime		1387188	1					
ANR	1387218	Identifier	now		1387188	0					
ANR	1387219	Identifier	dwLowDateTime		1387188	1					
ANR	1387220	PrimaryExpression	116444736000000000L		1387188	1					
ANR	1387221	PrimaryExpression	10000000		1387188	1					
ANR	1387222	ReturnType	static time_t		1387188	1					
ANR	1387223	Identifier	zend_accel_get_time		1387188	2					
ANR	1387224	ParameterList			1387188	3					
ANR	1387225	CFGEntryNode	ENTRY		1387188		True				
ANR	1387226	CFGExitNode	EXIT		1387188		True				
ANR	1387227	Symbol	now . dwLowDateTime		1387188						
ANR	1387228	Symbol	now		1387188						
ANR	1387229	Symbol	& now		1387188						
ANR	1387230	Symbol	now . dwHighDateTime		1387188						
ANR	1387231	Function	is_stream_path	139:0:4210:4539							
ANR	1387232	FunctionDef	is_stream_path (const char * filename)		1387231	0					
ANR	1387233	CompoundStatement		140:0:4265:4539	1387231	0					
ANR	1387234	IdentifierDeclStatement	const char * p ;	141:1:4268:4281	1387231	0	True				
ANR	1387235	IdentifierDecl	* p		1387231	0					
ANR	1387236	IdentifierDeclType	const char *		1387231	0					
ANR	1387237	Identifier	p		1387231	1					
ANR	1387238	ForStatement	for ( p = filename ; ( * p >= 'a' && * p <= 'z' ) || ( * p >= 'A' && * p <= 'Z' ) || ( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.' ; p ++ )		1387231	1					
ANR	1387239	ForInit	p = filename ;	143:6:4290:4302	1387231	0	True				
ANR	1387240	AssignmentExpression	p = filename		1387231	0		=			
ANR	1387241	Identifier	p		1387231	0					
ANR	1387242	Identifier	filename		1387231	1					
ANR	1387243	Condition	( * p >= 'a' && * p <= 'z' ) || ( * p >= 'A' && * p <= 'Z' ) || ( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.'	144:6:4310:4446	1387231	1	True				
ANR	1387244	OrExpression	( * p >= 'a' && * p <= 'z' ) || ( * p >= 'A' && * p <= 'Z' ) || ( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.'		1387231	0		||			
ANR	1387245	AndExpression	* p >= 'a' && * p <= 'z'		1387231	0		&&			
ANR	1387246	RelationalExpression	* p >= 'a'		1387231	0		>=			
ANR	1387247	UnaryOperationExpression	* p		1387231	0					
ANR	1387248	UnaryOperator	*		1387231	0					
ANR	1387249	Identifier	p		1387231	1					
ANR	1387250	PrimaryExpression	'a'		1387231	1					
ANR	1387251	RelationalExpression	* p <= 'z'		1387231	1		<=			
ANR	1387252	UnaryOperationExpression	* p		1387231	0					
ANR	1387253	UnaryOperator	*		1387231	0					
ANR	1387254	Identifier	p		1387231	1					
ANR	1387255	PrimaryExpression	'z'		1387231	1					
ANR	1387256	OrExpression	( * p >= 'A' && * p <= 'Z' ) || ( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.'		1387231	1		||			
ANR	1387257	AndExpression	* p >= 'A' && * p <= 'Z'		1387231	0		&&			
ANR	1387258	RelationalExpression	* p >= 'A'		1387231	0		>=			
ANR	1387259	UnaryOperationExpression	* p		1387231	0					
ANR	1387260	UnaryOperator	*		1387231	0					
ANR	1387261	Identifier	p		1387231	1					
ANR	1387262	PrimaryExpression	'A'		1387231	1					
ANR	1387263	RelationalExpression	* p <= 'Z'		1387231	1		<=			
ANR	1387264	UnaryOperationExpression	* p		1387231	0					
ANR	1387265	UnaryOperator	*		1387231	0					
ANR	1387266	Identifier	p		1387231	1					
ANR	1387267	PrimaryExpression	'Z'		1387231	1					
ANR	1387268	OrExpression	( * p >= '0' && * p <= '9' ) || * p == '+' || * p == '-' || * p == '.'		1387231	1		||			
ANR	1387269	AndExpression	* p >= '0' && * p <= '9'		1387231	0		&&			
ANR	1387270	RelationalExpression	* p >= '0'		1387231	0		>=			
ANR	1387271	UnaryOperationExpression	* p		1387231	0					
ANR	1387272	UnaryOperator	*		1387231	0					
ANR	1387273	Identifier	p		1387231	1					
ANR	1387274	PrimaryExpression	'0'		1387231	1					
ANR	1387275	RelationalExpression	* p <= '9'		1387231	1		<=			
ANR	1387276	UnaryOperationExpression	* p		1387231	0					
ANR	1387277	UnaryOperator	*		1387231	0					
ANR	1387278	Identifier	p		1387231	1					
ANR	1387279	PrimaryExpression	'9'		1387231	1					
ANR	1387280	OrExpression	* p == '+' || * p == '-' || * p == '.'		1387231	1		||			
ANR	1387281	EqualityExpression	* p == '+'		1387231	0		==			
ANR	1387282	UnaryOperationExpression	* p		1387231	0					
ANR	1387283	UnaryOperator	*		1387231	0					
ANR	1387284	Identifier	p		1387231	1					
ANR	1387285	PrimaryExpression	'+'		1387231	1					
ANR	1387286	OrExpression	* p == '-' || * p == '.'		1387231	1		||			
ANR	1387287	EqualityExpression	* p == '-'		1387231	0		==			
ANR	1387288	UnaryOperationExpression	* p		1387231	0					
ANR	1387289	UnaryOperator	*		1387231	0					
ANR	1387290	Identifier	p		1387231	1					
ANR	1387291	PrimaryExpression	'-'		1387231	1					
ANR	1387292	EqualityExpression	* p == '.'		1387231	1		==			
ANR	1387293	UnaryOperationExpression	* p		1387231	0					
ANR	1387294	UnaryOperator	*		1387231	0					
ANR	1387295	Identifier	p		1387231	1					
ANR	1387296	PrimaryExpression	'.'		1387231	1					
ANR	1387297	PostIncDecOperationExpression	p ++	148:6:4455:4457	1387231	2	True				
ANR	1387298	Identifier	p		1387231	0					
ANR	1387299	IncDec	++		1387231	1					
ANR	1387300	ExpressionStatement		148:10:4459:4459	1387231	3	True				
ANR	1387301	ReturnStatement	return ( ( p != filename ) && ( p [ 0 ] == ':' ) && ( p [ 1 ] == '/' ) && ( p [ 2 ] == '/' ) ) ;	149:1:4462:4537	1387231	2	True				
ANR	1387302	AndExpression	( p != filename ) && ( p [ 0 ] == ':' ) && ( p [ 1 ] == '/' ) && ( p [ 2 ] == '/' )		1387231	0		&&			
ANR	1387303	EqualityExpression	p != filename		1387231	0		!=			
ANR	1387304	Identifier	p		1387231	0					
ANR	1387305	Identifier	filename		1387231	1					
ANR	1387306	AndExpression	( p [ 0 ] == ':' ) && ( p [ 1 ] == '/' ) && ( p [ 2 ] == '/' )		1387231	1		&&			
ANR	1387307	EqualityExpression	p [ 0 ] == ':'		1387231	0		==			
ANR	1387308	ArrayIndexing	p [ 0 ]		1387231	0					
ANR	1387309	Identifier	p		1387231	0					
ANR	1387310	PrimaryExpression	0		1387231	1					
ANR	1387311	PrimaryExpression	':'		1387231	1					
ANR	1387312	AndExpression	( p [ 1 ] == '/' ) && ( p [ 2 ] == '/' )		1387231	1		&&			
ANR	1387313	EqualityExpression	p [ 1 ] == '/'		1387231	0		==			
ANR	1387314	ArrayIndexing	p [ 1 ]		1387231	0					
ANR	1387315	Identifier	p		1387231	0					
ANR	1387316	PrimaryExpression	1		1387231	1					
ANR	1387317	PrimaryExpression	'/'		1387231	1					
ANR	1387318	EqualityExpression	p [ 2 ] == '/'		1387231	1		==			
ANR	1387319	ArrayIndexing	p [ 2 ]		1387231	0					
ANR	1387320	Identifier	p		1387231	0					
ANR	1387321	PrimaryExpression	2		1387231	1					
ANR	1387322	PrimaryExpression	'/'		1387231	1					
ANR	1387323	ReturnType	static inline int		1387231	1					
ANR	1387324	Identifier	is_stream_path		1387231	2					
ANR	1387325	ParameterList	const char * filename		1387231	3					
ANR	1387326	Parameter	const char * filename	139:33:4243:4262	1387231	0	True				
ANR	1387327	ParameterType	const char *		1387231	0					
ANR	1387328	Identifier	filename		1387231	1					
ANR	1387329	CFGEntryNode	ENTRY		1387231		True				
ANR	1387330	CFGExitNode	EXIT		1387231		True				
ANR	1387331	Symbol	p		1387231						
ANR	1387332	Symbol	filename		1387231						
ANR	1387333	Symbol	* p		1387231						
ANR	1387334	Function	is_cacheable_stream_path	152:0:4542:4741							
ANR	1387335	FunctionDef	is_cacheable_stream_path (const char * filename)		1387334	0					
ANR	1387336	CompoundStatement		153:0:4607:4741	1387334	0					
ANR	1387337	ReturnStatement	"return memcmp ( filename , ""file://"" , sizeof ( ""file://"" ) - 1 ) == 0 || memcmp ( filename , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) == 0 ;"	154:1:4610:4739	1387334	0	True				
ANR	1387338	OrExpression	"memcmp ( filename , ""file://"" , sizeof ( ""file://"" ) - 1 ) == 0 || memcmp ( filename , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) == 0"		1387334	0		||			
ANR	1387339	EqualityExpression	"memcmp ( filename , ""file://"" , sizeof ( ""file://"" ) - 1 ) == 0"		1387334	0		==			
ANR	1387340	CallExpression	"memcmp ( filename , ""file://"" , sizeof ( ""file://"" ) - 1 )"		1387334	0					
ANR	1387341	Callee	memcmp		1387334	0					
ANR	1387342	Identifier	memcmp		1387334	0					
ANR	1387343	ArgumentList	filename		1387334	1					
ANR	1387344	Argument	filename		1387334	0					
ANR	1387345	Identifier	filename		1387334	0					
ANR	1387346	Argument	"""file://"""		1387334	1					
ANR	1387347	PrimaryExpression	"""file://"""		1387334	0					
ANR	1387348	Argument	"sizeof ( ""file://"" ) - 1"		1387334	2					
ANR	1387349	AdditiveExpression	"sizeof ( ""file://"" ) - 1"		1387334	0		-			
ANR	1387350	SizeofExpression	"sizeof ( ""file://"" )"		1387334	0					
ANR	1387351	Sizeof	sizeof		1387334	0					
ANR	1387352	PrimaryExpression	"""file://"""		1387334	1					
ANR	1387353	PrimaryExpression	1		1387334	1					
ANR	1387354	PrimaryExpression	0		1387334	1					
ANR	1387355	EqualityExpression	"memcmp ( filename , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) == 0"		1387334	1		==			
ANR	1387356	CallExpression	"memcmp ( filename , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"		1387334	0					
ANR	1387357	Callee	memcmp		1387334	0					
ANR	1387358	Identifier	memcmp		1387334	0					
ANR	1387359	ArgumentList	filename		1387334	1					
ANR	1387360	Argument	filename		1387334	0					
ANR	1387361	Identifier	filename		1387334	0					
ANR	1387362	Argument	"""phar://"""		1387334	1					
ANR	1387363	PrimaryExpression	"""phar://"""		1387334	0					
ANR	1387364	Argument	"sizeof ( ""phar://"" ) - 1"		1387334	2					
ANR	1387365	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		1387334	0		-			
ANR	1387366	SizeofExpression	"sizeof ( ""phar://"" )"		1387334	0					
ANR	1387367	Sizeof	sizeof		1387334	0					
ANR	1387368	PrimaryExpression	"""phar://"""		1387334	1					
ANR	1387369	PrimaryExpression	1		1387334	1					
ANR	1387370	PrimaryExpression	0		1387334	1					
ANR	1387371	ReturnType	static inline int		1387334	1					
ANR	1387372	Identifier	is_cacheable_stream_path		1387334	2					
ANR	1387373	ParameterList	const char * filename		1387334	3					
ANR	1387374	Parameter	const char * filename	152:43:4585:4604	1387334	0	True				
ANR	1387375	ParameterType	const char *		1387334	0					
ANR	1387376	Identifier	filename		1387334	1					
ANR	1387377	CFGEntryNode	ENTRY		1387334		True				
ANR	1387378	CFGExitNode	EXIT		1387334		True				
ANR	1387379	Symbol	filename		1387334						
ANR	1387380	Symbol	memcmp		1387334						
ANR	1387381	DeclStmt									
ANR	1387382	Decl							char	char [ MAXPATHLEN ]	cwd
ANR	1387383	Function	accel_getcwd	182:0:5320:5622							
ANR	1387384	FunctionDef	accel_getcwd ()		1387383	0					
ANR	1387385	CompoundStatement		183:0:5366:5622	1387383	0					
ANR	1387386	IfStatement	if ( ZCG ( cwd ) )		1387383	0					
ANR	1387387	Condition	ZCG ( cwd )	184:5:5373:5380	1387383	0	True				
ANR	1387388	CallExpression	ZCG ( cwd )		1387383	0					
ANR	1387389	Callee	ZCG		1387383	0					
ANR	1387390	Identifier	ZCG		1387383	0					
ANR	1387391	ArgumentList	cwd		1387383	1					
ANR	1387392	Argument	cwd		1387383	0					
ANR	1387393	Identifier	cwd		1387383	0					
ANR	1387394	CompoundStatement		2:15:16:16	1387383	1					
ANR	1387395	ReturnStatement	return ZCG ( cwd ) ;	185:2:5387:5402	1387383	0	True				
ANR	1387396	CallExpression	ZCG ( cwd )		1387383	0					
ANR	1387397	Callee	ZCG		1387383	0					
ANR	1387398	Identifier	ZCG		1387383	0					
ANR	1387399	ArgumentList	cwd		1387383	1					
ANR	1387400	Argument	cwd		1387383	0					
ANR	1387401	Identifier	cwd		1387383	0					
ANR	1387402	ElseStatement	else		1387383	0					
ANR	1387403	CompoundStatement		5:2:49:73	1387383	0					
ANR	1387404	IdentifierDeclStatement	char cwd [ MAXPATHLEN + 1 ] ;	187:2:5416:5440	1387383	0	True				
ANR	1387405	IdentifierDecl	cwd [ MAXPATHLEN + 1 ]		1387383	0					
ANR	1387406	IdentifierDeclType	char [ MAXPATHLEN + 1 ]		1387383	0					
ANR	1387407	Identifier	cwd		1387383	1					
ANR	1387408	AdditiveExpression	MAXPATHLEN + 1		1387383	2		+			
ANR	1387409	Identifier	MAXPATHLEN		1387383	0					
ANR	1387410	PrimaryExpression	1		1387383	1					
ANR	1387411	IfStatement	"if ( ! VCWD_GETCWD ( cwd , MAXPATHLEN ) )"		1387383	1					
ANR	1387412	Condition	"! VCWD_GETCWD ( cwd , MAXPATHLEN )"	189:6:5449:5477	1387383	0	True				
ANR	1387413	UnaryOperationExpression	"! VCWD_GETCWD ( cwd , MAXPATHLEN )"		1387383	0					
ANR	1387414	UnaryOperator	!		1387383	0					
ANR	1387415	CallExpression	"VCWD_GETCWD ( cwd , MAXPATHLEN )"		1387383	1					
ANR	1387416	Callee	VCWD_GETCWD		1387383	0					
ANR	1387417	Identifier	VCWD_GETCWD		1387383	0					
ANR	1387418	ArgumentList	cwd		1387383	1					
ANR	1387419	Argument	cwd		1387383	0					
ANR	1387420	Identifier	cwd		1387383	0					
ANR	1387421	Argument	MAXPATHLEN		1387383	1					
ANR	1387422	Identifier	MAXPATHLEN		1387383	0					
ANR	1387423	CompoundStatement		7:37:113:113	1387383	1					
ANR	1387424	ReturnStatement	return NULL ;	190:3:5485:5496	1387383	0	True				
ANR	1387425	Identifier	NULL		1387383	0					
ANR	1387426	ExpressionStatement	"ZCG ( cwd ) = zend_string_init ( cwd , strlen ( cwd ) , 0 )"	192:2:5504:5552	1387383	2	True				
ANR	1387427	AssignmentExpression	"ZCG ( cwd ) = zend_string_init ( cwd , strlen ( cwd ) , 0 )"		1387383	0		=			
ANR	1387428	CallExpression	ZCG ( cwd )		1387383	0					
ANR	1387429	Callee	ZCG		1387383	0					
ANR	1387430	Identifier	ZCG		1387383	0					
ANR	1387431	ArgumentList	cwd		1387383	1					
ANR	1387432	Argument	cwd		1387383	0					
ANR	1387433	Identifier	cwd		1387383	0					
ANR	1387434	CallExpression	"zend_string_init ( cwd , strlen ( cwd ) , 0 )"		1387383	1					
ANR	1387435	Callee	zend_string_init		1387383	0					
ANR	1387436	Identifier	zend_string_init		1387383	0					
ANR	1387437	ArgumentList	cwd		1387383	1					
ANR	1387438	Argument	cwd		1387383	0					
ANR	1387439	Identifier	cwd		1387383	0					
ANR	1387440	Argument	strlen ( cwd )		1387383	1					
ANR	1387441	CallExpression	strlen ( cwd )		1387383	0					
ANR	1387442	Callee	strlen		1387383	0					
ANR	1387443	Identifier	strlen		1387383	0					
ANR	1387444	ArgumentList	cwd		1387383	1					
ANR	1387445	Argument	cwd		1387383	0					
ANR	1387446	Identifier	cwd		1387383	0					
ANR	1387447	Argument	0		1387383	2					
ANR	1387448	PrimaryExpression	0		1387383	0					
ANR	1387449	ExpressionStatement	ZCG ( cwd_key_len ) = 0	193:2:5556:5576	1387383	3	True				
ANR	1387450	AssignmentExpression	ZCG ( cwd_key_len ) = 0		1387383	0		=			
ANR	1387451	CallExpression	ZCG ( cwd_key_len )		1387383	0					
ANR	1387452	Callee	ZCG		1387383	0					
ANR	1387453	Identifier	ZCG		1387383	0					
ANR	1387454	ArgumentList	cwd_key_len		1387383	1					
ANR	1387455	Argument	cwd_key_len		1387383	0					
ANR	1387456	Identifier	cwd_key_len		1387383	0					
ANR	1387457	PrimaryExpression	0		1387383	1					
ANR	1387458	ExpressionStatement	ZCG ( cwd_check ) = 1	194:2:5580:5598	1387383	4	True				
ANR	1387459	AssignmentExpression	ZCG ( cwd_check ) = 1		1387383	0		=			
ANR	1387460	CallExpression	ZCG ( cwd_check )		1387383	0					
ANR	1387461	Callee	ZCG		1387383	0					
ANR	1387462	Identifier	ZCG		1387383	0					
ANR	1387463	ArgumentList	cwd_check		1387383	1					
ANR	1387464	Argument	cwd_check		1387383	0					
ANR	1387465	Identifier	cwd_check		1387383	0					
ANR	1387466	PrimaryExpression	1		1387383	1					
ANR	1387467	ReturnStatement	return ZCG ( cwd ) ;	195:2:5602:5617	1387383	5	True				
ANR	1387468	CallExpression	ZCG ( cwd )		1387383	0					
ANR	1387469	Callee	ZCG		1387383	0					
ANR	1387470	Identifier	ZCG		1387383	0					
ANR	1387471	ArgumentList	cwd		1387383	1					
ANR	1387472	Argument	cwd		1387383	0					
ANR	1387473	Identifier	cwd		1387383	0					
ANR	1387474	ReturnType	static inline zend_string *		1387383	1					
ANR	1387475	Identifier	accel_getcwd		1387383	2					
ANR	1387476	ParameterList			1387383	3					
ANR	1387477	CFGEntryNode	ENTRY		1387383		True				
ANR	1387478	CFGExitNode	EXIT		1387383		True				
ANR	1387479	Symbol	cwd		1387383						
ANR	1387480	Symbol	MAXPATHLEN		1387383						
ANR	1387481	Symbol	zend_string_init		1387383						
ANR	1387482	Symbol	strlen		1387383						
ANR	1387483	Symbol	NULL		1387383						
ANR	1387484	Symbol	VCWD_GETCWD		1387383						
ANR	1387485	Symbol	cwd_check		1387383						
ANR	1387486	Symbol	ZCG		1387383						
ANR	1387487	Symbol	cwd_key_len		1387383						
ANR	1387488	Function	zend_accel_schedule_restart_if_necessary	199:0:5625:5889							
ANR	1387489	FunctionDef	zend_accel_schedule_restart_if_necessary (zend_accel_restart_reason reason)		1387488	0					
ANR	1387490	CompoundStatement		200:0:5705:5889	1387488	0					
ANR	1387491	IfStatement	if ( ( ( ( double ) ZSMMG ( wasted_shared_memory ) ) / ZCG ( accel_directives ) . memory_consumption ) >= ZCG ( accel_directives ) . max_wasted_percentage )		1387488	0					
ANR	1387492	Condition	( ( ( double ) ZSMMG ( wasted_shared_memory ) ) / ZCG ( accel_directives ) . memory_consumption ) >= ZCG ( accel_directives ) . max_wasted_percentage	201:5:5712:5841	1387488	0	True				
ANR	1387493	RelationalExpression	( ( ( double ) ZSMMG ( wasted_shared_memory ) ) / ZCG ( accel_directives ) . memory_consumption ) >= ZCG ( accel_directives ) . max_wasted_percentage		1387488	0		>=			
ANR	1387494	MultiplicativeExpression	( ( double ) ZSMMG ( wasted_shared_memory ) ) / ZCG ( accel_directives ) . memory_consumption		1387488	0		/			
ANR	1387495	CastExpression	( double ) ZSMMG ( wasted_shared_memory )		1387488	0					
ANR	1387496	CastTarget	double		1387488	0					
ANR	1387497	CallExpression	ZSMMG ( wasted_shared_memory )		1387488	1					
ANR	1387498	Callee	ZSMMG		1387488	0					
ANR	1387499	Identifier	ZSMMG		1387488	0					
ANR	1387500	ArgumentList	wasted_shared_memory		1387488	1					
ANR	1387501	Argument	wasted_shared_memory		1387488	0					
ANR	1387502	Identifier	wasted_shared_memory		1387488	0					
ANR	1387503	MemberAccess	ZCG ( accel_directives ) . memory_consumption		1387488	1					
ANR	1387504	CallExpression	ZCG ( accel_directives )		1387488	0					
ANR	1387505	Callee	ZCG		1387488	0					
ANR	1387506	Identifier	ZCG		1387488	0					
ANR	1387507	ArgumentList	accel_directives		1387488	1					
ANR	1387508	Argument	accel_directives		1387488	0					
ANR	1387509	Identifier	accel_directives		1387488	0					
ANR	1387510	Identifier	memory_consumption		1387488	1					
ANR	1387511	MemberAccess	ZCG ( accel_directives ) . max_wasted_percentage		1387488	1					
ANR	1387512	CallExpression	ZCG ( accel_directives )		1387488	0					
ANR	1387513	Callee	ZCG		1387488	0					
ANR	1387514	Identifier	ZCG		1387488	0					
ANR	1387515	ArgumentList	accel_directives		1387488	1					
ANR	1387516	Argument	accel_directives		1387488	0					
ANR	1387517	Identifier	accel_directives		1387488	0					
ANR	1387518	Identifier	max_wasted_percentage		1387488	1					
ANR	1387519	CompoundStatement		2:137:138:138	1387488	1					
ANR	1387520	ExpressionStatement	zend_accel_schedule_restart ( reason )	202:3:5849:5884	1387488	0	True				
ANR	1387521	CallExpression	zend_accel_schedule_restart ( reason )		1387488	0					
ANR	1387522	Callee	zend_accel_schedule_restart		1387488	0					
ANR	1387523	Identifier	zend_accel_schedule_restart		1387488	0					
ANR	1387524	ArgumentList	reason		1387488	1					
ANR	1387525	Argument	reason		1387488	0					
ANR	1387526	Identifier	reason		1387488	0					
ANR	1387527	ReturnType	void		1387488	1					
ANR	1387528	Identifier	zend_accel_schedule_restart_if_necessary		1387488	2					
ANR	1387529	ParameterList	zend_accel_restart_reason reason		1387488	3					
ANR	1387530	Parameter	zend_accel_restart_reason reason	199:46:5671:5702	1387488	0	True				
ANR	1387531	ParameterType	zend_accel_restart_reason		1387488	0					
ANR	1387532	Identifier	reason		1387488	1					
ANR	1387533	CFGEntryNode	ENTRY		1387488		True				
ANR	1387534	CFGExitNode	EXIT		1387488		True				
ANR	1387535	Symbol	reason		1387488						
ANR	1387536	Symbol	wasted_shared_memory		1387488						
ANR	1387537	Symbol	ZSMMG		1387488						
ANR	1387538	Symbol	ZCG ( accel_directives ) . max_wasted_percentage		1387488						
ANR	1387539	Symbol	ZCG ( accel_directives ) . memory_consumption		1387488						
ANR	1387540	Symbol	accel_directives		1387488						
ANR	1387541	Symbol	ZCG		1387488						
ANR	1387542	DeclStmt									
ANR	1387543	Decl							int	int	ret
ANR	1387544	DeclStmt									
ANR	1387545	Decl							zend_string * ( * ) ( zend_string * str )	zend_string * ( * ) ( zend_string * str )	orig_new_interned_string
ANR	1387546	DeclStmt									
ANR	1387547	Decl							void ( * ) ( void )	void ( * ) ( void )	orig_interned_strings_snapshot
ANR	1387548	DeclStmt									
ANR	1387549	Decl							void ( * ) ( void )	void ( * ) ( void )	orig_interned_strings_restore
ANR	1387550	Function	accel_new_interned_string_for_php	232:0:6839:6926							
ANR	1387551	FunctionDef	accel_new_interned_string_for_php (zend_string * str)		1387550	0					
ANR	1387552	CompoundStatement		233:0:6911:6926	1387550	0					
ANR	1387553	ReturnStatement	return str ;	234:1:6914:6924	1387550	0	True				
ANR	1387554	Identifier	str		1387550	0					
ANR	1387555	ReturnType	static zend_string *		1387550	1					
ANR	1387556	Identifier	accel_new_interned_string_for_php		1387550	2					
ANR	1387557	ParameterList	zend_string * str		1387550	3					
ANR	1387558	Parameter	zend_string * str	232:54:6893:6908	1387550	0	True				
ANR	1387559	ParameterType	zend_string *		1387550	0					
ANR	1387560	Identifier	str		1387550	1					
ANR	1387561	CFGEntryNode	ENTRY		1387550		True				
ANR	1387562	CFGExitNode	EXIT		1387550		True				
ANR	1387563	Symbol	str		1387550						
ANR	1387564	Function	accel_interned_strings_snapshot_for_php	237:0:6929:6989							
ANR	1387565	FunctionDef	accel_interned_strings_snapshot_for_php ()		1387564	0					
ANR	1387566	CompoundStatement		238:0:6987:6989	1387564	0					
ANR	1387567	ReturnType	static void		1387564	1					
ANR	1387568	Identifier	accel_interned_strings_snapshot_for_php		1387564	2					
ANR	1387569	ParameterList			1387564	3					
ANR	1387570	CFGEntryNode	ENTRY		1387564		True				
ANR	1387571	CFGExitNode	EXIT		1387564		True				
ANR	1387572	Function	accel_interned_strings_restore_for_php	241:0:6992:7051							
ANR	1387573	FunctionDef	accel_interned_strings_restore_for_php ()		1387572	0					
ANR	1387574	CompoundStatement		242:0:7049:7051	1387572	0					
ANR	1387575	ReturnType	static void		1387572	1					
ANR	1387576	Identifier	accel_interned_strings_restore_for_php		1387572	2					
ANR	1387577	ParameterList			1387572	3					
ANR	1387578	CFGEntryNode	ENTRY		1387572		True				
ANR	1387579	CFGExitNode	EXIT		1387572		True				
ANR	1387580	Function	accel_interned_strings_restore_state	246:0:7066:8108							
ANR	1387581	FunctionDef	accel_interned_strings_restore_state ()		1387580	0					
ANR	1387582	CompoundStatement		247:0:7121:8108	1387580	0					
ANR	1387583	IdentifierDeclStatement	uint idx = ZCSG ( interned_strings ) . nNumUsed ;	248:4:7127:7169	1387580	0	True				
ANR	1387584	IdentifierDecl	idx = ZCSG ( interned_strings ) . nNumUsed		1387580	0					
ANR	1387585	IdentifierDeclType	uint		1387580	0					
ANR	1387586	Identifier	idx		1387580	1					
ANR	1387587	AssignmentExpression	idx = ZCSG ( interned_strings ) . nNumUsed		1387580	2		=			
ANR	1387588	Identifier	idx		1387580	0					
ANR	1387589	MemberAccess	ZCSG ( interned_strings ) . nNumUsed		1387580	1					
ANR	1387590	CallExpression	ZCSG ( interned_strings )		1387580	0					
ANR	1387591	Callee	ZCSG		1387580	0					
ANR	1387592	Identifier	ZCSG		1387580	0					
ANR	1387593	ArgumentList	interned_strings		1387580	1					
ANR	1387594	Argument	interned_strings		1387580	0					
ANR	1387595	Identifier	interned_strings		1387580	0					
ANR	1387596	Identifier	nNumUsed		1387580	1					
ANR	1387597	IdentifierDeclStatement	uint nIndex ;	249:4:7175:7186	1387580	1	True				
ANR	1387598	IdentifierDecl	nIndex		1387580	0					
ANR	1387599	IdentifierDeclType	uint		1387580	0					
ANR	1387600	Identifier	nIndex		1387580	1					
ANR	1387601	IdentifierDeclStatement	Bucket * p ;	250:4:7192:7201	1387580	2	True				
ANR	1387602	IdentifierDecl	* p		1387580	0					
ANR	1387603	IdentifierDeclType	Bucket *		1387580	0					
ANR	1387604	Identifier	p		1387580	1					
ANR	1387605	ExpressionStatement	"memset ( ZCSG ( interned_strings_saved_top ) , 0 , ZCSG ( interned_strings_top ) - ZCSG ( interned_strings_saved_top ) )"	252:1:7205:7314	1387580	3	True				
ANR	1387606	CallExpression	"memset ( ZCSG ( interned_strings_saved_top ) , 0 , ZCSG ( interned_strings_top ) - ZCSG ( interned_strings_saved_top ) )"		1387580	0					
ANR	1387607	Callee	memset		1387580	0					
ANR	1387608	Identifier	memset		1387580	0					
ANR	1387609	ArgumentList	ZCSG ( interned_strings_saved_top )		1387580	1					
ANR	1387610	Argument	ZCSG ( interned_strings_saved_top )		1387580	0					
ANR	1387611	CallExpression	ZCSG ( interned_strings_saved_top )		1387580	0					
ANR	1387612	Callee	ZCSG		1387580	0					
ANR	1387613	Identifier	ZCSG		1387580	0					
ANR	1387614	ArgumentList	interned_strings_saved_top		1387580	1					
ANR	1387615	Argument	interned_strings_saved_top		1387580	0					
ANR	1387616	Identifier	interned_strings_saved_top		1387580	0					
ANR	1387617	Argument	0		1387580	1					
ANR	1387618	PrimaryExpression	0		1387580	0					
ANR	1387619	Argument	ZCSG ( interned_strings_top ) - ZCSG ( interned_strings_saved_top )		1387580	2					
ANR	1387620	AdditiveExpression	ZCSG ( interned_strings_top ) - ZCSG ( interned_strings_saved_top )		1387580	0		-			
ANR	1387621	CallExpression	ZCSG ( interned_strings_top )		1387580	0					
ANR	1387622	Callee	ZCSG		1387580	0					
ANR	1387623	Identifier	ZCSG		1387580	0					
ANR	1387624	ArgumentList	interned_strings_top		1387580	1					
ANR	1387625	Argument	interned_strings_top		1387580	0					
ANR	1387626	Identifier	interned_strings_top		1387580	0					
ANR	1387627	CallExpression	ZCSG ( interned_strings_saved_top )		1387580	1					
ANR	1387628	Callee	ZCSG		1387580	0					
ANR	1387629	Identifier	ZCSG		1387580	0					
ANR	1387630	ArgumentList	interned_strings_saved_top		1387580	1					
ANR	1387631	Argument	interned_strings_saved_top		1387580	0					
ANR	1387632	Identifier	interned_strings_saved_top		1387580	0					
ANR	1387633	ExpressionStatement	ZCSG ( interned_strings_top ) = ZCSG ( interned_strings_saved_top )	254:1:7317:7378	1387580	4	True				
ANR	1387634	AssignmentExpression	ZCSG ( interned_strings_top ) = ZCSG ( interned_strings_saved_top )		1387580	0		=			
ANR	1387635	CallExpression	ZCSG ( interned_strings_top )		1387580	0					
ANR	1387636	Callee	ZCSG		1387580	0					
ANR	1387637	Identifier	ZCSG		1387580	0					
ANR	1387638	ArgumentList	interned_strings_top		1387580	1					
ANR	1387639	Argument	interned_strings_top		1387580	0					
ANR	1387640	Identifier	interned_strings_top		1387580	0					
ANR	1387641	CallExpression	ZCSG ( interned_strings_saved_top )		1387580	1					
ANR	1387642	Callee	ZCSG		1387580	0					
ANR	1387643	Identifier	ZCSG		1387580	0					
ANR	1387644	ArgumentList	interned_strings_saved_top		1387580	1					
ANR	1387645	Argument	interned_strings_saved_top		1387580	0					
ANR	1387646	Identifier	interned_strings_saved_top		1387580	0					
ANR	1387647	WhileStatement	while ( idx > 0 )		1387580	5					
ANR	1387648	Condition	idx > 0	255:11:7391:7397	1387580	0	True				
ANR	1387649	RelationalExpression	idx > 0		1387580	0		>			
ANR	1387650	Identifier	idx		1387580	0					
ANR	1387651	PrimaryExpression	0		1387580	1					
ANR	1387652	CompoundStatement		9:20:278:278	1387580	1					
ANR	1387653	ExpressionStatement	idx --	256:5:7407:7412	1387580	0	True				
ANR	1387654	PostIncDecOperationExpression	idx --		1387580	0					
ANR	1387655	Identifier	idx		1387580	0					
ANR	1387656	IncDec	--		1387580	1					
ANR	1387657	ExpressionStatement	p = ZCSG ( interned_strings ) . arData + idx	257:2:7416:7455	1387580	1	True				
ANR	1387658	AssignmentExpression	p = ZCSG ( interned_strings ) . arData + idx		1387580	0		=			
ANR	1387659	Identifier	p		1387580	0					
ANR	1387660	AdditiveExpression	ZCSG ( interned_strings ) . arData + idx		1387580	1		+			
ANR	1387661	MemberAccess	ZCSG ( interned_strings ) . arData		1387580	0					
ANR	1387662	CallExpression	ZCSG ( interned_strings )		1387580	0					
ANR	1387663	Callee	ZCSG		1387580	0					
ANR	1387664	Identifier	ZCSG		1387580	0					
ANR	1387665	ArgumentList	interned_strings		1387580	1					
ANR	1387666	Argument	interned_strings		1387580	0					
ANR	1387667	Identifier	interned_strings		1387580	0					
ANR	1387668	Identifier	arData		1387580	1					
ANR	1387669	Identifier	idx		1387580	1					
ANR	1387670	IfStatement	if ( ( char * ) p -> key < ZCSG ( interned_strings_top ) )		1387580	2					
ANR	1387671	Condition	( char * ) p -> key < ZCSG ( interned_strings_top )	258:6:7463:7504	1387580	0	True				
ANR	1387672	RelationalExpression	( char * ) p -> key < ZCSG ( interned_strings_top )		1387580	0		<			
ANR	1387673	CastExpression	( char * ) p -> key		1387580	0					
ANR	1387674	CastTarget	char *		1387580	0					
ANR	1387675	PtrMemberAccess	p -> key		1387580	1					
ANR	1387676	Identifier	p		1387580	0					
ANR	1387677	Identifier	key		1387580	1					
ANR	1387678	CallExpression	ZCSG ( interned_strings_top )		1387580	1					
ANR	1387679	Callee	ZCSG		1387580	0					
ANR	1387680	Identifier	ZCSG		1387580	0					
ANR	1387681	ArgumentList	interned_strings_top		1387580	1					
ANR	1387682	Argument	interned_strings_top		1387580	0					
ANR	1387683	Identifier	interned_strings_top		1387580	0					
ANR	1387684	BreakStatement	break ;	258:50:7507:7512	1387580	1	True				
ANR	1387685	ExpressionStatement	ZCSG ( interned_strings ) . nNumUsed --	259:2:7516:7549	1387580	3	True				
ANR	1387686	PostIncDecOperationExpression	ZCSG ( interned_strings ) . nNumUsed --		1387580	0					
ANR	1387687	MemberAccess	ZCSG ( interned_strings ) . nNumUsed		1387580	0					
ANR	1387688	CallExpression	ZCSG ( interned_strings )		1387580	0					
ANR	1387689	Callee	ZCSG		1387580	0					
ANR	1387690	Identifier	ZCSG		1387580	0					
ANR	1387691	ArgumentList	interned_strings		1387580	1					
ANR	1387692	Argument	interned_strings		1387580	0					
ANR	1387693	Identifier	interned_strings		1387580	0					
ANR	1387694	Identifier	nNumUsed		1387580	1					
ANR	1387695	IncDec	--		1387580	1					
ANR	1387696	ExpressionStatement	ZCSG ( interned_strings ) . nNumOfElements --	260:2:7553:7592	1387580	4	True				
ANR	1387697	PostIncDecOperationExpression	ZCSG ( interned_strings ) . nNumOfElements --		1387580	0					
ANR	1387698	MemberAccess	ZCSG ( interned_strings ) . nNumOfElements		1387580	0					
ANR	1387699	CallExpression	ZCSG ( interned_strings )		1387580	0					
ANR	1387700	Callee	ZCSG		1387580	0					
ANR	1387701	Identifier	ZCSG		1387580	0					
ANR	1387702	ArgumentList	interned_strings		1387580	1					
ANR	1387703	Argument	interned_strings		1387580	0					
ANR	1387704	Identifier	interned_strings		1387580	0					
ANR	1387705	Identifier	nNumOfElements		1387580	1					
ANR	1387706	IncDec	--		1387580	1					
ANR	1387707	ExpressionStatement	nIndex = p -> h | ZCSG ( interned_strings ) . nTableMask	262:2:7597:7646	1387580	5	True				
ANR	1387708	AssignmentExpression	nIndex = p -> h | ZCSG ( interned_strings ) . nTableMask		1387580	0		=			
ANR	1387709	Identifier	nIndex		1387580	0					
ANR	1387710	InclusiveOrExpression	p -> h | ZCSG ( interned_strings ) . nTableMask		1387580	1		|			
ANR	1387711	PtrMemberAccess	p -> h		1387580	0					
ANR	1387712	Identifier	p		1387580	0					
ANR	1387713	Identifier	h		1387580	1					
ANR	1387714	MemberAccess	ZCSG ( interned_strings ) . nTableMask		1387580	1					
ANR	1387715	CallExpression	ZCSG ( interned_strings )		1387580	0					
ANR	1387716	Callee	ZCSG		1387580	0					
ANR	1387717	Identifier	ZCSG		1387580	0					
ANR	1387718	ArgumentList	interned_strings		1387580	1					
ANR	1387719	Argument	interned_strings		1387580	0					
ANR	1387720	Identifier	interned_strings		1387580	0					
ANR	1387721	Identifier	nTableMask		1387580	1					
ANR	1387722	IfStatement	"if ( HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) == HT_IDX_TO_HASH ( idx ) )"		1387580	6					
ANR	1387723	Condition	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) == HT_IDX_TO_HASH ( idx )"	263:6:7654:7716	1387580	0	True				
ANR	1387724	EqualityExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) == HT_IDX_TO_HASH ( idx )"		1387580	0		==			
ANR	1387725	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1387580	0					
ANR	1387726	Callee	HT_HASH		1387580	0					
ANR	1387727	Identifier	HT_HASH		1387580	0					
ANR	1387728	ArgumentList	& ZCSG ( interned_strings )		1387580	1					
ANR	1387729	Argument	& ZCSG ( interned_strings )		1387580	0					
ANR	1387730	UnaryOperationExpression	& ZCSG ( interned_strings )		1387580	0					
ANR	1387731	UnaryOperator	&		1387580	0					
ANR	1387732	CallExpression	ZCSG ( interned_strings )		1387580	1					
ANR	1387733	Callee	ZCSG		1387580	0					
ANR	1387734	Identifier	ZCSG		1387580	0					
ANR	1387735	ArgumentList	interned_strings		1387580	1					
ANR	1387736	Argument	interned_strings		1387580	0					
ANR	1387737	Identifier	interned_strings		1387580	0					
ANR	1387738	Argument	nIndex		1387580	1					
ANR	1387739	Identifier	nIndex		1387580	0					
ANR	1387740	CallExpression	HT_IDX_TO_HASH ( idx )		1387580	1					
ANR	1387741	Callee	HT_IDX_TO_HASH		1387580	0					
ANR	1387742	Identifier	HT_IDX_TO_HASH		1387580	0					
ANR	1387743	ArgumentList	idx		1387580	1					
ANR	1387744	Argument	idx		1387580	0					
ANR	1387745	Identifier	idx		1387580	0					
ANR	1387746	CompoundStatement		17:71:597:597	1387580	1					
ANR	1387747	ExpressionStatement	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) = Z_NEXT ( p -> val )"	264:3:7724:7781	1387580	0	True				
ANR	1387748	AssignmentExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) = Z_NEXT ( p -> val )"		1387580	0		=			
ANR	1387749	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1387580	0					
ANR	1387750	Callee	HT_HASH		1387580	0					
ANR	1387751	Identifier	HT_HASH		1387580	0					
ANR	1387752	ArgumentList	& ZCSG ( interned_strings )		1387580	1					
ANR	1387753	Argument	& ZCSG ( interned_strings )		1387580	0					
ANR	1387754	UnaryOperationExpression	& ZCSG ( interned_strings )		1387580	0					
ANR	1387755	UnaryOperator	&		1387580	0					
ANR	1387756	CallExpression	ZCSG ( interned_strings )		1387580	1					
ANR	1387757	Callee	ZCSG		1387580	0					
ANR	1387758	Identifier	ZCSG		1387580	0					
ANR	1387759	ArgumentList	interned_strings		1387580	1					
ANR	1387760	Argument	interned_strings		1387580	0					
ANR	1387761	Identifier	interned_strings		1387580	0					
ANR	1387762	Argument	nIndex		1387580	1					
ANR	1387763	Identifier	nIndex		1387580	0					
ANR	1387764	CallExpression	Z_NEXT ( p -> val )		1387580	1					
ANR	1387765	Callee	Z_NEXT		1387580	0					
ANR	1387766	Identifier	Z_NEXT		1387580	0					
ANR	1387767	ArgumentList	p -> val		1387580	1					
ANR	1387768	Argument	p -> val		1387580	0					
ANR	1387769	PtrMemberAccess	p -> val		1387580	0					
ANR	1387770	Identifier	p		1387580	0					
ANR	1387771	Identifier	val		1387580	1					
ANR	1387772	ElseStatement	else		1387580	0					
ANR	1387773	CompoundStatement		20:3:675:731	1387580	0					
ANR	1387774	IdentifierDeclStatement	"uint32_t prev = HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) ;"	266:3:7797:7853	1387580	0	True				
ANR	1387775	IdentifierDecl	"prev = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1387580	0					
ANR	1387776	IdentifierDeclType	uint32_t		1387580	0					
ANR	1387777	Identifier	prev		1387580	1					
ANR	1387778	AssignmentExpression	"prev = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1387580	2		=			
ANR	1387779	Identifier	prev		1387580	0					
ANR	1387780	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1387580	1					
ANR	1387781	Callee	HT_HASH		1387580	0					
ANR	1387782	Identifier	HT_HASH		1387580	0					
ANR	1387783	ArgumentList	& ZCSG ( interned_strings )		1387580	1					
ANR	1387784	Argument	& ZCSG ( interned_strings )		1387580	0					
ANR	1387785	UnaryOperationExpression	& ZCSG ( interned_strings )		1387580	0					
ANR	1387786	UnaryOperator	&		1387580	0					
ANR	1387787	CallExpression	ZCSG ( interned_strings )		1387580	1					
ANR	1387788	Callee	ZCSG		1387580	0					
ANR	1387789	Identifier	ZCSG		1387580	0					
ANR	1387790	ArgumentList	interned_strings		1387580	1					
ANR	1387791	Argument	interned_strings		1387580	0					
ANR	1387792	Identifier	interned_strings		1387580	0					
ANR	1387793	Argument	nIndex		1387580	1					
ANR	1387794	Identifier	nIndex		1387580	0					
ANR	1387795	WhileStatement	"while ( Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) != idx )"		1387580	1					
ANR	1387796	Condition	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) != idx"	267:10:7865:7932	1387580	0	True				
ANR	1387797	EqualityExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) != idx"		1387580	0		!=			
ANR	1387798	CallExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"		1387580	0					
ANR	1387799	Callee	Z_NEXT		1387580	0					
ANR	1387800	Identifier	Z_NEXT		1387580	0					
ANR	1387801	ArgumentList	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580	1					
ANR	1387802	Argument	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580	0					
ANR	1387803	PtrMemberAccess	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580	0					
ANR	1387804	CallExpression	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev )"		1387580	0					
ANR	1387805	Callee	HT_HASH_TO_BUCKET		1387580	0					
ANR	1387806	Identifier	HT_HASH_TO_BUCKET		1387580	0					
ANR	1387807	ArgumentList	& ZCSG ( interned_strings )		1387580	1					
ANR	1387808	Argument	& ZCSG ( interned_strings )		1387580	0					
ANR	1387809	UnaryOperationExpression	& ZCSG ( interned_strings )		1387580	0					
ANR	1387810	UnaryOperator	&		1387580	0					
ANR	1387811	CallExpression	ZCSG ( interned_strings )		1387580	1					
ANR	1387812	Callee	ZCSG		1387580	0					
ANR	1387813	Identifier	ZCSG		1387580	0					
ANR	1387814	ArgumentList	interned_strings		1387580	1					
ANR	1387815	Argument	interned_strings		1387580	0					
ANR	1387816	Identifier	interned_strings		1387580	0					
ANR	1387817	Argument	prev		1387580	1					
ANR	1387818	Identifier	prev		1387580	0					
ANR	1387819	Identifier	val		1387580	1					
ANR	1387820	Identifier	idx		1387580	1					
ANR	1387821	CompoundStatement		21:80:813:813	1387580	1					
ANR	1387822	ExpressionStatement	"prev = Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"	268:4:7941:8009	1387580	0	True				
ANR	1387823	AssignmentExpression	"prev = Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"		1387580	0		=			
ANR	1387824	Identifier	prev		1387580	0					
ANR	1387825	CallExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"		1387580	1					
ANR	1387826	Callee	Z_NEXT		1387580	0					
ANR	1387827	Identifier	Z_NEXT		1387580	0					
ANR	1387828	ArgumentList	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580	1					
ANR	1387829	Argument	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580	0					
ANR	1387830	PtrMemberAccess	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580	0					
ANR	1387831	CallExpression	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev )"		1387580	0					
ANR	1387832	Callee	HT_HASH_TO_BUCKET		1387580	0					
ANR	1387833	Identifier	HT_HASH_TO_BUCKET		1387580	0					
ANR	1387834	ArgumentList	& ZCSG ( interned_strings )		1387580	1					
ANR	1387835	Argument	& ZCSG ( interned_strings )		1387580	0					
ANR	1387836	UnaryOperationExpression	& ZCSG ( interned_strings )		1387580	0					
ANR	1387837	UnaryOperator	&		1387580	0					
ANR	1387838	CallExpression	ZCSG ( interned_strings )		1387580	1					
ANR	1387839	Callee	ZCSG		1387580	0					
ANR	1387840	Identifier	ZCSG		1387580	0					
ANR	1387841	ArgumentList	interned_strings		1387580	1					
ANR	1387842	Argument	interned_strings		1387580	0					
ANR	1387843	Identifier	interned_strings		1387580	0					
ANR	1387844	Argument	prev		1387580	1					
ANR	1387845	Identifier	prev		1387580	0					
ANR	1387846	Identifier	val		1387580	1					
ANR	1387847	ExpressionStatement	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) = Z_NEXT ( p -> val )"	270:3:8020:8098	1387580	2	True				
ANR	1387848	AssignmentExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val ) = Z_NEXT ( p -> val )"		1387580	0		=			
ANR	1387849	CallExpression	"Z_NEXT ( HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val )"		1387580	0					
ANR	1387850	Callee	Z_NEXT		1387580	0					
ANR	1387851	Identifier	Z_NEXT		1387580	0					
ANR	1387852	ArgumentList	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580	1					
ANR	1387853	Argument	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580	0					
ANR	1387854	PtrMemberAccess	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580	0					
ANR	1387855	CallExpression	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev )"		1387580	0					
ANR	1387856	Callee	HT_HASH_TO_BUCKET		1387580	0					
ANR	1387857	Identifier	HT_HASH_TO_BUCKET		1387580	0					
ANR	1387858	ArgumentList	& ZCSG ( interned_strings )		1387580	1					
ANR	1387859	Argument	& ZCSG ( interned_strings )		1387580	0					
ANR	1387860	UnaryOperationExpression	& ZCSG ( interned_strings )		1387580	0					
ANR	1387861	UnaryOperator	&		1387580	0					
ANR	1387862	CallExpression	ZCSG ( interned_strings )		1387580	1					
ANR	1387863	Callee	ZCSG		1387580	0					
ANR	1387864	Identifier	ZCSG		1387580	0					
ANR	1387865	ArgumentList	interned_strings		1387580	1					
ANR	1387866	Argument	interned_strings		1387580	0					
ANR	1387867	Identifier	interned_strings		1387580	0					
ANR	1387868	Argument	prev		1387580	1					
ANR	1387869	Identifier	prev		1387580	0					
ANR	1387870	Identifier	val		1387580	1					
ANR	1387871	CallExpression	Z_NEXT ( p -> val )		1387580	1					
ANR	1387872	Callee	Z_NEXT		1387580	0					
ANR	1387873	Identifier	Z_NEXT		1387580	0					
ANR	1387874	ArgumentList	p -> val		1387580	1					
ANR	1387875	Argument	p -> val		1387580	0					
ANR	1387876	PtrMemberAccess	p -> val		1387580	0					
ANR	1387877	Identifier	p		1387580	0					
ANR	1387878	Identifier	val		1387580	1					
ANR	1387879	ReturnType	static void		1387580	1					
ANR	1387880	Identifier	accel_interned_strings_restore_state		1387580	2					
ANR	1387881	ParameterList			1387580	3					
ANR	1387882	CFGEntryNode	ENTRY		1387580		True				
ANR	1387883	CFGExitNode	EXIT		1387580		True				
ANR	1387884	Symbol	* HT_HASH_TO_BUCKET		1387580						
ANR	1387885	Symbol	prev		1387580						
ANR	1387886	Symbol	nIndex		1387580						
ANR	1387887	Symbol	Z_NEXT		1387580						
ANR	1387888	Symbol	ZCSG ( interned_strings ) . nNumUsed		1387580						
ANR	1387889	Symbol	ZCSG ( interned_strings ) . arData		1387580						
ANR	1387890	Symbol	HT_IDX_TO_HASH		1387580						
ANR	1387891	Symbol	p -> val		1387580						
ANR	1387892	Symbol	p -> key		1387580						
ANR	1387893	Symbol	p		1387580						
ANR	1387894	Symbol	interned_strings_top		1387580						
ANR	1387895	Symbol	& ZCSG		1387580						
ANR	1387896	Symbol	ZCSG		1387580						
ANR	1387897	Symbol	HT_HASH		1387580						
ANR	1387898	Symbol	interned_strings_saved_top		1387580						
ANR	1387899	Symbol	ZCSG ( interned_strings ) . nTableMask		1387580						
ANR	1387900	Symbol	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , prev ) -> val"		1387580						
ANR	1387901	Symbol	* p		1387580						
ANR	1387902	Symbol	idx		1387580						
ANR	1387903	Symbol	interned_strings		1387580						
ANR	1387904	Symbol	ZCSG ( interned_strings ) . nNumOfElements		1387580						
ANR	1387905	Symbol	p -> h		1387580						
ANR	1387906	Symbol	HT_HASH_TO_BUCKET		1387580						
ANR	1387907	Function	accel_interned_strings_save_state	275:0:8111:8229							
ANR	1387908	FunctionDef	accel_interned_strings_save_state ()		1387907	0					
ANR	1387909	CompoundStatement		276:0:8163:8229	1387907	0					
ANR	1387910	ExpressionStatement	ZCSG ( interned_strings_saved_top ) = ZCSG ( interned_strings_top )	277:1:8166:8227	1387907	0	True				
ANR	1387911	AssignmentExpression	ZCSG ( interned_strings_saved_top ) = ZCSG ( interned_strings_top )		1387907	0		=			
ANR	1387912	CallExpression	ZCSG ( interned_strings_saved_top )		1387907	0					
ANR	1387913	Callee	ZCSG		1387907	0					
ANR	1387914	Identifier	ZCSG		1387907	0					
ANR	1387915	ArgumentList	interned_strings_saved_top		1387907	1					
ANR	1387916	Argument	interned_strings_saved_top		1387907	0					
ANR	1387917	Identifier	interned_strings_saved_top		1387907	0					
ANR	1387918	CallExpression	ZCSG ( interned_strings_top )		1387907	1					
ANR	1387919	Callee	ZCSG		1387907	0					
ANR	1387920	Identifier	ZCSG		1387907	0					
ANR	1387921	ArgumentList	interned_strings_top		1387907	1					
ANR	1387922	Argument	interned_strings_top		1387907	0					
ANR	1387923	Identifier	interned_strings_top		1387907	0					
ANR	1387924	ReturnType	static void		1387907	1					
ANR	1387925	Identifier	accel_interned_strings_save_state		1387907	2					
ANR	1387926	ParameterList			1387907	3					
ANR	1387927	CFGEntryNode	ENTRY		1387907		True				
ANR	1387928	CFGExitNode	EXIT		1387907		True				
ANR	1387929	Symbol	interned_strings_top		1387907						
ANR	1387930	Symbol	ZCSG		1387907						
ANR	1387931	Symbol	interned_strings_saved_top		1387907						
ANR	1387932	Function	accel_find_interned_string	282:0:8251:9024							
ANR	1387933	FunctionDef	accel_find_interned_string (zend_string * str)		1387932	0					
ANR	1387934	CompoundStatement		283:0:8316:9024	1387932	0					
ANR	1387935	IdentifierDeclStatement	zend_ulong h ;	285:1:8387:8399	1387932	0	True				
ANR	1387936	IdentifierDecl	h		1387932	0					
ANR	1387937	IdentifierDeclType	zend_ulong		1387932	0					
ANR	1387938	Identifier	h		1387932	1					
ANR	1387939	IdentifierDeclStatement	uint nIndex ;	286:1:8402:8413	1387932	1	True				
ANR	1387940	IdentifierDecl	nIndex		1387932	0					
ANR	1387941	IdentifierDeclType	uint		1387932	0					
ANR	1387942	Identifier	nIndex		1387932	1					
ANR	1387943	IdentifierDeclStatement	uint idx ;	287:1:8416:8424	1387932	2	True				
ANR	1387944	IdentifierDecl	idx		1387932	0					
ANR	1387945	IdentifierDeclType	uint		1387932	0					
ANR	1387946	Identifier	idx		1387932	1					
ANR	1387947	IdentifierDeclStatement	"Bucket * arData , * p ;"	288:1:8427:8445	1387932	3	True				
ANR	1387948	IdentifierDecl	* arData		1387932	0					
ANR	1387949	IdentifierDeclType	Bucket *		1387932	0					
ANR	1387950	Identifier	arData		1387932	1					
ANR	1387951	IdentifierDecl	* p		1387932	1					
ANR	1387952	IdentifierDeclType	Bucket *		1387932	0					
ANR	1387953	Identifier	p		1387932	1					
ANR	1387954	IfStatement	if ( IS_ACCEL_INTERNED ( str ) )		1387932	4					
ANR	1387955	Condition	IS_ACCEL_INTERNED ( str )	290:5:8453:8474	1387932	0	True				
ANR	1387956	CallExpression	IS_ACCEL_INTERNED ( str )		1387932	0					
ANR	1387957	Callee	IS_ACCEL_INTERNED		1387932	0					
ANR	1387958	Identifier	IS_ACCEL_INTERNED		1387932	0					
ANR	1387959	ArgumentList	str		1387932	1					
ANR	1387960	Argument	str		1387932	0					
ANR	1387961	Identifier	str		1387932	0					
ANR	1387962	CompoundStatement		8:29:160:160	1387932	1					
ANR	1387963	ReturnStatement	return str ;	292:2:8524:8534	1387932	0	True				
ANR	1387964	Identifier	str		1387932	0					
ANR	1387965	ExpressionStatement	h = zend_string_hash_val ( str )	295:1:8541:8570	1387932	5	True				
ANR	1387966	AssignmentExpression	h = zend_string_hash_val ( str )		1387932	0		=			
ANR	1387967	Identifier	h		1387932	0					
ANR	1387968	CallExpression	zend_string_hash_val ( str )		1387932	1					
ANR	1387969	Callee	zend_string_hash_val		1387932	0					
ANR	1387970	Identifier	zend_string_hash_val		1387932	0					
ANR	1387971	ArgumentList	str		1387932	1					
ANR	1387972	Argument	str		1387932	0					
ANR	1387973	Identifier	str		1387932	0					
ANR	1387974	ExpressionStatement	nIndex = h | ZCSG ( interned_strings ) . nTableMask	296:1:8573:8619	1387932	6	True				
ANR	1387975	AssignmentExpression	nIndex = h | ZCSG ( interned_strings ) . nTableMask		1387932	0		=			
ANR	1387976	Identifier	nIndex		1387932	0					
ANR	1387977	InclusiveOrExpression	h | ZCSG ( interned_strings ) . nTableMask		1387932	1		|			
ANR	1387978	Identifier	h		1387932	0					
ANR	1387979	MemberAccess	ZCSG ( interned_strings ) . nTableMask		1387932	1					
ANR	1387980	CallExpression	ZCSG ( interned_strings )		1387932	0					
ANR	1387981	Callee	ZCSG		1387932	0					
ANR	1387982	Identifier	ZCSG		1387932	0					
ANR	1387983	ArgumentList	interned_strings		1387932	1					
ANR	1387984	Argument	interned_strings		1387932	0					
ANR	1387985	Identifier	interned_strings		1387932	0					
ANR	1387986	Identifier	nTableMask		1387932	1					
ANR	1387987	ExpressionStatement	"idx = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"	299:1:8665:8711	1387932	7	True				
ANR	1387988	AssignmentExpression	"idx = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1387932	0		=			
ANR	1387989	Identifier	idx		1387932	0					
ANR	1387990	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1387932	1					
ANR	1387991	Callee	HT_HASH		1387932	0					
ANR	1387992	Identifier	HT_HASH		1387932	0					
ANR	1387993	ArgumentList	& ZCSG ( interned_strings )		1387932	1					
ANR	1387994	Argument	& ZCSG ( interned_strings )		1387932	0					
ANR	1387995	UnaryOperationExpression	& ZCSG ( interned_strings )		1387932	0					
ANR	1387996	UnaryOperator	&		1387932	0					
ANR	1387997	CallExpression	ZCSG ( interned_strings )		1387932	1					
ANR	1387998	Callee	ZCSG		1387932	0					
ANR	1387999	Identifier	ZCSG		1387932	0					
ANR	1388000	ArgumentList	interned_strings		1387932	1					
ANR	1388001	Argument	interned_strings		1387932	0					
ANR	1388002	Identifier	interned_strings		1387932	0					
ANR	1388003	Argument	nIndex		1387932	1					
ANR	1388004	Identifier	nIndex		1387932	0					
ANR	1388005	ExpressionStatement	arData = ZCSG ( interned_strings ) . arData	300:1:8714:8752	1387932	8	True				
ANR	1388006	AssignmentExpression	arData = ZCSG ( interned_strings ) . arData		1387932	0		=			
ANR	1388007	Identifier	arData		1387932	0					
ANR	1388008	MemberAccess	ZCSG ( interned_strings ) . arData		1387932	1					
ANR	1388009	CallExpression	ZCSG ( interned_strings )		1387932	0					
ANR	1388010	Callee	ZCSG		1387932	0					
ANR	1388011	Identifier	ZCSG		1387932	0					
ANR	1388012	ArgumentList	interned_strings		1387932	1					
ANR	1388013	Argument	interned_strings		1387932	0					
ANR	1388014	Identifier	interned_strings		1387932	0					
ANR	1388015	Identifier	arData		1387932	1					
ANR	1388016	WhileStatement	while ( idx != HT_INVALID_IDX )		1387932	9					
ANR	1388017	Condition	idx != HT_INVALID_IDX	301:8:8762:8782	1387932	0	True				
ANR	1388018	EqualityExpression	idx != HT_INVALID_IDX		1387932	0		!=			
ANR	1388019	Identifier	idx		1387932	0					
ANR	1388020	Identifier	HT_INVALID_IDX		1387932	1					
ANR	1388021	CompoundStatement		19:31:468:468	1387932	1					
ANR	1388022	ExpressionStatement	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"	302:2:8789:8826	1387932	0	True				
ANR	1388023	AssignmentExpression	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"		1387932	0		=			
ANR	1388024	Identifier	p		1387932	0					
ANR	1388025	CallExpression	"HT_HASH_TO_BUCKET_EX ( arData , idx )"		1387932	1					
ANR	1388026	Callee	HT_HASH_TO_BUCKET_EX		1387932	0					
ANR	1388027	Identifier	HT_HASH_TO_BUCKET_EX		1387932	0					
ANR	1388028	ArgumentList	arData		1387932	1					
ANR	1388029	Argument	arData		1387932	0					
ANR	1388030	Identifier	arData		1387932	0					
ANR	1388031	Argument	idx		1387932	1					
ANR	1388032	Identifier	idx		1387932	0					
ANR	1388033	IfStatement	if ( ( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) ) )		1387932	1					
ANR	1388034	Condition	( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) )	303:6:8834:8883	1387932	0	True				
ANR	1388035	AndExpression	( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) )		1387932	0		&&			
ANR	1388036	EqualityExpression	p -> h == h		1387932	0		==			
ANR	1388037	PtrMemberAccess	p -> h		1387932	0					
ANR	1388038	Identifier	p		1387932	0					
ANR	1388039	Identifier	h		1387932	1					
ANR	1388040	Identifier	h		1387932	1					
ANR	1388041	EqualityExpression	ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str )		1387932	1		==			
ANR	1388042	CallExpression	ZSTR_LEN ( p -> key )		1387932	0					
ANR	1388043	Callee	ZSTR_LEN		1387932	0					
ANR	1388044	Identifier	ZSTR_LEN		1387932	0					
ANR	1388045	ArgumentList	p -> key		1387932	1					
ANR	1388046	Argument	p -> key		1387932	0					
ANR	1388047	PtrMemberAccess	p -> key		1387932	0					
ANR	1388048	Identifier	p		1387932	0					
ANR	1388049	Identifier	key		1387932	1					
ANR	1388050	CallExpression	ZSTR_LEN ( str )		1387932	1					
ANR	1388051	Callee	ZSTR_LEN		1387932	0					
ANR	1388052	Identifier	ZSTR_LEN		1387932	0					
ANR	1388053	ArgumentList	str		1387932	1					
ANR	1388054	Argument	str		1387932	0					
ANR	1388055	Identifier	str		1387932	0					
ANR	1388056	CompoundStatement		21:58:569:569	1387932	1					
ANR	1388057	IfStatement	"if ( ! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) ) )"		1387932	0					
ANR	1388058	Condition	"! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"	304:7:8895:8949	1387932	0	True				
ANR	1388059	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		1387932	0					
ANR	1388060	UnaryOperator	!		1387932	0					
ANR	1388061	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		1387932	1					
ANR	1388062	Callee	memcmp		1387932	0					
ANR	1388063	Identifier	memcmp		1387932	0					
ANR	1388064	ArgumentList	ZSTR_VAL ( p -> key )		1387932	1					
ANR	1388065	Argument	ZSTR_VAL ( p -> key )		1387932	0					
ANR	1388066	CallExpression	ZSTR_VAL ( p -> key )		1387932	0					
ANR	1388067	Callee	ZSTR_VAL		1387932	0					
ANR	1388068	Identifier	ZSTR_VAL		1387932	0					
ANR	1388069	ArgumentList	p -> key		1387932	1					
ANR	1388070	Argument	p -> key		1387932	0					
ANR	1388071	PtrMemberAccess	p -> key		1387932	0					
ANR	1388072	Identifier	p		1387932	0					
ANR	1388073	Identifier	key		1387932	1					
ANR	1388074	Argument	ZSTR_VAL ( str )		1387932	1					
ANR	1388075	CallExpression	ZSTR_VAL ( str )		1387932	0					
ANR	1388076	Callee	ZSTR_VAL		1387932	0					
ANR	1388077	Identifier	ZSTR_VAL		1387932	0					
ANR	1388078	ArgumentList	str		1387932	1					
ANR	1388079	Argument	str		1387932	0					
ANR	1388080	Identifier	str		1387932	0					
ANR	1388081	Argument	ZSTR_LEN ( str )		1387932	2					
ANR	1388082	CallExpression	ZSTR_LEN ( str )		1387932	0					
ANR	1388083	Callee	ZSTR_LEN		1387932	0					
ANR	1388084	Identifier	ZSTR_LEN		1387932	0					
ANR	1388085	ArgumentList	str		1387932	1					
ANR	1388086	Argument	str		1387932	0					
ANR	1388087	Identifier	str		1387932	0					
ANR	1388088	CompoundStatement		22:64:635:635	1387932	1					
ANR	1388089	ReturnStatement	return p -> key ;	305:4:8958:8971	1387932	0	True				
ANR	1388090	PtrMemberAccess	p -> key		1387932	0					
ANR	1388091	Identifier	p		1387932	0					
ANR	1388092	Identifier	key		1387932	1					
ANR	1388093	ExpressionStatement	idx = Z_NEXT ( p -> val )	308:2:8984:9004	1387932	2	True				
ANR	1388094	AssignmentExpression	idx = Z_NEXT ( p -> val )		1387932	0		=			
ANR	1388095	Identifier	idx		1387932	0					
ANR	1388096	CallExpression	Z_NEXT ( p -> val )		1387932	1					
ANR	1388097	Callee	Z_NEXT		1387932	0					
ANR	1388098	Identifier	Z_NEXT		1387932	0					
ANR	1388099	ArgumentList	p -> val		1387932	1					
ANR	1388100	Argument	p -> val		1387932	0					
ANR	1388101	PtrMemberAccess	p -> val		1387932	0					
ANR	1388102	Identifier	p		1387932	0					
ANR	1388103	Identifier	val		1387932	1					
ANR	1388104	ReturnStatement	return NULL ;	311:1:9011:9022	1387932	10	True				
ANR	1388105	Identifier	NULL		1387932	0					
ANR	1388106	ReturnType	static zend_string *		1387932	1					
ANR	1388107	Identifier	accel_find_interned_string		1387932	2					
ANR	1388108	ParameterList	zend_string * str		1387932	3					
ANR	1388109	Parameter	zend_string * str	282:47:8298:8313	1387932	0	True				
ANR	1388110	ParameterType	zend_string *		1387932	0					
ANR	1388111	Identifier	str		1387932	1					
ANR	1388112	CFGEntryNode	ENTRY		1387932		True				
ANR	1388113	CFGExitNode	EXIT		1387932		True				
ANR	1388114	Symbol	IS_ACCEL_INTERNED		1387932						
ANR	1388115	Symbol	Z_NEXT		1387932						
ANR	1388116	Symbol	ZCSG ( interned_strings ) . arData		1387932						
ANR	1388117	Symbol	memcmp		1387932						
ANR	1388118	Symbol	ZCSG		1387932						
ANR	1388119	Symbol	HT_HASH		1387932						
ANR	1388120	Symbol	arData		1387932						
ANR	1388121	Symbol	zend_string_hash_val		1387932						
ANR	1388122	Symbol	p -> h		1387932						
ANR	1388123	Symbol	HT_INVALID_IDX		1387932						
ANR	1388124	Symbol	NULL		1387932						
ANR	1388125	Symbol	h		1387932						
ANR	1388126	Symbol	nIndex		1387932						
ANR	1388127	Symbol	p -> val		1387932						
ANR	1388128	Symbol	p -> key		1387932						
ANR	1388129	Symbol	ZSTR_VAL		1387932						
ANR	1388130	Symbol	str		1387932						
ANR	1388131	Symbol	p		1387932						
ANR	1388132	Symbol	& ZCSG		1387932						
ANR	1388133	Symbol	ZCSG ( interned_strings ) . nTableMask		1387932						
ANR	1388134	Symbol	HT_HASH_TO_BUCKET_EX		1387932						
ANR	1388135	Symbol	ZSTR_LEN		1387932						
ANR	1388136	Symbol	* p		1387932						
ANR	1388137	Symbol	idx		1387932						
ANR	1388138	Symbol	interned_strings		1387932						
ANR	1388139	Function	accel_new_interned_string	315:0:9034:11118							
ANR	1388140	FunctionDef	accel_new_interned_string (zend_string * str)		1388139	0					
ANR	1388141	CompoundStatement		316:0:9091:11118	1388139	0					
ANR	1388142	IdentifierDeclStatement	zend_ulong h ;	319:1:9174:9186	1388139	0	True				
ANR	1388143	IdentifierDecl	h		1388139	0					
ANR	1388144	IdentifierDeclType	zend_ulong		1388139	0					
ANR	1388145	Identifier	h		1388139	1					
ANR	1388146	IdentifierDeclStatement	uint nIndex ;	320:1:9189:9200	1388139	1	True				
ANR	1388147	IdentifierDecl	nIndex		1388139	0					
ANR	1388148	IdentifierDeclType	uint		1388139	0					
ANR	1388149	Identifier	nIndex		1388139	1					
ANR	1388150	IdentifierDeclStatement	uint idx ;	321:1:9203:9211	1388139	2	True				
ANR	1388151	IdentifierDecl	idx		1388139	0					
ANR	1388152	IdentifierDeclType	uint		1388139	0					
ANR	1388153	Identifier	idx		1388139	1					
ANR	1388154	IdentifierDeclStatement	Bucket * p ;	322:1:9214:9223	1388139	3	True				
ANR	1388155	IdentifierDecl	* p		1388139	0					
ANR	1388156	IdentifierDeclType	Bucket *		1388139	0					
ANR	1388157	Identifier	p		1388139	1					
ANR	1388158	IfStatement	if ( ZCG ( accel_directives ) . file_cache_only )		1388139	4					
ANR	1388159	Condition	ZCG ( accel_directives ) . file_cache_only	325:5:9262:9298	1388139	0	True				
ANR	1388160	MemberAccess	ZCG ( accel_directives ) . file_cache_only		1388139	0					
ANR	1388161	CallExpression	ZCG ( accel_directives )		1388139	0					
ANR	1388162	Callee	ZCG		1388139	0					
ANR	1388163	Identifier	ZCG		1388139	0					
ANR	1388164	ArgumentList	accel_directives		1388139	1					
ANR	1388165	Argument	accel_directives		1388139	0					
ANR	1388166	Identifier	accel_directives		1388139	0					
ANR	1388167	Identifier	file_cache_only		1388139	1					
ANR	1388168	CompoundStatement		10:44:209:209	1388139	1					
ANR	1388169	ReturnStatement	return str ;	326:2:9305:9315	1388139	0	True				
ANR	1388170	Identifier	str		1388139	0					
ANR	1388171	IfStatement	if ( IS_ACCEL_INTERNED ( str ) )		1388139	5					
ANR	1388172	Condition	IS_ACCEL_INTERNED ( str )	330:5:9333:9354	1388139	0	True				
ANR	1388173	CallExpression	IS_ACCEL_INTERNED ( str )		1388139	0					
ANR	1388174	Callee	IS_ACCEL_INTERNED		1388139	0					
ANR	1388175	Identifier	IS_ACCEL_INTERNED		1388139	0					
ANR	1388176	ArgumentList	str		1388139	1					
ANR	1388177	Argument	str		1388139	0					
ANR	1388178	Identifier	str		1388139	0					
ANR	1388179	CompoundStatement		15:29:265:265	1388139	1					
ANR	1388180	ReturnStatement	return str ;	332:2:9404:9414	1388139	0	True				
ANR	1388181	Identifier	str		1388139	0					
ANR	1388182	ExpressionStatement	h = zend_string_hash_val ( str )	335:1:9421:9450	1388139	6	True				
ANR	1388183	AssignmentExpression	h = zend_string_hash_val ( str )		1388139	0		=			
ANR	1388184	Identifier	h		1388139	0					
ANR	1388185	CallExpression	zend_string_hash_val ( str )		1388139	1					
ANR	1388186	Callee	zend_string_hash_val		1388139	0					
ANR	1388187	Identifier	zend_string_hash_val		1388139	0					
ANR	1388188	ArgumentList	str		1388139	1					
ANR	1388189	Argument	str		1388139	0					
ANR	1388190	Identifier	str		1388139	0					
ANR	1388191	ExpressionStatement	nIndex = h | ZCSG ( interned_strings ) . nTableMask	336:1:9453:9499	1388139	7	True				
ANR	1388192	AssignmentExpression	nIndex = h | ZCSG ( interned_strings ) . nTableMask		1388139	0		=			
ANR	1388193	Identifier	nIndex		1388139	0					
ANR	1388194	InclusiveOrExpression	h | ZCSG ( interned_strings ) . nTableMask		1388139	1		|			
ANR	1388195	Identifier	h		1388139	0					
ANR	1388196	MemberAccess	ZCSG ( interned_strings ) . nTableMask		1388139	1					
ANR	1388197	CallExpression	ZCSG ( interned_strings )		1388139	0					
ANR	1388198	Callee	ZCSG		1388139	0					
ANR	1388199	Identifier	ZCSG		1388139	0					
ANR	1388200	ArgumentList	interned_strings		1388139	1					
ANR	1388201	Argument	interned_strings		1388139	0					
ANR	1388202	Identifier	interned_strings		1388139	0					
ANR	1388203	Identifier	nTableMask		1388139	1					
ANR	1388204	ExpressionStatement	"idx = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"	339:1:9545:9591	1388139	8	True				
ANR	1388205	AssignmentExpression	"idx = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1388139	0		=			
ANR	1388206	Identifier	idx		1388139	0					
ANR	1388207	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1388139	1					
ANR	1388208	Callee	HT_HASH		1388139	0					
ANR	1388209	Identifier	HT_HASH		1388139	0					
ANR	1388210	ArgumentList	& ZCSG ( interned_strings )		1388139	1					
ANR	1388211	Argument	& ZCSG ( interned_strings )		1388139	0					
ANR	1388212	UnaryOperationExpression	& ZCSG ( interned_strings )		1388139	0					
ANR	1388213	UnaryOperator	&		1388139	0					
ANR	1388214	CallExpression	ZCSG ( interned_strings )		1388139	1					
ANR	1388215	Callee	ZCSG		1388139	0					
ANR	1388216	Identifier	ZCSG		1388139	0					
ANR	1388217	ArgumentList	interned_strings		1388139	1					
ANR	1388218	Argument	interned_strings		1388139	0					
ANR	1388219	Identifier	interned_strings		1388139	0					
ANR	1388220	Argument	nIndex		1388139	1					
ANR	1388221	Identifier	nIndex		1388139	0					
ANR	1388222	WhileStatement	while ( idx != HT_INVALID_IDX )		1388139	9					
ANR	1388223	Condition	idx != HT_INVALID_IDX	340:8:9601:9621	1388139	0	True				
ANR	1388224	EqualityExpression	idx != HT_INVALID_IDX		1388139	0		!=			
ANR	1388225	Identifier	idx		1388139	0					
ANR	1388226	Identifier	HT_INVALID_IDX		1388139	1					
ANR	1388227	CompoundStatement		25:31:532:532	1388139	1					
ANR	1388228	ExpressionStatement	"p = HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , idx )"	341:2:9628:9679	1388139	0	True				
ANR	1388229	AssignmentExpression	"p = HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , idx )"		1388139	0		=			
ANR	1388230	Identifier	p		1388139	0					
ANR	1388231	CallExpression	"HT_HASH_TO_BUCKET ( & ZCSG ( interned_strings ) , idx )"		1388139	1					
ANR	1388232	Callee	HT_HASH_TO_BUCKET		1388139	0					
ANR	1388233	Identifier	HT_HASH_TO_BUCKET		1388139	0					
ANR	1388234	ArgumentList	& ZCSG ( interned_strings )		1388139	1					
ANR	1388235	Argument	& ZCSG ( interned_strings )		1388139	0					
ANR	1388236	UnaryOperationExpression	& ZCSG ( interned_strings )		1388139	0					
ANR	1388237	UnaryOperator	&		1388139	0					
ANR	1388238	CallExpression	ZCSG ( interned_strings )		1388139	1					
ANR	1388239	Callee	ZCSG		1388139	0					
ANR	1388240	Identifier	ZCSG		1388139	0					
ANR	1388241	ArgumentList	interned_strings		1388139	1					
ANR	1388242	Argument	interned_strings		1388139	0					
ANR	1388243	Identifier	interned_strings		1388139	0					
ANR	1388244	Argument	idx		1388139	1					
ANR	1388245	Identifier	idx		1388139	0					
ANR	1388246	IfStatement	if ( ( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) ) )		1388139	1					
ANR	1388247	Condition	( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) )	342:6:9687:9736	1388139	0	True				
ANR	1388248	AndExpression	( p -> h == h ) && ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str ) )		1388139	0		&&			
ANR	1388249	EqualityExpression	p -> h == h		1388139	0		==			
ANR	1388250	PtrMemberAccess	p -> h		1388139	0					
ANR	1388251	Identifier	p		1388139	0					
ANR	1388252	Identifier	h		1388139	1					
ANR	1388253	Identifier	h		1388139	1					
ANR	1388254	EqualityExpression	ZSTR_LEN ( p -> key ) == ZSTR_LEN ( str )		1388139	1		==			
ANR	1388255	CallExpression	ZSTR_LEN ( p -> key )		1388139	0					
ANR	1388256	Callee	ZSTR_LEN		1388139	0					
ANR	1388257	Identifier	ZSTR_LEN		1388139	0					
ANR	1388258	ArgumentList	p -> key		1388139	1					
ANR	1388259	Argument	p -> key		1388139	0					
ANR	1388260	PtrMemberAccess	p -> key		1388139	0					
ANR	1388261	Identifier	p		1388139	0					
ANR	1388262	Identifier	key		1388139	1					
ANR	1388263	CallExpression	ZSTR_LEN ( str )		1388139	1					
ANR	1388264	Callee	ZSTR_LEN		1388139	0					
ANR	1388265	Identifier	ZSTR_LEN		1388139	0					
ANR	1388266	ArgumentList	str		1388139	1					
ANR	1388267	Argument	str		1388139	0					
ANR	1388268	Identifier	str		1388139	0					
ANR	1388269	CompoundStatement		27:58:647:647	1388139	1					
ANR	1388270	IfStatement	"if ( ! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) ) )"		1388139	0					
ANR	1388271	Condition	"! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"	343:7:9748:9802	1388139	0	True				
ANR	1388272	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		1388139	0					
ANR	1388273	UnaryOperator	!		1388139	0					
ANR	1388274	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		1388139	1					
ANR	1388275	Callee	memcmp		1388139	0					
ANR	1388276	Identifier	memcmp		1388139	0					
ANR	1388277	ArgumentList	ZSTR_VAL ( p -> key )		1388139	1					
ANR	1388278	Argument	ZSTR_VAL ( p -> key )		1388139	0					
ANR	1388279	CallExpression	ZSTR_VAL ( p -> key )		1388139	0					
ANR	1388280	Callee	ZSTR_VAL		1388139	0					
ANR	1388281	Identifier	ZSTR_VAL		1388139	0					
ANR	1388282	ArgumentList	p -> key		1388139	1					
ANR	1388283	Argument	p -> key		1388139	0					
ANR	1388284	PtrMemberAccess	p -> key		1388139	0					
ANR	1388285	Identifier	p		1388139	0					
ANR	1388286	Identifier	key		1388139	1					
ANR	1388287	Argument	ZSTR_VAL ( str )		1388139	1					
ANR	1388288	CallExpression	ZSTR_VAL ( str )		1388139	0					
ANR	1388289	Callee	ZSTR_VAL		1388139	0					
ANR	1388290	Identifier	ZSTR_VAL		1388139	0					
ANR	1388291	ArgumentList	str		1388139	1					
ANR	1388292	Argument	str		1388139	0					
ANR	1388293	Identifier	str		1388139	0					
ANR	1388294	Argument	ZSTR_LEN ( str )		1388139	2					
ANR	1388295	CallExpression	ZSTR_LEN ( str )		1388139	0					
ANR	1388296	Callee	ZSTR_LEN		1388139	0					
ANR	1388297	Identifier	ZSTR_LEN		1388139	0					
ANR	1388298	ArgumentList	str		1388139	1					
ANR	1388299	Argument	str		1388139	0					
ANR	1388300	Identifier	str		1388139	0					
ANR	1388301	CompoundStatement		28:64:713:713	1388139	1					
ANR	1388302	ExpressionStatement	zend_string_release ( str )	344:4:9811:9835	1388139	0	True				
ANR	1388303	CallExpression	zend_string_release ( str )		1388139	0					
ANR	1388304	Callee	zend_string_release		1388139	0					
ANR	1388305	Identifier	zend_string_release		1388139	0					
ANR	1388306	ArgumentList	str		1388139	1					
ANR	1388307	Argument	str		1388139	0					
ANR	1388308	Identifier	str		1388139	0					
ANR	1388309	ReturnStatement	return p -> key ;	345:4:9841:9854	1388139	1	True				
ANR	1388310	PtrMemberAccess	p -> key		1388139	0					
ANR	1388311	Identifier	p		1388139	0					
ANR	1388312	Identifier	key		1388139	1					
ANR	1388313	ExpressionStatement	idx = Z_NEXT ( p -> val )	348:2:9867:9887	1388139	2	True				
ANR	1388314	AssignmentExpression	idx = Z_NEXT ( p -> val )		1388139	0		=			
ANR	1388315	Identifier	idx		1388139	0					
ANR	1388316	CallExpression	Z_NEXT ( p -> val )		1388139	1					
ANR	1388317	Callee	Z_NEXT		1388139	0					
ANR	1388318	Identifier	Z_NEXT		1388139	0					
ANR	1388319	ArgumentList	p -> val		1388139	1					
ANR	1388320	Argument	p -> val		1388139	0					
ANR	1388321	PtrMemberAccess	p -> val		1388139	0					
ANR	1388322	Identifier	p		1388139	0					
ANR	1388323	Identifier	val		1388139	1					
ANR	1388324	IfStatement	if ( ZCSG ( interned_strings_top ) + ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) ) >= ZCSG ( interned_strings_end ) )		1388139	10					
ANR	1388325	Condition	ZCSG ( interned_strings_top ) + ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) ) >= ZCSG ( interned_strings_end )	351:5:9898:10015	1388139	0	True				
ANR	1388326	RelationalExpression	ZCSG ( interned_strings_top ) + ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) ) >= ZCSG ( interned_strings_end )		1388139	0		>=			
ANR	1388327	AdditiveExpression	ZCSG ( interned_strings_top ) + ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )		1388139	0		+			
ANR	1388328	CallExpression	ZCSG ( interned_strings_top )		1388139	0					
ANR	1388329	Callee	ZCSG		1388139	0					
ANR	1388330	Identifier	ZCSG		1388139	0					
ANR	1388331	ArgumentList	interned_strings_top		1388139	1					
ANR	1388332	Argument	interned_strings_top		1388139	0					
ANR	1388333	Identifier	interned_strings_top		1388139	0					
ANR	1388334	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )		1388139	1					
ANR	1388335	Callee	ZEND_MM_ALIGNED_SIZE		1388139	0					
ANR	1388336	Identifier	ZEND_MM_ALIGNED_SIZE		1388139	0					
ANR	1388337	ArgumentList	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		1388139	1					
ANR	1388338	Argument	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		1388139	0					
ANR	1388339	CallExpression	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		1388139	0					
ANR	1388340	Callee	_ZSTR_STRUCT_SIZE		1388139	0					
ANR	1388341	Identifier	_ZSTR_STRUCT_SIZE		1388139	0					
ANR	1388342	ArgumentList	ZSTR_LEN ( str )		1388139	1					
ANR	1388343	Argument	ZSTR_LEN ( str )		1388139	0					
ANR	1388344	CallExpression	ZSTR_LEN ( str )		1388139	0					
ANR	1388345	Callee	ZSTR_LEN		1388139	0					
ANR	1388346	Identifier	ZSTR_LEN		1388139	0					
ANR	1388347	ArgumentList	str		1388139	1					
ANR	1388348	Argument	str		1388139	0					
ANR	1388349	Identifier	str		1388139	0					
ANR	1388350	CallExpression	ZCSG ( interned_strings_end )		1388139	1					
ANR	1388351	Callee	ZCSG		1388139	0					
ANR	1388352	Identifier	ZCSG		1388139	0					
ANR	1388353	ArgumentList	interned_strings_end		1388139	1					
ANR	1388354	Argument	interned_strings_end		1388139	0					
ANR	1388355	Identifier	interned_strings_end		1388139	0					
ANR	1388356	CompoundStatement		37:33:926:926	1388139	1					
ANR	1388357	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_WARNING , ""Interned string buffer overflow"" )"	354:2:10080:10150	1388139	0	True				
ANR	1388358	CallExpression	"zend_accel_error ( ACCEL_LOG_WARNING , ""Interned string buffer overflow"" )"		1388139	0					
ANR	1388359	Callee	zend_accel_error		1388139	0					
ANR	1388360	Identifier	zend_accel_error		1388139	0					
ANR	1388361	ArgumentList	ACCEL_LOG_WARNING		1388139	1					
ANR	1388362	Argument	ACCEL_LOG_WARNING		1388139	0					
ANR	1388363	Identifier	ACCEL_LOG_WARNING		1388139	0					
ANR	1388364	Argument	"""Interned string buffer overflow"""		1388139	1					
ANR	1388365	PrimaryExpression	"""Interned string buffer overflow"""		1388139	0					
ANR	1388366	ReturnStatement	return str ;	355:2:10154:10164	1388139	1	True				
ANR	1388367	Identifier	str		1388139	0					
ANR	1388368	ExpressionStatement	idx = ZCSG ( interned_strings ) . nNumUsed ++	360:1:10241:10280	1388139	11	True				
ANR	1388369	AssignmentExpression	idx = ZCSG ( interned_strings ) . nNumUsed ++		1388139	0		=			
ANR	1388370	Identifier	idx		1388139	0					
ANR	1388371	PostIncDecOperationExpression	ZCSG ( interned_strings ) . nNumUsed ++		1388139	1					
ANR	1388372	MemberAccess	ZCSG ( interned_strings ) . nNumUsed		1388139	0					
ANR	1388373	CallExpression	ZCSG ( interned_strings )		1388139	0					
ANR	1388374	Callee	ZCSG		1388139	0					
ANR	1388375	Identifier	ZCSG		1388139	0					
ANR	1388376	ArgumentList	interned_strings		1388139	1					
ANR	1388377	Argument	interned_strings		1388139	0					
ANR	1388378	Identifier	interned_strings		1388139	0					
ANR	1388379	Identifier	nNumUsed		1388139	1					
ANR	1388380	IncDec	++		1388139	1					
ANR	1388381	ExpressionStatement	ZCSG ( interned_strings ) . nNumOfElements ++	361:1:10283:10322	1388139	12	True				
ANR	1388382	PostIncDecOperationExpression	ZCSG ( interned_strings ) . nNumOfElements ++		1388139	0					
ANR	1388383	MemberAccess	ZCSG ( interned_strings ) . nNumOfElements		1388139	0					
ANR	1388384	CallExpression	ZCSG ( interned_strings )		1388139	0					
ANR	1388385	Callee	ZCSG		1388139	0					
ANR	1388386	Identifier	ZCSG		1388139	0					
ANR	1388387	ArgumentList	interned_strings		1388139	1					
ANR	1388388	Argument	interned_strings		1388139	0					
ANR	1388389	Identifier	interned_strings		1388139	0					
ANR	1388390	Identifier	nNumOfElements		1388139	1					
ANR	1388391	IncDec	++		1388139	1					
ANR	1388392	ExpressionStatement	p = ZCSG ( interned_strings ) . arData + idx	362:1:10325:10364	1388139	13	True				
ANR	1388393	AssignmentExpression	p = ZCSG ( interned_strings ) . arData + idx		1388139	0		=			
ANR	1388394	Identifier	p		1388139	0					
ANR	1388395	AdditiveExpression	ZCSG ( interned_strings ) . arData + idx		1388139	1		+			
ANR	1388396	MemberAccess	ZCSG ( interned_strings ) . arData		1388139	0					
ANR	1388397	CallExpression	ZCSG ( interned_strings )		1388139	0					
ANR	1388398	Callee	ZCSG		1388139	0					
ANR	1388399	Identifier	ZCSG		1388139	0					
ANR	1388400	ArgumentList	interned_strings		1388139	1					
ANR	1388401	Argument	interned_strings		1388139	0					
ANR	1388402	Identifier	interned_strings		1388139	0					
ANR	1388403	Identifier	arData		1388139	1					
ANR	1388404	Identifier	idx		1388139	1					
ANR	1388405	ExpressionStatement	p -> key = ( zend_string * ) ZCSG ( interned_strings_top )	363:1:10367:10417	1388139	14	True				
ANR	1388406	AssignmentExpression	p -> key = ( zend_string * ) ZCSG ( interned_strings_top )		1388139	0		=			
ANR	1388407	PtrMemberAccess	p -> key		1388139	0					
ANR	1388408	Identifier	p		1388139	0					
ANR	1388409	Identifier	key		1388139	1					
ANR	1388410	CastExpression	( zend_string * ) ZCSG ( interned_strings_top )		1388139	1					
ANR	1388411	CastTarget	zend_string *		1388139	0					
ANR	1388412	CallExpression	ZCSG ( interned_strings_top )		1388139	1					
ANR	1388413	Callee	ZCSG		1388139	0					
ANR	1388414	Identifier	ZCSG		1388139	0					
ANR	1388415	ArgumentList	interned_strings_top		1388139	1					
ANR	1388416	Argument	interned_strings_top		1388139	0					
ANR	1388417	Identifier	interned_strings_top		1388139	0					
ANR	1388418	ExpressionStatement	ZCSG ( interned_strings_top ) += ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )	364:1:10420:10504	1388139	15	True				
ANR	1388419	AssignmentExpression	ZCSG ( interned_strings_top ) += ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )		1388139	0		+=			
ANR	1388420	CallExpression	ZCSG ( interned_strings_top )		1388139	0					
ANR	1388421	Callee	ZCSG		1388139	0					
ANR	1388422	Identifier	ZCSG		1388139	0					
ANR	1388423	ArgumentList	interned_strings_top		1388139	1					
ANR	1388424	Argument	interned_strings_top		1388139	0					
ANR	1388425	Identifier	interned_strings_top		1388139	0					
ANR	1388426	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) ) )		1388139	1					
ANR	1388427	Callee	ZEND_MM_ALIGNED_SIZE		1388139	0					
ANR	1388428	Identifier	ZEND_MM_ALIGNED_SIZE		1388139	0					
ANR	1388429	ArgumentList	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		1388139	1					
ANR	1388430	Argument	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		1388139	0					
ANR	1388431	CallExpression	_ZSTR_STRUCT_SIZE ( ZSTR_LEN ( str ) )		1388139	0					
ANR	1388432	Callee	_ZSTR_STRUCT_SIZE		1388139	0					
ANR	1388433	Identifier	_ZSTR_STRUCT_SIZE		1388139	0					
ANR	1388434	ArgumentList	ZSTR_LEN ( str )		1388139	1					
ANR	1388435	Argument	ZSTR_LEN ( str )		1388139	0					
ANR	1388436	CallExpression	ZSTR_LEN ( str )		1388139	0					
ANR	1388437	Callee	ZSTR_LEN		1388139	0					
ANR	1388438	Identifier	ZSTR_LEN		1388139	0					
ANR	1388439	ArgumentList	str		1388139	1					
ANR	1388440	Argument	str		1388139	0					
ANR	1388441	Identifier	str		1388139	0					
ANR	1388442	ExpressionStatement	p -> h = h	365:1:10507:10515	1388139	16	True				
ANR	1388443	AssignmentExpression	p -> h = h		1388139	0		=			
ANR	1388444	PtrMemberAccess	p -> h		1388139	0					
ANR	1388445	Identifier	p		1388139	0					
ANR	1388446	Identifier	h		1388139	1					
ANR	1388447	Identifier	h		1388139	1					
ANR	1388448	ExpressionStatement	GC_REFCOUNT ( p -> key ) = 1	366:1:10518:10541	1388139	17	True				
ANR	1388449	AssignmentExpression	GC_REFCOUNT ( p -> key ) = 1		1388139	0		=			
ANR	1388450	CallExpression	GC_REFCOUNT ( p -> key )		1388139	0					
ANR	1388451	Callee	GC_REFCOUNT		1388139	0					
ANR	1388452	Identifier	GC_REFCOUNT		1388139	0					
ANR	1388453	ArgumentList	p -> key		1388139	1					
ANR	1388454	Argument	p -> key		1388139	0					
ANR	1388455	PtrMemberAccess	p -> key		1388139	0					
ANR	1388456	Identifier	p		1388139	0					
ANR	1388457	Identifier	key		1388139	1					
ANR	1388458	PrimaryExpression	1		1388139	1					
ANR	1388459	ExpressionStatement	GC_TYPE_INFO ( p -> key ) = IS_STRING | ( ( IS_STR_INTERNED | IS_STR_PERMANENT ) << 8 )	369:1:10585:10663	1388139	18	True				
ANR	1388460	AssignmentExpression	GC_TYPE_INFO ( p -> key ) = IS_STRING | ( ( IS_STR_INTERNED | IS_STR_PERMANENT ) << 8 )		1388139	0		=			
ANR	1388461	CallExpression	GC_TYPE_INFO ( p -> key )		1388139	0					
ANR	1388462	Callee	GC_TYPE_INFO		1388139	0					
ANR	1388463	Identifier	GC_TYPE_INFO		1388139	0					
ANR	1388464	ArgumentList	p -> key		1388139	1					
ANR	1388465	Argument	p -> key		1388139	0					
ANR	1388466	PtrMemberAccess	p -> key		1388139	0					
ANR	1388467	Identifier	p		1388139	0					
ANR	1388468	Identifier	key		1388139	1					
ANR	1388469	InclusiveOrExpression	IS_STRING | ( ( IS_STR_INTERNED | IS_STR_PERMANENT ) << 8 )		1388139	1		|			
ANR	1388470	Identifier	IS_STRING		1388139	0					
ANR	1388471	ShiftExpression	( IS_STR_INTERNED | IS_STR_PERMANENT ) << 8		1388139	1		<<			
ANR	1388472	InclusiveOrExpression	IS_STR_INTERNED | IS_STR_PERMANENT		1388139	0		|			
ANR	1388473	Identifier	IS_STR_INTERNED		1388139	0					
ANR	1388474	Identifier	IS_STR_PERMANENT		1388139	1					
ANR	1388475	PrimaryExpression	8		1388139	1					
ANR	1388476	ExpressionStatement	ZSTR_H ( p -> key ) = ZSTR_H ( str )	374:1:10765:10793	1388139	19	True				
ANR	1388477	AssignmentExpression	ZSTR_H ( p -> key ) = ZSTR_H ( str )		1388139	0		=			
ANR	1388478	CallExpression	ZSTR_H ( p -> key )		1388139	0					
ANR	1388479	Callee	ZSTR_H		1388139	0					
ANR	1388480	Identifier	ZSTR_H		1388139	0					
ANR	1388481	ArgumentList	p -> key		1388139	1					
ANR	1388482	Argument	p -> key		1388139	0					
ANR	1388483	PtrMemberAccess	p -> key		1388139	0					
ANR	1388484	Identifier	p		1388139	0					
ANR	1388485	Identifier	key		1388139	1					
ANR	1388486	CallExpression	ZSTR_H ( str )		1388139	1					
ANR	1388487	Callee	ZSTR_H		1388139	0					
ANR	1388488	Identifier	ZSTR_H		1388139	0					
ANR	1388489	ArgumentList	str		1388139	1					
ANR	1388490	Argument	str		1388139	0					
ANR	1388491	Identifier	str		1388139	0					
ANR	1388492	ExpressionStatement	ZSTR_LEN ( p -> key ) = ZSTR_LEN ( str )	375:1:10796:10828	1388139	20	True				
ANR	1388493	AssignmentExpression	ZSTR_LEN ( p -> key ) = ZSTR_LEN ( str )		1388139	0		=			
ANR	1388494	CallExpression	ZSTR_LEN ( p -> key )		1388139	0					
ANR	1388495	Callee	ZSTR_LEN		1388139	0					
ANR	1388496	Identifier	ZSTR_LEN		1388139	0					
ANR	1388497	ArgumentList	p -> key		1388139	1					
ANR	1388498	Argument	p -> key		1388139	0					
ANR	1388499	PtrMemberAccess	p -> key		1388139	0					
ANR	1388500	Identifier	p		1388139	0					
ANR	1388501	Identifier	key		1388139	1					
ANR	1388502	CallExpression	ZSTR_LEN ( str )		1388139	1					
ANR	1388503	Callee	ZSTR_LEN		1388139	0					
ANR	1388504	Identifier	ZSTR_LEN		1388139	0					
ANR	1388505	ArgumentList	str		1388139	1					
ANR	1388506	Argument	str		1388139	0					
ANR	1388507	Identifier	str		1388139	0					
ANR	1388508	ExpressionStatement	"memcpy ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"	376:1:10831:10885	1388139	21	True				
ANR	1388509	CallExpression	"memcpy ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( str ) , ZSTR_LEN ( str ) )"		1388139	0					
ANR	1388510	Callee	memcpy		1388139	0					
ANR	1388511	Identifier	memcpy		1388139	0					
ANR	1388512	ArgumentList	ZSTR_VAL ( p -> key )		1388139	1					
ANR	1388513	Argument	ZSTR_VAL ( p -> key )		1388139	0					
ANR	1388514	CallExpression	ZSTR_VAL ( p -> key )		1388139	0					
ANR	1388515	Callee	ZSTR_VAL		1388139	0					
ANR	1388516	Identifier	ZSTR_VAL		1388139	0					
ANR	1388517	ArgumentList	p -> key		1388139	1					
ANR	1388518	Argument	p -> key		1388139	0					
ANR	1388519	PtrMemberAccess	p -> key		1388139	0					
ANR	1388520	Identifier	p		1388139	0					
ANR	1388521	Identifier	key		1388139	1					
ANR	1388522	Argument	ZSTR_VAL ( str )		1388139	1					
ANR	1388523	CallExpression	ZSTR_VAL ( str )		1388139	0					
ANR	1388524	Callee	ZSTR_VAL		1388139	0					
ANR	1388525	Identifier	ZSTR_VAL		1388139	0					
ANR	1388526	ArgumentList	str		1388139	1					
ANR	1388527	Argument	str		1388139	0					
ANR	1388528	Identifier	str		1388139	0					
ANR	1388529	Argument	ZSTR_LEN ( str )		1388139	2					
ANR	1388530	CallExpression	ZSTR_LEN ( str )		1388139	0					
ANR	1388531	Callee	ZSTR_LEN		1388139	0					
ANR	1388532	Identifier	ZSTR_LEN		1388139	0					
ANR	1388533	ArgumentList	str		1388139	1					
ANR	1388534	Argument	str		1388139	0					
ANR	1388535	Identifier	str		1388139	0					
ANR	1388536	ExpressionStatement	"ZVAL_INTERNED_STR ( & p -> val , p -> key )"	377:1:10888:10922	1388139	22	True				
ANR	1388537	CallExpression	"ZVAL_INTERNED_STR ( & p -> val , p -> key )"		1388139	0					
ANR	1388538	Callee	ZVAL_INTERNED_STR		1388139	0					
ANR	1388539	Identifier	ZVAL_INTERNED_STR		1388139	0					
ANR	1388540	ArgumentList	& p -> val		1388139	1					
ANR	1388541	Argument	& p -> val		1388139	0					
ANR	1388542	UnaryOperationExpression	& p -> val		1388139	0					
ANR	1388543	UnaryOperator	&		1388139	0					
ANR	1388544	PtrMemberAccess	p -> val		1388139	1					
ANR	1388545	Identifier	p		1388139	0					
ANR	1388546	Identifier	val		1388139	1					
ANR	1388547	Argument	p -> key		1388139	1					
ANR	1388548	PtrMemberAccess	p -> key		1388139	0					
ANR	1388549	Identifier	p		1388139	0					
ANR	1388550	Identifier	key		1388139	1					
ANR	1388551	ExpressionStatement	"Z_NEXT ( p -> val ) = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"	378:1:10925:10982	1388139	23	True				
ANR	1388552	AssignmentExpression	"Z_NEXT ( p -> val ) = HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1388139	0		=			
ANR	1388553	CallExpression	Z_NEXT ( p -> val )		1388139	0					
ANR	1388554	Callee	Z_NEXT		1388139	0					
ANR	1388555	Identifier	Z_NEXT		1388139	0					
ANR	1388556	ArgumentList	p -> val		1388139	1					
ANR	1388557	Argument	p -> val		1388139	0					
ANR	1388558	PtrMemberAccess	p -> val		1388139	0					
ANR	1388559	Identifier	p		1388139	0					
ANR	1388560	Identifier	val		1388139	1					
ANR	1388561	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1388139	1					
ANR	1388562	Callee	HT_HASH		1388139	0					
ANR	1388563	Identifier	HT_HASH		1388139	0					
ANR	1388564	ArgumentList	& ZCSG ( interned_strings )		1388139	1					
ANR	1388565	Argument	& ZCSG ( interned_strings )		1388139	0					
ANR	1388566	UnaryOperationExpression	& ZCSG ( interned_strings )		1388139	0					
ANR	1388567	UnaryOperator	&		1388139	0					
ANR	1388568	CallExpression	ZCSG ( interned_strings )		1388139	1					
ANR	1388569	Callee	ZCSG		1388139	0					
ANR	1388570	Identifier	ZCSG		1388139	0					
ANR	1388571	ArgumentList	interned_strings		1388139	1					
ANR	1388572	Argument	interned_strings		1388139	0					
ANR	1388573	Identifier	interned_strings		1388139	0					
ANR	1388574	Argument	nIndex		1388139	1					
ANR	1388575	Identifier	nIndex		1388139	0					
ANR	1388576	ExpressionStatement	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) = HT_IDX_TO_HASH ( idx )"	379:1:10985:11047	1388139	24	True				
ANR	1388577	AssignmentExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex ) = HT_IDX_TO_HASH ( idx )"		1388139	0		=			
ANR	1388578	CallExpression	"HT_HASH ( & ZCSG ( interned_strings ) , nIndex )"		1388139	0					
ANR	1388579	Callee	HT_HASH		1388139	0					
ANR	1388580	Identifier	HT_HASH		1388139	0					
ANR	1388581	ArgumentList	& ZCSG ( interned_strings )		1388139	1					
ANR	1388582	Argument	& ZCSG ( interned_strings )		1388139	0					
ANR	1388583	UnaryOperationExpression	& ZCSG ( interned_strings )		1388139	0					
ANR	1388584	UnaryOperator	&		1388139	0					
ANR	1388585	CallExpression	ZCSG ( interned_strings )		1388139	1					
ANR	1388586	Callee	ZCSG		1388139	0					
ANR	1388587	Identifier	ZCSG		1388139	0					
ANR	1388588	ArgumentList	interned_strings		1388139	1					
ANR	1388589	Argument	interned_strings		1388139	0					
ANR	1388590	Identifier	interned_strings		1388139	0					
ANR	1388591	Argument	nIndex		1388139	1					
ANR	1388592	Identifier	nIndex		1388139	0					
ANR	1388593	CallExpression	HT_IDX_TO_HASH ( idx )		1388139	1					
ANR	1388594	Callee	HT_IDX_TO_HASH		1388139	0					
ANR	1388595	Identifier	HT_IDX_TO_HASH		1388139	0					
ANR	1388596	ArgumentList	idx		1388139	1					
ANR	1388597	Argument	idx		1388139	0					
ANR	1388598	Identifier	idx		1388139	0					
ANR	1388599	ExpressionStatement	zend_string_release ( str )	380:1:11050:11074	1388139	25	True				
ANR	1388600	CallExpression	zend_string_release ( str )		1388139	0					
ANR	1388601	Callee	zend_string_release		1388139	0					
ANR	1388602	Identifier	zend_string_release		1388139	0					
ANR	1388603	ArgumentList	str		1388139	1					
ANR	1388604	Argument	str		1388139	0					
ANR	1388605	Identifier	str		1388139	0					
ANR	1388606	ReturnStatement	return p -> key ;	381:1:11077:11090	1388139	26	True				
ANR	1388607	PtrMemberAccess	p -> key		1388139	0					
ANR	1388608	Identifier	p		1388139	0					
ANR	1388609	Identifier	key		1388139	1					
ANR	1388610	ReturnType	zend_string *		1388139	1					
ANR	1388611	Identifier	accel_new_interned_string		1388139	2					
ANR	1388612	ParameterList	zend_string * str		1388139	3					
ANR	1388613	Parameter	zend_string * str	315:39:9073:9088	1388139	0	True				
ANR	1388614	ParameterType	zend_string *		1388139	0					
ANR	1388615	Identifier	str		1388139	1					
ANR	1388616	CFGEntryNode	ENTRY		1388139		True				
ANR	1388617	CFGExitNode	EXIT		1388139		True				
ANR	1388618	Symbol	IS_ACCEL_INTERNED		1388139						
ANR	1388619	Symbol	interned_strings_end		1388139						
ANR	1388620	Symbol	_ZSTR_STRUCT_SIZE		1388139						
ANR	1388621	Symbol	IS_STR_PERMANENT		1388139						
ANR	1388622	Symbol	Z_NEXT		1388139						
ANR	1388623	Symbol	ZCSG ( interned_strings ) . nNumUsed		1388139						
ANR	1388624	Symbol	ZCSG ( interned_strings ) . arData		1388139						
ANR	1388625	Symbol	ZSTR_H		1388139						
ANR	1388626	Symbol	interned_strings_top		1388139						
ANR	1388627	Symbol	memcmp		1388139						
ANR	1388628	Symbol	ZCSG		1388139						
ANR	1388629	Symbol	HT_HASH		1388139						
ANR	1388630	Symbol	ACCEL_LOG_WARNING		1388139						
ANR	1388631	Symbol	IS_STR_INTERNED		1388139						
ANR	1388632	Symbol	zend_string_hash_val		1388139						
ANR	1388633	Symbol	GC_TYPE_INFO		1388139						
ANR	1388634	Symbol	IS_STRING		1388139						
ANR	1388635	Symbol	ZCSG ( interned_strings ) . nNumOfElements		1388139						
ANR	1388636	Symbol	GC_REFCOUNT		1388139						
ANR	1388637	Symbol	p -> h		1388139						
ANR	1388638	Symbol	& p -> val		1388139						
ANR	1388639	Symbol	HT_INVALID_IDX		1388139						
ANR	1388640	Symbol	ZEND_MM_ALIGNED_SIZE		1388139						
ANR	1388641	Symbol	h		1388139						
ANR	1388642	Symbol	nIndex		1388139						
ANR	1388643	Symbol	p -> val		1388139						
ANR	1388644	Symbol	HT_IDX_TO_HASH		1388139						
ANR	1388645	Symbol	p -> key		1388139						
ANR	1388646	Symbol	ZSTR_VAL		1388139						
ANR	1388647	Symbol	str		1388139						
ANR	1388648	Symbol	p		1388139						
ANR	1388649	Symbol	& ZCSG		1388139						
ANR	1388650	Symbol	ZCSG ( interned_strings ) . nTableMask		1388139						
ANR	1388651	Symbol	ZSTR_LEN		1388139						
ANR	1388652	Symbol	* p		1388139						
ANR	1388653	Symbol	idx		1388139						
ANR	1388654	Symbol	ZCG ( accel_directives ) . file_cache_only		1388139						
ANR	1388655	Symbol	interned_strings		1388139						
ANR	1388656	Symbol	accel_directives		1388139						
ANR	1388657	Symbol	ZCG		1388139						
ANR	1388658	Symbol	HT_HASH_TO_BUCKET		1388139						
ANR	1388659	Function	accel_use_shm_interned_strings	389:0:11212:14013							
ANR	1388660	FunctionDef	accel_use_shm_interned_strings ()		1388659	0					
ANR	1388661	CompoundStatement		390:0:11261:14013	1388659	0					
ANR	1388662	IdentifierDeclStatement	"uint idx , j ;"	391:1:11264:11275	1388659	0	True				
ANR	1388663	IdentifierDecl	idx		1388659	0					
ANR	1388664	IdentifierDeclType	uint		1388659	0					
ANR	1388665	Identifier	idx		1388659	1					
ANR	1388666	IdentifierDecl	j		1388659	1					
ANR	1388667	IdentifierDeclType	uint		1388659	0					
ANR	1388668	Identifier	j		1388659	1					
ANR	1388669	IdentifierDeclStatement	"Bucket * p , * q ;"	392:1:11278:11291	1388659	1	True				
ANR	1388670	IdentifierDecl	* p		1388659	0					
ANR	1388671	IdentifierDeclType	Bucket *		1388659	0					
ANR	1388672	Identifier	p		1388659	1					
ANR	1388673	IdentifierDecl	* q		1388659	1					
ANR	1388674	IdentifierDeclType	Bucket *		1388659	0					
ANR	1388675	Identifier	q		1388659	1					
ANR	1388676	ExpressionStatement	CG ( empty_string ) = accel_new_interned_string ( CG ( empty_string ) )	395:1:11315:11377	1388659	2	True				
ANR	1388677	AssignmentExpression	CG ( empty_string ) = accel_new_interned_string ( CG ( empty_string ) )		1388659	0		=			
ANR	1388678	CallExpression	CG ( empty_string )		1388659	0					
ANR	1388679	Callee	CG		1388659	0					
ANR	1388680	Identifier	CG		1388659	0					
ANR	1388681	ArgumentList	empty_string		1388659	1					
ANR	1388682	Argument	empty_string		1388659	0					
ANR	1388683	Identifier	empty_string		1388659	0					
ANR	1388684	CallExpression	accel_new_interned_string ( CG ( empty_string ) )		1388659	1					
ANR	1388685	Callee	accel_new_interned_string		1388659	0					
ANR	1388686	Identifier	accel_new_interned_string		1388659	0					
ANR	1388687	ArgumentList	CG ( empty_string )		1388659	1					
ANR	1388688	Argument	CG ( empty_string )		1388659	0					
ANR	1388689	CallExpression	CG ( empty_string )		1388659	0					
ANR	1388690	Callee	CG		1388659	0					
ANR	1388691	Identifier	CG		1388659	0					
ANR	1388692	ArgumentList	empty_string		1388659	1					
ANR	1388693	Argument	empty_string		1388659	0					
ANR	1388694	Identifier	empty_string		1388659	0					
ANR	1388695	ForStatement	for ( j = 0 ; j < 256 ; j ++ )		1388659	3					
ANR	1388696	ForInit	j = 0 ;	396:6:11385:11390	1388659	0	True				
ANR	1388697	AssignmentExpression	j = 0		1388659	0		=			
ANR	1388698	Identifier	j		1388659	0					
ANR	1388699	PrimaryExpression	0		1388659	1					
ANR	1388700	Condition	j < 256	396:13:11392:11398	1388659	1	True				
ANR	1388701	RelationalExpression	j < 256		1388659	0		<			
ANR	1388702	Identifier	j		1388659	0					
ANR	1388703	PrimaryExpression	256		1388659	1					
ANR	1388704	PostIncDecOperationExpression	j ++	396:22:11401:11403	1388659	2	True				
ANR	1388705	Identifier	j		1388659	0					
ANR	1388706	IncDec	++		1388659	1					
ANR	1388707	CompoundStatement		8:2:148:157	1388659	3					
ANR	1388708	IdentifierDeclStatement	char s [ 2 ] ;	397:2:11410:11419	1388659	0	True				
ANR	1388709	IdentifierDecl	s [ 2 ]		1388659	0					
ANR	1388710	IdentifierDeclType	char [ 2 ]		1388659	0					
ANR	1388711	Identifier	s		1388659	1					
ANR	1388712	PrimaryExpression	2		1388659	2					
ANR	1388713	ExpressionStatement	s [ 0 ] = j	398:2:11423:11431	1388659	1	True				
ANR	1388714	AssignmentExpression	s [ 0 ] = j		1388659	0		=			
ANR	1388715	ArrayIndexing	s [ 0 ]		1388659	0					
ANR	1388716	Identifier	s		1388659	0					
ANR	1388717	PrimaryExpression	0		1388659	1					
ANR	1388718	Identifier	j		1388659	1					
ANR	1388719	ExpressionStatement	s [ 1 ] = 0	399:2:11435:11443	1388659	2	True				
ANR	1388720	AssignmentExpression	s [ 1 ] = 0		1388659	0		=			
ANR	1388721	ArrayIndexing	s [ 1 ]		1388659	0					
ANR	1388722	Identifier	s		1388659	0					
ANR	1388723	PrimaryExpression	1		1388659	1					
ANR	1388724	PrimaryExpression	0		1388659	1					
ANR	1388725	ExpressionStatement	"CG ( one_char_string ) [ j ] = accel_new_interned_string ( zend_string_init ( s , 1 , 0 ) )"	400:2:11447:11524	1388659	3	True				
ANR	1388726	AssignmentExpression	"CG ( one_char_string ) [ j ] = accel_new_interned_string ( zend_string_init ( s , 1 , 0 ) )"		1388659	0		=			
ANR	1388727	ArrayIndexing	CG ( one_char_string ) [ j ]		1388659	0					
ANR	1388728	CallExpression	CG ( one_char_string )		1388659	0					
ANR	1388729	Callee	CG		1388659	0					
ANR	1388730	Identifier	CG		1388659	0					
ANR	1388731	ArgumentList	one_char_string		1388659	1					
ANR	1388732	Argument	one_char_string		1388659	0					
ANR	1388733	Identifier	one_char_string		1388659	0					
ANR	1388734	Identifier	j		1388659	1					
ANR	1388735	CallExpression	"accel_new_interned_string ( zend_string_init ( s , 1 , 0 ) )"		1388659	1					
ANR	1388736	Callee	accel_new_interned_string		1388659	0					
ANR	1388737	Identifier	accel_new_interned_string		1388659	0					
ANR	1388738	ArgumentList	"zend_string_init ( s , 1 , 0 )"		1388659	1					
ANR	1388739	Argument	"zend_string_init ( s , 1 , 0 )"		1388659	0					
ANR	1388740	CallExpression	"zend_string_init ( s , 1 , 0 )"		1388659	0					
ANR	1388741	Callee	zend_string_init		1388659	0					
ANR	1388742	Identifier	zend_string_init		1388659	0					
ANR	1388743	ArgumentList	s		1388659	1					
ANR	1388744	Argument	s		1388659	0					
ANR	1388745	Identifier	s		1388659	0					
ANR	1388746	Argument	1		1388659	1					
ANR	1388747	PrimaryExpression	1		1388659	0					
ANR	1388748	Argument	0		1388659	2					
ANR	1388749	PrimaryExpression	0		1388659	0					
ANR	1388750	ForStatement	for ( idx = 0 ; idx < CG ( function_table ) -> nNumUsed ; idx ++ )		1388659	4					
ANR	1388751	ForInit	idx = 0 ;	404:6:11568:11575	1388659	0	True				
ANR	1388752	AssignmentExpression	idx = 0		1388659	0		=			
ANR	1388753	Identifier	idx		1388659	0					
ANR	1388754	PrimaryExpression	0		1388659	1					
ANR	1388755	Condition	idx < CG ( function_table ) -> nNumUsed	404:15:11577:11610	1388659	1	True				
ANR	1388756	RelationalExpression	idx < CG ( function_table ) -> nNumUsed		1388659	0		<			
ANR	1388757	Identifier	idx		1388659	0					
ANR	1388758	PtrMemberAccess	CG ( function_table ) -> nNumUsed		1388659	1					
ANR	1388759	CallExpression	CG ( function_table )		1388659	0					
ANR	1388760	Callee	CG		1388659	0					
ANR	1388761	Identifier	CG		1388659	0					
ANR	1388762	ArgumentList	function_table		1388659	1					
ANR	1388763	Argument	function_table		1388659	0					
ANR	1388764	Identifier	function_table		1388659	0					
ANR	1388765	Identifier	nNumUsed		1388659	1					
ANR	1388766	PostIncDecOperationExpression	idx ++	404:51:11613:11617	1388659	2	True				
ANR	1388767	Identifier	idx		1388659	0					
ANR	1388768	IncDec	++		1388659	1					
ANR	1388769	CompoundStatement		15:58:358:358	1388659	3					
ANR	1388770	ExpressionStatement	p = CG ( function_table ) -> arData + idx	405:2:11624:11660	1388659	0	True				
ANR	1388771	AssignmentExpression	p = CG ( function_table ) -> arData + idx		1388659	0		=			
ANR	1388772	Identifier	p		1388659	0					
ANR	1388773	AdditiveExpression	CG ( function_table ) -> arData + idx		1388659	1		+			
ANR	1388774	PtrMemberAccess	CG ( function_table ) -> arData		1388659	0					
ANR	1388775	CallExpression	CG ( function_table )		1388659	0					
ANR	1388776	Callee	CG		1388659	0					
ANR	1388777	Identifier	CG		1388659	0					
ANR	1388778	ArgumentList	function_table		1388659	1					
ANR	1388779	Argument	function_table		1388659	0					
ANR	1388780	Identifier	function_table		1388659	0					
ANR	1388781	Identifier	arData		1388659	1					
ANR	1388782	Identifier	idx		1388659	1					
ANR	1388783	IfStatement	if ( Z_TYPE ( p -> val ) == IS_UNDEF )		1388659	1					
ANR	1388784	Condition	Z_TYPE ( p -> val ) == IS_UNDEF	406:6:11668:11693	1388659	0	True				
ANR	1388785	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		1388659	0		==			
ANR	1388786	CallExpression	Z_TYPE ( p -> val )		1388659	0					
ANR	1388787	Callee	Z_TYPE		1388659	0					
ANR	1388788	Identifier	Z_TYPE		1388659	0					
ANR	1388789	ArgumentList	p -> val		1388659	1					
ANR	1388790	Argument	p -> val		1388659	0					
ANR	1388791	PtrMemberAccess	p -> val		1388659	0					
ANR	1388792	Identifier	p		1388659	0					
ANR	1388793	Identifier	val		1388659	1					
ANR	1388794	Identifier	IS_UNDEF		1388659	1					
ANR	1388795	ContinueStatement	continue ;	406:34:11696:11704	1388659	1	True				
ANR	1388796	IfStatement	if ( p -> key )		1388659	2					
ANR	1388797	Condition	p -> key	407:6:11712:11717	1388659	0	True				
ANR	1388798	PtrMemberAccess	p -> key		1388659	0					
ANR	1388799	Identifier	p		1388659	0					
ANR	1388800	Identifier	key		1388659	1					
ANR	1388801	CompoundStatement		18:14:458:458	1388659	1					
ANR	1388802	ExpressionStatement	p -> key = accel_new_interned_string ( p -> key )	408:3:11725:11767	1388659	0	True				
ANR	1388803	AssignmentExpression	p -> key = accel_new_interned_string ( p -> key )		1388659	0		=			
ANR	1388804	PtrMemberAccess	p -> key		1388659	0					
ANR	1388805	Identifier	p		1388659	0					
ANR	1388806	Identifier	key		1388659	1					
ANR	1388807	CallExpression	accel_new_interned_string ( p -> key )		1388659	1					
ANR	1388808	Callee	accel_new_interned_string		1388659	0					
ANR	1388809	Identifier	accel_new_interned_string		1388659	0					
ANR	1388810	ArgumentList	p -> key		1388659	1					
ANR	1388811	Argument	p -> key		1388659	0					
ANR	1388812	PtrMemberAccess	p -> key		1388659	0					
ANR	1388813	Identifier	p		1388659	0					
ANR	1388814	Identifier	key		1388659	1					
ANR	1388815	IfStatement	if ( Z_FUNC ( p -> val ) -> common . function_name )		1388659	3					
ANR	1388816	Condition	Z_FUNC ( p -> val ) -> common . function_name	410:6:11779:11814	1388659	0	True				
ANR	1388817	MemberAccess	Z_FUNC ( p -> val ) -> common . function_name		1388659	0					
ANR	1388818	PtrMemberAccess	Z_FUNC ( p -> val ) -> common		1388659	0					
ANR	1388819	CallExpression	Z_FUNC ( p -> val )		1388659	0					
ANR	1388820	Callee	Z_FUNC		1388659	0					
ANR	1388821	Identifier	Z_FUNC		1388659	0					
ANR	1388822	ArgumentList	p -> val		1388659	1					
ANR	1388823	Argument	p -> val		1388659	0					
ANR	1388824	PtrMemberAccess	p -> val		1388659	0					
ANR	1388825	Identifier	p		1388659	0					
ANR	1388826	Identifier	val		1388659	1					
ANR	1388827	Identifier	common		1388659	1					
ANR	1388828	Identifier	function_name		1388659	1					
ANR	1388829	CompoundStatement		21:44:555:555	1388659	1					
ANR	1388830	ExpressionStatement	Z_FUNC ( p -> val ) -> common . function_name = accel_new_interned_string ( Z_FUNC ( p -> val ) -> common . function_name )	411:3:11822:11924	1388659	0	True				
ANR	1388831	AssignmentExpression	Z_FUNC ( p -> val ) -> common . function_name = accel_new_interned_string ( Z_FUNC ( p -> val ) -> common . function_name )		1388659	0		=			
ANR	1388832	MemberAccess	Z_FUNC ( p -> val ) -> common . function_name		1388659	0					
ANR	1388833	PtrMemberAccess	Z_FUNC ( p -> val ) -> common		1388659	0					
ANR	1388834	CallExpression	Z_FUNC ( p -> val )		1388659	0					
ANR	1388835	Callee	Z_FUNC		1388659	0					
ANR	1388836	Identifier	Z_FUNC		1388659	0					
ANR	1388837	ArgumentList	p -> val		1388659	1					
ANR	1388838	Argument	p -> val		1388659	0					
ANR	1388839	PtrMemberAccess	p -> val		1388659	0					
ANR	1388840	Identifier	p		1388659	0					
ANR	1388841	Identifier	val		1388659	1					
ANR	1388842	Identifier	common		1388659	1					
ANR	1388843	Identifier	function_name		1388659	1					
ANR	1388844	CallExpression	accel_new_interned_string ( Z_FUNC ( p -> val ) -> common . function_name )		1388659	1					
ANR	1388845	Callee	accel_new_interned_string		1388659	0					
ANR	1388846	Identifier	accel_new_interned_string		1388659	0					
ANR	1388847	ArgumentList	Z_FUNC ( p -> val ) -> common . function_name		1388659	1					
ANR	1388848	Argument	Z_FUNC ( p -> val ) -> common . function_name		1388659	0					
ANR	1388849	MemberAccess	Z_FUNC ( p -> val ) -> common . function_name		1388659	0					
ANR	1388850	PtrMemberAccess	Z_FUNC ( p -> val ) -> common		1388659	0					
ANR	1388851	CallExpression	Z_FUNC ( p -> val )		1388659	0					
ANR	1388852	Callee	Z_FUNC		1388659	0					
ANR	1388853	Identifier	Z_FUNC		1388659	0					
ANR	1388854	ArgumentList	p -> val		1388659	1					
ANR	1388855	Argument	p -> val		1388659	0					
ANR	1388856	PtrMemberAccess	p -> val		1388659	0					
ANR	1388857	Identifier	p		1388659	0					
ANR	1388858	Identifier	val		1388659	1					
ANR	1388859	Identifier	common		1388659	1					
ANR	1388860	Identifier	function_name		1388659	1					
ANR	1388861	ForStatement	for ( idx = 0 ; idx < CG ( class_table ) -> nNumUsed ; idx ++ )		1388659	5					
ANR	1388862	ForInit	idx = 0 ;	416:6:12019:12026	1388659	0	True				
ANR	1388863	AssignmentExpression	idx = 0		1388659	0		=			
ANR	1388864	Identifier	idx		1388659	0					
ANR	1388865	PrimaryExpression	0		1388659	1					
ANR	1388866	Condition	idx < CG ( class_table ) -> nNumUsed	416:15:12028:12058	1388659	1	True				
ANR	1388867	RelationalExpression	idx < CG ( class_table ) -> nNumUsed		1388659	0		<			
ANR	1388868	Identifier	idx		1388659	0					
ANR	1388869	PtrMemberAccess	CG ( class_table ) -> nNumUsed		1388659	1					
ANR	1388870	CallExpression	CG ( class_table )		1388659	0					
ANR	1388871	Callee	CG		1388659	0					
ANR	1388872	Identifier	CG		1388659	0					
ANR	1388873	ArgumentList	class_table		1388659	1					
ANR	1388874	Argument	class_table		1388659	0					
ANR	1388875	Identifier	class_table		1388659	0					
ANR	1388876	Identifier	nNumUsed		1388659	1					
ANR	1388877	PostIncDecOperationExpression	idx ++	416:48:12061:12065	1388659	2	True				
ANR	1388878	Identifier	idx		1388659	0					
ANR	1388879	IncDec	++		1388659	1					
ANR	1388880	CompoundStatement		28:2:810:830	1388659	3					
ANR	1388881	IdentifierDeclStatement	zend_class_entry * ce ;	417:2:12072:12092	1388659	0	True				
ANR	1388882	IdentifierDecl	* ce		1388659	0					
ANR	1388883	IdentifierDeclType	zend_class_entry *		1388659	0					
ANR	1388884	Identifier	ce		1388659	1					
ANR	1388885	ExpressionStatement	p = CG ( class_table ) -> arData + idx	419:2:12097:12130	1388659	1	True				
ANR	1388886	AssignmentExpression	p = CG ( class_table ) -> arData + idx		1388659	0		=			
ANR	1388887	Identifier	p		1388659	0					
ANR	1388888	AdditiveExpression	CG ( class_table ) -> arData + idx		1388659	1		+			
ANR	1388889	PtrMemberAccess	CG ( class_table ) -> arData		1388659	0					
ANR	1388890	CallExpression	CG ( class_table )		1388659	0					
ANR	1388891	Callee	CG		1388659	0					
ANR	1388892	Identifier	CG		1388659	0					
ANR	1388893	ArgumentList	class_table		1388659	1					
ANR	1388894	Argument	class_table		1388659	0					
ANR	1388895	Identifier	class_table		1388659	0					
ANR	1388896	Identifier	arData		1388659	1					
ANR	1388897	Identifier	idx		1388659	1					
ANR	1388898	IfStatement	if ( Z_TYPE ( p -> val ) == IS_UNDEF )		1388659	2					
ANR	1388899	Condition	Z_TYPE ( p -> val ) == IS_UNDEF	420:6:12138:12163	1388659	0	True				
ANR	1388900	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		1388659	0		==			
ANR	1388901	CallExpression	Z_TYPE ( p -> val )		1388659	0					
ANR	1388902	Callee	Z_TYPE		1388659	0					
ANR	1388903	Identifier	Z_TYPE		1388659	0					
ANR	1388904	ArgumentList	p -> val		1388659	1					
ANR	1388905	Argument	p -> val		1388659	0					
ANR	1388906	PtrMemberAccess	p -> val		1388659	0					
ANR	1388907	Identifier	p		1388659	0					
ANR	1388908	Identifier	val		1388659	1					
ANR	1388909	Identifier	IS_UNDEF		1388659	1					
ANR	1388910	ContinueStatement	continue ;	420:34:12166:12174	1388659	1	True				
ANR	1388911	ExpressionStatement	ce = ( zend_class_entry * ) Z_PTR ( p -> val )	421:2:12178:12215	1388659	3	True				
ANR	1388912	AssignmentExpression	ce = ( zend_class_entry * ) Z_PTR ( p -> val )		1388659	0		=			
ANR	1388913	Identifier	ce		1388659	0					
ANR	1388914	CastExpression	( zend_class_entry * ) Z_PTR ( p -> val )		1388659	1					
ANR	1388915	CastTarget	zend_class_entry *		1388659	0					
ANR	1388916	CallExpression	Z_PTR ( p -> val )		1388659	1					
ANR	1388917	Callee	Z_PTR		1388659	0					
ANR	1388918	Identifier	Z_PTR		1388659	0					
ANR	1388919	ArgumentList	p -> val		1388659	1					
ANR	1388920	Argument	p -> val		1388659	0					
ANR	1388921	PtrMemberAccess	p -> val		1388659	0					
ANR	1388922	Identifier	p		1388659	0					
ANR	1388923	Identifier	val		1388659	1					
ANR	1388924	IfStatement	if ( p -> key )		1388659	4					
ANR	1388925	Condition	p -> key	423:6:12224:12229	1388659	0	True				
ANR	1388926	PtrMemberAccess	p -> key		1388659	0					
ANR	1388927	Identifier	p		1388659	0					
ANR	1388928	Identifier	key		1388659	1					
ANR	1388929	CompoundStatement		34:14:970:970	1388659	1					
ANR	1388930	ExpressionStatement	p -> key = accel_new_interned_string ( p -> key )	424:3:12237:12279	1388659	0	True				
ANR	1388931	AssignmentExpression	p -> key = accel_new_interned_string ( p -> key )		1388659	0		=			
ANR	1388932	PtrMemberAccess	p -> key		1388659	0					
ANR	1388933	Identifier	p		1388659	0					
ANR	1388934	Identifier	key		1388659	1					
ANR	1388935	CallExpression	accel_new_interned_string ( p -> key )		1388659	1					
ANR	1388936	Callee	accel_new_interned_string		1388659	0					
ANR	1388937	Identifier	accel_new_interned_string		1388659	0					
ANR	1388938	ArgumentList	p -> key		1388659	1					
ANR	1388939	Argument	p -> key		1388659	0					
ANR	1388940	PtrMemberAccess	p -> key		1388659	0					
ANR	1388941	Identifier	p		1388659	0					
ANR	1388942	Identifier	key		1388659	1					
ANR	1388943	IfStatement	if ( ce -> name )		1388659	5					
ANR	1388944	Condition	ce -> name	427:6:12292:12299	1388659	0	True				
ANR	1388945	PtrMemberAccess	ce -> name		1388659	0					
ANR	1388946	Identifier	ce		1388659	0					
ANR	1388947	Identifier	name		1388659	1					
ANR	1388948	CompoundStatement		38:16:1040:1040	1388659	1					
ANR	1388949	ExpressionStatement	ce -> name = accel_new_interned_string ( ce -> name )	428:3:12307:12353	1388659	0	True				
ANR	1388950	AssignmentExpression	ce -> name = accel_new_interned_string ( ce -> name )		1388659	0		=			
ANR	1388951	PtrMemberAccess	ce -> name		1388659	0					
ANR	1388952	Identifier	ce		1388659	0					
ANR	1388953	Identifier	name		1388659	1					
ANR	1388954	CallExpression	accel_new_interned_string ( ce -> name )		1388659	1					
ANR	1388955	Callee	accel_new_interned_string		1388659	0					
ANR	1388956	Identifier	accel_new_interned_string		1388659	0					
ANR	1388957	ArgumentList	ce -> name		1388659	1					
ANR	1388958	Argument	ce -> name		1388659	0					
ANR	1388959	PtrMemberAccess	ce -> name		1388659	0					
ANR	1388960	Identifier	ce		1388659	0					
ANR	1388961	Identifier	name		1388659	1					
ANR	1388962	ForStatement	for ( j = 0 ; j < ce -> properties_info . nNumUsed ; j ++ )		1388659	6					
ANR	1388963	ForInit	j = 0 ;	431:7:12367:12372	1388659	0	True				
ANR	1388964	AssignmentExpression	j = 0		1388659	0		=			
ANR	1388965	Identifier	j		1388659	0					
ANR	1388966	PrimaryExpression	0		1388659	1					
ANR	1388967	Condition	j < ce -> properties_info . nNumUsed	431:14:12374:12405	1388659	1	True				
ANR	1388968	RelationalExpression	j < ce -> properties_info . nNumUsed		1388659	0		<			
ANR	1388969	Identifier	j		1388659	0					
ANR	1388970	MemberAccess	ce -> properties_info . nNumUsed		1388659	1					
ANR	1388971	PtrMemberAccess	ce -> properties_info		1388659	0					
ANR	1388972	Identifier	ce		1388659	0					
ANR	1388973	Identifier	properties_info		1388659	1					
ANR	1388974	Identifier	nNumUsed		1388659	1					
ANR	1388975	PostIncDecOperationExpression	j ++	431:48:12408:12410	1388659	2	True				
ANR	1388976	Identifier	j		1388659	0					
ANR	1388977	IncDec	++		1388659	1					
ANR	1388978	CompoundStatement		43:3:1156:1180	1388659	3					
ANR	1388979	IdentifierDeclStatement	zend_property_info * info ;	432:3:12418:12442	1388659	0	True				
ANR	1388980	IdentifierDecl	* info		1388659	0					
ANR	1388981	IdentifierDeclType	zend_property_info *		1388659	0					
ANR	1388982	Identifier	info		1388659	1					
ANR	1388983	ExpressionStatement	q = ce -> properties_info . arData + j	434:3:12448:12482	1388659	1	True				
ANR	1388984	AssignmentExpression	q = ce -> properties_info . arData + j		1388659	0		=			
ANR	1388985	Identifier	q		1388659	0					
ANR	1388986	AdditiveExpression	ce -> properties_info . arData + j		1388659	1		+			
ANR	1388987	MemberAccess	ce -> properties_info . arData		1388659	0					
ANR	1388988	PtrMemberAccess	ce -> properties_info		1388659	0					
ANR	1388989	Identifier	ce		1388659	0					
ANR	1388990	Identifier	properties_info		1388659	1					
ANR	1388991	Identifier	arData		1388659	1					
ANR	1388992	Identifier	j		1388659	1					
ANR	1388993	IfStatement	if ( Z_TYPE ( q -> val ) == IS_UNDEF )		1388659	2					
ANR	1388994	Condition	Z_TYPE ( q -> val ) == IS_UNDEF	435:7:12491:12516	1388659	0	True				
ANR	1388995	EqualityExpression	Z_TYPE ( q -> val ) == IS_UNDEF		1388659	0		==			
ANR	1388996	CallExpression	Z_TYPE ( q -> val )		1388659	0					
ANR	1388997	Callee	Z_TYPE		1388659	0					
ANR	1388998	Identifier	Z_TYPE		1388659	0					
ANR	1388999	ArgumentList	q -> val		1388659	1					
ANR	1389000	Argument	q -> val		1388659	0					
ANR	1389001	PtrMemberAccess	q -> val		1388659	0					
ANR	1389002	Identifier	q		1388659	0					
ANR	1389003	Identifier	val		1388659	1					
ANR	1389004	Identifier	IS_UNDEF		1388659	1					
ANR	1389005	ContinueStatement	continue ;	435:35:12519:12527	1388659	1	True				
ANR	1389006	ExpressionStatement	info = ( zend_property_info * ) Z_PTR ( q -> val )	437:3:12533:12574	1388659	3	True				
ANR	1389007	AssignmentExpression	info = ( zend_property_info * ) Z_PTR ( q -> val )		1388659	0		=			
ANR	1389008	Identifier	info		1388659	0					
ANR	1389009	CastExpression	( zend_property_info * ) Z_PTR ( q -> val )		1388659	1					
ANR	1389010	CastTarget	zend_property_info *		1388659	0					
ANR	1389011	CallExpression	Z_PTR ( q -> val )		1388659	1					
ANR	1389012	Callee	Z_PTR		1388659	0					
ANR	1389013	Identifier	Z_PTR		1388659	0					
ANR	1389014	ArgumentList	q -> val		1388659	1					
ANR	1389015	Argument	q -> val		1388659	0					
ANR	1389016	PtrMemberAccess	q -> val		1388659	0					
ANR	1389017	Identifier	q		1388659	0					
ANR	1389018	Identifier	val		1388659	1					
ANR	1389019	IfStatement	if ( q -> key )		1388659	4					
ANR	1389020	Condition	q -> key	439:7:12584:12589	1388659	0	True				
ANR	1389021	PtrMemberAccess	q -> key		1388659	0					
ANR	1389022	Identifier	q		1388659	0					
ANR	1389023	Identifier	key		1388659	1					
ANR	1389024	CompoundStatement		50:15:1330:1330	1388659	1					
ANR	1389025	ExpressionStatement	q -> key = accel_new_interned_string ( q -> key )	440:4:12598:12640	1388659	0	True				
ANR	1389026	AssignmentExpression	q -> key = accel_new_interned_string ( q -> key )		1388659	0		=			
ANR	1389027	PtrMemberAccess	q -> key		1388659	0					
ANR	1389028	Identifier	q		1388659	0					
ANR	1389029	Identifier	key		1388659	1					
ANR	1389030	CallExpression	accel_new_interned_string ( q -> key )		1388659	1					
ANR	1389031	Callee	accel_new_interned_string		1388659	0					
ANR	1389032	Identifier	accel_new_interned_string		1388659	0					
ANR	1389033	ArgumentList	q -> key		1388659	1					
ANR	1389034	Argument	q -> key		1388659	0					
ANR	1389035	PtrMemberAccess	q -> key		1388659	0					
ANR	1389036	Identifier	q		1388659	0					
ANR	1389037	Identifier	key		1388659	1					
ANR	1389038	IfStatement	if ( info -> name )		1388659	5					
ANR	1389039	Condition	info -> name	443:7:12655:12664	1388659	0	True				
ANR	1389040	PtrMemberAccess	info -> name		1388659	0					
ANR	1389041	Identifier	info		1388659	0					
ANR	1389042	Identifier	name		1388659	1					
ANR	1389043	CompoundStatement		54:19:1405:1405	1388659	1					
ANR	1389044	ExpressionStatement	info -> name = accel_new_interned_string ( info -> name )	444:4:12673:12723	1388659	0	True				
ANR	1389045	AssignmentExpression	info -> name = accel_new_interned_string ( info -> name )		1388659	0		=			
ANR	1389046	PtrMemberAccess	info -> name		1388659	0					
ANR	1389047	Identifier	info		1388659	0					
ANR	1389048	Identifier	name		1388659	1					
ANR	1389049	CallExpression	accel_new_interned_string ( info -> name )		1388659	1					
ANR	1389050	Callee	accel_new_interned_string		1388659	0					
ANR	1389051	Identifier	accel_new_interned_string		1388659	0					
ANR	1389052	ArgumentList	info -> name		1388659	1					
ANR	1389053	Argument	info -> name		1388659	0					
ANR	1389054	PtrMemberAccess	info -> name		1388659	0					
ANR	1389055	Identifier	info		1388659	0					
ANR	1389056	Identifier	name		1388659	1					
ANR	1389057	ForStatement	for ( j = 0 ; j < ce -> function_table . nNumUsed ; j ++ )		1388659	7					
ANR	1389058	ForInit	j = 0 ;	448:7:12742:12747	1388659	0	True				
ANR	1389059	AssignmentExpression	j = 0		1388659	0		=			
ANR	1389060	Identifier	j		1388659	0					
ANR	1389061	PrimaryExpression	0		1388659	1					
ANR	1389062	Condition	j < ce -> function_table . nNumUsed	448:14:12749:12779	1388659	1	True				
ANR	1389063	RelationalExpression	j < ce -> function_table . nNumUsed		1388659	0		<			
ANR	1389064	Identifier	j		1388659	0					
ANR	1389065	MemberAccess	ce -> function_table . nNumUsed		1388659	1					
ANR	1389066	PtrMemberAccess	ce -> function_table		1388659	0					
ANR	1389067	Identifier	ce		1388659	0					
ANR	1389068	Identifier	function_table		1388659	1					
ANR	1389069	Identifier	nNumUsed		1388659	1					
ANR	1389070	PostIncDecOperationExpression	j ++	448:47:12782:12784	1388659	2	True				
ANR	1389071	Identifier	j		1388659	0					
ANR	1389072	IncDec	++		1388659	1					
ANR	1389073	CompoundStatement		59:52:1525:1525	1388659	3					
ANR	1389074	ExpressionStatement	q = ce -> function_table . arData + j	449:3:12792:12825	1388659	0	True				
ANR	1389075	AssignmentExpression	q = ce -> function_table . arData + j		1388659	0		=			
ANR	1389076	Identifier	q		1388659	0					
ANR	1389077	AdditiveExpression	ce -> function_table . arData + j		1388659	1		+			
ANR	1389078	MemberAccess	ce -> function_table . arData		1388659	0					
ANR	1389079	PtrMemberAccess	ce -> function_table		1388659	0					
ANR	1389080	Identifier	ce		1388659	0					
ANR	1389081	Identifier	function_table		1388659	1					
ANR	1389082	Identifier	arData		1388659	1					
ANR	1389083	Identifier	j		1388659	1					
ANR	1389084	IfStatement	if ( Z_TYPE ( q -> val ) == IS_UNDEF )		1388659	1					
ANR	1389085	Condition	Z_TYPE ( q -> val ) == IS_UNDEF	450:7:12834:12859	1388659	0	True				
ANR	1389086	EqualityExpression	Z_TYPE ( q -> val ) == IS_UNDEF		1388659	0		==			
ANR	1389087	CallExpression	Z_TYPE ( q -> val )		1388659	0					
ANR	1389088	Callee	Z_TYPE		1388659	0					
ANR	1389089	Identifier	Z_TYPE		1388659	0					
ANR	1389090	ArgumentList	q -> val		1388659	1					
ANR	1389091	Argument	q -> val		1388659	0					
ANR	1389092	PtrMemberAccess	q -> val		1388659	0					
ANR	1389093	Identifier	q		1388659	0					
ANR	1389094	Identifier	val		1388659	1					
ANR	1389095	Identifier	IS_UNDEF		1388659	1					
ANR	1389096	ContinueStatement	continue ;	450:35:12862:12870	1388659	1	True				
ANR	1389097	IfStatement	if ( q -> key )		1388659	2					
ANR	1389098	Condition	q -> key	451:7:12879:12884	1388659	0	True				
ANR	1389099	PtrMemberAccess	q -> key		1388659	0					
ANR	1389100	Identifier	q		1388659	0					
ANR	1389101	Identifier	key		1388659	1					
ANR	1389102	CompoundStatement		62:15:1625:1625	1388659	1					
ANR	1389103	ExpressionStatement	q -> key = accel_new_interned_string ( q -> key )	452:4:12893:12935	1388659	0	True				
ANR	1389104	AssignmentExpression	q -> key = accel_new_interned_string ( q -> key )		1388659	0		=			
ANR	1389105	PtrMemberAccess	q -> key		1388659	0					
ANR	1389106	Identifier	q		1388659	0					
ANR	1389107	Identifier	key		1388659	1					
ANR	1389108	CallExpression	accel_new_interned_string ( q -> key )		1388659	1					
ANR	1389109	Callee	accel_new_interned_string		1388659	0					
ANR	1389110	Identifier	accel_new_interned_string		1388659	0					
ANR	1389111	ArgumentList	q -> key		1388659	1					
ANR	1389112	Argument	q -> key		1388659	0					
ANR	1389113	PtrMemberAccess	q -> key		1388659	0					
ANR	1389114	Identifier	q		1388659	0					
ANR	1389115	Identifier	key		1388659	1					
ANR	1389116	IfStatement	if ( Z_FUNC ( q -> val ) -> common . function_name )		1388659	3					
ANR	1389117	Condition	Z_FUNC ( q -> val ) -> common . function_name	454:7:12949:12984	1388659	0	True				
ANR	1389118	MemberAccess	Z_FUNC ( q -> val ) -> common . function_name		1388659	0					
ANR	1389119	PtrMemberAccess	Z_FUNC ( q -> val ) -> common		1388659	0					
ANR	1389120	CallExpression	Z_FUNC ( q -> val )		1388659	0					
ANR	1389121	Callee	Z_FUNC		1388659	0					
ANR	1389122	Identifier	Z_FUNC		1388659	0					
ANR	1389123	ArgumentList	q -> val		1388659	1					
ANR	1389124	Argument	q -> val		1388659	0					
ANR	1389125	PtrMemberAccess	q -> val		1388659	0					
ANR	1389126	Identifier	q		1388659	0					
ANR	1389127	Identifier	val		1388659	1					
ANR	1389128	Identifier	common		1388659	1					
ANR	1389129	Identifier	function_name		1388659	1					
ANR	1389130	CompoundStatement		65:45:1725:1725	1388659	1					
ANR	1389131	ExpressionStatement	Z_FUNC ( q -> val ) -> common . function_name = accel_new_interned_string ( Z_FUNC ( q -> val ) -> common . function_name )	455:4:12993:13095	1388659	0	True				
ANR	1389132	AssignmentExpression	Z_FUNC ( q -> val ) -> common . function_name = accel_new_interned_string ( Z_FUNC ( q -> val ) -> common . function_name )		1388659	0		=			
ANR	1389133	MemberAccess	Z_FUNC ( q -> val ) -> common . function_name		1388659	0					
ANR	1389134	PtrMemberAccess	Z_FUNC ( q -> val ) -> common		1388659	0					
ANR	1389135	CallExpression	Z_FUNC ( q -> val )		1388659	0					
ANR	1389136	Callee	Z_FUNC		1388659	0					
ANR	1389137	Identifier	Z_FUNC		1388659	0					
ANR	1389138	ArgumentList	q -> val		1388659	1					
ANR	1389139	Argument	q -> val		1388659	0					
ANR	1389140	PtrMemberAccess	q -> val		1388659	0					
ANR	1389141	Identifier	q		1388659	0					
ANR	1389142	Identifier	val		1388659	1					
ANR	1389143	Identifier	common		1388659	1					
ANR	1389144	Identifier	function_name		1388659	1					
ANR	1389145	CallExpression	accel_new_interned_string ( Z_FUNC ( q -> val ) -> common . function_name )		1388659	1					
ANR	1389146	Callee	accel_new_interned_string		1388659	0					
ANR	1389147	Identifier	accel_new_interned_string		1388659	0					
ANR	1389148	ArgumentList	Z_FUNC ( q -> val ) -> common . function_name		1388659	1					
ANR	1389149	Argument	Z_FUNC ( q -> val ) -> common . function_name		1388659	0					
ANR	1389150	MemberAccess	Z_FUNC ( q -> val ) -> common . function_name		1388659	0					
ANR	1389151	PtrMemberAccess	Z_FUNC ( q -> val ) -> common		1388659	0					
ANR	1389152	CallExpression	Z_FUNC ( q -> val )		1388659	0					
ANR	1389153	Callee	Z_FUNC		1388659	0					
ANR	1389154	Identifier	Z_FUNC		1388659	0					
ANR	1389155	ArgumentList	q -> val		1388659	1					
ANR	1389156	Argument	q -> val		1388659	0					
ANR	1389157	PtrMemberAccess	q -> val		1388659	0					
ANR	1389158	Identifier	q		1388659	0					
ANR	1389159	Identifier	val		1388659	1					
ANR	1389160	Identifier	common		1388659	1					
ANR	1389161	Identifier	function_name		1388659	1					
ANR	1389162	ForStatement	for ( j = 0 ; j < ce -> constants_table . nNumUsed ; j ++ )		1388659	8					
ANR	1389163	ForInit	j = 0 ;	459:7:13114:13119	1388659	0	True				
ANR	1389164	AssignmentExpression	j = 0		1388659	0		=			
ANR	1389165	Identifier	j		1388659	0					
ANR	1389166	PrimaryExpression	0		1388659	1					
ANR	1389167	Condition	j < ce -> constants_table . nNumUsed	459:14:13121:13152	1388659	1	True				
ANR	1389168	RelationalExpression	j < ce -> constants_table . nNumUsed		1388659	0		<			
ANR	1389169	Identifier	j		1388659	0					
ANR	1389170	MemberAccess	ce -> constants_table . nNumUsed		1388659	1					
ANR	1389171	PtrMemberAccess	ce -> constants_table		1388659	0					
ANR	1389172	Identifier	ce		1388659	0					
ANR	1389173	Identifier	constants_table		1388659	1					
ANR	1389174	Identifier	nNumUsed		1388659	1					
ANR	1389175	PostIncDecOperationExpression	j ++	459:48:13155:13157	1388659	2	True				
ANR	1389176	Identifier	j		1388659	0					
ANR	1389177	IncDec	++		1388659	1					
ANR	1389178	CompoundStatement		70:53:1898:1898	1388659	3					
ANR	1389179	ExpressionStatement	q = ce -> constants_table . arData + j	460:3:13165:13199	1388659	0	True				
ANR	1389180	AssignmentExpression	q = ce -> constants_table . arData + j		1388659	0		=			
ANR	1389181	Identifier	q		1388659	0					
ANR	1389182	AdditiveExpression	ce -> constants_table . arData + j		1388659	1		+			
ANR	1389183	MemberAccess	ce -> constants_table . arData		1388659	0					
ANR	1389184	PtrMemberAccess	ce -> constants_table		1388659	0					
ANR	1389185	Identifier	ce		1388659	0					
ANR	1389186	Identifier	constants_table		1388659	1					
ANR	1389187	Identifier	arData		1388659	1					
ANR	1389188	Identifier	j		1388659	1					
ANR	1389189	IfStatement	if ( ! Z_TYPE ( q -> val ) == IS_UNDEF )		1388659	1					
ANR	1389190	Condition	! Z_TYPE ( q -> val ) == IS_UNDEF	461:7:13208:13234	1388659	0	True				
ANR	1389191	EqualityExpression	! Z_TYPE ( q -> val ) == IS_UNDEF		1388659	0		==			
ANR	1389192	UnaryOperationExpression	! Z_TYPE ( q -> val )		1388659	0					
ANR	1389193	UnaryOperator	!		1388659	0					
ANR	1389194	CallExpression	Z_TYPE ( q -> val )		1388659	1					
ANR	1389195	Callee	Z_TYPE		1388659	0					
ANR	1389196	Identifier	Z_TYPE		1388659	0					
ANR	1389197	ArgumentList	q -> val		1388659	1					
ANR	1389198	Argument	q -> val		1388659	0					
ANR	1389199	PtrMemberAccess	q -> val		1388659	0					
ANR	1389200	Identifier	q		1388659	0					
ANR	1389201	Identifier	val		1388659	1					
ANR	1389202	Identifier	IS_UNDEF		1388659	1					
ANR	1389203	ContinueStatement	continue ;	461:36:13237:13245	1388659	1	True				
ANR	1389204	IfStatement	if ( q -> key )		1388659	2					
ANR	1389205	Condition	q -> key	462:7:13254:13259	1388659	0	True				
ANR	1389206	PtrMemberAccess	q -> key		1388659	0					
ANR	1389207	Identifier	q		1388659	0					
ANR	1389208	Identifier	key		1388659	1					
ANR	1389209	CompoundStatement		73:15:2000:2000	1388659	1					
ANR	1389210	ExpressionStatement	q -> key = accel_new_interned_string ( q -> key )	463:4:13268:13310	1388659	0	True				
ANR	1389211	AssignmentExpression	q -> key = accel_new_interned_string ( q -> key )		1388659	0		=			
ANR	1389212	PtrMemberAccess	q -> key		1388659	0					
ANR	1389213	Identifier	q		1388659	0					
ANR	1389214	Identifier	key		1388659	1					
ANR	1389215	CallExpression	accel_new_interned_string ( q -> key )		1388659	1					
ANR	1389216	Callee	accel_new_interned_string		1388659	0					
ANR	1389217	Identifier	accel_new_interned_string		1388659	0					
ANR	1389218	ArgumentList	q -> key		1388659	1					
ANR	1389219	Argument	q -> key		1388659	0					
ANR	1389220	PtrMemberAccess	q -> key		1388659	0					
ANR	1389221	Identifier	q		1388659	0					
ANR	1389222	Identifier	key		1388659	1					
ANR	1389223	ForStatement	for ( idx = 0 ; idx < EG ( zend_constants ) -> nNumUsed ; idx ++ )		1388659	6					
ANR	1389224	ForInit	idx = 0 ;	469:6:13357:13364	1388659	0	True				
ANR	1389225	AssignmentExpression	idx = 0		1388659	0		=			
ANR	1389226	Identifier	idx		1388659	0					
ANR	1389227	PrimaryExpression	0		1388659	1					
ANR	1389228	Condition	idx < EG ( zend_constants ) -> nNumUsed	469:15:13366:13399	1388659	1	True				
ANR	1389229	RelationalExpression	idx < EG ( zend_constants ) -> nNumUsed		1388659	0		<			
ANR	1389230	Identifier	idx		1388659	0					
ANR	1389231	PtrMemberAccess	EG ( zend_constants ) -> nNumUsed		1388659	1					
ANR	1389232	CallExpression	EG ( zend_constants )		1388659	0					
ANR	1389233	Callee	EG		1388659	0					
ANR	1389234	Identifier	EG		1388659	0					
ANR	1389235	ArgumentList	zend_constants		1388659	1					
ANR	1389236	Argument	zend_constants		1388659	0					
ANR	1389237	Identifier	zend_constants		1388659	0					
ANR	1389238	Identifier	nNumUsed		1388659	1					
ANR	1389239	PostIncDecOperationExpression	idx ++	469:51:13402:13406	1388659	2	True				
ANR	1389240	Identifier	idx		1388659	0					
ANR	1389241	IncDec	++		1388659	1					
ANR	1389242	CompoundStatement		80:58:2147:2147	1388659	3					
ANR	1389243	ExpressionStatement	p = EG ( zend_constants ) -> arData + idx	470:2:13413:13449	1388659	0	True				
ANR	1389244	AssignmentExpression	p = EG ( zend_constants ) -> arData + idx		1388659	0		=			
ANR	1389245	Identifier	p		1388659	0					
ANR	1389246	AdditiveExpression	EG ( zend_constants ) -> arData + idx		1388659	1		+			
ANR	1389247	PtrMemberAccess	EG ( zend_constants ) -> arData		1388659	0					
ANR	1389248	CallExpression	EG ( zend_constants )		1388659	0					
ANR	1389249	Callee	EG		1388659	0					
ANR	1389250	Identifier	EG		1388659	0					
ANR	1389251	ArgumentList	zend_constants		1388659	1					
ANR	1389252	Argument	zend_constants		1388659	0					
ANR	1389253	Identifier	zend_constants		1388659	0					
ANR	1389254	Identifier	arData		1388659	1					
ANR	1389255	Identifier	idx		1388659	1					
ANR	1389256	IfStatement	if ( ! Z_TYPE ( p -> val ) == IS_UNDEF )		1388659	1					
ANR	1389257	Condition	! Z_TYPE ( p -> val ) == IS_UNDEF	471:6:13457:13483	1388659	0	True				
ANR	1389258	EqualityExpression	! Z_TYPE ( p -> val ) == IS_UNDEF		1388659	0		==			
ANR	1389259	UnaryOperationExpression	! Z_TYPE ( p -> val )		1388659	0					
ANR	1389260	UnaryOperator	!		1388659	0					
ANR	1389261	CallExpression	Z_TYPE ( p -> val )		1388659	1					
ANR	1389262	Callee	Z_TYPE		1388659	0					
ANR	1389263	Identifier	Z_TYPE		1388659	0					
ANR	1389264	ArgumentList	p -> val		1388659	1					
ANR	1389265	Argument	p -> val		1388659	0					
ANR	1389266	PtrMemberAccess	p -> val		1388659	0					
ANR	1389267	Identifier	p		1388659	0					
ANR	1389268	Identifier	val		1388659	1					
ANR	1389269	Identifier	IS_UNDEF		1388659	1					
ANR	1389270	ContinueStatement	continue ;	471:35:13486:13494	1388659	1	True				
ANR	1389271	IfStatement	if ( p -> key )		1388659	2					
ANR	1389272	Condition	p -> key	472:6:13502:13507	1388659	0	True				
ANR	1389273	PtrMemberAccess	p -> key		1388659	0					
ANR	1389274	Identifier	p		1388659	0					
ANR	1389275	Identifier	key		1388659	1					
ANR	1389276	CompoundStatement		83:14:2248:2248	1388659	1					
ANR	1389277	ExpressionStatement	p -> key = accel_new_interned_string ( p -> key )	473:3:13515:13557	1388659	0	True				
ANR	1389278	AssignmentExpression	p -> key = accel_new_interned_string ( p -> key )		1388659	0		=			
ANR	1389279	PtrMemberAccess	p -> key		1388659	0					
ANR	1389280	Identifier	p		1388659	0					
ANR	1389281	Identifier	key		1388659	1					
ANR	1389282	CallExpression	accel_new_interned_string ( p -> key )		1388659	1					
ANR	1389283	Callee	accel_new_interned_string		1388659	0					
ANR	1389284	Identifier	accel_new_interned_string		1388659	0					
ANR	1389285	ArgumentList	p -> key		1388659	1					
ANR	1389286	Argument	p -> key		1388659	0					
ANR	1389287	PtrMemberAccess	p -> key		1388659	0					
ANR	1389288	Identifier	p		1388659	0					
ANR	1389289	Identifier	key		1388659	1					
ANR	1389290	ForStatement	for ( idx = 0 ; idx < CG ( auto_globals ) -> nNumUsed ; idx ++ )		1388659	7					
ANR	1389291	ForInit	idx = 0 ;	478:6:13613:13620	1388659	0	True				
ANR	1389292	AssignmentExpression	idx = 0		1388659	0		=			
ANR	1389293	Identifier	idx		1388659	0					
ANR	1389294	PrimaryExpression	0		1388659	1					
ANR	1389295	Condition	idx < CG ( auto_globals ) -> nNumUsed	478:15:13622:13653	1388659	1	True				
ANR	1389296	RelationalExpression	idx < CG ( auto_globals ) -> nNumUsed		1388659	0		<			
ANR	1389297	Identifier	idx		1388659	0					
ANR	1389298	PtrMemberAccess	CG ( auto_globals ) -> nNumUsed		1388659	1					
ANR	1389299	CallExpression	CG ( auto_globals )		1388659	0					
ANR	1389300	Callee	CG		1388659	0					
ANR	1389301	Identifier	CG		1388659	0					
ANR	1389302	ArgumentList	auto_globals		1388659	1					
ANR	1389303	Argument	auto_globals		1388659	0					
ANR	1389304	Identifier	auto_globals		1388659	0					
ANR	1389305	Identifier	nNumUsed		1388659	1					
ANR	1389306	PostIncDecOperationExpression	idx ++	478:49:13656:13660	1388659	2	True				
ANR	1389307	Identifier	idx		1388659	0					
ANR	1389308	IncDec	++		1388659	1					
ANR	1389309	CompoundStatement		90:2:2405:2434	1388659	3					
ANR	1389310	IdentifierDeclStatement	zend_auto_global * auto_global ;	479:2:13667:13696	1388659	0	True				
ANR	1389311	IdentifierDecl	* auto_global		1388659	0					
ANR	1389312	IdentifierDeclType	zend_auto_global *		1388659	0					
ANR	1389313	Identifier	auto_global		1388659	1					
ANR	1389314	ExpressionStatement	p = CG ( auto_globals ) -> arData + idx	481:2:13701:13735	1388659	1	True				
ANR	1389315	AssignmentExpression	p = CG ( auto_globals ) -> arData + idx		1388659	0		=			
ANR	1389316	Identifier	p		1388659	0					
ANR	1389317	AdditiveExpression	CG ( auto_globals ) -> arData + idx		1388659	1		+			
ANR	1389318	PtrMemberAccess	CG ( auto_globals ) -> arData		1388659	0					
ANR	1389319	CallExpression	CG ( auto_globals )		1388659	0					
ANR	1389320	Callee	CG		1388659	0					
ANR	1389321	Identifier	CG		1388659	0					
ANR	1389322	ArgumentList	auto_globals		1388659	1					
ANR	1389323	Argument	auto_globals		1388659	0					
ANR	1389324	Identifier	auto_globals		1388659	0					
ANR	1389325	Identifier	arData		1388659	1					
ANR	1389326	Identifier	idx		1388659	1					
ANR	1389327	IfStatement	if ( Z_TYPE ( p -> val ) == IS_UNDEF )		1388659	2					
ANR	1389328	Condition	Z_TYPE ( p -> val ) == IS_UNDEF	482:6:13743:13768	1388659	0	True				
ANR	1389329	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		1388659	0		==			
ANR	1389330	CallExpression	Z_TYPE ( p -> val )		1388659	0					
ANR	1389331	Callee	Z_TYPE		1388659	0					
ANR	1389332	Identifier	Z_TYPE		1388659	0					
ANR	1389333	ArgumentList	p -> val		1388659	1					
ANR	1389334	Argument	p -> val		1388659	0					
ANR	1389335	PtrMemberAccess	p -> val		1388659	0					
ANR	1389336	Identifier	p		1388659	0					
ANR	1389337	Identifier	val		1388659	1					
ANR	1389338	Identifier	IS_UNDEF		1388659	1					
ANR	1389339	ContinueStatement	continue ;	482:34:13771:13779	1388659	1	True				
ANR	1389340	ExpressionStatement	auto_global = ( zend_auto_global * ) Z_PTR ( p -> val )	484:2:13784:13830	1388659	3	True				
ANR	1389341	AssignmentExpression	auto_global = ( zend_auto_global * ) Z_PTR ( p -> val )		1388659	0		=			
ANR	1389342	Identifier	auto_global		1388659	0					
ANR	1389343	CastExpression	( zend_auto_global * ) Z_PTR ( p -> val )		1388659	1					
ANR	1389344	CastTarget	zend_auto_global *		1388659	0					
ANR	1389345	CallExpression	Z_PTR ( p -> val )		1388659	1					
ANR	1389346	Callee	Z_PTR		1388659	0					
ANR	1389347	Identifier	Z_PTR		1388659	0					
ANR	1389348	ArgumentList	p -> val		1388659	1					
ANR	1389349	Argument	p -> val		1388659	0					
ANR	1389350	PtrMemberAccess	p -> val		1388659	0					
ANR	1389351	Identifier	p		1388659	0					
ANR	1389352	Identifier	val		1388659	1					
ANR	1389353	ExpressionStatement		484:49:13831:13831	1388659	4	True				
ANR	1389354	ExpressionStatement	zend_string_addref ( auto_global -> name )	486:2:13836:13873	1388659	5	True				
ANR	1389355	CallExpression	zend_string_addref ( auto_global -> name )		1388659	0					
ANR	1389356	Callee	zend_string_addref		1388659	0					
ANR	1389357	Identifier	zend_string_addref		1388659	0					
ANR	1389358	ArgumentList	auto_global -> name		1388659	1					
ANR	1389359	Argument	auto_global -> name		1388659	0					
ANR	1389360	PtrMemberAccess	auto_global -> name		1388659	0					
ANR	1389361	Identifier	auto_global		1388659	0					
ANR	1389362	Identifier	name		1388659	1					
ANR	1389363	ExpressionStatement	auto_global -> name = accel_new_interned_string ( auto_global -> name )	487:2:13877:13941	1388659	6	True				
ANR	1389364	AssignmentExpression	auto_global -> name = accel_new_interned_string ( auto_global -> name )		1388659	0		=			
ANR	1389365	PtrMemberAccess	auto_global -> name		1388659	0					
ANR	1389366	Identifier	auto_global		1388659	0					
ANR	1389367	Identifier	name		1388659	1					
ANR	1389368	CallExpression	accel_new_interned_string ( auto_global -> name )		1388659	1					
ANR	1389369	Callee	accel_new_interned_string		1388659	0					
ANR	1389370	Identifier	accel_new_interned_string		1388659	0					
ANR	1389371	ArgumentList	auto_global -> name		1388659	1					
ANR	1389372	Argument	auto_global -> name		1388659	0					
ANR	1389373	PtrMemberAccess	auto_global -> name		1388659	0					
ANR	1389374	Identifier	auto_global		1388659	0					
ANR	1389375	Identifier	name		1388659	1					
ANR	1389376	IfStatement	if ( p -> key )		1388659	7					
ANR	1389377	Condition	p -> key	488:6:13949:13954	1388659	0	True				
ANR	1389378	PtrMemberAccess	p -> key		1388659	0					
ANR	1389379	Identifier	p		1388659	0					
ANR	1389380	Identifier	key		1388659	1					
ANR	1389381	CompoundStatement		99:14:2695:2695	1388659	1					
ANR	1389382	ExpressionStatement	p -> key = accel_new_interned_string ( p -> key )	489:3:13962:14004	1388659	0	True				
ANR	1389383	AssignmentExpression	p -> key = accel_new_interned_string ( p -> key )		1388659	0		=			
ANR	1389384	PtrMemberAccess	p -> key		1388659	0					
ANR	1389385	Identifier	p		1388659	0					
ANR	1389386	Identifier	key		1388659	1					
ANR	1389387	CallExpression	accel_new_interned_string ( p -> key )		1388659	1					
ANR	1389388	Callee	accel_new_interned_string		1388659	0					
ANR	1389389	Identifier	accel_new_interned_string		1388659	0					
ANR	1389390	ArgumentList	p -> key		1388659	1					
ANR	1389391	Argument	p -> key		1388659	0					
ANR	1389392	PtrMemberAccess	p -> key		1388659	0					
ANR	1389393	Identifier	p		1388659	0					
ANR	1389394	Identifier	key		1388659	1					
ANR	1389395	ReturnType	static void		1388659	1					
ANR	1389396	Identifier	accel_use_shm_interned_strings		1388659	2					
ANR	1389397	ParameterList			1388659	3					
ANR	1389398	CFGEntryNode	ENTRY		1388659		True				
ANR	1389399	CFGExitNode	EXIT		1388659		True				
ANR	1389400	Symbol	ce -> constants_table		1388659						
ANR	1389401	Symbol	auto_global		1388659						
ANR	1389402	Symbol	* CG		1388659						
ANR	1389403	Symbol	Z_TYPE		1388659						
ANR	1389404	Symbol	* ce		1388659						
ANR	1389405	Symbol	Z_FUNC ( q -> val ) -> common		1388659						
ANR	1389406	Symbol	empty_string		1388659						
ANR	1389407	Symbol	one_char_string		1388659						
ANR	1389408	Symbol	q -> key		1388659						
ANR	1389409	Symbol	zend_string_init		1388659						
ANR	1389410	Symbol	ce -> properties_info . arData		1388659						
ANR	1389411	Symbol	zend_constants		1388659						
ANR	1389412	Symbol	* Z_FUNC		1388659						
ANR	1389413	Symbol	Z_FUNC ( q -> val ) -> common . function_name		1388659						
ANR	1389414	Symbol	ce -> name		1388659						
ANR	1389415	Symbol	IS_UNDEF		1388659						
ANR	1389416	Symbol	info		1388659						
ANR	1389417	Symbol	EG		1388659						
ANR	1389418	Symbol	auto_global -> name		1388659						
ANR	1389419	Symbol	p -> key		1388659						
ANR	1389420	Symbol	ce -> properties_info		1388659						
ANR	1389421	Symbol	auto_globals		1388659						
ANR	1389422	Symbol	q -> val		1388659						
ANR	1389423	Symbol	EG ( zend_constants ) -> arData		1388659						
ANR	1389424	Symbol	idx		1388659						
ANR	1389425	Symbol	function_table		1388659						
ANR	1389426	Symbol	accel_new_interned_string		1388659						
ANR	1389427	Symbol	CG ( class_table ) -> arData		1388659						
ANR	1389428	Symbol	Z_FUNC ( p -> val ) -> common		1388659						
ANR	1389429	Symbol	Z_PTR		1388659						
ANR	1389430	Symbol	* EG		1388659						
ANR	1389431	Symbol	CG ( function_table ) -> nNumUsed		1388659						
ANR	1389432	Symbol	ce -> function_table . nNumUsed		1388659						
ANR	1389433	Symbol	* auto_global		1388659						
ANR	1389434	Symbol	info -> name		1388659						
ANR	1389435	Symbol	class_table		1388659						
ANR	1389436	Symbol	EG ( zend_constants ) -> nNumUsed		1388659						
ANR	1389437	Symbol	ce		1388659						
ANR	1389438	Symbol	CG		1388659						
ANR	1389439	Symbol	Z_FUNC		1388659						
ANR	1389440	Symbol	ce -> constants_table . nNumUsed		1388659						
ANR	1389441	Symbol	CG ( auto_globals ) -> nNumUsed		1388659						
ANR	1389442	Symbol	j		1388659						
ANR	1389443	Symbol	CG ( auto_globals ) -> arData		1388659						
ANR	1389444	Symbol	p -> val		1388659						
ANR	1389445	Symbol	CG ( class_table ) -> nNumUsed		1388659						
ANR	1389446	Symbol	p		1388659						
ANR	1389447	Symbol	q		1388659						
ANR	1389448	Symbol	ce -> constants_table . arData		1388659						
ANR	1389449	Symbol	s		1388659						
ANR	1389450	Symbol	CG ( function_table ) -> arData		1388659						
ANR	1389451	Symbol	ce -> function_table . arData		1388659						
ANR	1389452	Symbol	* j		1388659						
ANR	1389453	Symbol	* p		1388659						
ANR	1389454	Symbol	* q		1388659						
ANR	1389455	Symbol	* info		1388659						
ANR	1389456	Symbol	ce -> function_table		1388659						
ANR	1389457	Symbol	ce -> properties_info . nNumUsed		1388659						
ANR	1389458	Symbol	* s		1388659						
ANR	1389459	Symbol	Z_FUNC ( p -> val ) -> common . function_name		1388659						
ANR	1389460	Function	accel_restart_enter	495:0:14023:14387							
ANR	1389461	FunctionDef	accel_restart_enter ()		1389460	0					
ANR	1389462	CompoundStatement		496:0:14068:14387	1389460	0					
ANR	1389463	ExpressionStatement	INCREMENT ( restart_in )	498:1:14089:14110	1389460	0	True				
ANR	1389464	CallExpression	INCREMENT ( restart_in )		1389460	0					
ANR	1389465	Callee	INCREMENT		1389460	0					
ANR	1389466	Identifier	INCREMENT		1389460	0					
ANR	1389467	ArgumentList	restart_in		1389460	1					
ANR	1389468	Argument	restart_in		1389460	0					
ANR	1389469	Identifier	restart_in		1389460	0					
ANR	1389470	ExpressionStatement	ZCSG ( restart_in_progress ) = 1	506:1:14356:14385	1389460	1	True				
ANR	1389471	AssignmentExpression	ZCSG ( restart_in_progress ) = 1		1389460	0		=			
ANR	1389472	CallExpression	ZCSG ( restart_in_progress )		1389460	0					
ANR	1389473	Callee	ZCSG		1389460	0					
ANR	1389474	Identifier	ZCSG		1389460	0					
ANR	1389475	ArgumentList	restart_in_progress		1389460	1					
ANR	1389476	Argument	restart_in_progress		1389460	0					
ANR	1389477	Identifier	restart_in_progress		1389460	0					
ANR	1389478	PrimaryExpression	1		1389460	1					
ANR	1389479	ReturnType	static inline void		1389460	1					
ANR	1389480	Identifier	accel_restart_enter		1389460	2					
ANR	1389481	ParameterList			1389460	3					
ANR	1389482	CFGEntryNode	ENTRY		1389460		True				
ANR	1389483	CFGExitNode	EXIT		1389460		True				
ANR	1389484	Symbol	ZCSG		1389460						
ANR	1389485	Symbol	restart_in		1389460						
ANR	1389486	Symbol	restart_in_progress		1389460						
ANR	1389487	Function	accel_restart_leave	509:0:14390:14780							
ANR	1389488	FunctionDef	accel_restart_leave ()		1389487	0					
ANR	1389489	CompoundStatement		510:0:14435:14780	1389487	0					
ANR	1389490	ExpressionStatement	ZCSG ( restart_in_progress ) = 0	512:1:14456:14485	1389487	0	True				
ANR	1389491	AssignmentExpression	ZCSG ( restart_in_progress ) = 0		1389487	0		=			
ANR	1389492	CallExpression	ZCSG ( restart_in_progress )		1389487	0					
ANR	1389493	Callee	ZCSG		1389487	0					
ANR	1389494	Identifier	ZCSG		1389487	0					
ANR	1389495	ArgumentList	restart_in_progress		1389487	1					
ANR	1389496	Argument	restart_in_progress		1389487	0					
ANR	1389497	Identifier	restart_in_progress		1389487	0					
ANR	1389498	PrimaryExpression	0		1389487	1					
ANR	1389499	ExpressionStatement	DECREMENT ( restart_in )	513:1:14488:14509	1389487	1	True				
ANR	1389500	CallExpression	DECREMENT ( restart_in )		1389487	0					
ANR	1389501	Callee	DECREMENT		1389487	0					
ANR	1389502	Identifier	DECREMENT		1389487	0					
ANR	1389503	ArgumentList	restart_in		1389487	1					
ANR	1389504	Argument	restart_in		1389487	0					
ANR	1389505	Identifier	restart_in		1389487	0					
ANR	1389506	ReturnType	static inline void		1389487	1					
ANR	1389507	Identifier	accel_restart_leave		1389487	2					
ANR	1389508	ParameterList			1389487	3					
ANR	1389509	CFGEntryNode	ENTRY		1389487		True				
ANR	1389510	CFGExitNode	EXIT		1389487		True				
ANR	1389511	Symbol	ZCSG		1389487						
ANR	1389512	Symbol	restart_in		1389487						
ANR	1389513	Symbol	restart_in_progress		1389487						
ANR	1389514	Function	accel_restart_is_active	524:0:14783:15288							
ANR	1389515	FunctionDef	accel_restart_is_active ()		1389514	0					
ANR	1389516	CompoundStatement		525:0:14831:15288	1389514	0					
ANR	1389517	IfStatement	if ( ZCSG ( restart_in_progress ) )		1389514	0					
ANR	1389518	Condition	ZCSG ( restart_in_progress )	526:5:14838:14862	1389514	0	True				
ANR	1389519	CallExpression	ZCSG ( restart_in_progress )		1389514	0					
ANR	1389520	Callee	ZCSG		1389514	0					
ANR	1389521	Identifier	ZCSG		1389514	0					
ANR	1389522	ArgumentList	restart_in_progress		1389514	1					
ANR	1389523	Argument	restart_in_progress		1389514	0					
ANR	1389524	Identifier	restart_in_progress		1389514	0					
ANR	1389525	CompoundStatement		2:32:33:33	1389514	1					
ANR	1389526	ExpressionStatement	"FLOCK_STRUCTURE ( restart_check , F_WRLCK , SEEK_SET , 2 , 1 )"	528:2:14888:14943	1389514	0	True				
ANR	1389527	CallExpression	"FLOCK_STRUCTURE ( restart_check , F_WRLCK , SEEK_SET , 2 , 1 )"		1389514	0					
ANR	1389528	Callee	FLOCK_STRUCTURE		1389514	0					
ANR	1389529	Identifier	FLOCK_STRUCTURE		1389514	0					
ANR	1389530	ArgumentList	restart_check		1389514	1					
ANR	1389531	Argument	restart_check		1389514	0					
ANR	1389532	Identifier	restart_check		1389514	0					
ANR	1389533	Argument	F_WRLCK		1389514	1					
ANR	1389534	Identifier	F_WRLCK		1389514	0					
ANR	1389535	Argument	SEEK_SET		1389514	2					
ANR	1389536	Identifier	SEEK_SET		1389514	0					
ANR	1389537	Argument	2		1389514	3					
ANR	1389538	PrimaryExpression	2		1389514	0					
ANR	1389539	Argument	1		1389514	4					
ANR	1389540	PrimaryExpression	1		1389514	0					
ANR	1389541	IfStatement	"if ( fcntl ( lock_file , F_GETLK , & restart_check ) == - 1 )"		1389514	1					
ANR	1389542	Condition	"fcntl ( lock_file , F_GETLK , & restart_check ) == - 1"	530:6:14952:14998	1389514	0	True				
ANR	1389543	EqualityExpression	"fcntl ( lock_file , F_GETLK , & restart_check ) == - 1"		1389514	0		==			
ANR	1389544	CallExpression	"fcntl ( lock_file , F_GETLK , & restart_check )"		1389514	0					
ANR	1389545	Callee	fcntl		1389514	0					
ANR	1389546	Identifier	fcntl		1389514	0					
ANR	1389547	ArgumentList	lock_file		1389514	1					
ANR	1389548	Argument	lock_file		1389514	0					
ANR	1389549	Identifier	lock_file		1389514	0					
ANR	1389550	Argument	F_GETLK		1389514	1					
ANR	1389551	Identifier	F_GETLK		1389514	0					
ANR	1389552	Argument	& restart_check		1389514	2					
ANR	1389553	UnaryOperationExpression	& restart_check		1389514	0					
ANR	1389554	UnaryOperator	&		1389514	0					
ANR	1389555	Identifier	restart_check		1389514	1					
ANR	1389556	UnaryOperationExpression	- 1		1389514	1					
ANR	1389557	UnaryOperator	-		1389514	0					
ANR	1389558	PrimaryExpression	1		1389514	1					
ANR	1389559	CompoundStatement		6:55:169:169	1389514	1					
ANR	1389560	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""RestartC:  %s (%d)"" , strerror ( errno ) , errno )"	531:3:15006:15085	1389514	0	True				
ANR	1389561	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""RestartC:  %s (%d)"" , strerror ( errno ) , errno )"		1389514	0					
ANR	1389562	Callee	zend_accel_error		1389514	0					
ANR	1389563	Identifier	zend_accel_error		1389514	0					
ANR	1389564	ArgumentList	ACCEL_LOG_DEBUG		1389514	1					
ANR	1389565	Argument	ACCEL_LOG_DEBUG		1389514	0					
ANR	1389566	Identifier	ACCEL_LOG_DEBUG		1389514	0					
ANR	1389567	Argument	"""RestartC:  %s (%d)"""		1389514	1					
ANR	1389568	PrimaryExpression	"""RestartC:  %s (%d)"""		1389514	0					
ANR	1389569	Argument	strerror ( errno )		1389514	2					
ANR	1389570	CallExpression	strerror ( errno )		1389514	0					
ANR	1389571	Callee	strerror		1389514	0					
ANR	1389572	Identifier	strerror		1389514	0					
ANR	1389573	ArgumentList	errno		1389514	1					
ANR	1389574	Argument	errno		1389514	0					
ANR	1389575	Identifier	errno		1389514	0					
ANR	1389576	Argument	errno		1389514	3					
ANR	1389577	Identifier	errno		1389514	0					
ANR	1389578	ReturnStatement	return FAILURE ;	532:3:15090:15104	1389514	1	True				
ANR	1389579	Identifier	FAILURE		1389514	0					
ANR	1389580	IfStatement	if ( restart_check . l_type == F_UNLCK )		1389514	2					
ANR	1389581	Condition	restart_check . l_type == F_UNLCK	534:6:15116:15146	1389514	0	True				
ANR	1389582	EqualityExpression	restart_check . l_type == F_UNLCK		1389514	0		==			
ANR	1389583	MemberAccess	restart_check . l_type		1389514	0					
ANR	1389584	Identifier	restart_check		1389514	0					
ANR	1389585	Identifier	l_type		1389514	1					
ANR	1389586	Identifier	F_UNLCK		1389514	1					
ANR	1389587	CompoundStatement		10:39:317:317	1389514	1					
ANR	1389588	ExpressionStatement	ZCSG ( restart_in_progress ) = 0	535:3:15154:15183	1389514	0	True				
ANR	1389589	AssignmentExpression	ZCSG ( restart_in_progress ) = 0		1389514	0		=			
ANR	1389590	CallExpression	ZCSG ( restart_in_progress )		1389514	0					
ANR	1389591	Callee	ZCSG		1389514	0					
ANR	1389592	Identifier	ZCSG		1389514	0					
ANR	1389593	ArgumentList	restart_in_progress		1389514	1					
ANR	1389594	Argument	restart_in_progress		1389514	0					
ANR	1389595	Identifier	restart_in_progress		1389514	0					
ANR	1389596	PrimaryExpression	0		1389514	1					
ANR	1389597	ReturnStatement	return 0 ;	536:3:15188:15196	1389514	1	True				
ANR	1389598	PrimaryExpression	0		1389514	0					
ANR	1389599	ElseStatement	else		1389514	0					
ANR	1389600	CompoundStatement		13:9:375:375	1389514	0					
ANR	1389601	ReturnStatement	return 1 ;	538:3:15212:15220	1389514	0	True				
ANR	1389602	PrimaryExpression	1		1389514	0					
ANR	1389603	ReturnStatement	return 0 ;	544:1:15278:15286	1389514	1	True				
ANR	1389604	PrimaryExpression	0		1389514	0					
ANR	1389605	ReturnType	static inline int		1389514	1					
ANR	1389606	Identifier	accel_restart_is_active		1389514	2					
ANR	1389607	ParameterList			1389514	3					
ANR	1389608	CFGEntryNode	ENTRY		1389514		True				
ANR	1389609	CFGExitNode	EXIT		1389514		True				
ANR	1389610	Symbol	F_WRLCK		1389514						
ANR	1389611	Symbol	SEEK_SET		1389514						
ANR	1389612	Symbol	F_UNLCK		1389514						
ANR	1389613	Symbol	restart_check		1389514						
ANR	1389614	Symbol	errno		1389514						
ANR	1389615	Symbol	F_GETLK		1389514						
ANR	1389616	Symbol	fcntl		1389514						
ANR	1389617	Symbol	restart_in_progress		1389514						
ANR	1389618	Symbol	FAILURE		1389514						
ANR	1389619	Symbol	strerror		1389514						
ANR	1389620	Symbol	ZCSG		1389514						
ANR	1389621	Symbol	ACCEL_LOG_DEBUG		1389514						
ANR	1389622	Symbol	restart_check . l_type		1389514						
ANR	1389623	Symbol	& restart_check		1389514						
ANR	1389624	Symbol	lock_file		1389514						
ANR	1389625	Function	accel_activate_add	548:0:15332:15651							
ANR	1389626	FunctionDef	accel_activate_add ()		1389625	0					
ANR	1389627	CompoundStatement		549:0:15376:15651	1389625	0					
ANR	1389628	ExpressionStatement	INCREMENT ( mem_usage )	551:1:15397:15417	1389625	0	True				
ANR	1389629	CallExpression	INCREMENT ( mem_usage )		1389625	0					
ANR	1389630	Callee	INCREMENT		1389625	0					
ANR	1389631	Identifier	INCREMENT		1389625	0					
ANR	1389632	ArgumentList	mem_usage		1389625	1					
ANR	1389633	Argument	mem_usage		1389625	0					
ANR	1389634	Identifier	mem_usage		1389625	0					
ANR	1389635	ReturnType	static inline void		1389625	1					
ANR	1389636	Identifier	accel_activate_add		1389625	2					
ANR	1389637	ParameterList			1389625	3					
ANR	1389638	CFGEntryNode	ENTRY		1389625		True				
ANR	1389639	CFGExitNode	EXIT		1389625		True				
ANR	1389640	Symbol	mem_usage		1389625						
ANR	1389641	Function	accel_deactivate_sub	562:0:15691:16061							
ANR	1389642	FunctionDef	accel_deactivate_sub ()		1389641	0					
ANR	1389643	CompoundStatement		563:0:15737:16061	1389641	0					
ANR	1389644	IfStatement	if ( ZCG ( counted ) )		1389641	0					
ANR	1389645	Condition	ZCG ( counted )	565:5:15762:15773	1389641	0	True				
ANR	1389646	CallExpression	ZCG ( counted )		1389641	0					
ANR	1389647	Callee	ZCG		1389641	0					
ANR	1389648	Identifier	ZCG		1389641	0					
ANR	1389649	ArgumentList	counted		1389641	1					
ANR	1389650	Argument	counted		1389641	0					
ANR	1389651	Identifier	counted		1389641	0					
ANR	1389652	CompoundStatement		3:19:38:38	1389641	1					
ANR	1389653	ExpressionStatement	DECREMENT ( mem_usage )	566:2:15780:15800	1389641	0	True				
ANR	1389654	CallExpression	DECREMENT ( mem_usage )		1389641	0					
ANR	1389655	Callee	DECREMENT		1389641	0					
ANR	1389656	Identifier	DECREMENT		1389641	0					
ANR	1389657	ArgumentList	mem_usage		1389641	1					
ANR	1389658	Argument	mem_usage		1389641	0					
ANR	1389659	Identifier	mem_usage		1389641	0					
ANR	1389660	ExpressionStatement	ZCG ( counted ) = 0	567:2:15804:15820	1389641	1	True				
ANR	1389661	AssignmentExpression	ZCG ( counted ) = 0		1389641	0		=			
ANR	1389662	CallExpression	ZCG ( counted )		1389641	0					
ANR	1389663	Callee	ZCG		1389641	0					
ANR	1389664	Identifier	ZCG		1389641	0					
ANR	1389665	ArgumentList	counted		1389641	1					
ANR	1389666	Argument	counted		1389641	0					
ANR	1389667	Identifier	counted		1389641	0					
ANR	1389668	PrimaryExpression	0		1389641	1					
ANR	1389669	ReturnType	static inline void		1389641	1					
ANR	1389670	Identifier	accel_deactivate_sub		1389641	2					
ANR	1389671	ParameterList			1389641	3					
ANR	1389672	CFGEntryNode	ENTRY		1389641		True				
ANR	1389673	CFGExitNode	EXIT		1389641		True				
ANR	1389674	Symbol	mem_usage		1389641						
ANR	1389675	Symbol	counted		1389641						
ANR	1389676	Symbol	ZCG		1389641						
ANR	1389677	Function	accel_unlock_all	578:0:16064:16393							
ANR	1389678	FunctionDef	accel_unlock_all ()		1389677	0					
ANR	1389679	CompoundStatement		579:0:16106:16393	1389677	0					
ANR	1389680	ExpressionStatement	accel_deactivate_sub ( )	581:1:16127:16149	1389677	0	True				
ANR	1389681	CallExpression	accel_deactivate_sub ( )		1389677	0					
ANR	1389682	Callee	accel_deactivate_sub		1389677	0					
ANR	1389683	Identifier	accel_deactivate_sub		1389677	0					
ANR	1389684	ArgumentList			1389677	1					
ANR	1389685	ReturnType	static inline void		1389677	1					
ANR	1389686	Identifier	accel_unlock_all		1389677	2					
ANR	1389687	ParameterList			1389677	3					
ANR	1389688	CFGEntryNode	ENTRY		1389677		True				
ANR	1389689	CFGExitNode	EXIT		1389677		True				
ANR	1389690	Function	kill_all_lockers	592:0:16415:17584							
ANR	1389691	FunctionDef	kill_all_lockers (struct flock * mem_usage_check)		1389690	0					
ANR	1389692	CompoundStatement		593:0:16482:17584	1389690	0					
ANR	1389693	IdentifierDeclStatement	int tries = 10 ;	594:1:16485:16499	1389690	0	True				
ANR	1389694	IdentifierDecl	tries = 10		1389690	0					
ANR	1389695	IdentifierDeclType	int		1389690	0					
ANR	1389696	Identifier	tries		1389690	1					
ANR	1389697	AssignmentExpression	tries = 10		1389690	2		=			
ANR	1389698	Identifier	tries		1389690	0					
ANR	1389699	PrimaryExpression	10		1389690	1					
ANR	1389700	ExpressionStatement	ZCSG ( force_restart_time ) = 0	597:1:16581:16609	1389690	1	True				
ANR	1389701	AssignmentExpression	ZCSG ( force_restart_time ) = 0		1389690	0		=			
ANR	1389702	CallExpression	ZCSG ( force_restart_time )		1389690	0					
ANR	1389703	Callee	ZCSG		1389690	0					
ANR	1389704	Identifier	ZCSG		1389690	0					
ANR	1389705	ArgumentList	force_restart_time		1389690	1					
ANR	1389706	Argument	force_restart_time		1389690	0					
ANR	1389707	Identifier	force_restart_time		1389690	0					
ANR	1389708	PrimaryExpression	0		1389690	1					
ANR	1389709	WhileStatement	while ( mem_usage_check -> l_pid > 0 )		1389690	2					
ANR	1389710	Condition	mem_usage_check -> l_pid > 0	598:8:16619:16644	1389690	0	True				
ANR	1389711	RelationalExpression	mem_usage_check -> l_pid > 0		1389690	0		>			
ANR	1389712	PtrMemberAccess	mem_usage_check -> l_pid		1389690	0					
ANR	1389713	Identifier	mem_usage_check		1389690	0					
ANR	1389714	Identifier	l_pid		1389690	1					
ANR	1389715	PrimaryExpression	0		1389690	1					
ANR	1389716	CompoundStatement		6:36:164:164	1389690	1					
ANR	1389717	WhileStatement	while ( tries -- )		1389690	0					
ANR	1389718	Condition	tries --	599:9:16658:16664	1389690	0	True				
ANR	1389719	PostIncDecOperationExpression	tries --		1389690	0					
ANR	1389720	Identifier	tries		1389690	0					
ANR	1389721	IncDec	--		1389690	1					
ANR	1389722	CompoundStatement		7:18:184:184	1389690	1					
ANR	1389723	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_ERROR , ""Killed locker %d"" , mem_usage_check -> l_pid )"	600:3:16672:16749	1389690	0	True				
ANR	1389724	CallExpression	"zend_accel_error ( ACCEL_LOG_ERROR , ""Killed locker %d"" , mem_usage_check -> l_pid )"		1389690	0					
ANR	1389725	Callee	zend_accel_error		1389690	0					
ANR	1389726	Identifier	zend_accel_error		1389690	0					
ANR	1389727	ArgumentList	ACCEL_LOG_ERROR		1389690	1					
ANR	1389728	Argument	ACCEL_LOG_ERROR		1389690	0					
ANR	1389729	Identifier	ACCEL_LOG_ERROR		1389690	0					
ANR	1389730	Argument	"""Killed locker %d"""		1389690	1					
ANR	1389731	PrimaryExpression	"""Killed locker %d"""		1389690	0					
ANR	1389732	Argument	mem_usage_check -> l_pid		1389690	2					
ANR	1389733	PtrMemberAccess	mem_usage_check -> l_pid		1389690	0					
ANR	1389734	Identifier	mem_usage_check		1389690	0					
ANR	1389735	Identifier	l_pid		1389690	1					
ANR	1389736	IfStatement	"if ( kill ( mem_usage_check -> l_pid , SIGKILL ) )"		1389690	1					
ANR	1389737	Condition	"kill ( mem_usage_check -> l_pid , SIGKILL )"	601:7:16758:16794	1389690	0	True				
ANR	1389738	CallExpression	"kill ( mem_usage_check -> l_pid , SIGKILL )"		1389690	0					
ANR	1389739	Callee	kill		1389690	0					
ANR	1389740	Identifier	kill		1389690	0					
ANR	1389741	ArgumentList	mem_usage_check -> l_pid		1389690	1					
ANR	1389742	Argument	mem_usage_check -> l_pid		1389690	0					
ANR	1389743	PtrMemberAccess	mem_usage_check -> l_pid		1389690	0					
ANR	1389744	Identifier	mem_usage_check		1389690	0					
ANR	1389745	Identifier	l_pid		1389690	1					
ANR	1389746	Argument	SIGKILL		1389690	1					
ANR	1389747	Identifier	SIGKILL		1389690	0					
ANR	1389748	CompoundStatement		9:46:314:314	1389690	1					
ANR	1389749	BreakStatement	break ;	602:4:16803:16808	1389690	0	True				
ANR	1389750	ExpressionStatement	usleep ( 20000 )	605:3:16851:16864	1389690	2	True				
ANR	1389751	CallExpression	usleep ( 20000 )		1389690	0					
ANR	1389752	Callee	usleep		1389690	0					
ANR	1389753	Identifier	usleep		1389690	0					
ANR	1389754	ArgumentList	20000		1389690	1					
ANR	1389755	Argument	20000		1389690	0					
ANR	1389756	PrimaryExpression	20000		1389690	0					
ANR	1389757	IfStatement	"if ( kill ( mem_usage_check -> l_pid , 0 ) )"		1389690	3					
ANR	1389758	Condition	"kill ( mem_usage_check -> l_pid , 0 )"	606:7:16873:16903	1389690	0	True				
ANR	1389759	CallExpression	"kill ( mem_usage_check -> l_pid , 0 )"		1389690	0					
ANR	1389760	Callee	kill		1389690	0					
ANR	1389761	Identifier	kill		1389690	0					
ANR	1389762	ArgumentList	mem_usage_check -> l_pid		1389690	1					
ANR	1389763	Argument	mem_usage_check -> l_pid		1389690	0					
ANR	1389764	PtrMemberAccess	mem_usage_check -> l_pid		1389690	0					
ANR	1389765	Identifier	mem_usage_check		1389690	0					
ANR	1389766	Identifier	l_pid		1389690	1					
ANR	1389767	Argument	0		1389690	1					
ANR	1389768	PrimaryExpression	0		1389690	0					
ANR	1389769	CompoundStatement		14:40:423:423	1389690	1					
ANR	1389770	BreakStatement	break ;	608:4:16936:16941	1389690	0	True				
ANR	1389771	ExpressionStatement	usleep ( 10000 )	610:3:16951:16964	1389690	4	True				
ANR	1389772	CallExpression	usleep ( 10000 )		1389690	0					
ANR	1389773	Callee	usleep		1389690	0					
ANR	1389774	Identifier	usleep		1389690	0					
ANR	1389775	ArgumentList	10000		1389690	1					
ANR	1389776	Argument	10000		1389690	0					
ANR	1389777	PrimaryExpression	10000		1389690	0					
ANR	1389778	IfStatement	if ( ! tries )		1389690	1					
ANR	1389779	Condition	! tries	612:6:16976:16981	1389690	0	True				
ANR	1389780	UnaryOperationExpression	! tries		1389690	0					
ANR	1389781	UnaryOperator	!		1389690	0					
ANR	1389782	Identifier	tries		1389690	1					
ANR	1389783	CompoundStatement		20:14:501:501	1389690	1					
ANR	1389784	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_ERROR , ""Can't kill %d after 20 tries!"" , mem_usage_check -> l_pid )"	613:3:16989:17079	1389690	0	True				
ANR	1389785	CallExpression	"zend_accel_error ( ACCEL_LOG_ERROR , ""Can't kill %d after 20 tries!"" , mem_usage_check -> l_pid )"		1389690	0					
ANR	1389786	Callee	zend_accel_error		1389690	0					
ANR	1389787	Identifier	zend_accel_error		1389690	0					
ANR	1389788	ArgumentList	ACCEL_LOG_ERROR		1389690	1					
ANR	1389789	Argument	ACCEL_LOG_ERROR		1389690	0					
ANR	1389790	Identifier	ACCEL_LOG_ERROR		1389690	0					
ANR	1389791	Argument	"""Can't kill %d after 20 tries!"""		1389690	1					
ANR	1389792	PrimaryExpression	"""Can't kill %d after 20 tries!"""		1389690	0					
ANR	1389793	Argument	mem_usage_check -> l_pid		1389690	2					
ANR	1389794	PtrMemberAccess	mem_usage_check -> l_pid		1389690	0					
ANR	1389795	Identifier	mem_usage_check		1389690	0					
ANR	1389796	Identifier	l_pid		1389690	1					
ANR	1389797	ExpressionStatement	ZCSG ( force_restart_time ) = time ( NULL )	614:3:17084:17121	1389690	1	True				
ANR	1389798	AssignmentExpression	ZCSG ( force_restart_time ) = time ( NULL )		1389690	0		=			
ANR	1389799	CallExpression	ZCSG ( force_restart_time )		1389690	0					
ANR	1389800	Callee	ZCSG		1389690	0					
ANR	1389801	Identifier	ZCSG		1389690	0					
ANR	1389802	ArgumentList	force_restart_time		1389690	1					
ANR	1389803	Argument	force_restart_time		1389690	0					
ANR	1389804	Identifier	force_restart_time		1389690	0					
ANR	1389805	CallExpression	time ( NULL )		1389690	1					
ANR	1389806	Callee	time		1389690	0					
ANR	1389807	Identifier	time		1389690	0					
ANR	1389808	ArgumentList	NULL		1389690	1					
ANR	1389809	Argument	NULL		1389690	0					
ANR	1389810	Identifier	NULL		1389690	0					
ANR	1389811	ExpressionStatement	mem_usage_check -> l_type = F_WRLCK	617:2:17167:17200	1389690	2	True				
ANR	1389812	AssignmentExpression	mem_usage_check -> l_type = F_WRLCK		1389690	0		=			
ANR	1389813	PtrMemberAccess	mem_usage_check -> l_type		1389690	0					
ANR	1389814	Identifier	mem_usage_check		1389690	0					
ANR	1389815	Identifier	l_type		1389690	1					
ANR	1389816	Identifier	F_WRLCK		1389690	1					
ANR	1389817	ExpressionStatement	mem_usage_check -> l_whence = SEEK_SET	618:2:17204:17240	1389690	3	True				
ANR	1389818	AssignmentExpression	mem_usage_check -> l_whence = SEEK_SET		1389690	0		=			
ANR	1389819	PtrMemberAccess	mem_usage_check -> l_whence		1389690	0					
ANR	1389820	Identifier	mem_usage_check		1389690	0					
ANR	1389821	Identifier	l_whence		1389690	1					
ANR	1389822	Identifier	SEEK_SET		1389690	1					
ANR	1389823	ExpressionStatement	mem_usage_check -> l_start = 1	619:2:17244:17272	1389690	4	True				
ANR	1389824	AssignmentExpression	mem_usage_check -> l_start = 1		1389690	0		=			
ANR	1389825	PtrMemberAccess	mem_usage_check -> l_start		1389690	0					
ANR	1389826	Identifier	mem_usage_check		1389690	0					
ANR	1389827	Identifier	l_start		1389690	1					
ANR	1389828	PrimaryExpression	1		1389690	1					
ANR	1389829	ExpressionStatement	mem_usage_check -> l_len = 1	620:2:17276:17302	1389690	5	True				
ANR	1389830	AssignmentExpression	mem_usage_check -> l_len = 1		1389690	0		=			
ANR	1389831	PtrMemberAccess	mem_usage_check -> l_len		1389690	0					
ANR	1389832	Identifier	mem_usage_check		1389690	0					
ANR	1389833	Identifier	l_len		1389690	1					
ANR	1389834	PrimaryExpression	1		1389690	1					
ANR	1389835	ExpressionStatement	mem_usage_check -> l_pid = - 1	621:2:17306:17333	1389690	6	True				
ANR	1389836	AssignmentExpression	mem_usage_check -> l_pid = - 1		1389690	0		=			
ANR	1389837	PtrMemberAccess	mem_usage_check -> l_pid		1389690	0					
ANR	1389838	Identifier	mem_usage_check		1389690	0					
ANR	1389839	Identifier	l_pid		1389690	1					
ANR	1389840	UnaryOperationExpression	- 1		1389690	1					
ANR	1389841	UnaryOperator	-		1389690	0					
ANR	1389842	PrimaryExpression	1		1389690	1					
ANR	1389843	IfStatement	"if ( fcntl ( lock_file , F_GETLK , mem_usage_check ) == - 1 )"		1389690	7					
ANR	1389844	Condition	"fcntl ( lock_file , F_GETLK , mem_usage_check ) == - 1"	622:6:17341:17388	1389690	0	True				
ANR	1389845	EqualityExpression	"fcntl ( lock_file , F_GETLK , mem_usage_check ) == - 1"		1389690	0		==			
ANR	1389846	CallExpression	"fcntl ( lock_file , F_GETLK , mem_usage_check )"		1389690	0					
ANR	1389847	Callee	fcntl		1389690	0					
ANR	1389848	Identifier	fcntl		1389690	0					
ANR	1389849	ArgumentList	lock_file		1389690	1					
ANR	1389850	Argument	lock_file		1389690	0					
ANR	1389851	Identifier	lock_file		1389690	0					
ANR	1389852	Argument	F_GETLK		1389690	1					
ANR	1389853	Identifier	F_GETLK		1389690	0					
ANR	1389854	Argument	mem_usage_check		1389690	2					
ANR	1389855	Identifier	mem_usage_check		1389690	0					
ANR	1389856	UnaryOperationExpression	- 1		1389690	1					
ANR	1389857	UnaryOperator	-		1389690	0					
ANR	1389858	PrimaryExpression	1		1389690	1					
ANR	1389859	CompoundStatement		30:56:908:908	1389690	1					
ANR	1389860	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""KLockers:  %s (%d)"" , strerror ( errno ) , errno )"	623:3:17396:17475	1389690	0	True				
ANR	1389861	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""KLockers:  %s (%d)"" , strerror ( errno ) , errno )"		1389690	0					
ANR	1389862	Callee	zend_accel_error		1389690	0					
ANR	1389863	Identifier	zend_accel_error		1389690	0					
ANR	1389864	ArgumentList	ACCEL_LOG_DEBUG		1389690	1					
ANR	1389865	Argument	ACCEL_LOG_DEBUG		1389690	0					
ANR	1389866	Identifier	ACCEL_LOG_DEBUG		1389690	0					
ANR	1389867	Argument	"""KLockers:  %s (%d)"""		1389690	1					
ANR	1389868	PrimaryExpression	"""KLockers:  %s (%d)"""		1389690	0					
ANR	1389869	Argument	strerror ( errno )		1389690	2					
ANR	1389870	CallExpression	strerror ( errno )		1389690	0					
ANR	1389871	Callee	strerror		1389690	0					
ANR	1389872	Identifier	strerror		1389690	0					
ANR	1389873	ArgumentList	errno		1389690	1					
ANR	1389874	Argument	errno		1389690	0					
ANR	1389875	Identifier	errno		1389690	0					
ANR	1389876	Argument	errno		1389690	3					
ANR	1389877	Identifier	errno		1389690	0					
ANR	1389878	BreakStatement	break ;	624:3:17480:17485	1389690	1	True				
ANR	1389879	IfStatement	if ( mem_usage_check -> l_type == F_UNLCK || mem_usage_check -> l_pid <= 0 )		1389690	8					
ANR	1389880	Condition	mem_usage_check -> l_type == F_UNLCK || mem_usage_check -> l_pid <= 0	627:6:17498:17562	1389690	0	True				
ANR	1389881	OrExpression	mem_usage_check -> l_type == F_UNLCK || mem_usage_check -> l_pid <= 0		1389690	0		||			
ANR	1389882	EqualityExpression	mem_usage_check -> l_type == F_UNLCK		1389690	0		==			
ANR	1389883	PtrMemberAccess	mem_usage_check -> l_type		1389690	0					
ANR	1389884	Identifier	mem_usage_check		1389690	0					
ANR	1389885	Identifier	l_type		1389690	1					
ANR	1389886	Identifier	F_UNLCK		1389690	1					
ANR	1389887	RelationalExpression	mem_usage_check -> l_pid <= 0		1389690	1		<=			
ANR	1389888	PtrMemberAccess	mem_usage_check -> l_pid		1389690	0					
ANR	1389889	Identifier	mem_usage_check		1389690	0					
ANR	1389890	Identifier	l_pid		1389690	1					
ANR	1389891	PrimaryExpression	0		1389690	1					
ANR	1389892	CompoundStatement		35:73:1082:1082	1389690	1					
ANR	1389893	BreakStatement	break ;	628:3:17570:17575	1389690	0	True				
ANR	1389894	ReturnType	static inline void		1389690	1					
ANR	1389895	Identifier	kill_all_lockers		1389690	2					
ANR	1389896	ParameterList	struct flock * mem_usage_check		1389690	3					
ANR	1389897	Parameter	struct flock * mem_usage_check	592:36:16451:16479	1389690	0	True				
ANR	1389898	ParameterType	struct flock *		1389690	0					
ANR	1389899	Identifier	mem_usage_check		1389690	1					
ANR	1389900	CFGEntryNode	ENTRY		1389690		True				
ANR	1389901	CFGExitNode	EXIT		1389690		True				
ANR	1389902	Symbol	F_WRLCK		1389690						
ANR	1389903	Symbol	SEEK_SET		1389690						
ANR	1389904	Symbol	F_UNLCK		1389690						
ANR	1389905	Symbol	tries		1389690						
ANR	1389906	Symbol	errno		1389690						
ANR	1389907	Symbol	mem_usage_check		1389690						
ANR	1389908	Symbol	NULL		1389690						
ANR	1389909	Symbol	fcntl		1389690						
ANR	1389910	Symbol	F_GETLK		1389690						
ANR	1389911	Symbol	kill		1389690						
ANR	1389912	Symbol	mem_usage_check -> l_start		1389690						
ANR	1389913	Symbol	mem_usage_check -> l_len		1389690						
ANR	1389914	Symbol	SIGKILL		1389690						
ANR	1389915	Symbol	strerror		1389690						
ANR	1389916	Symbol	ZCSG		1389690						
ANR	1389917	Symbol	mem_usage_check -> l_pid		1389690						
ANR	1389918	Symbol	ACCEL_LOG_DEBUG		1389690						
ANR	1389919	Symbol	* mem_usage_check		1389690						
ANR	1389920	Symbol	force_restart_time		1389690						
ANR	1389921	Symbol	mem_usage_check -> l_whence		1389690						
ANR	1389922	Symbol	time		1389690						
ANR	1389923	Symbol	lock_file		1389690						
ANR	1389924	Symbol	mem_usage_check -> l_type		1389690						
ANR	1389925	Symbol	ACCEL_LOG_ERROR		1389690						
ANR	1389926	Function	accel_is_inactive	634:0:17594:18465							
ANR	1389927	FunctionDef	accel_is_inactive ()		1389926	0					
ANR	1389928	CompoundStatement		635:0:17636:18465	1389926	0					
ANR	1389929	IfStatement	if ( LOCKVAL ( mem_usage ) == 0 )		1389926	0					
ANR	1389930	Condition	LOCKVAL ( mem_usage ) == 0	637:5:17661:17683	1389926	0	True				
ANR	1389931	EqualityExpression	LOCKVAL ( mem_usage ) == 0		1389926	0		==			
ANR	1389932	CallExpression	LOCKVAL ( mem_usage )		1389926	0					
ANR	1389933	Callee	LOCKVAL		1389926	0					
ANR	1389934	Identifier	LOCKVAL		1389926	0					
ANR	1389935	ArgumentList	mem_usage		1389926	1					
ANR	1389936	Argument	mem_usage		1389926	0					
ANR	1389937	Identifier	mem_usage		1389926	0					
ANR	1389938	PrimaryExpression	0		1389926	1					
ANR	1389939	CompoundStatement		3:30:49:49	1389926	1					
ANR	1389940	ReturnStatement	return SUCCESS ;	638:2:17690:17704	1389926	0	True				
ANR	1389941	Identifier	SUCCESS		1389926	0					
ANR	1389942	ReturnStatement	return FAILURE ;	662:1:18449:18463	1389926	1	True				
ANR	1389943	Identifier	FAILURE		1389926	0					
ANR	1389944	ReturnType	static inline int		1389926	1					
ANR	1389945	Identifier	accel_is_inactive		1389926	2					
ANR	1389946	ParameterList			1389926	3					
ANR	1389947	CFGEntryNode	ENTRY		1389926		True				
ANR	1389948	CFGExitNode	EXIT		1389926		True				
ANR	1389949	Symbol	mem_usage		1389926						
ANR	1389950	Symbol	SUCCESS		1389926						
ANR	1389951	Symbol	LOCKVAL		1389926						
ANR	1389952	Symbol	FAILURE		1389926						
ANR	1389953	Function	zend_get_stream_timestamp	665:0:18468:19297							
ANR	1389954	FunctionDef	"zend_get_stream_timestamp (const char * filename , zend_stat_t * statbuf)"		1389953	0					
ANR	1389955	CompoundStatement		666:0:18549:19297	1389953	0					
ANR	1389956	IdentifierDeclStatement	php_stream_wrapper * wrapper ;	667:1:18552:18579	1389953	0	True				
ANR	1389957	IdentifierDecl	* wrapper		1389953	0					
ANR	1389958	IdentifierDeclType	php_stream_wrapper *		1389953	0					
ANR	1389959	Identifier	wrapper		1389953	1					
ANR	1389960	IdentifierDeclStatement	php_stream_statbuf stream_statbuf ;	668:1:18582:18615	1389953	1	True				
ANR	1389961	IdentifierDecl	stream_statbuf		1389953	0					
ANR	1389962	IdentifierDeclType	php_stream_statbuf		1389953	0					
ANR	1389963	Identifier	stream_statbuf		1389953	1					
ANR	1389964	IdentifierDeclStatement	"int ret , er ;"	669:1:18618:18629	1389953	2	True				
ANR	1389965	IdentifierDecl	ret		1389953	0					
ANR	1389966	IdentifierDeclType	int		1389953	0					
ANR	1389967	Identifier	ret		1389953	1					
ANR	1389968	IdentifierDecl	er		1389953	1					
ANR	1389969	IdentifierDeclType	int		1389953	0					
ANR	1389970	Identifier	er		1389953	1					
ANR	1389971	IfStatement	if ( ! filename )		1389953	3					
ANR	1389972	Condition	! filename	671:5:18637:18645	1389953	0	True				
ANR	1389973	UnaryOperationExpression	! filename		1389953	0					
ANR	1389974	UnaryOperator	!		1389953	0					
ANR	1389975	Identifier	filename		1389953	1					
ANR	1389976	CompoundStatement		6:16:98:98	1389953	1					
ANR	1389977	ReturnStatement	return FAILURE ;	672:2:18652:18666	1389953	0	True				
ANR	1389978	Identifier	FAILURE		1389953	0					
ANR	1389979	ExpressionStatement	"wrapper = php_stream_locate_url_wrapper ( filename , NULL , STREAM_LOCATE_WRAPPERS_ONLY )"	675:1:18673:18757	1389953	4	True				
ANR	1389980	AssignmentExpression	"wrapper = php_stream_locate_url_wrapper ( filename , NULL , STREAM_LOCATE_WRAPPERS_ONLY )"		1389953	0		=			
ANR	1389981	Identifier	wrapper		1389953	0					
ANR	1389982	CallExpression	"php_stream_locate_url_wrapper ( filename , NULL , STREAM_LOCATE_WRAPPERS_ONLY )"		1389953	1					
ANR	1389983	Callee	php_stream_locate_url_wrapper		1389953	0					
ANR	1389984	Identifier	php_stream_locate_url_wrapper		1389953	0					
ANR	1389985	ArgumentList	filename		1389953	1					
ANR	1389986	Argument	filename		1389953	0					
ANR	1389987	Identifier	filename		1389953	0					
ANR	1389988	Argument	NULL		1389953	1					
ANR	1389989	Identifier	NULL		1389953	0					
ANR	1389990	Argument	STREAM_LOCATE_WRAPPERS_ONLY		1389953	2					
ANR	1389991	Identifier	STREAM_LOCATE_WRAPPERS_ONLY		1389953	0					
ANR	1389992	IfStatement	if ( ! wrapper )		1389953	5					
ANR	1389993	Condition	! wrapper	676:5:18764:18771	1389953	0	True				
ANR	1389994	UnaryOperationExpression	! wrapper		1389953	0					
ANR	1389995	UnaryOperator	!		1389953	0					
ANR	1389996	Identifier	wrapper		1389953	1					
ANR	1389997	CompoundStatement		11:15:224:224	1389953	1					
ANR	1389998	ReturnStatement	return FAILURE ;	677:2:18778:18792	1389953	0	True				
ANR	1389999	Identifier	FAILURE		1389953	0					
ANR	1390000	IfStatement	if ( ! wrapper -> wops || ! wrapper -> wops -> url_stat )		1389953	6					
ANR	1390001	Condition	! wrapper -> wops || ! wrapper -> wops -> url_stat	679:5:18802:18843	1389953	0	True				
ANR	1390002	OrExpression	! wrapper -> wops || ! wrapper -> wops -> url_stat		1389953	0		||			
ANR	1390003	UnaryOperationExpression	! wrapper -> wops		1389953	0					
ANR	1390004	UnaryOperator	!		1389953	0					
ANR	1390005	PtrMemberAccess	wrapper -> wops		1389953	1					
ANR	1390006	Identifier	wrapper		1389953	0					
ANR	1390007	Identifier	wops		1389953	1					
ANR	1390008	UnaryOperationExpression	! wrapper -> wops -> url_stat		1389953	1					
ANR	1390009	UnaryOperator	!		1389953	0					
ANR	1390010	PtrMemberAccess	wrapper -> wops -> url_stat		1389953	1					
ANR	1390011	PtrMemberAccess	wrapper -> wops		1389953	0					
ANR	1390012	Identifier	wrapper		1389953	0					
ANR	1390013	Identifier	wops		1389953	1					
ANR	1390014	Identifier	url_stat		1389953	1					
ANR	1390015	CompoundStatement		14:49:296:296	1389953	1					
ANR	1390016	ExpressionStatement	statbuf -> st_mtime = 1	680:2:18850:18871	1389953	0	True				
ANR	1390017	AssignmentExpression	statbuf -> st_mtime = 1		1389953	0		=			
ANR	1390018	PtrMemberAccess	statbuf -> st_mtime		1389953	0					
ANR	1390019	Identifier	statbuf		1389953	0					
ANR	1390020	Identifier	st_mtime		1389953	1					
ANR	1390021	PrimaryExpression	1		1389953	1					
ANR	1390022	ReturnStatement	return SUCCESS ;	681:2:18875:18889	1389953	1	True				
ANR	1390023	Identifier	SUCCESS		1389953	0					
ANR	1390024	ExpressionStatement	er = EG ( error_reporting )	684:1:18962:18986	1389953	7	True				
ANR	1390025	AssignmentExpression	er = EG ( error_reporting )		1389953	0		=			
ANR	1390026	Identifier	er		1389953	0					
ANR	1390027	CallExpression	EG ( error_reporting )		1389953	1					
ANR	1390028	Callee	EG		1389953	0					
ANR	1390029	Identifier	EG		1389953	0					
ANR	1390030	ArgumentList	error_reporting		1389953	1					
ANR	1390031	Argument	error_reporting		1389953	0					
ANR	1390032	Identifier	error_reporting		1389953	0					
ANR	1390033	ExpressionStatement	EG ( error_reporting ) = 0	685:1:18989:19012	1389953	8	True				
ANR	1390034	AssignmentExpression	EG ( error_reporting ) = 0		1389953	0		=			
ANR	1390035	CallExpression	EG ( error_reporting )		1389953	0					
ANR	1390036	Callee	EG		1389953	0					
ANR	1390037	Identifier	EG		1389953	0					
ANR	1390038	ArgumentList	error_reporting		1389953	1					
ANR	1390039	Argument	error_reporting		1389953	0					
ANR	1390040	Identifier	error_reporting		1389953	0					
ANR	1390041	PrimaryExpression	0		1389953	1					
ANR	1390042	Statement	zend_try	686:1:19015:19022	1389953	9	True				
ANR	1390043	CompoundStatement		21:10:474:474	1389953	10					
ANR	1390044	ExpressionStatement	"ret = wrapper -> wops -> url_stat ( wrapper , ( char * ) filename , PHP_STREAM_URL_STAT_QUIET , & stream_statbuf , NULL )"	687:2:19028:19133	1389953	0	True				
ANR	1390045	AssignmentExpression	"ret = wrapper -> wops -> url_stat ( wrapper , ( char * ) filename , PHP_STREAM_URL_STAT_QUIET , & stream_statbuf , NULL )"		1389953	0		=			
ANR	1390046	Identifier	ret		1389953	0					
ANR	1390047	CallExpression	"wrapper -> wops -> url_stat ( wrapper , ( char * ) filename , PHP_STREAM_URL_STAT_QUIET , & stream_statbuf , NULL )"		1389953	1					
ANR	1390048	Callee	wrapper -> wops -> url_stat		1389953	0					
ANR	1390049	PtrMemberAccess	wrapper -> wops -> url_stat		1389953	0					
ANR	1390050	PtrMemberAccess	wrapper -> wops		1389953	0					
ANR	1390051	Identifier	wrapper		1389953	0					
ANR	1390052	Identifier	wops		1389953	1					
ANR	1390053	Identifier	url_stat		1389953	1					
ANR	1390054	ArgumentList	wrapper		1389953	1					
ANR	1390055	Argument	wrapper		1389953	0					
ANR	1390056	Identifier	wrapper		1389953	0					
ANR	1390057	Argument	( char * ) filename		1389953	1					
ANR	1390058	CastExpression	( char * ) filename		1389953	0					
ANR	1390059	CastTarget	char *		1389953	0					
ANR	1390060	Identifier	filename		1389953	1					
ANR	1390061	Argument	PHP_STREAM_URL_STAT_QUIET		1389953	2					
ANR	1390062	Identifier	PHP_STREAM_URL_STAT_QUIET		1389953	0					
ANR	1390063	Argument	& stream_statbuf		1389953	3					
ANR	1390064	UnaryOperationExpression	& stream_statbuf		1389953	0					
ANR	1390065	UnaryOperator	&		1389953	0					
ANR	1390066	Identifier	stream_statbuf		1389953	1					
ANR	1390067	Argument	NULL		1389953	4					
ANR	1390068	Identifier	NULL		1389953	0					
ANR	1390069	Statement	zend_catch	688:3:19138:19147	1389953	11	True				
ANR	1390070	CompoundStatement		23:14:599:599	1389953	12					
ANR	1390071	ExpressionStatement	ret = - 1	689:2:19153:19161	1389953	0	True				
ANR	1390072	AssignmentExpression	ret = - 1		1389953	0		=			
ANR	1390073	Identifier	ret		1389953	0					
ANR	1390074	UnaryOperationExpression	- 1		1389953	1					
ANR	1390075	UnaryOperator	-		1389953	0					
ANR	1390076	PrimaryExpression	1		1389953	1					
ANR	1390077	ExpressionStatement	zend_end_try ( )	690:3:19166:19180	1389953	13	True				
ANR	1390078	CallExpression	zend_end_try ( )		1389953	0					
ANR	1390079	Callee	zend_end_try		1389953	0					
ANR	1390080	Identifier	zend_end_try		1389953	0					
ANR	1390081	ArgumentList			1389953	1					
ANR	1390082	ExpressionStatement	EG ( error_reporting ) = er	691:1:19183:19207	1389953	14	True				
ANR	1390083	AssignmentExpression	EG ( error_reporting ) = er		1389953	0		=			
ANR	1390084	CallExpression	EG ( error_reporting )		1389953	0					
ANR	1390085	Callee	EG		1389953	0					
ANR	1390086	Identifier	EG		1389953	0					
ANR	1390087	ArgumentList	error_reporting		1389953	1					
ANR	1390088	Argument	error_reporting		1389953	0					
ANR	1390089	Identifier	error_reporting		1389953	0					
ANR	1390090	Identifier	er		1389953	1					
ANR	1390091	IfStatement	if ( ret != 0 )		1389953	15					
ANR	1390092	Condition	ret != 0	693:5:19215:19222	1389953	0	True				
ANR	1390093	EqualityExpression	ret != 0		1389953	0		!=			
ANR	1390094	Identifier	ret		1389953	0					
ANR	1390095	PrimaryExpression	0		1389953	1					
ANR	1390096	CompoundStatement		28:15:675:675	1389953	1					
ANR	1390097	ReturnStatement	return FAILURE ;	694:2:19229:19243	1389953	0	True				
ANR	1390098	Identifier	FAILURE		1389953	0					
ANR	1390099	ExpressionStatement	* statbuf = stream_statbuf . sb	697:1:19250:19278	1389953	16	True				
ANR	1390100	AssignmentExpression	* statbuf = stream_statbuf . sb		1389953	0		=			
ANR	1390101	UnaryOperationExpression	* statbuf		1389953	0					
ANR	1390102	UnaryOperator	*		1389953	0					
ANR	1390103	Identifier	statbuf		1389953	1					
ANR	1390104	MemberAccess	stream_statbuf . sb		1389953	1					
ANR	1390105	Identifier	stream_statbuf		1389953	0					
ANR	1390106	Identifier	sb		1389953	1					
ANR	1390107	ReturnStatement	return SUCCESS ;	698:1:19281:19295	1389953	17	True				
ANR	1390108	Identifier	SUCCESS		1389953	0					
ANR	1390109	ReturnType	static int		1389953	1					
ANR	1390110	Identifier	zend_get_stream_timestamp		1389953	2					
ANR	1390111	ParameterList	"const char * filename , zend_stat_t * statbuf"		1389953	3					
ANR	1390112	Parameter	const char * filename	665:37:18505:18524	1389953	0	True				
ANR	1390113	ParameterType	const char *		1389953	0					
ANR	1390114	Identifier	filename		1389953	1					
ANR	1390115	Parameter	zend_stat_t * statbuf	665:59:18527:18546	1389953	1	True				
ANR	1390116	ParameterType	zend_stat_t *		1389953	0					
ANR	1390117	Identifier	statbuf		1389953	1					
ANR	1390118	CFGEntryNode	ENTRY		1389953		True				
ANR	1390119	CFGExitNode	EXIT		1389953		True				
ANR	1390120	Symbol	ret		1389953						
ANR	1390121	Symbol	* statbuf		1389953						
ANR	1390122	Symbol	EG		1389953						
ANR	1390123	Symbol	NULL		1389953						
ANR	1390124	Symbol	SUCCESS		1389953						
ANR	1390125	Symbol	* wrapper		1389953						
ANR	1390126	Symbol	* wrapper -> wops		1389953						
ANR	1390127	Symbol	& stream_statbuf		1389953						
ANR	1390128	Symbol	STREAM_LOCATE_WRAPPERS_ONLY		1389953						
ANR	1390129	Symbol	stream_statbuf		1389953						
ANR	1390130	Symbol	wrapper		1389953						
ANR	1390131	Symbol	error_reporting		1389953						
ANR	1390132	Symbol	* * wrapper		1389953						
ANR	1390133	Symbol	PHP_STREAM_URL_STAT_QUIET		1389953						
ANR	1390134	Symbol	er		1389953						
ANR	1390135	Symbol	FAILURE		1389953						
ANR	1390136	Symbol	filename		1389953						
ANR	1390137	Symbol	wrapper -> wops -> url_stat		1389953						
ANR	1390138	Symbol	statbuf		1389953						
ANR	1390139	Symbol	wrapper -> wops		1389953						
ANR	1390140	Symbol	statbuf -> st_mtime		1389953						
ANR	1390141	Symbol	php_stream_locate_url_wrapper		1389953						
ANR	1390142	Symbol	stream_statbuf . sb		1389953						
ANR	1390143	Function	zend_get_file_handle_timestamp_win	702:0:19315:20438							
ANR	1390144	FunctionDef	"zend_get_file_handle_timestamp_win (zend_file_handle * file_handle , size_t * size)"		1390143	0					
ANR	1390145	CompoundStatement		703:0:19415:20438	1390143	0					
ANR	1390146	Statement	static	704:1:19418:19423	1390143	0	True				
ANR	1390147	IdentifierDeclStatement	unsigned __int64 utc_base = 0 ;	704:8:19425:19454	1390143	1	True				
ANR	1390148	IdentifierDecl	utc_base = 0		1390143	0					
ANR	1390149	IdentifierDeclType	unsigned __int64		1390143	0					
ANR	1390150	Identifier	utc_base		1390143	1					
ANR	1390151	AssignmentExpression	utc_base = 0		1390143	2		=			
ANR	1390152	Identifier	utc_base		1390143	0					
ANR	1390153	PrimaryExpression	0		1390143	1					
ANR	1390154	Statement	static	705:1:19457:19462	1390143	2	True				
ANR	1390155	IdentifierDeclStatement	FILETIME utc_base_ft ;	705:8:19464:19484	1390143	3	True				
ANR	1390156	IdentifierDecl	utc_base_ft		1390143	0					
ANR	1390157	IdentifierDeclType	FILETIME		1390143	0					
ANR	1390158	Identifier	utc_base_ft		1390143	1					
ANR	1390159	IdentifierDeclStatement	WIN32_FILE_ATTRIBUTE_DATA fdata ;	706:1:19487:19518	1390143	4	True				
ANR	1390160	IdentifierDecl	fdata		1390143	0					
ANR	1390161	IdentifierDeclType	WIN32_FILE_ATTRIBUTE_DATA		1390143	0					
ANR	1390162	Identifier	fdata		1390143	1					
ANR	1390163	IfStatement	if ( ! file_handle -> opened_path )		1390143	5					
ANR	1390164	Condition	! file_handle -> opened_path	708:5:19526:19550	1390143	0	True				
ANR	1390165	UnaryOperationExpression	! file_handle -> opened_path		1390143	0					
ANR	1390166	UnaryOperator	!		1390143	0					
ANR	1390167	PtrMemberAccess	file_handle -> opened_path		1390143	1					
ANR	1390168	Identifier	file_handle		1390143	0					
ANR	1390169	Identifier	opened_path		1390143	1					
ANR	1390170	CompoundStatement		6:32:137:137	1390143	1					
ANR	1390171	ReturnStatement	return 0 ;	709:2:19557:19565	1390143	0	True				
ANR	1390172	PrimaryExpression	0		1390143	0					
ANR	1390173	IfStatement	if ( ! utc_base )		1390143	6					
ANR	1390174	Condition	! utc_base	712:5:19576:19584	1390143	0	True				
ANR	1390175	UnaryOperationExpression	! utc_base		1390143	0					
ANR	1390176	UnaryOperator	!		1390143	0					
ANR	1390177	Identifier	utc_base		1390143	1					
ANR	1390178	CompoundStatement		11:2:175:188	1390143	1					
ANR	1390179	IdentifierDeclStatement	SYSTEMTIME st ;	713:2:19591:19604	1390143	0	True				
ANR	1390180	IdentifierDecl	st		1390143	0					
ANR	1390181	IdentifierDeclType	SYSTEMTIME		1390143	0					
ANR	1390182	Identifier	st		1390143	1					
ANR	1390183	ExpressionStatement	st . wYear = 1970	715:2:19609:19624	1390143	1	True				
ANR	1390184	AssignmentExpression	st . wYear = 1970		1390143	0		=			
ANR	1390185	MemberAccess	st . wYear		1390143	0					
ANR	1390186	Identifier	st		1390143	0					
ANR	1390187	Identifier	wYear		1390143	1					
ANR	1390188	PrimaryExpression	1970		1390143	1					
ANR	1390189	ExpressionStatement	st . wMonth = 1	716:2:19628:19641	1390143	2	True				
ANR	1390190	AssignmentExpression	st . wMonth = 1		1390143	0		=			
ANR	1390191	MemberAccess	st . wMonth		1390143	0					
ANR	1390192	Identifier	st		1390143	0					
ANR	1390193	Identifier	wMonth		1390143	1					
ANR	1390194	PrimaryExpression	1		1390143	1					
ANR	1390195	ExpressionStatement	st . wDay = 1	717:2:19645:19656	1390143	3	True				
ANR	1390196	AssignmentExpression	st . wDay = 1		1390143	0		=			
ANR	1390197	MemberAccess	st . wDay		1390143	0					
ANR	1390198	Identifier	st		1390143	0					
ANR	1390199	Identifier	wDay		1390143	1					
ANR	1390200	PrimaryExpression	1		1390143	1					
ANR	1390201	ExpressionStatement	st . wHour = 0	718:2:19660:19672	1390143	4	True				
ANR	1390202	AssignmentExpression	st . wHour = 0		1390143	0		=			
ANR	1390203	MemberAccess	st . wHour		1390143	0					
ANR	1390204	Identifier	st		1390143	0					
ANR	1390205	Identifier	wHour		1390143	1					
ANR	1390206	PrimaryExpression	0		1390143	1					
ANR	1390207	ExpressionStatement	st . wMinute = 0	719:2:19676:19690	1390143	5	True				
ANR	1390208	AssignmentExpression	st . wMinute = 0		1390143	0		=			
ANR	1390209	MemberAccess	st . wMinute		1390143	0					
ANR	1390210	Identifier	st		1390143	0					
ANR	1390211	Identifier	wMinute		1390143	1					
ANR	1390212	PrimaryExpression	0		1390143	1					
ANR	1390213	ExpressionStatement	st . wSecond = 0	720:2:19694:19708	1390143	6	True				
ANR	1390214	AssignmentExpression	st . wSecond = 0		1390143	0		=			
ANR	1390215	MemberAccess	st . wSecond		1390143	0					
ANR	1390216	Identifier	st		1390143	0					
ANR	1390217	Identifier	wSecond		1390143	1					
ANR	1390218	PrimaryExpression	0		1390143	1					
ANR	1390219	ExpressionStatement	st . wMilliseconds = 0	721:2:19712:19732	1390143	7	True				
ANR	1390220	AssignmentExpression	st . wMilliseconds = 0		1390143	0		=			
ANR	1390221	MemberAccess	st . wMilliseconds		1390143	0					
ANR	1390222	Identifier	st		1390143	0					
ANR	1390223	Identifier	wMilliseconds		1390143	1					
ANR	1390224	PrimaryExpression	0		1390143	1					
ANR	1390225	ExpressionStatement	"SystemTimeToFileTime ( & st , & utc_base_ft )"	723:2:19737:19777	1390143	8	True				
ANR	1390226	CallExpression	"SystemTimeToFileTime ( & st , & utc_base_ft )"		1390143	0					
ANR	1390227	Callee	SystemTimeToFileTime		1390143	0					
ANR	1390228	Identifier	SystemTimeToFileTime		1390143	0					
ANR	1390229	ArgumentList	& st		1390143	1					
ANR	1390230	Argument	& st		1390143	0					
ANR	1390231	UnaryOperationExpression	& st		1390143	0					
ANR	1390232	UnaryOperator	&		1390143	0					
ANR	1390233	Identifier	st		1390143	1					
ANR	1390234	Argument	& utc_base_ft		1390143	1					
ANR	1390235	UnaryOperationExpression	& utc_base_ft		1390143	0					
ANR	1390236	UnaryOperator	&		1390143	0					
ANR	1390237	Identifier	utc_base_ft		1390143	1					
ANR	1390238	ExpressionStatement	utc_base = ( ( ( unsigned __int64 ) utc_base_ft . dwHighDateTime ) << 32 ) + utc_base_ft . dwLowDateTime	724:2:19781:19874	1390143	9	True				
ANR	1390239	AssignmentExpression	utc_base = ( ( ( unsigned __int64 ) utc_base_ft . dwHighDateTime ) << 32 ) + utc_base_ft . dwLowDateTime		1390143	0		=			
ANR	1390240	Identifier	utc_base		1390143	0					
ANR	1390241	AdditiveExpression	( ( ( unsigned __int64 ) utc_base_ft . dwHighDateTime ) << 32 ) + utc_base_ft . dwLowDateTime		1390143	1		+			
ANR	1390242	ShiftExpression	( ( unsigned __int64 ) utc_base_ft . dwHighDateTime ) << 32		1390143	0		<<			
ANR	1390243	CastExpression	( unsigned __int64 ) utc_base_ft . dwHighDateTime		1390143	0					
ANR	1390244	CastTarget	unsigned __int64		1390143	0					
ANR	1390245	MemberAccess	utc_base_ft . dwHighDateTime		1390143	1					
ANR	1390246	Identifier	utc_base_ft		1390143	0					
ANR	1390247	Identifier	dwHighDateTime		1390143	1					
ANR	1390248	PrimaryExpression	32		1390143	1					
ANR	1390249	MemberAccess	utc_base_ft . dwLowDateTime		1390143	1					
ANR	1390250	Identifier	utc_base_ft		1390143	0					
ANR	1390251	Identifier	dwLowDateTime		1390143	1					
ANR	1390252	IfStatement	"if ( file_handle -> opened_path && GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata ) != 0 )"		1390143	7					
ANR	1390253	Condition	"file_handle -> opened_path && GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata ) != 0"	727:5:19888:20001	1390143	0	True				
ANR	1390254	AndExpression	"file_handle -> opened_path && GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata ) != 0"		1390143	0		&&			
ANR	1390255	PtrMemberAccess	file_handle -> opened_path		1390143	0					
ANR	1390256	Identifier	file_handle		1390143	0					
ANR	1390257	Identifier	opened_path		1390143	1					
ANR	1390258	EqualityExpression	"GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata ) != 0"		1390143	1		!=			
ANR	1390259	CallExpression	"GetFileAttributesEx ( file_handle -> opened_path -> val , GetFileExInfoStandard , & fdata )"		1390143	0					
ANR	1390260	Callee	GetFileAttributesEx		1390143	0					
ANR	1390261	Identifier	GetFileAttributesEx		1390143	0					
ANR	1390262	ArgumentList	file_handle -> opened_path -> val		1390143	1					
ANR	1390263	Argument	file_handle -> opened_path -> val		1390143	0					
ANR	1390264	PtrMemberAccess	file_handle -> opened_path -> val		1390143	0					
ANR	1390265	PtrMemberAccess	file_handle -> opened_path		1390143	0					
ANR	1390266	Identifier	file_handle		1390143	0					
ANR	1390267	Identifier	opened_path		1390143	1					
ANR	1390268	Identifier	val		1390143	1					
ANR	1390269	Argument	GetFileExInfoStandard		1390143	1					
ANR	1390270	Identifier	GetFileExInfoStandard		1390143	0					
ANR	1390271	Argument	& fdata		1390143	2					
ANR	1390272	UnaryOperationExpression	& fdata		1390143	0					
ANR	1390273	UnaryOperator	&		1390143	0					
ANR	1390274	Identifier	fdata		1390143	1					
ANR	1390275	PrimaryExpression	0		1390143	1					
ANR	1390276	CompoundStatement		26:2:592:614	1390143	1					
ANR	1390277	IdentifierDeclStatement	unsigned __int64 ftime ;	728:2:20008:20030	1390143	0	True				
ANR	1390278	IdentifierDecl	ftime		1390143	0					
ANR	1390279	IdentifierDeclType	unsigned __int64		1390143	0					
ANR	1390280	Identifier	ftime		1390143	1					
ANR	1390281	IfStatement	"if ( CompareFileTime ( & fdata . ftLastWriteTime , & utc_base_ft ) < 0 )"		1390143	1					
ANR	1390282	Condition	"CompareFileTime ( & fdata . ftLastWriteTime , & utc_base_ft ) < 0"	730:6:20039:20096	1390143	0	True				
ANR	1390283	RelationalExpression	"CompareFileTime ( & fdata . ftLastWriteTime , & utc_base_ft ) < 0"		1390143	0		<			
ANR	1390284	CallExpression	"CompareFileTime ( & fdata . ftLastWriteTime , & utc_base_ft )"		1390143	0					
ANR	1390285	Callee	CompareFileTime		1390143	0					
ANR	1390286	Identifier	CompareFileTime		1390143	0					
ANR	1390287	ArgumentList	& fdata . ftLastWriteTime		1390143	1					
ANR	1390288	Argument	& fdata . ftLastWriteTime		1390143	0					
ANR	1390289	UnaryOperationExpression	& fdata . ftLastWriteTime		1390143	0					
ANR	1390290	UnaryOperator	&		1390143	0					
ANR	1390291	MemberAccess	fdata . ftLastWriteTime		1390143	1					
ANR	1390292	Identifier	fdata		1390143	0					
ANR	1390293	Identifier	ftLastWriteTime		1390143	1					
ANR	1390294	Argument	& utc_base_ft		1390143	1					
ANR	1390295	UnaryOperationExpression	& utc_base_ft		1390143	0					
ANR	1390296	UnaryOperator	&		1390143	0					
ANR	1390297	Identifier	utc_base_ft		1390143	1					
ANR	1390298	PrimaryExpression	0		1390143	1					
ANR	1390299	CompoundStatement		28:66:683:683	1390143	1					
ANR	1390300	ReturnStatement	return 0 ;	731:3:20104:20112	1390143	0	True				
ANR	1390301	PrimaryExpression	0		1390143	0					
ANR	1390302	ExpressionStatement	ftime = ( ( ( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime ) << 32 ) + fdata . ftLastWriteTime . dwLowDateTime - utc_base	734:2:20121:20242	1390143	2	True				
ANR	1390303	AssignmentExpression	ftime = ( ( ( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime ) << 32 ) + fdata . ftLastWriteTime . dwLowDateTime - utc_base		1390143	0		=			
ANR	1390304	Identifier	ftime		1390143	0					
ANR	1390305	AdditiveExpression	( ( ( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime ) << 32 ) + fdata . ftLastWriteTime . dwLowDateTime - utc_base		1390143	1		+			
ANR	1390306	ShiftExpression	( ( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime ) << 32		1390143	0		<<			
ANR	1390307	CastExpression	( unsigned __int64 ) fdata . ftLastWriteTime . dwHighDateTime		1390143	0					
ANR	1390308	CastTarget	unsigned __int64		1390143	0					
ANR	1390309	MemberAccess	fdata . ftLastWriteTime . dwHighDateTime		1390143	1					
ANR	1390310	MemberAccess	fdata . ftLastWriteTime		1390143	0					
ANR	1390311	Identifier	fdata		1390143	0					
ANR	1390312	Identifier	ftLastWriteTime		1390143	1					
ANR	1390313	Identifier	dwHighDateTime		1390143	1					
ANR	1390314	PrimaryExpression	32		1390143	1					
ANR	1390315	AdditiveExpression	fdata . ftLastWriteTime . dwLowDateTime - utc_base		1390143	1		-			
ANR	1390316	MemberAccess	fdata . ftLastWriteTime . dwLowDateTime		1390143	0					
ANR	1390317	MemberAccess	fdata . ftLastWriteTime		1390143	0					
ANR	1390318	Identifier	fdata		1390143	0					
ANR	1390319	Identifier	ftLastWriteTime		1390143	1					
ANR	1390320	Identifier	dwLowDateTime		1390143	1					
ANR	1390321	Identifier	utc_base		1390143	1					
ANR	1390322	ExpressionStatement	ftime /= 10000000L	735:2:20246:20264	1390143	3	True				
ANR	1390323	AssignmentExpression	ftime /= 10000000L		1390143	0		/=			
ANR	1390324	Identifier	ftime		1390143	0					
ANR	1390325	PrimaryExpression	10000000L		1390143	1					
ANR	1390326	IfStatement	if ( size )		1390143	4					
ANR	1390327	Condition	size	737:6:20273:20276	1390143	0	True				
ANR	1390328	Identifier	size		1390143	0					
ANR	1390329	CompoundStatement		35:12:863:863	1390143	1					
ANR	1390330	ExpressionStatement	* size = ( size_t ) ( ( ( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32 ) + ( unsigned __int64 ) fdata . nFileSizeLow )	738:3:20284:20388	1390143	0	True				
ANR	1390331	AssignmentExpression	* size = ( size_t ) ( ( ( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32 ) + ( unsigned __int64 ) fdata . nFileSizeLow )		1390143	0		=			
ANR	1390332	UnaryOperationExpression	* size		1390143	0					
ANR	1390333	UnaryOperator	*		1390143	0					
ANR	1390334	Identifier	size		1390143	1					
ANR	1390335	CastExpression	( size_t ) ( ( ( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32 ) + ( unsigned __int64 ) fdata . nFileSizeLow )		1390143	1					
ANR	1390336	CastTarget	size_t		1390143	0					
ANR	1390337	AdditiveExpression	( ( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32 ) + ( unsigned __int64 ) fdata . nFileSizeLow		1390143	1		+			
ANR	1390338	ShiftExpression	( ( unsigned __int64 ) fdata . nFileSizeHigh ) << 32		1390143	0		<<			
ANR	1390339	CastExpression	( unsigned __int64 ) fdata . nFileSizeHigh		1390143	0					
ANR	1390340	CastTarget	unsigned __int64		1390143	0					
ANR	1390341	MemberAccess	fdata . nFileSizeHigh		1390143	1					
ANR	1390342	Identifier	fdata		1390143	0					
ANR	1390343	Identifier	nFileSizeHigh		1390143	1					
ANR	1390344	PrimaryExpression	32		1390143	1					
ANR	1390345	CastExpression	( unsigned __int64 ) fdata . nFileSizeLow		1390143	1					
ANR	1390346	CastTarget	unsigned __int64		1390143	0					
ANR	1390347	MemberAccess	fdata . nFileSizeLow		1390143	1					
ANR	1390348	Identifier	fdata		1390143	0					
ANR	1390349	Identifier	nFileSizeLow		1390143	1					
ANR	1390350	ReturnStatement	return ( accel_time_t ) ftime ;	740:2:20396:20422	1390143	5	True				
ANR	1390351	CastExpression	( accel_time_t ) ftime		1390143	0					
ANR	1390352	CastTarget	accel_time_t		1390143	0					
ANR	1390353	Identifier	ftime		1390143	1					
ANR	1390354	ReturnStatement	return 0 ;	742:1:20428:20436	1390143	8	True				
ANR	1390355	PrimaryExpression	0		1390143	0					
ANR	1390356	ReturnType	static accel_time_t		1390143	1					
ANR	1390357	Identifier	zend_get_file_handle_timestamp_win		1390143	2					
ANR	1390358	ParameterList	"zend_file_handle * file_handle , size_t * size"		1390143	3					
ANR	1390359	Parameter	zend_file_handle * file_handle	702:55:19370:19398	1390143	0	True				
ANR	1390360	ParameterType	zend_file_handle *		1390143	0					
ANR	1390361	Identifier	file_handle		1390143	1					
ANR	1390362	Parameter	size_t * size	702:86:19401:19412	1390143	1	True				
ANR	1390363	ParameterType	size_t *		1390143	0					
ANR	1390364	Identifier	size		1390143	1					
ANR	1390365	CFGEntryNode	ENTRY		1390143		True				
ANR	1390366	CFGExitNode	EXIT		1390143		True				
ANR	1390367	Symbol	& utc_base_ft		1390143						
ANR	1390368	Symbol	& fdata		1390143						
ANR	1390369	Symbol	GetFileAttributesEx		1390143						
ANR	1390370	Symbol	st . wHour		1390143						
ANR	1390371	Symbol	st . wMonth		1390143						
ANR	1390372	Symbol	& st		1390143						
ANR	1390373	Symbol	fdata . nFileSizeLow		1390143						
ANR	1390374	Symbol	* * file_handle		1390143						
ANR	1390375	Symbol	st . wMinute		1390143						
ANR	1390376	Symbol	* file_handle		1390143						
ANR	1390377	Symbol	fdata . ftLastWriteTime . dwLowDateTime		1390143						
ANR	1390378	Symbol	st . wMilliseconds		1390143						
ANR	1390379	Symbol	* size		1390143						
ANR	1390380	Symbol	& fdata . ftLastWriteTime		1390143						
ANR	1390381	Symbol	utc_base		1390143						
ANR	1390382	Symbol	fdata . ftLastWriteTime . dwHighDateTime		1390143						
ANR	1390383	Symbol	GetFileExInfoStandard		1390143						
ANR	1390384	Symbol	fdata		1390143						
ANR	1390385	Symbol	ftime		1390143						
ANR	1390386	Symbol	fdata . nFileSizeHigh		1390143						
ANR	1390387	Symbol	utc_base_ft		1390143						
ANR	1390388	Symbol	st		1390143						
ANR	1390389	Symbol	file_handle -> opened_path -> val		1390143						
ANR	1390390	Symbol	st . wSecond		1390143						
ANR	1390391	Symbol	* file_handle -> opened_path		1390143						
ANR	1390392	Symbol	file_handle		1390143						
ANR	1390393	Symbol	file_handle -> opened_path		1390143						
ANR	1390394	Symbol	st . wDay		1390143						
ANR	1390395	Symbol	utc_base_ft . dwLowDateTime		1390143						
ANR	1390396	Symbol	utc_base_ft . dwHighDateTime		1390143						
ANR	1390397	Symbol	size		1390143						
ANR	1390398	Symbol	st . wYear		1390143						
ANR	1390399	Symbol	CompareFileTime		1390143						
ANR	1390400	Symbol	fdata . ftLastWriteTime		1390143						
ANR	1390401	Function	zend_get_file_handle_timestamp	746:0:20448:22444							
ANR	1390402	FunctionDef	"zend_get_file_handle_timestamp (zend_file_handle * file_handle , size_t * size)"		1390401	0					
ANR	1390403	CompoundStatement		747:0:20537:22444	1390401	0					
ANR	1390404	IdentifierDeclStatement	zend_stat_t statbuf ;	748:1:20540:20559	1390401	0	True				
ANR	1390405	IdentifierDecl	statbuf		1390401	0					
ANR	1390406	IdentifierDeclType	zend_stat_t		1390401	0					
ANR	1390407	Identifier	statbuf		1390401	1					
ANR	1390408	IdentifierDeclStatement	accel_time_t res ;	750:1:20580:20596	1390401	1	True				
ANR	1390409	IdentifierDecl	res		1390401	0					
ANR	1390410	IdentifierDeclType	accel_time_t		1390401	0					
ANR	1390411	Identifier	res		1390401	1					
ANR	1390412	IfStatement	if ( sapi_module . get_stat && ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated )		1390401	2					
ANR	1390413	Condition	sapi_module . get_stat && ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated	753:5:20611:20730	1390401	0	True				
ANR	1390414	AndExpression	sapi_module . get_stat && ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated		1390401	0		&&			
ANR	1390415	MemberAccess	sapi_module . get_stat		1390401	0					
ANR	1390416	Identifier	sapi_module		1390401	0					
ANR	1390417	Identifier	get_stat		1390401	1					
ANR	1390418	AndExpression	! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated		1390401	1		&&			
ANR	1390419	UnaryOperationExpression	! EG ( current_execute_data )		1390401	0					
ANR	1390420	UnaryOperator	!		1390401	0					
ANR	1390421	CallExpression	EG ( current_execute_data )		1390401	1					
ANR	1390422	Callee	EG		1390401	0					
ANR	1390423	Identifier	EG		1390401	0					
ANR	1390424	ArgumentList	current_execute_data		1390401	1					
ANR	1390425	Argument	current_execute_data		1390401	0					
ANR	1390426	Identifier	current_execute_data		1390401	0					
ANR	1390427	EqualityExpression	file_handle -> filename == SG ( request_info ) . path_translated		1390401	1		==			
ANR	1390428	PtrMemberAccess	file_handle -> filename		1390401	0					
ANR	1390429	Identifier	file_handle		1390401	0					
ANR	1390430	Identifier	filename		1390401	1					
ANR	1390431	MemberAccess	SG ( request_info ) . path_translated		1390401	1					
ANR	1390432	CallExpression	SG ( request_info )		1390401	0					
ANR	1390433	Callee	SG		1390401	0					
ANR	1390434	Identifier	SG		1390401	0					
ANR	1390435	ArgumentList	request_info		1390401	1					
ANR	1390436	Argument	request_info		1390401	0					
ANR	1390437	Identifier	request_info		1390401	0					
ANR	1390438	Identifier	path_translated		1390401	1					
ANR	1390439	CompoundStatement		11:2:200:244	1390401	1					
ANR	1390440	IdentifierDeclStatement	zend_stat_t * tmpbuf = sapi_module . get_stat ( ) ;	757:2:20738:20782	1390401	0	True				
ANR	1390441	IdentifierDecl	* tmpbuf = sapi_module . get_stat ( )		1390401	0					
ANR	1390442	IdentifierDeclType	zend_stat_t *		1390401	0					
ANR	1390443	Identifier	tmpbuf		1390401	1					
ANR	1390444	AssignmentExpression	* tmpbuf = sapi_module . get_stat ( )		1390401	2		=			
ANR	1390445	Identifier	tmpbuf		1390401	0					
ANR	1390446	CallExpression	sapi_module . get_stat ( )		1390401	1					
ANR	1390447	Callee	sapi_module . get_stat		1390401	0					
ANR	1390448	MemberAccess	sapi_module . get_stat		1390401	0					
ANR	1390449	Identifier	sapi_module		1390401	0					
ANR	1390450	Identifier	get_stat		1390401	1					
ANR	1390451	ArgumentList			1390401	1					
ANR	1390452	IfStatement	if ( tmpbuf )		1390401	1					
ANR	1390453	Condition	tmpbuf	759:6:20791:20796	1390401	0	True				
ANR	1390454	Identifier	tmpbuf		1390401	0					
ANR	1390455	CompoundStatement		13:14:261:261	1390401	1					
ANR	1390456	IfStatement	if ( size )		1390401	0					
ANR	1390457	Condition	size	760:7:20808:20811	1390401	0	True				
ANR	1390458	Identifier	size		1390401	0					
ANR	1390459	CompoundStatement		14:13:276:276	1390401	1					
ANR	1390460	ExpressionStatement	* size = tmpbuf -> st_size	761:4:20820:20843	1390401	0	True				
ANR	1390461	AssignmentExpression	* size = tmpbuf -> st_size		1390401	0		=			
ANR	1390462	UnaryOperationExpression	* size		1390401	0					
ANR	1390463	UnaryOperator	*		1390401	0					
ANR	1390464	Identifier	size		1390401	1					
ANR	1390465	PtrMemberAccess	tmpbuf -> st_size		1390401	1					
ANR	1390466	Identifier	tmpbuf		1390401	0					
ANR	1390467	Identifier	st_size		1390401	1					
ANR	1390468	ReturnStatement	return tmpbuf -> st_mtime ;	763:3:20853:20876	1390401	1	True				
ANR	1390469	PtrMemberAccess	tmpbuf -> st_mtime		1390401	0					
ANR	1390470	Identifier	tmpbuf		1390401	0					
ANR	1390471	Identifier	st_mtime		1390401	1					
ANR	1390472	ExpressionStatement	"res = zend_get_file_handle_timestamp_win ( file_handle , size )"	768:1:20905:20964	1390401	3	True				
ANR	1390473	AssignmentExpression	"res = zend_get_file_handle_timestamp_win ( file_handle , size )"		1390401	0		=			
ANR	1390474	Identifier	res		1390401	0					
ANR	1390475	CallExpression	"zend_get_file_handle_timestamp_win ( file_handle , size )"		1390401	1					
ANR	1390476	Callee	zend_get_file_handle_timestamp_win		1390401	0					
ANR	1390477	Identifier	zend_get_file_handle_timestamp_win		1390401	0					
ANR	1390478	ArgumentList	file_handle		1390401	1					
ANR	1390479	Argument	file_handle		1390401	0					
ANR	1390480	Identifier	file_handle		1390401	0					
ANR	1390481	Argument	size		1390401	1					
ANR	1390482	Identifier	size		1390401	0					
ANR	1390483	IfStatement	if ( res )		1390401	4					
ANR	1390484	Condition	res	769:5:20971:20973	1390401	0	True				
ANR	1390485	Identifier	res		1390401	0					
ANR	1390486	CompoundStatement		23:10:438:438	1390401	1					
ANR	1390487	ReturnStatement	return res ;	770:2:20980:20990	1390401	0	True				
ANR	1390488	Identifier	res		1390401	0					
ANR	1390489	SwitchStatement	switch ( file_handle -> type )		1390401	5					
ANR	1390490	Condition	file_handle -> type	774:9:21012:21028	1390401	0	True				
ANR	1390491	PtrMemberAccess	file_handle -> type		1390401	0					
ANR	1390492	Identifier	file_handle		1390401	0					
ANR	1390493	Identifier	type		1390401	1					
ANR	1390494	CompoundStatement		28:28:493:493	1390401	1					
ANR	1390495	Label	case ZEND_HANDLE_FD :	775:2:21035:21054	1390401	0	True				
ANR	1390496	Identifier	ZEND_HANDLE_FD		1390401	0					
ANR	1390497	IfStatement	"if ( zend_fstat ( file_handle -> handle . fd , & statbuf ) == - 1 )"		1390401	1					
ANR	1390498	Condition	"zend_fstat ( file_handle -> handle . fd , & statbuf ) == - 1"	776:7:21063:21112	1390401	0	True				
ANR	1390499	EqualityExpression	"zend_fstat ( file_handle -> handle . fd , & statbuf ) == - 1"		1390401	0		==			
ANR	1390500	CallExpression	"zend_fstat ( file_handle -> handle . fd , & statbuf )"		1390401	0					
ANR	1390501	Callee	zend_fstat		1390401	0					
ANR	1390502	Identifier	zend_fstat		1390401	0					
ANR	1390503	ArgumentList	file_handle -> handle . fd		1390401	1					
ANR	1390504	Argument	file_handle -> handle . fd		1390401	0					
ANR	1390505	MemberAccess	file_handle -> handle . fd		1390401	0					
ANR	1390506	PtrMemberAccess	file_handle -> handle		1390401	0					
ANR	1390507	Identifier	file_handle		1390401	0					
ANR	1390508	Identifier	handle		1390401	1					
ANR	1390509	Identifier	fd		1390401	1					
ANR	1390510	Argument	& statbuf		1390401	1					
ANR	1390511	UnaryOperationExpression	& statbuf		1390401	0					
ANR	1390512	UnaryOperator	&		1390401	0					
ANR	1390513	Identifier	statbuf		1390401	1					
ANR	1390514	UnaryOperationExpression	- 1		1390401	1					
ANR	1390515	UnaryOperator	-		1390401	0					
ANR	1390516	PrimaryExpression	1		1390401	1					
ANR	1390517	CompoundStatement		30:59:577:577	1390401	1					
ANR	1390518	ReturnStatement	return 0 ;	777:4:21121:21129	1390401	0	True				
ANR	1390519	PrimaryExpression	0		1390401	0					
ANR	1390520	BreakStatement	break ;	779:3:21139:21144	1390401	2	True				
ANR	1390521	Label	case ZEND_HANDLE_FP :	780:2:21148:21167	1390401	3	True				
ANR	1390522	Identifier	ZEND_HANDLE_FP		1390401	0					
ANR	1390523	IfStatement	"if ( zend_fstat ( fileno ( file_handle -> handle . fp ) , & statbuf ) == - 1 )"		1390401	4					
ANR	1390524	Condition	"zend_fstat ( fileno ( file_handle -> handle . fp ) , & statbuf ) == - 1"	781:7:21176:21233	1390401	0	True				
ANR	1390525	EqualityExpression	"zend_fstat ( fileno ( file_handle -> handle . fp ) , & statbuf ) == - 1"		1390401	0		==			
ANR	1390526	CallExpression	"zend_fstat ( fileno ( file_handle -> handle . fp ) , & statbuf )"		1390401	0					
ANR	1390527	Callee	zend_fstat		1390401	0					
ANR	1390528	Identifier	zend_fstat		1390401	0					
ANR	1390529	ArgumentList	fileno ( file_handle -> handle . fp )		1390401	1					
ANR	1390530	Argument	fileno ( file_handle -> handle . fp )		1390401	0					
ANR	1390531	CallExpression	fileno ( file_handle -> handle . fp )		1390401	0					
ANR	1390532	Callee	fileno		1390401	0					
ANR	1390533	Identifier	fileno		1390401	0					
ANR	1390534	ArgumentList	file_handle -> handle . fp		1390401	1					
ANR	1390535	Argument	file_handle -> handle . fp		1390401	0					
ANR	1390536	MemberAccess	file_handle -> handle . fp		1390401	0					
ANR	1390537	PtrMemberAccess	file_handle -> handle		1390401	0					
ANR	1390538	Identifier	file_handle		1390401	0					
ANR	1390539	Identifier	handle		1390401	1					
ANR	1390540	Identifier	fp		1390401	1					
ANR	1390541	Argument	& statbuf		1390401	1					
ANR	1390542	UnaryOperationExpression	& statbuf		1390401	0					
ANR	1390543	UnaryOperator	&		1390401	0					
ANR	1390544	Identifier	statbuf		1390401	1					
ANR	1390545	UnaryOperationExpression	- 1		1390401	1					
ANR	1390546	UnaryOperator	-		1390401	0					
ANR	1390547	PrimaryExpression	1		1390401	1					
ANR	1390548	CompoundStatement		35:67:698:698	1390401	1					
ANR	1390549	IfStatement	"if ( zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS )"		1390401	0					
ANR	1390550	Condition	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS"	782:8:21246:21314	1390401	0	True				
ANR	1390551	EqualityExpression	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS"		1390401	0		!=			
ANR	1390552	CallExpression	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf )"		1390401	0					
ANR	1390553	Callee	zend_get_stream_timestamp		1390401	0					
ANR	1390554	Identifier	zend_get_stream_timestamp		1390401	0					
ANR	1390555	ArgumentList	file_handle -> filename		1390401	1					
ANR	1390556	Argument	file_handle -> filename		1390401	0					
ANR	1390557	PtrMemberAccess	file_handle -> filename		1390401	0					
ANR	1390558	Identifier	file_handle		1390401	0					
ANR	1390559	Identifier	filename		1390401	1					
ANR	1390560	Argument	& statbuf		1390401	1					
ANR	1390561	UnaryOperationExpression	& statbuf		1390401	0					
ANR	1390562	UnaryOperator	&		1390401	0					
ANR	1390563	Identifier	statbuf		1390401	1					
ANR	1390564	Identifier	SUCCESS		1390401	1					
ANR	1390565	CompoundStatement		36:79:779:779	1390401	1					
ANR	1390566	ReturnStatement	return 0 ;	783:5:21324:21332	1390401	0	True				
ANR	1390567	PrimaryExpression	0		1390401	0					
ANR	1390568	BreakStatement	break ;	786:3:21348:21353	1390401	5	True				
ANR	1390569	Label	case ZEND_HANDLE_FILENAME :	787:2:21357:21382	1390401	6	True				
ANR	1390570	Identifier	ZEND_HANDLE_FILENAME		1390401	0					
ANR	1390571	Label	case ZEND_HANDLE_MAPPED :	788:2:21386:21409	1390401	7	True				
ANR	1390572	Identifier	ZEND_HANDLE_MAPPED		1390401	0					
ANR	1390573	IfStatement	if ( file_handle -> opened_path )		1390401	8					
ANR	1390574	Condition	file_handle -> opened_path	789:7:21418:21441	1390401	0	True				
ANR	1390575	PtrMemberAccess	file_handle -> opened_path		1390401	0					
ANR	1390576	Identifier	file_handle		1390401	0					
ANR	1390577	Identifier	opened_path		1390401	1					
ANR	1390578	CompoundStatement		44:4:912:964	1390401	1					
ANR	1390579	IdentifierDeclStatement	char * file_path = ZSTR_VAL ( file_handle -> opened_path ) ;	790:4:21450:21502	1390401	0	True				
ANR	1390580	IdentifierDecl	* file_path = ZSTR_VAL ( file_handle -> opened_path )		1390401	0					
ANR	1390581	IdentifierDeclType	char *		1390401	0					
ANR	1390582	Identifier	file_path		1390401	1					
ANR	1390583	AssignmentExpression	* file_path = ZSTR_VAL ( file_handle -> opened_path )		1390401	2		=			
ANR	1390584	Identifier	file_path		1390401	0					
ANR	1390585	CallExpression	ZSTR_VAL ( file_handle -> opened_path )		1390401	1					
ANR	1390586	Callee	ZSTR_VAL		1390401	0					
ANR	1390587	Identifier	ZSTR_VAL		1390401	0					
ANR	1390588	ArgumentList	file_handle -> opened_path		1390401	1					
ANR	1390589	Argument	file_handle -> opened_path		1390401	0					
ANR	1390590	PtrMemberAccess	file_handle -> opened_path		1390401	0					
ANR	1390591	Identifier	file_handle		1390401	0					
ANR	1390592	Identifier	opened_path		1390401	1					
ANR	1390593	IfStatement	if ( is_stream_path ( file_path ) )		1390401	1					
ANR	1390594	Condition	is_stream_path ( file_path )	792:8:21513:21537	1390401	0	True				
ANR	1390595	CallExpression	is_stream_path ( file_path )		1390401	0					
ANR	1390596	Callee	is_stream_path		1390401	0					
ANR	1390597	Identifier	is_stream_path		1390401	0					
ANR	1390598	ArgumentList	file_path		1390401	1					
ANR	1390599	Argument	file_path		1390401	0					
ANR	1390600	Identifier	file_path		1390401	0					
ANR	1390601	CompoundStatement		46:35:1002:1002	1390401	1					
ANR	1390602	IfStatement	"if ( zend_get_stream_timestamp ( file_path , & statbuf ) == SUCCESS )"		1390401	0					
ANR	1390603	Condition	"zend_get_stream_timestamp ( file_path , & statbuf ) == SUCCESS"	793:9:21551:21607	1390401	0	True				
ANR	1390604	EqualityExpression	"zend_get_stream_timestamp ( file_path , & statbuf ) == SUCCESS"		1390401	0		==			
ANR	1390605	CallExpression	"zend_get_stream_timestamp ( file_path , & statbuf )"		1390401	0					
ANR	1390606	Callee	zend_get_stream_timestamp		1390401	0					
ANR	1390607	Identifier	zend_get_stream_timestamp		1390401	0					
ANR	1390608	ArgumentList	file_path		1390401	1					
ANR	1390609	Argument	file_path		1390401	0					
ANR	1390610	Identifier	file_path		1390401	0					
ANR	1390611	Argument	& statbuf		1390401	1					
ANR	1390612	UnaryOperationExpression	& statbuf		1390401	0					
ANR	1390613	UnaryOperator	&		1390401	0					
ANR	1390614	Identifier	statbuf		1390401	1					
ANR	1390615	Identifier	SUCCESS		1390401	1					
ANR	1390616	CompoundStatement		47:68:1072:1072	1390401	1					
ANR	1390617	BreakStatement	break ;	794:6:21618:21623	1390401	0	True				
ANR	1390618	IfStatement	"if ( VCWD_STAT ( file_path , & statbuf ) != - 1 )"		1390401	2					
ANR	1390619	Condition	"VCWD_STAT ( file_path , & statbuf ) != - 1"	797:8:21646:21681	1390401	0	True				
ANR	1390620	EqualityExpression	"VCWD_STAT ( file_path , & statbuf ) != - 1"		1390401	0		!=			
ANR	1390621	CallExpression	"VCWD_STAT ( file_path , & statbuf )"		1390401	0					
ANR	1390622	Callee	VCWD_STAT		1390401	0					
ANR	1390623	Identifier	VCWD_STAT		1390401	0					
ANR	1390624	ArgumentList	file_path		1390401	1					
ANR	1390625	Argument	file_path		1390401	0					
ANR	1390626	Identifier	file_path		1390401	0					
ANR	1390627	Argument	& statbuf		1390401	1					
ANR	1390628	UnaryOperationExpression	& statbuf		1390401	0					
ANR	1390629	UnaryOperator	&		1390401	0					
ANR	1390630	Identifier	statbuf		1390401	1					
ANR	1390631	UnaryOperationExpression	- 1		1390401	1					
ANR	1390632	UnaryOperator	-		1390401	0					
ANR	1390633	PrimaryExpression	1		1390401	1					
ANR	1390634	CompoundStatement		51:46:1146:1146	1390401	1					
ANR	1390635	BreakStatement	break ;	798:5:21691:21696	1390401	0	True				
ANR	1390636	IfStatement	"if ( zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS )"		1390401	9					
ANR	1390637	Condition	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS"	802:7:21717:21785	1390401	0	True				
ANR	1390638	EqualityExpression	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf ) != SUCCESS"		1390401	0		!=			
ANR	1390639	CallExpression	"zend_get_stream_timestamp ( file_handle -> filename , & statbuf )"		1390401	0					
ANR	1390640	Callee	zend_get_stream_timestamp		1390401	0					
ANR	1390641	Identifier	zend_get_stream_timestamp		1390401	0					
ANR	1390642	ArgumentList	file_handle -> filename		1390401	1					
ANR	1390643	Argument	file_handle -> filename		1390401	0					
ANR	1390644	PtrMemberAccess	file_handle -> filename		1390401	0					
ANR	1390645	Identifier	file_handle		1390401	0					
ANR	1390646	Identifier	filename		1390401	1					
ANR	1390647	Argument	& statbuf		1390401	1					
ANR	1390648	UnaryOperationExpression	& statbuf		1390401	0					
ANR	1390649	UnaryOperator	&		1390401	0					
ANR	1390650	Identifier	statbuf		1390401	1					
ANR	1390651	Identifier	SUCCESS		1390401	1					
ANR	1390652	CompoundStatement		56:78:1250:1250	1390401	1					
ANR	1390653	ReturnStatement	return 0 ;	803:4:21794:21802	1390401	0	True				
ANR	1390654	PrimaryExpression	0		1390401	0					
ANR	1390655	BreakStatement	break ;	805:3:21812:21817	1390401	10	True				
ANR	1390656	Label	case ZEND_HANDLE_STREAM :	806:2:21821:21844	1390401	11	True				
ANR	1390657	Identifier	ZEND_HANDLE_STREAM		1390401	0					
ANR	1390658	CompoundStatement		64:4:1418:1429	1390401	12					
ANR	1390659	IdentifierDeclStatement	php_stream * stream = ( php_stream * ) file_handle -> handle . stream . handle ;	808:4:21855:21923	1390401	0	True				
ANR	1390660	IdentifierDecl	* stream = ( php_stream * ) file_handle -> handle . stream . handle		1390401	0					
ANR	1390661	IdentifierDeclType	php_stream *		1390401	0					
ANR	1390662	Identifier	stream		1390401	1					
ANR	1390663	AssignmentExpression	* stream = ( php_stream * ) file_handle -> handle . stream . handle		1390401	2		=			
ANR	1390664	Identifier	stream		1390401	0					
ANR	1390665	CastExpression	( php_stream * ) file_handle -> handle . stream . handle		1390401	1					
ANR	1390666	CastTarget	php_stream *		1390401	0					
ANR	1390667	MemberAccess	file_handle -> handle . stream . handle		1390401	1					
ANR	1390668	MemberAccess	file_handle -> handle . stream		1390401	0					
ANR	1390669	PtrMemberAccess	file_handle -> handle		1390401	0					
ANR	1390670	Identifier	file_handle		1390401	0					
ANR	1390671	Identifier	handle		1390401	1					
ANR	1390672	Identifier	stream		1390401	1					
ANR	1390673	Identifier	handle		1390401	1					
ANR	1390674	IdentifierDeclStatement	php_stream_statbuf sb ;	809:4:21929:21950	1390401	1	True				
ANR	1390675	IdentifierDecl	sb		1390401	0					
ANR	1390676	IdentifierDeclType	php_stream_statbuf		1390401	0					
ANR	1390677	Identifier	sb		1390401	1					
ANR	1390678	IdentifierDeclStatement	"int ret , er ;"	810:4:21956:21967	1390401	2	True				
ANR	1390679	IdentifierDecl	ret		1390401	0					
ANR	1390680	IdentifierDeclType	int		1390401	0					
ANR	1390681	Identifier	ret		1390401	1					
ANR	1390682	IdentifierDecl	er		1390401	1					
ANR	1390683	IdentifierDeclType	int		1390401	0					
ANR	1390684	Identifier	er		1390401	1					
ANR	1390685	IfStatement	if ( ! stream || ! stream -> ops || ! stream -> ops -> stat )		1390401	3					
ANR	1390686	Condition	! stream || ! stream -> ops || ! stream -> ops -> stat	812:8:21978:22038	1390401	0	True				
ANR	1390687	OrExpression	! stream || ! stream -> ops || ! stream -> ops -> stat		1390401	0		||			
ANR	1390688	UnaryOperationExpression	! stream		1390401	0					
ANR	1390689	UnaryOperator	!		1390401	0					
ANR	1390690	Identifier	stream		1390401	1					
ANR	1390691	OrExpression	! stream -> ops || ! stream -> ops -> stat		1390401	1		||			
ANR	1390692	UnaryOperationExpression	! stream -> ops		1390401	0					
ANR	1390693	UnaryOperator	!		1390401	0					
ANR	1390694	PtrMemberAccess	stream -> ops		1390401	1					
ANR	1390695	Identifier	stream		1390401	0					
ANR	1390696	Identifier	ops		1390401	1					
ANR	1390697	UnaryOperationExpression	! stream -> ops -> stat		1390401	1					
ANR	1390698	UnaryOperator	!		1390401	0					
ANR	1390699	PtrMemberAccess	stream -> ops -> stat		1390401	1					
ANR	1390700	PtrMemberAccess	stream -> ops		1390401	0					
ANR	1390701	Identifier	stream		1390401	0					
ANR	1390702	Identifier	ops		1390401	1					
ANR	1390703	Identifier	stat		1390401	1					
ANR	1390704	CompoundStatement		68:28:1503:1503	1390401	1					
ANR	1390705	ReturnStatement	return 0 ;	815:5:22048:22056	1390401	0	True				
ANR	1390706	PrimaryExpression	0		1390401	0					
ANR	1390707	ExpressionStatement	er = EG ( error_reporting )	818:4:22069:22093	1390401	4	True				
ANR	1390708	AssignmentExpression	er = EG ( error_reporting )		1390401	0		=			
ANR	1390709	Identifier	er		1390401	0					
ANR	1390710	CallExpression	EG ( error_reporting )		1390401	1					
ANR	1390711	Callee	EG		1390401	0					
ANR	1390712	Identifier	EG		1390401	0					
ANR	1390713	ArgumentList	error_reporting		1390401	1					
ANR	1390714	Argument	error_reporting		1390401	0					
ANR	1390715	Identifier	error_reporting		1390401	0					
ANR	1390716	ExpressionStatement	EG ( error_reporting ) = 0	819:4:22099:22122	1390401	5	True				
ANR	1390717	AssignmentExpression	EG ( error_reporting ) = 0		1390401	0		=			
ANR	1390718	CallExpression	EG ( error_reporting )		1390401	0					
ANR	1390719	Callee	EG		1390401	0					
ANR	1390720	Identifier	EG		1390401	0					
ANR	1390721	ArgumentList	error_reporting		1390401	1					
ANR	1390722	Argument	error_reporting		1390401	0					
ANR	1390723	Identifier	error_reporting		1390401	0					
ANR	1390724	PrimaryExpression	0		1390401	1					
ANR	1390725	Statement	zend_try	820:4:22128:22135	1390401	6	True				
ANR	1390726	CompoundStatement		74:13:1599:1599	1390401	7					
ANR	1390727	ExpressionStatement	"ret = stream -> ops -> stat ( stream , & sb )"	821:5:22144:22180	1390401	0	True				
ANR	1390728	AssignmentExpression	"ret = stream -> ops -> stat ( stream , & sb )"		1390401	0		=			
ANR	1390729	Identifier	ret		1390401	0					
ANR	1390730	CallExpression	"stream -> ops -> stat ( stream , & sb )"		1390401	1					
ANR	1390731	Callee	stream -> ops -> stat		1390401	0					
ANR	1390732	PtrMemberAccess	stream -> ops -> stat		1390401	0					
ANR	1390733	PtrMemberAccess	stream -> ops		1390401	0					
ANR	1390734	Identifier	stream		1390401	0					
ANR	1390735	Identifier	ops		1390401	1					
ANR	1390736	Identifier	stat		1390401	1					
ANR	1390737	ArgumentList	stream		1390401	1					
ANR	1390738	Argument	stream		1390401	0					
ANR	1390739	Identifier	stream		1390401	0					
ANR	1390740	Argument	& sb		1390401	1					
ANR	1390741	UnaryOperationExpression	& sb		1390401	0					
ANR	1390742	UnaryOperator	&		1390401	0					
ANR	1390743	Identifier	sb		1390401	1					
ANR	1390744	Statement	zend_catch	822:6:22188:22197	1390401	8	True				
ANR	1390745	CompoundStatement		76:17:1661:1661	1390401	9					
ANR	1390746	ExpressionStatement	ret = - 1	823:5:22206:22214	1390401	0	True				
ANR	1390747	AssignmentExpression	ret = - 1		1390401	0		=			
ANR	1390748	Identifier	ret		1390401	0					
ANR	1390749	UnaryOperationExpression	- 1		1390401	1					
ANR	1390750	UnaryOperator	-		1390401	0					
ANR	1390751	PrimaryExpression	1		1390401	1					
ANR	1390752	ExpressionStatement	zend_end_try ( )	824:6:22222:22236	1390401	10	True				
ANR	1390753	CallExpression	zend_end_try ( )		1390401	0					
ANR	1390754	Callee	zend_end_try		1390401	0					
ANR	1390755	Identifier	zend_end_try		1390401	0					
ANR	1390756	ArgumentList			1390401	1					
ANR	1390757	ExpressionStatement	EG ( error_reporting ) = er	825:4:22242:22266	1390401	11	True				
ANR	1390758	AssignmentExpression	EG ( error_reporting ) = er		1390401	0		=			
ANR	1390759	CallExpression	EG ( error_reporting )		1390401	0					
ANR	1390760	Callee	EG		1390401	0					
ANR	1390761	Identifier	EG		1390401	0					
ANR	1390762	ArgumentList	error_reporting		1390401	1					
ANR	1390763	Argument	error_reporting		1390401	0					
ANR	1390764	Identifier	error_reporting		1390401	0					
ANR	1390765	Identifier	er		1390401	1					
ANR	1390766	IfStatement	if ( ret != 0 )		1390401	12					
ANR	1390767	Condition	ret != 0	826:8:22276:22283	1390401	0	True				
ANR	1390768	EqualityExpression	ret != 0		1390401	0		!=			
ANR	1390769	Identifier	ret		1390401	0					
ANR	1390770	PrimaryExpression	0		1390401	1					
ANR	1390771	CompoundStatement		80:18:1748:1748	1390401	1					
ANR	1390772	ReturnStatement	return 0 ;	827:5:22293:22301	1390401	0	True				
ANR	1390773	PrimaryExpression	0		1390401	0					
ANR	1390774	ExpressionStatement	statbuf = sb . sb	830:4:22314:22329	1390401	13	True				
ANR	1390775	AssignmentExpression	statbuf = sb . sb		1390401	0		=			
ANR	1390776	Identifier	statbuf		1390401	0					
ANR	1390777	MemberAccess	sb . sb		1390401	1					
ANR	1390778	Identifier	sb		1390401	0					
ANR	1390779	Identifier	sb		1390401	1					
ANR	1390780	BreakStatement	break ;	832:3:22339:22344	1390401	13	True				
ANR	1390781	Label	default :	834:2:22349:22356	1390401	14	True				
ANR	1390782	Identifier	default		1390401	0					
ANR	1390783	ReturnStatement	return 0 ;	835:3:22361:22369	1390401	15	True				
ANR	1390784	PrimaryExpression	0		1390401	0					
ANR	1390785	IfStatement	if ( size )		1390401	6					
ANR	1390786	Condition	size	838:5:22380:22383	1390401	0	True				
ANR	1390787	Identifier	size		1390401	0					
ANR	1390788	CompoundStatement		92:11:1848:1848	1390401	1					
ANR	1390789	ExpressionStatement	* size = statbuf . st_size	839:2:22390:22413	1390401	0	True				
ANR	1390790	AssignmentExpression	* size = statbuf . st_size		1390401	0		=			
ANR	1390791	UnaryOperationExpression	* size		1390401	0					
ANR	1390792	UnaryOperator	*		1390401	0					
ANR	1390793	Identifier	size		1390401	1					
ANR	1390794	MemberAccess	statbuf . st_size		1390401	1					
ANR	1390795	Identifier	statbuf		1390401	0					
ANR	1390796	Identifier	st_size		1390401	1					
ANR	1390797	ReturnStatement	return statbuf . st_mtime ;	841:1:22419:22442	1390401	7	True				
ANR	1390798	MemberAccess	statbuf . st_mtime		1390401	0					
ANR	1390799	Identifier	statbuf		1390401	0					
ANR	1390800	Identifier	st_mtime		1390401	1					
ANR	1390801	ReturnType	accel_time_t		1390401	1					
ANR	1390802	Identifier	zend_get_file_handle_timestamp		1390401	2					
ANR	1390803	ParameterList	"zend_file_handle * file_handle , size_t * size"		1390401	3					
ANR	1390804	Parameter	zend_file_handle * file_handle	746:44:20492:20520	1390401	0	True				
ANR	1390805	ParameterType	zend_file_handle *		1390401	0					
ANR	1390806	Identifier	file_handle		1390401	1					
ANR	1390807	Parameter	size_t * size	746:75:20523:20534	1390401	1	True				
ANR	1390808	ParameterType	size_t *		1390401	0					
ANR	1390809	Identifier	size		1390401	1					
ANR	1390810	CFGEntryNode	ENTRY		1390401		True				
ANR	1390811	CFGExitNode	EXIT		1390401		True				
ANR	1390812	Symbol	file_path		1390401						
ANR	1390813	Symbol	file_handle -> handle		1390401						
ANR	1390814	Symbol	zend_fstat		1390401						
ANR	1390815	Symbol	current_execute_data		1390401						
ANR	1390816	Symbol	error_reporting		1390401						
ANR	1390817	Symbol	file_handle -> handle . fd		1390401						
ANR	1390818	Symbol	sapi_module . get_stat		1390401						
ANR	1390819	Symbol	* size		1390401						
ANR	1390820	Symbol	& sb		1390401						
ANR	1390821	Symbol	tmpbuf -> st_mtime		1390401						
ANR	1390822	Symbol	& statbuf		1390401						
ANR	1390823	Symbol	statbuf . st_size		1390401						
ANR	1390824	Symbol	stream -> ops -> stat		1390401						
ANR	1390825	Symbol	file_handle -> handle . fp		1390401						
ANR	1390826	Symbol	ret		1390401						
ANR	1390827	Symbol	res		1390401						
ANR	1390828	Symbol	EG		1390401						
ANR	1390829	Symbol	SG ( request_info ) . path_translated		1390401						
ANR	1390830	Symbol	VCWD_STAT		1390401						
ANR	1390831	Symbol	file_handle		1390401						
ANR	1390832	Symbol	er		1390401						
ANR	1390833	Symbol	file_handle -> opened_path		1390401						
ANR	1390834	Symbol	file_handle -> filename		1390401						
ANR	1390835	Symbol	zend_get_stream_timestamp		1390401						
ANR	1390836	Symbol	size		1390401						
ANR	1390837	Symbol	fileno		1390401						
ANR	1390838	Symbol	* stream		1390401						
ANR	1390839	Symbol	* * stream		1390401						
ANR	1390840	Symbol	statbuf . st_mtime		1390401						
ANR	1390841	Symbol	file_handle -> handle . stream . handle		1390401						
ANR	1390842	Symbol	sb . sb		1390401						
ANR	1390843	Symbol	* file_handle		1390401						
ANR	1390844	Symbol	sb		1390401						
ANR	1390845	Symbol	is_stream_path		1390401						
ANR	1390846	Symbol	file_handle -> type		1390401						
ANR	1390847	Symbol	* stream -> ops		1390401						
ANR	1390848	Symbol	SG		1390401						
ANR	1390849	Symbol	stream		1390401						
ANR	1390850	Symbol	tmpbuf		1390401						
ANR	1390851	Symbol	SUCCESS		1390401						
ANR	1390852	Symbol	stream -> ops		1390401						
ANR	1390853	Symbol	* tmpbuf		1390401						
ANR	1390854	Symbol	ZSTR_VAL		1390401						
ANR	1390855	Symbol	sapi_module		1390401						
ANR	1390856	Symbol	statbuf		1390401						
ANR	1390857	Symbol	request_info		1390401						
ANR	1390858	Symbol	zend_get_file_handle_timestamp_win		1390401						
ANR	1390859	Symbol	file_handle -> handle . stream		1390401						
ANR	1390860	Symbol	tmpbuf -> st_size		1390401						
ANR	1390861	Function	do_validate_timestamps	844:0:22447:24414							
ANR	1390862	FunctionDef	"do_validate_timestamps (zend_persistent_script * persistent_script , zend_file_handle * file_handle)"		1390861	0					
ANR	1390863	CompoundStatement		845:0:22562:24414	1390861	0					
ANR	1390864	IdentifierDeclStatement	zend_file_handle ps_handle ;	846:1:22565:22591	1390861	0	True				
ANR	1390865	IdentifierDecl	ps_handle		1390861	0					
ANR	1390866	IdentifierDeclType	zend_file_handle		1390861	0					
ANR	1390867	Identifier	ps_handle		1390861	1					
ANR	1390868	IdentifierDeclStatement	zend_string * full_path_ptr = NULL ;	847:1:22594:22627	1390861	1	True				
ANR	1390869	IdentifierDecl	* full_path_ptr = NULL		1390861	0					
ANR	1390870	IdentifierDeclType	zend_string *		1390861	0					
ANR	1390871	Identifier	full_path_ptr		1390861	1					
ANR	1390872	AssignmentExpression	* full_path_ptr = NULL		1390861	2		=			
ANR	1390873	Identifier	NULL		1390861	0					
ANR	1390874	Identifier	NULL		1390861	1					
ANR	1390875	IfStatement	if ( file_handle -> opened_path )		1390861	2					
ANR	1390876	Condition	file_handle -> opened_path	853:5:22816:22839	1390861	0	True				
ANR	1390877	PtrMemberAccess	file_handle -> opened_path		1390861	0					
ANR	1390878	Identifier	file_handle		1390861	0					
ANR	1390879	Identifier	opened_path		1390861	1					
ANR	1390880	CompoundStatement		9:31:279:279	1390861	1					
ANR	1390881	IfStatement	"if ( persistent_script -> full_path != file_handle -> opened_path && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0 ) )"		1390861	0					
ANR	1390882	Condition	"persistent_script -> full_path != file_handle -> opened_path && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0 )"	854:6:22850:23127	1390861	0	True				
ANR	1390883	AndExpression	"persistent_script -> full_path != file_handle -> opened_path && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0 )"		1390861	0		&&			
ANR	1390884	EqualityExpression	persistent_script -> full_path != file_handle -> opened_path		1390861	0		!=			
ANR	1390885	PtrMemberAccess	persistent_script -> full_path		1390861	0					
ANR	1390886	Identifier	persistent_script		1390861	0					
ANR	1390887	Identifier	full_path		1390861	1					
ANR	1390888	PtrMemberAccess	file_handle -> opened_path		1390861	1					
ANR	1390889	Identifier	file_handle		1390861	0					
ANR	1390890	Identifier	opened_path		1390861	1					
ANR	1390891	OrExpression	"ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0"		1390861	1		||			
ANR	1390892	EqualityExpression	ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( file_handle -> opened_path )		1390861	0		!=			
ANR	1390893	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		1390861	0					
ANR	1390894	Callee	ZSTR_LEN		1390861	0					
ANR	1390895	Identifier	ZSTR_LEN		1390861	0					
ANR	1390896	ArgumentList	persistent_script -> full_path		1390861	1					
ANR	1390897	Argument	persistent_script -> full_path		1390861	0					
ANR	1390898	PtrMemberAccess	persistent_script -> full_path		1390861	0					
ANR	1390899	Identifier	persistent_script		1390861	0					
ANR	1390900	Identifier	full_path		1390861	1					
ANR	1390901	CallExpression	ZSTR_LEN ( file_handle -> opened_path )		1390861	1					
ANR	1390902	Callee	ZSTR_LEN		1390861	0					
ANR	1390903	Identifier	ZSTR_LEN		1390861	0					
ANR	1390904	ArgumentList	file_handle -> opened_path		1390861	1					
ANR	1390905	Argument	file_handle -> opened_path		1390861	0					
ANR	1390906	PtrMemberAccess	file_handle -> opened_path		1390861	0					
ANR	1390907	Identifier	file_handle		1390861	0					
ANR	1390908	Identifier	opened_path		1390861	1					
ANR	1390909	EqualityExpression	"memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) ) != 0"		1390861	1		!=			
ANR	1390910	CallExpression	"memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( file_handle -> opened_path ) , ZSTR_LEN ( file_handle -> opened_path ) )"		1390861	0					
ANR	1390911	Callee	memcmp		1390861	0					
ANR	1390912	Identifier	memcmp		1390861	0					
ANR	1390913	ArgumentList	ZSTR_VAL ( persistent_script -> full_path )		1390861	1					
ANR	1390914	Argument	ZSTR_VAL ( persistent_script -> full_path )		1390861	0					
ANR	1390915	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		1390861	0					
ANR	1390916	Callee	ZSTR_VAL		1390861	0					
ANR	1390917	Identifier	ZSTR_VAL		1390861	0					
ANR	1390918	ArgumentList	persistent_script -> full_path		1390861	1					
ANR	1390919	Argument	persistent_script -> full_path		1390861	0					
ANR	1390920	PtrMemberAccess	persistent_script -> full_path		1390861	0					
ANR	1390921	Identifier	persistent_script		1390861	0					
ANR	1390922	Identifier	full_path		1390861	1					
ANR	1390923	Argument	ZSTR_VAL ( file_handle -> opened_path )		1390861	1					
ANR	1390924	CallExpression	ZSTR_VAL ( file_handle -> opened_path )		1390861	0					
ANR	1390925	Callee	ZSTR_VAL		1390861	0					
ANR	1390926	Identifier	ZSTR_VAL		1390861	0					
ANR	1390927	ArgumentList	file_handle -> opened_path		1390861	1					
ANR	1390928	Argument	file_handle -> opened_path		1390861	0					
ANR	1390929	PtrMemberAccess	file_handle -> opened_path		1390861	0					
ANR	1390930	Identifier	file_handle		1390861	0					
ANR	1390931	Identifier	opened_path		1390861	1					
ANR	1390932	Argument	ZSTR_LEN ( file_handle -> opened_path )		1390861	2					
ANR	1390933	CallExpression	ZSTR_LEN ( file_handle -> opened_path )		1390861	0					
ANR	1390934	Callee	ZSTR_LEN		1390861	0					
ANR	1390935	Identifier	ZSTR_LEN		1390861	0					
ANR	1390936	ArgumentList	file_handle -> opened_path		1390861	1					
ANR	1390937	Argument	file_handle -> opened_path		1390861	0					
ANR	1390938	PtrMemberAccess	file_handle -> opened_path		1390861	0					
ANR	1390939	Identifier	file_handle		1390861	0					
ANR	1390940	Identifier	opened_path		1390861	1					
ANR	1390941	PrimaryExpression	0		1390861	1					
ANR	1390942	CompoundStatement		12:133:567:567	1390861	1					
ANR	1390943	ReturnStatement	return FAILURE ;	857:3:23135:23149	1390861	0	True				
ANR	1390944	Identifier	FAILURE		1390861	0					
ANR	1390945	ElseStatement	else		1390861	0					
ANR	1390946	CompoundStatement		15:8:600:600	1390861	0					
ANR	1390947	ExpressionStatement	"full_path_ptr = accelerator_orig_zend_resolve_path ( file_handle -> filename , strlen ( file_handle -> filename ) )"	860:2:23167:23271	1390861	0	True				
ANR	1390948	AssignmentExpression	"full_path_ptr = accelerator_orig_zend_resolve_path ( file_handle -> filename , strlen ( file_handle -> filename ) )"		1390861	0		=			
ANR	1390949	Identifier	full_path_ptr		1390861	0					
ANR	1390950	CallExpression	"accelerator_orig_zend_resolve_path ( file_handle -> filename , strlen ( file_handle -> filename ) )"		1390861	1					
ANR	1390951	Callee	accelerator_orig_zend_resolve_path		1390861	0					
ANR	1390952	Identifier	accelerator_orig_zend_resolve_path		1390861	0					
ANR	1390953	ArgumentList	file_handle -> filename		1390861	1					
ANR	1390954	Argument	file_handle -> filename		1390861	0					
ANR	1390955	PtrMemberAccess	file_handle -> filename		1390861	0					
ANR	1390956	Identifier	file_handle		1390861	0					
ANR	1390957	Identifier	filename		1390861	1					
ANR	1390958	Argument	strlen ( file_handle -> filename )		1390861	1					
ANR	1390959	CallExpression	strlen ( file_handle -> filename )		1390861	0					
ANR	1390960	Callee	strlen		1390861	0					
ANR	1390961	Identifier	strlen		1390861	0					
ANR	1390962	ArgumentList	file_handle -> filename		1390861	1					
ANR	1390963	Argument	file_handle -> filename		1390861	0					
ANR	1390964	PtrMemberAccess	file_handle -> filename		1390861	0					
ANR	1390965	Identifier	file_handle		1390861	0					
ANR	1390966	Identifier	filename		1390861	1					
ANR	1390967	IfStatement	"if ( full_path_ptr && persistent_script -> full_path != full_path_ptr && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0 ) )"		1390861	1					
ANR	1390968	Condition	"full_path_ptr && persistent_script -> full_path != full_path_ptr && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0 )"	861:6:23279:23535	1390861	0	True				
ANR	1390969	AndExpression	"full_path_ptr && persistent_script -> full_path != full_path_ptr && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0 )"		1390861	0		&&			
ANR	1390970	Identifier	full_path_ptr		1390861	0					
ANR	1390971	AndExpression	"persistent_script -> full_path != full_path_ptr && ( ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0 )"		1390861	1		&&			
ANR	1390972	EqualityExpression	persistent_script -> full_path != full_path_ptr		1390861	0		!=			
ANR	1390973	PtrMemberAccess	persistent_script -> full_path		1390861	0					
ANR	1390974	Identifier	persistent_script		1390861	0					
ANR	1390975	Identifier	full_path		1390861	1					
ANR	1390976	Identifier	full_path_ptr		1390861	1					
ANR	1390977	OrExpression	"ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr ) || memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0"		1390861	1		||			
ANR	1390978	EqualityExpression	ZSTR_LEN ( persistent_script -> full_path ) != ZSTR_LEN ( full_path_ptr )		1390861	0		!=			
ANR	1390979	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		1390861	0					
ANR	1390980	Callee	ZSTR_LEN		1390861	0					
ANR	1390981	Identifier	ZSTR_LEN		1390861	0					
ANR	1390982	ArgumentList	persistent_script -> full_path		1390861	1					
ANR	1390983	Argument	persistent_script -> full_path		1390861	0					
ANR	1390984	PtrMemberAccess	persistent_script -> full_path		1390861	0					
ANR	1390985	Identifier	persistent_script		1390861	0					
ANR	1390986	Identifier	full_path		1390861	1					
ANR	1390987	CallExpression	ZSTR_LEN ( full_path_ptr )		1390861	1					
ANR	1390988	Callee	ZSTR_LEN		1390861	0					
ANR	1390989	Identifier	ZSTR_LEN		1390861	0					
ANR	1390990	ArgumentList	full_path_ptr		1390861	1					
ANR	1390991	Argument	full_path_ptr		1390861	0					
ANR	1390992	Identifier	full_path_ptr		1390861	0					
ANR	1390993	EqualityExpression	"memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) ) != 0"		1390861	1		!=			
ANR	1390994	CallExpression	"memcmp ( ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_VAL ( full_path_ptr ) , ZSTR_LEN ( full_path_ptr ) )"		1390861	0					
ANR	1390995	Callee	memcmp		1390861	0					
ANR	1390996	Identifier	memcmp		1390861	0					
ANR	1390997	ArgumentList	ZSTR_VAL ( persistent_script -> full_path )		1390861	1					
ANR	1390998	Argument	ZSTR_VAL ( persistent_script -> full_path )		1390861	0					
ANR	1390999	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		1390861	0					
ANR	1391000	Callee	ZSTR_VAL		1390861	0					
ANR	1391001	Identifier	ZSTR_VAL		1390861	0					
ANR	1391002	ArgumentList	persistent_script -> full_path		1390861	1					
ANR	1391003	Argument	persistent_script -> full_path		1390861	0					
ANR	1391004	PtrMemberAccess	persistent_script -> full_path		1390861	0					
ANR	1391005	Identifier	persistent_script		1390861	0					
ANR	1391006	Identifier	full_path		1390861	1					
ANR	1391007	Argument	ZSTR_VAL ( full_path_ptr )		1390861	1					
ANR	1391008	CallExpression	ZSTR_VAL ( full_path_ptr )		1390861	0					
ANR	1391009	Callee	ZSTR_VAL		1390861	0					
ANR	1391010	Identifier	ZSTR_VAL		1390861	0					
ANR	1391011	ArgumentList	full_path_ptr		1390861	1					
ANR	1391012	Argument	full_path_ptr		1390861	0					
ANR	1391013	Identifier	full_path_ptr		1390861	0					
ANR	1391014	Argument	ZSTR_LEN ( full_path_ptr )		1390861	2					
ANR	1391015	CallExpression	ZSTR_LEN ( full_path_ptr )		1390861	0					
ANR	1391016	Callee	ZSTR_LEN		1390861	0					
ANR	1391017	Identifier	ZSTR_LEN		1390861	0					
ANR	1391018	ArgumentList	full_path_ptr		1390861	1					
ANR	1391019	Argument	full_path_ptr		1390861	0					
ANR	1391020	Identifier	full_path_ptr		1390861	0					
ANR	1391021	PrimaryExpression	0		1390861	1					
ANR	1391022	CompoundStatement		20:111:975:975	1390861	1					
ANR	1391023	ExpressionStatement	zend_string_release ( full_path_ptr )	865:3:23543:23577	1390861	0	True				
ANR	1391024	CallExpression	zend_string_release ( full_path_ptr )		1390861	0					
ANR	1391025	Callee	zend_string_release		1390861	0					
ANR	1391026	Identifier	zend_string_release		1390861	0					
ANR	1391027	ArgumentList	full_path_ptr		1390861	1					
ANR	1391028	Argument	full_path_ptr		1390861	0					
ANR	1391029	Identifier	full_path_ptr		1390861	0					
ANR	1391030	ReturnStatement	return FAILURE ;	866:3:23582:23596	1390861	1	True				
ANR	1391031	Identifier	FAILURE		1390861	0					
ANR	1391032	ExpressionStatement	file_handle -> opened_path = full_path_ptr	868:2:23604:23644	1390861	2	True				
ANR	1391033	AssignmentExpression	file_handle -> opened_path = full_path_ptr		1390861	0		=			
ANR	1391034	PtrMemberAccess	file_handle -> opened_path		1390861	0					
ANR	1391035	Identifier	file_handle		1390861	0					
ANR	1391036	Identifier	opened_path		1390861	1					
ANR	1391037	Identifier	full_path_ptr		1390861	1					
ANR	1391038	IfStatement	if ( persistent_script -> timestamp == 0 )		1390861	3					
ANR	1391039	Condition	persistent_script -> timestamp == 0	871:5:23655:23687	1390861	0	True				
ANR	1391040	EqualityExpression	persistent_script -> timestamp == 0		1390861	0		==			
ANR	1391041	PtrMemberAccess	persistent_script -> timestamp		1390861	0					
ANR	1391042	Identifier	persistent_script		1390861	0					
ANR	1391043	Identifier	timestamp		1390861	1					
ANR	1391044	PrimaryExpression	0		1390861	1					
ANR	1391045	CompoundStatement		27:40:1127:1127	1390861	1					
ANR	1391046	IfStatement	if ( full_path_ptr )		1390861	0					
ANR	1391047	Condition	full_path_ptr	872:6:23698:23710	1390861	0	True				
ANR	1391048	Identifier	full_path_ptr		1390861	0					
ANR	1391049	CompoundStatement		28:21:1150:1150	1390861	1					
ANR	1391050	ExpressionStatement	zend_string_release ( full_path_ptr )	873:3:23718:23752	1390861	0	True				
ANR	1391051	CallExpression	zend_string_release ( full_path_ptr )		1390861	0					
ANR	1391052	Callee	zend_string_release		1390861	0					
ANR	1391053	Identifier	zend_string_release		1390861	0					
ANR	1391054	ArgumentList	full_path_ptr		1390861	1					
ANR	1391055	Argument	full_path_ptr		1390861	0					
ANR	1391056	Identifier	full_path_ptr		1390861	0					
ANR	1391057	ExpressionStatement	file_handle -> opened_path = NULL	874:3:23757:23788	1390861	1	True				
ANR	1391058	AssignmentExpression	file_handle -> opened_path = NULL		1390861	0		=			
ANR	1391059	PtrMemberAccess	file_handle -> opened_path		1390861	0					
ANR	1391060	Identifier	file_handle		1390861	0					
ANR	1391061	Identifier	opened_path		1390861	1					
ANR	1391062	Identifier	NULL		1390861	1					
ANR	1391063	ReturnStatement	return FAILURE ;	876:2:23796:23810	1390861	1	True				
ANR	1391064	Identifier	FAILURE		1390861	0					
ANR	1391065	IfStatement	"if ( zend_get_file_handle_timestamp ( file_handle , NULL ) == persistent_script -> timestamp )"		1390861	4					
ANR	1391066	Condition	"zend_get_file_handle_timestamp ( file_handle , NULL ) == persistent_script -> timestamp"	879:5:23821:23901	1390861	0	True				
ANR	1391067	EqualityExpression	"zend_get_file_handle_timestamp ( file_handle , NULL ) == persistent_script -> timestamp"		1390861	0		==			
ANR	1391068	CallExpression	"zend_get_file_handle_timestamp ( file_handle , NULL )"		1390861	0					
ANR	1391069	Callee	zend_get_file_handle_timestamp		1390861	0					
ANR	1391070	Identifier	zend_get_file_handle_timestamp		1390861	0					
ANR	1391071	ArgumentList	file_handle		1390861	1					
ANR	1391072	Argument	file_handle		1390861	0					
ANR	1391073	Identifier	file_handle		1390861	0					
ANR	1391074	Argument	NULL		1390861	1					
ANR	1391075	Identifier	NULL		1390861	0					
ANR	1391076	PtrMemberAccess	persistent_script -> timestamp		1390861	1					
ANR	1391077	Identifier	persistent_script		1390861	0					
ANR	1391078	Identifier	timestamp		1390861	1					
ANR	1391079	CompoundStatement		35:88:1341:1341	1390861	1					
ANR	1391080	IfStatement	if ( full_path_ptr )		1390861	0					
ANR	1391081	Condition	full_path_ptr	880:6:23912:23924	1390861	0	True				
ANR	1391082	Identifier	full_path_ptr		1390861	0					
ANR	1391083	CompoundStatement		36:21:1364:1364	1390861	1					
ANR	1391084	ExpressionStatement	zend_string_release ( full_path_ptr )	881:3:23932:23966	1390861	0	True				
ANR	1391085	CallExpression	zend_string_release ( full_path_ptr )		1390861	0					
ANR	1391086	Callee	zend_string_release		1390861	0					
ANR	1391087	Identifier	zend_string_release		1390861	0					
ANR	1391088	ArgumentList	full_path_ptr		1390861	1					
ANR	1391089	Argument	full_path_ptr		1390861	0					
ANR	1391090	Identifier	full_path_ptr		1390861	0					
ANR	1391091	ExpressionStatement	file_handle -> opened_path = NULL	882:3:23971:24002	1390861	1	True				
ANR	1391092	AssignmentExpression	file_handle -> opened_path = NULL		1390861	0		=			
ANR	1391093	PtrMemberAccess	file_handle -> opened_path		1390861	0					
ANR	1391094	Identifier	file_handle		1390861	0					
ANR	1391095	Identifier	opened_path		1390861	1					
ANR	1391096	Identifier	NULL		1390861	1					
ANR	1391097	ReturnStatement	return SUCCESS ;	884:2:24010:24024	1390861	1	True				
ANR	1391098	Identifier	SUCCESS		1390861	0					
ANR	1391099	IfStatement	if ( full_path_ptr )		1390861	5					
ANR	1391100	Condition	full_path_ptr	886:5:24034:24046	1390861	0	True				
ANR	1391101	Identifier	full_path_ptr		1390861	0					
ANR	1391102	CompoundStatement		42:20:1486:1486	1390861	1					
ANR	1391103	ExpressionStatement	zend_string_release ( full_path_ptr )	887:2:24053:24087	1390861	0	True				
ANR	1391104	CallExpression	zend_string_release ( full_path_ptr )		1390861	0					
ANR	1391105	Callee	zend_string_release		1390861	0					
ANR	1391106	Identifier	zend_string_release		1390861	0					
ANR	1391107	ArgumentList	full_path_ptr		1390861	1					
ANR	1391108	Argument	full_path_ptr		1390861	0					
ANR	1391109	Identifier	full_path_ptr		1390861	0					
ANR	1391110	ExpressionStatement	file_handle -> opened_path = NULL	888:2:24091:24122	1390861	1	True				
ANR	1391111	AssignmentExpression	file_handle -> opened_path = NULL		1390861	0		=			
ANR	1391112	PtrMemberAccess	file_handle -> opened_path		1390861	0					
ANR	1391113	Identifier	file_handle		1390861	0					
ANR	1391114	Identifier	opened_path		1390861	1					
ANR	1391115	Identifier	NULL		1390861	1					
ANR	1391116	ExpressionStatement	ps_handle . type = ZEND_HANDLE_FILENAME	891:1:24129:24166	1390861	6	True				
ANR	1391117	AssignmentExpression	ps_handle . type = ZEND_HANDLE_FILENAME		1390861	0		=			
ANR	1391118	MemberAccess	ps_handle . type		1390861	0					
ANR	1391119	Identifier	ps_handle		1390861	0					
ANR	1391120	Identifier	type		1390861	1					
ANR	1391121	Identifier	ZEND_HANDLE_FILENAME		1390861	1					
ANR	1391122	ExpressionStatement	ps_handle . filename = ZSTR_VAL ( persistent_script -> full_path )	892:1:24169:24228	1390861	7	True				
ANR	1391123	AssignmentExpression	ps_handle . filename = ZSTR_VAL ( persistent_script -> full_path )		1390861	0		=			
ANR	1391124	MemberAccess	ps_handle . filename		1390861	0					
ANR	1391125	Identifier	ps_handle		1390861	0					
ANR	1391126	Identifier	filename		1390861	1					
ANR	1391127	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		1390861	1					
ANR	1391128	Callee	ZSTR_VAL		1390861	0					
ANR	1391129	Identifier	ZSTR_VAL		1390861	0					
ANR	1391130	ArgumentList	persistent_script -> full_path		1390861	1					
ANR	1391131	Argument	persistent_script -> full_path		1390861	0					
ANR	1391132	PtrMemberAccess	persistent_script -> full_path		1390861	0					
ANR	1391133	Identifier	persistent_script		1390861	0					
ANR	1391134	Identifier	full_path		1390861	1					
ANR	1391135	ExpressionStatement	ps_handle . opened_path = persistent_script -> full_path	893:1:24231:24283	1390861	8	True				
ANR	1391136	AssignmentExpression	ps_handle . opened_path = persistent_script -> full_path		1390861	0		=			
ANR	1391137	MemberAccess	ps_handle . opened_path		1390861	0					
ANR	1391138	Identifier	ps_handle		1390861	0					
ANR	1391139	Identifier	opened_path		1390861	1					
ANR	1391140	PtrMemberAccess	persistent_script -> full_path		1390861	1					
ANR	1391141	Identifier	persistent_script		1390861	0					
ANR	1391142	Identifier	full_path		1390861	1					
ANR	1391143	IfStatement	"if ( zend_get_file_handle_timestamp ( & ps_handle , NULL ) == persistent_script -> timestamp )"		1390861	9					
ANR	1391144	Condition	"zend_get_file_handle_timestamp ( & ps_handle , NULL ) == persistent_script -> timestamp"	895:5:24291:24370	1390861	0	True				
ANR	1391145	EqualityExpression	"zend_get_file_handle_timestamp ( & ps_handle , NULL ) == persistent_script -> timestamp"		1390861	0		==			
ANR	1391146	CallExpression	"zend_get_file_handle_timestamp ( & ps_handle , NULL )"		1390861	0					
ANR	1391147	Callee	zend_get_file_handle_timestamp		1390861	0					
ANR	1391148	Identifier	zend_get_file_handle_timestamp		1390861	0					
ANR	1391149	ArgumentList	& ps_handle		1390861	1					
ANR	1391150	Argument	& ps_handle		1390861	0					
ANR	1391151	UnaryOperationExpression	& ps_handle		1390861	0					
ANR	1391152	UnaryOperator	&		1390861	0					
ANR	1391153	Identifier	ps_handle		1390861	1					
ANR	1391154	Argument	NULL		1390861	1					
ANR	1391155	Identifier	NULL		1390861	0					
ANR	1391156	PtrMemberAccess	persistent_script -> timestamp		1390861	1					
ANR	1391157	Identifier	persistent_script		1390861	0					
ANR	1391158	Identifier	timestamp		1390861	1					
ANR	1391159	CompoundStatement		51:87:1810:1810	1390861	1					
ANR	1391160	ReturnStatement	return SUCCESS ;	896:2:24377:24391	1390861	0	True				
ANR	1391161	Identifier	SUCCESS		1390861	0					
ANR	1391162	ReturnStatement	return FAILURE ;	899:1:24398:24412	1390861	10	True				
ANR	1391163	Identifier	FAILURE		1390861	0					
ANR	1391164	ReturnType	static inline int		1390861	1					
ANR	1391165	Identifier	do_validate_timestamps		1390861	2					
ANR	1391166	ParameterList	"zend_persistent_script * persistent_script , zend_file_handle * file_handle"		1390861	3					
ANR	1391167	Parameter	zend_persistent_script * persistent_script	844:41:22488:22528	1390861	0	True				
ANR	1391168	ParameterType	zend_persistent_script *		1390861	0					
ANR	1391169	Identifier	persistent_script		1390861	1					
ANR	1391170	Parameter	zend_file_handle * file_handle	844:84:22531:22559	1390861	1	True				
ANR	1391171	ParameterType	zend_file_handle *		1390861	0					
ANR	1391172	Identifier	file_handle		1390861	1					
ANR	1391173	CFGEntryNode	ENTRY		1390861		True				
ANR	1391174	CFGExitNode	EXIT		1390861		True				
ANR	1391175	Symbol	& ps_handle		1390861						
ANR	1391176	Symbol	ps_handle . filename		1390861						
ANR	1391177	Symbol	zend_get_file_handle_timestamp		1390861						
ANR	1391178	Symbol	NULL		1390861						
ANR	1391179	Symbol	SUCCESS		1390861						
ANR	1391180	Symbol	ps_handle . opened_path		1390861						
ANR	1391181	Symbol	persistent_script		1390861						
ANR	1391182	Symbol	accelerator_orig_zend_resolve_path		1390861						
ANR	1391183	Symbol	ps_handle . type		1390861						
ANR	1391184	Symbol	file_handle		1390861						
ANR	1391185	Symbol	* persistent_script		1390861						
ANR	1391186	Symbol	FAILURE		1390861						
ANR	1391187	Symbol	ps_handle		1390861						
ANR	1391188	Symbol	* file_handle		1390861						
ANR	1391189	Symbol	file_handle -> opened_path		1390861						
ANR	1391190	Symbol	ZSTR_VAL		1390861						
ANR	1391191	Symbol	strlen		1390861						
ANR	1391192	Symbol	persistent_script -> full_path		1390861						
ANR	1391193	Symbol	memcmp		1390861						
ANR	1391194	Symbol	file_handle -> filename		1390861						
ANR	1391195	Symbol	persistent_script -> timestamp		1390861						
ANR	1391196	Symbol	ZEND_HANDLE_FILENAME		1390861						
ANR	1391197	Symbol	ZSTR_LEN		1390861						
ANR	1391198	Symbol	full_path_ptr		1390861						
ANR	1391199	Function	validate_timestamp_and_record	902:0:24417:24905							
ANR	1391200	FunctionDef	"validate_timestamp_and_record (zend_persistent_script * persistent_script , zend_file_handle * file_handle)"		1391199	0					
ANR	1391201	CompoundStatement		903:0:24525:24905	1391199	0					
ANR	1391202	IfStatement	if ( ZCG ( accel_directives ) . revalidate_freq && persistent_script -> dynamic_members . revalidate >= ZCG ( request_time ) )		1391199	0					
ANR	1391203	Condition	ZCG ( accel_directives ) . revalidate_freq && persistent_script -> dynamic_members . revalidate >= ZCG ( request_time )	904:5:24532:24643	1391199	0	True				
ANR	1391204	AndExpression	ZCG ( accel_directives ) . revalidate_freq && persistent_script -> dynamic_members . revalidate >= ZCG ( request_time )		1391199	0		&&			
ANR	1391205	MemberAccess	ZCG ( accel_directives ) . revalidate_freq		1391199	0					
ANR	1391206	CallExpression	ZCG ( accel_directives )		1391199	0					
ANR	1391207	Callee	ZCG		1391199	0					
ANR	1391208	Identifier	ZCG		1391199	0					
ANR	1391209	ArgumentList	accel_directives		1391199	1					
ANR	1391210	Argument	accel_directives		1391199	0					
ANR	1391211	Identifier	accel_directives		1391199	0					
ANR	1391212	Identifier	revalidate_freq		1391199	1					
ANR	1391213	RelationalExpression	persistent_script -> dynamic_members . revalidate >= ZCG ( request_time )		1391199	1		>=			
ANR	1391214	MemberAccess	persistent_script -> dynamic_members . revalidate		1391199	0					
ANR	1391215	PtrMemberAccess	persistent_script -> dynamic_members		1391199	0					
ANR	1391216	Identifier	persistent_script		1391199	0					
ANR	1391217	Identifier	dynamic_members		1391199	1					
ANR	1391218	Identifier	revalidate		1391199	1					
ANR	1391219	CallExpression	ZCG ( request_time )		1391199	1					
ANR	1391220	Callee	ZCG		1391199	0					
ANR	1391221	Identifier	ZCG		1391199	0					
ANR	1391222	ArgumentList	request_time		1391199	1					
ANR	1391223	Argument	request_time		1391199	0					
ANR	1391224	Identifier	request_time		1391199	0					
ANR	1391225	CompoundStatement		3:73:120:120	1391199	1					
ANR	1391226	ReturnStatement	return SUCCESS ;	906:2:24650:24664	1391199	0	True				
ANR	1391227	Identifier	SUCCESS		1391199	0					
ANR	1391228	ElseStatement	else		1391199	0					
ANR	1391229	IfStatement	"if ( do_validate_timestamps ( persistent_script , file_handle ) == FAILURE )"		1391199	0					
ANR	1391230	Condition	"do_validate_timestamps ( persistent_script , file_handle ) == FAILURE"	907:12:24678:24742	1391199	0	True				
ANR	1391231	EqualityExpression	"do_validate_timestamps ( persistent_script , file_handle ) == FAILURE"		1391199	0		==			
ANR	1391232	CallExpression	"do_validate_timestamps ( persistent_script , file_handle )"		1391199	0					
ANR	1391233	Callee	do_validate_timestamps		1391199	0					
ANR	1391234	Identifier	do_validate_timestamps		1391199	0					
ANR	1391235	ArgumentList	persistent_script		1391199	1					
ANR	1391236	Argument	persistent_script		1391199	0					
ANR	1391237	Identifier	persistent_script		1391199	0					
ANR	1391238	Argument	file_handle		1391199	1					
ANR	1391239	Identifier	file_handle		1391199	0					
ANR	1391240	Identifier	FAILURE		1391199	1					
ANR	1391241	CompoundStatement		5:79:219:219	1391199	1					
ANR	1391242	ReturnStatement	return FAILURE ;	908:2:24749:24763	1391199	0	True				
ANR	1391243	Identifier	FAILURE		1391199	0					
ANR	1391244	ElseStatement	else		1391199	0					
ANR	1391245	CompoundStatement		7:8:247:247	1391199	0					
ANR	1391246	ExpressionStatement	persistent_script -> dynamic_members . revalidate = ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq	910:2:24777:24882	1391199	0	True				
ANR	1391247	AssignmentExpression	persistent_script -> dynamic_members . revalidate = ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq		1391199	0		=			
ANR	1391248	MemberAccess	persistent_script -> dynamic_members . revalidate		1391199	0					
ANR	1391249	PtrMemberAccess	persistent_script -> dynamic_members		1391199	0					
ANR	1391250	Identifier	persistent_script		1391199	0					
ANR	1391251	Identifier	dynamic_members		1391199	1					
ANR	1391252	Identifier	revalidate		1391199	1					
ANR	1391253	AdditiveExpression	ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq		1391199	1		+			
ANR	1391254	CallExpression	ZCG ( request_time )		1391199	0					
ANR	1391255	Callee	ZCG		1391199	0					
ANR	1391256	Identifier	ZCG		1391199	0					
ANR	1391257	ArgumentList	request_time		1391199	1					
ANR	1391258	Argument	request_time		1391199	0					
ANR	1391259	Identifier	request_time		1391199	0					
ANR	1391260	MemberAccess	ZCG ( accel_directives ) . revalidate_freq		1391199	1					
ANR	1391261	CallExpression	ZCG ( accel_directives )		1391199	0					
ANR	1391262	Callee	ZCG		1391199	0					
ANR	1391263	Identifier	ZCG		1391199	0					
ANR	1391264	ArgumentList	accel_directives		1391199	1					
ANR	1391265	Argument	accel_directives		1391199	0					
ANR	1391266	Identifier	accel_directives		1391199	0					
ANR	1391267	Identifier	revalidate_freq		1391199	1					
ANR	1391268	ReturnStatement	return SUCCESS ;	911:2:24886:24900	1391199	1	True				
ANR	1391269	Identifier	SUCCESS		1391199	0					
ANR	1391270	ReturnType	int		1391199	1					
ANR	1391271	Identifier	validate_timestamp_and_record		1391199	2					
ANR	1391272	ParameterList	"zend_persistent_script * persistent_script , zend_file_handle * file_handle"		1391199	3					
ANR	1391273	Parameter	zend_persistent_script * persistent_script	902:34:24451:24491	1391199	0	True				
ANR	1391274	ParameterType	zend_persistent_script *		1391199	0					
ANR	1391275	Identifier	persistent_script		1391199	1					
ANR	1391276	Parameter	zend_file_handle * file_handle	902:77:24494:24522	1391199	1	True				
ANR	1391277	ParameterType	zend_file_handle *		1391199	0					
ANR	1391278	Identifier	file_handle		1391199	1					
ANR	1391279	CFGEntryNode	ENTRY		1391199		True				
ANR	1391280	CFGExitNode	EXIT		1391199		True				
ANR	1391281	Symbol	persistent_script -> dynamic_members		1391199						
ANR	1391282	Symbol	request_time		1391199						
ANR	1391283	Symbol	SUCCESS		1391199						
ANR	1391284	Symbol	do_validate_timestamps		1391199						
ANR	1391285	Symbol	persistent_script		1391199						
ANR	1391286	Symbol	file_handle		1391199						
ANR	1391287	Symbol	* persistent_script		1391199						
ANR	1391288	Symbol	accel_directives		1391199						
ANR	1391289	Symbol	FAILURE		1391199						
ANR	1391290	Symbol	persistent_script -> dynamic_members . revalidate		1391199						
ANR	1391291	Symbol	ZCG ( accel_directives ) . revalidate_freq		1391199						
ANR	1391292	Symbol	ZCG		1391199						
ANR	1391293	Function	accel_make_persistent_key	918:0:25105:29736							
ANR	1391294	FunctionDef	"accel_make_persistent_key (const char * path , int path_length , int * key_len)"		1391293	0					
ANR	1391295	CompoundStatement		919:0:25186:29736	1391293	0					
ANR	1391296	IdentifierDeclStatement	int key_length ;	920:1:25189:25203	1391293	0	True				
ANR	1391297	IdentifierDecl	key_length		1391293	0					
ANR	1391298	IdentifierDeclType	int		1391293	0					
ANR	1391299	Identifier	key_length		1391293	1					
ANR	1391300	IfStatement	"if ( IS_ABSOLUTE_PATH ( path , path_length ) )"		1391293	1					
ANR	1391301	Condition	"IS_ABSOLUTE_PATH ( path , path_length )"	923:8:25291:25325	1391293	0	True				
ANR	1391302	CallExpression	"IS_ABSOLUTE_PATH ( path , path_length )"		1391293	0					
ANR	1391303	Callee	IS_ABSOLUTE_PATH		1391293	0					
ANR	1391304	Identifier	IS_ABSOLUTE_PATH		1391293	0					
ANR	1391305	ArgumentList	path		1391293	1					
ANR	1391306	Argument	path		1391293	0					
ANR	1391307	Identifier	path		1391293	0					
ANR	1391308	Argument	path_length		1391293	1					
ANR	1391309	Identifier	path_length		1391293	0					
ANR	1391310	CompoundStatement		5:45:141:141	1391293	1					
ANR	1391311	ExpressionStatement	ZCG ( key_len ) = 0	925:2:25345:25361	1391293	0	True				
ANR	1391312	AssignmentExpression	ZCG ( key_len ) = 0		1391293	0		=			
ANR	1391313	CallExpression	ZCG ( key_len )		1391293	0					
ANR	1391314	Callee	ZCG		1391293	0					
ANR	1391315	Identifier	ZCG		1391293	0					
ANR	1391316	ArgumentList	key_len		1391293	1					
ANR	1391317	Argument	key_len		1391293	0					
ANR	1391318	Identifier	key_len		1391293	0					
ANR	1391319	PrimaryExpression	0		1391293	1					
ANR	1391320	ElseStatement	else		1391293	0					
ANR	1391321	IfStatement	if ( UNEXPECTED ( is_stream_path ( path ) ) )		1391293	0					
ANR	1391322	Condition	UNEXPECTED ( is_stream_path ( path ) )	926:15:25378:25409	1391293	0	True				
ANR	1391323	CallExpression	UNEXPECTED ( is_stream_path ( path ) )		1391293	0					
ANR	1391324	Callee	UNEXPECTED		1391293	0					
ANR	1391325	Identifier	UNEXPECTED		1391293	0					
ANR	1391326	ArgumentList	is_stream_path ( path )		1391293	1					
ANR	1391327	Argument	is_stream_path ( path )		1391293	0					
ANR	1391328	CallExpression	is_stream_path ( path )		1391293	0					
ANR	1391329	Callee	is_stream_path		1391293	0					
ANR	1391330	Identifier	is_stream_path		1391293	0					
ANR	1391331	ArgumentList	path		1391293	1					
ANR	1391332	Argument	path		1391293	0					
ANR	1391333	Identifier	path		1391293	0					
ANR	1391334	CompoundStatement		8:49:225:225	1391293	1					
ANR	1391335	IfStatement	if ( ! is_cacheable_stream_path ( path ) )		1391293	0					
ANR	1391336	Condition	! is_cacheable_stream_path ( path )	927:6:25420:25450	1391293	0	True				
ANR	1391337	UnaryOperationExpression	! is_cacheable_stream_path ( path )		1391293	0					
ANR	1391338	UnaryOperator	!		1391293	0					
ANR	1391339	CallExpression	is_cacheable_stream_path ( path )		1391293	1					
ANR	1391340	Callee	is_cacheable_stream_path		1391293	0					
ANR	1391341	Identifier	is_cacheable_stream_path		1391293	0					
ANR	1391342	ArgumentList	path		1391293	1					
ANR	1391343	Argument	path		1391293	0					
ANR	1391344	Identifier	path		1391293	0					
ANR	1391345	CompoundStatement		9:39:266:266	1391293	1					
ANR	1391346	ReturnStatement	return NULL ;	928:3:25458:25469	1391293	0	True				
ANR	1391347	Identifier	NULL		1391293	0					
ANR	1391348	ExpressionStatement	ZCG ( key_len ) = 0	931:2:25490:25506	1391293	1	True				
ANR	1391349	AssignmentExpression	ZCG ( key_len ) = 0		1391293	0		=			
ANR	1391350	CallExpression	ZCG ( key_len )		1391293	0					
ANR	1391351	Callee	ZCG		1391293	0					
ANR	1391352	Identifier	ZCG		1391293	0					
ANR	1391353	ArgumentList	key_len		1391293	1					
ANR	1391354	Argument	key_len		1391293	0					
ANR	1391355	Identifier	key_len		1391293	0					
ANR	1391356	PrimaryExpression	0		1391293	1					
ANR	1391357	ElseStatement	else		1391293	0					
ANR	1391358	IfStatement	if ( UNEXPECTED ( ! ZCG ( accel_directives ) . use_cwd ) )		1391293	0					
ANR	1391359	Condition	UNEXPECTED ( ! ZCG ( accel_directives ) . use_cwd )	932:15:25523:25564	1391293	0	True				
ANR	1391360	CallExpression	UNEXPECTED ( ! ZCG ( accel_directives ) . use_cwd )		1391293	0					
ANR	1391361	Callee	UNEXPECTED		1391293	0					
ANR	1391362	Identifier	UNEXPECTED		1391293	0					
ANR	1391363	ArgumentList	! ZCG ( accel_directives ) . use_cwd		1391293	1					
ANR	1391364	Argument	! ZCG ( accel_directives ) . use_cwd		1391293	0					
ANR	1391365	UnaryOperationExpression	! ZCG ( accel_directives ) . use_cwd		1391293	0					
ANR	1391366	UnaryOperator	!		1391293	0					
ANR	1391367	MemberAccess	ZCG ( accel_directives ) . use_cwd		1391293	1					
ANR	1391368	CallExpression	ZCG ( accel_directives )		1391293	0					
ANR	1391369	Callee	ZCG		1391293	0					
ANR	1391370	Identifier	ZCG		1391293	0					
ANR	1391371	ArgumentList	accel_directives		1391293	1					
ANR	1391372	Argument	accel_directives		1391293	0					
ANR	1391373	Identifier	accel_directives		1391293	0					
ANR	1391374	Identifier	use_cwd		1391293	1					
ANR	1391375	CompoundStatement		14:59:380:380	1391293	1					
ANR	1391376	ExpressionStatement	ZCG ( key_len ) = 0	934:2:25584:25600	1391293	0	True				
ANR	1391377	AssignmentExpression	ZCG ( key_len ) = 0		1391293	0		=			
ANR	1391378	CallExpression	ZCG ( key_len )		1391293	0					
ANR	1391379	Callee	ZCG		1391293	0					
ANR	1391380	Identifier	ZCG		1391293	0					
ANR	1391381	ArgumentList	key_len		1391293	1					
ANR	1391382	Argument	key_len		1391293	0					
ANR	1391383	Identifier	key_len		1391293	0					
ANR	1391384	PrimaryExpression	0		1391293	1					
ANR	1391385	ElseStatement	else		1391293	0					
ANR	1391386	CompoundStatement		21:2:556:584	1391293	0					
ANR	1391387	IdentifierDeclStatement	"const char * include_path = NULL , * cwd = NULL ;"	936:2:25617:25661	1391293	0	True				
ANR	1391388	IdentifierDecl	* include_path = NULL		1391293	0					
ANR	1391389	IdentifierDeclType	const char *		1391293	0					
ANR	1391390	Identifier	include_path		1391293	1					
ANR	1391391	AssignmentExpression	* include_path = NULL		1391293	2		=			
ANR	1391392	Identifier	NULL		1391293	0					
ANR	1391393	Identifier	NULL		1391293	1					
ANR	1391394	IdentifierDecl	* cwd = NULL		1391293	1					
ANR	1391395	IdentifierDeclType	const char *		1391293	0					
ANR	1391396	Identifier	cwd		1391293	1					
ANR	1391397	AssignmentExpression	* cwd = NULL		1391293	2		=			
ANR	1391398	Identifier	NULL		1391293	0					
ANR	1391399	Identifier	NULL		1391293	1					
ANR	1391400	IdentifierDeclStatement	"int include_path_len = 0 , cwd_len = 0 ;"	937:2:25665:25702	1391293	1	True				
ANR	1391401	IdentifierDecl	include_path_len = 0		1391293	0					
ANR	1391402	IdentifierDeclType	int		1391293	0					
ANR	1391403	Identifier	include_path_len		1391293	1					
ANR	1391404	AssignmentExpression	include_path_len = 0		1391293	2		=			
ANR	1391405	Identifier	include_path_len		1391293	0					
ANR	1391406	PrimaryExpression	0		1391293	1					
ANR	1391407	IdentifierDecl	cwd_len = 0		1391293	1					
ANR	1391408	IdentifierDeclType	int		1391293	0					
ANR	1391409	Identifier	cwd_len		1391293	1					
ANR	1391410	AssignmentExpression	cwd_len = 0		1391293	2		=			
ANR	1391411	Identifier	cwd_len		1391293	0					
ANR	1391412	PrimaryExpression	0		1391293	1					
ANR	1391413	IdentifierDeclStatement	zend_string * parent_script = NULL ;	938:2:25706:25739	1391293	2	True				
ANR	1391414	IdentifierDecl	* parent_script = NULL		1391293	0					
ANR	1391415	IdentifierDeclType	zend_string *		1391293	0					
ANR	1391416	Identifier	parent_script		1391293	1					
ANR	1391417	AssignmentExpression	* parent_script = NULL		1391293	2		=			
ANR	1391418	Identifier	NULL		1391293	0					
ANR	1391419	Identifier	NULL		1391293	1					
ANR	1391420	IdentifierDeclStatement	size_t parent_script_len = 0 ;	939:2:25743:25771	1391293	3	True				
ANR	1391421	IdentifierDecl	parent_script_len = 0		1391293	0					
ANR	1391422	IdentifierDeclType	size_t		1391293	0					
ANR	1391423	Identifier	parent_script_len		1391293	1					
ANR	1391424	AssignmentExpression	parent_script_len = 0		1391293	2		=			
ANR	1391425	Identifier	parent_script_len		1391293	0					
ANR	1391426	PrimaryExpression	0		1391293	1					
ANR	1391427	IfStatement	if ( EXPECTED ( ZCG ( cwd_key_len ) ) )		1391293	4					
ANR	1391428	Condition	EXPECTED ( ZCG ( cwd_key_len ) )	941:6:25780:25805	1391293	0	True				
ANR	1391429	CallExpression	EXPECTED ( ZCG ( cwd_key_len ) )		1391293	0					
ANR	1391430	Callee	EXPECTED		1391293	0					
ANR	1391431	Identifier	EXPECTED		1391293	0					
ANR	1391432	ArgumentList	ZCG ( cwd_key_len )		1391293	1					
ANR	1391433	Argument	ZCG ( cwd_key_len )		1391293	0					
ANR	1391434	CallExpression	ZCG ( cwd_key_len )		1391293	0					
ANR	1391435	Callee	ZCG		1391293	0					
ANR	1391436	Identifier	ZCG		1391293	0					
ANR	1391437	ArgumentList	cwd_key_len		1391293	1					
ANR	1391438	Argument	cwd_key_len		1391293	0					
ANR	1391439	Identifier	cwd_key_len		1391293	0					
ANR	1391440	CompoundStatement		23:34:621:621	1391293	1					
ANR	1391441	ExpressionStatement	cwd = ZCG ( cwd_key )	942:3:25813:25831	1391293	0	True				
ANR	1391442	AssignmentExpression	cwd = ZCG ( cwd_key )		1391293	0		=			
ANR	1391443	Identifier	cwd		1391293	0					
ANR	1391444	CallExpression	ZCG ( cwd_key )		1391293	1					
ANR	1391445	Callee	ZCG		1391293	0					
ANR	1391446	Identifier	ZCG		1391293	0					
ANR	1391447	ArgumentList	cwd_key		1391293	1					
ANR	1391448	Argument	cwd_key		1391293	0					
ANR	1391449	Identifier	cwd_key		1391293	0					
ANR	1391450	ExpressionStatement	cwd_len = ZCG ( cwd_key_len )	943:3:25836:25862	1391293	1	True				
ANR	1391451	AssignmentExpression	cwd_len = ZCG ( cwd_key_len )		1391293	0		=			
ANR	1391452	Identifier	cwd_len		1391293	0					
ANR	1391453	CallExpression	ZCG ( cwd_key_len )		1391293	1					
ANR	1391454	Callee	ZCG		1391293	0					
ANR	1391455	Identifier	ZCG		1391293	0					
ANR	1391456	ArgumentList	cwd_key_len		1391293	1					
ANR	1391457	Argument	cwd_key_len		1391293	0					
ANR	1391458	Identifier	cwd_key_len		1391293	0					
ANR	1391459	ElseStatement	else		1391293	0					
ANR	1391460	CompoundStatement		27:3:691:728	1391293	0					
ANR	1391461	IdentifierDeclStatement	zend_string * cwd_str = accel_getcwd ( ) ;	945:3:25878:25915	1391293	0	True				
ANR	1391462	IdentifierDecl	* cwd_str = accel_getcwd ( )		1391293	0					
ANR	1391463	IdentifierDeclType	zend_string *		1391293	0					
ANR	1391464	Identifier	cwd_str		1391293	1					
ANR	1391465	AssignmentExpression	* cwd_str = accel_getcwd ( )		1391293	2		=			
ANR	1391466	Identifier	cwd_str		1391293	0					
ANR	1391467	CallExpression	accel_getcwd ( )		1391293	1					
ANR	1391468	Callee	accel_getcwd		1391293	0					
ANR	1391469	Identifier	accel_getcwd		1391293	0					
ANR	1391470	ArgumentList			1391293	1					
ANR	1391471	IfStatement	if ( UNEXPECTED ( ! cwd_str ) )		1391293	1					
ANR	1391472	Condition	UNEXPECTED ( ! cwd_str )	947:7:25925:25944	1391293	0	True				
ANR	1391473	CallExpression	UNEXPECTED ( ! cwd_str )		1391293	0					
ANR	1391474	Callee	UNEXPECTED		1391293	0					
ANR	1391475	Identifier	UNEXPECTED		1391293	0					
ANR	1391476	ArgumentList	! cwd_str		1391293	1					
ANR	1391477	Argument	! cwd_str		1391293	0					
ANR	1391478	UnaryOperationExpression	! cwd_str		1391293	0					
ANR	1391479	UnaryOperator	!		1391293	0					
ANR	1391480	Identifier	cwd_str		1391293	1					
ANR	1391481	CompoundStatement		29:29:760:760	1391293	1					
ANR	1391482	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""getcwd() failed for '%s' (%d), please try to set opcache.use_cwd to 0 in ini file"" , path , errno )"	949:4:25998:26128	1391293	0	True				
ANR	1391483	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""getcwd() failed for '%s' (%d), please try to set opcache.use_cwd to 0 in ini file"" , path , errno )"		1391293	0					
ANR	1391484	Callee	zend_accel_error		1391293	0					
ANR	1391485	Identifier	zend_accel_error		1391293	0					
ANR	1391486	ArgumentList	ACCEL_LOG_INFO		1391293	1					
ANR	1391487	Argument	ACCEL_LOG_INFO		1391293	0					
ANR	1391488	Identifier	ACCEL_LOG_INFO		1391293	0					
ANR	1391489	Argument	"""getcwd() failed for '%s' (%d), please try to set opcache.use_cwd to 0 in ini file"""		1391293	1					
ANR	1391490	PrimaryExpression	"""getcwd() failed for '%s' (%d), please try to set opcache.use_cwd to 0 in ini file"""		1391293	0					
ANR	1391491	Argument	path		1391293	2					
ANR	1391492	Identifier	path		1391293	0					
ANR	1391493	Argument	errno		1391293	3					
ANR	1391494	Identifier	errno		1391293	0					
ANR	1391495	ReturnStatement	return NULL ;	950:4:26134:26145	1391293	1	True				
ANR	1391496	Identifier	NULL		1391293	0					
ANR	1391497	ExpressionStatement	cwd = ZSTR_VAL ( cwd_str )	952:3:26155:26178	1391293	2	True				
ANR	1391498	AssignmentExpression	cwd = ZSTR_VAL ( cwd_str )		1391293	0		=			
ANR	1391499	Identifier	cwd		1391293	0					
ANR	1391500	CallExpression	ZSTR_VAL ( cwd_str )		1391293	1					
ANR	1391501	Callee	ZSTR_VAL		1391293	0					
ANR	1391502	Identifier	ZSTR_VAL		1391293	0					
ANR	1391503	ArgumentList	cwd_str		1391293	1					
ANR	1391504	Argument	cwd_str		1391293	0					
ANR	1391505	Identifier	cwd_str		1391293	0					
ANR	1391506	ExpressionStatement	cwd_len = ZSTR_LEN ( cwd_str )	953:3:26183:26210	1391293	3	True				
ANR	1391507	AssignmentExpression	cwd_len = ZSTR_LEN ( cwd_str )		1391293	0		=			
ANR	1391508	Identifier	cwd_len		1391293	0					
ANR	1391509	CallExpression	ZSTR_LEN ( cwd_str )		1391293	1					
ANR	1391510	Callee	ZSTR_LEN		1391293	0					
ANR	1391511	Identifier	ZSTR_LEN		1391293	0					
ANR	1391512	ArgumentList	cwd_str		1391293	1					
ANR	1391513	Argument	cwd_str		1391293	0					
ANR	1391514	Identifier	cwd_str		1391293	0					
ANR	1391515	IfStatement	if ( ZCG ( cwd_check ) )		1391293	4					
ANR	1391516	Condition	ZCG ( cwd_check )	955:7:26231:26244	1391293	0	True				
ANR	1391517	CallExpression	ZCG ( cwd_check )		1391293	0					
ANR	1391518	Callee	ZCG		1391293	0					
ANR	1391519	Identifier	ZCG		1391293	0					
ANR	1391520	ArgumentList	cwd_check		1391293	1					
ANR	1391521	Argument	cwd_check		1391293	0					
ANR	1391522	Identifier	cwd_check		1391293	0					
ANR	1391523	CompoundStatement		37:23:1060:1060	1391293	1					
ANR	1391524	ExpressionStatement	ZCG ( cwd_check ) = 0	956:4:26253:26271	1391293	0	True				
ANR	1391525	AssignmentExpression	ZCG ( cwd_check ) = 0		1391293	0		=			
ANR	1391526	CallExpression	ZCG ( cwd_check )		1391293	0					
ANR	1391527	Callee	ZCG		1391293	0					
ANR	1391528	Identifier	ZCG		1391293	0					
ANR	1391529	ArgumentList	cwd_check		1391293	1					
ANR	1391530	Argument	cwd_check		1391293	0					
ANR	1391531	Identifier	cwd_check		1391293	0					
ANR	1391532	PrimaryExpression	0		1391293	1					
ANR	1391533	IfStatement	if ( ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) )		1391293	1					
ANR	1391534	Condition	ZCG ( counted ) || ZCSG ( accelerator_enabled )	957:8:26281:26323	1391293	0	True				
ANR	1391535	OrExpression	ZCG ( counted ) || ZCSG ( accelerator_enabled )		1391293	0		||			
ANR	1391536	CallExpression	ZCG ( counted )		1391293	0					
ANR	1391537	Callee	ZCG		1391293	0					
ANR	1391538	Identifier	ZCG		1391293	0					
ANR	1391539	ArgumentList	counted		1391293	1					
ANR	1391540	Argument	counted		1391293	0					
ANR	1391541	Identifier	counted		1391293	0					
ANR	1391542	CallExpression	ZCSG ( accelerator_enabled )		1391293	1					
ANR	1391543	Callee	ZCSG		1391293	0					
ANR	1391544	Identifier	ZCSG		1391293	0					
ANR	1391545	ArgumentList	accelerator_enabled		1391293	1					
ANR	1391546	Argument	accelerator_enabled		1391293	0					
ANR	1391547	Identifier	accelerator_enabled		1391293	0					
ANR	1391548	CompoundStatement		41:5:1147:1201	1391293	1					
ANR	1391549	IdentifierDeclStatement	zend_string * str = accel_find_interned_string ( cwd_str ) ;	959:5:26334:26388	1391293	0	True				
ANR	1391550	IdentifierDecl	* str = accel_find_interned_string ( cwd_str )		1391293	0					
ANR	1391551	IdentifierDeclType	zend_string *		1391293	0					
ANR	1391552	Identifier	str		1391293	1					
ANR	1391553	AssignmentExpression	* str = accel_find_interned_string ( cwd_str )		1391293	2		=			
ANR	1391554	Identifier	str		1391293	0					
ANR	1391555	CallExpression	accel_find_interned_string ( cwd_str )		1391293	1					
ANR	1391556	Callee	accel_find_interned_string		1391293	0					
ANR	1391557	Identifier	accel_find_interned_string		1391293	0					
ANR	1391558	ArgumentList	cwd_str		1391293	1					
ANR	1391559	Argument	cwd_str		1391293	0					
ANR	1391560	Identifier	cwd_str		1391293	0					
ANR	1391561	IfStatement	if ( ! str )		1391293	1					
ANR	1391562	Condition	! str	960:9:26399:26402	1391293	0	True				
ANR	1391563	UnaryOperationExpression	! str		1391293	0					
ANR	1391564	UnaryOperator	!		1391293	0					
ANR	1391565	Identifier	str		1391293	1					
ANR	1391566	CompoundStatement		42:15:1218:1218	1391293	1					
ANR	1391567	ExpressionStatement	SHM_UNPROTECT ( )	961:6:26413:26428	1391293	0	True				
ANR	1391568	CallExpression	SHM_UNPROTECT ( )		1391293	0					
ANR	1391569	Callee	SHM_UNPROTECT		1391293	0					
ANR	1391570	Identifier	SHM_UNPROTECT		1391293	0					
ANR	1391571	ArgumentList			1391293	1					
ANR	1391572	ExpressionStatement	zend_shared_alloc_lock ( )	962:6:26436:26460	1391293	1	True				
ANR	1391573	CallExpression	zend_shared_alloc_lock ( )		1391293	0					
ANR	1391574	Callee	zend_shared_alloc_lock		1391293	0					
ANR	1391575	Identifier	zend_shared_alloc_lock		1391293	0					
ANR	1391576	ArgumentList			1391293	1					
ANR	1391577	ExpressionStatement	str = accel_new_interned_string ( zend_string_copy ( cwd_str ) )	963:6:26468:26526	1391293	2	True				
ANR	1391578	AssignmentExpression	str = accel_new_interned_string ( zend_string_copy ( cwd_str ) )		1391293	0		=			
ANR	1391579	Identifier	str		1391293	0					
ANR	1391580	CallExpression	accel_new_interned_string ( zend_string_copy ( cwd_str ) )		1391293	1					
ANR	1391581	Callee	accel_new_interned_string		1391293	0					
ANR	1391582	Identifier	accel_new_interned_string		1391293	0					
ANR	1391583	ArgumentList	zend_string_copy ( cwd_str )		1391293	1					
ANR	1391584	Argument	zend_string_copy ( cwd_str )		1391293	0					
ANR	1391585	CallExpression	zend_string_copy ( cwd_str )		1391293	0					
ANR	1391586	Callee	zend_string_copy		1391293	0					
ANR	1391587	Identifier	zend_string_copy		1391293	0					
ANR	1391588	ArgumentList	cwd_str		1391293	1					
ANR	1391589	Argument	cwd_str		1391293	0					
ANR	1391590	Identifier	cwd_str		1391293	0					
ANR	1391591	IfStatement	if ( str == cwd_str )		1391293	3					
ANR	1391592	Condition	str == cwd_str	964:10:26538:26551	1391293	0	True				
ANR	1391593	EqualityExpression	str == cwd_str		1391293	0		==			
ANR	1391594	Identifier	str		1391293	0					
ANR	1391595	Identifier	cwd_str		1391293	1					
ANR	1391596	CompoundStatement		46:26:1367:1367	1391293	1					
ANR	1391597	ExpressionStatement	str = NULL	965:7:26563:26573	1391293	0	True				
ANR	1391598	AssignmentExpression	str = NULL		1391293	0		=			
ANR	1391599	Identifier	str		1391293	0					
ANR	1391600	Identifier	NULL		1391293	1					
ANR	1391601	ExpressionStatement	zend_shared_alloc_unlock ( )	967:6:26589:26615	1391293	4	True				
ANR	1391602	CallExpression	zend_shared_alloc_unlock ( )		1391293	0					
ANR	1391603	Callee	zend_shared_alloc_unlock		1391293	0					
ANR	1391604	Identifier	zend_shared_alloc_unlock		1391293	0					
ANR	1391605	ArgumentList			1391293	1					
ANR	1391606	ExpressionStatement	SHM_PROTECT ( )	968:6:26623:26636	1391293	5	True				
ANR	1391607	CallExpression	SHM_PROTECT ( )		1391293	0					
ANR	1391608	Callee	SHM_PROTECT		1391293	0					
ANR	1391609	Identifier	SHM_PROTECT		1391293	0					
ANR	1391610	ArgumentList			1391293	1					
ANR	1391611	IfStatement	if ( str )		1391293	2					
ANR	1391612	Condition	str	970:9:26654:26656	1391293	0	True				
ANR	1391613	Identifier	str		1391293	0					
ANR	1391614	CompoundStatement		54:6:1500:1603	1391293	1					
ANR	1391615	IdentifierDeclStatement	char buf [ 32 ] ;	971:6:26667:26679	1391293	0	True				
ANR	1391616	IdentifierDecl	buf [ 32 ]		1391293	0					
ANR	1391617	IdentifierDeclType	char [ 32 ]		1391293	0					
ANR	1391618	Identifier	buf		1391293	1					
ANR	1391619	PrimaryExpression	32		1391293	2					
ANR	1391620	IdentifierDeclStatement	"char * res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) ) ;"	972:6:26687:26790	1391293	1	True				
ANR	1391621	IdentifierDecl	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		1391293	0					
ANR	1391622	IdentifierDeclType	char *		1391293	0					
ANR	1391623	Identifier	res		1391293	1					
ANR	1391624	AssignmentExpression	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		1391293	2		=			
ANR	1391625	Identifier	res		1391293	0					
ANR	1391626	CallExpression	"zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		1391293	1					
ANR	1391627	Callee	zend_print_long_to_buf		1391293	0					
ANR	1391628	Identifier	zend_print_long_to_buf		1391293	0					
ANR	1391629	ArgumentList	buf + sizeof ( buf ) - 1		1391293	1					
ANR	1391630	Argument	buf + sizeof ( buf ) - 1		1391293	0					
ANR	1391631	AdditiveExpression	buf + sizeof ( buf ) - 1		1391293	0		+			
ANR	1391632	Identifier	buf		1391293	0					
ANR	1391633	AdditiveExpression	sizeof ( buf ) - 1		1391293	1		-			
ANR	1391634	SizeofExpression	sizeof ( buf )		1391293	0					
ANR	1391635	Sizeof	sizeof		1391293	0					
ANR	1391636	SizeofOperand	buf		1391293	1					
ANR	1391637	PrimaryExpression	1		1391293	1					
ANR	1391638	Argument	ZSTR_VAL ( str ) - ZCSG ( interned_strings_start )		1391293	1					
ANR	1391639	AdditiveExpression	ZSTR_VAL ( str ) - ZCSG ( interned_strings_start )		1391293	0		-			
ANR	1391640	CallExpression	ZSTR_VAL ( str )		1391293	0					
ANR	1391641	Callee	ZSTR_VAL		1391293	0					
ANR	1391642	Identifier	ZSTR_VAL		1391293	0					
ANR	1391643	ArgumentList	str		1391293	1					
ANR	1391644	Argument	str		1391293	0					
ANR	1391645	Identifier	str		1391293	0					
ANR	1391646	CallExpression	ZCSG ( interned_strings_start )		1391293	1					
ANR	1391647	Callee	ZCSG		1391293	0					
ANR	1391648	Identifier	ZCSG		1391293	0					
ANR	1391649	ArgumentList	interned_strings_start		1391293	1					
ANR	1391650	Argument	interned_strings_start		1391293	0					
ANR	1391651	Identifier	interned_strings_start		1391293	0					
ANR	1391652	ExpressionStatement	cwd_len = ZCG ( cwd_key_len ) = buf + sizeof ( buf ) - 1 - res	974:6:26799:26855	1391293	2	True				
ANR	1391653	AssignmentExpression	cwd_len = ZCG ( cwd_key_len ) = buf + sizeof ( buf ) - 1 - res		1391293	0		=			
ANR	1391654	Identifier	cwd_len		1391293	0					
ANR	1391655	AssignmentExpression	ZCG ( cwd_key_len ) = buf + sizeof ( buf ) - 1 - res		1391293	1		=			
ANR	1391656	CallExpression	ZCG ( cwd_key_len )		1391293	0					
ANR	1391657	Callee	ZCG		1391293	0					
ANR	1391658	Identifier	ZCG		1391293	0					
ANR	1391659	ArgumentList	cwd_key_len		1391293	1					
ANR	1391660	Argument	cwd_key_len		1391293	0					
ANR	1391661	Identifier	cwd_key_len		1391293	0					
ANR	1391662	AdditiveExpression	buf + sizeof ( buf ) - 1 - res		1391293	1		+			
ANR	1391663	Identifier	buf		1391293	0					
ANR	1391664	AdditiveExpression	sizeof ( buf ) - 1 - res		1391293	1		-			
ANR	1391665	SizeofExpression	sizeof ( buf )		1391293	0					
ANR	1391666	Sizeof	sizeof		1391293	0					
ANR	1391667	SizeofOperand	buf		1391293	1					
ANR	1391668	AdditiveExpression	1 - res		1391293	1		-			
ANR	1391669	PrimaryExpression	1		1391293	0					
ANR	1391670	Identifier	res		1391293	1					
ANR	1391671	ExpressionStatement	cwd = ZCG ( cwd_key )	975:6:26863:26881	1391293	3	True				
ANR	1391672	AssignmentExpression	cwd = ZCG ( cwd_key )		1391293	0		=			
ANR	1391673	Identifier	cwd		1391293	0					
ANR	1391674	CallExpression	ZCG ( cwd_key )		1391293	1					
ANR	1391675	Callee	ZCG		1391293	0					
ANR	1391676	Identifier	ZCG		1391293	0					
ANR	1391677	ArgumentList	cwd_key		1391293	1					
ANR	1391678	Argument	cwd_key		1391293	0					
ANR	1391679	Identifier	cwd_key		1391293	0					
ANR	1391680	ExpressionStatement	"memcpy ( ZCG ( cwd_key ) , res , cwd_len + 1 )"	976:6:26889:26927	1391293	4	True				
ANR	1391681	CallExpression	"memcpy ( ZCG ( cwd_key ) , res , cwd_len + 1 )"		1391293	0					
ANR	1391682	Callee	memcpy		1391293	0					
ANR	1391683	Identifier	memcpy		1391293	0					
ANR	1391684	ArgumentList	ZCG ( cwd_key )		1391293	1					
ANR	1391685	Argument	ZCG ( cwd_key )		1391293	0					
ANR	1391686	CallExpression	ZCG ( cwd_key )		1391293	0					
ANR	1391687	Callee	ZCG		1391293	0					
ANR	1391688	Identifier	ZCG		1391293	0					
ANR	1391689	ArgumentList	cwd_key		1391293	1					
ANR	1391690	Argument	cwd_key		1391293	0					
ANR	1391691	Identifier	cwd_key		1391293	0					
ANR	1391692	Argument	res		1391293	1					
ANR	1391693	Identifier	res		1391293	0					
ANR	1391694	Argument	cwd_len + 1		1391293	2					
ANR	1391695	AdditiveExpression	cwd_len + 1		1391293	0		+			
ANR	1391696	Identifier	cwd_len		1391293	0					
ANR	1391697	PrimaryExpression	1		1391293	1					
ANR	1391698	IfStatement	if ( EXPECTED ( ZCG ( include_path_key_len ) ) )		1391293	5					
ANR	1391699	Condition	EXPECTED ( ZCG ( include_path_key_len ) )	983:6:26965:26999	1391293	0	True				
ANR	1391700	CallExpression	EXPECTED ( ZCG ( include_path_key_len ) )		1391293	0					
ANR	1391701	Callee	EXPECTED		1391293	0					
ANR	1391702	Identifier	EXPECTED		1391293	0					
ANR	1391703	ArgumentList	ZCG ( include_path_key_len )		1391293	1					
ANR	1391704	Argument	ZCG ( include_path_key_len )		1391293	0					
ANR	1391705	CallExpression	ZCG ( include_path_key_len )		1391293	0					
ANR	1391706	Callee	ZCG		1391293	0					
ANR	1391707	Identifier	ZCG		1391293	0					
ANR	1391708	ArgumentList	include_path_key_len		1391293	1					
ANR	1391709	Argument	include_path_key_len		1391293	0					
ANR	1391710	Identifier	include_path_key_len		1391293	0					
ANR	1391711	CompoundStatement		65:43:1815:1815	1391293	1					
ANR	1391712	ExpressionStatement	include_path = ZCG ( include_path_key )	984:3:27007:27043	1391293	0	True				
ANR	1391713	AssignmentExpression	include_path = ZCG ( include_path_key )		1391293	0		=			
ANR	1391714	Identifier	include_path		1391293	0					
ANR	1391715	CallExpression	ZCG ( include_path_key )		1391293	1					
ANR	1391716	Callee	ZCG		1391293	0					
ANR	1391717	Identifier	ZCG		1391293	0					
ANR	1391718	ArgumentList	include_path_key		1391293	1					
ANR	1391719	Argument	include_path_key		1391293	0					
ANR	1391720	Identifier	include_path_key		1391293	0					
ANR	1391721	ExpressionStatement	include_path_len = ZCG ( include_path_key_len )	985:3:27048:27092	1391293	1	True				
ANR	1391722	AssignmentExpression	include_path_len = ZCG ( include_path_key_len )		1391293	0		=			
ANR	1391723	Identifier	include_path_len		1391293	0					
ANR	1391724	CallExpression	ZCG ( include_path_key_len )		1391293	1					
ANR	1391725	Callee	ZCG		1391293	0					
ANR	1391726	Identifier	ZCG		1391293	0					
ANR	1391727	ArgumentList	include_path_key_len		1391293	1					
ANR	1391728	Argument	include_path_key_len		1391293	0					
ANR	1391729	Identifier	include_path_key_len		1391293	0					
ANR	1391730	ElseStatement	else		1391293	0					
ANR	1391731	IfStatement	if ( ! ZCG ( include_path ) || ZSTR_LEN ( ZCG ( include_path ) ) == 0 )		1391293	0					
ANR	1391732	Condition	! ZCG ( include_path ) || ZSTR_LEN ( ZCG ( include_path ) ) == 0	986:13:27107:27160	1391293	0	True				
ANR	1391733	OrExpression	! ZCG ( include_path ) || ZSTR_LEN ( ZCG ( include_path ) ) == 0		1391293	0		||			
ANR	1391734	UnaryOperationExpression	! ZCG ( include_path )		1391293	0					
ANR	1391735	UnaryOperator	!		1391293	0					
ANR	1391736	CallExpression	ZCG ( include_path )		1391293	1					
ANR	1391737	Callee	ZCG		1391293	0					
ANR	1391738	Identifier	ZCG		1391293	0					
ANR	1391739	ArgumentList	include_path		1391293	1					
ANR	1391740	Argument	include_path		1391293	0					
ANR	1391741	Identifier	include_path		1391293	0					
ANR	1391742	EqualityExpression	ZSTR_LEN ( ZCG ( include_path ) ) == 0		1391293	1		==			
ANR	1391743	CallExpression	ZSTR_LEN ( ZCG ( include_path ) )		1391293	0					
ANR	1391744	Callee	ZSTR_LEN		1391293	0					
ANR	1391745	Identifier	ZSTR_LEN		1391293	0					
ANR	1391746	ArgumentList	ZCG ( include_path )		1391293	1					
ANR	1391747	Argument	ZCG ( include_path )		1391293	0					
ANR	1391748	CallExpression	ZCG ( include_path )		1391293	0					
ANR	1391749	Callee	ZCG		1391293	0					
ANR	1391750	Identifier	ZCG		1391293	0					
ANR	1391751	ArgumentList	include_path		1391293	1					
ANR	1391752	Argument	include_path		1391293	0					
ANR	1391753	Identifier	include_path		1391293	0					
ANR	1391754	PrimaryExpression	0		1391293	1					
ANR	1391755	CompoundStatement		68:69:1976:1976	1391293	1					
ANR	1391756	ExpressionStatement	"include_path = """""	987:3:27168:27185	1391293	0	True				
ANR	1391757	AssignmentExpression	"include_path = """""		1391293	0		=			
ANR	1391758	Identifier	include_path		1391293	0					
ANR	1391759	PrimaryExpression	""""""		1391293	1					
ANR	1391760	ExpressionStatement	include_path_len = 0	988:3:27190:27210	1391293	1	True				
ANR	1391761	AssignmentExpression	include_path_len = 0		1391293	0		=			
ANR	1391762	Identifier	include_path_len		1391293	0					
ANR	1391763	PrimaryExpression	0		1391293	1					
ANR	1391764	ElseStatement	else		1391293	0					
ANR	1391765	CompoundStatement		71:9:2034:2034	1391293	0					
ANR	1391766	ExpressionStatement	include_path = ZSTR_VAL ( ZCG ( include_path ) )	990:3:27226:27268	1391293	0	True				
ANR	1391767	AssignmentExpression	include_path = ZSTR_VAL ( ZCG ( include_path ) )		1391293	0		=			
ANR	1391768	Identifier	include_path		1391293	0					
ANR	1391769	CallExpression	ZSTR_VAL ( ZCG ( include_path ) )		1391293	1					
ANR	1391770	Callee	ZSTR_VAL		1391293	0					
ANR	1391771	Identifier	ZSTR_VAL		1391293	0					
ANR	1391772	ArgumentList	ZCG ( include_path )		1391293	1					
ANR	1391773	Argument	ZCG ( include_path )		1391293	0					
ANR	1391774	CallExpression	ZCG ( include_path )		1391293	0					
ANR	1391775	Callee	ZCG		1391293	0					
ANR	1391776	Identifier	ZCG		1391293	0					
ANR	1391777	ArgumentList	include_path		1391293	1					
ANR	1391778	Argument	include_path		1391293	0					
ANR	1391779	Identifier	include_path		1391293	0					
ANR	1391780	ExpressionStatement	include_path_len = ZSTR_LEN ( ZCG ( include_path ) )	991:3:27273:27319	1391293	1	True				
ANR	1391781	AssignmentExpression	include_path_len = ZSTR_LEN ( ZCG ( include_path ) )		1391293	0		=			
ANR	1391782	Identifier	include_path_len		1391293	0					
ANR	1391783	CallExpression	ZSTR_LEN ( ZCG ( include_path ) )		1391293	1					
ANR	1391784	Callee	ZSTR_LEN		1391293	0					
ANR	1391785	Identifier	ZSTR_LEN		1391293	0					
ANR	1391786	ArgumentList	ZCG ( include_path )		1391293	1					
ANR	1391787	Argument	ZCG ( include_path )		1391293	0					
ANR	1391788	CallExpression	ZCG ( include_path )		1391293	0					
ANR	1391789	Callee	ZCG		1391293	0					
ANR	1391790	Identifier	ZCG		1391293	0					
ANR	1391791	ArgumentList	include_path		1391293	1					
ANR	1391792	Argument	include_path		1391293	0					
ANR	1391793	Identifier	include_path		1391293	0					
ANR	1391794	IfStatement	if ( ZCG ( include_path_check ) )		1391293	2					
ANR	1391795	Condition	ZCG ( include_path_check )	994:7:27341:27363	1391293	0	True				
ANR	1391796	CallExpression	ZCG ( include_path_check )		1391293	0					
ANR	1391797	Callee	ZCG		1391293	0					
ANR	1391798	Identifier	ZCG		1391293	0					
ANR	1391799	ArgumentList	include_path_check		1391293	1					
ANR	1391800	Argument	include_path_check		1391293	0					
ANR	1391801	Identifier	include_path_check		1391293	0					
ANR	1391802	CompoundStatement		76:32:2179:2179	1391293	1					
ANR	1391803	ExpressionStatement	ZCG ( include_path_check ) = 0	995:4:27372:27399	1391293	0	True				
ANR	1391804	AssignmentExpression	ZCG ( include_path_check ) = 0		1391293	0		=			
ANR	1391805	CallExpression	ZCG ( include_path_check )		1391293	0					
ANR	1391806	Callee	ZCG		1391293	0					
ANR	1391807	Identifier	ZCG		1391293	0					
ANR	1391808	ArgumentList	include_path_check		1391293	1					
ANR	1391809	Argument	include_path_check		1391293	0					
ANR	1391810	Identifier	include_path_check		1391293	0					
ANR	1391811	PrimaryExpression	0		1391293	1					
ANR	1391812	IfStatement	if ( ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) )		1391293	1					
ANR	1391813	Condition	ZCG ( counted ) || ZCSG ( accelerator_enabled )	996:8:27409:27451	1391293	0	True				
ANR	1391814	OrExpression	ZCG ( counted ) || ZCSG ( accelerator_enabled )		1391293	0		||			
ANR	1391815	CallExpression	ZCG ( counted )		1391293	0					
ANR	1391816	Callee	ZCG		1391293	0					
ANR	1391817	Identifier	ZCG		1391293	0					
ANR	1391818	ArgumentList	counted		1391293	1					
ANR	1391819	Argument	counted		1391293	0					
ANR	1391820	Identifier	counted		1391293	0					
ANR	1391821	CallExpression	ZCSG ( accelerator_enabled )		1391293	1					
ANR	1391822	Callee	ZCSG		1391293	0					
ANR	1391823	Identifier	ZCSG		1391293	0					
ANR	1391824	ArgumentList	accelerator_enabled		1391293	1					
ANR	1391825	Argument	accelerator_enabled		1391293	0					
ANR	1391826	Identifier	accelerator_enabled		1391293	0					
ANR	1391827	CompoundStatement		80:5:2275:2339	1391293	1					
ANR	1391828	IdentifierDeclStatement	zend_string * str = accel_find_interned_string ( ZCG ( include_path ) ) ;	998:5:27462:27526	1391293	0	True				
ANR	1391829	IdentifierDecl	* str = accel_find_interned_string ( ZCG ( include_path ) )		1391293	0					
ANR	1391830	IdentifierDeclType	zend_string *		1391293	0					
ANR	1391831	Identifier	str		1391293	1					
ANR	1391832	AssignmentExpression	* str = accel_find_interned_string ( ZCG ( include_path ) )		1391293	2		=			
ANR	1391833	Identifier	str		1391293	0					
ANR	1391834	CallExpression	accel_find_interned_string ( ZCG ( include_path ) )		1391293	1					
ANR	1391835	Callee	accel_find_interned_string		1391293	0					
ANR	1391836	Identifier	accel_find_interned_string		1391293	0					
ANR	1391837	ArgumentList	ZCG ( include_path )		1391293	1					
ANR	1391838	Argument	ZCG ( include_path )		1391293	0					
ANR	1391839	CallExpression	ZCG ( include_path )		1391293	0					
ANR	1391840	Callee	ZCG		1391293	0					
ANR	1391841	Identifier	ZCG		1391293	0					
ANR	1391842	ArgumentList	include_path		1391293	1					
ANR	1391843	Argument	include_path		1391293	0					
ANR	1391844	Identifier	include_path		1391293	0					
ANR	1391845	IfStatement	if ( ! str )		1391293	1					
ANR	1391846	Condition	! str	999:9:27537:27540	1391293	0	True				
ANR	1391847	UnaryOperationExpression	! str		1391293	0					
ANR	1391848	UnaryOperator	!		1391293	0					
ANR	1391849	Identifier	str		1391293	1					
ANR	1391850	CompoundStatement		81:15:2356:2356	1391293	1					
ANR	1391851	ExpressionStatement	SHM_UNPROTECT ( )	1000:6:27551:27566	1391293	0	True				
ANR	1391852	CallExpression	SHM_UNPROTECT ( )		1391293	0					
ANR	1391853	Callee	SHM_UNPROTECT		1391293	0					
ANR	1391854	Identifier	SHM_UNPROTECT		1391293	0					
ANR	1391855	ArgumentList			1391293	1					
ANR	1391856	ExpressionStatement	zend_shared_alloc_lock ( )	1001:6:27574:27598	1391293	1	True				
ANR	1391857	CallExpression	zend_shared_alloc_lock ( )		1391293	0					
ANR	1391858	Callee	zend_shared_alloc_lock		1391293	0					
ANR	1391859	Identifier	zend_shared_alloc_lock		1391293	0					
ANR	1391860	ArgumentList			1391293	1					
ANR	1391861	ExpressionStatement	str = accel_new_interned_string ( zend_string_copy ( ZCG ( include_path ) ) )	1002:6:27606:27674	1391293	2	True				
ANR	1391862	AssignmentExpression	str = accel_new_interned_string ( zend_string_copy ( ZCG ( include_path ) ) )		1391293	0		=			
ANR	1391863	Identifier	str		1391293	0					
ANR	1391864	CallExpression	accel_new_interned_string ( zend_string_copy ( ZCG ( include_path ) ) )		1391293	1					
ANR	1391865	Callee	accel_new_interned_string		1391293	0					
ANR	1391866	Identifier	accel_new_interned_string		1391293	0					
ANR	1391867	ArgumentList	zend_string_copy ( ZCG ( include_path ) )		1391293	1					
ANR	1391868	Argument	zend_string_copy ( ZCG ( include_path ) )		1391293	0					
ANR	1391869	CallExpression	zend_string_copy ( ZCG ( include_path ) )		1391293	0					
ANR	1391870	Callee	zend_string_copy		1391293	0					
ANR	1391871	Identifier	zend_string_copy		1391293	0					
ANR	1391872	ArgumentList	ZCG ( include_path )		1391293	1					
ANR	1391873	Argument	ZCG ( include_path )		1391293	0					
ANR	1391874	CallExpression	ZCG ( include_path )		1391293	0					
ANR	1391875	Callee	ZCG		1391293	0					
ANR	1391876	Identifier	ZCG		1391293	0					
ANR	1391877	ArgumentList	include_path		1391293	1					
ANR	1391878	Argument	include_path		1391293	0					
ANR	1391879	Identifier	include_path		1391293	0					
ANR	1391880	IfStatement	if ( str == ZCG ( include_path ) )		1391293	3					
ANR	1391881	Condition	str == ZCG ( include_path )	1003:10:27686:27709	1391293	0	True				
ANR	1391882	EqualityExpression	str == ZCG ( include_path )		1391293	0		==			
ANR	1391883	Identifier	str		1391293	0					
ANR	1391884	CallExpression	ZCG ( include_path )		1391293	1					
ANR	1391885	Callee	ZCG		1391293	0					
ANR	1391886	Identifier	ZCG		1391293	0					
ANR	1391887	ArgumentList	include_path		1391293	1					
ANR	1391888	Argument	include_path		1391293	0					
ANR	1391889	Identifier	include_path		1391293	0					
ANR	1391890	CompoundStatement		85:36:2525:2525	1391293	1					
ANR	1391891	ExpressionStatement	str = NULL	1004:7:27721:27731	1391293	0	True				
ANR	1391892	AssignmentExpression	str = NULL		1391293	0		=			
ANR	1391893	Identifier	str		1391293	0					
ANR	1391894	Identifier	NULL		1391293	1					
ANR	1391895	ExpressionStatement	zend_shared_alloc_unlock ( )	1006:6:27747:27773	1391293	4	True				
ANR	1391896	CallExpression	zend_shared_alloc_unlock ( )		1391293	0					
ANR	1391897	Callee	zend_shared_alloc_unlock		1391293	0					
ANR	1391898	Identifier	zend_shared_alloc_unlock		1391293	0					
ANR	1391899	ArgumentList			1391293	1					
ANR	1391900	ExpressionStatement	SHM_PROTECT ( )	1007:6:27781:27794	1391293	5	True				
ANR	1391901	CallExpression	SHM_PROTECT ( )		1391293	0					
ANR	1391902	Callee	SHM_PROTECT		1391293	0					
ANR	1391903	Identifier	SHM_PROTECT		1391293	0					
ANR	1391904	ArgumentList			1391293	1					
ANR	1391905	IfStatement	if ( str )		1391293	2					
ANR	1391906	Condition	str	1009:9:27812:27814	1391293	0	True				
ANR	1391907	Identifier	str		1391293	0					
ANR	1391908	CompoundStatement		93:6:2658:2761	1391293	1					
ANR	1391909	IdentifierDeclStatement	char buf [ 32 ] ;	1010:6:27825:27837	1391293	0	True				
ANR	1391910	IdentifierDecl	buf [ 32 ]		1391293	0					
ANR	1391911	IdentifierDeclType	char [ 32 ]		1391293	0					
ANR	1391912	Identifier	buf		1391293	1					
ANR	1391913	PrimaryExpression	32		1391293	2					
ANR	1391914	IdentifierDeclStatement	"char * res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) ) ;"	1011:6:27845:27948	1391293	1	True				
ANR	1391915	IdentifierDecl	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		1391293	0					
ANR	1391916	IdentifierDeclType	char *		1391293	0					
ANR	1391917	Identifier	res		1391293	1					
ANR	1391918	AssignmentExpression	"* res = zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		1391293	2		=			
ANR	1391919	Identifier	res		1391293	0					
ANR	1391920	CallExpression	"zend_print_long_to_buf ( buf + sizeof ( buf ) - 1 , ZSTR_VAL ( str ) - ZCSG ( interned_strings_start ) )"		1391293	1					
ANR	1391921	Callee	zend_print_long_to_buf		1391293	0					
ANR	1391922	Identifier	zend_print_long_to_buf		1391293	0					
ANR	1391923	ArgumentList	buf + sizeof ( buf ) - 1		1391293	1					
ANR	1391924	Argument	buf + sizeof ( buf ) - 1		1391293	0					
ANR	1391925	AdditiveExpression	buf + sizeof ( buf ) - 1		1391293	0		+			
ANR	1391926	Identifier	buf		1391293	0					
ANR	1391927	AdditiveExpression	sizeof ( buf ) - 1		1391293	1		-			
ANR	1391928	SizeofExpression	sizeof ( buf )		1391293	0					
ANR	1391929	Sizeof	sizeof		1391293	0					
ANR	1391930	SizeofOperand	buf		1391293	1					
ANR	1391931	PrimaryExpression	1		1391293	1					
ANR	1391932	Argument	ZSTR_VAL ( str ) - ZCSG ( interned_strings_start )		1391293	1					
ANR	1391933	AdditiveExpression	ZSTR_VAL ( str ) - ZCSG ( interned_strings_start )		1391293	0		-			
ANR	1391934	CallExpression	ZSTR_VAL ( str )		1391293	0					
ANR	1391935	Callee	ZSTR_VAL		1391293	0					
ANR	1391936	Identifier	ZSTR_VAL		1391293	0					
ANR	1391937	ArgumentList	str		1391293	1					
ANR	1391938	Argument	str		1391293	0					
ANR	1391939	Identifier	str		1391293	0					
ANR	1391940	CallExpression	ZCSG ( interned_strings_start )		1391293	1					
ANR	1391941	Callee	ZCSG		1391293	0					
ANR	1391942	Identifier	ZCSG		1391293	0					
ANR	1391943	ArgumentList	interned_strings_start		1391293	1					
ANR	1391944	Argument	interned_strings_start		1391293	0					
ANR	1391945	Identifier	interned_strings_start		1391293	0					
ANR	1391946	ExpressionStatement	include_path_len = ZCG ( include_path_key_len ) = buf + sizeof ( buf ) - 1 - res	1013:6:27957:28031	1391293	2	True				
ANR	1391947	AssignmentExpression	include_path_len = ZCG ( include_path_key_len ) = buf + sizeof ( buf ) - 1 - res		1391293	0		=			
ANR	1391948	Identifier	include_path_len		1391293	0					
ANR	1391949	AssignmentExpression	ZCG ( include_path_key_len ) = buf + sizeof ( buf ) - 1 - res		1391293	1		=			
ANR	1391950	CallExpression	ZCG ( include_path_key_len )		1391293	0					
ANR	1391951	Callee	ZCG		1391293	0					
ANR	1391952	Identifier	ZCG		1391293	0					
ANR	1391953	ArgumentList	include_path_key_len		1391293	1					
ANR	1391954	Argument	include_path_key_len		1391293	0					
ANR	1391955	Identifier	include_path_key_len		1391293	0					
ANR	1391956	AdditiveExpression	buf + sizeof ( buf ) - 1 - res		1391293	1		+			
ANR	1391957	Identifier	buf		1391293	0					
ANR	1391958	AdditiveExpression	sizeof ( buf ) - 1 - res		1391293	1		-			
ANR	1391959	SizeofExpression	sizeof ( buf )		1391293	0					
ANR	1391960	Sizeof	sizeof		1391293	0					
ANR	1391961	SizeofOperand	buf		1391293	1					
ANR	1391962	AdditiveExpression	1 - res		1391293	1		-			
ANR	1391963	PrimaryExpression	1		1391293	0					
ANR	1391964	Identifier	res		1391293	1					
ANR	1391965	ExpressionStatement	include_path = ZCG ( include_path_key )	1014:6:28039:28075	1391293	3	True				
ANR	1391966	AssignmentExpression	include_path = ZCG ( include_path_key )		1391293	0		=			
ANR	1391967	Identifier	include_path		1391293	0					
ANR	1391968	CallExpression	ZCG ( include_path_key )		1391293	1					
ANR	1391969	Callee	ZCG		1391293	0					
ANR	1391970	Identifier	ZCG		1391293	0					
ANR	1391971	ArgumentList	include_path_key		1391293	1					
ANR	1391972	Argument	include_path_key		1391293	0					
ANR	1391973	Identifier	include_path_key		1391293	0					
ANR	1391974	ExpressionStatement	"memcpy ( ZCG ( include_path_key ) , res , include_path_len + 1 )"	1015:6:28083:28139	1391293	4	True				
ANR	1391975	CallExpression	"memcpy ( ZCG ( include_path_key ) , res , include_path_len + 1 )"		1391293	0					
ANR	1391976	Callee	memcpy		1391293	0					
ANR	1391977	Identifier	memcpy		1391293	0					
ANR	1391978	ArgumentList	ZCG ( include_path_key )		1391293	1					
ANR	1391979	Argument	ZCG ( include_path_key )		1391293	0					
ANR	1391980	CallExpression	ZCG ( include_path_key )		1391293	0					
ANR	1391981	Callee	ZCG		1391293	0					
ANR	1391982	Identifier	ZCG		1391293	0					
ANR	1391983	ArgumentList	include_path_key		1391293	1					
ANR	1391984	Argument	include_path_key		1391293	0					
ANR	1391985	Identifier	include_path_key		1391293	0					
ANR	1391986	Argument	res		1391293	1					
ANR	1391987	Identifier	res		1391293	0					
ANR	1391988	Argument	include_path_len + 1		1391293	2					
ANR	1391989	AdditiveExpression	include_path_len + 1		1391293	0		+			
ANR	1391990	Identifier	include_path_len		1391293	0					
ANR	1391991	PrimaryExpression	1		1391293	1					
ANR	1391992	IfStatement	if ( UNEXPECTED ( ( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) ) ) )		1391293	6					
ANR	1391993	Condition	UNEXPECTED ( ( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) ) )	1023:6:28206:28291	1391293	0	True				
ANR	1391994	CallExpression	UNEXPECTED ( ( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) ) )		1391293	0					
ANR	1391995	Callee	UNEXPECTED		1391293	0					
ANR	1391996	Identifier	UNEXPECTED		1391293	0					
ANR	1391997	ArgumentList	( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) )		1391293	1					
ANR	1391998	Argument	( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) )		1391293	0					
ANR	1391999	RelationalExpression	( size_t ) ( cwd_len + path_length + include_path_len + 2 ) >= sizeof ( ZCG ( key ) )		1391293	0		>=			
ANR	1392000	CastExpression	( size_t ) ( cwd_len + path_length + include_path_len + 2 )		1391293	0					
ANR	1392001	CastTarget	size_t		1391293	0					
ANR	1392002	AdditiveExpression	cwd_len + path_length + include_path_len + 2		1391293	1		+			
ANR	1392003	Identifier	cwd_len		1391293	0					
ANR	1392004	AdditiveExpression	path_length + include_path_len + 2		1391293	1		+			
ANR	1392005	Identifier	path_length		1391293	0					
ANR	1392006	AdditiveExpression	include_path_len + 2		1391293	1		+			
ANR	1392007	Identifier	include_path_len		1391293	0					
ANR	1392008	PrimaryExpression	2		1391293	1					
ANR	1392009	SizeofExpression	sizeof ( ZCG ( key ) )		1391293	1					
ANR	1392010	Sizeof	sizeof		1391293	0					
ANR	1392011	CallExpression	ZCG ( key )		1391293	1					
ANR	1392012	Callee	ZCG		1391293	0					
ANR	1392013	Identifier	ZCG		1391293	0					
ANR	1392014	ArgumentList	key		1391293	1					
ANR	1392015	Argument	key		1391293	0					
ANR	1392016	Identifier	key		1391293	0					
ANR	1392017	CompoundStatement		105:94:3107:3107	1391293	1					
ANR	1392018	ReturnStatement	return NULL ;	1024:3:28299:28310	1391293	0	True				
ANR	1392019	Identifier	NULL		1391293	0					
ANR	1392020	ExpressionStatement	"memcpy ( ZCG ( key ) , path , path_length )"	1032:2:28517:28552	1391293	7	True				
ANR	1392021	CallExpression	"memcpy ( ZCG ( key ) , path , path_length )"		1391293	0					
ANR	1392022	Callee	memcpy		1391293	0					
ANR	1392023	Identifier	memcpy		1391293	0					
ANR	1392024	ArgumentList	ZCG ( key )		1391293	1					
ANR	1392025	Argument	ZCG ( key )		1391293	0					
ANR	1392026	CallExpression	ZCG ( key )		1391293	0					
ANR	1392027	Callee	ZCG		1391293	0					
ANR	1392028	Identifier	ZCG		1391293	0					
ANR	1392029	ArgumentList	key		1391293	1					
ANR	1392030	Argument	key		1391293	0					
ANR	1392031	Identifier	key		1391293	0					
ANR	1392032	Argument	path		1391293	1					
ANR	1392033	Identifier	path		1391293	0					
ANR	1392034	Argument	path_length		1391293	2					
ANR	1392035	Identifier	path_length		1391293	0					
ANR	1392036	ExpressionStatement	ZCG ( key ) [ path_length ] = ':'	1033:2:28556:28583	1391293	8	True				
ANR	1392037	AssignmentExpression	ZCG ( key ) [ path_length ] = ':'		1391293	0		=			
ANR	1392038	ArrayIndexing	ZCG ( key ) [ path_length ]		1391293	0					
ANR	1392039	CallExpression	ZCG ( key )		1391293	0					
ANR	1392040	Callee	ZCG		1391293	0					
ANR	1392041	Identifier	ZCG		1391293	0					
ANR	1392042	ArgumentList	key		1391293	1					
ANR	1392043	Argument	key		1391293	0					
ANR	1392044	Identifier	key		1391293	0					
ANR	1392045	Identifier	path_length		1391293	1					
ANR	1392046	PrimaryExpression	':'		1391293	1					
ANR	1392047	ExpressionStatement	key_length = path_length + 1	1034:2:28587:28615	1391293	9	True				
ANR	1392048	AssignmentExpression	key_length = path_length + 1		1391293	0		=			
ANR	1392049	Identifier	key_length		1391293	0					
ANR	1392050	AdditiveExpression	path_length + 1		1391293	1		+			
ANR	1392051	Identifier	path_length		1391293	0					
ANR	1392052	PrimaryExpression	1		1391293	1					
ANR	1392053	ExpressionStatement	"memcpy ( ZCG ( key ) + key_length , cwd , cwd_len )"	1035:2:28619:28662	1391293	10	True				
ANR	1392054	CallExpression	"memcpy ( ZCG ( key ) + key_length , cwd , cwd_len )"		1391293	0					
ANR	1392055	Callee	memcpy		1391293	0					
ANR	1392056	Identifier	memcpy		1391293	0					
ANR	1392057	ArgumentList	ZCG ( key ) + key_length		1391293	1					
ANR	1392058	Argument	ZCG ( key ) + key_length		1391293	0					
ANR	1392059	AdditiveExpression	ZCG ( key ) + key_length		1391293	0		+			
ANR	1392060	CallExpression	ZCG ( key )		1391293	0					
ANR	1392061	Callee	ZCG		1391293	0					
ANR	1392062	Identifier	ZCG		1391293	0					
ANR	1392063	ArgumentList	key		1391293	1					
ANR	1392064	Argument	key		1391293	0					
ANR	1392065	Identifier	key		1391293	0					
ANR	1392066	Identifier	key_length		1391293	1					
ANR	1392067	Argument	cwd		1391293	1					
ANR	1392068	Identifier	cwd		1391293	0					
ANR	1392069	Argument	cwd_len		1391293	2					
ANR	1392070	Identifier	cwd_len		1391293	0					
ANR	1392071	ExpressionStatement	key_length += cwd_len	1036:2:28666:28687	1391293	11	True				
ANR	1392072	AssignmentExpression	key_length += cwd_len		1391293	0		+=			
ANR	1392073	Identifier	key_length		1391293	0					
ANR	1392074	Identifier	cwd_len		1391293	1					
ANR	1392075	IfStatement	if ( include_path_len )		1391293	12					
ANR	1392076	Condition	include_path_len	1038:6:28696:28711	1391293	0	True				
ANR	1392077	Identifier	include_path_len		1391293	0					
ANR	1392078	CompoundStatement		120:24:3527:3527	1391293	1					
ANR	1392079	ExpressionStatement	ZCG ( key ) [ key_length ] = ':'	1039:3:28719:28745	1391293	0	True				
ANR	1392080	AssignmentExpression	ZCG ( key ) [ key_length ] = ':'		1391293	0		=			
ANR	1392081	ArrayIndexing	ZCG ( key ) [ key_length ]		1391293	0					
ANR	1392082	CallExpression	ZCG ( key )		1391293	0					
ANR	1392083	Callee	ZCG		1391293	0					
ANR	1392084	Identifier	ZCG		1391293	0					
ANR	1392085	ArgumentList	key		1391293	1					
ANR	1392086	Argument	key		1391293	0					
ANR	1392087	Identifier	key		1391293	0					
ANR	1392088	Identifier	key_length		1391293	1					
ANR	1392089	PrimaryExpression	':'		1391293	1					
ANR	1392090	ExpressionStatement	key_length += 1	1040:3:28750:28765	1391293	1	True				
ANR	1392091	AssignmentExpression	key_length += 1		1391293	0		+=			
ANR	1392092	Identifier	key_length		1391293	0					
ANR	1392093	PrimaryExpression	1		1391293	1					
ANR	1392094	ExpressionStatement	"memcpy ( ZCG ( key ) + key_length , include_path , include_path_len )"	1041:3:28770:28831	1391293	2	True				
ANR	1392095	CallExpression	"memcpy ( ZCG ( key ) + key_length , include_path , include_path_len )"		1391293	0					
ANR	1392096	Callee	memcpy		1391293	0					
ANR	1392097	Identifier	memcpy		1391293	0					
ANR	1392098	ArgumentList	ZCG ( key ) + key_length		1391293	1					
ANR	1392099	Argument	ZCG ( key ) + key_length		1391293	0					
ANR	1392100	AdditiveExpression	ZCG ( key ) + key_length		1391293	0		+			
ANR	1392101	CallExpression	ZCG ( key )		1391293	0					
ANR	1392102	Callee	ZCG		1391293	0					
ANR	1392103	Identifier	ZCG		1391293	0					
ANR	1392104	ArgumentList	key		1391293	1					
ANR	1392105	Argument	key		1391293	0					
ANR	1392106	Identifier	key		1391293	0					
ANR	1392107	Identifier	key_length		1391293	1					
ANR	1392108	Argument	include_path		1391293	1					
ANR	1392109	Identifier	include_path		1391293	0					
ANR	1392110	Argument	include_path_len		1391293	2					
ANR	1392111	Identifier	include_path_len		1391293	0					
ANR	1392112	ExpressionStatement	key_length += include_path_len	1042:3:28836:28866	1391293	3	True				
ANR	1392113	AssignmentExpression	key_length += include_path_len		1391293	0		+=			
ANR	1392114	Identifier	key_length		1391293	0					
ANR	1392115	Identifier	include_path_len		1391293	1					
ANR	1392116	IfStatement	if ( EXPECTED ( EG ( current_execute_data ) ) && EXPECTED ( ( parent_script = zend_get_executed_filename_ex ( ) ) != NULL ) )		1391293	13					
ANR	1392117	Condition	EXPECTED ( EG ( current_execute_data ) ) && EXPECTED ( ( parent_script = zend_get_executed_filename_ex ( ) ) != NULL )	1049:6:29039:29149	1391293	0	True				
ANR	1392118	AndExpression	EXPECTED ( EG ( current_execute_data ) ) && EXPECTED ( ( parent_script = zend_get_executed_filename_ex ( ) ) != NULL )		1391293	0		&&			
ANR	1392119	CallExpression	EXPECTED ( EG ( current_execute_data ) )		1391293	0					
ANR	1392120	Callee	EXPECTED		1391293	0					
ANR	1392121	Identifier	EXPECTED		1391293	0					
ANR	1392122	ArgumentList	EG ( current_execute_data )		1391293	1					
ANR	1392123	Argument	EG ( current_execute_data )		1391293	0					
ANR	1392124	CallExpression	EG ( current_execute_data )		1391293	0					
ANR	1392125	Callee	EG		1391293	0					
ANR	1392126	Identifier	EG		1391293	0					
ANR	1392127	ArgumentList	current_execute_data		1391293	1					
ANR	1392128	Argument	current_execute_data		1391293	0					
ANR	1392129	Identifier	current_execute_data		1391293	0					
ANR	1392130	CallExpression	EXPECTED ( ( parent_script = zend_get_executed_filename_ex ( ) ) != NULL )		1391293	1					
ANR	1392131	Callee	EXPECTED		1391293	0					
ANR	1392132	Identifier	EXPECTED		1391293	0					
ANR	1392133	ArgumentList	( parent_script = zend_get_executed_filename_ex ( ) ) != NULL		1391293	1					
ANR	1392134	Argument	( parent_script = zend_get_executed_filename_ex ( ) ) != NULL		1391293	0					
ANR	1392135	EqualityExpression	( parent_script = zend_get_executed_filename_ex ( ) ) != NULL		1391293	0		!=			
ANR	1392136	AssignmentExpression	parent_script = zend_get_executed_filename_ex ( )		1391293	0		=			
ANR	1392137	Identifier	parent_script		1391293	0					
ANR	1392138	CallExpression	zend_get_executed_filename_ex ( )		1391293	1					
ANR	1392139	Callee	zend_get_executed_filename_ex		1391293	0					
ANR	1392140	Identifier	zend_get_executed_filename_ex		1391293	0					
ANR	1392141	ArgumentList			1391293	1					
ANR	1392142	Identifier	NULL		1391293	1					
ANR	1392143	CompoundStatement		132:75:3965:3965	1391293	1					
ANR	1392144	ExpressionStatement	parent_script_len = ZSTR_LEN ( parent_script )	1052:3:29158:29201	1391293	0	True				
ANR	1392145	AssignmentExpression	parent_script_len = ZSTR_LEN ( parent_script )		1391293	0		=			
ANR	1392146	Identifier	parent_script_len		1391293	0					
ANR	1392147	CallExpression	ZSTR_LEN ( parent_script )		1391293	1					
ANR	1392148	Callee	ZSTR_LEN		1391293	0					
ANR	1392149	Identifier	ZSTR_LEN		1391293	0					
ANR	1392150	ArgumentList	parent_script		1391293	1					
ANR	1392151	Argument	parent_script		1391293	0					
ANR	1392152	Identifier	parent_script		1391293	0					
ANR	1392153	WhileStatement	while ( ( -- parent_script_len > 0 ) && ! IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] ) )		1391293	1					
ANR	1392154	Condition	( -- parent_script_len > 0 ) && ! IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] )	1053:10:29213:29294	1391293	0	True				
ANR	1392155	AndExpression	( -- parent_script_len > 0 ) && ! IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] )		1391293	0		&&			
ANR	1392156	RelationalExpression	-- parent_script_len > 0		1391293	0		>			
ANR	1392157	UnaryExpression	-- parent_script_len		1391293	0					
ANR	1392158	IncDec	--		1391293	0					
ANR	1392159	Identifier	parent_script_len		1391293	1					
ANR	1392160	PrimaryExpression	0		1391293	1					
ANR	1392161	UnaryOperationExpression	! IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] )		1391293	1					
ANR	1392162	UnaryOperator	!		1391293	0					
ANR	1392163	CallExpression	IS_SLASH ( ZSTR_VAL ( parent_script ) [ parent_script_len ] )		1391293	1					
ANR	1392164	Callee	IS_SLASH		1391293	0					
ANR	1392165	Identifier	IS_SLASH		1391293	0					
ANR	1392166	ArgumentList	ZSTR_VAL ( parent_script ) [ parent_script_len ]		1391293	1					
ANR	1392167	Argument	ZSTR_VAL ( parent_script ) [ parent_script_len ]		1391293	0					
ANR	1392168	ArrayIndexing	ZSTR_VAL ( parent_script ) [ parent_script_len ]		1391293	0					
ANR	1392169	CallExpression	ZSTR_VAL ( parent_script )		1391293	0					
ANR	1392170	Callee	ZSTR_VAL		1391293	0					
ANR	1392171	Identifier	ZSTR_VAL		1391293	0					
ANR	1392172	ArgumentList	parent_script		1391293	1					
ANR	1392173	Argument	parent_script		1391293	0					
ANR	1392174	Identifier	parent_script		1391293	0					
ANR	1392175	Identifier	parent_script_len		1391293	1					
ANR	1392176	ExpressionStatement		1053:93:29296:29296	1391293	1	True				
ANR	1392177	IfStatement	if ( UNEXPECTED ( ( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) ) ) )		1391293	2					
ANR	1392178	Condition	UNEXPECTED ( ( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) ) )	1055:7:29306:29381	1391293	0	True				
ANR	1392179	CallExpression	UNEXPECTED ( ( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) ) )		1391293	0					
ANR	1392180	Callee	UNEXPECTED		1391293	0					
ANR	1392181	Identifier	UNEXPECTED		1391293	0					
ANR	1392182	ArgumentList	( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) )		1391293	1					
ANR	1392183	Argument	( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) )		1391293	0					
ANR	1392184	RelationalExpression	( size_t ) ( key_length + parent_script_len + 1 ) >= sizeof ( ZCG ( key ) )		1391293	0		>=			
ANR	1392185	CastExpression	( size_t ) ( key_length + parent_script_len + 1 )		1391293	0					
ANR	1392186	CastTarget	size_t		1391293	0					
ANR	1392187	AdditiveExpression	key_length + parent_script_len + 1		1391293	1		+			
ANR	1392188	Identifier	key_length		1391293	0					
ANR	1392189	AdditiveExpression	parent_script_len + 1		1391293	1		+			
ANR	1392190	Identifier	parent_script_len		1391293	0					
ANR	1392191	PrimaryExpression	1		1391293	1					
ANR	1392192	SizeofExpression	sizeof ( ZCG ( key ) )		1391293	1					
ANR	1392193	Sizeof	sizeof		1391293	0					
ANR	1392194	CallExpression	ZCG ( key )		1391293	1					
ANR	1392195	Callee	ZCG		1391293	0					
ANR	1392196	Identifier	ZCG		1391293	0					
ANR	1392197	ArgumentList	key		1391293	1					
ANR	1392198	Argument	key		1391293	0					
ANR	1392199	Identifier	key		1391293	0					
ANR	1392200	CompoundStatement		137:85:4197:4197	1391293	1					
ANR	1392201	ReturnStatement	return NULL ;	1056:4:29390:29401	1391293	0	True				
ANR	1392202	Identifier	NULL		1391293	0					
ANR	1392203	ExpressionStatement	ZCG ( key ) [ key_length ] = ':'	1058:3:29411:29437	1391293	3	True				
ANR	1392204	AssignmentExpression	ZCG ( key ) [ key_length ] = ':'		1391293	0		=			
ANR	1392205	ArrayIndexing	ZCG ( key ) [ key_length ]		1391293	0					
ANR	1392206	CallExpression	ZCG ( key )		1391293	0					
ANR	1392207	Callee	ZCG		1391293	0					
ANR	1392208	Identifier	ZCG		1391293	0					
ANR	1392209	ArgumentList	key		1391293	1					
ANR	1392210	Argument	key		1391293	0					
ANR	1392211	Identifier	key		1391293	0					
ANR	1392212	Identifier	key_length		1391293	1					
ANR	1392213	PrimaryExpression	':'		1391293	1					
ANR	1392214	ExpressionStatement	key_length += 1	1059:3:29442:29457	1391293	4	True				
ANR	1392215	AssignmentExpression	key_length += 1		1391293	0		+=			
ANR	1392216	Identifier	key_length		1391293	0					
ANR	1392217	PrimaryExpression	1		1391293	1					
ANR	1392218	ExpressionStatement	"memcpy ( ZCG ( key ) + key_length , ZSTR_VAL ( parent_script ) , parent_script_len )"	1060:3:29462:29535	1391293	5	True				
ANR	1392219	CallExpression	"memcpy ( ZCG ( key ) + key_length , ZSTR_VAL ( parent_script ) , parent_script_len )"		1391293	0					
ANR	1392220	Callee	memcpy		1391293	0					
ANR	1392221	Identifier	memcpy		1391293	0					
ANR	1392222	ArgumentList	ZCG ( key ) + key_length		1391293	1					
ANR	1392223	Argument	ZCG ( key ) + key_length		1391293	0					
ANR	1392224	AdditiveExpression	ZCG ( key ) + key_length		1391293	0		+			
ANR	1392225	CallExpression	ZCG ( key )		1391293	0					
ANR	1392226	Callee	ZCG		1391293	0					
ANR	1392227	Identifier	ZCG		1391293	0					
ANR	1392228	ArgumentList	key		1391293	1					
ANR	1392229	Argument	key		1391293	0					
ANR	1392230	Identifier	key		1391293	0					
ANR	1392231	Identifier	key_length		1391293	1					
ANR	1392232	Argument	ZSTR_VAL ( parent_script )		1391293	1					
ANR	1392233	CallExpression	ZSTR_VAL ( parent_script )		1391293	0					
ANR	1392234	Callee	ZSTR_VAL		1391293	0					
ANR	1392235	Identifier	ZSTR_VAL		1391293	0					
ANR	1392236	ArgumentList	parent_script		1391293	1					
ANR	1392237	Argument	parent_script		1391293	0					
ANR	1392238	Identifier	parent_script		1391293	0					
ANR	1392239	Argument	parent_script_len		1391293	2					
ANR	1392240	Identifier	parent_script_len		1391293	0					
ANR	1392241	ExpressionStatement	key_length += parent_script_len	1061:3:29540:29571	1391293	6	True				
ANR	1392242	AssignmentExpression	key_length += parent_script_len		1391293	0		+=			
ANR	1392243	Identifier	key_length		1391293	0					
ANR	1392244	Identifier	parent_script_len		1391293	1					
ANR	1392245	ExpressionStatement	ZCG ( key ) [ key_length ] = '\\0'	1063:2:29579:29606	1391293	14	True				
ANR	1392246	AssignmentExpression	ZCG ( key ) [ key_length ] = '\\0'		1391293	0		=			
ANR	1392247	ArrayIndexing	ZCG ( key ) [ key_length ]		1391293	0					
ANR	1392248	CallExpression	ZCG ( key )		1391293	0					
ANR	1392249	Callee	ZCG		1391293	0					
ANR	1392250	Identifier	ZCG		1391293	0					
ANR	1392251	ArgumentList	key		1391293	1					
ANR	1392252	Argument	key		1391293	0					
ANR	1392253	Identifier	key		1391293	0					
ANR	1392254	Identifier	key_length		1391293	1					
ANR	1392255	PrimaryExpression	'\\0'		1391293	1					
ANR	1392256	ExpressionStatement	* key_len = ZCG ( key_len ) = key_length	1064:2:29610:29646	1391293	15	True				
ANR	1392257	AssignmentExpression	* key_len = ZCG ( key_len ) = key_length		1391293	0		=			
ANR	1392258	UnaryOperationExpression	* key_len		1391293	0					
ANR	1392259	UnaryOperator	*		1391293	0					
ANR	1392260	Identifier	key_len		1391293	1					
ANR	1392261	AssignmentExpression	ZCG ( key_len ) = key_length		1391293	1		=			
ANR	1392262	CallExpression	ZCG ( key_len )		1391293	0					
ANR	1392263	Callee	ZCG		1391293	0					
ANR	1392264	Identifier	ZCG		1391293	0					
ANR	1392265	ArgumentList	key_len		1391293	1					
ANR	1392266	Argument	key_len		1391293	0					
ANR	1392267	Identifier	key_len		1391293	0					
ANR	1392268	Identifier	key_length		1391293	1					
ANR	1392269	ReturnStatement	return ZCG ( key ) ;	1065:2:29650:29665	1391293	16	True				
ANR	1392270	CallExpression	ZCG ( key )		1391293	0					
ANR	1392271	Callee	ZCG		1391293	0					
ANR	1392272	Identifier	ZCG		1391293	0					
ANR	1392273	ArgumentList	key		1391293	1					
ANR	1392274	Argument	key		1391293	0					
ANR	1392275	Identifier	key		1391293	0					
ANR	1392276	ExpressionStatement	* key_len = path_length	1069:1:29691:29713	1391293	2	True				
ANR	1392277	AssignmentExpression	* key_len = path_length		1391293	0		=			
ANR	1392278	UnaryOperationExpression	* key_len		1391293	0					
ANR	1392279	UnaryOperator	*		1391293	0					
ANR	1392280	Identifier	key_len		1391293	1					
ANR	1392281	Identifier	path_length		1391293	1					
ANR	1392282	ReturnStatement	return ( char * ) path ;	1070:1:29716:29734	1391293	3	True				
ANR	1392283	CastExpression	( char * ) path		1391293	0					
ANR	1392284	CastTarget	char *		1391293	0					
ANR	1392285	Identifier	path		1391293	1					
ANR	1392286	ReturnType	char *		1391293	1					
ANR	1392287	Identifier	accel_make_persistent_key		1391293	2					
ANR	1392288	ParameterList	"const char * path , int path_length , int * key_len"		1391293	3					
ANR	1392289	Parameter	const char * path	918:32:25137:25152	1391293	0	True				
ANR	1392290	ParameterType	const char *		1391293	0					
ANR	1392291	Identifier	path		1391293	1					
ANR	1392292	Parameter	int path_length	918:50:25155:25169	1391293	1	True				
ANR	1392293	ParameterType	int		1391293	0					
ANR	1392294	Identifier	path_length		1391293	1					
ANR	1392295	Parameter	int * key_len	918:67:25172:25183	1391293	2	True				
ANR	1392296	ParameterType	int *		1391293	0					
ANR	1392297	Identifier	key_len		1391293	1					
ANR	1392298	CFGEntryNode	ENTRY		1391293		True				
ANR	1392299	CFGExitNode	EXIT		1391293		True				
ANR	1392300	Symbol	cwd_len		1391293						
ANR	1392301	Symbol	current_execute_data		1391293						
ANR	1392302	Symbol	zend_print_long_to_buf		1391293						
ANR	1392303	Symbol	accel_getcwd		1391293						
ANR	1392304	Symbol	path		1391293						
ANR	1392305	Symbol	ZCSG		1391293						
ANR	1392306	Symbol	include_path_len		1391293						
ANR	1392307	Symbol	* ZCG		1391293						
ANR	1392308	Symbol	accel_find_interned_string		1391293						
ANR	1392309	Symbol	parent_script_len		1391293						
ANR	1392310	Symbol	path_length		1391293						
ANR	1392311	Symbol	zend_get_executed_filename_ex		1391293						
ANR	1392312	Symbol	* parent_script_len		1391293						
ANR	1392313	Symbol	* ZSTR_VAL		1391293						
ANR	1392314	Symbol	res		1391293						
ANR	1392315	Symbol	errno		1391293						
ANR	1392316	Symbol	EG		1391293						
ANR	1392317	Symbol	NULL		1391293						
ANR	1392318	Symbol	IS_SLASH		1391293						
ANR	1392319	Symbol	cwd_str		1391293						
ANR	1392320	Symbol	* key_length		1391293						
ANR	1392321	Symbol	cwd_check		1391293						
ANR	1392322	Symbol	zend_string_copy		1391293						
ANR	1392323	Symbol	ZCG ( accel_directives ) . use_cwd		1391293						
ANR	1392324	Symbol	cwd_key_len		1391293						
ANR	1392325	Symbol	str		1391293						
ANR	1392326	Symbol	IS_ABSOLUTE_PATH		1391293						
ANR	1392327	Symbol	parent_script		1391293						
ANR	1392328	Symbol	ZCG		1391293						
ANR	1392329	Symbol	accel_new_interned_string		1391293						
ANR	1392330	Symbol	include_path_check		1391293						
ANR	1392331	Symbol	include_path_key_len		1391293						
ANR	1392332	Symbol	UNEXPECTED		1391293						
ANR	1392333	Symbol	is_stream_path		1391293						
ANR	1392334	Symbol	include_path		1391293						
ANR	1392335	Symbol	cwd_key		1391293						
ANR	1392336	Symbol	key_length		1391293						
ANR	1392337	Symbol	include_path_key		1391293						
ANR	1392338	Symbol	ACCEL_LOG_INFO		1391293						
ANR	1392339	Symbol	* path_length		1391293						
ANR	1392340	Symbol	interned_strings_start		1391293						
ANR	1392341	Symbol	key		1391293						
ANR	1392342	Symbol	key_len		1391293						
ANR	1392343	Symbol	is_cacheable_stream_path		1391293						
ANR	1392344	Symbol	ZSTR_VAL		1391293						
ANR	1392345	Symbol	accelerator_enabled		1391293						
ANR	1392346	Symbol	cwd		1391293						
ANR	1392347	Symbol	buf		1391293						
ANR	1392348	Symbol	* key_len		1391293						
ANR	1392349	Symbol	ZSTR_LEN		1391293						
ANR	1392350	Symbol	counted		1391293						
ANR	1392351	Symbol	accel_directives		1391293						
ANR	1392352	Symbol	EXPECTED		1391293						
ANR	1392353	Function	zend_accel_invalidate	1073:0:29739:31308							
ANR	1392354	FunctionDef	"zend_accel_invalidate (const char * filename , int filename_len , zend_bool force)"		1392353	0					
ANR	1392355	CompoundStatement		1074:0:29822:31308	1392353	0					
ANR	1392356	IdentifierDeclStatement	zend_string * realpath ;	1075:1:29825:29846	1392353	0	True				
ANR	1392357	IdentifierDecl	* realpath		1392353	0					
ANR	1392358	IdentifierDeclType	zend_string *		1392353	0					
ANR	1392359	Identifier	realpath		1392353	1					
ANR	1392360	IdentifierDeclStatement	zend_persistent_script * persistent_script ;	1076:1:29849:29890	1392353	1	True				
ANR	1392361	IdentifierDecl	* persistent_script		1392353	0					
ANR	1392362	IdentifierDeclType	zend_persistent_script *		1392353	0					
ANR	1392363	Identifier	persistent_script		1392353	1					
ANR	1392364	IfStatement	if ( ! ZCG ( enabled ) || ! accel_startup_ok || ! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS )		1392353	2					
ANR	1392365	Condition	! ZCG ( enabled ) || ! accel_startup_ok || ! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS	1078:5:29898:30003	1392353	0	True				
ANR	1392366	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok || ! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS		1392353	0		||			
ANR	1392367	UnaryOperationExpression	! ZCG ( enabled )		1392353	0					
ANR	1392368	UnaryOperator	!		1392353	0					
ANR	1392369	CallExpression	ZCG ( enabled )		1392353	1					
ANR	1392370	Callee	ZCG		1392353	0					
ANR	1392371	Identifier	ZCG		1392353	0					
ANR	1392372	ArgumentList	enabled		1392353	1					
ANR	1392373	Argument	enabled		1392353	0					
ANR	1392374	Identifier	enabled		1392353	0					
ANR	1392375	OrExpression	! accel_startup_ok || ! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS		1392353	1		||			
ANR	1392376	UnaryOperationExpression	! accel_startup_ok		1392353	0					
ANR	1392377	UnaryOperator	!		1392353	0					
ANR	1392378	Identifier	accel_startup_ok		1392353	1					
ANR	1392379	OrExpression	! ZCSG ( accelerator_enabled ) || accelerator_shm_read_lock ( ) != SUCCESS		1392353	1		||			
ANR	1392380	UnaryOperationExpression	! ZCSG ( accelerator_enabled )		1392353	0					
ANR	1392381	UnaryOperator	!		1392353	0					
ANR	1392382	CallExpression	ZCSG ( accelerator_enabled )		1392353	1					
ANR	1392383	Callee	ZCSG		1392353	0					
ANR	1392384	Identifier	ZCSG		1392353	0					
ANR	1392385	ArgumentList	accelerator_enabled		1392353	1					
ANR	1392386	Argument	accelerator_enabled		1392353	0					
ANR	1392387	Identifier	accelerator_enabled		1392353	0					
ANR	1392388	EqualityExpression	accelerator_shm_read_lock ( ) != SUCCESS		1392353	1		!=			
ANR	1392389	CallExpression	accelerator_shm_read_lock ( )		1392353	0					
ANR	1392390	Callee	accelerator_shm_read_lock		1392353	0					
ANR	1392391	Identifier	accelerator_shm_read_lock		1392353	0					
ANR	1392392	ArgumentList			1392353	1					
ANR	1392393	Identifier	SUCCESS		1392353	1					
ANR	1392394	CompoundStatement		5:113:183:183	1392353	1					
ANR	1392395	ReturnStatement	return FAILURE ;	1079:2:30010:30024	1392353	0	True				
ANR	1392396	Identifier	FAILURE		1392353	0					
ANR	1392397	ExpressionStatement	"realpath = accelerator_orig_zend_resolve_path ( filename , filename_len )"	1082:1:30031:30100	1392353	3	True				
ANR	1392398	AssignmentExpression	"realpath = accelerator_orig_zend_resolve_path ( filename , filename_len )"		1392353	0		=			
ANR	1392399	Identifier	realpath		1392353	0					
ANR	1392400	CallExpression	"accelerator_orig_zend_resolve_path ( filename , filename_len )"		1392353	1					
ANR	1392401	Callee	accelerator_orig_zend_resolve_path		1392353	0					
ANR	1392402	Identifier	accelerator_orig_zend_resolve_path		1392353	0					
ANR	1392403	ArgumentList	filename		1392353	1					
ANR	1392404	Argument	filename		1392353	0					
ANR	1392405	Identifier	filename		1392353	0					
ANR	1392406	Argument	filename_len		1392353	1					
ANR	1392407	Identifier	filename_len		1392353	0					
ANR	1392408	IfStatement	if ( ! realpath )		1392353	4					
ANR	1392409	Condition	! realpath	1084:5:30108:30116	1392353	0	True				
ANR	1392410	UnaryOperationExpression	! realpath		1392353	0					
ANR	1392411	UnaryOperator	!		1392353	0					
ANR	1392412	Identifier	realpath		1392353	1					
ANR	1392413	CompoundStatement		11:16:296:296	1392353	1					
ANR	1392414	ReturnStatement	return FAILURE ;	1085:2:30123:30137	1392353	0	True				
ANR	1392415	Identifier	FAILURE		1392353	0					
ANR	1392416	IfStatement	if ( ZCG ( accel_directives ) . file_cache )		1392353	5					
ANR	1392417	Condition	ZCG ( accel_directives ) . file_cache	1089:5:30179:30210	1392353	0	True				
ANR	1392418	MemberAccess	ZCG ( accel_directives ) . file_cache		1392353	0					
ANR	1392419	CallExpression	ZCG ( accel_directives )		1392353	0					
ANR	1392420	Callee	ZCG		1392353	0					
ANR	1392421	Identifier	ZCG		1392353	0					
ANR	1392422	ArgumentList	accel_directives		1392353	1					
ANR	1392423	Argument	accel_directives		1392353	0					
ANR	1392424	Identifier	accel_directives		1392353	0					
ANR	1392425	Identifier	file_cache		1392353	1					
ANR	1392426	CompoundStatement		16:39:390:390	1392353	1					
ANR	1392427	ExpressionStatement	zend_file_cache_invalidate ( realpath )	1090:2:30217:30253	1392353	0	True				
ANR	1392428	CallExpression	zend_file_cache_invalidate ( realpath )		1392353	0					
ANR	1392429	Callee	zend_file_cache_invalidate		1392353	0					
ANR	1392430	Identifier	zend_file_cache_invalidate		1392353	0					
ANR	1392431	ArgumentList	realpath		1392353	1					
ANR	1392432	Argument	realpath		1392353	0					
ANR	1392433	Identifier	realpath		1392353	0					
ANR	1392434	ExpressionStatement	"persistent_script = zend_accel_hash_find ( & ZCSG ( hash ) , realpath )"	1094:1:30267:30330	1392353	6	True				
ANR	1392435	AssignmentExpression	"persistent_script = zend_accel_hash_find ( & ZCSG ( hash ) , realpath )"		1392353	0		=			
ANR	1392436	Identifier	persistent_script		1392353	0					
ANR	1392437	CallExpression	"zend_accel_hash_find ( & ZCSG ( hash ) , realpath )"		1392353	1					
ANR	1392438	Callee	zend_accel_hash_find		1392353	0					
ANR	1392439	Identifier	zend_accel_hash_find		1392353	0					
ANR	1392440	ArgumentList	& ZCSG ( hash )		1392353	1					
ANR	1392441	Argument	& ZCSG ( hash )		1392353	0					
ANR	1392442	UnaryOperationExpression	& ZCSG ( hash )		1392353	0					
ANR	1392443	UnaryOperator	&		1392353	0					
ANR	1392444	CallExpression	ZCSG ( hash )		1392353	1					
ANR	1392445	Callee	ZCSG		1392353	0					
ANR	1392446	Identifier	ZCSG		1392353	0					
ANR	1392447	ArgumentList	hash		1392353	1					
ANR	1392448	Argument	hash		1392353	0					
ANR	1392449	Identifier	hash		1392353	0					
ANR	1392450	Argument	realpath		1392353	1					
ANR	1392451	Identifier	realpath		1392353	0					
ANR	1392452	IfStatement	if ( persistent_script && ! persistent_script -> corrupted )		1392353	7					
ANR	1392453	Condition	persistent_script && ! persistent_script -> corrupted	1095:5:30337:30386	1392353	0	True				
ANR	1392454	AndExpression	persistent_script && ! persistent_script -> corrupted		1392353	0		&&			
ANR	1392455	Identifier	persistent_script		1392353	0					
ANR	1392456	UnaryOperationExpression	! persistent_script -> corrupted		1392353	1					
ANR	1392457	UnaryOperator	!		1392353	0					
ANR	1392458	PtrMemberAccess	persistent_script -> corrupted		1392353	1					
ANR	1392459	Identifier	persistent_script		1392353	0					
ANR	1392460	Identifier	corrupted		1392353	1					
ANR	1392461	CompoundStatement		23:2:570:598	1392353	1					
ANR	1392462	IdentifierDeclStatement	zend_file_handle file_handle ;	1096:2:30393:30421	1392353	0	True				
ANR	1392463	IdentifierDecl	file_handle		1392353	0					
ANR	1392464	IdentifierDeclType	zend_file_handle		1392353	0					
ANR	1392465	Identifier	file_handle		1392353	1					
ANR	1392466	ExpressionStatement	file_handle . type = ZEND_HANDLE_FILENAME	1098:2:30426:30465	1392353	1	True				
ANR	1392467	AssignmentExpression	file_handle . type = ZEND_HANDLE_FILENAME		1392353	0		=			
ANR	1392468	MemberAccess	file_handle . type		1392353	0					
ANR	1392469	Identifier	file_handle		1392353	0					
ANR	1392470	Identifier	type		1392353	1					
ANR	1392471	Identifier	ZEND_HANDLE_FILENAME		1392353	1					
ANR	1392472	ExpressionStatement	file_handle . filename = ZSTR_VAL ( realpath )	1099:2:30469:30510	1392353	2	True				
ANR	1392473	AssignmentExpression	file_handle . filename = ZSTR_VAL ( realpath )		1392353	0		=			
ANR	1392474	MemberAccess	file_handle . filename		1392353	0					
ANR	1392475	Identifier	file_handle		1392353	0					
ANR	1392476	Identifier	filename		1392353	1					
ANR	1392477	CallExpression	ZSTR_VAL ( realpath )		1392353	1					
ANR	1392478	Callee	ZSTR_VAL		1392353	0					
ANR	1392479	Identifier	ZSTR_VAL		1392353	0					
ANR	1392480	ArgumentList	realpath		1392353	1					
ANR	1392481	Argument	realpath		1392353	0					
ANR	1392482	Identifier	realpath		1392353	0					
ANR	1392483	ExpressionStatement	file_handle . opened_path = realpath	1100:2:30514:30548	1392353	3	True				
ANR	1392484	AssignmentExpression	file_handle . opened_path = realpath		1392353	0		=			
ANR	1392485	MemberAccess	file_handle . opened_path		1392353	0					
ANR	1392486	Identifier	file_handle		1392353	0					
ANR	1392487	Identifier	opened_path		1392353	1					
ANR	1392488	Identifier	realpath		1392353	1					
ANR	1392489	IfStatement	"if ( force || ! ZCG ( accel_directives ) . validate_timestamps || do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE )"		1392353	4					
ANR	1392490	Condition	"force || ! ZCG ( accel_directives ) . validate_timestamps || do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE"	1102:6:30557:30683	1392353	0	True				
ANR	1392491	OrExpression	"force || ! ZCG ( accel_directives ) . validate_timestamps || do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE"		1392353	0		||			
ANR	1392492	Identifier	force		1392353	0					
ANR	1392493	OrExpression	"! ZCG ( accel_directives ) . validate_timestamps || do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE"		1392353	1		||			
ANR	1392494	UnaryOperationExpression	! ZCG ( accel_directives ) . validate_timestamps		1392353	0					
ANR	1392495	UnaryOperator	!		1392353	0					
ANR	1392496	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		1392353	1					
ANR	1392497	CallExpression	ZCG ( accel_directives )		1392353	0					
ANR	1392498	Callee	ZCG		1392353	0					
ANR	1392499	Identifier	ZCG		1392353	0					
ANR	1392500	ArgumentList	accel_directives		1392353	1					
ANR	1392501	Argument	accel_directives		1392353	0					
ANR	1392502	Identifier	accel_directives		1392353	0					
ANR	1392503	Identifier	validate_timestamps		1392353	1					
ANR	1392504	EqualityExpression	"do_validate_timestamps ( persistent_script , & file_handle ) == FAILURE"		1392353	1		==			
ANR	1392505	CallExpression	"do_validate_timestamps ( persistent_script , & file_handle )"		1392353	0					
ANR	1392506	Callee	do_validate_timestamps		1392353	0					
ANR	1392507	Identifier	do_validate_timestamps		1392353	0					
ANR	1392508	ArgumentList	persistent_script		1392353	1					
ANR	1392509	Argument	persistent_script		1392353	0					
ANR	1392510	Identifier	persistent_script		1392353	0					
ANR	1392511	Argument	& file_handle		1392353	1					
ANR	1392512	UnaryOperationExpression	& file_handle		1392353	0					
ANR	1392513	UnaryOperator	&		1392353	0					
ANR	1392514	Identifier	file_handle		1392353	1					
ANR	1392515	Identifier	FAILURE		1392353	1					
ANR	1392516	CompoundStatement		31:71:863:863	1392353	1					
ANR	1392517	ExpressionStatement	SHM_UNPROTECT ( )	1105:3:30691:30706	1392353	0	True				
ANR	1392518	CallExpression	SHM_UNPROTECT ( )		1392353	0					
ANR	1392519	Callee	SHM_UNPROTECT		1392353	0					
ANR	1392520	Identifier	SHM_UNPROTECT		1392353	0					
ANR	1392521	ArgumentList			1392353	1					
ANR	1392522	ExpressionStatement	zend_shared_alloc_lock ( )	1106:3:30711:30735	1392353	1	True				
ANR	1392523	CallExpression	zend_shared_alloc_lock ( )		1392353	0					
ANR	1392524	Callee	zend_shared_alloc_lock		1392353	0					
ANR	1392525	Identifier	zend_shared_alloc_lock		1392353	0					
ANR	1392526	ArgumentList			1392353	1					
ANR	1392527	IfStatement	if ( ! persistent_script -> corrupted )		1392353	2					
ANR	1392528	Condition	! persistent_script -> corrupted	1107:7:30744:30772	1392353	0	True				
ANR	1392529	UnaryOperationExpression	! persistent_script -> corrupted		1392353	0					
ANR	1392530	UnaryOperator	!		1392353	0					
ANR	1392531	PtrMemberAccess	persistent_script -> corrupted		1392353	1					
ANR	1392532	Identifier	persistent_script		1392353	0					
ANR	1392533	Identifier	corrupted		1392353	1					
ANR	1392534	CompoundStatement		34:38:952:952	1392353	1					
ANR	1392535	ExpressionStatement	persistent_script -> corrupted = 1	1108:4:30781:30813	1392353	0	True				
ANR	1392536	AssignmentExpression	persistent_script -> corrupted = 1		1392353	0		=			
ANR	1392537	PtrMemberAccess	persistent_script -> corrupted		1392353	0					
ANR	1392538	Identifier	persistent_script		1392353	0					
ANR	1392539	Identifier	corrupted		1392353	1					
ANR	1392540	PrimaryExpression	1		1392353	1					
ANR	1392541	ExpressionStatement	persistent_script -> timestamp = 0	1109:4:30819:30851	1392353	1	True				
ANR	1392542	AssignmentExpression	persistent_script -> timestamp = 0		1392353	0		=			
ANR	1392543	PtrMemberAccess	persistent_script -> timestamp		1392353	0					
ANR	1392544	Identifier	persistent_script		1392353	0					
ANR	1392545	Identifier	timestamp		1392353	1					
ANR	1392546	PrimaryExpression	0		1392353	1					
ANR	1392547	ExpressionStatement	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption	1110:4:30857:30941	1392353	2	True				
ANR	1392548	AssignmentExpression	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption		1392353	0		+=			
ANR	1392549	CallExpression	ZSMMG ( wasted_shared_memory )		1392353	0					
ANR	1392550	Callee	ZSMMG		1392353	0					
ANR	1392551	Identifier	ZSMMG		1392353	0					
ANR	1392552	ArgumentList	wasted_shared_memory		1392353	1					
ANR	1392553	Argument	wasted_shared_memory		1392353	0					
ANR	1392554	Identifier	wasted_shared_memory		1392353	0					
ANR	1392555	MemberAccess	persistent_script -> dynamic_members . memory_consumption		1392353	1					
ANR	1392556	PtrMemberAccess	persistent_script -> dynamic_members		1392353	0					
ANR	1392557	Identifier	persistent_script		1392353	0					
ANR	1392558	Identifier	dynamic_members		1392353	1					
ANR	1392559	Identifier	memory_consumption		1392353	1					
ANR	1392560	IfStatement	if ( ZSMMG ( memory_exhausted ) )		1392353	3					
ANR	1392561	Condition	ZSMMG ( memory_exhausted )	1111:8:30951:30973	1392353	0	True				
ANR	1392562	CallExpression	ZSMMG ( memory_exhausted )		1392353	0					
ANR	1392563	Callee	ZSMMG		1392353	0					
ANR	1392564	Identifier	ZSMMG		1392353	0					
ANR	1392565	ArgumentList	memory_exhausted		1392353	1					
ANR	1392566	Argument	memory_exhausted		1392353	0					
ANR	1392567	Identifier	memory_exhausted		1392353	0					
ANR	1392568	CompoundStatement		39:5:1160:1278	1392353	1					
ANR	1392569	IdentifierDeclStatement	zend_accel_restart_reason reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM ;	1112:5:30983:31101	1392353	0	True				
ANR	1392570	IdentifierDecl	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		1392353	0					
ANR	1392571	IdentifierDeclType	zend_accel_restart_reason		1392353	0					
ANR	1392572	Identifier	reason		1392353	1					
ANR	1392573	AssignmentExpression	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		1392353	2		=			
ANR	1392574	Identifier	reason		1392353	0					
ANR	1392575	ConditionalExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		1392353	1					
ANR	1392576	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )		1392353	0					
ANR	1392577	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		1392353	0					
ANR	1392578	Callee	zend_accel_hash_is_full		1392353	0					
ANR	1392579	Identifier	zend_accel_hash_is_full		1392353	0					
ANR	1392580	ArgumentList	& ZCSG ( hash )		1392353	1					
ANR	1392581	Argument	& ZCSG ( hash )		1392353	0					
ANR	1392582	UnaryOperationExpression	& ZCSG ( hash )		1392353	0					
ANR	1392583	UnaryOperator	&		1392353	0					
ANR	1392584	CallExpression	ZCSG ( hash )		1392353	1					
ANR	1392585	Callee	ZCSG		1392353	0					
ANR	1392586	Identifier	ZCSG		1392353	0					
ANR	1392587	ArgumentList	hash		1392353	1					
ANR	1392588	Argument	hash		1392353	0					
ANR	1392589	Identifier	hash		1392353	0					
ANR	1392590	Identifier	ACCEL_RESTART_HASH		1392353	1					
ANR	1392591	Identifier	ACCEL_RESTART_OOM		1392353	2					
ANR	1392592	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( reason )	1114:5:31108:31156	1392353	1	True				
ANR	1392593	CallExpression	zend_accel_schedule_restart_if_necessary ( reason )		1392353	0					
ANR	1392594	Callee	zend_accel_schedule_restart_if_necessary		1392353	0					
ANR	1392595	Identifier	zend_accel_schedule_restart_if_necessary		1392353	0					
ANR	1392596	ArgumentList	reason		1392353	1					
ANR	1392597	Argument	reason		1392353	0					
ANR	1392598	Identifier	reason		1392353	0					
ANR	1392599	ExpressionStatement	zend_shared_alloc_unlock ( )	1117:3:31172:31198	1392353	3	True				
ANR	1392600	CallExpression	zend_shared_alloc_unlock ( )		1392353	0					
ANR	1392601	Callee	zend_shared_alloc_unlock		1392353	0					
ANR	1392602	Identifier	zend_shared_alloc_unlock		1392353	0					
ANR	1392603	ArgumentList			1392353	1					
ANR	1392604	ExpressionStatement	SHM_PROTECT ( )	1118:3:31203:31216	1392353	4	True				
ANR	1392605	CallExpression	SHM_PROTECT ( )		1392353	0					
ANR	1392606	Callee	SHM_PROTECT		1392353	0					
ANR	1392607	Identifier	SHM_PROTECT		1392353	0					
ANR	1392608	ArgumentList			1392353	1					
ANR	1392609	ExpressionStatement	accelerator_shm_read_unlock ( )	1122:1:31227:31256	1392353	8	True				
ANR	1392610	CallExpression	accelerator_shm_read_unlock ( )		1392353	0					
ANR	1392611	Callee	accelerator_shm_read_unlock		1392353	0					
ANR	1392612	Identifier	accelerator_shm_read_unlock		1392353	0					
ANR	1392613	ArgumentList			1392353	1					
ANR	1392614	ExpressionStatement	zend_string_release ( realpath )	1123:1:31259:31288	1392353	9	True				
ANR	1392615	CallExpression	zend_string_release ( realpath )		1392353	0					
ANR	1392616	Callee	zend_string_release		1392353	0					
ANR	1392617	Identifier	zend_string_release		1392353	0					
ANR	1392618	ArgumentList	realpath		1392353	1					
ANR	1392619	Argument	realpath		1392353	0					
ANR	1392620	Identifier	realpath		1392353	0					
ANR	1392621	ReturnStatement	return SUCCESS ;	1125:1:31292:31306	1392353	10	True				
ANR	1392622	Identifier	SUCCESS		1392353	0					
ANR	1392623	ReturnType	int		1392353	1					
ANR	1392624	Identifier	zend_accel_invalidate		1392353	2					
ANR	1392625	ParameterList	"const char * filename , int filename_len , zend_bool force"		1392353	3					
ANR	1392626	Parameter	const char * filename	1073:26:29765:29784	1392353	0	True				
ANR	1392627	ParameterType	const char *		1392353	0					
ANR	1392628	Identifier	filename		1392353	1					
ANR	1392629	Parameter	int filename_len	1073:48:29787:29802	1392353	1	True				
ANR	1392630	ParameterType	int		1392353	0					
ANR	1392631	Identifier	filename_len		1392353	1					
ANR	1392632	Parameter	zend_bool force	1073:66:29805:29819	1392353	2	True				
ANR	1392633	ParameterType	zend_bool		1392353	0					
ANR	1392634	Identifier	force		1392353	1					
ANR	1392635	CFGEntryNode	ENTRY		1392353		True				
ANR	1392636	CFGExitNode	EXIT		1392353		True				
ANR	1392637	Symbol	accel_startup_ok		1392353						
ANR	1392638	Symbol	ACCEL_RESTART_HASH		1392353						
ANR	1392639	Symbol	file_handle . opened_path		1392353						
ANR	1392640	Symbol	reason		1392353						
ANR	1392641	Symbol	wasted_shared_memory		1392353						
ANR	1392642	Symbol	realpath		1392353						
ANR	1392643	Symbol	ACCEL_RESTART_OOM		1392353						
ANR	1392644	Symbol	ZCG ( accel_directives ) . validate_timestamps		1392353						
ANR	1392645	Symbol	file_handle . type		1392353						
ANR	1392646	Symbol	accelerator_orig_zend_resolve_path		1392353						
ANR	1392647	Symbol	zend_accel_hash_find		1392353						
ANR	1392648	Symbol	enabled		1392353						
ANR	1392649	Symbol	ZCSG		1392353						
ANR	1392650	Symbol	persistent_script -> timestamp		1392353						
ANR	1392651	Symbol	ZSMMG		1392353						
ANR	1392652	Symbol	filename_len		1392353						
ANR	1392653	Symbol	zend_accel_hash_is_full		1392353						
ANR	1392654	Symbol	& file_handle		1392353						
ANR	1392655	Symbol	persistent_script -> dynamic_members		1392353						
ANR	1392656	Symbol	SUCCESS		1392353						
ANR	1392657	Symbol	memory_exhausted		1392353						
ANR	1392658	Symbol	do_validate_timestamps		1392353						
ANR	1392659	Symbol	persistent_script		1392353						
ANR	1392660	Symbol	FAILURE		1392353						
ANR	1392661	Symbol	* persistent_script		1392353						
ANR	1392662	Symbol	file_handle		1392353						
ANR	1392663	Symbol	persistent_script -> corrupted		1392353						
ANR	1392664	Symbol	file_handle . filename		1392353						
ANR	1392665	Symbol	accelerator_enabled		1392353						
ANR	1392666	Symbol	ZSTR_VAL		1392353						
ANR	1392667	Symbol	persistent_script -> dynamic_members . memory_consumption		1392353						
ANR	1392668	Symbol	& ZCSG		1392353						
ANR	1392669	Symbol	filename		1392353						
ANR	1392670	Symbol	ZEND_HANDLE_FILENAME		1392353						
ANR	1392671	Symbol	accelerator_shm_read_lock		1392353						
ANR	1392672	Symbol	force		1392353						
ANR	1392673	Symbol	accel_directives		1392353						
ANR	1392674	Symbol	ZCG ( accel_directives ) . file_cache		1392353						
ANR	1392675	Symbol	hash		1392353						
ANR	1392676	Symbol	ZCG		1392353						
ANR	1392677	Function	zend_accel_add_key	1129:0:31361:32105							
ANR	1392678	FunctionDef	"zend_accel_add_key (char * key , unsigned int key_length , zend_accel_hash_entry * bucket)"		1392677	0					
ANR	1392679	CompoundStatement		1130:0:31459:32105	1392677	0					
ANR	1392680	IfStatement	"if ( ! zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length ) )"		1392677	0					
ANR	1392681	Condition	"! zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"	1131:5:31466:31520	1392677	0	True				
ANR	1392682	UnaryOperationExpression	"! zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"		1392677	0					
ANR	1392683	UnaryOperator	!		1392677	0					
ANR	1392684	CallExpression	"zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"		1392677	1					
ANR	1392685	Callee	zend_accel_hash_str_find		1392677	0					
ANR	1392686	Identifier	zend_accel_hash_str_find		1392677	0					
ANR	1392687	ArgumentList	& ZCSG ( hash )		1392677	1					
ANR	1392688	Argument	& ZCSG ( hash )		1392677	0					
ANR	1392689	UnaryOperationExpression	& ZCSG ( hash )		1392677	0					
ANR	1392690	UnaryOperator	&		1392677	0					
ANR	1392691	CallExpression	ZCSG ( hash )		1392677	1					
ANR	1392692	Callee	ZCSG		1392677	0					
ANR	1392693	Identifier	ZCSG		1392677	0					
ANR	1392694	ArgumentList	hash		1392677	1					
ANR	1392695	Argument	hash		1392677	0					
ANR	1392696	Identifier	hash		1392677	0					
ANR	1392697	Argument	key		1392677	1					
ANR	1392698	Identifier	key		1392677	0					
ANR	1392699	Argument	key_length		1392677	2					
ANR	1392700	Identifier	key_length		1392677	0					
ANR	1392701	CompoundStatement		2:62:63:63	1392677	1					
ANR	1392702	IfStatement	if ( zend_accel_hash_is_full ( & ZCSG ( hash ) ) )		1392677	0					
ANR	1392703	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )	1132:6:31531:31566	1392677	0	True				
ANR	1392704	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		1392677	0					
ANR	1392705	Callee	zend_accel_hash_is_full		1392677	0					
ANR	1392706	Identifier	zend_accel_hash_is_full		1392677	0					
ANR	1392707	ArgumentList	& ZCSG ( hash )		1392677	1					
ANR	1392708	Argument	& ZCSG ( hash )		1392677	0					
ANR	1392709	UnaryOperationExpression	& ZCSG ( hash )		1392677	0					
ANR	1392710	UnaryOperator	&		1392677	0					
ANR	1392711	CallExpression	ZCSG ( hash )		1392677	1					
ANR	1392712	Callee	ZCSG		1392677	0					
ANR	1392713	Identifier	ZCSG		1392677	0					
ANR	1392714	ArgumentList	hash		1392677	1					
ANR	1392715	Argument	hash		1392677	0					
ANR	1392716	Identifier	hash		1392677	0					
ANR	1392717	CompoundStatement		3:44:109:109	1392677	1					
ANR	1392718	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"	1133:3:31574:31641	1392677	0	True				
ANR	1392719	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"		1392677	0					
ANR	1392720	Callee	zend_accel_error		1392677	0					
ANR	1392721	Identifier	zend_accel_error		1392677	0					
ANR	1392722	ArgumentList	ACCEL_LOG_DEBUG		1392677	1					
ANR	1392723	Argument	ACCEL_LOG_DEBUG		1392677	0					
ANR	1392724	Identifier	ACCEL_LOG_DEBUG		1392677	0					
ANR	1392725	Argument	"""No more entries in hash table!"""		1392677	1					
ANR	1392726	PrimaryExpression	"""No more entries in hash table!"""		1392677	0					
ANR	1392727	ExpressionStatement	ZSMMG ( memory_exhausted ) = 1	1134:3:31646:31673	1392677	1	True				
ANR	1392728	AssignmentExpression	ZSMMG ( memory_exhausted ) = 1		1392677	0		=			
ANR	1392729	CallExpression	ZSMMG ( memory_exhausted )		1392677	0					
ANR	1392730	Callee	ZSMMG		1392677	0					
ANR	1392731	Identifier	ZSMMG		1392677	0					
ANR	1392732	ArgumentList	memory_exhausted		1392677	1					
ANR	1392733	Argument	memory_exhausted		1392677	0					
ANR	1392734	Identifier	memory_exhausted		1392677	0					
ANR	1392735	PrimaryExpression	1		1392677	1					
ANR	1392736	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )	1135:3:31678:31738	1392677	2	True				
ANR	1392737	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )		1392677	0					
ANR	1392738	Callee	zend_accel_schedule_restart_if_necessary		1392677	0					
ANR	1392739	Identifier	zend_accel_schedule_restart_if_necessary		1392677	0					
ANR	1392740	ArgumentList	ACCEL_RESTART_HASH		1392677	1					
ANR	1392741	Argument	ACCEL_RESTART_HASH		1392677	0					
ANR	1392742	Identifier	ACCEL_RESTART_HASH		1392677	0					
ANR	1392743	ElseStatement	else		1392677	0					
ANR	1392744	CompoundStatement		8:3:294:343	1392677	0					
ANR	1392745	IdentifierDeclStatement	char * new_key = zend_shared_alloc ( key_length + 1 ) ;	1137:3:31754:31803	1392677	0	True				
ANR	1392746	IdentifierDecl	* new_key = zend_shared_alloc ( key_length + 1 )		1392677	0					
ANR	1392747	IdentifierDeclType	char *		1392677	0					
ANR	1392748	Identifier	new_key		1392677	1					
ANR	1392749	AssignmentExpression	* new_key = zend_shared_alloc ( key_length + 1 )		1392677	2		=			
ANR	1392750	Identifier	new_key		1392677	0					
ANR	1392751	CallExpression	zend_shared_alloc ( key_length + 1 )		1392677	1					
ANR	1392752	Callee	zend_shared_alloc		1392677	0					
ANR	1392753	Identifier	zend_shared_alloc		1392677	0					
ANR	1392754	ArgumentList	key_length + 1		1392677	1					
ANR	1392755	Argument	key_length + 1		1392677	0					
ANR	1392756	AdditiveExpression	key_length + 1		1392677	0		+			
ANR	1392757	Identifier	key_length		1392677	0					
ANR	1392758	PrimaryExpression	1		1392677	1					
ANR	1392759	IfStatement	if ( new_key )		1392677	1					
ANR	1392760	Condition	new_key	1138:7:31812:31818	1392677	0	True				
ANR	1392761	Identifier	new_key		1392677	0					
ANR	1392762	CompoundStatement		9:16:361:361	1392677	1					
ANR	1392763	ExpressionStatement	"memcpy ( new_key , key , key_length + 1 )"	1139:4:31827:31863	1392677	0	True				
ANR	1392764	CallExpression	"memcpy ( new_key , key , key_length + 1 )"		1392677	0					
ANR	1392765	Callee	memcpy		1392677	0					
ANR	1392766	Identifier	memcpy		1392677	0					
ANR	1392767	ArgumentList	new_key		1392677	1					
ANR	1392768	Argument	new_key		1392677	0					
ANR	1392769	Identifier	new_key		1392677	0					
ANR	1392770	Argument	key		1392677	1					
ANR	1392771	Identifier	key		1392677	0					
ANR	1392772	Argument	key_length + 1		1392677	2					
ANR	1392773	AdditiveExpression	key_length + 1		1392677	0		+			
ANR	1392774	Identifier	key_length		1392677	0					
ANR	1392775	PrimaryExpression	1		1392677	1					
ANR	1392776	IfStatement	"if ( zend_accel_hash_update ( & ZCSG ( hash ) , new_key , key_length , 1 , bucket ) )"		1392677	1					
ANR	1392777	Condition	"zend_accel_hash_update ( & ZCSG ( hash ) , new_key , key_length , 1 , bucket )"	1140:8:31873:31939	1392677	0	True				
ANR	1392778	CallExpression	"zend_accel_hash_update ( & ZCSG ( hash ) , new_key , key_length , 1 , bucket )"		1392677	0					
ANR	1392779	Callee	zend_accel_hash_update		1392677	0					
ANR	1392780	Identifier	zend_accel_hash_update		1392677	0					
ANR	1392781	ArgumentList	& ZCSG ( hash )		1392677	1					
ANR	1392782	Argument	& ZCSG ( hash )		1392677	0					
ANR	1392783	UnaryOperationExpression	& ZCSG ( hash )		1392677	0					
ANR	1392784	UnaryOperator	&		1392677	0					
ANR	1392785	CallExpression	ZCSG ( hash )		1392677	1					
ANR	1392786	Callee	ZCSG		1392677	0					
ANR	1392787	Identifier	ZCSG		1392677	0					
ANR	1392788	ArgumentList	hash		1392677	1					
ANR	1392789	Argument	hash		1392677	0					
ANR	1392790	Identifier	hash		1392677	0					
ANR	1392791	Argument	new_key		1392677	1					
ANR	1392792	Identifier	new_key		1392677	0					
ANR	1392793	Argument	key_length		1392677	2					
ANR	1392794	Identifier	key_length		1392677	0					
ANR	1392795	Argument	1		1392677	3					
ANR	1392796	PrimaryExpression	1		1392677	0					
ANR	1392797	Argument	bucket		1392677	4					
ANR	1392798	Identifier	bucket		1392677	0					
ANR	1392799	CompoundStatement		11:77:482:482	1392677	1					
ANR	1392800	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""Added key '%s'"" , new_key )"	1141:5:31949:32008	1392677	0	True				
ANR	1392801	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""Added key '%s'"" , new_key )"		1392677	0					
ANR	1392802	Callee	zend_accel_error		1392677	0					
ANR	1392803	Identifier	zend_accel_error		1392677	0					
ANR	1392804	ArgumentList	ACCEL_LOG_INFO		1392677	1					
ANR	1392805	Argument	ACCEL_LOG_INFO		1392677	0					
ANR	1392806	Identifier	ACCEL_LOG_INFO		1392677	0					
ANR	1392807	Argument	"""Added key '%s'"""		1392677	1					
ANR	1392808	PrimaryExpression	"""Added key '%s'"""		1392677	0					
ANR	1392809	Argument	new_key		1392677	2					
ANR	1392810	Identifier	new_key		1392677	0					
ANR	1392811	ElseStatement	else		1392677	0					
ANR	1392812	CompoundStatement		14:10:566:566	1392677	0					
ANR	1392813	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_OOM )	1144:4:32032:32091	1392677	0	True				
ANR	1392814	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_OOM )		1392677	0					
ANR	1392815	Callee	zend_accel_schedule_restart_if_necessary		1392677	0					
ANR	1392816	Identifier	zend_accel_schedule_restart_if_necessary		1392677	0					
ANR	1392817	ArgumentList	ACCEL_RESTART_OOM		1392677	1					
ANR	1392818	Argument	ACCEL_RESTART_OOM		1392677	0					
ANR	1392819	Identifier	ACCEL_RESTART_OOM		1392677	0					
ANR	1392820	ReturnType	static void		1392677	1					
ANR	1392821	Identifier	zend_accel_add_key		1392677	2					
ANR	1392822	ParameterList	"char * key , unsigned int key_length , zend_accel_hash_entry * bucket"		1392677	3					
ANR	1392823	Parameter	char * key	1129:31:31392:31400	1392677	0	True				
ANR	1392824	ParameterType	char *		1392677	0					
ANR	1392825	Identifier	key		1392677	1					
ANR	1392826	Parameter	unsigned int key_length	1129:42:31403:31425	1392677	1	True				
ANR	1392827	ParameterType	unsigned int		1392677	0					
ANR	1392828	Identifier	key_length		1392677	1					
ANR	1392829	Parameter	zend_accel_hash_entry * bucket	1129:67:31428:31456	1392677	2	True				
ANR	1392830	ParameterType	zend_accel_hash_entry *		1392677	0					
ANR	1392831	Identifier	bucket		1392677	1					
ANR	1392832	CFGEntryNode	ENTRY		1392677		True				
ANR	1392833	CFGExitNode	EXIT		1392677		True				
ANR	1392834	Symbol	ACCEL_RESTART_HASH		1392677						
ANR	1392835	Symbol	new_key		1392677						
ANR	1392836	Symbol	zend_shared_alloc		1392677						
ANR	1392837	Symbol	zend_accel_hash_update		1392677						
ANR	1392838	Symbol	ACCEL_RESTART_OOM		1392677						
ANR	1392839	Symbol	memory_exhausted		1392677						
ANR	1392840	Symbol	bucket		1392677						
ANR	1392841	Symbol	& ZCSG		1392677						
ANR	1392842	Symbol	ZSMMG		1392677						
ANR	1392843	Symbol	ACCEL_LOG_DEBUG		1392677						
ANR	1392844	Symbol	key_length		1392677						
ANR	1392845	Symbol	ACCEL_LOG_INFO		1392677						
ANR	1392846	Symbol	zend_accel_hash_str_find		1392677						
ANR	1392847	Symbol	key		1392677						
ANR	1392848	Symbol	hash		1392677						
ANR	1392849	Symbol	zend_accel_hash_is_full		1392677						
ANR	1392850	Function	cache_script_in_file_cache	1151:0:32139:34060							
ANR	1392851	FunctionDef	"cache_script_in_file_cache (zend_persistent_script * new_persistent_script , int * from_shared_memory)"		1392850	0					
ANR	1392852	CompoundStatement		1152:0:32269:34060	1392850	0					
ANR	1392853	IdentifierDeclStatement	uint memory_used ;	1153:1:32272:32288	1392850	0	True				
ANR	1392854	IdentifierDecl	memory_used		1392850	0					
ANR	1392855	IdentifierDeclType	uint		1392850	0					
ANR	1392856	Identifier	memory_used		1392850	1					
ANR	1392857	IfStatement	if ( ! zend_accel_script_persistable ( new_persistent_script ) )		1392850	1					
ANR	1392858	Condition	! zend_accel_script_persistable ( new_persistent_script )	1156:5:32350:32402	1392850	0	True				
ANR	1392859	UnaryOperationExpression	! zend_accel_script_persistable ( new_persistent_script )		1392850	0					
ANR	1392860	UnaryOperator	!		1392850	0					
ANR	1392861	CallExpression	zend_accel_script_persistable ( new_persistent_script )		1392850	1					
ANR	1392862	Callee	zend_accel_script_persistable		1392850	0					
ANR	1392863	Identifier	zend_accel_script_persistable		1392850	0					
ANR	1392864	ArgumentList	new_persistent_script		1392850	1					
ANR	1392865	Argument	new_persistent_script		1392850	0					
ANR	1392866	Identifier	new_persistent_script		1392850	0					
ANR	1392867	CompoundStatement		5:60:135:135	1392850	1					
ANR	1392868	ReturnStatement	return new_persistent_script ;	1157:2:32409:32437	1392850	0	True				
ANR	1392869	Identifier	new_persistent_script		1392850	0					
ANR	1392870	IfStatement	if ( ! zend_accel_script_optimize ( new_persistent_script ) )		1392850	2					
ANR	1392871	Condition	! zend_accel_script_optimize ( new_persistent_script )	1160:5:32448:32497	1392850	0	True				
ANR	1392872	UnaryOperationExpression	! zend_accel_script_optimize ( new_persistent_script )		1392850	0					
ANR	1392873	UnaryOperator	!		1392850	0					
ANR	1392874	CallExpression	zend_accel_script_optimize ( new_persistent_script )		1392850	1					
ANR	1392875	Callee	zend_accel_script_optimize		1392850	0					
ANR	1392876	Identifier	zend_accel_script_optimize		1392850	0					
ANR	1392877	ArgumentList	new_persistent_script		1392850	1					
ANR	1392878	Argument	new_persistent_script		1392850	0					
ANR	1392879	Identifier	new_persistent_script		1392850	0					
ANR	1392880	CompoundStatement		9:57:230:230	1392850	1					
ANR	1392881	ReturnStatement	return new_persistent_script ;	1161:2:32504:32532	1392850	0	True				
ANR	1392882	Identifier	new_persistent_script		1392850	0					
ANR	1392883	ExpressionStatement	zend_shared_alloc_init_xlat_table ( )	1164:1:32539:32574	1392850	3	True				
ANR	1392884	CallExpression	zend_shared_alloc_init_xlat_table ( )		1392850	0					
ANR	1392885	Callee	zend_shared_alloc_init_xlat_table		1392850	0					
ANR	1392886	Identifier	zend_shared_alloc_init_xlat_table		1392850	0					
ANR	1392887	ArgumentList			1392850	1					
ANR	1392888	ExpressionStatement	"memory_used = zend_accel_script_persist_calc ( new_persistent_script , NULL , 0 )"	1167:1:32620:32696	1392850	4	True				
ANR	1392889	AssignmentExpression	"memory_used = zend_accel_script_persist_calc ( new_persistent_script , NULL , 0 )"		1392850	0		=			
ANR	1392890	Identifier	memory_used		1392850	0					
ANR	1392891	CallExpression	"zend_accel_script_persist_calc ( new_persistent_script , NULL , 0 )"		1392850	1					
ANR	1392892	Callee	zend_accel_script_persist_calc		1392850	0					
ANR	1392893	Identifier	zend_accel_script_persist_calc		1392850	0					
ANR	1392894	ArgumentList	new_persistent_script		1392850	1					
ANR	1392895	Argument	new_persistent_script		1392850	0					
ANR	1392896	Identifier	new_persistent_script		1392850	0					
ANR	1392897	Argument	NULL		1392850	1					
ANR	1392898	Identifier	NULL		1392850	0					
ANR	1392899	Argument	0		1392850	2					
ANR	1392900	PrimaryExpression	0		1392850	0					
ANR	1392901	ExpressionStatement	"ZCG ( mem ) = zend_arena_alloc ( & CG ( arena ) , memory_used + 64 )"	1172:1:32778:32835	1392850	5	True				
ANR	1392902	AssignmentExpression	"ZCG ( mem ) = zend_arena_alloc ( & CG ( arena ) , memory_used + 64 )"		1392850	0		=			
ANR	1392903	CallExpression	ZCG ( mem )		1392850	0					
ANR	1392904	Callee	ZCG		1392850	0					
ANR	1392905	Identifier	ZCG		1392850	0					
ANR	1392906	ArgumentList	mem		1392850	1					
ANR	1392907	Argument	mem		1392850	0					
ANR	1392908	Identifier	mem		1392850	0					
ANR	1392909	CallExpression	"zend_arena_alloc ( & CG ( arena ) , memory_used + 64 )"		1392850	1					
ANR	1392910	Callee	zend_arena_alloc		1392850	0					
ANR	1392911	Identifier	zend_arena_alloc		1392850	0					
ANR	1392912	ArgumentList	& CG ( arena )		1392850	1					
ANR	1392913	Argument	& CG ( arena )		1392850	0					
ANR	1392914	UnaryOperationExpression	& CG ( arena )		1392850	0					
ANR	1392915	UnaryOperator	&		1392850	0					
ANR	1392916	CallExpression	CG ( arena )		1392850	1					
ANR	1392917	Callee	CG		1392850	0					
ANR	1392918	Identifier	CG		1392850	0					
ANR	1392919	ArgumentList	arena		1392850	1					
ANR	1392920	Argument	arena		1392850	0					
ANR	1392921	Identifier	arena		1392850	0					
ANR	1392922	Argument	memory_used + 64		1392850	1					
ANR	1392923	AdditiveExpression	memory_used + 64		1392850	0		+			
ANR	1392924	Identifier	memory_used		1392850	0					
ANR	1392925	PrimaryExpression	64		1392850	1					
ANR	1392926	ExpressionStatement	ZCG ( mem ) = ( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )	1173:1:32838:32897	1392850	6	True				
ANR	1392927	AssignmentExpression	ZCG ( mem ) = ( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )		1392850	0		=			
ANR	1392928	CallExpression	ZCG ( mem )		1392850	0					
ANR	1392929	Callee	ZCG		1392850	0					
ANR	1392930	Identifier	ZCG		1392850	0					
ANR	1392931	ArgumentList	mem		1392850	1					
ANR	1392932	Argument	mem		1392850	0					
ANR	1392933	Identifier	mem		1392850	0					
ANR	1392934	CastExpression	( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )		1392850	1					
ANR	1392935	CastTarget	void *		1392850	0					
ANR	1392936	BitAndExpression	( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L		1392850	1		&			
ANR	1392937	AdditiveExpression	( zend_uintptr_t ) ZCG ( mem ) + 63L		1392850	0		+			
ANR	1392938	CastExpression	( zend_uintptr_t ) ZCG ( mem )		1392850	0					
ANR	1392939	CastTarget	zend_uintptr_t		1392850	0					
ANR	1392940	CallExpression	ZCG ( mem )		1392850	1					
ANR	1392941	Callee	ZCG		1392850	0					
ANR	1392942	Identifier	ZCG		1392850	0					
ANR	1392943	ArgumentList	mem		1392850	1					
ANR	1392944	Argument	mem		1392850	0					
ANR	1392945	Identifier	mem		1392850	0					
ANR	1392946	PrimaryExpression	63L		1392850	1					
ANR	1392947	Identifier	~63L		1392850	1					
ANR	1392948	ExpressionStatement	"new_persistent_script = zend_accel_script_persist ( new_persistent_script , NULL , 0 )"	1179:1:33000:33081	1392850	7	True				
ANR	1392949	AssignmentExpression	"new_persistent_script = zend_accel_script_persist ( new_persistent_script , NULL , 0 )"		1392850	0		=			
ANR	1392950	Identifier	new_persistent_script		1392850	0					
ANR	1392951	CallExpression	"zend_accel_script_persist ( new_persistent_script , NULL , 0 )"		1392850	1					
ANR	1392952	Callee	zend_accel_script_persist		1392850	0					
ANR	1392953	Identifier	zend_accel_script_persist		1392850	0					
ANR	1392954	ArgumentList	new_persistent_script		1392850	1					
ANR	1392955	Argument	new_persistent_script		1392850	0					
ANR	1392956	Identifier	new_persistent_script		1392850	0					
ANR	1392957	Argument	NULL		1392850	1					
ANR	1392958	Identifier	NULL		1392850	0					
ANR	1392959	Argument	0		1392850	2					
ANR	1392960	PrimaryExpression	0		1392850	0					
ANR	1392961	ExpressionStatement	zend_shared_alloc_destroy_xlat_table ( )	1181:1:33085:33123	1392850	8	True				
ANR	1392962	CallExpression	zend_shared_alloc_destroy_xlat_table ( )		1392850	0					
ANR	1392963	Callee	zend_shared_alloc_destroy_xlat_table		1392850	0					
ANR	1392964	Identifier	zend_shared_alloc_destroy_xlat_table		1392850	0					
ANR	1392965	ArgumentList			1392850	1					
ANR	1392966	ExpressionStatement	"new_persistent_script -> is_phar = new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"	1183:1:33127:33323	1392850	9	True				
ANR	1392967	AssignmentExpression	"new_persistent_script -> is_phar = new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1392850	0		=			
ANR	1392968	PtrMemberAccess	new_persistent_script -> is_phar		1392850	0					
ANR	1392969	Identifier	new_persistent_script		1392850	0					
ANR	1392970	Identifier	is_phar		1392850	1					
ANR	1392971	AndExpression	"new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1392850	1		&&			
ANR	1392972	PtrMemberAccess	new_persistent_script -> full_path		1392850	0					
ANR	1392973	Identifier	new_persistent_script		1392850	0					
ANR	1392974	Identifier	full_path		1392850	1					
ANR	1392975	AndExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1392850	1		&&			
ANR	1392976	CallExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" )"		1392850	0					
ANR	1392977	Callee	strstr		1392850	0					
ANR	1392978	Identifier	strstr		1392850	0					
ANR	1392979	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		1392850	1					
ANR	1392980	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		1392850	0					
ANR	1392981	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		1392850	0					
ANR	1392982	Callee	ZSTR_VAL		1392850	0					
ANR	1392983	Identifier	ZSTR_VAL		1392850	0					
ANR	1392984	ArgumentList	new_persistent_script -> full_path		1392850	1					
ANR	1392985	Argument	new_persistent_script -> full_path		1392850	0					
ANR	1392986	PtrMemberAccess	new_persistent_script -> full_path		1392850	0					
ANR	1392987	Identifier	new_persistent_script		1392850	0					
ANR	1392988	Identifier	full_path		1392850	1					
ANR	1392989	Argument	""".phar"""		1392850	1					
ANR	1392990	PrimaryExpression	""".phar"""		1392850	0					
ANR	1392991	UnaryOperationExpression	"! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1392850	1					
ANR	1392992	UnaryOperator	!		1392850	0					
ANR	1392993	CallExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1392850	1					
ANR	1392994	Callee	strstr		1392850	0					
ANR	1392995	Identifier	strstr		1392850	0					
ANR	1392996	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		1392850	1					
ANR	1392997	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		1392850	0					
ANR	1392998	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		1392850	0					
ANR	1392999	Callee	ZSTR_VAL		1392850	0					
ANR	1393000	Identifier	ZSTR_VAL		1392850	0					
ANR	1393001	ArgumentList	new_persistent_script -> full_path		1392850	1					
ANR	1393002	Argument	new_persistent_script -> full_path		1392850	0					
ANR	1393003	PtrMemberAccess	new_persistent_script -> full_path		1392850	0					
ANR	1393004	Identifier	new_persistent_script		1392850	0					
ANR	1393005	Identifier	full_path		1392850	1					
ANR	1393006	Argument	"""://"""		1392850	1					
ANR	1393007	PrimaryExpression	"""://"""		1392850	0					
ANR	1393008	IfStatement	if ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem ) )		1392850	10					
ANR	1393009	Condition	( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem )	1189:5:33356:33437	1392850	0	True				
ANR	1393010	EqualityExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem )		1392850	0		!=			
ANR	1393011	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		1392850	0		+			
ANR	1393012	CastExpression	( char * ) new_persistent_script -> mem		1392850	0					
ANR	1393013	CastTarget	char *		1392850	0					
ANR	1393014	PtrMemberAccess	new_persistent_script -> mem		1392850	1					
ANR	1393015	Identifier	new_persistent_script		1392850	0					
ANR	1393016	Identifier	mem		1392850	1					
ANR	1393017	PtrMemberAccess	new_persistent_script -> size		1392850	1					
ANR	1393018	Identifier	new_persistent_script		1392850	0					
ANR	1393019	Identifier	size		1392850	1					
ANR	1393020	CastExpression	( char * ) ZCG ( mem )		1392850	1					
ANR	1393021	CastTarget	char *		1392850	0					
ANR	1393022	CallExpression	ZCG ( mem )		1392850	1					
ANR	1393023	Callee	ZCG		1392850	0					
ANR	1393024	Identifier	ZCG		1392850	0					
ANR	1393025	ArgumentList	mem		1392850	1					
ANR	1393026	Argument	mem		1392850	0					
ANR	1393027	Identifier	mem		1392850	0					
ANR	1393028	CompoundStatement		38:89:1170:1170	1392850	1					
ANR	1393029	ExpressionStatement	"zend_accel_error ( ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING , ""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"" , ZSTR_VAL ( new_persistent_script -> full_path ) , new_persistent_script -> mem , ( char * ) new_persistent_script -> mem + new_persistent_script -> size , ZCG ( mem ) )"	1190:2:33444:33836	1392850	0	True				
ANR	1393030	CallExpression	"zend_accel_error ( ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING , ""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"" , ZSTR_VAL ( new_persistent_script -> full_path ) , new_persistent_script -> mem , ( char * ) new_persistent_script -> mem + new_persistent_script -> size , ZCG ( mem ) )"		1392850	0					
ANR	1393031	Callee	zend_accel_error		1392850	0					
ANR	1393032	Identifier	zend_accel_error		1392850	0					
ANR	1393033	ArgumentList	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		1392850	1					
ANR	1393034	Argument	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		1392850	0					
ANR	1393035	ConditionalExpression	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		1392850	0					
ANR	1393036	Condition	( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem )		1392850	0					
ANR	1393037	RelationalExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem )		1392850	0		<			
ANR	1393038	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		1392850	0		+			
ANR	1393039	CastExpression	( char * ) new_persistent_script -> mem		1392850	0					
ANR	1393040	CastTarget	char *		1392850	0					
ANR	1393041	PtrMemberAccess	new_persistent_script -> mem		1392850	1					
ANR	1393042	Identifier	new_persistent_script		1392850	0					
ANR	1393043	Identifier	mem		1392850	1					
ANR	1393044	PtrMemberAccess	new_persistent_script -> size		1392850	1					
ANR	1393045	Identifier	new_persistent_script		1392850	0					
ANR	1393046	Identifier	size		1392850	1					
ANR	1393047	CastExpression	( char * ) ZCG ( mem )		1392850	1					
ANR	1393048	CastTarget	char *		1392850	0					
ANR	1393049	CallExpression	ZCG ( mem )		1392850	1					
ANR	1393050	Callee	ZCG		1392850	0					
ANR	1393051	Identifier	ZCG		1392850	0					
ANR	1393052	ArgumentList	mem		1392850	1					
ANR	1393053	Argument	mem		1392850	0					
ANR	1393054	Identifier	mem		1392850	0					
ANR	1393055	Identifier	ACCEL_LOG_ERROR		1392850	1					
ANR	1393056	Identifier	ACCEL_LOG_WARNING		1392850	2					
ANR	1393057	Argument	"""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"""		1392850	1					
ANR	1393058	PrimaryExpression	"""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"""		1392850	0					
ANR	1393059	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		1392850	2					
ANR	1393060	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		1392850	0					
ANR	1393061	Callee	ZSTR_VAL		1392850	0					
ANR	1393062	Identifier	ZSTR_VAL		1392850	0					
ANR	1393063	ArgumentList	new_persistent_script -> full_path		1392850	1					
ANR	1393064	Argument	new_persistent_script -> full_path		1392850	0					
ANR	1393065	PtrMemberAccess	new_persistent_script -> full_path		1392850	0					
ANR	1393066	Identifier	new_persistent_script		1392850	0					
ANR	1393067	Identifier	full_path		1392850	1					
ANR	1393068	Argument	new_persistent_script -> mem		1392850	3					
ANR	1393069	PtrMemberAccess	new_persistent_script -> mem		1392850	0					
ANR	1393070	Identifier	new_persistent_script		1392850	0					
ANR	1393071	Identifier	mem		1392850	1					
ANR	1393072	Argument	( char * ) new_persistent_script -> mem + new_persistent_script -> size		1392850	4					
ANR	1393073	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		1392850	0		+			
ANR	1393074	CastExpression	( char * ) new_persistent_script -> mem		1392850	0					
ANR	1393075	CastTarget	char *		1392850	0					
ANR	1393076	PtrMemberAccess	new_persistent_script -> mem		1392850	1					
ANR	1393077	Identifier	new_persistent_script		1392850	0					
ANR	1393078	Identifier	mem		1392850	1					
ANR	1393079	PtrMemberAccess	new_persistent_script -> size		1392850	1					
ANR	1393080	Identifier	new_persistent_script		1392850	0					
ANR	1393081	Identifier	size		1392850	1					
ANR	1393082	Argument	ZCG ( mem )		1392850	5					
ANR	1393083	CallExpression	ZCG ( mem )		1392850	0					
ANR	1393084	Callee	ZCG		1392850	0					
ANR	1393085	Identifier	ZCG		1392850	0					
ANR	1393086	ArgumentList	mem		1392850	1					
ANR	1393087	Argument	mem		1392850	0					
ANR	1393088	Identifier	mem		1392850	0					
ANR	1393089	ExpressionStatement	new_persistent_script -> dynamic_members . checksum = zend_accel_script_checksum ( new_persistent_script )	1199:1:33843:33942	1392850	11	True				
ANR	1393090	AssignmentExpression	new_persistent_script -> dynamic_members . checksum = zend_accel_script_checksum ( new_persistent_script )		1392850	0		=			
ANR	1393091	MemberAccess	new_persistent_script -> dynamic_members . checksum		1392850	0					
ANR	1393092	PtrMemberAccess	new_persistent_script -> dynamic_members		1392850	0					
ANR	1393093	Identifier	new_persistent_script		1392850	0					
ANR	1393094	Identifier	dynamic_members		1392850	1					
ANR	1393095	Identifier	checksum		1392850	1					
ANR	1393096	CallExpression	zend_accel_script_checksum ( new_persistent_script )		1392850	1					
ANR	1393097	Callee	zend_accel_script_checksum		1392850	0					
ANR	1393098	Identifier	zend_accel_script_checksum		1392850	0					
ANR	1393099	ArgumentList	new_persistent_script		1392850	1					
ANR	1393100	Argument	new_persistent_script		1392850	0					
ANR	1393101	Identifier	new_persistent_script		1392850	0					
ANR	1393102	ExpressionStatement	"zend_file_cache_script_store ( new_persistent_script , 0 )"	1201:1:33946:34000	1392850	12	True				
ANR	1393103	CallExpression	"zend_file_cache_script_store ( new_persistent_script , 0 )"		1392850	0					
ANR	1393104	Callee	zend_file_cache_script_store		1392850	0					
ANR	1393105	Identifier	zend_file_cache_script_store		1392850	0					
ANR	1393106	ArgumentList	new_persistent_script		1392850	1					
ANR	1393107	Argument	new_persistent_script		1392850	0					
ANR	1393108	Identifier	new_persistent_script		1392850	0					
ANR	1393109	Argument	0		1392850	1					
ANR	1393110	PrimaryExpression	0		1392850	0					
ANR	1393111	ExpressionStatement	* from_shared_memory = 1	1203:1:34004:34027	1392850	13	True				
ANR	1393112	AssignmentExpression	* from_shared_memory = 1		1392850	0		=			
ANR	1393113	UnaryOperationExpression	* from_shared_memory		1392850	0					
ANR	1393114	UnaryOperator	*		1392850	0					
ANR	1393115	Identifier	from_shared_memory		1392850	1					
ANR	1393116	PrimaryExpression	1		1392850	1					
ANR	1393117	ReturnStatement	return new_persistent_script ;	1204:1:34030:34058	1392850	14	True				
ANR	1393118	Identifier	new_persistent_script		1392850	0					
ANR	1393119	ReturnType	static zend_persistent_script *		1392850	1					
ANR	1393120	Identifier	cache_script_in_file_cache		1392850	2					
ANR	1393121	ParameterList	"zend_persistent_script * new_persistent_script , int * from_shared_memory"		1392850	3					
ANR	1393122	Parameter	zend_persistent_script * new_persistent_script	1151:58:32197:32241	1392850	0	True				
ANR	1393123	ParameterType	zend_persistent_script *		1392850	0					
ANR	1393124	Identifier	new_persistent_script		1392850	1					
ANR	1393125	Parameter	int * from_shared_memory	1151:105:32244:32266	1392850	1	True				
ANR	1393126	ParameterType	int *		1392850	0					
ANR	1393127	Identifier	from_shared_memory		1392850	1					
ANR	1393128	CFGEntryNode	ENTRY		1392850		True				
ANR	1393129	CFGExitNode	EXIT		1392850		True				
ANR	1393130	Symbol	new_persistent_script -> full_path		1392850						
ANR	1393131	Symbol	arena		1392850						
ANR	1393132	Symbol	~63L		1392850						
ANR	1393133	Symbol	from_shared_memory		1392850						
ANR	1393134	Symbol	& CG		1392850						
ANR	1393135	Symbol	new_persistent_script -> mem		1392850						
ANR	1393136	Symbol	new_persistent_script -> is_phar		1392850						
ANR	1393137	Symbol	mem		1392850						
ANR	1393138	Symbol	ACCEL_LOG_WARNING		1392850						
ANR	1393139	Symbol	new_persistent_script		1392850						
ANR	1393140	Symbol	ACCEL_LOG_ERROR		1392850						
ANR	1393141	Symbol	* from_shared_memory		1392850						
ANR	1393142	Symbol	NULL		1392850						
ANR	1393143	Symbol	zend_accel_script_persistable		1392850						
ANR	1393144	Symbol	zend_arena_alloc		1392850						
ANR	1393145	Symbol	memory_used		1392850						
ANR	1393146	Symbol	zend_accel_script_persist_calc		1392850						
ANR	1393147	Symbol	ZSTR_VAL		1392850						
ANR	1393148	Symbol	zend_accel_script_persist		1392850						
ANR	1393149	Symbol	new_persistent_script -> dynamic_members		1392850						
ANR	1393150	Symbol	strstr		1392850						
ANR	1393151	Symbol	new_persistent_script -> dynamic_members . checksum		1392850						
ANR	1393152	Symbol	zend_accel_script_checksum		1392850						
ANR	1393153	Symbol	* new_persistent_script		1392850						
ANR	1393154	Symbol	zend_accel_script_optimize		1392850						
ANR	1393155	Symbol	new_persistent_script -> size		1392850						
ANR	1393156	Symbol	ZCG		1392850						
ANR	1393157	Function	cache_script_in_shared_memory	1208:0:34070:38542							
ANR	1393158	FunctionDef	"cache_script_in_shared_memory (zend_persistent_script * new_persistent_script , char * key , unsigned int key_length , int * from_shared_memory)"		1393157	0					
ANR	1393159	CompoundStatement		1209:0:34239:38542	1393157	0					
ANR	1393160	IdentifierDeclStatement	zend_accel_hash_entry * bucket ;	1210:1:34242:34271	1393157	0	True				
ANR	1393161	IdentifierDecl	* bucket		1393157	0					
ANR	1393162	IdentifierDeclType	zend_accel_hash_entry *		1393157	0					
ANR	1393163	Identifier	bucket		1393157	1					
ANR	1393164	IdentifierDeclStatement	uint memory_used ;	1211:1:34274:34290	1393157	1	True				
ANR	1393165	IdentifierDecl	memory_used		1393157	0					
ANR	1393166	IdentifierDeclType	uint		1393157	0					
ANR	1393167	Identifier	memory_used		1393157	1					
ANR	1393168	IfStatement	if ( ! zend_accel_script_persistable ( new_persistent_script ) )		1393157	2					
ANR	1393169	Condition	! zend_accel_script_persistable ( new_persistent_script )	1214:5:34352:34404	1393157	0	True				
ANR	1393170	UnaryOperationExpression	! zend_accel_script_persistable ( new_persistent_script )		1393157	0					
ANR	1393171	UnaryOperator	!		1393157	0					
ANR	1393172	CallExpression	zend_accel_script_persistable ( new_persistent_script )		1393157	1					
ANR	1393173	Callee	zend_accel_script_persistable		1393157	0					
ANR	1393174	Identifier	zend_accel_script_persistable		1393157	0					
ANR	1393175	ArgumentList	new_persistent_script		1393157	1					
ANR	1393176	Argument	new_persistent_script		1393157	0					
ANR	1393177	Identifier	new_persistent_script		1393157	0					
ANR	1393178	CompoundStatement		6:60:167:167	1393157	1					
ANR	1393179	ReturnStatement	return new_persistent_script ;	1215:2:34411:34439	1393157	0	True				
ANR	1393180	Identifier	new_persistent_script		1393157	0					
ANR	1393181	IfStatement	if ( ! zend_accel_script_optimize ( new_persistent_script ) )		1393157	3					
ANR	1393182	Condition	! zend_accel_script_optimize ( new_persistent_script )	1218:5:34450:34499	1393157	0	True				
ANR	1393183	UnaryOperationExpression	! zend_accel_script_optimize ( new_persistent_script )		1393157	0					
ANR	1393184	UnaryOperator	!		1393157	0					
ANR	1393185	CallExpression	zend_accel_script_optimize ( new_persistent_script )		1393157	1					
ANR	1393186	Callee	zend_accel_script_optimize		1393157	0					
ANR	1393187	Identifier	zend_accel_script_optimize		1393157	0					
ANR	1393188	ArgumentList	new_persistent_script		1393157	1					
ANR	1393189	Argument	new_persistent_script		1393157	0					
ANR	1393190	Identifier	new_persistent_script		1393157	0					
ANR	1393191	CompoundStatement		10:57:262:262	1393157	1					
ANR	1393192	ReturnStatement	return new_persistent_script ;	1219:2:34506:34534	1393157	0	True				
ANR	1393193	Identifier	new_persistent_script		1393157	0					
ANR	1393194	ExpressionStatement	zend_shared_alloc_lock ( )	1223:1:34563:34587	1393157	4	True				
ANR	1393195	CallExpression	zend_shared_alloc_lock ( )		1393157	0					
ANR	1393196	Callee	zend_shared_alloc_lock		1393157	0					
ANR	1393197	Identifier	zend_shared_alloc_lock		1393157	0					
ANR	1393198	ArgumentList			1393157	1					
ANR	1393199	IfStatement	if ( zend_accel_hash_is_full ( & ZCSG ( hash ) ) )		1393157	5					
ANR	1393200	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )	1225:5:34595:34630	1393157	0	True				
ANR	1393201	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		1393157	0					
ANR	1393202	Callee	zend_accel_hash_is_full		1393157	0					
ANR	1393203	Identifier	zend_accel_hash_is_full		1393157	0					
ANR	1393204	ArgumentList	& ZCSG ( hash )		1393157	1					
ANR	1393205	Argument	& ZCSG ( hash )		1393157	0					
ANR	1393206	UnaryOperationExpression	& ZCSG ( hash )		1393157	0					
ANR	1393207	UnaryOperator	&		1393157	0					
ANR	1393208	CallExpression	ZCSG ( hash )		1393157	1					
ANR	1393209	Callee	ZCSG		1393157	0					
ANR	1393210	Identifier	ZCSG		1393157	0					
ANR	1393211	ArgumentList	hash		1393157	1					
ANR	1393212	Argument	hash		1393157	0					
ANR	1393213	Identifier	hash		1393157	0					
ANR	1393214	CompoundStatement		17:43:393:393	1393157	1					
ANR	1393215	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"	1226:2:34637:34704	1393157	0	True				
ANR	1393216	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"		1393157	0					
ANR	1393217	Callee	zend_accel_error		1393157	0					
ANR	1393218	Identifier	zend_accel_error		1393157	0					
ANR	1393219	ArgumentList	ACCEL_LOG_DEBUG		1393157	1					
ANR	1393220	Argument	ACCEL_LOG_DEBUG		1393157	0					
ANR	1393221	Identifier	ACCEL_LOG_DEBUG		1393157	0					
ANR	1393222	Argument	"""No more entries in hash table!"""		1393157	1					
ANR	1393223	PrimaryExpression	"""No more entries in hash table!"""		1393157	0					
ANR	1393224	ExpressionStatement	ZSMMG ( memory_exhausted ) = 1	1227:2:34708:34735	1393157	1	True				
ANR	1393225	AssignmentExpression	ZSMMG ( memory_exhausted ) = 1		1393157	0		=			
ANR	1393226	CallExpression	ZSMMG ( memory_exhausted )		1393157	0					
ANR	1393227	Callee	ZSMMG		1393157	0					
ANR	1393228	Identifier	ZSMMG		1393157	0					
ANR	1393229	ArgumentList	memory_exhausted		1393157	1					
ANR	1393230	Argument	memory_exhausted		1393157	0					
ANR	1393231	Identifier	memory_exhausted		1393157	0					
ANR	1393232	PrimaryExpression	1		1393157	1					
ANR	1393233	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )	1228:2:34739:34799	1393157	2	True				
ANR	1393234	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )		1393157	0					
ANR	1393235	Callee	zend_accel_schedule_restart_if_necessary		1393157	0					
ANR	1393236	Identifier	zend_accel_schedule_restart_if_necessary		1393157	0					
ANR	1393237	ArgumentList	ACCEL_RESTART_HASH		1393157	1					
ANR	1393238	Argument	ACCEL_RESTART_HASH		1393157	0					
ANR	1393239	Identifier	ACCEL_RESTART_HASH		1393157	0					
ANR	1393240	ExpressionStatement	zend_shared_alloc_unlock ( )	1229:2:34803:34829	1393157	3	True				
ANR	1393241	CallExpression	zend_shared_alloc_unlock ( )		1393157	0					
ANR	1393242	Callee	zend_shared_alloc_unlock		1393157	0					
ANR	1393243	Identifier	zend_shared_alloc_unlock		1393157	0					
ANR	1393244	ArgumentList			1393157	1					
ANR	1393245	ReturnStatement	return new_persistent_script ;	1230:2:34833:34861	1393157	4	True				
ANR	1393246	Identifier	new_persistent_script		1393157	0					
ANR	1393247	ExpressionStatement	"bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , new_persistent_script -> full_path )"	1236:1:35034:35116	1393157	6	True				
ANR	1393248	AssignmentExpression	"bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , new_persistent_script -> full_path )"		1393157	0		=			
ANR	1393249	Identifier	bucket		1393157	0					
ANR	1393250	CallExpression	"zend_accel_hash_find_entry ( & ZCSG ( hash ) , new_persistent_script -> full_path )"		1393157	1					
ANR	1393251	Callee	zend_accel_hash_find_entry		1393157	0					
ANR	1393252	Identifier	zend_accel_hash_find_entry		1393157	0					
ANR	1393253	ArgumentList	& ZCSG ( hash )		1393157	1					
ANR	1393254	Argument	& ZCSG ( hash )		1393157	0					
ANR	1393255	UnaryOperationExpression	& ZCSG ( hash )		1393157	0					
ANR	1393256	UnaryOperator	&		1393157	0					
ANR	1393257	CallExpression	ZCSG ( hash )		1393157	1					
ANR	1393258	Callee	ZCSG		1393157	0					
ANR	1393259	Identifier	ZCSG		1393157	0					
ANR	1393260	ArgumentList	hash		1393157	1					
ANR	1393261	Argument	hash		1393157	0					
ANR	1393262	Identifier	hash		1393157	0					
ANR	1393263	Argument	new_persistent_script -> full_path		1393157	1					
ANR	1393264	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393265	Identifier	new_persistent_script		1393157	0					
ANR	1393266	Identifier	full_path		1393157	1					
ANR	1393267	IfStatement	if ( bucket )		1393157	7					
ANR	1393268	Condition	bucket	1237:5:35123:35128	1393157	0	True				
ANR	1393269	Identifier	bucket		1393157	0					
ANR	1393270	CompoundStatement		30:2:895:986	1393157	1					
ANR	1393271	IdentifierDeclStatement	zend_persistent_script * existing_persistent_script = ( zend_persistent_script * ) bucket -> data ;	1238:2:35135:35226	1393157	0	True				
ANR	1393272	IdentifierDecl	* existing_persistent_script = ( zend_persistent_script * ) bucket -> data		1393157	0					
ANR	1393273	IdentifierDeclType	zend_persistent_script *		1393157	0					
ANR	1393274	Identifier	existing_persistent_script		1393157	1					
ANR	1393275	AssignmentExpression	* existing_persistent_script = ( zend_persistent_script * ) bucket -> data		1393157	2		=			
ANR	1393276	Identifier	existing_persistent_script		1393157	0					
ANR	1393277	CastExpression	( zend_persistent_script * ) bucket -> data		1393157	1					
ANR	1393278	CastTarget	zend_persistent_script *		1393157	0					
ANR	1393279	PtrMemberAccess	bucket -> data		1393157	1					
ANR	1393280	Identifier	bucket		1393157	0					
ANR	1393281	Identifier	data		1393157	1					
ANR	1393282	IfStatement	if ( ! existing_persistent_script -> corrupted )		1393157	1					
ANR	1393283	Condition	! existing_persistent_script -> corrupted	1240:6:35235:35272	1393157	0	True				
ANR	1393284	UnaryOperationExpression	! existing_persistent_script -> corrupted		1393157	0					
ANR	1393285	UnaryOperator	!		1393157	0					
ANR	1393286	PtrMemberAccess	existing_persistent_script -> corrupted		1393157	1					
ANR	1393287	Identifier	existing_persistent_script		1393157	0					
ANR	1393288	Identifier	corrupted		1393157	1					
ANR	1393289	CompoundStatement		32:46:1035:1035	1393157	1					
ANR	1393290	IfStatement	if ( key && ( ! ZCG ( accel_directives ) . validate_timestamps || ( new_persistent_script -> timestamp == existing_persistent_script -> timestamp ) ) )		1393157	0					
ANR	1393291	Condition	key && ( ! ZCG ( accel_directives ) . validate_timestamps || ( new_persistent_script -> timestamp == existing_persistent_script -> timestamp ) )	1241:7:35284:35428	1393157	0	True				
ANR	1393292	AndExpression	key && ( ! ZCG ( accel_directives ) . validate_timestamps || ( new_persistent_script -> timestamp == existing_persistent_script -> timestamp ) )		1393157	0		&&			
ANR	1393293	Identifier	key		1393157	0					
ANR	1393294	OrExpression	! ZCG ( accel_directives ) . validate_timestamps || ( new_persistent_script -> timestamp == existing_persistent_script -> timestamp )		1393157	1		||			
ANR	1393295	UnaryOperationExpression	! ZCG ( accel_directives ) . validate_timestamps		1393157	0					
ANR	1393296	UnaryOperator	!		1393157	0					
ANR	1393297	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		1393157	1					
ANR	1393298	CallExpression	ZCG ( accel_directives )		1393157	0					
ANR	1393299	Callee	ZCG		1393157	0					
ANR	1393300	Identifier	ZCG		1393157	0					
ANR	1393301	ArgumentList	accel_directives		1393157	1					
ANR	1393302	Argument	accel_directives		1393157	0					
ANR	1393303	Identifier	accel_directives		1393157	0					
ANR	1393304	Identifier	validate_timestamps		1393157	1					
ANR	1393305	EqualityExpression	new_persistent_script -> timestamp == existing_persistent_script -> timestamp		1393157	1		==			
ANR	1393306	PtrMemberAccess	new_persistent_script -> timestamp		1393157	0					
ANR	1393307	Identifier	new_persistent_script		1393157	0					
ANR	1393308	Identifier	timestamp		1393157	1					
ANR	1393309	PtrMemberAccess	existing_persistent_script -> timestamp		1393157	1					
ANR	1393310	Identifier	existing_persistent_script		1393157	0					
ANR	1393311	Identifier	timestamp		1393157	1					
ANR	1393312	CompoundStatement		35:86:1191:1191	1393157	1					
ANR	1393313	ExpressionStatement	"zend_accel_add_key ( key , key_length , bucket )"	1244:4:35437:35480	1393157	0	True				
ANR	1393314	CallExpression	"zend_accel_add_key ( key , key_length , bucket )"		1393157	0					
ANR	1393315	Callee	zend_accel_add_key		1393157	0					
ANR	1393316	Identifier	zend_accel_add_key		1393157	0					
ANR	1393317	ArgumentList	key		1393157	1					
ANR	1393318	Argument	key		1393157	0					
ANR	1393319	Identifier	key		1393157	0					
ANR	1393320	Argument	key_length		1393157	1					
ANR	1393321	Identifier	key_length		1393157	0					
ANR	1393322	Argument	bucket		1393157	2					
ANR	1393323	Identifier	bucket		1393157	0					
ANR	1393324	ExpressionStatement	zend_shared_alloc_unlock ( )	1246:3:35490:35516	1393157	1	True				
ANR	1393325	CallExpression	zend_shared_alloc_unlock ( )		1393157	0					
ANR	1393326	Callee	zend_shared_alloc_unlock		1393157	0					
ANR	1393327	Identifier	zend_shared_alloc_unlock		1393157	0					
ANR	1393328	ArgumentList			1393157	1					
ANR	1393329	ReturnStatement	return new_persistent_script ;	1247:3:35521:35549	1393157	2	True				
ANR	1393330	Identifier	new_persistent_script		1393157	0					
ANR	1393331	ExpressionStatement	zend_shared_alloc_init_xlat_table ( )	1252:1:35561:35596	1393157	8	True				
ANR	1393332	CallExpression	zend_shared_alloc_init_xlat_table ( )		1393157	0					
ANR	1393333	Callee	zend_shared_alloc_init_xlat_table		1393157	0					
ANR	1393334	Identifier	zend_shared_alloc_init_xlat_table		1393157	0					
ANR	1393335	ArgumentList			1393157	1					
ANR	1393336	ExpressionStatement	"memory_used = zend_accel_script_persist_calc ( new_persistent_script , key , key_length )"	1255:1:35642:35726	1393157	9	True				
ANR	1393337	AssignmentExpression	"memory_used = zend_accel_script_persist_calc ( new_persistent_script , key , key_length )"		1393157	0		=			
ANR	1393338	Identifier	memory_used		1393157	0					
ANR	1393339	CallExpression	"zend_accel_script_persist_calc ( new_persistent_script , key , key_length )"		1393157	1					
ANR	1393340	Callee	zend_accel_script_persist_calc		1393157	0					
ANR	1393341	Identifier	zend_accel_script_persist_calc		1393157	0					
ANR	1393342	ArgumentList	new_persistent_script		1393157	1					
ANR	1393343	Argument	new_persistent_script		1393157	0					
ANR	1393344	Identifier	new_persistent_script		1393157	0					
ANR	1393345	Argument	key		1393157	1					
ANR	1393346	Identifier	key		1393157	0					
ANR	1393347	Argument	key_length		1393157	2					
ANR	1393348	Identifier	key_length		1393157	0					
ANR	1393349	ExpressionStatement	ZCG ( mem ) = zend_shared_alloc ( memory_used + 64 )	1260:1:35809:35855	1393157	10	True				
ANR	1393350	AssignmentExpression	ZCG ( mem ) = zend_shared_alloc ( memory_used + 64 )		1393157	0		=			
ANR	1393351	CallExpression	ZCG ( mem )		1393157	0					
ANR	1393352	Callee	ZCG		1393157	0					
ANR	1393353	Identifier	ZCG		1393157	0					
ANR	1393354	ArgumentList	mem		1393157	1					
ANR	1393355	Argument	mem		1393157	0					
ANR	1393356	Identifier	mem		1393157	0					
ANR	1393357	CallExpression	zend_shared_alloc ( memory_used + 64 )		1393157	1					
ANR	1393358	Callee	zend_shared_alloc		1393157	0					
ANR	1393359	Identifier	zend_shared_alloc		1393157	0					
ANR	1393360	ArgumentList	memory_used + 64		1393157	1					
ANR	1393361	Argument	memory_used + 64		1393157	0					
ANR	1393362	AdditiveExpression	memory_used + 64		1393157	0		+			
ANR	1393363	Identifier	memory_used		1393157	0					
ANR	1393364	PrimaryExpression	64		1393157	1					
ANR	1393365	ExpressionStatement	ZCG ( mem ) = ( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )	1261:1:35858:35917	1393157	11	True				
ANR	1393366	AssignmentExpression	ZCG ( mem ) = ( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )		1393157	0		=			
ANR	1393367	CallExpression	ZCG ( mem )		1393157	0					
ANR	1393368	Callee	ZCG		1393157	0					
ANR	1393369	Identifier	ZCG		1393157	0					
ANR	1393370	ArgumentList	mem		1393157	1					
ANR	1393371	Argument	mem		1393157	0					
ANR	1393372	Identifier	mem		1393157	0					
ANR	1393373	CastExpression	( void * ) ( ( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L )		1393157	1					
ANR	1393374	CastTarget	void *		1393157	0					
ANR	1393375	BitAndExpression	( ( zend_uintptr_t ) ZCG ( mem ) + 63L ) & ~63L		1393157	1		&			
ANR	1393376	AdditiveExpression	( zend_uintptr_t ) ZCG ( mem ) + 63L		1393157	0		+			
ANR	1393377	CastExpression	( zend_uintptr_t ) ZCG ( mem )		1393157	0					
ANR	1393378	CastTarget	zend_uintptr_t		1393157	0					
ANR	1393379	CallExpression	ZCG ( mem )		1393157	1					
ANR	1393380	Callee	ZCG		1393157	0					
ANR	1393381	Identifier	ZCG		1393157	0					
ANR	1393382	ArgumentList	mem		1393157	1					
ANR	1393383	Argument	mem		1393157	0					
ANR	1393384	Identifier	mem		1393157	0					
ANR	1393385	PrimaryExpression	63L		1393157	1					
ANR	1393386	Identifier	~63L		1393157	1					
ANR	1393387	IfStatement	if ( ! ZCG ( mem ) )		1393157	12					
ANR	1393388	Condition	! ZCG ( mem )	1265:5:35981:35989	1393157	0	True				
ANR	1393389	UnaryOperationExpression	! ZCG ( mem )		1393157	0					
ANR	1393390	UnaryOperator	!		1393157	0					
ANR	1393391	CallExpression	ZCG ( mem )		1393157	1					
ANR	1393392	Callee	ZCG		1393157	0					
ANR	1393393	Identifier	ZCG		1393157	0					
ANR	1393394	ArgumentList	mem		1393157	1					
ANR	1393395	Argument	mem		1393157	0					
ANR	1393396	Identifier	mem		1393157	0					
ANR	1393397	CompoundStatement		57:16:1752:1752	1393157	1					
ANR	1393398	ExpressionStatement	zend_shared_alloc_destroy_xlat_table ( )	1266:2:35996:36034	1393157	0	True				
ANR	1393399	CallExpression	zend_shared_alloc_destroy_xlat_table ( )		1393157	0					
ANR	1393400	Callee	zend_shared_alloc_destroy_xlat_table		1393157	0					
ANR	1393401	Identifier	zend_shared_alloc_destroy_xlat_table		1393157	0					
ANR	1393402	ArgumentList			1393157	1					
ANR	1393403	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_OOM )	1267:2:36038:36097	1393157	1	True				
ANR	1393404	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_OOM )		1393157	0					
ANR	1393405	Callee	zend_accel_schedule_restart_if_necessary		1393157	0					
ANR	1393406	Identifier	zend_accel_schedule_restart_if_necessary		1393157	0					
ANR	1393407	ArgumentList	ACCEL_RESTART_OOM		1393157	1					
ANR	1393408	Argument	ACCEL_RESTART_OOM		1393157	0					
ANR	1393409	Identifier	ACCEL_RESTART_OOM		1393157	0					
ANR	1393410	ExpressionStatement	zend_shared_alloc_unlock ( )	1268:2:36101:36127	1393157	2	True				
ANR	1393411	CallExpression	zend_shared_alloc_unlock ( )		1393157	0					
ANR	1393412	Callee	zend_shared_alloc_unlock		1393157	0					
ANR	1393413	Identifier	zend_shared_alloc_unlock		1393157	0					
ANR	1393414	ArgumentList			1393157	1					
ANR	1393415	ReturnStatement	return new_persistent_script ;	1269:2:36131:36159	1393157	3	True				
ANR	1393416	Identifier	new_persistent_script		1393157	0					
ANR	1393417	ExpressionStatement	"new_persistent_script = zend_accel_script_persist ( new_persistent_script , & key , key_length )"	1273:1:36197:36287	1393157	13	True				
ANR	1393418	AssignmentExpression	"new_persistent_script = zend_accel_script_persist ( new_persistent_script , & key , key_length )"		1393157	0		=			
ANR	1393419	Identifier	new_persistent_script		1393157	0					
ANR	1393420	CallExpression	"zend_accel_script_persist ( new_persistent_script , & key , key_length )"		1393157	1					
ANR	1393421	Callee	zend_accel_script_persist		1393157	0					
ANR	1393422	Identifier	zend_accel_script_persist		1393157	0					
ANR	1393423	ArgumentList	new_persistent_script		1393157	1					
ANR	1393424	Argument	new_persistent_script		1393157	0					
ANR	1393425	Identifier	new_persistent_script		1393157	0					
ANR	1393426	Argument	& key		1393157	1					
ANR	1393427	UnaryOperationExpression	& key		1393157	0					
ANR	1393428	UnaryOperator	&		1393157	0					
ANR	1393429	Identifier	key		1393157	1					
ANR	1393430	Argument	key_length		1393157	2					
ANR	1393431	Identifier	key_length		1393157	0					
ANR	1393432	ExpressionStatement	zend_shared_alloc_destroy_xlat_table ( )	1275:1:36291:36329	1393157	14	True				
ANR	1393433	CallExpression	zend_shared_alloc_destroy_xlat_table ( )		1393157	0					
ANR	1393434	Callee	zend_shared_alloc_destroy_xlat_table		1393157	0					
ANR	1393435	Identifier	zend_shared_alloc_destroy_xlat_table		1393157	0					
ANR	1393436	ArgumentList			1393157	1					
ANR	1393437	ExpressionStatement	"new_persistent_script -> is_phar = new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"	1277:1:36333:36529	1393157	15	True				
ANR	1393438	AssignmentExpression	"new_persistent_script -> is_phar = new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1393157	0		=			
ANR	1393439	PtrMemberAccess	new_persistent_script -> is_phar		1393157	0					
ANR	1393440	Identifier	new_persistent_script		1393157	0					
ANR	1393441	Identifier	is_phar		1393157	1					
ANR	1393442	AndExpression	"new_persistent_script -> full_path && strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1393157	1		&&			
ANR	1393443	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393444	Identifier	new_persistent_script		1393157	0					
ANR	1393445	Identifier	full_path		1393157	1					
ANR	1393446	AndExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" ) && ! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1393157	1		&&			
ANR	1393447	CallExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , "".phar"" )"		1393157	0					
ANR	1393448	Callee	strstr		1393157	0					
ANR	1393449	Identifier	strstr		1393157	0					
ANR	1393450	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	1					
ANR	1393451	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	0					
ANR	1393452	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	0					
ANR	1393453	Callee	ZSTR_VAL		1393157	0					
ANR	1393454	Identifier	ZSTR_VAL		1393157	0					
ANR	1393455	ArgumentList	new_persistent_script -> full_path		1393157	1					
ANR	1393456	Argument	new_persistent_script -> full_path		1393157	0					
ANR	1393457	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393458	Identifier	new_persistent_script		1393157	0					
ANR	1393459	Identifier	full_path		1393157	1					
ANR	1393460	Argument	""".phar"""		1393157	1					
ANR	1393461	PrimaryExpression	""".phar"""		1393157	0					
ANR	1393462	UnaryOperationExpression	"! strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1393157	1					
ANR	1393463	UnaryOperator	!		1393157	0					
ANR	1393464	CallExpression	"strstr ( ZSTR_VAL ( new_persistent_script -> full_path ) , ""://"" )"		1393157	1					
ANR	1393465	Callee	strstr		1393157	0					
ANR	1393466	Identifier	strstr		1393157	0					
ANR	1393467	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	1					
ANR	1393468	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	0					
ANR	1393469	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	0					
ANR	1393470	Callee	ZSTR_VAL		1393157	0					
ANR	1393471	Identifier	ZSTR_VAL		1393157	0					
ANR	1393472	ArgumentList	new_persistent_script -> full_path		1393157	1					
ANR	1393473	Argument	new_persistent_script -> full_path		1393157	0					
ANR	1393474	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393475	Identifier	new_persistent_script		1393157	0					
ANR	1393476	Identifier	full_path		1393157	1					
ANR	1393477	Argument	"""://"""		1393157	1					
ANR	1393478	PrimaryExpression	"""://"""		1393157	0					
ANR	1393479	IfStatement	if ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem ) )		1393157	16					
ANR	1393480	Condition	( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem )	1283:5:36562:36643	1393157	0	True				
ANR	1393481	EqualityExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size != ( char * ) ZCG ( mem )		1393157	0		!=			
ANR	1393482	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		1393157	0		+			
ANR	1393483	CastExpression	( char * ) new_persistent_script -> mem		1393157	0					
ANR	1393484	CastTarget	char *		1393157	0					
ANR	1393485	PtrMemberAccess	new_persistent_script -> mem		1393157	1					
ANR	1393486	Identifier	new_persistent_script		1393157	0					
ANR	1393487	Identifier	mem		1393157	1					
ANR	1393488	PtrMemberAccess	new_persistent_script -> size		1393157	1					
ANR	1393489	Identifier	new_persistent_script		1393157	0					
ANR	1393490	Identifier	size		1393157	1					
ANR	1393491	CastExpression	( char * ) ZCG ( mem )		1393157	1					
ANR	1393492	CastTarget	char *		1393157	0					
ANR	1393493	CallExpression	ZCG ( mem )		1393157	1					
ANR	1393494	Callee	ZCG		1393157	0					
ANR	1393495	Identifier	ZCG		1393157	0					
ANR	1393496	ArgumentList	mem		1393157	1					
ANR	1393497	Argument	mem		1393157	0					
ANR	1393498	Identifier	mem		1393157	0					
ANR	1393499	CompoundStatement		75:89:2406:2406	1393157	1					
ANR	1393500	ExpressionStatement	"zend_accel_error ( ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING , ""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"" , ZSTR_VAL ( new_persistent_script -> full_path ) , new_persistent_script -> mem , ( char * ) new_persistent_script -> mem + new_persistent_script -> size , ZCG ( mem ) )"	1284:2:36650:37042	1393157	0	True				
ANR	1393501	CallExpression	"zend_accel_error ( ( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING , ""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"" , ZSTR_VAL ( new_persistent_script -> full_path ) , new_persistent_script -> mem , ( char * ) new_persistent_script -> mem + new_persistent_script -> size , ZCG ( mem ) )"		1393157	0					
ANR	1393502	Callee	zend_accel_error		1393157	0					
ANR	1393503	Identifier	zend_accel_error		1393157	0					
ANR	1393504	ArgumentList	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		1393157	1					
ANR	1393505	Argument	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		1393157	0					
ANR	1393506	ConditionalExpression	( ( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem ) ) ? ACCEL_LOG_ERROR : ACCEL_LOG_WARNING		1393157	0					
ANR	1393507	Condition	( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem )		1393157	0					
ANR	1393508	RelationalExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size < ( char * ) ZCG ( mem )		1393157	0		<			
ANR	1393509	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		1393157	0		+			
ANR	1393510	CastExpression	( char * ) new_persistent_script -> mem		1393157	0					
ANR	1393511	CastTarget	char *		1393157	0					
ANR	1393512	PtrMemberAccess	new_persistent_script -> mem		1393157	1					
ANR	1393513	Identifier	new_persistent_script		1393157	0					
ANR	1393514	Identifier	mem		1393157	1					
ANR	1393515	PtrMemberAccess	new_persistent_script -> size		1393157	1					
ANR	1393516	Identifier	new_persistent_script		1393157	0					
ANR	1393517	Identifier	size		1393157	1					
ANR	1393518	CastExpression	( char * ) ZCG ( mem )		1393157	1					
ANR	1393519	CastTarget	char *		1393157	0					
ANR	1393520	CallExpression	ZCG ( mem )		1393157	1					
ANR	1393521	Callee	ZCG		1393157	0					
ANR	1393522	Identifier	ZCG		1393157	0					
ANR	1393523	ArgumentList	mem		1393157	1					
ANR	1393524	Argument	mem		1393157	0					
ANR	1393525	Identifier	mem		1393157	0					
ANR	1393526	Identifier	ACCEL_LOG_ERROR		1393157	1					
ANR	1393527	Identifier	ACCEL_LOG_WARNING		1393157	2					
ANR	1393528	Argument	"""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"""		1393157	1					
ANR	1393529	PrimaryExpression	"""Internal error: wrong size calculation: %s start=0x%08x, end=0x%08x, real=0x%08x\\n"""		1393157	0					
ANR	1393530	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	2					
ANR	1393531	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	0					
ANR	1393532	Callee	ZSTR_VAL		1393157	0					
ANR	1393533	Identifier	ZSTR_VAL		1393157	0					
ANR	1393534	ArgumentList	new_persistent_script -> full_path		1393157	1					
ANR	1393535	Argument	new_persistent_script -> full_path		1393157	0					
ANR	1393536	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393537	Identifier	new_persistent_script		1393157	0					
ANR	1393538	Identifier	full_path		1393157	1					
ANR	1393539	Argument	new_persistent_script -> mem		1393157	3					
ANR	1393540	PtrMemberAccess	new_persistent_script -> mem		1393157	0					
ANR	1393541	Identifier	new_persistent_script		1393157	0					
ANR	1393542	Identifier	mem		1393157	1					
ANR	1393543	Argument	( char * ) new_persistent_script -> mem + new_persistent_script -> size		1393157	4					
ANR	1393544	AdditiveExpression	( char * ) new_persistent_script -> mem + new_persistent_script -> size		1393157	0		+			
ANR	1393545	CastExpression	( char * ) new_persistent_script -> mem		1393157	0					
ANR	1393546	CastTarget	char *		1393157	0					
ANR	1393547	PtrMemberAccess	new_persistent_script -> mem		1393157	1					
ANR	1393548	Identifier	new_persistent_script		1393157	0					
ANR	1393549	Identifier	mem		1393157	1					
ANR	1393550	PtrMemberAccess	new_persistent_script -> size		1393157	1					
ANR	1393551	Identifier	new_persistent_script		1393157	0					
ANR	1393552	Identifier	size		1393157	1					
ANR	1393553	Argument	ZCG ( mem )		1393157	5					
ANR	1393554	CallExpression	ZCG ( mem )		1393157	0					
ANR	1393555	Callee	ZCG		1393157	0					
ANR	1393556	Identifier	ZCG		1393157	0					
ANR	1393557	ArgumentList	mem		1393157	1					
ANR	1393558	Argument	mem		1393157	0					
ANR	1393559	Identifier	mem		1393157	0					
ANR	1393560	ExpressionStatement	new_persistent_script -> dynamic_members . checksum = zend_accel_script_checksum ( new_persistent_script )	1293:1:37049:37148	1393157	17	True				
ANR	1393561	AssignmentExpression	new_persistent_script -> dynamic_members . checksum = zend_accel_script_checksum ( new_persistent_script )		1393157	0		=			
ANR	1393562	MemberAccess	new_persistent_script -> dynamic_members . checksum		1393157	0					
ANR	1393563	PtrMemberAccess	new_persistent_script -> dynamic_members		1393157	0					
ANR	1393564	Identifier	new_persistent_script		1393157	0					
ANR	1393565	Identifier	dynamic_members		1393157	1					
ANR	1393566	Identifier	checksum		1393157	1					
ANR	1393567	CallExpression	zend_accel_script_checksum ( new_persistent_script )		1393157	1					
ANR	1393568	Callee	zend_accel_script_checksum		1393157	0					
ANR	1393569	Identifier	zend_accel_script_checksum		1393157	0					
ANR	1393570	ArgumentList	new_persistent_script		1393157	1					
ANR	1393571	Argument	new_persistent_script		1393157	0					
ANR	1393572	Identifier	new_persistent_script		1393157	0					
ANR	1393573	ExpressionStatement	"bucket = zend_accel_hash_update ( & ZCSG ( hash ) , ZSTR_VAL ( new_persistent_script -> full_path ) , ZSTR_LEN ( new_persistent_script -> full_path ) , 0 , new_persistent_script )"	1296:1:37200:37358	1393157	18	True				
ANR	1393574	AssignmentExpression	"bucket = zend_accel_hash_update ( & ZCSG ( hash ) , ZSTR_VAL ( new_persistent_script -> full_path ) , ZSTR_LEN ( new_persistent_script -> full_path ) , 0 , new_persistent_script )"		1393157	0		=			
ANR	1393575	Identifier	bucket		1393157	0					
ANR	1393576	CallExpression	"zend_accel_hash_update ( & ZCSG ( hash ) , ZSTR_VAL ( new_persistent_script -> full_path ) , ZSTR_LEN ( new_persistent_script -> full_path ) , 0 , new_persistent_script )"		1393157	1					
ANR	1393577	Callee	zend_accel_hash_update		1393157	0					
ANR	1393578	Identifier	zend_accel_hash_update		1393157	0					
ANR	1393579	ArgumentList	& ZCSG ( hash )		1393157	1					
ANR	1393580	Argument	& ZCSG ( hash )		1393157	0					
ANR	1393581	UnaryOperationExpression	& ZCSG ( hash )		1393157	0					
ANR	1393582	UnaryOperator	&		1393157	0					
ANR	1393583	CallExpression	ZCSG ( hash )		1393157	1					
ANR	1393584	Callee	ZCSG		1393157	0					
ANR	1393585	Identifier	ZCSG		1393157	0					
ANR	1393586	ArgumentList	hash		1393157	1					
ANR	1393587	Argument	hash		1393157	0					
ANR	1393588	Identifier	hash		1393157	0					
ANR	1393589	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	1					
ANR	1393590	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	0					
ANR	1393591	Callee	ZSTR_VAL		1393157	0					
ANR	1393592	Identifier	ZSTR_VAL		1393157	0					
ANR	1393593	ArgumentList	new_persistent_script -> full_path		1393157	1					
ANR	1393594	Argument	new_persistent_script -> full_path		1393157	0					
ANR	1393595	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393596	Identifier	new_persistent_script		1393157	0					
ANR	1393597	Identifier	full_path		1393157	1					
ANR	1393598	Argument	ZSTR_LEN ( new_persistent_script -> full_path )		1393157	2					
ANR	1393599	CallExpression	ZSTR_LEN ( new_persistent_script -> full_path )		1393157	0					
ANR	1393600	Callee	ZSTR_LEN		1393157	0					
ANR	1393601	Identifier	ZSTR_LEN		1393157	0					
ANR	1393602	ArgumentList	new_persistent_script -> full_path		1393157	1					
ANR	1393603	Argument	new_persistent_script -> full_path		1393157	0					
ANR	1393604	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393605	Identifier	new_persistent_script		1393157	0					
ANR	1393606	Identifier	full_path		1393157	1					
ANR	1393607	Argument	0		1393157	3					
ANR	1393608	PrimaryExpression	0		1393157	0					
ANR	1393609	Argument	new_persistent_script		1393157	4					
ANR	1393610	Identifier	new_persistent_script		1393157	0					
ANR	1393611	IfStatement	if ( bucket )		1393157	19					
ANR	1393612	Condition	bucket	1297:5:37365:37370	1393157	0	True				
ANR	1393613	Identifier	bucket		1393157	0					
ANR	1393614	CompoundStatement		89:13:3133:3133	1393157	1					
ANR	1393615	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""Cached script '%s'"" , new_persistent_script -> full_path )"	1298:2:37377:37465	1393157	0	True				
ANR	1393616	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""Cached script '%s'"" , new_persistent_script -> full_path )"		1393157	0					
ANR	1393617	Callee	zend_accel_error		1393157	0					
ANR	1393618	Identifier	zend_accel_error		1393157	0					
ANR	1393619	ArgumentList	ACCEL_LOG_INFO		1393157	1					
ANR	1393620	Argument	ACCEL_LOG_INFO		1393157	0					
ANR	1393621	Identifier	ACCEL_LOG_INFO		1393157	0					
ANR	1393622	Argument	"""Cached script '%s'"""		1393157	1					
ANR	1393623	PrimaryExpression	"""Cached script '%s'"""		1393157	0					
ANR	1393624	Argument	new_persistent_script -> full_path		1393157	2					
ANR	1393625	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393626	Identifier	new_persistent_script		1393157	0					
ANR	1393627	Identifier	full_path		1393157	1					
ANR	1393628	IfStatement	"if ( key && memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0 && ( ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0 ) )"		1393157	1					
ANR	1393629	Condition	"key && memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0 && ( ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0 )"	1299:6:37473:37769	1393157	0	True				
ANR	1393630	AndExpression	"key && memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0 && ( ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0 )"		1393157	0		&&			
ANR	1393631	Identifier	key		1393157	0					
ANR	1393632	AndExpression	"memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0 && ( ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0 )"		1393157	1		&&			
ANR	1393633	EqualityExpression	"memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 ) != 0"		1393157	0		!=			
ANR	1393634	CallExpression	"memcmp ( key , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"		1393157	0					
ANR	1393635	Callee	memcmp		1393157	0					
ANR	1393636	Identifier	memcmp		1393157	0					
ANR	1393637	ArgumentList	key		1393157	1					
ANR	1393638	Argument	key		1393157	0					
ANR	1393639	Identifier	key		1393157	0					
ANR	1393640	Argument	"""phar://"""		1393157	1					
ANR	1393641	PrimaryExpression	"""phar://"""		1393157	0					
ANR	1393642	Argument	"sizeof ( ""phar://"" ) - 1"		1393157	2					
ANR	1393643	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		1393157	0		-			
ANR	1393644	SizeofExpression	"sizeof ( ""phar://"" )"		1393157	0					
ANR	1393645	Sizeof	sizeof		1393157	0					
ANR	1393646	PrimaryExpression	"""phar://"""		1393157	1					
ANR	1393647	PrimaryExpression	1		1393157	1					
ANR	1393648	PrimaryExpression	0		1393157	1					
ANR	1393649	OrExpression	"ZSTR_LEN ( new_persistent_script -> full_path ) != key_length || memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0"		1393157	1		||			
ANR	1393650	EqualityExpression	ZSTR_LEN ( new_persistent_script -> full_path ) != key_length		1393157	0		!=			
ANR	1393651	CallExpression	ZSTR_LEN ( new_persistent_script -> full_path )		1393157	0					
ANR	1393652	Callee	ZSTR_LEN		1393157	0					
ANR	1393653	Identifier	ZSTR_LEN		1393157	0					
ANR	1393654	ArgumentList	new_persistent_script -> full_path		1393157	1					
ANR	1393655	Argument	new_persistent_script -> full_path		1393157	0					
ANR	1393656	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393657	Identifier	new_persistent_script		1393157	0					
ANR	1393658	Identifier	full_path		1393157	1					
ANR	1393659	Identifier	key_length		1393157	1					
ANR	1393660	EqualityExpression	"memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length ) != 0"		1393157	1		!=			
ANR	1393661	CallExpression	"memcmp ( ZSTR_VAL ( new_persistent_script -> full_path ) , key , key_length )"		1393157	0					
ANR	1393662	Callee	memcmp		1393157	0					
ANR	1393663	Identifier	memcmp		1393157	0					
ANR	1393664	ArgumentList	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	1					
ANR	1393665	Argument	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	0					
ANR	1393666	CallExpression	ZSTR_VAL ( new_persistent_script -> full_path )		1393157	0					
ANR	1393667	Callee	ZSTR_VAL		1393157	0					
ANR	1393668	Identifier	ZSTR_VAL		1393157	0					
ANR	1393669	ArgumentList	new_persistent_script -> full_path		1393157	1					
ANR	1393670	Argument	new_persistent_script -> full_path		1393157	0					
ANR	1393671	PtrMemberAccess	new_persistent_script -> full_path		1393157	0					
ANR	1393672	Identifier	new_persistent_script		1393157	0					
ANR	1393673	Identifier	full_path		1393157	1					
ANR	1393674	Argument	key		1393157	1					
ANR	1393675	Identifier	key		1393157	0					
ANR	1393676	Argument	key_length		1393157	2					
ANR	1393677	Identifier	key_length		1393157	0					
ANR	1393678	PrimaryExpression	0		1393157	1					
ANR	1393679	CompoundStatement		95:82:3532:3532	1393157	1					
ANR	1393680	IfStatement	"if ( zend_accel_hash_update ( & ZCSG ( hash ) , key , key_length , 1 , bucket ) )"		1393157	0					
ANR	1393681	Condition	"zend_accel_hash_update ( & ZCSG ( hash ) , key , key_length , 1 , bucket )"	1305:7:37843:37905	1393157	0	True				
ANR	1393682	CallExpression	"zend_accel_hash_update ( & ZCSG ( hash ) , key , key_length , 1 , bucket )"		1393157	0					
ANR	1393683	Callee	zend_accel_hash_update		1393157	0					
ANR	1393684	Identifier	zend_accel_hash_update		1393157	0					
ANR	1393685	ArgumentList	& ZCSG ( hash )		1393157	1					
ANR	1393686	Argument	& ZCSG ( hash )		1393157	0					
ANR	1393687	UnaryOperationExpression	& ZCSG ( hash )		1393157	0					
ANR	1393688	UnaryOperator	&		1393157	0					
ANR	1393689	CallExpression	ZCSG ( hash )		1393157	1					
ANR	1393690	Callee	ZCSG		1393157	0					
ANR	1393691	Identifier	ZCSG		1393157	0					
ANR	1393692	ArgumentList	hash		1393157	1					
ANR	1393693	Argument	hash		1393157	0					
ANR	1393694	Identifier	hash		1393157	0					
ANR	1393695	Argument	key		1393157	1					
ANR	1393696	Identifier	key		1393157	0					
ANR	1393697	Argument	key_length		1393157	2					
ANR	1393698	Identifier	key_length		1393157	0					
ANR	1393699	Argument	1		1393157	3					
ANR	1393700	PrimaryExpression	1		1393157	0					
ANR	1393701	Argument	bucket		1393157	4					
ANR	1393702	Identifier	bucket		1393157	0					
ANR	1393703	CompoundStatement		97:72:3668:3668	1393157	1					
ANR	1393704	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""Added key '%s'"" , key )"	1306:4:37914:37969	1393157	0	True				
ANR	1393705	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""Added key '%s'"" , key )"		1393157	0					
ANR	1393706	Callee	zend_accel_error		1393157	0					
ANR	1393707	Identifier	zend_accel_error		1393157	0					
ANR	1393708	ArgumentList	ACCEL_LOG_INFO		1393157	1					
ANR	1393709	Argument	ACCEL_LOG_INFO		1393157	0					
ANR	1393710	Identifier	ACCEL_LOG_INFO		1393157	0					
ANR	1393711	Argument	"""Added key '%s'"""		1393157	1					
ANR	1393712	PrimaryExpression	"""Added key '%s'"""		1393157	0					
ANR	1393713	Argument	key		1393157	2					
ANR	1393714	Identifier	key		1393157	0					
ANR	1393715	ElseStatement	else		1393157	0					
ANR	1393716	CompoundStatement		99:10:3741:3741	1393157	0					
ANR	1393717	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"	1308:4:37987:38054	1393157	0	True				
ANR	1393718	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""No more entries in hash table!"" )"		1393157	0					
ANR	1393719	Callee	zend_accel_error		1393157	0					
ANR	1393720	Identifier	zend_accel_error		1393157	0					
ANR	1393721	ArgumentList	ACCEL_LOG_DEBUG		1393157	1					
ANR	1393722	Argument	ACCEL_LOG_DEBUG		1393157	0					
ANR	1393723	Identifier	ACCEL_LOG_DEBUG		1393157	0					
ANR	1393724	Argument	"""No more entries in hash table!"""		1393157	1					
ANR	1393725	PrimaryExpression	"""No more entries in hash table!"""		1393157	0					
ANR	1393726	ExpressionStatement	ZSMMG ( memory_exhausted ) = 1	1309:4:38060:38087	1393157	1	True				
ANR	1393727	AssignmentExpression	ZSMMG ( memory_exhausted ) = 1		1393157	0		=			
ANR	1393728	CallExpression	ZSMMG ( memory_exhausted )		1393157	0					
ANR	1393729	Callee	ZSMMG		1393157	0					
ANR	1393730	Identifier	ZSMMG		1393157	0					
ANR	1393731	ArgumentList	memory_exhausted		1393157	1					
ANR	1393732	Argument	memory_exhausted		1393157	0					
ANR	1393733	Identifier	memory_exhausted		1393157	0					
ANR	1393734	PrimaryExpression	1		1393157	1					
ANR	1393735	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )	1310:4:38093:38153	1393157	2	True				
ANR	1393736	CallExpression	zend_accel_schedule_restart_if_necessary ( ACCEL_RESTART_HASH )		1393157	0					
ANR	1393737	Callee	zend_accel_schedule_restart_if_necessary		1393157	0					
ANR	1393738	Identifier	zend_accel_schedule_restart_if_necessary		1393157	0					
ANR	1393739	ArgumentList	ACCEL_RESTART_HASH		1393157	1					
ANR	1393740	Argument	ACCEL_RESTART_HASH		1393157	0					
ANR	1393741	Identifier	ACCEL_RESTART_HASH		1393157	0					
ANR	1393742	ExpressionStatement	new_persistent_script -> dynamic_members . memory_consumption = ZEND_ALIGNED_SIZE ( new_persistent_script -> size )	1315:1:38169:38275	1393157	20	True				
ANR	1393743	AssignmentExpression	new_persistent_script -> dynamic_members . memory_consumption = ZEND_ALIGNED_SIZE ( new_persistent_script -> size )		1393157	0		=			
ANR	1393744	MemberAccess	new_persistent_script -> dynamic_members . memory_consumption		1393157	0					
ANR	1393745	PtrMemberAccess	new_persistent_script -> dynamic_members		1393157	0					
ANR	1393746	Identifier	new_persistent_script		1393157	0					
ANR	1393747	Identifier	dynamic_members		1393157	1					
ANR	1393748	Identifier	memory_consumption		1393157	1					
ANR	1393749	CallExpression	ZEND_ALIGNED_SIZE ( new_persistent_script -> size )		1393157	1					
ANR	1393750	Callee	ZEND_ALIGNED_SIZE		1393157	0					
ANR	1393751	Identifier	ZEND_ALIGNED_SIZE		1393157	0					
ANR	1393752	ArgumentList	new_persistent_script -> size		1393157	1					
ANR	1393753	Argument	new_persistent_script -> size		1393157	0					
ANR	1393754	PtrMemberAccess	new_persistent_script -> size		1393157	0					
ANR	1393755	Identifier	new_persistent_script		1393157	0					
ANR	1393756	Identifier	size		1393157	1					
ANR	1393757	ExpressionStatement	zend_shared_alloc_unlock ( )	1317:1:38279:38305	1393157	21	True				
ANR	1393758	CallExpression	zend_shared_alloc_unlock ( )		1393157	0					
ANR	1393759	Callee	zend_shared_alloc_unlock		1393157	0					
ANR	1393760	Identifier	zend_shared_alloc_unlock		1393157	0					
ANR	1393761	ArgumentList			1393157	1					
ANR	1393762	IfStatement	if ( ZCG ( accel_directives ) . file_cache )		1393157	22					
ANR	1393763	Condition	ZCG ( accel_directives ) . file_cache	1320:5:38344:38375	1393157	0	True				
ANR	1393764	MemberAccess	ZCG ( accel_directives ) . file_cache		1393157	0					
ANR	1393765	CallExpression	ZCG ( accel_directives )		1393157	0					
ANR	1393766	Callee	ZCG		1393157	0					
ANR	1393767	Identifier	ZCG		1393157	0					
ANR	1393768	ArgumentList	accel_directives		1393157	1					
ANR	1393769	Argument	accel_directives		1393157	0					
ANR	1393770	Identifier	accel_directives		1393157	0					
ANR	1393771	Identifier	file_cache		1393157	1					
ANR	1393772	CompoundStatement		112:39:4138:4138	1393157	1					
ANR	1393773	ExpressionStatement	SHM_PROTECT ( )	1321:2:38382:38395	1393157	0	True				
ANR	1393774	CallExpression	SHM_PROTECT ( )		1393157	0					
ANR	1393775	Callee	SHM_PROTECT		1393157	0					
ANR	1393776	Identifier	SHM_PROTECT		1393157	0					
ANR	1393777	ArgumentList			1393157	1					
ANR	1393778	ExpressionStatement	"zend_file_cache_script_store ( new_persistent_script , 1 )"	1322:2:38399:38453	1393157	1	True				
ANR	1393779	CallExpression	"zend_file_cache_script_store ( new_persistent_script , 1 )"		1393157	0					
ANR	1393780	Callee	zend_file_cache_script_store		1393157	0					
ANR	1393781	Identifier	zend_file_cache_script_store		1393157	0					
ANR	1393782	ArgumentList	new_persistent_script		1393157	1					
ANR	1393783	Argument	new_persistent_script		1393157	0					
ANR	1393784	Identifier	new_persistent_script		1393157	0					
ANR	1393785	Argument	1		1393157	1					
ANR	1393786	PrimaryExpression	1		1393157	0					
ANR	1393787	ExpressionStatement	SHM_UNPROTECT ( )	1323:2:38457:38472	1393157	2	True				
ANR	1393788	CallExpression	SHM_UNPROTECT ( )		1393157	0					
ANR	1393789	Callee	SHM_UNPROTECT		1393157	0					
ANR	1393790	Identifier	SHM_UNPROTECT		1393157	0					
ANR	1393791	ArgumentList			1393157	1					
ANR	1393792	ExpressionStatement	* from_shared_memory = 1	1327:1:38486:38509	1393157	23	True				
ANR	1393793	AssignmentExpression	* from_shared_memory = 1		1393157	0		=			
ANR	1393794	UnaryOperationExpression	* from_shared_memory		1393157	0					
ANR	1393795	UnaryOperator	*		1393157	0					
ANR	1393796	Identifier	from_shared_memory		1393157	1					
ANR	1393797	PrimaryExpression	1		1393157	1					
ANR	1393798	ReturnStatement	return new_persistent_script ;	1328:1:38512:38540	1393157	24	True				
ANR	1393799	Identifier	new_persistent_script		1393157	0					
ANR	1393800	ReturnType	static zend_persistent_script *		1393157	1					
ANR	1393801	Identifier	cache_script_in_shared_memory		1393157	2					
ANR	1393802	ParameterList	"zend_persistent_script * new_persistent_script , char * key , unsigned int key_length , int * from_shared_memory"		1393157	3					
ANR	1393803	Parameter	zend_persistent_script * new_persistent_script	1208:61:34131:34175	1393157	0	True				
ANR	1393804	ParameterType	zend_persistent_script *		1393157	0					
ANR	1393805	Identifier	new_persistent_script		1393157	1					
ANR	1393806	Parameter	char * key	1208:108:34178:34186	1393157	1	True				
ANR	1393807	ParameterType	char *		1393157	0					
ANR	1393808	Identifier	key		1393157	1					
ANR	1393809	Parameter	unsigned int key_length	1208:119:34189:34211	1393157	2	True				
ANR	1393810	ParameterType	unsigned int		1393157	0					
ANR	1393811	Identifier	key_length		1393157	1					
ANR	1393812	Parameter	int * from_shared_memory	1208:144:34214:34236	1393157	3	True				
ANR	1393813	ParameterType	int *		1393157	0					
ANR	1393814	Identifier	from_shared_memory		1393157	1					
ANR	1393815	CFGEntryNode	ENTRY		1393157		True				
ANR	1393816	CFGExitNode	EXIT		1393157		True				
ANR	1393817	Symbol	new_persistent_script -> timestamp		1393157						
ANR	1393818	Symbol	new_persistent_script -> full_path		1393157						
ANR	1393819	Symbol	ACCEL_RESTART_OOM		1393157						
ANR	1393820	Symbol	existing_persistent_script -> corrupted		1393157						
ANR	1393821	Symbol	new_persistent_script -> dynamic_members . memory_consumption		1393157						
ANR	1393822	Symbol	from_shared_memory		1393157						
ANR	1393823	Symbol	new_persistent_script -> is_phar		1393157						
ANR	1393824	Symbol	memcmp		1393157						
ANR	1393825	Symbol	ACCEL_LOG_DEBUG		1393157						
ANR	1393826	Symbol	ZEND_ALIGNED_SIZE		1393157						
ANR	1393827	Symbol	new_persistent_script		1393157						
ANR	1393828	Symbol	ACCEL_LOG_ERROR		1393157						
ANR	1393829	Symbol	* existing_persistent_script		1393157						
ANR	1393830	Symbol	zend_accel_hash_update		1393157						
ANR	1393831	Symbol	zend_accel_script_persistable		1393157						
ANR	1393832	Symbol	memory_used		1393157						
ANR	1393833	Symbol	memory_exhausted		1393157						
ANR	1393834	Symbol	zend_accel_script_persist_calc		1393157						
ANR	1393835	Symbol	bucket		1393157						
ANR	1393836	Symbol	& ZCSG		1393157						
ANR	1393837	Symbol	* bucket		1393157						
ANR	1393838	Symbol	new_persistent_script -> dynamic_members		1393157						
ANR	1393839	Symbol	strstr		1393157						
ANR	1393840	Symbol	zend_accel_script_checksum		1393157						
ANR	1393841	Symbol	hash		1393157						
ANR	1393842	Symbol	ZCG ( accel_directives ) . file_cache		1393157						
ANR	1393843	Symbol	ZCG		1393157						
ANR	1393844	Symbol	ACCEL_RESTART_HASH		1393157						
ANR	1393845	Symbol	zend_shared_alloc		1393157						
ANR	1393846	Symbol	zend_accel_hash_find_entry		1393157						
ANR	1393847	Symbol	& key		1393157						
ANR	1393848	Symbol	existing_persistent_script		1393157						
ANR	1393849	Symbol	ZCG ( accel_directives ) . validate_timestamps		1393157						
ANR	1393850	Symbol	~63L		1393157						
ANR	1393851	Symbol	new_persistent_script -> mem		1393157						
ANR	1393852	Symbol	mem		1393157						
ANR	1393853	Symbol	ZSMMG		1393157						
ANR	1393854	Symbol	ACCEL_LOG_WARNING		1393157						
ANR	1393855	Symbol	key_length		1393157						
ANR	1393856	Symbol	ACCEL_LOG_INFO		1393157						
ANR	1393857	Symbol	existing_persistent_script -> timestamp		1393157						
ANR	1393858	Symbol	key		1393157						
ANR	1393859	Symbol	zend_accel_hash_is_full		1393157						
ANR	1393860	Symbol	* from_shared_memory		1393157						
ANR	1393861	Symbol	bucket -> data		1393157						
ANR	1393862	Symbol	ZSTR_VAL		1393157						
ANR	1393863	Symbol	zend_accel_script_persist		1393157						
ANR	1393864	Symbol	new_persistent_script -> dynamic_members . checksum		1393157						
ANR	1393865	Symbol	ZSTR_LEN		1393157						
ANR	1393866	Symbol	* new_persistent_script		1393157						
ANR	1393867	Symbol	accel_directives		1393157						
ANR	1393868	Symbol	zend_accel_script_optimize		1393157						
ANR	1393869	Symbol	new_persistent_script -> size		1393157						
ANR	1393870	ClassDef	jit_auto_global_info	1331:13:38558:38815							
ANR	1393871	DeclStmt									
ANR	1393872	Decl							const char	const char *	name
ANR	1393873	DeclStmt									
ANR	1393874	Decl							size_t	size_t	len
ANR	1393875	DeclStmt									
ANR	1393876	Decl							jit_auto_global_info	jit_auto_global_info [ ]	jit_auto_globals_info
ANR	1393877	DeclStmt									
ANR	1393878	Decl							zend_string	zend_string * [ 4 ]	jit_auto_globals_str
ANR	1393879	Function	zend_accel_get_auto_globals	1344:0:38864:39174							
ANR	1393880	FunctionDef	zend_accel_get_auto_globals ()		1393879	0					
ANR	1393881	CompoundStatement		1345:0:38909:39174	1393879	0					
ANR	1393882	IdentifierDeclStatement	"int i , ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) ) ;"	1346:1:38912:38995	1393879	0	True				
ANR	1393883	IdentifierDecl	i		1393879	0					
ANR	1393884	IdentifierDeclType	int		1393879	0					
ANR	1393885	Identifier	i		1393879	1					
ANR	1393886	IdentifierDecl	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		1393879	1					
ANR	1393887	IdentifierDeclType	int		1393879	0					
ANR	1393888	Identifier	ag_size		1393879	1					
ANR	1393889	AssignmentExpression	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		1393879	2		=			
ANR	1393890	Identifier	ag_size		1393879	0					
ANR	1393891	MultiplicativeExpression	sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] )		1393879	1		/			
ANR	1393892	SizeofExpression	sizeof ( jit_auto_globals_info )		1393879	0					
ANR	1393893	Sizeof	sizeof		1393879	0					
ANR	1393894	SizeofOperand	jit_auto_globals_info		1393879	1					
ANR	1393895	SizeofExpression	sizeof ( jit_auto_globals_info [ 0 ] )		1393879	1					
ANR	1393896	Sizeof	sizeof		1393879	0					
ANR	1393897	ArrayIndexing	jit_auto_globals_info [ 0 ]		1393879	1					
ANR	1393898	Identifier	jit_auto_globals_info		1393879	0					
ANR	1393899	PrimaryExpression	0		1393879	1					
ANR	1393900	IdentifierDeclStatement	int n = 1 ;	1347:1:38998:39007	1393879	1	True				
ANR	1393901	IdentifierDecl	n = 1		1393879	0					
ANR	1393902	IdentifierDeclType	int		1393879	0					
ANR	1393903	Identifier	n		1393879	1					
ANR	1393904	AssignmentExpression	n = 1		1393879	2		=			
ANR	1393905	Identifier	n		1393879	0					
ANR	1393906	PrimaryExpression	1		1393879	1					
ANR	1393907	IdentifierDeclStatement	int mask = 0 ;	1348:1:39010:39022	1393879	2	True				
ANR	1393908	IdentifierDecl	mask = 0		1393879	0					
ANR	1393909	IdentifierDeclType	int		1393879	0					
ANR	1393910	Identifier	mask		1393879	1					
ANR	1393911	AssignmentExpression	mask = 0		1393879	2		=			
ANR	1393912	Identifier	mask		1393879	0					
ANR	1393913	PrimaryExpression	0		1393879	1					
ANR	1393914	ForStatement	for ( i = 0 ; i < ag_size ; i ++ )		1393879	3					
ANR	1393915	ForInit	i = 0 ;	1350:6:39031:39036	1393879	0	True				
ANR	1393916	AssignmentExpression	i = 0		1393879	0		=			
ANR	1393917	Identifier	i		1393879	0					
ANR	1393918	PrimaryExpression	0		1393879	1					
ANR	1393919	Condition	i < ag_size	1350:13:39038:39048	1393879	1	True				
ANR	1393920	RelationalExpression	i < ag_size		1393879	0		<			
ANR	1393921	Identifier	i		1393879	0					
ANR	1393922	Identifier	ag_size		1393879	1					
ANR	1393923	PostIncDecOperationExpression	i ++	1350:27:39052:39054	1393879	2	True				
ANR	1393924	Identifier	i		1393879	0					
ANR	1393925	IncDec	++		1393879	1					
ANR	1393926	CompoundStatement		6:32:147:147	1393879	3					
ANR	1393927	IfStatement	"if ( zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ i ] ) )"		1393879	0					
ANR	1393928	Condition	"zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ i ] )"	1351:6:39065:39124	1393879	0	True				
ANR	1393929	CallExpression	"zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ i ] )"		1393879	0					
ANR	1393930	Callee	zend_hash_exists		1393879	0					
ANR	1393931	Identifier	zend_hash_exists		1393879	0					
ANR	1393932	ArgumentList	& EG ( symbol_table )		1393879	1					
ANR	1393933	Argument	& EG ( symbol_table )		1393879	0					
ANR	1393934	UnaryOperationExpression	& EG ( symbol_table )		1393879	0					
ANR	1393935	UnaryOperator	&		1393879	0					
ANR	1393936	CallExpression	EG ( symbol_table )		1393879	1					
ANR	1393937	Callee	EG		1393879	0					
ANR	1393938	Identifier	EG		1393879	0					
ANR	1393939	ArgumentList	symbol_table		1393879	1					
ANR	1393940	Argument	symbol_table		1393879	0					
ANR	1393941	Identifier	symbol_table		1393879	0					
ANR	1393942	Argument	jit_auto_globals_str [ i ]		1393879	1					
ANR	1393943	ArrayIndexing	jit_auto_globals_str [ i ]		1393879	0					
ANR	1393944	Identifier	jit_auto_globals_str		1393879	0					
ANR	1393945	Identifier	i		1393879	1					
ANR	1393946	CompoundStatement		7:68:217:217	1393879	1					
ANR	1393947	ExpressionStatement	mask |= n	1352:3:39132:39141	1393879	0	True				
ANR	1393948	AssignmentExpression	mask |= n		1393879	0		|=			
ANR	1393949	Identifier	mask		1393879	0					
ANR	1393950	Identifier	n		1393879	1					
ANR	1393951	ExpressionStatement	n += n	1354:2:39149:39155	1393879	1	True				
ANR	1393952	AssignmentExpression	n += n		1393879	0		+=			
ANR	1393953	Identifier	n		1393879	0					
ANR	1393954	Identifier	n		1393879	1					
ANR	1393955	ReturnStatement	return mask ;	1356:1:39161:39172	1393879	4	True				
ANR	1393956	Identifier	mask		1393879	0					
ANR	1393957	ReturnType	static int		1393879	1					
ANR	1393958	Identifier	zend_accel_get_auto_globals		1393879	2					
ANR	1393959	ParameterList			1393879	3					
ANR	1393960	CFGEntryNode	ENTRY		1393879		True				
ANR	1393961	CFGExitNode	EXIT		1393879		True				
ANR	1393962	Symbol	* i		1393879						
ANR	1393963	Symbol	jit_auto_globals_info		1393879						
ANR	1393964	Symbol	jit_auto_globals_str		1393879						
ANR	1393965	Symbol	i		1393879						
ANR	1393966	Symbol	zend_hash_exists		1393879						
ANR	1393967	Symbol	ag_size		1393879						
ANR	1393968	Symbol	symbol_table		1393879						
ANR	1393969	Symbol	* jit_auto_globals_str		1393879						
ANR	1393970	Symbol	* jit_auto_globals_info		1393879						
ANR	1393971	Symbol	& EG		1393879						
ANR	1393972	Symbol	n		1393879						
ANR	1393973	Symbol	mask		1393879						
ANR	1393974	Function	zend_accel_get_auto_globals_no_jit	1359:0:39177:39326							
ANR	1393975	FunctionDef	zend_accel_get_auto_globals_no_jit ()		1393974	0					
ANR	1393976	CompoundStatement		1360:0:39229:39326	1393974	0					
ANR	1393977	IfStatement	"if ( zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ 3 ] ) )"		1393974	0					
ANR	1393978	Condition	"zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ 3 ] )"	1361:5:39236:39295	1393974	0	True				
ANR	1393979	CallExpression	"zend_hash_exists ( & EG ( symbol_table ) , jit_auto_globals_str [ 3 ] )"		1393974	0					
ANR	1393980	Callee	zend_hash_exists		1393974	0					
ANR	1393981	Identifier	zend_hash_exists		1393974	0					
ANR	1393982	ArgumentList	& EG ( symbol_table )		1393974	1					
ANR	1393983	Argument	& EG ( symbol_table )		1393974	0					
ANR	1393984	UnaryOperationExpression	& EG ( symbol_table )		1393974	0					
ANR	1393985	UnaryOperator	&		1393974	0					
ANR	1393986	CallExpression	EG ( symbol_table )		1393974	1					
ANR	1393987	Callee	EG		1393974	0					
ANR	1393988	Identifier	EG		1393974	0					
ANR	1393989	ArgumentList	symbol_table		1393974	1					
ANR	1393990	Argument	symbol_table		1393974	0					
ANR	1393991	Identifier	symbol_table		1393974	0					
ANR	1393992	Argument	jit_auto_globals_str [ 3 ]		1393974	1					
ANR	1393993	ArrayIndexing	jit_auto_globals_str [ 3 ]		1393974	0					
ANR	1393994	Identifier	jit_auto_globals_str		1393974	0					
ANR	1393995	PrimaryExpression	3		1393974	1					
ANR	1393996	CompoundStatement		2:67:68:68	1393974	1					
ANR	1393997	ReturnStatement	return 8 ;	1362:2:39302:39310	1393974	0	True				
ANR	1393998	PrimaryExpression	8		1393974	0					
ANR	1393999	ReturnStatement	return 0 ;	1364:1:39316:39324	1393974	1	True				
ANR	1394000	PrimaryExpression	0		1393974	0					
ANR	1394001	ReturnType	static int		1393974	1					
ANR	1394002	Identifier	zend_accel_get_auto_globals_no_jit		1393974	2					
ANR	1394003	ParameterList			1393974	3					
ANR	1394004	CFGEntryNode	ENTRY		1393974		True				
ANR	1394005	CFGExitNode	EXIT		1393974		True				
ANR	1394006	Symbol	jit_auto_globals_str		1393974						
ANR	1394007	Symbol	zend_hash_exists		1393974						
ANR	1394008	Symbol	* jit_auto_globals_str		1393974						
ANR	1394009	Symbol	symbol_table		1393974						
ANR	1394010	Symbol	& EG		1393974						
ANR	1394011	Function	zend_accel_set_auto_globals	1367:0:39329:39665							
ANR	1394012	FunctionDef	zend_accel_set_auto_globals (int mask)		1394011	0					
ANR	1394013	CompoundStatement		1368:0:39379:39665	1394011	0					
ANR	1394014	IdentifierDeclStatement	"int i , ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) ) ;"	1369:1:39382:39465	1394011	0	True				
ANR	1394015	IdentifierDecl	i		1394011	0					
ANR	1394016	IdentifierDeclType	int		1394011	0					
ANR	1394017	Identifier	i		1394011	1					
ANR	1394018	IdentifierDecl	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		1394011	1					
ANR	1394019	IdentifierDeclType	int		1394011	0					
ANR	1394020	Identifier	ag_size		1394011	1					
ANR	1394021	AssignmentExpression	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		1394011	2		=			
ANR	1394022	Identifier	ag_size		1394011	0					
ANR	1394023	MultiplicativeExpression	sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] )		1394011	1		/			
ANR	1394024	SizeofExpression	sizeof ( jit_auto_globals_info )		1394011	0					
ANR	1394025	Sizeof	sizeof		1394011	0					
ANR	1394026	SizeofOperand	jit_auto_globals_info		1394011	1					
ANR	1394027	SizeofExpression	sizeof ( jit_auto_globals_info [ 0 ] )		1394011	1					
ANR	1394028	Sizeof	sizeof		1394011	0					
ANR	1394029	ArrayIndexing	jit_auto_globals_info [ 0 ]		1394011	1					
ANR	1394030	Identifier	jit_auto_globals_info		1394011	0					
ANR	1394031	PrimaryExpression	0		1394011	1					
ANR	1394032	IdentifierDeclStatement	int n = 1 ;	1370:1:39468:39477	1394011	1	True				
ANR	1394033	IdentifierDecl	n = 1		1394011	0					
ANR	1394034	IdentifierDeclType	int		1394011	0					
ANR	1394035	Identifier	n		1394011	1					
ANR	1394036	AssignmentExpression	n = 1		1394011	2		=			
ANR	1394037	Identifier	n		1394011	0					
ANR	1394038	PrimaryExpression	1		1394011	1					
ANR	1394039	ForStatement	for ( i = 0 ; i < ag_size ; i ++ )		1394011	2					
ANR	1394040	ForInit	i = 0 ;	1372:6:39486:39491	1394011	0	True				
ANR	1394041	AssignmentExpression	i = 0		1394011	0		=			
ANR	1394042	Identifier	i		1394011	0					
ANR	1394043	PrimaryExpression	0		1394011	1					
ANR	1394044	Condition	i < ag_size	1372:13:39493:39503	1394011	1	True				
ANR	1394045	RelationalExpression	i < ag_size		1394011	0		<			
ANR	1394046	Identifier	i		1394011	0					
ANR	1394047	Identifier	ag_size		1394011	1					
ANR	1394048	PostIncDecOperationExpression	i ++	1372:27:39507:39509	1394011	2	True				
ANR	1394049	Identifier	i		1394011	0					
ANR	1394050	IncDec	++		1394011	1					
ANR	1394051	CompoundStatement		5:32:132:132	1394011	3					
ANR	1394052	IfStatement	if ( ( mask & n ) && ! ( ZCG ( auto_globals_mask ) & n ) )		1394011	0					
ANR	1394053	Condition	( mask & n ) && ! ( ZCG ( auto_globals_mask ) & n )	1373:6:39520:39562	1394011	0	True				
ANR	1394054	AndExpression	( mask & n ) && ! ( ZCG ( auto_globals_mask ) & n )		1394011	0		&&			
ANR	1394055	BitAndExpression	mask & n		1394011	0		&			
ANR	1394056	Identifier	mask		1394011	0					
ANR	1394057	Identifier	n		1394011	1					
ANR	1394058	UnaryOperationExpression	! ( ZCG ( auto_globals_mask ) & n )		1394011	1					
ANR	1394059	UnaryOperator	!		1394011	0					
ANR	1394060	BitAndExpression	ZCG ( auto_globals_mask ) & n		1394011	1		&			
ANR	1394061	CallExpression	ZCG ( auto_globals_mask )		1394011	0					
ANR	1394062	Callee	ZCG		1394011	0					
ANR	1394063	Identifier	ZCG		1394011	0					
ANR	1394064	ArgumentList	auto_globals_mask		1394011	1					
ANR	1394065	Argument	auto_globals_mask		1394011	0					
ANR	1394066	Identifier	auto_globals_mask		1394011	0					
ANR	1394067	Identifier	n		1394011	1					
ANR	1394068	CompoundStatement		6:51:185:185	1394011	1					
ANR	1394069	ExpressionStatement	ZCG ( auto_globals_mask ) |= n	1374:3:39570:39597	1394011	0	True				
ANR	1394070	AssignmentExpression	ZCG ( auto_globals_mask ) |= n		1394011	0		|=			
ANR	1394071	CallExpression	ZCG ( auto_globals_mask )		1394011	0					
ANR	1394072	Callee	ZCG		1394011	0					
ANR	1394073	Identifier	ZCG		1394011	0					
ANR	1394074	ArgumentList	auto_globals_mask		1394011	1					
ANR	1394075	Argument	auto_globals_mask		1394011	0					
ANR	1394076	Identifier	auto_globals_mask		1394011	0					
ANR	1394077	Identifier	n		1394011	1					
ANR	1394078	ExpressionStatement	zend_is_auto_global ( jit_auto_globals_str [ i ] )	1375:3:39602:39646	1394011	1	True				
ANR	1394079	CallExpression	zend_is_auto_global ( jit_auto_globals_str [ i ] )		1394011	0					
ANR	1394080	Callee	zend_is_auto_global		1394011	0					
ANR	1394081	Identifier	zend_is_auto_global		1394011	0					
ANR	1394082	ArgumentList	jit_auto_globals_str [ i ]		1394011	1					
ANR	1394083	Argument	jit_auto_globals_str [ i ]		1394011	0					
ANR	1394084	ArrayIndexing	jit_auto_globals_str [ i ]		1394011	0					
ANR	1394085	Identifier	jit_auto_globals_str		1394011	0					
ANR	1394086	Identifier	i		1394011	1					
ANR	1394087	ExpressionStatement	n += n	1377:2:39654:39660	1394011	1	True				
ANR	1394088	AssignmentExpression	n += n		1394011	0		+=			
ANR	1394089	Identifier	n		1394011	0					
ANR	1394090	Identifier	n		1394011	1					
ANR	1394091	ReturnType	static void		1394011	1					
ANR	1394092	Identifier	zend_accel_set_auto_globals		1394011	2					
ANR	1394093	ParameterList	int mask		1394011	3					
ANR	1394094	Parameter	int mask	1367:40:39369:39376	1394011	0	True				
ANR	1394095	ParameterType	int		1394011	0					
ANR	1394096	Identifier	mask		1394011	1					
ANR	1394097	CFGEntryNode	ENTRY		1394011		True				
ANR	1394098	CFGExitNode	EXIT		1394011		True				
ANR	1394099	Symbol	auto_globals_mask		1394011						
ANR	1394100	Symbol	* i		1394011						
ANR	1394101	Symbol	jit_auto_globals_info		1394011						
ANR	1394102	Symbol	jit_auto_globals_str		1394011						
ANR	1394103	Symbol	i		1394011						
ANR	1394104	Symbol	ag_size		1394011						
ANR	1394105	Symbol	* jit_auto_globals_str		1394011						
ANR	1394106	Symbol	* jit_auto_globals_info		1394011						
ANR	1394107	Symbol	n		1394011						
ANR	1394108	Symbol	mask		1394011						
ANR	1394109	Symbol	ZCG		1394011						
ANR	1394110	Function	zend_accel_init_auto_globals	1381:0:39668:40080							
ANR	1394111	FunctionDef	zend_accel_init_auto_globals ()		1394110	0					
ANR	1394112	CompoundStatement		1382:0:39715:40080	1394110	0					
ANR	1394113	IdentifierDeclStatement	"int i , ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) ) ;"	1383:1:39718:39801	1394110	0	True				
ANR	1394114	IdentifierDecl	i		1394110	0					
ANR	1394115	IdentifierDeclType	int		1394110	0					
ANR	1394116	Identifier	i		1394110	1					
ANR	1394117	IdentifierDecl	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		1394110	1					
ANR	1394118	IdentifierDeclType	int		1394110	0					
ANR	1394119	Identifier	ag_size		1394110	1					
ANR	1394120	AssignmentExpression	ag_size = ( sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] ) )		1394110	2		=			
ANR	1394121	Identifier	ag_size		1394110	0					
ANR	1394122	MultiplicativeExpression	sizeof ( jit_auto_globals_info ) / sizeof ( jit_auto_globals_info [ 0 ] )		1394110	1		/			
ANR	1394123	SizeofExpression	sizeof ( jit_auto_globals_info )		1394110	0					
ANR	1394124	Sizeof	sizeof		1394110	0					
ANR	1394125	SizeofOperand	jit_auto_globals_info		1394110	1					
ANR	1394126	SizeofExpression	sizeof ( jit_auto_globals_info [ 0 ] )		1394110	1					
ANR	1394127	Sizeof	sizeof		1394110	0					
ANR	1394128	ArrayIndexing	jit_auto_globals_info [ 0 ]		1394110	1					
ANR	1394129	Identifier	jit_auto_globals_info		1394110	0					
ANR	1394130	PrimaryExpression	0		1394110	1					
ANR	1394131	ForStatement	for ( i = 0 ; i < ag_size ; i ++ )		1394110	1					
ANR	1394132	ForInit	i = 0 ;	1385:6:39810:39815	1394110	0	True				
ANR	1394133	AssignmentExpression	i = 0		1394110	0		=			
ANR	1394134	Identifier	i		1394110	0					
ANR	1394135	PrimaryExpression	0		1394110	1					
ANR	1394136	Condition	i < ag_size	1385:13:39817:39827	1394110	1	True				
ANR	1394137	RelationalExpression	i < ag_size		1394110	0		<			
ANR	1394138	Identifier	i		1394110	0					
ANR	1394139	Identifier	ag_size		1394110	1					
ANR	1394140	PostIncDecOperationExpression	i ++	1385:27:39831:39833	1394110	2	True				
ANR	1394141	Identifier	i		1394110	0					
ANR	1394142	IncDec	++		1394110	1					
ANR	1394143	CompoundStatement		4:32:120:120	1394110	3					
ANR	1394144	ExpressionStatement	"jit_auto_globals_str [ i ] = zend_string_init ( jit_auto_globals_info [ i ] . name , jit_auto_globals_info [ i ] . len , 1 )"	1386:2:39840:39946	1394110	0	True				
ANR	1394145	AssignmentExpression	"jit_auto_globals_str [ i ] = zend_string_init ( jit_auto_globals_info [ i ] . name , jit_auto_globals_info [ i ] . len , 1 )"		1394110	0		=			
ANR	1394146	ArrayIndexing	jit_auto_globals_str [ i ]		1394110	0					
ANR	1394147	Identifier	jit_auto_globals_str		1394110	0					
ANR	1394148	Identifier	i		1394110	1					
ANR	1394149	CallExpression	"zend_string_init ( jit_auto_globals_info [ i ] . name , jit_auto_globals_info [ i ] . len , 1 )"		1394110	1					
ANR	1394150	Callee	zend_string_init		1394110	0					
ANR	1394151	Identifier	zend_string_init		1394110	0					
ANR	1394152	ArgumentList	jit_auto_globals_info [ i ] . name		1394110	1					
ANR	1394153	Argument	jit_auto_globals_info [ i ] . name		1394110	0					
ANR	1394154	MemberAccess	jit_auto_globals_info [ i ] . name		1394110	0					
ANR	1394155	ArrayIndexing	jit_auto_globals_info [ i ]		1394110	0					
ANR	1394156	Identifier	jit_auto_globals_info		1394110	0					
ANR	1394157	Identifier	i		1394110	1					
ANR	1394158	Identifier	name		1394110	1					
ANR	1394159	Argument	jit_auto_globals_info [ i ] . len		1394110	1					
ANR	1394160	MemberAccess	jit_auto_globals_info [ i ] . len		1394110	0					
ANR	1394161	ArrayIndexing	jit_auto_globals_info [ i ]		1394110	0					
ANR	1394162	Identifier	jit_auto_globals_info		1394110	0					
ANR	1394163	Identifier	i		1394110	1					
ANR	1394164	Identifier	len		1394110	1					
ANR	1394165	Argument	1		1394110	2					
ANR	1394166	PrimaryExpression	1		1394110	0					
ANR	1394167	ExpressionStatement	zend_string_hash_val ( jit_auto_globals_str [ i ] )	1387:2:39950:39995	1394110	1	True				
ANR	1394168	CallExpression	zend_string_hash_val ( jit_auto_globals_str [ i ] )		1394110	0					
ANR	1394169	Callee	zend_string_hash_val		1394110	0					
ANR	1394170	Identifier	zend_string_hash_val		1394110	0					
ANR	1394171	ArgumentList	jit_auto_globals_str [ i ]		1394110	1					
ANR	1394172	Argument	jit_auto_globals_str [ i ]		1394110	0					
ANR	1394173	ArrayIndexing	jit_auto_globals_str [ i ]		1394110	0					
ANR	1394174	Identifier	jit_auto_globals_str		1394110	0					
ANR	1394175	Identifier	i		1394110	1					
ANR	1394176	ExpressionStatement	jit_auto_globals_str [ i ] = accel_new_interned_string ( jit_auto_globals_str [ i ] )	1388:2:39999:40075	1394110	2	True				
ANR	1394177	AssignmentExpression	jit_auto_globals_str [ i ] = accel_new_interned_string ( jit_auto_globals_str [ i ] )		1394110	0		=			
ANR	1394178	ArrayIndexing	jit_auto_globals_str [ i ]		1394110	0					
ANR	1394179	Identifier	jit_auto_globals_str		1394110	0					
ANR	1394180	Identifier	i		1394110	1					
ANR	1394181	CallExpression	accel_new_interned_string ( jit_auto_globals_str [ i ] )		1394110	1					
ANR	1394182	Callee	accel_new_interned_string		1394110	0					
ANR	1394183	Identifier	accel_new_interned_string		1394110	0					
ANR	1394184	ArgumentList	jit_auto_globals_str [ i ]		1394110	1					
ANR	1394185	Argument	jit_auto_globals_str [ i ]		1394110	0					
ANR	1394186	ArrayIndexing	jit_auto_globals_str [ i ]		1394110	0					
ANR	1394187	Identifier	jit_auto_globals_str		1394110	0					
ANR	1394188	Identifier	i		1394110	1					
ANR	1394189	ReturnType	static void		1394110	1					
ANR	1394190	Identifier	zend_accel_init_auto_globals		1394110	2					
ANR	1394191	ParameterList			1394110	3					
ANR	1394192	CFGEntryNode	ENTRY		1394110		True				
ANR	1394193	CFGExitNode	EXIT		1394110		True				
ANR	1394194	Symbol	zend_string_init		1394110						
ANR	1394195	Symbol	accel_new_interned_string		1394110						
ANR	1394196	Symbol	* i		1394110						
ANR	1394197	Symbol	jit_auto_globals_info		1394110						
ANR	1394198	Symbol	jit_auto_globals_info [ i ] . name		1394110						
ANR	1394199	Symbol	jit_auto_globals_str		1394110						
ANR	1394200	Symbol	jit_auto_globals_info [ i ] . len		1394110						
ANR	1394201	Symbol	i		1394110						
ANR	1394202	Symbol	ag_size		1394110						
ANR	1394203	Symbol	* jit_auto_globals_str		1394110						
ANR	1394204	Symbol	* jit_auto_globals_info		1394110						
ANR	1394205	Function	opcache_compile_file	1392:0:40083:45574							
ANR	1394206	FunctionDef	"opcache_compile_file (zend_file_handle * file_handle , int type , char * key , unsigned int key_length , zend_op_array * * op_array_p)"		1394205	0					
ANR	1394207	CompoundStatement		1393:0:40240:45574	1394205	0					
ANR	1394208	IdentifierDeclStatement	zend_persistent_script * new_persistent_script ;	1394:1:40243:40288	1394205	0	True				
ANR	1394209	IdentifierDecl	* new_persistent_script		1394205	0					
ANR	1394210	IdentifierDeclType	zend_persistent_script *		1394205	0					
ANR	1394211	Identifier	new_persistent_script		1394205	1					
ANR	1394212	IdentifierDeclStatement	zend_op_array * orig_active_op_array ;	1395:1:40291:40326	1394205	1	True				
ANR	1394213	IdentifierDecl	* orig_active_op_array		1394205	0					
ANR	1394214	IdentifierDeclType	zend_op_array *		1394205	0					
ANR	1394215	Identifier	orig_active_op_array		1394205	1					
ANR	1394216	IdentifierDeclStatement	"HashTable * orig_function_table , * orig_class_table ;"	1396:1:40329:40378	1394205	2	True				
ANR	1394217	IdentifierDecl	* orig_function_table		1394205	0					
ANR	1394218	IdentifierDeclType	HashTable *		1394205	0					
ANR	1394219	Identifier	orig_function_table		1394205	1					
ANR	1394220	IdentifierDecl	* orig_class_table		1394205	1					
ANR	1394221	IdentifierDeclType	HashTable *		1394205	0					
ANR	1394222	Identifier	orig_class_table		1394205	1					
ANR	1394223	IdentifierDeclStatement	zval orig_user_error_handler ;	1397:1:40381:40409	1394205	3	True				
ANR	1394224	IdentifierDecl	orig_user_error_handler		1394205	0					
ANR	1394225	IdentifierDeclType	zval		1394205	0					
ANR	1394226	Identifier	orig_user_error_handler		1394205	1					
ANR	1394227	IdentifierDeclStatement	zend_op_array * op_array ;	1398:1:40412:40435	1394205	4	True				
ANR	1394228	IdentifierDecl	* op_array		1394205	0					
ANR	1394229	IdentifierDeclType	zend_op_array *		1394205	0					
ANR	1394230	Identifier	op_array		1394205	1					
ANR	1394231	IdentifierDeclStatement	int do_bailout = 0 ;	1399:1:40438:40456	1394205	5	True				
ANR	1394232	IdentifierDecl	do_bailout = 0		1394205	0					
ANR	1394233	IdentifierDeclType	int		1394205	0					
ANR	1394234	Identifier	do_bailout		1394205	1					
ANR	1394235	AssignmentExpression	do_bailout = 0		1394205	2		=			
ANR	1394236	Identifier	do_bailout		1394205	0					
ANR	1394237	PrimaryExpression	0		1394205	1					
ANR	1394238	IdentifierDeclStatement	accel_time_t timestamp = 0 ;	1400:1:40459:40485	1394205	6	True				
ANR	1394239	IdentifierDecl	timestamp = 0		1394205	0					
ANR	1394240	IdentifierDeclType	accel_time_t		1394205	0					
ANR	1394241	Identifier	timestamp		1394205	1					
ANR	1394242	AssignmentExpression	timestamp = 0		1394205	2		=			
ANR	1394243	Identifier	timestamp		1394205	0					
ANR	1394244	PrimaryExpression	0		1394205	1					
ANR	1394245	IdentifierDeclStatement	uint32_t orig_compiler_options = 0 ;	1401:1:40488:40522	1394205	7	True				
ANR	1394246	IdentifierDecl	orig_compiler_options = 0		1394205	0					
ANR	1394247	IdentifierDeclType	uint32_t		1394205	0					
ANR	1394248	Identifier	orig_compiler_options		1394205	1					
ANR	1394249	AssignmentExpression	orig_compiler_options = 0		1394205	2		=			
ANR	1394250	Identifier	orig_compiler_options		1394205	0					
ANR	1394251	PrimaryExpression	0		1394205	1					
ANR	1394252	IfStatement	if ( file_handle -> type == ZEND_HANDLE_FILENAME )		1394205	8					
ANR	1394253	Condition	file_handle -> type == ZEND_HANDLE_FILENAME	1404:8:40560:40600	1394205	0	True				
ANR	1394254	EqualityExpression	file_handle -> type == ZEND_HANDLE_FILENAME		1394205	0		==			
ANR	1394255	PtrMemberAccess	file_handle -> type		1394205	0					
ANR	1394256	Identifier	file_handle		1394205	0					
ANR	1394257	Identifier	type		1394205	1					
ANR	1394258	Identifier	ZEND_HANDLE_FILENAME		1394205	1					
ANR	1394259	CompoundStatement		12:51:362:362	1394205	1					
ANR	1394260	IfStatement	"if ( accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == SUCCESS )"		1394205	0					
ANR	1394261	Condition	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == SUCCESS"	1405:12:40617:40705	1394205	0	True				
ANR	1394262	EqualityExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == SUCCESS"		1394205	0		==			
ANR	1394263	CallExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle )"		1394205	0					
ANR	1394264	Callee	accelerator_orig_zend_stream_open_function		1394205	0					
ANR	1394265	Identifier	accelerator_orig_zend_stream_open_function		1394205	0					
ANR	1394266	ArgumentList	file_handle -> filename		1394205	1					
ANR	1394267	Argument	file_handle -> filename		1394205	0					
ANR	1394268	PtrMemberAccess	file_handle -> filename		1394205	0					
ANR	1394269	Identifier	file_handle		1394205	0					
ANR	1394270	Identifier	filename		1394205	1					
ANR	1394271	Argument	file_handle		1394205	1					
ANR	1394272	Identifier	file_handle		1394205	0					
ANR	1394273	Identifier	SUCCESS		1394205	1					
ANR	1394274	CompoundStatement		13:103:467:467	1394205	1					
ANR	1394275	IfStatement	if ( key == ZCG ( key ) )		1394205	0					
ANR	1394276	Condition	key == ZCG ( key )	1407:13:40788:40802	1394205	0	True				
ANR	1394277	EqualityExpression	key == ZCG ( key )		1394205	0		==			
ANR	1394278	Identifier	key		1394205	0					
ANR	1394279	CallExpression	ZCG ( key )		1394205	1					
ANR	1394280	Callee	ZCG		1394205	0					
ANR	1394281	Identifier	ZCG		1394205	0					
ANR	1394282	ArgumentList	key		1394205	1					
ANR	1394283	Argument	key		1394205	0					
ANR	1394284	Identifier	key		1394205	0					
ANR	1394285	CompoundStatement		15:30:564:564	1394205	1					
ANR	1394286	ExpressionStatement	key_length = ZCG ( key_len )	1408:10:40817:40842	1394205	0	True				
ANR	1394287	AssignmentExpression	key_length = ZCG ( key_len )		1394205	0		=			
ANR	1394288	Identifier	key_length		1394205	0					
ANR	1394289	CallExpression	ZCG ( key_len )		1394205	1					
ANR	1394290	Callee	ZCG		1394205	0					
ANR	1394291	Identifier	ZCG		1394205	0					
ANR	1394292	ArgumentList	key_len		1394205	1					
ANR	1394293	Argument	key_len		1394205	0					
ANR	1394294	Identifier	key_len		1394205	0					
ANR	1394295	ElseStatement	else		1394205	0					
ANR	1394296	CompoundStatement		18:15:629:629	1394205	0					
ANR	1394297	ExpressionStatement	* op_array_p = NULL	1411:3:40875:40893	1394205	0	True				
ANR	1394298	AssignmentExpression	* op_array_p = NULL		1394205	0		=			
ANR	1394299	UnaryOperationExpression	* op_array_p		1394205	0					
ANR	1394300	UnaryOperator	*		1394205	0					
ANR	1394301	Identifier	op_array_p		1394205	1					
ANR	1394302	Identifier	NULL		1394205	1					
ANR	1394303	IfStatement	if ( type == ZEND_REQUIRE )		1394205	1					
ANR	1394304	Condition	type == ZEND_REQUIRE	1412:7:40902:40921	1394205	0	True				
ANR	1394305	EqualityExpression	type == ZEND_REQUIRE		1394205	0		==			
ANR	1394306	Identifier	type		1394205	0					
ANR	1394307	Identifier	ZEND_REQUIRE		1394205	1					
ANR	1394308	CompoundStatement		20:29:683:683	1394205	1					
ANR	1394309	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"	1413:4:40930:41003	1394205	0	True				
ANR	1394310	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"		1394205	0					
ANR	1394311	Callee	zend_message_dispatcher		1394205	0					
ANR	1394312	Identifier	zend_message_dispatcher		1394205	0					
ANR	1394313	ArgumentList	ZMSG_FAILED_REQUIRE_FOPEN		1394205	1					
ANR	1394314	Argument	ZMSG_FAILED_REQUIRE_FOPEN		1394205	0					
ANR	1394315	Identifier	ZMSG_FAILED_REQUIRE_FOPEN		1394205	0					
ANR	1394316	Argument	file_handle -> filename		1394205	1					
ANR	1394317	PtrMemberAccess	file_handle -> filename		1394205	0					
ANR	1394318	Identifier	file_handle		1394205	0					
ANR	1394319	Identifier	filename		1394205	1					
ANR	1394320	ExpressionStatement	zend_bailout ( )	1414:4:41009:41023	1394205	1	True				
ANR	1394321	CallExpression	zend_bailout ( )		1394205	0					
ANR	1394322	Callee	zend_bailout		1394205	0					
ANR	1394323	Identifier	zend_bailout		1394205	0					
ANR	1394324	ArgumentList			1394205	1					
ANR	1394325	ElseStatement	else		1394205	0					
ANR	1394326	CompoundStatement		23:10:794:794	1394205	0					
ANR	1394327	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"	1416:4:41041:41114	1394205	0	True				
ANR	1394328	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"		1394205	0					
ANR	1394329	Callee	zend_message_dispatcher		1394205	0					
ANR	1394330	Identifier	zend_message_dispatcher		1394205	0					
ANR	1394331	ArgumentList	ZMSG_FAILED_INCLUDE_FOPEN		1394205	1					
ANR	1394332	Argument	ZMSG_FAILED_INCLUDE_FOPEN		1394205	0					
ANR	1394333	Identifier	ZMSG_FAILED_INCLUDE_FOPEN		1394205	0					
ANR	1394334	Argument	file_handle -> filename		1394205	1					
ANR	1394335	PtrMemberAccess	file_handle -> filename		1394205	0					
ANR	1394336	Identifier	file_handle		1394205	0					
ANR	1394337	Identifier	filename		1394205	1					
ANR	1394338	ReturnStatement	return NULL ;	1418:3:41124:41135	1394205	2	True				
ANR	1394339	Identifier	NULL		1394205	0					
ANR	1394340	IfStatement	"if ( file_handle -> opened_path && zend_accel_blacklist_is_blacklisted ( & accel_blacklist , ZSTR_VAL ( file_handle -> opened_path ) ) )"		1394205	9					
ANR	1394341	Condition	"file_handle -> opened_path && zend_accel_blacklist_is_blacklisted ( & accel_blacklist , ZSTR_VAL ( file_handle -> opened_path ) )"	1423:5:41221:41337	1394205	0	True				
ANR	1394342	AndExpression	"file_handle -> opened_path && zend_accel_blacklist_is_blacklisted ( & accel_blacklist , ZSTR_VAL ( file_handle -> opened_path ) )"		1394205	0		&&			
ANR	1394343	PtrMemberAccess	file_handle -> opened_path		1394205	0					
ANR	1394344	Identifier	file_handle		1394205	0					
ANR	1394345	Identifier	opened_path		1394205	1					
ANR	1394346	CallExpression	"zend_accel_blacklist_is_blacklisted ( & accel_blacklist , ZSTR_VAL ( file_handle -> opened_path ) )"		1394205	1					
ANR	1394347	Callee	zend_accel_blacklist_is_blacklisted		1394205	0					
ANR	1394348	Identifier	zend_accel_blacklist_is_blacklisted		1394205	0					
ANR	1394349	ArgumentList	& accel_blacklist		1394205	1					
ANR	1394350	Argument	& accel_blacklist		1394205	0					
ANR	1394351	UnaryOperationExpression	& accel_blacklist		1394205	0					
ANR	1394352	UnaryOperator	&		1394205	0					
ANR	1394353	Identifier	accel_blacklist		1394205	1					
ANR	1394354	Argument	ZSTR_VAL ( file_handle -> opened_path )		1394205	1					
ANR	1394355	CallExpression	ZSTR_VAL ( file_handle -> opened_path )		1394205	0					
ANR	1394356	Callee	ZSTR_VAL		1394205	0					
ANR	1394357	Identifier	ZSTR_VAL		1394205	0					
ANR	1394358	ArgumentList	file_handle -> opened_path		1394205	1					
ANR	1394359	Argument	file_handle -> opened_path		1394205	0					
ANR	1394360	PtrMemberAccess	file_handle -> opened_path		1394205	0					
ANR	1394361	Identifier	file_handle		1394205	0					
ANR	1394362	Identifier	opened_path		1394205	1					
ANR	1394363	CompoundStatement		31:124:1099:1099	1394205	1					
ANR	1394364	ExpressionStatement	ZCSG ( blacklist_misses ) ++	1424:2:41344:41368	1394205	0	True				
ANR	1394365	PostIncDecOperationExpression	ZCSG ( blacklist_misses ) ++		1394205	0					
ANR	1394366	CallExpression	ZCSG ( blacklist_misses )		1394205	0					
ANR	1394367	Callee	ZCSG		1394205	0					
ANR	1394368	Identifier	ZCSG		1394205	0					
ANR	1394369	ArgumentList	blacklist_misses		1394205	1					
ANR	1394370	Argument	blacklist_misses		1394205	0					
ANR	1394371	Identifier	blacklist_misses		1394205	0					
ANR	1394372	IncDec	++		1394205	1					
ANR	1394373	ExpressionStatement	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1425:2:41372:41434	1394205	1	True				
ANR	1394374	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		1394205	0		=			
ANR	1394375	UnaryOperationExpression	* op_array_p		1394205	0					
ANR	1394376	UnaryOperator	*		1394205	0					
ANR	1394377	Identifier	op_array_p		1394205	1					
ANR	1394378	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1394205	1					
ANR	1394379	Callee	accelerator_orig_compile_file		1394205	0					
ANR	1394380	Identifier	accelerator_orig_compile_file		1394205	0					
ANR	1394381	ArgumentList	file_handle		1394205	1					
ANR	1394382	Argument	file_handle		1394205	0					
ANR	1394383	Identifier	file_handle		1394205	0					
ANR	1394384	Argument	type		1394205	1					
ANR	1394385	Identifier	type		1394205	0					
ANR	1394386	ReturnStatement	return NULL ;	1426:2:41438:41449	1394205	2	True				
ANR	1394387	Identifier	NULL		1394205	0					
ANR	1394388	IfStatement	if ( ZCG ( accel_directives ) . validate_timestamps || ZCG ( accel_directives ) . file_update_protection || ZCG ( accel_directives ) . max_file_size > 0 )		1394205	10					
ANR	1394389	Condition	ZCG ( accel_directives ) . validate_timestamps || ZCG ( accel_directives ) . file_update_protection || ZCG ( accel_directives ) . max_file_size > 0	1429:5:41460:41601	1394205	0	True				
ANR	1394390	OrExpression	ZCG ( accel_directives ) . validate_timestamps || ZCG ( accel_directives ) . file_update_protection || ZCG ( accel_directives ) . max_file_size > 0		1394205	0		||			
ANR	1394391	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		1394205	0					
ANR	1394392	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394393	Callee	ZCG		1394205	0					
ANR	1394394	Identifier	ZCG		1394205	0					
ANR	1394395	ArgumentList	accel_directives		1394205	1					
ANR	1394396	Argument	accel_directives		1394205	0					
ANR	1394397	Identifier	accel_directives		1394205	0					
ANR	1394398	Identifier	validate_timestamps		1394205	1					
ANR	1394399	OrExpression	ZCG ( accel_directives ) . file_update_protection || ZCG ( accel_directives ) . max_file_size > 0		1394205	1		||			
ANR	1394400	MemberAccess	ZCG ( accel_directives ) . file_update_protection		1394205	0					
ANR	1394401	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394402	Callee	ZCG		1394205	0					
ANR	1394403	Identifier	ZCG		1394205	0					
ANR	1394404	ArgumentList	accel_directives		1394205	1					
ANR	1394405	Argument	accel_directives		1394205	0					
ANR	1394406	Identifier	accel_directives		1394205	0					
ANR	1394407	Identifier	file_update_protection		1394205	1					
ANR	1394408	RelationalExpression	ZCG ( accel_directives ) . max_file_size > 0		1394205	1		>			
ANR	1394409	MemberAccess	ZCG ( accel_directives ) . max_file_size		1394205	0					
ANR	1394410	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394411	Callee	ZCG		1394205	0					
ANR	1394412	Identifier	ZCG		1394205	0					
ANR	1394413	ArgumentList	accel_directives		1394205	1					
ANR	1394414	Argument	accel_directives		1394205	0					
ANR	1394415	Identifier	accel_directives		1394205	0					
ANR	1394416	Identifier	max_file_size		1394205	1					
ANR	1394417	PrimaryExpression	0		1394205	1					
ANR	1394418	CompoundStatement		40:2:1367:1382	1394205	1					
ANR	1394419	IdentifierDeclStatement	size_t size = 0 ;	1432:2:41608:41623	1394205	0	True				
ANR	1394420	IdentifierDecl	size = 0		1394205	0					
ANR	1394421	IdentifierDeclType	size_t		1394205	0					
ANR	1394422	Identifier	size		1394205	1					
ANR	1394423	AssignmentExpression	size = 0		1394205	2		=			
ANR	1394424	Identifier	size		1394205	0					
ANR	1394425	PrimaryExpression	0		1394205	1					
ANR	1394426	ExpressionStatement	"timestamp = zend_get_file_handle_timestamp ( file_handle , ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL )"	1437:2:41742:41853	1394205	1	True				
ANR	1394427	AssignmentExpression	"timestamp = zend_get_file_handle_timestamp ( file_handle , ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL )"		1394205	0		=			
ANR	1394428	Identifier	timestamp		1394205	0					
ANR	1394429	CallExpression	"zend_get_file_handle_timestamp ( file_handle , ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL )"		1394205	1					
ANR	1394430	Callee	zend_get_file_handle_timestamp		1394205	0					
ANR	1394431	Identifier	zend_get_file_handle_timestamp		1394205	0					
ANR	1394432	ArgumentList	file_handle		1394205	1					
ANR	1394433	Argument	file_handle		1394205	0					
ANR	1394434	Identifier	file_handle		1394205	0					
ANR	1394435	Argument	ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL		1394205	1					
ANR	1394436	ConditionalExpression	ZCG ( accel_directives ) . max_file_size > 0 ? & size : NULL		1394205	0					
ANR	1394437	Condition	ZCG ( accel_directives ) . max_file_size > 0		1394205	0					
ANR	1394438	RelationalExpression	ZCG ( accel_directives ) . max_file_size > 0		1394205	0		>			
ANR	1394439	MemberAccess	ZCG ( accel_directives ) . max_file_size		1394205	0					
ANR	1394440	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394441	Callee	ZCG		1394205	0					
ANR	1394442	Identifier	ZCG		1394205	0					
ANR	1394443	ArgumentList	accel_directives		1394205	1					
ANR	1394444	Argument	accel_directives		1394205	0					
ANR	1394445	Identifier	accel_directives		1394205	0					
ANR	1394446	Identifier	max_file_size		1394205	1					
ANR	1394447	PrimaryExpression	0		1394205	1					
ANR	1394448	UnaryOperationExpression	& size		1394205	1					
ANR	1394449	UnaryOperator	&		1394205	0					
ANR	1394450	Identifier	size		1394205	1					
ANR	1394451	Identifier	NULL		1394205	2					
ANR	1394452	IfStatement	if ( timestamp == 0 )		1394205	2					
ANR	1394453	Condition	timestamp == 0	1442:6:41965:41978	1394205	0	True				
ANR	1394454	EqualityExpression	timestamp == 0		1394205	0		==			
ANR	1394455	Identifier	timestamp		1394205	0					
ANR	1394456	PrimaryExpression	0		1394205	1					
ANR	1394457	CompoundStatement		50:22:1740:1740	1394205	1					
ANR	1394458	ExpressionStatement	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1443:3:41986:42048	1394205	0	True				
ANR	1394459	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		1394205	0		=			
ANR	1394460	UnaryOperationExpression	* op_array_p		1394205	0					
ANR	1394461	UnaryOperator	*		1394205	0					
ANR	1394462	Identifier	op_array_p		1394205	1					
ANR	1394463	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1394205	1					
ANR	1394464	Callee	accelerator_orig_compile_file		1394205	0					
ANR	1394465	Identifier	accelerator_orig_compile_file		1394205	0					
ANR	1394466	ArgumentList	file_handle		1394205	1					
ANR	1394467	Argument	file_handle		1394205	0					
ANR	1394468	Identifier	file_handle		1394205	0					
ANR	1394469	Argument	type		1394205	1					
ANR	1394470	Identifier	type		1394205	0					
ANR	1394471	ReturnStatement	return NULL ;	1444:3:42053:42064	1394205	1	True				
ANR	1394472	Identifier	NULL		1394205	0					
ANR	1394473	IfStatement	if ( ZCG ( accel_directives ) . file_update_protection && ( ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection < timestamp ) )		1394205	3					
ANR	1394474	Condition	ZCG ( accel_directives ) . file_update_protection && ( ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection < timestamp )	1448:6:42151:42282	1394205	0	True				
ANR	1394475	AndExpression	ZCG ( accel_directives ) . file_update_protection && ( ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection < timestamp )		1394205	0		&&			
ANR	1394476	MemberAccess	ZCG ( accel_directives ) . file_update_protection		1394205	0					
ANR	1394477	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394478	Callee	ZCG		1394205	0					
ANR	1394479	Identifier	ZCG		1394205	0					
ANR	1394480	ArgumentList	accel_directives		1394205	1					
ANR	1394481	Argument	accel_directives		1394205	0					
ANR	1394482	Identifier	accel_directives		1394205	0					
ANR	1394483	Identifier	file_update_protection		1394205	1					
ANR	1394484	RelationalExpression	ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection < timestamp		1394205	1		<			
ANR	1394485	AdditiveExpression	ZCG ( request_time ) - ZCG ( accel_directives ) . file_update_protection		1394205	0		-			
ANR	1394486	CallExpression	ZCG ( request_time )		1394205	0					
ANR	1394487	Callee	ZCG		1394205	0					
ANR	1394488	Identifier	ZCG		1394205	0					
ANR	1394489	ArgumentList	request_time		1394205	1					
ANR	1394490	Argument	request_time		1394205	0					
ANR	1394491	Identifier	request_time		1394205	0					
ANR	1394492	MemberAccess	ZCG ( accel_directives ) . file_update_protection		1394205	1					
ANR	1394493	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394494	Callee	ZCG		1394205	0					
ANR	1394495	Identifier	ZCG		1394205	0					
ANR	1394496	ArgumentList	accel_directives		1394205	1					
ANR	1394497	Argument	accel_directives		1394205	0					
ANR	1394498	Identifier	accel_directives		1394205	0					
ANR	1394499	Identifier	file_update_protection		1394205	1					
ANR	1394500	Identifier	timestamp		1394205	1					
ANR	1394501	CompoundStatement		57:86:2044:2044	1394205	1					
ANR	1394502	ExpressionStatement	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1450:3:42290:42352	1394205	0	True				
ANR	1394503	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		1394205	0		=			
ANR	1394504	UnaryOperationExpression	* op_array_p		1394205	0					
ANR	1394505	UnaryOperator	*		1394205	0					
ANR	1394506	Identifier	op_array_p		1394205	1					
ANR	1394507	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1394205	1					
ANR	1394508	Callee	accelerator_orig_compile_file		1394205	0					
ANR	1394509	Identifier	accelerator_orig_compile_file		1394205	0					
ANR	1394510	ArgumentList	file_handle		1394205	1					
ANR	1394511	Argument	file_handle		1394205	0					
ANR	1394512	Identifier	file_handle		1394205	0					
ANR	1394513	Argument	type		1394205	1					
ANR	1394514	Identifier	type		1394205	0					
ANR	1394515	ReturnStatement	return NULL ;	1451:3:42357:42368	1394205	1	True				
ANR	1394516	Identifier	NULL		1394205	0					
ANR	1394517	IfStatement	if ( ZCG ( accel_directives ) . max_file_size > 0 && size > ( size_t ) ZCG ( accel_directives ) . max_file_size )		1394205	4					
ANR	1394518	Condition	ZCG ( accel_directives ) . max_file_size > 0 && size > ( size_t ) ZCG ( accel_directives ) . max_file_size	1454:6:42381:42473	1394205	0	True				
ANR	1394519	AndExpression	ZCG ( accel_directives ) . max_file_size > 0 && size > ( size_t ) ZCG ( accel_directives ) . max_file_size		1394205	0		&&			
ANR	1394520	RelationalExpression	ZCG ( accel_directives ) . max_file_size > 0		1394205	0		>			
ANR	1394521	MemberAccess	ZCG ( accel_directives ) . max_file_size		1394205	0					
ANR	1394522	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394523	Callee	ZCG		1394205	0					
ANR	1394524	Identifier	ZCG		1394205	0					
ANR	1394525	ArgumentList	accel_directives		1394205	1					
ANR	1394526	Argument	accel_directives		1394205	0					
ANR	1394527	Identifier	accel_directives		1394205	0					
ANR	1394528	Identifier	max_file_size		1394205	1					
ANR	1394529	PrimaryExpression	0		1394205	1					
ANR	1394530	RelationalExpression	size > ( size_t ) ZCG ( accel_directives ) . max_file_size		1394205	1		>			
ANR	1394531	Identifier	size		1394205	0					
ANR	1394532	CastExpression	( size_t ) ZCG ( accel_directives ) . max_file_size		1394205	1					
ANR	1394533	CastTarget	size_t		1394205	0					
ANR	1394534	MemberAccess	ZCG ( accel_directives ) . max_file_size		1394205	1					
ANR	1394535	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394536	Callee	ZCG		1394205	0					
ANR	1394537	Identifier	ZCG		1394205	0					
ANR	1394538	ArgumentList	accel_directives		1394205	1					
ANR	1394539	Argument	accel_directives		1394205	0					
ANR	1394540	Identifier	accel_directives		1394205	0					
ANR	1394541	Identifier	max_file_size		1394205	1					
ANR	1394542	CompoundStatement		62:101:2235:2235	1394205	1					
ANR	1394543	ExpressionStatement	ZCSG ( blacklist_misses ) ++	1455:3:42481:42505	1394205	0	True				
ANR	1394544	PostIncDecOperationExpression	ZCSG ( blacklist_misses ) ++		1394205	0					
ANR	1394545	CallExpression	ZCSG ( blacklist_misses )		1394205	0					
ANR	1394546	Callee	ZCSG		1394205	0					
ANR	1394547	Identifier	ZCSG		1394205	0					
ANR	1394548	ArgumentList	blacklist_misses		1394205	1					
ANR	1394549	Argument	blacklist_misses		1394205	0					
ANR	1394550	Identifier	blacklist_misses		1394205	0					
ANR	1394551	IncDec	++		1394205	1					
ANR	1394552	ExpressionStatement	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1456:3:42510:42572	1394205	1	True				
ANR	1394553	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		1394205	0		=			
ANR	1394554	UnaryOperationExpression	* op_array_p		1394205	0					
ANR	1394555	UnaryOperator	*		1394205	0					
ANR	1394556	Identifier	op_array_p		1394205	1					
ANR	1394557	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1394205	1					
ANR	1394558	Callee	accelerator_orig_compile_file		1394205	0					
ANR	1394559	Identifier	accelerator_orig_compile_file		1394205	0					
ANR	1394560	ArgumentList	file_handle		1394205	1					
ANR	1394561	Argument	file_handle		1394205	0					
ANR	1394562	Identifier	file_handle		1394205	0					
ANR	1394563	Argument	type		1394205	1					
ANR	1394564	Identifier	type		1394205	0					
ANR	1394565	ReturnStatement	return NULL ;	1457:3:42577:42588	1394205	2	True				
ANR	1394566	Identifier	NULL		1394205	0					
ANR	1394567	ExpressionStatement	new_persistent_script = create_persistent_script ( )	1461:1:42599:42649	1394205	11	True				
ANR	1394568	AssignmentExpression	new_persistent_script = create_persistent_script ( )		1394205	0		=			
ANR	1394569	Identifier	new_persistent_script		1394205	0					
ANR	1394570	CallExpression	create_persistent_script ( )		1394205	1					
ANR	1394571	Callee	create_persistent_script		1394205	0					
ANR	1394572	Identifier	create_persistent_script		1394205	0					
ANR	1394573	ArgumentList			1394205	1					
ANR	1394574	ExpressionStatement	orig_active_op_array = CG ( active_op_array )	1464:1:42734:42776	1394205	12	True				
ANR	1394575	AssignmentExpression	orig_active_op_array = CG ( active_op_array )		1394205	0		=			
ANR	1394576	Identifier	orig_active_op_array		1394205	0					
ANR	1394577	CallExpression	CG ( active_op_array )		1394205	1					
ANR	1394578	Callee	CG		1394205	0					
ANR	1394579	Identifier	CG		1394205	0					
ANR	1394580	ArgumentList	active_op_array		1394205	1					
ANR	1394581	Argument	active_op_array		1394205	0					
ANR	1394582	Identifier	active_op_array		1394205	0					
ANR	1394583	ExpressionStatement	orig_function_table = CG ( function_table )	1465:1:42779:42819	1394205	13	True				
ANR	1394584	AssignmentExpression	orig_function_table = CG ( function_table )		1394205	0		=			
ANR	1394585	Identifier	orig_function_table		1394205	0					
ANR	1394586	CallExpression	CG ( function_table )		1394205	1					
ANR	1394587	Callee	CG		1394205	0					
ANR	1394588	Identifier	CG		1394205	0					
ANR	1394589	ArgumentList	function_table		1394205	1					
ANR	1394590	Argument	function_table		1394205	0					
ANR	1394591	Identifier	function_table		1394205	0					
ANR	1394592	ExpressionStatement	orig_class_table = CG ( class_table )	1466:1:42822:42856	1394205	14	True				
ANR	1394593	AssignmentExpression	orig_class_table = CG ( class_table )		1394205	0		=			
ANR	1394594	Identifier	orig_class_table		1394205	0					
ANR	1394595	CallExpression	CG ( class_table )		1394205	1					
ANR	1394596	Callee	CG		1394205	0					
ANR	1394597	Identifier	CG		1394205	0					
ANR	1394598	ArgumentList	class_table		1394205	1					
ANR	1394599	Argument	class_table		1394205	0					
ANR	1394600	Identifier	class_table		1394205	0					
ANR	1394601	ExpressionStatement	"ZVAL_COPY_VALUE ( & orig_user_error_handler , & EG ( user_error_handler ) )"	1467:1:42859:42925	1394205	15	True				
ANR	1394602	CallExpression	"ZVAL_COPY_VALUE ( & orig_user_error_handler , & EG ( user_error_handler ) )"		1394205	0					
ANR	1394603	Callee	ZVAL_COPY_VALUE		1394205	0					
ANR	1394604	Identifier	ZVAL_COPY_VALUE		1394205	0					
ANR	1394605	ArgumentList	& orig_user_error_handler		1394205	1					
ANR	1394606	Argument	& orig_user_error_handler		1394205	0					
ANR	1394607	UnaryOperationExpression	& orig_user_error_handler		1394205	0					
ANR	1394608	UnaryOperator	&		1394205	0					
ANR	1394609	Identifier	orig_user_error_handler		1394205	1					
ANR	1394610	Argument	& EG ( user_error_handler )		1394205	1					
ANR	1394611	UnaryOperationExpression	& EG ( user_error_handler )		1394205	0					
ANR	1394612	UnaryOperator	&		1394205	0					
ANR	1394613	CallExpression	EG ( user_error_handler )		1394205	1					
ANR	1394614	Callee	EG		1394205	0					
ANR	1394615	Identifier	EG		1394205	0					
ANR	1394616	ArgumentList	user_error_handler		1394205	1					
ANR	1394617	Argument	user_error_handler		1394205	0					
ANR	1394618	Identifier	user_error_handler		1394205	0					
ANR	1394619	ExpressionStatement	CG ( function_table ) = & ZCG ( function_table )	1470:1:42960:43001	1394205	16	True				
ANR	1394620	AssignmentExpression	CG ( function_table ) = & ZCG ( function_table )		1394205	0		=			
ANR	1394621	CallExpression	CG ( function_table )		1394205	0					
ANR	1394622	Callee	CG		1394205	0					
ANR	1394623	Identifier	CG		1394205	0					
ANR	1394624	ArgumentList	function_table		1394205	1					
ANR	1394625	Argument	function_table		1394205	0					
ANR	1394626	Identifier	function_table		1394205	0					
ANR	1394627	UnaryOperationExpression	& ZCG ( function_table )		1394205	1					
ANR	1394628	UnaryOperator	&		1394205	0					
ANR	1394629	CallExpression	ZCG ( function_table )		1394205	1					
ANR	1394630	Callee	ZCG		1394205	0					
ANR	1394631	Identifier	ZCG		1394205	0					
ANR	1394632	ArgumentList	function_table		1394205	1					
ANR	1394633	Argument	function_table		1394205	0					
ANR	1394634	Identifier	function_table		1394205	0					
ANR	1394635	ExpressionStatement	EG ( class_table ) = CG ( class_table ) = & new_persistent_script -> class_table	1471:1:43004:43075	1394205	17	True				
ANR	1394636	AssignmentExpression	EG ( class_table ) = CG ( class_table ) = & new_persistent_script -> class_table		1394205	0		=			
ANR	1394637	CallExpression	EG ( class_table )		1394205	0					
ANR	1394638	Callee	EG		1394205	0					
ANR	1394639	Identifier	EG		1394205	0					
ANR	1394640	ArgumentList	class_table		1394205	1					
ANR	1394641	Argument	class_table		1394205	0					
ANR	1394642	Identifier	class_table		1394205	0					
ANR	1394643	AssignmentExpression	CG ( class_table ) = & new_persistent_script -> class_table		1394205	1		=			
ANR	1394644	CallExpression	CG ( class_table )		1394205	0					
ANR	1394645	Callee	CG		1394205	0					
ANR	1394646	Identifier	CG		1394205	0					
ANR	1394647	ArgumentList	class_table		1394205	1					
ANR	1394648	Argument	class_table		1394205	0					
ANR	1394649	Identifier	class_table		1394205	0					
ANR	1394650	UnaryOperationExpression	& new_persistent_script -> class_table		1394205	1					
ANR	1394651	UnaryOperator	&		1394205	0					
ANR	1394652	PtrMemberAccess	new_persistent_script -> class_table		1394205	1					
ANR	1394653	Identifier	new_persistent_script		1394205	0					
ANR	1394654	Identifier	class_table		1394205	1					
ANR	1394655	ExpressionStatement	ZVAL_UNDEF ( & EG ( user_error_handler ) )	1472:1:43078:43113	1394205	18	True				
ANR	1394656	CallExpression	ZVAL_UNDEF ( & EG ( user_error_handler ) )		1394205	0					
ANR	1394657	Callee	ZVAL_UNDEF		1394205	0					
ANR	1394658	Identifier	ZVAL_UNDEF		1394205	0					
ANR	1394659	ArgumentList	& EG ( user_error_handler )		1394205	1					
ANR	1394660	Argument	& EG ( user_error_handler )		1394205	0					
ANR	1394661	UnaryOperationExpression	& EG ( user_error_handler )		1394205	0					
ANR	1394662	UnaryOperator	&		1394205	0					
ANR	1394663	CallExpression	EG ( user_error_handler )		1394205	1					
ANR	1394664	Callee	EG		1394205	0					
ANR	1394665	Identifier	EG		1394205	0					
ANR	1394666	ArgumentList	user_error_handler		1394205	1					
ANR	1394667	Argument	user_error_handler		1394205	0					
ANR	1394668	Identifier	user_error_handler		1394205	0					
ANR	1394669	Statement	zend_try	1474:1:43117:43124	1394205	19	True				
ANR	1394670	CompoundStatement		82:10:2885:2885	1394205	20					
ANR	1394671	ExpressionStatement	orig_compiler_options = CG ( compiler_options )	1475:2:43130:43174	1394205	0	True				
ANR	1394672	AssignmentExpression	orig_compiler_options = CG ( compiler_options )		1394205	0		=			
ANR	1394673	Identifier	orig_compiler_options		1394205	0					
ANR	1394674	CallExpression	CG ( compiler_options )		1394205	1					
ANR	1394675	Callee	CG		1394205	0					
ANR	1394676	Identifier	CG		1394205	0					
ANR	1394677	ArgumentList	compiler_options		1394205	1					
ANR	1394678	Argument	compiler_options		1394205	0					
ANR	1394679	Identifier	compiler_options		1394205	0					
ANR	1394680	ExpressionStatement	CG ( compiler_options ) |= ZEND_COMPILE_HANDLE_OP_ARRAY	1476:2:43178:43230	1394205	1	True				
ANR	1394681	AssignmentExpression	CG ( compiler_options ) |= ZEND_COMPILE_HANDLE_OP_ARRAY		1394205	0		|=			
ANR	1394682	CallExpression	CG ( compiler_options )		1394205	0					
ANR	1394683	Callee	CG		1394205	0					
ANR	1394684	Identifier	CG		1394205	0					
ANR	1394685	ArgumentList	compiler_options		1394205	1					
ANR	1394686	Argument	compiler_options		1394205	0					
ANR	1394687	Identifier	compiler_options		1394205	0					
ANR	1394688	Identifier	ZEND_COMPILE_HANDLE_OP_ARRAY		1394205	1					
ANR	1394689	ExpressionStatement	CG ( compiler_options ) |= ZEND_COMPILE_IGNORE_INTERNAL_CLASSES	1477:2:43234:43294	1394205	2	True				
ANR	1394690	AssignmentExpression	CG ( compiler_options ) |= ZEND_COMPILE_IGNORE_INTERNAL_CLASSES		1394205	0		|=			
ANR	1394691	CallExpression	CG ( compiler_options )		1394205	0					
ANR	1394692	Callee	CG		1394205	0					
ANR	1394693	Identifier	CG		1394205	0					
ANR	1394694	ArgumentList	compiler_options		1394205	1					
ANR	1394695	Argument	compiler_options		1394205	0					
ANR	1394696	Identifier	compiler_options		1394205	0					
ANR	1394697	Identifier	ZEND_COMPILE_IGNORE_INTERNAL_CLASSES		1394205	1					
ANR	1394698	ExpressionStatement	CG ( compiler_options ) |= ZEND_COMPILE_DELAYED_BINDING	1478:2:43298:43350	1394205	3	True				
ANR	1394699	AssignmentExpression	CG ( compiler_options ) |= ZEND_COMPILE_DELAYED_BINDING		1394205	0		|=			
ANR	1394700	CallExpression	CG ( compiler_options )		1394205	0					
ANR	1394701	Callee	CG		1394205	0					
ANR	1394702	Identifier	CG		1394205	0					
ANR	1394703	ArgumentList	compiler_options		1394205	1					
ANR	1394704	Argument	compiler_options		1394205	0					
ANR	1394705	Identifier	compiler_options		1394205	0					
ANR	1394706	Identifier	ZEND_COMPILE_DELAYED_BINDING		1394205	1					
ANR	1394707	ExpressionStatement	CG ( compiler_options ) |= ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION	1479:2:43354:43415	1394205	4	True				
ANR	1394708	AssignmentExpression	CG ( compiler_options ) |= ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		1394205	0		|=			
ANR	1394709	CallExpression	CG ( compiler_options )		1394205	0					
ANR	1394710	Callee	CG		1394205	0					
ANR	1394711	Identifier	CG		1394205	0					
ANR	1394712	ArgumentList	compiler_options		1394205	1					
ANR	1394713	Argument	compiler_options		1394205	0					
ANR	1394714	Identifier	compiler_options		1394205	0					
ANR	1394715	Identifier	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		1394205	1					
ANR	1394716	ExpressionStatement	"op_array = * op_array_p = accelerator_orig_compile_file ( file_handle , type )"	1480:2:43419:43492	1394205	5	True				
ANR	1394717	AssignmentExpression	"op_array = * op_array_p = accelerator_orig_compile_file ( file_handle , type )"		1394205	0		=			
ANR	1394718	Identifier	op_array		1394205	0					
ANR	1394719	AssignmentExpression	"* op_array_p = accelerator_orig_compile_file ( file_handle , type )"		1394205	1		=			
ANR	1394720	UnaryOperationExpression	* op_array_p		1394205	0					
ANR	1394721	UnaryOperator	*		1394205	0					
ANR	1394722	Identifier	op_array_p		1394205	1					
ANR	1394723	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1394205	1					
ANR	1394724	Callee	accelerator_orig_compile_file		1394205	0					
ANR	1394725	Identifier	accelerator_orig_compile_file		1394205	0					
ANR	1394726	ArgumentList	file_handle		1394205	1					
ANR	1394727	Argument	file_handle		1394205	0					
ANR	1394728	Identifier	file_handle		1394205	0					
ANR	1394729	Argument	type		1394205	1					
ANR	1394730	Identifier	type		1394205	0					
ANR	1394731	ExpressionStatement	CG ( compiler_options ) = orig_compiler_options	1481:2:43496:43540	1394205	6	True				
ANR	1394732	AssignmentExpression	CG ( compiler_options ) = orig_compiler_options		1394205	0		=			
ANR	1394733	CallExpression	CG ( compiler_options )		1394205	0					
ANR	1394734	Callee	CG		1394205	0					
ANR	1394735	Identifier	CG		1394205	0					
ANR	1394736	ArgumentList	compiler_options		1394205	1					
ANR	1394737	Argument	compiler_options		1394205	0					
ANR	1394738	Identifier	compiler_options		1394205	0					
ANR	1394739	Identifier	orig_compiler_options		1394205	1					
ANR	1394740	Statement	zend_catch	1482:3:43545:43554	1394205	21	True				
ANR	1394741	CompoundStatement		90:14:3315:3315	1394205	22					
ANR	1394742	ExpressionStatement	op_array = NULL	1483:2:43560:43575	1394205	0	True				
ANR	1394743	AssignmentExpression	op_array = NULL		1394205	0		=			
ANR	1394744	Identifier	op_array		1394205	0					
ANR	1394745	Identifier	NULL		1394205	1					
ANR	1394746	ExpressionStatement	do_bailout = 1	1484:2:43579:43593	1394205	1	True				
ANR	1394747	AssignmentExpression	do_bailout = 1		1394205	0		=			
ANR	1394748	Identifier	do_bailout		1394205	0					
ANR	1394749	PrimaryExpression	1		1394205	1					
ANR	1394750	ExpressionStatement	CG ( compiler_options ) = orig_compiler_options	1485:2:43597:43641	1394205	2	True				
ANR	1394751	AssignmentExpression	CG ( compiler_options ) = orig_compiler_options		1394205	0		=			
ANR	1394752	CallExpression	CG ( compiler_options )		1394205	0					
ANR	1394753	Callee	CG		1394205	0					
ANR	1394754	Identifier	CG		1394205	0					
ANR	1394755	ArgumentList	compiler_options		1394205	1					
ANR	1394756	Argument	compiler_options		1394205	0					
ANR	1394757	Identifier	compiler_options		1394205	0					
ANR	1394758	Identifier	orig_compiler_options		1394205	1					
ANR	1394759	ExpressionStatement	zend_end_try ( )	1486:3:43646:43660	1394205	23	True				
ANR	1394760	CallExpression	zend_end_try ( )		1394205	0					
ANR	1394761	Callee	zend_end_try		1394205	0					
ANR	1394762	Identifier	zend_end_try		1394205	0					
ANR	1394763	ArgumentList			1394205	1					
ANR	1394764	ExpressionStatement	CG ( active_op_array ) = orig_active_op_array	1489:1:43689:43731	1394205	24	True				
ANR	1394765	AssignmentExpression	CG ( active_op_array ) = orig_active_op_array		1394205	0		=			
ANR	1394766	CallExpression	CG ( active_op_array )		1394205	0					
ANR	1394767	Callee	CG		1394205	0					
ANR	1394768	Identifier	CG		1394205	0					
ANR	1394769	ArgumentList	active_op_array		1394205	1					
ANR	1394770	Argument	active_op_array		1394205	0					
ANR	1394771	Identifier	active_op_array		1394205	0					
ANR	1394772	Identifier	orig_active_op_array		1394205	1					
ANR	1394773	ExpressionStatement	CG ( function_table ) = orig_function_table	1490:1:43734:43774	1394205	25	True				
ANR	1394774	AssignmentExpression	CG ( function_table ) = orig_function_table		1394205	0		=			
ANR	1394775	CallExpression	CG ( function_table )		1394205	0					
ANR	1394776	Callee	CG		1394205	0					
ANR	1394777	Identifier	CG		1394205	0					
ANR	1394778	ArgumentList	function_table		1394205	1					
ANR	1394779	Argument	function_table		1394205	0					
ANR	1394780	Identifier	function_table		1394205	0					
ANR	1394781	Identifier	orig_function_table		1394205	1					
ANR	1394782	ExpressionStatement	EG ( class_table ) = CG ( class_table ) = orig_class_table	1491:1:43777:43829	1394205	26	True				
ANR	1394783	AssignmentExpression	EG ( class_table ) = CG ( class_table ) = orig_class_table		1394205	0		=			
ANR	1394784	CallExpression	EG ( class_table )		1394205	0					
ANR	1394785	Callee	EG		1394205	0					
ANR	1394786	Identifier	EG		1394205	0					
ANR	1394787	ArgumentList	class_table		1394205	1					
ANR	1394788	Argument	class_table		1394205	0					
ANR	1394789	Identifier	class_table		1394205	0					
ANR	1394790	AssignmentExpression	CG ( class_table ) = orig_class_table		1394205	1		=			
ANR	1394791	CallExpression	CG ( class_table )		1394205	0					
ANR	1394792	Callee	CG		1394205	0					
ANR	1394793	Identifier	CG		1394205	0					
ANR	1394794	ArgumentList	class_table		1394205	1					
ANR	1394795	Argument	class_table		1394205	0					
ANR	1394796	Identifier	class_table		1394205	0					
ANR	1394797	Identifier	orig_class_table		1394205	1					
ANR	1394798	ExpressionStatement	EG ( user_error_handler ) = orig_user_error_handler	1492:1:43832:43880	1394205	27	True				
ANR	1394799	AssignmentExpression	EG ( user_error_handler ) = orig_user_error_handler		1394205	0		=			
ANR	1394800	CallExpression	EG ( user_error_handler )		1394205	0					
ANR	1394801	Callee	EG		1394205	0					
ANR	1394802	Identifier	EG		1394205	0					
ANR	1394803	ArgumentList	user_error_handler		1394205	1					
ANR	1394804	Argument	user_error_handler		1394205	0					
ANR	1394805	Identifier	user_error_handler		1394205	0					
ANR	1394806	Identifier	orig_user_error_handler		1394205	1					
ANR	1394807	IfStatement	if ( ! op_array )		1394205	28					
ANR	1394808	Condition	! op_array	1494:5:43888:43896	1394205	0	True				
ANR	1394809	UnaryOperationExpression	! op_array		1394205	0					
ANR	1394810	UnaryOperator	!		1394205	0					
ANR	1394811	Identifier	op_array		1394205	1					
ANR	1394812	CompoundStatement		102:16:3658:3658	1394205	1					
ANR	1394813	ExpressionStatement	"free_persistent_script ( new_persistent_script , 1 )"	1496:2:43930:43978	1394205	0	True				
ANR	1394814	CallExpression	"free_persistent_script ( new_persistent_script , 1 )"		1394205	0					
ANR	1394815	Callee	free_persistent_script		1394205	0					
ANR	1394816	Identifier	free_persistent_script		1394205	0					
ANR	1394817	ArgumentList	new_persistent_script		1394205	1					
ANR	1394818	Argument	new_persistent_script		1394205	0					
ANR	1394819	Identifier	new_persistent_script		1394205	0					
ANR	1394820	Argument	1		1394205	1					
ANR	1394821	PrimaryExpression	1		1394205	0					
ANR	1394822	ExpressionStatement	zend_accel_free_user_functions ( & ZCG ( function_table ) )	1497:2:43982:44034	1394205	1	True				
ANR	1394823	CallExpression	zend_accel_free_user_functions ( & ZCG ( function_table ) )		1394205	0					
ANR	1394824	Callee	zend_accel_free_user_functions		1394205	0					
ANR	1394825	Identifier	zend_accel_free_user_functions		1394205	0					
ANR	1394826	ArgumentList	& ZCG ( function_table )		1394205	1					
ANR	1394827	Argument	& ZCG ( function_table )		1394205	0					
ANR	1394828	UnaryOperationExpression	& ZCG ( function_table )		1394205	0					
ANR	1394829	UnaryOperator	&		1394205	0					
ANR	1394830	CallExpression	ZCG ( function_table )		1394205	1					
ANR	1394831	Callee	ZCG		1394205	0					
ANR	1394832	Identifier	ZCG		1394205	0					
ANR	1394833	ArgumentList	function_table		1394205	1					
ANR	1394834	Argument	function_table		1394205	0					
ANR	1394835	Identifier	function_table		1394205	0					
ANR	1394836	IfStatement	if ( do_bailout )		1394205	2					
ANR	1394837	Condition	do_bailout	1498:6:44042:44051	1394205	0	True				
ANR	1394838	Identifier	do_bailout		1394205	0					
ANR	1394839	CompoundStatement		106:18:3813:3813	1394205	1					
ANR	1394840	ExpressionStatement	zend_bailout ( )	1499:3:44059:44073	1394205	0	True				
ANR	1394841	CallExpression	zend_bailout ( )		1394205	0					
ANR	1394842	Callee	zend_bailout		1394205	0					
ANR	1394843	Identifier	zend_bailout		1394205	0					
ANR	1394844	ArgumentList			1394205	1					
ANR	1394845	ReturnStatement	return NULL ;	1501:2:44081:44092	1394205	3	True				
ANR	1394846	Identifier	NULL		1394205	0					
ANR	1394847	ExpressionStatement	"zend_accel_move_user_functions ( & ZCG ( function_table ) , & new_persistent_script -> function_table )"	1508:1:44229:44321	1394205	29	True				
ANR	1394848	CallExpression	"zend_accel_move_user_functions ( & ZCG ( function_table ) , & new_persistent_script -> function_table )"		1394205	0					
ANR	1394849	Callee	zend_accel_move_user_functions		1394205	0					
ANR	1394850	Identifier	zend_accel_move_user_functions		1394205	0					
ANR	1394851	ArgumentList	& ZCG ( function_table )		1394205	1					
ANR	1394852	Argument	& ZCG ( function_table )		1394205	0					
ANR	1394853	UnaryOperationExpression	& ZCG ( function_table )		1394205	0					
ANR	1394854	UnaryOperator	&		1394205	0					
ANR	1394855	CallExpression	ZCG ( function_table )		1394205	1					
ANR	1394856	Callee	ZCG		1394205	0					
ANR	1394857	Identifier	ZCG		1394205	0					
ANR	1394858	ArgumentList	function_table		1394205	1					
ANR	1394859	Argument	function_table		1394205	0					
ANR	1394860	Identifier	function_table		1394205	0					
ANR	1394861	Argument	& new_persistent_script -> function_table		1394205	1					
ANR	1394862	UnaryOperationExpression	& new_persistent_script -> function_table		1394205	0					
ANR	1394863	UnaryOperator	&		1394205	0					
ANR	1394864	PtrMemberAccess	new_persistent_script -> function_table		1394205	1					
ANR	1394865	Identifier	new_persistent_script		1394205	0					
ANR	1394866	Identifier	function_table		1394205	1					
ANR	1394867	ExpressionStatement	new_persistent_script -> main_op_array = * op_array	1509:1:44324:44372	1394205	30	True				
ANR	1394868	AssignmentExpression	new_persistent_script -> main_op_array = * op_array		1394205	0		=			
ANR	1394869	PtrMemberAccess	new_persistent_script -> main_op_array		1394205	0					
ANR	1394870	Identifier	new_persistent_script		1394205	0					
ANR	1394871	Identifier	main_op_array		1394205	1					
ANR	1394872	UnaryOperationExpression	* op_array		1394205	1					
ANR	1394873	UnaryOperator	*		1394205	0					
ANR	1394874	Identifier	op_array		1394205	1					
ANR	1394875	ExpressionStatement	efree ( op_array )	1511:1:44376:44391	1394205	31	True				
ANR	1394876	CallExpression	efree ( op_array )		1394205	0					
ANR	1394877	Callee	efree		1394205	0					
ANR	1394878	Identifier	efree		1394205	0					
ANR	1394879	ArgumentList	op_array		1394205	1					
ANR	1394880	Argument	op_array		1394205	0					
ANR	1394881	Identifier	op_array		1394205	0					
ANR	1394882	IfStatement	if ( PG ( auto_globals_jit ) )		1394205	32					
ANR	1394883	Condition	PG ( auto_globals_jit )	1515:5:44644:44663	1394205	0	True				
ANR	1394884	CallExpression	PG ( auto_globals_jit )		1394205	0					
ANR	1394885	Callee	PG		1394205	0					
ANR	1394886	Identifier	PG		1394205	0					
ANR	1394887	ArgumentList	auto_globals_jit		1394205	1					
ANR	1394888	Argument	auto_globals_jit		1394205	0					
ANR	1394889	Identifier	auto_globals_jit		1394205	0					
ANR	1394890	CompoundStatement		123:27:4425:4425	1394205	1					
ANR	1394891	ExpressionStatement	new_persistent_script -> ping_auto_globals_mask = zend_accel_get_auto_globals ( )	1516:2:44670:44747	1394205	0	True				
ANR	1394892	AssignmentExpression	new_persistent_script -> ping_auto_globals_mask = zend_accel_get_auto_globals ( )		1394205	0		=			
ANR	1394893	PtrMemberAccess	new_persistent_script -> ping_auto_globals_mask		1394205	0					
ANR	1394894	Identifier	new_persistent_script		1394205	0					
ANR	1394895	Identifier	ping_auto_globals_mask		1394205	1					
ANR	1394896	CallExpression	zend_accel_get_auto_globals ( )		1394205	1					
ANR	1394897	Callee	zend_accel_get_auto_globals		1394205	0					
ANR	1394898	Identifier	zend_accel_get_auto_globals		1394205	0					
ANR	1394899	ArgumentList			1394205	1					
ANR	1394900	ElseStatement	else		1394205	0					
ANR	1394901	CompoundStatement		125:8:4516:4516	1394205	0					
ANR	1394902	ExpressionStatement	new_persistent_script -> ping_auto_globals_mask = zend_accel_get_auto_globals_no_jit ( )	1518:2:44761:44845	1394205	0	True				
ANR	1394903	AssignmentExpression	new_persistent_script -> ping_auto_globals_mask = zend_accel_get_auto_globals_no_jit ( )		1394205	0		=			
ANR	1394904	PtrMemberAccess	new_persistent_script -> ping_auto_globals_mask		1394205	0					
ANR	1394905	Identifier	new_persistent_script		1394205	0					
ANR	1394906	Identifier	ping_auto_globals_mask		1394205	1					
ANR	1394907	CallExpression	zend_accel_get_auto_globals_no_jit ( )		1394205	1					
ANR	1394908	Callee	zend_accel_get_auto_globals_no_jit		1394205	0					
ANR	1394909	Identifier	zend_accel_get_auto_globals_no_jit		1394205	0					
ANR	1394910	ArgumentList			1394205	1					
ANR	1394911	IfStatement	if ( ZCG ( accel_directives ) . validate_timestamps )		1394205	33					
ANR	1394912	Condition	ZCG ( accel_directives ) . validate_timestamps	1521:5:44856:44896	1394205	0	True				
ANR	1394913	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		1394205	0					
ANR	1394914	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394915	Callee	ZCG		1394205	0					
ANR	1394916	Identifier	ZCG		1394205	0					
ANR	1394917	ArgumentList	accel_directives		1394205	1					
ANR	1394918	Argument	accel_directives		1394205	0					
ANR	1394919	Identifier	accel_directives		1394205	0					
ANR	1394920	Identifier	validate_timestamps		1394205	1					
ANR	1394921	CompoundStatement		129:48:4658:4658	1394205	1					
ANR	1394922	ExpressionStatement	new_persistent_script -> timestamp = timestamp	1525:2:45017:45061	1394205	0	True				
ANR	1394923	AssignmentExpression	new_persistent_script -> timestamp = timestamp		1394205	0		=			
ANR	1394924	PtrMemberAccess	new_persistent_script -> timestamp		1394205	0					
ANR	1394925	Identifier	new_persistent_script		1394205	0					
ANR	1394926	Identifier	timestamp		1394205	1					
ANR	1394927	Identifier	timestamp		1394205	1					
ANR	1394928	ExpressionStatement	new_persistent_script -> dynamic_members . revalidate = ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq	1526:2:45065:45174	1394205	1	True				
ANR	1394929	AssignmentExpression	new_persistent_script -> dynamic_members . revalidate = ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq		1394205	0		=			
ANR	1394930	MemberAccess	new_persistent_script -> dynamic_members . revalidate		1394205	0					
ANR	1394931	PtrMemberAccess	new_persistent_script -> dynamic_members		1394205	0					
ANR	1394932	Identifier	new_persistent_script		1394205	0					
ANR	1394933	Identifier	dynamic_members		1394205	1					
ANR	1394934	Identifier	revalidate		1394205	1					
ANR	1394935	AdditiveExpression	ZCG ( request_time ) + ZCG ( accel_directives ) . revalidate_freq		1394205	1		+			
ANR	1394936	CallExpression	ZCG ( request_time )		1394205	0					
ANR	1394937	Callee	ZCG		1394205	0					
ANR	1394938	Identifier	ZCG		1394205	0					
ANR	1394939	ArgumentList	request_time		1394205	1					
ANR	1394940	Argument	request_time		1394205	0					
ANR	1394941	Identifier	request_time		1394205	0					
ANR	1394942	MemberAccess	ZCG ( accel_directives ) . revalidate_freq		1394205	1					
ANR	1394943	CallExpression	ZCG ( accel_directives )		1394205	0					
ANR	1394944	Callee	ZCG		1394205	0					
ANR	1394945	Identifier	ZCG		1394205	0					
ANR	1394946	ArgumentList	accel_directives		1394205	1					
ANR	1394947	Argument	accel_directives		1394205	0					
ANR	1394948	Identifier	accel_directives		1394205	0					
ANR	1394949	Identifier	revalidate_freq		1394205	1					
ANR	1394950	IfStatement	if ( file_handle -> opened_path )		1394205	34					
ANR	1394951	Condition	file_handle -> opened_path	1529:5:45185:45208	1394205	0	True				
ANR	1394952	PtrMemberAccess	file_handle -> opened_path		1394205	0					
ANR	1394953	Identifier	file_handle		1394205	0					
ANR	1394954	Identifier	opened_path		1394205	1					
ANR	1394955	CompoundStatement		137:31:4970:4970	1394205	1					
ANR	1394956	ExpressionStatement	new_persistent_script -> full_path = zend_string_copy ( file_handle -> opened_path )	1530:2:45215:45292	1394205	0	True				
ANR	1394957	AssignmentExpression	new_persistent_script -> full_path = zend_string_copy ( file_handle -> opened_path )		1394205	0		=			
ANR	1394958	PtrMemberAccess	new_persistent_script -> full_path		1394205	0					
ANR	1394959	Identifier	new_persistent_script		1394205	0					
ANR	1394960	Identifier	full_path		1394205	1					
ANR	1394961	CallExpression	zend_string_copy ( file_handle -> opened_path )		1394205	1					
ANR	1394962	Callee	zend_string_copy		1394205	0					
ANR	1394963	Identifier	zend_string_copy		1394205	0					
ANR	1394964	ArgumentList	file_handle -> opened_path		1394205	1					
ANR	1394965	Argument	file_handle -> opened_path		1394205	0					
ANR	1394966	PtrMemberAccess	file_handle -> opened_path		1394205	0					
ANR	1394967	Identifier	file_handle		1394205	0					
ANR	1394968	Identifier	opened_path		1394205	1					
ANR	1394969	ElseStatement	else		1394205	0					
ANR	1394970	CompoundStatement		139:8:5061:5061	1394205	0					
ANR	1394971	ExpressionStatement	"new_persistent_script -> full_path = zend_string_init ( file_handle -> filename , strlen ( file_handle -> filename ) , 0 )"	1532:2:45306:45414	1394205	0	True				
ANR	1394972	AssignmentExpression	"new_persistent_script -> full_path = zend_string_init ( file_handle -> filename , strlen ( file_handle -> filename ) , 0 )"		1394205	0		=			
ANR	1394973	PtrMemberAccess	new_persistent_script -> full_path		1394205	0					
ANR	1394974	Identifier	new_persistent_script		1394205	0					
ANR	1394975	Identifier	full_path		1394205	1					
ANR	1394976	CallExpression	"zend_string_init ( file_handle -> filename , strlen ( file_handle -> filename ) , 0 )"		1394205	1					
ANR	1394977	Callee	zend_string_init		1394205	0					
ANR	1394978	Identifier	zend_string_init		1394205	0					
ANR	1394979	ArgumentList	file_handle -> filename		1394205	1					
ANR	1394980	Argument	file_handle -> filename		1394205	0					
ANR	1394981	PtrMemberAccess	file_handle -> filename		1394205	0					
ANR	1394982	Identifier	file_handle		1394205	0					
ANR	1394983	Identifier	filename		1394205	1					
ANR	1394984	Argument	strlen ( file_handle -> filename )		1394205	1					
ANR	1394985	CallExpression	strlen ( file_handle -> filename )		1394205	0					
ANR	1394986	Callee	strlen		1394205	0					
ANR	1394987	Identifier	strlen		1394205	0					
ANR	1394988	ArgumentList	file_handle -> filename		1394205	1					
ANR	1394989	Argument	file_handle -> filename		1394205	0					
ANR	1394990	PtrMemberAccess	file_handle -> filename		1394205	0					
ANR	1394991	Identifier	file_handle		1394205	0					
ANR	1394992	Identifier	filename		1394205	1					
ANR	1394993	Argument	0		1394205	2					
ANR	1394994	PrimaryExpression	0		1394205	0					
ANR	1394995	ExpressionStatement	zend_string_hash_val ( new_persistent_script -> full_path )	1534:1:45420:45474	1394205	35	True				
ANR	1394996	CallExpression	zend_string_hash_val ( new_persistent_script -> full_path )		1394205	0					
ANR	1394997	Callee	zend_string_hash_val		1394205	0					
ANR	1394998	Identifier	zend_string_hash_val		1394205	0					
ANR	1394999	ArgumentList	new_persistent_script -> full_path		1394205	1					
ANR	1395000	Argument	new_persistent_script -> full_path		1394205	0					
ANR	1395001	PtrMemberAccess	new_persistent_script -> full_path		1394205	0					
ANR	1395002	Identifier	new_persistent_script		1394205	0					
ANR	1395003	Identifier	full_path		1394205	1					
ANR	1395004	ReturnStatement	return new_persistent_script ;	1537:1:45544:45572	1394205	36	True				
ANR	1395005	Identifier	new_persistent_script		1394205	0					
ANR	1395006	ReturnType	static zend_persistent_script *		1394205	1					
ANR	1395007	Identifier	opcache_compile_file		1394205	2					
ANR	1395008	ParameterList	"zend_file_handle * file_handle , int type , char * key , unsigned int key_length , zend_op_array * * op_array_p"		1394205	3					
ANR	1395009	Parameter	zend_file_handle * file_handle	1392:52:40135:40163	1394205	0	True				
ANR	1395010	ParameterType	zend_file_handle *		1394205	0					
ANR	1395011	Identifier	file_handle		1394205	1					
ANR	1395012	Parameter	int type	1392:83:40166:40173	1394205	1	True				
ANR	1395013	ParameterType	int		1394205	0					
ANR	1395014	Identifier	type		1394205	1					
ANR	1395015	Parameter	char * key	1392:93:40176:40184	1394205	2	True				
ANR	1395016	ParameterType	char *		1394205	0					
ANR	1395017	Identifier	key		1394205	1					
ANR	1395018	Parameter	unsigned int key_length	1392:104:40187:40209	1394205	3	True				
ANR	1395019	ParameterType	unsigned int		1394205	0					
ANR	1395020	Identifier	key_length		1394205	1					
ANR	1395021	Parameter	zend_op_array * * op_array_p	1392:129:40212:40237	1394205	4	True				
ANR	1395022	ParameterType	zend_op_array * *		1394205	0					
ANR	1395023	Identifier	op_array_p		1394205	1					
ANR	1395024	CFGEntryNode	ENTRY		1394205		True				
ANR	1395025	CFGExitNode	EXIT		1394205		True				
ANR	1395026	Symbol	new_persistent_script -> timestamp		1394205						
ANR	1395027	Symbol	new_persistent_script -> full_path		1394205						
ANR	1395028	Symbol	new_persistent_script -> dynamic_members . revalidate		1394205						
ANR	1395029	Symbol	new_persistent_script -> main_op_array		1394205						
ANR	1395030	Symbol	type		1394205						
ANR	1395031	Symbol	orig_compiler_options		1394205						
ANR	1395032	Symbol	strlen		1394205						
ANR	1395033	Symbol	zend_string_init		1394205						
ANR	1395034	Symbol	ZEND_COMPILE_DELAYED_BINDING		1394205						
ANR	1395035	Symbol	ZCSG		1394205						
ANR	1395036	Symbol	new_persistent_script		1394205						
ANR	1395037	Symbol	zend_get_file_handle_timestamp		1394205						
ANR	1395038	Symbol	EG		1394205						
ANR	1395039	Symbol	orig_user_error_handler		1394205						
ANR	1395040	Symbol	NULL		1394205						
ANR	1395041	Symbol	ZMSG_FAILED_INCLUDE_FOPEN		1394205						
ANR	1395042	Symbol	blacklist_misses		1394205						
ANR	1395043	Symbol	zend_string_copy		1394205						
ANR	1395044	Symbol	ZCG ( accel_directives ) . file_update_protection		1394205						
ANR	1395045	Symbol	file_handle		1394205						
ANR	1395046	Symbol	* op_array		1394205						
ANR	1395047	Symbol	* op_array_p		1394205						
ANR	1395048	Symbol	file_handle -> opened_path		1394205						
ANR	1395049	Symbol	ZCG ( accel_directives ) . revalidate_freq		1394205						
ANR	1395050	Symbol	file_handle -> filename		1394205						
ANR	1395051	Symbol	size		1394205						
ANR	1395052	Symbol	new_persistent_script -> dynamic_members		1394205						
ANR	1395053	Symbol	ZMSG_FAILED_REQUIRE_FOPEN		1394205						
ANR	1395054	Symbol	ZEND_HANDLE_FILENAME		1394205						
ANR	1395055	Symbol	do_bailout		1394205						
ANR	1395056	Symbol	function_table		1394205						
ANR	1395057	Symbol	op_array_p		1394205						
ANR	1395058	Symbol	ZCG		1394205						
ANR	1395059	Symbol	& orig_user_error_handler		1394205						
ANR	1395060	Symbol	& accel_blacklist		1394205						
ANR	1395061	Symbol	new_persistent_script -> ping_auto_globals_mask		1394205						
ANR	1395062	Symbol	user_error_handler		1394205						
ANR	1395063	Symbol	ZCG ( accel_directives ) . validate_timestamps		1394205						
ANR	1395064	Symbol	auto_globals_jit		1394205						
ANR	1395065	Symbol	ZCG ( accel_directives ) . max_file_size		1394205						
ANR	1395066	Symbol	zend_accel_blacklist_is_blacklisted		1394205						
ANR	1395067	Symbol	create_persistent_script		1394205						
ANR	1395068	Symbol	accelerator_orig_compile_file		1394205						
ANR	1395069	Symbol	& EG		1394205						
ANR	1395070	Symbol	* file_handle		1394205						
ANR	1395071	Symbol	zend_accel_get_auto_globals_no_jit		1394205						
ANR	1395072	Symbol	file_handle -> type		1394205						
ANR	1395073	Symbol	compiler_options		1394205						
ANR	1395074	Symbol	accelerator_orig_zend_stream_open_function		1394205						
ANR	1395075	Symbol	request_time		1394205						
ANR	1395076	Symbol	& new_persistent_script -> class_table		1394205						
ANR	1395077	Symbol	key_length		1394205						
ANR	1395078	Symbol	orig_active_op_array		1394205						
ANR	1395079	Symbol	class_table		1394205						
ANR	1395080	Symbol	ZEND_COMPILE_IGNORE_INTERNAL_CLASSES		1394205						
ANR	1395081	Symbol	ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION		1394205						
ANR	1395082	Symbol	key		1394205						
ANR	1395083	Symbol	orig_function_table		1394205						
ANR	1395084	Symbol	timestamp		1394205						
ANR	1395085	Symbol	key_len		1394205						
ANR	1395086	Symbol	ZEND_COMPILE_HANDLE_OP_ARRAY		1394205						
ANR	1395087	Symbol	& new_persistent_script -> function_table		1394205						
ANR	1395088	Symbol	orig_class_table		1394205						
ANR	1395089	Symbol	SUCCESS		1394205						
ANR	1395090	Symbol	& ZCG		1394205						
ANR	1395091	Symbol	CG		1394205						
ANR	1395092	Symbol	active_op_array		1394205						
ANR	1395093	Symbol	& size		1394205						
ANR	1395094	Symbol	ZSTR_VAL		1394205						
ANR	1395095	Symbol	zend_accel_get_auto_globals		1394205						
ANR	1395096	Symbol	ZEND_REQUIRE		1394205						
ANR	1395097	Symbol	PG		1394205						
ANR	1395098	Symbol	accel_directives		1394205						
ANR	1395099	Symbol	* new_persistent_script		1394205						
ANR	1395100	Symbol	op_array		1394205						
ANR	1395101	Function	file_cache_compile_file	1541:0:45608:48203							
ANR	1395102	FunctionDef	"file_cache_compile_file (zend_file_handle * file_handle , int type)"		1395101	0					
ANR	1395103	CompoundStatement		1542:0:45688:48203	1395101	0					
ANR	1395104	IdentifierDeclStatement	zend_persistent_script * persistent_script ;	1543:1:45691:45732	1395101	0	True				
ANR	1395105	IdentifierDecl	* persistent_script		1395101	0					
ANR	1395106	IdentifierDeclType	zend_persistent_script *		1395101	0					
ANR	1395107	Identifier	persistent_script		1395101	1					
ANR	1395108	IdentifierDeclStatement	zend_op_array * op_array = NULL ;	1544:1:45735:45765	1395101	1	True				
ANR	1395109	IdentifierDecl	* op_array = NULL		1395101	0					
ANR	1395110	IdentifierDeclType	zend_op_array *		1395101	0					
ANR	1395111	Identifier	op_array		1395101	1					
ANR	1395112	AssignmentExpression	* op_array = NULL		1395101	2		=			
ANR	1395113	Identifier	NULL		1395101	0					
ANR	1395114	Identifier	NULL		1395101	1					
ANR	1395115	IdentifierDeclStatement	int from_memory ;	1545:1:45768:45783	1395101	2	True				
ANR	1395116	IdentifierDecl	from_memory		1395101	0					
ANR	1395117	IdentifierDeclType	int		1395101	0					
ANR	1395118	Identifier	from_memory		1395101	1					
ANR	1395119	IfStatement	if ( is_stream_path ( file_handle -> filename ) && ! is_cacheable_stream_path ( file_handle -> filename ) )		1395101	3					
ANR	1395120	Condition	is_stream_path ( file_handle -> filename ) && ! is_cacheable_stream_path ( file_handle -> filename )	1547:5:45838:45931	1395101	0	True				
ANR	1395121	AndExpression	is_stream_path ( file_handle -> filename ) && ! is_cacheable_stream_path ( file_handle -> filename )		1395101	0		&&			
ANR	1395122	CallExpression	is_stream_path ( file_handle -> filename )		1395101	0					
ANR	1395123	Callee	is_stream_path		1395101	0					
ANR	1395124	Identifier	is_stream_path		1395101	0					
ANR	1395125	ArgumentList	file_handle -> filename		1395101	1					
ANR	1395126	Argument	file_handle -> filename		1395101	0					
ANR	1395127	PtrMemberAccess	file_handle -> filename		1395101	0					
ANR	1395128	Identifier	file_handle		1395101	0					
ANR	1395129	Identifier	filename		1395101	1					
ANR	1395130	UnaryOperationExpression	! is_cacheable_stream_path ( file_handle -> filename )		1395101	1					
ANR	1395131	UnaryOperator	!		1395101	0					
ANR	1395132	CallExpression	is_cacheable_stream_path ( file_handle -> filename )		1395101	1					
ANR	1395133	Callee	is_cacheable_stream_path		1395101	0					
ANR	1395134	Identifier	is_cacheable_stream_path		1395101	0					
ANR	1395135	ArgumentList	file_handle -> filename		1395101	1					
ANR	1395136	Argument	file_handle -> filename		1395101	0					
ANR	1395137	PtrMemberAccess	file_handle -> filename		1395101	0					
ANR	1395138	Identifier	file_handle		1395101	0					
ANR	1395139	Identifier	filename		1395101	1					
ANR	1395140	CompoundStatement		7:55:245:245	1395101	1					
ANR	1395141	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1549:2:45938:45993	1395101	0	True				
ANR	1395142	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1395101	0					
ANR	1395143	Callee	accelerator_orig_compile_file		1395101	0					
ANR	1395144	Identifier	accelerator_orig_compile_file		1395101	0					
ANR	1395145	ArgumentList	file_handle		1395101	1					
ANR	1395146	Argument	file_handle		1395101	0					
ANR	1395147	Identifier	file_handle		1395101	0					
ANR	1395148	Argument	type		1395101	1					
ANR	1395149	Identifier	type		1395101	0					
ANR	1395150	IfStatement	if ( ! file_handle -> opened_path )		1395101	4					
ANR	1395151	Condition	! file_handle -> opened_path	1552:5:46004:46028	1395101	0	True				
ANR	1395152	UnaryOperationExpression	! file_handle -> opened_path		1395101	0					
ANR	1395153	UnaryOperator	!		1395101	0					
ANR	1395154	PtrMemberAccess	file_handle -> opened_path		1395101	1					
ANR	1395155	Identifier	file_handle		1395101	0					
ANR	1395156	Identifier	opened_path		1395101	1					
ANR	1395157	CompoundStatement		11:32:342:342	1395101	1					
ANR	1395158	IfStatement	"if ( file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE )"		1395101	0					
ANR	1395159	Condition	"file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"	1553:6:46039:46178	1395101	0	True				
ANR	1395160	AndExpression	"file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"		1395101	0		&&			
ANR	1395161	EqualityExpression	file_handle -> type == ZEND_HANDLE_FILENAME		1395101	0		==			
ANR	1395162	PtrMemberAccess	file_handle -> type		1395101	0					
ANR	1395163	Identifier	file_handle		1395101	0					
ANR	1395164	Identifier	type		1395101	1					
ANR	1395165	Identifier	ZEND_HANDLE_FILENAME		1395101	1					
ANR	1395166	EqualityExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"		1395101	1		==			
ANR	1395167	CallExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle )"		1395101	0					
ANR	1395168	Callee	accelerator_orig_zend_stream_open_function		1395101	0					
ANR	1395169	Identifier	accelerator_orig_zend_stream_open_function		1395101	0					
ANR	1395170	ArgumentList	file_handle -> filename		1395101	1					
ANR	1395171	Argument	file_handle -> filename		1395101	0					
ANR	1395172	PtrMemberAccess	file_handle -> filename		1395101	0					
ANR	1395173	Identifier	file_handle		1395101	0					
ANR	1395174	Identifier	filename		1395101	1					
ANR	1395175	Argument	file_handle		1395101	1					
ANR	1395176	Identifier	file_handle		1395101	0					
ANR	1395177	Identifier	FAILURE		1395101	1					
ANR	1395178	CompoundStatement		13:97:492:492	1395101	1					
ANR	1395179	IfStatement	if ( type == ZEND_REQUIRE )		1395101	0					
ANR	1395180	Condition	type == ZEND_REQUIRE	1555:7:46190:46209	1395101	0	True				
ANR	1395181	EqualityExpression	type == ZEND_REQUIRE		1395101	0		==			
ANR	1395182	Identifier	type		1395101	0					
ANR	1395183	Identifier	ZEND_REQUIRE		1395101	1					
ANR	1395184	CompoundStatement		14:29:523:523	1395101	1					
ANR	1395185	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"	1556:4:46218:46291	1395101	0	True				
ANR	1395186	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"		1395101	0					
ANR	1395187	Callee	zend_message_dispatcher		1395101	0					
ANR	1395188	Identifier	zend_message_dispatcher		1395101	0					
ANR	1395189	ArgumentList	ZMSG_FAILED_REQUIRE_FOPEN		1395101	1					
ANR	1395190	Argument	ZMSG_FAILED_REQUIRE_FOPEN		1395101	0					
ANR	1395191	Identifier	ZMSG_FAILED_REQUIRE_FOPEN		1395101	0					
ANR	1395192	Argument	file_handle -> filename		1395101	1					
ANR	1395193	PtrMemberAccess	file_handle -> filename		1395101	0					
ANR	1395194	Identifier	file_handle		1395101	0					
ANR	1395195	Identifier	filename		1395101	1					
ANR	1395196	ExpressionStatement	zend_bailout ( )	1557:4:46297:46311	1395101	1	True				
ANR	1395197	CallExpression	zend_bailout ( )		1395101	0					
ANR	1395198	Callee	zend_bailout		1395101	0					
ANR	1395199	Identifier	zend_bailout		1395101	0					
ANR	1395200	ArgumentList			1395101	1					
ANR	1395201	ElseStatement	else		1395101	0					
ANR	1395202	CompoundStatement		17:10:634:634	1395101	0					
ANR	1395203	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"	1559:4:46329:46402	1395101	0	True				
ANR	1395204	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"		1395101	0					
ANR	1395205	Callee	zend_message_dispatcher		1395101	0					
ANR	1395206	Identifier	zend_message_dispatcher		1395101	0					
ANR	1395207	ArgumentList	ZMSG_FAILED_INCLUDE_FOPEN		1395101	1					
ANR	1395208	Argument	ZMSG_FAILED_INCLUDE_FOPEN		1395101	0					
ANR	1395209	Identifier	ZMSG_FAILED_INCLUDE_FOPEN		1395101	0					
ANR	1395210	Argument	file_handle -> filename		1395101	1					
ANR	1395211	PtrMemberAccess	file_handle -> filename		1395101	0					
ANR	1395212	Identifier	file_handle		1395101	0					
ANR	1395213	Identifier	filename		1395101	1					
ANR	1395214	ReturnStatement	return NULL ;	1561:3:46412:46423	1395101	1	True				
ANR	1395215	Identifier	NULL		1395101	0					
ANR	1395216	ExpressionStatement	persistent_script = zend_file_cache_script_load ( file_handle )	1565:1:46437:46497	1395101	5	True				
ANR	1395217	AssignmentExpression	persistent_script = zend_file_cache_script_load ( file_handle )		1395101	0		=			
ANR	1395218	Identifier	persistent_script		1395101	0					
ANR	1395219	CallExpression	zend_file_cache_script_load ( file_handle )		1395101	1					
ANR	1395220	Callee	zend_file_cache_script_load		1395101	0					
ANR	1395221	Identifier	zend_file_cache_script_load		1395101	0					
ANR	1395222	ArgumentList	file_handle		1395101	1					
ANR	1395223	Argument	file_handle		1395101	0					
ANR	1395224	Identifier	file_handle		1395101	0					
ANR	1395225	IfStatement	if ( persistent_script )		1395101	6					
ANR	1395226	Condition	persistent_script	1566:5:46504:46520	1395101	0	True				
ANR	1395227	Identifier	persistent_script		1395101	0					
ANR	1395228	CompoundStatement		25:24:834:834	1395101	1					
ANR	1395229	IfStatement	if ( persistent_script -> full_path )		1395101	0					
ANR	1395230	Condition	persistent_script -> full_path	1568:6:46564:46591	1395101	0	True				
ANR	1395231	PtrMemberAccess	persistent_script -> full_path		1395101	0					
ANR	1395232	Identifier	persistent_script		1395101	0					
ANR	1395233	Identifier	full_path		1395101	1					
ANR	1395234	CompoundStatement		27:36:905:905	1395101	1					
ANR	1395235	IfStatement	if ( ! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE ) )		1395101	0					
ANR	1395236	Condition	! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )	1569:7:46603:47015	1395101	0	True				
ANR	1395237	OrExpression	! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395101	0		||			
ANR	1395238	UnaryOperationExpression	! EG ( current_execute_data )		1395101	0					
ANR	1395239	UnaryOperator	!		1395101	0					
ANR	1395240	CallExpression	EG ( current_execute_data )		1395101	1					
ANR	1395241	Callee	EG		1395101	0					
ANR	1395242	Identifier	EG		1395101	0					
ANR	1395243	ArgumentList	current_execute_data		1395101	1					
ANR	1395244	Argument	current_execute_data		1395101	0					
ANR	1395245	Identifier	current_execute_data		1395101	0					
ANR	1395246	OrExpression	! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395101	1		||			
ANR	1395247	UnaryOperationExpression	! EG ( current_execute_data ) -> opline		1395101	0					
ANR	1395248	UnaryOperator	!		1395101	0					
ANR	1395249	PtrMemberAccess	EG ( current_execute_data ) -> opline		1395101	1					
ANR	1395250	CallExpression	EG ( current_execute_data )		1395101	0					
ANR	1395251	Callee	EG		1395101	0					
ANR	1395252	Identifier	EG		1395101	0					
ANR	1395253	ArgumentList	current_execute_data		1395101	1					
ANR	1395254	Argument	current_execute_data		1395101	0					
ANR	1395255	Identifier	current_execute_data		1395101	0					
ANR	1395256	Identifier	opline		1395101	1					
ANR	1395257	OrExpression	! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395101	1		||			
ANR	1395258	UnaryOperationExpression	! EG ( current_execute_data ) -> func		1395101	0					
ANR	1395259	UnaryOperator	!		1395101	0					
ANR	1395260	PtrMemberAccess	EG ( current_execute_data ) -> func		1395101	1					
ANR	1395261	CallExpression	EG ( current_execute_data )		1395101	0					
ANR	1395262	Callee	EG		1395101	0					
ANR	1395263	Identifier	EG		1395101	0					
ANR	1395264	ArgumentList	current_execute_data		1395101	1					
ANR	1395265	Argument	current_execute_data		1395101	0					
ANR	1395266	Identifier	current_execute_data		1395101	0					
ANR	1395267	Identifier	func		1395101	1					
ANR	1395268	OrExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395101	1		||			
ANR	1395269	UnaryOperationExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		1395101	0					
ANR	1395270	UnaryOperator	!		1395101	0					
ANR	1395271	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		1395101	1					
ANR	1395272	Callee	ZEND_USER_CODE		1395101	0					
ANR	1395273	Identifier	ZEND_USER_CODE		1395101	0					
ANR	1395274	ArgumentList	EG ( current_execute_data ) -> func -> common . type		1395101	1					
ANR	1395275	Argument	EG ( current_execute_data ) -> func -> common . type		1395101	0					
ANR	1395276	MemberAccess	EG ( current_execute_data ) -> func -> common . type		1395101	0					
ANR	1395277	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		1395101	0					
ANR	1395278	PtrMemberAccess	EG ( current_execute_data ) -> func		1395101	0					
ANR	1395279	CallExpression	EG ( current_execute_data )		1395101	0					
ANR	1395280	Callee	EG		1395101	0					
ANR	1395281	Identifier	EG		1395101	0					
ANR	1395282	ArgumentList	current_execute_data		1395101	1					
ANR	1395283	Argument	current_execute_data		1395101	0					
ANR	1395284	Identifier	current_execute_data		1395101	0					
ANR	1395285	Identifier	func		1395101	1					
ANR	1395286	Identifier	common		1395101	1					
ANR	1395287	Identifier	type		1395101	1					
ANR	1395288	OrExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395101	1		||			
ANR	1395289	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		1395101	0		!=			
ANR	1395290	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		1395101	0					
ANR	1395291	PtrMemberAccess	EG ( current_execute_data ) -> opline		1395101	0					
ANR	1395292	CallExpression	EG ( current_execute_data )		1395101	0					
ANR	1395293	Callee	EG		1395101	0					
ANR	1395294	Identifier	EG		1395101	0					
ANR	1395295	ArgumentList	current_execute_data		1395101	1					
ANR	1395296	Argument	current_execute_data		1395101	0					
ANR	1395297	Identifier	current_execute_data		1395101	0					
ANR	1395298	Identifier	opline		1395101	1					
ANR	1395299	Identifier	opcode		1395101	1					
ANR	1395300	Identifier	ZEND_INCLUDE_OR_EVAL		1395101	1					
ANR	1395301	AndExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE		1395101	1		&&			
ANR	1395302	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE		1395101	0		!=			
ANR	1395303	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		1395101	0					
ANR	1395304	PtrMemberAccess	EG ( current_execute_data ) -> opline		1395101	0					
ANR	1395305	CallExpression	EG ( current_execute_data )		1395101	0					
ANR	1395306	Callee	EG		1395101	0					
ANR	1395307	Identifier	EG		1395101	0					
ANR	1395308	ArgumentList	current_execute_data		1395101	1					
ANR	1395309	Argument	current_execute_data		1395101	0					
ANR	1395310	Identifier	current_execute_data		1395101	0					
ANR	1395311	Identifier	opline		1395101	1					
ANR	1395312	Identifier	extended_value		1395101	1					
ANR	1395313	Identifier	ZEND_INCLUDE_ONCE		1395101	1					
ANR	1395314	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE		1395101	1		!=			
ANR	1395315	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		1395101	0					
ANR	1395316	PtrMemberAccess	EG ( current_execute_data ) -> opline		1395101	0					
ANR	1395317	CallExpression	EG ( current_execute_data )		1395101	0					
ANR	1395318	Callee	EG		1395101	0					
ANR	1395319	Identifier	EG		1395101	0					
ANR	1395320	ArgumentList	current_execute_data		1395101	1					
ANR	1395321	Argument	current_execute_data		1395101	0					
ANR	1395322	Identifier	current_execute_data		1395101	0					
ANR	1395323	Identifier	opline		1395101	1					
ANR	1395324	Identifier	extended_value		1395101	1					
ANR	1395325	Identifier	ZEND_REQUIRE_ONCE		1395101	1					
ANR	1395326	CompoundStatement		33:80:1329:1329	1395101	1					
ANR	1395327	IfStatement	"if ( zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL )"		1395101	0					
ANR	1395328	Condition	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL"	1575:8:47028:47113	1395101	0	True				
ANR	1395329	EqualityExpression	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL"		1395101	0		!=			
ANR	1395330	CallExpression	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path )"		1395101	0					
ANR	1395331	Callee	zend_hash_add_empty_element		1395101	0					
ANR	1395332	Identifier	zend_hash_add_empty_element		1395101	0					
ANR	1395333	ArgumentList	& EG ( included_files )		1395101	1					
ANR	1395334	Argument	& EG ( included_files )		1395101	0					
ANR	1395335	UnaryOperationExpression	& EG ( included_files )		1395101	0					
ANR	1395336	UnaryOperator	&		1395101	0					
ANR	1395337	CallExpression	EG ( included_files )		1395101	1					
ANR	1395338	Callee	EG		1395101	0					
ANR	1395339	Identifier	EG		1395101	0					
ANR	1395340	ArgumentList	included_files		1395101	1					
ANR	1395341	Argument	included_files		1395101	0					
ANR	1395342	Identifier	included_files		1395101	0					
ANR	1395343	Argument	persistent_script -> full_path		1395101	1					
ANR	1395344	PtrMemberAccess	persistent_script -> full_path		1395101	0					
ANR	1395345	Identifier	persistent_script		1395101	0					
ANR	1395346	Identifier	full_path		1395101	1					
ANR	1395347	Identifier	NULL		1395101	1					
ANR	1395348	CompoundStatement		34:96:1427:1427	1395101	1					
ANR	1395349	IfStatement	if ( persistent_script -> is_phar )		1395101	0					
ANR	1395350	Condition	persistent_script -> is_phar	1577:9:47187:47212	1395101	0	True				
ANR	1395351	PtrMemberAccess	persistent_script -> is_phar		1395101	0					
ANR	1395352	Identifier	persistent_script		1395101	0					
ANR	1395353	Identifier	is_phar		1395101	1					
ANR	1395354	CompoundStatement		38:6:1564:1645	1395101	1					
ANR	1395355	IdentifierDeclStatement	php_stream_statbuf ssb ;	1578:6:47223:47245	1395101	0	True				
ANR	1395356	IdentifierDecl	ssb		1395101	0					
ANR	1395357	IdentifierDeclType	php_stream_statbuf		1395101	0					
ANR	1395358	Identifier	ssb		1395101	1					
ANR	1395359	IdentifierDeclStatement	"char * fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) ) ;"	1579:6:47253:47334	1395101	1	True				
ANR	1395360	IdentifierDecl	"* fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		1395101	0					
ANR	1395361	IdentifierDeclType	char *		1395101	0					
ANR	1395362	Identifier	fname		1395101	1					
ANR	1395363	AssignmentExpression	"* fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		1395101	2		=			
ANR	1395364	Identifier	fname		1395101	0					
ANR	1395365	CallExpression	"emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		1395101	1					
ANR	1395366	Callee	emalloc		1395101	0					
ANR	1395367	Identifier	emalloc		1395101	0					
ANR	1395368	ArgumentList	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		1395101	1					
ANR	1395369	Argument	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		1395101	0					
ANR	1395370	AdditiveExpression	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		1395101	0		+			
ANR	1395371	SizeofExpression	"sizeof ( ""phar://"" )"		1395101	0					
ANR	1395372	Sizeof	sizeof		1395101	0					
ANR	1395373	PrimaryExpression	"""phar://"""		1395101	1					
ANR	1395374	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		1395101	1					
ANR	1395375	Callee	ZSTR_LEN		1395101	0					
ANR	1395376	Identifier	ZSTR_LEN		1395101	0					
ANR	1395377	ArgumentList	persistent_script -> full_path		1395101	1					
ANR	1395378	Argument	persistent_script -> full_path		1395101	0					
ANR	1395379	PtrMemberAccess	persistent_script -> full_path		1395101	0					
ANR	1395380	Identifier	persistent_script		1395101	0					
ANR	1395381	Identifier	full_path		1395101	1					
ANR	1395382	ExpressionStatement	"memcpy ( fname , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"	1581:6:47343:47390	1395101	2	True				
ANR	1395383	CallExpression	"memcpy ( fname , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"		1395101	0					
ANR	1395384	Callee	memcpy		1395101	0					
ANR	1395385	Identifier	memcpy		1395101	0					
ANR	1395386	ArgumentList	fname		1395101	1					
ANR	1395387	Argument	fname		1395101	0					
ANR	1395388	Identifier	fname		1395101	0					
ANR	1395389	Argument	"""phar://"""		1395101	1					
ANR	1395390	PrimaryExpression	"""phar://"""		1395101	0					
ANR	1395391	Argument	"sizeof ( ""phar://"" ) - 1"		1395101	2					
ANR	1395392	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		1395101	0		-			
ANR	1395393	SizeofExpression	"sizeof ( ""phar://"" )"		1395101	0					
ANR	1395394	Sizeof	sizeof		1395101	0					
ANR	1395395	PrimaryExpression	"""phar://"""		1395101	1					
ANR	1395396	PrimaryExpression	1		1395101	1					
ANR	1395397	ExpressionStatement	"memcpy ( fname + sizeof ( ""phar://"" ) - 1 , ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_LEN ( persistent_script -> full_path ) + 1 )"	1582:6:47398:47519	1395101	3	True				
ANR	1395398	CallExpression	"memcpy ( fname + sizeof ( ""phar://"" ) - 1 , ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_LEN ( persistent_script -> full_path ) + 1 )"		1395101	0					
ANR	1395399	Callee	memcpy		1395101	0					
ANR	1395400	Identifier	memcpy		1395101	0					
ANR	1395401	ArgumentList	"fname + sizeof ( ""phar://"" ) - 1"		1395101	1					
ANR	1395402	Argument	"fname + sizeof ( ""phar://"" ) - 1"		1395101	0					
ANR	1395403	AdditiveExpression	"fname + sizeof ( ""phar://"" ) - 1"		1395101	0		+			
ANR	1395404	Identifier	fname		1395101	0					
ANR	1395405	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		1395101	1		-			
ANR	1395406	SizeofExpression	"sizeof ( ""phar://"" )"		1395101	0					
ANR	1395407	Sizeof	sizeof		1395101	0					
ANR	1395408	PrimaryExpression	"""phar://"""		1395101	1					
ANR	1395409	PrimaryExpression	1		1395101	1					
ANR	1395410	Argument	ZSTR_VAL ( persistent_script -> full_path )		1395101	1					
ANR	1395411	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		1395101	0					
ANR	1395412	Callee	ZSTR_VAL		1395101	0					
ANR	1395413	Identifier	ZSTR_VAL		1395101	0					
ANR	1395414	ArgumentList	persistent_script -> full_path		1395101	1					
ANR	1395415	Argument	persistent_script -> full_path		1395101	0					
ANR	1395416	PtrMemberAccess	persistent_script -> full_path		1395101	0					
ANR	1395417	Identifier	persistent_script		1395101	0					
ANR	1395418	Identifier	full_path		1395101	1					
ANR	1395419	Argument	ZSTR_LEN ( persistent_script -> full_path ) + 1		1395101	2					
ANR	1395420	AdditiveExpression	ZSTR_LEN ( persistent_script -> full_path ) + 1		1395101	0		+			
ANR	1395421	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		1395101	0					
ANR	1395422	Callee	ZSTR_LEN		1395101	0					
ANR	1395423	Identifier	ZSTR_LEN		1395101	0					
ANR	1395424	ArgumentList	persistent_script -> full_path		1395101	1					
ANR	1395425	Argument	persistent_script -> full_path		1395101	0					
ANR	1395426	PtrMemberAccess	persistent_script -> full_path		1395101	0					
ANR	1395427	Identifier	persistent_script		1395101	0					
ANR	1395428	Identifier	full_path		1395101	1					
ANR	1395429	PrimaryExpression	1		1395101	1					
ANR	1395430	ExpressionStatement	"php_stream_stat_path ( fname , & ssb )"	1583:6:47527:47560	1395101	4	True				
ANR	1395431	CallExpression	"php_stream_stat_path ( fname , & ssb )"		1395101	0					
ANR	1395432	Callee	php_stream_stat_path		1395101	0					
ANR	1395433	Identifier	php_stream_stat_path		1395101	0					
ANR	1395434	ArgumentList	fname		1395101	1					
ANR	1395435	Argument	fname		1395101	0					
ANR	1395436	Identifier	fname		1395101	0					
ANR	1395437	Argument	& ssb		1395101	1					
ANR	1395438	UnaryOperationExpression	& ssb		1395101	0					
ANR	1395439	UnaryOperator	&		1395101	0					
ANR	1395440	Identifier	ssb		1395101	1					
ANR	1395441	ExpressionStatement	efree ( fname )	1584:6:47568:47580	1395101	5	True				
ANR	1395442	CallExpression	efree ( fname )		1395101	0					
ANR	1395443	Callee	efree		1395101	0					
ANR	1395444	Identifier	efree		1395101	0					
ANR	1395445	ArgumentList	fname		1395101	1					
ANR	1395446	Argument	fname		1395101	0					
ANR	1395447	Identifier	fname		1395101	0					
ANR	1395448	ExpressionStatement	zend_file_handle_dtor ( file_handle )	1589:2:47606:47640	1395101	1	True				
ANR	1395449	CallExpression	zend_file_handle_dtor ( file_handle )		1395101	0					
ANR	1395450	Callee	zend_file_handle_dtor		1395101	0					
ANR	1395451	Identifier	zend_file_handle_dtor		1395101	0					
ANR	1395452	ArgumentList	file_handle		1395101	1					
ANR	1395453	Argument	file_handle		1395101	0					
ANR	1395454	Identifier	file_handle		1395101	0					
ANR	1395455	ExpressionStatement	persistent_script -> dynamic_members . last_used = ZCG ( request_time )	1591:2:47645:47709	1395101	2	True				
ANR	1395456	AssignmentExpression	persistent_script -> dynamic_members . last_used = ZCG ( request_time )		1395101	0		=			
ANR	1395457	MemberAccess	persistent_script -> dynamic_members . last_used		1395101	0					
ANR	1395458	PtrMemberAccess	persistent_script -> dynamic_members		1395101	0					
ANR	1395459	Identifier	persistent_script		1395101	0					
ANR	1395460	Identifier	dynamic_members		1395101	1					
ANR	1395461	Identifier	last_used		1395101	1					
ANR	1395462	CallExpression	ZCG ( request_time )		1395101	1					
ANR	1395463	Callee	ZCG		1395101	0					
ANR	1395464	Identifier	ZCG		1395101	0					
ANR	1395465	ArgumentList	request_time		1395101	1					
ANR	1395466	Argument	request_time		1395101	0					
ANR	1395467	Identifier	request_time		1395101	0					
ANR	1395468	IfStatement	if ( persistent_script -> ping_auto_globals_mask )		1395101	3					
ANR	1395469	Condition	persistent_script -> ping_auto_globals_mask	1593:9:47721:47761	1395101	0	True				
ANR	1395470	PtrMemberAccess	persistent_script -> ping_auto_globals_mask		1395101	0					
ANR	1395471	Identifier	persistent_script		1395101	0					
ANR	1395472	Identifier	ping_auto_globals_mask		1395101	1					
ANR	1395473	CompoundStatement		52:52:2075:2075	1395101	1					
ANR	1395474	ExpressionStatement	zend_accel_set_auto_globals ( persistent_script -> ping_auto_globals_mask )	1594:3:47769:47839	1395101	0	True				
ANR	1395475	CallExpression	zend_accel_set_auto_globals ( persistent_script -> ping_auto_globals_mask )		1395101	0					
ANR	1395476	Callee	zend_accel_set_auto_globals		1395101	0					
ANR	1395477	Identifier	zend_accel_set_auto_globals		1395101	0					
ANR	1395478	ArgumentList	persistent_script -> ping_auto_globals_mask		1395101	1					
ANR	1395479	Argument	persistent_script -> ping_auto_globals_mask		1395101	0					
ANR	1395480	PtrMemberAccess	persistent_script -> ping_auto_globals_mask		1395101	0					
ANR	1395481	Identifier	persistent_script		1395101	0					
ANR	1395482	Identifier	ping_auto_globals_mask		1395101	1					
ANR	1395483	ReturnStatement	"return zend_accel_load_script ( persistent_script , 1 ) ;"	1597:2:47848:47899	1395101	4	True				
ANR	1395484	CallExpression	"zend_accel_load_script ( persistent_script , 1 )"		1395101	0					
ANR	1395485	Callee	zend_accel_load_script		1395101	0					
ANR	1395486	Identifier	zend_accel_load_script		1395101	0					
ANR	1395487	ArgumentList	persistent_script		1395101	1					
ANR	1395488	Argument	persistent_script		1395101	0					
ANR	1395489	Identifier	persistent_script		1395101	0					
ANR	1395490	Argument	1		1395101	1					
ANR	1395491	PrimaryExpression	1		1395101	0					
ANR	1395492	ExpressionStatement	"persistent_script = opcache_compile_file ( file_handle , type , NULL , 0 , & op_array )"	1600:1:47906:47985	1395101	7	True				
ANR	1395493	AssignmentExpression	"persistent_script = opcache_compile_file ( file_handle , type , NULL , 0 , & op_array )"		1395101	0		=			
ANR	1395494	Identifier	persistent_script		1395101	0					
ANR	1395495	CallExpression	"opcache_compile_file ( file_handle , type , NULL , 0 , & op_array )"		1395101	1					
ANR	1395496	Callee	opcache_compile_file		1395101	0					
ANR	1395497	Identifier	opcache_compile_file		1395101	0					
ANR	1395498	ArgumentList	file_handle		1395101	1					
ANR	1395499	Argument	file_handle		1395101	0					
ANR	1395500	Identifier	file_handle		1395101	0					
ANR	1395501	Argument	type		1395101	1					
ANR	1395502	Identifier	type		1395101	0					
ANR	1395503	Argument	NULL		1395101	2					
ANR	1395504	Identifier	NULL		1395101	0					
ANR	1395505	Argument	0		1395101	3					
ANR	1395506	PrimaryExpression	0		1395101	0					
ANR	1395507	Argument	& op_array		1395101	4					
ANR	1395508	UnaryOperationExpression	& op_array		1395101	0					
ANR	1395509	UnaryOperator	&		1395101	0					
ANR	1395510	Identifier	op_array		1395101	1					
ANR	1395511	IfStatement	if ( persistent_script )		1395101	8					
ANR	1395512	Condition	persistent_script	1602:5:47993:48009	1395101	0	True				
ANR	1395513	Identifier	persistent_script		1395101	0					
ANR	1395514	CompoundStatement		61:24:2323:2323	1395101	1					
ANR	1395515	ExpressionStatement	from_memory = 0	1603:2:48016:48031	1395101	0	True				
ANR	1395516	AssignmentExpression	from_memory = 0		1395101	0		=			
ANR	1395517	Identifier	from_memory		1395101	0					
ANR	1395518	PrimaryExpression	0		1395101	1					
ANR	1395519	ExpressionStatement	"persistent_script = cache_script_in_file_cache ( persistent_script , & from_memory )"	1604:2:48035:48114	1395101	1	True				
ANR	1395520	AssignmentExpression	"persistent_script = cache_script_in_file_cache ( persistent_script , & from_memory )"		1395101	0		=			
ANR	1395521	Identifier	persistent_script		1395101	0					
ANR	1395522	CallExpression	"cache_script_in_file_cache ( persistent_script , & from_memory )"		1395101	1					
ANR	1395523	Callee	cache_script_in_file_cache		1395101	0					
ANR	1395524	Identifier	cache_script_in_file_cache		1395101	0					
ANR	1395525	ArgumentList	persistent_script		1395101	1					
ANR	1395526	Argument	persistent_script		1395101	0					
ANR	1395527	Identifier	persistent_script		1395101	0					
ANR	1395528	Argument	& from_memory		1395101	1					
ANR	1395529	UnaryOperationExpression	& from_memory		1395101	0					
ANR	1395530	UnaryOperator	&		1395101	0					
ANR	1395531	Identifier	from_memory		1395101	1					
ANR	1395532	ReturnStatement	"return zend_accel_load_script ( persistent_script , from_memory ) ;"	1605:2:48118:48179	1395101	2	True				
ANR	1395533	CallExpression	"zend_accel_load_script ( persistent_script , from_memory )"		1395101	0					
ANR	1395534	Callee	zend_accel_load_script		1395101	0					
ANR	1395535	Identifier	zend_accel_load_script		1395101	0					
ANR	1395536	ArgumentList	persistent_script		1395101	1					
ANR	1395537	Argument	persistent_script		1395101	0					
ANR	1395538	Identifier	persistent_script		1395101	0					
ANR	1395539	Argument	from_memory		1395101	1					
ANR	1395540	Identifier	from_memory		1395101	0					
ANR	1395541	ReturnStatement	return op_array ;	1608:1:48186:48201	1395101	9	True				
ANR	1395542	Identifier	op_array		1395101	0					
ANR	1395543	ReturnType	zend_op_array *		1395101	1					
ANR	1395544	Identifier	file_cache_compile_file		1395101	2					
ANR	1395545	ParameterList	"zend_file_handle * file_handle , int type"		1395101	3					
ANR	1395546	Parameter	zend_file_handle * file_handle	1541:39:45647:45675	1395101	0	True				
ANR	1395547	ParameterType	zend_file_handle *		1395101	0					
ANR	1395548	Identifier	file_handle		1395101	1					
ANR	1395549	Parameter	int type	1541:70:45678:45685	1395101	1	True				
ANR	1395550	ParameterType	int		1395101	0					
ANR	1395551	Identifier	type		1395101	1					
ANR	1395552	CFGEntryNode	ENTRY		1395101		True				
ANR	1395553	CFGExitNode	EXIT		1395101		True				
ANR	1395554	Symbol	ssb		1395101						
ANR	1395555	Symbol	persistent_script -> ping_auto_globals_mask		1395101						
ANR	1395556	Symbol	EG ( current_execute_data ) -> func		1395101						
ANR	1395557	Symbol	EG ( current_execute_data ) -> func -> common . type		1395101						
ANR	1395558	Symbol	& from_memory		1395101						
ANR	1395559	Symbol	current_execute_data		1395101						
ANR	1395560	Symbol	type		1395101						
ANR	1395561	Symbol	* * EG		1395101						
ANR	1395562	Symbol	persistent_script -> full_path		1395101						
ANR	1395563	Symbol	zend_hash_add_empty_element		1395101						
ANR	1395564	Symbol	zend_file_cache_script_load		1395101						
ANR	1395565	Symbol	fname		1395101						
ANR	1395566	Symbol	EG		1395101						
ANR	1395567	Symbol	NULL		1395101						
ANR	1395568	Symbol	from_memory		1395101						
ANR	1395569	Symbol	ZMSG_FAILED_INCLUDE_FOPEN		1395101						
ANR	1395570	Symbol	* EG ( current_execute_data ) -> opline		1395101						
ANR	1395571	Symbol	* EG ( current_execute_data ) -> func		1395101						
ANR	1395572	Symbol	file_handle		1395101						
ANR	1395573	Symbol	* persistent_script		1395101						
ANR	1395574	Symbol	file_handle -> opened_path		1395101						
ANR	1395575	Symbol	& ssb		1395101						
ANR	1395576	Symbol	file_handle -> filename		1395101						
ANR	1395577	Symbol	ZMSG_FAILED_REQUIRE_FOPEN		1395101						
ANR	1395578	Symbol	ZEND_HANDLE_FILENAME		1395101						
ANR	1395579	Symbol	cache_script_in_file_cache		1395101						
ANR	1395580	Symbol	ZEND_USER_CODE		1395101						
ANR	1395581	Symbol	opcache_compile_file		1395101						
ANR	1395582	Symbol	persistent_script -> dynamic_members . last_used		1395101						
ANR	1395583	Symbol	ZCG		1395101						
ANR	1395584	Symbol	accelerator_orig_compile_file		1395101						
ANR	1395585	Symbol	* EG		1395101						
ANR	1395586	Symbol	EG ( current_execute_data ) -> opline		1395101						
ANR	1395587	Symbol	& op_array		1395101						
ANR	1395588	Symbol	& EG		1395101						
ANR	1395589	Symbol	EG ( current_execute_data ) -> opline -> extended_value		1395101						
ANR	1395590	Symbol	* file_handle		1395101						
ANR	1395591	Symbol	is_stream_path		1395101						
ANR	1395592	Symbol	file_handle -> type		1395101						
ANR	1395593	Symbol	emalloc		1395101						
ANR	1395594	Symbol	accelerator_orig_zend_stream_open_function		1395101						
ANR	1395595	Symbol	persistent_script -> is_phar		1395101						
ANR	1395596	Symbol	request_time		1395101						
ANR	1395597	Symbol	ZEND_INCLUDE_OR_EVAL		1395101						
ANR	1395598	Symbol	included_files		1395101						
ANR	1395599	Symbol	ZEND_INCLUDE_ONCE		1395101						
ANR	1395600	Symbol	zend_accel_load_script		1395101						
ANR	1395601	Symbol	persistent_script -> dynamic_members		1395101						
ANR	1395602	Symbol	EG ( current_execute_data ) -> opline -> opcode		1395101						
ANR	1395603	Symbol	ZEND_REQUIRE_ONCE		1395101						
ANR	1395604	Symbol	persistent_script		1395101						
ANR	1395605	Symbol	FAILURE		1395101						
ANR	1395606	Symbol	is_cacheable_stream_path		1395101						
ANR	1395607	Symbol	ZSTR_VAL		1395101						
ANR	1395608	Symbol	EG ( current_execute_data ) -> func -> common		1395101						
ANR	1395609	Symbol	ZEND_REQUIRE		1395101						
ANR	1395610	Symbol	ZSTR_LEN		1395101						
ANR	1395611	Symbol	op_array		1395101						
ANR	1395612	Function	persistent_compile_file	1613:0:48246:56955							
ANR	1395613	FunctionDef	"persistent_compile_file (zend_file_handle * file_handle , int type)"		1395612	0					
ANR	1395614	CompoundStatement		1614:0:48326:56955	1395612	0					
ANR	1395615	IdentifierDeclStatement	zend_persistent_script * persistent_script = NULL ;	1615:1:48329:48377	1395612	0	True				
ANR	1395616	IdentifierDecl	* persistent_script = NULL		1395612	0					
ANR	1395617	IdentifierDeclType	zend_persistent_script *		1395612	0					
ANR	1395618	Identifier	persistent_script		1395612	1					
ANR	1395619	AssignmentExpression	* persistent_script = NULL		1395612	2		=			
ANR	1395620	Identifier	NULL		1395612	0					
ANR	1395621	Identifier	NULL		1395612	1					
ANR	1395622	IdentifierDeclStatement	char * key = NULL ;	1616:1:48380:48396	1395612	1	True				
ANR	1395623	IdentifierDecl	* key = NULL		1395612	0					
ANR	1395624	IdentifierDeclType	char *		1395612	0					
ANR	1395625	Identifier	key		1395612	1					
ANR	1395626	AssignmentExpression	* key = NULL		1395612	2		=			
ANR	1395627	Identifier	NULL		1395612	0					
ANR	1395628	Identifier	NULL		1395612	1					
ANR	1395629	IdentifierDeclStatement	int key_length ;	1617:1:48399:48413	1395612	2	True				
ANR	1395630	IdentifierDecl	key_length		1395612	0					
ANR	1395631	IdentifierDeclType	int		1395612	0					
ANR	1395632	Identifier	key_length		1395612	1					
ANR	1395633	IdentifierDeclStatement	int from_shared_memory ;	1618:1:48416:48438	1395612	3	True				
ANR	1395634	IdentifierDecl	from_shared_memory		1395612	0					
ANR	1395635	IdentifierDeclType	int		1395612	0					
ANR	1395636	Identifier	from_shared_memory		1395612	1					
ANR	1395637	IfStatement	if ( ! file_handle -> filename || ! ZCG ( enabled ) || ! accel_startup_ok )		1395612	4					
ANR	1395638	Condition	! file_handle -> filename || ! ZCG ( enabled ) || ! accel_startup_ok	1620:5:48493:48552	1395612	0	True				
ANR	1395639	OrExpression	! file_handle -> filename || ! ZCG ( enabled ) || ! accel_startup_ok		1395612	0		||			
ANR	1395640	UnaryOperationExpression	! file_handle -> filename		1395612	0					
ANR	1395641	UnaryOperator	!		1395612	0					
ANR	1395642	PtrMemberAccess	file_handle -> filename		1395612	1					
ANR	1395643	Identifier	file_handle		1395612	0					
ANR	1395644	Identifier	filename		1395612	1					
ANR	1395645	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok		1395612	1		||			
ANR	1395646	UnaryOperationExpression	! ZCG ( enabled )		1395612	0					
ANR	1395647	UnaryOperator	!		1395612	0					
ANR	1395648	CallExpression	ZCG ( enabled )		1395612	1					
ANR	1395649	Callee	ZCG		1395612	0					
ANR	1395650	Identifier	ZCG		1395612	0					
ANR	1395651	ArgumentList	enabled		1395612	1					
ANR	1395652	Argument	enabled		1395612	0					
ANR	1395653	Identifier	enabled		1395612	0					
ANR	1395654	UnaryOperationExpression	! accel_startup_ok		1395612	1					
ANR	1395655	UnaryOperator	!		1395612	0					
ANR	1395656	Identifier	accel_startup_ok		1395612	1					
ANR	1395657	CompoundStatement		7:67:228:228	1395612	1					
ANR	1395658	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1622:2:48630:48685	1395612	0	True				
ANR	1395659	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1395612	0					
ANR	1395660	Callee	accelerator_orig_compile_file		1395612	0					
ANR	1395661	Identifier	accelerator_orig_compile_file		1395612	0					
ANR	1395662	ArgumentList	file_handle		1395612	1					
ANR	1395663	Argument	file_handle		1395612	0					
ANR	1395664	Identifier	file_handle		1395612	0					
ANR	1395665	Argument	type		1395612	1					
ANR	1395666	Identifier	type		1395612	0					
ANR	1395667	ElseStatement	else		1395612	0					
ANR	1395668	IfStatement	if ( ZCG ( accel_directives ) . file_cache_only )		1395612	0					
ANR	1395669	Condition	ZCG ( accel_directives ) . file_cache_only	1624:12:48730:48766	1395612	0	True				
ANR	1395670	MemberAccess	ZCG ( accel_directives ) . file_cache_only		1395612	0					
ANR	1395671	CallExpression	ZCG ( accel_directives )		1395612	0					
ANR	1395672	Callee	ZCG		1395612	0					
ANR	1395673	Identifier	ZCG		1395612	0					
ANR	1395674	ArgumentList	accel_directives		1395612	1					
ANR	1395675	Argument	accel_directives		1395612	0					
ANR	1395676	Identifier	accel_directives		1395612	0					
ANR	1395677	Identifier	file_cache_only		1395612	1					
ANR	1395678	CompoundStatement		11:51:442:442	1395612	1					
ANR	1395679	ReturnStatement	"return file_cache_compile_file ( file_handle , type ) ;"	1625:2:48773:48822	1395612	0	True				
ANR	1395680	CallExpression	"file_cache_compile_file ( file_handle , type )"		1395612	0					
ANR	1395681	Callee	file_cache_compile_file		1395612	0					
ANR	1395682	Identifier	file_cache_compile_file		1395612	0					
ANR	1395683	ArgumentList	file_handle		1395612	1					
ANR	1395684	Argument	file_handle		1395612	0					
ANR	1395685	Identifier	file_handle		1395612	0					
ANR	1395686	Argument	type		1395612	1					
ANR	1395687	Identifier	type		1395612	0					
ANR	1395688	ElseStatement	else		1395612	0					
ANR	1395689	IfStatement	if ( ( ! ZCG ( counted ) && ! ZCSG ( accelerator_enabled ) ) || ( ZCSG ( restart_in_progress ) && accel_restart_is_active ( ) ) )		1395612	0					
ANR	1395690	Condition	( ! ZCG ( counted ) && ! ZCSG ( accelerator_enabled ) ) || ( ZCSG ( restart_in_progress ) && accel_restart_is_active ( ) )	1627:12:48843:48959	1395612	0	True				
ANR	1395691	OrExpression	( ! ZCG ( counted ) && ! ZCSG ( accelerator_enabled ) ) || ( ZCSG ( restart_in_progress ) && accel_restart_is_active ( ) )		1395612	0		||			
ANR	1395692	AndExpression	! ZCG ( counted ) && ! ZCSG ( accelerator_enabled )		1395612	0		&&			
ANR	1395693	UnaryOperationExpression	! ZCG ( counted )		1395612	0					
ANR	1395694	UnaryOperator	!		1395612	0					
ANR	1395695	CallExpression	ZCG ( counted )		1395612	1					
ANR	1395696	Callee	ZCG		1395612	0					
ANR	1395697	Identifier	ZCG		1395612	0					
ANR	1395698	ArgumentList	counted		1395612	1					
ANR	1395699	Argument	counted		1395612	0					
ANR	1395700	Identifier	counted		1395612	0					
ANR	1395701	UnaryOperationExpression	! ZCSG ( accelerator_enabled )		1395612	1					
ANR	1395702	UnaryOperator	!		1395612	0					
ANR	1395703	CallExpression	ZCSG ( accelerator_enabled )		1395612	1					
ANR	1395704	Callee	ZCSG		1395612	0					
ANR	1395705	Identifier	ZCSG		1395612	0					
ANR	1395706	ArgumentList	accelerator_enabled		1395612	1					
ANR	1395707	Argument	accelerator_enabled		1395612	0					
ANR	1395708	Identifier	accelerator_enabled		1395612	0					
ANR	1395709	AndExpression	ZCSG ( restart_in_progress ) && accel_restart_is_active ( )		1395612	1		&&			
ANR	1395710	CallExpression	ZCSG ( restart_in_progress )		1395612	0					
ANR	1395711	Callee	ZCSG		1395612	0					
ANR	1395712	Identifier	ZCSG		1395612	0					
ANR	1395713	ArgumentList	restart_in_progress		1395612	1					
ANR	1395714	Argument	restart_in_progress		1395612	0					
ANR	1395715	Identifier	restart_in_progress		1395612	0					
ANR	1395716	CallExpression	accel_restart_is_active ( )		1395612	1					
ANR	1395717	Callee	accel_restart_is_active		1395612	0					
ANR	1395718	Identifier	accel_restart_is_active		1395612	0					
ANR	1395719	ArgumentList			1395612	1					
ANR	1395720	CompoundStatement		15:70:635:635	1395612	1					
ANR	1395721	IfStatement	if ( ZCG ( accel_directives ) . file_cache )		1395612	0					
ANR	1395722	Condition	ZCG ( accel_directives ) . file_cache	1630:6:49001:49032	1395612	0	True				
ANR	1395723	MemberAccess	ZCG ( accel_directives ) . file_cache		1395612	0					
ANR	1395724	CallExpression	ZCG ( accel_directives )		1395612	0					
ANR	1395725	Callee	ZCG		1395612	0					
ANR	1395726	Identifier	ZCG		1395612	0					
ANR	1395727	ArgumentList	accel_directives		1395612	1					
ANR	1395728	Argument	accel_directives		1395612	0					
ANR	1395729	Identifier	accel_directives		1395612	0					
ANR	1395730	Identifier	file_cache		1395612	1					
ANR	1395731	CompoundStatement		17:40:708:708	1395612	1					
ANR	1395732	ReturnStatement	"return file_cache_compile_file ( file_handle , type ) ;"	1631:3:49040:49089	1395612	0	True				
ANR	1395733	CallExpression	"file_cache_compile_file ( file_handle , type )"		1395612	0					
ANR	1395734	Callee	file_cache_compile_file		1395612	0					
ANR	1395735	Identifier	file_cache_compile_file		1395612	0					
ANR	1395736	ArgumentList	file_handle		1395612	1					
ANR	1395737	Argument	file_handle		1395612	0					
ANR	1395738	Identifier	file_handle		1395612	0					
ANR	1395739	Argument	type		1395612	1					
ANR	1395740	Identifier	type		1395612	0					
ANR	1395741	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1634:2:49104:49159	1395612	1	True				
ANR	1395742	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1395612	0					
ANR	1395743	Callee	accelerator_orig_compile_file		1395612	0					
ANR	1395744	Identifier	accelerator_orig_compile_file		1395612	0					
ANR	1395745	ArgumentList	file_handle		1395612	1					
ANR	1395746	Argument	file_handle		1395612	0					
ANR	1395747	Identifier	file_handle		1395612	0					
ANR	1395748	Argument	type		1395612	1					
ANR	1395749	Identifier	type		1395612	0					
ANR	1395750	IfStatement	if ( ZCG ( cache_persistent_script ) && ( ( ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline ) ) )		1395612	5					
ANR	1395751	Condition	ZCG ( cache_persistent_script ) && ( ( ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline ) )	1640:5:49360:49740	1395612	0	True				
ANR	1395752	AndExpression	ZCG ( cache_persistent_script ) && ( ( ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline ) )		1395612	0		&&			
ANR	1395753	CallExpression	ZCG ( cache_persistent_script )		1395612	0					
ANR	1395754	Callee	ZCG		1395612	0					
ANR	1395755	Identifier	ZCG		1395612	0					
ANR	1395756	ArgumentList	cache_persistent_script		1395612	1					
ANR	1395757	Argument	cache_persistent_script		1395612	0					
ANR	1395758	Identifier	cache_persistent_script		1395612	0					
ANR	1395759	OrExpression	( ! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline )		1395612	1		||			
ANR	1395760	AndExpression	! EG ( current_execute_data ) && file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL		1395612	0		&&			
ANR	1395761	UnaryOperationExpression	! EG ( current_execute_data )		1395612	0					
ANR	1395762	UnaryOperator	!		1395612	0					
ANR	1395763	CallExpression	EG ( current_execute_data )		1395612	1					
ANR	1395764	Callee	EG		1395612	0					
ANR	1395765	Identifier	EG		1395612	0					
ANR	1395766	ArgumentList	current_execute_data		1395612	1					
ANR	1395767	Argument	current_execute_data		1395612	0					
ANR	1395768	Identifier	current_execute_data		1395612	0					
ANR	1395769	AndExpression	file_handle -> filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL		1395612	1		&&			
ANR	1395770	EqualityExpression	file_handle -> filename == SG ( request_info ) . path_translated		1395612	0		==			
ANR	1395771	PtrMemberAccess	file_handle -> filename		1395612	0					
ANR	1395772	Identifier	file_handle		1395612	0					
ANR	1395773	Identifier	filename		1395612	1					
ANR	1395774	MemberAccess	SG ( request_info ) . path_translated		1395612	1					
ANR	1395775	CallExpression	SG ( request_info )		1395612	0					
ANR	1395776	Callee	SG		1395612	0					
ANR	1395777	Identifier	SG		1395612	0					
ANR	1395778	ArgumentList	request_info		1395612	1					
ANR	1395779	Argument	request_info		1395612	0					
ANR	1395780	Identifier	request_info		1395612	0					
ANR	1395781	Identifier	path_translated		1395612	1					
ANR	1395782	EqualityExpression	ZCG ( cache_opline ) == NULL		1395612	1		==			
ANR	1395783	CallExpression	ZCG ( cache_opline )		1395612	0					
ANR	1395784	Callee	ZCG		1395612	0					
ANR	1395785	Identifier	ZCG		1395612	0					
ANR	1395786	ArgumentList	cache_opline		1395612	1					
ANR	1395787	Argument	cache_opline		1395612	0					
ANR	1395788	Identifier	cache_opline		1395612	0					
ANR	1395789	Identifier	NULL		1395612	1					
ANR	1395790	AndExpression	EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		1395612	1		&&			
ANR	1395791	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1395792	Callee	EG		1395612	0					
ANR	1395793	Identifier	EG		1395612	0					
ANR	1395794	ArgumentList	current_execute_data		1395612	1					
ANR	1395795	Argument	current_execute_data		1395612	0					
ANR	1395796	Identifier	current_execute_data		1395612	0					
ANR	1395797	AndExpression	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		1395612	1		&&			
ANR	1395798	PtrMemberAccess	EG ( current_execute_data ) -> func		1395612	0					
ANR	1395799	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1395800	Callee	EG		1395612	0					
ANR	1395801	Identifier	EG		1395612	0					
ANR	1395802	ArgumentList	current_execute_data		1395612	1					
ANR	1395803	Argument	current_execute_data		1395612	0					
ANR	1395804	Identifier	current_execute_data		1395612	0					
ANR	1395805	Identifier	func		1395612	1					
ANR	1395806	AndExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		1395612	1		&&			
ANR	1395807	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		1395612	0					
ANR	1395808	Callee	ZEND_USER_CODE		1395612	0					
ANR	1395809	Identifier	ZEND_USER_CODE		1395612	0					
ANR	1395810	ArgumentList	EG ( current_execute_data ) -> func -> common . type		1395612	1					
ANR	1395811	Argument	EG ( current_execute_data ) -> func -> common . type		1395612	0					
ANR	1395812	MemberAccess	EG ( current_execute_data ) -> func -> common . type		1395612	0					
ANR	1395813	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		1395612	0					
ANR	1395814	PtrMemberAccess	EG ( current_execute_data ) -> func		1395612	0					
ANR	1395815	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1395816	Callee	EG		1395612	0					
ANR	1395817	Identifier	EG		1395612	0					
ANR	1395818	ArgumentList	current_execute_data		1395612	1					
ANR	1395819	Argument	current_execute_data		1395612	0					
ANR	1395820	Identifier	current_execute_data		1395612	0					
ANR	1395821	Identifier	func		1395612	1					
ANR	1395822	Identifier	common		1395612	1					
ANR	1395823	Identifier	type		1395612	1					
ANR	1395824	EqualityExpression	ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		1395612	1		==			
ANR	1395825	CallExpression	ZCG ( cache_opline )		1395612	0					
ANR	1395826	Callee	ZCG		1395612	0					
ANR	1395827	Identifier	ZCG		1395612	0					
ANR	1395828	ArgumentList	cache_opline		1395612	1					
ANR	1395829	Argument	cache_opline		1395612	0					
ANR	1395830	Identifier	cache_opline		1395612	0					
ANR	1395831	PtrMemberAccess	EG ( current_execute_data ) -> opline		1395612	1					
ANR	1395832	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1395833	Callee	EG		1395612	0					
ANR	1395834	Identifier	EG		1395612	0					
ANR	1395835	ArgumentList	current_execute_data		1395612	1					
ANR	1395836	Argument	current_execute_data		1395612	0					
ANR	1395837	Identifier	current_execute_data		1395612	0					
ANR	1395838	Identifier	opline		1395612	1					
ANR	1395839	CompoundStatement		34:64:1416:1416	1395612	1					
ANR	1395840	ExpressionStatement	persistent_script = ZCG ( cache_persistent_script )	1649:2:49748:49796	1395612	0	True				
ANR	1395841	AssignmentExpression	persistent_script = ZCG ( cache_persistent_script )		1395612	0		=			
ANR	1395842	Identifier	persistent_script		1395612	0					
ANR	1395843	CallExpression	ZCG ( cache_persistent_script )		1395612	1					
ANR	1395844	Callee	ZCG		1395612	0					
ANR	1395845	Identifier	ZCG		1395612	0					
ANR	1395846	ArgumentList	cache_persistent_script		1395612	1					
ANR	1395847	Argument	cache_persistent_script		1395612	0					
ANR	1395848	Identifier	cache_persistent_script		1395612	0					
ANR	1395849	IfStatement	if ( ZCG ( key_len ) )		1395612	1					
ANR	1395850	Condition	ZCG ( key_len )	1650:6:49804:49815	1395612	0	True				
ANR	1395851	CallExpression	ZCG ( key_len )		1395612	0					
ANR	1395852	Callee	ZCG		1395612	0					
ANR	1395853	Identifier	ZCG		1395612	0					
ANR	1395854	ArgumentList	key_len		1395612	1					
ANR	1395855	Argument	key_len		1395612	0					
ANR	1395856	Identifier	key_len		1395612	0					
ANR	1395857	CompoundStatement		37:20:1491:1491	1395612	1					
ANR	1395858	ExpressionStatement	key = ZCG ( key )	1651:3:49823:49837	1395612	0	True				
ANR	1395859	AssignmentExpression	key = ZCG ( key )		1395612	0		=			
ANR	1395860	Identifier	key		1395612	0					
ANR	1395861	CallExpression	ZCG ( key )		1395612	1					
ANR	1395862	Callee	ZCG		1395612	0					
ANR	1395863	Identifier	ZCG		1395612	0					
ANR	1395864	ArgumentList	key		1395612	1					
ANR	1395865	Argument	key		1395612	0					
ANR	1395866	Identifier	key		1395612	0					
ANR	1395867	ExpressionStatement	key_length = ZCG ( key_len )	1652:3:49842:49867	1395612	1	True				
ANR	1395868	AssignmentExpression	key_length = ZCG ( key_len )		1395612	0		=			
ANR	1395869	Identifier	key_length		1395612	0					
ANR	1395870	CallExpression	ZCG ( key_len )		1395612	1					
ANR	1395871	Callee	ZCG		1395612	0					
ANR	1395872	Identifier	ZCG		1395612	0					
ANR	1395873	ArgumentList	key_len		1395612	1					
ANR	1395874	Argument	key_len		1395612	0					
ANR	1395875	Identifier	key_len		1395612	0					
ANR	1395876	ElseStatement	else		1395612	0					
ANR	1395877	CompoundStatement		42:8:1555:1555	1395612	0					
ANR	1395878	IfStatement	if ( ! ZCG ( accel_directives ) . revalidate_path )		1395612	0					
ANR	1395879	Condition	! ZCG ( accel_directives ) . revalidate_path	1656:6:49890:49927	1395612	0	True				
ANR	1395880	UnaryOperationExpression	! ZCG ( accel_directives ) . revalidate_path		1395612	0					
ANR	1395881	UnaryOperator	!		1395612	0					
ANR	1395882	MemberAccess	ZCG ( accel_directives ) . revalidate_path		1395612	1					
ANR	1395883	CallExpression	ZCG ( accel_directives )		1395612	0					
ANR	1395884	Callee	ZCG		1395612	0					
ANR	1395885	Identifier	ZCG		1395612	0					
ANR	1395886	ArgumentList	accel_directives		1395612	1					
ANR	1395887	Argument	accel_directives		1395612	0					
ANR	1395888	Identifier	accel_directives		1395612	0					
ANR	1395889	Identifier	revalidate_path		1395612	1					
ANR	1395890	CompoundStatement		43:46:1603:1603	1395612	1					
ANR	1395891	ExpressionStatement	"key = accel_make_persistent_key ( file_handle -> filename , strlen ( file_handle -> filename ) , & key_length )"	1658:3:49977:50075	1395612	0	True				
ANR	1395892	AssignmentExpression	"key = accel_make_persistent_key ( file_handle -> filename , strlen ( file_handle -> filename ) , & key_length )"		1395612	0		=			
ANR	1395893	Identifier	key		1395612	0					
ANR	1395894	CallExpression	"accel_make_persistent_key ( file_handle -> filename , strlen ( file_handle -> filename ) , & key_length )"		1395612	1					
ANR	1395895	Callee	accel_make_persistent_key		1395612	0					
ANR	1395896	Identifier	accel_make_persistent_key		1395612	0					
ANR	1395897	ArgumentList	file_handle -> filename		1395612	1					
ANR	1395898	Argument	file_handle -> filename		1395612	0					
ANR	1395899	PtrMemberAccess	file_handle -> filename		1395612	0					
ANR	1395900	Identifier	file_handle		1395612	0					
ANR	1395901	Identifier	filename		1395612	1					
ANR	1395902	Argument	strlen ( file_handle -> filename )		1395612	1					
ANR	1395903	CallExpression	strlen ( file_handle -> filename )		1395612	0					
ANR	1395904	Callee	strlen		1395612	0					
ANR	1395905	Identifier	strlen		1395612	0					
ANR	1395906	ArgumentList	file_handle -> filename		1395612	1					
ANR	1395907	Argument	file_handle -> filename		1395612	0					
ANR	1395908	PtrMemberAccess	file_handle -> filename		1395612	0					
ANR	1395909	Identifier	file_handle		1395612	0					
ANR	1395910	Identifier	filename		1395612	1					
ANR	1395911	Argument	& key_length		1395612	2					
ANR	1395912	UnaryOperationExpression	& key_length		1395612	0					
ANR	1395913	UnaryOperator	&		1395612	0					
ANR	1395914	Identifier	key_length		1395612	1					
ANR	1395915	IfStatement	if ( ! key )		1395612	1					
ANR	1395916	Condition	! key	1659:7:50084:50087	1395612	0	True				
ANR	1395917	UnaryOperationExpression	! key		1395612	0					
ANR	1395918	UnaryOperator	!		1395612	0					
ANR	1395919	Identifier	key		1395612	1					
ANR	1395920	CompoundStatement		46:13:1763:1763	1395612	1					
ANR	1395921	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1660:4:50096:50151	1395612	0	True				
ANR	1395922	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1395612	0					
ANR	1395923	Callee	accelerator_orig_compile_file		1395612	0					
ANR	1395924	Identifier	accelerator_orig_compile_file		1395612	0					
ANR	1395925	ArgumentList	file_handle		1395612	1					
ANR	1395926	Argument	file_handle		1395612	0					
ANR	1395927	Identifier	file_handle		1395612	0					
ANR	1395928	Argument	type		1395612	1					
ANR	1395929	Identifier	type		1395612	0					
ANR	1395930	ExpressionStatement	"persistent_script = zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"	1662:3:50161:50235	1395612	2	True				
ANR	1395931	AssignmentExpression	"persistent_script = zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"		1395612	0		=			
ANR	1395932	Identifier	persistent_script		1395612	0					
ANR	1395933	CallExpression	"zend_accel_hash_str_find ( & ZCSG ( hash ) , key , key_length )"		1395612	1					
ANR	1395934	Callee	zend_accel_hash_str_find		1395612	0					
ANR	1395935	Identifier	zend_accel_hash_str_find		1395612	0					
ANR	1395936	ArgumentList	& ZCSG ( hash )		1395612	1					
ANR	1395937	Argument	& ZCSG ( hash )		1395612	0					
ANR	1395938	UnaryOperationExpression	& ZCSG ( hash )		1395612	0					
ANR	1395939	UnaryOperator	&		1395612	0					
ANR	1395940	CallExpression	ZCSG ( hash )		1395612	1					
ANR	1395941	Callee	ZCSG		1395612	0					
ANR	1395942	Identifier	ZCSG		1395612	0					
ANR	1395943	ArgumentList	hash		1395612	1					
ANR	1395944	Argument	hash		1395612	0					
ANR	1395945	Identifier	hash		1395612	0					
ANR	1395946	Argument	key		1395612	1					
ANR	1395947	Identifier	key		1395612	0					
ANR	1395948	Argument	key_length		1395612	2					
ANR	1395949	Identifier	key_length		1395612	0					
ANR	1395950	IfStatement	if ( ! persistent_script )		1395612	1					
ANR	1395951	Condition	! persistent_script	1664:6:50247:50264	1395612	0	True				
ANR	1395952	UnaryOperationExpression	! persistent_script		1395612	0					
ANR	1395953	UnaryOperator	!		1395612	0					
ANR	1395954	Identifier	persistent_script		1395612	1					
ANR	1395955	CompoundStatement		53:3:1998:2027	1395612	1					
ANR	1395956	IdentifierDeclStatement	zend_accel_hash_entry * bucket ;	1666:3:50325:50354	1395612	0	True				
ANR	1395957	IdentifierDecl	* bucket		1395612	0					
ANR	1395958	IdentifierDeclType	zend_accel_hash_entry *		1395612	0					
ANR	1395959	Identifier	bucket		1395612	1					
ANR	1395960	IfStatement	"if ( file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE )"		1395612	1					
ANR	1395961	Condition	"file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"	1669:10:50406:50549	1395612	0	True				
ANR	1395962	AndExpression	"file_handle -> type == ZEND_HANDLE_FILENAME && accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"		1395612	0		&&			
ANR	1395963	EqualityExpression	file_handle -> type == ZEND_HANDLE_FILENAME		1395612	0		==			
ANR	1395964	PtrMemberAccess	file_handle -> type		1395612	0					
ANR	1395965	Identifier	file_handle		1395612	0					
ANR	1395966	Identifier	type		1395612	1					
ANR	1395967	Identifier	ZEND_HANDLE_FILENAME		1395612	1					
ANR	1395968	EqualityExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle ) == FAILURE"		1395612	1		==			
ANR	1395969	CallExpression	"accelerator_orig_zend_stream_open_function ( file_handle -> filename , file_handle )"		1395612	0					
ANR	1395970	Callee	accelerator_orig_zend_stream_open_function		1395612	0					
ANR	1395971	Identifier	accelerator_orig_zend_stream_open_function		1395612	0					
ANR	1395972	ArgumentList	file_handle -> filename		1395612	1					
ANR	1395973	Argument	file_handle -> filename		1395612	0					
ANR	1395974	PtrMemberAccess	file_handle -> filename		1395612	0					
ANR	1395975	Identifier	file_handle		1395612	0					
ANR	1395976	Identifier	filename		1395612	1					
ANR	1395977	Argument	file_handle		1395612	1					
ANR	1395978	Identifier	file_handle		1395612	0					
ANR	1395979	Identifier	FAILURE		1395612	1					
ANR	1395980	CompoundStatement		57:101:2225:2225	1395612	1					
ANR	1395981	IfStatement	if ( type == ZEND_REQUIRE )		1395612	0					
ANR	1395982	Condition	type == ZEND_REQUIRE	1671:8:50562:50581	1395612	0	True				
ANR	1395983	EqualityExpression	type == ZEND_REQUIRE		1395612	0		==			
ANR	1395984	Identifier	type		1395612	0					
ANR	1395985	Identifier	ZEND_REQUIRE		1395612	1					
ANR	1395986	CompoundStatement		58:30:2257:2257	1395612	1					
ANR	1395987	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"	1672:5:50591:50664	1395612	0	True				
ANR	1395988	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_REQUIRE_FOPEN , file_handle -> filename )"		1395612	0					
ANR	1395989	Callee	zend_message_dispatcher		1395612	0					
ANR	1395990	Identifier	zend_message_dispatcher		1395612	0					
ANR	1395991	ArgumentList	ZMSG_FAILED_REQUIRE_FOPEN		1395612	1					
ANR	1395992	Argument	ZMSG_FAILED_REQUIRE_FOPEN		1395612	0					
ANR	1395993	Identifier	ZMSG_FAILED_REQUIRE_FOPEN		1395612	0					
ANR	1395994	Argument	file_handle -> filename		1395612	1					
ANR	1395995	PtrMemberAccess	file_handle -> filename		1395612	0					
ANR	1395996	Identifier	file_handle		1395612	0					
ANR	1395997	Identifier	filename		1395612	1					
ANR	1395998	ExpressionStatement	zend_bailout ( )	1673:5:50671:50685	1395612	1	True				
ANR	1395999	CallExpression	zend_bailout ( )		1395612	0					
ANR	1396000	Callee	zend_bailout		1395612	0					
ANR	1396001	Identifier	zend_bailout		1395612	0					
ANR	1396002	ArgumentList			1395612	1					
ANR	1396003	ElseStatement	else		1395612	0					
ANR	1396004	CompoundStatement		61:11:2371:2371	1395612	0					
ANR	1396005	ExpressionStatement	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"	1675:5:50705:50778	1395612	0	True				
ANR	1396006	CallExpression	"zend_message_dispatcher ( ZMSG_FAILED_INCLUDE_FOPEN , file_handle -> filename )"		1395612	0					
ANR	1396007	Callee	zend_message_dispatcher		1395612	0					
ANR	1396008	Identifier	zend_message_dispatcher		1395612	0					
ANR	1396009	ArgumentList	ZMSG_FAILED_INCLUDE_FOPEN		1395612	1					
ANR	1396010	Argument	ZMSG_FAILED_INCLUDE_FOPEN		1395612	0					
ANR	1396011	Identifier	ZMSG_FAILED_INCLUDE_FOPEN		1395612	0					
ANR	1396012	Argument	file_handle -> filename		1395612	1					
ANR	1396013	PtrMemberAccess	file_handle -> filename		1395612	0					
ANR	1396014	Identifier	file_handle		1395612	0					
ANR	1396015	Identifier	filename		1395612	1					
ANR	1396016	ReturnStatement	return NULL ;	1677:4:50790:50801	1395612	1	True				
ANR	1396017	Identifier	NULL		1395612	0					
ANR	1396018	IfStatement	if ( file_handle -> opened_path )		1395612	2					
ANR	1396019	Condition	file_handle -> opened_path	1680:7:50819:50842	1395612	0	True				
ANR	1396020	PtrMemberAccess	file_handle -> opened_path		1395612	0					
ANR	1396021	Identifier	file_handle		1395612	0					
ANR	1396022	Identifier	opened_path		1395612	1					
ANR	1396023	CompoundStatement		67:33:2518:2518	1395612	1					
ANR	1396024	ExpressionStatement	"bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , file_handle -> opened_path )"	1681:4:50851:50925	1395612	0	True				
ANR	1396025	AssignmentExpression	"bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , file_handle -> opened_path )"		1395612	0		=			
ANR	1396026	Identifier	bucket		1395612	0					
ANR	1396027	CallExpression	"zend_accel_hash_find_entry ( & ZCSG ( hash ) , file_handle -> opened_path )"		1395612	1					
ANR	1396028	Callee	zend_accel_hash_find_entry		1395612	0					
ANR	1396029	Identifier	zend_accel_hash_find_entry		1395612	0					
ANR	1396030	ArgumentList	& ZCSG ( hash )		1395612	1					
ANR	1396031	Argument	& ZCSG ( hash )		1395612	0					
ANR	1396032	UnaryOperationExpression	& ZCSG ( hash )		1395612	0					
ANR	1396033	UnaryOperator	&		1395612	0					
ANR	1396034	CallExpression	ZCSG ( hash )		1395612	1					
ANR	1396035	Callee	ZCSG		1395612	0					
ANR	1396036	Identifier	ZCSG		1395612	0					
ANR	1396037	ArgumentList	hash		1395612	1					
ANR	1396038	Argument	hash		1395612	0					
ANR	1396039	Identifier	hash		1395612	0					
ANR	1396040	Argument	file_handle -> opened_path		1395612	1					
ANR	1396041	PtrMemberAccess	file_handle -> opened_path		1395612	0					
ANR	1396042	Identifier	file_handle		1395612	0					
ANR	1396043	Identifier	opened_path		1395612	1					
ANR	1396044	IfStatement	if ( bucket )		1395612	1					
ANR	1396045	Condition	bucket	1683:8:50936:50941	1395612	0	True				
ANR	1396046	Identifier	bucket		1395612	0					
ANR	1396047	CompoundStatement		70:16:2617:2617	1395612	1					
ANR	1396048	ExpressionStatement	persistent_script = ( zend_persistent_script * ) bucket -> data	1684:5:50951:51009	1395612	0	True				
ANR	1396049	AssignmentExpression	persistent_script = ( zend_persistent_script * ) bucket -> data		1395612	0		=			
ANR	1396050	Identifier	persistent_script		1395612	0					
ANR	1396051	CastExpression	( zend_persistent_script * ) bucket -> data		1395612	1					
ANR	1396052	CastTarget	zend_persistent_script *		1395612	0					
ANR	1396053	PtrMemberAccess	bucket -> data		1395612	1					
ANR	1396054	Identifier	bucket		1395612	0					
ANR	1396055	Identifier	data		1395612	1					
ANR	1396056	IfStatement	if ( key && ! persistent_script -> corrupted )		1395612	1					
ANR	1396057	Condition	key && ! persistent_script -> corrupted	1686:9:51021:51056	1395612	0	True				
ANR	1396058	AndExpression	key && ! persistent_script -> corrupted		1395612	0		&&			
ANR	1396059	Identifier	key		1395612	0					
ANR	1396060	UnaryOperationExpression	! persistent_script -> corrupted		1395612	1					
ANR	1396061	UnaryOperator	!		1395612	0					
ANR	1396062	PtrMemberAccess	persistent_script -> corrupted		1395612	1					
ANR	1396063	Identifier	persistent_script		1395612	0					
ANR	1396064	Identifier	corrupted		1395612	1					
ANR	1396065	CompoundStatement		73:47:2732:2732	1395612	1					
ANR	1396066	ExpressionStatement	SHM_UNPROTECT ( )	1687:6:51067:51082	1395612	0	True				
ANR	1396067	CallExpression	SHM_UNPROTECT ( )		1395612	0					
ANR	1396068	Callee	SHM_UNPROTECT		1395612	0					
ANR	1396069	Identifier	SHM_UNPROTECT		1395612	0					
ANR	1396070	ArgumentList			1395612	1					
ANR	1396071	ExpressionStatement	zend_shared_alloc_lock ( )	1688:6:51090:51114	1395612	1	True				
ANR	1396072	CallExpression	zend_shared_alloc_lock ( )		1395612	0					
ANR	1396073	Callee	zend_shared_alloc_lock		1395612	0					
ANR	1396074	Identifier	zend_shared_alloc_lock		1395612	0					
ANR	1396075	ArgumentList			1395612	1					
ANR	1396076	ExpressionStatement	"zend_accel_add_key ( key , key_length , bucket )"	1689:6:51122:51165	1395612	2	True				
ANR	1396077	CallExpression	"zend_accel_add_key ( key , key_length , bucket )"		1395612	0					
ANR	1396078	Callee	zend_accel_add_key		1395612	0					
ANR	1396079	Identifier	zend_accel_add_key		1395612	0					
ANR	1396080	ArgumentList	key		1395612	1					
ANR	1396081	Argument	key		1395612	0					
ANR	1396082	Identifier	key		1395612	0					
ANR	1396083	Argument	key_length		1395612	1					
ANR	1396084	Identifier	key_length		1395612	0					
ANR	1396085	Argument	bucket		1395612	2					
ANR	1396086	Identifier	bucket		1395612	0					
ANR	1396087	ExpressionStatement	zend_shared_alloc_unlock ( )	1690:6:51173:51199	1395612	3	True				
ANR	1396088	CallExpression	zend_shared_alloc_unlock ( )		1395612	0					
ANR	1396089	Callee	zend_shared_alloc_unlock		1395612	0					
ANR	1396090	Identifier	zend_shared_alloc_unlock		1395612	0					
ANR	1396091	ArgumentList			1395612	1					
ANR	1396092	ExpressionStatement	SHM_PROTECT ( )	1691:6:51207:51220	1395612	4	True				
ANR	1396093	CallExpression	SHM_PROTECT ( )		1395612	0					
ANR	1396094	Callee	SHM_PROTECT		1395612	0					
ANR	1396095	Identifier	SHM_PROTECT		1395612	0					
ANR	1396096	ArgumentList			1395612	1					
ANR	1396097	ExpressionStatement	ZCG ( cache_opline ) = NULL	1699:1:51268:51292	1395612	6	True				
ANR	1396098	AssignmentExpression	ZCG ( cache_opline ) = NULL		1395612	0		=			
ANR	1396099	CallExpression	ZCG ( cache_opline )		1395612	0					
ANR	1396100	Callee	ZCG		1395612	0					
ANR	1396101	Identifier	ZCG		1395612	0					
ANR	1396102	ArgumentList	cache_opline		1395612	1					
ANR	1396103	Argument	cache_opline		1395612	0					
ANR	1396104	Identifier	cache_opline		1395612	0					
ANR	1396105	Identifier	NULL		1395612	1					
ANR	1396106	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1700:1:51295:51330	1395612	7	True				
ANR	1396107	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		1395612	0		=			
ANR	1396108	CallExpression	ZCG ( cache_persistent_script )		1395612	0					
ANR	1396109	Callee	ZCG		1395612	0					
ANR	1396110	Identifier	ZCG		1395612	0					
ANR	1396111	ArgumentList	cache_persistent_script		1395612	1					
ANR	1396112	Argument	cache_persistent_script		1395612	0					
ANR	1396113	Identifier	cache_persistent_script		1395612	0					
ANR	1396114	Identifier	NULL		1395612	1					
ANR	1396115	IfStatement	if ( persistent_script && persistent_script -> corrupted )		1395612	8					
ANR	1396116	Condition	persistent_script && persistent_script -> corrupted	1702:5:51338:51386	1395612	0	True				
ANR	1396117	AndExpression	persistent_script && persistent_script -> corrupted		1395612	0		&&			
ANR	1396118	Identifier	persistent_script		1395612	0					
ANR	1396119	PtrMemberAccess	persistent_script -> corrupted		1395612	1					
ANR	1396120	Identifier	persistent_script		1395612	0					
ANR	1396121	Identifier	corrupted		1395612	1					
ANR	1396122	CompoundStatement		89:56:3062:3062	1395612	1					
ANR	1396123	ExpressionStatement	persistent_script = NULL	1703:2:51393:51417	1395612	0	True				
ANR	1396124	AssignmentExpression	persistent_script = NULL		1395612	0		=			
ANR	1396125	Identifier	persistent_script		1395612	0					
ANR	1396126	Identifier	NULL		1395612	1					
ANR	1396127	IfStatement	if ( ! ZCG ( counted ) )		1395612	9					
ANR	1396128	Condition	! ZCG ( counted )	1710:5:51606:51618	1395612	0	True				
ANR	1396129	UnaryOperationExpression	! ZCG ( counted )		1395612	0					
ANR	1396130	UnaryOperator	!		1395612	0					
ANR	1396131	CallExpression	ZCG ( counted )		1395612	1					
ANR	1396132	Callee	ZCG		1395612	0					
ANR	1396133	Identifier	ZCG		1395612	0					
ANR	1396134	ArgumentList	counted		1395612	1					
ANR	1396135	Argument	counted		1395612	0					
ANR	1396136	Identifier	counted		1395612	0					
ANR	1396137	CompoundStatement		97:20:3294:3294	1395612	1					
ANR	1396138	ExpressionStatement	ZCG ( counted ) = 1	1711:2:51625:51641	1395612	0	True				
ANR	1396139	AssignmentExpression	ZCG ( counted ) = 1		1395612	0		=			
ANR	1396140	CallExpression	ZCG ( counted )		1395612	0					
ANR	1396141	Callee	ZCG		1395612	0					
ANR	1396142	Identifier	ZCG		1395612	0					
ANR	1396143	ArgumentList	counted		1395612	1					
ANR	1396144	Argument	counted		1395612	0					
ANR	1396145	Identifier	counted		1395612	0					
ANR	1396146	PrimaryExpression	1		1395612	1					
ANR	1396147	ExpressionStatement	accel_activate_add ( )	1712:2:51645:51665	1395612	1	True				
ANR	1396148	CallExpression	accel_activate_add ( )		1395612	0					
ANR	1396149	Callee	accel_activate_add		1395612	0					
ANR	1396150	Identifier	accel_activate_add		1395612	0					
ANR	1396151	ArgumentList			1395612	1					
ANR	1396152	ExpressionStatement	SHM_UNPROTECT ( )	1715:1:51672:51687	1395612	10	True				
ANR	1396153	CallExpression	SHM_UNPROTECT ( )		1395612	0					
ANR	1396154	Callee	SHM_UNPROTECT		1395612	0					
ANR	1396155	Identifier	SHM_UNPROTECT		1395612	0					
ANR	1396156	ArgumentList			1395612	1					
ANR	1396157	IfStatement	if ( persistent_script && ZCG ( accel_directives ) . validate_timestamps )		1395612	11					
ANR	1396158	Condition	persistent_script && ZCG ( accel_directives ) . validate_timestamps	1718:5:51767:51828	1395612	0	True				
ANR	1396159	AndExpression	persistent_script && ZCG ( accel_directives ) . validate_timestamps		1395612	0		&&			
ANR	1396160	Identifier	persistent_script		1395612	0					
ANR	1396161	MemberAccess	ZCG ( accel_directives ) . validate_timestamps		1395612	1					
ANR	1396162	CallExpression	ZCG ( accel_directives )		1395612	0					
ANR	1396163	Callee	ZCG		1395612	0					
ANR	1396164	Identifier	ZCG		1395612	0					
ANR	1396165	ArgumentList	accel_directives		1395612	1					
ANR	1396166	Argument	accel_directives		1395612	0					
ANR	1396167	Identifier	accel_directives		1395612	0					
ANR	1396168	Identifier	validate_timestamps		1395612	1					
ANR	1396169	CompoundStatement		105:69:3504:3504	1395612	1					
ANR	1396170	IfStatement	"if ( validate_timestamp_and_record ( persistent_script , file_handle ) == FAILURE )"		1395612	0					
ANR	1396171	Condition	"validate_timestamp_and_record ( persistent_script , file_handle ) == FAILURE"	1719:6:51839:51910	1395612	0	True				
ANR	1396172	EqualityExpression	"validate_timestamp_and_record ( persistent_script , file_handle ) == FAILURE"		1395612	0		==			
ANR	1396173	CallExpression	"validate_timestamp_and_record ( persistent_script , file_handle )"		1395612	0					
ANR	1396174	Callee	validate_timestamp_and_record		1395612	0					
ANR	1396175	Identifier	validate_timestamp_and_record		1395612	0					
ANR	1396176	ArgumentList	persistent_script		1395612	1					
ANR	1396177	Argument	persistent_script		1395612	0					
ANR	1396178	Identifier	persistent_script		1395612	0					
ANR	1396179	Argument	file_handle		1395612	1					
ANR	1396180	Identifier	file_handle		1395612	0					
ANR	1396181	Identifier	FAILURE		1395612	1					
ANR	1396182	CompoundStatement		106:80:3586:3586	1395612	1					
ANR	1396183	ExpressionStatement	zend_shared_alloc_lock ( )	1720:3:51918:51942	1395612	0	True				
ANR	1396184	CallExpression	zend_shared_alloc_lock ( )		1395612	0					
ANR	1396185	Callee	zend_shared_alloc_lock		1395612	0					
ANR	1396186	Identifier	zend_shared_alloc_lock		1395612	0					
ANR	1396187	ArgumentList			1395612	1					
ANR	1396188	IfStatement	if ( ! persistent_script -> corrupted )		1395612	1					
ANR	1396189	Condition	! persistent_script -> corrupted	1721:7:51951:51979	1395612	0	True				
ANR	1396190	UnaryOperationExpression	! persistent_script -> corrupted		1395612	0					
ANR	1396191	UnaryOperator	!		1395612	0					
ANR	1396192	PtrMemberAccess	persistent_script -> corrupted		1395612	1					
ANR	1396193	Identifier	persistent_script		1395612	0					
ANR	1396194	Identifier	corrupted		1395612	1					
ANR	1396195	CompoundStatement		108:38:3655:3655	1395612	1					
ANR	1396196	ExpressionStatement	persistent_script -> corrupted = 1	1722:4:51988:52020	1395612	0	True				
ANR	1396197	AssignmentExpression	persistent_script -> corrupted = 1		1395612	0		=			
ANR	1396198	PtrMemberAccess	persistent_script -> corrupted		1395612	0					
ANR	1396199	Identifier	persistent_script		1395612	0					
ANR	1396200	Identifier	corrupted		1395612	1					
ANR	1396201	PrimaryExpression	1		1395612	1					
ANR	1396202	ExpressionStatement	persistent_script -> timestamp = 0	1723:4:52026:52058	1395612	1	True				
ANR	1396203	AssignmentExpression	persistent_script -> timestamp = 0		1395612	0		=			
ANR	1396204	PtrMemberAccess	persistent_script -> timestamp		1395612	0					
ANR	1396205	Identifier	persistent_script		1395612	0					
ANR	1396206	Identifier	timestamp		1395612	1					
ANR	1396207	PrimaryExpression	0		1395612	1					
ANR	1396208	ExpressionStatement	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption	1724:4:52064:52148	1395612	2	True				
ANR	1396209	AssignmentExpression	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption		1395612	0		+=			
ANR	1396210	CallExpression	ZSMMG ( wasted_shared_memory )		1395612	0					
ANR	1396211	Callee	ZSMMG		1395612	0					
ANR	1396212	Identifier	ZSMMG		1395612	0					
ANR	1396213	ArgumentList	wasted_shared_memory		1395612	1					
ANR	1396214	Argument	wasted_shared_memory		1395612	0					
ANR	1396215	Identifier	wasted_shared_memory		1395612	0					
ANR	1396216	MemberAccess	persistent_script -> dynamic_members . memory_consumption		1395612	1					
ANR	1396217	PtrMemberAccess	persistent_script -> dynamic_members		1395612	0					
ANR	1396218	Identifier	persistent_script		1395612	0					
ANR	1396219	Identifier	dynamic_members		1395612	1					
ANR	1396220	Identifier	memory_consumption		1395612	1					
ANR	1396221	IfStatement	if ( ZSMMG ( memory_exhausted ) )		1395612	3					
ANR	1396222	Condition	ZSMMG ( memory_exhausted )	1725:8:52158:52180	1395612	0	True				
ANR	1396223	CallExpression	ZSMMG ( memory_exhausted )		1395612	0					
ANR	1396224	Callee	ZSMMG		1395612	0					
ANR	1396225	Identifier	ZSMMG		1395612	0					
ANR	1396226	ArgumentList	memory_exhausted		1395612	1					
ANR	1396227	Argument	memory_exhausted		1395612	0					
ANR	1396228	Identifier	memory_exhausted		1395612	0					
ANR	1396229	CompoundStatement		113:5:3863:3981	1395612	1					
ANR	1396230	IdentifierDeclStatement	zend_accel_restart_reason reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM ;	1726:5:52190:52308	1395612	0	True				
ANR	1396231	IdentifierDecl	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		1395612	0					
ANR	1396232	IdentifierDeclType	zend_accel_restart_reason		1395612	0					
ANR	1396233	Identifier	reason		1395612	1					
ANR	1396234	AssignmentExpression	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		1395612	2		=			
ANR	1396235	Identifier	reason		1395612	0					
ANR	1396236	ConditionalExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		1395612	1					
ANR	1396237	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )		1395612	0					
ANR	1396238	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		1395612	0					
ANR	1396239	Callee	zend_accel_hash_is_full		1395612	0					
ANR	1396240	Identifier	zend_accel_hash_is_full		1395612	0					
ANR	1396241	ArgumentList	& ZCSG ( hash )		1395612	1					
ANR	1396242	Argument	& ZCSG ( hash )		1395612	0					
ANR	1396243	UnaryOperationExpression	& ZCSG ( hash )		1395612	0					
ANR	1396244	UnaryOperator	&		1395612	0					
ANR	1396245	CallExpression	ZCSG ( hash )		1395612	1					
ANR	1396246	Callee	ZCSG		1395612	0					
ANR	1396247	Identifier	ZCSG		1395612	0					
ANR	1396248	ArgumentList	hash		1395612	1					
ANR	1396249	Argument	hash		1395612	0					
ANR	1396250	Identifier	hash		1395612	0					
ANR	1396251	Identifier	ACCEL_RESTART_HASH		1395612	1					
ANR	1396252	Identifier	ACCEL_RESTART_OOM		1395612	2					
ANR	1396253	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( reason )	1728:5:52315:52363	1395612	1	True				
ANR	1396254	CallExpression	zend_accel_schedule_restart_if_necessary ( reason )		1395612	0					
ANR	1396255	Callee	zend_accel_schedule_restart_if_necessary		1395612	0					
ANR	1396256	Identifier	zend_accel_schedule_restart_if_necessary		1395612	0					
ANR	1396257	ArgumentList	reason		1395612	1					
ANR	1396258	Argument	reason		1395612	0					
ANR	1396259	Identifier	reason		1395612	0					
ANR	1396260	ExpressionStatement	zend_shared_alloc_unlock ( )	1731:3:52379:52405	1395612	2	True				
ANR	1396261	CallExpression	zend_shared_alloc_unlock ( )		1395612	0					
ANR	1396262	Callee	zend_shared_alloc_unlock		1395612	0					
ANR	1396263	Identifier	zend_shared_alloc_unlock		1395612	0					
ANR	1396264	ArgumentList			1395612	1					
ANR	1396265	ExpressionStatement	persistent_script = NULL	1732:3:52410:52434	1395612	3	True				
ANR	1396266	AssignmentExpression	persistent_script = NULL		1395612	0		=			
ANR	1396267	Identifier	persistent_script		1395612	0					
ANR	1396268	Identifier	NULL		1395612	1					
ANR	1396269	IfStatement	if ( persistent_script && ZCG ( accel_directives ) . consistency_checks && persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0 )		1395612	12					
ANR	1396270	Condition	persistent_script && ZCG ( accel_directives ) . consistency_checks && persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0	1737:5:52514:52667	1395612	0	True				
ANR	1396271	AndExpression	persistent_script && ZCG ( accel_directives ) . consistency_checks && persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0		1395612	0		&&			
ANR	1396272	Identifier	persistent_script		1395612	0					
ANR	1396273	AndExpression	ZCG ( accel_directives ) . consistency_checks && persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0		1395612	1		&&			
ANR	1396274	MemberAccess	ZCG ( accel_directives ) . consistency_checks		1395612	0					
ANR	1396275	CallExpression	ZCG ( accel_directives )		1395612	0					
ANR	1396276	Callee	ZCG		1395612	0					
ANR	1396277	Identifier	ZCG		1395612	0					
ANR	1396278	ArgumentList	accel_directives		1395612	1					
ANR	1396279	Argument	accel_directives		1395612	0					
ANR	1396280	Identifier	accel_directives		1395612	0					
ANR	1396281	Identifier	consistency_checks		1395612	1					
ANR	1396282	EqualityExpression	persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks == 0		1395612	1		==			
ANR	1396283	MultiplicativeExpression	persistent_script -> dynamic_members . hits % ZCG ( accel_directives ) . consistency_checks		1395612	0		%			
ANR	1396284	MemberAccess	persistent_script -> dynamic_members . hits		1395612	0					
ANR	1396285	PtrMemberAccess	persistent_script -> dynamic_members		1395612	0					
ANR	1396286	Identifier	persistent_script		1395612	0					
ANR	1396287	Identifier	dynamic_members		1395612	1					
ANR	1396288	Identifier	hits		1395612	1					
ANR	1396289	MemberAccess	ZCG ( accel_directives ) . consistency_checks		1395612	1					
ANR	1396290	CallExpression	ZCG ( accel_directives )		1395612	0					
ANR	1396291	Callee	ZCG		1395612	0					
ANR	1396292	Identifier	ZCG		1395612	0					
ANR	1396293	ArgumentList	accel_directives		1395612	1					
ANR	1396294	Argument	accel_directives		1395612	0					
ANR	1396295	Identifier	accel_directives		1395612	0					
ANR	1396296	Identifier	consistency_checks		1395612	1					
ANR	1396297	PrimaryExpression	0		1395612	1					
ANR	1396298	CompoundStatement		127:2:4348:4417	1395612	1					
ANR	1396299	IdentifierDeclStatement	unsigned int checksum = zend_accel_script_checksum ( persistent_script ) ;	1740:2:52675:52744	1395612	0	True				
ANR	1396300	IdentifierDecl	checksum = zend_accel_script_checksum ( persistent_script )		1395612	0					
ANR	1396301	IdentifierDeclType	unsigned int		1395612	0					
ANR	1396302	Identifier	checksum		1395612	1					
ANR	1396303	AssignmentExpression	checksum = zend_accel_script_checksum ( persistent_script )		1395612	2		=			
ANR	1396304	Identifier	checksum		1395612	0					
ANR	1396305	CallExpression	zend_accel_script_checksum ( persistent_script )		1395612	1					
ANR	1396306	Callee	zend_accel_script_checksum		1395612	0					
ANR	1396307	Identifier	zend_accel_script_checksum		1395612	0					
ANR	1396308	ArgumentList	persistent_script		1395612	1					
ANR	1396309	Argument	persistent_script		1395612	0					
ANR	1396310	Identifier	persistent_script		1395612	0					
ANR	1396311	IfStatement	if ( checksum != persistent_script -> dynamic_members . checksum )		1395612	1					
ANR	1396312	Condition	checksum != persistent_script -> dynamic_members . checksum	1741:6:52752:52806	1395612	0	True				
ANR	1396313	EqualityExpression	checksum != persistent_script -> dynamic_members . checksum		1395612	0		!=			
ANR	1396314	Identifier	checksum		1395612	0					
ANR	1396315	MemberAccess	persistent_script -> dynamic_members . checksum		1395612	1					
ANR	1396316	PtrMemberAccess	persistent_script -> dynamic_members		1395612	0					
ANR	1396317	Identifier	persistent_script		1395612	0					
ANR	1396318	Identifier	dynamic_members		1395612	1					
ANR	1396319	Identifier	checksum		1395612	1					
ANR	1396320	CompoundStatement		128:64:4483:4483	1395612	1					
ANR	1396321	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_INFO , ""Checksum failed for '%s':  expected=0x%0.8X, found=0x%0.8X"" , persistent_script -> full_path , persistent_script -> dynamic_members . checksum , checksum )"	1743:3:52846:53033	1395612	0	True				
ANR	1396322	CallExpression	"zend_accel_error ( ACCEL_LOG_INFO , ""Checksum failed for '%s':  expected=0x%0.8X, found=0x%0.8X"" , persistent_script -> full_path , persistent_script -> dynamic_members . checksum , checksum )"		1395612	0					
ANR	1396323	Callee	zend_accel_error		1395612	0					
ANR	1396324	Identifier	zend_accel_error		1395612	0					
ANR	1396325	ArgumentList	ACCEL_LOG_INFO		1395612	1					
ANR	1396326	Argument	ACCEL_LOG_INFO		1395612	0					
ANR	1396327	Identifier	ACCEL_LOG_INFO		1395612	0					
ANR	1396328	Argument	"""Checksum failed for '%s':  expected=0x%0.8X, found=0x%0.8X"""		1395612	1					
ANR	1396329	PrimaryExpression	"""Checksum failed for '%s':  expected=0x%0.8X, found=0x%0.8X"""		1395612	0					
ANR	1396330	Argument	persistent_script -> full_path		1395612	2					
ANR	1396331	PtrMemberAccess	persistent_script -> full_path		1395612	0					
ANR	1396332	Identifier	persistent_script		1395612	0					
ANR	1396333	Identifier	full_path		1395612	1					
ANR	1396334	Argument	persistent_script -> dynamic_members . checksum		1395612	3					
ANR	1396335	MemberAccess	persistent_script -> dynamic_members . checksum		1395612	0					
ANR	1396336	PtrMemberAccess	persistent_script -> dynamic_members		1395612	0					
ANR	1396337	Identifier	persistent_script		1395612	0					
ANR	1396338	Identifier	dynamic_members		1395612	1					
ANR	1396339	Identifier	checksum		1395612	1					
ANR	1396340	Argument	checksum		1395612	4					
ANR	1396341	Identifier	checksum		1395612	0					
ANR	1396342	ExpressionStatement	zend_shared_alloc_lock ( )	1745:3:53038:53062	1395612	1	True				
ANR	1396343	CallExpression	zend_shared_alloc_lock ( )		1395612	0					
ANR	1396344	Callee	zend_shared_alloc_lock		1395612	0					
ANR	1396345	Identifier	zend_shared_alloc_lock		1395612	0					
ANR	1396346	ArgumentList			1395612	1					
ANR	1396347	IfStatement	if ( ! persistent_script -> corrupted )		1395612	2					
ANR	1396348	Condition	! persistent_script -> corrupted	1746:7:53071:53099	1395612	0	True				
ANR	1396349	UnaryOperationExpression	! persistent_script -> corrupted		1395612	0					
ANR	1396350	UnaryOperator	!		1395612	0					
ANR	1396351	PtrMemberAccess	persistent_script -> corrupted		1395612	1					
ANR	1396352	Identifier	persistent_script		1395612	0					
ANR	1396353	Identifier	corrupted		1395612	1					
ANR	1396354	CompoundStatement		133:38:4775:4775	1395612	1					
ANR	1396355	ExpressionStatement	persistent_script -> corrupted = 1	1747:4:53108:53140	1395612	0	True				
ANR	1396356	AssignmentExpression	persistent_script -> corrupted = 1		1395612	0		=			
ANR	1396357	PtrMemberAccess	persistent_script -> corrupted		1395612	0					
ANR	1396358	Identifier	persistent_script		1395612	0					
ANR	1396359	Identifier	corrupted		1395612	1					
ANR	1396360	PrimaryExpression	1		1395612	1					
ANR	1396361	ExpressionStatement	persistent_script -> timestamp = 0	1748:4:53146:53178	1395612	1	True				
ANR	1396362	AssignmentExpression	persistent_script -> timestamp = 0		1395612	0		=			
ANR	1396363	PtrMemberAccess	persistent_script -> timestamp		1395612	0					
ANR	1396364	Identifier	persistent_script		1395612	0					
ANR	1396365	Identifier	timestamp		1395612	1					
ANR	1396366	PrimaryExpression	0		1395612	1					
ANR	1396367	ExpressionStatement	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption	1749:4:53184:53268	1395612	2	True				
ANR	1396368	AssignmentExpression	ZSMMG ( wasted_shared_memory ) += persistent_script -> dynamic_members . memory_consumption		1395612	0		+=			
ANR	1396369	CallExpression	ZSMMG ( wasted_shared_memory )		1395612	0					
ANR	1396370	Callee	ZSMMG		1395612	0					
ANR	1396371	Identifier	ZSMMG		1395612	0					
ANR	1396372	ArgumentList	wasted_shared_memory		1395612	1					
ANR	1396373	Argument	wasted_shared_memory		1395612	0					
ANR	1396374	Identifier	wasted_shared_memory		1395612	0					
ANR	1396375	MemberAccess	persistent_script -> dynamic_members . memory_consumption		1395612	1					
ANR	1396376	PtrMemberAccess	persistent_script -> dynamic_members		1395612	0					
ANR	1396377	Identifier	persistent_script		1395612	0					
ANR	1396378	Identifier	dynamic_members		1395612	1					
ANR	1396379	Identifier	memory_consumption		1395612	1					
ANR	1396380	IfStatement	if ( ZSMMG ( memory_exhausted ) )		1395612	3					
ANR	1396381	Condition	ZSMMG ( memory_exhausted )	1750:8:53278:53300	1395612	0	True				
ANR	1396382	CallExpression	ZSMMG ( memory_exhausted )		1395612	0					
ANR	1396383	Callee	ZSMMG		1395612	0					
ANR	1396384	Identifier	ZSMMG		1395612	0					
ANR	1396385	ArgumentList	memory_exhausted		1395612	1					
ANR	1396386	Argument	memory_exhausted		1395612	0					
ANR	1396387	Identifier	memory_exhausted		1395612	0					
ANR	1396388	CompoundStatement		138:5:4983:5101	1395612	1					
ANR	1396389	IdentifierDeclStatement	zend_accel_restart_reason reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM ;	1751:5:53310:53428	1395612	0	True				
ANR	1396390	IdentifierDecl	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		1395612	0					
ANR	1396391	IdentifierDeclType	zend_accel_restart_reason		1395612	0					
ANR	1396392	Identifier	reason		1395612	1					
ANR	1396393	AssignmentExpression	reason = zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		1395612	2		=			
ANR	1396394	Identifier	reason		1395612	0					
ANR	1396395	ConditionalExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) ) ? ACCEL_RESTART_HASH : ACCEL_RESTART_OOM		1395612	1					
ANR	1396396	Condition	zend_accel_hash_is_full ( & ZCSG ( hash ) )		1395612	0					
ANR	1396397	CallExpression	zend_accel_hash_is_full ( & ZCSG ( hash ) )		1395612	0					
ANR	1396398	Callee	zend_accel_hash_is_full		1395612	0					
ANR	1396399	Identifier	zend_accel_hash_is_full		1395612	0					
ANR	1396400	ArgumentList	& ZCSG ( hash )		1395612	1					
ANR	1396401	Argument	& ZCSG ( hash )		1395612	0					
ANR	1396402	UnaryOperationExpression	& ZCSG ( hash )		1395612	0					
ANR	1396403	UnaryOperator	&		1395612	0					
ANR	1396404	CallExpression	ZCSG ( hash )		1395612	1					
ANR	1396405	Callee	ZCSG		1395612	0					
ANR	1396406	Identifier	ZCSG		1395612	0					
ANR	1396407	ArgumentList	hash		1395612	1					
ANR	1396408	Argument	hash		1395612	0					
ANR	1396409	Identifier	hash		1395612	0					
ANR	1396410	Identifier	ACCEL_RESTART_HASH		1395612	1					
ANR	1396411	Identifier	ACCEL_RESTART_OOM		1395612	2					
ANR	1396412	ExpressionStatement	zend_accel_schedule_restart_if_necessary ( reason )	1753:5:53435:53483	1395612	1	True				
ANR	1396413	CallExpression	zend_accel_schedule_restart_if_necessary ( reason )		1395612	0					
ANR	1396414	Callee	zend_accel_schedule_restart_if_necessary		1395612	0					
ANR	1396415	Identifier	zend_accel_schedule_restart_if_necessary		1395612	0					
ANR	1396416	ArgumentList	reason		1395612	1					
ANR	1396417	Argument	reason		1395612	0					
ANR	1396418	Identifier	reason		1395612	0					
ANR	1396419	ExpressionStatement	zend_shared_alloc_unlock ( )	1756:3:53499:53525	1395612	3	True				
ANR	1396420	CallExpression	zend_shared_alloc_unlock ( )		1395612	0					
ANR	1396421	Callee	zend_shared_alloc_unlock		1395612	0					
ANR	1396422	Identifier	zend_shared_alloc_unlock		1395612	0					
ANR	1396423	ArgumentList			1395612	1					
ANR	1396424	ExpressionStatement	persistent_script = NULL	1757:3:53530:53554	1395612	4	True				
ANR	1396425	AssignmentExpression	persistent_script = NULL		1395612	0		=			
ANR	1396426	Identifier	persistent_script		1395612	0					
ANR	1396427	Identifier	NULL		1395612	1					
ANR	1396428	IfStatement	if ( ! persistent_script && ZCG ( accel_directives ) . file_cache )		1395612	13					
ANR	1396429	Condition	! persistent_script && ZCG ( accel_directives ) . file_cache	1763:5:53636:53689	1395612	0	True				
ANR	1396430	AndExpression	! persistent_script && ZCG ( accel_directives ) . file_cache		1395612	0		&&			
ANR	1396431	UnaryOperationExpression	! persistent_script		1395612	0					
ANR	1396432	UnaryOperator	!		1395612	0					
ANR	1396433	Identifier	persistent_script		1395612	1					
ANR	1396434	MemberAccess	ZCG ( accel_directives ) . file_cache		1395612	1					
ANR	1396435	CallExpression	ZCG ( accel_directives )		1395612	0					
ANR	1396436	Callee	ZCG		1395612	0					
ANR	1396437	Identifier	ZCG		1395612	0					
ANR	1396438	ArgumentList	accel_directives		1395612	1					
ANR	1396439	Argument	accel_directives		1395612	0					
ANR	1396440	Identifier	accel_directives		1395612	0					
ANR	1396441	Identifier	file_cache		1395612	1					
ANR	1396442	CompoundStatement		150:61:5365:5365	1395612	1					
ANR	1396443	ExpressionStatement	persistent_script = zend_file_cache_script_load ( file_handle )	1764:2:53696:53756	1395612	0	True				
ANR	1396444	AssignmentExpression	persistent_script = zend_file_cache_script_load ( file_handle )		1395612	0		=			
ANR	1396445	Identifier	persistent_script		1395612	0					
ANR	1396446	CallExpression	zend_file_cache_script_load ( file_handle )		1395612	1					
ANR	1396447	Callee	zend_file_cache_script_load		1395612	0					
ANR	1396448	Identifier	zend_file_cache_script_load		1395612	0					
ANR	1396449	ArgumentList	file_handle		1395612	1					
ANR	1396450	Argument	file_handle		1395612	0					
ANR	1396451	Identifier	file_handle		1395612	0					
ANR	1396452	IfStatement	if ( ! persistent_script )		1395612	14					
ANR	1396453	Condition	! persistent_script	1769:5:53843:53860	1395612	0	True				
ANR	1396454	UnaryOperationExpression	! persistent_script		1395612	0					
ANR	1396455	UnaryOperator	!		1395612	0					
ANR	1396456	Identifier	persistent_script		1395612	1					
ANR	1396457	CompoundStatement		158:2:5616:5639	1395612	1					
ANR	1396458	IdentifierDeclStatement	uint32_t old_const_num = zend_hash_next_free_element ( EG ( zend_constants ) ) ;	1770:2:53867:53939	1395612	0	True				
ANR	1396459	IdentifierDecl	old_const_num = zend_hash_next_free_element ( EG ( zend_constants ) )		1395612	0					
ANR	1396460	IdentifierDeclType	uint32_t		1395612	0					
ANR	1396461	Identifier	old_const_num		1395612	1					
ANR	1396462	AssignmentExpression	old_const_num = zend_hash_next_free_element ( EG ( zend_constants ) )		1395612	2		=			
ANR	1396463	Identifier	old_const_num		1395612	0					
ANR	1396464	CallExpression	zend_hash_next_free_element ( EG ( zend_constants ) )		1395612	1					
ANR	1396465	Callee	zend_hash_next_free_element		1395612	0					
ANR	1396466	Identifier	zend_hash_next_free_element		1395612	0					
ANR	1396467	ArgumentList	EG ( zend_constants )		1395612	1					
ANR	1396468	Argument	EG ( zend_constants )		1395612	0					
ANR	1396469	CallExpression	EG ( zend_constants )		1395612	0					
ANR	1396470	Callee	EG		1395612	0					
ANR	1396471	Identifier	EG		1395612	0					
ANR	1396472	ArgumentList	zend_constants		1395612	1					
ANR	1396473	Argument	zend_constants		1395612	0					
ANR	1396474	Identifier	zend_constants		1395612	0					
ANR	1396475	IdentifierDeclStatement	zend_op_array * op_array ;	1771:2:53943:53966	1395612	1	True				
ANR	1396476	IdentifierDecl	* op_array		1395612	0					
ANR	1396477	IdentifierDeclType	zend_op_array *		1395612	0					
ANR	1396478	Identifier	op_array		1395612	1					
ANR	1396479	ExpressionStatement	ZCSG ( misses ) ++	1774:2:53992:54006	1395612	2	True				
ANR	1396480	PostIncDecOperationExpression	ZCSG ( misses ) ++		1395612	0					
ANR	1396481	CallExpression	ZCSG ( misses )		1395612	0					
ANR	1396482	Callee	ZCSG		1395612	0					
ANR	1396483	Identifier	ZCSG		1395612	0					
ANR	1396484	ArgumentList	misses		1395612	1					
ANR	1396485	Argument	misses		1395612	0					
ANR	1396486	Identifier	misses		1395612	0					
ANR	1396487	IncDec	++		1395612	1					
ANR	1396488	IfStatement	if ( ZSMMG ( memory_exhausted ) || ZCSG ( restart_pending ) )		1395612	3					
ANR	1396489	Condition	ZSMMG ( memory_exhausted ) || ZCSG ( restart_pending )	1777:6:54075:54122	1395612	0	True				
ANR	1396490	OrExpression	ZSMMG ( memory_exhausted ) || ZCSG ( restart_pending )		1395612	0		||			
ANR	1396491	CallExpression	ZSMMG ( memory_exhausted )		1395612	0					
ANR	1396492	Callee	ZSMMG		1395612	0					
ANR	1396493	Identifier	ZSMMG		1395612	0					
ANR	1396494	ArgumentList	memory_exhausted		1395612	1					
ANR	1396495	Argument	memory_exhausted		1395612	0					
ANR	1396496	Identifier	memory_exhausted		1395612	0					
ANR	1396497	CallExpression	ZCSG ( restart_pending )		1395612	1					
ANR	1396498	Callee	ZCSG		1395612	0					
ANR	1396499	Identifier	ZCSG		1395612	0					
ANR	1396500	ArgumentList	restart_pending		1395612	1					
ANR	1396501	Argument	restart_pending		1395612	0					
ANR	1396502	Identifier	restart_pending		1395612	0					
ANR	1396503	CompoundStatement		164:56:5798:5798	1395612	1					
ANR	1396504	ExpressionStatement	SHM_PROTECT ( )	1778:3:54130:54143	1395612	0	True				
ANR	1396505	CallExpression	SHM_PROTECT ( )		1395612	0					
ANR	1396506	Callee	SHM_PROTECT		1395612	0					
ANR	1396507	Identifier	SHM_PROTECT		1395612	0					
ANR	1396508	ArgumentList			1395612	1					
ANR	1396509	ReturnStatement	"return accelerator_orig_compile_file ( file_handle , type ) ;"	1779:3:54148:54203	1395612	1	True				
ANR	1396510	CallExpression	"accelerator_orig_compile_file ( file_handle , type )"		1395612	0					
ANR	1396511	Callee	accelerator_orig_compile_file		1395612	0					
ANR	1396512	Identifier	accelerator_orig_compile_file		1395612	0					
ANR	1396513	ArgumentList	file_handle		1395612	1					
ANR	1396514	Argument	file_handle		1395612	0					
ANR	1396515	Identifier	file_handle		1395612	0					
ANR	1396516	Argument	type		1395612	1					
ANR	1396517	Identifier	type		1395612	0					
ANR	1396518	ExpressionStatement	from_shared_memory = 0	1785:8:54381:54403	1395612	4	True				
ANR	1396519	AssignmentExpression	from_shared_memory = 0		1395612	0		=			
ANR	1396520	Identifier	from_shared_memory		1395612	0					
ANR	1396521	PrimaryExpression	0		1395612	1					
ANR	1396522	ExpressionStatement	"persistent_script = opcache_compile_file ( file_handle , type , key , key ? key_length : 0 , & op_array )"	1786:2:54407:54504	1395612	5	True				
ANR	1396523	AssignmentExpression	"persistent_script = opcache_compile_file ( file_handle , type , key , key ? key_length : 0 , & op_array )"		1395612	0		=			
ANR	1396524	Identifier	persistent_script		1395612	0					
ANR	1396525	CallExpression	"opcache_compile_file ( file_handle , type , key , key ? key_length : 0 , & op_array )"		1395612	1					
ANR	1396526	Callee	opcache_compile_file		1395612	0					
ANR	1396527	Identifier	opcache_compile_file		1395612	0					
ANR	1396528	ArgumentList	file_handle		1395612	1					
ANR	1396529	Argument	file_handle		1395612	0					
ANR	1396530	Identifier	file_handle		1395612	0					
ANR	1396531	Argument	type		1395612	1					
ANR	1396532	Identifier	type		1395612	0					
ANR	1396533	Argument	key		1395612	2					
ANR	1396534	Identifier	key		1395612	0					
ANR	1396535	Argument	key ? key_length : 0		1395612	3					
ANR	1396536	ConditionalExpression	key ? key_length : 0		1395612	0					
ANR	1396537	Condition	key		1395612	0					
ANR	1396538	Identifier	key		1395612	0					
ANR	1396539	Identifier	key_length		1395612	1					
ANR	1396540	PrimaryExpression	0		1395612	2					
ANR	1396541	Argument	& op_array		1395612	4					
ANR	1396542	UnaryOperationExpression	& op_array		1395612	0					
ANR	1396543	UnaryOperator	&		1395612	0					
ANR	1396544	Identifier	op_array		1395612	1					
ANR	1396545	IfStatement	if ( persistent_script )		1395612	6					
ANR	1396546	Condition	persistent_script	1787:6:54512:54528	1395612	0	True				
ANR	1396547	Identifier	persistent_script		1395612	0					
ANR	1396548	CompoundStatement		174:25:6204:6204	1395612	1					
ANR	1396549	ExpressionStatement	"persistent_script = cache_script_in_shared_memory ( persistent_script , key , key ? key_length : 0 , & from_shared_memory )"	1788:3:54536:54652	1395612	0	True				
ANR	1396550	AssignmentExpression	"persistent_script = cache_script_in_shared_memory ( persistent_script , key , key ? key_length : 0 , & from_shared_memory )"		1395612	0		=			
ANR	1396551	Identifier	persistent_script		1395612	0					
ANR	1396552	CallExpression	"cache_script_in_shared_memory ( persistent_script , key , key ? key_length : 0 , & from_shared_memory )"		1395612	1					
ANR	1396553	Callee	cache_script_in_shared_memory		1395612	0					
ANR	1396554	Identifier	cache_script_in_shared_memory		1395612	0					
ANR	1396555	ArgumentList	persistent_script		1395612	1					
ANR	1396556	Argument	persistent_script		1395612	0					
ANR	1396557	Identifier	persistent_script		1395612	0					
ANR	1396558	Argument	key		1395612	1					
ANR	1396559	Identifier	key		1395612	0					
ANR	1396560	Argument	key ? key_length : 0		1395612	2					
ANR	1396561	ConditionalExpression	key ? key_length : 0		1395612	0					
ANR	1396562	Condition	key		1395612	0					
ANR	1396563	Identifier	key		1395612	0					
ANR	1396564	Identifier	key_length		1395612	1					
ANR	1396565	PrimaryExpression	0		1395612	2					
ANR	1396566	Argument	& from_shared_memory		1395612	3					
ANR	1396567	UnaryOperationExpression	& from_shared_memory		1395612	0					
ANR	1396568	UnaryOperator	&		1395612	0					
ANR	1396569	Identifier	from_shared_memory		1395612	1					
ANR	1396570	IfStatement	if ( ! persistent_script )		1395612	7					
ANR	1396571	Condition	! persistent_script	1794:6:54781:54798	1395612	0	True				
ANR	1396572	UnaryOperationExpression	! persistent_script		1395612	0					
ANR	1396573	UnaryOperator	!		1395612	0					
ANR	1396574	Identifier	persistent_script		1395612	1					
ANR	1396575	CompoundStatement		181:26:6474:6474	1395612	1					
ANR	1396576	ExpressionStatement	SHM_PROTECT ( )	1795:3:54806:54819	1395612	0	True				
ANR	1396577	CallExpression	SHM_PROTECT ( )		1395612	0					
ANR	1396578	Callee	SHM_PROTECT		1395612	0					
ANR	1396579	Identifier	SHM_PROTECT		1395612	0					
ANR	1396580	ArgumentList			1395612	1					
ANR	1396581	ReturnStatement	return op_array ;	1796:3:54824:54839	1395612	1	True				
ANR	1396582	Identifier	op_array		1395612	0					
ANR	1396583	IfStatement	if ( from_shared_memory )		1395612	8					
ANR	1396584	Condition	from_shared_memory	1798:6:54851:54868	1395612	0	True				
ANR	1396585	Identifier	from_shared_memory		1395612	0					
ANR	1396586	CompoundStatement		187:3:6597:6669	1395612	1					
ANR	1396587	IdentifierDeclStatement	uint32_t new_const_num = zend_hash_next_free_element ( EG ( zend_constants ) ) ;	1800:3:54924:54996	1395612	0	True				
ANR	1396588	IdentifierDecl	new_const_num = zend_hash_next_free_element ( EG ( zend_constants ) )		1395612	0					
ANR	1396589	IdentifierDeclType	uint32_t		1395612	0					
ANR	1396590	Identifier	new_const_num		1395612	1					
ANR	1396591	AssignmentExpression	new_const_num = zend_hash_next_free_element ( EG ( zend_constants ) )		1395612	2		=			
ANR	1396592	Identifier	new_const_num		1395612	0					
ANR	1396593	CallExpression	zend_hash_next_free_element ( EG ( zend_constants ) )		1395612	1					
ANR	1396594	Callee	zend_hash_next_free_element		1395612	0					
ANR	1396595	Identifier	zend_hash_next_free_element		1395612	0					
ANR	1396596	ArgumentList	EG ( zend_constants )		1395612	1					
ANR	1396597	Argument	EG ( zend_constants )		1395612	0					
ANR	1396598	CallExpression	EG ( zend_constants )		1395612	0					
ANR	1396599	Callee	EG		1395612	0					
ANR	1396600	Identifier	EG		1395612	0					
ANR	1396601	ArgumentList	zend_constants		1395612	1					
ANR	1396602	Argument	zend_constants		1395612	0					
ANR	1396603	Identifier	zend_constants		1395612	0					
ANR	1396604	WhileStatement	while ( new_const_num > old_const_num )		1395612	1					
ANR	1396605	Condition	new_const_num > old_const_num	1801:10:55008:55036	1395612	0	True				
ANR	1396606	RelationalExpression	new_const_num > old_const_num		1395612	0		>			
ANR	1396607	Identifier	new_const_num		1395612	0					
ANR	1396608	Identifier	old_const_num		1395612	1					
ANR	1396609	CompoundStatement		188:41:6712:6712	1395612	1					
ANR	1396610	ExpressionStatement	new_const_num --	1802:4:55045:55060	1395612	0	True				
ANR	1396611	PostIncDecOperationExpression	new_const_num --		1395612	0					
ANR	1396612	Identifier	new_const_num		1395612	0					
ANR	1396613	IncDec	--		1395612	1					
ANR	1396614	ExpressionStatement	"zend_hash_index_del ( EG ( zend_constants ) , new_const_num )"	1803:4:55066:55120	1395612	1	True				
ANR	1396615	CallExpression	"zend_hash_index_del ( EG ( zend_constants ) , new_const_num )"		1395612	0					
ANR	1396616	Callee	zend_hash_index_del		1395612	0					
ANR	1396617	Identifier	zend_hash_index_del		1395612	0					
ANR	1396618	ArgumentList	EG ( zend_constants )		1395612	1					
ANR	1396619	Argument	EG ( zend_constants )		1395612	0					
ANR	1396620	CallExpression	EG ( zend_constants )		1395612	0					
ANR	1396621	Callee	EG		1395612	0					
ANR	1396622	Identifier	EG		1395612	0					
ANR	1396623	ArgumentList	zend_constants		1395612	1					
ANR	1396624	Argument	zend_constants		1395612	0					
ANR	1396625	Identifier	zend_constants		1395612	0					
ANR	1396626	Argument	new_const_num		1395612	1					
ANR	1396627	Identifier	new_const_num		1395612	0					
ANR	1396628	ElseStatement	else		1395612	0					
ANR	1396629	CompoundStatement		193:8:6812:6812	1395612	0					
ANR	1396630	ExpressionStatement	ZCSG ( hits ) ++	1809:2:55160:55172	1395612	0	True				
ANR	1396631	PostIncDecOperationExpression	ZCSG ( hits ) ++		1395612	0					
ANR	1396632	CallExpression	ZCSG ( hits )		1395612	0					
ANR	1396633	Callee	ZCSG		1395612	0					
ANR	1396634	Identifier	ZCSG		1395612	0					
ANR	1396635	ArgumentList	hits		1395612	1					
ANR	1396636	Argument	hits		1395612	0					
ANR	1396637	Identifier	hits		1395612	0					
ANR	1396638	IncDec	++		1395612	1					
ANR	1396639	ExpressionStatement	persistent_script -> dynamic_members . hits ++	1810:2:55208:55249	1395612	1	True				
ANR	1396640	PostIncDecOperationExpression	persistent_script -> dynamic_members . hits ++		1395612	0					
ANR	1396641	MemberAccess	persistent_script -> dynamic_members . hits		1395612	0					
ANR	1396642	PtrMemberAccess	persistent_script -> dynamic_members		1395612	0					
ANR	1396643	Identifier	persistent_script		1395612	0					
ANR	1396644	Identifier	dynamic_members		1395612	1					
ANR	1396645	Identifier	hits		1395612	1					
ANR	1396646	IncDec	++		1395612	1					
ANR	1396647	IfStatement	if ( persistent_script -> full_path )		1395612	2					
ANR	1396648	Condition	persistent_script -> full_path	1821:6:55491:55518	1395612	0	True				
ANR	1396649	PtrMemberAccess	persistent_script -> full_path		1395612	0					
ANR	1396650	Identifier	persistent_script		1395612	0					
ANR	1396651	Identifier	full_path		1395612	1					
ANR	1396652	CompoundStatement		208:36:7194:7194	1395612	1					
ANR	1396653	IfStatement	if ( ! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE ) )		1395612	0					
ANR	1396654	Condition	! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )	1822:7:55530:55942	1395612	0	True				
ANR	1396655	OrExpression	! EG ( current_execute_data ) || ! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395612	0		||			
ANR	1396656	UnaryOperationExpression	! EG ( current_execute_data )		1395612	0					
ANR	1396657	UnaryOperator	!		1395612	0					
ANR	1396658	CallExpression	EG ( current_execute_data )		1395612	1					
ANR	1396659	Callee	EG		1395612	0					
ANR	1396660	Identifier	EG		1395612	0					
ANR	1396661	ArgumentList	current_execute_data		1395612	1					
ANR	1396662	Argument	current_execute_data		1395612	0					
ANR	1396663	Identifier	current_execute_data		1395612	0					
ANR	1396664	OrExpression	! EG ( current_execute_data ) -> opline || ! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395612	1		||			
ANR	1396665	UnaryOperationExpression	! EG ( current_execute_data ) -> opline		1395612	0					
ANR	1396666	UnaryOperator	!		1395612	0					
ANR	1396667	PtrMemberAccess	EG ( current_execute_data ) -> opline		1395612	1					
ANR	1396668	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1396669	Callee	EG		1395612	0					
ANR	1396670	Identifier	EG		1395612	0					
ANR	1396671	ArgumentList	current_execute_data		1395612	1					
ANR	1396672	Argument	current_execute_data		1395612	0					
ANR	1396673	Identifier	current_execute_data		1395612	0					
ANR	1396674	Identifier	opline		1395612	1					
ANR	1396675	OrExpression	! EG ( current_execute_data ) -> func || ! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395612	1		||			
ANR	1396676	UnaryOperationExpression	! EG ( current_execute_data ) -> func		1395612	0					
ANR	1396677	UnaryOperator	!		1395612	0					
ANR	1396678	PtrMemberAccess	EG ( current_execute_data ) -> func		1395612	1					
ANR	1396679	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1396680	Callee	EG		1395612	0					
ANR	1396681	Identifier	EG		1395612	0					
ANR	1396682	ArgumentList	current_execute_data		1395612	1					
ANR	1396683	Argument	current_execute_data		1395612	0					
ANR	1396684	Identifier	current_execute_data		1395612	0					
ANR	1396685	Identifier	func		1395612	1					
ANR	1396686	OrExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) || EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395612	1		||			
ANR	1396687	UnaryOperationExpression	! ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		1395612	0					
ANR	1396688	UnaryOperator	!		1395612	0					
ANR	1396689	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		1395612	1					
ANR	1396690	Callee	ZEND_USER_CODE		1395612	0					
ANR	1396691	Identifier	ZEND_USER_CODE		1395612	0					
ANR	1396692	ArgumentList	EG ( current_execute_data ) -> func -> common . type		1395612	1					
ANR	1396693	Argument	EG ( current_execute_data ) -> func -> common . type		1395612	0					
ANR	1396694	MemberAccess	EG ( current_execute_data ) -> func -> common . type		1395612	0					
ANR	1396695	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		1395612	0					
ANR	1396696	PtrMemberAccess	EG ( current_execute_data ) -> func		1395612	0					
ANR	1396697	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1396698	Callee	EG		1395612	0					
ANR	1396699	Identifier	EG		1395612	0					
ANR	1396700	ArgumentList	current_execute_data		1395612	1					
ANR	1396701	Argument	current_execute_data		1395612	0					
ANR	1396702	Identifier	current_execute_data		1395612	0					
ANR	1396703	Identifier	func		1395612	1					
ANR	1396704	Identifier	common		1395612	1					
ANR	1396705	Identifier	type		1395612	1					
ANR	1396706	OrExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL || ( EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE )		1395612	1		||			
ANR	1396707	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode != ZEND_INCLUDE_OR_EVAL		1395612	0		!=			
ANR	1396708	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		1395612	0					
ANR	1396709	PtrMemberAccess	EG ( current_execute_data ) -> opline		1395612	0					
ANR	1396710	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1396711	Callee	EG		1395612	0					
ANR	1396712	Identifier	EG		1395612	0					
ANR	1396713	ArgumentList	current_execute_data		1395612	1					
ANR	1396714	Argument	current_execute_data		1395612	0					
ANR	1396715	Identifier	current_execute_data		1395612	0					
ANR	1396716	Identifier	opline		1395612	1					
ANR	1396717	Identifier	opcode		1395612	1					
ANR	1396718	Identifier	ZEND_INCLUDE_OR_EVAL		1395612	1					
ANR	1396719	AndExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE && EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE		1395612	1		&&			
ANR	1396720	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_INCLUDE_ONCE		1395612	0		!=			
ANR	1396721	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		1395612	0					
ANR	1396722	PtrMemberAccess	EG ( current_execute_data ) -> opline		1395612	0					
ANR	1396723	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1396724	Callee	EG		1395612	0					
ANR	1396725	Identifier	EG		1395612	0					
ANR	1396726	ArgumentList	current_execute_data		1395612	1					
ANR	1396727	Argument	current_execute_data		1395612	0					
ANR	1396728	Identifier	current_execute_data		1395612	0					
ANR	1396729	Identifier	opline		1395612	1					
ANR	1396730	Identifier	extended_value		1395612	1					
ANR	1396731	Identifier	ZEND_INCLUDE_ONCE		1395612	1					
ANR	1396732	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value != ZEND_REQUIRE_ONCE		1395612	1		!=			
ANR	1396733	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		1395612	0					
ANR	1396734	PtrMemberAccess	EG ( current_execute_data ) -> opline		1395612	0					
ANR	1396735	CallExpression	EG ( current_execute_data )		1395612	0					
ANR	1396736	Callee	EG		1395612	0					
ANR	1396737	Identifier	EG		1395612	0					
ANR	1396738	ArgumentList	current_execute_data		1395612	1					
ANR	1396739	Argument	current_execute_data		1395612	0					
ANR	1396740	Identifier	current_execute_data		1395612	0					
ANR	1396741	Identifier	opline		1395612	1					
ANR	1396742	Identifier	extended_value		1395612	1					
ANR	1396743	Identifier	ZEND_REQUIRE_ONCE		1395612	1					
ANR	1396744	CompoundStatement		214:80:7618:7618	1395612	1					
ANR	1396745	IfStatement	"if ( zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL )"		1395612	0					
ANR	1396746	Condition	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL"	1828:8:55955:56040	1395612	0	True				
ANR	1396747	EqualityExpression	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path ) != NULL"		1395612	0		!=			
ANR	1396748	CallExpression	"zend_hash_add_empty_element ( & EG ( included_files ) , persistent_script -> full_path )"		1395612	0					
ANR	1396749	Callee	zend_hash_add_empty_element		1395612	0					
ANR	1396750	Identifier	zend_hash_add_empty_element		1395612	0					
ANR	1396751	ArgumentList	& EG ( included_files )		1395612	1					
ANR	1396752	Argument	& EG ( included_files )		1395612	0					
ANR	1396753	UnaryOperationExpression	& EG ( included_files )		1395612	0					
ANR	1396754	UnaryOperator	&		1395612	0					
ANR	1396755	CallExpression	EG ( included_files )		1395612	1					
ANR	1396756	Callee	EG		1395612	0					
ANR	1396757	Identifier	EG		1395612	0					
ANR	1396758	ArgumentList	included_files		1395612	1					
ANR	1396759	Argument	included_files		1395612	0					
ANR	1396760	Identifier	included_files		1395612	0					
ANR	1396761	Argument	persistent_script -> full_path		1395612	1					
ANR	1396762	PtrMemberAccess	persistent_script -> full_path		1395612	0					
ANR	1396763	Identifier	persistent_script		1395612	0					
ANR	1396764	Identifier	full_path		1395612	1					
ANR	1396765	Identifier	NULL		1395612	1					
ANR	1396766	CompoundStatement		215:96:7716:7716	1395612	1					
ANR	1396767	IfStatement	if ( persistent_script -> is_phar )		1395612	0					
ANR	1396768	Condition	persistent_script -> is_phar	1830:9:56114:56139	1395612	0	True				
ANR	1396769	PtrMemberAccess	persistent_script -> is_phar		1395612	0					
ANR	1396770	Identifier	persistent_script		1395612	0					
ANR	1396771	Identifier	is_phar		1395612	1					
ANR	1396772	CompoundStatement		219:6:7853:7934	1395612	1					
ANR	1396773	IdentifierDeclStatement	php_stream_statbuf ssb ;	1831:6:56150:56172	1395612	0	True				
ANR	1396774	IdentifierDecl	ssb		1395612	0					
ANR	1396775	IdentifierDeclType	php_stream_statbuf		1395612	0					
ANR	1396776	Identifier	ssb		1395612	1					
ANR	1396777	IdentifierDeclStatement	"char * fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) ) ;"	1832:6:56180:56261	1395612	1	True				
ANR	1396778	IdentifierDecl	"* fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		1395612	0					
ANR	1396779	IdentifierDeclType	char *		1395612	0					
ANR	1396780	Identifier	fname		1395612	1					
ANR	1396781	AssignmentExpression	"* fname = emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		1395612	2		=			
ANR	1396782	Identifier	fname		1395612	0					
ANR	1396783	CallExpression	"emalloc ( sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path ) )"		1395612	1					
ANR	1396784	Callee	emalloc		1395612	0					
ANR	1396785	Identifier	emalloc		1395612	0					
ANR	1396786	ArgumentList	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		1395612	1					
ANR	1396787	Argument	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		1395612	0					
ANR	1396788	AdditiveExpression	"sizeof ( ""phar://"" ) + ZSTR_LEN ( persistent_script -> full_path )"		1395612	0		+			
ANR	1396789	SizeofExpression	"sizeof ( ""phar://"" )"		1395612	0					
ANR	1396790	Sizeof	sizeof		1395612	0					
ANR	1396791	PrimaryExpression	"""phar://"""		1395612	1					
ANR	1396792	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		1395612	1					
ANR	1396793	Callee	ZSTR_LEN		1395612	0					
ANR	1396794	Identifier	ZSTR_LEN		1395612	0					
ANR	1396795	ArgumentList	persistent_script -> full_path		1395612	1					
ANR	1396796	Argument	persistent_script -> full_path		1395612	0					
ANR	1396797	PtrMemberAccess	persistent_script -> full_path		1395612	0					
ANR	1396798	Identifier	persistent_script		1395612	0					
ANR	1396799	Identifier	full_path		1395612	1					
ANR	1396800	ExpressionStatement	"memcpy ( fname , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"	1834:6:56270:56317	1395612	2	True				
ANR	1396801	CallExpression	"memcpy ( fname , ""phar://"" , sizeof ( ""phar://"" ) - 1 )"		1395612	0					
ANR	1396802	Callee	memcpy		1395612	0					
ANR	1396803	Identifier	memcpy		1395612	0					
ANR	1396804	ArgumentList	fname		1395612	1					
ANR	1396805	Argument	fname		1395612	0					
ANR	1396806	Identifier	fname		1395612	0					
ANR	1396807	Argument	"""phar://"""		1395612	1					
ANR	1396808	PrimaryExpression	"""phar://"""		1395612	0					
ANR	1396809	Argument	"sizeof ( ""phar://"" ) - 1"		1395612	2					
ANR	1396810	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		1395612	0		-			
ANR	1396811	SizeofExpression	"sizeof ( ""phar://"" )"		1395612	0					
ANR	1396812	Sizeof	sizeof		1395612	0					
ANR	1396813	PrimaryExpression	"""phar://"""		1395612	1					
ANR	1396814	PrimaryExpression	1		1395612	1					
ANR	1396815	ExpressionStatement	"memcpy ( fname + sizeof ( ""phar://"" ) - 1 , ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_LEN ( persistent_script -> full_path ) + 1 )"	1835:6:56325:56446	1395612	3	True				
ANR	1396816	CallExpression	"memcpy ( fname + sizeof ( ""phar://"" ) - 1 , ZSTR_VAL ( persistent_script -> full_path ) , ZSTR_LEN ( persistent_script -> full_path ) + 1 )"		1395612	0					
ANR	1396817	Callee	memcpy		1395612	0					
ANR	1396818	Identifier	memcpy		1395612	0					
ANR	1396819	ArgumentList	"fname + sizeof ( ""phar://"" ) - 1"		1395612	1					
ANR	1396820	Argument	"fname + sizeof ( ""phar://"" ) - 1"		1395612	0					
ANR	1396821	AdditiveExpression	"fname + sizeof ( ""phar://"" ) - 1"		1395612	0		+			
ANR	1396822	Identifier	fname		1395612	0					
ANR	1396823	AdditiveExpression	"sizeof ( ""phar://"" ) - 1"		1395612	1		-			
ANR	1396824	SizeofExpression	"sizeof ( ""phar://"" )"		1395612	0					
ANR	1396825	Sizeof	sizeof		1395612	0					
ANR	1396826	PrimaryExpression	"""phar://"""		1395612	1					
ANR	1396827	PrimaryExpression	1		1395612	1					
ANR	1396828	Argument	ZSTR_VAL ( persistent_script -> full_path )		1395612	1					
ANR	1396829	CallExpression	ZSTR_VAL ( persistent_script -> full_path )		1395612	0					
ANR	1396830	Callee	ZSTR_VAL		1395612	0					
ANR	1396831	Identifier	ZSTR_VAL		1395612	0					
ANR	1396832	ArgumentList	persistent_script -> full_path		1395612	1					
ANR	1396833	Argument	persistent_script -> full_path		1395612	0					
ANR	1396834	PtrMemberAccess	persistent_script -> full_path		1395612	0					
ANR	1396835	Identifier	persistent_script		1395612	0					
ANR	1396836	Identifier	full_path		1395612	1					
ANR	1396837	Argument	ZSTR_LEN ( persistent_script -> full_path ) + 1		1395612	2					
ANR	1396838	AdditiveExpression	ZSTR_LEN ( persistent_script -> full_path ) + 1		1395612	0		+			
ANR	1396839	CallExpression	ZSTR_LEN ( persistent_script -> full_path )		1395612	0					
ANR	1396840	Callee	ZSTR_LEN		1395612	0					
ANR	1396841	Identifier	ZSTR_LEN		1395612	0					
ANR	1396842	ArgumentList	persistent_script -> full_path		1395612	1					
ANR	1396843	Argument	persistent_script -> full_path		1395612	0					
ANR	1396844	PtrMemberAccess	persistent_script -> full_path		1395612	0					
ANR	1396845	Identifier	persistent_script		1395612	0					
ANR	1396846	Identifier	full_path		1395612	1					
ANR	1396847	PrimaryExpression	1		1395612	1					
ANR	1396848	ExpressionStatement	"php_stream_stat_path ( fname , & ssb )"	1836:6:56454:56487	1395612	4	True				
ANR	1396849	CallExpression	"php_stream_stat_path ( fname , & ssb )"		1395612	0					
ANR	1396850	Callee	php_stream_stat_path		1395612	0					
ANR	1396851	Identifier	php_stream_stat_path		1395612	0					
ANR	1396852	ArgumentList	fname		1395612	1					
ANR	1396853	Argument	fname		1395612	0					
ANR	1396854	Identifier	fname		1395612	0					
ANR	1396855	Argument	& ssb		1395612	1					
ANR	1396856	UnaryOperationExpression	& ssb		1395612	0					
ANR	1396857	UnaryOperator	&		1395612	0					
ANR	1396858	Identifier	ssb		1395612	1					
ANR	1396859	ExpressionStatement	efree ( fname )	1837:6:56495:56507	1395612	5	True				
ANR	1396860	CallExpression	efree ( fname )		1395612	0					
ANR	1396861	Callee	efree		1395612	0					
ANR	1396862	Identifier	efree		1395612	0					
ANR	1396863	ArgumentList	fname		1395612	1					
ANR	1396864	Argument	fname		1395612	0					
ANR	1396865	Identifier	fname		1395612	0					
ANR	1396866	ExpressionStatement	zend_file_handle_dtor ( file_handle )	1842:2:56533:56567	1395612	3	True				
ANR	1396867	CallExpression	zend_file_handle_dtor ( file_handle )		1395612	0					
ANR	1396868	Callee	zend_file_handle_dtor		1395612	0					
ANR	1396869	Identifier	zend_file_handle_dtor		1395612	0					
ANR	1396870	ArgumentList	file_handle		1395612	1					
ANR	1396871	Argument	file_handle		1395612	0					
ANR	1396872	Identifier	file_handle		1395612	0					
ANR	1396873	ExpressionStatement	from_shared_memory = 1	1843:2:56571:56593	1395612	4	True				
ANR	1396874	AssignmentExpression	from_shared_memory = 1		1395612	0		=			
ANR	1396875	Identifier	from_shared_memory		1395612	0					
ANR	1396876	PrimaryExpression	1		1395612	1					
ANR	1396877	ExpressionStatement	persistent_script -> dynamic_members . last_used = ZCG ( request_time )	1846:1:56600:56664	1395612	15	True				
ANR	1396878	AssignmentExpression	persistent_script -> dynamic_members . last_used = ZCG ( request_time )		1395612	0		=			
ANR	1396879	MemberAccess	persistent_script -> dynamic_members . last_used		1395612	0					
ANR	1396880	PtrMemberAccess	persistent_script -> dynamic_members		1395612	0					
ANR	1396881	Identifier	persistent_script		1395612	0					
ANR	1396882	Identifier	dynamic_members		1395612	1					
ANR	1396883	Identifier	last_used		1395612	1					
ANR	1396884	CallExpression	ZCG ( request_time )		1395612	1					
ANR	1396885	Callee	ZCG		1395612	0					
ANR	1396886	Identifier	ZCG		1395612	0					
ANR	1396887	ArgumentList	request_time		1395612	1					
ANR	1396888	Argument	request_time		1395612	0					
ANR	1396889	Identifier	request_time		1395612	0					
ANR	1396890	ExpressionStatement	SHM_PROTECT ( )	1848:1:56668:56681	1395612	16	True				
ANR	1396891	CallExpression	SHM_PROTECT ( )		1395612	0					
ANR	1396892	Callee	SHM_PROTECT		1395612	0					
ANR	1396893	Identifier	SHM_PROTECT		1395612	0					
ANR	1396894	ArgumentList			1395612	1					
ANR	1396895	IfStatement	if ( persistent_script -> ping_auto_globals_mask )		1395612	17					
ANR	1396896	Condition	persistent_script -> ping_auto_globals_mask	1851:8:56761:56801	1395612	0	True				
ANR	1396897	PtrMemberAccess	persistent_script -> ping_auto_globals_mask		1395612	0					
ANR	1396898	Identifier	persistent_script		1395612	0					
ANR	1396899	Identifier	ping_auto_globals_mask		1395612	1					
ANR	1396900	CompoundStatement		238:51:8477:8477	1395612	1					
ANR	1396901	ExpressionStatement	zend_accel_set_auto_globals ( persistent_script -> ping_auto_globals_mask )	1852:2:56808:56878	1395612	0	True				
ANR	1396902	CallExpression	zend_accel_set_auto_globals ( persistent_script -> ping_auto_globals_mask )		1395612	0					
ANR	1396903	Callee	zend_accel_set_auto_globals		1395612	0					
ANR	1396904	Identifier	zend_accel_set_auto_globals		1395612	0					
ANR	1396905	ArgumentList	persistent_script -> ping_auto_globals_mask		1395612	1					
ANR	1396906	Argument	persistent_script -> ping_auto_globals_mask		1395612	0					
ANR	1396907	PtrMemberAccess	persistent_script -> ping_auto_globals_mask		1395612	0					
ANR	1396908	Identifier	persistent_script		1395612	0					
ANR	1396909	Identifier	ping_auto_globals_mask		1395612	1					
ANR	1396910	ReturnStatement	"return zend_accel_load_script ( persistent_script , from_shared_memory ) ;"	1855:1:56885:56953	1395612	18	True				
ANR	1396911	CallExpression	"zend_accel_load_script ( persistent_script , from_shared_memory )"		1395612	0					
ANR	1396912	Callee	zend_accel_load_script		1395612	0					
ANR	1396913	Identifier	zend_accel_load_script		1395612	0					
ANR	1396914	ArgumentList	persistent_script		1395612	1					
ANR	1396915	Argument	persistent_script		1395612	0					
ANR	1396916	Identifier	persistent_script		1395612	0					
ANR	1396917	Argument	from_shared_memory		1395612	1					
ANR	1396918	Identifier	from_shared_memory		1395612	0					
ANR	1396919	ReturnType	zend_op_array *		1395612	1					
ANR	1396920	Identifier	persistent_compile_file		1395612	2					
ANR	1396921	ParameterList	"zend_file_handle * file_handle , int type"		1395612	3					
ANR	1396922	Parameter	zend_file_handle * file_handle	1613:39:48285:48313	1395612	0	True				
ANR	1396923	ParameterType	zend_file_handle *		1395612	0					
ANR	1396924	Identifier	file_handle		1395612	1					
ANR	1396925	Parameter	int type	1613:70:48316:48323	1395612	1	True				
ANR	1396926	ParameterType	int		1395612	0					
ANR	1396927	Identifier	type		1395612	1					
ANR	1396928	CFGEntryNode	ENTRY		1395612		True				
ANR	1396929	CFGExitNode	EXIT		1395612		True				
ANR	1396930	Symbol	reason		1395612						
ANR	1396931	Symbol	ssb		1395612						
ANR	1396932	Symbol	EG ( current_execute_data ) -> func -> common . type		1395612						
ANR	1396933	Symbol	type		1395612						
ANR	1396934	Symbol	* * EG		1395612						
ANR	1396935	Symbol	new_const_num		1395612						
ANR	1396936	Symbol	from_shared_memory		1395612						
ANR	1396937	Symbol	persistent_script -> full_path		1395612						
ANR	1396938	Symbol	ZCSG		1395612						
ANR	1396939	Symbol	persistent_script -> timestamp		1395612						
ANR	1396940	Symbol	& from_shared_memory		1395612						
ANR	1396941	Symbol	zend_file_cache_script_load		1395612						
ANR	1396942	Symbol	fname		1395612						
ANR	1396943	Symbol	memory_exhausted		1395612						
ANR	1396944	Symbol	* EG ( current_execute_data ) -> opline		1395612						
ANR	1396945	Symbol	* EG ( current_execute_data ) -> func		1395612						
ANR	1396946	Symbol	file_handle		1395612						
ANR	1396947	Symbol	cache_opline		1395612						
ANR	1396948	Symbol	persistent_script -> corrupted		1395612						
ANR	1396949	Symbol	persistent_script -> dynamic_members . hits		1395612						
ANR	1396950	Symbol	& ssb		1395612						
ANR	1396951	Symbol	bucket		1395612						
ANR	1396952	Symbol	& ZCSG		1395612						
ANR	1396953	Symbol	file_handle -> filename		1395612						
ANR	1396954	Symbol	* bucket		1395612						
ANR	1396955	Symbol	ZMSG_FAILED_REQUIRE_FOPEN		1395612						
ANR	1396956	Symbol	ZEND_USER_CODE		1395612						
ANR	1396957	Symbol	opcache_compile_file		1395612						
ANR	1396958	Symbol	ZCG ( accel_directives ) . file_cache_only		1395612						
ANR	1396959	Symbol	hash		1395612						
ANR	1396960	Symbol	ZCG		1395612						
ANR	1396961	Symbol	persistent_script -> dynamic_members . last_used		1395612						
ANR	1396962	Symbol	accel_startup_ok		1395612						
ANR	1396963	Symbol	zend_accel_hash_find_entry		1395612						
ANR	1396964	Symbol	wasted_shared_memory		1395612						
ANR	1396965	Symbol	accelerator_orig_compile_file		1395612						
ANR	1396966	Symbol	* EG		1395612						
ANR	1396967	Symbol	EG ( current_execute_data ) -> opline		1395612						
ANR	1396968	Symbol	& op_array		1395612						
ANR	1396969	Symbol	enabled		1395612						
ANR	1396970	Symbol	* file_handle		1395612						
ANR	1396971	Symbol	file_handle -> type		1395612						
ANR	1396972	Symbol	accelerator_orig_zend_stream_open_function		1395612						
ANR	1396973	Symbol	persistent_script -> is_phar		1395612						
ANR	1396974	Symbol	SG		1395612						
ANR	1396975	Symbol	ZCG ( accel_directives ) . consistency_checks		1395612						
ANR	1396976	Symbol	misses		1395612						
ANR	1396977	Symbol	key_length		1395612						
ANR	1396978	Symbol	included_files		1395612						
ANR	1396979	Symbol	key		1395612						
ANR	1396980	Symbol	key_len		1395612						
ANR	1396981	Symbol	ZEND_INCLUDE_ONCE		1395612						
ANR	1396982	Symbol	validate_timestamp_and_record		1395612						
ANR	1396983	Symbol	EG ( current_execute_data ) -> opline -> opcode		1395612						
ANR	1396984	Symbol	ZEND_REQUIRE_ONCE		1395612						
ANR	1396985	Symbol	persistent_script		1395612						
ANR	1396986	Symbol	FAILURE		1395612						
ANR	1396987	Symbol	hits		1395612						
ANR	1396988	Symbol	EG ( current_execute_data ) -> func -> common		1395612						
ANR	1396989	Symbol	ZEND_REQUIRE		1395612						
ANR	1396990	Symbol	zend_accel_hash_str_find		1395612						
ANR	1396991	Symbol	accel_directives		1395612						
ANR	1396992	Symbol	ZCG ( accel_directives ) . revalidate_path		1395612						
ANR	1396993	Symbol	op_array		1395612						
ANR	1396994	Symbol	persistent_script -> ping_auto_globals_mask		1395612						
ANR	1396995	Symbol	ACCEL_RESTART_OOM		1395612						
ANR	1396996	Symbol	EG ( current_execute_data ) -> func		1395612						
ANR	1396997	Symbol	current_execute_data		1395612						
ANR	1396998	Symbol	strlen		1395612						
ANR	1396999	Symbol	& key_length		1395612						
ANR	1397000	Symbol	zend_constants		1395612						
ANR	1397001	Symbol	zend_hash_add_empty_element		1395612						
ANR	1397002	Symbol	accel_make_persistent_key		1395612						
ANR	1397003	Symbol	EG		1395612						
ANR	1397004	Symbol	NULL		1395612						
ANR	1397005	Symbol	SG ( request_info ) . path_translated		1395612						
ANR	1397006	Symbol	ZMSG_FAILED_INCLUDE_FOPEN		1395612						
ANR	1397007	Symbol	restart_pending		1395612						
ANR	1397008	Symbol	* persistent_script		1395612						
ANR	1397009	Symbol	file_handle -> opened_path		1395612						
ANR	1397010	Symbol	persistent_script -> dynamic_members . memory_consumption		1395612						
ANR	1397011	Symbol	persistent_script -> dynamic_members . checksum		1395612						
ANR	1397012	Symbol	file_cache_compile_file		1395612						
ANR	1397013	Symbol	ZEND_HANDLE_FILENAME		1395612						
ANR	1397014	Symbol	zend_accel_script_checksum		1395612						
ANR	1397015	Symbol	accel_restart_is_active		1395612						
ANR	1397016	Symbol	ZCG ( accel_directives ) . file_cache		1395612						
ANR	1397017	Symbol	old_const_num		1395612						
ANR	1397018	Symbol	ACCEL_RESTART_HASH		1395612						
ANR	1397019	Symbol	ZCG ( accel_directives ) . validate_timestamps		1395612						
ANR	1397020	Symbol	cache_script_in_shared_memory		1395612						
ANR	1397021	Symbol	restart_in_progress		1395612						
ANR	1397022	Symbol	cache_persistent_script		1395612						
ANR	1397023	Symbol	& EG		1395612						
ANR	1397024	Symbol	EG ( current_execute_data ) -> opline -> extended_value		1395612						
ANR	1397025	Symbol	emalloc		1395612						
ANR	1397026	Symbol	request_time		1395612						
ANR	1397027	Symbol	ZSMMG		1395612						
ANR	1397028	Symbol	checksum		1395612						
ANR	1397029	Symbol	ACCEL_LOG_INFO		1395612						
ANR	1397030	Symbol	ZEND_INCLUDE_OR_EVAL		1395612						
ANR	1397031	Symbol	zend_accel_hash_is_full		1395612						
ANR	1397032	Symbol	zend_accel_load_script		1395612						
ANR	1397033	Symbol	persistent_script -> dynamic_members		1395612						
ANR	1397034	Symbol	bucket -> data		1395612						
ANR	1397035	Symbol	zend_hash_next_free_element		1395612						
ANR	1397036	Symbol	accelerator_enabled		1395612						
ANR	1397037	Symbol	ZSTR_VAL		1395612						
ANR	1397038	Symbol	request_info		1395612						
ANR	1397039	Symbol	ZSTR_LEN		1395612						
ANR	1397040	Symbol	counted		1395612						
ANR	1397041	Function	persistent_stream_open_function	1859:0:57026:57980							
ANR	1397042	FunctionDef	"persistent_stream_open_function (const char * filename , zend_file_handle * handle)"		1397041	0					
ANR	1397043	CompoundStatement		1860:0:57117:57980	1397041	0					
ANR	1397044	IfStatement	if ( ZCG ( cache_persistent_script ) )		1397041	0					
ANR	1397045	Condition	ZCG ( cache_persistent_script )	1861:5:57124:57151	1397041	0	True				
ANR	1397046	CallExpression	ZCG ( cache_persistent_script )		1397041	0					
ANR	1397047	Callee	ZCG		1397041	0					
ANR	1397048	Identifier	ZCG		1397041	0					
ANR	1397049	ArgumentList	cache_persistent_script		1397041	1					
ANR	1397050	Argument	cache_persistent_script		1397041	0					
ANR	1397051	Identifier	cache_persistent_script		1397041	0					
ANR	1397052	CompoundStatement		2:35:36:36	1397041	1					
ANR	1397053	IfStatement	if ( ( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline ) )		1397041	0					
ANR	1397054	Condition	( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline )	1863:6:57239:57567	1397041	0	True				
ANR	1397055	OrExpression	( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline )		1397041	0		||			
ANR	1397056	AndExpression	! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL		1397041	0		&&			
ANR	1397057	UnaryOperationExpression	! EG ( current_execute_data )		1397041	0					
ANR	1397058	UnaryOperator	!		1397041	0					
ANR	1397059	CallExpression	EG ( current_execute_data )		1397041	1					
ANR	1397060	Callee	EG		1397041	0					
ANR	1397061	Identifier	EG		1397041	0					
ANR	1397062	ArgumentList	current_execute_data		1397041	1					
ANR	1397063	Argument	current_execute_data		1397041	0					
ANR	1397064	Identifier	current_execute_data		1397041	0					
ANR	1397065	AndExpression	filename == SG ( request_info ) . path_translated && ZCG ( cache_opline ) == NULL		1397041	1		&&			
ANR	1397066	EqualityExpression	filename == SG ( request_info ) . path_translated		1397041	0		==			
ANR	1397067	Identifier	filename		1397041	0					
ANR	1397068	MemberAccess	SG ( request_info ) . path_translated		1397041	1					
ANR	1397069	CallExpression	SG ( request_info )		1397041	0					
ANR	1397070	Callee	SG		1397041	0					
ANR	1397071	Identifier	SG		1397041	0					
ANR	1397072	ArgumentList	request_info		1397041	1					
ANR	1397073	Argument	request_info		1397041	0					
ANR	1397074	Identifier	request_info		1397041	0					
ANR	1397075	Identifier	path_translated		1397041	1					
ANR	1397076	EqualityExpression	ZCG ( cache_opline ) == NULL		1397041	1		==			
ANR	1397077	CallExpression	ZCG ( cache_opline )		1397041	0					
ANR	1397078	Callee	ZCG		1397041	0					
ANR	1397079	Identifier	ZCG		1397041	0					
ANR	1397080	ArgumentList	cache_opline		1397041	1					
ANR	1397081	Argument	cache_opline		1397041	0					
ANR	1397082	Identifier	cache_opline		1397041	0					
ANR	1397083	Identifier	NULL		1397041	1					
ANR	1397084	AndExpression	EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		1397041	1		&&			
ANR	1397085	CallExpression	EG ( current_execute_data )		1397041	0					
ANR	1397086	Callee	EG		1397041	0					
ANR	1397087	Identifier	EG		1397041	0					
ANR	1397088	ArgumentList	current_execute_data		1397041	1					
ANR	1397089	Argument	current_execute_data		1397041	0					
ANR	1397090	Identifier	current_execute_data		1397041	0					
ANR	1397091	AndExpression	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		1397041	1		&&			
ANR	1397092	PtrMemberAccess	EG ( current_execute_data ) -> func		1397041	0					
ANR	1397093	CallExpression	EG ( current_execute_data )		1397041	0					
ANR	1397094	Callee	EG		1397041	0					
ANR	1397095	Identifier	EG		1397041	0					
ANR	1397096	ArgumentList	current_execute_data		1397041	1					
ANR	1397097	Argument	current_execute_data		1397041	0					
ANR	1397098	Identifier	current_execute_data		1397041	0					
ANR	1397099	Identifier	func		1397041	1					
ANR	1397100	AndExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		1397041	1		&&			
ANR	1397101	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		1397041	0					
ANR	1397102	Callee	ZEND_USER_CODE		1397041	0					
ANR	1397103	Identifier	ZEND_USER_CODE		1397041	0					
ANR	1397104	ArgumentList	EG ( current_execute_data ) -> func -> common . type		1397041	1					
ANR	1397105	Argument	EG ( current_execute_data ) -> func -> common . type		1397041	0					
ANR	1397106	MemberAccess	EG ( current_execute_data ) -> func -> common . type		1397041	0					
ANR	1397107	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		1397041	0					
ANR	1397108	PtrMemberAccess	EG ( current_execute_data ) -> func		1397041	0					
ANR	1397109	CallExpression	EG ( current_execute_data )		1397041	0					
ANR	1397110	Callee	EG		1397041	0					
ANR	1397111	Identifier	EG		1397041	0					
ANR	1397112	ArgumentList	current_execute_data		1397041	1					
ANR	1397113	Argument	current_execute_data		1397041	0					
ANR	1397114	Identifier	current_execute_data		1397041	0					
ANR	1397115	Identifier	func		1397041	1					
ANR	1397116	Identifier	common		1397041	1					
ANR	1397117	Identifier	type		1397041	1					
ANR	1397118	EqualityExpression	ZCG ( cache_opline ) == EG ( current_execute_data ) -> opline		1397041	1		==			
ANR	1397119	CallExpression	ZCG ( cache_opline )		1397041	0					
ANR	1397120	Callee	ZCG		1397041	0					
ANR	1397121	Identifier	ZCG		1397041	0					
ANR	1397122	ArgumentList	cache_opline		1397041	1					
ANR	1397123	Argument	cache_opline		1397041	0					
ANR	1397124	Identifier	cache_opline		1397041	0					
ANR	1397125	PtrMemberAccess	EG ( current_execute_data ) -> opline		1397041	1					
ANR	1397126	CallExpression	EG ( current_execute_data )		1397041	0					
ANR	1397127	Callee	EG		1397041	0					
ANR	1397128	Identifier	EG		1397041	0					
ANR	1397129	ArgumentList	current_execute_data		1397041	1					
ANR	1397130	Argument	current_execute_data		1397041	0					
ANR	1397131	Identifier	current_execute_data		1397041	0					
ANR	1397132	Identifier	opline		1397041	1					
ANR	1397133	CompoundStatement		10:63:452:452	1397041	1					
ANR	1397134	ExpressionStatement	handle -> filename = ( char * ) filename	1872:3:57627:57661	1397041	0	True				
ANR	1397135	AssignmentExpression	handle -> filename = ( char * ) filename		1397041	0		=			
ANR	1397136	PtrMemberAccess	handle -> filename		1397041	0					
ANR	1397137	Identifier	handle		1397041	0					
ANR	1397138	Identifier	filename		1397041	1					
ANR	1397139	CastExpression	( char * ) filename		1397041	1					
ANR	1397140	CastTarget	char *		1397041	0					
ANR	1397141	Identifier	filename		1397041	1					
ANR	1397142	ExpressionStatement	handle -> free_filename = 0	1873:3:57666:57691	1397041	1	True				
ANR	1397143	AssignmentExpression	handle -> free_filename = 0		1397041	0		=			
ANR	1397144	PtrMemberAccess	handle -> free_filename		1397041	0					
ANR	1397145	Identifier	handle		1397041	0					
ANR	1397146	Identifier	free_filename		1397041	1					
ANR	1397147	PrimaryExpression	0		1397041	1					
ANR	1397148	ExpressionStatement	handle -> opened_path = zend_string_copy ( ZCG ( cache_persistent_script ) -> full_path )	1874:3:57696:57775	1397041	2	True				
ANR	1397149	AssignmentExpression	handle -> opened_path = zend_string_copy ( ZCG ( cache_persistent_script ) -> full_path )		1397041	0		=			
ANR	1397150	PtrMemberAccess	handle -> opened_path		1397041	0					
ANR	1397151	Identifier	handle		1397041	0					
ANR	1397152	Identifier	opened_path		1397041	1					
ANR	1397153	CallExpression	zend_string_copy ( ZCG ( cache_persistent_script ) -> full_path )		1397041	1					
ANR	1397154	Callee	zend_string_copy		1397041	0					
ANR	1397155	Identifier	zend_string_copy		1397041	0					
ANR	1397156	ArgumentList	ZCG ( cache_persistent_script ) -> full_path		1397041	1					
ANR	1397157	Argument	ZCG ( cache_persistent_script ) -> full_path		1397041	0					
ANR	1397158	PtrMemberAccess	ZCG ( cache_persistent_script ) -> full_path		1397041	0					
ANR	1397159	CallExpression	ZCG ( cache_persistent_script )		1397041	0					
ANR	1397160	Callee	ZCG		1397041	0					
ANR	1397161	Identifier	ZCG		1397041	0					
ANR	1397162	ArgumentList	cache_persistent_script		1397041	1					
ANR	1397163	Argument	cache_persistent_script		1397041	0					
ANR	1397164	Identifier	cache_persistent_script		1397041	0					
ANR	1397165	Identifier	full_path		1397041	1					
ANR	1397166	ExpressionStatement	handle -> type = ZEND_HANDLE_FILENAME	1875:3:57780:57815	1397041	3	True				
ANR	1397167	AssignmentExpression	handle -> type = ZEND_HANDLE_FILENAME		1397041	0		=			
ANR	1397168	PtrMemberAccess	handle -> type		1397041	0					
ANR	1397169	Identifier	handle		1397041	0					
ANR	1397170	Identifier	type		1397041	1					
ANR	1397171	Identifier	ZEND_HANDLE_FILENAME		1397041	1					
ANR	1397172	ReturnStatement	return SUCCESS ;	1876:3:57820:57834	1397041	4	True				
ANR	1397173	Identifier	SUCCESS		1397041	0					
ANR	1397174	ExpressionStatement	ZCG ( cache_opline ) = NULL	1878:2:57842:57866	1397041	1	True				
ANR	1397175	AssignmentExpression	ZCG ( cache_opline ) = NULL		1397041	0		=			
ANR	1397176	CallExpression	ZCG ( cache_opline )		1397041	0					
ANR	1397177	Callee	ZCG		1397041	0					
ANR	1397178	Identifier	ZCG		1397041	0					
ANR	1397179	ArgumentList	cache_opline		1397041	1					
ANR	1397180	Argument	cache_opline		1397041	0					
ANR	1397181	Identifier	cache_opline		1397041	0					
ANR	1397182	Identifier	NULL		1397041	1					
ANR	1397183	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1879:2:57870:57905	1397041	2	True				
ANR	1397184	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		1397041	0		=			
ANR	1397185	CallExpression	ZCG ( cache_persistent_script )		1397041	0					
ANR	1397186	Callee	ZCG		1397041	0					
ANR	1397187	Identifier	ZCG		1397041	0					
ANR	1397188	ArgumentList	cache_persistent_script		1397041	1					
ANR	1397189	Argument	cache_persistent_script		1397041	0					
ANR	1397190	Identifier	cache_persistent_script		1397041	0					
ANR	1397191	Identifier	NULL		1397041	1					
ANR	1397192	ReturnStatement	"return accelerator_orig_zend_stream_open_function ( filename , handle ) ;"	1881:1:57911:57978	1397041	1	True				
ANR	1397193	CallExpression	"accelerator_orig_zend_stream_open_function ( filename , handle )"		1397041	0					
ANR	1397194	Callee	accelerator_orig_zend_stream_open_function		1397041	0					
ANR	1397195	Identifier	accelerator_orig_zend_stream_open_function		1397041	0					
ANR	1397196	ArgumentList	filename		1397041	1					
ANR	1397197	Argument	filename		1397041	0					
ANR	1397198	Identifier	filename		1397041	0					
ANR	1397199	Argument	handle		1397041	1					
ANR	1397200	Identifier	handle		1397041	0					
ANR	1397201	ReturnType	static int		1397041	1					
ANR	1397202	Identifier	persistent_stream_open_function		1397041	2					
ANR	1397203	ParameterList	"const char * filename , zend_file_handle * handle"		1397041	3					
ANR	1397204	Parameter	const char * filename	1859:43:57069:57088	1397041	0	True				
ANR	1397205	ParameterType	const char *		1397041	0					
ANR	1397206	Identifier	filename		1397041	1					
ANR	1397207	Parameter	zend_file_handle * handle	1859:65:57091:57114	1397041	1	True				
ANR	1397208	ParameterType	zend_file_handle *		1397041	0					
ANR	1397209	Identifier	handle		1397041	1					
ANR	1397210	CFGEntryNode	ENTRY		1397041		True				
ANR	1397211	CFGExitNode	EXIT		1397041		True				
ANR	1397212	Symbol	ZCG ( cache_persistent_script ) -> full_path		1397041						
ANR	1397213	Symbol	EG ( current_execute_data ) -> func		1397041						
ANR	1397214	Symbol	EG ( current_execute_data ) -> func -> common . type		1397041						
ANR	1397215	Symbol	current_execute_data		1397041						
ANR	1397216	Symbol	* EG		1397041						
ANR	1397217	Symbol	EG ( current_execute_data ) -> opline		1397041						
ANR	1397218	Symbol	* * EG		1397041						
ANR	1397219	Symbol	cache_persistent_script		1397041						
ANR	1397220	Symbol	handle -> free_filename		1397041						
ANR	1397221	Symbol	accelerator_orig_zend_stream_open_function		1397041						
ANR	1397222	Symbol	SG		1397041						
ANR	1397223	Symbol	* ZCG		1397041						
ANR	1397224	Symbol	handle -> type		1397041						
ANR	1397225	Symbol	EG		1397041						
ANR	1397226	Symbol	NULL		1397041						
ANR	1397227	Symbol	SUCCESS		1397041						
ANR	1397228	Symbol	SG ( request_info ) . path_translated		1397041						
ANR	1397229	Symbol	handle -> filename		1397041						
ANR	1397230	Symbol	* handle		1397041						
ANR	1397231	Symbol	handle -> opened_path		1397041						
ANR	1397232	Symbol	handle		1397041						
ANR	1397233	Symbol	zend_string_copy		1397041						
ANR	1397234	Symbol	* EG ( current_execute_data ) -> func		1397041						
ANR	1397235	Symbol	cache_opline		1397041						
ANR	1397236	Symbol	filename		1397041						
ANR	1397237	Symbol	EG ( current_execute_data ) -> func -> common		1397041						
ANR	1397238	Symbol	ZEND_HANDLE_FILENAME		1397041						
ANR	1397239	Symbol	request_info		1397041						
ANR	1397240	Symbol	ZEND_USER_CODE		1397041						
ANR	1397241	Symbol	ZCG		1397041						
ANR	1397242	Function	persistent_zend_resolve_path	1885:0:58043:60897							
ANR	1397243	FunctionDef	"persistent_zend_resolve_path (const char * filename , int filename_len)"		1397242	0					
ANR	1397244	CompoundStatement		1886:0:58132:60897	1397242	0					
ANR	1397245	IfStatement	if ( ZCG ( enabled ) && accel_startup_ok && ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress ) )		1397242	0					
ANR	1397246	Condition	ZCG ( enabled ) && accel_startup_ok && ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress )	1887:5:58139:58257	1397242	0	True				
ANR	1397247	AndExpression	ZCG ( enabled ) && accel_startup_ok && ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress )		1397242	0		&&			
ANR	1397248	CallExpression	ZCG ( enabled )		1397242	0					
ANR	1397249	Callee	ZCG		1397242	0					
ANR	1397250	Identifier	ZCG		1397242	0					
ANR	1397251	ArgumentList	enabled		1397242	1					
ANR	1397252	Argument	enabled		1397242	0					
ANR	1397253	Identifier	enabled		1397242	0					
ANR	1397254	AndExpression	accel_startup_ok && ( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress )		1397242	1		&&			
ANR	1397255	Identifier	accel_startup_ok		1397242	0					
ANR	1397256	AndExpression	( ZCG ( counted ) || ZCSG ( accelerator_enabled ) ) && ! ZCSG ( restart_in_progress )		1397242	1		&&			
ANR	1397257	OrExpression	ZCG ( counted ) || ZCSG ( accelerator_enabled )		1397242	0		||			
ANR	1397258	CallExpression	ZCG ( counted )		1397242	0					
ANR	1397259	Callee	ZCG		1397242	0					
ANR	1397260	Identifier	ZCG		1397242	0					
ANR	1397261	ArgumentList	counted		1397242	1					
ANR	1397262	Argument	counted		1397242	0					
ANR	1397263	Identifier	counted		1397242	0					
ANR	1397264	CallExpression	ZCSG ( accelerator_enabled )		1397242	1					
ANR	1397265	Callee	ZCSG		1397242	0					
ANR	1397266	Identifier	ZCSG		1397242	0					
ANR	1397267	ArgumentList	accelerator_enabled		1397242	1					
ANR	1397268	Argument	accelerator_enabled		1397242	0					
ANR	1397269	Identifier	accelerator_enabled		1397242	0					
ANR	1397270	UnaryOperationExpression	! ZCSG ( restart_in_progress )		1397242	1					
ANR	1397271	UnaryOperator	!		1397242	0					
ANR	1397272	CallExpression	ZCSG ( restart_in_progress )		1397242	1					
ANR	1397273	Callee	ZCSG		1397242	0					
ANR	1397274	Identifier	ZCSG		1397242	0					
ANR	1397275	ArgumentList	restart_in_progress		1397242	1					
ANR	1397276	Argument	restart_in_progress		1397242	0					
ANR	1397277	Identifier	restart_in_progress		1397242	0					
ANR	1397278	CompoundStatement		4:33:127:127	1397242	1					
ANR	1397279	IfStatement	if ( ( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE ) ) )		1397242	0					
ANR	1397280	Condition	( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE ) )	1892:6:58346:58812	1397242	0	True				
ANR	1397281	OrExpression	( ! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated ) || ( EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE ) )		1397242	0		||			
ANR	1397282	AndExpression	! EG ( current_execute_data ) && filename == SG ( request_info ) . path_translated		1397242	0		&&			
ANR	1397283	UnaryOperationExpression	! EG ( current_execute_data )		1397242	0					
ANR	1397284	UnaryOperator	!		1397242	0					
ANR	1397285	CallExpression	EG ( current_execute_data )		1397242	1					
ANR	1397286	Callee	EG		1397242	0					
ANR	1397287	Identifier	EG		1397242	0					
ANR	1397288	ArgumentList	current_execute_data		1397242	1					
ANR	1397289	Argument	current_execute_data		1397242	0					
ANR	1397290	Identifier	current_execute_data		1397242	0					
ANR	1397291	EqualityExpression	filename == SG ( request_info ) . path_translated		1397242	1		==			
ANR	1397292	Identifier	filename		1397242	0					
ANR	1397293	MemberAccess	SG ( request_info ) . path_translated		1397242	1					
ANR	1397294	CallExpression	SG ( request_info )		1397242	0					
ANR	1397295	Callee	SG		1397242	0					
ANR	1397296	Identifier	SG		1397242	0					
ANR	1397297	ArgumentList	request_info		1397242	1					
ANR	1397298	Argument	request_info		1397242	0					
ANR	1397299	Identifier	request_info		1397242	0					
ANR	1397300	Identifier	path_translated		1397242	1					
ANR	1397301	AndExpression	EG ( current_execute_data ) && EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE )		1397242	1		&&			
ANR	1397302	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397303	Callee	EG		1397242	0					
ANR	1397304	Identifier	EG		1397242	0					
ANR	1397305	ArgumentList	current_execute_data		1397242	1					
ANR	1397306	Argument	current_execute_data		1397242	0					
ANR	1397307	Identifier	current_execute_data		1397242	0					
ANR	1397308	AndExpression	EG ( current_execute_data ) -> func && ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE )		1397242	1		&&			
ANR	1397309	PtrMemberAccess	EG ( current_execute_data ) -> func		1397242	0					
ANR	1397310	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397311	Callee	EG		1397242	0					
ANR	1397312	Identifier	EG		1397242	0					
ANR	1397313	ArgumentList	current_execute_data		1397242	1					
ANR	1397314	Argument	current_execute_data		1397242	0					
ANR	1397315	Identifier	current_execute_data		1397242	0					
ANR	1397316	Identifier	func		1397242	1					
ANR	1397317	AndExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type ) && EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE )		1397242	1		&&			
ANR	1397318	CallExpression	ZEND_USER_CODE ( EG ( current_execute_data ) -> func -> common . type )		1397242	0					
ANR	1397319	Callee	ZEND_USER_CODE		1397242	0					
ANR	1397320	Identifier	ZEND_USER_CODE		1397242	0					
ANR	1397321	ArgumentList	EG ( current_execute_data ) -> func -> common . type		1397242	1					
ANR	1397322	Argument	EG ( current_execute_data ) -> func -> common . type		1397242	0					
ANR	1397323	MemberAccess	EG ( current_execute_data ) -> func -> common . type		1397242	0					
ANR	1397324	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		1397242	0					
ANR	1397325	PtrMemberAccess	EG ( current_execute_data ) -> func		1397242	0					
ANR	1397326	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397327	Callee	EG		1397242	0					
ANR	1397328	Identifier	EG		1397242	0					
ANR	1397329	ArgumentList	current_execute_data		1397242	1					
ANR	1397330	Argument	current_execute_data		1397242	0					
ANR	1397331	Identifier	current_execute_data		1397242	0					
ANR	1397332	Identifier	func		1397242	1					
ANR	1397333	Identifier	common		1397242	1					
ANR	1397334	Identifier	type		1397242	1					
ANR	1397335	AndExpression	EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL && ( EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE )		1397242	1		&&			
ANR	1397336	EqualityExpression	EG ( current_execute_data ) -> opline -> opcode == ZEND_INCLUDE_OR_EVAL		1397242	0		==			
ANR	1397337	PtrMemberAccess	EG ( current_execute_data ) -> opline -> opcode		1397242	0					
ANR	1397338	PtrMemberAccess	EG ( current_execute_data ) -> opline		1397242	0					
ANR	1397339	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397340	Callee	EG		1397242	0					
ANR	1397341	Identifier	EG		1397242	0					
ANR	1397342	ArgumentList	current_execute_data		1397242	1					
ANR	1397343	Argument	current_execute_data		1397242	0					
ANR	1397344	Identifier	current_execute_data		1397242	0					
ANR	1397345	Identifier	opline		1397242	1					
ANR	1397346	Identifier	opcode		1397242	1					
ANR	1397347	Identifier	ZEND_INCLUDE_OR_EVAL		1397242	1					
ANR	1397348	OrExpression	EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE || EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE		1397242	1		||			
ANR	1397349	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value == ZEND_INCLUDE_ONCE		1397242	0		==			
ANR	1397350	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		1397242	0					
ANR	1397351	PtrMemberAccess	EG ( current_execute_data ) -> opline		1397242	0					
ANR	1397352	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397353	Callee	EG		1397242	0					
ANR	1397354	Identifier	EG		1397242	0					
ANR	1397355	ArgumentList	current_execute_data		1397242	1					
ANR	1397356	Argument	current_execute_data		1397242	0					
ANR	1397357	Identifier	current_execute_data		1397242	0					
ANR	1397358	Identifier	opline		1397242	1					
ANR	1397359	Identifier	extended_value		1397242	1					
ANR	1397360	Identifier	ZEND_INCLUDE_ONCE		1397242	1					
ANR	1397361	EqualityExpression	EG ( current_execute_data ) -> opline -> extended_value == ZEND_REQUIRE_ONCE		1397242	1		==			
ANR	1397362	PtrMemberAccess	EG ( current_execute_data ) -> opline -> extended_value		1397242	0					
ANR	1397363	PtrMemberAccess	EG ( current_execute_data ) -> opline		1397242	0					
ANR	1397364	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397365	Callee	EG		1397242	0					
ANR	1397366	Identifier	EG		1397242	0					
ANR	1397367	ArgumentList	current_execute_data		1397242	1					
ANR	1397368	Argument	current_execute_data		1397242	0					
ANR	1397369	Identifier	current_execute_data		1397242	0					
ANR	1397370	Identifier	opline		1397242	1					
ANR	1397371	Identifier	extended_value		1397242	1					
ANR	1397372	Identifier	ZEND_REQUIRE_ONCE		1397242	1					
ANR	1397373	CompoundStatement		19:3:789:805	1397242	1					
ANR	1397374	IdentifierDeclStatement	zend_string * resolved_path ;	1902:3:58872:58898	1397242	0	True				
ANR	1397375	IdentifierDecl	* resolved_path		1397242	0					
ANR	1397376	IdentifierDeclType	zend_string *		1397242	0					
ANR	1397377	Identifier	resolved_path		1397242	1					
ANR	1397378	IdentifierDeclStatement	int key_length ;	1903:3:58903:58917	1397242	1	True				
ANR	1397379	IdentifierDecl	key_length		1397242	0					
ANR	1397380	IdentifierDeclType	int		1397242	0					
ANR	1397381	Identifier	key_length		1397242	1					
ANR	1397382	IdentifierDeclStatement	char * key = NULL ;	1904:3:58922:58938	1397242	2	True				
ANR	1397383	IdentifierDecl	* key = NULL		1397242	0					
ANR	1397384	IdentifierDeclType	char *		1397242	0					
ANR	1397385	Identifier	key		1397242	1					
ANR	1397386	AssignmentExpression	* key = NULL		1397242	2		=			
ANR	1397387	Identifier	NULL		1397242	0					
ANR	1397388	Identifier	NULL		1397242	1					
ANR	1397389	IfStatement	if ( ! ZCG ( accel_directives ) . revalidate_path )		1397242	3					
ANR	1397390	Condition	! ZCG ( accel_directives ) . revalidate_path	1906:7:58951:58988	1397242	0	True				
ANR	1397391	UnaryOperationExpression	! ZCG ( accel_directives ) . revalidate_path		1397242	0					
ANR	1397392	UnaryOperator	!		1397242	0					
ANR	1397393	MemberAccess	ZCG ( accel_directives ) . revalidate_path		1397242	1					
ANR	1397394	CallExpression	ZCG ( accel_directives )		1397242	0					
ANR	1397395	Callee	ZCG		1397242	0					
ANR	1397396	Identifier	ZCG		1397242	0					
ANR	1397397	ArgumentList	accel_directives		1397242	1					
ANR	1397398	Argument	accel_directives		1397242	0					
ANR	1397399	Identifier	accel_directives		1397242	0					
ANR	1397400	Identifier	revalidate_path		1397242	1					
ANR	1397401	CompoundStatement		21:47:858:858	1397242	1					
ANR	1397402	ExpressionStatement	"key = accel_make_persistent_key ( filename , filename_len , & key_length )"	1908:4:59033:59101	1397242	0	True				
ANR	1397403	AssignmentExpression	"key = accel_make_persistent_key ( filename , filename_len , & key_length )"		1397242	0		=			
ANR	1397404	Identifier	key		1397242	0					
ANR	1397405	CallExpression	"accel_make_persistent_key ( filename , filename_len , & key_length )"		1397242	1					
ANR	1397406	Callee	accel_make_persistent_key		1397242	0					
ANR	1397407	Identifier	accel_make_persistent_key		1397242	0					
ANR	1397408	ArgumentList	filename		1397242	1					
ANR	1397409	Argument	filename		1397242	0					
ANR	1397410	Identifier	filename		1397242	0					
ANR	1397411	Argument	filename_len		1397242	1					
ANR	1397412	Identifier	filename_len		1397242	0					
ANR	1397413	Argument	& key_length		1397242	2					
ANR	1397414	UnaryOperationExpression	& key_length		1397242	0					
ANR	1397415	UnaryOperator	&		1397242	0					
ANR	1397416	Identifier	key_length		1397242	1					
ANR	1397417	IfStatement	if ( key )		1397242	1					
ANR	1397418	Condition	key	1909:8:59111:59113	1397242	0	True				
ANR	1397419	Identifier	key		1397242	0					
ANR	1397420	CompoundStatement		25:5:990:1082	1397242	1					
ANR	1397421	IdentifierDeclStatement	"zend_accel_hash_entry * bucket = zend_accel_hash_str_find_entry ( & ZCSG ( hash ) , key , key_length ) ;"	1910:5:59123:59215	1397242	0	True				
ANR	1397422	IdentifierDecl	"* bucket = zend_accel_hash_str_find_entry ( & ZCSG ( hash ) , key , key_length )"		1397242	0					
ANR	1397423	IdentifierDeclType	zend_accel_hash_entry *		1397242	0					
ANR	1397424	Identifier	bucket		1397242	1					
ANR	1397425	AssignmentExpression	"* bucket = zend_accel_hash_str_find_entry ( & ZCSG ( hash ) , key , key_length )"		1397242	2		=			
ANR	1397426	Identifier	bucket		1397242	0					
ANR	1397427	CallExpression	"zend_accel_hash_str_find_entry ( & ZCSG ( hash ) , key , key_length )"		1397242	1					
ANR	1397428	Callee	zend_accel_hash_str_find_entry		1397242	0					
ANR	1397429	Identifier	zend_accel_hash_str_find_entry		1397242	0					
ANR	1397430	ArgumentList	& ZCSG ( hash )		1397242	1					
ANR	1397431	Argument	& ZCSG ( hash )		1397242	0					
ANR	1397432	UnaryOperationExpression	& ZCSG ( hash )		1397242	0					
ANR	1397433	UnaryOperator	&		1397242	0					
ANR	1397434	CallExpression	ZCSG ( hash )		1397242	1					
ANR	1397435	Callee	ZCSG		1397242	0					
ANR	1397436	Identifier	ZCSG		1397242	0					
ANR	1397437	ArgumentList	hash		1397242	1					
ANR	1397438	Argument	hash		1397242	0					
ANR	1397439	Identifier	hash		1397242	0					
ANR	1397440	Argument	key		1397242	1					
ANR	1397441	Identifier	key		1397242	0					
ANR	1397442	Argument	key_length		1397242	2					
ANR	1397443	Identifier	key_length		1397242	0					
ANR	1397444	IfStatement	if ( bucket != NULL )		1397242	1					
ANR	1397445	Condition	bucket != NULL	1911:9:59226:59239	1397242	0	True				
ANR	1397446	EqualityExpression	bucket != NULL		1397242	0		!=			
ANR	1397447	Identifier	bucket		1397242	0					
ANR	1397448	Identifier	NULL		1397242	1					
ANR	1397449	CompoundStatement		27:6:1117:1199	1397242	1					
ANR	1397450	IdentifierDeclStatement	zend_persistent_script * persistent_script = ( zend_persistent_script * ) bucket -> data ;	1912:6:59250:59332	1397242	0	True				
ANR	1397451	IdentifierDecl	* persistent_script = ( zend_persistent_script * ) bucket -> data		1397242	0					
ANR	1397452	IdentifierDeclType	zend_persistent_script *		1397242	0					
ANR	1397453	Identifier	persistent_script		1397242	1					
ANR	1397454	AssignmentExpression	* persistent_script = ( zend_persistent_script * ) bucket -> data		1397242	2		=			
ANR	1397455	Identifier	persistent_script		1397242	0					
ANR	1397456	CastExpression	( zend_persistent_script * ) bucket -> data		1397242	1					
ANR	1397457	CastTarget	zend_persistent_script *		1397242	0					
ANR	1397458	PtrMemberAccess	bucket -> data		1397242	1					
ANR	1397459	Identifier	bucket		1397242	0					
ANR	1397460	Identifier	data		1397242	1					
ANR	1397461	IfStatement	if ( ! persistent_script -> corrupted )		1397242	1					
ANR	1397462	Condition	! persistent_script -> corrupted	1913:10:59344:59372	1397242	0	True				
ANR	1397463	UnaryOperationExpression	! persistent_script -> corrupted		1397242	0					
ANR	1397464	UnaryOperator	!		1397242	0					
ANR	1397465	PtrMemberAccess	persistent_script -> corrupted		1397242	1					
ANR	1397466	Identifier	persistent_script		1397242	0					
ANR	1397467	Identifier	corrupted		1397242	1					
ANR	1397468	CompoundStatement		28:41:1242:1242	1397242	1					
ANR	1397469	ExpressionStatement	ZCG ( cache_opline ) = EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL	1914:7:59384:59470	1397242	0	True				
ANR	1397470	AssignmentExpression	ZCG ( cache_opline ) = EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL		1397242	0		=			
ANR	1397471	CallExpression	ZCG ( cache_opline )		1397242	0					
ANR	1397472	Callee	ZCG		1397242	0					
ANR	1397473	Identifier	ZCG		1397242	0					
ANR	1397474	ArgumentList	cache_opline		1397242	1					
ANR	1397475	Argument	cache_opline		1397242	0					
ANR	1397476	Identifier	cache_opline		1397242	0					
ANR	1397477	ConditionalExpression	EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL		1397242	1					
ANR	1397478	Condition	EG ( current_execute_data )		1397242	0					
ANR	1397479	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397480	Callee	EG		1397242	0					
ANR	1397481	Identifier	EG		1397242	0					
ANR	1397482	ArgumentList	current_execute_data		1397242	1					
ANR	1397483	Argument	current_execute_data		1397242	0					
ANR	1397484	Identifier	current_execute_data		1397242	0					
ANR	1397485	PtrMemberAccess	EG ( current_execute_data ) -> opline		1397242	1					
ANR	1397486	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397487	Callee	EG		1397242	0					
ANR	1397488	Identifier	EG		1397242	0					
ANR	1397489	ArgumentList	current_execute_data		1397242	1					
ANR	1397490	Argument	current_execute_data		1397242	0					
ANR	1397491	Identifier	current_execute_data		1397242	0					
ANR	1397492	Identifier	opline		1397242	1					
ANR	1397493	Identifier	NULL		1397242	2					
ANR	1397494	ExpressionStatement	ZCG ( cache_persistent_script ) = persistent_script	1915:7:59479:59527	1397242	1	True				
ANR	1397495	AssignmentExpression	ZCG ( cache_persistent_script ) = persistent_script		1397242	0		=			
ANR	1397496	CallExpression	ZCG ( cache_persistent_script )		1397242	0					
ANR	1397497	Callee	ZCG		1397242	0					
ANR	1397498	Identifier	ZCG		1397242	0					
ANR	1397499	ArgumentList	cache_persistent_script		1397242	1					
ANR	1397500	Argument	cache_persistent_script		1397242	0					
ANR	1397501	Identifier	cache_persistent_script		1397242	0					
ANR	1397502	Identifier	persistent_script		1397242	1					
ANR	1397503	ReturnStatement	return zend_string_copy ( persistent_script -> full_path ) ;	1916:7:59536:59589	1397242	2	True				
ANR	1397504	CallExpression	zend_string_copy ( persistent_script -> full_path )		1397242	0					
ANR	1397505	Callee	zend_string_copy		1397242	0					
ANR	1397506	Identifier	zend_string_copy		1397242	0					
ANR	1397507	ArgumentList	persistent_script -> full_path		1397242	1					
ANR	1397508	Argument	persistent_script -> full_path		1397242	0					
ANR	1397509	PtrMemberAccess	persistent_script -> full_path		1397242	0					
ANR	1397510	Identifier	persistent_script		1397242	0					
ANR	1397511	Identifier	full_path		1397242	1					
ANR	1397512	ElseStatement	else		1397242	0					
ANR	1397513	CompoundStatement		34:11:1484:1484	1397242	0					
ANR	1397514	ExpressionStatement	ZCG ( cache_opline ) = NULL	1920:5:59624:59648	1397242	0	True				
ANR	1397515	AssignmentExpression	ZCG ( cache_opline ) = NULL		1397242	0		=			
ANR	1397516	CallExpression	ZCG ( cache_opline )		1397242	0					
ANR	1397517	Callee	ZCG		1397242	0					
ANR	1397518	Identifier	ZCG		1397242	0					
ANR	1397519	ArgumentList	cache_opline		1397242	1					
ANR	1397520	Argument	cache_opline		1397242	0					
ANR	1397521	Identifier	cache_opline		1397242	0					
ANR	1397522	Identifier	NULL		1397242	1					
ANR	1397523	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1921:5:59655:59690	1397242	1	True				
ANR	1397524	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		1397242	0		=			
ANR	1397525	CallExpression	ZCG ( cache_persistent_script )		1397242	0					
ANR	1397526	Callee	ZCG		1397242	0					
ANR	1397527	Identifier	ZCG		1397242	0					
ANR	1397528	ArgumentList	cache_persistent_script		1397242	1					
ANR	1397529	Argument	cache_persistent_script		1397242	0					
ANR	1397530	Identifier	cache_persistent_script		1397242	0					
ANR	1397531	Identifier	NULL		1397242	1					
ANR	1397532	ReturnStatement	"return accelerator_orig_zend_resolve_path ( filename , filename_len ) ;"	1922:5:59697:59762	1397242	2	True				
ANR	1397533	CallExpression	"accelerator_orig_zend_resolve_path ( filename , filename_len )"		1397242	0					
ANR	1397534	Callee	accelerator_orig_zend_resolve_path		1397242	0					
ANR	1397535	Identifier	accelerator_orig_zend_resolve_path		1397242	0					
ANR	1397536	ArgumentList	filename		1397242	1					
ANR	1397537	Argument	filename		1397242	0					
ANR	1397538	Identifier	filename		1397242	0					
ANR	1397539	Argument	filename_len		1397242	1					
ANR	1397540	Identifier	filename_len		1397242	0					
ANR	1397541	ExpressionStatement	"resolved_path = accelerator_orig_zend_resolve_path ( filename , filename_len )"	1927:3:59812:59886	1397242	4	True				
ANR	1397542	AssignmentExpression	"resolved_path = accelerator_orig_zend_resolve_path ( filename , filename_len )"		1397242	0		=			
ANR	1397543	Identifier	resolved_path		1397242	0					
ANR	1397544	CallExpression	"accelerator_orig_zend_resolve_path ( filename , filename_len )"		1397242	1					
ANR	1397545	Callee	accelerator_orig_zend_resolve_path		1397242	0					
ANR	1397546	Identifier	accelerator_orig_zend_resolve_path		1397242	0					
ANR	1397547	ArgumentList	filename		1397242	1					
ANR	1397548	Argument	filename		1397242	0					
ANR	1397549	Identifier	filename		1397242	0					
ANR	1397550	Argument	filename_len		1397242	1					
ANR	1397551	Identifier	filename_len		1397242	0					
ANR	1397552	IfStatement	if ( resolved_path )		1397242	5					
ANR	1397553	Condition	resolved_path	1929:7:59896:59908	1397242	0	True				
ANR	1397554	Identifier	resolved_path		1397242	0					
ANR	1397555	CompoundStatement		46:4:1814:1900	1397242	1					
ANR	1397556	IdentifierDeclStatement	"zend_accel_hash_entry * bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , resolved_path ) ;"	1931:4:59947:60033	1397242	0	True				
ANR	1397557	IdentifierDecl	"* bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , resolved_path )"		1397242	0					
ANR	1397558	IdentifierDeclType	zend_accel_hash_entry *		1397242	0					
ANR	1397559	Identifier	bucket		1397242	1					
ANR	1397560	AssignmentExpression	"* bucket = zend_accel_hash_find_entry ( & ZCSG ( hash ) , resolved_path )"		1397242	2		=			
ANR	1397561	Identifier	bucket		1397242	0					
ANR	1397562	CallExpression	"zend_accel_hash_find_entry ( & ZCSG ( hash ) , resolved_path )"		1397242	1					
ANR	1397563	Callee	zend_accel_hash_find_entry		1397242	0					
ANR	1397564	Identifier	zend_accel_hash_find_entry		1397242	0					
ANR	1397565	ArgumentList	& ZCSG ( hash )		1397242	1					
ANR	1397566	Argument	& ZCSG ( hash )		1397242	0					
ANR	1397567	UnaryOperationExpression	& ZCSG ( hash )		1397242	0					
ANR	1397568	UnaryOperator	&		1397242	0					
ANR	1397569	CallExpression	ZCSG ( hash )		1397242	1					
ANR	1397570	Callee	ZCSG		1397242	0					
ANR	1397571	Identifier	ZCSG		1397242	0					
ANR	1397572	ArgumentList	hash		1397242	1					
ANR	1397573	Argument	hash		1397242	0					
ANR	1397574	Identifier	hash		1397242	0					
ANR	1397575	Argument	resolved_path		1397242	1					
ANR	1397576	Identifier	resolved_path		1397242	0					
ANR	1397577	IfStatement	if ( bucket )		1397242	1					
ANR	1397578	Condition	bucket	1932:8:60043:60048	1397242	0	True				
ANR	1397579	Identifier	bucket		1397242	0					
ANR	1397580	CompoundStatement		48:5:1925:2007	1397242	1					
ANR	1397581	IdentifierDeclStatement	zend_persistent_script * persistent_script = ( zend_persistent_script * ) bucket -> data ;	1933:5:60058:60140	1397242	0	True				
ANR	1397582	IdentifierDecl	* persistent_script = ( zend_persistent_script * ) bucket -> data		1397242	0					
ANR	1397583	IdentifierDeclType	zend_persistent_script *		1397242	0					
ANR	1397584	Identifier	persistent_script		1397242	1					
ANR	1397585	AssignmentExpression	* persistent_script = ( zend_persistent_script * ) bucket -> data		1397242	2		=			
ANR	1397586	Identifier	persistent_script		1397242	0					
ANR	1397587	CastExpression	( zend_persistent_script * ) bucket -> data		1397242	1					
ANR	1397588	CastTarget	zend_persistent_script *		1397242	0					
ANR	1397589	PtrMemberAccess	bucket -> data		1397242	1					
ANR	1397590	Identifier	bucket		1397242	0					
ANR	1397591	Identifier	data		1397242	1					
ANR	1397592	IfStatement	if ( ! persistent_script -> corrupted )		1397242	1					
ANR	1397593	Condition	! persistent_script -> corrupted	1934:9:60151:60179	1397242	0	True				
ANR	1397594	UnaryOperationExpression	! persistent_script -> corrupted		1397242	0					
ANR	1397595	UnaryOperator	!		1397242	0					
ANR	1397596	PtrMemberAccess	persistent_script -> corrupted		1397242	1					
ANR	1397597	Identifier	persistent_script		1397242	0					
ANR	1397598	Identifier	corrupted		1397242	1					
ANR	1397599	CompoundStatement		49:40:2049:2049	1397242	1					
ANR	1397600	IfStatement	if ( key )		1397242	0					
ANR	1397601	Condition	key	1935:10:60194:60196	1397242	0	True				
ANR	1397602	Identifier	key		1397242	0					
ANR	1397603	CompoundStatement		50:15:2066:2066	1397242	1					
ANR	1397604	ExpressionStatement	SHM_UNPROTECT ( )	1937:7:60259:60274	1397242	0	True				
ANR	1397605	CallExpression	SHM_UNPROTECT ( )		1397242	0					
ANR	1397606	Callee	SHM_UNPROTECT		1397242	0					
ANR	1397607	Identifier	SHM_UNPROTECT		1397242	0					
ANR	1397608	ArgumentList			1397242	1					
ANR	1397609	ExpressionStatement	zend_shared_alloc_lock ( )	1938:7:60283:60307	1397242	1	True				
ANR	1397610	CallExpression	zend_shared_alloc_lock ( )		1397242	0					
ANR	1397611	Callee	zend_shared_alloc_lock		1397242	0					
ANR	1397612	Identifier	zend_shared_alloc_lock		1397242	0					
ANR	1397613	ArgumentList			1397242	1					
ANR	1397614	ExpressionStatement	"zend_accel_add_key ( key , key_length , bucket )"	1939:7:60316:60359	1397242	2	True				
ANR	1397615	CallExpression	"zend_accel_add_key ( key , key_length , bucket )"		1397242	0					
ANR	1397616	Callee	zend_accel_add_key		1397242	0					
ANR	1397617	Identifier	zend_accel_add_key		1397242	0					
ANR	1397618	ArgumentList	key		1397242	1					
ANR	1397619	Argument	key		1397242	0					
ANR	1397620	Identifier	key		1397242	0					
ANR	1397621	Argument	key_length		1397242	1					
ANR	1397622	Identifier	key_length		1397242	0					
ANR	1397623	Argument	bucket		1397242	2					
ANR	1397624	Identifier	bucket		1397242	0					
ANR	1397625	ExpressionStatement	zend_shared_alloc_unlock ( )	1940:7:60368:60394	1397242	3	True				
ANR	1397626	CallExpression	zend_shared_alloc_unlock ( )		1397242	0					
ANR	1397627	Callee	zend_shared_alloc_unlock		1397242	0					
ANR	1397628	Identifier	zend_shared_alloc_unlock		1397242	0					
ANR	1397629	ArgumentList			1397242	1					
ANR	1397630	ExpressionStatement	SHM_PROTECT ( )	1941:7:60403:60416	1397242	4	True				
ANR	1397631	CallExpression	SHM_PROTECT ( )		1397242	0					
ANR	1397632	Callee	SHM_PROTECT		1397242	0					
ANR	1397633	Identifier	SHM_PROTECT		1397242	0					
ANR	1397634	ArgumentList			1397242	1					
ANR	1397635	ElseStatement	else		1397242	0					
ANR	1397636	CompoundStatement		57:13:2298:2298	1397242	0					
ANR	1397637	ExpressionStatement	ZCG ( key_len ) = 0	1943:7:60440:60456	1397242	0	True				
ANR	1397638	AssignmentExpression	ZCG ( key_len ) = 0		1397242	0		=			
ANR	1397639	CallExpression	ZCG ( key_len )		1397242	0					
ANR	1397640	Callee	ZCG		1397242	0					
ANR	1397641	Identifier	ZCG		1397242	0					
ANR	1397642	ArgumentList	key_len		1397242	1					
ANR	1397643	Argument	key_len		1397242	0					
ANR	1397644	Identifier	key_len		1397242	0					
ANR	1397645	PrimaryExpression	0		1397242	1					
ANR	1397646	ExpressionStatement	ZCG ( cache_opline ) = EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL	1945:6:60472:60558	1397242	1	True				
ANR	1397647	AssignmentExpression	ZCG ( cache_opline ) = EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL		1397242	0		=			
ANR	1397648	CallExpression	ZCG ( cache_opline )		1397242	0					
ANR	1397649	Callee	ZCG		1397242	0					
ANR	1397650	Identifier	ZCG		1397242	0					
ANR	1397651	ArgumentList	cache_opline		1397242	1					
ANR	1397652	Argument	cache_opline		1397242	0					
ANR	1397653	Identifier	cache_opline		1397242	0					
ANR	1397654	ConditionalExpression	EG ( current_execute_data ) ? EG ( current_execute_data ) -> opline : NULL		1397242	1					
ANR	1397655	Condition	EG ( current_execute_data )		1397242	0					
ANR	1397656	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397657	Callee	EG		1397242	0					
ANR	1397658	Identifier	EG		1397242	0					
ANR	1397659	ArgumentList	current_execute_data		1397242	1					
ANR	1397660	Argument	current_execute_data		1397242	0					
ANR	1397661	Identifier	current_execute_data		1397242	0					
ANR	1397662	PtrMemberAccess	EG ( current_execute_data ) -> opline		1397242	1					
ANR	1397663	CallExpression	EG ( current_execute_data )		1397242	0					
ANR	1397664	Callee	EG		1397242	0					
ANR	1397665	Identifier	EG		1397242	0					
ANR	1397666	ArgumentList	current_execute_data		1397242	1					
ANR	1397667	Argument	current_execute_data		1397242	0					
ANR	1397668	Identifier	current_execute_data		1397242	0					
ANR	1397669	Identifier	opline		1397242	1					
ANR	1397670	Identifier	NULL		1397242	2					
ANR	1397671	ExpressionStatement	ZCG ( cache_persistent_script ) = persistent_script	1946:6:60566:60614	1397242	2	True				
ANR	1397672	AssignmentExpression	ZCG ( cache_persistent_script ) = persistent_script		1397242	0		=			
ANR	1397673	CallExpression	ZCG ( cache_persistent_script )		1397242	0					
ANR	1397674	Callee	ZCG		1397242	0					
ANR	1397675	Identifier	ZCG		1397242	0					
ANR	1397676	ArgumentList	cache_persistent_script		1397242	1					
ANR	1397677	Argument	cache_persistent_script		1397242	0					
ANR	1397678	Identifier	cache_persistent_script		1397242	0					
ANR	1397679	Identifier	persistent_script		1397242	1					
ANR	1397680	ReturnStatement	return resolved_path ;	1947:6:60622:60642	1397242	3	True				
ANR	1397681	Identifier	resolved_path		1397242	0					
ANR	1397682	ExpressionStatement	ZCG ( cache_opline ) = NULL	1952:3:60666:60690	1397242	6	True				
ANR	1397683	AssignmentExpression	ZCG ( cache_opline ) = NULL		1397242	0		=			
ANR	1397684	CallExpression	ZCG ( cache_opline )		1397242	0					
ANR	1397685	Callee	ZCG		1397242	0					
ANR	1397686	Identifier	ZCG		1397242	0					
ANR	1397687	ArgumentList	cache_opline		1397242	1					
ANR	1397688	Argument	cache_opline		1397242	0					
ANR	1397689	Identifier	cache_opline		1397242	0					
ANR	1397690	Identifier	NULL		1397242	1					
ANR	1397691	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1953:3:60695:60730	1397242	7	True				
ANR	1397692	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		1397242	0		=			
ANR	1397693	CallExpression	ZCG ( cache_persistent_script )		1397242	0					
ANR	1397694	Callee	ZCG		1397242	0					
ANR	1397695	Identifier	ZCG		1397242	0					
ANR	1397696	ArgumentList	cache_persistent_script		1397242	1					
ANR	1397697	Argument	cache_persistent_script		1397242	0					
ANR	1397698	Identifier	cache_persistent_script		1397242	0					
ANR	1397699	Identifier	NULL		1397242	1					
ANR	1397700	ReturnStatement	return resolved_path ;	1954:3:60735:60755	1397242	8	True				
ANR	1397701	Identifier	resolved_path		1397242	0					
ANR	1397702	ExpressionStatement	ZCG ( cache_opline ) = NULL	1957:1:60765:60789	1397242	1	True				
ANR	1397703	AssignmentExpression	ZCG ( cache_opline ) = NULL		1397242	0		=			
ANR	1397704	CallExpression	ZCG ( cache_opline )		1397242	0					
ANR	1397705	Callee	ZCG		1397242	0					
ANR	1397706	Identifier	ZCG		1397242	0					
ANR	1397707	ArgumentList	cache_opline		1397242	1					
ANR	1397708	Argument	cache_opline		1397242	0					
ANR	1397709	Identifier	cache_opline		1397242	0					
ANR	1397710	Identifier	NULL		1397242	1					
ANR	1397711	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	1958:1:60792:60827	1397242	2	True				
ANR	1397712	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		1397242	0		=			
ANR	1397713	CallExpression	ZCG ( cache_persistent_script )		1397242	0					
ANR	1397714	Callee	ZCG		1397242	0					
ANR	1397715	Identifier	ZCG		1397242	0					
ANR	1397716	ArgumentList	cache_persistent_script		1397242	1					
ANR	1397717	Argument	cache_persistent_script		1397242	0					
ANR	1397718	Identifier	cache_persistent_script		1397242	0					
ANR	1397719	Identifier	NULL		1397242	1					
ANR	1397720	ReturnStatement	"return accelerator_orig_zend_resolve_path ( filename , filename_len ) ;"	1959:1:60830:60895	1397242	3	True				
ANR	1397721	CallExpression	"accelerator_orig_zend_resolve_path ( filename , filename_len )"		1397242	0					
ANR	1397722	Callee	accelerator_orig_zend_resolve_path		1397242	0					
ANR	1397723	Identifier	accelerator_orig_zend_resolve_path		1397242	0					
ANR	1397724	ArgumentList	filename		1397242	1					
ANR	1397725	Argument	filename		1397242	0					
ANR	1397726	Identifier	filename		1397242	0					
ANR	1397727	Argument	filename_len		1397242	1					
ANR	1397728	Identifier	filename_len		1397242	0					
ANR	1397729	ReturnType	static zend_string *		1397242	1					
ANR	1397730	Identifier	persistent_zend_resolve_path		1397242	2					
ANR	1397731	ParameterList	"const char * filename , int filename_len"		1397242	3					
ANR	1397732	Parameter	const char * filename	1885:49:58092:58111	1397242	0	True				
ANR	1397733	ParameterType	const char *		1397242	0					
ANR	1397734	Identifier	filename		1397242	1					
ANR	1397735	Parameter	int filename_len	1885:71:58114:58129	1397242	1	True				
ANR	1397736	ParameterType	int		1397242	0					
ANR	1397737	Identifier	filename_len		1397242	1					
ANR	1397738	CFGEntryNode	ENTRY		1397242		True				
ANR	1397739	CFGExitNode	EXIT		1397242		True				
ANR	1397740	Symbol	EG ( current_execute_data ) -> func		1397242						
ANR	1397741	Symbol	EG ( current_execute_data ) -> func -> common . type		1397242						
ANR	1397742	Symbol	current_execute_data		1397242						
ANR	1397743	Symbol	* * EG		1397242						
ANR	1397744	Symbol	accelerator_orig_zend_resolve_path		1397242						
ANR	1397745	Symbol	& key_length		1397242						
ANR	1397746	Symbol	persistent_script -> full_path		1397242						
ANR	1397747	Symbol	ZCSG		1397242						
ANR	1397748	Symbol	filename_len		1397242						
ANR	1397749	Symbol	resolved_path		1397242						
ANR	1397750	Symbol	accel_make_persistent_key		1397242						
ANR	1397751	Symbol	EG		1397242						
ANR	1397752	Symbol	NULL		1397242						
ANR	1397753	Symbol	SG ( request_info ) . path_translated		1397242						
ANR	1397754	Symbol	* EG ( current_execute_data ) -> opline		1397242						
ANR	1397755	Symbol	zend_string_copy		1397242						
ANR	1397756	Symbol	* EG ( current_execute_data ) -> func		1397242						
ANR	1397757	Symbol	* persistent_script		1397242						
ANR	1397758	Symbol	persistent_script -> corrupted		1397242						
ANR	1397759	Symbol	cache_opline		1397242						
ANR	1397760	Symbol	zend_accel_hash_str_find_entry		1397242						
ANR	1397761	Symbol	bucket		1397242						
ANR	1397762	Symbol	& ZCSG		1397242						
ANR	1397763	Symbol	filename		1397242						
ANR	1397764	Symbol	* bucket		1397242						
ANR	1397765	Symbol	ZEND_USER_CODE		1397242						
ANR	1397766	Symbol	hash		1397242						
ANR	1397767	Symbol	ZCG		1397242						
ANR	1397768	Symbol	accel_startup_ok		1397242						
ANR	1397769	Symbol	zend_accel_hash_find_entry		1397242						
ANR	1397770	Symbol	restart_in_progress		1397242						
ANR	1397771	Symbol	* EG		1397242						
ANR	1397772	Symbol	EG ( current_execute_data ) -> opline		1397242						
ANR	1397773	Symbol	cache_persistent_script		1397242						
ANR	1397774	Symbol	enabled		1397242						
ANR	1397775	Symbol	EG ( current_execute_data ) -> opline -> extended_value		1397242						
ANR	1397776	Symbol	SG		1397242						
ANR	1397777	Symbol	key_length		1397242						
ANR	1397778	Symbol	ZEND_INCLUDE_OR_EVAL		1397242						
ANR	1397779	Symbol	key		1397242						
ANR	1397780	Symbol	key_len		1397242						
ANR	1397781	Symbol	ZEND_INCLUDE_ONCE		1397242						
ANR	1397782	Symbol	ZEND_REQUIRE_ONCE		1397242						
ANR	1397783	Symbol	EG ( current_execute_data ) -> opline -> opcode		1397242						
ANR	1397784	Symbol	bucket -> data		1397242						
ANR	1397785	Symbol	persistent_script		1397242						
ANR	1397786	Symbol	accelerator_enabled		1397242						
ANR	1397787	Symbol	EG ( current_execute_data ) -> func -> common		1397242						
ANR	1397788	Symbol	request_info		1397242						
ANR	1397789	Symbol	counted		1397242						
ANR	1397790	Symbol	accel_directives		1397242						
ANR	1397791	Symbol	ZCG ( accel_directives ) . revalidate_path		1397242						
ANR	1397792	Function	zend_reset_cache_vars	1962:0:60900:61130							
ANR	1397793	FunctionDef	zend_reset_cache_vars ()		1397792	0					
ANR	1397794	CompoundStatement		1963:0:60940:61130	1397792	0					
ANR	1397795	ExpressionStatement	ZSMMG ( memory_exhausted ) = 0	1964:1:60943:60970	1397792	0	True				
ANR	1397796	AssignmentExpression	ZSMMG ( memory_exhausted ) = 0		1397792	0		=			
ANR	1397797	CallExpression	ZSMMG ( memory_exhausted )		1397792	0					
ANR	1397798	Callee	ZSMMG		1397792	0					
ANR	1397799	Identifier	ZSMMG		1397792	0					
ANR	1397800	ArgumentList	memory_exhausted		1397792	1					
ANR	1397801	Argument	memory_exhausted		1397792	0					
ANR	1397802	Identifier	memory_exhausted		1397792	0					
ANR	1397803	PrimaryExpression	0		1397792	1					
ANR	1397804	ExpressionStatement	ZCSG ( hits ) = 0	1965:1:60973:60987	1397792	1	True				
ANR	1397805	AssignmentExpression	ZCSG ( hits ) = 0		1397792	0		=			
ANR	1397806	CallExpression	ZCSG ( hits )		1397792	0					
ANR	1397807	Callee	ZCSG		1397792	0					
ANR	1397808	Identifier	ZCSG		1397792	0					
ANR	1397809	ArgumentList	hits		1397792	1					
ANR	1397810	Argument	hits		1397792	0					
ANR	1397811	Identifier	hits		1397792	0					
ANR	1397812	PrimaryExpression	0		1397792	1					
ANR	1397813	ExpressionStatement	ZCSG ( misses ) = 0	1966:1:60990:61006	1397792	2	True				
ANR	1397814	AssignmentExpression	ZCSG ( misses ) = 0		1397792	0		=			
ANR	1397815	CallExpression	ZCSG ( misses )		1397792	0					
ANR	1397816	Callee	ZCSG		1397792	0					
ANR	1397817	Identifier	ZCSG		1397792	0					
ANR	1397818	ArgumentList	misses		1397792	1					
ANR	1397819	Argument	misses		1397792	0					
ANR	1397820	Identifier	misses		1397792	0					
ANR	1397821	PrimaryExpression	0		1397792	1					
ANR	1397822	ExpressionStatement	ZCSG ( blacklist_misses ) = 0	1967:1:61009:61035	1397792	3	True				
ANR	1397823	AssignmentExpression	ZCSG ( blacklist_misses ) = 0		1397792	0		=			
ANR	1397824	CallExpression	ZCSG ( blacklist_misses )		1397792	0					
ANR	1397825	Callee	ZCSG		1397792	0					
ANR	1397826	Identifier	ZCSG		1397792	0					
ANR	1397827	ArgumentList	blacklist_misses		1397792	1					
ANR	1397828	Argument	blacklist_misses		1397792	0					
ANR	1397829	Identifier	blacklist_misses		1397792	0					
ANR	1397830	PrimaryExpression	0		1397792	1					
ANR	1397831	ExpressionStatement	ZSMMG ( wasted_shared_memory ) = 0	1968:1:61038:61069	1397792	4	True				
ANR	1397832	AssignmentExpression	ZSMMG ( wasted_shared_memory ) = 0		1397792	0		=			
ANR	1397833	CallExpression	ZSMMG ( wasted_shared_memory )		1397792	0					
ANR	1397834	Callee	ZSMMG		1397792	0					
ANR	1397835	Identifier	ZSMMG		1397792	0					
ANR	1397836	ArgumentList	wasted_shared_memory		1397792	1					
ANR	1397837	Argument	wasted_shared_memory		1397792	0					
ANR	1397838	Identifier	wasted_shared_memory		1397792	0					
ANR	1397839	PrimaryExpression	0		1397792	1					
ANR	1397840	ExpressionStatement	ZCSG ( restart_pending ) = 0	1969:1:61072:61097	1397792	5	True				
ANR	1397841	AssignmentExpression	ZCSG ( restart_pending ) = 0		1397792	0		=			
ANR	1397842	CallExpression	ZCSG ( restart_pending )		1397792	0					
ANR	1397843	Callee	ZCSG		1397792	0					
ANR	1397844	Identifier	ZCSG		1397792	0					
ANR	1397845	ArgumentList	restart_pending		1397792	1					
ANR	1397846	Argument	restart_pending		1397792	0					
ANR	1397847	Identifier	restart_pending		1397792	0					
ANR	1397848	PrimaryExpression	0		1397792	1					
ANR	1397849	ExpressionStatement	ZCSG ( force_restart_time ) = 0	1970:1:61100:61128	1397792	6	True				
ANR	1397850	AssignmentExpression	ZCSG ( force_restart_time ) = 0		1397792	0		=			
ANR	1397851	CallExpression	ZCSG ( force_restart_time )		1397792	0					
ANR	1397852	Callee	ZCSG		1397792	0					
ANR	1397853	Identifier	ZCSG		1397792	0					
ANR	1397854	ArgumentList	force_restart_time		1397792	1					
ANR	1397855	Argument	force_restart_time		1397792	0					
ANR	1397856	Identifier	force_restart_time		1397792	0					
ANR	1397857	PrimaryExpression	0		1397792	1					
ANR	1397858	ReturnType	static void		1397792	1					
ANR	1397859	Identifier	zend_reset_cache_vars		1397792	2					
ANR	1397860	ParameterList			1397792	3					
ANR	1397861	CFGEntryNode	ENTRY		1397792		True				
ANR	1397862	CFGExitNode	EXIT		1397792		True				
ANR	1397863	Symbol	hits		1397792						
ANR	1397864	Symbol	wasted_shared_memory		1397792						
ANR	1397865	Symbol	ZCSG		1397792						
ANR	1397866	Symbol	ZSMMG		1397792						
ANR	1397867	Symbol	misses		1397792						
ANR	1397868	Symbol	blacklist_misses		1397792						
ANR	1397869	Symbol	restart_pending		1397792						
ANR	1397870	Symbol	force_restart_time		1397792						
ANR	1397871	Symbol	memory_exhausted		1397792						
ANR	1397872	Function	accel_reset_pcre_cache	1973:0:61133:61431							
ANR	1397873	FunctionDef	accel_reset_pcre_cache ()		1397872	0					
ANR	1397874	CompoundStatement		1974:0:61174:61431	1397872	0					
ANR	1397875	IdentifierDeclStatement	Bucket * p ;	1975:1:61177:61186	1397872	0	True				
ANR	1397876	IdentifierDecl	* p		1397872	0					
ANR	1397877	IdentifierDeclType	Bucket *		1397872	0					
ANR	1397878	Identifier	p		1397872	1					
ANR	1397879	Statement	ZEND_HASH_FOREACH_BUCKET	1977:1:61190:61213	1397872	1	True				
ANR	1397880	Statement	(	1977:25:61214:61214	1397872	2	True				
ANR	1397881	Statement	&	1977:26:61215:61215	1397872	3	True				
ANR	1397882	Statement	PCRE_G	1977:27:61216:61221	1397872	4	True				
ANR	1397883	Statement	(	1977:33:61222:61222	1397872	5	True				
ANR	1397884	Statement	pcre_cache	1977:34:61223:61232	1397872	6	True				
ANR	1397885	Statement	)	1977:44:61233:61233	1397872	7	True				
ANR	1397886	Statement	","	1977:45:61234:61234	1397872	8	True				
ANR	1397887	Statement	p	1977:47:61236:61236	1397872	9	True				
ANR	1397888	Statement	)	1977:48:61237:61237	1397872	10	True				
ANR	1397889	CompoundStatement		4:50:64:64	1397872	11					
ANR	1397890	IfStatement	if ( ZSTR_IS_INTERNED ( p -> key ) )		1397872	0					
ANR	1397891	Condition	ZSTR_IS_INTERNED ( p -> key )	1979:6:61304:61327	1397872	0	True				
ANR	1397892	CallExpression	ZSTR_IS_INTERNED ( p -> key )		1397872	0					
ANR	1397893	Callee	ZSTR_IS_INTERNED		1397872	0					
ANR	1397894	Identifier	ZSTR_IS_INTERNED		1397872	0					
ANR	1397895	ArgumentList	p -> key		1397872	1					
ANR	1397896	Argument	p -> key		1397872	0					
ANR	1397897	PtrMemberAccess	p -> key		1397872	0					
ANR	1397898	Identifier	p		1397872	0					
ANR	1397899	Identifier	key		1397872	1					
ANR	1397900	CompoundStatement		6:32:155:155	1397872	1					
ANR	1397901	ExpressionStatement	p -> key = NULL	1980:3:61335:61348	1397872	0	True				
ANR	1397902	AssignmentExpression	p -> key = NULL		1397872	0		=			
ANR	1397903	PtrMemberAccess	p -> key		1397872	0					
ANR	1397904	Identifier	p		1397872	0					
ANR	1397905	Identifier	key		1397872	1					
ANR	1397906	Identifier	NULL		1397872	1					
ANR	1397907	ExpressionStatement	"zend_hash_del_bucket ( & PCRE_G ( pcre_cache ) , p )"	1981:3:61353:61397	1397872	1	True				
ANR	1397908	CallExpression	"zend_hash_del_bucket ( & PCRE_G ( pcre_cache ) , p )"		1397872	0					
ANR	1397909	Callee	zend_hash_del_bucket		1397872	0					
ANR	1397910	Identifier	zend_hash_del_bucket		1397872	0					
ANR	1397911	ArgumentList	& PCRE_G ( pcre_cache )		1397872	1					
ANR	1397912	Argument	& PCRE_G ( pcre_cache )		1397872	0					
ANR	1397913	UnaryOperationExpression	& PCRE_G ( pcre_cache )		1397872	0					
ANR	1397914	UnaryOperator	&		1397872	0					
ANR	1397915	CallExpression	PCRE_G ( pcre_cache )		1397872	1					
ANR	1397916	Callee	PCRE_G		1397872	0					
ANR	1397917	Identifier	PCRE_G		1397872	0					
ANR	1397918	ArgumentList	pcre_cache		1397872	1					
ANR	1397919	Argument	pcre_cache		1397872	0					
ANR	1397920	Identifier	pcre_cache		1397872	0					
ANR	1397921	Argument	p		1397872	1					
ANR	1397922	Identifier	p		1397872	0					
ANR	1397923	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1983:3:61406:61429	1397872	12	True				
ANR	1397924	CallExpression	ZEND_HASH_FOREACH_END ( )		1397872	0					
ANR	1397925	Callee	ZEND_HASH_FOREACH_END		1397872	0					
ANR	1397926	Identifier	ZEND_HASH_FOREACH_END		1397872	0					
ANR	1397927	ArgumentList			1397872	1					
ANR	1397928	ReturnType	static void		1397872	1					
ANR	1397929	Identifier	accel_reset_pcre_cache		1397872	2					
ANR	1397930	ParameterList			1397872	3					
ANR	1397931	CFGEntryNode	ENTRY		1397872		True				
ANR	1397932	CFGExitNode	EXIT		1397872		True				
ANR	1397933	Symbol	p		1397872						
ANR	1397934	Symbol	NULL		1397872						
ANR	1397935	Symbol	& PCRE_G		1397872						
ANR	1397936	Symbol	ZSTR_IS_INTERNED		1397872						
ANR	1397937	Symbol	pcre_cache		1397872						
ANR	1397938	Symbol	* p		1397872						
ANR	1397939	Symbol	p -> key		1397872						
ANR	1397940	Function	accel_activate	1986:0:61434:64263							
ANR	1397941	FunctionDef	accel_activate ()		1397940	0					
ANR	1397942	CompoundStatement		1987:0:61467:64263	1397940	0					
ANR	1397943	IdentifierDeclStatement	zend_bool reset_pcre = 0 ;	1988:1:61470:61494	1397940	0	True				
ANR	1397944	IdentifierDecl	reset_pcre = 0		1397940	0					
ANR	1397945	IdentifierDeclType	zend_bool		1397940	0					
ANR	1397946	Identifier	reset_pcre		1397940	1					
ANR	1397947	AssignmentExpression	reset_pcre = 0		1397940	2		=			
ANR	1397948	Identifier	reset_pcre		1397940	0					
ANR	1397949	PrimaryExpression	0		1397940	1					
ANR	1397950	IfStatement	if ( ! ZCG ( enabled ) || ! accel_startup_ok )		1397940	1					
ANR	1397951	Condition	! ZCG ( enabled ) || ! accel_startup_ok	1990:5:61502:61535	1397940	0	True				
ANR	1397952	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok		1397940	0		||			
ANR	1397953	UnaryOperationExpression	! ZCG ( enabled )		1397940	0					
ANR	1397954	UnaryOperator	!		1397940	0					
ANR	1397955	CallExpression	ZCG ( enabled )		1397940	1					
ANR	1397956	Callee	ZCG		1397940	0					
ANR	1397957	Identifier	ZCG		1397940	0					
ANR	1397958	ArgumentList	enabled		1397940	1					
ANR	1397959	Argument	enabled		1397940	0					
ANR	1397960	Identifier	enabled		1397940	0					
ANR	1397961	UnaryOperationExpression	! accel_startup_ok		1397940	1					
ANR	1397962	UnaryOperator	!		1397940	0					
ANR	1397963	Identifier	accel_startup_ok		1397940	1					
ANR	1397964	CompoundStatement		4:41:70:70	1397940	1					
ANR	1397965	ReturnStatement	return ;	1991:2:61542:61548	1397940	0	True				
ANR	1397966	IfStatement	if ( ! ZCG ( function_table ) . nTableSize )		1397940	2					
ANR	1397967	Condition	! ZCG ( function_table ) . nTableSize	1994:5:61559:61589	1397940	0	True				
ANR	1397968	UnaryOperationExpression	! ZCG ( function_table ) . nTableSize		1397940	0					
ANR	1397969	UnaryOperator	!		1397940	0					
ANR	1397970	MemberAccess	ZCG ( function_table ) . nTableSize		1397940	1					
ANR	1397971	CallExpression	ZCG ( function_table )		1397940	0					
ANR	1397972	Callee	ZCG		1397940	0					
ANR	1397973	Identifier	ZCG		1397940	0					
ANR	1397974	ArgumentList	function_table		1397940	1					
ANR	1397975	Argument	function_table		1397940	0					
ANR	1397976	Identifier	function_table		1397940	0					
ANR	1397977	Identifier	nTableSize		1397940	1					
ANR	1397978	CompoundStatement		8:38:124:124	1397940	1					
ANR	1397979	ExpressionStatement	"zend_hash_init ( & ZCG ( function_table ) , zend_hash_num_elements ( CG ( function_table ) ) , NULL , ZEND_FUNCTION_DTOR , 1 )"	1995:2:61596:61705	1397940	0	True				
ANR	1397980	CallExpression	"zend_hash_init ( & ZCG ( function_table ) , zend_hash_num_elements ( CG ( function_table ) ) , NULL , ZEND_FUNCTION_DTOR , 1 )"		1397940	0					
ANR	1397981	Callee	zend_hash_init		1397940	0					
ANR	1397982	Identifier	zend_hash_init		1397940	0					
ANR	1397983	ArgumentList	& ZCG ( function_table )		1397940	1					
ANR	1397984	Argument	& ZCG ( function_table )		1397940	0					
ANR	1397985	UnaryOperationExpression	& ZCG ( function_table )		1397940	0					
ANR	1397986	UnaryOperator	&		1397940	0					
ANR	1397987	CallExpression	ZCG ( function_table )		1397940	1					
ANR	1397988	Callee	ZCG		1397940	0					
ANR	1397989	Identifier	ZCG		1397940	0					
ANR	1397990	ArgumentList	function_table		1397940	1					
ANR	1397991	Argument	function_table		1397940	0					
ANR	1397992	Identifier	function_table		1397940	0					
ANR	1397993	Argument	zend_hash_num_elements ( CG ( function_table ) )		1397940	1					
ANR	1397994	CallExpression	zend_hash_num_elements ( CG ( function_table ) )		1397940	0					
ANR	1397995	Callee	zend_hash_num_elements		1397940	0					
ANR	1397996	Identifier	zend_hash_num_elements		1397940	0					
ANR	1397997	ArgumentList	CG ( function_table )		1397940	1					
ANR	1397998	Argument	CG ( function_table )		1397940	0					
ANR	1397999	CallExpression	CG ( function_table )		1397940	0					
ANR	1398000	Callee	CG		1397940	0					
ANR	1398001	Identifier	CG		1397940	0					
ANR	1398002	ArgumentList	function_table		1397940	1					
ANR	1398003	Argument	function_table		1397940	0					
ANR	1398004	Identifier	function_table		1397940	0					
ANR	1398005	Argument	NULL		1397940	2					
ANR	1398006	Identifier	NULL		1397940	0					
ANR	1398007	Argument	ZEND_FUNCTION_DTOR		1397940	3					
ANR	1398008	Identifier	ZEND_FUNCTION_DTOR		1397940	0					
ANR	1398009	Argument	1		1397940	4					
ANR	1398010	PrimaryExpression	1		1397940	0					
ANR	1398011	ExpressionStatement	zend_accel_copy_internal_functions ( )	1996:2:61709:61745	1397940	1	True				
ANR	1398012	CallExpression	zend_accel_copy_internal_functions ( )		1397940	0					
ANR	1398013	Callee	zend_accel_copy_internal_functions		1397940	0					
ANR	1398014	Identifier	zend_accel_copy_internal_functions		1397940	0					
ANR	1398015	ArgumentList			1397940	1					
ANR	1398016	ExpressionStatement	ZCG ( auto_globals_mask ) = 0	2000:1:61821:61847	1397940	3	True				
ANR	1398017	AssignmentExpression	ZCG ( auto_globals_mask ) = 0		1397940	0		=			
ANR	1398018	CallExpression	ZCG ( auto_globals_mask )		1397940	0					
ANR	1398019	Callee	ZCG		1397940	0					
ANR	1398020	Identifier	ZCG		1397940	0					
ANR	1398021	ArgumentList	auto_globals_mask		1397940	1					
ANR	1398022	Argument	auto_globals_mask		1397940	0					
ANR	1398023	Identifier	auto_globals_mask		1397940	0					
ANR	1398024	PrimaryExpression	0		1397940	1					
ANR	1398025	ExpressionStatement	ZCG ( request_time ) = ( time_t ) sapi_get_request_time ( )	2001:1:61850:61901	1397940	4	True				
ANR	1398026	AssignmentExpression	ZCG ( request_time ) = ( time_t ) sapi_get_request_time ( )		1397940	0		=			
ANR	1398027	CallExpression	ZCG ( request_time )		1397940	0					
ANR	1398028	Callee	ZCG		1397940	0					
ANR	1398029	Identifier	ZCG		1397940	0					
ANR	1398030	ArgumentList	request_time		1397940	1					
ANR	1398031	Argument	request_time		1397940	0					
ANR	1398032	Identifier	request_time		1397940	0					
ANR	1398033	CastExpression	( time_t ) sapi_get_request_time ( )		1397940	1					
ANR	1398034	CastTarget	time_t		1397940	0					
ANR	1398035	CallExpression	sapi_get_request_time ( )		1397940	1					
ANR	1398036	Callee	sapi_get_request_time		1397940	0					
ANR	1398037	Identifier	sapi_get_request_time		1397940	0					
ANR	1398038	ArgumentList			1397940	1					
ANR	1398039	ExpressionStatement	ZCG ( cache_opline ) = NULL	2002:1:61904:61928	1397940	5	True				
ANR	1398040	AssignmentExpression	ZCG ( cache_opline ) = NULL		1397940	0		=			
ANR	1398041	CallExpression	ZCG ( cache_opline )		1397940	0					
ANR	1398042	Callee	ZCG		1397940	0					
ANR	1398043	Identifier	ZCG		1397940	0					
ANR	1398044	ArgumentList	cache_opline		1397940	1					
ANR	1398045	Argument	cache_opline		1397940	0					
ANR	1398046	Identifier	cache_opline		1397940	0					
ANR	1398047	Identifier	NULL		1397940	1					
ANR	1398048	ExpressionStatement	ZCG ( cache_persistent_script ) = NULL	2003:1:61931:61966	1397940	6	True				
ANR	1398049	AssignmentExpression	ZCG ( cache_persistent_script ) = NULL		1397940	0		=			
ANR	1398050	CallExpression	ZCG ( cache_persistent_script )		1397940	0					
ANR	1398051	Callee	ZCG		1397940	0					
ANR	1398052	Identifier	ZCG		1397940	0					
ANR	1398053	ArgumentList	cache_persistent_script		1397940	1					
ANR	1398054	Argument	cache_persistent_script		1397940	0					
ANR	1398055	Identifier	cache_persistent_script		1397940	0					
ANR	1398056	Identifier	NULL		1397940	1					
ANR	1398057	ExpressionStatement	ZCG ( include_path_key_len ) = 0	2004:1:61969:61998	1397940	7	True				
ANR	1398058	AssignmentExpression	ZCG ( include_path_key_len ) = 0		1397940	0		=			
ANR	1398059	CallExpression	ZCG ( include_path_key_len )		1397940	0					
ANR	1398060	Callee	ZCG		1397940	0					
ANR	1398061	Identifier	ZCG		1397940	0					
ANR	1398062	ArgumentList	include_path_key_len		1397940	1					
ANR	1398063	Argument	include_path_key_len		1397940	0					
ANR	1398064	Identifier	include_path_key_len		1397940	0					
ANR	1398065	PrimaryExpression	0		1397940	1					
ANR	1398066	ExpressionStatement	ZCG ( include_path_check ) = 1	2005:1:62001:62028	1397940	8	True				
ANR	1398067	AssignmentExpression	ZCG ( include_path_check ) = 1		1397940	0		=			
ANR	1398068	CallExpression	ZCG ( include_path_check )		1397940	0					
ANR	1398069	Callee	ZCG		1397940	0					
ANR	1398070	Identifier	ZCG		1397940	0					
ANR	1398071	ArgumentList	include_path_check		1397940	1					
ANR	1398072	Argument	include_path_check		1397940	0					
ANR	1398073	Identifier	include_path_check		1397940	0					
ANR	1398074	PrimaryExpression	1		1397940	1					
ANR	1398075	IfStatement	if ( ZCG ( internal_functions_count ) != zend_hash_num_elements ( & ZCG ( function_table ) ) )		1397940	9					
ANR	1398076	Condition	ZCG ( internal_functions_count ) != zend_hash_num_elements ( & ZCG ( function_table ) )	2008:5:62107:62183	1397940	0	True				
ANR	1398077	EqualityExpression	ZCG ( internal_functions_count ) != zend_hash_num_elements ( & ZCG ( function_table ) )		1397940	0		!=			
ANR	1398078	CallExpression	ZCG ( internal_functions_count )		1397940	0					
ANR	1398079	Callee	ZCG		1397940	0					
ANR	1398080	Identifier	ZCG		1397940	0					
ANR	1398081	ArgumentList	internal_functions_count		1397940	1					
ANR	1398082	Argument	internal_functions_count		1397940	0					
ANR	1398083	Identifier	internal_functions_count		1397940	0					
ANR	1398084	CallExpression	zend_hash_num_elements ( & ZCG ( function_table ) )		1397940	1					
ANR	1398085	Callee	zend_hash_num_elements		1397940	0					
ANR	1398086	Identifier	zend_hash_num_elements		1397940	0					
ANR	1398087	ArgumentList	& ZCG ( function_table )		1397940	1					
ANR	1398088	Argument	& ZCG ( function_table )		1397940	0					
ANR	1398089	UnaryOperationExpression	& ZCG ( function_table )		1397940	0					
ANR	1398090	UnaryOperator	&		1397940	0					
ANR	1398091	CallExpression	ZCG ( function_table )		1397940	1					
ANR	1398092	Callee	ZCG		1397940	0					
ANR	1398093	Identifier	ZCG		1397940	0					
ANR	1398094	ArgumentList	function_table		1397940	1					
ANR	1398095	Argument	function_table		1397940	0					
ANR	1398096	Identifier	function_table		1397940	0					
ANR	1398097	CompoundStatement		22:84:718:718	1397940	1					
ANR	1398098	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_WARNING , ""Internal functions count changed - was %d, now %d"" , ZCG ( internal_functions_count ) , zend_hash_num_elements ( & ZCG ( function_table ) ) )"	2009:2:62190:62355	1397940	0	True				
ANR	1398099	CallExpression	"zend_accel_error ( ACCEL_LOG_WARNING , ""Internal functions count changed - was %d, now %d"" , ZCG ( internal_functions_count ) , zend_hash_num_elements ( & ZCG ( function_table ) ) )"		1397940	0					
ANR	1398100	Callee	zend_accel_error		1397940	0					
ANR	1398101	Identifier	zend_accel_error		1397940	0					
ANR	1398102	ArgumentList	ACCEL_LOG_WARNING		1397940	1					
ANR	1398103	Argument	ACCEL_LOG_WARNING		1397940	0					
ANR	1398104	Identifier	ACCEL_LOG_WARNING		1397940	0					
ANR	1398105	Argument	"""Internal functions count changed - was %d, now %d"""		1397940	1					
ANR	1398106	PrimaryExpression	"""Internal functions count changed - was %d, now %d"""		1397940	0					
ANR	1398107	Argument	ZCG ( internal_functions_count )		1397940	2					
ANR	1398108	CallExpression	ZCG ( internal_functions_count )		1397940	0					
ANR	1398109	Callee	ZCG		1397940	0					
ANR	1398110	Identifier	ZCG		1397940	0					
ANR	1398111	ArgumentList	internal_functions_count		1397940	1					
ANR	1398112	Argument	internal_functions_count		1397940	0					
ANR	1398113	Identifier	internal_functions_count		1397940	0					
ANR	1398114	Argument	zend_hash_num_elements ( & ZCG ( function_table ) )		1397940	3					
ANR	1398115	CallExpression	zend_hash_num_elements ( & ZCG ( function_table ) )		1397940	0					
ANR	1398116	Callee	zend_hash_num_elements		1397940	0					
ANR	1398117	Identifier	zend_hash_num_elements		1397940	0					
ANR	1398118	ArgumentList	& ZCG ( function_table )		1397940	1					
ANR	1398119	Argument	& ZCG ( function_table )		1397940	0					
ANR	1398120	UnaryOperationExpression	& ZCG ( function_table )		1397940	0					
ANR	1398121	UnaryOperator	&		1397940	0					
ANR	1398122	CallExpression	ZCG ( function_table )		1397940	1					
ANR	1398123	Callee	ZCG		1397940	0					
ANR	1398124	Identifier	ZCG		1397940	0					
ANR	1398125	ArgumentList	function_table		1397940	1					
ANR	1398126	Argument	function_table		1397940	0					
ANR	1398127	Identifier	function_table		1397940	0					
ANR	1398128	ExpressionStatement	ZCG ( cwd ) = NULL	2012:1:62362:62377	1397940	10	True				
ANR	1398129	AssignmentExpression	ZCG ( cwd ) = NULL		1397940	0		=			
ANR	1398130	CallExpression	ZCG ( cwd )		1397940	0					
ANR	1398131	Callee	ZCG		1397940	0					
ANR	1398132	Identifier	ZCG		1397940	0					
ANR	1398133	ArgumentList	cwd		1397940	1					
ANR	1398134	Argument	cwd		1397940	0					
ANR	1398135	Identifier	cwd		1397940	0					
ANR	1398136	Identifier	NULL		1397940	1					
ANR	1398137	ExpressionStatement	ZCG ( cwd_key_len ) = 0	2013:1:62380:62400	1397940	11	True				
ANR	1398138	AssignmentExpression	ZCG ( cwd_key_len ) = 0		1397940	0		=			
ANR	1398139	CallExpression	ZCG ( cwd_key_len )		1397940	0					
ANR	1398140	Callee	ZCG		1397940	0					
ANR	1398141	Identifier	ZCG		1397940	0					
ANR	1398142	ArgumentList	cwd_key_len		1397940	1					
ANR	1398143	Argument	cwd_key_len		1397940	0					
ANR	1398144	Identifier	cwd_key_len		1397940	0					
ANR	1398145	PrimaryExpression	0		1397940	1					
ANR	1398146	ExpressionStatement	ZCG ( cwd_check ) = 1	2014:1:62403:62421	1397940	12	True				
ANR	1398147	AssignmentExpression	ZCG ( cwd_check ) = 1		1397940	0		=			
ANR	1398148	CallExpression	ZCG ( cwd_check )		1397940	0					
ANR	1398149	Callee	ZCG		1397940	0					
ANR	1398150	Identifier	ZCG		1397940	0					
ANR	1398151	ArgumentList	cwd_check		1397940	1					
ANR	1398152	Argument	cwd_check		1397940	0					
ANR	1398153	Identifier	cwd_check		1397940	0					
ANR	1398154	PrimaryExpression	1		1397940	1					
ANR	1398155	IfStatement	if ( ZCG ( accel_directives ) . file_cache_only )		1397940	13					
ANR	1398156	Condition	ZCG ( accel_directives ) . file_cache_only	2017:5:62460:62496	1397940	0	True				
ANR	1398157	MemberAccess	ZCG ( accel_directives ) . file_cache_only		1397940	0					
ANR	1398158	CallExpression	ZCG ( accel_directives )		1397940	0					
ANR	1398159	Callee	ZCG		1397940	0					
ANR	1398160	Identifier	ZCG		1397940	0					
ANR	1398161	ArgumentList	accel_directives		1397940	1					
ANR	1398162	Argument	accel_directives		1397940	0					
ANR	1398163	Identifier	accel_directives		1397940	0					
ANR	1398164	Identifier	file_cache_only		1397940	1					
ANR	1398165	CompoundStatement		31:44:1031:1031	1397940	1					
ANR	1398166	ReturnStatement	return ;	2018:2:62503:62509	1397940	0	True				
ANR	1398167	ExpressionStatement	SHM_UNPROTECT ( )	2022:1:62523:62538	1397940	14	True				
ANR	1398168	CallExpression	SHM_UNPROTECT ( )		1397940	0					
ANR	1398169	Callee	SHM_UNPROTECT		1397940	0					
ANR	1398170	Identifier	SHM_UNPROTECT		1397940	0					
ANR	1398171	ArgumentList			1397940	1					
ANR	1398172	IfStatement	if ( ZCG ( counted ) )		1397940	15					
ANR	1398173	Condition	ZCG ( counted )	2024:5:62546:62557	1397940	0	True				
ANR	1398174	CallExpression	ZCG ( counted )		1397940	0					
ANR	1398175	Callee	ZCG		1397940	0					
ANR	1398176	Identifier	ZCG		1397940	0					
ANR	1398177	ArgumentList	counted		1397940	1					
ANR	1398178	Argument	counted		1397940	0					
ANR	1398179	Identifier	counted		1397940	0					
ANR	1398180	CompoundStatement		38:19:1092:1092	1397940	1					
ANR	1398181	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_WARNING , ""Stuck count for thread id %d"" , tsrm_thread_id ( ) )"	2026:2:62575:62660	1397940	0	True				
ANR	1398182	CallExpression	"zend_accel_error ( ACCEL_LOG_WARNING , ""Stuck count for thread id %d"" , tsrm_thread_id ( ) )"		1397940	0					
ANR	1398183	Callee	zend_accel_error		1397940	0					
ANR	1398184	Identifier	zend_accel_error		1397940	0					
ANR	1398185	ArgumentList	ACCEL_LOG_WARNING		1397940	1					
ANR	1398186	Argument	ACCEL_LOG_WARNING		1397940	0					
ANR	1398187	Identifier	ACCEL_LOG_WARNING		1397940	0					
ANR	1398188	Argument	"""Stuck count for thread id %d"""		1397940	1					
ANR	1398189	PrimaryExpression	"""Stuck count for thread id %d"""		1397940	0					
ANR	1398190	Argument	tsrm_thread_id ( )		1397940	2					
ANR	1398191	CallExpression	tsrm_thread_id ( )		1397940	0					
ANR	1398192	Callee	tsrm_thread_id		1397940	0					
ANR	1398193	Identifier	tsrm_thread_id		1397940	0					
ANR	1398194	ArgumentList			1397940	1					
ANR	1398195	ExpressionStatement	accel_unlock_all ( )	2030:2:62752:62770	1397940	1	True				
ANR	1398196	CallExpression	accel_unlock_all ( )		1397940	0					
ANR	1398197	Callee	accel_unlock_all		1397940	0					
ANR	1398198	Identifier	accel_unlock_all		1397940	0					
ANR	1398199	ArgumentList			1397940	1					
ANR	1398200	ExpressionStatement	ZCG ( counted ) = 0	2031:2:62774:62790	1397940	2	True				
ANR	1398201	AssignmentExpression	ZCG ( counted ) = 0		1397940	0		=			
ANR	1398202	CallExpression	ZCG ( counted )		1397940	0					
ANR	1398203	Callee	ZCG		1397940	0					
ANR	1398204	Identifier	ZCG		1397940	0					
ANR	1398205	ArgumentList	counted		1397940	1					
ANR	1398206	Argument	counted		1397940	0					
ANR	1398207	Identifier	counted		1397940	0					
ANR	1398208	PrimaryExpression	0		1397940	1					
ANR	1398209	IfStatement	if ( ZCSG ( restart_pending ) )		1397940	16					
ANR	1398210	Condition	ZCSG ( restart_pending )	2034:5:62801:62821	1397940	0	True				
ANR	1398211	CallExpression	ZCSG ( restart_pending )		1397940	0					
ANR	1398212	Callee	ZCSG		1397940	0					
ANR	1398213	Identifier	ZCSG		1397940	0					
ANR	1398214	ArgumentList	restart_pending		1397940	1					
ANR	1398215	Argument	restart_pending		1397940	0					
ANR	1398216	Identifier	restart_pending		1397940	0					
ANR	1398217	CompoundStatement		48:28:1356:1356	1397940	1					
ANR	1398218	ExpressionStatement	zend_shared_alloc_lock ( )	2035:2:62828:62852	1397940	0	True				
ANR	1398219	CallExpression	zend_shared_alloc_lock ( )		1397940	0					
ANR	1398220	Callee	zend_shared_alloc_lock		1397940	0					
ANR	1398221	Identifier	zend_shared_alloc_lock		1397940	0					
ANR	1398222	ArgumentList			1397940	1					
ANR	1398223	IfStatement	if ( ZCSG ( restart_pending ) != 0 )		1397940	1					
ANR	1398224	Condition	ZCSG ( restart_pending ) != 0	2036:6:62860:62885	1397940	0	True				
ANR	1398225	EqualityExpression	ZCSG ( restart_pending ) != 0		1397940	0		!=			
ANR	1398226	CallExpression	ZCSG ( restart_pending )		1397940	0					
ANR	1398227	Callee	ZCSG		1397940	0					
ANR	1398228	Identifier	ZCSG		1397940	0					
ANR	1398229	ArgumentList	restart_pending		1397940	1					
ANR	1398230	Argument	restart_pending		1397940	0					
ANR	1398231	Identifier	restart_pending		1397940	0					
ANR	1398232	PrimaryExpression	0		1397940	1					
ANR	1398233	CompoundStatement		50:34:1420:1420	1397940	1					
ANR	1398234	IfStatement	if ( accel_is_inactive ( ) == SUCCESS )		1397940	0					
ANR	1398235	Condition	accel_is_inactive ( ) == SUCCESS	2037:7:62983:63012	1397940	0	True				
ANR	1398236	EqualityExpression	accel_is_inactive ( ) == SUCCESS		1397940	0		==			
ANR	1398237	CallExpression	accel_is_inactive ( )		1397940	0					
ANR	1398238	Callee	accel_is_inactive		1397940	0					
ANR	1398239	Identifier	accel_is_inactive		1397940	0					
ANR	1398240	ArgumentList			1397940	1					
ANR	1398241	Identifier	SUCCESS		1397940	1					
ANR	1398242	CompoundStatement		51:39:1547:1547	1397940	1					
ANR	1398243	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""Restarting!"" )"	2038:4:63021:63069	1397940	0	True				
ANR	1398244	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""Restarting!"" )"		1397940	0					
ANR	1398245	Callee	zend_accel_error		1397940	0					
ANR	1398246	Identifier	zend_accel_error		1397940	0					
ANR	1398247	ArgumentList	ACCEL_LOG_DEBUG		1397940	1					
ANR	1398248	Argument	ACCEL_LOG_DEBUG		1397940	0					
ANR	1398249	Identifier	ACCEL_LOG_DEBUG		1397940	0					
ANR	1398250	Argument	"""Restarting!"""		1397940	1					
ANR	1398251	PrimaryExpression	"""Restarting!"""		1397940	0					
ANR	1398252	ExpressionStatement	ZCSG ( restart_pending ) = 0	2039:4:63075:63100	1397940	1	True				
ANR	1398253	AssignmentExpression	ZCSG ( restart_pending ) = 0		1397940	0		=			
ANR	1398254	CallExpression	ZCSG ( restart_pending )		1397940	0					
ANR	1398255	Callee	ZCSG		1397940	0					
ANR	1398256	Identifier	ZCSG		1397940	0					
ANR	1398257	ArgumentList	restart_pending		1397940	1					
ANR	1398258	Argument	restart_pending		1397940	0					
ANR	1398259	Identifier	restart_pending		1397940	0					
ANR	1398260	PrimaryExpression	0		1397940	1					
ANR	1398261	Statement	switch	2040:4:63106:63111	1397940	2	True				
ANR	1398262	Statement	ZCSG	2040:11:63113:63116	1397940	3	True				
ANR	1398263	Statement	(	2040:15:63117:63117	1397940	4	True				
ANR	1398264	Statement	restart_reason	2040:16:63118:63131	1397940	5	True				
ANR	1398265	Statement	)	2040:30:63132:63132	1397940	6	True				
ANR	1398266	CompoundStatement		54:32:1666:1666	1397940	7					
ANR	1398267	Label	case ACCEL_RESTART_OOM :	2041:5:63141:63163	1397940	0	True				
ANR	1398268	Identifier	ACCEL_RESTART_OOM		1397940	0					
ANR	1398269	ExpressionStatement	ZCSG ( oom_restarts ) ++	2042:6:63171:63191	1397940	1	True				
ANR	1398270	PostIncDecOperationExpression	ZCSG ( oom_restarts ) ++		1397940	0					
ANR	1398271	CallExpression	ZCSG ( oom_restarts )		1397940	0					
ANR	1398272	Callee	ZCSG		1397940	0					
ANR	1398273	Identifier	ZCSG		1397940	0					
ANR	1398274	ArgumentList	oom_restarts		1397940	1					
ANR	1398275	Argument	oom_restarts		1397940	0					
ANR	1398276	Identifier	oom_restarts		1397940	0					
ANR	1398277	IncDec	++		1397940	1					
ANR	1398278	BreakStatement	break ;	2043:6:63199:63204	1397940	2	True				
ANR	1398279	Label	case ACCEL_RESTART_HASH :	2044:5:63211:63234	1397940	3	True				
ANR	1398280	Identifier	ACCEL_RESTART_HASH		1397940	0					
ANR	1398281	ExpressionStatement	ZCSG ( hash_restarts ) ++	2045:6:63242:63263	1397940	4	True				
ANR	1398282	PostIncDecOperationExpression	ZCSG ( hash_restarts ) ++		1397940	0					
ANR	1398283	CallExpression	ZCSG ( hash_restarts )		1397940	0					
ANR	1398284	Callee	ZCSG		1397940	0					
ANR	1398285	Identifier	ZCSG		1397940	0					
ANR	1398286	ArgumentList	hash_restarts		1397940	1					
ANR	1398287	Argument	hash_restarts		1397940	0					
ANR	1398288	Identifier	hash_restarts		1397940	0					
ANR	1398289	IncDec	++		1397940	1					
ANR	1398290	BreakStatement	break ;	2046:6:63271:63276	1397940	5	True				
ANR	1398291	Label	case ACCEL_RESTART_USER :	2047:5:63283:63306	1397940	6	True				
ANR	1398292	Identifier	ACCEL_RESTART_USER		1397940	0					
ANR	1398293	ExpressionStatement	ZCSG ( manual_restarts ) ++	2048:6:63314:63337	1397940	7	True				
ANR	1398294	PostIncDecOperationExpression	ZCSG ( manual_restarts ) ++		1397940	0					
ANR	1398295	CallExpression	ZCSG ( manual_restarts )		1397940	0					
ANR	1398296	Callee	ZCSG		1397940	0					
ANR	1398297	Identifier	ZCSG		1397940	0					
ANR	1398298	ArgumentList	manual_restarts		1397940	1					
ANR	1398299	Argument	manual_restarts		1397940	0					
ANR	1398300	Identifier	manual_restarts		1397940	0					
ANR	1398301	IncDec	++		1397940	1					
ANR	1398302	BreakStatement	break ;	2049:6:63345:63350	1397940	8	True				
ANR	1398303	ExpressionStatement	accel_restart_enter ( )	2051:4:63362:63383	1397940	8	True				
ANR	1398304	CallExpression	accel_restart_enter ( )		1397940	0					
ANR	1398305	Callee	accel_restart_enter		1397940	0					
ANR	1398306	Identifier	accel_restart_enter		1397940	0					
ANR	1398307	ArgumentList			1397940	1					
ANR	1398308	ExpressionStatement	zend_reset_cache_vars ( )	2053:4:63390:63413	1397940	9	True				
ANR	1398309	CallExpression	zend_reset_cache_vars ( )		1397940	0					
ANR	1398310	Callee	zend_reset_cache_vars		1397940	0					
ANR	1398311	Identifier	zend_reset_cache_vars		1397940	0					
ANR	1398312	ArgumentList			1397940	1					
ANR	1398313	ExpressionStatement	zend_accel_hash_clean ( & ZCSG ( hash ) )	2054:4:63419:63453	1397940	10	True				
ANR	1398314	CallExpression	zend_accel_hash_clean ( & ZCSG ( hash ) )		1397940	0					
ANR	1398315	Callee	zend_accel_hash_clean		1397940	0					
ANR	1398316	Identifier	zend_accel_hash_clean		1397940	0					
ANR	1398317	ArgumentList	& ZCSG ( hash )		1397940	1					
ANR	1398318	Argument	& ZCSG ( hash )		1397940	0					
ANR	1398319	UnaryOperationExpression	& ZCSG ( hash )		1397940	0					
ANR	1398320	UnaryOperator	&		1397940	0					
ANR	1398321	CallExpression	ZCSG ( hash )		1397940	1					
ANR	1398322	Callee	ZCSG		1397940	0					
ANR	1398323	Identifier	ZCSG		1397940	0					
ANR	1398324	ArgumentList	hash		1397940	1					
ANR	1398325	Argument	hash		1397940	0					
ANR	1398326	Identifier	hash		1397940	0					
ANR	1398327	IfStatement	if ( ZCG ( accel_directives ) . interned_strings_buffer )		1397940	11					
ANR	1398328	Condition	ZCG ( accel_directives ) . interned_strings_buffer	2057:8:63482:63526	1397940	0	True				
ANR	1398329	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		1397940	0					
ANR	1398330	CallExpression	ZCG ( accel_directives )		1397940	0					
ANR	1398331	Callee	ZCG		1397940	0					
ANR	1398332	Identifier	ZCG		1397940	0					
ANR	1398333	ArgumentList	accel_directives		1397940	1					
ANR	1398334	Argument	accel_directives		1397940	0					
ANR	1398335	Identifier	accel_directives		1397940	0					
ANR	1398336	Identifier	interned_strings_buffer		1397940	1					
ANR	1398337	CompoundStatement		71:55:2061:2061	1397940	1					
ANR	1398338	ExpressionStatement	accel_interned_strings_restore_state ( )	2058:5:63536:63574	1397940	0	True				
ANR	1398339	CallExpression	accel_interned_strings_restore_state ( )		1397940	0					
ANR	1398340	Callee	accel_interned_strings_restore_state		1397940	0					
ANR	1398341	Identifier	accel_interned_strings_restore_state		1397940	0					
ANR	1398342	ArgumentList			1397940	1					
ANR	1398343	ExpressionStatement	zend_shared_alloc_restore_state ( )	2062:4:63594:63627	1397940	12	True				
ANR	1398344	CallExpression	zend_shared_alloc_restore_state ( )		1397940	0					
ANR	1398345	Callee	zend_shared_alloc_restore_state		1397940	0					
ANR	1398346	Identifier	zend_shared_alloc_restore_state		1397940	0					
ANR	1398347	ArgumentList			1397940	1					
ANR	1398348	ExpressionStatement	ZCSG ( accelerator_enabled ) = ZCSG ( cache_status_before_restart )	2063:4:63633:63694	1397940	13	True				
ANR	1398349	AssignmentExpression	ZCSG ( accelerator_enabled ) = ZCSG ( cache_status_before_restart )		1397940	0		=			
ANR	1398350	CallExpression	ZCSG ( accelerator_enabled )		1397940	0					
ANR	1398351	Callee	ZCSG		1397940	0					
ANR	1398352	Identifier	ZCSG		1397940	0					
ANR	1398353	ArgumentList	accelerator_enabled		1397940	1					
ANR	1398354	Argument	accelerator_enabled		1397940	0					
ANR	1398355	Identifier	accelerator_enabled		1397940	0					
ANR	1398356	CallExpression	ZCSG ( cache_status_before_restart )		1397940	1					
ANR	1398357	Callee	ZCSG		1397940	0					
ANR	1398358	Identifier	ZCSG		1397940	0					
ANR	1398359	ArgumentList	cache_status_before_restart		1397940	1					
ANR	1398360	Argument	cache_status_before_restart		1397940	0					
ANR	1398361	Identifier	cache_status_before_restart		1397940	0					
ANR	1398362	IfStatement	if ( ZCSG ( last_restart_time ) < ZCG ( request_time ) )		1397940	14					
ANR	1398363	Condition	ZCSG ( last_restart_time ) < ZCG ( request_time )	2064:8:63704:63746	1397940	0	True				
ANR	1398364	RelationalExpression	ZCSG ( last_restart_time ) < ZCG ( request_time )		1397940	0		<			
ANR	1398365	CallExpression	ZCSG ( last_restart_time )		1397940	0					
ANR	1398366	Callee	ZCSG		1397940	0					
ANR	1398367	Identifier	ZCSG		1397940	0					
ANR	1398368	ArgumentList	last_restart_time		1397940	1					
ANR	1398369	Argument	last_restart_time		1397940	0					
ANR	1398370	Identifier	last_restart_time		1397940	0					
ANR	1398371	CallExpression	ZCG ( request_time )		1397940	1					
ANR	1398372	Callee	ZCG		1397940	0					
ANR	1398373	Identifier	ZCG		1397940	0					
ANR	1398374	ArgumentList	request_time		1397940	1					
ANR	1398375	Argument	request_time		1397940	0					
ANR	1398376	Identifier	request_time		1397940	0					
ANR	1398377	CompoundStatement		78:53:2281:2281	1397940	1					
ANR	1398378	ExpressionStatement	ZCSG ( last_restart_time ) = ZCG ( request_time )	2065:5:63756:63799	1397940	0	True				
ANR	1398379	AssignmentExpression	ZCSG ( last_restart_time ) = ZCG ( request_time )		1397940	0		=			
ANR	1398380	CallExpression	ZCSG ( last_restart_time )		1397940	0					
ANR	1398381	Callee	ZCSG		1397940	0					
ANR	1398382	Identifier	ZCSG		1397940	0					
ANR	1398383	ArgumentList	last_restart_time		1397940	1					
ANR	1398384	Argument	last_restart_time		1397940	0					
ANR	1398385	Identifier	last_restart_time		1397940	0					
ANR	1398386	CallExpression	ZCG ( request_time )		1397940	1					
ANR	1398387	Callee	ZCG		1397940	0					
ANR	1398388	Identifier	ZCG		1397940	0					
ANR	1398389	ArgumentList	request_time		1397940	1					
ANR	1398390	Argument	request_time		1397940	0					
ANR	1398391	Identifier	request_time		1397940	0					
ANR	1398392	ElseStatement	else		1397940	0					
ANR	1398393	CompoundStatement		80:11:2344:2344	1397940	0					
ANR	1398394	ExpressionStatement	ZCSG ( last_restart_time ) ++	2067:5:63819:63844	1397940	0	True				
ANR	1398395	PostIncDecOperationExpression	ZCSG ( last_restart_time ) ++		1397940	0					
ANR	1398396	CallExpression	ZCSG ( last_restart_time )		1397940	0					
ANR	1398397	Callee	ZCSG		1397940	0					
ANR	1398398	Identifier	ZCSG		1397940	0					
ANR	1398399	ArgumentList	last_restart_time		1397940	1					
ANR	1398400	Argument	last_restart_time		1397940	0					
ANR	1398401	Identifier	last_restart_time		1397940	0					
ANR	1398402	IncDec	++		1397940	1					
ANR	1398403	ExpressionStatement	accel_restart_leave ( )	2069:4:63856:63877	1397940	15	True				
ANR	1398404	CallExpression	accel_restart_leave ( )		1397940	0					
ANR	1398405	Callee	accel_restart_leave		1397940	0					
ANR	1398406	Identifier	accel_restart_leave		1397940	0					
ANR	1398407	ArgumentList			1397940	1					
ANR	1398408	ElseStatement	else		1397940	0					
ANR	1398409	CompoundStatement		85:9:2425:2425	1397940	0					
ANR	1398410	ExpressionStatement	reset_pcre = 1	2072:3:63898:63912	1397940	0	True				
ANR	1398411	AssignmentExpression	reset_pcre = 1		1397940	0		=			
ANR	1398412	Identifier	reset_pcre		1397940	0					
ANR	1398413	PrimaryExpression	1		1397940	1					
ANR	1398414	ExpressionStatement	zend_shared_alloc_unlock ( )	2074:2:63920:63946	1397940	2	True				
ANR	1398415	CallExpression	zend_shared_alloc_unlock ( )		1397940	0					
ANR	1398416	Callee	zend_shared_alloc_unlock		1397940	0					
ANR	1398417	Identifier	zend_shared_alloc_unlock		1397940	0					
ANR	1398418	ArgumentList			1397940	1					
ANR	1398419	ExpressionStatement	SHM_PROTECT ( )	2077:1:63953:63966	1397940	17	True				
ANR	1398420	CallExpression	SHM_PROTECT ( )		1397940	0					
ANR	1398421	Callee	SHM_PROTECT		1397940	0					
ANR	1398422	Identifier	SHM_PROTECT		1397940	0					
ANR	1398423	ArgumentList			1397940	1					
ANR	1398424	IfStatement	if ( ZCSG ( last_restart_time ) != ZCG ( last_restart_time ) )		1397940	18					
ANR	1398425	Condition	ZCSG ( last_restart_time ) != ZCG ( last_restart_time )	2079:5:63974:64022	1397940	0	True				
ANR	1398426	EqualityExpression	ZCSG ( last_restart_time ) != ZCG ( last_restart_time )		1397940	0		!=			
ANR	1398427	CallExpression	ZCSG ( last_restart_time )		1397940	0					
ANR	1398428	Callee	ZCSG		1397940	0					
ANR	1398429	Identifier	ZCSG		1397940	0					
ANR	1398430	ArgumentList	last_restart_time		1397940	1					
ANR	1398431	Argument	last_restart_time		1397940	0					
ANR	1398432	Identifier	last_restart_time		1397940	0					
ANR	1398433	CallExpression	ZCG ( last_restart_time )		1397940	1					
ANR	1398434	Callee	ZCG		1397940	0					
ANR	1398435	Identifier	ZCG		1397940	0					
ANR	1398436	ArgumentList	last_restart_time		1397940	1					
ANR	1398437	Argument	last_restart_time		1397940	0					
ANR	1398438	Identifier	last_restart_time		1397940	0					
ANR	1398439	CompoundStatement		93:56:2557:2557	1397940	1					
ANR	1398440	ExpressionStatement	ZCG ( last_restart_time ) = ZCSG ( last_restart_time )	2081:2:64060:64108	1397940	0	True				
ANR	1398441	AssignmentExpression	ZCG ( last_restart_time ) = ZCSG ( last_restart_time )		1397940	0		=			
ANR	1398442	CallExpression	ZCG ( last_restart_time )		1397940	0					
ANR	1398443	Callee	ZCG		1397940	0					
ANR	1398444	Identifier	ZCG		1397940	0					
ANR	1398445	ArgumentList	last_restart_time		1397940	1					
ANR	1398446	Argument	last_restart_time		1397940	0					
ANR	1398447	Identifier	last_restart_time		1397940	0					
ANR	1398448	CallExpression	ZCSG ( last_restart_time )		1397940	1					
ANR	1398449	Callee	ZCSG		1397940	0					
ANR	1398450	Identifier	ZCSG		1397940	0					
ANR	1398451	ArgumentList	last_restart_time		1397940	1					
ANR	1398452	Argument	last_restart_time		1397940	0					
ANR	1398453	Identifier	last_restart_time		1397940	0					
ANR	1398454	ExpressionStatement	realpath_cache_clean ( )	2084:2:64153:64175	1397940	1	True				
ANR	1398455	CallExpression	realpath_cache_clean ( )		1397940	0					
ANR	1398456	Callee	realpath_cache_clean		1397940	0					
ANR	1398457	Identifier	realpath_cache_clean		1397940	0					
ANR	1398458	ArgumentList			1397940	1					
ANR	1398459	ExpressionStatement	accel_reset_pcre_cache ( )	2086:2:64180:64204	1397940	2	True				
ANR	1398460	CallExpression	accel_reset_pcre_cache ( )		1397940	0					
ANR	1398461	Callee	accel_reset_pcre_cache		1397940	0					
ANR	1398462	Identifier	accel_reset_pcre_cache		1397940	0					
ANR	1398463	ArgumentList			1397940	1					
ANR	1398464	ElseStatement	else		1397940	0					
ANR	1398465	IfStatement	if ( reset_pcre )		1397940	0					
ANR	1398466	Condition	reset_pcre	2087:12:64218:64227	1397940	0	True				
ANR	1398467	Identifier	reset_pcre		1397940	0					
ANR	1398468	CompoundStatement		101:24:2762:2762	1397940	1					
ANR	1398469	ExpressionStatement	accel_reset_pcre_cache ( )	2088:2:64234:64258	1397940	0	True				
ANR	1398470	CallExpression	accel_reset_pcre_cache ( )		1397940	0					
ANR	1398471	Callee	accel_reset_pcre_cache		1397940	0					
ANR	1398472	Identifier	accel_reset_pcre_cache		1397940	0					
ANR	1398473	ArgumentList			1397940	1					
ANR	1398474	ReturnType	static void		1397940	1					
ANR	1398475	Identifier	accel_activate		1397940	2					
ANR	1398476	ParameterList			1397940	3					
ANR	1398477	CFGEntryNode	ENTRY		1397940		True				
ANR	1398478	CFGExitNode	EXIT		1397940		True				
ANR	1398479	CFGErrorNode	ERROR		1397940		True				
ANR	1398480	Symbol	accel_startup_ok		1397940						
ANR	1398481	Symbol	reset_pcre		1397940						
ANR	1398482	Symbol	include_path_check		1397940						
ANR	1398483	Symbol	cache_status_before_restart		1397940						
ANR	1398484	Symbol	include_path_key_len		1397940						
ANR	1398485	Symbol	internal_functions_count		1397940						
ANR	1398486	Symbol	cache_persistent_script		1397940						
ANR	1398487	Symbol	enabled		1397940						
ANR	1398488	Symbol	tsrm_thread_id		1397940						
ANR	1398489	Symbol	request_time		1397940						
ANR	1398490	Symbol	ZCSG		1397940						
ANR	1398491	Symbol	ACCEL_LOG_WARNING		1397940						
ANR	1398492	Symbol	ACCEL_LOG_DEBUG		1397940						
ANR	1398493	Symbol	ZEND_FUNCTION_DTOR		1397940						
ANR	1398494	Symbol	NULL		1397940						
ANR	1398495	Symbol	& ZCG		1397940						
ANR	1398496	Symbol	SUCCESS		1397940						
ANR	1398497	Symbol	CG		1397940						
ANR	1398498	Symbol	zend_hash_num_elements		1397940						
ANR	1398499	Symbol	restart_pending		1397940						
ANR	1398500	Symbol	cwd_check		1397940						
ANR	1398501	Symbol	cache_opline		1397940						
ANR	1398502	Symbol	cwd_key_len		1397940						
ANR	1398503	Symbol	accelerator_enabled		1397940						
ANR	1398504	Symbol	auto_globals_mask		1397940						
ANR	1398505	Symbol	cwd		1397940						
ANR	1398506	Symbol	& ZCSG		1397940						
ANR	1398507	Symbol	accel_is_inactive		1397940						
ANR	1398508	Symbol	oom_restarts		1397940						
ANR	1398509	Symbol	last_restart_time		1397940						
ANR	1398510	Symbol	counted		1397940						
ANR	1398511	Symbol	manual_restarts		1397940						
ANR	1398512	Symbol	ZCG ( accel_directives ) . interned_strings_buffer		1397940						
ANR	1398513	Symbol	function_table		1397940						
ANR	1398514	Symbol	ZCG ( accel_directives ) . file_cache_only		1397940						
ANR	1398515	Symbol	accel_directives		1397940						
ANR	1398516	Symbol	sapi_get_request_time		1397940						
ANR	1398517	Symbol	hash		1397940						
ANR	1398518	Symbol	ZCG		1397940						
ANR	1398519	Symbol	ZCG ( function_table ) . nTableSize		1397940						
ANR	1398520	Symbol	hash_restarts		1397940						
ANR	1398521	DeclStmt									
ANR	1398522	Decl							void	void ( HashTable * ht )	accel_fast_hash_destroy
ANR	1398523	Function	accel_fast_zval_dtor	2102:0:64580:65267							
ANR	1398524	FunctionDef	accel_fast_zval_dtor (zval * zvalue)		1398523	0					
ANR	1398525	CompoundStatement		2103:0:64627:65267	1398523	0					
ANR	1398526	Label	tail_call :	2104:0:64629:64638	1398523	0	True				
ANR	1398527	Identifier	tail_call		1398523	0					
ANR	1398528	SwitchStatement	switch ( Z_TYPE_P ( zvalue ) )		1398523	1					
ANR	1398529	Condition	Z_TYPE_P ( zvalue )	2105:9:64649:64664	1398523	0	True				
ANR	1398530	CallExpression	Z_TYPE_P ( zvalue )		1398523	0					
ANR	1398531	Callee	Z_TYPE_P		1398523	0					
ANR	1398532	Identifier	Z_TYPE_P		1398523	0					
ANR	1398533	ArgumentList	zvalue		1398523	1					
ANR	1398534	Argument	zvalue		1398523	0					
ANR	1398535	Identifier	zvalue		1398523	0					
ANR	1398536	CompoundStatement		3:27:39:39	1398523	1					
ANR	1398537	Label	case IS_ARRAY :	2106:2:64671:64684	1398523	0	True				
ANR	1398538	Identifier	IS_ARRAY		1398523	0					
ANR	1398539	ExpressionStatement	GC_REMOVE_FROM_BUFFER ( Z_ARR_P ( zvalue ) )	2107:3:64689:64727	1398523	1	True				
ANR	1398540	CallExpression	GC_REMOVE_FROM_BUFFER ( Z_ARR_P ( zvalue ) )		1398523	0					
ANR	1398541	Callee	GC_REMOVE_FROM_BUFFER		1398523	0					
ANR	1398542	Identifier	GC_REMOVE_FROM_BUFFER		1398523	0					
ANR	1398543	ArgumentList	Z_ARR_P ( zvalue )		1398523	1					
ANR	1398544	Argument	Z_ARR_P ( zvalue )		1398523	0					
ANR	1398545	CallExpression	Z_ARR_P ( zvalue )		1398523	0					
ANR	1398546	Callee	Z_ARR_P		1398523	0					
ANR	1398547	Identifier	Z_ARR_P		1398523	0					
ANR	1398548	ArgumentList	zvalue		1398523	1					
ANR	1398549	Argument	zvalue		1398523	0					
ANR	1398550	Identifier	zvalue		1398523	0					
ANR	1398551	IfStatement	if ( Z_ARR_P ( zvalue ) != & EG ( symbol_table ) )		1398523	2					
ANR	1398552	Condition	Z_ARR_P ( zvalue ) != & EG ( symbol_table )	2108:7:64736:64771	1398523	0	True				
ANR	1398553	EqualityExpression	Z_ARR_P ( zvalue ) != & EG ( symbol_table )		1398523	0		!=			
ANR	1398554	CallExpression	Z_ARR_P ( zvalue )		1398523	0					
ANR	1398555	Callee	Z_ARR_P		1398523	0					
ANR	1398556	Identifier	Z_ARR_P		1398523	0					
ANR	1398557	ArgumentList	zvalue		1398523	1					
ANR	1398558	Argument	zvalue		1398523	0					
ANR	1398559	Identifier	zvalue		1398523	0					
ANR	1398560	UnaryOperationExpression	& EG ( symbol_table )		1398523	1					
ANR	1398561	UnaryOperator	&		1398523	0					
ANR	1398562	CallExpression	EG ( symbol_table )		1398523	1					
ANR	1398563	Callee	EG		1398523	0					
ANR	1398564	Identifier	EG		1398523	0					
ANR	1398565	ArgumentList	symbol_table		1398523	1					
ANR	1398566	Argument	symbol_table		1398523	0					
ANR	1398567	Identifier	symbol_table		1398523	0					
ANR	1398568	CompoundStatement		6:45:146:146	1398523	1					
ANR	1398569	ExpressionStatement	ZVAL_NULL ( zvalue )	2110:4:64812:64829	1398523	0	True				
ANR	1398570	CallExpression	ZVAL_NULL ( zvalue )		1398523	0					
ANR	1398571	Callee	ZVAL_NULL		1398523	0					
ANR	1398572	Identifier	ZVAL_NULL		1398523	0					
ANR	1398573	ArgumentList	zvalue		1398523	1					
ANR	1398574	Argument	zvalue		1398523	0					
ANR	1398575	Identifier	zvalue		1398523	0					
ANR	1398576	ExpressionStatement	accel_fast_hash_destroy ( Z_ARRVAL_P ( zvalue ) )	2111:4:64835:64878	1398523	1	True				
ANR	1398577	CallExpression	accel_fast_hash_destroy ( Z_ARRVAL_P ( zvalue ) )		1398523	0					
ANR	1398578	Callee	accel_fast_hash_destroy		1398523	0					
ANR	1398579	Identifier	accel_fast_hash_destroy		1398523	0					
ANR	1398580	ArgumentList	Z_ARRVAL_P ( zvalue )		1398523	1					
ANR	1398581	Argument	Z_ARRVAL_P ( zvalue )		1398523	0					
ANR	1398582	CallExpression	Z_ARRVAL_P ( zvalue )		1398523	0					
ANR	1398583	Callee	Z_ARRVAL_P		1398523	0					
ANR	1398584	Identifier	Z_ARRVAL_P		1398523	0					
ANR	1398585	ArgumentList	zvalue		1398523	1					
ANR	1398586	Argument	zvalue		1398523	0					
ANR	1398587	Identifier	zvalue		1398523	0					
ANR	1398588	BreakStatement	break ;	2113:3:64888:64893	1398523	3	True				
ANR	1398589	Label	case IS_OBJECT :	2114:2:64897:64911	1398523	4	True				
ANR	1398590	Identifier	IS_OBJECT		1398523	0					
ANR	1398591	ExpressionStatement	OBJ_RELEASE ( Z_OBJ_P ( zvalue ) )	2115:3:64916:64944	1398523	5	True				
ANR	1398592	CallExpression	OBJ_RELEASE ( Z_OBJ_P ( zvalue ) )		1398523	0					
ANR	1398593	Callee	OBJ_RELEASE		1398523	0					
ANR	1398594	Identifier	OBJ_RELEASE		1398523	0					
ANR	1398595	ArgumentList	Z_OBJ_P ( zvalue )		1398523	1					
ANR	1398596	Argument	Z_OBJ_P ( zvalue )		1398523	0					
ANR	1398597	CallExpression	Z_OBJ_P ( zvalue )		1398523	0					
ANR	1398598	Callee	Z_OBJ_P		1398523	0					
ANR	1398599	Identifier	Z_OBJ_P		1398523	0					
ANR	1398600	ArgumentList	zvalue		1398523	1					
ANR	1398601	Argument	zvalue		1398523	0					
ANR	1398602	Identifier	zvalue		1398523	0					
ANR	1398603	BreakStatement	break ;	2116:3:64949:64954	1398523	6	True				
ANR	1398604	Label	case IS_RESOURCE :	2117:2:64958:64974	1398523	7	True				
ANR	1398605	Identifier	IS_RESOURCE		1398523	0					
ANR	1398606	ExpressionStatement	zend_list_delete ( Z_RES_P ( zvalue ) )	2118:3:64979:65012	1398523	8	True				
ANR	1398607	CallExpression	zend_list_delete ( Z_RES_P ( zvalue ) )		1398523	0					
ANR	1398608	Callee	zend_list_delete		1398523	0					
ANR	1398609	Identifier	zend_list_delete		1398523	0					
ANR	1398610	ArgumentList	Z_RES_P ( zvalue )		1398523	1					
ANR	1398611	Argument	Z_RES_P ( zvalue )		1398523	0					
ANR	1398612	CallExpression	Z_RES_P ( zvalue )		1398523	0					
ANR	1398613	Callee	Z_RES_P		1398523	0					
ANR	1398614	Identifier	Z_RES_P		1398523	0					
ANR	1398615	ArgumentList	zvalue		1398523	1					
ANR	1398616	Argument	zvalue		1398523	0					
ANR	1398617	Identifier	zvalue		1398523	0					
ANR	1398618	BreakStatement	break ;	2119:3:65017:65022	1398523	9	True				
ANR	1398619	Label	case IS_REFERENCE :	2120:2:65026:65043	1398523	10	True				
ANR	1398620	Identifier	IS_REFERENCE		1398523	0					
ANR	1398621	CompoundStatement		19:4:423:460	1398523	11					
ANR	1398622	IdentifierDeclStatement	zend_reference * ref = Z_REF_P ( zvalue ) ;	2121:4:65051:65088	1398523	0	True				
ANR	1398623	IdentifierDecl	* ref = Z_REF_P ( zvalue )		1398523	0					
ANR	1398624	IdentifierDeclType	zend_reference *		1398523	0					
ANR	1398625	Identifier	ref		1398523	1					
ANR	1398626	AssignmentExpression	* ref = Z_REF_P ( zvalue )		1398523	2		=			
ANR	1398627	Identifier	ref		1398523	0					
ANR	1398628	CallExpression	Z_REF_P ( zvalue )		1398523	1					
ANR	1398629	Callee	Z_REF_P		1398523	0					
ANR	1398630	Identifier	Z_REF_P		1398523	0					
ANR	1398631	ArgumentList	zvalue		1398523	1					
ANR	1398632	Argument	zvalue		1398523	0					
ANR	1398633	Identifier	zvalue		1398523	0					
ANR	1398634	IfStatement	if ( -- GC_REFCOUNT ( ref ) == 0 )		1398523	1					
ANR	1398635	Condition	-- GC_REFCOUNT ( ref ) == 0	2123:8:65099:65121	1398523	0	True				
ANR	1398636	EqualityExpression	-- GC_REFCOUNT ( ref ) == 0		1398523	0		==			
ANR	1398637	UnaryExpression	-- GC_REFCOUNT ( ref )		1398523	0					
ANR	1398638	IncDec	--		1398523	0					
ANR	1398639	CallExpression	GC_REFCOUNT ( ref )		1398523	1					
ANR	1398640	Callee	GC_REFCOUNT		1398523	0					
ANR	1398641	Identifier	GC_REFCOUNT		1398523	0					
ANR	1398642	ArgumentList	ref		1398523	1					
ANR	1398643	Argument	ref		1398523	0					
ANR	1398644	Identifier	ref		1398523	0					
ANR	1398645	PrimaryExpression	0		1398523	1					
ANR	1398646	CompoundStatement		21:33:496:496	1398523	1					
ANR	1398647	IfStatement	if ( Z_REFCOUNTED ( ref -> val ) && Z_DELREF ( ref -> val ) == 0 )		1398523	0					
ANR	1398648	Condition	Z_REFCOUNTED ( ref -> val ) && Z_DELREF ( ref -> val ) == 0	2124:9:65135:65183	1398523	0	True				
ANR	1398649	AndExpression	Z_REFCOUNTED ( ref -> val ) && Z_DELREF ( ref -> val ) == 0		1398523	0		&&			
ANR	1398650	CallExpression	Z_REFCOUNTED ( ref -> val )		1398523	0					
ANR	1398651	Callee	Z_REFCOUNTED		1398523	0					
ANR	1398652	Identifier	Z_REFCOUNTED		1398523	0					
ANR	1398653	ArgumentList	ref -> val		1398523	1					
ANR	1398654	Argument	ref -> val		1398523	0					
ANR	1398655	PtrMemberAccess	ref -> val		1398523	0					
ANR	1398656	Identifier	ref		1398523	0					
ANR	1398657	Identifier	val		1398523	1					
ANR	1398658	EqualityExpression	Z_DELREF ( ref -> val ) == 0		1398523	1		==			
ANR	1398659	CallExpression	Z_DELREF ( ref -> val )		1398523	0					
ANR	1398660	Callee	Z_DELREF		1398523	0					
ANR	1398661	Identifier	Z_DELREF		1398523	0					
ANR	1398662	ArgumentList	ref -> val		1398523	1					
ANR	1398663	Argument	ref -> val		1398523	0					
ANR	1398664	PtrMemberAccess	ref -> val		1398523	0					
ANR	1398665	Identifier	ref		1398523	0					
ANR	1398666	Identifier	val		1398523	1					
ANR	1398667	PrimaryExpression	0		1398523	1					
ANR	1398668	CompoundStatement		22:60:558:558	1398523	1					
ANR	1398669	ExpressionStatement	zvalue = & ref -> val	2125:6:65194:65212	1398523	0	True				
ANR	1398670	AssignmentExpression	zvalue = & ref -> val		1398523	0		=			
ANR	1398671	Identifier	zvalue		1398523	0					
ANR	1398672	UnaryOperationExpression	& ref -> val		1398523	1					
ANR	1398673	UnaryOperator	&		1398523	0					
ANR	1398674	PtrMemberAccess	ref -> val		1398523	1					
ANR	1398675	Identifier	ref		1398523	0					
ANR	1398676	Identifier	val		1398523	1					
ANR	1398677	GotoStatement	goto tail_call ;	2126:6:65220:65234	1398523	1	True				
ANR	1398678	Identifier	tail_call		1398523	0					
ANR	1398679	BreakStatement	break ;	2130:3:65257:65262	1398523	12	True				
ANR	1398680	ReturnType	static void		1398523	1					
ANR	1398681	Identifier	accel_fast_zval_dtor		1398523	2					
ANR	1398682	ParameterList	zval * zvalue		1398523	3					
ANR	1398683	Parameter	zval * zvalue	2102:33:64613:64624	1398523	0	True				
ANR	1398684	ParameterType	zval *		1398523	0					
ANR	1398685	Identifier	zvalue		1398523	1					
ANR	1398686	CFGEntryNode	ENTRY		1398523		True				
ANR	1398687	CFGExitNode	EXIT		1398523		True				
ANR	1398688	Symbol	Z_OBJ_P		1398523						
ANR	1398689	Symbol	ref -> val		1398523						
ANR	1398690	Symbol	Z_ARR_P		1398523						
ANR	1398691	Symbol	symbol_table		1398523						
ANR	1398692	Symbol	zvalue		1398523						
ANR	1398693	Symbol	Z_TYPE_P		1398523						
ANR	1398694	Symbol	& EG		1398523						
ANR	1398695	Symbol	Z_REF_P		1398523						
ANR	1398696	Symbol	ref		1398523						
ANR	1398697	Symbol	& ref -> val		1398523						
ANR	1398698	Symbol	Z_ARRVAL_P		1398523						
ANR	1398699	Symbol	Z_RES_P		1398523						
ANR	1398700	Symbol	GC_REFCOUNT		1398523						
ANR	1398701	Symbol	* ref		1398523						
ANR	1398702	Symbol	Z_DELREF		1398523						
ANR	1398703	Symbol	Z_REFCOUNTED		1398523						
ANR	1398704	Function	accel_fast_hash_destroy	2134:0:65270:65505							
ANR	1398705	FunctionDef	accel_fast_hash_destroy (HashTable * ht)		1398704	0					
ANR	1398706	CompoundStatement		2135:0:65321:65505	1398704	0					
ANR	1398707	IdentifierDeclStatement	Bucket * p = ht -> arData ;	2136:1:65324:65346	1398704	0	True				
ANR	1398708	IdentifierDecl	* p = ht -> arData		1398704	0					
ANR	1398709	IdentifierDeclType	Bucket *		1398704	0					
ANR	1398710	Identifier	p		1398704	1					
ANR	1398711	AssignmentExpression	* p = ht -> arData		1398704	2		=			
ANR	1398712	Identifier	p		1398704	0					
ANR	1398713	PtrMemberAccess	ht -> arData		1398704	1					
ANR	1398714	Identifier	ht		1398704	0					
ANR	1398715	Identifier	arData		1398704	1					
ANR	1398716	IdentifierDeclStatement	Bucket * end = p + ht -> nNumUsed ;	2137:1:65349:65379	1398704	1	True				
ANR	1398717	IdentifierDecl	* end = p + ht -> nNumUsed		1398704	0					
ANR	1398718	IdentifierDeclType	Bucket *		1398704	0					
ANR	1398719	Identifier	end		1398704	1					
ANR	1398720	AssignmentExpression	* end = p + ht -> nNumUsed		1398704	2		=			
ANR	1398721	Identifier	end		1398704	0					
ANR	1398722	AdditiveExpression	p + ht -> nNumUsed		1398704	1		+			
ANR	1398723	Identifier	p		1398704	0					
ANR	1398724	PtrMemberAccess	ht -> nNumUsed		1398704	1					
ANR	1398725	Identifier	ht		1398704	0					
ANR	1398726	Identifier	nNumUsed		1398704	1					
ANR	1398727	WhileStatement	while ( p != end )		1398704	2					
ANR	1398728	Condition	p != end	2139:8:65390:65397	1398704	0	True				
ANR	1398729	EqualityExpression	p != end		1398704	0		!=			
ANR	1398730	Identifier	p		1398704	0					
ANR	1398731	Identifier	end		1398704	1					
ANR	1398732	CompoundStatement		5:18:78:78	1398704	1					
ANR	1398733	IfStatement	if ( Z_REFCOUNTED ( p -> val ) && Z_DELREF ( p -> val ) == 0 )		1398704	0					
ANR	1398734	Condition	Z_REFCOUNTED ( p -> val ) && Z_DELREF ( p -> val ) == 0	2140:6:65408:65452	1398704	0	True				
ANR	1398735	AndExpression	Z_REFCOUNTED ( p -> val ) && Z_DELREF ( p -> val ) == 0		1398704	0		&&			
ANR	1398736	CallExpression	Z_REFCOUNTED ( p -> val )		1398704	0					
ANR	1398737	Callee	Z_REFCOUNTED		1398704	0					
ANR	1398738	Identifier	Z_REFCOUNTED		1398704	0					
ANR	1398739	ArgumentList	p -> val		1398704	1					
ANR	1398740	Argument	p -> val		1398704	0					
ANR	1398741	PtrMemberAccess	p -> val		1398704	0					
ANR	1398742	Identifier	p		1398704	0					
ANR	1398743	Identifier	val		1398704	1					
ANR	1398744	EqualityExpression	Z_DELREF ( p -> val ) == 0		1398704	1		==			
ANR	1398745	CallExpression	Z_DELREF ( p -> val )		1398704	0					
ANR	1398746	Callee	Z_DELREF		1398704	0					
ANR	1398747	Identifier	Z_DELREF		1398704	0					
ANR	1398748	ArgumentList	p -> val		1398704	1					
ANR	1398749	Argument	p -> val		1398704	0					
ANR	1398750	PtrMemberAccess	p -> val		1398704	0					
ANR	1398751	Identifier	p		1398704	0					
ANR	1398752	Identifier	val		1398704	1					
ANR	1398753	PrimaryExpression	0		1398704	1					
ANR	1398754	CompoundStatement		6:53:133:133	1398704	1					
ANR	1398755	ExpressionStatement	accel_fast_zval_dtor ( & p -> val )	2141:3:65460:65489	1398704	0	True				
ANR	1398756	CallExpression	accel_fast_zval_dtor ( & p -> val )		1398704	0					
ANR	1398757	Callee	accel_fast_zval_dtor		1398704	0					
ANR	1398758	Identifier	accel_fast_zval_dtor		1398704	0					
ANR	1398759	ArgumentList	& p -> val		1398704	1					
ANR	1398760	Argument	& p -> val		1398704	0					
ANR	1398761	UnaryOperationExpression	& p -> val		1398704	0					
ANR	1398762	UnaryOperator	&		1398704	0					
ANR	1398763	PtrMemberAccess	p -> val		1398704	1					
ANR	1398764	Identifier	p		1398704	0					
ANR	1398765	Identifier	val		1398704	1					
ANR	1398766	ExpressionStatement	p ++	2143:2:65497:65500	1398704	1	True				
ANR	1398767	PostIncDecOperationExpression	p ++		1398704	0					
ANR	1398768	Identifier	p		1398704	0					
ANR	1398769	IncDec	++		1398704	1					
ANR	1398770	ReturnType	static void		1398704	1					
ANR	1398771	Identifier	accel_fast_hash_destroy		1398704	2					
ANR	1398772	ParameterList	HashTable * ht		1398704	3					
ANR	1398773	Parameter	HashTable * ht	2134:36:65306:65318	1398704	0	True				
ANR	1398774	ParameterType	HashTable *		1398704	0					
ANR	1398775	Identifier	ht		1398704	1					
ANR	1398776	CFGEntryNode	ENTRY		1398704		True				
ANR	1398777	CFGExitNode	EXIT		1398704		True				
ANR	1398778	Symbol	p		1398704						
ANR	1398779	Symbol	* ht		1398704						
ANR	1398780	Symbol	ht -> arData		1398704						
ANR	1398781	Symbol	end		1398704						
ANR	1398782	Symbol	* p		1398704						
ANR	1398783	Symbol	ht		1398704						
ANR	1398784	Symbol	p -> val		1398704						
ANR	1398785	Symbol	ht -> nNumUsed		1398704						
ANR	1398786	Symbol	Z_DELREF		1398704						
ANR	1398787	Symbol	Z_REFCOUNTED		1398704						
ANR	1398788	Symbol	& p -> val		1398704						
ANR	1398789	Function	zend_accel_fast_del_bucket	2147:0:65508:65967							
ANR	1398790	FunctionDef	"zend_accel_fast_del_bucket (HashTable * ht , uint32_t idx , Bucket * p)"		1398789	0					
ANR	1398791	CompoundStatement		2148:0:65594:65967	1398789	0					
ANR	1398792	IdentifierDeclStatement	uint32_t nIndex = p -> h | ht -> nTableMask ;	2149:1:65597:65636	1398789	0	True				
ANR	1398793	IdentifierDecl	nIndex = p -> h | ht -> nTableMask		1398789	0					
ANR	1398794	IdentifierDeclType	uint32_t		1398789	0					
ANR	1398795	Identifier	nIndex		1398789	1					
ANR	1398796	AssignmentExpression	nIndex = p -> h | ht -> nTableMask		1398789	2		=			
ANR	1398797	Identifier	nIndex		1398789	0					
ANR	1398798	InclusiveOrExpression	p -> h | ht -> nTableMask		1398789	1		|			
ANR	1398799	PtrMemberAccess	p -> h		1398789	0					
ANR	1398800	Identifier	p		1398789	0					
ANR	1398801	Identifier	h		1398789	1					
ANR	1398802	PtrMemberAccess	ht -> nTableMask		1398789	1					
ANR	1398803	Identifier	ht		1398789	0					
ANR	1398804	Identifier	nTableMask		1398789	1					
ANR	1398805	IdentifierDeclStatement	"uint32_t i = HT_HASH ( ht , nIndex ) ;"	2150:1:65639:65671	1398789	1	True				
ANR	1398806	IdentifierDecl	"i = HT_HASH ( ht , nIndex )"		1398789	0					
ANR	1398807	IdentifierDeclType	uint32_t		1398789	0					
ANR	1398808	Identifier	i		1398789	1					
ANR	1398809	AssignmentExpression	"i = HT_HASH ( ht , nIndex )"		1398789	2		=			
ANR	1398810	Identifier	i		1398789	0					
ANR	1398811	CallExpression	"HT_HASH ( ht , nIndex )"		1398789	1					
ANR	1398812	Callee	HT_HASH		1398789	0					
ANR	1398813	Identifier	HT_HASH		1398789	0					
ANR	1398814	ArgumentList	ht		1398789	1					
ANR	1398815	Argument	ht		1398789	0					
ANR	1398816	Identifier	ht		1398789	0					
ANR	1398817	Argument	nIndex		1398789	1					
ANR	1398818	Identifier	nIndex		1398789	0					
ANR	1398819	ExpressionStatement	ht -> nNumOfElements --	2152:1:65675:65695	1398789	2	True				
ANR	1398820	PostIncDecOperationExpression	ht -> nNumOfElements --		1398789	0					
ANR	1398821	PtrMemberAccess	ht -> nNumOfElements		1398789	0					
ANR	1398822	Identifier	ht		1398789	0					
ANR	1398823	Identifier	nNumOfElements		1398789	1					
ANR	1398824	IncDec	--		1398789	1					
ANR	1398825	IfStatement	if ( idx != i )		1398789	3					
ANR	1398826	Condition	idx != i	2153:5:65702:65709	1398789	0	True				
ANR	1398827	EqualityExpression	idx != i		1398789	0		!=			
ANR	1398828	Identifier	idx		1398789	0					
ANR	1398829	Identifier	i		1398789	1					
ANR	1398830	CompoundStatement		7:2:121:160	1398789	1					
ANR	1398831	IdentifierDeclStatement	"Bucket * prev = HT_HASH_TO_BUCKET ( ht , i ) ;"	2154:2:65716:65755	1398789	0	True				
ANR	1398832	IdentifierDecl	"* prev = HT_HASH_TO_BUCKET ( ht , i )"		1398789	0					
ANR	1398833	IdentifierDeclType	Bucket *		1398789	0					
ANR	1398834	Identifier	prev		1398789	1					
ANR	1398835	AssignmentExpression	"* prev = HT_HASH_TO_BUCKET ( ht , i )"		1398789	2		=			
ANR	1398836	Identifier	prev		1398789	0					
ANR	1398837	CallExpression	"HT_HASH_TO_BUCKET ( ht , i )"		1398789	1					
ANR	1398838	Callee	HT_HASH_TO_BUCKET		1398789	0					
ANR	1398839	Identifier	HT_HASH_TO_BUCKET		1398789	0					
ANR	1398840	ArgumentList	ht		1398789	1					
ANR	1398841	Argument	ht		1398789	0					
ANR	1398842	Identifier	ht		1398789	0					
ANR	1398843	Argument	i		1398789	1					
ANR	1398844	Identifier	i		1398789	0					
ANR	1398845	WhileStatement	while ( Z_NEXT ( prev -> val ) != idx )		1398789	1					
ANR	1398846	Condition	Z_NEXT ( prev -> val ) != idx	2155:9:65766:65789	1398789	0	True				
ANR	1398847	EqualityExpression	Z_NEXT ( prev -> val ) != idx		1398789	0		!=			
ANR	1398848	CallExpression	Z_NEXT ( prev -> val )		1398789	0					
ANR	1398849	Callee	Z_NEXT		1398789	0					
ANR	1398850	Identifier	Z_NEXT		1398789	0					
ANR	1398851	ArgumentList	prev -> val		1398789	1					
ANR	1398852	Argument	prev -> val		1398789	0					
ANR	1398853	PtrMemberAccess	prev -> val		1398789	0					
ANR	1398854	Identifier	prev		1398789	0					
ANR	1398855	Identifier	val		1398789	1					
ANR	1398856	Identifier	idx		1398789	1					
ANR	1398857	CompoundStatement		8:35:197:197	1398789	1					
ANR	1398858	ExpressionStatement	i = Z_NEXT ( prev -> val )	2156:3:65797:65818	1398789	0	True				
ANR	1398859	AssignmentExpression	i = Z_NEXT ( prev -> val )		1398789	0		=			
ANR	1398860	Identifier	i		1398789	0					
ANR	1398861	CallExpression	Z_NEXT ( prev -> val )		1398789	1					
ANR	1398862	Callee	Z_NEXT		1398789	0					
ANR	1398863	Identifier	Z_NEXT		1398789	0					
ANR	1398864	ArgumentList	prev -> val		1398789	1					
ANR	1398865	Argument	prev -> val		1398789	0					
ANR	1398866	PtrMemberAccess	prev -> val		1398789	0					
ANR	1398867	Identifier	prev		1398789	0					
ANR	1398868	Identifier	val		1398789	1					
ANR	1398869	ExpressionStatement	"prev = HT_HASH_TO_BUCKET ( ht , i )"	2157:3:65823:65854	1398789	1	True				
ANR	1398870	AssignmentExpression	"prev = HT_HASH_TO_BUCKET ( ht , i )"		1398789	0		=			
ANR	1398871	Identifier	prev		1398789	0					
ANR	1398872	CallExpression	"HT_HASH_TO_BUCKET ( ht , i )"		1398789	1					
ANR	1398873	Callee	HT_HASH_TO_BUCKET		1398789	0					
ANR	1398874	Identifier	HT_HASH_TO_BUCKET		1398789	0					
ANR	1398875	ArgumentList	ht		1398789	1					
ANR	1398876	Argument	ht		1398789	0					
ANR	1398877	Identifier	ht		1398789	0					
ANR	1398878	Argument	i		1398789	1					
ANR	1398879	Identifier	i		1398789	0					
ANR	1398880	ExpressionStatement	Z_NEXT ( prev -> val ) = Z_NEXT ( p -> val )	2159:2:65862:65896	1398789	2	True				
ANR	1398881	AssignmentExpression	Z_NEXT ( prev -> val ) = Z_NEXT ( p -> val )		1398789	0		=			
ANR	1398882	CallExpression	Z_NEXT ( prev -> val )		1398789	0					
ANR	1398883	Callee	Z_NEXT		1398789	0					
ANR	1398884	Identifier	Z_NEXT		1398789	0					
ANR	1398885	ArgumentList	prev -> val		1398789	1					
ANR	1398886	Argument	prev -> val		1398789	0					
ANR	1398887	PtrMemberAccess	prev -> val		1398789	0					
ANR	1398888	Identifier	prev		1398789	0					
ANR	1398889	Identifier	val		1398789	1					
ANR	1398890	CallExpression	Z_NEXT ( p -> val )		1398789	1					
ANR	1398891	Callee	Z_NEXT		1398789	0					
ANR	1398892	Identifier	Z_NEXT		1398789	0					
ANR	1398893	ArgumentList	p -> val		1398789	1					
ANR	1398894	Argument	p -> val		1398789	0					
ANR	1398895	PtrMemberAccess	p -> val		1398789	0					
ANR	1398896	Identifier	p		1398789	0					
ANR	1398897	Identifier	val		1398789	1					
ANR	1398898	ElseStatement	else		1398789	0					
ANR	1398899	CompoundStatement		13:9:312:312	1398789	0					
ANR	1398900	ExpressionStatement	"HT_HASH ( ht , p -> h | ht -> nTableMask ) = Z_NEXT ( p -> val )"	2161:2:65911:65962	1398789	0	True				
ANR	1398901	AssignmentExpression	"HT_HASH ( ht , p -> h | ht -> nTableMask ) = Z_NEXT ( p -> val )"		1398789	0		=			
ANR	1398902	CallExpression	"HT_HASH ( ht , p -> h | ht -> nTableMask )"		1398789	0					
ANR	1398903	Callee	HT_HASH		1398789	0					
ANR	1398904	Identifier	HT_HASH		1398789	0					
ANR	1398905	ArgumentList	ht		1398789	1					
ANR	1398906	Argument	ht		1398789	0					
ANR	1398907	Identifier	ht		1398789	0					
ANR	1398908	Argument	p -> h | ht -> nTableMask		1398789	1					
ANR	1398909	InclusiveOrExpression	p -> h | ht -> nTableMask		1398789	0		|			
ANR	1398910	PtrMemberAccess	p -> h		1398789	0					
ANR	1398911	Identifier	p		1398789	0					
ANR	1398912	Identifier	h		1398789	1					
ANR	1398913	PtrMemberAccess	ht -> nTableMask		1398789	1					
ANR	1398914	Identifier	ht		1398789	0					
ANR	1398915	Identifier	nTableMask		1398789	1					
ANR	1398916	CallExpression	Z_NEXT ( p -> val )		1398789	1					
ANR	1398917	Callee	Z_NEXT		1398789	0					
ANR	1398918	Identifier	Z_NEXT		1398789	0					
ANR	1398919	ArgumentList	p -> val		1398789	1					
ANR	1398920	Argument	p -> val		1398789	0					
ANR	1398921	PtrMemberAccess	p -> val		1398789	0					
ANR	1398922	Identifier	p		1398789	0					
ANR	1398923	Identifier	val		1398789	1					
ANR	1398924	ReturnType	static inline void		1398789	1					
ANR	1398925	Identifier	zend_accel_fast_del_bucket		1398789	2					
ANR	1398926	ParameterList	"HashTable * ht , uint32_t idx , Bucket * p"		1398789	3					
ANR	1398927	Parameter	HashTable * ht	2147:46:65554:65566	1398789	0	True				
ANR	1398928	ParameterType	HashTable *		1398789	0					
ANR	1398929	Identifier	ht		1398789	1					
ANR	1398930	Parameter	uint32_t idx	2147:61:65569:65580	1398789	1	True				
ANR	1398931	ParameterType	uint32_t		1398789	0					
ANR	1398932	Identifier	idx		1398789	1					
ANR	1398933	Parameter	Bucket * p	2147:75:65583:65591	1398789	2	True				
ANR	1398934	ParameterType	Bucket *		1398789	0					
ANR	1398935	Identifier	p		1398789	1					
ANR	1398936	CFGEntryNode	ENTRY		1398789		True				
ANR	1398937	CFGExitNode	EXIT		1398789		True				
ANR	1398938	Symbol	ht -> nTableMask		1398789						
ANR	1398939	Symbol	prev		1398789						
ANR	1398940	Symbol	prev -> val		1398789						
ANR	1398941	Symbol	nIndex		1398789						
ANR	1398942	Symbol	i		1398789						
ANR	1398943	Symbol	* prev		1398789						
ANR	1398944	Symbol	Z_NEXT		1398789						
ANR	1398945	Symbol	ht		1398789						
ANR	1398946	Symbol	p -> val		1398789						
ANR	1398947	Symbol	p		1398789						
ANR	1398948	Symbol	* ht		1398789						
ANR	1398949	Symbol	HT_HASH		1398789						
ANR	1398950	Symbol	* p		1398789						
ANR	1398951	Symbol	idx		1398789						
ANR	1398952	Symbol	p -> h		1398789						
ANR	1398953	Symbol	ht -> nNumOfElements		1398789						
ANR	1398954	Symbol	HT_HASH_TO_BUCKET		1398789						
ANR	1398955	Function	zend_accel_fast_shutdown	2165:0:65970:69425							
ANR	1398956	FunctionDef	zend_accel_fast_shutdown ()		1398955	0					
ANR	1398957	CompoundStatement		2166:0:66013:69425	1398955	0					
ANR	1398958	IfStatement	if ( EG ( full_tables_cleanup ) )		1398955	0					
ANR	1398959	Condition	EG ( full_tables_cleanup )	2167:5:66020:66042	1398955	0	True				
ANR	1398960	CallExpression	EG ( full_tables_cleanup )		1398955	0					
ANR	1398961	Callee	EG		1398955	0					
ANR	1398962	Identifier	EG		1398955	0					
ANR	1398963	ArgumentList	full_tables_cleanup		1398955	1					
ANR	1398964	Argument	full_tables_cleanup		1398955	0					
ANR	1398965	Identifier	full_tables_cleanup		1398955	0					
ANR	1398966	CompoundStatement		2:30:31:31	1398955	1					
ANR	1398967	ReturnStatement	return ;	2168:2:66049:66055	1398955	0	True				
ANR	1398968	IfStatement	if ( EG ( objects_store ) . top > 1 || zend_hash_num_elements ( & EG ( regular_list ) ) > 0 )		1398955	1					
ANR	1398969	Condition	EG ( objects_store ) . top > 1 || zend_hash_num_elements ( & EG ( regular_list ) ) > 0	2171:5:66066:66139	1398955	0	True				
ANR	1398970	OrExpression	EG ( objects_store ) . top > 1 || zend_hash_num_elements ( & EG ( regular_list ) ) > 0		1398955	0		||			
ANR	1398971	RelationalExpression	EG ( objects_store ) . top > 1		1398955	0		>			
ANR	1398972	MemberAccess	EG ( objects_store ) . top		1398955	0					
ANR	1398973	CallExpression	EG ( objects_store )		1398955	0					
ANR	1398974	Callee	EG		1398955	0					
ANR	1398975	Identifier	EG		1398955	0					
ANR	1398976	ArgumentList	objects_store		1398955	1					
ANR	1398977	Argument	objects_store		1398955	0					
ANR	1398978	Identifier	objects_store		1398955	0					
ANR	1398979	Identifier	top		1398955	1					
ANR	1398980	PrimaryExpression	1		1398955	1					
ANR	1398981	RelationalExpression	zend_hash_num_elements ( & EG ( regular_list ) ) > 0		1398955	1		>			
ANR	1398982	CallExpression	zend_hash_num_elements ( & EG ( regular_list ) )		1398955	0					
ANR	1398983	Callee	zend_hash_num_elements		1398955	0					
ANR	1398984	Identifier	zend_hash_num_elements		1398955	0					
ANR	1398985	ArgumentList	& EG ( regular_list )		1398955	1					
ANR	1398986	Argument	& EG ( regular_list )		1398955	0					
ANR	1398987	UnaryOperationExpression	& EG ( regular_list )		1398955	0					
ANR	1398988	UnaryOperator	&		1398955	0					
ANR	1398989	CallExpression	EG ( regular_list )		1398955	1					
ANR	1398990	Callee	EG		1398955	0					
ANR	1398991	Identifier	EG		1398955	0					
ANR	1398992	ArgumentList	regular_list		1398955	1					
ANR	1398993	Argument	regular_list		1398955	0					
ANR	1398994	Identifier	regular_list		1398955	0					
ANR	1398995	PrimaryExpression	0		1398955	1					
ANR	1398996	CompoundStatement		6:81:128:128	1398955	1					
ANR	1398997	Statement	zend_try	2173:2:66225:66232	1398955	0	True				
ANR	1398998	CompoundStatement		8:11:220:220	1398955	1					
ANR	1398999	Statement	ZEND_HASH_REVERSE_FOREACH	2174:3:66239:66263	1398955	0	True				
ANR	1399000	Statement	(	2174:28:66264:66264	1398955	1	True				
ANR	1399001	Statement	&	2174:29:66265:66265	1398955	2	True				
ANR	1399002	Statement	EG	2174:30:66266:66267	1398955	3	True				
ANR	1399003	Statement	(	2174:32:66268:66268	1398955	4	True				
ANR	1399004	Statement	symbol_table	2174:33:66269:66280	1398955	5	True				
ANR	1399005	Statement	)	2174:45:66281:66281	1398955	6	True				
ANR	1399006	Statement	","	2174:46:66282:66282	1398955	7	True				
ANR	1399007	Statement	0	2174:48:66284:66284	1398955	8	True				
ANR	1399008	Statement	)	2174:49:66285:66285	1398955	9	True				
ANR	1399009	CompoundStatement		9:51:273:273	1398955	10					
ANR	1399010	IfStatement	if ( Z_REFCOUNTED ( _p -> val ) && Z_DELREF ( _p -> val ) == 0 )		1398955	0					
ANR	1399011	Condition	Z_REFCOUNTED ( _p -> val ) && Z_DELREF ( _p -> val ) == 0	2175:8:66297:66343	1398955	0	True				
ANR	1399012	AndExpression	Z_REFCOUNTED ( _p -> val ) && Z_DELREF ( _p -> val ) == 0		1398955	0		&&			
ANR	1399013	CallExpression	Z_REFCOUNTED ( _p -> val )		1398955	0					
ANR	1399014	Callee	Z_REFCOUNTED		1398955	0					
ANR	1399015	Identifier	Z_REFCOUNTED		1398955	0					
ANR	1399016	ArgumentList	_p -> val		1398955	1					
ANR	1399017	Argument	_p -> val		1398955	0					
ANR	1399018	PtrMemberAccess	_p -> val		1398955	0					
ANR	1399019	Identifier	_p		1398955	0					
ANR	1399020	Identifier	val		1398955	1					
ANR	1399021	EqualityExpression	Z_DELREF ( _p -> val ) == 0		1398955	1		==			
ANR	1399022	CallExpression	Z_DELREF ( _p -> val )		1398955	0					
ANR	1399023	Callee	Z_DELREF		1398955	0					
ANR	1399024	Identifier	Z_DELREF		1398955	0					
ANR	1399025	ArgumentList	_p -> val		1398955	1					
ANR	1399026	Argument	_p -> val		1398955	0					
ANR	1399027	PtrMemberAccess	_p -> val		1398955	0					
ANR	1399028	Identifier	_p		1398955	0					
ANR	1399029	Identifier	val		1398955	1					
ANR	1399030	PrimaryExpression	0		1398955	1					
ANR	1399031	CompoundStatement		10:57:332:332	1398955	1					
ANR	1399032	ExpressionStatement	accel_fast_zval_dtor ( & _p -> val )	2176:5:66353:66383	1398955	0	True				
ANR	1399033	CallExpression	accel_fast_zval_dtor ( & _p -> val )		1398955	0					
ANR	1399034	Callee	accel_fast_zval_dtor		1398955	0					
ANR	1399035	Identifier	accel_fast_zval_dtor		1398955	0					
ANR	1399036	ArgumentList	& _p -> val		1398955	1					
ANR	1399037	Argument	& _p -> val		1398955	0					
ANR	1399038	UnaryOperationExpression	& _p -> val		1398955	0					
ANR	1399039	UnaryOperator	&		1398955	0					
ANR	1399040	PtrMemberAccess	_p -> val		1398955	1					
ANR	1399041	Identifier	_p		1398955	0					
ANR	1399042	Identifier	val		1398955	1					
ANR	1399043	ExpressionStatement	"zend_accel_fast_del_bucket ( & EG ( symbol_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2178:4:66395:66468	1398955	1	True				
ANR	1399044	CallExpression	"zend_accel_fast_del_bucket ( & EG ( symbol_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		1398955	0					
ANR	1399045	Callee	zend_accel_fast_del_bucket		1398955	0					
ANR	1399046	Identifier	zend_accel_fast_del_bucket		1398955	0					
ANR	1399047	ArgumentList	& EG ( symbol_table )		1398955	1					
ANR	1399048	Argument	& EG ( symbol_table )		1398955	0					
ANR	1399049	UnaryOperationExpression	& EG ( symbol_table )		1398955	0					
ANR	1399050	UnaryOperator	&		1398955	0					
ANR	1399051	CallExpression	EG ( symbol_table )		1398955	1					
ANR	1399052	Callee	EG		1398955	0					
ANR	1399053	Identifier	EG		1398955	0					
ANR	1399054	ArgumentList	symbol_table		1398955	1					
ANR	1399055	Argument	symbol_table		1398955	0					
ANR	1399056	Identifier	symbol_table		1398955	0					
ANR	1399057	Argument	HT_IDX_TO_HASH ( _idx - 1 )		1398955	1					
ANR	1399058	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		1398955	0					
ANR	1399059	Callee	HT_IDX_TO_HASH		1398955	0					
ANR	1399060	Identifier	HT_IDX_TO_HASH		1398955	0					
ANR	1399061	ArgumentList	_idx - 1		1398955	1					
ANR	1399062	Argument	_idx - 1		1398955	0					
ANR	1399063	AdditiveExpression	_idx - 1		1398955	0		-			
ANR	1399064	Identifier	_idx		1398955	0					
ANR	1399065	PrimaryExpression	1		1398955	1					
ANR	1399066	Argument	_p		1398955	2					
ANR	1399067	Identifier	_p		1398955	0					
ANR	1399068	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2179:5:66475:66498	1398955	11	True				
ANR	1399069	CallExpression	ZEND_HASH_FOREACH_END ( )		1398955	0					
ANR	1399070	Callee	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399071	Identifier	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399072	ArgumentList			1398955	1					
ANR	1399073	ExpressionStatement	zend_end_try ( )	2180:4:66504:66518	1398955	2	True				
ANR	1399074	CallExpression	zend_end_try ( )		1398955	0					
ANR	1399075	Callee	zend_end_try		1398955	0					
ANR	1399076	Identifier	zend_end_try		1398955	0					
ANR	1399077	ArgumentList			1398955	1					
ANR	1399078	ExpressionStatement	"zend_hash_init ( & EG ( symbol_table ) , 8 , NULL , NULL , 0 )"	2181:2:66522:66573	1398955	3	True				
ANR	1399079	CallExpression	"zend_hash_init ( & EG ( symbol_table ) , 8 , NULL , NULL , 0 )"		1398955	0					
ANR	1399080	Callee	zend_hash_init		1398955	0					
ANR	1399081	Identifier	zend_hash_init		1398955	0					
ANR	1399082	ArgumentList	& EG ( symbol_table )		1398955	1					
ANR	1399083	Argument	& EG ( symbol_table )		1398955	0					
ANR	1399084	UnaryOperationExpression	& EG ( symbol_table )		1398955	0					
ANR	1399085	UnaryOperator	&		1398955	0					
ANR	1399086	CallExpression	EG ( symbol_table )		1398955	1					
ANR	1399087	Callee	EG		1398955	0					
ANR	1399088	Identifier	EG		1398955	0					
ANR	1399089	ArgumentList	symbol_table		1398955	1					
ANR	1399090	Argument	symbol_table		1398955	0					
ANR	1399091	Identifier	symbol_table		1398955	0					
ANR	1399092	Argument	8		1398955	1					
ANR	1399093	PrimaryExpression	8		1398955	0					
ANR	1399094	Argument	NULL		1398955	2					
ANR	1399095	Identifier	NULL		1398955	0					
ANR	1399096	Argument	NULL		1398955	3					
ANR	1399097	Identifier	NULL		1398955	0					
ANR	1399098	Argument	0		1398955	4					
ANR	1399099	PrimaryExpression	0		1398955	0					
ANR	1399100	Statement	ZEND_HASH_REVERSE_FOREACH	2183:2:66578:66602	1398955	4	True				
ANR	1399101	Statement	(	2183:27:66603:66603	1398955	5	True				
ANR	1399102	Statement	EG	2183:28:66604:66605	1398955	6	True				
ANR	1399103	Statement	(	2183:30:66606:66606	1398955	7	True				
ANR	1399104	Statement	function_table	2183:31:66607:66620	1398955	8	True				
ANR	1399105	Statement	)	2183:45:66621:66621	1398955	9	True				
ANR	1399106	Statement	","	2183:46:66622:66622	1398955	10	True				
ANR	1399107	Statement	0	2183:48:66624:66624	1398955	11	True				
ANR	1399108	Statement	)	2183:49:66625:66625	1398955	12	True				
ANR	1399109	CompoundStatement		19:3:618:654	1398955	13					
ANR	1399110	IdentifierDeclStatement	zend_function * func = Z_PTR ( _p -> val ) ;	2184:3:66632:66668	1398955	0	True				
ANR	1399111	IdentifierDecl	* func = Z_PTR ( _p -> val )		1398955	0					
ANR	1399112	IdentifierDeclType	zend_function *		1398955	0					
ANR	1399113	Identifier	func		1398955	1					
ANR	1399114	AssignmentExpression	* func = Z_PTR ( _p -> val )		1398955	2		=			
ANR	1399115	Identifier	func		1398955	0					
ANR	1399116	CallExpression	Z_PTR ( _p -> val )		1398955	1					
ANR	1399117	Callee	Z_PTR		1398955	0					
ANR	1399118	Identifier	Z_PTR		1398955	0					
ANR	1399119	ArgumentList	_p -> val		1398955	1					
ANR	1399120	Argument	_p -> val		1398955	0					
ANR	1399121	PtrMemberAccess	_p -> val		1398955	0					
ANR	1399122	Identifier	_p		1398955	0					
ANR	1399123	Identifier	val		1398955	1					
ANR	1399124	IfStatement	if ( func -> type == ZEND_INTERNAL_FUNCTION )		1398955	1					
ANR	1399125	Condition	func -> type == ZEND_INTERNAL_FUNCTION	2186:7:66678:66713	1398955	0	True				
ANR	1399126	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		1398955	0		==			
ANR	1399127	PtrMemberAccess	func -> type		1398955	0					
ANR	1399128	Identifier	func		1398955	0					
ANR	1399129	Identifier	type		1398955	1					
ANR	1399130	Identifier	ZEND_INTERNAL_FUNCTION		1398955	1					
ANR	1399131	CompoundStatement		21:45:702:702	1398955	1					
ANR	1399132	BreakStatement	break ;	2187:4:66722:66727	1398955	0	True				
ANR	1399133	ElseStatement	else		1398955	0					
ANR	1399134	CompoundStatement		23:10:725:725	1398955	0					
ANR	1399135	IfStatement	if ( func -> op_array . static_variables )		1398955	0					
ANR	1399136	Condition	func -> op_array . static_variables	2189:8:66749:66779	1398955	0	True				
ANR	1399137	MemberAccess	func -> op_array . static_variables		1398955	0					
ANR	1399138	PtrMemberAccess	func -> op_array		1398955	0					
ANR	1399139	Identifier	func		1398955	0					
ANR	1399140	Identifier	op_array		1398955	1					
ANR	1399141	Identifier	static_variables		1398955	1					
ANR	1399142	CompoundStatement		24:41:768:768	1398955	1					
ANR	1399143	IfStatement	if ( ! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE ) )		1398955	0					
ANR	1399144	Condition	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )	2190:9:66793:66857	1398955	0	True				
ANR	1399145	UnaryOperationExpression	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )		1398955	0					
ANR	1399146	UnaryOperator	!		1398955	0					
ANR	1399147	BitAndExpression	GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE		1398955	1		&			
ANR	1399148	CallExpression	GC_FLAGS ( func -> op_array . static_variables )		1398955	0					
ANR	1399149	Callee	GC_FLAGS		1398955	0					
ANR	1399150	Identifier	GC_FLAGS		1398955	0					
ANR	1399151	ArgumentList	func -> op_array . static_variables		1398955	1					
ANR	1399152	Argument	func -> op_array . static_variables		1398955	0					
ANR	1399153	MemberAccess	func -> op_array . static_variables		1398955	0					
ANR	1399154	PtrMemberAccess	func -> op_array		1398955	0					
ANR	1399155	Identifier	func		1398955	0					
ANR	1399156	Identifier	op_array		1398955	1					
ANR	1399157	Identifier	static_variables		1398955	1					
ANR	1399158	Identifier	IS_ARRAY_IMMUTABLE		1398955	1					
ANR	1399159	CompoundStatement		25:76:846:846	1398955	1					
ANR	1399160	IfStatement	if ( -- GC_REFCOUNT ( func -> op_array . static_variables ) == 0 )		1398955	0					
ANR	1399161	Condition	-- GC_REFCOUNT ( func -> op_array . static_variables ) == 0	2191:10:66872:66922	1398955	0	True				
ANR	1399162	EqualityExpression	-- GC_REFCOUNT ( func -> op_array . static_variables ) == 0		1398955	0		==			
ANR	1399163	UnaryExpression	-- GC_REFCOUNT ( func -> op_array . static_variables )		1398955	0					
ANR	1399164	IncDec	--		1398955	0					
ANR	1399165	CallExpression	GC_REFCOUNT ( func -> op_array . static_variables )		1398955	1					
ANR	1399166	Callee	GC_REFCOUNT		1398955	0					
ANR	1399167	Identifier	GC_REFCOUNT		1398955	0					
ANR	1399168	ArgumentList	func -> op_array . static_variables		1398955	1					
ANR	1399169	Argument	func -> op_array . static_variables		1398955	0					
ANR	1399170	MemberAccess	func -> op_array . static_variables		1398955	0					
ANR	1399171	PtrMemberAccess	func -> op_array		1398955	0					
ANR	1399172	Identifier	func		1398955	0					
ANR	1399173	Identifier	op_array		1398955	1					
ANR	1399174	Identifier	static_variables		1398955	1					
ANR	1399175	PrimaryExpression	0		1398955	1					
ANR	1399176	CompoundStatement		26:63:911:911	1398955	1					
ANR	1399177	ExpressionStatement	accel_fast_hash_destroy ( func -> op_array . static_variables )	2192:7:66934:66990	1398955	0	True				
ANR	1399178	CallExpression	accel_fast_hash_destroy ( func -> op_array . static_variables )		1398955	0					
ANR	1399179	Callee	accel_fast_hash_destroy		1398955	0					
ANR	1399180	Identifier	accel_fast_hash_destroy		1398955	0					
ANR	1399181	ArgumentList	func -> op_array . static_variables		1398955	1					
ANR	1399182	Argument	func -> op_array . static_variables		1398955	0					
ANR	1399183	MemberAccess	func -> op_array . static_variables		1398955	0					
ANR	1399184	PtrMemberAccess	func -> op_array		1398955	0					
ANR	1399185	Identifier	func		1398955	0					
ANR	1399186	Identifier	op_array		1398955	1					
ANR	1399187	Identifier	static_variables		1398955	1					
ANR	1399188	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( function_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2196:4:67017:67091	1398955	1	True				
ANR	1399189	CallExpression	"zend_accel_fast_del_bucket ( EG ( function_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		1398955	0					
ANR	1399190	Callee	zend_accel_fast_del_bucket		1398955	0					
ANR	1399191	Identifier	zend_accel_fast_del_bucket		1398955	0					
ANR	1399192	ArgumentList	EG ( function_table )		1398955	1					
ANR	1399193	Argument	EG ( function_table )		1398955	0					
ANR	1399194	CallExpression	EG ( function_table )		1398955	0					
ANR	1399195	Callee	EG		1398955	0					
ANR	1399196	Identifier	EG		1398955	0					
ANR	1399197	ArgumentList	function_table		1398955	1					
ANR	1399198	Argument	function_table		1398955	0					
ANR	1399199	Identifier	function_table		1398955	0					
ANR	1399200	Argument	HT_IDX_TO_HASH ( _idx - 1 )		1398955	1					
ANR	1399201	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		1398955	0					
ANR	1399202	Callee	HT_IDX_TO_HASH		1398955	0					
ANR	1399203	Identifier	HT_IDX_TO_HASH		1398955	0					
ANR	1399204	ArgumentList	_idx - 1		1398955	1					
ANR	1399205	Argument	_idx - 1		1398955	0					
ANR	1399206	AdditiveExpression	_idx - 1		1398955	0		-			
ANR	1399207	Identifier	_idx		1398955	0					
ANR	1399208	PrimaryExpression	1		1398955	1					
ANR	1399209	Argument	_p		1398955	2					
ANR	1399210	Identifier	_p		1398955	0					
ANR	1399211	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2198:4:67102:67125	1398955	14	True				
ANR	1399212	CallExpression	ZEND_HASH_FOREACH_END ( )		1398955	0					
ANR	1399213	Callee	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399214	Identifier	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399215	ArgumentList			1398955	1					
ANR	1399216	Statement	ZEND_HASH_REVERSE_FOREACH	2200:2:67130:67154	1398955	15	True				
ANR	1399217	Statement	(	2200:27:67155:67155	1398955	16	True				
ANR	1399218	Statement	EG	2200:28:67156:67157	1398955	17	True				
ANR	1399219	Statement	(	2200:30:67158:67158	1398955	18	True				
ANR	1399220	Statement	class_table	2200:31:67159:67169	1398955	19	True				
ANR	1399221	Statement	)	2200:42:67170:67170	1398955	20	True				
ANR	1399222	Statement	","	2200:43:67171:67171	1398955	21	True				
ANR	1399223	Statement	0	2200:45:67173:67173	1398955	22	True				
ANR	1399224	Statement	)	2200:46:67174:67174	1398955	23	True				
ANR	1399225	CompoundStatement		36:3:1167:1204	1398955	24					
ANR	1399226	IdentifierDeclStatement	zend_class_entry * ce = Z_PTR ( _p -> val ) ;	2201:3:67181:67218	1398955	0	True				
ANR	1399227	IdentifierDecl	* ce = Z_PTR ( _p -> val )		1398955	0					
ANR	1399228	IdentifierDeclType	zend_class_entry *		1398955	0					
ANR	1399229	Identifier	ce		1398955	1					
ANR	1399230	AssignmentExpression	* ce = Z_PTR ( _p -> val )		1398955	2		=			
ANR	1399231	Identifier	ce		1398955	0					
ANR	1399232	CallExpression	Z_PTR ( _p -> val )		1398955	1					
ANR	1399233	Callee	Z_PTR		1398955	0					
ANR	1399234	Identifier	Z_PTR		1398955	0					
ANR	1399235	ArgumentList	_p -> val		1398955	1					
ANR	1399236	Argument	_p -> val		1398955	0					
ANR	1399237	PtrMemberAccess	_p -> val		1398955	0					
ANR	1399238	Identifier	_p		1398955	0					
ANR	1399239	Identifier	val		1398955	1					
ANR	1399240	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		1398955	1					
ANR	1399241	Condition	ce -> type == ZEND_INTERNAL_CLASS	2203:7:67228:67258	1398955	0	True				
ANR	1399242	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		1398955	0		==			
ANR	1399243	PtrMemberAccess	ce -> type		1398955	0					
ANR	1399244	Identifier	ce		1398955	0					
ANR	1399245	Identifier	type		1398955	1					
ANR	1399246	Identifier	ZEND_INTERNAL_CLASS		1398955	1					
ANR	1399247	CompoundStatement		38:40:1247:1247	1398955	1					
ANR	1399248	BreakStatement	break ;	2204:4:67267:67272	1398955	0	True				
ANR	1399249	ElseStatement	else		1398955	0					
ANR	1399250	CompoundStatement		40:10:1270:1270	1398955	0					
ANR	1399251	IfStatement	if ( ce -> ce_flags & ZEND_HAS_STATIC_IN_METHODS )		1398955	0					
ANR	1399252	Condition	ce -> ce_flags & ZEND_HAS_STATIC_IN_METHODS	2206:8:67294:67334	1398955	0	True				
ANR	1399253	BitAndExpression	ce -> ce_flags & ZEND_HAS_STATIC_IN_METHODS		1398955	0		&			
ANR	1399254	PtrMemberAccess	ce -> ce_flags		1398955	0					
ANR	1399255	Identifier	ce		1398955	0					
ANR	1399256	Identifier	ce_flags		1398955	1					
ANR	1399257	Identifier	ZEND_HAS_STATIC_IN_METHODS		1398955	1					
ANR	1399258	CompoundStatement		42:5:1330:1349	1398955	1					
ANR	1399259	IdentifierDeclStatement	zend_function * func ;	2207:5:67344:67363	1398955	0	True				
ANR	1399260	IdentifierDecl	* func		1398955	0					
ANR	1399261	IdentifierDeclType	zend_function *		1398955	0					
ANR	1399262	Identifier	func		1398955	1					
ANR	1399263	Statement	ZEND_HASH_FOREACH_PTR	2209:5:67371:67391	1398955	1	True				
ANR	1399264	Statement	(	2209:26:67392:67392	1398955	2	True				
ANR	1399265	Statement	&	2209:27:67393:67393	1398955	3	True				
ANR	1399266	Statement	ce	2209:28:67394:67395	1398955	4	True				
ANR	1399267	Statement	->	2209:30:67396:67397	1398955	5	True				
ANR	1399268	Statement	function_table	2209:32:67398:67411	1398955	6	True				
ANR	1399269	Statement	","	2209:46:67412:67412	1398955	7	True				
ANR	1399270	Statement	func	2209:48:67414:67417	1398955	8	True				
ANR	1399271	Statement	)	2209:52:67418:67418	1398955	9	True				
ANR	1399272	CompoundStatement		44:54:1406:1406	1398955	10					
ANR	1399273	IfStatement	if ( func -> type == ZEND_USER_FUNCTION )		1398955	0					
ANR	1399274	Condition	func -> type == ZEND_USER_FUNCTION	2210:10:67432:67463	1398955	0	True				
ANR	1399275	EqualityExpression	func -> type == ZEND_USER_FUNCTION		1398955	0		==			
ANR	1399276	PtrMemberAccess	func -> type		1398955	0					
ANR	1399277	Identifier	func		1398955	0					
ANR	1399278	Identifier	type		1398955	1					
ANR	1399279	Identifier	ZEND_USER_FUNCTION		1398955	1					
ANR	1399280	CompoundStatement		45:44:1452:1452	1398955	1					
ANR	1399281	IfStatement	if ( func -> op_array . static_variables )		1398955	0					
ANR	1399282	Condition	func -> op_array . static_variables	2211:11:67479:67509	1398955	0	True				
ANR	1399283	MemberAccess	func -> op_array . static_variables		1398955	0					
ANR	1399284	PtrMemberAccess	func -> op_array		1398955	0					
ANR	1399285	Identifier	func		1398955	0					
ANR	1399286	Identifier	op_array		1398955	1					
ANR	1399287	Identifier	static_variables		1398955	1					
ANR	1399288	CompoundStatement		46:44:1498:1498	1398955	1					
ANR	1399289	IfStatement	if ( ! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE ) )		1398955	0					
ANR	1399290	Condition	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )	2212:12:67526:67590	1398955	0	True				
ANR	1399291	UnaryOperationExpression	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )		1398955	0					
ANR	1399292	UnaryOperator	!		1398955	0					
ANR	1399293	BitAndExpression	GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE		1398955	1		&			
ANR	1399294	CallExpression	GC_FLAGS ( func -> op_array . static_variables )		1398955	0					
ANR	1399295	Callee	GC_FLAGS		1398955	0					
ANR	1399296	Identifier	GC_FLAGS		1398955	0					
ANR	1399297	ArgumentList	func -> op_array . static_variables		1398955	1					
ANR	1399298	Argument	func -> op_array . static_variables		1398955	0					
ANR	1399299	MemberAccess	func -> op_array . static_variables		1398955	0					
ANR	1399300	PtrMemberAccess	func -> op_array		1398955	0					
ANR	1399301	Identifier	func		1398955	0					
ANR	1399302	Identifier	op_array		1398955	1					
ANR	1399303	Identifier	static_variables		1398955	1					
ANR	1399304	Identifier	IS_ARRAY_IMMUTABLE		1398955	1					
ANR	1399305	CompoundStatement		47:79:1579:1579	1398955	1					
ANR	1399306	IfStatement	if ( -- GC_REFCOUNT ( func -> op_array . static_variables ) == 0 )		1398955	0					
ANR	1399307	Condition	-- GC_REFCOUNT ( func -> op_array . static_variables ) == 0	2213:13:67608:67658	1398955	0	True				
ANR	1399308	EqualityExpression	-- GC_REFCOUNT ( func -> op_array . static_variables ) == 0		1398955	0		==			
ANR	1399309	UnaryExpression	-- GC_REFCOUNT ( func -> op_array . static_variables )		1398955	0					
ANR	1399310	IncDec	--		1398955	0					
ANR	1399311	CallExpression	GC_REFCOUNT ( func -> op_array . static_variables )		1398955	1					
ANR	1399312	Callee	GC_REFCOUNT		1398955	0					
ANR	1399313	Identifier	GC_REFCOUNT		1398955	0					
ANR	1399314	ArgumentList	func -> op_array . static_variables		1398955	1					
ANR	1399315	Argument	func -> op_array . static_variables		1398955	0					
ANR	1399316	MemberAccess	func -> op_array . static_variables		1398955	0					
ANR	1399317	PtrMemberAccess	func -> op_array		1398955	0					
ANR	1399318	Identifier	func		1398955	0					
ANR	1399319	Identifier	op_array		1398955	1					
ANR	1399320	Identifier	static_variables		1398955	1					
ANR	1399321	PrimaryExpression	0		1398955	1					
ANR	1399322	CompoundStatement		48:66:1647:1647	1398955	1					
ANR	1399323	ExpressionStatement	accel_fast_hash_destroy ( func -> op_array . static_variables )	2214:10:67673:67729	1398955	0	True				
ANR	1399324	CallExpression	accel_fast_hash_destroy ( func -> op_array . static_variables )		1398955	0					
ANR	1399325	Callee	accel_fast_hash_destroy		1398955	0					
ANR	1399326	Identifier	accel_fast_hash_destroy		1398955	0					
ANR	1399327	ArgumentList	func -> op_array . static_variables		1398955	1					
ANR	1399328	Argument	func -> op_array . static_variables		1398955	0					
ANR	1399329	MemberAccess	func -> op_array . static_variables		1398955	0					
ANR	1399330	PtrMemberAccess	func -> op_array		1398955	0					
ANR	1399331	Identifier	func		1398955	0					
ANR	1399332	Identifier	op_array		1398955	1					
ANR	1399333	Identifier	static_variables		1398955	1					
ANR	1399334	ExpressionStatement	func -> op_array . static_variables = NULL	2217:8:67760:67798	1398955	1	True				
ANR	1399335	AssignmentExpression	func -> op_array . static_variables = NULL		1398955	0		=			
ANR	1399336	MemberAccess	func -> op_array . static_variables		1398955	0					
ANR	1399337	PtrMemberAccess	func -> op_array		1398955	0					
ANR	1399338	Identifier	func		1398955	0					
ANR	1399339	Identifier	op_array		1398955	1					
ANR	1399340	Identifier	static_variables		1398955	1					
ANR	1399341	Identifier	NULL		1398955	1					
ANR	1399342	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2220:7:67824:67847	1398955	11	True				
ANR	1399343	CallExpression	ZEND_HASH_FOREACH_END ( )		1398955	0					
ANR	1399344	Callee	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399345	Identifier	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399346	ArgumentList			1398955	1					
ANR	1399347	IfStatement	if ( ce -> static_members_table )		1398955	1					
ANR	1399348	Condition	ce -> static_members_table	2222:8:67863:67886	1398955	0	True				
ANR	1399349	PtrMemberAccess	ce -> static_members_table		1398955	0					
ANR	1399350	Identifier	ce		1398955	0					
ANR	1399351	Identifier	static_members_table		1398955	1					
ANR	1399352	CompoundStatement		58:5:1882:1887	1398955	1					
ANR	1399353	IdentifierDeclStatement	int i ;	2223:5:67896:67901	1398955	0	True				
ANR	1399354	IdentifierDecl	i		1398955	0					
ANR	1399355	IdentifierDeclType	int		1398955	0					
ANR	1399356	Identifier	i		1398955	1					
ANR	1399357	ForStatement	for ( i = 0 ; i < ce -> default_static_members_count ; i ++ )		1398955	1					
ANR	1399358	ForInit	i = 0 ;	2225:10:67914:67919	1398955	0	True				
ANR	1399359	AssignmentExpression	i = 0		1398955	0		=			
ANR	1399360	Identifier	i		1398955	0					
ANR	1399361	PrimaryExpression	0		1398955	1					
ANR	1399362	Condition	i < ce -> default_static_members_count	2225:17:67921:67956	1398955	1	True				
ANR	1399363	RelationalExpression	i < ce -> default_static_members_count		1398955	0		<			
ANR	1399364	Identifier	i		1398955	0					
ANR	1399365	PtrMemberAccess	ce -> default_static_members_count		1398955	1					
ANR	1399366	Identifier	ce		1398955	0					
ANR	1399367	Identifier	default_static_members_count		1398955	1					
ANR	1399368	PostIncDecOperationExpression	i ++	2225:55:67959:67961	1398955	2	True				
ANR	1399369	Identifier	i		1398955	0					
ANR	1399370	IncDec	++		1398955	1					
ANR	1399371	CompoundStatement		61:6:1958:1997	1398955	3					
ANR	1399372	IdentifierDeclStatement	zval * zv = & ce -> static_members_table [ i ] ;	2226:6:67972:68011	1398955	0	True				
ANR	1399373	IdentifierDecl	* zv = & ce -> static_members_table [ i ]		1398955	0					
ANR	1399374	IdentifierDeclType	zval *		1398955	0					
ANR	1399375	Identifier	zv		1398955	1					
ANR	1399376	AssignmentExpression	* zv = & ce -> static_members_table [ i ]		1398955	2		=			
ANR	1399377	Identifier	zv		1398955	0					
ANR	1399378	UnaryOperationExpression	& ce -> static_members_table [ i ]		1398955	1					
ANR	1399379	UnaryOperator	&		1398955	0					
ANR	1399380	ArrayIndexing	ce -> static_members_table [ i ]		1398955	1					
ANR	1399381	PtrMemberAccess	ce -> static_members_table		1398955	0					
ANR	1399382	Identifier	ce		1398955	0					
ANR	1399383	Identifier	static_members_table		1398955	1					
ANR	1399384	Identifier	i		1398955	1					
ANR	1399385	ExpressionStatement	ZVAL_UNDEF ( & ce -> static_members_table [ i ] )	2227:6:68019:68059	1398955	1	True				
ANR	1399386	CallExpression	ZVAL_UNDEF ( & ce -> static_members_table [ i ] )		1398955	0					
ANR	1399387	Callee	ZVAL_UNDEF		1398955	0					
ANR	1399388	Identifier	ZVAL_UNDEF		1398955	0					
ANR	1399389	ArgumentList	& ce -> static_members_table [ i ]		1398955	1					
ANR	1399390	Argument	& ce -> static_members_table [ i ]		1398955	0					
ANR	1399391	UnaryOperationExpression	& ce -> static_members_table [ i ]		1398955	0					
ANR	1399392	UnaryOperator	&		1398955	0					
ANR	1399393	ArrayIndexing	ce -> static_members_table [ i ]		1398955	1					
ANR	1399394	PtrMemberAccess	ce -> static_members_table		1398955	0					
ANR	1399395	Identifier	ce		1398955	0					
ANR	1399396	Identifier	static_members_table		1398955	1					
ANR	1399397	Identifier	i		1398955	1					
ANR	1399398	IfStatement	if ( Z_REFCOUNTED_P ( zv ) && Z_DELREF_P ( zv ) == 0 )		1398955	2					
ANR	1399399	Condition	Z_REFCOUNTED_P ( zv ) && Z_DELREF_P ( zv ) == 0	2228:10:68071:68111	1398955	0	True				
ANR	1399400	AndExpression	Z_REFCOUNTED_P ( zv ) && Z_DELREF_P ( zv ) == 0		1398955	0		&&			
ANR	1399401	CallExpression	Z_REFCOUNTED_P ( zv )		1398955	0					
ANR	1399402	Callee	Z_REFCOUNTED_P		1398955	0					
ANR	1399403	Identifier	Z_REFCOUNTED_P		1398955	0					
ANR	1399404	ArgumentList	zv		1398955	1					
ANR	1399405	Argument	zv		1398955	0					
ANR	1399406	Identifier	zv		1398955	0					
ANR	1399407	EqualityExpression	Z_DELREF_P ( zv ) == 0		1398955	1		==			
ANR	1399408	CallExpression	Z_DELREF_P ( zv )		1398955	0					
ANR	1399409	Callee	Z_DELREF_P		1398955	0					
ANR	1399410	Identifier	Z_DELREF_P		1398955	0					
ANR	1399411	ArgumentList	zv		1398955	1					
ANR	1399412	Argument	zv		1398955	0					
ANR	1399413	Identifier	zv		1398955	0					
ANR	1399414	PrimaryExpression	0		1398955	1					
ANR	1399415	CompoundStatement		63:53:2100:2100	1398955	1					
ANR	1399416	ExpressionStatement	accel_fast_zval_dtor ( zv )	2229:7:68123:68147	1398955	0	True				
ANR	1399417	CallExpression	accel_fast_zval_dtor ( zv )		1398955	0					
ANR	1399418	Callee	accel_fast_zval_dtor		1398955	0					
ANR	1399419	Identifier	accel_fast_zval_dtor		1398955	0					
ANR	1399420	ArgumentList	zv		1398955	1					
ANR	1399421	Argument	zv		1398955	0					
ANR	1399422	Identifier	zv		1398955	0					
ANR	1399423	ExpressionStatement	ce -> static_members_table = NULL	2232:5:68169:68200	1398955	2	True				
ANR	1399424	AssignmentExpression	ce -> static_members_table = NULL		1398955	0		=			
ANR	1399425	PtrMemberAccess	ce -> static_members_table		1398955	0					
ANR	1399426	Identifier	ce		1398955	0					
ANR	1399427	Identifier	static_members_table		1398955	1					
ANR	1399428	Identifier	NULL		1398955	1					
ANR	1399429	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( class_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2234:4:68212:68283	1398955	2	True				
ANR	1399430	CallExpression	"zend_accel_fast_del_bucket ( EG ( class_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		1398955	0					
ANR	1399431	Callee	zend_accel_fast_del_bucket		1398955	0					
ANR	1399432	Identifier	zend_accel_fast_del_bucket		1398955	0					
ANR	1399433	ArgumentList	EG ( class_table )		1398955	1					
ANR	1399434	Argument	EG ( class_table )		1398955	0					
ANR	1399435	CallExpression	EG ( class_table )		1398955	0					
ANR	1399436	Callee	EG		1398955	0					
ANR	1399437	Identifier	EG		1398955	0					
ANR	1399438	ArgumentList	class_table		1398955	1					
ANR	1399439	Argument	class_table		1398955	0					
ANR	1399440	Identifier	class_table		1398955	0					
ANR	1399441	Argument	HT_IDX_TO_HASH ( _idx - 1 )		1398955	1					
ANR	1399442	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		1398955	0					
ANR	1399443	Callee	HT_IDX_TO_HASH		1398955	0					
ANR	1399444	Identifier	HT_IDX_TO_HASH		1398955	0					
ANR	1399445	ArgumentList	_idx - 1		1398955	1					
ANR	1399446	Argument	_idx - 1		1398955	0					
ANR	1399447	AdditiveExpression	_idx - 1		1398955	0		-			
ANR	1399448	Identifier	_idx		1398955	0					
ANR	1399449	PrimaryExpression	1		1398955	1					
ANR	1399450	Argument	_p		1398955	2					
ANR	1399451	Identifier	_p		1398955	0					
ANR	1399452	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2236:4:68294:68317	1398955	25	True				
ANR	1399453	CallExpression	ZEND_HASH_FOREACH_END ( )		1398955	0					
ANR	1399454	Callee	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399455	Identifier	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399456	ArgumentList			1398955	1					
ANR	1399457	ElseStatement	else		1398955	0					
ANR	1399458	CompoundStatement		73:8:2314:2314	1398955	0					
ANR	1399459	ExpressionStatement	"zend_hash_init ( & EG ( symbol_table ) , 8 , NULL , NULL , 0 )"	2240:2:68333:68384	1398955	0	True				
ANR	1399460	CallExpression	"zend_hash_init ( & EG ( symbol_table ) , 8 , NULL , NULL , 0 )"		1398955	0					
ANR	1399461	Callee	zend_hash_init		1398955	0					
ANR	1399462	Identifier	zend_hash_init		1398955	0					
ANR	1399463	ArgumentList	& EG ( symbol_table )		1398955	1					
ANR	1399464	Argument	& EG ( symbol_table )		1398955	0					
ANR	1399465	UnaryOperationExpression	& EG ( symbol_table )		1398955	0					
ANR	1399466	UnaryOperator	&		1398955	0					
ANR	1399467	CallExpression	EG ( symbol_table )		1398955	1					
ANR	1399468	Callee	EG		1398955	0					
ANR	1399469	Identifier	EG		1398955	0					
ANR	1399470	ArgumentList	symbol_table		1398955	1					
ANR	1399471	Argument	symbol_table		1398955	0					
ANR	1399472	Identifier	symbol_table		1398955	0					
ANR	1399473	Argument	8		1398955	1					
ANR	1399474	PrimaryExpression	8		1398955	0					
ANR	1399475	Argument	NULL		1398955	2					
ANR	1399476	Identifier	NULL		1398955	0					
ANR	1399477	Argument	NULL		1398955	3					
ANR	1399478	Identifier	NULL		1398955	0					
ANR	1399479	Argument	0		1398955	4					
ANR	1399480	PrimaryExpression	0		1398955	0					
ANR	1399481	Statement	ZEND_HASH_REVERSE_FOREACH	2242:2:68389:68413	1398955	1	True				
ANR	1399482	Statement	(	2242:27:68414:68414	1398955	2	True				
ANR	1399483	Statement	EG	2242:28:68415:68416	1398955	3	True				
ANR	1399484	Statement	(	2242:30:68417:68417	1398955	4	True				
ANR	1399485	Statement	function_table	2242:31:68418:68431	1398955	5	True				
ANR	1399486	Statement	)	2242:45:68432:68432	1398955	6	True				
ANR	1399487	Statement	","	2242:46:68433:68433	1398955	7	True				
ANR	1399488	Statement	0	2242:48:68435:68435	1398955	8	True				
ANR	1399489	Statement	)	2242:49:68436:68436	1398955	9	True				
ANR	1399490	CompoundStatement		78:3:2429:2465	1398955	10					
ANR	1399491	IdentifierDeclStatement	zend_function * func = Z_PTR ( _p -> val ) ;	2243:3:68443:68479	1398955	0	True				
ANR	1399492	IdentifierDecl	* func = Z_PTR ( _p -> val )		1398955	0					
ANR	1399493	IdentifierDeclType	zend_function *		1398955	0					
ANR	1399494	Identifier	func		1398955	1					
ANR	1399495	AssignmentExpression	* func = Z_PTR ( _p -> val )		1398955	2		=			
ANR	1399496	Identifier	func		1398955	0					
ANR	1399497	CallExpression	Z_PTR ( _p -> val )		1398955	1					
ANR	1399498	Callee	Z_PTR		1398955	0					
ANR	1399499	Identifier	Z_PTR		1398955	0					
ANR	1399500	ArgumentList	_p -> val		1398955	1					
ANR	1399501	Argument	_p -> val		1398955	0					
ANR	1399502	PtrMemberAccess	_p -> val		1398955	0					
ANR	1399503	Identifier	_p		1398955	0					
ANR	1399504	Identifier	val		1398955	1					
ANR	1399505	IfStatement	if ( func -> type == ZEND_INTERNAL_FUNCTION )		1398955	1					
ANR	1399506	Condition	func -> type == ZEND_INTERNAL_FUNCTION	2245:7:68489:68524	1398955	0	True				
ANR	1399507	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		1398955	0		==			
ANR	1399508	PtrMemberAccess	func -> type		1398955	0					
ANR	1399509	Identifier	func		1398955	0					
ANR	1399510	Identifier	type		1398955	1					
ANR	1399511	Identifier	ZEND_INTERNAL_FUNCTION		1398955	1					
ANR	1399512	CompoundStatement		80:45:2513:2513	1398955	1					
ANR	1399513	BreakStatement	break ;	2246:4:68533:68538	1398955	0	True				
ANR	1399514	ElseStatement	else		1398955	0					
ANR	1399515	CompoundStatement		82:10:2536:2536	1398955	0					
ANR	1399516	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( function_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2248:4:68556:68630	1398955	0	True				
ANR	1399517	CallExpression	"zend_accel_fast_del_bucket ( EG ( function_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		1398955	0					
ANR	1399518	Callee	zend_accel_fast_del_bucket		1398955	0					
ANR	1399519	Identifier	zend_accel_fast_del_bucket		1398955	0					
ANR	1399520	ArgumentList	EG ( function_table )		1398955	1					
ANR	1399521	Argument	EG ( function_table )		1398955	0					
ANR	1399522	CallExpression	EG ( function_table )		1398955	0					
ANR	1399523	Callee	EG		1398955	0					
ANR	1399524	Identifier	EG		1398955	0					
ANR	1399525	ArgumentList	function_table		1398955	1					
ANR	1399526	Argument	function_table		1398955	0					
ANR	1399527	Identifier	function_table		1398955	0					
ANR	1399528	Argument	HT_IDX_TO_HASH ( _idx - 1 )		1398955	1					
ANR	1399529	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		1398955	0					
ANR	1399530	Callee	HT_IDX_TO_HASH		1398955	0					
ANR	1399531	Identifier	HT_IDX_TO_HASH		1398955	0					
ANR	1399532	ArgumentList	_idx - 1		1398955	1					
ANR	1399533	Argument	_idx - 1		1398955	0					
ANR	1399534	AdditiveExpression	_idx - 1		1398955	0		-			
ANR	1399535	Identifier	_idx		1398955	0					
ANR	1399536	PrimaryExpression	1		1398955	1					
ANR	1399537	Argument	_p		1398955	2					
ANR	1399538	Identifier	_p		1398955	0					
ANR	1399539	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2250:4:68641:68664	1398955	11	True				
ANR	1399540	CallExpression	ZEND_HASH_FOREACH_END ( )		1398955	0					
ANR	1399541	Callee	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399542	Identifier	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399543	ArgumentList			1398955	1					
ANR	1399544	Statement	ZEND_HASH_REVERSE_FOREACH	2252:2:68669:68693	1398955	12	True				
ANR	1399545	Statement	(	2252:27:68694:68694	1398955	13	True				
ANR	1399546	Statement	EG	2252:28:68695:68696	1398955	14	True				
ANR	1399547	Statement	(	2252:30:68697:68697	1398955	15	True				
ANR	1399548	Statement	class_table	2252:31:68698:68708	1398955	16	True				
ANR	1399549	Statement	)	2252:42:68709:68709	1398955	17	True				
ANR	1399550	Statement	","	2252:43:68710:68710	1398955	18	True				
ANR	1399551	Statement	0	2252:45:68712:68712	1398955	19	True				
ANR	1399552	Statement	)	2252:46:68713:68713	1398955	20	True				
ANR	1399553	CompoundStatement		88:3:2706:2743	1398955	21					
ANR	1399554	IdentifierDeclStatement	zend_class_entry * ce = Z_PTR ( _p -> val ) ;	2253:3:68720:68757	1398955	0	True				
ANR	1399555	IdentifierDecl	* ce = Z_PTR ( _p -> val )		1398955	0					
ANR	1399556	IdentifierDeclType	zend_class_entry *		1398955	0					
ANR	1399557	Identifier	ce		1398955	1					
ANR	1399558	AssignmentExpression	* ce = Z_PTR ( _p -> val )		1398955	2		=			
ANR	1399559	Identifier	ce		1398955	0					
ANR	1399560	CallExpression	Z_PTR ( _p -> val )		1398955	1					
ANR	1399561	Callee	Z_PTR		1398955	0					
ANR	1399562	Identifier	Z_PTR		1398955	0					
ANR	1399563	ArgumentList	_p -> val		1398955	1					
ANR	1399564	Argument	_p -> val		1398955	0					
ANR	1399565	PtrMemberAccess	_p -> val		1398955	0					
ANR	1399566	Identifier	_p		1398955	0					
ANR	1399567	Identifier	val		1398955	1					
ANR	1399568	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		1398955	1					
ANR	1399569	Condition	ce -> type == ZEND_INTERNAL_CLASS	2255:7:68767:68797	1398955	0	True				
ANR	1399570	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		1398955	0		==			
ANR	1399571	PtrMemberAccess	ce -> type		1398955	0					
ANR	1399572	Identifier	ce		1398955	0					
ANR	1399573	Identifier	type		1398955	1					
ANR	1399574	Identifier	ZEND_INTERNAL_CLASS		1398955	1					
ANR	1399575	CompoundStatement		90:40:2786:2786	1398955	1					
ANR	1399576	BreakStatement	break ;	2256:4:68806:68811	1398955	0	True				
ANR	1399577	ElseStatement	else		1398955	0					
ANR	1399578	CompoundStatement		92:10:2809:2809	1398955	0					
ANR	1399579	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( class_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2258:4:68829:68900	1398955	0	True				
ANR	1399580	CallExpression	"zend_accel_fast_del_bucket ( EG ( class_table ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		1398955	0					
ANR	1399581	Callee	zend_accel_fast_del_bucket		1398955	0					
ANR	1399582	Identifier	zend_accel_fast_del_bucket		1398955	0					
ANR	1399583	ArgumentList	EG ( class_table )		1398955	1					
ANR	1399584	Argument	EG ( class_table )		1398955	0					
ANR	1399585	CallExpression	EG ( class_table )		1398955	0					
ANR	1399586	Callee	EG		1398955	0					
ANR	1399587	Identifier	EG		1398955	0					
ANR	1399588	ArgumentList	class_table		1398955	1					
ANR	1399589	Argument	class_table		1398955	0					
ANR	1399590	Identifier	class_table		1398955	0					
ANR	1399591	Argument	HT_IDX_TO_HASH ( _idx - 1 )		1398955	1					
ANR	1399592	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		1398955	0					
ANR	1399593	Callee	HT_IDX_TO_HASH		1398955	0					
ANR	1399594	Identifier	HT_IDX_TO_HASH		1398955	0					
ANR	1399595	ArgumentList	_idx - 1		1398955	1					
ANR	1399596	Argument	_idx - 1		1398955	0					
ANR	1399597	AdditiveExpression	_idx - 1		1398955	0		-			
ANR	1399598	Identifier	_idx		1398955	0					
ANR	1399599	PrimaryExpression	1		1398955	1					
ANR	1399600	Argument	_p		1398955	2					
ANR	1399601	Identifier	_p		1398955	0					
ANR	1399602	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2260:4:68911:68934	1398955	22	True				
ANR	1399603	CallExpression	ZEND_HASH_FOREACH_END ( )		1398955	0					
ANR	1399604	Callee	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399605	Identifier	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399606	ArgumentList			1398955	1					
ANR	1399607	Statement	ZEND_HASH_REVERSE_FOREACH	2263:1:68941:68965	1398955	2	True				
ANR	1399608	Statement	(	2263:26:68966:68966	1398955	3	True				
ANR	1399609	Statement	EG	2263:27:68967:68968	1398955	4	True				
ANR	1399610	Statement	(	2263:29:68969:68969	1398955	5	True				
ANR	1399611	Statement	zend_constants	2263:30:68970:68983	1398955	6	True				
ANR	1399612	Statement	)	2263:44:68984:68984	1398955	7	True				
ANR	1399613	Statement	","	2263:45:68985:68985	1398955	8	True				
ANR	1399614	Statement	0	2263:47:68987:68987	1398955	9	True				
ANR	1399615	Statement	)	2263:48:68988:68988	1398955	10	True				
ANR	1399616	CompoundStatement		99:2:2980:3013	1398955	11					
ANR	1399617	IdentifierDeclStatement	zend_constant * c = Z_PTR ( _p -> val ) ;	2264:2:68994:69027	1398955	0	True				
ANR	1399618	IdentifierDecl	* c = Z_PTR ( _p -> val )		1398955	0					
ANR	1399619	IdentifierDeclType	zend_constant *		1398955	0					
ANR	1399620	Identifier	c		1398955	1					
ANR	1399621	AssignmentExpression	* c = Z_PTR ( _p -> val )		1398955	2		=			
ANR	1399622	Identifier	c		1398955	0					
ANR	1399623	CallExpression	Z_PTR ( _p -> val )		1398955	1					
ANR	1399624	Callee	Z_PTR		1398955	0					
ANR	1399625	Identifier	Z_PTR		1398955	0					
ANR	1399626	ArgumentList	_p -> val		1398955	1					
ANR	1399627	Argument	_p -> val		1398955	0					
ANR	1399628	PtrMemberAccess	_p -> val		1398955	0					
ANR	1399629	Identifier	_p		1398955	0					
ANR	1399630	Identifier	val		1398955	1					
ANR	1399631	IfStatement	if ( c -> flags & CONST_PERSISTENT )		1398955	1					
ANR	1399632	Condition	c -> flags & CONST_PERSISTENT	2266:6:69036:69062	1398955	0	True				
ANR	1399633	BitAndExpression	c -> flags & CONST_PERSISTENT		1398955	0		&			
ANR	1399634	PtrMemberAccess	c -> flags		1398955	0					
ANR	1399635	Identifier	c		1398955	0					
ANR	1399636	Identifier	flags		1398955	1					
ANR	1399637	Identifier	CONST_PERSISTENT		1398955	1					
ANR	1399638	CompoundStatement		101:35:3051:3051	1398955	1					
ANR	1399639	BreakStatement	break ;	2267:3:69070:69075	1398955	0	True				
ANR	1399640	ElseStatement	else		1398955	0					
ANR	1399641	CompoundStatement		103:9:3072:3072	1398955	0					
ANR	1399642	ExpressionStatement	"zend_accel_fast_del_bucket ( EG ( zend_constants ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"	2269:3:69091:69165	1398955	0	True				
ANR	1399643	CallExpression	"zend_accel_fast_del_bucket ( EG ( zend_constants ) , HT_IDX_TO_HASH ( _idx - 1 ) , _p )"		1398955	0					
ANR	1399644	Callee	zend_accel_fast_del_bucket		1398955	0					
ANR	1399645	Identifier	zend_accel_fast_del_bucket		1398955	0					
ANR	1399646	ArgumentList	EG ( zend_constants )		1398955	1					
ANR	1399647	Argument	EG ( zend_constants )		1398955	0					
ANR	1399648	CallExpression	EG ( zend_constants )		1398955	0					
ANR	1399649	Callee	EG		1398955	0					
ANR	1399650	Identifier	EG		1398955	0					
ANR	1399651	ArgumentList	zend_constants		1398955	1					
ANR	1399652	Argument	zend_constants		1398955	0					
ANR	1399653	Identifier	zend_constants		1398955	0					
ANR	1399654	Argument	HT_IDX_TO_HASH ( _idx - 1 )		1398955	1					
ANR	1399655	CallExpression	HT_IDX_TO_HASH ( _idx - 1 )		1398955	0					
ANR	1399656	Callee	HT_IDX_TO_HASH		1398955	0					
ANR	1399657	Identifier	HT_IDX_TO_HASH		1398955	0					
ANR	1399658	ArgumentList	_idx - 1		1398955	1					
ANR	1399659	Argument	_idx - 1		1398955	0					
ANR	1399660	AdditiveExpression	_idx - 1		1398955	0		-			
ANR	1399661	Identifier	_idx		1398955	0					
ANR	1399662	PrimaryExpression	1		1398955	1					
ANR	1399663	Argument	_p		1398955	2					
ANR	1399664	Identifier	_p		1398955	0					
ANR	1399665	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2271:3:69174:69197	1398955	12	True				
ANR	1399666	CallExpression	ZEND_HASH_FOREACH_END ( )		1398955	0					
ANR	1399667	Callee	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399668	Identifier	ZEND_HASH_FOREACH_END		1398955	0					
ANR	1399669	ArgumentList			1398955	1					
ANR	1399670	ExpressionStatement	EG ( function_table ) -> nNumUsed = EG ( function_table ) -> nNumOfElements	2272:1:69200:69265	1398955	13	True				
ANR	1399671	AssignmentExpression	EG ( function_table ) -> nNumUsed = EG ( function_table ) -> nNumOfElements		1398955	0		=			
ANR	1399672	PtrMemberAccess	EG ( function_table ) -> nNumUsed		1398955	0					
ANR	1399673	CallExpression	EG ( function_table )		1398955	0					
ANR	1399674	Callee	EG		1398955	0					
ANR	1399675	Identifier	EG		1398955	0					
ANR	1399676	ArgumentList	function_table		1398955	1					
ANR	1399677	Argument	function_table		1398955	0					
ANR	1399678	Identifier	function_table		1398955	0					
ANR	1399679	Identifier	nNumUsed		1398955	1					
ANR	1399680	PtrMemberAccess	EG ( function_table ) -> nNumOfElements		1398955	1					
ANR	1399681	CallExpression	EG ( function_table )		1398955	0					
ANR	1399682	Callee	EG		1398955	0					
ANR	1399683	Identifier	EG		1398955	0					
ANR	1399684	ArgumentList	function_table		1398955	1					
ANR	1399685	Argument	function_table		1398955	0					
ANR	1399686	Identifier	function_table		1398955	0					
ANR	1399687	Identifier	nNumOfElements		1398955	1					
ANR	1399688	ExpressionStatement	EG ( class_table ) -> nNumUsed = EG ( class_table ) -> nNumOfElements	2273:1:69268:69327	1398955	14	True				
ANR	1399689	AssignmentExpression	EG ( class_table ) -> nNumUsed = EG ( class_table ) -> nNumOfElements		1398955	0		=			
ANR	1399690	PtrMemberAccess	EG ( class_table ) -> nNumUsed		1398955	0					
ANR	1399691	CallExpression	EG ( class_table )		1398955	0					
ANR	1399692	Callee	EG		1398955	0					
ANR	1399693	Identifier	EG		1398955	0					
ANR	1399694	ArgumentList	class_table		1398955	1					
ANR	1399695	Argument	class_table		1398955	0					
ANR	1399696	Identifier	class_table		1398955	0					
ANR	1399697	Identifier	nNumUsed		1398955	1					
ANR	1399698	PtrMemberAccess	EG ( class_table ) -> nNumOfElements		1398955	1					
ANR	1399699	CallExpression	EG ( class_table )		1398955	0					
ANR	1399700	Callee	EG		1398955	0					
ANR	1399701	Identifier	EG		1398955	0					
ANR	1399702	ArgumentList	class_table		1398955	1					
ANR	1399703	Argument	class_table		1398955	0					
ANR	1399704	Identifier	class_table		1398955	0					
ANR	1399705	Identifier	nNumOfElements		1398955	1					
ANR	1399706	ExpressionStatement	EG ( zend_constants ) -> nNumUsed = EG ( zend_constants ) -> nNumOfElements	2274:1:69330:69395	1398955	15	True				
ANR	1399707	AssignmentExpression	EG ( zend_constants ) -> nNumUsed = EG ( zend_constants ) -> nNumOfElements		1398955	0		=			
ANR	1399708	PtrMemberAccess	EG ( zend_constants ) -> nNumUsed		1398955	0					
ANR	1399709	CallExpression	EG ( zend_constants )		1398955	0					
ANR	1399710	Callee	EG		1398955	0					
ANR	1399711	Identifier	EG		1398955	0					
ANR	1399712	ArgumentList	zend_constants		1398955	1					
ANR	1399713	Argument	zend_constants		1398955	0					
ANR	1399714	Identifier	zend_constants		1398955	0					
ANR	1399715	Identifier	nNumUsed		1398955	1					
ANR	1399716	PtrMemberAccess	EG ( zend_constants ) -> nNumOfElements		1398955	1					
ANR	1399717	CallExpression	EG ( zend_constants )		1398955	0					
ANR	1399718	Callee	EG		1398955	0					
ANR	1399719	Identifier	EG		1398955	0					
ANR	1399720	ArgumentList	zend_constants		1398955	1					
ANR	1399721	Argument	zend_constants		1398955	0					
ANR	1399722	Identifier	zend_constants		1398955	0					
ANR	1399723	Identifier	nNumOfElements		1398955	1					
ANR	1399724	ExpressionStatement	CG ( unclean_shutdown ) = 1	2276:1:69399:69423	1398955	16	True				
ANR	1399725	AssignmentExpression	CG ( unclean_shutdown ) = 1		1398955	0		=			
ANR	1399726	CallExpression	CG ( unclean_shutdown )		1398955	0					
ANR	1399727	Callee	CG		1398955	0					
ANR	1399728	Identifier	CG		1398955	0					
ANR	1399729	ArgumentList	unclean_shutdown		1398955	1					
ANR	1399730	Argument	unclean_shutdown		1398955	0					
ANR	1399731	Identifier	unclean_shutdown		1398955	0					
ANR	1399732	PrimaryExpression	1		1398955	1					
ANR	1399733	ReturnType	static void		1398955	1					
ANR	1399734	Identifier	zend_accel_fast_shutdown		1398955	2					
ANR	1399735	ParameterList			1398955	3					
ANR	1399736	CFGEntryNode	ENTRY		1398955		True				
ANR	1399737	CFGExitNode	EXIT		1398955		True				
ANR	1399738	CFGErrorNode	ERROR		1398955		True				
ANR	1399739	Symbol	EG ( zend_constants ) -> nNumOfElements		1398955						
ANR	1399740	Symbol	GC_FLAGS		1398955						
ANR	1399741	Symbol	* ce		1398955						
ANR	1399742	Symbol	func -> op_array		1398955						
ANR	1399743	Symbol	ce -> static_members_table		1398955						
ANR	1399744	Symbol	EG ( objects_store ) . top		1398955						
ANR	1399745	Symbol	ZEND_INTERNAL_FUNCTION		1398955						
ANR	1399746	Symbol	zend_constants		1398955						
ANR	1399747	Symbol	ZEND_USER_FUNCTION		1398955						
ANR	1399748	Symbol	CONST_PERSISTENT		1398955						
ANR	1399749	Symbol	ZEND_INTERNAL_CLASS		1398955						
ANR	1399750	Symbol	EG		1398955						
ANR	1399751	Symbol	NULL		1398955						
ANR	1399752	Symbol	ZEND_HAS_STATIC_IN_METHODS		1398955						
ANR	1399753	Symbol	symbol_table		1398955						
ANR	1399754	Symbol	HT_IDX_TO_HASH		1398955						
ANR	1399755	Symbol	EG ( class_table ) -> nNumOfElements		1398955						
ANR	1399756	Symbol	ce -> ce_flags		1398955						
ANR	1399757	Symbol	* _p		1398955						
ANR	1399758	Symbol	_p -> val		1398955						
ANR	1399759	Symbol	regular_list		1398955						
ANR	1399760	Symbol	Z_REFCOUNTED_P		1398955						
ANR	1399761	Symbol	function_table		1398955						
ANR	1399762	Symbol	zv		1398955						
ANR	1399763	Symbol	Z_DELREF		1398955						
ANR	1399764	Symbol	Z_REFCOUNTED		1398955						
ANR	1399765	Symbol	EG ( function_table ) -> nNumUsed		1398955						
ANR	1399766	Symbol	ce -> type		1398955						
ANR	1399767	Symbol	c -> flags		1398955						
ANR	1399768	Symbol	ce -> default_static_members_count		1398955						
ANR	1399769	Symbol	Z_PTR		1398955						
ANR	1399770	Symbol	* EG		1398955						
ANR	1399771	Symbol	& EG		1398955						
ANR	1399772	Symbol	_idx		1398955						
ANR	1399773	Symbol	full_tables_cleanup		1398955						
ANR	1399774	Symbol	& _p -> val		1398955						
ANR	1399775	Symbol	Z_DELREF_P		1398955						
ANR	1399776	Symbol	func -> type		1398955						
ANR	1399777	Symbol	class_table		1398955						
ANR	1399778	Symbol	EG ( zend_constants ) -> nNumUsed		1398955						
ANR	1399779	Symbol	GC_REFCOUNT		1398955						
ANR	1399780	Symbol	ce		1398955						
ANR	1399781	Symbol	c		1398955						
ANR	1399782	Symbol	* func		1398955						
ANR	1399783	Symbol	CG		1398955						
ANR	1399784	Symbol	zend_hash_num_elements		1398955						
ANR	1399785	Symbol	objects_store		1398955						
ANR	1399786	Symbol	i		1398955						
ANR	1399787	Symbol	IS_ARRAY_IMMUTABLE		1398955						
ANR	1399788	Symbol	* c		1398955						
ANR	1399789	Symbol	EG ( function_table ) -> nNumOfElements		1398955						
ANR	1399790	Symbol	_p		1398955						
ANR	1399791	Symbol	unclean_shutdown		1398955						
ANR	1399792	Symbol	func		1398955						
ANR	1399793	Symbol	func -> op_array . static_variables		1398955						
ANR	1399794	Symbol	EG ( class_table ) -> nNumUsed		1398955						
ANR	1399795	Function	accel_deactivate	2280:0:69435:70041							
ANR	1399796	FunctionDef	accel_deactivate ()		1399795	0					
ANR	1399797	CompoundStatement		2281:0:69470:70041	1399795	0					
ANR	1399798	IfStatement	if ( ! ZCG ( enabled ) || ! accel_startup_ok )		1399795	0					
ANR	1399799	Condition	! ZCG ( enabled ) || ! accel_startup_ok	2287:5:69681:69714	1399795	0	True				
ANR	1399800	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok		1399795	0		||			
ANR	1399801	UnaryOperationExpression	! ZCG ( enabled )		1399795	0					
ANR	1399802	UnaryOperator	!		1399795	0					
ANR	1399803	CallExpression	ZCG ( enabled )		1399795	1					
ANR	1399804	Callee	ZCG		1399795	0					
ANR	1399805	Identifier	ZCG		1399795	0					
ANR	1399806	ArgumentList	enabled		1399795	1					
ANR	1399807	Argument	enabled		1399795	0					
ANR	1399808	Identifier	enabled		1399795	0					
ANR	1399809	UnaryOperationExpression	! accel_startup_ok		1399795	1					
ANR	1399810	UnaryOperator	!		1399795	0					
ANR	1399811	Identifier	accel_startup_ok		1399795	1					
ANR	1399812	CompoundStatement		7:41:246:246	1399795	1					
ANR	1399813	ReturnStatement	return ;	2288:2:69721:69727	1399795	0	True				
ANR	1399814	ExpressionStatement	zend_shared_alloc_safe_unlock ( )	2291:1:69734:69765	1399795	1	True				
ANR	1399815	CallExpression	zend_shared_alloc_safe_unlock ( )		1399795	0					
ANR	1399816	Callee	zend_shared_alloc_safe_unlock		1399795	0					
ANR	1399817	Identifier	zend_shared_alloc_safe_unlock		1399795	0					
ANR	1399818	ArgumentList			1399795	1					
ANR	1399819	ExpressionStatement	accel_unlock_all ( )	2292:1:69811:69829	1399795	2	True				
ANR	1399820	CallExpression	accel_unlock_all ( )		1399795	0					
ANR	1399821	Callee	accel_unlock_all		1399795	0					
ANR	1399822	Identifier	accel_unlock_all		1399795	0					
ANR	1399823	ArgumentList			1399795	1					
ANR	1399824	ExpressionStatement	ZCG ( counted ) = 0	2293:1:69832:69848	1399795	3	True				
ANR	1399825	AssignmentExpression	ZCG ( counted ) = 0		1399795	0		=			
ANR	1399826	CallExpression	ZCG ( counted )		1399795	0					
ANR	1399827	Callee	ZCG		1399795	0					
ANR	1399828	Identifier	ZCG		1399795	0					
ANR	1399829	ArgumentList	counted		1399795	1					
ANR	1399830	Argument	counted		1399795	0					
ANR	1399831	Identifier	counted		1399795	0					
ANR	1399832	PrimaryExpression	0		1399795	1					
ANR	1399833	IfStatement	if ( ZCG ( accel_directives ) . fast_shutdown && is_zend_mm ( ) )		1399795	4					
ANR	1399834	Condition	ZCG ( accel_directives ) . fast_shutdown && is_zend_mm ( )	2296:5:69872:69922	1399795	0	True				
ANR	1399835	AndExpression	ZCG ( accel_directives ) . fast_shutdown && is_zend_mm ( )		1399795	0		&&			
ANR	1399836	MemberAccess	ZCG ( accel_directives ) . fast_shutdown		1399795	0					
ANR	1399837	CallExpression	ZCG ( accel_directives )		1399795	0					
ANR	1399838	Callee	ZCG		1399795	0					
ANR	1399839	Identifier	ZCG		1399795	0					
ANR	1399840	ArgumentList	accel_directives		1399795	1					
ANR	1399841	Argument	accel_directives		1399795	0					
ANR	1399842	Identifier	accel_directives		1399795	0					
ANR	1399843	Identifier	fast_shutdown		1399795	1					
ANR	1399844	CallExpression	is_zend_mm ( )		1399795	1					
ANR	1399845	Callee	is_zend_mm		1399795	0					
ANR	1399846	Identifier	is_zend_mm		1399795	0					
ANR	1399847	ArgumentList			1399795	1					
ANR	1399848	CompoundStatement		16:58:454:454	1399795	1					
ANR	1399849	ExpressionStatement	zend_accel_fast_shutdown ( )	2297:2:69929:69955	1399795	0	True				
ANR	1399850	CallExpression	zend_accel_fast_shutdown ( )		1399795	0					
ANR	1399851	Callee	zend_accel_fast_shutdown		1399795	0					
ANR	1399852	Identifier	zend_accel_fast_shutdown		1399795	0					
ANR	1399853	ArgumentList			1399795	1					
ANR	1399854	IfStatement	if ( ZCG ( cwd ) )		1399795	5					
ANR	1399855	Condition	ZCG ( cwd )	2301:5:69973:69980	1399795	0	True				
ANR	1399856	CallExpression	ZCG ( cwd )		1399795	0					
ANR	1399857	Callee	ZCG		1399795	0					
ANR	1399858	Identifier	ZCG		1399795	0					
ANR	1399859	ArgumentList	cwd		1399795	1					
ANR	1399860	Argument	cwd		1399795	0					
ANR	1399861	Identifier	cwd		1399795	0					
ANR	1399862	CompoundStatement		21:15:512:512	1399795	1					
ANR	1399863	ExpressionStatement	zend_string_release ( ZCG ( cwd ) )	2302:2:69987:70016	1399795	0	True				
ANR	1399864	CallExpression	zend_string_release ( ZCG ( cwd ) )		1399795	0					
ANR	1399865	Callee	zend_string_release		1399795	0					
ANR	1399866	Identifier	zend_string_release		1399795	0					
ANR	1399867	ArgumentList	ZCG ( cwd )		1399795	1					
ANR	1399868	Argument	ZCG ( cwd )		1399795	0					
ANR	1399869	CallExpression	ZCG ( cwd )		1399795	0					
ANR	1399870	Callee	ZCG		1399795	0					
ANR	1399871	Identifier	ZCG		1399795	0					
ANR	1399872	ArgumentList	cwd		1399795	1					
ANR	1399873	Argument	cwd		1399795	0					
ANR	1399874	Identifier	cwd		1399795	0					
ANR	1399875	ExpressionStatement	ZCG ( cwd ) = NULL	2303:2:70020:70035	1399795	1	True				
ANR	1399876	AssignmentExpression	ZCG ( cwd ) = NULL		1399795	0		=			
ANR	1399877	CallExpression	ZCG ( cwd )		1399795	0					
ANR	1399878	Callee	ZCG		1399795	0					
ANR	1399879	Identifier	ZCG		1399795	0					
ANR	1399880	ArgumentList	cwd		1399795	1					
ANR	1399881	Argument	cwd		1399795	0					
ANR	1399882	Identifier	cwd		1399795	0					
ANR	1399883	Identifier	NULL		1399795	1					
ANR	1399884	ReturnType	static void		1399795	1					
ANR	1399885	Identifier	accel_deactivate		1399795	2					
ANR	1399886	ParameterList			1399795	3					
ANR	1399887	CFGEntryNode	ENTRY		1399795		True				
ANR	1399888	CFGExitNode	EXIT		1399795		True				
ANR	1399889	Symbol	accel_startup_ok		1399795						
ANR	1399890	Symbol	cwd		1399795						
ANR	1399891	Symbol	is_zend_mm		1399795						
ANR	1399892	Symbol	NULL		1399795						
ANR	1399893	Symbol	counted		1399795						
ANR	1399894	Symbol	ZCG ( accel_directives ) . fast_shutdown		1399795						
ANR	1399895	Symbol	accel_directives		1399795						
ANR	1399896	Symbol	enabled		1399795						
ANR	1399897	Symbol	ZCG		1399795						
ANR	1399898	Function	accelerator_remove_cb	2308:0:70044:70677							
ANR	1399899	FunctionDef	"accelerator_remove_cb (zend_extension * element1 , zend_extension * element2)"		1399898	0					
ANR	1399900	CompoundStatement		2309:0:70129:70677	1399898	0					
ANR	1399901	ExpressionStatement	( void ) element2	2310:1:70132:70146	1399898	0	True				
ANR	1399902	CastExpression	( void ) element2		1399898	0					
ANR	1399903	CastTarget	void		1399898	0					
ANR	1399904	Identifier	element2		1399898	1					
ANR	1399905	IfStatement	"if ( ! strcmp ( element1 -> name , ACCELERATOR_PRODUCT_NAME ) )"		1399898	1					
ANR	1399906	Condition	"! strcmp ( element1 -> name , ACCELERATOR_PRODUCT_NAME )"	2312:5:70184:70233	1399898	0	True				
ANR	1399907	UnaryOperationExpression	"! strcmp ( element1 -> name , ACCELERATOR_PRODUCT_NAME )"		1399898	0					
ANR	1399908	UnaryOperator	!		1399898	0					
ANR	1399909	CallExpression	"strcmp ( element1 -> name , ACCELERATOR_PRODUCT_NAME )"		1399898	1					
ANR	1399910	Callee	strcmp		1399898	0					
ANR	1399911	Identifier	strcmp		1399898	0					
ANR	1399912	ArgumentList	element1 -> name		1399898	1					
ANR	1399913	Argument	element1 -> name		1399898	0					
ANR	1399914	PtrMemberAccess	element1 -> name		1399898	0					
ANR	1399915	Identifier	element1		1399898	0					
ANR	1399916	Identifier	name		1399898	1					
ANR	1399917	Argument	ACCELERATOR_PRODUCT_NAME		1399898	1					
ANR	1399918	Identifier	ACCELERATOR_PRODUCT_NAME		1399898	0					
ANR	1399919	CompoundStatement		4:57:106:106	1399898	1					
ANR	1399920	ExpressionStatement	element1 -> startup = NULL	2313:2:70240:70264	1399898	0	True				
ANR	1399921	AssignmentExpression	element1 -> startup = NULL		1399898	0		=			
ANR	1399922	PtrMemberAccess	element1 -> startup		1399898	0					
ANR	1399923	Identifier	element1		1399898	0					
ANR	1399924	Identifier	startup		1399898	1					
ANR	1399925	Identifier	NULL		1399898	1					
ANR	1399926	ExpressionStatement	element1 -> shutdown = NULL	2316:2:70340:70365	1399898	1	True				
ANR	1399927	AssignmentExpression	element1 -> shutdown = NULL		1399898	0		=			
ANR	1399928	PtrMemberAccess	element1 -> shutdown		1399898	0					
ANR	1399929	Identifier	element1		1399898	0					
ANR	1399930	Identifier	shutdown		1399898	1					
ANR	1399931	Identifier	NULL		1399898	1					
ANR	1399932	ExpressionStatement	element1 -> activate = NULL	2318:2:70376:70401	1399898	2	True				
ANR	1399933	AssignmentExpression	element1 -> activate = NULL		1399898	0		=			
ANR	1399934	PtrMemberAccess	element1 -> activate		1399898	0					
ANR	1399935	Identifier	element1		1399898	0					
ANR	1399936	Identifier	activate		1399898	1					
ANR	1399937	Identifier	NULL		1399898	1					
ANR	1399938	ExpressionStatement	element1 -> deactivate = NULL	2319:2:70405:70432	1399898	3	True				
ANR	1399939	AssignmentExpression	element1 -> deactivate = NULL		1399898	0		=			
ANR	1399940	PtrMemberAccess	element1 -> deactivate		1399898	0					
ANR	1399941	Identifier	element1		1399898	0					
ANR	1399942	Identifier	deactivate		1399898	1					
ANR	1399943	Identifier	NULL		1399898	1					
ANR	1399944	ExpressionStatement	element1 -> op_array_handler = NULL	2320:2:70436:70469	1399898	4	True				
ANR	1399945	AssignmentExpression	element1 -> op_array_handler = NULL		1399898	0		=			
ANR	1399946	PtrMemberAccess	element1 -> op_array_handler		1399898	0					
ANR	1399947	Identifier	element1		1399898	0					
ANR	1399948	Identifier	op_array_handler		1399898	1					
ANR	1399949	Identifier	NULL		1399898	1					
ANR	1399950	Statement	fprintf	2323:8:70506:70512	1399898	5	True				
ANR	1399951	Statement	(	2323:15:70513:70513	1399898	6	True				
ANR	1399952	Statement	stderr	2323:16:70514:70519	1399898	7	True				
ANR	1399953	Statement	","	2323:22:70520:70520	1399898	8	True				
ANR	1399954	Statement	ACCELERATOR_PRODUCT_NAME	2323:24:70522:70545	1399898	9	True				
ANR	1399955	Statement	""" is disabled: %s\\n"""	2323:49:70547:70566	1399898	10	True				
ANR	1399956	Statement	","	2323:69:70567:70567	1399898	11	True				
ANR	1399957	Statement	(	2323:71:70569:70569	1399898	12	True				
ANR	1399958	Statement	zps_failure_reason	2323:72:70570:70587	1399898	13	True				
ANR	1399959	Statement	?	2323:91:70589:70589	1399898	14	True				
ANR	1399960	Label	zps_failure_reason :	2323:93:70591:70610	1399898	15	True				
ANR	1399961	Identifier	zps_failure_reason		1399898	0					
ANR	1399962	Statement	"""unknown error"""	2323:114:70612:70626	1399898	16	True				
ANR	1399963	Statement	)	2323:129:70627:70627	1399898	17	True				
ANR	1399964	Statement	)	2323:130:70628:70628	1399898	18	True				
ANR	1399965	ExpressionStatement		2323:131:70629:70629	1399898	19	True				
ANR	1399966	ExpressionStatement	fflush ( stderr )	2324:8:70639:70653	1399898	20	True				
ANR	1399967	CallExpression	fflush ( stderr )		1399898	0					
ANR	1399968	Callee	fflush		1399898	0					
ANR	1399969	Identifier	fflush		1399898	0					
ANR	1399970	ArgumentList	stderr		1399898	1					
ANR	1399971	Argument	stderr		1399898	0					
ANR	1399972	Identifier	stderr		1399898	0					
ANR	1399973	ReturnStatement	return 0 ;	2328:1:70667:70675	1399898	2	True				
ANR	1399974	PrimaryExpression	0		1399898	0					
ANR	1399975	ReturnType	static int		1399898	1					
ANR	1399976	Identifier	accelerator_remove_cb		1399898	2					
ANR	1399977	ParameterList	"zend_extension * element1 , zend_extension * element2"		1399898	3					
ANR	1399978	Parameter	zend_extension * element1	2308:33:70077:70100	1399898	0	True				
ANR	1399979	ParameterType	zend_extension *		1399898	0					
ANR	1399980	Identifier	element1		1399898	1					
ANR	1399981	Parameter	zend_extension * element2	2308:59:70103:70126	1399898	1	True				
ANR	1399982	ParameterType	zend_extension *		1399898	0					
ANR	1399983	Identifier	element2		1399898	1					
ANR	1399984	CFGEntryNode	ENTRY		1399898		True				
ANR	1399985	CFGExitNode	EXIT		1399898		True				
ANR	1399986	Symbol	strcmp		1399898						
ANR	1399987	Symbol	NULL		1399898						
ANR	1399988	Symbol	element1 -> name		1399898						
ANR	1399989	Symbol	stderr		1399898						
ANR	1399990	Symbol	ACCELERATOR_PRODUCT_NAME		1399898						
ANR	1399991	Symbol	* element1		1399898						
ANR	1399992	Symbol	element1 -> shutdown		1399898						
ANR	1399993	Symbol	element1 -> deactivate		1399898						
ANR	1399994	Symbol	element1		1399898						
ANR	1399995	Symbol	element2		1399898						
ANR	1399996	Symbol	element1 -> activate		1399898						
ANR	1399997	Symbol	element1 -> op_array_handler		1399898						
ANR	1399998	Symbol	element1 -> startup		1399898						
ANR	1399999	Function	zps_startup_failure	2331:0:70680:70980							
ANR	1400000	FunctionDef	"zps_startup_failure (char * reason , char * api_reason , int ( * cb ) ( zend_extension * , zend_extension * ))"		1399999	0					
ANR	1400001	CompoundStatement		2332:0:70791:70980	1399999	0					
ANR	1400002	ExpressionStatement	accel_startup_ok = 0	2333:1:70794:70814	1399999	0	True				
ANR	1400003	AssignmentExpression	accel_startup_ok = 0		1399999	0		=			
ANR	1400004	Identifier	accel_startup_ok		1399999	0					
ANR	1400005	PrimaryExpression	0		1399999	1					
ANR	1400006	ExpressionStatement	zps_failure_reason = reason	2334:1:70817:70844	1399999	1	True				
ANR	1400007	AssignmentExpression	zps_failure_reason = reason		1399999	0		=			
ANR	1400008	Identifier	zps_failure_reason		1399999	0					
ANR	1400009	Identifier	reason		1399999	1					
ANR	1400010	ExpressionStatement	zps_api_failure_reason = api_reason ? api_reason : reason	2335:1:70847:70900	1399999	2	True				
ANR	1400011	AssignmentExpression	zps_api_failure_reason = api_reason ? api_reason : reason		1399999	0		=			
ANR	1400012	Identifier	zps_api_failure_reason		1399999	0					
ANR	1400013	ConditionalExpression	api_reason ? api_reason : reason		1399999	1					
ANR	1400014	Condition	api_reason		1399999	0					
ANR	1400015	Identifier	api_reason		1399999	0					
ANR	1400016	Identifier	api_reason		1399999	1					
ANR	1400017	Identifier	reason		1399999	2					
ANR	1400018	Statement	zend_llist_del_element	2336:1:70903:70924	1399999	3	True				
ANR	1400019	Statement	(	2336:23:70925:70925	1399999	4	True				
ANR	1400020	Statement	&	2336:24:70926:70926	1399999	5	True				
ANR	1400021	Statement	zend_extensions	2336:25:70927:70941	1399999	6	True				
ANR	1400022	Statement	","	2336:40:70942:70942	1399999	7	True				
ANR	1400023	Statement	NULL	2336:42:70944:70947	1399999	8	True				
ANR	1400024	Statement	","	2336:46:70948:70948	1399999	9	True				
ANR	1400025	Statement	(	2336:48:70950:70950	1399999	10	True				
ANR	1400026	Statement	int	2336:49:70951:70953	1399999	11	True				
ANR	1400027	Statement	(	2336:53:70955:70955	1399999	12	True				
ANR	1400028	Statement	*	2336:54:70956:70956	1399999	13	True				
ANR	1400029	Statement	)	2336:55:70957:70957	1399999	14	True				
ANR	1400030	Statement	(	2336:56:70958:70958	1399999	15	True				
ANR	1400031	Statement	void	2336:57:70959:70962	1399999	16	True				
ANR	1400032	Statement	*	2336:62:70964:70964	1399999	17	True				
ANR	1400033	Statement	","	2336:63:70965:70965	1399999	18	True				
ANR	1400034	Statement	void	2336:65:70967:70970	1399999	19	True				
ANR	1400035	Statement	*	2336:70:70972:70972	1399999	20	True				
ANR	1400036	Statement	)	2336:71:70973:70973	1399999	21	True				
ANR	1400037	Statement	)	2336:72:70974:70974	1399999	22	True				
ANR	1400038	Statement	cb	2336:73:70975:70976	1399999	23	True				
ANR	1400039	Statement	)	2336:75:70977:70977	1399999	24	True				
ANR	1400040	ExpressionStatement		2336:76:70978:70978	1399999	25	True				
ANR	1400041	ReturnType	static void		1399999	1					
ANR	1400042	Identifier	zps_startup_failure		1399999	2					
ANR	1400043	ParameterList	"char * reason , char * api_reason , int ( * cb ) ( zend_extension * , zend_extension * )"		1399999	3					
ANR	1400044	Parameter	char * reason	2331:32:70712:70723	1399999	0	True				
ANR	1400045	ParameterType	char *		1399999	0					
ANR	1400046	Identifier	reason		1399999	1					
ANR	1400047	Parameter	char * api_reason	2331:46:70726:70741	1399999	1	True				
ANR	1400048	ParameterType	char *		1399999	0					
ANR	1400049	Identifier	api_reason		1399999	1					
ANR	1400050	Parameter	"int ( * cb ) ( zend_extension * , zend_extension * )"	2331:64:70744:70788	1399999	2	True				
ANR	1400051	ParameterType	"(( zend_extension * , zend_extension * ) int) *"		1399999	0					
ANR	1400052	Identifier	cb		1399999	1					
ANR	1400053	CFGEntryNode	ENTRY		1399999		True				
ANR	1400054	CFGExitNode	EXIT		1399999		True				
ANR	1400055	Symbol	accel_startup_ok		1399999						
ANR	1400056	Symbol	reason		1399999						
ANR	1400057	Symbol	zps_failure_reason		1399999						
ANR	1400058	Symbol	api_reason		1399999						
ANR	1400059	Symbol	zps_api_failure_reason		1399999						
ANR	1400060	Symbol	cb		1399999						
ANR	1400061	Function	accel_find_sapi	2339:0:70983:71589							
ANR	1400062	FunctionDef	accel_find_sapi ()		1400061	0					
ANR	1400063	CompoundStatement		2340:0:71023:71589	1400061	0					
ANR	1400064	Statement	static	2341:1:71026:71031	1400061	0	True				
ANR	1400065	IdentifierDeclStatement	"const char * supported_sapis [ ] = { ""apache"" , ""fastcgi"" , ""cli-server"" , ""cgi-fcgi"" , ""fpm-fcgi"" , ""isapi"" , ""apache2filter"" , ""apache2handler"" , ""litespeed"" , NULL } ;"	2341:8:71033:71210	1400061	1	True				
ANR	1400066	IdentifierDecl	"* supported_sapis [ ] = { ""apache"" , ""fastcgi"" , ""cli-server"" , ""cgi-fcgi"" , ""fpm-fcgi"" , ""isapi"" , ""apache2filter"" , ""apache2handler"" , ""litespeed"" , NULL }"		1400061	0					
ANR	1400067	IdentifierDeclType	const char * [ ]		1400061	0					
ANR	1400068	Identifier	supported_sapis		1400061	1					
ANR	1400069	AssignmentExpression	"* supported_sapis [ ] = { ""apache"" , ""fastcgi"" , ""cli-server"" , ""cgi-fcgi"" , ""fpm-fcgi"" , ""isapi"" , ""apache2filter"" , ""apache2handler"" , ""litespeed"" , NULL }"		1400061	2		=			
ANR	1400070	Identifier	supported_sapis		1400061	0					
ANR	1400071	InitializerList	"""apache"""		1400061	1					
ANR	1400072	PrimaryExpression	"""apache"""		1400061	0					
ANR	1400073	PrimaryExpression	"""fastcgi"""		1400061	1					
ANR	1400074	PrimaryExpression	"""cli-server"""		1400061	2					
ANR	1400075	PrimaryExpression	"""cgi-fcgi"""		1400061	3					
ANR	1400076	PrimaryExpression	"""fpm-fcgi"""		1400061	4					
ANR	1400077	PrimaryExpression	"""isapi"""		1400061	5					
ANR	1400078	PrimaryExpression	"""apache2filter"""		1400061	6					
ANR	1400079	PrimaryExpression	"""apache2handler"""		1400061	7					
ANR	1400080	PrimaryExpression	"""litespeed"""		1400061	8					
ANR	1400081	Identifier	NULL		1400061	9					
ANR	1400082	IdentifierDeclStatement	const char * * sapi_name ;	2353:1:71213:71235	1400061	2	True				
ANR	1400083	IdentifierDecl	* * sapi_name		1400061	0					
ANR	1400084	IdentifierDeclType	const char * *		1400061	0					
ANR	1400085	Identifier	sapi_name		1400061	1					
ANR	1400086	IfStatement	if ( sapi_module . name )		1400061	3					
ANR	1400087	Condition	sapi_module . name	2355:5:71243:71258	1400061	0	True				
ANR	1400088	MemberAccess	sapi_module . name		1400061	0					
ANR	1400089	Identifier	sapi_module		1400061	0					
ANR	1400090	Identifier	name		1400061	1					
ANR	1400091	CompoundStatement		16:23:237:237	1400061	1					
ANR	1400092	ForStatement	for ( sapi_name = supported_sapis ; * sapi_name ; sapi_name ++ )		1400061	0					
ANR	1400093	ForInit	sapi_name = supported_sapis ;	2356:7:71270:71297	1400061	0	True				
ANR	1400094	AssignmentExpression	sapi_name = supported_sapis		1400061	0		=			
ANR	1400095	Identifier	sapi_name		1400061	0					
ANR	1400096	Identifier	supported_sapis		1400061	1					
ANR	1400097	Condition	* sapi_name	2356:36:71299:71308	1400061	1	True				
ANR	1400098	UnaryOperationExpression	* sapi_name		1400061	0					
ANR	1400099	UnaryOperator	*		1400061	0					
ANR	1400100	Identifier	sapi_name		1400061	1					
ANR	1400101	PostIncDecOperationExpression	sapi_name ++	2356:48:71311:71321	1400061	2	True				
ANR	1400102	Identifier	sapi_name		1400061	0					
ANR	1400103	IncDec	++		1400061	1					
ANR	1400104	CompoundStatement		17:61:300:300	1400061	3					
ANR	1400105	IfStatement	"if ( strcmp ( sapi_module . name , * sapi_name ) == 0 )"		1400061	0					
ANR	1400106	Condition	"strcmp ( sapi_module . name , * sapi_name ) == 0"	2357:7:71333:71373	1400061	0	True				
ANR	1400107	EqualityExpression	"strcmp ( sapi_module . name , * sapi_name ) == 0"		1400061	0		==			
ANR	1400108	CallExpression	"strcmp ( sapi_module . name , * sapi_name )"		1400061	0					
ANR	1400109	Callee	strcmp		1400061	0					
ANR	1400110	Identifier	strcmp		1400061	0					
ANR	1400111	ArgumentList	sapi_module . name		1400061	1					
ANR	1400112	Argument	sapi_module . name		1400061	0					
ANR	1400113	MemberAccess	sapi_module . name		1400061	0					
ANR	1400114	Identifier	sapi_module		1400061	0					
ANR	1400115	Identifier	name		1400061	1					
ANR	1400116	Argument	* sapi_name		1400061	1					
ANR	1400117	UnaryOperationExpression	* sapi_name		1400061	0					
ANR	1400118	UnaryOperator	*		1400061	0					
ANR	1400119	Identifier	sapi_name		1400061	1					
ANR	1400120	PrimaryExpression	0		1400061	1					
ANR	1400121	CompoundStatement		18:50:352:352	1400061	1					
ANR	1400122	ReturnStatement	return SUCCESS ;	2358:4:71382:71396	1400061	0	True				
ANR	1400123	Identifier	SUCCESS		1400061	0					
ANR	1400124	IfStatement	"if ( ZCG ( accel_directives ) . enable_cli && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""phpdbg"" ) == 0 ) )"		1400061	1					
ANR	1400125	Condition	"ZCG ( accel_directives ) . enable_cli && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""phpdbg"" ) == 0 )"	2361:6:71413:71540	1400061	0	True				
ANR	1400126	AndExpression	"ZCG ( accel_directives ) . enable_cli && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""phpdbg"" ) == 0 )"		1400061	0		&&			
ANR	1400127	MemberAccess	ZCG ( accel_directives ) . enable_cli		1400061	0					
ANR	1400128	CallExpression	ZCG ( accel_directives )		1400061	0					
ANR	1400129	Callee	ZCG		1400061	0					
ANR	1400130	Identifier	ZCG		1400061	0					
ANR	1400131	ArgumentList	accel_directives		1400061	1					
ANR	1400132	Argument	accel_directives		1400061	0					
ANR	1400133	Identifier	accel_directives		1400061	0					
ANR	1400134	Identifier	enable_cli		1400061	1					
ANR	1400135	OrExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""phpdbg"" ) == 0"		1400061	1		||			
ANR	1400136	EqualityExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0"		1400061	0		==			
ANR	1400137	CallExpression	"strcmp ( sapi_module . name , ""cli"" )"		1400061	0					
ANR	1400138	Callee	strcmp		1400061	0					
ANR	1400139	Identifier	strcmp		1400061	0					
ANR	1400140	ArgumentList	sapi_module . name		1400061	1					
ANR	1400141	Argument	sapi_module . name		1400061	0					
ANR	1400142	MemberAccess	sapi_module . name		1400061	0					
ANR	1400143	Identifier	sapi_module		1400061	0					
ANR	1400144	Identifier	name		1400061	1					
ANR	1400145	Argument	"""cli"""		1400061	1					
ANR	1400146	PrimaryExpression	"""cli"""		1400061	0					
ANR	1400147	PrimaryExpression	0		1400061	1					
ANR	1400148	EqualityExpression	"strcmp ( sapi_module . name , ""phpdbg"" ) == 0"		1400061	1		==			
ANR	1400149	CallExpression	"strcmp ( sapi_module . name , ""phpdbg"" )"		1400061	0					
ANR	1400150	Callee	strcmp		1400061	0					
ANR	1400151	Identifier	strcmp		1400061	0					
ANR	1400152	ArgumentList	sapi_module . name		1400061	1					
ANR	1400153	Argument	sapi_module . name		1400061	0					
ANR	1400154	MemberAccess	sapi_module . name		1400061	0					
ANR	1400155	Identifier	sapi_module		1400061	0					
ANR	1400156	Identifier	name		1400061	1					
ANR	1400157	Argument	"""phpdbg"""		1400061	1					
ANR	1400158	PrimaryExpression	"""phpdbg"""		1400061	0					
ANR	1400159	PrimaryExpression	0		1400061	1					
ANR	1400160	CompoundStatement		24:49:519:519	1400061	1					
ANR	1400161	ReturnStatement	return SUCCESS ;	2364:3:71548:71562	1400061	0	True				
ANR	1400162	Identifier	SUCCESS		1400061	0					
ANR	1400163	ReturnStatement	return FAILURE ;	2368:1:71573:71587	1400061	4	True				
ANR	1400164	Identifier	FAILURE		1400061	0					
ANR	1400165	ReturnType	static inline int		1400061	1					
ANR	1400166	Identifier	accel_find_sapi		1400061	2					
ANR	1400167	ParameterList			1400061	3					
ANR	1400168	CFGEntryNode	ENTRY		1400061		True				
ANR	1400169	CFGExitNode	EXIT		1400061		True				
ANR	1400170	Symbol	strcmp		1400061						
ANR	1400171	Symbol	NULL		1400061						
ANR	1400172	Symbol	sapi_module		1400061						
ANR	1400173	Symbol	SUCCESS		1400061						
ANR	1400174	Symbol	sapi_module . name		1400061						
ANR	1400175	Symbol	* sapi_name		1400061						
ANR	1400176	Symbol	supported_sapis		1400061						
ANR	1400177	Symbol	sapi_name		1400061						
ANR	1400178	Symbol	ZCG ( accel_directives ) . enable_cli		1400061						
ANR	1400179	Symbol	accel_directives		1400061						
ANR	1400180	Symbol	FAILURE		1400061						
ANR	1400181	Symbol	ZCG		1400061						
ANR	1400182	Function	zend_accel_init_shm	2371:0:71592:74202							
ANR	1400183	FunctionDef	zend_accel_init_shm ()		1400182	0					
ANR	1400184	CompoundStatement		2372:0:71629:74202	1400182	0					
ANR	1400185	ExpressionStatement	zend_shared_alloc_lock ( )	2373:1:71632:71656	1400182	0	True				
ANR	1400186	CallExpression	zend_shared_alloc_lock ( )		1400182	0					
ANR	1400187	Callee	zend_shared_alloc_lock		1400182	0					
ANR	1400188	Identifier	zend_shared_alloc_lock		1400182	0					
ANR	1400189	ArgumentList			1400182	1					
ANR	1400190	ExpressionStatement	accel_shared_globals = zend_shared_alloc ( sizeof ( zend_accel_shared_globals ) )	2375:1:71660:71735	1400182	1	True				
ANR	1400191	AssignmentExpression	accel_shared_globals = zend_shared_alloc ( sizeof ( zend_accel_shared_globals ) )		1400182	0		=			
ANR	1400192	Identifier	accel_shared_globals		1400182	0					
ANR	1400193	CallExpression	zend_shared_alloc ( sizeof ( zend_accel_shared_globals ) )		1400182	1					
ANR	1400194	Callee	zend_shared_alloc		1400182	0					
ANR	1400195	Identifier	zend_shared_alloc		1400182	0					
ANR	1400196	ArgumentList	sizeof ( zend_accel_shared_globals )		1400182	1					
ANR	1400197	Argument	sizeof ( zend_accel_shared_globals )		1400182	0					
ANR	1400198	SizeofExpression	sizeof ( zend_accel_shared_globals )		1400182	0					
ANR	1400199	Sizeof	sizeof		1400182	0					
ANR	1400200	SizeofOperand	zend_accel_shared_globals		1400182	1					
ANR	1400201	IfStatement	if ( ! accel_shared_globals )		1400182	2					
ANR	1400202	Condition	! accel_shared_globals	2376:5:71742:71762	1400182	0	True				
ANR	1400203	UnaryOperationExpression	! accel_shared_globals		1400182	0					
ANR	1400204	UnaryOperator	!		1400182	0					
ANR	1400205	Identifier	accel_shared_globals		1400182	1					
ANR	1400206	CompoundStatement		5:28:135:135	1400182	1					
ANR	1400207	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""Insufficient shared memory!"" )"	2377:2:71769:71833	1400182	0	True				
ANR	1400208	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""Insufficient shared memory!"" )"		1400182	0					
ANR	1400209	Callee	zend_accel_error		1400182	0					
ANR	1400210	Identifier	zend_accel_error		1400182	0					
ANR	1400211	ArgumentList	ACCEL_LOG_FATAL		1400182	1					
ANR	1400212	Argument	ACCEL_LOG_FATAL		1400182	0					
ANR	1400213	Identifier	ACCEL_LOG_FATAL		1400182	0					
ANR	1400214	Argument	"""Insufficient shared memory!"""		1400182	1					
ANR	1400215	PrimaryExpression	"""Insufficient shared memory!"""		1400182	0					
ANR	1400216	ExpressionStatement	zend_shared_alloc_unlock ( )	2378:2:71837:71863	1400182	1	True				
ANR	1400217	CallExpression	zend_shared_alloc_unlock ( )		1400182	0					
ANR	1400218	Callee	zend_shared_alloc_unlock		1400182	0					
ANR	1400219	Identifier	zend_shared_alloc_unlock		1400182	0					
ANR	1400220	ArgumentList			1400182	1					
ANR	1400221	ReturnStatement	return FAILURE ;	2379:2:71867:71881	1400182	2	True				
ANR	1400222	Identifier	FAILURE		1400182	0					
ANR	1400223	ExpressionStatement	ZSMMG ( app_shared_globals ) = accel_shared_globals	2381:1:71887:71935	1400182	3	True				
ANR	1400224	AssignmentExpression	ZSMMG ( app_shared_globals ) = accel_shared_globals		1400182	0		=			
ANR	1400225	CallExpression	ZSMMG ( app_shared_globals )		1400182	0					
ANR	1400226	Callee	ZSMMG		1400182	0					
ANR	1400227	Identifier	ZSMMG		1400182	0					
ANR	1400228	ArgumentList	app_shared_globals		1400182	1					
ANR	1400229	Argument	app_shared_globals		1400182	0					
ANR	1400230	Identifier	app_shared_globals		1400182	0					
ANR	1400231	Identifier	accel_shared_globals		1400182	1					
ANR	1400232	ExpressionStatement	"zend_accel_hash_init ( & ZCSG ( hash ) , ZCG ( accel_directives ) . max_accelerated_files )"	2383:1:71939:72017	1400182	4	True				
ANR	1400233	CallExpression	"zend_accel_hash_init ( & ZCSG ( hash ) , ZCG ( accel_directives ) . max_accelerated_files )"		1400182	0					
ANR	1400234	Callee	zend_accel_hash_init		1400182	0					
ANR	1400235	Identifier	zend_accel_hash_init		1400182	0					
ANR	1400236	ArgumentList	& ZCSG ( hash )		1400182	1					
ANR	1400237	Argument	& ZCSG ( hash )		1400182	0					
ANR	1400238	UnaryOperationExpression	& ZCSG ( hash )		1400182	0					
ANR	1400239	UnaryOperator	&		1400182	0					
ANR	1400240	CallExpression	ZCSG ( hash )		1400182	1					
ANR	1400241	Callee	ZCSG		1400182	0					
ANR	1400242	Identifier	ZCSG		1400182	0					
ANR	1400243	ArgumentList	hash		1400182	1					
ANR	1400244	Argument	hash		1400182	0					
ANR	1400245	Identifier	hash		1400182	0					
ANR	1400246	Argument	ZCG ( accel_directives ) . max_accelerated_files		1400182	1					
ANR	1400247	MemberAccess	ZCG ( accel_directives ) . max_accelerated_files		1400182	0					
ANR	1400248	CallExpression	ZCG ( accel_directives )		1400182	0					
ANR	1400249	Callee	ZCG		1400182	0					
ANR	1400250	Identifier	ZCG		1400182	0					
ANR	1400251	ArgumentList	accel_directives		1400182	1					
ANR	1400252	Argument	accel_directives		1400182	0					
ANR	1400253	Identifier	accel_directives		1400182	0					
ANR	1400254	Identifier	max_accelerated_files		1400182	1					
ANR	1400255	ExpressionStatement	ZCSG ( interned_strings_start ) = ZCSG ( interned_strings_end ) = NULL	2385:1:72021:72085	1400182	5	True				
ANR	1400256	AssignmentExpression	ZCSG ( interned_strings_start ) = ZCSG ( interned_strings_end ) = NULL		1400182	0		=			
ANR	1400257	CallExpression	ZCSG ( interned_strings_start )		1400182	0					
ANR	1400258	Callee	ZCSG		1400182	0					
ANR	1400259	Identifier	ZCSG		1400182	0					
ANR	1400260	ArgumentList	interned_strings_start		1400182	1					
ANR	1400261	Argument	interned_strings_start		1400182	0					
ANR	1400262	Identifier	interned_strings_start		1400182	0					
ANR	1400263	AssignmentExpression	ZCSG ( interned_strings_end ) = NULL		1400182	1		=			
ANR	1400264	CallExpression	ZCSG ( interned_strings_end )		1400182	0					
ANR	1400265	Callee	ZCSG		1400182	0					
ANR	1400266	Identifier	ZCSG		1400182	0					
ANR	1400267	ArgumentList	interned_strings_end		1400182	1					
ANR	1400268	Argument	interned_strings_end		1400182	0					
ANR	1400269	Identifier	interned_strings_end		1400182	0					
ANR	1400270	Identifier	NULL		1400182	1					
ANR	1400271	IdentifierDeclStatement	"ifndef ZTS zend_hash_init ( & ZCSG ( interned_strings ) , ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 ) , NULL , NULL , 1 ) ;"	2386:2:72089:72287	1400182	6	True				
ANR	1400272	IdentifierDecl	"zend_hash_init ( & ZCSG ( interned_strings ) , ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 ) , NULL , NULL , 1 )"		1400182	0					
ANR	1400273	IdentifierDeclType	ifndef ZTS		1400182	0					
ANR	1400274	Identifier	zend_hash_init		1400182	1					
ANR	1400275	Expression	"& ZCSG ( interned_strings ) , ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 ) , NULL , NULL , 1"		1400182	2					
ANR	1400276	UnaryOperationExpression	& ZCSG ( interned_strings )		1400182	0					
ANR	1400277	UnaryOperator	&		1400182	0					
ANR	1400278	CallExpression	ZCSG ( interned_strings )		1400182	1					
ANR	1400279	Callee	ZCSG		1400182	0					
ANR	1400280	Identifier	ZCSG		1400182	0					
ANR	1400281	ArgumentList	interned_strings		1400182	1					
ANR	1400282	Argument	interned_strings		1400182	0					
ANR	1400283	Identifier	interned_strings		1400182	0					
ANR	1400284	Expression	"( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 ) , NULL , NULL , 1"		1400182	1					
ANR	1400285	MultiplicativeExpression	( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) / ( sizeof ( Bucket ) + sizeof ( Bucket * ) + 8 )		1400182	0		/			
ANR	1400286	MultiplicativeExpression	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		1400182	0		*			
ANR	1400287	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		1400182	0					
ANR	1400288	CallExpression	ZCG ( accel_directives )		1400182	0					
ANR	1400289	Callee	ZCG		1400182	0					
ANR	1400290	Identifier	ZCG		1400182	0					
ANR	1400291	ArgumentList	accel_directives		1400182	1					
ANR	1400292	Argument	accel_directives		1400182	0					
ANR	1400293	Identifier	accel_directives		1400182	0					
ANR	1400294	Identifier	interned_strings_buffer		1400182	1					
ANR	1400295	MultiplicativeExpression	1024 * 1024		1400182	1		*			
ANR	1400296	PrimaryExpression	1024		1400182	0					
ANR	1400297	PrimaryExpression	1024		1400182	1					
ANR	1400298	AdditiveExpression	sizeof ( Bucket ) + sizeof ( Bucket * ) + 8		1400182	1		+			
ANR	1400299	SizeofExpression	sizeof ( Bucket )		1400182	0					
ANR	1400300	Sizeof	sizeof		1400182	0					
ANR	1400301	SizeofOperand	Bucket		1400182	1					
ANR	1400302	AdditiveExpression	sizeof ( Bucket * ) + 8		1400182	1		+			
ANR	1400303	SizeofExpression	sizeof ( Bucket * )		1400182	0					
ANR	1400304	Sizeof	sizeof		1400182	0					
ANR	1400305	SizeofOperand	Bucket *		1400182	1					
ANR	1400306	PrimaryExpression	8		1400182	1					
ANR	1400307	Expression	"NULL , NULL , 1"		1400182	1					
ANR	1400308	Identifier	NULL		1400182	0					
ANR	1400309	Expression	"NULL , 1"		1400182	1					
ANR	1400310	Identifier	NULL		1400182	0					
ANR	1400311	PrimaryExpression	1		1400182	1					
ANR	1400312	IfStatement	if ( ZCG ( accel_directives ) . interned_strings_buffer )		1400182	7					
ANR	1400313	Condition	ZCG ( accel_directives ) . interned_strings_buffer	2388:5:72294:72338	1400182	0	True				
ANR	1400314	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		1400182	0					
ANR	1400315	CallExpression	ZCG ( accel_directives )		1400182	0					
ANR	1400316	Callee	ZCG		1400182	0					
ANR	1400317	Identifier	ZCG		1400182	0					
ANR	1400318	ArgumentList	accel_directives		1400182	1					
ANR	1400319	Argument	accel_directives		1400182	0					
ANR	1400320	Identifier	accel_directives		1400182	0					
ANR	1400321	Identifier	interned_strings_buffer		1400182	1					
ANR	1400322	CompoundStatement		18:2:715:725	1400182	1					
ANR	1400323	IdentifierDeclStatement	void * data ;	2389:2:72345:72355	1400182	0	True				
ANR	1400324	IdentifierDecl	* data		1400182	0					
ANR	1400325	IdentifierDeclType	void *		1400182	0					
ANR	1400326	Identifier	data		1400182	1					
ANR	1400327	ExpressionStatement	ZCSG ( interned_strings ) . nTableMask = - ZCSG ( interned_strings ) . nTableSize	2391:2:72360:72430	1400182	1	True				
ANR	1400328	AssignmentExpression	ZCSG ( interned_strings ) . nTableMask = - ZCSG ( interned_strings ) . nTableSize		1400182	0		=			
ANR	1400329	MemberAccess	ZCSG ( interned_strings ) . nTableMask		1400182	0					
ANR	1400330	CallExpression	ZCSG ( interned_strings )		1400182	0					
ANR	1400331	Callee	ZCSG		1400182	0					
ANR	1400332	Identifier	ZCSG		1400182	0					
ANR	1400333	ArgumentList	interned_strings		1400182	1					
ANR	1400334	Argument	interned_strings		1400182	0					
ANR	1400335	Identifier	interned_strings		1400182	0					
ANR	1400336	Identifier	nTableMask		1400182	1					
ANR	1400337	UnaryOperationExpression	- ZCSG ( interned_strings ) . nTableSize		1400182	1					
ANR	1400338	UnaryOperator	-		1400182	0					
ANR	1400339	MemberAccess	ZCSG ( interned_strings ) . nTableSize		1400182	1					
ANR	1400340	CallExpression	ZCSG ( interned_strings )		1400182	0					
ANR	1400341	Callee	ZCSG		1400182	0					
ANR	1400342	Identifier	ZCSG		1400182	0					
ANR	1400343	ArgumentList	interned_strings		1400182	1					
ANR	1400344	Argument	interned_strings		1400182	0					
ANR	1400345	Identifier	interned_strings		1400182	0					
ANR	1400346	Identifier	nTableSize		1400182	1					
ANR	1400347	ExpressionStatement	data = zend_shared_alloc ( HT_SIZE ( & ZCSG ( interned_strings ) ) )	2392:2:72434:72492	1400182	2	True				
ANR	1400348	AssignmentExpression	data = zend_shared_alloc ( HT_SIZE ( & ZCSG ( interned_strings ) ) )		1400182	0		=			
ANR	1400349	Identifier	data		1400182	0					
ANR	1400350	CallExpression	zend_shared_alloc ( HT_SIZE ( & ZCSG ( interned_strings ) ) )		1400182	1					
ANR	1400351	Callee	zend_shared_alloc		1400182	0					
ANR	1400352	Identifier	zend_shared_alloc		1400182	0					
ANR	1400353	ArgumentList	HT_SIZE ( & ZCSG ( interned_strings ) )		1400182	1					
ANR	1400354	Argument	HT_SIZE ( & ZCSG ( interned_strings ) )		1400182	0					
ANR	1400355	CallExpression	HT_SIZE ( & ZCSG ( interned_strings ) )		1400182	0					
ANR	1400356	Callee	HT_SIZE		1400182	0					
ANR	1400357	Identifier	HT_SIZE		1400182	0					
ANR	1400358	ArgumentList	& ZCSG ( interned_strings )		1400182	1					
ANR	1400359	Argument	& ZCSG ( interned_strings )		1400182	0					
ANR	1400360	UnaryOperationExpression	& ZCSG ( interned_strings )		1400182	0					
ANR	1400361	UnaryOperator	&		1400182	0					
ANR	1400362	CallExpression	ZCSG ( interned_strings )		1400182	1					
ANR	1400363	Callee	ZCSG		1400182	0					
ANR	1400364	Identifier	ZCSG		1400182	0					
ANR	1400365	ArgumentList	interned_strings		1400182	1					
ANR	1400366	Argument	interned_strings		1400182	0					
ANR	1400367	Identifier	interned_strings		1400182	0					
ANR	1400368	ExpressionStatement	ZCSG ( interned_strings_start ) = zend_shared_alloc ( ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) )	2393:2:72496:72607	1400182	3	True				
ANR	1400369	AssignmentExpression	ZCSG ( interned_strings_start ) = zend_shared_alloc ( ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) )		1400182	0		=			
ANR	1400370	CallExpression	ZCSG ( interned_strings_start )		1400182	0					
ANR	1400371	Callee	ZCSG		1400182	0					
ANR	1400372	Identifier	ZCSG		1400182	0					
ANR	1400373	ArgumentList	interned_strings_start		1400182	1					
ANR	1400374	Argument	interned_strings_start		1400182	0					
ANR	1400375	Identifier	interned_strings_start		1400182	0					
ANR	1400376	CallExpression	zend_shared_alloc ( ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 ) )		1400182	1					
ANR	1400377	Callee	zend_shared_alloc		1400182	0					
ANR	1400378	Identifier	zend_shared_alloc		1400182	0					
ANR	1400379	ArgumentList	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		1400182	1					
ANR	1400380	Argument	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		1400182	0					
ANR	1400381	MultiplicativeExpression	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		1400182	0		*			
ANR	1400382	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		1400182	0					
ANR	1400383	CallExpression	ZCG ( accel_directives )		1400182	0					
ANR	1400384	Callee	ZCG		1400182	0					
ANR	1400385	Identifier	ZCG		1400182	0					
ANR	1400386	ArgumentList	accel_directives		1400182	1					
ANR	1400387	Argument	accel_directives		1400182	0					
ANR	1400388	Identifier	accel_directives		1400182	0					
ANR	1400389	Identifier	interned_strings_buffer		1400182	1					
ANR	1400390	MultiplicativeExpression	1024 * 1024		1400182	1		*			
ANR	1400391	PrimaryExpression	1024		1400182	0					
ANR	1400392	PrimaryExpression	1024		1400182	1					
ANR	1400393	IfStatement	if ( ! data || ! ZCSG ( interned_strings_start ) )		1400182	4					
ANR	1400394	Condition	! data || ! ZCSG ( interned_strings_start )	2394:6:72615:72652	1400182	0	True				
ANR	1400395	OrExpression	! data || ! ZCSG ( interned_strings_start )		1400182	0		||			
ANR	1400396	UnaryOperationExpression	! data		1400182	0					
ANR	1400397	UnaryOperator	!		1400182	0					
ANR	1400398	Identifier	data		1400182	1					
ANR	1400399	UnaryOperationExpression	! ZCSG ( interned_strings_start )		1400182	1					
ANR	1400400	UnaryOperator	!		1400182	0					
ANR	1400401	CallExpression	ZCSG ( interned_strings_start )		1400182	1					
ANR	1400402	Callee	ZCSG		1400182	0					
ANR	1400403	Identifier	ZCSG		1400182	0					
ANR	1400404	ArgumentList	interned_strings_start		1400182	1					
ANR	1400405	Argument	interned_strings_start		1400182	0					
ANR	1400406	Identifier	interned_strings_start		1400182	0					
ANR	1400407	CompoundStatement		23:46:1025:1025	1400182	1					
ANR	1400408	Statement	zend_accel_error	2395:3:72660:72675	1400182	0	True				
ANR	1400409	Statement	(	2395:19:72676:72676	1400182	1	True				
ANR	1400410	Statement	ACCEL_LOG_FATAL	2395:20:72677:72691	1400182	2	True				
ANR	1400411	Statement	","	2395:35:72692:72692	1400182	3	True				
ANR	1400412	Statement	ACCELERATOR_PRODUCT_NAME	2395:37:72694:72717	1400182	4	True				
ANR	1400413	Statement	""" cannot allocate buffer for interned strings"""	2395:62:72719:72764	1400182	5	True				
ANR	1400414	Statement	)	2395:108:72765:72765	1400182	6	True				
ANR	1400415	ExpressionStatement		2395:109:72766:72766	1400182	7	True				
ANR	1400416	ExpressionStatement	zend_shared_alloc_unlock ( )	2396:3:72771:72797	1400182	8	True				
ANR	1400417	CallExpression	zend_shared_alloc_unlock ( )		1400182	0					
ANR	1400418	Callee	zend_shared_alloc_unlock		1400182	0					
ANR	1400419	Identifier	zend_shared_alloc_unlock		1400182	0					
ANR	1400420	ArgumentList			1400182	1					
ANR	1400421	ReturnStatement	return FAILURE ;	2397:3:72802:72816	1400182	9	True				
ANR	1400422	Identifier	FAILURE		1400182	0					
ANR	1400423	ExpressionStatement	"HT_SET_DATA_ADDR ( & ZCSG ( interned_strings ) , data )"	2399:2:72824:72871	1400182	5	True				
ANR	1400424	CallExpression	"HT_SET_DATA_ADDR ( & ZCSG ( interned_strings ) , data )"		1400182	0					
ANR	1400425	Callee	HT_SET_DATA_ADDR		1400182	0					
ANR	1400426	Identifier	HT_SET_DATA_ADDR		1400182	0					
ANR	1400427	ArgumentList	& ZCSG ( interned_strings )		1400182	1					
ANR	1400428	Argument	& ZCSG ( interned_strings )		1400182	0					
ANR	1400429	UnaryOperationExpression	& ZCSG ( interned_strings )		1400182	0					
ANR	1400430	UnaryOperator	&		1400182	0					
ANR	1400431	CallExpression	ZCSG ( interned_strings )		1400182	1					
ANR	1400432	Callee	ZCSG		1400182	0					
ANR	1400433	Identifier	ZCSG		1400182	0					
ANR	1400434	ArgumentList	interned_strings		1400182	1					
ANR	1400435	Argument	interned_strings		1400182	0					
ANR	1400436	Identifier	interned_strings		1400182	0					
ANR	1400437	Argument	data		1400182	1					
ANR	1400438	Identifier	data		1400182	0					
ANR	1400439	ExpressionStatement	HT_HASH_RESET ( & ZCSG ( interned_strings ) )	2400:2:72875:72913	1400182	6	True				
ANR	1400440	CallExpression	HT_HASH_RESET ( & ZCSG ( interned_strings ) )		1400182	0					
ANR	1400441	Callee	HT_HASH_RESET		1400182	0					
ANR	1400442	Identifier	HT_HASH_RESET		1400182	0					
ANR	1400443	ArgumentList	& ZCSG ( interned_strings )		1400182	1					
ANR	1400444	Argument	& ZCSG ( interned_strings )		1400182	0					
ANR	1400445	UnaryOperationExpression	& ZCSG ( interned_strings )		1400182	0					
ANR	1400446	UnaryOperator	&		1400182	0					
ANR	1400447	CallExpression	ZCSG ( interned_strings )		1400182	1					
ANR	1400448	Callee	ZCSG		1400182	0					
ANR	1400449	Identifier	ZCSG		1400182	0					
ANR	1400450	ArgumentList	interned_strings		1400182	1					
ANR	1400451	Argument	interned_strings		1400182	0					
ANR	1400452	Identifier	interned_strings		1400182	0					
ANR	1400453	ExpressionStatement	ZCSG ( interned_strings_end ) = ZCSG ( interned_strings_start ) + ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 )	2401:2:72917:73040	1400182	7	True				
ANR	1400454	AssignmentExpression	ZCSG ( interned_strings_end ) = ZCSG ( interned_strings_start ) + ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 )		1400182	0		=			
ANR	1400455	CallExpression	ZCSG ( interned_strings_end )		1400182	0					
ANR	1400456	Callee	ZCSG		1400182	0					
ANR	1400457	Identifier	ZCSG		1400182	0					
ANR	1400458	ArgumentList	interned_strings_end		1400182	1					
ANR	1400459	Argument	interned_strings_end		1400182	0					
ANR	1400460	Identifier	interned_strings_end		1400182	0					
ANR	1400461	AdditiveExpression	ZCSG ( interned_strings_start ) + ( ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024 )		1400182	1		+			
ANR	1400462	CallExpression	ZCSG ( interned_strings_start )		1400182	0					
ANR	1400463	Callee	ZCSG		1400182	0					
ANR	1400464	Identifier	ZCSG		1400182	0					
ANR	1400465	ArgumentList	interned_strings_start		1400182	1					
ANR	1400466	Argument	interned_strings_start		1400182	0					
ANR	1400467	Identifier	interned_strings_start		1400182	0					
ANR	1400468	MultiplicativeExpression	ZCG ( accel_directives ) . interned_strings_buffer * 1024 * 1024		1400182	1		*			
ANR	1400469	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		1400182	0					
ANR	1400470	CallExpression	ZCG ( accel_directives )		1400182	0					
ANR	1400471	Callee	ZCG		1400182	0					
ANR	1400472	Identifier	ZCG		1400182	0					
ANR	1400473	ArgumentList	accel_directives		1400182	1					
ANR	1400474	Argument	accel_directives		1400182	0					
ANR	1400475	Identifier	accel_directives		1400182	0					
ANR	1400476	Identifier	interned_strings_buffer		1400182	1					
ANR	1400477	MultiplicativeExpression	1024 * 1024		1400182	1		*			
ANR	1400478	PrimaryExpression	1024		1400182	0					
ANR	1400479	PrimaryExpression	1024		1400182	1					
ANR	1400480	ExpressionStatement	ZCSG ( interned_strings_top ) = ZCSG ( interned_strings_start )	2402:2:73044:73103	1400182	8	True				
ANR	1400481	AssignmentExpression	ZCSG ( interned_strings_top ) = ZCSG ( interned_strings_start )		1400182	0		=			
ANR	1400482	CallExpression	ZCSG ( interned_strings_top )		1400182	0					
ANR	1400483	Callee	ZCSG		1400182	0					
ANR	1400484	Identifier	ZCSG		1400182	0					
ANR	1400485	ArgumentList	interned_strings_top		1400182	1					
ANR	1400486	Argument	interned_strings_top		1400182	0					
ANR	1400487	Identifier	interned_strings_top		1400182	0					
ANR	1400488	CallExpression	ZCSG ( interned_strings_start )		1400182	1					
ANR	1400489	Callee	ZCSG		1400182	0					
ANR	1400490	Identifier	ZCSG		1400182	0					
ANR	1400491	ArgumentList	interned_strings_start		1400182	1					
ANR	1400492	Argument	interned_strings_start		1400182	0					
ANR	1400493	Identifier	interned_strings_start		1400182	0					
ANR	1400494	IdentifierDeclStatement	endif orig_new_interned_string = zend_new_interned_string ;	2409:2:73353:73412	1400182	8	True				
ANR	1400495	IdentifierDecl	orig_new_interned_string = zend_new_interned_string		1400182	0					
ANR	1400496	IdentifierDeclType	endif		1400182	0					
ANR	1400497	Identifier	orig_new_interned_string		1400182	1					
ANR	1400498	AssignmentExpression	orig_new_interned_string = zend_new_interned_string		1400182	2		=			
ANR	1400499	Identifier	zend_new_interned_string		1400182	0					
ANR	1400500	Identifier	zend_new_interned_string		1400182	1					
ANR	1400501	ExpressionStatement	orig_interned_strings_snapshot = zend_interned_strings_snapshot	2412:1:73415:73478	1400182	9	True				
ANR	1400502	AssignmentExpression	orig_interned_strings_snapshot = zend_interned_strings_snapshot		1400182	0		=			
ANR	1400503	Identifier	orig_interned_strings_snapshot		1400182	0					
ANR	1400504	Identifier	zend_interned_strings_snapshot		1400182	1					
ANR	1400505	ExpressionStatement	orig_interned_strings_restore = zend_interned_strings_restore	2413:1:73481:73542	1400182	10	True				
ANR	1400506	AssignmentExpression	orig_interned_strings_restore = zend_interned_strings_restore		1400182	0		=			
ANR	1400507	Identifier	orig_interned_strings_restore		1400182	0					
ANR	1400508	Identifier	zend_interned_strings_restore		1400182	1					
ANR	1400509	ExpressionStatement	zend_new_interned_string = accel_new_interned_string_for_php	2414:1:73545:73605	1400182	11	True				
ANR	1400510	AssignmentExpression	zend_new_interned_string = accel_new_interned_string_for_php		1400182	0		=			
ANR	1400511	Identifier	zend_new_interned_string		1400182	0					
ANR	1400512	Identifier	accel_new_interned_string_for_php		1400182	1					
ANR	1400513	ExpressionStatement	zend_interned_strings_snapshot = accel_interned_strings_snapshot_for_php	2415:1:73608:73680	1400182	12	True				
ANR	1400514	AssignmentExpression	zend_interned_strings_snapshot = accel_interned_strings_snapshot_for_php		1400182	0		=			
ANR	1400515	Identifier	zend_interned_strings_snapshot		1400182	0					
ANR	1400516	Identifier	accel_interned_strings_snapshot_for_php		1400182	1					
ANR	1400517	ExpressionStatement	zend_interned_strings_restore = accel_interned_strings_restore_for_php	2416:1:73683:73753	1400182	13	True				
ANR	1400518	AssignmentExpression	zend_interned_strings_restore = accel_interned_strings_restore_for_php		1400182	0		=			
ANR	1400519	Identifier	zend_interned_strings_restore		1400182	0					
ANR	1400520	Identifier	accel_interned_strings_restore_for_php		1400182	1					
ANR	1400521	Statement	ifndef	2418:2:73758:73763	1400182	14	True				
ANR	1400522	Statement	ZTS	2418:9:73765:73767	1400182	15	True				
ANR	1400523	IfStatement	if ( ZCG ( accel_directives ) . interned_strings_buffer )		1400182	16					
ANR	1400524	Condition	ZCG ( accel_directives ) . interned_strings_buffer	2419:5:73774:73818	1400182	0	True				
ANR	1400525	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		1400182	0					
ANR	1400526	CallExpression	ZCG ( accel_directives )		1400182	0					
ANR	1400527	Callee	ZCG		1400182	0					
ANR	1400528	Identifier	ZCG		1400182	0					
ANR	1400529	ArgumentList	accel_directives		1400182	1					
ANR	1400530	Argument	accel_directives		1400182	0					
ANR	1400531	Identifier	accel_directives		1400182	0					
ANR	1400532	Identifier	interned_strings_buffer		1400182	1					
ANR	1400533	CompoundStatement		48:52:2191:2191	1400182	1					
ANR	1400534	ExpressionStatement	accel_use_shm_interned_strings ( )	2420:2:73825:73857	1400182	0	True				
ANR	1400535	CallExpression	accel_use_shm_interned_strings ( )		1400182	0					
ANR	1400536	Callee	accel_use_shm_interned_strings		1400182	0					
ANR	1400537	Identifier	accel_use_shm_interned_strings		1400182	0					
ANR	1400538	ArgumentList			1400182	1					
ANR	1400539	ExpressionStatement	accel_interned_strings_save_state ( )	2421:2:73861:73896	1400182	1	True				
ANR	1400540	CallExpression	accel_interned_strings_save_state ( )		1400182	0					
ANR	1400541	Callee	accel_interned_strings_save_state		1400182	0					
ANR	1400542	Identifier	accel_interned_strings_save_state		1400182	0					
ANR	1400543	ArgumentList			1400182	1					
ANR	1400544	IdentifierDeclStatement	endif zend_reset_cache_vars ( ) ;	2423:2:73903:73934	1400182	17	True				
ANR	1400545	IdentifierDecl	zend_reset_cache_vars ( )		1400182	0					
ANR	1400546	IdentifierDeclType	endif		1400182	0					
ANR	1400547	Identifier	zend_reset_cache_vars		1400182	1					
ANR	1400548	ExpressionStatement	ZCSG ( oom_restarts ) = 0	2427:1:73938:73960	1400182	18	True				
ANR	1400549	AssignmentExpression	ZCSG ( oom_restarts ) = 0		1400182	0		=			
ANR	1400550	CallExpression	ZCSG ( oom_restarts )		1400182	0					
ANR	1400551	Callee	ZCSG		1400182	0					
ANR	1400552	Identifier	ZCSG		1400182	0					
ANR	1400553	ArgumentList	oom_restarts		1400182	1					
ANR	1400554	Argument	oom_restarts		1400182	0					
ANR	1400555	Identifier	oom_restarts		1400182	0					
ANR	1400556	PrimaryExpression	0		1400182	1					
ANR	1400557	ExpressionStatement	ZCSG ( hash_restarts ) = 0	2428:1:73963:73986	1400182	19	True				
ANR	1400558	AssignmentExpression	ZCSG ( hash_restarts ) = 0		1400182	0		=			
ANR	1400559	CallExpression	ZCSG ( hash_restarts )		1400182	0					
ANR	1400560	Callee	ZCSG		1400182	0					
ANR	1400561	Identifier	ZCSG		1400182	0					
ANR	1400562	ArgumentList	hash_restarts		1400182	1					
ANR	1400563	Argument	hash_restarts		1400182	0					
ANR	1400564	Identifier	hash_restarts		1400182	0					
ANR	1400565	PrimaryExpression	0		1400182	1					
ANR	1400566	ExpressionStatement	ZCSG ( manual_restarts ) = 0	2429:1:73989:74014	1400182	20	True				
ANR	1400567	AssignmentExpression	ZCSG ( manual_restarts ) = 0		1400182	0		=			
ANR	1400568	CallExpression	ZCSG ( manual_restarts )		1400182	0					
ANR	1400569	Callee	ZCSG		1400182	0					
ANR	1400570	Identifier	ZCSG		1400182	0					
ANR	1400571	ArgumentList	manual_restarts		1400182	1					
ANR	1400572	Argument	manual_restarts		1400182	0					
ANR	1400573	Identifier	manual_restarts		1400182	0					
ANR	1400574	PrimaryExpression	0		1400182	1					
ANR	1400575	ExpressionStatement	ZCSG ( accelerator_enabled ) = 1	2431:1:74018:74047	1400182	21	True				
ANR	1400576	AssignmentExpression	ZCSG ( accelerator_enabled ) = 1		1400182	0		=			
ANR	1400577	CallExpression	ZCSG ( accelerator_enabled )		1400182	0					
ANR	1400578	Callee	ZCSG		1400182	0					
ANR	1400579	Identifier	ZCSG		1400182	0					
ANR	1400580	ArgumentList	accelerator_enabled		1400182	1					
ANR	1400581	Argument	accelerator_enabled		1400182	0					
ANR	1400582	Identifier	accelerator_enabled		1400182	0					
ANR	1400583	PrimaryExpression	1		1400182	1					
ANR	1400584	ExpressionStatement	ZCSG ( start_time ) = zend_accel_get_time ( )	2432:1:74050:74090	1400182	22	True				
ANR	1400585	AssignmentExpression	ZCSG ( start_time ) = zend_accel_get_time ( )		1400182	0		=			
ANR	1400586	CallExpression	ZCSG ( start_time )		1400182	0					
ANR	1400587	Callee	ZCSG		1400182	0					
ANR	1400588	Identifier	ZCSG		1400182	0					
ANR	1400589	ArgumentList	start_time		1400182	1					
ANR	1400590	Argument	start_time		1400182	0					
ANR	1400591	Identifier	start_time		1400182	0					
ANR	1400592	CallExpression	zend_accel_get_time ( )		1400182	1					
ANR	1400593	Callee	zend_accel_get_time		1400182	0					
ANR	1400594	Identifier	zend_accel_get_time		1400182	0					
ANR	1400595	ArgumentList			1400182	1					
ANR	1400596	ExpressionStatement	ZCSG ( last_restart_time ) = 0	2433:1:74093:74120	1400182	23	True				
ANR	1400597	AssignmentExpression	ZCSG ( last_restart_time ) = 0		1400182	0		=			
ANR	1400598	CallExpression	ZCSG ( last_restart_time )		1400182	0					
ANR	1400599	Callee	ZCSG		1400182	0					
ANR	1400600	Identifier	ZCSG		1400182	0					
ANR	1400601	ArgumentList	last_restart_time		1400182	1					
ANR	1400602	Argument	last_restart_time		1400182	0					
ANR	1400603	Identifier	last_restart_time		1400182	0					
ANR	1400604	PrimaryExpression	0		1400182	1					
ANR	1400605	ExpressionStatement	ZCSG ( restart_in_progress ) = 0	2434:1:74123:74152	1400182	24	True				
ANR	1400606	AssignmentExpression	ZCSG ( restart_in_progress ) = 0		1400182	0		=			
ANR	1400607	CallExpression	ZCSG ( restart_in_progress )		1400182	0					
ANR	1400608	Callee	ZCSG		1400182	0					
ANR	1400609	Identifier	ZCSG		1400182	0					
ANR	1400610	ArgumentList	restart_in_progress		1400182	1					
ANR	1400611	Argument	restart_in_progress		1400182	0					
ANR	1400612	Identifier	restart_in_progress		1400182	0					
ANR	1400613	PrimaryExpression	0		1400182	1					
ANR	1400614	ExpressionStatement	zend_shared_alloc_unlock ( )	2436:1:74156:74182	1400182	25	True				
ANR	1400615	CallExpression	zend_shared_alloc_unlock ( )		1400182	0					
ANR	1400616	Callee	zend_shared_alloc_unlock		1400182	0					
ANR	1400617	Identifier	zend_shared_alloc_unlock		1400182	0					
ANR	1400618	ArgumentList			1400182	1					
ANR	1400619	ReturnStatement	return SUCCESS ;	2438:1:74186:74200	1400182	26	True				
ANR	1400620	Identifier	SUCCESS		1400182	0					
ANR	1400621	ReturnType	static int		1400182	1					
ANR	1400622	Identifier	zend_accel_init_shm		1400182	2					
ANR	1400623	ParameterList			1400182	3					
ANR	1400624	CFGEntryNode	ENTRY		1400182		True				
ANR	1400625	CFGExitNode	EXIT		1400182		True				
ANR	1400626	Symbol	zend_shared_alloc		1400182						
ANR	1400627	Symbol	ACCEL_LOG_FATAL		1400182						
ANR	1400628	Symbol	data		1400182						
ANR	1400629	Symbol	interned_strings_end		1400182						
ANR	1400630	Symbol	orig_interned_strings_snapshot		1400182						
ANR	1400631	Symbol	restart_in_progress		1400182						
ANR	1400632	Symbol	zend_accel_get_time		1400182						
ANR	1400633	Symbol	interned_strings_top		1400182						
ANR	1400634	Symbol	ZCG ( accel_directives ) . max_accelerated_files		1400182						
ANR	1400635	Symbol	ZCSG		1400182						
ANR	1400636	Symbol	ZSMMG		1400182						
ANR	1400637	Symbol	zend_interned_strings_restore		1400182						
ANR	1400638	Symbol	accel_shared_globals		1400182						
ANR	1400639	Symbol	ZCSG ( interned_strings ) . nTableSize		1400182						
ANR	1400640	Symbol	interned_strings_start		1400182						
ANR	1400641	Symbol	orig_interned_strings_restore		1400182						
ANR	1400642	Symbol	app_shared_globals		1400182						
ANR	1400643	Symbol	NULL		1400182						
ANR	1400644	Symbol	SUCCESS		1400182						
ANR	1400645	Symbol	accel_interned_strings_restore_for_php		1400182						
ANR	1400646	Symbol	zend_interned_strings_snapshot		1400182						
ANR	1400647	Symbol	accel_new_interned_string_for_php		1400182						
ANR	1400648	Symbol	FAILURE		1400182						
ANR	1400649	Symbol	HT_SIZE		1400182						
ANR	1400650	Symbol	accelerator_enabled		1400182						
ANR	1400651	Symbol	orig_new_interned_string		1400182						
ANR	1400652	Symbol	start_time		1400182						
ANR	1400653	Symbol	& ZCSG		1400182						
ANR	1400654	Symbol	accel_interned_strings_snapshot_for_php		1400182						
ANR	1400655	Symbol	zend_new_interned_string		1400182						
ANR	1400656	Symbol	oom_restarts		1400182						
ANR	1400657	Symbol	last_restart_time		1400182						
ANR	1400658	Symbol	ZCSG ( interned_strings ) . nTableMask		1400182						
ANR	1400659	Symbol	ZCG ( accel_directives ) . interned_strings_buffer		1400182						
ANR	1400660	Symbol	manual_restarts		1400182						
ANR	1400661	Symbol	zend_reset_cache_vars		1400182						
ANR	1400662	Symbol	interned_strings		1400182						
ANR	1400663	Symbol	zend_hash_init		1400182						
ANR	1400664	Symbol	accel_directives		1400182						
ANR	1400665	Symbol	hash		1400182						
ANR	1400666	Symbol	ZCG		1400182						
ANR	1400667	Symbol	hash_restarts		1400182						
ANR	1400668	Function	accel_globals_ctor	2441:0:74205:74412							
ANR	1400669	FunctionDef	accel_globals_ctor (zend_accel_globals * accel_globals)		1400668	0					
ANR	1400670	CompoundStatement		2442:0:74271:74412	1400668	0					
ANR	1400671	ExpressionStatement	ZEND_TSRMLS_CACHE_UPDATE ( )	2444:1:74322:74348	1400668	0	True				
ANR	1400672	CallExpression	ZEND_TSRMLS_CACHE_UPDATE ( )		1400668	0					
ANR	1400673	Callee	ZEND_TSRMLS_CACHE_UPDATE		1400668	0					
ANR	1400674	Identifier	ZEND_TSRMLS_CACHE_UPDATE		1400668	0					
ANR	1400675	ArgumentList			1400668	1					
ANR	1400676	ExpressionStatement	"memset ( accel_globals , 0 , sizeof ( zend_accel_globals ) )"	2446:1:74358:74410	1400668	1	True				
ANR	1400677	CallExpression	"memset ( accel_globals , 0 , sizeof ( zend_accel_globals ) )"		1400668	0					
ANR	1400678	Callee	memset		1400668	0					
ANR	1400679	Identifier	memset		1400668	0					
ANR	1400680	ArgumentList	accel_globals		1400668	1					
ANR	1400681	Argument	accel_globals		1400668	0					
ANR	1400682	Identifier	accel_globals		1400668	0					
ANR	1400683	Argument	0		1400668	1					
ANR	1400684	PrimaryExpression	0		1400668	0					
ANR	1400685	Argument	sizeof ( zend_accel_globals )		1400668	2					
ANR	1400686	SizeofExpression	sizeof ( zend_accel_globals )		1400668	0					
ANR	1400687	Sizeof	sizeof		1400668	0					
ANR	1400688	SizeofOperand	zend_accel_globals		1400668	1					
ANR	1400689	ReturnType	static void		1400668	1					
ANR	1400690	Identifier	accel_globals_ctor		1400668	2					
ANR	1400691	ParameterList	zend_accel_globals * accel_globals		1400668	3					
ANR	1400692	Parameter	zend_accel_globals * accel_globals	2441:31:74236:74268	1400668	0	True				
ANR	1400693	ParameterType	zend_accel_globals *		1400668	0					
ANR	1400694	Identifier	accel_globals		1400668	1					
ANR	1400695	CFGEntryNode	ENTRY		1400668		True				
ANR	1400696	CFGExitNode	EXIT		1400668		True				
ANR	1400697	Symbol	accel_globals		1400668						
ANR	1400698	Function	accel_globals_internal_func_dtor	2449:0:74415:74492							
ANR	1400699	FunctionDef	accel_globals_internal_func_dtor (zval * zv)		1400698	0					
ANR	1400700	CompoundStatement		2450:0:74470:74492	1400698	0					
ANR	1400701	ExpressionStatement	free ( Z_PTR_P ( zv ) )	2451:1:74473:74490	1400698	0	True				
ANR	1400702	CallExpression	free ( Z_PTR_P ( zv ) )		1400698	0					
ANR	1400703	Callee	free		1400698	0					
ANR	1400704	Identifier	free		1400698	0					
ANR	1400705	ArgumentList	Z_PTR_P ( zv )		1400698	1					
ANR	1400706	Argument	Z_PTR_P ( zv )		1400698	0					
ANR	1400707	CallExpression	Z_PTR_P ( zv )		1400698	0					
ANR	1400708	Callee	Z_PTR_P		1400698	0					
ANR	1400709	Identifier	Z_PTR_P		1400698	0					
ANR	1400710	ArgumentList	zv		1400698	1					
ANR	1400711	Argument	zv		1400698	0					
ANR	1400712	Identifier	zv		1400698	0					
ANR	1400713	ReturnType	static void		1400698	1					
ANR	1400714	Identifier	accel_globals_internal_func_dtor		1400698	2					
ANR	1400715	ParameterList	zval * zv		1400698	3					
ANR	1400716	Parameter	zval * zv	2449:45:74460:74467	1400698	0	True				
ANR	1400717	ParameterType	zval *		1400698	0					
ANR	1400718	Identifier	zv		1400698	1					
ANR	1400719	CFGEntryNode	ENTRY		1400698		True				
ANR	1400720	CFGExitNode	EXIT		1400698		True				
ANR	1400721	Symbol	Z_PTR_P		1400698						
ANR	1400722	Symbol	zv		1400698						
ANR	1400723	Function	accel_globals_dtor	2454:0:74495:74748							
ANR	1400724	FunctionDef	accel_globals_dtor (zend_accel_globals * accel_globals)		1400723	0					
ANR	1400725	CompoundStatement		2455:0:74561:74748	1400723	0					
ANR	1400726	IfStatement	if ( accel_globals -> function_table . nTableSize )		1400723	0					
ANR	1400727	Condition	accel_globals -> function_table . nTableSize	2456:5:74568:74607	1400723	0	True				
ANR	1400728	MemberAccess	accel_globals -> function_table . nTableSize		1400723	0					
ANR	1400729	PtrMemberAccess	accel_globals -> function_table		1400723	0					
ANR	1400730	Identifier	accel_globals		1400723	0					
ANR	1400731	Identifier	function_table		1400723	1					
ANR	1400732	Identifier	nTableSize		1400723	1					
ANR	1400733	CompoundStatement		2:47:48:48	1400723	1					
ANR	1400734	ExpressionStatement	accel_globals -> function_table . pDestructor = accel_globals_internal_func_dtor	2457:2:74614:74690	1400723	0	True				
ANR	1400735	AssignmentExpression	accel_globals -> function_table . pDestructor = accel_globals_internal_func_dtor		1400723	0		=			
ANR	1400736	MemberAccess	accel_globals -> function_table . pDestructor		1400723	0					
ANR	1400737	PtrMemberAccess	accel_globals -> function_table		1400723	0					
ANR	1400738	Identifier	accel_globals		1400723	0					
ANR	1400739	Identifier	function_table		1400723	1					
ANR	1400740	Identifier	pDestructor		1400723	1					
ANR	1400741	Identifier	accel_globals_internal_func_dtor		1400723	1					
ANR	1400742	ExpressionStatement	zend_hash_destroy ( & accel_globals -> function_table )	2458:2:74694:74743	1400723	1	True				
ANR	1400743	CallExpression	zend_hash_destroy ( & accel_globals -> function_table )		1400723	0					
ANR	1400744	Callee	zend_hash_destroy		1400723	0					
ANR	1400745	Identifier	zend_hash_destroy		1400723	0					
ANR	1400746	ArgumentList	& accel_globals -> function_table		1400723	1					
ANR	1400747	Argument	& accel_globals -> function_table		1400723	0					
ANR	1400748	UnaryOperationExpression	& accel_globals -> function_table		1400723	0					
ANR	1400749	UnaryOperator	&		1400723	0					
ANR	1400750	PtrMemberAccess	accel_globals -> function_table		1400723	1					
ANR	1400751	Identifier	accel_globals		1400723	0					
ANR	1400752	Identifier	function_table		1400723	1					
ANR	1400753	ReturnType	static void		1400723	1					
ANR	1400754	Identifier	accel_globals_dtor		1400723	2					
ANR	1400755	ParameterList	zend_accel_globals * accel_globals		1400723	3					
ANR	1400756	Parameter	zend_accel_globals * accel_globals	2454:31:74526:74558	1400723	0	True				
ANR	1400757	ParameterType	zend_accel_globals *		1400723	0					
ANR	1400758	Identifier	accel_globals		1400723	1					
ANR	1400759	CFGEntryNode	ENTRY		1400723		True				
ANR	1400760	CFGExitNode	EXIT		1400723		True				
ANR	1400761	Symbol	accel_globals		1400723						
ANR	1400762	Symbol	* accel_globals		1400723						
ANR	1400763	Symbol	accel_globals -> function_table . pDestructor		1400723						
ANR	1400764	Symbol	accel_globals_internal_func_dtor		1400723						
ANR	1400765	Symbol	& accel_globals -> function_table		1400723						
ANR	1400766	Symbol	accel_globals -> function_table		1400723						
ANR	1400767	Symbol	accel_globals -> function_table . nTableSize		1400723						
ANR	1400768	Function	accel_gen_system_id	2464:0:74935:75765							
ANR	1400769	FunctionDef	accel_gen_system_id ()		1400768	0					
ANR	1400770	CompoundStatement		2465:0:74973:75765	1400768	0					
ANR	1400771	IdentifierDeclStatement	PHP_MD5_CTX context ;	2466:1:74976:74995	1400768	0	True				
ANR	1400772	IdentifierDecl	context		1400768	0					
ANR	1400773	IdentifierDeclType	PHP_MD5_CTX		1400768	0					
ANR	1400774	Identifier	context		1400768	1					
ANR	1400775	IdentifierDeclStatement	"unsigned char digest [ 16 ] , c ;"	2467:1:74998:75025	1400768	1	True				
ANR	1400776	IdentifierDecl	digest [ 16 ]		1400768	0					
ANR	1400777	IdentifierDeclType	unsigned char [ 16 ]		1400768	0					
ANR	1400778	Identifier	digest		1400768	1					
ANR	1400779	PrimaryExpression	16		1400768	2					
ANR	1400780	IdentifierDecl	c		1400768	1					
ANR	1400781	IdentifierDeclType	unsigned char		1400768	0					
ANR	1400782	Identifier	c		1400768	1					
ANR	1400783	IdentifierDeclStatement	char * md5str = ZCG ( system_id ) ;	2468:1:75028:75057	1400768	2	True				
ANR	1400784	IdentifierDecl	* md5str = ZCG ( system_id )		1400768	0					
ANR	1400785	IdentifierDeclType	char *		1400768	0					
ANR	1400786	Identifier	md5str		1400768	1					
ANR	1400787	AssignmentExpression	* md5str = ZCG ( system_id )		1400768	2		=			
ANR	1400788	Identifier	md5str		1400768	0					
ANR	1400789	CallExpression	ZCG ( system_id )		1400768	1					
ANR	1400790	Callee	ZCG		1400768	0					
ANR	1400791	Identifier	ZCG		1400768	0					
ANR	1400792	ArgumentList	system_id		1400768	1					
ANR	1400793	Argument	system_id		1400768	0					
ANR	1400794	Identifier	system_id		1400768	0					
ANR	1400795	IdentifierDeclStatement	int i ;	2469:1:75060:75065	1400768	3	True				
ANR	1400796	IdentifierDecl	i		1400768	0					
ANR	1400797	IdentifierDeclType	int		1400768	0					
ANR	1400798	Identifier	i		1400768	1					
ANR	1400799	ExpressionStatement	PHP_MD5Init ( & context )	2471:1:75069:75090	1400768	4	True				
ANR	1400800	CallExpression	PHP_MD5Init ( & context )		1400768	0					
ANR	1400801	Callee	PHP_MD5Init		1400768	0					
ANR	1400802	Identifier	PHP_MD5Init		1400768	0					
ANR	1400803	ArgumentList	& context		1400768	1					
ANR	1400804	Argument	& context		1400768	0					
ANR	1400805	UnaryOperationExpression	& context		1400768	0					
ANR	1400806	UnaryOperator	&		1400768	0					
ANR	1400807	Identifier	context		1400768	1					
ANR	1400808	ExpressionStatement	"PHP_MD5Update ( & context , PHP_VERSION , sizeof ( PHP_VERSION ) - 1 )"	2472:1:75093:75152	1400768	5	True				
ANR	1400809	CallExpression	"PHP_MD5Update ( & context , PHP_VERSION , sizeof ( PHP_VERSION ) - 1 )"		1400768	0					
ANR	1400810	Callee	PHP_MD5Update		1400768	0					
ANR	1400811	Identifier	PHP_MD5Update		1400768	0					
ANR	1400812	ArgumentList	& context		1400768	1					
ANR	1400813	Argument	& context		1400768	0					
ANR	1400814	UnaryOperationExpression	& context		1400768	0					
ANR	1400815	UnaryOperator	&		1400768	0					
ANR	1400816	Identifier	context		1400768	1					
ANR	1400817	Argument	PHP_VERSION		1400768	1					
ANR	1400818	Identifier	PHP_VERSION		1400768	0					
ANR	1400819	Argument	sizeof ( PHP_VERSION ) - 1		1400768	2					
ANR	1400820	AdditiveExpression	sizeof ( PHP_VERSION ) - 1		1400768	0		-			
ANR	1400821	SizeofExpression	sizeof ( PHP_VERSION )		1400768	0					
ANR	1400822	Sizeof	sizeof		1400768	0					
ANR	1400823	SizeofOperand	PHP_VERSION		1400768	1					
ANR	1400824	PrimaryExpression	1		1400768	1					
ANR	1400825	ExpressionStatement	"PHP_MD5Update ( & context , ZEND_EXTENSION_BUILD_ID , sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1 )"	2473:1:75155:75238	1400768	6	True				
ANR	1400826	CallExpression	"PHP_MD5Update ( & context , ZEND_EXTENSION_BUILD_ID , sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1 )"		1400768	0					
ANR	1400827	Callee	PHP_MD5Update		1400768	0					
ANR	1400828	Identifier	PHP_MD5Update		1400768	0					
ANR	1400829	ArgumentList	& context		1400768	1					
ANR	1400830	Argument	& context		1400768	0					
ANR	1400831	UnaryOperationExpression	& context		1400768	0					
ANR	1400832	UnaryOperator	&		1400768	0					
ANR	1400833	Identifier	context		1400768	1					
ANR	1400834	Argument	ZEND_EXTENSION_BUILD_ID		1400768	1					
ANR	1400835	Identifier	ZEND_EXTENSION_BUILD_ID		1400768	0					
ANR	1400836	Argument	sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1		1400768	2					
ANR	1400837	AdditiveExpression	sizeof ( ZEND_EXTENSION_BUILD_ID ) - 1		1400768	0		-			
ANR	1400838	SizeofExpression	sizeof ( ZEND_EXTENSION_BUILD_ID )		1400768	0					
ANR	1400839	Sizeof	sizeof		1400768	0					
ANR	1400840	SizeofOperand	ZEND_EXTENSION_BUILD_ID		1400768	1					
ANR	1400841	PrimaryExpression	1		1400768	1					
ANR	1400842	ExpressionStatement	"PHP_MD5Update ( & context , ZEND_BIN_ID , sizeof ( ZEND_BIN_ID ) - 1 )"	2474:1:75241:75300	1400768	7	True				
ANR	1400843	CallExpression	"PHP_MD5Update ( & context , ZEND_BIN_ID , sizeof ( ZEND_BIN_ID ) - 1 )"		1400768	0					
ANR	1400844	Callee	PHP_MD5Update		1400768	0					
ANR	1400845	Identifier	PHP_MD5Update		1400768	0					
ANR	1400846	ArgumentList	& context		1400768	1					
ANR	1400847	Argument	& context		1400768	0					
ANR	1400848	UnaryOperationExpression	& context		1400768	0					
ANR	1400849	UnaryOperator	&		1400768	0					
ANR	1400850	Identifier	context		1400768	1					
ANR	1400851	Argument	ZEND_BIN_ID		1400768	1					
ANR	1400852	Identifier	ZEND_BIN_ID		1400768	0					
ANR	1400853	Argument	sizeof ( ZEND_BIN_ID ) - 1		1400768	2					
ANR	1400854	AdditiveExpression	sizeof ( ZEND_BIN_ID ) - 1		1400768	0		-			
ANR	1400855	SizeofExpression	sizeof ( ZEND_BIN_ID )		1400768	0					
ANR	1400856	Sizeof	sizeof		1400768	0					
ANR	1400857	SizeofOperand	ZEND_BIN_ID		1400768	1					
ANR	1400858	PrimaryExpression	1		1400768	1					
ANR	1400859	IfStatement	"if ( strstr ( PHP_VERSION , ""-dev"" ) != 0 )"		1400768	8					
ANR	1400860	Condition	"strstr ( PHP_VERSION , ""-dev"" ) != 0"	2475:5:75307:75338	1400768	0	True				
ANR	1400861	EqualityExpression	"strstr ( PHP_VERSION , ""-dev"" ) != 0"		1400768	0		!=			
ANR	1400862	CallExpression	"strstr ( PHP_VERSION , ""-dev"" )"		1400768	0					
ANR	1400863	Callee	strstr		1400768	0					
ANR	1400864	Identifier	strstr		1400768	0					
ANR	1400865	ArgumentList	PHP_VERSION		1400768	1					
ANR	1400866	Argument	PHP_VERSION		1400768	0					
ANR	1400867	Identifier	PHP_VERSION		1400768	0					
ANR	1400868	Argument	"""-dev"""		1400768	1					
ANR	1400869	PrimaryExpression	"""-dev"""		1400768	0					
ANR	1400870	PrimaryExpression	0		1400768	1					
ANR	1400871	CompoundStatement		11:39:367:367	1400768	1					
ANR	1400872	ExpressionStatement	"PHP_MD5Update ( & context , __DATE__ , sizeof ( __DATE__ ) - 1 )"	2477:2:75409:75462	1400768	0	True				
ANR	1400873	CallExpression	"PHP_MD5Update ( & context , __DATE__ , sizeof ( __DATE__ ) - 1 )"		1400768	0					
ANR	1400874	Callee	PHP_MD5Update		1400768	0					
ANR	1400875	Identifier	PHP_MD5Update		1400768	0					
ANR	1400876	ArgumentList	& context		1400768	1					
ANR	1400877	Argument	& context		1400768	0					
ANR	1400878	UnaryOperationExpression	& context		1400768	0					
ANR	1400879	UnaryOperator	&		1400768	0					
ANR	1400880	Identifier	context		1400768	1					
ANR	1400881	Argument	__DATE__		1400768	1					
ANR	1400882	Identifier	__DATE__		1400768	0					
ANR	1400883	Argument	sizeof ( __DATE__ ) - 1		1400768	2					
ANR	1400884	AdditiveExpression	sizeof ( __DATE__ ) - 1		1400768	0		-			
ANR	1400885	SizeofExpression	sizeof ( __DATE__ )		1400768	0					
ANR	1400886	Sizeof	sizeof		1400768	0					
ANR	1400887	SizeofOperand	__DATE__		1400768	1					
ANR	1400888	PrimaryExpression	1		1400768	1					
ANR	1400889	ExpressionStatement	"PHP_MD5Update ( & context , __TIME__ , sizeof ( __TIME__ ) - 1 )"	2478:2:75466:75519	1400768	1	True				
ANR	1400890	CallExpression	"PHP_MD5Update ( & context , __TIME__ , sizeof ( __TIME__ ) - 1 )"		1400768	0					
ANR	1400891	Callee	PHP_MD5Update		1400768	0					
ANR	1400892	Identifier	PHP_MD5Update		1400768	0					
ANR	1400893	ArgumentList	& context		1400768	1					
ANR	1400894	Argument	& context		1400768	0					
ANR	1400895	UnaryOperationExpression	& context		1400768	0					
ANR	1400896	UnaryOperator	&		1400768	0					
ANR	1400897	Identifier	context		1400768	1					
ANR	1400898	Argument	__TIME__		1400768	1					
ANR	1400899	Identifier	__TIME__		1400768	0					
ANR	1400900	Argument	sizeof ( __TIME__ ) - 1		1400768	2					
ANR	1400901	AdditiveExpression	sizeof ( __TIME__ ) - 1		1400768	0		-			
ANR	1400902	SizeofExpression	sizeof ( __TIME__ )		1400768	0					
ANR	1400903	Sizeof	sizeof		1400768	0					
ANR	1400904	SizeofOperand	__TIME__		1400768	1					
ANR	1400905	PrimaryExpression	1		1400768	1					
ANR	1400906	ExpressionStatement	"PHP_MD5Final ( digest , & context )"	2480:1:75525:75555	1400768	9	True				
ANR	1400907	CallExpression	"PHP_MD5Final ( digest , & context )"		1400768	0					
ANR	1400908	Callee	PHP_MD5Final		1400768	0					
ANR	1400909	Identifier	PHP_MD5Final		1400768	0					
ANR	1400910	ArgumentList	digest		1400768	1					
ANR	1400911	Argument	digest		1400768	0					
ANR	1400912	Identifier	digest		1400768	0					
ANR	1400913	Argument	& context		1400768	1					
ANR	1400914	UnaryOperationExpression	& context		1400768	0					
ANR	1400915	UnaryOperator	&		1400768	0					
ANR	1400916	Identifier	context		1400768	1					
ANR	1400917	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		1400768	10					
ANR	1400918	ForInit	i = 0 ;	2481:6:75563:75568	1400768	0	True				
ANR	1400919	AssignmentExpression	i = 0		1400768	0		=			
ANR	1400920	Identifier	i		1400768	0					
ANR	1400921	PrimaryExpression	0		1400768	1					
ANR	1400922	Condition	i < 16	2481:13:75570:75575	1400768	1	True				
ANR	1400923	RelationalExpression	i < 16		1400768	0		<			
ANR	1400924	Identifier	i		1400768	0					
ANR	1400925	PrimaryExpression	16		1400768	1					
ANR	1400926	PostIncDecOperationExpression	i ++	2481:21:75578:75580	1400768	2	True				
ANR	1400927	Identifier	i		1400768	0					
ANR	1400928	IncDec	++		1400768	1					
ANR	1400929	CompoundStatement		17:26:609:609	1400768	3					
ANR	1400930	ExpressionStatement	c = digest [ i ] >> 4	2482:2:75587:75605	1400768	0	True				
ANR	1400931	AssignmentExpression	c = digest [ i ] >> 4		1400768	0		=			
ANR	1400932	Identifier	c		1400768	0					
ANR	1400933	ShiftExpression	digest [ i ] >> 4		1400768	1		>>			
ANR	1400934	ArrayIndexing	digest [ i ]		1400768	0					
ANR	1400935	Identifier	digest		1400768	0					
ANR	1400936	Identifier	i		1400768	1					
ANR	1400937	PrimaryExpression	4		1400768	1					
ANR	1400938	ExpressionStatement	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'	2483:2:75609:75646	1400768	1	True				
ANR	1400939	AssignmentExpression	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'		1400768	0		=			
ANR	1400940	Identifier	c		1400768	0					
ANR	1400941	ConditionalExpression	( c <= 9 ) ? c + '0' : c - 10 + 'a'		1400768	1					
ANR	1400942	Condition	c <= 9		1400768	0					
ANR	1400943	RelationalExpression	c <= 9		1400768	0		<=			
ANR	1400944	Identifier	c		1400768	0					
ANR	1400945	PrimaryExpression	9		1400768	1					
ANR	1400946	AdditiveExpression	c + '0'		1400768	1		+			
ANR	1400947	Identifier	c		1400768	0					
ANR	1400948	PrimaryExpression	'0'		1400768	1					
ANR	1400949	AdditiveExpression	c - 10 + 'a'		1400768	2		-			
ANR	1400950	Identifier	c		1400768	0					
ANR	1400951	AdditiveExpression	10 + 'a'		1400768	1		+			
ANR	1400952	PrimaryExpression	10		1400768	0					
ANR	1400953	PrimaryExpression	'a'		1400768	1					
ANR	1400954	ExpressionStatement	md5str [ i * 2 ] = c	2484:2:75650:75667	1400768	2	True				
ANR	1400955	AssignmentExpression	md5str [ i * 2 ] = c		1400768	0		=			
ANR	1400956	ArrayIndexing	md5str [ i * 2 ]		1400768	0					
ANR	1400957	Identifier	md5str		1400768	0					
ANR	1400958	MultiplicativeExpression	i * 2		1400768	1		*			
ANR	1400959	Identifier	i		1400768	0					
ANR	1400960	PrimaryExpression	2		1400768	1					
ANR	1400961	Identifier	c		1400768	1					
ANR	1400962	ExpressionStatement	c = digest [ i ] & 0x0f	2485:2:75671:75692	1400768	3	True				
ANR	1400963	AssignmentExpression	c = digest [ i ] & 0x0f		1400768	0		=			
ANR	1400964	Identifier	c		1400768	0					
ANR	1400965	BitAndExpression	digest [ i ] & 0x0f		1400768	1		&			
ANR	1400966	ArrayIndexing	digest [ i ]		1400768	0					
ANR	1400967	Identifier	digest		1400768	0					
ANR	1400968	Identifier	i		1400768	1					
ANR	1400969	PrimaryExpression	0x0f		1400768	1					
ANR	1400970	ExpressionStatement	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'	2486:2:75696:75733	1400768	4	True				
ANR	1400971	AssignmentExpression	c = ( c <= 9 ) ? c + '0' : c - 10 + 'a'		1400768	0		=			
ANR	1400972	Identifier	c		1400768	0					
ANR	1400973	ConditionalExpression	( c <= 9 ) ? c + '0' : c - 10 + 'a'		1400768	1					
ANR	1400974	Condition	c <= 9		1400768	0					
ANR	1400975	RelationalExpression	c <= 9		1400768	0		<=			
ANR	1400976	Identifier	c		1400768	0					
ANR	1400977	PrimaryExpression	9		1400768	1					
ANR	1400978	AdditiveExpression	c + '0'		1400768	1		+			
ANR	1400979	Identifier	c		1400768	0					
ANR	1400980	PrimaryExpression	'0'		1400768	1					
ANR	1400981	AdditiveExpression	c - 10 + 'a'		1400768	2		-			
ANR	1400982	Identifier	c		1400768	0					
ANR	1400983	AdditiveExpression	10 + 'a'		1400768	1		+			
ANR	1400984	PrimaryExpression	10		1400768	0					
ANR	1400985	PrimaryExpression	'a'		1400768	1					
ANR	1400986	ExpressionStatement	md5str [ ( i * 2 ) + 1 ] = c	2487:2:75737:75760	1400768	5	True				
ANR	1400987	AssignmentExpression	md5str [ ( i * 2 ) + 1 ] = c		1400768	0		=			
ANR	1400988	ArrayIndexing	md5str [ ( i * 2 ) + 1 ]		1400768	0					
ANR	1400989	Identifier	md5str		1400768	0					
ANR	1400990	AdditiveExpression	( i * 2 ) + 1		1400768	1		+			
ANR	1400991	MultiplicativeExpression	i * 2		1400768	0		*			
ANR	1400992	Identifier	i		1400768	0					
ANR	1400993	PrimaryExpression	2		1400768	1					
ANR	1400994	PrimaryExpression	1		1400768	1					
ANR	1400995	Identifier	c		1400768	1					
ANR	1400996	ReturnType	static void		1400768	1					
ANR	1400997	Identifier	accel_gen_system_id		1400768	2					
ANR	1400998	ParameterList			1400768	3					
ANR	1400999	CFGEntryNode	ENTRY		1400768		True				
ANR	1401000	CFGExitNode	EXIT		1400768		True				
ANR	1401001	Symbol	c		1400768						
ANR	1401002	Symbol	PHP_VERSION		1400768						
ANR	1401003	Symbol	ZEND_BIN_ID		1400768						
ANR	1401004	Symbol	system_id		1400768						
ANR	1401005	Symbol	md5str		1400768						
ANR	1401006	Symbol	i		1400768						
ANR	1401007	Symbol	__DATE__		1400768						
ANR	1401008	Symbol	* digest		1400768						
ANR	1401009	Symbol	& context		1400768						
ANR	1401010	Symbol	__TIME__		1400768						
ANR	1401011	Symbol	* i		1400768						
ANR	1401012	Symbol	strstr		1400768						
ANR	1401013	Symbol	context		1400768						
ANR	1401014	Symbol	digest		1400768						
ANR	1401015	Symbol	ZEND_EXTENSION_BUILD_ID		1400768						
ANR	1401016	Symbol	* md5str		1400768						
ANR	1401017	Symbol	ZCG		1400768						
ANR	1401018	Function	accel_remap_huge_pages	2505:0:76058:77594							
ANR	1401019	FunctionDef	"accel_remap_huge_pages (void * start , size_t size , const char * name , size_t offset)"		1401018	0					
ANR	1401020	CompoundStatement		2506:0:76151:77594	1401018	0					
ANR	1401021	IdentifierDeclStatement	void * ret = MAP_FAILED ;	2507:1:76154:76176	1401018	0	True				
ANR	1401022	IdentifierDecl	* ret = MAP_FAILED		1401018	0					
ANR	1401023	IdentifierDeclType	void *		1401018	0					
ANR	1401024	Identifier	ret		1401018	1					
ANR	1401025	AssignmentExpression	* ret = MAP_FAILED		1401018	2		=			
ANR	1401026	Identifier	MAP_FAILED		1401018	0					
ANR	1401027	Identifier	MAP_FAILED		1401018	1					
ANR	1401028	IdentifierDeclStatement	void * mem ;	2508:1:76179:76188	1401018	1	True				
ANR	1401029	IdentifierDecl	* mem		1401018	0					
ANR	1401030	IdentifierDeclType	void *		1401018	0					
ANR	1401031	Identifier	mem		1401018	1					
ANR	1401032	ExpressionStatement	"mem = mmap ( NULL , size , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"	2510:1:76192:76280	1401018	2	True				
ANR	1401033	AssignmentExpression	"mem = mmap ( NULL , size , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"		1401018	0		=			
ANR	1401034	Identifier	mem		1401018	0					
ANR	1401035	CallExpression	"mmap ( NULL , size , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"		1401018	1					
ANR	1401036	Callee	mmap		1401018	0					
ANR	1401037	Identifier	mmap		1401018	0					
ANR	1401038	ArgumentList	NULL		1401018	1					
ANR	1401039	Argument	NULL		1401018	0					
ANR	1401040	Identifier	NULL		1401018	0					
ANR	1401041	Argument	size		1401018	1					
ANR	1401042	Identifier	size		1401018	0					
ANR	1401043	Argument	PROT_READ | PROT_WRITE		1401018	2					
ANR	1401044	InclusiveOrExpression	PROT_READ | PROT_WRITE		1401018	0		|			
ANR	1401045	Identifier	PROT_READ		1401018	0					
ANR	1401046	Identifier	PROT_WRITE		1401018	1					
ANR	1401047	Argument	MAP_PRIVATE | MAP_ANONYMOUS		1401018	3					
ANR	1401048	InclusiveOrExpression	MAP_PRIVATE | MAP_ANONYMOUS		1401018	0		|			
ANR	1401049	Identifier	MAP_PRIVATE		1401018	0					
ANR	1401050	Identifier	MAP_ANONYMOUS		1401018	1					
ANR	1401051	Argument	- 1		1401018	4					
ANR	1401052	UnaryOperationExpression	- 1		1401018	0					
ANR	1401053	UnaryOperator	-		1401018	0					
ANR	1401054	PrimaryExpression	1		1401018	1					
ANR	1401055	Argument	0		1401018	5					
ANR	1401056	PrimaryExpression	0		1401018	0					
ANR	1401057	IfStatement	if ( mem == MAP_FAILED )		1401018	3					
ANR	1401058	Condition	mem == MAP_FAILED	2514:5:76287:76303	1401018	0	True				
ANR	1401059	EqualityExpression	mem == MAP_FAILED		1401018	0		==			
ANR	1401060	Identifier	mem		1401018	0					
ANR	1401061	Identifier	MAP_FAILED		1401018	1					
ANR	1401062	CompoundStatement		9:24:154:154	1401018	1					
ANR	1401063	Statement	zend_error	2515:2:76310:76319	1401018	0	True				
ANR	1401064	Statement	(	2515:12:76320:76320	1401018	1	True				
ANR	1401065	Statement	E_WARNING	2515:13:76321:76329	1401018	2	True				
ANR	1401066	Statement	","	2515:22:76330:76330	1401018	3	True				
ANR	1401067	Statement	ACCELERATOR_PRODUCT_NAME	2516:3:76335:76358	1401018	4	True				
ANR	1401068	Statement	""" huge_code_pages: mmap failed: %s (%d)"""	2516:28:76360:76399	1401018	5	True				
ANR	1401069	Statement	","	2516:68:76400:76400	1401018	6	True				
ANR	1401070	Statement	strerror	2517:3:76405:76412	1401018	7	True				
ANR	1401071	Statement	(	2517:11:76413:76413	1401018	8	True				
ANR	1401072	Statement	errno	2517:12:76414:76418	1401018	9	True				
ANR	1401073	Statement	)	2517:17:76419:76419	1401018	10	True				
ANR	1401074	Statement	","	2517:18:76420:76420	1401018	11	True				
ANR	1401075	Statement	errno	2517:20:76422:76426	1401018	12	True				
ANR	1401076	Statement	)	2517:25:76427:76427	1401018	13	True				
ANR	1401077	ExpressionStatement		2517:26:76428:76428	1401018	14	True				
ANR	1401078	ReturnStatement	return - 1 ;	2518:2:76432:76441	1401018	15	True				
ANR	1401079	UnaryOperationExpression	- 1		1401018	0					
ANR	1401080	UnaryOperator	-		1401018	0					
ANR	1401081	PrimaryExpression	1		1401018	1					
ANR	1401082	ExpressionStatement	"memcpy ( mem , start , size )"	2520:1:76447:76471	1401018	4	True				
ANR	1401083	CallExpression	"memcpy ( mem , start , size )"		1401018	0					
ANR	1401084	Callee	memcpy		1401018	0					
ANR	1401085	Identifier	memcpy		1401018	0					
ANR	1401086	ArgumentList	mem		1401018	1					
ANR	1401087	Argument	mem		1401018	0					
ANR	1401088	Identifier	mem		1401018	0					
ANR	1401089	Argument	start		1401018	1					
ANR	1401090	Identifier	start		1401018	0					
ANR	1401091	Argument	size		1401018	2					
ANR	1401092	Identifier	size		1401018	0					
ANR	1401093	IdentifierDeclStatement	"ifdef MAP_HUGETLB ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB , - 1 , 0 ) ;"	2522:3:76477:76623	1401018	5	True				
ANR	1401094	IdentifierDecl	"ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB , - 1 , 0 )"		1401018	0					
ANR	1401095	IdentifierDeclType	ifdef MAP_HUGETLB		1401018	0					
ANR	1401096	Identifier	ret		1401018	1					
ANR	1401097	AssignmentExpression	"ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB , - 1 , 0 )"		1401018	2		=			
ANR	1401098	Identifier	ret		1401018	0					
ANR	1401099	CallExpression	"mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB , - 1 , 0 )"		1401018	1					
ANR	1401100	Callee	mmap		1401018	0					
ANR	1401101	Identifier	mmap		1401018	0					
ANR	1401102	ArgumentList	start		1401018	1					
ANR	1401103	Argument	start		1401018	0					
ANR	1401104	Identifier	start		1401018	0					
ANR	1401105	Argument	size		1401018	1					
ANR	1401106	Identifier	size		1401018	0					
ANR	1401107	Argument	PROT_READ | PROT_WRITE | PROT_EXEC		1401018	2					
ANR	1401108	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		1401018	0		|			
ANR	1401109	Identifier	PROT_READ		1401018	0					
ANR	1401110	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		1401018	1		|			
ANR	1401111	Identifier	PROT_WRITE		1401018	0					
ANR	1401112	Identifier	PROT_EXEC		1401018	1					
ANR	1401113	Argument	MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB		1401018	3					
ANR	1401114	InclusiveOrExpression	MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB		1401018	0		|			
ANR	1401115	Identifier	MAP_PRIVATE		1401018	0					
ANR	1401116	InclusiveOrExpression	MAP_ANONYMOUS | MAP_FIXED | MAP_HUGETLB		1401018	1		|			
ANR	1401117	Identifier	MAP_ANONYMOUS		1401018	0					
ANR	1401118	InclusiveOrExpression	MAP_FIXED | MAP_HUGETLB		1401018	1		|			
ANR	1401119	Identifier	MAP_FIXED		1401018	0					
ANR	1401120	Identifier	MAP_HUGETLB		1401018	1					
ANR	1401121	Argument	- 1		1401018	4					
ANR	1401122	UnaryOperationExpression	- 1		1401018	0					
ANR	1401123	UnaryOperator	-		1401018	0					
ANR	1401124	PrimaryExpression	1		1401018	1					
ANR	1401125	Argument	0		1401018	5					
ANR	1401126	PrimaryExpression	0		1401018	0					
ANR	1401127	Statement	endif	2527:3:76628:76632	1401018	6	True				
ANR	1401128	IfStatement	if ( ret == MAP_FAILED )		1401018	7					
ANR	1401129	Condition	ret == MAP_FAILED	2528:5:76639:76655	1401018	0	True				
ANR	1401130	EqualityExpression	ret == MAP_FAILED		1401018	0		==			
ANR	1401131	Identifier	ret		1401018	0					
ANR	1401132	Identifier	MAP_FAILED		1401018	1					
ANR	1401133	CompoundStatement		23:24:506:506	1401018	1					
ANR	1401134	ExpressionStatement	"ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED , - 1 , 0 )"	2529:2:76662:76778	1401018	0	True				
ANR	1401135	AssignmentExpression	"ret = mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED , - 1 , 0 )"		1401018	0		=			
ANR	1401136	Identifier	ret		1401018	0					
ANR	1401137	CallExpression	"mmap ( start , size , PROT_READ | PROT_WRITE | PROT_EXEC , MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED , - 1 , 0 )"		1401018	1					
ANR	1401138	Callee	mmap		1401018	0					
ANR	1401139	Identifier	mmap		1401018	0					
ANR	1401140	ArgumentList	start		1401018	1					
ANR	1401141	Argument	start		1401018	0					
ANR	1401142	Identifier	start		1401018	0					
ANR	1401143	Argument	size		1401018	1					
ANR	1401144	Identifier	size		1401018	0					
ANR	1401145	Argument	PROT_READ | PROT_WRITE | PROT_EXEC		1401018	2					
ANR	1401146	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		1401018	0		|			
ANR	1401147	Identifier	PROT_READ		1401018	0					
ANR	1401148	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		1401018	1		|			
ANR	1401149	Identifier	PROT_WRITE		1401018	0					
ANR	1401150	Identifier	PROT_EXEC		1401018	1					
ANR	1401151	Argument	MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED		1401018	3					
ANR	1401152	InclusiveOrExpression	MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED		1401018	0		|			
ANR	1401153	Identifier	MAP_PRIVATE		1401018	0					
ANR	1401154	InclusiveOrExpression	MAP_ANONYMOUS | MAP_FIXED		1401018	1		|			
ANR	1401155	Identifier	MAP_ANONYMOUS		1401018	0					
ANR	1401156	Identifier	MAP_FIXED		1401018	1					
ANR	1401157	Argument	- 1		1401018	4					
ANR	1401158	UnaryOperationExpression	- 1		1401018	0					
ANR	1401159	UnaryOperator	-		1401018	0					
ANR	1401160	PrimaryExpression	1		1401018	1					
ANR	1401161	Argument	0		1401018	5					
ANR	1401162	PrimaryExpression	0		1401018	0					
ANR	1401163	ExpressionStatement	ZEND_ASSERT ( ret != MAP_FAILED )	2534:2:76816:76846	1401018	1	True				
ANR	1401164	CallExpression	ZEND_ASSERT ( ret != MAP_FAILED )		1401018	0					
ANR	1401165	Callee	ZEND_ASSERT		1401018	0					
ANR	1401166	Identifier	ZEND_ASSERT		1401018	0					
ANR	1401167	ArgumentList	ret != MAP_FAILED		1401018	1					
ANR	1401168	Argument	ret != MAP_FAILED		1401018	0					
ANR	1401169	EqualityExpression	ret != MAP_FAILED		1401018	0		!=			
ANR	1401170	Identifier	ret		1401018	0					
ANR	1401171	Identifier	MAP_FAILED		1401018	1					
ANR	1401172	Statement	ifdef	2535:3:76851:76855	1401018	2	True				
ANR	1401173	Statement	MADV_HUGEPAGE	2535:9:76857:76869	1401018	3	True				
ANR	1401174	IfStatement	"if ( - 1 == madvise ( start , size , MADV_HUGEPAGE ) )"		1401018	4					
ANR	1401175	Condition	"- 1 == madvise ( start , size , MADV_HUGEPAGE )"	2536:6:76877:76917	1401018	0	True				
ANR	1401176	EqualityExpression	"- 1 == madvise ( start , size , MADV_HUGEPAGE )"		1401018	0		==			
ANR	1401177	UnaryOperationExpression	- 1		1401018	0					
ANR	1401178	UnaryOperator	-		1401018	0					
ANR	1401179	PrimaryExpression	1		1401018	1					
ANR	1401180	CallExpression	"madvise ( start , size , MADV_HUGEPAGE )"		1401018	1					
ANR	1401181	Callee	madvise		1401018	0					
ANR	1401182	Identifier	madvise		1401018	0					
ANR	1401183	ArgumentList	start		1401018	1					
ANR	1401184	Argument	start		1401018	0					
ANR	1401185	Identifier	start		1401018	0					
ANR	1401186	Argument	size		1401018	1					
ANR	1401187	Identifier	size		1401018	0					
ANR	1401188	Argument	MADV_HUGEPAGE		1401018	2					
ANR	1401189	Identifier	MADV_HUGEPAGE		1401018	0					
ANR	1401190	CompoundStatement		31:49:768:768	1401018	1					
ANR	1401191	ExpressionStatement	"memcpy ( start , mem , size )"	2537:3:76925:76949	1401018	0	True				
ANR	1401192	CallExpression	"memcpy ( start , mem , size )"		1401018	0					
ANR	1401193	Callee	memcpy		1401018	0					
ANR	1401194	Identifier	memcpy		1401018	0					
ANR	1401195	ArgumentList	start		1401018	1					
ANR	1401196	Argument	start		1401018	0					
ANR	1401197	Identifier	start		1401018	0					
ANR	1401198	Argument	mem		1401018	1					
ANR	1401199	Identifier	mem		1401018	0					
ANR	1401200	Argument	size		1401018	2					
ANR	1401201	Identifier	size		1401018	0					
ANR	1401202	ExpressionStatement	"mprotect ( start , size , PROT_READ | PROT_EXEC )"	2538:3:76954:76998	1401018	1	True				
ANR	1401203	CallExpression	"mprotect ( start , size , PROT_READ | PROT_EXEC )"		1401018	0					
ANR	1401204	Callee	mprotect		1401018	0					
ANR	1401205	Identifier	mprotect		1401018	0					
ANR	1401206	ArgumentList	start		1401018	1					
ANR	1401207	Argument	start		1401018	0					
ANR	1401208	Identifier	start		1401018	0					
ANR	1401209	Argument	size		1401018	1					
ANR	1401210	Identifier	size		1401018	0					
ANR	1401211	Argument	PROT_READ | PROT_EXEC		1401018	2					
ANR	1401212	InclusiveOrExpression	PROT_READ | PROT_EXEC		1401018	0		|			
ANR	1401213	Identifier	PROT_READ		1401018	0					
ANR	1401214	Identifier	PROT_EXEC		1401018	1					
ANR	1401215	ExpressionStatement	"munmap ( mem , size )"	2539:3:77003:77020	1401018	2	True				
ANR	1401216	CallExpression	"munmap ( mem , size )"		1401018	0					
ANR	1401217	Callee	munmap		1401018	0					
ANR	1401218	Identifier	munmap		1401018	0					
ANR	1401219	ArgumentList	mem		1401018	1					
ANR	1401220	Argument	mem		1401018	0					
ANR	1401221	Identifier	mem		1401018	0					
ANR	1401222	Argument	size		1401018	1					
ANR	1401223	Identifier	size		1401018	0					
ANR	1401224	Statement	zend_error	2540:3:77025:77034	1401018	3	True				
ANR	1401225	Statement	(	2540:13:77035:77035	1401018	4	True				
ANR	1401226	Statement	E_WARNING	2540:14:77036:77044	1401018	5	True				
ANR	1401227	Statement	","	2540:23:77045:77045	1401018	6	True				
ANR	1401228	Statement	ACCELERATOR_PRODUCT_NAME	2541:4:77051:77074	1401018	7	True				
ANR	1401229	Statement	""" huge_code_pages: madvise(HUGEPAGE) failed: %s (%d)"""	2541:29:77076:77128	1401018	8	True				
ANR	1401230	Statement	","	2541:82:77129:77129	1401018	9	True				
ANR	1401231	Statement	strerror	2542:4:77135:77142	1401018	10	True				
ANR	1401232	Statement	(	2542:12:77143:77143	1401018	11	True				
ANR	1401233	Statement	errno	2542:13:77144:77148	1401018	12	True				
ANR	1401234	Statement	)	2542:18:77149:77149	1401018	13	True				
ANR	1401235	Statement	","	2542:19:77150:77150	1401018	14	True				
ANR	1401236	Statement	errno	2542:21:77152:77156	1401018	15	True				
ANR	1401237	Statement	)	2542:26:77157:77157	1401018	16	True				
ANR	1401238	ExpressionStatement		2542:27:77158:77158	1401018	17	True				
ANR	1401239	ReturnStatement	return - 1 ;	2543:3:77163:77172	1401018	18	True				
ANR	1401240	UnaryOperationExpression	- 1		1401018	0					
ANR	1401241	UnaryOperator	-		1401018	0					
ANR	1401242	PrimaryExpression	1		1401018	1					
ANR	1401243	ElseStatement	else		1401018	0					
ANR	1401244	ExpressionStatement	"memcpy ( start , mem , size )"	2546:2:77188:77212	1401018	0	True				
ANR	1401245	CallExpression	"memcpy ( start , mem , size )"		1401018	0					
ANR	1401246	Callee	memcpy		1401018	0					
ANR	1401247	Identifier	memcpy		1401018	0					
ANR	1401248	ArgumentList	start		1401018	1					
ANR	1401249	Argument	start		1401018	0					
ANR	1401250	Identifier	start		1401018	0					
ANR	1401251	Argument	mem		1401018	1					
ANR	1401252	Identifier	mem		1401018	0					
ANR	1401253	Argument	size		1401018	2					
ANR	1401254	Identifier	size		1401018	0					
ANR	1401255	ExpressionStatement	"mprotect ( start , size , PROT_READ | PROT_EXEC )"	2547:2:77216:77260	1401018	5	True				
ANR	1401256	CallExpression	"mprotect ( start , size , PROT_READ | PROT_EXEC )"		1401018	0					
ANR	1401257	Callee	mprotect		1401018	0					
ANR	1401258	Identifier	mprotect		1401018	0					
ANR	1401259	ArgumentList	start		1401018	1					
ANR	1401260	Argument	start		1401018	0					
ANR	1401261	Identifier	start		1401018	0					
ANR	1401262	Argument	size		1401018	1					
ANR	1401263	Identifier	size		1401018	0					
ANR	1401264	Argument	PROT_READ | PROT_EXEC		1401018	2					
ANR	1401265	InclusiveOrExpression	PROT_READ | PROT_EXEC		1401018	0		|			
ANR	1401266	Identifier	PROT_READ		1401018	0					
ANR	1401267	Identifier	PROT_EXEC		1401018	1					
ANR	1401268	ExpressionStatement	"munmap ( mem , size )"	2548:2:77264:77281	1401018	6	True				
ANR	1401269	CallExpression	"munmap ( mem , size )"		1401018	0					
ANR	1401270	Callee	munmap		1401018	0					
ANR	1401271	Identifier	munmap		1401018	0					
ANR	1401272	ArgumentList	mem		1401018	1					
ANR	1401273	Argument	mem		1401018	0					
ANR	1401274	Identifier	mem		1401018	0					
ANR	1401275	Argument	size		1401018	1					
ANR	1401276	Identifier	size		1401018	0					
ANR	1401277	Statement	zend_error	2549:2:77285:77294	1401018	7	True				
ANR	1401278	Statement	(	2549:12:77295:77295	1401018	8	True				
ANR	1401279	Statement	E_WARNING	2549:13:77296:77304	1401018	9	True				
ANR	1401280	Statement	","	2549:22:77305:77305	1401018	10	True				
ANR	1401281	Statement	ACCELERATOR_PRODUCT_NAME	2550:3:77310:77333	1401018	11	True				
ANR	1401282	Statement	""" huge_code_pages: mmap(HUGETLB) failed: %s (%d)"""	2550:28:77335:77383	1401018	12	True				
ANR	1401283	Statement	","	2550:77:77384:77384	1401018	13	True				
ANR	1401284	Statement	strerror	2551:3:77389:77396	1401018	14	True				
ANR	1401285	Statement	(	2551:11:77397:77397	1401018	15	True				
ANR	1401286	Statement	errno	2551:12:77398:77402	1401018	16	True				
ANR	1401287	Statement	)	2551:17:77403:77403	1401018	17	True				
ANR	1401288	Statement	","	2551:18:77404:77404	1401018	18	True				
ANR	1401289	Statement	errno	2551:20:77406:77410	1401018	19	True				
ANR	1401290	Statement	)	2551:25:77411:77411	1401018	20	True				
ANR	1401291	ExpressionStatement		2551:26:77412:77412	1401018	21	True				
ANR	1401292	ReturnStatement	return - 1 ;	2552:2:77416:77425	1401018	22	True				
ANR	1401293	UnaryOperationExpression	- 1		1401018	0					
ANR	1401294	UnaryOperator	-		1401018	0					
ANR	1401295	PrimaryExpression	1		1401018	1					
ANR	1401296	Statement	endif	2553:3:77430:77434	1401018	23	True				
ANR	1401297	IfStatement	if ( ret == start )		1401018	8					
ANR	1401298	Condition	ret == start	2556:5:77445:77456	1401018	0	True				
ANR	1401299	EqualityExpression	ret == start		1401018	0		==			
ANR	1401300	Identifier	ret		1401018	0					
ANR	1401301	Identifier	start		1401018	1					
ANR	1401302	CompoundStatement		51:19:1307:1307	1401018	1					
ANR	1401303	ExpressionStatement	"memcpy ( start , mem , size )"	2557:2:77463:77487	1401018	0	True				
ANR	1401304	CallExpression	"memcpy ( start , mem , size )"		1401018	0					
ANR	1401305	Callee	memcpy		1401018	0					
ANR	1401306	Identifier	memcpy		1401018	0					
ANR	1401307	ArgumentList	start		1401018	1					
ANR	1401308	Argument	start		1401018	0					
ANR	1401309	Identifier	start		1401018	0					
ANR	1401310	Argument	mem		1401018	1					
ANR	1401311	Identifier	mem		1401018	0					
ANR	1401312	Argument	size		1401018	2					
ANR	1401313	Identifier	size		1401018	0					
ANR	1401314	ExpressionStatement	"mprotect ( start , size , PROT_READ | PROT_EXEC )"	2558:2:77491:77535	1401018	1	True				
ANR	1401315	CallExpression	"mprotect ( start , size , PROT_READ | PROT_EXEC )"		1401018	0					
ANR	1401316	Callee	mprotect		1401018	0					
ANR	1401317	Identifier	mprotect		1401018	0					
ANR	1401318	ArgumentList	start		1401018	1					
ANR	1401319	Argument	start		1401018	0					
ANR	1401320	Identifier	start		1401018	0					
ANR	1401321	Argument	size		1401018	1					
ANR	1401322	Identifier	size		1401018	0					
ANR	1401323	Argument	PROT_READ | PROT_EXEC		1401018	2					
ANR	1401324	InclusiveOrExpression	PROT_READ | PROT_EXEC		1401018	0		|			
ANR	1401325	Identifier	PROT_READ		1401018	0					
ANR	1401326	Identifier	PROT_EXEC		1401018	1					
ANR	1401327	ExpressionStatement	"munmap ( mem , size )"	2560:1:77541:77558	1401018	9	True				
ANR	1401328	CallExpression	"munmap ( mem , size )"		1401018	0					
ANR	1401329	Callee	munmap		1401018	0					
ANR	1401330	Identifier	munmap		1401018	0					
ANR	1401331	ArgumentList	mem		1401018	1					
ANR	1401332	Argument	mem		1401018	0					
ANR	1401333	Identifier	mem		1401018	0					
ANR	1401334	Argument	size		1401018	1					
ANR	1401335	Identifier	size		1401018	0					
ANR	1401336	ReturnStatement	return ( ret == start ) ? 0 : - 1 ;	2562:1:77562:77592	1401018	10	True				
ANR	1401337	ConditionalExpression	( ret == start ) ? 0 : - 1		1401018	0					
ANR	1401338	Condition	ret == start		1401018	0					
ANR	1401339	EqualityExpression	ret == start		1401018	0		==			
ANR	1401340	Identifier	ret		1401018	0					
ANR	1401341	Identifier	start		1401018	1					
ANR	1401342	PrimaryExpression	0		1401018	1					
ANR	1401343	UnaryOperationExpression	- 1		1401018	2					
ANR	1401344	UnaryOperator	-		1401018	0					
ANR	1401345	PrimaryExpression	1		1401018	1					
ANR	1401346	ReturnType	static int		1401018	1					
ANR	1401347	Identifier	accel_remap_huge_pages		1401018	2					
ANR	1401348	ParameterList	"void * start , size_t size , const char * name , size_t offset"		1401018	3					
ANR	1401349	Parameter	void * start	2505:34:76092:76102	1401018	0	True				
ANR	1401350	ParameterType	void *		1401018	0					
ANR	1401351	Identifier	start		1401018	1					
ANR	1401352	Parameter	size_t size	2505:47:76105:76115	1401018	1	True				
ANR	1401353	ParameterType	size_t		1401018	0					
ANR	1401354	Identifier	size		1401018	1					
ANR	1401355	Parameter	const char * name	2505:60:76118:76133	1401018	2	True				
ANR	1401356	ParameterType	const char *		1401018	0					
ANR	1401357	Identifier	name		1401018	1					
ANR	1401358	Parameter	size_t offset	2505:78:76136:76148	1401018	3	True				
ANR	1401359	ParameterType	size_t		1401018	0					
ANR	1401360	Identifier	offset		1401018	1					
ANR	1401361	CFGEntryNode	ENTRY		1401018		True				
ANR	1401362	CFGExitNode	EXIT		1401018		True				
ANR	1401363	Symbol	ret		1401018						
ANR	1401364	Symbol	MAP_ANONYMOUS		1401018						
ANR	1401365	Symbol	NULL		1401018						
ANR	1401366	Symbol	offset		1401018						
ANR	1401367	Symbol	MADV_HUGEPAGE		1401018						
ANR	1401368	Symbol	start		1401018						
ANR	1401369	Symbol	PROT_EXEC		1401018						
ANR	1401370	Symbol	PROT_READ		1401018						
ANR	1401371	Symbol	MAP_HUGETLB		1401018						
ANR	1401372	Symbol	MAP_FAILED		1401018						
ANR	1401373	Symbol	MAP_PRIVATE		1401018						
ANR	1401374	Symbol	madvise		1401018						
ANR	1401375	Symbol	size		1401018						
ANR	1401376	Symbol	mem		1401018						
ANR	1401377	Symbol	PROT_WRITE		1401018						
ANR	1401378	Symbol	name		1401018						
ANR	1401379	Symbol	mmap		1401018						
ANR	1401380	Symbol	MAP_FIXED		1401018						
ANR	1401381	Function	accel_move_code_to_huge_pages	2565:0:77597:78450							
ANR	1401382	FunctionDef	accel_move_code_to_huge_pages ()		1401381	0					
ANR	1401383	CompoundStatement		2566:0:77645:78450	1401381	0					
ANR	1401384	IdentifierDeclStatement	FILE * f ;	2567:1:77648:77655	1401381	0	True				
ANR	1401385	IdentifierDecl	* f		1401381	0					
ANR	1401386	IdentifierDeclType	FILE *		1401381	0					
ANR	1401387	Identifier	f		1401381	1					
ANR	1401388	Statement	long	2568:1:77658:77661	1401381	1	True				
ANR	1401389	IdentifierDeclStatement	unsigned int huge_page_size = 2 * 1024 * 1024 ;	2568:6:77663:77708	1401381	2	True				
ANR	1401390	IdentifierDecl	huge_page_size = 2 * 1024 * 1024		1401381	0					
ANR	1401391	IdentifierDeclType	unsigned int		1401381	0					
ANR	1401392	Identifier	huge_page_size		1401381	1					
ANR	1401393	AssignmentExpression	huge_page_size = 2 * 1024 * 1024		1401381	2		=			
ANR	1401394	Identifier	huge_page_size		1401381	0					
ANR	1401395	MultiplicativeExpression	2 * 1024 * 1024		1401381	1		*			
ANR	1401396	PrimaryExpression	2		1401381	0					
ANR	1401397	MultiplicativeExpression	1024 * 1024		1401381	1		*			
ANR	1401398	PrimaryExpression	1024		1401381	0					
ANR	1401399	PrimaryExpression	1024		1401381	1					
ANR	1401400	ExpressionStatement	"f = fopen ( ""/proc/self/maps"" , ""r"" )"	2570:1:77712:77745	1401381	3	True				
ANR	1401401	AssignmentExpression	"f = fopen ( ""/proc/self/maps"" , ""r"" )"		1401381	0		=			
ANR	1401402	Identifier	f		1401381	0					
ANR	1401403	CallExpression	"fopen ( ""/proc/self/maps"" , ""r"" )"		1401381	1					
ANR	1401404	Callee	fopen		1401381	0					
ANR	1401405	Identifier	fopen		1401381	0					
ANR	1401406	ArgumentList	"""/proc/self/maps"""		1401381	1					
ANR	1401407	Argument	"""/proc/self/maps"""		1401381	0					
ANR	1401408	PrimaryExpression	"""/proc/self/maps"""		1401381	0					
ANR	1401409	Argument	"""r"""		1401381	1					
ANR	1401410	PrimaryExpression	"""r"""		1401381	0					
ANR	1401411	IfStatement	if ( f )		1401381	4					
ANR	1401412	Condition	f	2571:5:77752:77752	1401381	0	True				
ANR	1401413	Identifier	f		1401381	0					
ANR	1401414	CompoundStatement		9:2:203:210	1401381	1					
ANR	1401415	Statement	long	2572:2:77759:77762	1401381	0	True				
ANR	1401416	IdentifierDeclStatement	"unsigned int start , end , offset , inode ;"	2572:7:77764:77803	1401381	1	True				
ANR	1401417	IdentifierDecl	start		1401381	0					
ANR	1401418	IdentifierDeclType	unsigned int		1401381	0					
ANR	1401419	Identifier	start		1401381	1					
ANR	1401420	IdentifierDecl	end		1401381	1					
ANR	1401421	IdentifierDeclType	unsigned int		1401381	0					
ANR	1401422	Identifier	end		1401381	1					
ANR	1401423	IdentifierDecl	offset		1401381	2					
ANR	1401424	IdentifierDeclType	unsigned int		1401381	0					
ANR	1401425	Identifier	offset		1401381	1					
ANR	1401426	IdentifierDecl	inode		1401381	3					
ANR	1401427	IdentifierDeclType	unsigned int		1401381	0					
ANR	1401428	Identifier	inode		1401381	1					
ANR	1401429	IdentifierDeclStatement	"char perm [ 5 ] , dev [ 6 ] , name [ MAXPATHLEN ] ;"	2573:2:77807:77845	1401381	2	True				
ANR	1401430	IdentifierDecl	perm [ 5 ]		1401381	0					
ANR	1401431	IdentifierDeclType	char [ 5 ]		1401381	0					
ANR	1401432	Identifier	perm		1401381	1					
ANR	1401433	PrimaryExpression	5		1401381	2					
ANR	1401434	IdentifierDecl	dev [ 6 ]		1401381	1					
ANR	1401435	IdentifierDeclType	char [ 6 ]		1401381	0					
ANR	1401436	Identifier	dev		1401381	1					
ANR	1401437	PrimaryExpression	6		1401381	2					
ANR	1401438	IdentifierDecl	name [ MAXPATHLEN ]		1401381	2					
ANR	1401439	IdentifierDeclType	char [ MAXPATHLEN ]		1401381	0					
ANR	1401440	Identifier	name		1401381	1					
ANR	1401441	Identifier	MAXPATHLEN		1401381	2					
ANR	1401442	IdentifierDeclStatement	int ret ;	2574:2:77849:77856	1401381	3	True				
ANR	1401443	IdentifierDecl	ret		1401381	0					
ANR	1401444	IdentifierDeclType	int		1401381	0					
ANR	1401445	Identifier	ret		1401381	1					
ANR	1401446	ExpressionStatement	"ret = fscanf ( f , ""%lx-%lx %4s %lx %5s %ld %s\\n"" , & start , & end , perm , & offset , dev , & inode , name )"	2576:2:77861:77956	1401381	4	True				
ANR	1401447	AssignmentExpression	"ret = fscanf ( f , ""%lx-%lx %4s %lx %5s %ld %s\\n"" , & start , & end , perm , & offset , dev , & inode , name )"		1401381	0		=			
ANR	1401448	Identifier	ret		1401381	0					
ANR	1401449	CallExpression	"fscanf ( f , ""%lx-%lx %4s %lx %5s %ld %s\\n"" , & start , & end , perm , & offset , dev , & inode , name )"		1401381	1					
ANR	1401450	Callee	fscanf		1401381	0					
ANR	1401451	Identifier	fscanf		1401381	0					
ANR	1401452	ArgumentList	f		1401381	1					
ANR	1401453	Argument	f		1401381	0					
ANR	1401454	Identifier	f		1401381	0					
ANR	1401455	Argument	"""%lx-%lx %4s %lx %5s %ld %s\\n"""		1401381	1					
ANR	1401456	PrimaryExpression	"""%lx-%lx %4s %lx %5s %ld %s\\n"""		1401381	0					
ANR	1401457	Argument	& start		1401381	2					
ANR	1401458	UnaryOperationExpression	& start		1401381	0					
ANR	1401459	UnaryOperator	&		1401381	0					
ANR	1401460	Identifier	start		1401381	1					
ANR	1401461	Argument	& end		1401381	3					
ANR	1401462	UnaryOperationExpression	& end		1401381	0					
ANR	1401463	UnaryOperator	&		1401381	0					
ANR	1401464	Identifier	end		1401381	1					
ANR	1401465	Argument	perm		1401381	4					
ANR	1401466	Identifier	perm		1401381	0					
ANR	1401467	Argument	& offset		1401381	5					
ANR	1401468	UnaryOperationExpression	& offset		1401381	0					
ANR	1401469	UnaryOperator	&		1401381	0					
ANR	1401470	Identifier	offset		1401381	1					
ANR	1401471	Argument	dev		1401381	6					
ANR	1401472	Identifier	dev		1401381	0					
ANR	1401473	Argument	& inode		1401381	7					
ANR	1401474	UnaryOperationExpression	& inode		1401381	0					
ANR	1401475	UnaryOperator	&		1401381	0					
ANR	1401476	Identifier	inode		1401381	1					
ANR	1401477	Argument	name		1401381	8					
ANR	1401478	Identifier	name		1401381	0					
ANR	1401479	IfStatement	if ( ret == 7 && perm [ 0 ] == 'r' && perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/' )		1401381	5					
ANR	1401480	Condition	ret == 7 && perm [ 0 ] == 'r' && perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/'	2577:6:77964:78043	1401381	0	True				
ANR	1401481	AndExpression	ret == 7 && perm [ 0 ] == 'r' && perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/'		1401381	0		&&			
ANR	1401482	EqualityExpression	ret == 7		1401381	0		==			
ANR	1401483	Identifier	ret		1401381	0					
ANR	1401484	PrimaryExpression	7		1401381	1					
ANR	1401485	AndExpression	perm [ 0 ] == 'r' && perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/'		1401381	1		&&			
ANR	1401486	EqualityExpression	perm [ 0 ] == 'r'		1401381	0		==			
ANR	1401487	ArrayIndexing	perm [ 0 ]		1401381	0					
ANR	1401488	Identifier	perm		1401381	0					
ANR	1401489	PrimaryExpression	0		1401381	1					
ANR	1401490	PrimaryExpression	'r'		1401381	1					
ANR	1401491	AndExpression	perm [ 1 ] == '-' && perm [ 2 ] == 'x' && name [ 0 ] == '/'		1401381	1		&&			
ANR	1401492	EqualityExpression	perm [ 1 ] == '-'		1401381	0		==			
ANR	1401493	ArrayIndexing	perm [ 1 ]		1401381	0					
ANR	1401494	Identifier	perm		1401381	0					
ANR	1401495	PrimaryExpression	1		1401381	1					
ANR	1401496	PrimaryExpression	'-'		1401381	1					
ANR	1401497	AndExpression	perm [ 2 ] == 'x' && name [ 0 ] == '/'		1401381	1		&&			
ANR	1401498	EqualityExpression	perm [ 2 ] == 'x'		1401381	0		==			
ANR	1401499	ArrayIndexing	perm [ 2 ]		1401381	0					
ANR	1401500	Identifier	perm		1401381	0					
ANR	1401501	PrimaryExpression	2		1401381	1					
ANR	1401502	PrimaryExpression	'x'		1401381	1					
ANR	1401503	EqualityExpression	name [ 0 ] == '/'		1401381	1		==			
ANR	1401504	ArrayIndexing	name [ 0 ]		1401381	0					
ANR	1401505	Identifier	name		1401381	0					
ANR	1401506	PrimaryExpression	0		1401381	1					
ANR	1401507	PrimaryExpression	'/'		1401381	1					
ANR	1401508	CompoundStatement		14:8:492:544	1401381	1					
ANR	1401509	Statement	long	2578:3:78051:78054	1401381	0	True				
ANR	1401510	IdentifierDeclStatement	"unsigned int seg_start = ZEND_MM_ALIGNED_SIZE_EX ( start , huge_page_size ) ;"	2578:8:78056:78128	1401381	1	True				
ANR	1401511	IdentifierDecl	"seg_start = ZEND_MM_ALIGNED_SIZE_EX ( start , huge_page_size )"		1401381	0					
ANR	1401512	IdentifierDeclType	unsigned int		1401381	0					
ANR	1401513	Identifier	seg_start		1401381	1					
ANR	1401514	AssignmentExpression	"seg_start = ZEND_MM_ALIGNED_SIZE_EX ( start , huge_page_size )"		1401381	2		=			
ANR	1401515	Identifier	seg_start		1401381	0					
ANR	1401516	CallExpression	"ZEND_MM_ALIGNED_SIZE_EX ( start , huge_page_size )"		1401381	1					
ANR	1401517	Callee	ZEND_MM_ALIGNED_SIZE_EX		1401381	0					
ANR	1401518	Identifier	ZEND_MM_ALIGNED_SIZE_EX		1401381	0					
ANR	1401519	ArgumentList	start		1401381	1					
ANR	1401520	Argument	start		1401381	0					
ANR	1401521	Identifier	start		1401381	0					
ANR	1401522	Argument	huge_page_size		1401381	1					
ANR	1401523	Identifier	huge_page_size		1401381	0					
ANR	1401524	Statement	long	2579:3:78133:78136	1401381	2	True				
ANR	1401525	IdentifierDeclStatement	unsigned int seg_end = ( end & ~ ( huge_page_size - 1L ) ) ;	2579:8:78138:78190	1401381	3	True				
ANR	1401526	IdentifierDecl	seg_end = ( end & ~ ( huge_page_size - 1L ) )		1401381	0					
ANR	1401527	IdentifierDeclType	unsigned int		1401381	0					
ANR	1401528	Identifier	seg_end		1401381	1					
ANR	1401529	AssignmentExpression	seg_end = ( end & ~ ( huge_page_size - 1L ) )		1401381	2		=			
ANR	1401530	Identifier	seg_end		1401381	0					
ANR	1401531	BitAndExpression	end & ~ ( huge_page_size - 1L )		1401381	1		&			
ANR	1401532	Identifier	end		1401381	0					
ANR	1401533	UnaryOperationExpression	~ ( huge_page_size - 1L )		1401381	1					
ANR	1401534	UnaryOperator	~		1401381	0					
ANR	1401535	AdditiveExpression	huge_page_size - 1L		1401381	1		-			
ANR	1401536	Identifier	huge_page_size		1401381	0					
ANR	1401537	PrimaryExpression	1L		1401381	1					
ANR	1401538	IfStatement	if ( seg_end > seg_start )		1401381	4					
ANR	1401539	Condition	seg_end > seg_start	2581:7:78200:78218	1401381	0	True				
ANR	1401540	RelationalExpression	seg_end > seg_start		1401381	0		>			
ANR	1401541	Identifier	seg_end		1401381	0					
ANR	1401542	Identifier	seg_start		1401381	1					
ANR	1401543	CompoundStatement		16:28:575:575	1401381	1					
ANR	1401544	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""remap to huge page %lx-%lx %s \\n"" , seg_start , seg_end , name )"	2582:4:78227:78322	1401381	0	True				
ANR	1401545	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""remap to huge page %lx-%lx %s \\n"" , seg_start , seg_end , name )"		1401381	0					
ANR	1401546	Callee	zend_accel_error		1401381	0					
ANR	1401547	Identifier	zend_accel_error		1401381	0					
ANR	1401548	ArgumentList	ACCEL_LOG_DEBUG		1401381	1					
ANR	1401549	Argument	ACCEL_LOG_DEBUG		1401381	0					
ANR	1401550	Identifier	ACCEL_LOG_DEBUG		1401381	0					
ANR	1401551	Argument	"""remap to huge page %lx-%lx %s \\n"""		1401381	1					
ANR	1401552	PrimaryExpression	"""remap to huge page %lx-%lx %s \\n"""		1401381	0					
ANR	1401553	Argument	seg_start		1401381	2					
ANR	1401554	Identifier	seg_start		1401381	0					
ANR	1401555	Argument	seg_end		1401381	3					
ANR	1401556	Identifier	seg_end		1401381	0					
ANR	1401557	Argument	name		1401381	4					
ANR	1401558	Identifier	name		1401381	0					
ANR	1401559	ExpressionStatement	"accel_remap_huge_pages ( ( void * ) seg_start , seg_end - seg_start , name , offset + seg_start - start )"	2583:4:78328:78423	1401381	1	True				
ANR	1401560	CallExpression	"accel_remap_huge_pages ( ( void * ) seg_start , seg_end - seg_start , name , offset + seg_start - start )"		1401381	0					
ANR	1401561	Callee	accel_remap_huge_pages		1401381	0					
ANR	1401562	Identifier	accel_remap_huge_pages		1401381	0					
ANR	1401563	ArgumentList	( void * ) seg_start		1401381	1					
ANR	1401564	Argument	( void * ) seg_start		1401381	0					
ANR	1401565	CastExpression	( void * ) seg_start		1401381	0					
ANR	1401566	CastTarget	void *		1401381	0					
ANR	1401567	Identifier	seg_start		1401381	1					
ANR	1401568	Argument	seg_end - seg_start		1401381	1					
ANR	1401569	AdditiveExpression	seg_end - seg_start		1401381	0		-			
ANR	1401570	Identifier	seg_end		1401381	0					
ANR	1401571	Identifier	seg_start		1401381	1					
ANR	1401572	Argument	name		1401381	2					
ANR	1401573	Identifier	name		1401381	0					
ANR	1401574	Argument	offset + seg_start - start		1401381	3					
ANR	1401575	AdditiveExpression	offset + seg_start - start		1401381	0		+			
ANR	1401576	Identifier	offset		1401381	0					
ANR	1401577	AdditiveExpression	seg_start - start		1401381	1		-			
ANR	1401578	Identifier	seg_start		1401381	0					
ANR	1401579	Identifier	start		1401381	1					
ANR	1401580	ExpressionStatement	fclose ( f )	2586:2:78436:78445	1401381	6	True				
ANR	1401581	CallExpression	fclose ( f )		1401381	0					
ANR	1401582	Callee	fclose		1401381	0					
ANR	1401583	Identifier	fclose		1401381	0					
ANR	1401584	ArgumentList	f		1401381	1					
ANR	1401585	Argument	f		1401381	0					
ANR	1401586	Identifier	f		1401381	0					
ANR	1401587	ReturnType	static void		1401381	1					
ANR	1401588	Identifier	accel_move_code_to_huge_pages		1401381	2					
ANR	1401589	ParameterList			1401381	3					
ANR	1401590	CFGEntryNode	ENTRY		1401381		True				
ANR	1401591	CFGExitNode	EXIT		1401381		True				
ANR	1401592	Symbol	ret		1401381						
ANR	1401593	Symbol	* name		1401381						
ANR	1401594	Symbol	fopen		1401381						
ANR	1401595	Symbol	huge_page_size		1401381						
ANR	1401596	Symbol	offset		1401381						
ANR	1401597	Symbol	perm		1401381						
ANR	1401598	Symbol	* perm		1401381						
ANR	1401599	Symbol	seg_start		1401381						
ANR	1401600	Symbol	f		1401381						
ANR	1401601	Symbol	& offset		1401381						
ANR	1401602	Symbol	& end		1401381						
ANR	1401603	Symbol	start		1401381						
ANR	1401604	Symbol	ZEND_MM_ALIGNED_SIZE_EX		1401381						
ANR	1401605	Symbol	seg_end		1401381						
ANR	1401606	Symbol	inode		1401381						
ANR	1401607	Symbol	fscanf		1401381						
ANR	1401608	Symbol	& inode		1401381						
ANR	1401609	Symbol	dev		1401381						
ANR	1401610	Symbol	ACCEL_LOG_DEBUG		1401381						
ANR	1401611	Symbol	name		1401381						
ANR	1401612	Symbol	end		1401381						
ANR	1401613	Symbol	& start		1401381						
ANR	1401614	Function	accel_move_code_to_huge_pages	2590:0:78459:78640							
ANR	1401615	FunctionDef	accel_move_code_to_huge_pages ()		1401614	0					
ANR	1401616	CompoundStatement		2591:0:78507:78640	1401614	0					
ANR	1401617	Statement	zend_error	2592:1:78510:78519	1401614	0	True				
ANR	1401618	Statement	(	2592:11:78520:78520	1401614	1	True				
ANR	1401619	Statement	E_WARNING	2592:12:78521:78529	1401614	2	True				
ANR	1401620	Statement	","	2592:21:78530:78530	1401614	3	True				
ANR	1401621	Statement	ACCELERATOR_PRODUCT_NAME	2592:23:78532:78555	1401614	4	True				
ANR	1401622	Statement	""": opcache.huge_code_pages has no affect as huge page is not supported"""	2592:48:78557:78627	1401614	5	True				
ANR	1401623	Statement	)	2592:119:78628:78628	1401614	6	True				
ANR	1401624	ExpressionStatement		2592:120:78629:78629	1401614	7	True				
ANR	1401625	ReturnStatement	return ;	2593:1:78632:78638	1401614	8	True				
ANR	1401626	ReturnType	static void		1401614	1					
ANR	1401627	Identifier	accel_move_code_to_huge_pages		1401614	2					
ANR	1401628	ParameterList			1401614	3					
ANR	1401629	CFGEntryNode	ENTRY		1401614		True				
ANR	1401630	CFGExitNode	EXIT		1401614		True				
ANR	1401631	Function	accel_startup	2598:0:78738:84541							
ANR	1401632	FunctionDef	accel_startup (zend_extension * extension)		1401631	0					
ANR	1401633	CompoundStatement		2599:0:78790:84541	1401631	0					
ANR	1401634	IdentifierDeclStatement	zend_function * func ;	2600:1:78793:78812	1401631	0	True				
ANR	1401635	IdentifierDecl	* func		1401631	0					
ANR	1401636	IdentifierDeclType	zend_function *		1401631	0					
ANR	1401637	Identifier	func		1401631	1					
ANR	1401638	IdentifierDeclStatement	zend_ini_entry * ini_entry ;	2601:1:78815:78840	1401631	1	True				
ANR	1401639	IdentifierDecl	* ini_entry		1401631	0					
ANR	1401640	IdentifierDeclType	zend_ini_entry *		1401631	0					
ANR	1401641	Identifier	ini_entry		1401631	1					
ANR	1401642	ExpressionStatement	"accel_globals_id = ts_allocate_id ( & accel_globals_id , sizeof ( zend_accel_globals ) , ( ts_allocate_ctor ) accel_globals_ctor , ( ts_allocate_dtor ) accel_globals_dtor )"	2604:1:78855:79013	1401631	2	True				
ANR	1401643	AssignmentExpression	"accel_globals_id = ts_allocate_id ( & accel_globals_id , sizeof ( zend_accel_globals ) , ( ts_allocate_ctor ) accel_globals_ctor , ( ts_allocate_dtor ) accel_globals_dtor )"		1401631	0		=			
ANR	1401644	Identifier	accel_globals_id		1401631	0					
ANR	1401645	CallExpression	"ts_allocate_id ( & accel_globals_id , sizeof ( zend_accel_globals ) , ( ts_allocate_ctor ) accel_globals_ctor , ( ts_allocate_dtor ) accel_globals_dtor )"		1401631	1					
ANR	1401646	Callee	ts_allocate_id		1401631	0					
ANR	1401647	Identifier	ts_allocate_id		1401631	0					
ANR	1401648	ArgumentList	& accel_globals_id		1401631	1					
ANR	1401649	Argument	& accel_globals_id		1401631	0					
ANR	1401650	UnaryOperationExpression	& accel_globals_id		1401631	0					
ANR	1401651	UnaryOperator	&		1401631	0					
ANR	1401652	Identifier	accel_globals_id		1401631	1					
ANR	1401653	Argument	sizeof ( zend_accel_globals )		1401631	1					
ANR	1401654	SizeofExpression	sizeof ( zend_accel_globals )		1401631	0					
ANR	1401655	Sizeof	sizeof		1401631	0					
ANR	1401656	SizeofOperand	zend_accel_globals		1401631	1					
ANR	1401657	Argument	( ts_allocate_ctor ) accel_globals_ctor		1401631	2					
ANR	1401658	CastExpression	( ts_allocate_ctor ) accel_globals_ctor		1401631	0					
ANR	1401659	CastTarget	ts_allocate_ctor		1401631	0					
ANR	1401660	Identifier	accel_globals_ctor		1401631	1					
ANR	1401661	Argument	( ts_allocate_dtor ) accel_globals_dtor		1401631	3					
ANR	1401662	CastExpression	( ts_allocate_dtor ) accel_globals_dtor		1401631	0					
ANR	1401663	CastTarget	ts_allocate_dtor		1401631	0					
ANR	1401664	Identifier	accel_globals_dtor		1401631	1					
ANR	1401665	ExpressionStatement	_setmaxstdio ( 2048 )	2610:1:79085:79103	1401631	3	True				
ANR	1401666	CallExpression	_setmaxstdio ( 2048 )		1401631	0					
ANR	1401667	Callee	_setmaxstdio		1401631	0					
ANR	1401668	Identifier	_setmaxstdio		1401631	0					
ANR	1401669	ArgumentList	2048		1401631	1					
ANR	1401670	Argument	2048		1401631	0					
ANR	1401671	PrimaryExpression	2048		1401631	0					
ANR	1401672	IfStatement	if ( start_accel_module ( ) == FAILURE )		1401631	4					
ANR	1401673	Condition	start_accel_module ( ) == FAILURE	2613:5:79180:79210	1401631	0	True				
ANR	1401674	EqualityExpression	start_accel_module ( ) == FAILURE		1401631	0		==			
ANR	1401675	CallExpression	start_accel_module ( )		1401631	0					
ANR	1401676	Callee	start_accel_module		1401631	0					
ANR	1401677	Identifier	start_accel_module		1401631	0					
ANR	1401678	ArgumentList			1401631	1					
ANR	1401679	Identifier	FAILURE		1401631	1					
ANR	1401680	CompoundStatement		15:38:422:422	1401631	1					
ANR	1401681	ExpressionStatement	accel_startup_ok = 0	2614:2:79217:79237	1401631	0	True				
ANR	1401682	AssignmentExpression	accel_startup_ok = 0		1401631	0		=			
ANR	1401683	Identifier	accel_startup_ok		1401631	0					
ANR	1401684	PrimaryExpression	0		1401631	1					
ANR	1401685	Statement	zend_error	2615:2:79241:79250	1401631	1	True				
ANR	1401686	Statement	(	2615:12:79251:79251	1401631	2	True				
ANR	1401687	Statement	E_WARNING	2615:13:79252:79260	1401631	3	True				
ANR	1401688	Statement	","	2615:22:79261:79261	1401631	4	True				
ANR	1401689	Statement	ACCELERATOR_PRODUCT_NAME	2615:24:79263:79286	1401631	5	True				
ANR	1401690	Statement	""": module registration failed!"""	2615:49:79288:79318	1401631	6	True				
ANR	1401691	Statement	)	2615:80:79319:79319	1401631	7	True				
ANR	1401692	ExpressionStatement		2615:81:79320:79320	1401631	8	True				
ANR	1401693	ReturnStatement	return FAILURE ;	2616:2:79324:79338	1401631	9	True				
ANR	1401694	Identifier	FAILURE		1401631	0					
ANR	1401695	ExpressionStatement	accel_gen_system_id ( )	2619:1:79345:79366	1401631	5	True				
ANR	1401696	CallExpression	accel_gen_system_id ( )		1401631	0					
ANR	1401697	Callee	accel_gen_system_id		1401631	0					
ANR	1401698	Identifier	accel_gen_system_id		1401631	0					
ANR	1401699	ArgumentList			1401631	1					
ANR	1401700	IfStatement	"if ( ZCG ( accel_directives ) . huge_code_pages && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0 ) )"		1401631	6					
ANR	1401701	Condition	"ZCG ( accel_directives ) . huge_code_pages && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0 )"	2622:5:79402:79634	1401631	0	True				
ANR	1401702	AndExpression	"ZCG ( accel_directives ) . huge_code_pages && ( strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0 )"		1401631	0		&&			
ANR	1401703	MemberAccess	ZCG ( accel_directives ) . huge_code_pages		1401631	0					
ANR	1401704	CallExpression	ZCG ( accel_directives )		1401631	0					
ANR	1401705	Callee	ZCG		1401631	0					
ANR	1401706	Identifier	ZCG		1401631	0					
ANR	1401707	ArgumentList	accel_directives		1401631	1					
ANR	1401708	Argument	accel_directives		1401631	0					
ANR	1401709	Identifier	accel_directives		1401631	0					
ANR	1401710	Identifier	huge_code_pages		1401631	1					
ANR	1401711	OrExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0 || strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0"		1401631	1		||			
ANR	1401712	EqualityExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0"		1401631	0		==			
ANR	1401713	CallExpression	"strcmp ( sapi_module . name , ""cli"" )"		1401631	0					
ANR	1401714	Callee	strcmp		1401631	0					
ANR	1401715	Identifier	strcmp		1401631	0					
ANR	1401716	ArgumentList	sapi_module . name		1401631	1					
ANR	1401717	Argument	sapi_module . name		1401631	0					
ANR	1401718	MemberAccess	sapi_module . name		1401631	0					
ANR	1401719	Identifier	sapi_module		1401631	0					
ANR	1401720	Identifier	name		1401631	1					
ANR	1401721	Argument	"""cli"""		1401631	1					
ANR	1401722	PrimaryExpression	"""cli"""		1401631	0					
ANR	1401723	PrimaryExpression	0		1401631	1					
ANR	1401724	OrExpression	"strcmp ( sapi_module . name , ""cli-server"" ) == 0 || strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0"		1401631	1		||			
ANR	1401725	EqualityExpression	"strcmp ( sapi_module . name , ""cli-server"" ) == 0"		1401631	0		==			
ANR	1401726	CallExpression	"strcmp ( sapi_module . name , ""cli-server"" )"		1401631	0					
ANR	1401727	Callee	strcmp		1401631	0					
ANR	1401728	Identifier	strcmp		1401631	0					
ANR	1401729	ArgumentList	sapi_module . name		1401631	1					
ANR	1401730	Argument	sapi_module . name		1401631	0					
ANR	1401731	MemberAccess	sapi_module . name		1401631	0					
ANR	1401732	Identifier	sapi_module		1401631	0					
ANR	1401733	Identifier	name		1401631	1					
ANR	1401734	Argument	"""cli-server"""		1401631	1					
ANR	1401735	PrimaryExpression	"""cli-server"""		1401631	0					
ANR	1401736	PrimaryExpression	0		1401631	1					
ANR	1401737	OrExpression	"strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0 || strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0"		1401631	1		||			
ANR	1401738	EqualityExpression	"strcmp ( sapi_module . name , ""cgi-fcgi"" ) == 0"		1401631	0		==			
ANR	1401739	CallExpression	"strcmp ( sapi_module . name , ""cgi-fcgi"" )"		1401631	0					
ANR	1401740	Callee	strcmp		1401631	0					
ANR	1401741	Identifier	strcmp		1401631	0					
ANR	1401742	ArgumentList	sapi_module . name		1401631	1					
ANR	1401743	Argument	sapi_module . name		1401631	0					
ANR	1401744	MemberAccess	sapi_module . name		1401631	0					
ANR	1401745	Identifier	sapi_module		1401631	0					
ANR	1401746	Identifier	name		1401631	1					
ANR	1401747	Argument	"""cgi-fcgi"""		1401631	1					
ANR	1401748	PrimaryExpression	"""cgi-fcgi"""		1401631	0					
ANR	1401749	PrimaryExpression	0		1401631	1					
ANR	1401750	EqualityExpression	"strcmp ( sapi_module . name , ""fpm-fcgi"" ) == 0"		1401631	1		==			
ANR	1401751	CallExpression	"strcmp ( sapi_module . name , ""fpm-fcgi"" )"		1401631	0					
ANR	1401752	Callee	strcmp		1401631	0					
ANR	1401753	Identifier	strcmp		1401631	0					
ANR	1401754	ArgumentList	sapi_module . name		1401631	1					
ANR	1401755	Argument	sapi_module . name		1401631	0					
ANR	1401756	MemberAccess	sapi_module . name		1401631	0					
ANR	1401757	Identifier	sapi_module		1401631	0					
ANR	1401758	Identifier	name		1401631	1					
ANR	1401759	Argument	"""fpm-fcgi"""		1401631	1					
ANR	1401760	PrimaryExpression	"""fpm-fcgi"""		1401631	0					
ANR	1401761	PrimaryExpression	0		1401631	1					
ANR	1401762	CompoundStatement		28:47:846:846	1401631	1					
ANR	1401763	ExpressionStatement	accel_move_code_to_huge_pages ( )	2627:2:79641:79672	1401631	0	True				
ANR	1401764	CallExpression	accel_move_code_to_huge_pages ( )		1401631	0					
ANR	1401765	Callee	accel_move_code_to_huge_pages		1401631	0					
ANR	1401766	Identifier	accel_move_code_to_huge_pages		1401631	0					
ANR	1401767	ArgumentList			1401631	1					
ANR	1401768	IfStatement	if ( accel_find_sapi ( ) == FAILURE )		1401631	7					
ANR	1401769	Condition	accel_find_sapi ( ) == FAILURE	2632:5:79768:79795	1401631	0	True				
ANR	1401770	EqualityExpression	accel_find_sapi ( ) == FAILURE		1401631	0		==			
ANR	1401771	CallExpression	accel_find_sapi ( )		1401631	0					
ANR	1401772	Callee	accel_find_sapi		1401631	0					
ANR	1401773	Identifier	accel_find_sapi		1401631	0					
ANR	1401774	ArgumentList			1401631	1					
ANR	1401775	Identifier	FAILURE		1401631	1					
ANR	1401776	CompoundStatement		34:35:1007:1007	1401631	1					
ANR	1401777	ExpressionStatement	accel_startup_ok = 0	2633:2:79802:79822	1401631	0	True				
ANR	1401778	AssignmentExpression	accel_startup_ok = 0		1401631	0		=			
ANR	1401779	Identifier	accel_startup_ok		1401631	0					
ANR	1401780	PrimaryExpression	0		1401631	1					
ANR	1401781	IfStatement	"if ( ! ZCG ( accel_directives ) . enable_cli && strcmp ( sapi_module . name , ""cli"" ) == 0 )"		1401631	1					
ANR	1401782	Condition	"! ZCG ( accel_directives ) . enable_cli && strcmp ( sapi_module . name , ""cli"" ) == 0"	2634:6:79830:79908	1401631	0	True				
ANR	1401783	AndExpression	"! ZCG ( accel_directives ) . enable_cli && strcmp ( sapi_module . name , ""cli"" ) == 0"		1401631	0		&&			
ANR	1401784	UnaryOperationExpression	! ZCG ( accel_directives ) . enable_cli		1401631	0					
ANR	1401785	UnaryOperator	!		1401631	0					
ANR	1401786	MemberAccess	ZCG ( accel_directives ) . enable_cli		1401631	1					
ANR	1401787	CallExpression	ZCG ( accel_directives )		1401631	0					
ANR	1401788	Callee	ZCG		1401631	0					
ANR	1401789	Identifier	ZCG		1401631	0					
ANR	1401790	ArgumentList	accel_directives		1401631	1					
ANR	1401791	Argument	accel_directives		1401631	0					
ANR	1401792	Identifier	accel_directives		1401631	0					
ANR	1401793	Identifier	enable_cli		1401631	1					
ANR	1401794	EqualityExpression	"strcmp ( sapi_module . name , ""cli"" ) == 0"		1401631	1		==			
ANR	1401795	CallExpression	"strcmp ( sapi_module . name , ""cli"" )"		1401631	0					
ANR	1401796	Callee	strcmp		1401631	0					
ANR	1401797	Identifier	strcmp		1401631	0					
ANR	1401798	ArgumentList	sapi_module . name		1401631	1					
ANR	1401799	Argument	sapi_module . name		1401631	0					
ANR	1401800	MemberAccess	sapi_module . name		1401631	0					
ANR	1401801	Identifier	sapi_module		1401631	0					
ANR	1401802	Identifier	name		1401631	1					
ANR	1401803	Argument	"""cli"""		1401631	1					
ANR	1401804	PrimaryExpression	"""cli"""		1401631	0					
ANR	1401805	PrimaryExpression	0		1401631	1					
ANR	1401806	CompoundStatement		37:44:1120:1120	1401631	1					
ANR	1401807	ExpressionStatement	"zps_startup_failure ( ""Opcode Caching is disabled for CLI"" , NULL , accelerator_remove_cb )"	2636:3:79916:80002	1401631	0	True				
ANR	1401808	CallExpression	"zps_startup_failure ( ""Opcode Caching is disabled for CLI"" , NULL , accelerator_remove_cb )"		1401631	0					
ANR	1401809	Callee	zps_startup_failure		1401631	0					
ANR	1401810	Identifier	zps_startup_failure		1401631	0					
ANR	1401811	ArgumentList	"""Opcode Caching is disabled for CLI"""		1401631	1					
ANR	1401812	Argument	"""Opcode Caching is disabled for CLI"""		1401631	0					
ANR	1401813	PrimaryExpression	"""Opcode Caching is disabled for CLI"""		1401631	0					
ANR	1401814	Argument	NULL		1401631	1					
ANR	1401815	Identifier	NULL		1401631	0					
ANR	1401816	Argument	accelerator_remove_cb		1401631	2					
ANR	1401817	Identifier	accelerator_remove_cb		1401631	0					
ANR	1401818	ElseStatement	else		1401631	0					
ANR	1401819	CompoundStatement		39:9:1222:1222	1401631	0					
ANR	1401820	ExpressionStatement	"zps_startup_failure ( ""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"" , NULL , accelerator_remove_cb )"	2638:3:80018:80153	1401631	0	True				
ANR	1401821	CallExpression	"zps_startup_failure ( ""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"" , NULL , accelerator_remove_cb )"		1401631	0					
ANR	1401822	Callee	zps_startup_failure		1401631	0					
ANR	1401823	Identifier	zps_startup_failure		1401631	0					
ANR	1401824	ArgumentList	"""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"""		1401631	1					
ANR	1401825	Argument	"""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"""		1401631	0					
ANR	1401826	PrimaryExpression	"""Opcode Caching is only supported in Apache, ISAPI, FPM, FastCGI and LiteSpeed SAPIs"""		1401631	0					
ANR	1401827	Argument	NULL		1401631	1					
ANR	1401828	Identifier	NULL		1401631	0					
ANR	1401829	Argument	accelerator_remove_cb		1401631	2					
ANR	1401830	Identifier	accelerator_remove_cb		1401631	0					
ANR	1401831	ReturnStatement	return SUCCESS ;	2640:2:80161:80175	1401631	2	True				
ANR	1401832	Identifier	SUCCESS		1401631	0					
ANR	1401833	IfStatement	if ( ZCG ( enabled ) == 0 )		1401631	8					
ANR	1401834	Condition	ZCG ( enabled ) == 0	2643:5:80186:80202	1401631	0	True				
ANR	1401835	EqualityExpression	ZCG ( enabled ) == 0		1401631	0		==			
ANR	1401836	CallExpression	ZCG ( enabled )		1401631	0					
ANR	1401837	Callee	ZCG		1401631	0					
ANR	1401838	Identifier	ZCG		1401631	0					
ANR	1401839	ArgumentList	enabled		1401631	1					
ANR	1401840	Argument	enabled		1401631	0					
ANR	1401841	Identifier	enabled		1401631	0					
ANR	1401842	PrimaryExpression	0		1401631	1					
ANR	1401843	CompoundStatement		45:24:1414:1414	1401631	1					
ANR	1401844	ReturnStatement	return SUCCESS ;	2644:2:80209:80224	1401631	0	True				
ANR	1401845	Identifier	SUCCESS		1401631	0					
ANR	1401846	IfStatement	if ( ! ZCG ( accel_directives ) . file_cache_only )		1401631	9					
ANR	1401847	Condition	! ZCG ( accel_directives ) . file_cache_only	2651:5:80407:80444	1401631	0	True				
ANR	1401848	UnaryOperationExpression	! ZCG ( accel_directives ) . file_cache_only		1401631	0					
ANR	1401849	UnaryOperator	!		1401631	0					
ANR	1401850	MemberAccess	ZCG ( accel_directives ) . file_cache_only		1401631	1					
ANR	1401851	CallExpression	ZCG ( accel_directives )		1401631	0					
ANR	1401852	Callee	ZCG		1401631	0					
ANR	1401853	Identifier	ZCG		1401631	0					
ANR	1401854	ArgumentList	accel_directives		1401631	1					
ANR	1401855	Argument	accel_directives		1401631	0					
ANR	1401856	Identifier	accel_directives		1401631	0					
ANR	1401857	Identifier	file_cache_only		1401631	1					
ANR	1401858	CompoundStatement		53:45:1656:1656	1401631	1					
ANR	1401859	SwitchStatement	switch ( zend_shared_alloc_startup ( ZCG ( accel_directives ) . memory_consumption ) )		1401631	0					
ANR	1401860	Condition	zend_shared_alloc_startup ( ZCG ( accel_directives ) . memory_consumption )	2655:10:80482:80548	1401631	0	True				
ANR	1401861	CallExpression	zend_shared_alloc_startup ( ZCG ( accel_directives ) . memory_consumption )		1401631	0					
ANR	1401862	Callee	zend_shared_alloc_startup		1401631	0					
ANR	1401863	Identifier	zend_shared_alloc_startup		1401631	0					
ANR	1401864	ArgumentList	ZCG ( accel_directives ) . memory_consumption		1401631	1					
ANR	1401865	Argument	ZCG ( accel_directives ) . memory_consumption		1401631	0					
ANR	1401866	MemberAccess	ZCG ( accel_directives ) . memory_consumption		1401631	0					
ANR	1401867	CallExpression	ZCG ( accel_directives )		1401631	0					
ANR	1401868	Callee	ZCG		1401631	0					
ANR	1401869	Identifier	ZCG		1401631	0					
ANR	1401870	ArgumentList	accel_directives		1401631	1					
ANR	1401871	Argument	accel_directives		1401631	0					
ANR	1401872	Identifier	accel_directives		1401631	0					
ANR	1401873	Identifier	memory_consumption		1401631	1					
ANR	1401874	CompoundStatement		57:79:1760:1760	1401631	1					
ANR	1401875	Label	case ALLOC_SUCCESS :	2656:3:80556:80574	1401631	0	True				
ANR	1401876	Identifier	ALLOC_SUCCESS		1401631	0					
ANR	1401877	IfStatement	if ( zend_accel_init_shm ( ) == FAILURE )		1401631	1					
ANR	1401878	Condition	zend_accel_init_shm ( ) == FAILURE	2657:8:80584:80615	1401631	0	True				
ANR	1401879	EqualityExpression	zend_accel_init_shm ( ) == FAILURE		1401631	0		==			
ANR	1401880	CallExpression	zend_accel_init_shm ( )		1401631	0					
ANR	1401881	Callee	zend_accel_init_shm		1401631	0					
ANR	1401882	Identifier	zend_accel_init_shm		1401631	0					
ANR	1401883	ArgumentList			1401631	1					
ANR	1401884	Identifier	FAILURE		1401631	1					
ANR	1401885	CompoundStatement		59:42:1827:1827	1401631	1					
ANR	1401886	ExpressionStatement	accel_startup_ok = 0	2658:5:80625:80645	1401631	0	True				
ANR	1401887	AssignmentExpression	accel_startup_ok = 0		1401631	0		=			
ANR	1401888	Identifier	accel_startup_ok		1401631	0					
ANR	1401889	PrimaryExpression	0		1401631	1					
ANR	1401890	ReturnStatement	return FAILURE ;	2659:5:80652:80666	1401631	1	True				
ANR	1401891	Identifier	FAILURE		1401631	0					
ANR	1401892	BreakStatement	break ;	2661:4:80678:80683	1401631	2	True				
ANR	1401893	Label	case ALLOC_FAILURE :	2662:3:80688:80706	1401631	3	True				
ANR	1401894	Identifier	ALLOC_FAILURE		1401631	0					
ANR	1401895	ExpressionStatement	accel_startup_ok = 0	2663:4:80712:80732	1401631	4	True				
ANR	1401896	AssignmentExpression	accel_startup_ok = 0		1401631	0		=			
ANR	1401897	Identifier	accel_startup_ok		1401631	0					
ANR	1401898	PrimaryExpression	0		1401631	1					
ANR	1401899	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""Failure to initialize shared memory structures - probably not enough shared memory."" )"	2664:4:80738:80858	1401631	5	True				
ANR	1401900	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""Failure to initialize shared memory structures - probably not enough shared memory."" )"		1401631	0					
ANR	1401901	Callee	zend_accel_error		1401631	0					
ANR	1401902	Identifier	zend_accel_error		1401631	0					
ANR	1401903	ArgumentList	ACCEL_LOG_FATAL		1401631	1					
ANR	1401904	Argument	ACCEL_LOG_FATAL		1401631	0					
ANR	1401905	Identifier	ACCEL_LOG_FATAL		1401631	0					
ANR	1401906	Argument	"""Failure to initialize shared memory structures - probably not enough shared memory."""		1401631	1					
ANR	1401907	PrimaryExpression	"""Failure to initialize shared memory structures - probably not enough shared memory."""		1401631	0					
ANR	1401908	ReturnStatement	return SUCCESS ;	2665:4:80864:80878	1401631	6	True				
ANR	1401909	Identifier	SUCCESS		1401631	0					
ANR	1401910	Label	case SUCCESSFULLY_REATTACHED :	2666:3:80883:80911	1401631	7	True				
ANR	1401911	Identifier	SUCCESSFULLY_REATTACHED		1401631	0					
ANR	1401912	ExpressionStatement	zend_shared_alloc_lock ( )	2667:4:80917:80941	1401631	8	True				
ANR	1401913	CallExpression	zend_shared_alloc_lock ( )		1401631	0					
ANR	1401914	Callee	zend_shared_alloc_lock		1401631	0					
ANR	1401915	Identifier	zend_shared_alloc_lock		1401631	0					
ANR	1401916	ArgumentList			1401631	1					
ANR	1401917	ExpressionStatement	accel_shared_globals = ( zend_accel_shared_globals * ) ZSMMG ( app_shared_globals )	2668:4:80947:81025	1401631	9	True				
ANR	1401918	AssignmentExpression	accel_shared_globals = ( zend_accel_shared_globals * ) ZSMMG ( app_shared_globals )		1401631	0		=			
ANR	1401919	Identifier	accel_shared_globals		1401631	0					
ANR	1401920	CastExpression	( zend_accel_shared_globals * ) ZSMMG ( app_shared_globals )		1401631	1					
ANR	1401921	CastTarget	zend_accel_shared_globals *		1401631	0					
ANR	1401922	CallExpression	ZSMMG ( app_shared_globals )		1401631	1					
ANR	1401923	Callee	ZSMMG		1401631	0					
ANR	1401924	Identifier	ZSMMG		1401631	0					
ANR	1401925	ArgumentList	app_shared_globals		1401631	1					
ANR	1401926	Argument	app_shared_globals		1401631	0					
ANR	1401927	Identifier	app_shared_globals		1401631	0					
ANR	1401928	ExpressionStatement	orig_new_interned_string = zend_new_interned_string	2669:4:81031:81082	1401631	10	True				
ANR	1401929	AssignmentExpression	orig_new_interned_string = zend_new_interned_string		1401631	0		=			
ANR	1401930	Identifier	orig_new_interned_string		1401631	0					
ANR	1401931	Identifier	zend_new_interned_string		1401631	1					
ANR	1401932	ExpressionStatement	orig_interned_strings_snapshot = zend_interned_strings_snapshot	2670:4:81088:81151	1401631	11	True				
ANR	1401933	AssignmentExpression	orig_interned_strings_snapshot = zend_interned_strings_snapshot		1401631	0		=			
ANR	1401934	Identifier	orig_interned_strings_snapshot		1401631	0					
ANR	1401935	Identifier	zend_interned_strings_snapshot		1401631	1					
ANR	1401936	ExpressionStatement	orig_interned_strings_restore = zend_interned_strings_restore	2671:4:81157:81218	1401631	12	True				
ANR	1401937	AssignmentExpression	orig_interned_strings_restore = zend_interned_strings_restore		1401631	0		=			
ANR	1401938	Identifier	orig_interned_strings_restore		1401631	0					
ANR	1401939	Identifier	zend_interned_strings_restore		1401631	1					
ANR	1401940	ExpressionStatement	zend_new_interned_string = accel_new_interned_string_for_php	2673:4:81225:81285	1401631	13	True				
ANR	1401941	AssignmentExpression	zend_new_interned_string = accel_new_interned_string_for_php		1401631	0		=			
ANR	1401942	Identifier	zend_new_interned_string		1401631	0					
ANR	1401943	Identifier	accel_new_interned_string_for_php		1401631	1					
ANR	1401944	ExpressionStatement	zend_interned_strings_snapshot = accel_interned_strings_snapshot_for_php	2674:4:81291:81363	1401631	14	True				
ANR	1401945	AssignmentExpression	zend_interned_strings_snapshot = accel_interned_strings_snapshot_for_php		1401631	0		=			
ANR	1401946	Identifier	zend_interned_strings_snapshot		1401631	0					
ANR	1401947	Identifier	accel_interned_strings_snapshot_for_php		1401631	1					
ANR	1401948	ExpressionStatement	zend_interned_strings_restore = accel_interned_strings_restore_for_php	2675:4:81369:81439	1401631	15	True				
ANR	1401949	AssignmentExpression	zend_interned_strings_restore = accel_interned_strings_restore_for_php		1401631	0		=			
ANR	1401950	Identifier	zend_interned_strings_restore		1401631	0					
ANR	1401951	Identifier	accel_interned_strings_restore_for_php		1401631	1					
ANR	1401952	ExpressionStatement	accel_use_shm_interned_strings ( )	2677:4:81457:81489	1401631	16	True				
ANR	1401953	CallExpression	accel_use_shm_interned_strings ( )		1401631	0					
ANR	1401954	Callee	accel_use_shm_interned_strings		1401631	0					
ANR	1401955	Identifier	accel_use_shm_interned_strings		1401631	0					
ANR	1401956	ArgumentList			1401631	1					
ANR	1401957	ExpressionStatement	zend_shared_alloc_unlock ( )	2679:4:81502:81528	1401631	17	True				
ANR	1401958	CallExpression	zend_shared_alloc_unlock ( )		1401631	0					
ANR	1401959	Callee	zend_shared_alloc_unlock		1401631	0					
ANR	1401960	Identifier	zend_shared_alloc_unlock		1401631	0					
ANR	1401961	ArgumentList			1401631	1					
ANR	1401962	BreakStatement	break ;	2680:4:81534:81539	1401631	18	True				
ANR	1401963	Label	case FAILED_REATTACHED :	2681:3:81544:81566	1401631	19	True				
ANR	1401964	Identifier	FAILED_REATTACHED		1401631	0					
ANR	1401965	ExpressionStatement	accel_startup_ok = 0	2682:4:81572:81592	1401631	20	True				
ANR	1401966	AssignmentExpression	accel_startup_ok = 0		1401631	0		=			
ANR	1401967	Identifier	accel_startup_ok		1401631	0					
ANR	1401968	PrimaryExpression	0		1401631	1					
ANR	1401969	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""Failure to initialize shared memory structures - can not reattach to exiting shared memory."" )"	2683:4:81598:81726	1401631	21	True				
ANR	1401970	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""Failure to initialize shared memory structures - can not reattach to exiting shared memory."" )"		1401631	0					
ANR	1401971	Callee	zend_accel_error		1401631	0					
ANR	1401972	Identifier	zend_accel_error		1401631	0					
ANR	1401973	ArgumentList	ACCEL_LOG_FATAL		1401631	1					
ANR	1401974	Argument	ACCEL_LOG_FATAL		1401631	0					
ANR	1401975	Identifier	ACCEL_LOG_FATAL		1401631	0					
ANR	1401976	Argument	"""Failure to initialize shared memory structures - can not reattach to exiting shared memory."""		1401631	1					
ANR	1401977	PrimaryExpression	"""Failure to initialize shared memory structures - can not reattach to exiting shared memory."""		1401631	0					
ANR	1401978	ReturnStatement	return SUCCESS ;	2684:4:81732:81746	1401631	22	True				
ANR	1401979	Identifier	SUCCESS		1401631	0					
ANR	1401980	BreakStatement	break ;	2685:4:81752:81757	1401631	23	True				
ANR	1401981	Label	case ALLOC_FALLBACK :	2687:3:81793:81812	1401631	24	True				
ANR	1401982	Identifier	ALLOC_FALLBACK		1401631	0					
ANR	1401983	ExpressionStatement	zend_shared_alloc_lock ( )	2688:4:81818:81842	1401631	25	True				
ANR	1401984	CallExpression	zend_shared_alloc_lock ( )		1401631	0					
ANR	1401985	Callee	zend_shared_alloc_lock		1401631	0					
ANR	1401986	Identifier	zend_shared_alloc_lock		1401631	0					
ANR	1401987	ArgumentList			1401631	1					
ANR	1401988	ExpressionStatement	fallback_process = 1	2689:4:81848:81868	1401631	26	True				
ANR	1401989	AssignmentExpression	fallback_process = 1		1401631	0		=			
ANR	1401990	Identifier	fallback_process		1401631	0					
ANR	1401991	PrimaryExpression	1		1401631	1					
ANR	1401992	ExpressionStatement	zend_accel_init_auto_globals ( )	2690:4:81874:81904	1401631	27	True				
ANR	1401993	CallExpression	zend_accel_init_auto_globals ( )		1401631	0					
ANR	1401994	Callee	zend_accel_init_auto_globals		1401631	0					
ANR	1401995	Identifier	zend_accel_init_auto_globals		1401631	0					
ANR	1401996	ArgumentList			1401631	1					
ANR	1401997	ExpressionStatement	zend_shared_alloc_unlock ( )	2691:4:81910:81936	1401631	28	True				
ANR	1401998	CallExpression	zend_shared_alloc_unlock ( )		1401631	0					
ANR	1401999	Callee	zend_shared_alloc_unlock		1401631	0					
ANR	1402000	Identifier	zend_shared_alloc_unlock		1401631	0					
ANR	1402001	ArgumentList			1401631	1					
ANR	1402002	GotoStatement	goto file_cache_fallback ;	2692:4:81942:81966	1401631	29	True				
ANR	1402003	Identifier	file_cache_fallback		1401631	0					
ANR	1402004	BreakStatement	break ;	2693:4:81972:81977	1401631	30	True				
ANR	1402005	ExpressionStatement	ZCG ( last_restart_time ) = ZCSG ( last_restart_time )	2700:2:82122:82170	1401631	1	True				
ANR	1402006	AssignmentExpression	ZCG ( last_restart_time ) = ZCSG ( last_restart_time )		1401631	0		=			
ANR	1402007	CallExpression	ZCG ( last_restart_time )		1401631	0					
ANR	1402008	Callee	ZCG		1401631	0					
ANR	1402009	Identifier	ZCG		1401631	0					
ANR	1402010	ArgumentList	last_restart_time		1401631	1					
ANR	1402011	Argument	last_restart_time		1401631	0					
ANR	1402012	Identifier	last_restart_time		1401631	0					
ANR	1402013	CallExpression	ZCSG ( last_restart_time )		1401631	1					
ANR	1402014	Callee	ZCSG		1401631	0					
ANR	1402015	Identifier	ZCSG		1401631	0					
ANR	1402016	ArgumentList	last_restart_time		1401631	1					
ANR	1402017	Argument	last_restart_time		1401631	0					
ANR	1402018	Identifier	last_restart_time		1401631	0					
ANR	1402019	ExpressionStatement	zend_accel_init_auto_globals ( )	2703:2:82208:82238	1401631	2	True				
ANR	1402020	CallExpression	zend_accel_init_auto_globals ( )		1401631	0					
ANR	1402021	Callee	zend_accel_init_auto_globals		1401631	0					
ANR	1402022	Identifier	zend_accel_init_auto_globals		1401631	0					
ANR	1402023	ArgumentList			1401631	1					
ANR	1402024	ExpressionStatement	zend_shared_alloc_lock ( )	2705:2:82243:82267	1401631	3	True				
ANR	1402025	CallExpression	zend_shared_alloc_lock ( )		1401631	0					
ANR	1402026	Callee	zend_shared_alloc_lock		1401631	0					
ANR	1402027	Identifier	zend_shared_alloc_lock		1401631	0					
ANR	1402028	ArgumentList			1401631	1					
ANR	1402029	ExpressionStatement	zend_shared_alloc_save_state ( )	2706:2:82271:82301	1401631	4	True				
ANR	1402030	CallExpression	zend_shared_alloc_save_state ( )		1401631	0					
ANR	1402031	Callee	zend_shared_alloc_save_state		1401631	0					
ANR	1402032	Identifier	zend_shared_alloc_save_state		1401631	0					
ANR	1402033	ArgumentList			1401631	1					
ANR	1402034	ExpressionStatement	zend_shared_alloc_unlock ( )	2707:2:82305:82331	1401631	5	True				
ANR	1402035	CallExpression	zend_shared_alloc_unlock ( )		1401631	0					
ANR	1402036	Callee	zend_shared_alloc_unlock		1401631	0					
ANR	1402037	Identifier	zend_shared_alloc_unlock		1401631	0					
ANR	1402038	ArgumentList			1401631	1					
ANR	1402039	ExpressionStatement	SHM_PROTECT ( )	2709:2:82336:82349	1401631	6	True				
ANR	1402040	CallExpression	SHM_PROTECT ( )		1401631	0					
ANR	1402041	Callee	SHM_PROTECT		1401631	0					
ANR	1402042	Identifier	SHM_PROTECT		1401631	0					
ANR	1402043	ArgumentList			1401631	1					
ANR	1402044	ElseStatement	else		1401631	0					
ANR	1402045	IfStatement	if ( ! ZCG ( accel_directives ) . file_cache )		1401631	0					
ANR	1402046	Condition	! ZCG ( accel_directives ) . file_cache	2711:12:82394:82426	1401631	0	True				
ANR	1402047	UnaryOperationExpression	! ZCG ( accel_directives ) . file_cache		1401631	0					
ANR	1402048	UnaryOperator	!		1401631	0					
ANR	1402049	MemberAccess	ZCG ( accel_directives ) . file_cache		1401631	1					
ANR	1402050	CallExpression	ZCG ( accel_directives )		1401631	0					
ANR	1402051	Callee	ZCG		1401631	0					
ANR	1402052	Identifier	ZCG		1401631	0					
ANR	1402053	ArgumentList	accel_directives		1401631	1					
ANR	1402054	Argument	accel_directives		1401631	0					
ANR	1402055	Identifier	accel_directives		1401631	0					
ANR	1402056	Identifier	file_cache		1401631	1					
ANR	1402057	CompoundStatement		113:47:3638:3638	1401631	1					
ANR	1402058	ExpressionStatement	accel_startup_ok = 0	2712:2:82433:82453	1401631	0	True				
ANR	1402059	AssignmentExpression	accel_startup_ok = 0		1401631	0		=			
ANR	1402060	Identifier	accel_startup_ok		1401631	0					
ANR	1402061	PrimaryExpression	0		1401631	1					
ANR	1402062	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""opcache.file_cache_only is set without a proper setting of opcache.file_cache"" )"	2713:2:82457:82571	1401631	1	True				
ANR	1402063	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""opcache.file_cache_only is set without a proper setting of opcache.file_cache"" )"		1401631	0					
ANR	1402064	Callee	zend_accel_error		1401631	0					
ANR	1402065	Identifier	zend_accel_error		1401631	0					
ANR	1402066	ArgumentList	ACCEL_LOG_FATAL		1401631	1					
ANR	1402067	Argument	ACCEL_LOG_FATAL		1401631	0					
ANR	1402068	Identifier	ACCEL_LOG_FATAL		1401631	0					
ANR	1402069	Argument	"""opcache.file_cache_only is set without a proper setting of opcache.file_cache"""		1401631	1					
ANR	1402070	PrimaryExpression	"""opcache.file_cache_only is set without a proper setting of opcache.file_cache"""		1401631	0					
ANR	1402071	ReturnStatement	return SUCCESS ;	2714:2:82575:82589	1401631	2	True				
ANR	1402072	Identifier	SUCCESS		1401631	0					
ANR	1402073	ElseStatement	else		1401631	0					
ANR	1402074	CompoundStatement		117:8:3808:3808	1401631	0					
ANR	1402075	ExpressionStatement	"accel_shared_globals = calloc ( 1 , sizeof ( zend_accel_shared_globals ) )"	2716:2:82603:82670	1401631	0	True				
ANR	1402076	AssignmentExpression	"accel_shared_globals = calloc ( 1 , sizeof ( zend_accel_shared_globals ) )"		1401631	0		=			
ANR	1402077	Identifier	accel_shared_globals		1401631	0					
ANR	1402078	CallExpression	"calloc ( 1 , sizeof ( zend_accel_shared_globals ) )"		1401631	1					
ANR	1402079	Callee	calloc		1401631	0					
ANR	1402080	Identifier	calloc		1401631	0					
ANR	1402081	ArgumentList	1		1401631	1					
ANR	1402082	Argument	1		1401631	0					
ANR	1402083	PrimaryExpression	1		1401631	0					
ANR	1402084	Argument	sizeof ( zend_accel_shared_globals )		1401631	1					
ANR	1402085	SizeofExpression	sizeof ( zend_accel_shared_globals )		1401631	0					
ANR	1402086	Sizeof	sizeof		1401631	0					
ANR	1402087	SizeofOperand	zend_accel_shared_globals		1401631	1					
ANR	1402088	ExpressionStatement	zend_accel_init_auto_globals ( )	2719:2:82708:82738	1401631	1	True				
ANR	1402089	CallExpression	zend_accel_init_auto_globals ( )		1401631	0					
ANR	1402090	Callee	zend_accel_init_auto_globals		1401631	0					
ANR	1402091	Identifier	zend_accel_init_auto_globals		1401631	0					
ANR	1402092	ArgumentList			1401631	1					
ANR	1402093	Label	file_cache_fallback :	2723:0:82781:82800	1401631	10	True				
ANR	1402094	Identifier	file_cache_fallback		1401631	0					
ANR	1402095	ExpressionStatement	accelerator_orig_compile_file = zend_compile_file	2727:1:82836:82885	1401631	11	True				
ANR	1402096	AssignmentExpression	accelerator_orig_compile_file = zend_compile_file		1401631	0		=			
ANR	1402097	Identifier	accelerator_orig_compile_file		1401631	0					
ANR	1402098	Identifier	zend_compile_file		1401631	1					
ANR	1402099	ExpressionStatement	zend_compile_file = persistent_compile_file	2728:1:82888:82931	1401631	12	True				
ANR	1402100	AssignmentExpression	zend_compile_file = persistent_compile_file		1401631	0		=			
ANR	1402101	Identifier	zend_compile_file		1401631	0					
ANR	1402102	Identifier	persistent_compile_file		1401631	1					
ANR	1402103	ExpressionStatement	accelerator_orig_zend_stream_open_function = zend_stream_open_function	2732:1:83043:83113	1401631	13	True				
ANR	1402104	AssignmentExpression	accelerator_orig_zend_stream_open_function = zend_stream_open_function		1401631	0		=			
ANR	1402105	Identifier	accelerator_orig_zend_stream_open_function		1401631	0					
ANR	1402106	Identifier	zend_stream_open_function		1401631	1					
ANR	1402107	ExpressionStatement	zend_stream_open_function = persistent_stream_open_function	2733:1:83116:83175	1401631	14	True				
ANR	1402108	AssignmentExpression	zend_stream_open_function = persistent_stream_open_function		1401631	0		=			
ANR	1402109	Identifier	zend_stream_open_function		1401631	0					
ANR	1402110	Identifier	persistent_stream_open_function		1401631	1					
ANR	1402111	ExpressionStatement	accelerator_orig_zend_resolve_path = zend_resolve_path	2737:1:83296:83350	1401631	15	True				
ANR	1402112	AssignmentExpression	accelerator_orig_zend_resolve_path = zend_resolve_path		1401631	0		=			
ANR	1402113	Identifier	accelerator_orig_zend_resolve_path		1401631	0					
ANR	1402114	Identifier	zend_resolve_path		1401631	1					
ANR	1402115	ExpressionStatement	zend_resolve_path = persistent_zend_resolve_path	2738:1:83353:83401	1401631	16	True				
ANR	1402116	AssignmentExpression	zend_resolve_path = persistent_zend_resolve_path		1401631	0		=			
ANR	1402117	Identifier	zend_resolve_path		1401631	0					
ANR	1402118	Identifier	persistent_zend_resolve_path		1401631	1					
ANR	1402119	IfStatement	"if ( ( func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 ) ) != NULL && func -> type == ZEND_INTERNAL_FUNCTION )"		1401631	17					
ANR	1402120	Condition	"( func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 ) ) != NULL && func -> type == ZEND_INTERNAL_FUNCTION"	2741:5:83442:83573	1401631	0	True				
ANR	1402121	AndExpression	"( func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 ) ) != NULL && func -> type == ZEND_INTERNAL_FUNCTION"		1401631	0		&&			
ANR	1402122	EqualityExpression	"( func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 ) ) != NULL"		1401631	0		!=			
ANR	1402123	AssignmentExpression	"func = zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 )"		1401631	0		=			
ANR	1402124	Identifier	func		1401631	0					
ANR	1402125	CallExpression	"zend_hash_str_find_ptr ( CG ( function_table ) , ""chdir"" , sizeof ( ""chdir"" ) - 1 )"		1401631	1					
ANR	1402126	Callee	zend_hash_str_find_ptr		1401631	0					
ANR	1402127	Identifier	zend_hash_str_find_ptr		1401631	0					
ANR	1402128	ArgumentList	CG ( function_table )		1401631	1					
ANR	1402129	Argument	CG ( function_table )		1401631	0					
ANR	1402130	CallExpression	CG ( function_table )		1401631	0					
ANR	1402131	Callee	CG		1401631	0					
ANR	1402132	Identifier	CG		1401631	0					
ANR	1402133	ArgumentList	function_table		1401631	1					
ANR	1402134	Argument	function_table		1401631	0					
ANR	1402135	Identifier	function_table		1401631	0					
ANR	1402136	Argument	"""chdir"""		1401631	1					
ANR	1402137	PrimaryExpression	"""chdir"""		1401631	0					
ANR	1402138	Argument	"sizeof ( ""chdir"" ) - 1"		1401631	2					
ANR	1402139	AdditiveExpression	"sizeof ( ""chdir"" ) - 1"		1401631	0		-			
ANR	1402140	SizeofExpression	"sizeof ( ""chdir"" )"		1401631	0					
ANR	1402141	Sizeof	sizeof		1401631	0					
ANR	1402142	PrimaryExpression	"""chdir"""		1401631	1					
ANR	1402143	PrimaryExpression	1		1401631	1					
ANR	1402144	Identifier	NULL		1401631	1					
ANR	1402145	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		1401631	1		==			
ANR	1402146	PtrMemberAccess	func -> type		1401631	0					
ANR	1402147	Identifier	func		1401631	0					
ANR	1402148	Identifier	type		1401631	1					
ANR	1402149	Identifier	ZEND_INTERNAL_FUNCTION		1401631	1					
ANR	1402150	CompoundStatement		144:43:4785:4785	1401631	1					
ANR	1402151	ExpressionStatement	orig_chdir = func -> internal_function . handler	2743:2:83580:83624	1401631	0	True				
ANR	1402152	AssignmentExpression	orig_chdir = func -> internal_function . handler		1401631	0		=			
ANR	1402153	Identifier	orig_chdir		1401631	0					
ANR	1402154	MemberAccess	func -> internal_function . handler		1401631	1					
ANR	1402155	PtrMemberAccess	func -> internal_function		1401631	0					
ANR	1402156	Identifier	func		1401631	0					
ANR	1402157	Identifier	internal_function		1401631	1					
ANR	1402158	Identifier	handler		1401631	1					
ANR	1402159	ExpressionStatement	func -> internal_function . handler = ZEND_FN ( accel_chdir )	2744:2:83628:83682	1401631	1	True				
ANR	1402160	AssignmentExpression	func -> internal_function . handler = ZEND_FN ( accel_chdir )		1401631	0		=			
ANR	1402161	MemberAccess	func -> internal_function . handler		1401631	0					
ANR	1402162	PtrMemberAccess	func -> internal_function		1401631	0					
ANR	1402163	Identifier	func		1401631	0					
ANR	1402164	Identifier	internal_function		1401631	1					
ANR	1402165	Identifier	handler		1401631	1					
ANR	1402166	CallExpression	ZEND_FN ( accel_chdir )		1401631	1					
ANR	1402167	Callee	ZEND_FN		1401631	0					
ANR	1402168	Identifier	ZEND_FN		1401631	0					
ANR	1402169	ArgumentList	accel_chdir		1401631	1					
ANR	1402170	Argument	accel_chdir		1401631	0					
ANR	1402171	Identifier	accel_chdir		1401631	0					
ANR	1402172	ExpressionStatement	ZCG ( cwd ) = NULL	2746:1:83688:83703	1401631	18	True				
ANR	1402173	AssignmentExpression	ZCG ( cwd ) = NULL		1401631	0		=			
ANR	1402174	CallExpression	ZCG ( cwd )		1401631	0					
ANR	1402175	Callee	ZCG		1401631	0					
ANR	1402176	Identifier	ZCG		1401631	0					
ANR	1402177	ArgumentList	cwd		1401631	1					
ANR	1402178	Argument	cwd		1401631	0					
ANR	1402179	Identifier	cwd		1401631	0					
ANR	1402180	Identifier	NULL		1401631	1					
ANR	1402181	ExpressionStatement	ZCG ( include_path ) = NULL	2747:1:83706:83730	1401631	19	True				
ANR	1402182	AssignmentExpression	ZCG ( include_path ) = NULL		1401631	0		=			
ANR	1402183	CallExpression	ZCG ( include_path )		1401631	0					
ANR	1402184	Callee	ZCG		1401631	0					
ANR	1402185	Identifier	ZCG		1401631	0					
ANR	1402186	ArgumentList	include_path		1401631	1					
ANR	1402187	Argument	include_path		1401631	0					
ANR	1402188	Identifier	include_path		1401631	0					
ANR	1402189	Identifier	NULL		1401631	1					
ANR	1402190	IfStatement	"if ( ( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL )"		1401631	20					
ANR	1402191	Condition	"( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL"	2750:5:83787:83892	1401631	0	True				
ANR	1402192	EqualityExpression	"( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL"		1401631	0		!=			
ANR	1402193	AssignmentExpression	"ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 )"		1401631	0		=			
ANR	1402194	Identifier	ini_entry		1401631	0					
ANR	1402195	CallExpression	"zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 )"		1401631	1					
ANR	1402196	Callee	zend_hash_str_find_ptr		1401631	0					
ANR	1402197	Identifier	zend_hash_str_find_ptr		1401631	0					
ANR	1402198	ArgumentList	EG ( ini_directives )		1401631	1					
ANR	1402199	Argument	EG ( ini_directives )		1401631	0					
ANR	1402200	CallExpression	EG ( ini_directives )		1401631	0					
ANR	1402201	Callee	EG		1401631	0					
ANR	1402202	Identifier	EG		1401631	0					
ANR	1402203	ArgumentList	ini_directives		1401631	1					
ANR	1402204	Argument	ini_directives		1401631	0					
ANR	1402205	Identifier	ini_directives		1401631	0					
ANR	1402206	Argument	"""include_path"""		1401631	1					
ANR	1402207	PrimaryExpression	"""include_path"""		1401631	0					
ANR	1402208	Argument	"sizeof ( ""include_path"" ) - 1"		1401631	2					
ANR	1402209	AdditiveExpression	"sizeof ( ""include_path"" ) - 1"		1401631	0		-			
ANR	1402210	SizeofExpression	"sizeof ( ""include_path"" )"		1401631	0					
ANR	1402211	Sizeof	sizeof		1401631	0					
ANR	1402212	PrimaryExpression	"""include_path"""		1401631	1					
ANR	1402213	PrimaryExpression	1		1401631	1					
ANR	1402214	Identifier	NULL		1401631	1					
ANR	1402215	CompoundStatement		152:113:5104:5104	1401631	1					
ANR	1402216	ExpressionStatement	ZCG ( include_path ) = ini_entry -> value	2751:2:83899:83935	1401631	0	True				
ANR	1402217	AssignmentExpression	ZCG ( include_path ) = ini_entry -> value		1401631	0		=			
ANR	1402218	CallExpression	ZCG ( include_path )		1401631	0					
ANR	1402219	Callee	ZCG		1401631	0					
ANR	1402220	Identifier	ZCG		1401631	0					
ANR	1402221	ArgumentList	include_path		1401631	1					
ANR	1402222	Argument	include_path		1401631	0					
ANR	1402223	Identifier	include_path		1401631	0					
ANR	1402224	PtrMemberAccess	ini_entry -> value		1401631	1					
ANR	1402225	Identifier	ini_entry		1401631	0					
ANR	1402226	Identifier	value		1401631	1					
ANR	1402227	ExpressionStatement	orig_include_path_on_modify = ini_entry -> on_modify	2752:2:83939:83989	1401631	1	True				
ANR	1402228	AssignmentExpression	orig_include_path_on_modify = ini_entry -> on_modify		1401631	0		=			
ANR	1402229	Identifier	orig_include_path_on_modify		1401631	0					
ANR	1402230	PtrMemberAccess	ini_entry -> on_modify		1401631	1					
ANR	1402231	Identifier	ini_entry		1401631	0					
ANR	1402232	Identifier	on_modify		1401631	1					
ANR	1402233	ExpressionStatement	ini_entry -> on_modify = accel_include_path_on_modify	2753:2:83993:84044	1401631	2	True				
ANR	1402234	AssignmentExpression	ini_entry -> on_modify = accel_include_path_on_modify		1401631	0		=			
ANR	1402235	PtrMemberAccess	ini_entry -> on_modify		1401631	0					
ANR	1402236	Identifier	ini_entry		1401631	0					
ANR	1402237	Identifier	on_modify		1401631	1					
ANR	1402238	Identifier	accel_include_path_on_modify		1401631	1					
ANR	1402239	ExpressionStatement	accel_startup_ok = 1	2756:1:84051:84071	1401631	21	True				
ANR	1402240	AssignmentExpression	accel_startup_ok = 1		1401631	0		=			
ANR	1402241	Identifier	accel_startup_ok		1401631	0					
ANR	1402242	PrimaryExpression	1		1401631	1					
ANR	1402243	ExpressionStatement	zend_accel_override_file_functions ( )	2759:1:84134:84170	1401631	22	True				
ANR	1402244	CallExpression	zend_accel_override_file_functions ( )		1401631	0					
ANR	1402245	Callee	zend_accel_override_file_functions		1401631	0					
ANR	1402246	Identifier	zend_accel_override_file_functions		1401631	0					
ANR	1402247	ArgumentList			1401631	1					
ANR	1402248	ExpressionStatement	accel_blacklist . entries = NULL	2762:1:84197:84227	1401631	23	True				
ANR	1402249	AssignmentExpression	accel_blacklist . entries = NULL		1401631	0		=			
ANR	1402250	MemberAccess	accel_blacklist . entries		1401631	0					
ANR	1402251	Identifier	accel_blacklist		1401631	0					
ANR	1402252	Identifier	entries		1401631	1					
ANR	1402253	Identifier	NULL		1401631	1					
ANR	1402254	IfStatement	if ( ZCG ( enabled ) && accel_startup_ok && ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename ) )		1401631	24					
ANR	1402255	Condition	ZCG ( enabled ) && accel_startup_ok && ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename )	2763:5:84234:84374	1401631	0	True				
ANR	1402256	AndExpression	ZCG ( enabled ) && accel_startup_ok && ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename )		1401631	0		&&			
ANR	1402257	CallExpression	ZCG ( enabled )		1401631	0					
ANR	1402258	Callee	ZCG		1401631	0					
ANR	1402259	Identifier	ZCG		1401631	0					
ANR	1402260	ArgumentList	enabled		1401631	1					
ANR	1402261	Argument	enabled		1401631	0					
ANR	1402262	Identifier	enabled		1401631	0					
ANR	1402263	AndExpression	accel_startup_ok && ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename )		1401631	1		&&			
ANR	1402264	Identifier	accel_startup_ok		1401631	0					
ANR	1402265	AndExpression	ZCG ( accel_directives ) . user_blacklist_filename && * ZCG ( accel_directives . user_blacklist_filename )		1401631	1		&&			
ANR	1402266	MemberAccess	ZCG ( accel_directives ) . user_blacklist_filename		1401631	0					
ANR	1402267	CallExpression	ZCG ( accel_directives )		1401631	0					
ANR	1402268	Callee	ZCG		1401631	0					
ANR	1402269	Identifier	ZCG		1401631	0					
ANR	1402270	ArgumentList	accel_directives		1401631	1					
ANR	1402271	Argument	accel_directives		1401631	0					
ANR	1402272	Identifier	accel_directives		1401631	0					
ANR	1402273	Identifier	user_blacklist_filename		1401631	1					
ANR	1402274	UnaryOperationExpression	* ZCG ( accel_directives . user_blacklist_filename )		1401631	1					
ANR	1402275	UnaryOperator	*		1401631	0					
ANR	1402276	CallExpression	ZCG ( accel_directives . user_blacklist_filename )		1401631	1					
ANR	1402277	Callee	ZCG		1401631	0					
ANR	1402278	Identifier	ZCG		1401631	0					
ANR	1402279	ArgumentList	accel_directives . user_blacklist_filename		1401631	1					
ANR	1402280	Argument	accel_directives . user_blacklist_filename		1401631	0					
ANR	1402281	MemberAccess	accel_directives . user_blacklist_filename		1401631	0					
ANR	1402282	Identifier	accel_directives		1401631	0					
ANR	1402283	Identifier	user_blacklist_filename		1401631	1					
ANR	1402284	CompoundStatement		167:53:5586:5586	1401631	1					
ANR	1402285	ExpressionStatement	zend_accel_blacklist_init ( & accel_blacklist )	2766:2:84381:84424	1401631	0	True				
ANR	1402286	CallExpression	zend_accel_blacklist_init ( & accel_blacklist )		1401631	0					
ANR	1402287	Callee	zend_accel_blacklist_init		1401631	0					
ANR	1402288	Identifier	zend_accel_blacklist_init		1401631	0					
ANR	1402289	ArgumentList	& accel_blacklist		1401631	1					
ANR	1402290	Argument	& accel_blacklist		1401631	0					
ANR	1402291	UnaryOperationExpression	& accel_blacklist		1401631	0					
ANR	1402292	UnaryOperator	&		1401631	0					
ANR	1402293	Identifier	accel_blacklist		1401631	1					
ANR	1402294	ExpressionStatement	"zend_accel_blacklist_load ( & accel_blacklist , ZCG ( accel_directives . user_blacklist_filename ) )"	2767:2:84428:84518	1401631	1	True				
ANR	1402295	CallExpression	"zend_accel_blacklist_load ( & accel_blacklist , ZCG ( accel_directives . user_blacklist_filename ) )"		1401631	0					
ANR	1402296	Callee	zend_accel_blacklist_load		1401631	0					
ANR	1402297	Identifier	zend_accel_blacklist_load		1401631	0					
ANR	1402298	ArgumentList	& accel_blacklist		1401631	1					
ANR	1402299	Argument	& accel_blacklist		1401631	0					
ANR	1402300	UnaryOperationExpression	& accel_blacklist		1401631	0					
ANR	1402301	UnaryOperator	&		1401631	0					
ANR	1402302	Identifier	accel_blacklist		1401631	1					
ANR	1402303	Argument	ZCG ( accel_directives . user_blacklist_filename )		1401631	1					
ANR	1402304	CallExpression	ZCG ( accel_directives . user_blacklist_filename )		1401631	0					
ANR	1402305	Callee	ZCG		1401631	0					
ANR	1402306	Identifier	ZCG		1401631	0					
ANR	1402307	ArgumentList	accel_directives . user_blacklist_filename		1401631	1					
ANR	1402308	Argument	accel_directives . user_blacklist_filename		1401631	0					
ANR	1402309	MemberAccess	accel_directives . user_blacklist_filename		1401631	0					
ANR	1402310	Identifier	accel_directives		1401631	0					
ANR	1402311	Identifier	user_blacklist_filename		1401631	1					
ANR	1402312	ReturnStatement	return SUCCESS ;	2770:1:84525:84539	1401631	25	True				
ANR	1402313	Identifier	SUCCESS		1401631	0					
ANR	1402314	ReturnType	static int		1401631	1					
ANR	1402315	Identifier	accel_startup		1401631	2					
ANR	1402316	ParameterList	zend_extension * extension		1401631	3					
ANR	1402317	Parameter	zend_extension * extension	2598:25:78763:78787	1401631	0	True				
ANR	1402318	ParameterType	zend_extension *		1401631	0					
ANR	1402319	Identifier	extension		1401631	1					
ANR	1402320	CFGEntryNode	ENTRY		1401631		True				
ANR	1402321	CFGExitNode	EXIT		1401631		True				
ANR	1402322	Symbol	accel_globals_ctor		1401631						
ANR	1402323	Symbol	accel_globals_id		1401631						
ANR	1402324	Symbol	ACCEL_LOG_FATAL		1401631						
ANR	1402325	Symbol	orig_chdir		1401631						
ANR	1402326	Symbol	zend_resolve_path		1401631						
ANR	1402327	Symbol	orig_interned_strings_snapshot		1401631						
ANR	1402328	Symbol	accelerator_orig_zend_resolve_path		1401631						
ANR	1402329	Symbol	ts_allocate_id		1401631						
ANR	1402330	Symbol	ZEND_INTERNAL_FUNCTION		1401631						
ANR	1402331	Symbol	ZCSG		1401631						
ANR	1402332	Symbol	zend_interned_strings_restore		1401631						
ANR	1402333	Symbol	accel_shared_globals		1401631						
ANR	1402334	Symbol	* ZCG		1401631						
ANR	1402335	Symbol	start_accel_module		1401631						
ANR	1402336	Symbol	ZCG ( accel_directives ) . enable_cli		1401631						
ANR	1402337	Symbol	func -> internal_function		1401631						
ANR	1402338	Symbol	strcmp		1401631						
ANR	1402339	Symbol	accel_globals_dtor		1401631						
ANR	1402340	Symbol	EG		1401631						
ANR	1402341	Symbol	NULL		1401631						
ANR	1402342	Symbol	ini_entry -> on_modify		1401631						
ANR	1402343	Symbol	zend_interned_strings_snapshot		1401631						
ANR	1402344	Symbol	accel_blacklist . entries		1401631						
ANR	1402345	Symbol	accel_new_interned_string_for_php		1401631						
ANR	1402346	Symbol	accel_directives . user_blacklist_filename		1401631						
ANR	1402347	Symbol	orig_new_interned_string		1401631						
ANR	1402348	Symbol	accel_interned_strings_snapshot_for_php		1401631						
ANR	1402349	Symbol	* ini_entry		1401631						
ANR	1402350	Symbol	persistent_stream_open_function		1401631						
ANR	1402351	Symbol	func -> internal_function . handler		1401631						
ANR	1402352	Symbol	last_restart_time		1401631						
ANR	1402353	Symbol	zend_compile_file		1401631						
ANR	1402354	Symbol	ZCG ( accel_directives ) . file_cache_only		1401631						
ANR	1402355	Symbol	function_table		1401631						
ANR	1402356	Symbol	ZEND_FN		1401631						
ANR	1402357	Symbol	ZCG ( accel_directives ) . file_cache		1401631						
ANR	1402358	Symbol	ZCG		1401631						
ANR	1402359	Symbol	accel_startup_ok		1401631						
ANR	1402360	Symbol	& accel_blacklist		1401631						
ANR	1402361	Symbol	extension		1401631						
ANR	1402362	Symbol	zend_shared_alloc_startup		1401631						
ANR	1402363	Symbol	ZCG ( accel_directives ) . user_blacklist_filename		1401631						
ANR	1402364	Symbol	calloc		1401631						
ANR	1402365	Symbol	accelerator_orig_compile_file		1401631						
ANR	1402366	Symbol	accel_chdir		1401631						
ANR	1402367	Symbol	enabled		1401631						
ANR	1402368	Symbol	accelerator_orig_zend_stream_open_function		1401631						
ANR	1402369	Symbol	include_path		1401631						
ANR	1402370	Symbol	sapi_module . name		1401631						
ANR	1402371	Symbol	ZSMMG		1401631						
ANR	1402372	Symbol	zend_stream_open_function		1401631						
ANR	1402373	Symbol	ZCG ( accel_directives ) . memory_consumption		1401631						
ANR	1402374	Symbol	zend_hash_str_find_ptr		1401631						
ANR	1402375	Symbol	persistent_zend_resolve_path		1401631						
ANR	1402376	Symbol	func -> type		1401631						
ANR	1402377	Symbol	& accel_globals_id		1401631						
ANR	1402378	Symbol	accel_blacklist		1401631						
ANR	1402379	Symbol	orig_interned_strings_restore		1401631						
ANR	1402380	Symbol	persistent_compile_file		1401631						
ANR	1402381	Symbol	ini_directives		1401631						
ANR	1402382	Symbol	app_shared_globals		1401631						
ANR	1402383	Symbol	SUCCESS		1401631						
ANR	1402384	Symbol	CG		1401631						
ANR	1402385	Symbol	* func		1401631						
ANR	1402386	Symbol	accel_interned_strings_restore_for_php		1401631						
ANR	1402387	Symbol	FAILURE		1401631						
ANR	1402388	Symbol	accel_include_path_on_modify		1401631						
ANR	1402389	Symbol	cwd		1401631						
ANR	1402390	Symbol	ini_entry -> value		1401631						
ANR	1402391	Symbol	fallback_process		1401631						
ANR	1402392	Symbol	sapi_module		1401631						
ANR	1402393	Symbol	zend_accel_init_shm		1401631						
ANR	1402394	Symbol	zend_new_interned_string		1401631						
ANR	1402395	Symbol	func		1401631						
ANR	1402396	Symbol	ini_entry		1401631						
ANR	1402397	Symbol	ZCG ( accel_directives ) . huge_code_pages		1401631						
ANR	1402398	Symbol	accelerator_remove_cb		1401631						
ANR	1402399	Symbol	orig_include_path_on_modify		1401631						
ANR	1402400	Symbol	accel_directives		1401631						
ANR	1402401	Symbol	* ZCG ( accel_directives . user_blacklist_filename )		1401631						
ANR	1402402	Symbol	accel_find_sapi		1401631						
ANR	1402403	Function	accel_free_ts_resources	2773:0:84544:84677							
ANR	1402404	FunctionDef	accel_free_ts_resources ()		1402403	0					
ANR	1402405	CompoundStatement		2774:0:84582:84677	1402403	0					
ANR	1402406	ExpressionStatement	accel_globals_dtor ( & accel_globals )	2776:1:84597:84631	1402403	0	True				
ANR	1402407	CallExpression	accel_globals_dtor ( & accel_globals )		1402403	0					
ANR	1402408	Callee	accel_globals_dtor		1402403	0					
ANR	1402409	Identifier	accel_globals_dtor		1402403	0					
ANR	1402410	ArgumentList	& accel_globals		1402403	1					
ANR	1402411	Argument	& accel_globals		1402403	0					
ANR	1402412	UnaryOperationExpression	& accel_globals		1402403	0					
ANR	1402413	UnaryOperator	&		1402403	0					
ANR	1402414	Identifier	accel_globals		1402403	1					
ANR	1402415	ReturnType	static void		1402403	1					
ANR	1402416	Identifier	accel_free_ts_resources		1402403	2					
ANR	1402417	ParameterList			1402403	3					
ANR	1402418	CFGEntryNode	ENTRY		1402403		True				
ANR	1402419	CFGExitNode	EXIT		1402403		True				
ANR	1402420	Symbol	& accel_globals		1402403						
ANR	1402421	Function	accel_shutdown	2782:0:84680:85758							
ANR	1402422	FunctionDef	accel_shutdown ()		1402421	0					
ANR	1402423	CompoundStatement		2783:0:84706:85758	1402421	0					
ANR	1402424	IdentifierDeclStatement	zend_ini_entry * ini_entry ;	2784:1:84709:84734	1402421	0	True				
ANR	1402425	IdentifierDecl	* ini_entry		1402421	0					
ANR	1402426	IdentifierDeclType	zend_ini_entry *		1402421	0					
ANR	1402427	Identifier	ini_entry		1402421	1					
ANR	1402428	IdentifierDeclStatement	zend_bool file_cache_only = 0 ;	2785:1:84737:84766	1402421	1	True				
ANR	1402429	IdentifierDecl	file_cache_only = 0		1402421	0					
ANR	1402430	IdentifierDeclType	zend_bool		1402421	0					
ANR	1402431	Identifier	file_cache_only		1402421	1					
ANR	1402432	AssignmentExpression	file_cache_only = 0		1402421	2		=			
ANR	1402433	Identifier	file_cache_only		1402421	0					
ANR	1402434	PrimaryExpression	0		1402421	1					
ANR	1402435	ExpressionStatement	zend_accel_blacklist_shutdown ( & accel_blacklist )	2787:1:84770:84817	1402421	2	True				
ANR	1402436	CallExpression	zend_accel_blacklist_shutdown ( & accel_blacklist )		1402421	0					
ANR	1402437	Callee	zend_accel_blacklist_shutdown		1402421	0					
ANR	1402438	Identifier	zend_accel_blacklist_shutdown		1402421	0					
ANR	1402439	ArgumentList	& accel_blacklist		1402421	1					
ANR	1402440	Argument	& accel_blacklist		1402421	0					
ANR	1402441	UnaryOperationExpression	& accel_blacklist		1402421	0					
ANR	1402442	UnaryOperator	&		1402421	0					
ANR	1402443	Identifier	accel_blacklist		1402421	1					
ANR	1402444	IfStatement	if ( ! ZCG ( enabled ) || ! accel_startup_ok )		1402421	3					
ANR	1402445	Condition	! ZCG ( enabled ) || ! accel_startup_ok	2789:5:84825:84858	1402421	0	True				
ANR	1402446	OrExpression	! ZCG ( enabled ) || ! accel_startup_ok		1402421	0		||			
ANR	1402447	UnaryOperationExpression	! ZCG ( enabled )		1402421	0					
ANR	1402448	UnaryOperator	!		1402421	0					
ANR	1402449	CallExpression	ZCG ( enabled )		1402421	1					
ANR	1402450	Callee	ZCG		1402421	0					
ANR	1402451	Identifier	ZCG		1402421	0					
ANR	1402452	ArgumentList	enabled		1402421	1					
ANR	1402453	Argument	enabled		1402421	0					
ANR	1402454	Identifier	enabled		1402421	0					
ANR	1402455	UnaryOperationExpression	! accel_startup_ok		1402421	1					
ANR	1402456	UnaryOperator	!		1402421	0					
ANR	1402457	Identifier	accel_startup_ok		1402421	1					
ANR	1402458	CompoundStatement		7:41:154:154	1402421	1					
ANR	1402459	ExpressionStatement	accel_free_ts_resources ( )	2790:2:84865:84890	1402421	0	True				
ANR	1402460	CallExpression	accel_free_ts_resources ( )		1402421	0					
ANR	1402461	Callee	accel_free_ts_resources		1402421	0					
ANR	1402462	Identifier	accel_free_ts_resources		1402421	0					
ANR	1402463	ArgumentList			1402421	1					
ANR	1402464	ReturnStatement	return ;	2791:2:84894:84900	1402421	1	True				
ANR	1402465	IfStatement	if ( ZCG ( accel_directives ) . interned_strings_buffer )		1402421	4					
ANR	1402466	Condition	ZCG ( accel_directives ) . interned_strings_buffer	2794:5:84911:84955	1402421	0	True				
ANR	1402467	MemberAccess	ZCG ( accel_directives ) . interned_strings_buffer		1402421	0					
ANR	1402468	CallExpression	ZCG ( accel_directives )		1402421	0					
ANR	1402469	Callee	ZCG		1402421	0					
ANR	1402470	Identifier	ZCG		1402421	0					
ANR	1402471	ArgumentList	accel_directives		1402421	1					
ANR	1402472	Argument	accel_directives		1402421	0					
ANR	1402473	Identifier	accel_directives		1402421	0					
ANR	1402474	Identifier	interned_strings_buffer		1402421	1					
ANR	1402475	CompoundStatement		12:52:251:251	1402421	1					
ANR	1402476	ExpressionStatement	zend_hash_clean ( CG ( auto_globals ) )	2796:2:84974:85007	1402421	0	True				
ANR	1402477	CallExpression	zend_hash_clean ( CG ( auto_globals ) )		1402421	0					
ANR	1402478	Callee	zend_hash_clean		1402421	0					
ANR	1402479	Identifier	zend_hash_clean		1402421	0					
ANR	1402480	ArgumentList	CG ( auto_globals )		1402421	1					
ANR	1402481	Argument	CG ( auto_globals )		1402421	0					
ANR	1402482	CallExpression	CG ( auto_globals )		1402421	0					
ANR	1402483	Callee	CG		1402421	0					
ANR	1402484	Identifier	CG		1402421	0					
ANR	1402485	ArgumentList	auto_globals		1402421	1					
ANR	1402486	Argument	auto_globals		1402421	0					
ANR	1402487	Identifier	auto_globals		1402421	0					
ANR	1402488	ExpressionStatement	zend_hash_clean ( CG ( function_table ) )	2797:2:85011:85046	1402421	1	True				
ANR	1402489	CallExpression	zend_hash_clean ( CG ( function_table ) )		1402421	0					
ANR	1402490	Callee	zend_hash_clean		1402421	0					
ANR	1402491	Identifier	zend_hash_clean		1402421	0					
ANR	1402492	ArgumentList	CG ( function_table )		1402421	1					
ANR	1402493	Argument	CG ( function_table )		1402421	0					
ANR	1402494	CallExpression	CG ( function_table )		1402421	0					
ANR	1402495	Callee	CG		1402421	0					
ANR	1402496	Identifier	CG		1402421	0					
ANR	1402497	ArgumentList	function_table		1402421	1					
ANR	1402498	Argument	function_table		1402421	0					
ANR	1402499	Identifier	function_table		1402421	0					
ANR	1402500	ExpressionStatement	zend_hash_clean ( CG ( class_table ) )	2798:2:85050:85082	1402421	2	True				
ANR	1402501	CallExpression	zend_hash_clean ( CG ( class_table ) )		1402421	0					
ANR	1402502	Callee	zend_hash_clean		1402421	0					
ANR	1402503	Identifier	zend_hash_clean		1402421	0					
ANR	1402504	ArgumentList	CG ( class_table )		1402421	1					
ANR	1402505	Argument	CG ( class_table )		1402421	0					
ANR	1402506	CallExpression	CG ( class_table )		1402421	0					
ANR	1402507	Callee	CG		1402421	0					
ANR	1402508	Identifier	CG		1402421	0					
ANR	1402509	ArgumentList	class_table		1402421	1					
ANR	1402510	Argument	class_table		1402421	0					
ANR	1402511	Identifier	class_table		1402421	0					
ANR	1402512	ExpressionStatement	zend_hash_clean ( EG ( zend_constants ) )	2799:2:85086:85121	1402421	3	True				
ANR	1402513	CallExpression	zend_hash_clean ( EG ( zend_constants ) )		1402421	0					
ANR	1402514	Callee	zend_hash_clean		1402421	0					
ANR	1402515	Identifier	zend_hash_clean		1402421	0					
ANR	1402516	ArgumentList	EG ( zend_constants )		1402421	1					
ANR	1402517	Argument	EG ( zend_constants )		1402421	0					
ANR	1402518	CallExpression	EG ( zend_constants )		1402421	0					
ANR	1402519	Callee	EG		1402421	0					
ANR	1402520	Identifier	EG		1402421	0					
ANR	1402521	ArgumentList	zend_constants		1402421	1					
ANR	1402522	Argument	zend_constants		1402421	0					
ANR	1402523	Identifier	zend_constants		1402421	0					
ANR	1402524	ExpressionStatement	accel_reset_pcre_cache ( )	2803:1:85135:85159	1402421	5	True				
ANR	1402525	CallExpression	accel_reset_pcre_cache ( )		1402421	0					
ANR	1402526	Callee	accel_reset_pcre_cache		1402421	0					
ANR	1402527	Identifier	accel_reset_pcre_cache		1402421	0					
ANR	1402528	ArgumentList			1402421	1					
ANR	1402529	ExpressionStatement	zend_new_interned_string = orig_new_interned_string	2805:1:85163:85214	1402421	6	True				
ANR	1402530	AssignmentExpression	zend_new_interned_string = orig_new_interned_string		1402421	0		=			
ANR	1402531	Identifier	zend_new_interned_string		1402421	0					
ANR	1402532	Identifier	orig_new_interned_string		1402421	1					
ANR	1402533	ExpressionStatement	zend_interned_strings_snapshot = orig_interned_strings_snapshot	2806:1:85217:85280	1402421	7	True				
ANR	1402534	AssignmentExpression	zend_interned_strings_snapshot = orig_interned_strings_snapshot		1402421	0		=			
ANR	1402535	Identifier	zend_interned_strings_snapshot		1402421	0					
ANR	1402536	Identifier	orig_interned_strings_snapshot		1402421	1					
ANR	1402537	ExpressionStatement	zend_interned_strings_restore = orig_interned_strings_restore	2807:1:85283:85344	1402421	8	True				
ANR	1402538	AssignmentExpression	zend_interned_strings_restore = orig_interned_strings_restore		1402421	0		=			
ANR	1402539	Identifier	zend_interned_strings_restore		1402421	0					
ANR	1402540	Identifier	orig_interned_strings_restore		1402421	1					
ANR	1402541	ExpressionStatement	file_cache_only = ZCG ( accel_directives ) . file_cache_only	2810:1:85379:85434	1402421	9	True				
ANR	1402542	AssignmentExpression	file_cache_only = ZCG ( accel_directives ) . file_cache_only		1402421	0		=			
ANR	1402543	Identifier	file_cache_only		1402421	0					
ANR	1402544	MemberAccess	ZCG ( accel_directives ) . file_cache_only		1402421	1					
ANR	1402545	CallExpression	ZCG ( accel_directives )		1402421	0					
ANR	1402546	Callee	ZCG		1402421	0					
ANR	1402547	Identifier	ZCG		1402421	0					
ANR	1402548	ArgumentList	accel_directives		1402421	1					
ANR	1402549	Argument	accel_directives		1402421	0					
ANR	1402550	Identifier	accel_directives		1402421	0					
ANR	1402551	Identifier	file_cache_only		1402421	1					
ANR	1402552	ExpressionStatement	accel_free_ts_resources ( )	2813:1:85445:85470	1402421	10	True				
ANR	1402553	CallExpression	accel_free_ts_resources ( )		1402421	0					
ANR	1402554	Callee	accel_free_ts_resources		1402421	0					
ANR	1402555	Identifier	accel_free_ts_resources		1402421	0					
ANR	1402556	ArgumentList			1402421	1					
ANR	1402557	IfStatement	if ( ! file_cache_only )		1402421	11					
ANR	1402558	Condition	! file_cache_only	2815:5:85478:85493	1402421	0	True				
ANR	1402559	UnaryOperationExpression	! file_cache_only		1402421	0					
ANR	1402560	UnaryOperator	!		1402421	0					
ANR	1402561	Identifier	file_cache_only		1402421	1					
ANR	1402562	CompoundStatement		33:23:789:789	1402421	1					
ANR	1402563	ExpressionStatement	zend_shared_alloc_shutdown ( )	2816:2:85500:85528	1402421	0	True				
ANR	1402564	CallExpression	zend_shared_alloc_shutdown ( )		1402421	0					
ANR	1402565	Callee	zend_shared_alloc_shutdown		1402421	0					
ANR	1402566	Identifier	zend_shared_alloc_shutdown		1402421	0					
ANR	1402567	ArgumentList			1402421	1					
ANR	1402568	ExpressionStatement	zend_compile_file = accelerator_orig_compile_file	2818:1:85534:85583	1402421	12	True				
ANR	1402569	AssignmentExpression	zend_compile_file = accelerator_orig_compile_file		1402421	0		=			
ANR	1402570	Identifier	zend_compile_file		1402421	0					
ANR	1402571	Identifier	accelerator_orig_compile_file		1402421	1					
ANR	1402572	IfStatement	"if ( ( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL )"		1402421	13					
ANR	1402573	Condition	"( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL"	2820:5:85591:85696	1402421	0	True				
ANR	1402574	EqualityExpression	"( ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 ) ) != NULL"		1402421	0		!=			
ANR	1402575	AssignmentExpression	"ini_entry = zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 )"		1402421	0		=			
ANR	1402576	Identifier	ini_entry		1402421	0					
ANR	1402577	CallExpression	"zend_hash_str_find_ptr ( EG ( ini_directives ) , ""include_path"" , sizeof ( ""include_path"" ) - 1 )"		1402421	1					
ANR	1402578	Callee	zend_hash_str_find_ptr		1402421	0					
ANR	1402579	Identifier	zend_hash_str_find_ptr		1402421	0					
ANR	1402580	ArgumentList	EG ( ini_directives )		1402421	1					
ANR	1402581	Argument	EG ( ini_directives )		1402421	0					
ANR	1402582	CallExpression	EG ( ini_directives )		1402421	0					
ANR	1402583	Callee	EG		1402421	0					
ANR	1402584	Identifier	EG		1402421	0					
ANR	1402585	ArgumentList	ini_directives		1402421	1					
ANR	1402586	Argument	ini_directives		1402421	0					
ANR	1402587	Identifier	ini_directives		1402421	0					
ANR	1402588	Argument	"""include_path"""		1402421	1					
ANR	1402589	PrimaryExpression	"""include_path"""		1402421	0					
ANR	1402590	Argument	"sizeof ( ""include_path"" ) - 1"		1402421	2					
ANR	1402591	AdditiveExpression	"sizeof ( ""include_path"" ) - 1"		1402421	0		-			
ANR	1402592	SizeofExpression	"sizeof ( ""include_path"" )"		1402421	0					
ANR	1402593	Sizeof	sizeof		1402421	0					
ANR	1402594	PrimaryExpression	"""include_path"""		1402421	1					
ANR	1402595	PrimaryExpression	1		1402421	1					
ANR	1402596	Identifier	NULL		1402421	1					
ANR	1402597	CompoundStatement		38:113:992:992	1402421	1					
ANR	1402598	ExpressionStatement	ini_entry -> on_modify = orig_include_path_on_modify	2821:2:85703:85753	1402421	0	True				
ANR	1402599	AssignmentExpression	ini_entry -> on_modify = orig_include_path_on_modify		1402421	0		=			
ANR	1402600	PtrMemberAccess	ini_entry -> on_modify		1402421	0					
ANR	1402601	Identifier	ini_entry		1402421	0					
ANR	1402602	Identifier	on_modify		1402421	1					
ANR	1402603	Identifier	orig_include_path_on_modify		1402421	1					
ANR	1402604	ReturnType	void		1402421	1					
ANR	1402605	Identifier	accel_shutdown		1402421	2					
ANR	1402606	ParameterList			1402421	3					
ANR	1402607	CFGEntryNode	ENTRY		1402421		True				
ANR	1402608	CFGExitNode	EXIT		1402421		True				
ANR	1402609	Symbol	accel_startup_ok		1402421						
ANR	1402610	Symbol	& accel_blacklist		1402421						
ANR	1402611	Symbol	orig_interned_strings_snapshot		1402421						
ANR	1402612	Symbol	accelerator_orig_compile_file		1402421						
ANR	1402613	Symbol	enabled		1402421						
ANR	1402614	Symbol	zend_constants		1402421						
ANR	1402615	Symbol	zend_interned_strings_restore		1402421						
ANR	1402616	Symbol	zend_hash_str_find_ptr		1402421						
ANR	1402617	Symbol	class_table		1402421						
ANR	1402618	Symbol	orig_interned_strings_restore		1402421						
ANR	1402619	Symbol	ini_directives		1402421						
ANR	1402620	Symbol	EG		1402421						
ANR	1402621	Symbol	NULL		1402421						
ANR	1402622	Symbol	CG		1402421						
ANR	1402623	Symbol	ini_entry -> on_modify		1402421						
ANR	1402624	Symbol	zend_interned_strings_snapshot		1402421						
ANR	1402625	Symbol	auto_globals		1402421						
ANR	1402626	Symbol	orig_new_interned_string		1402421						
ANR	1402627	Symbol	* ini_entry		1402421						
ANR	1402628	Symbol	zend_new_interned_string		1402421						
ANR	1402629	Symbol	file_cache_only		1402421						
ANR	1402630	Symbol	ini_entry		1402421						
ANR	1402631	Symbol	ZCG ( accel_directives ) . interned_strings_buffer		1402421						
ANR	1402632	Symbol	zend_compile_file		1402421						
ANR	1402633	Symbol	orig_include_path_on_modify		1402421						
ANR	1402634	Symbol	function_table		1402421						
ANR	1402635	Symbol	ZCG ( accel_directives ) . file_cache_only		1402421						
ANR	1402636	Symbol	accel_directives		1402421						
ANR	1402637	Symbol	ZCG		1402421						
ANR	1402638	Function	zend_accel_schedule_restart	2825:0:85761:86347							
ANR	1402639	FunctionDef	zend_accel_schedule_restart (zend_accel_restart_reason reason)		1402638	0					
ANR	1402640	CompoundStatement		2826:0:85828:86347	1402638	0					
ANR	1402641	IfStatement	if ( ZCSG ( restart_pending ) )		1402638	0					
ANR	1402642	Condition	ZCSG ( restart_pending )	2827:5:85835:85855	1402638	0	True				
ANR	1402643	CallExpression	ZCSG ( restart_pending )		1402638	0					
ANR	1402644	Callee	ZCSG		1402638	0					
ANR	1402645	Identifier	ZCSG		1402638	0					
ANR	1402646	ArgumentList	restart_pending		1402638	1					
ANR	1402647	Argument	restart_pending		1402638	0					
ANR	1402648	Identifier	restart_pending		1402638	0					
ANR	1402649	CompoundStatement		2:28:29:29	1402638	1					
ANR	1402650	ReturnStatement	return ;	2829:2:85891:85897	1402638	0	True				
ANR	1402651	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_DEBUG , ""Restart Scheduled!"" )"	2831:1:85903:85958	1402638	1	True				
ANR	1402652	CallExpression	"zend_accel_error ( ACCEL_LOG_DEBUG , ""Restart Scheduled!"" )"		1402638	0					
ANR	1402653	Callee	zend_accel_error		1402638	0					
ANR	1402654	Identifier	zend_accel_error		1402638	0					
ANR	1402655	ArgumentList	ACCEL_LOG_DEBUG		1402638	1					
ANR	1402656	Argument	ACCEL_LOG_DEBUG		1402638	0					
ANR	1402657	Identifier	ACCEL_LOG_DEBUG		1402638	0					
ANR	1402658	Argument	"""Restart Scheduled!"""		1402638	1					
ANR	1402659	PrimaryExpression	"""Restart Scheduled!"""		1402638	0					
ANR	1402660	ExpressionStatement	SHM_UNPROTECT ( )	2833:1:85962:85977	1402638	2	True				
ANR	1402661	CallExpression	SHM_UNPROTECT ( )		1402638	0					
ANR	1402662	Callee	SHM_UNPROTECT		1402638	0					
ANR	1402663	Identifier	SHM_UNPROTECT		1402638	0					
ANR	1402664	ArgumentList			1402638	1					
ANR	1402665	ExpressionStatement	ZCSG ( restart_pending ) = 1	2834:1:85980:86005	1402638	3	True				
ANR	1402666	AssignmentExpression	ZCSG ( restart_pending ) = 1		1402638	0		=			
ANR	1402667	CallExpression	ZCSG ( restart_pending )		1402638	0					
ANR	1402668	Callee	ZCSG		1402638	0					
ANR	1402669	Identifier	ZCSG		1402638	0					
ANR	1402670	ArgumentList	restart_pending		1402638	1					
ANR	1402671	Argument	restart_pending		1402638	0					
ANR	1402672	Identifier	restart_pending		1402638	0					
ANR	1402673	PrimaryExpression	1		1402638	1					
ANR	1402674	ExpressionStatement	ZCSG ( restart_reason ) = reason	2835:1:86008:86037	1402638	4	True				
ANR	1402675	AssignmentExpression	ZCSG ( restart_reason ) = reason		1402638	0		=			
ANR	1402676	CallExpression	ZCSG ( restart_reason )		1402638	0					
ANR	1402677	Callee	ZCSG		1402638	0					
ANR	1402678	Identifier	ZCSG		1402638	0					
ANR	1402679	ArgumentList	restart_reason		1402638	1					
ANR	1402680	Argument	restart_reason		1402638	0					
ANR	1402681	Identifier	restart_reason		1402638	0					
ANR	1402682	Identifier	reason		1402638	1					
ANR	1402683	ExpressionStatement	ZCSG ( cache_status_before_restart ) = ZCSG ( accelerator_enabled )	2836:1:86040:86101	1402638	5	True				
ANR	1402684	AssignmentExpression	ZCSG ( cache_status_before_restart ) = ZCSG ( accelerator_enabled )		1402638	0		=			
ANR	1402685	CallExpression	ZCSG ( cache_status_before_restart )		1402638	0					
ANR	1402686	Callee	ZCSG		1402638	0					
ANR	1402687	Identifier	ZCSG		1402638	0					
ANR	1402688	ArgumentList	cache_status_before_restart		1402638	1					
ANR	1402689	Argument	cache_status_before_restart		1402638	0					
ANR	1402690	Identifier	cache_status_before_restart		1402638	0					
ANR	1402691	CallExpression	ZCSG ( accelerator_enabled )		1402638	1					
ANR	1402692	Callee	ZCSG		1402638	0					
ANR	1402693	Identifier	ZCSG		1402638	0					
ANR	1402694	ArgumentList	accelerator_enabled		1402638	1					
ANR	1402695	Argument	accelerator_enabled		1402638	0					
ANR	1402696	Identifier	accelerator_enabled		1402638	0					
ANR	1402697	ExpressionStatement	ZCSG ( accelerator_enabled ) = 0	2837:1:86104:86133	1402638	6	True				
ANR	1402698	AssignmentExpression	ZCSG ( accelerator_enabled ) = 0		1402638	0		=			
ANR	1402699	CallExpression	ZCSG ( accelerator_enabled )		1402638	0					
ANR	1402700	Callee	ZCSG		1402638	0					
ANR	1402701	Identifier	ZCSG		1402638	0					
ANR	1402702	ArgumentList	accelerator_enabled		1402638	1					
ANR	1402703	Argument	accelerator_enabled		1402638	0					
ANR	1402704	Identifier	accelerator_enabled		1402638	0					
ANR	1402705	PrimaryExpression	0		1402638	1					
ANR	1402706	IfStatement	if ( ZCG ( accel_directives ) . force_restart_timeout )		1402638	7					
ANR	1402707	Condition	ZCG ( accel_directives ) . force_restart_timeout	2839:5:86141:86183	1402638	0	True				
ANR	1402708	MemberAccess	ZCG ( accel_directives ) . force_restart_timeout		1402638	0					
ANR	1402709	CallExpression	ZCG ( accel_directives )		1402638	0					
ANR	1402710	Callee	ZCG		1402638	0					
ANR	1402711	Identifier	ZCG		1402638	0					
ANR	1402712	ArgumentList	accel_directives		1402638	1					
ANR	1402713	Argument	accel_directives		1402638	0					
ANR	1402714	Identifier	accel_directives		1402638	0					
ANR	1402715	Identifier	force_restart_timeout		1402638	1					
ANR	1402716	CompoundStatement		14:50:357:357	1402638	1					
ANR	1402717	ExpressionStatement	ZCSG ( force_restart_time ) = zend_accel_get_time ( ) + ZCG ( accel_directives ) . force_restart_timeout	2840:2:86190:86284	1402638	0	True				
ANR	1402718	AssignmentExpression	ZCSG ( force_restart_time ) = zend_accel_get_time ( ) + ZCG ( accel_directives ) . force_restart_timeout		1402638	0		=			
ANR	1402719	CallExpression	ZCSG ( force_restart_time )		1402638	0					
ANR	1402720	Callee	ZCSG		1402638	0					
ANR	1402721	Identifier	ZCSG		1402638	0					
ANR	1402722	ArgumentList	force_restart_time		1402638	1					
ANR	1402723	Argument	force_restart_time		1402638	0					
ANR	1402724	Identifier	force_restart_time		1402638	0					
ANR	1402725	AdditiveExpression	zend_accel_get_time ( ) + ZCG ( accel_directives ) . force_restart_timeout		1402638	1		+			
ANR	1402726	CallExpression	zend_accel_get_time ( )		1402638	0					
ANR	1402727	Callee	zend_accel_get_time		1402638	0					
ANR	1402728	Identifier	zend_accel_get_time		1402638	0					
ANR	1402729	ArgumentList			1402638	1					
ANR	1402730	MemberAccess	ZCG ( accel_directives ) . force_restart_timeout		1402638	1					
ANR	1402731	CallExpression	ZCG ( accel_directives )		1402638	0					
ANR	1402732	Callee	ZCG		1402638	0					
ANR	1402733	Identifier	ZCG		1402638	0					
ANR	1402734	ArgumentList	accel_directives		1402638	1					
ANR	1402735	Argument	accel_directives		1402638	0					
ANR	1402736	Identifier	accel_directives		1402638	0					
ANR	1402737	Identifier	force_restart_timeout		1402638	1					
ANR	1402738	ElseStatement	else		1402638	0					
ANR	1402739	CompoundStatement		16:8:465:465	1402638	0					
ANR	1402740	ExpressionStatement	ZCSG ( force_restart_time ) = 0	2842:2:86298:86326	1402638	0	True				
ANR	1402741	AssignmentExpression	ZCSG ( force_restart_time ) = 0		1402638	0		=			
ANR	1402742	CallExpression	ZCSG ( force_restart_time )		1402638	0					
ANR	1402743	Callee	ZCSG		1402638	0					
ANR	1402744	Identifier	ZCSG		1402638	0					
ANR	1402745	ArgumentList	force_restart_time		1402638	1					
ANR	1402746	Argument	force_restart_time		1402638	0					
ANR	1402747	Identifier	force_restart_time		1402638	0					
ANR	1402748	PrimaryExpression	0		1402638	1					
ANR	1402749	ExpressionStatement	SHM_PROTECT ( )	2844:1:86332:86345	1402638	8	True				
ANR	1402750	CallExpression	SHM_PROTECT ( )		1402638	0					
ANR	1402751	Callee	SHM_PROTECT		1402638	0					
ANR	1402752	Identifier	SHM_PROTECT		1402638	0					
ANR	1402753	ArgumentList			1402638	1					
ANR	1402754	ReturnType	void		1402638	1					
ANR	1402755	Identifier	zend_accel_schedule_restart		1402638	2					
ANR	1402756	ParameterList	zend_accel_restart_reason reason		1402638	3					
ANR	1402757	Parameter	zend_accel_restart_reason reason	2825:33:85794:85825	1402638	0	True				
ANR	1402758	ParameterType	zend_accel_restart_reason		1402638	0					
ANR	1402759	Identifier	reason		1402638	1					
ANR	1402760	CFGEntryNode	ENTRY		1402638		True				
ANR	1402761	CFGExitNode	EXIT		1402638		True				
ANR	1402762	Symbol	reason		1402638						
ANR	1402763	Symbol	zend_accel_get_time		1402638						
ANR	1402764	Symbol	ZCSG		1402638						
ANR	1402765	Symbol	ACCEL_LOG_DEBUG		1402638						
ANR	1402766	Symbol	restart_pending		1402638						
ANR	1402767	Symbol	cache_status_before_restart		1402638						
ANR	1402768	Symbol	ZCG ( accel_directives ) . force_restart_timeout		1402638						
ANR	1402769	Symbol	force_restart_time		1402638						
ANR	1402770	Symbol	restart_reason		1402638						
ANR	1402771	Symbol	accel_directives		1402638						
ANR	1402772	Symbol	accelerator_enabled		1402638						
ANR	1402773	Symbol	ZCG		1402638						
ANR	1402774	Function	accelerator_shm_read_lock	2859:0:86773:87416							
ANR	1402775	FunctionDef	accelerator_shm_read_lock ()		1402774	0					
ANR	1402776	CompoundStatement		2860:0:86809:87416	1402774	0					
ANR	1402777	IfStatement	if ( ZCG ( counted ) )		1402774	0					
ANR	1402778	Condition	ZCG ( counted )	2861:5:86816:86827	1402774	0	True				
ANR	1402779	CallExpression	ZCG ( counted )		1402774	0					
ANR	1402780	Callee	ZCG		1402774	0					
ANR	1402781	Identifier	ZCG		1402774	0					
ANR	1402782	ArgumentList	counted		1402774	1					
ANR	1402783	Argument	counted		1402774	0					
ANR	1402784	Identifier	counted		1402774	0					
ANR	1402785	CompoundStatement		2:19:20:20	1402774	1					
ANR	1402786	ReturnStatement	return SUCCESS ;	2863:2:86921:86935	1402774	0	True				
ANR	1402787	Identifier	SUCCESS		1402774	0					
ANR	1402788	ElseStatement	else		1402774	0					
ANR	1402789	CompoundStatement		5:8:135:135	1402774	0					
ANR	1402790	ExpressionStatement	accel_activate_add ( )	2867:2:87071:87091	1402774	0	True				
ANR	1402791	CallExpression	accel_activate_add ( )		1402774	0					
ANR	1402792	Callee	accel_activate_add		1402774	0					
ANR	1402793	Identifier	accel_activate_add		1402774	0					
ANR	1402794	ArgumentList			1402774	1					
ANR	1402795	IfStatement	if ( ZCSG ( restart_in_progress ) )		1402774	1					
ANR	1402796	Condition	ZCSG ( restart_in_progress )	2869:6:87217:87241	1402774	0	True				
ANR	1402797	CallExpression	ZCSG ( restart_in_progress )		1402774	0					
ANR	1402798	Callee	ZCSG		1402774	0					
ANR	1402799	Identifier	ZCSG		1402774	0					
ANR	1402800	ArgumentList	restart_in_progress		1402774	1					
ANR	1402801	Argument	restart_in_progress		1402774	0					
ANR	1402802	Identifier	restart_in_progress		1402774	0					
ANR	1402803	CompoundStatement		10:33:434:434	1402774	1					
ANR	1402804	ExpressionStatement	accel_deactivate_now ( )	2871:3:87327:87349	1402774	0	True				
ANR	1402805	CallExpression	accel_deactivate_now ( )		1402774	0					
ANR	1402806	Callee	accel_deactivate_now		1402774	0					
ANR	1402807	Identifier	accel_deactivate_now		1402774	0					
ANR	1402808	ArgumentList			1402774	1					
ANR	1402809	ReturnStatement	return FAILURE ;	2872:3:87376:87390	1402774	1	True				
ANR	1402810	Identifier	FAILURE		1402774	0					
ANR	1402811	ReturnStatement	return SUCCESS ;	2875:1:87400:87414	1402774	1	True				
ANR	1402812	Identifier	SUCCESS		1402774	0					
ANR	1402813	ReturnType	int		1402774	1					
ANR	1402814	Identifier	accelerator_shm_read_lock		1402774	2					
ANR	1402815	ParameterList			1402774	3					
ANR	1402816	CFGEntryNode	ENTRY		1402774		True				
ANR	1402817	CFGExitNode	EXIT		1402774		True				
ANR	1402818	Symbol	SUCCESS		1402774						
ANR	1402819	Symbol	ZCSG		1402774						
ANR	1402820	Symbol	counted		1402774						
ANR	1402821	Symbol	restart_in_progress		1402774						
ANR	1402822	Symbol	FAILURE		1402774						
ANR	1402823	Symbol	ZCG		1402774						
ANR	1402824	Function	accelerator_shm_read_unlock	2879:0:87488:87661							
ANR	1402825	FunctionDef	accelerator_shm_read_unlock ()		1402824	0					
ANR	1402826	CompoundStatement		2880:0:87527:87661	1402824	0					
ANR	1402827	IfStatement	if ( ! ZCG ( counted ) )		1402824	0					
ANR	1402828	Condition	! ZCG ( counted )	2881:5:87534:87546	1402824	0	True				
ANR	1402829	UnaryOperationExpression	! ZCG ( counted )		1402824	0					
ANR	1402830	UnaryOperator	!		1402824	0					
ANR	1402831	CallExpression	ZCG ( counted )		1402824	1					
ANR	1402832	Callee	ZCG		1402824	0					
ANR	1402833	Identifier	ZCG		1402824	0					
ANR	1402834	ArgumentList	counted		1402824	1					
ANR	1402835	Argument	counted		1402824	0					
ANR	1402836	Identifier	counted		1402824	0					
ANR	1402837	CompoundStatement		2:20:21:21	1402824	1					
ANR	1402838	ExpressionStatement	accel_deactivate_now ( )	2883:2:87634:87656	1402824	0	True				
ANR	1402839	CallExpression	accel_deactivate_now ( )		1402824	0					
ANR	1402840	Callee	accel_deactivate_now		1402824	0					
ANR	1402841	Identifier	accel_deactivate_now		1402824	0					
ANR	1402842	ArgumentList			1402824	1					
ANR	1402843	ReturnType	void		1402824	1					
ANR	1402844	Identifier	accelerator_shm_read_unlock		1402824	2					
ANR	1402845	ParameterList			1402824	3					
ANR	1402846	CFGEntryNode	ENTRY		1402824		True				
ANR	1402847	CFGExitNode	EXIT		1402824		True				
ANR	1402848	Symbol	counted		1402824						
ANR	1402849	Symbol	ZCG		1402824						
ANR	1402850	DeclStmt									
ANR	1402851	Decl							ZEND_EXT_API zend_extension	ZEND_EXT_API zend_extension	zend_extension_entry
