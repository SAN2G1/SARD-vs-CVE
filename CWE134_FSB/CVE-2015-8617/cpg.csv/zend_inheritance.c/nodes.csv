command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4038731	File	data/converged/CVE-2015-8617_php-src/zend_inheritance.c								
ANR	4038732	Function	overriden_ptr_dtor	28:0:1404:1506							
ANR	4038733	FunctionDef	overriden_ptr_dtor (zval * zv)		4038732	0					
ANR	4038734	CompoundStatement		29:0:1455:1506	4038732	0					
ANR	4038735	ExpressionStatement	"efree_size ( Z_PTR_P ( zv ) , sizeof ( zend_function ) )"	30:1:1458:1504	4038732	0	True				
ANR	4038736	CallExpression	"efree_size ( Z_PTR_P ( zv ) , sizeof ( zend_function ) )"		4038732	0					
ANR	4038737	Callee	efree_size		4038732	0					
ANR	4038738	Identifier	efree_size		4038732	0					
ANR	4038739	ArgumentList	Z_PTR_P ( zv )		4038732	1					
ANR	4038740	Argument	Z_PTR_P ( zv )		4038732	0					
ANR	4038741	CallExpression	Z_PTR_P ( zv )		4038732	0					
ANR	4038742	Callee	Z_PTR_P		4038732	0					
ANR	4038743	Identifier	Z_PTR_P		4038732	0					
ANR	4038744	ArgumentList	zv		4038732	1					
ANR	4038745	Argument	zv		4038732	0					
ANR	4038746	Identifier	zv		4038732	0					
ANR	4038747	Argument	sizeof ( zend_function )		4038732	1					
ANR	4038748	SizeofExpression	sizeof ( zend_function )		4038732	0					
ANR	4038749	Sizeof	sizeof		4038732	0					
ANR	4038750	SizeofOperand	zend_function		4038732	1					
ANR	4038751	ReturnType	static void		4038732	1					
ANR	4038752	Identifier	overriden_ptr_dtor		4038732	2					
ANR	4038753	ParameterList	zval * zv		4038732	3					
ANR	4038754	Parameter	zval * zv	28:31:1435:1442	4038732	0	True				
ANR	4038755	ParameterType	zval *		4038732	0					
ANR	4038756	Identifier	zv		4038732	1					
ANR	4038757	CFGEntryNode	ENTRY		4038732		True				
ANR	4038758	CFGExitNode	EXIT		4038732		True				
ANR	4038759	Symbol	Z_PTR_P		4038732						
ANR	4038760	Symbol	zv		4038732						
ANR	4038761	Function	zend_duplicate_property_info	34:0:1519:1982							
ANR	4038762	FunctionDef	zend_duplicate_property_info (zend_property_info * property_info)		4038761	0					
ANR	4038763	CompoundStatement		35:0:1620:1982	4038761	0					
ANR	4038764	IdentifierDeclStatement	zend_property_info * new_property_info ;	36:1:1623:1660	4038761	0	True				
ANR	4038765	IdentifierDecl	* new_property_info		4038761	0					
ANR	4038766	IdentifierDeclType	zend_property_info *		4038761	0					
ANR	4038767	Identifier	new_property_info		4038761	1					
ANR	4038768	ExpressionStatement	"new_property_info = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_property_info ) )"	38:1:1664:1740	4038761	1	True				
ANR	4038769	AssignmentExpression	"new_property_info = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_property_info ) )"		4038761	0		=			
ANR	4038770	Identifier	new_property_info		4038761	0					
ANR	4038771	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_property_info ) )"		4038761	1					
ANR	4038772	Callee	zend_arena_alloc		4038761	0					
ANR	4038773	Identifier	zend_arena_alloc		4038761	0					
ANR	4038774	ArgumentList	& CG ( arena )		4038761	1					
ANR	4038775	Argument	& CG ( arena )		4038761	0					
ANR	4038776	UnaryOperationExpression	& CG ( arena )		4038761	0					
ANR	4038777	UnaryOperator	&		4038761	0					
ANR	4038778	CallExpression	CG ( arena )		4038761	1					
ANR	4038779	Callee	CG		4038761	0					
ANR	4038780	Identifier	CG		4038761	0					
ANR	4038781	ArgumentList	arena		4038761	1					
ANR	4038782	Argument	arena		4038761	0					
ANR	4038783	Identifier	arena		4038761	0					
ANR	4038784	Argument	sizeof ( zend_property_info )		4038761	1					
ANR	4038785	SizeofExpression	sizeof ( zend_property_info )		4038761	0					
ANR	4038786	Sizeof	sizeof		4038761	0					
ANR	4038787	SizeofOperand	zend_property_info		4038761	1					
ANR	4038788	ExpressionStatement	"memcpy ( new_property_info , property_info , sizeof ( zend_property_info ) )"	39:1:1743:1811	4038761	2	True				
ANR	4038789	CallExpression	"memcpy ( new_property_info , property_info , sizeof ( zend_property_info ) )"		4038761	0					
ANR	4038790	Callee	memcpy		4038761	0					
ANR	4038791	Identifier	memcpy		4038761	0					
ANR	4038792	ArgumentList	new_property_info		4038761	1					
ANR	4038793	Argument	new_property_info		4038761	0					
ANR	4038794	Identifier	new_property_info		4038761	0					
ANR	4038795	Argument	property_info		4038761	1					
ANR	4038796	Identifier	property_info		4038761	0					
ANR	4038797	Argument	sizeof ( zend_property_info )		4038761	2					
ANR	4038798	SizeofExpression	sizeof ( zend_property_info )		4038761	0					
ANR	4038799	Sizeof	sizeof		4038761	0					
ANR	4038800	SizeofOperand	zend_property_info		4038761	1					
ANR	4038801	ExpressionStatement	zend_string_addref ( new_property_info -> name )	40:1:1814:1857	4038761	3	True				
ANR	4038802	CallExpression	zend_string_addref ( new_property_info -> name )		4038761	0					
ANR	4038803	Callee	zend_string_addref		4038761	0					
ANR	4038804	Identifier	zend_string_addref		4038761	0					
ANR	4038805	ArgumentList	new_property_info -> name		4038761	1					
ANR	4038806	Argument	new_property_info -> name		4038761	0					
ANR	4038807	PtrMemberAccess	new_property_info -> name		4038761	0					
ANR	4038808	Identifier	new_property_info		4038761	0					
ANR	4038809	Identifier	name		4038761	1					
ANR	4038810	IfStatement	if ( new_property_info -> doc_comment )		4038761	4					
ANR	4038811	Condition	new_property_info -> doc_comment	41:5:1864:1893	4038761	0	True				
ANR	4038812	PtrMemberAccess	new_property_info -> doc_comment		4038761	0					
ANR	4038813	Identifier	new_property_info		4038761	0					
ANR	4038814	Identifier	doc_comment		4038761	1					
ANR	4038815	CompoundStatement		7:37:275:275	4038761	1					
ANR	4038816	ExpressionStatement	zend_string_addref ( new_property_info -> doc_comment )	42:2:1900:1950	4038761	0	True				
ANR	4038817	CallExpression	zend_string_addref ( new_property_info -> doc_comment )		4038761	0					
ANR	4038818	Callee	zend_string_addref		4038761	0					
ANR	4038819	Identifier	zend_string_addref		4038761	0					
ANR	4038820	ArgumentList	new_property_info -> doc_comment		4038761	1					
ANR	4038821	Argument	new_property_info -> doc_comment		4038761	0					
ANR	4038822	PtrMemberAccess	new_property_info -> doc_comment		4038761	0					
ANR	4038823	Identifier	new_property_info		4038761	0					
ANR	4038824	Identifier	doc_comment		4038761	1					
ANR	4038825	ReturnStatement	return new_property_info ;	44:1:1956:1980	4038761	5	True				
ANR	4038826	Identifier	new_property_info		4038761	0					
ANR	4038827	ReturnType	static zend_property_info *		4038761	1					
ANR	4038828	Identifier	zend_duplicate_property_info		4038761	2					
ANR	4038829	ParameterList	zend_property_info * property_info		4038761	3					
ANR	4038830	Parameter	zend_property_info * property_info	34:56:1575:1607	4038761	0	True				
ANR	4038831	ParameterType	zend_property_info *		4038761	0					
ANR	4038832	Identifier	property_info		4038761	1					
ANR	4038833	CFGEntryNode	ENTRY		4038761		True				
ANR	4038834	CFGExitNode	EXIT		4038761		True				
ANR	4038835	Symbol	property_info		4038761						
ANR	4038836	Symbol	zend_arena_alloc		4038761						
ANR	4038837	Symbol	new_property_info		4038761						
ANR	4038838	Symbol	arena		4038761						
ANR	4038839	Symbol	new_property_info -> name		4038761						
ANR	4038840	Symbol	* new_property_info		4038761						
ANR	4038841	Symbol	& CG		4038761						
ANR	4038842	Symbol	new_property_info -> doc_comment		4038761						
ANR	4038843	Function	zend_duplicate_property_info_internal	48:0:1995:2333							
ANR	4038844	FunctionDef	zend_duplicate_property_info_internal (zend_property_info * property_info)		4038843	0					
ANR	4038845	CompoundStatement		49:0:2105:2333	4038843	0					
ANR	4038846	IdentifierDeclStatement	"zend_property_info * new_property_info = pemalloc ( sizeof ( zend_property_info ) , 1 ) ;"	50:1:2108:2187	4038843	0	True				
ANR	4038847	IdentifierDecl	"* new_property_info = pemalloc ( sizeof ( zend_property_info ) , 1 )"		4038843	0					
ANR	4038848	IdentifierDeclType	zend_property_info *		4038843	0					
ANR	4038849	Identifier	new_property_info		4038843	1					
ANR	4038850	AssignmentExpression	"* new_property_info = pemalloc ( sizeof ( zend_property_info ) , 1 )"		4038843	2		=			
ANR	4038851	Identifier	new_property_info		4038843	0					
ANR	4038852	CallExpression	"pemalloc ( sizeof ( zend_property_info ) , 1 )"		4038843	1					
ANR	4038853	Callee	pemalloc		4038843	0					
ANR	4038854	Identifier	pemalloc		4038843	0					
ANR	4038855	ArgumentList	sizeof ( zend_property_info )		4038843	1					
ANR	4038856	Argument	sizeof ( zend_property_info )		4038843	0					
ANR	4038857	SizeofExpression	sizeof ( zend_property_info )		4038843	0					
ANR	4038858	Sizeof	sizeof		4038843	0					
ANR	4038859	SizeofOperand	zend_property_info		4038843	1					
ANR	4038860	Argument	1		4038843	1					
ANR	4038861	PrimaryExpression	1		4038843	0					
ANR	4038862	ExpressionStatement	"memcpy ( new_property_info , property_info , sizeof ( zend_property_info ) )"	51:1:2190:2258	4038843	1	True				
ANR	4038863	CallExpression	"memcpy ( new_property_info , property_info , sizeof ( zend_property_info ) )"		4038843	0					
ANR	4038864	Callee	memcpy		4038843	0					
ANR	4038865	Identifier	memcpy		4038843	0					
ANR	4038866	ArgumentList	new_property_info		4038843	1					
ANR	4038867	Argument	new_property_info		4038843	0					
ANR	4038868	Identifier	new_property_info		4038843	0					
ANR	4038869	Argument	property_info		4038843	1					
ANR	4038870	Identifier	property_info		4038843	0					
ANR	4038871	Argument	sizeof ( zend_property_info )		4038843	2					
ANR	4038872	SizeofExpression	sizeof ( zend_property_info )		4038843	0					
ANR	4038873	Sizeof	sizeof		4038843	0					
ANR	4038874	SizeofOperand	zend_property_info		4038843	1					
ANR	4038875	ExpressionStatement	zend_string_addref ( new_property_info -> name )	52:1:2261:2304	4038843	2	True				
ANR	4038876	CallExpression	zend_string_addref ( new_property_info -> name )		4038843	0					
ANR	4038877	Callee	zend_string_addref		4038843	0					
ANR	4038878	Identifier	zend_string_addref		4038843	0					
ANR	4038879	ArgumentList	new_property_info -> name		4038843	1					
ANR	4038880	Argument	new_property_info -> name		4038843	0					
ANR	4038881	PtrMemberAccess	new_property_info -> name		4038843	0					
ANR	4038882	Identifier	new_property_info		4038843	0					
ANR	4038883	Identifier	name		4038843	1					
ANR	4038884	ReturnStatement	return new_property_info ;	53:1:2307:2331	4038843	3	True				
ANR	4038885	Identifier	new_property_info		4038843	0					
ANR	4038886	ReturnType	static zend_property_info *		4038843	1					
ANR	4038887	Identifier	zend_duplicate_property_info_internal		4038843	2					
ANR	4038888	ParameterList	zend_property_info * property_info		4038843	3					
ANR	4038889	Parameter	zend_property_info * property_info	48:65:2060:2092	4038843	0	True				
ANR	4038890	ParameterType	zend_property_info *		4038843	0					
ANR	4038891	Identifier	property_info		4038843	1					
ANR	4038892	CFGEntryNode	ENTRY		4038843		True				
ANR	4038893	CFGExitNode	EXIT		4038843		True				
ANR	4038894	Symbol	property_info		4038843						
ANR	4038895	Symbol	new_property_info		4038843						
ANR	4038896	Symbol	new_property_info -> name		4038843						
ANR	4038897	Symbol	* new_property_info		4038843						
ANR	4038898	Symbol	pemalloc		4038843						
ANR	4038899	Function	zend_duplicate_function	57:0:2346:3523							
ANR	4038900	FunctionDef	"zend_duplicate_function (zend_function * func , zend_class_entry * ce)"		4038899	0					
ANR	4038901	CompoundStatement		58:0:2445:3523	4038899	0					
ANR	4038902	IdentifierDeclStatement	zend_function * new_function ;	59:1:2448:2475	4038899	0	True				
ANR	4038903	IdentifierDecl	* new_function		4038899	0					
ANR	4038904	IdentifierDeclType	zend_function *		4038899	0					
ANR	4038905	Identifier	new_function		4038899	1					
ANR	4038906	IfStatement	if ( UNEXPECTED ( func -> type == ZEND_INTERNAL_FUNCTION ) )		4038899	1					
ANR	4038907	Condition	UNEXPECTED ( func -> type == ZEND_INTERNAL_FUNCTION )	61:5:2483:2530	4038899	0	True				
ANR	4038908	CallExpression	UNEXPECTED ( func -> type == ZEND_INTERNAL_FUNCTION )		4038899	0					
ANR	4038909	Callee	UNEXPECTED		4038899	0					
ANR	4038910	Identifier	UNEXPECTED		4038899	0					
ANR	4038911	ArgumentList	func -> type == ZEND_INTERNAL_FUNCTION		4038899	1					
ANR	4038912	Argument	func -> type == ZEND_INTERNAL_FUNCTION		4038899	0					
ANR	4038913	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		4038899	0		==			
ANR	4038914	PtrMemberAccess	func -> type		4038899	0					
ANR	4038915	Identifier	func		4038899	0					
ANR	4038916	Identifier	type		4038899	1					
ANR	4038917	Identifier	ZEND_INTERNAL_FUNCTION		4038899	1					
ANR	4038918	CompoundStatement		4:55:87:87	4038899	1					
ANR	4038919	IfStatement	if ( UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS ) )		4038899	0					
ANR	4038920	Condition	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )	62:6:2541:2582	4038899	0	True				
ANR	4038921	CallExpression	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )		4038899	0					
ANR	4038922	Callee	UNEXPECTED		4038899	0					
ANR	4038923	Identifier	UNEXPECTED		4038899	0					
ANR	4038924	ArgumentList	ce -> type & ZEND_INTERNAL_CLASS		4038899	1					
ANR	4038925	Argument	ce -> type & ZEND_INTERNAL_CLASS		4038899	0					
ANR	4038926	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		4038899	0		&			
ANR	4038927	PtrMemberAccess	ce -> type		4038899	0					
ANR	4038928	Identifier	ce		4038899	0					
ANR	4038929	Identifier	type		4038899	1					
ANR	4038930	Identifier	ZEND_INTERNAL_CLASS		4038899	1					
ANR	4038931	CompoundStatement		5:50:139:139	4038899	1					
ANR	4038932	ExpressionStatement	"new_function = pemalloc ( sizeof ( zend_internal_function ) , 1 )"	63:3:2590:2648	4038899	0	True				
ANR	4038933	AssignmentExpression	"new_function = pemalloc ( sizeof ( zend_internal_function ) , 1 )"		4038899	0		=			
ANR	4038934	Identifier	new_function		4038899	0					
ANR	4038935	CallExpression	"pemalloc ( sizeof ( zend_internal_function ) , 1 )"		4038899	1					
ANR	4038936	Callee	pemalloc		4038899	0					
ANR	4038937	Identifier	pemalloc		4038899	0					
ANR	4038938	ArgumentList	sizeof ( zend_internal_function )		4038899	1					
ANR	4038939	Argument	sizeof ( zend_internal_function )		4038899	0					
ANR	4038940	SizeofExpression	sizeof ( zend_internal_function )		4038899	0					
ANR	4038941	Sizeof	sizeof		4038899	0					
ANR	4038942	SizeofOperand	zend_internal_function		4038899	1					
ANR	4038943	Argument	1		4038899	1					
ANR	4038944	PrimaryExpression	1		4038899	0					
ANR	4038945	ExpressionStatement	"memcpy ( new_function , func , sizeof ( zend_internal_function ) )"	64:3:2653:2711	4038899	1	True				
ANR	4038946	CallExpression	"memcpy ( new_function , func , sizeof ( zend_internal_function ) )"		4038899	0					
ANR	4038947	Callee	memcpy		4038899	0					
ANR	4038948	Identifier	memcpy		4038899	0					
ANR	4038949	ArgumentList	new_function		4038899	1					
ANR	4038950	Argument	new_function		4038899	0					
ANR	4038951	Identifier	new_function		4038899	0					
ANR	4038952	Argument	func		4038899	1					
ANR	4038953	Identifier	func		4038899	0					
ANR	4038954	Argument	sizeof ( zend_internal_function )		4038899	2					
ANR	4038955	SizeofExpression	sizeof ( zend_internal_function )		4038899	0					
ANR	4038956	Sizeof	sizeof		4038899	0					
ANR	4038957	SizeofOperand	zend_internal_function		4038899	1					
ANR	4038958	ElseStatement	else		4038899	0					
ANR	4038959	CompoundStatement		8:9:276:276	4038899	0					
ANR	4038960	ExpressionStatement	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_internal_function ) )"	66:3:2727:2802	4038899	0	True				
ANR	4038961	AssignmentExpression	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_internal_function ) )"		4038899	0		=			
ANR	4038962	Identifier	new_function		4038899	0					
ANR	4038963	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_internal_function ) )"		4038899	1					
ANR	4038964	Callee	zend_arena_alloc		4038899	0					
ANR	4038965	Identifier	zend_arena_alloc		4038899	0					
ANR	4038966	ArgumentList	& CG ( arena )		4038899	1					
ANR	4038967	Argument	& CG ( arena )		4038899	0					
ANR	4038968	UnaryOperationExpression	& CG ( arena )		4038899	0					
ANR	4038969	UnaryOperator	&		4038899	0					
ANR	4038970	CallExpression	CG ( arena )		4038899	1					
ANR	4038971	Callee	CG		4038899	0					
ANR	4038972	Identifier	CG		4038899	0					
ANR	4038973	ArgumentList	arena		4038899	1					
ANR	4038974	Argument	arena		4038899	0					
ANR	4038975	Identifier	arena		4038899	0					
ANR	4038976	Argument	sizeof ( zend_internal_function )		4038899	1					
ANR	4038977	SizeofExpression	sizeof ( zend_internal_function )		4038899	0					
ANR	4038978	Sizeof	sizeof		4038899	0					
ANR	4038979	SizeofOperand	zend_internal_function		4038899	1					
ANR	4038980	ExpressionStatement	"memcpy ( new_function , func , sizeof ( zend_internal_function ) )"	67:3:2807:2865	4038899	1	True				
ANR	4038981	CallExpression	"memcpy ( new_function , func , sizeof ( zend_internal_function ) )"		4038899	0					
ANR	4038982	Callee	memcpy		4038899	0					
ANR	4038983	Identifier	memcpy		4038899	0					
ANR	4038984	ArgumentList	new_function		4038899	1					
ANR	4038985	Argument	new_function		4038899	0					
ANR	4038986	Identifier	new_function		4038899	0					
ANR	4038987	Argument	func		4038899	1					
ANR	4038988	Identifier	func		4038899	0					
ANR	4038989	Argument	sizeof ( zend_internal_function )		4038899	2					
ANR	4038990	SizeofExpression	sizeof ( zend_internal_function )		4038899	0					
ANR	4038991	Sizeof	sizeof		4038899	0					
ANR	4038992	SizeofOperand	zend_internal_function		4038899	1					
ANR	4038993	ExpressionStatement	new_function -> common . fn_flags |= ZEND_ACC_ARENA_ALLOCATED	68:3:2870:2927	4038899	2	True				
ANR	4038994	AssignmentExpression	new_function -> common . fn_flags |= ZEND_ACC_ARENA_ALLOCATED		4038899	0		|=			
ANR	4038995	MemberAccess	new_function -> common . fn_flags		4038899	0					
ANR	4038996	PtrMemberAccess	new_function -> common		4038899	0					
ANR	4038997	Identifier	new_function		4038899	0					
ANR	4038998	Identifier	common		4038899	1					
ANR	4038999	Identifier	fn_flags		4038899	1					
ANR	4039000	Identifier	ZEND_ACC_ARENA_ALLOCATED		4038899	1					
ANR	4039001	IfStatement	if ( EXPECTED ( new_function -> common . function_name ) )		4038899	1					
ANR	4039002	Condition	EXPECTED ( new_function -> common . function_name )	70:6:2939:2982	4038899	0	True				
ANR	4039003	CallExpression	EXPECTED ( new_function -> common . function_name )		4038899	0					
ANR	4039004	Callee	EXPECTED		4038899	0					
ANR	4039005	Identifier	EXPECTED		4038899	0					
ANR	4039006	ArgumentList	new_function -> common . function_name		4038899	1					
ANR	4039007	Argument	new_function -> common . function_name		4038899	0					
ANR	4039008	MemberAccess	new_function -> common . function_name		4038899	0					
ANR	4039009	PtrMemberAccess	new_function -> common		4038899	0					
ANR	4039010	Identifier	new_function		4038899	0					
ANR	4039011	Identifier	common		4038899	1					
ANR	4039012	Identifier	function_name		4038899	1					
ANR	4039013	CompoundStatement		13:52:539:539	4038899	1					
ANR	4039014	ExpressionStatement	zend_string_addref ( new_function -> common . function_name )	71:3:2990:3044	4038899	0	True				
ANR	4039015	CallExpression	zend_string_addref ( new_function -> common . function_name )		4038899	0					
ANR	4039016	Callee	zend_string_addref		4038899	0					
ANR	4039017	Identifier	zend_string_addref		4038899	0					
ANR	4039018	ArgumentList	new_function -> common . function_name		4038899	1					
ANR	4039019	Argument	new_function -> common . function_name		4038899	0					
ANR	4039020	MemberAccess	new_function -> common . function_name		4038899	0					
ANR	4039021	PtrMemberAccess	new_function -> common		4038899	0					
ANR	4039022	Identifier	new_function		4038899	0					
ANR	4039023	Identifier	common		4038899	1					
ANR	4039024	Identifier	function_name		4038899	1					
ANR	4039025	ElseStatement	else		4038899	0					
ANR	4039026	CompoundStatement		16:8:612:612	4038899	0					
ANR	4039027	IfStatement	if ( func -> op_array . refcount )		4038899	0					
ANR	4039028	Condition	func -> op_array . refcount	74:6:3066:3088	4038899	0	True				
ANR	4039029	MemberAccess	func -> op_array . refcount		4038899	0					
ANR	4039030	PtrMemberAccess	func -> op_array		4038899	0					
ANR	4039031	Identifier	func		4038899	0					
ANR	4039032	Identifier	op_array		4038899	1					
ANR	4039033	Identifier	refcount		4038899	1					
ANR	4039034	CompoundStatement		17:31:645:645	4038899	1					
ANR	4039035	ExpressionStatement	( * func -> op_array . refcount ) ++	75:3:3096:3124	4038899	0	True				
ANR	4039036	PostIncDecOperationExpression	( * func -> op_array . refcount ) ++		4038899	0					
ANR	4039037	UnaryOperationExpression	* func -> op_array . refcount		4038899	0					
ANR	4039038	UnaryOperator	*		4038899	0					
ANR	4039039	MemberAccess	func -> op_array . refcount		4038899	1					
ANR	4039040	PtrMemberAccess	func -> op_array		4038899	0					
ANR	4039041	Identifier	func		4038899	0					
ANR	4039042	Identifier	op_array		4038899	1					
ANR	4039043	Identifier	refcount		4038899	1					
ANR	4039044	IncDec	++		4038899	1					
ANR	4039045	IfStatement	if ( EXPECTED ( ! func -> op_array . static_variables ) )		4038899	1					
ANR	4039046	Condition	EXPECTED ( ! func -> op_array . static_variables )	77:6:3136:3177	4038899	0	True				
ANR	4039047	CallExpression	EXPECTED ( ! func -> op_array . static_variables )		4038899	0					
ANR	4039048	Callee	EXPECTED		4038899	0					
ANR	4039049	Identifier	EXPECTED		4038899	0					
ANR	4039050	ArgumentList	! func -> op_array . static_variables		4038899	1					
ANR	4039051	Argument	! func -> op_array . static_variables		4038899	0					
ANR	4039052	UnaryOperationExpression	! func -> op_array . static_variables		4038899	0					
ANR	4039053	UnaryOperator	!		4038899	0					
ANR	4039054	MemberAccess	func -> op_array . static_variables		4038899	1					
ANR	4039055	PtrMemberAccess	func -> op_array		4038899	0					
ANR	4039056	Identifier	func		4038899	0					
ANR	4039057	Identifier	op_array		4038899	1					
ANR	4039058	Identifier	static_variables		4038899	1					
ANR	4039059	CompoundStatement		20:50:734:734	4038899	1					
ANR	4039060	ReturnStatement	return func ;	79:3:3228:3239	4038899	0	True				
ANR	4039061	Identifier	func		4038899	0					
ANR	4039062	IfStatement	if ( ! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE ) )		4038899	2					
ANR	4039063	Condition	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )	81:6:3251:3315	4038899	0	True				
ANR	4039064	UnaryOperationExpression	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )		4038899	0					
ANR	4039065	UnaryOperator	!		4038899	0					
ANR	4039066	BitAndExpression	GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE		4038899	1		&			
ANR	4039067	CallExpression	GC_FLAGS ( func -> op_array . static_variables )		4038899	0					
ANR	4039068	Callee	GC_FLAGS		4038899	0					
ANR	4039069	Identifier	GC_FLAGS		4038899	0					
ANR	4039070	ArgumentList	func -> op_array . static_variables		4038899	1					
ANR	4039071	Argument	func -> op_array . static_variables		4038899	0					
ANR	4039072	MemberAccess	func -> op_array . static_variables		4038899	0					
ANR	4039073	PtrMemberAccess	func -> op_array		4038899	0					
ANR	4039074	Identifier	func		4038899	0					
ANR	4039075	Identifier	op_array		4038899	1					
ANR	4039076	Identifier	static_variables		4038899	1					
ANR	4039077	Identifier	IS_ARRAY_IMMUTABLE		4038899	1					
ANR	4039078	CompoundStatement		24:73:872:872	4038899	1					
ANR	4039079	ExpressionStatement	GC_REFCOUNT ( func -> op_array . static_variables ) ++	82:3:3323:3369	4038899	0	True				
ANR	4039080	PostIncDecOperationExpression	GC_REFCOUNT ( func -> op_array . static_variables ) ++		4038899	0					
ANR	4039081	CallExpression	GC_REFCOUNT ( func -> op_array . static_variables )		4038899	0					
ANR	4039082	Callee	GC_REFCOUNT		4038899	0					
ANR	4039083	Identifier	GC_REFCOUNT		4038899	0					
ANR	4039084	ArgumentList	func -> op_array . static_variables		4038899	1					
ANR	4039085	Argument	func -> op_array . static_variables		4038899	0					
ANR	4039086	MemberAccess	func -> op_array . static_variables		4038899	0					
ANR	4039087	PtrMemberAccess	func -> op_array		4038899	0					
ANR	4039088	Identifier	func		4038899	0					
ANR	4039089	Identifier	op_array		4038899	1					
ANR	4039090	Identifier	static_variables		4038899	1					
ANR	4039091	IncDec	++		4038899	1					
ANR	4039092	ExpressionStatement	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"	84:2:3377:3443	4038899	3	True				
ANR	4039093	AssignmentExpression	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		4038899	0		=			
ANR	4039094	Identifier	new_function		4038899	0					
ANR	4039095	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		4038899	1					
ANR	4039096	Callee	zend_arena_alloc		4038899	0					
ANR	4039097	Identifier	zend_arena_alloc		4038899	0					
ANR	4039098	ArgumentList	& CG ( arena )		4038899	1					
ANR	4039099	Argument	& CG ( arena )		4038899	0					
ANR	4039100	UnaryOperationExpression	& CG ( arena )		4038899	0					
ANR	4039101	UnaryOperator	&		4038899	0					
ANR	4039102	CallExpression	CG ( arena )		4038899	1					
ANR	4039103	Callee	CG		4038899	0					
ANR	4039104	Identifier	CG		4038899	0					
ANR	4039105	ArgumentList	arena		4038899	1					
ANR	4039106	Argument	arena		4038899	0					
ANR	4039107	Identifier	arena		4038899	0					
ANR	4039108	Argument	sizeof ( zend_op_array )		4038899	1					
ANR	4039109	SizeofExpression	sizeof ( zend_op_array )		4038899	0					
ANR	4039110	Sizeof	sizeof		4038899	0					
ANR	4039111	SizeofOperand	zend_op_array		4038899	1					
ANR	4039112	ExpressionStatement	"memcpy ( new_function , func , sizeof ( zend_op_array ) )"	85:2:3447:3496	4038899	4	True				
ANR	4039113	CallExpression	"memcpy ( new_function , func , sizeof ( zend_op_array ) )"		4038899	0					
ANR	4039114	Callee	memcpy		4038899	0					
ANR	4039115	Identifier	memcpy		4038899	0					
ANR	4039116	ArgumentList	new_function		4038899	1					
ANR	4039117	Argument	new_function		4038899	0					
ANR	4039118	Identifier	new_function		4038899	0					
ANR	4039119	Argument	func		4038899	1					
ANR	4039120	Identifier	func		4038899	0					
ANR	4039121	Argument	sizeof ( zend_op_array )		4038899	2					
ANR	4039122	SizeofExpression	sizeof ( zend_op_array )		4038899	0					
ANR	4039123	Sizeof	sizeof		4038899	0					
ANR	4039124	SizeofOperand	zend_op_array		4038899	1					
ANR	4039125	ReturnStatement	return new_function ;	87:1:3502:3521	4038899	2	True				
ANR	4039126	Identifier	new_function		4038899	0					
ANR	4039127	ReturnType	static zend_function *		4038899	1					
ANR	4039128	Identifier	zend_duplicate_function		4038899	2					
ANR	4039129	ParameterList	"zend_function * func , zend_class_entry * ce"		4038899	3					
ANR	4039130	Parameter	zend_function * func	57:46:2392:2410	4038899	0	True				
ANR	4039131	ParameterType	zend_function *		4038899	0					
ANR	4039132	Identifier	func		4038899	1					
ANR	4039133	Parameter	zend_class_entry * ce	57:67:2413:2432	4038899	1	True				
ANR	4039134	ParameterType	zend_class_entry *		4038899	0					
ANR	4039135	Identifier	ce		4038899	1					
ANR	4039136	CFGEntryNode	ENTRY		4038899		True				
ANR	4039137	CFGExitNode	EXIT		4038899		True				
ANR	4039138	Symbol	ce -> type		4038899						
ANR	4039139	Symbol	ZEND_ACC_ARENA_ALLOCATED		4038899						
ANR	4039140	Symbol	* ce		4038899						
ANR	4039141	Symbol	arena		4038899						
ANR	4039142	Symbol	GC_FLAGS		4038899						
ANR	4039143	Symbol	func -> op_array		4038899						
ANR	4039144	Symbol	& CG		4038899						
ANR	4039145	Symbol	ZEND_INTERNAL_FUNCTION		4038899						
ANR	4039146	Symbol	UNEXPECTED		4038899						
ANR	4039147	Symbol	func -> type		4038899						
ANR	4039148	Symbol	GC_REFCOUNT		4038899						
ANR	4039149	Symbol	ZEND_INTERNAL_CLASS		4038899						
ANR	4039150	Symbol	ce		4038899						
ANR	4039151	Symbol	* func		4038899						
ANR	4039152	Symbol	zend_arena_alloc		4038899						
ANR	4039153	Symbol	* new_function		4038899						
ANR	4039154	Symbol	* * func		4038899						
ANR	4039155	Symbol	* func -> op_array		4038899						
ANR	4039156	Symbol	new_function -> common		4038899						
ANR	4039157	Symbol	IS_ARRAY_IMMUTABLE		4038899						
ANR	4039158	Symbol	new_function		4038899						
ANR	4039159	Symbol	new_function -> common . function_name		4038899						
ANR	4039160	Symbol	func		4038899						
ANR	4039161	Symbol	func -> op_array . refcount		4038899						
ANR	4039162	Symbol	func -> op_array . static_variables		4038899						
ANR	4039163	Symbol	new_function -> common . fn_flags		4038899						
ANR	4039164	Symbol	* func -> op_array . refcount		4038899						
ANR	4039165	Symbol	EXPECTED		4038899						
ANR	4039166	Symbol	pemalloc		4038899						
ANR	4039167	Function	do_inherit_parent_constructor	91:0:3536:5294							
ANR	4039168	FunctionDef	do_inherit_parent_constructor (zend_class_entry * ce)		4039167	0					
ANR	4039169	CompoundStatement		92:0:3610:5294	4039167	0					
ANR	4039170	ExpressionStatement	ZEND_ASSERT ( ce -> parent != NULL )	93:1:3613:3644	4039167	0	True				
ANR	4039171	CallExpression	ZEND_ASSERT ( ce -> parent != NULL )		4039167	0					
ANR	4039172	Callee	ZEND_ASSERT		4039167	0					
ANR	4039173	Identifier	ZEND_ASSERT		4039167	0					
ANR	4039174	ArgumentList	ce -> parent != NULL		4039167	1					
ANR	4039175	Argument	ce -> parent != NULL		4039167	0					
ANR	4039176	EqualityExpression	ce -> parent != NULL		4039167	0		!=			
ANR	4039177	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039178	Identifier	ce		4039167	0					
ANR	4039179	Identifier	parent		4039167	1					
ANR	4039180	Identifier	NULL		4039167	1					
ANR	4039181	ExpressionStatement	ce -> create_object = ce -> parent -> create_object	96:1:3687:3732	4039167	1	True				
ANR	4039182	AssignmentExpression	ce -> create_object = ce -> parent -> create_object		4039167	0		=			
ANR	4039183	PtrMemberAccess	ce -> create_object		4039167	0					
ANR	4039184	Identifier	ce		4039167	0					
ANR	4039185	Identifier	create_object		4039167	1					
ANR	4039186	PtrMemberAccess	ce -> parent -> create_object		4039167	1					
ANR	4039187	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039188	Identifier	ce		4039167	0					
ANR	4039189	Identifier	parent		4039167	1					
ANR	4039190	Identifier	create_object		4039167	1					
ANR	4039191	IfStatement	if ( EXPECTED ( ! ce -> get_iterator ) )		4039167	2					
ANR	4039192	Condition	EXPECTED ( ! ce -> get_iterator )	99:5:3783:3809	4039167	0	True				
ANR	4039193	CallExpression	EXPECTED ( ! ce -> get_iterator )		4039167	0					
ANR	4039194	Callee	EXPECTED		4039167	0					
ANR	4039195	Identifier	EXPECTED		4039167	0					
ANR	4039196	ArgumentList	! ce -> get_iterator		4039167	1					
ANR	4039197	Argument	! ce -> get_iterator		4039167	0					
ANR	4039198	UnaryOperationExpression	! ce -> get_iterator		4039167	0					
ANR	4039199	UnaryOperator	!		4039167	0					
ANR	4039200	PtrMemberAccess	ce -> get_iterator		4039167	1					
ANR	4039201	Identifier	ce		4039167	0					
ANR	4039202	Identifier	get_iterator		4039167	1					
ANR	4039203	CompoundStatement		8:34:201:201	4039167	1					
ANR	4039204	ExpressionStatement	ce -> get_iterator = ce -> parent -> get_iterator	100:2:3816:3859	4039167	0	True				
ANR	4039205	AssignmentExpression	ce -> get_iterator = ce -> parent -> get_iterator		4039167	0		=			
ANR	4039206	PtrMemberAccess	ce -> get_iterator		4039167	0					
ANR	4039207	Identifier	ce		4039167	0					
ANR	4039208	Identifier	get_iterator		4039167	1					
ANR	4039209	PtrMemberAccess	ce -> parent -> get_iterator		4039167	1					
ANR	4039210	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039211	Identifier	ce		4039167	0					
ANR	4039212	Identifier	parent		4039167	1					
ANR	4039213	Identifier	get_iterator		4039167	1					
ANR	4039214	IfStatement	if ( EXPECTED ( ! ce -> iterator_funcs . funcs ) )		4039167	3					
ANR	4039215	Condition	EXPECTED ( ! ce -> iterator_funcs . funcs )	102:5:3869:3903	4039167	0	True				
ANR	4039216	CallExpression	EXPECTED ( ! ce -> iterator_funcs . funcs )		4039167	0					
ANR	4039217	Callee	EXPECTED		4039167	0					
ANR	4039218	Identifier	EXPECTED		4039167	0					
ANR	4039219	ArgumentList	! ce -> iterator_funcs . funcs		4039167	1					
ANR	4039220	Argument	! ce -> iterator_funcs . funcs		4039167	0					
ANR	4039221	UnaryOperationExpression	! ce -> iterator_funcs . funcs		4039167	0					
ANR	4039222	UnaryOperator	!		4039167	0					
ANR	4039223	MemberAccess	ce -> iterator_funcs . funcs		4039167	1					
ANR	4039224	PtrMemberAccess	ce -> iterator_funcs		4039167	0					
ANR	4039225	Identifier	ce		4039167	0					
ANR	4039226	Identifier	iterator_funcs		4039167	1					
ANR	4039227	Identifier	funcs		4039167	1					
ANR	4039228	CompoundStatement		11:42:295:295	4039167	1					
ANR	4039229	ExpressionStatement	ce -> iterator_funcs . funcs = ce -> parent -> iterator_funcs . funcs	103:2:3910:3969	4039167	0	True				
ANR	4039230	AssignmentExpression	ce -> iterator_funcs . funcs = ce -> parent -> iterator_funcs . funcs		4039167	0		=			
ANR	4039231	MemberAccess	ce -> iterator_funcs . funcs		4039167	0					
ANR	4039232	PtrMemberAccess	ce -> iterator_funcs		4039167	0					
ANR	4039233	Identifier	ce		4039167	0					
ANR	4039234	Identifier	iterator_funcs		4039167	1					
ANR	4039235	Identifier	funcs		4039167	1					
ANR	4039236	MemberAccess	ce -> parent -> iterator_funcs . funcs		4039167	1					
ANR	4039237	PtrMemberAccess	ce -> parent -> iterator_funcs		4039167	0					
ANR	4039238	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039239	Identifier	ce		4039167	0					
ANR	4039240	Identifier	parent		4039167	1					
ANR	4039241	Identifier	iterator_funcs		4039167	1					
ANR	4039242	Identifier	funcs		4039167	1					
ANR	4039243	IfStatement	if ( EXPECTED ( ! ce -> __get ) )		4039167	4					
ANR	4039244	Condition	EXPECTED ( ! ce -> __get )	105:5:3979:3998	4039167	0	True				
ANR	4039245	CallExpression	EXPECTED ( ! ce -> __get )		4039167	0					
ANR	4039246	Callee	EXPECTED		4039167	0					
ANR	4039247	Identifier	EXPECTED		4039167	0					
ANR	4039248	ArgumentList	! ce -> __get		4039167	1					
ANR	4039249	Argument	! ce -> __get		4039167	0					
ANR	4039250	UnaryOperationExpression	! ce -> __get		4039167	0					
ANR	4039251	UnaryOperator	!		4039167	0					
ANR	4039252	PtrMemberAccess	ce -> __get		4039167	1					
ANR	4039253	Identifier	ce		4039167	0					
ANR	4039254	Identifier	__get		4039167	1					
ANR	4039255	CompoundStatement		14:27:390:390	4039167	1					
ANR	4039256	ExpressionStatement	ce -> __get = ce -> parent -> __get	106:2:4005:4034	4039167	0	True				
ANR	4039257	AssignmentExpression	ce -> __get = ce -> parent -> __get		4039167	0		=			
ANR	4039258	PtrMemberAccess	ce -> __get		4039167	0					
ANR	4039259	Identifier	ce		4039167	0					
ANR	4039260	Identifier	__get		4039167	1					
ANR	4039261	PtrMemberAccess	ce -> parent -> __get		4039167	1					
ANR	4039262	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039263	Identifier	ce		4039167	0					
ANR	4039264	Identifier	parent		4039167	1					
ANR	4039265	Identifier	__get		4039167	1					
ANR	4039266	IfStatement	if ( EXPECTED ( ! ce -> __set ) )		4039167	5					
ANR	4039267	Condition	EXPECTED ( ! ce -> __set )	108:5:4044:4063	4039167	0	True				
ANR	4039268	CallExpression	EXPECTED ( ! ce -> __set )		4039167	0					
ANR	4039269	Callee	EXPECTED		4039167	0					
ANR	4039270	Identifier	EXPECTED		4039167	0					
ANR	4039271	ArgumentList	! ce -> __set		4039167	1					
ANR	4039272	Argument	! ce -> __set		4039167	0					
ANR	4039273	UnaryOperationExpression	! ce -> __set		4039167	0					
ANR	4039274	UnaryOperator	!		4039167	0					
ANR	4039275	PtrMemberAccess	ce -> __set		4039167	1					
ANR	4039276	Identifier	ce		4039167	0					
ANR	4039277	Identifier	__set		4039167	1					
ANR	4039278	CompoundStatement		17:27:455:455	4039167	1					
ANR	4039279	ExpressionStatement	ce -> __set = ce -> parent -> __set	109:2:4070:4099	4039167	0	True				
ANR	4039280	AssignmentExpression	ce -> __set = ce -> parent -> __set		4039167	0		=			
ANR	4039281	PtrMemberAccess	ce -> __set		4039167	0					
ANR	4039282	Identifier	ce		4039167	0					
ANR	4039283	Identifier	__set		4039167	1					
ANR	4039284	PtrMemberAccess	ce -> parent -> __set		4039167	1					
ANR	4039285	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039286	Identifier	ce		4039167	0					
ANR	4039287	Identifier	parent		4039167	1					
ANR	4039288	Identifier	__set		4039167	1					
ANR	4039289	IfStatement	if ( EXPECTED ( ! ce -> __unset ) )		4039167	6					
ANR	4039290	Condition	EXPECTED ( ! ce -> __unset )	111:5:4109:4130	4039167	0	True				
ANR	4039291	CallExpression	EXPECTED ( ! ce -> __unset )		4039167	0					
ANR	4039292	Callee	EXPECTED		4039167	0					
ANR	4039293	Identifier	EXPECTED		4039167	0					
ANR	4039294	ArgumentList	! ce -> __unset		4039167	1					
ANR	4039295	Argument	! ce -> __unset		4039167	0					
ANR	4039296	UnaryOperationExpression	! ce -> __unset		4039167	0					
ANR	4039297	UnaryOperator	!		4039167	0					
ANR	4039298	PtrMemberAccess	ce -> __unset		4039167	1					
ANR	4039299	Identifier	ce		4039167	0					
ANR	4039300	Identifier	__unset		4039167	1					
ANR	4039301	CompoundStatement		20:29:522:522	4039167	1					
ANR	4039302	ExpressionStatement	ce -> __unset = ce -> parent -> __unset	112:2:4137:4170	4039167	0	True				
ANR	4039303	AssignmentExpression	ce -> __unset = ce -> parent -> __unset		4039167	0		=			
ANR	4039304	PtrMemberAccess	ce -> __unset		4039167	0					
ANR	4039305	Identifier	ce		4039167	0					
ANR	4039306	Identifier	__unset		4039167	1					
ANR	4039307	PtrMemberAccess	ce -> parent -> __unset		4039167	1					
ANR	4039308	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039309	Identifier	ce		4039167	0					
ANR	4039310	Identifier	parent		4039167	1					
ANR	4039311	Identifier	__unset		4039167	1					
ANR	4039312	IfStatement	if ( EXPECTED ( ! ce -> __isset ) )		4039167	7					
ANR	4039313	Condition	EXPECTED ( ! ce -> __isset )	114:5:4180:4201	4039167	0	True				
ANR	4039314	CallExpression	EXPECTED ( ! ce -> __isset )		4039167	0					
ANR	4039315	Callee	EXPECTED		4039167	0					
ANR	4039316	Identifier	EXPECTED		4039167	0					
ANR	4039317	ArgumentList	! ce -> __isset		4039167	1					
ANR	4039318	Argument	! ce -> __isset		4039167	0					
ANR	4039319	UnaryOperationExpression	! ce -> __isset		4039167	0					
ANR	4039320	UnaryOperator	!		4039167	0					
ANR	4039321	PtrMemberAccess	ce -> __isset		4039167	1					
ANR	4039322	Identifier	ce		4039167	0					
ANR	4039323	Identifier	__isset		4039167	1					
ANR	4039324	CompoundStatement		23:29:593:593	4039167	1					
ANR	4039325	ExpressionStatement	ce -> __isset = ce -> parent -> __isset	115:2:4208:4241	4039167	0	True				
ANR	4039326	AssignmentExpression	ce -> __isset = ce -> parent -> __isset		4039167	0		=			
ANR	4039327	PtrMemberAccess	ce -> __isset		4039167	0					
ANR	4039328	Identifier	ce		4039167	0					
ANR	4039329	Identifier	__isset		4039167	1					
ANR	4039330	PtrMemberAccess	ce -> parent -> __isset		4039167	1					
ANR	4039331	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039332	Identifier	ce		4039167	0					
ANR	4039333	Identifier	parent		4039167	1					
ANR	4039334	Identifier	__isset		4039167	1					
ANR	4039335	IfStatement	if ( EXPECTED ( ! ce -> __call ) )		4039167	8					
ANR	4039336	Condition	EXPECTED ( ! ce -> __call )	117:5:4251:4271	4039167	0	True				
ANR	4039337	CallExpression	EXPECTED ( ! ce -> __call )		4039167	0					
ANR	4039338	Callee	EXPECTED		4039167	0					
ANR	4039339	Identifier	EXPECTED		4039167	0					
ANR	4039340	ArgumentList	! ce -> __call		4039167	1					
ANR	4039341	Argument	! ce -> __call		4039167	0					
ANR	4039342	UnaryOperationExpression	! ce -> __call		4039167	0					
ANR	4039343	UnaryOperator	!		4039167	0					
ANR	4039344	PtrMemberAccess	ce -> __call		4039167	1					
ANR	4039345	Identifier	ce		4039167	0					
ANR	4039346	Identifier	__call		4039167	1					
ANR	4039347	CompoundStatement		26:28:663:663	4039167	1					
ANR	4039348	ExpressionStatement	ce -> __call = ce -> parent -> __call	118:2:4278:4309	4039167	0	True				
ANR	4039349	AssignmentExpression	ce -> __call = ce -> parent -> __call		4039167	0		=			
ANR	4039350	PtrMemberAccess	ce -> __call		4039167	0					
ANR	4039351	Identifier	ce		4039167	0					
ANR	4039352	Identifier	__call		4039167	1					
ANR	4039353	PtrMemberAccess	ce -> parent -> __call		4039167	1					
ANR	4039354	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039355	Identifier	ce		4039167	0					
ANR	4039356	Identifier	parent		4039167	1					
ANR	4039357	Identifier	__call		4039167	1					
ANR	4039358	IfStatement	if ( EXPECTED ( ! ce -> __callstatic ) )		4039167	9					
ANR	4039359	Condition	EXPECTED ( ! ce -> __callstatic )	120:5:4319:4345	4039167	0	True				
ANR	4039360	CallExpression	EXPECTED ( ! ce -> __callstatic )		4039167	0					
ANR	4039361	Callee	EXPECTED		4039167	0					
ANR	4039362	Identifier	EXPECTED		4039167	0					
ANR	4039363	ArgumentList	! ce -> __callstatic		4039167	1					
ANR	4039364	Argument	! ce -> __callstatic		4039167	0					
ANR	4039365	UnaryOperationExpression	! ce -> __callstatic		4039167	0					
ANR	4039366	UnaryOperator	!		4039167	0					
ANR	4039367	PtrMemberAccess	ce -> __callstatic		4039167	1					
ANR	4039368	Identifier	ce		4039167	0					
ANR	4039369	Identifier	__callstatic		4039167	1					
ANR	4039370	CompoundStatement		29:34:737:737	4039167	1					
ANR	4039371	ExpressionStatement	ce -> __callstatic = ce -> parent -> __callstatic	121:2:4352:4395	4039167	0	True				
ANR	4039372	AssignmentExpression	ce -> __callstatic = ce -> parent -> __callstatic		4039167	0		=			
ANR	4039373	PtrMemberAccess	ce -> __callstatic		4039167	0					
ANR	4039374	Identifier	ce		4039167	0					
ANR	4039375	Identifier	__callstatic		4039167	1					
ANR	4039376	PtrMemberAccess	ce -> parent -> __callstatic		4039167	1					
ANR	4039377	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039378	Identifier	ce		4039167	0					
ANR	4039379	Identifier	parent		4039167	1					
ANR	4039380	Identifier	__callstatic		4039167	1					
ANR	4039381	IfStatement	if ( EXPECTED ( ! ce -> __tostring ) )		4039167	10					
ANR	4039382	Condition	EXPECTED ( ! ce -> __tostring )	123:5:4405:4429	4039167	0	True				
ANR	4039383	CallExpression	EXPECTED ( ! ce -> __tostring )		4039167	0					
ANR	4039384	Callee	EXPECTED		4039167	0					
ANR	4039385	Identifier	EXPECTED		4039167	0					
ANR	4039386	ArgumentList	! ce -> __tostring		4039167	1					
ANR	4039387	Argument	! ce -> __tostring		4039167	0					
ANR	4039388	UnaryOperationExpression	! ce -> __tostring		4039167	0					
ANR	4039389	UnaryOperator	!		4039167	0					
ANR	4039390	PtrMemberAccess	ce -> __tostring		4039167	1					
ANR	4039391	Identifier	ce		4039167	0					
ANR	4039392	Identifier	__tostring		4039167	1					
ANR	4039393	CompoundStatement		32:32:821:821	4039167	1					
ANR	4039394	ExpressionStatement	ce -> __tostring = ce -> parent -> __tostring	124:2:4436:4475	4039167	0	True				
ANR	4039395	AssignmentExpression	ce -> __tostring = ce -> parent -> __tostring		4039167	0		=			
ANR	4039396	PtrMemberAccess	ce -> __tostring		4039167	0					
ANR	4039397	Identifier	ce		4039167	0					
ANR	4039398	Identifier	__tostring		4039167	1					
ANR	4039399	PtrMemberAccess	ce -> parent -> __tostring		4039167	1					
ANR	4039400	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039401	Identifier	ce		4039167	0					
ANR	4039402	Identifier	parent		4039167	1					
ANR	4039403	Identifier	__tostring		4039167	1					
ANR	4039404	IfStatement	if ( EXPECTED ( ! ce -> clone ) )		4039167	11					
ANR	4039405	Condition	EXPECTED ( ! ce -> clone )	126:5:4485:4504	4039167	0	True				
ANR	4039406	CallExpression	EXPECTED ( ! ce -> clone )		4039167	0					
ANR	4039407	Callee	EXPECTED		4039167	0					
ANR	4039408	Identifier	EXPECTED		4039167	0					
ANR	4039409	ArgumentList	! ce -> clone		4039167	1					
ANR	4039410	Argument	! ce -> clone		4039167	0					
ANR	4039411	UnaryOperationExpression	! ce -> clone		4039167	0					
ANR	4039412	UnaryOperator	!		4039167	0					
ANR	4039413	PtrMemberAccess	ce -> clone		4039167	1					
ANR	4039414	Identifier	ce		4039167	0					
ANR	4039415	Identifier	clone		4039167	1					
ANR	4039416	CompoundStatement		35:27:896:896	4039167	1					
ANR	4039417	ExpressionStatement	ce -> clone = ce -> parent -> clone	127:2:4511:4540	4039167	0	True				
ANR	4039418	AssignmentExpression	ce -> clone = ce -> parent -> clone		4039167	0		=			
ANR	4039419	PtrMemberAccess	ce -> clone		4039167	0					
ANR	4039420	Identifier	ce		4039167	0					
ANR	4039421	Identifier	clone		4039167	1					
ANR	4039422	PtrMemberAccess	ce -> parent -> clone		4039167	1					
ANR	4039423	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039424	Identifier	ce		4039167	0					
ANR	4039425	Identifier	parent		4039167	1					
ANR	4039426	Identifier	clone		4039167	1					
ANR	4039427	IfStatement	if ( EXPECTED ( ! ce -> serialize ) )		4039167	12					
ANR	4039428	Condition	EXPECTED ( ! ce -> serialize )	129:5:4550:4573	4039167	0	True				
ANR	4039429	CallExpression	EXPECTED ( ! ce -> serialize )		4039167	0					
ANR	4039430	Callee	EXPECTED		4039167	0					
ANR	4039431	Identifier	EXPECTED		4039167	0					
ANR	4039432	ArgumentList	! ce -> serialize		4039167	1					
ANR	4039433	Argument	! ce -> serialize		4039167	0					
ANR	4039434	UnaryOperationExpression	! ce -> serialize		4039167	0					
ANR	4039435	UnaryOperator	!		4039167	0					
ANR	4039436	PtrMemberAccess	ce -> serialize		4039167	1					
ANR	4039437	Identifier	ce		4039167	0					
ANR	4039438	Identifier	serialize		4039167	1					
ANR	4039439	CompoundStatement		38:31:965:965	4039167	1					
ANR	4039440	ExpressionStatement	ce -> serialize = ce -> parent -> serialize	130:2:4580:4617	4039167	0	True				
ANR	4039441	AssignmentExpression	ce -> serialize = ce -> parent -> serialize		4039167	0		=			
ANR	4039442	PtrMemberAccess	ce -> serialize		4039167	0					
ANR	4039443	Identifier	ce		4039167	0					
ANR	4039444	Identifier	serialize		4039167	1					
ANR	4039445	PtrMemberAccess	ce -> parent -> serialize		4039167	1					
ANR	4039446	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039447	Identifier	ce		4039167	0					
ANR	4039448	Identifier	parent		4039167	1					
ANR	4039449	Identifier	serialize		4039167	1					
ANR	4039450	IfStatement	if ( EXPECTED ( ! ce -> unserialize ) )		4039167	13					
ANR	4039451	Condition	EXPECTED ( ! ce -> unserialize )	132:5:4627:4652	4039167	0	True				
ANR	4039452	CallExpression	EXPECTED ( ! ce -> unserialize )		4039167	0					
ANR	4039453	Callee	EXPECTED		4039167	0					
ANR	4039454	Identifier	EXPECTED		4039167	0					
ANR	4039455	ArgumentList	! ce -> unserialize		4039167	1					
ANR	4039456	Argument	! ce -> unserialize		4039167	0					
ANR	4039457	UnaryOperationExpression	! ce -> unserialize		4039167	0					
ANR	4039458	UnaryOperator	!		4039167	0					
ANR	4039459	PtrMemberAccess	ce -> unserialize		4039167	1					
ANR	4039460	Identifier	ce		4039167	0					
ANR	4039461	Identifier	unserialize		4039167	1					
ANR	4039462	CompoundStatement		41:33:1044:1044	4039167	1					
ANR	4039463	ExpressionStatement	ce -> unserialize = ce -> parent -> unserialize	133:2:4659:4700	4039167	0	True				
ANR	4039464	AssignmentExpression	ce -> unserialize = ce -> parent -> unserialize		4039167	0		=			
ANR	4039465	PtrMemberAccess	ce -> unserialize		4039167	0					
ANR	4039466	Identifier	ce		4039167	0					
ANR	4039467	Identifier	unserialize		4039167	1					
ANR	4039468	PtrMemberAccess	ce -> parent -> unserialize		4039167	1					
ANR	4039469	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039470	Identifier	ce		4039167	0					
ANR	4039471	Identifier	parent		4039167	1					
ANR	4039472	Identifier	unserialize		4039167	1					
ANR	4039473	IfStatement	if ( ! ce -> destructor )		4039167	14					
ANR	4039474	Condition	! ce -> destructor	135:5:4710:4724	4039167	0	True				
ANR	4039475	UnaryOperationExpression	! ce -> destructor		4039167	0					
ANR	4039476	UnaryOperator	!		4039167	0					
ANR	4039477	PtrMemberAccess	ce -> destructor		4039167	1					
ANR	4039478	Identifier	ce		4039167	0					
ANR	4039479	Identifier	destructor		4039167	1					
ANR	4039480	CompoundStatement		44:22:1116:1116	4039167	1					
ANR	4039481	ExpressionStatement	ce -> destructor = ce -> parent -> destructor	136:2:4731:4770	4039167	0	True				
ANR	4039482	AssignmentExpression	ce -> destructor = ce -> parent -> destructor		4039167	0		=			
ANR	4039483	PtrMemberAccess	ce -> destructor		4039167	0					
ANR	4039484	Identifier	ce		4039167	0					
ANR	4039485	Identifier	destructor		4039167	1					
ANR	4039486	PtrMemberAccess	ce -> parent -> destructor		4039167	1					
ANR	4039487	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039488	Identifier	ce		4039167	0					
ANR	4039489	Identifier	parent		4039167	1					
ANR	4039490	Identifier	destructor		4039167	1					
ANR	4039491	IfStatement	if ( EXPECTED ( ! ce -> __debugInfo ) )		4039167	15					
ANR	4039492	Condition	EXPECTED ( ! ce -> __debugInfo )	138:5:4780:4805	4039167	0	True				
ANR	4039493	CallExpression	EXPECTED ( ! ce -> __debugInfo )		4039167	0					
ANR	4039494	Callee	EXPECTED		4039167	0					
ANR	4039495	Identifier	EXPECTED		4039167	0					
ANR	4039496	ArgumentList	! ce -> __debugInfo		4039167	1					
ANR	4039497	Argument	! ce -> __debugInfo		4039167	0					
ANR	4039498	UnaryOperationExpression	! ce -> __debugInfo		4039167	0					
ANR	4039499	UnaryOperator	!		4039167	0					
ANR	4039500	PtrMemberAccess	ce -> __debugInfo		4039167	1					
ANR	4039501	Identifier	ce		4039167	0					
ANR	4039502	Identifier	__debugInfo		4039167	1					
ANR	4039503	CompoundStatement		47:33:1197:1197	4039167	1					
ANR	4039504	ExpressionStatement	ce -> __debugInfo = ce -> parent -> __debugInfo	139:2:4812:4853	4039167	0	True				
ANR	4039505	AssignmentExpression	ce -> __debugInfo = ce -> parent -> __debugInfo		4039167	0		=			
ANR	4039506	PtrMemberAccess	ce -> __debugInfo		4039167	0					
ANR	4039507	Identifier	ce		4039167	0					
ANR	4039508	Identifier	__debugInfo		4039167	1					
ANR	4039509	PtrMemberAccess	ce -> parent -> __debugInfo		4039167	1					
ANR	4039510	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039511	Identifier	ce		4039167	0					
ANR	4039512	Identifier	parent		4039167	1					
ANR	4039513	Identifier	__debugInfo		4039167	1					
ANR	4039514	IfStatement	if ( ce -> constructor )		4039167	16					
ANR	4039515	Condition	ce -> constructor	142:5:4864:4878	4039167	0	True				
ANR	4039516	PtrMemberAccess	ce -> constructor		4039167	0					
ANR	4039517	Identifier	ce		4039167	0					
ANR	4039518	Identifier	constructor		4039167	1					
ANR	4039519	CompoundStatement		51:22:1270:1270	4039167	1					
ANR	4039520	IfStatement	if ( ce -> parent -> constructor && UNEXPECTED ( ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL ) )		4039167	0					
ANR	4039521	Condition	ce -> parent -> constructor && UNEXPECTED ( ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL )	143:6:4889:4984	4039167	0	True				
ANR	4039522	AndExpression	ce -> parent -> constructor && UNEXPECTED ( ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL )		4039167	0		&&			
ANR	4039523	PtrMemberAccess	ce -> parent -> constructor		4039167	0					
ANR	4039524	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039525	Identifier	ce		4039167	0					
ANR	4039526	Identifier	parent		4039167	1					
ANR	4039527	Identifier	constructor		4039167	1					
ANR	4039528	CallExpression	UNEXPECTED ( ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL )		4039167	1					
ANR	4039529	Callee	UNEXPECTED		4039167	0					
ANR	4039530	Identifier	UNEXPECTED		4039167	0					
ANR	4039531	ArgumentList	ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL		4039167	1					
ANR	4039532	Argument	ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL		4039167	0					
ANR	4039533	BitAndExpression	ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL		4039167	0		&			
ANR	4039534	MemberAccess	ce -> parent -> constructor -> common . fn_flags		4039167	0					
ANR	4039535	PtrMemberAccess	ce -> parent -> constructor -> common		4039167	0					
ANR	4039536	PtrMemberAccess	ce -> parent -> constructor		4039167	0					
ANR	4039537	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039538	Identifier	ce		4039167	0					
ANR	4039539	Identifier	parent		4039167	1					
ANR	4039540	Identifier	constructor		4039167	1					
ANR	4039541	Identifier	common		4039167	1					
ANR	4039542	Identifier	fn_flags		4039167	1					
ANR	4039543	Identifier	ZEND_ACC_FINAL		4039167	1					
ANR	4039544	CompoundStatement		52:104:1376:1376	4039167	1					
ANR	4039545	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Cannot override final %s::%s() with %s::%s()"" , ZSTR_VAL ( ce -> parent -> name ) , ZSTR_VAL ( ce -> parent -> constructor -> common . function_name ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> constructor -> common . function_name ) )"	144:3:4992:5230	4039167	0	True				
ANR	4039546	CallExpression	"zend_error_noreturn ( E_ERROR , ""Cannot override final %s::%s() with %s::%s()"" , ZSTR_VAL ( ce -> parent -> name ) , ZSTR_VAL ( ce -> parent -> constructor -> common . function_name ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> constructor -> common . function_name ) )"		4039167	0					
ANR	4039547	Callee	zend_error_noreturn		4039167	0					
ANR	4039548	Identifier	zend_error_noreturn		4039167	0					
ANR	4039549	ArgumentList	E_ERROR		4039167	1					
ANR	4039550	Argument	E_ERROR		4039167	0					
ANR	4039551	Identifier	E_ERROR		4039167	0					
ANR	4039552	Argument	"""Cannot override final %s::%s() with %s::%s()"""		4039167	1					
ANR	4039553	PrimaryExpression	"""Cannot override final %s::%s() with %s::%s()"""		4039167	0					
ANR	4039554	Argument	ZSTR_VAL ( ce -> parent -> name )		4039167	2					
ANR	4039555	CallExpression	ZSTR_VAL ( ce -> parent -> name )		4039167	0					
ANR	4039556	Callee	ZSTR_VAL		4039167	0					
ANR	4039557	Identifier	ZSTR_VAL		4039167	0					
ANR	4039558	ArgumentList	ce -> parent -> name		4039167	1					
ANR	4039559	Argument	ce -> parent -> name		4039167	0					
ANR	4039560	PtrMemberAccess	ce -> parent -> name		4039167	0					
ANR	4039561	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039562	Identifier	ce		4039167	0					
ANR	4039563	Identifier	parent		4039167	1					
ANR	4039564	Identifier	name		4039167	1					
ANR	4039565	Argument	ZSTR_VAL ( ce -> parent -> constructor -> common . function_name )		4039167	3					
ANR	4039566	CallExpression	ZSTR_VAL ( ce -> parent -> constructor -> common . function_name )		4039167	0					
ANR	4039567	Callee	ZSTR_VAL		4039167	0					
ANR	4039568	Identifier	ZSTR_VAL		4039167	0					
ANR	4039569	ArgumentList	ce -> parent -> constructor -> common . function_name		4039167	1					
ANR	4039570	Argument	ce -> parent -> constructor -> common . function_name		4039167	0					
ANR	4039571	MemberAccess	ce -> parent -> constructor -> common . function_name		4039167	0					
ANR	4039572	PtrMemberAccess	ce -> parent -> constructor -> common		4039167	0					
ANR	4039573	PtrMemberAccess	ce -> parent -> constructor		4039167	0					
ANR	4039574	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039575	Identifier	ce		4039167	0					
ANR	4039576	Identifier	parent		4039167	1					
ANR	4039577	Identifier	constructor		4039167	1					
ANR	4039578	Identifier	common		4039167	1					
ANR	4039579	Identifier	function_name		4039167	1					
ANR	4039580	Argument	ZSTR_VAL ( ce -> name )		4039167	4					
ANR	4039581	CallExpression	ZSTR_VAL ( ce -> name )		4039167	0					
ANR	4039582	Callee	ZSTR_VAL		4039167	0					
ANR	4039583	Identifier	ZSTR_VAL		4039167	0					
ANR	4039584	ArgumentList	ce -> name		4039167	1					
ANR	4039585	Argument	ce -> name		4039167	0					
ANR	4039586	PtrMemberAccess	ce -> name		4039167	0					
ANR	4039587	Identifier	ce		4039167	0					
ANR	4039588	Identifier	name		4039167	1					
ANR	4039589	Argument	ZSTR_VAL ( ce -> constructor -> common . function_name )		4039167	5					
ANR	4039590	CallExpression	ZSTR_VAL ( ce -> constructor -> common . function_name )		4039167	0					
ANR	4039591	Callee	ZSTR_VAL		4039167	0					
ANR	4039592	Identifier	ZSTR_VAL		4039167	0					
ANR	4039593	ArgumentList	ce -> constructor -> common . function_name		4039167	1					
ANR	4039594	Argument	ce -> constructor -> common . function_name		4039167	0					
ANR	4039595	MemberAccess	ce -> constructor -> common . function_name		4039167	0					
ANR	4039596	PtrMemberAccess	ce -> constructor -> common		4039167	0					
ANR	4039597	PtrMemberAccess	ce -> constructor		4039167	0					
ANR	4039598	Identifier	ce		4039167	0					
ANR	4039599	Identifier	constructor		4039167	1					
ANR	4039600	Identifier	common		4039167	1					
ANR	4039601	Identifier	function_name		4039167	1					
ANR	4039602	ReturnStatement	return ;	148:2:5238:5244	4039167	1	True				
ANR	4039603	ExpressionStatement	ce -> constructor = ce -> parent -> constructor	151:1:5251:5292	4039167	17	True				
ANR	4039604	AssignmentExpression	ce -> constructor = ce -> parent -> constructor		4039167	0		=			
ANR	4039605	PtrMemberAccess	ce -> constructor		4039167	0					
ANR	4039606	Identifier	ce		4039167	0					
ANR	4039607	Identifier	constructor		4039167	1					
ANR	4039608	PtrMemberAccess	ce -> parent -> constructor		4039167	1					
ANR	4039609	PtrMemberAccess	ce -> parent		4039167	0					
ANR	4039610	Identifier	ce		4039167	0					
ANR	4039611	Identifier	parent		4039167	1					
ANR	4039612	Identifier	constructor		4039167	1					
ANR	4039613	ReturnType	static void		4039167	1					
ANR	4039614	Identifier	do_inherit_parent_constructor		4039167	2					
ANR	4039615	ParameterList	zend_class_entry * ce		4039167	3					
ANR	4039616	Parameter	zend_class_entry * ce	91:42:3578:3597	4039167	0	True				
ANR	4039617	ParameterType	zend_class_entry *		4039167	0					
ANR	4039618	Identifier	ce		4039167	1					
ANR	4039619	CFGEntryNode	ENTRY		4039167		True				
ANR	4039620	CFGExitNode	EXIT		4039167		True				
ANR	4039621	Symbol	ce -> constructor -> common . function_name		4039167						
ANR	4039622	Symbol	ce -> __set		4039167						
ANR	4039623	Symbol	ce -> parent -> destructor		4039167						
ANR	4039624	Symbol	ce -> parent -> constructor -> common . fn_flags		4039167						
ANR	4039625	Symbol	ce -> parent -> clone		4039167						
ANR	4039626	Symbol	* ce -> constructor		4039167						
ANR	4039627	Symbol	* ce		4039167						
ANR	4039628	Symbol	ce -> unserialize		4039167						
ANR	4039629	Symbol	ce -> __tostring		4039167						
ANR	4039630	Symbol	* ce -> parent		4039167						
ANR	4039631	Symbol	ce -> __get		4039167						
ANR	4039632	Symbol	ce -> parent -> constructor -> common . function_name		4039167						
ANR	4039633	Symbol	* * ce -> parent		4039167						
ANR	4039634	Symbol	ce -> name		4039167						
ANR	4039635	Symbol	ce -> __callstatic		4039167						
ANR	4039636	Symbol	ce -> parent -> iterator_funcs . funcs		4039167						
ANR	4039637	Symbol	ce -> parent -> constructor		4039167						
ANR	4039638	Symbol	NULL		4039167						
ANR	4039639	Symbol	ce -> parent -> __set		4039167						
ANR	4039640	Symbol	ce -> destructor		4039167						
ANR	4039641	Symbol	ce -> __isset		4039167						
ANR	4039642	Symbol	ce -> parent		4039167						
ANR	4039643	Symbol	ce -> parent -> name		4039167						
ANR	4039644	Symbol	ce -> parent -> constructor -> common		4039167						
ANR	4039645	Symbol	ce -> __debugInfo		4039167						
ANR	4039646	Symbol	ce -> parent -> __callstatic		4039167						
ANR	4039647	Symbol	ce -> parent -> __get		4039167						
ANR	4039648	Symbol	ce -> __call		4039167						
ANR	4039649	Symbol	ce -> get_iterator		4039167						
ANR	4039650	Symbol	ce -> clone		4039167						
ANR	4039651	Symbol	* * * ce		4039167						
ANR	4039652	Symbol	ce -> parent -> iterator_funcs		4039167						
ANR	4039653	Symbol	* * ce		4039167						
ANR	4039654	Symbol	ce -> constructor -> common		4039167						
ANR	4039655	Symbol	ZEND_ACC_FINAL		4039167						
ANR	4039656	Symbol	UNEXPECTED		4039167						
ANR	4039657	Symbol	ce -> parent -> __call		4039167						
ANR	4039658	Symbol	ce -> parent -> __debugInfo		4039167						
ANR	4039659	Symbol	* ce -> parent -> constructor		4039167						
ANR	4039660	Symbol	ce -> parent -> get_iterator		4039167						
ANR	4039661	Symbol	ce -> parent -> __unset		4039167						
ANR	4039662	Symbol	ce -> parent -> unserialize		4039167						
ANR	4039663	Symbol	ce -> parent -> create_object		4039167						
ANR	4039664	Symbol	ce		4039167						
ANR	4039665	Symbol	ce -> constructor		4039167						
ANR	4039666	Symbol	ZSTR_VAL		4039167						
ANR	4039667	Symbol	ce -> __unset		4039167						
ANR	4039668	Symbol	E_ERROR		4039167						
ANR	4039669	Symbol	ce -> iterator_funcs		4039167						
ANR	4039670	Symbol	ce -> parent -> __isset		4039167						
ANR	4039671	Symbol	ce -> serialize		4039167						
ANR	4039672	Symbol	ce -> parent -> __tostring		4039167						
ANR	4039673	Symbol	ce -> parent -> serialize		4039167						
ANR	4039674	Symbol	ce -> create_object		4039167						
ANR	4039675	Symbol	EXPECTED		4039167						
ANR	4039676	Symbol	ce -> iterator_funcs . funcs		4039167						
ANR	4039677	Function	zend_visibility_string	155:0:5307:5558							
ANR	4039678	FunctionDef	zend_visibility_string (uint32_t fn_flags)		4039677	0					
ANR	4039679	CompoundStatement		156:0:5365:5558	4039677	0					
ANR	4039680	IfStatement	if ( fn_flags & ZEND_ACC_PRIVATE )		4039677	0					
ANR	4039681	Condition	fn_flags & ZEND_ACC_PRIVATE	157:5:5372:5398	4039677	0	True				
ANR	4039682	BitAndExpression	fn_flags & ZEND_ACC_PRIVATE		4039677	0		&			
ANR	4039683	Identifier	fn_flags		4039677	0					
ANR	4039684	Identifier	ZEND_ACC_PRIVATE		4039677	1					
ANR	4039685	CompoundStatement		2:34:35:35	4039677	1					
ANR	4039686	ReturnStatement	"return ""private"" ;"	158:2:5405:5421	4039677	0	True				
ANR	4039687	PrimaryExpression	"""private"""		4039677	0					
ANR	4039688	IfStatement	if ( fn_flags & ZEND_ACC_PROTECTED )		4039677	1					
ANR	4039689	Condition	fn_flags & ZEND_ACC_PROTECTED	160:5:5431:5459	4039677	0	True				
ANR	4039690	BitAndExpression	fn_flags & ZEND_ACC_PROTECTED		4039677	0		&			
ANR	4039691	Identifier	fn_flags		4039677	0					
ANR	4039692	Identifier	ZEND_ACC_PROTECTED		4039677	1					
ANR	4039693	CompoundStatement		5:36:96:96	4039677	1					
ANR	4039694	ReturnStatement	"return ""protected"" ;"	161:2:5466:5484	4039677	0	True				
ANR	4039695	PrimaryExpression	"""protected"""		4039677	0					
ANR	4039696	IfStatement	if ( fn_flags & ZEND_ACC_PUBLIC )		4039677	2					
ANR	4039697	Condition	fn_flags & ZEND_ACC_PUBLIC	163:5:5494:5519	4039677	0	True				
ANR	4039698	BitAndExpression	fn_flags & ZEND_ACC_PUBLIC		4039677	0		&			
ANR	4039699	Identifier	fn_flags		4039677	0					
ANR	4039700	Identifier	ZEND_ACC_PUBLIC		4039677	1					
ANR	4039701	CompoundStatement		8:33:156:156	4039677	1					
ANR	4039702	ReturnStatement	"return ""public"" ;"	164:2:5526:5541	4039677	0	True				
ANR	4039703	PrimaryExpression	"""public"""		4039677	0					
ANR	4039704	ReturnStatement	"return """" ;"	166:1:5547:5556	4039677	3	True				
ANR	4039705	PrimaryExpression	""""""		4039677	0					
ANR	4039706	ReturnType	char *		4039677	1					
ANR	4039707	Identifier	zend_visibility_string		4039677	2					
ANR	4039708	ParameterList	uint32_t fn_flags		4039677	3					
ANR	4039709	Parameter	uint32_t fn_flags	155:29:5336:5352	4039677	0	True				
ANR	4039710	ParameterType	uint32_t		4039677	0					
ANR	4039711	Identifier	fn_flags		4039677	1					
ANR	4039712	CFGEntryNode	ENTRY		4039677		True				
ANR	4039713	CFGExitNode	EXIT		4039677		True				
ANR	4039714	Symbol	fn_flags		4039677						
ANR	4039715	Symbol	ZEND_ACC_PUBLIC		4039677						
ANR	4039716	Symbol	ZEND_ACC_PROTECTED		4039677						
ANR	4039717	Symbol	ZEND_ACC_PRIVATE		4039677						
ANR	4039718	Function	zend_do_perform_type_hint_check	170:0:5571:8269							
ANR	4039719	FunctionDef	"zend_do_perform_type_hint_check (const zend_function * fe , zend_arg_info * fe_arg_info , const zend_function * proto , zend_arg_info * proto_arg_info)"		4039718	0					
ANR	4039720	CompoundStatement		171:0:5736:8269	4039718	0					
ANR	4039721	IfStatement	"if ( ZEND_LOG_XOR ( fe_arg_info -> class_name , proto_arg_info -> class_name ) )"		4039718	0					
ANR	4039722	Condition	"ZEND_LOG_XOR ( fe_arg_info -> class_name , proto_arg_info -> class_name )"	172:5:5743:5807	4039718	0	True				
ANR	4039723	CallExpression	"ZEND_LOG_XOR ( fe_arg_info -> class_name , proto_arg_info -> class_name )"		4039718	0					
ANR	4039724	Callee	ZEND_LOG_XOR		4039718	0					
ANR	4039725	Identifier	ZEND_LOG_XOR		4039718	0					
ANR	4039726	ArgumentList	fe_arg_info -> class_name		4039718	1					
ANR	4039727	Argument	fe_arg_info -> class_name		4039718	0					
ANR	4039728	PtrMemberAccess	fe_arg_info -> class_name		4039718	0					
ANR	4039729	Identifier	fe_arg_info		4039718	0					
ANR	4039730	Identifier	class_name		4039718	1					
ANR	4039731	Argument	proto_arg_info -> class_name		4039718	1					
ANR	4039732	PtrMemberAccess	proto_arg_info -> class_name		4039718	0					
ANR	4039733	Identifier	proto_arg_info		4039718	0					
ANR	4039734	Identifier	class_name		4039718	1					
ANR	4039735	CompoundStatement		2:72:73:73	4039718	1					
ANR	4039736	ReturnStatement	return 0 ;	174:2:5873:5881	4039718	0	True				
ANR	4039737	PrimaryExpression	0		4039718	0					
ANR	4039738	IfStatement	if ( fe_arg_info -> class_name )		4039718	1					
ANR	4039739	Condition	fe_arg_info -> class_name	177:5:5892:5914	4039718	0	True				
ANR	4039740	PtrMemberAccess	fe_arg_info -> class_name		4039718	0					
ANR	4039741	Identifier	fe_arg_info		4039718	0					
ANR	4039742	Identifier	class_name		4039718	1					
ANR	4039743	CompoundStatement		9:2:233:255	4039718	1					
ANR	4039744	IdentifierDeclStatement	"zend_string * fe_class_name , * proto_class_name ;"	178:2:5921:5966	4039718	0	True				
ANR	4039745	IdentifierDecl	* fe_class_name		4039718	0					
ANR	4039746	IdentifierDeclType	zend_string *		4039718	0					
ANR	4039747	Identifier	fe_class_name		4039718	1					
ANR	4039748	IdentifierDecl	* proto_class_name		4039718	1					
ANR	4039749	IdentifierDeclType	zend_string *		4039718	0					
ANR	4039750	Identifier	proto_class_name		4039718	1					
ANR	4039751	IdentifierDeclStatement	const char * class_name ;	179:2:5970:5992	4039718	1	True				
ANR	4039752	IdentifierDecl	* class_name		4039718	0					
ANR	4039753	IdentifierDeclType	const char *		4039718	0					
ANR	4039754	Identifier	class_name		4039718	1					
ANR	4039755	IfStatement	if ( fe -> type == ZEND_INTERNAL_FUNCTION )		4039718	2					
ANR	4039756	Condition	fe -> type == ZEND_INTERNAL_FUNCTION	181:6:6001:6034	4039718	0	True				
ANR	4039757	EqualityExpression	fe -> type == ZEND_INTERNAL_FUNCTION		4039718	0		==			
ANR	4039758	PtrMemberAccess	fe -> type		4039718	0					
ANR	4039759	Identifier	fe		4039718	0					
ANR	4039760	Identifier	type		4039718	1					
ANR	4039761	Identifier	ZEND_INTERNAL_FUNCTION		4039718	1					
ANR	4039762	CompoundStatement		11:42:300:300	4039718	1					
ANR	4039763	ExpressionStatement	fe_class_name = NULL	182:3:6042:6062	4039718	0	True				
ANR	4039764	AssignmentExpression	fe_class_name = NULL		4039718	0		=			
ANR	4039765	Identifier	fe_class_name		4039718	0					
ANR	4039766	Identifier	NULL		4039718	1					
ANR	4039767	ExpressionStatement	class_name = ( ( zend_internal_arg_info * ) fe_arg_info ) -> class_name	183:3:6067:6130	4039718	1	True				
ANR	4039768	AssignmentExpression	class_name = ( ( zend_internal_arg_info * ) fe_arg_info ) -> class_name		4039718	0		=			
ANR	4039769	Identifier	class_name		4039718	0					
ANR	4039770	PtrMemberAccess	( ( zend_internal_arg_info * ) fe_arg_info ) -> class_name		4039718	1					
ANR	4039771	CastExpression	( zend_internal_arg_info * ) fe_arg_info		4039718	0					
ANR	4039772	CastTarget	zend_internal_arg_info *		4039718	0					
ANR	4039773	Identifier	fe_arg_info		4039718	1					
ANR	4039774	Identifier	class_name		4039718	1					
ANR	4039775	ElseStatement	else		4039718	0					
ANR	4039776	CompoundStatement		14:9:404:404	4039718	0					
ANR	4039777	ExpressionStatement	fe_class_name = fe_arg_info -> class_name	185:3:6146:6185	4039718	0	True				
ANR	4039778	AssignmentExpression	fe_class_name = fe_arg_info -> class_name		4039718	0		=			
ANR	4039779	Identifier	fe_class_name		4039718	0					
ANR	4039780	PtrMemberAccess	fe_arg_info -> class_name		4039718	1					
ANR	4039781	Identifier	fe_arg_info		4039718	0					
ANR	4039782	Identifier	class_name		4039718	1					
ANR	4039783	ExpressionStatement	class_name = ZSTR_VAL ( fe_arg_info -> class_name )	186:3:6190:6236	4039718	1	True				
ANR	4039784	AssignmentExpression	class_name = ZSTR_VAL ( fe_arg_info -> class_name )		4039718	0		=			
ANR	4039785	Identifier	class_name		4039718	0					
ANR	4039786	CallExpression	ZSTR_VAL ( fe_arg_info -> class_name )		4039718	1					
ANR	4039787	Callee	ZSTR_VAL		4039718	0					
ANR	4039788	Identifier	ZSTR_VAL		4039718	0					
ANR	4039789	ArgumentList	fe_arg_info -> class_name		4039718	1					
ANR	4039790	Argument	fe_arg_info -> class_name		4039718	0					
ANR	4039791	PtrMemberAccess	fe_arg_info -> class_name		4039718	0					
ANR	4039792	Identifier	fe_arg_info		4039718	0					
ANR	4039793	Identifier	class_name		4039718	1					
ANR	4039794	IfStatement	"if ( ! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope )"		4039718	3					
ANR	4039795	Condition	"! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope"	188:6:6248:6303	4039718	0	True				
ANR	4039796	AndExpression	"! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope"		4039718	0		&&			
ANR	4039797	UnaryOperationExpression	"! strcasecmp ( class_name , ""parent"" )"		4039718	0					
ANR	4039798	UnaryOperator	!		4039718	0					
ANR	4039799	CallExpression	"strcasecmp ( class_name , ""parent"" )"		4039718	1					
ANR	4039800	Callee	strcasecmp		4039718	0					
ANR	4039801	Identifier	strcasecmp		4039718	0					
ANR	4039802	ArgumentList	class_name		4039718	1					
ANR	4039803	Argument	class_name		4039718	0					
ANR	4039804	Identifier	class_name		4039718	0					
ANR	4039805	Argument	"""parent"""		4039718	1					
ANR	4039806	PrimaryExpression	"""parent"""		4039718	0					
ANR	4039807	MemberAccess	proto -> common . scope		4039718	1					
ANR	4039808	PtrMemberAccess	proto -> common		4039718	0					
ANR	4039809	Identifier	proto		4039718	0					
ANR	4039810	Identifier	common		4039718	1					
ANR	4039811	Identifier	scope		4039718	1					
ANR	4039812	CompoundStatement		18:64:569:569	4039718	1					
ANR	4039813	ExpressionStatement	fe_class_name = zend_string_copy ( proto -> common . scope -> name )	189:3:6311:6370	4039718	0	True				
ANR	4039814	AssignmentExpression	fe_class_name = zend_string_copy ( proto -> common . scope -> name )		4039718	0		=			
ANR	4039815	Identifier	fe_class_name		4039718	0					
ANR	4039816	CallExpression	zend_string_copy ( proto -> common . scope -> name )		4039718	1					
ANR	4039817	Callee	zend_string_copy		4039718	0					
ANR	4039818	Identifier	zend_string_copy		4039718	0					
ANR	4039819	ArgumentList	proto -> common . scope -> name		4039718	1					
ANR	4039820	Argument	proto -> common . scope -> name		4039718	0					
ANR	4039821	PtrMemberAccess	proto -> common . scope -> name		4039718	0					
ANR	4039822	MemberAccess	proto -> common . scope		4039718	0					
ANR	4039823	PtrMemberAccess	proto -> common		4039718	0					
ANR	4039824	Identifier	proto		4039718	0					
ANR	4039825	Identifier	common		4039718	1					
ANR	4039826	Identifier	scope		4039718	1					
ANR	4039827	Identifier	name		4039718	1					
ANR	4039828	ElseStatement	else		4039718	0					
ANR	4039829	IfStatement	"if ( ! strcasecmp ( class_name , ""self"" ) && fe -> common . scope )"		4039718	0					
ANR	4039830	Condition	"! strcasecmp ( class_name , ""self"" ) && fe -> common . scope"	190:13:6385:6435	4039718	0	True				
ANR	4039831	AndExpression	"! strcasecmp ( class_name , ""self"" ) && fe -> common . scope"		4039718	0		&&			
ANR	4039832	UnaryOperationExpression	"! strcasecmp ( class_name , ""self"" )"		4039718	0					
ANR	4039833	UnaryOperator	!		4039718	0					
ANR	4039834	CallExpression	"strcasecmp ( class_name , ""self"" )"		4039718	1					
ANR	4039835	Callee	strcasecmp		4039718	0					
ANR	4039836	Identifier	strcasecmp		4039718	0					
ANR	4039837	ArgumentList	class_name		4039718	1					
ANR	4039838	Argument	class_name		4039718	0					
ANR	4039839	Identifier	class_name		4039718	0					
ANR	4039840	Argument	"""self"""		4039718	1					
ANR	4039841	PrimaryExpression	"""self"""		4039718	0					
ANR	4039842	MemberAccess	fe -> common . scope		4039718	1					
ANR	4039843	PtrMemberAccess	fe -> common		4039718	0					
ANR	4039844	Identifier	fe		4039718	0					
ANR	4039845	Identifier	common		4039718	1					
ANR	4039846	Identifier	scope		4039718	1					
ANR	4039847	CompoundStatement		20:66:701:701	4039718	1					
ANR	4039848	ExpressionStatement	fe_class_name = zend_string_copy ( fe -> common . scope -> name )	191:3:6443:6499	4039718	0	True				
ANR	4039849	AssignmentExpression	fe_class_name = zend_string_copy ( fe -> common . scope -> name )		4039718	0		=			
ANR	4039850	Identifier	fe_class_name		4039718	0					
ANR	4039851	CallExpression	zend_string_copy ( fe -> common . scope -> name )		4039718	1					
ANR	4039852	Callee	zend_string_copy		4039718	0					
ANR	4039853	Identifier	zend_string_copy		4039718	0					
ANR	4039854	ArgumentList	fe -> common . scope -> name		4039718	1					
ANR	4039855	Argument	fe -> common . scope -> name		4039718	0					
ANR	4039856	PtrMemberAccess	fe -> common . scope -> name		4039718	0					
ANR	4039857	MemberAccess	fe -> common . scope		4039718	0					
ANR	4039858	PtrMemberAccess	fe -> common		4039718	0					
ANR	4039859	Identifier	fe		4039718	0					
ANR	4039860	Identifier	common		4039718	1					
ANR	4039861	Identifier	scope		4039718	1					
ANR	4039862	Identifier	name		4039718	1					
ANR	4039863	ElseStatement	else		4039718	0					
ANR	4039864	IfStatement	if ( fe_class_name )		4039718	0					
ANR	4039865	Condition	fe_class_name	192:13:6514:6526	4039718	0	True				
ANR	4039866	Identifier	fe_class_name		4039718	0					
ANR	4039867	CompoundStatement		22:28:792:792	4039718	1					
ANR	4039868	ExpressionStatement	zend_string_addref ( fe_class_name )	193:3:6534:6567	4039718	0	True				
ANR	4039869	CallExpression	zend_string_addref ( fe_class_name )		4039718	0					
ANR	4039870	Callee	zend_string_addref		4039718	0					
ANR	4039871	Identifier	zend_string_addref		4039718	0					
ANR	4039872	ArgumentList	fe_class_name		4039718	1					
ANR	4039873	Argument	fe_class_name		4039718	0					
ANR	4039874	Identifier	fe_class_name		4039718	0					
ANR	4039875	ElseStatement	else		4039718	0					
ANR	4039876	CompoundStatement		24:9:841:841	4039718	0					
ANR	4039877	ExpressionStatement	"fe_class_name = zend_string_init ( class_name , strlen ( class_name ) , 0 )"	195:3:6583:6650	4039718	0	True				
ANR	4039878	AssignmentExpression	"fe_class_name = zend_string_init ( class_name , strlen ( class_name ) , 0 )"		4039718	0		=			
ANR	4039879	Identifier	fe_class_name		4039718	0					
ANR	4039880	CallExpression	"zend_string_init ( class_name , strlen ( class_name ) , 0 )"		4039718	1					
ANR	4039881	Callee	zend_string_init		4039718	0					
ANR	4039882	Identifier	zend_string_init		4039718	0					
ANR	4039883	ArgumentList	class_name		4039718	1					
ANR	4039884	Argument	class_name		4039718	0					
ANR	4039885	Identifier	class_name		4039718	0					
ANR	4039886	Argument	strlen ( class_name )		4039718	1					
ANR	4039887	CallExpression	strlen ( class_name )		4039718	0					
ANR	4039888	Callee	strlen		4039718	0					
ANR	4039889	Identifier	strlen		4039718	0					
ANR	4039890	ArgumentList	class_name		4039718	1					
ANR	4039891	Argument	class_name		4039718	0					
ANR	4039892	Identifier	class_name		4039718	0					
ANR	4039893	Argument	0		4039718	2					
ANR	4039894	PrimaryExpression	0		4039718	0					
ANR	4039895	IfStatement	if ( proto -> type == ZEND_INTERNAL_FUNCTION )		4039718	4					
ANR	4039896	Condition	proto -> type == ZEND_INTERNAL_FUNCTION	198:6:6663:6699	4039718	0	True				
ANR	4039897	EqualityExpression	proto -> type == ZEND_INTERNAL_FUNCTION		4039718	0		==			
ANR	4039898	PtrMemberAccess	proto -> type		4039718	0					
ANR	4039899	Identifier	proto		4039718	0					
ANR	4039900	Identifier	type		4039718	1					
ANR	4039901	Identifier	ZEND_INTERNAL_FUNCTION		4039718	1					
ANR	4039902	CompoundStatement		28:45:965:965	4039718	1					
ANR	4039903	ExpressionStatement	proto_class_name = NULL	199:3:6707:6730	4039718	0	True				
ANR	4039904	AssignmentExpression	proto_class_name = NULL		4039718	0		=			
ANR	4039905	Identifier	proto_class_name		4039718	0					
ANR	4039906	Identifier	NULL		4039718	1					
ANR	4039907	ExpressionStatement	class_name = ( ( zend_internal_arg_info * ) proto_arg_info ) -> class_name	200:3:6735:6801	4039718	1	True				
ANR	4039908	AssignmentExpression	class_name = ( ( zend_internal_arg_info * ) proto_arg_info ) -> class_name		4039718	0		=			
ANR	4039909	Identifier	class_name		4039718	0					
ANR	4039910	PtrMemberAccess	( ( zend_internal_arg_info * ) proto_arg_info ) -> class_name		4039718	1					
ANR	4039911	CastExpression	( zend_internal_arg_info * ) proto_arg_info		4039718	0					
ANR	4039912	CastTarget	zend_internal_arg_info *		4039718	0					
ANR	4039913	Identifier	proto_arg_info		4039718	1					
ANR	4039914	Identifier	class_name		4039718	1					
ANR	4039915	ElseStatement	else		4039718	0					
ANR	4039916	CompoundStatement		31:9:1075:1075	4039718	0					
ANR	4039917	ExpressionStatement	proto_class_name = proto_arg_info -> class_name	202:3:6817:6862	4039718	0	True				
ANR	4039918	AssignmentExpression	proto_class_name = proto_arg_info -> class_name		4039718	0		=			
ANR	4039919	Identifier	proto_class_name		4039718	0					
ANR	4039920	PtrMemberAccess	proto_arg_info -> class_name		4039718	1					
ANR	4039921	Identifier	proto_arg_info		4039718	0					
ANR	4039922	Identifier	class_name		4039718	1					
ANR	4039923	ExpressionStatement	class_name = ZSTR_VAL ( proto_arg_info -> class_name )	203:3:6867:6916	4039718	1	True				
ANR	4039924	AssignmentExpression	class_name = ZSTR_VAL ( proto_arg_info -> class_name )		4039718	0		=			
ANR	4039925	Identifier	class_name		4039718	0					
ANR	4039926	CallExpression	ZSTR_VAL ( proto_arg_info -> class_name )		4039718	1					
ANR	4039927	Callee	ZSTR_VAL		4039718	0					
ANR	4039928	Identifier	ZSTR_VAL		4039718	0					
ANR	4039929	ArgumentList	proto_arg_info -> class_name		4039718	1					
ANR	4039930	Argument	proto_arg_info -> class_name		4039718	0					
ANR	4039931	PtrMemberAccess	proto_arg_info -> class_name		4039718	0					
ANR	4039932	Identifier	proto_arg_info		4039718	0					
ANR	4039933	Identifier	class_name		4039718	1					
ANR	4039934	IfStatement	"if ( ! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope && proto -> common . scope -> parent )"		4039718	5					
ANR	4039935	Condition	"! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope && proto -> common . scope -> parent"	205:6:6928:7014	4039718	0	True				
ANR	4039936	AndExpression	"! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope && proto -> common . scope -> parent"		4039718	0		&&			
ANR	4039937	UnaryOperationExpression	"! strcasecmp ( class_name , ""parent"" )"		4039718	0					
ANR	4039938	UnaryOperator	!		4039718	0					
ANR	4039939	CallExpression	"strcasecmp ( class_name , ""parent"" )"		4039718	1					
ANR	4039940	Callee	strcasecmp		4039718	0					
ANR	4039941	Identifier	strcasecmp		4039718	0					
ANR	4039942	ArgumentList	class_name		4039718	1					
ANR	4039943	Argument	class_name		4039718	0					
ANR	4039944	Identifier	class_name		4039718	0					
ANR	4039945	Argument	"""parent"""		4039718	1					
ANR	4039946	PrimaryExpression	"""parent"""		4039718	0					
ANR	4039947	AndExpression	proto -> common . scope && proto -> common . scope -> parent		4039718	1		&&			
ANR	4039948	MemberAccess	proto -> common . scope		4039718	0					
ANR	4039949	PtrMemberAccess	proto -> common		4039718	0					
ANR	4039950	Identifier	proto		4039718	0					
ANR	4039951	Identifier	common		4039718	1					
ANR	4039952	Identifier	scope		4039718	1					
ANR	4039953	PtrMemberAccess	proto -> common . scope -> parent		4039718	1					
ANR	4039954	MemberAccess	proto -> common . scope		4039718	0					
ANR	4039955	PtrMemberAccess	proto -> common		4039718	0					
ANR	4039956	Identifier	proto		4039718	0					
ANR	4039957	Identifier	common		4039718	1					
ANR	4039958	Identifier	scope		4039718	1					
ANR	4039959	Identifier	parent		4039718	1					
ANR	4039960	CompoundStatement		35:95:1280:1280	4039718	1					
ANR	4039961	ExpressionStatement	proto_class_name = zend_string_copy ( proto -> common . scope -> parent -> name )	206:3:7022:7092	4039718	0	True				
ANR	4039962	AssignmentExpression	proto_class_name = zend_string_copy ( proto -> common . scope -> parent -> name )		4039718	0		=			
ANR	4039963	Identifier	proto_class_name		4039718	0					
ANR	4039964	CallExpression	zend_string_copy ( proto -> common . scope -> parent -> name )		4039718	1					
ANR	4039965	Callee	zend_string_copy		4039718	0					
ANR	4039966	Identifier	zend_string_copy		4039718	0					
ANR	4039967	ArgumentList	proto -> common . scope -> parent -> name		4039718	1					
ANR	4039968	Argument	proto -> common . scope -> parent -> name		4039718	0					
ANR	4039969	PtrMemberAccess	proto -> common . scope -> parent -> name		4039718	0					
ANR	4039970	PtrMemberAccess	proto -> common . scope -> parent		4039718	0					
ANR	4039971	MemberAccess	proto -> common . scope		4039718	0					
ANR	4039972	PtrMemberAccess	proto -> common		4039718	0					
ANR	4039973	Identifier	proto		4039718	0					
ANR	4039974	Identifier	common		4039718	1					
ANR	4039975	Identifier	scope		4039718	1					
ANR	4039976	Identifier	parent		4039718	1					
ANR	4039977	Identifier	name		4039718	1					
ANR	4039978	ElseStatement	else		4039718	0					
ANR	4039979	IfStatement	"if ( ! strcasecmp ( class_name , ""self"" ) && proto -> common . scope )"		4039718	0					
ANR	4039980	Condition	"! strcasecmp ( class_name , ""self"" ) && proto -> common . scope"	207:13:7107:7160	4039718	0	True				
ANR	4039981	AndExpression	"! strcasecmp ( class_name , ""self"" ) && proto -> common . scope"		4039718	0		&&			
ANR	4039982	UnaryOperationExpression	"! strcasecmp ( class_name , ""self"" )"		4039718	0					
ANR	4039983	UnaryOperator	!		4039718	0					
ANR	4039984	CallExpression	"strcasecmp ( class_name , ""self"" )"		4039718	1					
ANR	4039985	Callee	strcasecmp		4039718	0					
ANR	4039986	Identifier	strcasecmp		4039718	0					
ANR	4039987	ArgumentList	class_name		4039718	1					
ANR	4039988	Argument	class_name		4039718	0					
ANR	4039989	Identifier	class_name		4039718	0					
ANR	4039990	Argument	"""self"""		4039718	1					
ANR	4039991	PrimaryExpression	"""self"""		4039718	0					
ANR	4039992	MemberAccess	proto -> common . scope		4039718	1					
ANR	4039993	PtrMemberAccess	proto -> common		4039718	0					
ANR	4039994	Identifier	proto		4039718	0					
ANR	4039995	Identifier	common		4039718	1					
ANR	4039996	Identifier	scope		4039718	1					
ANR	4039997	CompoundStatement		37:69:1426:1426	4039718	1					
ANR	4039998	ExpressionStatement	proto_class_name = zend_string_copy ( proto -> common . scope -> name )	208:3:7168:7230	4039718	0	True				
ANR	4039999	AssignmentExpression	proto_class_name = zend_string_copy ( proto -> common . scope -> name )		4039718	0		=			
ANR	4040000	Identifier	proto_class_name		4039718	0					
ANR	4040001	CallExpression	zend_string_copy ( proto -> common . scope -> name )		4039718	1					
ANR	4040002	Callee	zend_string_copy		4039718	0					
ANR	4040003	Identifier	zend_string_copy		4039718	0					
ANR	4040004	ArgumentList	proto -> common . scope -> name		4039718	1					
ANR	4040005	Argument	proto -> common . scope -> name		4039718	0					
ANR	4040006	PtrMemberAccess	proto -> common . scope -> name		4039718	0					
ANR	4040007	MemberAccess	proto -> common . scope		4039718	0					
ANR	4040008	PtrMemberAccess	proto -> common		4039718	0					
ANR	4040009	Identifier	proto		4039718	0					
ANR	4040010	Identifier	common		4039718	1					
ANR	4040011	Identifier	scope		4039718	1					
ANR	4040012	Identifier	name		4039718	1					
ANR	4040013	ElseStatement	else		4039718	0					
ANR	4040014	IfStatement	if ( proto_class_name )		4039718	0					
ANR	4040015	Condition	proto_class_name	209:13:7245:7260	4039718	0	True				
ANR	4040016	Identifier	proto_class_name		4039718	0					
ANR	4040017	CompoundStatement		39:31:1526:1526	4039718	1					
ANR	4040018	ExpressionStatement	zend_string_addref ( proto_class_name )	210:3:7268:7304	4039718	0	True				
ANR	4040019	CallExpression	zend_string_addref ( proto_class_name )		4039718	0					
ANR	4040020	Callee	zend_string_addref		4039718	0					
ANR	4040021	Identifier	zend_string_addref		4039718	0					
ANR	4040022	ArgumentList	proto_class_name		4039718	1					
ANR	4040023	Argument	proto_class_name		4039718	0					
ANR	4040024	Identifier	proto_class_name		4039718	0					
ANR	4040025	ElseStatement	else		4039718	0					
ANR	4040026	CompoundStatement		41:9:1578:1578	4039718	0					
ANR	4040027	ExpressionStatement	"proto_class_name = zend_string_init ( class_name , strlen ( class_name ) , 0 )"	212:3:7320:7390	4039718	0	True				
ANR	4040028	AssignmentExpression	"proto_class_name = zend_string_init ( class_name , strlen ( class_name ) , 0 )"		4039718	0		=			
ANR	4040029	Identifier	proto_class_name		4039718	0					
ANR	4040030	CallExpression	"zend_string_init ( class_name , strlen ( class_name ) , 0 )"		4039718	1					
ANR	4040031	Callee	zend_string_init		4039718	0					
ANR	4040032	Identifier	zend_string_init		4039718	0					
ANR	4040033	ArgumentList	class_name		4039718	1					
ANR	4040034	Argument	class_name		4039718	0					
ANR	4040035	Identifier	class_name		4039718	0					
ANR	4040036	Argument	strlen ( class_name )		4039718	1					
ANR	4040037	CallExpression	strlen ( class_name )		4039718	0					
ANR	4040038	Callee	strlen		4039718	0					
ANR	4040039	Identifier	strlen		4039718	0					
ANR	4040040	ArgumentList	class_name		4039718	1					
ANR	4040041	Argument	class_name		4039718	0					
ANR	4040042	Identifier	class_name		4039718	0					
ANR	4040043	Argument	0		4039718	2					
ANR	4040044	PrimaryExpression	0		4039718	0					
ANR	4040045	IfStatement	"if ( strcasecmp ( ZSTR_VAL ( fe_class_name ) , ZSTR_VAL ( proto_class_name ) ) != 0 )"		4039718	6					
ANR	4040046	Condition	"strcasecmp ( ZSTR_VAL ( fe_class_name ) , ZSTR_VAL ( proto_class_name ) ) != 0"	215:6:7403:7470	4039718	0	True				
ANR	4040047	EqualityExpression	"strcasecmp ( ZSTR_VAL ( fe_class_name ) , ZSTR_VAL ( proto_class_name ) ) != 0"		4039718	0		!=			
ANR	4040048	CallExpression	"strcasecmp ( ZSTR_VAL ( fe_class_name ) , ZSTR_VAL ( proto_class_name ) )"		4039718	0					
ANR	4040049	Callee	strcasecmp		4039718	0					
ANR	4040050	Identifier	strcasecmp		4039718	0					
ANR	4040051	ArgumentList	ZSTR_VAL ( fe_class_name )		4039718	1					
ANR	4040052	Argument	ZSTR_VAL ( fe_class_name )		4039718	0					
ANR	4040053	CallExpression	ZSTR_VAL ( fe_class_name )		4039718	0					
ANR	4040054	Callee	ZSTR_VAL		4039718	0					
ANR	4040055	Identifier	ZSTR_VAL		4039718	0					
ANR	4040056	ArgumentList	fe_class_name		4039718	1					
ANR	4040057	Argument	fe_class_name		4039718	0					
ANR	4040058	Identifier	fe_class_name		4039718	0					
ANR	4040059	Argument	ZSTR_VAL ( proto_class_name )		4039718	1					
ANR	4040060	CallExpression	ZSTR_VAL ( proto_class_name )		4039718	0					
ANR	4040061	Callee	ZSTR_VAL		4039718	0					
ANR	4040062	Identifier	ZSTR_VAL		4039718	0					
ANR	4040063	ArgumentList	proto_class_name		4039718	1					
ANR	4040064	Argument	proto_class_name		4039718	0					
ANR	4040065	Identifier	proto_class_name		4039718	0					
ANR	4040066	PrimaryExpression	0		4039718	1					
ANR	4040067	CompoundStatement		45:76:1736:1736	4039718	1					
ANR	4040068	IfStatement	if ( fe -> common . type != ZEND_USER_FUNCTION )		4039718	0					
ANR	4040069	Condition	fe -> common . type != ZEND_USER_FUNCTION	216:7:7482:7518	4039718	0	True				
ANR	4040070	EqualityExpression	fe -> common . type != ZEND_USER_FUNCTION		4039718	0		!=			
ANR	4040071	MemberAccess	fe -> common . type		4039718	0					
ANR	4040072	PtrMemberAccess	fe -> common		4039718	0					
ANR	4040073	Identifier	fe		4039718	0					
ANR	4040074	Identifier	common		4039718	1					
ANR	4040075	Identifier	type		4039718	1					
ANR	4040076	Identifier	ZEND_USER_FUNCTION		4039718	1					
ANR	4040077	CompoundStatement		46:46:1784:1784	4039718	1					
ANR	4040078	ExpressionStatement	zend_string_release ( proto_class_name )	217:4:7527:7564	4039718	0	True				
ANR	4040079	CallExpression	zend_string_release ( proto_class_name )		4039718	0					
ANR	4040080	Callee	zend_string_release		4039718	0					
ANR	4040081	Identifier	zend_string_release		4039718	0					
ANR	4040082	ArgumentList	proto_class_name		4039718	1					
ANR	4040083	Argument	proto_class_name		4039718	0					
ANR	4040084	Identifier	proto_class_name		4039718	0					
ANR	4040085	ExpressionStatement	zend_string_release ( fe_class_name )	218:4:7570:7604	4039718	1	True				
ANR	4040086	CallExpression	zend_string_release ( fe_class_name )		4039718	0					
ANR	4040087	Callee	zend_string_release		4039718	0					
ANR	4040088	Identifier	zend_string_release		4039718	0					
ANR	4040089	ArgumentList	fe_class_name		4039718	1					
ANR	4040090	Argument	fe_class_name		4039718	0					
ANR	4040091	Identifier	fe_class_name		4039718	0					
ANR	4040092	ReturnStatement	return 0 ;	219:4:7610:7618	4039718	2	True				
ANR	4040093	PrimaryExpression	0		4039718	0					
ANR	4040094	ElseStatement	else		4039718	0					
ANR	4040095	CompoundStatement		51:4:1899:1933	4039718	0					
ANR	4040096	IdentifierDeclStatement	"zend_class_entry * fe_ce , * proto_ce ;"	221:4:7636:7670	4039718	0	True				
ANR	4040097	IdentifierDecl	* fe_ce		4039718	0					
ANR	4040098	IdentifierDeclType	zend_class_entry *		4039718	0					
ANR	4040099	Identifier	fe_ce		4039718	1					
ANR	4040100	IdentifierDecl	* proto_ce		4039718	1					
ANR	4040101	IdentifierDeclType	zend_class_entry *		4039718	0					
ANR	4040102	Identifier	proto_ce		4039718	1					
ANR	4040103	ExpressionStatement	fe_ce = zend_lookup_class ( fe_class_name )	223:4:7677:7717	4039718	1	True				
ANR	4040104	AssignmentExpression	fe_ce = zend_lookup_class ( fe_class_name )		4039718	0		=			
ANR	4040105	Identifier	fe_ce		4039718	0					
ANR	4040106	CallExpression	zend_lookup_class ( fe_class_name )		4039718	1					
ANR	4040107	Callee	zend_lookup_class		4039718	0					
ANR	4040108	Identifier	zend_lookup_class		4039718	0					
ANR	4040109	ArgumentList	fe_class_name		4039718	1					
ANR	4040110	Argument	fe_class_name		4039718	0					
ANR	4040111	Identifier	fe_class_name		4039718	0					
ANR	4040112	ExpressionStatement	proto_ce = zend_lookup_class ( proto_class_name )	224:4:7723:7769	4039718	2	True				
ANR	4040113	AssignmentExpression	proto_ce = zend_lookup_class ( proto_class_name )		4039718	0		=			
ANR	4040114	Identifier	proto_ce		4039718	0					
ANR	4040115	CallExpression	zend_lookup_class ( proto_class_name )		4039718	1					
ANR	4040116	Callee	zend_lookup_class		4039718	0					
ANR	4040117	Identifier	zend_lookup_class		4039718	0					
ANR	4040118	ArgumentList	proto_class_name		4039718	1					
ANR	4040119	Argument	proto_class_name		4039718	0					
ANR	4040120	Identifier	proto_class_name		4039718	0					
ANR	4040121	IfStatement	if ( ! fe_ce || ! proto_ce || fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce )		4039718	3					
ANR	4040122	Condition	! fe_ce || ! proto_ce || fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce	227:8:7812:7948	4039718	0	True				
ANR	4040123	OrExpression	! fe_ce || ! proto_ce || fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce		4039718	0		||			
ANR	4040124	UnaryOperationExpression	! fe_ce		4039718	0					
ANR	4040125	UnaryOperator	!		4039718	0					
ANR	4040126	Identifier	fe_ce		4039718	1					
ANR	4040127	OrExpression	! proto_ce || fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce		4039718	1		||			
ANR	4040128	UnaryOperationExpression	! proto_ce		4039718	0					
ANR	4040129	UnaryOperator	!		4039718	0					
ANR	4040130	Identifier	proto_ce		4039718	1					
ANR	4040131	OrExpression	fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce		4039718	1		||			
ANR	4040132	EqualityExpression	fe_ce -> type == ZEND_INTERNAL_CLASS		4039718	0		==			
ANR	4040133	PtrMemberAccess	fe_ce -> type		4039718	0					
ANR	4040134	Identifier	fe_ce		4039718	0					
ANR	4040135	Identifier	type		4039718	1					
ANR	4040136	Identifier	ZEND_INTERNAL_CLASS		4039718	1					
ANR	4040137	OrExpression	proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce		4039718	1		||			
ANR	4040138	EqualityExpression	proto_ce -> type == ZEND_INTERNAL_CLASS		4039718	0		==			
ANR	4040139	PtrMemberAccess	proto_ce -> type		4039718	0					
ANR	4040140	Identifier	proto_ce		4039718	0					
ANR	4040141	Identifier	type		4039718	1					
ANR	4040142	Identifier	ZEND_INTERNAL_CLASS		4039718	1					
ANR	4040143	EqualityExpression	fe_ce != proto_ce		4039718	1		!=			
ANR	4040144	Identifier	fe_ce		4039718	0					
ANR	4040145	Identifier	proto_ce		4039718	1					
ANR	4040146	CompoundStatement		60:25:2214:2214	4039718	1					
ANR	4040147	ExpressionStatement	zend_string_release ( proto_class_name )	231:5:7958:7995	4039718	0	True				
ANR	4040148	CallExpression	zend_string_release ( proto_class_name )		4039718	0					
ANR	4040149	Callee	zend_string_release		4039718	0					
ANR	4040150	Identifier	zend_string_release		4039718	0					
ANR	4040151	ArgumentList	proto_class_name		4039718	1					
ANR	4040152	Argument	proto_class_name		4039718	0					
ANR	4040153	Identifier	proto_class_name		4039718	0					
ANR	4040154	ExpressionStatement	zend_string_release ( fe_class_name )	232:5:8002:8036	4039718	1	True				
ANR	4040155	CallExpression	zend_string_release ( fe_class_name )		4039718	0					
ANR	4040156	Callee	zend_string_release		4039718	0					
ANR	4040157	Identifier	zend_string_release		4039718	0					
ANR	4040158	ArgumentList	fe_class_name		4039718	1					
ANR	4040159	Argument	fe_class_name		4039718	0					
ANR	4040160	Identifier	fe_class_name		4039718	0					
ANR	4040161	ReturnStatement	return 0 ;	233:5:8043:8051	4039718	2	True				
ANR	4040162	PrimaryExpression	0		4039718	0					
ANR	4040163	ExpressionStatement	zend_string_release ( proto_class_name )	237:2:8070:8107	4039718	7	True				
ANR	4040164	CallExpression	zend_string_release ( proto_class_name )		4039718	0					
ANR	4040165	Callee	zend_string_release		4039718	0					
ANR	4040166	Identifier	zend_string_release		4039718	0					
ANR	4040167	ArgumentList	proto_class_name		4039718	1					
ANR	4040168	Argument	proto_class_name		4039718	0					
ANR	4040169	Identifier	proto_class_name		4039718	0					
ANR	4040170	ExpressionStatement	zend_string_release ( fe_class_name )	238:2:8111:8145	4039718	8	True				
ANR	4040171	CallExpression	zend_string_release ( fe_class_name )		4039718	0					
ANR	4040172	Callee	zend_string_release		4039718	0					
ANR	4040173	Identifier	zend_string_release		4039718	0					
ANR	4040174	ArgumentList	fe_class_name		4039718	1					
ANR	4040175	Argument	fe_class_name		4039718	0					
ANR	4040176	Identifier	fe_class_name		4039718	0					
ANR	4040177	IfStatement	if ( fe_arg_info -> type_hint != proto_arg_info -> type_hint )		4039718	2					
ANR	4040178	Condition	fe_arg_info -> type_hint != proto_arg_info -> type_hint	241:5:8156:8206	4039718	0	True				
ANR	4040179	EqualityExpression	fe_arg_info -> type_hint != proto_arg_info -> type_hint		4039718	0		!=			
ANR	4040180	PtrMemberAccess	fe_arg_info -> type_hint		4039718	0					
ANR	4040181	Identifier	fe_arg_info		4039718	0					
ANR	4040182	Identifier	type_hint		4039718	1					
ANR	4040183	PtrMemberAccess	proto_arg_info -> type_hint		4039718	1					
ANR	4040184	Identifier	proto_arg_info		4039718	0					
ANR	4040185	Identifier	type_hint		4039718	1					
ANR	4040186	CompoundStatement		71:58:2472:2472	4039718	1					
ANR	4040187	ReturnStatement	return 0 ;	243:2:8244:8252	4039718	0	True				
ANR	4040188	PrimaryExpression	0		4039718	0					
ANR	4040189	ReturnStatement	return 1 ;	246:1:8259:8267	4039718	3	True				
ANR	4040190	PrimaryExpression	1		4039718	0					
ANR	4040191	ReturnType	static int		4039718	1					
ANR	4040192	Identifier	zend_do_perform_type_hint_check		4039718	2					
ANR	4040193	ParameterList	"const zend_function * fe , zend_arg_info * fe_arg_info , const zend_function * proto , zend_arg_info * proto_arg_info"		4039718	3					
ANR	4040194	Parameter	const zend_function * fe	170:43:5614:5636	4039718	0	True				
ANR	4040195	ParameterType	const zend_function *		4039718	0					
ANR	4040196	Identifier	fe		4039718	1					
ANR	4040197	Parameter	zend_arg_info * fe_arg_info	170:68:5639:5664	4039718	1	True				
ANR	4040198	ParameterType	zend_arg_info *		4039718	0					
ANR	4040199	Identifier	fe_arg_info		4039718	1					
ANR	4040200	Parameter	const zend_function * proto	170:96:5667:5692	4039718	2	True				
ANR	4040201	ParameterType	const zend_function *		4039718	0					
ANR	4040202	Identifier	proto		4039718	1					
ANR	4040203	Parameter	zend_arg_info * proto_arg_info	170:124:5695:5723	4039718	3	True				
ANR	4040204	ParameterType	zend_arg_info *		4039718	0					
ANR	4040205	Identifier	proto_arg_info		4039718	1					
ANR	4040206	CFGEntryNode	ENTRY		4039718		True				
ANR	4040207	CFGExitNode	EXIT		4039718		True				
ANR	4040208	Symbol	* fe -> common . scope		4039718						
ANR	4040209	Symbol	proto -> common . scope -> parent		4039718						
ANR	4040210	Symbol	* proto_arg_info		4039718						
ANR	4040211	Symbol	proto_arg_info -> class_name		4039718						
ANR	4040212	Symbol	proto_class_name		4039718						
ANR	4040213	Symbol	fe -> common . scope -> name		4039718						
ANR	4040214	Symbol	ZEND_INTERNAL_FUNCTION		4039718						
ANR	4040215	Symbol	strlen		4039718						
ANR	4040216	Symbol	zend_string_init		4039718						
ANR	4040217	Symbol	proto_ce		4039718						
ANR	4040218	Symbol	* proto -> common		4039718						
ANR	4040219	Symbol	ZEND_USER_FUNCTION		4039718						
ANR	4040220	Symbol	strcasecmp		4039718						
ANR	4040221	Symbol	ZEND_INTERNAL_CLASS		4039718						
ANR	4040222	Symbol	proto_arg_info		4039718						
ANR	4040223	Symbol	NULL		4039718						
ANR	4040224	Symbol	* * fe		4039718						
ANR	4040225	Symbol	fe_class_name		4039718						
ANR	4040226	Symbol	zend_string_copy		4039718						
ANR	4040227	Symbol	zend_lookup_class		4039718						
ANR	4040228	Symbol	fe_ce		4039718						
ANR	4040229	Symbol	* proto		4039718						
ANR	4040230	Symbol	proto		4039718						
ANR	4040231	Symbol	* fe_arg_info		4039718						
ANR	4040232	Symbol	* proto -> common . scope -> parent		4039718						
ANR	4040233	Symbol	fe		4039718						
ANR	4040234	Symbol	( ( zend_internal_arg_info * ) fe_arg_info ) -> class_name		4039718						
ANR	4040235	Symbol	* fe_ce		4039718						
ANR	4040236	Symbol	( ( zend_internal_arg_info * ) proto_arg_info ) -> class_name		4039718						
ANR	4040237	Symbol	* fe -> common		4039718						
ANR	4040238	Symbol	fe -> type		4039718						
ANR	4040239	Symbol	* * * proto		4039718						
ANR	4040240	Symbol	fe_arg_info -> type_hint		4039718						
ANR	4040241	Symbol	proto -> common . scope		4039718						
ANR	4040242	Symbol	* * proto		4039718						
ANR	4040243	Symbol	fe -> common . scope		4039718						
ANR	4040244	Symbol	* * proto -> common		4039718						
ANR	4040245	Symbol	class_name		4039718						
ANR	4040246	Symbol	fe_arg_info -> class_name		4039718						
ANR	4040247	Symbol	fe -> common		4039718						
ANR	4040248	Symbol	fe -> common . type		4039718						
ANR	4040249	Symbol	* fe		4039718						
ANR	4040250	Symbol	proto_arg_info -> type_hint		4039718						
ANR	4040251	Symbol	* * proto -> common . scope		4039718						
ANR	4040252	Symbol	* proto_ce		4039718						
ANR	4040253	Symbol	proto -> common . scope -> parent -> name		4039718						
ANR	4040254	Symbol	ZSTR_VAL		4039718						
ANR	4040255	Symbol	proto -> common . scope -> name		4039718						
ANR	4040256	Symbol	ZEND_LOG_XOR		4039718						
ANR	4040257	Symbol	fe_arg_info		4039718						
ANR	4040258	Symbol	* proto -> common . scope		4039718						
ANR	4040259	Symbol	fe_ce -> type		4039718						
ANR	4040260	Symbol	proto -> common		4039718						
ANR	4040261	Symbol	proto_ce -> type		4039718						
ANR	4040262	Symbol	proto -> type		4039718						
ANR	4040263	Function	zend_do_perform_implementation_check	250:0:8282:11291							
ANR	4040264	FunctionDef	"zend_do_perform_implementation_check (const zend_function * fe , const zend_function * proto)"		4040263	0					
ANR	4040265	CompoundStatement		251:0:8399:11291	4040263	0					
ANR	4040266	IdentifierDeclStatement	"uint32_t i , num_args ;"	252:1:8402:8422	4040263	0	True				
ANR	4040267	IdentifierDecl	i		4040263	0					
ANR	4040268	IdentifierDeclType	uint32_t		4040263	0					
ANR	4040269	Identifier	i		4040263	1					
ANR	4040270	IdentifierDecl	num_args		4040263	1					
ANR	4040271	IdentifierDeclType	uint32_t		4040263	0					
ANR	4040272	Identifier	num_args		4040263	1					
ANR	4040273	IfStatement	if ( ! proto || ( ! proto -> common . arg_info && proto -> common . type != ZEND_USER_FUNCTION ) )		4040263	1					
ANR	4040274	Condition	! proto || ( ! proto -> common . arg_info && proto -> common . type != ZEND_USER_FUNCTION )	258:5:8683:8761	4040263	0	True				
ANR	4040275	OrExpression	! proto || ( ! proto -> common . arg_info && proto -> common . type != ZEND_USER_FUNCTION )		4040263	0		||			
ANR	4040276	UnaryOperationExpression	! proto		4040263	0					
ANR	4040277	UnaryOperator	!		4040263	0					
ANR	4040278	Identifier	proto		4040263	1					
ANR	4040279	AndExpression	! proto -> common . arg_info && proto -> common . type != ZEND_USER_FUNCTION		4040263	1		&&			
ANR	4040280	UnaryOperationExpression	! proto -> common . arg_info		4040263	0					
ANR	4040281	UnaryOperator	!		4040263	0					
ANR	4040282	MemberAccess	proto -> common . arg_info		4040263	1					
ANR	4040283	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040284	Identifier	proto		4040263	0					
ANR	4040285	Identifier	common		4040263	1					
ANR	4040286	Identifier	arg_info		4040263	1					
ANR	4040287	EqualityExpression	proto -> common . type != ZEND_USER_FUNCTION		4040263	1		!=			
ANR	4040288	MemberAccess	proto -> common . type		4040263	0					
ANR	4040289	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040290	Identifier	proto		4040263	0					
ANR	4040291	Identifier	common		4040263	1					
ANR	4040292	Identifier	type		4040263	1					
ANR	4040293	Identifier	ZEND_USER_FUNCTION		4040263	1					
ANR	4040294	CompoundStatement		8:86:364:364	4040263	1					
ANR	4040295	ReturnStatement	return 1 ;	259:2:8768:8776	4040263	0	True				
ANR	4040296	PrimaryExpression	1		4040263	0					
ANR	4040297	IfStatement	if ( ( fe -> common . fn_flags & ZEND_ACC_CTOR ) && ( ( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && ( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0 ) )		4040263	2					
ANR	4040298	Condition	( fe -> common . fn_flags & ZEND_ACC_CTOR ) && ( ( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && ( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0 )	265:5:8900:9057	4040263	0	True				
ANR	4040299	AndExpression	( fe -> common . fn_flags & ZEND_ACC_CTOR ) && ( ( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && ( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0 )		4040263	0		&&			
ANR	4040300	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_CTOR		4040263	0		&			
ANR	4040301	MemberAccess	fe -> common . fn_flags		4040263	0					
ANR	4040302	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040303	Identifier	fe		4040263	0					
ANR	4040304	Identifier	common		4040263	1					
ANR	4040305	Identifier	fn_flags		4040263	1					
ANR	4040306	Identifier	ZEND_ACC_CTOR		4040263	1					
ANR	4040307	AndExpression	( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && ( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0		4040263	1		&&			
ANR	4040308	EqualityExpression	( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0		4040263	0		==			
ANR	4040309	BitAndExpression	proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		4040263	0		&			
ANR	4040310	PtrMemberAccess	proto -> common . scope -> ce_flags		4040263	0					
ANR	4040311	MemberAccess	proto -> common . scope		4040263	0					
ANR	4040312	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040313	Identifier	proto		4040263	0					
ANR	4040314	Identifier	common		4040263	1					
ANR	4040315	Identifier	scope		4040263	1					
ANR	4040316	Identifier	ce_flags		4040263	1					
ANR	4040317	Identifier	ZEND_ACC_INTERFACE		4040263	1					
ANR	4040318	PrimaryExpression	0		4040263	1					
ANR	4040319	EqualityExpression	( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0		4040263	1		==			
ANR	4040320	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_ABSTRACT		4040263	0		&			
ANR	4040321	MemberAccess	proto -> common . fn_flags		4040263	0					
ANR	4040322	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040323	Identifier	proto		4040263	0					
ANR	4040324	Identifier	common		4040263	1					
ANR	4040325	Identifier	fn_flags		4040263	1					
ANR	4040326	Identifier	ZEND_ACC_ABSTRACT		4040263	1					
ANR	4040327	PrimaryExpression	0		4040263	1					
ANR	4040328	CompoundStatement		17:58:660:660	4040263	1					
ANR	4040329	ReturnStatement	return 1 ;	268:2:9064:9072	4040263	0	True				
ANR	4040330	PrimaryExpression	1		4040263	0					
ANR	4040331	IfStatement	if ( ( fe -> common . fn_flags & ZEND_ACC_PRIVATE ) && ( proto -> common . fn_flags & ZEND_ACC_PRIVATE ) )		4040263	3					
ANR	4040332	Condition	( fe -> common . fn_flags & ZEND_ACC_PRIVATE ) && ( proto -> common . fn_flags & ZEND_ACC_PRIVATE )	272:8:9148:9234	4040263	0	True				
ANR	4040333	AndExpression	( fe -> common . fn_flags & ZEND_ACC_PRIVATE ) && ( proto -> common . fn_flags & ZEND_ACC_PRIVATE )		4040263	0		&&			
ANR	4040334	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_PRIVATE		4040263	0		&			
ANR	4040335	MemberAccess	fe -> common . fn_flags		4040263	0					
ANR	4040336	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040337	Identifier	fe		4040263	0					
ANR	4040338	Identifier	common		4040263	1					
ANR	4040339	Identifier	fn_flags		4040263	1					
ANR	4040340	Identifier	ZEND_ACC_PRIVATE		4040263	1					
ANR	4040341	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_PRIVATE		4040263	1		&			
ANR	4040342	MemberAccess	proto -> common . fn_flags		4040263	0					
ANR	4040343	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040344	Identifier	proto		4040263	0					
ANR	4040345	Identifier	common		4040263	1					
ANR	4040346	Identifier	fn_flags		4040263	1					
ANR	4040347	Identifier	ZEND_ACC_PRIVATE		4040263	1					
ANR	4040348	CompoundStatement		22:97:837:837	4040263	1					
ANR	4040349	ReturnStatement	return 1 ;	273:2:9241:9249	4040263	0	True				
ANR	4040350	PrimaryExpression	1		4040263	0					
ANR	4040351	IfStatement	if ( proto -> common . required_num_args < fe -> common . required_num_args || proto -> common . num_args > fe -> common . num_args )		4040263	4					
ANR	4040352	Condition	proto -> common . required_num_args < fe -> common . required_num_args || proto -> common . num_args > fe -> common . num_args	277:5:9293:9404	4040263	0	True				
ANR	4040353	OrExpression	proto -> common . required_num_args < fe -> common . required_num_args || proto -> common . num_args > fe -> common . num_args		4040263	0		||			
ANR	4040354	RelationalExpression	proto -> common . required_num_args < fe -> common . required_num_args		4040263	0		<			
ANR	4040355	MemberAccess	proto -> common . required_num_args		4040263	0					
ANR	4040356	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040357	Identifier	proto		4040263	0					
ANR	4040358	Identifier	common		4040263	1					
ANR	4040359	Identifier	required_num_args		4040263	1					
ANR	4040360	MemberAccess	fe -> common . required_num_args		4040263	1					
ANR	4040361	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040362	Identifier	fe		4040263	0					
ANR	4040363	Identifier	common		4040263	1					
ANR	4040364	Identifier	required_num_args		4040263	1					
ANR	4040365	RelationalExpression	proto -> common . num_args > fe -> common . num_args		4040263	1		>			
ANR	4040366	MemberAccess	proto -> common . num_args		4040263	0					
ANR	4040367	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040368	Identifier	proto		4040263	0					
ANR	4040369	Identifier	common		4040263	1					
ANR	4040370	Identifier	num_args		4040263	1					
ANR	4040371	MemberAccess	fe -> common . num_args		4040263	1					
ANR	4040372	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040373	Identifier	fe		4040263	0					
ANR	4040374	Identifier	common		4040263	1					
ANR	4040375	Identifier	num_args		4040263	1					
ANR	4040376	CompoundStatement		28:51:1007:1007	4040263	1					
ANR	4040377	ReturnStatement	return 0 ;	279:2:9411:9419	4040263	0	True				
ANR	4040378	PrimaryExpression	0		4040263	0					
ANR	4040379	IfStatement	if ( ( proto -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE ) && ! ( fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE ) )		4040263	5					
ANR	4040380	Condition	( proto -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE ) && ! ( fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE )	283:5:9487:9594	4040263	0	True				
ANR	4040381	AndExpression	( proto -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE ) && ! ( fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE )		4040263	0		&&			
ANR	4040382	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE		4040263	0		&			
ANR	4040383	MemberAccess	proto -> common . fn_flags		4040263	0					
ANR	4040384	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040385	Identifier	proto		4040263	0					
ANR	4040386	Identifier	common		4040263	1					
ANR	4040387	Identifier	fn_flags		4040263	1					
ANR	4040388	Identifier	ZEND_ACC_RETURN_REFERENCE		4040263	1					
ANR	4040389	UnaryOperationExpression	! ( fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE )		4040263	1					
ANR	4040390	UnaryOperator	!		4040263	0					
ANR	4040391	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE		4040263	1		&			
ANR	4040392	MemberAccess	fe -> common . fn_flags		4040263	0					
ANR	4040393	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040394	Identifier	fe		4040263	0					
ANR	4040395	Identifier	common		4040263	1					
ANR	4040396	Identifier	fn_flags		4040263	1					
ANR	4040397	Identifier	ZEND_ACC_RETURN_REFERENCE		4040263	1					
ANR	4040398	CompoundStatement		34:57:1197:1197	4040263	1					
ANR	4040399	ReturnStatement	return 0 ;	285:2:9601:9609	4040263	0	True				
ANR	4040400	PrimaryExpression	0		4040263	0					
ANR	4040401	IfStatement	if ( ( proto -> common . fn_flags & ZEND_ACC_VARIADIC ) && ! ( fe -> common . fn_flags & ZEND_ACC_VARIADIC ) )		4040263	6					
ANR	4040402	Condition	( proto -> common . fn_flags & ZEND_ACC_VARIADIC ) && ! ( fe -> common . fn_flags & ZEND_ACC_VARIADIC )	288:5:9620:9711	4040263	0	True				
ANR	4040403	AndExpression	( proto -> common . fn_flags & ZEND_ACC_VARIADIC ) && ! ( fe -> common . fn_flags & ZEND_ACC_VARIADIC )		4040263	0		&&			
ANR	4040404	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_VARIADIC		4040263	0		&			
ANR	4040405	MemberAccess	proto -> common . fn_flags		4040263	0					
ANR	4040406	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040407	Identifier	proto		4040263	0					
ANR	4040408	Identifier	common		4040263	1					
ANR	4040409	Identifier	fn_flags		4040263	1					
ANR	4040410	Identifier	ZEND_ACC_VARIADIC		4040263	1					
ANR	4040411	UnaryOperationExpression	! ( fe -> common . fn_flags & ZEND_ACC_VARIADIC )		4040263	1					
ANR	4040412	UnaryOperator	!		4040263	0					
ANR	4040413	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_VARIADIC		4040263	1		&			
ANR	4040414	MemberAccess	fe -> common . fn_flags		4040263	0					
ANR	4040415	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040416	Identifier	fe		4040263	0					
ANR	4040417	Identifier	common		4040263	1					
ANR	4040418	Identifier	fn_flags		4040263	1					
ANR	4040419	Identifier	ZEND_ACC_VARIADIC		4040263	1					
ANR	4040420	CompoundStatement		39:49:1314:1314	4040263	1					
ANR	4040421	ReturnStatement	return 0 ;	290:2:9718:9726	4040263	0	True				
ANR	4040422	PrimaryExpression	0		4040263	0					
ANR	4040423	ExpressionStatement	num_args = proto -> common . num_args	297:1:10009:10042	4040263	7	True				
ANR	4040424	AssignmentExpression	num_args = proto -> common . num_args		4040263	0		=			
ANR	4040425	Identifier	num_args		4040263	0					
ANR	4040426	MemberAccess	proto -> common . num_args		4040263	1					
ANR	4040427	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040428	Identifier	proto		4040263	0					
ANR	4040429	Identifier	common		4040263	1					
ANR	4040430	Identifier	num_args		4040263	1					
ANR	4040431	IfStatement	if ( proto -> common . fn_flags & ZEND_ACC_VARIADIC )		4040263	8					
ANR	4040432	Condition	proto -> common . fn_flags & ZEND_ACC_VARIADIC	298:5:10049:10090	4040263	0	True				
ANR	4040433	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_VARIADIC		4040263	0		&			
ANR	4040434	MemberAccess	proto -> common . fn_flags		4040263	0					
ANR	4040435	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040436	Identifier	proto		4040263	0					
ANR	4040437	Identifier	common		4040263	1					
ANR	4040438	Identifier	fn_flags		4040263	1					
ANR	4040439	Identifier	ZEND_ACC_VARIADIC		4040263	1					
ANR	4040440	CompoundStatement		48:49:1693:1693	4040263	1					
ANR	4040441	ExpressionStatement	num_args ++	299:2:10097:10107	4040263	0	True				
ANR	4040442	PostIncDecOperationExpression	num_args ++		4040263	0					
ANR	4040443	Identifier	num_args		4040263	0					
ANR	4040444	IncDec	++		4040263	1					
ANR	4040445	IfStatement	if ( fe -> common . num_args >= proto -> common . num_args )		4040263	1					
ANR	4040446	Condition	fe -> common . num_args >= proto -> common . num_args	300:12:10121:10165	4040263	0	True				
ANR	4040447	RelationalExpression	fe -> common . num_args >= proto -> common . num_args		4040263	0		>=			
ANR	4040448	MemberAccess	fe -> common . num_args		4040263	0					
ANR	4040449	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040450	Identifier	fe		4040263	0					
ANR	4040451	Identifier	common		4040263	1					
ANR	4040452	Identifier	num_args		4040263	1					
ANR	4040453	MemberAccess	proto -> common . num_args		4040263	1					
ANR	4040454	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040455	Identifier	proto		4040263	0					
ANR	4040456	Identifier	common		4040263	1					
ANR	4040457	Identifier	num_args		4040263	1					
ANR	4040458	CompoundStatement		50:59:1768:1768	4040263	1					
ANR	4040459	ExpressionStatement	num_args = fe -> common . num_args	301:3:10173:10203	4040263	0	True				
ANR	4040460	AssignmentExpression	num_args = fe -> common . num_args		4040263	0		=			
ANR	4040461	Identifier	num_args		4040263	0					
ANR	4040462	MemberAccess	fe -> common . num_args		4040263	1					
ANR	4040463	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040464	Identifier	fe		4040263	0					
ANR	4040465	Identifier	common		4040263	1					
ANR	4040466	Identifier	num_args		4040263	1					
ANR	4040467	IfStatement	if ( fe -> common . fn_flags & ZEND_ACC_VARIADIC )		4040263	1					
ANR	4040468	Condition	fe -> common . fn_flags & ZEND_ACC_VARIADIC	302:7:10212:10250	4040263	0	True				
ANR	4040469	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_VARIADIC		4040263	0		&			
ANR	4040470	MemberAccess	fe -> common . fn_flags		4040263	0					
ANR	4040471	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040472	Identifier	fe		4040263	0					
ANR	4040473	Identifier	common		4040263	1					
ANR	4040474	Identifier	fn_flags		4040263	1					
ANR	4040475	Identifier	ZEND_ACC_VARIADIC		4040263	1					
ANR	4040476	CompoundStatement		52:48:1853:1853	4040263	1					
ANR	4040477	ExpressionStatement	num_args ++	303:4:10259:10269	4040263	0	True				
ANR	4040478	PostIncDecOperationExpression	num_args ++		4040263	0					
ANR	4040479	Identifier	num_args		4040263	0					
ANR	4040480	IncDec	++		4040263	1					
ANR	4040481	ForStatement	for ( i = 0 ; i < num_args ; i ++ )		4040263	9					
ANR	4040482	ForInit	i = 0 ;	308:6:10290:10295	4040263	0	True				
ANR	4040483	AssignmentExpression	i = 0		4040263	0		=			
ANR	4040484	Identifier	i		4040263	0					
ANR	4040485	PrimaryExpression	0		4040263	1					
ANR	4040486	Condition	i < num_args	308:13:10297:10308	4040263	1	True				
ANR	4040487	RelationalExpression	i < num_args		4040263	0		<			
ANR	4040488	Identifier	i		4040263	0					
ANR	4040489	Identifier	num_args		4040263	1					
ANR	4040490	PostIncDecOperationExpression	i ++	308:27:10311:10313	4040263	2	True				
ANR	4040491	Identifier	i		4040263	0					
ANR	4040492	IncDec	++		4040263	1					
ANR	4040493	CompoundStatement		61:2:1977:2006	4040263	3					
ANR	4040494	IdentifierDeclStatement	zend_arg_info * fe_arg_info = & fe -> common . arg_info [ i ] ;	309:2:10320:10372	4040263	0	True				
ANR	4040495	IdentifierDecl	* fe_arg_info = & fe -> common . arg_info [ i ]		4040263	0					
ANR	4040496	IdentifierDeclType	zend_arg_info *		4040263	0					
ANR	4040497	Identifier	fe_arg_info		4040263	1					
ANR	4040498	AssignmentExpression	* fe_arg_info = & fe -> common . arg_info [ i ]		4040263	2		=			
ANR	4040499	Identifier	fe_arg_info		4040263	0					
ANR	4040500	UnaryOperationExpression	& fe -> common . arg_info [ i ]		4040263	1					
ANR	4040501	UnaryOperator	&		4040263	0					
ANR	4040502	ArrayIndexing	fe -> common . arg_info [ i ]		4040263	1					
ANR	4040503	MemberAccess	fe -> common . arg_info		4040263	0					
ANR	4040504	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040505	Identifier	fe		4040263	0					
ANR	4040506	Identifier	common		4040263	1					
ANR	4040507	Identifier	arg_info		4040263	1					
ANR	4040508	Identifier	i		4040263	1					
ANR	4040509	IdentifierDeclStatement	zend_arg_info * proto_arg_info ;	311:2:10377:10406	4040263	1	True				
ANR	4040510	IdentifierDecl	* proto_arg_info		4040263	0					
ANR	4040511	IdentifierDeclType	zend_arg_info *		4040263	0					
ANR	4040512	Identifier	proto_arg_info		4040263	1					
ANR	4040513	IfStatement	if ( i < proto -> common . num_args )		4040263	2					
ANR	4040514	Condition	i < proto -> common . num_args	312:6:10414:10439	4040263	0	True				
ANR	4040515	RelationalExpression	i < proto -> common . num_args		4040263	0		<			
ANR	4040516	Identifier	i		4040263	0					
ANR	4040517	MemberAccess	proto -> common . num_args		4040263	1					
ANR	4040518	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040519	Identifier	proto		4040263	0					
ANR	4040520	Identifier	common		4040263	1					
ANR	4040521	Identifier	num_args		4040263	1					
ANR	4040522	CompoundStatement		62:34:2042:2042	4040263	1					
ANR	4040523	ExpressionStatement	proto_arg_info = & proto -> common . arg_info [ i ]	313:3:10447:10490	4040263	0	True				
ANR	4040524	AssignmentExpression	proto_arg_info = & proto -> common . arg_info [ i ]		4040263	0		=			
ANR	4040525	Identifier	proto_arg_info		4040263	0					
ANR	4040526	UnaryOperationExpression	& proto -> common . arg_info [ i ]		4040263	1					
ANR	4040527	UnaryOperator	&		4040263	0					
ANR	4040528	ArrayIndexing	proto -> common . arg_info [ i ]		4040263	1					
ANR	4040529	MemberAccess	proto -> common . arg_info		4040263	0					
ANR	4040530	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040531	Identifier	proto		4040263	0					
ANR	4040532	Identifier	common		4040263	1					
ANR	4040533	Identifier	arg_info		4040263	1					
ANR	4040534	Identifier	i		4040263	1					
ANR	4040535	ElseStatement	else		4040263	0					
ANR	4040536	CompoundStatement		64:9:2101:2101	4040263	0					
ANR	4040537	ExpressionStatement	proto_arg_info = & proto -> common . arg_info [ proto -> common . num_args ]	315:3:10506:10570	4040263	0	True				
ANR	4040538	AssignmentExpression	proto_arg_info = & proto -> common . arg_info [ proto -> common . num_args ]		4040263	0		=			
ANR	4040539	Identifier	proto_arg_info		4040263	0					
ANR	4040540	UnaryOperationExpression	& proto -> common . arg_info [ proto -> common . num_args ]		4040263	1					
ANR	4040541	UnaryOperator	&		4040263	0					
ANR	4040542	ArrayIndexing	proto -> common . arg_info [ proto -> common . num_args ]		4040263	1					
ANR	4040543	MemberAccess	proto -> common . arg_info		4040263	0					
ANR	4040544	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040545	Identifier	proto		4040263	0					
ANR	4040546	Identifier	common		4040263	1					
ANR	4040547	Identifier	arg_info		4040263	1					
ANR	4040548	MemberAccess	proto -> common . num_args		4040263	1					
ANR	4040549	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040550	Identifier	proto		4040263	0					
ANR	4040551	Identifier	common		4040263	1					
ANR	4040552	Identifier	num_args		4040263	1					
ANR	4040553	IfStatement	"if ( ! zend_do_perform_type_hint_check ( fe , fe_arg_info , proto , proto_arg_info ) )"		4040263	3					
ANR	4040554	Condition	"! zend_do_perform_type_hint_check ( fe , fe_arg_info , proto , proto_arg_info )"	318:6:10583:10654	4040263	0	True				
ANR	4040555	UnaryOperationExpression	"! zend_do_perform_type_hint_check ( fe , fe_arg_info , proto , proto_arg_info )"		4040263	0					
ANR	4040556	UnaryOperator	!		4040263	0					
ANR	4040557	CallExpression	"zend_do_perform_type_hint_check ( fe , fe_arg_info , proto , proto_arg_info )"		4040263	1					
ANR	4040558	Callee	zend_do_perform_type_hint_check		4040263	0					
ANR	4040559	Identifier	zend_do_perform_type_hint_check		4040263	0					
ANR	4040560	ArgumentList	fe		4040263	1					
ANR	4040561	Argument	fe		4040263	0					
ANR	4040562	Identifier	fe		4040263	0					
ANR	4040563	Argument	fe_arg_info		4040263	1					
ANR	4040564	Identifier	fe_arg_info		4040263	0					
ANR	4040565	Argument	proto		4040263	2					
ANR	4040566	Identifier	proto		4040263	0					
ANR	4040567	Argument	proto_arg_info		4040263	3					
ANR	4040568	Identifier	proto_arg_info		4040263	0					
ANR	4040569	CompoundStatement		68:80:2257:2257	4040263	1					
ANR	4040570	ReturnStatement	return 0 ;	319:3:10662:10670	4040263	0	True				
ANR	4040571	PrimaryExpression	0		4040263	0					
ANR	4040572	IfStatement	if ( fe_arg_info -> pass_by_reference != proto_arg_info -> pass_by_reference )		4040263	4					
ANR	4040573	Condition	fe_arg_info -> pass_by_reference != proto_arg_info -> pass_by_reference	323:6:10737:10803	4040263	0	True				
ANR	4040574	EqualityExpression	fe_arg_info -> pass_by_reference != proto_arg_info -> pass_by_reference		4040263	0		!=			
ANR	4040575	PtrMemberAccess	fe_arg_info -> pass_by_reference		4040263	0					
ANR	4040576	Identifier	fe_arg_info		4040263	0					
ANR	4040577	Identifier	pass_by_reference		4040263	1					
ANR	4040578	PtrMemberAccess	proto_arg_info -> pass_by_reference		4040263	1					
ANR	4040579	Identifier	proto_arg_info		4040263	0					
ANR	4040580	Identifier	pass_by_reference		4040263	1					
ANR	4040581	CompoundStatement		73:75:2406:2406	4040263	1					
ANR	4040582	ReturnStatement	return 0 ;	324:3:10811:10819	4040263	0	True				
ANR	4040583	PrimaryExpression	0		4040263	0					
ANR	4040584	IfStatement	if ( proto -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		4040263	10					
ANR	4040585	Condition	proto -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE	330:5:10979:11027	4040263	0	True				
ANR	4040586	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		4040263	0		&			
ANR	4040587	MemberAccess	proto -> common . fn_flags		4040263	0					
ANR	4040588	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040589	Identifier	proto		4040263	0					
ANR	4040590	Identifier	common		4040263	1					
ANR	4040591	Identifier	fn_flags		4040263	1					
ANR	4040592	Identifier	ZEND_ACC_HAS_RETURN_TYPE		4040263	1					
ANR	4040593	CompoundStatement		80:56:2630:2630	4040263	1					
ANR	4040594	IfStatement	if ( ! ( fe -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE ) )		4040263	0					
ANR	4040595	Condition	! ( fe -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )	332:6:11083:11131	4040263	0	True				
ANR	4040596	UnaryOperationExpression	! ( fe -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		4040263	0					
ANR	4040597	UnaryOperator	!		4040263	0					
ANR	4040598	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		4040263	1		&			
ANR	4040599	MemberAccess	fe -> common . fn_flags		4040263	0					
ANR	4040600	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040601	Identifier	fe		4040263	0					
ANR	4040602	Identifier	common		4040263	1					
ANR	4040603	Identifier	fn_flags		4040263	1					
ANR	4040604	Identifier	ZEND_ACC_HAS_RETURN_TYPE		4040263	1					
ANR	4040605	CompoundStatement		82:57:2734:2734	4040263	1					
ANR	4040606	ReturnStatement	return 0 ;	333:3:11139:11147	4040263	0	True				
ANR	4040607	PrimaryExpression	0		4040263	0					
ANR	4040608	IfStatement	"if ( ! zend_do_perform_type_hint_check ( fe , fe -> common . arg_info - 1 , proto , proto -> common . arg_info - 1 ) )"		4040263	1					
ANR	4040609	Condition	"! zend_do_perform_type_hint_check ( fe , fe -> common . arg_info - 1 , proto , proto -> common . arg_info - 1 )"	336:6:11160:11255	4040263	0	True				
ANR	4040610	UnaryOperationExpression	"! zend_do_perform_type_hint_check ( fe , fe -> common . arg_info - 1 , proto , proto -> common . arg_info - 1 )"		4040263	0					
ANR	4040611	UnaryOperator	!		4040263	0					
ANR	4040612	CallExpression	"zend_do_perform_type_hint_check ( fe , fe -> common . arg_info - 1 , proto , proto -> common . arg_info - 1 )"		4040263	1					
ANR	4040613	Callee	zend_do_perform_type_hint_check		4040263	0					
ANR	4040614	Identifier	zend_do_perform_type_hint_check		4040263	0					
ANR	4040615	ArgumentList	fe		4040263	1					
ANR	4040616	Argument	fe		4040263	0					
ANR	4040617	Identifier	fe		4040263	0					
ANR	4040618	Argument	fe -> common . arg_info - 1		4040263	1					
ANR	4040619	AdditiveExpression	fe -> common . arg_info - 1		4040263	0		-			
ANR	4040620	MemberAccess	fe -> common . arg_info		4040263	0					
ANR	4040621	PtrMemberAccess	fe -> common		4040263	0					
ANR	4040622	Identifier	fe		4040263	0					
ANR	4040623	Identifier	common		4040263	1					
ANR	4040624	Identifier	arg_info		4040263	1					
ANR	4040625	PrimaryExpression	1		4040263	1					
ANR	4040626	Argument	proto		4040263	2					
ANR	4040627	Identifier	proto		4040263	0					
ANR	4040628	Argument	proto -> common . arg_info - 1		4040263	3					
ANR	4040629	AdditiveExpression	proto -> common . arg_info - 1		4040263	0		-			
ANR	4040630	MemberAccess	proto -> common . arg_info		4040263	0					
ANR	4040631	PtrMemberAccess	proto -> common		4040263	0					
ANR	4040632	Identifier	proto		4040263	0					
ANR	4040633	Identifier	common		4040263	1					
ANR	4040634	Identifier	arg_info		4040263	1					
ANR	4040635	PrimaryExpression	1		4040263	1					
ANR	4040636	CompoundStatement		86:104:2858:2858	4040263	1					
ANR	4040637	ReturnStatement	return 0 ;	337:3:11263:11271	4040263	0	True				
ANR	4040638	PrimaryExpression	0		4040263	0					
ANR	4040639	ReturnStatement	return 1 ;	340:1:11281:11289	4040263	11	True				
ANR	4040640	PrimaryExpression	1		4040263	0					
ANR	4040641	ReturnType	static zend_bool		4040263	1					
ANR	4040642	Identifier	zend_do_perform_implementation_check		4040263	2					
ANR	4040643	ParameterList	"const zend_function * fe , const zend_function * proto"		4040263	3					
ANR	4040644	Parameter	const zend_function * fe	250:54:8336:8358	4040263	0	True				
ANR	4040645	ParameterType	const zend_function *		4040263	0					
ANR	4040646	Identifier	fe		4040263	1					
ANR	4040647	Parameter	const zend_function * proto	250:79:8361:8386	4040263	1	True				
ANR	4040648	ParameterType	const zend_function *		4040263	0					
ANR	4040649	Identifier	proto		4040263	1					
ANR	4040650	CFGEntryNode	ENTRY		4040263		True				
ANR	4040651	CFGExitNode	EXIT		4040263		True				
ANR	4040652	Symbol	fe_arg_info -> pass_by_reference		4040263						
ANR	4040653	Symbol	proto -> common . fn_flags		4040263						
ANR	4040654	Symbol	fe -> common . fn_flags		4040263						
ANR	4040655	Symbol	proto -> common . type		4040263						
ANR	4040656	Symbol	* proto_arg_info		4040263						
ANR	4040657	Symbol	fe -> common . num_args		4040263						
ANR	4040658	Symbol	num_args		4040263						
ANR	4040659	Symbol	* proto -> common		4040263						
ANR	4040660	Symbol	ZEND_USER_FUNCTION		4040263						
ANR	4040661	Symbol	proto -> common . scope		4040263						
ANR	4040662	Symbol	ZEND_ACC_INTERFACE		4040263						
ANR	4040663	Symbol	* * proto		4040263						
ANR	4040664	Symbol	fe -> common		4040263						
ANR	4040665	Symbol	proto -> common . arg_info		4040263						
ANR	4040666	Symbol	proto_arg_info		4040263						
ANR	4040667	Symbol	* fe		4040263						
ANR	4040668	Symbol	zend_do_perform_type_hint_check		4040263						
ANR	4040669	Symbol	ZEND_ACC_HAS_RETURN_TYPE		4040263						
ANR	4040670	Symbol	i		4040263						
ANR	4040671	Symbol	fe -> common . required_num_args		4040263						
ANR	4040672	Symbol	ZEND_ACC_PRIVATE		4040263						
ANR	4040673	Symbol	ZEND_ACC_ABSTRACT		4040263						
ANR	4040674	Symbol	ZEND_ACC_VARIADIC		4040263						
ANR	4040675	Symbol	* proto		4040263						
ANR	4040676	Symbol	fe_arg_info		4040263						
ANR	4040677	Symbol	proto -> common . required_num_args		4040263						
ANR	4040678	Symbol	* proto -> common . scope		4040263						
ANR	4040679	Symbol	ZEND_ACC_CTOR		4040263						
ANR	4040680	Symbol	proto -> common . num_args		4040263						
ANR	4040681	Symbol	fe -> common . arg_info		4040263						
ANR	4040682	Symbol	proto		4040263						
ANR	4040683	Symbol	proto -> common . scope -> ce_flags		4040263						
ANR	4040684	Symbol	ZEND_ACC_RETURN_REFERENCE		4040263						
ANR	4040685	Symbol	* fe_arg_info		4040263						
ANR	4040686	Symbol	proto -> common		4040263						
ANR	4040687	Symbol	proto_arg_info -> pass_by_reference		4040263						
ANR	4040688	Symbol	fe		4040263						
ANR	4040689	Function	zend_append_type_hint	344:0:11304:12691							
ANR	4040690	FunctionDef	"zend_append_type_hint (smart_str * str , const zend_function * fptr , zend_arg_info * arg_info , int return_hint)"		4040689	0					
ANR	4040691	CompoundStatement		345:0:11443:12691	4040689	0					
ANR	4040692	IfStatement	if ( arg_info -> class_name )		4040689	0					
ANR	4040693	Condition	arg_info -> class_name	346:5:11450:11469	4040689	0	True				
ANR	4040694	PtrMemberAccess	arg_info -> class_name		4040689	0					
ANR	4040695	Identifier	arg_info		4040689	0					
ANR	4040696	Identifier	class_name		4040689	1					
ANR	4040697	CompoundStatement		4:2:58:79	4040689	1					
ANR	4040698	IdentifierDeclStatement	const char * class_name ;	347:2:11476:11498	4040689	0	True				
ANR	4040699	IdentifierDecl	* class_name		4040689	0					
ANR	4040700	IdentifierDeclType	const char *		4040689	0					
ANR	4040701	Identifier	class_name		4040689	1					
ANR	4040702	IdentifierDeclStatement	size_t class_name_len ;	348:2:11502:11523	4040689	1	True				
ANR	4040703	IdentifierDecl	class_name_len		4040689	0					
ANR	4040704	IdentifierDeclType	size_t		4040689	0					
ANR	4040705	Identifier	class_name_len		4040689	1					
ANR	4040706	IfStatement	if ( fptr -> type == ZEND_INTERNAL_FUNCTION )		4040689	2					
ANR	4040707	Condition	fptr -> type == ZEND_INTERNAL_FUNCTION	350:6:11532:11567	4040689	0	True				
ANR	4040708	EqualityExpression	fptr -> type == ZEND_INTERNAL_FUNCTION		4040689	0		==			
ANR	4040709	PtrMemberAccess	fptr -> type		4040689	0					
ANR	4040710	Identifier	fptr		4040689	0					
ANR	4040711	Identifier	type		4040689	1					
ANR	4040712	Identifier	ZEND_INTERNAL_FUNCTION		4040689	1					
ANR	4040713	CompoundStatement		6:44:126:126	4040689	1					
ANR	4040714	ExpressionStatement	class_name = ( ( zend_internal_arg_info * ) arg_info ) -> class_name	351:3:11575:11635	4040689	0	True				
ANR	4040715	AssignmentExpression	class_name = ( ( zend_internal_arg_info * ) arg_info ) -> class_name		4040689	0		=			
ANR	4040716	Identifier	class_name		4040689	0					
ANR	4040717	PtrMemberAccess	( ( zend_internal_arg_info * ) arg_info ) -> class_name		4040689	1					
ANR	4040718	CastExpression	( zend_internal_arg_info * ) arg_info		4040689	0					
ANR	4040719	CastTarget	zend_internal_arg_info *		4040689	0					
ANR	4040720	Identifier	arg_info		4040689	1					
ANR	4040721	Identifier	class_name		4040689	1					
ANR	4040722	ExpressionStatement	class_name_len = strlen ( class_name )	352:3:11640:11675	4040689	1	True				
ANR	4040723	AssignmentExpression	class_name_len = strlen ( class_name )		4040689	0		=			
ANR	4040724	Identifier	class_name_len		4040689	0					
ANR	4040725	CallExpression	strlen ( class_name )		4040689	1					
ANR	4040726	Callee	strlen		4040689	0					
ANR	4040727	Identifier	strlen		4040689	0					
ANR	4040728	ArgumentList	class_name		4040689	1					
ANR	4040729	Argument	class_name		4040689	0					
ANR	4040730	Identifier	class_name		4040689	0					
ANR	4040731	ElseStatement	else		4040689	0					
ANR	4040732	CompoundStatement		9:9:242:242	4040689	0					
ANR	4040733	ExpressionStatement	class_name = ZSTR_VAL ( arg_info -> class_name )	354:3:11691:11734	4040689	0	True				
ANR	4040734	AssignmentExpression	class_name = ZSTR_VAL ( arg_info -> class_name )		4040689	0		=			
ANR	4040735	Identifier	class_name		4040689	0					
ANR	4040736	CallExpression	ZSTR_VAL ( arg_info -> class_name )		4040689	1					
ANR	4040737	Callee	ZSTR_VAL		4040689	0					
ANR	4040738	Identifier	ZSTR_VAL		4040689	0					
ANR	4040739	ArgumentList	arg_info -> class_name		4040689	1					
ANR	4040740	Argument	arg_info -> class_name		4040689	0					
ANR	4040741	PtrMemberAccess	arg_info -> class_name		4040689	0					
ANR	4040742	Identifier	arg_info		4040689	0					
ANR	4040743	Identifier	class_name		4040689	1					
ANR	4040744	ExpressionStatement	class_name_len = ZSTR_LEN ( arg_info -> class_name )	355:3:11739:11786	4040689	1	True				
ANR	4040745	AssignmentExpression	class_name_len = ZSTR_LEN ( arg_info -> class_name )		4040689	0		=			
ANR	4040746	Identifier	class_name_len		4040689	0					
ANR	4040747	CallExpression	ZSTR_LEN ( arg_info -> class_name )		4040689	1					
ANR	4040748	Callee	ZSTR_LEN		4040689	0					
ANR	4040749	Identifier	ZSTR_LEN		4040689	0					
ANR	4040750	ArgumentList	arg_info -> class_name		4040689	1					
ANR	4040751	Argument	arg_info -> class_name		4040689	0					
ANR	4040752	PtrMemberAccess	arg_info -> class_name		4040689	0					
ANR	4040753	Identifier	arg_info		4040689	0					
ANR	4040754	Identifier	class_name		4040689	1					
ANR	4040755	IfStatement	"if ( ! strcasecmp ( class_name , ""self"" ) && fptr -> common . scope )"		4040689	3					
ANR	4040756	Condition	"! strcasecmp ( class_name , ""self"" ) && fptr -> common . scope"	358:6:11799:11851	4040689	0	True				
ANR	4040757	AndExpression	"! strcasecmp ( class_name , ""self"" ) && fptr -> common . scope"		4040689	0		&&			
ANR	4040758	UnaryOperationExpression	"! strcasecmp ( class_name , ""self"" )"		4040689	0					
ANR	4040759	UnaryOperator	!		4040689	0					
ANR	4040760	CallExpression	"strcasecmp ( class_name , ""self"" )"		4040689	1					
ANR	4040761	Callee	strcasecmp		4040689	0					
ANR	4040762	Identifier	strcasecmp		4040689	0					
ANR	4040763	ArgumentList	class_name		4040689	1					
ANR	4040764	Argument	class_name		4040689	0					
ANR	4040765	Identifier	class_name		4040689	0					
ANR	4040766	Argument	"""self"""		4040689	1					
ANR	4040767	PrimaryExpression	"""self"""		4040689	0					
ANR	4040768	MemberAccess	fptr -> common . scope		4040689	1					
ANR	4040769	PtrMemberAccess	fptr -> common		4040689	0					
ANR	4040770	Identifier	fptr		4040689	0					
ANR	4040771	Identifier	common		4040689	1					
ANR	4040772	Identifier	scope		4040689	1					
ANR	4040773	CompoundStatement		14:61:410:410	4040689	1					
ANR	4040774	ExpressionStatement	class_name = ZSTR_VAL ( fptr -> common . scope -> name )	359:3:11859:11906	4040689	0	True				
ANR	4040775	AssignmentExpression	class_name = ZSTR_VAL ( fptr -> common . scope -> name )		4040689	0		=			
ANR	4040776	Identifier	class_name		4040689	0					
ANR	4040777	CallExpression	ZSTR_VAL ( fptr -> common . scope -> name )		4040689	1					
ANR	4040778	Callee	ZSTR_VAL		4040689	0					
ANR	4040779	Identifier	ZSTR_VAL		4040689	0					
ANR	4040780	ArgumentList	fptr -> common . scope -> name		4040689	1					
ANR	4040781	Argument	fptr -> common . scope -> name		4040689	0					
ANR	4040782	PtrMemberAccess	fptr -> common . scope -> name		4040689	0					
ANR	4040783	MemberAccess	fptr -> common . scope		4040689	0					
ANR	4040784	PtrMemberAccess	fptr -> common		4040689	0					
ANR	4040785	Identifier	fptr		4040689	0					
ANR	4040786	Identifier	common		4040689	1					
ANR	4040787	Identifier	scope		4040689	1					
ANR	4040788	Identifier	name		4040689	1					
ANR	4040789	ExpressionStatement	class_name_len = ZSTR_LEN ( fptr -> common . scope -> name )	360:3:11911:11962	4040689	1	True				
ANR	4040790	AssignmentExpression	class_name_len = ZSTR_LEN ( fptr -> common . scope -> name )		4040689	0		=			
ANR	4040791	Identifier	class_name_len		4040689	0					
ANR	4040792	CallExpression	ZSTR_LEN ( fptr -> common . scope -> name )		4040689	1					
ANR	4040793	Callee	ZSTR_LEN		4040689	0					
ANR	4040794	Identifier	ZSTR_LEN		4040689	0					
ANR	4040795	ArgumentList	fptr -> common . scope -> name		4040689	1					
ANR	4040796	Argument	fptr -> common . scope -> name		4040689	0					
ANR	4040797	PtrMemberAccess	fptr -> common . scope -> name		4040689	0					
ANR	4040798	MemberAccess	fptr -> common . scope		4040689	0					
ANR	4040799	PtrMemberAccess	fptr -> common		4040689	0					
ANR	4040800	Identifier	fptr		4040689	0					
ANR	4040801	Identifier	common		4040689	1					
ANR	4040802	Identifier	scope		4040689	1					
ANR	4040803	Identifier	name		4040689	1					
ANR	4040804	ElseStatement	else		4040689	0					
ANR	4040805	IfStatement	"if ( ! strcasecmp ( class_name , ""parent"" ) && fptr -> common . scope && fptr -> common . scope -> parent )"		4040689	0					
ANR	4040806	Condition	"! strcasecmp ( class_name , ""parent"" ) && fptr -> common . scope && fptr -> common . scope -> parent"	361:13:11977:12061	4040689	0	True				
ANR	4040807	AndExpression	"! strcasecmp ( class_name , ""parent"" ) && fptr -> common . scope && fptr -> common . scope -> parent"		4040689	0		&&			
ANR	4040808	UnaryOperationExpression	"! strcasecmp ( class_name , ""parent"" )"		4040689	0					
ANR	4040809	UnaryOperator	!		4040689	0					
ANR	4040810	CallExpression	"strcasecmp ( class_name , ""parent"" )"		4040689	1					
ANR	4040811	Callee	strcasecmp		4040689	0					
ANR	4040812	Identifier	strcasecmp		4040689	0					
ANR	4040813	ArgumentList	class_name		4040689	1					
ANR	4040814	Argument	class_name		4040689	0					
ANR	4040815	Identifier	class_name		4040689	0					
ANR	4040816	Argument	"""parent"""		4040689	1					
ANR	4040817	PrimaryExpression	"""parent"""		4040689	0					
ANR	4040818	AndExpression	fptr -> common . scope && fptr -> common . scope -> parent		4040689	1		&&			
ANR	4040819	MemberAccess	fptr -> common . scope		4040689	0					
ANR	4040820	PtrMemberAccess	fptr -> common		4040689	0					
ANR	4040821	Identifier	fptr		4040689	0					
ANR	4040822	Identifier	common		4040689	1					
ANR	4040823	Identifier	scope		4040689	1					
ANR	4040824	PtrMemberAccess	fptr -> common . scope -> parent		4040689	1					
ANR	4040825	MemberAccess	fptr -> common . scope		4040689	0					
ANR	4040826	PtrMemberAccess	fptr -> common		4040689	0					
ANR	4040827	Identifier	fptr		4040689	0					
ANR	4040828	Identifier	common		4040689	1					
ANR	4040829	Identifier	scope		4040689	1					
ANR	4040830	Identifier	parent		4040689	1					
ANR	4040831	CompoundStatement		17:100:620:620	4040689	1					
ANR	4040832	ExpressionStatement	class_name = ZSTR_VAL ( fptr -> common . scope -> parent -> name )	362:3:12069:12124	4040689	0	True				
ANR	4040833	AssignmentExpression	class_name = ZSTR_VAL ( fptr -> common . scope -> parent -> name )		4040689	0		=			
ANR	4040834	Identifier	class_name		4040689	0					
ANR	4040835	CallExpression	ZSTR_VAL ( fptr -> common . scope -> parent -> name )		4040689	1					
ANR	4040836	Callee	ZSTR_VAL		4040689	0					
ANR	4040837	Identifier	ZSTR_VAL		4040689	0					
ANR	4040838	ArgumentList	fptr -> common . scope -> parent -> name		4040689	1					
ANR	4040839	Argument	fptr -> common . scope -> parent -> name		4040689	0					
ANR	4040840	PtrMemberAccess	fptr -> common . scope -> parent -> name		4040689	0					
ANR	4040841	PtrMemberAccess	fptr -> common . scope -> parent		4040689	0					
ANR	4040842	MemberAccess	fptr -> common . scope		4040689	0					
ANR	4040843	PtrMemberAccess	fptr -> common		4040689	0					
ANR	4040844	Identifier	fptr		4040689	0					
ANR	4040845	Identifier	common		4040689	1					
ANR	4040846	Identifier	scope		4040689	1					
ANR	4040847	Identifier	parent		4040689	1					
ANR	4040848	Identifier	name		4040689	1					
ANR	4040849	ExpressionStatement	class_name_len = ZSTR_LEN ( fptr -> common . scope -> parent -> name )	363:3:12129:12188	4040689	1	True				
ANR	4040850	AssignmentExpression	class_name_len = ZSTR_LEN ( fptr -> common . scope -> parent -> name )		4040689	0		=			
ANR	4040851	Identifier	class_name_len		4040689	0					
ANR	4040852	CallExpression	ZSTR_LEN ( fptr -> common . scope -> parent -> name )		4040689	1					
ANR	4040853	Callee	ZSTR_LEN		4040689	0					
ANR	4040854	Identifier	ZSTR_LEN		4040689	0					
ANR	4040855	ArgumentList	fptr -> common . scope -> parent -> name		4040689	1					
ANR	4040856	Argument	fptr -> common . scope -> parent -> name		4040689	0					
ANR	4040857	PtrMemberAccess	fptr -> common . scope -> parent -> name		4040689	0					
ANR	4040858	PtrMemberAccess	fptr -> common . scope -> parent		4040689	0					
ANR	4040859	MemberAccess	fptr -> common . scope		4040689	0					
ANR	4040860	PtrMemberAccess	fptr -> common		4040689	0					
ANR	4040861	Identifier	fptr		4040689	0					
ANR	4040862	Identifier	common		4040689	1					
ANR	4040863	Identifier	scope		4040689	1					
ANR	4040864	Identifier	parent		4040689	1					
ANR	4040865	Identifier	name		4040689	1					
ANR	4040866	ExpressionStatement	"smart_str_appendl ( str , class_name , class_name_len )"	366:2:12197:12247	4040689	4	True				
ANR	4040867	CallExpression	"smart_str_appendl ( str , class_name , class_name_len )"		4040689	0					
ANR	4040868	Callee	smart_str_appendl		4040689	0					
ANR	4040869	Identifier	smart_str_appendl		4040689	0					
ANR	4040870	ArgumentList	str		4040689	1					
ANR	4040871	Argument	str		4040689	0					
ANR	4040872	Identifier	str		4040689	0					
ANR	4040873	Argument	class_name		4040689	1					
ANR	4040874	Identifier	class_name		4040689	0					
ANR	4040875	Argument	class_name_len		4040689	2					
ANR	4040876	Identifier	class_name_len		4040689	0					
ANR	4040877	IfStatement	if ( ! return_hint )		4040689	5					
ANR	4040878	Condition	! return_hint	367:6:12255:12266	4040689	0	True				
ANR	4040879	UnaryOperationExpression	! return_hint		4040689	0					
ANR	4040880	UnaryOperator	!		4040689	0					
ANR	4040881	Identifier	return_hint		4040689	1					
ANR	4040882	CompoundStatement		23:20:825:825	4040689	1					
ANR	4040883	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	368:3:12274:12301	4040689	0	True				
ANR	4040884	CallExpression	"smart_str_appendc ( str , ' ' )"		4040689	0					
ANR	4040885	Callee	smart_str_appendc		4040689	0					
ANR	4040886	Identifier	smart_str_appendc		4040689	0					
ANR	4040887	ArgumentList	str		4040689	1					
ANR	4040888	Argument	str		4040689	0					
ANR	4040889	Identifier	str		4040689	0					
ANR	4040890	Argument	' '		4040689	1					
ANR	4040891	PrimaryExpression	' '		4040689	0					
ANR	4040892	ElseStatement	else		4040689	0					
ANR	4040893	IfStatement	if ( arg_info -> type_hint )		4040689	0					
ANR	4040894	Condition	arg_info -> type_hint	370:12:12319:12337	4040689	0	True				
ANR	4040895	PtrMemberAccess	arg_info -> type_hint		4040689	0					
ANR	4040896	Identifier	arg_info		4040689	0					
ANR	4040897	Identifier	type_hint		4040689	1					
ANR	4040898	CompoundStatement		26:33:896:896	4040689	1					
ANR	4040899	IfStatement	if ( arg_info -> type_hint == IS_LONG )		4040689	0					
ANR	4040900	Condition	arg_info -> type_hint == IS_LONG	371:6:12348:12377	4040689	0	True				
ANR	4040901	EqualityExpression	arg_info -> type_hint == IS_LONG		4040689	0		==			
ANR	4040902	PtrMemberAccess	arg_info -> type_hint		4040689	0					
ANR	4040903	Identifier	arg_info		4040689	0					
ANR	4040904	Identifier	type_hint		4040689	1					
ANR	4040905	Identifier	IS_LONG		4040689	1					
ANR	4040906	CompoundStatement		27:38:936:936	4040689	1					
ANR	4040907	ExpressionStatement	"smart_str_appendl ( str , ""int"" , 3 )"	372:3:12385:12417	4040689	0	True				
ANR	4040908	CallExpression	"smart_str_appendl ( str , ""int"" , 3 )"		4040689	0					
ANR	4040909	Callee	smart_str_appendl		4040689	0					
ANR	4040910	Identifier	smart_str_appendl		4040689	0					
ANR	4040911	ArgumentList	str		4040689	1					
ANR	4040912	Argument	str		4040689	0					
ANR	4040913	Identifier	str		4040689	0					
ANR	4040914	Argument	"""int"""		4040689	1					
ANR	4040915	PrimaryExpression	"""int"""		4040689	0					
ANR	4040916	Argument	3		4040689	2					
ANR	4040917	PrimaryExpression	3		4040689	0					
ANR	4040918	ElseStatement	else		4040689	0					
ANR	4040919	IfStatement	if ( arg_info -> type_hint == _IS_BOOL )		4040689	0					
ANR	4040920	Condition	arg_info -> type_hint == _IS_BOOL	373:13:12432:12462	4040689	0	True				
ANR	4040921	EqualityExpression	arg_info -> type_hint == _IS_BOOL		4040689	0		==			
ANR	4040922	PtrMemberAccess	arg_info -> type_hint		4040689	0					
ANR	4040923	Identifier	arg_info		4040689	0					
ANR	4040924	Identifier	type_hint		4040689	1					
ANR	4040925	Identifier	_IS_BOOL		4040689	1					
ANR	4040926	CompoundStatement		29:46:1021:1021	4040689	1					
ANR	4040927	ExpressionStatement	"smart_str_appendl ( str , ""bool"" , 4 )"	374:3:12470:12503	4040689	0	True				
ANR	4040928	CallExpression	"smart_str_appendl ( str , ""bool"" , 4 )"		4040689	0					
ANR	4040929	Callee	smart_str_appendl		4040689	0					
ANR	4040930	Identifier	smart_str_appendl		4040689	0					
ANR	4040931	ArgumentList	str		4040689	1					
ANR	4040932	Argument	str		4040689	0					
ANR	4040933	Identifier	str		4040689	0					
ANR	4040934	Argument	"""bool"""		4040689	1					
ANR	4040935	PrimaryExpression	"""bool"""		4040689	0					
ANR	4040936	Argument	4		4040689	2					
ANR	4040937	PrimaryExpression	4		4040689	0					
ANR	4040938	ElseStatement	else		4040689	0					
ANR	4040939	CompoundStatement		32:3:1075:1142	4040689	0					
ANR	4040940	IdentifierDeclStatement	const char * type_name = zend_get_type_by_const ( arg_info -> type_hint ) ;	376:3:12519:12586	4040689	0	True				
ANR	4040941	IdentifierDecl	* type_name = zend_get_type_by_const ( arg_info -> type_hint )		4040689	0					
ANR	4040942	IdentifierDeclType	const char *		4040689	0					
ANR	4040943	Identifier	type_name		4040689	1					
ANR	4040944	AssignmentExpression	* type_name = zend_get_type_by_const ( arg_info -> type_hint )		4040689	2		=			
ANR	4040945	Identifier	type_name		4040689	0					
ANR	4040946	CallExpression	zend_get_type_by_const ( arg_info -> type_hint )		4040689	1					
ANR	4040947	Callee	zend_get_type_by_const		4040689	0					
ANR	4040948	Identifier	zend_get_type_by_const		4040689	0					
ANR	4040949	ArgumentList	arg_info -> type_hint		4040689	1					
ANR	4040950	Argument	arg_info -> type_hint		4040689	0					
ANR	4040951	PtrMemberAccess	arg_info -> type_hint		4040689	0					
ANR	4040952	Identifier	arg_info		4040689	0					
ANR	4040953	Identifier	type_hint		4040689	1					
ANR	4040954	ExpressionStatement	"smart_str_appends ( str , type_name )"	377:3:12591:12624	4040689	1	True				
ANR	4040955	CallExpression	"smart_str_appends ( str , type_name )"		4040689	0					
ANR	4040956	Callee	smart_str_appends		4040689	0					
ANR	4040957	Identifier	smart_str_appends		4040689	0					
ANR	4040958	ArgumentList	str		4040689	1					
ANR	4040959	Argument	str		4040689	0					
ANR	4040960	Identifier	str		4040689	0					
ANR	4040961	Argument	type_name		4040689	1					
ANR	4040962	Identifier	type_name		4040689	0					
ANR	4040963	IfStatement	if ( ! return_hint )		4040689	1					
ANR	4040964	Condition	! return_hint	379:6:12636:12647	4040689	0	True				
ANR	4040965	UnaryOperationExpression	! return_hint		4040689	0					
ANR	4040966	UnaryOperator	!		4040689	0					
ANR	4040967	Identifier	return_hint		4040689	1					
ANR	4040968	CompoundStatement		35:20:1206:1206	4040689	1					
ANR	4040969	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	380:3:12655:12682	4040689	0	True				
ANR	4040970	CallExpression	"smart_str_appendc ( str , ' ' )"		4040689	0					
ANR	4040971	Callee	smart_str_appendc		4040689	0					
ANR	4040972	Identifier	smart_str_appendc		4040689	0					
ANR	4040973	ArgumentList	str		4040689	1					
ANR	4040974	Argument	str		4040689	0					
ANR	4040975	Identifier	str		4040689	0					
ANR	4040976	Argument	' '		4040689	1					
ANR	4040977	PrimaryExpression	' '		4040689	0					
ANR	4040978	ReturnType	static ZEND_COLD void		4040689	1					
ANR	4040979	Identifier	zend_append_type_hint		4040689	2					
ANR	4040980	ParameterList	"smart_str * str , const zend_function * fptr , zend_arg_info * arg_info , int return_hint"		4040689	3					
ANR	4040981	Parameter	smart_str * str	344:44:11348:11361	4040689	0	True				
ANR	4040982	ParameterType	smart_str *		4040689	0					
ANR	4040983	Identifier	str		4040689	1					
ANR	4040984	Parameter	const zend_function * fptr	344:60:11364:11388	4040689	1	True				
ANR	4040985	ParameterType	const zend_function *		4040689	0					
ANR	4040986	Identifier	fptr		4040689	1					
ANR	4040987	Parameter	zend_arg_info * arg_info	344:87:11391:11413	4040689	2	True				
ANR	4040988	ParameterType	zend_arg_info *		4040689	0					
ANR	4040989	Identifier	arg_info		4040689	1					
ANR	4040990	Parameter	int return_hint	344:112:11416:11430	4040689	3	True				
ANR	4040991	ParameterType	int		4040689	0					
ANR	4040992	Identifier	return_hint		4040689	1					
ANR	4040993	CFGEntryNode	ENTRY		4040689		True				
ANR	4040994	CFGExitNode	EXIT		4040689		True				
ANR	4040995	Symbol	* fptr -> common . scope -> parent		4040689						
ANR	4040996	Symbol	type_name		4040689						
ANR	4040997	Symbol	arg_info -> type_hint		4040689						
ANR	4040998	Symbol	( ( zend_internal_arg_info * ) arg_info ) -> class_name		4040689						
ANR	4040999	Symbol	fptr -> type		4040689						
ANR	4041000	Symbol	* arg_info		4040689						
ANR	4041001	Symbol	fptr -> common . scope -> parent -> name		4040689						
ANR	4041002	Symbol	ZEND_INTERNAL_FUNCTION		4040689						
ANR	4041003	Symbol	strlen		4040689						
ANR	4041004	Symbol	return_hint		4040689						
ANR	4041005	Symbol	_IS_BOOL		4040689						
ANR	4041006	Symbol	IS_LONG		4040689						
ANR	4041007	Symbol	fptr -> common . scope		4040689						
ANR	4041008	Symbol	arg_info -> class_name		4040689						
ANR	4041009	Symbol	* * * fptr		4040689						
ANR	4041010	Symbol	strcasecmp		4040689						
ANR	4041011	Symbol	class_name		4040689						
ANR	4041012	Symbol	* * fptr -> common		4040689						
ANR	4041013	Symbol	* fptr		4040689						
ANR	4041014	Symbol	zend_get_type_by_const		4040689						
ANR	4041015	Symbol	* * fptr		4040689						
ANR	4041016	Symbol	* fptr -> common . scope		4040689						
ANR	4041017	Symbol	fptr -> common		4040689						
ANR	4041018	Symbol	ZSTR_VAL		4040689						
ANR	4041019	Symbol	str		4040689						
ANR	4041020	Symbol	arg_info		4040689						
ANR	4041021	Symbol	* fptr -> common		4040689						
ANR	4041022	Symbol	* * fptr -> common . scope		4040689						
ANR	4041023	Symbol	fptr		4040689						
ANR	4041024	Symbol	ZSTR_LEN		4040689						
ANR	4041025	Symbol	fptr -> common . scope -> parent		4040689						
ANR	4041026	Symbol	fptr -> common . scope -> name		4040689						
ANR	4041027	Symbol	class_name_len		4040689						
ANR	4041028	Function	zend_get_function_declaration	386:0:12704:16088							
ANR	4041029	FunctionDef	zend_get_function_declaration (const zend_function * fptr)		4041028	0					
ANR	4041030	CompoundStatement		387:0:12801:16088	4041028	0					
ANR	4041031	IdentifierDeclStatement	smart_str str = { 0 } ;	388:1:12804:12823	4041028	0	True				
ANR	4041032	IdentifierDecl	str = { 0 }		4041028	0					
ANR	4041033	IdentifierDeclType	smart_str		4041028	0					
ANR	4041034	Identifier	str		4041028	1					
ANR	4041035	AssignmentExpression	str = { 0 }		4041028	2		=			
ANR	4041036	Identifier	str		4041028	0					
ANR	4041037	InitializerList	0		4041028	1					
ANR	4041038	PrimaryExpression	0		4041028	0					
ANR	4041039	IfStatement	if ( fptr -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE )		4041028	1					
ANR	4041040	Condition	fptr -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE	390:5:12831:12881	4041028	0	True				
ANR	4041041	BitAndExpression	fptr -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE		4041028	0		&			
ANR	4041042	MemberAccess	fptr -> op_array . fn_flags		4041028	0					
ANR	4041043	PtrMemberAccess	fptr -> op_array		4041028	0					
ANR	4041044	Identifier	fptr		4041028	0					
ANR	4041045	Identifier	op_array		4041028	1					
ANR	4041046	Identifier	fn_flags		4041028	1					
ANR	4041047	Identifier	ZEND_ACC_RETURN_REFERENCE		4041028	1					
ANR	4041048	CompoundStatement		4:58:82:82	4041028	1					
ANR	4041049	ExpressionStatement	"smart_str_appends ( & str , ""& "" )"	391:2:12888:12917	4041028	0	True				
ANR	4041050	CallExpression	"smart_str_appends ( & str , ""& "" )"		4041028	0					
ANR	4041051	Callee	smart_str_appends		4041028	0					
ANR	4041052	Identifier	smart_str_appends		4041028	0					
ANR	4041053	ArgumentList	& str		4041028	1					
ANR	4041054	Argument	& str		4041028	0					
ANR	4041055	UnaryOperationExpression	& str		4041028	0					
ANR	4041056	UnaryOperator	&		4041028	0					
ANR	4041057	Identifier	str		4041028	1					
ANR	4041058	Argument	"""& """		4041028	1					
ANR	4041059	PrimaryExpression	"""& """		4041028	0					
ANR	4041060	IfStatement	if ( fptr -> common . scope )		4041028	2					
ANR	4041061	Condition	fptr -> common . scope	394:5:12928:12945	4041028	0	True				
ANR	4041062	MemberAccess	fptr -> common . scope		4041028	0					
ANR	4041063	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041064	Identifier	fptr		4041028	0					
ANR	4041065	Identifier	common		4041028	1					
ANR	4041066	Identifier	scope		4041028	1					
ANR	4041067	CompoundStatement		8:25:146:146	4041028	1					
ANR	4041068	ExpressionStatement	"smart_str_appendl ( & str , ZSTR_VAL ( fptr -> common . scope -> name ) , strlen ( ZSTR_VAL ( fptr -> common . scope -> name ) ) )"	396:2:13001:13104	4041028	0	True				
ANR	4041069	CallExpression	"smart_str_appendl ( & str , ZSTR_VAL ( fptr -> common . scope -> name ) , strlen ( ZSTR_VAL ( fptr -> common . scope -> name ) ) )"		4041028	0					
ANR	4041070	Callee	smart_str_appendl		4041028	0					
ANR	4041071	Identifier	smart_str_appendl		4041028	0					
ANR	4041072	ArgumentList	& str		4041028	1					
ANR	4041073	Argument	& str		4041028	0					
ANR	4041074	UnaryOperationExpression	& str		4041028	0					
ANR	4041075	UnaryOperator	&		4041028	0					
ANR	4041076	Identifier	str		4041028	1					
ANR	4041077	Argument	ZSTR_VAL ( fptr -> common . scope -> name )		4041028	1					
ANR	4041078	CallExpression	ZSTR_VAL ( fptr -> common . scope -> name )		4041028	0					
ANR	4041079	Callee	ZSTR_VAL		4041028	0					
ANR	4041080	Identifier	ZSTR_VAL		4041028	0					
ANR	4041081	ArgumentList	fptr -> common . scope -> name		4041028	1					
ANR	4041082	Argument	fptr -> common . scope -> name		4041028	0					
ANR	4041083	PtrMemberAccess	fptr -> common . scope -> name		4041028	0					
ANR	4041084	MemberAccess	fptr -> common . scope		4041028	0					
ANR	4041085	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041086	Identifier	fptr		4041028	0					
ANR	4041087	Identifier	common		4041028	1					
ANR	4041088	Identifier	scope		4041028	1					
ANR	4041089	Identifier	name		4041028	1					
ANR	4041090	Argument	strlen ( ZSTR_VAL ( fptr -> common . scope -> name ) )		4041028	2					
ANR	4041091	CallExpression	strlen ( ZSTR_VAL ( fptr -> common . scope -> name ) )		4041028	0					
ANR	4041092	Callee	strlen		4041028	0					
ANR	4041093	Identifier	strlen		4041028	0					
ANR	4041094	ArgumentList	ZSTR_VAL ( fptr -> common . scope -> name )		4041028	1					
ANR	4041095	Argument	ZSTR_VAL ( fptr -> common . scope -> name )		4041028	0					
ANR	4041096	CallExpression	ZSTR_VAL ( fptr -> common . scope -> name )		4041028	0					
ANR	4041097	Callee	ZSTR_VAL		4041028	0					
ANR	4041098	Identifier	ZSTR_VAL		4041028	0					
ANR	4041099	ArgumentList	fptr -> common . scope -> name		4041028	1					
ANR	4041100	Argument	fptr -> common . scope -> name		4041028	0					
ANR	4041101	PtrMemberAccess	fptr -> common . scope -> name		4041028	0					
ANR	4041102	MemberAccess	fptr -> common . scope		4041028	0					
ANR	4041103	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041104	Identifier	fptr		4041028	0					
ANR	4041105	Identifier	common		4041028	1					
ANR	4041106	Identifier	scope		4041028	1					
ANR	4041107	Identifier	name		4041028	1					
ANR	4041108	ExpressionStatement	"smart_str_appends ( & str , ""::"" )"	397:2:13108:13137	4041028	1	True				
ANR	4041109	CallExpression	"smart_str_appends ( & str , ""::"" )"		4041028	0					
ANR	4041110	Callee	smart_str_appends		4041028	0					
ANR	4041111	Identifier	smart_str_appends		4041028	0					
ANR	4041112	ArgumentList	& str		4041028	1					
ANR	4041113	Argument	& str		4041028	0					
ANR	4041114	UnaryOperationExpression	& str		4041028	0					
ANR	4041115	UnaryOperator	&		4041028	0					
ANR	4041116	Identifier	str		4041028	1					
ANR	4041117	Argument	"""::"""		4041028	1					
ANR	4041118	PrimaryExpression	"""::"""		4041028	0					
ANR	4041119	ExpressionStatement	"smart_str_append ( & str , fptr -> common . function_name )"	400:1:13144:13194	4041028	3	True				
ANR	4041120	CallExpression	"smart_str_append ( & str , fptr -> common . function_name )"		4041028	0					
ANR	4041121	Callee	smart_str_append		4041028	0					
ANR	4041122	Identifier	smart_str_append		4041028	0					
ANR	4041123	ArgumentList	& str		4041028	1					
ANR	4041124	Argument	& str		4041028	0					
ANR	4041125	UnaryOperationExpression	& str		4041028	0					
ANR	4041126	UnaryOperator	&		4041028	0					
ANR	4041127	Identifier	str		4041028	1					
ANR	4041128	Argument	fptr -> common . function_name		4041028	1					
ANR	4041129	MemberAccess	fptr -> common . function_name		4041028	0					
ANR	4041130	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041131	Identifier	fptr		4041028	0					
ANR	4041132	Identifier	common		4041028	1					
ANR	4041133	Identifier	function_name		4041028	1					
ANR	4041134	ExpressionStatement	"smart_str_appendc ( & str , '(' )"	401:1:13197:13225	4041028	4	True				
ANR	4041135	CallExpression	"smart_str_appendc ( & str , '(' )"		4041028	0					
ANR	4041136	Callee	smart_str_appendc		4041028	0					
ANR	4041137	Identifier	smart_str_appendc		4041028	0					
ANR	4041138	ArgumentList	& str		4041028	1					
ANR	4041139	Argument	& str		4041028	0					
ANR	4041140	UnaryOperationExpression	& str		4041028	0					
ANR	4041141	UnaryOperator	&		4041028	0					
ANR	4041142	Identifier	str		4041028	1					
ANR	4041143	Argument	'('		4041028	1					
ANR	4041144	PrimaryExpression	'('		4041028	0					
ANR	4041145	IfStatement	if ( fptr -> common . arg_info )		4041028	5					
ANR	4041146	Condition	fptr -> common . arg_info	403:5:13233:13253	4041028	0	True				
ANR	4041147	MemberAccess	fptr -> common . arg_info		4041028	0					
ANR	4041148	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041149	Identifier	fptr		4041028	0					
ANR	4041150	Identifier	common		4041028	1					
ANR	4041151	Identifier	arg_info		4041028	1					
ANR	4041152	CompoundStatement		19:2:492:539	4041028	1					
ANR	4041153	IdentifierDeclStatement	"uint32_t i , num_args , required ;"	404:2:13260:13290	4041028	0	True				
ANR	4041154	IdentifierDecl	i		4041028	0					
ANR	4041155	IdentifierDeclType	uint32_t		4041028	0					
ANR	4041156	Identifier	i		4041028	1					
ANR	4041157	IdentifierDecl	num_args		4041028	1					
ANR	4041158	IdentifierDeclType	uint32_t		4041028	0					
ANR	4041159	Identifier	num_args		4041028	1					
ANR	4041160	IdentifierDecl	required		4041028	2					
ANR	4041161	IdentifierDeclType	uint32_t		4041028	0					
ANR	4041162	Identifier	required		4041028	1					
ANR	4041163	IdentifierDeclStatement	zend_arg_info * arg_info = fptr -> common . arg_info ;	405:2:13294:13341	4041028	1	True				
ANR	4041164	IdentifierDecl	* arg_info = fptr -> common . arg_info		4041028	0					
ANR	4041165	IdentifierDeclType	zend_arg_info *		4041028	0					
ANR	4041166	Identifier	arg_info		4041028	1					
ANR	4041167	AssignmentExpression	* arg_info = fptr -> common . arg_info		4041028	2		=			
ANR	4041168	Identifier	arg_info		4041028	0					
ANR	4041169	MemberAccess	fptr -> common . arg_info		4041028	1					
ANR	4041170	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041171	Identifier	fptr		4041028	0					
ANR	4041172	Identifier	common		4041028	1					
ANR	4041173	Identifier	arg_info		4041028	1					
ANR	4041174	ExpressionStatement	required = fptr -> common . required_num_args	407:2:13346:13387	4041028	2	True				
ANR	4041175	AssignmentExpression	required = fptr -> common . required_num_args		4041028	0		=			
ANR	4041176	Identifier	required		4041028	0					
ANR	4041177	MemberAccess	fptr -> common . required_num_args		4041028	1					
ANR	4041178	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041179	Identifier	fptr		4041028	0					
ANR	4041180	Identifier	common		4041028	1					
ANR	4041181	Identifier	required_num_args		4041028	1					
ANR	4041182	ExpressionStatement	num_args = fptr -> common . num_args	408:2:13391:13423	4041028	3	True				
ANR	4041183	AssignmentExpression	num_args = fptr -> common . num_args		4041028	0		=			
ANR	4041184	Identifier	num_args		4041028	0					
ANR	4041185	MemberAccess	fptr -> common . num_args		4041028	1					
ANR	4041186	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041187	Identifier	fptr		4041028	0					
ANR	4041188	Identifier	common		4041028	1					
ANR	4041189	Identifier	num_args		4041028	1					
ANR	4041190	IfStatement	if ( fptr -> common . fn_flags & ZEND_ACC_VARIADIC )		4041028	4					
ANR	4041191	Condition	fptr -> common . fn_flags & ZEND_ACC_VARIADIC	409:6:13431:13471	4041028	0	True				
ANR	4041192	BitAndExpression	fptr -> common . fn_flags & ZEND_ACC_VARIADIC		4041028	0		&			
ANR	4041193	MemberAccess	fptr -> common . fn_flags		4041028	0					
ANR	4041194	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041195	Identifier	fptr		4041028	0					
ANR	4041196	Identifier	common		4041028	1					
ANR	4041197	Identifier	fn_flags		4041028	1					
ANR	4041198	Identifier	ZEND_ACC_VARIADIC		4041028	1					
ANR	4041199	CompoundStatement		23:49:672:672	4041028	1					
ANR	4041200	ExpressionStatement	num_args ++	410:3:13479:13489	4041028	0	True				
ANR	4041201	PostIncDecOperationExpression	num_args ++		4041028	0					
ANR	4041202	Identifier	num_args		4041028	0					
ANR	4041203	IncDec	++		4041028	1					
ANR	4041204	ForStatement	for ( i = 0 ; i < num_args ; )		4041028	5					
ANR	4041205	ForInit	i = 0 ;	412:7:13502:13507	4041028	0	True				
ANR	4041206	AssignmentExpression	i = 0		4041028	0		=			
ANR	4041207	Identifier	i		4041028	0					
ANR	4041208	PrimaryExpression	0		4041028	1					
ANR	4041209	Condition	i < num_args	412:14:13509:13520	4041028	1	True				
ANR	4041210	RelationalExpression	i < num_args		4041028	0		<			
ANR	4041211	Identifier	i		4041028	0					
ANR	4041212	Identifier	num_args		4041028	1					
ANR	4041213	CompoundStatement		26:29:722:722	4041028	2					
ANR	4041214	ExpressionStatement	"zend_append_type_hint ( & str , fptr , arg_info , 0 )"	413:3:13529:13575	4041028	0	True				
ANR	4041215	CallExpression	"zend_append_type_hint ( & str , fptr , arg_info , 0 )"		4041028	0					
ANR	4041216	Callee	zend_append_type_hint		4041028	0					
ANR	4041217	Identifier	zend_append_type_hint		4041028	0					
ANR	4041218	ArgumentList	& str		4041028	1					
ANR	4041219	Argument	& str		4041028	0					
ANR	4041220	UnaryOperationExpression	& str		4041028	0					
ANR	4041221	UnaryOperator	&		4041028	0					
ANR	4041222	Identifier	str		4041028	1					
ANR	4041223	Argument	fptr		4041028	1					
ANR	4041224	Identifier	fptr		4041028	0					
ANR	4041225	Argument	arg_info		4041028	2					
ANR	4041226	Identifier	arg_info		4041028	0					
ANR	4041227	Argument	0		4041028	3					
ANR	4041228	PrimaryExpression	0		4041028	0					
ANR	4041229	IfStatement	if ( arg_info -> pass_by_reference )		4041028	1					
ANR	4041230	Condition	arg_info -> pass_by_reference	415:7:13585:13611	4041028	0	True				
ANR	4041231	PtrMemberAccess	arg_info -> pass_by_reference		4041028	0					
ANR	4041232	Identifier	arg_info		4041028	0					
ANR	4041233	Identifier	pass_by_reference		4041028	1					
ANR	4041234	CompoundStatement		29:36:812:812	4041028	1					
ANR	4041235	ExpressionStatement	"smart_str_appendc ( & str , '&' )"	416:4:13620:13648	4041028	0	True				
ANR	4041236	CallExpression	"smart_str_appendc ( & str , '&' )"		4041028	0					
ANR	4041237	Callee	smart_str_appendc		4041028	0					
ANR	4041238	Identifier	smart_str_appendc		4041028	0					
ANR	4041239	ArgumentList	& str		4041028	1					
ANR	4041240	Argument	& str		4041028	0					
ANR	4041241	UnaryOperationExpression	& str		4041028	0					
ANR	4041242	UnaryOperator	&		4041028	0					
ANR	4041243	Identifier	str		4041028	1					
ANR	4041244	Argument	'&'		4041028	1					
ANR	4041245	PrimaryExpression	'&'		4041028	0					
ANR	4041246	IfStatement	if ( arg_info -> is_variadic )		4041028	2					
ANR	4041247	Condition	arg_info -> is_variadic	419:7:13663:13683	4041028	0	True				
ANR	4041248	PtrMemberAccess	arg_info -> is_variadic		4041028	0					
ANR	4041249	Identifier	arg_info		4041028	0					
ANR	4041250	Identifier	is_variadic		4041028	1					
ANR	4041251	CompoundStatement		33:30:884:884	4041028	1					
ANR	4041252	ExpressionStatement	"smart_str_appends ( & str , ""..."" )"	420:4:13692:13722	4041028	0	True				
ANR	4041253	CallExpression	"smart_str_appends ( & str , ""..."" )"		4041028	0					
ANR	4041254	Callee	smart_str_appends		4041028	0					
ANR	4041255	Identifier	smart_str_appends		4041028	0					
ANR	4041256	ArgumentList	& str		4041028	1					
ANR	4041257	Argument	& str		4041028	0					
ANR	4041258	UnaryOperationExpression	& str		4041028	0					
ANR	4041259	UnaryOperator	&		4041028	0					
ANR	4041260	Identifier	str		4041028	1					
ANR	4041261	Argument	"""..."""		4041028	1					
ANR	4041262	PrimaryExpression	"""..."""		4041028	0					
ANR	4041263	ExpressionStatement	"smart_str_appendc ( & str , '$' )"	423:3:13733:13761	4041028	3	True				
ANR	4041264	CallExpression	"smart_str_appendc ( & str , '$' )"		4041028	0					
ANR	4041265	Callee	smart_str_appendc		4041028	0					
ANR	4041266	Identifier	smart_str_appendc		4041028	0					
ANR	4041267	ArgumentList	& str		4041028	1					
ANR	4041268	Argument	& str		4041028	0					
ANR	4041269	UnaryOperationExpression	& str		4041028	0					
ANR	4041270	UnaryOperator	&		4041028	0					
ANR	4041271	Identifier	str		4041028	1					
ANR	4041272	Argument	'$'		4041028	1					
ANR	4041273	PrimaryExpression	'$'		4041028	0					
ANR	4041274	IfStatement	if ( arg_info -> name )		4041028	4					
ANR	4041275	Condition	arg_info -> name	425:7:13771:13784	4041028	0	True				
ANR	4041276	PtrMemberAccess	arg_info -> name		4041028	0					
ANR	4041277	Identifier	arg_info		4041028	0					
ANR	4041278	Identifier	name		4041028	1					
ANR	4041279	CompoundStatement		39:23:985:985	4041028	1					
ANR	4041280	IfStatement	if ( fptr -> type == ZEND_INTERNAL_FUNCTION )		4041028	0					
ANR	4041281	Condition	fptr -> type == ZEND_INTERNAL_FUNCTION	426:8:13797:13832	4041028	0	True				
ANR	4041282	EqualityExpression	fptr -> type == ZEND_INTERNAL_FUNCTION		4041028	0		==			
ANR	4041283	PtrMemberAccess	fptr -> type		4041028	0					
ANR	4041284	Identifier	fptr		4041028	0					
ANR	4041285	Identifier	type		4041028	1					
ANR	4041286	Identifier	ZEND_INTERNAL_FUNCTION		4041028	1					
ANR	4041287	CompoundStatement		40:46:1033:1033	4041028	1					
ANR	4041288	ExpressionStatement	"smart_str_appends ( & str , ( ( zend_internal_arg_info * ) arg_info ) -> name )"	427:5:13842:13908	4041028	0	True				
ANR	4041289	CallExpression	"smart_str_appends ( & str , ( ( zend_internal_arg_info * ) arg_info ) -> name )"		4041028	0					
ANR	4041290	Callee	smart_str_appends		4041028	0					
ANR	4041291	Identifier	smart_str_appends		4041028	0					
ANR	4041292	ArgumentList	& str		4041028	1					
ANR	4041293	Argument	& str		4041028	0					
ANR	4041294	UnaryOperationExpression	& str		4041028	0					
ANR	4041295	UnaryOperator	&		4041028	0					
ANR	4041296	Identifier	str		4041028	1					
ANR	4041297	Argument	( ( zend_internal_arg_info * ) arg_info ) -> name		4041028	1					
ANR	4041298	PtrMemberAccess	( ( zend_internal_arg_info * ) arg_info ) -> name		4041028	0					
ANR	4041299	CastExpression	( zend_internal_arg_info * ) arg_info		4041028	0					
ANR	4041300	CastTarget	zend_internal_arg_info *		4041028	0					
ANR	4041301	Identifier	arg_info		4041028	1					
ANR	4041302	Identifier	name		4041028	1					
ANR	4041303	ElseStatement	else		4041028	0					
ANR	4041304	CompoundStatement		42:11:1119:1119	4041028	0					
ANR	4041305	ExpressionStatement	"smart_str_appendl ( & str , ZSTR_VAL ( arg_info -> name ) , ZSTR_LEN ( arg_info -> name ) )"	429:5:13928:14003	4041028	0	True				
ANR	4041306	CallExpression	"smart_str_appendl ( & str , ZSTR_VAL ( arg_info -> name ) , ZSTR_LEN ( arg_info -> name ) )"		4041028	0					
ANR	4041307	Callee	smart_str_appendl		4041028	0					
ANR	4041308	Identifier	smart_str_appendl		4041028	0					
ANR	4041309	ArgumentList	& str		4041028	1					
ANR	4041310	Argument	& str		4041028	0					
ANR	4041311	UnaryOperationExpression	& str		4041028	0					
ANR	4041312	UnaryOperator	&		4041028	0					
ANR	4041313	Identifier	str		4041028	1					
ANR	4041314	Argument	ZSTR_VAL ( arg_info -> name )		4041028	1					
ANR	4041315	CallExpression	ZSTR_VAL ( arg_info -> name )		4041028	0					
ANR	4041316	Callee	ZSTR_VAL		4041028	0					
ANR	4041317	Identifier	ZSTR_VAL		4041028	0					
ANR	4041318	ArgumentList	arg_info -> name		4041028	1					
ANR	4041319	Argument	arg_info -> name		4041028	0					
ANR	4041320	PtrMemberAccess	arg_info -> name		4041028	0					
ANR	4041321	Identifier	arg_info		4041028	0					
ANR	4041322	Identifier	name		4041028	1					
ANR	4041323	Argument	ZSTR_LEN ( arg_info -> name )		4041028	2					
ANR	4041324	CallExpression	ZSTR_LEN ( arg_info -> name )		4041028	0					
ANR	4041325	Callee	ZSTR_LEN		4041028	0					
ANR	4041326	Identifier	ZSTR_LEN		4041028	0					
ANR	4041327	ArgumentList	arg_info -> name		4041028	1					
ANR	4041328	Argument	arg_info -> name		4041028	0					
ANR	4041329	PtrMemberAccess	arg_info -> name		4041028	0					
ANR	4041330	Identifier	arg_info		4041028	0					
ANR	4041331	Identifier	name		4041028	1					
ANR	4041332	ElseStatement	else		4041028	0					
ANR	4041333	CompoundStatement		45:10:1219:1219	4041028	0					
ANR	4041334	ExpressionStatement	"smart_str_appends ( & str , ""param"" )"	432:4:14027:14059	4041028	0	True				
ANR	4041335	CallExpression	"smart_str_appends ( & str , ""param"" )"		4041028	0					
ANR	4041336	Callee	smart_str_appends		4041028	0					
ANR	4041337	Identifier	smart_str_appends		4041028	0					
ANR	4041338	ArgumentList	& str		4041028	1					
ANR	4041339	Argument	& str		4041028	0					
ANR	4041340	UnaryOperationExpression	& str		4041028	0					
ANR	4041341	UnaryOperator	&		4041028	0					
ANR	4041342	Identifier	str		4041028	1					
ANR	4041343	Argument	"""param"""		4041028	1					
ANR	4041344	PrimaryExpression	"""param"""		4041028	0					
ANR	4041345	ExpressionStatement	"smart_str_append_unsigned ( & str , i )"	433:4:14065:14099	4041028	1	True				
ANR	4041346	CallExpression	"smart_str_append_unsigned ( & str , i )"		4041028	0					
ANR	4041347	Callee	smart_str_append_unsigned		4041028	0					
ANR	4041348	Identifier	smart_str_append_unsigned		4041028	0					
ANR	4041349	ArgumentList	& str		4041028	1					
ANR	4041350	Argument	& str		4041028	0					
ANR	4041351	UnaryOperationExpression	& str		4041028	0					
ANR	4041352	UnaryOperator	&		4041028	0					
ANR	4041353	Identifier	str		4041028	1					
ANR	4041354	Argument	i		4041028	1					
ANR	4041355	Identifier	i		4041028	0					
ANR	4041356	IfStatement	if ( i >= required && ! arg_info -> is_variadic )		4041028	5					
ANR	4041357	Condition	i >= required && ! arg_info -> is_variadic	436:7:14114:14152	4041028	0	True				
ANR	4041358	AndExpression	i >= required && ! arg_info -> is_variadic		4041028	0		&&			
ANR	4041359	RelationalExpression	i >= required		4041028	0		>=			
ANR	4041360	Identifier	i		4041028	0					
ANR	4041361	Identifier	required		4041028	1					
ANR	4041362	UnaryOperationExpression	! arg_info -> is_variadic		4041028	1					
ANR	4041363	UnaryOperator	!		4041028	0					
ANR	4041364	PtrMemberAccess	arg_info -> is_variadic		4041028	1					
ANR	4041365	Identifier	arg_info		4041028	0					
ANR	4041366	Identifier	is_variadic		4041028	1					
ANR	4041367	CompoundStatement		50:48:1353:1353	4041028	1					
ANR	4041368	ExpressionStatement	"smart_str_appends ( & str , "" = "" )"	437:4:14161:14191	4041028	0	True				
ANR	4041369	CallExpression	"smart_str_appends ( & str , "" = "" )"		4041028	0					
ANR	4041370	Callee	smart_str_appends		4041028	0					
ANR	4041371	Identifier	smart_str_appends		4041028	0					
ANR	4041372	ArgumentList	& str		4041028	1					
ANR	4041373	Argument	& str		4041028	0					
ANR	4041374	UnaryOperationExpression	& str		4041028	0					
ANR	4041375	UnaryOperator	&		4041028	0					
ANR	4041376	Identifier	str		4041028	1					
ANR	4041377	Argument	""" = """		4041028	1					
ANR	4041378	PrimaryExpression	""" = """		4041028	0					
ANR	4041379	IfStatement	if ( fptr -> type == ZEND_USER_FUNCTION )		4041028	1					
ANR	4041380	Condition	fptr -> type == ZEND_USER_FUNCTION	438:8:14201:14232	4041028	0	True				
ANR	4041381	EqualityExpression	fptr -> type == ZEND_USER_FUNCTION		4041028	0		==			
ANR	4041382	PtrMemberAccess	fptr -> type		4041028	0					
ANR	4041383	Identifier	fptr		4041028	0					
ANR	4041384	Identifier	type		4041028	1					
ANR	4041385	Identifier	ZEND_USER_FUNCTION		4041028	1					
ANR	4041386	CompoundStatement		53:5:1440:1461	4041028	1					
ANR	4041387	IdentifierDeclStatement	zend_op * precv = NULL ;	439:5:14242:14263	4041028	0	True				
ANR	4041388	IdentifierDecl	* precv = NULL		4041028	0					
ANR	4041389	IdentifierDeclType	zend_op *		4041028	0					
ANR	4041390	Identifier	precv		4041028	1					
ANR	4041391	AssignmentExpression	* precv = NULL		4041028	2		=			
ANR	4041392	Identifier	NULL		4041028	0					
ANR	4041393	Identifier	NULL		4041028	1					
ANR	4041394	CompoundStatement		57:6:1545:1584	4041028	1					
ANR	4041395	IdentifierDeclStatement	uint32_t idx = i ;	441:6:14278:14295	4041028	0	True				
ANR	4041396	IdentifierDecl	idx = i		4041028	0					
ANR	4041397	IdentifierDeclType	uint32_t		4041028	0					
ANR	4041398	Identifier	idx		4041028	1					
ANR	4041399	AssignmentExpression	idx = i		4041028	2		=			
ANR	4041400	Identifier	i		4041028	0					
ANR	4041401	Identifier	i		4041028	1					
ANR	4041402	IdentifierDeclStatement	zend_op * op = fptr -> op_array . opcodes ;	442:6:14303:14339	4041028	1	True				
ANR	4041403	IdentifierDecl	* op = fptr -> op_array . opcodes		4041028	0					
ANR	4041404	IdentifierDeclType	zend_op *		4041028	0					
ANR	4041405	Identifier	op		4041028	1					
ANR	4041406	AssignmentExpression	* op = fptr -> op_array . opcodes		4041028	2		=			
ANR	4041407	Identifier	op		4041028	0					
ANR	4041408	MemberAccess	fptr -> op_array . opcodes		4041028	1					
ANR	4041409	PtrMemberAccess	fptr -> op_array		4041028	0					
ANR	4041410	Identifier	fptr		4041028	0					
ANR	4041411	Identifier	op_array		4041028	1					
ANR	4041412	Identifier	opcodes		4041028	1					
ANR	4041413	IdentifierDeclStatement	zend_op * end = op + fptr -> op_array . last ;	443:6:14347:14386	4041028	2	True				
ANR	4041414	IdentifierDecl	* end = op + fptr -> op_array . last		4041028	0					
ANR	4041415	IdentifierDeclType	zend_op *		4041028	0					
ANR	4041416	Identifier	end		4041028	1					
ANR	4041417	AssignmentExpression	* end = op + fptr -> op_array . last		4041028	2		=			
ANR	4041418	Identifier	end		4041028	0					
ANR	4041419	AdditiveExpression	op + fptr -> op_array . last		4041028	1		+			
ANR	4041420	Identifier	op		4041028	0					
ANR	4041421	MemberAccess	fptr -> op_array . last		4041028	1					
ANR	4041422	PtrMemberAccess	fptr -> op_array		4041028	0					
ANR	4041423	Identifier	fptr		4041028	0					
ANR	4041424	Identifier	op_array		4041028	1					
ANR	4041425	Identifier	last		4041028	1					
ANR	4041426	ExpressionStatement	++ idx	445:6:14395:14400	4041028	3	True				
ANR	4041427	UnaryExpression	++ idx		4041028	0					
ANR	4041428	IncDec	++		4041028	0					
ANR	4041429	Identifier	idx		4041028	1					
ANR	4041430	WhileStatement	while ( op < end )		4041028	4					
ANR	4041431	Condition	op < end	446:13:14415:14422	4041028	0	True				
ANR	4041432	RelationalExpression	op < end		4041028	0		<			
ANR	4041433	Identifier	op		4041028	0					
ANR	4041434	Identifier	end		4041028	1					
ANR	4041435	CompoundStatement		60:23:1623:1623	4041028	1					
ANR	4041436	IfStatement	if ( ( op -> opcode == ZEND_RECV || op -> opcode == ZEND_RECV_INIT ) && op -> op1 . num == ( zend_ulong ) idx )		4041028	0					
ANR	4041437	Condition	( op -> opcode == ZEND_RECV || op -> opcode == ZEND_RECV_INIT ) && op -> op1 . num == ( zend_ulong ) idx	447:11:14438:14537	4041028	0	True				
ANR	4041438	AndExpression	( op -> opcode == ZEND_RECV || op -> opcode == ZEND_RECV_INIT ) && op -> op1 . num == ( zend_ulong ) idx		4041028	0		&&			
ANR	4041439	OrExpression	op -> opcode == ZEND_RECV || op -> opcode == ZEND_RECV_INIT		4041028	0		||			
ANR	4041440	EqualityExpression	op -> opcode == ZEND_RECV		4041028	0		==			
ANR	4041441	PtrMemberAccess	op -> opcode		4041028	0					
ANR	4041442	Identifier	op		4041028	0					
ANR	4041443	Identifier	opcode		4041028	1					
ANR	4041444	Identifier	ZEND_RECV		4041028	1					
ANR	4041445	EqualityExpression	op -> opcode == ZEND_RECV_INIT		4041028	1		==			
ANR	4041446	PtrMemberAccess	op -> opcode		4041028	0					
ANR	4041447	Identifier	op		4041028	0					
ANR	4041448	Identifier	opcode		4041028	1					
ANR	4041449	Identifier	ZEND_RECV_INIT		4041028	1					
ANR	4041450	EqualityExpression	op -> op1 . num == ( zend_ulong ) idx		4041028	1		==			
ANR	4041451	MemberAccess	op -> op1 . num		4041028	0					
ANR	4041452	PtrMemberAccess	op -> op1		4041028	0					
ANR	4041453	Identifier	op		4041028	0					
ANR	4041454	Identifier	op1		4041028	1					
ANR	4041455	Identifier	num		4041028	1					
ANR	4041456	CastExpression	( zend_ulong ) idx		4041028	1					
ANR	4041457	CastTarget	zend_ulong		4041028	0					
ANR	4041458	Identifier	idx		4041028	1					
ANR	4041459	CompoundStatement		63:7:1745:1745	4041028	1					
ANR	4041460	ExpressionStatement	precv = op	450:8:14557:14567	4041028	0	True				
ANR	4041461	AssignmentExpression	precv = op		4041028	0		=			
ANR	4041462	Identifier	precv		4041028	0					
ANR	4041463	Identifier	op		4041028	1					
ANR	4041464	ExpressionStatement	++ op	452:7:14585:14589	4041028	1	True				
ANR	4041465	UnaryExpression	++ op		4041028	0					
ANR	4041466	IncDec	++		4041028	0					
ANR	4041467	Identifier	op		4041028	1					
ANR	4041468	IfStatement	if ( precv && precv -> opcode == ZEND_RECV_INIT && precv -> op2_type != IS_UNUSED )		4041028	2					
ANR	4041469	Condition	precv && precv -> opcode == ZEND_RECV_INIT && precv -> op2_type != IS_UNUSED	455:9:14615:14686	4041028	0	True				
ANR	4041470	AndExpression	precv && precv -> opcode == ZEND_RECV_INIT && precv -> op2_type != IS_UNUSED		4041028	0		&&			
ANR	4041471	Identifier	precv		4041028	0					
ANR	4041472	AndExpression	precv -> opcode == ZEND_RECV_INIT && precv -> op2_type != IS_UNUSED		4041028	1		&&			
ANR	4041473	EqualityExpression	precv -> opcode == ZEND_RECV_INIT		4041028	0		==			
ANR	4041474	PtrMemberAccess	precv -> opcode		4041028	0					
ANR	4041475	Identifier	precv		4041028	0					
ANR	4041476	Identifier	opcode		4041028	1					
ANR	4041477	Identifier	ZEND_RECV_INIT		4041028	1					
ANR	4041478	EqualityExpression	precv -> op2_type != IS_UNUSED		4041028	1		!=			
ANR	4041479	PtrMemberAccess	precv -> op2_type		4041028	0					
ANR	4041480	Identifier	precv		4041028	0					
ANR	4041481	Identifier	op2_type		4041028	1					
ANR	4041482	Identifier	IS_UNUSED		4041028	1					
ANR	4041483	CompoundStatement		70:6:1895:1946	4041028	1					
ANR	4041484	IdentifierDeclStatement	"zval * zv = RT_CONSTANT ( & fptr -> op_array , precv -> op2 ) ;"	456:6:14697:14748	4041028	0	True				
ANR	4041485	IdentifierDecl	"* zv = RT_CONSTANT ( & fptr -> op_array , precv -> op2 )"		4041028	0					
ANR	4041486	IdentifierDeclType	zval *		4041028	0					
ANR	4041487	Identifier	zv		4041028	1					
ANR	4041488	AssignmentExpression	"* zv = RT_CONSTANT ( & fptr -> op_array , precv -> op2 )"		4041028	2		=			
ANR	4041489	Identifier	zv		4041028	0					
ANR	4041490	CallExpression	"RT_CONSTANT ( & fptr -> op_array , precv -> op2 )"		4041028	1					
ANR	4041491	Callee	RT_CONSTANT		4041028	0					
ANR	4041492	Identifier	RT_CONSTANT		4041028	0					
ANR	4041493	ArgumentList	& fptr -> op_array		4041028	1					
ANR	4041494	Argument	& fptr -> op_array		4041028	0					
ANR	4041495	UnaryOperationExpression	& fptr -> op_array		4041028	0					
ANR	4041496	UnaryOperator	&		4041028	0					
ANR	4041497	PtrMemberAccess	fptr -> op_array		4041028	1					
ANR	4041498	Identifier	fptr		4041028	0					
ANR	4041499	Identifier	op_array		4041028	1					
ANR	4041500	Argument	precv -> op2		4041028	1					
ANR	4041501	PtrMemberAccess	precv -> op2		4041028	0					
ANR	4041502	Identifier	precv		4041028	0					
ANR	4041503	Identifier	op2		4041028	1					
ANR	4041504	IfStatement	if ( Z_TYPE_P ( zv ) == IS_CONSTANT )		4041028	1					
ANR	4041505	Condition	Z_TYPE_P ( zv ) == IS_CONSTANT	458:10:14761:14787	4041028	0	True				
ANR	4041506	EqualityExpression	Z_TYPE_P ( zv ) == IS_CONSTANT		4041028	0		==			
ANR	4041507	CallExpression	Z_TYPE_P ( zv )		4041028	0					
ANR	4041508	Callee	Z_TYPE_P		4041028	0					
ANR	4041509	Identifier	Z_TYPE_P		4041028	0					
ANR	4041510	ArgumentList	zv		4041028	1					
ANR	4041511	Argument	zv		4041028	0					
ANR	4041512	Identifier	zv		4041028	0					
ANR	4041513	Identifier	IS_CONSTANT		4041028	1					
ANR	4041514	CompoundStatement		72:39:1988:1988	4041028	1					
ANR	4041515	ExpressionStatement	"smart_str_append ( & str , Z_STR_P ( zv ) )"	459:7:14799:14834	4041028	0	True				
ANR	4041516	CallExpression	"smart_str_append ( & str , Z_STR_P ( zv ) )"		4041028	0					
ANR	4041517	Callee	smart_str_append		4041028	0					
ANR	4041518	Identifier	smart_str_append		4041028	0					
ANR	4041519	ArgumentList	& str		4041028	1					
ANR	4041520	Argument	& str		4041028	0					
ANR	4041521	UnaryOperationExpression	& str		4041028	0					
ANR	4041522	UnaryOperator	&		4041028	0					
ANR	4041523	Identifier	str		4041028	1					
ANR	4041524	Argument	Z_STR_P ( zv )		4041028	1					
ANR	4041525	CallExpression	Z_STR_P ( zv )		4041028	0					
ANR	4041526	Callee	Z_STR_P		4041028	0					
ANR	4041527	Identifier	Z_STR_P		4041028	0					
ANR	4041528	ArgumentList	zv		4041028	1					
ANR	4041529	Argument	zv		4041028	0					
ANR	4041530	Identifier	zv		4041028	0					
ANR	4041531	ElseStatement	else		4041028	0					
ANR	4041532	IfStatement	if ( Z_TYPE_P ( zv ) == IS_FALSE )		4041028	0					
ANR	4041533	Condition	Z_TYPE_P ( zv ) == IS_FALSE	460:17:14853:14876	4041028	0	True				
ANR	4041534	EqualityExpression	Z_TYPE_P ( zv ) == IS_FALSE		4041028	0		==			
ANR	4041535	CallExpression	Z_TYPE_P ( zv )		4041028	0					
ANR	4041536	Callee	Z_TYPE_P		4041028	0					
ANR	4041537	Identifier	Z_TYPE_P		4041028	0					
ANR	4041538	ArgumentList	zv		4041028	1					
ANR	4041539	Argument	zv		4041028	0					
ANR	4041540	Identifier	zv		4041028	0					
ANR	4041541	Identifier	IS_FALSE		4041028	1					
ANR	4041542	CompoundStatement		74:43:2077:2077	4041028	1					
ANR	4041543	ExpressionStatement	"smart_str_appends ( & str , ""false"" )"	461:7:14888:14920	4041028	0	True				
ANR	4041544	CallExpression	"smart_str_appends ( & str , ""false"" )"		4041028	0					
ANR	4041545	Callee	smart_str_appends		4041028	0					
ANR	4041546	Identifier	smart_str_appends		4041028	0					
ANR	4041547	ArgumentList	& str		4041028	1					
ANR	4041548	Argument	& str		4041028	0					
ANR	4041549	UnaryOperationExpression	& str		4041028	0					
ANR	4041550	UnaryOperator	&		4041028	0					
ANR	4041551	Identifier	str		4041028	1					
ANR	4041552	Argument	"""false"""		4041028	1					
ANR	4041553	PrimaryExpression	"""false"""		4041028	0					
ANR	4041554	ElseStatement	else		4041028	0					
ANR	4041555	IfStatement	if ( Z_TYPE_P ( zv ) == IS_TRUE )		4041028	0					
ANR	4041556	Condition	Z_TYPE_P ( zv ) == IS_TRUE	462:17:14939:14961	4041028	0	True				
ANR	4041557	EqualityExpression	Z_TYPE_P ( zv ) == IS_TRUE		4041028	0		==			
ANR	4041558	CallExpression	Z_TYPE_P ( zv )		4041028	0					
ANR	4041559	Callee	Z_TYPE_P		4041028	0					
ANR	4041560	Identifier	Z_TYPE_P		4041028	0					
ANR	4041561	ArgumentList	zv		4041028	1					
ANR	4041562	Argument	zv		4041028	0					
ANR	4041563	Identifier	zv		4041028	0					
ANR	4041564	Identifier	IS_TRUE		4041028	1					
ANR	4041565	CompoundStatement		76:42:2162:2162	4041028	1					
ANR	4041566	ExpressionStatement	"smart_str_appends ( & str , ""true"" )"	463:7:14973:15004	4041028	0	True				
ANR	4041567	CallExpression	"smart_str_appends ( & str , ""true"" )"		4041028	0					
ANR	4041568	Callee	smart_str_appends		4041028	0					
ANR	4041569	Identifier	smart_str_appends		4041028	0					
ANR	4041570	ArgumentList	& str		4041028	1					
ANR	4041571	Argument	& str		4041028	0					
ANR	4041572	UnaryOperationExpression	& str		4041028	0					
ANR	4041573	UnaryOperator	&		4041028	0					
ANR	4041574	Identifier	str		4041028	1					
ANR	4041575	Argument	"""true"""		4041028	1					
ANR	4041576	PrimaryExpression	"""true"""		4041028	0					
ANR	4041577	ElseStatement	else		4041028	0					
ANR	4041578	IfStatement	if ( Z_TYPE_P ( zv ) == IS_NULL )		4041028	0					
ANR	4041579	Condition	Z_TYPE_P ( zv ) == IS_NULL	464:17:15023:15045	4041028	0	True				
ANR	4041580	EqualityExpression	Z_TYPE_P ( zv ) == IS_NULL		4041028	0		==			
ANR	4041581	CallExpression	Z_TYPE_P ( zv )		4041028	0					
ANR	4041582	Callee	Z_TYPE_P		4041028	0					
ANR	4041583	Identifier	Z_TYPE_P		4041028	0					
ANR	4041584	ArgumentList	zv		4041028	1					
ANR	4041585	Argument	zv		4041028	0					
ANR	4041586	Identifier	zv		4041028	0					
ANR	4041587	Identifier	IS_NULL		4041028	1					
ANR	4041588	CompoundStatement		78:42:2246:2246	4041028	1					
ANR	4041589	ExpressionStatement	"smart_str_appends ( & str , ""NULL"" )"	465:7:15057:15088	4041028	0	True				
ANR	4041590	CallExpression	"smart_str_appends ( & str , ""NULL"" )"		4041028	0					
ANR	4041591	Callee	smart_str_appends		4041028	0					
ANR	4041592	Identifier	smart_str_appends		4041028	0					
ANR	4041593	ArgumentList	& str		4041028	1					
ANR	4041594	Argument	& str		4041028	0					
ANR	4041595	UnaryOperationExpression	& str		4041028	0					
ANR	4041596	UnaryOperator	&		4041028	0					
ANR	4041597	Identifier	str		4041028	1					
ANR	4041598	Argument	"""NULL"""		4041028	1					
ANR	4041599	PrimaryExpression	"""NULL"""		4041028	0					
ANR	4041600	ElseStatement	else		4041028	0					
ANR	4041601	IfStatement	if ( Z_TYPE_P ( zv ) == IS_STRING )		4041028	0					
ANR	4041602	Condition	Z_TYPE_P ( zv ) == IS_STRING	466:17:15107:15131	4041028	0	True				
ANR	4041603	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		4041028	0		==			
ANR	4041604	CallExpression	Z_TYPE_P ( zv )		4041028	0					
ANR	4041605	Callee	Z_TYPE_P		4041028	0					
ANR	4041606	Identifier	Z_TYPE_P		4041028	0					
ANR	4041607	ArgumentList	zv		4041028	1					
ANR	4041608	Argument	zv		4041028	0					
ANR	4041609	Identifier	zv		4041028	0					
ANR	4041610	Identifier	IS_STRING		4041028	1					
ANR	4041611	CompoundStatement		80:44:2332:2332	4041028	1					
ANR	4041612	ExpressionStatement	"smart_str_appendc ( & str , '\\'' )"	467:7:15143:15172	4041028	0	True				
ANR	4041613	CallExpression	"smart_str_appendc ( & str , '\\'' )"		4041028	0					
ANR	4041614	Callee	smart_str_appendc		4041028	0					
ANR	4041615	Identifier	smart_str_appendc		4041028	0					
ANR	4041616	ArgumentList	& str		4041028	1					
ANR	4041617	Argument	& str		4041028	0					
ANR	4041618	UnaryOperationExpression	& str		4041028	0					
ANR	4041619	UnaryOperator	&		4041028	0					
ANR	4041620	Identifier	str		4041028	1					
ANR	4041621	Argument	'\\''		4041028	1					
ANR	4041622	PrimaryExpression	'\\''		4041028	0					
ANR	4041623	ExpressionStatement	"smart_str_appendl ( & str , Z_STRVAL_P ( zv ) , MIN ( Z_STRLEN_P ( zv ) , 10 ) )"	468:7:15181:15245	4041028	1	True				
ANR	4041624	CallExpression	"smart_str_appendl ( & str , Z_STRVAL_P ( zv ) , MIN ( Z_STRLEN_P ( zv ) , 10 ) )"		4041028	0					
ANR	4041625	Callee	smart_str_appendl		4041028	0					
ANR	4041626	Identifier	smart_str_appendl		4041028	0					
ANR	4041627	ArgumentList	& str		4041028	1					
ANR	4041628	Argument	& str		4041028	0					
ANR	4041629	UnaryOperationExpression	& str		4041028	0					
ANR	4041630	UnaryOperator	&		4041028	0					
ANR	4041631	Identifier	str		4041028	1					
ANR	4041632	Argument	Z_STRVAL_P ( zv )		4041028	1					
ANR	4041633	CallExpression	Z_STRVAL_P ( zv )		4041028	0					
ANR	4041634	Callee	Z_STRVAL_P		4041028	0					
ANR	4041635	Identifier	Z_STRVAL_P		4041028	0					
ANR	4041636	ArgumentList	zv		4041028	1					
ANR	4041637	Argument	zv		4041028	0					
ANR	4041638	Identifier	zv		4041028	0					
ANR	4041639	Argument	"MIN ( Z_STRLEN_P ( zv ) , 10 )"		4041028	2					
ANR	4041640	CallExpression	"MIN ( Z_STRLEN_P ( zv ) , 10 )"		4041028	0					
ANR	4041641	Callee	MIN		4041028	0					
ANR	4041642	Identifier	MIN		4041028	0					
ANR	4041643	ArgumentList	Z_STRLEN_P ( zv )		4041028	1					
ANR	4041644	Argument	Z_STRLEN_P ( zv )		4041028	0					
ANR	4041645	CallExpression	Z_STRLEN_P ( zv )		4041028	0					
ANR	4041646	Callee	Z_STRLEN_P		4041028	0					
ANR	4041647	Identifier	Z_STRLEN_P		4041028	0					
ANR	4041648	ArgumentList	zv		4041028	1					
ANR	4041649	Argument	zv		4041028	0					
ANR	4041650	Identifier	zv		4041028	0					
ANR	4041651	Argument	10		4041028	1					
ANR	4041652	PrimaryExpression	10		4041028	0					
ANR	4041653	IfStatement	if ( Z_STRLEN_P ( zv ) > 10 )		4041028	2					
ANR	4041654	Condition	Z_STRLEN_P ( zv ) > 10	469:11:15258:15276	4041028	0	True				
ANR	4041655	RelationalExpression	Z_STRLEN_P ( zv ) > 10		4041028	0		>			
ANR	4041656	CallExpression	Z_STRLEN_P ( zv )		4041028	0					
ANR	4041657	Callee	Z_STRLEN_P		4041028	0					
ANR	4041658	Identifier	Z_STRLEN_P		4041028	0					
ANR	4041659	ArgumentList	zv		4041028	1					
ANR	4041660	Argument	zv		4041028	0					
ANR	4041661	Identifier	zv		4041028	0					
ANR	4041662	PrimaryExpression	10		4041028	1					
ANR	4041663	CompoundStatement		83:32:2477:2477	4041028	1					
ANR	4041664	ExpressionStatement	"smart_str_appends ( & str , ""..."" )"	470:8:15289:15319	4041028	0	True				
ANR	4041665	CallExpression	"smart_str_appends ( & str , ""..."" )"		4041028	0					
ANR	4041666	Callee	smart_str_appends		4041028	0					
ANR	4041667	Identifier	smart_str_appends		4041028	0					
ANR	4041668	ArgumentList	& str		4041028	1					
ANR	4041669	Argument	& str		4041028	0					
ANR	4041670	UnaryOperationExpression	& str		4041028	0					
ANR	4041671	UnaryOperator	&		4041028	0					
ANR	4041672	Identifier	str		4041028	1					
ANR	4041673	Argument	"""..."""		4041028	1					
ANR	4041674	PrimaryExpression	"""..."""		4041028	0					
ANR	4041675	ExpressionStatement	"smart_str_appendc ( & str , '\\'' )"	472:7:15337:15366	4041028	3	True				
ANR	4041676	CallExpression	"smart_str_appendc ( & str , '\\'' )"		4041028	0					
ANR	4041677	Callee	smart_str_appendc		4041028	0					
ANR	4041678	Identifier	smart_str_appendc		4041028	0					
ANR	4041679	ArgumentList	& str		4041028	1					
ANR	4041680	Argument	& str		4041028	0					
ANR	4041681	UnaryOperationExpression	& str		4041028	0					
ANR	4041682	UnaryOperator	&		4041028	0					
ANR	4041683	Identifier	str		4041028	1					
ANR	4041684	Argument	'\\''		4041028	1					
ANR	4041685	PrimaryExpression	'\\''		4041028	0					
ANR	4041686	ElseStatement	else		4041028	0					
ANR	4041687	IfStatement	if ( Z_TYPE_P ( zv ) == IS_ARRAY )		4041028	0					
ANR	4041688	Condition	Z_TYPE_P ( zv ) == IS_ARRAY	473:17:15385:15408	4041028	0	True				
ANR	4041689	EqualityExpression	Z_TYPE_P ( zv ) == IS_ARRAY		4041028	0		==			
ANR	4041690	CallExpression	Z_TYPE_P ( zv )		4041028	0					
ANR	4041691	Callee	Z_TYPE_P		4041028	0					
ANR	4041692	Identifier	Z_TYPE_P		4041028	0					
ANR	4041693	ArgumentList	zv		4041028	1					
ANR	4041694	Argument	zv		4041028	0					
ANR	4041695	Identifier	zv		4041028	0					
ANR	4041696	Identifier	IS_ARRAY		4041028	1					
ANR	4041697	CompoundStatement		87:43:2609:2609	4041028	1					
ANR	4041698	ExpressionStatement	"smart_str_appends ( & str , ""Array"" )"	474:7:15420:15452	4041028	0	True				
ANR	4041699	CallExpression	"smart_str_appends ( & str , ""Array"" )"		4041028	0					
ANR	4041700	Callee	smart_str_appends		4041028	0					
ANR	4041701	Identifier	smart_str_appends		4041028	0					
ANR	4041702	ArgumentList	& str		4041028	1					
ANR	4041703	Argument	& str		4041028	0					
ANR	4041704	UnaryOperationExpression	& str		4041028	0					
ANR	4041705	UnaryOperator	&		4041028	0					
ANR	4041706	Identifier	str		4041028	1					
ANR	4041707	Argument	"""Array"""		4041028	1					
ANR	4041708	PrimaryExpression	"""Array"""		4041028	0					
ANR	4041709	ElseStatement	else		4041028	0					
ANR	4041710	IfStatement	if ( Z_TYPE_P ( zv ) == IS_CONSTANT_AST )		4041028	0					
ANR	4041711	Condition	Z_TYPE_P ( zv ) == IS_CONSTANT_AST	475:17:15471:15501	4041028	0	True				
ANR	4041712	EqualityExpression	Z_TYPE_P ( zv ) == IS_CONSTANT_AST		4041028	0		==			
ANR	4041713	CallExpression	Z_TYPE_P ( zv )		4041028	0					
ANR	4041714	Callee	Z_TYPE_P		4041028	0					
ANR	4041715	Identifier	Z_TYPE_P		4041028	0					
ANR	4041716	ArgumentList	zv		4041028	1					
ANR	4041717	Argument	zv		4041028	0					
ANR	4041718	Identifier	zv		4041028	0					
ANR	4041719	Identifier	IS_CONSTANT_AST		4041028	1					
ANR	4041720	CompoundStatement		89:50:2702:2702	4041028	1					
ANR	4041721	ExpressionStatement	"smart_str_appends ( & str , ""<expression>"" )"	476:7:15513:15552	4041028	0	True				
ANR	4041722	CallExpression	"smart_str_appends ( & str , ""<expression>"" )"		4041028	0					
ANR	4041723	Callee	smart_str_appends		4041028	0					
ANR	4041724	Identifier	smart_str_appends		4041028	0					
ANR	4041725	ArgumentList	& str		4041028	1					
ANR	4041726	Argument	& str		4041028	0					
ANR	4041727	UnaryOperationExpression	& str		4041028	0					
ANR	4041728	UnaryOperator	&		4041028	0					
ANR	4041729	Identifier	str		4041028	1					
ANR	4041730	Argument	"""<expression>"""		4041028	1					
ANR	4041731	PrimaryExpression	"""<expression>"""		4041028	0					
ANR	4041732	ElseStatement	else		4041028	0					
ANR	4041733	CompoundStatement		92:7:2774:2815	4041028	0					
ANR	4041734	IdentifierDeclStatement	zend_string * zv_str = zval_get_string ( zv ) ;	478:7:15576:15617	4041028	0	True				
ANR	4041735	IdentifierDecl	* zv_str = zval_get_string ( zv )		4041028	0					
ANR	4041736	IdentifierDeclType	zend_string *		4041028	0					
ANR	4041737	Identifier	zv_str		4041028	1					
ANR	4041738	AssignmentExpression	* zv_str = zval_get_string ( zv )		4041028	2		=			
ANR	4041739	Identifier	zv_str		4041028	0					
ANR	4041740	CallExpression	zval_get_string ( zv )		4041028	1					
ANR	4041741	Callee	zval_get_string		4041028	0					
ANR	4041742	Identifier	zval_get_string		4041028	0					
ANR	4041743	ArgumentList	zv		4041028	1					
ANR	4041744	Argument	zv		4041028	0					
ANR	4041745	Identifier	zv		4041028	0					
ANR	4041746	ExpressionStatement	"smart_str_append ( & str , zv_str )"	479:7:15626:15656	4041028	1	True				
ANR	4041747	CallExpression	"smart_str_append ( & str , zv_str )"		4041028	0					
ANR	4041748	Callee	smart_str_append		4041028	0					
ANR	4041749	Identifier	smart_str_append		4041028	0					
ANR	4041750	ArgumentList	& str		4041028	1					
ANR	4041751	Argument	& str		4041028	0					
ANR	4041752	UnaryOperationExpression	& str		4041028	0					
ANR	4041753	UnaryOperator	&		4041028	0					
ANR	4041754	Identifier	str		4041028	1					
ANR	4041755	Argument	zv_str		4041028	1					
ANR	4041756	Identifier	zv_str		4041028	0					
ANR	4041757	ExpressionStatement	zend_string_release ( zv_str )	480:7:15665:15692	4041028	2	True				
ANR	4041758	CallExpression	zend_string_release ( zv_str )		4041028	0					
ANR	4041759	Callee	zend_string_release		4041028	0					
ANR	4041760	Identifier	zend_string_release		4041028	0					
ANR	4041761	ArgumentList	zv_str		4041028	1					
ANR	4041762	Argument	zv_str		4041028	0					
ANR	4041763	Identifier	zv_str		4041028	0					
ANR	4041764	ElseStatement	else		4041028	0					
ANR	4041765	CompoundStatement		97:11:2918:2918	4041028	0					
ANR	4041766	ExpressionStatement	"smart_str_appends ( & str , ""NULL"" )"	484:5:15727:15758	4041028	0	True				
ANR	4041767	CallExpression	"smart_str_appends ( & str , ""NULL"" )"		4041028	0					
ANR	4041768	Callee	smart_str_appends		4041028	0					
ANR	4041769	Identifier	smart_str_appends		4041028	0					
ANR	4041770	ArgumentList	& str		4041028	1					
ANR	4041771	Argument	& str		4041028	0					
ANR	4041772	UnaryOperationExpression	& str		4041028	0					
ANR	4041773	UnaryOperator	&		4041028	0					
ANR	4041774	Identifier	str		4041028	1					
ANR	4041775	Argument	"""NULL"""		4041028	1					
ANR	4041776	PrimaryExpression	"""NULL"""		4041028	0					
ANR	4041777	IfStatement	if ( ++ i < num_args )		4041028	6					
ANR	4041778	Condition	++ i < num_args	488:7:15779:15792	4041028	0	True				
ANR	4041779	RelationalExpression	++ i < num_args		4041028	0		<			
ANR	4041780	UnaryExpression	++ i		4041028	0					
ANR	4041781	IncDec	++		4041028	0					
ANR	4041782	Identifier	i		4041028	1					
ANR	4041783	Identifier	num_args		4041028	1					
ANR	4041784	CompoundStatement		102:23:2993:2993	4041028	1					
ANR	4041785	ExpressionStatement	"smart_str_appends ( & str , "", "" )"	489:4:15801:15830	4041028	0	True				
ANR	4041786	CallExpression	"smart_str_appends ( & str , "", "" )"		4041028	0					
ANR	4041787	Callee	smart_str_appends		4041028	0					
ANR	4041788	Identifier	smart_str_appends		4041028	0					
ANR	4041789	ArgumentList	& str		4041028	1					
ANR	4041790	Argument	& str		4041028	0					
ANR	4041791	UnaryOperationExpression	& str		4041028	0					
ANR	4041792	UnaryOperator	&		4041028	0					
ANR	4041793	Identifier	str		4041028	1					
ANR	4041794	Argument	""", """		4041028	1					
ANR	4041795	PrimaryExpression	""", """		4041028	0					
ANR	4041796	ExpressionStatement	arg_info ++	491:3:15840:15850	4041028	7	True				
ANR	4041797	PostIncDecOperationExpression	arg_info ++		4041028	0					
ANR	4041798	Identifier	arg_info		4041028	0					
ANR	4041799	IncDec	++		4041028	1					
ANR	4041800	ExpressionStatement	"smart_str_appendc ( & str , ')' )"	495:1:15861:15889	4041028	6	True				
ANR	4041801	CallExpression	"smart_str_appendc ( & str , ')' )"		4041028	0					
ANR	4041802	Callee	smart_str_appendc		4041028	0					
ANR	4041803	Identifier	smart_str_appendc		4041028	0					
ANR	4041804	ArgumentList	& str		4041028	1					
ANR	4041805	Argument	& str		4041028	0					
ANR	4041806	UnaryOperationExpression	& str		4041028	0					
ANR	4041807	UnaryOperator	&		4041028	0					
ANR	4041808	Identifier	str		4041028	1					
ANR	4041809	Argument	')'		4041028	1					
ANR	4041810	PrimaryExpression	')'		4041028	0					
ANR	4041811	IfStatement	if ( fptr -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		4041028	7					
ANR	4041812	Condition	fptr -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE	497:5:15897:15944	4041028	0	True				
ANR	4041813	BitAndExpression	fptr -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		4041028	0		&			
ANR	4041814	MemberAccess	fptr -> common . fn_flags		4041028	0					
ANR	4041815	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041816	Identifier	fptr		4041028	0					
ANR	4041817	Identifier	common		4041028	1					
ANR	4041818	Identifier	fn_flags		4041028	1					
ANR	4041819	Identifier	ZEND_ACC_HAS_RETURN_TYPE		4041028	1					
ANR	4041820	CompoundStatement		111:55:3145:3145	4041028	1					
ANR	4041821	ExpressionStatement	"smart_str_appends ( & str , "": "" )"	498:2:15951:15980	4041028	0	True				
ANR	4041822	CallExpression	"smart_str_appends ( & str , "": "" )"		4041028	0					
ANR	4041823	Callee	smart_str_appends		4041028	0					
ANR	4041824	Identifier	smart_str_appends		4041028	0					
ANR	4041825	ArgumentList	& str		4041028	1					
ANR	4041826	Argument	& str		4041028	0					
ANR	4041827	UnaryOperationExpression	& str		4041028	0					
ANR	4041828	UnaryOperator	&		4041028	0					
ANR	4041829	Identifier	str		4041028	1					
ANR	4041830	Argument	""": """		4041028	1					
ANR	4041831	PrimaryExpression	""": """		4041028	0					
ANR	4041832	ExpressionStatement	"zend_append_type_hint ( & str , fptr , fptr -> common . arg_info - 1 , 1 )"	499:2:15984:16047	4041028	1	True				
ANR	4041833	CallExpression	"zend_append_type_hint ( & str , fptr , fptr -> common . arg_info - 1 , 1 )"		4041028	0					
ANR	4041834	Callee	zend_append_type_hint		4041028	0					
ANR	4041835	Identifier	zend_append_type_hint		4041028	0					
ANR	4041836	ArgumentList	& str		4041028	1					
ANR	4041837	Argument	& str		4041028	0					
ANR	4041838	UnaryOperationExpression	& str		4041028	0					
ANR	4041839	UnaryOperator	&		4041028	0					
ANR	4041840	Identifier	str		4041028	1					
ANR	4041841	Argument	fptr		4041028	1					
ANR	4041842	Identifier	fptr		4041028	0					
ANR	4041843	Argument	fptr -> common . arg_info - 1		4041028	2					
ANR	4041844	AdditiveExpression	fptr -> common . arg_info - 1		4041028	0		-			
ANR	4041845	MemberAccess	fptr -> common . arg_info		4041028	0					
ANR	4041846	PtrMemberAccess	fptr -> common		4041028	0					
ANR	4041847	Identifier	fptr		4041028	0					
ANR	4041848	Identifier	common		4041028	1					
ANR	4041849	Identifier	arg_info		4041028	1					
ANR	4041850	PrimaryExpression	1		4041028	1					
ANR	4041851	Argument	1		4041028	3					
ANR	4041852	PrimaryExpression	1		4041028	0					
ANR	4041853	ExpressionStatement	smart_str_0 ( & str )	501:1:16053:16070	4041028	8	True				
ANR	4041854	CallExpression	smart_str_0 ( & str )		4041028	0					
ANR	4041855	Callee	smart_str_0		4041028	0					
ANR	4041856	Identifier	smart_str_0		4041028	0					
ANR	4041857	ArgumentList	& str		4041028	1					
ANR	4041858	Argument	& str		4041028	0					
ANR	4041859	UnaryOperationExpression	& str		4041028	0					
ANR	4041860	UnaryOperator	&		4041028	0					
ANR	4041861	Identifier	str		4041028	1					
ANR	4041862	ReturnStatement	return str . s ;	503:1:16074:16086	4041028	9	True				
ANR	4041863	MemberAccess	str . s		4041028	0					
ANR	4041864	Identifier	str		4041028	0					
ANR	4041865	Identifier	s		4041028	1					
ANR	4041866	ReturnType	static ZEND_COLD zend_string *		4041028	1					
ANR	4041867	Identifier	zend_get_function_declaration		4041028	2					
ANR	4041868	ParameterList	const zend_function * fptr		4041028	3					
ANR	4041869	Parameter	const zend_function * fptr	386:60:12764:12788	4041028	0	True				
ANR	4041870	ParameterType	const zend_function *		4041028	0					
ANR	4041871	Identifier	fptr		4041028	1					
ANR	4041872	CFGEntryNode	ENTRY		4041028		True				
ANR	4041873	CFGExitNode	EXIT		4041028		True				
ANR	4041874	Symbol	* op		4041028						
ANR	4041875	Symbol	fptr -> common . num_args		4041028						
ANR	4041876	Symbol	precv		4041028						
ANR	4041877	Symbol	precv -> opcode		4041028						
ANR	4041878	Symbol	fptr -> op_array		4041028						
ANR	4041879	Symbol	fptr -> type		4041028						
ANR	4041880	Symbol	RT_CONSTANT		4041028						
ANR	4041881	Symbol	required		4041028						
ANR	4041882	Symbol	* arg_info		4041028						
ANR	4041883	Symbol	& str		4041028						
ANR	4041884	Symbol	fptr -> common . required_num_args		4041028						
ANR	4041885	Symbol	ZEND_INTERNAL_FUNCTION		4041028						
ANR	4041886	Symbol	strlen		4041028						
ANR	4041887	Symbol	arg_info -> is_variadic		4041028						
ANR	4041888	Symbol	ZEND_RECV		4041028						
ANR	4041889	Symbol	num_args		4041028						
ANR	4041890	Symbol	ZEND_USER_FUNCTION		4041028						
ANR	4041891	Symbol	fptr -> common . scope		4041028						
ANR	4041892	Symbol	op -> op1		4041028						
ANR	4041893	Symbol	IS_STRING		4041028						
ANR	4041894	Symbol	* precv		4041028						
ANR	4041895	Symbol	IS_CONSTANT		4041028						
ANR	4041896	Symbol	NULL		4041028						
ANR	4041897	Symbol	str . s		4041028						
ANR	4041898	Symbol	IS_TRUE		4041028						
ANR	4041899	Symbol	arg_info -> pass_by_reference		4041028						
ANR	4041900	Symbol	fptr -> common		4041028						
ANR	4041901	Symbol	str		4041028						
ANR	4041902	Symbol	* fptr -> common		4041028						
ANR	4041903	Symbol	ZEND_ACC_VARIADIC		4041028						
ANR	4041904	Symbol	fptr -> common . function_name		4041028						
ANR	4041905	Symbol	MIN		4041028						
ANR	4041906	Symbol	fptr -> op_array . opcodes		4041028						
ANR	4041907	Symbol	arg_info -> name		4041028						
ANR	4041908	Symbol	fptr -> common . scope -> name		4041028						
ANR	4041909	Symbol	Z_STR_P		4041028						
ANR	4041910	Symbol	idx		4041028						
ANR	4041911	Symbol	zv		4041028						
ANR	4041912	Symbol	fptr -> op_array . fn_flags		4041028						
ANR	4041913	Symbol	fptr -> op_array . last		4041028						
ANR	4041914	Symbol	op -> opcode		4041028						
ANR	4041915	Symbol	IS_CONSTANT_AST		4041028						
ANR	4041916	Symbol	ZEND_RECV_INIT		4041028						
ANR	4041917	Symbol	IS_NULL		4041028						
ANR	4041918	Symbol	IS_ARRAY		4041028						
ANR	4041919	Symbol	op -> op1 . num		4041028						
ANR	4041920	Symbol	end		4041028						
ANR	4041921	Symbol	precv -> op2		4041028						
ANR	4041922	Symbol	Z_STRLEN_P		4041028						
ANR	4041923	Symbol	fptr -> common . fn_flags		4041028						
ANR	4041924	Symbol	IS_FALSE		4041028						
ANR	4041925	Symbol	* fptr		4041028						
ANR	4041926	Symbol	op		4041028						
ANR	4041927	Symbol	* * fptr		4041028						
ANR	4041928	Symbol	ZEND_ACC_HAS_RETURN_TYPE		4041028						
ANR	4041929	Symbol	i		4041028						
ANR	4041930	Symbol	zval_get_string		4041028						
ANR	4041931	Symbol	* fptr -> common . scope		4041028						
ANR	4041932	Symbol	Z_TYPE_P		4041028						
ANR	4041933	Symbol	precv -> op2_type		4041028						
ANR	4041934	Symbol	Z_STRVAL_P		4041028						
ANR	4041935	Symbol	ZSTR_VAL		4041028						
ANR	4041936	Symbol	arg_info		4041028						
ANR	4041937	Symbol	& fptr -> op_array		4041028						
ANR	4041938	Symbol	fptr -> common . arg_info		4041028						
ANR	4041939	Symbol	zv_str		4041028						
ANR	4041940	Symbol	fptr		4041028						
ANR	4041941	Symbol	ZEND_ACC_RETURN_REFERENCE		4041028						
ANR	4041942	Symbol	ZSTR_LEN		4041028						
ANR	4041943	Symbol	( ( zend_internal_arg_info * ) arg_info ) -> name		4041028						
ANR	4041944	Symbol	IS_UNUSED		4041028						
ANR	4041945	Function	do_inheritance_check_on_method	507:0:16101:20403							
ANR	4041946	FunctionDef	"do_inheritance_check_on_method (zend_function * child , zend_function * parent)"		4041945	0					
ANR	4041947	CompoundStatement		508:0:16199:20403	4041945	0					
ANR	4041948	IdentifierDeclStatement	uint32_t child_flags ;	509:1:16202:16222	4041945	0	True				
ANR	4041949	IdentifierDecl	child_flags		4041945	0					
ANR	4041950	IdentifierDeclType	uint32_t		4041945	0					
ANR	4041951	Identifier	child_flags		4041945	1					
ANR	4041952	IdentifierDeclStatement	uint32_t parent_flags = parent -> common . fn_flags ;	510:1:16225:16272	4041945	1	True				
ANR	4041953	IdentifierDecl	parent_flags = parent -> common . fn_flags		4041945	0					
ANR	4041954	IdentifierDeclType	uint32_t		4041945	0					
ANR	4041955	Identifier	parent_flags		4041945	1					
ANR	4041956	AssignmentExpression	parent_flags = parent -> common . fn_flags		4041945	2		=			
ANR	4041957	Identifier	parent_flags		4041945	0					
ANR	4041958	MemberAccess	parent -> common . fn_flags		4041945	1					
ANR	4041959	PtrMemberAccess	parent -> common		4041945	0					
ANR	4041960	Identifier	parent		4041945	0					
ANR	4041961	Identifier	common		4041945	1					
ANR	4041962	Identifier	fn_flags		4041945	1					
ANR	4041963	IfStatement	if ( ( parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && parent -> common . fn_flags & ZEND_ACC_ABSTRACT && parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT ) )		4041945	2					
ANR	4041964	Condition	( parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && parent -> common . fn_flags & ZEND_ACC_ABSTRACT && parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )	512:5:16280:16583	4041945	0	True				
ANR	4041965	AndExpression	( parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && parent -> common . fn_flags & ZEND_ACC_ABSTRACT && parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )		4041945	0		&&			
ANR	4041966	EqualityExpression	( parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0		4041945	0		==			
ANR	4041967	BitAndExpression	parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		4041945	0		&			
ANR	4041968	PtrMemberAccess	parent -> common . scope -> ce_flags		4041945	0					
ANR	4041969	MemberAccess	parent -> common . scope		4041945	0					
ANR	4041970	PtrMemberAccess	parent -> common		4041945	0					
ANR	4041971	Identifier	parent		4041945	0					
ANR	4041972	Identifier	common		4041945	1					
ANR	4041973	Identifier	scope		4041945	1					
ANR	4041974	Identifier	ce_flags		4041945	1					
ANR	4041975	Identifier	ZEND_ACC_INTERFACE		4041945	1					
ANR	4041976	PrimaryExpression	0		4041945	1					
ANR	4041977	AndExpression	parent -> common . fn_flags & ZEND_ACC_ABSTRACT && parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )		4041945	1		&&			
ANR	4041978	BitAndExpression	parent -> common . fn_flags & ZEND_ACC_ABSTRACT		4041945	0		&			
ANR	4041979	MemberAccess	parent -> common . fn_flags		4041945	0					
ANR	4041980	PtrMemberAccess	parent -> common		4041945	0					
ANR	4041981	Identifier	parent		4041945	0					
ANR	4041982	Identifier	common		4041945	1					
ANR	4041983	Identifier	fn_flags		4041945	1					
ANR	4041984	Identifier	ZEND_ACC_ABSTRACT		4041945	1					
ANR	4041985	AndExpression	parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )		4041945	1		&&			
ANR	4041986	EqualityExpression	parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope )		4041945	0		!=			
ANR	4041987	MemberAccess	parent -> common . scope		4041945	0					
ANR	4041988	PtrMemberAccess	parent -> common		4041945	0					
ANR	4041989	Identifier	parent		4041945	0					
ANR	4041990	Identifier	common		4041945	1					
ANR	4041991	Identifier	scope		4041945	1					
ANR	4041992	ConditionalExpression	child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope		4041945	1					
ANR	4041993	Condition	child -> common . prototype		4041945	0					
ANR	4041994	MemberAccess	child -> common . prototype		4041945	0					
ANR	4041995	PtrMemberAccess	child -> common		4041945	0					
ANR	4041996	Identifier	child		4041945	0					
ANR	4041997	Identifier	common		4041945	1					
ANR	4041998	Identifier	prototype		4041945	1					
ANR	4041999	MemberAccess	child -> common . prototype -> common . scope		4041945	1					
ANR	4042000	PtrMemberAccess	child -> common . prototype -> common		4041945	0					
ANR	4042001	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042002	PtrMemberAccess	child -> common		4041945	0					
ANR	4042003	Identifier	child		4041945	0					
ANR	4042004	Identifier	common		4041945	1					
ANR	4042005	Identifier	prototype		4041945	1					
ANR	4042006	Identifier	common		4041945	1					
ANR	4042007	Identifier	scope		4041945	1					
ANR	4042008	MemberAccess	child -> common . scope		4041945	2					
ANR	4042009	PtrMemberAccess	child -> common		4041945	0					
ANR	4042010	Identifier	child		4041945	0					
ANR	4042011	Identifier	common		4041945	1					
ANR	4042012	Identifier	scope		4041945	1					
ANR	4042013	BitAndExpression	child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )		4041945	1		&			
ANR	4042014	MemberAccess	child -> common . fn_flags		4041945	0					
ANR	4042015	PtrMemberAccess	child -> common		4041945	0					
ANR	4042016	Identifier	child		4041945	0					
ANR	4042017	Identifier	common		4041945	1					
ANR	4042018	Identifier	fn_flags		4041945	1					
ANR	4042019	InclusiveOrExpression	ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT		4041945	1		|			
ANR	4042020	Identifier	ZEND_ACC_ABSTRACT		4041945	0					
ANR	4042021	Identifier	ZEND_ACC_IMPLEMENTED_ABSTRACT		4041945	1					
ANR	4042022	CompoundStatement		8:81:386:386	4041945	1					
ANR	4042023	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Can't inherit abstract function %s::%s() (previously declared abstract in %s)"" , ZSTR_VAL ( parent -> common . scope -> name ) , ZSTR_VAL ( child -> common . function_name ) , child -> common . prototype ? ZSTR_VAL ( child -> common . prototype -> common . scope -> name ) : ZSTR_VAL ( child -> common . scope -> name ) )"	516:2:16590:16912	4041945	0	True				
ANR	4042024	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Can't inherit abstract function %s::%s() (previously declared abstract in %s)"" , ZSTR_VAL ( parent -> common . scope -> name ) , ZSTR_VAL ( child -> common . function_name ) , child -> common . prototype ? ZSTR_VAL ( child -> common . prototype -> common . scope -> name ) : ZSTR_VAL ( child -> common . scope -> name ) )"		4041945	0					
ANR	4042025	Callee	zend_error_noreturn		4041945	0					
ANR	4042026	Identifier	zend_error_noreturn		4041945	0					
ANR	4042027	ArgumentList	E_COMPILE_ERROR		4041945	1					
ANR	4042028	Argument	E_COMPILE_ERROR		4041945	0					
ANR	4042029	Identifier	E_COMPILE_ERROR		4041945	0					
ANR	4042030	Argument	"""Can't inherit abstract function %s::%s() (previously declared abstract in %s)"""		4041945	1					
ANR	4042031	PrimaryExpression	"""Can't inherit abstract function %s::%s() (previously declared abstract in %s)"""		4041945	0					
ANR	4042032	Argument	ZSTR_VAL ( parent -> common . scope -> name )		4041945	2					
ANR	4042033	CallExpression	ZSTR_VAL ( parent -> common . scope -> name )		4041945	0					
ANR	4042034	Callee	ZSTR_VAL		4041945	0					
ANR	4042035	Identifier	ZSTR_VAL		4041945	0					
ANR	4042036	ArgumentList	parent -> common . scope -> name		4041945	1					
ANR	4042037	Argument	parent -> common . scope -> name		4041945	0					
ANR	4042038	PtrMemberAccess	parent -> common . scope -> name		4041945	0					
ANR	4042039	MemberAccess	parent -> common . scope		4041945	0					
ANR	4042040	PtrMemberAccess	parent -> common		4041945	0					
ANR	4042041	Identifier	parent		4041945	0					
ANR	4042042	Identifier	common		4041945	1					
ANR	4042043	Identifier	scope		4041945	1					
ANR	4042044	Identifier	name		4041945	1					
ANR	4042045	Argument	ZSTR_VAL ( child -> common . function_name )		4041945	3					
ANR	4042046	CallExpression	ZSTR_VAL ( child -> common . function_name )		4041945	0					
ANR	4042047	Callee	ZSTR_VAL		4041945	0					
ANR	4042048	Identifier	ZSTR_VAL		4041945	0					
ANR	4042049	ArgumentList	child -> common . function_name		4041945	1					
ANR	4042050	Argument	child -> common . function_name		4041945	0					
ANR	4042051	MemberAccess	child -> common . function_name		4041945	0					
ANR	4042052	PtrMemberAccess	child -> common		4041945	0					
ANR	4042053	Identifier	child		4041945	0					
ANR	4042054	Identifier	common		4041945	1					
ANR	4042055	Identifier	function_name		4041945	1					
ANR	4042056	Argument	child -> common . prototype ? ZSTR_VAL ( child -> common . prototype -> common . scope -> name ) : ZSTR_VAL ( child -> common . scope -> name )		4041945	4					
ANR	4042057	ConditionalExpression	child -> common . prototype ? ZSTR_VAL ( child -> common . prototype -> common . scope -> name ) : ZSTR_VAL ( child -> common . scope -> name )		4041945	0					
ANR	4042058	Condition	child -> common . prototype		4041945	0					
ANR	4042059	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042060	PtrMemberAccess	child -> common		4041945	0					
ANR	4042061	Identifier	child		4041945	0					
ANR	4042062	Identifier	common		4041945	1					
ANR	4042063	Identifier	prototype		4041945	1					
ANR	4042064	CallExpression	ZSTR_VAL ( child -> common . prototype -> common . scope -> name )		4041945	1					
ANR	4042065	Callee	ZSTR_VAL		4041945	0					
ANR	4042066	Identifier	ZSTR_VAL		4041945	0					
ANR	4042067	ArgumentList	child -> common . prototype -> common . scope -> name		4041945	1					
ANR	4042068	Argument	child -> common . prototype -> common . scope -> name		4041945	0					
ANR	4042069	PtrMemberAccess	child -> common . prototype -> common . scope -> name		4041945	0					
ANR	4042070	MemberAccess	child -> common . prototype -> common . scope		4041945	0					
ANR	4042071	PtrMemberAccess	child -> common . prototype -> common		4041945	0					
ANR	4042072	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042073	PtrMemberAccess	child -> common		4041945	0					
ANR	4042074	Identifier	child		4041945	0					
ANR	4042075	Identifier	common		4041945	1					
ANR	4042076	Identifier	prototype		4041945	1					
ANR	4042077	Identifier	common		4041945	1					
ANR	4042078	Identifier	scope		4041945	1					
ANR	4042079	Identifier	name		4041945	1					
ANR	4042080	CallExpression	ZSTR_VAL ( child -> common . scope -> name )		4041945	2					
ANR	4042081	Callee	ZSTR_VAL		4041945	0					
ANR	4042082	Identifier	ZSTR_VAL		4041945	0					
ANR	4042083	ArgumentList	child -> common . scope -> name		4041945	1					
ANR	4042084	Argument	child -> common . scope -> name		4041945	0					
ANR	4042085	PtrMemberAccess	child -> common . scope -> name		4041945	0					
ANR	4042086	MemberAccess	child -> common . scope		4041945	0					
ANR	4042087	PtrMemberAccess	child -> common		4041945	0					
ANR	4042088	Identifier	child		4041945	0					
ANR	4042089	Identifier	common		4041945	1					
ANR	4042090	Identifier	scope		4041945	1					
ANR	4042091	Identifier	name		4041945	1					
ANR	4042092	IfStatement	if ( UNEXPECTED ( parent_flags & ZEND_ACC_FINAL ) )		4041945	3					
ANR	4042093	Condition	UNEXPECTED ( parent_flags & ZEND_ACC_FINAL )	522:5:16923:16963	4041945	0	True				
ANR	4042094	CallExpression	UNEXPECTED ( parent_flags & ZEND_ACC_FINAL )		4041945	0					
ANR	4042095	Callee	UNEXPECTED		4041945	0					
ANR	4042096	Identifier	UNEXPECTED		4041945	0					
ANR	4042097	ArgumentList	parent_flags & ZEND_ACC_FINAL		4041945	1					
ANR	4042098	Argument	parent_flags & ZEND_ACC_FINAL		4041945	0					
ANR	4042099	BitAndExpression	parent_flags & ZEND_ACC_FINAL		4041945	0		&			
ANR	4042100	Identifier	parent_flags		4041945	0					
ANR	4042101	Identifier	ZEND_ACC_FINAL		4041945	1					
ANR	4042102	CompoundStatement		15:48:766:766	4041945	1					
ANR	4042103	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot override final method %s::%s()"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) )"	523:2:16970:17114	4041945	0	True				
ANR	4042104	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot override final method %s::%s()"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) )"		4041945	0					
ANR	4042105	Callee	zend_error_noreturn		4041945	0					
ANR	4042106	Identifier	zend_error_noreturn		4041945	0					
ANR	4042107	ArgumentList	E_COMPILE_ERROR		4041945	1					
ANR	4042108	Argument	E_COMPILE_ERROR		4041945	0					
ANR	4042109	Identifier	E_COMPILE_ERROR		4041945	0					
ANR	4042110	Argument	"""Cannot override final method %s::%s()"""		4041945	1					
ANR	4042111	PrimaryExpression	"""Cannot override final method %s::%s()"""		4041945	0					
ANR	4042112	Argument	ZEND_FN_SCOPE_NAME ( parent )		4041945	2					
ANR	4042113	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		4041945	0					
ANR	4042114	Callee	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042115	Identifier	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042116	ArgumentList	parent		4041945	1					
ANR	4042117	Argument	parent		4041945	0					
ANR	4042118	Identifier	parent		4041945	0					
ANR	4042119	Argument	ZSTR_VAL ( child -> common . function_name )		4041945	3					
ANR	4042120	CallExpression	ZSTR_VAL ( child -> common . function_name )		4041945	0					
ANR	4042121	Callee	ZSTR_VAL		4041945	0					
ANR	4042122	Identifier	ZSTR_VAL		4041945	0					
ANR	4042123	ArgumentList	child -> common . function_name		4041945	1					
ANR	4042124	Argument	child -> common . function_name		4041945	0					
ANR	4042125	MemberAccess	child -> common . function_name		4041945	0					
ANR	4042126	PtrMemberAccess	child -> common		4041945	0					
ANR	4042127	Identifier	child		4041945	0					
ANR	4042128	Identifier	common		4041945	1					
ANR	4042129	Identifier	function_name		4041945	1					
ANR	4042130	ExpressionStatement	child_flags = child -> common . fn_flags	526:1:17121:17157	4041945	4	True				
ANR	4042131	AssignmentExpression	child_flags = child -> common . fn_flags		4041945	0		=			
ANR	4042132	Identifier	child_flags		4041945	0					
ANR	4042133	MemberAccess	child -> common . fn_flags		4041945	1					
ANR	4042134	PtrMemberAccess	child -> common		4041945	0					
ANR	4042135	Identifier	child		4041945	0					
ANR	4042136	Identifier	common		4041945	1					
ANR	4042137	Identifier	fn_flags		4041945	1					
ANR	4042138	IfStatement	if ( UNEXPECTED ( ( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC ) ) )		4041945	5					
ANR	4042139	Condition	UNEXPECTED ( ( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC ) )	529:5:17233:17311	4041945	0	True				
ANR	4042140	CallExpression	UNEXPECTED ( ( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC ) )		4041945	0					
ANR	4042141	Callee	UNEXPECTED		4041945	0					
ANR	4042142	Identifier	UNEXPECTED		4041945	0					
ANR	4042143	ArgumentList	( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC )		4041945	1					
ANR	4042144	Argument	( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC )		4041945	0					
ANR	4042145	EqualityExpression	( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC )		4041945	0		!=			
ANR	4042146	BitAndExpression	child_flags & ZEND_ACC_STATIC		4041945	0		&			
ANR	4042147	Identifier	child_flags		4041945	0					
ANR	4042148	Identifier	ZEND_ACC_STATIC		4041945	1					
ANR	4042149	BitAndExpression	parent_flags & ZEND_ACC_STATIC		4041945	1		&			
ANR	4042150	Identifier	parent_flags		4041945	0					
ANR	4042151	Identifier	ZEND_ACC_STATIC		4041945	1					
ANR	4042152	CompoundStatement		22:86:1114:1114	4041945	1					
ANR	4042153	IfStatement	if ( child -> common . fn_flags & ZEND_ACC_STATIC )		4041945	0					
ANR	4042154	Condition	child -> common . fn_flags & ZEND_ACC_STATIC	530:6:17322:17361	4041945	0	True				
ANR	4042155	BitAndExpression	child -> common . fn_flags & ZEND_ACC_STATIC		4041945	0		&			
ANR	4042156	MemberAccess	child -> common . fn_flags		4041945	0					
ANR	4042157	PtrMemberAccess	child -> common		4041945	0					
ANR	4042158	Identifier	child		4041945	0					
ANR	4042159	Identifier	common		4041945	1					
ANR	4042160	Identifier	fn_flags		4041945	1					
ANR	4042161	Identifier	ZEND_ACC_STATIC		4041945	1					
ANR	4042162	CompoundStatement		23:48:1164:1164	4041945	1					
ANR	4042163	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make non static method %s::%s() static in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"	531:3:17369:17560	4041945	0	True				
ANR	4042164	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make non static method %s::%s() static in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"		4041945	0					
ANR	4042165	Callee	zend_error_noreturn		4041945	0					
ANR	4042166	Identifier	zend_error_noreturn		4041945	0					
ANR	4042167	ArgumentList	E_COMPILE_ERROR		4041945	1					
ANR	4042168	Argument	E_COMPILE_ERROR		4041945	0					
ANR	4042169	Identifier	E_COMPILE_ERROR		4041945	0					
ANR	4042170	Argument	"""Cannot make non static method %s::%s() static in class %s"""		4041945	1					
ANR	4042171	PrimaryExpression	"""Cannot make non static method %s::%s() static in class %s"""		4041945	0					
ANR	4042172	Argument	ZEND_FN_SCOPE_NAME ( parent )		4041945	2					
ANR	4042173	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		4041945	0					
ANR	4042174	Callee	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042175	Identifier	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042176	ArgumentList	parent		4041945	1					
ANR	4042177	Argument	parent		4041945	0					
ANR	4042178	Identifier	parent		4041945	0					
ANR	4042179	Argument	ZSTR_VAL ( child -> common . function_name )		4041945	3					
ANR	4042180	CallExpression	ZSTR_VAL ( child -> common . function_name )		4041945	0					
ANR	4042181	Callee	ZSTR_VAL		4041945	0					
ANR	4042182	Identifier	ZSTR_VAL		4041945	0					
ANR	4042183	ArgumentList	child -> common . function_name		4041945	1					
ANR	4042184	Argument	child -> common . function_name		4041945	0					
ANR	4042185	MemberAccess	child -> common . function_name		4041945	0					
ANR	4042186	PtrMemberAccess	child -> common		4041945	0					
ANR	4042187	Identifier	child		4041945	0					
ANR	4042188	Identifier	common		4041945	1					
ANR	4042189	Identifier	function_name		4041945	1					
ANR	4042190	Argument	ZEND_FN_SCOPE_NAME ( child )		4041945	4					
ANR	4042191	CallExpression	ZEND_FN_SCOPE_NAME ( child )		4041945	0					
ANR	4042192	Callee	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042193	Identifier	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042194	ArgumentList	child		4041945	1					
ANR	4042195	Argument	child		4041945	0					
ANR	4042196	Identifier	child		4041945	0					
ANR	4042197	ElseStatement	else		4041945	0					
ANR	4042198	CompoundStatement		25:9:1371:1371	4041945	0					
ANR	4042199	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make static method %s::%s() non static in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"	533:3:17576:17767	4041945	0	True				
ANR	4042200	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make static method %s::%s() non static in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"		4041945	0					
ANR	4042201	Callee	zend_error_noreturn		4041945	0					
ANR	4042202	Identifier	zend_error_noreturn		4041945	0					
ANR	4042203	ArgumentList	E_COMPILE_ERROR		4041945	1					
ANR	4042204	Argument	E_COMPILE_ERROR		4041945	0					
ANR	4042205	Identifier	E_COMPILE_ERROR		4041945	0					
ANR	4042206	Argument	"""Cannot make static method %s::%s() non static in class %s"""		4041945	1					
ANR	4042207	PrimaryExpression	"""Cannot make static method %s::%s() non static in class %s"""		4041945	0					
ANR	4042208	Argument	ZEND_FN_SCOPE_NAME ( parent )		4041945	2					
ANR	4042209	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		4041945	0					
ANR	4042210	Callee	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042211	Identifier	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042212	ArgumentList	parent		4041945	1					
ANR	4042213	Argument	parent		4041945	0					
ANR	4042214	Identifier	parent		4041945	0					
ANR	4042215	Argument	ZSTR_VAL ( child -> common . function_name )		4041945	3					
ANR	4042216	CallExpression	ZSTR_VAL ( child -> common . function_name )		4041945	0					
ANR	4042217	Callee	ZSTR_VAL		4041945	0					
ANR	4042218	Identifier	ZSTR_VAL		4041945	0					
ANR	4042219	ArgumentList	child -> common . function_name		4041945	1					
ANR	4042220	Argument	child -> common . function_name		4041945	0					
ANR	4042221	MemberAccess	child -> common . function_name		4041945	0					
ANR	4042222	PtrMemberAccess	child -> common		4041945	0					
ANR	4042223	Identifier	child		4041945	0					
ANR	4042224	Identifier	common		4041945	1					
ANR	4042225	Identifier	function_name		4041945	1					
ANR	4042226	Argument	ZEND_FN_SCOPE_NAME ( child )		4041945	4					
ANR	4042227	CallExpression	ZEND_FN_SCOPE_NAME ( child )		4041945	0					
ANR	4042228	Callee	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042229	Identifier	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042230	ArgumentList	child		4041945	1					
ANR	4042231	Argument	child		4041945	0					
ANR	4042232	Identifier	child		4041945	0					
ANR	4042233	IfStatement	if ( UNEXPECTED ( ( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT ) ) )		4041945	6					
ANR	4042234	Condition	UNEXPECTED ( ( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT ) )	538:5:17835:17916	4041945	0	True				
ANR	4042235	CallExpression	UNEXPECTED ( ( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT ) )		4041945	0					
ANR	4042236	Callee	UNEXPECTED		4041945	0					
ANR	4042237	Identifier	UNEXPECTED		4041945	0					
ANR	4042238	ArgumentList	( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT )		4041945	1					
ANR	4042239	Argument	( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT )		4041945	0					
ANR	4042240	RelationalExpression	( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT )		4041945	0		>			
ANR	4042241	BitAndExpression	child_flags & ZEND_ACC_ABSTRACT		4041945	0		&			
ANR	4042242	Identifier	child_flags		4041945	0					
ANR	4042243	Identifier	ZEND_ACC_ABSTRACT		4041945	1					
ANR	4042244	BitAndExpression	parent_flags & ZEND_ACC_ABSTRACT		4041945	1		&			
ANR	4042245	Identifier	parent_flags		4041945	0					
ANR	4042246	Identifier	ZEND_ACC_ABSTRACT		4041945	1					
ANR	4042247	CompoundStatement		31:89:1719:1719	4041945	1					
ANR	4042248	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make non abstract method %s::%s() abstract in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"	539:2:17923:18118	4041945	0	True				
ANR	4042249	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make non abstract method %s::%s() abstract in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"		4041945	0					
ANR	4042250	Callee	zend_error_noreturn		4041945	0					
ANR	4042251	Identifier	zend_error_noreturn		4041945	0					
ANR	4042252	ArgumentList	E_COMPILE_ERROR		4041945	1					
ANR	4042253	Argument	E_COMPILE_ERROR		4041945	0					
ANR	4042254	Identifier	E_COMPILE_ERROR		4041945	0					
ANR	4042255	Argument	"""Cannot make non abstract method %s::%s() abstract in class %s"""		4041945	1					
ANR	4042256	PrimaryExpression	"""Cannot make non abstract method %s::%s() abstract in class %s"""		4041945	0					
ANR	4042257	Argument	ZEND_FN_SCOPE_NAME ( parent )		4041945	2					
ANR	4042258	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		4041945	0					
ANR	4042259	Callee	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042260	Identifier	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042261	ArgumentList	parent		4041945	1					
ANR	4042262	Argument	parent		4041945	0					
ANR	4042263	Identifier	parent		4041945	0					
ANR	4042264	Argument	ZSTR_VAL ( child -> common . function_name )		4041945	3					
ANR	4042265	CallExpression	ZSTR_VAL ( child -> common . function_name )		4041945	0					
ANR	4042266	Callee	ZSTR_VAL		4041945	0					
ANR	4042267	Identifier	ZSTR_VAL		4041945	0					
ANR	4042268	ArgumentList	child -> common . function_name		4041945	1					
ANR	4042269	Argument	child -> common . function_name		4041945	0					
ANR	4042270	MemberAccess	child -> common . function_name		4041945	0					
ANR	4042271	PtrMemberAccess	child -> common		4041945	0					
ANR	4042272	Identifier	child		4041945	0					
ANR	4042273	Identifier	common		4041945	1					
ANR	4042274	Identifier	function_name		4041945	1					
ANR	4042275	Argument	ZEND_FN_SCOPE_NAME ( child )		4041945	4					
ANR	4042276	CallExpression	ZEND_FN_SCOPE_NAME ( child )		4041945	0					
ANR	4042277	Callee	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042278	Identifier	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042279	ArgumentList	child		4041945	1					
ANR	4042280	Argument	child		4041945	0					
ANR	4042281	Identifier	child		4041945	0					
ANR	4042282	IfStatement	if ( parent_flags & ZEND_ACC_CHANGED )		4041945	7					
ANR	4042283	Condition	parent_flags & ZEND_ACC_CHANGED	542:5:18129:18159	4041945	0	True				
ANR	4042284	BitAndExpression	parent_flags & ZEND_ACC_CHANGED		4041945	0		&			
ANR	4042285	Identifier	parent_flags		4041945	0					
ANR	4042286	Identifier	ZEND_ACC_CHANGED		4041945	1					
ANR	4042287	CompoundStatement		35:38:1962:1962	4041945	1					
ANR	4042288	ExpressionStatement	child -> common . fn_flags |= ZEND_ACC_CHANGED	543:2:18166:18208	4041945	0	True				
ANR	4042289	AssignmentExpression	child -> common . fn_flags |= ZEND_ACC_CHANGED		4041945	0		|=			
ANR	4042290	MemberAccess	child -> common . fn_flags		4041945	0					
ANR	4042291	PtrMemberAccess	child -> common		4041945	0					
ANR	4042292	Identifier	child		4041945	0					
ANR	4042293	Identifier	common		4041945	1					
ANR	4042294	Identifier	fn_flags		4041945	1					
ANR	4042295	Identifier	ZEND_ACC_CHANGED		4041945	1					
ANR	4042296	ElseStatement	else		4041945	0					
ANR	4042297	CompoundStatement		37:8:2018:2018	4041945	0					
ANR	4042298	IfStatement	if ( UNEXPECTED ( ( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK ) ) )		4041945	0					
ANR	4042299	Condition	UNEXPECTED ( ( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK ) )	547:6:18322:18403	4041945	0	True				
ANR	4042300	CallExpression	UNEXPECTED ( ( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK ) )		4041945	0					
ANR	4042301	Callee	UNEXPECTED		4041945	0					
ANR	4042302	Identifier	UNEXPECTED		4041945	0					
ANR	4042303	ArgumentList	( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK )		4041945	1					
ANR	4042304	Argument	( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK )		4041945	0					
ANR	4042305	RelationalExpression	( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK )		4041945	0		>			
ANR	4042306	BitAndExpression	child_flags & ZEND_ACC_PPP_MASK		4041945	0		&			
ANR	4042307	Identifier	child_flags		4041945	0					
ANR	4042308	Identifier	ZEND_ACC_PPP_MASK		4041945	1					
ANR	4042309	BitAndExpression	parent_flags & ZEND_ACC_PPP_MASK		4041945	1		&			
ANR	4042310	Identifier	parent_flags		4041945	0					
ANR	4042311	Identifier	ZEND_ACC_PPP_MASK		4041945	1					
ANR	4042312	CompoundStatement		40:90:2206:2206	4041945	1					
ANR	4042313	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Access level to %s::%s() must be %s (as in class %s)%s"" , ZEND_FN_SCOPE_NAME ( child ) , ZSTR_VAL ( child -> common . function_name ) , zend_visibility_string ( parent_flags ) , ZEND_FN_SCOPE_NAME ( parent ) , ( parent_flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"" )"	548:3:18411:18689	4041945	0	True				
ANR	4042314	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Access level to %s::%s() must be %s (as in class %s)%s"" , ZEND_FN_SCOPE_NAME ( child ) , ZSTR_VAL ( child -> common . function_name ) , zend_visibility_string ( parent_flags ) , ZEND_FN_SCOPE_NAME ( parent ) , ( parent_flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"" )"		4041945	0					
ANR	4042315	Callee	zend_error_noreturn		4041945	0					
ANR	4042316	Identifier	zend_error_noreturn		4041945	0					
ANR	4042317	ArgumentList	E_COMPILE_ERROR		4041945	1					
ANR	4042318	Argument	E_COMPILE_ERROR		4041945	0					
ANR	4042319	Identifier	E_COMPILE_ERROR		4041945	0					
ANR	4042320	Argument	"""Access level to %s::%s() must be %s (as in class %s)%s"""		4041945	1					
ANR	4042321	PrimaryExpression	"""Access level to %s::%s() must be %s (as in class %s)%s"""		4041945	0					
ANR	4042322	Argument	ZEND_FN_SCOPE_NAME ( child )		4041945	2					
ANR	4042323	CallExpression	ZEND_FN_SCOPE_NAME ( child )		4041945	0					
ANR	4042324	Callee	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042325	Identifier	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042326	ArgumentList	child		4041945	1					
ANR	4042327	Argument	child		4041945	0					
ANR	4042328	Identifier	child		4041945	0					
ANR	4042329	Argument	ZSTR_VAL ( child -> common . function_name )		4041945	3					
ANR	4042330	CallExpression	ZSTR_VAL ( child -> common . function_name )		4041945	0					
ANR	4042331	Callee	ZSTR_VAL		4041945	0					
ANR	4042332	Identifier	ZSTR_VAL		4041945	0					
ANR	4042333	ArgumentList	child -> common . function_name		4041945	1					
ANR	4042334	Argument	child -> common . function_name		4041945	0					
ANR	4042335	MemberAccess	child -> common . function_name		4041945	0					
ANR	4042336	PtrMemberAccess	child -> common		4041945	0					
ANR	4042337	Identifier	child		4041945	0					
ANR	4042338	Identifier	common		4041945	1					
ANR	4042339	Identifier	function_name		4041945	1					
ANR	4042340	Argument	zend_visibility_string ( parent_flags )		4041945	4					
ANR	4042341	CallExpression	zend_visibility_string ( parent_flags )		4041945	0					
ANR	4042342	Callee	zend_visibility_string		4041945	0					
ANR	4042343	Identifier	zend_visibility_string		4041945	0					
ANR	4042344	ArgumentList	parent_flags		4041945	1					
ANR	4042345	Argument	parent_flags		4041945	0					
ANR	4042346	Identifier	parent_flags		4041945	0					
ANR	4042347	Argument	ZEND_FN_SCOPE_NAME ( parent )		4041945	5					
ANR	4042348	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		4041945	0					
ANR	4042349	Callee	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042350	Identifier	ZEND_FN_SCOPE_NAME		4041945	0					
ANR	4042351	ArgumentList	parent		4041945	1					
ANR	4042352	Argument	parent		4041945	0					
ANR	4042353	Identifier	parent		4041945	0					
ANR	4042354	Argument	"( parent_flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"""		4041945	6					
ANR	4042355	ConditionalExpression	"( parent_flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"""		4041945	0					
ANR	4042356	Condition	parent_flags & ZEND_ACC_PUBLIC		4041945	0					
ANR	4042357	BitAndExpression	parent_flags & ZEND_ACC_PUBLIC		4041945	0		&			
ANR	4042358	Identifier	parent_flags		4041945	0					
ANR	4042359	Identifier	ZEND_ACC_PUBLIC		4041945	1					
ANR	4042360	PrimaryExpression	""""""		4041945	1					
ANR	4042361	PrimaryExpression	""" or weaker"""		4041945	2					
ANR	4042362	ElseStatement	else		4041945	0					
ANR	4042363	IfStatement	if ( ( ( child_flags & ZEND_ACC_PPP_MASK ) < ( parent_flags & ZEND_ACC_PPP_MASK ) ) && ( ( parent_flags & ZEND_ACC_PPP_MASK ) & ZEND_ACC_PRIVATE ) )		4041945	0					
ANR	4042364	Condition	( ( child_flags & ZEND_ACC_PPP_MASK ) < ( parent_flags & ZEND_ACC_PPP_MASK ) ) && ( ( parent_flags & ZEND_ACC_PPP_MASK ) & ZEND_ACC_PRIVATE )	549:13:18704:18837	4041945	0	True				
ANR	4042365	AndExpression	( ( child_flags & ZEND_ACC_PPP_MASK ) < ( parent_flags & ZEND_ACC_PPP_MASK ) ) && ( ( parent_flags & ZEND_ACC_PPP_MASK ) & ZEND_ACC_PRIVATE )		4041945	0		&&			
ANR	4042366	RelationalExpression	( child_flags & ZEND_ACC_PPP_MASK ) < ( parent_flags & ZEND_ACC_PPP_MASK )		4041945	0		<			
ANR	4042367	BitAndExpression	child_flags & ZEND_ACC_PPP_MASK		4041945	0		&			
ANR	4042368	Identifier	child_flags		4041945	0					
ANR	4042369	Identifier	ZEND_ACC_PPP_MASK		4041945	1					
ANR	4042370	BitAndExpression	parent_flags & ZEND_ACC_PPP_MASK		4041945	1		&			
ANR	4042371	Identifier	parent_flags		4041945	0					
ANR	4042372	Identifier	ZEND_ACC_PPP_MASK		4041945	1					
ANR	4042373	BitAndExpression	( parent_flags & ZEND_ACC_PPP_MASK ) & ZEND_ACC_PRIVATE		4041945	1		&			
ANR	4042374	BitAndExpression	parent_flags & ZEND_ACC_PPP_MASK		4041945	0		&			
ANR	4042375	Identifier	parent_flags		4041945	0					
ANR	4042376	Identifier	ZEND_ACC_PPP_MASK		4041945	1					
ANR	4042377	Identifier	ZEND_ACC_PRIVATE		4041945	1					
ANR	4042378	CompoundStatement		43:63:2640:2640	4041945	1					
ANR	4042379	ExpressionStatement	child -> common . fn_flags |= ZEND_ACC_CHANGED	551:3:18845:18887	4041945	0	True				
ANR	4042380	AssignmentExpression	child -> common . fn_flags |= ZEND_ACC_CHANGED		4041945	0		|=			
ANR	4042381	MemberAccess	child -> common . fn_flags		4041945	0					
ANR	4042382	PtrMemberAccess	child -> common		4041945	0					
ANR	4042383	Identifier	child		4041945	0					
ANR	4042384	Identifier	common		4041945	1					
ANR	4042385	Identifier	fn_flags		4041945	1					
ANR	4042386	Identifier	ZEND_ACC_CHANGED		4041945	1					
ANR	4042387	IfStatement	if ( parent_flags & ZEND_ACC_PRIVATE )		4041945	8					
ANR	4042388	Condition	parent_flags & ZEND_ACC_PRIVATE	555:5:18902:18932	4041945	0	True				
ANR	4042389	BitAndExpression	parent_flags & ZEND_ACC_PRIVATE		4041945	0		&			
ANR	4042390	Identifier	parent_flags		4041945	0					
ANR	4042391	Identifier	ZEND_ACC_PRIVATE		4041945	1					
ANR	4042392	CompoundStatement		48:38:2735:2735	4041945	1					
ANR	4042393	ExpressionStatement	child -> common . prototype = NULL	556:2:18939:18969	4041945	0	True				
ANR	4042394	AssignmentExpression	child -> common . prototype = NULL		4041945	0		=			
ANR	4042395	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042396	PtrMemberAccess	child -> common		4041945	0					
ANR	4042397	Identifier	child		4041945	0					
ANR	4042398	Identifier	common		4041945	1					
ANR	4042399	Identifier	prototype		4041945	1					
ANR	4042400	Identifier	NULL		4041945	1					
ANR	4042401	ElseStatement	else		4041945	0					
ANR	4042402	IfStatement	if ( parent_flags & ZEND_ACC_ABSTRACT )		4041945	0					
ANR	4042403	Condition	parent_flags & ZEND_ACC_ABSTRACT	557:12:18983:19014	4041945	0	True				
ANR	4042404	BitAndExpression	parent_flags & ZEND_ACC_ABSTRACT		4041945	0		&			
ANR	4042405	Identifier	parent_flags		4041945	0					
ANR	4042406	Identifier	ZEND_ACC_ABSTRACT		4041945	1					
ANR	4042407	CompoundStatement		50:46:2817:2817	4041945	1					
ANR	4042408	ExpressionStatement	child -> common . fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT	558:2:19021:19076	4041945	0	True				
ANR	4042409	AssignmentExpression	child -> common . fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT		4041945	0		|=			
ANR	4042410	MemberAccess	child -> common . fn_flags		4041945	0					
ANR	4042411	PtrMemberAccess	child -> common		4041945	0					
ANR	4042412	Identifier	child		4041945	0					
ANR	4042413	Identifier	common		4041945	1					
ANR	4042414	Identifier	fn_flags		4041945	1					
ANR	4042415	Identifier	ZEND_ACC_IMPLEMENTED_ABSTRACT		4041945	1					
ANR	4042416	ExpressionStatement	child -> common . prototype = parent	559:2:19080:19112	4041945	1	True				
ANR	4042417	AssignmentExpression	child -> common . prototype = parent		4041945	0		=			
ANR	4042418	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042419	PtrMemberAccess	child -> common		4041945	0					
ANR	4042420	Identifier	child		4041945	0					
ANR	4042421	Identifier	common		4041945	1					
ANR	4042422	Identifier	prototype		4041945	1					
ANR	4042423	Identifier	parent		4041945	1					
ANR	4042424	ElseStatement	else		4041945	0					
ANR	4042425	IfStatement	if ( ! ( parent -> common . fn_flags & ZEND_ACC_CTOR ) || ( parent -> common . prototype && ( parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) ) )		4041945	0					
ANR	4042426	Condition	! ( parent -> common . fn_flags & ZEND_ACC_CTOR ) || ( parent -> common . prototype && ( parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) )	560:12:19126:19272	4041945	0	True				
ANR	4042427	OrExpression	! ( parent -> common . fn_flags & ZEND_ACC_CTOR ) || ( parent -> common . prototype && ( parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) )		4041945	0		||			
ANR	4042428	UnaryOperationExpression	! ( parent -> common . fn_flags & ZEND_ACC_CTOR )		4041945	0					
ANR	4042429	UnaryOperator	!		4041945	0					
ANR	4042430	BitAndExpression	parent -> common . fn_flags & ZEND_ACC_CTOR		4041945	1		&			
ANR	4042431	MemberAccess	parent -> common . fn_flags		4041945	0					
ANR	4042432	PtrMemberAccess	parent -> common		4041945	0					
ANR	4042433	Identifier	parent		4041945	0					
ANR	4042434	Identifier	common		4041945	1					
ANR	4042435	Identifier	fn_flags		4041945	1					
ANR	4042436	Identifier	ZEND_ACC_CTOR		4041945	1					
ANR	4042437	AndExpression	parent -> common . prototype && ( parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE )		4041945	1		&&			
ANR	4042438	MemberAccess	parent -> common . prototype		4041945	0					
ANR	4042439	PtrMemberAccess	parent -> common		4041945	0					
ANR	4042440	Identifier	parent		4041945	0					
ANR	4042441	Identifier	common		4041945	1					
ANR	4042442	Identifier	prototype		4041945	1					
ANR	4042443	BitAndExpression	parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		4041945	1		&			
ANR	4042444	PtrMemberAccess	parent -> common . prototype -> common . scope -> ce_flags		4041945	0					
ANR	4042445	MemberAccess	parent -> common . prototype -> common . scope		4041945	0					
ANR	4042446	PtrMemberAccess	parent -> common . prototype -> common		4041945	0					
ANR	4042447	MemberAccess	parent -> common . prototype		4041945	0					
ANR	4042448	PtrMemberAccess	parent -> common		4041945	0					
ANR	4042449	Identifier	parent		4041945	0					
ANR	4042450	Identifier	common		4041945	1					
ANR	4042451	Identifier	prototype		4041945	1					
ANR	4042452	Identifier	common		4041945	1					
ANR	4042453	Identifier	scope		4041945	1					
ANR	4042454	Identifier	ce_flags		4041945	1					
ANR	4042455	Identifier	ZEND_ACC_INTERFACE		4041945	1					
ANR	4042456	CompoundStatement		53:161:3075:3075	4041945	1					
ANR	4042457	ExpressionStatement	child -> common . prototype = parent -> common . prototype ? parent -> common . prototype : parent	562:2:19345:19431	4041945	0	True				
ANR	4042458	AssignmentExpression	child -> common . prototype = parent -> common . prototype ? parent -> common . prototype : parent		4041945	0		=			
ANR	4042459	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042460	PtrMemberAccess	child -> common		4041945	0					
ANR	4042461	Identifier	child		4041945	0					
ANR	4042462	Identifier	common		4041945	1					
ANR	4042463	Identifier	prototype		4041945	1					
ANR	4042464	ConditionalExpression	parent -> common . prototype ? parent -> common . prototype : parent		4041945	1					
ANR	4042465	Condition	parent -> common . prototype		4041945	0					
ANR	4042466	MemberAccess	parent -> common . prototype		4041945	0					
ANR	4042467	PtrMemberAccess	parent -> common		4041945	0					
ANR	4042468	Identifier	parent		4041945	0					
ANR	4042469	Identifier	common		4041945	1					
ANR	4042470	Identifier	prototype		4041945	1					
ANR	4042471	MemberAccess	parent -> common . prototype		4041945	1					
ANR	4042472	PtrMemberAccess	parent -> common		4041945	0					
ANR	4042473	Identifier	parent		4041945	0					
ANR	4042474	Identifier	common		4041945	1					
ANR	4042475	Identifier	prototype		4041945	1					
ANR	4042476	Identifier	parent		4041945	2					
ANR	4042477	IfStatement	if ( child -> common . prototype && ( child -> common . prototype -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE ) ) )		4041945	9					
ANR	4042478	Condition	child -> common . prototype && ( child -> common . prototype -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE ) )	565:5:19442:19564	4041945	0	True				
ANR	4042479	AndExpression	child -> common . prototype && ( child -> common . prototype -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE ) )		4041945	0		&&			
ANR	4042480	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042481	PtrMemberAccess	child -> common		4041945	0					
ANR	4042482	Identifier	child		4041945	0					
ANR	4042483	Identifier	common		4041945	1					
ANR	4042484	Identifier	prototype		4041945	1					
ANR	4042485	BitAndExpression	child -> common . prototype -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE )		4041945	1		&			
ANR	4042486	MemberAccess	child -> common . prototype -> common . fn_flags		4041945	0					
ANR	4042487	PtrMemberAccess	child -> common . prototype -> common		4041945	0					
ANR	4042488	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042489	PtrMemberAccess	child -> common		4041945	0					
ANR	4042490	Identifier	child		4041945	0					
ANR	4042491	Identifier	common		4041945	1					
ANR	4042492	Identifier	prototype		4041945	1					
ANR	4042493	Identifier	common		4041945	1					
ANR	4042494	Identifier	fn_flags		4041945	1					
ANR	4042495	InclusiveOrExpression	ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE		4041945	1		|			
ANR	4042496	Identifier	ZEND_ACC_ABSTRACT		4041945	0					
ANR	4042497	Identifier	ZEND_ACC_HAS_RETURN_TYPE		4041945	1					
ANR	4042498	CompoundStatement		60:4:3367:3367	4041945	1					
ANR	4042499	IfStatement	"if ( UNEXPECTED ( ! zend_do_perform_implementation_check ( child , child -> common . prototype ) ) )"		4041945	0					
ANR	4042500	Condition	"UNEXPECTED ( ! zend_do_perform_implementation_check ( child , child -> common . prototype ) )"	568:6:19575:19655	4041945	0	True				
ANR	4042501	CallExpression	"UNEXPECTED ( ! zend_do_perform_implementation_check ( child , child -> common . prototype ) )"		4041945	0					
ANR	4042502	Callee	UNEXPECTED		4041945	0					
ANR	4042503	Identifier	UNEXPECTED		4041945	0					
ANR	4042504	ArgumentList	"! zend_do_perform_implementation_check ( child , child -> common . prototype )"		4041945	1					
ANR	4042505	Argument	"! zend_do_perform_implementation_check ( child , child -> common . prototype )"		4041945	0					
ANR	4042506	UnaryOperationExpression	"! zend_do_perform_implementation_check ( child , child -> common . prototype )"		4041945	0					
ANR	4042507	UnaryOperator	!		4041945	0					
ANR	4042508	CallExpression	"zend_do_perform_implementation_check ( child , child -> common . prototype )"		4041945	1					
ANR	4042509	Callee	zend_do_perform_implementation_check		4041945	0					
ANR	4042510	Identifier	zend_do_perform_implementation_check		4041945	0					
ANR	4042511	ArgumentList	child		4041945	1					
ANR	4042512	Argument	child		4041945	0					
ANR	4042513	Identifier	child		4041945	0					
ANR	4042514	Argument	child -> common . prototype		4041945	1					
ANR	4042515	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042516	PtrMemberAccess	child -> common		4041945	0					
ANR	4042517	Identifier	child		4041945	0					
ANR	4042518	Identifier	common		4041945	1					
ANR	4042519	Identifier	prototype		4041945	1					
ANR	4042520	CompoundStatement		63:3:3554:3621	4041945	1					
ANR	4042521	IdentifierDeclStatement	zend_string * method_prototype = zend_get_function_declaration ( child -> common . prototype ) ;	569:3:19663:19749	4041945	0	True				
ANR	4042522	IdentifierDecl	* method_prototype = zend_get_function_declaration ( child -> common . prototype )		4041945	0					
ANR	4042523	IdentifierDeclType	zend_string *		4041945	0					
ANR	4042524	Identifier	method_prototype		4041945	1					
ANR	4042525	AssignmentExpression	* method_prototype = zend_get_function_declaration ( child -> common . prototype )		4041945	2		=			
ANR	4042526	Identifier	method_prototype		4041945	0					
ANR	4042527	CallExpression	zend_get_function_declaration ( child -> common . prototype )		4041945	1					
ANR	4042528	Callee	zend_get_function_declaration		4041945	0					
ANR	4042529	Identifier	zend_get_function_declaration		4041945	0					
ANR	4042530	ArgumentList	child -> common . prototype		4041945	1					
ANR	4042531	Argument	child -> common . prototype		4041945	0					
ANR	4042532	MemberAccess	child -> common . prototype		4041945	0					
ANR	4042533	PtrMemberAccess	child -> common		4041945	0					
ANR	4042534	Identifier	child		4041945	0					
ANR	4042535	Identifier	common		4041945	1					
ANR	4042536	Identifier	prototype		4041945	1					
ANR	4042537	IdentifierDeclStatement	zend_string * child_prototype = zend_get_function_declaration ( child ) ;	570:3:19754:19821	4041945	1	True				
ANR	4042538	IdentifierDecl	* child_prototype = zend_get_function_declaration ( child )		4041945	0					
ANR	4042539	IdentifierDeclType	zend_string *		4041945	0					
ANR	4042540	Identifier	child_prototype		4041945	1					
ANR	4042541	AssignmentExpression	* child_prototype = zend_get_function_declaration ( child )		4041945	2		=			
ANR	4042542	Identifier	child_prototype		4041945	0					
ANR	4042543	CallExpression	zend_get_function_declaration ( child )		4041945	1					
ANR	4042544	Callee	zend_get_function_declaration		4041945	0					
ANR	4042545	Identifier	zend_get_function_declaration		4041945	0					
ANR	4042546	ArgumentList	child		4041945	1					
ANR	4042547	Argument	child		4041945	0					
ANR	4042548	Identifier	child		4041945	0					
ANR	4042549	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( child_prototype ) , ZSTR_VAL ( method_prototype ) )"	571:3:19826:19965	4041945	2	True				
ANR	4042550	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( child_prototype ) , ZSTR_VAL ( method_prototype ) )"		4041945	0					
ANR	4042551	Callee	zend_error_noreturn		4041945	0					
ANR	4042552	Identifier	zend_error_noreturn		4041945	0					
ANR	4042553	ArgumentList	E_COMPILE_ERROR		4041945	1					
ANR	4042554	Argument	E_COMPILE_ERROR		4041945	0					
ANR	4042555	Identifier	E_COMPILE_ERROR		4041945	0					
ANR	4042556	Argument	"""Declaration of %s must be compatible with %s"""		4041945	1					
ANR	4042557	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		4041945	0					
ANR	4042558	Argument	ZSTR_VAL ( child_prototype )		4041945	2					
ANR	4042559	CallExpression	ZSTR_VAL ( child_prototype )		4041945	0					
ANR	4042560	Callee	ZSTR_VAL		4041945	0					
ANR	4042561	Identifier	ZSTR_VAL		4041945	0					
ANR	4042562	ArgumentList	child_prototype		4041945	1					
ANR	4042563	Argument	child_prototype		4041945	0					
ANR	4042564	Identifier	child_prototype		4041945	0					
ANR	4042565	Argument	ZSTR_VAL ( method_prototype )		4041945	3					
ANR	4042566	CallExpression	ZSTR_VAL ( method_prototype )		4041945	0					
ANR	4042567	Callee	ZSTR_VAL		4041945	0					
ANR	4042568	Identifier	ZSTR_VAL		4041945	0					
ANR	4042569	ArgumentList	method_prototype		4041945	1					
ANR	4042570	Argument	method_prototype		4041945	0					
ANR	4042571	Identifier	method_prototype		4041945	0					
ANR	4042572	ElseStatement	else		4041945	0					
ANR	4042573	IfStatement	"if ( UNEXPECTED ( ! zend_do_perform_implementation_check ( child , parent ) ) )"		4041945	0					
ANR	4042574	Condition	"UNEXPECTED ( ! zend_do_perform_implementation_check ( child , parent ) )"	573:12:19983:20046	4041945	0	True				
ANR	4042575	CallExpression	"UNEXPECTED ( ! zend_do_perform_implementation_check ( child , parent ) )"		4041945	0					
ANR	4042576	Callee	UNEXPECTED		4041945	0					
ANR	4042577	Identifier	UNEXPECTED		4041945	0					
ANR	4042578	ArgumentList	"! zend_do_perform_implementation_check ( child , parent )"		4041945	1					
ANR	4042579	Argument	"! zend_do_perform_implementation_check ( child , parent )"		4041945	0					
ANR	4042580	UnaryOperationExpression	"! zend_do_perform_implementation_check ( child , parent )"		4041945	0					
ANR	4042581	UnaryOperator	!		4041945	0					
ANR	4042582	CallExpression	"zend_do_perform_implementation_check ( child , parent )"		4041945	1					
ANR	4042583	Callee	zend_do_perform_implementation_check		4041945	0					
ANR	4042584	Identifier	zend_do_perform_implementation_check		4041945	0					
ANR	4042585	ArgumentList	child		4041945	1					
ANR	4042586	Argument	child		4041945	0					
ANR	4042587	Identifier	child		4041945	0					
ANR	4042588	Argument	parent		4041945	1					
ANR	4042589	Identifier	parent		4041945	0					
ANR	4042590	CompoundStatement		68:2:3926:3993	4041945	1					
ANR	4042591	IdentifierDeclStatement	zend_string * method_prototype = zend_get_function_declaration ( parent ) ;	574:2:20053:20122	4041945	0	True				
ANR	4042592	IdentifierDecl	* method_prototype = zend_get_function_declaration ( parent )		4041945	0					
ANR	4042593	IdentifierDeclType	zend_string *		4041945	0					
ANR	4042594	Identifier	method_prototype		4041945	1					
ANR	4042595	AssignmentExpression	* method_prototype = zend_get_function_declaration ( parent )		4041945	2		=			
ANR	4042596	Identifier	method_prototype		4041945	0					
ANR	4042597	CallExpression	zend_get_function_declaration ( parent )		4041945	1					
ANR	4042598	Callee	zend_get_function_declaration		4041945	0					
ANR	4042599	Identifier	zend_get_function_declaration		4041945	0					
ANR	4042600	ArgumentList	parent		4041945	1					
ANR	4042601	Argument	parent		4041945	0					
ANR	4042602	Identifier	parent		4041945	0					
ANR	4042603	IdentifierDeclStatement	zend_string * child_prototype = zend_get_function_declaration ( child ) ;	575:2:20126:20193	4041945	1	True				
ANR	4042604	IdentifierDecl	* child_prototype = zend_get_function_declaration ( child )		4041945	0					
ANR	4042605	IdentifierDeclType	zend_string *		4041945	0					
ANR	4042606	Identifier	child_prototype		4041945	1					
ANR	4042607	AssignmentExpression	* child_prototype = zend_get_function_declaration ( child )		4041945	2		=			
ANR	4042608	Identifier	child_prototype		4041945	0					
ANR	4042609	CallExpression	zend_get_function_declaration ( child )		4041945	1					
ANR	4042610	Callee	zend_get_function_declaration		4041945	0					
ANR	4042611	Identifier	zend_get_function_declaration		4041945	0					
ANR	4042612	ArgumentList	child		4041945	1					
ANR	4042613	Argument	child		4041945	0					
ANR	4042614	Identifier	child		4041945	0					
ANR	4042615	ExpressionStatement	"zend_error ( E_WARNING , ""Declaration of %s should be compatible with %s"" , ZSTR_VAL ( child_prototype ) , ZSTR_VAL ( method_prototype ) )"	576:2:20197:20323	4041945	2	True				
ANR	4042616	CallExpression	"zend_error ( E_WARNING , ""Declaration of %s should be compatible with %s"" , ZSTR_VAL ( child_prototype ) , ZSTR_VAL ( method_prototype ) )"		4041945	0					
ANR	4042617	Callee	zend_error		4041945	0					
ANR	4042618	Identifier	zend_error		4041945	0					
ANR	4042619	ArgumentList	E_WARNING		4041945	1					
ANR	4042620	Argument	E_WARNING		4041945	0					
ANR	4042621	Identifier	E_WARNING		4041945	0					
ANR	4042622	Argument	"""Declaration of %s should be compatible with %s"""		4041945	1					
ANR	4042623	PrimaryExpression	"""Declaration of %s should be compatible with %s"""		4041945	0					
ANR	4042624	Argument	ZSTR_VAL ( child_prototype )		4041945	2					
ANR	4042625	CallExpression	ZSTR_VAL ( child_prototype )		4041945	0					
ANR	4042626	Callee	ZSTR_VAL		4041945	0					
ANR	4042627	Identifier	ZSTR_VAL		4041945	0					
ANR	4042628	ArgumentList	child_prototype		4041945	1					
ANR	4042629	Argument	child_prototype		4041945	0					
ANR	4042630	Identifier	child_prototype		4041945	0					
ANR	4042631	Argument	ZSTR_VAL ( method_prototype )		4041945	3					
ANR	4042632	CallExpression	ZSTR_VAL ( method_prototype )		4041945	0					
ANR	4042633	Callee	ZSTR_VAL		4041945	0					
ANR	4042634	Identifier	ZSTR_VAL		4041945	0					
ANR	4042635	ArgumentList	method_prototype		4041945	1					
ANR	4042636	Argument	method_prototype		4041945	0					
ANR	4042637	Identifier	method_prototype		4041945	0					
ANR	4042638	ExpressionStatement	zend_string_free ( child_prototype )	577:2:20327:20360	4041945	3	True				
ANR	4042639	CallExpression	zend_string_free ( child_prototype )		4041945	0					
ANR	4042640	Callee	zend_string_free		4041945	0					
ANR	4042641	Identifier	zend_string_free		4041945	0					
ANR	4042642	ArgumentList	child_prototype		4041945	1					
ANR	4042643	Argument	child_prototype		4041945	0					
ANR	4042644	Identifier	child_prototype		4041945	0					
ANR	4042645	ExpressionStatement	zend_string_free ( method_prototype )	578:2:20364:20398	4041945	4	True				
ANR	4042646	CallExpression	zend_string_free ( method_prototype )		4041945	0					
ANR	4042647	Callee	zend_string_free		4041945	0					
ANR	4042648	Identifier	zend_string_free		4041945	0					
ANR	4042649	ArgumentList	method_prototype		4041945	1					
ANR	4042650	Argument	method_prototype		4041945	0					
ANR	4042651	Identifier	method_prototype		4041945	0					
ANR	4042652	ReturnType	static void		4041945	1					
ANR	4042653	Identifier	do_inheritance_check_on_method		4041945	2					
ANR	4042654	ParameterList	"zend_function * child , zend_function * parent"		4041945	3					
ANR	4042655	Parameter	zend_function * child	507:43:16144:16163	4041945	0	True				
ANR	4042656	ParameterType	zend_function *		4041945	0					
ANR	4042657	Identifier	child		4041945	1					
ANR	4042658	Parameter	zend_function * parent	507:65:16166:16186	4041945	1	True				
ANR	4042659	ParameterType	zend_function *		4041945	0					
ANR	4042660	Identifier	parent		4041945	1					
ANR	4042661	CFGEntryNode	ENTRY		4041945		True				
ANR	4042662	CFGExitNode	EXIT		4041945		True				
ANR	4042663	Symbol	parent		4041945						
ANR	4042664	Symbol	child -> common . prototype -> common . scope -> name		4041945						
ANR	4042665	Symbol	* parent		4041945						
ANR	4042666	Symbol	parent -> common . scope -> ce_flags		4041945						
ANR	4042667	Symbol	* child -> common . prototype -> common . scope		4041945						
ANR	4042668	Symbol	* parent -> common . prototype -> common		4041945						
ANR	4042669	Symbol	* child -> common . scope		4041945						
ANR	4042670	Symbol	E_COMPILE_ERROR		4041945						
ANR	4042671	Symbol	child -> common		4041945						
ANR	4042672	Symbol	parent -> common . prototype -> common . scope -> ce_flags		4041945						
ANR	4042673	Symbol	zend_visibility_string		4041945						
ANR	4042674	Symbol	parent -> common . prototype -> common . scope		4041945						
ANR	4042675	Symbol	child -> common . prototype -> common . scope		4041945						
ANR	4042676	Symbol	child -> common . prototype -> common		4041945						
ANR	4042677	Symbol	child -> common . prototype -> common . fn_flags		4041945						
ANR	4042678	Symbol	child_flags		4041945						
ANR	4042679	Symbol	method_prototype		4041945						
ANR	4042680	Symbol	* child -> common		4041945						
ANR	4042681	Symbol	* * parent -> common		4041945						
ANR	4042682	Symbol	* child -> common . prototype -> common		4041945						
ANR	4042683	Symbol	ZEND_ACC_INTERFACE		4041945						
ANR	4042684	Symbol	parent -> common . fn_flags		4041945						
ANR	4042685	Symbol	child -> common . scope		4041945						
ANR	4042686	Symbol	* parent -> common . scope		4041945						
ANR	4042687	Symbol	* child		4041945						
ANR	4042688	Symbol	* * * child		4041945						
ANR	4042689	Symbol	NULL		4041945						
ANR	4042690	Symbol	parent_flags		4041945						
ANR	4042691	Symbol	* parent -> common . prototype -> common . scope		4041945						
ANR	4042692	Symbol	child -> common . prototype		4041945						
ANR	4042693	Symbol	* * child -> common . prototype		4041945						
ANR	4042694	Symbol	* * parent -> common . prototype		4041945						
ANR	4042695	Symbol	child -> common . scope -> name		4041945						
ANR	4042696	Symbol	zend_get_function_declaration		4041945						
ANR	4042697	Symbol	ZEND_ACC_CTOR		4041945						
ANR	4042698	Symbol	* parent -> common		4041945						
ANR	4042699	Symbol	child_prototype		4041945						
ANR	4042700	Symbol	zend_do_perform_implementation_check		4041945						
ANR	4042701	Symbol	child -> common . function_name		4041945						
ANR	4042702	Symbol	child		4041945						
ANR	4042703	Symbol	* * child -> common		4041945						
ANR	4042704	Symbol	ZEND_ACC_PPP_MASK		4041945						
ANR	4042705	Symbol	ZEND_ACC_IMPLEMENTED_ABSTRACT		4041945						
ANR	4042706	Symbol	ZEND_ACC_PUBLIC		4041945						
ANR	4042707	Symbol	ZEND_ACC_CHANGED		4041945						
ANR	4042708	Symbol	parent -> common . prototype		4041945						
ANR	4042709	Symbol	child -> common . fn_flags		4041945						
ANR	4042710	Symbol	ZEND_ACC_FINAL		4041945						
ANR	4042711	Symbol	UNEXPECTED		4041945						
ANR	4042712	Symbol	E_WARNING		4041945						
ANR	4042713	Symbol	* * child		4041945						
ANR	4042714	Symbol	ZEND_ACC_STATIC		4041945						
ANR	4042715	Symbol	parent -> common . scope -> name		4041945						
ANR	4042716	Symbol	ZEND_FN_SCOPE_NAME		4041945						
ANR	4042717	Symbol	parent -> common		4041945						
ANR	4042718	Symbol	* parent -> common . prototype		4041945						
ANR	4042719	Symbol	ZEND_ACC_HAS_RETURN_TYPE		4041945						
ANR	4042720	Symbol	* * parent		4041945						
ANR	4042721	Symbol	ZSTR_VAL		4041945						
ANR	4042722	Symbol	ZEND_ACC_PRIVATE		4041945						
ANR	4042723	Symbol	ZEND_ACC_ABSTRACT		4041945						
ANR	4042724	Symbol	* * * parent		4041945						
ANR	4042725	Symbol	parent -> common . scope		4041945						
ANR	4042726	Symbol	parent -> common . prototype -> common		4041945						
ANR	4042727	Symbol	* child -> common . prototype		4041945						
ANR	4042728	Function	do_inherit_method	583:0:20416:20851							
ANR	4042729	FunctionDef	"do_inherit_method (zend_string * key , zend_function * parent , zend_class_entry * ce)"		4042728	0					
ANR	4042730	CompoundStatement		584:0:20529:20851	4042728	0					
ANR	4042731	IdentifierDeclStatement	"zval * child = zend_hash_find ( & ce -> function_table , key ) ;"	585:1:20532:20586	4042728	0	True				
ANR	4042732	IdentifierDecl	"* child = zend_hash_find ( & ce -> function_table , key )"		4042728	0					
ANR	4042733	IdentifierDeclType	zval *		4042728	0					
ANR	4042734	Identifier	child		4042728	1					
ANR	4042735	AssignmentExpression	"* child = zend_hash_find ( & ce -> function_table , key )"		4042728	2		=			
ANR	4042736	Identifier	child		4042728	0					
ANR	4042737	CallExpression	"zend_hash_find ( & ce -> function_table , key )"		4042728	1					
ANR	4042738	Callee	zend_hash_find		4042728	0					
ANR	4042739	Identifier	zend_hash_find		4042728	0					
ANR	4042740	ArgumentList	& ce -> function_table		4042728	1					
ANR	4042741	Argument	& ce -> function_table		4042728	0					
ANR	4042742	UnaryOperationExpression	& ce -> function_table		4042728	0					
ANR	4042743	UnaryOperator	&		4042728	0					
ANR	4042744	PtrMemberAccess	ce -> function_table		4042728	1					
ANR	4042745	Identifier	ce		4042728	0					
ANR	4042746	Identifier	function_table		4042728	1					
ANR	4042747	Argument	key		4042728	1					
ANR	4042748	Identifier	key		4042728	0					
ANR	4042749	IfStatement	if ( child )		4042728	1					
ANR	4042750	Condition	child	587:5:20594:20598	4042728	0	True				
ANR	4042751	Identifier	child		4042728	0					
ANR	4042752	CompoundStatement		4:12:71:71	4042728	1					
ANR	4042753	ExpressionStatement	"do_inheritance_check_on_method ( ( zend_function * ) Z_PTR_P ( child ) , parent )"	588:2:20605:20675	4042728	0	True				
ANR	4042754	CallExpression	"do_inheritance_check_on_method ( ( zend_function * ) Z_PTR_P ( child ) , parent )"		4042728	0					
ANR	4042755	Callee	do_inheritance_check_on_method		4042728	0					
ANR	4042756	Identifier	do_inheritance_check_on_method		4042728	0					
ANR	4042757	ArgumentList	( zend_function * ) Z_PTR_P ( child )		4042728	1					
ANR	4042758	Argument	( zend_function * ) Z_PTR_P ( child )		4042728	0					
ANR	4042759	CastExpression	( zend_function * ) Z_PTR_P ( child )		4042728	0					
ANR	4042760	CastTarget	zend_function *		4042728	0					
ANR	4042761	CallExpression	Z_PTR_P ( child )		4042728	1					
ANR	4042762	Callee	Z_PTR_P		4042728	0					
ANR	4042763	Identifier	Z_PTR_P		4042728	0					
ANR	4042764	ArgumentList	child		4042728	1					
ANR	4042765	Argument	child		4042728	0					
ANR	4042766	Identifier	child		4042728	0					
ANR	4042767	Argument	parent		4042728	1					
ANR	4042768	Identifier	parent		4042728	0					
ANR	4042769	ReturnStatement	return NULL ;	589:2:20679:20690	4042728	1	True				
ANR	4042770	Identifier	NULL		4042728	0					
ANR	4042771	IfStatement	if ( parent -> common . fn_flags & ( ZEND_ACC_ABSTRACT ) )		4042728	2					
ANR	4042772	Condition	parent -> common . fn_flags & ( ZEND_ACC_ABSTRACT )	592:5:20701:20745	4042728	0	True				
ANR	4042773	BitAndExpression	parent -> common . fn_flags & ( ZEND_ACC_ABSTRACT )		4042728	0		&			
ANR	4042774	MemberAccess	parent -> common . fn_flags		4042728	0					
ANR	4042775	PtrMemberAccess	parent -> common		4042728	0					
ANR	4042776	Identifier	parent		4042728	0					
ANR	4042777	Identifier	common		4042728	1					
ANR	4042778	Identifier	fn_flags		4042728	1					
ANR	4042779	Identifier	ZEND_ACC_ABSTRACT		4042728	1					
ANR	4042780	CompoundStatement		9:52:218:218	4042728	1					
ANR	4042781	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	593:2:20752:20800	4042728	0	True				
ANR	4042782	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4042728	0		|=			
ANR	4042783	PtrMemberAccess	ce -> ce_flags		4042728	0					
ANR	4042784	Identifier	ce		4042728	0					
ANR	4042785	Identifier	ce_flags		4042728	1					
ANR	4042786	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4042728	1					
ANR	4042787	ReturnStatement	"return zend_duplicate_function ( parent , ce ) ;"	596:1:20807:20849	4042728	3	True				
ANR	4042788	CallExpression	"zend_duplicate_function ( parent , ce )"		4042728	0					
ANR	4042789	Callee	zend_duplicate_function		4042728	0					
ANR	4042790	Identifier	zend_duplicate_function		4042728	0					
ANR	4042791	ArgumentList	parent		4042728	1					
ANR	4042792	Argument	parent		4042728	0					
ANR	4042793	Identifier	parent		4042728	0					
ANR	4042794	Argument	ce		4042728	1					
ANR	4042795	Identifier	ce		4042728	0					
ANR	4042796	ReturnType	static zend_function *		4042728	1					
ANR	4042797	Identifier	do_inherit_method		4042728	2					
ANR	4042798	ParameterList	"zend_string * key , zend_function * parent , zend_class_entry * ce"		4042728	3					
ANR	4042799	Parameter	zend_string * key	583:40:20456:20471	4042728	0	True				
ANR	4042800	ParameterType	zend_string *		4042728	0					
ANR	4042801	Identifier	key		4042728	1					
ANR	4042802	Parameter	zend_function * parent	583:58:20474:20494	4042728	1	True				
ANR	4042803	ParameterType	zend_function *		4042728	0					
ANR	4042804	Identifier	parent		4042728	1					
ANR	4042805	Parameter	zend_class_entry * ce	583:81:20497:20516	4042728	2	True				
ANR	4042806	ParameterType	zend_class_entry *		4042728	0					
ANR	4042807	Identifier	ce		4042728	1					
ANR	4042808	CFGEntryNode	ENTRY		4042728		True				
ANR	4042809	CFGExitNode	EXIT		4042728		True				
ANR	4042810	Symbol	parent -> common		4042728						
ANR	4042811	Symbol	parent		4042728						
ANR	4042812	Symbol	Z_PTR_P		4042728						
ANR	4042813	Symbol	ce		4042728						
ANR	4042814	Symbol	NULL		4042728						
ANR	4042815	Symbol	* parent		4042728						
ANR	4042816	Symbol	& ce -> function_table		4042728						
ANR	4042817	Symbol	* ce		4042728						
ANR	4042818	Symbol	ce -> ce_flags		4042728						
ANR	4042819	Symbol	zend_hash_find		4042728						
ANR	4042820	Symbol	ZEND_ACC_ABSTRACT		4042728						
ANR	4042821	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4042728						
ANR	4042822	Symbol	zend_duplicate_function		4042728						
ANR	4042823	Symbol	key		4042728						
ANR	4042824	Symbol	child		4042728						
ANR	4042825	Symbol	parent -> common . fn_flags		4042728						
ANR	4042826	Function	do_inherit_property	600:0:20864:23271							
ANR	4042827	FunctionDef	"do_inherit_property (zend_property_info * parent_info , zend_string * key , zend_class_entry * ce)"		4042826	0					
ANR	4042828	CompoundStatement		601:0:20979:23271	4042826	0					
ANR	4042829	IdentifierDeclStatement	"zval * child = zend_hash_find ( & ce -> properties_info , key ) ;"	602:1:20982:21037	4042826	0	True				
ANR	4042830	IdentifierDecl	"* child = zend_hash_find ( & ce -> properties_info , key )"		4042826	0					
ANR	4042831	IdentifierDeclType	zval *		4042826	0					
ANR	4042832	Identifier	child		4042826	1					
ANR	4042833	AssignmentExpression	"* child = zend_hash_find ( & ce -> properties_info , key )"		4042826	2		=			
ANR	4042834	Identifier	child		4042826	0					
ANR	4042835	CallExpression	"zend_hash_find ( & ce -> properties_info , key )"		4042826	1					
ANR	4042836	Callee	zend_hash_find		4042826	0					
ANR	4042837	Identifier	zend_hash_find		4042826	0					
ANR	4042838	ArgumentList	& ce -> properties_info		4042826	1					
ANR	4042839	Argument	& ce -> properties_info		4042826	0					
ANR	4042840	UnaryOperationExpression	& ce -> properties_info		4042826	0					
ANR	4042841	UnaryOperator	&		4042826	0					
ANR	4042842	PtrMemberAccess	ce -> properties_info		4042826	1					
ANR	4042843	Identifier	ce		4042826	0					
ANR	4042844	Identifier	properties_info		4042826	1					
ANR	4042845	Argument	key		4042826	1					
ANR	4042846	Identifier	key		4042826	0					
ANR	4042847	IdentifierDeclStatement	zend_property_info * child_info ;	603:1:21040:21070	4042826	1	True				
ANR	4042848	IdentifierDecl	* child_info		4042826	0					
ANR	4042849	IdentifierDeclType	zend_property_info *		4042826	0					
ANR	4042850	Identifier	child_info		4042826	1					
ANR	4042851	IfStatement	if ( UNEXPECTED ( child ) )		4042826	2					
ANR	4042852	Condition	UNEXPECTED ( child )	605:5:21078:21094	4042826	0	True				
ANR	4042853	CallExpression	UNEXPECTED ( child )		4042826	0					
ANR	4042854	Callee	UNEXPECTED		4042826	0					
ANR	4042855	Identifier	UNEXPECTED		4042826	0					
ANR	4042856	ArgumentList	child		4042826	1					
ANR	4042857	Argument	child		4042826	0					
ANR	4042858	Identifier	child		4042826	0					
ANR	4042859	CompoundStatement		5:24:117:117	4042826	1					
ANR	4042860	ExpressionStatement	child_info = Z_PTR_P ( child )	606:2:21101:21128	4042826	0	True				
ANR	4042861	AssignmentExpression	child_info = Z_PTR_P ( child )		4042826	0		=			
ANR	4042862	Identifier	child_info		4042826	0					
ANR	4042863	CallExpression	Z_PTR_P ( child )		4042826	1					
ANR	4042864	Callee	Z_PTR_P		4042826	0					
ANR	4042865	Identifier	Z_PTR_P		4042826	0					
ANR	4042866	ArgumentList	child		4042826	1					
ANR	4042867	Argument	child		4042826	0					
ANR	4042868	Identifier	child		4042826	0					
ANR	4042869	IfStatement	if ( UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) ) )		4042826	1					
ANR	4042870	Condition	UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) )	607:6:21136:21202	4042826	0	True				
ANR	4042871	CallExpression	UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) )		4042826	0					
ANR	4042872	Callee	UNEXPECTED		4042826	0					
ANR	4042873	Identifier	UNEXPECTED		4042826	0					
ANR	4042874	ArgumentList	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		4042826	1					
ANR	4042875	Argument	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		4042826	0					
ANR	4042876	BitAndExpression	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		4042826	0		&			
ANR	4042877	PtrMemberAccess	parent_info -> flags		4042826	0					
ANR	4042878	Identifier	parent_info		4042826	0					
ANR	4042879	Identifier	flags		4042826	1					
ANR	4042880	InclusiveOrExpression	ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW		4042826	1		|			
ANR	4042881	Identifier	ZEND_ACC_PRIVATE		4042826	0					
ANR	4042882	Identifier	ZEND_ACC_SHADOW		4042826	1					
ANR	4042883	CompoundStatement		7:75:225:225	4042826	1					
ANR	4042884	ExpressionStatement	child_info -> flags |= ZEND_ACC_CHANGED	608:3:21210:21247	4042826	0	True				
ANR	4042885	AssignmentExpression	child_info -> flags |= ZEND_ACC_CHANGED		4042826	0		|=			
ANR	4042886	PtrMemberAccess	child_info -> flags		4042826	0					
ANR	4042887	Identifier	child_info		4042826	0					
ANR	4042888	Identifier	flags		4042826	1					
ANR	4042889	Identifier	ZEND_ACC_CHANGED		4042826	1					
ANR	4042890	ElseStatement	else		4042826	0					
ANR	4042891	CompoundStatement		9:9:278:278	4042826	0					
ANR	4042892	IfStatement	if ( UNEXPECTED ( ( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC ) ) )		4042826	0					
ANR	4042893	Condition	UNEXPECTED ( ( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC ) )	610:7:21267:21357	4042826	0	True				
ANR	4042894	CallExpression	UNEXPECTED ( ( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC ) )		4042826	0					
ANR	4042895	Callee	UNEXPECTED		4042826	0					
ANR	4042896	Identifier	UNEXPECTED		4042826	0					
ANR	4042897	ArgumentList	( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC )		4042826	1					
ANR	4042898	Argument	( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC )		4042826	0					
ANR	4042899	EqualityExpression	( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC )		4042826	0		!=			
ANR	4042900	BitAndExpression	parent_info -> flags & ZEND_ACC_STATIC		4042826	0		&			
ANR	4042901	PtrMemberAccess	parent_info -> flags		4042826	0					
ANR	4042902	Identifier	parent_info		4042826	0					
ANR	4042903	Identifier	flags		4042826	1					
ANR	4042904	Identifier	ZEND_ACC_STATIC		4042826	1					
ANR	4042905	BitAndExpression	child_info -> flags & ZEND_ACC_STATIC		4042826	1		&			
ANR	4042906	PtrMemberAccess	child_info -> flags		4042826	0					
ANR	4042907	Identifier	child_info		4042826	0					
ANR	4042908	Identifier	flags		4042826	1					
ANR	4042909	Identifier	ZEND_ACC_STATIC		4042826	1					
ANR	4042910	CompoundStatement		10:100:380:380	4042826	1					
ANR	4042911	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare %s%s::$%s as %s%s::$%s"" , ( parent_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static "" , ZSTR_VAL ( ce -> parent -> name ) , ZSTR_VAL ( key ) , ( child_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static "" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( key ) )"	611:4:21366:21668	4042826	0	True				
ANR	4042912	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare %s%s::$%s as %s%s::$%s"" , ( parent_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static "" , ZSTR_VAL ( ce -> parent -> name ) , ZSTR_VAL ( key ) , ( child_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static "" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( key ) )"		4042826	0					
ANR	4042913	Callee	zend_error_noreturn		4042826	0					
ANR	4042914	Identifier	zend_error_noreturn		4042826	0					
ANR	4042915	ArgumentList	E_COMPILE_ERROR		4042826	1					
ANR	4042916	Argument	E_COMPILE_ERROR		4042826	0					
ANR	4042917	Identifier	E_COMPILE_ERROR		4042826	0					
ANR	4042918	Argument	"""Cannot redeclare %s%s::$%s as %s%s::$%s"""		4042826	1					
ANR	4042919	PrimaryExpression	"""Cannot redeclare %s%s::$%s as %s%s::$%s"""		4042826	0					
ANR	4042920	Argument	"( parent_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static """		4042826	2					
ANR	4042921	ConditionalExpression	"( parent_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static """		4042826	0					
ANR	4042922	Condition	parent_info -> flags & ZEND_ACC_STATIC		4042826	0					
ANR	4042923	BitAndExpression	parent_info -> flags & ZEND_ACC_STATIC		4042826	0		&			
ANR	4042924	PtrMemberAccess	parent_info -> flags		4042826	0					
ANR	4042925	Identifier	parent_info		4042826	0					
ANR	4042926	Identifier	flags		4042826	1					
ANR	4042927	Identifier	ZEND_ACC_STATIC		4042826	1					
ANR	4042928	PrimaryExpression	"""static """		4042826	1					
ANR	4042929	PrimaryExpression	"""non static """		4042826	2					
ANR	4042930	Argument	ZSTR_VAL ( ce -> parent -> name )		4042826	3					
ANR	4042931	CallExpression	ZSTR_VAL ( ce -> parent -> name )		4042826	0					
ANR	4042932	Callee	ZSTR_VAL		4042826	0					
ANR	4042933	Identifier	ZSTR_VAL		4042826	0					
ANR	4042934	ArgumentList	ce -> parent -> name		4042826	1					
ANR	4042935	Argument	ce -> parent -> name		4042826	0					
ANR	4042936	PtrMemberAccess	ce -> parent -> name		4042826	0					
ANR	4042937	PtrMemberAccess	ce -> parent		4042826	0					
ANR	4042938	Identifier	ce		4042826	0					
ANR	4042939	Identifier	parent		4042826	1					
ANR	4042940	Identifier	name		4042826	1					
ANR	4042941	Argument	ZSTR_VAL ( key )		4042826	4					
ANR	4042942	CallExpression	ZSTR_VAL ( key )		4042826	0					
ANR	4042943	Callee	ZSTR_VAL		4042826	0					
ANR	4042944	Identifier	ZSTR_VAL		4042826	0					
ANR	4042945	ArgumentList	key		4042826	1					
ANR	4042946	Argument	key		4042826	0					
ANR	4042947	Identifier	key		4042826	0					
ANR	4042948	Argument	"( child_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static """		4042826	5					
ANR	4042949	ConditionalExpression	"( child_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static """		4042826	0					
ANR	4042950	Condition	child_info -> flags & ZEND_ACC_STATIC		4042826	0					
ANR	4042951	BitAndExpression	child_info -> flags & ZEND_ACC_STATIC		4042826	0		&			
ANR	4042952	PtrMemberAccess	child_info -> flags		4042826	0					
ANR	4042953	Identifier	child_info		4042826	0					
ANR	4042954	Identifier	flags		4042826	1					
ANR	4042955	Identifier	ZEND_ACC_STATIC		4042826	1					
ANR	4042956	PrimaryExpression	"""static """		4042826	1					
ANR	4042957	PrimaryExpression	"""non static """		4042826	2					
ANR	4042958	Argument	ZSTR_VAL ( ce -> name )		4042826	6					
ANR	4042959	CallExpression	ZSTR_VAL ( ce -> name )		4042826	0					
ANR	4042960	Callee	ZSTR_VAL		4042826	0					
ANR	4042961	Identifier	ZSTR_VAL		4042826	0					
ANR	4042962	ArgumentList	ce -> name		4042826	1					
ANR	4042963	Argument	ce -> name		4042826	0					
ANR	4042964	PtrMemberAccess	ce -> name		4042826	0					
ANR	4042965	Identifier	ce		4042826	0					
ANR	4042966	Identifier	name		4042826	1					
ANR	4042967	Argument	ZSTR_VAL ( key )		4042826	7					
ANR	4042968	CallExpression	ZSTR_VAL ( key )		4042826	0					
ANR	4042969	Callee	ZSTR_VAL		4042826	0					
ANR	4042970	Identifier	ZSTR_VAL		4042826	0					
ANR	4042971	ArgumentList	key		4042826	1					
ANR	4042972	Argument	key		4042826	0					
ANR	4042973	Identifier	key		4042826	0					
ANR	4042974	IfStatement	if ( parent_info -> flags & ZEND_ACC_CHANGED )		4042826	1					
ANR	4042975	Condition	parent_info -> flags & ZEND_ACC_CHANGED	616:7:21683:21719	4042826	0	True				
ANR	4042976	BitAndExpression	parent_info -> flags & ZEND_ACC_CHANGED		4042826	0		&			
ANR	4042977	PtrMemberAccess	parent_info -> flags		4042826	0					
ANR	4042978	Identifier	parent_info		4042826	0					
ANR	4042979	Identifier	flags		4042826	1					
ANR	4042980	Identifier	ZEND_ACC_CHANGED		4042826	1					
ANR	4042981	CompoundStatement		16:46:742:742	4042826	1					
ANR	4042982	ExpressionStatement	child_info -> flags |= ZEND_ACC_CHANGED	617:4:21728:21765	4042826	0	True				
ANR	4042983	AssignmentExpression	child_info -> flags |= ZEND_ACC_CHANGED		4042826	0		|=			
ANR	4042984	PtrMemberAccess	child_info -> flags		4042826	0					
ANR	4042985	Identifier	child_info		4042826	0					
ANR	4042986	Identifier	flags		4042826	1					
ANR	4042987	Identifier	ZEND_ACC_CHANGED		4042826	1					
ANR	4042988	IfStatement	if ( UNEXPECTED ( ( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK ) ) )		4042826	2					
ANR	4042989	Condition	UNEXPECTED ( ( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK ) )	620:7:21780:21873	4042826	0	True				
ANR	4042990	CallExpression	UNEXPECTED ( ( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK ) )		4042826	0					
ANR	4042991	Callee	UNEXPECTED		4042826	0					
ANR	4042992	Identifier	UNEXPECTED		4042826	0					
ANR	4042993	ArgumentList	( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK )		4042826	1					
ANR	4042994	Argument	( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK )		4042826	0					
ANR	4042995	RelationalExpression	( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK )		4042826	0		>			
ANR	4042996	BitAndExpression	child_info -> flags & ZEND_ACC_PPP_MASK		4042826	0		&			
ANR	4042997	PtrMemberAccess	child_info -> flags		4042826	0					
ANR	4042998	Identifier	child_info		4042826	0					
ANR	4042999	Identifier	flags		4042826	1					
ANR	4043000	Identifier	ZEND_ACC_PPP_MASK		4042826	1					
ANR	4043001	BitAndExpression	parent_info -> flags & ZEND_ACC_PPP_MASK		4042826	1		&			
ANR	4043002	PtrMemberAccess	parent_info -> flags		4042826	0					
ANR	4043003	Identifier	parent_info		4042826	0					
ANR	4043004	Identifier	flags		4042826	1					
ANR	4043005	Identifier	ZEND_ACC_PPP_MASK		4042826	1					
ANR	4043006	CompoundStatement		20:103:896:896	4042826	1					
ANR	4043007	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Access level to %s::$%s must be %s (as in class %s)%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( key ) , zend_visibility_string ( parent_info -> flags ) , ZSTR_VAL ( ce -> parent -> name ) , ( parent_info -> flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"" )"	621:4:21882:22140	4042826	0	True				
ANR	4043008	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Access level to %s::$%s must be %s (as in class %s)%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( key ) , zend_visibility_string ( parent_info -> flags ) , ZSTR_VAL ( ce -> parent -> name ) , ( parent_info -> flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"" )"		4042826	0					
ANR	4043009	Callee	zend_error_noreturn		4042826	0					
ANR	4043010	Identifier	zend_error_noreturn		4042826	0					
ANR	4043011	ArgumentList	E_COMPILE_ERROR		4042826	1					
ANR	4043012	Argument	E_COMPILE_ERROR		4042826	0					
ANR	4043013	Identifier	E_COMPILE_ERROR		4042826	0					
ANR	4043014	Argument	"""Access level to %s::$%s must be %s (as in class %s)%s"""		4042826	1					
ANR	4043015	PrimaryExpression	"""Access level to %s::$%s must be %s (as in class %s)%s"""		4042826	0					
ANR	4043016	Argument	ZSTR_VAL ( ce -> name )		4042826	2					
ANR	4043017	CallExpression	ZSTR_VAL ( ce -> name )		4042826	0					
ANR	4043018	Callee	ZSTR_VAL		4042826	0					
ANR	4043019	Identifier	ZSTR_VAL		4042826	0					
ANR	4043020	ArgumentList	ce -> name		4042826	1					
ANR	4043021	Argument	ce -> name		4042826	0					
ANR	4043022	PtrMemberAccess	ce -> name		4042826	0					
ANR	4043023	Identifier	ce		4042826	0					
ANR	4043024	Identifier	name		4042826	1					
ANR	4043025	Argument	ZSTR_VAL ( key )		4042826	3					
ANR	4043026	CallExpression	ZSTR_VAL ( key )		4042826	0					
ANR	4043027	Callee	ZSTR_VAL		4042826	0					
ANR	4043028	Identifier	ZSTR_VAL		4042826	0					
ANR	4043029	ArgumentList	key		4042826	1					
ANR	4043030	Argument	key		4042826	0					
ANR	4043031	Identifier	key		4042826	0					
ANR	4043032	Argument	zend_visibility_string ( parent_info -> flags )		4042826	4					
ANR	4043033	CallExpression	zend_visibility_string ( parent_info -> flags )		4042826	0					
ANR	4043034	Callee	zend_visibility_string		4042826	0					
ANR	4043035	Identifier	zend_visibility_string		4042826	0					
ANR	4043036	ArgumentList	parent_info -> flags		4042826	1					
ANR	4043037	Argument	parent_info -> flags		4042826	0					
ANR	4043038	PtrMemberAccess	parent_info -> flags		4042826	0					
ANR	4043039	Identifier	parent_info		4042826	0					
ANR	4043040	Identifier	flags		4042826	1					
ANR	4043041	Argument	ZSTR_VAL ( ce -> parent -> name )		4042826	5					
ANR	4043042	CallExpression	ZSTR_VAL ( ce -> parent -> name )		4042826	0					
ANR	4043043	Callee	ZSTR_VAL		4042826	0					
ANR	4043044	Identifier	ZSTR_VAL		4042826	0					
ANR	4043045	ArgumentList	ce -> parent -> name		4042826	1					
ANR	4043046	Argument	ce -> parent -> name		4042826	0					
ANR	4043047	PtrMemberAccess	ce -> parent -> name		4042826	0					
ANR	4043048	PtrMemberAccess	ce -> parent		4042826	0					
ANR	4043049	Identifier	ce		4042826	0					
ANR	4043050	Identifier	parent		4042826	1					
ANR	4043051	Identifier	name		4042826	1					
ANR	4043052	Argument	"( parent_info -> flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"""		4042826	6					
ANR	4043053	ConditionalExpression	"( parent_info -> flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"""		4042826	0					
ANR	4043054	Condition	parent_info -> flags & ZEND_ACC_PUBLIC		4042826	0					
ANR	4043055	BitAndExpression	parent_info -> flags & ZEND_ACC_PUBLIC		4042826	0		&			
ANR	4043056	PtrMemberAccess	parent_info -> flags		4042826	0					
ANR	4043057	Identifier	parent_info		4042826	0					
ANR	4043058	Identifier	flags		4042826	1					
ANR	4043059	Identifier	ZEND_ACC_PUBLIC		4042826	1					
ANR	4043060	PrimaryExpression	""""""		4042826	1					
ANR	4043061	PrimaryExpression	""" or weaker"""		4042826	2					
ANR	4043062	ElseStatement	else		4042826	0					
ANR	4043063	IfStatement	if ( ( child_info -> flags & ZEND_ACC_STATIC ) == 0 )		4042826	0					
ANR	4043064	Condition	( child_info -> flags & ZEND_ACC_STATIC ) == 0	622:14:22156:22197	4042826	0	True				
ANR	4043065	EqualityExpression	( child_info -> flags & ZEND_ACC_STATIC ) == 0		4042826	0		==			
ANR	4043066	BitAndExpression	child_info -> flags & ZEND_ACC_STATIC		4042826	0		&			
ANR	4043067	PtrMemberAccess	child_info -> flags		4042826	0					
ANR	4043068	Identifier	child_info		4042826	0					
ANR	4043069	Identifier	flags		4042826	1					
ANR	4043070	Identifier	ZEND_ACC_STATIC		4042826	1					
ANR	4043071	PrimaryExpression	0		4042826	1					
ANR	4043072	CompoundStatement		24:4:1285:1336	4042826	1					
ANR	4043073	IdentifierDeclStatement	int parent_num = OBJ_PROP_TO_NUM ( parent_info -> offset ) ;	623:4:22206:22259	4042826	0	True				
ANR	4043074	IdentifierDecl	parent_num = OBJ_PROP_TO_NUM ( parent_info -> offset )		4042826	0					
ANR	4043075	IdentifierDeclType	int		4042826	0					
ANR	4043076	Identifier	parent_num		4042826	1					
ANR	4043077	AssignmentExpression	parent_num = OBJ_PROP_TO_NUM ( parent_info -> offset )		4042826	2		=			
ANR	4043078	Identifier	parent_num		4042826	0					
ANR	4043079	CallExpression	OBJ_PROP_TO_NUM ( parent_info -> offset )		4042826	1					
ANR	4043080	Callee	OBJ_PROP_TO_NUM		4042826	0					
ANR	4043081	Identifier	OBJ_PROP_TO_NUM		4042826	0					
ANR	4043082	ArgumentList	parent_info -> offset		4042826	1					
ANR	4043083	Argument	parent_info -> offset		4042826	0					
ANR	4043084	PtrMemberAccess	parent_info -> offset		4042826	0					
ANR	4043085	Identifier	parent_info		4042826	0					
ANR	4043086	Identifier	offset		4042826	1					
ANR	4043087	IdentifierDeclStatement	int child_num = OBJ_PROP_TO_NUM ( child_info -> offset ) ;	624:4:22265:22316	4042826	1	True				
ANR	4043088	IdentifierDecl	child_num = OBJ_PROP_TO_NUM ( child_info -> offset )		4042826	0					
ANR	4043089	IdentifierDeclType	int		4042826	0					
ANR	4043090	Identifier	child_num		4042826	1					
ANR	4043091	AssignmentExpression	child_num = OBJ_PROP_TO_NUM ( child_info -> offset )		4042826	2		=			
ANR	4043092	Identifier	child_num		4042826	0					
ANR	4043093	CallExpression	OBJ_PROP_TO_NUM ( child_info -> offset )		4042826	1					
ANR	4043094	Callee	OBJ_PROP_TO_NUM		4042826	0					
ANR	4043095	Identifier	OBJ_PROP_TO_NUM		4042826	0					
ANR	4043096	ArgumentList	child_info -> offset		4042826	1					
ANR	4043097	Argument	child_info -> offset		4042826	0					
ANR	4043098	PtrMemberAccess	child_info -> offset		4042826	0					
ANR	4043099	Identifier	child_info		4042826	0					
ANR	4043100	Identifier	offset		4042826	1					
ANR	4043101	ExpressionStatement	zval_ptr_dtor ( & ( ce -> default_properties_table [ parent_num ] ) )	626:4:22323:22381	4042826	2	True				
ANR	4043102	CallExpression	zval_ptr_dtor ( & ( ce -> default_properties_table [ parent_num ] ) )		4042826	0					
ANR	4043103	Callee	zval_ptr_dtor		4042826	0					
ANR	4043104	Identifier	zval_ptr_dtor		4042826	0					
ANR	4043105	ArgumentList	& ( ce -> default_properties_table [ parent_num ] )		4042826	1					
ANR	4043106	Argument	& ( ce -> default_properties_table [ parent_num ] )		4042826	0					
ANR	4043107	UnaryOperationExpression	& ( ce -> default_properties_table [ parent_num ] )		4042826	0					
ANR	4043108	UnaryOperator	&		4042826	0					
ANR	4043109	ArrayIndexing	ce -> default_properties_table [ parent_num ]		4042826	1					
ANR	4043110	PtrMemberAccess	ce -> default_properties_table		4042826	0					
ANR	4043111	Identifier	ce		4042826	0					
ANR	4043112	Identifier	default_properties_table		4042826	1					
ANR	4043113	Identifier	parent_num		4042826	1					
ANR	4043114	ExpressionStatement	ce -> default_properties_table [ parent_num ] = ce -> default_properties_table [ child_num ]	627:4:22387:22469	4042826	3	True				
ANR	4043115	AssignmentExpression	ce -> default_properties_table [ parent_num ] = ce -> default_properties_table [ child_num ]		4042826	0		=			
ANR	4043116	ArrayIndexing	ce -> default_properties_table [ parent_num ]		4042826	0					
ANR	4043117	PtrMemberAccess	ce -> default_properties_table		4042826	0					
ANR	4043118	Identifier	ce		4042826	0					
ANR	4043119	Identifier	default_properties_table		4042826	1					
ANR	4043120	Identifier	parent_num		4042826	1					
ANR	4043121	ArrayIndexing	ce -> default_properties_table [ child_num ]		4042826	1					
ANR	4043122	PtrMemberAccess	ce -> default_properties_table		4042826	0					
ANR	4043123	Identifier	ce		4042826	0					
ANR	4043124	Identifier	default_properties_table		4042826	1					
ANR	4043125	Identifier	child_num		4042826	1					
ANR	4043126	ExpressionStatement	ZVAL_UNDEF ( & ce -> default_properties_table [ child_num ] )	628:4:22475:22527	4042826	4	True				
ANR	4043127	CallExpression	ZVAL_UNDEF ( & ce -> default_properties_table [ child_num ] )		4042826	0					
ANR	4043128	Callee	ZVAL_UNDEF		4042826	0					
ANR	4043129	Identifier	ZVAL_UNDEF		4042826	0					
ANR	4043130	ArgumentList	& ce -> default_properties_table [ child_num ]		4042826	1					
ANR	4043131	Argument	& ce -> default_properties_table [ child_num ]		4042826	0					
ANR	4043132	UnaryOperationExpression	& ce -> default_properties_table [ child_num ]		4042826	0					
ANR	4043133	UnaryOperator	&		4042826	0					
ANR	4043134	ArrayIndexing	ce -> default_properties_table [ child_num ]		4042826	1					
ANR	4043135	PtrMemberAccess	ce -> default_properties_table		4042826	0					
ANR	4043136	Identifier	ce		4042826	0					
ANR	4043137	Identifier	default_properties_table		4042826	1					
ANR	4043138	Identifier	child_num		4042826	1					
ANR	4043139	ExpressionStatement	child_info -> offset = parent_info -> offset	629:4:22533:22573	4042826	5	True				
ANR	4043140	AssignmentExpression	child_info -> offset = parent_info -> offset		4042826	0		=			
ANR	4043141	PtrMemberAccess	child_info -> offset		4042826	0					
ANR	4043142	Identifier	child_info		4042826	0					
ANR	4043143	Identifier	offset		4042826	1					
ANR	4043144	PtrMemberAccess	parent_info -> offset		4042826	1					
ANR	4043145	Identifier	parent_info		4042826	0					
ANR	4043146	Identifier	offset		4042826	1					
ANR	4043147	ElseStatement	else		4042826	0					
ANR	4043148	CompoundStatement		32:8:1612:1612	4042826	0					
ANR	4043149	IfStatement	if ( UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) ) )		4042826	0					
ANR	4043150	Condition	UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) )	633:6:22600:22666	4042826	0	True				
ANR	4043151	CallExpression	UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) )		4042826	0					
ANR	4043152	Callee	UNEXPECTED		4042826	0					
ANR	4043153	Identifier	UNEXPECTED		4042826	0					
ANR	4043154	ArgumentList	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		4042826	1					
ANR	4043155	Argument	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		4042826	0					
ANR	4043156	BitAndExpression	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		4042826	0		&			
ANR	4043157	PtrMemberAccess	parent_info -> flags		4042826	0					
ANR	4043158	Identifier	parent_info		4042826	0					
ANR	4043159	Identifier	flags		4042826	1					
ANR	4043160	InclusiveOrExpression	ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW		4042826	1		|			
ANR	4043161	Identifier	ZEND_ACC_PRIVATE		4042826	0					
ANR	4043162	Identifier	ZEND_ACC_SHADOW		4042826	1					
ANR	4043163	CompoundStatement		33:75:1689:1689	4042826	1					
ANR	4043164	IfStatement	if ( UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS ) )		4042826	0					
ANR	4043165	Condition	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )	634:7:22678:22719	4042826	0	True				
ANR	4043166	CallExpression	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )		4042826	0					
ANR	4043167	Callee	UNEXPECTED		4042826	0					
ANR	4043168	Identifier	UNEXPECTED		4042826	0					
ANR	4043169	ArgumentList	ce -> type & ZEND_INTERNAL_CLASS		4042826	1					
ANR	4043170	Argument	ce -> type & ZEND_INTERNAL_CLASS		4042826	0					
ANR	4043171	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		4042826	0		&			
ANR	4043172	PtrMemberAccess	ce -> type		4042826	0					
ANR	4043173	Identifier	ce		4042826	0					
ANR	4043174	Identifier	type		4042826	1					
ANR	4043175	Identifier	ZEND_INTERNAL_CLASS		4042826	1					
ANR	4043176	CompoundStatement		34:51:1742:1742	4042826	1					
ANR	4043177	ExpressionStatement	child_info = zend_duplicate_property_info_internal ( parent_info )	635:4:22728:22791	4042826	0	True				
ANR	4043178	AssignmentExpression	child_info = zend_duplicate_property_info_internal ( parent_info )		4042826	0		=			
ANR	4043179	Identifier	child_info		4042826	0					
ANR	4043180	CallExpression	zend_duplicate_property_info_internal ( parent_info )		4042826	1					
ANR	4043181	Callee	zend_duplicate_property_info_internal		4042826	0					
ANR	4043182	Identifier	zend_duplicate_property_info_internal		4042826	0					
ANR	4043183	ArgumentList	parent_info		4042826	1					
ANR	4043184	Argument	parent_info		4042826	0					
ANR	4043185	Identifier	parent_info		4042826	0					
ANR	4043186	ElseStatement	else		4042826	0					
ANR	4043187	CompoundStatement		36:10:1823:1823	4042826	0					
ANR	4043188	ExpressionStatement	child_info = zend_duplicate_property_info ( parent_info )	637:4:22809:22863	4042826	0	True				
ANR	4043189	AssignmentExpression	child_info = zend_duplicate_property_info ( parent_info )		4042826	0		=			
ANR	4043190	Identifier	child_info		4042826	0					
ANR	4043191	CallExpression	zend_duplicate_property_info ( parent_info )		4042826	1					
ANR	4043192	Callee	zend_duplicate_property_info		4042826	0					
ANR	4043193	Identifier	zend_duplicate_property_info		4042826	0					
ANR	4043194	ArgumentList	parent_info		4042826	1					
ANR	4043195	Argument	parent_info		4042826	0					
ANR	4043196	Identifier	parent_info		4042826	0					
ANR	4043197	ExpressionStatement	child_info -> flags &= ~ZEND_ACC_PRIVATE	639:3:22873:22911	4042826	1	True				
ANR	4043198	AssignmentExpression	child_info -> flags &= ~ZEND_ACC_PRIVATE		4042826	0		&=			
ANR	4043199	PtrMemberAccess	child_info -> flags		4042826	0					
ANR	4043200	Identifier	child_info		4042826	0					
ANR	4043201	Identifier	flags		4042826	1					
ANR	4043202	Identifier	~ZEND_ACC_PRIVATE		4042826	1					
ANR	4043203	ExpressionStatement	child_info -> flags |= ZEND_ACC_SHADOW	640:3:22947:22983	4042826	2	True				
ANR	4043204	AssignmentExpression	child_info -> flags |= ZEND_ACC_SHADOW		4042826	0		|=			
ANR	4043205	PtrMemberAccess	child_info -> flags		4042826	0					
ANR	4043206	Identifier	child_info		4042826	0					
ANR	4043207	Identifier	flags		4042826	1					
ANR	4043208	Identifier	ZEND_ACC_SHADOW		4042826	1					
ANR	4043209	ElseStatement	else		4042826	0					
ANR	4043210	CompoundStatement		41:9:2049:2049	4042826	0					
ANR	4043211	IfStatement	if ( UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS ) )		4042826	0					
ANR	4043212	Condition	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )	642:7:23038:23079	4042826	0	True				
ANR	4043213	CallExpression	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )		4042826	0					
ANR	4043214	Callee	UNEXPECTED		4042826	0					
ANR	4043215	Identifier	UNEXPECTED		4042826	0					
ANR	4043216	ArgumentList	ce -> type & ZEND_INTERNAL_CLASS		4042826	1					
ANR	4043217	Argument	ce -> type & ZEND_INTERNAL_CLASS		4042826	0					
ANR	4043218	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		4042826	0		&			
ANR	4043219	PtrMemberAccess	ce -> type		4042826	0					
ANR	4043220	Identifier	ce		4042826	0					
ANR	4043221	Identifier	type		4042826	1					
ANR	4043222	Identifier	ZEND_INTERNAL_CLASS		4042826	1					
ANR	4043223	CompoundStatement		42:51:2102:2102	4042826	1					
ANR	4043224	ExpressionStatement	child_info = zend_duplicate_property_info_internal ( parent_info )	643:4:23088:23151	4042826	0	True				
ANR	4043225	AssignmentExpression	child_info = zend_duplicate_property_info_internal ( parent_info )		4042826	0		=			
ANR	4043226	Identifier	child_info		4042826	0					
ANR	4043227	CallExpression	zend_duplicate_property_info_internal ( parent_info )		4042826	1					
ANR	4043228	Callee	zend_duplicate_property_info_internal		4042826	0					
ANR	4043229	Identifier	zend_duplicate_property_info_internal		4042826	0					
ANR	4043230	ArgumentList	parent_info		4042826	1					
ANR	4043231	Argument	parent_info		4042826	0					
ANR	4043232	Identifier	parent_info		4042826	0					
ANR	4043233	ElseStatement	else		4042826	0					
ANR	4043234	CompoundStatement		44:10:2183:2183	4042826	0					
ANR	4043235	ExpressionStatement	child_info = parent_info	645:4:23169:23193	4042826	0	True				
ANR	4043236	AssignmentExpression	child_info = parent_info		4042826	0		=			
ANR	4043237	Identifier	child_info		4042826	0					
ANR	4043238	Identifier	parent_info		4042826	1					
ANR	4043239	ExpressionStatement	"_zend_hash_append_ptr ( & ce -> properties_info , key , child_info )"	648:2:23206:23266	4042826	1	True				
ANR	4043240	CallExpression	"_zend_hash_append_ptr ( & ce -> properties_info , key , child_info )"		4042826	0					
ANR	4043241	Callee	_zend_hash_append_ptr		4042826	0					
ANR	4043242	Identifier	_zend_hash_append_ptr		4042826	0					
ANR	4043243	ArgumentList	& ce -> properties_info		4042826	1					
ANR	4043244	Argument	& ce -> properties_info		4042826	0					
ANR	4043245	UnaryOperationExpression	& ce -> properties_info		4042826	0					
ANR	4043246	UnaryOperator	&		4042826	0					
ANR	4043247	PtrMemberAccess	ce -> properties_info		4042826	1					
ANR	4043248	Identifier	ce		4042826	0					
ANR	4043249	Identifier	properties_info		4042826	1					
ANR	4043250	Argument	key		4042826	1					
ANR	4043251	Identifier	key		4042826	0					
ANR	4043252	Argument	child_info		4042826	2					
ANR	4043253	Identifier	child_info		4042826	0					
ANR	4043254	ReturnType	static void		4042826	1					
ANR	4043255	Identifier	do_inherit_property		4042826	2					
ANR	4043256	ParameterList	"zend_property_info * parent_info , zend_string * key , zend_class_entry * ce"		4042826	3					
ANR	4043257	Parameter	zend_property_info * parent_info	600:32:20896:20926	4042826	0	True				
ANR	4043258	ParameterType	zend_property_info *		4042826	0					
ANR	4043259	Identifier	parent_info		4042826	1					
ANR	4043260	Parameter	zend_string * key	600:65:20929:20944	4042826	1	True				
ANR	4043261	ParameterType	zend_string *		4042826	0					
ANR	4043262	Identifier	key		4042826	1					
ANR	4043263	Parameter	zend_class_entry * ce	600:83:20947:20966	4042826	2	True				
ANR	4043264	ParameterType	zend_class_entry *		4042826	0					
ANR	4043265	Identifier	ce		4042826	1					
ANR	4043266	CFGEntryNode	ENTRY		4042826		True				
ANR	4043267	CFGExitNode	EXIT		4042826		True				
ANR	4043268	Symbol	ce -> type		4042826						
ANR	4043269	Symbol	ZEND_ACC_PPP_MASK		4042826						
ANR	4043270	Symbol	parent_info -> offset		4042826						
ANR	4043271	Symbol	ZEND_ACC_PUBLIC		4042826						
ANR	4043272	Symbol	~ZEND_ACC_PRIVATE		4042826						
ANR	4043273	Symbol	E_COMPILE_ERROR		4042826						
ANR	4043274	Symbol	ZEND_ACC_CHANGED		4042826						
ANR	4043275	Symbol	* ce		4042826						
ANR	4043276	Symbol	* * ce		4042826						
ANR	4043277	Symbol	zend_visibility_string		4042826						
ANR	4043278	Symbol	* parent_num		4042826						
ANR	4043279	Symbol	UNEXPECTED		4042826						
ANR	4043280	Symbol	zend_hash_find		4042826						
ANR	4043281	Symbol	* ce -> parent		4042826						
ANR	4043282	Symbol	child_info -> offset		4042826						
ANR	4043283	Symbol	ZEND_ACC_SHADOW		4042826						
ANR	4043284	Symbol	ZEND_ACC_STATIC		4042826						
ANR	4043285	Symbol	* child_info		4042826						
ANR	4043286	Symbol	ce -> name		4042826						
ANR	4043287	Symbol	* parent_info		4042826						
ANR	4043288	Symbol	child_info -> flags		4042826						
ANR	4043289	Symbol	parent_info		4042826						
ANR	4043290	Symbol	key		4042826						
ANR	4043291	Symbol	parent_num		4042826						
ANR	4043292	Symbol	ZEND_INTERNAL_CLASS		4042826						
ANR	4043293	Symbol	Z_PTR_P		4042826						
ANR	4043294	Symbol	OBJ_PROP_TO_NUM		4042826						
ANR	4043295	Symbol	* child_num		4042826						
ANR	4043296	Symbol	ce		4042826						
ANR	4043297	Symbol	ce -> parent		4042826						
ANR	4043298	Symbol	ce -> parent -> name		4042826						
ANR	4043299	Symbol	ce -> default_properties_table		4042826						
ANR	4043300	Symbol	parent_info -> flags		4042826						
ANR	4043301	Symbol	ZEND_ACC_PRIVATE		4042826						
ANR	4043302	Symbol	ZSTR_VAL		4042826						
ANR	4043303	Symbol	zend_duplicate_property_info		4042826						
ANR	4043304	Symbol	child_info		4042826						
ANR	4043305	Symbol	& ce -> properties_info		4042826						
ANR	4043306	Symbol	child_num		4042826						
ANR	4043307	Symbol	* ce -> default_properties_table		4042826						
ANR	4043308	Symbol	zend_duplicate_property_info_internal		4042826						
ANR	4043309	Symbol	child		4042826						
ANR	4043310	Function	do_implement_interface	653:0:23284:23781							
ANR	4043311	FunctionDef	"do_implement_interface (zend_class_entry * ce , zend_class_entry * iface)"		4043310	0					
ANR	4043312	CompoundStatement		654:0:23383:23781	4043310	0					
ANR	4043313	IfStatement	"if ( ! ( ce -> ce_flags & ZEND_ACC_INTERFACE ) && iface -> interface_gets_implemented && iface -> interface_gets_implemented ( iface , ce ) == FAILURE )"		4043310	0					
ANR	4043314	Condition	"! ( ce -> ce_flags & ZEND_ACC_INTERFACE ) && iface -> interface_gets_implemented && iface -> interface_gets_implemented ( iface , ce ) == FAILURE"	655:5:23390:23521	4043310	0	True				
ANR	4043315	AndExpression	"! ( ce -> ce_flags & ZEND_ACC_INTERFACE ) && iface -> interface_gets_implemented && iface -> interface_gets_implemented ( iface , ce ) == FAILURE"		4043310	0		&&			
ANR	4043316	UnaryOperationExpression	! ( ce -> ce_flags & ZEND_ACC_INTERFACE )		4043310	0					
ANR	4043317	UnaryOperator	!		4043310	0					
ANR	4043318	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		4043310	1		&			
ANR	4043319	PtrMemberAccess	ce -> ce_flags		4043310	0					
ANR	4043320	Identifier	ce		4043310	0					
ANR	4043321	Identifier	ce_flags		4043310	1					
ANR	4043322	Identifier	ZEND_ACC_INTERFACE		4043310	1					
ANR	4043323	AndExpression	"iface -> interface_gets_implemented && iface -> interface_gets_implemented ( iface , ce ) == FAILURE"		4043310	1		&&			
ANR	4043324	PtrMemberAccess	iface -> interface_gets_implemented		4043310	0					
ANR	4043325	Identifier	iface		4043310	0					
ANR	4043326	Identifier	interface_gets_implemented		4043310	1					
ANR	4043327	EqualityExpression	"iface -> interface_gets_implemented ( iface , ce ) == FAILURE"		4043310	1		==			
ANR	4043328	CallExpression	"iface -> interface_gets_implemented ( iface , ce )"		4043310	0					
ANR	4043329	Callee	iface -> interface_gets_implemented		4043310	0					
ANR	4043330	PtrMemberAccess	iface -> interface_gets_implemented		4043310	0					
ANR	4043331	Identifier	iface		4043310	0					
ANR	4043332	Identifier	interface_gets_implemented		4043310	1					
ANR	4043333	ArgumentList	iface		4043310	1					
ANR	4043334	Argument	iface		4043310	0					
ANR	4043335	Identifier	iface		4043310	0					
ANR	4043336	Argument	ce		4043310	1					
ANR	4043337	Identifier	ce		4043310	0					
ANR	4043338	Identifier	FAILURE		4043310	1					
ANR	4043339	CompoundStatement		2:139:140:140	4043310	1					
ANR	4043340	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Class %s could not implement interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( iface -> name ) )"	656:2:23528:23649	4043310	0	True				
ANR	4043341	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Class %s could not implement interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( iface -> name ) )"		4043310	0					
ANR	4043342	Callee	zend_error_noreturn		4043310	0					
ANR	4043343	Identifier	zend_error_noreturn		4043310	0					
ANR	4043344	ArgumentList	E_CORE_ERROR		4043310	1					
ANR	4043345	Argument	E_CORE_ERROR		4043310	0					
ANR	4043346	Identifier	E_CORE_ERROR		4043310	0					
ANR	4043347	Argument	"""Class %s could not implement interface %s"""		4043310	1					
ANR	4043348	PrimaryExpression	"""Class %s could not implement interface %s"""		4043310	0					
ANR	4043349	Argument	ZSTR_VAL ( ce -> name )		4043310	2					
ANR	4043350	CallExpression	ZSTR_VAL ( ce -> name )		4043310	0					
ANR	4043351	Callee	ZSTR_VAL		4043310	0					
ANR	4043352	Identifier	ZSTR_VAL		4043310	0					
ANR	4043353	ArgumentList	ce -> name		4043310	1					
ANR	4043354	Argument	ce -> name		4043310	0					
ANR	4043355	PtrMemberAccess	ce -> name		4043310	0					
ANR	4043356	Identifier	ce		4043310	0					
ANR	4043357	Identifier	name		4043310	1					
ANR	4043358	Argument	ZSTR_VAL ( iface -> name )		4043310	3					
ANR	4043359	CallExpression	ZSTR_VAL ( iface -> name )		4043310	0					
ANR	4043360	Callee	ZSTR_VAL		4043310	0					
ANR	4043361	Identifier	ZSTR_VAL		4043310	0					
ANR	4043362	ArgumentList	iface -> name		4043310	1					
ANR	4043363	Argument	iface -> name		4043310	0					
ANR	4043364	PtrMemberAccess	iface -> name		4043310	0					
ANR	4043365	Identifier	iface		4043310	0					
ANR	4043366	Identifier	name		4043310	1					
ANR	4043367	IfStatement	if ( UNEXPECTED ( ce == iface ) )		4043310	1					
ANR	4043368	Condition	UNEXPECTED ( ce == iface )	658:5:23659:23681	4043310	0	True				
ANR	4043369	CallExpression	UNEXPECTED ( ce == iface )		4043310	0					
ANR	4043370	Callee	UNEXPECTED		4043310	0					
ANR	4043371	Identifier	UNEXPECTED		4043310	0					
ANR	4043372	ArgumentList	ce == iface		4043310	1					
ANR	4043373	Argument	ce == iface		4043310	0					
ANR	4043374	EqualityExpression	ce == iface		4043310	0		==			
ANR	4043375	Identifier	ce		4043310	0					
ANR	4043376	Identifier	iface		4043310	1					
ANR	4043377	CompoundStatement		5:30:300:300	4043310	1					
ANR	4043378	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Interface %s cannot implement itself"" , ZSTR_VAL ( ce -> name ) )"	659:2:23688:23776	4043310	0	True				
ANR	4043379	CallExpression	"zend_error_noreturn ( E_ERROR , ""Interface %s cannot implement itself"" , ZSTR_VAL ( ce -> name ) )"		4043310	0					
ANR	4043380	Callee	zend_error_noreturn		4043310	0					
ANR	4043381	Identifier	zend_error_noreturn		4043310	0					
ANR	4043382	ArgumentList	E_ERROR		4043310	1					
ANR	4043383	Argument	E_ERROR		4043310	0					
ANR	4043384	Identifier	E_ERROR		4043310	0					
ANR	4043385	Argument	"""Interface %s cannot implement itself"""		4043310	1					
ANR	4043386	PrimaryExpression	"""Interface %s cannot implement itself"""		4043310	0					
ANR	4043387	Argument	ZSTR_VAL ( ce -> name )		4043310	2					
ANR	4043388	CallExpression	ZSTR_VAL ( ce -> name )		4043310	0					
ANR	4043389	Callee	ZSTR_VAL		4043310	0					
ANR	4043390	Identifier	ZSTR_VAL		4043310	0					
ANR	4043391	ArgumentList	ce -> name		4043310	1					
ANR	4043392	Argument	ce -> name		4043310	0					
ANR	4043393	PtrMemberAccess	ce -> name		4043310	0					
ANR	4043394	Identifier	ce		4043310	0					
ANR	4043395	Identifier	name		4043310	1					
ANR	4043396	ReturnType	static inline void		4043310	1					
ANR	4043397	Identifier	do_implement_interface		4043310	2					
ANR	4043398	ParameterList	"zend_class_entry * ce , zend_class_entry * iface"		4043310	3					
ANR	4043399	Parameter	zend_class_entry * ce	653:42:23326:23345	4043310	0	True				
ANR	4043400	ParameterType	zend_class_entry *		4043310	0					
ANR	4043401	Identifier	ce		4043310	1					
ANR	4043402	Parameter	zend_class_entry * iface	653:64:23348:23370	4043310	1	True				
ANR	4043403	ParameterType	zend_class_entry *		4043310	0					
ANR	4043404	Identifier	iface		4043310	1					
ANR	4043405	CFGEntryNode	ENTRY		4043310		True				
ANR	4043406	CFGExitNode	EXIT		4043310		True				
ANR	4043407	Symbol	ce		4043310						
ANR	4043408	Symbol	* iface		4043310						
ANR	4043409	Symbol	* ce		4043310						
ANR	4043410	Symbol	FAILURE		4043310						
ANR	4043411	Symbol	ZSTR_VAL		4043310						
ANR	4043412	Symbol	ce -> ce_flags		4043310						
ANR	4043413	Symbol	UNEXPECTED		4043310						
ANR	4043414	Symbol	iface		4043310						
ANR	4043415	Symbol	iface -> interface_gets_implemented		4043310						
ANR	4043416	Symbol	E_ERROR		4043310						
ANR	4043417	Symbol	iface -> name		4043310						
ANR	4043418	Symbol	E_CORE_ERROR		4043310						
ANR	4043419	Symbol	ZEND_ACC_INTERFACE		4043310						
ANR	4043420	Symbol	ce -> name		4043310						
ANR	4043421	Function	zend_do_inherit_interfaces	664:0:23794:24848							
ANR	4043422	FunctionDef	"zend_do_inherit_interfaces (zend_class_entry * ce , const zend_class_entry * iface)"		4043421	0					
ANR	4043423	CompoundStatement		665:0:23898:24848	4043421	0					
ANR	4043424	IdentifierDeclStatement	"uint32_t i , ce_num , if_num = iface -> num_interfaces ;"	667:1:23973:24023	4043421	0	True				
ANR	4043425	IdentifierDecl	i		4043421	0					
ANR	4043426	IdentifierDeclType	uint32_t		4043421	0					
ANR	4043427	Identifier	i		4043421	1					
ANR	4043428	IdentifierDecl	ce_num		4043421	1					
ANR	4043429	IdentifierDeclType	uint32_t		4043421	0					
ANR	4043430	Identifier	ce_num		4043421	1					
ANR	4043431	IdentifierDecl	if_num = iface -> num_interfaces		4043421	2					
ANR	4043432	IdentifierDeclType	uint32_t		4043421	0					
ANR	4043433	Identifier	if_num		4043421	1					
ANR	4043434	AssignmentExpression	if_num = iface -> num_interfaces		4043421	2		=			
ANR	4043435	Identifier	if_num		4043421	0					
ANR	4043436	PtrMemberAccess	iface -> num_interfaces		4043421	1					
ANR	4043437	Identifier	iface		4043421	0					
ANR	4043438	Identifier	num_interfaces		4043421	1					
ANR	4043439	IdentifierDeclStatement	zend_class_entry * entry ;	668:1:24026:24049	4043421	1	True				
ANR	4043440	IdentifierDecl	* entry		4043421	0					
ANR	4043441	IdentifierDeclType	zend_class_entry *		4043421	0					
ANR	4043442	Identifier	entry		4043421	1					
ANR	4043443	IfStatement	if ( if_num == 0 )		4043421	2					
ANR	4043444	Condition	if_num == 0	670:5:24057:24065	4043421	0	True				
ANR	4043445	EqualityExpression	if_num == 0		4043421	0		==			
ANR	4043446	Identifier	if_num		4043421	0					
ANR	4043447	PrimaryExpression	0		4043421	1					
ANR	4043448	CompoundStatement		6:16:169:169	4043421	1					
ANR	4043449	ReturnStatement	return ;	671:2:24072:24078	4043421	0	True				
ANR	4043450	ExpressionStatement	ce_num = ce -> num_interfaces	673:1:24084:24111	4043421	3	True				
ANR	4043451	AssignmentExpression	ce_num = ce -> num_interfaces		4043421	0		=			
ANR	4043452	Identifier	ce_num		4043421	0					
ANR	4043453	PtrMemberAccess	ce -> num_interfaces		4043421	1					
ANR	4043454	Identifier	ce		4043421	0					
ANR	4043455	Identifier	num_interfaces		4043421	1					
ANR	4043456	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		4043421	4					
ANR	4043457	Condition	ce -> type == ZEND_INTERNAL_CLASS	675:5:24119:24149	4043421	0	True				
ANR	4043458	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4043421	0		==			
ANR	4043459	PtrMemberAccess	ce -> type		4043421	0					
ANR	4043460	Identifier	ce		4043421	0					
ANR	4043461	Identifier	type		4043421	1					
ANR	4043462	Identifier	ZEND_INTERNAL_CLASS		4043421	1					
ANR	4043463	CompoundStatement		11:38:253:253	4043421	1					
ANR	4043464	ExpressionStatement	"ce -> interfaces = ( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"	676:2:24156:24266	4043421	0	True				
ANR	4043465	AssignmentExpression	"ce -> interfaces = ( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		4043421	0		=			
ANR	4043466	PtrMemberAccess	ce -> interfaces		4043421	0					
ANR	4043467	Identifier	ce		4043421	0					
ANR	4043468	Identifier	interfaces		4043421	1					
ANR	4043469	CastExpression	"( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		4043421	1					
ANR	4043470	CastTarget	zend_class_entry * *		4043421	0					
ANR	4043471	CallExpression	"realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		4043421	1					
ANR	4043472	Callee	realloc		4043421	0					
ANR	4043473	Identifier	realloc		4043421	0					
ANR	4043474	ArgumentList	ce -> interfaces		4043421	1					
ANR	4043475	Argument	ce -> interfaces		4043421	0					
ANR	4043476	PtrMemberAccess	ce -> interfaces		4043421	0					
ANR	4043477	Identifier	ce		4043421	0					
ANR	4043478	Identifier	interfaces		4043421	1					
ANR	4043479	Argument	sizeof ( zend_class_entry * ) * ( ce_num + if_num )		4043421	1					
ANR	4043480	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ce_num + if_num )		4043421	0		*			
ANR	4043481	SizeofExpression	sizeof ( zend_class_entry * )		4043421	0					
ANR	4043482	Sizeof	sizeof		4043421	0					
ANR	4043483	SizeofOperand	zend_class_entry *		4043421	1					
ANR	4043484	AdditiveExpression	ce_num + if_num		4043421	1		+			
ANR	4043485	Identifier	ce_num		4043421	0					
ANR	4043486	Identifier	if_num		4043421	1					
ANR	4043487	ElseStatement	else		4043421	0					
ANR	4043488	CompoundStatement		13:8:377:377	4043421	0					
ANR	4043489	ExpressionStatement	"ce -> interfaces = ( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"	678:2:24280:24391	4043421	0	True				
ANR	4043490	AssignmentExpression	"ce -> interfaces = ( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		4043421	0		=			
ANR	4043491	PtrMemberAccess	ce -> interfaces		4043421	0					
ANR	4043492	Identifier	ce		4043421	0					
ANR	4043493	Identifier	interfaces		4043421	1					
ANR	4043494	CastExpression	"( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		4043421	1					
ANR	4043495	CastTarget	zend_class_entry * *		4043421	0					
ANR	4043496	CallExpression	"erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		4043421	1					
ANR	4043497	Callee	erealloc		4043421	0					
ANR	4043498	Identifier	erealloc		4043421	0					
ANR	4043499	ArgumentList	ce -> interfaces		4043421	1					
ANR	4043500	Argument	ce -> interfaces		4043421	0					
ANR	4043501	PtrMemberAccess	ce -> interfaces		4043421	0					
ANR	4043502	Identifier	ce		4043421	0					
ANR	4043503	Identifier	interfaces		4043421	1					
ANR	4043504	Argument	sizeof ( zend_class_entry * ) * ( ce_num + if_num )		4043421	1					
ANR	4043505	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ce_num + if_num )		4043421	0		*			
ANR	4043506	SizeofExpression	sizeof ( zend_class_entry * )		4043421	0					
ANR	4043507	Sizeof	sizeof		4043421	0					
ANR	4043508	SizeofOperand	zend_class_entry *		4043421	1					
ANR	4043509	AdditiveExpression	ce_num + if_num		4043421	1		+			
ANR	4043510	Identifier	ce_num		4043421	0					
ANR	4043511	Identifier	if_num		4043421	1					
ANR	4043512	WhileStatement	while ( if_num -- )		4043421	5					
ANR	4043513	Condition	if_num --	682:8:24487:24494	4043421	0	True				
ANR	4043514	PostIncDecOperationExpression	if_num --		4043421	0					
ANR	4043515	Identifier	if_num		4043421	0					
ANR	4043516	IncDec	--		4043421	1					
ANR	4043517	CompoundStatement		18:18:598:598	4043421	1					
ANR	4043518	ExpressionStatement	entry = iface -> interfaces [ if_num ]	683:2:24501:24534	4043421	0	True				
ANR	4043519	AssignmentExpression	entry = iface -> interfaces [ if_num ]		4043421	0		=			
ANR	4043520	Identifier	entry		4043421	0					
ANR	4043521	ArrayIndexing	iface -> interfaces [ if_num ]		4043421	1					
ANR	4043522	PtrMemberAccess	iface -> interfaces		4043421	0					
ANR	4043523	Identifier	iface		4043421	0					
ANR	4043524	Identifier	interfaces		4043421	1					
ANR	4043525	Identifier	if_num		4043421	1					
ANR	4043526	ForStatement	for ( i = 0 ; i < ce_num ; i ++ )		4043421	1					
ANR	4043527	ForInit	i = 0 ;	684:7:24543:24548	4043421	0	True				
ANR	4043528	AssignmentExpression	i = 0		4043421	0		=			
ANR	4043529	Identifier	i		4043421	0					
ANR	4043530	PrimaryExpression	0		4043421	1					
ANR	4043531	Condition	i < ce_num	684:14:24550:24559	4043421	1	True				
ANR	4043532	RelationalExpression	i < ce_num		4043421	0		<			
ANR	4043533	Identifier	i		4043421	0					
ANR	4043534	Identifier	ce_num		4043421	1					
ANR	4043535	PostIncDecOperationExpression	i ++	684:26:24562:24564	4043421	2	True				
ANR	4043536	Identifier	i		4043421	0					
ANR	4043537	IncDec	++		4043421	1					
ANR	4043538	CompoundStatement		20:31:668:668	4043421	3					
ANR	4043539	IfStatement	if ( ce -> interfaces [ i ] == entry )		4043421	0					
ANR	4043540	Condition	ce -> interfaces [ i ] == entry	685:7:24576:24601	4043421	0	True				
ANR	4043541	EqualityExpression	ce -> interfaces [ i ] == entry		4043421	0		==			
ANR	4043542	ArrayIndexing	ce -> interfaces [ i ]		4043421	0					
ANR	4043543	PtrMemberAccess	ce -> interfaces		4043421	0					
ANR	4043544	Identifier	ce		4043421	0					
ANR	4043545	Identifier	interfaces		4043421	1					
ANR	4043546	Identifier	i		4043421	1					
ANR	4043547	Identifier	entry		4043421	1					
ANR	4043548	CompoundStatement		21:35:705:705	4043421	1					
ANR	4043549	BreakStatement	break ;	686:4:24610:24615	4043421	0	True				
ANR	4043550	IfStatement	if ( i == ce_num )		4043421	2					
ANR	4043551	Condition	i == ce_num	689:6:24632:24642	4043421	0	True				
ANR	4043552	EqualityExpression	i == ce_num		4043421	0		==			
ANR	4043553	Identifier	i		4043421	0					
ANR	4043554	Identifier	ce_num		4043421	1					
ANR	4043555	CompoundStatement		25:19:746:746	4043421	1					
ANR	4043556	ExpressionStatement	ce -> interfaces [ ce -> num_interfaces ++ ] = entry	690:3:24650:24694	4043421	0	True				
ANR	4043557	AssignmentExpression	ce -> interfaces [ ce -> num_interfaces ++ ] = entry		4043421	0		=			
ANR	4043558	ArrayIndexing	ce -> interfaces [ ce -> num_interfaces ++ ]		4043421	0					
ANR	4043559	PtrMemberAccess	ce -> interfaces		4043421	0					
ANR	4043560	Identifier	ce		4043421	0					
ANR	4043561	Identifier	interfaces		4043421	1					
ANR	4043562	PostIncDecOperationExpression	ce -> num_interfaces ++		4043421	1					
ANR	4043563	PtrMemberAccess	ce -> num_interfaces		4043421	0					
ANR	4043564	Identifier	ce		4043421	0					
ANR	4043565	Identifier	num_interfaces		4043421	1					
ANR	4043566	IncDec	++		4043421	1					
ANR	4043567	Identifier	entry		4043421	1					
ANR	4043568	WhileStatement	while ( ce_num < ce -> num_interfaces )		4043421	6					
ANR	4043569	Condition	ce_num < ce -> num_interfaces	695:8:24758:24784	4043421	0	True				
ANR	4043570	RelationalExpression	ce_num < ce -> num_interfaces		4043421	0		<			
ANR	4043571	Identifier	ce_num		4043421	0					
ANR	4043572	PtrMemberAccess	ce -> num_interfaces		4043421	1					
ANR	4043573	Identifier	ce		4043421	0					
ANR	4043574	Identifier	num_interfaces		4043421	1					
ANR	4043575	CompoundStatement		31:37:888:888	4043421	1					
ANR	4043576	ExpressionStatement	"do_implement_interface ( ce , ce -> interfaces [ ce_num ++ ] )"	696:2:24791:24843	4043421	0	True				
ANR	4043577	CallExpression	"do_implement_interface ( ce , ce -> interfaces [ ce_num ++ ] )"		4043421	0					
ANR	4043578	Callee	do_implement_interface		4043421	0					
ANR	4043579	Identifier	do_implement_interface		4043421	0					
ANR	4043580	ArgumentList	ce		4043421	1					
ANR	4043581	Argument	ce		4043421	0					
ANR	4043582	Identifier	ce		4043421	0					
ANR	4043583	Argument	ce -> interfaces [ ce_num ++ ]		4043421	1					
ANR	4043584	ArrayIndexing	ce -> interfaces [ ce_num ++ ]		4043421	0					
ANR	4043585	PtrMemberAccess	ce -> interfaces		4043421	0					
ANR	4043586	Identifier	ce		4043421	0					
ANR	4043587	Identifier	interfaces		4043421	1					
ANR	4043588	PostIncDecOperationExpression	ce_num ++		4043421	1					
ANR	4043589	Identifier	ce_num		4043421	0					
ANR	4043590	IncDec	++		4043421	1					
ANR	4043591	ReturnType	ZEND_API void		4043421	1					
ANR	4043592	Identifier	zend_do_inherit_interfaces		4043421	2					
ANR	4043593	ParameterList	"zend_class_entry * ce , const zend_class_entry * iface"		4043421	3					
ANR	4043594	Parameter	zend_class_entry * ce	664:41:23835:23854	4043421	0	True				
ANR	4043595	ParameterType	zend_class_entry *		4043421	0					
ANR	4043596	Identifier	ce		4043421	1					
ANR	4043597	Parameter	const zend_class_entry * iface	664:63:23857:23885	4043421	1	True				
ANR	4043598	ParameterType	const zend_class_entry *		4043421	0					
ANR	4043599	Identifier	iface		4043421	1					
ANR	4043600	CFGEntryNode	ENTRY		4043421		True				
ANR	4043601	CFGExitNode	EXIT		4043421		True				
ANR	4043602	Symbol	ZEND_INTERNAL_CLASS		4043421						
ANR	4043603	Symbol	ce -> type		4043421						
ANR	4043604	Symbol	iface -> interfaces		4043421						
ANR	4043605	Symbol	ce		4043421						
ANR	4043606	Symbol	ce_num		4043421						
ANR	4043607	Symbol	* * iface		4043421						
ANR	4043608	Symbol	ce -> interfaces		4043421						
ANR	4043609	Symbol	* iface		4043421						
ANR	4043610	Symbol	i		4043421						
ANR	4043611	Symbol	* ce		4043421						
ANR	4043612	Symbol	realloc		4043421						
ANR	4043613	Symbol	* * ce		4043421						
ANR	4043614	Symbol	iface -> num_interfaces		4043421						
ANR	4043615	Symbol	iface		4043421						
ANR	4043616	Symbol	entry		4043421						
ANR	4043617	Symbol	if_num		4043421						
ANR	4043618	Symbol	* i		4043421						
ANR	4043619	Symbol	ce -> num_interfaces		4043421						
ANR	4043620	Symbol	* if_num		4043421						
ANR	4043621	Symbol	* iface -> interfaces		4043421						
ANR	4043622	Symbol	* ce -> interfaces		4043421						
ANR	4043623	Symbol	erealloc		4043421						
ANR	4043624	Function	do_inherit_class_constant	701:0:24861:25366							
ANR	4043625	FunctionDef	"do_inherit_class_constant (zend_string * name , zval * zv , zend_class_entry * ce , zend_class_entry * parent_ce)"		4043624	0					
ANR	4043626	CompoundStatement		702:0:24989:25366	4043624	0					
ANR	4043627	IfStatement	"if ( ! zend_hash_exists ( & ce -> constants_table , name ) )"		4043624	0					
ANR	4043628	Condition	"! zend_hash_exists ( & ce -> constants_table , name )"	703:5:24996:25040	4043624	0	True				
ANR	4043629	UnaryOperationExpression	"! zend_hash_exists ( & ce -> constants_table , name )"		4043624	0					
ANR	4043630	UnaryOperator	!		4043624	0					
ANR	4043631	CallExpression	"zend_hash_exists ( & ce -> constants_table , name )"		4043624	1					
ANR	4043632	Callee	zend_hash_exists		4043624	0					
ANR	4043633	Identifier	zend_hash_exists		4043624	0					
ANR	4043634	ArgumentList	& ce -> constants_table		4043624	1					
ANR	4043635	Argument	& ce -> constants_table		4043624	0					
ANR	4043636	UnaryOperationExpression	& ce -> constants_table		4043624	0					
ANR	4043637	UnaryOperator	&		4043624	0					
ANR	4043638	PtrMemberAccess	ce -> constants_table		4043624	1					
ANR	4043639	Identifier	ce		4043624	0					
ANR	4043640	Identifier	constants_table		4043624	1					
ANR	4043641	Argument	name		4043624	1					
ANR	4043642	Identifier	name		4043624	0					
ANR	4043643	CompoundStatement		2:52:53:53	4043624	1					
ANR	4043644	IfStatement	if ( ! Z_ISREF_P ( zv ) )		4043624	0					
ANR	4043645	Condition	! Z_ISREF_P ( zv )	704:6:25051:25064	4043624	0	True				
ANR	4043646	UnaryOperationExpression	! Z_ISREF_P ( zv )		4043624	0					
ANR	4043647	UnaryOperator	!		4043624	0					
ANR	4043648	CallExpression	Z_ISREF_P ( zv )		4043624	1					
ANR	4043649	Callee	Z_ISREF_P		4043624	0					
ANR	4043650	Identifier	Z_ISREF_P		4043624	0					
ANR	4043651	ArgumentList	zv		4043624	1					
ANR	4043652	Argument	zv		4043624	0					
ANR	4043653	Identifier	zv		4043624	0					
ANR	4043654	CompoundStatement		3:22:77:77	4043624	1					
ANR	4043655	IfStatement	if ( parent_ce -> type == ZEND_INTERNAL_CLASS )		4043624	0					
ANR	4043656	Condition	parent_ce -> type == ZEND_INTERNAL_CLASS	705:7:25076:25113	4043624	0	True				
ANR	4043657	EqualityExpression	parent_ce -> type == ZEND_INTERNAL_CLASS		4043624	0		==			
ANR	4043658	PtrMemberAccess	parent_ce -> type		4043624	0					
ANR	4043659	Identifier	parent_ce		4043624	0					
ANR	4043660	Identifier	type		4043624	1					
ANR	4043661	Identifier	ZEND_INTERNAL_CLASS		4043624	1					
ANR	4043662	CompoundStatement		4:47:126:126	4043624	1					
ANR	4043663	ExpressionStatement	"ZVAL_NEW_PERSISTENT_REF ( zv , zv )"	706:4:25122:25153	4043624	0	True				
ANR	4043664	CallExpression	"ZVAL_NEW_PERSISTENT_REF ( zv , zv )"		4043624	0					
ANR	4043665	Callee	ZVAL_NEW_PERSISTENT_REF		4043624	0					
ANR	4043666	Identifier	ZVAL_NEW_PERSISTENT_REF		4043624	0					
ANR	4043667	ArgumentList	zv		4043624	1					
ANR	4043668	Argument	zv		4043624	0					
ANR	4043669	Identifier	zv		4043624	0					
ANR	4043670	Argument	zv		4043624	1					
ANR	4043671	Identifier	zv		4043624	0					
ANR	4043672	ElseStatement	else		4043624	0					
ANR	4043673	CompoundStatement		6:10:175:175	4043624	0					
ANR	4043674	ExpressionStatement	"ZVAL_NEW_REF ( zv , zv )"	708:4:25171:25191	4043624	0	True				
ANR	4043675	CallExpression	"ZVAL_NEW_REF ( zv , zv )"		4043624	0					
ANR	4043676	Callee	ZVAL_NEW_REF		4043624	0					
ANR	4043677	Identifier	ZVAL_NEW_REF		4043624	0					
ANR	4043678	ArgumentList	zv		4043624	1					
ANR	4043679	Argument	zv		4043624	0					
ANR	4043680	Identifier	zv		4043624	0					
ANR	4043681	Argument	zv		4043624	1					
ANR	4043682	Identifier	zv		4043624	0					
ANR	4043683	IfStatement	if ( Z_CONSTANT_P ( Z_REFVAL_P ( zv ) ) )		4043624	1					
ANR	4043684	Condition	Z_CONSTANT_P ( Z_REFVAL_P ( zv ) )	711:6:25208:25235	4043624	0	True				
ANR	4043685	CallExpression	Z_CONSTANT_P ( Z_REFVAL_P ( zv ) )		4043624	0					
ANR	4043686	Callee	Z_CONSTANT_P		4043624	0					
ANR	4043687	Identifier	Z_CONSTANT_P		4043624	0					
ANR	4043688	ArgumentList	Z_REFVAL_P ( zv )		4043624	1					
ANR	4043689	Argument	Z_REFVAL_P ( zv )		4043624	0					
ANR	4043690	CallExpression	Z_REFVAL_P ( zv )		4043624	0					
ANR	4043691	Callee	Z_REFVAL_P		4043624	0					
ANR	4043692	Identifier	Z_REFVAL_P		4043624	0					
ANR	4043693	ArgumentList	zv		4043624	1					
ANR	4043694	Argument	zv		4043624	0					
ANR	4043695	Identifier	zv		4043624	0					
ANR	4043696	CompoundStatement		10:36:248:248	4043624	1					
ANR	4043697	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	712:3:25243:25286	4043624	0	True				
ANR	4043698	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		4043624	0		&=			
ANR	4043699	PtrMemberAccess	ce -> ce_flags		4043624	0					
ANR	4043700	Identifier	ce		4043624	0					
ANR	4043701	Identifier	ce_flags		4043624	1					
ANR	4043702	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		4043624	1					
ANR	4043703	ExpressionStatement	Z_ADDREF_P ( zv )	714:2:25294:25308	4043624	2	True				
ANR	4043704	CallExpression	Z_ADDREF_P ( zv )		4043624	0					
ANR	4043705	Callee	Z_ADDREF_P		4043624	0					
ANR	4043706	Identifier	Z_ADDREF_P		4043624	0					
ANR	4043707	ArgumentList	zv		4043624	1					
ANR	4043708	Argument	zv		4043624	0					
ANR	4043709	Identifier	zv		4043624	0					
ANR	4043710	ExpressionStatement	"_zend_hash_append ( & ce -> constants_table , name , zv )"	715:2:25312:25361	4043624	3	True				
ANR	4043711	CallExpression	"_zend_hash_append ( & ce -> constants_table , name , zv )"		4043624	0					
ANR	4043712	Callee	_zend_hash_append		4043624	0					
ANR	4043713	Identifier	_zend_hash_append		4043624	0					
ANR	4043714	ArgumentList	& ce -> constants_table		4043624	1					
ANR	4043715	Argument	& ce -> constants_table		4043624	0					
ANR	4043716	UnaryOperationExpression	& ce -> constants_table		4043624	0					
ANR	4043717	UnaryOperator	&		4043624	0					
ANR	4043718	PtrMemberAccess	ce -> constants_table		4043624	1					
ANR	4043719	Identifier	ce		4043624	0					
ANR	4043720	Identifier	constants_table		4043624	1					
ANR	4043721	Argument	name		4043624	1					
ANR	4043722	Identifier	name		4043624	0					
ANR	4043723	Argument	zv		4043624	2					
ANR	4043724	Identifier	zv		4043624	0					
ANR	4043725	ReturnType	static void		4043624	1					
ANR	4043726	Identifier	do_inherit_class_constant		4043624	2					
ANR	4043727	ParameterList	"zend_string * name , zval * zv , zend_class_entry * ce , zend_class_entry * parent_ce"		4043624	3					
ANR	4043728	Parameter	zend_string * name	701:38:24899:24915	4043624	0	True				
ANR	4043729	ParameterType	zend_string *		4043624	0					
ANR	4043730	Identifier	name		4043624	1					
ANR	4043731	Parameter	zval * zv	701:57:24918:24925	4043624	1	True				
ANR	4043732	ParameterType	zval *		4043624	0					
ANR	4043733	Identifier	zv		4043624	1					
ANR	4043734	Parameter	zend_class_entry * ce	701:67:24928:24947	4043624	2	True				
ANR	4043735	ParameterType	zend_class_entry *		4043624	0					
ANR	4043736	Identifier	ce		4043624	1					
ANR	4043737	Parameter	zend_class_entry * parent_ce	701:89:24950:24976	4043624	3	True				
ANR	4043738	ParameterType	zend_class_entry *		4043624	0					
ANR	4043739	Identifier	parent_ce		4043624	1					
ANR	4043740	CFGEntryNode	ENTRY		4043624		True				
ANR	4043741	CFGExitNode	EXIT		4043624		True				
ANR	4043742	Symbol	ZEND_INTERNAL_CLASS		4043624						
ANR	4043743	Symbol	parent_ce -> type		4043624						
ANR	4043744	Symbol	ce		4043624						
ANR	4043745	Symbol	Z_CONSTANT_P		4043624						
ANR	4043746	Symbol	zend_hash_exists		4043624						
ANR	4043747	Symbol	* ce		4043624						
ANR	4043748	Symbol	ce -> ce_flags		4043624						
ANR	4043749	Symbol	parent_ce		4043624						
ANR	4043750	Symbol	& ce -> constants_table		4043624						
ANR	4043751	Symbol	Z_REFVAL_P		4043624						
ANR	4043752	Symbol	name		4043624						
ANR	4043753	Symbol	* parent_ce		4043624						
ANR	4043754	Symbol	zv		4043624						
ANR	4043755	Symbol	Z_ISREF_P		4043624						
ANR	4043756	Symbol	~ZEND_ACC_CONSTANTS_UPDATED		4043624						
ANR	4043757	Function	zend_do_inheritance	720:0:25379:31751							
ANR	4043758	FunctionDef	"zend_do_inheritance (zend_class_entry * ce , zend_class_entry * parent_ce)"		4043757	0					
ANR	4043759	CompoundStatement		721:0:25474:31751	4043757	0					
ANR	4043760	IdentifierDeclStatement	zend_property_info * property_info ;	722:1:25477:25510	4043757	0	True				
ANR	4043761	IdentifierDecl	* property_info		4043757	0					
ANR	4043762	IdentifierDeclType	zend_property_info *		4043757	0					
ANR	4043763	Identifier	property_info		4043757	1					
ANR	4043764	IdentifierDeclStatement	zend_function * func ;	723:1:25513:25532	4043757	1	True				
ANR	4043765	IdentifierDecl	* func		4043757	0					
ANR	4043766	IdentifierDeclType	zend_function *		4043757	0					
ANR	4043767	Identifier	func		4043757	1					
ANR	4043768	IdentifierDeclStatement	zend_string * key ;	724:1:25535:25551	4043757	2	True				
ANR	4043769	IdentifierDecl	* key		4043757	0					
ANR	4043770	IdentifierDeclType	zend_string *		4043757	0					
ANR	4043771	Identifier	key		4043757	1					
ANR	4043772	IdentifierDeclStatement	zval * zv ;	725:1:25554:25562	4043757	3	True				
ANR	4043773	IdentifierDecl	* zv		4043757	0					
ANR	4043774	IdentifierDeclType	zval *		4043757	0					
ANR	4043775	Identifier	zv		4043757	1					
ANR	4043776	IfStatement	if ( UNEXPECTED ( ce -> ce_flags & ZEND_ACC_INTERFACE ) )		4043757	4					
ANR	4043777	Condition	UNEXPECTED ( ce -> ce_flags & ZEND_ACC_INTERFACE )	727:5:25570:25614	4043757	0	True				
ANR	4043778	CallExpression	UNEXPECTED ( ce -> ce_flags & ZEND_ACC_INTERFACE )		4043757	0					
ANR	4043779	Callee	UNEXPECTED		4043757	0					
ANR	4043780	Identifier	UNEXPECTED		4043757	0					
ANR	4043781	ArgumentList	ce -> ce_flags & ZEND_ACC_INTERFACE		4043757	1					
ANR	4043782	Argument	ce -> ce_flags & ZEND_ACC_INTERFACE		4043757	0					
ANR	4043783	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		4043757	0		&			
ANR	4043784	PtrMemberAccess	ce -> ce_flags		4043757	0					
ANR	4043785	Identifier	ce		4043757	0					
ANR	4043786	Identifier	ce_flags		4043757	1					
ANR	4043787	Identifier	ZEND_ACC_INTERFACE		4043757	1					
ANR	4043788	CompoundStatement		7:52:142:142	4043757	1					
ANR	4043789	IfStatement	if ( UNEXPECTED ( ! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE ) ) )		4043757	0					
ANR	4043790	Condition	UNEXPECTED ( ! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE ) )	729:6:25677:25731	4043757	0	True				
ANR	4043791	CallExpression	UNEXPECTED ( ! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE ) )		4043757	0					
ANR	4043792	Callee	UNEXPECTED		4043757	0					
ANR	4043793	Identifier	UNEXPECTED		4043757	0					
ANR	4043794	ArgumentList	! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE )		4043757	1					
ANR	4043795	Argument	! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE )		4043757	0					
ANR	4043796	UnaryOperationExpression	! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE )		4043757	0					
ANR	4043797	UnaryOperator	!		4043757	0					
ANR	4043798	BitAndExpression	parent_ce -> ce_flags & ZEND_ACC_INTERFACE		4043757	1		&			
ANR	4043799	PtrMemberAccess	parent_ce -> ce_flags		4043757	0					
ANR	4043800	Identifier	parent_ce		4043757	0					
ANR	4043801	Identifier	ce_flags		4043757	1					
ANR	4043802	Identifier	ZEND_ACC_INTERFACE		4043757	1					
ANR	4043803	CompoundStatement		9:63:259:259	4043757	1					
ANR	4043804	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Interface %s may not inherit from class (%s)"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"	730:3:25739:25870	4043757	0	True				
ANR	4043805	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Interface %s may not inherit from class (%s)"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"		4043757	0					
ANR	4043806	Callee	zend_error_noreturn		4043757	0					
ANR	4043807	Identifier	zend_error_noreturn		4043757	0					
ANR	4043808	ArgumentList	E_COMPILE_ERROR		4043757	1					
ANR	4043809	Argument	E_COMPILE_ERROR		4043757	0					
ANR	4043810	Identifier	E_COMPILE_ERROR		4043757	0					
ANR	4043811	Argument	"""Interface %s may not inherit from class (%s)"""		4043757	1					
ANR	4043812	PrimaryExpression	"""Interface %s may not inherit from class (%s)"""		4043757	0					
ANR	4043813	Argument	ZSTR_VAL ( ce -> name )		4043757	2					
ANR	4043814	CallExpression	ZSTR_VAL ( ce -> name )		4043757	0					
ANR	4043815	Callee	ZSTR_VAL		4043757	0					
ANR	4043816	Identifier	ZSTR_VAL		4043757	0					
ANR	4043817	ArgumentList	ce -> name		4043757	1					
ANR	4043818	Argument	ce -> name		4043757	0					
ANR	4043819	PtrMemberAccess	ce -> name		4043757	0					
ANR	4043820	Identifier	ce		4043757	0					
ANR	4043821	Identifier	name		4043757	1					
ANR	4043822	Argument	ZSTR_VAL ( parent_ce -> name )		4043757	3					
ANR	4043823	CallExpression	ZSTR_VAL ( parent_ce -> name )		4043757	0					
ANR	4043824	Callee	ZSTR_VAL		4043757	0					
ANR	4043825	Identifier	ZSTR_VAL		4043757	0					
ANR	4043826	ArgumentList	parent_ce -> name		4043757	1					
ANR	4043827	Argument	parent_ce -> name		4043757	0					
ANR	4043828	PtrMemberAccess	parent_ce -> name		4043757	0					
ANR	4043829	Identifier	parent_ce		4043757	0					
ANR	4043830	Identifier	name		4043757	1					
ANR	4043831	ElseStatement	else		4043757	0					
ANR	4043832	IfStatement	if ( UNEXPECTED ( parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL ) ) )		4043757	0					
ANR	4043833	Condition	UNEXPECTED ( parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL ) )	732:12:25888:25971	4043757	0	True				
ANR	4043834	CallExpression	UNEXPECTED ( parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL ) )		4043757	0					
ANR	4043835	Callee	UNEXPECTED		4043757	0					
ANR	4043836	Identifier	UNEXPECTED		4043757	0					
ANR	4043837	ArgumentList	parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL )		4043757	1					
ANR	4043838	Argument	parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL )		4043757	0					
ANR	4043839	BitAndExpression	parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL )		4043757	0		&			
ANR	4043840	PtrMemberAccess	parent_ce -> ce_flags		4043757	0					
ANR	4043841	Identifier	parent_ce		4043757	0					
ANR	4043842	Identifier	ce_flags		4043757	1					
ANR	4043843	InclusiveOrExpression	ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL		4043757	1		|			
ANR	4043844	Identifier	ZEND_ACC_INTERFACE		4043757	0					
ANR	4043845	InclusiveOrExpression	ZEND_ACC_TRAIT | ZEND_ACC_FINAL		4043757	1		|			
ANR	4043846	Identifier	ZEND_ACC_TRAIT		4043757	0					
ANR	4043847	Identifier	ZEND_ACC_FINAL		4043757	1					
ANR	4043848	CompoundStatement		12:98:499:499	4043757	1					
ANR	4043849	IfStatement	if ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE )		4043757	0					
ANR	4043850	Condition	parent_ce -> ce_flags & ZEND_ACC_INTERFACE	734:6:26045:26084	4043757	0	True				
ANR	4043851	BitAndExpression	parent_ce -> ce_flags & ZEND_ACC_INTERFACE		4043757	0		&			
ANR	4043852	PtrMemberAccess	parent_ce -> ce_flags		4043757	0					
ANR	4043853	Identifier	parent_ce		4043757	0					
ANR	4043854	Identifier	ce_flags		4043757	1					
ANR	4043855	Identifier	ZEND_ACC_INTERFACE		4043757	1					
ANR	4043856	CompoundStatement		14:48:612:612	4043757	1					
ANR	4043857	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot extend from interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"	735:3:26092:26219	4043757	0	True				
ANR	4043858	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot extend from interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"		4043757	0					
ANR	4043859	Callee	zend_error_noreturn		4043757	0					
ANR	4043860	Identifier	zend_error_noreturn		4043757	0					
ANR	4043861	ArgumentList	E_COMPILE_ERROR		4043757	1					
ANR	4043862	Argument	E_COMPILE_ERROR		4043757	0					
ANR	4043863	Identifier	E_COMPILE_ERROR		4043757	0					
ANR	4043864	Argument	"""Class %s cannot extend from interface %s"""		4043757	1					
ANR	4043865	PrimaryExpression	"""Class %s cannot extend from interface %s"""		4043757	0					
ANR	4043866	Argument	ZSTR_VAL ( ce -> name )		4043757	2					
ANR	4043867	CallExpression	ZSTR_VAL ( ce -> name )		4043757	0					
ANR	4043868	Callee	ZSTR_VAL		4043757	0					
ANR	4043869	Identifier	ZSTR_VAL		4043757	0					
ANR	4043870	ArgumentList	ce -> name		4043757	1					
ANR	4043871	Argument	ce -> name		4043757	0					
ANR	4043872	PtrMemberAccess	ce -> name		4043757	0					
ANR	4043873	Identifier	ce		4043757	0					
ANR	4043874	Identifier	name		4043757	1					
ANR	4043875	Argument	ZSTR_VAL ( parent_ce -> name )		4043757	3					
ANR	4043876	CallExpression	ZSTR_VAL ( parent_ce -> name )		4043757	0					
ANR	4043877	Callee	ZSTR_VAL		4043757	0					
ANR	4043878	Identifier	ZSTR_VAL		4043757	0					
ANR	4043879	ArgumentList	parent_ce -> name		4043757	1					
ANR	4043880	Argument	parent_ce -> name		4043757	0					
ANR	4043881	PtrMemberAccess	parent_ce -> name		4043757	0					
ANR	4043882	Identifier	parent_ce		4043757	0					
ANR	4043883	Identifier	name		4043757	1					
ANR	4043884	ElseStatement	else		4043757	0					
ANR	4043885	IfStatement	if ( parent_ce -> ce_flags & ZEND_ACC_TRAIT )		4043757	0					
ANR	4043886	Condition	parent_ce -> ce_flags & ZEND_ACC_TRAIT	736:13:26234:26269	4043757	0	True				
ANR	4043887	BitAndExpression	parent_ce -> ce_flags & ZEND_ACC_TRAIT		4043757	0		&			
ANR	4043888	PtrMemberAccess	parent_ce -> ce_flags		4043757	0					
ANR	4043889	Identifier	parent_ce		4043757	0					
ANR	4043890	Identifier	ce_flags		4043757	1					
ANR	4043891	Identifier	ZEND_ACC_TRAIT		4043757	1					
ANR	4043892	CompoundStatement		16:51:797:797	4043757	1					
ANR	4043893	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot extend from trait %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"	737:3:26277:26400	4043757	0	True				
ANR	4043894	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot extend from trait %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"		4043757	0					
ANR	4043895	Callee	zend_error_noreturn		4043757	0					
ANR	4043896	Identifier	zend_error_noreturn		4043757	0					
ANR	4043897	ArgumentList	E_COMPILE_ERROR		4043757	1					
ANR	4043898	Argument	E_COMPILE_ERROR		4043757	0					
ANR	4043899	Identifier	E_COMPILE_ERROR		4043757	0					
ANR	4043900	Argument	"""Class %s cannot extend from trait %s"""		4043757	1					
ANR	4043901	PrimaryExpression	"""Class %s cannot extend from trait %s"""		4043757	0					
ANR	4043902	Argument	ZSTR_VAL ( ce -> name )		4043757	2					
ANR	4043903	CallExpression	ZSTR_VAL ( ce -> name )		4043757	0					
ANR	4043904	Callee	ZSTR_VAL		4043757	0					
ANR	4043905	Identifier	ZSTR_VAL		4043757	0					
ANR	4043906	ArgumentList	ce -> name		4043757	1					
ANR	4043907	Argument	ce -> name		4043757	0					
ANR	4043908	PtrMemberAccess	ce -> name		4043757	0					
ANR	4043909	Identifier	ce		4043757	0					
ANR	4043910	Identifier	name		4043757	1					
ANR	4043911	Argument	ZSTR_VAL ( parent_ce -> name )		4043757	3					
ANR	4043912	CallExpression	ZSTR_VAL ( parent_ce -> name )		4043757	0					
ANR	4043913	Callee	ZSTR_VAL		4043757	0					
ANR	4043914	Identifier	ZSTR_VAL		4043757	0					
ANR	4043915	ArgumentList	parent_ce -> name		4043757	1					
ANR	4043916	Argument	parent_ce -> name		4043757	0					
ANR	4043917	PtrMemberAccess	parent_ce -> name		4043757	0					
ANR	4043918	Identifier	parent_ce		4043757	0					
ANR	4043919	Identifier	name		4043757	1					
ANR	4043920	IfStatement	if ( parent_ce -> ce_flags & ZEND_ACC_FINAL )		4043757	1					
ANR	4043921	Condition	parent_ce -> ce_flags & ZEND_ACC_FINAL	741:6:26457:26492	4043757	0	True				
ANR	4043922	BitAndExpression	parent_ce -> ce_flags & ZEND_ACC_FINAL		4043757	0		&			
ANR	4043923	PtrMemberAccess	parent_ce -> ce_flags		4043757	0					
ANR	4043924	Identifier	parent_ce		4043757	0					
ANR	4043925	Identifier	ce_flags		4043757	1					
ANR	4043926	Identifier	ZEND_ACC_FINAL		4043757	1					
ANR	4043927	CompoundStatement		21:44:1020:1020	4043757	1					
ANR	4043928	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s may not inherit from final class (%s)"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"	742:3:26500:26633	4043757	0	True				
ANR	4043929	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s may not inherit from final class (%s)"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"		4043757	0					
ANR	4043930	Callee	zend_error_noreturn		4043757	0					
ANR	4043931	Identifier	zend_error_noreturn		4043757	0					
ANR	4043932	ArgumentList	E_COMPILE_ERROR		4043757	1					
ANR	4043933	Argument	E_COMPILE_ERROR		4043757	0					
ANR	4043934	Identifier	E_COMPILE_ERROR		4043757	0					
ANR	4043935	Argument	"""Class %s may not inherit from final class (%s)"""		4043757	1					
ANR	4043936	PrimaryExpression	"""Class %s may not inherit from final class (%s)"""		4043757	0					
ANR	4043937	Argument	ZSTR_VAL ( ce -> name )		4043757	2					
ANR	4043938	CallExpression	ZSTR_VAL ( ce -> name )		4043757	0					
ANR	4043939	Callee	ZSTR_VAL		4043757	0					
ANR	4043940	Identifier	ZSTR_VAL		4043757	0					
ANR	4043941	ArgumentList	ce -> name		4043757	1					
ANR	4043942	Argument	ce -> name		4043757	0					
ANR	4043943	PtrMemberAccess	ce -> name		4043757	0					
ANR	4043944	Identifier	ce		4043757	0					
ANR	4043945	Identifier	name		4043757	1					
ANR	4043946	Argument	ZSTR_VAL ( parent_ce -> name )		4043757	3					
ANR	4043947	CallExpression	ZSTR_VAL ( parent_ce -> name )		4043757	0					
ANR	4043948	Callee	ZSTR_VAL		4043757	0					
ANR	4043949	Identifier	ZSTR_VAL		4043757	0					
ANR	4043950	ArgumentList	parent_ce -> name		4043757	1					
ANR	4043951	Argument	parent_ce -> name		4043757	0					
ANR	4043952	PtrMemberAccess	parent_ce -> name		4043757	0					
ANR	4043953	Identifier	parent_ce		4043757	0					
ANR	4043954	Identifier	name		4043757	1					
ANR	4043955	ExpressionStatement	ce -> parent = parent_ce	746:1:26644:26666	4043757	5	True				
ANR	4043956	AssignmentExpression	ce -> parent = parent_ce		4043757	0		=			
ANR	4043957	PtrMemberAccess	ce -> parent		4043757	0					
ANR	4043958	Identifier	ce		4043757	0					
ANR	4043959	Identifier	parent		4043757	1					
ANR	4043960	Identifier	parent_ce		4043757	1					
ANR	4043961	ExpressionStatement	"zend_do_inherit_interfaces ( ce , parent_ce )"	749:1:26696:26737	4043757	6	True				
ANR	4043962	CallExpression	"zend_do_inherit_interfaces ( ce , parent_ce )"		4043757	0					
ANR	4043963	Callee	zend_do_inherit_interfaces		4043757	0					
ANR	4043964	Identifier	zend_do_inherit_interfaces		4043757	0					
ANR	4043965	ArgumentList	ce		4043757	1					
ANR	4043966	Argument	ce		4043757	0					
ANR	4043967	Identifier	ce		4043757	0					
ANR	4043968	Argument	parent_ce		4043757	1					
ANR	4043969	Identifier	parent_ce		4043757	0					
ANR	4043970	IfStatement	if ( parent_ce -> default_properties_count )		4043757	7					
ANR	4043971	Condition	parent_ce -> default_properties_count	752:5:26771:26805	4043757	0	True				
ANR	4043972	PtrMemberAccess	parent_ce -> default_properties_count		4043757	0					
ANR	4043973	Identifier	parent_ce		4043757	0					
ANR	4043974	Identifier	default_properties_count		4043757	1					
ANR	4043975	CompoundStatement		33:2:1337:1358	4043757	1					
ANR	4043976	IdentifierDeclStatement	"zval * src , * dst , * end ;"	753:2:26812:26833	4043757	0	True				
ANR	4043977	IdentifierDecl	* src		4043757	0					
ANR	4043978	IdentifierDeclType	zval *		4043757	0					
ANR	4043979	Identifier	src		4043757	1					
ANR	4043980	IdentifierDecl	* dst		4043757	1					
ANR	4043981	IdentifierDeclType	zval *		4043757	0					
ANR	4043982	Identifier	dst		4043757	1					
ANR	4043983	IdentifierDecl	* end		4043757	2					
ANR	4043984	IdentifierDeclType	zval *		4043757	0					
ANR	4043985	Identifier	end		4043757	1					
ANR	4043986	IfStatement	if ( ce -> default_properties_count )		4043757	1					
ANR	4043987	Condition	ce -> default_properties_count	755:6:26842:26869	4043757	0	True				
ANR	4043988	PtrMemberAccess	ce -> default_properties_count		4043757	0					
ANR	4043989	Identifier	ce		4043757	0					
ANR	4043990	Identifier	default_properties_count		4043757	1					
ANR	4043991	CompoundStatement		36:3:1402:1542	4043757	1					
ANR	4043992	IdentifierDeclStatement	"zval * table = pemalloc ( sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count ) , ce -> type == ZEND_INTERNAL_CLASS ) ;"	756:3:26877:27017	4043757	0	True				
ANR	4043993	IdentifierDecl	"* table = pemalloc ( sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	0					
ANR	4043994	IdentifierDeclType	zval *		4043757	0					
ANR	4043995	Identifier	table		4043757	1					
ANR	4043996	AssignmentExpression	"* table = pemalloc ( sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	2		=			
ANR	4043997	Identifier	table		4043757	0					
ANR	4043998	CallExpression	"pemalloc ( sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	1					
ANR	4043999	Callee	pemalloc		4043757	0					
ANR	4044000	Identifier	pemalloc		4043757	0					
ANR	4044001	ArgumentList	sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count )		4043757	1					
ANR	4044002	Argument	sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count )		4043757	0					
ANR	4044003	MultiplicativeExpression	sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count )		4043757	0		*			
ANR	4044004	SizeofExpression	sizeof ( zval )		4043757	0					
ANR	4044005	Sizeof	sizeof		4043757	0					
ANR	4044006	SizeofOperand	zval		4043757	1					
ANR	4044007	AdditiveExpression	ce -> default_properties_count + parent_ce -> default_properties_count		4043757	1		+			
ANR	4044008	PtrMemberAccess	ce -> default_properties_count		4043757	0					
ANR	4044009	Identifier	ce		4043757	0					
ANR	4044010	Identifier	default_properties_count		4043757	1					
ANR	4044011	PtrMemberAccess	parent_ce -> default_properties_count		4043757	1					
ANR	4044012	Identifier	parent_ce		4043757	0					
ANR	4044013	Identifier	default_properties_count		4043757	1					
ANR	4044014	Argument	ce -> type == ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044015	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4043757	0		==			
ANR	4044016	PtrMemberAccess	ce -> type		4043757	0					
ANR	4044017	Identifier	ce		4043757	0					
ANR	4044018	Identifier	type		4043757	1					
ANR	4044019	Identifier	ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044020	ExpressionStatement	src = ce -> default_properties_table + ce -> default_properties_count	757:3:27022:27087	4043757	1	True				
ANR	4044021	AssignmentExpression	src = ce -> default_properties_table + ce -> default_properties_count		4043757	0		=			
ANR	4044022	Identifier	src		4043757	0					
ANR	4044023	AdditiveExpression	ce -> default_properties_table + ce -> default_properties_count		4043757	1		+			
ANR	4044024	PtrMemberAccess	ce -> default_properties_table		4043757	0					
ANR	4044025	Identifier	ce		4043757	0					
ANR	4044026	Identifier	default_properties_table		4043757	1					
ANR	4044027	PtrMemberAccess	ce -> default_properties_count		4043757	1					
ANR	4044028	Identifier	ce		4043757	0					
ANR	4044029	Identifier	default_properties_count		4043757	1					
ANR	4044030	ExpressionStatement	end = table + parent_ce -> default_properties_count	758:3:27092:27141	4043757	2	True				
ANR	4044031	AssignmentExpression	end = table + parent_ce -> default_properties_count		4043757	0		=			
ANR	4044032	Identifier	end		4043757	0					
ANR	4044033	AdditiveExpression	table + parent_ce -> default_properties_count		4043757	1		+			
ANR	4044034	Identifier	table		4043757	0					
ANR	4044035	PtrMemberAccess	parent_ce -> default_properties_count		4043757	1					
ANR	4044036	Identifier	parent_ce		4043757	0					
ANR	4044037	Identifier	default_properties_count		4043757	1					
ANR	4044038	ExpressionStatement	dst = end + ce -> default_properties_count	759:3:27146:27186	4043757	3	True				
ANR	4044039	AssignmentExpression	dst = end + ce -> default_properties_count		4043757	0		=			
ANR	4044040	Identifier	dst		4043757	0					
ANR	4044041	AdditiveExpression	end + ce -> default_properties_count		4043757	1		+			
ANR	4044042	Identifier	end		4043757	0					
ANR	4044043	PtrMemberAccess	ce -> default_properties_count		4043757	1					
ANR	4044044	Identifier	ce		4043757	0					
ANR	4044045	Identifier	default_properties_count		4043757	1					
ANR	4044046	ExpressionStatement	ce -> default_properties_table = table	760:3:27191:27227	4043757	4	True				
ANR	4044047	AssignmentExpression	ce -> default_properties_table = table		4043757	0		=			
ANR	4044048	PtrMemberAccess	ce -> default_properties_table		4043757	0					
ANR	4044049	Identifier	ce		4043757	0					
ANR	4044050	Identifier	default_properties_table		4043757	1					
ANR	4044051	Identifier	table		4043757	1					
ANR	4044052	DoStatement	do		4043757	5					
ANR	4044053	CompoundStatement		41:6:1760:1760	4043757	0					
ANR	4044054	ExpressionStatement	dst --	762:4:27241:27246	4043757	0	True				
ANR	4044055	PostIncDecOperationExpression	dst --		4043757	0					
ANR	4044056	Identifier	dst		4043757	0					
ANR	4044057	IncDec	--		4043757	1					
ANR	4044058	ExpressionStatement	src --	763:4:27252:27257	4043757	1	True				
ANR	4044059	PostIncDecOperationExpression	src --		4043757	0					
ANR	4044060	Identifier	src		4043757	0					
ANR	4044061	IncDec	--		4043757	1					
ANR	4044062	ExpressionStatement	"ZVAL_COPY_VALUE ( dst , src )"	764:4:27263:27288	4043757	2	True				
ANR	4044063	CallExpression	"ZVAL_COPY_VALUE ( dst , src )"		4043757	0					
ANR	4044064	Callee	ZVAL_COPY_VALUE		4043757	0					
ANR	4044065	Identifier	ZVAL_COPY_VALUE		4043757	0					
ANR	4044066	ArgumentList	dst		4043757	1					
ANR	4044067	Argument	dst		4043757	0					
ANR	4044068	Identifier	dst		4043757	0					
ANR	4044069	Argument	src		4043757	1					
ANR	4044070	Identifier	src		4043757	0					
ANR	4044071	Condition	dst != end	765:12:27302:27311	4043757	1	True				
ANR	4044072	EqualityExpression	dst != end		4043757	0		!=			
ANR	4044073	Identifier	dst		4043757	0					
ANR	4044074	Identifier	end		4043757	1					
ANR	4044075	ExpressionStatement	"pefree ( src , ce -> type == ZEND_INTERNAL_CLASS )"	766:3:27318:27362	4043757	6	True				
ANR	4044076	CallExpression	"pefree ( src , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	0					
ANR	4044077	Callee	pefree		4043757	0					
ANR	4044078	Identifier	pefree		4043757	0					
ANR	4044079	ArgumentList	src		4043757	1					
ANR	4044080	Argument	src		4043757	0					
ANR	4044081	Identifier	src		4043757	0					
ANR	4044082	Argument	ce -> type == ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044083	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4043757	0		==			
ANR	4044084	PtrMemberAccess	ce -> type		4043757	0					
ANR	4044085	Identifier	ce		4043757	0					
ANR	4044086	Identifier	type		4043757	1					
ANR	4044087	Identifier	ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044088	ExpressionStatement	end = ce -> default_properties_table	767:3:27367:27401	4043757	7	True				
ANR	4044089	AssignmentExpression	end = ce -> default_properties_table		4043757	0		=			
ANR	4044090	Identifier	end		4043757	0					
ANR	4044091	PtrMemberAccess	ce -> default_properties_table		4043757	1					
ANR	4044092	Identifier	ce		4043757	0					
ANR	4044093	Identifier	default_properties_table		4043757	1					
ANR	4044094	ElseStatement	else		4043757	0					
ANR	4044095	CompoundStatement		48:9:1937:1937	4043757	0					
ANR	4044096	ExpressionStatement	"end = pemalloc ( sizeof ( zval ) * parent_ce -> default_properties_count , ce -> type == ZEND_INTERNAL_CLASS )"	769:3:27417:27516	4043757	0	True				
ANR	4044097	AssignmentExpression	"end = pemalloc ( sizeof ( zval ) * parent_ce -> default_properties_count , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	0		=			
ANR	4044098	Identifier	end		4043757	0					
ANR	4044099	CallExpression	"pemalloc ( sizeof ( zval ) * parent_ce -> default_properties_count , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	1					
ANR	4044100	Callee	pemalloc		4043757	0					
ANR	4044101	Identifier	pemalloc		4043757	0					
ANR	4044102	ArgumentList	sizeof ( zval ) * parent_ce -> default_properties_count		4043757	1					
ANR	4044103	Argument	sizeof ( zval ) * parent_ce -> default_properties_count		4043757	0					
ANR	4044104	MultiplicativeExpression	sizeof ( zval ) * parent_ce -> default_properties_count		4043757	0		*			
ANR	4044105	SizeofExpression	sizeof ( zval )		4043757	0					
ANR	4044106	Sizeof	sizeof		4043757	0					
ANR	4044107	SizeofOperand	zval		4043757	1					
ANR	4044108	PtrMemberAccess	parent_ce -> default_properties_count		4043757	1					
ANR	4044109	Identifier	parent_ce		4043757	0					
ANR	4044110	Identifier	default_properties_count		4043757	1					
ANR	4044111	Argument	ce -> type == ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044112	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4043757	0		==			
ANR	4044113	PtrMemberAccess	ce -> type		4043757	0					
ANR	4044114	Identifier	ce		4043757	0					
ANR	4044115	Identifier	type		4043757	1					
ANR	4044116	Identifier	ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044117	ExpressionStatement	dst = end + parent_ce -> default_properties_count	770:3:27521:27568	4043757	1	True				
ANR	4044118	AssignmentExpression	dst = end + parent_ce -> default_properties_count		4043757	0		=			
ANR	4044119	Identifier	dst		4043757	0					
ANR	4044120	AdditiveExpression	end + parent_ce -> default_properties_count		4043757	1		+			
ANR	4044121	Identifier	end		4043757	0					
ANR	4044122	PtrMemberAccess	parent_ce -> default_properties_count		4043757	1					
ANR	4044123	Identifier	parent_ce		4043757	0					
ANR	4044124	Identifier	default_properties_count		4043757	1					
ANR	4044125	ExpressionStatement	ce -> default_properties_table = end	771:3:27573:27607	4043757	2	True				
ANR	4044126	AssignmentExpression	ce -> default_properties_table = end		4043757	0		=			
ANR	4044127	PtrMemberAccess	ce -> default_properties_table		4043757	0					
ANR	4044128	Identifier	ce		4043757	0					
ANR	4044129	Identifier	default_properties_table		4043757	1					
ANR	4044130	Identifier	end		4043757	1					
ANR	4044131	ExpressionStatement	src = parent_ce -> default_properties_table + parent_ce -> default_properties_count	773:2:27615:27694	4043757	2	True				
ANR	4044132	AssignmentExpression	src = parent_ce -> default_properties_table + parent_ce -> default_properties_count		4043757	0		=			
ANR	4044133	Identifier	src		4043757	0					
ANR	4044134	AdditiveExpression	parent_ce -> default_properties_table + parent_ce -> default_properties_count		4043757	1		+			
ANR	4044135	PtrMemberAccess	parent_ce -> default_properties_table		4043757	0					
ANR	4044136	Identifier	parent_ce		4043757	0					
ANR	4044137	Identifier	default_properties_table		4043757	1					
ANR	4044138	PtrMemberAccess	parent_ce -> default_properties_count		4043757	1					
ANR	4044139	Identifier	parent_ce		4043757	0					
ANR	4044140	Identifier	default_properties_count		4043757	1					
ANR	4044141	DoStatement	do		4043757	3					
ANR	4044142	CompoundStatement		54:5:2226:2226	4043757	0					
ANR	4044143	ExpressionStatement	dst --	775:3:27706:27711	4043757	0	True				
ANR	4044144	PostIncDecOperationExpression	dst --		4043757	0					
ANR	4044145	Identifier	dst		4043757	0					
ANR	4044146	IncDec	--		4043757	1					
ANR	4044147	ExpressionStatement	src --	776:3:27716:27721	4043757	1	True				
ANR	4044148	PostIncDecOperationExpression	src --		4043757	0					
ANR	4044149	Identifier	src		4043757	0					
ANR	4044150	IncDec	--		4043757	1					
ANR	4044151	IfStatement	if ( parent_ce -> type != ce -> type )		4043757	2					
ANR	4044152	Condition	parent_ce -> type != ce -> type	778:7:27741:27767	4043757	0	True				
ANR	4044153	EqualityExpression	parent_ce -> type != ce -> type		4043757	0		!=			
ANR	4044154	PtrMemberAccess	parent_ce -> type		4043757	0					
ANR	4044155	Identifier	parent_ce		4043757	0					
ANR	4044156	Identifier	type		4043757	1					
ANR	4044157	PtrMemberAccess	ce -> type		4043757	1					
ANR	4044158	Identifier	ce		4043757	0					
ANR	4044159	Identifier	type		4043757	1					
ANR	4044160	CompoundStatement		58:36:2295:2295	4043757	1					
ANR	4044161	ExpressionStatement	"ZVAL_DUP ( dst , src )"	779:4:27776:27794	4043757	0	True				
ANR	4044162	CallExpression	"ZVAL_DUP ( dst , src )"		4043757	0					
ANR	4044163	Callee	ZVAL_DUP		4043757	0					
ANR	4044164	Identifier	ZVAL_DUP		4043757	0					
ANR	4044165	ArgumentList	dst		4043757	1					
ANR	4044166	Argument	dst		4043757	0					
ANR	4044167	Identifier	dst		4043757	0					
ANR	4044168	Argument	src		4043757	1					
ANR	4044169	Identifier	src		4043757	0					
ANR	4044170	IfStatement	if ( Z_OPT_CONSTANT_P ( dst ) )		4043757	1					
ANR	4044171	Condition	Z_OPT_CONSTANT_P ( dst )	780:8:27804:27824	4043757	0	True				
ANR	4044172	CallExpression	Z_OPT_CONSTANT_P ( dst )		4043757	0					
ANR	4044173	Callee	Z_OPT_CONSTANT_P		4043757	0					
ANR	4044174	Identifier	Z_OPT_CONSTANT_P		4043757	0					
ANR	4044175	ArgumentList	dst		4043757	1					
ANR	4044176	Argument	dst		4043757	0					
ANR	4044177	Identifier	dst		4043757	0					
ANR	4044178	CompoundStatement		60:31:2352:2352	4043757	1					
ANR	4044179	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	781:5:27834:27877	4043757	0	True				
ANR	4044180	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		4043757	0		&=			
ANR	4044181	PtrMemberAccess	ce -> ce_flags		4043757	0					
ANR	4044182	Identifier	ce		4043757	0					
ANR	4044183	Identifier	ce_flags		4043757	1					
ANR	4044184	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		4043757	1					
ANR	4044185	ContinueStatement	continue ;	783:4:27889:27897	4043757	2	True				
ANR	4044186	ExpressionStatement	"ZVAL_COPY ( dst , src )"	787:3:27915:27934	4043757	3	True				
ANR	4044187	CallExpression	"ZVAL_COPY ( dst , src )"		4043757	0					
ANR	4044188	Callee	ZVAL_COPY		4043757	0					
ANR	4044189	Identifier	ZVAL_COPY		4043757	0					
ANR	4044190	ArgumentList	dst		4043757	1					
ANR	4044191	Argument	dst		4043757	0					
ANR	4044192	Identifier	dst		4043757	0					
ANR	4044193	Argument	src		4043757	1					
ANR	4044194	Identifier	src		4043757	0					
ANR	4044195	IfStatement	if ( Z_OPT_CONSTANT_P ( dst ) )		4043757	4					
ANR	4044196	Condition	Z_OPT_CONSTANT_P ( dst )	788:7:27943:27963	4043757	0	True				
ANR	4044197	CallExpression	Z_OPT_CONSTANT_P ( dst )		4043757	0					
ANR	4044198	Callee	Z_OPT_CONSTANT_P		4043757	0					
ANR	4044199	Identifier	Z_OPT_CONSTANT_P		4043757	0					
ANR	4044200	ArgumentList	dst		4043757	1					
ANR	4044201	Argument	dst		4043757	0					
ANR	4044202	Identifier	dst		4043757	0					
ANR	4044203	CompoundStatement		68:30:2491:2491	4043757	1					
ANR	4044204	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	789:4:27972:28015	4043757	0	True				
ANR	4044205	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		4043757	0		&=			
ANR	4044206	PtrMemberAccess	ce -> ce_flags		4043757	0					
ANR	4044207	Identifier	ce		4043757	0					
ANR	4044208	Identifier	ce_flags		4043757	1					
ANR	4044209	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		4043757	1					
ANR	4044210	Condition	dst != end	791:11:28033:28042	4043757	1	True				
ANR	4044211	EqualityExpression	dst != end		4043757	0		!=			
ANR	4044212	Identifier	dst		4043757	0					
ANR	4044213	Identifier	end		4043757	1					
ANR	4044214	ExpressionStatement	ce -> default_properties_count += parent_ce -> default_properties_count	792:2:28048:28115	4043757	4	True				
ANR	4044215	AssignmentExpression	ce -> default_properties_count += parent_ce -> default_properties_count		4043757	0		+=			
ANR	4044216	PtrMemberAccess	ce -> default_properties_count		4043757	0					
ANR	4044217	Identifier	ce		4043757	0					
ANR	4044218	Identifier	default_properties_count		4043757	1					
ANR	4044219	PtrMemberAccess	parent_ce -> default_properties_count		4043757	1					
ANR	4044220	Identifier	parent_ce		4043757	0					
ANR	4044221	Identifier	default_properties_count		4043757	1					
ANR	4044222	IfStatement	if ( parent_ce -> default_static_members_count )		4043757	8					
ANR	4044223	Condition	parent_ce -> default_static_members_count	795:5:28126:28164	4043757	0	True				
ANR	4044224	PtrMemberAccess	parent_ce -> default_static_members_count		4043757	0					
ANR	4044225	Identifier	parent_ce		4043757	0					
ANR	4044226	Identifier	default_static_members_count		4043757	1					
ANR	4044227	CompoundStatement		76:2:2696:2717	4043757	1					
ANR	4044228	IdentifierDeclStatement	"zval * src , * dst , * end ;"	796:2:28171:28192	4043757	0	True				
ANR	4044229	IdentifierDecl	* src		4043757	0					
ANR	4044230	IdentifierDeclType	zval *		4043757	0					
ANR	4044231	Identifier	src		4043757	1					
ANR	4044232	IdentifierDecl	* dst		4043757	1					
ANR	4044233	IdentifierDeclType	zval *		4043757	0					
ANR	4044234	Identifier	dst		4043757	1					
ANR	4044235	IdentifierDecl	* end		4043757	2					
ANR	4044236	IdentifierDeclType	zval *		4043757	0					
ANR	4044237	Identifier	end		4043757	1					
ANR	4044238	IfStatement	if ( ce -> default_static_members_count )		4043757	1					
ANR	4044239	Condition	ce -> default_static_members_count	798:6:28201:28232	4043757	0	True				
ANR	4044240	PtrMemberAccess	ce -> default_static_members_count		4043757	0					
ANR	4044241	Identifier	ce		4043757	0					
ANR	4044242	Identifier	default_static_members_count		4043757	1					
ANR	4044243	CompoundStatement		79:3:2765:2913	4043757	1					
ANR	4044244	IdentifierDeclStatement	"zval * table = pemalloc ( sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count ) , ce -> type == ZEND_INTERNAL_CLASS ) ;"	799:3:28240:28388	4043757	0	True				
ANR	4044245	IdentifierDecl	"* table = pemalloc ( sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	0					
ANR	4044246	IdentifierDeclType	zval *		4043757	0					
ANR	4044247	Identifier	table		4043757	1					
ANR	4044248	AssignmentExpression	"* table = pemalloc ( sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	2		=			
ANR	4044249	Identifier	table		4043757	0					
ANR	4044250	CallExpression	"pemalloc ( sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	1					
ANR	4044251	Callee	pemalloc		4043757	0					
ANR	4044252	Identifier	pemalloc		4043757	0					
ANR	4044253	ArgumentList	sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count )		4043757	1					
ANR	4044254	Argument	sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count )		4043757	0					
ANR	4044255	MultiplicativeExpression	sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count )		4043757	0		*			
ANR	4044256	SizeofExpression	sizeof ( zval )		4043757	0					
ANR	4044257	Sizeof	sizeof		4043757	0					
ANR	4044258	SizeofOperand	zval		4043757	1					
ANR	4044259	AdditiveExpression	ce -> default_static_members_count + parent_ce -> default_static_members_count		4043757	1		+			
ANR	4044260	PtrMemberAccess	ce -> default_static_members_count		4043757	0					
ANR	4044261	Identifier	ce		4043757	0					
ANR	4044262	Identifier	default_static_members_count		4043757	1					
ANR	4044263	PtrMemberAccess	parent_ce -> default_static_members_count		4043757	1					
ANR	4044264	Identifier	parent_ce		4043757	0					
ANR	4044265	Identifier	default_static_members_count		4043757	1					
ANR	4044266	Argument	ce -> type == ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044267	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4043757	0		==			
ANR	4044268	PtrMemberAccess	ce -> type		4043757	0					
ANR	4044269	Identifier	ce		4043757	0					
ANR	4044270	Identifier	type		4043757	1					
ANR	4044271	Identifier	ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044272	ExpressionStatement	src = ce -> default_static_members_table + ce -> default_static_members_count	800:3:28393:28466	4043757	1	True				
ANR	4044273	AssignmentExpression	src = ce -> default_static_members_table + ce -> default_static_members_count		4043757	0		=			
ANR	4044274	Identifier	src		4043757	0					
ANR	4044275	AdditiveExpression	ce -> default_static_members_table + ce -> default_static_members_count		4043757	1		+			
ANR	4044276	PtrMemberAccess	ce -> default_static_members_table		4043757	0					
ANR	4044277	Identifier	ce		4043757	0					
ANR	4044278	Identifier	default_static_members_table		4043757	1					
ANR	4044279	PtrMemberAccess	ce -> default_static_members_count		4043757	1					
ANR	4044280	Identifier	ce		4043757	0					
ANR	4044281	Identifier	default_static_members_count		4043757	1					
ANR	4044282	ExpressionStatement	end = table + parent_ce -> default_static_members_count	801:3:28471:28524	4043757	2	True				
ANR	4044283	AssignmentExpression	end = table + parent_ce -> default_static_members_count		4043757	0		=			
ANR	4044284	Identifier	end		4043757	0					
ANR	4044285	AdditiveExpression	table + parent_ce -> default_static_members_count		4043757	1		+			
ANR	4044286	Identifier	table		4043757	0					
ANR	4044287	PtrMemberAccess	parent_ce -> default_static_members_count		4043757	1					
ANR	4044288	Identifier	parent_ce		4043757	0					
ANR	4044289	Identifier	default_static_members_count		4043757	1					
ANR	4044290	ExpressionStatement	dst = end + ce -> default_static_members_count	802:3:28529:28573	4043757	3	True				
ANR	4044291	AssignmentExpression	dst = end + ce -> default_static_members_count		4043757	0		=			
ANR	4044292	Identifier	dst		4043757	0					
ANR	4044293	AdditiveExpression	end + ce -> default_static_members_count		4043757	1		+			
ANR	4044294	Identifier	end		4043757	0					
ANR	4044295	PtrMemberAccess	ce -> default_static_members_count		4043757	1					
ANR	4044296	Identifier	ce		4043757	0					
ANR	4044297	Identifier	default_static_members_count		4043757	1					
ANR	4044298	ExpressionStatement	ce -> default_static_members_table = table	803:3:28578:28618	4043757	4	True				
ANR	4044299	AssignmentExpression	ce -> default_static_members_table = table		4043757	0		=			
ANR	4044300	PtrMemberAccess	ce -> default_static_members_table		4043757	0					
ANR	4044301	Identifier	ce		4043757	0					
ANR	4044302	Identifier	default_static_members_table		4043757	1					
ANR	4044303	Identifier	table		4043757	1					
ANR	4044304	DoStatement	do		4043757	5					
ANR	4044305	CompoundStatement		84:6:3151:3151	4043757	0					
ANR	4044306	ExpressionStatement	dst --	805:4:28632:28637	4043757	0	True				
ANR	4044307	PostIncDecOperationExpression	dst --		4043757	0					
ANR	4044308	Identifier	dst		4043757	0					
ANR	4044309	IncDec	--		4043757	1					
ANR	4044310	ExpressionStatement	src --	806:4:28643:28648	4043757	1	True				
ANR	4044311	PostIncDecOperationExpression	src --		4043757	0					
ANR	4044312	Identifier	src		4043757	0					
ANR	4044313	IncDec	--		4043757	1					
ANR	4044314	ExpressionStatement	"ZVAL_COPY_VALUE ( dst , src )"	807:4:28654:28679	4043757	2	True				
ANR	4044315	CallExpression	"ZVAL_COPY_VALUE ( dst , src )"		4043757	0					
ANR	4044316	Callee	ZVAL_COPY_VALUE		4043757	0					
ANR	4044317	Identifier	ZVAL_COPY_VALUE		4043757	0					
ANR	4044318	ArgumentList	dst		4043757	1					
ANR	4044319	Argument	dst		4043757	0					
ANR	4044320	Identifier	dst		4043757	0					
ANR	4044321	Argument	src		4043757	1					
ANR	4044322	Identifier	src		4043757	0					
ANR	4044323	Condition	dst != end	808:12:28693:28702	4043757	1	True				
ANR	4044324	EqualityExpression	dst != end		4043757	0		!=			
ANR	4044325	Identifier	dst		4043757	0					
ANR	4044326	Identifier	end		4043757	1					
ANR	4044327	ExpressionStatement	"pefree ( src , ce -> type == ZEND_INTERNAL_CLASS )"	809:3:28709:28753	4043757	6	True				
ANR	4044328	CallExpression	"pefree ( src , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	0					
ANR	4044329	Callee	pefree		4043757	0					
ANR	4044330	Identifier	pefree		4043757	0					
ANR	4044331	ArgumentList	src		4043757	1					
ANR	4044332	Argument	src		4043757	0					
ANR	4044333	Identifier	src		4043757	0					
ANR	4044334	Argument	ce -> type == ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044335	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4043757	0		==			
ANR	4044336	PtrMemberAccess	ce -> type		4043757	0					
ANR	4044337	Identifier	ce		4043757	0					
ANR	4044338	Identifier	type		4043757	1					
ANR	4044339	Identifier	ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044340	ExpressionStatement	end = ce -> default_static_members_table	810:3:28758:28796	4043757	7	True				
ANR	4044341	AssignmentExpression	end = ce -> default_static_members_table		4043757	0		=			
ANR	4044342	Identifier	end		4043757	0					
ANR	4044343	PtrMemberAccess	ce -> default_static_members_table		4043757	1					
ANR	4044344	Identifier	ce		4043757	0					
ANR	4044345	Identifier	default_static_members_table		4043757	1					
ANR	4044346	ElseStatement	else		4043757	0					
ANR	4044347	CompoundStatement		91:9:3332:3332	4043757	0					
ANR	4044348	ExpressionStatement	"end = pemalloc ( sizeof ( zval ) * parent_ce -> default_static_members_count , ce -> type == ZEND_INTERNAL_CLASS )"	812:3:28812:28915	4043757	0	True				
ANR	4044349	AssignmentExpression	"end = pemalloc ( sizeof ( zval ) * parent_ce -> default_static_members_count , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	0		=			
ANR	4044350	Identifier	end		4043757	0					
ANR	4044351	CallExpression	"pemalloc ( sizeof ( zval ) * parent_ce -> default_static_members_count , ce -> type == ZEND_INTERNAL_CLASS )"		4043757	1					
ANR	4044352	Callee	pemalloc		4043757	0					
ANR	4044353	Identifier	pemalloc		4043757	0					
ANR	4044354	ArgumentList	sizeof ( zval ) * parent_ce -> default_static_members_count		4043757	1					
ANR	4044355	Argument	sizeof ( zval ) * parent_ce -> default_static_members_count		4043757	0					
ANR	4044356	MultiplicativeExpression	sizeof ( zval ) * parent_ce -> default_static_members_count		4043757	0		*			
ANR	4044357	SizeofExpression	sizeof ( zval )		4043757	0					
ANR	4044358	Sizeof	sizeof		4043757	0					
ANR	4044359	SizeofOperand	zval		4043757	1					
ANR	4044360	PtrMemberAccess	parent_ce -> default_static_members_count		4043757	1					
ANR	4044361	Identifier	parent_ce		4043757	0					
ANR	4044362	Identifier	default_static_members_count		4043757	1					
ANR	4044363	Argument	ce -> type == ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044364	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4043757	0		==			
ANR	4044365	PtrMemberAccess	ce -> type		4043757	0					
ANR	4044366	Identifier	ce		4043757	0					
ANR	4044367	Identifier	type		4043757	1					
ANR	4044368	Identifier	ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044369	ExpressionStatement	dst = end + parent_ce -> default_static_members_count	813:3:28920:28971	4043757	1	True				
ANR	4044370	AssignmentExpression	dst = end + parent_ce -> default_static_members_count		4043757	0		=			
ANR	4044371	Identifier	dst		4043757	0					
ANR	4044372	AdditiveExpression	end + parent_ce -> default_static_members_count		4043757	1		+			
ANR	4044373	Identifier	end		4043757	0					
ANR	4044374	PtrMemberAccess	parent_ce -> default_static_members_count		4043757	1					
ANR	4044375	Identifier	parent_ce		4043757	0					
ANR	4044376	Identifier	default_static_members_count		4043757	1					
ANR	4044377	ExpressionStatement	ce -> default_static_members_table = end	814:3:28976:29014	4043757	2	True				
ANR	4044378	AssignmentExpression	ce -> default_static_members_table = end		4043757	0		=			
ANR	4044379	PtrMemberAccess	ce -> default_static_members_table		4043757	0					
ANR	4044380	Identifier	ce		4043757	0					
ANR	4044381	Identifier	default_static_members_table		4043757	1					
ANR	4044382	Identifier	end		4043757	1					
ANR	4044383	ExpressionStatement	src = parent_ce -> default_static_members_table + parent_ce -> default_static_members_count	816:2:29022:29109	4043757	2	True				
ANR	4044384	AssignmentExpression	src = parent_ce -> default_static_members_table + parent_ce -> default_static_members_count		4043757	0		=			
ANR	4044385	Identifier	src		4043757	0					
ANR	4044386	AdditiveExpression	parent_ce -> default_static_members_table + parent_ce -> default_static_members_count		4043757	1		+			
ANR	4044387	PtrMemberAccess	parent_ce -> default_static_members_table		4043757	0					
ANR	4044388	Identifier	parent_ce		4043757	0					
ANR	4044389	Identifier	default_static_members_table		4043757	1					
ANR	4044390	PtrMemberAccess	parent_ce -> default_static_members_count		4043757	1					
ANR	4044391	Identifier	parent_ce		4043757	0					
ANR	4044392	Identifier	default_static_members_count		4043757	1					
ANR	4044393	DoStatement	do		4043757	3					
ANR	4044394	CompoundStatement		97:5:3641:3641	4043757	0					
ANR	4044395	ExpressionStatement	dst --	818:3:29121:29126	4043757	0	True				
ANR	4044396	PostIncDecOperationExpression	dst --		4043757	0					
ANR	4044397	Identifier	dst		4043757	0					
ANR	4044398	IncDec	--		4043757	1					
ANR	4044399	ExpressionStatement	src --	819:3:29131:29136	4043757	1	True				
ANR	4044400	PostIncDecOperationExpression	src --		4043757	0					
ANR	4044401	Identifier	src		4043757	0					
ANR	4044402	IncDec	--		4043757	1					
ANR	4044403	IfStatement	if ( parent_ce -> type == ZEND_INTERNAL_CLASS )		4043757	2					
ANR	4044404	Condition	parent_ce -> type == ZEND_INTERNAL_CLASS	820:7:29145:29182	4043757	0	True				
ANR	4044405	EqualityExpression	parent_ce -> type == ZEND_INTERNAL_CLASS		4043757	0		==			
ANR	4044406	PtrMemberAccess	parent_ce -> type		4043757	0					
ANR	4044407	Identifier	parent_ce		4043757	0					
ANR	4044408	Identifier	type		4043757	1					
ANR	4044409	Identifier	ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044410	CompoundStatement		100:47:3710:3710	4043757	1					
ANR	4044411	IfStatement	if ( ! Z_ISREF_P ( src ) )		4043757	0					
ANR	4044412	Condition	! Z_ISREF_P ( src )	821:8:29195:29209	4043757	0	True				
ANR	4044413	UnaryOperationExpression	! Z_ISREF_P ( src )		4043757	0					
ANR	4044414	UnaryOperator	!		4043757	0					
ANR	4044415	CallExpression	Z_ISREF_P ( src )		4043757	1					
ANR	4044416	Callee	Z_ISREF_P		4043757	0					
ANR	4044417	Identifier	Z_ISREF_P		4043757	0					
ANR	4044418	ArgumentList	src		4043757	1					
ANR	4044419	Argument	src		4043757	0					
ANR	4044420	Identifier	src		4043757	0					
ANR	4044421	CompoundStatement		101:25:3737:3737	4043757	1					
ANR	4044422	ExpressionStatement	"ZVAL_NEW_PERSISTENT_REF ( src , src )"	822:5:29219:29252	4043757	0	True				
ANR	4044423	CallExpression	"ZVAL_NEW_PERSISTENT_REF ( src , src )"		4043757	0					
ANR	4044424	Callee	ZVAL_NEW_PERSISTENT_REF		4043757	0					
ANR	4044425	Identifier	ZVAL_NEW_PERSISTENT_REF		4043757	0					
ANR	4044426	ArgumentList	src		4043757	1					
ANR	4044427	Argument	src		4043757	0					
ANR	4044428	Identifier	src		4043757	0					
ANR	4044429	Argument	src		4043757	1					
ANR	4044430	Identifier	src		4043757	0					
ANR	4044431	ElseStatement	else		4043757	0					
ANR	4044432	CompoundStatement		104:10:3795:3795	4043757	0					
ANR	4044433	ExpressionStatement	ZVAL_MAKE_REF ( src )	825:4:29276:29294	4043757	0	True				
ANR	4044434	CallExpression	ZVAL_MAKE_REF ( src )		4043757	0					
ANR	4044435	Callee	ZVAL_MAKE_REF		4043757	0					
ANR	4044436	Identifier	ZVAL_MAKE_REF		4043757	0					
ANR	4044437	ArgumentList	src		4043757	1					
ANR	4044438	Argument	src		4043757	0					
ANR	4044439	Identifier	src		4043757	0					
ANR	4044440	ExpressionStatement	"ZVAL_COPY_VALUE ( dst , src )"	827:3:29304:29329	4043757	3	True				
ANR	4044441	CallExpression	"ZVAL_COPY_VALUE ( dst , src )"		4043757	0					
ANR	4044442	Callee	ZVAL_COPY_VALUE		4043757	0					
ANR	4044443	Identifier	ZVAL_COPY_VALUE		4043757	0					
ANR	4044444	ArgumentList	dst		4043757	1					
ANR	4044445	Argument	dst		4043757	0					
ANR	4044446	Identifier	dst		4043757	0					
ANR	4044447	Argument	src		4043757	1					
ANR	4044448	Identifier	src		4043757	0					
ANR	4044449	ExpressionStatement	Z_ADDREF_P ( dst )	828:3:29334:29349	4043757	4	True				
ANR	4044450	CallExpression	Z_ADDREF_P ( dst )		4043757	0					
ANR	4044451	Callee	Z_ADDREF_P		4043757	0					
ANR	4044452	Identifier	Z_ADDREF_P		4043757	0					
ANR	4044453	ArgumentList	dst		4043757	1					
ANR	4044454	Argument	dst		4043757	0					
ANR	4044455	Identifier	dst		4043757	0					
ANR	4044456	IfStatement	if ( Z_CONSTANT_P ( Z_REFVAL_P ( dst ) ) )		4043757	5					
ANR	4044457	Condition	Z_CONSTANT_P ( Z_REFVAL_P ( dst ) )	829:7:29358:29386	4043757	0	True				
ANR	4044458	CallExpression	Z_CONSTANT_P ( Z_REFVAL_P ( dst ) )		4043757	0					
ANR	4044459	Callee	Z_CONSTANT_P		4043757	0					
ANR	4044460	Identifier	Z_CONSTANT_P		4043757	0					
ANR	4044461	ArgumentList	Z_REFVAL_P ( dst )		4043757	1					
ANR	4044462	Argument	Z_REFVAL_P ( dst )		4043757	0					
ANR	4044463	CallExpression	Z_REFVAL_P ( dst )		4043757	0					
ANR	4044464	Callee	Z_REFVAL_P		4043757	0					
ANR	4044465	Identifier	Z_REFVAL_P		4043757	0					
ANR	4044466	ArgumentList	dst		4043757	1					
ANR	4044467	Argument	dst		4043757	0					
ANR	4044468	Identifier	dst		4043757	0					
ANR	4044469	CompoundStatement		109:38:3914:3914	4043757	1					
ANR	4044470	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	830:4:29395:29438	4043757	0	True				
ANR	4044471	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		4043757	0		&=			
ANR	4044472	PtrMemberAccess	ce -> ce_flags		4043757	0					
ANR	4044473	Identifier	ce		4043757	0					
ANR	4044474	Identifier	ce_flags		4043757	1					
ANR	4044475	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		4043757	1					
ANR	4044476	Condition	dst != end	832:11:29456:29465	4043757	1	True				
ANR	4044477	EqualityExpression	dst != end		4043757	0		!=			
ANR	4044478	Identifier	dst		4043757	0					
ANR	4044479	Identifier	end		4043757	1					
ANR	4044480	ExpressionStatement	ce -> default_static_members_count += parent_ce -> default_static_members_count	833:2:29471:29546	4043757	4	True				
ANR	4044481	AssignmentExpression	ce -> default_static_members_count += parent_ce -> default_static_members_count		4043757	0		+=			
ANR	4044482	PtrMemberAccess	ce -> default_static_members_count		4043757	0					
ANR	4044483	Identifier	ce		4043757	0					
ANR	4044484	Identifier	default_static_members_count		4043757	1					
ANR	4044485	PtrMemberAccess	parent_ce -> default_static_members_count		4043757	1					
ANR	4044486	Identifier	parent_ce		4043757	0					
ANR	4044487	Identifier	default_static_members_count		4043757	1					
ANR	4044488	IfStatement	if ( ce -> type == ZEND_USER_CLASS )		4043757	5					
ANR	4044489	Condition	ce -> type == ZEND_USER_CLASS	834:6:29554:29580	4043757	0	True				
ANR	4044490	EqualityExpression	ce -> type == ZEND_USER_CLASS		4043757	0		==			
ANR	4044491	PtrMemberAccess	ce -> type		4043757	0					
ANR	4044492	Identifier	ce		4043757	0					
ANR	4044493	Identifier	type		4043757	1					
ANR	4044494	Identifier	ZEND_USER_CLASS		4043757	1					
ANR	4044495	CompoundStatement		114:35:4108:4108	4043757	1					
ANR	4044496	ExpressionStatement	ce -> static_members_table = ce -> default_static_members_table	835:3:29588:29647	4043757	0	True				
ANR	4044497	AssignmentExpression	ce -> static_members_table = ce -> default_static_members_table		4043757	0		=			
ANR	4044498	PtrMemberAccess	ce -> static_members_table		4043757	0					
ANR	4044499	Identifier	ce		4043757	0					
ANR	4044500	Identifier	static_members_table		4043757	1					
ANR	4044501	PtrMemberAccess	ce -> default_static_members_table		4043757	1					
ANR	4044502	Identifier	ce		4043757	0					
ANR	4044503	Identifier	default_static_members_table		4043757	1					
ANR	4044504	ElseStatement	else		4043757	0					
ANR	4044505	CompoundStatement		116:9:4183:4183	4043757	0					
ANR	4044506	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	837:3:29663:29706	4043757	0	True				
ANR	4044507	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		4043757	0		&=			
ANR	4044508	PtrMemberAccess	ce -> ce_flags		4043757	0					
ANR	4044509	Identifier	ce		4043757	0					
ANR	4044510	Identifier	ce_flags		4043757	1					
ANR	4044511	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		4043757	1					
ANR	4044512	Statement	ZEND_HASH_FOREACH_PTR	841:1:29717:29737	4043757	9	True				
ANR	4044513	Statement	(	841:22:29738:29738	4043757	10	True				
ANR	4044514	Statement	&	841:23:29739:29739	4043757	11	True				
ANR	4044515	Statement	ce	841:24:29740:29741	4043757	12	True				
ANR	4044516	Statement	->	841:26:29742:29743	4043757	13	True				
ANR	4044517	Statement	properties_info	841:28:29744:29758	4043757	14	True				
ANR	4044518	Statement	","	841:43:29759:29759	4043757	15	True				
ANR	4044519	Statement	property_info	841:45:29761:29773	4043757	16	True				
ANR	4044520	Statement	)	841:58:29774:29774	4043757	17	True				
ANR	4044521	CompoundStatement		121:60:4301:4301	4043757	18					
ANR	4044522	IfStatement	if ( property_info -> ce == ce )		4043757	0					
ANR	4044523	Condition	property_info -> ce == ce	842:6:29784:29806	4043757	0	True				
ANR	4044524	EqualityExpression	property_info -> ce == ce		4043757	0		==			
ANR	4044525	PtrMemberAccess	property_info -> ce		4043757	0					
ANR	4044526	Identifier	property_info		4043757	0					
ANR	4044527	Identifier	ce		4043757	1					
ANR	4044528	Identifier	ce		4043757	1					
ANR	4044529	CompoundStatement		122:31:4334:4334	4043757	1					
ANR	4044530	IfStatement	if ( property_info -> flags & ZEND_ACC_STATIC )		4043757	0					
ANR	4044531	Condition	property_info -> flags & ZEND_ACC_STATIC	843:7:29818:29855	4043757	0	True				
ANR	4044532	BitAndExpression	property_info -> flags & ZEND_ACC_STATIC		4043757	0		&			
ANR	4044533	PtrMemberAccess	property_info -> flags		4043757	0					
ANR	4044534	Identifier	property_info		4043757	0					
ANR	4044535	Identifier	flags		4043757	1					
ANR	4044536	Identifier	ZEND_ACC_STATIC		4043757	1					
ANR	4044537	CompoundStatement		123:47:4383:4383	4043757	1					
ANR	4044538	ExpressionStatement	property_info -> offset += parent_ce -> default_static_members_count	844:4:29864:29928	4043757	0	True				
ANR	4044539	AssignmentExpression	property_info -> offset += parent_ce -> default_static_members_count		4043757	0		+=			
ANR	4044540	PtrMemberAccess	property_info -> offset		4043757	0					
ANR	4044541	Identifier	property_info		4043757	0					
ANR	4044542	Identifier	offset		4043757	1					
ANR	4044543	PtrMemberAccess	parent_ce -> default_static_members_count		4043757	1					
ANR	4044544	Identifier	parent_ce		4043757	0					
ANR	4044545	Identifier	default_static_members_count		4043757	1					
ANR	4044546	ElseStatement	else		4043757	0					
ANR	4044547	CompoundStatement		125:10:4465:4465	4043757	0					
ANR	4044548	ExpressionStatement	property_info -> offset += parent_ce -> default_properties_count * sizeof ( zval )	846:4:29946:30021	4043757	0	True				
ANR	4044549	AssignmentExpression	property_info -> offset += parent_ce -> default_properties_count * sizeof ( zval )		4043757	0		+=			
ANR	4044550	PtrMemberAccess	property_info -> offset		4043757	0					
ANR	4044551	Identifier	property_info		4043757	0					
ANR	4044552	Identifier	offset		4043757	1					
ANR	4044553	MultiplicativeExpression	parent_ce -> default_properties_count * sizeof ( zval )		4043757	1		*			
ANR	4044554	PtrMemberAccess	parent_ce -> default_properties_count		4043757	0					
ANR	4044555	Identifier	parent_ce		4043757	0					
ANR	4044556	Identifier	default_properties_count		4043757	1					
ANR	4044557	SizeofExpression	sizeof ( zval )		4043757	1					
ANR	4044558	Sizeof	sizeof		4043757	0					
ANR	4044559	SizeofOperand	zval		4043757	1					
ANR	4044560	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	849:3:30035:30058	4043757	19	True				
ANR	4044561	CallExpression	ZEND_HASH_FOREACH_END ( )		4043757	0					
ANR	4044562	Callee	ZEND_HASH_FOREACH_END		4043757	0					
ANR	4044563	Identifier	ZEND_HASH_FOREACH_END		4043757	0					
ANR	4044564	ArgumentList			4043757	1					
ANR	4044565	IfStatement	if ( zend_hash_num_elements ( & parent_ce -> properties_info ) )		4043757	20					
ANR	4044566	Condition	zend_hash_num_elements ( & parent_ce -> properties_info )	851:5:30066:30116	4043757	0	True				
ANR	4044567	CallExpression	zend_hash_num_elements ( & parent_ce -> properties_info )		4043757	0					
ANR	4044568	Callee	zend_hash_num_elements		4043757	0					
ANR	4044569	Identifier	zend_hash_num_elements		4043757	0					
ANR	4044570	ArgumentList	& parent_ce -> properties_info		4043757	1					
ANR	4044571	Argument	& parent_ce -> properties_info		4043757	0					
ANR	4044572	UnaryOperationExpression	& parent_ce -> properties_info		4043757	0					
ANR	4044573	UnaryOperator	&		4043757	0					
ANR	4044574	PtrMemberAccess	parent_ce -> properties_info		4043757	1					
ANR	4044575	Identifier	parent_ce		4043757	0					
ANR	4044576	Identifier	properties_info		4043757	1					
ANR	4044577	CompoundStatement		131:58:4644:4644	4043757	1					
ANR	4044578	ExpressionStatement	"zend_hash_extend ( & ce -> properties_info , zend_hash_num_elements ( & ce -> properties_info ) + zend_hash_num_elements ( & parent_ce -> properties_info ) , 0 )"	852:2:30123:30270	4043757	0	True				
ANR	4044579	CallExpression	"zend_hash_extend ( & ce -> properties_info , zend_hash_num_elements ( & ce -> properties_info ) + zend_hash_num_elements ( & parent_ce -> properties_info ) , 0 )"		4043757	0					
ANR	4044580	Callee	zend_hash_extend		4043757	0					
ANR	4044581	Identifier	zend_hash_extend		4043757	0					
ANR	4044582	ArgumentList	& ce -> properties_info		4043757	1					
ANR	4044583	Argument	& ce -> properties_info		4043757	0					
ANR	4044584	UnaryOperationExpression	& ce -> properties_info		4043757	0					
ANR	4044585	UnaryOperator	&		4043757	0					
ANR	4044586	PtrMemberAccess	ce -> properties_info		4043757	1					
ANR	4044587	Identifier	ce		4043757	0					
ANR	4044588	Identifier	properties_info		4043757	1					
ANR	4044589	Argument	zend_hash_num_elements ( & ce -> properties_info ) + zend_hash_num_elements ( & parent_ce -> properties_info )		4043757	1					
ANR	4044590	AdditiveExpression	zend_hash_num_elements ( & ce -> properties_info ) + zend_hash_num_elements ( & parent_ce -> properties_info )		4043757	0		+			
ANR	4044591	CallExpression	zend_hash_num_elements ( & ce -> properties_info )		4043757	0					
ANR	4044592	Callee	zend_hash_num_elements		4043757	0					
ANR	4044593	Identifier	zend_hash_num_elements		4043757	0					
ANR	4044594	ArgumentList	& ce -> properties_info		4043757	1					
ANR	4044595	Argument	& ce -> properties_info		4043757	0					
ANR	4044596	UnaryOperationExpression	& ce -> properties_info		4043757	0					
ANR	4044597	UnaryOperator	&		4043757	0					
ANR	4044598	PtrMemberAccess	ce -> properties_info		4043757	1					
ANR	4044599	Identifier	ce		4043757	0					
ANR	4044600	Identifier	properties_info		4043757	1					
ANR	4044601	CallExpression	zend_hash_num_elements ( & parent_ce -> properties_info )		4043757	1					
ANR	4044602	Callee	zend_hash_num_elements		4043757	0					
ANR	4044603	Identifier	zend_hash_num_elements		4043757	0					
ANR	4044604	ArgumentList	& parent_ce -> properties_info		4043757	1					
ANR	4044605	Argument	& parent_ce -> properties_info		4043757	0					
ANR	4044606	UnaryOperationExpression	& parent_ce -> properties_info		4043757	0					
ANR	4044607	UnaryOperator	&		4043757	0					
ANR	4044608	PtrMemberAccess	parent_ce -> properties_info		4043757	1					
ANR	4044609	Identifier	parent_ce		4043757	0					
ANR	4044610	Identifier	properties_info		4043757	1					
ANR	4044611	Argument	0		4043757	2					
ANR	4044612	PrimaryExpression	0		4043757	0					
ANR	4044613	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	856:2:30275:30303	4043757	1	True				
ANR	4044614	Statement	(	856:31:30304:30304	4043757	2	True				
ANR	4044615	Statement	&	856:32:30305:30305	4043757	3	True				
ANR	4044616	Statement	parent_ce	856:33:30306:30314	4043757	4	True				
ANR	4044617	Statement	->	856:42:30315:30316	4043757	5	True				
ANR	4044618	Statement	properties_info	856:44:30317:30331	4043757	6	True				
ANR	4044619	Statement	","	856:59:30332:30332	4043757	7	True				
ANR	4044620	Statement	key	856:61:30334:30336	4043757	8	True				
ANR	4044621	Statement	","	856:64:30337:30337	4043757	9	True				
ANR	4044622	Statement	property_info	856:66:30339:30351	4043757	10	True				
ANR	4044623	Statement	)	856:79:30352:30352	4043757	11	True				
ANR	4044624	CompoundStatement		136:81:4879:4879	4043757	12					
ANR	4044625	ExpressionStatement	"do_inherit_property ( property_info , key , ce )"	857:3:30359:30402	4043757	0	True				
ANR	4044626	CallExpression	"do_inherit_property ( property_info , key , ce )"		4043757	0					
ANR	4044627	Callee	do_inherit_property		4043757	0					
ANR	4044628	Identifier	do_inherit_property		4043757	0					
ANR	4044629	ArgumentList	property_info		4043757	1					
ANR	4044630	Argument	property_info		4043757	0					
ANR	4044631	Identifier	property_info		4043757	0					
ANR	4044632	Argument	key		4043757	1					
ANR	4044633	Identifier	key		4043757	0					
ANR	4044634	Argument	ce		4043757	2					
ANR	4044635	Identifier	ce		4043757	0					
ANR	4044636	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	858:4:30408:30431	4043757	13	True				
ANR	4044637	CallExpression	ZEND_HASH_FOREACH_END ( )		4043757	0					
ANR	4044638	Callee	ZEND_HASH_FOREACH_END		4043757	0					
ANR	4044639	Identifier	ZEND_HASH_FOREACH_END		4043757	0					
ANR	4044640	ArgumentList			4043757	1					
ANR	4044641	IfStatement	if ( zend_hash_num_elements ( & parent_ce -> constants_table ) )		4043757	21					
ANR	4044642	Condition	zend_hash_num_elements ( & parent_ce -> constants_table )	861:5:30442:30492	4043757	0	True				
ANR	4044643	CallExpression	zend_hash_num_elements ( & parent_ce -> constants_table )		4043757	0					
ANR	4044644	Callee	zend_hash_num_elements		4043757	0					
ANR	4044645	Identifier	zend_hash_num_elements		4043757	0					
ANR	4044646	ArgumentList	& parent_ce -> constants_table		4043757	1					
ANR	4044647	Argument	& parent_ce -> constants_table		4043757	0					
ANR	4044648	UnaryOperationExpression	& parent_ce -> constants_table		4043757	0					
ANR	4044649	UnaryOperator	&		4043757	0					
ANR	4044650	PtrMemberAccess	parent_ce -> constants_table		4043757	1					
ANR	4044651	Identifier	parent_ce		4043757	0					
ANR	4044652	Identifier	constants_table		4043757	1					
ANR	4044653	CompoundStatement		141:58:5020:5020	4043757	1					
ANR	4044654	ExpressionStatement	"zend_hash_extend ( & ce -> constants_table , zend_hash_num_elements ( & ce -> constants_table ) + zend_hash_num_elements ( & parent_ce -> constants_table ) , 0 )"	862:2:30499:30646	4043757	0	True				
ANR	4044655	CallExpression	"zend_hash_extend ( & ce -> constants_table , zend_hash_num_elements ( & ce -> constants_table ) + zend_hash_num_elements ( & parent_ce -> constants_table ) , 0 )"		4043757	0					
ANR	4044656	Callee	zend_hash_extend		4043757	0					
ANR	4044657	Identifier	zend_hash_extend		4043757	0					
ANR	4044658	ArgumentList	& ce -> constants_table		4043757	1					
ANR	4044659	Argument	& ce -> constants_table		4043757	0					
ANR	4044660	UnaryOperationExpression	& ce -> constants_table		4043757	0					
ANR	4044661	UnaryOperator	&		4043757	0					
ANR	4044662	PtrMemberAccess	ce -> constants_table		4043757	1					
ANR	4044663	Identifier	ce		4043757	0					
ANR	4044664	Identifier	constants_table		4043757	1					
ANR	4044665	Argument	zend_hash_num_elements ( & ce -> constants_table ) + zend_hash_num_elements ( & parent_ce -> constants_table )		4043757	1					
ANR	4044666	AdditiveExpression	zend_hash_num_elements ( & ce -> constants_table ) + zend_hash_num_elements ( & parent_ce -> constants_table )		4043757	0		+			
ANR	4044667	CallExpression	zend_hash_num_elements ( & ce -> constants_table )		4043757	0					
ANR	4044668	Callee	zend_hash_num_elements		4043757	0					
ANR	4044669	Identifier	zend_hash_num_elements		4043757	0					
ANR	4044670	ArgumentList	& ce -> constants_table		4043757	1					
ANR	4044671	Argument	& ce -> constants_table		4043757	0					
ANR	4044672	UnaryOperationExpression	& ce -> constants_table		4043757	0					
ANR	4044673	UnaryOperator	&		4043757	0					
ANR	4044674	PtrMemberAccess	ce -> constants_table		4043757	1					
ANR	4044675	Identifier	ce		4043757	0					
ANR	4044676	Identifier	constants_table		4043757	1					
ANR	4044677	CallExpression	zend_hash_num_elements ( & parent_ce -> constants_table )		4043757	1					
ANR	4044678	Callee	zend_hash_num_elements		4043757	0					
ANR	4044679	Identifier	zend_hash_num_elements		4043757	0					
ANR	4044680	ArgumentList	& parent_ce -> constants_table		4043757	1					
ANR	4044681	Argument	& parent_ce -> constants_table		4043757	0					
ANR	4044682	UnaryOperationExpression	& parent_ce -> constants_table		4043757	0					
ANR	4044683	UnaryOperator	&		4043757	0					
ANR	4044684	PtrMemberAccess	parent_ce -> constants_table		4043757	1					
ANR	4044685	Identifier	parent_ce		4043757	0					
ANR	4044686	Identifier	constants_table		4043757	1					
ANR	4044687	Argument	0		4043757	2					
ANR	4044688	PrimaryExpression	0		4043757	0					
ANR	4044689	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	866:2:30651:30679	4043757	1	True				
ANR	4044690	Statement	(	866:31:30680:30680	4043757	2	True				
ANR	4044691	Statement	&	866:32:30681:30681	4043757	3	True				
ANR	4044692	Statement	parent_ce	866:33:30682:30690	4043757	4	True				
ANR	4044693	Statement	->	866:42:30691:30692	4043757	5	True				
ANR	4044694	Statement	constants_table	866:44:30693:30707	4043757	6	True				
ANR	4044695	Statement	","	866:59:30708:30708	4043757	7	True				
ANR	4044696	Statement	key	866:61:30710:30712	4043757	8	True				
ANR	4044697	Statement	","	866:64:30713:30713	4043757	9	True				
ANR	4044698	Statement	zv	866:66:30715:30716	4043757	10	True				
ANR	4044699	Statement	)	866:68:30717:30717	4043757	11	True				
ANR	4044700	CompoundStatement		146:70:5244:5244	4043757	12					
ANR	4044701	ExpressionStatement	"do_inherit_class_constant ( key , zv , ce , parent_ce )"	867:3:30724:30773	4043757	0	True				
ANR	4044702	CallExpression	"do_inherit_class_constant ( key , zv , ce , parent_ce )"		4043757	0					
ANR	4044703	Callee	do_inherit_class_constant		4043757	0					
ANR	4044704	Identifier	do_inherit_class_constant		4043757	0					
ANR	4044705	ArgumentList	key		4043757	1					
ANR	4044706	Argument	key		4043757	0					
ANR	4044707	Identifier	key		4043757	0					
ANR	4044708	Argument	zv		4043757	1					
ANR	4044709	Identifier	zv		4043757	0					
ANR	4044710	Argument	ce		4043757	2					
ANR	4044711	Identifier	ce		4043757	0					
ANR	4044712	Argument	parent_ce		4043757	3					
ANR	4044713	Identifier	parent_ce		4043757	0					
ANR	4044714	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	868:4:30779:30802	4043757	13	True				
ANR	4044715	CallExpression	ZEND_HASH_FOREACH_END ( )		4043757	0					
ANR	4044716	Callee	ZEND_HASH_FOREACH_END		4043757	0					
ANR	4044717	Identifier	ZEND_HASH_FOREACH_END		4043757	0					
ANR	4044718	ArgumentList			4043757	1					
ANR	4044719	IfStatement	if ( zend_hash_num_elements ( & parent_ce -> function_table ) )		4043757	22					
ANR	4044720	Condition	zend_hash_num_elements ( & parent_ce -> function_table )	871:5:30813:30862	4043757	0	True				
ANR	4044721	CallExpression	zend_hash_num_elements ( & parent_ce -> function_table )		4043757	0					
ANR	4044722	Callee	zend_hash_num_elements		4043757	0					
ANR	4044723	Identifier	zend_hash_num_elements		4043757	0					
ANR	4044724	ArgumentList	& parent_ce -> function_table		4043757	1					
ANR	4044725	Argument	& parent_ce -> function_table		4043757	0					
ANR	4044726	UnaryOperationExpression	& parent_ce -> function_table		4043757	0					
ANR	4044727	UnaryOperator	&		4043757	0					
ANR	4044728	PtrMemberAccess	parent_ce -> function_table		4043757	1					
ANR	4044729	Identifier	parent_ce		4043757	0					
ANR	4044730	Identifier	function_table		4043757	1					
ANR	4044731	CompoundStatement		151:57:5390:5390	4043757	1					
ANR	4044732	ExpressionStatement	"zend_hash_extend ( & ce -> function_table , zend_hash_num_elements ( & ce -> function_table ) + zend_hash_num_elements ( & parent_ce -> function_table ) , 0 )"	872:2:30869:31013	4043757	0	True				
ANR	4044733	CallExpression	"zend_hash_extend ( & ce -> function_table , zend_hash_num_elements ( & ce -> function_table ) + zend_hash_num_elements ( & parent_ce -> function_table ) , 0 )"		4043757	0					
ANR	4044734	Callee	zend_hash_extend		4043757	0					
ANR	4044735	Identifier	zend_hash_extend		4043757	0					
ANR	4044736	ArgumentList	& ce -> function_table		4043757	1					
ANR	4044737	Argument	& ce -> function_table		4043757	0					
ANR	4044738	UnaryOperationExpression	& ce -> function_table		4043757	0					
ANR	4044739	UnaryOperator	&		4043757	0					
ANR	4044740	PtrMemberAccess	ce -> function_table		4043757	1					
ANR	4044741	Identifier	ce		4043757	0					
ANR	4044742	Identifier	function_table		4043757	1					
ANR	4044743	Argument	zend_hash_num_elements ( & ce -> function_table ) + zend_hash_num_elements ( & parent_ce -> function_table )		4043757	1					
ANR	4044744	AdditiveExpression	zend_hash_num_elements ( & ce -> function_table ) + zend_hash_num_elements ( & parent_ce -> function_table )		4043757	0		+			
ANR	4044745	CallExpression	zend_hash_num_elements ( & ce -> function_table )		4043757	0					
ANR	4044746	Callee	zend_hash_num_elements		4043757	0					
ANR	4044747	Identifier	zend_hash_num_elements		4043757	0					
ANR	4044748	ArgumentList	& ce -> function_table		4043757	1					
ANR	4044749	Argument	& ce -> function_table		4043757	0					
ANR	4044750	UnaryOperationExpression	& ce -> function_table		4043757	0					
ANR	4044751	UnaryOperator	&		4043757	0					
ANR	4044752	PtrMemberAccess	ce -> function_table		4043757	1					
ANR	4044753	Identifier	ce		4043757	0					
ANR	4044754	Identifier	function_table		4043757	1					
ANR	4044755	CallExpression	zend_hash_num_elements ( & parent_ce -> function_table )		4043757	1					
ANR	4044756	Callee	zend_hash_num_elements		4043757	0					
ANR	4044757	Identifier	zend_hash_num_elements		4043757	0					
ANR	4044758	ArgumentList	& parent_ce -> function_table		4043757	1					
ANR	4044759	Argument	& parent_ce -> function_table		4043757	0					
ANR	4044760	UnaryOperationExpression	& parent_ce -> function_table		4043757	0					
ANR	4044761	UnaryOperator	&		4043757	0					
ANR	4044762	PtrMemberAccess	parent_ce -> function_table		4043757	1					
ANR	4044763	Identifier	parent_ce		4043757	0					
ANR	4044764	Identifier	function_table		4043757	1					
ANR	4044765	Argument	0		4043757	2					
ANR	4044766	PrimaryExpression	0		4043757	0					
ANR	4044767	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	876:2:31018:31046	4043757	1	True				
ANR	4044768	Statement	(	876:31:31047:31047	4043757	2	True				
ANR	4044769	Statement	&	876:32:31048:31048	4043757	3	True				
ANR	4044770	Statement	parent_ce	876:33:31049:31057	4043757	4	True				
ANR	4044771	Statement	->	876:42:31058:31059	4043757	5	True				
ANR	4044772	Statement	function_table	876:44:31060:31073	4043757	6	True				
ANR	4044773	Statement	","	876:58:31074:31074	4043757	7	True				
ANR	4044774	Statement	key	876:60:31076:31078	4043757	8	True				
ANR	4044775	Statement	","	876:63:31079:31079	4043757	9	True				
ANR	4044776	Statement	func	876:65:31081:31084	4043757	10	True				
ANR	4044777	Statement	)	876:69:31085:31085	4043757	11	True				
ANR	4044778	CompoundStatement		157:3:5617:5675	4043757	12					
ANR	4044779	IdentifierDeclStatement	"zend_function * new_func = do_inherit_method ( key , func , ce ) ;"	877:3:31092:31150	4043757	0	True				
ANR	4044780	IdentifierDecl	"* new_func = do_inherit_method ( key , func , ce )"		4043757	0					
ANR	4044781	IdentifierDeclType	zend_function *		4043757	0					
ANR	4044782	Identifier	new_func		4043757	1					
ANR	4044783	AssignmentExpression	"* new_func = do_inherit_method ( key , func , ce )"		4043757	2		=			
ANR	4044784	Identifier	new_func		4043757	0					
ANR	4044785	CallExpression	"do_inherit_method ( key , func , ce )"		4043757	1					
ANR	4044786	Callee	do_inherit_method		4043757	0					
ANR	4044787	Identifier	do_inherit_method		4043757	0					
ANR	4044788	ArgumentList	key		4043757	1					
ANR	4044789	Argument	key		4043757	0					
ANR	4044790	Identifier	key		4043757	0					
ANR	4044791	Argument	func		4043757	1					
ANR	4044792	Identifier	func		4043757	0					
ANR	4044793	Argument	ce		4043757	2					
ANR	4044794	Identifier	ce		4043757	0					
ANR	4044795	IfStatement	if ( new_func )		4043757	1					
ANR	4044796	Condition	new_func	879:7:31160:31167	4043757	0	True				
ANR	4044797	Identifier	new_func		4043757	0					
ANR	4044798	CompoundStatement		159:17:5695:5695	4043757	1					
ANR	4044799	ExpressionStatement	"_zend_hash_append_ptr ( & ce -> function_table , key , new_func )"	880:4:31176:31233	4043757	0	True				
ANR	4044800	CallExpression	"_zend_hash_append_ptr ( & ce -> function_table , key , new_func )"		4043757	0					
ANR	4044801	Callee	_zend_hash_append_ptr		4043757	0					
ANR	4044802	Identifier	_zend_hash_append_ptr		4043757	0					
ANR	4044803	ArgumentList	& ce -> function_table		4043757	1					
ANR	4044804	Argument	& ce -> function_table		4043757	0					
ANR	4044805	UnaryOperationExpression	& ce -> function_table		4043757	0					
ANR	4044806	UnaryOperator	&		4043757	0					
ANR	4044807	PtrMemberAccess	ce -> function_table		4043757	1					
ANR	4044808	Identifier	ce		4043757	0					
ANR	4044809	Identifier	function_table		4043757	1					
ANR	4044810	Argument	key		4043757	1					
ANR	4044811	Identifier	key		4043757	0					
ANR	4044812	Argument	new_func		4043757	2					
ANR	4044813	Identifier	new_func		4043757	0					
ANR	4044814	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	882:4:31244:31267	4043757	13	True				
ANR	4044815	CallExpression	ZEND_HASH_FOREACH_END ( )		4043757	0					
ANR	4044816	Callee	ZEND_HASH_FOREACH_END		4043757	0					
ANR	4044817	Identifier	ZEND_HASH_FOREACH_END		4043757	0					
ANR	4044818	ArgumentList			4043757	1					
ANR	4044819	ExpressionStatement	do_inherit_parent_constructor ( ce )	885:1:31274:31307	4043757	23	True				
ANR	4044820	CallExpression	do_inherit_parent_constructor ( ce )		4043757	0					
ANR	4044821	Callee	do_inherit_parent_constructor		4043757	0					
ANR	4044822	Identifier	do_inherit_parent_constructor		4043757	0					
ANR	4044823	ArgumentList	ce		4043757	1					
ANR	4044824	Argument	ce		4043757	0					
ANR	4044825	Identifier	ce		4043757	0					
ANR	4044826	IfStatement	if ( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS && ce -> type == ZEND_INTERNAL_CLASS )		4043757	24					
ANR	4044827	Condition	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS && ce -> type == ZEND_INTERNAL_CLASS	887:5:31315:31396	4043757	0	True				
ANR	4044828	AndExpression	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS && ce -> type == ZEND_INTERNAL_CLASS		4043757	0		&&			
ANR	4044829	BitAndExpression	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4043757	0		&			
ANR	4044830	PtrMemberAccess	ce -> ce_flags		4043757	0					
ANR	4044831	Identifier	ce		4043757	0					
ANR	4044832	Identifier	ce_flags		4043757	1					
ANR	4044833	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4043757	1					
ANR	4044834	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4043757	1		==			
ANR	4044835	PtrMemberAccess	ce -> type		4043757	0					
ANR	4044836	Identifier	ce		4043757	0					
ANR	4044837	Identifier	type		4043757	1					
ANR	4044838	Identifier	ZEND_INTERNAL_CLASS		4043757	1					
ANR	4044839	CompoundStatement		167:89:5924:5924	4043757	1					
ANR	4044840	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS	888:2:31403:31451	4043757	0	True				
ANR	4044841	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		4043757	0		|=			
ANR	4044842	PtrMemberAccess	ce -> ce_flags		4043757	0					
ANR	4044843	Identifier	ce		4043757	0					
ANR	4044844	Identifier	ce_flags		4043757	1					
ANR	4044845	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		4043757	1					
ANR	4044846	ElseStatement	else		4043757	0					
ANR	4044847	IfStatement	if ( ! ( ce -> ce_flags & ( ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS ) ) )		4043757	0					
ANR	4044848	Condition	! ( ce -> ce_flags & ( ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS ) )	889:12:31465:31539	4043757	0	True				
ANR	4044849	UnaryOperationExpression	! ( ce -> ce_flags & ( ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS ) )		4043757	0					
ANR	4044850	UnaryOperator	!		4043757	0					
ANR	4044851	BitAndExpression	ce -> ce_flags & ( ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS )		4043757	1		&			
ANR	4044852	PtrMemberAccess	ce -> ce_flags		4043757	0					
ANR	4044853	Identifier	ce		4043757	0					
ANR	4044854	Identifier	ce_flags		4043757	1					
ANR	4044855	InclusiveOrExpression	ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS		4043757	1		|			
ANR	4044856	Identifier	ZEND_ACC_IMPLEMENT_INTERFACES		4043757	0					
ANR	4044857	Identifier	ZEND_ACC_IMPLEMENT_TRAITS		4043757	1					
ANR	4044858	CompoundStatement		169:89:6067:6067	4043757	1					
ANR	4044859	ExpressionStatement	zend_verify_abstract_class ( ce )	891:2:31625:31655	4043757	0	True				
ANR	4044860	CallExpression	zend_verify_abstract_class ( ce )		4043757	0					
ANR	4044861	Callee	zend_verify_abstract_class		4043757	0					
ANR	4044862	Identifier	zend_verify_abstract_class		4043757	0					
ANR	4044863	ArgumentList	ce		4043757	1					
ANR	4044864	Argument	ce		4043757	0					
ANR	4044865	Identifier	ce		4043757	0					
ANR	4044866	ExpressionStatement	ce -> ce_flags |= parent_ce -> ce_flags & ( ZEND_HAS_STATIC_IN_METHODS | ZEND_ACC_USE_GUARDS )	893:1:31661:31749	4043757	25	True				
ANR	4044867	AssignmentExpression	ce -> ce_flags |= parent_ce -> ce_flags & ( ZEND_HAS_STATIC_IN_METHODS | ZEND_ACC_USE_GUARDS )		4043757	0		|=			
ANR	4044868	PtrMemberAccess	ce -> ce_flags		4043757	0					
ANR	4044869	Identifier	ce		4043757	0					
ANR	4044870	Identifier	ce_flags		4043757	1					
ANR	4044871	BitAndExpression	parent_ce -> ce_flags & ( ZEND_HAS_STATIC_IN_METHODS | ZEND_ACC_USE_GUARDS )		4043757	1		&			
ANR	4044872	PtrMemberAccess	parent_ce -> ce_flags		4043757	0					
ANR	4044873	Identifier	parent_ce		4043757	0					
ANR	4044874	Identifier	ce_flags		4043757	1					
ANR	4044875	InclusiveOrExpression	ZEND_HAS_STATIC_IN_METHODS | ZEND_ACC_USE_GUARDS		4043757	1		|			
ANR	4044876	Identifier	ZEND_HAS_STATIC_IN_METHODS		4043757	0					
ANR	4044877	Identifier	ZEND_ACC_USE_GUARDS		4043757	1					
ANR	4044878	ReturnType	ZEND_API void		4043757	1					
ANR	4044879	Identifier	zend_do_inheritance		4043757	2					
ANR	4044880	ParameterList	"zend_class_entry * ce , zend_class_entry * parent_ce"		4043757	3					
ANR	4044881	Parameter	zend_class_entry * ce	720:34:25413:25432	4043757	0	True				
ANR	4044882	ParameterType	zend_class_entry *		4043757	0					
ANR	4044883	Identifier	ce		4043757	1					
ANR	4044884	Parameter	zend_class_entry * parent_ce	720:56:25435:25461	4043757	1	True				
ANR	4044885	ParameterType	zend_class_entry *		4043757	0					
ANR	4044886	Identifier	parent_ce		4043757	1					
ANR	4044887	CFGEntryNode	ENTRY		4043757		True				
ANR	4044888	CFGExitNode	EXIT		4043757		True				
ANR	4044889	Symbol	parent_ce -> type		4043757						
ANR	4044890	Symbol	ce -> default_properties_count		4043757						
ANR	4044891	Symbol	& parent_ce -> constants_table		4043757						
ANR	4044892	Symbol	Z_CONSTANT_P		4043757						
ANR	4044893	Symbol	E_COMPILE_ERROR		4043757						
ANR	4044894	Symbol	ZEND_ACC_USE_GUARDS		4043757						
ANR	4044895	Symbol	* ce		4043757						
ANR	4044896	Symbol	ce -> static_members_table		4043757						
ANR	4044897	Symbol	new_func		4043757						
ANR	4044898	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4043757						
ANR	4044899	Symbol	* property_info		4043757						
ANR	4044900	Symbol	ZEND_USER_CLASS		4043757						
ANR	4044901	Symbol	ZEND_ACC_INTERFACE		4043757						
ANR	4044902	Symbol	ce -> name		4043757						
ANR	4044903	Symbol	ZEND_INTERNAL_CLASS		4043757						
ANR	4044904	Symbol	ce -> parent		4043757						
ANR	4044905	Symbol	ce -> default_properties_table		4043757						
ANR	4044906	Symbol	ZEND_HAS_STATIC_IN_METHODS		4043757						
ANR	4044907	Symbol	parent_ce -> name		4043757						
ANR	4044908	Symbol	ce -> default_static_members_table		4043757						
ANR	4044909	Symbol	property_info -> ce		4043757						
ANR	4044910	Symbol	ZEND_ACC_TRAIT		4043757						
ANR	4044911	Symbol	ce -> ce_flags		4043757						
ANR	4044912	Symbol	ZEND_ACC_IMPLEMENT_INTERFACES		4043757						
ANR	4044913	Symbol	& ce -> properties_info		4043757						
ANR	4044914	Symbol	parent_ce -> default_properties_count		4043757						
ANR	4044915	Symbol	* parent_ce		4043757						
ANR	4044916	Symbol	zv		4043757						
ANR	4044917	Symbol	Z_ISREF_P		4043757						
ANR	4044918	Symbol	~ZEND_ACC_CONSTANTS_UPDATED		4043757						
ANR	4044919	Symbol	ce -> type		4043757						
ANR	4044920	Symbol	Z_OPT_CONSTANT_P		4043757						
ANR	4044921	Symbol	property_info -> offset		4043757						
ANR	4044922	Symbol	dst		4043757						
ANR	4044923	Symbol	ce -> default_static_members_count		4043757						
ANR	4044924	Symbol	ZEND_ACC_IMPLEMENT_TRAITS		4043757						
ANR	4044925	Symbol	parent_ce -> ce_flags		4043757						
ANR	4044926	Symbol	& ce -> function_table		4043757						
ANR	4044927	Symbol	ZEND_ACC_FINAL		4043757						
ANR	4044928	Symbol	UNEXPECTED		4043757						
ANR	4044929	Symbol	parent_ce -> default_static_members_count		4043757						
ANR	4044930	Symbol	ZEND_ACC_STATIC		4043757						
ANR	4044931	Symbol	end		4043757						
ANR	4044932	Symbol	key		4043757						
ANR	4044933	Symbol	table		4043757						
ANR	4044934	Symbol	property_info -> flags		4043757						
ANR	4044935	Symbol	parent_ce -> default_properties_table		4043757						
ANR	4044936	Symbol	property_info		4043757						
ANR	4044937	Symbol	ce		4043757						
ANR	4044938	Symbol	src		4043757						
ANR	4044939	Symbol	zend_hash_num_elements		4043757						
ANR	4044940	Symbol	& parent_ce -> properties_info		4043757						
ANR	4044941	Symbol	& parent_ce -> function_table		4043757						
ANR	4044942	Symbol	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		4043757						
ANR	4044943	Symbol	do_inherit_method		4043757						
ANR	4044944	Symbol	ZSTR_VAL		4043757						
ANR	4044945	Symbol	parent_ce		4043757						
ANR	4044946	Symbol	& ce -> constants_table		4043757						
ANR	4044947	Symbol	func		4043757						
ANR	4044948	Symbol	parent_ce -> default_static_members_table		4043757						
ANR	4044949	Symbol	Z_REFVAL_P		4043757						
ANR	4044950	Symbol	pemalloc		4043757						
ANR	4044951	Function	do_inherit_constant_check	897:0:31764:32352							
ANR	4044952	FunctionDef	"do_inherit_constant_check (HashTable * child_constants_table , zval * parent_constant , zend_string * name , const zend_class_entry * iface)"		4044951	0					
ANR	4044953	CompoundStatement		898:0:31924:32352	4044951	0					
ANR	4044954	IdentifierDeclStatement	zval * old_constant ;	899:1:31927:31945	4044951	0	True				
ANR	4044955	IdentifierDecl	* old_constant		4044951	0					
ANR	4044956	IdentifierDeclType	zval *		4044951	0					
ANR	4044957	Identifier	old_constant		4044951	1					
ANR	4044958	IfStatement	"if ( ( old_constant = zend_hash_find ( child_constants_table , name ) ) != NULL )"		4044951	1					
ANR	4044959	Condition	"( old_constant = zend_hash_find ( child_constants_table , name ) ) != NULL"	901:5:31953:32020	4044951	0	True				
ANR	4044960	EqualityExpression	"( old_constant = zend_hash_find ( child_constants_table , name ) ) != NULL"		4044951	0		!=			
ANR	4044961	AssignmentExpression	"old_constant = zend_hash_find ( child_constants_table , name )"		4044951	0		=			
ANR	4044962	Identifier	old_constant		4044951	0					
ANR	4044963	CallExpression	"zend_hash_find ( child_constants_table , name )"		4044951	1					
ANR	4044964	Callee	zend_hash_find		4044951	0					
ANR	4044965	Identifier	zend_hash_find		4044951	0					
ANR	4044966	ArgumentList	child_constants_table		4044951	1					
ANR	4044967	Argument	child_constants_table		4044951	0					
ANR	4044968	Identifier	child_constants_table		4044951	0					
ANR	4044969	Argument	name		4044951	1					
ANR	4044970	Identifier	name		4044951	0					
ANR	4044971	Identifier	NULL		4044951	1					
ANR	4044972	CompoundStatement		4:75:98:98	4044951	1					
ANR	4044973	IfStatement	if ( ! Z_ISREF_P ( old_constant ) || ! Z_ISREF_P ( parent_constant ) || Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant ) )		4044951	0					
ANR	4044974	Condition	! Z_ISREF_P ( old_constant ) || ! Z_ISREF_P ( parent_constant ) || Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant )	902:6:32031:32156	4044951	0	True				
ANR	4044975	OrExpression	! Z_ISREF_P ( old_constant ) || ! Z_ISREF_P ( parent_constant ) || Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant )		4044951	0		||			
ANR	4044976	UnaryOperationExpression	! Z_ISREF_P ( old_constant )		4044951	0					
ANR	4044977	UnaryOperator	!		4044951	0					
ANR	4044978	CallExpression	Z_ISREF_P ( old_constant )		4044951	1					
ANR	4044979	Callee	Z_ISREF_P		4044951	0					
ANR	4044980	Identifier	Z_ISREF_P		4044951	0					
ANR	4044981	ArgumentList	old_constant		4044951	1					
ANR	4044982	Argument	old_constant		4044951	0					
ANR	4044983	Identifier	old_constant		4044951	0					
ANR	4044984	OrExpression	! Z_ISREF_P ( parent_constant ) || Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant )		4044951	1		||			
ANR	4044985	UnaryOperationExpression	! Z_ISREF_P ( parent_constant )		4044951	0					
ANR	4044986	UnaryOperator	!		4044951	0					
ANR	4044987	CallExpression	Z_ISREF_P ( parent_constant )		4044951	1					
ANR	4044988	Callee	Z_ISREF_P		4044951	0					
ANR	4044989	Identifier	Z_ISREF_P		4044951	0					
ANR	4044990	ArgumentList	parent_constant		4044951	1					
ANR	4044991	Argument	parent_constant		4044951	0					
ANR	4044992	Identifier	parent_constant		4044951	0					
ANR	4044993	EqualityExpression	Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant )		4044951	1		!=			
ANR	4044994	CallExpression	Z_REFVAL_P ( old_constant )		4044951	0					
ANR	4044995	Callee	Z_REFVAL_P		4044951	0					
ANR	4044996	Identifier	Z_REFVAL_P		4044951	0					
ANR	4044997	ArgumentList	old_constant		4044951	1					
ANR	4044998	Argument	old_constant		4044951	0					
ANR	4044999	Identifier	old_constant		4044951	0					
ANR	4045000	CallExpression	Z_REFVAL_P ( parent_constant )		4044951	1					
ANR	4045001	Callee	Z_REFVAL_P		4044951	0					
ANR	4045002	Identifier	Z_REFVAL_P		4044951	0					
ANR	4045003	ArgumentList	parent_constant		4044951	1					
ANR	4045004	Argument	parent_constant		4044951	0					
ANR	4045005	Identifier	parent_constant		4044951	0					
ANR	4045006	CompoundStatement		7:63:234:234	4044951	1					
ANR	4045007	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot inherit previously-inherited or override constant %s from interface %s"" , ZSTR_VAL ( name ) , ZSTR_VAL ( iface -> name ) )"	905:3:32164:32320	4044951	0	True				
ANR	4045008	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot inherit previously-inherited or override constant %s from interface %s"" , ZSTR_VAL ( name ) , ZSTR_VAL ( iface -> name ) )"		4044951	0					
ANR	4045009	Callee	zend_error_noreturn		4044951	0					
ANR	4045010	Identifier	zend_error_noreturn		4044951	0					
ANR	4045011	ArgumentList	E_COMPILE_ERROR		4044951	1					
ANR	4045012	Argument	E_COMPILE_ERROR		4044951	0					
ANR	4045013	Identifier	E_COMPILE_ERROR		4044951	0					
ANR	4045014	Argument	"""Cannot inherit previously-inherited or override constant %s from interface %s"""		4044951	1					
ANR	4045015	PrimaryExpression	"""Cannot inherit previously-inherited or override constant %s from interface %s"""		4044951	0					
ANR	4045016	Argument	ZSTR_VAL ( name )		4044951	2					
ANR	4045017	CallExpression	ZSTR_VAL ( name )		4044951	0					
ANR	4045018	Callee	ZSTR_VAL		4044951	0					
ANR	4045019	Identifier	ZSTR_VAL		4044951	0					
ANR	4045020	ArgumentList	name		4044951	1					
ANR	4045021	Argument	name		4044951	0					
ANR	4045022	Identifier	name		4044951	0					
ANR	4045023	Argument	ZSTR_VAL ( iface -> name )		4044951	3					
ANR	4045024	CallExpression	ZSTR_VAL ( iface -> name )		4044951	0					
ANR	4045025	Callee	ZSTR_VAL		4044951	0					
ANR	4045026	Identifier	ZSTR_VAL		4044951	0					
ANR	4045027	ArgumentList	iface -> name		4044951	1					
ANR	4045028	Argument	iface -> name		4044951	0					
ANR	4045029	PtrMemberAccess	iface -> name		4044951	0					
ANR	4045030	Identifier	iface		4044951	0					
ANR	4045031	Identifier	name		4044951	1					
ANR	4045032	ReturnStatement	return 0 ;	907:2:32328:32336	4044951	1	True				
ANR	4045033	PrimaryExpression	0		4044951	0					
ANR	4045034	ReturnStatement	return 1 ;	909:1:32342:32350	4044951	2	True				
ANR	4045035	PrimaryExpression	1		4044951	0					
ANR	4045036	ReturnType	static zend_bool		4044951	1					
ANR	4045037	Identifier	do_inherit_constant_check		4044951	2					
ANR	4045038	ParameterList	"HashTable * child_constants_table , zval * parent_constant , zend_string * name , const zend_class_entry * iface"		4044951	3					
ANR	4045039	Parameter	HashTable * child_constants_table	897:43:31807:31838	4044951	0	True				
ANR	4045040	ParameterType	HashTable *		4044951	0					
ANR	4045041	Identifier	child_constants_table		4044951	1					
ANR	4045042	Parameter	zval * parent_constant	897:77:31841:31861	4044951	1	True				
ANR	4045043	ParameterType	zval *		4044951	0					
ANR	4045044	Identifier	parent_constant		4044951	1					
ANR	4045045	Parameter	zend_string * name	897:100:31864:31880	4044951	2	True				
ANR	4045046	ParameterType	zend_string *		4044951	0					
ANR	4045047	Identifier	name		4044951	1					
ANR	4045048	Parameter	const zend_class_entry * iface	897:119:31883:31911	4044951	3	True				
ANR	4045049	ParameterType	const zend_class_entry *		4044951	0					
ANR	4045050	Identifier	iface		4044951	1					
ANR	4045051	CFGEntryNode	ENTRY		4044951		True				
ANR	4045052	CFGExitNode	EXIT		4044951		True				
ANR	4045053	Symbol	old_constant		4044951						
ANR	4045054	Symbol	NULL		4044951						
ANR	4045055	Symbol	E_COMPILE_ERROR		4044951						
ANR	4045056	Symbol	* iface		4044951						
ANR	4045057	Symbol	parent_constant		4044951						
ANR	4045058	Symbol	ZSTR_VAL		4044951						
ANR	4045059	Symbol	iface		4044951						
ANR	4045060	Symbol	zend_hash_find		4044951						
ANR	4045061	Symbol	iface -> name		4044951						
ANR	4045062	Symbol	child_constants_table		4044951						
ANR	4045063	Symbol	Z_REFVAL_P		4044951						
ANR	4045064	Symbol	name		4044951						
ANR	4045065	Symbol	Z_ISREF_P		4044951						
ANR	4045066	Function	do_inherit_iface_constant	913:0:32365:32880							
ANR	4045067	FunctionDef	"do_inherit_iface_constant (zend_string * name , zval * zv , zend_class_entry * ce , zend_class_entry * iface)"		4045066	0					
ANR	4045068	CompoundStatement		914:0:32489:32880	4045066	0					
ANR	4045069	IfStatement	"if ( do_inherit_constant_check ( & ce -> constants_table , zv , name , iface ) )"		4045066	0					
ANR	4045070	Condition	"do_inherit_constant_check ( & ce -> constants_table , zv , name , iface )"	915:5:32496:32559	4045066	0	True				
ANR	4045071	CallExpression	"do_inherit_constant_check ( & ce -> constants_table , zv , name , iface )"		4045066	0					
ANR	4045072	Callee	do_inherit_constant_check		4045066	0					
ANR	4045073	Identifier	do_inherit_constant_check		4045066	0					
ANR	4045074	ArgumentList	& ce -> constants_table		4045066	1					
ANR	4045075	Argument	& ce -> constants_table		4045066	0					
ANR	4045076	UnaryOperationExpression	& ce -> constants_table		4045066	0					
ANR	4045077	UnaryOperator	&		4045066	0					
ANR	4045078	PtrMemberAccess	ce -> constants_table		4045066	1					
ANR	4045079	Identifier	ce		4045066	0					
ANR	4045080	Identifier	constants_table		4045066	1					
ANR	4045081	Argument	zv		4045066	1					
ANR	4045082	Identifier	zv		4045066	0					
ANR	4045083	Argument	name		4045066	2					
ANR	4045084	Identifier	name		4045066	0					
ANR	4045085	Argument	iface		4045066	3					
ANR	4045086	Identifier	iface		4045066	0					
ANR	4045087	CompoundStatement		2:71:72:72	4045066	1					
ANR	4045088	IfStatement	if ( ! Z_ISREF_P ( zv ) )		4045066	0					
ANR	4045089	Condition	! Z_ISREF_P ( zv )	916:6:32570:32583	4045066	0	True				
ANR	4045090	UnaryOperationExpression	! Z_ISREF_P ( zv )		4045066	0					
ANR	4045091	UnaryOperator	!		4045066	0					
ANR	4045092	CallExpression	Z_ISREF_P ( zv )		4045066	1					
ANR	4045093	Callee	Z_ISREF_P		4045066	0					
ANR	4045094	Identifier	Z_ISREF_P		4045066	0					
ANR	4045095	ArgumentList	zv		4045066	1					
ANR	4045096	Argument	zv		4045066	0					
ANR	4045097	Identifier	zv		4045066	0					
ANR	4045098	CompoundStatement		3:22:96:96	4045066	1					
ANR	4045099	IfStatement	if ( iface -> type == ZEND_INTERNAL_CLASS )		4045066	0					
ANR	4045100	Condition	iface -> type == ZEND_INTERNAL_CLASS	917:7:32595:32628	4045066	0	True				
ANR	4045101	EqualityExpression	iface -> type == ZEND_INTERNAL_CLASS		4045066	0		==			
ANR	4045102	PtrMemberAccess	iface -> type		4045066	0					
ANR	4045103	Identifier	iface		4045066	0					
ANR	4045104	Identifier	type		4045066	1					
ANR	4045105	Identifier	ZEND_INTERNAL_CLASS		4045066	1					
ANR	4045106	CompoundStatement		4:43:141:141	4045066	1					
ANR	4045107	ExpressionStatement	"ZVAL_NEW_PERSISTENT_REF ( zv , zv )"	918:4:32637:32668	4045066	0	True				
ANR	4045108	CallExpression	"ZVAL_NEW_PERSISTENT_REF ( zv , zv )"		4045066	0					
ANR	4045109	Callee	ZVAL_NEW_PERSISTENT_REF		4045066	0					
ANR	4045110	Identifier	ZVAL_NEW_PERSISTENT_REF		4045066	0					
ANR	4045111	ArgumentList	zv		4045066	1					
ANR	4045112	Argument	zv		4045066	0					
ANR	4045113	Identifier	zv		4045066	0					
ANR	4045114	Argument	zv		4045066	1					
ANR	4045115	Identifier	zv		4045066	0					
ANR	4045116	ElseStatement	else		4045066	0					
ANR	4045117	CompoundStatement		6:10:190:190	4045066	0					
ANR	4045118	ExpressionStatement	"ZVAL_NEW_REF ( zv , zv )"	920:4:32686:32706	4045066	0	True				
ANR	4045119	CallExpression	"ZVAL_NEW_REF ( zv , zv )"		4045066	0					
ANR	4045120	Callee	ZVAL_NEW_REF		4045066	0					
ANR	4045121	Identifier	ZVAL_NEW_REF		4045066	0					
ANR	4045122	ArgumentList	zv		4045066	1					
ANR	4045123	Argument	zv		4045066	0					
ANR	4045124	Identifier	zv		4045066	0					
ANR	4045125	Argument	zv		4045066	1					
ANR	4045126	Identifier	zv		4045066	0					
ANR	4045127	ExpressionStatement	Z_ADDREF_P ( zv )	923:2:32719:32733	4045066	1	True				
ANR	4045128	CallExpression	Z_ADDREF_P ( zv )		4045066	0					
ANR	4045129	Callee	Z_ADDREF_P		4045066	0					
ANR	4045130	Identifier	Z_ADDREF_P		4045066	0					
ANR	4045131	ArgumentList	zv		4045066	1					
ANR	4045132	Argument	zv		4045066	0					
ANR	4045133	Identifier	zv		4045066	0					
ANR	4045134	IfStatement	if ( Z_CONSTANT_P ( Z_REFVAL_P ( zv ) ) )		4045066	2					
ANR	4045135	Condition	Z_CONSTANT_P ( Z_REFVAL_P ( zv ) )	924:6:32741:32768	4045066	0	True				
ANR	4045136	CallExpression	Z_CONSTANT_P ( Z_REFVAL_P ( zv ) )		4045066	0					
ANR	4045137	Callee	Z_CONSTANT_P		4045066	0					
ANR	4045138	Identifier	Z_CONSTANT_P		4045066	0					
ANR	4045139	ArgumentList	Z_REFVAL_P ( zv )		4045066	1					
ANR	4045140	Argument	Z_REFVAL_P ( zv )		4045066	0					
ANR	4045141	CallExpression	Z_REFVAL_P ( zv )		4045066	0					
ANR	4045142	Callee	Z_REFVAL_P		4045066	0					
ANR	4045143	Identifier	Z_REFVAL_P		4045066	0					
ANR	4045144	ArgumentList	zv		4045066	1					
ANR	4045145	Argument	zv		4045066	0					
ANR	4045146	Identifier	zv		4045066	0					
ANR	4045147	CompoundStatement		11:36:281:281	4045066	1					
ANR	4045148	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	925:3:32776:32819	4045066	0	True				
ANR	4045149	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		4045066	0		&=			
ANR	4045150	PtrMemberAccess	ce -> ce_flags		4045066	0					
ANR	4045151	Identifier	ce		4045066	0					
ANR	4045152	Identifier	ce_flags		4045066	1					
ANR	4045153	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		4045066	1					
ANR	4045154	ExpressionStatement	"zend_hash_update ( & ce -> constants_table , name , zv )"	927:2:32827:32875	4045066	3	True				
ANR	4045155	CallExpression	"zend_hash_update ( & ce -> constants_table , name , zv )"		4045066	0					
ANR	4045156	Callee	zend_hash_update		4045066	0					
ANR	4045157	Identifier	zend_hash_update		4045066	0					
ANR	4045158	ArgumentList	& ce -> constants_table		4045066	1					
ANR	4045159	Argument	& ce -> constants_table		4045066	0					
ANR	4045160	UnaryOperationExpression	& ce -> constants_table		4045066	0					
ANR	4045161	UnaryOperator	&		4045066	0					
ANR	4045162	PtrMemberAccess	ce -> constants_table		4045066	1					
ANR	4045163	Identifier	ce		4045066	0					
ANR	4045164	Identifier	constants_table		4045066	1					
ANR	4045165	Argument	name		4045066	1					
ANR	4045166	Identifier	name		4045066	0					
ANR	4045167	Argument	zv		4045066	2					
ANR	4045168	Identifier	zv		4045066	0					
ANR	4045169	ReturnType	static void		4045066	1					
ANR	4045170	Identifier	do_inherit_iface_constant		4045066	2					
ANR	4045171	ParameterList	"zend_string * name , zval * zv , zend_class_entry * ce , zend_class_entry * iface"		4045066	3					
ANR	4045172	Parameter	zend_string * name	913:38:32403:32419	4045066	0	True				
ANR	4045173	ParameterType	zend_string *		4045066	0					
ANR	4045174	Identifier	name		4045066	1					
ANR	4045175	Parameter	zval * zv	913:57:32422:32429	4045066	1	True				
ANR	4045176	ParameterType	zval *		4045066	0					
ANR	4045177	Identifier	zv		4045066	1					
ANR	4045178	Parameter	zend_class_entry * ce	913:67:32432:32451	4045066	2	True				
ANR	4045179	ParameterType	zend_class_entry *		4045066	0					
ANR	4045180	Identifier	ce		4045066	1					
ANR	4045181	Parameter	zend_class_entry * iface	913:89:32454:32476	4045066	3	True				
ANR	4045182	ParameterType	zend_class_entry *		4045066	0					
ANR	4045183	Identifier	iface		4045066	1					
ANR	4045184	CFGEntryNode	ENTRY		4045066		True				
ANR	4045185	CFGExitNode	EXIT		4045066		True				
ANR	4045186	Symbol	ZEND_INTERNAL_CLASS		4045066						
ANR	4045187	Symbol	ce		4045066						
ANR	4045188	Symbol	Z_CONSTANT_P		4045066						
ANR	4045189	Symbol	* iface		4045066						
ANR	4045190	Symbol	* ce		4045066						
ANR	4045191	Symbol	do_inherit_constant_check		4045066						
ANR	4045192	Symbol	ce -> ce_flags		4045066						
ANR	4045193	Symbol	iface		4045066						
ANR	4045194	Symbol	& ce -> constants_table		4045066						
ANR	4045195	Symbol	Z_REFVAL_P		4045066						
ANR	4045196	Symbol	name		4045066						
ANR	4045197	Symbol	iface -> type		4045066						
ANR	4045198	Symbol	zv		4045066						
ANR	4045199	Symbol	Z_ISREF_P		4045066						
ANR	4045200	Symbol	~ZEND_ACC_CONSTANTS_UPDATED		4045066						
ANR	4045201	Function	zend_do_implement_interface	932:0:32893:34800							
ANR	4045202	FunctionDef	"zend_do_implement_interface (zend_class_entry * ce , zend_class_entry * iface)"		4045201	0					
ANR	4045203	CompoundStatement		933:0:32992:34800	4045201	0					
ANR	4045204	IdentifierDeclStatement	"uint32_t i , ignore = 0 ;"	934:1:32995:33017	4045201	0	True				
ANR	4045205	IdentifierDecl	i		4045201	0					
ANR	4045206	IdentifierDeclType	uint32_t		4045201	0					
ANR	4045207	Identifier	i		4045201	1					
ANR	4045208	IdentifierDecl	ignore = 0		4045201	1					
ANR	4045209	IdentifierDeclType	uint32_t		4045201	0					
ANR	4045210	Identifier	ignore		4045201	1					
ANR	4045211	AssignmentExpression	ignore = 0		4045201	2		=			
ANR	4045212	Identifier	ignore		4045201	0					
ANR	4045213	PrimaryExpression	0		4045201	1					
ANR	4045214	IdentifierDeclStatement	uint32_t current_iface_num = ce -> num_interfaces ;	935:1:33020:33067	4045201	1	True				
ANR	4045215	IdentifierDecl	current_iface_num = ce -> num_interfaces		4045201	0					
ANR	4045216	IdentifierDeclType	uint32_t		4045201	0					
ANR	4045217	Identifier	current_iface_num		4045201	1					
ANR	4045218	AssignmentExpression	current_iface_num = ce -> num_interfaces		4045201	2		=			
ANR	4045219	Identifier	current_iface_num		4045201	0					
ANR	4045220	PtrMemberAccess	ce -> num_interfaces		4045201	1					
ANR	4045221	Identifier	ce		4045201	0					
ANR	4045222	Identifier	num_interfaces		4045201	1					
ANR	4045223	IdentifierDeclStatement	uint32_t parent_iface_num = ce -> parent ? ce -> parent -> num_interfaces : 0 ;	936:1:33070:33142	4045201	2	True				
ANR	4045224	IdentifierDecl	parent_iface_num = ce -> parent ? ce -> parent -> num_interfaces : 0		4045201	0					
ANR	4045225	IdentifierDeclType	uint32_t		4045201	0					
ANR	4045226	Identifier	parent_iface_num		4045201	1					
ANR	4045227	AssignmentExpression	parent_iface_num = ce -> parent ? ce -> parent -> num_interfaces : 0		4045201	2		=			
ANR	4045228	Identifier	parent_iface_num		4045201	0					
ANR	4045229	ConditionalExpression	ce -> parent ? ce -> parent -> num_interfaces : 0		4045201	1					
ANR	4045230	Condition	ce -> parent		4045201	0					
ANR	4045231	PtrMemberAccess	ce -> parent		4045201	0					
ANR	4045232	Identifier	ce		4045201	0					
ANR	4045233	Identifier	parent		4045201	1					
ANR	4045234	PtrMemberAccess	ce -> parent -> num_interfaces		4045201	1					
ANR	4045235	PtrMemberAccess	ce -> parent		4045201	0					
ANR	4045236	Identifier	ce		4045201	0					
ANR	4045237	Identifier	parent		4045201	1					
ANR	4045238	Identifier	num_interfaces		4045201	1					
ANR	4045239	PrimaryExpression	0		4045201	2					
ANR	4045240	IdentifierDeclStatement	zend_function * func ;	937:1:33145:33164	4045201	3	True				
ANR	4045241	IdentifierDecl	* func		4045201	0					
ANR	4045242	IdentifierDeclType	zend_function *		4045201	0					
ANR	4045243	Identifier	func		4045201	1					
ANR	4045244	IdentifierDeclStatement	zend_string * key ;	938:1:33167:33183	4045201	4	True				
ANR	4045245	IdentifierDecl	* key		4045201	0					
ANR	4045246	IdentifierDeclType	zend_string *		4045201	0					
ANR	4045247	Identifier	key		4045201	1					
ANR	4045248	IdentifierDeclStatement	zval * zv ;	939:1:33186:33194	4045201	5	True				
ANR	4045249	IdentifierDecl	* zv		4045201	0					
ANR	4045250	IdentifierDeclType	zval *		4045201	0					
ANR	4045251	Identifier	zv		4045201	1					
ANR	4045252	ForStatement	for ( i = 0 ; i < ce -> num_interfaces ; i ++ )		4045201	6					
ANR	4045253	ForInit	i = 0 ;	941:6:33203:33208	4045201	0	True				
ANR	4045254	AssignmentExpression	i = 0		4045201	0		=			
ANR	4045255	Identifier	i		4045201	0					
ANR	4045256	PrimaryExpression	0		4045201	1					
ANR	4045257	Condition	i < ce -> num_interfaces	941:13:33210:33231	4045201	1	True				
ANR	4045258	RelationalExpression	i < ce -> num_interfaces		4045201	0		<			
ANR	4045259	Identifier	i		4045201	0					
ANR	4045260	PtrMemberAccess	ce -> num_interfaces		4045201	1					
ANR	4045261	Identifier	ce		4045201	0					
ANR	4045262	Identifier	num_interfaces		4045201	1					
ANR	4045263	PostIncDecOperationExpression	i ++	941:37:33234:33236	4045201	2	True				
ANR	4045264	Identifier	i		4045201	0					
ANR	4045265	IncDec	++		4045201	1					
ANR	4045266	CompoundStatement		9:42:246:246	4045201	3					
ANR	4045267	IfStatement	if ( ce -> interfaces [ i ] == NULL )		4045201	0					
ANR	4045268	Condition	ce -> interfaces [ i ] == NULL	942:6:33247:33271	4045201	0	True				
ANR	4045269	EqualityExpression	ce -> interfaces [ i ] == NULL		4045201	0		==			
ANR	4045270	ArrayIndexing	ce -> interfaces [ i ]		4045201	0					
ANR	4045271	PtrMemberAccess	ce -> interfaces		4045201	0					
ANR	4045272	Identifier	ce		4045201	0					
ANR	4045273	Identifier	interfaces		4045201	1					
ANR	4045274	Identifier	i		4045201	1					
ANR	4045275	Identifier	NULL		4045201	1					
ANR	4045276	CompoundStatement		10:33:281:281	4045201	1					
ANR	4045277	ExpressionStatement	"memmove ( ce -> interfaces + i , ce -> interfaces + i + 1 , sizeof ( zend_class_entry * ) * ( -- ce -> num_interfaces - i ) )"	943:3:33279:33386	4045201	0	True				
ANR	4045278	CallExpression	"memmove ( ce -> interfaces + i , ce -> interfaces + i + 1 , sizeof ( zend_class_entry * ) * ( -- ce -> num_interfaces - i ) )"		4045201	0					
ANR	4045279	Callee	memmove		4045201	0					
ANR	4045280	Identifier	memmove		4045201	0					
ANR	4045281	ArgumentList	ce -> interfaces + i		4045201	1					
ANR	4045282	Argument	ce -> interfaces + i		4045201	0					
ANR	4045283	AdditiveExpression	ce -> interfaces + i		4045201	0		+			
ANR	4045284	PtrMemberAccess	ce -> interfaces		4045201	0					
ANR	4045285	Identifier	ce		4045201	0					
ANR	4045286	Identifier	interfaces		4045201	1					
ANR	4045287	Identifier	i		4045201	1					
ANR	4045288	Argument	ce -> interfaces + i + 1		4045201	1					
ANR	4045289	AdditiveExpression	ce -> interfaces + i + 1		4045201	0		+			
ANR	4045290	PtrMemberAccess	ce -> interfaces		4045201	0					
ANR	4045291	Identifier	ce		4045201	0					
ANR	4045292	Identifier	interfaces		4045201	1					
ANR	4045293	AdditiveExpression	i + 1		4045201	1		+			
ANR	4045294	Identifier	i		4045201	0					
ANR	4045295	PrimaryExpression	1		4045201	1					
ANR	4045296	Argument	sizeof ( zend_class_entry * ) * ( -- ce -> num_interfaces - i )		4045201	2					
ANR	4045297	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( -- ce -> num_interfaces - i )		4045201	0		*			
ANR	4045298	SizeofExpression	sizeof ( zend_class_entry * )		4045201	0					
ANR	4045299	Sizeof	sizeof		4045201	0					
ANR	4045300	SizeofOperand	zend_class_entry *		4045201	1					
ANR	4045301	AdditiveExpression	-- ce -> num_interfaces - i		4045201	1		-			
ANR	4045302	UnaryExpression	-- ce -> num_interfaces		4045201	0					
ANR	4045303	IncDec	--		4045201	0					
ANR	4045304	PtrMemberAccess	ce -> num_interfaces		4045201	1					
ANR	4045305	Identifier	ce		4045201	0					
ANR	4045306	Identifier	num_interfaces		4045201	1					
ANR	4045307	Identifier	i		4045201	1					
ANR	4045308	ExpressionStatement	i --	944:3:33391:33394	4045201	1	True				
ANR	4045309	PostIncDecOperationExpression	i --		4045201	0					
ANR	4045310	Identifier	i		4045201	0					
ANR	4045311	IncDec	--		4045201	1					
ANR	4045312	ElseStatement	else		4045201	0					
ANR	4045313	IfStatement	if ( ce -> interfaces [ i ] == iface )		4045201	0					
ANR	4045314	Condition	ce -> interfaces [ i ] == iface	945:13:33409:33434	4045201	0	True				
ANR	4045315	EqualityExpression	ce -> interfaces [ i ] == iface		4045201	0		==			
ANR	4045316	ArrayIndexing	ce -> interfaces [ i ]		4045201	0					
ANR	4045317	PtrMemberAccess	ce -> interfaces		4045201	0					
ANR	4045318	Identifier	ce		4045201	0					
ANR	4045319	Identifier	interfaces		4045201	1					
ANR	4045320	Identifier	i		4045201	1					
ANR	4045321	Identifier	iface		4045201	1					
ANR	4045322	CompoundStatement		13:41:444:444	4045201	1					
ANR	4045323	IfStatement	if ( EXPECTED ( i < parent_iface_num ) )		4045201	0					
ANR	4045324	Condition	EXPECTED ( i < parent_iface_num )	946:7:33446:33475	4045201	0	True				
ANR	4045325	CallExpression	EXPECTED ( i < parent_iface_num )		4045201	0					
ANR	4045326	Callee	EXPECTED		4045201	0					
ANR	4045327	Identifier	EXPECTED		4045201	0					
ANR	4045328	ArgumentList	i < parent_iface_num		4045201	1					
ANR	4045329	Argument	i < parent_iface_num		4045201	0					
ANR	4045330	RelationalExpression	i < parent_iface_num		4045201	0		<			
ANR	4045331	Identifier	i		4045201	0					
ANR	4045332	Identifier	parent_iface_num		4045201	1					
ANR	4045333	CompoundStatement		14:39:485:485	4045201	1					
ANR	4045334	ExpressionStatement	ignore = 1	947:4:33484:33494	4045201	0	True				
ANR	4045335	AssignmentExpression	ignore = 1		4045201	0		=			
ANR	4045336	Identifier	ignore		4045201	0					
ANR	4045337	PrimaryExpression	1		4045201	1					
ANR	4045338	ElseStatement	else		4045201	0					
ANR	4045339	CompoundStatement		16:10:513:513	4045201	0					
ANR	4045340	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot implement previously implemented interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( iface -> name ) )"	949:4:33512:33656	4045201	0	True				
ANR	4045341	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot implement previously implemented interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( iface -> name ) )"		4045201	0					
ANR	4045342	Callee	zend_error_noreturn		4045201	0					
ANR	4045343	Identifier	zend_error_noreturn		4045201	0					
ANR	4045344	ArgumentList	E_COMPILE_ERROR		4045201	1					
ANR	4045345	Argument	E_COMPILE_ERROR		4045201	0					
ANR	4045346	Identifier	E_COMPILE_ERROR		4045201	0					
ANR	4045347	Argument	"""Class %s cannot implement previously implemented interface %s"""		4045201	1					
ANR	4045348	PrimaryExpression	"""Class %s cannot implement previously implemented interface %s"""		4045201	0					
ANR	4045349	Argument	ZSTR_VAL ( ce -> name )		4045201	2					
ANR	4045350	CallExpression	ZSTR_VAL ( ce -> name )		4045201	0					
ANR	4045351	Callee	ZSTR_VAL		4045201	0					
ANR	4045352	Identifier	ZSTR_VAL		4045201	0					
ANR	4045353	ArgumentList	ce -> name		4045201	1					
ANR	4045354	Argument	ce -> name		4045201	0					
ANR	4045355	PtrMemberAccess	ce -> name		4045201	0					
ANR	4045356	Identifier	ce		4045201	0					
ANR	4045357	Identifier	name		4045201	1					
ANR	4045358	Argument	ZSTR_VAL ( iface -> name )		4045201	3					
ANR	4045359	CallExpression	ZSTR_VAL ( iface -> name )		4045201	0					
ANR	4045360	Callee	ZSTR_VAL		4045201	0					
ANR	4045361	Identifier	ZSTR_VAL		4045201	0					
ANR	4045362	ArgumentList	iface -> name		4045201	1					
ANR	4045363	Argument	iface -> name		4045201	0					
ANR	4045364	PtrMemberAccess	iface -> name		4045201	0					
ANR	4045365	Identifier	iface		4045201	0					
ANR	4045366	Identifier	name		4045201	1					
ANR	4045367	IfStatement	if ( ignore )		4045201	7					
ANR	4045368	Condition	ignore	953:5:33675:33680	4045201	0	True				
ANR	4045369	Identifier	ignore		4045201	0					
ANR	4045370	CompoundStatement		21:13:690:690	4045201	1					
ANR	4045371	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	955:2:33746:33774	4045201	0	True				
ANR	4045372	Statement	(	955:31:33775:33775	4045201	1	True				
ANR	4045373	Statement	&	955:32:33776:33776	4045201	2	True				
ANR	4045374	Statement	ce	955:33:33777:33778	4045201	3	True				
ANR	4045375	Statement	->	955:35:33779:33780	4045201	4	True				
ANR	4045376	Statement	constants_table	955:37:33781:33795	4045201	5	True				
ANR	4045377	Statement	","	955:52:33796:33796	4045201	6	True				
ANR	4045378	Statement	key	955:54:33798:33800	4045201	7	True				
ANR	4045379	Statement	","	955:57:33801:33801	4045201	8	True				
ANR	4045380	Statement	zv	955:59:33803:33804	4045201	9	True				
ANR	4045381	Statement	)	955:61:33805:33805	4045201	10	True				
ANR	4045382	CompoundStatement		23:63:814:814	4045201	11					
ANR	4045383	ExpressionStatement	"do_inherit_constant_check ( & iface -> constants_table , zv , key , iface )"	956:3:33812:33878	4045201	0	True				
ANR	4045384	CallExpression	"do_inherit_constant_check ( & iface -> constants_table , zv , key , iface )"		4045201	0					
ANR	4045385	Callee	do_inherit_constant_check		4045201	0					
ANR	4045386	Identifier	do_inherit_constant_check		4045201	0					
ANR	4045387	ArgumentList	& iface -> constants_table		4045201	1					
ANR	4045388	Argument	& iface -> constants_table		4045201	0					
ANR	4045389	UnaryOperationExpression	& iface -> constants_table		4045201	0					
ANR	4045390	UnaryOperator	&		4045201	0					
ANR	4045391	PtrMemberAccess	iface -> constants_table		4045201	1					
ANR	4045392	Identifier	iface		4045201	0					
ANR	4045393	Identifier	constants_table		4045201	1					
ANR	4045394	Argument	zv		4045201	1					
ANR	4045395	Identifier	zv		4045201	0					
ANR	4045396	Argument	key		4045201	2					
ANR	4045397	Identifier	key		4045201	0					
ANR	4045398	Argument	iface		4045201	3					
ANR	4045399	Identifier	iface		4045201	0					
ANR	4045400	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	957:4:33884:33907	4045201	12	True				
ANR	4045401	CallExpression	ZEND_HASH_FOREACH_END ( )		4045201	0					
ANR	4045402	Callee	ZEND_HASH_FOREACH_END		4045201	0					
ANR	4045403	Identifier	ZEND_HASH_FOREACH_END		4045201	0					
ANR	4045404	ArgumentList			4045201	1					
ANR	4045405	ElseStatement	else		4045201	0					
ANR	4045406	CompoundStatement		26:8:924:924	4045201	0					
ANR	4045407	IfStatement	if ( ce -> num_interfaces >= current_iface_num )		4045201	0					
ANR	4045408	Condition	ce -> num_interfaces >= current_iface_num	959:6:33925:33963	4045201	0	True				
ANR	4045409	RelationalExpression	ce -> num_interfaces >= current_iface_num		4045201	0		>=			
ANR	4045410	PtrMemberAccess	ce -> num_interfaces		4045201	0					
ANR	4045411	Identifier	ce		4045201	0					
ANR	4045412	Identifier	num_interfaces		4045201	1					
ANR	4045413	Identifier	current_iface_num		4045201	1					
ANR	4045414	CompoundStatement		27:47:973:973	4045201	1					
ANR	4045415	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		4045201	0					
ANR	4045416	Condition	ce -> type == ZEND_INTERNAL_CLASS	960:7:33975:34005	4045201	0	True				
ANR	4045417	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4045201	0		==			
ANR	4045418	PtrMemberAccess	ce -> type		4045201	0					
ANR	4045419	Identifier	ce		4045201	0					
ANR	4045420	Identifier	type		4045201	1					
ANR	4045421	Identifier	ZEND_INTERNAL_CLASS		4045201	1					
ANR	4045422	CompoundStatement		28:40:1015:1015	4045201	1					
ANR	4045423	ExpressionStatement	"ce -> interfaces = ( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"	961:4:34014:34128	4045201	0	True				
ANR	4045424	AssignmentExpression	"ce -> interfaces = ( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		4045201	0		=			
ANR	4045425	PtrMemberAccess	ce -> interfaces		4045201	0					
ANR	4045426	Identifier	ce		4045201	0					
ANR	4045427	Identifier	interfaces		4045201	1					
ANR	4045428	CastExpression	"( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		4045201	1					
ANR	4045429	CastTarget	zend_class_entry * *		4045201	0					
ANR	4045430	CallExpression	"realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		4045201	1					
ANR	4045431	Callee	realloc		4045201	0					
ANR	4045432	Identifier	realloc		4045201	0					
ANR	4045433	ArgumentList	ce -> interfaces		4045201	1					
ANR	4045434	Argument	ce -> interfaces		4045201	0					
ANR	4045435	PtrMemberAccess	ce -> interfaces		4045201	0					
ANR	4045436	Identifier	ce		4045201	0					
ANR	4045437	Identifier	interfaces		4045201	1					
ANR	4045438	Argument	sizeof ( zend_class_entry * ) * ( ++ current_iface_num )		4045201	1					
ANR	4045439	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ++ current_iface_num )		4045201	0		*			
ANR	4045440	SizeofExpression	sizeof ( zend_class_entry * )		4045201	0					
ANR	4045441	Sizeof	sizeof		4045201	0					
ANR	4045442	SizeofOperand	zend_class_entry *		4045201	1					
ANR	4045443	UnaryExpression	++ current_iface_num		4045201	1					
ANR	4045444	IncDec	++		4045201	0					
ANR	4045445	Identifier	current_iface_num		4045201	1					
ANR	4045446	ElseStatement	else		4045201	0					
ANR	4045447	CompoundStatement		30:10:1147:1147	4045201	0					
ANR	4045448	ExpressionStatement	"ce -> interfaces = ( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"	963:4:34146:34261	4045201	0	True				
ANR	4045449	AssignmentExpression	"ce -> interfaces = ( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		4045201	0		=			
ANR	4045450	PtrMemberAccess	ce -> interfaces		4045201	0					
ANR	4045451	Identifier	ce		4045201	0					
ANR	4045452	Identifier	interfaces		4045201	1					
ANR	4045453	CastExpression	"( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		4045201	1					
ANR	4045454	CastTarget	zend_class_entry * *		4045201	0					
ANR	4045455	CallExpression	"erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		4045201	1					
ANR	4045456	Callee	erealloc		4045201	0					
ANR	4045457	Identifier	erealloc		4045201	0					
ANR	4045458	ArgumentList	ce -> interfaces		4045201	1					
ANR	4045459	Argument	ce -> interfaces		4045201	0					
ANR	4045460	PtrMemberAccess	ce -> interfaces		4045201	0					
ANR	4045461	Identifier	ce		4045201	0					
ANR	4045462	Identifier	interfaces		4045201	1					
ANR	4045463	Argument	sizeof ( zend_class_entry * ) * ( ++ current_iface_num )		4045201	1					
ANR	4045464	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ++ current_iface_num )		4045201	0		*			
ANR	4045465	SizeofExpression	sizeof ( zend_class_entry * )		4045201	0					
ANR	4045466	Sizeof	sizeof		4045201	0					
ANR	4045467	SizeofOperand	zend_class_entry *		4045201	1					
ANR	4045468	UnaryExpression	++ current_iface_num		4045201	1					
ANR	4045469	IncDec	++		4045201	0					
ANR	4045470	Identifier	current_iface_num		4045201	1					
ANR	4045471	ExpressionStatement	ce -> interfaces [ ce -> num_interfaces ++ ] = iface	966:2:34274:34318	4045201	1	True				
ANR	4045472	AssignmentExpression	ce -> interfaces [ ce -> num_interfaces ++ ] = iface		4045201	0		=			
ANR	4045473	ArrayIndexing	ce -> interfaces [ ce -> num_interfaces ++ ]		4045201	0					
ANR	4045474	PtrMemberAccess	ce -> interfaces		4045201	0					
ANR	4045475	Identifier	ce		4045201	0					
ANR	4045476	Identifier	interfaces		4045201	1					
ANR	4045477	PostIncDecOperationExpression	ce -> num_interfaces ++		4045201	1					
ANR	4045478	PtrMemberAccess	ce -> num_interfaces		4045201	0					
ANR	4045479	Identifier	ce		4045201	0					
ANR	4045480	Identifier	num_interfaces		4045201	1					
ANR	4045481	IncDec	++		4045201	1					
ANR	4045482	Identifier	iface		4045201	1					
ANR	4045483	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	968:2:34323:34351	4045201	2	True				
ANR	4045484	Statement	(	968:31:34352:34352	4045201	3	True				
ANR	4045485	Statement	&	968:32:34353:34353	4045201	4	True				
ANR	4045486	Statement	iface	968:33:34354:34358	4045201	5	True				
ANR	4045487	Statement	->	968:38:34359:34360	4045201	6	True				
ANR	4045488	Statement	constants_table	968:40:34361:34375	4045201	7	True				
ANR	4045489	Statement	","	968:55:34376:34376	4045201	8	True				
ANR	4045490	Statement	key	968:57:34378:34380	4045201	9	True				
ANR	4045491	Statement	","	968:60:34381:34381	4045201	10	True				
ANR	4045492	Statement	zv	968:62:34383:34384	4045201	11	True				
ANR	4045493	Statement	)	968:64:34385:34385	4045201	12	True				
ANR	4045494	CompoundStatement		36:66:1394:1394	4045201	13					
ANR	4045495	ExpressionStatement	"do_inherit_iface_constant ( key , zv , ce , iface )"	969:3:34392:34437	4045201	0	True				
ANR	4045496	CallExpression	"do_inherit_iface_constant ( key , zv , ce , iface )"		4045201	0					
ANR	4045497	Callee	do_inherit_iface_constant		4045201	0					
ANR	4045498	Identifier	do_inherit_iface_constant		4045201	0					
ANR	4045499	ArgumentList	key		4045201	1					
ANR	4045500	Argument	key		4045201	0					
ANR	4045501	Identifier	key		4045201	0					
ANR	4045502	Argument	zv		4045201	1					
ANR	4045503	Identifier	zv		4045201	0					
ANR	4045504	Argument	ce		4045201	2					
ANR	4045505	Identifier	ce		4045201	0					
ANR	4045506	Argument	iface		4045201	3					
ANR	4045507	Identifier	iface		4045201	0					
ANR	4045508	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	970:4:34443:34466	4045201	14	True				
ANR	4045509	CallExpression	ZEND_HASH_FOREACH_END ( )		4045201	0					
ANR	4045510	Callee	ZEND_HASH_FOREACH_END		4045201	0					
ANR	4045511	Identifier	ZEND_HASH_FOREACH_END		4045201	0					
ANR	4045512	ArgumentList			4045201	1					
ANR	4045513	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	972:2:34471:34499	4045201	15	True				
ANR	4045514	Statement	(	972:31:34500:34500	4045201	16	True				
ANR	4045515	Statement	&	972:32:34501:34501	4045201	17	True				
ANR	4045516	Statement	iface	972:33:34502:34506	4045201	18	True				
ANR	4045517	Statement	->	972:38:34507:34508	4045201	19	True				
ANR	4045518	Statement	function_table	972:40:34509:34522	4045201	20	True				
ANR	4045519	Statement	","	972:54:34523:34523	4045201	21	True				
ANR	4045520	Statement	key	972:56:34525:34527	4045201	22	True				
ANR	4045521	Statement	","	972:59:34528:34528	4045201	23	True				
ANR	4045522	Statement	func	972:61:34530:34533	4045201	24	True				
ANR	4045523	Statement	)	972:65:34534:34534	4045201	25	True				
ANR	4045524	CompoundStatement		41:3:1548:1606	4045201	26					
ANR	4045525	IdentifierDeclStatement	"zend_function * new_func = do_inherit_method ( key , func , ce ) ;"	973:3:34541:34599	4045201	0	True				
ANR	4045526	IdentifierDecl	"* new_func = do_inherit_method ( key , func , ce )"		4045201	0					
ANR	4045527	IdentifierDeclType	zend_function *		4045201	0					
ANR	4045528	Identifier	new_func		4045201	1					
ANR	4045529	AssignmentExpression	"* new_func = do_inherit_method ( key , func , ce )"		4045201	2		=			
ANR	4045530	Identifier	new_func		4045201	0					
ANR	4045531	CallExpression	"do_inherit_method ( key , func , ce )"		4045201	1					
ANR	4045532	Callee	do_inherit_method		4045201	0					
ANR	4045533	Identifier	do_inherit_method		4045201	0					
ANR	4045534	ArgumentList	key		4045201	1					
ANR	4045535	Argument	key		4045201	0					
ANR	4045536	Identifier	key		4045201	0					
ANR	4045537	Argument	func		4045201	1					
ANR	4045538	Identifier	func		4045201	0					
ANR	4045539	Argument	ce		4045201	2					
ANR	4045540	Identifier	ce		4045201	0					
ANR	4045541	IfStatement	if ( new_func )		4045201	1					
ANR	4045542	Condition	new_func	975:7:34609:34616	4045201	0	True				
ANR	4045543	Identifier	new_func		4045201	0					
ANR	4045544	CompoundStatement		43:17:1626:1626	4045201	1					
ANR	4045545	ExpressionStatement	"zend_hash_add_new_ptr ( & ce -> function_table , key , new_func )"	976:4:34625:34682	4045201	0	True				
ANR	4045546	CallExpression	"zend_hash_add_new_ptr ( & ce -> function_table , key , new_func )"		4045201	0					
ANR	4045547	Callee	zend_hash_add_new_ptr		4045201	0					
ANR	4045548	Identifier	zend_hash_add_new_ptr		4045201	0					
ANR	4045549	ArgumentList	& ce -> function_table		4045201	1					
ANR	4045550	Argument	& ce -> function_table		4045201	0					
ANR	4045551	UnaryOperationExpression	& ce -> function_table		4045201	0					
ANR	4045552	UnaryOperator	&		4045201	0					
ANR	4045553	PtrMemberAccess	ce -> function_table		4045201	1					
ANR	4045554	Identifier	ce		4045201	0					
ANR	4045555	Identifier	function_table		4045201	1					
ANR	4045556	Argument	key		4045201	1					
ANR	4045557	Identifier	key		4045201	0					
ANR	4045558	Argument	new_func		4045201	2					
ANR	4045559	Identifier	new_func		4045201	0					
ANR	4045560	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	978:4:34693:34716	4045201	27	True				
ANR	4045561	CallExpression	ZEND_HASH_FOREACH_END ( )		4045201	0					
ANR	4045562	Callee	ZEND_HASH_FOREACH_END		4045201	0					
ANR	4045563	Identifier	ZEND_HASH_FOREACH_END		4045201	0					
ANR	4045564	ArgumentList			4045201	1					
ANR	4045565	ExpressionStatement	"do_implement_interface ( ce , iface )"	980:2:34721:34754	4045201	28	True				
ANR	4045566	CallExpression	"do_implement_interface ( ce , iface )"		4045201	0					
ANR	4045567	Callee	do_implement_interface		4045201	0					
ANR	4045568	Identifier	do_implement_interface		4045201	0					
ANR	4045569	ArgumentList	ce		4045201	1					
ANR	4045570	Argument	ce		4045201	0					
ANR	4045571	Identifier	ce		4045201	0					
ANR	4045572	Argument	iface		4045201	1					
ANR	4045573	Identifier	iface		4045201	0					
ANR	4045574	ExpressionStatement	"zend_do_inherit_interfaces ( ce , iface )"	981:2:34758:34795	4045201	29	True				
ANR	4045575	CallExpression	"zend_do_inherit_interfaces ( ce , iface )"		4045201	0					
ANR	4045576	Callee	zend_do_inherit_interfaces		4045201	0					
ANR	4045577	Identifier	zend_do_inherit_interfaces		4045201	0					
ANR	4045578	ArgumentList	ce		4045201	1					
ANR	4045579	Argument	ce		4045201	0					
ANR	4045580	Identifier	ce		4045201	0					
ANR	4045581	Argument	iface		4045201	1					
ANR	4045582	Identifier	iface		4045201	0					
ANR	4045583	ReturnType	ZEND_API void		4045201	1					
ANR	4045584	Identifier	zend_do_implement_interface		4045201	2					
ANR	4045585	ParameterList	"zend_class_entry * ce , zend_class_entry * iface"		4045201	3					
ANR	4045586	Parameter	zend_class_entry * ce	932:42:32935:32954	4045201	0	True				
ANR	4045587	ParameterType	zend_class_entry *		4045201	0					
ANR	4045588	Identifier	ce		4045201	1					
ANR	4045589	Parameter	zend_class_entry * iface	932:64:32957:32979	4045201	1	True				
ANR	4045590	ParameterType	zend_class_entry *		4045201	0					
ANR	4045591	Identifier	iface		4045201	1					
ANR	4045592	CFGEntryNode	ENTRY		4045201		True				
ANR	4045593	CFGExitNode	EXIT		4045201		True				
ANR	4045594	Symbol	ce -> type		4045201						
ANR	4045595	Symbol	E_COMPILE_ERROR		4045201						
ANR	4045596	Symbol	* iface		4045201						
ANR	4045597	Symbol	& ce -> function_table		4045201						
ANR	4045598	Symbol	* ce		4045201						
ANR	4045599	Symbol	realloc		4045201						
ANR	4045600	Symbol	* * ce		4045201						
ANR	4045601	Symbol	& iface -> constants_table		4045201						
ANR	4045602	Symbol	new_func		4045201						
ANR	4045603	Symbol	* ce -> parent		4045201						
ANR	4045604	Symbol	ce -> num_interfaces		4045201						
ANR	4045605	Symbol	ignore		4045201						
ANR	4045606	Symbol	* ce -> interfaces		4045201						
ANR	4045607	Symbol	ce -> name		4045201						
ANR	4045608	Symbol	erealloc		4045201						
ANR	4045609	Symbol	key		4045201						
ANR	4045610	Symbol	ZEND_INTERNAL_CLASS		4045201						
ANR	4045611	Symbol	ce		4045201						
ANR	4045612	Symbol	NULL		4045201						
ANR	4045613	Symbol	ce -> interfaces		4045201						
ANR	4045614	Symbol	ce -> parent		4045201						
ANR	4045615	Symbol	i		4045201						
ANR	4045616	Symbol	current_iface_num		4045201						
ANR	4045617	Symbol	parent_iface_num		4045201						
ANR	4045618	Symbol	ce -> parent -> num_interfaces		4045201						
ANR	4045619	Symbol	do_inherit_method		4045201						
ANR	4045620	Symbol	ZSTR_VAL		4045201						
ANR	4045621	Symbol	iface		4045201						
ANR	4045622	Symbol	* i		4045201						
ANR	4045623	Symbol	func		4045201						
ANR	4045624	Symbol	iface -> name		4045201						
ANR	4045625	Symbol	zv		4045201						
ANR	4045626	Symbol	EXPECTED		4045201						
ANR	4045627	Function	zend_do_implement_trait	986:0:34813:35722							
ANR	4045628	FunctionDef	"zend_do_implement_trait (zend_class_entry * ce , zend_class_entry * trait)"		4045627	0					
ANR	4045629	CompoundStatement		987:0:34908:35722	4045627	0					
ANR	4045630	IdentifierDeclStatement	"uint32_t i , ignore = 0 ;"	988:1:34911:34933	4045627	0	True				
ANR	4045631	IdentifierDecl	i		4045627	0					
ANR	4045632	IdentifierDeclType	uint32_t		4045627	0					
ANR	4045633	Identifier	i		4045627	1					
ANR	4045634	IdentifierDecl	ignore = 0		4045627	1					
ANR	4045635	IdentifierDeclType	uint32_t		4045627	0					
ANR	4045636	Identifier	ignore		4045627	1					
ANR	4045637	AssignmentExpression	ignore = 0		4045627	2		=			
ANR	4045638	Identifier	ignore		4045627	0					
ANR	4045639	PrimaryExpression	0		4045627	1					
ANR	4045640	IdentifierDeclStatement	uint32_t current_trait_num = ce -> num_traits ;	989:1:34936:34979	4045627	1	True				
ANR	4045641	IdentifierDecl	current_trait_num = ce -> num_traits		4045627	0					
ANR	4045642	IdentifierDeclType	uint32_t		4045627	0					
ANR	4045643	Identifier	current_trait_num		4045627	1					
ANR	4045644	AssignmentExpression	current_trait_num = ce -> num_traits		4045627	2		=			
ANR	4045645	Identifier	current_trait_num		4045627	0					
ANR	4045646	PtrMemberAccess	ce -> num_traits		4045627	1					
ANR	4045647	Identifier	ce		4045627	0					
ANR	4045648	Identifier	num_traits		4045627	1					
ANR	4045649	IdentifierDeclStatement	uint32_t parent_trait_num = ce -> parent ? ce -> parent -> num_traits : 0 ;	990:1:34982:35050	4045627	2	True				
ANR	4045650	IdentifierDecl	parent_trait_num = ce -> parent ? ce -> parent -> num_traits : 0		4045627	0					
ANR	4045651	IdentifierDeclType	uint32_t		4045627	0					
ANR	4045652	Identifier	parent_trait_num		4045627	1					
ANR	4045653	AssignmentExpression	parent_trait_num = ce -> parent ? ce -> parent -> num_traits : 0		4045627	2		=			
ANR	4045654	Identifier	parent_trait_num		4045627	0					
ANR	4045655	ConditionalExpression	ce -> parent ? ce -> parent -> num_traits : 0		4045627	1					
ANR	4045656	Condition	ce -> parent		4045627	0					
ANR	4045657	PtrMemberAccess	ce -> parent		4045627	0					
ANR	4045658	Identifier	ce		4045627	0					
ANR	4045659	Identifier	parent		4045627	1					
ANR	4045660	PtrMemberAccess	ce -> parent -> num_traits		4045627	1					
ANR	4045661	PtrMemberAccess	ce -> parent		4045627	0					
ANR	4045662	Identifier	ce		4045627	0					
ANR	4045663	Identifier	parent		4045627	1					
ANR	4045664	Identifier	num_traits		4045627	1					
ANR	4045665	PrimaryExpression	0		4045627	2					
ANR	4045666	ForStatement	for ( i = 0 ; i < ce -> num_traits ; i ++ )		4045627	3					
ANR	4045667	ForInit	i = 0 ;	992:6:35059:35064	4045627	0	True				
ANR	4045668	AssignmentExpression	i = 0		4045627	0		=			
ANR	4045669	Identifier	i		4045627	0					
ANR	4045670	PrimaryExpression	0		4045627	1					
ANR	4045671	Condition	i < ce -> num_traits	992:13:35066:35083	4045627	1	True				
ANR	4045672	RelationalExpression	i < ce -> num_traits		4045627	0		<			
ANR	4045673	Identifier	i		4045627	0					
ANR	4045674	PtrMemberAccess	ce -> num_traits		4045627	1					
ANR	4045675	Identifier	ce		4045627	0					
ANR	4045676	Identifier	num_traits		4045627	1					
ANR	4045677	PostIncDecOperationExpression	i ++	992:33:35086:35088	4045627	2	True				
ANR	4045678	Identifier	i		4045627	0					
ANR	4045679	IncDec	++		4045627	1					
ANR	4045680	CompoundStatement		6:38:182:182	4045627	3					
ANR	4045681	IfStatement	if ( ce -> traits [ i ] == NULL )		4045627	0					
ANR	4045682	Condition	ce -> traits [ i ] == NULL	993:6:35099:35119	4045627	0	True				
ANR	4045683	EqualityExpression	ce -> traits [ i ] == NULL		4045627	0		==			
ANR	4045684	ArrayIndexing	ce -> traits [ i ]		4045627	0					
ANR	4045685	PtrMemberAccess	ce -> traits		4045627	0					
ANR	4045686	Identifier	ce		4045627	0					
ANR	4045687	Identifier	traits		4045627	1					
ANR	4045688	Identifier	i		4045627	1					
ANR	4045689	Identifier	NULL		4045627	1					
ANR	4045690	CompoundStatement		7:29:213:213	4045627	1					
ANR	4045691	ExpressionStatement	"memmove ( ce -> traits + i , ce -> traits + i + 1 , sizeof ( zend_class_entry * ) * ( -- ce -> num_traits - i ) )"	994:3:35127:35222	4045627	0	True				
ANR	4045692	CallExpression	"memmove ( ce -> traits + i , ce -> traits + i + 1 , sizeof ( zend_class_entry * ) * ( -- ce -> num_traits - i ) )"		4045627	0					
ANR	4045693	Callee	memmove		4045627	0					
ANR	4045694	Identifier	memmove		4045627	0					
ANR	4045695	ArgumentList	ce -> traits + i		4045627	1					
ANR	4045696	Argument	ce -> traits + i		4045627	0					
ANR	4045697	AdditiveExpression	ce -> traits + i		4045627	0		+			
ANR	4045698	PtrMemberAccess	ce -> traits		4045627	0					
ANR	4045699	Identifier	ce		4045627	0					
ANR	4045700	Identifier	traits		4045627	1					
ANR	4045701	Identifier	i		4045627	1					
ANR	4045702	Argument	ce -> traits + i + 1		4045627	1					
ANR	4045703	AdditiveExpression	ce -> traits + i + 1		4045627	0		+			
ANR	4045704	PtrMemberAccess	ce -> traits		4045627	0					
ANR	4045705	Identifier	ce		4045627	0					
ANR	4045706	Identifier	traits		4045627	1					
ANR	4045707	AdditiveExpression	i + 1		4045627	1		+			
ANR	4045708	Identifier	i		4045627	0					
ANR	4045709	PrimaryExpression	1		4045627	1					
ANR	4045710	Argument	sizeof ( zend_class_entry * ) * ( -- ce -> num_traits - i )		4045627	2					
ANR	4045711	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( -- ce -> num_traits - i )		4045627	0		*			
ANR	4045712	SizeofExpression	sizeof ( zend_class_entry * )		4045627	0					
ANR	4045713	Sizeof	sizeof		4045627	0					
ANR	4045714	SizeofOperand	zend_class_entry *		4045627	1					
ANR	4045715	AdditiveExpression	-- ce -> num_traits - i		4045627	1		-			
ANR	4045716	UnaryExpression	-- ce -> num_traits		4045627	0					
ANR	4045717	IncDec	--		4045627	0					
ANR	4045718	PtrMemberAccess	ce -> num_traits		4045627	1					
ANR	4045719	Identifier	ce		4045627	0					
ANR	4045720	Identifier	num_traits		4045627	1					
ANR	4045721	Identifier	i		4045627	1					
ANR	4045722	ExpressionStatement	i --	995:3:35227:35230	4045627	1	True				
ANR	4045723	PostIncDecOperationExpression	i --		4045627	0					
ANR	4045724	Identifier	i		4045627	0					
ANR	4045725	IncDec	--		4045627	1					
ANR	4045726	ElseStatement	else		4045627	0					
ANR	4045727	IfStatement	if ( ce -> traits [ i ] == trait )		4045627	0					
ANR	4045728	Condition	ce -> traits [ i ] == trait	996:13:35245:35266	4045627	0	True				
ANR	4045729	EqualityExpression	ce -> traits [ i ] == trait		4045627	0		==			
ANR	4045730	ArrayIndexing	ce -> traits [ i ]		4045627	0					
ANR	4045731	PtrMemberAccess	ce -> traits		4045627	0					
ANR	4045732	Identifier	ce		4045627	0					
ANR	4045733	Identifier	traits		4045627	1					
ANR	4045734	Identifier	i		4045627	1					
ANR	4045735	Identifier	trait		4045627	1					
ANR	4045736	CompoundStatement		10:37:360:360	4045627	1					
ANR	4045737	IfStatement	if ( i < parent_trait_num )		4045627	0					
ANR	4045738	Condition	i < parent_trait_num	997:7:35278:35297	4045627	0	True				
ANR	4045739	RelationalExpression	i < parent_trait_num		4045627	0		<			
ANR	4045740	Identifier	i		4045627	0					
ANR	4045741	Identifier	parent_trait_num		4045627	1					
ANR	4045742	CompoundStatement		11:29:391:391	4045627	1					
ANR	4045743	ExpressionStatement	ignore = 1	998:4:35306:35316	4045627	0	True				
ANR	4045744	AssignmentExpression	ignore = 1		4045627	0		=			
ANR	4045745	Identifier	ignore		4045627	0					
ANR	4045746	PrimaryExpression	1		4045627	1					
ANR	4045747	IfStatement	if ( ! ignore )		4045627	4					
ANR	4045748	Condition	! ignore	1002:5:35335:35341	4045627	0	True				
ANR	4045749	UnaryOperationExpression	! ignore		4045627	0					
ANR	4045750	UnaryOperator	!		4045627	0					
ANR	4045751	Identifier	ignore		4045627	1					
ANR	4045752	CompoundStatement		16:14:435:435	4045627	1					
ANR	4045753	IfStatement	if ( ce -> num_traits >= current_trait_num )		4045627	0					
ANR	4045754	Condition	ce -> num_traits >= current_trait_num	1003:6:35352:35386	4045627	0	True				
ANR	4045755	RelationalExpression	ce -> num_traits >= current_trait_num		4045627	0		>=			
ANR	4045756	PtrMemberAccess	ce -> num_traits		4045627	0					
ANR	4045757	Identifier	ce		4045627	0					
ANR	4045758	Identifier	num_traits		4045627	1					
ANR	4045759	Identifier	current_trait_num		4045627	1					
ANR	4045760	CompoundStatement		17:43:480:480	4045627	1					
ANR	4045761	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		4045627	0					
ANR	4045762	Condition	ce -> type == ZEND_INTERNAL_CLASS	1004:7:35398:35428	4045627	0	True				
ANR	4045763	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		4045627	0		==			
ANR	4045764	PtrMemberAccess	ce -> type		4045627	0					
ANR	4045765	Identifier	ce		4045627	0					
ANR	4045766	Identifier	type		4045627	1					
ANR	4045767	Identifier	ZEND_INTERNAL_CLASS		4045627	1					
ANR	4045768	CompoundStatement		18:40:522:522	4045627	1					
ANR	4045769	ExpressionStatement	"ce -> traits = ( zend_class_entry * * ) realloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"	1005:4:35437:35543	4045627	0	True				
ANR	4045770	AssignmentExpression	"ce -> traits = ( zend_class_entry * * ) realloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		4045627	0		=			
ANR	4045771	PtrMemberAccess	ce -> traits		4045627	0					
ANR	4045772	Identifier	ce		4045627	0					
ANR	4045773	Identifier	traits		4045627	1					
ANR	4045774	CastExpression	"( zend_class_entry * * ) realloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		4045627	1					
ANR	4045775	CastTarget	zend_class_entry * *		4045627	0					
ANR	4045776	CallExpression	"realloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		4045627	1					
ANR	4045777	Callee	realloc		4045627	0					
ANR	4045778	Identifier	realloc		4045627	0					
ANR	4045779	ArgumentList	ce -> traits		4045627	1					
ANR	4045780	Argument	ce -> traits		4045627	0					
ANR	4045781	PtrMemberAccess	ce -> traits		4045627	0					
ANR	4045782	Identifier	ce		4045627	0					
ANR	4045783	Identifier	traits		4045627	1					
ANR	4045784	Argument	sizeof ( zend_class_entry * ) * ( ++ current_trait_num )		4045627	1					
ANR	4045785	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ++ current_trait_num )		4045627	0		*			
ANR	4045786	SizeofExpression	sizeof ( zend_class_entry * )		4045627	0					
ANR	4045787	Sizeof	sizeof		4045627	0					
ANR	4045788	SizeofOperand	zend_class_entry *		4045627	1					
ANR	4045789	UnaryExpression	++ current_trait_num		4045627	1					
ANR	4045790	IncDec	++		4045627	0					
ANR	4045791	Identifier	current_trait_num		4045627	1					
ANR	4045792	ElseStatement	else		4045627	0					
ANR	4045793	CompoundStatement		20:10:646:646	4045627	0					
ANR	4045794	ExpressionStatement	"ce -> traits = ( zend_class_entry * * ) erealloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"	1007:4:35561:35668	4045627	0	True				
ANR	4045795	AssignmentExpression	"ce -> traits = ( zend_class_entry * * ) erealloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		4045627	0		=			
ANR	4045796	PtrMemberAccess	ce -> traits		4045627	0					
ANR	4045797	Identifier	ce		4045627	0					
ANR	4045798	Identifier	traits		4045627	1					
ANR	4045799	CastExpression	"( zend_class_entry * * ) erealloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		4045627	1					
ANR	4045800	CastTarget	zend_class_entry * *		4045627	0					
ANR	4045801	CallExpression	"erealloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		4045627	1					
ANR	4045802	Callee	erealloc		4045627	0					
ANR	4045803	Identifier	erealloc		4045627	0					
ANR	4045804	ArgumentList	ce -> traits		4045627	1					
ANR	4045805	Argument	ce -> traits		4045627	0					
ANR	4045806	PtrMemberAccess	ce -> traits		4045627	0					
ANR	4045807	Identifier	ce		4045627	0					
ANR	4045808	Identifier	traits		4045627	1					
ANR	4045809	Argument	sizeof ( zend_class_entry * ) * ( ++ current_trait_num )		4045627	1					
ANR	4045810	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ++ current_trait_num )		4045627	0		*			
ANR	4045811	SizeofExpression	sizeof ( zend_class_entry * )		4045627	0					
ANR	4045812	Sizeof	sizeof		4045627	0					
ANR	4045813	SizeofOperand	zend_class_entry *		4045627	1					
ANR	4045814	UnaryExpression	++ current_trait_num		4045627	1					
ANR	4045815	IncDec	++		4045627	0					
ANR	4045816	Identifier	current_trait_num		4045627	1					
ANR	4045817	ExpressionStatement	ce -> traits [ ce -> num_traits ++ ] = trait	1010:2:35681:35717	4045627	1	True				
ANR	4045818	AssignmentExpression	ce -> traits [ ce -> num_traits ++ ] = trait		4045627	0		=			
ANR	4045819	ArrayIndexing	ce -> traits [ ce -> num_traits ++ ]		4045627	0					
ANR	4045820	PtrMemberAccess	ce -> traits		4045627	0					
ANR	4045821	Identifier	ce		4045627	0					
ANR	4045822	Identifier	traits		4045627	1					
ANR	4045823	PostIncDecOperationExpression	ce -> num_traits ++		4045627	1					
ANR	4045824	PtrMemberAccess	ce -> num_traits		4045627	0					
ANR	4045825	Identifier	ce		4045627	0					
ANR	4045826	Identifier	num_traits		4045627	1					
ANR	4045827	IncDec	++		4045627	1					
ANR	4045828	Identifier	trait		4045627	1					
ANR	4045829	ReturnType	ZEND_API void		4045627	1					
ANR	4045830	Identifier	zend_do_implement_trait		4045627	2					
ANR	4045831	ParameterList	"zend_class_entry * ce , zend_class_entry * trait"		4045627	3					
ANR	4045832	Parameter	zend_class_entry * ce	986:38:34851:34870	4045627	0	True				
ANR	4045833	ParameterType	zend_class_entry *		4045627	0					
ANR	4045834	Identifier	ce		4045627	1					
ANR	4045835	Parameter	zend_class_entry * trait	986:60:34873:34895	4045627	1	True				
ANR	4045836	ParameterType	zend_class_entry *		4045627	0					
ANR	4045837	Identifier	trait		4045627	1					
ANR	4045838	CFGEntryNode	ENTRY		4045627		True				
ANR	4045839	CFGExitNode	EXIT		4045627		True				
ANR	4045840	Symbol	ZEND_INTERNAL_CLASS		4045627						
ANR	4045841	Symbol	parent_trait_num		4045627						
ANR	4045842	Symbol	ce -> type		4045627						
ANR	4045843	Symbol	ce		4045627						
ANR	4045844	Symbol	NULL		4045627						
ANR	4045845	Symbol	ce -> parent		4045627						
ANR	4045846	Symbol	ce -> parent -> num_traits		4045627						
ANR	4045847	Symbol	i		4045627						
ANR	4045848	Symbol	* ce		4045627						
ANR	4045849	Symbol	realloc		4045627						
ANR	4045850	Symbol	ce -> num_traits		4045627						
ANR	4045851	Symbol	* * ce		4045627						
ANR	4045852	Symbol	ce -> traits		4045627						
ANR	4045853	Symbol	current_trait_num		4045627						
ANR	4045854	Symbol	* ce -> traits		4045627						
ANR	4045855	Symbol	* ce -> parent		4045627						
ANR	4045856	Symbol	* i		4045627						
ANR	4045857	Symbol	trait		4045627						
ANR	4045858	Symbol	ignore		4045627						
ANR	4045859	Symbol	erealloc		4045627						
ANR	4045860	Function	zend_traits_method_compatibility_check	1015:0:35735:36285							
ANR	4045861	FunctionDef	"zend_traits_method_compatibility_check (zend_function * fn , zend_function * other_fn)"		4045860	0					
ANR	4045862	CompoundStatement		1016:0:35845:36285	4045860	0					
ANR	4045863	IdentifierDeclStatement	uint32_t fn_flags = fn -> common . scope -> ce_flags ;	1017:1:35848:35897	4045860	0	True				
ANR	4045864	IdentifierDecl	fn_flags = fn -> common . scope -> ce_flags		4045860	0					
ANR	4045865	IdentifierDeclType	uint32_t		4045860	0					
ANR	4045866	Identifier	fn_flags		4045860	1					
ANR	4045867	AssignmentExpression	fn_flags = fn -> common . scope -> ce_flags		4045860	2		=			
ANR	4045868	Identifier	fn_flags		4045860	0					
ANR	4045869	PtrMemberAccess	fn -> common . scope -> ce_flags		4045860	1					
ANR	4045870	MemberAccess	fn -> common . scope		4045860	0					
ANR	4045871	PtrMemberAccess	fn -> common		4045860	0					
ANR	4045872	Identifier	fn		4045860	0					
ANR	4045873	Identifier	common		4045860	1					
ANR	4045874	Identifier	scope		4045860	1					
ANR	4045875	Identifier	ce_flags		4045860	1					
ANR	4045876	IdentifierDeclStatement	uint32_t other_flags = other_fn -> common . scope -> ce_flags ;	1018:1:35900:35955	4045860	1	True				
ANR	4045877	IdentifierDecl	other_flags = other_fn -> common . scope -> ce_flags		4045860	0					
ANR	4045878	IdentifierDeclType	uint32_t		4045860	0					
ANR	4045879	Identifier	other_flags		4045860	1					
ANR	4045880	AssignmentExpression	other_flags = other_fn -> common . scope -> ce_flags		4045860	2		=			
ANR	4045881	Identifier	other_flags		4045860	0					
ANR	4045882	PtrMemberAccess	other_fn -> common . scope -> ce_flags		4045860	1					
ANR	4045883	MemberAccess	other_fn -> common . scope		4045860	0					
ANR	4045884	PtrMemberAccess	other_fn -> common		4045860	0					
ANR	4045885	Identifier	other_fn		4045860	0					
ANR	4045886	Identifier	common		4045860	1					
ANR	4045887	Identifier	scope		4045860	1					
ANR	4045888	Identifier	ce_flags		4045860	1					
ANR	4045889	ReturnStatement	"return zend_do_perform_implementation_check ( fn , other_fn ) && ( ( other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) || zend_do_perform_implementation_check ( other_fn , fn ) ) && ( ( fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) == ( other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) ) ;"	1020:1:35959:36244	4045860	2	True				
ANR	4045890	AndExpression	"zend_do_perform_implementation_check ( fn , other_fn ) && ( ( other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) || zend_do_perform_implementation_check ( other_fn , fn ) ) && ( ( fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) == ( other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) )"		4045860	0		&&			
ANR	4045891	CallExpression	"zend_do_perform_implementation_check ( fn , other_fn )"		4045860	0					
ANR	4045892	Callee	zend_do_perform_implementation_check		4045860	0					
ANR	4045893	Identifier	zend_do_perform_implementation_check		4045860	0					
ANR	4045894	ArgumentList	fn		4045860	1					
ANR	4045895	Argument	fn		4045860	0					
ANR	4045896	Identifier	fn		4045860	0					
ANR	4045897	Argument	other_fn		4045860	1					
ANR	4045898	Identifier	other_fn		4045860	0					
ANR	4045899	AndExpression	"( ( other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) || zend_do_perform_implementation_check ( other_fn , fn ) ) && ( ( fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) == ( other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) )"		4045860	1		&&			
ANR	4045900	OrExpression	"( other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) || zend_do_perform_implementation_check ( other_fn , fn )"		4045860	0		||			
ANR	4045901	BitAndExpression	other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		4045860	0		&			
ANR	4045902	PtrMemberAccess	other_fn -> common . scope -> ce_flags		4045860	0					
ANR	4045903	MemberAccess	other_fn -> common . scope		4045860	0					
ANR	4045904	PtrMemberAccess	other_fn -> common		4045860	0					
ANR	4045905	Identifier	other_fn		4045860	0					
ANR	4045906	Identifier	common		4045860	1					
ANR	4045907	Identifier	scope		4045860	1					
ANR	4045908	Identifier	ce_flags		4045860	1					
ANR	4045909	Identifier	ZEND_ACC_INTERFACE		4045860	1					
ANR	4045910	CallExpression	"zend_do_perform_implementation_check ( other_fn , fn )"		4045860	1					
ANR	4045911	Callee	zend_do_perform_implementation_check		4045860	0					
ANR	4045912	Identifier	zend_do_perform_implementation_check		4045860	0					
ANR	4045913	ArgumentList	other_fn		4045860	1					
ANR	4045914	Argument	other_fn		4045860	0					
ANR	4045915	Identifier	other_fn		4045860	0					
ANR	4045916	Argument	fn		4045860	1					
ANR	4045917	Identifier	fn		4045860	0					
ANR	4045918	EqualityExpression	( fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) == ( other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) )		4045860	1		==			
ANR	4045919	BitAndExpression	fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC )		4045860	0		&			
ANR	4045920	Identifier	fn_flags		4045860	0					
ANR	4045921	InclusiveOrExpression	ZEND_ACC_FINAL | ZEND_ACC_STATIC		4045860	1		|			
ANR	4045922	Identifier	ZEND_ACC_FINAL		4045860	0					
ANR	4045923	Identifier	ZEND_ACC_STATIC		4045860	1					
ANR	4045924	BitAndExpression	other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC )		4045860	1		&			
ANR	4045925	Identifier	other_flags		4045860	0					
ANR	4045926	InclusiveOrExpression	ZEND_ACC_FINAL | ZEND_ACC_STATIC		4045860	1		|			
ANR	4045927	Identifier	ZEND_ACC_FINAL		4045860	0					
ANR	4045928	Identifier	ZEND_ACC_STATIC		4045860	1					
ANR	4045929	ReturnType	static zend_bool		4045860	1					
ANR	4045930	Identifier	zend_traits_method_compatibility_check		4045860	2					
ANR	4045931	ParameterList	"zend_function * fn , zend_function * other_fn"		4045860	3					
ANR	4045932	Parameter	zend_function * fn	1015:56:35791:35807	4045860	0	True				
ANR	4045933	ParameterType	zend_function *		4045860	0					
ANR	4045934	Identifier	fn		4045860	1					
ANR	4045935	Parameter	zend_function * other_fn	1015:75:35810:35832	4045860	1	True				
ANR	4045936	ParameterType	zend_function *		4045860	0					
ANR	4045937	Identifier	other_fn		4045860	1					
ANR	4045938	CFGEntryNode	ENTRY		4045860		True				
ANR	4045939	CFGExitNode	EXIT		4045860		True				
ANR	4045940	Symbol	fn -> common . scope		4045860						
ANR	4045941	Symbol	fn_flags		4045860						
ANR	4045942	Symbol	* other_fn		4045860						
ANR	4045943	Symbol	* * other_fn		4045860						
ANR	4045944	Symbol	other_fn		4045860						
ANR	4045945	Symbol	fn -> common . scope -> ce_flags		4045860						
ANR	4045946	Symbol	fn		4045860						
ANR	4045947	Symbol	* fn		4045860						
ANR	4045948	Symbol	* fn -> common		4045860						
ANR	4045949	Symbol	* fn -> common . scope		4045860						
ANR	4045950	Symbol	ZEND_ACC_FINAL		4045860						
ANR	4045951	Symbol	other_fn -> common		4045860						
ANR	4045952	Symbol	other_fn -> common . scope -> ce_flags		4045860						
ANR	4045953	Symbol	fn -> common		4045860						
ANR	4045954	Symbol	other_fn -> common . scope		4045860						
ANR	4045955	Symbol	* * fn		4045860						
ANR	4045956	Symbol	ZEND_ACC_STATIC		4045860						
ANR	4045957	Symbol	ZEND_ACC_INTERFACE		4045860						
ANR	4045958	Symbol	zend_do_perform_implementation_check		4045860						
ANR	4045959	Symbol	* other_fn -> common		4045860						
ANR	4045960	Symbol	* other_fn -> common . scope		4045860						
ANR	4045961	Symbol	other_flags		4045860						
ANR	4045962	Function	zend_add_magic_methods	1027:0:36298:38603							
ANR	4045963	FunctionDef	"zend_add_magic_methods (zend_class_entry * ce , zend_string * mname , zend_function * fe)"		4045962	0					
ANR	4045964	CompoundStatement		1028:0:36404:38603	4045962	0					
ANR	4045965	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_CLONE_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4045966	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CLONE_FUNC_NAME , ZSTR_LEN ( mname ) )"	1029:5:36411:36474	4045962	0	True				
ANR	4045967	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CLONE_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4045968	UnaryOperator	!		4045962	0					
ANR	4045969	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_CLONE_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4045970	Callee	strncmp		4045962	0					
ANR	4045971	Identifier	strncmp		4045962	0					
ANR	4045972	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4045973	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4045974	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4045975	Callee	ZSTR_VAL		4045962	0					
ANR	4045976	Identifier	ZSTR_VAL		4045962	0					
ANR	4045977	ArgumentList	mname		4045962	1					
ANR	4045978	Argument	mname		4045962	0					
ANR	4045979	Identifier	mname		4045962	0					
ANR	4045980	Argument	ZEND_CLONE_FUNC_NAME		4045962	1					
ANR	4045981	Identifier	ZEND_CLONE_FUNC_NAME		4045962	0					
ANR	4045982	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4045983	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4045984	Callee	ZSTR_LEN		4045962	0					
ANR	4045985	Identifier	ZSTR_LEN		4045962	0					
ANR	4045986	ArgumentList	mname		4045962	1					
ANR	4045987	Argument	mname		4045962	0					
ANR	4045988	Identifier	mname		4045962	0					
ANR	4045989	CompoundStatement		2:71:72:72	4045962	1					
ANR	4045990	ExpressionStatement	ce -> clone = fe	1030:2:36481:36495	4045962	0	True				
ANR	4045991	AssignmentExpression	ce -> clone = fe		4045962	0		=			
ANR	4045992	PtrMemberAccess	ce -> clone		4045962	0					
ANR	4045993	Identifier	ce		4045962	0					
ANR	4045994	Identifier	clone		4045962	1					
ANR	4045995	Identifier	fe		4045962	1					
ANR	4045996	ExpressionStatement	fe -> common . fn_flags |= ZEND_ACC_CLONE	1030:18:36497:36534	4045962	1	True				
ANR	4045997	AssignmentExpression	fe -> common . fn_flags |= ZEND_ACC_CLONE		4045962	0		|=			
ANR	4045998	MemberAccess	fe -> common . fn_flags		4045962	0					
ANR	4045999	PtrMemberAccess	fe -> common		4045962	0					
ANR	4046000	Identifier	fe		4045962	0					
ANR	4046001	Identifier	common		4045962	1					
ANR	4046002	Identifier	fn_flags		4045962	1					
ANR	4046003	Identifier	ZEND_ACC_CLONE		4045962	1					
ANR	4046004	ElseStatement	else		4045962	0					
ANR	4046005	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_CONSTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046006	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CONSTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"	1031:12:36548:36617	4045962	0	True				
ANR	4046007	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CONSTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046008	UnaryOperator	!		4045962	0					
ANR	4046009	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_CONSTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046010	Callee	strncmp		4045962	0					
ANR	4046011	Identifier	strncmp		4045962	0					
ANR	4046012	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046013	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046014	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046015	Callee	ZSTR_VAL		4045962	0					
ANR	4046016	Identifier	ZSTR_VAL		4045962	0					
ANR	4046017	ArgumentList	mname		4045962	1					
ANR	4046018	Argument	mname		4045962	0					
ANR	4046019	Identifier	mname		4045962	0					
ANR	4046020	Argument	ZEND_CONSTRUCTOR_FUNC_NAME		4045962	1					
ANR	4046021	Identifier	ZEND_CONSTRUCTOR_FUNC_NAME		4045962	0					
ANR	4046022	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046023	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046024	Callee	ZSTR_LEN		4045962	0					
ANR	4046025	Identifier	ZSTR_LEN		4045962	0					
ANR	4046026	ArgumentList	mname		4045962	1					
ANR	4046027	Argument	mname		4045962	0					
ANR	4046028	Identifier	mname		4045962	0					
ANR	4046029	CompoundStatement		4:84:215:215	4045962	1					
ANR	4046030	IfStatement	if ( ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor ) )		4045962	0					
ANR	4046031	Condition	ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor )	1032:6:36628:36705	4045962	0	True				
ANR	4046032	AndExpression	ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor )		4045962	0		&&			
ANR	4046033	PtrMemberAccess	ce -> constructor		4045962	0					
ANR	4046034	Identifier	ce		4045962	0					
ANR	4046035	Identifier	constructor		4045962	1					
ANR	4046036	OrExpression	! ce -> parent || ce -> constructor != ce -> parent -> constructor		4045962	1		||			
ANR	4046037	UnaryOperationExpression	! ce -> parent		4045962	0					
ANR	4046038	UnaryOperator	!		4045962	0					
ANR	4046039	PtrMemberAccess	ce -> parent		4045962	1					
ANR	4046040	Identifier	ce		4045962	0					
ANR	4046041	Identifier	parent		4045962	1					
ANR	4046042	EqualityExpression	ce -> constructor != ce -> parent -> constructor		4045962	1		!=			
ANR	4046043	PtrMemberAccess	ce -> constructor		4045962	0					
ANR	4046044	Identifier	ce		4045962	0					
ANR	4046045	Identifier	constructor		4045962	1					
ANR	4046046	PtrMemberAccess	ce -> parent -> constructor		4045962	1					
ANR	4046047	PtrMemberAccess	ce -> parent		4045962	0					
ANR	4046048	Identifier	ce		4045962	0					
ANR	4046049	Identifier	parent		4045962	1					
ANR	4046050	Identifier	constructor		4045962	1					
ANR	4046051	CompoundStatement		5:86:303:303	4045962	1					
ANR	4046052	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s has colliding constructor definitions coming from traits"" , ZSTR_VAL ( ce -> name ) )"	1033:3:36713:36832	4045962	0	True				
ANR	4046053	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s has colliding constructor definitions coming from traits"" , ZSTR_VAL ( ce -> name ) )"		4045962	0					
ANR	4046054	Callee	zend_error_noreturn		4045962	0					
ANR	4046055	Identifier	zend_error_noreturn		4045962	0					
ANR	4046056	ArgumentList	E_COMPILE_ERROR		4045962	1					
ANR	4046057	Argument	E_COMPILE_ERROR		4045962	0					
ANR	4046058	Identifier	E_COMPILE_ERROR		4045962	0					
ANR	4046059	Argument	"""%s has colliding constructor definitions coming from traits"""		4045962	1					
ANR	4046060	PrimaryExpression	"""%s has colliding constructor definitions coming from traits"""		4045962	0					
ANR	4046061	Argument	ZSTR_VAL ( ce -> name )		4045962	2					
ANR	4046062	CallExpression	ZSTR_VAL ( ce -> name )		4045962	0					
ANR	4046063	Callee	ZSTR_VAL		4045962	0					
ANR	4046064	Identifier	ZSTR_VAL		4045962	0					
ANR	4046065	ArgumentList	ce -> name		4045962	1					
ANR	4046066	Argument	ce -> name		4045962	0					
ANR	4046067	PtrMemberAccess	ce -> name		4045962	0					
ANR	4046068	Identifier	ce		4045962	0					
ANR	4046069	Identifier	name		4045962	1					
ANR	4046070	ExpressionStatement	ce -> constructor = fe	1035:2:36840:36860	4045962	1	True				
ANR	4046071	AssignmentExpression	ce -> constructor = fe		4045962	0		=			
ANR	4046072	PtrMemberAccess	ce -> constructor		4045962	0					
ANR	4046073	Identifier	ce		4045962	0					
ANR	4046074	Identifier	constructor		4045962	1					
ANR	4046075	Identifier	fe		4045962	1					
ANR	4046076	ExpressionStatement	fe -> common . fn_flags |= ZEND_ACC_CTOR	1035:24:36862:36898	4045962	2	True				
ANR	4046077	AssignmentExpression	fe -> common . fn_flags |= ZEND_ACC_CTOR		4045962	0		|=			
ANR	4046078	MemberAccess	fe -> common . fn_flags		4045962	0					
ANR	4046079	PtrMemberAccess	fe -> common		4045962	0					
ANR	4046080	Identifier	fe		4045962	0					
ANR	4046081	Identifier	common		4045962	1					
ANR	4046082	Identifier	fn_flags		4045962	1					
ANR	4046083	Identifier	ZEND_ACC_CTOR		4045962	1					
ANR	4046084	ElseStatement	else		4045962	0					
ANR	4046085	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_DESTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046086	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_DESTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"	1036:12:36912:36981	4045962	0	True				
ANR	4046087	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_DESTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046088	UnaryOperator	!		4045962	0					
ANR	4046089	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_DESTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046090	Callee	strncmp		4045962	0					
ANR	4046091	Identifier	strncmp		4045962	0					
ANR	4046092	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046093	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046094	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046095	Callee	ZSTR_VAL		4045962	0					
ANR	4046096	Identifier	ZSTR_VAL		4045962	0					
ANR	4046097	ArgumentList	mname		4045962	1					
ANR	4046098	Argument	mname		4045962	0					
ANR	4046099	Identifier	mname		4045962	0					
ANR	4046100	Argument	ZEND_DESTRUCTOR_FUNC_NAME		4045962	1					
ANR	4046101	Identifier	ZEND_DESTRUCTOR_FUNC_NAME		4045962	0					
ANR	4046102	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046103	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046104	Callee	ZSTR_LEN		4045962	0					
ANR	4046105	Identifier	ZSTR_LEN		4045962	0					
ANR	4046106	ArgumentList	mname		4045962	1					
ANR	4046107	Argument	mname		4045962	0					
ANR	4046108	Identifier	mname		4045962	0					
ANR	4046109	CompoundStatement		9:84:579:579	4045962	1					
ANR	4046110	ExpressionStatement	ce -> destructor = fe	1037:2:36988:37007	4045962	0	True				
ANR	4046111	AssignmentExpression	ce -> destructor = fe		4045962	0		=			
ANR	4046112	PtrMemberAccess	ce -> destructor		4045962	0					
ANR	4046113	Identifier	ce		4045962	0					
ANR	4046114	Identifier	destructor		4045962	1					
ANR	4046115	Identifier	fe		4045962	1					
ANR	4046116	ExpressionStatement	fe -> common . fn_flags |= ZEND_ACC_DTOR	1037:23:37009:37045	4045962	1	True				
ANR	4046117	AssignmentExpression	fe -> common . fn_flags |= ZEND_ACC_DTOR		4045962	0		|=			
ANR	4046118	MemberAccess	fe -> common . fn_flags		4045962	0					
ANR	4046119	PtrMemberAccess	fe -> common		4045962	0					
ANR	4046120	Identifier	fe		4045962	0					
ANR	4046121	Identifier	common		4045962	1					
ANR	4046122	Identifier	fn_flags		4045962	1					
ANR	4046123	Identifier	ZEND_ACC_DTOR		4045962	1					
ANR	4046124	ElseStatement	else		4045962	0					
ANR	4046125	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_GET_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046126	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_GET_FUNC_NAME , ZSTR_LEN ( mname ) )"	1038:12:37059:37120	4045962	0	True				
ANR	4046127	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_GET_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046128	UnaryOperator	!		4045962	0					
ANR	4046129	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_GET_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046130	Callee	strncmp		4045962	0					
ANR	4046131	Identifier	strncmp		4045962	0					
ANR	4046132	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046133	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046134	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046135	Callee	ZSTR_VAL		4045962	0					
ANR	4046136	Identifier	ZSTR_VAL		4045962	0					
ANR	4046137	ArgumentList	mname		4045962	1					
ANR	4046138	Argument	mname		4045962	0					
ANR	4046139	Identifier	mname		4045962	0					
ANR	4046140	Argument	ZEND_GET_FUNC_NAME		4045962	1					
ANR	4046141	Identifier	ZEND_GET_FUNC_NAME		4045962	0					
ANR	4046142	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046143	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046144	Callee	ZSTR_LEN		4045962	0					
ANR	4046145	Identifier	ZSTR_LEN		4045962	0					
ANR	4046146	ArgumentList	mname		4045962	1					
ANR	4046147	Argument	mname		4045962	0					
ANR	4046148	Identifier	mname		4045962	0					
ANR	4046149	CompoundStatement		11:76:718:718	4045962	1					
ANR	4046150	ExpressionStatement	ce -> __get = fe	1039:2:37127:37141	4045962	0	True				
ANR	4046151	AssignmentExpression	ce -> __get = fe		4045962	0		=			
ANR	4046152	PtrMemberAccess	ce -> __get		4045962	0					
ANR	4046153	Identifier	ce		4045962	0					
ANR	4046154	Identifier	__get		4045962	1					
ANR	4046155	Identifier	fe		4045962	1					
ANR	4046156	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	1040:2:37145:37180	4045962	1	True				
ANR	4046157	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		4045962	0		|=			
ANR	4046158	PtrMemberAccess	ce -> ce_flags		4045962	0					
ANR	4046159	Identifier	ce		4045962	0					
ANR	4046160	Identifier	ce_flags		4045962	1					
ANR	4046161	Identifier	ZEND_ACC_USE_GUARDS		4045962	1					
ANR	4046162	ElseStatement	else		4045962	0					
ANR	4046163	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_SET_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046164	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_SET_FUNC_NAME , ZSTR_LEN ( mname ) )"	1041:12:37194:37255	4045962	0	True				
ANR	4046165	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_SET_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046166	UnaryOperator	!		4045962	0					
ANR	4046167	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_SET_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046168	Callee	strncmp		4045962	0					
ANR	4046169	Identifier	strncmp		4045962	0					
ANR	4046170	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046171	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046172	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046173	Callee	ZSTR_VAL		4045962	0					
ANR	4046174	Identifier	ZSTR_VAL		4045962	0					
ANR	4046175	ArgumentList	mname		4045962	1					
ANR	4046176	Argument	mname		4045962	0					
ANR	4046177	Identifier	mname		4045962	0					
ANR	4046178	Argument	ZEND_SET_FUNC_NAME		4045962	1					
ANR	4046179	Identifier	ZEND_SET_FUNC_NAME		4045962	0					
ANR	4046180	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046181	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046182	Callee	ZSTR_LEN		4045962	0					
ANR	4046183	Identifier	ZSTR_LEN		4045962	0					
ANR	4046184	ArgumentList	mname		4045962	1					
ANR	4046185	Argument	mname		4045962	0					
ANR	4046186	Identifier	mname		4045962	0					
ANR	4046187	CompoundStatement		14:76:853:853	4045962	1					
ANR	4046188	ExpressionStatement	ce -> __set = fe	1042:2:37262:37276	4045962	0	True				
ANR	4046189	AssignmentExpression	ce -> __set = fe		4045962	0		=			
ANR	4046190	PtrMemberAccess	ce -> __set		4045962	0					
ANR	4046191	Identifier	ce		4045962	0					
ANR	4046192	Identifier	__set		4045962	1					
ANR	4046193	Identifier	fe		4045962	1					
ANR	4046194	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	1043:2:37280:37315	4045962	1	True				
ANR	4046195	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		4045962	0		|=			
ANR	4046196	PtrMemberAccess	ce -> ce_flags		4045962	0					
ANR	4046197	Identifier	ce		4045962	0					
ANR	4046198	Identifier	ce_flags		4045962	1					
ANR	4046199	Identifier	ZEND_ACC_USE_GUARDS		4045962	1					
ANR	4046200	ElseStatement	else		4045962	0					
ANR	4046201	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALL_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046202	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALL_FUNC_NAME , ZSTR_LEN ( mname ) )"	1044:12:37329:37391	4045962	0	True				
ANR	4046203	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALL_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046204	UnaryOperator	!		4045962	0					
ANR	4046205	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_CALL_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046206	Callee	strncmp		4045962	0					
ANR	4046207	Identifier	strncmp		4045962	0					
ANR	4046208	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046209	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046210	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046211	Callee	ZSTR_VAL		4045962	0					
ANR	4046212	Identifier	ZSTR_VAL		4045962	0					
ANR	4046213	ArgumentList	mname		4045962	1					
ANR	4046214	Argument	mname		4045962	0					
ANR	4046215	Identifier	mname		4045962	0					
ANR	4046216	Argument	ZEND_CALL_FUNC_NAME		4045962	1					
ANR	4046217	Identifier	ZEND_CALL_FUNC_NAME		4045962	0					
ANR	4046218	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046219	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046220	Callee	ZSTR_LEN		4045962	0					
ANR	4046221	Identifier	ZSTR_LEN		4045962	0					
ANR	4046222	ArgumentList	mname		4045962	1					
ANR	4046223	Argument	mname		4045962	0					
ANR	4046224	Identifier	mname		4045962	0					
ANR	4046225	CompoundStatement		17:77:989:989	4045962	1					
ANR	4046226	ExpressionStatement	ce -> __call = fe	1045:2:37398:37413	4045962	0	True				
ANR	4046227	AssignmentExpression	ce -> __call = fe		4045962	0		=			
ANR	4046228	PtrMemberAccess	ce -> __call		4045962	0					
ANR	4046229	Identifier	ce		4045962	0					
ANR	4046230	Identifier	__call		4045962	1					
ANR	4046231	Identifier	fe		4045962	1					
ANR	4046232	ElseStatement	else		4045962	0					
ANR	4046233	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_UNSET_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046234	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_UNSET_FUNC_NAME , ZSTR_LEN ( mname ) )"	1046:12:37427:37490	4045962	0	True				
ANR	4046235	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_UNSET_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046236	UnaryOperator	!		4045962	0					
ANR	4046237	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_UNSET_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046238	Callee	strncmp		4045962	0					
ANR	4046239	Identifier	strncmp		4045962	0					
ANR	4046240	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046241	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046242	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046243	Callee	ZSTR_VAL		4045962	0					
ANR	4046244	Identifier	ZSTR_VAL		4045962	0					
ANR	4046245	ArgumentList	mname		4045962	1					
ANR	4046246	Argument	mname		4045962	0					
ANR	4046247	Identifier	mname		4045962	0					
ANR	4046248	Argument	ZEND_UNSET_FUNC_NAME		4045962	1					
ANR	4046249	Identifier	ZEND_UNSET_FUNC_NAME		4045962	0					
ANR	4046250	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046251	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046252	Callee	ZSTR_LEN		4045962	0					
ANR	4046253	Identifier	ZSTR_LEN		4045962	0					
ANR	4046254	ArgumentList	mname		4045962	1					
ANR	4046255	Argument	mname		4045962	0					
ANR	4046256	Identifier	mname		4045962	0					
ANR	4046257	CompoundStatement		19:78:1088:1088	4045962	1					
ANR	4046258	ExpressionStatement	ce -> __unset = fe	1047:2:37497:37513	4045962	0	True				
ANR	4046259	AssignmentExpression	ce -> __unset = fe		4045962	0		=			
ANR	4046260	PtrMemberAccess	ce -> __unset		4045962	0					
ANR	4046261	Identifier	ce		4045962	0					
ANR	4046262	Identifier	__unset		4045962	1					
ANR	4046263	Identifier	fe		4045962	1					
ANR	4046264	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	1048:2:37517:37552	4045962	1	True				
ANR	4046265	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		4045962	0		|=			
ANR	4046266	PtrMemberAccess	ce -> ce_flags		4045962	0					
ANR	4046267	Identifier	ce		4045962	0					
ANR	4046268	Identifier	ce_flags		4045962	1					
ANR	4046269	Identifier	ZEND_ACC_USE_GUARDS		4045962	1					
ANR	4046270	ElseStatement	else		4045962	0					
ANR	4046271	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_ISSET_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046272	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_ISSET_FUNC_NAME , ZSTR_LEN ( mname ) )"	1049:12:37566:37629	4045962	0	True				
ANR	4046273	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_ISSET_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046274	UnaryOperator	!		4045962	0					
ANR	4046275	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_ISSET_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046276	Callee	strncmp		4045962	0					
ANR	4046277	Identifier	strncmp		4045962	0					
ANR	4046278	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046279	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046280	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046281	Callee	ZSTR_VAL		4045962	0					
ANR	4046282	Identifier	ZSTR_VAL		4045962	0					
ANR	4046283	ArgumentList	mname		4045962	1					
ANR	4046284	Argument	mname		4045962	0					
ANR	4046285	Identifier	mname		4045962	0					
ANR	4046286	Argument	ZEND_ISSET_FUNC_NAME		4045962	1					
ANR	4046287	Identifier	ZEND_ISSET_FUNC_NAME		4045962	0					
ANR	4046288	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046289	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046290	Callee	ZSTR_LEN		4045962	0					
ANR	4046291	Identifier	ZSTR_LEN		4045962	0					
ANR	4046292	ArgumentList	mname		4045962	1					
ANR	4046293	Argument	mname		4045962	0					
ANR	4046294	Identifier	mname		4045962	0					
ANR	4046295	CompoundStatement		22:78:1227:1227	4045962	1					
ANR	4046296	ExpressionStatement	ce -> __isset = fe	1050:2:37636:37652	4045962	0	True				
ANR	4046297	AssignmentExpression	ce -> __isset = fe		4045962	0		=			
ANR	4046298	PtrMemberAccess	ce -> __isset		4045962	0					
ANR	4046299	Identifier	ce		4045962	0					
ANR	4046300	Identifier	__isset		4045962	1					
ANR	4046301	Identifier	fe		4045962	1					
ANR	4046302	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	1051:2:37656:37691	4045962	1	True				
ANR	4046303	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		4045962	0		|=			
ANR	4046304	PtrMemberAccess	ce -> ce_flags		4045962	0					
ANR	4046305	Identifier	ce		4045962	0					
ANR	4046306	Identifier	ce_flags		4045962	1					
ANR	4046307	Identifier	ZEND_ACC_USE_GUARDS		4045962	1					
ANR	4046308	ElseStatement	else		4045962	0					
ANR	4046309	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALLSTATIC_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046310	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALLSTATIC_FUNC_NAME , ZSTR_LEN ( mname ) )"	1052:12:37705:37773	4045962	0	True				
ANR	4046311	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALLSTATIC_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046312	UnaryOperator	!		4045962	0					
ANR	4046313	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_CALLSTATIC_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046314	Callee	strncmp		4045962	0					
ANR	4046315	Identifier	strncmp		4045962	0					
ANR	4046316	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046317	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046318	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046319	Callee	ZSTR_VAL		4045962	0					
ANR	4046320	Identifier	ZSTR_VAL		4045962	0					
ANR	4046321	ArgumentList	mname		4045962	1					
ANR	4046322	Argument	mname		4045962	0					
ANR	4046323	Identifier	mname		4045962	0					
ANR	4046324	Argument	ZEND_CALLSTATIC_FUNC_NAME		4045962	1					
ANR	4046325	Identifier	ZEND_CALLSTATIC_FUNC_NAME		4045962	0					
ANR	4046326	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046327	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046328	Callee	ZSTR_LEN		4045962	0					
ANR	4046329	Identifier	ZSTR_LEN		4045962	0					
ANR	4046330	ArgumentList	mname		4045962	1					
ANR	4046331	Argument	mname		4045962	0					
ANR	4046332	Identifier	mname		4045962	0					
ANR	4046333	CompoundStatement		25:83:1371:1371	4045962	1					
ANR	4046334	ExpressionStatement	ce -> __callstatic = fe	1053:2:37780:37801	4045962	0	True				
ANR	4046335	AssignmentExpression	ce -> __callstatic = fe		4045962	0		=			
ANR	4046336	PtrMemberAccess	ce -> __callstatic		4045962	0					
ANR	4046337	Identifier	ce		4045962	0					
ANR	4046338	Identifier	__callstatic		4045962	1					
ANR	4046339	Identifier	fe		4045962	1					
ANR	4046340	ElseStatement	else		4045962	0					
ANR	4046341	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_TOSTRING_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046342	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_TOSTRING_FUNC_NAME , ZSTR_LEN ( mname ) )"	1054:12:37815:37881	4045962	0	True				
ANR	4046343	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_TOSTRING_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046344	UnaryOperator	!		4045962	0					
ANR	4046345	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_TOSTRING_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046346	Callee	strncmp		4045962	0					
ANR	4046347	Identifier	strncmp		4045962	0					
ANR	4046348	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046349	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046350	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046351	Callee	ZSTR_VAL		4045962	0					
ANR	4046352	Identifier	ZSTR_VAL		4045962	0					
ANR	4046353	ArgumentList	mname		4045962	1					
ANR	4046354	Argument	mname		4045962	0					
ANR	4046355	Identifier	mname		4045962	0					
ANR	4046356	Argument	ZEND_TOSTRING_FUNC_NAME		4045962	1					
ANR	4046357	Identifier	ZEND_TOSTRING_FUNC_NAME		4045962	0					
ANR	4046358	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046359	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046360	Callee	ZSTR_LEN		4045962	0					
ANR	4046361	Identifier	ZSTR_LEN		4045962	0					
ANR	4046362	ArgumentList	mname		4045962	1					
ANR	4046363	Argument	mname		4045962	0					
ANR	4046364	Identifier	mname		4045962	0					
ANR	4046365	CompoundStatement		27:81:1479:1479	4045962	1					
ANR	4046366	ExpressionStatement	ce -> __tostring = fe	1055:2:37888:37907	4045962	0	True				
ANR	4046367	AssignmentExpression	ce -> __tostring = fe		4045962	0		=			
ANR	4046368	PtrMemberAccess	ce -> __tostring		4045962	0					
ANR	4046369	Identifier	ce		4045962	0					
ANR	4046370	Identifier	__tostring		4045962	1					
ANR	4046371	Identifier	fe		4045962	1					
ANR	4046372	ElseStatement	else		4045962	0					
ANR	4046373	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_DEBUGINFO_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		4045962	0					
ANR	4046374	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_DEBUGINFO_FUNC_NAME , ZSTR_LEN ( mname ) )"	1056:12:37921:37988	4045962	0	True				
ANR	4046375	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_DEBUGINFO_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046376	UnaryOperator	!		4045962	0					
ANR	4046377	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_DEBUGINFO_FUNC_NAME , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046378	Callee	strncmp		4045962	0					
ANR	4046379	Identifier	strncmp		4045962	0					
ANR	4046380	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046381	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046382	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046383	Callee	ZSTR_VAL		4045962	0					
ANR	4046384	Identifier	ZSTR_VAL		4045962	0					
ANR	4046385	ArgumentList	mname		4045962	1					
ANR	4046386	Argument	mname		4045962	0					
ANR	4046387	Identifier	mname		4045962	0					
ANR	4046388	Argument	ZEND_DEBUGINFO_FUNC_NAME		4045962	1					
ANR	4046389	Identifier	ZEND_DEBUGINFO_FUNC_NAME		4045962	0					
ANR	4046390	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046391	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046392	Callee	ZSTR_LEN		4045962	0					
ANR	4046393	Identifier	ZSTR_LEN		4045962	0					
ANR	4046394	ArgumentList	mname		4045962	1					
ANR	4046395	Argument	mname		4045962	0					
ANR	4046396	Identifier	mname		4045962	0					
ANR	4046397	CompoundStatement		29:82:1586:1586	4045962	1					
ANR	4046398	ExpressionStatement	ce -> __debugInfo = fe	1057:2:37995:38015	4045962	0	True				
ANR	4046399	AssignmentExpression	ce -> __debugInfo = fe		4045962	0		=			
ANR	4046400	PtrMemberAccess	ce -> __debugInfo		4045962	0					
ANR	4046401	Identifier	ce		4045962	0					
ANR	4046402	Identifier	__debugInfo		4045962	1					
ANR	4046403	Identifier	fe		4045962	1					
ANR	4046404	ElseStatement	else		4045962	0					
ANR	4046405	IfStatement	if ( ZSTR_LEN ( ce -> name ) == ZSTR_LEN ( mname ) )		4045962	0					
ANR	4046406	Condition	ZSTR_LEN ( ce -> name ) == ZSTR_LEN ( mname )	1058:12:38029:38065	4045962	0	True				
ANR	4046407	EqualityExpression	ZSTR_LEN ( ce -> name ) == ZSTR_LEN ( mname )		4045962	0		==			
ANR	4046408	CallExpression	ZSTR_LEN ( ce -> name )		4045962	0					
ANR	4046409	Callee	ZSTR_LEN		4045962	0					
ANR	4046410	Identifier	ZSTR_LEN		4045962	0					
ANR	4046411	ArgumentList	ce -> name		4045962	1					
ANR	4046412	Argument	ce -> name		4045962	0					
ANR	4046413	PtrMemberAccess	ce -> name		4045962	0					
ANR	4046414	Identifier	ce		4045962	0					
ANR	4046415	Identifier	name		4045962	1					
ANR	4046416	CallExpression	ZSTR_LEN ( mname )		4045962	1					
ANR	4046417	Callee	ZSTR_LEN		4045962	0					
ANR	4046418	Identifier	ZSTR_LEN		4045962	0					
ANR	4046419	ArgumentList	mname		4045962	1					
ANR	4046420	Argument	mname		4045962	0					
ANR	4046421	Identifier	mname		4045962	0					
ANR	4046422	CompoundStatement		32:2:1667:1726	4045962	1					
ANR	4046423	IdentifierDeclStatement	zend_string * lowercase_name = zend_string_tolower ( ce -> name ) ;	1059:2:38072:38131	4045962	0	True				
ANR	4046424	IdentifierDecl	* lowercase_name = zend_string_tolower ( ce -> name )		4045962	0					
ANR	4046425	IdentifierDeclType	zend_string *		4045962	0					
ANR	4046426	Identifier	lowercase_name		4045962	1					
ANR	4046427	AssignmentExpression	* lowercase_name = zend_string_tolower ( ce -> name )		4045962	2		=			
ANR	4046428	Identifier	lowercase_name		4045962	0					
ANR	4046429	CallExpression	zend_string_tolower ( ce -> name )		4045962	1					
ANR	4046430	Callee	zend_string_tolower		4045962	0					
ANR	4046431	Identifier	zend_string_tolower		4045962	0					
ANR	4046432	ArgumentList	ce -> name		4045962	1					
ANR	4046433	Argument	ce -> name		4045962	0					
ANR	4046434	PtrMemberAccess	ce -> name		4045962	0					
ANR	4046435	Identifier	ce		4045962	0					
ANR	4046436	Identifier	name		4045962	1					
ANR	4046437	ExpressionStatement	lowercase_name = zend_new_interned_string ( lowercase_name )	1060:2:38135:38192	4045962	1	True				
ANR	4046438	AssignmentExpression	lowercase_name = zend_new_interned_string ( lowercase_name )		4045962	0		=			
ANR	4046439	Identifier	lowercase_name		4045962	0					
ANR	4046440	CallExpression	zend_new_interned_string ( lowercase_name )		4045962	1					
ANR	4046441	Callee	zend_new_interned_string		4045962	0					
ANR	4046442	Identifier	zend_new_interned_string		4045962	0					
ANR	4046443	ArgumentList	lowercase_name		4045962	1					
ANR	4046444	Argument	lowercase_name		4045962	0					
ANR	4046445	Identifier	lowercase_name		4045962	0					
ANR	4046446	IfStatement	"if ( ! memcmp ( ZSTR_VAL ( mname ) , ZSTR_VAL ( lowercase_name ) , ZSTR_LEN ( mname ) ) )"		4045962	2					
ANR	4046447	Condition	"! memcmp ( ZSTR_VAL ( mname ) , ZSTR_VAL ( lowercase_name ) , ZSTR_LEN ( mname ) )"	1061:6:38200:38266	4045962	0	True				
ANR	4046448	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( mname ) , ZSTR_VAL ( lowercase_name ) , ZSTR_LEN ( mname ) )"		4045962	0					
ANR	4046449	UnaryOperator	!		4045962	0					
ANR	4046450	CallExpression	"memcmp ( ZSTR_VAL ( mname ) , ZSTR_VAL ( lowercase_name ) , ZSTR_LEN ( mname ) )"		4045962	1					
ANR	4046451	Callee	memcmp		4045962	0					
ANR	4046452	Identifier	memcmp		4045962	0					
ANR	4046453	ArgumentList	ZSTR_VAL ( mname )		4045962	1					
ANR	4046454	Argument	ZSTR_VAL ( mname )		4045962	0					
ANR	4046455	CallExpression	ZSTR_VAL ( mname )		4045962	0					
ANR	4046456	Callee	ZSTR_VAL		4045962	0					
ANR	4046457	Identifier	ZSTR_VAL		4045962	0					
ANR	4046458	ArgumentList	mname		4045962	1					
ANR	4046459	Argument	mname		4045962	0					
ANR	4046460	Identifier	mname		4045962	0					
ANR	4046461	Argument	ZSTR_VAL ( lowercase_name )		4045962	1					
ANR	4046462	CallExpression	ZSTR_VAL ( lowercase_name )		4045962	0					
ANR	4046463	Callee	ZSTR_VAL		4045962	0					
ANR	4046464	Identifier	ZSTR_VAL		4045962	0					
ANR	4046465	ArgumentList	lowercase_name		4045962	1					
ANR	4046466	Argument	lowercase_name		4045962	0					
ANR	4046467	Identifier	lowercase_name		4045962	0					
ANR	4046468	Argument	ZSTR_LEN ( mname )		4045962	2					
ANR	4046469	CallExpression	ZSTR_LEN ( mname )		4045962	0					
ANR	4046470	Callee	ZSTR_LEN		4045962	0					
ANR	4046471	Identifier	ZSTR_LEN		4045962	0					
ANR	4046472	ArgumentList	mname		4045962	1					
ANR	4046473	Argument	mname		4045962	0					
ANR	4046474	Identifier	mname		4045962	0					
ANR	4046475	CompoundStatement		34:75:1864:1864	4045962	1					
ANR	4046476	IfStatement	if ( ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor ) )		4045962	0					
ANR	4046477	Condition	ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor )	1062:7:38278:38356	4045962	0	True				
ANR	4046478	AndExpression	ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor )		4045962	0		&&			
ANR	4046479	PtrMemberAccess	ce -> constructor		4045962	0					
ANR	4046480	Identifier	ce		4045962	0					
ANR	4046481	Identifier	constructor		4045962	1					
ANR	4046482	OrExpression	! ce -> parent || ce -> constructor != ce -> parent -> constructor		4045962	1		||			
ANR	4046483	UnaryOperationExpression	! ce -> parent		4045962	0					
ANR	4046484	UnaryOperator	!		4045962	0					
ANR	4046485	PtrMemberAccess	ce -> parent		4045962	1					
ANR	4046486	Identifier	ce		4045962	0					
ANR	4046487	Identifier	parent		4045962	1					
ANR	4046488	EqualityExpression	ce -> constructor != ce -> parent -> constructor		4045962	1		!=			
ANR	4046489	PtrMemberAccess	ce -> constructor		4045962	0					
ANR	4046490	Identifier	ce		4045962	0					
ANR	4046491	Identifier	constructor		4045962	1					
ANR	4046492	PtrMemberAccess	ce -> parent -> constructor		4045962	1					
ANR	4046493	PtrMemberAccess	ce -> parent		4045962	0					
ANR	4046494	Identifier	ce		4045962	0					
ANR	4046495	Identifier	parent		4045962	1					
ANR	4046496	Identifier	constructor		4045962	1					
ANR	4046497	CompoundStatement		35:88:1954:1954	4045962	1					
ANR	4046498	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s has colliding constructor definitions coming from traits"" , ZSTR_VAL ( ce -> name ) )"	1063:4:38365:38484	4045962	0	True				
ANR	4046499	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s has colliding constructor definitions coming from traits"" , ZSTR_VAL ( ce -> name ) )"		4045962	0					
ANR	4046500	Callee	zend_error_noreturn		4045962	0					
ANR	4046501	Identifier	zend_error_noreturn		4045962	0					
ANR	4046502	ArgumentList	E_COMPILE_ERROR		4045962	1					
ANR	4046503	Argument	E_COMPILE_ERROR		4045962	0					
ANR	4046504	Identifier	E_COMPILE_ERROR		4045962	0					
ANR	4046505	Argument	"""%s has colliding constructor definitions coming from traits"""		4045962	1					
ANR	4046506	PrimaryExpression	"""%s has colliding constructor definitions coming from traits"""		4045962	0					
ANR	4046507	Argument	ZSTR_VAL ( ce -> name )		4045962	2					
ANR	4046508	CallExpression	ZSTR_VAL ( ce -> name )		4045962	0					
ANR	4046509	Callee	ZSTR_VAL		4045962	0					
ANR	4046510	Identifier	ZSTR_VAL		4045962	0					
ANR	4046511	ArgumentList	ce -> name		4045962	1					
ANR	4046512	Argument	ce -> name		4045962	0					
ANR	4046513	PtrMemberAccess	ce -> name		4045962	0					
ANR	4046514	Identifier	ce		4045962	0					
ANR	4046515	Identifier	name		4045962	1					
ANR	4046516	ExpressionStatement	ce -> constructor = fe	1065:3:38494:38514	4045962	1	True				
ANR	4046517	AssignmentExpression	ce -> constructor = fe		4045962	0		=			
ANR	4046518	PtrMemberAccess	ce -> constructor		4045962	0					
ANR	4046519	Identifier	ce		4045962	0					
ANR	4046520	Identifier	constructor		4045962	1					
ANR	4046521	Identifier	fe		4045962	1					
ANR	4046522	ExpressionStatement	fe -> common . fn_flags |= ZEND_ACC_CTOR	1066:3:38519:38555	4045962	2	True				
ANR	4046523	AssignmentExpression	fe -> common . fn_flags |= ZEND_ACC_CTOR		4045962	0		|=			
ANR	4046524	MemberAccess	fe -> common . fn_flags		4045962	0					
ANR	4046525	PtrMemberAccess	fe -> common		4045962	0					
ANR	4046526	Identifier	fe		4045962	0					
ANR	4046527	Identifier	common		4045962	1					
ANR	4046528	Identifier	fn_flags		4045962	1					
ANR	4046529	Identifier	ZEND_ACC_CTOR		4045962	1					
ANR	4046530	ExpressionStatement	zend_string_release ( lowercase_name )	1068:2:38563:38598	4045962	3	True				
ANR	4046531	CallExpression	zend_string_release ( lowercase_name )		4045962	0					
ANR	4046532	Callee	zend_string_release		4045962	0					
ANR	4046533	Identifier	zend_string_release		4045962	0					
ANR	4046534	ArgumentList	lowercase_name		4045962	1					
ANR	4046535	Argument	lowercase_name		4045962	0					
ANR	4046536	Identifier	lowercase_name		4045962	0					
ANR	4046537	ReturnType	static void		4045962	1					
ANR	4046538	Identifier	zend_add_magic_methods		4045962	2					
ANR	4046539	ParameterList	"zend_class_entry * ce , zend_string * mname , zend_function * fe"		4045962	3					
ANR	4046540	Parameter	zend_class_entry * ce	1027:35:36333:36352	4045962	0	True				
ANR	4046541	ParameterType	zend_class_entry *		4045962	0					
ANR	4046542	Identifier	ce		4045962	1					
ANR	4046543	Parameter	zend_string * mname	1027:57:36355:36372	4045962	1	True				
ANR	4046544	ParameterType	zend_string *		4045962	0					
ANR	4046545	Identifier	mname		4045962	1					
ANR	4046546	Parameter	zend_function * fe	1027:77:36375:36391	4045962	2	True				
ANR	4046547	ParameterType	zend_function *		4045962	0					
ANR	4046548	Identifier	fe		4045962	1					
ANR	4046549	CFGEntryNode	ENTRY		4045962		True				
ANR	4046550	CFGExitNode	EXIT		4045962		True				
ANR	4046551	Symbol	ce -> __set		4045962						
ANR	4046552	Symbol	fe -> common . fn_flags		4045962						
ANR	4046553	Symbol	ZEND_CALLSTATIC_FUNC_NAME		4045962						
ANR	4046554	Symbol	ZEND_CONSTRUCTOR_FUNC_NAME		4045962						
ANR	4046555	Symbol	E_COMPILE_ERROR		4045962						
ANR	4046556	Symbol	ZEND_ACC_USE_GUARDS		4045962						
ANR	4046557	Symbol	ZEND_ACC_DTOR		4045962						
ANR	4046558	Symbol	mname		4045962						
ANR	4046559	Symbol	* ce		4045962						
ANR	4046560	Symbol	* * ce		4045962						
ANR	4046561	Symbol	ZEND_GET_FUNC_NAME		4045962						
ANR	4046562	Symbol	ZEND_DEBUGINFO_FUNC_NAME		4045962						
ANR	4046563	Symbol	ZEND_CALL_FUNC_NAME		4045962						
ANR	4046564	Symbol	zend_string_tolower		4045962						
ANR	4046565	Symbol	strncmp		4045962						
ANR	4046566	Symbol	ce -> __tostring		4045962						
ANR	4046567	Symbol	* ce -> parent		4045962						
ANR	4046568	Symbol	memcmp		4045962						
ANR	4046569	Symbol	ZEND_CLONE_FUNC_NAME		4045962						
ANR	4046570	Symbol	ce -> __get		4045962						
ANR	4046571	Symbol	ZEND_ISSET_FUNC_NAME		4045962						
ANR	4046572	Symbol	ce -> name		4045962						
ANR	4046573	Symbol	ce -> __callstatic		4045962						
ANR	4046574	Symbol	ZEND_SET_FUNC_NAME		4045962						
ANR	4046575	Symbol	fe -> common		4045962						
ANR	4046576	Symbol	ce -> parent -> constructor		4045962						
ANR	4046577	Symbol	ce		4045962						
ANR	4046578	Symbol	ce -> constructor		4045962						
ANR	4046579	Symbol	ce -> destructor		4045962						
ANR	4046580	Symbol	ce -> __isset		4045962						
ANR	4046581	Symbol	ce -> parent		4045962						
ANR	4046582	Symbol	* fe		4045962						
ANR	4046583	Symbol	ZEND_ACC_CLONE		4045962						
ANR	4046584	Symbol	ZSTR_VAL		4045962						
ANR	4046585	Symbol	ce -> ce_flags		4045962						
ANR	4046586	Symbol	ce -> __debugInfo		4045962						
ANR	4046587	Symbol	ce -> __unset		4045962						
ANR	4046588	Symbol	zend_new_interned_string		4045962						
ANR	4046589	Symbol	ZEND_ACC_CTOR		4045962						
ANR	4046590	Symbol	ce -> __call		4045962						
ANR	4046591	Symbol	ZSTR_LEN		4045962						
ANR	4046592	Symbol	lowercase_name		4045962						
ANR	4046593	Symbol	ZEND_DESTRUCTOR_FUNC_NAME		4045962						
ANR	4046594	Symbol	ZEND_TOSTRING_FUNC_NAME		4045962						
ANR	4046595	Symbol	ce -> clone		4045962						
ANR	4046596	Symbol	ZEND_UNSET_FUNC_NAME		4045962						
ANR	4046597	Symbol	fe		4045962						
ANR	4046598	Function	zend_add_trait_method	1073:0:38616:42408							
ANR	4046599	FunctionDef	"zend_add_trait_method (zend_class_entry * ce , const char * name , zend_string * key , zend_function * fn , HashTable * * overriden)"		4046598	0					
ANR	4046600	CompoundStatement		1074:0:38760:42408	4046598	0					
ANR	4046601	IdentifierDeclStatement	zend_function * existing_fn = NULL ;	1075:1:38763:38796	4046598	0	True				
ANR	4046602	IdentifierDecl	* existing_fn = NULL		4046598	0					
ANR	4046603	IdentifierDeclType	zend_function *		4046598	0					
ANR	4046604	Identifier	existing_fn		4046598	1					
ANR	4046605	AssignmentExpression	* existing_fn = NULL		4046598	2		=			
ANR	4046606	Identifier	NULL		4046598	0					
ANR	4046607	Identifier	NULL		4046598	1					
ANR	4046608	IdentifierDeclStatement	zend_function * new_fn ;	1076:1:38799:38820	4046598	1	True				
ANR	4046609	IdentifierDecl	* new_fn		4046598	0					
ANR	4046610	IdentifierDeclType	zend_function *		4046598	0					
ANR	4046611	Identifier	new_fn		4046598	1					
ANR	4046612	IfStatement	"if ( ( existing_fn = zend_hash_find_ptr ( & ce -> function_table , key ) ) != NULL )"		4046598	2					
ANR	4046613	Condition	"( existing_fn = zend_hash_find_ptr ( & ce -> function_table , key ) ) != NULL"	1078:5:38828:38895	4046598	0	True				
ANR	4046614	EqualityExpression	"( existing_fn = zend_hash_find_ptr ( & ce -> function_table , key ) ) != NULL"		4046598	0		!=			
ANR	4046615	AssignmentExpression	"existing_fn = zend_hash_find_ptr ( & ce -> function_table , key )"		4046598	0		=			
ANR	4046616	Identifier	existing_fn		4046598	0					
ANR	4046617	CallExpression	"zend_hash_find_ptr ( & ce -> function_table , key )"		4046598	1					
ANR	4046618	Callee	zend_hash_find_ptr		4046598	0					
ANR	4046619	Identifier	zend_hash_find_ptr		4046598	0					
ANR	4046620	ArgumentList	& ce -> function_table		4046598	1					
ANR	4046621	Argument	& ce -> function_table		4046598	0					
ANR	4046622	UnaryOperationExpression	& ce -> function_table		4046598	0					
ANR	4046623	UnaryOperator	&		4046598	0					
ANR	4046624	PtrMemberAccess	ce -> function_table		4046598	1					
ANR	4046625	Identifier	ce		4046598	0					
ANR	4046626	Identifier	function_table		4046598	1					
ANR	4046627	Argument	key		4046598	1					
ANR	4046628	Identifier	key		4046598	0					
ANR	4046629	Identifier	NULL		4046598	1					
ANR	4046630	CompoundStatement		5:75:137:137	4046598	1					
ANR	4046631	IfStatement	if ( existing_fn -> common . scope == ce )		4046598	0					
ANR	4046632	Condition	existing_fn -> common . scope == ce	1079:6:38906:38936	4046598	0	True				
ANR	4046633	EqualityExpression	existing_fn -> common . scope == ce		4046598	0		==			
ANR	4046634	MemberAccess	existing_fn -> common . scope		4046598	0					
ANR	4046635	PtrMemberAccess	existing_fn -> common		4046598	0					
ANR	4046636	Identifier	existing_fn		4046598	0					
ANR	4046637	Identifier	common		4046598	1					
ANR	4046638	Identifier	scope		4046598	1					
ANR	4046639	Identifier	ce		4046598	1					
ANR	4046640	CompoundStatement		6:39:178:178	4046598	1					
ANR	4046641	IfStatement	if ( * overriden )		4046598	0					
ANR	4046642	Condition	* overriden	1082:7:39081:39090	4046598	0	True				
ANR	4046643	UnaryOperationExpression	* overriden		4046598	0					
ANR	4046644	UnaryOperator	*		4046598	0					
ANR	4046645	Identifier	overriden		4046598	1					
ANR	4046646	CompoundStatement		9:19:332:332	4046598	1					
ANR	4046647	IfStatement	"if ( ( existing_fn = zend_hash_find_ptr ( * overriden , key ) ) != NULL )"		4046598	0					
ANR	4046648	Condition	"( existing_fn = zend_hash_find_ptr ( * overriden , key ) ) != NULL"	1083:8:39103:39161	4046598	0	True				
ANR	4046649	EqualityExpression	"( existing_fn = zend_hash_find_ptr ( * overriden , key ) ) != NULL"		4046598	0		!=			
ANR	4046650	AssignmentExpression	"existing_fn = zend_hash_find_ptr ( * overriden , key )"		4046598	0		=			
ANR	4046651	Identifier	existing_fn		4046598	0					
ANR	4046652	CallExpression	"zend_hash_find_ptr ( * overriden , key )"		4046598	1					
ANR	4046653	Callee	zend_hash_find_ptr		4046598	0					
ANR	4046654	Identifier	zend_hash_find_ptr		4046598	0					
ANR	4046655	ArgumentList	* overriden		4046598	1					
ANR	4046656	Argument	* overriden		4046598	0					
ANR	4046657	UnaryOperationExpression	* overriden		4046598	0					
ANR	4046658	UnaryOperator	*		4046598	0					
ANR	4046659	Identifier	overriden		4046598	1					
ANR	4046660	Argument	key		4046598	1					
ANR	4046661	Identifier	key		4046598	0					
ANR	4046662	Identifier	NULL		4046598	1					
ANR	4046663	CompoundStatement		10:69:403:403	4046598	1					
ANR	4046664	IfStatement	if ( existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		4046598	0					
ANR	4046665	Condition	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1084:9:39175:39222	4046598	0	True				
ANR	4046666	BitAndExpression	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT		4046598	0		&			
ANR	4046667	MemberAccess	existing_fn -> common . fn_flags		4046598	0					
ANR	4046668	PtrMemberAccess	existing_fn -> common		4046598	0					
ANR	4046669	Identifier	existing_fn		4046598	0					
ANR	4046670	Identifier	common		4046598	1					
ANR	4046671	Identifier	fn_flags		4046598	1					
ANR	4046672	Identifier	ZEND_ACC_ABSTRACT		4046598	1					
ANR	4046673	CompoundStatement		11:59:464:464	4046598	1					
ANR	4046674	IfStatement	"if ( UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) ) )"		4046598	0					
ANR	4046675	Condition	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) )"	1086:10:39330:39397	4046598	0	True				
ANR	4046676	CallExpression	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) )"		4046598	0					
ANR	4046677	Callee	UNEXPECTED		4046598	0					
ANR	4046678	Identifier	UNEXPECTED		4046598	0					
ANR	4046679	ArgumentList	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		4046598	1					
ANR	4046680	Argument	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		4046598	0					
ANR	4046681	UnaryOperationExpression	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		4046598	0					
ANR	4046682	UnaryOperator	!		4046598	0					
ANR	4046683	CallExpression	"zend_traits_method_compatibility_check ( fn , existing_fn )"		4046598	1					
ANR	4046684	Callee	zend_traits_method_compatibility_check		4046598	0					
ANR	4046685	Identifier	zend_traits_method_compatibility_check		4046598	0					
ANR	4046686	ArgumentList	fn		4046598	1					
ANR	4046687	Argument	fn		4046598	0					
ANR	4046688	Identifier	fn		4046598	0					
ANR	4046689	Argument	existing_fn		4046598	1					
ANR	4046690	Identifier	existing_fn		4046598	0					
ANR	4046691	CompoundStatement		13:80:639:639	4046598	1					
ANR	4046692	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"	1087:7:39409:39608	4046598	0	True				
ANR	4046693	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"		4046598	0					
ANR	4046694	Callee	zend_error_noreturn		4046598	0					
ANR	4046695	Identifier	zend_error_noreturn		4046598	0					
ANR	4046696	ArgumentList	E_COMPILE_ERROR		4046598	1					
ANR	4046697	Argument	E_COMPILE_ERROR		4046598	0					
ANR	4046698	Identifier	E_COMPILE_ERROR		4046598	0					
ANR	4046699	Argument	"""Declaration of %s must be compatible with %s"""		4046598	1					
ANR	4046700	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		4046598	0					
ANR	4046701	Argument	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		4046598	2					
ANR	4046702	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		4046598	0					
ANR	4046703	Callee	ZSTR_VAL		4046598	0					
ANR	4046704	Identifier	ZSTR_VAL		4046598	0					
ANR	4046705	ArgumentList	zend_get_function_declaration ( fn )		4046598	1					
ANR	4046706	Argument	zend_get_function_declaration ( fn )		4046598	0					
ANR	4046707	CallExpression	zend_get_function_declaration ( fn )		4046598	0					
ANR	4046708	Callee	zend_get_function_declaration		4046598	0					
ANR	4046709	Identifier	zend_get_function_declaration		4046598	0					
ANR	4046710	ArgumentList	fn		4046598	1					
ANR	4046711	Argument	fn		4046598	0					
ANR	4046712	Identifier	fn		4046598	0					
ANR	4046713	Argument	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		4046598	3					
ANR	4046714	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		4046598	0					
ANR	4046715	Callee	ZSTR_VAL		4046598	0					
ANR	4046716	Identifier	ZSTR_VAL		4046598	0					
ANR	4046717	ArgumentList	zend_get_function_declaration ( existing_fn )		4046598	1					
ANR	4046718	Argument	zend_get_function_declaration ( existing_fn )		4046598	0					
ANR	4046719	CallExpression	zend_get_function_declaration ( existing_fn )		4046598	0					
ANR	4046720	Callee	zend_get_function_declaration		4046598	0					
ANR	4046721	Identifier	zend_get_function_declaration		4046598	0					
ANR	4046722	ArgumentList	existing_fn		4046598	1					
ANR	4046723	Argument	existing_fn		4046598	0					
ANR	4046724	Identifier	existing_fn		4046598	0					
ANR	4046725	ElseStatement	else		4046598	0					
ANR	4046726	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		4046598	0					
ANR	4046727	Condition	fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1091:16:39634:39672	4046598	0	True				
ANR	4046728	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_ABSTRACT		4046598	0		&			
ANR	4046729	MemberAccess	fn -> common . fn_flags		4046598	0					
ANR	4046730	PtrMemberAccess	fn -> common		4046598	0					
ANR	4046731	Identifier	fn		4046598	0					
ANR	4046732	Identifier	common		4046598	1					
ANR	4046733	Identifier	fn_flags		4046598	1					
ANR	4046734	Identifier	ZEND_ACC_ABSTRACT		4046598	1					
ANR	4046735	CompoundStatement		18:57:914:914	4046598	1					
ANR	4046736	IfStatement	"if ( UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) ) )"		4046598	0					
ANR	4046737	Condition	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) )"	1093:10:39774:39841	4046598	0	True				
ANR	4046738	CallExpression	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) )"		4046598	0					
ANR	4046739	Callee	UNEXPECTED		4046598	0					
ANR	4046740	Identifier	UNEXPECTED		4046598	0					
ANR	4046741	ArgumentList	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		4046598	1					
ANR	4046742	Argument	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		4046598	0					
ANR	4046743	UnaryOperationExpression	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		4046598	0					
ANR	4046744	UnaryOperator	!		4046598	0					
ANR	4046745	CallExpression	"zend_traits_method_compatibility_check ( existing_fn , fn )"		4046598	1					
ANR	4046746	Callee	zend_traits_method_compatibility_check		4046598	0					
ANR	4046747	Identifier	zend_traits_method_compatibility_check		4046598	0					
ANR	4046748	ArgumentList	existing_fn		4046598	1					
ANR	4046749	Argument	existing_fn		4046598	0					
ANR	4046750	Identifier	existing_fn		4046598	0					
ANR	4046751	Argument	fn		4046598	1					
ANR	4046752	Identifier	fn		4046598	0					
ANR	4046753	CompoundStatement		20:80:1083:1083	4046598	1					
ANR	4046754	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"	1094:7:39853:40052	4046598	0	True				
ANR	4046755	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"		4046598	0					
ANR	4046756	Callee	zend_error_noreturn		4046598	0					
ANR	4046757	Identifier	zend_error_noreturn		4046598	0					
ANR	4046758	ArgumentList	E_COMPILE_ERROR		4046598	1					
ANR	4046759	Argument	E_COMPILE_ERROR		4046598	0					
ANR	4046760	Identifier	E_COMPILE_ERROR		4046598	0					
ANR	4046761	Argument	"""Declaration of %s must be compatible with %s"""		4046598	1					
ANR	4046762	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		4046598	0					
ANR	4046763	Argument	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		4046598	2					
ANR	4046764	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		4046598	0					
ANR	4046765	Callee	ZSTR_VAL		4046598	0					
ANR	4046766	Identifier	ZSTR_VAL		4046598	0					
ANR	4046767	ArgumentList	zend_get_function_declaration ( fn )		4046598	1					
ANR	4046768	Argument	zend_get_function_declaration ( fn )		4046598	0					
ANR	4046769	CallExpression	zend_get_function_declaration ( fn )		4046598	0					
ANR	4046770	Callee	zend_get_function_declaration		4046598	0					
ANR	4046771	Identifier	zend_get_function_declaration		4046598	0					
ANR	4046772	ArgumentList	fn		4046598	1					
ANR	4046773	Argument	fn		4046598	0					
ANR	4046774	Identifier	fn		4046598	0					
ANR	4046775	Argument	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		4046598	3					
ANR	4046776	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		4046598	0					
ANR	4046777	Callee	ZSTR_VAL		4046598	0					
ANR	4046778	Identifier	ZSTR_VAL		4046598	0					
ANR	4046779	ArgumentList	zend_get_function_declaration ( existing_fn )		4046598	1					
ANR	4046780	Argument	zend_get_function_declaration ( existing_fn )		4046598	0					
ANR	4046781	CallExpression	zend_get_function_declaration ( existing_fn )		4046598	0					
ANR	4046782	Callee	zend_get_function_declaration		4046598	0					
ANR	4046783	Identifier	zend_get_function_declaration		4046598	0					
ANR	4046784	ArgumentList	existing_fn		4046598	1					
ANR	4046785	Argument	existing_fn		4046598	0					
ANR	4046786	Identifier	existing_fn		4046598	0					
ANR	4046787	ReturnStatement	return ;	1098:6:40068:40074	4046598	1	True				
ANR	4046788	ElseStatement	else		4046598	0					
ANR	4046789	CompoundStatement		28:10:1338:1338	4046598	0					
ANR	4046790	ExpressionStatement	ALLOC_HASHTABLE ( * overriden )	1102:4:40105:40132	4046598	0	True				
ANR	4046791	CallExpression	ALLOC_HASHTABLE ( * overriden )		4046598	0					
ANR	4046792	Callee	ALLOC_HASHTABLE		4046598	0					
ANR	4046793	Identifier	ALLOC_HASHTABLE		4046598	0					
ANR	4046794	ArgumentList	* overriden		4046598	1					
ANR	4046795	Argument	* overriden		4046598	0					
ANR	4046796	UnaryOperationExpression	* overriden		4046598	0					
ANR	4046797	UnaryOperator	*		4046598	0					
ANR	4046798	Identifier	overriden		4046598	1					
ANR	4046799	ExpressionStatement	"zend_hash_init_ex ( * overriden , 8 , NULL , overriden_ptr_dtor , 0 , 0 )"	1103:4:40138:40202	4046598	1	True				
ANR	4046800	CallExpression	"zend_hash_init_ex ( * overriden , 8 , NULL , overriden_ptr_dtor , 0 , 0 )"		4046598	0					
ANR	4046801	Callee	zend_hash_init_ex		4046598	0					
ANR	4046802	Identifier	zend_hash_init_ex		4046598	0					
ANR	4046803	ArgumentList	* overriden		4046598	1					
ANR	4046804	Argument	* overriden		4046598	0					
ANR	4046805	UnaryOperationExpression	* overriden		4046598	0					
ANR	4046806	UnaryOperator	*		4046598	0					
ANR	4046807	Identifier	overriden		4046598	1					
ANR	4046808	Argument	8		4046598	1					
ANR	4046809	PrimaryExpression	8		4046598	0					
ANR	4046810	Argument	NULL		4046598	2					
ANR	4046811	Identifier	NULL		4046598	0					
ANR	4046812	Argument	overriden_ptr_dtor		4046598	3					
ANR	4046813	Identifier	overriden_ptr_dtor		4046598	0					
ANR	4046814	Argument	0		4046598	4					
ANR	4046815	PrimaryExpression	0		4046598	0					
ANR	4046816	Argument	0		4046598	5					
ANR	4046817	PrimaryExpression	0		4046598	0					
ANR	4046818	ExpressionStatement	"zend_hash_update_mem ( * overriden , key , fn , sizeof ( zend_function ) )"	1105:3:40212:40276	4046598	1	True				
ANR	4046819	CallExpression	"zend_hash_update_mem ( * overriden , key , fn , sizeof ( zend_function ) )"		4046598	0					
ANR	4046820	Callee	zend_hash_update_mem		4046598	0					
ANR	4046821	Identifier	zend_hash_update_mem		4046598	0					
ANR	4046822	ArgumentList	* overriden		4046598	1					
ANR	4046823	Argument	* overriden		4046598	0					
ANR	4046824	UnaryOperationExpression	* overriden		4046598	0					
ANR	4046825	UnaryOperator	*		4046598	0					
ANR	4046826	Identifier	overriden		4046598	1					
ANR	4046827	Argument	key		4046598	1					
ANR	4046828	Identifier	key		4046598	0					
ANR	4046829	Argument	fn		4046598	2					
ANR	4046830	Identifier	fn		4046598	0					
ANR	4046831	Argument	sizeof ( zend_function )		4046598	3					
ANR	4046832	SizeofExpression	sizeof ( zend_function )		4046598	0					
ANR	4046833	Sizeof	sizeof		4046598	0					
ANR	4046834	SizeofOperand	zend_function		4046598	1					
ANR	4046835	ReturnStatement	return ;	1106:3:40281:40287	4046598	2	True				
ANR	4046836	ElseStatement	else		4046598	0					
ANR	4046837	IfStatement	if ( existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT && ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 )		4046598	0					
ANR	4046838	Condition	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT && ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0	1107:13:40302:40420	4046598	0	True				
ANR	4046839	AndExpression	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT && ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0		4046598	0		&&			
ANR	4046840	BitAndExpression	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT		4046598	0		&			
ANR	4046841	MemberAccess	existing_fn -> common . fn_flags		4046598	0					
ANR	4046842	PtrMemberAccess	existing_fn -> common		4046598	0					
ANR	4046843	Identifier	existing_fn		4046598	0					
ANR	4046844	Identifier	common		4046598	1					
ANR	4046845	Identifier	fn_flags		4046598	1					
ANR	4046846	Identifier	ZEND_ACC_ABSTRACT		4046598	1					
ANR	4046847	EqualityExpression	( existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0		4046598	1		==			
ANR	4046848	BitAndExpression	existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		4046598	0		&			
ANR	4046849	PtrMemberAccess	existing_fn -> common . scope -> ce_flags		4046598	0					
ANR	4046850	MemberAccess	existing_fn -> common . scope		4046598	0					
ANR	4046851	PtrMemberAccess	existing_fn -> common		4046598	0					
ANR	4046852	Identifier	existing_fn		4046598	0					
ANR	4046853	Identifier	common		4046598	1					
ANR	4046854	Identifier	scope		4046598	1					
ANR	4046855	Identifier	ce_flags		4046598	1					
ANR	4046856	Identifier	ZEND_ACC_INTERFACE		4046598	1					
ANR	4046857	PrimaryExpression	0		4046598	1					
ANR	4046858	CompoundStatement		35:69:1662:1662	4046598	1					
ANR	4046859	IfStatement	"if ( UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) ) )"		4046598	0					
ANR	4046860	Condition	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) )"	1110:7:40522:40589	4046598	0	True				
ANR	4046861	CallExpression	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) )"		4046598	0					
ANR	4046862	Callee	UNEXPECTED		4046598	0					
ANR	4046863	Identifier	UNEXPECTED		4046598	0					
ANR	4046864	ArgumentList	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		4046598	1					
ANR	4046865	Argument	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		4046598	0					
ANR	4046866	UnaryOperationExpression	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		4046598	0					
ANR	4046867	UnaryOperator	!		4046598	0					
ANR	4046868	CallExpression	"zend_traits_method_compatibility_check ( fn , existing_fn )"		4046598	1					
ANR	4046869	Callee	zend_traits_method_compatibility_check		4046598	0					
ANR	4046870	Identifier	zend_traits_method_compatibility_check		4046598	0					
ANR	4046871	ArgumentList	fn		4046598	1					
ANR	4046872	Argument	fn		4046598	0					
ANR	4046873	Identifier	fn		4046598	0					
ANR	4046874	Argument	existing_fn		4046598	1					
ANR	4046875	Identifier	existing_fn		4046598	0					
ANR	4046876	CompoundStatement		37:77:1831:1831	4046598	1					
ANR	4046877	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"	1111:4:40598:40791	4046598	0	True				
ANR	4046878	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"		4046598	0					
ANR	4046879	Callee	zend_error_noreturn		4046598	0					
ANR	4046880	Identifier	zend_error_noreturn		4046598	0					
ANR	4046881	ArgumentList	E_COMPILE_ERROR		4046598	1					
ANR	4046882	Argument	E_COMPILE_ERROR		4046598	0					
ANR	4046883	Identifier	E_COMPILE_ERROR		4046598	0					
ANR	4046884	Argument	"""Declaration of %s must be compatible with %s"""		4046598	1					
ANR	4046885	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		4046598	0					
ANR	4046886	Argument	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		4046598	2					
ANR	4046887	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		4046598	0					
ANR	4046888	Callee	ZSTR_VAL		4046598	0					
ANR	4046889	Identifier	ZSTR_VAL		4046598	0					
ANR	4046890	ArgumentList	zend_get_function_declaration ( fn )		4046598	1					
ANR	4046891	Argument	zend_get_function_declaration ( fn )		4046598	0					
ANR	4046892	CallExpression	zend_get_function_declaration ( fn )		4046598	0					
ANR	4046893	Callee	zend_get_function_declaration		4046598	0					
ANR	4046894	Identifier	zend_get_function_declaration		4046598	0					
ANR	4046895	ArgumentList	fn		4046598	1					
ANR	4046896	Argument	fn		4046598	0					
ANR	4046897	Identifier	fn		4046598	0					
ANR	4046898	Argument	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		4046598	3					
ANR	4046899	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		4046598	0					
ANR	4046900	Callee	ZSTR_VAL		4046598	0					
ANR	4046901	Identifier	ZSTR_VAL		4046598	0					
ANR	4046902	ArgumentList	zend_get_function_declaration ( existing_fn )		4046598	1					
ANR	4046903	Argument	zend_get_function_declaration ( existing_fn )		4046598	0					
ANR	4046904	CallExpression	zend_get_function_declaration ( existing_fn )		4046598	0					
ANR	4046905	Callee	zend_get_function_declaration		4046598	0					
ANR	4046906	Identifier	zend_get_function_declaration		4046598	0					
ANR	4046907	ArgumentList	existing_fn		4046598	1					
ANR	4046908	Argument	existing_fn		4046598	0					
ANR	4046909	Identifier	existing_fn		4046598	0					
ANR	4046910	ElseStatement	else		4046598	0					
ANR	4046911	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		4046598	0					
ANR	4046912	Condition	fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1115:13:40811:40849	4046598	0	True				
ANR	4046913	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_ABSTRACT		4046598	0		&			
ANR	4046914	MemberAccess	fn -> common . fn_flags		4046598	0					
ANR	4046915	PtrMemberAccess	fn -> common		4046598	0					
ANR	4046916	Identifier	fn		4046598	0					
ANR	4046917	Identifier	common		4046598	1					
ANR	4046918	Identifier	fn_flags		4046598	1					
ANR	4046919	Identifier	ZEND_ACC_ABSTRACT		4046598	1					
ANR	4046920	CompoundStatement		42:54:2091:2091	4046598	1					
ANR	4046921	IfStatement	"if ( UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) ) )"		4046598	0					
ANR	4046922	Condition	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) )"	1117:7:40945:41012	4046598	0	True				
ANR	4046923	CallExpression	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) )"		4046598	0					
ANR	4046924	Callee	UNEXPECTED		4046598	0					
ANR	4046925	Identifier	UNEXPECTED		4046598	0					
ANR	4046926	ArgumentList	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		4046598	1					
ANR	4046927	Argument	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		4046598	0					
ANR	4046928	UnaryOperationExpression	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		4046598	0					
ANR	4046929	UnaryOperator	!		4046598	0					
ANR	4046930	CallExpression	"zend_traits_method_compatibility_check ( existing_fn , fn )"		4046598	1					
ANR	4046931	Callee	zend_traits_method_compatibility_check		4046598	0					
ANR	4046932	Identifier	zend_traits_method_compatibility_check		4046598	0					
ANR	4046933	ArgumentList	existing_fn		4046598	1					
ANR	4046934	Argument	existing_fn		4046598	0					
ANR	4046935	Identifier	existing_fn		4046598	0					
ANR	4046936	Argument	fn		4046598	1					
ANR	4046937	Identifier	fn		4046598	0					
ANR	4046938	CompoundStatement		44:77:2254:2254	4046598	1					
ANR	4046939	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"	1118:4:41021:41214	4046598	0	True				
ANR	4046940	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"		4046598	0					
ANR	4046941	Callee	zend_error_noreturn		4046598	0					
ANR	4046942	Identifier	zend_error_noreturn		4046598	0					
ANR	4046943	ArgumentList	E_COMPILE_ERROR		4046598	1					
ANR	4046944	Argument	E_COMPILE_ERROR		4046598	0					
ANR	4046945	Identifier	E_COMPILE_ERROR		4046598	0					
ANR	4046946	Argument	"""Declaration of %s must be compatible with %s"""		4046598	1					
ANR	4046947	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		4046598	0					
ANR	4046948	Argument	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		4046598	2					
ANR	4046949	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		4046598	0					
ANR	4046950	Callee	ZSTR_VAL		4046598	0					
ANR	4046951	Identifier	ZSTR_VAL		4046598	0					
ANR	4046952	ArgumentList	zend_get_function_declaration ( fn )		4046598	1					
ANR	4046953	Argument	zend_get_function_declaration ( fn )		4046598	0					
ANR	4046954	CallExpression	zend_get_function_declaration ( fn )		4046598	0					
ANR	4046955	Callee	zend_get_function_declaration		4046598	0					
ANR	4046956	Identifier	zend_get_function_declaration		4046598	0					
ANR	4046957	ArgumentList	fn		4046598	1					
ANR	4046958	Argument	fn		4046598	0					
ANR	4046959	Identifier	fn		4046598	0					
ANR	4046960	Argument	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		4046598	3					
ANR	4046961	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		4046598	0					
ANR	4046962	Callee	ZSTR_VAL		4046598	0					
ANR	4046963	Identifier	ZSTR_VAL		4046598	0					
ANR	4046964	ArgumentList	zend_get_function_declaration ( existing_fn )		4046598	1					
ANR	4046965	Argument	zend_get_function_declaration ( existing_fn )		4046598	0					
ANR	4046966	CallExpression	zend_get_function_declaration ( existing_fn )		4046598	0					
ANR	4046967	Callee	zend_get_function_declaration		4046598	0					
ANR	4046968	Identifier	zend_get_function_declaration		4046598	0					
ANR	4046969	ArgumentList	existing_fn		4046598	1					
ANR	4046970	Argument	existing_fn		4046598	0					
ANR	4046971	Identifier	existing_fn		4046598	0					
ANR	4046972	ReturnStatement	return ;	1122:3:41224:41230	4046598	1	True				
ANR	4046973	ElseStatement	else		4046598	0					
ANR	4046974	IfStatement	if ( UNEXPECTED ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT ) )		4046598	0					
ANR	4046975	Condition	UNEXPECTED ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT )	1123:13:41245:41308	4046598	0	True				
ANR	4046976	CallExpression	UNEXPECTED ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT )		4046598	0					
ANR	4046977	Callee	UNEXPECTED		4046598	0					
ANR	4046978	Identifier	UNEXPECTED		4046598	0					
ANR	4046979	ArgumentList	existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT		4046598	1					
ANR	4046980	Argument	existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT		4046598	0					
ANR	4046981	BitAndExpression	existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT		4046598	0		&			
ANR	4046982	PtrMemberAccess	existing_fn -> common . scope -> ce_flags		4046598	0					
ANR	4046983	MemberAccess	existing_fn -> common . scope		4046598	0					
ANR	4046984	PtrMemberAccess	existing_fn -> common		4046598	0					
ANR	4046985	Identifier	existing_fn		4046598	0					
ANR	4046986	Identifier	common		4046598	1					
ANR	4046987	Identifier	scope		4046598	1					
ANR	4046988	Identifier	ce_flags		4046598	1					
ANR	4046989	Identifier	ZEND_ACC_TRAIT		4046598	1					
ANR	4046990	CompoundStatement		50:79:2550:2550	4046598	1					
ANR	4046991	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Trait method %s has not been applied, because there are collisions with other trait methods on %s"" , name , ZSTR_VAL ( ce -> name ) )"	1126:3:41384:41551	4046598	0	True				
ANR	4046992	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Trait method %s has not been applied, because there are collisions with other trait methods on %s"" , name , ZSTR_VAL ( ce -> name ) )"		4046598	0					
ANR	4046993	Callee	zend_error_noreturn		4046598	0					
ANR	4046994	Identifier	zend_error_noreturn		4046598	0					
ANR	4046995	ArgumentList	E_COMPILE_ERROR		4046598	1					
ANR	4046996	Argument	E_COMPILE_ERROR		4046598	0					
ANR	4046997	Identifier	E_COMPILE_ERROR		4046598	0					
ANR	4046998	Argument	"""Trait method %s has not been applied, because there are collisions with other trait methods on %s"""		4046598	1					
ANR	4046999	PrimaryExpression	"""Trait method %s has not been applied, because there are collisions with other trait methods on %s"""		4046598	0					
ANR	4047000	Argument	name		4046598	2					
ANR	4047001	Identifier	name		4046598	0					
ANR	4047002	Argument	ZSTR_VAL ( ce -> name )		4046598	3					
ANR	4047003	CallExpression	ZSTR_VAL ( ce -> name )		4046598	0					
ANR	4047004	Callee	ZSTR_VAL		4046598	0					
ANR	4047005	Identifier	ZSTR_VAL		4046598	0					
ANR	4047006	ArgumentList	ce -> name		4046598	1					
ANR	4047007	Argument	ce -> name		4046598	0					
ANR	4047008	PtrMemberAccess	ce -> name		4046598	0					
ANR	4047009	Identifier	ce		4046598	0					
ANR	4047010	Identifier	name		4046598	1					
ANR	4047011	ElseStatement	else		4046598	0					
ANR	4047012	CompoundStatement		61:9:3173:3173	4046598	0					
ANR	4047013	ExpressionStatement	"do_inheritance_check_on_method ( fn , existing_fn )"	1137:3:42089:42136	4046598	0	True				
ANR	4047014	CallExpression	"do_inheritance_check_on_method ( fn , existing_fn )"		4046598	0					
ANR	4047015	Callee	do_inheritance_check_on_method		4046598	0					
ANR	4047016	Identifier	do_inheritance_check_on_method		4046598	0					
ANR	4047017	ArgumentList	fn		4046598	1					
ANR	4047018	Argument	fn		4046598	0					
ANR	4047019	Identifier	fn		4046598	0					
ANR	4047020	Argument	existing_fn		4046598	1					
ANR	4047021	Identifier	existing_fn		4046598	0					
ANR	4047022	ExpressionStatement	fn -> common . prototype = NULL	1138:3:42141:42168	4046598	1	True				
ANR	4047023	AssignmentExpression	fn -> common . prototype = NULL		4046598	0		=			
ANR	4047024	MemberAccess	fn -> common . prototype		4046598	0					
ANR	4047025	PtrMemberAccess	fn -> common		4046598	0					
ANR	4047026	Identifier	fn		4046598	0					
ANR	4047027	Identifier	common		4046598	1					
ANR	4047028	Identifier	prototype		4046598	1					
ANR	4047029	Identifier	NULL		4046598	1					
ANR	4047030	ExpressionStatement	function_add_ref ( fn )	1142:1:42179:42199	4046598	3	True				
ANR	4047031	CallExpression	function_add_ref ( fn )		4046598	0					
ANR	4047032	Callee	function_add_ref		4046598	0					
ANR	4047033	Identifier	function_add_ref		4046598	0					
ANR	4047034	ArgumentList	fn		4046598	1					
ANR	4047035	Argument	fn		4046598	0					
ANR	4047036	Identifier	fn		4046598	0					
ANR	4047037	ExpressionStatement	"new_fn = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"	1143:1:42202:42262	4046598	4	True				
ANR	4047038	AssignmentExpression	"new_fn = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		4046598	0		=			
ANR	4047039	Identifier	new_fn		4046598	0					
ANR	4047040	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		4046598	1					
ANR	4047041	Callee	zend_arena_alloc		4046598	0					
ANR	4047042	Identifier	zend_arena_alloc		4046598	0					
ANR	4047043	ArgumentList	& CG ( arena )		4046598	1					
ANR	4047044	Argument	& CG ( arena )		4046598	0					
ANR	4047045	UnaryOperationExpression	& CG ( arena )		4046598	0					
ANR	4047046	UnaryOperator	&		4046598	0					
ANR	4047047	CallExpression	CG ( arena )		4046598	1					
ANR	4047048	Callee	CG		4046598	0					
ANR	4047049	Identifier	CG		4046598	0					
ANR	4047050	ArgumentList	arena		4046598	1					
ANR	4047051	Argument	arena		4046598	0					
ANR	4047052	Identifier	arena		4046598	0					
ANR	4047053	Argument	sizeof ( zend_op_array )		4046598	1					
ANR	4047054	SizeofExpression	sizeof ( zend_op_array )		4046598	0					
ANR	4047055	Sizeof	sizeof		4046598	0					
ANR	4047056	SizeofOperand	zend_op_array		4046598	1					
ANR	4047057	ExpressionStatement	"memcpy ( new_fn , fn , sizeof ( zend_op_array ) )"	1144:1:42265:42306	4046598	5	True				
ANR	4047058	CallExpression	"memcpy ( new_fn , fn , sizeof ( zend_op_array ) )"		4046598	0					
ANR	4047059	Callee	memcpy		4046598	0					
ANR	4047060	Identifier	memcpy		4046598	0					
ANR	4047061	ArgumentList	new_fn		4046598	1					
ANR	4047062	Argument	new_fn		4046598	0					
ANR	4047063	Identifier	new_fn		4046598	0					
ANR	4047064	Argument	fn		4046598	1					
ANR	4047065	Identifier	fn		4046598	0					
ANR	4047066	Argument	sizeof ( zend_op_array )		4046598	2					
ANR	4047067	SizeofExpression	sizeof ( zend_op_array )		4046598	0					
ANR	4047068	Sizeof	sizeof		4046598	0					
ANR	4047069	SizeofOperand	zend_op_array		4046598	1					
ANR	4047070	ExpressionStatement	"fn = zend_hash_update_ptr ( & ce -> function_table , key , new_fn )"	1145:1:42309:42368	4046598	6	True				
ANR	4047071	AssignmentExpression	"fn = zend_hash_update_ptr ( & ce -> function_table , key , new_fn )"		4046598	0		=			
ANR	4047072	Identifier	fn		4046598	0					
ANR	4047073	CallExpression	"zend_hash_update_ptr ( & ce -> function_table , key , new_fn )"		4046598	1					
ANR	4047074	Callee	zend_hash_update_ptr		4046598	0					
ANR	4047075	Identifier	zend_hash_update_ptr		4046598	0					
ANR	4047076	ArgumentList	& ce -> function_table		4046598	1					
ANR	4047077	Argument	& ce -> function_table		4046598	0					
ANR	4047078	UnaryOperationExpression	& ce -> function_table		4046598	0					
ANR	4047079	UnaryOperator	&		4046598	0					
ANR	4047080	PtrMemberAccess	ce -> function_table		4046598	1					
ANR	4047081	Identifier	ce		4046598	0					
ANR	4047082	Identifier	function_table		4046598	1					
ANR	4047083	Argument	key		4046598	1					
ANR	4047084	Identifier	key		4046598	0					
ANR	4047085	Argument	new_fn		4046598	2					
ANR	4047086	Identifier	new_fn		4046598	0					
ANR	4047087	ExpressionStatement	"zend_add_magic_methods ( ce , key , fn )"	1146:1:42371:42406	4046598	7	True				
ANR	4047088	CallExpression	"zend_add_magic_methods ( ce , key , fn )"		4046598	0					
ANR	4047089	Callee	zend_add_magic_methods		4046598	0					
ANR	4047090	Identifier	zend_add_magic_methods		4046598	0					
ANR	4047091	ArgumentList	ce		4046598	1					
ANR	4047092	Argument	ce		4046598	0					
ANR	4047093	Identifier	ce		4046598	0					
ANR	4047094	Argument	key		4046598	1					
ANR	4047095	Identifier	key		4046598	0					
ANR	4047096	Argument	fn		4046598	2					
ANR	4047097	Identifier	fn		4046598	0					
ANR	4047098	ReturnType	static void		4046598	1					
ANR	4047099	Identifier	zend_add_trait_method		4046598	2					
ANR	4047100	ParameterList	"zend_class_entry * ce , const char * name , zend_string * key , zend_function * fn , HashTable * * overriden"		4046598	3					
ANR	4047101	Parameter	zend_class_entry * ce	1073:34:38650:38669	4046598	0	True				
ANR	4047102	ParameterType	zend_class_entry *		4046598	0					
ANR	4047103	Identifier	ce		4046598	1					
ANR	4047104	Parameter	const char * name	1073:56:38672:38687	4046598	1	True				
ANR	4047105	ParameterType	const char *		4046598	0					
ANR	4047106	Identifier	name		4046598	1					
ANR	4047107	Parameter	zend_string * key	1073:74:38690:38705	4046598	2	True				
ANR	4047108	ParameterType	zend_string *		4046598	0					
ANR	4047109	Identifier	key		4046598	1					
ANR	4047110	Parameter	zend_function * fn	1073:92:38708:38724	4046598	3	True				
ANR	4047111	ParameterType	zend_function *		4046598	0					
ANR	4047112	Identifier	fn		4046598	1					
ANR	4047113	Parameter	HashTable * * overriden	1073:111:38727:38747	4046598	4	True				
ANR	4047114	ParameterType	HashTable * *		4046598	0					
ANR	4047115	Identifier	overriden		4046598	1					
ANR	4047116	CFGEntryNode	ENTRY		4046598		True				
ANR	4047117	CFGExitNode	EXIT		4046598		True				
ANR	4047118	Symbol	E_COMPILE_ERROR		4046598						
ANR	4047119	Symbol	fn		4046598						
ANR	4047120	Symbol	& ce -> function_table		4046598						
ANR	4047121	Symbol	* ce		4046598						
ANR	4047122	Symbol	arena		4046598						
ANR	4047123	Symbol	overriden_ptr_dtor		4046598						
ANR	4047124	Symbol	& CG		4046598						
ANR	4047125	Symbol	UNEXPECTED		4046598						
ANR	4047126	Symbol	fn -> common . prototype		4046598						
ANR	4047127	Symbol	* overriden		4046598						
ANR	4047128	Symbol	* existing_fn		4046598						
ANR	4047129	Symbol	zend_traits_method_compatibility_check		4046598						
ANR	4047130	Symbol	existing_fn -> common . scope		4046598						
ANR	4047131	Symbol	existing_fn -> common . fn_flags		4046598						
ANR	4047132	Symbol	* * existing_fn		4046598						
ANR	4047133	Symbol	ZEND_ACC_INTERFACE		4046598						
ANR	4047134	Symbol	ce -> name		4046598						
ANR	4047135	Symbol	* existing_fn -> common		4046598						
ANR	4047136	Symbol	zend_hash_update_ptr		4046598						
ANR	4047137	Symbol	zend_hash_find_ptr		4046598						
ANR	4047138	Symbol	key		4046598						
ANR	4047139	Symbol	ce		4046598						
ANR	4047140	Symbol	existing_fn		4046598						
ANR	4047141	Symbol	fn -> common . fn_flags		4046598						
ANR	4047142	Symbol	NULL		4046598						
ANR	4047143	Symbol	zend_arena_alloc		4046598						
ANR	4047144	Symbol	* fn		4046598						
ANR	4047145	Symbol	overriden		4046598						
ANR	4047146	Symbol	ZSTR_VAL		4046598						
ANR	4047147	Symbol	ZEND_ACC_TRAIT		4046598						
ANR	4047148	Symbol	zend_get_function_declaration		4046598						
ANR	4047149	Symbol	ZEND_ACC_ABSTRACT		4046598						
ANR	4047150	Symbol	fn -> common		4046598						
ANR	4047151	Symbol	* existing_fn -> common . scope		4046598						
ANR	4047152	Symbol	existing_fn -> common		4046598						
ANR	4047153	Symbol	name		4046598						
ANR	4047154	Symbol	existing_fn -> common . scope -> ce_flags		4046598						
ANR	4047155	Symbol	new_fn		4046598						
ANR	4047156	Function	zend_fixup_trait_method	1150:0:42421:42842							
ANR	4047157	FunctionDef	"zend_fixup_trait_method (zend_function * fn , zend_class_entry * ce)"		4047156	0					
ANR	4047158	CompoundStatement		1151:0:42508:42842	4047156	0					
ANR	4047159	IfStatement	if ( ( fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT ) == ZEND_ACC_TRAIT )		4047156	0					
ANR	4047160	Condition	( fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT ) == ZEND_ACC_TRAIT	1152:5:42515:42577	4047156	0	True				
ANR	4047161	EqualityExpression	( fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT ) == ZEND_ACC_TRAIT		4047156	0		==			
ANR	4047162	BitAndExpression	fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT		4047156	0		&			
ANR	4047163	PtrMemberAccess	fn -> common . scope -> ce_flags		4047156	0					
ANR	4047164	MemberAccess	fn -> common . scope		4047156	0					
ANR	4047165	PtrMemberAccess	fn -> common		4047156	0					
ANR	4047166	Identifier	fn		4047156	0					
ANR	4047167	Identifier	common		4047156	1					
ANR	4047168	Identifier	scope		4047156	1					
ANR	4047169	Identifier	ce_flags		4047156	1					
ANR	4047170	Identifier	ZEND_ACC_TRAIT		4047156	1					
ANR	4047171	Identifier	ZEND_ACC_TRAIT		4047156	1					
ANR	4047172	CompoundStatement		2:70:71:71	4047156	1					
ANR	4047173	ExpressionStatement	fn -> common . scope = ce	1154:2:42585:42606	4047156	0	True				
ANR	4047174	AssignmentExpression	fn -> common . scope = ce		4047156	0		=			
ANR	4047175	MemberAccess	fn -> common . scope		4047156	0					
ANR	4047176	PtrMemberAccess	fn -> common		4047156	0					
ANR	4047177	Identifier	fn		4047156	0					
ANR	4047178	Identifier	common		4047156	1					
ANR	4047179	Identifier	scope		4047156	1					
ANR	4047180	Identifier	ce		4047156	1					
ANR	4047181	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		4047156	1					
ANR	4047182	Condition	fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1156:6:42615:42653	4047156	0	True				
ANR	4047183	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_ABSTRACT		4047156	0		&			
ANR	4047184	MemberAccess	fn -> common . fn_flags		4047156	0					
ANR	4047185	PtrMemberAccess	fn -> common		4047156	0					
ANR	4047186	Identifier	fn		4047156	0					
ANR	4047187	Identifier	common		4047156	1					
ANR	4047188	Identifier	fn_flags		4047156	1					
ANR	4047189	Identifier	ZEND_ACC_ABSTRACT		4047156	1					
ANR	4047190	CompoundStatement		6:47:147:147	4047156	1					
ANR	4047191	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	1157:3:42661:42709	4047156	0	True				
ANR	4047192	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4047156	0		|=			
ANR	4047193	PtrMemberAccess	ce -> ce_flags		4047156	0					
ANR	4047194	Identifier	ce		4047156	0					
ANR	4047195	Identifier	ce_flags		4047156	1					
ANR	4047196	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4047156	1					
ANR	4047197	IfStatement	if ( fn -> type == ZEND_USER_FUNCTION && fn -> op_array . static_variables )		4047156	2					
ANR	4047198	Condition	fn -> type == ZEND_USER_FUNCTION && fn -> op_array . static_variables	1159:6:42721:42783	4047156	0	True				
ANR	4047199	AndExpression	fn -> type == ZEND_USER_FUNCTION && fn -> op_array . static_variables		4047156	0		&&			
ANR	4047200	EqualityExpression	fn -> type == ZEND_USER_FUNCTION		4047156	0		==			
ANR	4047201	PtrMemberAccess	fn -> type		4047156	0					
ANR	4047202	Identifier	fn		4047156	0					
ANR	4047203	Identifier	type		4047156	1					
ANR	4047204	Identifier	ZEND_USER_FUNCTION		4047156	1					
ANR	4047205	MemberAccess	fn -> op_array . static_variables		4047156	1					
ANR	4047206	PtrMemberAccess	fn -> op_array		4047156	0					
ANR	4047207	Identifier	fn		4047156	0					
ANR	4047208	Identifier	op_array		4047156	1					
ANR	4047209	Identifier	static_variables		4047156	1					
ANR	4047210	CompoundStatement		9:71:277:277	4047156	1					
ANR	4047211	ExpressionStatement	ce -> ce_flags |= ZEND_HAS_STATIC_IN_METHODS	1160:3:42791:42833	4047156	0	True				
ANR	4047212	AssignmentExpression	ce -> ce_flags |= ZEND_HAS_STATIC_IN_METHODS		4047156	0		|=			
ANR	4047213	PtrMemberAccess	ce -> ce_flags		4047156	0					
ANR	4047214	Identifier	ce		4047156	0					
ANR	4047215	Identifier	ce_flags		4047156	1					
ANR	4047216	Identifier	ZEND_HAS_STATIC_IN_METHODS		4047156	1					
ANR	4047217	ReturnType	static void		4047156	1					
ANR	4047218	Identifier	zend_fixup_trait_method		4047156	2					
ANR	4047219	ParameterList	"zend_function * fn , zend_class_entry * ce"		4047156	3					
ANR	4047220	Parameter	zend_function * fn	1150:36:42457:42473	4047156	0	True				
ANR	4047221	ParameterType	zend_function *		4047156	0					
ANR	4047222	Identifier	fn		4047156	1					
ANR	4047223	Parameter	zend_class_entry * ce	1150:55:42476:42495	4047156	1	True				
ANR	4047224	ParameterType	zend_class_entry *		4047156	0					
ANR	4047225	Identifier	ce		4047156	1					
ANR	4047226	CFGEntryNode	ENTRY		4047156		True				
ANR	4047227	CFGExitNode	EXIT		4047156		True				
ANR	4047228	Symbol	fn -> common . scope		4047156						
ANR	4047229	Symbol	ce		4047156						
ANR	4047230	Symbol	fn -> common . fn_flags		4047156						
ANR	4047231	Symbol	fn -> common . scope -> ce_flags		4047156						
ANR	4047232	Symbol	fn		4047156						
ANR	4047233	Symbol	ZEND_HAS_STATIC_IN_METHODS		4047156						
ANR	4047234	Symbol	* ce		4047156						
ANR	4047235	Symbol	* fn -> common		4047156						
ANR	4047236	Symbol	* fn		4047156						
ANR	4047237	Symbol	* fn -> common . scope		4047156						
ANR	4047238	Symbol	ZEND_ACC_TRAIT		4047156						
ANR	4047239	Symbol	ce -> ce_flags		4047156						
ANR	4047240	Symbol	ZEND_ACC_ABSTRACT		4047156						
ANR	4047241	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4047156						
ANR	4047242	Symbol	fn -> common		4047156						
ANR	4047243	Symbol	* * fn		4047156						
ANR	4047244	Symbol	ZEND_USER_FUNCTION		4047156						
ANR	4047245	Symbol	fn -> op_array . static_variables		4047156						
ANR	4047246	Symbol	fn -> op_array		4047156						
ANR	4047247	Symbol	fn -> type		4047156						
ANR	4047248	Function	zend_traits_copy_functions	1166:0:42855:45745							
ANR	4047249	FunctionDef	"zend_traits_copy_functions (zend_string * fnname , zend_function * fn , zend_class_entry * ce , HashTable * * overriden , HashTable * exclude_table)"		4047248	0					
ANR	4047250	CompoundStatement		1167:0:43014:45745	4047248	0					
ANR	4047251	IdentifierDeclStatement	"zend_trait_alias * alias , * * alias_ptr ;"	1168:1:43017:43054	4047248	0	True				
ANR	4047252	IdentifierDecl	* alias		4047248	0					
ANR	4047253	IdentifierDeclType	zend_trait_alias *		4047248	0					
ANR	4047254	Identifier	alias		4047248	1					
ANR	4047255	IdentifierDecl	* * alias_ptr		4047248	1					
ANR	4047256	IdentifierDeclType	zend_trait_alias * *		4047248	0					
ANR	4047257	Identifier	alias_ptr		4047248	1					
ANR	4047258	IdentifierDeclStatement	zend_string * lcname ;	1169:1:43057:43082	4047248	1	True				
ANR	4047259	IdentifierDecl	* lcname		4047248	0					
ANR	4047260	IdentifierDeclType	zend_string *		4047248	0					
ANR	4047261	Identifier	lcname		4047248	1					
ANR	4047262	IdentifierDeclStatement	zend_function fn_copy ;	1170:1:43085:43111	4047248	2	True				
ANR	4047263	IdentifierDecl	fn_copy		4047248	0					
ANR	4047264	IdentifierDeclType	zend_function		4047248	0					
ANR	4047265	Identifier	fn_copy		4047248	1					
ANR	4047266	IfStatement	if ( ce -> trait_aliases )		4047248	3					
ANR	4047267	Condition	ce -> trait_aliases	1173:5:43213:43229	4047248	0	True				
ANR	4047268	PtrMemberAccess	ce -> trait_aliases		4047248	0					
ANR	4047269	Identifier	ce		4047248	0					
ANR	4047270	Identifier	trait_aliases		4047248	1					
ANR	4047271	CompoundStatement		7:24:217:217	4047248	1					
ANR	4047272	ExpressionStatement	alias_ptr = ce -> trait_aliases	1174:2:43236:43265	4047248	0	True				
ANR	4047273	AssignmentExpression	alias_ptr = ce -> trait_aliases		4047248	0		=			
ANR	4047274	Identifier	alias_ptr		4047248	0					
ANR	4047275	PtrMemberAccess	ce -> trait_aliases		4047248	1					
ANR	4047276	Identifier	ce		4047248	0					
ANR	4047277	Identifier	trait_aliases		4047248	1					
ANR	4047278	ExpressionStatement	alias = * alias_ptr	1175:2:43269:43287	4047248	1	True				
ANR	4047279	AssignmentExpression	alias = * alias_ptr		4047248	0		=			
ANR	4047280	Identifier	alias		4047248	0					
ANR	4047281	UnaryOperationExpression	* alias_ptr		4047248	1					
ANR	4047282	UnaryOperator	*		4047248	0					
ANR	4047283	Identifier	alias_ptr		4047248	1					
ANR	4047284	WhileStatement	while ( alias )		4047248	2					
ANR	4047285	Condition	alias	1176:9:43298:43302	4047248	0	True				
ANR	4047286	Identifier	alias		4047248	0					
ANR	4047287	CompoundStatement		10:16:290:290	4047248	1					
ANR	4047288	IfStatement	"if ( alias -> alias != NULL && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 ) )"		4047248	0					
ANR	4047289	Condition	"alias -> alias != NULL && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"	1178:7:43403:43734	4047248	0	True				
ANR	4047290	AndExpression	"alias -> alias != NULL && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		4047248	0		&&			
ANR	4047291	EqualityExpression	alias -> alias != NULL		4047248	0		!=			
ANR	4047292	PtrMemberAccess	alias -> alias		4047248	0					
ANR	4047293	Identifier	alias		4047248	0					
ANR	4047294	Identifier	alias		4047248	1					
ANR	4047295	Identifier	NULL		4047248	1					
ANR	4047296	AndExpression	"( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		4047248	1		&&			
ANR	4047297	OrExpression	! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce		4047248	0		||			
ANR	4047298	UnaryOperationExpression	! alias -> trait_method -> ce		4047248	0					
ANR	4047299	UnaryOperator	!		4047248	0					
ANR	4047300	PtrMemberAccess	alias -> trait_method -> ce		4047248	1					
ANR	4047301	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047302	Identifier	alias		4047248	0					
ANR	4047303	Identifier	trait_method		4047248	1					
ANR	4047304	Identifier	ce		4047248	1					
ANR	4047305	EqualityExpression	fn -> common . scope == alias -> trait_method -> ce		4047248	1		==			
ANR	4047306	MemberAccess	fn -> common . scope		4047248	0					
ANR	4047307	PtrMemberAccess	fn -> common		4047248	0					
ANR	4047308	Identifier	fn		4047248	0					
ANR	4047309	Identifier	common		4047248	1					
ANR	4047310	Identifier	scope		4047248	1					
ANR	4047311	PtrMemberAccess	alias -> trait_method -> ce		4047248	1					
ANR	4047312	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047313	Identifier	alias		4047248	0					
ANR	4047314	Identifier	trait_method		4047248	1					
ANR	4047315	Identifier	ce		4047248	1					
ANR	4047316	AndExpression	"ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		4047248	1		&&			
ANR	4047317	EqualityExpression	ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname )		4047248	0		==			
ANR	4047318	CallExpression	ZSTR_LEN ( alias -> trait_method -> method_name )		4047248	0					
ANR	4047319	Callee	ZSTR_LEN		4047248	0					
ANR	4047320	Identifier	ZSTR_LEN		4047248	0					
ANR	4047321	ArgumentList	alias -> trait_method -> method_name		4047248	1					
ANR	4047322	Argument	alias -> trait_method -> method_name		4047248	0					
ANR	4047323	PtrMemberAccess	alias -> trait_method -> method_name		4047248	0					
ANR	4047324	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047325	Identifier	alias		4047248	0					
ANR	4047326	Identifier	trait_method		4047248	1					
ANR	4047327	Identifier	method_name		4047248	1					
ANR	4047328	CallExpression	ZSTR_LEN ( fnname )		4047248	1					
ANR	4047329	Callee	ZSTR_LEN		4047248	0					
ANR	4047330	Identifier	ZSTR_LEN		4047248	0					
ANR	4047331	ArgumentList	fnname		4047248	1					
ANR	4047332	Argument	fnname		4047248	0					
ANR	4047333	Identifier	fnname		4047248	0					
ANR	4047334	EqualityExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0"		4047248	1		==			
ANR	4047335	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) )"		4047248	0					
ANR	4047336	Callee	zend_binary_strcasecmp		4047248	0					
ANR	4047337	Identifier	zend_binary_strcasecmp		4047248	0					
ANR	4047338	ArgumentList	ZSTR_VAL ( alias -> trait_method -> method_name )		4047248	1					
ANR	4047339	Argument	ZSTR_VAL ( alias -> trait_method -> method_name )		4047248	0					
ANR	4047340	CallExpression	ZSTR_VAL ( alias -> trait_method -> method_name )		4047248	0					
ANR	4047341	Callee	ZSTR_VAL		4047248	0					
ANR	4047342	Identifier	ZSTR_VAL		4047248	0					
ANR	4047343	ArgumentList	alias -> trait_method -> method_name		4047248	1					
ANR	4047344	Argument	alias -> trait_method -> method_name		4047248	0					
ANR	4047345	PtrMemberAccess	alias -> trait_method -> method_name		4047248	0					
ANR	4047346	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047347	Identifier	alias		4047248	0					
ANR	4047348	Identifier	trait_method		4047248	1					
ANR	4047349	Identifier	method_name		4047248	1					
ANR	4047350	Argument	ZSTR_LEN ( alias -> trait_method -> method_name )		4047248	1					
ANR	4047351	CallExpression	ZSTR_LEN ( alias -> trait_method -> method_name )		4047248	0					
ANR	4047352	Callee	ZSTR_LEN		4047248	0					
ANR	4047353	Identifier	ZSTR_LEN		4047248	0					
ANR	4047354	ArgumentList	alias -> trait_method -> method_name		4047248	1					
ANR	4047355	Argument	alias -> trait_method -> method_name		4047248	0					
ANR	4047356	PtrMemberAccess	alias -> trait_method -> method_name		4047248	0					
ANR	4047357	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047358	Identifier	alias		4047248	0					
ANR	4047359	Identifier	trait_method		4047248	1					
ANR	4047360	Identifier	method_name		4047248	1					
ANR	4047361	Argument	ZSTR_VAL ( fnname )		4047248	2					
ANR	4047362	CallExpression	ZSTR_VAL ( fnname )		4047248	0					
ANR	4047363	Callee	ZSTR_VAL		4047248	0					
ANR	4047364	Identifier	ZSTR_VAL		4047248	0					
ANR	4047365	ArgumentList	fnname		4047248	1					
ANR	4047366	Argument	fnname		4047248	0					
ANR	4047367	Identifier	fnname		4047248	0					
ANR	4047368	Argument	ZSTR_LEN ( fnname )		4047248	3					
ANR	4047369	CallExpression	ZSTR_LEN ( fnname )		4047248	0					
ANR	4047370	Callee	ZSTR_LEN		4047248	0					
ANR	4047371	Identifier	ZSTR_LEN		4047248	0					
ANR	4047372	ArgumentList	fnname		4047248	1					
ANR	4047373	Argument	fnname		4047248	0					
ANR	4047374	Identifier	fnname		4047248	0					
ANR	4047375	PrimaryExpression	0		4047248	1					
ANR	4047376	CompoundStatement		15:162:722:722	4047248	1					
ANR	4047377	ExpressionStatement	fn_copy = * fn	1182:4:43743:43756	4047248	0	True				
ANR	4047378	AssignmentExpression	fn_copy = * fn		4047248	0		=			
ANR	4047379	Identifier	fn_copy		4047248	0					
ANR	4047380	UnaryOperationExpression	* fn		4047248	1					
ANR	4047381	UnaryOperator	*		4047248	0					
ANR	4047382	Identifier	fn		4047248	1					
ANR	4047383	IfStatement	if ( alias -> modifiers )		4047248	1					
ANR	4047384	Condition	alias -> modifiers	1185:8:43820:43835	4047248	0	True				
ANR	4047385	PtrMemberAccess	alias -> modifiers		4047248	0					
ANR	4047386	Identifier	alias		4047248	0					
ANR	4047387	Identifier	modifiers		4047248	1					
ANR	4047388	CompoundStatement		19:26:823:823	4047248	1					
ANR	4047389	ExpressionStatement	fn_copy . common . fn_flags = alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )	1186:5:43845:43955	4047248	0	True				
ANR	4047390	AssignmentExpression	fn_copy . common . fn_flags = alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )		4047248	0		=			
ANR	4047391	MemberAccess	fn_copy . common . fn_flags		4047248	0					
ANR	4047392	MemberAccess	fn_copy . common		4047248	0					
ANR	4047393	Identifier	fn_copy		4047248	0					
ANR	4047394	Identifier	common		4047248	1					
ANR	4047395	Identifier	fn_flags		4047248	1					
ANR	4047396	InclusiveOrExpression	alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )		4047248	1		|			
ANR	4047397	PtrMemberAccess	alias -> modifiers		4047248	0					
ANR	4047398	Identifier	alias		4047248	0					
ANR	4047399	Identifier	modifiers		4047248	1					
ANR	4047400	ExclusiveOrExpression	fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK )		4047248	1		^			
ANR	4047401	MemberAccess	fn -> common . fn_flags		4047248	0					
ANR	4047402	PtrMemberAccess	fn -> common		4047248	0					
ANR	4047403	Identifier	fn		4047248	0					
ANR	4047404	Identifier	common		4047248	1					
ANR	4047405	Identifier	fn_flags		4047248	1					
ANR	4047406	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_PPP_MASK		4047248	1		&			
ANR	4047407	MemberAccess	fn -> common . fn_flags		4047248	0					
ANR	4047408	PtrMemberAccess	fn -> common		4047248	0					
ANR	4047409	Identifier	fn		4047248	0					
ANR	4047410	Identifier	common		4047248	1					
ANR	4047411	Identifier	fn_flags		4047248	1					
ANR	4047412	Identifier	ZEND_ACC_PPP_MASK		4047248	1					
ANR	4047413	ExpressionStatement	lcname = zend_string_tolower ( alias -> alias )	1189:4:43968:44010	4047248	2	True				
ANR	4047414	AssignmentExpression	lcname = zend_string_tolower ( alias -> alias )		4047248	0		=			
ANR	4047415	Identifier	lcname		4047248	0					
ANR	4047416	CallExpression	zend_string_tolower ( alias -> alias )		4047248	1					
ANR	4047417	Callee	zend_string_tolower		4047248	0					
ANR	4047418	Identifier	zend_string_tolower		4047248	0					
ANR	4047419	ArgumentList	alias -> alias		4047248	1					
ANR	4047420	Argument	alias -> alias		4047248	0					
ANR	4047421	PtrMemberAccess	alias -> alias		4047248	0					
ANR	4047422	Identifier	alias		4047248	0					
ANR	4047423	Identifier	alias		4047248	1					
ANR	4047424	ExpressionStatement	"zend_add_trait_method ( ce , ZSTR_VAL ( alias -> alias ) , lcname , & fn_copy , overriden )"	1190:4:44016:44094	4047248	3	True				
ANR	4047425	CallExpression	"zend_add_trait_method ( ce , ZSTR_VAL ( alias -> alias ) , lcname , & fn_copy , overriden )"		4047248	0					
ANR	4047426	Callee	zend_add_trait_method		4047248	0					
ANR	4047427	Identifier	zend_add_trait_method		4047248	0					
ANR	4047428	ArgumentList	ce		4047248	1					
ANR	4047429	Argument	ce		4047248	0					
ANR	4047430	Identifier	ce		4047248	0					
ANR	4047431	Argument	ZSTR_VAL ( alias -> alias )		4047248	1					
ANR	4047432	CallExpression	ZSTR_VAL ( alias -> alias )		4047248	0					
ANR	4047433	Callee	ZSTR_VAL		4047248	0					
ANR	4047434	Identifier	ZSTR_VAL		4047248	0					
ANR	4047435	ArgumentList	alias -> alias		4047248	1					
ANR	4047436	Argument	alias -> alias		4047248	0					
ANR	4047437	PtrMemberAccess	alias -> alias		4047248	0					
ANR	4047438	Identifier	alias		4047248	0					
ANR	4047439	Identifier	alias		4047248	1					
ANR	4047440	Argument	lcname		4047248	2					
ANR	4047441	Identifier	lcname		4047248	0					
ANR	4047442	Argument	& fn_copy		4047248	3					
ANR	4047443	UnaryOperationExpression	& fn_copy		4047248	0					
ANR	4047444	UnaryOperator	&		4047248	0					
ANR	4047445	Identifier	fn_copy		4047248	1					
ANR	4047446	Argument	overriden		4047248	4					
ANR	4047447	Identifier	overriden		4047248	0					
ANR	4047448	ExpressionStatement	zend_string_release ( lcname )	1191:4:44100:44127	4047248	4	True				
ANR	4047449	CallExpression	zend_string_release ( lcname )		4047248	0					
ANR	4047450	Callee	zend_string_release		4047248	0					
ANR	4047451	Identifier	zend_string_release		4047248	0					
ANR	4047452	ArgumentList	lcname		4047248	1					
ANR	4047453	Argument	lcname		4047248	0					
ANR	4047454	Identifier	lcname		4047248	0					
ANR	4047455	IfStatement	if ( ! alias -> trait_method -> ce )		4047248	5					
ANR	4047456	Condition	! alias -> trait_method -> ce	1194:8:44201:44224	4047248	0	True				
ANR	4047457	UnaryOperationExpression	! alias -> trait_method -> ce		4047248	0					
ANR	4047458	UnaryOperator	!		4047248	0					
ANR	4047459	PtrMemberAccess	alias -> trait_method -> ce		4047248	1					
ANR	4047460	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047461	Identifier	alias		4047248	0					
ANR	4047462	Identifier	trait_method		4047248	1					
ANR	4047463	Identifier	ce		4047248	1					
ANR	4047464	CompoundStatement		28:34:1212:1212	4047248	1					
ANR	4047465	ExpressionStatement	alias -> trait_method -> ce = fn -> common . scope	1195:5:44234:44276	4047248	0	True				
ANR	4047466	AssignmentExpression	alias -> trait_method -> ce = fn -> common . scope		4047248	0		=			
ANR	4047467	PtrMemberAccess	alias -> trait_method -> ce		4047248	0					
ANR	4047468	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047469	Identifier	alias		4047248	0					
ANR	4047470	Identifier	trait_method		4047248	1					
ANR	4047471	Identifier	ce		4047248	1					
ANR	4047472	MemberAccess	fn -> common . scope		4047248	1					
ANR	4047473	PtrMemberAccess	fn -> common		4047248	0					
ANR	4047474	Identifier	fn		4047248	0					
ANR	4047475	Identifier	common		4047248	1					
ANR	4047476	Identifier	scope		4047248	1					
ANR	4047477	ExpressionStatement	alias_ptr ++	1198:3:44292:44303	4047248	1	True				
ANR	4047478	PostIncDecOperationExpression	alias_ptr ++		4047248	0					
ANR	4047479	Identifier	alias_ptr		4047248	0					
ANR	4047480	IncDec	++		4047248	1					
ANR	4047481	ExpressionStatement	alias = * alias_ptr	1199:3:44308:44326	4047248	2	True				
ANR	4047482	AssignmentExpression	alias = * alias_ptr		4047248	0		=			
ANR	4047483	Identifier	alias		4047248	0					
ANR	4047484	UnaryOperationExpression	* alias_ptr		4047248	1					
ANR	4047485	UnaryOperator	*		4047248	0					
ANR	4047486	Identifier	alias_ptr		4047248	1					
ANR	4047487	IfStatement	"if ( exclude_table == NULL || zend_hash_find ( exclude_table , fnname ) == NULL )"		4047248	4					
ANR	4047488	Condition	"exclude_table == NULL || zend_hash_find ( exclude_table , fnname ) == NULL"	1203:5:44341:44410	4047248	0	True				
ANR	4047489	OrExpression	"exclude_table == NULL || zend_hash_find ( exclude_table , fnname ) == NULL"		4047248	0		||			
ANR	4047490	EqualityExpression	exclude_table == NULL		4047248	0		==			
ANR	4047491	Identifier	exclude_table		4047248	0					
ANR	4047492	Identifier	NULL		4047248	1					
ANR	4047493	EqualityExpression	"zend_hash_find ( exclude_table , fnname ) == NULL"		4047248	1		==			
ANR	4047494	CallExpression	"zend_hash_find ( exclude_table , fnname )"		4047248	0					
ANR	4047495	Callee	zend_hash_find		4047248	0					
ANR	4047496	Identifier	zend_hash_find		4047248	0					
ANR	4047497	ArgumentList	exclude_table		4047248	1					
ANR	4047498	Argument	exclude_table		4047248	0					
ANR	4047499	Identifier	exclude_table		4047248	0					
ANR	4047500	Argument	fnname		4047248	1					
ANR	4047501	Identifier	fnname		4047248	0					
ANR	4047502	Identifier	NULL		4047248	1					
ANR	4047503	CompoundStatement		37:77:1398:1398	4047248	1					
ANR	4047504	ExpressionStatement	"memcpy ( & fn_copy , fn , fn -> type == ZEND_USER_FUNCTION ? sizeof ( zend_op_array ) : sizeof ( zend_internal_function ) )"	1206:2:44531:44639	4047248	0	True				
ANR	4047505	CallExpression	"memcpy ( & fn_copy , fn , fn -> type == ZEND_USER_FUNCTION ? sizeof ( zend_op_array ) : sizeof ( zend_internal_function ) )"		4047248	0					
ANR	4047506	Callee	memcpy		4047248	0					
ANR	4047507	Identifier	memcpy		4047248	0					
ANR	4047508	ArgumentList	& fn_copy		4047248	1					
ANR	4047509	Argument	& fn_copy		4047248	0					
ANR	4047510	UnaryOperationExpression	& fn_copy		4047248	0					
ANR	4047511	UnaryOperator	&		4047248	0					
ANR	4047512	Identifier	fn_copy		4047248	1					
ANR	4047513	Argument	fn		4047248	1					
ANR	4047514	Identifier	fn		4047248	0					
ANR	4047515	Argument	fn -> type == ZEND_USER_FUNCTION ? sizeof ( zend_op_array ) : sizeof ( zend_internal_function )		4047248	2					
ANR	4047516	ConditionalExpression	fn -> type == ZEND_USER_FUNCTION ? sizeof ( zend_op_array ) : sizeof ( zend_internal_function )		4047248	0					
ANR	4047517	Condition	fn -> type == ZEND_USER_FUNCTION		4047248	0					
ANR	4047518	EqualityExpression	fn -> type == ZEND_USER_FUNCTION		4047248	0		==			
ANR	4047519	PtrMemberAccess	fn -> type		4047248	0					
ANR	4047520	Identifier	fn		4047248	0					
ANR	4047521	Identifier	type		4047248	1					
ANR	4047522	Identifier	ZEND_USER_FUNCTION		4047248	1					
ANR	4047523	SizeofExpression	sizeof ( zend_op_array )		4047248	1					
ANR	4047524	Sizeof	sizeof		4047248	0					
ANR	4047525	SizeofOperand	zend_op_array		4047248	1					
ANR	4047526	SizeofExpression	sizeof ( zend_internal_function )		4047248	2					
ANR	4047527	Sizeof	sizeof		4047248	0					
ANR	4047528	SizeofOperand	zend_internal_function		4047248	1					
ANR	4047529	IfStatement	if ( ce -> trait_aliases )		4047248	1					
ANR	4047530	Condition	ce -> trait_aliases	1209:6:44721:44737	4047248	0	True				
ANR	4047531	PtrMemberAccess	ce -> trait_aliases		4047248	0					
ANR	4047532	Identifier	ce		4047248	0					
ANR	4047533	Identifier	trait_aliases		4047248	1					
ANR	4047534	CompoundStatement		43:25:1725:1725	4047248	1					
ANR	4047535	ExpressionStatement	alias_ptr = ce -> trait_aliases	1210:3:44745:44774	4047248	0	True				
ANR	4047536	AssignmentExpression	alias_ptr = ce -> trait_aliases		4047248	0		=			
ANR	4047537	Identifier	alias_ptr		4047248	0					
ANR	4047538	PtrMemberAccess	ce -> trait_aliases		4047248	1					
ANR	4047539	Identifier	ce		4047248	0					
ANR	4047540	Identifier	trait_aliases		4047248	1					
ANR	4047541	ExpressionStatement	alias = * alias_ptr	1211:3:44779:44797	4047248	1	True				
ANR	4047542	AssignmentExpression	alias = * alias_ptr		4047248	0		=			
ANR	4047543	Identifier	alias		4047248	0					
ANR	4047544	UnaryOperationExpression	* alias_ptr		4047248	1					
ANR	4047545	UnaryOperator	*		4047248	0					
ANR	4047546	Identifier	alias_ptr		4047248	1					
ANR	4047547	WhileStatement	while ( alias )		4047248	2					
ANR	4047548	Condition	alias	1212:10:44809:44813	4047248	0	True				
ANR	4047549	Identifier	alias		4047248	0					
ANR	4047550	CompoundStatement		46:17:1801:1801	4047248	1					
ANR	4047551	IfStatement	"if ( alias -> alias == NULL && alias -> modifiers != 0 && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 ) )"		4047248	0					
ANR	4047552	Condition	"alias -> alias == NULL && alias -> modifiers != 0 && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"	1214:8:44916:45277	4047248	0	True				
ANR	4047553	AndExpression	"alias -> alias == NULL && alias -> modifiers != 0 && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		4047248	0		&&			
ANR	4047554	EqualityExpression	alias -> alias == NULL		4047248	0		==			
ANR	4047555	PtrMemberAccess	alias -> alias		4047248	0					
ANR	4047556	Identifier	alias		4047248	0					
ANR	4047557	Identifier	alias		4047248	1					
ANR	4047558	Identifier	NULL		4047248	1					
ANR	4047559	AndExpression	"alias -> modifiers != 0 && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		4047248	1		&&			
ANR	4047560	EqualityExpression	alias -> modifiers != 0		4047248	0		!=			
ANR	4047561	PtrMemberAccess	alias -> modifiers		4047248	0					
ANR	4047562	Identifier	alias		4047248	0					
ANR	4047563	Identifier	modifiers		4047248	1					
ANR	4047564	PrimaryExpression	0		4047248	1					
ANR	4047565	AndExpression	"( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		4047248	1		&&			
ANR	4047566	OrExpression	! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce		4047248	0		||			
ANR	4047567	UnaryOperationExpression	! alias -> trait_method -> ce		4047248	0					
ANR	4047568	UnaryOperator	!		4047248	0					
ANR	4047569	PtrMemberAccess	alias -> trait_method -> ce		4047248	1					
ANR	4047570	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047571	Identifier	alias		4047248	0					
ANR	4047572	Identifier	trait_method		4047248	1					
ANR	4047573	Identifier	ce		4047248	1					
ANR	4047574	EqualityExpression	fn -> common . scope == alias -> trait_method -> ce		4047248	1		==			
ANR	4047575	MemberAccess	fn -> common . scope		4047248	0					
ANR	4047576	PtrMemberAccess	fn -> common		4047248	0					
ANR	4047577	Identifier	fn		4047248	0					
ANR	4047578	Identifier	common		4047248	1					
ANR	4047579	Identifier	scope		4047248	1					
ANR	4047580	PtrMemberAccess	alias -> trait_method -> ce		4047248	1					
ANR	4047581	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047582	Identifier	alias		4047248	0					
ANR	4047583	Identifier	trait_method		4047248	1					
ANR	4047584	Identifier	ce		4047248	1					
ANR	4047585	AndExpression	"( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		4047248	1		&&			
ANR	4047586	EqualityExpression	ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname )		4047248	0		==			
ANR	4047587	CallExpression	ZSTR_LEN ( alias -> trait_method -> method_name )		4047248	0					
ANR	4047588	Callee	ZSTR_LEN		4047248	0					
ANR	4047589	Identifier	ZSTR_LEN		4047248	0					
ANR	4047590	ArgumentList	alias -> trait_method -> method_name		4047248	1					
ANR	4047591	Argument	alias -> trait_method -> method_name		4047248	0					
ANR	4047592	PtrMemberAccess	alias -> trait_method -> method_name		4047248	0					
ANR	4047593	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047594	Identifier	alias		4047248	0					
ANR	4047595	Identifier	trait_method		4047248	1					
ANR	4047596	Identifier	method_name		4047248	1					
ANR	4047597	CallExpression	ZSTR_LEN ( fnname )		4047248	1					
ANR	4047598	Callee	ZSTR_LEN		4047248	0					
ANR	4047599	Identifier	ZSTR_LEN		4047248	0					
ANR	4047600	ArgumentList	fnname		4047248	1					
ANR	4047601	Argument	fnname		4047248	0					
ANR	4047602	Identifier	fnname		4047248	0					
ANR	4047603	EqualityExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0"		4047248	1		==			
ANR	4047604	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) )"		4047248	0					
ANR	4047605	Callee	zend_binary_strcasecmp		4047248	0					
ANR	4047606	Identifier	zend_binary_strcasecmp		4047248	0					
ANR	4047607	ArgumentList	ZSTR_VAL ( alias -> trait_method -> method_name )		4047248	1					
ANR	4047608	Argument	ZSTR_VAL ( alias -> trait_method -> method_name )		4047248	0					
ANR	4047609	CallExpression	ZSTR_VAL ( alias -> trait_method -> method_name )		4047248	0					
ANR	4047610	Callee	ZSTR_VAL		4047248	0					
ANR	4047611	Identifier	ZSTR_VAL		4047248	0					
ANR	4047612	ArgumentList	alias -> trait_method -> method_name		4047248	1					
ANR	4047613	Argument	alias -> trait_method -> method_name		4047248	0					
ANR	4047614	PtrMemberAccess	alias -> trait_method -> method_name		4047248	0					
ANR	4047615	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047616	Identifier	alias		4047248	0					
ANR	4047617	Identifier	trait_method		4047248	1					
ANR	4047618	Identifier	method_name		4047248	1					
ANR	4047619	Argument	ZSTR_LEN ( alias -> trait_method -> method_name )		4047248	1					
ANR	4047620	CallExpression	ZSTR_LEN ( alias -> trait_method -> method_name )		4047248	0					
ANR	4047621	Callee	ZSTR_LEN		4047248	0					
ANR	4047622	Identifier	ZSTR_LEN		4047248	0					
ANR	4047623	ArgumentList	alias -> trait_method -> method_name		4047248	1					
ANR	4047624	Argument	alias -> trait_method -> method_name		4047248	0					
ANR	4047625	PtrMemberAccess	alias -> trait_method -> method_name		4047248	0					
ANR	4047626	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047627	Identifier	alias		4047248	0					
ANR	4047628	Identifier	trait_method		4047248	1					
ANR	4047629	Identifier	method_name		4047248	1					
ANR	4047630	Argument	ZSTR_VAL ( fnname )		4047248	2					
ANR	4047631	CallExpression	ZSTR_VAL ( fnname )		4047248	0					
ANR	4047632	Callee	ZSTR_VAL		4047248	0					
ANR	4047633	Identifier	ZSTR_VAL		4047248	0					
ANR	4047634	ArgumentList	fnname		4047248	1					
ANR	4047635	Argument	fnname		4047248	0					
ANR	4047636	Identifier	fnname		4047248	0					
ANR	4047637	Argument	ZSTR_LEN ( fnname )		4047248	3					
ANR	4047638	CallExpression	ZSTR_LEN ( fnname )		4047248	0					
ANR	4047639	Callee	ZSTR_LEN		4047248	0					
ANR	4047640	Identifier	ZSTR_LEN		4047248	0					
ANR	4047641	ArgumentList	fnname		4047248	1					
ANR	4047642	Argument	fnname		4047248	0					
ANR	4047643	Identifier	fnname		4047248	0					
ANR	4047644	PrimaryExpression	0		4047248	1					
ANR	4047645	CompoundStatement		51:163:2265:2265	4047248	1					
ANR	4047646	ExpressionStatement	fn_copy . common . fn_flags = alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )	1219:5:45288:45398	4047248	0	True				
ANR	4047647	AssignmentExpression	fn_copy . common . fn_flags = alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )		4047248	0		=			
ANR	4047648	MemberAccess	fn_copy . common . fn_flags		4047248	0					
ANR	4047649	MemberAccess	fn_copy . common		4047248	0					
ANR	4047650	Identifier	fn_copy		4047248	0					
ANR	4047651	Identifier	common		4047248	1					
ANR	4047652	Identifier	fn_flags		4047248	1					
ANR	4047653	InclusiveOrExpression	alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )		4047248	1		|			
ANR	4047654	PtrMemberAccess	alias -> modifiers		4047248	0					
ANR	4047655	Identifier	alias		4047248	0					
ANR	4047656	Identifier	modifiers		4047248	1					
ANR	4047657	ExclusiveOrExpression	fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK )		4047248	1		^			
ANR	4047658	MemberAccess	fn -> common . fn_flags		4047248	0					
ANR	4047659	PtrMemberAccess	fn -> common		4047248	0					
ANR	4047660	Identifier	fn		4047248	0					
ANR	4047661	Identifier	common		4047248	1					
ANR	4047662	Identifier	fn_flags		4047248	1					
ANR	4047663	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_PPP_MASK		4047248	1		&			
ANR	4047664	MemberAccess	fn -> common . fn_flags		4047248	0					
ANR	4047665	PtrMemberAccess	fn -> common		4047248	0					
ANR	4047666	Identifier	fn		4047248	0					
ANR	4047667	Identifier	common		4047248	1					
ANR	4047668	Identifier	fn_flags		4047248	1					
ANR	4047669	Identifier	ZEND_ACC_PPP_MASK		4047248	1					
ANR	4047670	IfStatement	if ( ! alias -> trait_method -> ce )		4047248	1					
ANR	4047671	Condition	! alias -> trait_method -> ce	1222:9:45475:45498	4047248	0	True				
ANR	4047672	UnaryOperationExpression	! alias -> trait_method -> ce		4047248	0					
ANR	4047673	UnaryOperator	!		4047248	0					
ANR	4047674	PtrMemberAccess	alias -> trait_method -> ce		4047248	1					
ANR	4047675	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047676	Identifier	alias		4047248	0					
ANR	4047677	Identifier	trait_method		4047248	1					
ANR	4047678	Identifier	ce		4047248	1					
ANR	4047679	CompoundStatement		56:35:2486:2486	4047248	1					
ANR	4047680	ExpressionStatement	alias -> trait_method -> ce = fn -> common . scope	1223:6:45509:45551	4047248	0	True				
ANR	4047681	AssignmentExpression	alias -> trait_method -> ce = fn -> common . scope		4047248	0		=			
ANR	4047682	PtrMemberAccess	alias -> trait_method -> ce		4047248	0					
ANR	4047683	PtrMemberAccess	alias -> trait_method		4047248	0					
ANR	4047684	Identifier	alias		4047248	0					
ANR	4047685	Identifier	trait_method		4047248	1					
ANR	4047686	Identifier	ce		4047248	1					
ANR	4047687	MemberAccess	fn -> common . scope		4047248	1					
ANR	4047688	PtrMemberAccess	fn -> common		4047248	0					
ANR	4047689	Identifier	fn		4047248	0					
ANR	4047690	Identifier	common		4047248	1					
ANR	4047691	Identifier	scope		4047248	1					
ANR	4047692	ExpressionStatement	alias_ptr ++	1226:4:45570:45581	4047248	1	True				
ANR	4047693	PostIncDecOperationExpression	alias_ptr ++		4047248	0					
ANR	4047694	Identifier	alias_ptr		4047248	0					
ANR	4047695	IncDec	++		4047248	1					
ANR	4047696	ExpressionStatement	alias = * alias_ptr	1227:4:45587:45605	4047248	2	True				
ANR	4047697	AssignmentExpression	alias = * alias_ptr		4047248	0		=			
ANR	4047698	Identifier	alias		4047248	0					
ANR	4047699	UnaryOperationExpression	* alias_ptr		4047248	1					
ANR	4047700	UnaryOperator	*		4047248	0					
ANR	4047701	Identifier	alias_ptr		4047248	1					
ANR	4047702	ExpressionStatement	"zend_add_trait_method ( ce , ZSTR_VAL ( fn -> common . function_name ) , fnname , & fn_copy , overriden )"	1231:2:45619:45709	4047248	2	True				
ANR	4047703	CallExpression	"zend_add_trait_method ( ce , ZSTR_VAL ( fn -> common . function_name ) , fnname , & fn_copy , overriden )"		4047248	0					
ANR	4047704	Callee	zend_add_trait_method		4047248	0					
ANR	4047705	Identifier	zend_add_trait_method		4047248	0					
ANR	4047706	ArgumentList	ce		4047248	1					
ANR	4047707	Argument	ce		4047248	0					
ANR	4047708	Identifier	ce		4047248	0					
ANR	4047709	Argument	ZSTR_VAL ( fn -> common . function_name )		4047248	1					
ANR	4047710	CallExpression	ZSTR_VAL ( fn -> common . function_name )		4047248	0					
ANR	4047711	Callee	ZSTR_VAL		4047248	0					
ANR	4047712	Identifier	ZSTR_VAL		4047248	0					
ANR	4047713	ArgumentList	fn -> common . function_name		4047248	1					
ANR	4047714	Argument	fn -> common . function_name		4047248	0					
ANR	4047715	MemberAccess	fn -> common . function_name		4047248	0					
ANR	4047716	PtrMemberAccess	fn -> common		4047248	0					
ANR	4047717	Identifier	fn		4047248	0					
ANR	4047718	Identifier	common		4047248	1					
ANR	4047719	Identifier	function_name		4047248	1					
ANR	4047720	Argument	fnname		4047248	2					
ANR	4047721	Identifier	fnname		4047248	0					
ANR	4047722	Argument	& fn_copy		4047248	3					
ANR	4047723	UnaryOperationExpression	& fn_copy		4047248	0					
ANR	4047724	UnaryOperator	&		4047248	0					
ANR	4047725	Identifier	fn_copy		4047248	1					
ANR	4047726	Argument	overriden		4047248	4					
ANR	4047727	Identifier	overriden		4047248	0					
ANR	4047728	ReturnStatement	return ZEND_HASH_APPLY_KEEP ;	1234:1:45716:45743	4047248	5	True				
ANR	4047729	Identifier	ZEND_HASH_APPLY_KEEP		4047248	0					
ANR	4047730	ReturnType	static int		4047248	1					
ANR	4047731	Identifier	zend_traits_copy_functions		4047248	2					
ANR	4047732	ParameterList	"zend_string * fnname , zend_function * fn , zend_class_entry * ce , HashTable * * overriden , HashTable * exclude_table"		4047248	3					
ANR	4047733	Parameter	zend_string * fnname	1166:38:42893:42911	4047248	0	True				
ANR	4047734	ParameterType	zend_string *		4047248	0					
ANR	4047735	Identifier	fnname		4047248	1					
ANR	4047736	Parameter	zend_function * fn	1166:59:42914:42930	4047248	1	True				
ANR	4047737	ParameterType	zend_function *		4047248	0					
ANR	4047738	Identifier	fn		4047248	1					
ANR	4047739	Parameter	zend_class_entry * ce	1166:78:42933:42952	4047248	2	True				
ANR	4047740	ParameterType	zend_class_entry *		4047248	0					
ANR	4047741	Identifier	ce		4047248	1					
ANR	4047742	Parameter	HashTable * * overriden	1166:100:42955:42975	4047248	3	True				
ANR	4047743	ParameterType	HashTable * *		4047248	0					
ANR	4047744	Identifier	overriden		4047248	1					
ANR	4047745	Parameter	HashTable * exclude_table	1166:123:42978:43001	4047248	4	True				
ANR	4047746	ParameterType	HashTable *		4047248	0					
ANR	4047747	Identifier	exclude_table		4047248	1					
ANR	4047748	CFGEntryNode	ENTRY		4047248		True				
ANR	4047749	CFGExitNode	EXIT		4047248		True				
ANR	4047750	Symbol	fn_copy . common		4047248						
ANR	4047751	Symbol	ZEND_ACC_PPP_MASK		4047248						
ANR	4047752	Symbol	alias -> trait_method -> ce		4047248						
ANR	4047753	Symbol	fn		4047248						
ANR	4047754	Symbol	exclude_table		4047248						
ANR	4047755	Symbol	* ce		4047248						
ANR	4047756	Symbol	zend_string_tolower		4047248						
ANR	4047757	Symbol	zend_hash_find		4047248						
ANR	4047758	Symbol	ZEND_HASH_APPLY_KEEP		4047248						
ANR	4047759	Symbol	fn_copy		4047248						
ANR	4047760	Symbol	ZEND_USER_FUNCTION		4047248						
ANR	4047761	Symbol	* alias -> trait_method		4047248						
ANR	4047762	Symbol	alias		4047248						
ANR	4047763	Symbol	fnname		4047248						
ANR	4047764	Symbol	alias_ptr		4047248						
ANR	4047765	Symbol	* alias_ptr		4047248						
ANR	4047766	Symbol	fn_copy . common . fn_flags		4047248						
ANR	4047767	Symbol	fn -> common . scope		4047248						
ANR	4047768	Symbol	ce		4047248						
ANR	4047769	Symbol	fn -> common . fn_flags		4047248						
ANR	4047770	Symbol	ce -> trait_aliases		4047248						
ANR	4047771	Symbol	alias -> trait_method		4047248						
ANR	4047772	Symbol	NULL		4047248						
ANR	4047773	Symbol	zend_binary_strcasecmp		4047248						
ANR	4047774	Symbol	* fn		4047248						
ANR	4047775	Symbol	alias -> alias		4047248						
ANR	4047776	Symbol	overriden		4047248						
ANR	4047777	Symbol	* * alias		4047248						
ANR	4047778	Symbol	ZSTR_VAL		4047248						
ANR	4047779	Symbol	* alias		4047248						
ANR	4047780	Symbol	lcname		4047248						
ANR	4047781	Symbol	fn -> common		4047248						
ANR	4047782	Symbol	alias -> trait_method -> method_name		4047248						
ANR	4047783	Symbol	ZSTR_LEN		4047248						
ANR	4047784	Symbol	alias -> modifiers		4047248						
ANR	4047785	Symbol	& fn_copy		4047248						
ANR	4047786	Symbol	fn -> type		4047248						
ANR	4047787	Symbol	fn -> common . function_name		4047248						
ANR	4047788	Function	zend_check_trait_usage	1238:0:45758:46305							
ANR	4047789	FunctionDef	"zend_check_trait_usage (zend_class_entry * ce , zend_class_entry * trait)"		4047788	0					
ANR	4047790	CompoundStatement		1239:0:45850:46305	4047788	0					
ANR	4047791	IdentifierDeclStatement	uint32_t i ;	1240:1:45853:45863	4047788	0	True				
ANR	4047792	IdentifierDecl	i		4047788	0					
ANR	4047793	IdentifierDeclType	uint32_t		4047788	0					
ANR	4047794	Identifier	i		4047788	1					
ANR	4047795	IfStatement	if ( UNEXPECTED ( ( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT ) )		4047788	1					
ANR	4047796	Condition	UNEXPECTED ( ( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT )	1242:5:45871:45934	4047788	0	True				
ANR	4047797	CallExpression	UNEXPECTED ( ( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT )		4047788	0					
ANR	4047798	Callee	UNEXPECTED		4047788	0					
ANR	4047799	Identifier	UNEXPECTED		4047788	0					
ANR	4047800	ArgumentList	( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT		4047788	1					
ANR	4047801	Argument	( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT		4047788	0					
ANR	4047802	EqualityExpression	( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT		4047788	0		!=			
ANR	4047803	BitAndExpression	trait -> ce_flags & ZEND_ACC_TRAIT		4047788	0		&			
ANR	4047804	PtrMemberAccess	trait -> ce_flags		4047788	0					
ANR	4047805	Identifier	trait		4047788	0					
ANR	4047806	Identifier	ce_flags		4047788	1					
ANR	4047807	Identifier	ZEND_ACC_TRAIT		4047788	1					
ANR	4047808	Identifier	ZEND_ACC_TRAIT		4047788	1					
ANR	4047809	CompoundStatement		4:71:86:86	4047788	1					
ANR	4047810	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s is not a trait, Only traits may be used in 'as' and 'insteadof' statements"" , ZSTR_VAL ( trait -> name ) )"	1243:2:45941:46087	4047788	0	True				
ANR	4047811	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s is not a trait, Only traits may be used in 'as' and 'insteadof' statements"" , ZSTR_VAL ( trait -> name ) )"		4047788	0					
ANR	4047812	Callee	zend_error_noreturn		4047788	0					
ANR	4047813	Identifier	zend_error_noreturn		4047788	0					
ANR	4047814	ArgumentList	E_COMPILE_ERROR		4047788	1					
ANR	4047815	Argument	E_COMPILE_ERROR		4047788	0					
ANR	4047816	Identifier	E_COMPILE_ERROR		4047788	0					
ANR	4047817	Argument	"""Class %s is not a trait, Only traits may be used in 'as' and 'insteadof' statements"""		4047788	1					
ANR	4047818	PrimaryExpression	"""Class %s is not a trait, Only traits may be used in 'as' and 'insteadof' statements"""		4047788	0					
ANR	4047819	Argument	ZSTR_VAL ( trait -> name )		4047788	2					
ANR	4047820	CallExpression	ZSTR_VAL ( trait -> name )		4047788	0					
ANR	4047821	Callee	ZSTR_VAL		4047788	0					
ANR	4047822	Identifier	ZSTR_VAL		4047788	0					
ANR	4047823	ArgumentList	trait -> name		4047788	1					
ANR	4047824	Argument	trait -> name		4047788	0					
ANR	4047825	PtrMemberAccess	trait -> name		4047788	0					
ANR	4047826	Identifier	trait		4047788	0					
ANR	4047827	Identifier	name		4047788	1					
ANR	4047828	ForStatement	for ( i = 0 ; i < ce -> num_traits ; i ++ )		4047788	2					
ANR	4047829	ForInit	i = 0 ;	1246:6:46099:46104	4047788	0	True				
ANR	4047830	AssignmentExpression	i = 0		4047788	0		=			
ANR	4047831	Identifier	i		4047788	0					
ANR	4047832	PrimaryExpression	0		4047788	1					
ANR	4047833	Condition	i < ce -> num_traits	1246:13:46106:46123	4047788	1	True				
ANR	4047834	RelationalExpression	i < ce -> num_traits		4047788	0		<			
ANR	4047835	Identifier	i		4047788	0					
ANR	4047836	PtrMemberAccess	ce -> num_traits		4047788	1					
ANR	4047837	Identifier	ce		4047788	0					
ANR	4047838	Identifier	num_traits		4047788	1					
ANR	4047839	PostIncDecOperationExpression	i ++	1246:33:46126:46128	4047788	2	True				
ANR	4047840	Identifier	i		4047788	0					
ANR	4047841	IncDec	++		4047788	1					
ANR	4047842	CompoundStatement		8:38:280:280	4047788	3					
ANR	4047843	IfStatement	if ( ce -> traits [ i ] == trait )		4047788	0					
ANR	4047844	Condition	ce -> traits [ i ] == trait	1247:6:46139:46160	4047788	0	True				
ANR	4047845	EqualityExpression	ce -> traits [ i ] == trait		4047788	0		==			
ANR	4047846	ArrayIndexing	ce -> traits [ i ]		4047788	0					
ANR	4047847	PtrMemberAccess	ce -> traits		4047788	0					
ANR	4047848	Identifier	ce		4047788	0					
ANR	4047849	Identifier	traits		4047788	1					
ANR	4047850	Identifier	i		4047788	1					
ANR	4047851	Identifier	trait		4047788	1					
ANR	4047852	CompoundStatement		9:30:312:312	4047788	1					
ANR	4047853	ReturnStatement	return ;	1248:3:46168:46174	4047788	0	True				
ANR	4047854	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Required Trait %s wasn't added to %s"" , ZSTR_VAL ( trait -> name ) , ZSTR_VAL ( ce -> name ) )"	1251:1:46184:46303	4047788	3	True				
ANR	4047855	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Required Trait %s wasn't added to %s"" , ZSTR_VAL ( trait -> name ) , ZSTR_VAL ( ce -> name ) )"		4047788	0					
ANR	4047856	Callee	zend_error_noreturn		4047788	0					
ANR	4047857	Identifier	zend_error_noreturn		4047788	0					
ANR	4047858	ArgumentList	E_COMPILE_ERROR		4047788	1					
ANR	4047859	Argument	E_COMPILE_ERROR		4047788	0					
ANR	4047860	Identifier	E_COMPILE_ERROR		4047788	0					
ANR	4047861	Argument	"""Required Trait %s wasn't added to %s"""		4047788	1					
ANR	4047862	PrimaryExpression	"""Required Trait %s wasn't added to %s"""		4047788	0					
ANR	4047863	Argument	ZSTR_VAL ( trait -> name )		4047788	2					
ANR	4047864	CallExpression	ZSTR_VAL ( trait -> name )		4047788	0					
ANR	4047865	Callee	ZSTR_VAL		4047788	0					
ANR	4047866	Identifier	ZSTR_VAL		4047788	0					
ANR	4047867	ArgumentList	trait -> name		4047788	1					
ANR	4047868	Argument	trait -> name		4047788	0					
ANR	4047869	PtrMemberAccess	trait -> name		4047788	0					
ANR	4047870	Identifier	trait		4047788	0					
ANR	4047871	Identifier	name		4047788	1					
ANR	4047872	Argument	ZSTR_VAL ( ce -> name )		4047788	3					
ANR	4047873	CallExpression	ZSTR_VAL ( ce -> name )		4047788	0					
ANR	4047874	Callee	ZSTR_VAL		4047788	0					
ANR	4047875	Identifier	ZSTR_VAL		4047788	0					
ANR	4047876	ArgumentList	ce -> name		4047788	1					
ANR	4047877	Argument	ce -> name		4047788	0					
ANR	4047878	PtrMemberAccess	ce -> name		4047788	0					
ANR	4047879	Identifier	ce		4047788	0					
ANR	4047880	Identifier	name		4047788	1					
ANR	4047881	ReturnType	static void		4047788	1					
ANR	4047882	Identifier	zend_check_trait_usage		4047788	2					
ANR	4047883	ParameterList	"zend_class_entry * ce , zend_class_entry * trait"		4047788	3					
ANR	4047884	Parameter	zend_class_entry * ce	1238:35:45793:45812	4047788	0	True				
ANR	4047885	ParameterType	zend_class_entry *		4047788	0					
ANR	4047886	Identifier	ce		4047788	1					
ANR	4047887	Parameter	zend_class_entry * trait	1238:57:45815:45837	4047788	1	True				
ANR	4047888	ParameterType	zend_class_entry *		4047788	0					
ANR	4047889	Identifier	trait		4047788	1					
ANR	4047890	CFGEntryNode	ENTRY		4047788		True				
ANR	4047891	CFGExitNode	EXIT		4047788		True				
ANR	4047892	Symbol	* trait		4047788						
ANR	4047893	Symbol	ce		4047788						
ANR	4047894	Symbol	E_COMPILE_ERROR		4047788						
ANR	4047895	Symbol	i		4047788						
ANR	4047896	Symbol	* ce		4047788						
ANR	4047897	Symbol	trait -> name		4047788						
ANR	4047898	Symbol	ce -> num_traits		4047788						
ANR	4047899	Symbol	* * ce		4047788						
ANR	4047900	Symbol	ZEND_ACC_TRAIT		4047788						
ANR	4047901	Symbol	ZSTR_VAL		4047788						
ANR	4047902	Symbol	ce -> traits		4047788						
ANR	4047903	Symbol	UNEXPECTED		4047788						
ANR	4047904	Symbol	* ce -> traits		4047788						
ANR	4047905	Symbol	* i		4047788						
ANR	4047906	Symbol	trait		4047788						
ANR	4047907	Symbol	trait -> ce_flags		4047788						
ANR	4047908	Symbol	ce -> name		4047788						
ANR	4047909	Function	zend_traits_init_trait_structures	1255:0:46318:50256							
ANR	4047910	FunctionDef	zend_traits_init_trait_structures (zend_class_entry * ce)		4047909	0					
ANR	4047911	CompoundStatement		1256:0:46396:50256	4047909	0					
ANR	4047912	IdentifierDeclStatement	"size_t i , j = 0 ;"	1257:1:46399:46414	4047909	0	True				
ANR	4047913	IdentifierDecl	i		4047909	0					
ANR	4047914	IdentifierDeclType	size_t		4047909	0					
ANR	4047915	Identifier	i		4047909	1					
ANR	4047916	IdentifierDecl	j = 0		4047909	1					
ANR	4047917	IdentifierDeclType	size_t		4047909	0					
ANR	4047918	Identifier	j		4047909	1					
ANR	4047919	AssignmentExpression	j = 0		4047909	2		=			
ANR	4047920	Identifier	j		4047909	0					
ANR	4047921	PrimaryExpression	0		4047909	1					
ANR	4047922	IdentifierDeclStatement	zend_trait_precedence * * precedences ;	1258:1:46417:46452	4047909	1	True				
ANR	4047923	IdentifierDecl	* * precedences		4047909	0					
ANR	4047924	IdentifierDeclType	zend_trait_precedence * *		4047909	0					
ANR	4047925	Identifier	precedences		4047909	1					
ANR	4047926	IdentifierDeclStatement	zend_trait_precedence * cur_precedence ;	1259:1:46455:46492	4047909	2	True				
ANR	4047927	IdentifierDecl	* cur_precedence		4047909	0					
ANR	4047928	IdentifierDeclType	zend_trait_precedence *		4047909	0					
ANR	4047929	Identifier	cur_precedence		4047909	1					
ANR	4047930	IdentifierDeclStatement	zend_trait_method_reference * cur_method_ref ;	1260:1:46495:46538	4047909	3	True				
ANR	4047931	IdentifierDecl	* cur_method_ref		4047909	0					
ANR	4047932	IdentifierDeclType	zend_trait_method_reference *		4047909	0					
ANR	4047933	Identifier	cur_method_ref		4047909	1					
ANR	4047934	IdentifierDeclStatement	zend_string * lcname ;	1261:1:46541:46560	4047909	4	True				
ANR	4047935	IdentifierDecl	* lcname		4047909	0					
ANR	4047936	IdentifierDeclType	zend_string *		4047909	0					
ANR	4047937	Identifier	lcname		4047909	1					
ANR	4047938	IdentifierDeclStatement	zend_bool method_exists ;	1262:1:46563:46586	4047909	5	True				
ANR	4047939	IdentifierDecl	method_exists		4047909	0					
ANR	4047940	IdentifierDeclType	zend_bool		4047909	0					
ANR	4047941	Identifier	method_exists		4047909	1					
ANR	4047942	IfStatement	if ( ce -> trait_precedences )		4047909	6					
ANR	4047943	Condition	ce -> trait_precedences	1265:5:46626:46646	4047909	0	True				
ANR	4047944	PtrMemberAccess	ce -> trait_precedences		4047909	0					
ANR	4047945	Identifier	ce		4047909	0					
ANR	4047946	Identifier	trait_precedences		4047909	1					
ANR	4047947	CompoundStatement		10:28:252:252	4047909	1					
ANR	4047948	ExpressionStatement	i = 0	1266:2:46653:46658	4047909	0	True				
ANR	4047949	AssignmentExpression	i = 0		4047909	0		=			
ANR	4047950	Identifier	i		4047909	0					
ANR	4047951	PrimaryExpression	0		4047909	1					
ANR	4047952	ExpressionStatement	precedences = ce -> trait_precedences	1267:2:46662:46697	4047909	1	True				
ANR	4047953	AssignmentExpression	precedences = ce -> trait_precedences		4047909	0		=			
ANR	4047954	Identifier	precedences		4047909	0					
ANR	4047955	PtrMemberAccess	ce -> trait_precedences		4047909	1					
ANR	4047956	Identifier	ce		4047909	0					
ANR	4047957	Identifier	trait_precedences		4047909	1					
ANR	4047958	ExpressionStatement	ce -> trait_precedences = NULL	1268:2:46701:46729	4047909	2	True				
ANR	4047959	AssignmentExpression	ce -> trait_precedences = NULL		4047909	0		=			
ANR	4047960	PtrMemberAccess	ce -> trait_precedences		4047909	0					
ANR	4047961	Identifier	ce		4047909	0					
ANR	4047962	Identifier	trait_precedences		4047909	1					
ANR	4047963	Identifier	NULL		4047909	1					
ANR	4047964	WhileStatement	while ( ( cur_precedence = precedences [ i ] ) )		4047909	3					
ANR	4047965	Condition	cur_precedence = precedences [ i ]	1269:9:46740:46772	4047909	0	True				
ANR	4047966	AssignmentExpression	cur_precedence = precedences [ i ]		4047909	0		=			
ANR	4047967	Identifier	cur_precedence		4047909	0					
ANR	4047968	ArrayIndexing	precedences [ i ]		4047909	1					
ANR	4047969	Identifier	precedences		4047909	0					
ANR	4047970	Identifier	i		4047909	1					
ANR	4047971	CompoundStatement		14:44:378:378	4047909	1					
ANR	4047972	IfStatement	if ( cur_precedence -> exclude_from_classes )		4047909	0					
ANR	4047973	Condition	cur_precedence -> exclude_from_classes	1271:7:46841:46876	4047909	0	True				
ANR	4047974	PtrMemberAccess	cur_precedence -> exclude_from_classes		4047909	0					
ANR	4047975	Identifier	cur_precedence		4047909	0					
ANR	4047976	Identifier	exclude_from_classes		4047909	1					
ANR	4047977	CompoundStatement		16:45:482:482	4047909	1					
ANR	4047978	ExpressionStatement	cur_method_ref = cur_precedence -> trait_method	1272:4:46885:46930	4047909	0	True				
ANR	4047979	AssignmentExpression	cur_method_ref = cur_precedence -> trait_method		4047909	0		=			
ANR	4047980	Identifier	cur_method_ref		4047909	0					
ANR	4047981	PtrMemberAccess	cur_precedence -> trait_method		4047909	1					
ANR	4047982	Identifier	cur_precedence		4047909	0					
ANR	4047983	Identifier	trait_method		4047909	1					
ANR	4047984	IfStatement	"if ( ! ( cur_precedence -> trait_method -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) ) )"		4047909	1					
ANR	4047985	Condition	"! ( cur_precedence -> trait_method -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"	1273:8:46940:47082	4047909	0	True				
ANR	4047986	UnaryOperationExpression	"! ( cur_precedence -> trait_method -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"		4047909	0					
ANR	4047987	UnaryOperator	!		4047909	0					
ANR	4047988	AssignmentExpression	"cur_precedence -> trait_method -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		4047909	1		=			
ANR	4047989	PtrMemberAccess	cur_precedence -> trait_method -> ce		4047909	0					
ANR	4047990	PtrMemberAccess	cur_precedence -> trait_method		4047909	0					
ANR	4047991	Identifier	cur_precedence		4047909	0					
ANR	4047992	Identifier	trait_method		4047909	1					
ANR	4047993	Identifier	ce		4047909	1					
ANR	4047994	CallExpression	"zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		4047909	1					
ANR	4047995	Callee	zend_fetch_class		4047909	0					
ANR	4047996	Identifier	zend_fetch_class		4047909	0					
ANR	4047997	ArgumentList	cur_method_ref -> class_name		4047909	1					
ANR	4047998	Argument	cur_method_ref -> class_name		4047909	0					
ANR	4047999	PtrMemberAccess	cur_method_ref -> class_name		4047909	0					
ANR	4048000	Identifier	cur_method_ref		4047909	0					
ANR	4048001	Identifier	class_name		4047909	1					
ANR	4048002	Argument	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909	1					
ANR	4048003	InclusiveOrExpression	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909	0		|			
ANR	4048004	Identifier	ZEND_FETCH_CLASS_TRAIT		4047909	0					
ANR	4048005	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909	1					
ANR	4048006	CompoundStatement		19:63:688:688	4047909	1					
ANR	4048007	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( cur_method_ref -> class_name ) )"	1275:5:47092:47193	4047909	0	True				
ANR	4048008	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( cur_method_ref -> class_name ) )"		4047909	0					
ANR	4048009	Callee	zend_error_noreturn		4047909	0					
ANR	4048010	Identifier	zend_error_noreturn		4047909	0					
ANR	4048011	ArgumentList	E_COMPILE_ERROR		4047909	1					
ANR	4048012	Argument	E_COMPILE_ERROR		4047909	0					
ANR	4048013	Identifier	E_COMPILE_ERROR		4047909	0					
ANR	4048014	Argument	"""Could not find trait %s"""		4047909	1					
ANR	4048015	PrimaryExpression	"""Could not find trait %s"""		4047909	0					
ANR	4048016	Argument	ZSTR_VAL ( cur_method_ref -> class_name )		4047909	2					
ANR	4048017	CallExpression	ZSTR_VAL ( cur_method_ref -> class_name )		4047909	0					
ANR	4048018	Callee	ZSTR_VAL		4047909	0					
ANR	4048019	Identifier	ZSTR_VAL		4047909	0					
ANR	4048020	ArgumentList	cur_method_ref -> class_name		4047909	1					
ANR	4048021	Argument	cur_method_ref -> class_name		4047909	0					
ANR	4048022	PtrMemberAccess	cur_method_ref -> class_name		4047909	0					
ANR	4048023	Identifier	cur_method_ref		4047909	0					
ANR	4048024	Identifier	class_name		4047909	1					
ANR	4048025	ExpressionStatement	"zend_check_trait_usage ( ce , cur_precedence -> trait_method -> ce )"	1277:4:47205:47265	4047909	2	True				
ANR	4048026	CallExpression	"zend_check_trait_usage ( ce , cur_precedence -> trait_method -> ce )"		4047909	0					
ANR	4048027	Callee	zend_check_trait_usage		4047909	0					
ANR	4048028	Identifier	zend_check_trait_usage		4047909	0					
ANR	4048029	ArgumentList	ce		4047909	1					
ANR	4048030	Argument	ce		4047909	0					
ANR	4048031	Identifier	ce		4047909	0					
ANR	4048032	Argument	cur_precedence -> trait_method -> ce		4047909	1					
ANR	4048033	PtrMemberAccess	cur_precedence -> trait_method -> ce		4047909	0					
ANR	4048034	PtrMemberAccess	cur_precedence -> trait_method		4047909	0					
ANR	4048035	Identifier	cur_precedence		4047909	0					
ANR	4048036	Identifier	trait_method		4047909	1					
ANR	4048037	Identifier	ce		4047909	1					
ANR	4048038	ExpressionStatement	lcname = zend_string_tolower ( cur_method_ref -> method_name )	1280:4:47339:47396	4047909	3	True				
ANR	4048039	AssignmentExpression	lcname = zend_string_tolower ( cur_method_ref -> method_name )		4047909	0		=			
ANR	4048040	Identifier	lcname		4047909	0					
ANR	4048041	CallExpression	zend_string_tolower ( cur_method_ref -> method_name )		4047909	1					
ANR	4048042	Callee	zend_string_tolower		4047909	0					
ANR	4048043	Identifier	zend_string_tolower		4047909	0					
ANR	4048044	ArgumentList	cur_method_ref -> method_name		4047909	1					
ANR	4048045	Argument	cur_method_ref -> method_name		4047909	0					
ANR	4048046	PtrMemberAccess	cur_method_ref -> method_name		4047909	0					
ANR	4048047	Identifier	cur_method_ref		4047909	0					
ANR	4048048	Identifier	method_name		4047909	1					
ANR	4048049	ExpressionStatement	"method_exists = zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"	1281:4:47402:47492	4047909	4	True				
ANR	4048050	AssignmentExpression	"method_exists = zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"		4047909	0		=			
ANR	4048051	Identifier	method_exists		4047909	0					
ANR	4048052	CallExpression	"zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"		4047909	1					
ANR	4048053	Callee	zend_hash_exists		4047909	0					
ANR	4048054	Identifier	zend_hash_exists		4047909	0					
ANR	4048055	ArgumentList	& cur_method_ref -> ce -> function_table		4047909	1					
ANR	4048056	Argument	& cur_method_ref -> ce -> function_table		4047909	0					
ANR	4048057	UnaryOperationExpression	& cur_method_ref -> ce -> function_table		4047909	0					
ANR	4048058	UnaryOperator	&		4047909	0					
ANR	4048059	PtrMemberAccess	cur_method_ref -> ce -> function_table		4047909	1					
ANR	4048060	PtrMemberAccess	cur_method_ref -> ce		4047909	0					
ANR	4048061	Identifier	cur_method_ref		4047909	0					
ANR	4048062	Identifier	ce		4047909	1					
ANR	4048063	Identifier	function_table		4047909	1					
ANR	4048064	Argument	lcname		4047909	1					
ANR	4048065	Identifier	lcname		4047909	0					
ANR	4048066	ExpressionStatement	zend_string_release ( lcname )	1283:4:47498:47525	4047909	5	True				
ANR	4048067	CallExpression	zend_string_release ( lcname )		4047909	0					
ANR	4048068	Callee	zend_string_release		4047909	0					
ANR	4048069	Identifier	zend_string_release		4047909	0					
ANR	4048070	ArgumentList	lcname		4047909	1					
ANR	4048071	Argument	lcname		4047909	0					
ANR	4048072	Identifier	lcname		4047909	0					
ANR	4048073	IfStatement	if ( ! method_exists )		4047909	6					
ANR	4048074	Condition	! method_exists	1284:8:47535:47548	4047909	0	True				
ANR	4048075	UnaryOperationExpression	! method_exists		4047909	0					
ANR	4048076	UnaryOperator	!		4047909	0					
ANR	4048077	Identifier	method_exists		4047909	1					
ANR	4048078	CompoundStatement		29:24:1154:1154	4047909	1					
ANR	4048079	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""A precedence rule was defined for %s::%s but this method does not exist"" , ZSTR_VAL ( cur_method_ref -> ce -> name ) , ZSTR_VAL ( cur_method_ref -> method_name ) )"	1285:5:47558:47774	4047909	0	True				
ANR	4048080	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""A precedence rule was defined for %s::%s but this method does not exist"" , ZSTR_VAL ( cur_method_ref -> ce -> name ) , ZSTR_VAL ( cur_method_ref -> method_name ) )"		4047909	0					
ANR	4048081	Callee	zend_error_noreturn		4047909	0					
ANR	4048082	Identifier	zend_error_noreturn		4047909	0					
ANR	4048083	ArgumentList	E_COMPILE_ERROR		4047909	1					
ANR	4048084	Argument	E_COMPILE_ERROR		4047909	0					
ANR	4048085	Identifier	E_COMPILE_ERROR		4047909	0					
ANR	4048086	Argument	"""A precedence rule was defined for %s::%s but this method does not exist"""		4047909	1					
ANR	4048087	PrimaryExpression	"""A precedence rule was defined for %s::%s but this method does not exist"""		4047909	0					
ANR	4048088	Argument	ZSTR_VAL ( cur_method_ref -> ce -> name )		4047909	2					
ANR	4048089	CallExpression	ZSTR_VAL ( cur_method_ref -> ce -> name )		4047909	0					
ANR	4048090	Callee	ZSTR_VAL		4047909	0					
ANR	4048091	Identifier	ZSTR_VAL		4047909	0					
ANR	4048092	ArgumentList	cur_method_ref -> ce -> name		4047909	1					
ANR	4048093	Argument	cur_method_ref -> ce -> name		4047909	0					
ANR	4048094	PtrMemberAccess	cur_method_ref -> ce -> name		4047909	0					
ANR	4048095	PtrMemberAccess	cur_method_ref -> ce		4047909	0					
ANR	4048096	Identifier	cur_method_ref		4047909	0					
ANR	4048097	Identifier	ce		4047909	1					
ANR	4048098	Identifier	name		4047909	1					
ANR	4048099	Argument	ZSTR_VAL ( cur_method_ref -> method_name )		4047909	3					
ANR	4048100	CallExpression	ZSTR_VAL ( cur_method_ref -> method_name )		4047909	0					
ANR	4048101	Callee	ZSTR_VAL		4047909	0					
ANR	4048102	Identifier	ZSTR_VAL		4047909	0					
ANR	4048103	ArgumentList	cur_method_ref -> method_name		4047909	1					
ANR	4048104	Argument	cur_method_ref -> method_name		4047909	0					
ANR	4048105	PtrMemberAccess	cur_method_ref -> method_name		4047909	0					
ANR	4048106	Identifier	cur_method_ref		4047909	0					
ANR	4048107	Identifier	method_name		4047909	1					
ANR	4048108	ExpressionStatement	j = 0	1297:4:48043:48048	4047909	7	True				
ANR	4048109	AssignmentExpression	j = 0		4047909	0		=			
ANR	4048110	Identifier	j		4047909	0					
ANR	4048111	PrimaryExpression	0		4047909	1					
ANR	4048112	WhileStatement	while ( cur_precedence -> exclude_from_classes [ j ] . class_name )		4047909	8					
ANR	4048113	Condition	cur_precedence -> exclude_from_classes [ j ] . class_name	1298:11:48061:48110	4047909	0	True				
ANR	4048114	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . class_name		4047909	0					
ANR	4048115	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		4047909	0					
ANR	4048116	PtrMemberAccess	cur_precedence -> exclude_from_classes		4047909	0					
ANR	4048117	Identifier	cur_precedence		4047909	0					
ANR	4048118	Identifier	exclude_from_classes		4047909	1					
ANR	4048119	Identifier	j		4047909	1					
ANR	4048120	Identifier	class_name		4047909	1					
ANR	4048121	CompoundStatement		44:5:1723:1799	4047909	1					
ANR	4048122	IdentifierDeclStatement	zend_string * class_name = cur_precedence -> exclude_from_classes [ j ] . class_name ;	1299:5:48120:48196	4047909	0	True				
ANR	4048123	IdentifierDecl	* class_name = cur_precedence -> exclude_from_classes [ j ] . class_name		4047909	0					
ANR	4048124	IdentifierDeclType	zend_string *		4047909	0					
ANR	4048125	Identifier	class_name		4047909	1					
ANR	4048126	AssignmentExpression	* class_name = cur_precedence -> exclude_from_classes [ j ] . class_name		4047909	2		=			
ANR	4048127	Identifier	class_name		4047909	0					
ANR	4048128	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . class_name		4047909	1					
ANR	4048129	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		4047909	0					
ANR	4048130	PtrMemberAccess	cur_precedence -> exclude_from_classes		4047909	0					
ANR	4048131	Identifier	cur_precedence		4047909	0					
ANR	4048132	Identifier	exclude_from_classes		4047909	1					
ANR	4048133	Identifier	j		4047909	1					
ANR	4048134	Identifier	class_name		4047909	1					
ANR	4048135	IfStatement	"if ( ! ( cur_precedence -> exclude_from_classes [ j ] . ce = zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) ) )"		4047909	1					
ANR	4048136	Condition	"! ( cur_precedence -> exclude_from_classes [ j ] . ce = zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"	1301:9:48208:48337	4047909	0	True				
ANR	4048137	UnaryOperationExpression	"! ( cur_precedence -> exclude_from_classes [ j ] . ce = zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"		4047909	0					
ANR	4048138	UnaryOperator	!		4047909	0					
ANR	4048139	AssignmentExpression	"cur_precedence -> exclude_from_classes [ j ] . ce = zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		4047909	1		=			
ANR	4048140	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . ce		4047909	0					
ANR	4048141	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		4047909	0					
ANR	4048142	PtrMemberAccess	cur_precedence -> exclude_from_classes		4047909	0					
ANR	4048143	Identifier	cur_precedence		4047909	0					
ANR	4048144	Identifier	exclude_from_classes		4047909	1					
ANR	4048145	Identifier	j		4047909	1					
ANR	4048146	Identifier	ce		4047909	1					
ANR	4048147	CallExpression	"zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		4047909	1					
ANR	4048148	Callee	zend_fetch_class		4047909	0					
ANR	4048149	Identifier	zend_fetch_class		4047909	0					
ANR	4048150	ArgumentList	class_name		4047909	1					
ANR	4048151	Argument	class_name		4047909	0					
ANR	4048152	Identifier	class_name		4047909	0					
ANR	4048153	Argument	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909	1					
ANR	4048154	InclusiveOrExpression	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909	0		|			
ANR	4048155	Identifier	ZEND_FETCH_CLASS_TRAIT		4047909	0					
ANR	4048156	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909	1					
ANR	4048157	CompoundStatement		46:141:1943:1943	4047909	1					
ANR	4048158	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( class_name ) )"	1302:6:48348:48433	4047909	0	True				
ANR	4048159	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( class_name ) )"		4047909	0					
ANR	4048160	Callee	zend_error_noreturn		4047909	0					
ANR	4048161	Identifier	zend_error_noreturn		4047909	0					
ANR	4048162	ArgumentList	E_COMPILE_ERROR		4047909	1					
ANR	4048163	Argument	E_COMPILE_ERROR		4047909	0					
ANR	4048164	Identifier	E_COMPILE_ERROR		4047909	0					
ANR	4048165	Argument	"""Could not find trait %s"""		4047909	1					
ANR	4048166	PrimaryExpression	"""Could not find trait %s"""		4047909	0					
ANR	4048167	Argument	ZSTR_VAL ( class_name )		4047909	2					
ANR	4048168	CallExpression	ZSTR_VAL ( class_name )		4047909	0					
ANR	4048169	Callee	ZSTR_VAL		4047909	0					
ANR	4048170	Identifier	ZSTR_VAL		4047909	0					
ANR	4048171	ArgumentList	class_name		4047909	1					
ANR	4048172	Argument	class_name		4047909	0					
ANR	4048173	Identifier	class_name		4047909	0					
ANR	4048174	ExpressionStatement	"zend_check_trait_usage ( ce , cur_precedence -> exclude_from_classes [ j ] . ce )"	1304:5:48447:48517	4047909	2	True				
ANR	4048175	CallExpression	"zend_check_trait_usage ( ce , cur_precedence -> exclude_from_classes [ j ] . ce )"		4047909	0					
ANR	4048176	Callee	zend_check_trait_usage		4047909	0					
ANR	4048177	Identifier	zend_check_trait_usage		4047909	0					
ANR	4048178	ArgumentList	ce		4047909	1					
ANR	4048179	Argument	ce		4047909	0					
ANR	4048180	Identifier	ce		4047909	0					
ANR	4048181	Argument	cur_precedence -> exclude_from_classes [ j ] . ce		4047909	1					
ANR	4048182	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . ce		4047909	0					
ANR	4048183	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		4047909	0					
ANR	4048184	PtrMemberAccess	cur_precedence -> exclude_from_classes		4047909	0					
ANR	4048185	Identifier	cur_precedence		4047909	0					
ANR	4048186	Identifier	exclude_from_classes		4047909	1					
ANR	4048187	Identifier	j		4047909	1					
ANR	4048188	Identifier	ce		4047909	1					
ANR	4048189	IfStatement	if ( cur_precedence -> trait_method -> ce == cur_precedence -> exclude_from_classes [ j ] . ce )		4047909	3					
ANR	4048190	Condition	cur_precedence -> trait_method -> ce == cur_precedence -> exclude_from_classes [ j ] . ce	1308:9:48649:48726	4047909	0	True				
ANR	4048191	EqualityExpression	cur_precedence -> trait_method -> ce == cur_precedence -> exclude_from_classes [ j ] . ce		4047909	0		==			
ANR	4048192	PtrMemberAccess	cur_precedence -> trait_method -> ce		4047909	0					
ANR	4048193	PtrMemberAccess	cur_precedence -> trait_method		4047909	0					
ANR	4048194	Identifier	cur_precedence		4047909	0					
ANR	4048195	Identifier	trait_method		4047909	1					
ANR	4048196	Identifier	ce		4047909	1					
ANR	4048197	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . ce		4047909	1					
ANR	4048198	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		4047909	0					
ANR	4048199	PtrMemberAccess	cur_precedence -> exclude_from_classes		4047909	0					
ANR	4048200	Identifier	cur_precedence		4047909	0					
ANR	4048201	Identifier	exclude_from_classes		4047909	1					
ANR	4048202	Identifier	j		4047909	1					
ANR	4048203	Identifier	ce		4047909	1					
ANR	4048204	CompoundStatement		53:89:2332:2332	4047909	1					
ANR	4048205	Statement	zend_error_noreturn	1309:6:48737:48755	4047909	0	True				
ANR	4048206	Statement	(	1309:25:48756:48756	4047909	1	True				
ANR	4048207	Statement	E_COMPILE_ERROR	1309:26:48757:48771	4047909	2	True				
ANR	4048208	Statement	","	1309:41:48772:48772	4047909	3	True				
ANR	4048209	Statement	"""Inconsistent insteadof definition. """	1310:11:48785:48821	4047909	4	True				
ANR	4048210	Statement	"""The method %s is to be used from %s, but %s is also on the exclude list"""	1311:11:48834:48906	4047909	5	True				
ANR	4048211	Statement	","	1311:84:48907:48907	4047909	6	True				
ANR	4048212	Statement	ZSTR_VAL	1312:11:48920:48927	4047909	7	True				
ANR	4048213	Statement	(	1312:19:48928:48928	4047909	8	True				
ANR	4048214	Statement	cur_method_ref	1312:20:48929:48942	4047909	9	True				
ANR	4048215	Statement	->	1312:34:48943:48944	4047909	10	True				
ANR	4048216	Statement	method_name	1312:36:48945:48955	4047909	11	True				
ANR	4048217	Statement	)	1312:47:48956:48956	4047909	12	True				
ANR	4048218	Statement	","	1312:48:48957:48957	4047909	13	True				
ANR	4048219	Statement	ZSTR_VAL	1313:11:48970:48977	4047909	14	True				
ANR	4048220	Statement	(	1313:19:48978:48978	4047909	15	True				
ANR	4048221	Statement	cur_precedence	1313:20:48979:48992	4047909	16	True				
ANR	4048222	Statement	->	1313:34:48993:48994	4047909	17	True				
ANR	4048223	Statement	trait_method	1313:36:48995:49006	4047909	18	True				
ANR	4048224	Statement	->	1313:48:49007:49008	4047909	19	True				
ANR	4048225	Statement	ce	1313:50:49009:49010	4047909	20	True				
ANR	4048226	Statement	->	1313:52:49011:49012	4047909	21	True				
ANR	4048227	Statement	name	1313:54:49013:49016	4047909	22	True				
ANR	4048228	Statement	)	1313:58:49017:49017	4047909	23	True				
ANR	4048229	Statement	","	1313:59:49018:49018	4047909	24	True				
ANR	4048230	Statement	ZSTR_VAL	1314:11:49031:49038	4047909	25	True				
ANR	4048231	Statement	(	1314:19:49039:49039	4047909	26	True				
ANR	4048232	Statement	cur_precedence	1314:20:49040:49053	4047909	27	True				
ANR	4048233	Statement	->	1314:34:49054:49055	4047909	28	True				
ANR	4048234	Statement	trait_method	1314:36:49056:49067	4047909	29	True				
ANR	4048235	Statement	->	1314:48:49068:49069	4047909	30	True				
ANR	4048236	Statement	ce	1314:50:49070:49071	4047909	31	True				
ANR	4048237	Statement	->	1314:52:49072:49073	4047909	32	True				
ANR	4048238	Statement	name	1314:54:49074:49077	4047909	33	True				
ANR	4048239	Statement	)	1314:58:49078:49078	4047909	34	True				
ANR	4048240	Statement	)	1314:59:49079:49079	4047909	35	True				
ANR	4048241	ExpressionStatement		1314:60:49080:49080	4047909	36	True				
ANR	4048242	ExpressionStatement	zend_string_release ( class_name )	1317:5:49095:49126	4047909	4	True				
ANR	4048243	CallExpression	zend_string_release ( class_name )		4047909	0					
ANR	4048244	Callee	zend_string_release		4047909	0					
ANR	4048245	Identifier	zend_string_release		4047909	0					
ANR	4048246	ArgumentList	class_name		4047909	1					
ANR	4048247	Argument	class_name		4047909	0					
ANR	4048248	Identifier	class_name		4047909	0					
ANR	4048249	ExpressionStatement	j ++	1318:5:49133:49136	4047909	5	True				
ANR	4048250	PostIncDecOperationExpression	j ++		4047909	0					
ANR	4048251	Identifier	j		4047909	0					
ANR	4048252	IncDec	++		4047909	1					
ANR	4048253	ExpressionStatement	i ++	1321:3:49152:49155	4047909	1	True				
ANR	4048254	PostIncDecOperationExpression	i ++		4047909	0					
ANR	4048255	Identifier	i		4047909	0					
ANR	4048256	IncDec	++		4047909	1					
ANR	4048257	ExpressionStatement	ce -> trait_precedences = precedences	1323:2:49163:49198	4047909	4	True				
ANR	4048258	AssignmentExpression	ce -> trait_precedences = precedences		4047909	0		=			
ANR	4048259	PtrMemberAccess	ce -> trait_precedences		4047909	0					
ANR	4048260	Identifier	ce		4047909	0					
ANR	4048261	Identifier	trait_precedences		4047909	1					
ANR	4048262	Identifier	precedences		4047909	1					
ANR	4048263	IfStatement	if ( ce -> trait_aliases )		4047909	7					
ANR	4048264	Condition	ce -> trait_aliases	1326:5:49209:49225	4047909	0	True				
ANR	4048265	PtrMemberAccess	ce -> trait_aliases		4047909	0					
ANR	4048266	Identifier	ce		4047909	0					
ANR	4048267	Identifier	trait_aliases		4047909	1					
ANR	4048268	CompoundStatement		71:24:2831:2831	4047909	1					
ANR	4048269	ExpressionStatement	i = 0	1327:2:49232:49237	4047909	0	True				
ANR	4048270	AssignmentExpression	i = 0		4047909	0		=			
ANR	4048271	Identifier	i		4047909	0					
ANR	4048272	PrimaryExpression	0		4047909	1					
ANR	4048273	WhileStatement	while ( ce -> trait_aliases [ i ] )		4047909	1					
ANR	4048274	Condition	ce -> trait_aliases [ i ]	1328:9:49248:49267	4047909	0	True				
ANR	4048275	ArrayIndexing	ce -> trait_aliases [ i ]		4047909	0					
ANR	4048276	PtrMemberAccess	ce -> trait_aliases		4047909	0					
ANR	4048277	Identifier	ce		4047909	0					
ANR	4048278	Identifier	trait_aliases		4047909	1					
ANR	4048279	Identifier	i		4047909	1					
ANR	4048280	CompoundStatement		73:31:2873:2873	4047909	1					
ANR	4048281	IfStatement	if ( ce -> trait_aliases [ i ] -> trait_method -> class_name )		4047909	0					
ANR	4048282	Condition	ce -> trait_aliases [ i ] -> trait_method -> class_name	1330:7:49357:49402	4047909	0	True				
ANR	4048283	PtrMemberAccess	ce -> trait_aliases [ i ] -> trait_method -> class_name		4047909	0					
ANR	4048284	PtrMemberAccess	ce -> trait_aliases [ i ] -> trait_method		4047909	0					
ANR	4048285	ArrayIndexing	ce -> trait_aliases [ i ]		4047909	0					
ANR	4048286	PtrMemberAccess	ce -> trait_aliases		4047909	0					
ANR	4048287	Identifier	ce		4047909	0					
ANR	4048288	Identifier	trait_aliases		4047909	1					
ANR	4048289	Identifier	i		4047909	1					
ANR	4048290	Identifier	trait_method		4047909	1					
ANR	4048291	Identifier	class_name		4047909	1					
ANR	4048292	CompoundStatement		75:55:3008:3008	4047909	1					
ANR	4048293	ExpressionStatement	cur_method_ref = ce -> trait_aliases [ i ] -> trait_method	1331:4:49411:49462	4047909	0	True				
ANR	4048294	AssignmentExpression	cur_method_ref = ce -> trait_aliases [ i ] -> trait_method		4047909	0		=			
ANR	4048295	Identifier	cur_method_ref		4047909	0					
ANR	4048296	PtrMemberAccess	ce -> trait_aliases [ i ] -> trait_method		4047909	1					
ANR	4048297	ArrayIndexing	ce -> trait_aliases [ i ]		4047909	0					
ANR	4048298	PtrMemberAccess	ce -> trait_aliases		4047909	0					
ANR	4048299	Identifier	ce		4047909	0					
ANR	4048300	Identifier	trait_aliases		4047909	1					
ANR	4048301	Identifier	i		4047909	1					
ANR	4048302	Identifier	trait_method		4047909	1					
ANR	4048303	IfStatement	"if ( ! ( cur_method_ref -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) ) )"		4047909	1					
ANR	4048304	Condition	"! ( cur_method_ref -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"	1332:8:49472:49592	4047909	0	True				
ANR	4048305	UnaryOperationExpression	"! ( cur_method_ref -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"		4047909	0					
ANR	4048306	UnaryOperator	!		4047909	0					
ANR	4048307	AssignmentExpression	"cur_method_ref -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		4047909	1		=			
ANR	4048308	PtrMemberAccess	cur_method_ref -> ce		4047909	0					
ANR	4048309	Identifier	cur_method_ref		4047909	0					
ANR	4048310	Identifier	ce		4047909	1					
ANR	4048311	CallExpression	"zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		4047909	1					
ANR	4048312	Callee	zend_fetch_class		4047909	0					
ANR	4048313	Identifier	zend_fetch_class		4047909	0					
ANR	4048314	ArgumentList	cur_method_ref -> class_name		4047909	1					
ANR	4048315	Argument	cur_method_ref -> class_name		4047909	0					
ANR	4048316	PtrMemberAccess	cur_method_ref -> class_name		4047909	0					
ANR	4048317	Identifier	cur_method_ref		4047909	0					
ANR	4048318	Identifier	class_name		4047909	1					
ANR	4048319	Argument	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909	1					
ANR	4048320	InclusiveOrExpression	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909	0		|			
ANR	4048321	Identifier	ZEND_FETCH_CLASS_TRAIT		4047909	0					
ANR	4048322	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909	1					
ANR	4048323	CompoundStatement		77:131:3198:3198	4047909	1					
ANR	4048324	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( cur_method_ref -> class_name ) )"	1333:5:49602:49703	4047909	0	True				
ANR	4048325	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( cur_method_ref -> class_name ) )"		4047909	0					
ANR	4048326	Callee	zend_error_noreturn		4047909	0					
ANR	4048327	Identifier	zend_error_noreturn		4047909	0					
ANR	4048328	ArgumentList	E_COMPILE_ERROR		4047909	1					
ANR	4048329	Argument	E_COMPILE_ERROR		4047909	0					
ANR	4048330	Identifier	E_COMPILE_ERROR		4047909	0					
ANR	4048331	Argument	"""Could not find trait %s"""		4047909	1					
ANR	4048332	PrimaryExpression	"""Could not find trait %s"""		4047909	0					
ANR	4048333	Argument	ZSTR_VAL ( cur_method_ref -> class_name )		4047909	2					
ANR	4048334	CallExpression	ZSTR_VAL ( cur_method_ref -> class_name )		4047909	0					
ANR	4048335	Callee	ZSTR_VAL		4047909	0					
ANR	4048336	Identifier	ZSTR_VAL		4047909	0					
ANR	4048337	ArgumentList	cur_method_ref -> class_name		4047909	1					
ANR	4048338	Argument	cur_method_ref -> class_name		4047909	0					
ANR	4048339	PtrMemberAccess	cur_method_ref -> class_name		4047909	0					
ANR	4048340	Identifier	cur_method_ref		4047909	0					
ANR	4048341	Identifier	class_name		4047909	1					
ANR	4048342	ExpressionStatement	"zend_check_trait_usage ( ce , cur_method_ref -> ce )"	1335:4:49715:49761	4047909	2	True				
ANR	4048343	CallExpression	"zend_check_trait_usage ( ce , cur_method_ref -> ce )"		4047909	0					
ANR	4048344	Callee	zend_check_trait_usage		4047909	0					
ANR	4048345	Identifier	zend_check_trait_usage		4047909	0					
ANR	4048346	ArgumentList	ce		4047909	1					
ANR	4048347	Argument	ce		4047909	0					
ANR	4048348	Identifier	ce		4047909	0					
ANR	4048349	Argument	cur_method_ref -> ce		4047909	1					
ANR	4048350	PtrMemberAccess	cur_method_ref -> ce		4047909	0					
ANR	4048351	Identifier	cur_method_ref		4047909	0					
ANR	4048352	Identifier	ce		4047909	1					
ANR	4048353	ExpressionStatement	lcname = zend_string_tolower ( cur_method_ref -> method_name )	1338:4:49838:49895	4047909	3	True				
ANR	4048354	AssignmentExpression	lcname = zend_string_tolower ( cur_method_ref -> method_name )		4047909	0		=			
ANR	4048355	Identifier	lcname		4047909	0					
ANR	4048356	CallExpression	zend_string_tolower ( cur_method_ref -> method_name )		4047909	1					
ANR	4048357	Callee	zend_string_tolower		4047909	0					
ANR	4048358	Identifier	zend_string_tolower		4047909	0					
ANR	4048359	ArgumentList	cur_method_ref -> method_name		4047909	1					
ANR	4048360	Argument	cur_method_ref -> method_name		4047909	0					
ANR	4048361	PtrMemberAccess	cur_method_ref -> method_name		4047909	0					
ANR	4048362	Identifier	cur_method_ref		4047909	0					
ANR	4048363	Identifier	method_name		4047909	1					
ANR	4048364	ExpressionStatement	"method_exists = zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"	1339:4:49901:49984	4047909	4	True				
ANR	4048365	AssignmentExpression	"method_exists = zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"		4047909	0		=			
ANR	4048366	Identifier	method_exists		4047909	0					
ANR	4048367	CallExpression	"zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"		4047909	1					
ANR	4048368	Callee	zend_hash_exists		4047909	0					
ANR	4048369	Identifier	zend_hash_exists		4047909	0					
ANR	4048370	ArgumentList	& cur_method_ref -> ce -> function_table		4047909	1					
ANR	4048371	Argument	& cur_method_ref -> ce -> function_table		4047909	0					
ANR	4048372	UnaryOperationExpression	& cur_method_ref -> ce -> function_table		4047909	0					
ANR	4048373	UnaryOperator	&		4047909	0					
ANR	4048374	PtrMemberAccess	cur_method_ref -> ce -> function_table		4047909	1					
ANR	4048375	PtrMemberAccess	cur_method_ref -> ce		4047909	0					
ANR	4048376	Identifier	cur_method_ref		4047909	0					
ANR	4048377	Identifier	ce		4047909	1					
ANR	4048378	Identifier	function_table		4047909	1					
ANR	4048379	Argument	lcname		4047909	1					
ANR	4048380	Identifier	lcname		4047909	0					
ANR	4048381	ExpressionStatement	zend_string_release ( lcname )	1341:4:49990:50017	4047909	5	True				
ANR	4048382	CallExpression	zend_string_release ( lcname )		4047909	0					
ANR	4048383	Callee	zend_string_release		4047909	0					
ANR	4048384	Identifier	zend_string_release		4047909	0					
ANR	4048385	ArgumentList	lcname		4047909	1					
ANR	4048386	Argument	lcname		4047909	0					
ANR	4048387	Identifier	lcname		4047909	0					
ANR	4048388	IfStatement	if ( ! method_exists )		4047909	6					
ANR	4048389	Condition	! method_exists	1343:8:50028:50041	4047909	0	True				
ANR	4048390	UnaryOperationExpression	! method_exists		4047909	0					
ANR	4048391	UnaryOperator	!		4047909	0					
ANR	4048392	Identifier	method_exists		4047909	1					
ANR	4048393	CompoundStatement		88:24:3647:3647	4047909	1					
ANR	4048394	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""An alias was defined for %s::%s but this method does not exist"" , ZSTR_VAL ( cur_method_ref -> ce -> name ) , ZSTR_VAL ( cur_method_ref -> method_name ) )"	1344:5:50051:50228	4047909	0	True				
ANR	4048395	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""An alias was defined for %s::%s but this method does not exist"" , ZSTR_VAL ( cur_method_ref -> ce -> name ) , ZSTR_VAL ( cur_method_ref -> method_name ) )"		4047909	0					
ANR	4048396	Callee	zend_error_noreturn		4047909	0					
ANR	4048397	Identifier	zend_error_noreturn		4047909	0					
ANR	4048398	ArgumentList	E_COMPILE_ERROR		4047909	1					
ANR	4048399	Argument	E_COMPILE_ERROR		4047909	0					
ANR	4048400	Identifier	E_COMPILE_ERROR		4047909	0					
ANR	4048401	Argument	"""An alias was defined for %s::%s but this method does not exist"""		4047909	1					
ANR	4048402	PrimaryExpression	"""An alias was defined for %s::%s but this method does not exist"""		4047909	0					
ANR	4048403	Argument	ZSTR_VAL ( cur_method_ref -> ce -> name )		4047909	2					
ANR	4048404	CallExpression	ZSTR_VAL ( cur_method_ref -> ce -> name )		4047909	0					
ANR	4048405	Callee	ZSTR_VAL		4047909	0					
ANR	4048406	Identifier	ZSTR_VAL		4047909	0					
ANR	4048407	ArgumentList	cur_method_ref -> ce -> name		4047909	1					
ANR	4048408	Argument	cur_method_ref -> ce -> name		4047909	0					
ANR	4048409	PtrMemberAccess	cur_method_ref -> ce -> name		4047909	0					
ANR	4048410	PtrMemberAccess	cur_method_ref -> ce		4047909	0					
ANR	4048411	Identifier	cur_method_ref		4047909	0					
ANR	4048412	Identifier	ce		4047909	1					
ANR	4048413	Identifier	name		4047909	1					
ANR	4048414	Argument	ZSTR_VAL ( cur_method_ref -> method_name )		4047909	3					
ANR	4048415	CallExpression	ZSTR_VAL ( cur_method_ref -> method_name )		4047909	0					
ANR	4048416	Callee	ZSTR_VAL		4047909	0					
ANR	4048417	Identifier	ZSTR_VAL		4047909	0					
ANR	4048418	ArgumentList	cur_method_ref -> method_name		4047909	1					
ANR	4048419	Argument	cur_method_ref -> method_name		4047909	0					
ANR	4048420	PtrMemberAccess	cur_method_ref -> method_name		4047909	0					
ANR	4048421	Identifier	cur_method_ref		4047909	0					
ANR	4048422	Identifier	method_name		4047909	1					
ANR	4048423	ExpressionStatement	i ++	1347:3:50244:50247	4047909	1	True				
ANR	4048424	PostIncDecOperationExpression	i ++		4047909	0					
ANR	4048425	Identifier	i		4047909	0					
ANR	4048426	IncDec	++		4047909	1					
ANR	4048427	ReturnType	static void		4047909	1					
ANR	4048428	Identifier	zend_traits_init_trait_structures		4047909	2					
ANR	4048429	ParameterList	zend_class_entry * ce		4047909	3					
ANR	4048430	Parameter	zend_class_entry * ce	1255:46:46364:46383	4047909	0	True				
ANR	4048431	ParameterType	zend_class_entry *		4047909	0					
ANR	4048432	Identifier	ce		4047909	1					
ANR	4048433	CFGEntryNode	ENTRY		4047909		True				
ANR	4048434	CFGExitNode	EXIT		4047909		True				
ANR	4048435	Symbol	E_COMPILE_ERROR		4047909						
ANR	4048436	Symbol	cur_precedence -> exclude_from_classes [ j ] . ce		4047909						
ANR	4048437	Symbol	zend_hash_exists		4047909						
ANR	4048438	Symbol	* ce		4047909						
ANR	4048439	Symbol	zend_string_tolower		4047909						
ANR	4048440	Symbol	ZEND_FETCH_CLASS_TRAIT		4047909						
ANR	4048441	Symbol	cur_method_ref -> ce		4047909						
ANR	4048442	Symbol	* * cur_method_ref		4047909						
ANR	4048443	Symbol	cur_method_ref		4047909						
ANR	4048444	Symbol	* * ce -> trait_aliases		4047909						
ANR	4048445	Symbol	* cur_precedence		4047909						
ANR	4048446	Symbol	* cur_method_ref -> ce		4047909						
ANR	4048447	Symbol	cur_method_ref -> class_name		4047909						
ANR	4048448	Symbol	* * i		4047909						
ANR	4048449	Symbol	NULL		4047909						
ANR	4048450	Symbol	* cur_method_ref		4047909						
ANR	4048451	Symbol	cur_precedence -> trait_method -> ce		4047909						
ANR	4048452	Symbol	* cur_precedence -> exclude_from_classes		4047909						
ANR	4048453	Symbol	ce -> trait_precedences		4047909						
ANR	4048454	Symbol	cur_method_ref -> ce -> name		4047909						
ANR	4048455	Symbol	ce -> trait_aliases [ i ] -> trait_method		4047909						
ANR	4048456	Symbol	* ce -> trait_aliases [ i ] -> trait_method		4047909						
ANR	4048457	Symbol	* * * i		4047909						
ANR	4048458	Symbol	precedences		4047909						
ANR	4048459	Symbol	cur_precedence -> trait_method		4047909						
ANR	4048460	Symbol	& cur_method_ref -> ce -> function_table		4047909						
ANR	4048461	Symbol	* * * ce		4047909						
ANR	4048462	Symbol	ce -> trait_aliases [ i ] -> trait_method -> class_name		4047909						
ANR	4048463	Symbol	ZEND_FETCH_CLASS_NO_AUTOLOAD		4047909						
ANR	4048464	Symbol	cur_precedence		4047909						
ANR	4048465	Symbol	* * ce		4047909						
ANR	4048466	Symbol	cur_method_ref -> method_name		4047909						
ANR	4048467	Symbol	class_name		4047909						
ANR	4048468	Symbol	zend_fetch_class		4047909						
ANR	4048469	Symbol	cur_precedence -> exclude_from_classes [ j ] . class_name		4047909						
ANR	4048470	Symbol	ce		4047909						
ANR	4048471	Symbol	ce -> trait_aliases		4047909						
ANR	4048472	Symbol	i		4047909						
ANR	4048473	Symbol	j		4047909						
ANR	4048474	Symbol	cur_precedence -> exclude_from_classes		4047909						
ANR	4048475	Symbol	ZSTR_VAL		4047909						
ANR	4048476	Symbol	* * * * ce		4047909						
ANR	4048477	Symbol	* * * ce -> trait_aliases		4047909						
ANR	4048478	Symbol	lcname		4047909						
ANR	4048479	Symbol	* i		4047909						
ANR	4048480	Symbol	method_exists		4047909						
ANR	4048481	Symbol	* precedences		4047909						
ANR	4048482	Symbol	* j		4047909						
ANR	4048483	Symbol	* ce -> trait_aliases		4047909						
ANR	4048484	Symbol	* * cur_precedence		4047909						
ANR	4048485	Symbol	* cur_precedence -> trait_method		4047909						
ANR	4048486	Function	zend_traits_compile_exclude_table	1353:0:50269:51175							
ANR	4048487	FunctionDef	"zend_traits_compile_exclude_table (HashTable * exclude_table , zend_trait_precedence * * precedences , zend_class_entry * trait)"		4048486	0					
ANR	4048488	CompoundStatement		1354:0:50413:51175	4048486	0					
ANR	4048489	IdentifierDeclStatement	"size_t i = 0 , j ;"	1355:1:50416:50431	4048486	0	True				
ANR	4048490	IdentifierDecl	i = 0		4048486	0					
ANR	4048491	IdentifierDeclType	size_t		4048486	0					
ANR	4048492	Identifier	i		4048486	1					
ANR	4048493	AssignmentExpression	i = 0		4048486	2		=			
ANR	4048494	Identifier	i		4048486	0					
ANR	4048495	PrimaryExpression	0		4048486	1					
ANR	4048496	IdentifierDecl	j		4048486	1					
ANR	4048497	IdentifierDeclType	size_t		4048486	0					
ANR	4048498	Identifier	j		4048486	1					
ANR	4048499	IfStatement	if ( ! precedences )		4048486	1					
ANR	4048500	Condition	! precedences	1357:5:50439:50450	4048486	0	True				
ANR	4048501	UnaryOperationExpression	! precedences		4048486	0					
ANR	4048502	UnaryOperator	!		4048486	0					
ANR	4048503	Identifier	precedences		4048486	1					
ANR	4048504	CompoundStatement		4:19:39:39	4048486	1					
ANR	4048505	ReturnStatement	return ;	1358:2:50457:50463	4048486	0	True				
ANR	4048506	WhileStatement	while ( precedences [ i ] )		4048486	2					
ANR	4048507	Condition	precedences [ i ]	1360:8:50476:50489	4048486	0	True				
ANR	4048508	ArrayIndexing	precedences [ i ]		4048486	0					
ANR	4048509	Identifier	precedences		4048486	0					
ANR	4048510	Identifier	i		4048486	1					
ANR	4048511	CompoundStatement		7:24:78:78	4048486	1					
ANR	4048512	IfStatement	if ( precedences [ i ] -> exclude_from_classes )		4048486	0					
ANR	4048513	Condition	precedences [ i ] -> exclude_from_classes	1361:6:50500:50535	4048486	0	True				
ANR	4048514	PtrMemberAccess	precedences [ i ] -> exclude_from_classes		4048486	0					
ANR	4048515	ArrayIndexing	precedences [ i ]		4048486	0					
ANR	4048516	Identifier	precedences		4048486	0					
ANR	4048517	Identifier	i		4048486	1					
ANR	4048518	Identifier	exclude_from_classes		4048486	1					
ANR	4048519	CompoundStatement		8:44:124:124	4048486	1					
ANR	4048520	ExpressionStatement	j = 0	1362:3:50543:50548	4048486	0	True				
ANR	4048521	AssignmentExpression	j = 0		4048486	0		=			
ANR	4048522	Identifier	j		4048486	0					
ANR	4048523	PrimaryExpression	0		4048486	1					
ANR	4048524	WhileStatement	while ( precedences [ i ] -> exclude_from_classes [ j ] . ce )		4048486	1					
ANR	4048525	Condition	precedences [ i ] -> exclude_from_classes [ j ] . ce	1363:10:50560:50601	4048486	0	True				
ANR	4048526	MemberAccess	precedences [ i ] -> exclude_from_classes [ j ] . ce		4048486	0					
ANR	4048527	ArrayIndexing	precedences [ i ] -> exclude_from_classes [ j ]		4048486	0					
ANR	4048528	PtrMemberAccess	precedences [ i ] -> exclude_from_classes		4048486	0					
ANR	4048529	ArrayIndexing	precedences [ i ]		4048486	0					
ANR	4048530	Identifier	precedences		4048486	0					
ANR	4048531	Identifier	i		4048486	1					
ANR	4048532	Identifier	exclude_from_classes		4048486	1					
ANR	4048533	Identifier	j		4048486	1					
ANR	4048534	Identifier	ce		4048486	1					
ANR	4048535	CompoundStatement		10:54:190:190	4048486	1					
ANR	4048536	IfStatement	if ( precedences [ i ] -> exclude_from_classes [ j ] . ce == trait )		4048486	0					
ANR	4048537	Condition	precedences [ i ] -> exclude_from_classes [ j ] . ce == trait	1364:8:50614:50664	4048486	0	True				
ANR	4048538	EqualityExpression	precedences [ i ] -> exclude_from_classes [ j ] . ce == trait		4048486	0		==			
ANR	4048539	MemberAccess	precedences [ i ] -> exclude_from_classes [ j ] . ce		4048486	0					
ANR	4048540	ArrayIndexing	precedences [ i ] -> exclude_from_classes [ j ]		4048486	0					
ANR	4048541	PtrMemberAccess	precedences [ i ] -> exclude_from_classes		4048486	0					
ANR	4048542	ArrayIndexing	precedences [ i ]		4048486	0					
ANR	4048543	Identifier	precedences		4048486	0					
ANR	4048544	Identifier	i		4048486	1					
ANR	4048545	Identifier	exclude_from_classes		4048486	1					
ANR	4048546	Identifier	j		4048486	1					
ANR	4048547	Identifier	ce		4048486	1					
ANR	4048548	Identifier	trait		4048486	1					
ANR	4048549	CompoundStatement		12:5:260:350	4048486	1					
ANR	4048550	IdentifierDeclStatement	zend_string * lcname = zend_string_tolower ( precedences [ i ] -> trait_method -> method_name ) ;	1365:5:50674:50764	4048486	0	True				
ANR	4048551	IdentifierDecl	* lcname = zend_string_tolower ( precedences [ i ] -> trait_method -> method_name )		4048486	0					
ANR	4048552	IdentifierDeclType	zend_string *		4048486	0					
ANR	4048553	Identifier	lcname		4048486	1					
ANR	4048554	AssignmentExpression	* lcname = zend_string_tolower ( precedences [ i ] -> trait_method -> method_name )		4048486	2		=			
ANR	4048555	Identifier	lcname		4048486	0					
ANR	4048556	CallExpression	zend_string_tolower ( precedences [ i ] -> trait_method -> method_name )		4048486	1					
ANR	4048557	Callee	zend_string_tolower		4048486	0					
ANR	4048558	Identifier	zend_string_tolower		4048486	0					
ANR	4048559	ArgumentList	precedences [ i ] -> trait_method -> method_name		4048486	1					
ANR	4048560	Argument	precedences [ i ] -> trait_method -> method_name		4048486	0					
ANR	4048561	PtrMemberAccess	precedences [ i ] -> trait_method -> method_name		4048486	0					
ANR	4048562	PtrMemberAccess	precedences [ i ] -> trait_method		4048486	0					
ANR	4048563	ArrayIndexing	precedences [ i ]		4048486	0					
ANR	4048564	Identifier	precedences		4048486	0					
ANR	4048565	Identifier	i		4048486	1					
ANR	4048566	Identifier	trait_method		4048486	1					
ANR	4048567	Identifier	method_name		4048486	1					
ANR	4048568	IfStatement	"if ( zend_hash_add_empty_element ( exclude_table , lcname ) == NULL )"		4048486	1					
ANR	4048569	Condition	"zend_hash_add_empty_element ( exclude_table , lcname ) == NULL"	1367:9:50775:50832	4048486	0	True				
ANR	4048570	EqualityExpression	"zend_hash_add_empty_element ( exclude_table , lcname ) == NULL"		4048486	0		==			
ANR	4048571	CallExpression	"zend_hash_add_empty_element ( exclude_table , lcname )"		4048486	0					
ANR	4048572	Callee	zend_hash_add_empty_element		4048486	0					
ANR	4048573	Identifier	zend_hash_add_empty_element		4048486	0					
ANR	4048574	ArgumentList	exclude_table		4048486	1					
ANR	4048575	Argument	exclude_table		4048486	0					
ANR	4048576	Identifier	exclude_table		4048486	0					
ANR	4048577	Argument	lcname		4048486	1					
ANR	4048578	Identifier	lcname		4048486	0					
ANR	4048579	Identifier	NULL		4048486	1					
ANR	4048580	CompoundStatement		14:69:421:421	4048486	1					
ANR	4048581	ExpressionStatement	zend_string_release ( lcname )	1368:6:50843:50870	4048486	0	True				
ANR	4048582	CallExpression	zend_string_release ( lcname )		4048486	0					
ANR	4048583	Callee	zend_string_release		4048486	0					
ANR	4048584	Identifier	zend_string_release		4048486	0					
ANR	4048585	ArgumentList	lcname		4048486	1					
ANR	4048586	Argument	lcname		4048486	0					
ANR	4048587	Identifier	lcname		4048486	0					
ANR	4048588	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Failed to evaluate a trait precedence (%s). Method of trait %s was defined to be excluded multiple times"" , ZSTR_VAL ( precedences [ i ] -> trait_method -> method_name ) , ZSTR_VAL ( trait -> name ) )"	1369:6:50878:51098	4048486	1	True				
ANR	4048589	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Failed to evaluate a trait precedence (%s). Method of trait %s was defined to be excluded multiple times"" , ZSTR_VAL ( precedences [ i ] -> trait_method -> method_name ) , ZSTR_VAL ( trait -> name ) )"		4048486	0					
ANR	4048590	Callee	zend_error_noreturn		4048486	0					
ANR	4048591	Identifier	zend_error_noreturn		4048486	0					
ANR	4048592	ArgumentList	E_COMPILE_ERROR		4048486	1					
ANR	4048593	Argument	E_COMPILE_ERROR		4048486	0					
ANR	4048594	Identifier	E_COMPILE_ERROR		4048486	0					
ANR	4048595	Argument	"""Failed to evaluate a trait precedence (%s). Method of trait %s was defined to be excluded multiple times"""		4048486	1					
ANR	4048596	PrimaryExpression	"""Failed to evaluate a trait precedence (%s). Method of trait %s was defined to be excluded multiple times"""		4048486	0					
ANR	4048597	Argument	ZSTR_VAL ( precedences [ i ] -> trait_method -> method_name )		4048486	2					
ANR	4048598	CallExpression	ZSTR_VAL ( precedences [ i ] -> trait_method -> method_name )		4048486	0					
ANR	4048599	Callee	ZSTR_VAL		4048486	0					
ANR	4048600	Identifier	ZSTR_VAL		4048486	0					
ANR	4048601	ArgumentList	precedences [ i ] -> trait_method -> method_name		4048486	1					
ANR	4048602	Argument	precedences [ i ] -> trait_method -> method_name		4048486	0					
ANR	4048603	PtrMemberAccess	precedences [ i ] -> trait_method -> method_name		4048486	0					
ANR	4048604	PtrMemberAccess	precedences [ i ] -> trait_method		4048486	0					
ANR	4048605	ArrayIndexing	precedences [ i ]		4048486	0					
ANR	4048606	Identifier	precedences		4048486	0					
ANR	4048607	Identifier	i		4048486	1					
ANR	4048608	Identifier	trait_method		4048486	1					
ANR	4048609	Identifier	method_name		4048486	1					
ANR	4048610	Argument	ZSTR_VAL ( trait -> name )		4048486	3					
ANR	4048611	CallExpression	ZSTR_VAL ( trait -> name )		4048486	0					
ANR	4048612	Callee	ZSTR_VAL		4048486	0					
ANR	4048613	Identifier	ZSTR_VAL		4048486	0					
ANR	4048614	ArgumentList	trait -> name		4048486	1					
ANR	4048615	Argument	trait -> name		4048486	0					
ANR	4048616	PtrMemberAccess	trait -> name		4048486	0					
ANR	4048617	Identifier	trait		4048486	0					
ANR	4048618	Identifier	name		4048486	1					
ANR	4048619	ExpressionStatement	zend_string_release ( lcname )	1371:5:51112:51139	4048486	2	True				
ANR	4048620	CallExpression	zend_string_release ( lcname )		4048486	0					
ANR	4048621	Callee	zend_string_release		4048486	0					
ANR	4048622	Identifier	zend_string_release		4048486	0					
ANR	4048623	ArgumentList	lcname		4048486	1					
ANR	4048624	Argument	lcname		4048486	0					
ANR	4048625	Identifier	lcname		4048486	0					
ANR	4048626	ExpressionStatement	++ j	1373:4:51151:51154	4048486	1	True				
ANR	4048627	UnaryExpression	++ j		4048486	0					
ANR	4048628	IncDec	++		4048486	0					
ANR	4048629	Identifier	j		4048486	1					
ANR	4048630	ExpressionStatement	++ i	1376:2:51167:51170	4048486	1	True				
ANR	4048631	UnaryExpression	++ i		4048486	0					
ANR	4048632	IncDec	++		4048486	0					
ANR	4048633	Identifier	i		4048486	1					
ANR	4048634	ReturnType	static void		4048486	1					
ANR	4048635	Identifier	zend_traits_compile_exclude_table		4048486	2					
ANR	4048636	ParameterList	"HashTable * exclude_table , zend_trait_precedence * * precedences , zend_class_entry * trait"		4048486	3					
ANR	4048637	Parameter	HashTable * exclude_table	1353:46:50315:50338	4048486	0	True				
ANR	4048638	ParameterType	HashTable *		4048486	0					
ANR	4048639	Identifier	exclude_table		4048486	1					
ANR	4048640	Parameter	zend_trait_precedence * * precedences	1353:72:50341:50375	4048486	1	True				
ANR	4048641	ParameterType	zend_trait_precedence * *		4048486	0					
ANR	4048642	Identifier	precedences		4048486	1					
ANR	4048643	Parameter	zend_class_entry * trait	1353:109:50378:50400	4048486	2	True				
ANR	4048644	ParameterType	zend_class_entry *		4048486	0					
ANR	4048645	Identifier	trait		4048486	1					
ANR	4048646	CFGEntryNode	ENTRY		4048486		True				
ANR	4048647	CFGExitNode	EXIT		4048486		True				
ANR	4048648	Symbol	* * precedences		4048486						
ANR	4048649	Symbol	precedences [ i ] -> exclude_from_classes		4048486						
ANR	4048650	Symbol	E_COMPILE_ERROR		4048486						
ANR	4048651	Symbol	exclude_table		4048486						
ANR	4048652	Symbol	zend_string_tolower		4048486						
ANR	4048653	Symbol	zend_hash_add_empty_element		4048486						
ANR	4048654	Symbol	precedences [ i ] -> trait_method		4048486						
ANR	4048655	Symbol	trait		4048486						
ANR	4048656	Symbol	* * * precedences		4048486						
ANR	4048657	Symbol	* trait		4048486						
ANR	4048658	Symbol	* * i		4048486						
ANR	4048659	Symbol	NULL		4048486						
ANR	4048660	Symbol	i		4048486						
ANR	4048661	Symbol	j		4048486						
ANR	4048662	Symbol	trait -> name		4048486						
ANR	4048663	Symbol	precedences [ i ] -> trait_method -> method_name		4048486						
ANR	4048664	Symbol	ZSTR_VAL		4048486						
ANR	4048665	Symbol	* precedences [ i ] -> trait_method		4048486						
ANR	4048666	Symbol	* i		4048486						
ANR	4048667	Symbol	lcname		4048486						
ANR	4048668	Symbol	* precedences		4048486						
ANR	4048669	Symbol	* j		4048486						
ANR	4048670	Symbol	precedences [ i ] -> exclude_from_classes [ j ] . ce		4048486						
ANR	4048671	Symbol	* precedences [ i ] -> exclude_from_classes		4048486						
ANR	4048672	Symbol	* * * i		4048486						
ANR	4048673	Symbol	precedences		4048486						
ANR	4048674	Function	zend_do_traits_method_binding	1381:0:51188:52767							
ANR	4048675	FunctionDef	zend_do_traits_method_binding (zend_class_entry * ce)		4048674	0					
ANR	4048676	CompoundStatement		1382:0:51262:52767	4048674	0					
ANR	4048677	IdentifierDeclStatement	uint32_t i ;	1383:1:51265:51275	4048674	0	True				
ANR	4048678	IdentifierDecl	i		4048674	0					
ANR	4048679	IdentifierDeclType	uint32_t		4048674	0					
ANR	4048680	Identifier	i		4048674	1					
ANR	4048681	IdentifierDeclStatement	HashTable * overriden = NULL ;	1384:1:51278:51305	4048674	1	True				
ANR	4048682	IdentifierDecl	* overriden = NULL		4048674	0					
ANR	4048683	IdentifierDeclType	HashTable *		4048674	0					
ANR	4048684	Identifier	overriden		4048674	1					
ANR	4048685	AssignmentExpression	* overriden = NULL		4048674	2		=			
ANR	4048686	Identifier	NULL		4048674	0					
ANR	4048687	Identifier	NULL		4048674	1					
ANR	4048688	IdentifierDeclStatement	zend_string * key ;	1385:1:51308:51324	4048674	2	True				
ANR	4048689	IdentifierDecl	* key		4048674	0					
ANR	4048690	IdentifierDeclType	zend_string *		4048674	0					
ANR	4048691	Identifier	key		4048674	1					
ANR	4048692	IdentifierDeclStatement	zend_function * fn ;	1386:1:51327:51344	4048674	3	True				
ANR	4048693	IdentifierDecl	* fn		4048674	0					
ANR	4048694	IdentifierDeclType	zend_function *		4048674	0					
ANR	4048695	Identifier	fn		4048674	1					
ANR	4048696	ForStatement	for ( i = 0 ; i < ce -> num_traits ; i ++ )		4048674	4					
ANR	4048697	ForInit	i = 0 ;	1388:6:51353:51358	4048674	0	True				
ANR	4048698	AssignmentExpression	i = 0		4048674	0		=			
ANR	4048699	Identifier	i		4048674	0					
ANR	4048700	PrimaryExpression	0		4048674	1					
ANR	4048701	Condition	i < ce -> num_traits	1388:13:51360:51377	4048674	1	True				
ANR	4048702	RelationalExpression	i < ce -> num_traits		4048674	0		<			
ANR	4048703	Identifier	i		4048674	0					
ANR	4048704	PtrMemberAccess	ce -> num_traits		4048674	1					
ANR	4048705	Identifier	ce		4048674	0					
ANR	4048706	Identifier	num_traits		4048674	1					
ANR	4048707	PostIncDecOperationExpression	i ++	1388:33:51380:51382	4048674	2	True				
ANR	4048708	Identifier	i		4048674	0					
ANR	4048709	IncDec	++		4048674	1					
ANR	4048710	CompoundStatement		7:38:122:122	4048674	3					
ANR	4048711	IfStatement	if ( ce -> trait_precedences )		4048674	0					
ANR	4048712	Condition	ce -> trait_precedences	1389:6:51393:51413	4048674	0	True				
ANR	4048713	PtrMemberAccess	ce -> trait_precedences		4048674	0					
ANR	4048714	Identifier	ce		4048674	0					
ANR	4048715	Identifier	trait_precedences		4048674	1					
ANR	4048716	CompoundStatement		10:3:186:221	4048674	1					
ANR	4048717	IdentifierDeclStatement	HashTable exclude_table ;	1390:3:51421:51444	4048674	0	True				
ANR	4048718	IdentifierDecl	exclude_table		4048674	0					
ANR	4048719	IdentifierDeclType	HashTable		4048674	0					
ANR	4048720	Identifier	exclude_table		4048674	1					
ANR	4048721	IdentifierDeclStatement	zend_trait_precedence * * precedences ;	1391:3:51449:51484	4048674	1	True				
ANR	4048722	IdentifierDecl	* * precedences		4048674	0					
ANR	4048723	IdentifierDeclType	zend_trait_precedence * *		4048674	0					
ANR	4048724	Identifier	precedences		4048674	1					
ANR	4048725	ExpressionStatement	"zend_hash_init_ex ( & exclude_table , 8 , NULL , NULL , 0 , 0 )"	1394:3:51553:51607	4048674	2	True				
ANR	4048726	CallExpression	"zend_hash_init_ex ( & exclude_table , 8 , NULL , NULL , 0 , 0 )"		4048674	0					
ANR	4048727	Callee	zend_hash_init_ex		4048674	0					
ANR	4048728	Identifier	zend_hash_init_ex		4048674	0					
ANR	4048729	ArgumentList	& exclude_table		4048674	1					
ANR	4048730	Argument	& exclude_table		4048674	0					
ANR	4048731	UnaryOperationExpression	& exclude_table		4048674	0					
ANR	4048732	UnaryOperator	&		4048674	0					
ANR	4048733	Identifier	exclude_table		4048674	1					
ANR	4048734	Argument	8		4048674	1					
ANR	4048735	PrimaryExpression	8		4048674	0					
ANR	4048736	Argument	NULL		4048674	2					
ANR	4048737	Identifier	NULL		4048674	0					
ANR	4048738	Argument	NULL		4048674	3					
ANR	4048739	Identifier	NULL		4048674	0					
ANR	4048740	Argument	0		4048674	4					
ANR	4048741	PrimaryExpression	0		4048674	0					
ANR	4048742	Argument	0		4048674	5					
ANR	4048743	PrimaryExpression	0		4048674	0					
ANR	4048744	ExpressionStatement	precedences = ce -> trait_precedences	1396:3:51613:51648	4048674	3	True				
ANR	4048745	AssignmentExpression	precedences = ce -> trait_precedences		4048674	0		=			
ANR	4048746	Identifier	precedences		4048674	0					
ANR	4048747	PtrMemberAccess	ce -> trait_precedences		4048674	1					
ANR	4048748	Identifier	ce		4048674	0					
ANR	4048749	Identifier	trait_precedences		4048674	1					
ANR	4048750	ExpressionStatement	ce -> trait_precedences = NULL	1397:3:51653:51681	4048674	4	True				
ANR	4048751	AssignmentExpression	ce -> trait_precedences = NULL		4048674	0		=			
ANR	4048752	PtrMemberAccess	ce -> trait_precedences		4048674	0					
ANR	4048753	Identifier	ce		4048674	0					
ANR	4048754	Identifier	trait_precedences		4048674	1					
ANR	4048755	Identifier	NULL		4048674	1					
ANR	4048756	ExpressionStatement	"zend_traits_compile_exclude_table ( & exclude_table , precedences , ce -> traits [ i ] )"	1398:3:51686:51763	4048674	5	True				
ANR	4048757	CallExpression	"zend_traits_compile_exclude_table ( & exclude_table , precedences , ce -> traits [ i ] )"		4048674	0					
ANR	4048758	Callee	zend_traits_compile_exclude_table		4048674	0					
ANR	4048759	Identifier	zend_traits_compile_exclude_table		4048674	0					
ANR	4048760	ArgumentList	& exclude_table		4048674	1					
ANR	4048761	Argument	& exclude_table		4048674	0					
ANR	4048762	UnaryOperationExpression	& exclude_table		4048674	0					
ANR	4048763	UnaryOperator	&		4048674	0					
ANR	4048764	Identifier	exclude_table		4048674	1					
ANR	4048765	Argument	precedences		4048674	1					
ANR	4048766	Identifier	precedences		4048674	0					
ANR	4048767	Argument	ce -> traits [ i ]		4048674	2					
ANR	4048768	ArrayIndexing	ce -> traits [ i ]		4048674	0					
ANR	4048769	PtrMemberAccess	ce -> traits		4048674	0					
ANR	4048770	Identifier	ce		4048674	0					
ANR	4048771	Identifier	traits		4048674	1					
ANR	4048772	Identifier	i		4048674	1					
ANR	4048773	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	1401:3:51856:51884	4048674	6	True				
ANR	4048774	Statement	(	1401:32:51885:51885	4048674	7	True				
ANR	4048775	Statement	&	1401:33:51886:51886	4048674	8	True				
ANR	4048776	Statement	ce	1401:34:51887:51888	4048674	9	True				
ANR	4048777	Statement	->	1401:36:51889:51890	4048674	10	True				
ANR	4048778	Statement	traits	1401:38:51891:51896	4048674	11	True				
ANR	4048779	Statement	[	1401:44:51897:51897	4048674	12	True				
ANR	4048780	Statement	i	1401:45:51898:51898	4048674	13	True				
ANR	4048781	Statement	]	1401:46:51899:51899	4048674	14	True				
ANR	4048782	Statement	->	1401:47:51900:51901	4048674	15	True				
ANR	4048783	Statement	function_table	1401:49:51902:51915	4048674	16	True				
ANR	4048784	Statement	","	1401:63:51916:51916	4048674	17	True				
ANR	4048785	Statement	key	1401:65:51918:51920	4048674	18	True				
ANR	4048786	Statement	","	1401:68:51921:51921	4048674	19	True				
ANR	4048787	Statement	fn	1401:70:51923:51924	4048674	20	True				
ANR	4048788	Statement	)	1401:72:51925:51925	4048674	21	True				
ANR	4048789	CompoundStatement		20:74:664:664	4048674	22					
ANR	4048790	ExpressionStatement	"zend_traits_copy_functions ( key , fn , ce , & overriden , & exclude_table )"	1402:4:51933:52000	4048674	0	True				
ANR	4048791	CallExpression	"zend_traits_copy_functions ( key , fn , ce , & overriden , & exclude_table )"		4048674	0					
ANR	4048792	Callee	zend_traits_copy_functions		4048674	0					
ANR	4048793	Identifier	zend_traits_copy_functions		4048674	0					
ANR	4048794	ArgumentList	key		4048674	1					
ANR	4048795	Argument	key		4048674	0					
ANR	4048796	Identifier	key		4048674	0					
ANR	4048797	Argument	fn		4048674	1					
ANR	4048798	Identifier	fn		4048674	0					
ANR	4048799	Argument	ce		4048674	2					
ANR	4048800	Identifier	ce		4048674	0					
ANR	4048801	Argument	& overriden		4048674	3					
ANR	4048802	UnaryOperationExpression	& overriden		4048674	0					
ANR	4048803	UnaryOperator	&		4048674	0					
ANR	4048804	Identifier	overriden		4048674	1					
ANR	4048805	Argument	& exclude_table		4048674	4					
ANR	4048806	UnaryOperationExpression	& exclude_table		4048674	0					
ANR	4048807	UnaryOperator	&		4048674	0					
ANR	4048808	Identifier	exclude_table		4048674	1					
ANR	4048809	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1403:5:52007:52030	4048674	23	True				
ANR	4048810	CallExpression	ZEND_HASH_FOREACH_END ( )		4048674	0					
ANR	4048811	Callee	ZEND_HASH_FOREACH_END		4048674	0					
ANR	4048812	Identifier	ZEND_HASH_FOREACH_END		4048674	0					
ANR	4048813	ArgumentList			4048674	1					
ANR	4048814	ExpressionStatement	zend_hash_destroy ( & exclude_table )	1405:3:52036:52069	4048674	24	True				
ANR	4048815	CallExpression	zend_hash_destroy ( & exclude_table )		4048674	0					
ANR	4048816	Callee	zend_hash_destroy		4048674	0					
ANR	4048817	Identifier	zend_hash_destroy		4048674	0					
ANR	4048818	ArgumentList	& exclude_table		4048674	1					
ANR	4048819	Argument	& exclude_table		4048674	0					
ANR	4048820	UnaryOperationExpression	& exclude_table		4048674	0					
ANR	4048821	UnaryOperator	&		4048674	0					
ANR	4048822	Identifier	exclude_table		4048674	1					
ANR	4048823	ExpressionStatement	ce -> trait_precedences = precedences	1406:3:52074:52109	4048674	25	True				
ANR	4048824	AssignmentExpression	ce -> trait_precedences = precedences		4048674	0		=			
ANR	4048825	PtrMemberAccess	ce -> trait_precedences		4048674	0					
ANR	4048826	Identifier	ce		4048674	0					
ANR	4048827	Identifier	trait_precedences		4048674	1					
ANR	4048828	Identifier	precedences		4048674	1					
ANR	4048829	ElseStatement	else		4048674	0					
ANR	4048830	CompoundStatement		26:9:857:857	4048674	0					
ANR	4048831	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	1408:3:52125:52153	4048674	0	True				
ANR	4048832	Statement	(	1408:32:52154:52154	4048674	1	True				
ANR	4048833	Statement	&	1408:33:52155:52155	4048674	2	True				
ANR	4048834	Statement	ce	1408:34:52156:52157	4048674	3	True				
ANR	4048835	Statement	->	1408:36:52158:52159	4048674	4	True				
ANR	4048836	Statement	traits	1408:38:52160:52165	4048674	5	True				
ANR	4048837	Statement	[	1408:44:52166:52166	4048674	6	True				
ANR	4048838	Statement	i	1408:45:52167:52167	4048674	7	True				
ANR	4048839	Statement	]	1408:46:52168:52168	4048674	8	True				
ANR	4048840	Statement	->	1408:47:52169:52170	4048674	9	True				
ANR	4048841	Statement	function_table	1408:49:52171:52184	4048674	10	True				
ANR	4048842	Statement	","	1408:63:52185:52185	4048674	11	True				
ANR	4048843	Statement	key	1408:65:52187:52189	4048674	12	True				
ANR	4048844	Statement	","	1408:68:52190:52190	4048674	13	True				
ANR	4048845	Statement	fn	1408:70:52192:52193	4048674	14	True				
ANR	4048846	Statement	)	1408:72:52194:52194	4048674	15	True				
ANR	4048847	CompoundStatement		27:74:933:933	4048674	16					
ANR	4048848	ExpressionStatement	"zend_traits_copy_functions ( key , fn , ce , & overriden , NULL )"	1409:4:52202:52259	4048674	0	True				
ANR	4048849	CallExpression	"zend_traits_copy_functions ( key , fn , ce , & overriden , NULL )"		4048674	0					
ANR	4048850	Callee	zend_traits_copy_functions		4048674	0					
ANR	4048851	Identifier	zend_traits_copy_functions		4048674	0					
ANR	4048852	ArgumentList	key		4048674	1					
ANR	4048853	Argument	key		4048674	0					
ANR	4048854	Identifier	key		4048674	0					
ANR	4048855	Argument	fn		4048674	1					
ANR	4048856	Identifier	fn		4048674	0					
ANR	4048857	Argument	ce		4048674	2					
ANR	4048858	Identifier	ce		4048674	0					
ANR	4048859	Argument	& overriden		4048674	3					
ANR	4048860	UnaryOperationExpression	& overriden		4048674	0					
ANR	4048861	UnaryOperator	&		4048674	0					
ANR	4048862	Identifier	overriden		4048674	1					
ANR	4048863	Argument	NULL		4048674	4					
ANR	4048864	Identifier	NULL		4048674	0					
ANR	4048865	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1410:5:52266:52289	4048674	17	True				
ANR	4048866	CallExpression	ZEND_HASH_FOREACH_END ( )		4048674	0					
ANR	4048867	Callee	ZEND_HASH_FOREACH_END		4048674	0					
ANR	4048868	Identifier	ZEND_HASH_FOREACH_END		4048674	0					
ANR	4048869	ArgumentList			4048674	1					
ANR	4048870	Statement	ZEND_HASH_FOREACH_PTR	1414:1:52300:52320	4048674	5	True				
ANR	4048871	Statement	(	1414:22:52321:52321	4048674	6	True				
ANR	4048872	Statement	&	1414:23:52322:52322	4048674	7	True				
ANR	4048873	Statement	ce	1414:24:52323:52324	4048674	8	True				
ANR	4048874	Statement	->	1414:26:52325:52326	4048674	9	True				
ANR	4048875	Statement	function_table	1414:28:52327:52340	4048674	10	True				
ANR	4048876	Statement	","	1414:42:52341:52341	4048674	11	True				
ANR	4048877	Statement	fn	1414:44:52343:52344	4048674	12	True				
ANR	4048878	Statement	)	1414:46:52345:52345	4048674	13	True				
ANR	4048879	CompoundStatement		33:48:1084:1084	4048674	14					
ANR	4048880	ExpressionStatement	"zend_fixup_trait_method ( fn , ce )"	1415:2:52351:52382	4048674	0	True				
ANR	4048881	CallExpression	"zend_fixup_trait_method ( fn , ce )"		4048674	0					
ANR	4048882	Callee	zend_fixup_trait_method		4048674	0					
ANR	4048883	Identifier	zend_fixup_trait_method		4048674	0					
ANR	4048884	ArgumentList	fn		4048674	1					
ANR	4048885	Argument	fn		4048674	0					
ANR	4048886	Identifier	fn		4048674	0					
ANR	4048887	Argument	ce		4048674	1					
ANR	4048888	Identifier	ce		4048674	0					
ANR	4048889	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1416:3:52387:52410	4048674	15	True				
ANR	4048890	CallExpression	ZEND_HASH_FOREACH_END ( )		4048674	0					
ANR	4048891	Callee	ZEND_HASH_FOREACH_END		4048674	0					
ANR	4048892	Identifier	ZEND_HASH_FOREACH_END		4048674	0					
ANR	4048893	ArgumentList			4048674	1					
ANR	4048894	IfStatement	if ( ce -> trait_precedences )		4048674	16					
ANR	4048895	Condition	ce -> trait_precedences	1418:5:52418:52438	4048674	0	True				
ANR	4048896	PtrMemberAccess	ce -> trait_precedences		4048674	0					
ANR	4048897	Identifier	ce		4048674	0					
ANR	4048898	Identifier	trait_precedences		4048674	1					
ANR	4048899	CompoundStatement		37:28:1178:1178	4048674	1					
ANR	4048900	ExpressionStatement	i = 0	1419:2:52445:52450	4048674	0	True				
ANR	4048901	AssignmentExpression	i = 0		4048674	0		=			
ANR	4048902	Identifier	i		4048674	0					
ANR	4048903	PrimaryExpression	0		4048674	1					
ANR	4048904	WhileStatement	while ( ce -> trait_precedences [ i ] )		4048674	1					
ANR	4048905	Condition	ce -> trait_precedences [ i ]	1420:9:52461:52484	4048674	0	True				
ANR	4048906	ArrayIndexing	ce -> trait_precedences [ i ]		4048674	0					
ANR	4048907	PtrMemberAccess	ce -> trait_precedences		4048674	0					
ANR	4048908	Identifier	ce		4048674	0					
ANR	4048909	Identifier	trait_precedences		4048674	1					
ANR	4048910	Identifier	i		4048674	1					
ANR	4048911	CompoundStatement		39:35:1224:1224	4048674	1					
ANR	4048912	IfStatement	if ( ce -> trait_precedences [ i ] -> exclude_from_classes )		4048674	0					
ANR	4048913	Condition	ce -> trait_precedences [ i ] -> exclude_from_classes	1421:7:52496:52541	4048674	0	True				
ANR	4048914	PtrMemberAccess	ce -> trait_precedences [ i ] -> exclude_from_classes		4048674	0					
ANR	4048915	ArrayIndexing	ce -> trait_precedences [ i ]		4048674	0					
ANR	4048916	PtrMemberAccess	ce -> trait_precedences		4048674	0					
ANR	4048917	Identifier	ce		4048674	0					
ANR	4048918	Identifier	trait_precedences		4048674	1					
ANR	4048919	Identifier	i		4048674	1					
ANR	4048920	Identifier	exclude_from_classes		4048674	1					
ANR	4048921	CompoundStatement		40:55:1281:1281	4048674	1					
ANR	4048922	ExpressionStatement	efree ( ce -> trait_precedences [ i ] -> exclude_from_classes )	1422:4:52550:52603	4048674	0	True				
ANR	4048923	CallExpression	efree ( ce -> trait_precedences [ i ] -> exclude_from_classes )		4048674	0					
ANR	4048924	Callee	efree		4048674	0					
ANR	4048925	Identifier	efree		4048674	0					
ANR	4048926	ArgumentList	ce -> trait_precedences [ i ] -> exclude_from_classes		4048674	1					
ANR	4048927	Argument	ce -> trait_precedences [ i ] -> exclude_from_classes		4048674	0					
ANR	4048928	PtrMemberAccess	ce -> trait_precedences [ i ] -> exclude_from_classes		4048674	0					
ANR	4048929	ArrayIndexing	ce -> trait_precedences [ i ]		4048674	0					
ANR	4048930	PtrMemberAccess	ce -> trait_precedences		4048674	0					
ANR	4048931	Identifier	ce		4048674	0					
ANR	4048932	Identifier	trait_precedences		4048674	1					
ANR	4048933	Identifier	i		4048674	1					
ANR	4048934	Identifier	exclude_from_classes		4048674	1					
ANR	4048935	ExpressionStatement	ce -> trait_precedences [ i ] -> exclude_from_classes = NULL	1423:4:52609:52662	4048674	1	True				
ANR	4048936	AssignmentExpression	ce -> trait_precedences [ i ] -> exclude_from_classes = NULL		4048674	0		=			
ANR	4048937	PtrMemberAccess	ce -> trait_precedences [ i ] -> exclude_from_classes		4048674	0					
ANR	4048938	ArrayIndexing	ce -> trait_precedences [ i ]		4048674	0					
ANR	4048939	PtrMemberAccess	ce -> trait_precedences		4048674	0					
ANR	4048940	Identifier	ce		4048674	0					
ANR	4048941	Identifier	trait_precedences		4048674	1					
ANR	4048942	Identifier	i		4048674	1					
ANR	4048943	Identifier	exclude_from_classes		4048674	1					
ANR	4048944	Identifier	NULL		4048674	1					
ANR	4048945	ExpressionStatement	i ++	1425:3:52672:52675	4048674	1	True				
ANR	4048946	PostIncDecOperationExpression	i ++		4048674	0					
ANR	4048947	Identifier	i		4048674	0					
ANR	4048948	IncDec	++		4048674	1					
ANR	4048949	IfStatement	if ( overriden )		4048674	17					
ANR	4048950	Condition	overriden	1429:5:52690:52698	4048674	0	True				
ANR	4048951	Identifier	overriden		4048674	0					
ANR	4048952	CompoundStatement		48:16:1438:1438	4048674	1					
ANR	4048953	ExpressionStatement	zend_hash_destroy ( overriden )	1430:2:52705:52733	4048674	0	True				
ANR	4048954	CallExpression	zend_hash_destroy ( overriden )		4048674	0					
ANR	4048955	Callee	zend_hash_destroy		4048674	0					
ANR	4048956	Identifier	zend_hash_destroy		4048674	0					
ANR	4048957	ArgumentList	overriden		4048674	1					
ANR	4048958	Argument	overriden		4048674	0					
ANR	4048959	Identifier	overriden		4048674	0					
ANR	4048960	ExpressionStatement	FREE_HASHTABLE ( overriden )	1431:2:52737:52762	4048674	1	True				
ANR	4048961	CallExpression	FREE_HASHTABLE ( overriden )		4048674	0					
ANR	4048962	Callee	FREE_HASHTABLE		4048674	0					
ANR	4048963	Identifier	FREE_HASHTABLE		4048674	0					
ANR	4048964	ArgumentList	overriden		4048674	1					
ANR	4048965	Argument	overriden		4048674	0					
ANR	4048966	Identifier	overriden		4048674	0					
ANR	4048967	ReturnType	static void		4048674	1					
ANR	4048968	Identifier	zend_do_traits_method_binding		4048674	2					
ANR	4048969	ParameterList	zend_class_entry * ce		4048674	3					
ANR	4048970	Parameter	zend_class_entry * ce	1381:42:51230:51249	4048674	0	True				
ANR	4048971	ParameterType	zend_class_entry *		4048674	0					
ANR	4048972	Identifier	ce		4048674	1					
ANR	4048973	CFGEntryNode	ENTRY		4048674		True				
ANR	4048974	CFGExitNode	EXIT		4048674		True				
ANR	4048975	Symbol	ce		4048674						
ANR	4048976	Symbol	& exclude_table		4048674						
ANR	4048977	Symbol	* * i		4048674						
ANR	4048978	Symbol	NULL		4048674						
ANR	4048979	Symbol	* * ce -> trait_precedences		4048674						
ANR	4048980	Symbol	& overriden		4048674						
ANR	4048981	Symbol	fn		4048674						
ANR	4048982	Symbol	i		4048674						
ANR	4048983	Symbol	* ce		4048674						
ANR	4048984	Symbol	exclude_table		4048674						
ANR	4048985	Symbol	ce -> num_traits		4048674						
ANR	4048986	Symbol	* * ce		4048674						
ANR	4048987	Symbol	overriden		4048674						
ANR	4048988	Symbol	ce -> trait_precedences		4048674						
ANR	4048989	Symbol	ce -> traits		4048674						
ANR	4048990	Symbol	* ce -> traits		4048674						
ANR	4048991	Symbol	* i		4048674						
ANR	4048992	Symbol	ce -> trait_precedences [ i ] -> exclude_from_classes		4048674						
ANR	4048993	Symbol	* ce -> trait_precedences		4048674						
ANR	4048994	Symbol	precedences		4048674						
ANR	4048995	Symbol	key		4048674						
ANR	4048996	Symbol	* * * ce		4048674						
ANR	4048997	Function	find_first_definition	1436:0:52780:53147							
ANR	4048998	FunctionDef	"find_first_definition (zend_class_entry * ce , size_t current_trait , zend_string * prop_name , zend_class_entry * coliding_ce)"		4048997	0					
ANR	4048999	CompoundStatement		1437:0:52936:53147	4048997	0					
ANR	4049000	IdentifierDeclStatement	size_t i ;	1438:1:52939:52947	4048997	0	True				
ANR	4049001	IdentifierDecl	i		4048997	0					
ANR	4049002	IdentifierDeclType	size_t		4048997	0					
ANR	4049003	Identifier	i		4048997	1					
ANR	4049004	IfStatement	if ( coliding_ce == ce )		4048997	1					
ANR	4049005	Condition	coliding_ce == ce	1440:5:52955:52971	4048997	0	True				
ANR	4049006	EqualityExpression	coliding_ce == ce		4048997	0		==			
ANR	4049007	Identifier	coliding_ce		4048997	0					
ANR	4049008	Identifier	ce		4048997	1					
ANR	4049009	CompoundStatement		4:24:37:37	4048997	1					
ANR	4049010	ForStatement	for ( i = 0 ; i < current_trait ; i ++ )		4048997	0					
ANR	4049011	ForInit	i = 0 ;	1441:7:52983:52988	4048997	0	True				
ANR	4049012	AssignmentExpression	i = 0		4048997	0		=			
ANR	4049013	Identifier	i		4048997	0					
ANR	4049014	PrimaryExpression	0		4048997	1					
ANR	4049015	Condition	i < current_trait	1441:14:52990:53006	4048997	1	True				
ANR	4049016	RelationalExpression	i < current_trait		4048997	0		<			
ANR	4049017	Identifier	i		4048997	0					
ANR	4049018	Identifier	current_trait		4048997	1					
ANR	4049019	PostIncDecOperationExpression	i ++	1441:33:53009:53011	4048997	2	True				
ANR	4049020	Identifier	i		4048997	0					
ANR	4049021	IncDec	++		4048997	1					
ANR	4049022	CompoundStatement		5:38:77:77	4048997	3					
ANR	4049023	IfStatement	"if ( zend_hash_exists ( & ce -> traits [ i ] -> properties_info , prop_name ) )"		4048997	0					
ANR	4049024	Condition	"zend_hash_exists ( & ce -> traits [ i ] -> properties_info , prop_name )"	1442:7:53023:53082	4048997	0	True				
ANR	4049025	CallExpression	"zend_hash_exists ( & ce -> traits [ i ] -> properties_info , prop_name )"		4048997	0					
ANR	4049026	Callee	zend_hash_exists		4048997	0					
ANR	4049027	Identifier	zend_hash_exists		4048997	0					
ANR	4049028	ArgumentList	& ce -> traits [ i ] -> properties_info		4048997	1					
ANR	4049029	Argument	& ce -> traits [ i ] -> properties_info		4048997	0					
ANR	4049030	UnaryOperationExpression	& ce -> traits [ i ] -> properties_info		4048997	0					
ANR	4049031	UnaryOperator	&		4048997	0					
ANR	4049032	PtrMemberAccess	ce -> traits [ i ] -> properties_info		4048997	1					
ANR	4049033	ArrayIndexing	ce -> traits [ i ]		4048997	0					
ANR	4049034	PtrMemberAccess	ce -> traits		4048997	0					
ANR	4049035	Identifier	ce		4048997	0					
ANR	4049036	Identifier	traits		4048997	1					
ANR	4049037	Identifier	i		4048997	1					
ANR	4049038	Identifier	properties_info		4048997	1					
ANR	4049039	Argument	prop_name		4048997	1					
ANR	4049040	Identifier	prop_name		4048997	0					
ANR	4049041	CompoundStatement		6:69:148:148	4048997	1					
ANR	4049042	ReturnStatement	return ce -> traits [ i ] ;	1443:4:53091:53111	4048997	0	True				
ANR	4049043	ArrayIndexing	ce -> traits [ i ]		4048997	0					
ANR	4049044	PtrMemberAccess	ce -> traits		4048997	0					
ANR	4049045	Identifier	ce		4048997	0					
ANR	4049046	Identifier	traits		4048997	1					
ANR	4049047	Identifier	i		4048997	1					
ANR	4049048	ReturnStatement	return coliding_ce ;	1448:1:53127:53145	4048997	2	True				
ANR	4049049	Identifier	coliding_ce		4048997	0					
ANR	4049050	ReturnType	static zend_class_entry *		4048997	1					
ANR	4049051	Identifier	find_first_definition		4048997	2					
ANR	4049052	ParameterList	"zend_class_entry * ce , size_t current_trait , zend_string * prop_name , zend_class_entry * coliding_ce"		4048997	3					
ANR	4049053	Parameter	zend_class_entry * ce	1436:47:52827:52846	4048997	0	True				
ANR	4049054	ParameterType	zend_class_entry *		4048997	0					
ANR	4049055	Identifier	ce		4048997	1					
ANR	4049056	Parameter	size_t current_trait	1436:69:52849:52868	4048997	1	True				
ANR	4049057	ParameterType	size_t		4048997	0					
ANR	4049058	Identifier	current_trait		4048997	1					
ANR	4049059	Parameter	zend_string * prop_name	1436:91:52871:52892	4048997	2	True				
ANR	4049060	ParameterType	zend_string *		4048997	0					
ANR	4049061	Identifier	prop_name		4048997	1					
ANR	4049062	Parameter	zend_class_entry * coliding_ce	1436:115:52895:52923	4048997	3	True				
ANR	4049063	ParameterType	zend_class_entry *		4048997	0					
ANR	4049064	Identifier	coliding_ce		4048997	1					
ANR	4049065	CFGEntryNode	ENTRY		4048997		True				
ANR	4049066	CFGExitNode	EXIT		4048997		True				
ANR	4049067	Symbol	prop_name		4048997						
ANR	4049068	Symbol	* ce -> traits		4048997						
ANR	4049069	Symbol	ce		4048997						
ANR	4049070	Symbol	* i		4048997						
ANR	4049071	Symbol	coliding_ce		4048997						
ANR	4049072	Symbol	current_trait		4048997						
ANR	4049073	Symbol	i		4048997						
ANR	4049074	Symbol	zend_hash_exists		4048997						
ANR	4049075	Symbol	* ce		4048997						
ANR	4049076	Symbol	* * ce		4048997						
ANR	4049077	Symbol	& ce -> traits [ i ] -> properties_info		4048997						
ANR	4049078	Symbol	ce -> traits		4048997						
ANR	4049079	Function	zend_do_traits_property_binding	1452:0:53160:56893							
ANR	4049080	FunctionDef	zend_do_traits_property_binding (zend_class_entry * ce)		4049079	0					
ANR	4049081	CompoundStatement		1453:0:53236:56893	4049079	0					
ANR	4049082	IdentifierDeclStatement	size_t i ;	1454:1:53239:53247	4049079	0	True				
ANR	4049083	IdentifierDecl	i		4049079	0					
ANR	4049084	IdentifierDeclType	size_t		4049079	0					
ANR	4049085	Identifier	i		4049079	1					
ANR	4049086	IdentifierDeclStatement	zend_property_info * property_info ;	1455:1:53250:53283	4049079	1	True				
ANR	4049087	IdentifierDecl	* property_info		4049079	0					
ANR	4049088	IdentifierDeclType	zend_property_info *		4049079	0					
ANR	4049089	Identifier	property_info		4049079	1					
ANR	4049090	IdentifierDeclStatement	zend_property_info * coliding_prop ;	1456:1:53286:53319	4049079	2	True				
ANR	4049091	IdentifierDecl	* coliding_prop		4049079	0					
ANR	4049092	IdentifierDeclType	zend_property_info *		4049079	0					
ANR	4049093	Identifier	coliding_prop		4049079	1					
ANR	4049094	IdentifierDeclStatement	zval compare_result ;	1457:1:53322:53341	4049079	3	True				
ANR	4049095	IdentifierDecl	compare_result		4049079	0					
ANR	4049096	IdentifierDeclType	zval		4049079	0					
ANR	4049097	Identifier	compare_result		4049079	1					
ANR	4049098	IdentifierDeclStatement	zend_string * prop_name ;	1458:1:53344:53366	4049079	4	True				
ANR	4049099	IdentifierDecl	* prop_name		4049079	0					
ANR	4049100	IdentifierDeclType	zend_string *		4049079	0					
ANR	4049101	Identifier	prop_name		4049079	1					
ANR	4049102	IdentifierDeclStatement	const char * class_name_unused ;	1459:1:53369:53398	4049079	5	True				
ANR	4049103	IdentifierDecl	* class_name_unused		4049079	0					
ANR	4049104	IdentifierDeclType	const char *		4049079	0					
ANR	4049105	Identifier	class_name_unused		4049079	1					
ANR	4049106	IdentifierDeclStatement	zend_bool not_compatible ;	1460:1:53401:53425	4049079	6	True				
ANR	4049107	IdentifierDecl	not_compatible		4049079	0					
ANR	4049108	IdentifierDeclType	zend_bool		4049079	0					
ANR	4049109	Identifier	not_compatible		4049079	1					
ANR	4049110	IdentifierDeclStatement	zval * prop_value ;	1461:1:53428:53444	4049079	7	True				
ANR	4049111	IdentifierDecl	* prop_value		4049079	0					
ANR	4049112	IdentifierDeclType	zval *		4049079	0					
ANR	4049113	Identifier	prop_value		4049079	1					
ANR	4049114	IdentifierDeclStatement	uint32_t flags ;	1462:1:53447:53461	4049079	8	True				
ANR	4049115	IdentifierDecl	flags		4049079	0					
ANR	4049116	IdentifierDeclType	uint32_t		4049079	0					
ANR	4049117	Identifier	flags		4049079	1					
ANR	4049118	IdentifierDeclStatement	zend_string * doc_comment ;	1463:1:53464:53488	4049079	9	True				
ANR	4049119	IdentifierDecl	* doc_comment		4049079	0					
ANR	4049120	IdentifierDeclType	zend_string *		4049079	0					
ANR	4049121	Identifier	doc_comment		4049079	1					
ANR	4049122	ForStatement	for ( i = 0 ; i < ce -> num_traits ; i ++ )		4049079	10					
ANR	4049123	ForInit	i = 0 ;	1470:6:53755:53760	4049079	0	True				
ANR	4049124	AssignmentExpression	i = 0		4049079	0		=			
ANR	4049125	Identifier	i		4049079	0					
ANR	4049126	PrimaryExpression	0		4049079	1					
ANR	4049127	Condition	i < ce -> num_traits	1470:13:53762:53779	4049079	1	True				
ANR	4049128	RelationalExpression	i < ce -> num_traits		4049079	0		<			
ANR	4049129	Identifier	i		4049079	0					
ANR	4049130	PtrMemberAccess	ce -> num_traits		4049079	1					
ANR	4049131	Identifier	ce		4049079	0					
ANR	4049132	Identifier	num_traits		4049079	1					
ANR	4049133	PostIncDecOperationExpression	i ++	1470:33:53782:53784	4049079	2	True				
ANR	4049134	Identifier	i		4049079	0					
ANR	4049135	IncDec	++		4049079	1					
ANR	4049136	CompoundStatement		18:38:550:550	4049079	3					
ANR	4049137	Statement	ZEND_HASH_FOREACH_PTR	1471:2:53791:53811	4049079	0	True				
ANR	4049138	Statement	(	1471:23:53812:53812	4049079	1	True				
ANR	4049139	Statement	&	1471:24:53813:53813	4049079	2	True				
ANR	4049140	Statement	ce	1471:25:53814:53815	4049079	3	True				
ANR	4049141	Statement	->	1471:27:53816:53817	4049079	4	True				
ANR	4049142	Statement	traits	1471:29:53818:53823	4049079	5	True				
ANR	4049143	Statement	[	1471:35:53824:53824	4049079	6	True				
ANR	4049144	Statement	i	1471:36:53825:53825	4049079	7	True				
ANR	4049145	Statement	]	1471:37:53826:53826	4049079	8	True				
ANR	4049146	Statement	->	1471:38:53827:53828	4049079	9	True				
ANR	4049147	Statement	properties_info	1471:40:53829:53843	4049079	10	True				
ANR	4049148	Statement	","	1471:55:53844:53844	4049079	11	True				
ANR	4049149	Statement	property_info	1471:57:53846:53858	4049079	12	True				
ANR	4049150	Statement	)	1471:70:53859:53859	4049079	13	True				
ANR	4049151	CompoundStatement		19:72:624:624	4049079	14					
ANR	4049152	ExpressionStatement	flags = property_info -> flags	1475:3:53977:54005	4049079	0	True				
ANR	4049153	AssignmentExpression	flags = property_info -> flags		4049079	0		=			
ANR	4049154	Identifier	flags		4049079	0					
ANR	4049155	PtrMemberAccess	property_info -> flags		4049079	1					
ANR	4049156	Identifier	property_info		4049079	0					
ANR	4049157	Identifier	flags		4049079	1					
ANR	4049158	IfStatement	if ( flags & ZEND_ACC_PUBLIC )		4049079	1					
ANR	4049159	Condition	flags & ZEND_ACC_PUBLIC	1476:7:54014:54036	4049079	0	True				
ANR	4049160	BitAndExpression	flags & ZEND_ACC_PUBLIC		4049079	0		&			
ANR	4049161	Identifier	flags		4049079	0					
ANR	4049162	Identifier	ZEND_ACC_PUBLIC		4049079	1					
ANR	4049163	CompoundStatement		24:32:802:802	4049079	1					
ANR	4049164	ExpressionStatement	prop_name = zend_string_copy ( property_info -> name )	1477:4:54045:54094	4049079	0	True				
ANR	4049165	AssignmentExpression	prop_name = zend_string_copy ( property_info -> name )		4049079	0		=			
ANR	4049166	Identifier	prop_name		4049079	0					
ANR	4049167	CallExpression	zend_string_copy ( property_info -> name )		4049079	1					
ANR	4049168	Callee	zend_string_copy		4049079	0					
ANR	4049169	Identifier	zend_string_copy		4049079	0					
ANR	4049170	ArgumentList	property_info -> name		4049079	1					
ANR	4049171	Argument	property_info -> name		4049079	0					
ANR	4049172	PtrMemberAccess	property_info -> name		4049079	0					
ANR	4049173	Identifier	property_info		4049079	0					
ANR	4049174	Identifier	name		4049079	1					
ANR	4049175	ElseStatement	else		4049079	0					
ANR	4049176	CompoundStatement		28:4:898:914	4049079	0					
ANR	4049177	IdentifierDeclStatement	const char * pname ;	1479:4:54112:54129	4049079	0	True				
ANR	4049178	IdentifierDecl	* pname		4049079	0					
ANR	4049179	IdentifierDeclType	const char *		4049079	0					
ANR	4049180	Identifier	pname		4049079	1					
ANR	4049181	IdentifierDeclStatement	size_t pname_len ;	1480:4:54135:54151	4049079	1	True				
ANR	4049182	IdentifierDecl	pname_len		4049079	0					
ANR	4049183	IdentifierDeclType	size_t		4049079	0					
ANR	4049184	Identifier	pname_len		4049079	1					
ANR	4049185	ExpressionStatement	"zend_unmangle_property_name_ex ( property_info -> name , & class_name_unused , & pname , & pname_len )"	1483:4:54224:54326	4049079	2	True				
ANR	4049186	CallExpression	"zend_unmangle_property_name_ex ( property_info -> name , & class_name_unused , & pname , & pname_len )"		4049079	0					
ANR	4049187	Callee	zend_unmangle_property_name_ex		4049079	0					
ANR	4049188	Identifier	zend_unmangle_property_name_ex		4049079	0					
ANR	4049189	ArgumentList	property_info -> name		4049079	1					
ANR	4049190	Argument	property_info -> name		4049079	0					
ANR	4049191	PtrMemberAccess	property_info -> name		4049079	0					
ANR	4049192	Identifier	property_info		4049079	0					
ANR	4049193	Identifier	name		4049079	1					
ANR	4049194	Argument	& class_name_unused		4049079	1					
ANR	4049195	UnaryOperationExpression	& class_name_unused		4049079	0					
ANR	4049196	UnaryOperator	&		4049079	0					
ANR	4049197	Identifier	class_name_unused		4049079	1					
ANR	4049198	Argument	& pname		4049079	2					
ANR	4049199	UnaryOperationExpression	& pname		4049079	0					
ANR	4049200	UnaryOperator	&		4049079	0					
ANR	4049201	Identifier	pname		4049079	1					
ANR	4049202	Argument	& pname_len		4049079	3					
ANR	4049203	UnaryOperationExpression	& pname_len		4049079	0					
ANR	4049204	UnaryOperator	&		4049079	0					
ANR	4049205	Identifier	pname_len		4049079	1					
ANR	4049206	ExpressionStatement	"prop_name = zend_string_init ( pname , pname_len , 0 )"	1485:4:54332:54381	4049079	3	True				
ANR	4049207	AssignmentExpression	"prop_name = zend_string_init ( pname , pname_len , 0 )"		4049079	0		=			
ANR	4049208	Identifier	prop_name		4049079	0					
ANR	4049209	CallExpression	"zend_string_init ( pname , pname_len , 0 )"		4049079	1					
ANR	4049210	Callee	zend_string_init		4049079	0					
ANR	4049211	Identifier	zend_string_init		4049079	0					
ANR	4049212	ArgumentList	pname		4049079	1					
ANR	4049213	Argument	pname		4049079	0					
ANR	4049214	Identifier	pname		4049079	0					
ANR	4049215	Argument	pname_len		4049079	1					
ANR	4049216	Identifier	pname_len		4049079	0					
ANR	4049217	Argument	0		4049079	2					
ANR	4049218	PrimaryExpression	0		4049079	0					
ANR	4049219	IfStatement	"if ( ( coliding_prop = zend_hash_find_ptr ( & ce -> properties_info , prop_name ) ) != NULL )"		4049079	2					
ANR	4049220	Condition	"( coliding_prop = zend_hash_find_ptr ( & ce -> properties_info , prop_name ) ) != NULL"	1489:7:54450:54526	4049079	0	True				
ANR	4049221	EqualityExpression	"( coliding_prop = zend_hash_find_ptr ( & ce -> properties_info , prop_name ) ) != NULL"		4049079	0		!=			
ANR	4049222	AssignmentExpression	"coliding_prop = zend_hash_find_ptr ( & ce -> properties_info , prop_name )"		4049079	0		=			
ANR	4049223	Identifier	coliding_prop		4049079	0					
ANR	4049224	CallExpression	"zend_hash_find_ptr ( & ce -> properties_info , prop_name )"		4049079	1					
ANR	4049225	Callee	zend_hash_find_ptr		4049079	0					
ANR	4049226	Identifier	zend_hash_find_ptr		4049079	0					
ANR	4049227	ArgumentList	& ce -> properties_info		4049079	1					
ANR	4049228	Argument	& ce -> properties_info		4049079	0					
ANR	4049229	UnaryOperationExpression	& ce -> properties_info		4049079	0					
ANR	4049230	UnaryOperator	&		4049079	0					
ANR	4049231	PtrMemberAccess	ce -> properties_info		4049079	1					
ANR	4049232	Identifier	ce		4049079	0					
ANR	4049233	Identifier	properties_info		4049079	1					
ANR	4049234	Argument	prop_name		4049079	1					
ANR	4049235	Identifier	prop_name		4049079	0					
ANR	4049236	Identifier	NULL		4049079	1					
ANR	4049237	CompoundStatement		37:86:1292:1292	4049079	1					
ANR	4049238	IfStatement	if ( coliding_prop -> flags & ZEND_ACC_SHADOW )		4049079	0					
ANR	4049239	Condition	coliding_prop -> flags & ZEND_ACC_SHADOW	1490:8:54539:54576	4049079	0	True				
ANR	4049240	BitAndExpression	coliding_prop -> flags & ZEND_ACC_SHADOW		4049079	0		&			
ANR	4049241	PtrMemberAccess	coliding_prop -> flags		4049079	0					
ANR	4049242	Identifier	coliding_prop		4049079	0					
ANR	4049243	Identifier	flags		4049079	1					
ANR	4049244	Identifier	ZEND_ACC_SHADOW		4049079	1					
ANR	4049245	CompoundStatement		38:48:1342:1342	4049079	1					
ANR	4049246	ExpressionStatement	zend_string_release ( coliding_prop -> name )	1491:5:54586:54626	4049079	0	True				
ANR	4049247	CallExpression	zend_string_release ( coliding_prop -> name )		4049079	0					
ANR	4049248	Callee	zend_string_release		4049079	0					
ANR	4049249	Identifier	zend_string_release		4049079	0					
ANR	4049250	ArgumentList	coliding_prop -> name		4049079	1					
ANR	4049251	Argument	coliding_prop -> name		4049079	0					
ANR	4049252	PtrMemberAccess	coliding_prop -> name		4049079	0					
ANR	4049253	Identifier	coliding_prop		4049079	0					
ANR	4049254	Identifier	name		4049079	1					
ANR	4049255	IfStatement	if ( coliding_prop -> doc_comment )		4049079	1					
ANR	4049256	Condition	coliding_prop -> doc_comment	1492:9:54637:54662	4049079	0	True				
ANR	4049257	PtrMemberAccess	coliding_prop -> doc_comment		4049079	0					
ANR	4049258	Identifier	coliding_prop		4049079	0					
ANR	4049259	Identifier	doc_comment		4049079	1					
ANR	4049260	CompoundStatement		40:37:1428:1428	4049079	1					
ANR	4049261	ExpressionStatement	zend_string_release ( coliding_prop -> doc_comment )	1493:6:54673:54720	4049079	0	True				
ANR	4049262	CallExpression	zend_string_release ( coliding_prop -> doc_comment )		4049079	0					
ANR	4049263	Callee	zend_string_release		4049079	0					
ANR	4049264	Identifier	zend_string_release		4049079	0					
ANR	4049265	ArgumentList	coliding_prop -> doc_comment		4049079	1					
ANR	4049266	Argument	coliding_prop -> doc_comment		4049079	0					
ANR	4049267	PtrMemberAccess	coliding_prop -> doc_comment		4049079	0					
ANR	4049268	Identifier	coliding_prop		4049079	0					
ANR	4049269	Identifier	doc_comment		4049079	1					
ANR	4049270	ExpressionStatement	"zend_hash_del ( & ce -> properties_info , prop_name )"	1495:5:54749:54795	4049079	2	True				
ANR	4049271	CallExpression	"zend_hash_del ( & ce -> properties_info , prop_name )"		4049079	0					
ANR	4049272	Callee	zend_hash_del		4049079	0					
ANR	4049273	Identifier	zend_hash_del		4049079	0					
ANR	4049274	ArgumentList	& ce -> properties_info		4049079	1					
ANR	4049275	Argument	& ce -> properties_info		4049079	0					
ANR	4049276	UnaryOperationExpression	& ce -> properties_info		4049079	0					
ANR	4049277	UnaryOperator	&		4049079	0					
ANR	4049278	PtrMemberAccess	ce -> properties_info		4049079	1					
ANR	4049279	Identifier	ce		4049079	0					
ANR	4049280	Identifier	properties_info		4049079	1					
ANR	4049281	Argument	prop_name		4049079	1					
ANR	4049282	Identifier	prop_name		4049079	0					
ANR	4049283	ExpressionStatement	flags |= ZEND_ACC_CHANGED	1496:5:54802:54827	4049079	3	True				
ANR	4049284	AssignmentExpression	flags |= ZEND_ACC_CHANGED		4049079	0		|=			
ANR	4049285	Identifier	flags		4049079	0					
ANR	4049286	Identifier	ZEND_ACC_CHANGED		4049079	1					
ANR	4049287	ElseStatement	else		4049079	0					
ANR	4049288	CompoundStatement		45:11:1603:1603	4049079	0					
ANR	4049289	IfStatement	if ( ( coliding_prop -> flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) ) == ( flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) ) )		4049079	0					
ANR	4049290	Condition	( coliding_prop -> flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) ) == ( flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) )	1498:9:54851:54969	4049079	0	True				
ANR	4049291	EqualityExpression	( coliding_prop -> flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) ) == ( flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) )		4049079	0		==			
ANR	4049292	BitAndExpression	coliding_prop -> flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC )		4049079	0		&			
ANR	4049293	PtrMemberAccess	coliding_prop -> flags		4049079	0					
ANR	4049294	Identifier	coliding_prop		4049079	0					
ANR	4049295	Identifier	flags		4049079	1					
ANR	4049296	InclusiveOrExpression	ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC		4049079	1		|			
ANR	4049297	Identifier	ZEND_ACC_PPP_MASK		4049079	0					
ANR	4049298	Identifier	ZEND_ACC_STATIC		4049079	1					
ANR	4049299	BitAndExpression	flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC )		4049079	1		&			
ANR	4049300	Identifier	flags		4049079	0					
ANR	4049301	InclusiveOrExpression	ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC		4049079	1		|			
ANR	4049302	Identifier	ZEND_ACC_PPP_MASK		4049079	0					
ANR	4049303	Identifier	ZEND_ACC_STATIC		4049079	1					
ANR	4049304	CompoundStatement		47:58:1735:1735	4049079	1					
ANR	4049305	IfStatement	if ( flags & ZEND_ACC_STATIC )		4049079	0					
ANR	4049306	Condition	flags & ZEND_ACC_STATIC	1501:10:55051:55073	4049079	0	True				
ANR	4049307	BitAndExpression	flags & ZEND_ACC_STATIC		4049079	0		&			
ANR	4049308	Identifier	flags		4049079	0					
ANR	4049309	Identifier	ZEND_ACC_STATIC		4049079	1					
ANR	4049310	CompoundStatement		49:35:1839:1839	4049079	1					
ANR	4049311	ExpressionStatement	"not_compatible = ( FAILURE == compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"	1502:7:55085:55344	4049079	0	True				
ANR	4049312	AssignmentExpression	"not_compatible = ( FAILURE == compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"		4049079	0		=			
ANR	4049313	Identifier	not_compatible		4049079	0					
ANR	4049314	OrExpression	"( FAILURE == compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"		4049079	1		||			
ANR	4049315	EqualityExpression	"FAILURE == compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] )"		4049079	0		==			
ANR	4049316	Identifier	FAILURE		4049079	0					
ANR	4049317	CallExpression	"compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] )"		4049079	1					
ANR	4049318	Callee	compare_function		4049079	0					
ANR	4049319	Identifier	compare_function		4049079	0					
ANR	4049320	ArgumentList	& compare_result		4049079	1					
ANR	4049321	Argument	& compare_result		4049079	0					
ANR	4049322	UnaryOperationExpression	& compare_result		4049079	0					
ANR	4049323	UnaryOperator	&		4049079	0					
ANR	4049324	Identifier	compare_result		4049079	1					
ANR	4049325	Argument	& ce -> default_static_members_table [ coliding_prop -> offset ]		4049079	1					
ANR	4049326	UnaryOperationExpression	& ce -> default_static_members_table [ coliding_prop -> offset ]		4049079	0					
ANR	4049327	UnaryOperator	&		4049079	0					
ANR	4049328	ArrayIndexing	ce -> default_static_members_table [ coliding_prop -> offset ]		4049079	1					
ANR	4049329	PtrMemberAccess	ce -> default_static_members_table		4049079	0					
ANR	4049330	Identifier	ce		4049079	0					
ANR	4049331	Identifier	default_static_members_table		4049079	1					
ANR	4049332	PtrMemberAccess	coliding_prop -> offset		4049079	1					
ANR	4049333	Identifier	coliding_prop		4049079	0					
ANR	4049334	Identifier	offset		4049079	1					
ANR	4049335	Argument	& ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		4049079	2					
ANR	4049336	UnaryOperationExpression	& ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		4049079	0					
ANR	4049337	UnaryOperator	&		4049079	0					
ANR	4049338	ArrayIndexing	ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		4049079	1					
ANR	4049339	PtrMemberAccess	ce -> traits [ i ] -> default_static_members_table		4049079	0					
ANR	4049340	ArrayIndexing	ce -> traits [ i ]		4049079	0					
ANR	4049341	PtrMemberAccess	ce -> traits		4049079	0					
ANR	4049342	Identifier	ce		4049079	0					
ANR	4049343	Identifier	traits		4049079	1					
ANR	4049344	Identifier	i		4049079	1					
ANR	4049345	Identifier	default_static_members_table		4049079	1					
ANR	4049346	PtrMemberAccess	property_info -> offset		4049079	1					
ANR	4049347	Identifier	property_info		4049079	0					
ANR	4049348	Identifier	offset		4049079	1					
ANR	4049349	EqualityExpression	Z_LVAL ( compare_result ) != 0		4049079	1		!=			
ANR	4049350	CallExpression	Z_LVAL ( compare_result )		4049079	0					
ANR	4049351	Callee	Z_LVAL		4049079	0					
ANR	4049352	Identifier	Z_LVAL		4049079	0					
ANR	4049353	ArgumentList	compare_result		4049079	1					
ANR	4049354	Argument	compare_result		4049079	0					
ANR	4049355	Identifier	compare_result		4049079	0					
ANR	4049356	PrimaryExpression	0		4049079	1					
ANR	4049357	ElseStatement	else		4049079	0					
ANR	4049358	CompoundStatement		54:13:2122:2122	4049079	0					
ANR	4049359	ExpressionStatement	"not_compatible = ( FAILURE == compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"	1507:7:55368:55653	4049079	0	True				
ANR	4049360	AssignmentExpression	"not_compatible = ( FAILURE == compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"		4049079	0		=			
ANR	4049361	Identifier	not_compatible		4049079	0					
ANR	4049362	OrExpression	"( FAILURE == compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"		4049079	1		||			
ANR	4049363	EqualityExpression	"FAILURE == compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] )"		4049079	0		==			
ANR	4049364	Identifier	FAILURE		4049079	0					
ANR	4049365	CallExpression	"compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] )"		4049079	1					
ANR	4049366	Callee	compare_function		4049079	0					
ANR	4049367	Identifier	compare_function		4049079	0					
ANR	4049368	ArgumentList	& compare_result		4049079	1					
ANR	4049369	Argument	& compare_result		4049079	0					
ANR	4049370	UnaryOperationExpression	& compare_result		4049079	0					
ANR	4049371	UnaryOperator	&		4049079	0					
ANR	4049372	Identifier	compare_result		4049079	1					
ANR	4049373	Argument	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ]		4049079	1					
ANR	4049374	UnaryOperationExpression	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ]		4049079	0					
ANR	4049375	UnaryOperator	&		4049079	0					
ANR	4049376	ArrayIndexing	ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ]		4049079	1					
ANR	4049377	PtrMemberAccess	ce -> default_properties_table		4049079	0					
ANR	4049378	Identifier	ce		4049079	0					
ANR	4049379	Identifier	default_properties_table		4049079	1					
ANR	4049380	CallExpression	OBJ_PROP_TO_NUM ( coliding_prop -> offset )		4049079	1					
ANR	4049381	Callee	OBJ_PROP_TO_NUM		4049079	0					
ANR	4049382	Identifier	OBJ_PROP_TO_NUM		4049079	0					
ANR	4049383	ArgumentList	coliding_prop -> offset		4049079	1					
ANR	4049384	Argument	coliding_prop -> offset		4049079	0					
ANR	4049385	PtrMemberAccess	coliding_prop -> offset		4049079	0					
ANR	4049386	Identifier	coliding_prop		4049079	0					
ANR	4049387	Identifier	offset		4049079	1					
ANR	4049388	Argument	& ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		4049079	2					
ANR	4049389	UnaryOperationExpression	& ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		4049079	0					
ANR	4049390	UnaryOperator	&		4049079	0					
ANR	4049391	ArrayIndexing	ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		4049079	1					
ANR	4049392	PtrMemberAccess	ce -> traits [ i ] -> default_properties_table		4049079	0					
ANR	4049393	ArrayIndexing	ce -> traits [ i ]		4049079	0					
ANR	4049394	PtrMemberAccess	ce -> traits		4049079	0					
ANR	4049395	Identifier	ce		4049079	0					
ANR	4049396	Identifier	traits		4049079	1					
ANR	4049397	Identifier	i		4049079	1					
ANR	4049398	Identifier	default_properties_table		4049079	1					
ANR	4049399	CallExpression	OBJ_PROP_TO_NUM ( property_info -> offset )		4049079	1					
ANR	4049400	Callee	OBJ_PROP_TO_NUM		4049079	0					
ANR	4049401	Identifier	OBJ_PROP_TO_NUM		4049079	0					
ANR	4049402	ArgumentList	property_info -> offset		4049079	1					
ANR	4049403	Argument	property_info -> offset		4049079	0					
ANR	4049404	PtrMemberAccess	property_info -> offset		4049079	0					
ANR	4049405	Identifier	property_info		4049079	0					
ANR	4049406	Identifier	offset		4049079	1					
ANR	4049407	EqualityExpression	Z_LVAL ( compare_result ) != 0		4049079	1		!=			
ANR	4049408	CallExpression	Z_LVAL ( compare_result )		4049079	0					
ANR	4049409	Callee	Z_LVAL		4049079	0					
ANR	4049410	Identifier	Z_LVAL		4049079	0					
ANR	4049411	ArgumentList	compare_result		4049079	1					
ANR	4049412	Argument	compare_result		4049079	0					
ANR	4049413	Identifier	compare_result		4049079	0					
ANR	4049414	PrimaryExpression	0		4049079	1					
ANR	4049415	ElseStatement	else		4049079	0					
ANR	4049416	CompoundStatement		60:12:2438:2438	4049079	0					
ANR	4049417	ExpressionStatement	not_compatible = 1	1514:6:55770:55788	4049079	0	True				
ANR	4049418	AssignmentExpression	not_compatible = 1		4049079	0		=			
ANR	4049419	Identifier	not_compatible		4049079	0					
ANR	4049420	PrimaryExpression	1		4049079	1					
ANR	4049421	IfStatement	if ( not_compatible )		4049079	1					
ANR	4049422	Condition	not_compatible	1517:9:55807:55820	4049079	0	True				
ANR	4049423	Identifier	not_compatible		4049079	0					
ANR	4049424	CompoundStatement		65:25:2586:2586	4049079	1					
ANR	4049425	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed"" , ZSTR_VAL ( find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name ) , ZSTR_VAL ( property_info -> ce -> name ) , ZSTR_VAL ( prop_name ) , ZSTR_VAL ( ce -> name ) )"	1518:6:55831:56214	4049079	0	True				
ANR	4049426	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed"" , ZSTR_VAL ( find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name ) , ZSTR_VAL ( property_info -> ce -> name ) , ZSTR_VAL ( prop_name ) , ZSTR_VAL ( ce -> name ) )"		4049079	0					
ANR	4049427	Callee	zend_error_noreturn		4049079	0					
ANR	4049428	Identifier	zend_error_noreturn		4049079	0					
ANR	4049429	ArgumentList	E_COMPILE_ERROR		4049079	1					
ANR	4049430	Argument	E_COMPILE_ERROR		4049079	0					
ANR	4049431	Identifier	E_COMPILE_ERROR		4049079	0					
ANR	4049432	Argument	"""%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed"""		4049079	1					
ANR	4049433	PrimaryExpression	"""%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed"""		4049079	0					
ANR	4049434	Argument	"ZSTR_VAL ( find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name )"		4049079	2					
ANR	4049435	CallExpression	"ZSTR_VAL ( find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name )"		4049079	0					
ANR	4049436	Callee	ZSTR_VAL		4049079	0					
ANR	4049437	Identifier	ZSTR_VAL		4049079	0					
ANR	4049438	ArgumentList	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name"		4049079	1					
ANR	4049439	Argument	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name"		4049079	0					
ANR	4049440	PtrMemberAccess	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name"		4049079	0					
ANR	4049441	CallExpression	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce )"		4049079	0					
ANR	4049442	Callee	find_first_definition		4049079	0					
ANR	4049443	Identifier	find_first_definition		4049079	0					
ANR	4049444	ArgumentList	ce		4049079	1					
ANR	4049445	Argument	ce		4049079	0					
ANR	4049446	Identifier	ce		4049079	0					
ANR	4049447	Argument	i		4049079	1					
ANR	4049448	Identifier	i		4049079	0					
ANR	4049449	Argument	prop_name		4049079	2					
ANR	4049450	Identifier	prop_name		4049079	0					
ANR	4049451	Argument	coliding_prop -> ce		4049079	3					
ANR	4049452	PtrMemberAccess	coliding_prop -> ce		4049079	0					
ANR	4049453	Identifier	coliding_prop		4049079	0					
ANR	4049454	Identifier	ce		4049079	1					
ANR	4049455	Identifier	name		4049079	1					
ANR	4049456	Argument	ZSTR_VAL ( property_info -> ce -> name )		4049079	3					
ANR	4049457	CallExpression	ZSTR_VAL ( property_info -> ce -> name )		4049079	0					
ANR	4049458	Callee	ZSTR_VAL		4049079	0					
ANR	4049459	Identifier	ZSTR_VAL		4049079	0					
ANR	4049460	ArgumentList	property_info -> ce -> name		4049079	1					
ANR	4049461	Argument	property_info -> ce -> name		4049079	0					
ANR	4049462	PtrMemberAccess	property_info -> ce -> name		4049079	0					
ANR	4049463	PtrMemberAccess	property_info -> ce		4049079	0					
ANR	4049464	Identifier	property_info		4049079	0					
ANR	4049465	Identifier	ce		4049079	1					
ANR	4049466	Identifier	name		4049079	1					
ANR	4049467	Argument	ZSTR_VAL ( prop_name )		4049079	4					
ANR	4049468	CallExpression	ZSTR_VAL ( prop_name )		4049079	0					
ANR	4049469	Callee	ZSTR_VAL		4049079	0					
ANR	4049470	Identifier	ZSTR_VAL		4049079	0					
ANR	4049471	ArgumentList	prop_name		4049079	1					
ANR	4049472	Argument	prop_name		4049079	0					
ANR	4049473	Identifier	prop_name		4049079	0					
ANR	4049474	Argument	ZSTR_VAL ( ce -> name )		4049079	5					
ANR	4049475	CallExpression	ZSTR_VAL ( ce -> name )		4049079	0					
ANR	4049476	Callee	ZSTR_VAL		4049079	0					
ANR	4049477	Identifier	ZSTR_VAL		4049079	0					
ANR	4049478	ArgumentList	ce -> name		4049079	1					
ANR	4049479	Argument	ce -> name		4049079	0					
ANR	4049480	PtrMemberAccess	ce -> name		4049079	0					
ANR	4049481	Identifier	ce		4049079	0					
ANR	4049482	Identifier	name		4049079	1					
ANR	4049483	ExpressionStatement	zend_string_release ( prop_name )	1526:5:56229:56259	4049079	2	True				
ANR	4049484	CallExpression	zend_string_release ( prop_name )		4049079	0					
ANR	4049485	Callee	zend_string_release		4049079	0					
ANR	4049486	Identifier	zend_string_release		4049079	0					
ANR	4049487	ArgumentList	prop_name		4049079	1					
ANR	4049488	Argument	prop_name		4049079	0					
ANR	4049489	Identifier	prop_name		4049079	0					
ANR	4049490	ContinueStatement	continue ;	1527:5:56266:56274	4049079	3	True				
ANR	4049491	IfStatement	if ( flags & ZEND_ACC_STATIC )		4049079	3					
ANR	4049492	Condition	flags & ZEND_ACC_STATIC	1532:7:56339:56361	4049079	0	True				
ANR	4049493	BitAndExpression	flags & ZEND_ACC_STATIC		4049079	0		&			
ANR	4049494	Identifier	flags		4049079	0					
ANR	4049495	Identifier	ZEND_ACC_STATIC		4049079	1					
ANR	4049496	CompoundStatement		80:32:3127:3127	4049079	1					
ANR	4049497	ExpressionStatement	prop_value = & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]	1533:4:56370:56450	4049079	0	True				
ANR	4049498	AssignmentExpression	prop_value = & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		4049079	0		=			
ANR	4049499	Identifier	prop_value		4049079	0					
ANR	4049500	UnaryOperationExpression	& ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		4049079	1					
ANR	4049501	UnaryOperator	&		4049079	0					
ANR	4049502	ArrayIndexing	ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		4049079	1					
ANR	4049503	PtrMemberAccess	ce -> traits [ i ] -> default_static_members_table		4049079	0					
ANR	4049504	ArrayIndexing	ce -> traits [ i ]		4049079	0					
ANR	4049505	PtrMemberAccess	ce -> traits		4049079	0					
ANR	4049506	Identifier	ce		4049079	0					
ANR	4049507	Identifier	traits		4049079	1					
ANR	4049508	Identifier	i		4049079	1					
ANR	4049509	Identifier	default_static_members_table		4049079	1					
ANR	4049510	PtrMemberAccess	property_info -> offset		4049079	1					
ANR	4049511	Identifier	property_info		4049079	0					
ANR	4049512	Identifier	offset		4049079	1					
ANR	4049513	ElseStatement	else		4049079	0					
ANR	4049514	CompoundStatement		82:10:3225:3225	4049079	0					
ANR	4049515	ExpressionStatement	prop_value = & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]	1535:4:56468:56561	4049079	0	True				
ANR	4049516	AssignmentExpression	prop_value = & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		4049079	0		=			
ANR	4049517	Identifier	prop_value		4049079	0					
ANR	4049518	UnaryOperationExpression	& ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		4049079	1					
ANR	4049519	UnaryOperator	&		4049079	0					
ANR	4049520	ArrayIndexing	ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		4049079	1					
ANR	4049521	PtrMemberAccess	ce -> traits [ i ] -> default_properties_table		4049079	0					
ANR	4049522	ArrayIndexing	ce -> traits [ i ]		4049079	0					
ANR	4049523	PtrMemberAccess	ce -> traits		4049079	0					
ANR	4049524	Identifier	ce		4049079	0					
ANR	4049525	Identifier	traits		4049079	1					
ANR	4049526	Identifier	i		4049079	1					
ANR	4049527	Identifier	default_properties_table		4049079	1					
ANR	4049528	CallExpression	OBJ_PROP_TO_NUM ( property_info -> offset )		4049079	1					
ANR	4049529	Callee	OBJ_PROP_TO_NUM		4049079	0					
ANR	4049530	Identifier	OBJ_PROP_TO_NUM		4049079	0					
ANR	4049531	ArgumentList	property_info -> offset		4049079	1					
ANR	4049532	Argument	property_info -> offset		4049079	0					
ANR	4049533	PtrMemberAccess	property_info -> offset		4049079	0					
ANR	4049534	Identifier	property_info		4049079	0					
ANR	4049535	Identifier	offset		4049079	1					
ANR	4049536	IfStatement	if ( Z_REFCOUNTED_P ( prop_value ) )		4049079	4					
ANR	4049537	Condition	Z_REFCOUNTED_P ( prop_value )	1537:7:56575:56600	4049079	0	True				
ANR	4049538	CallExpression	Z_REFCOUNTED_P ( prop_value )		4049079	0					
ANR	4049539	Callee	Z_REFCOUNTED_P		4049079	0					
ANR	4049540	Identifier	Z_REFCOUNTED_P		4049079	0					
ANR	4049541	ArgumentList	prop_value		4049079	1					
ANR	4049542	Argument	prop_value		4049079	0					
ANR	4049543	Identifier	prop_value		4049079	0					
ANR	4049544	ExpressionStatement	Z_ADDREF_P ( prop_value )	1537:35:56603:56625	4049079	1	True				
ANR	4049545	CallExpression	Z_ADDREF_P ( prop_value )		4049079	0					
ANR	4049546	Callee	Z_ADDREF_P		4049079	0					
ANR	4049547	Identifier	Z_ADDREF_P		4049079	0					
ANR	4049548	ArgumentList	prop_value		4049079	1					
ANR	4049549	Argument	prop_value		4049079	0					
ANR	4049550	Identifier	prop_value		4049079	0					
ANR	4049551	ExpressionStatement	doc_comment = property_info -> doc_comment ? zend_string_copy ( property_info -> doc_comment ) : NULL	1539:3:56631:56725	4049079	5	True				
ANR	4049552	AssignmentExpression	doc_comment = property_info -> doc_comment ? zend_string_copy ( property_info -> doc_comment ) : NULL		4049079	0		=			
ANR	4049553	Identifier	doc_comment		4049079	0					
ANR	4049554	ConditionalExpression	property_info -> doc_comment ? zend_string_copy ( property_info -> doc_comment ) : NULL		4049079	1					
ANR	4049555	Condition	property_info -> doc_comment		4049079	0					
ANR	4049556	PtrMemberAccess	property_info -> doc_comment		4049079	0					
ANR	4049557	Identifier	property_info		4049079	0					
ANR	4049558	Identifier	doc_comment		4049079	1					
ANR	4049559	CallExpression	zend_string_copy ( property_info -> doc_comment )		4049079	1					
ANR	4049560	Callee	zend_string_copy		4049079	0					
ANR	4049561	Identifier	zend_string_copy		4049079	0					
ANR	4049562	ArgumentList	property_info -> doc_comment		4049079	1					
ANR	4049563	Argument	property_info -> doc_comment		4049079	0					
ANR	4049564	PtrMemberAccess	property_info -> doc_comment		4049079	0					
ANR	4049565	Identifier	property_info		4049079	0					
ANR	4049566	Identifier	doc_comment		4049079	1					
ANR	4049567	Identifier	NULL		4049079	2					
ANR	4049568	ExpressionStatement	"zend_declare_property_ex ( ce , prop_name , prop_value , flags , doc_comment )"	1540:3:56730:56824	4049079	6	True				
ANR	4049569	CallExpression	"zend_declare_property_ex ( ce , prop_name , prop_value , flags , doc_comment )"		4049079	0					
ANR	4049570	Callee	zend_declare_property_ex		4049079	0					
ANR	4049571	Identifier	zend_declare_property_ex		4049079	0					
ANR	4049572	ArgumentList	ce		4049079	1					
ANR	4049573	Argument	ce		4049079	0					
ANR	4049574	Identifier	ce		4049079	0					
ANR	4049575	Argument	prop_name		4049079	1					
ANR	4049576	Identifier	prop_name		4049079	0					
ANR	4049577	Argument	prop_value		4049079	2					
ANR	4049578	Identifier	prop_value		4049079	0					
ANR	4049579	Argument	flags		4049079	3					
ANR	4049580	Identifier	flags		4049079	0					
ANR	4049581	Argument	doc_comment		4049079	4					
ANR	4049582	Identifier	doc_comment		4049079	0					
ANR	4049583	ExpressionStatement	zend_string_release ( prop_name )	1543:3:56829:56859	4049079	7	True				
ANR	4049584	CallExpression	zend_string_release ( prop_name )		4049079	0					
ANR	4049585	Callee	zend_string_release		4049079	0					
ANR	4049586	Identifier	zend_string_release		4049079	0					
ANR	4049587	ArgumentList	prop_name		4049079	1					
ANR	4049588	Argument	prop_name		4049079	0					
ANR	4049589	Identifier	prop_name		4049079	0					
ANR	4049590	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1544:4:56865:56888	4049079	15	True				
ANR	4049591	CallExpression	ZEND_HASH_FOREACH_END ( )		4049079	0					
ANR	4049592	Callee	ZEND_HASH_FOREACH_END		4049079	0					
ANR	4049593	Identifier	ZEND_HASH_FOREACH_END		4049079	0					
ANR	4049594	ArgumentList			4049079	1					
ANR	4049595	ReturnType	static void		4049079	1					
ANR	4049596	Identifier	zend_do_traits_property_binding		4049079	2					
ANR	4049597	ParameterList	zend_class_entry * ce		4049079	3					
ANR	4049598	Parameter	zend_class_entry * ce	1452:44:53204:53223	4049079	0	True				
ANR	4049599	ParameterType	zend_class_entry *		4049079	0					
ANR	4049600	Identifier	ce		4049079	1					
ANR	4049601	CFGEntryNode	ENTRY		4049079		True				
ANR	4049602	CFGExitNode	EXIT		4049079		True				
ANR	4049603	Symbol	not_compatible		4049079						
ANR	4049604	Symbol	doc_comment		4049079						
ANR	4049605	Symbol	E_COMPILE_ERROR		4049079						
ANR	4049606	Symbol	Z_LVAL		4049079						
ANR	4049607	Symbol	* ce		4049079						
ANR	4049608	Symbol	zend_string_init		4049079						
ANR	4049609	Symbol	coliding_prop -> ce		4049079						
ANR	4049610	Symbol	* property_info		4049079						
ANR	4049611	Symbol	ZEND_ACC_SHADOW		4049079						
ANR	4049612	Symbol	ce -> name		4049079						
ANR	4049613	Symbol	& pname_len		4049079						
ANR	4049614	Symbol	zend_hash_find_ptr		4049079						
ANR	4049615	Symbol	* find_first_definition		4049079						
ANR	4049616	Symbol	compare_result		4049079						
ANR	4049617	Symbol	coliding_prop -> name		4049079						
ANR	4049618	Symbol	* * i		4049079						
ANR	4049619	Symbol	NULL		4049079						
ANR	4049620	Symbol	& pname		4049079						
ANR	4049621	Symbol	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name"		4049079						
ANR	4049622	Symbol	pname		4049079						
ANR	4049623	Symbol	ce -> traits [ i ] -> default_static_members_table		4049079						
ANR	4049624	Symbol	ce -> default_properties_table		4049079						
ANR	4049625	Symbol	property_info -> name		4049079						
ANR	4049626	Symbol	zend_string_copy		4049079						
ANR	4049627	Symbol	ce -> default_static_members_table		4049079						
ANR	4049628	Symbol	property_info -> ce		4049079						
ANR	4049629	Symbol	& ce -> properties_info		4049079						
ANR	4049630	Symbol	coliding_prop		4049079						
ANR	4049631	Symbol	find_first_definition		4049079						
ANR	4049632	Symbol	coliding_prop -> flags		4049079						
ANR	4049633	Symbol	Z_REFCOUNTED_P		4049079						
ANR	4049634	Symbol	* * * ce		4049079						
ANR	4049635	Symbol	coliding_prop -> doc_comment		4049079						
ANR	4049636	Symbol	property_info -> offset		4049079						
ANR	4049637	Symbol	ZEND_ACC_PPP_MASK		4049079						
ANR	4049638	Symbol	ZEND_ACC_PUBLIC		4049079						
ANR	4049639	Symbol	flags		4049079						
ANR	4049640	Symbol	ZEND_ACC_CHANGED		4049079						
ANR	4049641	Symbol	* * ce		4049079						
ANR	4049642	Symbol	& compare_result		4049079						
ANR	4049643	Symbol	compare_function		4049079						
ANR	4049644	Symbol	prop_value		4049079						
ANR	4049645	Symbol	ZEND_ACC_STATIC		4049079						
ANR	4049646	Symbol	* * ce -> traits		4049079						
ANR	4049647	Symbol	property_info -> ce -> name		4049079						
ANR	4049648	Symbol	property_info -> flags		4049079						
ANR	4049649	Symbol	property_info		4049079						
ANR	4049650	Symbol	OBJ_PROP_TO_NUM		4049079						
ANR	4049651	Symbol	ce		4049079						
ANR	4049652	Symbol	* * property_info		4049079						
ANR	4049653	Symbol	i		4049079						
ANR	4049654	Symbol	* property_info -> ce		4049079						
ANR	4049655	Symbol	ce -> num_traits		4049079						
ANR	4049656	Symbol	FAILURE		4049079						
ANR	4049657	Symbol	ce -> traits		4049079						
ANR	4049658	Symbol	ZSTR_VAL		4049079						
ANR	4049659	Symbol	prop_name		4049079						
ANR	4049660	Symbol	* ce -> traits		4049079						
ANR	4049661	Symbol	ce -> traits [ i ] -> default_properties_table		4049079						
ANR	4049662	Symbol	property_info -> doc_comment		4049079						
ANR	4049663	Symbol	* i		4049079						
ANR	4049664	Symbol	& class_name_unused		4049079						
ANR	4049665	Symbol	class_name_unused		4049079						
ANR	4049666	Symbol	* coliding_prop		4049079						
ANR	4049667	Symbol	coliding_prop -> offset		4049079						
ANR	4049668	Symbol	pname_len		4049079						
ANR	4049669	Function	zend_do_check_for_inconsistent_traits_aliasing	1549:0:56906:58729							
ANR	4049670	FunctionDef	zend_do_check_for_inconsistent_traits_aliasing (zend_class_entry * ce)		4049669	0					
ANR	4049671	CompoundStatement		1550:0:56997:58729	4049669	0					
ANR	4049672	IdentifierDeclStatement	int i = 0 ;	1551:1:57000:57009	4049669	0	True				
ANR	4049673	IdentifierDecl	i = 0		4049669	0					
ANR	4049674	IdentifierDeclType	int		4049669	0					
ANR	4049675	Identifier	i		4049669	1					
ANR	4049676	AssignmentExpression	i = 0		4049669	2		=			
ANR	4049677	Identifier	i		4049669	0					
ANR	4049678	PrimaryExpression	0		4049669	1					
ANR	4049679	IdentifierDeclStatement	zend_trait_alias * cur_alias ;	1552:1:57012:57039	4049669	1	True				
ANR	4049680	IdentifierDecl	* cur_alias		4049669	0					
ANR	4049681	IdentifierDeclType	zend_trait_alias *		4049669	0					
ANR	4049682	Identifier	cur_alias		4049669	1					
ANR	4049683	IdentifierDeclStatement	zend_string * lc_method_name ;	1553:1:57042:57069	4049669	2	True				
ANR	4049684	IdentifierDecl	* lc_method_name		4049669	0					
ANR	4049685	IdentifierDeclType	zend_string *		4049669	0					
ANR	4049686	Identifier	lc_method_name		4049669	1					
ANR	4049687	IfStatement	if ( ce -> trait_aliases )		4049669	3					
ANR	4049688	Condition	ce -> trait_aliases	1555:5:57077:57093	4049669	0	True				
ANR	4049689	PtrMemberAccess	ce -> trait_aliases		4049669	0					
ANR	4049690	Identifier	ce		4049669	0					
ANR	4049691	Identifier	trait_aliases		4049669	1					
ANR	4049692	CompoundStatement		6:24:98:98	4049669	1					
ANR	4049693	WhileStatement	while ( ce -> trait_aliases [ i ] )		4049669	0					
ANR	4049694	Condition	ce -> trait_aliases [ i ]	1556:9:57107:57126	4049669	0	True				
ANR	4049695	ArrayIndexing	ce -> trait_aliases [ i ]		4049669	0					
ANR	4049696	PtrMemberAccess	ce -> trait_aliases		4049669	0					
ANR	4049697	Identifier	ce		4049669	0					
ANR	4049698	Identifier	trait_aliases		4049669	1					
ANR	4049699	Identifier	i		4049669	1					
ANR	4049700	CompoundStatement		7:31:131:131	4049669	1					
ANR	4049701	ExpressionStatement	cur_alias = ce -> trait_aliases [ i ]	1557:3:57134:57166	4049669	0	True				
ANR	4049702	AssignmentExpression	cur_alias = ce -> trait_aliases [ i ]		4049669	0		=			
ANR	4049703	Identifier	cur_alias		4049669	0					
ANR	4049704	ArrayIndexing	ce -> trait_aliases [ i ]		4049669	1					
ANR	4049705	PtrMemberAccess	ce -> trait_aliases		4049669	0					
ANR	4049706	Identifier	ce		4049669	0					
ANR	4049707	Identifier	trait_aliases		4049669	1					
ANR	4049708	Identifier	i		4049669	1					
ANR	4049709	IfStatement	if ( ! cur_alias -> trait_method -> ce )		4049669	1					
ANR	4049710	Condition	! cur_alias -> trait_method -> ce	1560:7:57298:57325	4049669	0	True				
ANR	4049711	UnaryOperationExpression	! cur_alias -> trait_method -> ce		4049669	0					
ANR	4049712	UnaryOperator	!		4049669	0					
ANR	4049713	PtrMemberAccess	cur_alias -> trait_method -> ce		4049669	1					
ANR	4049714	PtrMemberAccess	cur_alias -> trait_method		4049669	0					
ANR	4049715	Identifier	cur_alias		4049669	0					
ANR	4049716	Identifier	trait_method		4049669	1					
ANR	4049717	Identifier	ce		4049669	1					
ANR	4049718	CompoundStatement		11:37:330:330	4049669	1					
ANR	4049719	IfStatement	if ( cur_alias -> alias )		4049669	0					
ANR	4049720	Condition	cur_alias -> alias	1561:8:57338:57353	4049669	0	True				
ANR	4049721	PtrMemberAccess	cur_alias -> alias		4049669	0					
ANR	4049722	Identifier	cur_alias		4049669	0					
ANR	4049723	Identifier	alias		4049669	1					
ANR	4049724	CompoundStatement		12:26:358:358	4049669	1					
ANR	4049725	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""An alias (%s) was defined for method %s(), but this method does not exist"" , ZSTR_VAL ( cur_alias -> alias ) , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"	1563:5:57408:57627	4049669	0	True				
ANR	4049726	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""An alias (%s) was defined for method %s(), but this method does not exist"" , ZSTR_VAL ( cur_alias -> alias ) , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"		4049669	0					
ANR	4049727	Callee	zend_error_noreturn		4049669	0					
ANR	4049728	Identifier	zend_error_noreturn		4049669	0					
ANR	4049729	ArgumentList	E_COMPILE_ERROR		4049669	1					
ANR	4049730	Argument	E_COMPILE_ERROR		4049669	0					
ANR	4049731	Identifier	E_COMPILE_ERROR		4049669	0					
ANR	4049732	Argument	"""An alias (%s) was defined for method %s(), but this method does not exist"""		4049669	1					
ANR	4049733	PrimaryExpression	"""An alias (%s) was defined for method %s(), but this method does not exist"""		4049669	0					
ANR	4049734	Argument	ZSTR_VAL ( cur_alias -> alias )		4049669	2					
ANR	4049735	CallExpression	ZSTR_VAL ( cur_alias -> alias )		4049669	0					
ANR	4049736	Callee	ZSTR_VAL		4049669	0					
ANR	4049737	Identifier	ZSTR_VAL		4049669	0					
ANR	4049738	ArgumentList	cur_alias -> alias		4049669	1					
ANR	4049739	Argument	cur_alias -> alias		4049669	0					
ANR	4049740	PtrMemberAccess	cur_alias -> alias		4049669	0					
ANR	4049741	Identifier	cur_alias		4049669	0					
ANR	4049742	Identifier	alias		4049669	1					
ANR	4049743	Argument	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		4049669	3					
ANR	4049744	CallExpression	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		4049669	0					
ANR	4049745	Callee	ZSTR_VAL		4049669	0					
ANR	4049746	Identifier	ZSTR_VAL		4049669	0					
ANR	4049747	ArgumentList	cur_alias -> trait_method -> method_name		4049669	1					
ANR	4049748	Argument	cur_alias -> trait_method -> method_name		4049669	0					
ANR	4049749	PtrMemberAccess	cur_alias -> trait_method -> method_name		4049669	0					
ANR	4049750	PtrMemberAccess	cur_alias -> trait_method		4049669	0					
ANR	4049751	Identifier	cur_alias		4049669	0					
ANR	4049752	Identifier	trait_method		4049669	1					
ANR	4049753	Identifier	method_name		4049669	1					
ANR	4049754	ElseStatement	else		4049669	0					
ANR	4049755	CompoundStatement		18:11:642:642	4049669	0					
ANR	4049756	ExpressionStatement	lc_method_name = zend_string_tolower ( cur_alias -> trait_method -> method_name )	1576:5:57994:58075	4049669	0	True				
ANR	4049757	AssignmentExpression	lc_method_name = zend_string_tolower ( cur_alias -> trait_method -> method_name )		4049669	0		=			
ANR	4049758	Identifier	lc_method_name		4049669	0					
ANR	4049759	CallExpression	zend_string_tolower ( cur_alias -> trait_method -> method_name )		4049669	1					
ANR	4049760	Callee	zend_string_tolower		4049669	0					
ANR	4049761	Identifier	zend_string_tolower		4049669	0					
ANR	4049762	ArgumentList	cur_alias -> trait_method -> method_name		4049669	1					
ANR	4049763	Argument	cur_alias -> trait_method -> method_name		4049669	0					
ANR	4049764	PtrMemberAccess	cur_alias -> trait_method -> method_name		4049669	0					
ANR	4049765	PtrMemberAccess	cur_alias -> trait_method		4049669	0					
ANR	4049766	Identifier	cur_alias		4049669	0					
ANR	4049767	Identifier	trait_method		4049669	1					
ANR	4049768	Identifier	method_name		4049669	1					
ANR	4049769	IfStatement	"if ( zend_hash_exists ( & ce -> function_table , lc_method_name ) )"		4049669	1					
ANR	4049770	Condition	"zend_hash_exists ( & ce -> function_table , lc_method_name )"	1578:9:58086:58149	4049669	0	True				
ANR	4049771	CallExpression	"zend_hash_exists ( & ce -> function_table , lc_method_name )"		4049669	0					
ANR	4049772	Callee	zend_hash_exists		4049669	0					
ANR	4049773	Identifier	zend_hash_exists		4049669	0					
ANR	4049774	ArgumentList	& ce -> function_table		4049669	1					
ANR	4049775	Argument	& ce -> function_table		4049669	0					
ANR	4049776	UnaryOperationExpression	& ce -> function_table		4049669	0					
ANR	4049777	UnaryOperator	&		4049669	0					
ANR	4049778	PtrMemberAccess	ce -> function_table		4049669	1					
ANR	4049779	Identifier	ce		4049669	0					
ANR	4049780	Identifier	function_table		4049669	1					
ANR	4049781	Argument	lc_method_name		4049669	1					
ANR	4049782	Identifier	lc_method_name		4049669	0					
ANR	4049783	CompoundStatement		30:28:1154:1154	4049669	1					
ANR	4049784	ExpressionStatement	zend_string_release ( lc_method_name )	1580:6:58160:58195	4049669	0	True				
ANR	4049785	CallExpression	zend_string_release ( lc_method_name )		4049669	0					
ANR	4049786	Callee	zend_string_release		4049669	0					
ANR	4049787	Identifier	zend_string_release		4049669	0					
ANR	4049788	ArgumentList	lc_method_name		4049669	1					
ANR	4049789	Argument	lc_method_name		4049669	0					
ANR	4049790	Identifier	lc_method_name		4049669	0					
ANR	4049791	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""The modifiers for the trait alias %s() need to be changed in the same statement in which the alias is defined. Error"" , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"	1581:6:58203:58429	4049669	1	True				
ANR	4049792	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""The modifiers for the trait alias %s() need to be changed in the same statement in which the alias is defined. Error"" , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"		4049669	0					
ANR	4049793	Callee	zend_error_noreturn		4049669	0					
ANR	4049794	Identifier	zend_error_noreturn		4049669	0					
ANR	4049795	ArgumentList	E_COMPILE_ERROR		4049669	1					
ANR	4049796	Argument	E_COMPILE_ERROR		4049669	0					
ANR	4049797	Identifier	E_COMPILE_ERROR		4049669	0					
ANR	4049798	Argument	"""The modifiers for the trait alias %s() need to be changed in the same statement in which the alias is defined. Error"""		4049669	1					
ANR	4049799	PrimaryExpression	"""The modifiers for the trait alias %s() need to be changed in the same statement in which the alias is defined. Error"""		4049669	0					
ANR	4049800	Argument	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		4049669	2					
ANR	4049801	CallExpression	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		4049669	0					
ANR	4049802	Callee	ZSTR_VAL		4049669	0					
ANR	4049803	Identifier	ZSTR_VAL		4049669	0					
ANR	4049804	ArgumentList	cur_alias -> trait_method -> method_name		4049669	1					
ANR	4049805	Argument	cur_alias -> trait_method -> method_name		4049669	0					
ANR	4049806	PtrMemberAccess	cur_alias -> trait_method -> method_name		4049669	0					
ANR	4049807	PtrMemberAccess	cur_alias -> trait_method		4049669	0					
ANR	4049808	Identifier	cur_alias		4049669	0					
ANR	4049809	Identifier	trait_method		4049669	1					
ANR	4049810	Identifier	method_name		4049669	1					
ANR	4049811	ElseStatement	else		4049669	0					
ANR	4049812	CompoundStatement		35:12:1445:1445	4049669	0					
ANR	4049813	ExpressionStatement	zend_string_release ( lc_method_name )	1585:6:58451:58486	4049669	0	True				
ANR	4049814	CallExpression	zend_string_release ( lc_method_name )		4049669	0					
ANR	4049815	Callee	zend_string_release		4049669	0					
ANR	4049816	Identifier	zend_string_release		4049669	0					
ANR	4049817	ArgumentList	lc_method_name		4049669	1					
ANR	4049818	Argument	lc_method_name		4049669	0					
ANR	4049819	Identifier	lc_method_name		4049669	0					
ANR	4049820	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""The modifiers of the trait method %s() are changed, but this method does not exist. Error"" , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"	1586:6:58494:58693	4049669	1	True				
ANR	4049821	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""The modifiers of the trait method %s() are changed, but this method does not exist. Error"" , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"		4049669	0					
ANR	4049822	Callee	zend_error_noreturn		4049669	0					
ANR	4049823	Identifier	zend_error_noreturn		4049669	0					
ANR	4049824	ArgumentList	E_COMPILE_ERROR		4049669	1					
ANR	4049825	Argument	E_COMPILE_ERROR		4049669	0					
ANR	4049826	Identifier	E_COMPILE_ERROR		4049669	0					
ANR	4049827	Argument	"""The modifiers of the trait method %s() are changed, but this method does not exist. Error"""		4049669	1					
ANR	4049828	PrimaryExpression	"""The modifiers of the trait method %s() are changed, but this method does not exist. Error"""		4049669	0					
ANR	4049829	Argument	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		4049669	2					
ANR	4049830	CallExpression	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		4049669	0					
ANR	4049831	Callee	ZSTR_VAL		4049669	0					
ANR	4049832	Identifier	ZSTR_VAL		4049669	0					
ANR	4049833	ArgumentList	cur_alias -> trait_method -> method_name		4049669	1					
ANR	4049834	Argument	cur_alias -> trait_method -> method_name		4049669	0					
ANR	4049835	PtrMemberAccess	cur_alias -> trait_method -> method_name		4049669	0					
ANR	4049836	PtrMemberAccess	cur_alias -> trait_method		4049669	0					
ANR	4049837	Identifier	cur_alias		4049669	0					
ANR	4049838	Identifier	trait_method		4049669	1					
ANR	4049839	Identifier	method_name		4049669	1					
ANR	4049840	ExpressionStatement	i ++	1593:3:58717:58720	4049669	2	True				
ANR	4049841	PostIncDecOperationExpression	i ++		4049669	0					
ANR	4049842	Identifier	i		4049669	0					
ANR	4049843	IncDec	++		4049669	1					
ANR	4049844	ReturnType	static void		4049669	1					
ANR	4049845	Identifier	zend_do_check_for_inconsistent_traits_aliasing		4049669	2					
ANR	4049846	ParameterList	zend_class_entry * ce		4049669	3					
ANR	4049847	Parameter	zend_class_entry * ce	1549:59:56965:56984	4049669	0	True				
ANR	4049848	ParameterType	zend_class_entry *		4049669	0					
ANR	4049849	Identifier	ce		4049669	1					
ANR	4049850	CFGEntryNode	ENTRY		4049669		True				
ANR	4049851	CFGExitNode	EXIT		4049669		True				
ANR	4049852	Symbol	ce		4049669						
ANR	4049853	Symbol	ce -> trait_aliases		4049669						
ANR	4049854	Symbol	lc_method_name		4049669						
ANR	4049855	Symbol	E_COMPILE_ERROR		4049669						
ANR	4049856	Symbol	i		4049669						
ANR	4049857	Symbol	& ce -> function_table		4049669						
ANR	4049858	Symbol	zend_hash_exists		4049669						
ANR	4049859	Symbol	* ce		4049669						
ANR	4049860	Symbol	* * ce		4049669						
ANR	4049861	Symbol	zend_string_tolower		4049669						
ANR	4049862	Symbol	ZSTR_VAL		4049669						
ANR	4049863	Symbol	* * cur_alias		4049669						
ANR	4049864	Symbol	* i		4049669						
ANR	4049865	Symbol	* ce -> trait_aliases		4049669						
ANR	4049866	Symbol	cur_alias -> trait_method -> ce		4049669						
ANR	4049867	Symbol	cur_alias -> alias		4049669						
ANR	4049868	Symbol	* cur_alias		4049669						
ANR	4049869	Symbol	cur_alias -> trait_method -> method_name		4049669						
ANR	4049870	Symbol	cur_alias		4049669						
ANR	4049871	Symbol	cur_alias -> trait_method		4049669						
ANR	4049872	Symbol	* cur_alias -> trait_method		4049669						
ANR	4049873	Function	zend_do_bind_traits	1599:0:58742:59710							
ANR	4049874	FunctionDef	zend_do_bind_traits (zend_class_entry * ce)		4049873	0					
ANR	4049875	CompoundStatement		1600:0:58808:59710	4049873	0					
ANR	4049876	IfStatement	if ( ce -> num_traits <= 0 )		4049873	0					
ANR	4049877	Condition	ce -> num_traits <= 0	1602:5:58816:58834	4049873	0	True				
ANR	4049878	RelationalExpression	ce -> num_traits <= 0		4049873	0		<=			
ANR	4049879	PtrMemberAccess	ce -> num_traits		4049873	0					
ANR	4049880	Identifier	ce		4049873	0					
ANR	4049881	Identifier	num_traits		4049873	1					
ANR	4049882	PrimaryExpression	0		4049873	1					
ANR	4049883	CompoundStatement		3:26:28:28	4049873	1					
ANR	4049884	ReturnStatement	return ;	1603:2:58841:58847	4049873	0	True				
ANR	4049885	ExpressionStatement	zend_traits_init_trait_structures ( ce )	1607:1:58910:58947	4049873	1	True				
ANR	4049886	CallExpression	zend_traits_init_trait_structures ( ce )		4049873	0					
ANR	4049887	Callee	zend_traits_init_trait_structures		4049873	0					
ANR	4049888	Identifier	zend_traits_init_trait_structures		4049873	0					
ANR	4049889	ArgumentList	ce		4049873	1					
ANR	4049890	Argument	ce		4049873	0					
ANR	4049891	Identifier	ce		4049873	0					
ANR	4049892	ExpressionStatement	zend_do_traits_method_binding ( ce )	1610:1:59018:59051	4049873	2	True				
ANR	4049893	CallExpression	zend_do_traits_method_binding ( ce )		4049873	0					
ANR	4049894	Callee	zend_do_traits_method_binding		4049873	0					
ANR	4049895	Identifier	zend_do_traits_method_binding		4049873	0					
ANR	4049896	ArgumentList	ce		4049873	1					
ANR	4049897	Argument	ce		4049873	0					
ANR	4049898	Identifier	ce		4049873	0					
ANR	4049899	ExpressionStatement	zend_do_check_for_inconsistent_traits_aliasing ( ce )	1613:1:59119:59169	4049873	3	True				
ANR	4049900	CallExpression	zend_do_check_for_inconsistent_traits_aliasing ( ce )		4049873	0					
ANR	4049901	Callee	zend_do_check_for_inconsistent_traits_aliasing		4049873	0					
ANR	4049902	Identifier	zend_do_check_for_inconsistent_traits_aliasing		4049873	0					
ANR	4049903	ArgumentList	ce		4049873	1					
ANR	4049904	Argument	ce		4049873	0					
ANR	4049905	Identifier	ce		4049873	0					
ANR	4049906	ExpressionStatement	zend_do_traits_property_binding ( ce )	1616:1:59263:59298	4049873	4	True				
ANR	4049907	CallExpression	zend_do_traits_property_binding ( ce )		4049873	0					
ANR	4049908	Callee	zend_do_traits_property_binding		4049873	0					
ANR	4049909	Identifier	zend_do_traits_property_binding		4049873	0					
ANR	4049910	ArgumentList	ce		4049873	1					
ANR	4049911	Argument	ce		4049873	0					
ANR	4049912	Identifier	ce		4049873	0					
ANR	4049913	ExpressionStatement	zend_verify_abstract_class ( ce )	1619:1:59376:59406	4049873	5	True				
ANR	4049914	CallExpression	zend_verify_abstract_class ( ce )		4049873	0					
ANR	4049915	Callee	zend_verify_abstract_class		4049873	0					
ANR	4049916	Identifier	zend_verify_abstract_class		4049873	0					
ANR	4049917	ArgumentList	ce		4049873	1					
ANR	4049918	Argument	ce		4049873	0					
ANR	4049919	Identifier	ce		4049873	0					
ANR	4049920	ExpressionStatement	zend_check_deprecated_constructor ( ce )	1622:1:59458:59495	4049873	6	True				
ANR	4049921	CallExpression	zend_check_deprecated_constructor ( ce )		4049873	0					
ANR	4049922	Callee	zend_check_deprecated_constructor		4049873	0					
ANR	4049923	Identifier	zend_check_deprecated_constructor		4049873	0					
ANR	4049924	ArgumentList	ce		4049873	1					
ANR	4049925	Argument	ce		4049873	0					
ANR	4049926	Identifier	ce		4049873	0					
ANR	4049927	IfStatement	if ( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS )		4049873	7					
ANR	4049928	Condition	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	1625:5:59604:59650	4049873	0	True				
ANR	4049929	BitAndExpression	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4049873	0		&			
ANR	4049930	PtrMemberAccess	ce -> ce_flags		4049873	0					
ANR	4049931	Identifier	ce		4049873	0					
ANR	4049932	Identifier	ce_flags		4049873	1					
ANR	4049933	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4049873	1					
ANR	4049934	CompoundStatement		26:54:844:844	4049873	1					
ANR	4049935	ExpressionStatement	ce -> ce_flags -= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	1626:2:59657:59705	4049873	0	True				
ANR	4049936	AssignmentExpression	ce -> ce_flags -= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4049873	0		-=			
ANR	4049937	PtrMemberAccess	ce -> ce_flags		4049873	0					
ANR	4049938	Identifier	ce		4049873	0					
ANR	4049939	Identifier	ce_flags		4049873	1					
ANR	4049940	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4049873	1					
ANR	4049941	ReturnType	ZEND_API void		4049873	1					
ANR	4049942	Identifier	zend_do_bind_traits		4049873	2					
ANR	4049943	ParameterList	zend_class_entry * ce		4049873	3					
ANR	4049944	Parameter	zend_class_entry * ce	1599:34:58776:58795	4049873	0	True				
ANR	4049945	ParameterType	zend_class_entry *		4049873	0					
ANR	4049946	Identifier	ce		4049873	1					
ANR	4049947	CFGEntryNode	ENTRY		4049873		True				
ANR	4049948	CFGExitNode	EXIT		4049873		True				
ANR	4049949	Symbol	ce -> ce_flags		4049873						
ANR	4049950	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		4049873						
ANR	4049951	Symbol	ce		4049873						
ANR	4049952	Symbol	* ce		4049873						
ANR	4049953	Symbol	ce -> num_traits		4049873						
ANR	4049954	Function	zend_has_deprecated_constructor	1632:0:59724:60086							
ANR	4049955	FunctionDef	zend_has_deprecated_constructor (const zend_class_entry * ce)		4049954	0					
ANR	4049956	CompoundStatement		1633:0:59811:60086	4049954	0					
ANR	4049957	IdentifierDeclStatement	const zend_string * constructor_name ;	1634:1:59814:59849	4049954	0	True				
ANR	4049958	IdentifierDecl	* constructor_name		4049954	0					
ANR	4049959	IdentifierDeclType	const zend_string *		4049954	0					
ANR	4049960	Identifier	constructor_name		4049954	1					
ANR	4049961	IfStatement	if ( ! ce -> constructor )		4049954	1					
ANR	4049962	Condition	! ce -> constructor	1635:5:59856:59871	4049954	0	True				
ANR	4049963	UnaryOperationExpression	! ce -> constructor		4049954	0					
ANR	4049964	UnaryOperator	!		4049954	0					
ANR	4049965	PtrMemberAccess	ce -> constructor		4049954	1					
ANR	4049966	Identifier	ce		4049954	0					
ANR	4049967	Identifier	constructor		4049954	1					
ANR	4049968	CompoundStatement		3:23:62:62	4049954	1					
ANR	4049969	ReturnStatement	return 0 ;	1636:2:59878:59886	4049954	0	True				
ANR	4049970	PrimaryExpression	0		4049954	0					
ANR	4049971	ExpressionStatement	constructor_name = ce -> constructor -> common . function_name	1638:1:59892:59948	4049954	2	True				
ANR	4049972	AssignmentExpression	constructor_name = ce -> constructor -> common . function_name		4049954	0		=			
ANR	4049973	Identifier	constructor_name		4049954	0					
ANR	4049974	MemberAccess	ce -> constructor -> common . function_name		4049954	1					
ANR	4049975	PtrMemberAccess	ce -> constructor -> common		4049954	0					
ANR	4049976	PtrMemberAccess	ce -> constructor		4049954	0					
ANR	4049977	Identifier	ce		4049954	0					
ANR	4049978	Identifier	constructor		4049954	1					
ANR	4049979	Identifier	common		4049954	1					
ANR	4049980	Identifier	function_name		4049954	1					
ANR	4049981	ReturnStatement	"return ! zend_binary_strcasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ZSTR_VAL ( constructor_name ) , ZSTR_LEN ( constructor_name ) ) ;"	1639:1:59951:60084	4049954	3	True				
ANR	4049982	UnaryOperationExpression	"! zend_binary_strcasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ZSTR_VAL ( constructor_name ) , ZSTR_LEN ( constructor_name ) )"		4049954	0					
ANR	4049983	UnaryOperator	!		4049954	0					
ANR	4049984	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ZSTR_VAL ( constructor_name ) , ZSTR_LEN ( constructor_name ) )"		4049954	1					
ANR	4049985	Callee	zend_binary_strcasecmp		4049954	0					
ANR	4049986	Identifier	zend_binary_strcasecmp		4049954	0					
ANR	4049987	ArgumentList	ZSTR_VAL ( ce -> name )		4049954	1					
ANR	4049988	Argument	ZSTR_VAL ( ce -> name )		4049954	0					
ANR	4049989	CallExpression	ZSTR_VAL ( ce -> name )		4049954	0					
ANR	4049990	Callee	ZSTR_VAL		4049954	0					
ANR	4049991	Identifier	ZSTR_VAL		4049954	0					
ANR	4049992	ArgumentList	ce -> name		4049954	1					
ANR	4049993	Argument	ce -> name		4049954	0					
ANR	4049994	PtrMemberAccess	ce -> name		4049954	0					
ANR	4049995	Identifier	ce		4049954	0					
ANR	4049996	Identifier	name		4049954	1					
ANR	4049997	Argument	ZSTR_LEN ( ce -> name )		4049954	1					
ANR	4049998	CallExpression	ZSTR_LEN ( ce -> name )		4049954	0					
ANR	4049999	Callee	ZSTR_LEN		4049954	0					
ANR	4050000	Identifier	ZSTR_LEN		4049954	0					
ANR	4050001	ArgumentList	ce -> name		4049954	1					
ANR	4050002	Argument	ce -> name		4049954	0					
ANR	4050003	PtrMemberAccess	ce -> name		4049954	0					
ANR	4050004	Identifier	ce		4049954	0					
ANR	4050005	Identifier	name		4049954	1					
ANR	4050006	Argument	ZSTR_VAL ( constructor_name )		4049954	2					
ANR	4050007	CallExpression	ZSTR_VAL ( constructor_name )		4049954	0					
ANR	4050008	Callee	ZSTR_VAL		4049954	0					
ANR	4050009	Identifier	ZSTR_VAL		4049954	0					
ANR	4050010	ArgumentList	constructor_name		4049954	1					
ANR	4050011	Argument	constructor_name		4049954	0					
ANR	4050012	Identifier	constructor_name		4049954	0					
ANR	4050013	Argument	ZSTR_LEN ( constructor_name )		4049954	3					
ANR	4050014	CallExpression	ZSTR_LEN ( constructor_name )		4049954	0					
ANR	4050015	Callee	ZSTR_LEN		4049954	0					
ANR	4050016	Identifier	ZSTR_LEN		4049954	0					
ANR	4050017	ArgumentList	constructor_name		4049954	1					
ANR	4050018	Argument	constructor_name		4049954	0					
ANR	4050019	Identifier	constructor_name		4049954	0					
ANR	4050020	ReturnType	static zend_bool		4049954	1					
ANR	4050021	Identifier	zend_has_deprecated_constructor		4049954	2					
ANR	4050022	ParameterList	const zend_class_entry * ce		4049954	3					
ANR	4050023	Parameter	const zend_class_entry * ce	1632:49:59773:59798	4049954	0	True				
ANR	4050024	ParameterType	const zend_class_entry *		4049954	0					
ANR	4050025	Identifier	ce		4049954	1					
ANR	4050026	CFGEntryNode	ENTRY		4049954		True				
ANR	4050027	CFGExitNode	EXIT		4049954		True				
ANR	4050028	Symbol	ce		4049954						
ANR	4050029	Symbol	ce -> constructor -> common . function_name		4049954						
ANR	4050030	Symbol	ce -> constructor		4049954						
ANR	4050031	Symbol	constructor_name		4049954						
ANR	4050032	Symbol	zend_binary_strcasecmp		4049954						
ANR	4050033	Symbol	ZSTR_LEN		4049954						
ANR	4050034	Symbol	* ce -> constructor		4049954						
ANR	4050035	Symbol	* ce		4049954						
ANR	4050036	Symbol	ce -> name		4049954						
ANR	4050037	Symbol	ce -> constructor -> common		4049954						
ANR	4050038	Symbol	* * ce		4049954						
ANR	4050039	Symbol	ZSTR_VAL		4049954						
ANR	4050040	Function	zend_check_deprecated_constructor	1646:0:60099:60403							
ANR	4050041	FunctionDef	zend_check_deprecated_constructor (const zend_class_entry * ce)		4050040	0					
ANR	4050042	CompoundStatement		1647:0:60176:60403	4050040	0					
ANR	4050043	IfStatement	if ( zend_has_deprecated_constructor ( ce ) )		4050040	0					
ANR	4050044	Condition	zend_has_deprecated_constructor ( ce )	1648:5:60183:60217	4050040	0	True				
ANR	4050045	CallExpression	zend_has_deprecated_constructor ( ce )		4050040	0					
ANR	4050046	Callee	zend_has_deprecated_constructor		4050040	0					
ANR	4050047	Identifier	zend_has_deprecated_constructor		4050040	0					
ANR	4050048	ArgumentList	ce		4050040	1					
ANR	4050049	Argument	ce		4050040	0					
ANR	4050050	Identifier	ce		4050040	0					
ANR	4050051	CompoundStatement		2:42:43:43	4050040	1					
ANR	4050052	ExpressionStatement	"zend_error ( E_DEPRECATED , ""Methods with the same name as their class will not be constructors in a future version of PHP; %s has a deprecated constructor"" , ZSTR_VAL ( ce -> name ) )"	1649:2:60224:60398	4050040	0	True				
ANR	4050053	CallExpression	"zend_error ( E_DEPRECATED , ""Methods with the same name as their class will not be constructors in a future version of PHP; %s has a deprecated constructor"" , ZSTR_VAL ( ce -> name ) )"		4050040	0					
ANR	4050054	Callee	zend_error		4050040	0					
ANR	4050055	Identifier	zend_error		4050040	0					
ANR	4050056	ArgumentList	E_DEPRECATED		4050040	1					
ANR	4050057	Argument	E_DEPRECATED		4050040	0					
ANR	4050058	Identifier	E_DEPRECATED		4050040	0					
ANR	4050059	Argument	"""Methods with the same name as their class will not be constructors in a future version of PHP; %s has a deprecated constructor"""		4050040	1					
ANR	4050060	PrimaryExpression	"""Methods with the same name as their class will not be constructors in a future version of PHP; %s has a deprecated constructor"""		4050040	0					
ANR	4050061	Argument	ZSTR_VAL ( ce -> name )		4050040	2					
ANR	4050062	CallExpression	ZSTR_VAL ( ce -> name )		4050040	0					
ANR	4050063	Callee	ZSTR_VAL		4050040	0					
ANR	4050064	Identifier	ZSTR_VAL		4050040	0					
ANR	4050065	ArgumentList	ce -> name		4050040	1					
ANR	4050066	Argument	ce -> name		4050040	0					
ANR	4050067	PtrMemberAccess	ce -> name		4050040	0					
ANR	4050068	Identifier	ce		4050040	0					
ANR	4050069	Identifier	name		4050040	1					
ANR	4050070	ReturnType	void		4050040	1					
ANR	4050071	Identifier	zend_check_deprecated_constructor		4050040	2					
ANR	4050072	ParameterList	const zend_class_entry * ce		4050040	3					
ANR	4050073	Parameter	const zend_class_entry * ce	1646:39:60138:60163	4050040	0	True				
ANR	4050074	ParameterType	const zend_class_entry *		4050040	0					
ANR	4050075	Identifier	ce		4050040	1					
ANR	4050076	CFGEntryNode	ENTRY		4050040		True				
ANR	4050077	CFGExitNode	EXIT		4050040		True				
ANR	4050078	Symbol	ce		4050040						
ANR	4050079	Symbol	zend_has_deprecated_constructor		4050040						
ANR	4050080	Symbol	E_DEPRECATED		4050040						
ANR	4050081	Symbol	ce -> name		4050040						
ANR	4050082	Symbol	* ce		4050040						
ANR	4050083	Symbol	ZSTR_VAL		4050040						
