command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3573155	File	data/converged/CVE-2015-8617_php-src/sapi_fpm_fpm_fpm_env.c								
ANR	3573156	DeclStmt									
ANR	3573157	Decl							char	char * *	fpm_env_argv
ANR	3573158	DeclStmt									
ANR	3573159	Decl							size_t	size_t	fpm_env_argv_len
ANR	3573160	Function	setenv	26:0:455:758							
ANR	3573161	FunctionDef	"setenv (char * name , char * value , int clobber)"		3573160	0					
ANR	3573162	CompoundStatement		27:0:514:758	3573160	0					
ANR	3573163	IdentifierDeclStatement	char * malloc ( ) ;	28:1:517:533	3573160	0	True				
ANR	3573164	IdentifierDecl	* malloc ( )		3573160	0					
ANR	3573165	IdentifierDeclType	char *		3573160	0					
ANR	3573166	Identifier	malloc		3573160	1					
ANR	3573167	IdentifierDeclStatement	char * getenv ( ) ;	29:1:536:552	3573160	1	True				
ANR	3573168	IdentifierDecl	* getenv ( )		3573160	0					
ANR	3573169	IdentifierDeclType	char *		3573160	0					
ANR	3573170	Identifier	getenv		3573160	1					
ANR	3573171	IdentifierDeclStatement	char * cp ;	30:1:555:565	3573160	2	True				
ANR	3573172	IdentifierDecl	* cp		3573160	0					
ANR	3573173	IdentifierDeclType	char *		3573160	0					
ANR	3573174	Identifier	cp		3573160	1					
ANR	3573175	IfStatement	if ( clobber == 0 && getenv ( name ) != 0 )		3573160	3					
ANR	3573176	Condition	clobber == 0 && getenv ( name ) != 0	32:5:573:605	3573160	0	True				
ANR	3573177	AndExpression	clobber == 0 && getenv ( name ) != 0		3573160	0		&&			
ANR	3573178	EqualityExpression	clobber == 0		3573160	0		==			
ANR	3573179	Identifier	clobber		3573160	0					
ANR	3573180	PrimaryExpression	0		3573160	1					
ANR	3573181	EqualityExpression	getenv ( name ) != 0		3573160	1		!=			
ANR	3573182	CallExpression	getenv ( name )		3573160	0					
ANR	3573183	Callee	getenv		3573160	0					
ANR	3573184	Identifier	getenv		3573160	0					
ANR	3573185	ArgumentList	name		3573160	1					
ANR	3573186	Argument	name		3573160	0					
ANR	3573187	Identifier	name		3573160	0					
ANR	3573188	PrimaryExpression	0		3573160	1					
ANR	3573189	CompoundStatement		6:40:93:93	3573160	1					
ANR	3573190	ReturnStatement	return 0 ;	33:2:612:620	3573160	0	True				
ANR	3573191	PrimaryExpression	0		3573160	0					
ANR	3573192	IfStatement	if ( ( cp = malloc ( strlen ( name ) + strlen ( value ) + 2 ) ) == 0 )		3573160	4					
ANR	3573193	Condition	( cp = malloc ( strlen ( name ) + strlen ( value ) + 2 ) ) == 0	36:5:631:682	3573160	0	True				
ANR	3573194	EqualityExpression	( cp = malloc ( strlen ( name ) + strlen ( value ) + 2 ) ) == 0		3573160	0		==			
ANR	3573195	AssignmentExpression	cp = malloc ( strlen ( name ) + strlen ( value ) + 2 )		3573160	0		=			
ANR	3573196	Identifier	cp		3573160	0					
ANR	3573197	CallExpression	malloc ( strlen ( name ) + strlen ( value ) + 2 )		3573160	1					
ANR	3573198	Callee	malloc		3573160	0					
ANR	3573199	Identifier	malloc		3573160	0					
ANR	3573200	ArgumentList	strlen ( name ) + strlen ( value ) + 2		3573160	1					
ANR	3573201	Argument	strlen ( name ) + strlen ( value ) + 2		3573160	0					
ANR	3573202	AdditiveExpression	strlen ( name ) + strlen ( value ) + 2		3573160	0		+			
ANR	3573203	CallExpression	strlen ( name )		3573160	0					
ANR	3573204	Callee	strlen		3573160	0					
ANR	3573205	Identifier	strlen		3573160	0					
ANR	3573206	ArgumentList	name		3573160	1					
ANR	3573207	Argument	name		3573160	0					
ANR	3573208	Identifier	name		3573160	0					
ANR	3573209	AdditiveExpression	strlen ( value ) + 2		3573160	1		+			
ANR	3573210	CallExpression	strlen ( value )		3573160	0					
ANR	3573211	Callee	strlen		3573160	0					
ANR	3573212	Identifier	strlen		3573160	0					
ANR	3573213	ArgumentList	value		3573160	1					
ANR	3573214	Argument	value		3573160	0					
ANR	3573215	Identifier	value		3573160	0					
ANR	3573216	PrimaryExpression	2		3573160	1					
ANR	3573217	PrimaryExpression	0		3573160	1					
ANR	3573218	CompoundStatement		10:59:170:170	3573160	1					
ANR	3573219	ReturnStatement	return 1 ;	37:2:689:697	3573160	0	True				
ANR	3573220	PrimaryExpression	1		3573160	0					
ANR	3573221	ExpressionStatement	"sprintf ( cp , ""%s=%s"" , name , value )"	39:1:703:736	3573160	5	True				
ANR	3573222	CallExpression	"sprintf ( cp , ""%s=%s"" , name , value )"		3573160	0					
ANR	3573223	Callee	sprintf		3573160	0					
ANR	3573224	Identifier	sprintf		3573160	0					
ANR	3573225	ArgumentList	cp		3573160	1					
ANR	3573226	Argument	cp		3573160	0					
ANR	3573227	Identifier	cp		3573160	0					
ANR	3573228	Argument	"""%s=%s"""		3573160	1					
ANR	3573229	PrimaryExpression	"""%s=%s"""		3573160	0					
ANR	3573230	Argument	name		3573160	2					
ANR	3573231	Identifier	name		3573160	0					
ANR	3573232	Argument	value		3573160	3					
ANR	3573233	Identifier	value		3573160	0					
ANR	3573234	ReturnStatement	return putenv ( cp ) ;	40:1:739:756	3573160	6	True				
ANR	3573235	CallExpression	putenv ( cp )		3573160	0					
ANR	3573236	Callee	putenv		3573160	0					
ANR	3573237	Identifier	putenv		3573160	0					
ANR	3573238	ArgumentList	cp		3573160	1					
ANR	3573239	Argument	cp		3573160	0					
ANR	3573240	Identifier	cp		3573160	0					
ANR	3573241	ReturnType	int		3573160	1					
ANR	3573242	Identifier	setenv		3573160	2					
ANR	3573243	ParameterList	"char * name , char * value , int clobber"		3573160	3					
ANR	3573244	Parameter	char * name	26:11:466:475	3573160	0	True				
ANR	3573245	ParameterType	char *		3573160	0					
ANR	3573246	Identifier	name		3573160	1					
ANR	3573247	Parameter	char * value	26:23:478:488	3573160	1	True				
ANR	3573248	ParameterType	char *		3573160	0					
ANR	3573249	Identifier	value		3573160	1					
ANR	3573250	Parameter	int clobber	26:36:491:501	3573160	2	True				
ANR	3573251	ParameterType	int		3573160	0					
ANR	3573252	Identifier	clobber		3573160	1					
ANR	3573253	CFGEntryNode	ENTRY		3573160		True				
ANR	3573254	CFGExitNode	EXIT		3573160		True				
ANR	3573255	Symbol	malloc		3573160						
ANR	3573256	Symbol	strlen		3573160						
ANR	3573257	Symbol	name		3573160						
ANR	3573258	Symbol	putenv		3573160						
ANR	3573259	Symbol	value		3573160						
ANR	3573260	Symbol	clobber		3573160						
ANR	3573261	Symbol	cp		3573160						
ANR	3573262	Symbol	getenv		3573160						
ANR	3573263	Function	setenv	44:0:777:1117							
ANR	3573264	FunctionDef	"setenv (char * name , char * value , int overwrite)"		3573263	0					
ANR	3573265	CompoundStatement		45:0:838:1117	3573263	0					
ANR	3573266	IdentifierDeclStatement	int name_len = strlen ( name ) ;	46:1:841:868	3573263	0	True				
ANR	3573267	IdentifierDecl	name_len = strlen ( name )		3573263	0					
ANR	3573268	IdentifierDeclType	int		3573263	0					
ANR	3573269	Identifier	name_len		3573263	1					
ANR	3573270	AssignmentExpression	name_len = strlen ( name )		3573263	2		=			
ANR	3573271	Identifier	name_len		3573263	0					
ANR	3573272	CallExpression	strlen ( name )		3573263	1					
ANR	3573273	Callee	strlen		3573263	0					
ANR	3573274	Identifier	strlen		3573263	0					
ANR	3573275	ArgumentList	name		3573263	1					
ANR	3573276	Argument	name		3573263	0					
ANR	3573277	Identifier	name		3573263	0					
ANR	3573278	IdentifierDeclStatement	int value_len = strlen ( value ) ;	47:1:871:900	3573263	1	True				
ANR	3573279	IdentifierDecl	value_len = strlen ( value )		3573263	0					
ANR	3573280	IdentifierDeclType	int		3573263	0					
ANR	3573281	Identifier	value_len		3573263	1					
ANR	3573282	AssignmentExpression	value_len = strlen ( value )		3573263	2		=			
ANR	3573283	Identifier	value_len		3573263	0					
ANR	3573284	CallExpression	strlen ( value )		3573263	1					
ANR	3573285	Callee	strlen		3573263	0					
ANR	3573286	Identifier	strlen		3573263	0					
ANR	3573287	ArgumentList	value		3573263	1					
ANR	3573288	Argument	value		3573263	0					
ANR	3573289	Identifier	value		3573263	0					
ANR	3573290	IdentifierDeclStatement	char * var = alloca ( name_len + 1 + value_len + 1 ) ;	48:1:903:951	3573263	2	True				
ANR	3573291	IdentifierDecl	* var = alloca ( name_len + 1 + value_len + 1 )		3573263	0					
ANR	3573292	IdentifierDeclType	char *		3573263	0					
ANR	3573293	Identifier	var		3573263	1					
ANR	3573294	AssignmentExpression	* var = alloca ( name_len + 1 + value_len + 1 )		3573263	2		=			
ANR	3573295	Identifier	var		3573263	0					
ANR	3573296	CallExpression	alloca ( name_len + 1 + value_len + 1 )		3573263	1					
ANR	3573297	Callee	alloca		3573263	0					
ANR	3573298	Identifier	alloca		3573263	0					
ANR	3573299	ArgumentList	name_len + 1 + value_len + 1		3573263	1					
ANR	3573300	Argument	name_len + 1 + value_len + 1		3573263	0					
ANR	3573301	AdditiveExpression	name_len + 1 + value_len + 1		3573263	0		+			
ANR	3573302	Identifier	name_len		3573263	0					
ANR	3573303	AdditiveExpression	1 + value_len + 1		3573263	1		+			
ANR	3573304	PrimaryExpression	1		3573263	0					
ANR	3573305	AdditiveExpression	value_len + 1		3573263	1		+			
ANR	3573306	Identifier	value_len		3573263	0					
ANR	3573307	PrimaryExpression	1		3573263	1					
ANR	3573308	ExpressionStatement	"memcpy ( var , name , name_len )"	50:1:955:982	3573263	3	True				
ANR	3573309	CallExpression	"memcpy ( var , name , name_len )"		3573263	0					
ANR	3573310	Callee	memcpy		3573263	0					
ANR	3573311	Identifier	memcpy		3573263	0					
ANR	3573312	ArgumentList	var		3573263	1					
ANR	3573313	Argument	var		3573263	0					
ANR	3573314	Identifier	var		3573263	0					
ANR	3573315	Argument	name		3573263	1					
ANR	3573316	Identifier	name		3573263	0					
ANR	3573317	Argument	name_len		3573263	2					
ANR	3573318	Identifier	name_len		3573263	0					
ANR	3573319	ExpressionStatement	var [ name_len ] = '='	52:1:986:1005	3573263	4	True				
ANR	3573320	AssignmentExpression	var [ name_len ] = '='		3573263	0		=			
ANR	3573321	ArrayIndexing	var [ name_len ]		3573263	0					
ANR	3573322	Identifier	var		3573263	0					
ANR	3573323	Identifier	name_len		3573263	1					
ANR	3573324	PrimaryExpression	'='		3573263	1					
ANR	3573325	ExpressionStatement	"memcpy ( var + name_len + 1 , value , value_len )"	54:1:1009:1053	3573263	5	True				
ANR	3573326	CallExpression	"memcpy ( var + name_len + 1 , value , value_len )"		3573263	0					
ANR	3573327	Callee	memcpy		3573263	0					
ANR	3573328	Identifier	memcpy		3573263	0					
ANR	3573329	ArgumentList	var + name_len + 1		3573263	1					
ANR	3573330	Argument	var + name_len + 1		3573263	0					
ANR	3573331	AdditiveExpression	var + name_len + 1		3573263	0		+			
ANR	3573332	Identifier	var		3573263	0					
ANR	3573333	AdditiveExpression	name_len + 1		3573263	1		+			
ANR	3573334	Identifier	name_len		3573263	0					
ANR	3573335	PrimaryExpression	1		3573263	1					
ANR	3573336	Argument	value		3573263	1					
ANR	3573337	Identifier	value		3573263	0					
ANR	3573338	Argument	value_len		3573263	2					
ANR	3573339	Identifier	value_len		3573263	0					
ANR	3573340	ExpressionStatement	var [ name_len + 1 + value_len ] = '\\0'	56:1:1057:1093	3573263	6	True				
ANR	3573341	AssignmentExpression	var [ name_len + 1 + value_len ] = '\\0'		3573263	0		=			
ANR	3573342	ArrayIndexing	var [ name_len + 1 + value_len ]		3573263	0					
ANR	3573343	Identifier	var		3573263	0					
ANR	3573344	AdditiveExpression	name_len + 1 + value_len		3573263	1		+			
ANR	3573345	Identifier	name_len		3573263	0					
ANR	3573346	AdditiveExpression	1 + value_len		3573263	1		+			
ANR	3573347	PrimaryExpression	1		3573263	0					
ANR	3573348	Identifier	value_len		3573263	1					
ANR	3573349	PrimaryExpression	'\\0'		3573263	1					
ANR	3573350	ReturnStatement	return putenv ( var ) ;	58:1:1097:1115	3573263	7	True				
ANR	3573351	CallExpression	putenv ( var )		3573263	0					
ANR	3573352	Callee	putenv		3573263	0					
ANR	3573353	Identifier	putenv		3573263	0					
ANR	3573354	ArgumentList	var		3573263	1					
ANR	3573355	Argument	var		3573263	0					
ANR	3573356	Identifier	var		3573263	0					
ANR	3573357	ReturnType	int		3573263	1					
ANR	3573358	Identifier	setenv		3573263	2					
ANR	3573359	ParameterList	"char * name , char * value , int overwrite"		3573263	3					
ANR	3573360	Parameter	char * name	44:11:788:797	3573263	0	True				
ANR	3573361	ParameterType	char *		3573263	0					
ANR	3573362	Identifier	name		3573263	1					
ANR	3573363	Parameter	char * value	44:23:800:810	3573263	1	True				
ANR	3573364	ParameterType	char *		3573263	0					
ANR	3573365	Identifier	value		3573263	1					
ANR	3573366	Parameter	int overwrite	44:36:813:825	3573263	2	True				
ANR	3573367	ParameterType	int		3573263	0					
ANR	3573368	Identifier	overwrite		3573263	1					
ANR	3573369	CFGEntryNode	ENTRY		3573263		True				
ANR	3573370	CFGExitNode	EXIT		3573263		True				
ANR	3573371	Symbol	strlen		3573263						
ANR	3573372	Symbol	* var		3573263						
ANR	3573373	Symbol	* name_len		3573263						
ANR	3573374	Symbol	* value_len		3573263						
ANR	3573375	Symbol	value_len		3573263						
ANR	3573376	Symbol	var		3573263						
ANR	3573377	Symbol	alloca		3573263						
ANR	3573378	Symbol	name		3573263						
ANR	3573379	Symbol	name_len		3573263						
ANR	3573380	Symbol	putenv		3573263						
ANR	3573381	Symbol	value		3573263						
ANR	3573382	Symbol	overwrite		3573263						
ANR	3573383	Function	clearenv	65:0:1167:1446							
ANR	3573384	FunctionDef	clearenv ()		3573383	0					
ANR	3573385	CompoundStatement		66:0:1193:1446	3573383	0					
ANR	3573386	IdentifierDeclStatement	char * * envp ;	67:1:1196:1207	3573383	0	True				
ANR	3573387	IdentifierDecl	* * envp		3573383	0					
ANR	3573388	IdentifierDeclType	char * *		3573383	0					
ANR	3573389	Identifier	envp		3573383	1					
ANR	3573390	IdentifierDeclStatement	char * s ;	68:1:1210:1217	3573383	1	True				
ANR	3573391	IdentifierDecl	* s		3573383	0					
ANR	3573392	IdentifierDeclType	char *		3573383	0					
ANR	3573393	Identifier	s		3573383	1					
ANR	3573394	WhileStatement	while ( * ( envp = environ ) )		3573383	2					
ANR	3573395	Condition	* ( envp = environ )	72:8:1306:1322	3573383	0	True				
ANR	3573396	UnaryOperationExpression	* ( envp = environ )		3573383	0					
ANR	3573397	UnaryOperator	*		3573383	0					
ANR	3573398	AssignmentExpression	envp = environ		3573383	1		=			
ANR	3573399	Identifier	envp		3573383	0					
ANR	3573400	Identifier	environ		3573383	1					
ANR	3573401	CompoundStatement		8:2:135:164	3573383	1					
ANR	3573402	IdentifierDeclStatement	"char * eq = strchr ( * envp , '=' ) ;"	73:2:1329:1358	3573383	0	True				
ANR	3573403	IdentifierDecl	"* eq = strchr ( * envp , '=' )"		3573383	0					
ANR	3573404	IdentifierDeclType	char *		3573383	0					
ANR	3573405	Identifier	eq		3573383	1					
ANR	3573406	AssignmentExpression	"* eq = strchr ( * envp , '=' )"		3573383	2		=			
ANR	3573407	Identifier	eq		3573383	0					
ANR	3573408	CallExpression	"strchr ( * envp , '=' )"		3573383	1					
ANR	3573409	Callee	strchr		3573383	0					
ANR	3573410	Identifier	strchr		3573383	0					
ANR	3573411	ArgumentList	* envp		3573383	1					
ANR	3573412	Argument	* envp		3573383	0					
ANR	3573413	UnaryOperationExpression	* envp		3573383	0					
ANR	3573414	UnaryOperator	*		3573383	0					
ANR	3573415	Identifier	envp		3573383	1					
ANR	3573416	Argument	'='		3573383	1					
ANR	3573417	PrimaryExpression	'='		3573383	0					
ANR	3573418	ExpressionStatement	s = strdup ( * envp )	75:2:1363:1380	3573383	1	True				
ANR	3573419	AssignmentExpression	s = strdup ( * envp )		3573383	0		=			
ANR	3573420	Identifier	s		3573383	0					
ANR	3573421	CallExpression	strdup ( * envp )		3573383	1					
ANR	3573422	Callee	strdup		3573383	0					
ANR	3573423	Identifier	strdup		3573383	0					
ANR	3573424	ArgumentList	* envp		3573383	1					
ANR	3573425	Argument	* envp		3573383	0					
ANR	3573426	UnaryOperationExpression	* envp		3573383	0					
ANR	3573427	UnaryOperator	*		3573383	0					
ANR	3573428	Identifier	envp		3573383	1					
ANR	3573429	IfStatement	if ( eq )		3573383	2					
ANR	3573430	Condition	eq	77:6:1389:1390	3573383	0	True				
ANR	3573431	Identifier	eq		3573383	0					
ANR	3573432	ExpressionStatement	s [ eq - * envp ] = '\\0'	77:10:1393:1413	3573383	1	True				
ANR	3573433	AssignmentExpression	s [ eq - * envp ] = '\\0'		3573383	0		=			
ANR	3573434	ArrayIndexing	s [ eq - * envp ]		3573383	0					
ANR	3573435	Identifier	s		3573383	0					
ANR	3573436	AdditiveExpression	eq - * envp		3573383	1		-			
ANR	3573437	Identifier	eq		3573383	0					
ANR	3573438	UnaryOperationExpression	* envp		3573383	1					
ANR	3573439	UnaryOperator	*		3573383	0					
ANR	3573440	Identifier	envp		3573383	1					
ANR	3573441	PrimaryExpression	'\\0'		3573383	1					
ANR	3573442	ExpressionStatement	unsetenv ( s )	79:2:1418:1429	3573383	3	True				
ANR	3573443	CallExpression	unsetenv ( s )		3573383	0					
ANR	3573444	Callee	unsetenv		3573383	0					
ANR	3573445	Identifier	unsetenv		3573383	0					
ANR	3573446	ArgumentList	s		3573383	1					
ANR	3573447	Argument	s		3573383	0					
ANR	3573448	Identifier	s		3573383	0					
ANR	3573449	ExpressionStatement	free ( s )	80:2:1433:1440	3573383	4	True				
ANR	3573450	CallExpression	free ( s )		3573383	0					
ANR	3573451	Callee	free		3573383	0					
ANR	3573452	Identifier	free		3573383	0					
ANR	3573453	ArgumentList	s		3573383	1					
ANR	3573454	Argument	s		3573383	0					
ANR	3573455	Identifier	s		3573383	0					
ANR	3573456	ReturnType	void		3573383	1					
ANR	3573457	Identifier	clearenv		3573383	2					
ANR	3573458	ParameterList			3573383	3					
ANR	3573459	CFGEntryNode	ENTRY		3573383		True				
ANR	3573460	CFGExitNode	EXIT		3573383		True				
ANR	3573461	Symbol	* eq		3573383						
ANR	3573462	Symbol	s		3573383						
ANR	3573463	Symbol	* ( envp = environ )		3573383						
ANR	3573464	Symbol	* envp		3573383						
ANR	3573465	Symbol	strchr		3573383						
ANR	3573466	Symbol	* * envp		3573383						
ANR	3573467	Symbol	strdup		3573383						
ANR	3573468	Symbol	envp		3573383						
ANR	3573469	Symbol	eq		3573383						
ANR	3573470	Symbol	* s		3573383						
ANR	3573471	Symbol	environ		3573383						
ANR	3573472	Function	unsetenv	88:0:1488:1812							
ANR	3573473	FunctionDef	unsetenv (const char * name)		3573472	0					
ANR	3573474	CompoundStatement		89:0:1530:1812	3573472	0					
ANR	3573475	IfStatement	if ( getenv ( name ) != NULL )		3573472	0					
ANR	3573476	Condition	getenv ( name ) != NULL	90:4:1536:1555	3573472	0	True				
ANR	3573477	EqualityExpression	getenv ( name ) != NULL		3573472	0		!=			
ANR	3573478	CallExpression	getenv ( name )		3573472	0					
ANR	3573479	Callee	getenv		3573472	0					
ANR	3573480	Identifier	getenv		3573472	0					
ANR	3573481	ArgumentList	name		3573472	1					
ANR	3573482	Argument	name		3573472	0					
ANR	3573483	Identifier	name		3573472	0					
ANR	3573484	Identifier	NULL		3573472	1					
ANR	3573485	CompoundStatement		4:2:45:56	3573472	1					
ANR	3573486	IdentifierDeclStatement	int ct = 0 ;	91:2:1562:1572	3573472	0	True				
ANR	3573487	IdentifierDecl	ct = 0		3573472	0					
ANR	3573488	IdentifierDeclType	int		3573472	0					
ANR	3573489	Identifier	ct		3573472	1					
ANR	3573490	AssignmentExpression	ct = 0		3573472	2		=			
ANR	3573491	Identifier	ct		3573472	0					
ANR	3573492	PrimaryExpression	0		3573472	1					
ANR	3573493	IdentifierDeclStatement	int del = 0 ;	92:2:1576:1587	3573472	1	True				
ANR	3573494	IdentifierDecl	del = 0		3573472	0					
ANR	3573495	IdentifierDeclType	int		3573472	0					
ANR	3573496	Identifier	del		3573472	1					
ANR	3573497	AssignmentExpression	del = 0		3573472	2		=			
ANR	3573498	Identifier	del		3573472	0					
ANR	3573499	PrimaryExpression	0		3573472	1					
ANR	3573500	WhileStatement	while ( environ [ ct ] != NULL )		3573472	2					
ANR	3573501	Condition	environ [ ct ] != NULL	94:8:1598:1616	3573472	0	True				
ANR	3573502	EqualityExpression	environ [ ct ] != NULL		3573472	0		!=			
ANR	3573503	ArrayIndexing	environ [ ct ]		3573472	0					
ANR	3573504	Identifier	environ		3573472	0					
ANR	3573505	Identifier	ct		3573472	1					
ANR	3573506	Identifier	NULL		3573472	1					
ANR	3573507	CompoundStatement		6:29:88:88	3573472	1					
ANR	3573508	IfStatement	"if ( nvmatch ( name , environ [ ct ] ) != 0 )"		3573472	0					
ANR	3573509	Condition	"nvmatch ( name , environ [ ct ] ) != 0"	95:7:1628:1658	3573472	0	True				
ANR	3573510	EqualityExpression	"nvmatch ( name , environ [ ct ] ) != 0"		3573472	0		!=			
ANR	3573511	CallExpression	"nvmatch ( name , environ [ ct ] )"		3573472	0					
ANR	3573512	Callee	nvmatch		3573472	0					
ANR	3573513	Identifier	nvmatch		3573472	0					
ANR	3573514	ArgumentList	name		3573472	1					
ANR	3573515	Argument	name		3573472	0					
ANR	3573516	Identifier	name		3573472	0					
ANR	3573517	Argument	environ [ ct ]		3573472	1					
ANR	3573518	ArrayIndexing	environ [ ct ]		3573472	0					
ANR	3573519	Identifier	environ		3573472	0					
ANR	3573520	Identifier	ct		3573472	1					
ANR	3573521	PrimaryExpression	0		3573472	1					
ANR	3573522	ExpressionStatement	del = ct	95:40:1661:1667	3573472	1	True				
ANR	3573523	AssignmentExpression	del = ct		3573472	0		=			
ANR	3573524	Identifier	del		3573472	0					
ANR	3573525	Identifier	ct		3573472	1					
ANR	3573526	CompoundStatement		8:3:158:158	3573472	1					
ANR	3573527	ExpressionStatement	ct ++	96:5:1691:1695	3573472	0	True				
ANR	3573528	PostIncDecOperationExpression	ct ++		3573472	0					
ANR	3573529	Identifier	ct		3573472	0					
ANR	3573530	IncDec	++		3573472	1					
ANR	3573531	ExpressionStatement	environ [ del ] = environ [ ct - 1 ]	99:2:1755:1783	3573472	3	True				
ANR	3573532	AssignmentExpression	environ [ del ] = environ [ ct - 1 ]		3573472	0		=			
ANR	3573533	ArrayIndexing	environ [ del ]		3573472	0					
ANR	3573534	Identifier	environ		3573472	0					
ANR	3573535	Identifier	del		3573472	1					
ANR	3573536	ArrayIndexing	environ [ ct - 1 ]		3573472	1					
ANR	3573537	Identifier	environ		3573472	0					
ANR	3573538	AdditiveExpression	ct - 1		3573472	1		-			
ANR	3573539	Identifier	ct		3573472	0					
ANR	3573540	PrimaryExpression	1		3573472	1					
ANR	3573541	ExpressionStatement	environ [ ct - 1 ] = NULL	100:2:1787:1807	3573472	4	True				
ANR	3573542	AssignmentExpression	environ [ ct - 1 ] = NULL		3573472	0		=			
ANR	3573543	ArrayIndexing	environ [ ct - 1 ]		3573472	0					
ANR	3573544	Identifier	environ		3573472	0					
ANR	3573545	AdditiveExpression	ct - 1		3573472	1		-			
ANR	3573546	Identifier	ct		3573472	0					
ANR	3573547	PrimaryExpression	1		3573472	1					
ANR	3573548	Identifier	NULL		3573472	1					
ANR	3573549	ReturnType	void		3573472	1					
ANR	3573550	Identifier	unsetenv		3573472	2					
ANR	3573551	ParameterList	const char * name		3573472	3					
ANR	3573552	Parameter	const char * name	88:14:1502:1517	3573472	0	True				
ANR	3573553	ParameterType	const char *		3573472	0					
ANR	3573554	Identifier	name		3573472	1					
ANR	3573555	CFGEntryNode	ENTRY		3573472		True				
ANR	3573556	CFGExitNode	EXIT		3573472		True				
ANR	3573557	Symbol	ct		3573472						
ANR	3573558	Symbol	NULL		3573472						
ANR	3573559	Symbol	* ct		3573472						
ANR	3573560	Symbol	* environ		3573472						
ANR	3573561	Symbol	name		3573472						
ANR	3573562	Symbol	del		3573472						
ANR	3573563	Symbol	nvmatch		3573472						
ANR	3573564	Symbol	* del		3573472						
ANR	3573565	Symbol	getenv		3573472						
ANR	3573566	Symbol	environ		3573472						
ANR	3573567	Function	nvmatch	105:0:1825:2012							
ANR	3573568	FunctionDef	"nvmatch (char * s1 , char * s2)"		3573567	0					
ANR	3573569	CompoundStatement		106:0:1877:2012	3573567	0					
ANR	3573570	WhileStatement	while ( * s1 == * s2 ++ )		3573567	0					
ANR	3573571	Condition	* s1 == * s2 ++	107:7:1886:1897	3573567	0	True				
ANR	3573572	EqualityExpression	* s1 == * s2 ++		3573567	0		==			
ANR	3573573	UnaryOperationExpression	* s1		3573567	0					
ANR	3573574	UnaryOperator	*		3573567	0					
ANR	3573575	Identifier	s1		3573567	1					
ANR	3573576	UnaryOperationExpression	* s2 ++		3573567	1					
ANR	3573577	UnaryOperator	*		3573567	0					
ANR	3573578	PostIncDecOperationExpression	s2 ++		3573567	1					
ANR	3573579	Identifier	s2		3573567	0					
ANR	3573580	IncDec	++		3573567	1					
ANR	3573581	CompoundStatement		3:1:23:23	3573567	1					
ANR	3573582	IfStatement	if ( * s1 ++ == '=' )		3573567	0					
ANR	3573583	Condition	* s1 ++ == '='	109:5:1908:1919	3573567	0	True				
ANR	3573584	EqualityExpression	* s1 ++ == '='		3573567	0		==			
ANR	3573585	UnaryOperationExpression	* s1 ++		3573567	0					
ANR	3573586	UnaryOperator	*		3573567	0					
ANR	3573587	PostIncDecOperationExpression	s1 ++		3573567	1					
ANR	3573588	Identifier	s1		3573567	0					
ANR	3573589	IncDec	++		3573567	1					
ANR	3573590	PrimaryExpression	'='		3573567	1					
ANR	3573591	CompoundStatement		4:19:44:44	3573567	1					
ANR	3573592	ReturnStatement	return s2 ;	110:3:1927:1936	3573567	0	True				
ANR	3573593	Identifier	s2		3573567	0					
ANR	3573594	IfStatement	if ( * s1 == '\\0' && * ( s2 - 1 ) == '=' )		3573567	1					
ANR	3573595	Condition	* s1 == '\\0' && * ( s2 - 1 ) == '='	113:4:1949:1977	3573567	0	True				
ANR	3573596	AndExpression	* s1 == '\\0' && * ( s2 - 1 ) == '='		3573567	0		&&			
ANR	3573597	EqualityExpression	* s1 == '\\0'		3573567	0		==			
ANR	3573598	UnaryOperationExpression	* s1		3573567	0					
ANR	3573599	UnaryOperator	*		3573567	0					
ANR	3573600	Identifier	s1		3573567	1					
ANR	3573601	PrimaryExpression	'\\0'		3573567	1					
ANR	3573602	EqualityExpression	* ( s2 - 1 ) == '='		3573567	1		==			
ANR	3573603	UnaryOperationExpression	* ( s2 - 1 )		3573567	0					
ANR	3573604	UnaryOperator	*		3573567	0					
ANR	3573605	AdditiveExpression	s2 - 1		3573567	1		-			
ANR	3573606	Identifier	s2		3573567	0					
ANR	3573607	PrimaryExpression	1		3573567	1					
ANR	3573608	PrimaryExpression	'='		3573567	1					
ANR	3573609	CompoundStatement		8:35:102:102	3573567	1					
ANR	3573610	ReturnStatement	return s2 ;	114:2:1984:1993	3573567	0	True				
ANR	3573611	Identifier	s2		3573567	0					
ANR	3573612	ReturnStatement	return NULL ;	116:1:1999:2010	3573567	2	True				
ANR	3573613	Identifier	NULL		3573567	0					
ANR	3573614	ReturnType	static char *		3573567	1					
ANR	3573615	Identifier	nvmatch		3573567	2					
ANR	3573616	ParameterList	"char * s1 , char * s2"		3573567	3					
ANR	3573617	Parameter	char * s1	105:22:1847:1854	3573567	0	True				
ANR	3573618	ParameterType	char *		3573567	0					
ANR	3573619	Identifier	s1		3573567	1					
ANR	3573620	Parameter	char * s2	105:32:1857:1864	3573567	1	True				
ANR	3573621	ParameterType	char *		3573567	0					
ANR	3573622	Identifier	s2		3573567	1					
ANR	3573623	CFGEntryNode	ENTRY		3573567		True				
ANR	3573624	CFGExitNode	EXIT		3573567		True				
ANR	3573625	Symbol	* s1 ++		3573567						
ANR	3573626	Symbol	* ( s2 - 1 )		3573567						
ANR	3573627	Symbol	NULL		3573567						
ANR	3573628	Symbol	* s2		3573567						
ANR	3573629	Symbol	* s1		3573567						
ANR	3573630	Symbol	* s2 ++		3573567						
ANR	3573631	Symbol	s1		3573567						
ANR	3573632	Symbol	s2		3573567						
ANR	3573633	Function	fpm_env_setproctitle	121:0:2032:2521							
ANR	3573634	FunctionDef	fpm_env_setproctitle (char * title)		3573633	0					
ANR	3573635	CompoundStatement		122:0:2081:2521	3573633	0					
ANR	3573636	ExpressionStatement	"setproctitle ( ""%s"" , title )"	124:1:2109:2134	3573633	0	True				
ANR	3573637	CallExpression	"setproctitle ( ""%s"" , title )"		3573633	0					
ANR	3573638	Callee	setproctitle		3573633	0					
ANR	3573639	Identifier	setproctitle		3573633	0					
ANR	3573640	ArgumentList	"""%s"""		3573633	1					
ANR	3573641	Argument	"""%s"""		3573633	0					
ANR	3573642	PrimaryExpression	"""%s"""		3573633	0					
ANR	3573643	Argument	title		3573633	1					
ANR	3573644	Identifier	title		3573633	0					
ANR	3573645	ReturnType	void		3573633	1					
ANR	3573646	Identifier	fpm_env_setproctitle		3573633	2					
ANR	3573647	ParameterList	char * title		3573633	3					
ANR	3573648	Parameter	char * title	121:26:2058:2068	3573633	0	True				
ANR	3573649	ParameterType	char *		3573633	0					
ANR	3573650	Identifier	title		3573633	1					
ANR	3573651	CFGEntryNode	ENTRY		3573633		True				
ANR	3573652	CFGExitNode	EXIT		3573633		True				
ANR	3573653	Symbol	title		3573633						
ANR	3573654	Function	fpm_env_init_child	138:0:2534:2984							
ANR	3573655	FunctionDef	fpm_env_init_child (struct fpm_worker_pool_s * wp)		3573654	0					
ANR	3573656	CompoundStatement		139:0:2597:2984	3573654	0					
ANR	3573657	IdentifierDeclStatement	struct key_value_s * kv ;	140:1:2600:2622	3573654	0	True				
ANR	3573658	IdentifierDecl	* kv		3573654	0					
ANR	3573659	IdentifierDeclType	struct key_value_s *		3573654	0					
ANR	3573660	Identifier	kv		3573654	1					
ANR	3573661	IdentifierDeclStatement	char * title ;	141:1:2625:2636	3573654	1	True				
ANR	3573662	IdentifierDecl	* title		3573654	0					
ANR	3573663	IdentifierDeclType	char *		3573654	0					
ANR	3573664	Identifier	title		3573654	1					
ANR	3573665	ExpressionStatement	"spprintf ( & title , 0 , ""pool %s"" , wp -> config -> name )"	142:1:2639:2687	3573654	2	True				
ANR	3573666	CallExpression	"spprintf ( & title , 0 , ""pool %s"" , wp -> config -> name )"		3573654	0					
ANR	3573667	Callee	spprintf		3573654	0					
ANR	3573668	Identifier	spprintf		3573654	0					
ANR	3573669	ArgumentList	& title		3573654	1					
ANR	3573670	Argument	& title		3573654	0					
ANR	3573671	UnaryOperationExpression	& title		3573654	0					
ANR	3573672	UnaryOperator	&		3573654	0					
ANR	3573673	Identifier	title		3573654	1					
ANR	3573674	Argument	0		3573654	1					
ANR	3573675	PrimaryExpression	0		3573654	0					
ANR	3573676	Argument	"""pool %s"""		3573654	2					
ANR	3573677	PrimaryExpression	"""pool %s"""		3573654	0					
ANR	3573678	Argument	wp -> config -> name		3573654	3					
ANR	3573679	PtrMemberAccess	wp -> config -> name		3573654	0					
ANR	3573680	PtrMemberAccess	wp -> config		3573654	0					
ANR	3573681	Identifier	wp		3573654	0					
ANR	3573682	Identifier	config		3573654	1					
ANR	3573683	Identifier	name		3573654	1					
ANR	3573684	ExpressionStatement	fpm_env_setproctitle ( title )	143:1:2690:2717	3573654	3	True				
ANR	3573685	CallExpression	fpm_env_setproctitle ( title )		3573654	0					
ANR	3573686	Callee	fpm_env_setproctitle		3573654	0					
ANR	3573687	Identifier	fpm_env_setproctitle		3573654	0					
ANR	3573688	ArgumentList	title		3573654	1					
ANR	3573689	Argument	title		3573654	0					
ANR	3573690	Identifier	title		3573654	0					
ANR	3573691	ExpressionStatement	efree ( title )	144:1:2720:2732	3573654	4	True				
ANR	3573692	CallExpression	efree ( title )		3573654	0					
ANR	3573693	Callee	efree		3573654	0					
ANR	3573694	Identifier	efree		3573654	0					
ANR	3573695	ArgumentList	title		3573654	1					
ANR	3573696	Argument	title		3573654	0					
ANR	3573697	Identifier	title		3573654	0					
ANR	3573698	IfStatement	if ( wp -> config -> clear_env )		3573654	5					
ANR	3573699	Condition	wp -> config -> clear_env	146:5:2740:2760	3573654	0	True				
ANR	3573700	PtrMemberAccess	wp -> config -> clear_env		3573654	0					
ANR	3573701	PtrMemberAccess	wp -> config		3573654	0					
ANR	3573702	Identifier	wp		3573654	0					
ANR	3573703	Identifier	config		3573654	1					
ANR	3573704	Identifier	clear_env		3573654	1					
ANR	3573705	CompoundStatement		8:28:165:165	3573654	1					
ANR	3573706	ExpressionStatement	clearenv ( )	147:2:2767:2777	3573654	0	True				
ANR	3573707	CallExpression	clearenv ( )		3573654	0					
ANR	3573708	Callee	clearenv		3573654	0					
ANR	3573709	Identifier	clearenv		3573654	0					
ANR	3573710	ArgumentList			3573654	1					
ANR	3573711	ForStatement	for ( kv = wp -> config -> env ; kv ; kv = kv -> next )		3573654	6					
ANR	3573712	ForInit	kv = wp -> config -> env ;	150:6:2789:2809	3573654	0	True				
ANR	3573713	AssignmentExpression	kv = wp -> config -> env		3573654	0		=			
ANR	3573714	Identifier	kv		3573654	0					
ANR	3573715	PtrMemberAccess	wp -> config -> env		3573654	1					
ANR	3573716	PtrMemberAccess	wp -> config		3573654	0					
ANR	3573717	Identifier	wp		3573654	0					
ANR	3573718	Identifier	config		3573654	1					
ANR	3573719	Identifier	env		3573654	1					
ANR	3573720	Condition	kv	150:28:2811:2812	3573654	1	True				
ANR	3573721	Identifier	kv		3573654	0					
ANR	3573722	AssignmentExpression	kv = kv -> next	150:32:2815:2827	3573654	2	True	=			
ANR	3573723	Identifier	kv		3573654	0					
ANR	3573724	PtrMemberAccess	kv -> next		3573654	1					
ANR	3573725	Identifier	kv		3573654	0					
ANR	3573726	Identifier	next		3573654	1					
ANR	3573727	CompoundStatement		12:47:232:232	3573654	3					
ANR	3573728	ExpressionStatement	"setenv ( kv -> key , kv -> value , 1 )"	151:2:2834:2863	3573654	0	True				
ANR	3573729	CallExpression	"setenv ( kv -> key , kv -> value , 1 )"		3573654	0					
ANR	3573730	Callee	setenv		3573654	0					
ANR	3573731	Identifier	setenv		3573654	0					
ANR	3573732	ArgumentList	kv -> key		3573654	1					
ANR	3573733	Argument	kv -> key		3573654	0					
ANR	3573734	PtrMemberAccess	kv -> key		3573654	0					
ANR	3573735	Identifier	kv		3573654	0					
ANR	3573736	Identifier	key		3573654	1					
ANR	3573737	Argument	kv -> value		3573654	1					
ANR	3573738	PtrMemberAccess	kv -> value		3573654	0					
ANR	3573739	Identifier	kv		3573654	0					
ANR	3573740	Identifier	value		3573654	1					
ANR	3573741	Argument	1		3573654	2					
ANR	3573742	PrimaryExpression	1		3573654	0					
ANR	3573743	IfStatement	if ( wp -> user )		3573654	7					
ANR	3573744	Condition	wp -> user	154:5:2874:2881	3573654	0	True				
ANR	3573745	PtrMemberAccess	wp -> user		3573654	0					
ANR	3573746	Identifier	wp		3573654	0					
ANR	3573747	Identifier	user		3573654	1					
ANR	3573748	CompoundStatement		16:15:286:286	3573654	1					
ANR	3573749	ExpressionStatement	"setenv ( ""USER"" , wp -> user , 1 )"	155:2:2888:2915	3573654	0	True				
ANR	3573750	CallExpression	"setenv ( ""USER"" , wp -> user , 1 )"		3573654	0					
ANR	3573751	Callee	setenv		3573654	0					
ANR	3573752	Identifier	setenv		3573654	0					
ANR	3573753	ArgumentList	"""USER"""		3573654	1					
ANR	3573754	Argument	"""USER"""		3573654	0					
ANR	3573755	PrimaryExpression	"""USER"""		3573654	0					
ANR	3573756	Argument	wp -> user		3573654	1					
ANR	3573757	PtrMemberAccess	wp -> user		3573654	0					
ANR	3573758	Identifier	wp		3573654	0					
ANR	3573759	Identifier	user		3573654	1					
ANR	3573760	Argument	1		3573654	2					
ANR	3573761	PrimaryExpression	1		3573654	0					
ANR	3573762	IfStatement	if ( wp -> home )		3573654	8					
ANR	3573763	Condition	wp -> home	158:5:2926:2933	3573654	0	True				
ANR	3573764	PtrMemberAccess	wp -> home		3573654	0					
ANR	3573765	Identifier	wp		3573654	0					
ANR	3573766	Identifier	home		3573654	1					
ANR	3573767	CompoundStatement		20:15:338:338	3573654	1					
ANR	3573768	ExpressionStatement	"setenv ( ""HOME"" , wp -> home , 1 )"	159:2:2940:2967	3573654	0	True				
ANR	3573769	CallExpression	"setenv ( ""HOME"" , wp -> home , 1 )"		3573654	0					
ANR	3573770	Callee	setenv		3573654	0					
ANR	3573771	Identifier	setenv		3573654	0					
ANR	3573772	ArgumentList	"""HOME"""		3573654	1					
ANR	3573773	Argument	"""HOME"""		3573654	0					
ANR	3573774	PrimaryExpression	"""HOME"""		3573654	0					
ANR	3573775	Argument	wp -> home		3573654	1					
ANR	3573776	PtrMemberAccess	wp -> home		3573654	0					
ANR	3573777	Identifier	wp		3573654	0					
ANR	3573778	Identifier	home		3573654	1					
ANR	3573779	Argument	1		3573654	2					
ANR	3573780	PrimaryExpression	1		3573654	0					
ANR	3573781	ReturnStatement	return 0 ;	162:1:2974:2982	3573654	9	True				
ANR	3573782	PrimaryExpression	0		3573654	0					
ANR	3573783	ReturnType	int		3573654	1					
ANR	3573784	Identifier	fpm_env_init_child		3573654	2					
ANR	3573785	ParameterList	struct fpm_worker_pool_s * wp		3573654	3					
ANR	3573786	Parameter	struct fpm_worker_pool_s * wp	138:23:2557:2584	3573654	0	True				
ANR	3573787	ParameterType	struct fpm_worker_pool_s *		3573654	0					
ANR	3573788	Identifier	wp		3573654	1					
ANR	3573789	CFGEntryNode	ENTRY		3573654		True				
ANR	3573790	CFGExitNode	EXIT		3573654		True				
ANR	3573791	Symbol	& title		3573654						
ANR	3573792	Symbol	wp -> config -> env		3573654						
ANR	3573793	Symbol	* * wp		3573654						
ANR	3573794	Symbol	kv -> value		3573654						
ANR	3573795	Symbol	kv		3573654						
ANR	3573796	Symbol	* wp -> config		3573654						
ANR	3573797	Symbol	wp -> config -> clear_env		3573654						
ANR	3573798	Symbol	wp -> user		3573654						
ANR	3573799	Symbol	title		3573654						
ANR	3573800	Symbol	wp -> config		3573654						
ANR	3573801	Symbol	* kv		3573654						
ANR	3573802	Symbol	kv -> next		3573654						
ANR	3573803	Symbol	wp -> config -> name		3573654						
ANR	3573804	Symbol	kv -> key		3573654						
ANR	3573805	Symbol	wp -> home		3573654						
ANR	3573806	Symbol	wp		3573654						
ANR	3573807	Symbol	* wp		3573654						
ANR	3573808	Function	fpm_env_conf_wp	166:0:2997:3550							
ANR	3573809	FunctionDef	fpm_env_conf_wp (struct fpm_worker_pool_s * wp)		3573808	0					
ANR	3573810	CompoundStatement		167:0:3064:3550	3573808	0					
ANR	3573811	IdentifierDeclStatement	struct key_value_s * kv ;	168:1:3067:3089	3573808	0	True				
ANR	3573812	IdentifierDecl	* kv		3573808	0					
ANR	3573813	IdentifierDeclType	struct key_value_s *		3573808	0					
ANR	3573814	Identifier	kv		3573808	1					
ANR	3573815	ForStatement	for ( kv = wp -> config -> env ; kv ; kv = kv -> next )		3573808	1					
ANR	3573816	ForInit	kv = wp -> config -> env ;	170:6:3098:3118	3573808	0	True				
ANR	3573817	AssignmentExpression	kv = wp -> config -> env		3573808	0		=			
ANR	3573818	Identifier	kv		3573808	0					
ANR	3573819	PtrMemberAccess	wp -> config -> env		3573808	1					
ANR	3573820	PtrMemberAccess	wp -> config		3573808	0					
ANR	3573821	Identifier	wp		3573808	0					
ANR	3573822	Identifier	config		3573808	1					
ANR	3573823	Identifier	env		3573808	1					
ANR	3573824	Condition	kv	170:28:3120:3121	3573808	1	True				
ANR	3573825	Identifier	kv		3573808	0					
ANR	3573826	AssignmentExpression	kv = kv -> next	170:32:3124:3136	3573808	2	True	=			
ANR	3573827	Identifier	kv		3573808	0					
ANR	3573828	PtrMemberAccess	kv -> next		3573808	1					
ANR	3573829	Identifier	kv		3573808	0					
ANR	3573830	Identifier	next		3573808	1					
ANR	3573831	CompoundStatement		4:47:74:74	3573808	3					
ANR	3573832	IfStatement	if ( * kv -> value == '$' )		3573808	0					
ANR	3573833	Condition	* kv -> value == '$'	171:6:3147:3163	3573808	0	True				
ANR	3573834	EqualityExpression	* kv -> value == '$'		3573808	0		==			
ANR	3573835	UnaryOperationExpression	* kv -> value		3573808	0					
ANR	3573836	UnaryOperator	*		3573808	0					
ANR	3573837	PtrMemberAccess	kv -> value		3573808	1					
ANR	3573838	Identifier	kv		3573808	0					
ANR	3573839	Identifier	value		3573808	1					
ANR	3573840	PrimaryExpression	'$'		3573808	1					
ANR	3573841	CompoundStatement		6:3:106:141	3573808	1					
ANR	3573842	IdentifierDeclStatement	char * value = getenv ( kv -> value + 1 ) ;	172:3:3171:3206	3573808	0	True				
ANR	3573843	IdentifierDecl	* value = getenv ( kv -> value + 1 )		3573808	0					
ANR	3573844	IdentifierDeclType	char *		3573808	0					
ANR	3573845	Identifier	value		3573808	1					
ANR	3573846	AssignmentExpression	* value = getenv ( kv -> value + 1 )		3573808	2		=			
ANR	3573847	Identifier	value		3573808	0					
ANR	3573848	CallExpression	getenv ( kv -> value + 1 )		3573808	1					
ANR	3573849	Callee	getenv		3573808	0					
ANR	3573850	Identifier	getenv		3573808	0					
ANR	3573851	ArgumentList	kv -> value + 1		3573808	1					
ANR	3573852	Argument	kv -> value + 1		3573808	0					
ANR	3573853	AdditiveExpression	kv -> value + 1		3573808	0		+			
ANR	3573854	PtrMemberAccess	kv -> value		3573808	0					
ANR	3573855	Identifier	kv		3573808	0					
ANR	3573856	Identifier	value		3573808	1					
ANR	3573857	PrimaryExpression	1		3573808	1					
ANR	3573858	IfStatement	if ( ! value )		3573808	1					
ANR	3573859	Condition	! value	174:7:3216:3221	3573808	0	True				
ANR	3573860	UnaryOperationExpression	! value		3573808	0					
ANR	3573861	UnaryOperator	!		3573808	0					
ANR	3573862	Identifier	value		3573808	1					
ANR	3573863	CompoundStatement		8:15:159:159	3573808	1					
ANR	3573864	ExpressionStatement	"value = """""	175:4:3230:3240	3573808	0	True				
ANR	3573865	AssignmentExpression	"value = """""		3573808	0		=			
ANR	3573866	Identifier	value		3573808	0					
ANR	3573867	PrimaryExpression	""""""		3573808	1					
ANR	3573868	ExpressionStatement	free ( kv -> value )	178:3:3251:3266	3573808	2	True				
ANR	3573869	CallExpression	free ( kv -> value )		3573808	0					
ANR	3573870	Callee	free		3573808	0					
ANR	3573871	Identifier	free		3573808	0					
ANR	3573872	ArgumentList	kv -> value		3573808	1					
ANR	3573873	Argument	kv -> value		3573808	0					
ANR	3573874	PtrMemberAccess	kv -> value		3573808	0					
ANR	3573875	Identifier	kv		3573808	0					
ANR	3573876	Identifier	value		3573808	1					
ANR	3573877	ExpressionStatement	kv -> value = strdup ( value )	179:3:3271:3296	3573808	3	True				
ANR	3573878	AssignmentExpression	kv -> value = strdup ( value )		3573808	0		=			
ANR	3573879	PtrMemberAccess	kv -> value		3573808	0					
ANR	3573880	Identifier	kv		3573808	0					
ANR	3573881	Identifier	value		3573808	1					
ANR	3573882	CallExpression	strdup ( value )		3573808	1					
ANR	3573883	Callee	strdup		3573808	0					
ANR	3573884	Identifier	strdup		3573808	0					
ANR	3573885	ArgumentList	value		3573808	1					
ANR	3573886	Argument	value		3573808	0					
ANR	3573887	Identifier	value		3573808	0					
ANR	3573888	IfStatement	"if ( ! strcmp ( kv -> key , ""USER"" ) )"		3573808	1					
ANR	3573889	Condition	"! strcmp ( kv -> key , ""USER"" )"	184:6:3392:3415	3573808	0	True				
ANR	3573890	UnaryOperationExpression	"! strcmp ( kv -> key , ""USER"" )"		3573808	0					
ANR	3573891	UnaryOperator	!		3573808	0					
ANR	3573892	CallExpression	"strcmp ( kv -> key , ""USER"" )"		3573808	1					
ANR	3573893	Callee	strcmp		3573808	0					
ANR	3573894	Identifier	strcmp		3573808	0					
ANR	3573895	ArgumentList	kv -> key		3573808	1					
ANR	3573896	Argument	kv -> key		3573808	0					
ANR	3573897	PtrMemberAccess	kv -> key		3573808	0					
ANR	3573898	Identifier	kv		3573808	0					
ANR	3573899	Identifier	key		3573808	1					
ANR	3573900	Argument	"""USER"""		3573808	1					
ANR	3573901	PrimaryExpression	"""USER"""		3573808	0					
ANR	3573902	CompoundStatement		18:32:353:353	3573808	1					
ANR	3573903	ExpressionStatement	free ( wp -> user )	185:3:3423:3437	3573808	0	True				
ANR	3573904	CallExpression	free ( wp -> user )		3573808	0					
ANR	3573905	Callee	free		3573808	0					
ANR	3573906	Identifier	free		3573808	0					
ANR	3573907	ArgumentList	wp -> user		3573808	1					
ANR	3573908	Argument	wp -> user		3573808	0					
ANR	3573909	PtrMemberAccess	wp -> user		3573808	0					
ANR	3573910	Identifier	wp		3573808	0					
ANR	3573911	Identifier	user		3573808	1					
ANR	3573912	ExpressionStatement	wp -> user = 0	186:3:3442:3454	3573808	1	True				
ANR	3573913	AssignmentExpression	wp -> user = 0		3573808	0		=			
ANR	3573914	PtrMemberAccess	wp -> user		3573808	0					
ANR	3573915	Identifier	wp		3573808	0					
ANR	3573916	Identifier	user		3573808	1					
ANR	3573917	PrimaryExpression	0		3573808	1					
ANR	3573918	IfStatement	"if ( ! strcmp ( kv -> key , ""HOME"" ) )"		3573808	2					
ANR	3573919	Condition	"! strcmp ( kv -> key , ""HOME"" )"	189:6:3467:3490	3573808	0	True				
ANR	3573920	UnaryOperationExpression	"! strcmp ( kv -> key , ""HOME"" )"		3573808	0					
ANR	3573921	UnaryOperator	!		3573808	0					
ANR	3573922	CallExpression	"strcmp ( kv -> key , ""HOME"" )"		3573808	1					
ANR	3573923	Callee	strcmp		3573808	0					
ANR	3573924	Identifier	strcmp		3573808	0					
ANR	3573925	ArgumentList	kv -> key		3573808	1					
ANR	3573926	Argument	kv -> key		3573808	0					
ANR	3573927	PtrMemberAccess	kv -> key		3573808	0					
ANR	3573928	Identifier	kv		3573808	0					
ANR	3573929	Identifier	key		3573808	1					
ANR	3573930	Argument	"""HOME"""		3573808	1					
ANR	3573931	PrimaryExpression	"""HOME"""		3573808	0					
ANR	3573932	CompoundStatement		23:32:428:428	3573808	1					
ANR	3573933	ExpressionStatement	free ( wp -> home )	190:3:3498:3512	3573808	0	True				
ANR	3573934	CallExpression	free ( wp -> home )		3573808	0					
ANR	3573935	Callee	free		3573808	0					
ANR	3573936	Identifier	free		3573808	0					
ANR	3573937	ArgumentList	wp -> home		3573808	1					
ANR	3573938	Argument	wp -> home		3573808	0					
ANR	3573939	PtrMemberAccess	wp -> home		3573808	0					
ANR	3573940	Identifier	wp		3573808	0					
ANR	3573941	Identifier	home		3573808	1					
ANR	3573942	ExpressionStatement	wp -> home = 0	191:3:3517:3529	3573808	1	True				
ANR	3573943	AssignmentExpression	wp -> home = 0		3573808	0		=			
ANR	3573944	PtrMemberAccess	wp -> home		3573808	0					
ANR	3573945	Identifier	wp		3573808	0					
ANR	3573946	Identifier	home		3573808	1					
ANR	3573947	PrimaryExpression	0		3573808	1					
ANR	3573948	ReturnStatement	return 0 ;	195:1:3540:3548	3573808	2	True				
ANR	3573949	PrimaryExpression	0		3573808	0					
ANR	3573950	ReturnType	static int		3573808	1					
ANR	3573951	Identifier	fpm_env_conf_wp		3573808	2					
ANR	3573952	ParameterList	struct fpm_worker_pool_s * wp		3573808	3					
ANR	3573953	Parameter	struct fpm_worker_pool_s * wp	166:27:3024:3051	3573808	0	True				
ANR	3573954	ParameterType	struct fpm_worker_pool_s *		3573808	0					
ANR	3573955	Identifier	wp		3573808	1					
ANR	3573956	CFGEntryNode	ENTRY		3573808		True				
ANR	3573957	CFGExitNode	EXIT		3573808		True				
ANR	3573958	Symbol	strcmp		3573808						
ANR	3573959	Symbol	wp -> config -> env		3573808						
ANR	3573960	Symbol	* * wp		3573808						
ANR	3573961	Symbol	kv -> value		3573808						
ANR	3573962	Symbol	kv		3573808						
ANR	3573963	Symbol	* wp -> config		3573808						
ANR	3573964	Symbol	wp -> user		3573808						
ANR	3573965	Symbol	wp -> config		3573808						
ANR	3573966	Symbol	* kv -> value		3573808						
ANR	3573967	Symbol	* kv		3573808						
ANR	3573968	Symbol	kv -> next		3573808						
ANR	3573969	Symbol	* * kv		3573808						
ANR	3573970	Symbol	kv -> key		3573808						
ANR	3573971	Symbol	wp -> home		3573808						
ANR	3573972	Symbol	wp		3573808						
ANR	3573973	Symbol	strdup		3573808						
ANR	3573974	Symbol	* wp		3573808						
ANR	3573975	Symbol	value		3573808						
ANR	3573976	Symbol	getenv		3573808						
ANR	3573977	Function	fpm_env_init_main	199:0:3563:5498							
ANR	3573978	FunctionDef	fpm_env_init_main ()		3573977	0					
ANR	3573979	CompoundStatement		200:0:3597:5498	3573977	0					
ANR	3573980	IdentifierDeclStatement	struct fpm_worker_pool_s * wp ;	201:1:3600:3628	3573977	0	True				
ANR	3573981	IdentifierDecl	* wp		3573977	0					
ANR	3573982	IdentifierDeclType	struct fpm_worker_pool_s *		3573977	0					
ANR	3573983	Identifier	wp		3573977	1					
ANR	3573984	IdentifierDeclStatement	int i ;	202:1:3631:3636	3573977	1	True				
ANR	3573985	IdentifierDecl	i		3573977	0					
ANR	3573986	IdentifierDeclType	int		3573977	0					
ANR	3573987	Identifier	i		3573977	1					
ANR	3573988	IdentifierDeclStatement	char * first = NULL ;	203:1:3639:3657	3573977	2	True				
ANR	3573989	IdentifierDecl	* first = NULL		3573977	0					
ANR	3573990	IdentifierDeclType	char *		3573977	0					
ANR	3573991	Identifier	first		3573977	1					
ANR	3573992	AssignmentExpression	* first = NULL		3573977	2		=			
ANR	3573993	Identifier	NULL		3573977	0					
ANR	3573994	Identifier	NULL		3573977	1					
ANR	3573995	IdentifierDeclStatement	char * last = NULL ;	204:1:3660:3677	3573977	3	True				
ANR	3573996	IdentifierDecl	* last = NULL		3573977	0					
ANR	3573997	IdentifierDeclType	char *		3573977	0					
ANR	3573998	Identifier	last		3573977	1					
ANR	3573999	AssignmentExpression	* last = NULL		3573977	2		=			
ANR	3574000	Identifier	NULL		3573977	0					
ANR	3574001	Identifier	NULL		3573977	1					
ANR	3574002	IdentifierDeclStatement	char * title ;	205:1:3680:3691	3573977	4	True				
ANR	3574003	IdentifierDecl	* title		3573977	0					
ANR	3574004	IdentifierDeclType	char *		3573977	0					
ANR	3574005	Identifier	title		3573977	1					
ANR	3574006	ForStatement	for ( wp = fpm_worker_all_pools ; wp ; wp = wp -> next )		3573977	5					
ANR	3574007	ForInit	wp = fpm_worker_all_pools ;	207:6:3700:3725	3573977	0	True				
ANR	3574008	AssignmentExpression	wp = fpm_worker_all_pools		3573977	0		=			
ANR	3574009	Identifier	wp		3573977	0					
ANR	3574010	Identifier	fpm_worker_all_pools		3573977	1					
ANR	3574011	Condition	wp	207:33:3727:3728	3573977	1	True				
ANR	3574012	Identifier	wp		3573977	0					
ANR	3574013	AssignmentExpression	wp = wp -> next	207:37:3731:3743	3573977	2	True	=			
ANR	3574014	Identifier	wp		3573977	0					
ANR	3574015	PtrMemberAccess	wp -> next		3573977	1					
ANR	3574016	Identifier	wp		3573977	0					
ANR	3574017	Identifier	next		3573977	1					
ANR	3574018	CompoundStatement		8:52:148:148	3573977	3					
ANR	3574019	IfStatement	if ( 0 > fpm_env_conf_wp ( wp ) )		3573977	0					
ANR	3574020	Condition	0 > fpm_env_conf_wp ( wp )	208:6:3754:3776	3573977	0	True				
ANR	3574021	RelationalExpression	0 > fpm_env_conf_wp ( wp )		3573977	0		>			
ANR	3574022	PrimaryExpression	0		3573977	0					
ANR	3574023	CallExpression	fpm_env_conf_wp ( wp )		3573977	1					
ANR	3574024	Callee	fpm_env_conf_wp		3573977	0					
ANR	3574025	Identifier	fpm_env_conf_wp		3573977	0					
ANR	3574026	ArgumentList	wp		3573977	1					
ANR	3574027	Argument	wp		3573977	0					
ANR	3574028	Identifier	wp		3573977	0					
ANR	3574029	CompoundStatement		9:31:181:181	3573977	1					
ANR	3574030	ReturnStatement	return - 1 ;	209:3:3784:3793	3573977	0	True				
ANR	3574031	UnaryOperationExpression	- 1		3573977	0					
ANR	3574032	UnaryOperator	-		3573977	0					
ANR	3574033	PrimaryExpression	1		3573977	1					
ANR	3574034	ForStatement	for ( i = 0 ; i < fpm_globals . argc ; i ++ )		3573977	6					
ANR	3574035	ForInit	i = 0 ;	227:6:4452:4457	3573977	0	True				
ANR	3574036	AssignmentExpression	i = 0		3573977	0		=			
ANR	3574037	Identifier	i		3573977	0					
ANR	3574038	PrimaryExpression	0		3573977	1					
ANR	3574039	Condition	i < fpm_globals . argc	227:13:4459:4478	3573977	1	True				
ANR	3574040	RelationalExpression	i < fpm_globals . argc		3573977	0		<			
ANR	3574041	Identifier	i		3573977	0					
ANR	3574042	MemberAccess	fpm_globals . argc		3573977	1					
ANR	3574043	Identifier	fpm_globals		3573977	0					
ANR	3574044	Identifier	argc		3573977	1					
ANR	3574045	PostIncDecOperationExpression	i ++	227:35:4481:4483	3573977	2	True				
ANR	3574046	Identifier	i		3573977	0					
ANR	3574047	IncDec	++		3573977	1					
ANR	3574048	CompoundStatement		28:40:888:888	3573977	3					
ANR	3574049	IfStatement	if ( first == NULL )		3573977	0					
ANR	3574050	Condition	first == NULL	228:6:4494:4506	3573977	0	True				
ANR	3574051	EqualityExpression	first == NULL		3573977	0		==			
ANR	3574052	Identifier	first		3573977	0					
ANR	3574053	Identifier	NULL		3573977	1					
ANR	3574054	CompoundStatement		29:21:911:911	3573977	1					
ANR	3574055	ExpressionStatement	first = fpm_globals . argv [ i ]	229:3:4514:4541	3573977	0	True				
ANR	3574056	AssignmentExpression	first = fpm_globals . argv [ i ]		3573977	0		=			
ANR	3574057	Identifier	first		3573977	0					
ANR	3574058	ArrayIndexing	fpm_globals . argv [ i ]		3573977	1					
ANR	3574059	MemberAccess	fpm_globals . argv		3573977	0					
ANR	3574060	Identifier	fpm_globals		3573977	0					
ANR	3574061	Identifier	argv		3573977	1					
ANR	3574062	Identifier	i		3573977	1					
ANR	3574063	IfStatement	if ( last == NULL || fpm_globals . argv [ i ] == last + 1 )		3573977	1					
ANR	3574064	Condition	last == NULL || fpm_globals . argv [ i ] == last + 1	231:6:4553:4599	3573977	0	True				
ANR	3574065	OrExpression	last == NULL || fpm_globals . argv [ i ] == last + 1		3573977	0		||			
ANR	3574066	EqualityExpression	last == NULL		3573977	0		==			
ANR	3574067	Identifier	last		3573977	0					
ANR	3574068	Identifier	NULL		3573977	1					
ANR	3574069	EqualityExpression	fpm_globals . argv [ i ] == last + 1		3573977	1		==			
ANR	3574070	ArrayIndexing	fpm_globals . argv [ i ]		3573977	0					
ANR	3574071	MemberAccess	fpm_globals . argv		3573977	0					
ANR	3574072	Identifier	fpm_globals		3573977	0					
ANR	3574073	Identifier	argv		3573977	1					
ANR	3574074	Identifier	i		3573977	1					
ANR	3574075	AdditiveExpression	last + 1		3573977	1		+			
ANR	3574076	Identifier	last		3573977	0					
ANR	3574077	PrimaryExpression	1		3573977	1					
ANR	3574078	CompoundStatement		32:55:1004:1004	3573977	1					
ANR	3574079	ExpressionStatement	last = fpm_globals . argv [ i ] + strlen ( fpm_globals . argv [ i ] )	232:3:4607:4663	3573977	0	True				
ANR	3574080	AssignmentExpression	last = fpm_globals . argv [ i ] + strlen ( fpm_globals . argv [ i ] )		3573977	0		=			
ANR	3574081	Identifier	last		3573977	0					
ANR	3574082	AdditiveExpression	fpm_globals . argv [ i ] + strlen ( fpm_globals . argv [ i ] )		3573977	1		+			
ANR	3574083	ArrayIndexing	fpm_globals . argv [ i ]		3573977	0					
ANR	3574084	MemberAccess	fpm_globals . argv		3573977	0					
ANR	3574085	Identifier	fpm_globals		3573977	0					
ANR	3574086	Identifier	argv		3573977	1					
ANR	3574087	Identifier	i		3573977	1					
ANR	3574088	CallExpression	strlen ( fpm_globals . argv [ i ] )		3573977	1					
ANR	3574089	Callee	strlen		3573977	0					
ANR	3574090	Identifier	strlen		3573977	0					
ANR	3574091	ArgumentList	fpm_globals . argv [ i ]		3573977	1					
ANR	3574092	Argument	fpm_globals . argv [ i ]		3573977	0					
ANR	3574093	ArrayIndexing	fpm_globals . argv [ i ]		3573977	0					
ANR	3574094	MemberAccess	fpm_globals . argv		3573977	0					
ANR	3574095	Identifier	fpm_globals		3573977	0					
ANR	3574096	Identifier	argv		3573977	1					
ANR	3574097	Identifier	i		3573977	1					
ANR	3574098	IfStatement	if ( environ )		3573977	7					
ANR	3574099	Condition	environ	235:5:4677:4683	3573977	0	True				
ANR	3574100	Identifier	environ		3573977	0					
ANR	3574101	CompoundStatement		36:14:1088:1088	3573977	1					
ANR	3574102	ForStatement	for ( i = 0 ; environ [ i ] ; i ++ )		3573977	0					
ANR	3574103	ForInit	i = 0 ;	236:7:4695:4700	3573977	0	True				
ANR	3574104	AssignmentExpression	i = 0		3573977	0		=			
ANR	3574105	Identifier	i		3573977	0					
ANR	3574106	PrimaryExpression	0		3573977	1					
ANR	3574107	Condition	environ [ i ]	236:14:4702:4711	3573977	1	True				
ANR	3574108	ArrayIndexing	environ [ i ]		3573977	0					
ANR	3574109	Identifier	environ		3573977	0					
ANR	3574110	Identifier	i		3573977	1					
ANR	3574111	PostIncDecOperationExpression	i ++	236:26:4714:4716	3573977	2	True				
ANR	3574112	Identifier	i		3573977	0					
ANR	3574113	IncDec	++		3573977	1					
ANR	3574114	CompoundStatement		37:31:1121:1121	3573977	3					
ANR	3574115	IfStatement	if ( first == NULL )		3573977	0					
ANR	3574116	Condition	first == NULL	237:7:4728:4740	3573977	0	True				
ANR	3574117	EqualityExpression	first == NULL		3573977	0		==			
ANR	3574118	Identifier	first		3573977	0					
ANR	3574119	Identifier	NULL		3573977	1					
ANR	3574120	CompoundStatement		38:22:1145:1145	3573977	1					
ANR	3574121	ExpressionStatement	first = environ [ i ]	238:4:4749:4767	3573977	0	True				
ANR	3574122	AssignmentExpression	first = environ [ i ]		3573977	0		=			
ANR	3574123	Identifier	first		3573977	0					
ANR	3574124	ArrayIndexing	environ [ i ]		3573977	1					
ANR	3574125	Identifier	environ		3573977	0					
ANR	3574126	Identifier	i		3573977	1					
ANR	3574127	IfStatement	if ( last == NULL || environ [ i ] == last + 1 )		3573977	1					
ANR	3574128	Condition	last == NULL || environ [ i ] == last + 1	240:7:4781:4818	3573977	0	True				
ANR	3574129	OrExpression	last == NULL || environ [ i ] == last + 1		3573977	0		||			
ANR	3574130	EqualityExpression	last == NULL		3573977	0		==			
ANR	3574131	Identifier	last		3573977	0					
ANR	3574132	Identifier	NULL		3573977	1					
ANR	3574133	EqualityExpression	environ [ i ] == last + 1		3573977	1		==			
ANR	3574134	ArrayIndexing	environ [ i ]		3573977	0					
ANR	3574135	Identifier	environ		3573977	0					
ANR	3574136	Identifier	i		3573977	1					
ANR	3574137	AdditiveExpression	last + 1		3573977	1		+			
ANR	3574138	Identifier	last		3573977	0					
ANR	3574139	PrimaryExpression	1		3573977	1					
ANR	3574140	CompoundStatement		41:47:1223:1223	3573977	1					
ANR	3574141	ExpressionStatement	last = environ [ i ] + strlen ( environ [ i ] )	241:4:4827:4865	3573977	0	True				
ANR	3574142	AssignmentExpression	last = environ [ i ] + strlen ( environ [ i ] )		3573977	0		=			
ANR	3574143	Identifier	last		3573977	0					
ANR	3574144	AdditiveExpression	environ [ i ] + strlen ( environ [ i ] )		3573977	1		+			
ANR	3574145	ArrayIndexing	environ [ i ]		3573977	0					
ANR	3574146	Identifier	environ		3573977	0					
ANR	3574147	Identifier	i		3573977	1					
ANR	3574148	CallExpression	strlen ( environ [ i ] )		3573977	1					
ANR	3574149	Callee	strlen		3573977	0					
ANR	3574150	Identifier	strlen		3573977	0					
ANR	3574151	ArgumentList	environ [ i ]		3573977	1					
ANR	3574152	Argument	environ [ i ]		3573977	0					
ANR	3574153	ArrayIndexing	environ [ i ]		3573977	0					
ANR	3574154	Identifier	environ		3573977	0					
ANR	3574155	Identifier	i		3573977	1					
ANR	3574156	IfStatement	if ( first == NULL || last == NULL )		3573977	8					
ANR	3574157	Condition	first == NULL || last == NULL	245:5:4884:4912	3573977	0	True				
ANR	3574158	OrExpression	first == NULL || last == NULL		3573977	0		||			
ANR	3574159	EqualityExpression	first == NULL		3573977	0		==			
ANR	3574160	Identifier	first		3573977	0					
ANR	3574161	Identifier	NULL		3573977	1					
ANR	3574162	EqualityExpression	last == NULL		3573977	1		==			
ANR	3574163	Identifier	last		3573977	0					
ANR	3574164	Identifier	NULL		3573977	1					
ANR	3574165	CompoundStatement		46:36:1317:1317	3573977	1					
ANR	3574166	ReturnStatement	return 0 ;	246:2:4919:4927	3573977	0	True				
ANR	3574167	PrimaryExpression	0		3573977	0					
ANR	3574168	ExpressionStatement	fpm_env_argv_len = last - first	249:1:4934:4965	3573977	9	True				
ANR	3574169	AssignmentExpression	fpm_env_argv_len = last - first		3573977	0		=			
ANR	3574170	Identifier	fpm_env_argv_len		3573977	0					
ANR	3574171	AdditiveExpression	last - first		3573977	1		-			
ANR	3574172	Identifier	last		3573977	0					
ANR	3574173	Identifier	first		3573977	1					
ANR	3574174	ExpressionStatement	fpm_env_argv = fpm_globals . argv	250:1:4968:4999	3573977	10	True				
ANR	3574175	AssignmentExpression	fpm_env_argv = fpm_globals . argv		3573977	0		=			
ANR	3574176	Identifier	fpm_env_argv		3573977	0					
ANR	3574177	MemberAccess	fpm_globals . argv		3573977	1					
ANR	3574178	Identifier	fpm_globals		3573977	0					
ANR	3574179	Identifier	argv		3573977	1					
ANR	3574180	IfStatement	if ( environ != NULL )		3573977	11					
ANR	3574181	Condition	environ != NULL	251:5:5006:5020	3573977	0	True				
ANR	3574182	EqualityExpression	environ != NULL		3573977	0		!=			
ANR	3574183	Identifier	environ		3573977	0					
ANR	3574184	Identifier	NULL		3573977	1					
ANR	3574185	CompoundStatement		54:2:1451:1475	3573977	1					
ANR	3574186	IdentifierDeclStatement	char * * new_environ ;	252:2:5027:5045	3573977	0	True				
ANR	3574187	IdentifierDecl	* * new_environ		3573977	0					
ANR	3574188	IdentifierDeclType	char * *		3573977	0					
ANR	3574189	Identifier	new_environ		3573977	1					
ANR	3574190	IdentifierDeclStatement	unsigned int env_nb = 0U ;	253:2:5049:5073	3573977	1	True				
ANR	3574191	IdentifierDecl	env_nb = 0U		3573977	0					
ANR	3574192	IdentifierDeclType	unsigned int		3573977	0					
ANR	3574193	Identifier	env_nb		3573977	1					
ANR	3574194	AssignmentExpression	env_nb = 0U		3573977	2		=			
ANR	3574195	Identifier	env_nb		3573977	0					
ANR	3574196	PrimaryExpression	0U		3573977	1					
ANR	3574197	WhileStatement	while ( environ [ env_nb ] )		3573977	2					
ANR	3574198	Condition	environ [ env_nb ]	255:9:5085:5099	3573977	0	True				
ANR	3574199	ArrayIndexing	environ [ env_nb ]		3573977	0					
ANR	3574200	Identifier	environ		3573977	0					
ANR	3574201	Identifier	env_nb		3573977	1					
ANR	3574202	CompoundStatement		56:26:1504:1504	3573977	1					
ANR	3574203	ExpressionStatement	env_nb ++	256:3:5107:5115	3573977	0	True				
ANR	3574204	PostIncDecOperationExpression	env_nb ++		3573977	0					
ANR	3574205	Identifier	env_nb		3573977	0					
ANR	3574206	IncDec	++		3573977	1					
ANR	3574207	IfStatement	if ( ( new_environ = malloc ( ( 1U + env_nb ) * sizeof ( char * ) ) ) == NULL )		3573977	3					
ANR	3574208	Condition	( new_environ = malloc ( ( 1U + env_nb ) * sizeof ( char * ) ) ) == NULL	259:6:5128:5190	3573977	0	True				
ANR	3574209	EqualityExpression	( new_environ = malloc ( ( 1U + env_nb ) * sizeof ( char * ) ) ) == NULL		3573977	0		==			
ANR	3574210	AssignmentExpression	new_environ = malloc ( ( 1U + env_nb ) * sizeof ( char * ) )		3573977	0		=			
ANR	3574211	Identifier	new_environ		3573977	0					
ANR	3574212	CallExpression	malloc ( ( 1U + env_nb ) * sizeof ( char * ) )		3573977	1					
ANR	3574213	Callee	malloc		3573977	0					
ANR	3574214	Identifier	malloc		3573977	0					
ANR	3574215	ArgumentList	( 1U + env_nb ) * sizeof ( char * )		3573977	1					
ANR	3574216	Argument	( 1U + env_nb ) * sizeof ( char * )		3573977	0					
ANR	3574217	MultiplicativeExpression	( 1U + env_nb ) * sizeof ( char * )		3573977	0		*			
ANR	3574218	AdditiveExpression	1U + env_nb		3573977	0		+			
ANR	3574219	PrimaryExpression	1U		3573977	0					
ANR	3574220	Identifier	env_nb		3573977	1					
ANR	3574221	SizeofExpression	sizeof ( char * )		3573977	1					
ANR	3574222	Sizeof	sizeof		3573977	0					
ANR	3574223	SizeofOperand	char *		3573977	1					
ANR	3574224	Identifier	NULL		3573977	1					
ANR	3574225	CompoundStatement		60:71:1595:1595	3573977	1					
ANR	3574226	ReturnStatement	return - 1 ;	260:3:5198:5207	3573977	0	True				
ANR	3574227	UnaryOperationExpression	- 1		3573977	0					
ANR	3574228	UnaryOperator	-		3573977	0					
ANR	3574229	PrimaryExpression	1		3573977	1					
ANR	3574230	ExpressionStatement	new_environ [ env_nb ] = NULL	262:2:5215:5241	3573977	4	True				
ANR	3574231	AssignmentExpression	new_environ [ env_nb ] = NULL		3573977	0		=			
ANR	3574232	ArrayIndexing	new_environ [ env_nb ]		3573977	0					
ANR	3574233	Identifier	new_environ		3573977	0					
ANR	3574234	Identifier	env_nb		3573977	1					
ANR	3574235	Identifier	NULL		3573977	1					
ANR	3574236	WhileStatement	while ( env_nb > 0U )		3573977	5					
ANR	3574237	Condition	env_nb > 0U	263:9:5252:5262	3573977	0	True				
ANR	3574238	RelationalExpression	env_nb > 0U		3573977	0		>			
ANR	3574239	Identifier	env_nb		3573977	0					
ANR	3574240	PrimaryExpression	0U		3573977	1					
ANR	3574241	CompoundStatement		64:22:1667:1667	3573977	1					
ANR	3574242	ExpressionStatement	env_nb --	264:3:5270:5278	3573977	0	True				
ANR	3574243	PostIncDecOperationExpression	env_nb --		3573977	0					
ANR	3574244	Identifier	env_nb		3573977	0					
ANR	3574245	IncDec	--		3573977	1					
ANR	3574246	ExpressionStatement	new_environ [ env_nb ] = strdup ( environ [ env_nb ] )	265:3:5283:5328	3573977	1	True				
ANR	3574247	AssignmentExpression	new_environ [ env_nb ] = strdup ( environ [ env_nb ] )		3573977	0		=			
ANR	3574248	ArrayIndexing	new_environ [ env_nb ]		3573977	0					
ANR	3574249	Identifier	new_environ		3573977	0					
ANR	3574250	Identifier	env_nb		3573977	1					
ANR	3574251	CallExpression	strdup ( environ [ env_nb ] )		3573977	1					
ANR	3574252	Callee	strdup		3573977	0					
ANR	3574253	Identifier	strdup		3573977	0					
ANR	3574254	ArgumentList	environ [ env_nb ]		3573977	1					
ANR	3574255	Argument	environ [ env_nb ]		3573977	0					
ANR	3574256	ArrayIndexing	environ [ env_nb ]		3573977	0					
ANR	3574257	Identifier	environ		3573977	0					
ANR	3574258	Identifier	env_nb		3573977	1					
ANR	3574259	ExpressionStatement	environ = new_environ	267:2:5336:5357	3573977	6	True				
ANR	3574260	AssignmentExpression	environ = new_environ		3573977	0		=			
ANR	3574261	Identifier	environ		3573977	0					
ANR	3574262	Identifier	new_environ		3573977	1					
ANR	3574263	ExpressionStatement	"spprintf ( & title , 0 , ""master process (%s)"" , fpm_globals . config )"	272:1:5378:5440	3573977	12	True				
ANR	3574264	CallExpression	"spprintf ( & title , 0 , ""master process (%s)"" , fpm_globals . config )"		3573977	0					
ANR	3574265	Callee	spprintf		3573977	0					
ANR	3574266	Identifier	spprintf		3573977	0					
ANR	3574267	ArgumentList	& title		3573977	1					
ANR	3574268	Argument	& title		3573977	0					
ANR	3574269	UnaryOperationExpression	& title		3573977	0					
ANR	3574270	UnaryOperator	&		3573977	0					
ANR	3574271	Identifier	title		3573977	1					
ANR	3574272	Argument	0		3573977	1					
ANR	3574273	PrimaryExpression	0		3573977	0					
ANR	3574274	Argument	"""master process (%s)"""		3573977	2					
ANR	3574275	PrimaryExpression	"""master process (%s)"""		3573977	0					
ANR	3574276	Argument	fpm_globals . config		3573977	3					
ANR	3574277	MemberAccess	fpm_globals . config		3573977	0					
ANR	3574278	Identifier	fpm_globals		3573977	0					
ANR	3574279	Identifier	config		3573977	1					
ANR	3574280	ExpressionStatement	fpm_env_setproctitle ( title )	273:1:5443:5470	3573977	13	True				
ANR	3574281	CallExpression	fpm_env_setproctitle ( title )		3573977	0					
ANR	3574282	Callee	fpm_env_setproctitle		3573977	0					
ANR	3574283	Identifier	fpm_env_setproctitle		3573977	0					
ANR	3574284	ArgumentList	title		3573977	1					
ANR	3574285	Argument	title		3573977	0					
ANR	3574286	Identifier	title		3573977	0					
ANR	3574287	ExpressionStatement	efree ( title )	274:1:5473:5485	3573977	14	True				
ANR	3574288	CallExpression	efree ( title )		3573977	0					
ANR	3574289	Callee	efree		3573977	0					
ANR	3574290	Identifier	efree		3573977	0					
ANR	3574291	ArgumentList	title		3573977	1					
ANR	3574292	Argument	title		3573977	0					
ANR	3574293	Identifier	title		3573977	0					
ANR	3574294	ReturnStatement	return 0 ;	275:1:5488:5496	3573977	15	True				
ANR	3574295	PrimaryExpression	0		3573977	0					
ANR	3574296	ReturnType	int		3573977	1					
ANR	3574297	Identifier	fpm_env_init_main		3573977	2					
ANR	3574298	ParameterList			3573977	3					
ANR	3574299	CFGEntryNode	ENTRY		3573977		True				
ANR	3574300	CFGExitNode	EXIT		3573977		True				
ANR	3574301	Symbol	* fpm_globals		3573977						
ANR	3574302	Symbol	& title		3573977						
ANR	3574303	Symbol	fpm_env_argv		3573977						
ANR	3574304	Symbol	fpm_worker_all_pools		3573977						
ANR	3574305	Symbol	title		3573977						
ANR	3574306	Symbol	wp -> next		3573977						
ANR	3574307	Symbol	new_environ		3573977						
ANR	3574308	Symbol	environ		3573977						
ANR	3574309	Symbol	strlen		3573977						
ANR	3574310	Symbol	fpm_globals . config		3573977						
ANR	3574311	Symbol	env_nb		3573977						
ANR	3574312	Symbol	wp		3573977						
ANR	3574313	Symbol	fpm_env_conf_wp		3573977						
ANR	3574314	Symbol	* wp		3573977						
ANR	3574315	Symbol	malloc		3573977						
ANR	3574316	Symbol	NULL		3573977						
ANR	3574317	Symbol	last		3573977						
ANR	3574318	Symbol	* environ		3573977						
ANR	3574319	Symbol	fpm_env_argv_len		3573977						
ANR	3574320	Symbol	i		3573977						
ANR	3574321	Symbol	fpm_globals . argc		3573977						
ANR	3574322	Symbol	* env_nb		3573977						
ANR	3574323	Symbol	* new_environ		3573977						
ANR	3574324	Symbol	* fpm_globals . argv		3573977						
ANR	3574325	Symbol	* i		3573977						
ANR	3574326	Symbol	strdup		3573977						
ANR	3574327	Symbol	first		3573977						
ANR	3574328	Symbol	fpm_globals . argv		3573977						
ANR	3574329	Symbol	fpm_globals		3573977						
