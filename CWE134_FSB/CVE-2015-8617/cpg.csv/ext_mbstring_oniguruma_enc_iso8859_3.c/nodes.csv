command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1142913	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_enc_iso8859_3.c								
ANR	1142914	DeclStmt									
ANR	1142915	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_3_ToLowerCaseTable
ANR	1142916	DeclStmt									
ANR	1142917	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_3_CtypeTable
ANR	1142918	DeclStmt									
ANR	1142919	Decl							const UChar	const UChar *	p
ANR	1142920	Function	is_mbc_ambiguous	125:0:6514:7046							
ANR	1142921	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		1142920	0					
ANR	1142922	CompoundStatement		127:0:6601:7046	1142920	0					
ANR	1142923	IdentifierDeclStatement	int v ;	128:2:6605:6610	1142920	0	True				
ANR	1142924	IdentifierDecl	v		1142920	0					
ANR	1142925	IdentifierDeclType	int		1142920	0					
ANR	1142926	Identifier	v		1142920	1					
ANR	1142927	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6614:6634	1142920	1	True				
ANR	1142928	IdentifierDecl	* p = * pp		1142920	0					
ANR	1142929	IdentifierDeclType	const UChar *		1142920	0					
ANR	1142930	Identifier	p		1142920	1					
ANR	1142931	AssignmentExpression	* p = * pp		1142920	2		=			
ANR	1142932	Identifier	p		1142920	0					
ANR	1142933	UnaryOperationExpression	* pp		1142920	1					
ANR	1142934	UnaryOperator	*		1142920	0					
ANR	1142935	Identifier	pp		1142920	1					
ANR	1142936	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		1142920	2					
ANR	1142937	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6643:6707	1142920	0	True				
ANR	1142938	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1142920	0		&&			
ANR	1142939	EqualityExpression	* p == 0xdf		1142920	0		==			
ANR	1142940	UnaryOperationExpression	* p		1142920	0					
ANR	1142941	UnaryOperator	*		1142920	0					
ANR	1142942	Identifier	p		1142920	1					
ANR	1142943	PrimaryExpression	0xdf		1142920	1					
ANR	1142944	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1142920	1		!=			
ANR	1142945	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1142920	0		&			
ANR	1142946	Identifier	flag		1142920	0					
ANR	1142947	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1142920	1					
ANR	1142948	PrimaryExpression	0		1142920	1					
ANR	1142949	CompoundStatement		5:73:108:108	1142920	1					
ANR	1142950	ExpressionStatement	( * pp ) ++	132:4:6716:6723	1142920	0	True				
ANR	1142951	PostIncDecOperationExpression	( * pp ) ++		1142920	0					
ANR	1142952	UnaryOperationExpression	* pp		1142920	0					
ANR	1142953	UnaryOperator	*		1142920	0					
ANR	1142954	Identifier	pp		1142920	1					
ANR	1142955	IncDec	++		1142920	1					
ANR	1142956	ReturnStatement	return TRUE ;	133:4:6729:6740	1142920	1	True				
ANR	1142957	Identifier	TRUE		1142920	0					
ANR	1142958	ExpressionStatement	( * pp ) ++	136:2:6749:6756	1142920	3	True				
ANR	1142959	PostIncDecOperationExpression	( * pp ) ++		1142920	0					
ANR	1142960	UnaryOperationExpression	* pp		1142920	0					
ANR	1142961	UnaryOperator	*		1142920	0					
ANR	1142962	Identifier	pp		1142920	1					
ANR	1142963	IncDec	++		1142920	1					
ANR	1142964	ExpressionStatement	v = ( EncISO_8859_3_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6760:6832	1142920	4	True				
ANR	1142965	AssignmentExpression	v = ( EncISO_8859_3_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		1142920	0		=			
ANR	1142966	Identifier	v		1142920	0					
ANR	1142967	BitAndExpression	EncISO_8859_3_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		1142920	1		&			
ANR	1142968	ArrayIndexing	EncISO_8859_3_CtypeTable [ * p ]		1142920	0					
ANR	1142969	Identifier	EncISO_8859_3_CtypeTable		1142920	0					
ANR	1142970	UnaryOperationExpression	* p		1142920	1					
ANR	1142971	UnaryOperator	*		1142920	0					
ANR	1142972	Identifier	p		1142920	1					
ANR	1142973	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		1142920	1		|			
ANR	1142974	Identifier	BIT_CTYPE_UPPER		1142920	0					
ANR	1142975	Identifier	BIT_CTYPE_LOWER		1142920	1					
ANR	1142976	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		1142920	5					
ANR	1142977	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6840:6865	1142920	0	True				
ANR	1142978	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		1142920	0		!=			
ANR	1142979	InclusiveOrExpression	v | BIT_CTYPE_LOWER		1142920	0		|			
ANR	1142980	Identifier	v		1142920	0					
ANR	1142981	Identifier	BIT_CTYPE_LOWER		1142920	1					
ANR	1142982	PrimaryExpression	0		1142920	1					
ANR	1142983	CompoundStatement		12:34:266:266	1142920	1					
ANR	1142984	IfStatement	if ( * p == 0xb5 )		1142920	0					
ANR	1142985	Condition	* p == 0xb5	140:8:6947:6956	1142920	0	True				
ANR	1142986	EqualityExpression	* p == 0xb5		1142920	0		==			
ANR	1142987	UnaryOperationExpression	* p		1142920	0					
ANR	1142988	UnaryOperator	*		1142920	0					
ANR	1142989	Identifier	p		1142920	1					
ANR	1142990	PrimaryExpression	0xb5		1142920	1					
ANR	1142991	ReturnStatement	return FALSE ;	141:6:6965:6977	1142920	1	True				
ANR	1142992	Identifier	FALSE		1142920	0					
ANR	1142993	ElseStatement	else		1142920	0					
ANR	1142994	ReturnStatement	return TRUE ;	143:6:6994:7005	1142920	0	True				
ANR	1142995	Identifier	TRUE		1142920	0					
ANR	1142996	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	146:2:7014:7044	1142920	6	True				
ANR	1142997	ConditionalExpression	v != 0 ? TRUE : FALSE		1142920	0					
ANR	1142998	Condition	v != 0		1142920	0					
ANR	1142999	EqualityExpression	v != 0		1142920	0		!=			
ANR	1143000	Identifier	v		1142920	0					
ANR	1143001	PrimaryExpression	0		1142920	1					
ANR	1143002	Identifier	TRUE		1142920	1					
ANR	1143003	Identifier	FALSE		1142920	2					
ANR	1143004	ReturnType	static int		1142920	1					
ANR	1143005	Identifier	is_mbc_ambiguous		1142920	2					
ANR	1143006	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		1142920	3					
ANR	1143007	Parameter	OnigCaseFoldType flag	126:17:6542:6562	1142920	0	True				
ANR	1143008	ParameterType	OnigCaseFoldType		1142920	0					
ANR	1143009	Identifier	flag		1142920	1					
ANR	1143010	Parameter	const UChar * * pp	126:40:6565:6580	1142920	1	True				
ANR	1143011	ParameterType	const UChar * *		1142920	0					
ANR	1143012	Identifier	pp		1142920	1					
ANR	1143013	Parameter	const UChar * end	126:58:6583:6598	1142920	2	True				
ANR	1143014	ParameterType	const UChar *		1142920	0					
ANR	1143015	Identifier	end		1142920	1					
ANR	1143016	CFGEntryNode	ENTRY		1142920		True				
ANR	1143017	CFGExitNode	EXIT		1142920		True				
ANR	1143018	Symbol	pp		1142920						
ANR	1143019	Symbol	flag		1142920						
ANR	1143020	Symbol	* pp		1142920						
ANR	1143021	Symbol	* EncISO_8859_3_CtypeTable		1142920						
ANR	1143022	Symbol	TRUE		1142920						
ANR	1143023	Symbol	EncISO_8859_3_CtypeTable		1142920						
ANR	1143024	Symbol	p		1142920						
ANR	1143025	Symbol	v		1142920						
ANR	1143026	Symbol	BIT_CTYPE_LOWER		1142920						
ANR	1143027	Symbol	end		1142920						
ANR	1143028	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1142920						
ANR	1143029	Symbol	* p		1142920						
ANR	1143030	Symbol	BIT_CTYPE_UPPER		1142920						
ANR	1143031	Symbol	FALSE		1142920						
ANR	1143032	Symbol	* * p		1142920						
ANR	1143033	Function	is_code_ctype	150:0:7056:7215							
ANR	1143034	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		1143033	0					
ANR	1143035	CompoundStatement		152:0:7121:7215	1143033	0					
ANR	1143036	IfStatement	if ( code < 256 )		1143033	0					
ANR	1143037	Condition	code < 256	153:6:7129:7138	1143033	0	True				
ANR	1143038	RelationalExpression	code < 256		1143033	0		<			
ANR	1143039	Identifier	code		1143033	0					
ANR	1143040	PrimaryExpression	256		1143033	1					
ANR	1143041	ReturnStatement	"return ENC_IS_ISO_8859_3_CTYPE ( code , ctype ) ;"	154:4:7145:7188	1143033	1	True				
ANR	1143042	CallExpression	"ENC_IS_ISO_8859_3_CTYPE ( code , ctype )"		1143033	0					
ANR	1143043	Callee	ENC_IS_ISO_8859_3_CTYPE		1143033	0					
ANR	1143044	Identifier	ENC_IS_ISO_8859_3_CTYPE		1143033	0					
ANR	1143045	ArgumentList	code		1143033	1					
ANR	1143046	Argument	code		1143033	0					
ANR	1143047	Identifier	code		1143033	0					
ANR	1143048	Argument	ctype		1143033	1					
ANR	1143049	Identifier	ctype		1143033	0					
ANR	1143050	ElseStatement	else		1143033	0					
ANR	1143051	ReturnStatement	return FALSE ;	156:4:7201:7213	1143033	0	True				
ANR	1143052	Identifier	FALSE		1143033	0					
ANR	1143053	ReturnType	static int		1143033	1					
ANR	1143054	Identifier	is_code_ctype		1143033	2					
ANR	1143055	ParameterList	"OnigCodePoint code , unsigned int ctype"		1143033	3					
ANR	1143056	Parameter	OnigCodePoint code	151:14:7081:7098	1143033	0	True				
ANR	1143057	ParameterType	OnigCodePoint		1143033	0					
ANR	1143058	Identifier	code		1143033	1					
ANR	1143059	Parameter	unsigned int ctype	151:34:7101:7118	1143033	1	True				
ANR	1143060	ParameterType	unsigned int		1143033	0					
ANR	1143061	Identifier	ctype		1143033	1					
ANR	1143062	CFGEntryNode	ENTRY		1143033		True				
ANR	1143063	CFGExitNode	EXIT		1143033		True				
ANR	1143064	Symbol	ENC_IS_ISO_8859_3_CTYPE		1143033						
ANR	1143065	Symbol	code		1143033						
ANR	1143066	Symbol	ctype		1143033						
ANR	1143067	Symbol	FALSE		1143033						
ANR	1143068	DeclStmt									
ANR	1143069	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	1143070	Function	apply_all_case_fold	200:0:7872:8128							
ANR	1143071	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		1143070	0					
ANR	1143072	CompoundStatement		203:0:7971:8128	1143070	0					
ANR	1143073	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	204:2:7975:8126	1143070	0	True				
ANR	1143074	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		1143070	0					
ANR	1143075	Callee	onigenc_apply_all_case_fold_with_map		1143070	0					
ANR	1143076	Identifier	onigenc_apply_all_case_fold_with_map		1143070	0					
ANR	1143077	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143070	1					
ANR	1143078	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143070	0					
ANR	1143079	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143070	0		/			
ANR	1143080	SizeofExpression	sizeof ( CaseFoldMap )		1143070	0					
ANR	1143081	Sizeof	sizeof		1143070	0					
ANR	1143082	SizeofOperand	CaseFoldMap		1143070	1					
ANR	1143083	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1143070	1					
ANR	1143084	Sizeof	sizeof		1143070	0					
ANR	1143085	SizeofOperand	OnigPairCaseFoldCodes		1143070	1					
ANR	1143086	Argument	CaseFoldMap		1143070	1					
ANR	1143087	Identifier	CaseFoldMap		1143070	0					
ANR	1143088	Argument	1		1143070	2					
ANR	1143089	PrimaryExpression	1		1143070	0					
ANR	1143090	Argument	flag		1143070	3					
ANR	1143091	Identifier	flag		1143070	0					
ANR	1143092	Argument	f		1143070	4					
ANR	1143093	Identifier	f		1143070	0					
ANR	1143094	Argument	arg		1143070	5					
ANR	1143095	Identifier	arg		1143070	0					
ANR	1143096	ReturnType	static int		1143070	1					
ANR	1143097	Identifier	apply_all_case_fold		1143070	2					
ANR	1143098	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		1143070	3					
ANR	1143099	Parameter	OnigCaseFoldType flag	201:20:7903:7923	1143070	0	True				
ANR	1143100	ParameterType	OnigCaseFoldType		1143070	0					
ANR	1143101	Identifier	flag		1143070	1					
ANR	1143102	Parameter	OnigApplyAllCaseFoldFunc f	202:6:7932:7957	1143070	1	True				
ANR	1143103	ParameterType	OnigApplyAllCaseFoldFunc		1143070	0					
ANR	1143104	Identifier	f		1143070	1					
ANR	1143105	Parameter	void * arg	202:34:7960:7968	1143070	2	True				
ANR	1143106	ParameterType	void *		1143070	0					
ANR	1143107	Identifier	arg		1143070	1					
ANR	1143108	CFGEntryNode	ENTRY		1143070		True				
ANR	1143109	CFGExitNode	EXIT		1143070		True				
ANR	1143110	Symbol	flag		1143070						
ANR	1143111	Symbol	f		1143070						
ANR	1143112	Symbol	arg		1143070						
ANR	1143113	Symbol	CaseFoldMap		1143070						
ANR	1143114	Symbol	onigenc_apply_all_case_fold_with_map		1143070						
ANR	1143115	Function	get_case_fold_codes_by_str	209:0:8131:8424							
ANR	1143116	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		1143115	0					
ANR	1143117	CompoundStatement		212:0:8267:8424	1143115	0					
ANR	1143118	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	213:2:8271:8422	1143115	0	True				
ANR	1143119	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		1143115	0					
ANR	1143120	Callee	onigenc_get_case_fold_codes_by_str_with_map		1143115	0					
ANR	1143121	Identifier	onigenc_get_case_fold_codes_by_str_with_map		1143115	0					
ANR	1143122	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143115	1					
ANR	1143123	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143115	0					
ANR	1143124	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1143115	0		/			
ANR	1143125	SizeofExpression	sizeof ( CaseFoldMap )		1143115	0					
ANR	1143126	Sizeof	sizeof		1143115	0					
ANR	1143127	SizeofOperand	CaseFoldMap		1143115	1					
ANR	1143128	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1143115	1					
ANR	1143129	Sizeof	sizeof		1143115	0					
ANR	1143130	SizeofOperand	OnigPairCaseFoldCodes		1143115	1					
ANR	1143131	Argument	CaseFoldMap		1143115	1					
ANR	1143132	Identifier	CaseFoldMap		1143115	0					
ANR	1143133	Argument	1		1143115	2					
ANR	1143134	PrimaryExpression	1		1143115	0					
ANR	1143135	Argument	flag		1143115	3					
ANR	1143136	Identifier	flag		1143115	0					
ANR	1143137	Argument	p		1143115	4					
ANR	1143138	Identifier	p		1143115	0					
ANR	1143139	Argument	end		1143115	5					
ANR	1143140	Identifier	end		1143115	0					
ANR	1143141	Argument	items		1143115	6					
ANR	1143142	Identifier	items		1143115	0					
ANR	1143143	ReturnType	static int		1143115	1					
ANR	1143144	Identifier	get_case_fold_codes_by_str		1143115	2					
ANR	1143145	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		1143115	3					
ANR	1143146	Parameter	OnigCaseFoldType flag	210:27:8169:8189	1143115	0	True				
ANR	1143147	ParameterType	OnigCaseFoldType		1143115	0					
ANR	1143148	Identifier	flag		1143115	1					
ANR	1143149	Parameter	const OnigUChar * p	211:3:8195:8212	1143115	1	True				
ANR	1143150	ParameterType	const OnigUChar *		1143115	0					
ANR	1143151	Identifier	p		1143115	1					
ANR	1143152	Parameter	const OnigUChar * end	211:23:8215:8234	1143115	2	True				
ANR	1143153	ParameterType	const OnigUChar *		1143115	0					
ANR	1143154	Identifier	end		1143115	1					
ANR	1143155	Parameter	OnigCaseFoldCodeItem items [ ]	211:45:8237:8264	1143115	3	True				
ANR	1143156	ParameterType	OnigCaseFoldCodeItem [ ]		1143115	0					
ANR	1143157	Identifier	items		1143115	1					
ANR	1143158	CFGEntryNode	ENTRY		1143115		True				
ANR	1143159	CFGExitNode	EXIT		1143115		True				
ANR	1143160	Symbol	p		1143115						
ANR	1143161	Symbol	flag		1143115						
ANR	1143162	Symbol	end		1143115						
ANR	1143163	Symbol	CaseFoldMap		1143115						
ANR	1143164	Symbol	onigenc_get_case_fold_codes_by_str_with_map		1143115						
ANR	1143165	Symbol	items		1143115						
ANR	1143166	DeclStmt									
ANR	1143167	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_3
