command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3842352	File	data/converged/CVE-2015-8617_php-src/zend_API.c								
ANR	3842353	DeclStmt									
ANR	3842354	Decl							ZEND_API HashTable	ZEND_API HashTable	module_registry
ANR	3842355	DeclStmt									
ANR	3842356	Decl							zend_module_entry	zend_module_entry * *	module_request_startup_handlers
ANR	3842357	DeclStmt									
ANR	3842358	Decl							zend_module_entry	zend_module_entry * *	module_request_shutdown_handlers
ANR	3842359	DeclStmt									
ANR	3842360	Decl							zend_module_entry	zend_module_entry * *	module_post_deactivate_handlers
ANR	3842361	DeclStmt									
ANR	3842362	Decl							zend_class_entry	zend_class_entry * *	class_cleanup_handlers
ANR	3842363	Function	zend_get_parameters	47:0:2060:2708							
ANR	3842364	FunctionDef	"zend_get_parameters (int ht , int param_count)"		3842363	0					
ANR	3842365	CompoundStatement		48:0:2133:2708	3842363	0					
ANR	3842366	IdentifierDeclStatement	int arg_count ;	49:1:2136:2149	3842363	0	True				
ANR	3842367	IdentifierDecl	arg_count		3842363	0					
ANR	3842368	IdentifierDeclType	int		3842363	0					
ANR	3842369	Identifier	arg_count		3842363	1					
ANR	3842370	IdentifierDeclStatement	va_list ptr ;	50:1:2152:2163	3842363	1	True				
ANR	3842371	IdentifierDecl	ptr		3842363	0					
ANR	3842372	IdentifierDeclType	va_list		3842363	0					
ANR	3842373	Identifier	ptr		3842363	1					
ANR	3842374	IdentifierDeclStatement	"zval * * param , * param_ptr ;"	51:1:2166:2190	3842363	2	True				
ANR	3842375	IdentifierDecl	* * param		3842363	0					
ANR	3842376	IdentifierDeclType	zval * *		3842363	0					
ANR	3842377	Identifier	param		3842363	1					
ANR	3842378	IdentifierDecl	* param_ptr		3842363	1					
ANR	3842379	IdentifierDeclType	zval *		3842363	0					
ANR	3842380	Identifier	param_ptr		3842363	1					
ANR	3842381	ExpressionStatement	"param_ptr = ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"	53:1:2194:2248	3842363	3	True				
ANR	3842382	AssignmentExpression	"param_ptr = ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"		3842363	0		=			
ANR	3842383	Identifier	param_ptr		3842363	0					
ANR	3842384	CallExpression	"ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"		3842363	1					
ANR	3842385	Callee	ZEND_CALL_ARG		3842363	0					
ANR	3842386	Identifier	ZEND_CALL_ARG		3842363	0					
ANR	3842387	ArgumentList	EG ( current_execute_data )		3842363	1					
ANR	3842388	Argument	EG ( current_execute_data )		3842363	0					
ANR	3842389	CallExpression	EG ( current_execute_data )		3842363	0					
ANR	3842390	Callee	EG		3842363	0					
ANR	3842391	Identifier	EG		3842363	0					
ANR	3842392	ArgumentList	current_execute_data		3842363	1					
ANR	3842393	Argument	current_execute_data		3842363	0					
ANR	3842394	Identifier	current_execute_data		3842363	0					
ANR	3842395	Argument	1		3842363	1					
ANR	3842396	PrimaryExpression	1		3842363	0					
ANR	3842397	ExpressionStatement	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )	54:1:2251:2307	3842363	4	True				
ANR	3842398	AssignmentExpression	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3842363	0		=			
ANR	3842399	Identifier	arg_count		3842363	0					
ANR	3842400	CallExpression	ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3842363	1					
ANR	3842401	Callee	ZEND_CALL_NUM_ARGS		3842363	0					
ANR	3842402	Identifier	ZEND_CALL_NUM_ARGS		3842363	0					
ANR	3842403	ArgumentList	EG ( current_execute_data )		3842363	1					
ANR	3842404	Argument	EG ( current_execute_data )		3842363	0					
ANR	3842405	CallExpression	EG ( current_execute_data )		3842363	0					
ANR	3842406	Callee	EG		3842363	0					
ANR	3842407	Identifier	EG		3842363	0					
ANR	3842408	ArgumentList	current_execute_data		3842363	1					
ANR	3842409	Argument	current_execute_data		3842363	0					
ANR	3842410	Identifier	current_execute_data		3842363	0					
ANR	3842411	IfStatement	if ( param_count > arg_count )		3842363	5					
ANR	3842412	Condition	param_count > arg_count	56:5:2315:2335	3842363	0	True				
ANR	3842413	RelationalExpression	param_count > arg_count		3842363	0		>			
ANR	3842414	Identifier	param_count		3842363	0					
ANR	3842415	Identifier	arg_count		3842363	1					
ANR	3842416	CompoundStatement		9:28:204:204	3842363	1					
ANR	3842417	ReturnStatement	return FAILURE ;	57:2:2342:2356	3842363	0	True				
ANR	3842418	Identifier	FAILURE		3842363	0					
ANR	3842419	ExpressionStatement	"va_start ( ptr , param_count )"	60:1:2363:2389	3842363	6	True				
ANR	3842420	CallExpression	"va_start ( ptr , param_count )"		3842363	0					
ANR	3842421	Callee	va_start		3842363	0					
ANR	3842422	Identifier	va_start		3842363	0					
ANR	3842423	ArgumentList	ptr		3842363	1					
ANR	3842424	Argument	ptr		3842363	0					
ANR	3842425	Identifier	ptr		3842363	0					
ANR	3842426	Argument	param_count		3842363	1					
ANR	3842427	Identifier	param_count		3842363	0					
ANR	3842428	WhileStatement	while ( param_count -- > 0 )		3842363	7					
ANR	3842429	Condition	param_count -- > 0	62:8:2400:2414	3842363	0	True				
ANR	3842430	RelationalExpression	param_count -- > 0		3842363	0		>			
ANR	3842431	PostIncDecOperationExpression	param_count --		3842363	0					
ANR	3842432	Identifier	param_count		3842363	0					
ANR	3842433	IncDec	--		3842363	1					
ANR	3842434	PrimaryExpression	0		3842363	1					
ANR	3842435	CompoundStatement		15:25:283:283	3842363	1					
ANR	3842436	Statement	param	63:2:2421:2425	3842363	0	True				
ANR	3842437	Statement	=	63:8:2427:2427	3842363	1	True				
ANR	3842438	Statement	va_arg	63:10:2429:2434	3842363	2	True				
ANR	3842439	Statement	(	63:16:2435:2435	3842363	3	True				
ANR	3842440	Statement	ptr	63:17:2436:2438	3842363	4	True				
ANR	3842441	Statement	","	63:20:2439:2439	3842363	5	True				
ANR	3842442	Statement	zval	63:22:2441:2444	3842363	6	True				
ANR	3842443	Statement	*	63:27:2446:2446	3842363	7	True				
ANR	3842444	Statement	*	63:28:2447:2447	3842363	8	True				
ANR	3842445	Statement	)	63:29:2448:2448	3842363	9	True				
ANR	3842446	ExpressionStatement		63:30:2449:2449	3842363	10	True				
ANR	3842447	IfStatement	if ( ! Z_ISREF_P ( param_ptr ) && Z_REFCOUNT_P ( param_ptr ) > 1 )		3842363	11					
ANR	3842448	Condition	! Z_ISREF_P ( param_ptr ) && Z_REFCOUNT_P ( param_ptr ) > 1	64:6:2457:2508	3842363	0	True				
ANR	3842449	AndExpression	! Z_ISREF_P ( param_ptr ) && Z_REFCOUNT_P ( param_ptr ) > 1		3842363	0		&&			
ANR	3842450	UnaryOperationExpression	! Z_ISREF_P ( param_ptr )		3842363	0					
ANR	3842451	UnaryOperator	!		3842363	0					
ANR	3842452	CallExpression	Z_ISREF_P ( param_ptr )		3842363	1					
ANR	3842453	Callee	Z_ISREF_P		3842363	0					
ANR	3842454	Identifier	Z_ISREF_P		3842363	0					
ANR	3842455	ArgumentList	param_ptr		3842363	1					
ANR	3842456	Argument	param_ptr		3842363	0					
ANR	3842457	Identifier	param_ptr		3842363	0					
ANR	3842458	RelationalExpression	Z_REFCOUNT_P ( param_ptr ) > 1		3842363	1		>			
ANR	3842459	CallExpression	Z_REFCOUNT_P ( param_ptr )		3842363	0					
ANR	3842460	Callee	Z_REFCOUNT_P		3842363	0					
ANR	3842461	Identifier	Z_REFCOUNT_P		3842363	0					
ANR	3842462	ArgumentList	param_ptr		3842363	1					
ANR	3842463	Argument	param_ptr		3842363	0					
ANR	3842464	Identifier	param_ptr		3842363	0					
ANR	3842465	PrimaryExpression	1		3842363	1					
ANR	3842466	CompoundStatement		18:3:382:394	3842363	1					
ANR	3842467	IdentifierDeclStatement	zval new_tmp ;	65:3:2516:2528	3842363	0	True				
ANR	3842468	IdentifierDecl	new_tmp		3842363	0					
ANR	3842469	IdentifierDeclType	zval		3842363	0					
ANR	3842470	Identifier	new_tmp		3842363	1					
ANR	3842471	ExpressionStatement	"ZVAL_DUP ( & new_tmp , param_ptr )"	67:3:2534:2563	3842363	1	True				
ANR	3842472	CallExpression	"ZVAL_DUP ( & new_tmp , param_ptr )"		3842363	0					
ANR	3842473	Callee	ZVAL_DUP		3842363	0					
ANR	3842474	Identifier	ZVAL_DUP		3842363	0					
ANR	3842475	ArgumentList	& new_tmp		3842363	1					
ANR	3842476	Argument	& new_tmp		3842363	0					
ANR	3842477	UnaryOperationExpression	& new_tmp		3842363	0					
ANR	3842478	UnaryOperator	&		3842363	0					
ANR	3842479	Identifier	new_tmp		3842363	1					
ANR	3842480	Argument	param_ptr		3842363	1					
ANR	3842481	Identifier	param_ptr		3842363	0					
ANR	3842482	ExpressionStatement	Z_DELREF_P ( param_ptr )	68:3:2568:2589	3842363	2	True				
ANR	3842483	CallExpression	Z_DELREF_P ( param_ptr )		3842363	0					
ANR	3842484	Callee	Z_DELREF_P		3842363	0					
ANR	3842485	Identifier	Z_DELREF_P		3842363	0					
ANR	3842486	ArgumentList	param_ptr		3842363	1					
ANR	3842487	Argument	param_ptr		3842363	0					
ANR	3842488	Identifier	param_ptr		3842363	0					
ANR	3842489	ExpressionStatement	"ZVAL_COPY_VALUE ( param_ptr , & new_tmp )"	69:3:2594:2630	3842363	3	True				
ANR	3842490	CallExpression	"ZVAL_COPY_VALUE ( param_ptr , & new_tmp )"		3842363	0					
ANR	3842491	Callee	ZVAL_COPY_VALUE		3842363	0					
ANR	3842492	Identifier	ZVAL_COPY_VALUE		3842363	0					
ANR	3842493	ArgumentList	param_ptr		3842363	1					
ANR	3842494	Argument	param_ptr		3842363	0					
ANR	3842495	Identifier	param_ptr		3842363	0					
ANR	3842496	Argument	& new_tmp		3842363	1					
ANR	3842497	UnaryOperationExpression	& new_tmp		3842363	0					
ANR	3842498	UnaryOperator	&		3842363	0					
ANR	3842499	Identifier	new_tmp		3842363	1					
ANR	3842500	ExpressionStatement	* param = param_ptr	71:2:2638:2656	3842363	12	True				
ANR	3842501	AssignmentExpression	* param = param_ptr		3842363	0		=			
ANR	3842502	UnaryOperationExpression	* param		3842363	0					
ANR	3842503	UnaryOperator	*		3842363	0					
ANR	3842504	Identifier	param		3842363	1					
ANR	3842505	Identifier	param_ptr		3842363	1					
ANR	3842506	ExpressionStatement	param_ptr ++	72:2:2660:2671	3842363	13	True				
ANR	3842507	PostIncDecOperationExpression	param_ptr ++		3842363	0					
ANR	3842508	Identifier	param_ptr		3842363	0					
ANR	3842509	IncDec	++		3842363	1					
ANR	3842510	ExpressionStatement	va_end ( ptr )	74:1:2677:2688	3842363	8	True				
ANR	3842511	CallExpression	va_end ( ptr )		3842363	0					
ANR	3842512	Callee	va_end		3842363	0					
ANR	3842513	Identifier	va_end		3842363	0					
ANR	3842514	ArgumentList	ptr		3842363	1					
ANR	3842515	Argument	ptr		3842363	0					
ANR	3842516	Identifier	ptr		3842363	0					
ANR	3842517	ReturnStatement	return SUCCESS ;	76:1:2692:2706	3842363	9	True				
ANR	3842518	Identifier	SUCCESS		3842363	0					
ANR	3842519	ReturnType	ZEND_API int		3842363	1					
ANR	3842520	Identifier	zend_get_parameters		3842363	2					
ANR	3842521	ParameterList	"int ht , int param_count"		3842363	3					
ANR	3842522	Parameter	int ht	47:33:2093:2098	3842363	0	True				
ANR	3842523	ParameterType	int		3842363	0					
ANR	3842524	Identifier	ht		3842363	1					
ANR	3842525	Parameter	int param_count	47:41:2101:2115	3842363	1	True				
ANR	3842526	ParameterType	int		3842363	0					
ANR	3842527	Identifier	param_count		3842363	1					
ANR	3842528	CFGEntryNode	ENTRY		3842363		True				
ANR	3842529	CFGExitNode	EXIT		3842363		True				
ANR	3842530	Symbol	EG		3842363						
ANR	3842531	Symbol	SUCCESS		3842363						
ANR	3842532	Symbol	param_count		3842363						
ANR	3842533	Symbol	ZEND_CALL_ARG		3842363						
ANR	3842534	Symbol	param_ptr		3842363						
ANR	3842535	Symbol	current_execute_data		3842363						
ANR	3842536	Symbol	ht		3842363						
ANR	3842537	Symbol	FAILURE		3842363						
ANR	3842538	Symbol	Z_REFCOUNT_P		3842363						
ANR	3842539	Symbol	ptr		3842363						
ANR	3842540	Symbol	* param		3842363						
ANR	3842541	Symbol	& new_tmp		3842363						
ANR	3842542	Symbol	param		3842363						
ANR	3842543	Symbol	new_tmp		3842363						
ANR	3842544	Symbol	ZEND_CALL_NUM_ARGS		3842363						
ANR	3842545	Symbol	Z_ISREF_P		3842363						
ANR	3842546	Symbol	arg_count		3842363						
ANR	3842547	Function	zend_get_parameters_ex	82:0:2819:3276							
ANR	3842548	FunctionDef	zend_get_parameters_ex (int param_count)		3842547	0					
ANR	3842549	CompoundStatement		83:0:2887:3276	3842547	0					
ANR	3842550	IdentifierDeclStatement	int arg_count ;	84:1:2890:2903	3842547	0	True				
ANR	3842551	IdentifierDecl	arg_count		3842547	0					
ANR	3842552	IdentifierDeclType	int		3842547	0					
ANR	3842553	Identifier	arg_count		3842547	1					
ANR	3842554	IdentifierDeclStatement	va_list ptr ;	85:1:2906:2917	3842547	1	True				
ANR	3842555	IdentifierDecl	ptr		3842547	0					
ANR	3842556	IdentifierDeclType	va_list		3842547	0					
ANR	3842557	Identifier	ptr		3842547	1					
ANR	3842558	IdentifierDeclStatement	"zval * * param , * param_ptr ;"	86:1:2920:2944	3842547	2	True				
ANR	3842559	IdentifierDecl	* * param		3842547	0					
ANR	3842560	IdentifierDeclType	zval * *		3842547	0					
ANR	3842561	Identifier	param		3842547	1					
ANR	3842562	IdentifierDecl	* param_ptr		3842547	1					
ANR	3842563	IdentifierDeclType	zval *		3842547	0					
ANR	3842564	Identifier	param_ptr		3842547	1					
ANR	3842565	ExpressionStatement	"param_ptr = ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"	88:1:2948:3002	3842547	3	True				
ANR	3842566	AssignmentExpression	"param_ptr = ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"		3842547	0		=			
ANR	3842567	Identifier	param_ptr		3842547	0					
ANR	3842568	CallExpression	"ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"		3842547	1					
ANR	3842569	Callee	ZEND_CALL_ARG		3842547	0					
ANR	3842570	Identifier	ZEND_CALL_ARG		3842547	0					
ANR	3842571	ArgumentList	EG ( current_execute_data )		3842547	1					
ANR	3842572	Argument	EG ( current_execute_data )		3842547	0					
ANR	3842573	CallExpression	EG ( current_execute_data )		3842547	0					
ANR	3842574	Callee	EG		3842547	0					
ANR	3842575	Identifier	EG		3842547	0					
ANR	3842576	ArgumentList	current_execute_data		3842547	1					
ANR	3842577	Argument	current_execute_data		3842547	0					
ANR	3842578	Identifier	current_execute_data		3842547	0					
ANR	3842579	Argument	1		3842547	1					
ANR	3842580	PrimaryExpression	1		3842547	0					
ANR	3842581	ExpressionStatement	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )	89:1:3005:3061	3842547	4	True				
ANR	3842582	AssignmentExpression	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3842547	0		=			
ANR	3842583	Identifier	arg_count		3842547	0					
ANR	3842584	CallExpression	ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3842547	1					
ANR	3842585	Callee	ZEND_CALL_NUM_ARGS		3842547	0					
ANR	3842586	Identifier	ZEND_CALL_NUM_ARGS		3842547	0					
ANR	3842587	ArgumentList	EG ( current_execute_data )		3842547	1					
ANR	3842588	Argument	EG ( current_execute_data )		3842547	0					
ANR	3842589	CallExpression	EG ( current_execute_data )		3842547	0					
ANR	3842590	Callee	EG		3842547	0					
ANR	3842591	Identifier	EG		3842547	0					
ANR	3842592	ArgumentList	current_execute_data		3842547	1					
ANR	3842593	Argument	current_execute_data		3842547	0					
ANR	3842594	Identifier	current_execute_data		3842547	0					
ANR	3842595	IfStatement	if ( param_count > arg_count )		3842547	5					
ANR	3842596	Condition	param_count > arg_count	91:5:3069:3089	3842547	0	True				
ANR	3842597	RelationalExpression	param_count > arg_count		3842547	0		>			
ANR	3842598	Identifier	param_count		3842547	0					
ANR	3842599	Identifier	arg_count		3842547	1					
ANR	3842600	CompoundStatement		9:28:204:204	3842547	1					
ANR	3842601	ReturnStatement	return FAILURE ;	92:2:3096:3110	3842547	0	True				
ANR	3842602	Identifier	FAILURE		3842547	0					
ANR	3842603	ExpressionStatement	"va_start ( ptr , param_count )"	95:1:3117:3143	3842547	6	True				
ANR	3842604	CallExpression	"va_start ( ptr , param_count )"		3842547	0					
ANR	3842605	Callee	va_start		3842547	0					
ANR	3842606	Identifier	va_start		3842547	0					
ANR	3842607	ArgumentList	ptr		3842547	1					
ANR	3842608	Argument	ptr		3842547	0					
ANR	3842609	Identifier	ptr		3842547	0					
ANR	3842610	Argument	param_count		3842547	1					
ANR	3842611	Identifier	param_count		3842547	0					
ANR	3842612	WhileStatement	while ( param_count -- > 0 )		3842547	7					
ANR	3842613	Condition	param_count -- > 0	96:8:3153:3167	3842547	0	True				
ANR	3842614	RelationalExpression	param_count -- > 0		3842547	0		>			
ANR	3842615	PostIncDecOperationExpression	param_count --		3842547	0					
ANR	3842616	Identifier	param_count		3842547	0					
ANR	3842617	IncDec	--		3842547	1					
ANR	3842618	PrimaryExpression	0		3842547	1					
ANR	3842619	CompoundStatement		14:25:282:282	3842547	1					
ANR	3842620	Statement	param	97:2:3174:3178	3842547	0	True				
ANR	3842621	Statement	=	97:8:3180:3180	3842547	1	True				
ANR	3842622	Statement	va_arg	97:10:3182:3187	3842547	2	True				
ANR	3842623	Statement	(	97:16:3188:3188	3842547	3	True				
ANR	3842624	Statement	ptr	97:17:3189:3191	3842547	4	True				
ANR	3842625	Statement	","	97:20:3192:3192	3842547	5	True				
ANR	3842626	Statement	zval	97:22:3194:3197	3842547	6	True				
ANR	3842627	Statement	*	97:27:3199:3199	3842547	7	True				
ANR	3842628	Statement	*	97:28:3200:3200	3842547	8	True				
ANR	3842629	Statement	)	97:29:3201:3201	3842547	9	True				
ANR	3842630	ExpressionStatement		97:30:3202:3202	3842547	10	True				
ANR	3842631	ExpressionStatement	* param = param_ptr	98:2:3206:3224	3842547	11	True				
ANR	3842632	AssignmentExpression	* param = param_ptr		3842547	0		=			
ANR	3842633	UnaryOperationExpression	* param		3842547	0					
ANR	3842634	UnaryOperator	*		3842547	0					
ANR	3842635	Identifier	param		3842547	1					
ANR	3842636	Identifier	param_ptr		3842547	1					
ANR	3842637	ExpressionStatement	param_ptr ++	99:2:3228:3239	3842547	12	True				
ANR	3842638	PostIncDecOperationExpression	param_ptr ++		3842547	0					
ANR	3842639	Identifier	param_ptr		3842547	0					
ANR	3842640	IncDec	++		3842547	1					
ANR	3842641	ExpressionStatement	va_end ( ptr )	101:1:3245:3256	3842547	8	True				
ANR	3842642	CallExpression	va_end ( ptr )		3842547	0					
ANR	3842643	Callee	va_end		3842547	0					
ANR	3842644	Identifier	va_end		3842547	0					
ANR	3842645	ArgumentList	ptr		3842547	1					
ANR	3842646	Argument	ptr		3842547	0					
ANR	3842647	Identifier	ptr		3842547	0					
ANR	3842648	ReturnStatement	return SUCCESS ;	103:1:3260:3274	3842547	9	True				
ANR	3842649	Identifier	SUCCESS		3842547	0					
ANR	3842650	ReturnType	ZEND_API int		3842547	1					
ANR	3842651	Identifier	zend_get_parameters_ex		3842547	2					
ANR	3842652	ParameterList	int param_count		3842547	3					
ANR	3842653	Parameter	int param_count	82:36:2855:2869	3842547	0	True				
ANR	3842654	ParameterType	int		3842547	0					
ANR	3842655	Identifier	param_count		3842547	1					
ANR	3842656	CFGEntryNode	ENTRY		3842547		True				
ANR	3842657	CFGExitNode	EXIT		3842547		True				
ANR	3842658	Symbol	EG		3842547						
ANR	3842659	Symbol	SUCCESS		3842547						
ANR	3842660	Symbol	param_count		3842547						
ANR	3842661	Symbol	param		3842547						
ANR	3842662	Symbol	ZEND_CALL_ARG		3842547						
ANR	3842663	Symbol	param_ptr		3842547						
ANR	3842664	Symbol	current_execute_data		3842547						
ANR	3842665	Symbol	ZEND_CALL_NUM_ARGS		3842547						
ANR	3842666	Symbol	FAILURE		3842547						
ANR	3842667	Symbol	arg_count		3842547						
ANR	3842668	Symbol	ptr		3842547						
ANR	3842669	Symbol	* param		3842547						
ANR	3842670	Function	_zend_get_parameters_array_ex	107:0:3289:3716							
ANR	3842671	FunctionDef	"_zend_get_parameters_array_ex (int param_count , zval * argument_array)"		3842670	0					
ANR	3842672	CompoundStatement		108:0:3381:3716	3842670	0					
ANR	3842673	IdentifierDeclStatement	zval * param_ptr ;	109:1:3384:3399	3842670	0	True				
ANR	3842674	IdentifierDecl	* param_ptr		3842670	0					
ANR	3842675	IdentifierDeclType	zval *		3842670	0					
ANR	3842676	Identifier	param_ptr		3842670	1					
ANR	3842677	IdentifierDeclStatement	int arg_count ;	110:1:3402:3415	3842670	1	True				
ANR	3842678	IdentifierDecl	arg_count		3842670	0					
ANR	3842679	IdentifierDeclType	int		3842670	0					
ANR	3842680	Identifier	arg_count		3842670	1					
ANR	3842681	ExpressionStatement	"param_ptr = ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"	112:1:3419:3473	3842670	2	True				
ANR	3842682	AssignmentExpression	"param_ptr = ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"		3842670	0		=			
ANR	3842683	Identifier	param_ptr		3842670	0					
ANR	3842684	CallExpression	"ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"		3842670	1					
ANR	3842685	Callee	ZEND_CALL_ARG		3842670	0					
ANR	3842686	Identifier	ZEND_CALL_ARG		3842670	0					
ANR	3842687	ArgumentList	EG ( current_execute_data )		3842670	1					
ANR	3842688	Argument	EG ( current_execute_data )		3842670	0					
ANR	3842689	CallExpression	EG ( current_execute_data )		3842670	0					
ANR	3842690	Callee	EG		3842670	0					
ANR	3842691	Identifier	EG		3842670	0					
ANR	3842692	ArgumentList	current_execute_data		3842670	1					
ANR	3842693	Argument	current_execute_data		3842670	0					
ANR	3842694	Identifier	current_execute_data		3842670	0					
ANR	3842695	Argument	1		3842670	1					
ANR	3842696	PrimaryExpression	1		3842670	0					
ANR	3842697	ExpressionStatement	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )	113:1:3476:3532	3842670	3	True				
ANR	3842698	AssignmentExpression	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3842670	0		=			
ANR	3842699	Identifier	arg_count		3842670	0					
ANR	3842700	CallExpression	ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3842670	1					
ANR	3842701	Callee	ZEND_CALL_NUM_ARGS		3842670	0					
ANR	3842702	Identifier	ZEND_CALL_NUM_ARGS		3842670	0					
ANR	3842703	ArgumentList	EG ( current_execute_data )		3842670	1					
ANR	3842704	Argument	EG ( current_execute_data )		3842670	0					
ANR	3842705	CallExpression	EG ( current_execute_data )		3842670	0					
ANR	3842706	Callee	EG		3842670	0					
ANR	3842707	Identifier	EG		3842670	0					
ANR	3842708	ArgumentList	current_execute_data		3842670	1					
ANR	3842709	Argument	current_execute_data		3842670	0					
ANR	3842710	Identifier	current_execute_data		3842670	0					
ANR	3842711	IfStatement	if ( param_count > arg_count )		3842670	4					
ANR	3842712	Condition	param_count > arg_count	115:5:3540:3560	3842670	0	True				
ANR	3842713	RelationalExpression	param_count > arg_count		3842670	0		>			
ANR	3842714	Identifier	param_count		3842670	0					
ANR	3842715	Identifier	arg_count		3842670	1					
ANR	3842716	CompoundStatement		8:28:181:181	3842670	1					
ANR	3842717	ReturnStatement	return FAILURE ;	116:2:3567:3581	3842670	0	True				
ANR	3842718	Identifier	FAILURE		3842670	0					
ANR	3842719	WhileStatement	while ( param_count -- > 0 )		3842670	5					
ANR	3842720	Condition	param_count -- > 0	119:8:3595:3609	3842670	0	True				
ANR	3842721	RelationalExpression	param_count -- > 0		3842670	0		>			
ANR	3842722	PostIncDecOperationExpression	param_count --		3842670	0					
ANR	3842723	Identifier	param_count		3842670	0					
ANR	3842724	IncDec	--		3842670	1					
ANR	3842725	PrimaryExpression	0		3842670	1					
ANR	3842726	CompoundStatement		12:25:230:230	3842670	1					
ANR	3842727	ExpressionStatement	"ZVAL_COPY_VALUE ( argument_array , param_ptr )"	120:2:3616:3658	3842670	0	True				
ANR	3842728	CallExpression	"ZVAL_COPY_VALUE ( argument_array , param_ptr )"		3842670	0					
ANR	3842729	Callee	ZVAL_COPY_VALUE		3842670	0					
ANR	3842730	Identifier	ZVAL_COPY_VALUE		3842670	0					
ANR	3842731	ArgumentList	argument_array		3842670	1					
ANR	3842732	Argument	argument_array		3842670	0					
ANR	3842733	Identifier	argument_array		3842670	0					
ANR	3842734	Argument	param_ptr		3842670	1					
ANR	3842735	Identifier	param_ptr		3842670	0					
ANR	3842736	ExpressionStatement	argument_array ++	121:2:3662:3678	3842670	1	True				
ANR	3842737	PostIncDecOperationExpression	argument_array ++		3842670	0					
ANR	3842738	Identifier	argument_array		3842670	0					
ANR	3842739	IncDec	++		3842670	1					
ANR	3842740	ExpressionStatement	param_ptr ++	122:2:3682:3693	3842670	2	True				
ANR	3842741	PostIncDecOperationExpression	param_ptr ++		3842670	0					
ANR	3842742	Identifier	param_ptr		3842670	0					
ANR	3842743	IncDec	++		3842670	1					
ANR	3842744	ReturnStatement	return SUCCESS ;	125:1:3700:3714	3842670	6	True				
ANR	3842745	Identifier	SUCCESS		3842670	0					
ANR	3842746	ReturnType	ZEND_API int		3842670	1					
ANR	3842747	Identifier	_zend_get_parameters_array_ex		3842670	2					
ANR	3842748	ParameterList	"int param_count , zval * argument_array"		3842670	3					
ANR	3842749	Parameter	int param_count	107:43:3332:3346	3842670	0	True				
ANR	3842750	ParameterType	int		3842670	0					
ANR	3842751	Identifier	param_count		3842670	1					
ANR	3842752	Parameter	zval * argument_array	107:60:3349:3368	3842670	1	True				
ANR	3842753	ParameterType	zval *		3842670	0					
ANR	3842754	Identifier	argument_array		3842670	1					
ANR	3842755	CFGEntryNode	ENTRY		3842670		True				
ANR	3842756	CFGExitNode	EXIT		3842670		True				
ANR	3842757	Symbol	EG		3842670						
ANR	3842758	Symbol	SUCCESS		3842670						
ANR	3842759	Symbol	argument_array		3842670						
ANR	3842760	Symbol	param_count		3842670						
ANR	3842761	Symbol	ZEND_CALL_ARG		3842670						
ANR	3842762	Symbol	param_ptr		3842670						
ANR	3842763	Symbol	current_execute_data		3842670						
ANR	3842764	Symbol	ZEND_CALL_NUM_ARGS		3842670						
ANR	3842765	Symbol	FAILURE		3842670						
ANR	3842766	Symbol	arg_count		3842670						
ANR	3842767	Function	zend_copy_parameters_array	129:0:3729:4226							
ANR	3842768	FunctionDef	"zend_copy_parameters_array (int param_count , zval * argument_array)"		3842767	0					
ANR	3842769	CompoundStatement		130:0:3818:4226	3842767	0					
ANR	3842770	IdentifierDeclStatement	zval * param_ptr ;	131:1:3821:3836	3842767	0	True				
ANR	3842771	IdentifierDecl	* param_ptr		3842767	0					
ANR	3842772	IdentifierDeclType	zval *		3842767	0					
ANR	3842773	Identifier	param_ptr		3842767	1					
ANR	3842774	IdentifierDeclStatement	int arg_count ;	132:1:3839:3852	3842767	1	True				
ANR	3842775	IdentifierDecl	arg_count		3842767	0					
ANR	3842776	IdentifierDeclType	int		3842767	0					
ANR	3842777	Identifier	arg_count		3842767	1					
ANR	3842778	ExpressionStatement	"param_ptr = ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"	134:1:3856:3910	3842767	2	True				
ANR	3842779	AssignmentExpression	"param_ptr = ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"		3842767	0		=			
ANR	3842780	Identifier	param_ptr		3842767	0					
ANR	3842781	CallExpression	"ZEND_CALL_ARG ( EG ( current_execute_data ) , 1 )"		3842767	1					
ANR	3842782	Callee	ZEND_CALL_ARG		3842767	0					
ANR	3842783	Identifier	ZEND_CALL_ARG		3842767	0					
ANR	3842784	ArgumentList	EG ( current_execute_data )		3842767	1					
ANR	3842785	Argument	EG ( current_execute_data )		3842767	0					
ANR	3842786	CallExpression	EG ( current_execute_data )		3842767	0					
ANR	3842787	Callee	EG		3842767	0					
ANR	3842788	Identifier	EG		3842767	0					
ANR	3842789	ArgumentList	current_execute_data		3842767	1					
ANR	3842790	Argument	current_execute_data		3842767	0					
ANR	3842791	Identifier	current_execute_data		3842767	0					
ANR	3842792	Argument	1		3842767	1					
ANR	3842793	PrimaryExpression	1		3842767	0					
ANR	3842794	ExpressionStatement	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )	135:1:3913:3969	3842767	3	True				
ANR	3842795	AssignmentExpression	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3842767	0		=			
ANR	3842796	Identifier	arg_count		3842767	0					
ANR	3842797	CallExpression	ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3842767	1					
ANR	3842798	Callee	ZEND_CALL_NUM_ARGS		3842767	0					
ANR	3842799	Identifier	ZEND_CALL_NUM_ARGS		3842767	0					
ANR	3842800	ArgumentList	EG ( current_execute_data )		3842767	1					
ANR	3842801	Argument	EG ( current_execute_data )		3842767	0					
ANR	3842802	CallExpression	EG ( current_execute_data )		3842767	0					
ANR	3842803	Callee	EG		3842767	0					
ANR	3842804	Identifier	EG		3842767	0					
ANR	3842805	ArgumentList	current_execute_data		3842767	1					
ANR	3842806	Argument	current_execute_data		3842767	0					
ANR	3842807	Identifier	current_execute_data		3842767	0					
ANR	3842808	IfStatement	if ( param_count > arg_count )		3842767	4					
ANR	3842809	Condition	param_count > arg_count	137:5:3977:3997	3842767	0	True				
ANR	3842810	RelationalExpression	param_count > arg_count		3842767	0		>			
ANR	3842811	Identifier	param_count		3842767	0					
ANR	3842812	Identifier	arg_count		3842767	1					
ANR	3842813	CompoundStatement		8:28:181:181	3842767	1					
ANR	3842814	ReturnStatement	return FAILURE ;	138:2:4004:4018	3842767	0	True				
ANR	3842815	Identifier	FAILURE		3842767	0					
ANR	3842816	WhileStatement	while ( param_count -- > 0 )		3842767	5					
ANR	3842817	Condition	param_count -- > 0	141:8:4032:4046	3842767	0	True				
ANR	3842818	RelationalExpression	param_count -- > 0		3842767	0		>			
ANR	3842819	PostIncDecOperationExpression	param_count --		3842767	0					
ANR	3842820	Identifier	param_count		3842767	0					
ANR	3842821	IncDec	--		3842767	1					
ANR	3842822	PrimaryExpression	0		3842767	1					
ANR	3842823	CompoundStatement		12:25:230:230	3842767	1					
ANR	3842824	IfStatement	if ( Z_REFCOUNTED_P ( param_ptr ) )		3842767	0					
ANR	3842825	Condition	Z_REFCOUNTED_P ( param_ptr )	142:6:4057:4081	3842767	0	True				
ANR	3842826	CallExpression	Z_REFCOUNTED_P ( param_ptr )		3842767	0					
ANR	3842827	Callee	Z_REFCOUNTED_P		3842767	0					
ANR	3842828	Identifier	Z_REFCOUNTED_P		3842767	0					
ANR	3842829	ArgumentList	param_ptr		3842767	1					
ANR	3842830	Argument	param_ptr		3842767	0					
ANR	3842831	Identifier	param_ptr		3842767	0					
ANR	3842832	CompoundStatement		13:33:265:265	3842767	1					
ANR	3842833	ExpressionStatement	Z_ADDREF_P ( param_ptr )	143:3:4089:4110	3842767	0	True				
ANR	3842834	CallExpression	Z_ADDREF_P ( param_ptr )		3842767	0					
ANR	3842835	Callee	Z_ADDREF_P		3842767	0					
ANR	3842836	Identifier	Z_ADDREF_P		3842767	0					
ANR	3842837	ArgumentList	param_ptr		3842767	1					
ANR	3842838	Argument	param_ptr		3842767	0					
ANR	3842839	Identifier	param_ptr		3842767	0					
ANR	3842840	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( argument_array ) , param_ptr )"	145:2:4118:4188	3842767	1	True				
ANR	3842841	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( argument_array ) , param_ptr )"		3842767	0					
ANR	3842842	Callee	zend_hash_next_index_insert_new		3842767	0					
ANR	3842843	Identifier	zend_hash_next_index_insert_new		3842767	0					
ANR	3842844	ArgumentList	Z_ARRVAL_P ( argument_array )		3842767	1					
ANR	3842845	Argument	Z_ARRVAL_P ( argument_array )		3842767	0					
ANR	3842846	CallExpression	Z_ARRVAL_P ( argument_array )		3842767	0					
ANR	3842847	Callee	Z_ARRVAL_P		3842767	0					
ANR	3842848	Identifier	Z_ARRVAL_P		3842767	0					
ANR	3842849	ArgumentList	argument_array		3842767	1					
ANR	3842850	Argument	argument_array		3842767	0					
ANR	3842851	Identifier	argument_array		3842767	0					
ANR	3842852	Argument	param_ptr		3842767	1					
ANR	3842853	Identifier	param_ptr		3842767	0					
ANR	3842854	ExpressionStatement	param_ptr ++	146:2:4192:4203	3842767	2	True				
ANR	3842855	PostIncDecOperationExpression	param_ptr ++		3842767	0					
ANR	3842856	Identifier	param_ptr		3842767	0					
ANR	3842857	IncDec	++		3842767	1					
ANR	3842858	ReturnStatement	return SUCCESS ;	149:1:4210:4224	3842767	6	True				
ANR	3842859	Identifier	SUCCESS		3842767	0					
ANR	3842860	ReturnType	ZEND_API int		3842767	1					
ANR	3842861	Identifier	zend_copy_parameters_array		3842767	2					
ANR	3842862	ParameterList	"int param_count , zval * argument_array"		3842767	3					
ANR	3842863	Parameter	int param_count	129:40:3769:3783	3842767	0	True				
ANR	3842864	ParameterType	int		3842767	0					
ANR	3842865	Identifier	param_count		3842767	1					
ANR	3842866	Parameter	zval * argument_array	129:57:3786:3805	3842767	1	True				
ANR	3842867	ParameterType	zval *		3842767	0					
ANR	3842868	Identifier	argument_array		3842767	1					
ANR	3842869	CFGEntryNode	ENTRY		3842767		True				
ANR	3842870	CFGExitNode	EXIT		3842767		True				
ANR	3842871	Symbol	EG		3842767						
ANR	3842872	Symbol	SUCCESS		3842767						
ANR	3842873	Symbol	argument_array		3842767						
ANR	3842874	Symbol	param_count		3842767						
ANR	3842875	Symbol	ZEND_CALL_ARG		3842767						
ANR	3842876	Symbol	param_ptr		3842767						
ANR	3842877	Symbol	current_execute_data		3842767						
ANR	3842878	Symbol	ZEND_CALL_NUM_ARGS		3842767						
ANR	3842879	Symbol	Z_REFCOUNTED_P		3842767						
ANR	3842880	Symbol	Z_ARRVAL_P		3842767						
ANR	3842881	Symbol	FAILURE		3842767						
ANR	3842882	Symbol	arg_count		3842767						
ANR	3842883	Function	zend_wrong_param_count	153:0:4239:4524							
ANR	3842884	FunctionDef	zend_wrong_param_count ()		3842883	0					
ANR	3842885	CompoundStatement		154:0:4302:4524	3842883	0					
ANR	3842886	IdentifierDeclStatement	const char * space ;	155:1:4305:4322	3842883	0	True				
ANR	3842887	IdentifierDecl	* space		3842883	0					
ANR	3842888	IdentifierDeclType	const char *		3842883	0					
ANR	3842889	Identifier	space		3842883	1					
ANR	3842890	IdentifierDeclStatement	const char * class_name = get_active_class_name ( & space ) ;	156:1:4325:4379	3842883	1	True				
ANR	3842891	IdentifierDecl	* class_name = get_active_class_name ( & space )		3842883	0					
ANR	3842892	IdentifierDeclType	const char *		3842883	0					
ANR	3842893	Identifier	class_name		3842883	1					
ANR	3842894	AssignmentExpression	* class_name = get_active_class_name ( & space )		3842883	2		=			
ANR	3842895	Identifier	class_name		3842883	0					
ANR	3842896	CallExpression	get_active_class_name ( & space )		3842883	1					
ANR	3842897	Callee	get_active_class_name		3842883	0					
ANR	3842898	Identifier	get_active_class_name		3842883	0					
ANR	3842899	ArgumentList	& space		3842883	1					
ANR	3842900	Argument	& space		3842883	0					
ANR	3842901	UnaryOperationExpression	& space		3842883	0					
ANR	3842902	UnaryOperator	&		3842883	0					
ANR	3842903	Identifier	space		3842883	1					
ANR	3842904	ExpressionStatement	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""Wrong parameter count for %s%s%s()"" , class_name , space , get_active_function_name ( ) )"	158:1:4383:4522	3842883	2	True				
ANR	3842905	CallExpression	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""Wrong parameter count for %s%s%s()"" , class_name , space , get_active_function_name ( ) )"		3842883	0					
ANR	3842906	Callee	zend_internal_type_error		3842883	0					
ANR	3842907	Identifier	zend_internal_type_error		3842883	0					
ANR	3842908	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3842883	1					
ANR	3842909	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3842883	0					
ANR	3842910	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3842883	0					
ANR	3842911	Callee	ZEND_ARG_USES_STRICT_TYPES		3842883	0					
ANR	3842912	Identifier	ZEND_ARG_USES_STRICT_TYPES		3842883	0					
ANR	3842913	ArgumentList			3842883	1					
ANR	3842914	Argument	"""Wrong parameter count for %s%s%s()"""		3842883	1					
ANR	3842915	PrimaryExpression	"""Wrong parameter count for %s%s%s()"""		3842883	0					
ANR	3842916	Argument	class_name		3842883	2					
ANR	3842917	Identifier	class_name		3842883	0					
ANR	3842918	Argument	space		3842883	3					
ANR	3842919	Identifier	space		3842883	0					
ANR	3842920	Argument	get_active_function_name ( )		3842883	4					
ANR	3842921	CallExpression	get_active_function_name ( )		3842883	0					
ANR	3842922	Callee	get_active_function_name		3842883	0					
ANR	3842923	Identifier	get_active_function_name		3842883	0					
ANR	3842924	ArgumentList			3842883	1					
ANR	3842925	ReturnType	ZEND_API ZEND_COLD void		3842883	1					
ANR	3842926	Identifier	zend_wrong_param_count		3842883	2					
ANR	3842927	ParameterList			3842883	3					
ANR	3842928	CFGEntryNode	ENTRY		3842883		True				
ANR	3842929	CFGExitNode	EXIT		3842883		True				
ANR	3842930	Symbol	ZEND_ARG_USES_STRICT_TYPES		3842883						
ANR	3842931	Symbol	get_active_function_name		3842883						
ANR	3842932	Symbol	get_active_class_name		3842883						
ANR	3842933	Symbol	& space		3842883						
ANR	3842934	Symbol	class_name		3842883						
ANR	3842935	Symbol	space		3842883						
ANR	3842936	Function	zend_get_type_by_const	163:0:4574:5060							
ANR	3842937	FunctionDef	zend_get_type_by_const (int type)		3842936	0					
ANR	3842938	CompoundStatement		164:0:4632:5060	3842936	0					
ANR	3842939	SwitchStatement	switch ( type )		3842936	0					
ANR	3842940	Condition	type	165:8:4642:4645	3842936	0	True				
ANR	3842941	Identifier	type		3842936	0					
ANR	3842942	CompoundStatement		2:14:15:15	3842936	1					
ANR	3842943	Label	case IS_FALSE :	166:2:4652:4665	3842936	0	True				
ANR	3842944	Identifier	IS_FALSE		3842936	0					
ANR	3842945	Label	case IS_TRUE :	167:2:4669:4681	3842936	1	True				
ANR	3842946	Identifier	IS_TRUE		3842936	0					
ANR	3842947	Label	case _IS_BOOL :	168:2:4685:4698	3842936	2	True				
ANR	3842948	Identifier	_IS_BOOL		3842936	0					
ANR	3842949	ReturnStatement	"return ""boolean"" ;"	169:3:4703:4719	3842936	3	True				
ANR	3842950	PrimaryExpression	"""boolean"""		3842936	0					
ANR	3842951	Label	case IS_LONG :	170:2:4723:4735	3842936	4	True				
ANR	3842952	Identifier	IS_LONG		3842936	0					
ANR	3842953	ReturnStatement	"return ""integer"" ;"	171:3:4740:4756	3842936	5	True				
ANR	3842954	PrimaryExpression	"""integer"""		3842936	0					
ANR	3842955	Label	case IS_DOUBLE :	172:2:4760:4774	3842936	6	True				
ANR	3842956	Identifier	IS_DOUBLE		3842936	0					
ANR	3842957	ReturnStatement	"return ""float"" ;"	173:3:4779:4793	3842936	7	True				
ANR	3842958	PrimaryExpression	"""float"""		3842936	0					
ANR	3842959	Label	case IS_STRING :	174:2:4797:4811	3842936	8	True				
ANR	3842960	Identifier	IS_STRING		3842936	0					
ANR	3842961	ReturnStatement	"return ""string"" ;"	175:3:4816:4831	3842936	9	True				
ANR	3842962	PrimaryExpression	"""string"""		3842936	0					
ANR	3842963	Label	case IS_OBJECT :	176:2:4835:4849	3842936	10	True				
ANR	3842964	Identifier	IS_OBJECT		3842936	0					
ANR	3842965	ReturnStatement	"return ""object"" ;"	177:3:4854:4869	3842936	11	True				
ANR	3842966	PrimaryExpression	"""object"""		3842936	0					
ANR	3842967	Label	case IS_RESOURCE :	178:2:4873:4889	3842936	12	True				
ANR	3842968	Identifier	IS_RESOURCE		3842936	0					
ANR	3842969	ReturnStatement	"return ""resource"" ;"	179:3:4894:4911	3842936	13	True				
ANR	3842970	PrimaryExpression	"""resource"""		3842936	0					
ANR	3842971	Label	case IS_NULL :	180:2:4915:4927	3842936	14	True				
ANR	3842972	Identifier	IS_NULL		3842936	0					
ANR	3842973	ReturnStatement	"return ""null"" ;"	181:3:4932:4945	3842936	15	True				
ANR	3842974	PrimaryExpression	"""null"""		3842936	0					
ANR	3842975	Label	case IS_CALLABLE :	182:2:4949:4965	3842936	16	True				
ANR	3842976	Identifier	IS_CALLABLE		3842936	0					
ANR	3842977	ReturnStatement	"return ""callable"" ;"	183:3:4970:4987	3842936	17	True				
ANR	3842978	PrimaryExpression	"""callable"""		3842936	0					
ANR	3842979	Label	case IS_ARRAY :	184:2:4991:5004	3842936	18	True				
ANR	3842980	Identifier	IS_ARRAY		3842936	0					
ANR	3842981	ReturnStatement	"return ""array"" ;"	185:3:5009:5023	3842936	19	True				
ANR	3842982	PrimaryExpression	"""array"""		3842936	0					
ANR	3842983	Label	default :	186:2:5027:5034	3842936	20	True				
ANR	3842984	Identifier	default		3842936	0					
ANR	3842985	ReturnStatement	"return ""unknown"" ;"	187:3:5039:5055	3842936	21	True				
ANR	3842986	PrimaryExpression	"""unknown"""		3842936	0					
ANR	3842987	ReturnType	ZEND_API char *		3842936	1					
ANR	3842988	Identifier	zend_get_type_by_const		3842936	2					
ANR	3842989	ParameterList	int type		3842936	3					
ANR	3842990	Parameter	int type	163:38:4612:4619	3842936	0	True				
ANR	3842991	ParameterType	int		3842936	0					
ANR	3842992	Identifier	type		3842936	1					
ANR	3842993	CFGEntryNode	ENTRY		3842936		True				
ANR	3842994	CFGExitNode	EXIT		3842936		True				
ANR	3842995	Symbol	type		3842936						
ANR	3842996	Function	zend_zval_type_name	192:0:5073:5202							
ANR	3842997	FunctionDef	zend_zval_type_name (const zval * arg)		3842996	0					
ANR	3842998	CompoundStatement		193:0:5135:5202	3842996	0					
ANR	3842999	ExpressionStatement	ZVAL_DEREF ( arg )	194:1:5138:5153	3842996	0	True				
ANR	3843000	CallExpression	ZVAL_DEREF ( arg )		3842996	0					
ANR	3843001	Callee	ZVAL_DEREF		3842996	0					
ANR	3843002	Identifier	ZVAL_DEREF		3842996	0					
ANR	3843003	ArgumentList	arg		3842996	1					
ANR	3843004	Argument	arg		3842996	0					
ANR	3843005	Identifier	arg		3842996	0					
ANR	3843006	ReturnStatement	return zend_get_type_by_const ( Z_TYPE_P ( arg ) ) ;	195:1:5156:5200	3842996	1	True				
ANR	3843007	CallExpression	zend_get_type_by_const ( Z_TYPE_P ( arg ) )		3842996	0					
ANR	3843008	Callee	zend_get_type_by_const		3842996	0					
ANR	3843009	Identifier	zend_get_type_by_const		3842996	0					
ANR	3843010	ArgumentList	Z_TYPE_P ( arg )		3842996	1					
ANR	3843011	Argument	Z_TYPE_P ( arg )		3842996	0					
ANR	3843012	CallExpression	Z_TYPE_P ( arg )		3842996	0					
ANR	3843013	Callee	Z_TYPE_P		3842996	0					
ANR	3843014	Identifier	Z_TYPE_P		3842996	0					
ANR	3843015	ArgumentList	arg		3842996	1					
ANR	3843016	Argument	arg		3842996	0					
ANR	3843017	Identifier	arg		3842996	0					
ANR	3843018	ReturnType	ZEND_API char *		3842996	1					
ANR	3843019	Identifier	zend_zval_type_name		3842996	2					
ANR	3843020	ParameterList	const zval * arg		3842996	3					
ANR	3843021	Parameter	const zval * arg	192:35:5108:5122	3842996	0	True				
ANR	3843022	ParameterType	const zval *		3842996	0					
ANR	3843023	Identifier	arg		3842996	1					
ANR	3843024	CFGEntryNode	ENTRY		3842996		True				
ANR	3843025	CFGExitNode	EXIT		3842996		True				
ANR	3843026	Symbol	zend_get_type_by_const		3842996						
ANR	3843027	Symbol	arg		3842996						
ANR	3843028	Symbol	Z_TYPE_P		3842996						
ANR	3843029	Function	zend_wrong_paramers_count_error	200:0:5231:5982							
ANR	3843030	FunctionDef	"zend_wrong_paramers_count_error (int num_args , int min_num_args , int max_num_args)"		3843029	0					
ANR	3843031	CompoundStatement		201:0:5361:5982	3843029	0					
ANR	3843032	IdentifierDeclStatement	zend_function * active_function = EG ( current_execute_data ) -> func ;	202:1:5364:5427	3843029	0	True				
ANR	3843033	IdentifierDecl	* active_function = EG ( current_execute_data ) -> func		3843029	0					
ANR	3843034	IdentifierDeclType	zend_function *		3843029	0					
ANR	3843035	Identifier	active_function		3843029	1					
ANR	3843036	AssignmentExpression	* active_function = EG ( current_execute_data ) -> func		3843029	2		=			
ANR	3843037	Identifier	active_function		3843029	0					
ANR	3843038	PtrMemberAccess	EG ( current_execute_data ) -> func		3843029	1					
ANR	3843039	CallExpression	EG ( current_execute_data )		3843029	0					
ANR	3843040	Callee	EG		3843029	0					
ANR	3843041	Identifier	EG		3843029	0					
ANR	3843042	ArgumentList	current_execute_data		3843029	1					
ANR	3843043	Argument	current_execute_data		3843029	0					
ANR	3843044	Identifier	current_execute_data		3843029	0					
ANR	3843045	Identifier	func		3843029	1					
ANR	3843046	IdentifierDeclStatement	"const char * class_name = active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """" ;"	203:1:5430:5537	3843029	1	True				
ANR	3843047	IdentifierDecl	"* class_name = active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """""		3843029	0					
ANR	3843048	IdentifierDeclType	const char *		3843029	0					
ANR	3843049	Identifier	class_name		3843029	1					
ANR	3843050	AssignmentExpression	"* class_name = active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """""		3843029	2		=			
ANR	3843051	Identifier	class_name		3843029	0					
ANR	3843052	ConditionalExpression	"active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """""		3843029	1					
ANR	3843053	Condition	active_function -> common . scope		3843029	0					
ANR	3843054	MemberAccess	active_function -> common . scope		3843029	0					
ANR	3843055	PtrMemberAccess	active_function -> common		3843029	0					
ANR	3843056	Identifier	active_function		3843029	0					
ANR	3843057	Identifier	common		3843029	1					
ANR	3843058	Identifier	scope		3843029	1					
ANR	3843059	CallExpression	ZSTR_VAL ( active_function -> common . scope -> name )		3843029	1					
ANR	3843060	Callee	ZSTR_VAL		3843029	0					
ANR	3843061	Identifier	ZSTR_VAL		3843029	0					
ANR	3843062	ArgumentList	active_function -> common . scope -> name		3843029	1					
ANR	3843063	Argument	active_function -> common . scope -> name		3843029	0					
ANR	3843064	PtrMemberAccess	active_function -> common . scope -> name		3843029	0					
ANR	3843065	MemberAccess	active_function -> common . scope		3843029	0					
ANR	3843066	PtrMemberAccess	active_function -> common		3843029	0					
ANR	3843067	Identifier	active_function		3843029	0					
ANR	3843068	Identifier	common		3843029	1					
ANR	3843069	Identifier	scope		3843029	1					
ANR	3843070	Identifier	name		3843029	1					
ANR	3843071	PrimaryExpression	""""""		3843029	2					
ANR	3843072	ExpressionStatement	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects %s %d parameter%s, %d given"" , class_name , class_name [ 0 ] ? ""::"" : """" , ZSTR_VAL ( active_function -> common . function_name ) , min_num_args == max_num_args ? ""exactly"" : num_args < min_num_args ? ""at least"" : ""at most"" , num_args < min_num_args ? min_num_args : max_num_args , ( num_args < min_num_args ? min_num_args : max_num_args ) == 1 ? """" : ""s"" , num_args )"	205:1:5541:5980	3843029	2	True				
ANR	3843073	CallExpression	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects %s %d parameter%s, %d given"" , class_name , class_name [ 0 ] ? ""::"" : """" , ZSTR_VAL ( active_function -> common . function_name ) , min_num_args == max_num_args ? ""exactly"" : num_args < min_num_args ? ""at least"" : ""at most"" , num_args < min_num_args ? min_num_args : max_num_args , ( num_args < min_num_args ? min_num_args : max_num_args ) == 1 ? """" : ""s"" , num_args )"		3843029	0					
ANR	3843074	Callee	zend_internal_type_error		3843029	0					
ANR	3843075	Identifier	zend_internal_type_error		3843029	0					
ANR	3843076	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3843029	1					
ANR	3843077	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3843029	0					
ANR	3843078	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3843029	0					
ANR	3843079	Callee	ZEND_ARG_USES_STRICT_TYPES		3843029	0					
ANR	3843080	Identifier	ZEND_ARG_USES_STRICT_TYPES		3843029	0					
ANR	3843081	ArgumentList			3843029	1					
ANR	3843082	Argument	"""%s%s%s() expects %s %d parameter%s, %d given"""		3843029	1					
ANR	3843083	PrimaryExpression	"""%s%s%s() expects %s %d parameter%s, %d given"""		3843029	0					
ANR	3843084	Argument	class_name		3843029	2					
ANR	3843085	Identifier	class_name		3843029	0					
ANR	3843086	Argument	"class_name [ 0 ] ? ""::"" : """""		3843029	3					
ANR	3843087	ConditionalExpression	"class_name [ 0 ] ? ""::"" : """""		3843029	0					
ANR	3843088	Condition	class_name [ 0 ]		3843029	0					
ANR	3843089	ArrayIndexing	class_name [ 0 ]		3843029	0					
ANR	3843090	Identifier	class_name		3843029	0					
ANR	3843091	PrimaryExpression	0		3843029	1					
ANR	3843092	PrimaryExpression	"""::"""		3843029	1					
ANR	3843093	PrimaryExpression	""""""		3843029	2					
ANR	3843094	Argument	ZSTR_VAL ( active_function -> common . function_name )		3843029	4					
ANR	3843095	CallExpression	ZSTR_VAL ( active_function -> common . function_name )		3843029	0					
ANR	3843096	Callee	ZSTR_VAL		3843029	0					
ANR	3843097	Identifier	ZSTR_VAL		3843029	0					
ANR	3843098	ArgumentList	active_function -> common . function_name		3843029	1					
ANR	3843099	Argument	active_function -> common . function_name		3843029	0					
ANR	3843100	MemberAccess	active_function -> common . function_name		3843029	0					
ANR	3843101	PtrMemberAccess	active_function -> common		3843029	0					
ANR	3843102	Identifier	active_function		3843029	0					
ANR	3843103	Identifier	common		3843029	1					
ANR	3843104	Identifier	function_name		3843029	1					
ANR	3843105	Argument	"min_num_args == max_num_args ? ""exactly"" : num_args < min_num_args ? ""at least"" : ""at most"""		3843029	5					
ANR	3843106	ConditionalExpression	"min_num_args == max_num_args ? ""exactly"" : num_args < min_num_args ? ""at least"" : ""at most"""		3843029	0					
ANR	3843107	Condition	min_num_args == max_num_args		3843029	0					
ANR	3843108	EqualityExpression	min_num_args == max_num_args		3843029	0		==			
ANR	3843109	Identifier	min_num_args		3843029	0					
ANR	3843110	Identifier	max_num_args		3843029	1					
ANR	3843111	PrimaryExpression	"""exactly"""		3843029	1					
ANR	3843112	ConditionalExpression	"num_args < min_num_args ? ""at least"" : ""at most"""		3843029	2					
ANR	3843113	Condition	num_args < min_num_args		3843029	0					
ANR	3843114	RelationalExpression	num_args < min_num_args		3843029	0		<			
ANR	3843115	Identifier	num_args		3843029	0					
ANR	3843116	Identifier	min_num_args		3843029	1					
ANR	3843117	PrimaryExpression	"""at least"""		3843029	1					
ANR	3843118	PrimaryExpression	"""at most"""		3843029	2					
ANR	3843119	Argument	num_args < min_num_args ? min_num_args : max_num_args		3843029	6					
ANR	3843120	ConditionalExpression	num_args < min_num_args ? min_num_args : max_num_args		3843029	0					
ANR	3843121	Condition	num_args < min_num_args		3843029	0					
ANR	3843122	RelationalExpression	num_args < min_num_args		3843029	0		<			
ANR	3843123	Identifier	num_args		3843029	0					
ANR	3843124	Identifier	min_num_args		3843029	1					
ANR	3843125	Identifier	min_num_args		3843029	1					
ANR	3843126	Identifier	max_num_args		3843029	2					
ANR	3843127	Argument	"( num_args < min_num_args ? min_num_args : max_num_args ) == 1 ? """" : ""s"""		3843029	7					
ANR	3843128	ConditionalExpression	"( num_args < min_num_args ? min_num_args : max_num_args ) == 1 ? """" : ""s"""		3843029	0					
ANR	3843129	Condition	( num_args < min_num_args ? min_num_args : max_num_args ) == 1		3843029	0					
ANR	3843130	EqualityExpression	( num_args < min_num_args ? min_num_args : max_num_args ) == 1		3843029	0		==			
ANR	3843131	ConditionalExpression	num_args < min_num_args ? min_num_args : max_num_args		3843029	0					
ANR	3843132	Condition	num_args < min_num_args		3843029	0					
ANR	3843133	RelationalExpression	num_args < min_num_args		3843029	0		<			
ANR	3843134	Identifier	num_args		3843029	0					
ANR	3843135	Identifier	min_num_args		3843029	1					
ANR	3843136	Identifier	min_num_args		3843029	1					
ANR	3843137	Identifier	max_num_args		3843029	2					
ANR	3843138	PrimaryExpression	1		3843029	1					
ANR	3843139	PrimaryExpression	""""""		3843029	1					
ANR	3843140	PrimaryExpression	"""s"""		3843029	2					
ANR	3843141	Argument	num_args		3843029	8					
ANR	3843142	Identifier	num_args		3843029	0					
ANR	3843143	ReturnType	ZEND_API ZEND_COLD void ZEND_FASTCALL		3843029	1					
ANR	3843144	Identifier	zend_wrong_paramers_count_error		3843029	2					
ANR	3843145	ParameterList	"int num_args , int min_num_args , int max_num_args"		3843029	3					
ANR	3843146	Parameter	int num_args	200:70:5301:5312	3843029	0	True				
ANR	3843147	ParameterType	int		3843029	0					
ANR	3843148	Identifier	num_args		3843029	1					
ANR	3843149	Parameter	int min_num_args	200:84:5315:5330	3843029	1	True				
ANR	3843150	ParameterType	int		3843029	0					
ANR	3843151	Identifier	min_num_args		3843029	1					
ANR	3843152	Parameter	int max_num_args	200:102:5333:5348	3843029	2	True				
ANR	3843153	ParameterType	int		3843029	0					
ANR	3843154	Identifier	max_num_args		3843029	1					
ANR	3843155	CFGEntryNode	ENTRY		3843029		True				
ANR	3843156	CFGExitNode	EXIT		3843029		True				
ANR	3843157	Symbol	EG		3843029						
ANR	3843158	Symbol	* * active_function		3843029						
ANR	3843159	Symbol	ZEND_ARG_USES_STRICT_TYPES		3843029						
ANR	3843160	Symbol	* class_name		3843029						
ANR	3843161	Symbol	min_num_args		3843029						
ANR	3843162	Symbol	active_function -> common . scope -> name		3843029						
ANR	3843163	Symbol	EG ( current_execute_data ) -> func		3843029						
ANR	3843164	Symbol	active_function -> common . function_name		3843029						
ANR	3843165	Symbol	current_execute_data		3843029						
ANR	3843166	Symbol	* EG		3843029						
ANR	3843167	Symbol	* active_function -> common		3843029						
ANR	3843168	Symbol	active_function -> common		3843029						
ANR	3843169	Symbol	active_function		3843029						
ANR	3843170	Symbol	* active_function		3843029						
ANR	3843171	Symbol	active_function -> common . scope		3843029						
ANR	3843172	Symbol	ZSTR_VAL		3843029						
ANR	3843173	Symbol	max_num_args		3843029						
ANR	3843174	Symbol	num_args		3843029						
ANR	3843175	Symbol	* active_function -> common . scope		3843029						
ANR	3843176	Symbol	class_name		3843029						
ANR	3843177	Function	zend_wrong_paramer_type_error	216:0:5995:6526							
ANR	3843178	FunctionDef	"zend_wrong_paramer_type_error (int num , zend_expected_type expected_type , zval * arg)"		3843177	0					
ANR	3843179	CompoundStatement		217:0:6127:6526	3843177	0					
ANR	3843180	IdentifierDeclStatement	const char * space ;	218:1:6130:6147	3843177	0	True				
ANR	3843181	IdentifierDecl	* space		3843177	0					
ANR	3843182	IdentifierDeclType	const char *		3843177	0					
ANR	3843183	Identifier	space		3843177	1					
ANR	3843184	IdentifierDeclStatement	const char * class_name = get_active_class_name ( & space ) ;	219:1:6150:6204	3843177	1	True				
ANR	3843185	IdentifierDecl	* class_name = get_active_class_name ( & space )		3843177	0					
ANR	3843186	IdentifierDeclType	const char *		3843177	0					
ANR	3843187	Identifier	class_name		3843177	1					
ANR	3843188	AssignmentExpression	* class_name = get_active_class_name ( & space )		3843177	2		=			
ANR	3843189	Identifier	class_name		3843177	0					
ANR	3843190	CallExpression	get_active_class_name ( & space )		3843177	1					
ANR	3843191	Callee	get_active_class_name		3843177	0					
ANR	3843192	Identifier	get_active_class_name		3843177	0					
ANR	3843193	ArgumentList	& space		3843177	1					
ANR	3843194	Argument	& space		3843177	0					
ANR	3843195	UnaryOperationExpression	& space		3843177	0					
ANR	3843196	UnaryOperator	&		3843177	0					
ANR	3843197	Identifier	space		3843177	1					
ANR	3843198	Statement	static	220:1:6207:6212	3843177	2	True				
ANR	3843199	Statement	const	220:8:6214:6218	3843177	3	True				
ANR	3843200	Statement	char	220:14:6220:6223	3843177	4	True				
ANR	3843201	Statement	*	220:19:6225:6225	3843177	5	True				
ANR	3843202	Statement	const	220:21:6227:6231	3843177	6	True				
ANR	3843203	Statement	expected_error	220:27:6233:6246	3843177	7	True				
ANR	3843204	Statement	[	220:41:6247:6247	3843177	8	True				
ANR	3843205	Statement	]	220:42:6248:6248	3843177	9	True				
ANR	3843206	Statement	=	220:44:6250:6250	3843177	10	True				
ANR	3843207	CompoundStatement		4:46:124:124	3843177	11					
ANR	3843208	Statement	Z_EXPECTED_TYPES	221:2:6256:6271	3843177	0	True				
ANR	3843209	Statement	(	221:18:6272:6272	3843177	1	True				
ANR	3843210	Statement	Z_EXPECTED_TYPE_STR	221:19:6273:6291	3843177	2	True				
ANR	3843211	Statement	)	221:38:6292:6292	3843177	3	True				
ANR	3843212	Statement	NULL	222:2:6296:6299	3843177	4	True				
ANR	3843213	ExpressionStatement		223:2:6303:6303	3843177	12	True				
ANR	3843214	ExpressionStatement	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be %s, %s given"" , class_name , space , get_active_function_name ( ) , num , expected_error [ expected_type ] , zend_zval_type_name ( arg ) )"	225:1:6307:6524	3843177	13	True				
ANR	3843215	CallExpression	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be %s, %s given"" , class_name , space , get_active_function_name ( ) , num , expected_error [ expected_type ] , zend_zval_type_name ( arg ) )"		3843177	0					
ANR	3843216	Callee	zend_internal_type_error		3843177	0					
ANR	3843217	Identifier	zend_internal_type_error		3843177	0					
ANR	3843218	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3843177	1					
ANR	3843219	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3843177	0					
ANR	3843220	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3843177	0					
ANR	3843221	Callee	ZEND_ARG_USES_STRICT_TYPES		3843177	0					
ANR	3843222	Identifier	ZEND_ARG_USES_STRICT_TYPES		3843177	0					
ANR	3843223	ArgumentList			3843177	1					
ANR	3843224	Argument	"""%s%s%s() expects parameter %d to be %s, %s given"""		3843177	1					
ANR	3843225	PrimaryExpression	"""%s%s%s() expects parameter %d to be %s, %s given"""		3843177	0					
ANR	3843226	Argument	class_name		3843177	2					
ANR	3843227	Identifier	class_name		3843177	0					
ANR	3843228	Argument	space		3843177	3					
ANR	3843229	Identifier	space		3843177	0					
ANR	3843230	Argument	get_active_function_name ( )		3843177	4					
ANR	3843231	CallExpression	get_active_function_name ( )		3843177	0					
ANR	3843232	Callee	get_active_function_name		3843177	0					
ANR	3843233	Identifier	get_active_function_name		3843177	0					
ANR	3843234	ArgumentList			3843177	1					
ANR	3843235	Argument	num		3843177	5					
ANR	3843236	Identifier	num		3843177	0					
ANR	3843237	Argument	expected_error [ expected_type ]		3843177	6					
ANR	3843238	ArrayIndexing	expected_error [ expected_type ]		3843177	0					
ANR	3843239	Identifier	expected_error		3843177	0					
ANR	3843240	Identifier	expected_type		3843177	1					
ANR	3843241	Argument	zend_zval_type_name ( arg )		3843177	7					
ANR	3843242	CallExpression	zend_zval_type_name ( arg )		3843177	0					
ANR	3843243	Callee	zend_zval_type_name		3843177	0					
ANR	3843244	Identifier	zend_zval_type_name		3843177	0					
ANR	3843245	ArgumentList	arg		3843177	1					
ANR	3843246	Argument	arg		3843177	0					
ANR	3843247	Identifier	arg		3843177	0					
ANR	3843248	ReturnType	ZEND_API ZEND_COLD void ZEND_FASTCALL		3843177	1					
ANR	3843249	Identifier	zend_wrong_paramer_type_error		3843177	2					
ANR	3843250	ParameterList	"int num , zend_expected_type expected_type , zval * arg"		3843177	3					
ANR	3843251	Parameter	int num	216:68:6063:6069	3843177	0	True				
ANR	3843252	ParameterType	int		3843177	0					
ANR	3843253	Identifier	num		3843177	1					
ANR	3843254	Parameter	zend_expected_type expected_type	216:77:6072:6103	3843177	1	True				
ANR	3843255	ParameterType	zend_expected_type		3843177	0					
ANR	3843256	Identifier	expected_type		3843177	1					
ANR	3843257	Parameter	zval * arg	216:111:6106:6114	3843177	2	True				
ANR	3843258	ParameterType	zval *		3843177	0					
ANR	3843259	Identifier	arg		3843177	1					
ANR	3843260	CFGEntryNode	ENTRY		3843177		True				
ANR	3843261	CFGExitNode	EXIT		3843177		True				
ANR	3843262	Symbol	ZEND_ARG_USES_STRICT_TYPES		3843177						
ANR	3843263	Symbol	num		3843177						
ANR	3843264	Symbol	expected_type		3843177						
ANR	3843265	Symbol	get_active_function_name		3843177						
ANR	3843266	Symbol	* expected_type		3843177						
ANR	3843267	Symbol	get_active_class_name		3843177						
ANR	3843268	Symbol	zend_zval_type_name		3843177						
ANR	3843269	Symbol	space		3843177						
ANR	3843270	Symbol	expected_error		3843177						
ANR	3843271	Symbol	arg		3843177						
ANR	3843272	Symbol	& space		3843177						
ANR	3843273	Symbol	class_name		3843177						
ANR	3843274	Symbol	* expected_error		3843177						
ANR	3843275	Function	zend_wrong_paramer_class_error	230:0:6539:6925							
ANR	3843276	FunctionDef	"zend_wrong_paramer_class_error (int num , char * name , zval * arg)"		3843275	0					
ANR	3843277	CompoundStatement		231:0:6650:6925	3843275	0					
ANR	3843278	IdentifierDeclStatement	const char * space ;	232:1:6653:6670	3843275	0	True				
ANR	3843279	IdentifierDecl	* space		3843275	0					
ANR	3843280	IdentifierDeclType	const char *		3843275	0					
ANR	3843281	Identifier	space		3843275	1					
ANR	3843282	IdentifierDeclStatement	const char * class_name = get_active_class_name ( & space ) ;	233:1:6673:6727	3843275	1	True				
ANR	3843283	IdentifierDecl	* class_name = get_active_class_name ( & space )		3843275	0					
ANR	3843284	IdentifierDeclType	const char *		3843275	0					
ANR	3843285	Identifier	class_name		3843275	1					
ANR	3843286	AssignmentExpression	* class_name = get_active_class_name ( & space )		3843275	2		=			
ANR	3843287	Identifier	class_name		3843275	0					
ANR	3843288	CallExpression	get_active_class_name ( & space )		3843275	1					
ANR	3843289	Callee	get_active_class_name		3843275	0					
ANR	3843290	Identifier	get_active_class_name		3843275	0					
ANR	3843291	ArgumentList	& space		3843275	1					
ANR	3843292	Argument	& space		3843275	0					
ANR	3843293	UnaryOperationExpression	& space		3843275	0					
ANR	3843294	UnaryOperator	&		3843275	0					
ANR	3843295	Identifier	space		3843275	1					
ANR	3843296	ExpressionStatement	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be %s, %s given"" , class_name , space , get_active_function_name ( ) , num , name , zend_zval_type_name ( arg ) )"	235:1:6731:6923	3843275	2	True				
ANR	3843297	CallExpression	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be %s, %s given"" , class_name , space , get_active_function_name ( ) , num , name , zend_zval_type_name ( arg ) )"		3843275	0					
ANR	3843298	Callee	zend_internal_type_error		3843275	0					
ANR	3843299	Identifier	zend_internal_type_error		3843275	0					
ANR	3843300	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3843275	1					
ANR	3843301	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3843275	0					
ANR	3843302	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3843275	0					
ANR	3843303	Callee	ZEND_ARG_USES_STRICT_TYPES		3843275	0					
ANR	3843304	Identifier	ZEND_ARG_USES_STRICT_TYPES		3843275	0					
ANR	3843305	ArgumentList			3843275	1					
ANR	3843306	Argument	"""%s%s%s() expects parameter %d to be %s, %s given"""		3843275	1					
ANR	3843307	PrimaryExpression	"""%s%s%s() expects parameter %d to be %s, %s given"""		3843275	0					
ANR	3843308	Argument	class_name		3843275	2					
ANR	3843309	Identifier	class_name		3843275	0					
ANR	3843310	Argument	space		3843275	3					
ANR	3843311	Identifier	space		3843275	0					
ANR	3843312	Argument	get_active_function_name ( )		3843275	4					
ANR	3843313	CallExpression	get_active_function_name ( )		3843275	0					
ANR	3843314	Callee	get_active_function_name		3843275	0					
ANR	3843315	Identifier	get_active_function_name		3843275	0					
ANR	3843316	ArgumentList			3843275	1					
ANR	3843317	Argument	num		3843275	5					
ANR	3843318	Identifier	num		3843275	0					
ANR	3843319	Argument	name		3843275	6					
ANR	3843320	Identifier	name		3843275	0					
ANR	3843321	Argument	zend_zval_type_name ( arg )		3843275	7					
ANR	3843322	CallExpression	zend_zval_type_name ( arg )		3843275	0					
ANR	3843323	Callee	zend_zval_type_name		3843275	0					
ANR	3843324	Identifier	zend_zval_type_name		3843275	0					
ANR	3843325	ArgumentList	arg		3843275	1					
ANR	3843326	Argument	arg		3843275	0					
ANR	3843327	Identifier	arg		3843275	0					
ANR	3843328	ReturnType	ZEND_API ZEND_COLD void ZEND_FASTCALL		3843275	1					
ANR	3843329	Identifier	zend_wrong_paramer_class_error		3843275	2					
ANR	3843330	ParameterList	"int num , char * name , zval * arg"		3843275	3					
ANR	3843331	Parameter	int num	230:69:6608:6614	3843275	0	True				
ANR	3843332	ParameterType	int		3843275	0					
ANR	3843333	Identifier	num		3843275	1					
ANR	3843334	Parameter	char * name	230:78:6617:6626	3843275	1	True				
ANR	3843335	ParameterType	char *		3843275	0					
ANR	3843336	Identifier	name		3843275	1					
ANR	3843337	Parameter	zval * arg	230:90:6629:6637	3843275	2	True				
ANR	3843338	ParameterType	zval *		3843275	0					
ANR	3843339	Identifier	arg		3843275	1					
ANR	3843340	CFGEntryNode	ENTRY		3843275		True				
ANR	3843341	CFGExitNode	EXIT		3843275		True				
ANR	3843342	Symbol	ZEND_ARG_USES_STRICT_TYPES		3843275						
ANR	3843343	Symbol	num		3843275						
ANR	3843344	Symbol	arg		3843275						
ANR	3843345	Symbol	name		3843275						
ANR	3843346	Symbol	get_active_function_name		3843275						
ANR	3843347	Symbol	& space		3843275						
ANR	3843348	Symbol	get_active_class_name		3843275						
ANR	3843349	Symbol	zend_zval_type_name		3843275						
ANR	3843350	Symbol	class_name		3843275						
ANR	3843351	Symbol	space		3843275						
ANR	3843352	Function	zend_wrong_callback_error	240:0:6938:7709							
ANR	3843353	FunctionDef	"zend_wrong_callback_error (int severity , int num , char * error)"		3843352	0					
ANR	3843354	CompoundStatement		241:0:7048:7709	3843352	0					
ANR	3843355	IdentifierDeclStatement	const char * space ;	242:1:7051:7068	3843352	0	True				
ANR	3843356	IdentifierDecl	* space		3843352	0					
ANR	3843357	IdentifierDeclType	const char *		3843352	0					
ANR	3843358	Identifier	space		3843352	1					
ANR	3843359	IdentifierDeclStatement	const char * class_name = get_active_class_name ( & space ) ;	243:1:7071:7125	3843352	1	True				
ANR	3843360	IdentifierDecl	* class_name = get_active_class_name ( & space )		3843352	0					
ANR	3843361	IdentifierDeclType	const char *		3843352	0					
ANR	3843362	Identifier	class_name		3843352	1					
ANR	3843363	AssignmentExpression	* class_name = get_active_class_name ( & space )		3843352	2		=			
ANR	3843364	Identifier	class_name		3843352	0					
ANR	3843365	CallExpression	get_active_class_name ( & space )		3843352	1					
ANR	3843366	Callee	get_active_class_name		3843352	0					
ANR	3843367	Identifier	get_active_class_name		3843352	0					
ANR	3843368	ArgumentList	& space		3843352	1					
ANR	3843369	Argument	& space		3843352	0					
ANR	3843370	UnaryOperationExpression	& space		3843352	0					
ANR	3843371	UnaryOperator	&		3843352	0					
ANR	3843372	Identifier	space		3843352	1					
ANR	3843373	IfStatement	if ( severity == E_WARNING )		3843352	2					
ANR	3843374	Condition	severity == E_WARNING	245:5:7133:7153	3843352	0	True				
ANR	3843375	EqualityExpression	severity == E_WARNING		3843352	0		==			
ANR	3843376	Identifier	severity		3843352	0					
ANR	3843377	Identifier	E_WARNING		3843352	1					
ANR	3843378	CompoundStatement		5:28:107:107	3843352	1					
ANR	3843379	ExpressionStatement	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be a valid callback, %s"" , class_name , space , get_active_function_name ( ) , num , error )"	246:2:7160:7336	3843352	0	True				
ANR	3843380	CallExpression	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be a valid callback, %s"" , class_name , space , get_active_function_name ( ) , num , error )"		3843352	0					
ANR	3843381	Callee	zend_internal_type_error		3843352	0					
ANR	3843382	Identifier	zend_internal_type_error		3843352	0					
ANR	3843383	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3843352	1					
ANR	3843384	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3843352	0					
ANR	3843385	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3843352	0					
ANR	3843386	Callee	ZEND_ARG_USES_STRICT_TYPES		3843352	0					
ANR	3843387	Identifier	ZEND_ARG_USES_STRICT_TYPES		3843352	0					
ANR	3843388	ArgumentList			3843352	1					
ANR	3843389	Argument	"""%s%s%s() expects parameter %d to be a valid callback, %s"""		3843352	1					
ANR	3843390	PrimaryExpression	"""%s%s%s() expects parameter %d to be a valid callback, %s"""		3843352	0					
ANR	3843391	Argument	class_name		3843352	2					
ANR	3843392	Identifier	class_name		3843352	0					
ANR	3843393	Argument	space		3843352	3					
ANR	3843394	Identifier	space		3843352	0					
ANR	3843395	Argument	get_active_function_name ( )		3843352	4					
ANR	3843396	CallExpression	get_active_function_name ( )		3843352	0					
ANR	3843397	Callee	get_active_function_name		3843352	0					
ANR	3843398	Identifier	get_active_function_name		3843352	0					
ANR	3843399	ArgumentList			3843352	1					
ANR	3843400	Argument	num		3843352	5					
ANR	3843401	Identifier	num		3843352	0					
ANR	3843402	Argument	error		3843352	6					
ANR	3843403	Identifier	error		3843352	0					
ANR	3843404	ElseStatement	else		3843352	0					
ANR	3843405	IfStatement	if ( severity == E_ERROR )		3843352	0					
ANR	3843406	Condition	severity == E_ERROR	248:12:7350:7368	3843352	0	True				
ANR	3843407	EqualityExpression	severity == E_ERROR		3843352	0		==			
ANR	3843408	Identifier	severity		3843352	0					
ANR	3843409	Identifier	E_ERROR		3843352	1					
ANR	3843410	CompoundStatement		8:33:322:322	3843352	1					
ANR	3843411	ExpressionStatement	"zend_throw_error ( zend_ce_type_error , ""%s%s%s() expects parameter %d to be a valid callback, %s"" , class_name , space , get_active_function_name ( ) , num , error )"	249:2:7375:7533	3843352	0	True				
ANR	3843412	CallExpression	"zend_throw_error ( zend_ce_type_error , ""%s%s%s() expects parameter %d to be a valid callback, %s"" , class_name , space , get_active_function_name ( ) , num , error )"		3843352	0					
ANR	3843413	Callee	zend_throw_error		3843352	0					
ANR	3843414	Identifier	zend_throw_error		3843352	0					
ANR	3843415	ArgumentList	zend_ce_type_error		3843352	1					
ANR	3843416	Argument	zend_ce_type_error		3843352	0					
ANR	3843417	Identifier	zend_ce_type_error		3843352	0					
ANR	3843418	Argument	"""%s%s%s() expects parameter %d to be a valid callback, %s"""		3843352	1					
ANR	3843419	PrimaryExpression	"""%s%s%s() expects parameter %d to be a valid callback, %s"""		3843352	0					
ANR	3843420	Argument	class_name		3843352	2					
ANR	3843421	Identifier	class_name		3843352	0					
ANR	3843422	Argument	space		3843352	3					
ANR	3843423	Identifier	space		3843352	0					
ANR	3843424	Argument	get_active_function_name ( )		3843352	4					
ANR	3843425	CallExpression	get_active_function_name ( )		3843352	0					
ANR	3843426	Callee	get_active_function_name		3843352	0					
ANR	3843427	Identifier	get_active_function_name		3843352	0					
ANR	3843428	ArgumentList			3843352	1					
ANR	3843429	Argument	num		3843352	5					
ANR	3843430	Identifier	num		3843352	0					
ANR	3843431	Argument	error		3843352	6					
ANR	3843432	Identifier	error		3843352	0					
ANR	3843433	ElseStatement	else		3843352	0					
ANR	3843434	CompoundStatement		11:8:494:494	3843352	0					
ANR	3843435	ExpressionStatement	"zend_error ( severity , ""%s%s%s() expects parameter %d to be a valid callback, %s"" , class_name , space , get_active_function_name ( ) , num , error )"	252:2:7547:7689	3843352	0	True				
ANR	3843436	CallExpression	"zend_error ( severity , ""%s%s%s() expects parameter %d to be a valid callback, %s"" , class_name , space , get_active_function_name ( ) , num , error )"		3843352	0					
ANR	3843437	Callee	zend_error		3843352	0					
ANR	3843438	Identifier	zend_error		3843352	0					
ANR	3843439	ArgumentList	severity		3843352	1					
ANR	3843440	Argument	severity		3843352	0					
ANR	3843441	Identifier	severity		3843352	0					
ANR	3843442	Argument	"""%s%s%s() expects parameter %d to be a valid callback, %s"""		3843352	1					
ANR	3843443	PrimaryExpression	"""%s%s%s() expects parameter %d to be a valid callback, %s"""		3843352	0					
ANR	3843444	Argument	class_name		3843352	2					
ANR	3843445	Identifier	class_name		3843352	0					
ANR	3843446	Argument	space		3843352	3					
ANR	3843447	Identifier	space		3843352	0					
ANR	3843448	Argument	get_active_function_name ( )		3843352	4					
ANR	3843449	CallExpression	get_active_function_name ( )		3843352	0					
ANR	3843450	Callee	get_active_function_name		3843352	0					
ANR	3843451	Identifier	get_active_function_name		3843352	0					
ANR	3843452	ArgumentList			3843352	1					
ANR	3843453	Argument	num		3843352	5					
ANR	3843454	Identifier	num		3843352	0					
ANR	3843455	Argument	error		3843352	6					
ANR	3843456	Identifier	error		3843352	0					
ANR	3843457	ExpressionStatement	efree ( error )	255:1:7695:7707	3843352	3	True				
ANR	3843458	CallExpression	efree ( error )		3843352	0					
ANR	3843459	Callee	efree		3843352	0					
ANR	3843460	Identifier	efree		3843352	0					
ANR	3843461	ArgumentList	error		3843352	1					
ANR	3843462	Argument	error		3843352	0					
ANR	3843463	Identifier	error		3843352	0					
ANR	3843464	ReturnType	ZEND_API ZEND_COLD void ZEND_FASTCALL		3843352	1					
ANR	3843465	Identifier	zend_wrong_callback_error		3843352	2					
ANR	3843466	ParameterList	"int severity , int num , char * error"		3843352	3					
ANR	3843467	Parameter	int severity	240:64:7002:7013	3843352	0	True				
ANR	3843468	ParameterType	int		3843352	0					
ANR	3843469	Identifier	severity		3843352	1					
ANR	3843470	Parameter	int num	240:78:7016:7022	3843352	1	True				
ANR	3843471	ParameterType	int		3843352	0					
ANR	3843472	Identifier	num		3843352	1					
ANR	3843473	Parameter	char * error	240:87:7025:7035	3843352	2	True				
ANR	3843474	ParameterType	char *		3843352	0					
ANR	3843475	Identifier	error		3843352	1					
ANR	3843476	CFGEntryNode	ENTRY		3843352		True				
ANR	3843477	CFGExitNode	EXIT		3843352		True				
ANR	3843478	Symbol	severity		3843352						
ANR	3843479	Symbol	E_WARNING		3843352						
ANR	3843480	Symbol	ZEND_ARG_USES_STRICT_TYPES		3843352						
ANR	3843481	Symbol	E_ERROR		3843352						
ANR	3843482	Symbol	num		3843352						
ANR	3843483	Symbol	zend_ce_type_error		3843352						
ANR	3843484	Symbol	get_active_function_name		3843352						
ANR	3843485	Symbol	error		3843352						
ANR	3843486	Symbol	get_active_class_name		3843352						
ANR	3843487	Symbol	& space		3843352						
ANR	3843488	Symbol	class_name		3843352						
ANR	3843489	Symbol	space		3843352						
ANR	3843490	Function	zend_parse_arg_class	259:0:7722:8778							
ANR	3843491	FunctionDef	"zend_parse_arg_class (zval * arg , zend_class_entry * * pce , int num , int check_null)"		3843490	0					
ANR	3843492	CompoundStatement		260:0:7840:8778	3843490	0					
ANR	3843493	IdentifierDeclStatement	zend_class_entry * ce_base = * pce ;	261:1:7843:7875	3843490	0	True				
ANR	3843494	IdentifierDecl	* ce_base = * pce		3843490	0					
ANR	3843495	IdentifierDeclType	zend_class_entry *		3843490	0					
ANR	3843496	Identifier	ce_base		3843490	1					
ANR	3843497	AssignmentExpression	* ce_base = * pce		3843490	2		=			
ANR	3843498	Identifier	ce_base		3843490	0					
ANR	3843499	UnaryOperationExpression	* pce		3843490	1					
ANR	3843500	UnaryOperator	*		3843490	0					
ANR	3843501	Identifier	pce		3843490	1					
ANR	3843502	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		3843490	1					
ANR	3843503	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	263:5:7883:7920	3843490	0	True				
ANR	3843504	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		3843490	0		&&			
ANR	3843505	Identifier	check_null		3843490	0					
ANR	3843506	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3843490	1		==			
ANR	3843507	CallExpression	Z_TYPE_P ( arg )		3843490	0					
ANR	3843508	Callee	Z_TYPE_P		3843490	0					
ANR	3843509	Identifier	Z_TYPE_P		3843490	0					
ANR	3843510	ArgumentList	arg		3843490	1					
ANR	3843511	Argument	arg		3843490	0					
ANR	3843512	Identifier	arg		3843490	0					
ANR	3843513	Identifier	IS_NULL		3843490	1					
ANR	3843514	CompoundStatement		4:45:82:82	3843490	1					
ANR	3843515	ExpressionStatement	* pce = NULL	264:2:7927:7938	3843490	0	True				
ANR	3843516	AssignmentExpression	* pce = NULL		3843490	0		=			
ANR	3843517	UnaryOperationExpression	* pce		3843490	0					
ANR	3843518	UnaryOperator	*		3843490	0					
ANR	3843519	Identifier	pce		3843490	1					
ANR	3843520	Identifier	NULL		3843490	1					
ANR	3843521	ReturnStatement	return 1 ;	265:2:7942:7950	3843490	1	True				
ANR	3843522	PrimaryExpression	1		3843490	0					
ANR	3843523	ExpressionStatement	convert_to_string_ex ( arg )	267:1:7956:7981	3843490	2	True				
ANR	3843524	CallExpression	convert_to_string_ex ( arg )		3843490	0					
ANR	3843525	Callee	convert_to_string_ex		3843490	0					
ANR	3843526	Identifier	convert_to_string_ex		3843490	0					
ANR	3843527	ArgumentList	arg		3843490	1					
ANR	3843528	Argument	arg		3843490	0					
ANR	3843529	Identifier	arg		3843490	0					
ANR	3843530	ExpressionStatement	* pce = zend_lookup_class ( Z_STR_P ( arg ) )	268:1:7984:8022	3843490	3	True				
ANR	3843531	AssignmentExpression	* pce = zend_lookup_class ( Z_STR_P ( arg ) )		3843490	0		=			
ANR	3843532	UnaryOperationExpression	* pce		3843490	0					
ANR	3843533	UnaryOperator	*		3843490	0					
ANR	3843534	Identifier	pce		3843490	1					
ANR	3843535	CallExpression	zend_lookup_class ( Z_STR_P ( arg ) )		3843490	1					
ANR	3843536	Callee	zend_lookup_class		3843490	0					
ANR	3843537	Identifier	zend_lookup_class		3843490	0					
ANR	3843538	ArgumentList	Z_STR_P ( arg )		3843490	1					
ANR	3843539	Argument	Z_STR_P ( arg )		3843490	0					
ANR	3843540	CallExpression	Z_STR_P ( arg )		3843490	0					
ANR	3843541	Callee	Z_STR_P		3843490	0					
ANR	3843542	Identifier	Z_STR_P		3843490	0					
ANR	3843543	ArgumentList	arg		3843490	1					
ANR	3843544	Argument	arg		3843490	0					
ANR	3843545	Identifier	arg		3843490	0					
ANR	3843546	IfStatement	if ( ce_base )		3843490	4					
ANR	3843547	Condition	ce_base	269:5:8029:8035	3843490	0	True				
ANR	3843548	Identifier	ce_base		3843490	0					
ANR	3843549	CompoundStatement		10:14:197:197	3843490	1					
ANR	3843550	IfStatement	"if ( ( ! * pce || ! instanceof_function ( * pce , ce_base ) ) )"		3843490	0					
ANR	3843551	Condition	"! * pce || ! instanceof_function ( * pce , ce_base )"	270:6:8046:8091	3843490	0	True				
ANR	3843552	OrExpression	"! * pce || ! instanceof_function ( * pce , ce_base )"		3843490	0		||			
ANR	3843553	UnaryOperationExpression	! * pce		3843490	0					
ANR	3843554	UnaryOperator	!		3843490	0					
ANR	3843555	UnaryOperationExpression	* pce		3843490	1					
ANR	3843556	UnaryOperator	*		3843490	0					
ANR	3843557	Identifier	pce		3843490	1					
ANR	3843558	UnaryOperationExpression	"! instanceof_function ( * pce , ce_base )"		3843490	1					
ANR	3843559	UnaryOperator	!		3843490	0					
ANR	3843560	CallExpression	"instanceof_function ( * pce , ce_base )"		3843490	1					
ANR	3843561	Callee	instanceof_function		3843490	0					
ANR	3843562	Identifier	instanceof_function		3843490	0					
ANR	3843563	ArgumentList	* pce		3843490	1					
ANR	3843564	Argument	* pce		3843490	0					
ANR	3843565	UnaryOperationExpression	* pce		3843490	0					
ANR	3843566	UnaryOperator	*		3843490	0					
ANR	3843567	Identifier	pce		3843490	1					
ANR	3843568	Argument	ce_base		3843490	1					
ANR	3843569	Identifier	ce_base		3843490	0					
ANR	3843570	CompoundStatement		13:3:280:334	3843490	1					
ANR	3843571	IdentifierDeclStatement	const char * space ;	271:3:8099:8116	3843490	0	True				
ANR	3843572	IdentifierDecl	* space		3843490	0					
ANR	3843573	IdentifierDeclType	const char *		3843490	0					
ANR	3843574	Identifier	space		3843490	1					
ANR	3843575	IdentifierDeclStatement	const char * class_name = get_active_class_name ( & space ) ;	272:3:8121:8175	3843490	1	True				
ANR	3843576	IdentifierDecl	* class_name = get_active_class_name ( & space )		3843490	0					
ANR	3843577	IdentifierDeclType	const char *		3843490	0					
ANR	3843578	Identifier	class_name		3843490	1					
ANR	3843579	AssignmentExpression	* class_name = get_active_class_name ( & space )		3843490	2		=			
ANR	3843580	Identifier	class_name		3843490	0					
ANR	3843581	CallExpression	get_active_class_name ( & space )		3843490	1					
ANR	3843582	Callee	get_active_class_name		3843490	0					
ANR	3843583	Identifier	get_active_class_name		3843490	0					
ANR	3843584	ArgumentList	& space		3843490	1					
ANR	3843585	Argument	& space		3843490	0					
ANR	3843586	UnaryOperationExpression	& space		3843490	0					
ANR	3843587	UnaryOperator	&		3843490	0					
ANR	3843588	Identifier	space		3843490	1					
ANR	3843589	ExpressionStatement	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be a class name derived from %s, '%s' given"" , class_name , space , get_active_function_name ( ) , num , ZSTR_VAL ( ce_base -> name ) , Z_STRVAL_P ( arg ) )"	274:3:8181:8417	3843490	2	True				
ANR	3843590	CallExpression	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be a class name derived from %s, '%s' given"" , class_name , space , get_active_function_name ( ) , num , ZSTR_VAL ( ce_base -> name ) , Z_STRVAL_P ( arg ) )"		3843490	0					
ANR	3843591	Callee	zend_internal_type_error		3843490	0					
ANR	3843592	Identifier	zend_internal_type_error		3843490	0					
ANR	3843593	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3843490	1					
ANR	3843594	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3843490	0					
ANR	3843595	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3843490	0					
ANR	3843596	Callee	ZEND_ARG_USES_STRICT_TYPES		3843490	0					
ANR	3843597	Identifier	ZEND_ARG_USES_STRICT_TYPES		3843490	0					
ANR	3843598	ArgumentList			3843490	1					
ANR	3843599	Argument	"""%s%s%s() expects parameter %d to be a class name derived from %s, '%s' given"""		3843490	1					
ANR	3843600	PrimaryExpression	"""%s%s%s() expects parameter %d to be a class name derived from %s, '%s' given"""		3843490	0					
ANR	3843601	Argument	class_name		3843490	2					
ANR	3843602	Identifier	class_name		3843490	0					
ANR	3843603	Argument	space		3843490	3					
ANR	3843604	Identifier	space		3843490	0					
ANR	3843605	Argument	get_active_function_name ( )		3843490	4					
ANR	3843606	CallExpression	get_active_function_name ( )		3843490	0					
ANR	3843607	Callee	get_active_function_name		3843490	0					
ANR	3843608	Identifier	get_active_function_name		3843490	0					
ANR	3843609	ArgumentList			3843490	1					
ANR	3843610	Argument	num		3843490	5					
ANR	3843611	Identifier	num		3843490	0					
ANR	3843612	Argument	ZSTR_VAL ( ce_base -> name )		3843490	6					
ANR	3843613	CallExpression	ZSTR_VAL ( ce_base -> name )		3843490	0					
ANR	3843614	Callee	ZSTR_VAL		3843490	0					
ANR	3843615	Identifier	ZSTR_VAL		3843490	0					
ANR	3843616	ArgumentList	ce_base -> name		3843490	1					
ANR	3843617	Argument	ce_base -> name		3843490	0					
ANR	3843618	PtrMemberAccess	ce_base -> name		3843490	0					
ANR	3843619	Identifier	ce_base		3843490	0					
ANR	3843620	Identifier	name		3843490	1					
ANR	3843621	Argument	Z_STRVAL_P ( arg )		3843490	7					
ANR	3843622	CallExpression	Z_STRVAL_P ( arg )		3843490	0					
ANR	3843623	Callee	Z_STRVAL_P		3843490	0					
ANR	3843624	Identifier	Z_STRVAL_P		3843490	0					
ANR	3843625	ArgumentList	arg		3843490	1					
ANR	3843626	Argument	arg		3843490	0					
ANR	3843627	Identifier	arg		3843490	0					
ANR	3843628	ExpressionStatement	* pce = NULL	277:3:8422:8433	3843490	3	True				
ANR	3843629	AssignmentExpression	* pce = NULL		3843490	0		=			
ANR	3843630	UnaryOperationExpression	* pce		3843490	0					
ANR	3843631	UnaryOperator	*		3843490	0					
ANR	3843632	Identifier	pce		3843490	1					
ANR	3843633	Identifier	NULL		3843490	1					
ANR	3843634	ReturnStatement	return 0 ;	278:3:8438:8446	3843490	4	True				
ANR	3843635	PrimaryExpression	0		3843490	0					
ANR	3843636	IfStatement	if ( ! * pce )		3843490	5					
ANR	3843637	Condition	! * pce	281:5:8460:8464	3843490	0	True				
ANR	3843638	UnaryOperationExpression	! * pce		3843490	0					
ANR	3843639	UnaryOperator	!		3843490	0					
ANR	3843640	UnaryOperationExpression	* pce		3843490	1					
ANR	3843641	UnaryOperator	*		3843490	0					
ANR	3843642	Identifier	pce		3843490	1					
ANR	3843643	CompoundStatement		24:2:651:705	3843490	1					
ANR	3843644	IdentifierDeclStatement	const char * space ;	282:2:8471:8488	3843490	0	True				
ANR	3843645	IdentifierDecl	* space		3843490	0					
ANR	3843646	IdentifierDeclType	const char *		3843490	0					
ANR	3843647	Identifier	space		3843490	1					
ANR	3843648	IdentifierDeclStatement	const char * class_name = get_active_class_name ( & space ) ;	283:2:8492:8546	3843490	1	True				
ANR	3843649	IdentifierDecl	* class_name = get_active_class_name ( & space )		3843490	0					
ANR	3843650	IdentifierDeclType	const char *		3843490	0					
ANR	3843651	Identifier	class_name		3843490	1					
ANR	3843652	AssignmentExpression	* class_name = get_active_class_name ( & space )		3843490	2		=			
ANR	3843653	Identifier	class_name		3843490	0					
ANR	3843654	CallExpression	get_active_class_name ( & space )		3843490	1					
ANR	3843655	Callee	get_active_class_name		3843490	0					
ANR	3843656	Identifier	get_active_class_name		3843490	0					
ANR	3843657	ArgumentList	& space		3843490	1					
ANR	3843658	Argument	& space		3843490	0					
ANR	3843659	UnaryOperationExpression	& space		3843490	0					
ANR	3843660	UnaryOperator	&		3843490	0					
ANR	3843661	Identifier	space		3843490	1					
ANR	3843662	ExpressionStatement	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be a valid class name, '%s' given"" , class_name , space , get_active_function_name ( ) , num , Z_STRVAL_P ( arg ) )"	285:2:8551:8750	3843490	2	True				
ANR	3843663	CallExpression	"zend_internal_type_error ( ZEND_ARG_USES_STRICT_TYPES ( ) , ""%s%s%s() expects parameter %d to be a valid class name, '%s' given"" , class_name , space , get_active_function_name ( ) , num , Z_STRVAL_P ( arg ) )"		3843490	0					
ANR	3843664	Callee	zend_internal_type_error		3843490	0					
ANR	3843665	Identifier	zend_internal_type_error		3843490	0					
ANR	3843666	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3843490	1					
ANR	3843667	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3843490	0					
ANR	3843668	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3843490	0					
ANR	3843669	Callee	ZEND_ARG_USES_STRICT_TYPES		3843490	0					
ANR	3843670	Identifier	ZEND_ARG_USES_STRICT_TYPES		3843490	0					
ANR	3843671	ArgumentList			3843490	1					
ANR	3843672	Argument	"""%s%s%s() expects parameter %d to be a valid class name, '%s' given"""		3843490	1					
ANR	3843673	PrimaryExpression	"""%s%s%s() expects parameter %d to be a valid class name, '%s' given"""		3843490	0					
ANR	3843674	Argument	class_name		3843490	2					
ANR	3843675	Identifier	class_name		3843490	0					
ANR	3843676	Argument	space		3843490	3					
ANR	3843677	Identifier	space		3843490	0					
ANR	3843678	Argument	get_active_function_name ( )		3843490	4					
ANR	3843679	CallExpression	get_active_function_name ( )		3843490	0					
ANR	3843680	Callee	get_active_function_name		3843490	0					
ANR	3843681	Identifier	get_active_function_name		3843490	0					
ANR	3843682	ArgumentList			3843490	1					
ANR	3843683	Argument	num		3843490	5					
ANR	3843684	Identifier	num		3843490	0					
ANR	3843685	Argument	Z_STRVAL_P ( arg )		3843490	6					
ANR	3843686	CallExpression	Z_STRVAL_P ( arg )		3843490	0					
ANR	3843687	Callee	Z_STRVAL_P		3843490	0					
ANR	3843688	Identifier	Z_STRVAL_P		3843490	0					
ANR	3843689	ArgumentList	arg		3843490	1					
ANR	3843690	Argument	arg		3843490	0					
ANR	3843691	Identifier	arg		3843490	0					
ANR	3843692	ReturnStatement	return 0 ;	288:2:8754:8762	3843490	3	True				
ANR	3843693	PrimaryExpression	0		3843490	0					
ANR	3843694	ReturnStatement	return 1 ;	290:1:8768:8776	3843490	6	True				
ANR	3843695	PrimaryExpression	1		3843490	0					
ANR	3843696	ReturnType	ZEND_API int ZEND_FASTCALL		3843490	1					
ANR	3843697	Identifier	zend_parse_arg_class		3843490	2					
ANR	3843698	ParameterList	"zval * arg , zend_class_entry * * pce , int num , int check_null"		3843490	3					
ANR	3843699	Parameter	zval * arg	259:48:7770:7778	3843490	0	True				
ANR	3843700	ParameterType	zval *		3843490	0					
ANR	3843701	Identifier	arg		3843490	1					
ANR	3843702	Parameter	zend_class_entry * * pce	259:59:7781:7802	3843490	1	True				
ANR	3843703	ParameterType	zend_class_entry * *		3843490	0					
ANR	3843704	Identifier	pce		3843490	1					
ANR	3843705	Parameter	int num	259:83:7805:7811	3843490	2	True				
ANR	3843706	ParameterType	int		3843490	0					
ANR	3843707	Identifier	num		3843490	1					
ANR	3843708	Parameter	int check_null	259:92:7814:7827	3843490	3	True				
ANR	3843709	ParameterType	int		3843490	0					
ANR	3843710	Identifier	check_null		3843490	1					
ANR	3843711	CFGEntryNode	ENTRY		3843490		True				
ANR	3843712	CFGExitNode	EXIT		3843490		True				
ANR	3843713	Symbol	instanceof_function		3843490						
ANR	3843714	Symbol	ZEND_ARG_USES_STRICT_TYPES		3843490						
ANR	3843715	Symbol	NULL		3843490						
ANR	3843716	Symbol	ce_base		3843490						
ANR	3843717	Symbol	check_null		3843490						
ANR	3843718	Symbol	num		3843490						
ANR	3843719	Symbol	get_active_function_name		3843490						
ANR	3843720	Symbol	ce_base -> name		3843490						
ANR	3843721	Symbol	Z_TYPE_P		3843490						
ANR	3843722	Symbol	zend_lookup_class		3843490						
ANR	3843723	Symbol	get_active_class_name		3843490						
ANR	3843724	Symbol	Z_STRVAL_P		3843490						
ANR	3843725	Symbol	space		3843490						
ANR	3843726	Symbol	ZSTR_VAL		3843490						
ANR	3843727	Symbol	* ce_base		3843490						
ANR	3843728	Symbol	pce		3843490						
ANR	3843729	Symbol	IS_NULL		3843490						
ANR	3843730	Symbol	arg		3843490						
ANR	3843731	Symbol	Z_STR_P		3843490						
ANR	3843732	Symbol	* pce		3843490						
ANR	3843733	Symbol	& space		3843490						
ANR	3843734	Symbol	class_name		3843490						
ANR	3843735	Function	zend_parse_arg_bool_weak	295:0:8798:9000							
ANR	3843736	FunctionDef	"zend_parse_arg_bool_weak (zval * arg , zend_bool * dest)"		3843735	0					
ANR	3843737	CompoundStatement		296:0:8888:9000	3843735	0					
ANR	3843738	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) <= IS_STRING ) )		3843735	0					
ANR	3843739	Condition	EXPECTED ( Z_TYPE_P ( arg ) <= IS_STRING )	297:5:8895:8930	3843735	0	True				
ANR	3843740	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) <= IS_STRING )		3843735	0					
ANR	3843741	Callee	EXPECTED		3843735	0					
ANR	3843742	Identifier	EXPECTED		3843735	0					
ANR	3843743	ArgumentList	Z_TYPE_P ( arg ) <= IS_STRING		3843735	1					
ANR	3843744	Argument	Z_TYPE_P ( arg ) <= IS_STRING		3843735	0					
ANR	3843745	RelationalExpression	Z_TYPE_P ( arg ) <= IS_STRING		3843735	0		<=			
ANR	3843746	CallExpression	Z_TYPE_P ( arg )		3843735	0					
ANR	3843747	Callee	Z_TYPE_P		3843735	0					
ANR	3843748	Identifier	Z_TYPE_P		3843735	0					
ANR	3843749	ArgumentList	arg		3843735	1					
ANR	3843750	Argument	arg		3843735	0					
ANR	3843751	Identifier	arg		3843735	0					
ANR	3843752	Identifier	IS_STRING		3843735	1					
ANR	3843753	CompoundStatement		2:43:44:44	3843735	1					
ANR	3843754	ExpressionStatement	* dest = zend_is_true ( arg )	298:2:8937:8962	3843735	0	True				
ANR	3843755	AssignmentExpression	* dest = zend_is_true ( arg )		3843735	0		=			
ANR	3843756	UnaryOperationExpression	* dest		3843735	0					
ANR	3843757	UnaryOperator	*		3843735	0					
ANR	3843758	Identifier	dest		3843735	1					
ANR	3843759	CallExpression	zend_is_true ( arg )		3843735	1					
ANR	3843760	Callee	zend_is_true		3843735	0					
ANR	3843761	Identifier	zend_is_true		3843735	0					
ANR	3843762	ArgumentList	arg		3843735	1					
ANR	3843763	Argument	arg		3843735	0					
ANR	3843764	Identifier	arg		3843735	0					
ANR	3843765	ElseStatement	else		3843735	0					
ANR	3843766	CompoundStatement		4:8:83:83	3843735	0					
ANR	3843767	ReturnStatement	return 0 ;	300:2:8976:8984	3843735	0	True				
ANR	3843768	PrimaryExpression	0		3843735	0					
ANR	3843769	ReturnStatement	return 1 ;	302:1:8990:8998	3843735	1	True				
ANR	3843770	PrimaryExpression	1		3843735	0					
ANR	3843771	ReturnType	ZEND_API int ZEND_FASTCALL		3843735	1					
ANR	3843772	Identifier	zend_parse_arg_bool_weak		3843735	2					
ANR	3843773	ParameterList	"zval * arg , zend_bool * dest"		3843735	3					
ANR	3843774	Parameter	zval * arg	295:52:8850:8858	3843735	0	True				
ANR	3843775	ParameterType	zval *		3843735	0					
ANR	3843776	Identifier	arg		3843735	1					
ANR	3843777	Parameter	zend_bool * dest	295:63:8861:8875	3843735	1	True				
ANR	3843778	ParameterType	zend_bool *		3843735	0					
ANR	3843779	Identifier	dest		3843735	1					
ANR	3843780	CFGEntryNode	ENTRY		3843735		True				
ANR	3843781	CFGExitNode	EXIT		3843735		True				
ANR	3843782	Symbol	* dest		3843735						
ANR	3843783	Symbol	arg		3843735						
ANR	3843784	Symbol	IS_STRING		3843735						
ANR	3843785	Symbol	dest		3843735						
ANR	3843786	Symbol	Z_TYPE_P		3843735						
ANR	3843787	Symbol	zend_is_true		3843735						
ANR	3843788	Symbol	EXPECTED		3843735						
ANR	3843789	Function	zend_parse_arg_bool_slow	306:0:9013:9214							
ANR	3843790	FunctionDef	"zend_parse_arg_bool_slow (zval * arg , zend_bool * dest)"		3843789	0					
ANR	3843791	CompoundStatement		307:0:9103:9214	3843789	0					
ANR	3843792	IfStatement	if ( UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) ) )		3843789	0					
ANR	3843793	Condition	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )	308:5:9110:9149	3843789	0	True				
ANR	3843794	CallExpression	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )		3843789	0					
ANR	3843795	Callee	UNEXPECTED		3843789	0					
ANR	3843796	Identifier	UNEXPECTED		3843789	0					
ANR	3843797	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3843789	1					
ANR	3843798	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3843789	0					
ANR	3843799	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3843789	0					
ANR	3843800	Callee	ZEND_ARG_USES_STRICT_TYPES		3843789	0					
ANR	3843801	Identifier	ZEND_ARG_USES_STRICT_TYPES		3843789	0					
ANR	3843802	ArgumentList			3843789	1					
ANR	3843803	CompoundStatement		2:47:48:48	3843789	1					
ANR	3843804	ReturnStatement	return 0 ;	309:2:9156:9164	3843789	0	True				
ANR	3843805	PrimaryExpression	0		3843789	0					
ANR	3843806	ReturnStatement	"return zend_parse_arg_bool_weak ( arg , dest ) ;"	311:1:9170:9212	3843789	1	True				
ANR	3843807	CallExpression	"zend_parse_arg_bool_weak ( arg , dest )"		3843789	0					
ANR	3843808	Callee	zend_parse_arg_bool_weak		3843789	0					
ANR	3843809	Identifier	zend_parse_arg_bool_weak		3843789	0					
ANR	3843810	ArgumentList	arg		3843789	1					
ANR	3843811	Argument	arg		3843789	0					
ANR	3843812	Identifier	arg		3843789	0					
ANR	3843813	Argument	dest		3843789	1					
ANR	3843814	Identifier	dest		3843789	0					
ANR	3843815	ReturnType	ZEND_API int ZEND_FASTCALL		3843789	1					
ANR	3843816	Identifier	zend_parse_arg_bool_slow		3843789	2					
ANR	3843817	ParameterList	"zval * arg , zend_bool * dest"		3843789	3					
ANR	3843818	Parameter	zval * arg	306:52:9065:9073	3843789	0	True				
ANR	3843819	ParameterType	zval *		3843789	0					
ANR	3843820	Identifier	arg		3843789	1					
ANR	3843821	Parameter	zend_bool * dest	306:63:9076:9090	3843789	1	True				
ANR	3843822	ParameterType	zend_bool *		3843789	0					
ANR	3843823	Identifier	dest		3843789	1					
ANR	3843824	CFGEntryNode	ENTRY		3843789		True				
ANR	3843825	CFGExitNode	EXIT		3843789		True				
ANR	3843826	Symbol	UNEXPECTED		3843789						
ANR	3843827	Symbol	ZEND_ARG_USES_STRICT_TYPES		3843789						
ANR	3843828	Symbol	zend_parse_arg_bool_weak		3843789						
ANR	3843829	Symbol	arg		3843789						
ANR	3843830	Symbol	dest		3843789						
ANR	3843831	Function	zend_parse_arg_long_weak	315:0:9227:10128							
ANR	3843832	FunctionDef	"zend_parse_arg_long_weak (zval * arg , zend_long * dest)"		3843831	0					
ANR	3843833	CompoundStatement		316:0:9317:10128	3843831	0					
ANR	3843834	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE ) )		3843831	0					
ANR	3843835	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE )	317:5:9324:9359	3843831	0	True				
ANR	3843836	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE )		3843831	0					
ANR	3843837	Callee	EXPECTED		3843831	0					
ANR	3843838	Identifier	EXPECTED		3843831	0					
ANR	3843839	ArgumentList	Z_TYPE_P ( arg ) == IS_DOUBLE		3843831	1					
ANR	3843840	Argument	Z_TYPE_P ( arg ) == IS_DOUBLE		3843831	0					
ANR	3843841	EqualityExpression	Z_TYPE_P ( arg ) == IS_DOUBLE		3843831	0		==			
ANR	3843842	CallExpression	Z_TYPE_P ( arg )		3843831	0					
ANR	3843843	Callee	Z_TYPE_P		3843831	0					
ANR	3843844	Identifier	Z_TYPE_P		3843831	0					
ANR	3843845	ArgumentList	arg		3843831	1					
ANR	3843846	Argument	arg		3843831	0					
ANR	3843847	Identifier	arg		3843831	0					
ANR	3843848	Identifier	IS_DOUBLE		3843831	1					
ANR	3843849	CompoundStatement		2:43:44:44	3843831	1					
ANR	3843850	IfStatement	if ( UNEXPECTED ( zend_isnan ( Z_DVAL_P ( arg ) ) ) )		3843831	0					
ANR	3843851	Condition	UNEXPECTED ( zend_isnan ( Z_DVAL_P ( arg ) ) )	318:6:9370:9406	3843831	0	True				
ANR	3843852	CallExpression	UNEXPECTED ( zend_isnan ( Z_DVAL_P ( arg ) ) )		3843831	0					
ANR	3843853	Callee	UNEXPECTED		3843831	0					
ANR	3843854	Identifier	UNEXPECTED		3843831	0					
ANR	3843855	ArgumentList	zend_isnan ( Z_DVAL_P ( arg ) )		3843831	1					
ANR	3843856	Argument	zend_isnan ( Z_DVAL_P ( arg ) )		3843831	0					
ANR	3843857	CallExpression	zend_isnan ( Z_DVAL_P ( arg ) )		3843831	0					
ANR	3843858	Callee	zend_isnan		3843831	0					
ANR	3843859	Identifier	zend_isnan		3843831	0					
ANR	3843860	ArgumentList	Z_DVAL_P ( arg )		3843831	1					
ANR	3843861	Argument	Z_DVAL_P ( arg )		3843831	0					
ANR	3843862	CallExpression	Z_DVAL_P ( arg )		3843831	0					
ANR	3843863	Callee	Z_DVAL_P		3843831	0					
ANR	3843864	Identifier	Z_DVAL_P		3843831	0					
ANR	3843865	ArgumentList	arg		3843831	1					
ANR	3843866	Argument	arg		3843831	0					
ANR	3843867	Identifier	arg		3843831	0					
ANR	3843868	CompoundStatement		3:45:91:91	3843831	1					
ANR	3843869	ReturnStatement	return 0 ;	319:3:9414:9422	3843831	0	True				
ANR	3843870	PrimaryExpression	0		3843831	0					
ANR	3843871	IfStatement	if ( UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) ) ) )		3843831	1					
ANR	3843872	Condition	UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) ) )	321:6:9434:9482	3843831	0	True				
ANR	3843873	CallExpression	UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) ) )		3843831	0					
ANR	3843874	Callee	UNEXPECTED		3843831	0					
ANR	3843875	Identifier	UNEXPECTED		3843831	0					
ANR	3843876	ArgumentList	! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) )		3843831	1					
ANR	3843877	Argument	! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) )		3843831	0					
ANR	3843878	UnaryOperationExpression	! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) )		3843831	0					
ANR	3843879	UnaryOperator	!		3843831	0					
ANR	3843880	CallExpression	ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) )		3843831	1					
ANR	3843881	Callee	ZEND_DOUBLE_FITS_LONG		3843831	0					
ANR	3843882	Identifier	ZEND_DOUBLE_FITS_LONG		3843831	0					
ANR	3843883	ArgumentList	Z_DVAL_P ( arg )		3843831	1					
ANR	3843884	Argument	Z_DVAL_P ( arg )		3843831	0					
ANR	3843885	CallExpression	Z_DVAL_P ( arg )		3843831	0					
ANR	3843886	Callee	Z_DVAL_P		3843831	0					
ANR	3843887	Identifier	Z_DVAL_P		3843831	0					
ANR	3843888	ArgumentList	arg		3843831	1					
ANR	3843889	Argument	arg		3843831	0					
ANR	3843890	Identifier	arg		3843831	0					
ANR	3843891	CompoundStatement		6:57:167:167	3843831	1					
ANR	3843892	ReturnStatement	return 0 ;	322:3:9490:9498	3843831	0	True				
ANR	3843893	PrimaryExpression	0		3843831	0					
ANR	3843894	ElseStatement	else		3843831	0					
ANR	3843895	CompoundStatement		8:9:191:191	3843831	0					
ANR	3843896	ExpressionStatement	* dest = zend_dval_to_lval ( Z_DVAL_P ( arg ) )	324:3:9514:9554	3843831	0	True				
ANR	3843897	AssignmentExpression	* dest = zend_dval_to_lval ( Z_DVAL_P ( arg ) )		3843831	0		=			
ANR	3843898	UnaryOperationExpression	* dest		3843831	0					
ANR	3843899	UnaryOperator	*		3843831	0					
ANR	3843900	Identifier	dest		3843831	1					
ANR	3843901	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( arg ) )		3843831	1					
ANR	3843902	Callee	zend_dval_to_lval		3843831	0					
ANR	3843903	Identifier	zend_dval_to_lval		3843831	0					
ANR	3843904	ArgumentList	Z_DVAL_P ( arg )		3843831	1					
ANR	3843905	Argument	Z_DVAL_P ( arg )		3843831	0					
ANR	3843906	CallExpression	Z_DVAL_P ( arg )		3843831	0					
ANR	3843907	Callee	Z_DVAL_P		3843831	0					
ANR	3843908	Identifier	Z_DVAL_P		3843831	0					
ANR	3843909	ArgumentList	arg		3843831	1					
ANR	3843910	Argument	arg		3843831	0					
ANR	3843911	Identifier	arg		3843831	0					
ANR	3843912	ElseStatement	else		3843831	0					
ANR	3843913	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING ) )		3843831	0					
ANR	3843914	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )	326:12:9572:9607	3843831	0	True				
ANR	3843915	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )		3843831	0					
ANR	3843916	Callee	EXPECTED		3843831	0					
ANR	3843917	Identifier	EXPECTED		3843831	0					
ANR	3843918	ArgumentList	Z_TYPE_P ( arg ) == IS_STRING		3843831	1					
ANR	3843919	Argument	Z_TYPE_P ( arg ) == IS_STRING		3843831	0					
ANR	3843920	EqualityExpression	Z_TYPE_P ( arg ) == IS_STRING		3843831	0		==			
ANR	3843921	CallExpression	Z_TYPE_P ( arg )		3843831	0					
ANR	3843922	Callee	Z_TYPE_P		3843831	0					
ANR	3843923	Identifier	Z_TYPE_P		3843831	0					
ANR	3843924	ArgumentList	arg		3843831	1					
ANR	3843925	Argument	arg		3843831	0					
ANR	3843926	Identifier	arg		3843831	0					
ANR	3843927	Identifier	IS_STRING		3843831	1					
ANR	3843928	CompoundStatement		13:2:308:316	3843831	1					
ANR	3843929	IdentifierDeclStatement	double d ;	327:2:9614:9622	3843831	0	True				
ANR	3843930	IdentifierDecl	d		3843831	0					
ANR	3843931	IdentifierDeclType	double		3843831	0					
ANR	3843932	Identifier	d		3843831	1					
ANR	3843933	IdentifierDeclStatement	int type ;	328:2:9626:9634	3843831	1	True				
ANR	3843934	IdentifierDecl	type		3843831	0					
ANR	3843935	IdentifierDeclType	int		3843831	0					
ANR	3843936	Identifier	type		3843831	1					
ANR	3843937	IfStatement	"if ( UNEXPECTED ( ( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG ) )"		3843831	2					
ANR	3843938	Condition	"UNEXPECTED ( ( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG )"	330:6:9643:9721	3843831	0	True				
ANR	3843939	CallExpression	"UNEXPECTED ( ( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG )"		3843831	0					
ANR	3843940	Callee	UNEXPECTED		3843831	0					
ANR	3843941	Identifier	UNEXPECTED		3843831	0					
ANR	3843942	ArgumentList	"( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG"		3843831	1					
ANR	3843943	Argument	"( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG"		3843831	0					
ANR	3843944	EqualityExpression	"( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG"		3843831	0		!=			
ANR	3843945	AssignmentExpression	"type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d )"		3843831	0		=			
ANR	3843946	Identifier	type		3843831	0					
ANR	3843947	CallExpression	"is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d )"		3843831	1					
ANR	3843948	Callee	is_numeric_str_function		3843831	0					
ANR	3843949	Identifier	is_numeric_str_function		3843831	0					
ANR	3843950	ArgumentList	Z_STR_P ( arg )		3843831	1					
ANR	3843951	Argument	Z_STR_P ( arg )		3843831	0					
ANR	3843952	CallExpression	Z_STR_P ( arg )		3843831	0					
ANR	3843953	Callee	Z_STR_P		3843831	0					
ANR	3843954	Identifier	Z_STR_P		3843831	0					
ANR	3843955	ArgumentList	arg		3843831	1					
ANR	3843956	Argument	arg		3843831	0					
ANR	3843957	Identifier	arg		3843831	0					
ANR	3843958	Argument	dest		3843831	1					
ANR	3843959	Identifier	dest		3843831	0					
ANR	3843960	Argument	& d		3843831	2					
ANR	3843961	UnaryOperationExpression	& d		3843831	0					
ANR	3843962	UnaryOperator	&		3843831	0					
ANR	3843963	Identifier	d		3843831	1					
ANR	3843964	Identifier	IS_LONG		3843831	1					
ANR	3843965	CompoundStatement		15:87:406:406	3843831	1					
ANR	3843966	IfStatement	if ( EXPECTED ( type != 0 ) )		3843831	0					
ANR	3843967	Condition	EXPECTED ( type != 0 )	331:7:9733:9751	3843831	0	True				
ANR	3843968	CallExpression	EXPECTED ( type != 0 )		3843831	0					
ANR	3843969	Callee	EXPECTED		3843831	0					
ANR	3843970	Identifier	EXPECTED		3843831	0					
ANR	3843971	ArgumentList	type != 0		3843831	1					
ANR	3843972	Argument	type != 0		3843831	0					
ANR	3843973	EqualityExpression	type != 0		3843831	0		!=			
ANR	3843974	Identifier	type		3843831	0					
ANR	3843975	PrimaryExpression	0		3843831	1					
ANR	3843976	CompoundStatement		16:28:436:436	3843831	1					
ANR	3843977	IfStatement	if ( UNEXPECTED ( zend_isnan ( d ) ) )		3843831	0					
ANR	3843978	Condition	UNEXPECTED ( zend_isnan ( d ) )	332:8:9764:9788	3843831	0	True				
ANR	3843979	CallExpression	UNEXPECTED ( zend_isnan ( d ) )		3843831	0					
ANR	3843980	Callee	UNEXPECTED		3843831	0					
ANR	3843981	Identifier	UNEXPECTED		3843831	0					
ANR	3843982	ArgumentList	zend_isnan ( d )		3843831	1					
ANR	3843983	Argument	zend_isnan ( d )		3843831	0					
ANR	3843984	CallExpression	zend_isnan ( d )		3843831	0					
ANR	3843985	Callee	zend_isnan		3843831	0					
ANR	3843986	Identifier	zend_isnan		3843831	0					
ANR	3843987	ArgumentList	d		3843831	1					
ANR	3843988	Argument	d		3843831	0					
ANR	3843989	Identifier	d		3843831	0					
ANR	3843990	CompoundStatement		17:35:473:473	3843831	1					
ANR	3843991	ReturnStatement	return 0 ;	333:5:9798:9806	3843831	0	True				
ANR	3843992	PrimaryExpression	0		3843831	0					
ANR	3843993	IfStatement	if ( UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( d ) ) )		3843831	1					
ANR	3843994	Condition	UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( d ) )	335:8:9822:9858	3843831	0	True				
ANR	3843995	CallExpression	UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( d ) )		3843831	0					
ANR	3843996	Callee	UNEXPECTED		3843831	0					
ANR	3843997	Identifier	UNEXPECTED		3843831	0					
ANR	3843998	ArgumentList	! ZEND_DOUBLE_FITS_LONG ( d )		3843831	1					
ANR	3843999	Argument	! ZEND_DOUBLE_FITS_LONG ( d )		3843831	0					
ANR	3844000	UnaryOperationExpression	! ZEND_DOUBLE_FITS_LONG ( d )		3843831	0					
ANR	3844001	UnaryOperator	!		3843831	0					
ANR	3844002	CallExpression	ZEND_DOUBLE_FITS_LONG ( d )		3843831	1					
ANR	3844003	Callee	ZEND_DOUBLE_FITS_LONG		3843831	0					
ANR	3844004	Identifier	ZEND_DOUBLE_FITS_LONG		3843831	0					
ANR	3844005	ArgumentList	d		3843831	1					
ANR	3844006	Argument	d		3843831	0					
ANR	3844007	Identifier	d		3843831	0					
ANR	3844008	CompoundStatement		20:47:543:543	3843831	1					
ANR	3844009	ReturnStatement	return 0 ;	336:5:9868:9876	3843831	0	True				
ANR	3844010	PrimaryExpression	0		3843831	0					
ANR	3844011	ElseStatement	else		3843831	0					
ANR	3844012	CompoundStatement		22:11:571:571	3843831	0					
ANR	3844013	ExpressionStatement	* dest = zend_dval_to_lval ( d )	338:5:9896:9924	3843831	0	True				
ANR	3844014	AssignmentExpression	* dest = zend_dval_to_lval ( d )		3843831	0		=			
ANR	3844015	UnaryOperationExpression	* dest		3843831	0					
ANR	3844016	UnaryOperator	*		3843831	0					
ANR	3844017	Identifier	dest		3843831	1					
ANR	3844018	CallExpression	zend_dval_to_lval ( d )		3843831	1					
ANR	3844019	Callee	zend_dval_to_lval		3843831	0					
ANR	3844020	Identifier	zend_dval_to_lval		3843831	0					
ANR	3844021	ArgumentList	d		3843831	1					
ANR	3844022	Argument	d		3843831	0					
ANR	3844023	Identifier	d		3843831	0					
ANR	3844024	ElseStatement	else		3843831	0					
ANR	3844025	CompoundStatement		25:10:624:624	3843831	0					
ANR	3844026	ReturnStatement	return 0 ;	341:4:9948:9956	3843831	0	True				
ANR	3844027	PrimaryExpression	0		3843831	0					
ANR	3844028	ElseStatement	else		3843831	0					
ANR	3844029	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) < IS_TRUE ) )		3843831	0					
ANR	3844030	Condition	EXPECTED ( Z_TYPE_P ( arg ) < IS_TRUE )	344:12:9979:10011	3843831	0	True				
ANR	3844031	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) < IS_TRUE )		3843831	0					
ANR	3844032	Callee	EXPECTED		3843831	0					
ANR	3844033	Identifier	EXPECTED		3843831	0					
ANR	3844034	ArgumentList	Z_TYPE_P ( arg ) < IS_TRUE		3843831	1					
ANR	3844035	Argument	Z_TYPE_P ( arg ) < IS_TRUE		3843831	0					
ANR	3844036	RelationalExpression	Z_TYPE_P ( arg ) < IS_TRUE		3843831	0		<			
ANR	3844037	CallExpression	Z_TYPE_P ( arg )		3843831	0					
ANR	3844038	Callee	Z_TYPE_P		3843831	0					
ANR	3844039	Identifier	Z_TYPE_P		3843831	0					
ANR	3844040	ArgumentList	arg		3843831	1					
ANR	3844041	Argument	arg		3843831	0					
ANR	3844042	Identifier	arg		3843831	0					
ANR	3844043	Identifier	IS_TRUE		3843831	1					
ANR	3844044	CompoundStatement		29:47:696:696	3843831	1					
ANR	3844045	ExpressionStatement	* dest = 0	345:2:10018:10027	3843831	0	True				
ANR	3844046	AssignmentExpression	* dest = 0		3843831	0		=			
ANR	3844047	UnaryOperationExpression	* dest		3843831	0					
ANR	3844048	UnaryOperator	*		3843831	0					
ANR	3844049	Identifier	dest		3843831	1					
ANR	3844050	PrimaryExpression	0		3843831	1					
ANR	3844051	ElseStatement	else		3843831	0					
ANR	3844052	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE ) )		3843831	0					
ANR	3844053	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )	346:12:10041:10074	3843831	0	True				
ANR	3844054	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )		3843831	0					
ANR	3844055	Callee	EXPECTED		3843831	0					
ANR	3844056	Identifier	EXPECTED		3843831	0					
ANR	3844057	ArgumentList	Z_TYPE_P ( arg ) == IS_TRUE		3843831	1					
ANR	3844058	Argument	Z_TYPE_P ( arg ) == IS_TRUE		3843831	0					
ANR	3844059	EqualityExpression	Z_TYPE_P ( arg ) == IS_TRUE		3843831	0		==			
ANR	3844060	CallExpression	Z_TYPE_P ( arg )		3843831	0					
ANR	3844061	Callee	Z_TYPE_P		3843831	0					
ANR	3844062	Identifier	Z_TYPE_P		3843831	0					
ANR	3844063	ArgumentList	arg		3843831	1					
ANR	3844064	Argument	arg		3843831	0					
ANR	3844065	Identifier	arg		3843831	0					
ANR	3844066	Identifier	IS_TRUE		3843831	1					
ANR	3844067	CompoundStatement		31:48:759:759	3843831	1					
ANR	3844068	ExpressionStatement	* dest = 1	347:2:10081:10090	3843831	0	True				
ANR	3844069	AssignmentExpression	* dest = 1		3843831	0		=			
ANR	3844070	UnaryOperationExpression	* dest		3843831	0					
ANR	3844071	UnaryOperator	*		3843831	0					
ANR	3844072	Identifier	dest		3843831	1					
ANR	3844073	PrimaryExpression	1		3843831	1					
ANR	3844074	ElseStatement	else		3843831	0					
ANR	3844075	CompoundStatement		33:8:782:782	3843831	0					
ANR	3844076	ReturnStatement	return 0 ;	349:2:10104:10112	3843831	0	True				
ANR	3844077	PrimaryExpression	0		3843831	0					
ANR	3844078	ReturnStatement	return 1 ;	351:1:10118:10126	3843831	1	True				
ANR	3844079	PrimaryExpression	1		3843831	0					
ANR	3844080	ReturnType	ZEND_API int ZEND_FASTCALL		3843831	1					
ANR	3844081	Identifier	zend_parse_arg_long_weak		3843831	2					
ANR	3844082	ParameterList	"zval * arg , zend_long * dest"		3843831	3					
ANR	3844083	Parameter	zval * arg	315:52:9279:9287	3843831	0	True				
ANR	3844084	ParameterType	zval *		3843831	0					
ANR	3844085	Identifier	arg		3843831	1					
ANR	3844086	Parameter	zend_long * dest	315:63:9290:9304	3843831	1	True				
ANR	3844087	ParameterType	zend_long *		3843831	0					
ANR	3844088	Identifier	dest		3843831	1					
ANR	3844089	CFGEntryNode	ENTRY		3843831		True				
ANR	3844090	CFGExitNode	EXIT		3843831		True				
ANR	3844091	Symbol	d		3843831						
ANR	3844092	Symbol	* dest		3843831						
ANR	3844093	Symbol	IS_TRUE		3843831						
ANR	3844094	Symbol	& d		3843831						
ANR	3844095	Symbol	is_numeric_str_function		3843831						
ANR	3844096	Symbol	dest		3843831						
ANR	3844097	Symbol	Z_TYPE_P		3843831						
ANR	3844098	Symbol	type		3843831						
ANR	3844099	Symbol	Z_DVAL_P		3843831						
ANR	3844100	Symbol	UNEXPECTED		3843831						
ANR	3844101	Symbol	zend_dval_to_lval		3843831						
ANR	3844102	Symbol	IS_LONG		3843831						
ANR	3844103	Symbol	arg		3843831						
ANR	3844104	Symbol	IS_DOUBLE		3843831						
ANR	3844105	Symbol	zend_isnan		3843831						
ANR	3844106	Symbol	ZEND_DOUBLE_FITS_LONG		3843831						
ANR	3844107	Symbol	IS_STRING		3843831						
ANR	3844108	Symbol	Z_STR_P		3843831						
ANR	3844109	Symbol	EXPECTED		3843831						
ANR	3844110	Function	zend_parse_arg_long_slow	355:0:10141:10342							
ANR	3844111	FunctionDef	"zend_parse_arg_long_slow (zval * arg , zend_long * dest)"		3844110	0					
ANR	3844112	CompoundStatement		356:0:10231:10342	3844110	0					
ANR	3844113	IfStatement	if ( UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) ) )		3844110	0					
ANR	3844114	Condition	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )	357:5:10238:10277	3844110	0	True				
ANR	3844115	CallExpression	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )		3844110	0					
ANR	3844116	Callee	UNEXPECTED		3844110	0					
ANR	3844117	Identifier	UNEXPECTED		3844110	0					
ANR	3844118	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3844110	1					
ANR	3844119	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3844110	0					
ANR	3844120	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3844110	0					
ANR	3844121	Callee	ZEND_ARG_USES_STRICT_TYPES		3844110	0					
ANR	3844122	Identifier	ZEND_ARG_USES_STRICT_TYPES		3844110	0					
ANR	3844123	ArgumentList			3844110	1					
ANR	3844124	CompoundStatement		2:47:48:48	3844110	1					
ANR	3844125	ReturnStatement	return 0 ;	358:2:10284:10292	3844110	0	True				
ANR	3844126	PrimaryExpression	0		3844110	0					
ANR	3844127	ReturnStatement	"return zend_parse_arg_long_weak ( arg , dest ) ;"	360:1:10298:10340	3844110	1	True				
ANR	3844128	CallExpression	"zend_parse_arg_long_weak ( arg , dest )"		3844110	0					
ANR	3844129	Callee	zend_parse_arg_long_weak		3844110	0					
ANR	3844130	Identifier	zend_parse_arg_long_weak		3844110	0					
ANR	3844131	ArgumentList	arg		3844110	1					
ANR	3844132	Argument	arg		3844110	0					
ANR	3844133	Identifier	arg		3844110	0					
ANR	3844134	Argument	dest		3844110	1					
ANR	3844135	Identifier	dest		3844110	0					
ANR	3844136	ReturnType	ZEND_API int ZEND_FASTCALL		3844110	1					
ANR	3844137	Identifier	zend_parse_arg_long_slow		3844110	2					
ANR	3844138	ParameterList	"zval * arg , zend_long * dest"		3844110	3					
ANR	3844139	Parameter	zval * arg	355:52:10193:10201	3844110	0	True				
ANR	3844140	ParameterType	zval *		3844110	0					
ANR	3844141	Identifier	arg		3844110	1					
ANR	3844142	Parameter	zend_long * dest	355:63:10204:10218	3844110	1	True				
ANR	3844143	ParameterType	zend_long *		3844110	0					
ANR	3844144	Identifier	dest		3844110	1					
ANR	3844145	CFGEntryNode	ENTRY		3844110		True				
ANR	3844146	CFGExitNode	EXIT		3844110		True				
ANR	3844147	Symbol	UNEXPECTED		3844110						
ANR	3844148	Symbol	ZEND_ARG_USES_STRICT_TYPES		3844110						
ANR	3844149	Symbol	zend_parse_arg_long_weak		3844110						
ANR	3844150	Symbol	arg		3844110						
ANR	3844151	Symbol	dest		3844110						
ANR	3844152	Function	zend_parse_arg_long_cap_weak	364:0:10355:11350							
ANR	3844153	FunctionDef	"zend_parse_arg_long_cap_weak (zval * arg , zend_long * dest)"		3844152	0					
ANR	3844154	CompoundStatement		365:0:10449:11350	3844152	0					
ANR	3844155	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE ) )		3844152	0					
ANR	3844156	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE )	366:5:10456:10491	3844152	0	True				
ANR	3844157	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE )		3844152	0					
ANR	3844158	Callee	EXPECTED		3844152	0					
ANR	3844159	Identifier	EXPECTED		3844152	0					
ANR	3844160	ArgumentList	Z_TYPE_P ( arg ) == IS_DOUBLE		3844152	1					
ANR	3844161	Argument	Z_TYPE_P ( arg ) == IS_DOUBLE		3844152	0					
ANR	3844162	EqualityExpression	Z_TYPE_P ( arg ) == IS_DOUBLE		3844152	0		==			
ANR	3844163	CallExpression	Z_TYPE_P ( arg )		3844152	0					
ANR	3844164	Callee	Z_TYPE_P		3844152	0					
ANR	3844165	Identifier	Z_TYPE_P		3844152	0					
ANR	3844166	ArgumentList	arg		3844152	1					
ANR	3844167	Argument	arg		3844152	0					
ANR	3844168	Identifier	arg		3844152	0					
ANR	3844169	Identifier	IS_DOUBLE		3844152	1					
ANR	3844170	CompoundStatement		2:43:44:44	3844152	1					
ANR	3844171	IfStatement	if ( UNEXPECTED ( zend_isnan ( Z_DVAL_P ( arg ) ) ) )		3844152	0					
ANR	3844172	Condition	UNEXPECTED ( zend_isnan ( Z_DVAL_P ( arg ) ) )	367:6:10502:10538	3844152	0	True				
ANR	3844173	CallExpression	UNEXPECTED ( zend_isnan ( Z_DVAL_P ( arg ) ) )		3844152	0					
ANR	3844174	Callee	UNEXPECTED		3844152	0					
ANR	3844175	Identifier	UNEXPECTED		3844152	0					
ANR	3844176	ArgumentList	zend_isnan ( Z_DVAL_P ( arg ) )		3844152	1					
ANR	3844177	Argument	zend_isnan ( Z_DVAL_P ( arg ) )		3844152	0					
ANR	3844178	CallExpression	zend_isnan ( Z_DVAL_P ( arg ) )		3844152	0					
ANR	3844179	Callee	zend_isnan		3844152	0					
ANR	3844180	Identifier	zend_isnan		3844152	0					
ANR	3844181	ArgumentList	Z_DVAL_P ( arg )		3844152	1					
ANR	3844182	Argument	Z_DVAL_P ( arg )		3844152	0					
ANR	3844183	CallExpression	Z_DVAL_P ( arg )		3844152	0					
ANR	3844184	Callee	Z_DVAL_P		3844152	0					
ANR	3844185	Identifier	Z_DVAL_P		3844152	0					
ANR	3844186	ArgumentList	arg		3844152	1					
ANR	3844187	Argument	arg		3844152	0					
ANR	3844188	Identifier	arg		3844152	0					
ANR	3844189	CompoundStatement		3:45:91:91	3844152	1					
ANR	3844190	ReturnStatement	return 0 ;	368:3:10546:10554	3844152	0	True				
ANR	3844191	PrimaryExpression	0		3844152	0					
ANR	3844192	IfStatement	if ( UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) ) ) )		3844152	1					
ANR	3844193	Condition	UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) ) )	370:6:10566:10614	3844152	0	True				
ANR	3844194	CallExpression	UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) ) )		3844152	0					
ANR	3844195	Callee	UNEXPECTED		3844152	0					
ANR	3844196	Identifier	UNEXPECTED		3844152	0					
ANR	3844197	ArgumentList	! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) )		3844152	1					
ANR	3844198	Argument	! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) )		3844152	0					
ANR	3844199	UnaryOperationExpression	! ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) )		3844152	0					
ANR	3844200	UnaryOperator	!		3844152	0					
ANR	3844201	CallExpression	ZEND_DOUBLE_FITS_LONG ( Z_DVAL_P ( arg ) )		3844152	1					
ANR	3844202	Callee	ZEND_DOUBLE_FITS_LONG		3844152	0					
ANR	3844203	Identifier	ZEND_DOUBLE_FITS_LONG		3844152	0					
ANR	3844204	ArgumentList	Z_DVAL_P ( arg )		3844152	1					
ANR	3844205	Argument	Z_DVAL_P ( arg )		3844152	0					
ANR	3844206	CallExpression	Z_DVAL_P ( arg )		3844152	0					
ANR	3844207	Callee	Z_DVAL_P		3844152	0					
ANR	3844208	Identifier	Z_DVAL_P		3844152	0					
ANR	3844209	ArgumentList	arg		3844152	1					
ANR	3844210	Argument	arg		3844152	0					
ANR	3844211	Identifier	arg		3844152	0					
ANR	3844212	CompoundStatement		6:57:167:167	3844152	1					
ANR	3844213	ExpressionStatement	* dest = ( Z_DVAL_P ( arg ) > 0 ) ? ZEND_LONG_MAX : ZEND_LONG_MIN	371:3:10622:10681	3844152	0	True				
ANR	3844214	AssignmentExpression	* dest = ( Z_DVAL_P ( arg ) > 0 ) ? ZEND_LONG_MAX : ZEND_LONG_MIN		3844152	0		=			
ANR	3844215	UnaryOperationExpression	* dest		3844152	0					
ANR	3844216	UnaryOperator	*		3844152	0					
ANR	3844217	Identifier	dest		3844152	1					
ANR	3844218	ConditionalExpression	( Z_DVAL_P ( arg ) > 0 ) ? ZEND_LONG_MAX : ZEND_LONG_MIN		3844152	1					
ANR	3844219	Condition	Z_DVAL_P ( arg ) > 0		3844152	0					
ANR	3844220	RelationalExpression	Z_DVAL_P ( arg ) > 0		3844152	0		>			
ANR	3844221	CallExpression	Z_DVAL_P ( arg )		3844152	0					
ANR	3844222	Callee	Z_DVAL_P		3844152	0					
ANR	3844223	Identifier	Z_DVAL_P		3844152	0					
ANR	3844224	ArgumentList	arg		3844152	1					
ANR	3844225	Argument	arg		3844152	0					
ANR	3844226	Identifier	arg		3844152	0					
ANR	3844227	PrimaryExpression	0		3844152	1					
ANR	3844228	Identifier	ZEND_LONG_MAX		3844152	1					
ANR	3844229	Identifier	ZEND_LONG_MIN		3844152	2					
ANR	3844230	ElseStatement	else		3844152	0					
ANR	3844231	CompoundStatement		8:9:242:242	3844152	0					
ANR	3844232	ExpressionStatement	* dest = zend_dval_to_lval ( Z_DVAL_P ( arg ) )	373:3:10697:10737	3844152	0	True				
ANR	3844233	AssignmentExpression	* dest = zend_dval_to_lval ( Z_DVAL_P ( arg ) )		3844152	0		=			
ANR	3844234	UnaryOperationExpression	* dest		3844152	0					
ANR	3844235	UnaryOperator	*		3844152	0					
ANR	3844236	Identifier	dest		3844152	1					
ANR	3844237	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( arg ) )		3844152	1					
ANR	3844238	Callee	zend_dval_to_lval		3844152	0					
ANR	3844239	Identifier	zend_dval_to_lval		3844152	0					
ANR	3844240	ArgumentList	Z_DVAL_P ( arg )		3844152	1					
ANR	3844241	Argument	Z_DVAL_P ( arg )		3844152	0					
ANR	3844242	CallExpression	Z_DVAL_P ( arg )		3844152	0					
ANR	3844243	Callee	Z_DVAL_P		3844152	0					
ANR	3844244	Identifier	Z_DVAL_P		3844152	0					
ANR	3844245	ArgumentList	arg		3844152	1					
ANR	3844246	Argument	arg		3844152	0					
ANR	3844247	Identifier	arg		3844152	0					
ANR	3844248	ElseStatement	else		3844152	0					
ANR	3844249	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING ) )		3844152	0					
ANR	3844250	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )	375:12:10755:10790	3844152	0	True				
ANR	3844251	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )		3844152	0					
ANR	3844252	Callee	EXPECTED		3844152	0					
ANR	3844253	Identifier	EXPECTED		3844152	0					
ANR	3844254	ArgumentList	Z_TYPE_P ( arg ) == IS_STRING		3844152	1					
ANR	3844255	Argument	Z_TYPE_P ( arg ) == IS_STRING		3844152	0					
ANR	3844256	EqualityExpression	Z_TYPE_P ( arg ) == IS_STRING		3844152	0		==			
ANR	3844257	CallExpression	Z_TYPE_P ( arg )		3844152	0					
ANR	3844258	Callee	Z_TYPE_P		3844152	0					
ANR	3844259	Identifier	Z_TYPE_P		3844152	0					
ANR	3844260	ArgumentList	arg		3844152	1					
ANR	3844261	Argument	arg		3844152	0					
ANR	3844262	Identifier	arg		3844152	0					
ANR	3844263	Identifier	IS_STRING		3844152	1					
ANR	3844264	CompoundStatement		13:2:359:367	3844152	1					
ANR	3844265	IdentifierDeclStatement	double d ;	376:2:10797:10805	3844152	0	True				
ANR	3844266	IdentifierDecl	d		3844152	0					
ANR	3844267	IdentifierDeclType	double		3844152	0					
ANR	3844268	Identifier	d		3844152	1					
ANR	3844269	IdentifierDeclStatement	int type ;	377:2:10809:10817	3844152	1	True				
ANR	3844270	IdentifierDecl	type		3844152	0					
ANR	3844271	IdentifierDeclType	int		3844152	0					
ANR	3844272	Identifier	type		3844152	1					
ANR	3844273	IfStatement	"if ( UNEXPECTED ( ( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG ) )"		3844152	2					
ANR	3844274	Condition	"UNEXPECTED ( ( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG )"	379:6:10826:10904	3844152	0	True				
ANR	3844275	CallExpression	"UNEXPECTED ( ( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG )"		3844152	0					
ANR	3844276	Callee	UNEXPECTED		3844152	0					
ANR	3844277	Identifier	UNEXPECTED		3844152	0					
ANR	3844278	ArgumentList	"( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG"		3844152	1					
ANR	3844279	Argument	"( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG"		3844152	0					
ANR	3844280	EqualityExpression	"( type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d ) ) != IS_LONG"		3844152	0		!=			
ANR	3844281	AssignmentExpression	"type = is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d )"		3844152	0		=			
ANR	3844282	Identifier	type		3844152	0					
ANR	3844283	CallExpression	"is_numeric_str_function ( Z_STR_P ( arg ) , dest , & d )"		3844152	1					
ANR	3844284	Callee	is_numeric_str_function		3844152	0					
ANR	3844285	Identifier	is_numeric_str_function		3844152	0					
ANR	3844286	ArgumentList	Z_STR_P ( arg )		3844152	1					
ANR	3844287	Argument	Z_STR_P ( arg )		3844152	0					
ANR	3844288	CallExpression	Z_STR_P ( arg )		3844152	0					
ANR	3844289	Callee	Z_STR_P		3844152	0					
ANR	3844290	Identifier	Z_STR_P		3844152	0					
ANR	3844291	ArgumentList	arg		3844152	1					
ANR	3844292	Argument	arg		3844152	0					
ANR	3844293	Identifier	arg		3844152	0					
ANR	3844294	Argument	dest		3844152	1					
ANR	3844295	Identifier	dest		3844152	0					
ANR	3844296	Argument	& d		3844152	2					
ANR	3844297	UnaryOperationExpression	& d		3844152	0					
ANR	3844298	UnaryOperator	&		3844152	0					
ANR	3844299	Identifier	d		3844152	1					
ANR	3844300	Identifier	IS_LONG		3844152	1					
ANR	3844301	CompoundStatement		15:87:457:457	3844152	1					
ANR	3844302	IfStatement	if ( EXPECTED ( type != 0 ) )		3844152	0					
ANR	3844303	Condition	EXPECTED ( type != 0 )	380:7:10916:10934	3844152	0	True				
ANR	3844304	CallExpression	EXPECTED ( type != 0 )		3844152	0					
ANR	3844305	Callee	EXPECTED		3844152	0					
ANR	3844306	Identifier	EXPECTED		3844152	0					
ANR	3844307	ArgumentList	type != 0		3844152	1					
ANR	3844308	Argument	type != 0		3844152	0					
ANR	3844309	EqualityExpression	type != 0		3844152	0		!=			
ANR	3844310	Identifier	type		3844152	0					
ANR	3844311	PrimaryExpression	0		3844152	1					
ANR	3844312	CompoundStatement		16:28:487:487	3844152	1					
ANR	3844313	IfStatement	if ( UNEXPECTED ( zend_isnan ( d ) ) )		3844152	0					
ANR	3844314	Condition	UNEXPECTED ( zend_isnan ( d ) )	381:8:10947:10971	3844152	0	True				
ANR	3844315	CallExpression	UNEXPECTED ( zend_isnan ( d ) )		3844152	0					
ANR	3844316	Callee	UNEXPECTED		3844152	0					
ANR	3844317	Identifier	UNEXPECTED		3844152	0					
ANR	3844318	ArgumentList	zend_isnan ( d )		3844152	1					
ANR	3844319	Argument	zend_isnan ( d )		3844152	0					
ANR	3844320	CallExpression	zend_isnan ( d )		3844152	0					
ANR	3844321	Callee	zend_isnan		3844152	0					
ANR	3844322	Identifier	zend_isnan		3844152	0					
ANR	3844323	ArgumentList	d		3844152	1					
ANR	3844324	Argument	d		3844152	0					
ANR	3844325	Identifier	d		3844152	0					
ANR	3844326	CompoundStatement		17:35:524:524	3844152	1					
ANR	3844327	ReturnStatement	return 0 ;	382:5:10981:10989	3844152	0	True				
ANR	3844328	PrimaryExpression	0		3844152	0					
ANR	3844329	IfStatement	if ( UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( d ) ) )		3844152	1					
ANR	3844330	Condition	UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( d ) )	384:8:11005:11041	3844152	0	True				
ANR	3844331	CallExpression	UNEXPECTED ( ! ZEND_DOUBLE_FITS_LONG ( d ) )		3844152	0					
ANR	3844332	Callee	UNEXPECTED		3844152	0					
ANR	3844333	Identifier	UNEXPECTED		3844152	0					
ANR	3844334	ArgumentList	! ZEND_DOUBLE_FITS_LONG ( d )		3844152	1					
ANR	3844335	Argument	! ZEND_DOUBLE_FITS_LONG ( d )		3844152	0					
ANR	3844336	UnaryOperationExpression	! ZEND_DOUBLE_FITS_LONG ( d )		3844152	0					
ANR	3844337	UnaryOperator	!		3844152	0					
ANR	3844338	CallExpression	ZEND_DOUBLE_FITS_LONG ( d )		3844152	1					
ANR	3844339	Callee	ZEND_DOUBLE_FITS_LONG		3844152	0					
ANR	3844340	Identifier	ZEND_DOUBLE_FITS_LONG		3844152	0					
ANR	3844341	ArgumentList	d		3844152	1					
ANR	3844342	Argument	d		3844152	0					
ANR	3844343	Identifier	d		3844152	0					
ANR	3844344	CompoundStatement		20:47:594:594	3844152	1					
ANR	3844345	ExpressionStatement	* dest = ( d > 0 ) ? ZEND_LONG_MAX : ZEND_LONG_MIN	385:5:11051:11098	3844152	0	True				
ANR	3844346	AssignmentExpression	* dest = ( d > 0 ) ? ZEND_LONG_MAX : ZEND_LONG_MIN		3844152	0		=			
ANR	3844347	UnaryOperationExpression	* dest		3844152	0					
ANR	3844348	UnaryOperator	*		3844152	0					
ANR	3844349	Identifier	dest		3844152	1					
ANR	3844350	ConditionalExpression	( d > 0 ) ? ZEND_LONG_MAX : ZEND_LONG_MIN		3844152	1					
ANR	3844351	Condition	d > 0		3844152	0					
ANR	3844352	RelationalExpression	d > 0		3844152	0		>			
ANR	3844353	Identifier	d		3844152	0					
ANR	3844354	PrimaryExpression	0		3844152	1					
ANR	3844355	Identifier	ZEND_LONG_MAX		3844152	1					
ANR	3844356	Identifier	ZEND_LONG_MIN		3844152	2					
ANR	3844357	ElseStatement	else		3844152	0					
ANR	3844358	CompoundStatement		22:11:661:661	3844152	0					
ANR	3844359	ExpressionStatement	* dest = zend_dval_to_lval ( d )	387:5:11118:11146	3844152	0	True				
ANR	3844360	AssignmentExpression	* dest = zend_dval_to_lval ( d )		3844152	0		=			
ANR	3844361	UnaryOperationExpression	* dest		3844152	0					
ANR	3844362	UnaryOperator	*		3844152	0					
ANR	3844363	Identifier	dest		3844152	1					
ANR	3844364	CallExpression	zend_dval_to_lval ( d )		3844152	1					
ANR	3844365	Callee	zend_dval_to_lval		3844152	0					
ANR	3844366	Identifier	zend_dval_to_lval		3844152	0					
ANR	3844367	ArgumentList	d		3844152	1					
ANR	3844368	Argument	d		3844152	0					
ANR	3844369	Identifier	d		3844152	0					
ANR	3844370	ElseStatement	else		3844152	0					
ANR	3844371	CompoundStatement		25:10:714:714	3844152	0					
ANR	3844372	ReturnStatement	return 0 ;	390:4:11170:11178	3844152	0	True				
ANR	3844373	PrimaryExpression	0		3844152	0					
ANR	3844374	ElseStatement	else		3844152	0					
ANR	3844375	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) < IS_TRUE ) )		3844152	0					
ANR	3844376	Condition	EXPECTED ( Z_TYPE_P ( arg ) < IS_TRUE )	393:12:11201:11233	3844152	0	True				
ANR	3844377	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) < IS_TRUE )		3844152	0					
ANR	3844378	Callee	EXPECTED		3844152	0					
ANR	3844379	Identifier	EXPECTED		3844152	0					
ANR	3844380	ArgumentList	Z_TYPE_P ( arg ) < IS_TRUE		3844152	1					
ANR	3844381	Argument	Z_TYPE_P ( arg ) < IS_TRUE		3844152	0					
ANR	3844382	RelationalExpression	Z_TYPE_P ( arg ) < IS_TRUE		3844152	0		<			
ANR	3844383	CallExpression	Z_TYPE_P ( arg )		3844152	0					
ANR	3844384	Callee	Z_TYPE_P		3844152	0					
ANR	3844385	Identifier	Z_TYPE_P		3844152	0					
ANR	3844386	ArgumentList	arg		3844152	1					
ANR	3844387	Argument	arg		3844152	0					
ANR	3844388	Identifier	arg		3844152	0					
ANR	3844389	Identifier	IS_TRUE		3844152	1					
ANR	3844390	CompoundStatement		29:47:786:786	3844152	1					
ANR	3844391	ExpressionStatement	* dest = 0	394:2:11240:11249	3844152	0	True				
ANR	3844392	AssignmentExpression	* dest = 0		3844152	0		=			
ANR	3844393	UnaryOperationExpression	* dest		3844152	0					
ANR	3844394	UnaryOperator	*		3844152	0					
ANR	3844395	Identifier	dest		3844152	1					
ANR	3844396	PrimaryExpression	0		3844152	1					
ANR	3844397	ElseStatement	else		3844152	0					
ANR	3844398	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE ) )		3844152	0					
ANR	3844399	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )	395:12:11263:11296	3844152	0	True				
ANR	3844400	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )		3844152	0					
ANR	3844401	Callee	EXPECTED		3844152	0					
ANR	3844402	Identifier	EXPECTED		3844152	0					
ANR	3844403	ArgumentList	Z_TYPE_P ( arg ) == IS_TRUE		3844152	1					
ANR	3844404	Argument	Z_TYPE_P ( arg ) == IS_TRUE		3844152	0					
ANR	3844405	EqualityExpression	Z_TYPE_P ( arg ) == IS_TRUE		3844152	0		==			
ANR	3844406	CallExpression	Z_TYPE_P ( arg )		3844152	0					
ANR	3844407	Callee	Z_TYPE_P		3844152	0					
ANR	3844408	Identifier	Z_TYPE_P		3844152	0					
ANR	3844409	ArgumentList	arg		3844152	1					
ANR	3844410	Argument	arg		3844152	0					
ANR	3844411	Identifier	arg		3844152	0					
ANR	3844412	Identifier	IS_TRUE		3844152	1					
ANR	3844413	CompoundStatement		31:48:849:849	3844152	1					
ANR	3844414	ExpressionStatement	* dest = 1	396:2:11303:11312	3844152	0	True				
ANR	3844415	AssignmentExpression	* dest = 1		3844152	0		=			
ANR	3844416	UnaryOperationExpression	* dest		3844152	0					
ANR	3844417	UnaryOperator	*		3844152	0					
ANR	3844418	Identifier	dest		3844152	1					
ANR	3844419	PrimaryExpression	1		3844152	1					
ANR	3844420	ElseStatement	else		3844152	0					
ANR	3844421	CompoundStatement		33:8:872:872	3844152	0					
ANR	3844422	ReturnStatement	return 0 ;	398:2:11326:11334	3844152	0	True				
ANR	3844423	PrimaryExpression	0		3844152	0					
ANR	3844424	ReturnStatement	return 1 ;	400:1:11340:11348	3844152	1	True				
ANR	3844425	PrimaryExpression	1		3844152	0					
ANR	3844426	ReturnType	ZEND_API int ZEND_FASTCALL		3844152	1					
ANR	3844427	Identifier	zend_parse_arg_long_cap_weak		3844152	2					
ANR	3844428	ParameterList	"zval * arg , zend_long * dest"		3844152	3					
ANR	3844429	Parameter	zval * arg	364:56:10411:10419	3844152	0	True				
ANR	3844430	ParameterType	zval *		3844152	0					
ANR	3844431	Identifier	arg		3844152	1					
ANR	3844432	Parameter	zend_long * dest	364:67:10422:10436	3844152	1	True				
ANR	3844433	ParameterType	zend_long *		3844152	0					
ANR	3844434	Identifier	dest		3844152	1					
ANR	3844435	CFGEntryNode	ENTRY		3844152		True				
ANR	3844436	CFGExitNode	EXIT		3844152		True				
ANR	3844437	Symbol	ZEND_LONG_MAX		3844152						
ANR	3844438	Symbol	d		3844152						
ANR	3844439	Symbol	* dest		3844152						
ANR	3844440	Symbol	IS_TRUE		3844152						
ANR	3844441	Symbol	is_numeric_str_function		3844152						
ANR	3844442	Symbol	& d		3844152						
ANR	3844443	Symbol	dest		3844152						
ANR	3844444	Symbol	Z_TYPE_P		3844152						
ANR	3844445	Symbol	type		3844152						
ANR	3844446	Symbol	Z_DVAL_P		3844152						
ANR	3844447	Symbol	UNEXPECTED		3844152						
ANR	3844448	Symbol	zend_dval_to_lval		3844152						
ANR	3844449	Symbol	ZEND_LONG_MIN		3844152						
ANR	3844450	Symbol	IS_LONG		3844152						
ANR	3844451	Symbol	arg		3844152						
ANR	3844452	Symbol	IS_DOUBLE		3844152						
ANR	3844453	Symbol	zend_isnan		3844152						
ANR	3844454	Symbol	ZEND_DOUBLE_FITS_LONG		3844152						
ANR	3844455	Symbol	IS_STRING		3844152						
ANR	3844456	Symbol	Z_STR_P		3844152						
ANR	3844457	Symbol	EXPECTED		3844152						
ANR	3844458	Function	zend_parse_arg_long_cap_slow	404:0:11363:11572							
ANR	3844459	FunctionDef	"zend_parse_arg_long_cap_slow (zval * arg , zend_long * dest)"		3844458	0					
ANR	3844460	CompoundStatement		405:0:11457:11572	3844458	0					
ANR	3844461	IfStatement	if ( UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) ) )		3844458	0					
ANR	3844462	Condition	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )	406:5:11464:11503	3844458	0	True				
ANR	3844463	CallExpression	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )		3844458	0					
ANR	3844464	Callee	UNEXPECTED		3844458	0					
ANR	3844465	Identifier	UNEXPECTED		3844458	0					
ANR	3844466	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3844458	1					
ANR	3844467	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3844458	0					
ANR	3844468	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3844458	0					
ANR	3844469	Callee	ZEND_ARG_USES_STRICT_TYPES		3844458	0					
ANR	3844470	Identifier	ZEND_ARG_USES_STRICT_TYPES		3844458	0					
ANR	3844471	ArgumentList			3844458	1					
ANR	3844472	CompoundStatement		2:47:48:48	3844458	1					
ANR	3844473	ReturnStatement	return 0 ;	407:2:11510:11518	3844458	0	True				
ANR	3844474	PrimaryExpression	0		3844458	0					
ANR	3844475	ReturnStatement	"return zend_parse_arg_long_cap_weak ( arg , dest ) ;"	409:1:11524:11570	3844458	1	True				
ANR	3844476	CallExpression	"zend_parse_arg_long_cap_weak ( arg , dest )"		3844458	0					
ANR	3844477	Callee	zend_parse_arg_long_cap_weak		3844458	0					
ANR	3844478	Identifier	zend_parse_arg_long_cap_weak		3844458	0					
ANR	3844479	ArgumentList	arg		3844458	1					
ANR	3844480	Argument	arg		3844458	0					
ANR	3844481	Identifier	arg		3844458	0					
ANR	3844482	Argument	dest		3844458	1					
ANR	3844483	Identifier	dest		3844458	0					
ANR	3844484	ReturnType	ZEND_API int ZEND_FASTCALL		3844458	1					
ANR	3844485	Identifier	zend_parse_arg_long_cap_slow		3844458	2					
ANR	3844486	ParameterList	"zval * arg , zend_long * dest"		3844458	3					
ANR	3844487	Parameter	zval * arg	404:56:11419:11427	3844458	0	True				
ANR	3844488	ParameterType	zval *		3844458	0					
ANR	3844489	Identifier	arg		3844458	1					
ANR	3844490	Parameter	zend_long * dest	404:67:11430:11444	3844458	1	True				
ANR	3844491	ParameterType	zend_long *		3844458	0					
ANR	3844492	Identifier	dest		3844458	1					
ANR	3844493	CFGEntryNode	ENTRY		3844458		True				
ANR	3844494	CFGExitNode	EXIT		3844458		True				
ANR	3844495	Symbol	UNEXPECTED		3844458						
ANR	3844496	Symbol	zend_parse_arg_long_cap_weak		3844458						
ANR	3844497	Symbol	ZEND_ARG_USES_STRICT_TYPES		3844458						
ANR	3844498	Symbol	arg		3844458						
ANR	3844499	Symbol	dest		3844458						
ANR	3844500	Function	zend_parse_arg_double_weak	413:0:11585:12178							
ANR	3844501	FunctionDef	"zend_parse_arg_double_weak (zval * arg , double * dest)"		3844500	0					
ANR	3844502	CompoundStatement		414:0:11674:12178	3844500	0					
ANR	3844503	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG ) )		3844500	0					
ANR	3844504	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG )	415:5:11681:11714	3844500	0	True				
ANR	3844505	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG )		3844500	0					
ANR	3844506	Callee	EXPECTED		3844500	0					
ANR	3844507	Identifier	EXPECTED		3844500	0					
ANR	3844508	ArgumentList	Z_TYPE_P ( arg ) == IS_LONG		3844500	1					
ANR	3844509	Argument	Z_TYPE_P ( arg ) == IS_LONG		3844500	0					
ANR	3844510	EqualityExpression	Z_TYPE_P ( arg ) == IS_LONG		3844500	0		==			
ANR	3844511	CallExpression	Z_TYPE_P ( arg )		3844500	0					
ANR	3844512	Callee	Z_TYPE_P		3844500	0					
ANR	3844513	Identifier	Z_TYPE_P		3844500	0					
ANR	3844514	ArgumentList	arg		3844500	1					
ANR	3844515	Argument	arg		3844500	0					
ANR	3844516	Identifier	arg		3844500	0					
ANR	3844517	Identifier	IS_LONG		3844500	1					
ANR	3844518	CompoundStatement		2:41:42:42	3844500	1					
ANR	3844519	ExpressionStatement	* dest = ( double ) Z_LVAL_P ( arg )	416:2:11721:11750	3844500	0	True				
ANR	3844520	AssignmentExpression	* dest = ( double ) Z_LVAL_P ( arg )		3844500	0		=			
ANR	3844521	UnaryOperationExpression	* dest		3844500	0					
ANR	3844522	UnaryOperator	*		3844500	0					
ANR	3844523	Identifier	dest		3844500	1					
ANR	3844524	CastExpression	( double ) Z_LVAL_P ( arg )		3844500	1					
ANR	3844525	CastTarget	double		3844500	0					
ANR	3844526	CallExpression	Z_LVAL_P ( arg )		3844500	1					
ANR	3844527	Callee	Z_LVAL_P		3844500	0					
ANR	3844528	Identifier	Z_LVAL_P		3844500	0					
ANR	3844529	ArgumentList	arg		3844500	1					
ANR	3844530	Argument	arg		3844500	0					
ANR	3844531	Identifier	arg		3844500	0					
ANR	3844532	ElseStatement	else		3844500	0					
ANR	3844533	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING ) )		3844500	0					
ANR	3844534	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )	417:12:11764:11799	3844500	0	True				
ANR	3844535	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )		3844500	0					
ANR	3844536	Callee	EXPECTED		3844500	0					
ANR	3844537	Identifier	EXPECTED		3844500	0					
ANR	3844538	ArgumentList	Z_TYPE_P ( arg ) == IS_STRING		3844500	1					
ANR	3844539	Argument	Z_TYPE_P ( arg ) == IS_STRING		3844500	0					
ANR	3844540	EqualityExpression	Z_TYPE_P ( arg ) == IS_STRING		3844500	0		==			
ANR	3844541	CallExpression	Z_TYPE_P ( arg )		3844500	0					
ANR	3844542	Callee	Z_TYPE_P		3844500	0					
ANR	3844543	Identifier	Z_TYPE_P		3844500	0					
ANR	3844544	ArgumentList	arg		3844500	1					
ANR	3844545	Argument	arg		3844500	0					
ANR	3844546	Identifier	arg		3844500	0					
ANR	3844547	Identifier	IS_STRING		3844500	1					
ANR	3844548	CompoundStatement		6:2:146:154	3844500	1					
ANR	3844549	IdentifierDeclStatement	zend_long l ;	418:2:11806:11817	3844500	0	True				
ANR	3844550	IdentifierDecl	l		3844500	0					
ANR	3844551	IdentifierDeclType	zend_long		3844500	0					
ANR	3844552	Identifier	l		3844500	1					
ANR	3844553	IdentifierDeclStatement	int type ;	419:2:11821:11829	3844500	1	True				
ANR	3844554	IdentifierDecl	type		3844500	0					
ANR	3844555	IdentifierDeclType	int		3844500	0					
ANR	3844556	Identifier	type		3844500	1					
ANR	3844557	IfStatement	"if ( UNEXPECTED ( ( type = is_numeric_str_function ( Z_STR_P ( arg ) , & l , dest ) ) != IS_DOUBLE ) )"		3844500	2					
ANR	3844558	Condition	"UNEXPECTED ( ( type = is_numeric_str_function ( Z_STR_P ( arg ) , & l , dest ) ) != IS_DOUBLE )"	421:6:11838:11918	3844500	0	True				
ANR	3844559	CallExpression	"UNEXPECTED ( ( type = is_numeric_str_function ( Z_STR_P ( arg ) , & l , dest ) ) != IS_DOUBLE )"		3844500	0					
ANR	3844560	Callee	UNEXPECTED		3844500	0					
ANR	3844561	Identifier	UNEXPECTED		3844500	0					
ANR	3844562	ArgumentList	"( type = is_numeric_str_function ( Z_STR_P ( arg ) , & l , dest ) ) != IS_DOUBLE"		3844500	1					
ANR	3844563	Argument	"( type = is_numeric_str_function ( Z_STR_P ( arg ) , & l , dest ) ) != IS_DOUBLE"		3844500	0					
ANR	3844564	EqualityExpression	"( type = is_numeric_str_function ( Z_STR_P ( arg ) , & l , dest ) ) != IS_DOUBLE"		3844500	0		!=			
ANR	3844565	AssignmentExpression	"type = is_numeric_str_function ( Z_STR_P ( arg ) , & l , dest )"		3844500	0		=			
ANR	3844566	Identifier	type		3844500	0					
ANR	3844567	CallExpression	"is_numeric_str_function ( Z_STR_P ( arg ) , & l , dest )"		3844500	1					
ANR	3844568	Callee	is_numeric_str_function		3844500	0					
ANR	3844569	Identifier	is_numeric_str_function		3844500	0					
ANR	3844570	ArgumentList	Z_STR_P ( arg )		3844500	1					
ANR	3844571	Argument	Z_STR_P ( arg )		3844500	0					
ANR	3844572	CallExpression	Z_STR_P ( arg )		3844500	0					
ANR	3844573	Callee	Z_STR_P		3844500	0					
ANR	3844574	Identifier	Z_STR_P		3844500	0					
ANR	3844575	ArgumentList	arg		3844500	1					
ANR	3844576	Argument	arg		3844500	0					
ANR	3844577	Identifier	arg		3844500	0					
ANR	3844578	Argument	& l		3844500	1					
ANR	3844579	UnaryOperationExpression	& l		3844500	0					
ANR	3844580	UnaryOperator	&		3844500	0					
ANR	3844581	Identifier	l		3844500	1					
ANR	3844582	Argument	dest		3844500	2					
ANR	3844583	Identifier	dest		3844500	0					
ANR	3844584	Identifier	IS_DOUBLE		3844500	1					
ANR	3844585	CompoundStatement		8:89:246:246	3844500	1					
ANR	3844586	IfStatement	if ( EXPECTED ( type != 0 ) )		3844500	0					
ANR	3844587	Condition	EXPECTED ( type != 0 )	422:7:11930:11948	3844500	0	True				
ANR	3844588	CallExpression	EXPECTED ( type != 0 )		3844500	0					
ANR	3844589	Callee	EXPECTED		3844500	0					
ANR	3844590	Identifier	EXPECTED		3844500	0					
ANR	3844591	ArgumentList	type != 0		3844500	1					
ANR	3844592	Argument	type != 0		3844500	0					
ANR	3844593	EqualityExpression	type != 0		3844500	0		!=			
ANR	3844594	Identifier	type		3844500	0					
ANR	3844595	PrimaryExpression	0		3844500	1					
ANR	3844596	CompoundStatement		9:28:276:276	3844500	1					
ANR	3844597	ExpressionStatement	* dest = ( double ) ( l )	423:4:11957:11976	3844500	0	True				
ANR	3844598	AssignmentExpression	* dest = ( double ) ( l )		3844500	0		=			
ANR	3844599	UnaryOperationExpression	* dest		3844500	0					
ANR	3844600	UnaryOperator	*		3844500	0					
ANR	3844601	Identifier	dest		3844500	1					
ANR	3844602	CastExpression	( double ) ( l )		3844500	1					
ANR	3844603	CastTarget	double		3844500	0					
ANR	3844604	Identifier	l		3844500	1					
ANR	3844605	ElseStatement	else		3844500	0					
ANR	3844606	CompoundStatement		11:10:313:313	3844500	0					
ANR	3844607	ReturnStatement	return 0 ;	425:4:11994:12002	3844500	0	True				
ANR	3844608	PrimaryExpression	0		3844500	0					
ANR	3844609	ElseStatement	else		3844500	0					
ANR	3844610	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) < IS_TRUE ) )		3844500	0					
ANR	3844611	Condition	EXPECTED ( Z_TYPE_P ( arg ) < IS_TRUE )	428:12:12025:12057	3844500	0	True				
ANR	3844612	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) < IS_TRUE )		3844500	0					
ANR	3844613	Callee	EXPECTED		3844500	0					
ANR	3844614	Identifier	EXPECTED		3844500	0					
ANR	3844615	ArgumentList	Z_TYPE_P ( arg ) < IS_TRUE		3844500	1					
ANR	3844616	Argument	Z_TYPE_P ( arg ) < IS_TRUE		3844500	0					
ANR	3844617	RelationalExpression	Z_TYPE_P ( arg ) < IS_TRUE		3844500	0		<			
ANR	3844618	CallExpression	Z_TYPE_P ( arg )		3844500	0					
ANR	3844619	Callee	Z_TYPE_P		3844500	0					
ANR	3844620	Identifier	Z_TYPE_P		3844500	0					
ANR	3844621	ArgumentList	arg		3844500	1					
ANR	3844622	Argument	arg		3844500	0					
ANR	3844623	Identifier	arg		3844500	0					
ANR	3844624	Identifier	IS_TRUE		3844500	1					
ANR	3844625	CompoundStatement		15:47:385:385	3844500	1					
ANR	3844626	ExpressionStatement	* dest = 0.0	429:2:12064:12075	3844500	0	True				
ANR	3844627	AssignmentExpression	* dest = 0.0		3844500	0		=			
ANR	3844628	UnaryOperationExpression	* dest		3844500	0					
ANR	3844629	UnaryOperator	*		3844500	0					
ANR	3844630	Identifier	dest		3844500	1					
ANR	3844631	PrimaryExpression	0.0		3844500	1					
ANR	3844632	ElseStatement	else		3844500	0					
ANR	3844633	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE ) )		3844500	0					
ANR	3844634	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )	430:12:12089:12122	3844500	0	True				
ANR	3844635	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )		3844500	0					
ANR	3844636	Callee	EXPECTED		3844500	0					
ANR	3844637	Identifier	EXPECTED		3844500	0					
ANR	3844638	ArgumentList	Z_TYPE_P ( arg ) == IS_TRUE		3844500	1					
ANR	3844639	Argument	Z_TYPE_P ( arg ) == IS_TRUE		3844500	0					
ANR	3844640	EqualityExpression	Z_TYPE_P ( arg ) == IS_TRUE		3844500	0		==			
ANR	3844641	CallExpression	Z_TYPE_P ( arg )		3844500	0					
ANR	3844642	Callee	Z_TYPE_P		3844500	0					
ANR	3844643	Identifier	Z_TYPE_P		3844500	0					
ANR	3844644	ArgumentList	arg		3844500	1					
ANR	3844645	Argument	arg		3844500	0					
ANR	3844646	Identifier	arg		3844500	0					
ANR	3844647	Identifier	IS_TRUE		3844500	1					
ANR	3844648	CompoundStatement		17:48:450:450	3844500	1					
ANR	3844649	ExpressionStatement	* dest = 1.0	431:2:12129:12140	3844500	0	True				
ANR	3844650	AssignmentExpression	* dest = 1.0		3844500	0		=			
ANR	3844651	UnaryOperationExpression	* dest		3844500	0					
ANR	3844652	UnaryOperator	*		3844500	0					
ANR	3844653	Identifier	dest		3844500	1					
ANR	3844654	PrimaryExpression	1.0		3844500	1					
ANR	3844655	ElseStatement	else		3844500	0					
ANR	3844656	CompoundStatement		19:8:475:475	3844500	0					
ANR	3844657	ReturnStatement	return 0 ;	433:2:12154:12162	3844500	0	True				
ANR	3844658	PrimaryExpression	0		3844500	0					
ANR	3844659	ReturnStatement	return 1 ;	435:1:12168:12176	3844500	1	True				
ANR	3844660	PrimaryExpression	1		3844500	0					
ANR	3844661	ReturnType	ZEND_API int ZEND_FASTCALL		3844500	1					
ANR	3844662	Identifier	zend_parse_arg_double_weak		3844500	2					
ANR	3844663	ParameterList	"zval * arg , double * dest"		3844500	3					
ANR	3844664	Parameter	zval * arg	413:54:11639:11647	3844500	0	True				
ANR	3844665	ParameterType	zval *		3844500	0					
ANR	3844666	Identifier	arg		3844500	1					
ANR	3844667	Parameter	double * dest	413:65:11650:11661	3844500	1	True				
ANR	3844668	ParameterType	double *		3844500	0					
ANR	3844669	Identifier	dest		3844500	1					
ANR	3844670	CFGEntryNode	ENTRY		3844500		True				
ANR	3844671	CFGExitNode	EXIT		3844500		True				
ANR	3844672	Symbol	* dest		3844500						
ANR	3844673	Symbol	IS_TRUE		3844500						
ANR	3844674	Symbol	is_numeric_str_function		3844500						
ANR	3844675	Symbol	dest		3844500						
ANR	3844676	Symbol	Z_TYPE_P		3844500						
ANR	3844677	Symbol	l		3844500						
ANR	3844678	Symbol	type		3844500						
ANR	3844679	Symbol	Z_LVAL_P		3844500						
ANR	3844680	Symbol	UNEXPECTED		3844500						
ANR	3844681	Symbol	& l		3844500						
ANR	3844682	Symbol	IS_LONG		3844500						
ANR	3844683	Symbol	arg		3844500						
ANR	3844684	Symbol	IS_DOUBLE		3844500						
ANR	3844685	Symbol	IS_STRING		3844500						
ANR	3844686	Symbol	Z_STR_P		3844500						
ANR	3844687	Symbol	EXPECTED		3844500						
ANR	3844688	Function	zend_parse_arg_double_slow	439:0:12191:12545							
ANR	3844689	FunctionDef	"zend_parse_arg_double_slow (zval * arg , double * dest)"		3844688	0					
ANR	3844690	CompoundStatement		440:0:12280:12545	3844688	0					
ANR	3844691	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG ) )		3844688	0					
ANR	3844692	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG )	441:5:12287:12320	3844688	0	True				
ANR	3844693	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG )		3844688	0					
ANR	3844694	Callee	EXPECTED		3844688	0					
ANR	3844695	Identifier	EXPECTED		3844688	0					
ANR	3844696	ArgumentList	Z_TYPE_P ( arg ) == IS_LONG		3844688	1					
ANR	3844697	Argument	Z_TYPE_P ( arg ) == IS_LONG		3844688	0					
ANR	3844698	EqualityExpression	Z_TYPE_P ( arg ) == IS_LONG		3844688	0		==			
ANR	3844699	CallExpression	Z_TYPE_P ( arg )		3844688	0					
ANR	3844700	Callee	Z_TYPE_P		3844688	0					
ANR	3844701	Identifier	Z_TYPE_P		3844688	0					
ANR	3844702	ArgumentList	arg		3844688	1					
ANR	3844703	Argument	arg		3844688	0					
ANR	3844704	Identifier	arg		3844688	0					
ANR	3844705	Identifier	IS_LONG		3844688	1					
ANR	3844706	CompoundStatement		2:41:42:42	3844688	1					
ANR	3844707	ExpressionStatement	* dest = ( double ) Z_LVAL_P ( arg )	443:2:12396:12425	3844688	0	True				
ANR	3844708	AssignmentExpression	* dest = ( double ) Z_LVAL_P ( arg )		3844688	0		=			
ANR	3844709	UnaryOperationExpression	* dest		3844688	0					
ANR	3844710	UnaryOperator	*		3844688	0					
ANR	3844711	Identifier	dest		3844688	1					
ANR	3844712	CastExpression	( double ) Z_LVAL_P ( arg )		3844688	1					
ANR	3844713	CastTarget	double		3844688	0					
ANR	3844714	CallExpression	Z_LVAL_P ( arg )		3844688	1					
ANR	3844715	Callee	Z_LVAL_P		3844688	0					
ANR	3844716	Identifier	Z_LVAL_P		3844688	0					
ANR	3844717	ArgumentList	arg		3844688	1					
ANR	3844718	Argument	arg		3844688	0					
ANR	3844719	Identifier	arg		3844688	0					
ANR	3844720	ElseStatement	else		3844688	0					
ANR	3844721	IfStatement	if ( UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) ) )		3844688	0					
ANR	3844722	Condition	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )	444:12:12439:12478	3844688	0	True				
ANR	3844723	CallExpression	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )		3844688	0					
ANR	3844724	Callee	UNEXPECTED		3844688	0					
ANR	3844725	Identifier	UNEXPECTED		3844688	0					
ANR	3844726	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3844688	1					
ANR	3844727	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3844688	0					
ANR	3844728	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3844688	0					
ANR	3844729	Callee	ZEND_ARG_USES_STRICT_TYPES		3844688	0					
ANR	3844730	Identifier	ZEND_ARG_USES_STRICT_TYPES		3844688	0					
ANR	3844731	ArgumentList			3844688	1					
ANR	3844732	CompoundStatement		5:54:200:200	3844688	1					
ANR	3844733	ReturnStatement	return 0 ;	445:2:12485:12493	3844688	0	True				
ANR	3844734	PrimaryExpression	0		3844688	0					
ANR	3844735	ReturnStatement	"return zend_parse_arg_double_weak ( arg , dest ) ;"	447:1:12499:12543	3844688	1	True				
ANR	3844736	CallExpression	"zend_parse_arg_double_weak ( arg , dest )"		3844688	0					
ANR	3844737	Callee	zend_parse_arg_double_weak		3844688	0					
ANR	3844738	Identifier	zend_parse_arg_double_weak		3844688	0					
ANR	3844739	ArgumentList	arg		3844688	1					
ANR	3844740	Argument	arg		3844688	0					
ANR	3844741	Identifier	arg		3844688	0					
ANR	3844742	Argument	dest		3844688	1					
ANR	3844743	Identifier	dest		3844688	0					
ANR	3844744	ReturnType	ZEND_API int ZEND_FASTCALL		3844688	1					
ANR	3844745	Identifier	zend_parse_arg_double_slow		3844688	2					
ANR	3844746	ParameterList	"zval * arg , double * dest"		3844688	3					
ANR	3844747	Parameter	zval * arg	439:54:12245:12253	3844688	0	True				
ANR	3844748	ParameterType	zval *		3844688	0					
ANR	3844749	Identifier	arg		3844688	1					
ANR	3844750	Parameter	double * dest	439:65:12256:12267	3844688	1	True				
ANR	3844751	ParameterType	double *		3844688	0					
ANR	3844752	Identifier	dest		3844688	1					
ANR	3844753	CFGEntryNode	ENTRY		3844688		True				
ANR	3844754	CFGExitNode	EXIT		3844688		True				
ANR	3844755	Symbol	UNEXPECTED		3844688						
ANR	3844756	Symbol	ZEND_ARG_USES_STRICT_TYPES		3844688						
ANR	3844757	Symbol	* dest		3844688						
ANR	3844758	Symbol	zend_parse_arg_double_weak		3844688						
ANR	3844759	Symbol	IS_LONG		3844688						
ANR	3844760	Symbol	arg		3844688						
ANR	3844761	Symbol	dest		3844688						
ANR	3844762	Symbol	Z_TYPE_P		3844688						
ANR	3844763	Symbol	EXPECTED		3844688						
ANR	3844764	Symbol	Z_LVAL_P		3844688						
ANR	3844765	Function	zend_parse_arg_str_weak	451:0:12558:13431							
ANR	3844766	FunctionDef	"zend_parse_arg_str_weak (zval * arg , zend_string * * dest)"		3844765	0					
ANR	3844767	CompoundStatement		452:0:12650:13431	3844765	0					
ANR	3844768	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) < IS_STRING ) )		3844765	0					
ANR	3844769	Condition	EXPECTED ( Z_TYPE_P ( arg ) < IS_STRING )	453:5:12657:12691	3844765	0	True				
ANR	3844770	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) < IS_STRING )		3844765	0					
ANR	3844771	Callee	EXPECTED		3844765	0					
ANR	3844772	Identifier	EXPECTED		3844765	0					
ANR	3844773	ArgumentList	Z_TYPE_P ( arg ) < IS_STRING		3844765	1					
ANR	3844774	Argument	Z_TYPE_P ( arg ) < IS_STRING		3844765	0					
ANR	3844775	RelationalExpression	Z_TYPE_P ( arg ) < IS_STRING		3844765	0		<			
ANR	3844776	CallExpression	Z_TYPE_P ( arg )		3844765	0					
ANR	3844777	Callee	Z_TYPE_P		3844765	0					
ANR	3844778	Identifier	Z_TYPE_P		3844765	0					
ANR	3844779	ArgumentList	arg		3844765	1					
ANR	3844780	Argument	arg		3844765	0					
ANR	3844781	Identifier	arg		3844765	0					
ANR	3844782	Identifier	IS_STRING		3844765	1					
ANR	3844783	CompoundStatement		2:42:43:43	3844765	1					
ANR	3844784	ExpressionStatement	convert_to_string ( arg )	454:2:12698:12720	3844765	0	True				
ANR	3844785	CallExpression	convert_to_string ( arg )		3844765	0					
ANR	3844786	Callee	convert_to_string		3844765	0					
ANR	3844787	Identifier	convert_to_string		3844765	0					
ANR	3844788	ArgumentList	arg		3844765	1					
ANR	3844789	Argument	arg		3844765	0					
ANR	3844790	Identifier	arg		3844765	0					
ANR	3844791	ExpressionStatement	* dest = Z_STR_P ( arg )	455:2:12724:12744	3844765	1	True				
ANR	3844792	AssignmentExpression	* dest = Z_STR_P ( arg )		3844765	0		=			
ANR	3844793	UnaryOperationExpression	* dest		3844765	0					
ANR	3844794	UnaryOperator	*		3844765	0					
ANR	3844795	Identifier	dest		3844765	1					
ANR	3844796	CallExpression	Z_STR_P ( arg )		3844765	1					
ANR	3844797	Callee	Z_STR_P		3844765	0					
ANR	3844798	Identifier	Z_STR_P		3844765	0					
ANR	3844799	ArgumentList	arg		3844765	1					
ANR	3844800	Argument	arg		3844765	0					
ANR	3844801	Identifier	arg		3844765	0					
ANR	3844802	ElseStatement	else		3844765	0					
ANR	3844803	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) )		3844765	0					
ANR	3844804	Condition	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )	456:12:12758:12795	3844765	0	True				
ANR	3844805	CallExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		3844765	0					
ANR	3844806	Callee	UNEXPECTED		3844765	0					
ANR	3844807	Identifier	UNEXPECTED		3844765	0					
ANR	3844808	ArgumentList	Z_TYPE_P ( arg ) == IS_OBJECT		3844765	1					
ANR	3844809	Argument	Z_TYPE_P ( arg ) == IS_OBJECT		3844765	0					
ANR	3844810	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		3844765	0		==			
ANR	3844811	CallExpression	Z_TYPE_P ( arg )		3844765	0					
ANR	3844812	Callee	Z_TYPE_P		3844765	0					
ANR	3844813	Identifier	Z_TYPE_P		3844765	0					
ANR	3844814	ArgumentList	arg		3844765	1					
ANR	3844815	Argument	arg		3844765	0					
ANR	3844816	Identifier	arg		3844765	0					
ANR	3844817	Identifier	IS_OBJECT		3844765	1					
ANR	3844818	CompoundStatement		5:52:147:147	3844765	1					
ANR	3844819	IfStatement	"if ( Z_OBJ_HANDLER_P ( arg , cast_object ) )"		3844765	0					
ANR	3844820	Condition	"Z_OBJ_HANDLER_P ( arg , cast_object )"	457:6:12806:12838	3844765	0	True				
ANR	3844821	CallExpression	"Z_OBJ_HANDLER_P ( arg , cast_object )"		3844765	0					
ANR	3844822	Callee	Z_OBJ_HANDLER_P		3844765	0					
ANR	3844823	Identifier	Z_OBJ_HANDLER_P		3844765	0					
ANR	3844824	ArgumentList	arg		3844765	1					
ANR	3844825	Argument	arg		3844765	0					
ANR	3844826	Identifier	arg		3844765	0					
ANR	3844827	Argument	cast_object		3844765	1					
ANR	3844828	Identifier	cast_object		3844765	0					
ANR	3844829	CompoundStatement		7:3:195:203	3844765	1					
ANR	3844830	IdentifierDeclStatement	zval obj ;	458:3:12846:12854	3844765	0	True				
ANR	3844831	IdentifierDecl	obj		3844765	0					
ANR	3844832	IdentifierDeclType	zval		3844765	0					
ANR	3844833	Identifier	obj		3844765	1					
ANR	3844834	IfStatement	"if ( Z_OBJ_HANDLER_P ( arg , cast_object ) ( arg , & obj , IS_STRING ) == SUCCESS )"		3844765	1					
ANR	3844835	Condition	"Z_OBJ_HANDLER_P ( arg , cast_object ) ( arg , & obj , IS_STRING ) == SUCCESS"	459:7:12863:12928	3844765	0	True				
ANR	3844836	EqualityExpression	"Z_OBJ_HANDLER_P ( arg , cast_object ) ( arg , & obj , IS_STRING ) == SUCCESS"		3844765	0		==			
ANR	3844837	CallExpression	"Z_OBJ_HANDLER_P ( arg , cast_object ) ( arg , & obj , IS_STRING )"		3844765	0					
ANR	3844838	Callee	"Z_OBJ_HANDLER_P ( arg , cast_object )"		3844765	0					
ANR	3844839	CallExpression	"Z_OBJ_HANDLER_P ( arg , cast_object )"		3844765	0					
ANR	3844840	Callee	Z_OBJ_HANDLER_P		3844765	0					
ANR	3844841	Identifier	Z_OBJ_HANDLER_P		3844765	0					
ANR	3844842	ArgumentList	arg		3844765	1					
ANR	3844843	Argument	arg		3844765	0					
ANR	3844844	Identifier	arg		3844765	0					
ANR	3844845	Argument	cast_object		3844765	1					
ANR	3844846	Identifier	cast_object		3844765	0					
ANR	3844847	ArgumentList	arg		3844765	1					
ANR	3844848	Argument	arg		3844765	0					
ANR	3844849	Identifier	arg		3844765	0					
ANR	3844850	Argument	& obj		3844765	1					
ANR	3844851	UnaryOperationExpression	& obj		3844765	0					
ANR	3844852	UnaryOperator	&		3844765	0					
ANR	3844853	Identifier	obj		3844765	1					
ANR	3844854	Argument	IS_STRING		3844765	2					
ANR	3844855	Identifier	IS_STRING		3844765	0					
ANR	3844856	Identifier	SUCCESS		3844765	1					
ANR	3844857	CompoundStatement		8:75:280:280	3844765	1					
ANR	3844858	ExpressionStatement	zval_ptr_dtor ( arg )	460:4:12937:12955	3844765	0	True				
ANR	3844859	CallExpression	zval_ptr_dtor ( arg )		3844765	0					
ANR	3844860	Callee	zval_ptr_dtor		3844765	0					
ANR	3844861	Identifier	zval_ptr_dtor		3844765	0					
ANR	3844862	ArgumentList	arg		3844765	1					
ANR	3844863	Argument	arg		3844765	0					
ANR	3844864	Identifier	arg		3844765	0					
ANR	3844865	ExpressionStatement	"ZVAL_COPY_VALUE ( arg , & obj )"	461:4:12961:12987	3844765	1	True				
ANR	3844866	CallExpression	"ZVAL_COPY_VALUE ( arg , & obj )"		3844765	0					
ANR	3844867	Callee	ZVAL_COPY_VALUE		3844765	0					
ANR	3844868	Identifier	ZVAL_COPY_VALUE		3844765	0					
ANR	3844869	ArgumentList	arg		3844765	1					
ANR	3844870	Argument	arg		3844765	0					
ANR	3844871	Identifier	arg		3844765	0					
ANR	3844872	Argument	& obj		3844765	1					
ANR	3844873	UnaryOperationExpression	& obj		3844765	0					
ANR	3844874	UnaryOperator	&		3844765	0					
ANR	3844875	Identifier	obj		3844765	1					
ANR	3844876	ExpressionStatement	* dest = Z_STR_P ( arg )	462:4:12993:13013	3844765	2	True				
ANR	3844877	AssignmentExpression	* dest = Z_STR_P ( arg )		3844765	0		=			
ANR	3844878	UnaryOperationExpression	* dest		3844765	0					
ANR	3844879	UnaryOperator	*		3844765	0					
ANR	3844880	Identifier	dest		3844765	1					
ANR	3844881	CallExpression	Z_STR_P ( arg )		3844765	1					
ANR	3844882	Callee	Z_STR_P		3844765	0					
ANR	3844883	Identifier	Z_STR_P		3844765	0					
ANR	3844884	ArgumentList	arg		3844765	1					
ANR	3844885	Argument	arg		3844765	0					
ANR	3844886	Identifier	arg		3844765	0					
ANR	3844887	ReturnStatement	return 1 ;	463:4:13019:13027	3844765	3	True				
ANR	3844888	PrimaryExpression	1		3844765	0					
ANR	3844889	ElseStatement	else		3844765	0					
ANR	3844890	IfStatement	"if ( Z_OBJ_HANDLER_P ( arg , get ) )"		3844765	0					
ANR	3844891	Condition	"Z_OBJ_HANDLER_P ( arg , get )"	465:13:13047:13071	3844765	0	True				
ANR	3844892	CallExpression	"Z_OBJ_HANDLER_P ( arg , get )"		3844765	0					
ANR	3844893	Callee	Z_OBJ_HANDLER_P		3844765	0					
ANR	3844894	Identifier	Z_OBJ_HANDLER_P		3844765	0					
ANR	3844895	ArgumentList	arg		3844765	1					
ANR	3844896	Argument	arg		3844765	0					
ANR	3844897	Identifier	arg		3844765	0					
ANR	3844898	Argument	get		3844765	1					
ANR	3844899	Identifier	get		3844765	0					
ANR	3844900	CompoundStatement		16:3:440:485	3844765	1					
ANR	3844901	IdentifierDeclStatement	zval rv ;	466:3:13079:13086	3844765	0	True				
ANR	3844902	IdentifierDecl	rv		3844765	0					
ANR	3844903	IdentifierDeclType	zval		3844765	0					
ANR	3844904	Identifier	rv		3844765	1					
ANR	3844905	IdentifierDeclStatement	"zval * z = Z_OBJ_HANDLER_P ( arg , get ) ( arg , & rv ) ;"	467:3:13091:13136	3844765	1	True				
ANR	3844906	IdentifierDecl	"* z = Z_OBJ_HANDLER_P ( arg , get ) ( arg , & rv )"		3844765	0					
ANR	3844907	IdentifierDeclType	zval *		3844765	0					
ANR	3844908	Identifier	z		3844765	1					
ANR	3844909	AssignmentExpression	"* z = Z_OBJ_HANDLER_P ( arg , get ) ( arg , & rv )"		3844765	2		=			
ANR	3844910	Identifier	z		3844765	0					
ANR	3844911	CallExpression	"Z_OBJ_HANDLER_P ( arg , get ) ( arg , & rv )"		3844765	1					
ANR	3844912	Callee	"Z_OBJ_HANDLER_P ( arg , get )"		3844765	0					
ANR	3844913	CallExpression	"Z_OBJ_HANDLER_P ( arg , get )"		3844765	0					
ANR	3844914	Callee	Z_OBJ_HANDLER_P		3844765	0					
ANR	3844915	Identifier	Z_OBJ_HANDLER_P		3844765	0					
ANR	3844916	ArgumentList	arg		3844765	1					
ANR	3844917	Argument	arg		3844765	0					
ANR	3844918	Identifier	arg		3844765	0					
ANR	3844919	Argument	get		3844765	1					
ANR	3844920	Identifier	get		3844765	0					
ANR	3844921	ArgumentList	arg		3844765	1					
ANR	3844922	Argument	arg		3844765	0					
ANR	3844923	Identifier	arg		3844765	0					
ANR	3844924	Argument	& rv		3844765	1					
ANR	3844925	UnaryOperationExpression	& rv		3844765	0					
ANR	3844926	UnaryOperator	&		3844765	0					
ANR	3844927	Identifier	rv		3844765	1					
ANR	3844928	ExpressionStatement	Z_ADDREF_P ( z )	469:3:13142:13155	3844765	2	True				
ANR	3844929	CallExpression	Z_ADDREF_P ( z )		3844765	0					
ANR	3844930	Callee	Z_ADDREF_P		3844765	0					
ANR	3844931	Identifier	Z_ADDREF_P		3844765	0					
ANR	3844932	ArgumentList	z		3844765	1					
ANR	3844933	Argument	z		3844765	0					
ANR	3844934	Identifier	z		3844765	0					
ANR	3844935	IfStatement	if ( Z_TYPE_P ( z ) != IS_OBJECT )		3844765	3					
ANR	3844936	Condition	Z_TYPE_P ( z ) != IS_OBJECT	470:7:13164:13187	3844765	0	True				
ANR	3844937	EqualityExpression	Z_TYPE_P ( z ) != IS_OBJECT		3844765	0		!=			
ANR	3844938	CallExpression	Z_TYPE_P ( z )		3844765	0					
ANR	3844939	Callee	Z_TYPE_P		3844765	0					
ANR	3844940	Identifier	Z_TYPE_P		3844765	0					
ANR	3844941	ArgumentList	z		3844765	1					
ANR	3844942	Argument	z		3844765	0					
ANR	3844943	Identifier	z		3844765	0					
ANR	3844944	Identifier	IS_OBJECT		3844765	1					
ANR	3844945	CompoundStatement		19:33:539:539	3844765	1					
ANR	3844946	ExpressionStatement	zval_dtor ( arg )	471:4:13196:13210	3844765	0	True				
ANR	3844947	CallExpression	zval_dtor ( arg )		3844765	0					
ANR	3844948	Callee	zval_dtor		3844765	0					
ANR	3844949	Identifier	zval_dtor		3844765	0					
ANR	3844950	ArgumentList	arg		3844765	1					
ANR	3844951	Argument	arg		3844765	0					
ANR	3844952	Identifier	arg		3844765	0					
ANR	3844953	ExpressionStatement	ZVAL_NULL ( arg )	472:4:13216:13230	3844765	1	True				
ANR	3844954	CallExpression	ZVAL_NULL ( arg )		3844765	0					
ANR	3844955	Callee	ZVAL_NULL		3844765	0					
ANR	3844956	Identifier	ZVAL_NULL		3844765	0					
ANR	3844957	ArgumentList	arg		3844765	1					
ANR	3844958	Argument	arg		3844765	0					
ANR	3844959	Identifier	arg		3844765	0					
ANR	3844960	IfStatement	"if ( ! zend_make_printable_zval ( z , arg ) )"		3844765	2					
ANR	3844961	Condition	"! zend_make_printable_zval ( z , arg )"	473:8:13240:13272	3844765	0	True				
ANR	3844962	UnaryOperationExpression	"! zend_make_printable_zval ( z , arg )"		3844765	0					
ANR	3844963	UnaryOperator	!		3844765	0					
ANR	3844964	CallExpression	"zend_make_printable_zval ( z , arg )"		3844765	1					
ANR	3844965	Callee	zend_make_printable_zval		3844765	0					
ANR	3844966	Identifier	zend_make_printable_zval		3844765	0					
ANR	3844967	ArgumentList	z		3844765	1					
ANR	3844968	Argument	z		3844765	0					
ANR	3844969	Identifier	z		3844765	0					
ANR	3844970	Argument	arg		3844765	1					
ANR	3844971	Identifier	arg		3844765	0					
ANR	3844972	CompoundStatement		22:43:624:624	3844765	1					
ANR	3844973	ExpressionStatement	"ZVAL_COPY_VALUE ( arg , z )"	474:5:13282:13305	3844765	0	True				
ANR	3844974	CallExpression	"ZVAL_COPY_VALUE ( arg , z )"		3844765	0					
ANR	3844975	Callee	ZVAL_COPY_VALUE		3844765	0					
ANR	3844976	Identifier	ZVAL_COPY_VALUE		3844765	0					
ANR	3844977	ArgumentList	arg		3844765	1					
ANR	3844978	Argument	arg		3844765	0					
ANR	3844979	Identifier	arg		3844765	0					
ANR	3844980	Argument	z		3844765	1					
ANR	3844981	Identifier	z		3844765	0					
ANR	3844982	ExpressionStatement	* dest = Z_STR_P ( arg )	476:4:13317:13337	3844765	3	True				
ANR	3844983	AssignmentExpression	* dest = Z_STR_P ( arg )		3844765	0		=			
ANR	3844984	UnaryOperationExpression	* dest		3844765	0					
ANR	3844985	UnaryOperator	*		3844765	0					
ANR	3844986	Identifier	dest		3844765	1					
ANR	3844987	CallExpression	Z_STR_P ( arg )		3844765	1					
ANR	3844988	Callee	Z_STR_P		3844765	0					
ANR	3844989	Identifier	Z_STR_P		3844765	0					
ANR	3844990	ArgumentList	arg		3844765	1					
ANR	3844991	Argument	arg		3844765	0					
ANR	3844992	Identifier	arg		3844765	0					
ANR	3844993	ReturnStatement	return 1 ;	477:4:13343:13351	3844765	4	True				
ANR	3844994	PrimaryExpression	1		3844765	0					
ANR	3844995	ExpressionStatement	zval_ptr_dtor ( z )	479:3:13361:13377	3844765	4	True				
ANR	3844996	CallExpression	zval_ptr_dtor ( z )		3844765	0					
ANR	3844997	Callee	zval_ptr_dtor		3844765	0					
ANR	3844998	Identifier	zval_ptr_dtor		3844765	0					
ANR	3844999	ArgumentList	z		3844765	1					
ANR	3845000	Argument	z		3844765	0					
ANR	3845001	Identifier	z		3844765	0					
ANR	3845002	ReturnStatement	return 0 ;	481:2:13385:13393	3844765	1	True				
ANR	3845003	PrimaryExpression	0		3844765	0					
ANR	3845004	ElseStatement	else		3844765	0					
ANR	3845005	CompoundStatement		31:8:752:752	3844765	0					
ANR	3845006	ReturnStatement	return 0 ;	483:2:13407:13415	3844765	0	True				
ANR	3845007	PrimaryExpression	0		3844765	0					
ANR	3845008	ReturnStatement	return 1 ;	485:1:13421:13429	3844765	1	True				
ANR	3845009	PrimaryExpression	1		3844765	0					
ANR	3845010	ReturnType	ZEND_API int ZEND_FASTCALL		3844765	1					
ANR	3845011	Identifier	zend_parse_arg_str_weak		3844765	2					
ANR	3845012	ParameterList	"zval * arg , zend_string * * dest"		3844765	3					
ANR	3845013	Parameter	zval * arg	451:51:12609:12617	3844765	0	True				
ANR	3845014	ParameterType	zval *		3844765	0					
ANR	3845015	Identifier	arg		3844765	1					
ANR	3845016	Parameter	zend_string * * dest	451:62:12620:12637	3844765	1	True				
ANR	3845017	ParameterType	zend_string * *		3844765	0					
ANR	3845018	Identifier	dest		3844765	1					
ANR	3845019	CFGEntryNode	ENTRY		3844765		True				
ANR	3845020	CFGExitNode	EXIT		3844765		True				
ANR	3845021	Symbol	SUCCESS		3844765						
ANR	3845022	Symbol	cast_object		3844765						
ANR	3845023	Symbol	rv		3844765						
ANR	3845024	Symbol	* dest		3844765						
ANR	3845025	Symbol	zend_make_printable_zval		3844765						
ANR	3845026	Symbol	dest		3844765						
ANR	3845027	Symbol	Z_TYPE_P		3844765						
ANR	3845028	Symbol	& rv		3844765						
ANR	3845029	Symbol	UNEXPECTED		3844765						
ANR	3845030	Symbol	obj		3844765						
ANR	3845031	Symbol	arg		3844765						
ANR	3845032	Symbol	get		3844765						
ANR	3845033	Symbol	Z_OBJ_HANDLER_P		3844765						
ANR	3845034	Symbol	& obj		3844765						
ANR	3845035	Symbol	z		3844765						
ANR	3845036	Symbol	IS_STRING		3844765						
ANR	3845037	Symbol	Z_STR_P		3844765						
ANR	3845038	Symbol	IS_OBJECT		3844765						
ANR	3845039	Symbol	EXPECTED		3844765						
ANR	3845040	Function	zend_parse_arg_str_slow	489:0:13444:13646							
ANR	3845041	FunctionDef	"zend_parse_arg_str_slow (zval * arg , zend_string * * dest)"		3845040	0					
ANR	3845042	CompoundStatement		490:0:13536:13646	3845040	0					
ANR	3845043	IfStatement	if ( UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) ) )		3845040	0					
ANR	3845044	Condition	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )	491:5:13543:13582	3845040	0	True				
ANR	3845045	CallExpression	UNEXPECTED ( ZEND_ARG_USES_STRICT_TYPES ( ) )		3845040	0					
ANR	3845046	Callee	UNEXPECTED		3845040	0					
ANR	3845047	Identifier	UNEXPECTED		3845040	0					
ANR	3845048	ArgumentList	ZEND_ARG_USES_STRICT_TYPES ( )		3845040	1					
ANR	3845049	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3845040	0					
ANR	3845050	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3845040	0					
ANR	3845051	Callee	ZEND_ARG_USES_STRICT_TYPES		3845040	0					
ANR	3845052	Identifier	ZEND_ARG_USES_STRICT_TYPES		3845040	0					
ANR	3845053	ArgumentList			3845040	1					
ANR	3845054	CompoundStatement		2:47:48:48	3845040	1					
ANR	3845055	ReturnStatement	return 0 ;	492:2:13589:13597	3845040	0	True				
ANR	3845056	PrimaryExpression	0		3845040	0					
ANR	3845057	ReturnStatement	"return zend_parse_arg_str_weak ( arg , dest ) ;"	494:1:13603:13644	3845040	1	True				
ANR	3845058	CallExpression	"zend_parse_arg_str_weak ( arg , dest )"		3845040	0					
ANR	3845059	Callee	zend_parse_arg_str_weak		3845040	0					
ANR	3845060	Identifier	zend_parse_arg_str_weak		3845040	0					
ANR	3845061	ArgumentList	arg		3845040	1					
ANR	3845062	Argument	arg		3845040	0					
ANR	3845063	Identifier	arg		3845040	0					
ANR	3845064	Argument	dest		3845040	1					
ANR	3845065	Identifier	dest		3845040	0					
ANR	3845066	ReturnType	ZEND_API int ZEND_FASTCALL		3845040	1					
ANR	3845067	Identifier	zend_parse_arg_str_slow		3845040	2					
ANR	3845068	ParameterList	"zval * arg , zend_string * * dest"		3845040	3					
ANR	3845069	Parameter	zval * arg	489:51:13495:13503	3845040	0	True				
ANR	3845070	ParameterType	zval *		3845040	0					
ANR	3845071	Identifier	arg		3845040	1					
ANR	3845072	Parameter	zend_string * * dest	489:62:13506:13523	3845040	1	True				
ANR	3845073	ParameterType	zend_string * *		3845040	0					
ANR	3845074	Identifier	dest		3845040	1					
ANR	3845075	CFGEntryNode	ENTRY		3845040		True				
ANR	3845076	CFGExitNode	EXIT		3845040		True				
ANR	3845077	Symbol	UNEXPECTED		3845040						
ANR	3845078	Symbol	ZEND_ARG_USES_STRICT_TYPES		3845040						
ANR	3845079	Symbol	arg		3845040						
ANR	3845080	Symbol	dest		3845040						
ANR	3845081	Symbol	zend_parse_arg_str_weak		3845040						
ANR	3845082	Function	zend_parse_arg_impl	498:0:13659:18644							
ANR	3845083	FunctionDef	"zend_parse_arg_impl (int arg_num , zval * arg , va_list * va , const char * * spec , char * * error , int * severity)"		3845082	0					
ANR	3845084	CompoundStatement		499:0:13793:18644	3845082	0					
ANR	3845085	IdentifierDeclStatement	const char * spec_walk = * spec ;	500:1:13796:13825	3845082	0	True				
ANR	3845086	IdentifierDecl	* spec_walk = * spec		3845082	0					
ANR	3845087	IdentifierDeclType	const char *		3845082	0					
ANR	3845088	Identifier	spec_walk		3845082	1					
ANR	3845089	AssignmentExpression	* spec_walk = * spec		3845082	2		=			
ANR	3845090	Identifier	spec_walk		3845082	0					
ANR	3845091	UnaryOperationExpression	* spec		3845082	1					
ANR	3845092	UnaryOperator	*		3845082	0					
ANR	3845093	Identifier	spec		3845082	1					
ANR	3845094	IdentifierDeclStatement	char c = * spec_walk ++ ;	501:1:13828:13849	3845082	1	True				
ANR	3845095	IdentifierDecl	c = * spec_walk ++		3845082	0					
ANR	3845096	IdentifierDeclType	char		3845082	0					
ANR	3845097	Identifier	c		3845082	1					
ANR	3845098	AssignmentExpression	c = * spec_walk ++		3845082	2		=			
ANR	3845099	Identifier	c		3845082	0					
ANR	3845100	UnaryOperationExpression	* spec_walk ++		3845082	1					
ANR	3845101	UnaryOperator	*		3845082	0					
ANR	3845102	PostIncDecOperationExpression	spec_walk ++		3845082	1					
ANR	3845103	Identifier	spec_walk		3845082	0					
ANR	3845104	IncDec	++		3845082	1					
ANR	3845105	IdentifierDeclStatement	int check_null = 0 ;	502:1:13852:13870	3845082	2	True				
ANR	3845106	IdentifierDecl	check_null = 0		3845082	0					
ANR	3845107	IdentifierDeclType	int		3845082	0					
ANR	3845108	Identifier	check_null		3845082	1					
ANR	3845109	AssignmentExpression	check_null = 0		3845082	2		=			
ANR	3845110	Identifier	check_null		3845082	0					
ANR	3845111	PrimaryExpression	0		3845082	1					
ANR	3845112	IdentifierDeclStatement	zval * real_arg = arg ;	503:1:13873:13893	3845082	3	True				
ANR	3845113	IdentifierDecl	* real_arg = arg		3845082	0					
ANR	3845114	IdentifierDeclType	zval *		3845082	0					
ANR	3845115	Identifier	real_arg		3845082	1					
ANR	3845116	AssignmentExpression	* real_arg = arg		3845082	2		=			
ANR	3845117	Identifier	arg		3845082	0					
ANR	3845118	Identifier	arg		3845082	1					
ANR	3845119	ExpressionStatement	ZVAL_DEREF ( arg )	506:1:13927:13942	3845082	4	True				
ANR	3845120	CallExpression	ZVAL_DEREF ( arg )		3845082	0					
ANR	3845121	Callee	ZVAL_DEREF		3845082	0					
ANR	3845122	Identifier	ZVAL_DEREF		3845082	0					
ANR	3845123	ArgumentList	arg		3845082	1					
ANR	3845124	Argument	arg		3845082	0					
ANR	3845125	Identifier	arg		3845082	0					
ANR	3845126	WhileStatement	while ( 1 )		3845082	5					
ANR	3845127	Condition	1	507:8:13952:13952	3845082	0	True				
ANR	3845128	PrimaryExpression	1		3845082	0					
ANR	3845129	CompoundStatement		9:11:161:161	3845082	1					
ANR	3845130	IfStatement	if ( * spec_walk == '/' )		3845082	0					
ANR	3845131	Condition	* spec_walk == '/'	508:6:13963:13979	3845082	0	True				
ANR	3845132	EqualityExpression	* spec_walk == '/'		3845082	0		==			
ANR	3845133	UnaryOperationExpression	* spec_walk		3845082	0					
ANR	3845134	UnaryOperator	*		3845082	0					
ANR	3845135	Identifier	spec_walk		3845082	1					
ANR	3845136	PrimaryExpression	'/'		3845082	1					
ANR	3845137	CompoundStatement		10:25:188:188	3845082	1					
ANR	3845138	ExpressionStatement	SEPARATE_ZVAL_NOREF ( arg )	509:3:13987:14011	3845082	0	True				
ANR	3845139	CallExpression	SEPARATE_ZVAL_NOREF ( arg )		3845082	0					
ANR	3845140	Callee	SEPARATE_ZVAL_NOREF		3845082	0					
ANR	3845141	Identifier	SEPARATE_ZVAL_NOREF		3845082	0					
ANR	3845142	ArgumentList	arg		3845082	1					
ANR	3845143	Argument	arg		3845082	0					
ANR	3845144	Identifier	arg		3845082	0					
ANR	3845145	ExpressionStatement	real_arg = arg	510:3:14016:14030	3845082	1	True				
ANR	3845146	AssignmentExpression	real_arg = arg		3845082	0		=			
ANR	3845147	Identifier	real_arg		3845082	0					
ANR	3845148	Identifier	arg		3845082	1					
ANR	3845149	ElseStatement	else		3845082	0					
ANR	3845150	IfStatement	if ( * spec_walk == '!' )		3845082	0					
ANR	3845151	Condition	* spec_walk == '!'	511:13:14045:14061	3845082	0	True				
ANR	3845152	EqualityExpression	* spec_walk == '!'		3845082	0		==			
ANR	3845153	UnaryOperationExpression	* spec_walk		3845082	0					
ANR	3845154	UnaryOperator	*		3845082	0					
ANR	3845155	Identifier	spec_walk		3845082	1					
ANR	3845156	PrimaryExpression	'!'		3845082	1					
ANR	3845157	CompoundStatement		13:32:270:270	3845082	1					
ANR	3845158	ExpressionStatement	check_null = 1	512:3:14069:14083	3845082	0	True				
ANR	3845159	AssignmentExpression	check_null = 1		3845082	0		=			
ANR	3845160	Identifier	check_null		3845082	0					
ANR	3845161	PrimaryExpression	1		3845082	1					
ANR	3845162	ElseStatement	else		3845082	0					
ANR	3845163	CompoundStatement		15:9:300:300	3845082	0					
ANR	3845164	BreakStatement	break ;	514:3:14099:14104	3845082	0	True				
ANR	3845165	ExpressionStatement	spec_walk ++	516:2:14112:14123	3845082	1	True				
ANR	3845166	PostIncDecOperationExpression	spec_walk ++		3845082	0					
ANR	3845167	Identifier	spec_walk		3845082	0					
ANR	3845168	IncDec	++		3845082	1					
ANR	3845169	SwitchStatement	switch ( c )		3845082	6					
ANR	3845170	Condition	c	519:9:14138:14138	3845082	0	True				
ANR	3845171	Identifier	c		3845082	0					
ANR	3845172	CompoundStatement		21:12:347:347	3845082	1					
ANR	3845173	Label	case 'l' :	520:2:14145:14153	3845082	0	True				
ANR	3845174	Label	case 'L' :	521:2:14157:14165	3845082	1	True				
ANR	3845175	CompoundStatement		26:4:427:452	3845082	2					
ANR	3845176	Statement	zend_long	523:4:14176:14184	3845082	0	True				
ANR	3845177	Statement	*	523:14:14186:14186	3845082	1	True				
ANR	3845178	Statement	p	523:15:14187:14187	3845082	2	True				
ANR	3845179	Statement	=	523:17:14189:14189	3845082	3	True				
ANR	3845180	Statement	va_arg	523:19:14191:14196	3845082	4	True				
ANR	3845181	Statement	(	523:25:14197:14197	3845082	5	True				
ANR	3845182	Statement	*	523:26:14198:14198	3845082	6	True				
ANR	3845183	Statement	va	523:27:14199:14200	3845082	7	True				
ANR	3845184	Statement	","	523:29:14201:14201	3845082	8	True				
ANR	3845185	Statement	zend_long	523:31:14203:14211	3845082	9	True				
ANR	3845186	Statement	*	523:41:14213:14213	3845082	10	True				
ANR	3845187	Statement	)	523:42:14214:14214	3845082	11	True				
ANR	3845188	ExpressionStatement		523:43:14215:14215	3845082	12	True				
ANR	3845189	IdentifierDeclStatement	zend_bool * is_null = NULL ;	524:4:14221:14246	3845082	13	True				
ANR	3845190	IdentifierDecl	* is_null = NULL		3845082	0					
ANR	3845191	IdentifierDeclType	zend_bool *		3845082	0					
ANR	3845192	Identifier	is_null		3845082	1					
ANR	3845193	AssignmentExpression	* is_null = NULL		3845082	2		=			
ANR	3845194	Identifier	NULL		3845082	0					
ANR	3845195	Identifier	NULL		3845082	1					
ANR	3845196	IfStatement	if ( check_null )		3845082	14					
ANR	3845197	Condition	check_null	526:8:14257:14266	3845082	0	True				
ANR	3845198	Identifier	check_null		3845082	0					
ANR	3845199	CompoundStatement		28:20:475:475	3845082	1					
ANR	3845200	Statement	is_null	527:5:14276:14282	3845082	0	True				
ANR	3845201	Statement	=	527:13:14284:14284	3845082	1	True				
ANR	3845202	Statement	va_arg	527:15:14286:14291	3845082	2	True				
ANR	3845203	Statement	(	527:21:14292:14292	3845082	3	True				
ANR	3845204	Statement	*	527:22:14293:14293	3845082	4	True				
ANR	3845205	Statement	va	527:23:14294:14295	3845082	5	True				
ANR	3845206	Statement	","	527:25:14296:14296	3845082	6	True				
ANR	3845207	Statement	zend_bool	527:27:14298:14306	3845082	7	True				
ANR	3845208	Statement	*	527:37:14308:14308	3845082	8	True				
ANR	3845209	Statement	)	527:38:14309:14309	3845082	9	True				
ANR	3845210	ExpressionStatement		527:39:14310:14310	3845082	10	True				
ANR	3845211	IfStatement	"if ( ! zend_parse_arg_long ( arg , p , is_null , check_null , c == 'L' ) )"		3845082	15					
ANR	3845212	Condition	"! zend_parse_arg_long ( arg , p , is_null , check_null , c == 'L' )"	530:8:14327:14385	3845082	0	True				
ANR	3845213	UnaryOperationExpression	"! zend_parse_arg_long ( arg , p , is_null , check_null , c == 'L' )"		3845082	0					
ANR	3845214	UnaryOperator	!		3845082	0					
ANR	3845215	CallExpression	"zend_parse_arg_long ( arg , p , is_null , check_null , c == 'L' )"		3845082	1					
ANR	3845216	Callee	zend_parse_arg_long		3845082	0					
ANR	3845217	Identifier	zend_parse_arg_long		3845082	0					
ANR	3845218	ArgumentList	arg		3845082	1					
ANR	3845219	Argument	arg		3845082	0					
ANR	3845220	Identifier	arg		3845082	0					
ANR	3845221	Argument	p		3845082	1					
ANR	3845222	Identifier	p		3845082	0					
ANR	3845223	Argument	is_null		3845082	2					
ANR	3845224	Identifier	is_null		3845082	0					
ANR	3845225	Argument	check_null		3845082	3					
ANR	3845226	Identifier	check_null		3845082	0					
ANR	3845227	Argument	c == 'L'		3845082	4					
ANR	3845228	EqualityExpression	c == 'L'		3845082	0		==			
ANR	3845229	Identifier	c		3845082	0					
ANR	3845230	PrimaryExpression	'L'		3845082	1					
ANR	3845231	CompoundStatement		32:69:594:594	3845082	1					
ANR	3845232	ReturnStatement	"return ""integer"" ;"	531:5:14395:14411	3845082	0	True				
ANR	3845233	PrimaryExpression	"""integer"""		3845082	0					
ANR	3845234	BreakStatement	break ;	534:3:14427:14432	3845082	3	True				
ANR	3845235	Label	case 'd' :	536:2:14437:14445	3845082	4	True				
ANR	3845236	CompoundStatement		41:4:701:726	3845082	5					
ANR	3845237	Statement	double	538:4:14456:14461	3845082	0	True				
ANR	3845238	Statement	*	538:11:14463:14463	3845082	1	True				
ANR	3845239	Statement	p	538:12:14464:14464	3845082	2	True				
ANR	3845240	Statement	=	538:14:14466:14466	3845082	3	True				
ANR	3845241	Statement	va_arg	538:16:14468:14473	3845082	4	True				
ANR	3845242	Statement	(	538:22:14474:14474	3845082	5	True				
ANR	3845243	Statement	*	538:23:14475:14475	3845082	6	True				
ANR	3845244	Statement	va	538:24:14476:14477	3845082	7	True				
ANR	3845245	Statement	","	538:26:14478:14478	3845082	8	True				
ANR	3845246	Statement	double	538:28:14480:14485	3845082	9	True				
ANR	3845247	Statement	*	538:35:14487:14487	3845082	10	True				
ANR	3845248	Statement	)	538:36:14488:14488	3845082	11	True				
ANR	3845249	ExpressionStatement		538:37:14489:14489	3845082	12	True				
ANR	3845250	IdentifierDeclStatement	zend_bool * is_null = NULL ;	539:4:14495:14520	3845082	13	True				
ANR	3845251	IdentifierDecl	* is_null = NULL		3845082	0					
ANR	3845252	IdentifierDeclType	zend_bool *		3845082	0					
ANR	3845253	Identifier	is_null		3845082	1					
ANR	3845254	AssignmentExpression	* is_null = NULL		3845082	2		=			
ANR	3845255	Identifier	NULL		3845082	0					
ANR	3845256	Identifier	NULL		3845082	1					
ANR	3845257	IfStatement	if ( check_null )		3845082	14					
ANR	3845258	Condition	check_null	541:8:14531:14540	3845082	0	True				
ANR	3845259	Identifier	check_null		3845082	0					
ANR	3845260	CompoundStatement		43:20:749:749	3845082	1					
ANR	3845261	Statement	is_null	542:5:14550:14556	3845082	0	True				
ANR	3845262	Statement	=	542:13:14558:14558	3845082	1	True				
ANR	3845263	Statement	va_arg	542:15:14560:14565	3845082	2	True				
ANR	3845264	Statement	(	542:21:14566:14566	3845082	3	True				
ANR	3845265	Statement	*	542:22:14567:14567	3845082	4	True				
ANR	3845266	Statement	va	542:23:14568:14569	3845082	5	True				
ANR	3845267	Statement	","	542:25:14570:14570	3845082	6	True				
ANR	3845268	Statement	zend_bool	542:27:14572:14580	3845082	7	True				
ANR	3845269	Statement	*	542:37:14582:14582	3845082	8	True				
ANR	3845270	Statement	)	542:38:14583:14583	3845082	9	True				
ANR	3845271	ExpressionStatement		542:39:14584:14584	3845082	10	True				
ANR	3845272	IfStatement	"if ( ! zend_parse_arg_double ( arg , p , is_null , check_null ) )"		3845082	15					
ANR	3845273	Condition	"! zend_parse_arg_double ( arg , p , is_null , check_null )"	545:8:14601:14651	3845082	0	True				
ANR	3845274	UnaryOperationExpression	"! zend_parse_arg_double ( arg , p , is_null , check_null )"		3845082	0					
ANR	3845275	UnaryOperator	!		3845082	0					
ANR	3845276	CallExpression	"zend_parse_arg_double ( arg , p , is_null , check_null )"		3845082	1					
ANR	3845277	Callee	zend_parse_arg_double		3845082	0					
ANR	3845278	Identifier	zend_parse_arg_double		3845082	0					
ANR	3845279	ArgumentList	arg		3845082	1					
ANR	3845280	Argument	arg		3845082	0					
ANR	3845281	Identifier	arg		3845082	0					
ANR	3845282	Argument	p		3845082	1					
ANR	3845283	Identifier	p		3845082	0					
ANR	3845284	Argument	is_null		3845082	2					
ANR	3845285	Identifier	is_null		3845082	0					
ANR	3845286	Argument	check_null		3845082	3					
ANR	3845287	Identifier	check_null		3845082	0					
ANR	3845288	CompoundStatement		47:61:860:860	3845082	1					
ANR	3845289	ReturnStatement	"return ""float"" ;"	546:5:14661:14675	3845082	0	True				
ANR	3845290	PrimaryExpression	"""float"""		3845082	0					
ANR	3845291	BreakStatement	break ;	549:3:14691:14696	3845082	6	True				
ANR	3845292	Label	case 's' :	551:2:14701:14709	3845082	7	True				
ANR	3845293	CompoundStatement		54:3:920:920	3845082	8					
ANR	3845294	Statement	char	553:4:14720:14723	3845082	0	True				
ANR	3845295	Statement	*	553:9:14725:14725	3845082	1	True				
ANR	3845296	Statement	*	553:10:14726:14726	3845082	2	True				
ANR	3845297	Statement	p	553:11:14727:14727	3845082	3	True				
ANR	3845298	Statement	=	553:13:14729:14729	3845082	4	True				
ANR	3845299	Statement	va_arg	553:15:14731:14736	3845082	5	True				
ANR	3845300	Statement	(	553:21:14737:14737	3845082	6	True				
ANR	3845301	Statement	*	553:22:14738:14738	3845082	7	True				
ANR	3845302	Statement	va	553:23:14739:14740	3845082	8	True				
ANR	3845303	Statement	","	553:25:14741:14741	3845082	9	True				
ANR	3845304	Statement	char	553:27:14743:14746	3845082	10	True				
ANR	3845305	Statement	*	553:32:14748:14748	3845082	11	True				
ANR	3845306	Statement	*	553:33:14749:14749	3845082	12	True				
ANR	3845307	Statement	)	553:34:14750:14750	3845082	13	True				
ANR	3845308	ExpressionStatement		553:35:14751:14751	3845082	14	True				
ANR	3845309	Statement	size_t	554:4:14757:14762	3845082	15	True				
ANR	3845310	Statement	*	554:11:14764:14764	3845082	16	True				
ANR	3845311	Statement	pl	554:12:14765:14766	3845082	17	True				
ANR	3845312	Statement	=	554:15:14768:14768	3845082	18	True				
ANR	3845313	Statement	va_arg	554:17:14770:14775	3845082	19	True				
ANR	3845314	Statement	(	554:23:14776:14776	3845082	20	True				
ANR	3845315	Statement	*	554:24:14777:14777	3845082	21	True				
ANR	3845316	Statement	va	554:25:14778:14779	3845082	22	True				
ANR	3845317	Statement	","	554:27:14780:14780	3845082	23	True				
ANR	3845318	Statement	size_t	554:29:14782:14787	3845082	24	True				
ANR	3845319	Statement	*	554:36:14789:14789	3845082	25	True				
ANR	3845320	Statement	)	554:37:14790:14790	3845082	26	True				
ANR	3845321	ExpressionStatement		554:38:14791:14791	3845082	27	True				
ANR	3845322	IfStatement	"if ( ! zend_parse_arg_string ( arg , p , pl , check_null ) )"		3845082	28					
ANR	3845323	Condition	"! zend_parse_arg_string ( arg , p , pl , check_null )"	555:8:14801:14846	3845082	0	True				
ANR	3845324	UnaryOperationExpression	"! zend_parse_arg_string ( arg , p , pl , check_null )"		3845082	0					
ANR	3845325	UnaryOperator	!		3845082	0					
ANR	3845326	CallExpression	"zend_parse_arg_string ( arg , p , pl , check_null )"		3845082	1					
ANR	3845327	Callee	zend_parse_arg_string		3845082	0					
ANR	3845328	Identifier	zend_parse_arg_string		3845082	0					
ANR	3845329	ArgumentList	arg		3845082	1					
ANR	3845330	Argument	arg		3845082	0					
ANR	3845331	Identifier	arg		3845082	0					
ANR	3845332	Argument	p		3845082	1					
ANR	3845333	Identifier	p		3845082	0					
ANR	3845334	Argument	pl		3845082	2					
ANR	3845335	Identifier	pl		3845082	0					
ANR	3845336	Argument	check_null		3845082	3					
ANR	3845337	Identifier	check_null		3845082	0					
ANR	3845338	CompoundStatement		57:56:1055:1055	3845082	1					
ANR	3845339	ReturnStatement	"return ""string"" ;"	556:5:14856:14871	3845082	0	True				
ANR	3845340	PrimaryExpression	"""string"""		3845082	0					
ANR	3845341	BreakStatement	break ;	559:3:14887:14892	3845082	9	True				
ANR	3845342	Label	case 'p' :	561:2:14897:14905	3845082	10	True				
ANR	3845343	CompoundStatement		64:3:1116:1116	3845082	11					
ANR	3845344	Statement	char	563:4:14916:14919	3845082	0	True				
ANR	3845345	Statement	*	563:9:14921:14921	3845082	1	True				
ANR	3845346	Statement	*	563:10:14922:14922	3845082	2	True				
ANR	3845347	Statement	p	563:11:14923:14923	3845082	3	True				
ANR	3845348	Statement	=	563:13:14925:14925	3845082	4	True				
ANR	3845349	Statement	va_arg	563:15:14927:14932	3845082	5	True				
ANR	3845350	Statement	(	563:21:14933:14933	3845082	6	True				
ANR	3845351	Statement	*	563:22:14934:14934	3845082	7	True				
ANR	3845352	Statement	va	563:23:14935:14936	3845082	8	True				
ANR	3845353	Statement	","	563:25:14937:14937	3845082	9	True				
ANR	3845354	Statement	char	563:27:14939:14942	3845082	10	True				
ANR	3845355	Statement	*	563:32:14944:14944	3845082	11	True				
ANR	3845356	Statement	*	563:33:14945:14945	3845082	12	True				
ANR	3845357	Statement	)	563:34:14946:14946	3845082	13	True				
ANR	3845358	ExpressionStatement		563:35:14947:14947	3845082	14	True				
ANR	3845359	Statement	size_t	564:4:14953:14958	3845082	15	True				
ANR	3845360	Statement	*	564:11:14960:14960	3845082	16	True				
ANR	3845361	Statement	pl	564:12:14961:14962	3845082	17	True				
ANR	3845362	Statement	=	564:15:14964:14964	3845082	18	True				
ANR	3845363	Statement	va_arg	564:17:14966:14971	3845082	19	True				
ANR	3845364	Statement	(	564:23:14972:14972	3845082	20	True				
ANR	3845365	Statement	*	564:24:14973:14973	3845082	21	True				
ANR	3845366	Statement	va	564:25:14974:14975	3845082	22	True				
ANR	3845367	Statement	","	564:27:14976:14976	3845082	23	True				
ANR	3845368	Statement	size_t	564:29:14978:14983	3845082	24	True				
ANR	3845369	Statement	*	564:36:14985:14985	3845082	25	True				
ANR	3845370	Statement	)	564:37:14986:14986	3845082	26	True				
ANR	3845371	ExpressionStatement		564:38:14987:14987	3845082	27	True				
ANR	3845372	IfStatement	"if ( ! zend_parse_arg_path ( arg , p , pl , check_null ) )"		3845082	28					
ANR	3845373	Condition	"! zend_parse_arg_path ( arg , p , pl , check_null )"	565:8:14997:15040	3845082	0	True				
ANR	3845374	UnaryOperationExpression	"! zend_parse_arg_path ( arg , p , pl , check_null )"		3845082	0					
ANR	3845375	UnaryOperator	!		3845082	0					
ANR	3845376	CallExpression	"zend_parse_arg_path ( arg , p , pl , check_null )"		3845082	1					
ANR	3845377	Callee	zend_parse_arg_path		3845082	0					
ANR	3845378	Identifier	zend_parse_arg_path		3845082	0					
ANR	3845379	ArgumentList	arg		3845082	1					
ANR	3845380	Argument	arg		3845082	0					
ANR	3845381	Identifier	arg		3845082	0					
ANR	3845382	Argument	p		3845082	1					
ANR	3845383	Identifier	p		3845082	0					
ANR	3845384	Argument	pl		3845082	2					
ANR	3845385	Identifier	pl		3845082	0					
ANR	3845386	Argument	check_null		3845082	3					
ANR	3845387	Identifier	check_null		3845082	0					
ANR	3845388	CompoundStatement		67:54:1249:1249	3845082	1					
ANR	3845389	ReturnStatement	"return ""a valid path"" ;"	566:5:15050:15071	3845082	0	True				
ANR	3845390	PrimaryExpression	"""a valid path"""		3845082	0					
ANR	3845391	BreakStatement	break ;	569:3:15087:15092	3845082	12	True				
ANR	3845392	Label	case 'P' :	571:2:15097:15105	3845082	13	True				
ANR	3845393	CompoundStatement		74:3:1316:1316	3845082	14					
ANR	3845394	Statement	zend_string	573:4:15116:15126	3845082	0	True				
ANR	3845395	Statement	*	573:16:15128:15128	3845082	1	True				
ANR	3845396	Statement	*	573:17:15129:15129	3845082	2	True				
ANR	3845397	Statement	str	573:18:15130:15132	3845082	3	True				
ANR	3845398	Statement	=	573:22:15134:15134	3845082	4	True				
ANR	3845399	Statement	va_arg	573:24:15136:15141	3845082	5	True				
ANR	3845400	Statement	(	573:30:15142:15142	3845082	6	True				
ANR	3845401	Statement	*	573:31:15143:15143	3845082	7	True				
ANR	3845402	Statement	va	573:32:15144:15145	3845082	8	True				
ANR	3845403	Statement	","	573:34:15146:15146	3845082	9	True				
ANR	3845404	Statement	zend_string	573:36:15148:15158	3845082	10	True				
ANR	3845405	Statement	*	573:48:15160:15160	3845082	11	True				
ANR	3845406	Statement	*	573:49:15161:15161	3845082	12	True				
ANR	3845407	Statement	)	573:50:15162:15162	3845082	13	True				
ANR	3845408	ExpressionStatement		573:51:15163:15163	3845082	14	True				
ANR	3845409	IfStatement	"if ( ! zend_parse_arg_path_str ( arg , str , check_null ) )"		3845082	15					
ANR	3845410	Condition	"! zend_parse_arg_path_str ( arg , str , check_null )"	574:8:15173:15218	3845082	0	True				
ANR	3845411	UnaryOperationExpression	"! zend_parse_arg_path_str ( arg , str , check_null )"		3845082	0					
ANR	3845412	UnaryOperator	!		3845082	0					
ANR	3845413	CallExpression	"zend_parse_arg_path_str ( arg , str , check_null )"		3845082	1					
ANR	3845414	Callee	zend_parse_arg_path_str		3845082	0					
ANR	3845415	Identifier	zend_parse_arg_path_str		3845082	0					
ANR	3845416	ArgumentList	arg		3845082	1					
ANR	3845417	Argument	arg		3845082	0					
ANR	3845418	Identifier	arg		3845082	0					
ANR	3845419	Argument	str		3845082	1					
ANR	3845420	Identifier	str		3845082	0					
ANR	3845421	Argument	check_null		3845082	2					
ANR	3845422	Identifier	check_null		3845082	0					
ANR	3845423	CompoundStatement		76:56:1427:1427	3845082	1					
ANR	3845424	ReturnStatement	"return ""a valid path"" ;"	575:5:15228:15249	3845082	0	True				
ANR	3845425	PrimaryExpression	"""a valid path"""		3845082	0					
ANR	3845426	BreakStatement	break ;	578:3:15265:15270	3845082	15	True				
ANR	3845427	Label	case 'S' :	580:2:15275:15283	3845082	16	True				
ANR	3845428	CompoundStatement		83:3:1494:1494	3845082	17					
ANR	3845429	Statement	zend_string	582:4:15294:15304	3845082	0	True				
ANR	3845430	Statement	*	582:16:15306:15306	3845082	1	True				
ANR	3845431	Statement	*	582:17:15307:15307	3845082	2	True				
ANR	3845432	Statement	str	582:18:15308:15310	3845082	3	True				
ANR	3845433	Statement	=	582:22:15312:15312	3845082	4	True				
ANR	3845434	Statement	va_arg	582:24:15314:15319	3845082	5	True				
ANR	3845435	Statement	(	582:30:15320:15320	3845082	6	True				
ANR	3845436	Statement	*	582:31:15321:15321	3845082	7	True				
ANR	3845437	Statement	va	582:32:15322:15323	3845082	8	True				
ANR	3845438	Statement	","	582:34:15324:15324	3845082	9	True				
ANR	3845439	Statement	zend_string	582:36:15326:15336	3845082	10	True				
ANR	3845440	Statement	*	582:48:15338:15338	3845082	11	True				
ANR	3845441	Statement	*	582:49:15339:15339	3845082	12	True				
ANR	3845442	Statement	)	582:50:15340:15340	3845082	13	True				
ANR	3845443	ExpressionStatement		582:51:15341:15341	3845082	14	True				
ANR	3845444	IfStatement	"if ( ! zend_parse_arg_str ( arg , str , check_null ) )"		3845082	15					
ANR	3845445	Condition	"! zend_parse_arg_str ( arg , str , check_null )"	583:8:15351:15391	3845082	0	True				
ANR	3845446	UnaryOperationExpression	"! zend_parse_arg_str ( arg , str , check_null )"		3845082	0					
ANR	3845447	UnaryOperator	!		3845082	0					
ANR	3845448	CallExpression	"zend_parse_arg_str ( arg , str , check_null )"		3845082	1					
ANR	3845449	Callee	zend_parse_arg_str		3845082	0					
ANR	3845450	Identifier	zend_parse_arg_str		3845082	0					
ANR	3845451	ArgumentList	arg		3845082	1					
ANR	3845452	Argument	arg		3845082	0					
ANR	3845453	Identifier	arg		3845082	0					
ANR	3845454	Argument	str		3845082	1					
ANR	3845455	Identifier	str		3845082	0					
ANR	3845456	Argument	check_null		3845082	2					
ANR	3845457	Identifier	check_null		3845082	0					
ANR	3845458	CompoundStatement		85:51:1600:1600	3845082	1					
ANR	3845459	ReturnStatement	"return ""string"" ;"	584:5:15401:15416	3845082	0	True				
ANR	3845460	PrimaryExpression	"""string"""		3845082	0					
ANR	3845461	BreakStatement	break ;	587:3:15432:15437	3845082	18	True				
ANR	3845462	Label	case 'b' :	589:2:15442:15450	3845082	19	True				
ANR	3845463	CompoundStatement		94:4:1712:1737	3845082	20					
ANR	3845464	Statement	zend_bool	591:4:15461:15469	3845082	0	True				
ANR	3845465	Statement	*	591:14:15471:15471	3845082	1	True				
ANR	3845466	Statement	p	591:15:15472:15472	3845082	2	True				
ANR	3845467	Statement	=	591:17:15474:15474	3845082	3	True				
ANR	3845468	Statement	va_arg	591:19:15476:15481	3845082	4	True				
ANR	3845469	Statement	(	591:25:15482:15482	3845082	5	True				
ANR	3845470	Statement	*	591:26:15483:15483	3845082	6	True				
ANR	3845471	Statement	va	591:27:15484:15485	3845082	7	True				
ANR	3845472	Statement	","	591:29:15486:15486	3845082	8	True				
ANR	3845473	Statement	zend_bool	591:31:15488:15496	3845082	9	True				
ANR	3845474	Statement	*	591:41:15498:15498	3845082	10	True				
ANR	3845475	Statement	)	591:42:15499:15499	3845082	11	True				
ANR	3845476	ExpressionStatement		591:43:15500:15500	3845082	12	True				
ANR	3845477	IdentifierDeclStatement	zend_bool * is_null = NULL ;	592:4:15506:15531	3845082	13	True				
ANR	3845478	IdentifierDecl	* is_null = NULL		3845082	0					
ANR	3845479	IdentifierDeclType	zend_bool *		3845082	0					
ANR	3845480	Identifier	is_null		3845082	1					
ANR	3845481	AssignmentExpression	* is_null = NULL		3845082	2		=			
ANR	3845482	Identifier	NULL		3845082	0					
ANR	3845483	Identifier	NULL		3845082	1					
ANR	3845484	IfStatement	if ( check_null )		3845082	14					
ANR	3845485	Condition	check_null	594:8:15542:15551	3845082	0	True				
ANR	3845486	Identifier	check_null		3845082	0					
ANR	3845487	CompoundStatement		96:20:1760:1760	3845082	1					
ANR	3845488	Statement	is_null	595:5:15561:15567	3845082	0	True				
ANR	3845489	Statement	=	595:13:15569:15569	3845082	1	True				
ANR	3845490	Statement	va_arg	595:15:15571:15576	3845082	2	True				
ANR	3845491	Statement	(	595:21:15577:15577	3845082	3	True				
ANR	3845492	Statement	*	595:22:15578:15578	3845082	4	True				
ANR	3845493	Statement	va	595:23:15579:15580	3845082	5	True				
ANR	3845494	Statement	","	595:25:15581:15581	3845082	6	True				
ANR	3845495	Statement	zend_bool	595:27:15583:15591	3845082	7	True				
ANR	3845496	Statement	*	595:37:15593:15593	3845082	8	True				
ANR	3845497	Statement	)	595:38:15594:15594	3845082	9	True				
ANR	3845498	ExpressionStatement		595:39:15595:15595	3845082	10	True				
ANR	3845499	IfStatement	"if ( ! zend_parse_arg_bool ( arg , p , is_null , check_null ) )"		3845082	15					
ANR	3845500	Condition	"! zend_parse_arg_bool ( arg , p , is_null , check_null )"	598:8:15612:15660	3845082	0	True				
ANR	3845501	UnaryOperationExpression	"! zend_parse_arg_bool ( arg , p , is_null , check_null )"		3845082	0					
ANR	3845502	UnaryOperator	!		3845082	0					
ANR	3845503	CallExpression	"zend_parse_arg_bool ( arg , p , is_null , check_null )"		3845082	1					
ANR	3845504	Callee	zend_parse_arg_bool		3845082	0					
ANR	3845505	Identifier	zend_parse_arg_bool		3845082	0					
ANR	3845506	ArgumentList	arg		3845082	1					
ANR	3845507	Argument	arg		3845082	0					
ANR	3845508	Identifier	arg		3845082	0					
ANR	3845509	Argument	p		3845082	1					
ANR	3845510	Identifier	p		3845082	0					
ANR	3845511	Argument	is_null		3845082	2					
ANR	3845512	Identifier	is_null		3845082	0					
ANR	3845513	Argument	check_null		3845082	3					
ANR	3845514	Identifier	check_null		3845082	0					
ANR	3845515	CompoundStatement		100:59:1869:1869	3845082	1					
ANR	3845516	ReturnStatement	"return ""boolean"" ;"	599:5:15670:15686	3845082	0	True				
ANR	3845517	PrimaryExpression	"""boolean"""		3845082	0					
ANR	3845518	BreakStatement	break ;	602:3:15702:15707	3845082	21	True				
ANR	3845519	Label	case 'r' :	604:2:15712:15720	3845082	22	True				
ANR	3845520	CompoundStatement		107:3:1931:1931	3845082	23					
ANR	3845521	Statement	zval	606:4:15731:15734	3845082	0	True				
ANR	3845522	Statement	*	606:9:15736:15736	3845082	1	True				
ANR	3845523	Statement	*	606:10:15737:15737	3845082	2	True				
ANR	3845524	Statement	p	606:11:15738:15738	3845082	3	True				
ANR	3845525	Statement	=	606:13:15740:15740	3845082	4	True				
ANR	3845526	Statement	va_arg	606:15:15742:15747	3845082	5	True				
ANR	3845527	Statement	(	606:21:15748:15748	3845082	6	True				
ANR	3845528	Statement	*	606:22:15749:15749	3845082	7	True				
ANR	3845529	Statement	va	606:23:15750:15751	3845082	8	True				
ANR	3845530	Statement	","	606:25:15752:15752	3845082	9	True				
ANR	3845531	Statement	zval	606:27:15754:15757	3845082	10	True				
ANR	3845532	Statement	*	606:32:15759:15759	3845082	11	True				
ANR	3845533	Statement	*	606:33:15760:15760	3845082	12	True				
ANR	3845534	Statement	)	606:34:15761:15761	3845082	13	True				
ANR	3845535	ExpressionStatement		606:35:15762:15762	3845082	14	True				
ANR	3845536	IfStatement	"if ( ! zend_parse_arg_resource ( arg , p , check_null ) )"		3845082	15					
ANR	3845537	Condition	"! zend_parse_arg_resource ( arg , p , check_null )"	608:8:15773:15816	3845082	0	True				
ANR	3845538	UnaryOperationExpression	"! zend_parse_arg_resource ( arg , p , check_null )"		3845082	0					
ANR	3845539	UnaryOperator	!		3845082	0					
ANR	3845540	CallExpression	"zend_parse_arg_resource ( arg , p , check_null )"		3845082	1					
ANR	3845541	Callee	zend_parse_arg_resource		3845082	0					
ANR	3845542	Identifier	zend_parse_arg_resource		3845082	0					
ANR	3845543	ArgumentList	arg		3845082	1					
ANR	3845544	Argument	arg		3845082	0					
ANR	3845545	Identifier	arg		3845082	0					
ANR	3845546	Argument	p		3845082	1					
ANR	3845547	Identifier	p		3845082	0					
ANR	3845548	Argument	check_null		3845082	2					
ANR	3845549	Identifier	check_null		3845082	0					
ANR	3845550	CompoundStatement		110:54:2025:2025	3845082	1					
ANR	3845551	ReturnStatement	"return ""resource"" ;"	609:5:15826:15843	3845082	0	True				
ANR	3845552	PrimaryExpression	"""resource"""		3845082	0					
ANR	3845553	BreakStatement	break ;	612:3:15859:15864	3845082	24	True				
ANR	3845554	Label	case 'A' :	614:2:15869:15877	3845082	25	True				
ANR	3845555	Label	case 'a' :	615:2:15881:15889	3845082	26	True				
ANR	3845556	CompoundStatement		118:3:2100:2100	3845082	27					
ANR	3845557	Statement	zval	617:4:15900:15903	3845082	0	True				
ANR	3845558	Statement	*	617:9:15905:15905	3845082	1	True				
ANR	3845559	Statement	*	617:10:15906:15906	3845082	2	True				
ANR	3845560	Statement	p	617:11:15907:15907	3845082	3	True				
ANR	3845561	Statement	=	617:13:15909:15909	3845082	4	True				
ANR	3845562	Statement	va_arg	617:15:15911:15916	3845082	5	True				
ANR	3845563	Statement	(	617:21:15917:15917	3845082	6	True				
ANR	3845564	Statement	*	617:22:15918:15918	3845082	7	True				
ANR	3845565	Statement	va	617:23:15919:15920	3845082	8	True				
ANR	3845566	Statement	","	617:25:15921:15921	3845082	9	True				
ANR	3845567	Statement	zval	617:27:15923:15926	3845082	10	True				
ANR	3845568	Statement	*	617:32:15928:15928	3845082	11	True				
ANR	3845569	Statement	*	617:33:15929:15929	3845082	12	True				
ANR	3845570	Statement	)	617:34:15930:15930	3845082	13	True				
ANR	3845571	ExpressionStatement		617:35:15931:15931	3845082	14	True				
ANR	3845572	IfStatement	"if ( ! zend_parse_arg_array ( arg , p , check_null , c == 'A' ) )"		3845082	15					
ANR	3845573	Condition	"! zend_parse_arg_array ( arg , p , check_null , c == 'A' )"	619:8:15942:15992	3845082	0	True				
ANR	3845574	UnaryOperationExpression	"! zend_parse_arg_array ( arg , p , check_null , c == 'A' )"		3845082	0					
ANR	3845575	UnaryOperator	!		3845082	0					
ANR	3845576	CallExpression	"zend_parse_arg_array ( arg , p , check_null , c == 'A' )"		3845082	1					
ANR	3845577	Callee	zend_parse_arg_array		3845082	0					
ANR	3845578	Identifier	zend_parse_arg_array		3845082	0					
ANR	3845579	ArgumentList	arg		3845082	1					
ANR	3845580	Argument	arg		3845082	0					
ANR	3845581	Identifier	arg		3845082	0					
ANR	3845582	Argument	p		3845082	1					
ANR	3845583	Identifier	p		3845082	0					
ANR	3845584	Argument	check_null		3845082	2					
ANR	3845585	Identifier	check_null		3845082	0					
ANR	3845586	Argument	c == 'A'		3845082	3					
ANR	3845587	EqualityExpression	c == 'A'		3845082	0		==			
ANR	3845588	Identifier	c		3845082	0					
ANR	3845589	PrimaryExpression	'A'		3845082	1					
ANR	3845590	CompoundStatement		121:61:2201:2201	3845082	1					
ANR	3845591	ReturnStatement	"return ""array"" ;"	620:5:16002:16016	3845082	0	True				
ANR	3845592	PrimaryExpression	"""array"""		3845082	0					
ANR	3845593	BreakStatement	break ;	623:3:16032:16037	3845082	28	True				
ANR	3845594	Label	case 'H' :	625:2:16042:16050	3845082	29	True				
ANR	3845595	Label	case 'h' :	626:2:16054:16062	3845082	30	True				
ANR	3845596	CompoundStatement		129:3:2273:2273	3845082	31					
ANR	3845597	Statement	HashTable	628:4:16073:16081	3845082	0	True				
ANR	3845598	Statement	*	628:14:16083:16083	3845082	1	True				
ANR	3845599	Statement	*	628:15:16084:16084	3845082	2	True				
ANR	3845600	Statement	p	628:16:16085:16085	3845082	3	True				
ANR	3845601	Statement	=	628:18:16087:16087	3845082	4	True				
ANR	3845602	Statement	va_arg	628:20:16089:16094	3845082	5	True				
ANR	3845603	Statement	(	628:26:16095:16095	3845082	6	True				
ANR	3845604	Statement	*	628:27:16096:16096	3845082	7	True				
ANR	3845605	Statement	va	628:28:16097:16098	3845082	8	True				
ANR	3845606	Statement	","	628:30:16099:16099	3845082	9	True				
ANR	3845607	Statement	HashTable	628:32:16101:16109	3845082	10	True				
ANR	3845608	Statement	*	628:42:16111:16111	3845082	11	True				
ANR	3845609	Statement	*	628:43:16112:16112	3845082	12	True				
ANR	3845610	Statement	)	628:44:16113:16113	3845082	13	True				
ANR	3845611	ExpressionStatement		628:45:16114:16114	3845082	14	True				
ANR	3845612	IfStatement	"if ( ! zend_parse_arg_array_ht ( arg , p , check_null , c == 'H' ) )"		3845082	15					
ANR	3845613	Condition	"! zend_parse_arg_array_ht ( arg , p , check_null , c == 'H' )"	630:8:16125:16178	3845082	0	True				
ANR	3845614	UnaryOperationExpression	"! zend_parse_arg_array_ht ( arg , p , check_null , c == 'H' )"		3845082	0					
ANR	3845615	UnaryOperator	!		3845082	0					
ANR	3845616	CallExpression	"zend_parse_arg_array_ht ( arg , p , check_null , c == 'H' )"		3845082	1					
ANR	3845617	Callee	zend_parse_arg_array_ht		3845082	0					
ANR	3845618	Identifier	zend_parse_arg_array_ht		3845082	0					
ANR	3845619	ArgumentList	arg		3845082	1					
ANR	3845620	Argument	arg		3845082	0					
ANR	3845621	Identifier	arg		3845082	0					
ANR	3845622	Argument	p		3845082	1					
ANR	3845623	Identifier	p		3845082	0					
ANR	3845624	Argument	check_null		3845082	2					
ANR	3845625	Identifier	check_null		3845082	0					
ANR	3845626	Argument	c == 'H'		3845082	3					
ANR	3845627	EqualityExpression	c == 'H'		3845082	0		==			
ANR	3845628	Identifier	c		3845082	0					
ANR	3845629	PrimaryExpression	'H'		3845082	1					
ANR	3845630	CompoundStatement		132:64:2387:2387	3845082	1					
ANR	3845631	ReturnStatement	"return ""array"" ;"	631:5:16188:16202	3845082	0	True				
ANR	3845632	PrimaryExpression	"""array"""		3845082	0					
ANR	3845633	BreakStatement	break ;	634:3:16218:16223	3845082	32	True				
ANR	3845634	Label	case 'o' :	636:2:16228:16236	3845082	33	True				
ANR	3845635	CompoundStatement		139:3:2447:2447	3845082	34					
ANR	3845636	Statement	zval	638:4:16247:16250	3845082	0	True				
ANR	3845637	Statement	*	638:9:16252:16252	3845082	1	True				
ANR	3845638	Statement	*	638:10:16253:16253	3845082	2	True				
ANR	3845639	Statement	p	638:11:16254:16254	3845082	3	True				
ANR	3845640	Statement	=	638:13:16256:16256	3845082	4	True				
ANR	3845641	Statement	va_arg	638:15:16258:16263	3845082	5	True				
ANR	3845642	Statement	(	638:21:16264:16264	3845082	6	True				
ANR	3845643	Statement	*	638:22:16265:16265	3845082	7	True				
ANR	3845644	Statement	va	638:23:16266:16267	3845082	8	True				
ANR	3845645	Statement	","	638:25:16268:16268	3845082	9	True				
ANR	3845646	Statement	zval	638:27:16270:16273	3845082	10	True				
ANR	3845647	Statement	*	638:32:16275:16275	3845082	11	True				
ANR	3845648	Statement	*	638:33:16276:16276	3845082	12	True				
ANR	3845649	Statement	)	638:34:16277:16277	3845082	13	True				
ANR	3845650	ExpressionStatement		638:35:16278:16278	3845082	14	True				
ANR	3845651	IfStatement	"if ( ! zend_parse_arg_object ( arg , p , NULL , check_null ) )"		3845082	15					
ANR	3845652	Condition	"! zend_parse_arg_object ( arg , p , NULL , check_null )"	640:8:16289:16336	3845082	0	True				
ANR	3845653	UnaryOperationExpression	"! zend_parse_arg_object ( arg , p , NULL , check_null )"		3845082	0					
ANR	3845654	UnaryOperator	!		3845082	0					
ANR	3845655	CallExpression	"zend_parse_arg_object ( arg , p , NULL , check_null )"		3845082	1					
ANR	3845656	Callee	zend_parse_arg_object		3845082	0					
ANR	3845657	Identifier	zend_parse_arg_object		3845082	0					
ANR	3845658	ArgumentList	arg		3845082	1					
ANR	3845659	Argument	arg		3845082	0					
ANR	3845660	Identifier	arg		3845082	0					
ANR	3845661	Argument	p		3845082	1					
ANR	3845662	Identifier	p		3845082	0					
ANR	3845663	Argument	NULL		3845082	2					
ANR	3845664	Identifier	NULL		3845082	0					
ANR	3845665	Argument	check_null		3845082	3					
ANR	3845666	Identifier	check_null		3845082	0					
ANR	3845667	CompoundStatement		142:58:2545:2545	3845082	1					
ANR	3845668	ReturnStatement	"return ""object"" ;"	641:5:16346:16361	3845082	0	True				
ANR	3845669	PrimaryExpression	"""object"""		3845082	0					
ANR	3845670	BreakStatement	break ;	644:3:16377:16382	3845082	35	True				
ANR	3845671	Label	case 'O' :	646:2:16387:16395	3845082	36	True				
ANR	3845672	CompoundStatement		149:3:2606:2606	3845082	37					
ANR	3845673	Statement	zval	648:4:16406:16409	3845082	0	True				
ANR	3845674	Statement	*	648:9:16411:16411	3845082	1	True				
ANR	3845675	Statement	*	648:10:16412:16412	3845082	2	True				
ANR	3845676	Statement	p	648:11:16413:16413	3845082	3	True				
ANR	3845677	Statement	=	648:13:16415:16415	3845082	4	True				
ANR	3845678	Statement	va_arg	648:15:16417:16422	3845082	5	True				
ANR	3845679	Statement	(	648:21:16423:16423	3845082	6	True				
ANR	3845680	Statement	*	648:22:16424:16424	3845082	7	True				
ANR	3845681	Statement	va	648:23:16425:16426	3845082	8	True				
ANR	3845682	Statement	","	648:25:16427:16427	3845082	9	True				
ANR	3845683	Statement	zval	648:27:16429:16432	3845082	10	True				
ANR	3845684	Statement	*	648:32:16434:16434	3845082	11	True				
ANR	3845685	Statement	*	648:33:16435:16435	3845082	12	True				
ANR	3845686	Statement	)	648:34:16436:16436	3845082	13	True				
ANR	3845687	ExpressionStatement		648:35:16437:16437	3845082	14	True				
ANR	3845688	Statement	zend_class_entry	649:4:16443:16458	3845082	15	True				
ANR	3845689	Statement	*	649:21:16460:16460	3845082	16	True				
ANR	3845690	Statement	ce	649:22:16461:16462	3845082	17	True				
ANR	3845691	Statement	=	649:25:16464:16464	3845082	18	True				
ANR	3845692	Statement	va_arg	649:27:16466:16471	3845082	19	True				
ANR	3845693	Statement	(	649:33:16472:16472	3845082	20	True				
ANR	3845694	Statement	*	649:34:16473:16473	3845082	21	True				
ANR	3845695	Statement	va	649:35:16474:16475	3845082	22	True				
ANR	3845696	Statement	","	649:37:16476:16476	3845082	23	True				
ANR	3845697	Statement	zend_class_entry	649:39:16478:16493	3845082	24	True				
ANR	3845698	Statement	*	649:56:16495:16495	3845082	25	True				
ANR	3845699	Statement	)	649:57:16496:16496	3845082	26	True				
ANR	3845700	ExpressionStatement		649:58:16497:16497	3845082	27	True				
ANR	3845701	IfStatement	"if ( ! zend_parse_arg_object ( arg , p , ce , check_null ) )"		3845082	28					
ANR	3845702	Condition	"! zend_parse_arg_object ( arg , p , ce , check_null )"	651:8:16508:16553	3845082	0	True				
ANR	3845703	UnaryOperationExpression	"! zend_parse_arg_object ( arg , p , ce , check_null )"		3845082	0					
ANR	3845704	UnaryOperator	!		3845082	0					
ANR	3845705	CallExpression	"zend_parse_arg_object ( arg , p , ce , check_null )"		3845082	1					
ANR	3845706	Callee	zend_parse_arg_object		3845082	0					
ANR	3845707	Identifier	zend_parse_arg_object		3845082	0					
ANR	3845708	ArgumentList	arg		3845082	1					
ANR	3845709	Argument	arg		3845082	0					
ANR	3845710	Identifier	arg		3845082	0					
ANR	3845711	Argument	p		3845082	1					
ANR	3845712	Identifier	p		3845082	0					
ANR	3845713	Argument	ce		3845082	2					
ANR	3845714	Identifier	ce		3845082	0					
ANR	3845715	Argument	check_null		3845082	3					
ANR	3845716	Identifier	check_null		3845082	0					
ANR	3845717	CompoundStatement		153:56:2762:2762	3845082	1					
ANR	3845718	IfStatement	if ( ce )		3845082	0					
ANR	3845719	Condition	ce	652:9:16567:16568	3845082	0	True				
ANR	3845720	Identifier	ce		3845082	0					
ANR	3845721	CompoundStatement		154:13:2777:2777	3845082	1					
ANR	3845722	ReturnStatement	return ZSTR_VAL ( ce -> name ) ;	653:6:16579:16604	3845082	0	True				
ANR	3845723	CallExpression	ZSTR_VAL ( ce -> name )		3845082	0					
ANR	3845724	Callee	ZSTR_VAL		3845082	0					
ANR	3845725	Identifier	ZSTR_VAL		3845082	0					
ANR	3845726	ArgumentList	ce -> name		3845082	1					
ANR	3845727	Argument	ce -> name		3845082	0					
ANR	3845728	PtrMemberAccess	ce -> name		3845082	0					
ANR	3845729	Identifier	ce		3845082	0					
ANR	3845730	Identifier	name		3845082	1					
ANR	3845731	ElseStatement	else		3845082	0					
ANR	3845732	CompoundStatement		156:12:2824:2824	3845082	0					
ANR	3845733	ReturnStatement	"return ""object"" ;"	655:6:16626:16641	3845082	0	True				
ANR	3845734	PrimaryExpression	"""object"""		3845082	0					
ANR	3845735	BreakStatement	break ;	659:3:16664:16669	3845082	38	True				
ANR	3845736	Label	case 'C' :	661:2:16674:16682	3845082	39	True				
ANR	3845737	CompoundStatement		166:4:2971:3003	3845082	40					
ANR	3845738	Statement	zend_class_entry	663:4:16693:16708	3845082	0	True				
ANR	3845739	Statement	*	663:21:16710:16710	3845082	1	True				
ANR	3845740	Statement	lookup	663:22:16711:16716	3845082	2	True				
ANR	3845741	Statement	","	663:28:16717:16717	3845082	3	True				
ANR	3845742	Statement	*	663:30:16719:16719	3845082	4	True				
ANR	3845743	Statement	*	663:31:16720:16720	3845082	5	True				
ANR	3845744	Statement	pce	663:32:16721:16723	3845082	6	True				
ANR	3845745	Statement	=	663:36:16725:16725	3845082	7	True				
ANR	3845746	Statement	va_arg	663:38:16727:16732	3845082	8	True				
ANR	3845747	Statement	(	663:44:16733:16733	3845082	9	True				
ANR	3845748	Statement	*	663:45:16734:16734	3845082	10	True				
ANR	3845749	Statement	va	663:46:16735:16736	3845082	11	True				
ANR	3845750	Statement	","	663:48:16737:16737	3845082	12	True				
ANR	3845751	Statement	zend_class_entry	663:50:16739:16754	3845082	13	True				
ANR	3845752	Statement	*	663:67:16756:16756	3845082	14	True				
ANR	3845753	Statement	*	663:68:16757:16757	3845082	15	True				
ANR	3845754	Statement	)	663:69:16758:16758	3845082	16	True				
ANR	3845755	ExpressionStatement		663:70:16759:16759	3845082	17	True				
ANR	3845756	IdentifierDeclStatement	zend_class_entry * ce_base = * pce ;	664:4:16765:16797	3845082	18	True				
ANR	3845757	IdentifierDecl	* ce_base = * pce		3845082	0					
ANR	3845758	IdentifierDeclType	zend_class_entry *		3845082	0					
ANR	3845759	Identifier	ce_base		3845082	1					
ANR	3845760	AssignmentExpression	* ce_base = * pce		3845082	2		=			
ANR	3845761	Identifier	ce_base		3845082	0					
ANR	3845762	UnaryOperationExpression	* pce		3845082	1					
ANR	3845763	UnaryOperator	*		3845082	0					
ANR	3845764	Identifier	pce		3845082	1					
ANR	3845765	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		3845082	19					
ANR	3845766	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	666:8:16808:16845	3845082	0	True				
ANR	3845767	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		3845082	0		&&			
ANR	3845768	Identifier	check_null		3845082	0					
ANR	3845769	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3845082	1		==			
ANR	3845770	CallExpression	Z_TYPE_P ( arg )		3845082	0					
ANR	3845771	Callee	Z_TYPE_P		3845082	0					
ANR	3845772	Identifier	Z_TYPE_P		3845082	0					
ANR	3845773	ArgumentList	arg		3845082	1					
ANR	3845774	Argument	arg		3845082	0					
ANR	3845775	Identifier	arg		3845082	0					
ANR	3845776	Identifier	IS_NULL		3845082	1					
ANR	3845777	CompoundStatement		168:48:3054:3054	3845082	1					
ANR	3845778	ExpressionStatement	* pce = NULL	667:5:16855:16866	3845082	0	True				
ANR	3845779	AssignmentExpression	* pce = NULL		3845082	0		=			
ANR	3845780	UnaryOperationExpression	* pce		3845082	0					
ANR	3845781	UnaryOperator	*		3845082	0					
ANR	3845782	Identifier	pce		3845082	1					
ANR	3845783	Identifier	NULL		3845082	1					
ANR	3845784	BreakStatement	break ;	668:5:16873:16878	3845082	1	True				
ANR	3845785	ExpressionStatement	convert_to_string_ex ( arg )	670:4:16890:16915	3845082	20	True				
ANR	3845786	CallExpression	convert_to_string_ex ( arg )		3845082	0					
ANR	3845787	Callee	convert_to_string_ex		3845082	0					
ANR	3845788	Identifier	convert_to_string_ex		3845082	0					
ANR	3845789	ArgumentList	arg		3845082	1					
ANR	3845790	Argument	arg		3845082	0					
ANR	3845791	Identifier	arg		3845082	0					
ANR	3845792	IfStatement	if ( ( lookup = zend_lookup_class ( Z_STR_P ( arg ) ) ) == NULL )		3845082	21					
ANR	3845793	Condition	( lookup = zend_lookup_class ( Z_STR_P ( arg ) ) ) == NULL	671:8:16925:16974	3845082	0	True				
ANR	3845794	EqualityExpression	( lookup = zend_lookup_class ( Z_STR_P ( arg ) ) ) == NULL		3845082	0		==			
ANR	3845795	AssignmentExpression	lookup = zend_lookup_class ( Z_STR_P ( arg ) )		3845082	0		=			
ANR	3845796	Identifier	lookup		3845082	0					
ANR	3845797	CallExpression	zend_lookup_class ( Z_STR_P ( arg ) )		3845082	1					
ANR	3845798	Callee	zend_lookup_class		3845082	0					
ANR	3845799	Identifier	zend_lookup_class		3845082	0					
ANR	3845800	ArgumentList	Z_STR_P ( arg )		3845082	1					
ANR	3845801	Argument	Z_STR_P ( arg )		3845082	0					
ANR	3845802	CallExpression	Z_STR_P ( arg )		3845082	0					
ANR	3845803	Callee	Z_STR_P		3845082	0					
ANR	3845804	Identifier	Z_STR_P		3845082	0					
ANR	3845805	ArgumentList	arg		3845082	1					
ANR	3845806	Argument	arg		3845082	0					
ANR	3845807	Identifier	arg		3845082	0					
ANR	3845808	Identifier	NULL		3845082	1					
ANR	3845809	CompoundStatement		173:60:3183:3183	3845082	1					
ANR	3845810	ExpressionStatement	* pce = NULL	672:5:16984:16995	3845082	0	True				
ANR	3845811	AssignmentExpression	* pce = NULL		3845082	0		=			
ANR	3845812	UnaryOperationExpression	* pce		3845082	0					
ANR	3845813	UnaryOperator	*		3845082	0					
ANR	3845814	Identifier	pce		3845082	1					
ANR	3845815	Identifier	NULL		3845082	1					
ANR	3845816	ElseStatement	else		3845082	0					
ANR	3845817	CompoundStatement		175:11:3214:3214	3845082	0					
ANR	3845818	ExpressionStatement	* pce = lookup	674:5:17015:17028	3845082	0	True				
ANR	3845819	AssignmentExpression	* pce = lookup		3845082	0		=			
ANR	3845820	UnaryOperationExpression	* pce		3845082	0					
ANR	3845821	UnaryOperator	*		3845082	0					
ANR	3845822	Identifier	pce		3845082	1					
ANR	3845823	Identifier	lookup		3845082	1					
ANR	3845824	IfStatement	if ( ce_base )		3845082	22					
ANR	3845825	Condition	ce_base	676:8:17044:17050	3845082	0	True				
ANR	3845826	Identifier	ce_base		3845082	0					
ANR	3845827	CompoundStatement		178:17:3259:3259	3845082	1					
ANR	3845828	IfStatement	"if ( ( ! * pce || ! instanceof_function ( * pce , ce_base ) ) )"		3845082	0					
ANR	3845829	Condition	"! * pce || ! instanceof_function ( * pce , ce_base )"	677:9:17064:17109	3845082	0	True				
ANR	3845830	OrExpression	"! * pce || ! instanceof_function ( * pce , ce_base )"		3845082	0		||			
ANR	3845831	UnaryOperationExpression	! * pce		3845082	0					
ANR	3845832	UnaryOperator	!		3845082	0					
ANR	3845833	UnaryOperationExpression	* pce		3845082	1					
ANR	3845834	UnaryOperator	*		3845082	0					
ANR	3845835	Identifier	pce		3845082	1					
ANR	3845836	UnaryOperationExpression	"! instanceof_function ( * pce , ce_base )"		3845082	1					
ANR	3845837	UnaryOperator	!		3845082	0					
ANR	3845838	CallExpression	"instanceof_function ( * pce , ce_base )"		3845082	1					
ANR	3845839	Callee	instanceof_function		3845082	0					
ANR	3845840	Identifier	instanceof_function		3845082	0					
ANR	3845841	ArgumentList	* pce		3845082	1					
ANR	3845842	Argument	* pce		3845082	0					
ANR	3845843	UnaryOperationExpression	* pce		3845082	0					
ANR	3845844	UnaryOperator	*		3845082	0					
ANR	3845845	Identifier	pce		3845082	1					
ANR	3845846	Argument	ce_base		3845082	1					
ANR	3845847	Identifier	ce_base		3845082	0					
ANR	3845848	CompoundStatement		179:57:3318:3318	3845082	1					
ANR	3845849	ExpressionStatement	"zend_spprintf ( error , 0 , ""to be a class name derived from %s, '%s' given"" , ZSTR_VAL ( ce_base -> name ) , Z_STRVAL_P ( arg ) )"	678:6:17120:17242	3845082	0	True				
ANR	3845850	CallExpression	"zend_spprintf ( error , 0 , ""to be a class name derived from %s, '%s' given"" , ZSTR_VAL ( ce_base -> name ) , Z_STRVAL_P ( arg ) )"		3845082	0					
ANR	3845851	Callee	zend_spprintf		3845082	0					
ANR	3845852	Identifier	zend_spprintf		3845082	0					
ANR	3845853	ArgumentList	error		3845082	1					
ANR	3845854	Argument	error		3845082	0					
ANR	3845855	Identifier	error		3845082	0					
ANR	3845856	Argument	0		3845082	1					
ANR	3845857	PrimaryExpression	0		3845082	0					
ANR	3845858	Argument	"""to be a class name derived from %s, '%s' given"""		3845082	2					
ANR	3845859	PrimaryExpression	"""to be a class name derived from %s, '%s' given"""		3845082	0					
ANR	3845860	Argument	ZSTR_VAL ( ce_base -> name )		3845082	3					
ANR	3845861	CallExpression	ZSTR_VAL ( ce_base -> name )		3845082	0					
ANR	3845862	Callee	ZSTR_VAL		3845082	0					
ANR	3845863	Identifier	ZSTR_VAL		3845082	0					
ANR	3845864	ArgumentList	ce_base -> name		3845082	1					
ANR	3845865	Argument	ce_base -> name		3845082	0					
ANR	3845866	PtrMemberAccess	ce_base -> name		3845082	0					
ANR	3845867	Identifier	ce_base		3845082	0					
ANR	3845868	Identifier	name		3845082	1					
ANR	3845869	Argument	Z_STRVAL_P ( arg )		3845082	4					
ANR	3845870	CallExpression	Z_STRVAL_P ( arg )		3845082	0					
ANR	3845871	Callee	Z_STRVAL_P		3845082	0					
ANR	3845872	Identifier	Z_STRVAL_P		3845082	0					
ANR	3845873	ArgumentList	arg		3845082	1					
ANR	3845874	Argument	arg		3845082	0					
ANR	3845875	Identifier	arg		3845082	0					
ANR	3845876	ExpressionStatement	* pce = NULL	680:6:17250:17261	3845082	1	True				
ANR	3845877	AssignmentExpression	* pce = NULL		3845082	0		=			
ANR	3845878	UnaryOperationExpression	* pce		3845082	0					
ANR	3845879	UnaryOperator	*		3845082	0					
ANR	3845880	Identifier	pce		3845082	1					
ANR	3845881	Identifier	NULL		3845082	1					
ANR	3845882	ReturnStatement	"return """" ;"	681:6:17269:17278	3845082	2	True				
ANR	3845883	PrimaryExpression	""""""		3845082	0					
ANR	3845884	IfStatement	if ( ! * pce )		3845082	23					
ANR	3845885	Condition	! * pce	684:8:17301:17305	3845082	0	True				
ANR	3845886	UnaryOperationExpression	! * pce		3845082	0					
ANR	3845887	UnaryOperator	!		3845082	0					
ANR	3845888	UnaryOperationExpression	* pce		3845082	1					
ANR	3845889	UnaryOperator	*		3845082	0					
ANR	3845890	Identifier	pce		3845082	1					
ANR	3845891	CompoundStatement		186:15:3514:3514	3845082	1					
ANR	3845892	ExpressionStatement	"zend_spprintf ( error , 0 , ""to be a valid class name, '%s' given"" , Z_STRVAL_P ( arg ) )"	685:5:17315:17401	3845082	0	True				
ANR	3845893	CallExpression	"zend_spprintf ( error , 0 , ""to be a valid class name, '%s' given"" , Z_STRVAL_P ( arg ) )"		3845082	0					
ANR	3845894	Callee	zend_spprintf		3845082	0					
ANR	3845895	Identifier	zend_spprintf		3845082	0					
ANR	3845896	ArgumentList	error		3845082	1					
ANR	3845897	Argument	error		3845082	0					
ANR	3845898	Identifier	error		3845082	0					
ANR	3845899	Argument	0		3845082	1					
ANR	3845900	PrimaryExpression	0		3845082	0					
ANR	3845901	Argument	"""to be a valid class name, '%s' given"""		3845082	2					
ANR	3845902	PrimaryExpression	"""to be a valid class name, '%s' given"""		3845082	0					
ANR	3845903	Argument	Z_STRVAL_P ( arg )		3845082	3					
ANR	3845904	CallExpression	Z_STRVAL_P ( arg )		3845082	0					
ANR	3845905	Callee	Z_STRVAL_P		3845082	0					
ANR	3845906	Identifier	Z_STRVAL_P		3845082	0					
ANR	3845907	ArgumentList	arg		3845082	1					
ANR	3845908	Argument	arg		3845082	0					
ANR	3845909	Identifier	arg		3845082	0					
ANR	3845910	ReturnStatement	"return """" ;"	687:5:17408:17417	3845082	1	True				
ANR	3845911	PrimaryExpression	""""""		3845082	0					
ANR	3845912	BreakStatement	break ;	689:4:17429:17434	3845082	24	True				
ANR	3845913	BreakStatement	break ;	692:3:17445:17450	3845082	41	True				
ANR	3845914	Label	case 'f' :	694:2:17455:17463	3845082	42	True				
ANR	3845915	CompoundStatement		200:4:3810:3840	3845082	43					
ANR	3845916	Statement	zend_fcall_info	696:4:17474:17488	3845082	0	True				
ANR	3845917	Statement	*	696:20:17490:17490	3845082	1	True				
ANR	3845918	Statement	fci	696:21:17491:17493	3845082	2	True				
ANR	3845919	Statement	=	696:25:17495:17495	3845082	3	True				
ANR	3845920	Statement	va_arg	696:27:17497:17502	3845082	4	True				
ANR	3845921	Statement	(	696:33:17503:17503	3845082	5	True				
ANR	3845922	Statement	*	696:34:17504:17504	3845082	6	True				
ANR	3845923	Statement	va	696:35:17505:17506	3845082	7	True				
ANR	3845924	Statement	","	696:37:17507:17507	3845082	8	True				
ANR	3845925	Statement	zend_fcall_info	696:39:17509:17523	3845082	9	True				
ANR	3845926	Statement	*	696:55:17525:17525	3845082	10	True				
ANR	3845927	Statement	)	696:56:17526:17526	3845082	11	True				
ANR	3845928	ExpressionStatement		696:57:17527:17527	3845082	12	True				
ANR	3845929	Statement	zend_fcall_info_cache	697:4:17533:17553	3845082	13	True				
ANR	3845930	Statement	*	697:26:17555:17555	3845082	14	True				
ANR	3845931	Statement	fcc	697:27:17556:17558	3845082	15	True				
ANR	3845932	Statement	=	697:31:17560:17560	3845082	16	True				
ANR	3845933	Statement	va_arg	697:33:17562:17567	3845082	17	True				
ANR	3845934	Statement	(	697:39:17568:17568	3845082	18	True				
ANR	3845935	Statement	*	697:40:17569:17569	3845082	19	True				
ANR	3845936	Statement	va	697:41:17570:17571	3845082	20	True				
ANR	3845937	Statement	","	697:43:17572:17572	3845082	21	True				
ANR	3845938	Statement	zend_fcall_info_cache	697:45:17574:17594	3845082	22	True				
ANR	3845939	Statement	*	697:67:17596:17596	3845082	23	True				
ANR	3845940	Statement	)	697:68:17597:17597	3845082	24	True				
ANR	3845941	ExpressionStatement		697:69:17598:17598	3845082	25	True				
ANR	3845942	IdentifierDeclStatement	char * is_callable_error = NULL ;	698:4:17604:17634	3845082	26	True				
ANR	3845943	IdentifierDecl	* is_callable_error = NULL		3845082	0					
ANR	3845944	IdentifierDeclType	char *		3845082	0					
ANR	3845945	Identifier	is_callable_error		3845082	1					
ANR	3845946	AssignmentExpression	* is_callable_error = NULL		3845082	2		=			
ANR	3845947	Identifier	NULL		3845082	0					
ANR	3845948	Identifier	NULL		3845082	1					
ANR	3845949	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		3845082	27					
ANR	3845950	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	700:8:17645:17682	3845082	0	True				
ANR	3845951	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		3845082	0		&&			
ANR	3845952	Identifier	check_null		3845082	0					
ANR	3845953	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3845082	1		==			
ANR	3845954	CallExpression	Z_TYPE_P ( arg )		3845082	0					
ANR	3845955	Callee	Z_TYPE_P		3845082	0					
ANR	3845956	Identifier	Z_TYPE_P		3845082	0					
ANR	3845957	ArgumentList	arg		3845082	1					
ANR	3845958	Argument	arg		3845082	0					
ANR	3845959	Identifier	arg		3845082	0					
ANR	3845960	Identifier	IS_NULL		3845082	1					
ANR	3845961	CompoundStatement		202:48:3891:3891	3845082	1					
ANR	3845962	ExpressionStatement	fci -> size = 0	701:5:17692:17705	3845082	0	True				
ANR	3845963	AssignmentExpression	fci -> size = 0		3845082	0		=			
ANR	3845964	PtrMemberAccess	fci -> size		3845082	0					
ANR	3845965	Identifier	fci		3845082	0					
ANR	3845966	Identifier	size		3845082	1					
ANR	3845967	PrimaryExpression	0		3845082	1					
ANR	3845968	ExpressionStatement	fcc -> initialized = 0	702:5:17712:17732	3845082	1	True				
ANR	3845969	AssignmentExpression	fcc -> initialized = 0		3845082	0		=			
ANR	3845970	PtrMemberAccess	fcc -> initialized		3845082	0					
ANR	3845971	Identifier	fcc		3845082	0					
ANR	3845972	Identifier	initialized		3845082	1					
ANR	3845973	PrimaryExpression	0		3845082	1					
ANR	3845974	BreakStatement	break ;	703:5:17739:17744	3845082	2	True				
ANR	3845975	IfStatement	"if ( zend_fcall_info_init ( arg , 0 , fci , fcc , NULL , & is_callable_error ) == SUCCESS )"		3845082	28					
ANR	3845976	Condition	"zend_fcall_info_init ( arg , 0 , fci , fcc , NULL , & is_callable_error ) == SUCCESS"	706:8:17761:17835	3845082	0	True				
ANR	3845977	EqualityExpression	"zend_fcall_info_init ( arg , 0 , fci , fcc , NULL , & is_callable_error ) == SUCCESS"		3845082	0		==			
ANR	3845978	CallExpression	"zend_fcall_info_init ( arg , 0 , fci , fcc , NULL , & is_callable_error )"		3845082	0					
ANR	3845979	Callee	zend_fcall_info_init		3845082	0					
ANR	3845980	Identifier	zend_fcall_info_init		3845082	0					
ANR	3845981	ArgumentList	arg		3845082	1					
ANR	3845982	Argument	arg		3845082	0					
ANR	3845983	Identifier	arg		3845082	0					
ANR	3845984	Argument	0		3845082	1					
ANR	3845985	PrimaryExpression	0		3845082	0					
ANR	3845986	Argument	fci		3845082	2					
ANR	3845987	Identifier	fci		3845082	0					
ANR	3845988	Argument	fcc		3845082	3					
ANR	3845989	Identifier	fcc		3845082	0					
ANR	3845990	Argument	NULL		3845082	4					
ANR	3845991	Identifier	NULL		3845082	0					
ANR	3845992	Argument	& is_callable_error		3845082	5					
ANR	3845993	UnaryOperationExpression	& is_callable_error		3845082	0					
ANR	3845994	UnaryOperator	&		3845082	0					
ANR	3845995	Identifier	is_callable_error		3845082	1					
ANR	3845996	Identifier	SUCCESS		3845082	1					
ANR	3845997	CompoundStatement		208:85:4044:4044	3845082	1					
ANR	3845998	IfStatement	if ( is_callable_error )		3845082	0					
ANR	3845999	Condition	is_callable_error	707:9:17849:17865	3845082	0	True				
ANR	3846000	Identifier	is_callable_error		3845082	0					
ANR	3846001	CompoundStatement		209:28:4074:4074	3845082	1					
ANR	3846002	ExpressionStatement	* severity = E_DEPRECATED	708:6:17876:17900	3845082	0	True				
ANR	3846003	AssignmentExpression	* severity = E_DEPRECATED		3845082	0		=			
ANR	3846004	UnaryOperationExpression	* severity		3845082	0					
ANR	3846005	UnaryOperator	*		3845082	0					
ANR	3846006	Identifier	severity		3845082	1					
ANR	3846007	Identifier	E_DEPRECATED		3845082	1					
ANR	3846008	ExpressionStatement	"zend_spprintf ( error , 0 , ""to be a valid callback, %s"" , is_callable_error )"	709:6:17908:17980	3845082	1	True				
ANR	3846009	CallExpression	"zend_spprintf ( error , 0 , ""to be a valid callback, %s"" , is_callable_error )"		3845082	0					
ANR	3846010	Callee	zend_spprintf		3845082	0					
ANR	3846011	Identifier	zend_spprintf		3845082	0					
ANR	3846012	ArgumentList	error		3845082	1					
ANR	3846013	Argument	error		3845082	0					
ANR	3846014	Identifier	error		3845082	0					
ANR	3846015	Argument	0		3845082	1					
ANR	3846016	PrimaryExpression	0		3845082	0					
ANR	3846017	Argument	"""to be a valid callback, %s"""		3845082	2					
ANR	3846018	PrimaryExpression	"""to be a valid callback, %s"""		3845082	0					
ANR	3846019	Argument	is_callable_error		3845082	3					
ANR	3846020	Identifier	is_callable_error		3845082	0					
ANR	3846021	ExpressionStatement	efree ( is_callable_error )	710:6:17988:18012	3845082	2	True				
ANR	3846022	CallExpression	efree ( is_callable_error )		3845082	0					
ANR	3846023	Callee	efree		3845082	0					
ANR	3846024	Identifier	efree		3845082	0					
ANR	3846025	ArgumentList	is_callable_error		3845082	1					
ANR	3846026	Argument	is_callable_error		3845082	0					
ANR	3846027	Identifier	is_callable_error		3845082	0					
ANR	3846028	ExpressionStatement	* spec = spec_walk	711:6:18020:18037	3845082	3	True				
ANR	3846029	AssignmentExpression	* spec = spec_walk		3845082	0		=			
ANR	3846030	UnaryOperationExpression	* spec		3845082	0					
ANR	3846031	UnaryOperator	*		3845082	0					
ANR	3846032	Identifier	spec		3845082	1					
ANR	3846033	Identifier	spec_walk		3845082	1					
ANR	3846034	ReturnStatement	"return """" ;"	712:6:18045:18054	3845082	4	True				
ANR	3846035	PrimaryExpression	""""""		3845082	0					
ANR	3846036	BreakStatement	break ;	714:5:18068:18073	3845082	1	True				
ANR	3846037	ElseStatement	else		3845082	0					
ANR	3846038	CompoundStatement		217:11:4292:4292	3845082	0					
ANR	3846039	IfStatement	if ( is_callable_error )		3845082	0					
ANR	3846040	Condition	is_callable_error	716:9:18097:18113	3845082	0	True				
ANR	3846041	Identifier	is_callable_error		3845082	0					
ANR	3846042	CompoundStatement		218:28:4322:4322	3845082	1					
ANR	3846043	ExpressionStatement	* severity = E_ERROR	717:6:18124:18143	3845082	0	True				
ANR	3846044	AssignmentExpression	* severity = E_ERROR		3845082	0		=			
ANR	3846045	UnaryOperationExpression	* severity		3845082	0					
ANR	3846046	UnaryOperator	*		3845082	0					
ANR	3846047	Identifier	severity		3845082	1					
ANR	3846048	Identifier	E_ERROR		3845082	1					
ANR	3846049	ExpressionStatement	"zend_spprintf ( error , 0 , ""to be a valid callback, %s"" , is_callable_error )"	718:6:18151:18223	3845082	1	True				
ANR	3846050	CallExpression	"zend_spprintf ( error , 0 , ""to be a valid callback, %s"" , is_callable_error )"		3845082	0					
ANR	3846051	Callee	zend_spprintf		3845082	0					
ANR	3846052	Identifier	zend_spprintf		3845082	0					
ANR	3846053	ArgumentList	error		3845082	1					
ANR	3846054	Argument	error		3845082	0					
ANR	3846055	Identifier	error		3845082	0					
ANR	3846056	Argument	0		3845082	1					
ANR	3846057	PrimaryExpression	0		3845082	0					
ANR	3846058	Argument	"""to be a valid callback, %s"""		3845082	2					
ANR	3846059	PrimaryExpression	"""to be a valid callback, %s"""		3845082	0					
ANR	3846060	Argument	is_callable_error		3845082	3					
ANR	3846061	Identifier	is_callable_error		3845082	0					
ANR	3846062	ExpressionStatement	efree ( is_callable_error )	719:6:18231:18255	3845082	2	True				
ANR	3846063	CallExpression	efree ( is_callable_error )		3845082	0					
ANR	3846064	Callee	efree		3845082	0					
ANR	3846065	Identifier	efree		3845082	0					
ANR	3846066	ArgumentList	is_callable_error		3845082	1					
ANR	3846067	Argument	is_callable_error		3845082	0					
ANR	3846068	Identifier	is_callable_error		3845082	0					
ANR	3846069	ReturnStatement	"return """" ;"	720:6:18263:18272	3845082	3	True				
ANR	3846070	PrimaryExpression	""""""		3845082	0					
ANR	3846071	ElseStatement	else		3845082	0					
ANR	3846072	CompoundStatement		223:12:4492:4492	3845082	0					
ANR	3846073	ReturnStatement	"return ""valid callback"" ;"	722:6:18294:18317	3845082	0	True				
ANR	3846074	PrimaryExpression	"""valid callback"""		3845082	0					
ANR	3846075	Label	case 'z' :	727:2:18340:18348	3845082	44	True				
ANR	3846076	CompoundStatement		230:3:4559:4559	3845082	45					
ANR	3846077	Statement	zval	729:4:18359:18362	3845082	0	True				
ANR	3846078	Statement	*	729:9:18364:18364	3845082	1	True				
ANR	3846079	Statement	*	729:10:18365:18365	3845082	2	True				
ANR	3846080	Statement	p	729:11:18366:18366	3845082	3	True				
ANR	3846081	Statement	=	729:13:18368:18368	3845082	4	True				
ANR	3846082	Statement	va_arg	729:15:18370:18375	3845082	5	True				
ANR	3846083	Statement	(	729:21:18376:18376	3845082	6	True				
ANR	3846084	Statement	*	729:22:18377:18377	3845082	7	True				
ANR	3846085	Statement	va	729:23:18378:18379	3845082	8	True				
ANR	3846086	Statement	","	729:25:18380:18380	3845082	9	True				
ANR	3846087	Statement	zval	729:27:18382:18385	3845082	10	True				
ANR	3846088	Statement	*	729:32:18387:18387	3845082	11	True				
ANR	3846089	Statement	*	729:33:18388:18388	3845082	12	True				
ANR	3846090	Statement	)	729:34:18389:18389	3845082	13	True				
ANR	3846091	ExpressionStatement		729:35:18390:18390	3845082	14	True				
ANR	3846092	ExpressionStatement	"zend_parse_arg_zval_deref ( real_arg , p , check_null )"	731:4:18397:18447	3845082	15	True				
ANR	3846093	CallExpression	"zend_parse_arg_zval_deref ( real_arg , p , check_null )"		3845082	0					
ANR	3846094	Callee	zend_parse_arg_zval_deref		3845082	0					
ANR	3846095	Identifier	zend_parse_arg_zval_deref		3845082	0					
ANR	3846096	ArgumentList	real_arg		3845082	1					
ANR	3846097	Argument	real_arg		3845082	0					
ANR	3846098	Identifier	real_arg		3845082	0					
ANR	3846099	Argument	p		3845082	1					
ANR	3846100	Identifier	p		3845082	0					
ANR	3846101	Argument	check_null		3845082	2					
ANR	3846102	Identifier	check_null		3845082	0					
ANR	3846103	BreakStatement	break ;	733:3:18457:18462	3845082	46	True				
ANR	3846104	Label	case 'Z' :	735:2:18467:18475	3845082	47	True				
ANR	3846105	ExpressionStatement	ZEND_ASSERT ( c != 'Z' )	737:3:18550:18571	3845082	48	True				
ANR	3846106	CallExpression	ZEND_ASSERT ( c != 'Z' )		3845082	0					
ANR	3846107	Callee	ZEND_ASSERT		3845082	0					
ANR	3846108	Identifier	ZEND_ASSERT		3845082	0					
ANR	3846109	ArgumentList	c != 'Z'		3845082	1					
ANR	3846110	Argument	c != 'Z'		3845082	0					
ANR	3846111	EqualityExpression	c != 'Z'		3845082	0		!=			
ANR	3846112	Identifier	c		3845082	0					
ANR	3846113	PrimaryExpression	'Z'		3845082	1					
ANR	3846114	Label	default :	738:2:18575:18582	3845082	49	True				
ANR	3846115	Identifier	default		3845082	0					
ANR	3846116	ReturnStatement	"return ""unknown"" ;"	739:3:18587:18603	3845082	50	True				
ANR	3846117	PrimaryExpression	"""unknown"""		3845082	0					
ANR	3846118	ExpressionStatement	* spec = spec_walk	742:1:18610:18627	3845082	7	True				
ANR	3846119	AssignmentExpression	* spec = spec_walk		3845082	0		=			
ANR	3846120	UnaryOperationExpression	* spec		3845082	0					
ANR	3846121	UnaryOperator	*		3845082	0					
ANR	3846122	Identifier	spec		3845082	1					
ANR	3846123	Identifier	spec_walk		3845082	1					
ANR	3846124	ReturnStatement	return NULL ;	744:1:18631:18642	3845082	8	True				
ANR	3846125	Identifier	NULL		3845082	0					
ANR	3846126	ReturnType	static const char *		3845082	1					
ANR	3846127	Identifier	zend_parse_arg_impl		3845082	2					
ANR	3846128	ParameterList	"int arg_num , zval * arg , va_list * va , const char * * spec , char * * error , int * severity"		3845082	3					
ANR	3846129	Parameter	int arg_num	498:39:13698:13708	3845082	0	True				
ANR	3846130	ParameterType	int		3845082	0					
ANR	3846131	Identifier	arg_num		3845082	1					
ANR	3846132	Parameter	zval * arg	498:52:13711:13719	3845082	1	True				
ANR	3846133	ParameterType	zval *		3845082	0					
ANR	3846134	Identifier	arg		3845082	1					
ANR	3846135	Parameter	va_list * va	498:63:13722:13732	3845082	2	True				
ANR	3846136	ParameterType	va_list *		3845082	0					
ANR	3846137	Identifier	va		3845082	1					
ANR	3846138	Parameter	const char * * spec	498:76:13735:13751	3845082	3	True				
ANR	3846139	ParameterType	const char * *		3845082	0					
ANR	3846140	Identifier	spec		3845082	1					
ANR	3846141	Parameter	char * * error	498:95:13754:13765	3845082	4	True				
ANR	3846142	ParameterType	char * *		3845082	0					
ANR	3846143	Identifier	error		3845082	1					
ANR	3846144	Parameter	int * severity	498:109:13768:13780	3845082	5	True				
ANR	3846145	ParameterType	int *		3845082	0					
ANR	3846146	Identifier	severity		3845082	1					
ANR	3846147	CFGEntryNode	ENTRY		3845082		True				
ANR	3846148	CFGExitNode	EXIT		3845082		True				
ANR	3846149	Symbol	arg_num		3845082						
ANR	3846150	Symbol	* severity		3845082						
ANR	3846151	Symbol	* spec_walk ++		3845082						
ANR	3846152	Symbol	ce_base -> name		3845082						
ANR	3846153	Symbol	* fci		3845082						
ANR	3846154	Symbol	zend_parse_arg_array_ht		3845082						
ANR	3846155	Symbol	* ce		3845082						
ANR	3846156	Symbol	spec		3845082						
ANR	3846157	Symbol	* fcc		3845082						
ANR	3846158	Symbol	zend_parse_arg_bool		3845082						
ANR	3846159	Symbol	zend_parse_arg_double		3845082						
ANR	3846160	Symbol	ce -> name		3845082						
ANR	3846161	Symbol	NULL		3845082						
ANR	3846162	Symbol	zend_parse_arg_string		3845082						
ANR	3846163	Symbol	zend_parse_arg_array		3845082						
ANR	3846164	Symbol	va		3845082						
ANR	3846165	Symbol	zend_lookup_class		3845082						
ANR	3846166	Symbol	str		3845082						
ANR	3846167	Symbol	* ce_base		3845082						
ANR	3846168	Symbol	E_DEPRECATED		3845082						
ANR	3846169	Symbol	spec_walk		3845082						
ANR	3846170	Symbol	Z_STR_P		3845082						
ANR	3846171	Symbol	* pce		3845082						
ANR	3846172	Symbol	zend_parse_arg_long		3845082						
ANR	3846173	Symbol	instanceof_function		3845082						
ANR	3846174	Symbol	zend_parse_arg_str		3845082						
ANR	3846175	Symbol	is_callable_error		3845082						
ANR	3846176	Symbol	ce_base		3845082						
ANR	3846177	Symbol	& is_callable_error		3845082						
ANR	3846178	Symbol	zend_fcall_info_init		3845082						
ANR	3846179	Symbol	check_null		3845082						
ANR	3846180	Symbol	fci -> size		3845082						
ANR	3846181	Symbol	fcc		3845082						
ANR	3846182	Symbol	error		3845082						
ANR	3846183	Symbol	zend_parse_arg_path		3845082						
ANR	3846184	Symbol	fci		3845082						
ANR	3846185	Symbol	zend_parse_arg_path_str		3845082						
ANR	3846186	Symbol	pce		3845082						
ANR	3846187	Symbol	IS_NULL		3845082						
ANR	3846188	Symbol	* spec		3845082						
ANR	3846189	Symbol	arg		3845082						
ANR	3846190	Symbol	fcc -> initialized		3845082						
ANR	3846191	Symbol	severity		3845082						
ANR	3846192	Symbol	lookup		3845082						
ANR	3846193	Symbol	ce		3845082						
ANR	3846194	Symbol	c		3845082						
ANR	3846195	Symbol	SUCCESS		3845082						
ANR	3846196	Symbol	is_null		3845082						
ANR	3846197	Symbol	zend_parse_arg_resource		3845082						
ANR	3846198	Symbol	zend_parse_arg_object		3845082						
ANR	3846199	Symbol	Z_TYPE_P		3845082						
ANR	3846200	Symbol	Z_STRVAL_P		3845082						
ANR	3846201	Symbol	ZSTR_VAL		3845082						
ANR	3846202	Symbol	p		3845082						
ANR	3846203	Symbol	E_ERROR		3845082						
ANR	3846204	Symbol	real_arg		3845082						
ANR	3846205	Symbol	* spec_walk		3845082						
ANR	3846206	Symbol	pl		3845082						
ANR	3846207	Function	zend_parse_arg	748:0:18657:19697							
ANR	3846208	FunctionDef	"zend_parse_arg (int arg_num , zval * arg , va_list * va , const char * * spec , int flags)"		3846207	0					
ANR	3846209	CompoundStatement		749:0:18760:19697	3846207	0					
ANR	3846210	IdentifierDeclStatement	const char * expected_type = NULL ;	750:1:18763:18795	3846207	0	True				
ANR	3846211	IdentifierDecl	* expected_type = NULL		3846207	0					
ANR	3846212	IdentifierDeclType	const char *		3846207	0					
ANR	3846213	Identifier	expected_type		3846207	1					
ANR	3846214	AssignmentExpression	* expected_type = NULL		3846207	2		=			
ANR	3846215	Identifier	NULL		3846207	0					
ANR	3846216	Identifier	NULL		3846207	1					
ANR	3846217	IdentifierDeclStatement	char * error = NULL ;	751:1:18798:18816	3846207	1	True				
ANR	3846218	IdentifierDecl	* error = NULL		3846207	0					
ANR	3846219	IdentifierDeclType	char *		3846207	0					
ANR	3846220	Identifier	error		3846207	1					
ANR	3846221	AssignmentExpression	* error = NULL		3846207	2		=			
ANR	3846222	Identifier	NULL		3846207	0					
ANR	3846223	Identifier	NULL		3846207	1					
ANR	3846224	IdentifierDeclStatement	int severity = 0 ;	752:1:18819:18835	3846207	2	True				
ANR	3846225	IdentifierDecl	severity = 0		3846207	0					
ANR	3846226	IdentifierDeclType	int		3846207	0					
ANR	3846227	Identifier	severity		3846207	1					
ANR	3846228	AssignmentExpression	severity = 0		3846207	2		=			
ANR	3846229	Identifier	severity		3846207	0					
ANR	3846230	PrimaryExpression	0		3846207	1					
ANR	3846231	ExpressionStatement	"expected_type = zend_parse_arg_impl ( arg_num , arg , va , spec , & error , & severity )"	754:1:18839:18917	3846207	3	True				
ANR	3846232	AssignmentExpression	"expected_type = zend_parse_arg_impl ( arg_num , arg , va , spec , & error , & severity )"		3846207	0		=			
ANR	3846233	Identifier	expected_type		3846207	0					
ANR	3846234	CallExpression	"zend_parse_arg_impl ( arg_num , arg , va , spec , & error , & severity )"		3846207	1					
ANR	3846235	Callee	zend_parse_arg_impl		3846207	0					
ANR	3846236	Identifier	zend_parse_arg_impl		3846207	0					
ANR	3846237	ArgumentList	arg_num		3846207	1					
ANR	3846238	Argument	arg_num		3846207	0					
ANR	3846239	Identifier	arg_num		3846207	0					
ANR	3846240	Argument	arg		3846207	1					
ANR	3846241	Identifier	arg		3846207	0					
ANR	3846242	Argument	va		3846207	2					
ANR	3846243	Identifier	va		3846207	0					
ANR	3846244	Argument	spec		3846207	3					
ANR	3846245	Identifier	spec		3846207	0					
ANR	3846246	Argument	& error		3846207	4					
ANR	3846247	UnaryOperationExpression	& error		3846207	0					
ANR	3846248	UnaryOperator	&		3846207	0					
ANR	3846249	Identifier	error		3846207	1					
ANR	3846250	Argument	& severity		3846207	5					
ANR	3846251	UnaryOperationExpression	& severity		3846207	0					
ANR	3846252	UnaryOperator	&		3846207	0					
ANR	3846253	Identifier	severity		3846207	1					
ANR	3846254	IfStatement	if ( expected_type )		3846207	4					
ANR	3846255	Condition	expected_type	755:5:18924:18936	3846207	0	True				
ANR	3846256	Identifier	expected_type		3846207	0					
ANR	3846257	CompoundStatement		7:20:178:178	3846207	1					
ANR	3846258	IfStatement	if ( ! ( flags & ZEND_PARSE_PARAMS_QUIET ) && ( * expected_type || error ) )		3846207	0					
ANR	3846259	Condition	! ( flags & ZEND_PARSE_PARAMS_QUIET ) && ( * expected_type || error )	756:6:18947:19009	3846207	0	True				
ANR	3846260	AndExpression	! ( flags & ZEND_PARSE_PARAMS_QUIET ) && ( * expected_type || error )		3846207	0		&&			
ANR	3846261	UnaryOperationExpression	! ( flags & ZEND_PARSE_PARAMS_QUIET )		3846207	0					
ANR	3846262	UnaryOperator	!		3846207	0					
ANR	3846263	BitAndExpression	flags & ZEND_PARSE_PARAMS_QUIET		3846207	1		&			
ANR	3846264	Identifier	flags		3846207	0					
ANR	3846265	Identifier	ZEND_PARSE_PARAMS_QUIET		3846207	1					
ANR	3846266	OrExpression	* expected_type || error		3846207	1		||			
ANR	3846267	UnaryOperationExpression	* expected_type		3846207	0					
ANR	3846268	UnaryOperator	*		3846207	0					
ANR	3846269	Identifier	expected_type		3846207	1					
ANR	3846270	Identifier	error		3846207	1					
ANR	3846271	CompoundStatement		11:3:337:434	3846207	1					
ANR	3846272	IdentifierDeclStatement	const char * space ;	757:3:19017:19034	3846207	0	True				
ANR	3846273	IdentifierDecl	* space		3846207	0					
ANR	3846274	IdentifierDeclType	const char *		3846207	0					
ANR	3846275	Identifier	space		3846207	1					
ANR	3846276	IdentifierDeclStatement	const char * class_name = get_active_class_name ( & space ) ;	758:3:19039:19093	3846207	1	True				
ANR	3846277	IdentifierDecl	* class_name = get_active_class_name ( & space )		3846207	0					
ANR	3846278	IdentifierDeclType	const char *		3846207	0					
ANR	3846279	Identifier	class_name		3846207	1					
ANR	3846280	AssignmentExpression	* class_name = get_active_class_name ( & space )		3846207	2		=			
ANR	3846281	Identifier	class_name		3846207	0					
ANR	3846282	CallExpression	get_active_class_name ( & space )		3846207	1					
ANR	3846283	Callee	get_active_class_name		3846207	0					
ANR	3846284	Identifier	get_active_class_name		3846207	0					
ANR	3846285	ArgumentList	& space		3846207	1					
ANR	3846286	Argument	& space		3846207	0					
ANR	3846287	UnaryOperationExpression	& space		3846207	0					
ANR	3846288	UnaryOperator	&		3846207	0					
ANR	3846289	Identifier	space		3846207	1					
ANR	3846290	IdentifierDeclStatement	zend_bool throw_exception = ZEND_ARG_USES_STRICT_TYPES ( ) || ( flags & ZEND_PARSE_PARAMS_THROW ) ;	759:3:19098:19195	3846207	2	True				
ANR	3846291	IdentifierDecl	throw_exception = ZEND_ARG_USES_STRICT_TYPES ( ) || ( flags & ZEND_PARSE_PARAMS_THROW )		3846207	0					
ANR	3846292	IdentifierDeclType	zend_bool		3846207	0					
ANR	3846293	Identifier	throw_exception		3846207	1					
ANR	3846294	AssignmentExpression	throw_exception = ZEND_ARG_USES_STRICT_TYPES ( ) || ( flags & ZEND_PARSE_PARAMS_THROW )		3846207	2		=			
ANR	3846295	Identifier	throw_exception		3846207	0					
ANR	3846296	OrExpression	ZEND_ARG_USES_STRICT_TYPES ( ) || ( flags & ZEND_PARSE_PARAMS_THROW )		3846207	1		||			
ANR	3846297	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3846207	0					
ANR	3846298	Callee	ZEND_ARG_USES_STRICT_TYPES		3846207	0					
ANR	3846299	Identifier	ZEND_ARG_USES_STRICT_TYPES		3846207	0					
ANR	3846300	ArgumentList			3846207	1					
ANR	3846301	BitAndExpression	flags & ZEND_PARSE_PARAMS_THROW		3846207	1		&			
ANR	3846302	Identifier	flags		3846207	0					
ANR	3846303	Identifier	ZEND_PARSE_PARAMS_THROW		3846207	1					
ANR	3846304	IfStatement	if ( error )		3846207	3					
ANR	3846305	Condition	error	762:7:19205:19209	3846207	0	True				
ANR	3846306	Identifier	error		3846207	0					
ANR	3846307	CompoundStatement		14:14:451:451	3846207	1					
ANR	3846308	ExpressionStatement	"zend_internal_type_error ( throw_exception , ""%s%s%s() expects parameter %d %s"" , class_name , space , get_active_function_name ( ) , arg_num , error )"	763:4:19218:19364	3846207	0	True				
ANR	3846309	CallExpression	"zend_internal_type_error ( throw_exception , ""%s%s%s() expects parameter %d %s"" , class_name , space , get_active_function_name ( ) , arg_num , error )"		3846207	0					
ANR	3846310	Callee	zend_internal_type_error		3846207	0					
ANR	3846311	Identifier	zend_internal_type_error		3846207	0					
ANR	3846312	ArgumentList	throw_exception		3846207	1					
ANR	3846313	Argument	throw_exception		3846207	0					
ANR	3846314	Identifier	throw_exception		3846207	0					
ANR	3846315	Argument	"""%s%s%s() expects parameter %d %s"""		3846207	1					
ANR	3846316	PrimaryExpression	"""%s%s%s() expects parameter %d %s"""		3846207	0					
ANR	3846317	Argument	class_name		3846207	2					
ANR	3846318	Identifier	class_name		3846207	0					
ANR	3846319	Argument	space		3846207	3					
ANR	3846320	Identifier	space		3846207	0					
ANR	3846321	Argument	get_active_function_name ( )		3846207	4					
ANR	3846322	CallExpression	get_active_function_name ( )		3846207	0					
ANR	3846323	Callee	get_active_function_name		3846207	0					
ANR	3846324	Identifier	get_active_function_name		3846207	0					
ANR	3846325	ArgumentList			3846207	1					
ANR	3846326	Argument	arg_num		3846207	5					
ANR	3846327	Identifier	arg_num		3846207	0					
ANR	3846328	Argument	error		3846207	6					
ANR	3846329	Identifier	error		3846207	0					
ANR	3846330	ExpressionStatement	efree ( error )	765:4:19370:19382	3846207	1	True				
ANR	3846331	CallExpression	efree ( error )		3846207	0					
ANR	3846332	Callee	efree		3846207	0					
ANR	3846333	Identifier	efree		3846207	0					
ANR	3846334	ArgumentList	error		3846207	1					
ANR	3846335	Argument	error		3846207	0					
ANR	3846336	Identifier	error		3846207	0					
ANR	3846337	ElseStatement	else		3846207	0					
ANR	3846338	CompoundStatement		18:10:633:633	3846207	0					
ANR	3846339	ExpressionStatement	"zend_internal_type_error ( throw_exception , ""%s%s%s() expects parameter %d to be %s, %s given"" , class_name , space , get_active_function_name ( ) , arg_num , expected_type , zend_zval_type_name ( arg ) )"	767:4:19400:19608	3846207	0	True				
ANR	3846340	CallExpression	"zend_internal_type_error ( throw_exception , ""%s%s%s() expects parameter %d to be %s, %s given"" , class_name , space , get_active_function_name ( ) , arg_num , expected_type , zend_zval_type_name ( arg ) )"		3846207	0					
ANR	3846341	Callee	zend_internal_type_error		3846207	0					
ANR	3846342	Identifier	zend_internal_type_error		3846207	0					
ANR	3846343	ArgumentList	throw_exception		3846207	1					
ANR	3846344	Argument	throw_exception		3846207	0					
ANR	3846345	Identifier	throw_exception		3846207	0					
ANR	3846346	Argument	"""%s%s%s() expects parameter %d to be %s, %s given"""		3846207	1					
ANR	3846347	PrimaryExpression	"""%s%s%s() expects parameter %d to be %s, %s given"""		3846207	0					
ANR	3846348	Argument	class_name		3846207	2					
ANR	3846349	Identifier	class_name		3846207	0					
ANR	3846350	Argument	space		3846207	3					
ANR	3846351	Identifier	space		3846207	0					
ANR	3846352	Argument	get_active_function_name ( )		3846207	4					
ANR	3846353	CallExpression	get_active_function_name ( )		3846207	0					
ANR	3846354	Callee	get_active_function_name		3846207	0					
ANR	3846355	Identifier	get_active_function_name		3846207	0					
ANR	3846356	ArgumentList			3846207	1					
ANR	3846357	Argument	arg_num		3846207	5					
ANR	3846358	Identifier	arg_num		3846207	0					
ANR	3846359	Argument	expected_type		3846207	6					
ANR	3846360	Identifier	expected_type		3846207	0					
ANR	3846361	Argument	zend_zval_type_name ( arg )		3846207	7					
ANR	3846362	CallExpression	zend_zval_type_name ( arg )		3846207	0					
ANR	3846363	Callee	zend_zval_type_name		3846207	0					
ANR	3846364	Identifier	zend_zval_type_name		3846207	0					
ANR	3846365	ArgumentList	arg		3846207	1					
ANR	3846366	Argument	arg		3846207	0					
ANR	3846367	Identifier	arg		3846207	0					
ANR	3846368	IfStatement	if ( severity != E_DEPRECATED )		3846207	1					
ANR	3846369	Condition	severity != E_DEPRECATED	773:6:19625:19648	3846207	0	True				
ANR	3846370	EqualityExpression	severity != E_DEPRECATED		3846207	0		!=			
ANR	3846371	Identifier	severity		3846207	0					
ANR	3846372	Identifier	E_DEPRECATED		3846207	1					
ANR	3846373	CompoundStatement		25:32:890:890	3846207	1					
ANR	3846374	ReturnStatement	return FAILURE ;	774:3:19656:19670	3846207	0	True				
ANR	3846375	Identifier	FAILURE		3846207	0					
ANR	3846376	ReturnStatement	return SUCCESS ;	778:1:19681:19695	3846207	5	True				
ANR	3846377	Identifier	SUCCESS		3846207	0					
ANR	3846378	ReturnType	static int		3846207	1					
ANR	3846379	Identifier	zend_parse_arg		3846207	2					
ANR	3846380	ParameterList	"int arg_num , zval * arg , va_list * va , const char * * spec , int flags"		3846207	3					
ANR	3846381	Parameter	int arg_num	748:26:18683:18693	3846207	0	True				
ANR	3846382	ParameterType	int		3846207	0					
ANR	3846383	Identifier	arg_num		3846207	1					
ANR	3846384	Parameter	zval * arg	748:39:18696:18704	3846207	1	True				
ANR	3846385	ParameterType	zval *		3846207	0					
ANR	3846386	Identifier	arg		3846207	1					
ANR	3846387	Parameter	va_list * va	748:50:18707:18717	3846207	2	True				
ANR	3846388	ParameterType	va_list *		3846207	0					
ANR	3846389	Identifier	va		3846207	1					
ANR	3846390	Parameter	const char * * spec	748:63:18720:18736	3846207	3	True				
ANR	3846391	ParameterType	const char * *		3846207	0					
ANR	3846392	Identifier	spec		3846207	1					
ANR	3846393	Parameter	int flags	748:82:18739:18747	3846207	4	True				
ANR	3846394	ParameterType	int		3846207	0					
ANR	3846395	Identifier	flags		3846207	1					
ANR	3846396	CFGEntryNode	ENTRY		3846207		True				
ANR	3846397	CFGExitNode	EXIT		3846207		True				
ANR	3846398	Symbol	arg_num		3846207						
ANR	3846399	Symbol	& error		3846207						
ANR	3846400	Symbol	zend_parse_arg_impl		3846207						
ANR	3846401	Symbol	flags		3846207						
ANR	3846402	Symbol	expected_type		3846207						
ANR	3846403	Symbol	* expected_type		3846207						
ANR	3846404	Symbol	error		3846207						
ANR	3846405	Symbol	get_active_class_name		3846207						
ANR	3846406	Symbol	zend_zval_type_name		3846207						
ANR	3846407	Symbol	spec		3846207						
ANR	3846408	Symbol	space		3846207						
ANR	3846409	Symbol	ZEND_PARSE_PARAMS_THROW		3846207						
ANR	3846410	Symbol	arg		3846207						
ANR	3846411	Symbol	& space		3846207						
ANR	3846412	Symbol	class_name		3846207						
ANR	3846413	Symbol	severity		3846207						
ANR	3846414	Symbol	ZEND_ARG_USES_STRICT_TYPES		3846207						
ANR	3846415	Symbol	NULL		3846207						
ANR	3846416	Symbol	SUCCESS		3846207						
ANR	3846417	Symbol	& severity		3846207						
ANR	3846418	Symbol	get_active_function_name		3846207						
ANR	3846419	Symbol	va		3846207						
ANR	3846420	Symbol	FAILURE		3846207						
ANR	3846421	Symbol	throw_exception		3846207						
ANR	3846422	Symbol	E_DEPRECATED		3846207						
ANR	3846423	Symbol	ZEND_PARSE_PARAMS_QUIET		3846207						
ANR	3846424	Function	zend_parse_parameter	782:0:19710:19932							
ANR	3846425	FunctionDef	"zend_parse_parameter (int flags , int arg_num , zval * arg , const char * spec)"		3846424	0					
ANR	3846426	CompoundStatement		783:0:19802:19932	3846424	0					
ANR	3846427	IdentifierDeclStatement	va_list va ;	784:1:19805:19815	3846424	0	True				
ANR	3846428	IdentifierDecl	va		3846424	0					
ANR	3846429	IdentifierDeclType	va_list		3846424	0					
ANR	3846430	Identifier	va		3846424	1					
ANR	3846431	IdentifierDeclStatement	int ret ;	785:1:19818:19825	3846424	1	True				
ANR	3846432	IdentifierDecl	ret		3846424	0					
ANR	3846433	IdentifierDeclType	int		3846424	0					
ANR	3846434	Identifier	ret		3846424	1					
ANR	3846435	ExpressionStatement	"va_start ( va , spec )"	787:1:19829:19847	3846424	2	True				
ANR	3846436	CallExpression	"va_start ( va , spec )"		3846424	0					
ANR	3846437	Callee	va_start		3846424	0					
ANR	3846438	Identifier	va_start		3846424	0					
ANR	3846439	ArgumentList	va		3846424	1					
ANR	3846440	Argument	va		3846424	0					
ANR	3846441	Identifier	va		3846424	0					
ANR	3846442	Argument	spec		3846424	1					
ANR	3846443	Identifier	spec		3846424	0					
ANR	3846444	ExpressionStatement	"ret = zend_parse_arg ( arg_num , arg , & va , & spec , flags )"	788:1:19850:19903	3846424	3	True				
ANR	3846445	AssignmentExpression	"ret = zend_parse_arg ( arg_num , arg , & va , & spec , flags )"		3846424	0		=			
ANR	3846446	Identifier	ret		3846424	0					
ANR	3846447	CallExpression	"zend_parse_arg ( arg_num , arg , & va , & spec , flags )"		3846424	1					
ANR	3846448	Callee	zend_parse_arg		3846424	0					
ANR	3846449	Identifier	zend_parse_arg		3846424	0					
ANR	3846450	ArgumentList	arg_num		3846424	1					
ANR	3846451	Argument	arg_num		3846424	0					
ANR	3846452	Identifier	arg_num		3846424	0					
ANR	3846453	Argument	arg		3846424	1					
ANR	3846454	Identifier	arg		3846424	0					
ANR	3846455	Argument	& va		3846424	2					
ANR	3846456	UnaryOperationExpression	& va		3846424	0					
ANR	3846457	UnaryOperator	&		3846424	0					
ANR	3846458	Identifier	va		3846424	1					
ANR	3846459	Argument	& spec		3846424	3					
ANR	3846460	UnaryOperationExpression	& spec		3846424	0					
ANR	3846461	UnaryOperator	&		3846424	0					
ANR	3846462	Identifier	spec		3846424	1					
ANR	3846463	Argument	flags		3846424	4					
ANR	3846464	Identifier	flags		3846424	0					
ANR	3846465	ExpressionStatement	va_end ( va )	789:1:19906:19916	3846424	4	True				
ANR	3846466	CallExpression	va_end ( va )		3846424	0					
ANR	3846467	Callee	va_end		3846424	0					
ANR	3846468	Identifier	va_end		3846424	0					
ANR	3846469	ArgumentList	va		3846424	1					
ANR	3846470	Argument	va		3846424	0					
ANR	3846471	Identifier	va		3846424	0					
ANR	3846472	ReturnStatement	return ret ;	791:1:19920:19930	3846424	5	True				
ANR	3846473	Identifier	ret		3846424	0					
ANR	3846474	ReturnType	ZEND_API int		3846424	1					
ANR	3846475	Identifier	zend_parse_parameter		3846424	2					
ANR	3846476	ParameterList	"int flags , int arg_num , zval * arg , const char * spec"		3846424	3					
ANR	3846477	Parameter	int flags	782:34:19744:19752	3846424	0	True				
ANR	3846478	ParameterType	int		3846424	0					
ANR	3846479	Identifier	flags		3846424	1					
ANR	3846480	Parameter	int arg_num	782:45:19755:19765	3846424	1	True				
ANR	3846481	ParameterType	int		3846424	0					
ANR	3846482	Identifier	arg_num		3846424	1					
ANR	3846483	Parameter	zval * arg	782:58:19768:19776	3846424	2	True				
ANR	3846484	ParameterType	zval *		3846424	0					
ANR	3846485	Identifier	arg		3846424	1					
ANR	3846486	Parameter	const char * spec	782:69:19779:19794	3846424	3	True				
ANR	3846487	ParameterType	const char *		3846424	0					
ANR	3846488	Identifier	spec		3846424	1					
ANR	3846489	CFGEntryNode	ENTRY		3846424		True				
ANR	3846490	CFGExitNode	EXIT		3846424		True				
ANR	3846491	Symbol	arg_num		3846424						
ANR	3846492	Symbol	ret		3846424						
ANR	3846493	Symbol	& va		3846424						
ANR	3846494	Symbol	& spec		3846424						
ANR	3846495	Symbol	arg		3846424						
ANR	3846496	Symbol	flags		3846424						
ANR	3846497	Symbol	va		3846424						
ANR	3846498	Symbol	zend_parse_arg		3846424						
ANR	3846499	Symbol	spec		3846424						
ANR	3846500	Function	zend_parse_parameters_debug_error	794:0:19935:20337							
ANR	3846501	FunctionDef	zend_parse_parameters_debug_error (const char * msg)		3846500	0					
ANR	3846502	CompoundStatement		794:73:20008:20337	3846500	0					
ANR	3846503	IdentifierDeclStatement	zend_function * active_function = EG ( current_execute_data ) -> func ;	795:1:20011:20074	3846500	0	True				
ANR	3846504	IdentifierDecl	* active_function = EG ( current_execute_data ) -> func		3846500	0					
ANR	3846505	IdentifierDeclType	zend_function *		3846500	0					
ANR	3846506	Identifier	active_function		3846500	1					
ANR	3846507	AssignmentExpression	* active_function = EG ( current_execute_data ) -> func		3846500	2		=			
ANR	3846508	Identifier	active_function		3846500	0					
ANR	3846509	PtrMemberAccess	EG ( current_execute_data ) -> func		3846500	1					
ANR	3846510	CallExpression	EG ( current_execute_data )		3846500	0					
ANR	3846511	Callee	EG		3846500	0					
ANR	3846512	Identifier	EG		3846500	0					
ANR	3846513	ArgumentList	current_execute_data		3846500	1					
ANR	3846514	Argument	current_execute_data		3846500	0					
ANR	3846515	Identifier	current_execute_data		3846500	0					
ANR	3846516	Identifier	func		3846500	1					
ANR	3846517	IdentifierDeclStatement	"const char * class_name = active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """" ;"	796:1:20077:20186	3846500	1	True				
ANR	3846518	IdentifierDecl	"* class_name = active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """""		3846500	0					
ANR	3846519	IdentifierDeclType	const char *		3846500	0					
ANR	3846520	Identifier	class_name		3846500	1					
ANR	3846521	AssignmentExpression	"* class_name = active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """""		3846500	2		=			
ANR	3846522	Identifier	class_name		3846500	0					
ANR	3846523	ConditionalExpression	"active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """""		3846500	1					
ANR	3846524	Condition	active_function -> common . scope		3846500	0					
ANR	3846525	MemberAccess	active_function -> common . scope		3846500	0					
ANR	3846526	PtrMemberAccess	active_function -> common		3846500	0					
ANR	3846527	Identifier	active_function		3846500	0					
ANR	3846528	Identifier	common		3846500	1					
ANR	3846529	Identifier	scope		3846500	1					
ANR	3846530	CallExpression	ZSTR_VAL ( active_function -> common . scope -> name )		3846500	1					
ANR	3846531	Callee	ZSTR_VAL		3846500	0					
ANR	3846532	Identifier	ZSTR_VAL		3846500	0					
ANR	3846533	ArgumentList	active_function -> common . scope -> name		3846500	1					
ANR	3846534	Argument	active_function -> common . scope -> name		3846500	0					
ANR	3846535	PtrMemberAccess	active_function -> common . scope -> name		3846500	0					
ANR	3846536	MemberAccess	active_function -> common . scope		3846500	0					
ANR	3846537	PtrMemberAccess	active_function -> common		3846500	0					
ANR	3846538	Identifier	active_function		3846500	0					
ANR	3846539	Identifier	common		3846500	1					
ANR	3846540	Identifier	scope		3846500	1					
ANR	3846541	Identifier	name		3846500	1					
ANR	3846542	PrimaryExpression	""""""		3846500	2					
ANR	3846543	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""%s%s%s(): %s"" , class_name , class_name [ 0 ] ? ""::"" : """" , ZSTR_VAL ( active_function -> common . function_name ) , msg )"	798:1:20189:20335	3846500	2	True				
ANR	3846544	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""%s%s%s(): %s"" , class_name , class_name [ 0 ] ? ""::"" : """" , ZSTR_VAL ( active_function -> common . function_name ) , msg )"		3846500	0					
ANR	3846545	Callee	zend_error_noreturn		3846500	0					
ANR	3846546	Identifier	zend_error_noreturn		3846500	0					
ANR	3846547	ArgumentList	E_CORE_ERROR		3846500	1					
ANR	3846548	Argument	E_CORE_ERROR		3846500	0					
ANR	3846549	Identifier	E_CORE_ERROR		3846500	0					
ANR	3846550	Argument	"""%s%s%s(): %s"""		3846500	1					
ANR	3846551	PrimaryExpression	"""%s%s%s(): %s"""		3846500	0					
ANR	3846552	Argument	class_name		3846500	2					
ANR	3846553	Identifier	class_name		3846500	0					
ANR	3846554	Argument	"class_name [ 0 ] ? ""::"" : """""		3846500	3					
ANR	3846555	ConditionalExpression	"class_name [ 0 ] ? ""::"" : """""		3846500	0					
ANR	3846556	Condition	class_name [ 0 ]		3846500	0					
ANR	3846557	ArrayIndexing	class_name [ 0 ]		3846500	0					
ANR	3846558	Identifier	class_name		3846500	0					
ANR	3846559	PrimaryExpression	0		3846500	1					
ANR	3846560	PrimaryExpression	"""::"""		3846500	1					
ANR	3846561	PrimaryExpression	""""""		3846500	2					
ANR	3846562	Argument	ZSTR_VAL ( active_function -> common . function_name )		3846500	4					
ANR	3846563	CallExpression	ZSTR_VAL ( active_function -> common . function_name )		3846500	0					
ANR	3846564	Callee	ZSTR_VAL		3846500	0					
ANR	3846565	Identifier	ZSTR_VAL		3846500	0					
ANR	3846566	ArgumentList	active_function -> common . function_name		3846500	1					
ANR	3846567	Argument	active_function -> common . function_name		3846500	0					
ANR	3846568	MemberAccess	active_function -> common . function_name		3846500	0					
ANR	3846569	PtrMemberAccess	active_function -> common		3846500	0					
ANR	3846570	Identifier	active_function		3846500	0					
ANR	3846571	Identifier	common		3846500	1					
ANR	3846572	Identifier	function_name		3846500	1					
ANR	3846573	Argument	msg		3846500	5					
ANR	3846574	Identifier	msg		3846500	0					
ANR	3846575	ReturnType	static ZEND_COLD void		3846500	1					
ANR	3846576	Identifier	zend_parse_parameters_debug_error		3846500	2					
ANR	3846577	ParameterList	const char * msg		3846500	3					
ANR	3846578	Parameter	const char * msg	794:56:19991:20005	3846500	0	True				
ANR	3846579	ParameterType	const char *		3846500	0					
ANR	3846580	Identifier	msg		3846500	1					
ANR	3846581	CFGEntryNode	ENTRY		3846500		True				
ANR	3846582	CFGExitNode	EXIT		3846500		True				
ANR	3846583	Symbol	msg		3846500						
ANR	3846584	Symbol	EG		3846500						
ANR	3846585	Symbol	* * active_function		3846500						
ANR	3846586	Symbol	* class_name		3846500						
ANR	3846587	Symbol	active_function -> common . scope -> name		3846500						
ANR	3846588	Symbol	EG ( current_execute_data ) -> func		3846500						
ANR	3846589	Symbol	active_function -> common . function_name		3846500						
ANR	3846590	Symbol	current_execute_data		3846500						
ANR	3846591	Symbol	* EG		3846500						
ANR	3846592	Symbol	* active_function -> common		3846500						
ANR	3846593	Symbol	active_function -> common		3846500						
ANR	3846594	Symbol	active_function		3846500						
ANR	3846595	Symbol	* active_function		3846500						
ANR	3846596	Symbol	active_function -> common . scope		3846500						
ANR	3846597	Symbol	ZSTR_VAL		3846500						
ANR	3846598	Symbol	E_CORE_ERROR		3846500						
ANR	3846599	Symbol	* active_function -> common . scope		3846500						
ANR	3846600	Symbol	class_name		3846500						
ANR	3846601	Function	zend_parse_va_args	803:0:20340:23856							
ANR	3846602	FunctionDef	"zend_parse_va_args (int num_args , const char * type_spec , va_list * va , int flags)"		3846601	0					
ANR	3846603	CompoundStatement		804:0:20441:23856	3846601	0					
ANR	3846604	IdentifierDeclStatement	const char * spec_walk ;	805:1:20444:20466	3846601	0	True				
ANR	3846605	IdentifierDecl	* spec_walk		3846601	0					
ANR	3846606	IdentifierDeclType	const char *		3846601	0					
ANR	3846607	Identifier	spec_walk		3846601	1					
ANR	3846608	IdentifierDeclStatement	"int c , i ;"	806:1:20469:20477	3846601	1	True				
ANR	3846609	IdentifierDecl	c		3846601	0					
ANR	3846610	IdentifierDeclType	int		3846601	0					
ANR	3846611	Identifier	c		3846601	1					
ANR	3846612	IdentifierDecl	i		3846601	1					
ANR	3846613	IdentifierDeclType	int		3846601	0					
ANR	3846614	Identifier	i		3846601	1					
ANR	3846615	IdentifierDeclStatement	int min_num_args = - 1 ;	807:1:20480:20501	3846601	2	True				
ANR	3846616	IdentifierDecl	min_num_args = - 1		3846601	0					
ANR	3846617	IdentifierDeclType	int		3846601	0					
ANR	3846618	Identifier	min_num_args		3846601	1					
ANR	3846619	AssignmentExpression	min_num_args = - 1		3846601	2		=			
ANR	3846620	Identifier	min_num_args		3846601	0					
ANR	3846621	UnaryOperationExpression	- 1		3846601	1					
ANR	3846622	UnaryOperator	-		3846601	0					
ANR	3846623	PrimaryExpression	1		3846601	1					
ANR	3846624	IdentifierDeclStatement	int max_num_args = 0 ;	808:1:20504:20524	3846601	3	True				
ANR	3846625	IdentifierDecl	max_num_args = 0		3846601	0					
ANR	3846626	IdentifierDeclType	int		3846601	0					
ANR	3846627	Identifier	max_num_args		3846601	1					
ANR	3846628	AssignmentExpression	max_num_args = 0		3846601	2		=			
ANR	3846629	Identifier	max_num_args		3846601	0					
ANR	3846630	PrimaryExpression	0		3846601	1					
ANR	3846631	IdentifierDeclStatement	int post_varargs = 0 ;	809:1:20527:20547	3846601	4	True				
ANR	3846632	IdentifierDecl	post_varargs = 0		3846601	0					
ANR	3846633	IdentifierDeclType	int		3846601	0					
ANR	3846634	Identifier	post_varargs		3846601	1					
ANR	3846635	AssignmentExpression	post_varargs = 0		3846601	2		=			
ANR	3846636	Identifier	post_varargs		3846601	0					
ANR	3846637	PrimaryExpression	0		3846601	1					
ANR	3846638	IdentifierDeclStatement	zval * arg ;	810:1:20550:20559	3846601	5	True				
ANR	3846639	IdentifierDecl	* arg		3846601	0					
ANR	3846640	IdentifierDeclType	zval *		3846601	0					
ANR	3846641	Identifier	arg		3846601	1					
ANR	3846642	IdentifierDeclStatement	int arg_count ;	811:1:20562:20575	3846601	6	True				
ANR	3846643	IdentifierDecl	arg_count		3846601	0					
ANR	3846644	IdentifierDeclType	int		3846601	0					
ANR	3846645	Identifier	arg_count		3846601	1					
ANR	3846646	IdentifierDeclStatement	zend_bool have_varargs = 0 ;	812:1:20578:20604	3846601	7	True				
ANR	3846647	IdentifierDecl	have_varargs = 0		3846601	0					
ANR	3846648	IdentifierDeclType	zend_bool		3846601	0					
ANR	3846649	Identifier	have_varargs		3846601	1					
ANR	3846650	AssignmentExpression	have_varargs = 0		3846601	2		=			
ANR	3846651	Identifier	have_varargs		3846601	0					
ANR	3846652	PrimaryExpression	0		3846601	1					
ANR	3846653	IdentifierDeclStatement	zval * * varargs = NULL ;	813:1:20607:20628	3846601	8	True				
ANR	3846654	IdentifierDecl	* * varargs = NULL		3846601	0					
ANR	3846655	IdentifierDeclType	zval * *		3846601	0					
ANR	3846656	Identifier	varargs		3846601	1					
ANR	3846657	AssignmentExpression	* * varargs = NULL		3846601	2		=			
ANR	3846658	Identifier	NULL		3846601	0					
ANR	3846659	Identifier	NULL		3846601	1					
ANR	3846660	IdentifierDeclStatement	int * n_varargs = NULL ;	814:1:20631:20652	3846601	9	True				
ANR	3846661	IdentifierDecl	* n_varargs = NULL		3846601	0					
ANR	3846662	IdentifierDeclType	int *		3846601	0					
ANR	3846663	Identifier	n_varargs		3846601	1					
ANR	3846664	AssignmentExpression	* n_varargs = NULL		3846601	2		=			
ANR	3846665	Identifier	NULL		3846601	0					
ANR	3846666	Identifier	NULL		3846601	1					
ANR	3846667	ForStatement	for ( spec_walk = type_spec ; * spec_walk ; spec_walk ++ )		3846601	10					
ANR	3846668	ForInit	spec_walk = type_spec ;	816:6:20661:20682	3846601	0	True				
ANR	3846669	AssignmentExpression	spec_walk = type_spec		3846601	0		=			
ANR	3846670	Identifier	spec_walk		3846601	0					
ANR	3846671	Identifier	type_spec		3846601	1					
ANR	3846672	Condition	* spec_walk	816:29:20684:20693	3846601	1	True				
ANR	3846673	UnaryOperationExpression	* spec_walk		3846601	0					
ANR	3846674	UnaryOperator	*		3846601	0					
ANR	3846675	Identifier	spec_walk		3846601	1					
ANR	3846676	PostIncDecOperationExpression	spec_walk ++	816:41:20696:20706	3846601	2	True				
ANR	3846677	Identifier	spec_walk		3846601	0					
ANR	3846678	IncDec	++		3846601	1					
ANR	3846679	CompoundStatement		13:54:267:267	3846601	3					
ANR	3846680	ExpressionStatement	c = * spec_walk	817:2:20713:20727	3846601	0	True				
ANR	3846681	AssignmentExpression	c = * spec_walk		3846601	0		=			
ANR	3846682	Identifier	c		3846601	0					
ANR	3846683	UnaryOperationExpression	* spec_walk		3846601	1					
ANR	3846684	UnaryOperator	*		3846601	0					
ANR	3846685	Identifier	spec_walk		3846601	1					
ANR	3846686	SwitchStatement	switch ( c )		3846601	1					
ANR	3846687	Condition	c	818:10:20739:20739	3846601	0	True				
ANR	3846688	Identifier	c		3846601	0					
ANR	3846689	CompoundStatement		15:13:300:300	3846601	1					
ANR	3846690	Label	case 'l' :	819:3:20747:20755	3846601	0	True				
ANR	3846691	Label	case 'd' :	819:13:20757:20765	3846601	1	True				
ANR	3846692	Label	case 's' :	820:3:20770:20778	3846601	2	True				
ANR	3846693	Label	case 'b' :	820:13:20780:20788	3846601	3	True				
ANR	3846694	Label	case 'r' :	821:3:20793:20801	3846601	4	True				
ANR	3846695	Label	case 'a' :	821:13:20803:20811	3846601	5	True				
ANR	3846696	Label	case 'o' :	822:3:20816:20824	3846601	6	True				
ANR	3846697	Label	case 'O' :	822:13:20826:20834	3846601	7	True				
ANR	3846698	Label	case 'z' :	823:3:20839:20847	3846601	8	True				
ANR	3846699	Label	case 'Z' :	823:13:20849:20857	3846601	9	True				
ANR	3846700	Label	case 'C' :	824:3:20862:20870	3846601	10	True				
ANR	3846701	Label	case 'h' :	824:13:20872:20880	3846601	11	True				
ANR	3846702	Label	case 'f' :	825:3:20885:20893	3846601	12	True				
ANR	3846703	Label	case 'A' :	825:13:20895:20903	3846601	13	True				
ANR	3846704	Label	case 'H' :	826:3:20908:20916	3846601	14	True				
ANR	3846705	Label	case 'p' :	826:13:20918:20926	3846601	15	True				
ANR	3846706	Label	case 'S' :	827:3:20931:20939	3846601	16	True				
ANR	3846707	Label	case 'P' :	827:13:20941:20949	3846601	17	True				
ANR	3846708	Label	case 'L' :	828:3:20954:20962	3846601	18	True				
ANR	3846709	ExpressionStatement	max_num_args ++	829:4:20968:20982	3846601	19	True				
ANR	3846710	PostIncDecOperationExpression	max_num_args ++		3846601	0					
ANR	3846711	Identifier	max_num_args		3846601	0					
ANR	3846712	IncDec	++		3846601	1					
ANR	3846713	BreakStatement	break ;	830:4:20988:20993	3846601	20	True				
ANR	3846714	Label	case '|' :	832:3:20999:21007	3846601	21	True				
ANR	3846715	ExpressionStatement	min_num_args = max_num_args	833:4:21013:21040	3846601	22	True				
ANR	3846716	AssignmentExpression	min_num_args = max_num_args		3846601	0		=			
ANR	3846717	Identifier	min_num_args		3846601	0					
ANR	3846718	Identifier	max_num_args		3846601	1					
ANR	3846719	BreakStatement	break ;	834:4:21046:21051	3846601	23	True				
ANR	3846720	Label	case '/' :	836:3:21057:21065	3846601	24	True				
ANR	3846721	Label	case '!' :	837:3:21070:21078	3846601	25	True				
ANR	3846722	BreakStatement	break ;	839:4:21099:21104	3846601	26	True				
ANR	3846723	Label	case '*' :	841:3:21110:21118	3846601	27	True				
ANR	3846724	Label	case '+' :	842:3:21123:21131	3846601	28	True				
ANR	3846725	IfStatement	if ( have_varargs )		3846601	29					
ANR	3846726	Condition	have_varargs	843:8:21141:21152	3846601	0	True				
ANR	3846727	Identifier	have_varargs		3846601	0					
ANR	3846728	CompoundStatement		40:22:713:713	3846601	1					
ANR	3846729	ExpressionStatement	"zend_parse_parameters_debug_error ( ""only one varargs specifier (* or +) is permitted"" )"	844:5:21162:21254	3846601	0	True				
ANR	3846730	CallExpression	"zend_parse_parameters_debug_error ( ""only one varargs specifier (* or +) is permitted"" )"		3846601	0					
ANR	3846731	Callee	zend_parse_parameters_debug_error		3846601	0					
ANR	3846732	Identifier	zend_parse_parameters_debug_error		3846601	0					
ANR	3846733	ArgumentList	"""only one varargs specifier (* or +) is permitted"""		3846601	1					
ANR	3846734	Argument	"""only one varargs specifier (* or +) is permitted"""		3846601	0					
ANR	3846735	PrimaryExpression	"""only one varargs specifier (* or +) is permitted"""		3846601	0					
ANR	3846736	ReturnStatement	return FAILURE ;	846:5:21261:21275	3846601	1	True				
ANR	3846737	Identifier	FAILURE		3846601	0					
ANR	3846738	ExpressionStatement	have_varargs = 1	848:4:21287:21303	3846601	30	True				
ANR	3846739	AssignmentExpression	have_varargs = 1		3846601	0		=			
ANR	3846740	Identifier	have_varargs		3846601	0					
ANR	3846741	PrimaryExpression	1		3846601	1					
ANR	3846742	IfStatement	if ( c == '+' )		3846601	31					
ANR	3846743	Condition	c == '+'	850:8:21367:21374	3846601	0	True				
ANR	3846744	EqualityExpression	c == '+'		3846601	0		==			
ANR	3846745	Identifier	c		3846601	0					
ANR	3846746	PrimaryExpression	'+'		3846601	1					
ANR	3846747	CompoundStatement		47:18:935:935	3846601	1					
ANR	3846748	ExpressionStatement	max_num_args ++	851:5:21384:21398	3846601	0	True				
ANR	3846749	PostIncDecOperationExpression	max_num_args ++		3846601	0					
ANR	3846750	Identifier	max_num_args		3846601	0					
ANR	3846751	IncDec	++		3846601	1					
ANR	3846752	ExpressionStatement	post_varargs = max_num_args	854:4:21450:21477	3846601	32	True				
ANR	3846753	AssignmentExpression	post_varargs = max_num_args		3846601	0		=			
ANR	3846754	Identifier	post_varargs		3846601	0					
ANR	3846755	Identifier	max_num_args		3846601	1					
ANR	3846756	BreakStatement	break ;	855:4:21483:21488	3846601	33	True				
ANR	3846757	Label	default :	857:3:21494:21501	3846601	34	True				
ANR	3846758	Identifier	default		3846601	0					
ANR	3846759	ExpressionStatement	"zend_parse_parameters_debug_error ( ""bad type specifier while parsing parameters"" )"	858:4:21507:21587	3846601	35	True				
ANR	3846760	CallExpression	"zend_parse_parameters_debug_error ( ""bad type specifier while parsing parameters"" )"		3846601	0					
ANR	3846761	Callee	zend_parse_parameters_debug_error		3846601	0					
ANR	3846762	Identifier	zend_parse_parameters_debug_error		3846601	0					
ANR	3846763	ArgumentList	"""bad type specifier while parsing parameters"""		3846601	1					
ANR	3846764	Argument	"""bad type specifier while parsing parameters"""		3846601	0					
ANR	3846765	PrimaryExpression	"""bad type specifier while parsing parameters"""		3846601	0					
ANR	3846766	ReturnStatement	return FAILURE ;	859:4:21593:21607	3846601	36	True				
ANR	3846767	Identifier	FAILURE		3846601	0					
ANR	3846768	IfStatement	if ( min_num_args < 0 )		3846601	11					
ANR	3846769	Condition	min_num_args < 0	863:5:21622:21637	3846601	0	True				
ANR	3846770	RelationalExpression	min_num_args < 0		3846601	0		<			
ANR	3846771	Identifier	min_num_args		3846601	0					
ANR	3846772	PrimaryExpression	0		3846601	1					
ANR	3846773	CompoundStatement		60:23:1198:1198	3846601	1					
ANR	3846774	ExpressionStatement	min_num_args = max_num_args	864:2:21644:21671	3846601	0	True				
ANR	3846775	AssignmentExpression	min_num_args = max_num_args		3846601	0		=			
ANR	3846776	Identifier	min_num_args		3846601	0					
ANR	3846777	Identifier	max_num_args		3846601	1					
ANR	3846778	IfStatement	if ( have_varargs )		3846601	12					
ANR	3846779	Condition	have_varargs	867:5:21682:21693	3846601	0	True				
ANR	3846780	Identifier	have_varargs		3846601	0					
ANR	3846781	CompoundStatement		64:19:1254:1254	3846601	1					
ANR	3846782	ExpressionStatement	post_varargs = max_num_args - post_varargs	869:2:21778:21820	3846601	0	True				
ANR	3846783	AssignmentExpression	post_varargs = max_num_args - post_varargs		3846601	0		=			
ANR	3846784	Identifier	post_varargs		3846601	0					
ANR	3846785	AdditiveExpression	max_num_args - post_varargs		3846601	1		-			
ANR	3846786	Identifier	max_num_args		3846601	0					
ANR	3846787	Identifier	post_varargs		3846601	1					
ANR	3846788	ExpressionStatement	max_num_args = - 1	870:2:21824:21841	3846601	1	True				
ANR	3846789	AssignmentExpression	max_num_args = - 1		3846601	0		=			
ANR	3846790	Identifier	max_num_args		3846601	0					
ANR	3846791	UnaryOperationExpression	- 1		3846601	1					
ANR	3846792	UnaryOperator	-		3846601	0					
ANR	3846793	PrimaryExpression	1		3846601	1					
ANR	3846794	IfStatement	if ( num_args < min_num_args || ( num_args > max_num_args && max_num_args >= 0 ) )		3846601	13					
ANR	3846795	Condition	num_args < min_num_args || ( num_args > max_num_args && max_num_args >= 0 )	873:5:21852:21924	3846601	0	True				
ANR	3846796	OrExpression	num_args < min_num_args || ( num_args > max_num_args && max_num_args >= 0 )		3846601	0		||			
ANR	3846797	RelationalExpression	num_args < min_num_args		3846601	0		<			
ANR	3846798	Identifier	num_args		3846601	0					
ANR	3846799	Identifier	min_num_args		3846601	1					
ANR	3846800	AndExpression	num_args > max_num_args && max_num_args >= 0		3846601	1		&&			
ANR	3846801	RelationalExpression	num_args > max_num_args		3846601	0		>			
ANR	3846802	Identifier	num_args		3846601	0					
ANR	3846803	Identifier	max_num_args		3846601	1					
ANR	3846804	RelationalExpression	max_num_args >= 0		3846601	1		>=			
ANR	3846805	Identifier	max_num_args		3846601	0					
ANR	3846806	PrimaryExpression	0		3846601	1					
ANR	3846807	CompoundStatement		70:80:1485:1485	3846601	1					
ANR	3846808	IfStatement	if ( ! ( flags & ZEND_PARSE_PARAMS_QUIET ) )		3846601	0					
ANR	3846809	Condition	! ( flags & ZEND_PARSE_PARAMS_QUIET )	874:6:21935:21968	3846601	0	True				
ANR	3846810	UnaryOperationExpression	! ( flags & ZEND_PARSE_PARAMS_QUIET )		3846601	0					
ANR	3846811	UnaryOperator	!		3846601	0					
ANR	3846812	BitAndExpression	flags & ZEND_PARSE_PARAMS_QUIET		3846601	1		&			
ANR	3846813	Identifier	flags		3846601	0					
ANR	3846814	Identifier	ZEND_PARSE_PARAMS_QUIET		3846601	1					
ANR	3846815	CompoundStatement		74:3:1714:1807	3846601	1					
ANR	3846816	IdentifierDeclStatement	zend_function * active_function = EG ( current_execute_data ) -> func ;	875:3:21976:22039	3846601	0	True				
ANR	3846817	IdentifierDecl	* active_function = EG ( current_execute_data ) -> func		3846601	0					
ANR	3846818	IdentifierDeclType	zend_function *		3846601	0					
ANR	3846819	Identifier	active_function		3846601	1					
ANR	3846820	AssignmentExpression	* active_function = EG ( current_execute_data ) -> func		3846601	2		=			
ANR	3846821	Identifier	active_function		3846601	0					
ANR	3846822	PtrMemberAccess	EG ( current_execute_data ) -> func		3846601	1					
ANR	3846823	CallExpression	EG ( current_execute_data )		3846601	0					
ANR	3846824	Callee	EG		3846601	0					
ANR	3846825	Identifier	EG		3846601	0					
ANR	3846826	ArgumentList	current_execute_data		3846601	1					
ANR	3846827	Argument	current_execute_data		3846601	0					
ANR	3846828	Identifier	current_execute_data		3846601	0					
ANR	3846829	Identifier	func		3846601	1					
ANR	3846830	IdentifierDeclStatement	"const char * class_name = active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """" ;"	876:3:22044:22151	3846601	1	True				
ANR	3846831	IdentifierDecl	"* class_name = active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """""		3846601	0					
ANR	3846832	IdentifierDeclType	const char *		3846601	0					
ANR	3846833	Identifier	class_name		3846601	1					
ANR	3846834	AssignmentExpression	"* class_name = active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """""		3846601	2		=			
ANR	3846835	Identifier	class_name		3846601	0					
ANR	3846836	ConditionalExpression	"active_function -> common . scope ? ZSTR_VAL ( active_function -> common . scope -> name ) : """""		3846601	1					
ANR	3846837	Condition	active_function -> common . scope		3846601	0					
ANR	3846838	MemberAccess	active_function -> common . scope		3846601	0					
ANR	3846839	PtrMemberAccess	active_function -> common		3846601	0					
ANR	3846840	Identifier	active_function		3846601	0					
ANR	3846841	Identifier	common		3846601	1					
ANR	3846842	Identifier	scope		3846601	1					
ANR	3846843	CallExpression	ZSTR_VAL ( active_function -> common . scope -> name )		3846601	1					
ANR	3846844	Callee	ZSTR_VAL		3846601	0					
ANR	3846845	Identifier	ZSTR_VAL		3846601	0					
ANR	3846846	ArgumentList	active_function -> common . scope -> name		3846601	1					
ANR	3846847	Argument	active_function -> common . scope -> name		3846601	0					
ANR	3846848	PtrMemberAccess	active_function -> common . scope -> name		3846601	0					
ANR	3846849	MemberAccess	active_function -> common . scope		3846601	0					
ANR	3846850	PtrMemberAccess	active_function -> common		3846601	0					
ANR	3846851	Identifier	active_function		3846601	0					
ANR	3846852	Identifier	common		3846601	1					
ANR	3846853	Identifier	scope		3846601	1					
ANR	3846854	Identifier	name		3846601	1					
ANR	3846855	PrimaryExpression	""""""		3846601	2					
ANR	3846856	IdentifierDeclStatement	zend_bool throw_exception = ZEND_ARG_USES_STRICT_TYPES ( ) || ( flags & ZEND_PARSE_PARAMS_THROW ) ;	877:3:22156:22249	3846601	2	True				
ANR	3846857	IdentifierDecl	throw_exception = ZEND_ARG_USES_STRICT_TYPES ( ) || ( flags & ZEND_PARSE_PARAMS_THROW )		3846601	0					
ANR	3846858	IdentifierDeclType	zend_bool		3846601	0					
ANR	3846859	Identifier	throw_exception		3846601	1					
ANR	3846860	AssignmentExpression	throw_exception = ZEND_ARG_USES_STRICT_TYPES ( ) || ( flags & ZEND_PARSE_PARAMS_THROW )		3846601	2		=			
ANR	3846861	Identifier	throw_exception		3846601	0					
ANR	3846862	OrExpression	ZEND_ARG_USES_STRICT_TYPES ( ) || ( flags & ZEND_PARSE_PARAMS_THROW )		3846601	1		||			
ANR	3846863	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3846601	0					
ANR	3846864	Callee	ZEND_ARG_USES_STRICT_TYPES		3846601	0					
ANR	3846865	Identifier	ZEND_ARG_USES_STRICT_TYPES		3846601	0					
ANR	3846866	ArgumentList			3846601	1					
ANR	3846867	BitAndExpression	flags & ZEND_PARSE_PARAMS_THROW		3846601	1		&			
ANR	3846868	Identifier	flags		3846601	0					
ANR	3846869	Identifier	ZEND_PARSE_PARAMS_THROW		3846601	1					
ANR	3846870	ExpressionStatement	"zend_internal_type_error ( throw_exception , ""%s%s%s() expects %s %d parameter%s, %d given"" , class_name , class_name [ 0 ] ? ""::"" : """" , ZSTR_VAL ( active_function -> common . function_name ) , min_num_args == max_num_args ? ""exactly"" : num_args < min_num_args ? ""at least"" : ""at most"" , num_args < min_num_args ? min_num_args : max_num_args , ( num_args < min_num_args ? min_num_args : max_num_args ) == 1 ? """" : ""s"" , num_args )"	878:3:22254:22697	3846601	3	True				
ANR	3846871	CallExpression	"zend_internal_type_error ( throw_exception , ""%s%s%s() expects %s %d parameter%s, %d given"" , class_name , class_name [ 0 ] ? ""::"" : """" , ZSTR_VAL ( active_function -> common . function_name ) , min_num_args == max_num_args ? ""exactly"" : num_args < min_num_args ? ""at least"" : ""at most"" , num_args < min_num_args ? min_num_args : max_num_args , ( num_args < min_num_args ? min_num_args : max_num_args ) == 1 ? """" : ""s"" , num_args )"		3846601	0					
ANR	3846872	Callee	zend_internal_type_error		3846601	0					
ANR	3846873	Identifier	zend_internal_type_error		3846601	0					
ANR	3846874	ArgumentList	throw_exception		3846601	1					
ANR	3846875	Argument	throw_exception		3846601	0					
ANR	3846876	Identifier	throw_exception		3846601	0					
ANR	3846877	Argument	"""%s%s%s() expects %s %d parameter%s, %d given"""		3846601	1					
ANR	3846878	PrimaryExpression	"""%s%s%s() expects %s %d parameter%s, %d given"""		3846601	0					
ANR	3846879	Argument	class_name		3846601	2					
ANR	3846880	Identifier	class_name		3846601	0					
ANR	3846881	Argument	"class_name [ 0 ] ? ""::"" : """""		3846601	3					
ANR	3846882	ConditionalExpression	"class_name [ 0 ] ? ""::"" : """""		3846601	0					
ANR	3846883	Condition	class_name [ 0 ]		3846601	0					
ANR	3846884	ArrayIndexing	class_name [ 0 ]		3846601	0					
ANR	3846885	Identifier	class_name		3846601	0					
ANR	3846886	PrimaryExpression	0		3846601	1					
ANR	3846887	PrimaryExpression	"""::"""		3846601	1					
ANR	3846888	PrimaryExpression	""""""		3846601	2					
ANR	3846889	Argument	ZSTR_VAL ( active_function -> common . function_name )		3846601	4					
ANR	3846890	CallExpression	ZSTR_VAL ( active_function -> common . function_name )		3846601	0					
ANR	3846891	Callee	ZSTR_VAL		3846601	0					
ANR	3846892	Identifier	ZSTR_VAL		3846601	0					
ANR	3846893	ArgumentList	active_function -> common . function_name		3846601	1					
ANR	3846894	Argument	active_function -> common . function_name		3846601	0					
ANR	3846895	MemberAccess	active_function -> common . function_name		3846601	0					
ANR	3846896	PtrMemberAccess	active_function -> common		3846601	0					
ANR	3846897	Identifier	active_function		3846601	0					
ANR	3846898	Identifier	common		3846601	1					
ANR	3846899	Identifier	function_name		3846601	1					
ANR	3846900	Argument	"min_num_args == max_num_args ? ""exactly"" : num_args < min_num_args ? ""at least"" : ""at most"""		3846601	5					
ANR	3846901	ConditionalExpression	"min_num_args == max_num_args ? ""exactly"" : num_args < min_num_args ? ""at least"" : ""at most"""		3846601	0					
ANR	3846902	Condition	min_num_args == max_num_args		3846601	0					
ANR	3846903	EqualityExpression	min_num_args == max_num_args		3846601	0		==			
ANR	3846904	Identifier	min_num_args		3846601	0					
ANR	3846905	Identifier	max_num_args		3846601	1					
ANR	3846906	PrimaryExpression	"""exactly"""		3846601	1					
ANR	3846907	ConditionalExpression	"num_args < min_num_args ? ""at least"" : ""at most"""		3846601	2					
ANR	3846908	Condition	num_args < min_num_args		3846601	0					
ANR	3846909	RelationalExpression	num_args < min_num_args		3846601	0		<			
ANR	3846910	Identifier	num_args		3846601	0					
ANR	3846911	Identifier	min_num_args		3846601	1					
ANR	3846912	PrimaryExpression	"""at least"""		3846601	1					
ANR	3846913	PrimaryExpression	"""at most"""		3846601	2					
ANR	3846914	Argument	num_args < min_num_args ? min_num_args : max_num_args		3846601	6					
ANR	3846915	ConditionalExpression	num_args < min_num_args ? min_num_args : max_num_args		3846601	0					
ANR	3846916	Condition	num_args < min_num_args		3846601	0					
ANR	3846917	RelationalExpression	num_args < min_num_args		3846601	0		<			
ANR	3846918	Identifier	num_args		3846601	0					
ANR	3846919	Identifier	min_num_args		3846601	1					
ANR	3846920	Identifier	min_num_args		3846601	1					
ANR	3846921	Identifier	max_num_args		3846601	2					
ANR	3846922	Argument	"( num_args < min_num_args ? min_num_args : max_num_args ) == 1 ? """" : ""s"""		3846601	7					
ANR	3846923	ConditionalExpression	"( num_args < min_num_args ? min_num_args : max_num_args ) == 1 ? """" : ""s"""		3846601	0					
ANR	3846924	Condition	( num_args < min_num_args ? min_num_args : max_num_args ) == 1		3846601	0					
ANR	3846925	EqualityExpression	( num_args < min_num_args ? min_num_args : max_num_args ) == 1		3846601	0		==			
ANR	3846926	ConditionalExpression	num_args < min_num_args ? min_num_args : max_num_args		3846601	0					
ANR	3846927	Condition	num_args < min_num_args		3846601	0					
ANR	3846928	RelationalExpression	num_args < min_num_args		3846601	0		<			
ANR	3846929	Identifier	num_args		3846601	0					
ANR	3846930	Identifier	min_num_args		3846601	1					
ANR	3846931	Identifier	min_num_args		3846601	1					
ANR	3846932	Identifier	max_num_args		3846601	2					
ANR	3846933	PrimaryExpression	1		3846601	1					
ANR	3846934	PrimaryExpression	""""""		3846601	1					
ANR	3846935	PrimaryExpression	"""s"""		3846601	2					
ANR	3846936	Argument	num_args		3846601	8					
ANR	3846937	Identifier	num_args		3846601	0					
ANR	3846938	ReturnStatement	return FAILURE ;	887:2:22705:22719	3846601	1	True				
ANR	3846939	Identifier	FAILURE		3846601	0					
ANR	3846940	ExpressionStatement	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )	890:1:22726:22782	3846601	14	True				
ANR	3846941	AssignmentExpression	arg_count = ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3846601	0		=			
ANR	3846942	Identifier	arg_count		3846601	0					
ANR	3846943	CallExpression	ZEND_CALL_NUM_ARGS ( EG ( current_execute_data ) )		3846601	1					
ANR	3846944	Callee	ZEND_CALL_NUM_ARGS		3846601	0					
ANR	3846945	Identifier	ZEND_CALL_NUM_ARGS		3846601	0					
ANR	3846946	ArgumentList	EG ( current_execute_data )		3846601	1					
ANR	3846947	Argument	EG ( current_execute_data )		3846601	0					
ANR	3846948	CallExpression	EG ( current_execute_data )		3846601	0					
ANR	3846949	Callee	EG		3846601	0					
ANR	3846950	Identifier	EG		3846601	0					
ANR	3846951	ArgumentList	current_execute_data		3846601	1					
ANR	3846952	Argument	current_execute_data		3846601	0					
ANR	3846953	Identifier	current_execute_data		3846601	0					
ANR	3846954	IfStatement	if ( num_args > arg_count )		3846601	15					
ANR	3846955	Condition	num_args > arg_count	892:5:22790:22809	3846601	0	True				
ANR	3846956	RelationalExpression	num_args > arg_count		3846601	0		>			
ANR	3846957	Identifier	num_args		3846601	0					
ANR	3846958	Identifier	arg_count		3846601	1					
ANR	3846959	CompoundStatement		89:27:2370:2370	3846601	1					
ANR	3846960	ExpressionStatement	"zend_parse_parameters_debug_error ( ""could not obtain parameters for parsing"" )"	893:2:22816:22892	3846601	0	True				
ANR	3846961	CallExpression	"zend_parse_parameters_debug_error ( ""could not obtain parameters for parsing"" )"		3846601	0					
ANR	3846962	Callee	zend_parse_parameters_debug_error		3846601	0					
ANR	3846963	Identifier	zend_parse_parameters_debug_error		3846601	0					
ANR	3846964	ArgumentList	"""could not obtain parameters for parsing"""		3846601	1					
ANR	3846965	Argument	"""could not obtain parameters for parsing"""		3846601	0					
ANR	3846966	PrimaryExpression	"""could not obtain parameters for parsing"""		3846601	0					
ANR	3846967	ReturnStatement	return FAILURE ;	894:2:22896:22910	3846601	1	True				
ANR	3846968	Identifier	FAILURE		3846601	0					
ANR	3846969	ExpressionStatement	i = 0	897:1:22917:22922	3846601	16	True				
ANR	3846970	AssignmentExpression	i = 0		3846601	0		=			
ANR	3846971	Identifier	i		3846601	0					
ANR	3846972	PrimaryExpression	0		3846601	1					
ANR	3846973	WhileStatement	while ( num_args -- > 0 )		3846601	17					
ANR	3846974	Condition	num_args -- > 0	898:8:22932:22945	3846601	0	True				
ANR	3846975	RelationalExpression	num_args -- > 0		3846601	0		>			
ANR	3846976	PostIncDecOperationExpression	num_args --		3846601	0					
ANR	3846977	Identifier	num_args		3846601	0					
ANR	3846978	IncDec	--		3846601	1					
ANR	3846979	PrimaryExpression	0		3846601	1					
ANR	3846980	CompoundStatement		95:24:2506:2506	3846601	1					
ANR	3846981	IfStatement	if ( * type_spec == '|' )		3846601	0					
ANR	3846982	Condition	* type_spec == '|'	899:6:22956:22972	3846601	0	True				
ANR	3846983	EqualityExpression	* type_spec == '|'		3846601	0		==			
ANR	3846984	UnaryOperationExpression	* type_spec		3846601	0					
ANR	3846985	UnaryOperator	*		3846601	0					
ANR	3846986	Identifier	type_spec		3846601	1					
ANR	3846987	PrimaryExpression	'|'		3846601	1					
ANR	3846988	CompoundStatement		96:25:2533:2533	3846601	1					
ANR	3846989	ExpressionStatement	type_spec ++	900:3:22980:22991	3846601	0	True				
ANR	3846990	PostIncDecOperationExpression	type_spec ++		3846601	0					
ANR	3846991	Identifier	type_spec		3846601	0					
ANR	3846992	IncDec	++		3846601	1					
ANR	3846993	IfStatement	if ( * type_spec == '*' || * type_spec == '+' )		3846601	1					
ANR	3846994	Condition	* type_spec == '*' || * type_spec == '+'	903:6:23004:23041	3846601	0	True				
ANR	3846995	OrExpression	* type_spec == '*' || * type_spec == '+'		3846601	0		||			
ANR	3846996	EqualityExpression	* type_spec == '*'		3846601	0		==			
ANR	3846997	UnaryOperationExpression	* type_spec		3846601	0					
ANR	3846998	UnaryOperator	*		3846601	0					
ANR	3846999	Identifier	type_spec		3846601	1					
ANR	3847000	PrimaryExpression	'*'		3846601	1					
ANR	3847001	EqualityExpression	* type_spec == '+'		3846601	1		==			
ANR	3847002	UnaryOperationExpression	* type_spec		3846601	0					
ANR	3847003	UnaryOperator	*		3846601	0					
ANR	3847004	Identifier	type_spec		3846601	1					
ANR	3847005	PrimaryExpression	'+'		3846601	1					
ANR	3847006	CompoundStatement		101:3:2607:2652	3846601	1					
ANR	3847007	IdentifierDeclStatement	int num_varargs = num_args + 1 - post_varargs ;	904:3:23049:23094	3846601	0	True				
ANR	3847008	IdentifierDecl	num_varargs = num_args + 1 - post_varargs		3846601	0					
ANR	3847009	IdentifierDeclType	int		3846601	0					
ANR	3847010	Identifier	num_varargs		3846601	1					
ANR	3847011	AssignmentExpression	num_varargs = num_args + 1 - post_varargs		3846601	2		=			
ANR	3847012	Identifier	num_varargs		3846601	0					
ANR	3847013	AdditiveExpression	num_args + 1 - post_varargs		3846601	1		+			
ANR	3847014	Identifier	num_args		3846601	0					
ANR	3847015	AdditiveExpression	1 - post_varargs		3846601	1		-			
ANR	3847016	PrimaryExpression	1		3846601	0					
ANR	3847017	Identifier	post_varargs		3846601	1					
ANR	3847018	Statement	varargs	907:3:23181:23187	3846601	1	True				
ANR	3847019	Statement	=	907:11:23189:23189	3846601	2	True				
ANR	3847020	Statement	va_arg	907:13:23191:23196	3846601	3	True				
ANR	3847021	Statement	(	907:19:23197:23197	3846601	4	True				
ANR	3847022	Statement	*	907:20:23198:23198	3846601	5	True				
ANR	3847023	Statement	va	907:21:23199:23200	3846601	6	True				
ANR	3847024	Statement	","	907:23:23201:23201	3846601	7	True				
ANR	3847025	Statement	zval	907:25:23203:23206	3846601	8	True				
ANR	3847026	Statement	*	907:30:23208:23208	3846601	9	True				
ANR	3847027	Statement	*	907:31:23209:23209	3846601	10	True				
ANR	3847028	Statement	)	907:32:23210:23210	3846601	11	True				
ANR	3847029	ExpressionStatement		907:33:23211:23211	3846601	12	True				
ANR	3847030	Statement	n_varargs	908:3:23216:23224	3846601	13	True				
ANR	3847031	Statement	=	908:13:23226:23226	3846601	14	True				
ANR	3847032	Statement	va_arg	908:15:23228:23233	3846601	15	True				
ANR	3847033	Statement	(	908:21:23234:23234	3846601	16	True				
ANR	3847034	Statement	*	908:22:23235:23235	3846601	17	True				
ANR	3847035	Statement	va	908:23:23236:23237	3846601	18	True				
ANR	3847036	Statement	","	908:25:23238:23238	3846601	19	True				
ANR	3847037	Statement	int	908:27:23240:23242	3846601	20	True				
ANR	3847038	Statement	*	908:31:23244:23244	3846601	21	True				
ANR	3847039	Statement	)	908:32:23245:23245	3846601	22	True				
ANR	3847040	ExpressionStatement		908:33:23246:23246	3846601	23	True				
ANR	3847041	ExpressionStatement	type_spec ++	909:3:23251:23262	3846601	24	True				
ANR	3847042	PostIncDecOperationExpression	type_spec ++		3846601	0					
ANR	3847043	Identifier	type_spec		3846601	0					
ANR	3847044	IncDec	++		3846601	1					
ANR	3847045	IfStatement	if ( num_varargs > 0 )		3846601	25					
ANR	3847046	Condition	num_varargs > 0	911:7:23272:23286	3846601	0	True				
ANR	3847047	RelationalExpression	num_varargs > 0		3846601	0		>			
ANR	3847048	Identifier	num_varargs		3846601	0					
ANR	3847049	PrimaryExpression	0		3846601	1					
ANR	3847050	CompoundStatement		108:24:2847:2847	3846601	1					
ANR	3847051	ExpressionStatement	* n_varargs = num_varargs	912:4:23295:23319	3846601	0	True				
ANR	3847052	AssignmentExpression	* n_varargs = num_varargs		3846601	0		=			
ANR	3847053	UnaryOperationExpression	* n_varargs		3846601	0					
ANR	3847054	UnaryOperator	*		3846601	0					
ANR	3847055	Identifier	n_varargs		3846601	1					
ANR	3847056	Identifier	num_varargs		3846601	1					
ANR	3847057	ExpressionStatement	"* varargs = ZEND_CALL_ARG ( EG ( current_execute_data ) , i + 1 )"	913:4:23325:23382	3846601	1	True				
ANR	3847058	AssignmentExpression	"* varargs = ZEND_CALL_ARG ( EG ( current_execute_data ) , i + 1 )"		3846601	0		=			
ANR	3847059	UnaryOperationExpression	* varargs		3846601	0					
ANR	3847060	UnaryOperator	*		3846601	0					
ANR	3847061	Identifier	varargs		3846601	1					
ANR	3847062	CallExpression	"ZEND_CALL_ARG ( EG ( current_execute_data ) , i + 1 )"		3846601	1					
ANR	3847063	Callee	ZEND_CALL_ARG		3846601	0					
ANR	3847064	Identifier	ZEND_CALL_ARG		3846601	0					
ANR	3847065	ArgumentList	EG ( current_execute_data )		3846601	1					
ANR	3847066	Argument	EG ( current_execute_data )		3846601	0					
ANR	3847067	CallExpression	EG ( current_execute_data )		3846601	0					
ANR	3847068	Callee	EG		3846601	0					
ANR	3847069	Identifier	EG		3846601	0					
ANR	3847070	ArgumentList	current_execute_data		3846601	1					
ANR	3847071	Argument	current_execute_data		3846601	0					
ANR	3847072	Identifier	current_execute_data		3846601	0					
ANR	3847073	Argument	i + 1		3846601	1					
ANR	3847074	AdditiveExpression	i + 1		3846601	0		+			
ANR	3847075	Identifier	i		3846601	0					
ANR	3847076	PrimaryExpression	1		3846601	1					
ANR	3847077	ExpressionStatement	num_args += 1 - num_varargs	915:4:23449:23476	3846601	2	True				
ANR	3847078	AssignmentExpression	num_args += 1 - num_varargs		3846601	0		+=			
ANR	3847079	Identifier	num_args		3846601	0					
ANR	3847080	AdditiveExpression	1 - num_varargs		3846601	1		-			
ANR	3847081	PrimaryExpression	1		3846601	0					
ANR	3847082	Identifier	num_varargs		3846601	1					
ANR	3847083	ExpressionStatement	i += num_varargs	916:4:23482:23498	3846601	3	True				
ANR	3847084	AssignmentExpression	i += num_varargs		3846601	0		+=			
ANR	3847085	Identifier	i		3846601	0					
ANR	3847086	Identifier	num_varargs		3846601	1					
ANR	3847087	ContinueStatement	continue ;	917:4:23504:23512	3846601	4	True				
ANR	3847088	ElseStatement	else		3846601	0					
ANR	3847089	CompoundStatement		115:10:3082:3082	3846601	0					
ANR	3847090	ExpressionStatement	* varargs = NULL	919:4:23530:23545	3846601	0	True				
ANR	3847091	AssignmentExpression	* varargs = NULL		3846601	0		=			
ANR	3847092	UnaryOperationExpression	* varargs		3846601	0					
ANR	3847093	UnaryOperator	*		3846601	0					
ANR	3847094	Identifier	varargs		3846601	1					
ANR	3847095	Identifier	NULL		3846601	1					
ANR	3847096	ExpressionStatement	* n_varargs = 0	920:4:23551:23565	3846601	1	True				
ANR	3847097	AssignmentExpression	* n_varargs = 0		3846601	0		=			
ANR	3847098	UnaryOperationExpression	* n_varargs		3846601	0					
ANR	3847099	UnaryOperator	*		3846601	0					
ANR	3847100	Identifier	n_varargs		3846601	1					
ANR	3847101	PrimaryExpression	0		3846601	1					
ANR	3847102	ExpressionStatement	"arg = ZEND_CALL_ARG ( EG ( current_execute_data ) , i + 1 )"	924:2:23579:23631	3846601	2	True				
ANR	3847103	AssignmentExpression	"arg = ZEND_CALL_ARG ( EG ( current_execute_data ) , i + 1 )"		3846601	0		=			
ANR	3847104	Identifier	arg		3846601	0					
ANR	3847105	CallExpression	"ZEND_CALL_ARG ( EG ( current_execute_data ) , i + 1 )"		3846601	1					
ANR	3847106	Callee	ZEND_CALL_ARG		3846601	0					
ANR	3847107	Identifier	ZEND_CALL_ARG		3846601	0					
ANR	3847108	ArgumentList	EG ( current_execute_data )		3846601	1					
ANR	3847109	Argument	EG ( current_execute_data )		3846601	0					
ANR	3847110	CallExpression	EG ( current_execute_data )		3846601	0					
ANR	3847111	Callee	EG		3846601	0					
ANR	3847112	Identifier	EG		3846601	0					
ANR	3847113	ArgumentList	current_execute_data		3846601	1					
ANR	3847114	Argument	current_execute_data		3846601	0					
ANR	3847115	Identifier	current_execute_data		3846601	0					
ANR	3847116	Argument	i + 1		3846601	1					
ANR	3847117	AdditiveExpression	i + 1		3846601	0		+			
ANR	3847118	Identifier	i		3846601	0					
ANR	3847119	PrimaryExpression	1		3846601	1					
ANR	3847120	IfStatement	"if ( zend_parse_arg ( i + 1 , arg , va , & type_spec , flags ) == FAILURE )"		3846601	3					
ANR	3847121	Condition	"zend_parse_arg ( i + 1 , arg , va , & type_spec , flags ) == FAILURE"	926:6:23640:23697	3846601	0	True				
ANR	3847122	EqualityExpression	"zend_parse_arg ( i + 1 , arg , va , & type_spec , flags ) == FAILURE"		3846601	0		==			
ANR	3847123	CallExpression	"zend_parse_arg ( i + 1 , arg , va , & type_spec , flags )"		3846601	0					
ANR	3847124	Callee	zend_parse_arg		3846601	0					
ANR	3847125	Identifier	zend_parse_arg		3846601	0					
ANR	3847126	ArgumentList	i + 1		3846601	1					
ANR	3847127	Argument	i + 1		3846601	0					
ANR	3847128	AdditiveExpression	i + 1		3846601	0		+			
ANR	3847129	Identifier	i		3846601	0					
ANR	3847130	PrimaryExpression	1		3846601	1					
ANR	3847131	Argument	arg		3846601	1					
ANR	3847132	Identifier	arg		3846601	0					
ANR	3847133	Argument	va		3846601	2					
ANR	3847134	Identifier	va		3846601	0					
ANR	3847135	Argument	& type_spec		3846601	3					
ANR	3847136	UnaryOperationExpression	& type_spec		3846601	0					
ANR	3847137	UnaryOperator	&		3846601	0					
ANR	3847138	Identifier	type_spec		3846601	1					
ANR	3847139	Argument	flags		3846601	4					
ANR	3847140	Identifier	flags		3846601	0					
ANR	3847141	Identifier	FAILURE		3846601	1					
ANR	3847142	CompoundStatement		123:66:3258:3258	3846601	1					
ANR	3847143	IfStatement	if ( varargs && * varargs )		3846601	0					
ANR	3847144	Condition	varargs && * varargs	928:7:23756:23774	3846601	0	True				
ANR	3847145	AndExpression	varargs && * varargs		3846601	0		&&			
ANR	3847146	Identifier	varargs		3846601	0					
ANR	3847147	UnaryOperationExpression	* varargs		3846601	1					
ANR	3847148	UnaryOperator	*		3846601	0					
ANR	3847149	Identifier	varargs		3846601	1					
ANR	3847150	CompoundStatement		125:28:3335:3335	3846601	1					
ANR	3847151	ExpressionStatement	* varargs = NULL	929:4:23783:23798	3846601	0	True				
ANR	3847152	AssignmentExpression	* varargs = NULL		3846601	0		=			
ANR	3847153	UnaryOperationExpression	* varargs		3846601	0					
ANR	3847154	UnaryOperator	*		3846601	0					
ANR	3847155	Identifier	varargs		3846601	1					
ANR	3847156	Identifier	NULL		3846601	1					
ANR	3847157	ReturnStatement	return FAILURE ;	931:3:23808:23822	3846601	1	True				
ANR	3847158	Identifier	FAILURE		3846601	0					
ANR	3847159	ExpressionStatement	i ++	933:2:23830:23833	3846601	4	True				
ANR	3847160	PostIncDecOperationExpression	i ++		3846601	0					
ANR	3847161	Identifier	i		3846601	0					
ANR	3847162	IncDec	++		3846601	1					
ANR	3847163	ReturnStatement	return SUCCESS ;	936:1:23840:23854	3846601	18	True				
ANR	3847164	Identifier	SUCCESS		3846601	0					
ANR	3847165	ReturnType	static int		3846601	1					
ANR	3847166	Identifier	zend_parse_va_args		3846601	2					
ANR	3847167	ParameterList	"int num_args , const char * type_spec , va_list * va , int flags"		3846601	3					
ANR	3847168	Parameter	int num_args	803:30:20370:20381	3846601	0	True				
ANR	3847169	ParameterType	int		3846601	0					
ANR	3847170	Identifier	num_args		3846601	1					
ANR	3847171	Parameter	const char * type_spec	803:44:20384:20404	3846601	1	True				
ANR	3847172	ParameterType	const char *		3846601	0					
ANR	3847173	Identifier	type_spec		3846601	1					
ANR	3847174	Parameter	va_list * va	803:67:20407:20417	3846601	2	True				
ANR	3847175	ParameterType	va_list *		3846601	0					
ANR	3847176	Identifier	va		3846601	1					
ANR	3847177	Parameter	int flags	803:80:20420:20428	3846601	3	True				
ANR	3847178	ParameterType	int		3846601	0					
ANR	3847179	Identifier	flags		3846601	1					
ANR	3847180	CFGEntryNode	ENTRY		3846601		True				
ANR	3847181	CFGExitNode	EXIT		3846601		True				
ANR	3847182	Symbol	* * active_function		3846601						
ANR	3847183	Symbol	* type_spec		3846601						
ANR	3847184	Symbol	* class_name		3846601						
ANR	3847185	Symbol	min_num_args		3846601						
ANR	3847186	Symbol	ZEND_CALL_ARG		3846601						
ANR	3847187	Symbol	EG ( current_execute_data ) -> func		3846601						
ANR	3847188	Symbol	active_function -> common . function_name		3846601						
ANR	3847189	Symbol	current_execute_data		3846601						
ANR	3847190	Symbol	flags		3846601						
ANR	3847191	Symbol	* EG		3846601						
ANR	3847192	Symbol	* active_function -> common		3846601						
ANR	3847193	Symbol	active_function		3846601						
ANR	3847194	Symbol	type_spec		3846601						
ANR	3847195	Symbol	num_args		3846601						
ANR	3847196	Symbol	ZEND_PARSE_PARAMS_THROW		3846601						
ANR	3847197	Symbol	arg		3846601						
ANR	3847198	Symbol	ZEND_CALL_NUM_ARGS		3846601						
ANR	3847199	Symbol	varargs		3846601						
ANR	3847200	Symbol	class_name		3846601						
ANR	3847201	Symbol	n_varargs		3846601						
ANR	3847202	Symbol	EG		3846601						
ANR	3847203	Symbol	ZEND_ARG_USES_STRICT_TYPES		3846601						
ANR	3847204	Symbol	c		3846601						
ANR	3847205	Symbol	NULL		3846601						
ANR	3847206	Symbol	SUCCESS		3846601						
ANR	3847207	Symbol	active_function -> common . scope -> name		3846601						
ANR	3847208	Symbol	i		3846601						
ANR	3847209	Symbol	num_varargs		3846601						
ANR	3847210	Symbol	va		3846601						
ANR	3847211	Symbol	active_function -> common		3846601						
ANR	3847212	Symbol	FAILURE		3846601						
ANR	3847213	Symbol	* active_function		3846601						
ANR	3847214	Symbol	post_varargs		3846601						
ANR	3847215	Symbol	active_function -> common . scope		3846601						
ANR	3847216	Symbol	ZSTR_VAL		3846601						
ANR	3847217	Symbol	max_num_args		3846601						
ANR	3847218	Symbol	throw_exception		3846601						
ANR	3847219	Symbol	& type_spec		3846601						
ANR	3847220	Symbol	spec_walk		3846601						
ANR	3847221	Symbol	* varargs		3846601						
ANR	3847222	Symbol	ZEND_PARSE_PARAMS_QUIET		3846601						
ANR	3847223	Symbol	* n_varargs		3846601						
ANR	3847224	Symbol	have_varargs		3846601						
ANR	3847225	Symbol	* spec_walk		3846601						
ANR	3847226	Symbol	* active_function -> common . scope		3846601						
ANR	3847227	Symbol	zend_parse_arg		3846601						
ANR	3847228	Symbol	arg_count		3846601						
ANR	3847229	Function	zend_parse_parameters_ex	940:0:23869:24118							
ANR	3847230	FunctionDef	"zend_parse_parameters_ex (int flags , int num_args , const char * type_spec)"		3847229	0					
ANR	3847231	CompoundStatement		941:0:23970:24118	3847229	0					
ANR	3847232	IdentifierDeclStatement	va_list va ;	942:1:23973:23983	3847229	0	True				
ANR	3847233	IdentifierDecl	va		3847229	0					
ANR	3847234	IdentifierDeclType	va_list		3847229	0					
ANR	3847235	Identifier	va		3847229	1					
ANR	3847236	IdentifierDeclStatement	int retval ;	943:1:23986:23996	3847229	1	True				
ANR	3847237	IdentifierDecl	retval		3847229	0					
ANR	3847238	IdentifierDeclType	int		3847229	0					
ANR	3847239	Identifier	retval		3847229	1					
ANR	3847240	ExpressionStatement	"va_start ( va , type_spec )"	945:1:24000:24023	3847229	2	True				
ANR	3847241	CallExpression	"va_start ( va , type_spec )"		3847229	0					
ANR	3847242	Callee	va_start		3847229	0					
ANR	3847243	Identifier	va_start		3847229	0					
ANR	3847244	ArgumentList	va		3847229	1					
ANR	3847245	Argument	va		3847229	0					
ANR	3847246	Identifier	va		3847229	0					
ANR	3847247	Argument	type_spec		3847229	1					
ANR	3847248	Identifier	type_spec		3847229	0					
ANR	3847249	ExpressionStatement	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"	946:1:24026:24086	3847229	3	True				
ANR	3847250	AssignmentExpression	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847229	0		=			
ANR	3847251	Identifier	retval		3847229	0					
ANR	3847252	CallExpression	"zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847229	1					
ANR	3847253	Callee	zend_parse_va_args		3847229	0					
ANR	3847254	Identifier	zend_parse_va_args		3847229	0					
ANR	3847255	ArgumentList	num_args		3847229	1					
ANR	3847256	Argument	num_args		3847229	0					
ANR	3847257	Identifier	num_args		3847229	0					
ANR	3847258	Argument	type_spec		3847229	1					
ANR	3847259	Identifier	type_spec		3847229	0					
ANR	3847260	Argument	& va		3847229	2					
ANR	3847261	UnaryOperationExpression	& va		3847229	0					
ANR	3847262	UnaryOperator	&		3847229	0					
ANR	3847263	Identifier	va		3847229	1					
ANR	3847264	Argument	flags		3847229	3					
ANR	3847265	Identifier	flags		3847229	0					
ANR	3847266	ExpressionStatement	va_end ( va )	947:1:24089:24099	3847229	4	True				
ANR	3847267	CallExpression	va_end ( va )		3847229	0					
ANR	3847268	Callee	va_end		3847229	0					
ANR	3847269	Identifier	va_end		3847229	0					
ANR	3847270	ArgumentList	va		3847229	1					
ANR	3847271	Argument	va		3847229	0					
ANR	3847272	Identifier	va		3847229	0					
ANR	3847273	ReturnStatement	return retval ;	949:1:24103:24116	3847229	5	True				
ANR	3847274	Identifier	retval		3847229	0					
ANR	3847275	ReturnType	ZEND_API int		3847229	1					
ANR	3847276	Identifier	zend_parse_parameters_ex		3847229	2					
ANR	3847277	ParameterList	"int flags , int num_args , const char * type_spec"		3847229	3					
ANR	3847278	Parameter	int flags	940:38:23907:23915	3847229	0	True				
ANR	3847279	ParameterType	int		3847229	0					
ANR	3847280	Identifier	flags		3847229	1					
ANR	3847281	Parameter	int num_args	940:49:23918:23929	3847229	1	True				
ANR	3847282	ParameterType	int		3847229	0					
ANR	3847283	Identifier	num_args		3847229	1					
ANR	3847284	Parameter	const char * type_spec	940:63:23932:23952	3847229	2	True				
ANR	3847285	ParameterType	const char *		3847229	0					
ANR	3847286	Identifier	type_spec		3847229	1					
ANR	3847287	CFGEntryNode	ENTRY		3847229		True				
ANR	3847288	CFGExitNode	EXIT		3847229		True				
ANR	3847289	Symbol	type_spec		3847229						
ANR	3847290	Symbol	& va		3847229						
ANR	3847291	Symbol	num_args		3847229						
ANR	3847292	Symbol	zend_parse_va_args		3847229						
ANR	3847293	Symbol	flags		3847229						
ANR	3847294	Symbol	va		3847229						
ANR	3847295	Symbol	retval		3847229						
ANR	3847296	Function	zend_parse_parameters	953:0:24131:24382							
ANR	3847297	FunctionDef	"zend_parse_parameters (int num_args , const char * type_spec)"		3847296	0					
ANR	3847298	CompoundStatement		954:0:24218:24382	3847296	0					
ANR	3847299	IdentifierDeclStatement	va_list va ;	955:1:24221:24231	3847296	0	True				
ANR	3847300	IdentifierDecl	va		3847296	0					
ANR	3847301	IdentifierDeclType	va_list		3847296	0					
ANR	3847302	Identifier	va		3847296	1					
ANR	3847303	IdentifierDeclStatement	int retval ;	956:1:24234:24244	3847296	1	True				
ANR	3847304	IdentifierDecl	retval		3847296	0					
ANR	3847305	IdentifierDeclType	int		3847296	0					
ANR	3847306	Identifier	retval		3847296	1					
ANR	3847307	IdentifierDeclStatement	int flags = 0 ;	957:1:24247:24260	3847296	2	True				
ANR	3847308	IdentifierDecl	flags = 0		3847296	0					
ANR	3847309	IdentifierDeclType	int		3847296	0					
ANR	3847310	Identifier	flags		3847296	1					
ANR	3847311	AssignmentExpression	flags = 0		3847296	2		=			
ANR	3847312	Identifier	flags		3847296	0					
ANR	3847313	PrimaryExpression	0		3847296	1					
ANR	3847314	ExpressionStatement	"va_start ( va , type_spec )"	959:1:24264:24287	3847296	3	True				
ANR	3847315	CallExpression	"va_start ( va , type_spec )"		3847296	0					
ANR	3847316	Callee	va_start		3847296	0					
ANR	3847317	Identifier	va_start		3847296	0					
ANR	3847318	ArgumentList	va		3847296	1					
ANR	3847319	Argument	va		3847296	0					
ANR	3847320	Identifier	va		3847296	0					
ANR	3847321	Argument	type_spec		3847296	1					
ANR	3847322	Identifier	type_spec		3847296	0					
ANR	3847323	ExpressionStatement	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"	960:1:24290:24350	3847296	4	True				
ANR	3847324	AssignmentExpression	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847296	0		=			
ANR	3847325	Identifier	retval		3847296	0					
ANR	3847326	CallExpression	"zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847296	1					
ANR	3847327	Callee	zend_parse_va_args		3847296	0					
ANR	3847328	Identifier	zend_parse_va_args		3847296	0					
ANR	3847329	ArgumentList	num_args		3847296	1					
ANR	3847330	Argument	num_args		3847296	0					
ANR	3847331	Identifier	num_args		3847296	0					
ANR	3847332	Argument	type_spec		3847296	1					
ANR	3847333	Identifier	type_spec		3847296	0					
ANR	3847334	Argument	& va		3847296	2					
ANR	3847335	UnaryOperationExpression	& va		3847296	0					
ANR	3847336	UnaryOperator	&		3847296	0					
ANR	3847337	Identifier	va		3847296	1					
ANR	3847338	Argument	flags		3847296	3					
ANR	3847339	Identifier	flags		3847296	0					
ANR	3847340	ExpressionStatement	va_end ( va )	961:1:24353:24363	3847296	5	True				
ANR	3847341	CallExpression	va_end ( va )		3847296	0					
ANR	3847342	Callee	va_end		3847296	0					
ANR	3847343	Identifier	va_end		3847296	0					
ANR	3847344	ArgumentList	va		3847296	1					
ANR	3847345	Argument	va		3847296	0					
ANR	3847346	Identifier	va		3847296	0					
ANR	3847347	ReturnStatement	return retval ;	963:1:24367:24380	3847296	6	True				
ANR	3847348	Identifier	retval		3847296	0					
ANR	3847349	ReturnType	ZEND_API int		3847296	1					
ANR	3847350	Identifier	zend_parse_parameters		3847296	2					
ANR	3847351	ParameterList	"int num_args , const char * type_spec"		3847296	3					
ANR	3847352	Parameter	int num_args	953:35:24166:24177	3847296	0	True				
ANR	3847353	ParameterType	int		3847296	0					
ANR	3847354	Identifier	num_args		3847296	1					
ANR	3847355	Parameter	const char * type_spec	953:49:24180:24200	3847296	1	True				
ANR	3847356	ParameterType	const char *		3847296	0					
ANR	3847357	Identifier	type_spec		3847296	1					
ANR	3847358	CFGEntryNode	ENTRY		3847296		True				
ANR	3847359	CFGExitNode	EXIT		3847296		True				
ANR	3847360	Symbol	type_spec		3847296						
ANR	3847361	Symbol	& va		3847296						
ANR	3847362	Symbol	num_args		3847296						
ANR	3847363	Symbol	zend_parse_va_args		3847296						
ANR	3847364	Symbol	flags		3847296						
ANR	3847365	Symbol	va		3847296						
ANR	3847366	Symbol	retval		3847296						
ANR	3847367	Function	zend_parse_parameters_throw	967:0:24395:24674							
ANR	3847368	FunctionDef	"zend_parse_parameters_throw (int num_args , const char * type_spec)"		3847367	0					
ANR	3847369	CompoundStatement		968:0:24488:24674	3847367	0					
ANR	3847370	IdentifierDeclStatement	va_list va ;	969:1:24491:24501	3847367	0	True				
ANR	3847371	IdentifierDecl	va		3847367	0					
ANR	3847372	IdentifierDeclType	va_list		3847367	0					
ANR	3847373	Identifier	va		3847367	1					
ANR	3847374	IdentifierDeclStatement	int retval ;	970:1:24504:24514	3847367	1	True				
ANR	3847375	IdentifierDecl	retval		3847367	0					
ANR	3847376	IdentifierDeclType	int		3847367	0					
ANR	3847377	Identifier	retval		3847367	1					
ANR	3847378	IdentifierDeclStatement	int flags = ZEND_PARSE_PARAMS_THROW ;	971:1:24517:24552	3847367	2	True				
ANR	3847379	IdentifierDecl	flags = ZEND_PARSE_PARAMS_THROW		3847367	0					
ANR	3847380	IdentifierDeclType	int		3847367	0					
ANR	3847381	Identifier	flags		3847367	1					
ANR	3847382	AssignmentExpression	flags = ZEND_PARSE_PARAMS_THROW		3847367	2		=			
ANR	3847383	Identifier	ZEND_PARSE_PARAMS_THROW		3847367	0					
ANR	3847384	Identifier	ZEND_PARSE_PARAMS_THROW		3847367	1					
ANR	3847385	ExpressionStatement	"va_start ( va , type_spec )"	973:1:24556:24579	3847367	3	True				
ANR	3847386	CallExpression	"va_start ( va , type_spec )"		3847367	0					
ANR	3847387	Callee	va_start		3847367	0					
ANR	3847388	Identifier	va_start		3847367	0					
ANR	3847389	ArgumentList	va		3847367	1					
ANR	3847390	Argument	va		3847367	0					
ANR	3847391	Identifier	va		3847367	0					
ANR	3847392	Argument	type_spec		3847367	1					
ANR	3847393	Identifier	type_spec		3847367	0					
ANR	3847394	ExpressionStatement	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"	974:1:24582:24642	3847367	4	True				
ANR	3847395	AssignmentExpression	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847367	0		=			
ANR	3847396	Identifier	retval		3847367	0					
ANR	3847397	CallExpression	"zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847367	1					
ANR	3847398	Callee	zend_parse_va_args		3847367	0					
ANR	3847399	Identifier	zend_parse_va_args		3847367	0					
ANR	3847400	ArgumentList	num_args		3847367	1					
ANR	3847401	Argument	num_args		3847367	0					
ANR	3847402	Identifier	num_args		3847367	0					
ANR	3847403	Argument	type_spec		3847367	1					
ANR	3847404	Identifier	type_spec		3847367	0					
ANR	3847405	Argument	& va		3847367	2					
ANR	3847406	UnaryOperationExpression	& va		3847367	0					
ANR	3847407	UnaryOperator	&		3847367	0					
ANR	3847408	Identifier	va		3847367	1					
ANR	3847409	Argument	flags		3847367	3					
ANR	3847410	Identifier	flags		3847367	0					
ANR	3847411	ExpressionStatement	va_end ( va )	975:1:24645:24655	3847367	5	True				
ANR	3847412	CallExpression	va_end ( va )		3847367	0					
ANR	3847413	Callee	va_end		3847367	0					
ANR	3847414	Identifier	va_end		3847367	0					
ANR	3847415	ArgumentList	va		3847367	1					
ANR	3847416	Argument	va		3847367	0					
ANR	3847417	Identifier	va		3847367	0					
ANR	3847418	ReturnStatement	return retval ;	977:1:24659:24672	3847367	6	True				
ANR	3847419	Identifier	retval		3847367	0					
ANR	3847420	ReturnType	ZEND_API int		3847367	1					
ANR	3847421	Identifier	zend_parse_parameters_throw		3847367	2					
ANR	3847422	ParameterList	"int num_args , const char * type_spec"		3847367	3					
ANR	3847423	Parameter	int num_args	967:41:24436:24447	3847367	0	True				
ANR	3847424	ParameterType	int		3847367	0					
ANR	3847425	Identifier	num_args		3847367	1					
ANR	3847426	Parameter	const char * type_spec	967:55:24450:24470	3847367	1	True				
ANR	3847427	ParameterType	const char *		3847367	0					
ANR	3847428	Identifier	type_spec		3847367	1					
ANR	3847429	CFGEntryNode	ENTRY		3847367		True				
ANR	3847430	CFGExitNode	EXIT		3847367		True				
ANR	3847431	Symbol	type_spec		3847367						
ANR	3847432	Symbol	& va		3847367						
ANR	3847433	Symbol	num_args		3847367						
ANR	3847434	Symbol	ZEND_PARSE_PARAMS_THROW		3847367						
ANR	3847435	Symbol	zend_parse_va_args		3847367						
ANR	3847436	Symbol	flags		3847367						
ANR	3847437	Symbol	va		3847367						
ANR	3847438	Symbol	retval		3847367						
ANR	3847439	Function	zend_parse_method_parameters	981:0:24687:25938							
ANR	3847440	FunctionDef	"zend_parse_method_parameters (int num_args , zval * this_ptr , const char * type_spec)"		3847439	0					
ANR	3847441	CompoundStatement		982:0:24797:25938	3847439	0					
ANR	3847442	IdentifierDeclStatement	va_list va ;	983:1:24800:24810	3847439	0	True				
ANR	3847443	IdentifierDecl	va		3847439	0					
ANR	3847444	IdentifierDeclType	va_list		3847439	0					
ANR	3847445	Identifier	va		3847439	1					
ANR	3847446	IdentifierDeclStatement	int retval ;	984:1:24813:24823	3847439	1	True				
ANR	3847447	IdentifierDecl	retval		3847439	0					
ANR	3847448	IdentifierDeclType	int		3847439	0					
ANR	3847449	Identifier	retval		3847439	1					
ANR	3847450	IdentifierDeclStatement	int flags = 0 ;	985:1:24826:24839	3847439	2	True				
ANR	3847451	IdentifierDecl	flags = 0		3847439	0					
ANR	3847452	IdentifierDeclType	int		3847439	0					
ANR	3847453	Identifier	flags		3847439	1					
ANR	3847454	AssignmentExpression	flags = 0		3847439	2		=			
ANR	3847455	Identifier	flags		3847439	0					
ANR	3847456	PrimaryExpression	0		3847439	1					
ANR	3847457	IdentifierDeclStatement	const char * p = type_spec ;	986:1:24842:24867	3847439	3	True				
ANR	3847458	IdentifierDecl	* p = type_spec		3847439	0					
ANR	3847459	IdentifierDeclType	const char *		3847439	0					
ANR	3847460	Identifier	p		3847439	1					
ANR	3847461	AssignmentExpression	* p = type_spec		3847439	2		=			
ANR	3847462	Identifier	type_spec		3847439	0					
ANR	3847463	Identifier	type_spec		3847439	1					
ANR	3847464	IdentifierDeclStatement	zval * * object ;	987:1:24870:24883	3847439	4	True				
ANR	3847465	IdentifierDecl	* * object		3847439	0					
ANR	3847466	IdentifierDeclType	zval * *		3847439	0					
ANR	3847467	Identifier	object		3847439	1					
ANR	3847468	IdentifierDeclStatement	zend_class_entry * ce ;	988:1:24886:24906	3847439	5	True				
ANR	3847469	IdentifierDecl	* ce		3847439	0					
ANR	3847470	IdentifierDeclType	zend_class_entry *		3847439	0					
ANR	3847471	Identifier	ce		3847439	1					
ANR	3847472	IdentifierDeclStatement	zend_bool is_method = EG ( current_execute_data ) -> func -> common . scope != NULL ;	994:1:25199:25273	3847439	6	True				
ANR	3847473	IdentifierDecl	is_method = EG ( current_execute_data ) -> func -> common . scope != NULL		3847439	0					
ANR	3847474	IdentifierDeclType	zend_bool		3847439	0					
ANR	3847475	Identifier	is_method		3847439	1					
ANR	3847476	AssignmentExpression	is_method = EG ( current_execute_data ) -> func -> common . scope != NULL		3847439	2		=			
ANR	3847477	Identifier	is_method		3847439	0					
ANR	3847478	EqualityExpression	EG ( current_execute_data ) -> func -> common . scope != NULL		3847439	1		!=			
ANR	3847479	MemberAccess	EG ( current_execute_data ) -> func -> common . scope		3847439	0					
ANR	3847480	PtrMemberAccess	EG ( current_execute_data ) -> func -> common		3847439	0					
ANR	3847481	PtrMemberAccess	EG ( current_execute_data ) -> func		3847439	0					
ANR	3847482	CallExpression	EG ( current_execute_data )		3847439	0					
ANR	3847483	Callee	EG		3847439	0					
ANR	3847484	Identifier	EG		3847439	0					
ANR	3847485	ArgumentList	current_execute_data		3847439	1					
ANR	3847486	Argument	current_execute_data		3847439	0					
ANR	3847487	Identifier	current_execute_data		3847439	0					
ANR	3847488	Identifier	func		3847439	1					
ANR	3847489	Identifier	common		3847439	1					
ANR	3847490	Identifier	scope		3847439	1					
ANR	3847491	Identifier	NULL		3847439	1					
ANR	3847492	IfStatement	if ( ! is_method || ! this_ptr || Z_TYPE_P ( this_ptr ) != IS_OBJECT )		3847439	7					
ANR	3847493	Condition	! is_method || ! this_ptr || Z_TYPE_P ( this_ptr ) != IS_OBJECT	996:5:25281:25338	3847439	0	True				
ANR	3847494	OrExpression	! is_method || ! this_ptr || Z_TYPE_P ( this_ptr ) != IS_OBJECT		3847439	0		||			
ANR	3847495	UnaryOperationExpression	! is_method		3847439	0					
ANR	3847496	UnaryOperator	!		3847439	0					
ANR	3847497	Identifier	is_method		3847439	1					
ANR	3847498	OrExpression	! this_ptr || Z_TYPE_P ( this_ptr ) != IS_OBJECT		3847439	1		||			
ANR	3847499	UnaryOperationExpression	! this_ptr		3847439	0					
ANR	3847500	UnaryOperator	!		3847439	0					
ANR	3847501	Identifier	this_ptr		3847439	1					
ANR	3847502	EqualityExpression	Z_TYPE_P ( this_ptr ) != IS_OBJECT		3847439	1		!=			
ANR	3847503	CallExpression	Z_TYPE_P ( this_ptr )		3847439	0					
ANR	3847504	Callee	Z_TYPE_P		3847439	0					
ANR	3847505	Identifier	Z_TYPE_P		3847439	0					
ANR	3847506	ArgumentList	this_ptr		3847439	1					
ANR	3847507	Argument	this_ptr		3847439	0					
ANR	3847508	Identifier	this_ptr		3847439	0					
ANR	3847509	Identifier	IS_OBJECT		3847439	1					
ANR	3847510	CompoundStatement		15:65:543:543	3847439	1					
ANR	3847511	ExpressionStatement	"va_start ( va , type_spec )"	997:2:25345:25368	3847439	0	True				
ANR	3847512	CallExpression	"va_start ( va , type_spec )"		3847439	0					
ANR	3847513	Callee	va_start		3847439	0					
ANR	3847514	Identifier	va_start		3847439	0					
ANR	3847515	ArgumentList	va		3847439	1					
ANR	3847516	Argument	va		3847439	0					
ANR	3847517	Identifier	va		3847439	0					
ANR	3847518	Argument	type_spec		3847439	1					
ANR	3847519	Identifier	type_spec		3847439	0					
ANR	3847520	ExpressionStatement	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"	998:2:25372:25432	3847439	1	True				
ANR	3847521	AssignmentExpression	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847439	0		=			
ANR	3847522	Identifier	retval		3847439	0					
ANR	3847523	CallExpression	"zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847439	1					
ANR	3847524	Callee	zend_parse_va_args		3847439	0					
ANR	3847525	Identifier	zend_parse_va_args		3847439	0					
ANR	3847526	ArgumentList	num_args		3847439	1					
ANR	3847527	Argument	num_args		3847439	0					
ANR	3847528	Identifier	num_args		3847439	0					
ANR	3847529	Argument	type_spec		3847439	1					
ANR	3847530	Identifier	type_spec		3847439	0					
ANR	3847531	Argument	& va		3847439	2					
ANR	3847532	UnaryOperationExpression	& va		3847439	0					
ANR	3847533	UnaryOperator	&		3847439	0					
ANR	3847534	Identifier	va		3847439	1					
ANR	3847535	Argument	flags		3847439	3					
ANR	3847536	Identifier	flags		3847439	0					
ANR	3847537	ExpressionStatement	va_end ( va )	999:2:25436:25446	3847439	2	True				
ANR	3847538	CallExpression	va_end ( va )		3847439	0					
ANR	3847539	Callee	va_end		3847439	0					
ANR	3847540	Identifier	va_end		3847439	0					
ANR	3847541	ArgumentList	va		3847439	1					
ANR	3847542	Argument	va		3847439	0					
ANR	3847543	Identifier	va		3847439	0					
ANR	3847544	ElseStatement	else		3847439	0					
ANR	3847545	CompoundStatement		19:8:658:658	3847439	0					
ANR	3847546	ExpressionStatement	p ++	1001:2:25460:25463	3847439	0	True				
ANR	3847547	PostIncDecOperationExpression	p ++		3847439	0					
ANR	3847548	Identifier	p		3847439	0					
ANR	3847549	IncDec	++		3847439	1					
ANR	3847550	ExpressionStatement	"va_start ( va , type_spec )"	1003:2:25468:25491	3847439	1	True				
ANR	3847551	CallExpression	"va_start ( va , type_spec )"		3847439	0					
ANR	3847552	Callee	va_start		3847439	0					
ANR	3847553	Identifier	va_start		3847439	0					
ANR	3847554	ArgumentList	va		3847439	1					
ANR	3847555	Argument	va		3847439	0					
ANR	3847556	Identifier	va		3847439	0					
ANR	3847557	Argument	type_spec		3847439	1					
ANR	3847558	Identifier	type_spec		3847439	0					
ANR	3847559	Statement	object	1005:2:25496:25501	3847439	2	True				
ANR	3847560	Statement	=	1005:9:25503:25503	3847439	3	True				
ANR	3847561	Statement	va_arg	1005:11:25505:25510	3847439	4	True				
ANR	3847562	Statement	(	1005:17:25511:25511	3847439	5	True				
ANR	3847563	Statement	va	1005:18:25512:25513	3847439	6	True				
ANR	3847564	Statement	","	1005:20:25514:25514	3847439	7	True				
ANR	3847565	Statement	zval	1005:22:25516:25519	3847439	8	True				
ANR	3847566	Statement	*	1005:27:25521:25521	3847439	9	True				
ANR	3847567	Statement	*	1005:28:25522:25522	3847439	10	True				
ANR	3847568	Statement	)	1005:29:25523:25523	3847439	11	True				
ANR	3847569	ExpressionStatement		1005:30:25524:25524	3847439	12	True				
ANR	3847570	Statement	ce	1006:2:25528:25529	3847439	13	True				
ANR	3847571	Statement	=	1006:5:25531:25531	3847439	14	True				
ANR	3847572	Statement	va_arg	1006:7:25533:25538	3847439	15	True				
ANR	3847573	Statement	(	1006:13:25539:25539	3847439	16	True				
ANR	3847574	Statement	va	1006:14:25540:25541	3847439	17	True				
ANR	3847575	Statement	","	1006:16:25542:25542	3847439	18	True				
ANR	3847576	Statement	zend_class_entry	1006:18:25544:25559	3847439	19	True				
ANR	3847577	Statement	*	1006:35:25561:25561	3847439	20	True				
ANR	3847578	Statement	)	1006:36:25562:25562	3847439	21	True				
ANR	3847579	ExpressionStatement		1006:37:25563:25563	3847439	22	True				
ANR	3847580	ExpressionStatement	* object = this_ptr	1007:2:25567:25585	3847439	23	True				
ANR	3847581	AssignmentExpression	* object = this_ptr		3847439	0		=			
ANR	3847582	UnaryOperationExpression	* object		3847439	0					
ANR	3847583	UnaryOperator	*		3847439	0					
ANR	3847584	Identifier	object		3847439	1					
ANR	3847585	Identifier	this_ptr		3847439	1					
ANR	3847586	IfStatement	"if ( ce && ! instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce ) )"		3847439	24					
ANR	3847587	Condition	"ce && ! instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce )"	1009:6:25594:25644	3847439	0	True				
ANR	3847588	AndExpression	"ce && ! instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce )"		3847439	0		&&			
ANR	3847589	Identifier	ce		3847439	0					
ANR	3847590	UnaryOperationExpression	"! instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce )"		3847439	1					
ANR	3847591	UnaryOperator	!		3847439	0					
ANR	3847592	CallExpression	"instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce )"		3847439	1					
ANR	3847593	Callee	instanceof_function		3847439	0					
ANR	3847594	Identifier	instanceof_function		3847439	0					
ANR	3847595	ArgumentList	Z_OBJCE_P ( this_ptr )		3847439	1					
ANR	3847596	Argument	Z_OBJCE_P ( this_ptr )		3847439	0					
ANR	3847597	CallExpression	Z_OBJCE_P ( this_ptr )		3847439	0					
ANR	3847598	Callee	Z_OBJCE_P		3847439	0					
ANR	3847599	Identifier	Z_OBJCE_P		3847439	0					
ANR	3847600	ArgumentList	this_ptr		3847439	1					
ANR	3847601	Argument	this_ptr		3847439	0					
ANR	3847602	Identifier	this_ptr		3847439	0					
ANR	3847603	Argument	ce		3847439	1					
ANR	3847604	Identifier	ce		3847439	0					
ANR	3847605	CompoundStatement		28:59:849:849	3847439	1					
ANR	3847606	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""%s::%s() must be derived from %s::%s"" , ZSTR_VAL ( Z_OBJCE_P ( this_ptr ) -> name ) , get_active_function_name ( ) , ZSTR_VAL ( ce -> name ) , get_active_function_name ( ) )"	1010:3:25652:25842	3847439	0	True				
ANR	3847607	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""%s::%s() must be derived from %s::%s"" , ZSTR_VAL ( Z_OBJCE_P ( this_ptr ) -> name ) , get_active_function_name ( ) , ZSTR_VAL ( ce -> name ) , get_active_function_name ( ) )"		3847439	0					
ANR	3847608	Callee	zend_error_noreturn		3847439	0					
ANR	3847609	Identifier	zend_error_noreturn		3847439	0					
ANR	3847610	ArgumentList	E_CORE_ERROR		3847439	1					
ANR	3847611	Argument	E_CORE_ERROR		3847439	0					
ANR	3847612	Identifier	E_CORE_ERROR		3847439	0					
ANR	3847613	Argument	"""%s::%s() must be derived from %s::%s"""		3847439	1					
ANR	3847614	PrimaryExpression	"""%s::%s() must be derived from %s::%s"""		3847439	0					
ANR	3847615	Argument	ZSTR_VAL ( Z_OBJCE_P ( this_ptr ) -> name )		3847439	2					
ANR	3847616	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( this_ptr ) -> name )		3847439	0					
ANR	3847617	Callee	ZSTR_VAL		3847439	0					
ANR	3847618	Identifier	ZSTR_VAL		3847439	0					
ANR	3847619	ArgumentList	Z_OBJCE_P ( this_ptr ) -> name		3847439	1					
ANR	3847620	Argument	Z_OBJCE_P ( this_ptr ) -> name		3847439	0					
ANR	3847621	PtrMemberAccess	Z_OBJCE_P ( this_ptr ) -> name		3847439	0					
ANR	3847622	CallExpression	Z_OBJCE_P ( this_ptr )		3847439	0					
ANR	3847623	Callee	Z_OBJCE_P		3847439	0					
ANR	3847624	Identifier	Z_OBJCE_P		3847439	0					
ANR	3847625	ArgumentList	this_ptr		3847439	1					
ANR	3847626	Argument	this_ptr		3847439	0					
ANR	3847627	Identifier	this_ptr		3847439	0					
ANR	3847628	Identifier	name		3847439	1					
ANR	3847629	Argument	get_active_function_name ( )		3847439	3					
ANR	3847630	CallExpression	get_active_function_name ( )		3847439	0					
ANR	3847631	Callee	get_active_function_name		3847439	0					
ANR	3847632	Identifier	get_active_function_name		3847439	0					
ANR	3847633	ArgumentList			3847439	1					
ANR	3847634	Argument	ZSTR_VAL ( ce -> name )		3847439	4					
ANR	3847635	CallExpression	ZSTR_VAL ( ce -> name )		3847439	0					
ANR	3847636	Callee	ZSTR_VAL		3847439	0					
ANR	3847637	Identifier	ZSTR_VAL		3847439	0					
ANR	3847638	ArgumentList	ce -> name		3847439	1					
ANR	3847639	Argument	ce -> name		3847439	0					
ANR	3847640	PtrMemberAccess	ce -> name		3847439	0					
ANR	3847641	Identifier	ce		3847439	0					
ANR	3847642	Identifier	name		3847439	1					
ANR	3847643	Argument	get_active_function_name ( )		3847439	5					
ANR	3847644	CallExpression	get_active_function_name ( )		3847439	0					
ANR	3847645	Callee	get_active_function_name		3847439	0					
ANR	3847646	Identifier	get_active_function_name		3847439	0					
ANR	3847647	ArgumentList			3847439	1					
ANR	3847648	ExpressionStatement	"retval = zend_parse_va_args ( num_args , p , & va , flags )"	1014:2:25851:25903	3847439	25	True				
ANR	3847649	AssignmentExpression	"retval = zend_parse_va_args ( num_args , p , & va , flags )"		3847439	0		=			
ANR	3847650	Identifier	retval		3847439	0					
ANR	3847651	CallExpression	"zend_parse_va_args ( num_args , p , & va , flags )"		3847439	1					
ANR	3847652	Callee	zend_parse_va_args		3847439	0					
ANR	3847653	Identifier	zend_parse_va_args		3847439	0					
ANR	3847654	ArgumentList	num_args		3847439	1					
ANR	3847655	Argument	num_args		3847439	0					
ANR	3847656	Identifier	num_args		3847439	0					
ANR	3847657	Argument	p		3847439	1					
ANR	3847658	Identifier	p		3847439	0					
ANR	3847659	Argument	& va		3847439	2					
ANR	3847660	UnaryOperationExpression	& va		3847439	0					
ANR	3847661	UnaryOperator	&		3847439	0					
ANR	3847662	Identifier	va		3847439	1					
ANR	3847663	Argument	flags		3847439	3					
ANR	3847664	Identifier	flags		3847439	0					
ANR	3847665	ExpressionStatement	va_end ( va )	1015:2:25907:25917	3847439	26	True				
ANR	3847666	CallExpression	va_end ( va )		3847439	0					
ANR	3847667	Callee	va_end		3847439	0					
ANR	3847668	Identifier	va_end		3847439	0					
ANR	3847669	ArgumentList	va		3847439	1					
ANR	3847670	Argument	va		3847439	0					
ANR	3847671	Identifier	va		3847439	0					
ANR	3847672	ReturnStatement	return retval ;	1017:1:25923:25936	3847439	8	True				
ANR	3847673	Identifier	retval		3847439	0					
ANR	3847674	ReturnType	ZEND_API int		3847439	1					
ANR	3847675	Identifier	zend_parse_method_parameters		3847439	2					
ANR	3847676	ParameterList	"int num_args , zval * this_ptr , const char * type_spec"		3847439	3					
ANR	3847677	Parameter	int num_args	981:42:24729:24740	3847439	0	True				
ANR	3847678	ParameterType	int		3847439	0					
ANR	3847679	Identifier	num_args		3847439	1					
ANR	3847680	Parameter	zval * this_ptr	981:56:24743:24756	3847439	1	True				
ANR	3847681	ParameterType	zval *		3847439	0					
ANR	3847682	Identifier	this_ptr		3847439	1					
ANR	3847683	Parameter	const char * type_spec	981:72:24759:24779	3847439	2	True				
ANR	3847684	ParameterType	const char *		3847439	0					
ANR	3847685	Identifier	type_spec		3847439	1					
ANR	3847686	CFGEntryNode	ENTRY		3847439		True				
ANR	3847687	CFGExitNode	EXIT		3847439		True				
ANR	3847688	Symbol	instanceof_function		3847439						
ANR	3847689	Symbol	EG ( current_execute_data ) -> func		3847439						
ANR	3847690	Symbol	current_execute_data		3847439						
ANR	3847691	Symbol	flags		3847439						
ANR	3847692	Symbol	EG ( current_execute_data ) -> func -> common . scope		3847439						
ANR	3847693	Symbol	* EG		3847439						
ANR	3847694	Symbol	* ce		3847439						
ANR	3847695	Symbol	* * EG		3847439						
ANR	3847696	Symbol	* object		3847439						
ANR	3847697	Symbol	type_spec		3847439						
ANR	3847698	Symbol	num_args		3847439						
ANR	3847699	Symbol	E_CORE_ERROR		3847439						
ANR	3847700	Symbol	zend_parse_va_args		3847439						
ANR	3847701	Symbol	Z_OBJCE_P		3847439						
ANR	3847702	Symbol	ce -> name		3847439						
ANR	3847703	Symbol	* Z_OBJCE_P		3847439						
ANR	3847704	Symbol	ce		3847439						
ANR	3847705	Symbol	EG		3847439						
ANR	3847706	Symbol	NULL		3847439						
ANR	3847707	Symbol	Z_OBJCE_P ( this_ptr ) -> name		3847439						
ANR	3847708	Symbol	get_active_function_name		3847439						
ANR	3847709	Symbol	va		3847439						
ANR	3847710	Symbol	* EG ( current_execute_data ) -> func		3847439						
ANR	3847711	Symbol	Z_TYPE_P		3847439						
ANR	3847712	Symbol	retval		3847439						
ANR	3847713	Symbol	ZSTR_VAL		3847439						
ANR	3847714	Symbol	p		3847439						
ANR	3847715	Symbol	this_ptr		3847439						
ANR	3847716	Symbol	& va		3847439						
ANR	3847717	Symbol	EG ( current_execute_data ) -> func -> common		3847439						
ANR	3847718	Symbol	is_method		3847439						
ANR	3847719	Symbol	IS_OBJECT		3847439						
ANR	3847720	Symbol	object		3847439						
ANR	3847721	Function	zend_parse_method_parameters_ex	1021:0:25951:26869							
ANR	3847722	FunctionDef	"zend_parse_method_parameters_ex (int flags , int num_args , zval * this_ptr , const char * type_spec)"		3847721	0					
ANR	3847723	CompoundStatement		1022:0:26075:26869	3847721	0					
ANR	3847724	IdentifierDeclStatement	va_list va ;	1023:1:26078:26088	3847721	0	True				
ANR	3847725	IdentifierDecl	va		3847721	0					
ANR	3847726	IdentifierDeclType	va_list		3847721	0					
ANR	3847727	Identifier	va		3847721	1					
ANR	3847728	IdentifierDeclStatement	int retval ;	1024:1:26091:26101	3847721	1	True				
ANR	3847729	IdentifierDecl	retval		3847721	0					
ANR	3847730	IdentifierDeclType	int		3847721	0					
ANR	3847731	Identifier	retval		3847721	1					
ANR	3847732	IdentifierDeclStatement	const char * p = type_spec ;	1025:1:26104:26129	3847721	2	True				
ANR	3847733	IdentifierDecl	* p = type_spec		3847721	0					
ANR	3847734	IdentifierDeclType	const char *		3847721	0					
ANR	3847735	Identifier	p		3847721	1					
ANR	3847736	AssignmentExpression	* p = type_spec		3847721	2		=			
ANR	3847737	Identifier	type_spec		3847721	0					
ANR	3847738	Identifier	type_spec		3847721	1					
ANR	3847739	IdentifierDeclStatement	zval * * object ;	1026:1:26132:26145	3847721	3	True				
ANR	3847740	IdentifierDecl	* * object		3847721	0					
ANR	3847741	IdentifierDeclType	zval * *		3847721	0					
ANR	3847742	Identifier	object		3847721	1					
ANR	3847743	IdentifierDeclStatement	zend_class_entry * ce ;	1027:1:26148:26168	3847721	4	True				
ANR	3847744	IdentifierDecl	* ce		3847721	0					
ANR	3847745	IdentifierDeclType	zend_class_entry *		3847721	0					
ANR	3847746	Identifier	ce		3847721	1					
ANR	3847747	IfStatement	if ( ! this_ptr )		3847721	5					
ANR	3847748	Condition	! this_ptr	1029:5:26176:26184	3847721	0	True				
ANR	3847749	UnaryOperationExpression	! this_ptr		3847721	0					
ANR	3847750	UnaryOperator	!		3847721	0					
ANR	3847751	Identifier	this_ptr		3847721	1					
ANR	3847752	CompoundStatement		8:16:111:111	3847721	1					
ANR	3847753	ExpressionStatement	"va_start ( va , type_spec )"	1030:2:26191:26214	3847721	0	True				
ANR	3847754	CallExpression	"va_start ( va , type_spec )"		3847721	0					
ANR	3847755	Callee	va_start		3847721	0					
ANR	3847756	Identifier	va_start		3847721	0					
ANR	3847757	ArgumentList	va		3847721	1					
ANR	3847758	Argument	va		3847721	0					
ANR	3847759	Identifier	va		3847721	0					
ANR	3847760	Argument	type_spec		3847721	1					
ANR	3847761	Identifier	type_spec		3847721	0					
ANR	3847762	ExpressionStatement	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"	1031:2:26218:26278	3847721	1	True				
ANR	3847763	AssignmentExpression	"retval = zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847721	0		=			
ANR	3847764	Identifier	retval		3847721	0					
ANR	3847765	CallExpression	"zend_parse_va_args ( num_args , type_spec , & va , flags )"		3847721	1					
ANR	3847766	Callee	zend_parse_va_args		3847721	0					
ANR	3847767	Identifier	zend_parse_va_args		3847721	0					
ANR	3847768	ArgumentList	num_args		3847721	1					
ANR	3847769	Argument	num_args		3847721	0					
ANR	3847770	Identifier	num_args		3847721	0					
ANR	3847771	Argument	type_spec		3847721	1					
ANR	3847772	Identifier	type_spec		3847721	0					
ANR	3847773	Argument	& va		3847721	2					
ANR	3847774	UnaryOperationExpression	& va		3847721	0					
ANR	3847775	UnaryOperator	&		3847721	0					
ANR	3847776	Identifier	va		3847721	1					
ANR	3847777	Argument	flags		3847721	3					
ANR	3847778	Identifier	flags		3847721	0					
ANR	3847779	ExpressionStatement	va_end ( va )	1032:2:26282:26292	3847721	2	True				
ANR	3847780	CallExpression	va_end ( va )		3847721	0					
ANR	3847781	Callee	va_end		3847721	0					
ANR	3847782	Identifier	va_end		3847721	0					
ANR	3847783	ArgumentList	va		3847721	1					
ANR	3847784	Argument	va		3847721	0					
ANR	3847785	Identifier	va		3847721	0					
ANR	3847786	ElseStatement	else		3847721	0					
ANR	3847787	CompoundStatement		12:8:226:226	3847721	0					
ANR	3847788	ExpressionStatement	p ++	1034:2:26306:26309	3847721	0	True				
ANR	3847789	PostIncDecOperationExpression	p ++		3847721	0					
ANR	3847790	Identifier	p		3847721	0					
ANR	3847791	IncDec	++		3847721	1					
ANR	3847792	ExpressionStatement	"va_start ( va , type_spec )"	1035:2:26313:26336	3847721	1	True				
ANR	3847793	CallExpression	"va_start ( va , type_spec )"		3847721	0					
ANR	3847794	Callee	va_start		3847721	0					
ANR	3847795	Identifier	va_start		3847721	0					
ANR	3847796	ArgumentList	va		3847721	1					
ANR	3847797	Argument	va		3847721	0					
ANR	3847798	Identifier	va		3847721	0					
ANR	3847799	Argument	type_spec		3847721	1					
ANR	3847800	Identifier	type_spec		3847721	0					
ANR	3847801	Statement	object	1037:2:26341:26346	3847721	2	True				
ANR	3847802	Statement	=	1037:9:26348:26348	3847721	3	True				
ANR	3847803	Statement	va_arg	1037:11:26350:26355	3847721	4	True				
ANR	3847804	Statement	(	1037:17:26356:26356	3847721	5	True				
ANR	3847805	Statement	va	1037:18:26357:26358	3847721	6	True				
ANR	3847806	Statement	","	1037:20:26359:26359	3847721	7	True				
ANR	3847807	Statement	zval	1037:22:26361:26364	3847721	8	True				
ANR	3847808	Statement	*	1037:27:26366:26366	3847721	9	True				
ANR	3847809	Statement	*	1037:28:26367:26367	3847721	10	True				
ANR	3847810	Statement	)	1037:29:26368:26368	3847721	11	True				
ANR	3847811	ExpressionStatement		1037:30:26369:26369	3847721	12	True				
ANR	3847812	Statement	ce	1038:2:26373:26374	3847721	13	True				
ANR	3847813	Statement	=	1038:5:26376:26376	3847721	14	True				
ANR	3847814	Statement	va_arg	1038:7:26378:26383	3847721	15	True				
ANR	3847815	Statement	(	1038:13:26384:26384	3847721	16	True				
ANR	3847816	Statement	va	1038:14:26385:26386	3847721	17	True				
ANR	3847817	Statement	","	1038:16:26387:26387	3847721	18	True				
ANR	3847818	Statement	zend_class_entry	1038:18:26389:26404	3847721	19	True				
ANR	3847819	Statement	*	1038:35:26406:26406	3847721	20	True				
ANR	3847820	Statement	)	1038:36:26407:26407	3847721	21	True				
ANR	3847821	ExpressionStatement		1038:37:26408:26408	3847721	22	True				
ANR	3847822	ExpressionStatement	* object = this_ptr	1039:2:26412:26430	3847721	23	True				
ANR	3847823	AssignmentExpression	* object = this_ptr		3847721	0		=			
ANR	3847824	UnaryOperationExpression	* object		3847721	0					
ANR	3847825	UnaryOperator	*		3847721	0					
ANR	3847826	Identifier	object		3847721	1					
ANR	3847827	Identifier	this_ptr		3847721	1					
ANR	3847828	IfStatement	"if ( ce && ! instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce ) )"		3847721	24					
ANR	3847829	Condition	"ce && ! instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce )"	1041:6:26439:26489	3847721	0	True				
ANR	3847830	AndExpression	"ce && ! instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce )"		3847721	0		&&			
ANR	3847831	Identifier	ce		3847721	0					
ANR	3847832	UnaryOperationExpression	"! instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce )"		3847721	1					
ANR	3847833	UnaryOperator	!		3847721	0					
ANR	3847834	CallExpression	"instanceof_function ( Z_OBJCE_P ( this_ptr ) , ce )"		3847721	1					
ANR	3847835	Callee	instanceof_function		3847721	0					
ANR	3847836	Identifier	instanceof_function		3847721	0					
ANR	3847837	ArgumentList	Z_OBJCE_P ( this_ptr )		3847721	1					
ANR	3847838	Argument	Z_OBJCE_P ( this_ptr )		3847721	0					
ANR	3847839	CallExpression	Z_OBJCE_P ( this_ptr )		3847721	0					
ANR	3847840	Callee	Z_OBJCE_P		3847721	0					
ANR	3847841	Identifier	Z_OBJCE_P		3847721	0					
ANR	3847842	ArgumentList	this_ptr		3847721	1					
ANR	3847843	Argument	this_ptr		3847721	0					
ANR	3847844	Identifier	this_ptr		3847721	0					
ANR	3847845	Argument	ce		3847721	1					
ANR	3847846	Identifier	ce		3847721	0					
ANR	3847847	CompoundStatement		20:59:416:416	3847721	1					
ANR	3847848	IfStatement	if ( ! ( flags & ZEND_PARSE_PARAMS_QUIET ) )		3847721	0					
ANR	3847849	Condition	! ( flags & ZEND_PARSE_PARAMS_QUIET )	1042:7:26501:26534	3847721	0	True				
ANR	3847850	UnaryOperationExpression	! ( flags & ZEND_PARSE_PARAMS_QUIET )		3847721	0					
ANR	3847851	UnaryOperator	!		3847721	0					
ANR	3847852	BitAndExpression	flags & ZEND_PARSE_PARAMS_QUIET		3847721	1		&			
ANR	3847853	Identifier	flags		3847721	0					
ANR	3847854	Identifier	ZEND_PARSE_PARAMS_QUIET		3847721	1					
ANR	3847855	CompoundStatement		21:43:461:461	3847721	1					
ANR	3847856	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""%s::%s() must be derived from %s::%s"" , ZSTR_VAL ( ce -> name ) , get_active_function_name ( ) , ZSTR_VAL ( Z_OBJCE_P ( this_ptr ) -> name ) , get_active_function_name ( ) )"	1043:4:26543:26734	3847721	0	True				
ANR	3847857	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""%s::%s() must be derived from %s::%s"" , ZSTR_VAL ( ce -> name ) , get_active_function_name ( ) , ZSTR_VAL ( Z_OBJCE_P ( this_ptr ) -> name ) , get_active_function_name ( ) )"		3847721	0					
ANR	3847858	Callee	zend_error_noreturn		3847721	0					
ANR	3847859	Identifier	zend_error_noreturn		3847721	0					
ANR	3847860	ArgumentList	E_CORE_ERROR		3847721	1					
ANR	3847861	Argument	E_CORE_ERROR		3847721	0					
ANR	3847862	Identifier	E_CORE_ERROR		3847721	0					
ANR	3847863	Argument	"""%s::%s() must be derived from %s::%s"""		3847721	1					
ANR	3847864	PrimaryExpression	"""%s::%s() must be derived from %s::%s"""		3847721	0					
ANR	3847865	Argument	ZSTR_VAL ( ce -> name )		3847721	2					
ANR	3847866	CallExpression	ZSTR_VAL ( ce -> name )		3847721	0					
ANR	3847867	Callee	ZSTR_VAL		3847721	0					
ANR	3847868	Identifier	ZSTR_VAL		3847721	0					
ANR	3847869	ArgumentList	ce -> name		3847721	1					
ANR	3847870	Argument	ce -> name		3847721	0					
ANR	3847871	PtrMemberAccess	ce -> name		3847721	0					
ANR	3847872	Identifier	ce		3847721	0					
ANR	3847873	Identifier	name		3847721	1					
ANR	3847874	Argument	get_active_function_name ( )		3847721	3					
ANR	3847875	CallExpression	get_active_function_name ( )		3847721	0					
ANR	3847876	Callee	get_active_function_name		3847721	0					
ANR	3847877	Identifier	get_active_function_name		3847721	0					
ANR	3847878	ArgumentList			3847721	1					
ANR	3847879	Argument	ZSTR_VAL ( Z_OBJCE_P ( this_ptr ) -> name )		3847721	4					
ANR	3847880	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( this_ptr ) -> name )		3847721	0					
ANR	3847881	Callee	ZSTR_VAL		3847721	0					
ANR	3847882	Identifier	ZSTR_VAL		3847721	0					
ANR	3847883	ArgumentList	Z_OBJCE_P ( this_ptr ) -> name		3847721	1					
ANR	3847884	Argument	Z_OBJCE_P ( this_ptr ) -> name		3847721	0					
ANR	3847885	PtrMemberAccess	Z_OBJCE_P ( this_ptr ) -> name		3847721	0					
ANR	3847886	CallExpression	Z_OBJCE_P ( this_ptr )		3847721	0					
ANR	3847887	Callee	Z_OBJCE_P		3847721	0					
ANR	3847888	Identifier	Z_OBJCE_P		3847721	0					
ANR	3847889	ArgumentList	this_ptr		3847721	1					
ANR	3847890	Argument	this_ptr		3847721	0					
ANR	3847891	Identifier	this_ptr		3847721	0					
ANR	3847892	Identifier	name		3847721	1					
ANR	3847893	Argument	get_active_function_name ( )		3847721	5					
ANR	3847894	CallExpression	get_active_function_name ( )		3847721	0					
ANR	3847895	Callee	get_active_function_name		3847721	0					
ANR	3847896	Identifier	get_active_function_name		3847721	0					
ANR	3847897	ArgumentList			3847721	1					
ANR	3847898	ExpressionStatement	va_end ( va )	1046:3:26744:26754	3847721	1	True				
ANR	3847899	CallExpression	va_end ( va )		3847721	0					
ANR	3847900	Callee	va_end		3847721	0					
ANR	3847901	Identifier	va_end		3847721	0					
ANR	3847902	ArgumentList	va		3847721	1					
ANR	3847903	Argument	va		3847721	0					
ANR	3847904	Identifier	va		3847721	0					
ANR	3847905	ReturnStatement	return FAILURE ;	1047:3:26759:26773	3847721	2	True				
ANR	3847906	Identifier	FAILURE		3847721	0					
ANR	3847907	ExpressionStatement	"retval = zend_parse_va_args ( num_args , p , & va , flags )"	1050:2:26782:26834	3847721	25	True				
ANR	3847908	AssignmentExpression	"retval = zend_parse_va_args ( num_args , p , & va , flags )"		3847721	0		=			
ANR	3847909	Identifier	retval		3847721	0					
ANR	3847910	CallExpression	"zend_parse_va_args ( num_args , p , & va , flags )"		3847721	1					
ANR	3847911	Callee	zend_parse_va_args		3847721	0					
ANR	3847912	Identifier	zend_parse_va_args		3847721	0					
ANR	3847913	ArgumentList	num_args		3847721	1					
ANR	3847914	Argument	num_args		3847721	0					
ANR	3847915	Identifier	num_args		3847721	0					
ANR	3847916	Argument	p		3847721	1					
ANR	3847917	Identifier	p		3847721	0					
ANR	3847918	Argument	& va		3847721	2					
ANR	3847919	UnaryOperationExpression	& va		3847721	0					
ANR	3847920	UnaryOperator	&		3847721	0					
ANR	3847921	Identifier	va		3847721	1					
ANR	3847922	Argument	flags		3847721	3					
ANR	3847923	Identifier	flags		3847721	0					
ANR	3847924	ExpressionStatement	va_end ( va )	1051:2:26838:26848	3847721	26	True				
ANR	3847925	CallExpression	va_end ( va )		3847721	0					
ANR	3847926	Callee	va_end		3847721	0					
ANR	3847927	Identifier	va_end		3847721	0					
ANR	3847928	ArgumentList	va		3847721	1					
ANR	3847929	Argument	va		3847721	0					
ANR	3847930	Identifier	va		3847721	0					
ANR	3847931	ReturnStatement	return retval ;	1053:1:26854:26867	3847721	6	True				
ANR	3847932	Identifier	retval		3847721	0					
ANR	3847933	ReturnType	ZEND_API int		3847721	1					
ANR	3847934	Identifier	zend_parse_method_parameters_ex		3847721	2					
ANR	3847935	ParameterList	"int flags , int num_args , zval * this_ptr , const char * type_spec"		3847721	3					
ANR	3847936	Parameter	int flags	1021:45:25996:26004	3847721	0	True				
ANR	3847937	ParameterType	int		3847721	0					
ANR	3847938	Identifier	flags		3847721	1					
ANR	3847939	Parameter	int num_args	1021:56:26007:26018	3847721	1	True				
ANR	3847940	ParameterType	int		3847721	0					
ANR	3847941	Identifier	num_args		3847721	1					
ANR	3847942	Parameter	zval * this_ptr	1021:70:26021:26034	3847721	2	True				
ANR	3847943	ParameterType	zval *		3847721	0					
ANR	3847944	Identifier	this_ptr		3847721	1					
ANR	3847945	Parameter	const char * type_spec	1021:86:26037:26057	3847721	3	True				
ANR	3847946	ParameterType	const char *		3847721	0					
ANR	3847947	Identifier	type_spec		3847721	1					
ANR	3847948	CFGEntryNode	ENTRY		3847721		True				
ANR	3847949	CFGExitNode	EXIT		3847721		True				
ANR	3847950	Symbol	instanceof_function		3847721						
ANR	3847951	Symbol	ce		3847721						
ANR	3847952	Symbol	Z_OBJCE_P ( this_ptr ) -> name		3847721						
ANR	3847953	Symbol	flags		3847721						
ANR	3847954	Symbol	get_active_function_name		3847721						
ANR	3847955	Symbol	va		3847721						
ANR	3847956	Symbol	* ce		3847721						
ANR	3847957	Symbol	* object		3847721						
ANR	3847958	Symbol	FAILURE		3847721						
ANR	3847959	Symbol	retval		3847721						
ANR	3847960	Symbol	ZSTR_VAL		3847721						
ANR	3847961	Symbol	p		3847721						
ANR	3847962	Symbol	this_ptr		3847721						
ANR	3847963	Symbol	type_spec		3847721						
ANR	3847964	Symbol	& va		3847721						
ANR	3847965	Symbol	num_args		3847721						
ANR	3847966	Symbol	E_CORE_ERROR		3847721						
ANR	3847967	Symbol	zend_parse_va_args		3847721						
ANR	3847968	Symbol	Z_OBJCE_P		3847721						
ANR	3847969	Symbol	ZEND_PARSE_PARAMS_QUIET		3847721						
ANR	3847970	Symbol	ce -> name		3847721						
ANR	3847971	Symbol	object		3847721						
ANR	3847972	Symbol	* Z_OBJCE_P		3847721						
ANR	3847973	Function	_array_init	1058:0:26919:27120							
ANR	3847974	FunctionDef	"_array_init (zval * arg , uint32_t size ZEND_FILE_LINE_DC)"		3847973	0					
ANR	3847975	CompoundStatement		1059:0:26998:27120	3847973	0					
ANR	3847976	ExpressionStatement	ZVAL_NEW_ARR ( arg )	1060:1:27001:27018	3847973	0	True				
ANR	3847977	CallExpression	ZVAL_NEW_ARR ( arg )		3847973	0					
ANR	3847978	Callee	ZVAL_NEW_ARR		3847973	0					
ANR	3847979	Identifier	ZVAL_NEW_ARR		3847973	0					
ANR	3847980	ArgumentList	arg		3847973	1					
ANR	3847981	Argument	arg		3847973	0					
ANR	3847982	Identifier	arg		3847973	0					
ANR	3847983	Statement	_zend_hash_init	1061:1:27021:27035	3847973	1	True				
ANR	3847984	Statement	(	1061:16:27036:27036	3847973	2	True				
ANR	3847985	Statement	Z_ARRVAL_P	1061:17:27037:27046	3847973	3	True				
ANR	3847986	Statement	(	1061:27:27047:27047	3847973	4	True				
ANR	3847987	Statement	arg	1061:28:27048:27050	3847973	5	True				
ANR	3847988	Statement	)	1061:31:27051:27051	3847973	6	True				
ANR	3847989	Statement	","	1061:32:27052:27052	3847973	7	True				
ANR	3847990	Statement	size	1061:34:27054:27057	3847973	8	True				
ANR	3847991	Statement	","	1061:38:27058:27058	3847973	9	True				
ANR	3847992	Statement	ZVAL_PTR_DTOR	1061:40:27060:27072	3847973	10	True				
ANR	3847993	Statement	","	1061:53:27073:27073	3847973	11	True				
ANR	3847994	Statement	0	1061:55:27075:27075	3847973	12	True				
ANR	3847995	Statement	ZEND_FILE_LINE_RELAY_CC	1061:57:27077:27099	3847973	13	True				
ANR	3847996	Statement	)	1061:80:27100:27100	3847973	14	True				
ANR	3847997	ExpressionStatement		1061:81:27101:27101	3847973	15	True				
ANR	3847998	ReturnStatement	return SUCCESS ;	1062:1:27104:27118	3847973	16	True				
ANR	3847999	Identifier	SUCCESS		3847973	0					
ANR	3848000	ReturnType	ZEND_API int		3847973	1					
ANR	3848001	Identifier	_array_init		3847973	2					
ANR	3848002	ParameterList	"zval * arg , uint32_t size ZEND_FILE_LINE_DC"		3847973	3					
ANR	3848003	Parameter	zval * arg	1058:25:26944:26952	3847973	0	True				
ANR	3848004	ParameterType	zval *		3847973	0					
ANR	3848005	Identifier	arg		3847973	1					
ANR	3848006	Parameter	uint32_t size ZEND_FILE_LINE_DC	1058:36:26955:26985	3847973	1	True				
ANR	3848007	ParameterType	uint32_t size		3847973	0					
ANR	3848008	Identifier	ZEND_FILE_LINE_DC		3847973	1					
ANR	3848009	CFGEntryNode	ENTRY		3847973		True				
ANR	3848010	CFGExitNode	EXIT		3847973		True				
ANR	3848011	Symbol	SUCCESS		3847973						
ANR	3848012	Symbol	arg		3847973						
ANR	3848013	Symbol	ZEND_FILE_LINE_DC		3847973						
ANR	3848014	Function	zend_merge_properties	1068:0:27278:27744							
ANR	3848015	FunctionDef	"zend_merge_properties (zval * obj , HashTable * properties)"		3848014	0					
ANR	3848016	CompoundStatement		1069:0:27358:27744	3848014	0					
ANR	3848017	IdentifierDeclStatement	const zend_object_handlers * obj_ht = Z_OBJ_HT_P ( obj ) ;	1070:1:27361:27413	3848014	0	True				
ANR	3848018	IdentifierDecl	* obj_ht = Z_OBJ_HT_P ( obj )		3848014	0					
ANR	3848019	IdentifierDeclType	const zend_object_handlers *		3848014	0					
ANR	3848020	Identifier	obj_ht		3848014	1					
ANR	3848021	AssignmentExpression	* obj_ht = Z_OBJ_HT_P ( obj )		3848014	2		=			
ANR	3848022	Identifier	obj_ht		3848014	0					
ANR	3848023	CallExpression	Z_OBJ_HT_P ( obj )		3848014	1					
ANR	3848024	Callee	Z_OBJ_HT_P		3848014	0					
ANR	3848025	Identifier	Z_OBJ_HT_P		3848014	0					
ANR	3848026	ArgumentList	obj		3848014	1					
ANR	3848027	Argument	obj		3848014	0					
ANR	3848028	Identifier	obj		3848014	0					
ANR	3848029	IdentifierDeclStatement	zend_class_entry * old_scope = EG ( scope ) ;	1071:1:27416:27455	3848014	1	True				
ANR	3848030	IdentifierDecl	* old_scope = EG ( scope )		3848014	0					
ANR	3848031	IdentifierDeclType	zend_class_entry *		3848014	0					
ANR	3848032	Identifier	old_scope		3848014	1					
ANR	3848033	AssignmentExpression	* old_scope = EG ( scope )		3848014	2		=			
ANR	3848034	Identifier	old_scope		3848014	0					
ANR	3848035	CallExpression	EG ( scope )		3848014	1					
ANR	3848036	Callee	EG		3848014	0					
ANR	3848037	Identifier	EG		3848014	0					
ANR	3848038	ArgumentList	scope		3848014	1					
ANR	3848039	Argument	scope		3848014	0					
ANR	3848040	Identifier	scope		3848014	0					
ANR	3848041	IdentifierDeclStatement	zend_string * key ;	1072:1:27458:27474	3848014	2	True				
ANR	3848042	IdentifierDecl	* key		3848014	0					
ANR	3848043	IdentifierDeclType	zend_string *		3848014	0					
ANR	3848044	Identifier	key		3848014	1					
ANR	3848045	IdentifierDeclStatement	zval * value ;	1073:1:27477:27488	3848014	3	True				
ANR	3848046	IdentifierDecl	* value		3848014	0					
ANR	3848047	IdentifierDeclType	zval *		3848014	0					
ANR	3848048	Identifier	value		3848014	1					
ANR	3848049	ExpressionStatement	EG ( scope ) = Z_OBJCE_P ( obj )	1075:1:27492:27518	3848014	4	True				
ANR	3848050	AssignmentExpression	EG ( scope ) = Z_OBJCE_P ( obj )		3848014	0		=			
ANR	3848051	CallExpression	EG ( scope )		3848014	0					
ANR	3848052	Callee	EG		3848014	0					
ANR	3848053	Identifier	EG		3848014	0					
ANR	3848054	ArgumentList	scope		3848014	1					
ANR	3848055	Argument	scope		3848014	0					
ANR	3848056	Identifier	scope		3848014	0					
ANR	3848057	CallExpression	Z_OBJCE_P ( obj )		3848014	1					
ANR	3848058	Callee	Z_OBJCE_P		3848014	0					
ANR	3848059	Identifier	Z_OBJCE_P		3848014	0					
ANR	3848060	ArgumentList	obj		3848014	1					
ANR	3848061	Argument	obj		3848014	0					
ANR	3848062	Identifier	obj		3848014	0					
ANR	3848063	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	1076:1:27521:27549	3848014	5	True				
ANR	3848064	Statement	(	1076:30:27550:27550	3848014	6	True				
ANR	3848065	Statement	properties	1076:31:27551:27560	3848014	7	True				
ANR	3848066	Statement	","	1076:41:27561:27561	3848014	8	True				
ANR	3848067	Statement	key	1076:43:27563:27565	3848014	9	True				
ANR	3848068	Statement	","	1076:46:27566:27566	3848014	10	True				
ANR	3848069	Statement	value	1076:48:27568:27572	3848014	11	True				
ANR	3848070	Statement	)	1076:53:27573:27573	3848014	12	True				
ANR	3848071	CompoundStatement		8:55:216:216	3848014	13					
ANR	3848072	IfStatement	if ( key )		3848014	0					
ANR	3848073	Condition	key	1077:6:27583:27585	3848014	0	True				
ANR	3848074	Identifier	key		3848014	0					
ANR	3848075	CompoundStatement		10:3:234:245	3848014	1					
ANR	3848076	IdentifierDeclStatement	zval member ;	1078:3:27593:27604	3848014	0	True				
ANR	3848077	IdentifierDecl	member		3848014	0					
ANR	3848078	IdentifierDeclType	zval		3848014	0					
ANR	3848079	Identifier	member		3848014	1					
ANR	3848080	ExpressionStatement	"ZVAL_STR ( & member , key )"	1080:3:27610:27632	3848014	1	True				
ANR	3848081	CallExpression	"ZVAL_STR ( & member , key )"		3848014	0					
ANR	3848082	Callee	ZVAL_STR		3848014	0					
ANR	3848083	Identifier	ZVAL_STR		3848014	0					
ANR	3848084	ArgumentList	& member		3848014	1					
ANR	3848085	Argument	& member		3848014	0					
ANR	3848086	UnaryOperationExpression	& member		3848014	0					
ANR	3848087	UnaryOperator	&		3848014	0					
ANR	3848088	Identifier	member		3848014	1					
ANR	3848089	Argument	key		3848014	1					
ANR	3848090	Identifier	key		3848014	0					
ANR	3848091	ExpressionStatement	"obj_ht -> write_property ( obj , & member , value , NULL )"	1081:3:27637:27686	3848014	2	True				
ANR	3848092	CallExpression	"obj_ht -> write_property ( obj , & member , value , NULL )"		3848014	0					
ANR	3848093	Callee	obj_ht -> write_property		3848014	0					
ANR	3848094	PtrMemberAccess	obj_ht -> write_property		3848014	0					
ANR	3848095	Identifier	obj_ht		3848014	0					
ANR	3848096	Identifier	write_property		3848014	1					
ANR	3848097	ArgumentList	obj		3848014	1					
ANR	3848098	Argument	obj		3848014	0					
ANR	3848099	Identifier	obj		3848014	0					
ANR	3848100	Argument	& member		3848014	1					
ANR	3848101	UnaryOperationExpression	& member		3848014	0					
ANR	3848102	UnaryOperator	&		3848014	0					
ANR	3848103	Identifier	member		3848014	1					
ANR	3848104	Argument	value		3848014	2					
ANR	3848105	Identifier	value		3848014	0					
ANR	3848106	Argument	NULL		3848014	3					
ANR	3848107	Identifier	NULL		3848014	0					
ANR	3848108	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1083:3:27695:27718	3848014	14	True				
ANR	3848109	CallExpression	ZEND_HASH_FOREACH_END ( )		3848014	0					
ANR	3848110	Callee	ZEND_HASH_FOREACH_END		3848014	0					
ANR	3848111	Identifier	ZEND_HASH_FOREACH_END		3848014	0					
ANR	3848112	ArgumentList			3848014	1					
ANR	3848113	ExpressionStatement	EG ( scope ) = old_scope	1084:1:27721:27742	3848014	15	True				
ANR	3848114	AssignmentExpression	EG ( scope ) = old_scope		3848014	0		=			
ANR	3848115	CallExpression	EG ( scope )		3848014	0					
ANR	3848116	Callee	EG		3848014	0					
ANR	3848117	Identifier	EG		3848014	0					
ANR	3848118	ArgumentList	scope		3848014	1					
ANR	3848119	Argument	scope		3848014	0					
ANR	3848120	Identifier	scope		3848014	0					
ANR	3848121	Identifier	old_scope		3848014	1					
ANR	3848122	ReturnType	ZEND_API void		3848014	1					
ANR	3848123	Identifier	zend_merge_properties		3848014	2					
ANR	3848124	ParameterList	"zval * obj , HashTable * properties"		3848014	3					
ANR	3848125	Parameter	zval * obj	1068:36:27314:27322	3848014	0	True				
ANR	3848126	ParameterType	zval *		3848014	0					
ANR	3848127	Identifier	obj		3848014	1					
ANR	3848128	Parameter	HashTable * properties	1068:47:27325:27345	3848014	1	True				
ANR	3848129	ParameterType	HashTable *		3848014	0					
ANR	3848130	Identifier	properties		3848014	1					
ANR	3848131	CFGEntryNode	ENTRY		3848014		True				
ANR	3848132	CFGExitNode	EXIT		3848014		True				
ANR	3848133	Symbol	EG		3848014						
ANR	3848134	Symbol	& member		3848014						
ANR	3848135	Symbol	NULL		3848014						
ANR	3848136	Symbol	old_scope		3848014						
ANR	3848137	Symbol	obj_ht		3848014						
ANR	3848138	Symbol	obj		3848014						
ANR	3848139	Symbol	scope		3848014						
ANR	3848140	Symbol	Z_OBJ_HT_P		3848014						
ANR	3848141	Symbol	Z_OBJCE_P		3848014						
ANR	3848142	Symbol	member		3848014						
ANR	3848143	Symbol	value		3848014						
ANR	3848144	Symbol	properties		3848014						
ANR	3848145	Symbol	key		3848014						
ANR	3848146	Function	zend_update_class_constants	1088:0:27757:30321							
ANR	3848147	FunctionDef	zend_update_class_constants (zend_class_entry * class_type)		3848146	0					
ANR	3848148	CompoundStatement		1089:0:27838:30321	3848146	0					
ANR	3848149	IfStatement	if ( ! ( class_type -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED ) )		3848146	0					
ANR	3848150	Condition	! ( class_type -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED )	1090:5:27845:27896	3848146	0	True				
ANR	3848151	UnaryOperationExpression	! ( class_type -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED )		3848146	0					
ANR	3848152	UnaryOperator	!		3848146	0					
ANR	3848153	BitAndExpression	class_type -> ce_flags & ZEND_ACC_CONSTANTS_UPDATED		3848146	1		&			
ANR	3848154	PtrMemberAccess	class_type -> ce_flags		3848146	0					
ANR	3848155	Identifier	class_type		3848146	0					
ANR	3848156	Identifier	ce_flags		3848146	1					
ANR	3848157	Identifier	ZEND_ACC_CONSTANTS_UPDATED		3848146	1					
ANR	3848158	CompoundStatement		2:59:60:60	3848146	1					
ANR	3848159	ExpressionStatement	class_type -> ce_flags |= ZEND_ACC_CONSTANTS_UPDATED	1091:2:27903:27953	3848146	0	True				
ANR	3848160	AssignmentExpression	class_type -> ce_flags |= ZEND_ACC_CONSTANTS_UPDATED		3848146	0		|=			
ANR	3848161	PtrMemberAccess	class_type -> ce_flags		3848146	0					
ANR	3848162	Identifier	class_type		3848146	0					
ANR	3848163	Identifier	ce_flags		3848146	1					
ANR	3848164	Identifier	ZEND_ACC_CONSTANTS_UPDATED		3848146	1					
ANR	3848165	IfStatement	if ( class_type -> parent )		3848146	1					
ANR	3848166	Condition	class_type -> parent	1093:6:27962:27979	3848146	0	True				
ANR	3848167	PtrMemberAccess	class_type -> parent		3848146	0					
ANR	3848168	Identifier	class_type		3848146	0					
ANR	3848169	Identifier	parent		3848146	1					
ANR	3848170	CompoundStatement		5:26:143:143	3848146	1					
ANR	3848171	IfStatement	if ( UNEXPECTED ( zend_update_class_constants ( class_type -> parent ) != SUCCESS ) )		3848146	0					
ANR	3848172	Condition	UNEXPECTED ( zend_update_class_constants ( class_type -> parent ) != SUCCESS )	1094:7:27991:28060	3848146	0	True				
ANR	3848173	CallExpression	UNEXPECTED ( zend_update_class_constants ( class_type -> parent ) != SUCCESS )		3848146	0					
ANR	3848174	Callee	UNEXPECTED		3848146	0					
ANR	3848175	Identifier	UNEXPECTED		3848146	0					
ANR	3848176	ArgumentList	zend_update_class_constants ( class_type -> parent ) != SUCCESS		3848146	1					
ANR	3848177	Argument	zend_update_class_constants ( class_type -> parent ) != SUCCESS		3848146	0					
ANR	3848178	EqualityExpression	zend_update_class_constants ( class_type -> parent ) != SUCCESS		3848146	0		!=			
ANR	3848179	CallExpression	zend_update_class_constants ( class_type -> parent )		3848146	0					
ANR	3848180	Callee	zend_update_class_constants		3848146	0					
ANR	3848181	Identifier	zend_update_class_constants		3848146	0					
ANR	3848182	ArgumentList	class_type -> parent		3848146	1					
ANR	3848183	Argument	class_type -> parent		3848146	0					
ANR	3848184	PtrMemberAccess	class_type -> parent		3848146	0					
ANR	3848185	Identifier	class_type		3848146	0					
ANR	3848186	Identifier	parent		3848146	1					
ANR	3848187	Identifier	SUCCESS		3848146	1					
ANR	3848188	CompoundStatement		6:79:224:224	3848146	1					
ANR	3848189	ReturnStatement	return FAILURE ;	1095:4:28069:28083	3848146	0	True				
ANR	3848190	Identifier	FAILURE		3848146	0					
ANR	3848191	IfStatement	if ( ! CE_STATIC_MEMBERS ( class_type ) && class_type -> default_static_members_count )		3848146	2					
ANR	3848192	Condition	! CE_STATIC_MEMBERS ( class_type ) && class_type -> default_static_members_count	1099:6:28101:28174	3848146	0	True				
ANR	3848193	AndExpression	! CE_STATIC_MEMBERS ( class_type ) && class_type -> default_static_members_count		3848146	0		&&			
ANR	3848194	UnaryOperationExpression	! CE_STATIC_MEMBERS ( class_type )		3848146	0					
ANR	3848195	UnaryOperator	!		3848146	0					
ANR	3848196	CallExpression	CE_STATIC_MEMBERS ( class_type )		3848146	1					
ANR	3848197	Callee	CE_STATIC_MEMBERS		3848146	0					
ANR	3848198	Identifier	CE_STATIC_MEMBERS		3848146	0					
ANR	3848199	ArgumentList	class_type		3848146	1					
ANR	3848200	Argument	class_type		3848146	0					
ANR	3848201	Identifier	class_type		3848146	0					
ANR	3848202	PtrMemberAccess	class_type -> default_static_members_count		3848146	1					
ANR	3848203	Identifier	class_type		3848146	0					
ANR	3848204	Identifier	default_static_members_count		3848146	1					
ANR	3848205	CompoundStatement		14:3:406:413	3848146	1					
ANR	3848206	IdentifierDeclStatement	int i ;	1101:3:28235:28240	3848146	0	True				
ANR	3848207	IdentifierDecl	i		3848146	0					
ANR	3848208	IdentifierDeclType	int		3848146	0					
ANR	3848209	Identifier	i		3848146	1					
ANR	3848210	IdentifierDeclStatement	zval * p ;	1102:3:28245:28252	3848146	1	True				
ANR	3848211	IdentifierDecl	* p		3848146	0					
ANR	3848212	IdentifierDeclType	zval *		3848146	0					
ANR	3848213	Identifier	p		3848146	1					
ANR	3848214	ExpressionStatement	CG ( static_members_table ) [ ( zend_intptr_t ) ( class_type -> static_members_table ) ] = emalloc ( sizeof ( zval ) * class_type -> default_static_members_count )	1105:3:28266:28408	3848146	2	True				
ANR	3848215	AssignmentExpression	CG ( static_members_table ) [ ( zend_intptr_t ) ( class_type -> static_members_table ) ] = emalloc ( sizeof ( zval ) * class_type -> default_static_members_count )		3848146	0		=			
ANR	3848216	ArrayIndexing	CG ( static_members_table ) [ ( zend_intptr_t ) ( class_type -> static_members_table ) ]		3848146	0					
ANR	3848217	CallExpression	CG ( static_members_table )		3848146	0					
ANR	3848218	Callee	CG		3848146	0					
ANR	3848219	Identifier	CG		3848146	0					
ANR	3848220	ArgumentList	static_members_table		3848146	1					
ANR	3848221	Argument	static_members_table		3848146	0					
ANR	3848222	Identifier	static_members_table		3848146	0					
ANR	3848223	CastExpression	( zend_intptr_t ) ( class_type -> static_members_table )		3848146	1					
ANR	3848224	CastTarget	zend_intptr_t		3848146	0					
ANR	3848225	PtrMemberAccess	class_type -> static_members_table		3848146	1					
ANR	3848226	Identifier	class_type		3848146	0					
ANR	3848227	Identifier	static_members_table		3848146	1					
ANR	3848228	CallExpression	emalloc ( sizeof ( zval ) * class_type -> default_static_members_count )		3848146	1					
ANR	3848229	Callee	emalloc		3848146	0					
ANR	3848230	Identifier	emalloc		3848146	0					
ANR	3848231	ArgumentList	sizeof ( zval ) * class_type -> default_static_members_count		3848146	1					
ANR	3848232	Argument	sizeof ( zval ) * class_type -> default_static_members_count		3848146	0					
ANR	3848233	MultiplicativeExpression	sizeof ( zval ) * class_type -> default_static_members_count		3848146	0		*			
ANR	3848234	SizeofExpression	sizeof ( zval )		3848146	0					
ANR	3848235	Sizeof	sizeof		3848146	0					
ANR	3848236	SizeofOperand	zval		3848146	1					
ANR	3848237	PtrMemberAccess	class_type -> default_static_members_count		3848146	1					
ANR	3848238	Identifier	class_type		3848146	0					
ANR	3848239	Identifier	default_static_members_count		3848146	1					
ANR	3848240	ForStatement	for ( i = 0 ; i < class_type -> default_static_members_count ; i ++ )		3848146	3					
ANR	3848241	ForInit	i = 0 ;	1109:8:28535:28540	3848146	0	True				
ANR	3848242	AssignmentExpression	i = 0		3848146	0		=			
ANR	3848243	Identifier	i		3848146	0					
ANR	3848244	PrimaryExpression	0		3848146	1					
ANR	3848245	Condition	i < class_type -> default_static_members_count	1109:15:28542:28585	3848146	1	True				
ANR	3848246	RelationalExpression	i < class_type -> default_static_members_count		3848146	0		<			
ANR	3848247	Identifier	i		3848146	0					
ANR	3848248	PtrMemberAccess	class_type -> default_static_members_count		3848146	1					
ANR	3848249	Identifier	class_type		3848146	0					
ANR	3848250	Identifier	default_static_members_count		3848146	1					
ANR	3848251	PostIncDecOperationExpression	i ++	1109:61:28588:28590	3848146	2	True				
ANR	3848252	Identifier	i		3848146	0					
ANR	3848253	IncDec	++		3848146	1					
ANR	3848254	CompoundStatement		21:66:754:754	3848146	3					
ANR	3848255	ExpressionStatement	p = & class_type -> default_static_members_table [ i ]	1110:4:28599:28647	3848146	0	True				
ANR	3848256	AssignmentExpression	p = & class_type -> default_static_members_table [ i ]		3848146	0		=			
ANR	3848257	Identifier	p		3848146	0					
ANR	3848258	UnaryOperationExpression	& class_type -> default_static_members_table [ i ]		3848146	1					
ANR	3848259	UnaryOperator	&		3848146	0					
ANR	3848260	ArrayIndexing	class_type -> default_static_members_table [ i ]		3848146	1					
ANR	3848261	PtrMemberAccess	class_type -> default_static_members_table		3848146	0					
ANR	3848262	Identifier	class_type		3848146	0					
ANR	3848263	Identifier	default_static_members_table		3848146	1					
ANR	3848264	Identifier	i		3848146	1					
ANR	3848265	IfStatement	if ( Z_ISREF_P ( p ) && class_type -> parent && i < class_type -> parent -> default_static_members_count && p == & class_type -> parent -> default_static_members_table [ i ] && Z_TYPE ( CE_STATIC_MEMBERS ( class_type -> parent ) [ i ] ) != IS_UNDEF )		3848146	1					
ANR	3848266	Condition	Z_ISREF_P ( p ) && class_type -> parent && i < class_type -> parent -> default_static_members_count && p == & class_type -> parent -> default_static_members_table [ i ] && Z_TYPE ( CE_STATIC_MEMBERS ( class_type -> parent ) [ i ] ) != IS_UNDEF	1111:8:28657:28891	3848146	0	True				
ANR	3848267	AndExpression	Z_ISREF_P ( p ) && class_type -> parent && i < class_type -> parent -> default_static_members_count && p == & class_type -> parent -> default_static_members_table [ i ] && Z_TYPE ( CE_STATIC_MEMBERS ( class_type -> parent ) [ i ] ) != IS_UNDEF		3848146	0		&&			
ANR	3848268	CallExpression	Z_ISREF_P ( p )		3848146	0					
ANR	3848269	Callee	Z_ISREF_P		3848146	0					
ANR	3848270	Identifier	Z_ISREF_P		3848146	0					
ANR	3848271	ArgumentList	p		3848146	1					
ANR	3848272	Argument	p		3848146	0					
ANR	3848273	Identifier	p		3848146	0					
ANR	3848274	AndExpression	class_type -> parent && i < class_type -> parent -> default_static_members_count && p == & class_type -> parent -> default_static_members_table [ i ] && Z_TYPE ( CE_STATIC_MEMBERS ( class_type -> parent ) [ i ] ) != IS_UNDEF		3848146	1		&&			
ANR	3848275	PtrMemberAccess	class_type -> parent		3848146	0					
ANR	3848276	Identifier	class_type		3848146	0					
ANR	3848277	Identifier	parent		3848146	1					
ANR	3848278	AndExpression	i < class_type -> parent -> default_static_members_count && p == & class_type -> parent -> default_static_members_table [ i ] && Z_TYPE ( CE_STATIC_MEMBERS ( class_type -> parent ) [ i ] ) != IS_UNDEF		3848146	1		&&			
ANR	3848279	RelationalExpression	i < class_type -> parent -> default_static_members_count		3848146	0		<			
ANR	3848280	Identifier	i		3848146	0					
ANR	3848281	PtrMemberAccess	class_type -> parent -> default_static_members_count		3848146	1					
ANR	3848282	PtrMemberAccess	class_type -> parent		3848146	0					
ANR	3848283	Identifier	class_type		3848146	0					
ANR	3848284	Identifier	parent		3848146	1					
ANR	3848285	Identifier	default_static_members_count		3848146	1					
ANR	3848286	AndExpression	p == & class_type -> parent -> default_static_members_table [ i ] && Z_TYPE ( CE_STATIC_MEMBERS ( class_type -> parent ) [ i ] ) != IS_UNDEF		3848146	1		&&			
ANR	3848287	EqualityExpression	p == & class_type -> parent -> default_static_members_table [ i ]		3848146	0		==			
ANR	3848288	Identifier	p		3848146	0					
ANR	3848289	UnaryOperationExpression	& class_type -> parent -> default_static_members_table [ i ]		3848146	1					
ANR	3848290	UnaryOperator	&		3848146	0					
ANR	3848291	ArrayIndexing	class_type -> parent -> default_static_members_table [ i ]		3848146	1					
ANR	3848292	PtrMemberAccess	class_type -> parent -> default_static_members_table		3848146	0					
ANR	3848293	PtrMemberAccess	class_type -> parent		3848146	0					
ANR	3848294	Identifier	class_type		3848146	0					
ANR	3848295	Identifier	parent		3848146	1					
ANR	3848296	Identifier	default_static_members_table		3848146	1					
ANR	3848297	Identifier	i		3848146	1					
ANR	3848298	EqualityExpression	Z_TYPE ( CE_STATIC_MEMBERS ( class_type -> parent ) [ i ] ) != IS_UNDEF		3848146	1		!=			
ANR	3848299	CallExpression	Z_TYPE ( CE_STATIC_MEMBERS ( class_type -> parent ) [ i ] )		3848146	0					
ANR	3848300	Callee	Z_TYPE		3848146	0					
ANR	3848301	Identifier	Z_TYPE		3848146	0					
ANR	3848302	ArgumentList	CE_STATIC_MEMBERS ( class_type -> parent ) [ i ]		3848146	1					
ANR	3848303	Argument	CE_STATIC_MEMBERS ( class_type -> parent ) [ i ]		3848146	0					
ANR	3848304	ArrayIndexing	CE_STATIC_MEMBERS ( class_type -> parent ) [ i ]		3848146	0					
ANR	3848305	CallExpression	CE_STATIC_MEMBERS ( class_type -> parent )		3848146	0					
ANR	3848306	Callee	CE_STATIC_MEMBERS		3848146	0					
ANR	3848307	Identifier	CE_STATIC_MEMBERS		3848146	0					
ANR	3848308	ArgumentList	class_type -> parent		3848146	1					
ANR	3848309	Argument	class_type -> parent		3848146	0					
ANR	3848310	PtrMemberAccess	class_type -> parent		3848146	0					
ANR	3848311	Identifier	class_type		3848146	0					
ANR	3848312	Identifier	parent		3848146	1					
ANR	3848313	Identifier	i		3848146	1					
ANR	3848314	Identifier	IS_UNDEF		3848146	1					
ANR	3848315	CompoundStatement		29:5:1067:1118	3848146	1					
ANR	3848316	IdentifierDeclStatement	zval * q = & CE_STATIC_MEMBERS ( class_type -> parent ) [ i ] ;	1117:5:28906:28957	3848146	0	True				
ANR	3848317	IdentifierDecl	* q = & CE_STATIC_MEMBERS ( class_type -> parent ) [ i ]		3848146	0					
ANR	3848318	IdentifierDeclType	zval *		3848146	0					
ANR	3848319	Identifier	q		3848146	1					
ANR	3848320	AssignmentExpression	* q = & CE_STATIC_MEMBERS ( class_type -> parent ) [ i ]		3848146	2		=			
ANR	3848321	Identifier	q		3848146	0					
ANR	3848322	UnaryOperationExpression	& CE_STATIC_MEMBERS ( class_type -> parent ) [ i ]		3848146	1					
ANR	3848323	UnaryOperator	&		3848146	0					
ANR	3848324	ArrayIndexing	CE_STATIC_MEMBERS ( class_type -> parent ) [ i ]		3848146	1					
ANR	3848325	CallExpression	CE_STATIC_MEMBERS ( class_type -> parent )		3848146	0					
ANR	3848326	Callee	CE_STATIC_MEMBERS		3848146	0					
ANR	3848327	Identifier	CE_STATIC_MEMBERS		3848146	0					
ANR	3848328	ArgumentList	class_type -> parent		3848146	1					
ANR	3848329	Argument	class_type -> parent		3848146	0					
ANR	3848330	PtrMemberAccess	class_type -> parent		3848146	0					
ANR	3848331	Identifier	class_type		3848146	0					
ANR	3848332	Identifier	parent		3848146	1					
ANR	3848333	Identifier	i		3848146	1					
ANR	3848334	ExpressionStatement	"ZVAL_NEW_REF ( q , q )"	1119:5:28965:28983	3848146	1	True				
ANR	3848335	CallExpression	"ZVAL_NEW_REF ( q , q )"		3848146	0					
ANR	3848336	Callee	ZVAL_NEW_REF		3848146	0					
ANR	3848337	Identifier	ZVAL_NEW_REF		3848146	0					
ANR	3848338	ArgumentList	q		3848146	1					
ANR	3848339	Argument	q		3848146	0					
ANR	3848340	Identifier	q		3848146	0					
ANR	3848341	Argument	q		3848146	1					
ANR	3848342	Identifier	q		3848146	0					
ANR	3848343	ExpressionStatement	"ZVAL_COPY_VALUE ( & CE_STATIC_MEMBERS ( class_type ) [ i ] , q )"	1120:5:28990:29043	3848146	2	True				
ANR	3848344	CallExpression	"ZVAL_COPY_VALUE ( & CE_STATIC_MEMBERS ( class_type ) [ i ] , q )"		3848146	0					
ANR	3848345	Callee	ZVAL_COPY_VALUE		3848146	0					
ANR	3848346	Identifier	ZVAL_COPY_VALUE		3848146	0					
ANR	3848347	ArgumentList	& CE_STATIC_MEMBERS ( class_type ) [ i ]		3848146	1					
ANR	3848348	Argument	& CE_STATIC_MEMBERS ( class_type ) [ i ]		3848146	0					
ANR	3848349	UnaryOperationExpression	& CE_STATIC_MEMBERS ( class_type ) [ i ]		3848146	0					
ANR	3848350	UnaryOperator	&		3848146	0					
ANR	3848351	ArrayIndexing	CE_STATIC_MEMBERS ( class_type ) [ i ]		3848146	1					
ANR	3848352	CallExpression	CE_STATIC_MEMBERS ( class_type )		3848146	0					
ANR	3848353	Callee	CE_STATIC_MEMBERS		3848146	0					
ANR	3848354	Identifier	CE_STATIC_MEMBERS		3848146	0					
ANR	3848355	ArgumentList	class_type		3848146	1					
ANR	3848356	Argument	class_type		3848146	0					
ANR	3848357	Identifier	class_type		3848146	0					
ANR	3848358	Identifier	i		3848146	1					
ANR	3848359	Argument	q		3848146	1					
ANR	3848360	Identifier	q		3848146	0					
ANR	3848361	ExpressionStatement	Z_ADDREF_P ( q )	1121:5:29050:29063	3848146	3	True				
ANR	3848362	CallExpression	Z_ADDREF_P ( q )		3848146	0					
ANR	3848363	Callee	Z_ADDREF_P		3848146	0					
ANR	3848364	Identifier	Z_ADDREF_P		3848146	0					
ANR	3848365	ArgumentList	q		3848146	1					
ANR	3848366	Argument	q		3848146	0					
ANR	3848367	Identifier	q		3848146	0					
ANR	3848368	ElseStatement	else		3848146	0					
ANR	3848369	CompoundStatement		34:11:1237:1237	3848146	0					
ANR	3848370	ExpressionStatement	"ZVAL_DUP ( & CE_STATIC_MEMBERS ( class_type ) [ i ] , p )"	1123:5:29083:29129	3848146	0	True				
ANR	3848371	CallExpression	"ZVAL_DUP ( & CE_STATIC_MEMBERS ( class_type ) [ i ] , p )"		3848146	0					
ANR	3848372	Callee	ZVAL_DUP		3848146	0					
ANR	3848373	Identifier	ZVAL_DUP		3848146	0					
ANR	3848374	ArgumentList	& CE_STATIC_MEMBERS ( class_type ) [ i ]		3848146	1					
ANR	3848375	Argument	& CE_STATIC_MEMBERS ( class_type ) [ i ]		3848146	0					
ANR	3848376	UnaryOperationExpression	& CE_STATIC_MEMBERS ( class_type ) [ i ]		3848146	0					
ANR	3848377	UnaryOperator	&		3848146	0					
ANR	3848378	ArrayIndexing	CE_STATIC_MEMBERS ( class_type ) [ i ]		3848146	1					
ANR	3848379	CallExpression	CE_STATIC_MEMBERS ( class_type )		3848146	0					
ANR	3848380	Callee	CE_STATIC_MEMBERS		3848146	0					
ANR	3848381	Identifier	CE_STATIC_MEMBERS		3848146	0					
ANR	3848382	ArgumentList	class_type		3848146	1					
ANR	3848383	Argument	class_type		3848146	0					
ANR	3848384	Identifier	class_type		3848146	0					
ANR	3848385	Identifier	i		3848146	1					
ANR	3848386	Argument	p		3848146	1					
ANR	3848387	Identifier	p		3848146	0					
ANR	3848388	ElseStatement	else		3848146	0					
ANR	3848389	CompoundStatement		43:3:1492:1521	3848146	0					
ANR	3848390	IdentifierDeclStatement	zend_class_entry * * scope = EG ( current_execute_data ) ? & EG ( scope ) : & CG ( active_class_entry ) ;	1127:3:29156:29246	3848146	0	True				
ANR	3848391	IdentifierDecl	* * scope = EG ( current_execute_data ) ? & EG ( scope ) : & CG ( active_class_entry )		3848146	0					
ANR	3848392	IdentifierDeclType	zend_class_entry * *		3848146	0					
ANR	3848393	Identifier	scope		3848146	1					
ANR	3848394	AssignmentExpression	* * scope = EG ( current_execute_data ) ? & EG ( scope ) : & CG ( active_class_entry )		3848146	2		=			
ANR	3848395	Identifier	scope		3848146	0					
ANR	3848396	ConditionalExpression	EG ( current_execute_data ) ? & EG ( scope ) : & CG ( active_class_entry )		3848146	1					
ANR	3848397	Condition	EG ( current_execute_data )		3848146	0					
ANR	3848398	CallExpression	EG ( current_execute_data )		3848146	0					
ANR	3848399	Callee	EG		3848146	0					
ANR	3848400	Identifier	EG		3848146	0					
ANR	3848401	ArgumentList	current_execute_data		3848146	1					
ANR	3848402	Argument	current_execute_data		3848146	0					
ANR	3848403	Identifier	current_execute_data		3848146	0					
ANR	3848404	UnaryOperationExpression	& EG ( scope )		3848146	1					
ANR	3848405	UnaryOperator	&		3848146	0					
ANR	3848406	CallExpression	EG ( scope )		3848146	1					
ANR	3848407	Callee	EG		3848146	0					
ANR	3848408	Identifier	EG		3848146	0					
ANR	3848409	ArgumentList	scope		3848146	1					
ANR	3848410	Argument	scope		3848146	0					
ANR	3848411	Identifier	scope		3848146	0					
ANR	3848412	UnaryOperationExpression	& CG ( active_class_entry )		3848146	2					
ANR	3848413	UnaryOperator	&		3848146	0					
ANR	3848414	CallExpression	CG ( active_class_entry )		3848146	1					
ANR	3848415	Callee	CG		3848146	0					
ANR	3848416	Identifier	CG		3848146	0					
ANR	3848417	ArgumentList	active_class_entry		3848146	1					
ANR	3848418	Argument	active_class_entry		3848146	0					
ANR	3848419	Identifier	active_class_entry		3848146	0					
ANR	3848420	IdentifierDeclStatement	zend_class_entry * old_scope = * scope ;	1128:3:29251:29287	3848146	1	True				
ANR	3848421	IdentifierDecl	* old_scope = * scope		3848146	0					
ANR	3848422	IdentifierDeclType	zend_class_entry *		3848146	0					
ANR	3848423	Identifier	old_scope		3848146	1					
ANR	3848424	AssignmentExpression	* old_scope = * scope		3848146	2		=			
ANR	3848425	Identifier	old_scope		3848146	0					
ANR	3848426	UnaryOperationExpression	* scope		3848146	1					
ANR	3848427	UnaryOperator	*		3848146	0					
ANR	3848428	Identifier	scope		3848146	1					
ANR	3848429	IdentifierDeclStatement	zend_class_entry * ce ;	1129:3:29292:29312	3848146	2	True				
ANR	3848430	IdentifierDecl	* ce		3848146	0					
ANR	3848431	IdentifierDeclType	zend_class_entry *		3848146	0					
ANR	3848432	Identifier	ce		3848146	1					
ANR	3848433	IdentifierDeclStatement	zval * val ;	1130:3:29317:29326	3848146	3	True				
ANR	3848434	IdentifierDecl	* val		3848146	0					
ANR	3848435	IdentifierDeclType	zval *		3848146	0					
ANR	3848436	Identifier	val		3848146	1					
ANR	3848437	IdentifierDeclStatement	zend_property_info * prop_info ;	1131:3:29331:29360	3848146	4	True				
ANR	3848438	IdentifierDecl	* prop_info		3848146	0					
ANR	3848439	IdentifierDeclType	zend_property_info *		3848146	0					
ANR	3848440	Identifier	prop_info		3848146	1					
ANR	3848441	ExpressionStatement	* scope = class_type	1133:3:29366:29385	3848146	5	True				
ANR	3848442	AssignmentExpression	* scope = class_type		3848146	0		=			
ANR	3848443	UnaryOperationExpression	* scope		3848146	0					
ANR	3848444	UnaryOperator	*		3848146	0					
ANR	3848445	Identifier	scope		3848146	1					
ANR	3848446	Identifier	class_type		3848146	1					
ANR	3848447	Statement	ZEND_HASH_FOREACH_VAL	1134:3:29390:29410	3848146	6	True				
ANR	3848448	Statement	(	1134:24:29411:29411	3848146	7	True				
ANR	3848449	Statement	&	1134:25:29412:29412	3848146	8	True				
ANR	3848450	Statement	class_type	1134:26:29413:29422	3848146	9	True				
ANR	3848451	Statement	->	1134:36:29423:29424	3848146	10	True				
ANR	3848452	Statement	constants_table	1134:38:29425:29439	3848146	11	True				
ANR	3848453	Statement	","	1134:53:29440:29440	3848146	12	True				
ANR	3848454	Statement	val	1134:55:29442:29444	3848146	13	True				
ANR	3848455	Statement	)	1134:58:29445:29445	3848146	14	True				
ANR	3848456	CompoundStatement		46:60:1608:1608	3848146	15					
ANR	3848457	ExpressionStatement	ZVAL_DEREF ( val )	1135:4:29453:29468	3848146	0	True				
ANR	3848458	CallExpression	ZVAL_DEREF ( val )		3848146	0					
ANR	3848459	Callee	ZVAL_DEREF		3848146	0					
ANR	3848460	Identifier	ZVAL_DEREF		3848146	0					
ANR	3848461	ArgumentList	val		3848146	1					
ANR	3848462	Argument	val		3848146	0					
ANR	3848463	Identifier	val		3848146	0					
ANR	3848464	IfStatement	if ( Z_CONSTANT_P ( val ) )		3848146	1					
ANR	3848465	Condition	Z_CONSTANT_P ( val )	1136:8:29478:29494	3848146	0	True				
ANR	3848466	CallExpression	Z_CONSTANT_P ( val )		3848146	0					
ANR	3848467	Callee	Z_CONSTANT_P		3848146	0					
ANR	3848468	Identifier	Z_CONSTANT_P		3848146	0					
ANR	3848469	ArgumentList	val		3848146	1					
ANR	3848470	Argument	val		3848146	0					
ANR	3848471	Identifier	val		3848146	0					
ANR	3848472	CompoundStatement		48:27:1658:1658	3848146	1					
ANR	3848473	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( val , 1 , class_type ) != SUCCESS ) )"		3848146	0					
ANR	3848474	Condition	"UNEXPECTED ( zval_update_constant_ex ( val , 1 , class_type ) != SUCCESS )"	1137:9:29508:29573	3848146	0	True				
ANR	3848475	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( val , 1 , class_type ) != SUCCESS )"		3848146	0					
ANR	3848476	Callee	UNEXPECTED		3848146	0					
ANR	3848477	Identifier	UNEXPECTED		3848146	0					
ANR	3848478	ArgumentList	"zval_update_constant_ex ( val , 1 , class_type ) != SUCCESS"		3848146	1					
ANR	3848479	Argument	"zval_update_constant_ex ( val , 1 , class_type ) != SUCCESS"		3848146	0					
ANR	3848480	EqualityExpression	"zval_update_constant_ex ( val , 1 , class_type ) != SUCCESS"		3848146	0		!=			
ANR	3848481	CallExpression	"zval_update_constant_ex ( val , 1 , class_type )"		3848146	0					
ANR	3848482	Callee	zval_update_constant_ex		3848146	0					
ANR	3848483	Identifier	zval_update_constant_ex		3848146	0					
ANR	3848484	ArgumentList	val		3848146	1					
ANR	3848485	Argument	val		3848146	0					
ANR	3848486	Identifier	val		3848146	0					
ANR	3848487	Argument	1		3848146	1					
ANR	3848488	PrimaryExpression	1		3848146	0					
ANR	3848489	Argument	class_type		3848146	2					
ANR	3848490	Identifier	class_type		3848146	0					
ANR	3848491	Identifier	SUCCESS		3848146	1					
ANR	3848492	CompoundStatement		49:77:1737:1737	3848146	1					
ANR	3848493	ReturnStatement	return FAILURE ;	1138:6:29584:29598	3848146	0	True				
ANR	3848494	Identifier	FAILURE		3848146	0					
ANR	3848495	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1141:5:29618:29641	3848146	16	True				
ANR	3848496	CallExpression	ZEND_HASH_FOREACH_END ( )		3848146	0					
ANR	3848497	Callee	ZEND_HASH_FOREACH_END		3848146	0					
ANR	3848498	Identifier	ZEND_HASH_FOREACH_END		3848146	0					
ANR	3848499	ArgumentList			3848146	1					
ANR	3848500	ExpressionStatement	ce = class_type	1143:3:29647:29662	3848146	17	True				
ANR	3848501	AssignmentExpression	ce = class_type		3848146	0		=			
ANR	3848502	Identifier	ce		3848146	0					
ANR	3848503	Identifier	class_type		3848146	1					
ANR	3848504	WhileStatement	while ( ce )		3848146	18					
ANR	3848505	Condition	ce	1144:10:29674:29675	3848146	0	True				
ANR	3848506	Identifier	ce		3848146	0					
ANR	3848507	CompoundStatement		56:14:1839:1839	3848146	1					
ANR	3848508	Statement	ZEND_HASH_FOREACH_PTR	1145:4:29684:29704	3848146	0	True				
ANR	3848509	Statement	(	1145:25:29705:29705	3848146	1	True				
ANR	3848510	Statement	&	1145:26:29706:29706	3848146	2	True				
ANR	3848511	Statement	ce	1145:27:29707:29708	3848146	3	True				
ANR	3848512	Statement	->	1145:29:29709:29710	3848146	4	True				
ANR	3848513	Statement	properties_info	1145:31:29711:29725	3848146	5	True				
ANR	3848514	Statement	","	1145:46:29726:29726	3848146	6	True				
ANR	3848515	Statement	prop_info	1145:48:29728:29736	3848146	7	True				
ANR	3848516	Statement	)	1145:57:29737:29737	3848146	8	True				
ANR	3848517	CompoundStatement		57:59:1900:1900	3848146	9					
ANR	3848518	IfStatement	if ( prop_info -> ce == ce )		3848146	0					
ANR	3848519	Condition	prop_info -> ce == ce	1146:9:29750:29768	3848146	0	True				
ANR	3848520	EqualityExpression	prop_info -> ce == ce		3848146	0		==			
ANR	3848521	PtrMemberAccess	prop_info -> ce		3848146	0					
ANR	3848522	Identifier	prop_info		3848146	0					
ANR	3848523	Identifier	ce		3848146	1					
ANR	3848524	Identifier	ce		3848146	1					
ANR	3848525	CompoundStatement		58:30:1932:1932	3848146	1					
ANR	3848526	IfStatement	if ( prop_info -> flags & ZEND_ACC_STATIC )		3848146	0					
ANR	3848527	Condition	prop_info -> flags & ZEND_ACC_STATIC	1147:10:29783:29816	3848146	0	True				
ANR	3848528	BitAndExpression	prop_info -> flags & ZEND_ACC_STATIC		3848146	0		&			
ANR	3848529	PtrMemberAccess	prop_info -> flags		3848146	0					
ANR	3848530	Identifier	prop_info		3848146	0					
ANR	3848531	Identifier	flags		3848146	1					
ANR	3848532	Identifier	ZEND_ACC_STATIC		3848146	1					
ANR	3848533	CompoundStatement		59:46:1980:1980	3848146	1					
ANR	3848534	ExpressionStatement	val = CE_STATIC_MEMBERS ( class_type ) + prop_info -> offset	1148:7:29828:29883	3848146	0	True				
ANR	3848535	AssignmentExpression	val = CE_STATIC_MEMBERS ( class_type ) + prop_info -> offset		3848146	0		=			
ANR	3848536	Identifier	val		3848146	0					
ANR	3848537	AdditiveExpression	CE_STATIC_MEMBERS ( class_type ) + prop_info -> offset		3848146	1		+			
ANR	3848538	CallExpression	CE_STATIC_MEMBERS ( class_type )		3848146	0					
ANR	3848539	Callee	CE_STATIC_MEMBERS		3848146	0					
ANR	3848540	Identifier	CE_STATIC_MEMBERS		3848146	0					
ANR	3848541	ArgumentList	class_type		3848146	1					
ANR	3848542	Argument	class_type		3848146	0					
ANR	3848543	Identifier	class_type		3848146	0					
ANR	3848544	PtrMemberAccess	prop_info -> offset		3848146	1					
ANR	3848545	Identifier	prop_info		3848146	0					
ANR	3848546	Identifier	offset		3848146	1					
ANR	3848547	ElseStatement	else		3848146	0					
ANR	3848548	CompoundStatement		61:13:2059:2059	3848146	0					
ANR	3848549	ExpressionStatement	val = ( zval * ) ( ( char * ) class_type -> default_properties_table + prop_info -> offset - OBJ_PROP_TO_OFFSET ( 0 ) )	1150:7:29907:30009	3848146	0	True				
ANR	3848550	AssignmentExpression	val = ( zval * ) ( ( char * ) class_type -> default_properties_table + prop_info -> offset - OBJ_PROP_TO_OFFSET ( 0 ) )		3848146	0		=			
ANR	3848551	Identifier	val		3848146	0					
ANR	3848552	CastExpression	( zval * ) ( ( char * ) class_type -> default_properties_table + prop_info -> offset - OBJ_PROP_TO_OFFSET ( 0 ) )		3848146	1					
ANR	3848553	CastTarget	zval *		3848146	0					
ANR	3848554	AdditiveExpression	( char * ) class_type -> default_properties_table + prop_info -> offset - OBJ_PROP_TO_OFFSET ( 0 )		3848146	1		+			
ANR	3848555	CastExpression	( char * ) class_type -> default_properties_table		3848146	0					
ANR	3848556	CastTarget	char *		3848146	0					
ANR	3848557	PtrMemberAccess	class_type -> default_properties_table		3848146	1					
ANR	3848558	Identifier	class_type		3848146	0					
ANR	3848559	Identifier	default_properties_table		3848146	1					
ANR	3848560	AdditiveExpression	prop_info -> offset - OBJ_PROP_TO_OFFSET ( 0 )		3848146	1		-			
ANR	3848561	PtrMemberAccess	prop_info -> offset		3848146	0					
ANR	3848562	Identifier	prop_info		3848146	0					
ANR	3848563	Identifier	offset		3848146	1					
ANR	3848564	CallExpression	OBJ_PROP_TO_OFFSET ( 0 )		3848146	1					
ANR	3848565	Callee	OBJ_PROP_TO_OFFSET		3848146	0					
ANR	3848566	Identifier	OBJ_PROP_TO_OFFSET		3848146	0					
ANR	3848567	ArgumentList	0		3848146	1					
ANR	3848568	Argument	0		3848146	0					
ANR	3848569	PrimaryExpression	0		3848146	0					
ANR	3848570	ExpressionStatement	ZVAL_DEREF ( val )	1152:6:30025:30040	3848146	1	True				
ANR	3848571	CallExpression	ZVAL_DEREF ( val )		3848146	0					
ANR	3848572	Callee	ZVAL_DEREF		3848146	0					
ANR	3848573	Identifier	ZVAL_DEREF		3848146	0					
ANR	3848574	ArgumentList	val		3848146	1					
ANR	3848575	Argument	val		3848146	0					
ANR	3848576	Identifier	val		3848146	0					
ANR	3848577	IfStatement	if ( Z_CONSTANT_P ( val ) )		3848146	2					
ANR	3848578	Condition	Z_CONSTANT_P ( val )	1153:10:30052:30068	3848146	0	True				
ANR	3848579	CallExpression	Z_CONSTANT_P ( val )		3848146	0					
ANR	3848580	Callee	Z_CONSTANT_P		3848146	0					
ANR	3848581	Identifier	Z_CONSTANT_P		3848146	0					
ANR	3848582	ArgumentList	val		3848146	1					
ANR	3848583	Argument	val		3848146	0					
ANR	3848584	Identifier	val		3848146	0					
ANR	3848585	CompoundStatement		65:29:2232:2232	3848146	1					
ANR	3848586	ExpressionStatement	* scope = ce	1154:7:30080:30091	3848146	0	True				
ANR	3848587	AssignmentExpression	* scope = ce		3848146	0		=			
ANR	3848588	UnaryOperationExpression	* scope		3848146	0					
ANR	3848589	UnaryOperator	*		3848146	0					
ANR	3848590	Identifier	scope		3848146	1					
ANR	3848591	Identifier	ce		3848146	1					
ANR	3848592	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( val , 1 , NULL ) != SUCCESS ) )"		3848146	1					
ANR	3848593	Condition	"UNEXPECTED ( zval_update_constant_ex ( val , 1 , NULL ) != SUCCESS )"	1155:11:30104:30163	3848146	0	True				
ANR	3848594	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( val , 1 , NULL ) != SUCCESS )"		3848146	0					
ANR	3848595	Callee	UNEXPECTED		3848146	0					
ANR	3848596	Identifier	UNEXPECTED		3848146	0					
ANR	3848597	ArgumentList	"zval_update_constant_ex ( val , 1 , NULL ) != SUCCESS"		3848146	1					
ANR	3848598	Argument	"zval_update_constant_ex ( val , 1 , NULL ) != SUCCESS"		3848146	0					
ANR	3848599	EqualityExpression	"zval_update_constant_ex ( val , 1 , NULL ) != SUCCESS"		3848146	0		!=			
ANR	3848600	CallExpression	"zval_update_constant_ex ( val , 1 , NULL )"		3848146	0					
ANR	3848601	Callee	zval_update_constant_ex		3848146	0					
ANR	3848602	Identifier	zval_update_constant_ex		3848146	0					
ANR	3848603	ArgumentList	val		3848146	1					
ANR	3848604	Argument	val		3848146	0					
ANR	3848605	Identifier	val		3848146	0					
ANR	3848606	Argument	1		3848146	1					
ANR	3848607	PrimaryExpression	1		3848146	0					
ANR	3848608	Argument	NULL		3848146	2					
ANR	3848609	Identifier	NULL		3848146	0					
ANR	3848610	Identifier	SUCCESS		3848146	1					
ANR	3848611	CompoundStatement		67:73:2327:2327	3848146	1					
ANR	3848612	ReturnStatement	return FAILURE ;	1156:8:30176:30190	3848146	0	True				
ANR	3848613	Identifier	FAILURE		3848146	0					
ANR	3848614	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1160:6:30222:30245	3848146	10	True				
ANR	3848615	CallExpression	ZEND_HASH_FOREACH_END ( )		3848146	0					
ANR	3848616	Callee	ZEND_HASH_FOREACH_END		3848146	0					
ANR	3848617	Identifier	ZEND_HASH_FOREACH_END		3848146	0					
ANR	3848618	ArgumentList			3848146	1					
ANR	3848619	ExpressionStatement	ce = ce -> parent	1161:4:30251:30266	3848146	11	True				
ANR	3848620	AssignmentExpression	ce = ce -> parent		3848146	0		=			
ANR	3848621	Identifier	ce		3848146	0					
ANR	3848622	PtrMemberAccess	ce -> parent		3848146	1					
ANR	3848623	Identifier	ce		3848146	0					
ANR	3848624	Identifier	parent		3848146	1					
ANR	3848625	ExpressionStatement	* scope = old_scope	1164:3:30277:30295	3848146	19	True				
ANR	3848626	AssignmentExpression	* scope = old_scope		3848146	0		=			
ANR	3848627	UnaryOperationExpression	* scope		3848146	0					
ANR	3848628	UnaryOperator	*		3848146	0					
ANR	3848629	Identifier	scope		3848146	1					
ANR	3848630	Identifier	old_scope		3848146	1					
ANR	3848631	ReturnStatement	return SUCCESS ;	1167:1:30305:30319	3848146	1	True				
ANR	3848632	Identifier	SUCCESS		3848146	0					
ANR	3848633	ReturnType	ZEND_API int		3848146	1					
ANR	3848634	Identifier	zend_update_class_constants		3848146	2					
ANR	3848635	ParameterList	zend_class_entry * class_type		3848146	3					
ANR	3848636	Parameter	zend_class_entry * class_type	1088:41:27798:27825	3848146	0	True				
ANR	3848637	ParameterType	zend_class_entry *		3848146	0					
ANR	3848638	Identifier	class_type		3848146	1					
ANR	3848639	CFGEntryNode	ENTRY		3848146		True				
ANR	3848640	CFGExitNode	EXIT		3848146		True				
ANR	3848641	Symbol	Z_CONSTANT_P		3848146						
ANR	3848642	Symbol	old_scope		3848146						
ANR	3848643	Symbol	active_class_entry		3848146						
ANR	3848644	Symbol	current_execute_data		3848146						
ANR	3848645	Symbol	OBJ_PROP_TO_OFFSET		3848146						
ANR	3848646	Symbol	* CG		3848146						
ANR	3848647	Symbol	Z_TYPE		3848146						
ANR	3848648	Symbol	* ce		3848146						
ANR	3848649	Symbol	& CG		3848146						
ANR	3848650	Symbol	class_type -> parent -> default_static_members_table		3848146						
ANR	3848651	Symbol	class_type		3848146						
ANR	3848652	Symbol	prop_info -> offset		3848146						
ANR	3848653	Symbol	* class_type -> static_members_table		3848146						
ANR	3848654	Symbol	class_type -> default_properties_table		3848146						
ANR	3848655	Symbol	* CE_STATIC_MEMBERS		3848146						
ANR	3848656	Symbol	IS_UNDEF		3848146						
ANR	3848657	Symbol	class_type -> default_static_members_count		3848146						
ANR	3848658	Symbol	prop_info		3848146						
ANR	3848659	Symbol	val		3848146						
ANR	3848660	Symbol	EG		3848146						
ANR	3848661	Symbol	NULL		3848146						
ANR	3848662	Symbol	ce -> parent		3848146						
ANR	3848663	Symbol	CE_STATIC_MEMBERS		3848146						
ANR	3848664	Symbol	class_type -> parent		3848146						
ANR	3848665	Symbol	class_type -> ce_flags		3848146						
ANR	3848666	Symbol	* class_type		3848146						
ANR	3848667	Symbol	class_type -> parent -> default_static_members_count		3848146						
ANR	3848668	Symbol	* scope		3848146						
ANR	3848669	Symbol	Z_ISREF_P		3848146						
ANR	3848670	Symbol	* * class_type		3848146						
ANR	3848671	Symbol	ZEND_ACC_CONSTANTS_UPDATED		3848146						
ANR	3848672	Symbol	class_type -> default_static_members_table		3848146						
ANR	3848673	Symbol	static_members_table		3848146						
ANR	3848674	Symbol	& EG		3848146						
ANR	3848675	Symbol	UNEXPECTED		3848146						
ANR	3848676	Symbol	* class_type -> parent		3848146						
ANR	3848677	Symbol	emalloc		3848146						
ANR	3848678	Symbol	zend_update_class_constants		3848146						
ANR	3848679	Symbol	scope		3848146						
ANR	3848680	Symbol	ZEND_ACC_STATIC		3848146						
ANR	3848681	Symbol	* prop_info		3848146						
ANR	3848682	Symbol	ce		3848146						
ANR	3848683	Symbol	SUCCESS		3848146						
ANR	3848684	Symbol	CG		3848146						
ANR	3848685	Symbol	i		3848146						
ANR	3848686	Symbol	FAILURE		3848146						
ANR	3848687	Symbol	p		3848146						
ANR	3848688	Symbol	q		3848146						
ANR	3848689	Symbol	* i		3848146						
ANR	3848690	Symbol	prop_info -> flags		3848146						
ANR	3848691	Symbol	class_type -> static_members_table		3848146						
ANR	3848692	Symbol	prop_info -> ce		3848146						
ANR	3848693	Symbol	zval_update_constant_ex		3848146						
ANR	3848694	Function	object_properties_init	1171:0:30334:30781							
ANR	3848695	FunctionDef	"object_properties_init (zend_object * object , zend_class_entry * class_type)"		3848694	0					
ANR	3848696	CompoundStatement		1172:0:30432:30781	3848694	0					
ANR	3848697	IfStatement	if ( class_type -> default_properties_count )		3848694	0					
ANR	3848698	Condition	class_type -> default_properties_count	1173:5:30439:30474	3848694	0	True				
ANR	3848699	PtrMemberAccess	class_type -> default_properties_count		3848694	0					
ANR	3848700	Identifier	class_type		3848694	0					
ANR	3848701	Identifier	default_properties_count		3848694	1					
ANR	3848702	CompoundStatement		5:2:140:194	3848694	1					
ANR	3848703	IdentifierDeclStatement	zval * src = class_type -> default_properties_table ;	1174:2:30481:30529	3848694	0	True				
ANR	3848704	IdentifierDecl	* src = class_type -> default_properties_table		3848694	0					
ANR	3848705	IdentifierDeclType	zval *		3848694	0					
ANR	3848706	Identifier	src		3848694	1					
ANR	3848707	AssignmentExpression	* src = class_type -> default_properties_table		3848694	2		=			
ANR	3848708	Identifier	src		3848694	0					
ANR	3848709	PtrMemberAccess	class_type -> default_properties_table		3848694	1					
ANR	3848710	Identifier	class_type		3848694	0					
ANR	3848711	Identifier	default_properties_table		3848694	1					
ANR	3848712	IdentifierDeclStatement	zval * dst = object -> properties_table ;	1175:2:30533:30569	3848694	1	True				
ANR	3848713	IdentifierDecl	* dst = object -> properties_table		3848694	0					
ANR	3848714	IdentifierDeclType	zval *		3848694	0					
ANR	3848715	Identifier	dst		3848694	1					
ANR	3848716	AssignmentExpression	* dst = object -> properties_table		3848694	2		=			
ANR	3848717	Identifier	dst		3848694	0					
ANR	3848718	PtrMemberAccess	object -> properties_table		3848694	1					
ANR	3848719	Identifier	object		3848694	0					
ANR	3848720	Identifier	properties_table		3848694	1					
ANR	3848721	IdentifierDeclStatement	zval * end = src + class_type -> default_properties_count ;	1176:2:30573:30627	3848694	2	True				
ANR	3848722	IdentifierDecl	* end = src + class_type -> default_properties_count		3848694	0					
ANR	3848723	IdentifierDeclType	zval *		3848694	0					
ANR	3848724	Identifier	end		3848694	1					
ANR	3848725	AssignmentExpression	* end = src + class_type -> default_properties_count		3848694	2		=			
ANR	3848726	Identifier	end		3848694	0					
ANR	3848727	AdditiveExpression	src + class_type -> default_properties_count		3848694	1		+			
ANR	3848728	Identifier	src		3848694	0					
ANR	3848729	PtrMemberAccess	class_type -> default_properties_count		3848694	1					
ANR	3848730	Identifier	class_type		3848694	0					
ANR	3848731	Identifier	default_properties_count		3848694	1					
ANR	3848732	DoStatement	do		3848694	3					
ANR	3848733	CompoundStatement		7:5:202:202	3848694	0					
ANR	3848734	ExpressionStatement	"ZVAL_DUP ( dst , src )"	1180:3:30648:30666	3848694	0	True				
ANR	3848735	CallExpression	"ZVAL_DUP ( dst , src )"		3848694	0					
ANR	3848736	Callee	ZVAL_DUP		3848694	0					
ANR	3848737	Identifier	ZVAL_DUP		3848694	0					
ANR	3848738	ArgumentList	dst		3848694	1					
ANR	3848739	Argument	dst		3848694	0					
ANR	3848740	Identifier	dst		3848694	0					
ANR	3848741	Argument	src		3848694	1					
ANR	3848742	Identifier	src		3848694	0					
ANR	3848743	ExpressionStatement	src ++	1184:3:30708:30713	3848694	1	True				
ANR	3848744	PostIncDecOperationExpression	src ++		3848694	0					
ANR	3848745	Identifier	src		3848694	0					
ANR	3848746	IncDec	++		3848694	1					
ANR	3848747	ExpressionStatement	dst ++	1185:3:30718:30723	3848694	2	True				
ANR	3848748	PostIncDecOperationExpression	dst ++		3848694	0					
ANR	3848749	Identifier	dst		3848694	0					
ANR	3848750	IncDec	++		3848694	1					
ANR	3848751	Condition	src != end	1186:11:30736:30745	3848694	1	True				
ANR	3848752	EqualityExpression	src != end		3848694	0		!=			
ANR	3848753	Identifier	src		3848694	0					
ANR	3848754	Identifier	end		3848694	1					
ANR	3848755	ExpressionStatement	object -> properties = NULL	1187:2:30751:30776	3848694	4	True				
ANR	3848756	AssignmentExpression	object -> properties = NULL		3848694	0		=			
ANR	3848757	PtrMemberAccess	object -> properties		3848694	0					
ANR	3848758	Identifier	object		3848694	0					
ANR	3848759	Identifier	properties		3848694	1					
ANR	3848760	Identifier	NULL		3848694	1					
ANR	3848761	ReturnType	ZEND_API void		3848694	1					
ANR	3848762	Identifier	object_properties_init		3848694	2					
ANR	3848763	ParameterList	"zend_object * object , zend_class_entry * class_type"		3848694	3					
ANR	3848764	Parameter	zend_object * object	1171:37:30371:30389	3848694	0	True				
ANR	3848765	ParameterType	zend_object *		3848694	0					
ANR	3848766	Identifier	object		3848694	1					
ANR	3848767	Parameter	zend_class_entry * class_type	1171:58:30392:30419	3848694	1	True				
ANR	3848768	ParameterType	zend_class_entry *		3848694	0					
ANR	3848769	Identifier	class_type		3848694	1					
ANR	3848770	CFGEntryNode	ENTRY		3848694		True				
ANR	3848771	CFGExitNode	EXIT		3848694		True				
ANR	3848772	Symbol	object -> properties		3848694						
ANR	3848773	Symbol	class_type		3848694						
ANR	3848774	Symbol	NULL		3848694						
ANR	3848775	Symbol	dst		3848694						
ANR	3848776	Symbol	src		3848694						
ANR	3848777	Symbol	class_type -> default_properties_table		3848694						
ANR	3848778	Symbol	* class_type		3848694						
ANR	3848779	Symbol	end		3848694						
ANR	3848780	Symbol	* object		3848694						
ANR	3848781	Symbol	object -> properties_table		3848694						
ANR	3848782	Symbol	object		3848694						
ANR	3848783	Symbol	class_type -> default_properties_count		3848694						
ANR	3848784	Function	object_properties_init_ex	1192:0:30794:31464							
ANR	3848785	FunctionDef	"object_properties_init_ex (zend_object * object , HashTable * properties)"		3848784	0					
ANR	3848786	CompoundStatement		1193:0:30888:31464	3848784	0					
ANR	3848787	ExpressionStatement	object -> properties = properties	1194:1:30891:30922	3848784	0	True				
ANR	3848788	AssignmentExpression	object -> properties = properties		3848784	0		=			
ANR	3848789	PtrMemberAccess	object -> properties		3848784	0					
ANR	3848790	Identifier	object		3848784	0					
ANR	3848791	Identifier	properties		3848784	1					
ANR	3848792	Identifier	properties		3848784	1					
ANR	3848793	IfStatement	if ( object -> ce -> default_properties_count )		3848784	1					
ANR	3848794	Condition	object -> ce -> default_properties_count	1195:5:30929:30964	3848784	0	True				
ANR	3848795	PtrMemberAccess	object -> ce -> default_properties_count		3848784	0					
ANR	3848796	PtrMemberAccess	object -> ce		3848784	0					
ANR	3848797	Identifier	object		3848784	0					
ANR	3848798	Identifier	ce		3848784	1					
ANR	3848799	Identifier	default_properties_count		3848784	1					
ANR	3848800	CompoundStatement		6:5:125:158	3848784	1					
ANR	3848801	IdentifierDeclStatement	zval * prop ;	1196:5:30974:30984	3848784	0	True				
ANR	3848802	IdentifierDecl	* prop		3848784	0					
ANR	3848803	IdentifierDeclType	zval *		3848784	0					
ANR	3848804	Identifier	prop		3848784	1					
ANR	3848805	IdentifierDeclStatement	zend_string * key ;	1197:5:30991:31007	3848784	1	True				
ANR	3848806	IdentifierDecl	* key		3848784	0					
ANR	3848807	IdentifierDeclType	zend_string *		3848784	0					
ANR	3848808	Identifier	key		3848784	1					
ANR	3848809	IdentifierDeclStatement	zend_property_info * property_info ;	1198:5:31014:31047	3848784	2	True				
ANR	3848810	IdentifierDecl	* property_info		3848784	0					
ANR	3848811	IdentifierDeclType	zend_property_info *		3848784	0					
ANR	3848812	Identifier	property_info		3848784	1					
ANR	3848813	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	1200:5:31055:31083	3848784	3	True				
ANR	3848814	Statement	(	1200:34:31084:31084	3848784	4	True				
ANR	3848815	Statement	properties	1200:35:31085:31094	3848784	5	True				
ANR	3848816	Statement	","	1200:45:31095:31095	3848784	6	True				
ANR	3848817	Statement	key	1200:47:31097:31099	3848784	7	True				
ANR	3848818	Statement	","	1200:50:31100:31100	3848784	8	True				
ANR	3848819	Statement	prop	1200:52:31102:31105	3848784	9	True				
ANR	3848820	Statement	)	1200:56:31106:31106	3848784	10	True				
ANR	3848821	CompoundStatement		8:58:219:219	3848784	11					
ANR	3848822	ExpressionStatement	"property_info = zend_get_property_info ( object -> ce , key , 1 )"	1201:3:31113:31171	3848784	0	True				
ANR	3848823	AssignmentExpression	"property_info = zend_get_property_info ( object -> ce , key , 1 )"		3848784	0		=			
ANR	3848824	Identifier	property_info		3848784	0					
ANR	3848825	CallExpression	"zend_get_property_info ( object -> ce , key , 1 )"		3848784	1					
ANR	3848826	Callee	zend_get_property_info		3848784	0					
ANR	3848827	Identifier	zend_get_property_info		3848784	0					
ANR	3848828	ArgumentList	object -> ce		3848784	1					
ANR	3848829	Argument	object -> ce		3848784	0					
ANR	3848830	PtrMemberAccess	object -> ce		3848784	0					
ANR	3848831	Identifier	object		3848784	0					
ANR	3848832	Identifier	ce		3848784	1					
ANR	3848833	Argument	key		3848784	1					
ANR	3848834	Identifier	key		3848784	0					
ANR	3848835	Argument	1		3848784	2					
ANR	3848836	PrimaryExpression	1		3848784	0					
ANR	3848837	IfStatement	if ( property_info != ZEND_WRONG_PROPERTY_INFO && property_info && ( property_info -> flags & ZEND_ACC_STATIC ) == 0 )		3848784	1					
ANR	3848838	Condition	property_info != ZEND_WRONG_PROPERTY_INFO && property_info && ( property_info -> flags & ZEND_ACC_STATIC ) == 0	1202:7:31180:31300	3848784	0	True				
ANR	3848839	AndExpression	property_info != ZEND_WRONG_PROPERTY_INFO && property_info && ( property_info -> flags & ZEND_ACC_STATIC ) == 0		3848784	0		&&			
ANR	3848840	EqualityExpression	property_info != ZEND_WRONG_PROPERTY_INFO		3848784	0		!=			
ANR	3848841	Identifier	property_info		3848784	0					
ANR	3848842	Identifier	ZEND_WRONG_PROPERTY_INFO		3848784	1					
ANR	3848843	AndExpression	property_info && ( property_info -> flags & ZEND_ACC_STATIC ) == 0		3848784	1		&&			
ANR	3848844	Identifier	property_info		3848784	0					
ANR	3848845	EqualityExpression	( property_info -> flags & ZEND_ACC_STATIC ) == 0		3848784	1		==			
ANR	3848846	BitAndExpression	property_info -> flags & ZEND_ACC_STATIC		3848784	0		&			
ANR	3848847	PtrMemberAccess	property_info -> flags		3848784	0					
ANR	3848848	Identifier	property_info		3848784	0					
ANR	3848849	Identifier	flags		3848784	1					
ANR	3848850	Identifier	ZEND_ACC_STATIC		3848784	1					
ANR	3848851	PrimaryExpression	0		3848784	1					
ANR	3848852	CompoundStatement		13:4:420:472	3848784	1					
ANR	3848853	IdentifierDeclStatement	"zval * slot = OBJ_PROP ( object , property_info -> offset ) ;"	1205:4:31309:31361	3848784	0	True				
ANR	3848854	IdentifierDecl	"* slot = OBJ_PROP ( object , property_info -> offset )"		3848784	0					
ANR	3848855	IdentifierDeclType	zval *		3848784	0					
ANR	3848856	Identifier	slot		3848784	1					
ANR	3848857	AssignmentExpression	"* slot = OBJ_PROP ( object , property_info -> offset )"		3848784	2		=			
ANR	3848858	Identifier	slot		3848784	0					
ANR	3848859	CallExpression	"OBJ_PROP ( object , property_info -> offset )"		3848784	1					
ANR	3848860	Callee	OBJ_PROP		3848784	0					
ANR	3848861	Identifier	OBJ_PROP		3848784	0					
ANR	3848862	ArgumentList	object		3848784	1					
ANR	3848863	Argument	object		3848784	0					
ANR	3848864	Identifier	object		3848784	0					
ANR	3848865	Argument	property_info -> offset		3848784	1					
ANR	3848866	PtrMemberAccess	property_info -> offset		3848784	0					
ANR	3848867	Identifier	property_info		3848784	0					
ANR	3848868	Identifier	offset		3848784	1					
ANR	3848869	ExpressionStatement	"ZVAL_COPY_VALUE ( slot , prop )"	1206:4:31367:31394	3848784	1	True				
ANR	3848870	CallExpression	"ZVAL_COPY_VALUE ( slot , prop )"		3848784	0					
ANR	3848871	Callee	ZVAL_COPY_VALUE		3848784	0					
ANR	3848872	Identifier	ZVAL_COPY_VALUE		3848784	0					
ANR	3848873	ArgumentList	slot		3848784	1					
ANR	3848874	Argument	slot		3848784	0					
ANR	3848875	Identifier	slot		3848784	0					
ANR	3848876	Argument	prop		3848784	1					
ANR	3848877	Identifier	prop		3848784	0					
ANR	3848878	ExpressionStatement	"ZVAL_INDIRECT ( prop , slot )"	1207:4:31400:31425	3848784	2	True				
ANR	3848879	CallExpression	"ZVAL_INDIRECT ( prop , slot )"		3848784	0					
ANR	3848880	Callee	ZVAL_INDIRECT		3848784	0					
ANR	3848881	Identifier	ZVAL_INDIRECT		3848784	0					
ANR	3848882	ArgumentList	prop		3848784	1					
ANR	3848883	Argument	prop		3848784	0					
ANR	3848884	Identifier	prop		3848784	0					
ANR	3848885	Argument	slot		3848784	1					
ANR	3848886	Identifier	slot		3848784	0					
ANR	3848887	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1209:4:31436:31459	3848784	12	True				
ANR	3848888	CallExpression	ZEND_HASH_FOREACH_END ( )		3848784	0					
ANR	3848889	Callee	ZEND_HASH_FOREACH_END		3848784	0					
ANR	3848890	Identifier	ZEND_HASH_FOREACH_END		3848784	0					
ANR	3848891	ArgumentList			3848784	1					
ANR	3848892	ReturnType	ZEND_API void		3848784	1					
ANR	3848893	Identifier	object_properties_init_ex		3848784	2					
ANR	3848894	ParameterList	"zend_object * object , HashTable * properties"		3848784	3					
ANR	3848895	Parameter	zend_object * object	1192:40:30834:30852	3848784	0	True				
ANR	3848896	ParameterType	zend_object *		3848784	0					
ANR	3848897	Identifier	object		3848784	1					
ANR	3848898	Parameter	HashTable * properties	1192:61:30855:30875	3848784	1	True				
ANR	3848899	ParameterType	HashTable *		3848784	0					
ANR	3848900	Identifier	properties		3848784	1					
ANR	3848901	CFGEntryNode	ENTRY		3848784		True				
ANR	3848902	CFGExitNode	EXIT		3848784		True				
ANR	3848903	Symbol	property_info		3848784						
ANR	3848904	Symbol	property_info -> offset		3848784						
ANR	3848905	Symbol	object -> ce		3848784						
ANR	3848906	Symbol	slot		3848784						
ANR	3848907	Symbol	* object		3848784						
ANR	3848908	Symbol	object -> ce -> default_properties_count		3848784						
ANR	3848909	Symbol	object -> properties		3848784						
ANR	3848910	Symbol	ZEND_WRONG_PROPERTY_INFO		3848784						
ANR	3848911	Symbol	* property_info		3848784						
ANR	3848912	Symbol	OBJ_PROP		3848784						
ANR	3848913	Symbol	prop		3848784						
ANR	3848914	Symbol	zend_get_property_info		3848784						
ANR	3848915	Symbol	* * object		3848784						
ANR	3848916	Symbol	ZEND_ACC_STATIC		3848784						
ANR	3848917	Symbol	properties		3848784						
ANR	3848918	Symbol	* object -> ce		3848784						
ANR	3848919	Symbol	key		3848784						
ANR	3848920	Symbol	property_info -> flags		3848784						
ANR	3848921	Symbol	object		3848784						
ANR	3848922	Function	object_properties_load	1214:0:31477:33030							
ANR	3848923	FunctionDef	"object_properties_load (zend_object * object , HashTable * properties)"		3848922	0					
ANR	3848924	CompoundStatement		1215:0:31568:33030	3848922	0					
ANR	3848925	IdentifierDeclStatement	"zval * prop , tmp ;"	1216:4:31574:31589	3848922	0	True				
ANR	3848926	IdentifierDecl	* prop		3848922	0					
ANR	3848927	IdentifierDeclType	zval *		3848922	0					
ANR	3848928	Identifier	prop		3848922	1					
ANR	3848929	IdentifierDecl	tmp		3848922	1					
ANR	3848930	IdentifierDeclType	zval		3848922	0					
ANR	3848931	Identifier	tmp		3848922	1					
ANR	3848932	IdentifierDeclStatement	zend_string * key ;	1217:4:31595:31611	3848922	1	True				
ANR	3848933	IdentifierDecl	* key		3848922	0					
ANR	3848934	IdentifierDeclType	zend_string *		3848922	0					
ANR	3848935	Identifier	key		3848922	1					
ANR	3848936	IdentifierDeclStatement	zend_long h ;	1218:4:31617:31628	3848922	2	True				
ANR	3848937	IdentifierDecl	h		3848922	0					
ANR	3848938	IdentifierDeclType	zend_long		3848922	0					
ANR	3848939	Identifier	h		3848922	1					
ANR	3848940	IdentifierDeclStatement	zend_property_info * property_info ;	1219:4:31634:31667	3848922	3	True				
ANR	3848941	IdentifierDecl	* property_info		3848922	0					
ANR	3848942	IdentifierDeclType	zend_property_info *		3848922	0					
ANR	3848943	Identifier	property_info		3848922	1					
ANR	3848944	Statement	ZEND_HASH_FOREACH_KEY_VAL	1221:4:31674:31698	3848922	4	True				
ANR	3848945	Statement	(	1221:29:31699:31699	3848922	5	True				
ANR	3848946	Statement	properties	1221:30:31700:31709	3848922	6	True				
ANR	3848947	Statement	","	1221:40:31710:31710	3848922	7	True				
ANR	3848948	Statement	h	1221:42:31712:31712	3848922	8	True				
ANR	3848949	Statement	","	1221:43:31713:31713	3848922	9	True				
ANR	3848950	Statement	key	1221:45:31715:31717	3848922	10	True				
ANR	3848951	Statement	","	1221:48:31718:31718	3848922	11	True				
ANR	3848952	Statement	prop	1221:50:31720:31723	3848922	12	True				
ANR	3848953	Statement	)	1221:54:31724:31724	3848922	13	True				
ANR	3848954	CompoundStatement		7:56:157:157	3848922	14					
ANR	3848955	IfStatement	if ( key )		3848922	0					
ANR	3848956	Condition	key	1222:6:31734:31736	3848922	0	True				
ANR	3848957	Identifier	key		3848922	0					
ANR	3848958	CompoundStatement		8:11:170:170	3848922	1					
ANR	3848959	IfStatement	if ( ZSTR_VAL ( key ) [ 0 ] == '\\0' )		3848922	0					
ANR	3848960	Condition	ZSTR_VAL ( key ) [ 0 ] == '\\0'	1223:7:31748:31771	3848922	0	True				
ANR	3848961	EqualityExpression	ZSTR_VAL ( key ) [ 0 ] == '\\0'		3848922	0		==			
ANR	3848962	ArrayIndexing	ZSTR_VAL ( key ) [ 0 ]		3848922	0					
ANR	3848963	CallExpression	ZSTR_VAL ( key )		3848922	0					
ANR	3848964	Callee	ZSTR_VAL		3848922	0					
ANR	3848965	Identifier	ZSTR_VAL		3848922	0					
ANR	3848966	ArgumentList	key		3848922	1					
ANR	3848967	Argument	key		3848922	0					
ANR	3848968	Identifier	key		3848922	0					
ANR	3848969	PrimaryExpression	0		3848922	1					
ANR	3848970	PrimaryExpression	'\\0'		3848922	1					
ANR	3848971	CompoundStatement		11:4:251:271	3848922	1					
ANR	3848972	IdentifierDeclStatement	"const char * class_name , * prop_name ;"	1224:4:31780:31814	3848922	0	True				
ANR	3848973	IdentifierDecl	* class_name		3848922	0					
ANR	3848974	IdentifierDeclType	const char *		3848922	0					
ANR	3848975	Identifier	class_name		3848922	1					
ANR	3848976	IdentifierDecl	* prop_name		3848922	1					
ANR	3848977	IdentifierDeclType	const char *		3848922	0					
ANR	3848978	Identifier	prop_name		3848922	1					
ANR	3848979	IdentifierDeclStatement	size_t prop_name_len ;	1225:4:31820:31840	3848922	1	True				
ANR	3848980	IdentifierDecl	prop_name_len		3848922	0					
ANR	3848981	IdentifierDeclType	size_t		3848922	0					
ANR	3848982	Identifier	prop_name_len		3848922	1					
ANR	3848983	IfStatement	"if ( zend_unmangle_property_name_ex ( key , & class_name , & prop_name , & prop_name_len ) == SUCCESS )"		3848922	2					
ANR	3848984	Condition	"zend_unmangle_property_name_ex ( key , & class_name , & prop_name , & prop_name_len ) == SUCCESS"	1226:8:31850:31936	3848922	0	True				
ANR	3848985	EqualityExpression	"zend_unmangle_property_name_ex ( key , & class_name , & prop_name , & prop_name_len ) == SUCCESS"		3848922	0		==			
ANR	3848986	CallExpression	"zend_unmangle_property_name_ex ( key , & class_name , & prop_name , & prop_name_len )"		3848922	0					
ANR	3848987	Callee	zend_unmangle_property_name_ex		3848922	0					
ANR	3848988	Identifier	zend_unmangle_property_name_ex		3848922	0					
ANR	3848989	ArgumentList	key		3848922	1					
ANR	3848990	Argument	key		3848922	0					
ANR	3848991	Identifier	key		3848922	0					
ANR	3848992	Argument	& class_name		3848922	1					
ANR	3848993	UnaryOperationExpression	& class_name		3848922	0					
ANR	3848994	UnaryOperator	&		3848922	0					
ANR	3848995	Identifier	class_name		3848922	1					
ANR	3848996	Argument	& prop_name		3848922	2					
ANR	3848997	UnaryOperationExpression	& prop_name		3848922	0					
ANR	3848998	UnaryOperator	&		3848922	0					
ANR	3848999	Identifier	prop_name		3848922	1					
ANR	3849000	Argument	& prop_name_len		3848922	3					
ANR	3849001	UnaryOperationExpression	& prop_name_len		3848922	0					
ANR	3849002	UnaryOperator	&		3848922	0					
ANR	3849003	Identifier	prop_name_len		3848922	1					
ANR	3849004	Identifier	SUCCESS		3848922	1					
ANR	3849005	CompoundStatement		13:5:377:443	3848922	1					
ANR	3849006	IdentifierDeclStatement	"zend_string * pname = zend_string_init ( prop_name , prop_name_len , 0 ) ;"	1227:5:31946:32012	3848922	0	True				
ANR	3849007	IdentifierDecl	"* pname = zend_string_init ( prop_name , prop_name_len , 0 )"		3848922	0					
ANR	3849008	IdentifierDeclType	zend_string *		3848922	0					
ANR	3849009	Identifier	pname		3848922	1					
ANR	3849010	AssignmentExpression	"* pname = zend_string_init ( prop_name , prop_name_len , 0 )"		3848922	2		=			
ANR	3849011	Identifier	pname		3848922	0					
ANR	3849012	CallExpression	"zend_string_init ( prop_name , prop_name_len , 0 )"		3848922	1					
ANR	3849013	Callee	zend_string_init		3848922	0					
ANR	3849014	Identifier	zend_string_init		3848922	0					
ANR	3849015	ArgumentList	prop_name		3848922	1					
ANR	3849016	Argument	prop_name		3848922	0					
ANR	3849017	Identifier	prop_name		3848922	0					
ANR	3849018	Argument	prop_name_len		3848922	1					
ANR	3849019	Identifier	prop_name_len		3848922	0					
ANR	3849020	Argument	0		3848922	2					
ANR	3849021	PrimaryExpression	0		3848922	0					
ANR	3849022	ExpressionStatement	"property_info = zend_get_property_info ( object -> ce , pname , 1 )"	1228:5:32019:32079	3848922	1	True				
ANR	3849023	AssignmentExpression	"property_info = zend_get_property_info ( object -> ce , pname , 1 )"		3848922	0		=			
ANR	3849024	Identifier	property_info		3848922	0					
ANR	3849025	CallExpression	"zend_get_property_info ( object -> ce , pname , 1 )"		3848922	1					
ANR	3849026	Callee	zend_get_property_info		3848922	0					
ANR	3849027	Identifier	zend_get_property_info		3848922	0					
ANR	3849028	ArgumentList	object -> ce		3848922	1					
ANR	3849029	Argument	object -> ce		3848922	0					
ANR	3849030	PtrMemberAccess	object -> ce		3848922	0					
ANR	3849031	Identifier	object		3848922	0					
ANR	3849032	Identifier	ce		3848922	1					
ANR	3849033	Argument	pname		3848922	1					
ANR	3849034	Identifier	pname		3848922	0					
ANR	3849035	Argument	1		3848922	2					
ANR	3849036	PrimaryExpression	1		3848922	0					
ANR	3849037	ExpressionStatement	zend_string_release ( pname )	1229:5:32086:32112	3848922	2	True				
ANR	3849038	CallExpression	zend_string_release ( pname )		3848922	0					
ANR	3849039	Callee	zend_string_release		3848922	0					
ANR	3849040	Identifier	zend_string_release		3848922	0					
ANR	3849041	ArgumentList	pname		3848922	1					
ANR	3849042	Argument	pname		3848922	0					
ANR	3849043	Identifier	pname		3848922	0					
ANR	3849044	ElseStatement	else		3848922	0					
ANR	3849045	CompoundStatement		16:11:556:556	3848922	0					
ANR	3849046	ExpressionStatement	property_info = ZEND_WRONG_PROPERTY_INFO	1231:5:32132:32172	3848922	0	True				
ANR	3849047	AssignmentExpression	property_info = ZEND_WRONG_PROPERTY_INFO		3848922	0		=			
ANR	3849048	Identifier	property_info		3848922	0					
ANR	3849049	Identifier	ZEND_WRONG_PROPERTY_INFO		3848922	1					
ANR	3849050	ElseStatement	else		3848922	0					
ANR	3849051	CompoundStatement		19:10:621:621	3848922	0					
ANR	3849052	ExpressionStatement	"property_info = zend_get_property_info ( object -> ce , key , 1 )"	1234:4:32196:32254	3848922	0	True				
ANR	3849053	AssignmentExpression	"property_info = zend_get_property_info ( object -> ce , key , 1 )"		3848922	0		=			
ANR	3849054	Identifier	property_info		3848922	0					
ANR	3849055	CallExpression	"zend_get_property_info ( object -> ce , key , 1 )"		3848922	1					
ANR	3849056	Callee	zend_get_property_info		3848922	0					
ANR	3849057	Identifier	zend_get_property_info		3848922	0					
ANR	3849058	ArgumentList	object -> ce		3848922	1					
ANR	3849059	Argument	object -> ce		3848922	0					
ANR	3849060	PtrMemberAccess	object -> ce		3848922	0					
ANR	3849061	Identifier	object		3848922	0					
ANR	3849062	Identifier	ce		3848922	1					
ANR	3849063	Argument	key		3848922	1					
ANR	3849064	Identifier	key		3848922	0					
ANR	3849065	Argument	1		3848922	2					
ANR	3849066	PrimaryExpression	1		3848922	0					
ANR	3849067	IfStatement	if ( property_info != ZEND_WRONG_PROPERTY_INFO && property_info && ( property_info -> flags & ZEND_ACC_STATIC ) == 0 )		3848922	1					
ANR	3849068	Condition	property_info != ZEND_WRONG_PROPERTY_INFO && property_info && ( property_info -> flags & ZEND_ACC_STATIC ) == 0	1236:7:32268:32382	3848922	0	True				
ANR	3849069	AndExpression	property_info != ZEND_WRONG_PROPERTY_INFO && property_info && ( property_info -> flags & ZEND_ACC_STATIC ) == 0		3848922	0		&&			
ANR	3849070	EqualityExpression	property_info != ZEND_WRONG_PROPERTY_INFO		3848922	0		!=			
ANR	3849071	Identifier	property_info		3848922	0					
ANR	3849072	Identifier	ZEND_WRONG_PROPERTY_INFO		3848922	1					
ANR	3849073	AndExpression	property_info && ( property_info -> flags & ZEND_ACC_STATIC ) == 0		3848922	1		&&			
ANR	3849074	Identifier	property_info		3848922	0					
ANR	3849075	EqualityExpression	( property_info -> flags & ZEND_ACC_STATIC ) == 0		3848922	1		==			
ANR	3849076	BitAndExpression	property_info -> flags & ZEND_ACC_STATIC		3848922	0		&			
ANR	3849077	PtrMemberAccess	property_info -> flags		3848922	0					
ANR	3849078	Identifier	property_info		3848922	0					
ANR	3849079	Identifier	flags		3848922	1					
ANR	3849080	Identifier	ZEND_ACC_STATIC		3848922	1					
ANR	3849081	PrimaryExpression	0		3848922	1					
ANR	3849082	CompoundStatement		25:4:822:874	3848922	1					
ANR	3849083	IdentifierDeclStatement	"zval * slot = OBJ_PROP ( object , property_info -> offset ) ;"	1239:4:32391:32443	3848922	0	True				
ANR	3849084	IdentifierDecl	"* slot = OBJ_PROP ( object , property_info -> offset )"		3848922	0					
ANR	3849085	IdentifierDeclType	zval *		3848922	0					
ANR	3849086	Identifier	slot		3848922	1					
ANR	3849087	AssignmentExpression	"* slot = OBJ_PROP ( object , property_info -> offset )"		3848922	2		=			
ANR	3849088	Identifier	slot		3848922	0					
ANR	3849089	CallExpression	"OBJ_PROP ( object , property_info -> offset )"		3848922	1					
ANR	3849090	Callee	OBJ_PROP		3848922	0					
ANR	3849091	Identifier	OBJ_PROP		3848922	0					
ANR	3849092	ArgumentList	object		3848922	1					
ANR	3849093	Argument	object		3848922	0					
ANR	3849094	Identifier	object		3848922	0					
ANR	3849095	Argument	property_info -> offset		3848922	1					
ANR	3849096	PtrMemberAccess	property_info -> offset		3848922	0					
ANR	3849097	Identifier	property_info		3848922	0					
ANR	3849098	Identifier	offset		3848922	1					
ANR	3849099	ExpressionStatement	zval_ptr_dtor ( slot )	1240:4:32449:32468	3848922	1	True				
ANR	3849100	CallExpression	zval_ptr_dtor ( slot )		3848922	0					
ANR	3849101	Callee	zval_ptr_dtor		3848922	0					
ANR	3849102	Identifier	zval_ptr_dtor		3848922	0					
ANR	3849103	ArgumentList	slot		3848922	1					
ANR	3849104	Argument	slot		3848922	0					
ANR	3849105	Identifier	slot		3848922	0					
ANR	3849106	ExpressionStatement	"ZVAL_COPY_VALUE ( slot , prop )"	1241:4:32474:32501	3848922	2	True				
ANR	3849107	CallExpression	"ZVAL_COPY_VALUE ( slot , prop )"		3848922	0					
ANR	3849108	Callee	ZVAL_COPY_VALUE		3848922	0					
ANR	3849109	Identifier	ZVAL_COPY_VALUE		3848922	0					
ANR	3849110	ArgumentList	slot		3848922	1					
ANR	3849111	Argument	slot		3848922	0					
ANR	3849112	Identifier	slot		3848922	0					
ANR	3849113	Argument	prop		3848922	1					
ANR	3849114	Identifier	prop		3848922	0					
ANR	3849115	ExpressionStatement	zval_add_ref ( slot )	1242:4:32507:32525	3848922	3	True				
ANR	3849116	CallExpression	zval_add_ref ( slot )		3848922	0					
ANR	3849117	Callee	zval_add_ref		3848922	0					
ANR	3849118	Identifier	zval_add_ref		3848922	0					
ANR	3849119	ArgumentList	slot		3848922	1					
ANR	3849120	Argument	slot		3848922	0					
ANR	3849121	Identifier	slot		3848922	0					
ANR	3849122	IfStatement	if ( object -> properties )		3848922	4					
ANR	3849123	Condition	object -> properties	1243:8:32535:32552	3848922	0	True				
ANR	3849124	PtrMemberAccess	object -> properties		3848922	0					
ANR	3849125	Identifier	object		3848922	0					
ANR	3849126	Identifier	properties		3848922	1					
ANR	3849127	CompoundStatement		29:28:986:986	3848922	1					
ANR	3849128	ExpressionStatement	"ZVAL_INDIRECT ( & tmp , slot )"	1244:5:32562:32587	3848922	0	True				
ANR	3849129	CallExpression	"ZVAL_INDIRECT ( & tmp , slot )"		3848922	0					
ANR	3849130	Callee	ZVAL_INDIRECT		3848922	0					
ANR	3849131	Identifier	ZVAL_INDIRECT		3848922	0					
ANR	3849132	ArgumentList	& tmp		3848922	1					
ANR	3849133	Argument	& tmp		3848922	0					
ANR	3849134	UnaryOperationExpression	& tmp		3848922	0					
ANR	3849135	UnaryOperator	&		3848922	0					
ANR	3849136	Identifier	tmp		3848922	1					
ANR	3849137	Argument	slot		3848922	1					
ANR	3849138	Identifier	slot		3848922	0					
ANR	3849139	ExpressionStatement	"zend_hash_update ( object -> properties , key , & tmp )"	1245:5:32594:32641	3848922	1	True				
ANR	3849140	CallExpression	"zend_hash_update ( object -> properties , key , & tmp )"		3848922	0					
ANR	3849141	Callee	zend_hash_update		3848922	0					
ANR	3849142	Identifier	zend_hash_update		3848922	0					
ANR	3849143	ArgumentList	object -> properties		3848922	1					
ANR	3849144	Argument	object -> properties		3848922	0					
ANR	3849145	PtrMemberAccess	object -> properties		3848922	0					
ANR	3849146	Identifier	object		3848922	0					
ANR	3849147	Identifier	properties		3848922	1					
ANR	3849148	Argument	key		3848922	1					
ANR	3849149	Identifier	key		3848922	0					
ANR	3849150	Argument	& tmp		3848922	2					
ANR	3849151	UnaryOperationExpression	& tmp		3848922	0					
ANR	3849152	UnaryOperator	&		3848922	0					
ANR	3849153	Identifier	tmp		3848922	1					
ANR	3849154	ElseStatement	else		3848922	0					
ANR	3849155	CompoundStatement		33:10:1090:1090	3848922	0					
ANR	3849156	IfStatement	if ( ! object -> properties )		3848922	0					
ANR	3849157	Condition	! object -> properties	1248:8:32669:32687	3848922	0	True				
ANR	3849158	UnaryOperationExpression	! object -> properties		3848922	0					
ANR	3849159	UnaryOperator	!		3848922	0					
ANR	3849160	PtrMemberAccess	object -> properties		3848922	1					
ANR	3849161	Identifier	object		3848922	0					
ANR	3849162	Identifier	properties		3848922	1					
ANR	3849163	CompoundStatement		34:29:1121:1121	3848922	1					
ANR	3849164	ExpressionStatement	rebuild_object_properties ( object )	1249:5:32697:32730	3848922	0	True				
ANR	3849165	CallExpression	rebuild_object_properties ( object )		3848922	0					
ANR	3849166	Callee	rebuild_object_properties		3848922	0					
ANR	3849167	Identifier	rebuild_object_properties		3848922	0					
ANR	3849168	ArgumentList	object		3848922	1					
ANR	3849169	Argument	object		3848922	0					
ANR	3849170	Identifier	object		3848922	0					
ANR	3849171	ExpressionStatement	"prop = zend_hash_update ( object -> properties , key , prop )"	1251:4:32742:32796	3848922	1	True				
ANR	3849172	AssignmentExpression	"prop = zend_hash_update ( object -> properties , key , prop )"		3848922	0		=			
ANR	3849173	Identifier	prop		3848922	0					
ANR	3849174	CallExpression	"zend_hash_update ( object -> properties , key , prop )"		3848922	1					
ANR	3849175	Callee	zend_hash_update		3848922	0					
ANR	3849176	Identifier	zend_hash_update		3848922	0					
ANR	3849177	ArgumentList	object -> properties		3848922	1					
ANR	3849178	Argument	object -> properties		3848922	0					
ANR	3849179	PtrMemberAccess	object -> properties		3848922	0					
ANR	3849180	Identifier	object		3848922	0					
ANR	3849181	Identifier	properties		3848922	1					
ANR	3849182	Argument	key		3848922	1					
ANR	3849183	Identifier	key		3848922	0					
ANR	3849184	Argument	prop		3848922	2					
ANR	3849185	Identifier	prop		3848922	0					
ANR	3849186	ExpressionStatement	zval_add_ref ( prop )	1252:4:32802:32820	3848922	2	True				
ANR	3849187	CallExpression	zval_add_ref ( prop )		3848922	0					
ANR	3849188	Callee	zval_add_ref		3848922	0					
ANR	3849189	Identifier	zval_add_ref		3848922	0					
ANR	3849190	ArgumentList	prop		3848922	1					
ANR	3849191	Argument	prop		3848922	0					
ANR	3849192	Identifier	prop		3848922	0					
ANR	3849193	ElseStatement	else		3848922	0					
ANR	3849194	CompoundStatement		40:9:1267:1267	3848922	0					
ANR	3849195	IfStatement	if ( ! object -> properties )		3848922	0					
ANR	3849196	Condition	! object -> properties	1255:7:32845:32863	3848922	0	True				
ANR	3849197	UnaryOperationExpression	! object -> properties		3848922	0					
ANR	3849198	UnaryOperator	!		3848922	0					
ANR	3849199	PtrMemberAccess	object -> properties		3848922	1					
ANR	3849200	Identifier	object		3848922	0					
ANR	3849201	Identifier	properties		3848922	1					
ANR	3849202	CompoundStatement		41:28:1297:1297	3848922	1					
ANR	3849203	ExpressionStatement	rebuild_object_properties ( object )	1256:4:32872:32905	3848922	0	True				
ANR	3849204	CallExpression	rebuild_object_properties ( object )		3848922	0					
ANR	3849205	Callee	rebuild_object_properties		3848922	0					
ANR	3849206	Identifier	rebuild_object_properties		3848922	0					
ANR	3849207	ArgumentList	object		3848922	1					
ANR	3849208	Argument	object		3848922	0					
ANR	3849209	Identifier	object		3848922	0					
ANR	3849210	ExpressionStatement	"prop = zend_hash_index_update ( object -> properties , h , prop )"	1258:3:32915:32973	3848922	1	True				
ANR	3849211	AssignmentExpression	"prop = zend_hash_index_update ( object -> properties , h , prop )"		3848922	0		=			
ANR	3849212	Identifier	prop		3848922	0					
ANR	3849213	CallExpression	"zend_hash_index_update ( object -> properties , h , prop )"		3848922	1					
ANR	3849214	Callee	zend_hash_index_update		3848922	0					
ANR	3849215	Identifier	zend_hash_index_update		3848922	0					
ANR	3849216	ArgumentList	object -> properties		3848922	1					
ANR	3849217	Argument	object -> properties		3848922	0					
ANR	3849218	PtrMemberAccess	object -> properties		3848922	0					
ANR	3849219	Identifier	object		3848922	0					
ANR	3849220	Identifier	properties		3848922	1					
ANR	3849221	Argument	h		3848922	1					
ANR	3849222	Identifier	h		3848922	0					
ANR	3849223	Argument	prop		3848922	2					
ANR	3849224	Identifier	prop		3848922	0					
ANR	3849225	ExpressionStatement	zval_add_ref ( prop )	1259:3:32978:32996	3848922	2	True				
ANR	3849226	CallExpression	zval_add_ref ( prop )		3848922	0					
ANR	3849227	Callee	zval_add_ref		3848922	0					
ANR	3849228	Identifier	zval_add_ref		3848922	0					
ANR	3849229	ArgumentList	prop		3848922	1					
ANR	3849230	Argument	prop		3848922	0					
ANR	3849231	Identifier	prop		3848922	0					
ANR	3849232	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1261:3:33005:33028	3848922	15	True				
ANR	3849233	CallExpression	ZEND_HASH_FOREACH_END ( )		3848922	0					
ANR	3849234	Callee	ZEND_HASH_FOREACH_END		3848922	0					
ANR	3849235	Identifier	ZEND_HASH_FOREACH_END		3848922	0					
ANR	3849236	ArgumentList			3848922	1					
ANR	3849237	ReturnType	ZEND_API void		3848922	1					
ANR	3849238	Identifier	object_properties_load		3848922	2					
ANR	3849239	ParameterList	"zend_object * object , HashTable * properties"		3848922	3					
ANR	3849240	Parameter	zend_object * object	1214:37:31514:31532	3848922	0	True				
ANR	3849241	ParameterType	zend_object *		3848922	0					
ANR	3849242	Identifier	object		3848922	1					
ANR	3849243	Parameter	HashTable * properties	1214:58:31535:31555	3848922	1	True				
ANR	3849244	ParameterType	HashTable *		3848922	0					
ANR	3849245	Identifier	properties		3848922	1					
ANR	3849246	CFGEntryNode	ENTRY		3848922		True				
ANR	3849247	CFGExitNode	EXIT		3848922		True				
ANR	3849248	Symbol	property_info -> offset		3848922						
ANR	3849249	Symbol	object -> ce		3848922						
ANR	3849250	Symbol	& class_name		3848922						
ANR	3849251	Symbol	slot		3848922						
ANR	3849252	Symbol	* object		3848922						
ANR	3849253	Symbol	zend_string_init		3848922						
ANR	3849254	Symbol	* property_info		3848922						
ANR	3849255	Symbol	tmp		3848922						
ANR	3849256	Symbol	prop		3848922						
ANR	3849257	Symbol	ZEND_ACC_STATIC		3848922						
ANR	3849258	Symbol	& prop_name		3848922						
ANR	3849259	Symbol	zend_hash_update		3848922						
ANR	3849260	Symbol	class_name		3848922						
ANR	3849261	Symbol	key		3848922						
ANR	3849262	Symbol	property_info -> flags		3848922						
ANR	3849263	Symbol	* ZSTR_VAL		3848922						
ANR	3849264	Symbol	property_info		3848922						
ANR	3849265	Symbol	& prop_name_len		3848922						
ANR	3849266	Symbol	SUCCESS		3848922						
ANR	3849267	Symbol	prop_name_len		3848922						
ANR	3849268	Symbol	pname		3848922						
ANR	3849269	Symbol	zend_hash_index_update		3848922						
ANR	3849270	Symbol	h		3848922						
ANR	3849271	Symbol	ZSTR_VAL		3848922						
ANR	3849272	Symbol	prop_name		3848922						
ANR	3849273	Symbol	object -> properties		3848922						
ANR	3849274	Symbol	ZEND_WRONG_PROPERTY_INFO		3848922						
ANR	3849275	Symbol	zend_unmangle_property_name_ex		3848922						
ANR	3849276	Symbol	OBJ_PROP		3848922						
ANR	3849277	Symbol	zend_get_property_info		3848922						
ANR	3849278	Symbol	& tmp		3848922						
ANR	3849279	Symbol	properties		3848922						
ANR	3849280	Symbol	object		3848922						
ANR	3849281	Function	add_assoc_long_ex	1318:0:34945:35187							
ANR	3849282	FunctionDef	"add_assoc_long_ex (zval * arg , const char * key , size_t key_len , zend_long n)"		3849281	0					
ANR	3849283	CompoundStatement		1319:0:35043:35187	3849281	0					
ANR	3849284	IdentifierDeclStatement	"zval * ret , tmp ;"	1320:1:35046:35060	3849281	0	True				
ANR	3849285	IdentifierDecl	* ret		3849281	0					
ANR	3849286	IdentifierDeclType	zval *		3849281	0					
ANR	3849287	Identifier	ret		3849281	1					
ANR	3849288	IdentifierDecl	tmp		3849281	1					
ANR	3849289	IdentifierDeclType	zval		3849281	0					
ANR	3849290	Identifier	tmp		3849281	1					
ANR	3849291	ExpressionStatement	"ZVAL_LONG ( & tmp , n )"	1322:1:35064:35082	3849281	1	True				
ANR	3849292	CallExpression	"ZVAL_LONG ( & tmp , n )"		3849281	0					
ANR	3849293	Callee	ZVAL_LONG		3849281	0					
ANR	3849294	Identifier	ZVAL_LONG		3849281	0					
ANR	3849295	ArgumentList	& tmp		3849281	1					
ANR	3849296	Argument	& tmp		3849281	0					
ANR	3849297	UnaryOperationExpression	& tmp		3849281	0					
ANR	3849298	UnaryOperator	&		3849281	0					
ANR	3849299	Identifier	tmp		3849281	1					
ANR	3849300	Argument	n		3849281	1					
ANR	3849301	Identifier	n		3849281	0					
ANR	3849302	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1323:1:35085:35152	3849281	2	True				
ANR	3849303	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849281	0		=			
ANR	3849304	Identifier	ret		3849281	0					
ANR	3849305	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849281	1					
ANR	3849306	Callee	zend_symtable_str_update		3849281	0					
ANR	3849307	Identifier	zend_symtable_str_update		3849281	0					
ANR	3849308	ArgumentList	Z_ARRVAL_P ( arg )		3849281	1					
ANR	3849309	Argument	Z_ARRVAL_P ( arg )		3849281	0					
ANR	3849310	CallExpression	Z_ARRVAL_P ( arg )		3849281	0					
ANR	3849311	Callee	Z_ARRVAL_P		3849281	0					
ANR	3849312	Identifier	Z_ARRVAL_P		3849281	0					
ANR	3849313	ArgumentList	arg		3849281	1					
ANR	3849314	Argument	arg		3849281	0					
ANR	3849315	Identifier	arg		3849281	0					
ANR	3849316	Argument	key		3849281	1					
ANR	3849317	Identifier	key		3849281	0					
ANR	3849318	Argument	key_len		3849281	2					
ANR	3849319	Identifier	key_len		3849281	0					
ANR	3849320	Argument	& tmp		3849281	3					
ANR	3849321	UnaryOperationExpression	& tmp		3849281	0					
ANR	3849322	UnaryOperator	&		3849281	0					
ANR	3849323	Identifier	tmp		3849281	1					
ANR	3849324	ReturnStatement	return ret ? SUCCESS : FAILURE ;	1324:1:35155:35185	3849281	3	True				
ANR	3849325	ConditionalExpression	ret ? SUCCESS : FAILURE		3849281	0					
ANR	3849326	Condition	ret		3849281	0					
ANR	3849327	Identifier	ret		3849281	0					
ANR	3849328	Identifier	SUCCESS		3849281	1					
ANR	3849329	Identifier	FAILURE		3849281	2					
ANR	3849330	ReturnType	ZEND_API int		3849281	1					
ANR	3849331	Identifier	add_assoc_long_ex		3849281	2					
ANR	3849332	ParameterList	"zval * arg , const char * key , size_t key_len , zend_long n"		3849281	3					
ANR	3849333	Parameter	zval * arg	1318:31:34976:34984	3849281	0	True				
ANR	3849334	ParameterType	zval *		3849281	0					
ANR	3849335	Identifier	arg		3849281	1					
ANR	3849336	Parameter	const char * key	1318:42:34987:35001	3849281	1	True				
ANR	3849337	ParameterType	const char *		3849281	0					
ANR	3849338	Identifier	key		3849281	1					
ANR	3849339	Parameter	size_t key_len	1318:59:35004:35017	3849281	2	True				
ANR	3849340	ParameterType	size_t		3849281	0					
ANR	3849341	Identifier	key_len		3849281	1					
ANR	3849342	Parameter	zend_long n	1318:75:35020:35030	3849281	3	True				
ANR	3849343	ParameterType	zend_long		3849281	0					
ANR	3849344	Identifier	n		3849281	1					
ANR	3849345	CFGEntryNode	ENTRY		3849281		True				
ANR	3849346	CFGExitNode	EXIT		3849281		True				
ANR	3849347	Symbol	ret		3849281						
ANR	3849348	Symbol	SUCCESS		3849281						
ANR	3849349	Symbol	tmp		3849281						
ANR	3849350	Symbol	arg		3849281						
ANR	3849351	Symbol	& tmp		3849281						
ANR	3849352	Symbol	zend_symtable_str_update		3849281						
ANR	3849353	Symbol	Z_ARRVAL_P		3849281						
ANR	3849354	Symbol	FAILURE		3849281						
ANR	3849355	Symbol	key		3849281						
ANR	3849356	Symbol	n		3849281						
ANR	3849357	Symbol	key_len		3849281						
ANR	3849358	Function	add_assoc_null_ex	1328:0:35200:35426							
ANR	3849359	FunctionDef	"add_assoc_null_ex (zval * arg , const char * key , size_t key_len)"		3849358	0					
ANR	3849360	CompoundStatement		1329:0:35285:35426	3849358	0					
ANR	3849361	IdentifierDeclStatement	"zval * ret , tmp ;"	1330:1:35288:35302	3849358	0	True				
ANR	3849362	IdentifierDecl	* ret		3849358	0					
ANR	3849363	IdentifierDeclType	zval *		3849358	0					
ANR	3849364	Identifier	ret		3849358	1					
ANR	3849365	IdentifierDecl	tmp		3849358	1					
ANR	3849366	IdentifierDeclType	zval		3849358	0					
ANR	3849367	Identifier	tmp		3849358	1					
ANR	3849368	ExpressionStatement	ZVAL_NULL ( & tmp )	1332:1:35306:35321	3849358	1	True				
ANR	3849369	CallExpression	ZVAL_NULL ( & tmp )		3849358	0					
ANR	3849370	Callee	ZVAL_NULL		3849358	0					
ANR	3849371	Identifier	ZVAL_NULL		3849358	0					
ANR	3849372	ArgumentList	& tmp		3849358	1					
ANR	3849373	Argument	& tmp		3849358	0					
ANR	3849374	UnaryOperationExpression	& tmp		3849358	0					
ANR	3849375	UnaryOperator	&		3849358	0					
ANR	3849376	Identifier	tmp		3849358	1					
ANR	3849377	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1333:1:35324:35391	3849358	2	True				
ANR	3849378	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849358	0		=			
ANR	3849379	Identifier	ret		3849358	0					
ANR	3849380	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849358	1					
ANR	3849381	Callee	zend_symtable_str_update		3849358	0					
ANR	3849382	Identifier	zend_symtable_str_update		3849358	0					
ANR	3849383	ArgumentList	Z_ARRVAL_P ( arg )		3849358	1					
ANR	3849384	Argument	Z_ARRVAL_P ( arg )		3849358	0					
ANR	3849385	CallExpression	Z_ARRVAL_P ( arg )		3849358	0					
ANR	3849386	Callee	Z_ARRVAL_P		3849358	0					
ANR	3849387	Identifier	Z_ARRVAL_P		3849358	0					
ANR	3849388	ArgumentList	arg		3849358	1					
ANR	3849389	Argument	arg		3849358	0					
ANR	3849390	Identifier	arg		3849358	0					
ANR	3849391	Argument	key		3849358	1					
ANR	3849392	Identifier	key		3849358	0					
ANR	3849393	Argument	key_len		3849358	2					
ANR	3849394	Identifier	key_len		3849358	0					
ANR	3849395	Argument	& tmp		3849358	3					
ANR	3849396	UnaryOperationExpression	& tmp		3849358	0					
ANR	3849397	UnaryOperator	&		3849358	0					
ANR	3849398	Identifier	tmp		3849358	1					
ANR	3849399	ReturnStatement	return ret ? SUCCESS : FAILURE ;	1334:1:35394:35424	3849358	3	True				
ANR	3849400	ConditionalExpression	ret ? SUCCESS : FAILURE		3849358	0					
ANR	3849401	Condition	ret		3849358	0					
ANR	3849402	Identifier	ret		3849358	0					
ANR	3849403	Identifier	SUCCESS		3849358	1					
ANR	3849404	Identifier	FAILURE		3849358	2					
ANR	3849405	ReturnType	ZEND_API int		3849358	1					
ANR	3849406	Identifier	add_assoc_null_ex		3849358	2					
ANR	3849407	ParameterList	"zval * arg , const char * key , size_t key_len"		3849358	3					
ANR	3849408	Parameter	zval * arg	1328:31:35231:35239	3849358	0	True				
ANR	3849409	ParameterType	zval *		3849358	0					
ANR	3849410	Identifier	arg		3849358	1					
ANR	3849411	Parameter	const char * key	1328:42:35242:35256	3849358	1	True				
ANR	3849412	ParameterType	const char *		3849358	0					
ANR	3849413	Identifier	key		3849358	1					
ANR	3849414	Parameter	size_t key_len	1328:59:35259:35272	3849358	2	True				
ANR	3849415	ParameterType	size_t		3849358	0					
ANR	3849416	Identifier	key_len		3849358	1					
ANR	3849417	CFGEntryNode	ENTRY		3849358		True				
ANR	3849418	CFGExitNode	EXIT		3849358		True				
ANR	3849419	Symbol	ret		3849358						
ANR	3849420	Symbol	SUCCESS		3849358						
ANR	3849421	Symbol	tmp		3849358						
ANR	3849422	Symbol	arg		3849358						
ANR	3849423	Symbol	& tmp		3849358						
ANR	3849424	Symbol	zend_symtable_str_update		3849358						
ANR	3849425	Symbol	Z_ARRVAL_P		3849358						
ANR	3849426	Symbol	FAILURE		3849358						
ANR	3849427	Symbol	key		3849358						
ANR	3849428	Symbol	key_len		3849358						
ANR	3849429	Function	add_assoc_bool_ex	1338:0:35439:35675							
ANR	3849430	FunctionDef	"add_assoc_bool_ex (zval * arg , const char * key , size_t key_len , int b)"		3849429	0					
ANR	3849431	CompoundStatement		1339:0:35531:35675	3849429	0					
ANR	3849432	IdentifierDeclStatement	"zval * ret , tmp ;"	1340:1:35534:35548	3849429	0	True				
ANR	3849433	IdentifierDecl	* ret		3849429	0					
ANR	3849434	IdentifierDeclType	zval *		3849429	0					
ANR	3849435	Identifier	ret		3849429	1					
ANR	3849436	IdentifierDecl	tmp		3849429	1					
ANR	3849437	IdentifierDeclType	zval		3849429	0					
ANR	3849438	Identifier	tmp		3849429	1					
ANR	3849439	ExpressionStatement	"ZVAL_BOOL ( & tmp , b )"	1342:1:35552:35570	3849429	1	True				
ANR	3849440	CallExpression	"ZVAL_BOOL ( & tmp , b )"		3849429	0					
ANR	3849441	Callee	ZVAL_BOOL		3849429	0					
ANR	3849442	Identifier	ZVAL_BOOL		3849429	0					
ANR	3849443	ArgumentList	& tmp		3849429	1					
ANR	3849444	Argument	& tmp		3849429	0					
ANR	3849445	UnaryOperationExpression	& tmp		3849429	0					
ANR	3849446	UnaryOperator	&		3849429	0					
ANR	3849447	Identifier	tmp		3849429	1					
ANR	3849448	Argument	b		3849429	1					
ANR	3849449	Identifier	b		3849429	0					
ANR	3849450	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1343:1:35573:35640	3849429	2	True				
ANR	3849451	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849429	0		=			
ANR	3849452	Identifier	ret		3849429	0					
ANR	3849453	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849429	1					
ANR	3849454	Callee	zend_symtable_str_update		3849429	0					
ANR	3849455	Identifier	zend_symtable_str_update		3849429	0					
ANR	3849456	ArgumentList	Z_ARRVAL_P ( arg )		3849429	1					
ANR	3849457	Argument	Z_ARRVAL_P ( arg )		3849429	0					
ANR	3849458	CallExpression	Z_ARRVAL_P ( arg )		3849429	0					
ANR	3849459	Callee	Z_ARRVAL_P		3849429	0					
ANR	3849460	Identifier	Z_ARRVAL_P		3849429	0					
ANR	3849461	ArgumentList	arg		3849429	1					
ANR	3849462	Argument	arg		3849429	0					
ANR	3849463	Identifier	arg		3849429	0					
ANR	3849464	Argument	key		3849429	1					
ANR	3849465	Identifier	key		3849429	0					
ANR	3849466	Argument	key_len		3849429	2					
ANR	3849467	Identifier	key_len		3849429	0					
ANR	3849468	Argument	& tmp		3849429	3					
ANR	3849469	UnaryOperationExpression	& tmp		3849429	0					
ANR	3849470	UnaryOperator	&		3849429	0					
ANR	3849471	Identifier	tmp		3849429	1					
ANR	3849472	ReturnStatement	return ret ? SUCCESS : FAILURE ;	1344:1:35643:35673	3849429	3	True				
ANR	3849473	ConditionalExpression	ret ? SUCCESS : FAILURE		3849429	0					
ANR	3849474	Condition	ret		3849429	0					
ANR	3849475	Identifier	ret		3849429	0					
ANR	3849476	Identifier	SUCCESS		3849429	1					
ANR	3849477	Identifier	FAILURE		3849429	2					
ANR	3849478	ReturnType	ZEND_API int		3849429	1					
ANR	3849479	Identifier	add_assoc_bool_ex		3849429	2					
ANR	3849480	ParameterList	"zval * arg , const char * key , size_t key_len , int b"		3849429	3					
ANR	3849481	Parameter	zval * arg	1338:31:35470:35478	3849429	0	True				
ANR	3849482	ParameterType	zval *		3849429	0					
ANR	3849483	Identifier	arg		3849429	1					
ANR	3849484	Parameter	const char * key	1338:42:35481:35495	3849429	1	True				
ANR	3849485	ParameterType	const char *		3849429	0					
ANR	3849486	Identifier	key		3849429	1					
ANR	3849487	Parameter	size_t key_len	1338:59:35498:35511	3849429	2	True				
ANR	3849488	ParameterType	size_t		3849429	0					
ANR	3849489	Identifier	key_len		3849429	1					
ANR	3849490	Parameter	int b	1338:75:35514:35518	3849429	3	True				
ANR	3849491	ParameterType	int		3849429	0					
ANR	3849492	Identifier	b		3849429	1					
ANR	3849493	CFGEntryNode	ENTRY		3849429		True				
ANR	3849494	CFGExitNode	EXIT		3849429		True				
ANR	3849495	Symbol	ret		3849429						
ANR	3849496	Symbol	b		3849429						
ANR	3849497	Symbol	SUCCESS		3849429						
ANR	3849498	Symbol	tmp		3849429						
ANR	3849499	Symbol	arg		3849429						
ANR	3849500	Symbol	& tmp		3849429						
ANR	3849501	Symbol	zend_symtable_str_update		3849429						
ANR	3849502	Symbol	Z_ARRVAL_P		3849429						
ANR	3849503	Symbol	FAILURE		3849429						
ANR	3849504	Symbol	key		3849429						
ANR	3849505	Symbol	key_len		3849429						
ANR	3849506	Function	add_assoc_resource_ex	1348:0:35688:35938							
ANR	3849507	FunctionDef	"add_assoc_resource_ex (zval * arg , const char * key , size_t key_len , zend_resource * r)"		3849506	0					
ANR	3849508	CompoundStatement		1349:0:35795:35938	3849506	0					
ANR	3849509	IdentifierDeclStatement	"zval * ret , tmp ;"	1350:1:35798:35812	3849506	0	True				
ANR	3849510	IdentifierDecl	* ret		3849506	0					
ANR	3849511	IdentifierDeclType	zval *		3849506	0					
ANR	3849512	Identifier	ret		3849506	1					
ANR	3849513	IdentifierDecl	tmp		3849506	1					
ANR	3849514	IdentifierDeclType	zval		3849506	0					
ANR	3849515	Identifier	tmp		3849506	1					
ANR	3849516	ExpressionStatement	"ZVAL_RES ( & tmp , r )"	1352:1:35816:35833	3849506	1	True				
ANR	3849517	CallExpression	"ZVAL_RES ( & tmp , r )"		3849506	0					
ANR	3849518	Callee	ZVAL_RES		3849506	0					
ANR	3849519	Identifier	ZVAL_RES		3849506	0					
ANR	3849520	ArgumentList	& tmp		3849506	1					
ANR	3849521	Argument	& tmp		3849506	0					
ANR	3849522	UnaryOperationExpression	& tmp		3849506	0					
ANR	3849523	UnaryOperator	&		3849506	0					
ANR	3849524	Identifier	tmp		3849506	1					
ANR	3849525	Argument	r		3849506	1					
ANR	3849526	Identifier	r		3849506	0					
ANR	3849527	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1353:1:35836:35903	3849506	2	True				
ANR	3849528	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849506	0		=			
ANR	3849529	Identifier	ret		3849506	0					
ANR	3849530	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849506	1					
ANR	3849531	Callee	zend_symtable_str_update		3849506	0					
ANR	3849532	Identifier	zend_symtable_str_update		3849506	0					
ANR	3849533	ArgumentList	Z_ARRVAL_P ( arg )		3849506	1					
ANR	3849534	Argument	Z_ARRVAL_P ( arg )		3849506	0					
ANR	3849535	CallExpression	Z_ARRVAL_P ( arg )		3849506	0					
ANR	3849536	Callee	Z_ARRVAL_P		3849506	0					
ANR	3849537	Identifier	Z_ARRVAL_P		3849506	0					
ANR	3849538	ArgumentList	arg		3849506	1					
ANR	3849539	Argument	arg		3849506	0					
ANR	3849540	Identifier	arg		3849506	0					
ANR	3849541	Argument	key		3849506	1					
ANR	3849542	Identifier	key		3849506	0					
ANR	3849543	Argument	key_len		3849506	2					
ANR	3849544	Identifier	key_len		3849506	0					
ANR	3849545	Argument	& tmp		3849506	3					
ANR	3849546	UnaryOperationExpression	& tmp		3849506	0					
ANR	3849547	UnaryOperator	&		3849506	0					
ANR	3849548	Identifier	tmp		3849506	1					
ANR	3849549	ReturnStatement	return ret ? SUCCESS : FAILURE ;	1354:1:35906:35936	3849506	3	True				
ANR	3849550	ConditionalExpression	ret ? SUCCESS : FAILURE		3849506	0					
ANR	3849551	Condition	ret		3849506	0					
ANR	3849552	Identifier	ret		3849506	0					
ANR	3849553	Identifier	SUCCESS		3849506	1					
ANR	3849554	Identifier	FAILURE		3849506	2					
ANR	3849555	ReturnType	ZEND_API int		3849506	1					
ANR	3849556	Identifier	add_assoc_resource_ex		3849506	2					
ANR	3849557	ParameterList	"zval * arg , const char * key , size_t key_len , zend_resource * r"		3849506	3					
ANR	3849558	Parameter	zval * arg	1348:35:35723:35731	3849506	0	True				
ANR	3849559	ParameterType	zval *		3849506	0					
ANR	3849560	Identifier	arg		3849506	1					
ANR	3849561	Parameter	const char * key	1348:46:35734:35748	3849506	1	True				
ANR	3849562	ParameterType	const char *		3849506	0					
ANR	3849563	Identifier	key		3849506	1					
ANR	3849564	Parameter	size_t key_len	1348:63:35751:35764	3849506	2	True				
ANR	3849565	ParameterType	size_t		3849506	0					
ANR	3849566	Identifier	key_len		3849506	1					
ANR	3849567	Parameter	zend_resource * r	1348:79:35767:35782	3849506	3	True				
ANR	3849568	ParameterType	zend_resource *		3849506	0					
ANR	3849569	Identifier	r		3849506	1					
ANR	3849570	CFGEntryNode	ENTRY		3849506		True				
ANR	3849571	CFGExitNode	EXIT		3849506		True				
ANR	3849572	Symbol	ret		3849506						
ANR	3849573	Symbol	r		3849506						
ANR	3849574	Symbol	SUCCESS		3849506						
ANR	3849575	Symbol	tmp		3849506						
ANR	3849576	Symbol	arg		3849506						
ANR	3849577	Symbol	& tmp		3849506						
ANR	3849578	Symbol	zend_symtable_str_update		3849506						
ANR	3849579	Symbol	Z_ARRVAL_P		3849506						
ANR	3849580	Symbol	FAILURE		3849506						
ANR	3849581	Symbol	key		3849506						
ANR	3849582	Symbol	key_len		3849506						
ANR	3849583	Function	add_assoc_double_ex	1358:0:35951:36194							
ANR	3849584	FunctionDef	"add_assoc_double_ex (zval * arg , const char * key , size_t key_len , double d)"		3849583	0					
ANR	3849585	CompoundStatement		1359:0:36048:36194	3849583	0					
ANR	3849586	IdentifierDeclStatement	"zval * ret , tmp ;"	1360:1:36051:36065	3849583	0	True				
ANR	3849587	IdentifierDecl	* ret		3849583	0					
ANR	3849588	IdentifierDeclType	zval *		3849583	0					
ANR	3849589	Identifier	ret		3849583	1					
ANR	3849590	IdentifierDecl	tmp		3849583	1					
ANR	3849591	IdentifierDeclType	zval		3849583	0					
ANR	3849592	Identifier	tmp		3849583	1					
ANR	3849593	ExpressionStatement	"ZVAL_DOUBLE ( & tmp , d )"	1362:1:36069:36089	3849583	1	True				
ANR	3849594	CallExpression	"ZVAL_DOUBLE ( & tmp , d )"		3849583	0					
ANR	3849595	Callee	ZVAL_DOUBLE		3849583	0					
ANR	3849596	Identifier	ZVAL_DOUBLE		3849583	0					
ANR	3849597	ArgumentList	& tmp		3849583	1					
ANR	3849598	Argument	& tmp		3849583	0					
ANR	3849599	UnaryOperationExpression	& tmp		3849583	0					
ANR	3849600	UnaryOperator	&		3849583	0					
ANR	3849601	Identifier	tmp		3849583	1					
ANR	3849602	Argument	d		3849583	1					
ANR	3849603	Identifier	d		3849583	0					
ANR	3849604	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1363:1:36092:36159	3849583	2	True				
ANR	3849605	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849583	0		=			
ANR	3849606	Identifier	ret		3849583	0					
ANR	3849607	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849583	1					
ANR	3849608	Callee	zend_symtable_str_update		3849583	0					
ANR	3849609	Identifier	zend_symtable_str_update		3849583	0					
ANR	3849610	ArgumentList	Z_ARRVAL_P ( arg )		3849583	1					
ANR	3849611	Argument	Z_ARRVAL_P ( arg )		3849583	0					
ANR	3849612	CallExpression	Z_ARRVAL_P ( arg )		3849583	0					
ANR	3849613	Callee	Z_ARRVAL_P		3849583	0					
ANR	3849614	Identifier	Z_ARRVAL_P		3849583	0					
ANR	3849615	ArgumentList	arg		3849583	1					
ANR	3849616	Argument	arg		3849583	0					
ANR	3849617	Identifier	arg		3849583	0					
ANR	3849618	Argument	key		3849583	1					
ANR	3849619	Identifier	key		3849583	0					
ANR	3849620	Argument	key_len		3849583	2					
ANR	3849621	Identifier	key_len		3849583	0					
ANR	3849622	Argument	& tmp		3849583	3					
ANR	3849623	UnaryOperationExpression	& tmp		3849583	0					
ANR	3849624	UnaryOperator	&		3849583	0					
ANR	3849625	Identifier	tmp		3849583	1					
ANR	3849626	ReturnStatement	return ret ? SUCCESS : FAILURE ;	1364:1:36162:36192	3849583	3	True				
ANR	3849627	ConditionalExpression	ret ? SUCCESS : FAILURE		3849583	0					
ANR	3849628	Condition	ret		3849583	0					
ANR	3849629	Identifier	ret		3849583	0					
ANR	3849630	Identifier	SUCCESS		3849583	1					
ANR	3849631	Identifier	FAILURE		3849583	2					
ANR	3849632	ReturnType	ZEND_API int		3849583	1					
ANR	3849633	Identifier	add_assoc_double_ex		3849583	2					
ANR	3849634	ParameterList	"zval * arg , const char * key , size_t key_len , double d"		3849583	3					
ANR	3849635	Parameter	zval * arg	1358:33:35984:35992	3849583	0	True				
ANR	3849636	ParameterType	zval *		3849583	0					
ANR	3849637	Identifier	arg		3849583	1					
ANR	3849638	Parameter	const char * key	1358:44:35995:36009	3849583	1	True				
ANR	3849639	ParameterType	const char *		3849583	0					
ANR	3849640	Identifier	key		3849583	1					
ANR	3849641	Parameter	size_t key_len	1358:61:36012:36025	3849583	2	True				
ANR	3849642	ParameterType	size_t		3849583	0					
ANR	3849643	Identifier	key_len		3849583	1					
ANR	3849644	Parameter	double d	1358:77:36028:36035	3849583	3	True				
ANR	3849645	ParameterType	double		3849583	0					
ANR	3849646	Identifier	d		3849583	1					
ANR	3849647	CFGEntryNode	ENTRY		3849583		True				
ANR	3849648	CFGExitNode	EXIT		3849583		True				
ANR	3849649	Symbol	ret		3849583						
ANR	3849650	Symbol	SUCCESS		3849583						
ANR	3849651	Symbol	d		3849583						
ANR	3849652	Symbol	tmp		3849583						
ANR	3849653	Symbol	arg		3849583						
ANR	3849654	Symbol	& tmp		3849583						
ANR	3849655	Symbol	zend_symtable_str_update		3849583						
ANR	3849656	Symbol	Z_ARRVAL_P		3849583						
ANR	3849657	Symbol	FAILURE		3849583						
ANR	3849658	Symbol	key		3849583						
ANR	3849659	Symbol	key_len		3849583						
ANR	3849660	Function	add_assoc_str_ex	1368:0:36207:36454							
ANR	3849661	FunctionDef	"add_assoc_str_ex (zval * arg , const char * key , size_t key_len , zend_string * str)"		3849660	0					
ANR	3849662	CompoundStatement		1369:0:36309:36454	3849660	0					
ANR	3849663	IdentifierDeclStatement	"zval * ret , tmp ;"	1370:1:36312:36326	3849660	0	True				
ANR	3849664	IdentifierDecl	* ret		3849660	0					
ANR	3849665	IdentifierDeclType	zval *		3849660	0					
ANR	3849666	Identifier	ret		3849660	1					
ANR	3849667	IdentifierDecl	tmp		3849660	1					
ANR	3849668	IdentifierDeclType	zval		3849660	0					
ANR	3849669	Identifier	tmp		3849660	1					
ANR	3849670	ExpressionStatement	"ZVAL_STR ( & tmp , str )"	1372:1:36330:36349	3849660	1	True				
ANR	3849671	CallExpression	"ZVAL_STR ( & tmp , str )"		3849660	0					
ANR	3849672	Callee	ZVAL_STR		3849660	0					
ANR	3849673	Identifier	ZVAL_STR		3849660	0					
ANR	3849674	ArgumentList	& tmp		3849660	1					
ANR	3849675	Argument	& tmp		3849660	0					
ANR	3849676	UnaryOperationExpression	& tmp		3849660	0					
ANR	3849677	UnaryOperator	&		3849660	0					
ANR	3849678	Identifier	tmp		3849660	1					
ANR	3849679	Argument	str		3849660	1					
ANR	3849680	Identifier	str		3849660	0					
ANR	3849681	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1373:1:36352:36419	3849660	2	True				
ANR	3849682	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849660	0		=			
ANR	3849683	Identifier	ret		3849660	0					
ANR	3849684	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849660	1					
ANR	3849685	Callee	zend_symtable_str_update		3849660	0					
ANR	3849686	Identifier	zend_symtable_str_update		3849660	0					
ANR	3849687	ArgumentList	Z_ARRVAL_P ( arg )		3849660	1					
ANR	3849688	Argument	Z_ARRVAL_P ( arg )		3849660	0					
ANR	3849689	CallExpression	Z_ARRVAL_P ( arg )		3849660	0					
ANR	3849690	Callee	Z_ARRVAL_P		3849660	0					
ANR	3849691	Identifier	Z_ARRVAL_P		3849660	0					
ANR	3849692	ArgumentList	arg		3849660	1					
ANR	3849693	Argument	arg		3849660	0					
ANR	3849694	Identifier	arg		3849660	0					
ANR	3849695	Argument	key		3849660	1					
ANR	3849696	Identifier	key		3849660	0					
ANR	3849697	Argument	key_len		3849660	2					
ANR	3849698	Identifier	key_len		3849660	0					
ANR	3849699	Argument	& tmp		3849660	3					
ANR	3849700	UnaryOperationExpression	& tmp		3849660	0					
ANR	3849701	UnaryOperator	&		3849660	0					
ANR	3849702	Identifier	tmp		3849660	1					
ANR	3849703	ReturnStatement	return ret ? SUCCESS : FAILURE ;	1374:1:36422:36452	3849660	3	True				
ANR	3849704	ConditionalExpression	ret ? SUCCESS : FAILURE		3849660	0					
ANR	3849705	Condition	ret		3849660	0					
ANR	3849706	Identifier	ret		3849660	0					
ANR	3849707	Identifier	SUCCESS		3849660	1					
ANR	3849708	Identifier	FAILURE		3849660	2					
ANR	3849709	ReturnType	ZEND_API int		3849660	1					
ANR	3849710	Identifier	add_assoc_str_ex		3849660	2					
ANR	3849711	ParameterList	"zval * arg , const char * key , size_t key_len , zend_string * str"		3849660	3					
ANR	3849712	Parameter	zval * arg	1368:30:36237:36245	3849660	0	True				
ANR	3849713	ParameterType	zval *		3849660	0					
ANR	3849714	Identifier	arg		3849660	1					
ANR	3849715	Parameter	const char * key	1368:41:36248:36262	3849660	1	True				
ANR	3849716	ParameterType	const char *		3849660	0					
ANR	3849717	Identifier	key		3849660	1					
ANR	3849718	Parameter	size_t key_len	1368:58:36265:36278	3849660	2	True				
ANR	3849719	ParameterType	size_t		3849660	0					
ANR	3849720	Identifier	key_len		3849660	1					
ANR	3849721	Parameter	zend_string * str	1368:74:36281:36296	3849660	3	True				
ANR	3849722	ParameterType	zend_string *		3849660	0					
ANR	3849723	Identifier	str		3849660	1					
ANR	3849724	CFGEntryNode	ENTRY		3849660		True				
ANR	3849725	CFGExitNode	EXIT		3849660		True				
ANR	3849726	Symbol	str		3849660						
ANR	3849727	Symbol	ret		3849660						
ANR	3849728	Symbol	SUCCESS		3849660						
ANR	3849729	Symbol	tmp		3849660						
ANR	3849730	Symbol	arg		3849660						
ANR	3849731	Symbol	& tmp		3849660						
ANR	3849732	Symbol	zend_symtable_str_update		3849660						
ANR	3849733	Symbol	Z_ARRVAL_P		3849660						
ANR	3849734	Symbol	FAILURE		3849660						
ANR	3849735	Symbol	key		3849660						
ANR	3849736	Symbol	key_len		3849660						
ANR	3849737	Function	add_assoc_string_ex	1378:0:36467:36713							
ANR	3849738	FunctionDef	"add_assoc_string_ex (zval * arg , const char * key , size_t key_len , char * str)"		3849737	0					
ANR	3849739	CompoundStatement		1379:0:36565:36713	3849737	0					
ANR	3849740	IdentifierDeclStatement	"zval * ret , tmp ;"	1380:1:36568:36582	3849737	0	True				
ANR	3849741	IdentifierDecl	* ret		3849737	0					
ANR	3849742	IdentifierDeclType	zval *		3849737	0					
ANR	3849743	Identifier	ret		3849737	1					
ANR	3849744	IdentifierDecl	tmp		3849737	1					
ANR	3849745	IdentifierDeclType	zval		3849737	0					
ANR	3849746	Identifier	tmp		3849737	1					
ANR	3849747	ExpressionStatement	"ZVAL_STRING ( & tmp , str )"	1382:1:36586:36608	3849737	1	True				
ANR	3849748	CallExpression	"ZVAL_STRING ( & tmp , str )"		3849737	0					
ANR	3849749	Callee	ZVAL_STRING		3849737	0					
ANR	3849750	Identifier	ZVAL_STRING		3849737	0					
ANR	3849751	ArgumentList	& tmp		3849737	1					
ANR	3849752	Argument	& tmp		3849737	0					
ANR	3849753	UnaryOperationExpression	& tmp		3849737	0					
ANR	3849754	UnaryOperator	&		3849737	0					
ANR	3849755	Identifier	tmp		3849737	1					
ANR	3849756	Argument	str		3849737	1					
ANR	3849757	Identifier	str		3849737	0					
ANR	3849758	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1383:1:36611:36678	3849737	2	True				
ANR	3849759	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849737	0		=			
ANR	3849760	Identifier	ret		3849737	0					
ANR	3849761	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849737	1					
ANR	3849762	Callee	zend_symtable_str_update		3849737	0					
ANR	3849763	Identifier	zend_symtable_str_update		3849737	0					
ANR	3849764	ArgumentList	Z_ARRVAL_P ( arg )		3849737	1					
ANR	3849765	Argument	Z_ARRVAL_P ( arg )		3849737	0					
ANR	3849766	CallExpression	Z_ARRVAL_P ( arg )		3849737	0					
ANR	3849767	Callee	Z_ARRVAL_P		3849737	0					
ANR	3849768	Identifier	Z_ARRVAL_P		3849737	0					
ANR	3849769	ArgumentList	arg		3849737	1					
ANR	3849770	Argument	arg		3849737	0					
ANR	3849771	Identifier	arg		3849737	0					
ANR	3849772	Argument	key		3849737	1					
ANR	3849773	Identifier	key		3849737	0					
ANR	3849774	Argument	key_len		3849737	2					
ANR	3849775	Identifier	key_len		3849737	0					
ANR	3849776	Argument	& tmp		3849737	3					
ANR	3849777	UnaryOperationExpression	& tmp		3849737	0					
ANR	3849778	UnaryOperator	&		3849737	0					
ANR	3849779	Identifier	tmp		3849737	1					
ANR	3849780	ReturnStatement	return ret ? SUCCESS : FAILURE ;	1384:1:36681:36711	3849737	3	True				
ANR	3849781	ConditionalExpression	ret ? SUCCESS : FAILURE		3849737	0					
ANR	3849782	Condition	ret		3849737	0					
ANR	3849783	Identifier	ret		3849737	0					
ANR	3849784	Identifier	SUCCESS		3849737	1					
ANR	3849785	Identifier	FAILURE		3849737	2					
ANR	3849786	ReturnType	ZEND_API int		3849737	1					
ANR	3849787	Identifier	add_assoc_string_ex		3849737	2					
ANR	3849788	ParameterList	"zval * arg , const char * key , size_t key_len , char * str"		3849737	3					
ANR	3849789	Parameter	zval * arg	1378:33:36500:36508	3849737	0	True				
ANR	3849790	ParameterType	zval *		3849737	0					
ANR	3849791	Identifier	arg		3849737	1					
ANR	3849792	Parameter	const char * key	1378:44:36511:36525	3849737	1	True				
ANR	3849793	ParameterType	const char *		3849737	0					
ANR	3849794	Identifier	key		3849737	1					
ANR	3849795	Parameter	size_t key_len	1378:61:36528:36541	3849737	2	True				
ANR	3849796	ParameterType	size_t		3849737	0					
ANR	3849797	Identifier	key_len		3849737	1					
ANR	3849798	Parameter	char * str	1378:77:36544:36552	3849737	3	True				
ANR	3849799	ParameterType	char *		3849737	0					
ANR	3849800	Identifier	str		3849737	1					
ANR	3849801	CFGEntryNode	ENTRY		3849737		True				
ANR	3849802	CFGExitNode	EXIT		3849737		True				
ANR	3849803	Symbol	str		3849737						
ANR	3849804	Symbol	ret		3849737						
ANR	3849805	Symbol	SUCCESS		3849737						
ANR	3849806	Symbol	tmp		3849737						
ANR	3849807	Symbol	arg		3849737						
ANR	3849808	Symbol	& tmp		3849737						
ANR	3849809	Symbol	zend_symtable_str_update		3849737						
ANR	3849810	Symbol	Z_ARRVAL_P		3849737						
ANR	3849811	Symbol	FAILURE		3849737						
ANR	3849812	Symbol	key		3849737						
ANR	3849813	Symbol	key_len		3849737						
ANR	3849814	Function	add_assoc_stringl_ex	1388:0:36726:36997							
ANR	3849815	FunctionDef	"add_assoc_stringl_ex (zval * arg , const char * key , size_t key_len , char * str , size_t length)"		3849814	0					
ANR	3849816	CompoundStatement		1389:0:36840:36997	3849814	0					
ANR	3849817	IdentifierDeclStatement	"zval * ret , tmp ;"	1390:1:36843:36857	3849814	0	True				
ANR	3849818	IdentifierDecl	* ret		3849814	0					
ANR	3849819	IdentifierDeclType	zval *		3849814	0					
ANR	3849820	Identifier	ret		3849814	1					
ANR	3849821	IdentifierDecl	tmp		3849814	1					
ANR	3849822	IdentifierDeclType	zval		3849814	0					
ANR	3849823	Identifier	tmp		3849814	1					
ANR	3849824	ExpressionStatement	"ZVAL_STRINGL ( & tmp , str , length )"	1392:1:36861:36892	3849814	1	True				
ANR	3849825	CallExpression	"ZVAL_STRINGL ( & tmp , str , length )"		3849814	0					
ANR	3849826	Callee	ZVAL_STRINGL		3849814	0					
ANR	3849827	Identifier	ZVAL_STRINGL		3849814	0					
ANR	3849828	ArgumentList	& tmp		3849814	1					
ANR	3849829	Argument	& tmp		3849814	0					
ANR	3849830	UnaryOperationExpression	& tmp		3849814	0					
ANR	3849831	UnaryOperator	&		3849814	0					
ANR	3849832	Identifier	tmp		3849814	1					
ANR	3849833	Argument	str		3849814	1					
ANR	3849834	Identifier	str		3849814	0					
ANR	3849835	Argument	length		3849814	2					
ANR	3849836	Identifier	length		3849814	0					
ANR	3849837	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1393:1:36895:36962	3849814	2	True				
ANR	3849838	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849814	0		=			
ANR	3849839	Identifier	ret		3849814	0					
ANR	3849840	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3849814	1					
ANR	3849841	Callee	zend_symtable_str_update		3849814	0					
ANR	3849842	Identifier	zend_symtable_str_update		3849814	0					
ANR	3849843	ArgumentList	Z_ARRVAL_P ( arg )		3849814	1					
ANR	3849844	Argument	Z_ARRVAL_P ( arg )		3849814	0					
ANR	3849845	CallExpression	Z_ARRVAL_P ( arg )		3849814	0					
ANR	3849846	Callee	Z_ARRVAL_P		3849814	0					
ANR	3849847	Identifier	Z_ARRVAL_P		3849814	0					
ANR	3849848	ArgumentList	arg		3849814	1					
ANR	3849849	Argument	arg		3849814	0					
ANR	3849850	Identifier	arg		3849814	0					
ANR	3849851	Argument	key		3849814	1					
ANR	3849852	Identifier	key		3849814	0					
ANR	3849853	Argument	key_len		3849814	2					
ANR	3849854	Identifier	key_len		3849814	0					
ANR	3849855	Argument	& tmp		3849814	3					
ANR	3849856	UnaryOperationExpression	& tmp		3849814	0					
ANR	3849857	UnaryOperator	&		3849814	0					
ANR	3849858	Identifier	tmp		3849814	1					
ANR	3849859	ReturnStatement	return ret ? SUCCESS : FAILURE ;	1394:1:36965:36995	3849814	3	True				
ANR	3849860	ConditionalExpression	ret ? SUCCESS : FAILURE		3849814	0					
ANR	3849861	Condition	ret		3849814	0					
ANR	3849862	Identifier	ret		3849814	0					
ANR	3849863	Identifier	SUCCESS		3849814	1					
ANR	3849864	Identifier	FAILURE		3849814	2					
ANR	3849865	ReturnType	ZEND_API int		3849814	1					
ANR	3849866	Identifier	add_assoc_stringl_ex		3849814	2					
ANR	3849867	ParameterList	"zval * arg , const char * key , size_t key_len , char * str , size_t length"		3849814	3					
ANR	3849868	Parameter	zval * arg	1388:34:36760:36768	3849814	0	True				
ANR	3849869	ParameterType	zval *		3849814	0					
ANR	3849870	Identifier	arg		3849814	1					
ANR	3849871	Parameter	const char * key	1388:45:36771:36785	3849814	1	True				
ANR	3849872	ParameterType	const char *		3849814	0					
ANR	3849873	Identifier	key		3849814	1					
ANR	3849874	Parameter	size_t key_len	1388:62:36788:36801	3849814	2	True				
ANR	3849875	ParameterType	size_t		3849814	0					
ANR	3849876	Identifier	key_len		3849814	1					
ANR	3849877	Parameter	char * str	1388:78:36804:36812	3849814	3	True				
ANR	3849878	ParameterType	char *		3849814	0					
ANR	3849879	Identifier	str		3849814	1					
ANR	3849880	Parameter	size_t length	1388:89:36815:36827	3849814	4	True				
ANR	3849881	ParameterType	size_t		3849814	0					
ANR	3849882	Identifier	length		3849814	1					
ANR	3849883	CFGEntryNode	ENTRY		3849814		True				
ANR	3849884	CFGExitNode	EXIT		3849814		True				
ANR	3849885	Symbol	str		3849814						
ANR	3849886	Symbol	ret		3849814						
ANR	3849887	Symbol	SUCCESS		3849814						
ANR	3849888	Symbol	tmp		3849814						
ANR	3849889	Symbol	arg		3849814						
ANR	3849890	Symbol	length		3849814						
ANR	3849891	Symbol	& tmp		3849814						
ANR	3849892	Symbol	zend_symtable_str_update		3849814						
ANR	3849893	Symbol	Z_ARRVAL_P		3849814						
ANR	3849894	Symbol	FAILURE		3849814						
ANR	3849895	Symbol	key		3849814						
ANR	3849896	Symbol	key_len		3849814						
ANR	3849897	Function	add_assoc_zval_ex	1398:0:37010:37227							
ANR	3849898	FunctionDef	"add_assoc_zval_ex (zval * arg , const char * key , size_t key_len , zval * value)"		3849897	0					
ANR	3849899	CompoundStatement		1399:0:37108:37227	3849897	0					
ANR	3849900	IdentifierDeclStatement	zval * ret ;	1400:1:37111:37120	3849897	0	True				
ANR	3849901	IdentifierDecl	* ret		3849897	0					
ANR	3849902	IdentifierDeclType	zval *		3849897	0					
ANR	3849903	Identifier	ret		3849897	1					
ANR	3849904	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , value )"	1402:1:37124:37192	3849897	1	True				
ANR	3849905	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , value )"		3849897	0		=			
ANR	3849906	Identifier	ret		3849897	0					
ANR	3849907	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , value )"		3849897	1					
ANR	3849908	Callee	zend_symtable_str_update		3849897	0					
ANR	3849909	Identifier	zend_symtable_str_update		3849897	0					
ANR	3849910	ArgumentList	Z_ARRVAL_P ( arg )		3849897	1					
ANR	3849911	Argument	Z_ARRVAL_P ( arg )		3849897	0					
ANR	3849912	CallExpression	Z_ARRVAL_P ( arg )		3849897	0					
ANR	3849913	Callee	Z_ARRVAL_P		3849897	0					
ANR	3849914	Identifier	Z_ARRVAL_P		3849897	0					
ANR	3849915	ArgumentList	arg		3849897	1					
ANR	3849916	Argument	arg		3849897	0					
ANR	3849917	Identifier	arg		3849897	0					
ANR	3849918	Argument	key		3849897	1					
ANR	3849919	Identifier	key		3849897	0					
ANR	3849920	Argument	key_len		3849897	2					
ANR	3849921	Identifier	key_len		3849897	0					
ANR	3849922	Argument	value		3849897	3					
ANR	3849923	Identifier	value		3849897	0					
ANR	3849924	ReturnStatement	return ret ? SUCCESS : FAILURE ;	1403:1:37195:37225	3849897	2	True				
ANR	3849925	ConditionalExpression	ret ? SUCCESS : FAILURE		3849897	0					
ANR	3849926	Condition	ret		3849897	0					
ANR	3849927	Identifier	ret		3849897	0					
ANR	3849928	Identifier	SUCCESS		3849897	1					
ANR	3849929	Identifier	FAILURE		3849897	2					
ANR	3849930	ReturnType	ZEND_API int		3849897	1					
ANR	3849931	Identifier	add_assoc_zval_ex		3849897	2					
ANR	3849932	ParameterList	"zval * arg , const char * key , size_t key_len , zval * value"		3849897	3					
ANR	3849933	Parameter	zval * arg	1398:31:37041:37049	3849897	0	True				
ANR	3849934	ParameterType	zval *		3849897	0					
ANR	3849935	Identifier	arg		3849897	1					
ANR	3849936	Parameter	const char * key	1398:42:37052:37066	3849897	1	True				
ANR	3849937	ParameterType	const char *		3849897	0					
ANR	3849938	Identifier	key		3849897	1					
ANR	3849939	Parameter	size_t key_len	1398:59:37069:37082	3849897	2	True				
ANR	3849940	ParameterType	size_t		3849897	0					
ANR	3849941	Identifier	key_len		3849897	1					
ANR	3849942	Parameter	zval * value	1398:75:37085:37095	3849897	3	True				
ANR	3849943	ParameterType	zval *		3849897	0					
ANR	3849944	Identifier	value		3849897	1					
ANR	3849945	CFGEntryNode	ENTRY		3849897		True				
ANR	3849946	CFGExitNode	EXIT		3849897		True				
ANR	3849947	Symbol	ret		3849897						
ANR	3849948	Symbol	SUCCESS		3849897						
ANR	3849949	Symbol	arg		3849897						
ANR	3849950	Symbol	zend_symtable_str_update		3849897						
ANR	3849951	Symbol	Z_ARRVAL_P		3849897						
ANR	3849952	Symbol	value		3849897						
ANR	3849953	Symbol	FAILURE		3849897						
ANR	3849954	Symbol	key		3849897						
ANR	3849955	Symbol	key_len		3849897						
ANR	3849956	Function	add_index_long	1407:0:37240:37437							
ANR	3849957	FunctionDef	"add_index_long (zval * arg , zend_ulong index , zend_long n)"		3849956	0					
ANR	3849958	CompoundStatement		1408:0:37320:37437	3849956	0					
ANR	3849959	IdentifierDeclStatement	zval tmp ;	1409:1:37323:37331	3849956	0	True				
ANR	3849960	IdentifierDecl	tmp		3849956	0					
ANR	3849961	IdentifierDeclType	zval		3849956	0					
ANR	3849962	Identifier	tmp		3849956	1					
ANR	3849963	ExpressionStatement	"ZVAL_LONG ( & tmp , n )"	1411:1:37335:37353	3849956	1	True				
ANR	3849964	CallExpression	"ZVAL_LONG ( & tmp , n )"		3849956	0					
ANR	3849965	Callee	ZVAL_LONG		3849956	0					
ANR	3849966	Identifier	ZVAL_LONG		3849956	0					
ANR	3849967	ArgumentList	& tmp		3849956	1					
ANR	3849968	Argument	& tmp		3849956	0					
ANR	3849969	UnaryOperationExpression	& tmp		3849956	0					
ANR	3849970	UnaryOperator	&		3849956	0					
ANR	3849971	Identifier	tmp		3849956	1					
ANR	3849972	Argument	n		3849956	1					
ANR	3849973	Identifier	n		3849956	0					
ANR	3849974	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE ;"	1412:1:37356:37435	3849956	2	True				
ANR	3849975	ConditionalExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE"		3849956	0					
ANR	3849976	Condition	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3849956	0					
ANR	3849977	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3849956	0					
ANR	3849978	Callee	zend_hash_index_update		3849956	0					
ANR	3849979	Identifier	zend_hash_index_update		3849956	0					
ANR	3849980	ArgumentList	Z_ARRVAL_P ( arg )		3849956	1					
ANR	3849981	Argument	Z_ARRVAL_P ( arg )		3849956	0					
ANR	3849982	CallExpression	Z_ARRVAL_P ( arg )		3849956	0					
ANR	3849983	Callee	Z_ARRVAL_P		3849956	0					
ANR	3849984	Identifier	Z_ARRVAL_P		3849956	0					
ANR	3849985	ArgumentList	arg		3849956	1					
ANR	3849986	Argument	arg		3849956	0					
ANR	3849987	Identifier	arg		3849956	0					
ANR	3849988	Argument	index		3849956	1					
ANR	3849989	Identifier	index		3849956	0					
ANR	3849990	Argument	& tmp		3849956	2					
ANR	3849991	UnaryOperationExpression	& tmp		3849956	0					
ANR	3849992	UnaryOperator	&		3849956	0					
ANR	3849993	Identifier	tmp		3849956	1					
ANR	3849994	Identifier	SUCCESS		3849956	1					
ANR	3849995	Identifier	FAILURE		3849956	2					
ANR	3849996	ReturnType	ZEND_API int		3849956	1					
ANR	3849997	Identifier	add_index_long		3849956	2					
ANR	3849998	ParameterList	"zval * arg , zend_ulong index , zend_long n"		3849956	3					
ANR	3849999	Parameter	zval * arg	1407:28:37268:37276	3849956	0	True				
ANR	3850000	ParameterType	zval *		3849956	0					
ANR	3850001	Identifier	arg		3849956	1					
ANR	3850002	Parameter	zend_ulong index	1407:39:37279:37294	3849956	1	True				
ANR	3850003	ParameterType	zend_ulong		3849956	0					
ANR	3850004	Identifier	index		3849956	1					
ANR	3850005	Parameter	zend_long n	1407:57:37297:37307	3849956	2	True				
ANR	3850006	ParameterType	zend_long		3849956	0					
ANR	3850007	Identifier	n		3849956	1					
ANR	3850008	CFGEntryNode	ENTRY		3849956		True				
ANR	3850009	CFGExitNode	EXIT		3849956		True				
ANR	3850010	Symbol	SUCCESS		3849956						
ANR	3850011	Symbol	tmp		3849956						
ANR	3850012	Symbol	zend_hash_index_update		3849956						
ANR	3850013	Symbol	arg		3849956						
ANR	3850014	Symbol	index		3849956						
ANR	3850015	Symbol	& tmp		3849956						
ANR	3850016	Symbol	Z_ARRVAL_P		3849956						
ANR	3850017	Symbol	FAILURE		3849956						
ANR	3850018	Symbol	n		3849956						
ANR	3850019	Function	add_index_null	1416:0:37450:37631							
ANR	3850020	FunctionDef	"add_index_null (zval * arg , zend_ulong index)"		3850019	0					
ANR	3850021	CompoundStatement		1417:0:37517:37631	3850019	0					
ANR	3850022	IdentifierDeclStatement	zval tmp ;	1418:1:37520:37528	3850019	0	True				
ANR	3850023	IdentifierDecl	tmp		3850019	0					
ANR	3850024	IdentifierDeclType	zval		3850019	0					
ANR	3850025	Identifier	tmp		3850019	1					
ANR	3850026	ExpressionStatement	ZVAL_NULL ( & tmp )	1420:1:37532:37547	3850019	1	True				
ANR	3850027	CallExpression	ZVAL_NULL ( & tmp )		3850019	0					
ANR	3850028	Callee	ZVAL_NULL		3850019	0					
ANR	3850029	Identifier	ZVAL_NULL		3850019	0					
ANR	3850030	ArgumentList	& tmp		3850019	1					
ANR	3850031	Argument	& tmp		3850019	0					
ANR	3850032	UnaryOperationExpression	& tmp		3850019	0					
ANR	3850033	UnaryOperator	&		3850019	0					
ANR	3850034	Identifier	tmp		3850019	1					
ANR	3850035	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE ;"	1421:1:37550:37629	3850019	2	True				
ANR	3850036	ConditionalExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE"		3850019	0					
ANR	3850037	Condition	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850019	0					
ANR	3850038	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850019	0					
ANR	3850039	Callee	zend_hash_index_update		3850019	0					
ANR	3850040	Identifier	zend_hash_index_update		3850019	0					
ANR	3850041	ArgumentList	Z_ARRVAL_P ( arg )		3850019	1					
ANR	3850042	Argument	Z_ARRVAL_P ( arg )		3850019	0					
ANR	3850043	CallExpression	Z_ARRVAL_P ( arg )		3850019	0					
ANR	3850044	Callee	Z_ARRVAL_P		3850019	0					
ANR	3850045	Identifier	Z_ARRVAL_P		3850019	0					
ANR	3850046	ArgumentList	arg		3850019	1					
ANR	3850047	Argument	arg		3850019	0					
ANR	3850048	Identifier	arg		3850019	0					
ANR	3850049	Argument	index		3850019	1					
ANR	3850050	Identifier	index		3850019	0					
ANR	3850051	Argument	& tmp		3850019	2					
ANR	3850052	UnaryOperationExpression	& tmp		3850019	0					
ANR	3850053	UnaryOperator	&		3850019	0					
ANR	3850054	Identifier	tmp		3850019	1					
ANR	3850055	Identifier	SUCCESS		3850019	1					
ANR	3850056	Identifier	FAILURE		3850019	2					
ANR	3850057	ReturnType	ZEND_API int		3850019	1					
ANR	3850058	Identifier	add_index_null		3850019	2					
ANR	3850059	ParameterList	"zval * arg , zend_ulong index"		3850019	3					
ANR	3850060	Parameter	zval * arg	1416:28:37478:37486	3850019	0	True				
ANR	3850061	ParameterType	zval *		3850019	0					
ANR	3850062	Identifier	arg		3850019	1					
ANR	3850063	Parameter	zend_ulong index	1416:39:37489:37504	3850019	1	True				
ANR	3850064	ParameterType	zend_ulong		3850019	0					
ANR	3850065	Identifier	index		3850019	1					
ANR	3850066	CFGEntryNode	ENTRY		3850019		True				
ANR	3850067	CFGExitNode	EXIT		3850019		True				
ANR	3850068	Symbol	SUCCESS		3850019						
ANR	3850069	Symbol	tmp		3850019						
ANR	3850070	Symbol	zend_hash_index_update		3850019						
ANR	3850071	Symbol	arg		3850019						
ANR	3850072	Symbol	index		3850019						
ANR	3850073	Symbol	& tmp		3850019						
ANR	3850074	Symbol	Z_ARRVAL_P		3850019						
ANR	3850075	Symbol	FAILURE		3850019						
ANR	3850076	Function	add_index_bool	1425:0:37644:37835							
ANR	3850077	FunctionDef	"add_index_bool (zval * arg , zend_ulong index , int b)"		3850076	0					
ANR	3850078	CompoundStatement		1426:0:37718:37835	3850076	0					
ANR	3850079	IdentifierDeclStatement	zval tmp ;	1427:1:37721:37729	3850076	0	True				
ANR	3850080	IdentifierDecl	tmp		3850076	0					
ANR	3850081	IdentifierDeclType	zval		3850076	0					
ANR	3850082	Identifier	tmp		3850076	1					
ANR	3850083	ExpressionStatement	"ZVAL_BOOL ( & tmp , b )"	1429:1:37733:37751	3850076	1	True				
ANR	3850084	CallExpression	"ZVAL_BOOL ( & tmp , b )"		3850076	0					
ANR	3850085	Callee	ZVAL_BOOL		3850076	0					
ANR	3850086	Identifier	ZVAL_BOOL		3850076	0					
ANR	3850087	ArgumentList	& tmp		3850076	1					
ANR	3850088	Argument	& tmp		3850076	0					
ANR	3850089	UnaryOperationExpression	& tmp		3850076	0					
ANR	3850090	UnaryOperator	&		3850076	0					
ANR	3850091	Identifier	tmp		3850076	1					
ANR	3850092	Argument	b		3850076	1					
ANR	3850093	Identifier	b		3850076	0					
ANR	3850094	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE ;"	1430:1:37754:37833	3850076	2	True				
ANR	3850095	ConditionalExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE"		3850076	0					
ANR	3850096	Condition	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850076	0					
ANR	3850097	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850076	0					
ANR	3850098	Callee	zend_hash_index_update		3850076	0					
ANR	3850099	Identifier	zend_hash_index_update		3850076	0					
ANR	3850100	ArgumentList	Z_ARRVAL_P ( arg )		3850076	1					
ANR	3850101	Argument	Z_ARRVAL_P ( arg )		3850076	0					
ANR	3850102	CallExpression	Z_ARRVAL_P ( arg )		3850076	0					
ANR	3850103	Callee	Z_ARRVAL_P		3850076	0					
ANR	3850104	Identifier	Z_ARRVAL_P		3850076	0					
ANR	3850105	ArgumentList	arg		3850076	1					
ANR	3850106	Argument	arg		3850076	0					
ANR	3850107	Identifier	arg		3850076	0					
ANR	3850108	Argument	index		3850076	1					
ANR	3850109	Identifier	index		3850076	0					
ANR	3850110	Argument	& tmp		3850076	2					
ANR	3850111	UnaryOperationExpression	& tmp		3850076	0					
ANR	3850112	UnaryOperator	&		3850076	0					
ANR	3850113	Identifier	tmp		3850076	1					
ANR	3850114	Identifier	SUCCESS		3850076	1					
ANR	3850115	Identifier	FAILURE		3850076	2					
ANR	3850116	ReturnType	ZEND_API int		3850076	1					
ANR	3850117	Identifier	add_index_bool		3850076	2					
ANR	3850118	ParameterList	"zval * arg , zend_ulong index , int b"		3850076	3					
ANR	3850119	Parameter	zval * arg	1425:28:37672:37680	3850076	0	True				
ANR	3850120	ParameterType	zval *		3850076	0					
ANR	3850121	Identifier	arg		3850076	1					
ANR	3850122	Parameter	zend_ulong index	1425:39:37683:37698	3850076	1	True				
ANR	3850123	ParameterType	zend_ulong		3850076	0					
ANR	3850124	Identifier	index		3850076	1					
ANR	3850125	Parameter	int b	1425:57:37701:37705	3850076	2	True				
ANR	3850126	ParameterType	int		3850076	0					
ANR	3850127	Identifier	b		3850076	1					
ANR	3850128	CFGEntryNode	ENTRY		3850076		True				
ANR	3850129	CFGExitNode	EXIT		3850076		True				
ANR	3850130	Symbol	b		3850076						
ANR	3850131	Symbol	SUCCESS		3850076						
ANR	3850132	Symbol	tmp		3850076						
ANR	3850133	Symbol	zend_hash_index_update		3850076						
ANR	3850134	Symbol	arg		3850076						
ANR	3850135	Symbol	index		3850076						
ANR	3850136	Symbol	& tmp		3850076						
ANR	3850137	Symbol	Z_ARRVAL_P		3850076						
ANR	3850138	Symbol	FAILURE		3850076						
ANR	3850139	Function	add_index_resource	1434:0:37848:38053							
ANR	3850140	FunctionDef	"add_index_resource (zval * arg , zend_ulong index , zend_resource * r)"		3850139	0					
ANR	3850141	CompoundStatement		1435:0:37937:38053	3850139	0					
ANR	3850142	IdentifierDeclStatement	zval tmp ;	1436:1:37940:37948	3850139	0	True				
ANR	3850143	IdentifierDecl	tmp		3850139	0					
ANR	3850144	IdentifierDeclType	zval		3850139	0					
ANR	3850145	Identifier	tmp		3850139	1					
ANR	3850146	ExpressionStatement	"ZVAL_RES ( & tmp , r )"	1438:1:37952:37969	3850139	1	True				
ANR	3850147	CallExpression	"ZVAL_RES ( & tmp , r )"		3850139	0					
ANR	3850148	Callee	ZVAL_RES		3850139	0					
ANR	3850149	Identifier	ZVAL_RES		3850139	0					
ANR	3850150	ArgumentList	& tmp		3850139	1					
ANR	3850151	Argument	& tmp		3850139	0					
ANR	3850152	UnaryOperationExpression	& tmp		3850139	0					
ANR	3850153	UnaryOperator	&		3850139	0					
ANR	3850154	Identifier	tmp		3850139	1					
ANR	3850155	Argument	r		3850139	1					
ANR	3850156	Identifier	r		3850139	0					
ANR	3850157	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE ;"	1439:1:37972:38051	3850139	2	True				
ANR	3850158	ConditionalExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE"		3850139	0					
ANR	3850159	Condition	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850139	0					
ANR	3850160	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850139	0					
ANR	3850161	Callee	zend_hash_index_update		3850139	0					
ANR	3850162	Identifier	zend_hash_index_update		3850139	0					
ANR	3850163	ArgumentList	Z_ARRVAL_P ( arg )		3850139	1					
ANR	3850164	Argument	Z_ARRVAL_P ( arg )		3850139	0					
ANR	3850165	CallExpression	Z_ARRVAL_P ( arg )		3850139	0					
ANR	3850166	Callee	Z_ARRVAL_P		3850139	0					
ANR	3850167	Identifier	Z_ARRVAL_P		3850139	0					
ANR	3850168	ArgumentList	arg		3850139	1					
ANR	3850169	Argument	arg		3850139	0					
ANR	3850170	Identifier	arg		3850139	0					
ANR	3850171	Argument	index		3850139	1					
ANR	3850172	Identifier	index		3850139	0					
ANR	3850173	Argument	& tmp		3850139	2					
ANR	3850174	UnaryOperationExpression	& tmp		3850139	0					
ANR	3850175	UnaryOperator	&		3850139	0					
ANR	3850176	Identifier	tmp		3850139	1					
ANR	3850177	Identifier	SUCCESS		3850139	1					
ANR	3850178	Identifier	FAILURE		3850139	2					
ANR	3850179	ReturnType	ZEND_API int		3850139	1					
ANR	3850180	Identifier	add_index_resource		3850139	2					
ANR	3850181	ParameterList	"zval * arg , zend_ulong index , zend_resource * r"		3850139	3					
ANR	3850182	Parameter	zval * arg	1434:32:37880:37888	3850139	0	True				
ANR	3850183	ParameterType	zval *		3850139	0					
ANR	3850184	Identifier	arg		3850139	1					
ANR	3850185	Parameter	zend_ulong index	1434:43:37891:37906	3850139	1	True				
ANR	3850186	ParameterType	zend_ulong		3850139	0					
ANR	3850187	Identifier	index		3850139	1					
ANR	3850188	Parameter	zend_resource * r	1434:61:37909:37924	3850139	2	True				
ANR	3850189	ParameterType	zend_resource *		3850139	0					
ANR	3850190	Identifier	r		3850139	1					
ANR	3850191	CFGEntryNode	ENTRY		3850139		True				
ANR	3850192	CFGExitNode	EXIT		3850139		True				
ANR	3850193	Symbol	r		3850139						
ANR	3850194	Symbol	SUCCESS		3850139						
ANR	3850195	Symbol	tmp		3850139						
ANR	3850196	Symbol	zend_hash_index_update		3850139						
ANR	3850197	Symbol	arg		3850139						
ANR	3850198	Symbol	index		3850139						
ANR	3850199	Symbol	& tmp		3850139						
ANR	3850200	Symbol	Z_ARRVAL_P		3850139						
ANR	3850201	Symbol	FAILURE		3850139						
ANR	3850202	Function	add_index_double	1443:0:38066:38264							
ANR	3850203	FunctionDef	"add_index_double (zval * arg , zend_ulong index , double d)"		3850202	0					
ANR	3850204	CompoundStatement		1444:0:38145:38264	3850202	0					
ANR	3850205	IdentifierDeclStatement	zval tmp ;	1445:1:38148:38156	3850202	0	True				
ANR	3850206	IdentifierDecl	tmp		3850202	0					
ANR	3850207	IdentifierDeclType	zval		3850202	0					
ANR	3850208	Identifier	tmp		3850202	1					
ANR	3850209	ExpressionStatement	"ZVAL_DOUBLE ( & tmp , d )"	1447:1:38160:38180	3850202	1	True				
ANR	3850210	CallExpression	"ZVAL_DOUBLE ( & tmp , d )"		3850202	0					
ANR	3850211	Callee	ZVAL_DOUBLE		3850202	0					
ANR	3850212	Identifier	ZVAL_DOUBLE		3850202	0					
ANR	3850213	ArgumentList	& tmp		3850202	1					
ANR	3850214	Argument	& tmp		3850202	0					
ANR	3850215	UnaryOperationExpression	& tmp		3850202	0					
ANR	3850216	UnaryOperator	&		3850202	0					
ANR	3850217	Identifier	tmp		3850202	1					
ANR	3850218	Argument	d		3850202	1					
ANR	3850219	Identifier	d		3850202	0					
ANR	3850220	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE ;"	1448:1:38183:38262	3850202	2	True				
ANR	3850221	ConditionalExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE"		3850202	0					
ANR	3850222	Condition	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850202	0					
ANR	3850223	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850202	0					
ANR	3850224	Callee	zend_hash_index_update		3850202	0					
ANR	3850225	Identifier	zend_hash_index_update		3850202	0					
ANR	3850226	ArgumentList	Z_ARRVAL_P ( arg )		3850202	1					
ANR	3850227	Argument	Z_ARRVAL_P ( arg )		3850202	0					
ANR	3850228	CallExpression	Z_ARRVAL_P ( arg )		3850202	0					
ANR	3850229	Callee	Z_ARRVAL_P		3850202	0					
ANR	3850230	Identifier	Z_ARRVAL_P		3850202	0					
ANR	3850231	ArgumentList	arg		3850202	1					
ANR	3850232	Argument	arg		3850202	0					
ANR	3850233	Identifier	arg		3850202	0					
ANR	3850234	Argument	index		3850202	1					
ANR	3850235	Identifier	index		3850202	0					
ANR	3850236	Argument	& tmp		3850202	2					
ANR	3850237	UnaryOperationExpression	& tmp		3850202	0					
ANR	3850238	UnaryOperator	&		3850202	0					
ANR	3850239	Identifier	tmp		3850202	1					
ANR	3850240	Identifier	SUCCESS		3850202	1					
ANR	3850241	Identifier	FAILURE		3850202	2					
ANR	3850242	ReturnType	ZEND_API int		3850202	1					
ANR	3850243	Identifier	add_index_double		3850202	2					
ANR	3850244	ParameterList	"zval * arg , zend_ulong index , double d"		3850202	3					
ANR	3850245	Parameter	zval * arg	1443:30:38096:38104	3850202	0	True				
ANR	3850246	ParameterType	zval *		3850202	0					
ANR	3850247	Identifier	arg		3850202	1					
ANR	3850248	Parameter	zend_ulong index	1443:41:38107:38122	3850202	1	True				
ANR	3850249	ParameterType	zend_ulong		3850202	0					
ANR	3850250	Identifier	index		3850202	1					
ANR	3850251	Parameter	double d	1443:59:38125:38132	3850202	2	True				
ANR	3850252	ParameterType	double		3850202	0					
ANR	3850253	Identifier	d		3850202	1					
ANR	3850254	CFGEntryNode	ENTRY		3850202		True				
ANR	3850255	CFGExitNode	EXIT		3850202		True				
ANR	3850256	Symbol	SUCCESS		3850202						
ANR	3850257	Symbol	d		3850202						
ANR	3850258	Symbol	tmp		3850202						
ANR	3850259	Symbol	zend_hash_index_update		3850202						
ANR	3850260	Symbol	arg		3850202						
ANR	3850261	Symbol	index		3850202						
ANR	3850262	Symbol	& tmp		3850202						
ANR	3850263	Symbol	Z_ARRVAL_P		3850202						
ANR	3850264	Symbol	FAILURE		3850202						
ANR	3850265	Function	add_index_str	1452:0:38277:38479							
ANR	3850266	FunctionDef	"add_index_str (zval * arg , zend_ulong index , zend_string * str)"		3850265	0					
ANR	3850267	CompoundStatement		1453:0:38361:38479	3850265	0					
ANR	3850268	IdentifierDeclStatement	zval tmp ;	1454:1:38364:38372	3850265	0	True				
ANR	3850269	IdentifierDecl	tmp		3850265	0					
ANR	3850270	IdentifierDeclType	zval		3850265	0					
ANR	3850271	Identifier	tmp		3850265	1					
ANR	3850272	ExpressionStatement	"ZVAL_STR ( & tmp , str )"	1456:1:38376:38395	3850265	1	True				
ANR	3850273	CallExpression	"ZVAL_STR ( & tmp , str )"		3850265	0					
ANR	3850274	Callee	ZVAL_STR		3850265	0					
ANR	3850275	Identifier	ZVAL_STR		3850265	0					
ANR	3850276	ArgumentList	& tmp		3850265	1					
ANR	3850277	Argument	& tmp		3850265	0					
ANR	3850278	UnaryOperationExpression	& tmp		3850265	0					
ANR	3850279	UnaryOperator	&		3850265	0					
ANR	3850280	Identifier	tmp		3850265	1					
ANR	3850281	Argument	str		3850265	1					
ANR	3850282	Identifier	str		3850265	0					
ANR	3850283	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE ;"	1457:1:38398:38477	3850265	2	True				
ANR	3850284	ConditionalExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE"		3850265	0					
ANR	3850285	Condition	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850265	0					
ANR	3850286	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850265	0					
ANR	3850287	Callee	zend_hash_index_update		3850265	0					
ANR	3850288	Identifier	zend_hash_index_update		3850265	0					
ANR	3850289	ArgumentList	Z_ARRVAL_P ( arg )		3850265	1					
ANR	3850290	Argument	Z_ARRVAL_P ( arg )		3850265	0					
ANR	3850291	CallExpression	Z_ARRVAL_P ( arg )		3850265	0					
ANR	3850292	Callee	Z_ARRVAL_P		3850265	0					
ANR	3850293	Identifier	Z_ARRVAL_P		3850265	0					
ANR	3850294	ArgumentList	arg		3850265	1					
ANR	3850295	Argument	arg		3850265	0					
ANR	3850296	Identifier	arg		3850265	0					
ANR	3850297	Argument	index		3850265	1					
ANR	3850298	Identifier	index		3850265	0					
ANR	3850299	Argument	& tmp		3850265	2					
ANR	3850300	UnaryOperationExpression	& tmp		3850265	0					
ANR	3850301	UnaryOperator	&		3850265	0					
ANR	3850302	Identifier	tmp		3850265	1					
ANR	3850303	Identifier	SUCCESS		3850265	1					
ANR	3850304	Identifier	FAILURE		3850265	2					
ANR	3850305	ReturnType	ZEND_API int		3850265	1					
ANR	3850306	Identifier	add_index_str		3850265	2					
ANR	3850307	ParameterList	"zval * arg , zend_ulong index , zend_string * str"		3850265	3					
ANR	3850308	Parameter	zval * arg	1452:27:38304:38312	3850265	0	True				
ANR	3850309	ParameterType	zval *		3850265	0					
ANR	3850310	Identifier	arg		3850265	1					
ANR	3850311	Parameter	zend_ulong index	1452:38:38315:38330	3850265	1	True				
ANR	3850312	ParameterType	zend_ulong		3850265	0					
ANR	3850313	Identifier	index		3850265	1					
ANR	3850314	Parameter	zend_string * str	1452:56:38333:38348	3850265	2	True				
ANR	3850315	ParameterType	zend_string *		3850265	0					
ANR	3850316	Identifier	str		3850265	1					
ANR	3850317	CFGEntryNode	ENTRY		3850265		True				
ANR	3850318	CFGExitNode	EXIT		3850265		True				
ANR	3850319	Symbol	str		3850265						
ANR	3850320	Symbol	SUCCESS		3850265						
ANR	3850321	Symbol	tmp		3850265						
ANR	3850322	Symbol	zend_hash_index_update		3850265						
ANR	3850323	Symbol	arg		3850265						
ANR	3850324	Symbol	index		3850265						
ANR	3850325	Symbol	& tmp		3850265						
ANR	3850326	Symbol	Z_ARRVAL_P		3850265						
ANR	3850327	Symbol	FAILURE		3850265						
ANR	3850328	Function	add_index_string	1461:0:38492:38699							
ANR	3850329	FunctionDef	"add_index_string (zval * arg , zend_ulong index , const char * str)"		3850328	0					
ANR	3850330	CompoundStatement		1462:0:38578:38699	3850328	0					
ANR	3850331	IdentifierDeclStatement	zval tmp ;	1463:1:38581:38589	3850328	0	True				
ANR	3850332	IdentifierDecl	tmp		3850328	0					
ANR	3850333	IdentifierDeclType	zval		3850328	0					
ANR	3850334	Identifier	tmp		3850328	1					
ANR	3850335	ExpressionStatement	"ZVAL_STRING ( & tmp , str )"	1465:1:38593:38615	3850328	1	True				
ANR	3850336	CallExpression	"ZVAL_STRING ( & tmp , str )"		3850328	0					
ANR	3850337	Callee	ZVAL_STRING		3850328	0					
ANR	3850338	Identifier	ZVAL_STRING		3850328	0					
ANR	3850339	ArgumentList	& tmp		3850328	1					
ANR	3850340	Argument	& tmp		3850328	0					
ANR	3850341	UnaryOperationExpression	& tmp		3850328	0					
ANR	3850342	UnaryOperator	&		3850328	0					
ANR	3850343	Identifier	tmp		3850328	1					
ANR	3850344	Argument	str		3850328	1					
ANR	3850345	Identifier	str		3850328	0					
ANR	3850346	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE ;"	1466:1:38618:38697	3850328	2	True				
ANR	3850347	ConditionalExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE"		3850328	0					
ANR	3850348	Condition	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850328	0					
ANR	3850349	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850328	0					
ANR	3850350	Callee	zend_hash_index_update		3850328	0					
ANR	3850351	Identifier	zend_hash_index_update		3850328	0					
ANR	3850352	ArgumentList	Z_ARRVAL_P ( arg )		3850328	1					
ANR	3850353	Argument	Z_ARRVAL_P ( arg )		3850328	0					
ANR	3850354	CallExpression	Z_ARRVAL_P ( arg )		3850328	0					
ANR	3850355	Callee	Z_ARRVAL_P		3850328	0					
ANR	3850356	Identifier	Z_ARRVAL_P		3850328	0					
ANR	3850357	ArgumentList	arg		3850328	1					
ANR	3850358	Argument	arg		3850328	0					
ANR	3850359	Identifier	arg		3850328	0					
ANR	3850360	Argument	index		3850328	1					
ANR	3850361	Identifier	index		3850328	0					
ANR	3850362	Argument	& tmp		3850328	2					
ANR	3850363	UnaryOperationExpression	& tmp		3850328	0					
ANR	3850364	UnaryOperator	&		3850328	0					
ANR	3850365	Identifier	tmp		3850328	1					
ANR	3850366	Identifier	SUCCESS		3850328	1					
ANR	3850367	Identifier	FAILURE		3850328	2					
ANR	3850368	ReturnType	ZEND_API int		3850328	1					
ANR	3850369	Identifier	add_index_string		3850328	2					
ANR	3850370	ParameterList	"zval * arg , zend_ulong index , const char * str"		3850328	3					
ANR	3850371	Parameter	zval * arg	1461:30:38522:38530	3850328	0	True				
ANR	3850372	ParameterType	zval *		3850328	0					
ANR	3850373	Identifier	arg		3850328	1					
ANR	3850374	Parameter	zend_ulong index	1461:41:38533:38548	3850328	1	True				
ANR	3850375	ParameterType	zend_ulong		3850328	0					
ANR	3850376	Identifier	index		3850328	1					
ANR	3850377	Parameter	const char * str	1461:59:38551:38565	3850328	2	True				
ANR	3850378	ParameterType	const char *		3850328	0					
ANR	3850379	Identifier	str		3850328	1					
ANR	3850380	CFGEntryNode	ENTRY		3850328		True				
ANR	3850381	CFGExitNode	EXIT		3850328		True				
ANR	3850382	Symbol	str		3850328						
ANR	3850383	Symbol	SUCCESS		3850328						
ANR	3850384	Symbol	tmp		3850328						
ANR	3850385	Symbol	zend_hash_index_update		3850328						
ANR	3850386	Symbol	arg		3850328						
ANR	3850387	Symbol	index		3850328						
ANR	3850388	Symbol	& tmp		3850328						
ANR	3850389	Symbol	Z_ARRVAL_P		3850328						
ANR	3850390	Symbol	FAILURE		3850328						
ANR	3850391	Function	add_index_stringl	1470:0:38712:38944							
ANR	3850392	FunctionDef	"add_index_stringl (zval * arg , zend_ulong index , const char * str , size_t length)"		3850391	0					
ANR	3850393	CompoundStatement		1471:0:38814:38944	3850391	0					
ANR	3850394	IdentifierDeclStatement	zval tmp ;	1472:1:38817:38825	3850391	0	True				
ANR	3850395	IdentifierDecl	tmp		3850391	0					
ANR	3850396	IdentifierDeclType	zval		3850391	0					
ANR	3850397	Identifier	tmp		3850391	1					
ANR	3850398	ExpressionStatement	"ZVAL_STRINGL ( & tmp , str , length )"	1474:1:38829:38860	3850391	1	True				
ANR	3850399	CallExpression	"ZVAL_STRINGL ( & tmp , str , length )"		3850391	0					
ANR	3850400	Callee	ZVAL_STRINGL		3850391	0					
ANR	3850401	Identifier	ZVAL_STRINGL		3850391	0					
ANR	3850402	ArgumentList	& tmp		3850391	1					
ANR	3850403	Argument	& tmp		3850391	0					
ANR	3850404	UnaryOperationExpression	& tmp		3850391	0					
ANR	3850405	UnaryOperator	&		3850391	0					
ANR	3850406	Identifier	tmp		3850391	1					
ANR	3850407	Argument	str		3850391	1					
ANR	3850408	Identifier	str		3850391	0					
ANR	3850409	Argument	length		3850391	2					
ANR	3850410	Identifier	length		3850391	0					
ANR	3850411	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE ;"	1475:1:38863:38942	3850391	2	True				
ANR	3850412	ConditionalExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ? SUCCESS : FAILURE"		3850391	0					
ANR	3850413	Condition	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850391	0					
ANR	3850414	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3850391	0					
ANR	3850415	Callee	zend_hash_index_update		3850391	0					
ANR	3850416	Identifier	zend_hash_index_update		3850391	0					
ANR	3850417	ArgumentList	Z_ARRVAL_P ( arg )		3850391	1					
ANR	3850418	Argument	Z_ARRVAL_P ( arg )		3850391	0					
ANR	3850419	CallExpression	Z_ARRVAL_P ( arg )		3850391	0					
ANR	3850420	Callee	Z_ARRVAL_P		3850391	0					
ANR	3850421	Identifier	Z_ARRVAL_P		3850391	0					
ANR	3850422	ArgumentList	arg		3850391	1					
ANR	3850423	Argument	arg		3850391	0					
ANR	3850424	Identifier	arg		3850391	0					
ANR	3850425	Argument	index		3850391	1					
ANR	3850426	Identifier	index		3850391	0					
ANR	3850427	Argument	& tmp		3850391	2					
ANR	3850428	UnaryOperationExpression	& tmp		3850391	0					
ANR	3850429	UnaryOperator	&		3850391	0					
ANR	3850430	Identifier	tmp		3850391	1					
ANR	3850431	Identifier	SUCCESS		3850391	1					
ANR	3850432	Identifier	FAILURE		3850391	2					
ANR	3850433	ReturnType	ZEND_API int		3850391	1					
ANR	3850434	Identifier	add_index_stringl		3850391	2					
ANR	3850435	ParameterList	"zval * arg , zend_ulong index , const char * str , size_t length"		3850391	3					
ANR	3850436	Parameter	zval * arg	1470:31:38743:38751	3850391	0	True				
ANR	3850437	ParameterType	zval *		3850391	0					
ANR	3850438	Identifier	arg		3850391	1					
ANR	3850439	Parameter	zend_ulong index	1470:42:38754:38769	3850391	1	True				
ANR	3850440	ParameterType	zend_ulong		3850391	0					
ANR	3850441	Identifier	index		3850391	1					
ANR	3850442	Parameter	const char * str	1470:60:38772:38786	3850391	2	True				
ANR	3850443	ParameterType	const char *		3850391	0					
ANR	3850444	Identifier	str		3850391	1					
ANR	3850445	Parameter	size_t length	1470:77:38789:38801	3850391	3	True				
ANR	3850446	ParameterType	size_t		3850391	0					
ANR	3850447	Identifier	length		3850391	1					
ANR	3850448	CFGEntryNode	ENTRY		3850391		True				
ANR	3850449	CFGExitNode	EXIT		3850391		True				
ANR	3850450	Symbol	str		3850391						
ANR	3850451	Symbol	SUCCESS		3850391						
ANR	3850452	Symbol	tmp		3850391						
ANR	3850453	Symbol	zend_hash_index_update		3850391						
ANR	3850454	Symbol	arg		3850391						
ANR	3850455	Symbol	length		3850391						
ANR	3850456	Symbol	index		3850391						
ANR	3850457	Symbol	& tmp		3850391						
ANR	3850458	Symbol	Z_ARRVAL_P		3850391						
ANR	3850459	Symbol	FAILURE		3850391						
ANR	3850460	Function	add_index_zval	1479:0:38957:39122							
ANR	3850461	FunctionDef	"add_index_zval (zval * arg , zend_ulong index , zval * value)"		3850460	0					
ANR	3850462	CompoundStatement		1480:0:39037:39122	3850460	0					
ANR	3850463	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , value ) ? SUCCESS : FAILURE ;"	1481:1:39040:39120	3850460	0	True				
ANR	3850464	ConditionalExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , value ) ? SUCCESS : FAILURE"		3850460	0					
ANR	3850465	Condition	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , value )"		3850460	0					
ANR	3850466	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , value )"		3850460	0					
ANR	3850467	Callee	zend_hash_index_update		3850460	0					
ANR	3850468	Identifier	zend_hash_index_update		3850460	0					
ANR	3850469	ArgumentList	Z_ARRVAL_P ( arg )		3850460	1					
ANR	3850470	Argument	Z_ARRVAL_P ( arg )		3850460	0					
ANR	3850471	CallExpression	Z_ARRVAL_P ( arg )		3850460	0					
ANR	3850472	Callee	Z_ARRVAL_P		3850460	0					
ANR	3850473	Identifier	Z_ARRVAL_P		3850460	0					
ANR	3850474	ArgumentList	arg		3850460	1					
ANR	3850475	Argument	arg		3850460	0					
ANR	3850476	Identifier	arg		3850460	0					
ANR	3850477	Argument	index		3850460	1					
ANR	3850478	Identifier	index		3850460	0					
ANR	3850479	Argument	value		3850460	2					
ANR	3850480	Identifier	value		3850460	0					
ANR	3850481	Identifier	SUCCESS		3850460	1					
ANR	3850482	Identifier	FAILURE		3850460	2					
ANR	3850483	ReturnType	ZEND_API int		3850460	1					
ANR	3850484	Identifier	add_index_zval		3850460	2					
ANR	3850485	ParameterList	"zval * arg , zend_ulong index , zval * value"		3850460	3					
ANR	3850486	Parameter	zval * arg	1479:28:38985:38993	3850460	0	True				
ANR	3850487	ParameterType	zval *		3850460	0					
ANR	3850488	Identifier	arg		3850460	1					
ANR	3850489	Parameter	zend_ulong index	1479:39:38996:39011	3850460	1	True				
ANR	3850490	ParameterType	zend_ulong		3850460	0					
ANR	3850491	Identifier	index		3850460	1					
ANR	3850492	Parameter	zval * value	1479:57:39014:39024	3850460	2	True				
ANR	3850493	ParameterType	zval *		3850460	0					
ANR	3850494	Identifier	value		3850460	1					
ANR	3850495	CFGEntryNode	ENTRY		3850460		True				
ANR	3850496	CFGExitNode	EXIT		3850460		True				
ANR	3850497	Symbol	SUCCESS		3850460						
ANR	3850498	Symbol	zend_hash_index_update		3850460						
ANR	3850499	Symbol	arg		3850460						
ANR	3850500	Symbol	index		3850460						
ANR	3850501	Symbol	Z_ARRVAL_P		3850460						
ANR	3850502	Symbol	value		3850460						
ANR	3850503	Symbol	FAILURE		3850460						
ANR	3850504	Function	add_next_index_long	1485:0:39135:39317							
ANR	3850505	FunctionDef	"add_next_index_long (zval * arg , zend_long n)"		3850504	0					
ANR	3850506	CompoundStatement		1486:0:39202:39317	3850504	0					
ANR	3850507	IdentifierDeclStatement	zval tmp ;	1487:1:39205:39213	3850504	0	True				
ANR	3850508	IdentifierDecl	tmp		3850504	0					
ANR	3850509	IdentifierDeclType	zval		3850504	0					
ANR	3850510	Identifier	tmp		3850504	1					
ANR	3850511	ExpressionStatement	"ZVAL_LONG ( & tmp , n )"	1489:1:39217:39235	3850504	1	True				
ANR	3850512	CallExpression	"ZVAL_LONG ( & tmp , n )"		3850504	0					
ANR	3850513	Callee	ZVAL_LONG		3850504	0					
ANR	3850514	Identifier	ZVAL_LONG		3850504	0					
ANR	3850515	ArgumentList	& tmp		3850504	1					
ANR	3850516	Argument	& tmp		3850504	0					
ANR	3850517	UnaryOperationExpression	& tmp		3850504	0					
ANR	3850518	UnaryOperator	&		3850504	0					
ANR	3850519	Identifier	tmp		3850504	1					
ANR	3850520	Argument	n		3850504	1					
ANR	3850521	Identifier	n		3850504	0					
ANR	3850522	ReturnStatement	"return zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE ;"	1490:1:39238:39315	3850504	2	True				
ANR	3850523	ConditionalExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE"		3850504	0					
ANR	3850524	Condition	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850504	0					
ANR	3850525	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850504	0					
ANR	3850526	Callee	zend_hash_next_index_insert		3850504	0					
ANR	3850527	Identifier	zend_hash_next_index_insert		3850504	0					
ANR	3850528	ArgumentList	Z_ARRVAL_P ( arg )		3850504	1					
ANR	3850529	Argument	Z_ARRVAL_P ( arg )		3850504	0					
ANR	3850530	CallExpression	Z_ARRVAL_P ( arg )		3850504	0					
ANR	3850531	Callee	Z_ARRVAL_P		3850504	0					
ANR	3850532	Identifier	Z_ARRVAL_P		3850504	0					
ANR	3850533	ArgumentList	arg		3850504	1					
ANR	3850534	Argument	arg		3850504	0					
ANR	3850535	Identifier	arg		3850504	0					
ANR	3850536	Argument	& tmp		3850504	1					
ANR	3850537	UnaryOperationExpression	& tmp		3850504	0					
ANR	3850538	UnaryOperator	&		3850504	0					
ANR	3850539	Identifier	tmp		3850504	1					
ANR	3850540	Identifier	SUCCESS		3850504	1					
ANR	3850541	Identifier	FAILURE		3850504	2					
ANR	3850542	ReturnType	ZEND_API int		3850504	1					
ANR	3850543	Identifier	add_next_index_long		3850504	2					
ANR	3850544	ParameterList	"zval * arg , zend_long n"		3850504	3					
ANR	3850545	Parameter	zval * arg	1485:33:39168:39176	3850504	0	True				
ANR	3850546	ParameterType	zval *		3850504	0					
ANR	3850547	Identifier	arg		3850504	1					
ANR	3850548	Parameter	zend_long n	1485:44:39179:39189	3850504	1	True				
ANR	3850549	ParameterType	zend_long		3850504	0					
ANR	3850550	Identifier	n		3850504	1					
ANR	3850551	CFGEntryNode	ENTRY		3850504		True				
ANR	3850552	CFGExitNode	EXIT		3850504		True				
ANR	3850553	Symbol	zend_hash_next_index_insert		3850504						
ANR	3850554	Symbol	SUCCESS		3850504						
ANR	3850555	Symbol	tmp		3850504						
ANR	3850556	Symbol	arg		3850504						
ANR	3850557	Symbol	& tmp		3850504						
ANR	3850558	Symbol	Z_ARRVAL_P		3850504						
ANR	3850559	Symbol	FAILURE		3850504						
ANR	3850560	Symbol	n		3850504						
ANR	3850561	Function	add_next_index_null	1494:0:39330:39496							
ANR	3850562	FunctionDef	add_next_index_null (zval * arg)		3850561	0					
ANR	3850563	CompoundStatement		1495:0:39384:39496	3850561	0					
ANR	3850564	IdentifierDeclStatement	zval tmp ;	1496:1:39387:39395	3850561	0	True				
ANR	3850565	IdentifierDecl	tmp		3850561	0					
ANR	3850566	IdentifierDeclType	zval		3850561	0					
ANR	3850567	Identifier	tmp		3850561	1					
ANR	3850568	ExpressionStatement	ZVAL_NULL ( & tmp )	1498:1:39399:39414	3850561	1	True				
ANR	3850569	CallExpression	ZVAL_NULL ( & tmp )		3850561	0					
ANR	3850570	Callee	ZVAL_NULL		3850561	0					
ANR	3850571	Identifier	ZVAL_NULL		3850561	0					
ANR	3850572	ArgumentList	& tmp		3850561	1					
ANR	3850573	Argument	& tmp		3850561	0					
ANR	3850574	UnaryOperationExpression	& tmp		3850561	0					
ANR	3850575	UnaryOperator	&		3850561	0					
ANR	3850576	Identifier	tmp		3850561	1					
ANR	3850577	ReturnStatement	"return zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE ;"	1499:1:39417:39494	3850561	2	True				
ANR	3850578	ConditionalExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE"		3850561	0					
ANR	3850579	Condition	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850561	0					
ANR	3850580	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850561	0					
ANR	3850581	Callee	zend_hash_next_index_insert		3850561	0					
ANR	3850582	Identifier	zend_hash_next_index_insert		3850561	0					
ANR	3850583	ArgumentList	Z_ARRVAL_P ( arg )		3850561	1					
ANR	3850584	Argument	Z_ARRVAL_P ( arg )		3850561	0					
ANR	3850585	CallExpression	Z_ARRVAL_P ( arg )		3850561	0					
ANR	3850586	Callee	Z_ARRVAL_P		3850561	0					
ANR	3850587	Identifier	Z_ARRVAL_P		3850561	0					
ANR	3850588	ArgumentList	arg		3850561	1					
ANR	3850589	Argument	arg		3850561	0					
ANR	3850590	Identifier	arg		3850561	0					
ANR	3850591	Argument	& tmp		3850561	1					
ANR	3850592	UnaryOperationExpression	& tmp		3850561	0					
ANR	3850593	UnaryOperator	&		3850561	0					
ANR	3850594	Identifier	tmp		3850561	1					
ANR	3850595	Identifier	SUCCESS		3850561	1					
ANR	3850596	Identifier	FAILURE		3850561	2					
ANR	3850597	ReturnType	ZEND_API int		3850561	1					
ANR	3850598	Identifier	add_next_index_null		3850561	2					
ANR	3850599	ParameterList	zval * arg		3850561	3					
ANR	3850600	Parameter	zval * arg	1494:33:39363:39371	3850561	0	True				
ANR	3850601	ParameterType	zval *		3850561	0					
ANR	3850602	Identifier	arg		3850561	1					
ANR	3850603	CFGEntryNode	ENTRY		3850561		True				
ANR	3850604	CFGExitNode	EXIT		3850561		True				
ANR	3850605	Symbol	zend_hash_next_index_insert		3850561						
ANR	3850606	Symbol	SUCCESS		3850561						
ANR	3850607	Symbol	tmp		3850561						
ANR	3850608	Symbol	arg		3850561						
ANR	3850609	Symbol	& tmp		3850561						
ANR	3850610	Symbol	Z_ARRVAL_P		3850561						
ANR	3850611	Symbol	FAILURE		3850561						
ANR	3850612	Function	add_next_index_bool	1503:0:39509:39685							
ANR	3850613	FunctionDef	"add_next_index_bool (zval * arg , int b)"		3850612	0					
ANR	3850614	CompoundStatement		1504:0:39570:39685	3850612	0					
ANR	3850615	IdentifierDeclStatement	zval tmp ;	1505:1:39573:39581	3850612	0	True				
ANR	3850616	IdentifierDecl	tmp		3850612	0					
ANR	3850617	IdentifierDeclType	zval		3850612	0					
ANR	3850618	Identifier	tmp		3850612	1					
ANR	3850619	ExpressionStatement	"ZVAL_BOOL ( & tmp , b )"	1507:1:39585:39603	3850612	1	True				
ANR	3850620	CallExpression	"ZVAL_BOOL ( & tmp , b )"		3850612	0					
ANR	3850621	Callee	ZVAL_BOOL		3850612	0					
ANR	3850622	Identifier	ZVAL_BOOL		3850612	0					
ANR	3850623	ArgumentList	& tmp		3850612	1					
ANR	3850624	Argument	& tmp		3850612	0					
ANR	3850625	UnaryOperationExpression	& tmp		3850612	0					
ANR	3850626	UnaryOperator	&		3850612	0					
ANR	3850627	Identifier	tmp		3850612	1					
ANR	3850628	Argument	b		3850612	1					
ANR	3850629	Identifier	b		3850612	0					
ANR	3850630	ReturnStatement	"return zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE ;"	1508:1:39606:39683	3850612	2	True				
ANR	3850631	ConditionalExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE"		3850612	0					
ANR	3850632	Condition	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850612	0					
ANR	3850633	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850612	0					
ANR	3850634	Callee	zend_hash_next_index_insert		3850612	0					
ANR	3850635	Identifier	zend_hash_next_index_insert		3850612	0					
ANR	3850636	ArgumentList	Z_ARRVAL_P ( arg )		3850612	1					
ANR	3850637	Argument	Z_ARRVAL_P ( arg )		3850612	0					
ANR	3850638	CallExpression	Z_ARRVAL_P ( arg )		3850612	0					
ANR	3850639	Callee	Z_ARRVAL_P		3850612	0					
ANR	3850640	Identifier	Z_ARRVAL_P		3850612	0					
ANR	3850641	ArgumentList	arg		3850612	1					
ANR	3850642	Argument	arg		3850612	0					
ANR	3850643	Identifier	arg		3850612	0					
ANR	3850644	Argument	& tmp		3850612	1					
ANR	3850645	UnaryOperationExpression	& tmp		3850612	0					
ANR	3850646	UnaryOperator	&		3850612	0					
ANR	3850647	Identifier	tmp		3850612	1					
ANR	3850648	Identifier	SUCCESS		3850612	1					
ANR	3850649	Identifier	FAILURE		3850612	2					
ANR	3850650	ReturnType	ZEND_API int		3850612	1					
ANR	3850651	Identifier	add_next_index_bool		3850612	2					
ANR	3850652	ParameterList	"zval * arg , int b"		3850612	3					
ANR	3850653	Parameter	zval * arg	1503:33:39542:39550	3850612	0	True				
ANR	3850654	ParameterType	zval *		3850612	0					
ANR	3850655	Identifier	arg		3850612	1					
ANR	3850656	Parameter	int b	1503:44:39553:39557	3850612	1	True				
ANR	3850657	ParameterType	int		3850612	0					
ANR	3850658	Identifier	b		3850612	1					
ANR	3850659	CFGEntryNode	ENTRY		3850612		True				
ANR	3850660	CFGExitNode	EXIT		3850612		True				
ANR	3850661	Symbol	b		3850612						
ANR	3850662	Symbol	zend_hash_next_index_insert		3850612						
ANR	3850663	Symbol	SUCCESS		3850612						
ANR	3850664	Symbol	tmp		3850612						
ANR	3850665	Symbol	arg		3850612						
ANR	3850666	Symbol	& tmp		3850612						
ANR	3850667	Symbol	Z_ARRVAL_P		3850612						
ANR	3850668	Symbol	FAILURE		3850612						
ANR	3850669	Function	add_next_index_resource	1512:0:39698:39888							
ANR	3850670	FunctionDef	"add_next_index_resource (zval * arg , zend_resource * r)"		3850669	0					
ANR	3850671	CompoundStatement		1513:0:39774:39888	3850669	0					
ANR	3850672	IdentifierDeclStatement	zval tmp ;	1514:1:39777:39785	3850669	0	True				
ANR	3850673	IdentifierDecl	tmp		3850669	0					
ANR	3850674	IdentifierDeclType	zval		3850669	0					
ANR	3850675	Identifier	tmp		3850669	1					
ANR	3850676	ExpressionStatement	"ZVAL_RES ( & tmp , r )"	1516:1:39789:39806	3850669	1	True				
ANR	3850677	CallExpression	"ZVAL_RES ( & tmp , r )"		3850669	0					
ANR	3850678	Callee	ZVAL_RES		3850669	0					
ANR	3850679	Identifier	ZVAL_RES		3850669	0					
ANR	3850680	ArgumentList	& tmp		3850669	1					
ANR	3850681	Argument	& tmp		3850669	0					
ANR	3850682	UnaryOperationExpression	& tmp		3850669	0					
ANR	3850683	UnaryOperator	&		3850669	0					
ANR	3850684	Identifier	tmp		3850669	1					
ANR	3850685	Argument	r		3850669	1					
ANR	3850686	Identifier	r		3850669	0					
ANR	3850687	ReturnStatement	"return zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE ;"	1517:1:39809:39886	3850669	2	True				
ANR	3850688	ConditionalExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE"		3850669	0					
ANR	3850689	Condition	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850669	0					
ANR	3850690	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850669	0					
ANR	3850691	Callee	zend_hash_next_index_insert		3850669	0					
ANR	3850692	Identifier	zend_hash_next_index_insert		3850669	0					
ANR	3850693	ArgumentList	Z_ARRVAL_P ( arg )		3850669	1					
ANR	3850694	Argument	Z_ARRVAL_P ( arg )		3850669	0					
ANR	3850695	CallExpression	Z_ARRVAL_P ( arg )		3850669	0					
ANR	3850696	Callee	Z_ARRVAL_P		3850669	0					
ANR	3850697	Identifier	Z_ARRVAL_P		3850669	0					
ANR	3850698	ArgumentList	arg		3850669	1					
ANR	3850699	Argument	arg		3850669	0					
ANR	3850700	Identifier	arg		3850669	0					
ANR	3850701	Argument	& tmp		3850669	1					
ANR	3850702	UnaryOperationExpression	& tmp		3850669	0					
ANR	3850703	UnaryOperator	&		3850669	0					
ANR	3850704	Identifier	tmp		3850669	1					
ANR	3850705	Identifier	SUCCESS		3850669	1					
ANR	3850706	Identifier	FAILURE		3850669	2					
ANR	3850707	ReturnType	ZEND_API int		3850669	1					
ANR	3850708	Identifier	add_next_index_resource		3850669	2					
ANR	3850709	ParameterList	"zval * arg , zend_resource * r"		3850669	3					
ANR	3850710	Parameter	zval * arg	1512:37:39735:39743	3850669	0	True				
ANR	3850711	ParameterType	zval *		3850669	0					
ANR	3850712	Identifier	arg		3850669	1					
ANR	3850713	Parameter	zend_resource * r	1512:48:39746:39761	3850669	1	True				
ANR	3850714	ParameterType	zend_resource *		3850669	0					
ANR	3850715	Identifier	r		3850669	1					
ANR	3850716	CFGEntryNode	ENTRY		3850669		True				
ANR	3850717	CFGExitNode	EXIT		3850669		True				
ANR	3850718	Symbol	r		3850669						
ANR	3850719	Symbol	zend_hash_next_index_insert		3850669						
ANR	3850720	Symbol	SUCCESS		3850669						
ANR	3850721	Symbol	tmp		3850669						
ANR	3850722	Symbol	arg		3850669						
ANR	3850723	Symbol	& tmp		3850669						
ANR	3850724	Symbol	Z_ARRVAL_P		3850669						
ANR	3850725	Symbol	FAILURE		3850669						
ANR	3850726	Function	add_next_index_double	1521:0:39901:40084							
ANR	3850727	FunctionDef	"add_next_index_double (zval * arg , double d)"		3850726	0					
ANR	3850728	CompoundStatement		1522:0:39967:40084	3850726	0					
ANR	3850729	IdentifierDeclStatement	zval tmp ;	1523:1:39970:39978	3850726	0	True				
ANR	3850730	IdentifierDecl	tmp		3850726	0					
ANR	3850731	IdentifierDeclType	zval		3850726	0					
ANR	3850732	Identifier	tmp		3850726	1					
ANR	3850733	ExpressionStatement	"ZVAL_DOUBLE ( & tmp , d )"	1525:1:39982:40002	3850726	1	True				
ANR	3850734	CallExpression	"ZVAL_DOUBLE ( & tmp , d )"		3850726	0					
ANR	3850735	Callee	ZVAL_DOUBLE		3850726	0					
ANR	3850736	Identifier	ZVAL_DOUBLE		3850726	0					
ANR	3850737	ArgumentList	& tmp		3850726	1					
ANR	3850738	Argument	& tmp		3850726	0					
ANR	3850739	UnaryOperationExpression	& tmp		3850726	0					
ANR	3850740	UnaryOperator	&		3850726	0					
ANR	3850741	Identifier	tmp		3850726	1					
ANR	3850742	Argument	d		3850726	1					
ANR	3850743	Identifier	d		3850726	0					
ANR	3850744	ReturnStatement	"return zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE ;"	1526:1:40005:40082	3850726	2	True				
ANR	3850745	ConditionalExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE"		3850726	0					
ANR	3850746	Condition	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850726	0					
ANR	3850747	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850726	0					
ANR	3850748	Callee	zend_hash_next_index_insert		3850726	0					
ANR	3850749	Identifier	zend_hash_next_index_insert		3850726	0					
ANR	3850750	ArgumentList	Z_ARRVAL_P ( arg )		3850726	1					
ANR	3850751	Argument	Z_ARRVAL_P ( arg )		3850726	0					
ANR	3850752	CallExpression	Z_ARRVAL_P ( arg )		3850726	0					
ANR	3850753	Callee	Z_ARRVAL_P		3850726	0					
ANR	3850754	Identifier	Z_ARRVAL_P		3850726	0					
ANR	3850755	ArgumentList	arg		3850726	1					
ANR	3850756	Argument	arg		3850726	0					
ANR	3850757	Identifier	arg		3850726	0					
ANR	3850758	Argument	& tmp		3850726	1					
ANR	3850759	UnaryOperationExpression	& tmp		3850726	0					
ANR	3850760	UnaryOperator	&		3850726	0					
ANR	3850761	Identifier	tmp		3850726	1					
ANR	3850762	Identifier	SUCCESS		3850726	1					
ANR	3850763	Identifier	FAILURE		3850726	2					
ANR	3850764	ReturnType	ZEND_API int		3850726	1					
ANR	3850765	Identifier	add_next_index_double		3850726	2					
ANR	3850766	ParameterList	"zval * arg , double d"		3850726	3					
ANR	3850767	Parameter	zval * arg	1521:35:39936:39944	3850726	0	True				
ANR	3850768	ParameterType	zval *		3850726	0					
ANR	3850769	Identifier	arg		3850726	1					
ANR	3850770	Parameter	double d	1521:46:39947:39954	3850726	1	True				
ANR	3850771	ParameterType	double		3850726	0					
ANR	3850772	Identifier	d		3850726	1					
ANR	3850773	CFGEntryNode	ENTRY		3850726		True				
ANR	3850774	CFGExitNode	EXIT		3850726		True				
ANR	3850775	Symbol	zend_hash_next_index_insert		3850726						
ANR	3850776	Symbol	SUCCESS		3850726						
ANR	3850777	Symbol	d		3850726						
ANR	3850778	Symbol	tmp		3850726						
ANR	3850779	Symbol	arg		3850726						
ANR	3850780	Symbol	& tmp		3850726						
ANR	3850781	Symbol	Z_ARRVAL_P		3850726						
ANR	3850782	Symbol	FAILURE		3850726						
ANR	3850783	Function	add_next_index_str	1530:0:40097:40284							
ANR	3850784	FunctionDef	"add_next_index_str (zval * arg , zend_string * str)"		3850783	0					
ANR	3850785	CompoundStatement		1531:0:40168:40284	3850783	0					
ANR	3850786	IdentifierDeclStatement	zval tmp ;	1532:1:40171:40179	3850783	0	True				
ANR	3850787	IdentifierDecl	tmp		3850783	0					
ANR	3850788	IdentifierDeclType	zval		3850783	0					
ANR	3850789	Identifier	tmp		3850783	1					
ANR	3850790	ExpressionStatement	"ZVAL_STR ( & tmp , str )"	1534:1:40183:40202	3850783	1	True				
ANR	3850791	CallExpression	"ZVAL_STR ( & tmp , str )"		3850783	0					
ANR	3850792	Callee	ZVAL_STR		3850783	0					
ANR	3850793	Identifier	ZVAL_STR		3850783	0					
ANR	3850794	ArgumentList	& tmp		3850783	1					
ANR	3850795	Argument	& tmp		3850783	0					
ANR	3850796	UnaryOperationExpression	& tmp		3850783	0					
ANR	3850797	UnaryOperator	&		3850783	0					
ANR	3850798	Identifier	tmp		3850783	1					
ANR	3850799	Argument	str		3850783	1					
ANR	3850800	Identifier	str		3850783	0					
ANR	3850801	ReturnStatement	"return zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE ;"	1535:1:40205:40282	3850783	2	True				
ANR	3850802	ConditionalExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE"		3850783	0					
ANR	3850803	Condition	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850783	0					
ANR	3850804	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850783	0					
ANR	3850805	Callee	zend_hash_next_index_insert		3850783	0					
ANR	3850806	Identifier	zend_hash_next_index_insert		3850783	0					
ANR	3850807	ArgumentList	Z_ARRVAL_P ( arg )		3850783	1					
ANR	3850808	Argument	Z_ARRVAL_P ( arg )		3850783	0					
ANR	3850809	CallExpression	Z_ARRVAL_P ( arg )		3850783	0					
ANR	3850810	Callee	Z_ARRVAL_P		3850783	0					
ANR	3850811	Identifier	Z_ARRVAL_P		3850783	0					
ANR	3850812	ArgumentList	arg		3850783	1					
ANR	3850813	Argument	arg		3850783	0					
ANR	3850814	Identifier	arg		3850783	0					
ANR	3850815	Argument	& tmp		3850783	1					
ANR	3850816	UnaryOperationExpression	& tmp		3850783	0					
ANR	3850817	UnaryOperator	&		3850783	0					
ANR	3850818	Identifier	tmp		3850783	1					
ANR	3850819	Identifier	SUCCESS		3850783	1					
ANR	3850820	Identifier	FAILURE		3850783	2					
ANR	3850821	ReturnType	ZEND_API int		3850783	1					
ANR	3850822	Identifier	add_next_index_str		3850783	2					
ANR	3850823	ParameterList	"zval * arg , zend_string * str"		3850783	3					
ANR	3850824	Parameter	zval * arg	1530:32:40129:40137	3850783	0	True				
ANR	3850825	ParameterType	zval *		3850783	0					
ANR	3850826	Identifier	arg		3850783	1					
ANR	3850827	Parameter	zend_string * str	1530:43:40140:40155	3850783	1	True				
ANR	3850828	ParameterType	zend_string *		3850783	0					
ANR	3850829	Identifier	str		3850783	1					
ANR	3850830	CFGEntryNode	ENTRY		3850783		True				
ANR	3850831	CFGExitNode	EXIT		3850783		True				
ANR	3850832	Symbol	str		3850783						
ANR	3850833	Symbol	zend_hash_next_index_insert		3850783						
ANR	3850834	Symbol	SUCCESS		3850783						
ANR	3850835	Symbol	tmp		3850783						
ANR	3850836	Symbol	arg		3850783						
ANR	3850837	Symbol	& tmp		3850783						
ANR	3850838	Symbol	Z_ARRVAL_P		3850783						
ANR	3850839	Symbol	FAILURE		3850783						
ANR	3850840	Function	add_next_index_string	1539:0:40297:40489							
ANR	3850841	FunctionDef	"add_next_index_string (zval * arg , const char * str)"		3850840	0					
ANR	3850842	CompoundStatement		1540:0:40370:40489	3850840	0					
ANR	3850843	IdentifierDeclStatement	zval tmp ;	1541:1:40373:40381	3850840	0	True				
ANR	3850844	IdentifierDecl	tmp		3850840	0					
ANR	3850845	IdentifierDeclType	zval		3850840	0					
ANR	3850846	Identifier	tmp		3850840	1					
ANR	3850847	ExpressionStatement	"ZVAL_STRING ( & tmp , str )"	1543:1:40385:40407	3850840	1	True				
ANR	3850848	CallExpression	"ZVAL_STRING ( & tmp , str )"		3850840	0					
ANR	3850849	Callee	ZVAL_STRING		3850840	0					
ANR	3850850	Identifier	ZVAL_STRING		3850840	0					
ANR	3850851	ArgumentList	& tmp		3850840	1					
ANR	3850852	Argument	& tmp		3850840	0					
ANR	3850853	UnaryOperationExpression	& tmp		3850840	0					
ANR	3850854	UnaryOperator	&		3850840	0					
ANR	3850855	Identifier	tmp		3850840	1					
ANR	3850856	Argument	str		3850840	1					
ANR	3850857	Identifier	str		3850840	0					
ANR	3850858	ReturnStatement	"return zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE ;"	1544:1:40410:40487	3850840	2	True				
ANR	3850859	ConditionalExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE"		3850840	0					
ANR	3850860	Condition	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850840	0					
ANR	3850861	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850840	0					
ANR	3850862	Callee	zend_hash_next_index_insert		3850840	0					
ANR	3850863	Identifier	zend_hash_next_index_insert		3850840	0					
ANR	3850864	ArgumentList	Z_ARRVAL_P ( arg )		3850840	1					
ANR	3850865	Argument	Z_ARRVAL_P ( arg )		3850840	0					
ANR	3850866	CallExpression	Z_ARRVAL_P ( arg )		3850840	0					
ANR	3850867	Callee	Z_ARRVAL_P		3850840	0					
ANR	3850868	Identifier	Z_ARRVAL_P		3850840	0					
ANR	3850869	ArgumentList	arg		3850840	1					
ANR	3850870	Argument	arg		3850840	0					
ANR	3850871	Identifier	arg		3850840	0					
ANR	3850872	Argument	& tmp		3850840	1					
ANR	3850873	UnaryOperationExpression	& tmp		3850840	0					
ANR	3850874	UnaryOperator	&		3850840	0					
ANR	3850875	Identifier	tmp		3850840	1					
ANR	3850876	Identifier	SUCCESS		3850840	1					
ANR	3850877	Identifier	FAILURE		3850840	2					
ANR	3850878	ReturnType	ZEND_API int		3850840	1					
ANR	3850879	Identifier	add_next_index_string		3850840	2					
ANR	3850880	ParameterList	"zval * arg , const char * str"		3850840	3					
ANR	3850881	Parameter	zval * arg	1539:35:40332:40340	3850840	0	True				
ANR	3850882	ParameterType	zval *		3850840	0					
ANR	3850883	Identifier	arg		3850840	1					
ANR	3850884	Parameter	const char * str	1539:46:40343:40357	3850840	1	True				
ANR	3850885	ParameterType	const char *		3850840	0					
ANR	3850886	Identifier	str		3850840	1					
ANR	3850887	CFGEntryNode	ENTRY		3850840		True				
ANR	3850888	CFGExitNode	EXIT		3850840		True				
ANR	3850889	Symbol	str		3850840						
ANR	3850890	Symbol	zend_hash_next_index_insert		3850840						
ANR	3850891	Symbol	SUCCESS		3850840						
ANR	3850892	Symbol	tmp		3850840						
ANR	3850893	Symbol	arg		3850840						
ANR	3850894	Symbol	& tmp		3850840						
ANR	3850895	Symbol	Z_ARRVAL_P		3850840						
ANR	3850896	Symbol	FAILURE		3850840						
ANR	3850897	Function	add_next_index_stringl	1548:0:40502:40719							
ANR	3850898	FunctionDef	"add_next_index_stringl (zval * arg , const char * str , size_t length)"		3850897	0					
ANR	3850899	CompoundStatement		1549:0:40591:40719	3850897	0					
ANR	3850900	IdentifierDeclStatement	zval tmp ;	1550:1:40594:40602	3850897	0	True				
ANR	3850901	IdentifierDecl	tmp		3850897	0					
ANR	3850902	IdentifierDeclType	zval		3850897	0					
ANR	3850903	Identifier	tmp		3850897	1					
ANR	3850904	ExpressionStatement	"ZVAL_STRINGL ( & tmp , str , length )"	1552:1:40606:40637	3850897	1	True				
ANR	3850905	CallExpression	"ZVAL_STRINGL ( & tmp , str , length )"		3850897	0					
ANR	3850906	Callee	ZVAL_STRINGL		3850897	0					
ANR	3850907	Identifier	ZVAL_STRINGL		3850897	0					
ANR	3850908	ArgumentList	& tmp		3850897	1					
ANR	3850909	Argument	& tmp		3850897	0					
ANR	3850910	UnaryOperationExpression	& tmp		3850897	0					
ANR	3850911	UnaryOperator	&		3850897	0					
ANR	3850912	Identifier	tmp		3850897	1					
ANR	3850913	Argument	str		3850897	1					
ANR	3850914	Identifier	str		3850897	0					
ANR	3850915	Argument	length		3850897	2					
ANR	3850916	Identifier	length		3850897	0					
ANR	3850917	ReturnStatement	"return zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE ;"	1553:1:40640:40717	3850897	2	True				
ANR	3850918	ConditionalExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp ) ? SUCCESS : FAILURE"		3850897	0					
ANR	3850919	Condition	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850897	0					
ANR	3850920	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , & tmp )"		3850897	0					
ANR	3850921	Callee	zend_hash_next_index_insert		3850897	0					
ANR	3850922	Identifier	zend_hash_next_index_insert		3850897	0					
ANR	3850923	ArgumentList	Z_ARRVAL_P ( arg )		3850897	1					
ANR	3850924	Argument	Z_ARRVAL_P ( arg )		3850897	0					
ANR	3850925	CallExpression	Z_ARRVAL_P ( arg )		3850897	0					
ANR	3850926	Callee	Z_ARRVAL_P		3850897	0					
ANR	3850927	Identifier	Z_ARRVAL_P		3850897	0					
ANR	3850928	ArgumentList	arg		3850897	1					
ANR	3850929	Argument	arg		3850897	0					
ANR	3850930	Identifier	arg		3850897	0					
ANR	3850931	Argument	& tmp		3850897	1					
ANR	3850932	UnaryOperationExpression	& tmp		3850897	0					
ANR	3850933	UnaryOperator	&		3850897	0					
ANR	3850934	Identifier	tmp		3850897	1					
ANR	3850935	Identifier	SUCCESS		3850897	1					
ANR	3850936	Identifier	FAILURE		3850897	2					
ANR	3850937	ReturnType	ZEND_API int		3850897	1					
ANR	3850938	Identifier	add_next_index_stringl		3850897	2					
ANR	3850939	ParameterList	"zval * arg , const char * str , size_t length"		3850897	3					
ANR	3850940	Parameter	zval * arg	1548:36:40538:40546	3850897	0	True				
ANR	3850941	ParameterType	zval *		3850897	0					
ANR	3850942	Identifier	arg		3850897	1					
ANR	3850943	Parameter	const char * str	1548:47:40549:40563	3850897	1	True				
ANR	3850944	ParameterType	const char *		3850897	0					
ANR	3850945	Identifier	str		3850897	1					
ANR	3850946	Parameter	size_t length	1548:64:40566:40578	3850897	2	True				
ANR	3850947	ParameterType	size_t		3850897	0					
ANR	3850948	Identifier	length		3850897	1					
ANR	3850949	CFGEntryNode	ENTRY		3850897		True				
ANR	3850950	CFGExitNode	EXIT		3850897		True				
ANR	3850951	Symbol	str		3850897						
ANR	3850952	Symbol	zend_hash_next_index_insert		3850897						
ANR	3850953	Symbol	SUCCESS		3850897						
ANR	3850954	Symbol	tmp		3850897						
ANR	3850955	Symbol	arg		3850897						
ANR	3850956	Symbol	length		3850897						
ANR	3850957	Symbol	& tmp		3850897						
ANR	3850958	Symbol	Z_ARRVAL_P		3850897						
ANR	3850959	Symbol	FAILURE		3850897						
ANR	3850960	Function	add_next_index_zval	1557:0:40732:40882							
ANR	3850961	FunctionDef	"add_next_index_zval (zval * arg , zval * value)"		3850960	0					
ANR	3850962	CompoundStatement		1558:0:40799:40882	3850960	0					
ANR	3850963	ReturnStatement	"return zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , value ) ? SUCCESS : FAILURE ;"	1559:1:40802:40880	3850960	0	True				
ANR	3850964	ConditionalExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , value ) ? SUCCESS : FAILURE"		3850960	0					
ANR	3850965	Condition	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , value )"		3850960	0					
ANR	3850966	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( arg ) , value )"		3850960	0					
ANR	3850967	Callee	zend_hash_next_index_insert		3850960	0					
ANR	3850968	Identifier	zend_hash_next_index_insert		3850960	0					
ANR	3850969	ArgumentList	Z_ARRVAL_P ( arg )		3850960	1					
ANR	3850970	Argument	Z_ARRVAL_P ( arg )		3850960	0					
ANR	3850971	CallExpression	Z_ARRVAL_P ( arg )		3850960	0					
ANR	3850972	Callee	Z_ARRVAL_P		3850960	0					
ANR	3850973	Identifier	Z_ARRVAL_P		3850960	0					
ANR	3850974	ArgumentList	arg		3850960	1					
ANR	3850975	Argument	arg		3850960	0					
ANR	3850976	Identifier	arg		3850960	0					
ANR	3850977	Argument	value		3850960	1					
ANR	3850978	Identifier	value		3850960	0					
ANR	3850979	Identifier	SUCCESS		3850960	1					
ANR	3850980	Identifier	FAILURE		3850960	2					
ANR	3850981	ReturnType	ZEND_API int		3850960	1					
ANR	3850982	Identifier	add_next_index_zval		3850960	2					
ANR	3850983	ParameterList	"zval * arg , zval * value"		3850960	3					
ANR	3850984	Parameter	zval * arg	1557:33:40765:40773	3850960	0	True				
ANR	3850985	ParameterType	zval *		3850960	0					
ANR	3850986	Identifier	arg		3850960	1					
ANR	3850987	Parameter	zval * value	1557:44:40776:40786	3850960	1	True				
ANR	3850988	ParameterType	zval *		3850960	0					
ANR	3850989	Identifier	value		3850960	1					
ANR	3850990	CFGEntryNode	ENTRY		3850960		True				
ANR	3850991	CFGExitNode	EXIT		3850960		True				
ANR	3850992	Symbol	zend_hash_next_index_insert		3850960						
ANR	3850993	Symbol	SUCCESS		3850960						
ANR	3850994	Symbol	arg		3850960						
ANR	3850995	Symbol	Z_ARRVAL_P		3850960						
ANR	3850996	Symbol	value		3850960						
ANR	3850997	Symbol	FAILURE		3850960						
ANR	3850998	Function	add_get_assoc_string_ex	1563:0:40895:41131							
ANR	3850999	FunctionDef	"add_get_assoc_string_ex (zval * arg , const char * key , uint key_len , const char * str)"		3850998	0					
ANR	3851000	CompoundStatement		1564:0:41003:41131	3850998	0					
ANR	3851001	IdentifierDeclStatement	"zval tmp , * ret ;"	1565:1:41006:41020	3850998	0	True				
ANR	3851002	IdentifierDecl	tmp		3850998	0					
ANR	3851003	IdentifierDeclType	zval		3850998	0					
ANR	3851004	Identifier	tmp		3850998	1					
ANR	3851005	IdentifierDecl	* ret		3850998	1					
ANR	3851006	IdentifierDeclType	zval *		3850998	0					
ANR	3851007	Identifier	ret		3850998	1					
ANR	3851008	ExpressionStatement	"ZVAL_STRING ( & tmp , str )"	1567:1:41024:41046	3850998	1	True				
ANR	3851009	CallExpression	"ZVAL_STRING ( & tmp , str )"		3850998	0					
ANR	3851010	Callee	ZVAL_STRING		3850998	0					
ANR	3851011	Identifier	ZVAL_STRING		3850998	0					
ANR	3851012	ArgumentList	& tmp		3850998	1					
ANR	3851013	Argument	& tmp		3850998	0					
ANR	3851014	UnaryOperationExpression	& tmp		3850998	0					
ANR	3851015	UnaryOperator	&		3850998	0					
ANR	3851016	Identifier	tmp		3850998	1					
ANR	3851017	Argument	str		3850998	1					
ANR	3851018	Identifier	str		3850998	0					
ANR	3851019	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1568:1:41049:41116	3850998	2	True				
ANR	3851020	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3850998	0		=			
ANR	3851021	Identifier	ret		3850998	0					
ANR	3851022	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3850998	1					
ANR	3851023	Callee	zend_symtable_str_update		3850998	0					
ANR	3851024	Identifier	zend_symtable_str_update		3850998	0					
ANR	3851025	ArgumentList	Z_ARRVAL_P ( arg )		3850998	1					
ANR	3851026	Argument	Z_ARRVAL_P ( arg )		3850998	0					
ANR	3851027	CallExpression	Z_ARRVAL_P ( arg )		3850998	0					
ANR	3851028	Callee	Z_ARRVAL_P		3850998	0					
ANR	3851029	Identifier	Z_ARRVAL_P		3850998	0					
ANR	3851030	ArgumentList	arg		3850998	1					
ANR	3851031	Argument	arg		3850998	0					
ANR	3851032	Identifier	arg		3850998	0					
ANR	3851033	Argument	key		3850998	1					
ANR	3851034	Identifier	key		3850998	0					
ANR	3851035	Argument	key_len		3850998	2					
ANR	3851036	Identifier	key_len		3850998	0					
ANR	3851037	Argument	& tmp		3850998	3					
ANR	3851038	UnaryOperationExpression	& tmp		3850998	0					
ANR	3851039	UnaryOperator	&		3850998	0					
ANR	3851040	Identifier	tmp		3850998	1					
ANR	3851041	ReturnStatement	return ret ;	1569:1:41119:41129	3850998	3	True				
ANR	3851042	Identifier	ret		3850998	0					
ANR	3851043	ReturnType	ZEND_API zval *		3850998	1					
ANR	3851044	Identifier	add_get_assoc_string_ex		3850998	2					
ANR	3851045	ParameterList	"zval * arg , const char * key , uint key_len , const char * str"		3850998	3					
ANR	3851046	Parameter	zval * arg	1563:39:40934:40942	3850998	0	True				
ANR	3851047	ParameterType	zval *		3850998	0					
ANR	3851048	Identifier	arg		3850998	1					
ANR	3851049	Parameter	const char * key	1563:50:40945:40959	3850998	1	True				
ANR	3851050	ParameterType	const char *		3850998	0					
ANR	3851051	Identifier	key		3850998	1					
ANR	3851052	Parameter	uint key_len	1563:67:40962:40973	3850998	2	True				
ANR	3851053	ParameterType	uint		3850998	0					
ANR	3851054	Identifier	key_len		3850998	1					
ANR	3851055	Parameter	const char * str	1563:81:40976:40990	3850998	3	True				
ANR	3851056	ParameterType	const char *		3850998	0					
ANR	3851057	Identifier	str		3850998	1					
ANR	3851058	CFGEntryNode	ENTRY		3850998		True				
ANR	3851059	CFGExitNode	EXIT		3850998		True				
ANR	3851060	Symbol	str		3850998						
ANR	3851061	Symbol	ret		3850998						
ANR	3851062	Symbol	tmp		3850998						
ANR	3851063	Symbol	arg		3850998						
ANR	3851064	Symbol	& tmp		3850998						
ANR	3851065	Symbol	zend_symtable_str_update		3850998						
ANR	3851066	Symbol	Z_ARRVAL_P		3850998						
ANR	3851067	Symbol	key		3850998						
ANR	3851068	Symbol	key_len		3850998						
ANR	3851069	Function	add_get_assoc_stringl_ex	1573:0:41144:41405							
ANR	3851070	FunctionDef	"add_get_assoc_stringl_ex (zval * arg , const char * key , uint key_len , const char * str , size_t length)"		3851069	0					
ANR	3851071	CompoundStatement		1574:0:41268:41405	3851069	0					
ANR	3851072	IdentifierDeclStatement	"zval tmp , * ret ;"	1575:1:41271:41285	3851069	0	True				
ANR	3851073	IdentifierDecl	tmp		3851069	0					
ANR	3851074	IdentifierDeclType	zval		3851069	0					
ANR	3851075	Identifier	tmp		3851069	1					
ANR	3851076	IdentifierDecl	* ret		3851069	1					
ANR	3851077	IdentifierDeclType	zval *		3851069	0					
ANR	3851078	Identifier	ret		3851069	1					
ANR	3851079	ExpressionStatement	"ZVAL_STRINGL ( & tmp , str , length )"	1577:1:41289:41320	3851069	1	True				
ANR	3851080	CallExpression	"ZVAL_STRINGL ( & tmp , str , length )"		3851069	0					
ANR	3851081	Callee	ZVAL_STRINGL		3851069	0					
ANR	3851082	Identifier	ZVAL_STRINGL		3851069	0					
ANR	3851083	ArgumentList	& tmp		3851069	1					
ANR	3851084	Argument	& tmp		3851069	0					
ANR	3851085	UnaryOperationExpression	& tmp		3851069	0					
ANR	3851086	UnaryOperator	&		3851069	0					
ANR	3851087	Identifier	tmp		3851069	1					
ANR	3851088	Argument	str		3851069	1					
ANR	3851089	Identifier	str		3851069	0					
ANR	3851090	Argument	length		3851069	2					
ANR	3851091	Identifier	length		3851069	0					
ANR	3851092	ExpressionStatement	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"	1578:1:41323:41390	3851069	2	True				
ANR	3851093	AssignmentExpression	"ret = zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3851069	0		=			
ANR	3851094	Identifier	ret		3851069	0					
ANR	3851095	CallExpression	"zend_symtable_str_update ( Z_ARRVAL_P ( arg ) , key , key_len , & tmp )"		3851069	1					
ANR	3851096	Callee	zend_symtable_str_update		3851069	0					
ANR	3851097	Identifier	zend_symtable_str_update		3851069	0					
ANR	3851098	ArgumentList	Z_ARRVAL_P ( arg )		3851069	1					
ANR	3851099	Argument	Z_ARRVAL_P ( arg )		3851069	0					
ANR	3851100	CallExpression	Z_ARRVAL_P ( arg )		3851069	0					
ANR	3851101	Callee	Z_ARRVAL_P		3851069	0					
ANR	3851102	Identifier	Z_ARRVAL_P		3851069	0					
ANR	3851103	ArgumentList	arg		3851069	1					
ANR	3851104	Argument	arg		3851069	0					
ANR	3851105	Identifier	arg		3851069	0					
ANR	3851106	Argument	key		3851069	1					
ANR	3851107	Identifier	key		3851069	0					
ANR	3851108	Argument	key_len		3851069	2					
ANR	3851109	Identifier	key_len		3851069	0					
ANR	3851110	Argument	& tmp		3851069	3					
ANR	3851111	UnaryOperationExpression	& tmp		3851069	0					
ANR	3851112	UnaryOperator	&		3851069	0					
ANR	3851113	Identifier	tmp		3851069	1					
ANR	3851114	ReturnStatement	return ret ;	1579:1:41393:41403	3851069	3	True				
ANR	3851115	Identifier	ret		3851069	0					
ANR	3851116	ReturnType	ZEND_API zval *		3851069	1					
ANR	3851117	Identifier	add_get_assoc_stringl_ex		3851069	2					
ANR	3851118	ParameterList	"zval * arg , const char * key , uint key_len , const char * str , size_t length"		3851069	3					
ANR	3851119	Parameter	zval * arg	1573:40:41184:41192	3851069	0	True				
ANR	3851120	ParameterType	zval *		3851069	0					
ANR	3851121	Identifier	arg		3851069	1					
ANR	3851122	Parameter	const char * key	1573:51:41195:41209	3851069	1	True				
ANR	3851123	ParameterType	const char *		3851069	0					
ANR	3851124	Identifier	key		3851069	1					
ANR	3851125	Parameter	uint key_len	1573:68:41212:41223	3851069	2	True				
ANR	3851126	ParameterType	uint		3851069	0					
ANR	3851127	Identifier	key_len		3851069	1					
ANR	3851128	Parameter	const char * str	1573:82:41226:41240	3851069	3	True				
ANR	3851129	ParameterType	const char *		3851069	0					
ANR	3851130	Identifier	str		3851069	1					
ANR	3851131	Parameter	size_t length	1573:99:41243:41255	3851069	4	True				
ANR	3851132	ParameterType	size_t		3851069	0					
ANR	3851133	Identifier	length		3851069	1					
ANR	3851134	CFGEntryNode	ENTRY		3851069		True				
ANR	3851135	CFGExitNode	EXIT		3851069		True				
ANR	3851136	Symbol	str		3851069						
ANR	3851137	Symbol	ret		3851069						
ANR	3851138	Symbol	tmp		3851069						
ANR	3851139	Symbol	arg		3851069						
ANR	3851140	Symbol	length		3851069						
ANR	3851141	Symbol	& tmp		3851069						
ANR	3851142	Symbol	zend_symtable_str_update		3851069						
ANR	3851143	Symbol	Z_ARRVAL_P		3851069						
ANR	3851144	Symbol	key		3851069						
ANR	3851145	Symbol	key_len		3851069						
ANR	3851146	Function	add_get_index_long	1583:0:41418:41601							
ANR	3851147	FunctionDef	"add_get_index_long (zval * arg , zend_ulong index , zend_long l)"		3851146	0					
ANR	3851148	CompoundStatement		1584:0:41504:41601	3851146	0					
ANR	3851149	IdentifierDeclStatement	zval tmp ;	1585:1:41507:41515	3851146	0	True				
ANR	3851150	IdentifierDecl	tmp		3851146	0					
ANR	3851151	IdentifierDeclType	zval		3851146	0					
ANR	3851152	Identifier	tmp		3851146	1					
ANR	3851153	ExpressionStatement	"ZVAL_LONG ( & tmp , l )"	1587:1:41519:41537	3851146	1	True				
ANR	3851154	CallExpression	"ZVAL_LONG ( & tmp , l )"		3851146	0					
ANR	3851155	Callee	ZVAL_LONG		3851146	0					
ANR	3851156	Identifier	ZVAL_LONG		3851146	0					
ANR	3851157	ArgumentList	& tmp		3851146	1					
ANR	3851158	Argument	& tmp		3851146	0					
ANR	3851159	UnaryOperationExpression	& tmp		3851146	0					
ANR	3851160	UnaryOperator	&		3851146	0					
ANR	3851161	Identifier	tmp		3851146	1					
ANR	3851162	Argument	l		3851146	1					
ANR	3851163	Identifier	l		3851146	0					
ANR	3851164	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ;"	1588:1:41540:41599	3851146	2	True				
ANR	3851165	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3851146	0					
ANR	3851166	Callee	zend_hash_index_update		3851146	0					
ANR	3851167	Identifier	zend_hash_index_update		3851146	0					
ANR	3851168	ArgumentList	Z_ARRVAL_P ( arg )		3851146	1					
ANR	3851169	Argument	Z_ARRVAL_P ( arg )		3851146	0					
ANR	3851170	CallExpression	Z_ARRVAL_P ( arg )		3851146	0					
ANR	3851171	Callee	Z_ARRVAL_P		3851146	0					
ANR	3851172	Identifier	Z_ARRVAL_P		3851146	0					
ANR	3851173	ArgumentList	arg		3851146	1					
ANR	3851174	Argument	arg		3851146	0					
ANR	3851175	Identifier	arg		3851146	0					
ANR	3851176	Argument	index		3851146	1					
ANR	3851177	Identifier	index		3851146	0					
ANR	3851178	Argument	& tmp		3851146	2					
ANR	3851179	UnaryOperationExpression	& tmp		3851146	0					
ANR	3851180	UnaryOperator	&		3851146	0					
ANR	3851181	Identifier	tmp		3851146	1					
ANR	3851182	ReturnType	ZEND_API zval *		3851146	1					
ANR	3851183	Identifier	add_get_index_long		3851146	2					
ANR	3851184	ParameterList	"zval * arg , zend_ulong index , zend_long l"		3851146	3					
ANR	3851185	Parameter	zval * arg	1583:34:41452:41460	3851146	0	True				
ANR	3851186	ParameterType	zval *		3851146	0					
ANR	3851187	Identifier	arg		3851146	1					
ANR	3851188	Parameter	zend_ulong index	1583:45:41463:41478	3851146	1	True				
ANR	3851189	ParameterType	zend_ulong		3851146	0					
ANR	3851190	Identifier	index		3851146	1					
ANR	3851191	Parameter	zend_long l	1583:63:41481:41491	3851146	2	True				
ANR	3851192	ParameterType	zend_long		3851146	0					
ANR	3851193	Identifier	l		3851146	1					
ANR	3851194	CFGEntryNode	ENTRY		3851146		True				
ANR	3851195	CFGExitNode	EXIT		3851146		True				
ANR	3851196	Symbol	tmp		3851146						
ANR	3851197	Symbol	zend_hash_index_update		3851146						
ANR	3851198	Symbol	arg		3851146						
ANR	3851199	Symbol	index		3851146						
ANR	3851200	Symbol	& tmp		3851146						
ANR	3851201	Symbol	l		3851146						
ANR	3851202	Symbol	Z_ARRVAL_P		3851146						
ANR	3851203	Function	add_get_index_double	1592:0:41614:41798							
ANR	3851204	FunctionDef	"add_get_index_double (zval * arg , zend_ulong index , double d)"		3851203	0					
ANR	3851205	CompoundStatement		1593:0:41699:41798	3851203	0					
ANR	3851206	IdentifierDeclStatement	zval tmp ;	1594:1:41702:41710	3851203	0	True				
ANR	3851207	IdentifierDecl	tmp		3851203	0					
ANR	3851208	IdentifierDeclType	zval		3851203	0					
ANR	3851209	Identifier	tmp		3851203	1					
ANR	3851210	ExpressionStatement	"ZVAL_DOUBLE ( & tmp , d )"	1596:1:41714:41734	3851203	1	True				
ANR	3851211	CallExpression	"ZVAL_DOUBLE ( & tmp , d )"		3851203	0					
ANR	3851212	Callee	ZVAL_DOUBLE		3851203	0					
ANR	3851213	Identifier	ZVAL_DOUBLE		3851203	0					
ANR	3851214	ArgumentList	& tmp		3851203	1					
ANR	3851215	Argument	& tmp		3851203	0					
ANR	3851216	UnaryOperationExpression	& tmp		3851203	0					
ANR	3851217	UnaryOperator	&		3851203	0					
ANR	3851218	Identifier	tmp		3851203	1					
ANR	3851219	Argument	d		3851203	1					
ANR	3851220	Identifier	d		3851203	0					
ANR	3851221	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ;"	1597:1:41737:41796	3851203	2	True				
ANR	3851222	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3851203	0					
ANR	3851223	Callee	zend_hash_index_update		3851203	0					
ANR	3851224	Identifier	zend_hash_index_update		3851203	0					
ANR	3851225	ArgumentList	Z_ARRVAL_P ( arg )		3851203	1					
ANR	3851226	Argument	Z_ARRVAL_P ( arg )		3851203	0					
ANR	3851227	CallExpression	Z_ARRVAL_P ( arg )		3851203	0					
ANR	3851228	Callee	Z_ARRVAL_P		3851203	0					
ANR	3851229	Identifier	Z_ARRVAL_P		3851203	0					
ANR	3851230	ArgumentList	arg		3851203	1					
ANR	3851231	Argument	arg		3851203	0					
ANR	3851232	Identifier	arg		3851203	0					
ANR	3851233	Argument	index		3851203	1					
ANR	3851234	Identifier	index		3851203	0					
ANR	3851235	Argument	& tmp		3851203	2					
ANR	3851236	UnaryOperationExpression	& tmp		3851203	0					
ANR	3851237	UnaryOperator	&		3851203	0					
ANR	3851238	Identifier	tmp		3851203	1					
ANR	3851239	ReturnType	ZEND_API zval *		3851203	1					
ANR	3851240	Identifier	add_get_index_double		3851203	2					
ANR	3851241	ParameterList	"zval * arg , zend_ulong index , double d"		3851203	3					
ANR	3851242	Parameter	zval * arg	1592:36:41650:41658	3851203	0	True				
ANR	3851243	ParameterType	zval *		3851203	0					
ANR	3851244	Identifier	arg		3851203	1					
ANR	3851245	Parameter	zend_ulong index	1592:47:41661:41676	3851203	1	True				
ANR	3851246	ParameterType	zend_ulong		3851203	0					
ANR	3851247	Identifier	index		3851203	1					
ANR	3851248	Parameter	double d	1592:65:41679:41686	3851203	2	True				
ANR	3851249	ParameterType	double		3851203	0					
ANR	3851250	Identifier	d		3851203	1					
ANR	3851251	CFGEntryNode	ENTRY		3851203		True				
ANR	3851252	CFGExitNode	EXIT		3851203		True				
ANR	3851253	Symbol	d		3851203						
ANR	3851254	Symbol	tmp		3851203						
ANR	3851255	Symbol	zend_hash_index_update		3851203						
ANR	3851256	Symbol	arg		3851203						
ANR	3851257	Symbol	index		3851203						
ANR	3851258	Symbol	& tmp		3851203						
ANR	3851259	Symbol	Z_ARRVAL_P		3851203						
ANR	3851260	Function	add_get_index_str	1601:0:41811:41999							
ANR	3851261	FunctionDef	"add_get_index_str (zval * arg , zend_ulong index , zend_string * str)"		3851260	0					
ANR	3851262	CompoundStatement		1602:0:41901:41999	3851260	0					
ANR	3851263	IdentifierDeclStatement	zval tmp ;	1603:1:41904:41912	3851260	0	True				
ANR	3851264	IdentifierDecl	tmp		3851260	0					
ANR	3851265	IdentifierDeclType	zval		3851260	0					
ANR	3851266	Identifier	tmp		3851260	1					
ANR	3851267	ExpressionStatement	"ZVAL_STR ( & tmp , str )"	1605:1:41916:41935	3851260	1	True				
ANR	3851268	CallExpression	"ZVAL_STR ( & tmp , str )"		3851260	0					
ANR	3851269	Callee	ZVAL_STR		3851260	0					
ANR	3851270	Identifier	ZVAL_STR		3851260	0					
ANR	3851271	ArgumentList	& tmp		3851260	1					
ANR	3851272	Argument	& tmp		3851260	0					
ANR	3851273	UnaryOperationExpression	& tmp		3851260	0					
ANR	3851274	UnaryOperator	&		3851260	0					
ANR	3851275	Identifier	tmp		3851260	1					
ANR	3851276	Argument	str		3851260	1					
ANR	3851277	Identifier	str		3851260	0					
ANR	3851278	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ;"	1606:1:41938:41997	3851260	2	True				
ANR	3851279	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3851260	0					
ANR	3851280	Callee	zend_hash_index_update		3851260	0					
ANR	3851281	Identifier	zend_hash_index_update		3851260	0					
ANR	3851282	ArgumentList	Z_ARRVAL_P ( arg )		3851260	1					
ANR	3851283	Argument	Z_ARRVAL_P ( arg )		3851260	0					
ANR	3851284	CallExpression	Z_ARRVAL_P ( arg )		3851260	0					
ANR	3851285	Callee	Z_ARRVAL_P		3851260	0					
ANR	3851286	Identifier	Z_ARRVAL_P		3851260	0					
ANR	3851287	ArgumentList	arg		3851260	1					
ANR	3851288	Argument	arg		3851260	0					
ANR	3851289	Identifier	arg		3851260	0					
ANR	3851290	Argument	index		3851260	1					
ANR	3851291	Identifier	index		3851260	0					
ANR	3851292	Argument	& tmp		3851260	2					
ANR	3851293	UnaryOperationExpression	& tmp		3851260	0					
ANR	3851294	UnaryOperator	&		3851260	0					
ANR	3851295	Identifier	tmp		3851260	1					
ANR	3851296	ReturnType	ZEND_API zval *		3851260	1					
ANR	3851297	Identifier	add_get_index_str		3851260	2					
ANR	3851298	ParameterList	"zval * arg , zend_ulong index , zend_string * str"		3851260	3					
ANR	3851299	Parameter	zval * arg	1601:33:41844:41852	3851260	0	True				
ANR	3851300	ParameterType	zval *		3851260	0					
ANR	3851301	Identifier	arg		3851260	1					
ANR	3851302	Parameter	zend_ulong index	1601:44:41855:41870	3851260	1	True				
ANR	3851303	ParameterType	zend_ulong		3851260	0					
ANR	3851304	Identifier	index		3851260	1					
ANR	3851305	Parameter	zend_string * str	1601:62:41873:41888	3851260	2	True				
ANR	3851306	ParameterType	zend_string *		3851260	0					
ANR	3851307	Identifier	str		3851260	1					
ANR	3851308	CFGEntryNode	ENTRY		3851260		True				
ANR	3851309	CFGExitNode	EXIT		3851260		True				
ANR	3851310	Symbol	str		3851260						
ANR	3851311	Symbol	tmp		3851260						
ANR	3851312	Symbol	zend_hash_index_update		3851260						
ANR	3851313	Symbol	arg		3851260						
ANR	3851314	Symbol	index		3851260						
ANR	3851315	Symbol	& tmp		3851260						
ANR	3851316	Symbol	Z_ARRVAL_P		3851260						
ANR	3851317	Function	add_get_index_string	1610:0:42012:42205							
ANR	3851318	FunctionDef	"add_get_index_string (zval * arg , zend_ulong index , const char * str)"		3851317	0					
ANR	3851319	CompoundStatement		1611:0:42104:42205	3851317	0					
ANR	3851320	IdentifierDeclStatement	zval tmp ;	1612:1:42107:42115	3851317	0	True				
ANR	3851321	IdentifierDecl	tmp		3851317	0					
ANR	3851322	IdentifierDeclType	zval		3851317	0					
ANR	3851323	Identifier	tmp		3851317	1					
ANR	3851324	ExpressionStatement	"ZVAL_STRING ( & tmp , str )"	1614:1:42119:42141	3851317	1	True				
ANR	3851325	CallExpression	"ZVAL_STRING ( & tmp , str )"		3851317	0					
ANR	3851326	Callee	ZVAL_STRING		3851317	0					
ANR	3851327	Identifier	ZVAL_STRING		3851317	0					
ANR	3851328	ArgumentList	& tmp		3851317	1					
ANR	3851329	Argument	& tmp		3851317	0					
ANR	3851330	UnaryOperationExpression	& tmp		3851317	0					
ANR	3851331	UnaryOperator	&		3851317	0					
ANR	3851332	Identifier	tmp		3851317	1					
ANR	3851333	Argument	str		3851317	1					
ANR	3851334	Identifier	str		3851317	0					
ANR	3851335	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ;"	1615:1:42144:42203	3851317	2	True				
ANR	3851336	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3851317	0					
ANR	3851337	Callee	zend_hash_index_update		3851317	0					
ANR	3851338	Identifier	zend_hash_index_update		3851317	0					
ANR	3851339	ArgumentList	Z_ARRVAL_P ( arg )		3851317	1					
ANR	3851340	Argument	Z_ARRVAL_P ( arg )		3851317	0					
ANR	3851341	CallExpression	Z_ARRVAL_P ( arg )		3851317	0					
ANR	3851342	Callee	Z_ARRVAL_P		3851317	0					
ANR	3851343	Identifier	Z_ARRVAL_P		3851317	0					
ANR	3851344	ArgumentList	arg		3851317	1					
ANR	3851345	Argument	arg		3851317	0					
ANR	3851346	Identifier	arg		3851317	0					
ANR	3851347	Argument	index		3851317	1					
ANR	3851348	Identifier	index		3851317	0					
ANR	3851349	Argument	& tmp		3851317	2					
ANR	3851350	UnaryOperationExpression	& tmp		3851317	0					
ANR	3851351	UnaryOperator	&		3851317	0					
ANR	3851352	Identifier	tmp		3851317	1					
ANR	3851353	ReturnType	ZEND_API zval *		3851317	1					
ANR	3851354	Identifier	add_get_index_string		3851317	2					
ANR	3851355	ParameterList	"zval * arg , zend_ulong index , const char * str"		3851317	3					
ANR	3851356	Parameter	zval * arg	1610:36:42048:42056	3851317	0	True				
ANR	3851357	ParameterType	zval *		3851317	0					
ANR	3851358	Identifier	arg		3851317	1					
ANR	3851359	Parameter	zend_ulong index	1610:47:42059:42074	3851317	1	True				
ANR	3851360	ParameterType	zend_ulong		3851317	0					
ANR	3851361	Identifier	index		3851317	1					
ANR	3851362	Parameter	const char * str	1610:65:42077:42091	3851317	2	True				
ANR	3851363	ParameterType	const char *		3851317	0					
ANR	3851364	Identifier	str		3851317	1					
ANR	3851365	CFGEntryNode	ENTRY		3851317		True				
ANR	3851366	CFGExitNode	EXIT		3851317		True				
ANR	3851367	Symbol	str		3851317						
ANR	3851368	Symbol	tmp		3851317						
ANR	3851369	Symbol	zend_hash_index_update		3851317						
ANR	3851370	Symbol	arg		3851317						
ANR	3851371	Symbol	index		3851317						
ANR	3851372	Symbol	& tmp		3851317						
ANR	3851373	Symbol	Z_ARRVAL_P		3851317						
ANR	3851374	Function	add_get_index_stringl	1619:0:42218:42436							
ANR	3851375	FunctionDef	"add_get_index_stringl (zval * arg , zend_ulong index , const char * str , size_t length)"		3851374	0					
ANR	3851376	CompoundStatement		1620:0:42326:42436	3851374	0					
ANR	3851377	IdentifierDeclStatement	zval tmp ;	1621:1:42329:42337	3851374	0	True				
ANR	3851378	IdentifierDecl	tmp		3851374	0					
ANR	3851379	IdentifierDeclType	zval		3851374	0					
ANR	3851380	Identifier	tmp		3851374	1					
ANR	3851381	ExpressionStatement	"ZVAL_STRINGL ( & tmp , str , length )"	1623:1:42341:42372	3851374	1	True				
ANR	3851382	CallExpression	"ZVAL_STRINGL ( & tmp , str , length )"		3851374	0					
ANR	3851383	Callee	ZVAL_STRINGL		3851374	0					
ANR	3851384	Identifier	ZVAL_STRINGL		3851374	0					
ANR	3851385	ArgumentList	& tmp		3851374	1					
ANR	3851386	Argument	& tmp		3851374	0					
ANR	3851387	UnaryOperationExpression	& tmp		3851374	0					
ANR	3851388	UnaryOperator	&		3851374	0					
ANR	3851389	Identifier	tmp		3851374	1					
ANR	3851390	Argument	str		3851374	1					
ANR	3851391	Identifier	str		3851374	0					
ANR	3851392	Argument	length		3851374	2					
ANR	3851393	Identifier	length		3851374	0					
ANR	3851394	ReturnStatement	"return zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp ) ;"	1624:1:42375:42434	3851374	2	True				
ANR	3851395	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( arg ) , index , & tmp )"		3851374	0					
ANR	3851396	Callee	zend_hash_index_update		3851374	0					
ANR	3851397	Identifier	zend_hash_index_update		3851374	0					
ANR	3851398	ArgumentList	Z_ARRVAL_P ( arg )		3851374	1					
ANR	3851399	Argument	Z_ARRVAL_P ( arg )		3851374	0					
ANR	3851400	CallExpression	Z_ARRVAL_P ( arg )		3851374	0					
ANR	3851401	Callee	Z_ARRVAL_P		3851374	0					
ANR	3851402	Identifier	Z_ARRVAL_P		3851374	0					
ANR	3851403	ArgumentList	arg		3851374	1					
ANR	3851404	Argument	arg		3851374	0					
ANR	3851405	Identifier	arg		3851374	0					
ANR	3851406	Argument	index		3851374	1					
ANR	3851407	Identifier	index		3851374	0					
ANR	3851408	Argument	& tmp		3851374	2					
ANR	3851409	UnaryOperationExpression	& tmp		3851374	0					
ANR	3851410	UnaryOperator	&		3851374	0					
ANR	3851411	Identifier	tmp		3851374	1					
ANR	3851412	ReturnType	ZEND_API zval *		3851374	1					
ANR	3851413	Identifier	add_get_index_stringl		3851374	2					
ANR	3851414	ParameterList	"zval * arg , zend_ulong index , const char * str , size_t length"		3851374	3					
ANR	3851415	Parameter	zval * arg	1619:37:42255:42263	3851374	0	True				
ANR	3851416	ParameterType	zval *		3851374	0					
ANR	3851417	Identifier	arg		3851374	1					
ANR	3851418	Parameter	zend_ulong index	1619:48:42266:42281	3851374	1	True				
ANR	3851419	ParameterType	zend_ulong		3851374	0					
ANR	3851420	Identifier	index		3851374	1					
ANR	3851421	Parameter	const char * str	1619:66:42284:42298	3851374	2	True				
ANR	3851422	ParameterType	const char *		3851374	0					
ANR	3851423	Identifier	str		3851374	1					
ANR	3851424	Parameter	size_t length	1619:83:42301:42313	3851374	3	True				
ANR	3851425	ParameterType	size_t		3851374	0					
ANR	3851426	Identifier	length		3851374	1					
ANR	3851427	CFGEntryNode	ENTRY		3851374		True				
ANR	3851428	CFGExitNode	EXIT		3851374		True				
ANR	3851429	Symbol	str		3851374						
ANR	3851430	Symbol	tmp		3851374						
ANR	3851431	Symbol	zend_hash_index_update		3851374						
ANR	3851432	Symbol	arg		3851374						
ANR	3851433	Symbol	length		3851374						
ANR	3851434	Symbol	index		3851374						
ANR	3851435	Symbol	& tmp		3851374						
ANR	3851436	Symbol	Z_ARRVAL_P		3851374						
ANR	3851437	Function	array_set_zval_key	1628:0:42449:43546							
ANR	3851438	FunctionDef	"array_set_zval_key (HashTable * ht , zval * key , zval * value)"		3851437	0					
ANR	3851439	CompoundStatement		1629:0:42530:43546	3851437	0					
ANR	3851440	IdentifierDeclStatement	zval * result ;	1630:1:42533:42545	3851437	0	True				
ANR	3851441	IdentifierDecl	* result		3851437	0					
ANR	3851442	IdentifierDeclType	zval *		3851437	0					
ANR	3851443	Identifier	result		3851437	1					
ANR	3851444	SwitchStatement	switch ( Z_TYPE_P ( key ) )		3851437	1					
ANR	3851445	Condition	Z_TYPE_P ( key )	1632:9:42557:42569	3851437	0	True				
ANR	3851446	CallExpression	Z_TYPE_P ( key )		3851437	0					
ANR	3851447	Callee	Z_TYPE_P		3851437	0					
ANR	3851448	Identifier	Z_TYPE_P		3851437	0					
ANR	3851449	ArgumentList	key		3851437	1					
ANR	3851450	Argument	key		3851437	0					
ANR	3851451	Identifier	key		3851437	0					
ANR	3851452	CompoundStatement		4:24:41:41	3851437	1					
ANR	3851453	Label	case IS_STRING :	1633:2:42576:42590	3851437	0	True				
ANR	3851454	Identifier	IS_STRING		3851437	0					
ANR	3851455	ExpressionStatement	"result = zend_symtable_update ( ht , Z_STR_P ( key ) , value )"	1634:3:42595:42649	3851437	1	True				
ANR	3851456	AssignmentExpression	"result = zend_symtable_update ( ht , Z_STR_P ( key ) , value )"		3851437	0		=			
ANR	3851457	Identifier	result		3851437	0					
ANR	3851458	CallExpression	"zend_symtable_update ( ht , Z_STR_P ( key ) , value )"		3851437	1					
ANR	3851459	Callee	zend_symtable_update		3851437	0					
ANR	3851460	Identifier	zend_symtable_update		3851437	0					
ANR	3851461	ArgumentList	ht		3851437	1					
ANR	3851462	Argument	ht		3851437	0					
ANR	3851463	Identifier	ht		3851437	0					
ANR	3851464	Argument	Z_STR_P ( key )		3851437	1					
ANR	3851465	CallExpression	Z_STR_P ( key )		3851437	0					
ANR	3851466	Callee	Z_STR_P		3851437	0					
ANR	3851467	Identifier	Z_STR_P		3851437	0					
ANR	3851468	ArgumentList	key		3851437	1					
ANR	3851469	Argument	key		3851437	0					
ANR	3851470	Identifier	key		3851437	0					
ANR	3851471	Argument	value		3851437	2					
ANR	3851472	Identifier	value		3851437	0					
ANR	3851473	BreakStatement	break ;	1635:3:42654:42659	3851437	2	True				
ANR	3851474	Label	case IS_NULL :	1636:2:42663:42675	3851437	3	True				
ANR	3851475	Identifier	IS_NULL		3851437	0					
ANR	3851476	ExpressionStatement	"result = zend_symtable_update ( ht , ZSTR_EMPTY_ALLOC ( ) , value )"	1637:3:42680:42740	3851437	4	True				
ANR	3851477	AssignmentExpression	"result = zend_symtable_update ( ht , ZSTR_EMPTY_ALLOC ( ) , value )"		3851437	0		=			
ANR	3851478	Identifier	result		3851437	0					
ANR	3851479	CallExpression	"zend_symtable_update ( ht , ZSTR_EMPTY_ALLOC ( ) , value )"		3851437	1					
ANR	3851480	Callee	zend_symtable_update		3851437	0					
ANR	3851481	Identifier	zend_symtable_update		3851437	0					
ANR	3851482	ArgumentList	ht		3851437	1					
ANR	3851483	Argument	ht		3851437	0					
ANR	3851484	Identifier	ht		3851437	0					
ANR	3851485	Argument	ZSTR_EMPTY_ALLOC ( )		3851437	1					
ANR	3851486	CallExpression	ZSTR_EMPTY_ALLOC ( )		3851437	0					
ANR	3851487	Callee	ZSTR_EMPTY_ALLOC		3851437	0					
ANR	3851488	Identifier	ZSTR_EMPTY_ALLOC		3851437	0					
ANR	3851489	ArgumentList			3851437	1					
ANR	3851490	Argument	value		3851437	2					
ANR	3851491	Identifier	value		3851437	0					
ANR	3851492	BreakStatement	break ;	1638:3:42745:42750	3851437	5	True				
ANR	3851493	Label	case IS_RESOURCE :	1639:2:42754:42770	3851437	6	True				
ANR	3851494	Identifier	IS_RESOURCE		3851437	0					
ANR	3851495	Statement	zend_error	1640:3:42775:42784	3851437	7	True				
ANR	3851496	Statement	(	1640:13:42785:42785	3851437	8	True				
ANR	3851497	Statement	E_NOTICE	1640:14:42786:42793	3851437	9	True				
ANR	3851498	Statement	","	1640:22:42794:42794	3851437	10	True				
ANR	3851499	Statement	"""Resource ID#"""	1640:24:42796:42809	3851437	11	True				
ANR	3851500	Statement	ZEND_LONG_FMT	1640:39:42811:42823	3851437	12	True				
ANR	3851501	Statement	""" used as offset, casting to integer (%pd)"""	1640:53:42825:42867	3851437	13	True				
ANR	3851502	Statement	","	1640:96:42868:42868	3851437	14	True				
ANR	3851503	Statement	Z_RES_HANDLE_P	1640:98:42870:42883	3851437	15	True				
ANR	3851504	Statement	(	1640:112:42884:42884	3851437	16	True				
ANR	3851505	Statement	key	1640:113:42885:42887	3851437	17	True				
ANR	3851506	Statement	)	1640:116:42888:42888	3851437	18	True				
ANR	3851507	Statement	","	1640:117:42889:42889	3851437	19	True				
ANR	3851508	Statement	Z_RES_HANDLE_P	1640:119:42891:42904	3851437	20	True				
ANR	3851509	Statement	(	1640:133:42905:42905	3851437	21	True				
ANR	3851510	Statement	key	1640:134:42906:42908	3851437	22	True				
ANR	3851511	Statement	)	1640:137:42909:42909	3851437	23	True				
ANR	3851512	Statement	)	1640:138:42910:42910	3851437	24	True				
ANR	3851513	ExpressionStatement		1640:139:42911:42911	3851437	25	True				
ANR	3851514	ExpressionStatement	"result = zend_hash_index_update ( ht , Z_RES_HANDLE_P ( key ) , value )"	1641:3:42916:42979	3851437	26	True				
ANR	3851515	AssignmentExpression	"result = zend_hash_index_update ( ht , Z_RES_HANDLE_P ( key ) , value )"		3851437	0		=			
ANR	3851516	Identifier	result		3851437	0					
ANR	3851517	CallExpression	"zend_hash_index_update ( ht , Z_RES_HANDLE_P ( key ) , value )"		3851437	1					
ANR	3851518	Callee	zend_hash_index_update		3851437	0					
ANR	3851519	Identifier	zend_hash_index_update		3851437	0					
ANR	3851520	ArgumentList	ht		3851437	1					
ANR	3851521	Argument	ht		3851437	0					
ANR	3851522	Identifier	ht		3851437	0					
ANR	3851523	Argument	Z_RES_HANDLE_P ( key )		3851437	1					
ANR	3851524	CallExpression	Z_RES_HANDLE_P ( key )		3851437	0					
ANR	3851525	Callee	Z_RES_HANDLE_P		3851437	0					
ANR	3851526	Identifier	Z_RES_HANDLE_P		3851437	0					
ANR	3851527	ArgumentList	key		3851437	1					
ANR	3851528	Argument	key		3851437	0					
ANR	3851529	Identifier	key		3851437	0					
ANR	3851530	Argument	value		3851437	2					
ANR	3851531	Identifier	value		3851437	0					
ANR	3851532	BreakStatement	break ;	1642:3:42984:42989	3851437	27	True				
ANR	3851533	Label	case IS_FALSE :	1643:2:42993:43006	3851437	28	True				
ANR	3851534	Identifier	IS_FALSE		3851437	0					
ANR	3851535	ExpressionStatement	"result = zend_hash_index_update ( ht , 0 , value )"	1644:3:43011:43056	3851437	29	True				
ANR	3851536	AssignmentExpression	"result = zend_hash_index_update ( ht , 0 , value )"		3851437	0		=			
ANR	3851537	Identifier	result		3851437	0					
ANR	3851538	CallExpression	"zend_hash_index_update ( ht , 0 , value )"		3851437	1					
ANR	3851539	Callee	zend_hash_index_update		3851437	0					
ANR	3851540	Identifier	zend_hash_index_update		3851437	0					
ANR	3851541	ArgumentList	ht		3851437	1					
ANR	3851542	Argument	ht		3851437	0					
ANR	3851543	Identifier	ht		3851437	0					
ANR	3851544	Argument	0		3851437	1					
ANR	3851545	PrimaryExpression	0		3851437	0					
ANR	3851546	Argument	value		3851437	2					
ANR	3851547	Identifier	value		3851437	0					
ANR	3851548	BreakStatement	break ;	1645:3:43061:43066	3851437	30	True				
ANR	3851549	Label	case IS_TRUE :	1646:2:43070:43082	3851437	31	True				
ANR	3851550	Identifier	IS_TRUE		3851437	0					
ANR	3851551	ExpressionStatement	"result = zend_hash_index_update ( ht , 1 , value )"	1647:3:43087:43132	3851437	32	True				
ANR	3851552	AssignmentExpression	"result = zend_hash_index_update ( ht , 1 , value )"		3851437	0		=			
ANR	3851553	Identifier	result		3851437	0					
ANR	3851554	CallExpression	"zend_hash_index_update ( ht , 1 , value )"		3851437	1					
ANR	3851555	Callee	zend_hash_index_update		3851437	0					
ANR	3851556	Identifier	zend_hash_index_update		3851437	0					
ANR	3851557	ArgumentList	ht		3851437	1					
ANR	3851558	Argument	ht		3851437	0					
ANR	3851559	Identifier	ht		3851437	0					
ANR	3851560	Argument	1		3851437	1					
ANR	3851561	PrimaryExpression	1		3851437	0					
ANR	3851562	Argument	value		3851437	2					
ANR	3851563	Identifier	value		3851437	0					
ANR	3851564	BreakStatement	break ;	1648:3:43137:43142	3851437	33	True				
ANR	3851565	Label	case IS_LONG :	1649:2:43146:43158	3851437	34	True				
ANR	3851566	Identifier	IS_LONG		3851437	0					
ANR	3851567	ExpressionStatement	"result = zend_hash_index_update ( ht , Z_LVAL_P ( key ) , value )"	1650:3:43163:43220	3851437	35	True				
ANR	3851568	AssignmentExpression	"result = zend_hash_index_update ( ht , Z_LVAL_P ( key ) , value )"		3851437	0		=			
ANR	3851569	Identifier	result		3851437	0					
ANR	3851570	CallExpression	"zend_hash_index_update ( ht , Z_LVAL_P ( key ) , value )"		3851437	1					
ANR	3851571	Callee	zend_hash_index_update		3851437	0					
ANR	3851572	Identifier	zend_hash_index_update		3851437	0					
ANR	3851573	ArgumentList	ht		3851437	1					
ANR	3851574	Argument	ht		3851437	0					
ANR	3851575	Identifier	ht		3851437	0					
ANR	3851576	Argument	Z_LVAL_P ( key )		3851437	1					
ANR	3851577	CallExpression	Z_LVAL_P ( key )		3851437	0					
ANR	3851578	Callee	Z_LVAL_P		3851437	0					
ANR	3851579	Identifier	Z_LVAL_P		3851437	0					
ANR	3851580	ArgumentList	key		3851437	1					
ANR	3851581	Argument	key		3851437	0					
ANR	3851582	Identifier	key		3851437	0					
ANR	3851583	Argument	value		3851437	2					
ANR	3851584	Identifier	value		3851437	0					
ANR	3851585	BreakStatement	break ;	1651:3:43225:43230	3851437	36	True				
ANR	3851586	Label	case IS_DOUBLE :	1652:2:43234:43248	3851437	37	True				
ANR	3851587	Identifier	IS_DOUBLE		3851437	0					
ANR	3851588	ExpressionStatement	"result = zend_hash_index_update ( ht , zend_dval_to_lval ( Z_DVAL_P ( key ) ) , value )"	1653:3:43253:43329	3851437	38	True				
ANR	3851589	AssignmentExpression	"result = zend_hash_index_update ( ht , zend_dval_to_lval ( Z_DVAL_P ( key ) ) , value )"		3851437	0		=			
ANR	3851590	Identifier	result		3851437	0					
ANR	3851591	CallExpression	"zend_hash_index_update ( ht , zend_dval_to_lval ( Z_DVAL_P ( key ) ) , value )"		3851437	1					
ANR	3851592	Callee	zend_hash_index_update		3851437	0					
ANR	3851593	Identifier	zend_hash_index_update		3851437	0					
ANR	3851594	ArgumentList	ht		3851437	1					
ANR	3851595	Argument	ht		3851437	0					
ANR	3851596	Identifier	ht		3851437	0					
ANR	3851597	Argument	zend_dval_to_lval ( Z_DVAL_P ( key ) )		3851437	1					
ANR	3851598	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( key ) )		3851437	0					
ANR	3851599	Callee	zend_dval_to_lval		3851437	0					
ANR	3851600	Identifier	zend_dval_to_lval		3851437	0					
ANR	3851601	ArgumentList	Z_DVAL_P ( key )		3851437	1					
ANR	3851602	Argument	Z_DVAL_P ( key )		3851437	0					
ANR	3851603	CallExpression	Z_DVAL_P ( key )		3851437	0					
ANR	3851604	Callee	Z_DVAL_P		3851437	0					
ANR	3851605	Identifier	Z_DVAL_P		3851437	0					
ANR	3851606	ArgumentList	key		3851437	1					
ANR	3851607	Argument	key		3851437	0					
ANR	3851608	Identifier	key		3851437	0					
ANR	3851609	Argument	value		3851437	2					
ANR	3851610	Identifier	value		3851437	0					
ANR	3851611	BreakStatement	break ;	1654:3:43334:43339	3851437	39	True				
ANR	3851612	Label	default :	1655:2:43343:43350	3851437	40	True				
ANR	3851613	Identifier	default		3851437	0					
ANR	3851614	ExpressionStatement	"zend_error ( E_WARNING , ""Illegal offset type"" )"	1656:3:43355:43399	3851437	41	True				
ANR	3851615	CallExpression	"zend_error ( E_WARNING , ""Illegal offset type"" )"		3851437	0					
ANR	3851616	Callee	zend_error		3851437	0					
ANR	3851617	Identifier	zend_error		3851437	0					
ANR	3851618	ArgumentList	E_WARNING		3851437	1					
ANR	3851619	Argument	E_WARNING		3851437	0					
ANR	3851620	Identifier	E_WARNING		3851437	0					
ANR	3851621	Argument	"""Illegal offset type"""		3851437	1					
ANR	3851622	PrimaryExpression	"""Illegal offset type"""		3851437	0					
ANR	3851623	ExpressionStatement	result = NULL	1657:3:43404:43417	3851437	42	True				
ANR	3851624	AssignmentExpression	result = NULL		3851437	0		=			
ANR	3851625	Identifier	result		3851437	0					
ANR	3851626	Identifier	NULL		3851437	1					
ANR	3851627	IfStatement	if ( result )		3851437	2					
ANR	3851628	Condition	result	1660:5:43428:43433	3851437	0	True				
ANR	3851629	Identifier	result		3851437	0					
ANR	3851630	CompoundStatement		32:13:905:905	3851437	1					
ANR	3851631	IfStatement	if ( Z_REFCOUNTED_P ( result ) )		3851437	0					
ANR	3851632	Condition	Z_REFCOUNTED_P ( result )	1661:6:43444:43465	3851437	0	True				
ANR	3851633	CallExpression	Z_REFCOUNTED_P ( result )		3851437	0					
ANR	3851634	Callee	Z_REFCOUNTED_P		3851437	0					
ANR	3851635	Identifier	Z_REFCOUNTED_P		3851437	0					
ANR	3851636	ArgumentList	result		3851437	1					
ANR	3851637	Argument	result		3851437	0					
ANR	3851638	Identifier	result		3851437	0					
ANR	3851639	CompoundStatement		33:30:937:937	3851437	1					
ANR	3851640	ExpressionStatement	Z_ADDREF_P ( result )	1662:3:43473:43491	3851437	0	True				
ANR	3851641	CallExpression	Z_ADDREF_P ( result )		3851437	0					
ANR	3851642	Callee	Z_ADDREF_P		3851437	0					
ANR	3851643	Identifier	Z_ADDREF_P		3851437	0					
ANR	3851644	ArgumentList	result		3851437	1					
ANR	3851645	Argument	result		3851437	0					
ANR	3851646	Identifier	result		3851437	0					
ANR	3851647	ReturnStatement	return SUCCESS ;	1664:2:43499:43513	3851437	1	True				
ANR	3851648	Identifier	SUCCESS		3851437	0					
ANR	3851649	ElseStatement	else		3851437	0					
ANR	3851650	CompoundStatement		37:8:992:992	3851437	0					
ANR	3851651	ReturnStatement	return FAILURE ;	1666:2:43527:43541	3851437	0	True				
ANR	3851652	Identifier	FAILURE		3851437	0					
ANR	3851653	ReturnType	ZEND_API int		3851437	1					
ANR	3851654	Identifier	array_set_zval_key		3851437	2					
ANR	3851655	ParameterList	"HashTable * ht , zval * key , zval * value"		3851437	3					
ANR	3851656	Parameter	HashTable * ht	1628:32:42481:42493	3851437	0	True				
ANR	3851657	ParameterType	HashTable *		3851437	0					
ANR	3851658	Identifier	ht		3851437	1					
ANR	3851659	Parameter	zval * key	1628:47:42496:42504	3851437	1	True				
ANR	3851660	ParameterType	zval *		3851437	0					
ANR	3851661	Identifier	key		3851437	1					
ANR	3851662	Parameter	zval * value	1628:58:42507:42517	3851437	2	True				
ANR	3851663	ParameterType	zval *		3851437	0					
ANR	3851664	Identifier	value		3851437	1					
ANR	3851665	CFGEntryNode	ENTRY		3851437		True				
ANR	3851666	CFGExitNode	EXIT		3851437		True				
ANR	3851667	Symbol	Z_RES_HANDLE_P		3851437						
ANR	3851668	Symbol	NULL		3851437						
ANR	3851669	Symbol	SUCCESS		3851437						
ANR	3851670	Symbol	zend_hash_index_update		3851437						
ANR	3851671	Symbol	ht		3851437						
ANR	3851672	Symbol	Z_TYPE_P		3851437						
ANR	3851673	Symbol	FAILURE		3851437						
ANR	3851674	Symbol	ZSTR_EMPTY_ALLOC		3851437						
ANR	3851675	Symbol	Z_DVAL_P		3851437						
ANR	3851676	Symbol	Z_LVAL_P		3851437						
ANR	3851677	Symbol	result		3851437						
ANR	3851678	Symbol	zend_dval_to_lval		3851437						
ANR	3851679	Symbol	E_WARNING		3851437						
ANR	3851680	Symbol	Z_STR_P		3851437						
ANR	3851681	Symbol	Z_REFCOUNTED_P		3851437						
ANR	3851682	Symbol	value		3851437						
ANR	3851683	Symbol	key		3851437						
ANR	3851684	Symbol	zend_symtable_update		3851437						
ANR	3851685	Function	add_property_long_ex	1671:0:43559:43916							
ANR	3851686	FunctionDef	"add_property_long_ex (zval * arg , const char * key , size_t key_len , zend_long n)"		3851685	0					
ANR	3851687	CompoundStatement		1672:0:43660:43916	3851685	0					
ANR	3851688	IdentifierDeclStatement	zval tmp ;	1673:1:43663:43671	3851685	0	True				
ANR	3851689	IdentifierDecl	tmp		3851685	0					
ANR	3851690	IdentifierDeclType	zval		3851685	0					
ANR	3851691	Identifier	tmp		3851685	1					
ANR	3851692	IdentifierDeclStatement	zval z_key ;	1674:1:43674:43684	3851685	1	True				
ANR	3851693	IdentifierDecl	z_key		3851685	0					
ANR	3851694	IdentifierDeclType	zval		3851685	0					
ANR	3851695	Identifier	z_key		3851685	1					
ANR	3851696	ExpressionStatement	"ZVAL_LONG ( & tmp , n )"	1676:1:43688:43706	3851685	2	True				
ANR	3851697	CallExpression	"ZVAL_LONG ( & tmp , n )"		3851685	0					
ANR	3851698	Callee	ZVAL_LONG		3851685	0					
ANR	3851699	Identifier	ZVAL_LONG		3851685	0					
ANR	3851700	ArgumentList	& tmp		3851685	1					
ANR	3851701	Argument	& tmp		3851685	0					
ANR	3851702	UnaryOperationExpression	& tmp		3851685	0					
ANR	3851703	UnaryOperator	&		3851685	0					
ANR	3851704	Identifier	tmp		3851685	1					
ANR	3851705	Argument	n		3851685	1					
ANR	3851706	Identifier	n		3851685	0					
ANR	3851707	ExpressionStatement	"ZVAL_STRINGL ( & z_key , key , key_len )"	1677:1:43709:43743	3851685	3	True				
ANR	3851708	CallExpression	"ZVAL_STRINGL ( & z_key , key , key_len )"		3851685	0					
ANR	3851709	Callee	ZVAL_STRINGL		3851685	0					
ANR	3851710	Identifier	ZVAL_STRINGL		3851685	0					
ANR	3851711	ArgumentList	& z_key		3851685	1					
ANR	3851712	Argument	& z_key		3851685	0					
ANR	3851713	UnaryOperationExpression	& z_key		3851685	0					
ANR	3851714	UnaryOperator	&		3851685	0					
ANR	3851715	Identifier	z_key		3851685	1					
ANR	3851716	Argument	key		3851685	1					
ANR	3851717	Identifier	key		3851685	0					
ANR	3851718	Argument	key_len		3851685	2					
ANR	3851719	Identifier	key_len		3851685	0					
ANR	3851720	ExpressionStatement	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"	1678:1:43746:43807	3851685	4	True				
ANR	3851721	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"		3851685	0					
ANR	3851722	Callee	"Z_OBJ_HANDLER_P ( arg , write_property )"		3851685	0					
ANR	3851723	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property )"		3851685	0					
ANR	3851724	Callee	Z_OBJ_HANDLER_P		3851685	0					
ANR	3851725	Identifier	Z_OBJ_HANDLER_P		3851685	0					
ANR	3851726	ArgumentList	arg		3851685	1					
ANR	3851727	Argument	arg		3851685	0					
ANR	3851728	Identifier	arg		3851685	0					
ANR	3851729	Argument	write_property		3851685	1					
ANR	3851730	Identifier	write_property		3851685	0					
ANR	3851731	ArgumentList	arg		3851685	1					
ANR	3851732	Argument	arg		3851685	0					
ANR	3851733	Identifier	arg		3851685	0					
ANR	3851734	Argument	& z_key		3851685	1					
ANR	3851735	UnaryOperationExpression	& z_key		3851685	0					
ANR	3851736	UnaryOperator	&		3851685	0					
ANR	3851737	Identifier	z_key		3851685	1					
ANR	3851738	Argument	& tmp		3851685	2					
ANR	3851739	UnaryOperationExpression	& tmp		3851685	0					
ANR	3851740	UnaryOperator	&		3851685	0					
ANR	3851741	Identifier	tmp		3851685	1					
ANR	3851742	Argument	NULL		3851685	3					
ANR	3851743	Identifier	NULL		3851685	0					
ANR	3851744	ExpressionStatement	zval_ptr_dtor ( & tmp )	1679:1:43810:43829	3851685	5	True				
ANR	3851745	CallExpression	zval_ptr_dtor ( & tmp )		3851685	0					
ANR	3851746	Callee	zval_ptr_dtor		3851685	0					
ANR	3851747	Identifier	zval_ptr_dtor		3851685	0					
ANR	3851748	ArgumentList	& tmp		3851685	1					
ANR	3851749	Argument	& tmp		3851685	0					
ANR	3851750	UnaryOperationExpression	& tmp		3851685	0					
ANR	3851751	UnaryOperator	&		3851685	0					
ANR	3851752	Identifier	tmp		3851685	1					
ANR	3851753	ExpressionStatement	zval_ptr_dtor ( & z_key )	1680:1:43876:43897	3851685	6	True				
ANR	3851754	CallExpression	zval_ptr_dtor ( & z_key )		3851685	0					
ANR	3851755	Callee	zval_ptr_dtor		3851685	0					
ANR	3851756	Identifier	zval_ptr_dtor		3851685	0					
ANR	3851757	ArgumentList	& z_key		3851685	1					
ANR	3851758	Argument	& z_key		3851685	0					
ANR	3851759	UnaryOperationExpression	& z_key		3851685	0					
ANR	3851760	UnaryOperator	&		3851685	0					
ANR	3851761	Identifier	z_key		3851685	1					
ANR	3851762	ReturnStatement	return SUCCESS ;	1681:1:43900:43914	3851685	7	True				
ANR	3851763	Identifier	SUCCESS		3851685	0					
ANR	3851764	ReturnType	ZEND_API int		3851685	1					
ANR	3851765	Identifier	add_property_long_ex		3851685	2					
ANR	3851766	ParameterList	"zval * arg , const char * key , size_t key_len , zend_long n"		3851685	3					
ANR	3851767	Parameter	zval * arg	1671:34:43593:43601	3851685	0	True				
ANR	3851768	ParameterType	zval *		3851685	0					
ANR	3851769	Identifier	arg		3851685	1					
ANR	3851770	Parameter	const char * key	1671:45:43604:43618	3851685	1	True				
ANR	3851771	ParameterType	const char *		3851685	0					
ANR	3851772	Identifier	key		3851685	1					
ANR	3851773	Parameter	size_t key_len	1671:62:43621:43634	3851685	2	True				
ANR	3851774	ParameterType	size_t		3851685	0					
ANR	3851775	Identifier	key_len		3851685	1					
ANR	3851776	Parameter	zend_long n	1671:78:43637:43647	3851685	3	True				
ANR	3851777	ParameterType	zend_long		3851685	0					
ANR	3851778	Identifier	n		3851685	1					
ANR	3851779	CFGEntryNode	ENTRY		3851685		True				
ANR	3851780	CFGExitNode	EXIT		3851685		True				
ANR	3851781	Symbol	NULL		3851685						
ANR	3851782	Symbol	SUCCESS		3851685						
ANR	3851783	Symbol	tmp		3851685						
ANR	3851784	Symbol	arg		3851685						
ANR	3851785	Symbol	write_property		3851685						
ANR	3851786	Symbol	& tmp		3851685						
ANR	3851787	Symbol	& z_key		3851685						
ANR	3851788	Symbol	key		3851685						
ANR	3851789	Symbol	n		3851685						
ANR	3851790	Symbol	z_key		3851685						
ANR	3851791	Symbol	key_len		3851685						
ANR	3851792	Function	add_property_bool_ex	1685:0:43929:44286							
ANR	3851793	FunctionDef	"add_property_bool_ex (zval * arg , const char * key , size_t key_len , zend_long b)"		3851792	0					
ANR	3851794	CompoundStatement		1686:0:44030:44286	3851792	0					
ANR	3851795	IdentifierDeclStatement	zval tmp ;	1687:1:44033:44041	3851792	0	True				
ANR	3851796	IdentifierDecl	tmp		3851792	0					
ANR	3851797	IdentifierDeclType	zval		3851792	0					
ANR	3851798	Identifier	tmp		3851792	1					
ANR	3851799	IdentifierDeclStatement	zval z_key ;	1688:1:44044:44054	3851792	1	True				
ANR	3851800	IdentifierDecl	z_key		3851792	0					
ANR	3851801	IdentifierDeclType	zval		3851792	0					
ANR	3851802	Identifier	z_key		3851792	1					
ANR	3851803	ExpressionStatement	"ZVAL_BOOL ( & tmp , b )"	1690:1:44058:44076	3851792	2	True				
ANR	3851804	CallExpression	"ZVAL_BOOL ( & tmp , b )"		3851792	0					
ANR	3851805	Callee	ZVAL_BOOL		3851792	0					
ANR	3851806	Identifier	ZVAL_BOOL		3851792	0					
ANR	3851807	ArgumentList	& tmp		3851792	1					
ANR	3851808	Argument	& tmp		3851792	0					
ANR	3851809	UnaryOperationExpression	& tmp		3851792	0					
ANR	3851810	UnaryOperator	&		3851792	0					
ANR	3851811	Identifier	tmp		3851792	1					
ANR	3851812	Argument	b		3851792	1					
ANR	3851813	Identifier	b		3851792	0					
ANR	3851814	ExpressionStatement	"ZVAL_STRINGL ( & z_key , key , key_len )"	1691:1:44079:44113	3851792	3	True				
ANR	3851815	CallExpression	"ZVAL_STRINGL ( & z_key , key , key_len )"		3851792	0					
ANR	3851816	Callee	ZVAL_STRINGL		3851792	0					
ANR	3851817	Identifier	ZVAL_STRINGL		3851792	0					
ANR	3851818	ArgumentList	& z_key		3851792	1					
ANR	3851819	Argument	& z_key		3851792	0					
ANR	3851820	UnaryOperationExpression	& z_key		3851792	0					
ANR	3851821	UnaryOperator	&		3851792	0					
ANR	3851822	Identifier	z_key		3851792	1					
ANR	3851823	Argument	key		3851792	1					
ANR	3851824	Identifier	key		3851792	0					
ANR	3851825	Argument	key_len		3851792	2					
ANR	3851826	Identifier	key_len		3851792	0					
ANR	3851827	ExpressionStatement	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"	1692:1:44116:44177	3851792	4	True				
ANR	3851828	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"		3851792	0					
ANR	3851829	Callee	"Z_OBJ_HANDLER_P ( arg , write_property )"		3851792	0					
ANR	3851830	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property )"		3851792	0					
ANR	3851831	Callee	Z_OBJ_HANDLER_P		3851792	0					
ANR	3851832	Identifier	Z_OBJ_HANDLER_P		3851792	0					
ANR	3851833	ArgumentList	arg		3851792	1					
ANR	3851834	Argument	arg		3851792	0					
ANR	3851835	Identifier	arg		3851792	0					
ANR	3851836	Argument	write_property		3851792	1					
ANR	3851837	Identifier	write_property		3851792	0					
ANR	3851838	ArgumentList	arg		3851792	1					
ANR	3851839	Argument	arg		3851792	0					
ANR	3851840	Identifier	arg		3851792	0					
ANR	3851841	Argument	& z_key		3851792	1					
ANR	3851842	UnaryOperationExpression	& z_key		3851792	0					
ANR	3851843	UnaryOperator	&		3851792	0					
ANR	3851844	Identifier	z_key		3851792	1					
ANR	3851845	Argument	& tmp		3851792	2					
ANR	3851846	UnaryOperationExpression	& tmp		3851792	0					
ANR	3851847	UnaryOperator	&		3851792	0					
ANR	3851848	Identifier	tmp		3851792	1					
ANR	3851849	Argument	NULL		3851792	3					
ANR	3851850	Identifier	NULL		3851792	0					
ANR	3851851	ExpressionStatement	zval_ptr_dtor ( & tmp )	1693:1:44180:44199	3851792	5	True				
ANR	3851852	CallExpression	zval_ptr_dtor ( & tmp )		3851792	0					
ANR	3851853	Callee	zval_ptr_dtor		3851792	0					
ANR	3851854	Identifier	zval_ptr_dtor		3851792	0					
ANR	3851855	ArgumentList	& tmp		3851792	1					
ANR	3851856	Argument	& tmp		3851792	0					
ANR	3851857	UnaryOperationExpression	& tmp		3851792	0					
ANR	3851858	UnaryOperator	&		3851792	0					
ANR	3851859	Identifier	tmp		3851792	1					
ANR	3851860	ExpressionStatement	zval_ptr_dtor ( & z_key )	1694:1:44246:44267	3851792	6	True				
ANR	3851861	CallExpression	zval_ptr_dtor ( & z_key )		3851792	0					
ANR	3851862	Callee	zval_ptr_dtor		3851792	0					
ANR	3851863	Identifier	zval_ptr_dtor		3851792	0					
ANR	3851864	ArgumentList	& z_key		3851792	1					
ANR	3851865	Argument	& z_key		3851792	0					
ANR	3851866	UnaryOperationExpression	& z_key		3851792	0					
ANR	3851867	UnaryOperator	&		3851792	0					
ANR	3851868	Identifier	z_key		3851792	1					
ANR	3851869	ReturnStatement	return SUCCESS ;	1695:1:44270:44284	3851792	7	True				
ANR	3851870	Identifier	SUCCESS		3851792	0					
ANR	3851871	ReturnType	ZEND_API int		3851792	1					
ANR	3851872	Identifier	add_property_bool_ex		3851792	2					
ANR	3851873	ParameterList	"zval * arg , const char * key , size_t key_len , zend_long b"		3851792	3					
ANR	3851874	Parameter	zval * arg	1685:34:43963:43971	3851792	0	True				
ANR	3851875	ParameterType	zval *		3851792	0					
ANR	3851876	Identifier	arg		3851792	1					
ANR	3851877	Parameter	const char * key	1685:45:43974:43988	3851792	1	True				
ANR	3851878	ParameterType	const char *		3851792	0					
ANR	3851879	Identifier	key		3851792	1					
ANR	3851880	Parameter	size_t key_len	1685:62:43991:44004	3851792	2	True				
ANR	3851881	ParameterType	size_t		3851792	0					
ANR	3851882	Identifier	key_len		3851792	1					
ANR	3851883	Parameter	zend_long b	1685:78:44007:44017	3851792	3	True				
ANR	3851884	ParameterType	zend_long		3851792	0					
ANR	3851885	Identifier	b		3851792	1					
ANR	3851886	CFGEntryNode	ENTRY		3851792		True				
ANR	3851887	CFGExitNode	EXIT		3851792		True				
ANR	3851888	Symbol	b		3851792						
ANR	3851889	Symbol	NULL		3851792						
ANR	3851890	Symbol	SUCCESS		3851792						
ANR	3851891	Symbol	tmp		3851792						
ANR	3851892	Symbol	arg		3851792						
ANR	3851893	Symbol	write_property		3851792						
ANR	3851894	Symbol	& tmp		3851792						
ANR	3851895	Symbol	& z_key		3851792						
ANR	3851896	Symbol	key		3851792						
ANR	3851897	Symbol	z_key		3851792						
ANR	3851898	Symbol	key_len		3851792						
ANR	3851899	Function	add_property_null_ex	1699:0:44299:44640							
ANR	3851900	FunctionDef	"add_property_null_ex (zval * arg , const char * key , size_t key_len)"		3851899	0					
ANR	3851901	CompoundStatement		1700:0:44387:44640	3851899	0					
ANR	3851902	IdentifierDeclStatement	zval tmp ;	1701:1:44390:44398	3851899	0	True				
ANR	3851903	IdentifierDecl	tmp		3851899	0					
ANR	3851904	IdentifierDeclType	zval		3851899	0					
ANR	3851905	Identifier	tmp		3851899	1					
ANR	3851906	IdentifierDeclStatement	zval z_key ;	1702:1:44401:44411	3851899	1	True				
ANR	3851907	IdentifierDecl	z_key		3851899	0					
ANR	3851908	IdentifierDeclType	zval		3851899	0					
ANR	3851909	Identifier	z_key		3851899	1					
ANR	3851910	ExpressionStatement	ZVAL_NULL ( & tmp )	1704:1:44415:44430	3851899	2	True				
ANR	3851911	CallExpression	ZVAL_NULL ( & tmp )		3851899	0					
ANR	3851912	Callee	ZVAL_NULL		3851899	0					
ANR	3851913	Identifier	ZVAL_NULL		3851899	0					
ANR	3851914	ArgumentList	& tmp		3851899	1					
ANR	3851915	Argument	& tmp		3851899	0					
ANR	3851916	UnaryOperationExpression	& tmp		3851899	0					
ANR	3851917	UnaryOperator	&		3851899	0					
ANR	3851918	Identifier	tmp		3851899	1					
ANR	3851919	ExpressionStatement	"ZVAL_STRINGL ( & z_key , key , key_len )"	1705:1:44433:44467	3851899	3	True				
ANR	3851920	CallExpression	"ZVAL_STRINGL ( & z_key , key , key_len )"		3851899	0					
ANR	3851921	Callee	ZVAL_STRINGL		3851899	0					
ANR	3851922	Identifier	ZVAL_STRINGL		3851899	0					
ANR	3851923	ArgumentList	& z_key		3851899	1					
ANR	3851924	Argument	& z_key		3851899	0					
ANR	3851925	UnaryOperationExpression	& z_key		3851899	0					
ANR	3851926	UnaryOperator	&		3851899	0					
ANR	3851927	Identifier	z_key		3851899	1					
ANR	3851928	Argument	key		3851899	1					
ANR	3851929	Identifier	key		3851899	0					
ANR	3851930	Argument	key_len		3851899	2					
ANR	3851931	Identifier	key_len		3851899	0					
ANR	3851932	ExpressionStatement	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"	1706:1:44470:44531	3851899	4	True				
ANR	3851933	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"		3851899	0					
ANR	3851934	Callee	"Z_OBJ_HANDLER_P ( arg , write_property )"		3851899	0					
ANR	3851935	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property )"		3851899	0					
ANR	3851936	Callee	Z_OBJ_HANDLER_P		3851899	0					
ANR	3851937	Identifier	Z_OBJ_HANDLER_P		3851899	0					
ANR	3851938	ArgumentList	arg		3851899	1					
ANR	3851939	Argument	arg		3851899	0					
ANR	3851940	Identifier	arg		3851899	0					
ANR	3851941	Argument	write_property		3851899	1					
ANR	3851942	Identifier	write_property		3851899	0					
ANR	3851943	ArgumentList	arg		3851899	1					
ANR	3851944	Argument	arg		3851899	0					
ANR	3851945	Identifier	arg		3851899	0					
ANR	3851946	Argument	& z_key		3851899	1					
ANR	3851947	UnaryOperationExpression	& z_key		3851899	0					
ANR	3851948	UnaryOperator	&		3851899	0					
ANR	3851949	Identifier	z_key		3851899	1					
ANR	3851950	Argument	& tmp		3851899	2					
ANR	3851951	UnaryOperationExpression	& tmp		3851899	0					
ANR	3851952	UnaryOperator	&		3851899	0					
ANR	3851953	Identifier	tmp		3851899	1					
ANR	3851954	Argument	NULL		3851899	3					
ANR	3851955	Identifier	NULL		3851899	0					
ANR	3851956	ExpressionStatement	zval_ptr_dtor ( & tmp )	1707:1:44534:44553	3851899	5	True				
ANR	3851957	CallExpression	zval_ptr_dtor ( & tmp )		3851899	0					
ANR	3851958	Callee	zval_ptr_dtor		3851899	0					
ANR	3851959	Identifier	zval_ptr_dtor		3851899	0					
ANR	3851960	ArgumentList	& tmp		3851899	1					
ANR	3851961	Argument	& tmp		3851899	0					
ANR	3851962	UnaryOperationExpression	& tmp		3851899	0					
ANR	3851963	UnaryOperator	&		3851899	0					
ANR	3851964	Identifier	tmp		3851899	1					
ANR	3851965	ExpressionStatement	zval_ptr_dtor ( & z_key )	1708:1:44600:44621	3851899	6	True				
ANR	3851966	CallExpression	zval_ptr_dtor ( & z_key )		3851899	0					
ANR	3851967	Callee	zval_ptr_dtor		3851899	0					
ANR	3851968	Identifier	zval_ptr_dtor		3851899	0					
ANR	3851969	ArgumentList	& z_key		3851899	1					
ANR	3851970	Argument	& z_key		3851899	0					
ANR	3851971	UnaryOperationExpression	& z_key		3851899	0					
ANR	3851972	UnaryOperator	&		3851899	0					
ANR	3851973	Identifier	z_key		3851899	1					
ANR	3851974	ReturnStatement	return SUCCESS ;	1709:1:44624:44638	3851899	7	True				
ANR	3851975	Identifier	SUCCESS		3851899	0					
ANR	3851976	ReturnType	ZEND_API int		3851899	1					
ANR	3851977	Identifier	add_property_null_ex		3851899	2					
ANR	3851978	ParameterList	"zval * arg , const char * key , size_t key_len"		3851899	3					
ANR	3851979	Parameter	zval * arg	1699:34:44333:44341	3851899	0	True				
ANR	3851980	ParameterType	zval *		3851899	0					
ANR	3851981	Identifier	arg		3851899	1					
ANR	3851982	Parameter	const char * key	1699:45:44344:44358	3851899	1	True				
ANR	3851983	ParameterType	const char *		3851899	0					
ANR	3851984	Identifier	key		3851899	1					
ANR	3851985	Parameter	size_t key_len	1699:62:44361:44374	3851899	2	True				
ANR	3851986	ParameterType	size_t		3851899	0					
ANR	3851987	Identifier	key_len		3851899	1					
ANR	3851988	CFGEntryNode	ENTRY		3851899		True				
ANR	3851989	CFGExitNode	EXIT		3851899		True				
ANR	3851990	Symbol	NULL		3851899						
ANR	3851991	Symbol	SUCCESS		3851899						
ANR	3851992	Symbol	tmp		3851899						
ANR	3851993	Symbol	arg		3851899						
ANR	3851994	Symbol	write_property		3851899						
ANR	3851995	Symbol	& tmp		3851899						
ANR	3851996	Symbol	& z_key		3851899						
ANR	3851997	Symbol	key		3851899						
ANR	3851998	Symbol	z_key		3851899						
ANR	3851999	Symbol	key_len		3851899						
ANR	3852000	Function	add_property_resource_ex	1713:0:44653:45018							
ANR	3852001	FunctionDef	"add_property_resource_ex (zval * arg , const char * key , size_t key_len , zend_resource * r)"		3852000	0					
ANR	3852002	CompoundStatement		1714:0:44763:45018	3852000	0					
ANR	3852003	IdentifierDeclStatement	zval tmp ;	1715:1:44766:44774	3852000	0	True				
ANR	3852004	IdentifierDecl	tmp		3852000	0					
ANR	3852005	IdentifierDeclType	zval		3852000	0					
ANR	3852006	Identifier	tmp		3852000	1					
ANR	3852007	IdentifierDeclStatement	zval z_key ;	1716:1:44777:44787	3852000	1	True				
ANR	3852008	IdentifierDecl	z_key		3852000	0					
ANR	3852009	IdentifierDeclType	zval		3852000	0					
ANR	3852010	Identifier	z_key		3852000	1					
ANR	3852011	ExpressionStatement	"ZVAL_RES ( & tmp , r )"	1718:1:44791:44808	3852000	2	True				
ANR	3852012	CallExpression	"ZVAL_RES ( & tmp , r )"		3852000	0					
ANR	3852013	Callee	ZVAL_RES		3852000	0					
ANR	3852014	Identifier	ZVAL_RES		3852000	0					
ANR	3852015	ArgumentList	& tmp		3852000	1					
ANR	3852016	Argument	& tmp		3852000	0					
ANR	3852017	UnaryOperationExpression	& tmp		3852000	0					
ANR	3852018	UnaryOperator	&		3852000	0					
ANR	3852019	Identifier	tmp		3852000	1					
ANR	3852020	Argument	r		3852000	1					
ANR	3852021	Identifier	r		3852000	0					
ANR	3852022	ExpressionStatement	"ZVAL_STRINGL ( & z_key , key , key_len )"	1719:1:44811:44845	3852000	3	True				
ANR	3852023	CallExpression	"ZVAL_STRINGL ( & z_key , key , key_len )"		3852000	0					
ANR	3852024	Callee	ZVAL_STRINGL		3852000	0					
ANR	3852025	Identifier	ZVAL_STRINGL		3852000	0					
ANR	3852026	ArgumentList	& z_key		3852000	1					
ANR	3852027	Argument	& z_key		3852000	0					
ANR	3852028	UnaryOperationExpression	& z_key		3852000	0					
ANR	3852029	UnaryOperator	&		3852000	0					
ANR	3852030	Identifier	z_key		3852000	1					
ANR	3852031	Argument	key		3852000	1					
ANR	3852032	Identifier	key		3852000	0					
ANR	3852033	Argument	key_len		3852000	2					
ANR	3852034	Identifier	key_len		3852000	0					
ANR	3852035	ExpressionStatement	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"	1720:1:44848:44909	3852000	4	True				
ANR	3852036	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"		3852000	0					
ANR	3852037	Callee	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852000	0					
ANR	3852038	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852000	0					
ANR	3852039	Callee	Z_OBJ_HANDLER_P		3852000	0					
ANR	3852040	Identifier	Z_OBJ_HANDLER_P		3852000	0					
ANR	3852041	ArgumentList	arg		3852000	1					
ANR	3852042	Argument	arg		3852000	0					
ANR	3852043	Identifier	arg		3852000	0					
ANR	3852044	Argument	write_property		3852000	1					
ANR	3852045	Identifier	write_property		3852000	0					
ANR	3852046	ArgumentList	arg		3852000	1					
ANR	3852047	Argument	arg		3852000	0					
ANR	3852048	Identifier	arg		3852000	0					
ANR	3852049	Argument	& z_key		3852000	1					
ANR	3852050	UnaryOperationExpression	& z_key		3852000	0					
ANR	3852051	UnaryOperator	&		3852000	0					
ANR	3852052	Identifier	z_key		3852000	1					
ANR	3852053	Argument	& tmp		3852000	2					
ANR	3852054	UnaryOperationExpression	& tmp		3852000	0					
ANR	3852055	UnaryOperator	&		3852000	0					
ANR	3852056	Identifier	tmp		3852000	1					
ANR	3852057	Argument	NULL		3852000	3					
ANR	3852058	Identifier	NULL		3852000	0					
ANR	3852059	ExpressionStatement	zval_ptr_dtor ( & tmp )	1721:1:44912:44931	3852000	5	True				
ANR	3852060	CallExpression	zval_ptr_dtor ( & tmp )		3852000	0					
ANR	3852061	Callee	zval_ptr_dtor		3852000	0					
ANR	3852062	Identifier	zval_ptr_dtor		3852000	0					
ANR	3852063	ArgumentList	& tmp		3852000	1					
ANR	3852064	Argument	& tmp		3852000	0					
ANR	3852065	UnaryOperationExpression	& tmp		3852000	0					
ANR	3852066	UnaryOperator	&		3852000	0					
ANR	3852067	Identifier	tmp		3852000	1					
ANR	3852068	ExpressionStatement	zval_ptr_dtor ( & z_key )	1722:1:44978:44999	3852000	6	True				
ANR	3852069	CallExpression	zval_ptr_dtor ( & z_key )		3852000	0					
ANR	3852070	Callee	zval_ptr_dtor		3852000	0					
ANR	3852071	Identifier	zval_ptr_dtor		3852000	0					
ANR	3852072	ArgumentList	& z_key		3852000	1					
ANR	3852073	Argument	& z_key		3852000	0					
ANR	3852074	UnaryOperationExpression	& z_key		3852000	0					
ANR	3852075	UnaryOperator	&		3852000	0					
ANR	3852076	Identifier	z_key		3852000	1					
ANR	3852077	ReturnStatement	return SUCCESS ;	1723:1:45002:45016	3852000	7	True				
ANR	3852078	Identifier	SUCCESS		3852000	0					
ANR	3852079	ReturnType	ZEND_API int		3852000	1					
ANR	3852080	Identifier	add_property_resource_ex		3852000	2					
ANR	3852081	ParameterList	"zval * arg , const char * key , size_t key_len , zend_resource * r"		3852000	3					
ANR	3852082	Parameter	zval * arg	1713:38:44691:44699	3852000	0	True				
ANR	3852083	ParameterType	zval *		3852000	0					
ANR	3852084	Identifier	arg		3852000	1					
ANR	3852085	Parameter	const char * key	1713:49:44702:44716	3852000	1	True				
ANR	3852086	ParameterType	const char *		3852000	0					
ANR	3852087	Identifier	key		3852000	1					
ANR	3852088	Parameter	size_t key_len	1713:66:44719:44732	3852000	2	True				
ANR	3852089	ParameterType	size_t		3852000	0					
ANR	3852090	Identifier	key_len		3852000	1					
ANR	3852091	Parameter	zend_resource * r	1713:82:44735:44750	3852000	3	True				
ANR	3852092	ParameterType	zend_resource *		3852000	0					
ANR	3852093	Identifier	r		3852000	1					
ANR	3852094	CFGEntryNode	ENTRY		3852000		True				
ANR	3852095	CFGExitNode	EXIT		3852000		True				
ANR	3852096	Symbol	r		3852000						
ANR	3852097	Symbol	NULL		3852000						
ANR	3852098	Symbol	SUCCESS		3852000						
ANR	3852099	Symbol	tmp		3852000						
ANR	3852100	Symbol	arg		3852000						
ANR	3852101	Symbol	write_property		3852000						
ANR	3852102	Symbol	& tmp		3852000						
ANR	3852103	Symbol	& z_key		3852000						
ANR	3852104	Symbol	key		3852000						
ANR	3852105	Symbol	z_key		3852000						
ANR	3852106	Symbol	key_len		3852000						
ANR	3852107	Function	add_property_double_ex	1727:0:45031:45389							
ANR	3852108	FunctionDef	"add_property_double_ex (zval * arg , const char * key , size_t key_len , double d)"		3852107	0					
ANR	3852109	CompoundStatement		1728:0:45131:45389	3852107	0					
ANR	3852110	IdentifierDeclStatement	zval tmp ;	1729:1:45134:45142	3852107	0	True				
ANR	3852111	IdentifierDecl	tmp		3852107	0					
ANR	3852112	IdentifierDeclType	zval		3852107	0					
ANR	3852113	Identifier	tmp		3852107	1					
ANR	3852114	IdentifierDeclStatement	zval z_key ;	1730:1:45145:45155	3852107	1	True				
ANR	3852115	IdentifierDecl	z_key		3852107	0					
ANR	3852116	IdentifierDeclType	zval		3852107	0					
ANR	3852117	Identifier	z_key		3852107	1					
ANR	3852118	ExpressionStatement	"ZVAL_DOUBLE ( & tmp , d )"	1732:1:45159:45179	3852107	2	True				
ANR	3852119	CallExpression	"ZVAL_DOUBLE ( & tmp , d )"		3852107	0					
ANR	3852120	Callee	ZVAL_DOUBLE		3852107	0					
ANR	3852121	Identifier	ZVAL_DOUBLE		3852107	0					
ANR	3852122	ArgumentList	& tmp		3852107	1					
ANR	3852123	Argument	& tmp		3852107	0					
ANR	3852124	UnaryOperationExpression	& tmp		3852107	0					
ANR	3852125	UnaryOperator	&		3852107	0					
ANR	3852126	Identifier	tmp		3852107	1					
ANR	3852127	Argument	d		3852107	1					
ANR	3852128	Identifier	d		3852107	0					
ANR	3852129	ExpressionStatement	"ZVAL_STRINGL ( & z_key , key , key_len )"	1733:1:45182:45216	3852107	3	True				
ANR	3852130	CallExpression	"ZVAL_STRINGL ( & z_key , key , key_len )"		3852107	0					
ANR	3852131	Callee	ZVAL_STRINGL		3852107	0					
ANR	3852132	Identifier	ZVAL_STRINGL		3852107	0					
ANR	3852133	ArgumentList	& z_key		3852107	1					
ANR	3852134	Argument	& z_key		3852107	0					
ANR	3852135	UnaryOperationExpression	& z_key		3852107	0					
ANR	3852136	UnaryOperator	&		3852107	0					
ANR	3852137	Identifier	z_key		3852107	1					
ANR	3852138	Argument	key		3852107	1					
ANR	3852139	Identifier	key		3852107	0					
ANR	3852140	Argument	key_len		3852107	2					
ANR	3852141	Identifier	key_len		3852107	0					
ANR	3852142	ExpressionStatement	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"	1734:1:45219:45280	3852107	4	True				
ANR	3852143	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"		3852107	0					
ANR	3852144	Callee	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852107	0					
ANR	3852145	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852107	0					
ANR	3852146	Callee	Z_OBJ_HANDLER_P		3852107	0					
ANR	3852147	Identifier	Z_OBJ_HANDLER_P		3852107	0					
ANR	3852148	ArgumentList	arg		3852107	1					
ANR	3852149	Argument	arg		3852107	0					
ANR	3852150	Identifier	arg		3852107	0					
ANR	3852151	Argument	write_property		3852107	1					
ANR	3852152	Identifier	write_property		3852107	0					
ANR	3852153	ArgumentList	arg		3852107	1					
ANR	3852154	Argument	arg		3852107	0					
ANR	3852155	Identifier	arg		3852107	0					
ANR	3852156	Argument	& z_key		3852107	1					
ANR	3852157	UnaryOperationExpression	& z_key		3852107	0					
ANR	3852158	UnaryOperator	&		3852107	0					
ANR	3852159	Identifier	z_key		3852107	1					
ANR	3852160	Argument	& tmp		3852107	2					
ANR	3852161	UnaryOperationExpression	& tmp		3852107	0					
ANR	3852162	UnaryOperator	&		3852107	0					
ANR	3852163	Identifier	tmp		3852107	1					
ANR	3852164	Argument	NULL		3852107	3					
ANR	3852165	Identifier	NULL		3852107	0					
ANR	3852166	ExpressionStatement	zval_ptr_dtor ( & tmp )	1735:1:45283:45302	3852107	5	True				
ANR	3852167	CallExpression	zval_ptr_dtor ( & tmp )		3852107	0					
ANR	3852168	Callee	zval_ptr_dtor		3852107	0					
ANR	3852169	Identifier	zval_ptr_dtor		3852107	0					
ANR	3852170	ArgumentList	& tmp		3852107	1					
ANR	3852171	Argument	& tmp		3852107	0					
ANR	3852172	UnaryOperationExpression	& tmp		3852107	0					
ANR	3852173	UnaryOperator	&		3852107	0					
ANR	3852174	Identifier	tmp		3852107	1					
ANR	3852175	ExpressionStatement	zval_ptr_dtor ( & z_key )	1736:1:45349:45370	3852107	6	True				
ANR	3852176	CallExpression	zval_ptr_dtor ( & z_key )		3852107	0					
ANR	3852177	Callee	zval_ptr_dtor		3852107	0					
ANR	3852178	Identifier	zval_ptr_dtor		3852107	0					
ANR	3852179	ArgumentList	& z_key		3852107	1					
ANR	3852180	Argument	& z_key		3852107	0					
ANR	3852181	UnaryOperationExpression	& z_key		3852107	0					
ANR	3852182	UnaryOperator	&		3852107	0					
ANR	3852183	Identifier	z_key		3852107	1					
ANR	3852184	ReturnStatement	return SUCCESS ;	1737:1:45373:45387	3852107	7	True				
ANR	3852185	Identifier	SUCCESS		3852107	0					
ANR	3852186	ReturnType	ZEND_API int		3852107	1					
ANR	3852187	Identifier	add_property_double_ex		3852107	2					
ANR	3852188	ParameterList	"zval * arg , const char * key , size_t key_len , double d"		3852107	3					
ANR	3852189	Parameter	zval * arg	1727:36:45067:45075	3852107	0	True				
ANR	3852190	ParameterType	zval *		3852107	0					
ANR	3852191	Identifier	arg		3852107	1					
ANR	3852192	Parameter	const char * key	1727:47:45078:45092	3852107	1	True				
ANR	3852193	ParameterType	const char *		3852107	0					
ANR	3852194	Identifier	key		3852107	1					
ANR	3852195	Parameter	size_t key_len	1727:64:45095:45108	3852107	2	True				
ANR	3852196	ParameterType	size_t		3852107	0					
ANR	3852197	Identifier	key_len		3852107	1					
ANR	3852198	Parameter	double d	1727:80:45111:45118	3852107	3	True				
ANR	3852199	ParameterType	double		3852107	0					
ANR	3852200	Identifier	d		3852107	1					
ANR	3852201	CFGEntryNode	ENTRY		3852107		True				
ANR	3852202	CFGExitNode	EXIT		3852107		True				
ANR	3852203	Symbol	NULL		3852107						
ANR	3852204	Symbol	SUCCESS		3852107						
ANR	3852205	Symbol	d		3852107						
ANR	3852206	Symbol	tmp		3852107						
ANR	3852207	Symbol	arg		3852107						
ANR	3852208	Symbol	write_property		3852107						
ANR	3852209	Symbol	& tmp		3852107						
ANR	3852210	Symbol	& z_key		3852107						
ANR	3852211	Symbol	key		3852107						
ANR	3852212	Symbol	z_key		3852107						
ANR	3852213	Symbol	key_len		3852107						
ANR	3852214	Function	add_property_str_ex	1741:0:45402:45764							
ANR	3852215	FunctionDef	"add_property_str_ex (zval * arg , const char * key , size_t key_len , zend_string * str)"		3852214	0					
ANR	3852216	CompoundStatement		1742:0:45507:45764	3852214	0					
ANR	3852217	IdentifierDeclStatement	zval tmp ;	1743:1:45510:45518	3852214	0	True				
ANR	3852218	IdentifierDecl	tmp		3852214	0					
ANR	3852219	IdentifierDeclType	zval		3852214	0					
ANR	3852220	Identifier	tmp		3852214	1					
ANR	3852221	IdentifierDeclStatement	zval z_key ;	1744:1:45521:45531	3852214	1	True				
ANR	3852222	IdentifierDecl	z_key		3852214	0					
ANR	3852223	IdentifierDeclType	zval		3852214	0					
ANR	3852224	Identifier	z_key		3852214	1					
ANR	3852225	ExpressionStatement	"ZVAL_STR ( & tmp , str )"	1746:1:45535:45554	3852214	2	True				
ANR	3852226	CallExpression	"ZVAL_STR ( & tmp , str )"		3852214	0					
ANR	3852227	Callee	ZVAL_STR		3852214	0					
ANR	3852228	Identifier	ZVAL_STR		3852214	0					
ANR	3852229	ArgumentList	& tmp		3852214	1					
ANR	3852230	Argument	& tmp		3852214	0					
ANR	3852231	UnaryOperationExpression	& tmp		3852214	0					
ANR	3852232	UnaryOperator	&		3852214	0					
ANR	3852233	Identifier	tmp		3852214	1					
ANR	3852234	Argument	str		3852214	1					
ANR	3852235	Identifier	str		3852214	0					
ANR	3852236	ExpressionStatement	"ZVAL_STRINGL ( & z_key , key , key_len )"	1747:1:45557:45591	3852214	3	True				
ANR	3852237	CallExpression	"ZVAL_STRINGL ( & z_key , key , key_len )"		3852214	0					
ANR	3852238	Callee	ZVAL_STRINGL		3852214	0					
ANR	3852239	Identifier	ZVAL_STRINGL		3852214	0					
ANR	3852240	ArgumentList	& z_key		3852214	1					
ANR	3852241	Argument	& z_key		3852214	0					
ANR	3852242	UnaryOperationExpression	& z_key		3852214	0					
ANR	3852243	UnaryOperator	&		3852214	0					
ANR	3852244	Identifier	z_key		3852214	1					
ANR	3852245	Argument	key		3852214	1					
ANR	3852246	Identifier	key		3852214	0					
ANR	3852247	Argument	key_len		3852214	2					
ANR	3852248	Identifier	key_len		3852214	0					
ANR	3852249	ExpressionStatement	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"	1748:1:45594:45655	3852214	4	True				
ANR	3852250	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"		3852214	0					
ANR	3852251	Callee	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852214	0					
ANR	3852252	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852214	0					
ANR	3852253	Callee	Z_OBJ_HANDLER_P		3852214	0					
ANR	3852254	Identifier	Z_OBJ_HANDLER_P		3852214	0					
ANR	3852255	ArgumentList	arg		3852214	1					
ANR	3852256	Argument	arg		3852214	0					
ANR	3852257	Identifier	arg		3852214	0					
ANR	3852258	Argument	write_property		3852214	1					
ANR	3852259	Identifier	write_property		3852214	0					
ANR	3852260	ArgumentList	arg		3852214	1					
ANR	3852261	Argument	arg		3852214	0					
ANR	3852262	Identifier	arg		3852214	0					
ANR	3852263	Argument	& z_key		3852214	1					
ANR	3852264	UnaryOperationExpression	& z_key		3852214	0					
ANR	3852265	UnaryOperator	&		3852214	0					
ANR	3852266	Identifier	z_key		3852214	1					
ANR	3852267	Argument	& tmp		3852214	2					
ANR	3852268	UnaryOperationExpression	& tmp		3852214	0					
ANR	3852269	UnaryOperator	&		3852214	0					
ANR	3852270	Identifier	tmp		3852214	1					
ANR	3852271	Argument	NULL		3852214	3					
ANR	3852272	Identifier	NULL		3852214	0					
ANR	3852273	ExpressionStatement	zval_ptr_dtor ( & tmp )	1749:1:45658:45677	3852214	5	True				
ANR	3852274	CallExpression	zval_ptr_dtor ( & tmp )		3852214	0					
ANR	3852275	Callee	zval_ptr_dtor		3852214	0					
ANR	3852276	Identifier	zval_ptr_dtor		3852214	0					
ANR	3852277	ArgumentList	& tmp		3852214	1					
ANR	3852278	Argument	& tmp		3852214	0					
ANR	3852279	UnaryOperationExpression	& tmp		3852214	0					
ANR	3852280	UnaryOperator	&		3852214	0					
ANR	3852281	Identifier	tmp		3852214	1					
ANR	3852282	ExpressionStatement	zval_ptr_dtor ( & z_key )	1750:1:45724:45745	3852214	6	True				
ANR	3852283	CallExpression	zval_ptr_dtor ( & z_key )		3852214	0					
ANR	3852284	Callee	zval_ptr_dtor		3852214	0					
ANR	3852285	Identifier	zval_ptr_dtor		3852214	0					
ANR	3852286	ArgumentList	& z_key		3852214	1					
ANR	3852287	Argument	& z_key		3852214	0					
ANR	3852288	UnaryOperationExpression	& z_key		3852214	0					
ANR	3852289	UnaryOperator	&		3852214	0					
ANR	3852290	Identifier	z_key		3852214	1					
ANR	3852291	ReturnStatement	return SUCCESS ;	1751:1:45748:45762	3852214	7	True				
ANR	3852292	Identifier	SUCCESS		3852214	0					
ANR	3852293	ReturnType	ZEND_API int		3852214	1					
ANR	3852294	Identifier	add_property_str_ex		3852214	2					
ANR	3852295	ParameterList	"zval * arg , const char * key , size_t key_len , zend_string * str"		3852214	3					
ANR	3852296	Parameter	zval * arg	1741:33:45435:45443	3852214	0	True				
ANR	3852297	ParameterType	zval *		3852214	0					
ANR	3852298	Identifier	arg		3852214	1					
ANR	3852299	Parameter	const char * key	1741:44:45446:45460	3852214	1	True				
ANR	3852300	ParameterType	const char *		3852214	0					
ANR	3852301	Identifier	key		3852214	1					
ANR	3852302	Parameter	size_t key_len	1741:61:45463:45476	3852214	2	True				
ANR	3852303	ParameterType	size_t		3852214	0					
ANR	3852304	Identifier	key_len		3852214	1					
ANR	3852305	Parameter	zend_string * str	1741:77:45479:45494	3852214	3	True				
ANR	3852306	ParameterType	zend_string *		3852214	0					
ANR	3852307	Identifier	str		3852214	1					
ANR	3852308	CFGEntryNode	ENTRY		3852214		True				
ANR	3852309	CFGExitNode	EXIT		3852214		True				
ANR	3852310	Symbol	str		3852214						
ANR	3852311	Symbol	NULL		3852214						
ANR	3852312	Symbol	SUCCESS		3852214						
ANR	3852313	Symbol	tmp		3852214						
ANR	3852314	Symbol	arg		3852214						
ANR	3852315	Symbol	write_property		3852214						
ANR	3852316	Symbol	& tmp		3852214						
ANR	3852317	Symbol	& z_key		3852214						
ANR	3852318	Symbol	key		3852214						
ANR	3852319	Symbol	z_key		3852214						
ANR	3852320	Symbol	key_len		3852214						
ANR	3852321	Function	add_property_string_ex	1755:0:45777:46144							
ANR	3852322	FunctionDef	"add_property_string_ex (zval * arg , const char * key , size_t key_len , const char * str)"		3852321	0					
ANR	3852323	CompoundStatement		1756:0:45884:46144	3852321	0					
ANR	3852324	IdentifierDeclStatement	zval tmp ;	1757:1:45887:45895	3852321	0	True				
ANR	3852325	IdentifierDecl	tmp		3852321	0					
ANR	3852326	IdentifierDeclType	zval		3852321	0					
ANR	3852327	Identifier	tmp		3852321	1					
ANR	3852328	IdentifierDeclStatement	zval z_key ;	1758:1:45898:45908	3852321	1	True				
ANR	3852329	IdentifierDecl	z_key		3852321	0					
ANR	3852330	IdentifierDeclType	zval		3852321	0					
ANR	3852331	Identifier	z_key		3852321	1					
ANR	3852332	ExpressionStatement	"ZVAL_STRING ( & tmp , str )"	1760:1:45912:45934	3852321	2	True				
ANR	3852333	CallExpression	"ZVAL_STRING ( & tmp , str )"		3852321	0					
ANR	3852334	Callee	ZVAL_STRING		3852321	0					
ANR	3852335	Identifier	ZVAL_STRING		3852321	0					
ANR	3852336	ArgumentList	& tmp		3852321	1					
ANR	3852337	Argument	& tmp		3852321	0					
ANR	3852338	UnaryOperationExpression	& tmp		3852321	0					
ANR	3852339	UnaryOperator	&		3852321	0					
ANR	3852340	Identifier	tmp		3852321	1					
ANR	3852341	Argument	str		3852321	1					
ANR	3852342	Identifier	str		3852321	0					
ANR	3852343	ExpressionStatement	"ZVAL_STRINGL ( & z_key , key , key_len )"	1761:1:45937:45971	3852321	3	True				
ANR	3852344	CallExpression	"ZVAL_STRINGL ( & z_key , key , key_len )"		3852321	0					
ANR	3852345	Callee	ZVAL_STRINGL		3852321	0					
ANR	3852346	Identifier	ZVAL_STRINGL		3852321	0					
ANR	3852347	ArgumentList	& z_key		3852321	1					
ANR	3852348	Argument	& z_key		3852321	0					
ANR	3852349	UnaryOperationExpression	& z_key		3852321	0					
ANR	3852350	UnaryOperator	&		3852321	0					
ANR	3852351	Identifier	z_key		3852321	1					
ANR	3852352	Argument	key		3852321	1					
ANR	3852353	Identifier	key		3852321	0					
ANR	3852354	Argument	key_len		3852321	2					
ANR	3852355	Identifier	key_len		3852321	0					
ANR	3852356	ExpressionStatement	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"	1762:1:45974:46035	3852321	4	True				
ANR	3852357	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"		3852321	0					
ANR	3852358	Callee	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852321	0					
ANR	3852359	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852321	0					
ANR	3852360	Callee	Z_OBJ_HANDLER_P		3852321	0					
ANR	3852361	Identifier	Z_OBJ_HANDLER_P		3852321	0					
ANR	3852362	ArgumentList	arg		3852321	1					
ANR	3852363	Argument	arg		3852321	0					
ANR	3852364	Identifier	arg		3852321	0					
ANR	3852365	Argument	write_property		3852321	1					
ANR	3852366	Identifier	write_property		3852321	0					
ANR	3852367	ArgumentList	arg		3852321	1					
ANR	3852368	Argument	arg		3852321	0					
ANR	3852369	Identifier	arg		3852321	0					
ANR	3852370	Argument	& z_key		3852321	1					
ANR	3852371	UnaryOperationExpression	& z_key		3852321	0					
ANR	3852372	UnaryOperator	&		3852321	0					
ANR	3852373	Identifier	z_key		3852321	1					
ANR	3852374	Argument	& tmp		3852321	2					
ANR	3852375	UnaryOperationExpression	& tmp		3852321	0					
ANR	3852376	UnaryOperator	&		3852321	0					
ANR	3852377	Identifier	tmp		3852321	1					
ANR	3852378	Argument	NULL		3852321	3					
ANR	3852379	Identifier	NULL		3852321	0					
ANR	3852380	ExpressionStatement	zval_ptr_dtor ( & tmp )	1763:1:46038:46057	3852321	5	True				
ANR	3852381	CallExpression	zval_ptr_dtor ( & tmp )		3852321	0					
ANR	3852382	Callee	zval_ptr_dtor		3852321	0					
ANR	3852383	Identifier	zval_ptr_dtor		3852321	0					
ANR	3852384	ArgumentList	& tmp		3852321	1					
ANR	3852385	Argument	& tmp		3852321	0					
ANR	3852386	UnaryOperationExpression	& tmp		3852321	0					
ANR	3852387	UnaryOperator	&		3852321	0					
ANR	3852388	Identifier	tmp		3852321	1					
ANR	3852389	ExpressionStatement	zval_ptr_dtor ( & z_key )	1764:1:46104:46125	3852321	6	True				
ANR	3852390	CallExpression	zval_ptr_dtor ( & z_key )		3852321	0					
ANR	3852391	Callee	zval_ptr_dtor		3852321	0					
ANR	3852392	Identifier	zval_ptr_dtor		3852321	0					
ANR	3852393	ArgumentList	& z_key		3852321	1					
ANR	3852394	Argument	& z_key		3852321	0					
ANR	3852395	UnaryOperationExpression	& z_key		3852321	0					
ANR	3852396	UnaryOperator	&		3852321	0					
ANR	3852397	Identifier	z_key		3852321	1					
ANR	3852398	ReturnStatement	return SUCCESS ;	1765:1:46128:46142	3852321	7	True				
ANR	3852399	Identifier	SUCCESS		3852321	0					
ANR	3852400	ReturnType	ZEND_API int		3852321	1					
ANR	3852401	Identifier	add_property_string_ex		3852321	2					
ANR	3852402	ParameterList	"zval * arg , const char * key , size_t key_len , const char * str"		3852321	3					
ANR	3852403	Parameter	zval * arg	1755:36:45813:45821	3852321	0	True				
ANR	3852404	ParameterType	zval *		3852321	0					
ANR	3852405	Identifier	arg		3852321	1					
ANR	3852406	Parameter	const char * key	1755:47:45824:45838	3852321	1	True				
ANR	3852407	ParameterType	const char *		3852321	0					
ANR	3852408	Identifier	key		3852321	1					
ANR	3852409	Parameter	size_t key_len	1755:64:45841:45854	3852321	2	True				
ANR	3852410	ParameterType	size_t		3852321	0					
ANR	3852411	Identifier	key_len		3852321	1					
ANR	3852412	Parameter	const char * str	1755:80:45857:45871	3852321	3	True				
ANR	3852413	ParameterType	const char *		3852321	0					
ANR	3852414	Identifier	str		3852321	1					
ANR	3852415	CFGEntryNode	ENTRY		3852321		True				
ANR	3852416	CFGExitNode	EXIT		3852321		True				
ANR	3852417	Symbol	str		3852321						
ANR	3852418	Symbol	NULL		3852321						
ANR	3852419	Symbol	SUCCESS		3852321						
ANR	3852420	Symbol	tmp		3852321						
ANR	3852421	Symbol	arg		3852321						
ANR	3852422	Symbol	write_property		3852321						
ANR	3852423	Symbol	& tmp		3852321						
ANR	3852424	Symbol	& z_key		3852321						
ANR	3852425	Symbol	key		3852321						
ANR	3852426	Symbol	z_key		3852321						
ANR	3852427	Symbol	key_len		3852321						
ANR	3852428	Function	add_property_stringl_ex	1769:0:46157:46549							
ANR	3852429	FunctionDef	"add_property_stringl_ex (zval * arg , const char * key , size_t key_len , const char * str , size_t length)"		3852428	0					
ANR	3852430	CompoundStatement		1770:0:46280:46549	3852428	0					
ANR	3852431	IdentifierDeclStatement	zval tmp ;	1771:1:46283:46291	3852428	0	True				
ANR	3852432	IdentifierDecl	tmp		3852428	0					
ANR	3852433	IdentifierDeclType	zval		3852428	0					
ANR	3852434	Identifier	tmp		3852428	1					
ANR	3852435	IdentifierDeclStatement	zval z_key ;	1772:1:46294:46304	3852428	1	True				
ANR	3852436	IdentifierDecl	z_key		3852428	0					
ANR	3852437	IdentifierDeclType	zval		3852428	0					
ANR	3852438	Identifier	z_key		3852428	1					
ANR	3852439	ExpressionStatement	"ZVAL_STRINGL ( & tmp , str , length )"	1774:1:46308:46339	3852428	2	True				
ANR	3852440	CallExpression	"ZVAL_STRINGL ( & tmp , str , length )"		3852428	0					
ANR	3852441	Callee	ZVAL_STRINGL		3852428	0					
ANR	3852442	Identifier	ZVAL_STRINGL		3852428	0					
ANR	3852443	ArgumentList	& tmp		3852428	1					
ANR	3852444	Argument	& tmp		3852428	0					
ANR	3852445	UnaryOperationExpression	& tmp		3852428	0					
ANR	3852446	UnaryOperator	&		3852428	0					
ANR	3852447	Identifier	tmp		3852428	1					
ANR	3852448	Argument	str		3852428	1					
ANR	3852449	Identifier	str		3852428	0					
ANR	3852450	Argument	length		3852428	2					
ANR	3852451	Identifier	length		3852428	0					
ANR	3852452	ExpressionStatement	"ZVAL_STRINGL ( & z_key , key , key_len )"	1775:1:46342:46376	3852428	3	True				
ANR	3852453	CallExpression	"ZVAL_STRINGL ( & z_key , key , key_len )"		3852428	0					
ANR	3852454	Callee	ZVAL_STRINGL		3852428	0					
ANR	3852455	Identifier	ZVAL_STRINGL		3852428	0					
ANR	3852456	ArgumentList	& z_key		3852428	1					
ANR	3852457	Argument	& z_key		3852428	0					
ANR	3852458	UnaryOperationExpression	& z_key		3852428	0					
ANR	3852459	UnaryOperator	&		3852428	0					
ANR	3852460	Identifier	z_key		3852428	1					
ANR	3852461	Argument	key		3852428	1					
ANR	3852462	Identifier	key		3852428	0					
ANR	3852463	Argument	key_len		3852428	2					
ANR	3852464	Identifier	key_len		3852428	0					
ANR	3852465	ExpressionStatement	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"	1776:1:46379:46440	3852428	4	True				
ANR	3852466	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , & tmp , NULL )"		3852428	0					
ANR	3852467	Callee	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852428	0					
ANR	3852468	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852428	0					
ANR	3852469	Callee	Z_OBJ_HANDLER_P		3852428	0					
ANR	3852470	Identifier	Z_OBJ_HANDLER_P		3852428	0					
ANR	3852471	ArgumentList	arg		3852428	1					
ANR	3852472	Argument	arg		3852428	0					
ANR	3852473	Identifier	arg		3852428	0					
ANR	3852474	Argument	write_property		3852428	1					
ANR	3852475	Identifier	write_property		3852428	0					
ANR	3852476	ArgumentList	arg		3852428	1					
ANR	3852477	Argument	arg		3852428	0					
ANR	3852478	Identifier	arg		3852428	0					
ANR	3852479	Argument	& z_key		3852428	1					
ANR	3852480	UnaryOperationExpression	& z_key		3852428	0					
ANR	3852481	UnaryOperator	&		3852428	0					
ANR	3852482	Identifier	z_key		3852428	1					
ANR	3852483	Argument	& tmp		3852428	2					
ANR	3852484	UnaryOperationExpression	& tmp		3852428	0					
ANR	3852485	UnaryOperator	&		3852428	0					
ANR	3852486	Identifier	tmp		3852428	1					
ANR	3852487	Argument	NULL		3852428	3					
ANR	3852488	Identifier	NULL		3852428	0					
ANR	3852489	ExpressionStatement	zval_ptr_dtor ( & tmp )	1777:1:46443:46462	3852428	5	True				
ANR	3852490	CallExpression	zval_ptr_dtor ( & tmp )		3852428	0					
ANR	3852491	Callee	zval_ptr_dtor		3852428	0					
ANR	3852492	Identifier	zval_ptr_dtor		3852428	0					
ANR	3852493	ArgumentList	& tmp		3852428	1					
ANR	3852494	Argument	& tmp		3852428	0					
ANR	3852495	UnaryOperationExpression	& tmp		3852428	0					
ANR	3852496	UnaryOperator	&		3852428	0					
ANR	3852497	Identifier	tmp		3852428	1					
ANR	3852498	ExpressionStatement	zval_ptr_dtor ( & z_key )	1778:1:46509:46530	3852428	6	True				
ANR	3852499	CallExpression	zval_ptr_dtor ( & z_key )		3852428	0					
ANR	3852500	Callee	zval_ptr_dtor		3852428	0					
ANR	3852501	Identifier	zval_ptr_dtor		3852428	0					
ANR	3852502	ArgumentList	& z_key		3852428	1					
ANR	3852503	Argument	& z_key		3852428	0					
ANR	3852504	UnaryOperationExpression	& z_key		3852428	0					
ANR	3852505	UnaryOperator	&		3852428	0					
ANR	3852506	Identifier	z_key		3852428	1					
ANR	3852507	ReturnStatement	return SUCCESS ;	1779:1:46533:46547	3852428	7	True				
ANR	3852508	Identifier	SUCCESS		3852428	0					
ANR	3852509	ReturnType	ZEND_API int		3852428	1					
ANR	3852510	Identifier	add_property_stringl_ex		3852428	2					
ANR	3852511	ParameterList	"zval * arg , const char * key , size_t key_len , const char * str , size_t length"		3852428	3					
ANR	3852512	Parameter	zval * arg	1769:37:46194:46202	3852428	0	True				
ANR	3852513	ParameterType	zval *		3852428	0					
ANR	3852514	Identifier	arg		3852428	1					
ANR	3852515	Parameter	const char * key	1769:48:46205:46219	3852428	1	True				
ANR	3852516	ParameterType	const char *		3852428	0					
ANR	3852517	Identifier	key		3852428	1					
ANR	3852518	Parameter	size_t key_len	1769:65:46222:46235	3852428	2	True				
ANR	3852519	ParameterType	size_t		3852428	0					
ANR	3852520	Identifier	key_len		3852428	1					
ANR	3852521	Parameter	const char * str	1769:81:46238:46252	3852428	3	True				
ANR	3852522	ParameterType	const char *		3852428	0					
ANR	3852523	Identifier	str		3852428	1					
ANR	3852524	Parameter	size_t length	1769:98:46255:46267	3852428	4	True				
ANR	3852525	ParameterType	size_t		3852428	0					
ANR	3852526	Identifier	length		3852428	1					
ANR	3852527	CFGEntryNode	ENTRY		3852428		True				
ANR	3852528	CFGExitNode	EXIT		3852428		True				
ANR	3852529	Symbol	str		3852428						
ANR	3852530	Symbol	NULL		3852428						
ANR	3852531	Symbol	SUCCESS		3852428						
ANR	3852532	Symbol	tmp		3852428						
ANR	3852533	Symbol	arg		3852428						
ANR	3852534	Symbol	length		3852428						
ANR	3852535	Symbol	write_property		3852428						
ANR	3852536	Symbol	& tmp		3852428						
ANR	3852537	Symbol	& z_key		3852428						
ANR	3852538	Symbol	key		3852428						
ANR	3852539	Symbol	z_key		3852428						
ANR	3852540	Symbol	key_len		3852428						
ANR	3852541	Function	add_property_zval_ex	1783:0:46562:46822							
ANR	3852542	FunctionDef	"add_property_zval_ex (zval * arg , const char * key , size_t key_len , zval * value)"		3852541	0					
ANR	3852543	CompoundStatement		1784:0:46663:46822	3852541	0					
ANR	3852544	IdentifierDeclStatement	zval z_key ;	1785:1:46666:46676	3852541	0	True				
ANR	3852545	IdentifierDecl	z_key		3852541	0					
ANR	3852546	IdentifierDeclType	zval		3852541	0					
ANR	3852547	Identifier	z_key		3852541	1					
ANR	3852548	ExpressionStatement	"ZVAL_STRINGL ( & z_key , key , key_len )"	1787:1:46680:46714	3852541	1	True				
ANR	3852549	CallExpression	"ZVAL_STRINGL ( & z_key , key , key_len )"		3852541	0					
ANR	3852550	Callee	ZVAL_STRINGL		3852541	0					
ANR	3852551	Identifier	ZVAL_STRINGL		3852541	0					
ANR	3852552	ArgumentList	& z_key		3852541	1					
ANR	3852553	Argument	& z_key		3852541	0					
ANR	3852554	UnaryOperationExpression	& z_key		3852541	0					
ANR	3852555	UnaryOperator	&		3852541	0					
ANR	3852556	Identifier	z_key		3852541	1					
ANR	3852557	Argument	key		3852541	1					
ANR	3852558	Identifier	key		3852541	0					
ANR	3852559	Argument	key_len		3852541	2					
ANR	3852560	Identifier	key_len		3852541	0					
ANR	3852561	ExpressionStatement	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , value , NULL )"	1788:1:46717:46779	3852541	2	True				
ANR	3852562	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property ) ( arg , & z_key , value , NULL )"		3852541	0					
ANR	3852563	Callee	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852541	0					
ANR	3852564	CallExpression	"Z_OBJ_HANDLER_P ( arg , write_property )"		3852541	0					
ANR	3852565	Callee	Z_OBJ_HANDLER_P		3852541	0					
ANR	3852566	Identifier	Z_OBJ_HANDLER_P		3852541	0					
ANR	3852567	ArgumentList	arg		3852541	1					
ANR	3852568	Argument	arg		3852541	0					
ANR	3852569	Identifier	arg		3852541	0					
ANR	3852570	Argument	write_property		3852541	1					
ANR	3852571	Identifier	write_property		3852541	0					
ANR	3852572	ArgumentList	arg		3852541	1					
ANR	3852573	Argument	arg		3852541	0					
ANR	3852574	Identifier	arg		3852541	0					
ANR	3852575	Argument	& z_key		3852541	1					
ANR	3852576	UnaryOperationExpression	& z_key		3852541	0					
ANR	3852577	UnaryOperator	&		3852541	0					
ANR	3852578	Identifier	z_key		3852541	1					
ANR	3852579	Argument	value		3852541	2					
ANR	3852580	Identifier	value		3852541	0					
ANR	3852581	Argument	NULL		3852541	3					
ANR	3852582	Identifier	NULL		3852541	0					
ANR	3852583	ExpressionStatement	zval_ptr_dtor ( & z_key )	1789:1:46782:46803	3852541	3	True				
ANR	3852584	CallExpression	zval_ptr_dtor ( & z_key )		3852541	0					
ANR	3852585	Callee	zval_ptr_dtor		3852541	0					
ANR	3852586	Identifier	zval_ptr_dtor		3852541	0					
ANR	3852587	ArgumentList	& z_key		3852541	1					
ANR	3852588	Argument	& z_key		3852541	0					
ANR	3852589	UnaryOperationExpression	& z_key		3852541	0					
ANR	3852590	UnaryOperator	&		3852541	0					
ANR	3852591	Identifier	z_key		3852541	1					
ANR	3852592	ReturnStatement	return SUCCESS ;	1790:1:46806:46820	3852541	4	True				
ANR	3852593	Identifier	SUCCESS		3852541	0					
ANR	3852594	ReturnType	ZEND_API int		3852541	1					
ANR	3852595	Identifier	add_property_zval_ex		3852541	2					
ANR	3852596	ParameterList	"zval * arg , const char * key , size_t key_len , zval * value"		3852541	3					
ANR	3852597	Parameter	zval * arg	1783:34:46596:46604	3852541	0	True				
ANR	3852598	ParameterType	zval *		3852541	0					
ANR	3852599	Identifier	arg		3852541	1					
ANR	3852600	Parameter	const char * key	1783:45:46607:46621	3852541	1	True				
ANR	3852601	ParameterType	const char *		3852541	0					
ANR	3852602	Identifier	key		3852541	1					
ANR	3852603	Parameter	size_t key_len	1783:62:46624:46637	3852541	2	True				
ANR	3852604	ParameterType	size_t		3852541	0					
ANR	3852605	Identifier	key_len		3852541	1					
ANR	3852606	Parameter	zval * value	1783:78:46640:46650	3852541	3	True				
ANR	3852607	ParameterType	zval *		3852541	0					
ANR	3852608	Identifier	value		3852541	1					
ANR	3852609	CFGEntryNode	ENTRY		3852541		True				
ANR	3852610	CFGExitNode	EXIT		3852541		True				
ANR	3852611	Symbol	NULL		3852541						
ANR	3852612	Symbol	SUCCESS		3852541						
ANR	3852613	Symbol	arg		3852541						
ANR	3852614	Symbol	write_property		3852541						
ANR	3852615	Symbol	& z_key		3852541						
ANR	3852616	Symbol	value		3852541						
ANR	3852617	Symbol	key		3852541						
ANR	3852618	Symbol	z_key		3852541						
ANR	3852619	Symbol	key_len		3852541						
ANR	3852620	Function	zend_startup_module_ex	1794:0:46835:48444							
ANR	3852621	FunctionDef	zend_startup_module_ex (zend_module_entry * module)		3852620	0					
ANR	3852622	CompoundStatement		1795:0:46908:48444	3852620	0					
ANR	3852623	IdentifierDeclStatement	size_t name_len ;	1796:1:46911:46926	3852620	0	True				
ANR	3852624	IdentifierDecl	name_len		3852620	0					
ANR	3852625	IdentifierDeclType	size_t		3852620	0					
ANR	3852626	Identifier	name_len		3852620	1					
ANR	3852627	IdentifierDeclStatement	zend_string * lcname ;	1797:1:46929:46948	3852620	1	True				
ANR	3852628	IdentifierDecl	* lcname		3852620	0					
ANR	3852629	IdentifierDeclType	zend_string *		3852620	0					
ANR	3852630	Identifier	lcname		3852620	1					
ANR	3852631	IfStatement	if ( module -> module_started )		3852620	2					
ANR	3852632	Condition	module -> module_started	1799:5:46956:46977	3852620	0	True				
ANR	3852633	PtrMemberAccess	module -> module_started		3852620	0					
ANR	3852634	Identifier	module		3852620	0					
ANR	3852635	Identifier	module_started		3852620	1					
ANR	3852636	CompoundStatement		5:29:71:71	3852620	1					
ANR	3852637	ReturnStatement	return SUCCESS ;	1800:2:46984:46998	3852620	0	True				
ANR	3852638	Identifier	SUCCESS		3852620	0					
ANR	3852639	ExpressionStatement	module -> module_started = 1	1802:1:47004:47030	3852620	3	True				
ANR	3852640	AssignmentExpression	module -> module_started = 1		3852620	0		=			
ANR	3852641	PtrMemberAccess	module -> module_started		3852620	0					
ANR	3852642	Identifier	module		3852620	0					
ANR	3852643	Identifier	module_started		3852620	1					
ANR	3852644	PrimaryExpression	1		3852620	1					
ANR	3852645	IfStatement	if ( module -> deps )		3852620	4					
ANR	3852646	Condition	module -> deps	1805:5:47071:47082	3852620	0	True				
ANR	3852647	PtrMemberAccess	module -> deps		3852620	0					
ANR	3852648	Identifier	module		3852620	0					
ANR	3852649	Identifier	deps		3852620	1					
ANR	3852650	CompoundStatement		12:2:180:221	3852620	1					
ANR	3852651	IdentifierDeclStatement	const zend_module_dep * dep = module -> deps ;	1806:2:47089:47130	3852620	0	True				
ANR	3852652	IdentifierDecl	* dep = module -> deps		3852620	0					
ANR	3852653	IdentifierDeclType	const zend_module_dep *		3852620	0					
ANR	3852654	Identifier	dep		3852620	1					
ANR	3852655	AssignmentExpression	* dep = module -> deps		3852620	2		=			
ANR	3852656	Identifier	dep		3852620	0					
ANR	3852657	PtrMemberAccess	module -> deps		3852620	1					
ANR	3852658	Identifier	module		3852620	0					
ANR	3852659	Identifier	deps		3852620	1					
ANR	3852660	WhileStatement	while ( dep -> name )		3852620	1					
ANR	3852661	Condition	dep -> name	1808:9:47142:47150	3852620	0	True				
ANR	3852662	PtrMemberAccess	dep -> name		3852620	0					
ANR	3852663	Identifier	dep		3852620	0					
ANR	3852664	Identifier	name		3852620	1					
ANR	3852665	CompoundStatement		14:20:244:244	3852620	1					
ANR	3852666	IfStatement	if ( dep -> type == MODULE_DEP_REQUIRED )		3852620	0					
ANR	3852667	Condition	dep -> type == MODULE_DEP_REQUIRED	1809:7:47162:47193	3852620	0	True				
ANR	3852668	EqualityExpression	dep -> type == MODULE_DEP_REQUIRED		3852620	0		==			
ANR	3852669	PtrMemberAccess	dep -> type		3852620	0					
ANR	3852670	Identifier	dep		3852620	0					
ANR	3852671	Identifier	type		3852620	1					
ANR	3852672	Identifier	MODULE_DEP_REQUIRED		3852620	1					
ANR	3852673	CompoundStatement		16:4:293:319	3852620	1					
ANR	3852674	IdentifierDeclStatement	zend_module_entry * req_mod ;	1810:4:47202:47228	3852620	0	True				
ANR	3852675	IdentifierDecl	* req_mod		3852620	0					
ANR	3852676	IdentifierDeclType	zend_module_entry *		3852620	0					
ANR	3852677	Identifier	req_mod		3852620	1					
ANR	3852678	ExpressionStatement	name_len = strlen ( dep -> name )	1812:4:47235:47263	3852620	1	True				
ANR	3852679	AssignmentExpression	name_len = strlen ( dep -> name )		3852620	0		=			
ANR	3852680	Identifier	name_len		3852620	0					
ANR	3852681	CallExpression	strlen ( dep -> name )		3852620	1					
ANR	3852682	Callee	strlen		3852620	0					
ANR	3852683	Identifier	strlen		3852620	0					
ANR	3852684	ArgumentList	dep -> name		3852620	1					
ANR	3852685	Argument	dep -> name		3852620	0					
ANR	3852686	PtrMemberAccess	dep -> name		3852620	0					
ANR	3852687	Identifier	dep		3852620	0					
ANR	3852688	Identifier	name		3852620	1					
ANR	3852689	ExpressionStatement	"lcname = zend_string_alloc ( name_len , 0 )"	1813:4:47269:47308	3852620	2	True				
ANR	3852690	AssignmentExpression	"lcname = zend_string_alloc ( name_len , 0 )"		3852620	0		=			
ANR	3852691	Identifier	lcname		3852620	0					
ANR	3852692	CallExpression	"zend_string_alloc ( name_len , 0 )"		3852620	1					
ANR	3852693	Callee	zend_string_alloc		3852620	0					
ANR	3852694	Identifier	zend_string_alloc		3852620	0					
ANR	3852695	ArgumentList	name_len		3852620	1					
ANR	3852696	Argument	name_len		3852620	0					
ANR	3852697	Identifier	name_len		3852620	0					
ANR	3852698	Argument	0		3852620	1					
ANR	3852699	PrimaryExpression	0		3852620	0					
ANR	3852700	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , dep -> name , name_len )"	1814:4:47314:47374	3852620	3	True				
ANR	3852701	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , dep -> name , name_len )"		3852620	0					
ANR	3852702	Callee	zend_str_tolower_copy		3852620	0					
ANR	3852703	Identifier	zend_str_tolower_copy		3852620	0					
ANR	3852704	ArgumentList	ZSTR_VAL ( lcname )		3852620	1					
ANR	3852705	Argument	ZSTR_VAL ( lcname )		3852620	0					
ANR	3852706	CallExpression	ZSTR_VAL ( lcname )		3852620	0					
ANR	3852707	Callee	ZSTR_VAL		3852620	0					
ANR	3852708	Identifier	ZSTR_VAL		3852620	0					
ANR	3852709	ArgumentList	lcname		3852620	1					
ANR	3852710	Argument	lcname		3852620	0					
ANR	3852711	Identifier	lcname		3852620	0					
ANR	3852712	Argument	dep -> name		3852620	1					
ANR	3852713	PtrMemberAccess	dep -> name		3852620	0					
ANR	3852714	Identifier	dep		3852620	0					
ANR	3852715	Identifier	name		3852620	1					
ANR	3852716	Argument	name_len		3852620	2					
ANR	3852717	Identifier	name_len		3852620	0					
ANR	3852718	IfStatement	"if ( ( req_mod = zend_hash_find_ptr ( & module_registry , lcname ) ) == NULL || ! req_mod -> module_started )"		3852620	4					
ANR	3852719	Condition	"( req_mod = zend_hash_find_ptr ( & module_registry , lcname ) ) == NULL || ! req_mod -> module_started"	1816:8:47385:47476	3852620	0	True				
ANR	3852720	OrExpression	"( req_mod = zend_hash_find_ptr ( & module_registry , lcname ) ) == NULL || ! req_mod -> module_started"		3852620	0		||			
ANR	3852721	EqualityExpression	"( req_mod = zend_hash_find_ptr ( & module_registry , lcname ) ) == NULL"		3852620	0		==			
ANR	3852722	AssignmentExpression	"req_mod = zend_hash_find_ptr ( & module_registry , lcname )"		3852620	0		=			
ANR	3852723	Identifier	req_mod		3852620	0					
ANR	3852724	CallExpression	"zend_hash_find_ptr ( & module_registry , lcname )"		3852620	1					
ANR	3852725	Callee	zend_hash_find_ptr		3852620	0					
ANR	3852726	Identifier	zend_hash_find_ptr		3852620	0					
ANR	3852727	ArgumentList	& module_registry		3852620	1					
ANR	3852728	Argument	& module_registry		3852620	0					
ANR	3852729	UnaryOperationExpression	& module_registry		3852620	0					
ANR	3852730	UnaryOperator	&		3852620	0					
ANR	3852731	Identifier	module_registry		3852620	1					
ANR	3852732	Argument	lcname		3852620	1					
ANR	3852733	Identifier	lcname		3852620	0					
ANR	3852734	Identifier	NULL		3852620	1					
ANR	3852735	UnaryOperationExpression	! req_mod -> module_started		3852620	1					
ANR	3852736	UnaryOperator	!		3852620	0					
ANR	3852737	PtrMemberAccess	req_mod -> module_started		3852620	1					
ANR	3852738	Identifier	req_mod		3852620	0					
ANR	3852739	Identifier	module_started		3852620	1					
ANR	3852740	CompoundStatement		22:102:570:570	3852620	1					
ANR	3852741	ExpressionStatement	zend_string_free ( lcname )	1817:5:47486:47510	3852620	0	True				
ANR	3852742	CallExpression	zend_string_free ( lcname )		3852620	0					
ANR	3852743	Callee	zend_string_free		3852620	0					
ANR	3852744	Identifier	zend_string_free		3852620	0					
ANR	3852745	ArgumentList	lcname		3852620	1					
ANR	3852746	Argument	lcname		3852620	0					
ANR	3852747	Identifier	lcname		3852620	0					
ANR	3852748	ExpressionStatement	"zend_error ( E_CORE_WARNING , ""Cannot load module '%s' because required module '%s' is not loaded"" , module -> name , dep -> name )"	1819:5:47561:47682	3852620	1	True				
ANR	3852749	CallExpression	"zend_error ( E_CORE_WARNING , ""Cannot load module '%s' because required module '%s' is not loaded"" , module -> name , dep -> name )"		3852620	0					
ANR	3852750	Callee	zend_error		3852620	0					
ANR	3852751	Identifier	zend_error		3852620	0					
ANR	3852752	ArgumentList	E_CORE_WARNING		3852620	1					
ANR	3852753	Argument	E_CORE_WARNING		3852620	0					
ANR	3852754	Identifier	E_CORE_WARNING		3852620	0					
ANR	3852755	Argument	"""Cannot load module '%s' because required module '%s' is not loaded"""		3852620	1					
ANR	3852756	PrimaryExpression	"""Cannot load module '%s' because required module '%s' is not loaded"""		3852620	0					
ANR	3852757	Argument	module -> name		3852620	2					
ANR	3852758	PtrMemberAccess	module -> name		3852620	0					
ANR	3852759	Identifier	module		3852620	0					
ANR	3852760	Identifier	name		3852620	1					
ANR	3852761	Argument	dep -> name		3852620	3					
ANR	3852762	PtrMemberAccess	dep -> name		3852620	0					
ANR	3852763	Identifier	dep		3852620	0					
ANR	3852764	Identifier	name		3852620	1					
ANR	3852765	ExpressionStatement	module -> module_started = 0	1820:5:47689:47715	3852620	2	True				
ANR	3852766	AssignmentExpression	module -> module_started = 0		3852620	0		=			
ANR	3852767	PtrMemberAccess	module -> module_started		3852620	0					
ANR	3852768	Identifier	module		3852620	0					
ANR	3852769	Identifier	module_started		3852620	1					
ANR	3852770	PrimaryExpression	0		3852620	1					
ANR	3852771	ReturnStatement	return FAILURE ;	1821:5:47722:47736	3852620	3	True				
ANR	3852772	Identifier	FAILURE		3852620	0					
ANR	3852773	ExpressionStatement	zend_string_free ( lcname )	1823:4:47748:47772	3852620	5	True				
ANR	3852774	CallExpression	zend_string_free ( lcname )		3852620	0					
ANR	3852775	Callee	zend_string_free		3852620	0					
ANR	3852776	Identifier	zend_string_free		3852620	0					
ANR	3852777	ArgumentList	lcname		3852620	1					
ANR	3852778	Argument	lcname		3852620	0					
ANR	3852779	Identifier	lcname		3852620	0					
ANR	3852780	ExpressionStatement	++ dep	1825:3:47782:47787	3852620	1	True				
ANR	3852781	UnaryExpression	++ dep		3852620	0					
ANR	3852782	IncDec	++		3852620	0					
ANR	3852783	Identifier	dep		3852620	1					
ANR	3852784	IfStatement	if ( module -> globals_size )		3852620	5					
ANR	3852785	Condition	module -> globals_size	1830:5:47835:47854	3852620	0	True				
ANR	3852786	PtrMemberAccess	module -> globals_size		3852620	0					
ANR	3852787	Identifier	module		3852620	0					
ANR	3852788	Identifier	globals_size		3852620	1					
ANR	3852789	CompoundStatement		36:27:948:948	3852620	1					
ANR	3852790	ExpressionStatement	"ts_allocate_id ( module -> globals_id_ptr , module -> globals_size , ( ts_allocate_ctor ) module -> globals_ctor , ( ts_allocate_dtor ) module -> globals_dtor )"	1832:2:47872:48014	3852620	0	True				
ANR	3852791	CallExpression	"ts_allocate_id ( module -> globals_id_ptr , module -> globals_size , ( ts_allocate_ctor ) module -> globals_ctor , ( ts_allocate_dtor ) module -> globals_dtor )"		3852620	0					
ANR	3852792	Callee	ts_allocate_id		3852620	0					
ANR	3852793	Identifier	ts_allocate_id		3852620	0					
ANR	3852794	ArgumentList	module -> globals_id_ptr		3852620	1					
ANR	3852795	Argument	module -> globals_id_ptr		3852620	0					
ANR	3852796	PtrMemberAccess	module -> globals_id_ptr		3852620	0					
ANR	3852797	Identifier	module		3852620	0					
ANR	3852798	Identifier	globals_id_ptr		3852620	1					
ANR	3852799	Argument	module -> globals_size		3852620	1					
ANR	3852800	PtrMemberAccess	module -> globals_size		3852620	0					
ANR	3852801	Identifier	module		3852620	0					
ANR	3852802	Identifier	globals_size		3852620	1					
ANR	3852803	Argument	( ts_allocate_ctor ) module -> globals_ctor		3852620	2					
ANR	3852804	CastExpression	( ts_allocate_ctor ) module -> globals_ctor		3852620	0					
ANR	3852805	CastTarget	ts_allocate_ctor		3852620	0					
ANR	3852806	PtrMemberAccess	module -> globals_ctor		3852620	1					
ANR	3852807	Identifier	module		3852620	0					
ANR	3852808	Identifier	globals_ctor		3852620	1					
ANR	3852809	Argument	( ts_allocate_dtor ) module -> globals_dtor		3852620	3					
ANR	3852810	CastExpression	( ts_allocate_dtor ) module -> globals_dtor		3852620	0					
ANR	3852811	CastTarget	ts_allocate_dtor		3852620	0					
ANR	3852812	PtrMemberAccess	module -> globals_dtor		3852620	1					
ANR	3852813	Identifier	module		3852620	0					
ANR	3852814	Identifier	globals_dtor		3852620	1					
ANR	3852815	IfStatement	if ( module -> module_startup_func )		3852620	6					
ANR	3852816	Condition	module -> module_startup_func	1839:5:48117:48143	3852620	0	True				
ANR	3852817	PtrMemberAccess	module -> module_startup_func		3852620	0					
ANR	3852818	Identifier	module		3852620	0					
ANR	3852819	Identifier	module_startup_func		3852620	1					
ANR	3852820	CompoundStatement		45:34:1237:1237	3852620	1					
ANR	3852821	ExpressionStatement	EG ( current_module ) = module	1840:2:48150:48177	3852620	0	True				
ANR	3852822	AssignmentExpression	EG ( current_module ) = module		3852620	0		=			
ANR	3852823	CallExpression	EG ( current_module )		3852620	0					
ANR	3852824	Callee	EG		3852620	0					
ANR	3852825	Identifier	EG		3852620	0					
ANR	3852826	ArgumentList	current_module		3852620	1					
ANR	3852827	Argument	current_module		3852620	0					
ANR	3852828	Identifier	current_module		3852620	0					
ANR	3852829	Identifier	module		3852620	1					
ANR	3852830	IfStatement	"if ( module -> module_startup_func ( module -> type , module -> module_number ) == FAILURE )"		3852620	1					
ANR	3852831	Condition	"module -> module_startup_func ( module -> type , module -> module_number ) == FAILURE"	1841:6:48185:48257	3852620	0	True				
ANR	3852832	EqualityExpression	"module -> module_startup_func ( module -> type , module -> module_number ) == FAILURE"		3852620	0		==			
ANR	3852833	CallExpression	"module -> module_startup_func ( module -> type , module -> module_number )"		3852620	0					
ANR	3852834	Callee	module -> module_startup_func		3852620	0					
ANR	3852835	PtrMemberAccess	module -> module_startup_func		3852620	0					
ANR	3852836	Identifier	module		3852620	0					
ANR	3852837	Identifier	module_startup_func		3852620	1					
ANR	3852838	ArgumentList	module -> type		3852620	1					
ANR	3852839	Argument	module -> type		3852620	0					
ANR	3852840	PtrMemberAccess	module -> type		3852620	0					
ANR	3852841	Identifier	module		3852620	0					
ANR	3852842	Identifier	type		3852620	1					
ANR	3852843	Argument	module -> module_number		3852620	1					
ANR	3852844	PtrMemberAccess	module -> module_number		3852620	0					
ANR	3852845	Identifier	module		3852620	0					
ANR	3852846	Identifier	module_number		3852620	1					
ANR	3852847	Identifier	FAILURE		3852620	1					
ANR	3852848	CompoundStatement		47:81:1351:1351	3852620	1					
ANR	3852849	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Unable to start %s module"" , module -> name )"	1842:3:48265:48340	3852620	0	True				
ANR	3852850	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Unable to start %s module"" , module -> name )"		3852620	0					
ANR	3852851	Callee	zend_error_noreturn		3852620	0					
ANR	3852852	Identifier	zend_error_noreturn		3852620	0					
ANR	3852853	ArgumentList	E_CORE_ERROR		3852620	1					
ANR	3852854	Argument	E_CORE_ERROR		3852620	0					
ANR	3852855	Identifier	E_CORE_ERROR		3852620	0					
ANR	3852856	Argument	"""Unable to start %s module"""		3852620	1					
ANR	3852857	PrimaryExpression	"""Unable to start %s module"""		3852620	0					
ANR	3852858	Argument	module -> name		3852620	2					
ANR	3852859	PtrMemberAccess	module -> name		3852620	0					
ANR	3852860	Identifier	module		3852620	0					
ANR	3852861	Identifier	name		3852620	1					
ANR	3852862	ExpressionStatement	EG ( current_module ) = NULL	1843:3:48345:48370	3852620	1	True				
ANR	3852863	AssignmentExpression	EG ( current_module ) = NULL		3852620	0		=			
ANR	3852864	CallExpression	EG ( current_module )		3852620	0					
ANR	3852865	Callee	EG		3852620	0					
ANR	3852866	Identifier	EG		3852620	0					
ANR	3852867	ArgumentList	current_module		3852620	1					
ANR	3852868	Argument	current_module		3852620	0					
ANR	3852869	Identifier	current_module		3852620	0					
ANR	3852870	Identifier	NULL		3852620	1					
ANR	3852871	ReturnStatement	return FAILURE ;	1844:3:48375:48389	3852620	2	True				
ANR	3852872	Identifier	FAILURE		3852620	0					
ANR	3852873	ExpressionStatement	EG ( current_module ) = NULL	1846:2:48397:48422	3852620	2	True				
ANR	3852874	AssignmentExpression	EG ( current_module ) = NULL		3852620	0		=			
ANR	3852875	CallExpression	EG ( current_module )		3852620	0					
ANR	3852876	Callee	EG		3852620	0					
ANR	3852877	Identifier	EG		3852620	0					
ANR	3852878	ArgumentList	current_module		3852620	1					
ANR	3852879	Argument	current_module		3852620	0					
ANR	3852880	Identifier	current_module		3852620	0					
ANR	3852881	Identifier	NULL		3852620	1					
ANR	3852882	ReturnStatement	return SUCCESS ;	1848:1:48428:48442	3852620	7	True				
ANR	3852883	Identifier	SUCCESS		3852620	0					
ANR	3852884	ReturnType	ZEND_API int		3852620	1					
ANR	3852885	Identifier	zend_startup_module_ex		3852620	2					
ANR	3852886	ParameterList	zend_module_entry * module		3852620	3					
ANR	3852887	Parameter	zend_module_entry * module	1794:36:46871:46895	3852620	0	True				
ANR	3852888	ParameterType	zend_module_entry *		3852620	0					
ANR	3852889	Identifier	module		3852620	1					
ANR	3852890	CFGEntryNode	ENTRY		3852620		True				
ANR	3852891	CFGExitNode	EXIT		3852620		True				
ANR	3852892	Symbol	module -> module_started		3852620						
ANR	3852893	Symbol	* dep		3852620						
ANR	3852894	Symbol	E_CORE_WARNING		3852620						
ANR	3852895	Symbol	req_mod -> module_started		3852620						
ANR	3852896	Symbol	current_module		3852620						
ANR	3852897	Symbol	dep		3852620						
ANR	3852898	Symbol	* req_mod		3852620						
ANR	3852899	Symbol	strlen		3852620						
ANR	3852900	Symbol	module -> globals_dtor		3852620						
ANR	3852901	Symbol	E_CORE_ERROR		3852620						
ANR	3852902	Symbol	module -> module_startup_func		3852620						
ANR	3852903	Symbol	name_len		3852620						
ANR	3852904	Symbol	dep -> type		3852620						
ANR	3852905	Symbol	MODULE_DEP_REQUIRED		3852620						
ANR	3852906	Symbol	zend_hash_find_ptr		3852620						
ANR	3852907	Symbol	module -> type		3852620						
ANR	3852908	Symbol	module -> deps		3852620						
ANR	3852909	Symbol	zend_string_alloc		3852620						
ANR	3852910	Symbol	EG		3852620						
ANR	3852911	Symbol	SUCCESS		3852620						
ANR	3852912	Symbol	NULL		3852620						
ANR	3852913	Symbol	module -> name		3852620						
ANR	3852914	Symbol	req_mod		3852620						
ANR	3852915	Symbol	module -> globals_size		3852620						
ANR	3852916	Symbol	* module		3852620						
ANR	3852917	Symbol	module		3852620						
ANR	3852918	Symbol	& module_registry		3852620						
ANR	3852919	Symbol	dep -> name		3852620						
ANR	3852920	Symbol	FAILURE		3852620						
ANR	3852921	Symbol	ZSTR_VAL		3852620						
ANR	3852922	Symbol	lcname		3852620						
ANR	3852923	Symbol	module -> module_number		3852620						
ANR	3852924	Symbol	module -> globals_id_ptr		3852620						
ANR	3852925	Symbol	module -> globals_ctor		3852620						
ANR	3852926	Function	zend_startup_module_zval	1852:0:48457:48598							
ANR	3852927	FunctionDef	zend_startup_module_zval (zval * zv)		3852926	0					
ANR	3852928	CompoundStatement		1853:0:48513:48598	3852926	0					
ANR	3852929	IdentifierDeclStatement	zend_module_entry * module = Z_PTR_P ( zv ) ;	1854:1:48516:48555	3852926	0	True				
ANR	3852930	IdentifierDecl	* module = Z_PTR_P ( zv )		3852926	0					
ANR	3852931	IdentifierDeclType	zend_module_entry *		3852926	0					
ANR	3852932	Identifier	module		3852926	1					
ANR	3852933	AssignmentExpression	* module = Z_PTR_P ( zv )		3852926	2		=			
ANR	3852934	Identifier	module		3852926	0					
ANR	3852935	CallExpression	Z_PTR_P ( zv )		3852926	1					
ANR	3852936	Callee	Z_PTR_P		3852926	0					
ANR	3852937	Identifier	Z_PTR_P		3852926	0					
ANR	3852938	ArgumentList	zv		3852926	1					
ANR	3852939	Argument	zv		3852926	0					
ANR	3852940	Identifier	zv		3852926	0					
ANR	3852941	ReturnStatement	return zend_startup_module_ex ( module ) ;	1856:1:48559:48596	3852926	1	True				
ANR	3852942	CallExpression	zend_startup_module_ex ( module )		3852926	0					
ANR	3852943	Callee	zend_startup_module_ex		3852926	0					
ANR	3852944	Identifier	zend_startup_module_ex		3852926	0					
ANR	3852945	ArgumentList	module		3852926	1					
ANR	3852946	Argument	module		3852926	0					
ANR	3852947	Identifier	module		3852926	0					
ANR	3852948	ReturnType	static int		3852926	1					
ANR	3852949	Identifier	zend_startup_module_zval		3852926	2					
ANR	3852950	ParameterList	zval * zv		3852926	3					
ANR	3852951	Parameter	zval * zv	1852:36:48493:48500	3852926	0	True				
ANR	3852952	ParameterType	zval *		3852926	0					
ANR	3852953	Identifier	zv		3852926	1					
ANR	3852954	CFGEntryNode	ENTRY		3852926		True				
ANR	3852955	CFGExitNode	EXIT		3852926		True				
ANR	3852956	Symbol	Z_PTR_P		3852926						
ANR	3852957	Symbol	module		3852926						
ANR	3852958	Symbol	zv		3852926						
ANR	3852959	Symbol	zend_startup_module_ex		3852926						
ANR	3852960	Function	zend_sort_modules	1860:0:48611:49367							
ANR	3852961	FunctionDef	"zend_sort_modules (void * base , size_t count , size_t siz , compare_func_t compare , swap_func_t swp)"		3852960	0					
ANR	3852962	CompoundStatement		1861:0:48730:49367	3852960	0					
ANR	3852963	IdentifierDeclStatement	Bucket * b1 = base ;	1862:1:48733:48750	3852960	0	True				
ANR	3852964	IdentifierDecl	* b1 = base		3852960	0					
ANR	3852965	IdentifierDeclType	Bucket *		3852960	0					
ANR	3852966	Identifier	b1		3852960	1					
ANR	3852967	AssignmentExpression	* b1 = base		3852960	2		=			
ANR	3852968	Identifier	base		3852960	0					
ANR	3852969	Identifier	base		3852960	1					
ANR	3852970	IdentifierDeclStatement	Bucket * b2 ;	1863:1:48753:48763	3852960	1	True				
ANR	3852971	IdentifierDecl	* b2		3852960	0					
ANR	3852972	IdentifierDeclType	Bucket *		3852960	0					
ANR	3852973	Identifier	b2		3852960	1					
ANR	3852974	IdentifierDeclStatement	Bucket * end = b1 + count ;	1864:1:48766:48790	3852960	2	True				
ANR	3852975	IdentifierDecl	* end = b1 + count		3852960	0					
ANR	3852976	IdentifierDeclType	Bucket *		3852960	0					
ANR	3852977	Identifier	end		3852960	1					
ANR	3852978	AssignmentExpression	* end = b1 + count		3852960	2		=			
ANR	3852979	Identifier	end		3852960	0					
ANR	3852980	AdditiveExpression	b1 + count		3852960	1		+			
ANR	3852981	Identifier	b1		3852960	0					
ANR	3852982	Identifier	count		3852960	1					
ANR	3852983	IdentifierDeclStatement	Bucket tmp ;	1865:1:48793:48803	3852960	3	True				
ANR	3852984	IdentifierDecl	tmp		3852960	0					
ANR	3852985	IdentifierDeclType	Bucket		3852960	0					
ANR	3852986	Identifier	tmp		3852960	1					
ANR	3852987	IdentifierDeclStatement	"zend_module_entry * m , * r ;"	1866:1:48806:48830	3852960	4	True				
ANR	3852988	IdentifierDecl	* m		3852960	0					
ANR	3852989	IdentifierDeclType	zend_module_entry *		3852960	0					
ANR	3852990	Identifier	m		3852960	1					
ANR	3852991	IdentifierDecl	* r		3852960	1					
ANR	3852992	IdentifierDeclType	zend_module_entry *		3852960	0					
ANR	3852993	Identifier	r		3852960	1					
ANR	3852994	WhileStatement	while ( b1 < end )		3852960	5					
ANR	3852995	Condition	b1 < end	1868:8:48841:48848	3852960	0	True				
ANR	3852996	RelationalExpression	b1 < end		3852960	0		<			
ANR	3852997	Identifier	b1		3852960	0					
ANR	3852998	Identifier	end		3852960	1					
ANR	3852999	CompoundStatement		8:18:120:120	3852960	1					
ANR	3853000	Label	try_again :	1869:0:48853:48862	3852960	0	True				
ANR	3853001	Identifier	try_again		3852960	0					
ANR	3853002	ExpressionStatement	m = ( zend_module_entry * ) Z_PTR ( b1 -> val )	1870:2:48866:48904	3852960	1	True				
ANR	3853003	AssignmentExpression	m = ( zend_module_entry * ) Z_PTR ( b1 -> val )		3852960	0		=			
ANR	3853004	Identifier	m		3852960	0					
ANR	3853005	CastExpression	( zend_module_entry * ) Z_PTR ( b1 -> val )		3852960	1					
ANR	3853006	CastTarget	zend_module_entry *		3852960	0					
ANR	3853007	CallExpression	Z_PTR ( b1 -> val )		3852960	1					
ANR	3853008	Callee	Z_PTR		3852960	0					
ANR	3853009	Identifier	Z_PTR		3852960	0					
ANR	3853010	ArgumentList	b1 -> val		3852960	1					
ANR	3853011	Argument	b1 -> val		3852960	0					
ANR	3853012	PtrMemberAccess	b1 -> val		3852960	0					
ANR	3853013	Identifier	b1		3852960	0					
ANR	3853014	Identifier	val		3852960	1					
ANR	3853015	IfStatement	if ( ! m -> module_started && m -> deps )		3852960	2					
ANR	3853016	Condition	! m -> module_started && m -> deps	1871:6:48912:48940	3852960	0	True				
ANR	3853017	AndExpression	! m -> module_started && m -> deps		3852960	0		&&			
ANR	3853018	UnaryOperationExpression	! m -> module_started		3852960	0					
ANR	3853019	UnaryOperator	!		3852960	0					
ANR	3853020	PtrMemberAccess	m -> module_started		3852960	1					
ANR	3853021	Identifier	m		3852960	0					
ANR	3853022	Identifier	module_started		3852960	1					
ANR	3853023	PtrMemberAccess	m -> deps		3852960	1					
ANR	3853024	Identifier	m		3852960	0					
ANR	3853025	Identifier	deps		3852960	1					
ANR	3853026	CompoundStatement		12:3:217:253	3852960	1					
ANR	3853027	IdentifierDeclStatement	const zend_module_dep * dep = m -> deps ;	1872:3:48948:48984	3852960	0	True				
ANR	3853028	IdentifierDecl	* dep = m -> deps		3852960	0					
ANR	3853029	IdentifierDeclType	const zend_module_dep *		3852960	0					
ANR	3853030	Identifier	dep		3852960	1					
ANR	3853031	AssignmentExpression	* dep = m -> deps		3852960	2		=			
ANR	3853032	Identifier	dep		3852960	0					
ANR	3853033	PtrMemberAccess	m -> deps		3852960	1					
ANR	3853034	Identifier	m		3852960	0					
ANR	3853035	Identifier	deps		3852960	1					
ANR	3853036	WhileStatement	while ( dep -> name )		3852960	1					
ANR	3853037	Condition	dep -> name	1873:10:48996:49004	3852960	0	True				
ANR	3853038	PtrMemberAccess	dep -> name		3852960	0					
ANR	3853039	Identifier	dep		3852960	0					
ANR	3853040	Identifier	name		3852960	1					
ANR	3853041	CompoundStatement		13:21:276:276	3852960	1					
ANR	3853042	IfStatement	if ( dep -> type == MODULE_DEP_REQUIRED || dep -> type == MODULE_DEP_OPTIONAL )		3852960	0					
ANR	3853043	Condition	dep -> type == MODULE_DEP_REQUIRED || dep -> type == MODULE_DEP_OPTIONAL	1874:8:49017:49084	3852960	0	True				
ANR	3853044	OrExpression	dep -> type == MODULE_DEP_REQUIRED || dep -> type == MODULE_DEP_OPTIONAL		3852960	0		||			
ANR	3853045	EqualityExpression	dep -> type == MODULE_DEP_REQUIRED		3852960	0		==			
ANR	3853046	PtrMemberAccess	dep -> type		3852960	0					
ANR	3853047	Identifier	dep		3852960	0					
ANR	3853048	Identifier	type		3852960	1					
ANR	3853049	Identifier	MODULE_DEP_REQUIRED		3852960	1					
ANR	3853050	EqualityExpression	dep -> type == MODULE_DEP_OPTIONAL		3852960	1		==			
ANR	3853051	PtrMemberAccess	dep -> type		3852960	0					
ANR	3853052	Identifier	dep		3852960	0					
ANR	3853053	Identifier	type		3852960	1					
ANR	3853054	Identifier	MODULE_DEP_OPTIONAL		3852960	1					
ANR	3853055	CompoundStatement		14:78:356:356	3852960	1					
ANR	3853056	ExpressionStatement	b2 = b1 + 1	1875:5:49094:49105	3852960	0	True				
ANR	3853057	AssignmentExpression	b2 = b1 + 1		3852960	0		=			
ANR	3853058	Identifier	b2		3852960	0					
ANR	3853059	AdditiveExpression	b1 + 1		3852960	1		+			
ANR	3853060	Identifier	b1		3852960	0					
ANR	3853061	PrimaryExpression	1		3852960	1					
ANR	3853062	WhileStatement	while ( b2 < end )		3852960	1					
ANR	3853063	Condition	b2 < end	1876:12:49119:49126	3852960	0	True				
ANR	3853064	RelationalExpression	b2 < end		3852960	0		<			
ANR	3853065	Identifier	b2		3852960	0					
ANR	3853066	Identifier	end		3852960	1					
ANR	3853067	CompoundStatement		16:22:398:398	3852960	1					
ANR	3853068	ExpressionStatement	r = ( zend_module_entry * ) Z_PTR ( b2 -> val )	1877:6:49137:49175	3852960	0	True				
ANR	3853069	AssignmentExpression	r = ( zend_module_entry * ) Z_PTR ( b2 -> val )		3852960	0		=			
ANR	3853070	Identifier	r		3852960	0					
ANR	3853071	CastExpression	( zend_module_entry * ) Z_PTR ( b2 -> val )		3852960	1					
ANR	3853072	CastTarget	zend_module_entry *		3852960	0					
ANR	3853073	CallExpression	Z_PTR ( b2 -> val )		3852960	1					
ANR	3853074	Callee	Z_PTR		3852960	0					
ANR	3853075	Identifier	Z_PTR		3852960	0					
ANR	3853076	ArgumentList	b2 -> val		3852960	1					
ANR	3853077	Argument	b2 -> val		3852960	0					
ANR	3853078	PtrMemberAccess	b2 -> val		3852960	0					
ANR	3853079	Identifier	b2		3852960	0					
ANR	3853080	Identifier	val		3852960	1					
ANR	3853081	IfStatement	"if ( strcasecmp ( dep -> name , r -> name ) == 0 )"		3852960	1					
ANR	3853082	Condition	"strcasecmp ( dep -> name , r -> name ) == 0"	1878:10:49187:49221	3852960	0	True				
ANR	3853083	EqualityExpression	"strcasecmp ( dep -> name , r -> name ) == 0"		3852960	0		==			
ANR	3853084	CallExpression	"strcasecmp ( dep -> name , r -> name )"		3852960	0					
ANR	3853085	Callee	strcasecmp		3852960	0					
ANR	3853086	Identifier	strcasecmp		3852960	0					
ANR	3853087	ArgumentList	dep -> name		3852960	1					
ANR	3853088	Argument	dep -> name		3852960	0					
ANR	3853089	PtrMemberAccess	dep -> name		3852960	0					
ANR	3853090	Identifier	dep		3852960	0					
ANR	3853091	Identifier	name		3852960	1					
ANR	3853092	Argument	r -> name		3852960	1					
ANR	3853093	PtrMemberAccess	r -> name		3852960	0					
ANR	3853094	Identifier	r		3852960	0					
ANR	3853095	Identifier	name		3852960	1					
ANR	3853096	PrimaryExpression	0		3852960	1					
ANR	3853097	CompoundStatement		18:47:493:493	3852960	1					
ANR	3853098	ExpressionStatement	tmp = * b1	1879:7:49233:49242	3852960	0	True				
ANR	3853099	AssignmentExpression	tmp = * b1		3852960	0		=			
ANR	3853100	Identifier	tmp		3852960	0					
ANR	3853101	UnaryOperationExpression	* b1		3852960	1					
ANR	3853102	UnaryOperator	*		3852960	0					
ANR	3853103	Identifier	b1		3852960	1					
ANR	3853104	ExpressionStatement	* b1 = * b2	1880:7:49251:49260	3852960	1	True				
ANR	3853105	AssignmentExpression	* b1 = * b2		3852960	0		=			
ANR	3853106	UnaryOperationExpression	* b1		3852960	0					
ANR	3853107	UnaryOperator	*		3852960	0					
ANR	3853108	Identifier	b1		3852960	1					
ANR	3853109	UnaryOperationExpression	* b2		3852960	1					
ANR	3853110	UnaryOperator	*		3852960	0					
ANR	3853111	Identifier	b2		3852960	1					
ANR	3853112	ExpressionStatement	* b2 = tmp	1881:7:49269:49278	3852960	2	True				
ANR	3853113	AssignmentExpression	* b2 = tmp		3852960	0		=			
ANR	3853114	UnaryOperationExpression	* b2		3852960	0					
ANR	3853115	UnaryOperator	*		3852960	0					
ANR	3853116	Identifier	b2		3852960	1					
ANR	3853117	Identifier	tmp		3852960	1					
ANR	3853118	GotoStatement	goto try_again ;	1882:7:49287:49301	3852960	3	True				
ANR	3853119	Identifier	try_again		3852960	0					
ANR	3853120	ExpressionStatement	b2 ++	1884:6:49317:49321	3852960	2	True				
ANR	3853121	PostIncDecOperationExpression	b2 ++		3852960	0					
ANR	3853122	Identifier	b2		3852960	0					
ANR	3853123	IncDec	++		3852960	1					
ANR	3853124	ExpressionStatement	dep ++	1887:4:49340:49345	3852960	1	True				
ANR	3853125	PostIncDecOperationExpression	dep ++		3852960	0					
ANR	3853126	Identifier	dep		3852960	0					
ANR	3853127	IncDec	++		3852960	1					
ANR	3853128	ExpressionStatement	b1 ++	1890:2:49358:49362	3852960	3	True				
ANR	3853129	PostIncDecOperationExpression	b1 ++		3852960	0					
ANR	3853130	Identifier	b1		3852960	0					
ANR	3853131	IncDec	++		3852960	1					
ANR	3853132	ReturnType	static void		3852960	1					
ANR	3853133	Identifier	zend_sort_modules		3852960	2					
ANR	3853134	ParameterList	"void * base , size_t count , size_t siz , compare_func_t compare , swap_func_t swp"		3852960	3					
ANR	3853135	Parameter	void * base	1860:30:48641:48650	3852960	0	True				
ANR	3853136	ParameterType	void *		3852960	0					
ANR	3853137	Identifier	base		3852960	1					
ANR	3853138	Parameter	size_t count	1860:42:48653:48664	3852960	1	True				
ANR	3853139	ParameterType	size_t		3852960	0					
ANR	3853140	Identifier	count		3852960	1					
ANR	3853141	Parameter	size_t siz	1860:56:48667:48676	3852960	2	True				
ANR	3853142	ParameterType	size_t		3852960	0					
ANR	3853143	Identifier	siz		3852960	1					
ANR	3853144	Parameter	compare_func_t compare	1860:68:48679:48700	3852960	3	True				
ANR	3853145	ParameterType	compare_func_t		3852960	0					
ANR	3853146	Identifier	compare		3852960	1					
ANR	3853147	Parameter	swap_func_t swp	1860:92:48703:48717	3852960	4	True				
ANR	3853148	ParameterType	swap_func_t		3852960	0					
ANR	3853149	Identifier	swp		3852960	1					
ANR	3853150	CFGEntryNode	ENTRY		3852960		True				
ANR	3853151	CFGExitNode	EXIT		3852960		True				
ANR	3853152	Symbol	compare		3852960						
ANR	3853153	Symbol	* dep		3852960						
ANR	3853154	Symbol	Z_PTR		3852960						
ANR	3853155	Symbol	swp		3852960						
ANR	3853156	Symbol	m -> module_started		3852960						
ANR	3853157	Symbol	dep		3852960						
ANR	3853158	Symbol	b1		3852960						
ANR	3853159	Symbol	b2		3852960						
ANR	3853160	Symbol	* b2		3852960						
ANR	3853161	Symbol	tmp		3852960						
ANR	3853162	Symbol	* b1		3852960						
ANR	3853163	Symbol	end		3852960						
ANR	3853164	Symbol	MODULE_DEP_OPTIONAL		3852960						
ANR	3853165	Symbol	dep -> type		3852960						
ANR	3853166	Symbol	strcasecmp		3852960						
ANR	3853167	Symbol	MODULE_DEP_REQUIRED		3852960						
ANR	3853168	Symbol	m -> deps		3852960						
ANR	3853169	Symbol	siz		3852960						
ANR	3853170	Symbol	count		3852960						
ANR	3853171	Symbol	dep -> name		3852960						
ANR	3853172	Symbol	m		3852960						
ANR	3853173	Symbol	r		3852960						
ANR	3853174	Symbol	b1 -> val		3852960						
ANR	3853175	Symbol	r -> name		3852960						
ANR	3853176	Symbol	* m		3852960						
ANR	3853177	Symbol	b2 -> val		3852960						
ANR	3853178	Symbol	* r		3852960						
ANR	3853179	Symbol	base		3852960						
ANR	3853180	Function	zend_collect_module_handlers	1895:0:49380:51529							
ANR	3853181	FunctionDef	zend_collect_module_handlers ()		3853180	0					
ANR	3853182	CompoundStatement		1896:0:49439:51529	3853180	0					
ANR	3853183	IdentifierDeclStatement	zend_module_entry * module ;	1897:1:49442:49467	3853180	0	True				
ANR	3853184	IdentifierDecl	* module		3853180	0					
ANR	3853185	IdentifierDeclType	zend_module_entry *		3853180	0					
ANR	3853186	Identifier	module		3853180	1					
ANR	3853187	IdentifierDeclStatement	int startup_count = 0 ;	1898:1:49470:49491	3853180	1	True				
ANR	3853188	IdentifierDecl	startup_count = 0		3853180	0					
ANR	3853189	IdentifierDeclType	int		3853180	0					
ANR	3853190	Identifier	startup_count		3853180	1					
ANR	3853191	AssignmentExpression	startup_count = 0		3853180	2		=			
ANR	3853192	Identifier	startup_count		3853180	0					
ANR	3853193	PrimaryExpression	0		3853180	1					
ANR	3853194	IdentifierDeclStatement	int shutdown_count = 0 ;	1899:1:49494:49516	3853180	2	True				
ANR	3853195	IdentifierDecl	shutdown_count = 0		3853180	0					
ANR	3853196	IdentifierDeclType	int		3853180	0					
ANR	3853197	Identifier	shutdown_count		3853180	1					
ANR	3853198	AssignmentExpression	shutdown_count = 0		3853180	2		=			
ANR	3853199	Identifier	shutdown_count		3853180	0					
ANR	3853200	PrimaryExpression	0		3853180	1					
ANR	3853201	IdentifierDeclStatement	int post_deactivate_count = 0 ;	1900:1:49519:49548	3853180	3	True				
ANR	3853202	IdentifierDecl	post_deactivate_count = 0		3853180	0					
ANR	3853203	IdentifierDeclType	int		3853180	0					
ANR	3853204	Identifier	post_deactivate_count		3853180	1					
ANR	3853205	AssignmentExpression	post_deactivate_count = 0		3853180	2		=			
ANR	3853206	Identifier	post_deactivate_count		3853180	0					
ANR	3853207	PrimaryExpression	0		3853180	1					
ANR	3853208	IdentifierDeclStatement	zend_class_entry * ce ;	1901:1:49551:49571	3853180	4	True				
ANR	3853209	IdentifierDecl	* ce		3853180	0					
ANR	3853210	IdentifierDeclType	zend_class_entry *		3853180	0					
ANR	3853211	Identifier	ce		3853180	1					
ANR	3853212	IdentifierDeclStatement	int class_count = 0 ;	1902:1:49574:49593	3853180	5	True				
ANR	3853213	IdentifierDecl	class_count = 0		3853180	0					
ANR	3853214	IdentifierDeclType	int		3853180	0					
ANR	3853215	Identifier	class_count		3853180	1					
ANR	3853216	AssignmentExpression	class_count = 0		3853180	2		=			
ANR	3853217	Identifier	class_count		3853180	0					
ANR	3853218	PrimaryExpression	0		3853180	1					
ANR	3853219	Statement	ZEND_HASH_FOREACH_PTR	1905:1:49662:49682	3853180	6	True				
ANR	3853220	Statement	(	1905:22:49683:49683	3853180	7	True				
ANR	3853221	Statement	&	1905:23:49684:49684	3853180	8	True				
ANR	3853222	Statement	module_registry	1905:24:49685:49699	3853180	9	True				
ANR	3853223	Statement	","	1905:39:49700:49700	3853180	10	True				
ANR	3853224	Statement	module	1905:41:49702:49707	3853180	11	True				
ANR	3853225	Statement	)	1905:47:49708:49708	3853180	12	True				
ANR	3853226	CompoundStatement		10:49:270:270	3853180	13					
ANR	3853227	IfStatement	if ( module -> request_startup_func )		3853180	0					
ANR	3853228	Condition	module -> request_startup_func	1906:6:49718:49745	3853180	0	True				
ANR	3853229	PtrMemberAccess	module -> request_startup_func		3853180	0					
ANR	3853230	Identifier	module		3853180	0					
ANR	3853231	Identifier	request_startup_func		3853180	1					
ANR	3853232	CompoundStatement		11:36:308:308	3853180	1					
ANR	3853233	ExpressionStatement	startup_count ++	1907:3:49753:49768	3853180	0	True				
ANR	3853234	PostIncDecOperationExpression	startup_count ++		3853180	0					
ANR	3853235	Identifier	startup_count		3853180	0					
ANR	3853236	IncDec	++		3853180	1					
ANR	3853237	IfStatement	if ( module -> request_shutdown_func )		3853180	1					
ANR	3853238	Condition	module -> request_shutdown_func	1909:6:49780:49808	3853180	0	True				
ANR	3853239	PtrMemberAccess	module -> request_shutdown_func		3853180	0					
ANR	3853240	Identifier	module		3853180	0					
ANR	3853241	Identifier	request_shutdown_func		3853180	1					
ANR	3853242	CompoundStatement		14:37:371:371	3853180	1					
ANR	3853243	ExpressionStatement	shutdown_count ++	1910:3:49816:49832	3853180	0	True				
ANR	3853244	PostIncDecOperationExpression	shutdown_count ++		3853180	0					
ANR	3853245	Identifier	shutdown_count		3853180	0					
ANR	3853246	IncDec	++		3853180	1					
ANR	3853247	IfStatement	if ( module -> post_deactivate_func )		3853180	2					
ANR	3853248	Condition	module -> post_deactivate_func	1912:6:49844:49871	3853180	0	True				
ANR	3853249	PtrMemberAccess	module -> post_deactivate_func		3853180	0					
ANR	3853250	Identifier	module		3853180	0					
ANR	3853251	Identifier	post_deactivate_func		3853180	1					
ANR	3853252	CompoundStatement		17:36:434:434	3853180	1					
ANR	3853253	ExpressionStatement	post_deactivate_count ++	1913:3:49879:49902	3853180	0	True				
ANR	3853254	PostIncDecOperationExpression	post_deactivate_count ++		3853180	0					
ANR	3853255	Identifier	post_deactivate_count		3853180	0					
ANR	3853256	IncDec	++		3853180	1					
ANR	3853257	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1915:3:49911:49934	3853180	14	True				
ANR	3853258	CallExpression	ZEND_HASH_FOREACH_END ( )		3853180	0					
ANR	3853259	Callee	ZEND_HASH_FOREACH_END		3853180	0					
ANR	3853260	Identifier	ZEND_HASH_FOREACH_END		3853180	0					
ANR	3853261	ArgumentList			3853180	1					
ANR	3853262	ExpressionStatement	module_request_startup_handlers = ( zend_module_entry * * ) malloc ( sizeof ( zend_module_entry * ) * ( startup_count + 1 + shutdown_count + 1 + post_deactivate_count + 1 ) )	1916:1:49937:50111	3853180	15	True				
ANR	3853263	AssignmentExpression	module_request_startup_handlers = ( zend_module_entry * * ) malloc ( sizeof ( zend_module_entry * ) * ( startup_count + 1 + shutdown_count + 1 + post_deactivate_count + 1 ) )		3853180	0		=			
ANR	3853264	Identifier	module_request_startup_handlers		3853180	0					
ANR	3853265	CastExpression	( zend_module_entry * * ) malloc ( sizeof ( zend_module_entry * ) * ( startup_count + 1 + shutdown_count + 1 + post_deactivate_count + 1 ) )		3853180	1					
ANR	3853266	CastTarget	zend_module_entry * *		3853180	0					
ANR	3853267	CallExpression	malloc ( sizeof ( zend_module_entry * ) * ( startup_count + 1 + shutdown_count + 1 + post_deactivate_count + 1 ) )		3853180	1					
ANR	3853268	Callee	malloc		3853180	0					
ANR	3853269	Identifier	malloc		3853180	0					
ANR	3853270	ArgumentList	sizeof ( zend_module_entry * ) * ( startup_count + 1 + shutdown_count + 1 + post_deactivate_count + 1 )		3853180	1					
ANR	3853271	Argument	sizeof ( zend_module_entry * ) * ( startup_count + 1 + shutdown_count + 1 + post_deactivate_count + 1 )		3853180	0					
ANR	3853272	MultiplicativeExpression	sizeof ( zend_module_entry * ) * ( startup_count + 1 + shutdown_count + 1 + post_deactivate_count + 1 )		3853180	0		*			
ANR	3853273	SizeofExpression	sizeof ( zend_module_entry * )		3853180	0					
ANR	3853274	Sizeof	sizeof		3853180	0					
ANR	3853275	SizeofOperand	zend_module_entry *		3853180	1					
ANR	3853276	AdditiveExpression	startup_count + 1 + shutdown_count + 1 + post_deactivate_count + 1		3853180	1		+			
ANR	3853277	Identifier	startup_count		3853180	0					
ANR	3853278	AdditiveExpression	1 + shutdown_count + 1 + post_deactivate_count + 1		3853180	1		+			
ANR	3853279	PrimaryExpression	1		3853180	0					
ANR	3853280	AdditiveExpression	shutdown_count + 1 + post_deactivate_count + 1		3853180	1		+			
ANR	3853281	Identifier	shutdown_count		3853180	0					
ANR	3853282	AdditiveExpression	1 + post_deactivate_count + 1		3853180	1		+			
ANR	3853283	PrimaryExpression	1		3853180	0					
ANR	3853284	AdditiveExpression	post_deactivate_count + 1		3853180	1		+			
ANR	3853285	Identifier	post_deactivate_count		3853180	0					
ANR	3853286	PrimaryExpression	1		3853180	1					
ANR	3853287	ExpressionStatement	module_request_startup_handlers [ startup_count ] = NULL	1921:1:50114:50167	3853180	16	True				
ANR	3853288	AssignmentExpression	module_request_startup_handlers [ startup_count ] = NULL		3853180	0		=			
ANR	3853289	ArrayIndexing	module_request_startup_handlers [ startup_count ]		3853180	0					
ANR	3853290	Identifier	module_request_startup_handlers		3853180	0					
ANR	3853291	Identifier	startup_count		3853180	1					
ANR	3853292	Identifier	NULL		3853180	1					
ANR	3853293	ExpressionStatement	module_request_shutdown_handlers = module_request_startup_handlers + startup_count + 1	1922:1:50170:50256	3853180	17	True				
ANR	3853294	AssignmentExpression	module_request_shutdown_handlers = module_request_startup_handlers + startup_count + 1		3853180	0		=			
ANR	3853295	Identifier	module_request_shutdown_handlers		3853180	0					
ANR	3853296	AdditiveExpression	module_request_startup_handlers + startup_count + 1		3853180	1		+			
ANR	3853297	Identifier	module_request_startup_handlers		3853180	0					
ANR	3853298	AdditiveExpression	startup_count + 1		3853180	1		+			
ANR	3853299	Identifier	startup_count		3853180	0					
ANR	3853300	PrimaryExpression	1		3853180	1					
ANR	3853301	ExpressionStatement	module_request_shutdown_handlers [ shutdown_count ] = NULL	1923:1:50259:50314	3853180	18	True				
ANR	3853302	AssignmentExpression	module_request_shutdown_handlers [ shutdown_count ] = NULL		3853180	0		=			
ANR	3853303	ArrayIndexing	module_request_shutdown_handlers [ shutdown_count ]		3853180	0					
ANR	3853304	Identifier	module_request_shutdown_handlers		3853180	0					
ANR	3853305	Identifier	shutdown_count		3853180	1					
ANR	3853306	Identifier	NULL		3853180	1					
ANR	3853307	ExpressionStatement	module_post_deactivate_handlers = module_request_shutdown_handlers + shutdown_count + 1	1924:1:50317:50404	3853180	19	True				
ANR	3853308	AssignmentExpression	module_post_deactivate_handlers = module_request_shutdown_handlers + shutdown_count + 1		3853180	0		=			
ANR	3853309	Identifier	module_post_deactivate_handlers		3853180	0					
ANR	3853310	AdditiveExpression	module_request_shutdown_handlers + shutdown_count + 1		3853180	1		+			
ANR	3853311	Identifier	module_request_shutdown_handlers		3853180	0					
ANR	3853312	AdditiveExpression	shutdown_count + 1		3853180	1		+			
ANR	3853313	Identifier	shutdown_count		3853180	0					
ANR	3853314	PrimaryExpression	1		3853180	1					
ANR	3853315	ExpressionStatement	module_post_deactivate_handlers [ post_deactivate_count ] = NULL	1925:1:50407:50468	3853180	20	True				
ANR	3853316	AssignmentExpression	module_post_deactivate_handlers [ post_deactivate_count ] = NULL		3853180	0		=			
ANR	3853317	ArrayIndexing	module_post_deactivate_handlers [ post_deactivate_count ]		3853180	0					
ANR	3853318	Identifier	module_post_deactivate_handlers		3853180	0					
ANR	3853319	Identifier	post_deactivate_count		3853180	1					
ANR	3853320	Identifier	NULL		3853180	1					
ANR	3853321	ExpressionStatement	startup_count = 0	1926:1:50471:50488	3853180	21	True				
ANR	3853322	AssignmentExpression	startup_count = 0		3853180	0		=			
ANR	3853323	Identifier	startup_count		3853180	0					
ANR	3853324	PrimaryExpression	0		3853180	1					
ANR	3853325	Statement	ZEND_HASH_FOREACH_PTR	1928:1:50492:50512	3853180	22	True				
ANR	3853326	Statement	(	1928:22:50513:50513	3853180	23	True				
ANR	3853327	Statement	&	1928:23:50514:50514	3853180	24	True				
ANR	3853328	Statement	module_registry	1928:24:50515:50529	3853180	25	True				
ANR	3853329	Statement	","	1928:39:50530:50530	3853180	26	True				
ANR	3853330	Statement	module	1928:41:50532:50537	3853180	27	True				
ANR	3853331	Statement	)	1928:47:50538:50538	3853180	28	True				
ANR	3853332	CompoundStatement		33:49:1100:1100	3853180	29					
ANR	3853333	IfStatement	if ( module -> request_startup_func )		3853180	0					
ANR	3853334	Condition	module -> request_startup_func	1929:6:50548:50575	3853180	0	True				
ANR	3853335	PtrMemberAccess	module -> request_startup_func		3853180	0					
ANR	3853336	Identifier	module		3853180	0					
ANR	3853337	Identifier	request_startup_func		3853180	1					
ANR	3853338	CompoundStatement		34:36:1138:1138	3853180	1					
ANR	3853339	ExpressionStatement	module_request_startup_handlers [ startup_count ++ ] = module	1930:3:50583:50640	3853180	0	True				
ANR	3853340	AssignmentExpression	module_request_startup_handlers [ startup_count ++ ] = module		3853180	0		=			
ANR	3853341	ArrayIndexing	module_request_startup_handlers [ startup_count ++ ]		3853180	0					
ANR	3853342	Identifier	module_request_startup_handlers		3853180	0					
ANR	3853343	PostIncDecOperationExpression	startup_count ++		3853180	1					
ANR	3853344	Identifier	startup_count		3853180	0					
ANR	3853345	IncDec	++		3853180	1					
ANR	3853346	Identifier	module		3853180	1					
ANR	3853347	IfStatement	if ( module -> request_shutdown_func )		3853180	1					
ANR	3853348	Condition	module -> request_shutdown_func	1932:6:50652:50680	3853180	0	True				
ANR	3853349	PtrMemberAccess	module -> request_shutdown_func		3853180	0					
ANR	3853350	Identifier	module		3853180	0					
ANR	3853351	Identifier	request_shutdown_func		3853180	1					
ANR	3853352	CompoundStatement		37:37:1243:1243	3853180	1					
ANR	3853353	ExpressionStatement	module_request_shutdown_handlers [ -- shutdown_count ] = module	1933:3:50688:50747	3853180	0	True				
ANR	3853354	AssignmentExpression	module_request_shutdown_handlers [ -- shutdown_count ] = module		3853180	0		=			
ANR	3853355	ArrayIndexing	module_request_shutdown_handlers [ -- shutdown_count ]		3853180	0					
ANR	3853356	Identifier	module_request_shutdown_handlers		3853180	0					
ANR	3853357	UnaryExpression	-- shutdown_count		3853180	1					
ANR	3853358	IncDec	--		3853180	0					
ANR	3853359	Identifier	shutdown_count		3853180	1					
ANR	3853360	Identifier	module		3853180	1					
ANR	3853361	IfStatement	if ( module -> post_deactivate_func )		3853180	2					
ANR	3853362	Condition	module -> post_deactivate_func	1935:6:50759:50786	3853180	0	True				
ANR	3853363	PtrMemberAccess	module -> post_deactivate_func		3853180	0					
ANR	3853364	Identifier	module		3853180	0					
ANR	3853365	Identifier	post_deactivate_func		3853180	1					
ANR	3853366	CompoundStatement		40:36:1349:1349	3853180	1					
ANR	3853367	ExpressionStatement	module_post_deactivate_handlers [ -- post_deactivate_count ] = module	1936:3:50794:50859	3853180	0	True				
ANR	3853368	AssignmentExpression	module_post_deactivate_handlers [ -- post_deactivate_count ] = module		3853180	0		=			
ANR	3853369	ArrayIndexing	module_post_deactivate_handlers [ -- post_deactivate_count ]		3853180	0					
ANR	3853370	Identifier	module_post_deactivate_handlers		3853180	0					
ANR	3853371	UnaryExpression	-- post_deactivate_count		3853180	1					
ANR	3853372	IncDec	--		3853180	0					
ANR	3853373	Identifier	post_deactivate_count		3853180	1					
ANR	3853374	Identifier	module		3853180	1					
ANR	3853375	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1938:3:50868:50891	3853180	30	True				
ANR	3853376	CallExpression	ZEND_HASH_FOREACH_END ( )		3853180	0					
ANR	3853377	Callee	ZEND_HASH_FOREACH_END		3853180	0					
ANR	3853378	Identifier	ZEND_HASH_FOREACH_END		3853180	0					
ANR	3853379	ArgumentList			3853180	1					
ANR	3853380	Statement	ZEND_HASH_FOREACH_PTR	1941:1:50947:50967	3853180	31	True				
ANR	3853381	Statement	(	1941:22:50968:50968	3853180	32	True				
ANR	3853382	Statement	CG	1941:23:50969:50970	3853180	33	True				
ANR	3853383	Statement	(	1941:25:50971:50971	3853180	34	True				
ANR	3853384	Statement	class_table	1941:26:50972:50982	3853180	35	True				
ANR	3853385	Statement	)	1941:37:50983:50983	3853180	36	True				
ANR	3853386	Statement	","	1941:38:50984:50984	3853180	37	True				
ANR	3853387	Statement	ce	1941:40:50986:50987	3853180	38	True				
ANR	3853388	Statement	)	1941:42:50988:50988	3853180	39	True				
ANR	3853389	CompoundStatement		46:44:1550:1550	3853180	40					
ANR	3853390	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS && ce -> default_static_members_count > 0 )		3853180	0					
ANR	3853391	Condition	ce -> type == ZEND_INTERNAL_CLASS && ce -> default_static_members_count > 0	1942:6:50998:51074	3853180	0	True				
ANR	3853392	AndExpression	ce -> type == ZEND_INTERNAL_CLASS && ce -> default_static_members_count > 0		3853180	0		&&			
ANR	3853393	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3853180	0		==			
ANR	3853394	PtrMemberAccess	ce -> type		3853180	0					
ANR	3853395	Identifier	ce		3853180	0					
ANR	3853396	Identifier	type		3853180	1					
ANR	3853397	Identifier	ZEND_INTERNAL_CLASS		3853180	1					
ANR	3853398	RelationalExpression	ce -> default_static_members_count > 0		3853180	1		>			
ANR	3853399	PtrMemberAccess	ce -> default_static_members_count		3853180	0					
ANR	3853400	Identifier	ce		3853180	0					
ANR	3853401	Identifier	default_static_members_count		3853180	1					
ANR	3853402	PrimaryExpression	0		3853180	1					
ANR	3853403	CompoundStatement		48:44:1637:1637	3853180	1					
ANR	3853404	ExpressionStatement	class_count ++	1944:6:51085:51098	3853180	0	True				
ANR	3853405	PostIncDecOperationExpression	class_count ++		3853180	0					
ANR	3853406	Identifier	class_count		3853180	0					
ANR	3853407	IncDec	++		3853180	1					
ANR	3853408	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1946:3:51107:51130	3853180	41	True				
ANR	3853409	CallExpression	ZEND_HASH_FOREACH_END ( )		3853180	0					
ANR	3853410	Callee	ZEND_HASH_FOREACH_END		3853180	0					
ANR	3853411	Identifier	ZEND_HASH_FOREACH_END		3853180	0					
ANR	3853412	ArgumentList			3853180	1					
ANR	3853413	ExpressionStatement	class_cleanup_handlers = ( zend_class_entry * * ) malloc ( sizeof ( zend_class_entry * ) * ( class_count + 1 ) )	1948:1:51134:51237	3853180	42	True				
ANR	3853414	AssignmentExpression	class_cleanup_handlers = ( zend_class_entry * * ) malloc ( sizeof ( zend_class_entry * ) * ( class_count + 1 ) )		3853180	0		=			
ANR	3853415	Identifier	class_cleanup_handlers		3853180	0					
ANR	3853416	CastExpression	( zend_class_entry * * ) malloc ( sizeof ( zend_class_entry * ) * ( class_count + 1 ) )		3853180	1					
ANR	3853417	CastTarget	zend_class_entry * *		3853180	0					
ANR	3853418	CallExpression	malloc ( sizeof ( zend_class_entry * ) * ( class_count + 1 ) )		3853180	1					
ANR	3853419	Callee	malloc		3853180	0					
ANR	3853420	Identifier	malloc		3853180	0					
ANR	3853421	ArgumentList	sizeof ( zend_class_entry * ) * ( class_count + 1 )		3853180	1					
ANR	3853422	Argument	sizeof ( zend_class_entry * ) * ( class_count + 1 )		3853180	0					
ANR	3853423	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( class_count + 1 )		3853180	0		*			
ANR	3853424	SizeofExpression	sizeof ( zend_class_entry * )		3853180	0					
ANR	3853425	Sizeof	sizeof		3853180	0					
ANR	3853426	SizeofOperand	zend_class_entry *		3853180	1					
ANR	3853427	AdditiveExpression	class_count + 1		3853180	1		+			
ANR	3853428	Identifier	class_count		3853180	0					
ANR	3853429	PrimaryExpression	1		3853180	1					
ANR	3853430	ExpressionStatement	class_cleanup_handlers [ class_count ] = NULL	1951:1:51240:51282	3853180	43	True				
ANR	3853431	AssignmentExpression	class_cleanup_handlers [ class_count ] = NULL		3853180	0		=			
ANR	3853432	ArrayIndexing	class_cleanup_handlers [ class_count ]		3853180	0					
ANR	3853433	Identifier	class_cleanup_handlers		3853180	0					
ANR	3853434	Identifier	class_count		3853180	1					
ANR	3853435	Identifier	NULL		3853180	1					
ANR	3853436	IfStatement	if ( class_count )		3853180	44					
ANR	3853437	Condition	class_count	1953:5:51290:51300	3853180	0	True				
ANR	3853438	Identifier	class_count		3853180	0					
ANR	3853439	CompoundStatement		58:18:1863:1863	3853180	1					
ANR	3853440	Statement	ZEND_HASH_FOREACH_PTR	1954:2:51307:51327	3853180	0	True				
ANR	3853441	Statement	(	1954:23:51328:51328	3853180	1	True				
ANR	3853442	Statement	CG	1954:24:51329:51330	3853180	2	True				
ANR	3853443	Statement	(	1954:26:51331:51331	3853180	3	True				
ANR	3853444	Statement	class_table	1954:27:51332:51342	3853180	4	True				
ANR	3853445	Statement	)	1954:38:51343:51343	3853180	5	True				
ANR	3853446	Statement	","	1954:39:51344:51344	3853180	6	True				
ANR	3853447	Statement	ce	1954:41:51346:51347	3853180	7	True				
ANR	3853448	Statement	)	1954:43:51348:51348	3853180	8	True				
ANR	3853449	CompoundStatement		59:45:1910:1910	3853180	9					
ANR	3853450	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS && ce -> default_static_members_count > 0 )		3853180	0					
ANR	3853451	Condition	ce -> type == ZEND_INTERNAL_CLASS && ce -> default_static_members_count > 0	1955:7:51359:51436	3853180	0	True				
ANR	3853452	AndExpression	ce -> type == ZEND_INTERNAL_CLASS && ce -> default_static_members_count > 0		3853180	0		&&			
ANR	3853453	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3853180	0		==			
ANR	3853454	PtrMemberAccess	ce -> type		3853180	0					
ANR	3853455	Identifier	ce		3853180	0					
ANR	3853456	Identifier	type		3853180	1					
ANR	3853457	Identifier	ZEND_INTERNAL_CLASS		3853180	1					
ANR	3853458	RelationalExpression	ce -> default_static_members_count > 0		3853180	1		>			
ANR	3853459	PtrMemberAccess	ce -> default_static_members_count		3853180	0					
ANR	3853460	Identifier	ce		3853180	0					
ANR	3853461	Identifier	default_static_members_count		3853180	1					
ANR	3853462	PrimaryExpression	0		3853180	1					
ANR	3853463	CompoundStatement		61:45:1999:1999	3853180	1					
ANR	3853464	ExpressionStatement	class_cleanup_handlers [ -- class_count ] = ce	1957:7:51448:51490	3853180	0	True				
ANR	3853465	AssignmentExpression	class_cleanup_handlers [ -- class_count ] = ce		3853180	0		=			
ANR	3853466	ArrayIndexing	class_cleanup_handlers [ -- class_count ]		3853180	0					
ANR	3853467	Identifier	class_cleanup_handlers		3853180	0					
ANR	3853468	UnaryExpression	-- class_count		3853180	1					
ANR	3853469	IncDec	--		3853180	0					
ANR	3853470	Identifier	class_count		3853180	1					
ANR	3853471	Identifier	ce		3853180	1					
ANR	3853472	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1959:4:51501:51524	3853180	10	True				
ANR	3853473	CallExpression	ZEND_HASH_FOREACH_END ( )		3853180	0					
ANR	3853474	Callee	ZEND_HASH_FOREACH_END		3853180	0					
ANR	3853475	Identifier	ZEND_HASH_FOREACH_END		3853180	0					
ANR	3853476	ArgumentList			3853180	1					
ANR	3853477	ReturnType	ZEND_API void		3853180	1					
ANR	3853478	Identifier	zend_collect_module_handlers		3853180	2					
ANR	3853479	ParameterList			3853180	3					
ANR	3853480	CFGEntryNode	ENTRY		3853180		True				
ANR	3853481	CFGExitNode	EXIT		3853180		True				
ANR	3853482	Symbol	shutdown_count		3853180						
ANR	3853483	Symbol	* module_request_shutdown_handlers		3853180						
ANR	3853484	Symbol	ce -> type		3853180						
ANR	3853485	Symbol	* class_cleanup_handlers		3853180						
ANR	3853486	Symbol	ce -> default_static_members_count		3853180						
ANR	3853487	Symbol	class_cleanup_handlers		3853180						
ANR	3853488	Symbol	module -> request_startup_func		3853180						
ANR	3853489	Symbol	module -> request_shutdown_func		3853180						
ANR	3853490	Symbol	* ce		3853180						
ANR	3853491	Symbol	* module_post_deactivate_handlers		3853180						
ANR	3853492	Symbol	* startup_count		3853180						
ANR	3853493	Symbol	* post_deactivate_count		3853180						
ANR	3853494	Symbol	module_request_shutdown_handlers		3853180						
ANR	3853495	Symbol	module_request_startup_handlers		3853180						
ANR	3853496	Symbol	* shutdown_count		3853180						
ANR	3853497	Symbol	ZEND_INTERNAL_CLASS		3853180						
ANR	3853498	Symbol	malloc		3853180						
ANR	3853499	Symbol	ce		3853180						
ANR	3853500	Symbol	NULL		3853180						
ANR	3853501	Symbol	* module_request_startup_handlers		3853180						
ANR	3853502	Symbol	* module		3853180						
ANR	3853503	Symbol	module		3853180						
ANR	3853504	Symbol	startup_count		3853180						
ANR	3853505	Symbol	module -> post_deactivate_func		3853180						
ANR	3853506	Symbol	* class_count		3853180						
ANR	3853507	Symbol	post_deactivate_count		3853180						
ANR	3853508	Symbol	module_post_deactivate_handlers		3853180						
ANR	3853509	Symbol	class_count		3853180						
ANR	3853510	Function	zend_startup_modules	1964:0:51542:51739							
ANR	3853511	FunctionDef	zend_startup_modules ()		3853510	0					
ANR	3853512	CompoundStatement		1965:0:51592:51739	3853510	0					
ANR	3853513	ExpressionStatement	"zend_hash_sort_ex ( & module_registry , zend_sort_modules , NULL , 0 )"	1966:1:51595:51658	3853510	0	True				
ANR	3853514	CallExpression	"zend_hash_sort_ex ( & module_registry , zend_sort_modules , NULL , 0 )"		3853510	0					
ANR	3853515	Callee	zend_hash_sort_ex		3853510	0					
ANR	3853516	Identifier	zend_hash_sort_ex		3853510	0					
ANR	3853517	ArgumentList	& module_registry		3853510	1					
ANR	3853518	Argument	& module_registry		3853510	0					
ANR	3853519	UnaryOperationExpression	& module_registry		3853510	0					
ANR	3853520	UnaryOperator	&		3853510	0					
ANR	3853521	Identifier	module_registry		3853510	1					
ANR	3853522	Argument	zend_sort_modules		3853510	1					
ANR	3853523	Identifier	zend_sort_modules		3853510	0					
ANR	3853524	Argument	NULL		3853510	2					
ANR	3853525	Identifier	NULL		3853510	0					
ANR	3853526	Argument	0		3853510	3					
ANR	3853527	PrimaryExpression	0		3853510	0					
ANR	3853528	ExpressionStatement	"zend_hash_apply ( & module_registry , zend_startup_module_zval )"	1967:1:51661:51720	3853510	1	True				
ANR	3853529	CallExpression	"zend_hash_apply ( & module_registry , zend_startup_module_zval )"		3853510	0					
ANR	3853530	Callee	zend_hash_apply		3853510	0					
ANR	3853531	Identifier	zend_hash_apply		3853510	0					
ANR	3853532	ArgumentList	& module_registry		3853510	1					
ANR	3853533	Argument	& module_registry		3853510	0					
ANR	3853534	UnaryOperationExpression	& module_registry		3853510	0					
ANR	3853535	UnaryOperator	&		3853510	0					
ANR	3853536	Identifier	module_registry		3853510	1					
ANR	3853537	Argument	zend_startup_module_zval		3853510	1					
ANR	3853538	Identifier	zend_startup_module_zval		3853510	0					
ANR	3853539	ReturnStatement	return SUCCESS ;	1968:1:51723:51737	3853510	2	True				
ANR	3853540	Identifier	SUCCESS		3853510	0					
ANR	3853541	ReturnType	ZEND_API int		3853510	1					
ANR	3853542	Identifier	zend_startup_modules		3853510	2					
ANR	3853543	ParameterList			3853510	3					
ANR	3853544	CFGEntryNode	ENTRY		3853510		True				
ANR	3853545	CFGExitNode	EXIT		3853510		True				
ANR	3853546	Symbol	NULL		3853510						
ANR	3853547	Symbol	SUCCESS		3853510						
ANR	3853548	Symbol	zend_sort_modules		3853510						
ANR	3853549	Symbol	zend_startup_module_zval		3853510						
ANR	3853550	Symbol	& module_registry		3853510						
ANR	3853551	Function	zend_destroy_modules	1972:0:51752:51931							
ANR	3853552	FunctionDef	zend_destroy_modules ()		3853551	0					
ANR	3853553	CompoundStatement		1973:0:51803:51931	3853551	0					
ANR	3853554	ExpressionStatement	free ( class_cleanup_handlers )	1974:1:51806:51834	3853551	0	True				
ANR	3853555	CallExpression	free ( class_cleanup_handlers )		3853551	0					
ANR	3853556	Callee	free		3853551	0					
ANR	3853557	Identifier	free		3853551	0					
ANR	3853558	ArgumentList	class_cleanup_handlers		3853551	1					
ANR	3853559	Argument	class_cleanup_handlers		3853551	0					
ANR	3853560	Identifier	class_cleanup_handlers		3853551	0					
ANR	3853561	ExpressionStatement	free ( module_request_startup_handlers )	1975:1:51837:51874	3853551	1	True				
ANR	3853562	CallExpression	free ( module_request_startup_handlers )		3853551	0					
ANR	3853563	Callee	free		3853551	0					
ANR	3853564	Identifier	free		3853551	0					
ANR	3853565	ArgumentList	module_request_startup_handlers		3853551	1					
ANR	3853566	Argument	module_request_startup_handlers		3853551	0					
ANR	3853567	Identifier	module_request_startup_handlers		3853551	0					
ANR	3853568	ExpressionStatement	zend_hash_graceful_reverse_destroy ( & module_registry )	1976:1:51877:51929	3853551	2	True				
ANR	3853569	CallExpression	zend_hash_graceful_reverse_destroy ( & module_registry )		3853551	0					
ANR	3853570	Callee	zend_hash_graceful_reverse_destroy		3853551	0					
ANR	3853571	Identifier	zend_hash_graceful_reverse_destroy		3853551	0					
ANR	3853572	ArgumentList	& module_registry		3853551	1					
ANR	3853573	Argument	& module_registry		3853551	0					
ANR	3853574	UnaryOperationExpression	& module_registry		3853551	0					
ANR	3853575	UnaryOperator	&		3853551	0					
ANR	3853576	Identifier	module_registry		3853551	1					
ANR	3853577	ReturnType	ZEND_API void		3853551	1					
ANR	3853578	Identifier	zend_destroy_modules		3853551	2					
ANR	3853579	ParameterList			3853551	3					
ANR	3853580	CFGEntryNode	ENTRY		3853551		True				
ANR	3853581	CFGExitNode	EXIT		3853551		True				
ANR	3853582	Symbol	class_cleanup_handlers		3853551						
ANR	3853583	Symbol	& module_registry		3853551						
ANR	3853584	Symbol	module_request_startup_handlers		3853551						
ANR	3853585	Function	zend_register_module_ex	1980:0:51944:53645							
ANR	3853586	FunctionDef	zend_register_module_ex (zend_module_entry * module)		3853585	0					
ANR	3853587	CompoundStatement		1981:0:52033:53645	3853585	0					
ANR	3853588	IdentifierDeclStatement	size_t name_len ;	1982:1:52036:52051	3853585	0	True				
ANR	3853589	IdentifierDecl	name_len		3853585	0					
ANR	3853590	IdentifierDeclType	size_t		3853585	0					
ANR	3853591	Identifier	name_len		3853585	1					
ANR	3853592	IdentifierDeclStatement	zend_string * lcname ;	1983:1:52054:52073	3853585	1	True				
ANR	3853593	IdentifierDecl	* lcname		3853585	0					
ANR	3853594	IdentifierDeclType	zend_string *		3853585	0					
ANR	3853595	Identifier	lcname		3853585	1					
ANR	3853596	IdentifierDeclStatement	zend_module_entry * module_ptr ;	1984:1:52076:52105	3853585	2	True				
ANR	3853597	IdentifierDecl	* module_ptr		3853585	0					
ANR	3853598	IdentifierDeclType	zend_module_entry *		3853585	0					
ANR	3853599	Identifier	module_ptr		3853585	1					
ANR	3853600	IfStatement	if ( ! module )		3853585	3					
ANR	3853601	Condition	! module	1986:5:52113:52119	3853585	0	True				
ANR	3853602	UnaryOperationExpression	! module		3853585	0					
ANR	3853603	UnaryOperator	!		3853585	0					
ANR	3853604	Identifier	module		3853585	1					
ANR	3853605	CompoundStatement		6:14:88:88	3853585	1					
ANR	3853606	ReturnStatement	return NULL ;	1987:2:52126:52137	3853585	0	True				
ANR	3853607	Identifier	NULL		3853585	0					
ANR	3853608	ExpressionStatement	"zend_printf ( ""%s: Registering module %d\\n"" , module -> name , module -> module_number )"	1991:1:52150:52229	3853585	4	True				
ANR	3853609	CallExpression	"zend_printf ( ""%s: Registering module %d\\n"" , module -> name , module -> module_number )"		3853585	0					
ANR	3853610	Callee	zend_printf		3853585	0					
ANR	3853611	Identifier	zend_printf		3853585	0					
ANR	3853612	ArgumentList	"""%s: Registering module %d\\n"""		3853585	1					
ANR	3853613	Argument	"""%s: Registering module %d\\n"""		3853585	0					
ANR	3853614	PrimaryExpression	"""%s: Registering module %d\\n"""		3853585	0					
ANR	3853615	Argument	module -> name		3853585	1					
ANR	3853616	PtrMemberAccess	module -> name		3853585	0					
ANR	3853617	Identifier	module		3853585	0					
ANR	3853618	Identifier	name		3853585	1					
ANR	3853619	Argument	module -> module_number		3853585	2					
ANR	3853620	PtrMemberAccess	module -> module_number		3853585	0					
ANR	3853621	Identifier	module		3853585	0					
ANR	3853622	Identifier	module_number		3853585	1					
ANR	3853623	IfStatement	if ( module -> deps )		3853585	5					
ANR	3853624	Condition	module -> deps	1995:5:52277:52288	3853585	0	True				
ANR	3853625	PtrMemberAccess	module -> deps		3853585	0					
ANR	3853626	Identifier	module		3853585	0					
ANR	3853627	Identifier	deps		3853585	1					
ANR	3853628	CompoundStatement		16:2:261:302	3853585	1					
ANR	3853629	IdentifierDeclStatement	const zend_module_dep * dep = module -> deps ;	1996:2:52295:52336	3853585	0	True				
ANR	3853630	IdentifierDecl	* dep = module -> deps		3853585	0					
ANR	3853631	IdentifierDeclType	const zend_module_dep *		3853585	0					
ANR	3853632	Identifier	dep		3853585	1					
ANR	3853633	AssignmentExpression	* dep = module -> deps		3853585	2		=			
ANR	3853634	Identifier	dep		3853585	0					
ANR	3853635	PtrMemberAccess	module -> deps		3853585	1					
ANR	3853636	Identifier	module		3853585	0					
ANR	3853637	Identifier	deps		3853585	1					
ANR	3853638	WhileStatement	while ( dep -> name )		3853585	1					
ANR	3853639	Condition	dep -> name	1998:9:52348:52356	3853585	0	True				
ANR	3853640	PtrMemberAccess	dep -> name		3853585	0					
ANR	3853641	Identifier	dep		3853585	0					
ANR	3853642	Identifier	name		3853585	1					
ANR	3853643	CompoundStatement		18:20:325:325	3853585	1					
ANR	3853644	IfStatement	if ( dep -> type == MODULE_DEP_CONFLICTS )		3853585	0					
ANR	3853645	Condition	dep -> type == MODULE_DEP_CONFLICTS	1999:7:52368:52400	3853585	0	True				
ANR	3853646	EqualityExpression	dep -> type == MODULE_DEP_CONFLICTS		3853585	0		==			
ANR	3853647	PtrMemberAccess	dep -> type		3853585	0					
ANR	3853648	Identifier	dep		3853585	0					
ANR	3853649	Identifier	type		3853585	1					
ANR	3853650	Identifier	MODULE_DEP_CONFLICTS		3853585	1					
ANR	3853651	CompoundStatement		19:42:369:369	3853585	1					
ANR	3853652	ExpressionStatement	name_len = strlen ( dep -> name )	2000:4:52409:52437	3853585	0	True				
ANR	3853653	AssignmentExpression	name_len = strlen ( dep -> name )		3853585	0		=			
ANR	3853654	Identifier	name_len		3853585	0					
ANR	3853655	CallExpression	strlen ( dep -> name )		3853585	1					
ANR	3853656	Callee	strlen		3853585	0					
ANR	3853657	Identifier	strlen		3853585	0					
ANR	3853658	ArgumentList	dep -> name		3853585	1					
ANR	3853659	Argument	dep -> name		3853585	0					
ANR	3853660	PtrMemberAccess	dep -> name		3853585	0					
ANR	3853661	Identifier	dep		3853585	0					
ANR	3853662	Identifier	name		3853585	1					
ANR	3853663	ExpressionStatement	"lcname = zend_string_alloc ( name_len , 0 )"	2001:4:52443:52482	3853585	1	True				
ANR	3853664	AssignmentExpression	"lcname = zend_string_alloc ( name_len , 0 )"		3853585	0		=			
ANR	3853665	Identifier	lcname		3853585	0					
ANR	3853666	CallExpression	"zend_string_alloc ( name_len , 0 )"		3853585	1					
ANR	3853667	Callee	zend_string_alloc		3853585	0					
ANR	3853668	Identifier	zend_string_alloc		3853585	0					
ANR	3853669	ArgumentList	name_len		3853585	1					
ANR	3853670	Argument	name_len		3853585	0					
ANR	3853671	Identifier	name_len		3853585	0					
ANR	3853672	Argument	0		3853585	1					
ANR	3853673	PrimaryExpression	0		3853585	0					
ANR	3853674	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , dep -> name , name_len )"	2002:4:52488:52548	3853585	2	True				
ANR	3853675	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , dep -> name , name_len )"		3853585	0					
ANR	3853676	Callee	zend_str_tolower_copy		3853585	0					
ANR	3853677	Identifier	zend_str_tolower_copy		3853585	0					
ANR	3853678	ArgumentList	ZSTR_VAL ( lcname )		3853585	1					
ANR	3853679	Argument	ZSTR_VAL ( lcname )		3853585	0					
ANR	3853680	CallExpression	ZSTR_VAL ( lcname )		3853585	0					
ANR	3853681	Callee	ZSTR_VAL		3853585	0					
ANR	3853682	Identifier	ZSTR_VAL		3853585	0					
ANR	3853683	ArgumentList	lcname		3853585	1					
ANR	3853684	Argument	lcname		3853585	0					
ANR	3853685	Identifier	lcname		3853585	0					
ANR	3853686	Argument	dep -> name		3853585	1					
ANR	3853687	PtrMemberAccess	dep -> name		3853585	0					
ANR	3853688	Identifier	dep		3853585	0					
ANR	3853689	Identifier	name		3853585	1					
ANR	3853690	Argument	name_len		3853585	2					
ANR	3853691	Identifier	name_len		3853585	0					
ANR	3853692	IfStatement	"if ( zend_hash_exists ( & module_registry , lcname ) )"		3853585	3					
ANR	3853693	Condition	"zend_hash_exists ( & module_registry , lcname )"	2004:8:52559:52600	3853585	0	True				
ANR	3853694	CallExpression	"zend_hash_exists ( & module_registry , lcname )"		3853585	0					
ANR	3853695	Callee	zend_hash_exists		3853585	0					
ANR	3853696	Identifier	zend_hash_exists		3853585	0					
ANR	3853697	ArgumentList	& module_registry		3853585	1					
ANR	3853698	Argument	& module_registry		3853585	0					
ANR	3853699	UnaryOperationExpression	& module_registry		3853585	0					
ANR	3853700	UnaryOperator	&		3853585	0					
ANR	3853701	Identifier	module_registry		3853585	1					
ANR	3853702	Argument	lcname		3853585	1					
ANR	3853703	Identifier	lcname		3853585	0					
ANR	3853704	CompoundStatement		24:52:569:569	3853585	1					
ANR	3853705	ExpressionStatement	zend_string_free ( lcname )	2005:5:52610:52634	3853585	0	True				
ANR	3853706	CallExpression	zend_string_free ( lcname )		3853585	0					
ANR	3853707	Callee	zend_string_free		3853585	0					
ANR	3853708	Identifier	zend_string_free		3853585	0					
ANR	3853709	ArgumentList	lcname		3853585	1					
ANR	3853710	Argument	lcname		3853585	0					
ANR	3853711	Identifier	lcname		3853585	0					
ANR	3853712	ExpressionStatement	"zend_error ( E_CORE_WARNING , ""Cannot load module '%s' because conflicting module '%s' is already loaded"" , module -> name , dep -> name )"	2007:5:52685:52813	3853585	1	True				
ANR	3853713	CallExpression	"zend_error ( E_CORE_WARNING , ""Cannot load module '%s' because conflicting module '%s' is already loaded"" , module -> name , dep -> name )"		3853585	0					
ANR	3853714	Callee	zend_error		3853585	0					
ANR	3853715	Identifier	zend_error		3853585	0					
ANR	3853716	ArgumentList	E_CORE_WARNING		3853585	1					
ANR	3853717	Argument	E_CORE_WARNING		3853585	0					
ANR	3853718	Identifier	E_CORE_WARNING		3853585	0					
ANR	3853719	Argument	"""Cannot load module '%s' because conflicting module '%s' is already loaded"""		3853585	1					
ANR	3853720	PrimaryExpression	"""Cannot load module '%s' because conflicting module '%s' is already loaded"""		3853585	0					
ANR	3853721	Argument	module -> name		3853585	2					
ANR	3853722	PtrMemberAccess	module -> name		3853585	0					
ANR	3853723	Identifier	module		3853585	0					
ANR	3853724	Identifier	name		3853585	1					
ANR	3853725	Argument	dep -> name		3853585	3					
ANR	3853726	PtrMemberAccess	dep -> name		3853585	0					
ANR	3853727	Identifier	dep		3853585	0					
ANR	3853728	Identifier	name		3853585	1					
ANR	3853729	ReturnStatement	return NULL ;	2008:5:52820:52831	3853585	2	True				
ANR	3853730	Identifier	NULL		3853585	0					
ANR	3853731	ExpressionStatement	zend_string_free ( lcname )	2010:4:52843:52867	3853585	4	True				
ANR	3853732	CallExpression	zend_string_free ( lcname )		3853585	0					
ANR	3853733	Callee	zend_string_free		3853585	0					
ANR	3853734	Identifier	zend_string_free		3853585	0					
ANR	3853735	ArgumentList	lcname		3853585	1					
ANR	3853736	Argument	lcname		3853585	0					
ANR	3853737	Identifier	lcname		3853585	0					
ANR	3853738	ExpressionStatement	++ dep	2012:3:52877:52882	3853585	1	True				
ANR	3853739	UnaryExpression	++ dep		3853585	0					
ANR	3853740	IncDec	++		3853585	0					
ANR	3853741	Identifier	dep		3853585	1					
ANR	3853742	ExpressionStatement	name_len = strlen ( module -> name )	2016:1:52893:52924	3853585	6	True				
ANR	3853743	AssignmentExpression	name_len = strlen ( module -> name )		3853585	0		=			
ANR	3853744	Identifier	name_len		3853585	0					
ANR	3853745	CallExpression	strlen ( module -> name )		3853585	1					
ANR	3853746	Callee	strlen		3853585	0					
ANR	3853747	Identifier	strlen		3853585	0					
ANR	3853748	ArgumentList	module -> name		3853585	1					
ANR	3853749	Argument	module -> name		3853585	0					
ANR	3853750	PtrMemberAccess	module -> name		3853585	0					
ANR	3853751	Identifier	module		3853585	0					
ANR	3853752	Identifier	name		3853585	1					
ANR	3853753	ExpressionStatement	"lcname = zend_string_alloc ( name_len , 1 )"	2017:1:52927:52966	3853585	7	True				
ANR	3853754	AssignmentExpression	"lcname = zend_string_alloc ( name_len , 1 )"		3853585	0		=			
ANR	3853755	Identifier	lcname		3853585	0					
ANR	3853756	CallExpression	"zend_string_alloc ( name_len , 1 )"		3853585	1					
ANR	3853757	Callee	zend_string_alloc		3853585	0					
ANR	3853758	Identifier	zend_string_alloc		3853585	0					
ANR	3853759	ArgumentList	name_len		3853585	1					
ANR	3853760	Argument	name_len		3853585	0					
ANR	3853761	Identifier	name_len		3853585	0					
ANR	3853762	Argument	1		3853585	1					
ANR	3853763	PrimaryExpression	1		3853585	0					
ANR	3853764	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , module -> name , name_len )"	2018:1:52969:53032	3853585	8	True				
ANR	3853765	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , module -> name , name_len )"		3853585	0					
ANR	3853766	Callee	zend_str_tolower_copy		3853585	0					
ANR	3853767	Identifier	zend_str_tolower_copy		3853585	0					
ANR	3853768	ArgumentList	ZSTR_VAL ( lcname )		3853585	1					
ANR	3853769	Argument	ZSTR_VAL ( lcname )		3853585	0					
ANR	3853770	CallExpression	ZSTR_VAL ( lcname )		3853585	0					
ANR	3853771	Callee	ZSTR_VAL		3853585	0					
ANR	3853772	Identifier	ZSTR_VAL		3853585	0					
ANR	3853773	ArgumentList	lcname		3853585	1					
ANR	3853774	Argument	lcname		3853585	0					
ANR	3853775	Identifier	lcname		3853585	0					
ANR	3853776	Argument	module -> name		3853585	1					
ANR	3853777	PtrMemberAccess	module -> name		3853585	0					
ANR	3853778	Identifier	module		3853585	0					
ANR	3853779	Identifier	name		3853585	1					
ANR	3853780	Argument	name_len		3853585	2					
ANR	3853781	Identifier	name_len		3853585	0					
ANR	3853782	IfStatement	"if ( ( module_ptr = zend_hash_add_mem ( & module_registry , lcname , module , sizeof ( zend_module_entry ) ) ) == NULL )"		3853585	9					
ANR	3853783	Condition	"( module_ptr = zend_hash_add_mem ( & module_registry , lcname , module , sizeof ( zend_module_entry ) ) ) == NULL"	2020:5:53040:53140	3853585	0	True				
ANR	3853784	EqualityExpression	"( module_ptr = zend_hash_add_mem ( & module_registry , lcname , module , sizeof ( zend_module_entry ) ) ) == NULL"		3853585	0		==			
ANR	3853785	AssignmentExpression	"module_ptr = zend_hash_add_mem ( & module_registry , lcname , module , sizeof ( zend_module_entry ) )"		3853585	0		=			
ANR	3853786	Identifier	module_ptr		3853585	0					
ANR	3853787	CallExpression	"zend_hash_add_mem ( & module_registry , lcname , module , sizeof ( zend_module_entry ) )"		3853585	1					
ANR	3853788	Callee	zend_hash_add_mem		3853585	0					
ANR	3853789	Identifier	zend_hash_add_mem		3853585	0					
ANR	3853790	ArgumentList	& module_registry		3853585	1					
ANR	3853791	Argument	& module_registry		3853585	0					
ANR	3853792	UnaryOperationExpression	& module_registry		3853585	0					
ANR	3853793	UnaryOperator	&		3853585	0					
ANR	3853794	Identifier	module_registry		3853585	1					
ANR	3853795	Argument	lcname		3853585	1					
ANR	3853796	Identifier	lcname		3853585	0					
ANR	3853797	Argument	module		3853585	2					
ANR	3853798	Identifier	module		3853585	0					
ANR	3853799	Argument	sizeof ( zend_module_entry )		3853585	3					
ANR	3853800	SizeofExpression	sizeof ( zend_module_entry )		3853585	0					
ANR	3853801	Sizeof	sizeof		3853585	0					
ANR	3853802	SizeofOperand	zend_module_entry		3853585	1					
ANR	3853803	Identifier	NULL		3853585	1					
ANR	3853804	CompoundStatement		40:108:1109:1109	3853585	1					
ANR	3853805	ExpressionStatement	"zend_error ( E_CORE_WARNING , ""Module '%s' already loaded"" , module -> name )"	2021:2:53147:53217	3853585	0	True				
ANR	3853806	CallExpression	"zend_error ( E_CORE_WARNING , ""Module '%s' already loaded"" , module -> name )"		3853585	0					
ANR	3853807	Callee	zend_error		3853585	0					
ANR	3853808	Identifier	zend_error		3853585	0					
ANR	3853809	ArgumentList	E_CORE_WARNING		3853585	1					
ANR	3853810	Argument	E_CORE_WARNING		3853585	0					
ANR	3853811	Identifier	E_CORE_WARNING		3853585	0					
ANR	3853812	Argument	"""Module '%s' already loaded"""		3853585	1					
ANR	3853813	PrimaryExpression	"""Module '%s' already loaded"""		3853585	0					
ANR	3853814	Argument	module -> name		3853585	2					
ANR	3853815	PtrMemberAccess	module -> name		3853585	0					
ANR	3853816	Identifier	module		3853585	0					
ANR	3853817	Identifier	name		3853585	1					
ANR	3853818	ExpressionStatement	zend_string_release ( lcname )	2022:2:53221:53248	3853585	1	True				
ANR	3853819	CallExpression	zend_string_release ( lcname )		3853585	0					
ANR	3853820	Callee	zend_string_release		3853585	0					
ANR	3853821	Identifier	zend_string_release		3853585	0					
ANR	3853822	ArgumentList	lcname		3853585	1					
ANR	3853823	Argument	lcname		3853585	0					
ANR	3853824	Identifier	lcname		3853585	0					
ANR	3853825	ReturnStatement	return NULL ;	2023:2:53252:53263	3853585	2	True				
ANR	3853826	Identifier	NULL		3853585	0					
ANR	3853827	ExpressionStatement	zend_string_release ( lcname )	2025:1:53269:53296	3853585	10	True				
ANR	3853828	CallExpression	zend_string_release ( lcname )		3853585	0					
ANR	3853829	Callee	zend_string_release		3853585	0					
ANR	3853830	Identifier	zend_string_release		3853585	0					
ANR	3853831	ArgumentList	lcname		3853585	1					
ANR	3853832	Argument	lcname		3853585	0					
ANR	3853833	Identifier	lcname		3853585	0					
ANR	3853834	ExpressionStatement	module = module_ptr	2026:1:53299:53318	3853585	11	True				
ANR	3853835	AssignmentExpression	module = module_ptr		3853585	0		=			
ANR	3853836	Identifier	module		3853585	0					
ANR	3853837	Identifier	module_ptr		3853585	1					
ANR	3853838	ExpressionStatement	EG ( current_module ) = module	2027:1:53321:53348	3853585	12	True				
ANR	3853839	AssignmentExpression	EG ( current_module ) = module		3853585	0		=			
ANR	3853840	CallExpression	EG ( current_module )		3853585	0					
ANR	3853841	Callee	EG		3853585	0					
ANR	3853842	Identifier	EG		3853585	0					
ANR	3853843	ArgumentList	current_module		3853585	1					
ANR	3853844	Argument	current_module		3853585	0					
ANR	3853845	Identifier	current_module		3853585	0					
ANR	3853846	Identifier	module		3853585	1					
ANR	3853847	IfStatement	"if ( module -> functions && zend_register_functions ( NULL , module -> functions , NULL , module -> type ) == FAILURE )"		3853585	13					
ANR	3853848	Condition	"module -> functions && zend_register_functions ( NULL , module -> functions , NULL , module -> type ) == FAILURE"	2029:5:53356:53453	3853585	0	True				
ANR	3853849	AndExpression	"module -> functions && zend_register_functions ( NULL , module -> functions , NULL , module -> type ) == FAILURE"		3853585	0		&&			
ANR	3853850	PtrMemberAccess	module -> functions		3853585	0					
ANR	3853851	Identifier	module		3853585	0					
ANR	3853852	Identifier	functions		3853585	1					
ANR	3853853	EqualityExpression	"zend_register_functions ( NULL , module -> functions , NULL , module -> type ) == FAILURE"		3853585	1		==			
ANR	3853854	CallExpression	"zend_register_functions ( NULL , module -> functions , NULL , module -> type )"		3853585	0					
ANR	3853855	Callee	zend_register_functions		3853585	0					
ANR	3853856	Identifier	zend_register_functions		3853585	0					
ANR	3853857	ArgumentList	NULL		3853585	1					
ANR	3853858	Argument	NULL		3853585	0					
ANR	3853859	Identifier	NULL		3853585	0					
ANR	3853860	Argument	module -> functions		3853585	1					
ANR	3853861	PtrMemberAccess	module -> functions		3853585	0					
ANR	3853862	Identifier	module		3853585	0					
ANR	3853863	Identifier	functions		3853585	1					
ANR	3853864	Argument	NULL		3853585	2					
ANR	3853865	Identifier	NULL		3853585	0					
ANR	3853866	Argument	module -> type		3853585	3					
ANR	3853867	PtrMemberAccess	module -> type		3853585	0					
ANR	3853868	Identifier	module		3853585	0					
ANR	3853869	Identifier	type		3853585	1					
ANR	3853870	Identifier	FAILURE		3853585	1					
ANR	3853871	CompoundStatement		49:105:1422:1422	3853585	1					
ANR	3853872	ExpressionStatement	EG ( current_module ) = NULL	2030:2:53460:53485	3853585	0	True				
ANR	3853873	AssignmentExpression	EG ( current_module ) = NULL		3853585	0		=			
ANR	3853874	CallExpression	EG ( current_module )		3853585	0					
ANR	3853875	Callee	EG		3853585	0					
ANR	3853876	Identifier	EG		3853585	0					
ANR	3853877	ArgumentList	current_module		3853585	1					
ANR	3853878	Argument	current_module		3853585	0					
ANR	3853879	Identifier	current_module		3853585	0					
ANR	3853880	Identifier	NULL		3853585	1					
ANR	3853881	ExpressionStatement	"zend_error ( E_CORE_WARNING , ""%s: Unable to register functions, unable to load"" , module -> name )"	2031:2:53489:53580	3853585	1	True				
ANR	3853882	CallExpression	"zend_error ( E_CORE_WARNING , ""%s: Unable to register functions, unable to load"" , module -> name )"		3853585	0					
ANR	3853883	Callee	zend_error		3853585	0					
ANR	3853884	Identifier	zend_error		3853585	0					
ANR	3853885	ArgumentList	E_CORE_WARNING		3853585	1					
ANR	3853886	Argument	E_CORE_WARNING		3853585	0					
ANR	3853887	Identifier	E_CORE_WARNING		3853585	0					
ANR	3853888	Argument	"""%s: Unable to register functions, unable to load"""		3853585	1					
ANR	3853889	PrimaryExpression	"""%s: Unable to register functions, unable to load"""		3853585	0					
ANR	3853890	Argument	module -> name		3853585	2					
ANR	3853891	PtrMemberAccess	module -> name		3853585	0					
ANR	3853892	Identifier	module		3853585	0					
ANR	3853893	Identifier	name		3853585	1					
ANR	3853894	ReturnStatement	return NULL ;	2032:2:53584:53595	3853585	2	True				
ANR	3853895	Identifier	NULL		3853585	0					
ANR	3853896	ExpressionStatement	EG ( current_module ) = NULL	2035:1:53602:53627	3853585	14	True				
ANR	3853897	AssignmentExpression	EG ( current_module ) = NULL		3853585	0		=			
ANR	3853898	CallExpression	EG ( current_module )		3853585	0					
ANR	3853899	Callee	EG		3853585	0					
ANR	3853900	Identifier	EG		3853585	0					
ANR	3853901	ArgumentList	current_module		3853585	1					
ANR	3853902	Argument	current_module		3853585	0					
ANR	3853903	Identifier	current_module		3853585	0					
ANR	3853904	Identifier	NULL		3853585	1					
ANR	3853905	ReturnStatement	return module ;	2036:1:53630:53643	3853585	15	True				
ANR	3853906	Identifier	module		3853585	0					
ANR	3853907	ReturnType	ZEND_API zend_module_entry *		3853585	1					
ANR	3853908	Identifier	zend_register_module_ex		3853585	2					
ANR	3853909	ParameterList	zend_module_entry * module		3853585	3					
ANR	3853910	Parameter	zend_module_entry * module	1980:52:51996:52020	3853585	0	True				
ANR	3853911	ParameterType	zend_module_entry *		3853585	0					
ANR	3853912	Identifier	module		3853585	1					
ANR	3853913	CFGEntryNode	ENTRY		3853585		True				
ANR	3853914	CFGExitNode	EXIT		3853585		True				
ANR	3853915	Symbol	* dep		3853585						
ANR	3853916	Symbol	E_CORE_WARNING		3853585						
ANR	3853917	Symbol	zend_hash_exists		3853585						
ANR	3853918	Symbol	current_module		3853585						
ANR	3853919	Symbol	dep		3853585						
ANR	3853920	Symbol	module -> functions		3853585						
ANR	3853921	Symbol	strlen		3853585						
ANR	3853922	Symbol	zend_register_functions		3853585						
ANR	3853923	Symbol	name_len		3853585						
ANR	3853924	Symbol	dep -> type		3853585						
ANR	3853925	Symbol	module -> type		3853585						
ANR	3853926	Symbol	module -> deps		3853585						
ANR	3853927	Symbol	zend_string_alloc		3853585						
ANR	3853928	Symbol	zend_hash_add_mem		3853585						
ANR	3853929	Symbol	EG		3853585						
ANR	3853930	Symbol	NULL		3853585						
ANR	3853931	Symbol	module -> name		3853585						
ANR	3853932	Symbol	* module		3853585						
ANR	3853933	Symbol	module		3853585						
ANR	3853934	Symbol	& module_registry		3853585						
ANR	3853935	Symbol	dep -> name		3853585						
ANR	3853936	Symbol	FAILURE		3853585						
ANR	3853937	Symbol	ZSTR_VAL		3853585						
ANR	3853938	Symbol	lcname		3853585						
ANR	3853939	Symbol	module -> module_number		3853585						
ANR	3853940	Symbol	module_ptr		3853585						
ANR	3853941	Symbol	MODULE_DEP_CONFLICTS		3853585						
ANR	3853942	Function	zend_register_internal_module	2040:0:53658:53881							
ANR	3853943	FunctionDef	zend_register_internal_module (zend_module_entry * module)		3853942	0					
ANR	3853944	CompoundStatement		2041:0:53753:53881	3853942	0					
ANR	3853945	ExpressionStatement	module -> module_number = zend_next_free_module ( )	2042:1:53756:53803	3853942	0	True				
ANR	3853946	AssignmentExpression	module -> module_number = zend_next_free_module ( )		3853942	0		=			
ANR	3853947	PtrMemberAccess	module -> module_number		3853942	0					
ANR	3853948	Identifier	module		3853942	0					
ANR	3853949	Identifier	module_number		3853942	1					
ANR	3853950	CallExpression	zend_next_free_module ( )		3853942	1					
ANR	3853951	Callee	zend_next_free_module		3853942	0					
ANR	3853952	Identifier	zend_next_free_module		3853942	0					
ANR	3853953	ArgumentList			3853942	1					
ANR	3853954	ExpressionStatement	module -> type = MODULE_PERSISTENT	2043:1:53806:53838	3853942	1	True				
ANR	3853955	AssignmentExpression	module -> type = MODULE_PERSISTENT		3853942	0		=			
ANR	3853956	PtrMemberAccess	module -> type		3853942	0					
ANR	3853957	Identifier	module		3853942	0					
ANR	3853958	Identifier	type		3853942	1					
ANR	3853959	Identifier	MODULE_PERSISTENT		3853942	1					
ANR	3853960	ReturnStatement	return zend_register_module_ex ( module ) ;	2044:1:53841:53879	3853942	2	True				
ANR	3853961	CallExpression	zend_register_module_ex ( module )		3853942	0					
ANR	3853962	Callee	zend_register_module_ex		3853942	0					
ANR	3853963	Identifier	zend_register_module_ex		3853942	0					
ANR	3853964	ArgumentList	module		3853942	1					
ANR	3853965	Argument	module		3853942	0					
ANR	3853966	Identifier	module		3853942	0					
ANR	3853967	ReturnType	ZEND_API zend_module_entry *		3853942	1					
ANR	3853968	Identifier	zend_register_internal_module		3853942	2					
ANR	3853969	ParameterList	zend_module_entry * module		3853942	3					
ANR	3853970	Parameter	zend_module_entry * module	2040:58:53716:53740	3853942	0	True				
ANR	3853971	ParameterType	zend_module_entry *		3853942	0					
ANR	3853972	Identifier	module		3853942	1					
ANR	3853973	CFGEntryNode	ENTRY		3853942		True				
ANR	3853974	CFGExitNode	EXIT		3853942		True				
ANR	3853975	Symbol	zend_next_free_module		3853942						
ANR	3853976	Symbol	module -> module_number		3853942						
ANR	3853977	Symbol	* module		3853942						
ANR	3853978	Symbol	module		3853942						
ANR	3853979	Symbol	MODULE_PERSISTENT		3853942						
ANR	3853980	Symbol	module -> type		3853942						
ANR	3853981	Symbol	zend_register_module_ex		3853942						
ANR	3853982	Function	zend_check_magic_method_implementation	2048:0:53894:58490							
ANR	3853983	FunctionDef	"zend_check_magic_method_implementation (const zend_class_entry * ce , const zend_function * fptr , int error_type)"		3853982	0					
ANR	3853984	CompoundStatement		2049:0:54028:58490	3853982	0					
ANR	3853985	IdentifierDeclStatement	char lcname [ 16 ] ;	2050:1:54031:54046	3853982	0	True				
ANR	3853986	IdentifierDecl	lcname [ 16 ]		3853982	0					
ANR	3853987	IdentifierDeclType	char [ 16 ]		3853982	0					
ANR	3853988	Identifier	lcname		3853982	1					
ANR	3853989	PrimaryExpression	16		3853982	2					
ANR	3853990	IdentifierDeclStatement	size_t name_len ;	2051:1:54049:54064	3853982	1	True				
ANR	3853991	IdentifierDecl	name_len		3853982	0					
ANR	3853992	IdentifierDeclType	size_t		3853982	0					
ANR	3853993	Identifier	name_len		3853982	1					
ANR	3853994	ExpressionStatement	name_len = ZSTR_LEN ( fptr -> common . function_name )	2055:1:54204:54251	3853982	2	True				
ANR	3853995	AssignmentExpression	name_len = ZSTR_LEN ( fptr -> common . function_name )		3853982	0		=			
ANR	3853996	Identifier	name_len		3853982	0					
ANR	3853997	CallExpression	ZSTR_LEN ( fptr -> common . function_name )		3853982	1					
ANR	3853998	Callee	ZSTR_LEN		3853982	0					
ANR	3853999	Identifier	ZSTR_LEN		3853982	0					
ANR	3854000	ArgumentList	fptr -> common . function_name		3853982	1					
ANR	3854001	Argument	fptr -> common . function_name		3853982	0					
ANR	3854002	MemberAccess	fptr -> common . function_name		3853982	0					
ANR	3854003	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854004	Identifier	fptr		3853982	0					
ANR	3854005	Identifier	common		3853982	1					
ANR	3854006	Identifier	function_name		3853982	1					
ANR	3854007	ExpressionStatement	"zend_str_tolower_copy ( lcname , ZSTR_VAL ( fptr -> common . function_name ) , MIN ( name_len , sizeof ( lcname ) - 1 ) )"	2056:1:54254:54354	3853982	3	True				
ANR	3854008	CallExpression	"zend_str_tolower_copy ( lcname , ZSTR_VAL ( fptr -> common . function_name ) , MIN ( name_len , sizeof ( lcname ) - 1 ) )"		3853982	0					
ANR	3854009	Callee	zend_str_tolower_copy		3853982	0					
ANR	3854010	Identifier	zend_str_tolower_copy		3853982	0					
ANR	3854011	ArgumentList	lcname		3853982	1					
ANR	3854012	Argument	lcname		3853982	0					
ANR	3854013	Identifier	lcname		3853982	0					
ANR	3854014	Argument	ZSTR_VAL ( fptr -> common . function_name )		3853982	1					
ANR	3854015	CallExpression	ZSTR_VAL ( fptr -> common . function_name )		3853982	0					
ANR	3854016	Callee	ZSTR_VAL		3853982	0					
ANR	3854017	Identifier	ZSTR_VAL		3853982	0					
ANR	3854018	ArgumentList	fptr -> common . function_name		3853982	1					
ANR	3854019	Argument	fptr -> common . function_name		3853982	0					
ANR	3854020	MemberAccess	fptr -> common . function_name		3853982	0					
ANR	3854021	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854022	Identifier	fptr		3853982	0					
ANR	3854023	Identifier	common		3853982	1					
ANR	3854024	Identifier	function_name		3853982	1					
ANR	3854025	Argument	"MIN ( name_len , sizeof ( lcname ) - 1 )"		3853982	2					
ANR	3854026	CallExpression	"MIN ( name_len , sizeof ( lcname ) - 1 )"		3853982	0					
ANR	3854027	Callee	MIN		3853982	0					
ANR	3854028	Identifier	MIN		3853982	0					
ANR	3854029	ArgumentList	name_len		3853982	1					
ANR	3854030	Argument	name_len		3853982	0					
ANR	3854031	Identifier	name_len		3853982	0					
ANR	3854032	Argument	sizeof ( lcname ) - 1		3853982	1					
ANR	3854033	AdditiveExpression	sizeof ( lcname ) - 1		3853982	0		-			
ANR	3854034	SizeofExpression	sizeof ( lcname )		3853982	0					
ANR	3854035	Sizeof	sizeof		3853982	0					
ANR	3854036	SizeofOperand	lcname		3853982	1					
ANR	3854037	PrimaryExpression	1		3853982	1					
ANR	3854038	ExpressionStatement	lcname [ sizeof ( lcname ) - 1 ] = '\\0'	2057:1:54357:54388	3853982	4	True				
ANR	3854039	AssignmentExpression	lcname [ sizeof ( lcname ) - 1 ] = '\\0'		3853982	0		=			
ANR	3854040	ArrayIndexing	lcname [ sizeof ( lcname ) - 1 ]		3853982	0					
ANR	3854041	Identifier	lcname		3853982	0					
ANR	3854042	AdditiveExpression	sizeof ( lcname ) - 1		3853982	1		-			
ANR	3854043	SizeofExpression	sizeof ( lcname )		3853982	0					
ANR	3854044	Sizeof	sizeof		3853982	0					
ANR	3854045	SizeofOperand	lcname		3853982	1					
ANR	3854046	PrimaryExpression	1		3853982	1					
ANR	3854047	PrimaryExpression	'\\0'		3853982	1					
ANR	3854048	IfStatement	"if ( name_len == sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_DESTRUCTOR_FUNC_NAME , sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0 )"		3853982	5					
ANR	3854049	Condition	"name_len == sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_DESTRUCTOR_FUNC_NAME , sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"	2059:5:54460:54623	3853982	0	True				
ANR	3854050	AndExpression	"name_len == sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_DESTRUCTOR_FUNC_NAME , sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"		3853982	0		&&			
ANR	3854051	EqualityExpression	name_len == sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854052	Identifier	name_len		3853982	0					
ANR	3854053	AdditiveExpression	sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854054	SizeofExpression	sizeof ( ZEND_DESTRUCTOR_FUNC_NAME )		3853982	0					
ANR	3854055	Sizeof	sizeof		3853982	0					
ANR	3854056	SizeofOperand	ZEND_DESTRUCTOR_FUNC_NAME		3853982	1					
ANR	3854057	PrimaryExpression	1		3853982	1					
ANR	3854058	AndExpression	"! memcmp ( lcname , ZEND_DESTRUCTOR_FUNC_NAME , sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"		3853982	1		&&			
ANR	3854059	UnaryOperationExpression	"! memcmp ( lcname , ZEND_DESTRUCTOR_FUNC_NAME , sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1 )"		3853982	0					
ANR	3854060	UnaryOperator	!		3853982	0					
ANR	3854061	CallExpression	"memcmp ( lcname , ZEND_DESTRUCTOR_FUNC_NAME , sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854062	Callee	memcmp		3853982	0					
ANR	3854063	Identifier	memcmp		3853982	0					
ANR	3854064	ArgumentList	lcname		3853982	1					
ANR	3854065	Argument	lcname		3853982	0					
ANR	3854066	Identifier	lcname		3853982	0					
ANR	3854067	Argument	ZEND_DESTRUCTOR_FUNC_NAME		3853982	1					
ANR	3854068	Identifier	ZEND_DESTRUCTOR_FUNC_NAME		3853982	0					
ANR	3854069	Argument	sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1		3853982	2					
ANR	3854070	AdditiveExpression	sizeof ( ZEND_DESTRUCTOR_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854071	SizeofExpression	sizeof ( ZEND_DESTRUCTOR_FUNC_NAME )		3853982	0					
ANR	3854072	Sizeof	sizeof		3853982	0					
ANR	3854073	SizeofOperand	ZEND_DESTRUCTOR_FUNC_NAME		3853982	1					
ANR	3854074	PrimaryExpression	1		3853982	1					
ANR	3854075	EqualityExpression	fptr -> common . num_args != 0		3853982	1		!=			
ANR	3854076	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854077	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854078	Identifier	fptr		3853982	0					
ANR	3854079	Identifier	common		3853982	1					
ANR	3854080	Identifier	num_args		3853982	1					
ANR	3854081	PrimaryExpression	0		3853982	1					
ANR	3854082	CompoundStatement		11:171:597:597	3853982	1					
ANR	3854083	ExpressionStatement	"zend_error ( error_type , ""Destructor %s::%s() cannot take arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_DESTRUCTOR_FUNC_NAME )"	2060:2:54630:54744	3853982	0	True				
ANR	3854084	CallExpression	"zend_error ( error_type , ""Destructor %s::%s() cannot take arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_DESTRUCTOR_FUNC_NAME )"		3853982	0					
ANR	3854085	Callee	zend_error		3853982	0					
ANR	3854086	Identifier	zend_error		3853982	0					
ANR	3854087	ArgumentList	error_type		3853982	1					
ANR	3854088	Argument	error_type		3853982	0					
ANR	3854089	Identifier	error_type		3853982	0					
ANR	3854090	Argument	"""Destructor %s::%s() cannot take arguments"""		3853982	1					
ANR	3854091	PrimaryExpression	"""Destructor %s::%s() cannot take arguments"""		3853982	0					
ANR	3854092	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854093	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854094	Callee	ZSTR_VAL		3853982	0					
ANR	3854095	Identifier	ZSTR_VAL		3853982	0					
ANR	3854096	ArgumentList	ce -> name		3853982	1					
ANR	3854097	Argument	ce -> name		3853982	0					
ANR	3854098	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854099	Identifier	ce		3853982	0					
ANR	3854100	Identifier	name		3853982	1					
ANR	3854101	Argument	ZEND_DESTRUCTOR_FUNC_NAME		3853982	3					
ANR	3854102	Identifier	ZEND_DESTRUCTOR_FUNC_NAME		3853982	0					
ANR	3854103	ElseStatement	else		3853982	0					
ANR	3854104	IfStatement	"if ( name_len == sizeof ( ZEND_CLONE_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_CLONE_FUNC_NAME , sizeof ( ZEND_CLONE_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0 )"		3853982	0					
ANR	3854105	Condition	"name_len == sizeof ( ZEND_CLONE_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_CLONE_FUNC_NAME , sizeof ( ZEND_CLONE_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"	2061:12:54758:54906	3853982	0	True				
ANR	3854106	AndExpression	"name_len == sizeof ( ZEND_CLONE_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_CLONE_FUNC_NAME , sizeof ( ZEND_CLONE_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"		3853982	0		&&			
ANR	3854107	EqualityExpression	name_len == sizeof ( ZEND_CLONE_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854108	Identifier	name_len		3853982	0					
ANR	3854109	AdditiveExpression	sizeof ( ZEND_CLONE_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854110	SizeofExpression	sizeof ( ZEND_CLONE_FUNC_NAME )		3853982	0					
ANR	3854111	Sizeof	sizeof		3853982	0					
ANR	3854112	SizeofOperand	ZEND_CLONE_FUNC_NAME		3853982	1					
ANR	3854113	PrimaryExpression	1		3853982	1					
ANR	3854114	AndExpression	"! memcmp ( lcname , ZEND_CLONE_FUNC_NAME , sizeof ( ZEND_CLONE_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"		3853982	1		&&			
ANR	3854115	UnaryOperationExpression	"! memcmp ( lcname , ZEND_CLONE_FUNC_NAME , sizeof ( ZEND_CLONE_FUNC_NAME ) - 1 )"		3853982	0					
ANR	3854116	UnaryOperator	!		3853982	0					
ANR	3854117	CallExpression	"memcmp ( lcname , ZEND_CLONE_FUNC_NAME , sizeof ( ZEND_CLONE_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854118	Callee	memcmp		3853982	0					
ANR	3854119	Identifier	memcmp		3853982	0					
ANR	3854120	ArgumentList	lcname		3853982	1					
ANR	3854121	Argument	lcname		3853982	0					
ANR	3854122	Identifier	lcname		3853982	0					
ANR	3854123	Argument	ZEND_CLONE_FUNC_NAME		3853982	1					
ANR	3854124	Identifier	ZEND_CLONE_FUNC_NAME		3853982	0					
ANR	3854125	Argument	sizeof ( ZEND_CLONE_FUNC_NAME ) - 1		3853982	2					
ANR	3854126	AdditiveExpression	sizeof ( ZEND_CLONE_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854127	SizeofExpression	sizeof ( ZEND_CLONE_FUNC_NAME )		3853982	0					
ANR	3854128	Sizeof	sizeof		3853982	0					
ANR	3854129	SizeofOperand	ZEND_CLONE_FUNC_NAME		3853982	1					
ANR	3854130	PrimaryExpression	1		3853982	1					
ANR	3854131	EqualityExpression	fptr -> common . num_args != 0		3853982	1		!=			
ANR	3854132	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854133	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854134	Identifier	fptr		3853982	0					
ANR	3854135	Identifier	common		3853982	1					
ANR	3854136	Identifier	num_args		3853982	1					
ANR	3854137	PrimaryExpression	0		3853982	1					
ANR	3854138	CompoundStatement		13:163:880:880	3853982	1					
ANR	3854139	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot accept any arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_CLONE_FUNC_NAME )"	2062:2:54913:55024	3853982	0	True				
ANR	3854140	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot accept any arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_CLONE_FUNC_NAME )"		3853982	0					
ANR	3854141	Callee	zend_error		3853982	0					
ANR	3854142	Identifier	zend_error		3853982	0					
ANR	3854143	ArgumentList	error_type		3853982	1					
ANR	3854144	Argument	error_type		3853982	0					
ANR	3854145	Identifier	error_type		3853982	0					
ANR	3854146	Argument	"""Method %s::%s() cannot accept any arguments"""		3853982	1					
ANR	3854147	PrimaryExpression	"""Method %s::%s() cannot accept any arguments"""		3853982	0					
ANR	3854148	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854149	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854150	Callee	ZSTR_VAL		3853982	0					
ANR	3854151	Identifier	ZSTR_VAL		3853982	0					
ANR	3854152	ArgumentList	ce -> name		3853982	1					
ANR	3854153	Argument	ce -> name		3853982	0					
ANR	3854154	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854155	Identifier	ce		3853982	0					
ANR	3854156	Identifier	name		3853982	1					
ANR	3854157	Argument	ZEND_CLONE_FUNC_NAME		3853982	3					
ANR	3854158	Identifier	ZEND_CLONE_FUNC_NAME		3853982	0					
ANR	3854159	ElseStatement	else		3853982	0					
ANR	3854160	IfStatement	"if ( name_len == sizeof ( ZEND_GET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_GET_FUNC_NAME , sizeof ( ZEND_GET_FUNC_NAME ) - 1 ) )"		3853982	0					
ANR	3854161	Condition	"name_len == sizeof ( ZEND_GET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_GET_FUNC_NAME , sizeof ( ZEND_GET_FUNC_NAME ) - 1 )"	2063:12:55038:55150	3853982	0	True				
ANR	3854162	AndExpression	"name_len == sizeof ( ZEND_GET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_GET_FUNC_NAME , sizeof ( ZEND_GET_FUNC_NAME ) - 1 )"		3853982	0		&&			
ANR	3854163	EqualityExpression	name_len == sizeof ( ZEND_GET_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854164	Identifier	name_len		3853982	0					
ANR	3854165	AdditiveExpression	sizeof ( ZEND_GET_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854166	SizeofExpression	sizeof ( ZEND_GET_FUNC_NAME )		3853982	0					
ANR	3854167	Sizeof	sizeof		3853982	0					
ANR	3854168	SizeofOperand	ZEND_GET_FUNC_NAME		3853982	1					
ANR	3854169	PrimaryExpression	1		3853982	1					
ANR	3854170	UnaryOperationExpression	"! memcmp ( lcname , ZEND_GET_FUNC_NAME , sizeof ( ZEND_GET_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854171	UnaryOperator	!		3853982	0					
ANR	3854172	CallExpression	"memcmp ( lcname , ZEND_GET_FUNC_NAME , sizeof ( ZEND_GET_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854173	Callee	memcmp		3853982	0					
ANR	3854174	Identifier	memcmp		3853982	0					
ANR	3854175	ArgumentList	lcname		3853982	1					
ANR	3854176	Argument	lcname		3853982	0					
ANR	3854177	Identifier	lcname		3853982	0					
ANR	3854178	Argument	ZEND_GET_FUNC_NAME		3853982	1					
ANR	3854179	Identifier	ZEND_GET_FUNC_NAME		3853982	0					
ANR	3854180	Argument	sizeof ( ZEND_GET_FUNC_NAME ) - 1		3853982	2					
ANR	3854181	AdditiveExpression	sizeof ( ZEND_GET_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854182	SizeofExpression	sizeof ( ZEND_GET_FUNC_NAME )		3853982	0					
ANR	3854183	Sizeof	sizeof		3853982	0					
ANR	3854184	SizeofOperand	ZEND_GET_FUNC_NAME		3853982	1					
ANR	3854185	PrimaryExpression	1		3853982	1					
ANR	3854186	CompoundStatement		15:127:1124:1124	3853982	1					
ANR	3854187	IfStatement	if ( fptr -> common . num_args != 1 )		3853982	0					
ANR	3854188	Condition	fptr -> common . num_args != 1	2064:6:55161:55186	3853982	0	True				
ANR	3854189	EqualityExpression	fptr -> common . num_args != 1		3853982	0		!=			
ANR	3854190	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854191	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854192	Identifier	fptr		3853982	0					
ANR	3854193	Identifier	common		3853982	1					
ANR	3854194	Identifier	num_args		3853982	1					
ANR	3854195	PrimaryExpression	1		3853982	1					
ANR	3854196	CompoundStatement		16:34:1160:1160	3853982	1					
ANR	3854197	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() must take exactly 1 argument"" , ZSTR_VAL ( ce -> name ) , ZEND_GET_FUNC_NAME )"	2065:3:55194:55304	3853982	0	True				
ANR	3854198	CallExpression	"zend_error ( error_type , ""Method %s::%s() must take exactly 1 argument"" , ZSTR_VAL ( ce -> name ) , ZEND_GET_FUNC_NAME )"		3853982	0					
ANR	3854199	Callee	zend_error		3853982	0					
ANR	3854200	Identifier	zend_error		3853982	0					
ANR	3854201	ArgumentList	error_type		3853982	1					
ANR	3854202	Argument	error_type		3853982	0					
ANR	3854203	Identifier	error_type		3853982	0					
ANR	3854204	Argument	"""Method %s::%s() must take exactly 1 argument"""		3853982	1					
ANR	3854205	PrimaryExpression	"""Method %s::%s() must take exactly 1 argument"""		3853982	0					
ANR	3854206	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854207	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854208	Callee	ZSTR_VAL		3853982	0					
ANR	3854209	Identifier	ZSTR_VAL		3853982	0					
ANR	3854210	ArgumentList	ce -> name		3853982	1					
ANR	3854211	Argument	ce -> name		3853982	0					
ANR	3854212	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854213	Identifier	ce		3853982	0					
ANR	3854214	Identifier	name		3853982	1					
ANR	3854215	Argument	ZEND_GET_FUNC_NAME		3853982	3					
ANR	3854216	Identifier	ZEND_GET_FUNC_NAME		3853982	0					
ANR	3854217	ElseStatement	else		3853982	0					
ANR	3854218	IfStatement	"if ( ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) )"		3853982	0					
ANR	3854219	Condition	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 )"	2066:13:55319:55352	3853982	0	True				
ANR	3854220	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 )"		3853982	0					
ANR	3854221	Callee	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854222	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854223	ArgumentList	fptr		3853982	1					
ANR	3854224	Argument	fptr		3853982	0					
ANR	3854225	Identifier	fptr		3853982	0					
ANR	3854226	Argument	1		3853982	1					
ANR	3854227	PrimaryExpression	1		3853982	0					
ANR	3854228	CompoundStatement		18:49:1326:1326	3853982	1					
ANR	3854229	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_GET_FUNC_NAME )"	2067:3:55360:55476	3853982	0	True				
ANR	3854230	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_GET_FUNC_NAME )"		3853982	0					
ANR	3854231	Callee	zend_error		3853982	0					
ANR	3854232	Identifier	zend_error		3853982	0					
ANR	3854233	ArgumentList	error_type		3853982	1					
ANR	3854234	Argument	error_type		3853982	0					
ANR	3854235	Identifier	error_type		3853982	0					
ANR	3854236	Argument	"""Method %s::%s() cannot take arguments by reference"""		3853982	1					
ANR	3854237	PrimaryExpression	"""Method %s::%s() cannot take arguments by reference"""		3853982	0					
ANR	3854238	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854239	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854240	Callee	ZSTR_VAL		3853982	0					
ANR	3854241	Identifier	ZSTR_VAL		3853982	0					
ANR	3854242	ArgumentList	ce -> name		3853982	1					
ANR	3854243	Argument	ce -> name		3853982	0					
ANR	3854244	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854245	Identifier	ce		3853982	0					
ANR	3854246	Identifier	name		3853982	1					
ANR	3854247	Argument	ZEND_GET_FUNC_NAME		3853982	3					
ANR	3854248	Identifier	ZEND_GET_FUNC_NAME		3853982	0					
ANR	3854249	ElseStatement	else		3853982	0					
ANR	3854250	IfStatement	"if ( name_len == sizeof ( ZEND_SET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_SET_FUNC_NAME , sizeof ( ZEND_SET_FUNC_NAME ) - 1 ) )"		3853982	0					
ANR	3854251	Condition	"name_len == sizeof ( ZEND_SET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_SET_FUNC_NAME , sizeof ( ZEND_SET_FUNC_NAME ) - 1 )"	2069:12:55494:55606	3853982	0	True				
ANR	3854252	AndExpression	"name_len == sizeof ( ZEND_SET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_SET_FUNC_NAME , sizeof ( ZEND_SET_FUNC_NAME ) - 1 )"		3853982	0		&&			
ANR	3854253	EqualityExpression	name_len == sizeof ( ZEND_SET_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854254	Identifier	name_len		3853982	0					
ANR	3854255	AdditiveExpression	sizeof ( ZEND_SET_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854256	SizeofExpression	sizeof ( ZEND_SET_FUNC_NAME )		3853982	0					
ANR	3854257	Sizeof	sizeof		3853982	0					
ANR	3854258	SizeofOperand	ZEND_SET_FUNC_NAME		3853982	1					
ANR	3854259	PrimaryExpression	1		3853982	1					
ANR	3854260	UnaryOperationExpression	"! memcmp ( lcname , ZEND_SET_FUNC_NAME , sizeof ( ZEND_SET_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854261	UnaryOperator	!		3853982	0					
ANR	3854262	CallExpression	"memcmp ( lcname , ZEND_SET_FUNC_NAME , sizeof ( ZEND_SET_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854263	Callee	memcmp		3853982	0					
ANR	3854264	Identifier	memcmp		3853982	0					
ANR	3854265	ArgumentList	lcname		3853982	1					
ANR	3854266	Argument	lcname		3853982	0					
ANR	3854267	Identifier	lcname		3853982	0					
ANR	3854268	Argument	ZEND_SET_FUNC_NAME		3853982	1					
ANR	3854269	Identifier	ZEND_SET_FUNC_NAME		3853982	0					
ANR	3854270	Argument	sizeof ( ZEND_SET_FUNC_NAME ) - 1		3853982	2					
ANR	3854271	AdditiveExpression	sizeof ( ZEND_SET_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854272	SizeofExpression	sizeof ( ZEND_SET_FUNC_NAME )		3853982	0					
ANR	3854273	Sizeof	sizeof		3853982	0					
ANR	3854274	SizeofOperand	ZEND_SET_FUNC_NAME		3853982	1					
ANR	3854275	PrimaryExpression	1		3853982	1					
ANR	3854276	CompoundStatement		21:127:1580:1580	3853982	1					
ANR	3854277	IfStatement	if ( fptr -> common . num_args != 2 )		3853982	0					
ANR	3854278	Condition	fptr -> common . num_args != 2	2070:6:55617:55642	3853982	0	True				
ANR	3854279	EqualityExpression	fptr -> common . num_args != 2		3853982	0		!=			
ANR	3854280	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854281	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854282	Identifier	fptr		3853982	0					
ANR	3854283	Identifier	common		3853982	1					
ANR	3854284	Identifier	num_args		3853982	1					
ANR	3854285	PrimaryExpression	2		3853982	1					
ANR	3854286	CompoundStatement		22:34:1616:1616	3853982	1					
ANR	3854287	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() must take exactly 2 arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_SET_FUNC_NAME )"	2071:3:55650:55761	3853982	0	True				
ANR	3854288	CallExpression	"zend_error ( error_type , ""Method %s::%s() must take exactly 2 arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_SET_FUNC_NAME )"		3853982	0					
ANR	3854289	Callee	zend_error		3853982	0					
ANR	3854290	Identifier	zend_error		3853982	0					
ANR	3854291	ArgumentList	error_type		3853982	1					
ANR	3854292	Argument	error_type		3853982	0					
ANR	3854293	Identifier	error_type		3853982	0					
ANR	3854294	Argument	"""Method %s::%s() must take exactly 2 arguments"""		3853982	1					
ANR	3854295	PrimaryExpression	"""Method %s::%s() must take exactly 2 arguments"""		3853982	0					
ANR	3854296	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854297	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854298	Callee	ZSTR_VAL		3853982	0					
ANR	3854299	Identifier	ZSTR_VAL		3853982	0					
ANR	3854300	ArgumentList	ce -> name		3853982	1					
ANR	3854301	Argument	ce -> name		3853982	0					
ANR	3854302	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854303	Identifier	ce		3853982	0					
ANR	3854304	Identifier	name		3853982	1					
ANR	3854305	Argument	ZEND_SET_FUNC_NAME		3853982	3					
ANR	3854306	Identifier	ZEND_SET_FUNC_NAME		3853982	0					
ANR	3854307	ElseStatement	else		3853982	0					
ANR	3854308	IfStatement	"if ( ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) || ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 ) )"		3853982	0					
ANR	3854309	Condition	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) || ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 )"	2072:13:55776:55847	3853982	0	True				
ANR	3854310	OrExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) || ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 )"		3853982	0		||			
ANR	3854311	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 )"		3853982	0					
ANR	3854312	Callee	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854313	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854314	ArgumentList	fptr		3853982	1					
ANR	3854315	Argument	fptr		3853982	0					
ANR	3854316	Identifier	fptr		3853982	0					
ANR	3854317	Argument	1		3853982	1					
ANR	3854318	PrimaryExpression	1		3853982	0					
ANR	3854319	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 )"		3853982	1					
ANR	3854320	Callee	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854321	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854322	ArgumentList	fptr		3853982	1					
ANR	3854323	Argument	fptr		3853982	0					
ANR	3854324	Identifier	fptr		3853982	0					
ANR	3854325	Argument	2		3853982	1					
ANR	3854326	PrimaryExpression	2		3853982	0					
ANR	3854327	CompoundStatement		24:87:1821:1821	3853982	1					
ANR	3854328	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_SET_FUNC_NAME )"	2073:3:55855:55971	3853982	0	True				
ANR	3854329	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_SET_FUNC_NAME )"		3853982	0					
ANR	3854330	Callee	zend_error		3853982	0					
ANR	3854331	Identifier	zend_error		3853982	0					
ANR	3854332	ArgumentList	error_type		3853982	1					
ANR	3854333	Argument	error_type		3853982	0					
ANR	3854334	Identifier	error_type		3853982	0					
ANR	3854335	Argument	"""Method %s::%s() cannot take arguments by reference"""		3853982	1					
ANR	3854336	PrimaryExpression	"""Method %s::%s() cannot take arguments by reference"""		3853982	0					
ANR	3854337	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854338	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854339	Callee	ZSTR_VAL		3853982	0					
ANR	3854340	Identifier	ZSTR_VAL		3853982	0					
ANR	3854341	ArgumentList	ce -> name		3853982	1					
ANR	3854342	Argument	ce -> name		3853982	0					
ANR	3854343	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854344	Identifier	ce		3853982	0					
ANR	3854345	Identifier	name		3853982	1					
ANR	3854346	Argument	ZEND_SET_FUNC_NAME		3853982	3					
ANR	3854347	Identifier	ZEND_SET_FUNC_NAME		3853982	0					
ANR	3854348	ElseStatement	else		3853982	0					
ANR	3854349	IfStatement	"if ( name_len == sizeof ( ZEND_UNSET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_UNSET_FUNC_NAME , sizeof ( ZEND_UNSET_FUNC_NAME ) - 1 ) )"		3853982	0					
ANR	3854350	Condition	"name_len == sizeof ( ZEND_UNSET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_UNSET_FUNC_NAME , sizeof ( ZEND_UNSET_FUNC_NAME ) - 1 )"	2075:12:55989:56107	3853982	0	True				
ANR	3854351	AndExpression	"name_len == sizeof ( ZEND_UNSET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_UNSET_FUNC_NAME , sizeof ( ZEND_UNSET_FUNC_NAME ) - 1 )"		3853982	0		&&			
ANR	3854352	EqualityExpression	name_len == sizeof ( ZEND_UNSET_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854353	Identifier	name_len		3853982	0					
ANR	3854354	AdditiveExpression	sizeof ( ZEND_UNSET_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854355	SizeofExpression	sizeof ( ZEND_UNSET_FUNC_NAME )		3853982	0					
ANR	3854356	Sizeof	sizeof		3853982	0					
ANR	3854357	SizeofOperand	ZEND_UNSET_FUNC_NAME		3853982	1					
ANR	3854358	PrimaryExpression	1		3853982	1					
ANR	3854359	UnaryOperationExpression	"! memcmp ( lcname , ZEND_UNSET_FUNC_NAME , sizeof ( ZEND_UNSET_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854360	UnaryOperator	!		3853982	0					
ANR	3854361	CallExpression	"memcmp ( lcname , ZEND_UNSET_FUNC_NAME , sizeof ( ZEND_UNSET_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854362	Callee	memcmp		3853982	0					
ANR	3854363	Identifier	memcmp		3853982	0					
ANR	3854364	ArgumentList	lcname		3853982	1					
ANR	3854365	Argument	lcname		3853982	0					
ANR	3854366	Identifier	lcname		3853982	0					
ANR	3854367	Argument	ZEND_UNSET_FUNC_NAME		3853982	1					
ANR	3854368	Identifier	ZEND_UNSET_FUNC_NAME		3853982	0					
ANR	3854369	Argument	sizeof ( ZEND_UNSET_FUNC_NAME ) - 1		3853982	2					
ANR	3854370	AdditiveExpression	sizeof ( ZEND_UNSET_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854371	SizeofExpression	sizeof ( ZEND_UNSET_FUNC_NAME )		3853982	0					
ANR	3854372	Sizeof	sizeof		3853982	0					
ANR	3854373	SizeofOperand	ZEND_UNSET_FUNC_NAME		3853982	1					
ANR	3854374	PrimaryExpression	1		3853982	1					
ANR	3854375	CompoundStatement		27:133:2081:2081	3853982	1					
ANR	3854376	IfStatement	if ( fptr -> common . num_args != 1 )		3853982	0					
ANR	3854377	Condition	fptr -> common . num_args != 1	2076:6:56118:56143	3853982	0	True				
ANR	3854378	EqualityExpression	fptr -> common . num_args != 1		3853982	0		!=			
ANR	3854379	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854380	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854381	Identifier	fptr		3853982	0					
ANR	3854382	Identifier	common		3853982	1					
ANR	3854383	Identifier	num_args		3853982	1					
ANR	3854384	PrimaryExpression	1		3853982	1					
ANR	3854385	CompoundStatement		28:34:2117:2117	3853982	1					
ANR	3854386	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() must take exactly 1 argument"" , ZSTR_VAL ( ce -> name ) , ZEND_UNSET_FUNC_NAME )"	2077:3:56151:56263	3853982	0	True				
ANR	3854387	CallExpression	"zend_error ( error_type , ""Method %s::%s() must take exactly 1 argument"" , ZSTR_VAL ( ce -> name ) , ZEND_UNSET_FUNC_NAME )"		3853982	0					
ANR	3854388	Callee	zend_error		3853982	0					
ANR	3854389	Identifier	zend_error		3853982	0					
ANR	3854390	ArgumentList	error_type		3853982	1					
ANR	3854391	Argument	error_type		3853982	0					
ANR	3854392	Identifier	error_type		3853982	0					
ANR	3854393	Argument	"""Method %s::%s() must take exactly 1 argument"""		3853982	1					
ANR	3854394	PrimaryExpression	"""Method %s::%s() must take exactly 1 argument"""		3853982	0					
ANR	3854395	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854396	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854397	Callee	ZSTR_VAL		3853982	0					
ANR	3854398	Identifier	ZSTR_VAL		3853982	0					
ANR	3854399	ArgumentList	ce -> name		3853982	1					
ANR	3854400	Argument	ce -> name		3853982	0					
ANR	3854401	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854402	Identifier	ce		3853982	0					
ANR	3854403	Identifier	name		3853982	1					
ANR	3854404	Argument	ZEND_UNSET_FUNC_NAME		3853982	3					
ANR	3854405	Identifier	ZEND_UNSET_FUNC_NAME		3853982	0					
ANR	3854406	ElseStatement	else		3853982	0					
ANR	3854407	IfStatement	"if ( ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) )"		3853982	0					
ANR	3854408	Condition	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 )"	2078:13:56278:56311	3853982	0	True				
ANR	3854409	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 )"		3853982	0					
ANR	3854410	Callee	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854411	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854412	ArgumentList	fptr		3853982	1					
ANR	3854413	Argument	fptr		3853982	0					
ANR	3854414	Identifier	fptr		3853982	0					
ANR	3854415	Argument	1		3853982	1					
ANR	3854416	PrimaryExpression	1		3853982	0					
ANR	3854417	CompoundStatement		30:49:2285:2285	3853982	1					
ANR	3854418	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_UNSET_FUNC_NAME )"	2079:3:56319:56437	3853982	0	True				
ANR	3854419	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_UNSET_FUNC_NAME )"		3853982	0					
ANR	3854420	Callee	zend_error		3853982	0					
ANR	3854421	Identifier	zend_error		3853982	0					
ANR	3854422	ArgumentList	error_type		3853982	1					
ANR	3854423	Argument	error_type		3853982	0					
ANR	3854424	Identifier	error_type		3853982	0					
ANR	3854425	Argument	"""Method %s::%s() cannot take arguments by reference"""		3853982	1					
ANR	3854426	PrimaryExpression	"""Method %s::%s() cannot take arguments by reference"""		3853982	0					
ANR	3854427	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854428	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854429	Callee	ZSTR_VAL		3853982	0					
ANR	3854430	Identifier	ZSTR_VAL		3853982	0					
ANR	3854431	ArgumentList	ce -> name		3853982	1					
ANR	3854432	Argument	ce -> name		3853982	0					
ANR	3854433	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854434	Identifier	ce		3853982	0					
ANR	3854435	Identifier	name		3853982	1					
ANR	3854436	Argument	ZEND_UNSET_FUNC_NAME		3853982	3					
ANR	3854437	Identifier	ZEND_UNSET_FUNC_NAME		3853982	0					
ANR	3854438	ElseStatement	else		3853982	0					
ANR	3854439	IfStatement	"if ( name_len == sizeof ( ZEND_ISSET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_ISSET_FUNC_NAME , sizeof ( ZEND_ISSET_FUNC_NAME ) - 1 ) )"		3853982	0					
ANR	3854440	Condition	"name_len == sizeof ( ZEND_ISSET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_ISSET_FUNC_NAME , sizeof ( ZEND_ISSET_FUNC_NAME ) - 1 )"	2081:12:56455:56573	3853982	0	True				
ANR	3854441	AndExpression	"name_len == sizeof ( ZEND_ISSET_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_ISSET_FUNC_NAME , sizeof ( ZEND_ISSET_FUNC_NAME ) - 1 )"		3853982	0		&&			
ANR	3854442	EqualityExpression	name_len == sizeof ( ZEND_ISSET_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854443	Identifier	name_len		3853982	0					
ANR	3854444	AdditiveExpression	sizeof ( ZEND_ISSET_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854445	SizeofExpression	sizeof ( ZEND_ISSET_FUNC_NAME )		3853982	0					
ANR	3854446	Sizeof	sizeof		3853982	0					
ANR	3854447	SizeofOperand	ZEND_ISSET_FUNC_NAME		3853982	1					
ANR	3854448	PrimaryExpression	1		3853982	1					
ANR	3854449	UnaryOperationExpression	"! memcmp ( lcname , ZEND_ISSET_FUNC_NAME , sizeof ( ZEND_ISSET_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854450	UnaryOperator	!		3853982	0					
ANR	3854451	CallExpression	"memcmp ( lcname , ZEND_ISSET_FUNC_NAME , sizeof ( ZEND_ISSET_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854452	Callee	memcmp		3853982	0					
ANR	3854453	Identifier	memcmp		3853982	0					
ANR	3854454	ArgumentList	lcname		3853982	1					
ANR	3854455	Argument	lcname		3853982	0					
ANR	3854456	Identifier	lcname		3853982	0					
ANR	3854457	Argument	ZEND_ISSET_FUNC_NAME		3853982	1					
ANR	3854458	Identifier	ZEND_ISSET_FUNC_NAME		3853982	0					
ANR	3854459	Argument	sizeof ( ZEND_ISSET_FUNC_NAME ) - 1		3853982	2					
ANR	3854460	AdditiveExpression	sizeof ( ZEND_ISSET_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854461	SizeofExpression	sizeof ( ZEND_ISSET_FUNC_NAME )		3853982	0					
ANR	3854462	Sizeof	sizeof		3853982	0					
ANR	3854463	SizeofOperand	ZEND_ISSET_FUNC_NAME		3853982	1					
ANR	3854464	PrimaryExpression	1		3853982	1					
ANR	3854465	CompoundStatement		33:133:2547:2547	3853982	1					
ANR	3854466	IfStatement	if ( fptr -> common . num_args != 1 )		3853982	0					
ANR	3854467	Condition	fptr -> common . num_args != 1	2082:6:56584:56609	3853982	0	True				
ANR	3854468	EqualityExpression	fptr -> common . num_args != 1		3853982	0		!=			
ANR	3854469	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854470	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854471	Identifier	fptr		3853982	0					
ANR	3854472	Identifier	common		3853982	1					
ANR	3854473	Identifier	num_args		3853982	1					
ANR	3854474	PrimaryExpression	1		3853982	1					
ANR	3854475	CompoundStatement		34:34:2583:2583	3853982	1					
ANR	3854476	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() must take exactly 1 argument"" , ZSTR_VAL ( ce -> name ) , ZEND_ISSET_FUNC_NAME )"	2083:3:56617:56729	3853982	0	True				
ANR	3854477	CallExpression	"zend_error ( error_type , ""Method %s::%s() must take exactly 1 argument"" , ZSTR_VAL ( ce -> name ) , ZEND_ISSET_FUNC_NAME )"		3853982	0					
ANR	3854478	Callee	zend_error		3853982	0					
ANR	3854479	Identifier	zend_error		3853982	0					
ANR	3854480	ArgumentList	error_type		3853982	1					
ANR	3854481	Argument	error_type		3853982	0					
ANR	3854482	Identifier	error_type		3853982	0					
ANR	3854483	Argument	"""Method %s::%s() must take exactly 1 argument"""		3853982	1					
ANR	3854484	PrimaryExpression	"""Method %s::%s() must take exactly 1 argument"""		3853982	0					
ANR	3854485	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854486	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854487	Callee	ZSTR_VAL		3853982	0					
ANR	3854488	Identifier	ZSTR_VAL		3853982	0					
ANR	3854489	ArgumentList	ce -> name		3853982	1					
ANR	3854490	Argument	ce -> name		3853982	0					
ANR	3854491	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854492	Identifier	ce		3853982	0					
ANR	3854493	Identifier	name		3853982	1					
ANR	3854494	Argument	ZEND_ISSET_FUNC_NAME		3853982	3					
ANR	3854495	Identifier	ZEND_ISSET_FUNC_NAME		3853982	0					
ANR	3854496	ElseStatement	else		3853982	0					
ANR	3854497	IfStatement	"if ( ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) )"		3853982	0					
ANR	3854498	Condition	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 )"	2084:13:56744:56777	3853982	0	True				
ANR	3854499	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 )"		3853982	0					
ANR	3854500	Callee	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854501	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854502	ArgumentList	fptr		3853982	1					
ANR	3854503	Argument	fptr		3853982	0					
ANR	3854504	Identifier	fptr		3853982	0					
ANR	3854505	Argument	1		3853982	1					
ANR	3854506	PrimaryExpression	1		3853982	0					
ANR	3854507	CompoundStatement		36:49:2751:2751	3853982	1					
ANR	3854508	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_ISSET_FUNC_NAME )"	2085:3:56785:56903	3853982	0	True				
ANR	3854509	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_ISSET_FUNC_NAME )"		3853982	0					
ANR	3854510	Callee	zend_error		3853982	0					
ANR	3854511	Identifier	zend_error		3853982	0					
ANR	3854512	ArgumentList	error_type		3853982	1					
ANR	3854513	Argument	error_type		3853982	0					
ANR	3854514	Identifier	error_type		3853982	0					
ANR	3854515	Argument	"""Method %s::%s() cannot take arguments by reference"""		3853982	1					
ANR	3854516	PrimaryExpression	"""Method %s::%s() cannot take arguments by reference"""		3853982	0					
ANR	3854517	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854518	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854519	Callee	ZSTR_VAL		3853982	0					
ANR	3854520	Identifier	ZSTR_VAL		3853982	0					
ANR	3854521	ArgumentList	ce -> name		3853982	1					
ANR	3854522	Argument	ce -> name		3853982	0					
ANR	3854523	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854524	Identifier	ce		3853982	0					
ANR	3854525	Identifier	name		3853982	1					
ANR	3854526	Argument	ZEND_ISSET_FUNC_NAME		3853982	3					
ANR	3854527	Identifier	ZEND_ISSET_FUNC_NAME		3853982	0					
ANR	3854528	ElseStatement	else		3853982	0					
ANR	3854529	IfStatement	"if ( name_len == sizeof ( ZEND_CALL_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_CALL_FUNC_NAME , sizeof ( ZEND_CALL_FUNC_NAME ) - 1 ) )"		3853982	0					
ANR	3854530	Condition	"name_len == sizeof ( ZEND_CALL_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_CALL_FUNC_NAME , sizeof ( ZEND_CALL_FUNC_NAME ) - 1 )"	2087:12:56921:57036	3853982	0	True				
ANR	3854531	AndExpression	"name_len == sizeof ( ZEND_CALL_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_CALL_FUNC_NAME , sizeof ( ZEND_CALL_FUNC_NAME ) - 1 )"		3853982	0		&&			
ANR	3854532	EqualityExpression	name_len == sizeof ( ZEND_CALL_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854533	Identifier	name_len		3853982	0					
ANR	3854534	AdditiveExpression	sizeof ( ZEND_CALL_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854535	SizeofExpression	sizeof ( ZEND_CALL_FUNC_NAME )		3853982	0					
ANR	3854536	Sizeof	sizeof		3853982	0					
ANR	3854537	SizeofOperand	ZEND_CALL_FUNC_NAME		3853982	1					
ANR	3854538	PrimaryExpression	1		3853982	1					
ANR	3854539	UnaryOperationExpression	"! memcmp ( lcname , ZEND_CALL_FUNC_NAME , sizeof ( ZEND_CALL_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854540	UnaryOperator	!		3853982	0					
ANR	3854541	CallExpression	"memcmp ( lcname , ZEND_CALL_FUNC_NAME , sizeof ( ZEND_CALL_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854542	Callee	memcmp		3853982	0					
ANR	3854543	Identifier	memcmp		3853982	0					
ANR	3854544	ArgumentList	lcname		3853982	1					
ANR	3854545	Argument	lcname		3853982	0					
ANR	3854546	Identifier	lcname		3853982	0					
ANR	3854547	Argument	ZEND_CALL_FUNC_NAME		3853982	1					
ANR	3854548	Identifier	ZEND_CALL_FUNC_NAME		3853982	0					
ANR	3854549	Argument	sizeof ( ZEND_CALL_FUNC_NAME ) - 1		3853982	2					
ANR	3854550	AdditiveExpression	sizeof ( ZEND_CALL_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854551	SizeofExpression	sizeof ( ZEND_CALL_FUNC_NAME )		3853982	0					
ANR	3854552	Sizeof	sizeof		3853982	0					
ANR	3854553	SizeofOperand	ZEND_CALL_FUNC_NAME		3853982	1					
ANR	3854554	PrimaryExpression	1		3853982	1					
ANR	3854555	CompoundStatement		39:130:3010:3010	3853982	1					
ANR	3854556	IfStatement	if ( fptr -> common . num_args != 2 )		3853982	0					
ANR	3854557	Condition	fptr -> common . num_args != 2	2088:6:57047:57072	3853982	0	True				
ANR	3854558	EqualityExpression	fptr -> common . num_args != 2		3853982	0		!=			
ANR	3854559	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854560	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854561	Identifier	fptr		3853982	0					
ANR	3854562	Identifier	common		3853982	1					
ANR	3854563	Identifier	num_args		3853982	1					
ANR	3854564	PrimaryExpression	2		3853982	1					
ANR	3854565	CompoundStatement		40:34:3046:3046	3853982	1					
ANR	3854566	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() must take exactly 2 arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_CALL_FUNC_NAME )"	2089:3:57080:57192	3853982	0	True				
ANR	3854567	CallExpression	"zend_error ( error_type , ""Method %s::%s() must take exactly 2 arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_CALL_FUNC_NAME )"		3853982	0					
ANR	3854568	Callee	zend_error		3853982	0					
ANR	3854569	Identifier	zend_error		3853982	0					
ANR	3854570	ArgumentList	error_type		3853982	1					
ANR	3854571	Argument	error_type		3853982	0					
ANR	3854572	Identifier	error_type		3853982	0					
ANR	3854573	Argument	"""Method %s::%s() must take exactly 2 arguments"""		3853982	1					
ANR	3854574	PrimaryExpression	"""Method %s::%s() must take exactly 2 arguments"""		3853982	0					
ANR	3854575	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854576	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854577	Callee	ZSTR_VAL		3853982	0					
ANR	3854578	Identifier	ZSTR_VAL		3853982	0					
ANR	3854579	ArgumentList	ce -> name		3853982	1					
ANR	3854580	Argument	ce -> name		3853982	0					
ANR	3854581	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854582	Identifier	ce		3853982	0					
ANR	3854583	Identifier	name		3853982	1					
ANR	3854584	Argument	ZEND_CALL_FUNC_NAME		3853982	3					
ANR	3854585	Identifier	ZEND_CALL_FUNC_NAME		3853982	0					
ANR	3854586	ElseStatement	else		3853982	0					
ANR	3854587	IfStatement	"if ( ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) || ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 ) )"		3853982	0					
ANR	3854588	Condition	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) || ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 )"	2090:13:57207:57278	3853982	0	True				
ANR	3854589	OrExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) || ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 )"		3853982	0		||			
ANR	3854590	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 )"		3853982	0					
ANR	3854591	Callee	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854592	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854593	ArgumentList	fptr		3853982	1					
ANR	3854594	Argument	fptr		3853982	0					
ANR	3854595	Identifier	fptr		3853982	0					
ANR	3854596	Argument	1		3853982	1					
ANR	3854597	PrimaryExpression	1		3853982	0					
ANR	3854598	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 )"		3853982	1					
ANR	3854599	Callee	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854600	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854601	ArgumentList	fptr		3853982	1					
ANR	3854602	Argument	fptr		3853982	0					
ANR	3854603	Identifier	fptr		3853982	0					
ANR	3854604	Argument	2		3853982	1					
ANR	3854605	PrimaryExpression	2		3853982	0					
ANR	3854606	CompoundStatement		42:87:3252:3252	3853982	1					
ANR	3854607	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_CALL_FUNC_NAME )"	2091:3:57286:57403	3853982	0	True				
ANR	3854608	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) , ZEND_CALL_FUNC_NAME )"		3853982	0					
ANR	3854609	Callee	zend_error		3853982	0					
ANR	3854610	Identifier	zend_error		3853982	0					
ANR	3854611	ArgumentList	error_type		3853982	1					
ANR	3854612	Argument	error_type		3853982	0					
ANR	3854613	Identifier	error_type		3853982	0					
ANR	3854614	Argument	"""Method %s::%s() cannot take arguments by reference"""		3853982	1					
ANR	3854615	PrimaryExpression	"""Method %s::%s() cannot take arguments by reference"""		3853982	0					
ANR	3854616	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854617	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854618	Callee	ZSTR_VAL		3853982	0					
ANR	3854619	Identifier	ZSTR_VAL		3853982	0					
ANR	3854620	ArgumentList	ce -> name		3853982	1					
ANR	3854621	Argument	ce -> name		3853982	0					
ANR	3854622	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854623	Identifier	ce		3853982	0					
ANR	3854624	Identifier	name		3853982	1					
ANR	3854625	Argument	ZEND_CALL_FUNC_NAME		3853982	3					
ANR	3854626	Identifier	ZEND_CALL_FUNC_NAME		3853982	0					
ANR	3854627	ElseStatement	else		3853982	0					
ANR	3854628	IfStatement	"if ( name_len == sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_CALLSTATIC_FUNC_NAME , sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1 ) )"		3853982	0					
ANR	3854629	Condition	"name_len == sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_CALLSTATIC_FUNC_NAME , sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1 )"	2093:12:57421:57554	3853982	0	True				
ANR	3854630	AndExpression	"name_len == sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_CALLSTATIC_FUNC_NAME , sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1 )"		3853982	0		&&			
ANR	3854631	EqualityExpression	name_len == sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854632	Identifier	name_len		3853982	0					
ANR	3854633	AdditiveExpression	sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854634	SizeofExpression	sizeof ( ZEND_CALLSTATIC_FUNC_NAME )		3853982	0					
ANR	3854635	Sizeof	sizeof		3853982	0					
ANR	3854636	SizeofOperand	ZEND_CALLSTATIC_FUNC_NAME		3853982	1					
ANR	3854637	PrimaryExpression	1		3853982	1					
ANR	3854638	UnaryOperationExpression	"! memcmp ( lcname , ZEND_CALLSTATIC_FUNC_NAME , sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854639	UnaryOperator	!		3853982	0					
ANR	3854640	CallExpression	"memcmp ( lcname , ZEND_CALLSTATIC_FUNC_NAME , sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854641	Callee	memcmp		3853982	0					
ANR	3854642	Identifier	memcmp		3853982	0					
ANR	3854643	ArgumentList	lcname		3853982	1					
ANR	3854644	Argument	lcname		3853982	0					
ANR	3854645	Identifier	lcname		3853982	0					
ANR	3854646	Argument	ZEND_CALLSTATIC_FUNC_NAME		3853982	1					
ANR	3854647	Identifier	ZEND_CALLSTATIC_FUNC_NAME		3853982	0					
ANR	3854648	Argument	sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1		3853982	2					
ANR	3854649	AdditiveExpression	sizeof ( ZEND_CALLSTATIC_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854650	SizeofExpression	sizeof ( ZEND_CALLSTATIC_FUNC_NAME )		3853982	0					
ANR	3854651	Sizeof	sizeof		3853982	0					
ANR	3854652	SizeofOperand	ZEND_CALLSTATIC_FUNC_NAME		3853982	1					
ANR	3854653	PrimaryExpression	1		3853982	1					
ANR	3854654	CompoundStatement		47:3:3530:3530	3853982	1					
ANR	3854655	IfStatement	if ( fptr -> common . num_args != 2 )		3853982	0					
ANR	3854656	Condition	fptr -> common . num_args != 2	2096:6:57567:57592	3853982	0	True				
ANR	3854657	EqualityExpression	fptr -> common . num_args != 2		3853982	0		!=			
ANR	3854658	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854659	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854660	Identifier	fptr		3853982	0					
ANR	3854661	Identifier	common		3853982	1					
ANR	3854662	Identifier	num_args		3853982	1					
ANR	3854663	PrimaryExpression	2		3853982	1					
ANR	3854664	CompoundStatement		48:34:3566:3566	3853982	1					
ANR	3854665	ExpressionStatement	"zend_error ( error_type , ""Method %s::__callStatic() must take exactly 2 arguments"" , ZSTR_VAL ( ce -> name ) )"	2097:3:57600:57701	3853982	0	True				
ANR	3854666	CallExpression	"zend_error ( error_type , ""Method %s::__callStatic() must take exactly 2 arguments"" , ZSTR_VAL ( ce -> name ) )"		3853982	0					
ANR	3854667	Callee	zend_error		3853982	0					
ANR	3854668	Identifier	zend_error		3853982	0					
ANR	3854669	ArgumentList	error_type		3853982	1					
ANR	3854670	Argument	error_type		3853982	0					
ANR	3854671	Identifier	error_type		3853982	0					
ANR	3854672	Argument	"""Method %s::__callStatic() must take exactly 2 arguments"""		3853982	1					
ANR	3854673	PrimaryExpression	"""Method %s::__callStatic() must take exactly 2 arguments"""		3853982	0					
ANR	3854674	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854675	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854676	Callee	ZSTR_VAL		3853982	0					
ANR	3854677	Identifier	ZSTR_VAL		3853982	0					
ANR	3854678	ArgumentList	ce -> name		3853982	1					
ANR	3854679	Argument	ce -> name		3853982	0					
ANR	3854680	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854681	Identifier	ce		3853982	0					
ANR	3854682	Identifier	name		3853982	1					
ANR	3854683	ElseStatement	else		3853982	0					
ANR	3854684	IfStatement	"if ( ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) || ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 ) )"		3853982	0					
ANR	3854685	Condition	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) || ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 )"	2098:13:57716:57787	3853982	0	True				
ANR	3854686	OrExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 ) || ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 )"		3853982	0		||			
ANR	3854687	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 1 )"		3853982	0					
ANR	3854688	Callee	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854689	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854690	ArgumentList	fptr		3853982	1					
ANR	3854691	Argument	fptr		3853982	0					
ANR	3854692	Identifier	fptr		3853982	0					
ANR	3854693	Argument	1		3853982	1					
ANR	3854694	PrimaryExpression	1		3853982	0					
ANR	3854695	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( fptr , 2 )"		3853982	1					
ANR	3854696	Callee	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854697	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3853982	0					
ANR	3854698	ArgumentList	fptr		3853982	1					
ANR	3854699	Argument	fptr		3853982	0					
ANR	3854700	Identifier	fptr		3853982	0					
ANR	3854701	Argument	2		3853982	1					
ANR	3854702	PrimaryExpression	2		3853982	0					
ANR	3854703	CompoundStatement		50:87:3761:3761	3853982	1					
ANR	3854704	ExpressionStatement	"zend_error ( error_type , ""Method %s::__callStatic() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) )"	2099:3:57795:57901	3853982	0	True				
ANR	3854705	CallExpression	"zend_error ( error_type , ""Method %s::__callStatic() cannot take arguments by reference"" , ZSTR_VAL ( ce -> name ) )"		3853982	0					
ANR	3854706	Callee	zend_error		3853982	0					
ANR	3854707	Identifier	zend_error		3853982	0					
ANR	3854708	ArgumentList	error_type		3853982	1					
ANR	3854709	Argument	error_type		3853982	0					
ANR	3854710	Identifier	error_type		3853982	0					
ANR	3854711	Argument	"""Method %s::__callStatic() cannot take arguments by reference"""		3853982	1					
ANR	3854712	PrimaryExpression	"""Method %s::__callStatic() cannot take arguments by reference"""		3853982	0					
ANR	3854713	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854714	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854715	Callee	ZSTR_VAL		3853982	0					
ANR	3854716	Identifier	ZSTR_VAL		3853982	0					
ANR	3854717	ArgumentList	ce -> name		3853982	1					
ANR	3854718	Argument	ce -> name		3853982	0					
ANR	3854719	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854720	Identifier	ce		3853982	0					
ANR	3854721	Identifier	name		3853982	1					
ANR	3854722	ElseStatement	else		3853982	0					
ANR	3854723	IfStatement	"if ( name_len == sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_TOSTRING_FUNC_NAME , sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0 )"		3853982	0					
ANR	3854724	Condition	"name_len == sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_TOSTRING_FUNC_NAME , sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"	2101:13:57920:58078	3853982	0	True				
ANR	3854725	AndExpression	"name_len == sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_TOSTRING_FUNC_NAME , sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"		3853982	0		&&			
ANR	3854726	EqualityExpression	name_len == sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854727	Identifier	name_len		3853982	0					
ANR	3854728	AdditiveExpression	sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854729	SizeofExpression	sizeof ( ZEND_TOSTRING_FUNC_NAME )		3853982	0					
ANR	3854730	Sizeof	sizeof		3853982	0					
ANR	3854731	SizeofOperand	ZEND_TOSTRING_FUNC_NAME		3853982	1					
ANR	3854732	PrimaryExpression	1		3853982	1					
ANR	3854733	AndExpression	"! memcmp ( lcname , ZEND_TOSTRING_FUNC_NAME , sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"		3853982	1		&&			
ANR	3854734	UnaryOperationExpression	"! memcmp ( lcname , ZEND_TOSTRING_FUNC_NAME , sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1 )"		3853982	0					
ANR	3854735	UnaryOperator	!		3853982	0					
ANR	3854736	CallExpression	"memcmp ( lcname , ZEND_TOSTRING_FUNC_NAME , sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854737	Callee	memcmp		3853982	0					
ANR	3854738	Identifier	memcmp		3853982	0					
ANR	3854739	ArgumentList	lcname		3853982	1					
ANR	3854740	Argument	lcname		3853982	0					
ANR	3854741	Identifier	lcname		3853982	0					
ANR	3854742	Argument	ZEND_TOSTRING_FUNC_NAME		3853982	1					
ANR	3854743	Identifier	ZEND_TOSTRING_FUNC_NAME		3853982	0					
ANR	3854744	Argument	sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1		3853982	2					
ANR	3854745	AdditiveExpression	sizeof ( ZEND_TOSTRING_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854746	SizeofExpression	sizeof ( ZEND_TOSTRING_FUNC_NAME )		3853982	0					
ANR	3854747	Sizeof	sizeof		3853982	0					
ANR	3854748	SizeofOperand	ZEND_TOSTRING_FUNC_NAME		3853982	1					
ANR	3854749	PrimaryExpression	1		3853982	1					
ANR	3854750	EqualityExpression	fptr -> common . num_args != 0		3853982	1		!=			
ANR	3854751	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854752	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854753	Identifier	fptr		3853982	0					
ANR	3854754	Identifier	common		3853982	1					
ANR	3854755	Identifier	num_args		3853982	1					
ANR	3854756	PrimaryExpression	0		3853982	1					
ANR	3854757	CompoundStatement		55:3:4054:4054	3853982	1					
ANR	3854758	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot take arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_TOSTRING_FUNC_NAME )"	2104:2:58087:58195	3853982	0	True				
ANR	3854759	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot take arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_TOSTRING_FUNC_NAME )"		3853982	0					
ANR	3854760	Callee	zend_error		3853982	0					
ANR	3854761	Identifier	zend_error		3853982	0					
ANR	3854762	ArgumentList	error_type		3853982	1					
ANR	3854763	Argument	error_type		3853982	0					
ANR	3854764	Identifier	error_type		3853982	0					
ANR	3854765	Argument	"""Method %s::%s() cannot take arguments"""		3853982	1					
ANR	3854766	PrimaryExpression	"""Method %s::%s() cannot take arguments"""		3853982	0					
ANR	3854767	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854768	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854769	Callee	ZSTR_VAL		3853982	0					
ANR	3854770	Identifier	ZSTR_VAL		3853982	0					
ANR	3854771	ArgumentList	ce -> name		3853982	1					
ANR	3854772	Argument	ce -> name		3853982	0					
ANR	3854773	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854774	Identifier	ce		3853982	0					
ANR	3854775	Identifier	name		3853982	1					
ANR	3854776	Argument	ZEND_TOSTRING_FUNC_NAME		3853982	3					
ANR	3854777	Identifier	ZEND_TOSTRING_FUNC_NAME		3853982	0					
ANR	3854778	ElseStatement	else		3853982	0					
ANR	3854779	IfStatement	"if ( name_len == sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_DEBUGINFO_FUNC_NAME , sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0 )"		3853982	0					
ANR	3854780	Condition	"name_len == sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_DEBUGINFO_FUNC_NAME , sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"	2105:12:58209:58369	3853982	0	True				
ANR	3854781	AndExpression	"name_len == sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1 && ! memcmp ( lcname , ZEND_DEBUGINFO_FUNC_NAME , sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"		3853982	0		&&			
ANR	3854782	EqualityExpression	name_len == sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1		3853982	0		==			
ANR	3854783	Identifier	name_len		3853982	0					
ANR	3854784	AdditiveExpression	sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1		3853982	1		-			
ANR	3854785	SizeofExpression	sizeof ( ZEND_DEBUGINFO_FUNC_NAME )		3853982	0					
ANR	3854786	Sizeof	sizeof		3853982	0					
ANR	3854787	SizeofOperand	ZEND_DEBUGINFO_FUNC_NAME		3853982	1					
ANR	3854788	PrimaryExpression	1		3853982	1					
ANR	3854789	AndExpression	"! memcmp ( lcname , ZEND_DEBUGINFO_FUNC_NAME , sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1 ) && fptr -> common . num_args != 0"		3853982	1		&&			
ANR	3854790	UnaryOperationExpression	"! memcmp ( lcname , ZEND_DEBUGINFO_FUNC_NAME , sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1 )"		3853982	0					
ANR	3854791	UnaryOperator	!		3853982	0					
ANR	3854792	CallExpression	"memcmp ( lcname , ZEND_DEBUGINFO_FUNC_NAME , sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1 )"		3853982	1					
ANR	3854793	Callee	memcmp		3853982	0					
ANR	3854794	Identifier	memcmp		3853982	0					
ANR	3854795	ArgumentList	lcname		3853982	1					
ANR	3854796	Argument	lcname		3853982	0					
ANR	3854797	Identifier	lcname		3853982	0					
ANR	3854798	Argument	ZEND_DEBUGINFO_FUNC_NAME		3853982	1					
ANR	3854799	Identifier	ZEND_DEBUGINFO_FUNC_NAME		3853982	0					
ANR	3854800	Argument	sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1		3853982	2					
ANR	3854801	AdditiveExpression	sizeof ( ZEND_DEBUGINFO_FUNC_NAME ) - 1		3853982	0		-			
ANR	3854802	SizeofExpression	sizeof ( ZEND_DEBUGINFO_FUNC_NAME )		3853982	0					
ANR	3854803	Sizeof	sizeof		3853982	0					
ANR	3854804	SizeofOperand	ZEND_DEBUGINFO_FUNC_NAME		3853982	1					
ANR	3854805	PrimaryExpression	1		3853982	1					
ANR	3854806	EqualityExpression	fptr -> common . num_args != 0		3853982	1		!=			
ANR	3854807	MemberAccess	fptr -> common . num_args		3853982	0					
ANR	3854808	PtrMemberAccess	fptr -> common		3853982	0					
ANR	3854809	Identifier	fptr		3853982	0					
ANR	3854810	Identifier	common		3853982	1					
ANR	3854811	Identifier	num_args		3853982	1					
ANR	3854812	PrimaryExpression	0		3853982	1					
ANR	3854813	CompoundStatement		58:111:4343:4343	3853982	1					
ANR	3854814	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot take arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_DEBUGINFO_FUNC_NAME )"	2107:2:58376:58485	3853982	0	True				
ANR	3854815	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot take arguments"" , ZSTR_VAL ( ce -> name ) , ZEND_DEBUGINFO_FUNC_NAME )"		3853982	0					
ANR	3854816	Callee	zend_error		3853982	0					
ANR	3854817	Identifier	zend_error		3853982	0					
ANR	3854818	ArgumentList	error_type		3853982	1					
ANR	3854819	Argument	error_type		3853982	0					
ANR	3854820	Identifier	error_type		3853982	0					
ANR	3854821	Argument	"""Method %s::%s() cannot take arguments"""		3853982	1					
ANR	3854822	PrimaryExpression	"""Method %s::%s() cannot take arguments"""		3853982	0					
ANR	3854823	Argument	ZSTR_VAL ( ce -> name )		3853982	2					
ANR	3854824	CallExpression	ZSTR_VAL ( ce -> name )		3853982	0					
ANR	3854825	Callee	ZSTR_VAL		3853982	0					
ANR	3854826	Identifier	ZSTR_VAL		3853982	0					
ANR	3854827	ArgumentList	ce -> name		3853982	1					
ANR	3854828	Argument	ce -> name		3853982	0					
ANR	3854829	PtrMemberAccess	ce -> name		3853982	0					
ANR	3854830	Identifier	ce		3853982	0					
ANR	3854831	Identifier	name		3853982	1					
ANR	3854832	Argument	ZEND_DEBUGINFO_FUNC_NAME		3853982	3					
ANR	3854833	Identifier	ZEND_DEBUGINFO_FUNC_NAME		3853982	0					
ANR	3854834	ReturnType	ZEND_API void		3853982	1					
ANR	3854835	Identifier	zend_check_magic_method_implementation		3853982	2					
ANR	3854836	ParameterList	"const zend_class_entry * ce , const zend_function * fptr , int error_type"		3853982	3					
ANR	3854837	Parameter	const zend_class_entry * ce	2048:53:53947:53972	3853982	0	True				
ANR	3854838	ParameterType	const zend_class_entry *		3853982	0					
ANR	3854839	Identifier	ce		3853982	1					
ANR	3854840	Parameter	const zend_function * fptr	2048:81:53975:53999	3853982	1	True				
ANR	3854841	ParameterType	const zend_function *		3853982	0					
ANR	3854842	Identifier	fptr		3853982	1					
ANR	3854843	Parameter	int error_type	2048:108:54002:54015	3853982	2	True				
ANR	3854844	ParameterType	int		3853982	0					
ANR	3854845	Identifier	error_type		3853982	1					
ANR	3854846	CFGEntryNode	ENTRY		3853982		True				
ANR	3854847	CFGExitNode	EXIT		3853982		True				
ANR	3854848	Symbol	ARG_SHOULD_BE_SENT_BY_REF		3853982						
ANR	3854849	Symbol	ZEND_CALLSTATIC_FUNC_NAME		3853982						
ANR	3854850	Symbol	fptr -> common . num_args		3853982						
ANR	3854851	Symbol	* ce		3853982						
ANR	3854852	Symbol	ZEND_GET_FUNC_NAME		3853982						
ANR	3854853	Symbol	ZEND_DEBUGINFO_FUNC_NAME		3853982						
ANR	3854854	Symbol	ZEND_CALL_FUNC_NAME		3853982						
ANR	3854855	Symbol	* lcname		3853982						
ANR	3854856	Symbol	memcmp		3853982						
ANR	3854857	Symbol	ZEND_CLONE_FUNC_NAME		3853982						
ANR	3854858	Symbol	error_type		3853982						
ANR	3854859	Symbol	ZEND_ISSET_FUNC_NAME		3853982						
ANR	3854860	Symbol	name_len		3853982						
ANR	3854861	Symbol	ce -> name		3853982						
ANR	3854862	Symbol	ZEND_SET_FUNC_NAME		3853982						
ANR	3854863	Symbol	* fptr		3853982						
ANR	3854864	Symbol	ce		3853982						
ANR	3854865	Symbol	fptr -> common		3853982						
ANR	3854866	Symbol	ZSTR_VAL		3853982						
ANR	3854867	Symbol	fptr -> common . function_name		3853982						
ANR	3854868	Symbol	lcname		3853982						
ANR	3854869	Symbol	MIN		3853982						
ANR	3854870	Symbol	fptr		3853982						
ANR	3854871	Symbol	ZSTR_LEN		3853982						
ANR	3854872	Symbol	ZEND_DESTRUCTOR_FUNC_NAME		3853982						
ANR	3854873	Symbol	ZEND_TOSTRING_FUNC_NAME		3853982						
ANR	3854874	Symbol	ZEND_UNSET_FUNC_NAME		3853982						
ANR	3854875	Function	zend_register_functions	2113:0:58576:71438							
ANR	3854876	FunctionDef	"zend_register_functions (zend_class_entry * scope , const zend_function_entry * functions , HashTable * function_table , int type)"		3854875	0					
ANR	3854877	CompoundStatement		2114:0:58723:71438	3854875	0					
ANR	3854878	IdentifierDeclStatement	const zend_function_entry * ptr = functions ;	2115:1:58726:58768	3854875	0	True				
ANR	3854879	IdentifierDecl	* ptr = functions		3854875	0					
ANR	3854880	IdentifierDeclType	const zend_function_entry *		3854875	0					
ANR	3854881	Identifier	ptr		3854875	1					
ANR	3854882	AssignmentExpression	* ptr = functions		3854875	2		=			
ANR	3854883	Identifier	functions		3854875	0					
ANR	3854884	Identifier	functions		3854875	1					
ANR	3854885	IdentifierDeclStatement	"zend_function function , * reg_function ;"	2116:1:58771:58808	3854875	1	True				
ANR	3854886	IdentifierDecl	function		3854875	0					
ANR	3854887	IdentifierDeclType	zend_function		3854875	0					
ANR	3854888	Identifier	function		3854875	1					
ANR	3854889	IdentifierDecl	* reg_function		3854875	1					
ANR	3854890	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854891	Identifier	reg_function		3854875	1					
ANR	3854892	IdentifierDeclStatement	zend_internal_function * internal_function = ( zend_internal_function * ) & function ;	2117:1:58811:58890	3854875	2	True				
ANR	3854893	IdentifierDecl	* internal_function = ( zend_internal_function * ) & function		3854875	0					
ANR	3854894	IdentifierDeclType	zend_internal_function *		3854875	0					
ANR	3854895	Identifier	internal_function		3854875	1					
ANR	3854896	AssignmentExpression	* internal_function = ( zend_internal_function * ) & function		3854875	2		=			
ANR	3854897	Identifier	internal_function		3854875	0					
ANR	3854898	CastExpression	( zend_internal_function * ) & function		3854875	1					
ANR	3854899	CastTarget	zend_internal_function *		3854875	0					
ANR	3854900	UnaryOperationExpression	& function		3854875	1					
ANR	3854901	UnaryOperator	&		3854875	0					
ANR	3854902	Identifier	function		3854875	1					
ANR	3854903	IdentifierDeclStatement	"int count = 0 , unload = 0 ;"	2118:1:58893:58914	3854875	3	True				
ANR	3854904	IdentifierDecl	count = 0		3854875	0					
ANR	3854905	IdentifierDeclType	int		3854875	0					
ANR	3854906	Identifier	count		3854875	1					
ANR	3854907	AssignmentExpression	count = 0		3854875	2		=			
ANR	3854908	Identifier	count		3854875	0					
ANR	3854909	PrimaryExpression	0		3854875	1					
ANR	3854910	IdentifierDecl	unload = 0		3854875	1					
ANR	3854911	IdentifierDeclType	int		3854875	0					
ANR	3854912	Identifier	unload		3854875	1					
ANR	3854913	AssignmentExpression	unload = 0		3854875	2		=			
ANR	3854914	Identifier	unload		3854875	0					
ANR	3854915	PrimaryExpression	0		3854875	1					
ANR	3854916	IdentifierDeclStatement	HashTable * target_function_table = function_table ;	2119:1:58917:58966	3854875	4	True				
ANR	3854917	IdentifierDecl	* target_function_table = function_table		3854875	0					
ANR	3854918	IdentifierDeclType	HashTable *		3854875	0					
ANR	3854919	Identifier	target_function_table		3854875	1					
ANR	3854920	AssignmentExpression	* target_function_table = function_table		3854875	2		=			
ANR	3854921	Identifier	function_table		3854875	0					
ANR	3854922	Identifier	function_table		3854875	1					
ANR	3854923	IdentifierDeclStatement	int error_type ;	2120:1:58969:58983	3854875	5	True				
ANR	3854924	IdentifierDecl	error_type		3854875	0					
ANR	3854925	IdentifierDeclType	int		3854875	0					
ANR	3854926	Identifier	error_type		3854875	1					
ANR	3854927	IdentifierDeclStatement	"zend_function * ctor = NULL , * dtor = NULL , * clone = NULL , * __get = NULL , * __set = NULL , * __unset = NULL , * __isset = NULL , * __call = NULL , * __callstatic = NULL , * __tostring = NULL , * __debugInfo = NULL ;"	2121:1:58986:59184	3854875	6	True				
ANR	3854928	IdentifierDecl	* ctor = NULL		3854875	0					
ANR	3854929	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854930	Identifier	ctor		3854875	1					
ANR	3854931	AssignmentExpression	* ctor = NULL		3854875	2		=			
ANR	3854932	Identifier	NULL		3854875	0					
ANR	3854933	Identifier	NULL		3854875	1					
ANR	3854934	IdentifierDecl	* dtor = NULL		3854875	1					
ANR	3854935	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854936	Identifier	dtor		3854875	1					
ANR	3854937	AssignmentExpression	* dtor = NULL		3854875	2		=			
ANR	3854938	Identifier	NULL		3854875	0					
ANR	3854939	Identifier	NULL		3854875	1					
ANR	3854940	IdentifierDecl	* clone = NULL		3854875	2					
ANR	3854941	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854942	Identifier	clone		3854875	1					
ANR	3854943	AssignmentExpression	* clone = NULL		3854875	2		=			
ANR	3854944	Identifier	NULL		3854875	0					
ANR	3854945	Identifier	NULL		3854875	1					
ANR	3854946	IdentifierDecl	* __get = NULL		3854875	3					
ANR	3854947	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854948	Identifier	__get		3854875	1					
ANR	3854949	AssignmentExpression	* __get = NULL		3854875	2		=			
ANR	3854950	Identifier	NULL		3854875	0					
ANR	3854951	Identifier	NULL		3854875	1					
ANR	3854952	IdentifierDecl	* __set = NULL		3854875	4					
ANR	3854953	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854954	Identifier	__set		3854875	1					
ANR	3854955	AssignmentExpression	* __set = NULL		3854875	2		=			
ANR	3854956	Identifier	NULL		3854875	0					
ANR	3854957	Identifier	NULL		3854875	1					
ANR	3854958	IdentifierDecl	* __unset = NULL		3854875	5					
ANR	3854959	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854960	Identifier	__unset		3854875	1					
ANR	3854961	AssignmentExpression	* __unset = NULL		3854875	2		=			
ANR	3854962	Identifier	NULL		3854875	0					
ANR	3854963	Identifier	NULL		3854875	1					
ANR	3854964	IdentifierDecl	* __isset = NULL		3854875	6					
ANR	3854965	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854966	Identifier	__isset		3854875	1					
ANR	3854967	AssignmentExpression	* __isset = NULL		3854875	2		=			
ANR	3854968	Identifier	NULL		3854875	0					
ANR	3854969	Identifier	NULL		3854875	1					
ANR	3854970	IdentifierDecl	* __call = NULL		3854875	7					
ANR	3854971	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854972	Identifier	__call		3854875	1					
ANR	3854973	AssignmentExpression	* __call = NULL		3854875	2		=			
ANR	3854974	Identifier	NULL		3854875	0					
ANR	3854975	Identifier	NULL		3854875	1					
ANR	3854976	IdentifierDecl	* __callstatic = NULL		3854875	8					
ANR	3854977	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854978	Identifier	__callstatic		3854875	1					
ANR	3854979	AssignmentExpression	* __callstatic = NULL		3854875	2		=			
ANR	3854980	Identifier	NULL		3854875	0					
ANR	3854981	Identifier	NULL		3854875	1					
ANR	3854982	IdentifierDecl	* __tostring = NULL		3854875	9					
ANR	3854983	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854984	Identifier	__tostring		3854875	1					
ANR	3854985	AssignmentExpression	* __tostring = NULL		3854875	2		=			
ANR	3854986	Identifier	NULL		3854875	0					
ANR	3854987	Identifier	NULL		3854875	1					
ANR	3854988	IdentifierDecl	* __debugInfo = NULL		3854875	10					
ANR	3854989	IdentifierDeclType	zend_function *		3854875	0					
ANR	3854990	Identifier	__debugInfo		3854875	1					
ANR	3854991	AssignmentExpression	* __debugInfo = NULL		3854875	2		=			
ANR	3854992	Identifier	NULL		3854875	0					
ANR	3854993	Identifier	NULL		3854875	1					
ANR	3854994	IdentifierDeclStatement	zend_string * lowercase_name ;	2122:1:59187:59214	3854875	7	True				
ANR	3854995	IdentifierDecl	* lowercase_name		3854875	0					
ANR	3854996	IdentifierDeclType	zend_string *		3854875	0					
ANR	3854997	Identifier	lowercase_name		3854875	1					
ANR	3854998	IdentifierDeclStatement	size_t fname_len ;	2123:1:59217:59233	3854875	8	True				
ANR	3854999	IdentifierDecl	fname_len		3854875	0					
ANR	3855000	IdentifierDeclType	size_t		3854875	0					
ANR	3855001	Identifier	fname_len		3854875	1					
ANR	3855002	IdentifierDeclStatement	const char * lc_class_name = NULL ;	2124:1:59236:59268	3854875	9	True				
ANR	3855003	IdentifierDecl	* lc_class_name = NULL		3854875	0					
ANR	3855004	IdentifierDeclType	const char *		3854875	0					
ANR	3855005	Identifier	lc_class_name		3854875	1					
ANR	3855006	AssignmentExpression	* lc_class_name = NULL		3854875	2		=			
ANR	3855007	Identifier	NULL		3854875	0					
ANR	3855008	Identifier	NULL		3854875	1					
ANR	3855009	IdentifierDeclStatement	size_t class_name_len = 0 ;	2125:1:59271:59296	3854875	10	True				
ANR	3855010	IdentifierDecl	class_name_len = 0		3854875	0					
ANR	3855011	IdentifierDeclType	size_t		3854875	0					
ANR	3855012	Identifier	class_name_len		3854875	1					
ANR	3855013	AssignmentExpression	class_name_len = 0		3854875	2		=			
ANR	3855014	Identifier	class_name_len		3854875	0					
ANR	3855015	PrimaryExpression	0		3854875	1					
ANR	3855016	IfStatement	if ( type == MODULE_PERSISTENT )		3854875	11					
ANR	3855017	Condition	type == MODULE_PERSISTENT	2127:5:59304:59326	3854875	0	True				
ANR	3855018	EqualityExpression	type == MODULE_PERSISTENT		3854875	0		==			
ANR	3855019	Identifier	type		3854875	0					
ANR	3855020	Identifier	MODULE_PERSISTENT		3854875	1					
ANR	3855021	CompoundStatement		14:30:605:605	3854875	1					
ANR	3855022	ExpressionStatement	error_type = E_CORE_WARNING	2128:2:59333:59360	3854875	0	True				
ANR	3855023	AssignmentExpression	error_type = E_CORE_WARNING		3854875	0		=			
ANR	3855024	Identifier	error_type		3854875	0					
ANR	3855025	Identifier	E_CORE_WARNING		3854875	1					
ANR	3855026	ElseStatement	else		3854875	0					
ANR	3855027	CompoundStatement		16:8:646:646	3854875	0					
ANR	3855028	ExpressionStatement	error_type = E_WARNING	2130:2:59374:59396	3854875	0	True				
ANR	3855029	AssignmentExpression	error_type = E_WARNING		3854875	0		=			
ANR	3855030	Identifier	error_type		3854875	0					
ANR	3855031	Identifier	E_WARNING		3854875	1					
ANR	3855032	IfStatement	if ( ! target_function_table )		3854875	12					
ANR	3855033	Condition	! target_function_table	2133:5:59407:59428	3854875	0	True				
ANR	3855034	UnaryOperationExpression	! target_function_table		3854875	0					
ANR	3855035	UnaryOperator	!		3854875	0					
ANR	3855036	Identifier	target_function_table		3854875	1					
ANR	3855037	CompoundStatement		20:29:707:707	3854875	1					
ANR	3855038	ExpressionStatement	target_function_table = CG ( function_table )	2134:2:59435:59477	3854875	0	True				
ANR	3855039	AssignmentExpression	target_function_table = CG ( function_table )		3854875	0		=			
ANR	3855040	Identifier	target_function_table		3854875	0					
ANR	3855041	CallExpression	CG ( function_table )		3854875	1					
ANR	3855042	Callee	CG		3854875	0					
ANR	3855043	Identifier	CG		3854875	0					
ANR	3855044	ArgumentList	function_table		3854875	1					
ANR	3855045	Argument	function_table		3854875	0					
ANR	3855046	Identifier	function_table		3854875	0					
ANR	3855047	ExpressionStatement	internal_function -> type = ZEND_INTERNAL_FUNCTION	2136:1:59483:59531	3854875	13	True				
ANR	3855048	AssignmentExpression	internal_function -> type = ZEND_INTERNAL_FUNCTION		3854875	0		=			
ANR	3855049	PtrMemberAccess	internal_function -> type		3854875	0					
ANR	3855050	Identifier	internal_function		3854875	0					
ANR	3855051	Identifier	type		3854875	1					
ANR	3855052	Identifier	ZEND_INTERNAL_FUNCTION		3854875	1					
ANR	3855053	ExpressionStatement	internal_function -> module = EG ( current_module )	2137:1:59534:59580	3854875	14	True				
ANR	3855054	AssignmentExpression	internal_function -> module = EG ( current_module )		3854875	0		=			
ANR	3855055	PtrMemberAccess	internal_function -> module		3854875	0					
ANR	3855056	Identifier	internal_function		3854875	0					
ANR	3855057	Identifier	module		3854875	1					
ANR	3855058	CallExpression	EG ( current_module )		3854875	1					
ANR	3855059	Callee	EG		3854875	0					
ANR	3855060	Identifier	EG		3854875	0					
ANR	3855061	ArgumentList	current_module		3854875	1					
ANR	3855062	Argument	current_module		3854875	0					
ANR	3855063	Identifier	current_module		3854875	0					
ANR	3855064	ExpressionStatement	"memset ( internal_function -> reserved , 0 , ZEND_MAX_RESERVED_RESOURCES * sizeof ( void * ) )"	2138:1:59583:59666	3854875	15	True				
ANR	3855065	CallExpression	"memset ( internal_function -> reserved , 0 , ZEND_MAX_RESERVED_RESOURCES * sizeof ( void * ) )"		3854875	0					
ANR	3855066	Callee	memset		3854875	0					
ANR	3855067	Identifier	memset		3854875	0					
ANR	3855068	ArgumentList	internal_function -> reserved		3854875	1					
ANR	3855069	Argument	internal_function -> reserved		3854875	0					
ANR	3855070	PtrMemberAccess	internal_function -> reserved		3854875	0					
ANR	3855071	Identifier	internal_function		3854875	0					
ANR	3855072	Identifier	reserved		3854875	1					
ANR	3855073	Argument	0		3854875	1					
ANR	3855074	PrimaryExpression	0		3854875	0					
ANR	3855075	Argument	ZEND_MAX_RESERVED_RESOURCES * sizeof ( void * )		3854875	2					
ANR	3855076	MultiplicativeExpression	ZEND_MAX_RESERVED_RESOURCES * sizeof ( void * )		3854875	0		*			
ANR	3855077	Identifier	ZEND_MAX_RESERVED_RESOURCES		3854875	0					
ANR	3855078	SizeofExpression	sizeof ( void * )		3854875	1					
ANR	3855079	Sizeof	sizeof		3854875	0					
ANR	3855080	SizeofOperand	void *		3854875	1					
ANR	3855081	IfStatement	if ( scope )		3854875	16					
ANR	3855082	Condition	scope	2140:5:59674:59678	3854875	0	True				
ANR	3855083	Identifier	scope		3854875	0					
ANR	3855084	CompoundStatement		27:12:957:957	3854875	1					
ANR	3855085	ExpressionStatement	class_name_len = ZSTR_LEN ( scope -> name )	2141:2:59685:59723	3854875	0	True				
ANR	3855086	AssignmentExpression	class_name_len = ZSTR_LEN ( scope -> name )		3854875	0		=			
ANR	3855087	Identifier	class_name_len		3854875	0					
ANR	3855088	CallExpression	ZSTR_LEN ( scope -> name )		3854875	1					
ANR	3855089	Callee	ZSTR_LEN		3854875	0					
ANR	3855090	Identifier	ZSTR_LEN		3854875	0					
ANR	3855091	ArgumentList	scope -> name		3854875	1					
ANR	3855092	Argument	scope -> name		3854875	0					
ANR	3855093	PtrMemberAccess	scope -> name		3854875	0					
ANR	3855094	Identifier	scope		3854875	0					
ANR	3855095	Identifier	name		3854875	1					
ANR	3855096	IfStatement	"if ( ( lc_class_name = zend_memrchr ( ZSTR_VAL ( scope -> name ) , '\\\\' , class_name_len ) ) )"		3854875	1					
ANR	3855097	Condition	"lc_class_name = zend_memrchr ( ZSTR_VAL ( scope -> name ) , '\\\\' , class_name_len )"	2142:6:59731:59805	3854875	0	True				
ANR	3855098	AssignmentExpression	"lc_class_name = zend_memrchr ( ZSTR_VAL ( scope -> name ) , '\\\\' , class_name_len )"		3854875	0		=			
ANR	3855099	Identifier	lc_class_name		3854875	0					
ANR	3855100	CallExpression	"zend_memrchr ( ZSTR_VAL ( scope -> name ) , '\\\\' , class_name_len )"		3854875	1					
ANR	3855101	Callee	zend_memrchr		3854875	0					
ANR	3855102	Identifier	zend_memrchr		3854875	0					
ANR	3855103	ArgumentList	ZSTR_VAL ( scope -> name )		3854875	1					
ANR	3855104	Argument	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3855105	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3855106	Callee	ZSTR_VAL		3854875	0					
ANR	3855107	Identifier	ZSTR_VAL		3854875	0					
ANR	3855108	ArgumentList	scope -> name		3854875	1					
ANR	3855109	Argument	scope -> name		3854875	0					
ANR	3855110	PtrMemberAccess	scope -> name		3854875	0					
ANR	3855111	Identifier	scope		3854875	0					
ANR	3855112	Identifier	name		3854875	1					
ANR	3855113	Argument	'\\\\'		3854875	1					
ANR	3855114	PrimaryExpression	'\\\\'		3854875	0					
ANR	3855115	Argument	class_name_len		3854875	2					
ANR	3855116	Identifier	class_name_len		3854875	0					
ANR	3855117	CompoundStatement		29:83:1084:1084	3854875	1					
ANR	3855118	ExpressionStatement	++ lc_class_name	2143:3:59813:59828	3854875	0	True				
ANR	3855119	UnaryExpression	++ lc_class_name		3854875	0					
ANR	3855120	IncDec	++		3854875	0					
ANR	3855121	Identifier	lc_class_name		3854875	1					
ANR	3855122	ExpressionStatement	class_name_len -= ( lc_class_name - ZSTR_VAL ( scope -> name ) )	2144:3:59833:59890	3854875	1	True				
ANR	3855123	AssignmentExpression	class_name_len -= ( lc_class_name - ZSTR_VAL ( scope -> name ) )		3854875	0		-=			
ANR	3855124	Identifier	class_name_len		3854875	0					
ANR	3855125	AdditiveExpression	lc_class_name - ZSTR_VAL ( scope -> name )		3854875	1		-			
ANR	3855126	Identifier	lc_class_name		3854875	0					
ANR	3855127	CallExpression	ZSTR_VAL ( scope -> name )		3854875	1					
ANR	3855128	Callee	ZSTR_VAL		3854875	0					
ANR	3855129	Identifier	ZSTR_VAL		3854875	0					
ANR	3855130	ArgumentList	scope -> name		3854875	1					
ANR	3855131	Argument	scope -> name		3854875	0					
ANR	3855132	PtrMemberAccess	scope -> name		3854875	0					
ANR	3855133	Identifier	scope		3854875	0					
ANR	3855134	Identifier	name		3854875	1					
ANR	3855135	ExpressionStatement	"lc_class_name = zend_str_tolower_dup ( lc_class_name , class_name_len )"	2145:3:59895:59962	3854875	2	True				
ANR	3855136	AssignmentExpression	"lc_class_name = zend_str_tolower_dup ( lc_class_name , class_name_len )"		3854875	0		=			
ANR	3855137	Identifier	lc_class_name		3854875	0					
ANR	3855138	CallExpression	"zend_str_tolower_dup ( lc_class_name , class_name_len )"		3854875	1					
ANR	3855139	Callee	zend_str_tolower_dup		3854875	0					
ANR	3855140	Identifier	zend_str_tolower_dup		3854875	0					
ANR	3855141	ArgumentList	lc_class_name		3854875	1					
ANR	3855142	Argument	lc_class_name		3854875	0					
ANR	3855143	Identifier	lc_class_name		3854875	0					
ANR	3855144	Argument	class_name_len		3854875	1					
ANR	3855145	Identifier	class_name_len		3854875	0					
ANR	3855146	ElseStatement	else		3854875	0					
ANR	3855147	CompoundStatement		33:9:1249:1249	3854875	0					
ANR	3855148	ExpressionStatement	"lc_class_name = zend_str_tolower_dup ( ZSTR_VAL ( scope -> name ) , class_name_len )"	2147:3:59978:60053	3854875	0	True				
ANR	3855149	AssignmentExpression	"lc_class_name = zend_str_tolower_dup ( ZSTR_VAL ( scope -> name ) , class_name_len )"		3854875	0		=			
ANR	3855150	Identifier	lc_class_name		3854875	0					
ANR	3855151	CallExpression	"zend_str_tolower_dup ( ZSTR_VAL ( scope -> name ) , class_name_len )"		3854875	1					
ANR	3855152	Callee	zend_str_tolower_dup		3854875	0					
ANR	3855153	Identifier	zend_str_tolower_dup		3854875	0					
ANR	3855154	ArgumentList	ZSTR_VAL ( scope -> name )		3854875	1					
ANR	3855155	Argument	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3855156	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3855157	Callee	ZSTR_VAL		3854875	0					
ANR	3855158	Identifier	ZSTR_VAL		3854875	0					
ANR	3855159	ArgumentList	scope -> name		3854875	1					
ANR	3855160	Argument	scope -> name		3854875	0					
ANR	3855161	PtrMemberAccess	scope -> name		3854875	0					
ANR	3855162	Identifier	scope		3854875	0					
ANR	3855163	Identifier	name		3854875	1					
ANR	3855164	Argument	class_name_len		3854875	1					
ANR	3855165	Identifier	class_name_len		3854875	0					
ANR	3855166	WhileStatement	while ( ptr -> fname )		3854875	17					
ANR	3855167	Condition	ptr -> fname	2151:8:60071:60080	3854875	0	True				
ANR	3855168	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3855169	Identifier	ptr		3854875	0					
ANR	3855170	Identifier	fname		3854875	1					
ANR	3855171	CompoundStatement		38:20:1359:1359	3854875	1					
ANR	3855172	ExpressionStatement	fname_len = strlen ( ptr -> fname )	2152:2:60087:60117	3854875	0	True				
ANR	3855173	AssignmentExpression	fname_len = strlen ( ptr -> fname )		3854875	0		=			
ANR	3855174	Identifier	fname_len		3854875	0					
ANR	3855175	CallExpression	strlen ( ptr -> fname )		3854875	1					
ANR	3855176	Callee	strlen		3854875	0					
ANR	3855177	Identifier	strlen		3854875	0					
ANR	3855178	ArgumentList	ptr -> fname		3854875	1					
ANR	3855179	Argument	ptr -> fname		3854875	0					
ANR	3855180	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3855181	Identifier	ptr		3854875	0					
ANR	3855182	Identifier	fname		3854875	1					
ANR	3855183	ExpressionStatement	internal_function -> handler = ptr -> handler	2153:2:60121:60162	3854875	1	True				
ANR	3855184	AssignmentExpression	internal_function -> handler = ptr -> handler		3854875	0		=			
ANR	3855185	PtrMemberAccess	internal_function -> handler		3854875	0					
ANR	3855186	Identifier	internal_function		3854875	0					
ANR	3855187	Identifier	handler		3854875	1					
ANR	3855188	PtrMemberAccess	ptr -> handler		3854875	1					
ANR	3855189	Identifier	ptr		3854875	0					
ANR	3855190	Identifier	handler		3854875	1					
ANR	3855191	ExpressionStatement	"internal_function -> function_name = zend_new_interned_string ( zend_string_init ( ptr -> fname , fname_len , 1 ) )"	2154:2:60166:60269	3854875	2	True				
ANR	3855192	AssignmentExpression	"internal_function -> function_name = zend_new_interned_string ( zend_string_init ( ptr -> fname , fname_len , 1 ) )"		3854875	0		=			
ANR	3855193	PtrMemberAccess	internal_function -> function_name		3854875	0					
ANR	3855194	Identifier	internal_function		3854875	0					
ANR	3855195	Identifier	function_name		3854875	1					
ANR	3855196	CallExpression	"zend_new_interned_string ( zend_string_init ( ptr -> fname , fname_len , 1 ) )"		3854875	1					
ANR	3855197	Callee	zend_new_interned_string		3854875	0					
ANR	3855198	Identifier	zend_new_interned_string		3854875	0					
ANR	3855199	ArgumentList	"zend_string_init ( ptr -> fname , fname_len , 1 )"		3854875	1					
ANR	3855200	Argument	"zend_string_init ( ptr -> fname , fname_len , 1 )"		3854875	0					
ANR	3855201	CallExpression	"zend_string_init ( ptr -> fname , fname_len , 1 )"		3854875	0					
ANR	3855202	Callee	zend_string_init		3854875	0					
ANR	3855203	Identifier	zend_string_init		3854875	0					
ANR	3855204	ArgumentList	ptr -> fname		3854875	1					
ANR	3855205	Argument	ptr -> fname		3854875	0					
ANR	3855206	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3855207	Identifier	ptr		3854875	0					
ANR	3855208	Identifier	fname		3854875	1					
ANR	3855209	Argument	fname_len		3854875	1					
ANR	3855210	Identifier	fname_len		3854875	0					
ANR	3855211	Argument	1		3854875	2					
ANR	3855212	PrimaryExpression	1		3854875	0					
ANR	3855213	ExpressionStatement	internal_function -> scope = scope	2155:2:60273:60305	3854875	3	True				
ANR	3855214	AssignmentExpression	internal_function -> scope = scope		3854875	0		=			
ANR	3855215	PtrMemberAccess	internal_function -> scope		3854875	0					
ANR	3855216	Identifier	internal_function		3854875	0					
ANR	3855217	Identifier	scope		3854875	1					
ANR	3855218	Identifier	scope		3854875	1					
ANR	3855219	ExpressionStatement	internal_function -> prototype = NULL	2156:2:60309:60344	3854875	4	True				
ANR	3855220	AssignmentExpression	internal_function -> prototype = NULL		3854875	0		=			
ANR	3855221	PtrMemberAccess	internal_function -> prototype		3854875	0					
ANR	3855222	Identifier	internal_function		3854875	0					
ANR	3855223	Identifier	prototype		3854875	1					
ANR	3855224	Identifier	NULL		3854875	1					
ANR	3855225	IfStatement	if ( ptr -> flags )		3854875	5					
ANR	3855226	Condition	ptr -> flags	2157:6:60352:60361	3854875	0	True				
ANR	3855227	PtrMemberAccess	ptr -> flags		3854875	0					
ANR	3855228	Identifier	ptr		3854875	0					
ANR	3855229	Identifier	flags		3854875	1					
ANR	3855230	CompoundStatement		44:18:1640:1640	3854875	1					
ANR	3855231	IfStatement	if ( ! ( ptr -> flags & ZEND_ACC_PPP_MASK ) )		3854875	0					
ANR	3855232	Condition	! ( ptr -> flags & ZEND_ACC_PPP_MASK )	2158:7:60373:60405	3854875	0	True				
ANR	3855233	UnaryOperationExpression	! ( ptr -> flags & ZEND_ACC_PPP_MASK )		3854875	0					
ANR	3855234	UnaryOperator	!		3854875	0					
ANR	3855235	BitAndExpression	ptr -> flags & ZEND_ACC_PPP_MASK		3854875	1		&			
ANR	3855236	PtrMemberAccess	ptr -> flags		3854875	0					
ANR	3855237	Identifier	ptr		3854875	0					
ANR	3855238	Identifier	flags		3854875	1					
ANR	3855239	Identifier	ZEND_ACC_PPP_MASK		3854875	1					
ANR	3855240	CompoundStatement		45:42:1684:1684	3854875	1					
ANR	3855241	IfStatement	if ( ptr -> flags != ZEND_ACC_DEPRECATED || scope )		3854875	0					
ANR	3855242	Condition	ptr -> flags != ZEND_ACC_DEPRECATED || scope	2159:8:60418:60459	3854875	0	True				
ANR	3855243	OrExpression	ptr -> flags != ZEND_ACC_DEPRECATED || scope		3854875	0		||			
ANR	3855244	EqualityExpression	ptr -> flags != ZEND_ACC_DEPRECATED		3854875	0		!=			
ANR	3855245	PtrMemberAccess	ptr -> flags		3854875	0					
ANR	3855246	Identifier	ptr		3854875	0					
ANR	3855247	Identifier	flags		3854875	1					
ANR	3855248	Identifier	ZEND_ACC_DEPRECATED		3854875	1					
ANR	3855249	Identifier	scope		3854875	1					
ANR	3855250	CompoundStatement		46:52:1738:1738	3854875	1					
ANR	3855251	ExpressionStatement	"zend_error ( error_type , ""Invalid access level for %s%s%s() - access must be exactly one of public, protected or private"" , scope ? ZSTR_VAL ( scope -> name ) : """" , scope ? ""::"" : """" , ptr -> fname )"	2160:5:60469:60656	3854875	0	True				
ANR	3855252	CallExpression	"zend_error ( error_type , ""Invalid access level for %s%s%s() - access must be exactly one of public, protected or private"" , scope ? ZSTR_VAL ( scope -> name ) : """" , scope ? ""::"" : """" , ptr -> fname )"		3854875	0					
ANR	3855253	Callee	zend_error		3854875	0					
ANR	3855254	Identifier	zend_error		3854875	0					
ANR	3855255	ArgumentList	error_type		3854875	1					
ANR	3855256	Argument	error_type		3854875	0					
ANR	3855257	Identifier	error_type		3854875	0					
ANR	3855258	Argument	"""Invalid access level for %s%s%s() - access must be exactly one of public, protected or private"""		3854875	1					
ANR	3855259	PrimaryExpression	"""Invalid access level for %s%s%s() - access must be exactly one of public, protected or private"""		3854875	0					
ANR	3855260	Argument	"scope ? ZSTR_VAL ( scope -> name ) : """""		3854875	2					
ANR	3855261	ConditionalExpression	"scope ? ZSTR_VAL ( scope -> name ) : """""		3854875	0					
ANR	3855262	Condition	scope		3854875	0					
ANR	3855263	Identifier	scope		3854875	0					
ANR	3855264	CallExpression	ZSTR_VAL ( scope -> name )		3854875	1					
ANR	3855265	Callee	ZSTR_VAL		3854875	0					
ANR	3855266	Identifier	ZSTR_VAL		3854875	0					
ANR	3855267	ArgumentList	scope -> name		3854875	1					
ANR	3855268	Argument	scope -> name		3854875	0					
ANR	3855269	PtrMemberAccess	scope -> name		3854875	0					
ANR	3855270	Identifier	scope		3854875	0					
ANR	3855271	Identifier	name		3854875	1					
ANR	3855272	PrimaryExpression	""""""		3854875	2					
ANR	3855273	Argument	"scope ? ""::"" : """""		3854875	3					
ANR	3855274	ConditionalExpression	"scope ? ""::"" : """""		3854875	0					
ANR	3855275	Condition	scope		3854875	0					
ANR	3855276	Identifier	scope		3854875	0					
ANR	3855277	PrimaryExpression	"""::"""		3854875	1					
ANR	3855278	PrimaryExpression	""""""		3854875	2					
ANR	3855279	Argument	ptr -> fname		3854875	4					
ANR	3855280	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3855281	Identifier	ptr		3854875	0					
ANR	3855282	Identifier	fname		3854875	1					
ANR	3855283	ExpressionStatement	internal_function -> fn_flags = ZEND_ACC_PUBLIC | ptr -> flags	2162:4:60668:60726	3854875	1	True				
ANR	3855284	AssignmentExpression	internal_function -> fn_flags = ZEND_ACC_PUBLIC | ptr -> flags		3854875	0		=			
ANR	3855285	PtrMemberAccess	internal_function -> fn_flags		3854875	0					
ANR	3855286	Identifier	internal_function		3854875	0					
ANR	3855287	Identifier	fn_flags		3854875	1					
ANR	3855288	InclusiveOrExpression	ZEND_ACC_PUBLIC | ptr -> flags		3854875	1		|			
ANR	3855289	Identifier	ZEND_ACC_PUBLIC		3854875	0					
ANR	3855290	PtrMemberAccess	ptr -> flags		3854875	1					
ANR	3855291	Identifier	ptr		3854875	0					
ANR	3855292	Identifier	flags		3854875	1					
ANR	3855293	ElseStatement	else		3854875	0					
ANR	3855294	CompoundStatement		50:10:2014:2014	3854875	0					
ANR	3855295	ExpressionStatement	internal_function -> fn_flags = ptr -> flags	2164:4:60744:60784	3854875	0	True				
ANR	3855296	AssignmentExpression	internal_function -> fn_flags = ptr -> flags		3854875	0		=			
ANR	3855297	PtrMemberAccess	internal_function -> fn_flags		3854875	0					
ANR	3855298	Identifier	internal_function		3854875	0					
ANR	3855299	Identifier	fn_flags		3854875	1					
ANR	3855300	PtrMemberAccess	ptr -> flags		3854875	1					
ANR	3855301	Identifier	ptr		3854875	0					
ANR	3855302	Identifier	flags		3854875	1					
ANR	3855303	ElseStatement	else		3854875	0					
ANR	3855304	CompoundStatement		53:9:2076:2076	3854875	0					
ANR	3855305	ExpressionStatement	internal_function -> fn_flags = ZEND_ACC_PUBLIC	2167:3:60805:60850	3854875	0	True				
ANR	3855306	AssignmentExpression	internal_function -> fn_flags = ZEND_ACC_PUBLIC		3854875	0		=			
ANR	3855307	PtrMemberAccess	internal_function -> fn_flags		3854875	0					
ANR	3855308	Identifier	internal_function		3854875	0					
ANR	3855309	Identifier	fn_flags		3854875	1					
ANR	3855310	Identifier	ZEND_ACC_PUBLIC		3854875	1					
ANR	3855311	IfStatement	if ( ptr -> arg_info )		3854875	6					
ANR	3855312	Condition	ptr -> arg_info	2169:6:60862:60874	3854875	0	True				
ANR	3855313	PtrMemberAccess	ptr -> arg_info		3854875	0					
ANR	3855314	Identifier	ptr		3854875	0					
ANR	3855315	Identifier	arg_info		3854875	1					
ANR	3855316	CompoundStatement		57:3:2158:2237	3854875	1					
ANR	3855317	IdentifierDeclStatement	zend_internal_function_info * info = ( zend_internal_function_info * ) ptr -> arg_info ;	2170:3:60882:60961	3854875	0	True				
ANR	3855318	IdentifierDecl	* info = ( zend_internal_function_info * ) ptr -> arg_info		3854875	0					
ANR	3855319	IdentifierDeclType	zend_internal_function_info *		3854875	0					
ANR	3855320	Identifier	info		3854875	1					
ANR	3855321	AssignmentExpression	* info = ( zend_internal_function_info * ) ptr -> arg_info		3854875	2		=			
ANR	3855322	Identifier	info		3854875	0					
ANR	3855323	CastExpression	( zend_internal_function_info * ) ptr -> arg_info		3854875	1					
ANR	3855324	CastTarget	zend_internal_function_info *		3854875	0					
ANR	3855325	PtrMemberAccess	ptr -> arg_info		3854875	1					
ANR	3855326	Identifier	ptr		3854875	0					
ANR	3855327	Identifier	arg_info		3854875	1					
ANR	3855328	ExpressionStatement	internal_function -> arg_info = ( zend_internal_arg_info * ) ptr -> arg_info + 1	2172:3:60967:61037	3854875	1	True				
ANR	3855329	AssignmentExpression	internal_function -> arg_info = ( zend_internal_arg_info * ) ptr -> arg_info + 1		3854875	0		=			
ANR	3855330	PtrMemberAccess	internal_function -> arg_info		3854875	0					
ANR	3855331	Identifier	internal_function		3854875	0					
ANR	3855332	Identifier	arg_info		3854875	1					
ANR	3855333	AdditiveExpression	( zend_internal_arg_info * ) ptr -> arg_info + 1		3854875	1		+			
ANR	3855334	CastExpression	( zend_internal_arg_info * ) ptr -> arg_info		3854875	0					
ANR	3855335	CastTarget	zend_internal_arg_info *		3854875	0					
ANR	3855336	PtrMemberAccess	ptr -> arg_info		3854875	1					
ANR	3855337	Identifier	ptr		3854875	0					
ANR	3855338	Identifier	arg_info		3854875	1					
ANR	3855339	PrimaryExpression	1		3854875	1					
ANR	3855340	ExpressionStatement	internal_function -> num_args = ptr -> num_args	2173:3:61042:61085	3854875	2	True				
ANR	3855341	AssignmentExpression	internal_function -> num_args = ptr -> num_args		3854875	0		=			
ANR	3855342	PtrMemberAccess	internal_function -> num_args		3854875	0					
ANR	3855343	Identifier	internal_function		3854875	0					
ANR	3855344	Identifier	num_args		3854875	1					
ANR	3855345	PtrMemberAccess	ptr -> num_args		3854875	1					
ANR	3855346	Identifier	ptr		3854875	0					
ANR	3855347	Identifier	num_args		3854875	1					
ANR	3855348	IfStatement	if ( info -> required_num_args == ( zend_uintptr_t ) - 1 )		3854875	3					
ANR	3855349	Condition	info -> required_num_args == ( zend_uintptr_t ) - 1	2175:7:61189:61233	3854875	0	True				
ANR	3855350	EqualityExpression	info -> required_num_args == ( zend_uintptr_t ) - 1		3854875	0		==			
ANR	3855351	PtrMemberAccess	info -> required_num_args		3854875	0					
ANR	3855352	Identifier	info		3854875	0					
ANR	3855353	Identifier	required_num_args		3854875	1					
ANR	3855354	CastExpression	( zend_uintptr_t ) - 1		3854875	1					
ANR	3855355	CastTarget	zend_uintptr_t		3854875	0					
ANR	3855356	UnaryOperationExpression	- 1		3854875	1					
ANR	3855357	UnaryOperator	-		3854875	0					
ANR	3855358	PrimaryExpression	1		3854875	1					
ANR	3855359	CompoundStatement		62:54:2512:2512	3854875	1					
ANR	3855360	ExpressionStatement	internal_function -> required_num_args = ptr -> num_args	2176:4:61242:61294	3854875	0	True				
ANR	3855361	AssignmentExpression	internal_function -> required_num_args = ptr -> num_args		3854875	0		=			
ANR	3855362	PtrMemberAccess	internal_function -> required_num_args		3854875	0					
ANR	3855363	Identifier	internal_function		3854875	0					
ANR	3855364	Identifier	required_num_args		3854875	1					
ANR	3855365	PtrMemberAccess	ptr -> num_args		3854875	1					
ANR	3855366	Identifier	ptr		3854875	0					
ANR	3855367	Identifier	num_args		3854875	1					
ANR	3855368	ElseStatement	else		3854875	0					
ANR	3855369	CompoundStatement		64:10:2582:2582	3854875	0					
ANR	3855370	ExpressionStatement	internal_function -> required_num_args = info -> required_num_args	2178:4:61312:61374	3854875	0	True				
ANR	3855371	AssignmentExpression	internal_function -> required_num_args = info -> required_num_args		3854875	0		=			
ANR	3855372	PtrMemberAccess	internal_function -> required_num_args		3854875	0					
ANR	3855373	Identifier	internal_function		3854875	0					
ANR	3855374	Identifier	required_num_args		3854875	1					
ANR	3855375	PtrMemberAccess	info -> required_num_args		3854875	1					
ANR	3855376	Identifier	info		3854875	0					
ANR	3855377	Identifier	required_num_args		3854875	1					
ANR	3855378	IfStatement	if ( info -> return_reference )		3854875	4					
ANR	3855379	Condition	info -> return_reference	2180:7:61388:61409	3854875	0	True				
ANR	3855380	PtrMemberAccess	info -> return_reference		3854875	0					
ANR	3855381	Identifier	info		3854875	0					
ANR	3855382	Identifier	return_reference		3854875	1					
ANR	3855383	CompoundStatement		67:31:2688:2688	3854875	1					
ANR	3855384	ExpressionStatement	internal_function -> fn_flags |= ZEND_ACC_RETURN_REFERENCE	2181:4:61418:61474	3854875	0	True				
ANR	3855385	AssignmentExpression	internal_function -> fn_flags |= ZEND_ACC_RETURN_REFERENCE		3854875	0		|=			
ANR	3855386	PtrMemberAccess	internal_function -> fn_flags		3854875	0					
ANR	3855387	Identifier	internal_function		3854875	0					
ANR	3855388	Identifier	fn_flags		3854875	1					
ANR	3855389	Identifier	ZEND_ACC_RETURN_REFERENCE		3854875	1					
ANR	3855390	IfStatement	if ( ptr -> arg_info [ ptr -> num_args ] . is_variadic )		3854875	5					
ANR	3855391	Condition	ptr -> arg_info [ ptr -> num_args ] . is_variadic	2183:7:61488:61527	3854875	0	True				
ANR	3855392	MemberAccess	ptr -> arg_info [ ptr -> num_args ] . is_variadic		3854875	0					
ANR	3855393	ArrayIndexing	ptr -> arg_info [ ptr -> num_args ]		3854875	0					
ANR	3855394	PtrMemberAccess	ptr -> arg_info		3854875	0					
ANR	3855395	Identifier	ptr		3854875	0					
ANR	3855396	Identifier	arg_info		3854875	1					
ANR	3855397	PtrMemberAccess	ptr -> num_args		3854875	1					
ANR	3855398	Identifier	ptr		3854875	0					
ANR	3855399	Identifier	num_args		3854875	1					
ANR	3855400	Identifier	is_variadic		3854875	1					
ANR	3855401	CompoundStatement		70:49:2806:2806	3854875	1					
ANR	3855402	ExpressionStatement	internal_function -> fn_flags |= ZEND_ACC_VARIADIC	2184:4:61536:61584	3854875	0	True				
ANR	3855403	AssignmentExpression	internal_function -> fn_flags |= ZEND_ACC_VARIADIC		3854875	0		|=			
ANR	3855404	PtrMemberAccess	internal_function -> fn_flags		3854875	0					
ANR	3855405	Identifier	internal_function		3854875	0					
ANR	3855406	Identifier	fn_flags		3854875	1					
ANR	3855407	Identifier	ZEND_ACC_VARIADIC		3854875	1					
ANR	3855408	ExpressionStatement	internal_function -> num_args --	2186:4:61634:61663	3854875	1	True				
ANR	3855409	PostIncDecOperationExpression	internal_function -> num_args --		3854875	0					
ANR	3855410	PtrMemberAccess	internal_function -> num_args		3854875	0					
ANR	3855411	Identifier	internal_function		3854875	0					
ANR	3855412	Identifier	num_args		3854875	1					
ANR	3855413	IncDec	--		3854875	1					
ANR	3855414	IfStatement	if ( info -> type_hint )		3854875	6					
ANR	3855415	Condition	info -> type_hint	2188:7:61677:61691	3854875	0	True				
ANR	3855416	PtrMemberAccess	info -> type_hint		3854875	0					
ANR	3855417	Identifier	info		3854875	0					
ANR	3855418	Identifier	type_hint		3854875	1					
ANR	3855419	CompoundStatement		75:24:2970:2970	3854875	1					
ANR	3855420	IfStatement	if ( info -> class_name )		3854875	0					
ANR	3855421	Condition	info -> class_name	2189:8:61704:61719	3854875	0	True				
ANR	3855422	PtrMemberAccess	info -> class_name		3854875	0					
ANR	3855423	Identifier	info		3854875	0					
ANR	3855424	Identifier	class_name		3854875	1					
ANR	3855425	CompoundStatement		76:26:2998:2998	3854875	1					
ANR	3855426	ExpressionStatement	ZEND_ASSERT ( info -> type_hint == IS_OBJECT )	2190:5:61729:61770	3854875	0	True				
ANR	3855427	CallExpression	ZEND_ASSERT ( info -> type_hint == IS_OBJECT )		3854875	0					
ANR	3855428	Callee	ZEND_ASSERT		3854875	0					
ANR	3855429	Identifier	ZEND_ASSERT		3854875	0					
ANR	3855430	ArgumentList	info -> type_hint == IS_OBJECT		3854875	1					
ANR	3855431	Argument	info -> type_hint == IS_OBJECT		3854875	0					
ANR	3855432	EqualityExpression	info -> type_hint == IS_OBJECT		3854875	0		==			
ANR	3855433	PtrMemberAccess	info -> type_hint		3854875	0					
ANR	3855434	Identifier	info		3854875	0					
ANR	3855435	Identifier	type_hint		3854875	1					
ANR	3855436	Identifier	IS_OBJECT		3854875	1					
ANR	3855437	IfStatement	"if ( ! scope && ( ! strcasecmp ( info -> class_name , ""self"" ) || ! strcasecmp ( info -> class_name , ""parent"" ) ) )"		3854875	1					
ANR	3855438	Condition	"! scope && ( ! strcasecmp ( info -> class_name , ""self"" ) || ! strcasecmp ( info -> class_name , ""parent"" ) )"	2191:9:61781:61872	3854875	0	True				
ANR	3855439	AndExpression	"! scope && ( ! strcasecmp ( info -> class_name , ""self"" ) || ! strcasecmp ( info -> class_name , ""parent"" ) )"		3854875	0		&&			
ANR	3855440	UnaryOperationExpression	! scope		3854875	0					
ANR	3855441	UnaryOperator	!		3854875	0					
ANR	3855442	Identifier	scope		3854875	1					
ANR	3855443	OrExpression	"! strcasecmp ( info -> class_name , ""self"" ) || ! strcasecmp ( info -> class_name , ""parent"" )"		3854875	1		||			
ANR	3855444	UnaryOperationExpression	"! strcasecmp ( info -> class_name , ""self"" )"		3854875	0					
ANR	3855445	UnaryOperator	!		3854875	0					
ANR	3855446	CallExpression	"strcasecmp ( info -> class_name , ""self"" )"		3854875	1					
ANR	3855447	Callee	strcasecmp		3854875	0					
ANR	3855448	Identifier	strcasecmp		3854875	0					
ANR	3855449	ArgumentList	info -> class_name		3854875	1					
ANR	3855450	Argument	info -> class_name		3854875	0					
ANR	3855451	PtrMemberAccess	info -> class_name		3854875	0					
ANR	3855452	Identifier	info		3854875	0					
ANR	3855453	Identifier	class_name		3854875	1					
ANR	3855454	Argument	"""self"""		3854875	1					
ANR	3855455	PrimaryExpression	"""self"""		3854875	0					
ANR	3855456	UnaryOperationExpression	"! strcasecmp ( info -> class_name , ""parent"" )"		3854875	1					
ANR	3855457	UnaryOperator	!		3854875	0					
ANR	3855458	CallExpression	"strcasecmp ( info -> class_name , ""parent"" )"		3854875	1					
ANR	3855459	Callee	strcasecmp		3854875	0					
ANR	3855460	Identifier	strcasecmp		3854875	0					
ANR	3855461	ArgumentList	info -> class_name		3854875	1					
ANR	3855462	Argument	info -> class_name		3854875	0					
ANR	3855463	PtrMemberAccess	info -> class_name		3854875	0					
ANR	3855464	Identifier	info		3854875	0					
ANR	3855465	Identifier	class_name		3854875	1					
ANR	3855466	Argument	"""parent"""		3854875	1					
ANR	3855467	PrimaryExpression	"""parent"""		3854875	0					
ANR	3855468	CompoundStatement		78:103:3151:3151	3854875	1					
ANR	3855469	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Cannot declare a return type of %s outside of a class scope"" , info -> class_name )"	2192:6:61883:61997	3854875	0	True				
ANR	3855470	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Cannot declare a return type of %s outside of a class scope"" , info -> class_name )"		3854875	0					
ANR	3855471	Callee	zend_error_noreturn		3854875	0					
ANR	3855472	Identifier	zend_error_noreturn		3854875	0					
ANR	3855473	ArgumentList	E_CORE_ERROR		3854875	1					
ANR	3855474	Argument	E_CORE_ERROR		3854875	0					
ANR	3855475	Identifier	E_CORE_ERROR		3854875	0					
ANR	3855476	Argument	"""Cannot declare a return type of %s outside of a class scope"""		3854875	1					
ANR	3855477	PrimaryExpression	"""Cannot declare a return type of %s outside of a class scope"""		3854875	0					
ANR	3855478	Argument	info -> class_name		3854875	2					
ANR	3855479	PtrMemberAccess	info -> class_name		3854875	0					
ANR	3855480	Identifier	info		3854875	0					
ANR	3855481	Identifier	class_name		3854875	1					
ANR	3855482	ExpressionStatement	internal_function -> fn_flags |= ZEND_ACC_HAS_RETURN_TYPE	2196:4:62017:62072	3854875	1	True				
ANR	3855483	AssignmentExpression	internal_function -> fn_flags |= ZEND_ACC_HAS_RETURN_TYPE		3854875	0		|=			
ANR	3855484	PtrMemberAccess	internal_function -> fn_flags		3854875	0					
ANR	3855485	Identifier	internal_function		3854875	0					
ANR	3855486	Identifier	fn_flags		3854875	1					
ANR	3855487	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3854875	1					
ANR	3855488	ElseStatement	else		3854875	0					
ANR	3855489	CompoundStatement		85:9:3364:3364	3854875	0					
ANR	3855490	ExpressionStatement	internal_function -> arg_info = NULL	2199:3:62093:62127	3854875	0	True				
ANR	3855491	AssignmentExpression	internal_function -> arg_info = NULL		3854875	0		=			
ANR	3855492	PtrMemberAccess	internal_function -> arg_info		3854875	0					
ANR	3855493	Identifier	internal_function		3854875	0					
ANR	3855494	Identifier	arg_info		3854875	1					
ANR	3855495	Identifier	NULL		3854875	1					
ANR	3855496	ExpressionStatement	internal_function -> num_args = 0	2200:3:62132:62163	3854875	1	True				
ANR	3855497	AssignmentExpression	internal_function -> num_args = 0		3854875	0		=			
ANR	3855498	PtrMemberAccess	internal_function -> num_args		3854875	0					
ANR	3855499	Identifier	internal_function		3854875	0					
ANR	3855500	Identifier	num_args		3854875	1					
ANR	3855501	PrimaryExpression	0		3854875	1					
ANR	3855502	ExpressionStatement	internal_function -> required_num_args = 0	2201:3:62168:62208	3854875	2	True				
ANR	3855503	AssignmentExpression	internal_function -> required_num_args = 0		3854875	0		=			
ANR	3855504	PtrMemberAccess	internal_function -> required_num_args		3854875	0					
ANR	3855505	Identifier	internal_function		3854875	0					
ANR	3855506	Identifier	required_num_args		3854875	1					
ANR	3855507	PrimaryExpression	0		3854875	1					
ANR	3855508	ExpressionStatement	zend_set_function_arg_flags ( ( zend_function * ) internal_function )	2203:2:62216:62278	3854875	7	True				
ANR	3855509	CallExpression	zend_set_function_arg_flags ( ( zend_function * ) internal_function )		3854875	0					
ANR	3855510	Callee	zend_set_function_arg_flags		3854875	0					
ANR	3855511	Identifier	zend_set_function_arg_flags		3854875	0					
ANR	3855512	ArgumentList	( zend_function * ) internal_function		3854875	1					
ANR	3855513	Argument	( zend_function * ) internal_function		3854875	0					
ANR	3855514	CastExpression	( zend_function * ) internal_function		3854875	0					
ANR	3855515	CastTarget	zend_function *		3854875	0					
ANR	3855516	Identifier	internal_function		3854875	1					
ANR	3855517	IfStatement	if ( ptr -> flags & ZEND_ACC_ABSTRACT )		3854875	8					
ANR	3855518	Condition	ptr -> flags & ZEND_ACC_ABSTRACT	2204:6:62286:62315	3854875	0	True				
ANR	3855519	BitAndExpression	ptr -> flags & ZEND_ACC_ABSTRACT		3854875	0		&			
ANR	3855520	PtrMemberAccess	ptr -> flags		3854875	0					
ANR	3855521	Identifier	ptr		3854875	0					
ANR	3855522	Identifier	flags		3854875	1					
ANR	3855523	Identifier	ZEND_ACC_ABSTRACT		3854875	1					
ANR	3855524	CompoundStatement		91:38:3594:3594	3854875	1					
ANR	3855525	IfStatement	if ( scope )		3854875	0					
ANR	3855526	Condition	scope	2205:7:62327:62331	3854875	0	True				
ANR	3855527	Identifier	scope		3854875	0					
ANR	3855528	CompoundStatement		92:14:3610:3610	3854875	1					
ANR	3855529	ExpressionStatement	scope -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	2207:4:62424:62475	3854875	0	True				
ANR	3855530	AssignmentExpression	scope -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		3854875	0		|=			
ANR	3855531	PtrMemberAccess	scope -> ce_flags		3854875	0					
ANR	3855532	Identifier	scope		3854875	0					
ANR	3855533	Identifier	ce_flags		3854875	1					
ANR	3855534	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		3854875	1					
ANR	3855535	IfStatement	if ( ! ( scope -> ce_flags & ZEND_ACC_INTERFACE ) )		3854875	1					
ANR	3855536	Condition	! ( scope -> ce_flags & ZEND_ACC_INTERFACE )	2208:8:62485:62523	3854875	0	True				
ANR	3855537	UnaryOperationExpression	! ( scope -> ce_flags & ZEND_ACC_INTERFACE )		3854875	0					
ANR	3855538	UnaryOperator	!		3854875	0					
ANR	3855539	BitAndExpression	scope -> ce_flags & ZEND_ACC_INTERFACE		3854875	1		&			
ANR	3855540	PtrMemberAccess	scope -> ce_flags		3854875	0					
ANR	3855541	Identifier	scope		3854875	0					
ANR	3855542	Identifier	ce_flags		3854875	1					
ANR	3855543	Identifier	ZEND_ACC_INTERFACE		3854875	1					
ANR	3855544	CompoundStatement		95:49:3802:3802	3854875	1					
ANR	3855545	ExpressionStatement	scope -> ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS	2212:5:62781:62832	3854875	0	True				
ANR	3855546	AssignmentExpression	scope -> ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3854875	0		|=			
ANR	3855547	PtrMemberAccess	scope -> ce_flags		3854875	0					
ANR	3855548	Identifier	scope		3854875	0					
ANR	3855549	Identifier	ce_flags		3854875	1					
ANR	3855550	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3854875	1					
ANR	3855551	IfStatement	if ( ptr -> flags & ZEND_ACC_STATIC && ( ! scope || ! ( scope -> ce_flags & ZEND_ACC_INTERFACE ) ) )		3854875	1					
ANR	3855552	Condition	ptr -> flags & ZEND_ACC_STATIC && ( ! scope || ! ( scope -> ce_flags & ZEND_ACC_INTERFACE ) )	2215:7:62852:62934	3854875	0	True				
ANR	3855553	AndExpression	ptr -> flags & ZEND_ACC_STATIC && ( ! scope || ! ( scope -> ce_flags & ZEND_ACC_INTERFACE ) )		3854875	0		&&			
ANR	3855554	BitAndExpression	ptr -> flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3855555	PtrMemberAccess	ptr -> flags		3854875	0					
ANR	3855556	Identifier	ptr		3854875	0					
ANR	3855557	Identifier	flags		3854875	1					
ANR	3855558	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3855559	OrExpression	! scope || ! ( scope -> ce_flags & ZEND_ACC_INTERFACE )		3854875	1		||			
ANR	3855560	UnaryOperationExpression	! scope		3854875	0					
ANR	3855561	UnaryOperator	!		3854875	0					
ANR	3855562	Identifier	scope		3854875	1					
ANR	3855563	UnaryOperationExpression	! ( scope -> ce_flags & ZEND_ACC_INTERFACE )		3854875	1					
ANR	3855564	UnaryOperator	!		3854875	0					
ANR	3855565	BitAndExpression	scope -> ce_flags & ZEND_ACC_INTERFACE		3854875	1		&			
ANR	3855566	PtrMemberAccess	scope -> ce_flags		3854875	0					
ANR	3855567	Identifier	scope		3854875	0					
ANR	3855568	Identifier	ce_flags		3854875	1					
ANR	3855569	Identifier	ZEND_ACC_INTERFACE		3854875	1					
ANR	3855570	CompoundStatement		102:92:4213:4213	3854875	1					
ANR	3855571	ExpressionStatement	"zend_error ( error_type , ""Static function %s%s%s() cannot be abstract"" , scope ? ZSTR_VAL ( scope -> name ) : """" , scope ? ""::"" : """" , ptr -> fname )"	2216:4:62943:63079	3854875	0	True				
ANR	3855572	CallExpression	"zend_error ( error_type , ""Static function %s%s%s() cannot be abstract"" , scope ? ZSTR_VAL ( scope -> name ) : """" , scope ? ""::"" : """" , ptr -> fname )"		3854875	0					
ANR	3855573	Callee	zend_error		3854875	0					
ANR	3855574	Identifier	zend_error		3854875	0					
ANR	3855575	ArgumentList	error_type		3854875	1					
ANR	3855576	Argument	error_type		3854875	0					
ANR	3855577	Identifier	error_type		3854875	0					
ANR	3855578	Argument	"""Static function %s%s%s() cannot be abstract"""		3854875	1					
ANR	3855579	PrimaryExpression	"""Static function %s%s%s() cannot be abstract"""		3854875	0					
ANR	3855580	Argument	"scope ? ZSTR_VAL ( scope -> name ) : """""		3854875	2					
ANR	3855581	ConditionalExpression	"scope ? ZSTR_VAL ( scope -> name ) : """""		3854875	0					
ANR	3855582	Condition	scope		3854875	0					
ANR	3855583	Identifier	scope		3854875	0					
ANR	3855584	CallExpression	ZSTR_VAL ( scope -> name )		3854875	1					
ANR	3855585	Callee	ZSTR_VAL		3854875	0					
ANR	3855586	Identifier	ZSTR_VAL		3854875	0					
ANR	3855587	ArgumentList	scope -> name		3854875	1					
ANR	3855588	Argument	scope -> name		3854875	0					
ANR	3855589	PtrMemberAccess	scope -> name		3854875	0					
ANR	3855590	Identifier	scope		3854875	0					
ANR	3855591	Identifier	name		3854875	1					
ANR	3855592	PrimaryExpression	""""""		3854875	2					
ANR	3855593	Argument	"scope ? ""::"" : """""		3854875	3					
ANR	3855594	ConditionalExpression	"scope ? ""::"" : """""		3854875	0					
ANR	3855595	Condition	scope		3854875	0					
ANR	3855596	Identifier	scope		3854875	0					
ANR	3855597	PrimaryExpression	"""::"""		3854875	1					
ANR	3855598	PrimaryExpression	""""""		3854875	2					
ANR	3855599	Argument	ptr -> fname		3854875	4					
ANR	3855600	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3855601	Identifier	ptr		3854875	0					
ANR	3855602	Identifier	fname		3854875	1					
ANR	3855603	ElseStatement	else		3854875	0					
ANR	3855604	CompoundStatement		105:9:4371:4371	3854875	0					
ANR	3855605	IfStatement	if ( scope && ( scope -> ce_flags & ZEND_ACC_INTERFACE ) )		3854875	0					
ANR	3855606	Condition	scope && ( scope -> ce_flags & ZEND_ACC_INTERFACE )	2219:7:63104:63150	3854875	0	True				
ANR	3855607	AndExpression	scope && ( scope -> ce_flags & ZEND_ACC_INTERFACE )		3854875	0		&&			
ANR	3855608	Identifier	scope		3854875	0					
ANR	3855609	BitAndExpression	scope -> ce_flags & ZEND_ACC_INTERFACE		3854875	1		&			
ANR	3855610	PtrMemberAccess	scope -> ce_flags		3854875	0					
ANR	3855611	Identifier	scope		3854875	0					
ANR	3855612	Identifier	ce_flags		3854875	1					
ANR	3855613	Identifier	ZEND_ACC_INTERFACE		3854875	1					
ANR	3855614	CompoundStatement		106:56:4429:4429	3854875	1					
ANR	3855615	ExpressionStatement	efree ( ( char * ) lc_class_name )	2220:4:63159:63186	3854875	0	True				
ANR	3855616	CallExpression	efree ( ( char * ) lc_class_name )		3854875	0					
ANR	3855617	Callee	efree		3854875	0					
ANR	3855618	Identifier	efree		3854875	0					
ANR	3855619	ArgumentList	( char * ) lc_class_name		3854875	1					
ANR	3855620	Argument	( char * ) lc_class_name		3854875	0					
ANR	3855621	CastExpression	( char * ) lc_class_name		3854875	0					
ANR	3855622	CastTarget	char *		3854875	0					
ANR	3855623	Identifier	lc_class_name		3854875	1					
ANR	3855624	ExpressionStatement	"zend_error ( error_type , ""Interface %s cannot contain non abstract method %s()"" , ZSTR_VAL ( scope -> name ) , ptr -> fname )"	2221:4:63192:63305	3854875	1	True				
ANR	3855625	CallExpression	"zend_error ( error_type , ""Interface %s cannot contain non abstract method %s()"" , ZSTR_VAL ( scope -> name ) , ptr -> fname )"		3854875	0					
ANR	3855626	Callee	zend_error		3854875	0					
ANR	3855627	Identifier	zend_error		3854875	0					
ANR	3855628	ArgumentList	error_type		3854875	1					
ANR	3855629	Argument	error_type		3854875	0					
ANR	3855630	Identifier	error_type		3854875	0					
ANR	3855631	Argument	"""Interface %s cannot contain non abstract method %s()"""		3854875	1					
ANR	3855632	PrimaryExpression	"""Interface %s cannot contain non abstract method %s()"""		3854875	0					
ANR	3855633	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3855634	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3855635	Callee	ZSTR_VAL		3854875	0					
ANR	3855636	Identifier	ZSTR_VAL		3854875	0					
ANR	3855637	ArgumentList	scope -> name		3854875	1					
ANR	3855638	Argument	scope -> name		3854875	0					
ANR	3855639	PtrMemberAccess	scope -> name		3854875	0					
ANR	3855640	Identifier	scope		3854875	0					
ANR	3855641	Identifier	name		3854875	1					
ANR	3855642	Argument	ptr -> fname		3854875	3					
ANR	3855643	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3855644	Identifier	ptr		3854875	0					
ANR	3855645	Identifier	fname		3854875	1					
ANR	3855646	ReturnStatement	return FAILURE ;	2222:4:63311:63325	3854875	2	True				
ANR	3855647	Identifier	FAILURE		3854875	0					
ANR	3855648	IfStatement	if ( ! internal_function -> handler )		3854875	1					
ANR	3855649	Condition	! internal_function -> handler	2224:7:63339:63365	3854875	0	True				
ANR	3855650	UnaryOperationExpression	! internal_function -> handler		3854875	0					
ANR	3855651	UnaryOperator	!		3854875	0					
ANR	3855652	PtrMemberAccess	internal_function -> handler		3854875	1					
ANR	3855653	Identifier	internal_function		3854875	0					
ANR	3855654	Identifier	handler		3854875	1					
ANR	3855655	CompoundStatement		111:36:4644:4644	3854875	1					
ANR	3855656	IfStatement	if ( scope )		3854875	0					
ANR	3855657	Condition	scope	2225:8:63378:63382	3854875	0	True				
ANR	3855658	Identifier	scope		3854875	0					
ANR	3855659	CompoundStatement		112:15:4661:4661	3854875	1					
ANR	3855660	ExpressionStatement	efree ( ( char * ) lc_class_name )	2226:5:63392:63419	3854875	0	True				
ANR	3855661	CallExpression	efree ( ( char * ) lc_class_name )		3854875	0					
ANR	3855662	Callee	efree		3854875	0					
ANR	3855663	Identifier	efree		3854875	0					
ANR	3855664	ArgumentList	( char * ) lc_class_name		3854875	1					
ANR	3855665	Argument	( char * ) lc_class_name		3854875	0					
ANR	3855666	CastExpression	( char * ) lc_class_name		3854875	0					
ANR	3855667	CastTarget	char *		3854875	0					
ANR	3855668	Identifier	lc_class_name		3854875	1					
ANR	3855669	ExpressionStatement	"zend_error ( error_type , ""Method %s%s%s() cannot be a NULL function"" , scope ? ZSTR_VAL ( scope -> name ) : """" , scope ? ""::"" : """" , ptr -> fname )"	2228:4:63431:63565	3854875	1	True				
ANR	3855670	CallExpression	"zend_error ( error_type , ""Method %s%s%s() cannot be a NULL function"" , scope ? ZSTR_VAL ( scope -> name ) : """" , scope ? ""::"" : """" , ptr -> fname )"		3854875	0					
ANR	3855671	Callee	zend_error		3854875	0					
ANR	3855672	Identifier	zend_error		3854875	0					
ANR	3855673	ArgumentList	error_type		3854875	1					
ANR	3855674	Argument	error_type		3854875	0					
ANR	3855675	Identifier	error_type		3854875	0					
ANR	3855676	Argument	"""Method %s%s%s() cannot be a NULL function"""		3854875	1					
ANR	3855677	PrimaryExpression	"""Method %s%s%s() cannot be a NULL function"""		3854875	0					
ANR	3855678	Argument	"scope ? ZSTR_VAL ( scope -> name ) : """""		3854875	2					
ANR	3855679	ConditionalExpression	"scope ? ZSTR_VAL ( scope -> name ) : """""		3854875	0					
ANR	3855680	Condition	scope		3854875	0					
ANR	3855681	Identifier	scope		3854875	0					
ANR	3855682	CallExpression	ZSTR_VAL ( scope -> name )		3854875	1					
ANR	3855683	Callee	ZSTR_VAL		3854875	0					
ANR	3855684	Identifier	ZSTR_VAL		3854875	0					
ANR	3855685	ArgumentList	scope -> name		3854875	1					
ANR	3855686	Argument	scope -> name		3854875	0					
ANR	3855687	PtrMemberAccess	scope -> name		3854875	0					
ANR	3855688	Identifier	scope		3854875	0					
ANR	3855689	Identifier	name		3854875	1					
ANR	3855690	PrimaryExpression	""""""		3854875	2					
ANR	3855691	Argument	"scope ? ""::"" : """""		3854875	3					
ANR	3855692	ConditionalExpression	"scope ? ""::"" : """""		3854875	0					
ANR	3855693	Condition	scope		3854875	0					
ANR	3855694	Identifier	scope		3854875	0					
ANR	3855695	PrimaryExpression	"""::"""		3854875	1					
ANR	3855696	PrimaryExpression	""""""		3854875	2					
ANR	3855697	Argument	ptr -> fname		3854875	4					
ANR	3855698	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3855699	Identifier	ptr		3854875	0					
ANR	3855700	Identifier	fname		3854875	1					
ANR	3855701	ExpressionStatement	"zend_unregister_functions ( functions , count , target_function_table )"	2229:4:63571:63637	3854875	2	True				
ANR	3855702	CallExpression	"zend_unregister_functions ( functions , count , target_function_table )"		3854875	0					
ANR	3855703	Callee	zend_unregister_functions		3854875	0					
ANR	3855704	Identifier	zend_unregister_functions		3854875	0					
ANR	3855705	ArgumentList	functions		3854875	1					
ANR	3855706	Argument	functions		3854875	0					
ANR	3855707	Identifier	functions		3854875	0					
ANR	3855708	Argument	count		3854875	1					
ANR	3855709	Identifier	count		3854875	0					
ANR	3855710	Argument	target_function_table		3854875	2					
ANR	3855711	Identifier	target_function_table		3854875	0					
ANR	3855712	ReturnStatement	return FAILURE ;	2230:4:63643:63657	3854875	3	True				
ANR	3855713	Identifier	FAILURE		3854875	0					
ANR	3855714	ExpressionStatement	"lowercase_name = zend_string_alloc ( fname_len , 1 )"	2233:2:63670:63718	3854875	9	True				
ANR	3855715	AssignmentExpression	"lowercase_name = zend_string_alloc ( fname_len , 1 )"		3854875	0		=			
ANR	3855716	Identifier	lowercase_name		3854875	0					
ANR	3855717	CallExpression	"zend_string_alloc ( fname_len , 1 )"		3854875	1					
ANR	3855718	Callee	zend_string_alloc		3854875	0					
ANR	3855719	Identifier	zend_string_alloc		3854875	0					
ANR	3855720	ArgumentList	fname_len		3854875	1					
ANR	3855721	Argument	fname_len		3854875	0					
ANR	3855722	Identifier	fname_len		3854875	0					
ANR	3855723	Argument	1		3854875	1					
ANR	3855724	PrimaryExpression	1		3854875	0					
ANR	3855725	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ptr -> fname , fname_len )"	2234:2:63722:63792	3854875	10	True				
ANR	3855726	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ptr -> fname , fname_len )"		3854875	0					
ANR	3855727	Callee	zend_str_tolower_copy		3854875	0					
ANR	3855728	Identifier	zend_str_tolower_copy		3854875	0					
ANR	3855729	ArgumentList	ZSTR_VAL ( lowercase_name )		3854875	1					
ANR	3855730	Argument	ZSTR_VAL ( lowercase_name )		3854875	0					
ANR	3855731	CallExpression	ZSTR_VAL ( lowercase_name )		3854875	0					
ANR	3855732	Callee	ZSTR_VAL		3854875	0					
ANR	3855733	Identifier	ZSTR_VAL		3854875	0					
ANR	3855734	ArgumentList	lowercase_name		3854875	1					
ANR	3855735	Argument	lowercase_name		3854875	0					
ANR	3855736	Identifier	lowercase_name		3854875	0					
ANR	3855737	Argument	ptr -> fname		3854875	1					
ANR	3855738	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3855739	Identifier	ptr		3854875	0					
ANR	3855740	Identifier	fname		3854875	1					
ANR	3855741	Argument	fname_len		3854875	2					
ANR	3855742	Identifier	fname_len		3854875	0					
ANR	3855743	ExpressionStatement	lowercase_name = zend_new_interned_string ( lowercase_name )	2235:2:63796:63853	3854875	11	True				
ANR	3855744	AssignmentExpression	lowercase_name = zend_new_interned_string ( lowercase_name )		3854875	0		=			
ANR	3855745	Identifier	lowercase_name		3854875	0					
ANR	3855746	CallExpression	zend_new_interned_string ( lowercase_name )		3854875	1					
ANR	3855747	Callee	zend_new_interned_string		3854875	0					
ANR	3855748	Identifier	zend_new_interned_string		3854875	0					
ANR	3855749	ArgumentList	lowercase_name		3854875	1					
ANR	3855750	Argument	lowercase_name		3854875	0					
ANR	3855751	Identifier	lowercase_name		3854875	0					
ANR	3855752	ExpressionStatement	reg_function = malloc ( sizeof ( zend_internal_function ) )	2236:2:63857:63910	3854875	12	True				
ANR	3855753	AssignmentExpression	reg_function = malloc ( sizeof ( zend_internal_function ) )		3854875	0		=			
ANR	3855754	Identifier	reg_function		3854875	0					
ANR	3855755	CallExpression	malloc ( sizeof ( zend_internal_function ) )		3854875	1					
ANR	3855756	Callee	malloc		3854875	0					
ANR	3855757	Identifier	malloc		3854875	0					
ANR	3855758	ArgumentList	sizeof ( zend_internal_function )		3854875	1					
ANR	3855759	Argument	sizeof ( zend_internal_function )		3854875	0					
ANR	3855760	SizeofExpression	sizeof ( zend_internal_function )		3854875	0					
ANR	3855761	Sizeof	sizeof		3854875	0					
ANR	3855762	SizeofOperand	zend_internal_function		3854875	1					
ANR	3855763	ExpressionStatement	"memcpy ( reg_function , & function , sizeof ( zend_internal_function ) )"	2237:2:63914:63977	3854875	13	True				
ANR	3855764	CallExpression	"memcpy ( reg_function , & function , sizeof ( zend_internal_function ) )"		3854875	0					
ANR	3855765	Callee	memcpy		3854875	0					
ANR	3855766	Identifier	memcpy		3854875	0					
ANR	3855767	ArgumentList	reg_function		3854875	1					
ANR	3855768	Argument	reg_function		3854875	0					
ANR	3855769	Identifier	reg_function		3854875	0					
ANR	3855770	Argument	& function		3854875	1					
ANR	3855771	UnaryOperationExpression	& function		3854875	0					
ANR	3855772	UnaryOperator	&		3854875	0					
ANR	3855773	Identifier	function		3854875	1					
ANR	3855774	Argument	sizeof ( zend_internal_function )		3854875	2					
ANR	3855775	SizeofExpression	sizeof ( zend_internal_function )		3854875	0					
ANR	3855776	Sizeof	sizeof		3854875	0					
ANR	3855777	SizeofOperand	zend_internal_function		3854875	1					
ANR	3855778	IfStatement	"if ( zend_hash_add_ptr ( target_function_table , lowercase_name , reg_function ) == NULL )"		3854875	14					
ANR	3855779	Condition	"zend_hash_add_ptr ( target_function_table , lowercase_name , reg_function ) == NULL"	2238:6:63985:64062	3854875	0	True				
ANR	3855780	EqualityExpression	"zend_hash_add_ptr ( target_function_table , lowercase_name , reg_function ) == NULL"		3854875	0		==			
ANR	3855781	CallExpression	"zend_hash_add_ptr ( target_function_table , lowercase_name , reg_function )"		3854875	0					
ANR	3855782	Callee	zend_hash_add_ptr		3854875	0					
ANR	3855783	Identifier	zend_hash_add_ptr		3854875	0					
ANR	3855784	ArgumentList	target_function_table		3854875	1					
ANR	3855785	Argument	target_function_table		3854875	0					
ANR	3855786	Identifier	target_function_table		3854875	0					
ANR	3855787	Argument	lowercase_name		3854875	1					
ANR	3855788	Identifier	lowercase_name		3854875	0					
ANR	3855789	Argument	reg_function		3854875	2					
ANR	3855790	Identifier	reg_function		3854875	0					
ANR	3855791	Identifier	NULL		3854875	1					
ANR	3855792	CompoundStatement		125:86:5341:5341	3854875	1					
ANR	3855793	ExpressionStatement	unload = 1	2239:3:64070:64078	3854875	0	True				
ANR	3855794	AssignmentExpression	unload = 1		3854875	0		=			
ANR	3855795	Identifier	unload		3854875	0					
ANR	3855796	PrimaryExpression	1		3854875	1					
ANR	3855797	ExpressionStatement	free ( reg_function )	2240:3:64083:64101	3854875	1	True				
ANR	3855798	CallExpression	free ( reg_function )		3854875	0					
ANR	3855799	Callee	free		3854875	0					
ANR	3855800	Identifier	free		3854875	0					
ANR	3855801	ArgumentList	reg_function		3854875	1					
ANR	3855802	Argument	reg_function		3854875	0					
ANR	3855803	Identifier	reg_function		3854875	0					
ANR	3855804	ExpressionStatement	zend_string_release ( lowercase_name )	2241:3:64106:64141	3854875	2	True				
ANR	3855805	CallExpression	zend_string_release ( lowercase_name )		3854875	0					
ANR	3855806	Callee	zend_string_release		3854875	0					
ANR	3855807	Identifier	zend_string_release		3854875	0					
ANR	3855808	ArgumentList	lowercase_name		3854875	1					
ANR	3855809	Argument	lowercase_name		3854875	0					
ANR	3855810	Identifier	lowercase_name		3854875	0					
ANR	3855811	BreakStatement	break ;	2242:3:64146:64151	3854875	3	True				
ANR	3855812	IfStatement	if ( reg_function -> common . arg_info && reg_function -> common . num_args )		3854875	15					
ANR	3855813	Condition	reg_function -> common . arg_info && reg_function -> common . num_args	2246:6:64213:64274	3854875	0	True				
ANR	3855814	AndExpression	reg_function -> common . arg_info && reg_function -> common . num_args		3854875	0		&&			
ANR	3855815	MemberAccess	reg_function -> common . arg_info		3854875	0					
ANR	3855816	PtrMemberAccess	reg_function -> common		3854875	0					
ANR	3855817	Identifier	reg_function		3854875	0					
ANR	3855818	Identifier	common		3854875	1					
ANR	3855819	Identifier	arg_info		3854875	1					
ANR	3855820	MemberAccess	reg_function -> common . num_args		3854875	1					
ANR	3855821	PtrMemberAccess	reg_function -> common		3854875	0					
ANR	3855822	Identifier	reg_function		3854875	0					
ANR	3855823	Identifier	common		3854875	1					
ANR	3855824	Identifier	num_args		3854875	1					
ANR	3855825	CompoundStatement		134:3:5558:5568	3854875	1					
ANR	3855826	IdentifierDeclStatement	uint32_t i ;	2247:3:64282:64292	3854875	0	True				
ANR	3855827	IdentifierDecl	i		3854875	0					
ANR	3855828	IdentifierDeclType	uint32_t		3854875	0					
ANR	3855829	Identifier	i		3854875	1					
ANR	3855830	ForStatement	for ( i = 0 ; i < reg_function -> common . num_args ; i ++ )		3854875	1					
ANR	3855831	ForInit	i = 0 ;	2248:8:64302:64307	3854875	0	True				
ANR	3855832	AssignmentExpression	i = 0		3854875	0		=			
ANR	3855833	Identifier	i		3854875	0					
ANR	3855834	PrimaryExpression	0		3854875	1					
ANR	3855835	Condition	i < reg_function -> common . num_args	2248:15:64309:64341	3854875	1	True				
ANR	3855836	RelationalExpression	i < reg_function -> common . num_args		3854875	0		<			
ANR	3855837	Identifier	i		3854875	0					
ANR	3855838	MemberAccess	reg_function -> common . num_args		3854875	1					
ANR	3855839	PtrMemberAccess	reg_function -> common		3854875	0					
ANR	3855840	Identifier	reg_function		3854875	0					
ANR	3855841	Identifier	common		3854875	1					
ANR	3855842	Identifier	num_args		3854875	1					
ANR	3855843	PostIncDecOperationExpression	i ++	2248:50:64344:64346	3854875	2	True				
ANR	3855844	Identifier	i		3854875	0					
ANR	3855845	IncDec	++		3854875	1					
ANR	3855846	CompoundStatement		135:55:5625:5625	3854875	3					
ANR	3855847	IfStatement	if ( reg_function -> common . arg_info [ i ] . class_name || reg_function -> common . arg_info [ i ] . type_hint )		3854875	0					
ANR	3855848	Condition	reg_function -> common . arg_info [ i ] . class_name || reg_function -> common . arg_info [ i ] . type_hint	2249:8:64359:64455	3854875	0	True				
ANR	3855849	OrExpression	reg_function -> common . arg_info [ i ] . class_name || reg_function -> common . arg_info [ i ] . type_hint		3854875	0		||			
ANR	3855850	MemberAccess	reg_function -> common . arg_info [ i ] . class_name		3854875	0					
ANR	3855851	ArrayIndexing	reg_function -> common . arg_info [ i ]		3854875	0					
ANR	3855852	MemberAccess	reg_function -> common . arg_info		3854875	0					
ANR	3855853	PtrMemberAccess	reg_function -> common		3854875	0					
ANR	3855854	Identifier	reg_function		3854875	0					
ANR	3855855	Identifier	common		3854875	1					
ANR	3855856	Identifier	arg_info		3854875	1					
ANR	3855857	Identifier	i		3854875	1					
ANR	3855858	Identifier	class_name		3854875	1					
ANR	3855859	MemberAccess	reg_function -> common . arg_info [ i ] . type_hint		3854875	1					
ANR	3855860	ArrayIndexing	reg_function -> common . arg_info [ i ]		3854875	0					
ANR	3855861	MemberAccess	reg_function -> common . arg_info		3854875	0					
ANR	3855862	PtrMemberAccess	reg_function -> common		3854875	0					
ANR	3855863	Identifier	reg_function		3854875	0					
ANR	3855864	Identifier	common		3854875	1					
ANR	3855865	Identifier	arg_info		3854875	1					
ANR	3855866	Identifier	i		3854875	1					
ANR	3855867	Identifier	type_hint		3854875	1					
ANR	3855868	CompoundStatement		137:52:5734:5734	3854875	1					
ANR	3855869	ExpressionStatement	reg_function -> common . fn_flags |= ZEND_ACC_HAS_TYPE_HINTS	2251:8:64468:64524	3854875	0	True				
ANR	3855870	AssignmentExpression	reg_function -> common . fn_flags |= ZEND_ACC_HAS_TYPE_HINTS		3854875	0		|=			
ANR	3855871	MemberAccess	reg_function -> common . fn_flags		3854875	0					
ANR	3855872	PtrMemberAccess	reg_function -> common		3854875	0					
ANR	3855873	Identifier	reg_function		3854875	0					
ANR	3855874	Identifier	common		3854875	1					
ANR	3855875	Identifier	fn_flags		3854875	1					
ANR	3855876	Identifier	ZEND_ACC_HAS_TYPE_HINTS		3854875	1					
ANR	3855877	BreakStatement	break ;	2252:5:64531:64536	3854875	1	True				
ANR	3855878	IfStatement	if ( scope )		3854875	16					
ANR	3855879	Condition	scope	2257:6:64560:64564	3854875	0	True				
ANR	3855880	Identifier	scope		3854875	0					
ANR	3855881	CompoundStatement		144:13:5843:5843	3854875	1					
ANR	3855882	IfStatement	"if ( ( fname_len == class_name_len ) && ! ctor && ! memcmp ( ZSTR_VAL ( lowercase_name ) , lc_class_name , class_name_len + 1 ) )"		3854875	0					
ANR	3855883	Condition	"( fname_len == class_name_len ) && ! ctor && ! memcmp ( ZSTR_VAL ( lowercase_name ) , lc_class_name , class_name_len + 1 )"	2262:7:64716:64823	3854875	0	True				
ANR	3855884	AndExpression	"( fname_len == class_name_len ) && ! ctor && ! memcmp ( ZSTR_VAL ( lowercase_name ) , lc_class_name , class_name_len + 1 )"		3854875	0		&&			
ANR	3855885	EqualityExpression	fname_len == class_name_len		3854875	0		==			
ANR	3855886	Identifier	fname_len		3854875	0					
ANR	3855887	Identifier	class_name_len		3854875	1					
ANR	3855888	AndExpression	"! ctor && ! memcmp ( ZSTR_VAL ( lowercase_name ) , lc_class_name , class_name_len + 1 )"		3854875	1		&&			
ANR	3855889	UnaryOperationExpression	! ctor		3854875	0					
ANR	3855890	UnaryOperator	!		3854875	0					
ANR	3855891	Identifier	ctor		3854875	1					
ANR	3855892	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( lowercase_name ) , lc_class_name , class_name_len + 1 )"		3854875	1					
ANR	3855893	UnaryOperator	!		3854875	0					
ANR	3855894	CallExpression	"memcmp ( ZSTR_VAL ( lowercase_name ) , lc_class_name , class_name_len + 1 )"		3854875	1					
ANR	3855895	Callee	memcmp		3854875	0					
ANR	3855896	Identifier	memcmp		3854875	0					
ANR	3855897	ArgumentList	ZSTR_VAL ( lowercase_name )		3854875	1					
ANR	3855898	Argument	ZSTR_VAL ( lowercase_name )		3854875	0					
ANR	3855899	CallExpression	ZSTR_VAL ( lowercase_name )		3854875	0					
ANR	3855900	Callee	ZSTR_VAL		3854875	0					
ANR	3855901	Identifier	ZSTR_VAL		3854875	0					
ANR	3855902	ArgumentList	lowercase_name		3854875	1					
ANR	3855903	Argument	lowercase_name		3854875	0					
ANR	3855904	Identifier	lowercase_name		3854875	0					
ANR	3855905	Argument	lc_class_name		3854875	1					
ANR	3855906	Identifier	lc_class_name		3854875	0					
ANR	3855907	Argument	class_name_len + 1		3854875	2					
ANR	3855908	AdditiveExpression	class_name_len + 1		3854875	0		+			
ANR	3855909	Identifier	class_name_len		3854875	0					
ANR	3855910	PrimaryExpression	1		3854875	1					
ANR	3855911	CompoundStatement		149:117:6102:6102	3854875	1					
ANR	3855912	ExpressionStatement	ctor = reg_function	2263:4:64832:64851	3854875	0	True				
ANR	3855913	AssignmentExpression	ctor = reg_function		3854875	0		=			
ANR	3855914	Identifier	ctor		3854875	0					
ANR	3855915	Identifier	reg_function		3854875	1					
ANR	3855916	ElseStatement	else		3854875	0					
ANR	3855917	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_CONSTRUCTOR_FUNC_NAME ) )"		3854875	0					
ANR	3855918	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_CONSTRUCTOR_FUNC_NAME )"	2264:14:64867:64936	3854875	0	True				
ANR	3855919	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_CONSTRUCTOR_FUNC_NAME )"		3854875	0					
ANR	3855920	Callee	zend_string_equals_literal		3854875	0					
ANR	3855921	Identifier	zend_string_equals_literal		3854875	0					
ANR	3855922	ArgumentList	lowercase_name		3854875	1					
ANR	3855923	Argument	lowercase_name		3854875	0					
ANR	3855924	Identifier	lowercase_name		3854875	0					
ANR	3855925	Argument	ZEND_CONSTRUCTOR_FUNC_NAME		3854875	1					
ANR	3855926	Identifier	ZEND_CONSTRUCTOR_FUNC_NAME		3854875	0					
ANR	3855927	CompoundStatement		151:86:6215:6215	3854875	1					
ANR	3855928	ExpressionStatement	ctor = reg_function	2265:4:64945:64964	3854875	0	True				
ANR	3855929	AssignmentExpression	ctor = reg_function		3854875	0		=			
ANR	3855930	Identifier	ctor		3854875	0					
ANR	3855931	Identifier	reg_function		3854875	1					
ANR	3855932	ElseStatement	else		3854875	0					
ANR	3855933	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_DESTRUCTOR_FUNC_NAME ) )"		3854875	0					
ANR	3855934	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_DESTRUCTOR_FUNC_NAME )"	2266:14:64980:65048	3854875	0	True				
ANR	3855935	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_DESTRUCTOR_FUNC_NAME )"		3854875	0					
ANR	3855936	Callee	zend_string_equals_literal		3854875	0					
ANR	3855937	Identifier	zend_string_equals_literal		3854875	0					
ANR	3855938	ArgumentList	lowercase_name		3854875	1					
ANR	3855939	Argument	lowercase_name		3854875	0					
ANR	3855940	Identifier	lowercase_name		3854875	0					
ANR	3855941	Argument	ZEND_DESTRUCTOR_FUNC_NAME		3854875	1					
ANR	3855942	Identifier	ZEND_DESTRUCTOR_FUNC_NAME		3854875	0					
ANR	3855943	CompoundStatement		153:85:6327:6327	3854875	1					
ANR	3855944	ExpressionStatement	dtor = reg_function	2267:4:65057:65076	3854875	0	True				
ANR	3855945	AssignmentExpression	dtor = reg_function		3854875	0		=			
ANR	3855946	Identifier	dtor		3854875	0					
ANR	3855947	Identifier	reg_function		3854875	1					
ANR	3855948	IfStatement	if ( internal_function -> num_args )		3854875	1					
ANR	3855949	Condition	internal_function -> num_args	2268:8:65086:65112	3854875	0	True				
ANR	3855950	PtrMemberAccess	internal_function -> num_args		3854875	0					
ANR	3855951	Identifier	internal_function		3854875	0					
ANR	3855952	Identifier	num_args		3854875	1					
ANR	3855953	CompoundStatement		155:37:6391:6391	3854875	1					
ANR	3855954	ExpressionStatement	"zend_error ( error_type , ""Destructor %s::%s() cannot take arguments"" , ZSTR_VAL ( scope -> name ) , ptr -> fname )"	2269:5:65122:65224	3854875	0	True				
ANR	3855955	CallExpression	"zend_error ( error_type , ""Destructor %s::%s() cannot take arguments"" , ZSTR_VAL ( scope -> name ) , ptr -> fname )"		3854875	0					
ANR	3855956	Callee	zend_error		3854875	0					
ANR	3855957	Identifier	zend_error		3854875	0					
ANR	3855958	ArgumentList	error_type		3854875	1					
ANR	3855959	Argument	error_type		3854875	0					
ANR	3855960	Identifier	error_type		3854875	0					
ANR	3855961	Argument	"""Destructor %s::%s() cannot take arguments"""		3854875	1					
ANR	3855962	PrimaryExpression	"""Destructor %s::%s() cannot take arguments"""		3854875	0					
ANR	3855963	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3855964	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3855965	Callee	ZSTR_VAL		3854875	0					
ANR	3855966	Identifier	ZSTR_VAL		3854875	0					
ANR	3855967	ArgumentList	scope -> name		3854875	1					
ANR	3855968	Argument	scope -> name		3854875	0					
ANR	3855969	PtrMemberAccess	scope -> name		3854875	0					
ANR	3855970	Identifier	scope		3854875	0					
ANR	3855971	Identifier	name		3854875	1					
ANR	3855972	Argument	ptr -> fname		3854875	3					
ANR	3855973	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3855974	Identifier	ptr		3854875	0					
ANR	3855975	Identifier	fname		3854875	1					
ANR	3855976	ElseStatement	else		3854875	0					
ANR	3855977	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_CLONE_FUNC_NAME ) )"		3854875	0					
ANR	3855978	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_CLONE_FUNC_NAME )"	2271:14:65246:65309	3854875	0	True				
ANR	3855979	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_CLONE_FUNC_NAME )"		3854875	0					
ANR	3855980	Callee	zend_string_equals_literal		3854875	0					
ANR	3855981	Identifier	zend_string_equals_literal		3854875	0					
ANR	3855982	ArgumentList	lowercase_name		3854875	1					
ANR	3855983	Argument	lowercase_name		3854875	0					
ANR	3855984	Identifier	lowercase_name		3854875	0					
ANR	3855985	Argument	ZEND_CLONE_FUNC_NAME		3854875	1					
ANR	3855986	Identifier	ZEND_CLONE_FUNC_NAME		3854875	0					
ANR	3855987	CompoundStatement		158:80:6588:6588	3854875	1					
ANR	3855988	ExpressionStatement	clone = reg_function	2272:4:65318:65338	3854875	0	True				
ANR	3855989	AssignmentExpression	clone = reg_function		3854875	0		=			
ANR	3855990	Identifier	clone		3854875	0					
ANR	3855991	Identifier	reg_function		3854875	1					
ANR	3855992	ElseStatement	else		3854875	0					
ANR	3855993	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_CALL_FUNC_NAME ) )"		3854875	0					
ANR	3855994	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_CALL_FUNC_NAME )"	2273:14:65354:65416	3854875	0	True				
ANR	3855995	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_CALL_FUNC_NAME )"		3854875	0					
ANR	3855996	Callee	zend_string_equals_literal		3854875	0					
ANR	3855997	Identifier	zend_string_equals_literal		3854875	0					
ANR	3855998	ArgumentList	lowercase_name		3854875	1					
ANR	3855999	Argument	lowercase_name		3854875	0					
ANR	3856000	Identifier	lowercase_name		3854875	0					
ANR	3856001	Argument	ZEND_CALL_FUNC_NAME		3854875	1					
ANR	3856002	Identifier	ZEND_CALL_FUNC_NAME		3854875	0					
ANR	3856003	CompoundStatement		160:79:6695:6695	3854875	1					
ANR	3856004	ExpressionStatement	__call = reg_function	2274:4:65425:65446	3854875	0	True				
ANR	3856005	AssignmentExpression	__call = reg_function		3854875	0		=			
ANR	3856006	Identifier	__call		3854875	0					
ANR	3856007	Identifier	reg_function		3854875	1					
ANR	3856008	ElseStatement	else		3854875	0					
ANR	3856009	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_CALLSTATIC_FUNC_NAME ) )"		3854875	0					
ANR	3856010	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_CALLSTATIC_FUNC_NAME )"	2275:14:65462:65530	3854875	0	True				
ANR	3856011	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_CALLSTATIC_FUNC_NAME )"		3854875	0					
ANR	3856012	Callee	zend_string_equals_literal		3854875	0					
ANR	3856013	Identifier	zend_string_equals_literal		3854875	0					
ANR	3856014	ArgumentList	lowercase_name		3854875	1					
ANR	3856015	Argument	lowercase_name		3854875	0					
ANR	3856016	Identifier	lowercase_name		3854875	0					
ANR	3856017	Argument	ZEND_CALLSTATIC_FUNC_NAME		3854875	1					
ANR	3856018	Identifier	ZEND_CALLSTATIC_FUNC_NAME		3854875	0					
ANR	3856019	CompoundStatement		162:85:6809:6809	3854875	1					
ANR	3856020	ExpressionStatement	__callstatic = reg_function	2276:4:65539:65566	3854875	0	True				
ANR	3856021	AssignmentExpression	__callstatic = reg_function		3854875	0		=			
ANR	3856022	Identifier	__callstatic		3854875	0					
ANR	3856023	Identifier	reg_function		3854875	1					
ANR	3856024	ElseStatement	else		3854875	0					
ANR	3856025	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_TOSTRING_FUNC_NAME ) )"		3854875	0					
ANR	3856026	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_TOSTRING_FUNC_NAME )"	2277:14:65582:65648	3854875	0	True				
ANR	3856027	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_TOSTRING_FUNC_NAME )"		3854875	0					
ANR	3856028	Callee	zend_string_equals_literal		3854875	0					
ANR	3856029	Identifier	zend_string_equals_literal		3854875	0					
ANR	3856030	ArgumentList	lowercase_name		3854875	1					
ANR	3856031	Argument	lowercase_name		3854875	0					
ANR	3856032	Identifier	lowercase_name		3854875	0					
ANR	3856033	Argument	ZEND_TOSTRING_FUNC_NAME		3854875	1					
ANR	3856034	Identifier	ZEND_TOSTRING_FUNC_NAME		3854875	0					
ANR	3856035	CompoundStatement		164:83:6927:6927	3854875	1					
ANR	3856036	ExpressionStatement	__tostring = reg_function	2278:4:65657:65682	3854875	0	True				
ANR	3856037	AssignmentExpression	__tostring = reg_function		3854875	0		=			
ANR	3856038	Identifier	__tostring		3854875	0					
ANR	3856039	Identifier	reg_function		3854875	1					
ANR	3856040	ElseStatement	else		3854875	0					
ANR	3856041	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_GET_FUNC_NAME ) )"		3854875	0					
ANR	3856042	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_GET_FUNC_NAME )"	2279:14:65698:65759	3854875	0	True				
ANR	3856043	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_GET_FUNC_NAME )"		3854875	0					
ANR	3856044	Callee	zend_string_equals_literal		3854875	0					
ANR	3856045	Identifier	zend_string_equals_literal		3854875	0					
ANR	3856046	ArgumentList	lowercase_name		3854875	1					
ANR	3856047	Argument	lowercase_name		3854875	0					
ANR	3856048	Identifier	lowercase_name		3854875	0					
ANR	3856049	Argument	ZEND_GET_FUNC_NAME		3854875	1					
ANR	3856050	Identifier	ZEND_GET_FUNC_NAME		3854875	0					
ANR	3856051	CompoundStatement		166:78:7038:7038	3854875	1					
ANR	3856052	ExpressionStatement	__get = reg_function	2280:4:65768:65788	3854875	0	True				
ANR	3856053	AssignmentExpression	__get = reg_function		3854875	0		=			
ANR	3856054	Identifier	__get		3854875	0					
ANR	3856055	Identifier	reg_function		3854875	1					
ANR	3856056	ExpressionStatement	scope -> ce_flags |= ZEND_ACC_USE_GUARDS	2281:4:65794:65832	3854875	1	True				
ANR	3856057	AssignmentExpression	scope -> ce_flags |= ZEND_ACC_USE_GUARDS		3854875	0		|=			
ANR	3856058	PtrMemberAccess	scope -> ce_flags		3854875	0					
ANR	3856059	Identifier	scope		3854875	0					
ANR	3856060	Identifier	ce_flags		3854875	1					
ANR	3856061	Identifier	ZEND_ACC_USE_GUARDS		3854875	1					
ANR	3856062	ElseStatement	else		3854875	0					
ANR	3856063	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_SET_FUNC_NAME ) )"		3854875	0					
ANR	3856064	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_SET_FUNC_NAME )"	2282:14:65848:65909	3854875	0	True				
ANR	3856065	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_SET_FUNC_NAME )"		3854875	0					
ANR	3856066	Callee	zend_string_equals_literal		3854875	0					
ANR	3856067	Identifier	zend_string_equals_literal		3854875	0					
ANR	3856068	ArgumentList	lowercase_name		3854875	1					
ANR	3856069	Argument	lowercase_name		3854875	0					
ANR	3856070	Identifier	lowercase_name		3854875	0					
ANR	3856071	Argument	ZEND_SET_FUNC_NAME		3854875	1					
ANR	3856072	Identifier	ZEND_SET_FUNC_NAME		3854875	0					
ANR	3856073	CompoundStatement		169:78:7188:7188	3854875	1					
ANR	3856074	ExpressionStatement	__set = reg_function	2283:4:65918:65938	3854875	0	True				
ANR	3856075	AssignmentExpression	__set = reg_function		3854875	0		=			
ANR	3856076	Identifier	__set		3854875	0					
ANR	3856077	Identifier	reg_function		3854875	1					
ANR	3856078	ExpressionStatement	scope -> ce_flags |= ZEND_ACC_USE_GUARDS	2284:4:65944:65982	3854875	1	True				
ANR	3856079	AssignmentExpression	scope -> ce_flags |= ZEND_ACC_USE_GUARDS		3854875	0		|=			
ANR	3856080	PtrMemberAccess	scope -> ce_flags		3854875	0					
ANR	3856081	Identifier	scope		3854875	0					
ANR	3856082	Identifier	ce_flags		3854875	1					
ANR	3856083	Identifier	ZEND_ACC_USE_GUARDS		3854875	1					
ANR	3856084	ElseStatement	else		3854875	0					
ANR	3856085	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_UNSET_FUNC_NAME ) )"		3854875	0					
ANR	3856086	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_UNSET_FUNC_NAME )"	2285:14:65998:66061	3854875	0	True				
ANR	3856087	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_UNSET_FUNC_NAME )"		3854875	0					
ANR	3856088	Callee	zend_string_equals_literal		3854875	0					
ANR	3856089	Identifier	zend_string_equals_literal		3854875	0					
ANR	3856090	ArgumentList	lowercase_name		3854875	1					
ANR	3856091	Argument	lowercase_name		3854875	0					
ANR	3856092	Identifier	lowercase_name		3854875	0					
ANR	3856093	Argument	ZEND_UNSET_FUNC_NAME		3854875	1					
ANR	3856094	Identifier	ZEND_UNSET_FUNC_NAME		3854875	0					
ANR	3856095	CompoundStatement		172:80:7340:7340	3854875	1					
ANR	3856096	ExpressionStatement	__unset = reg_function	2286:4:66070:66092	3854875	0	True				
ANR	3856097	AssignmentExpression	__unset = reg_function		3854875	0		=			
ANR	3856098	Identifier	__unset		3854875	0					
ANR	3856099	Identifier	reg_function		3854875	1					
ANR	3856100	ExpressionStatement	scope -> ce_flags |= ZEND_ACC_USE_GUARDS	2287:4:66098:66136	3854875	1	True				
ANR	3856101	AssignmentExpression	scope -> ce_flags |= ZEND_ACC_USE_GUARDS		3854875	0		|=			
ANR	3856102	PtrMemberAccess	scope -> ce_flags		3854875	0					
ANR	3856103	Identifier	scope		3854875	0					
ANR	3856104	Identifier	ce_flags		3854875	1					
ANR	3856105	Identifier	ZEND_ACC_USE_GUARDS		3854875	1					
ANR	3856106	ElseStatement	else		3854875	0					
ANR	3856107	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_ISSET_FUNC_NAME ) )"		3854875	0					
ANR	3856108	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_ISSET_FUNC_NAME )"	2288:14:66152:66215	3854875	0	True				
ANR	3856109	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_ISSET_FUNC_NAME )"		3854875	0					
ANR	3856110	Callee	zend_string_equals_literal		3854875	0					
ANR	3856111	Identifier	zend_string_equals_literal		3854875	0					
ANR	3856112	ArgumentList	lowercase_name		3854875	1					
ANR	3856113	Argument	lowercase_name		3854875	0					
ANR	3856114	Identifier	lowercase_name		3854875	0					
ANR	3856115	Argument	ZEND_ISSET_FUNC_NAME		3854875	1					
ANR	3856116	Identifier	ZEND_ISSET_FUNC_NAME		3854875	0					
ANR	3856117	CompoundStatement		175:80:7494:7494	3854875	1					
ANR	3856118	ExpressionStatement	__isset = reg_function	2289:4:66224:66246	3854875	0	True				
ANR	3856119	AssignmentExpression	__isset = reg_function		3854875	0		=			
ANR	3856120	Identifier	__isset		3854875	0					
ANR	3856121	Identifier	reg_function		3854875	1					
ANR	3856122	ExpressionStatement	scope -> ce_flags |= ZEND_ACC_USE_GUARDS	2290:4:66252:66290	3854875	1	True				
ANR	3856123	AssignmentExpression	scope -> ce_flags |= ZEND_ACC_USE_GUARDS		3854875	0		|=			
ANR	3856124	PtrMemberAccess	scope -> ce_flags		3854875	0					
ANR	3856125	Identifier	scope		3854875	0					
ANR	3856126	Identifier	ce_flags		3854875	1					
ANR	3856127	Identifier	ZEND_ACC_USE_GUARDS		3854875	1					
ANR	3856128	ElseStatement	else		3854875	0					
ANR	3856129	IfStatement	"if ( zend_string_equals_literal ( lowercase_name , ZEND_DEBUGINFO_FUNC_NAME ) )"		3854875	0					
ANR	3856130	Condition	"zend_string_equals_literal ( lowercase_name , ZEND_DEBUGINFO_FUNC_NAME )"	2291:14:66306:66373	3854875	0	True				
ANR	3856131	CallExpression	"zend_string_equals_literal ( lowercase_name , ZEND_DEBUGINFO_FUNC_NAME )"		3854875	0					
ANR	3856132	Callee	zend_string_equals_literal		3854875	0					
ANR	3856133	Identifier	zend_string_equals_literal		3854875	0					
ANR	3856134	ArgumentList	lowercase_name		3854875	1					
ANR	3856135	Argument	lowercase_name		3854875	0					
ANR	3856136	Identifier	lowercase_name		3854875	0					
ANR	3856137	Argument	ZEND_DEBUGINFO_FUNC_NAME		3854875	1					
ANR	3856138	Identifier	ZEND_DEBUGINFO_FUNC_NAME		3854875	0					
ANR	3856139	CompoundStatement		178:84:7652:7652	3854875	1					
ANR	3856140	ExpressionStatement	__debugInfo = reg_function	2292:4:66382:66408	3854875	0	True				
ANR	3856141	AssignmentExpression	__debugInfo = reg_function		3854875	0		=			
ANR	3856142	Identifier	__debugInfo		3854875	0					
ANR	3856143	Identifier	reg_function		3854875	1					
ANR	3856144	ElseStatement	else		3854875	0					
ANR	3856145	CompoundStatement		180:10:7696:7696	3854875	0					
ANR	3856146	ExpressionStatement	reg_function = NULL	2294:4:66426:66445	3854875	0	True				
ANR	3856147	AssignmentExpression	reg_function = NULL		3854875	0		=			
ANR	3856148	Identifier	reg_function		3854875	0					
ANR	3856149	Identifier	NULL		3854875	1					
ANR	3856150	IfStatement	if ( reg_function )		3854875	1					
ANR	3856151	Condition	reg_function	2296:7:66459:66470	3854875	0	True				
ANR	3856152	Identifier	reg_function		3854875	0					
ANR	3856153	CompoundStatement		183:21:7749:7749	3854875	1					
ANR	3856154	ExpressionStatement	"zend_check_magic_method_implementation ( scope , reg_function , error_type )"	2297:4:66479:66550	3854875	0	True				
ANR	3856155	CallExpression	"zend_check_magic_method_implementation ( scope , reg_function , error_type )"		3854875	0					
ANR	3856156	Callee	zend_check_magic_method_implementation		3854875	0					
ANR	3856157	Identifier	zend_check_magic_method_implementation		3854875	0					
ANR	3856158	ArgumentList	scope		3854875	1					
ANR	3856159	Argument	scope		3854875	0					
ANR	3856160	Identifier	scope		3854875	0					
ANR	3856161	Argument	reg_function		3854875	1					
ANR	3856162	Identifier	reg_function		3854875	0					
ANR	3856163	Argument	error_type		3854875	2					
ANR	3856164	Identifier	error_type		3854875	0					
ANR	3856165	ExpressionStatement	ptr ++	2300:2:66563:66568	3854875	17	True				
ANR	3856166	PostIncDecOperationExpression	ptr ++		3854875	0					
ANR	3856167	Identifier	ptr		3854875	0					
ANR	3856168	IncDec	++		3854875	1					
ANR	3856169	ExpressionStatement	count ++	2301:2:66572:66579	3854875	18	True				
ANR	3856170	PostIncDecOperationExpression	count ++		3854875	0					
ANR	3856171	Identifier	count		3854875	0					
ANR	3856172	IncDec	++		3854875	1					
ANR	3856173	ExpressionStatement	zend_string_release ( lowercase_name )	2302:2:66583:66618	3854875	19	True				
ANR	3856174	CallExpression	zend_string_release ( lowercase_name )		3854875	0					
ANR	3856175	Callee	zend_string_release		3854875	0					
ANR	3856176	Identifier	zend_string_release		3854875	0					
ANR	3856177	ArgumentList	lowercase_name		3854875	1					
ANR	3856178	Argument	lowercase_name		3854875	0					
ANR	3856179	Identifier	lowercase_name		3854875	0					
ANR	3856180	IfStatement	if ( unload )		3854875	18					
ANR	3856181	Condition	unload	2304:5:66628:66633	3854875	0	True				
ANR	3856182	Identifier	unload		3854875	0					
ANR	3856183	CompoundStatement		191:13:7912:7912	3854875	1					
ANR	3856184	IfStatement	if ( scope )		3854875	0					
ANR	3856185	Condition	scope	2305:6:66717:66721	3854875	0	True				
ANR	3856186	Identifier	scope		3854875	0					
ANR	3856187	CompoundStatement		192:13:8000:8000	3854875	1					
ANR	3856188	ExpressionStatement	efree ( ( char * ) lc_class_name )	2306:3:66729:66756	3854875	0	True				
ANR	3856189	CallExpression	efree ( ( char * ) lc_class_name )		3854875	0					
ANR	3856190	Callee	efree		3854875	0					
ANR	3856191	Identifier	efree		3854875	0					
ANR	3856192	ArgumentList	( char * ) lc_class_name		3854875	1					
ANR	3856193	Argument	( char * ) lc_class_name		3854875	0					
ANR	3856194	CastExpression	( char * ) lc_class_name		3854875	0					
ANR	3856195	CastTarget	char *		3854875	0					
ANR	3856196	Identifier	lc_class_name		3854875	1					
ANR	3856197	WhileStatement	while ( ptr -> fname )		3854875	1					
ANR	3856198	Condition	ptr -> fname	2308:9:66771:66780	3854875	0	True				
ANR	3856199	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3856200	Identifier	ptr		3854875	0					
ANR	3856201	Identifier	fname		3854875	1					
ANR	3856202	CompoundStatement		195:21:8059:8059	3854875	1					
ANR	3856203	ExpressionStatement	fname_len = strlen ( ptr -> fname )	2309:3:66788:66818	3854875	0	True				
ANR	3856204	AssignmentExpression	fname_len = strlen ( ptr -> fname )		3854875	0		=			
ANR	3856205	Identifier	fname_len		3854875	0					
ANR	3856206	CallExpression	strlen ( ptr -> fname )		3854875	1					
ANR	3856207	Callee	strlen		3854875	0					
ANR	3856208	Identifier	strlen		3854875	0					
ANR	3856209	ArgumentList	ptr -> fname		3854875	1					
ANR	3856210	Argument	ptr -> fname		3854875	0					
ANR	3856211	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3856212	Identifier	ptr		3854875	0					
ANR	3856213	Identifier	fname		3854875	1					
ANR	3856214	ExpressionStatement	"lowercase_name = zend_string_alloc ( fname_len , 0 )"	2310:3:66823:66871	3854875	1	True				
ANR	3856215	AssignmentExpression	"lowercase_name = zend_string_alloc ( fname_len , 0 )"		3854875	0		=			
ANR	3856216	Identifier	lowercase_name		3854875	0					
ANR	3856217	CallExpression	"zend_string_alloc ( fname_len , 0 )"		3854875	1					
ANR	3856218	Callee	zend_string_alloc		3854875	0					
ANR	3856219	Identifier	zend_string_alloc		3854875	0					
ANR	3856220	ArgumentList	fname_len		3854875	1					
ANR	3856221	Argument	fname_len		3854875	0					
ANR	3856222	Identifier	fname_len		3854875	0					
ANR	3856223	Argument	0		3854875	1					
ANR	3856224	PrimaryExpression	0		3854875	0					
ANR	3856225	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ptr -> fname , fname_len )"	2311:3:66876:66946	3854875	2	True				
ANR	3856226	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ptr -> fname , fname_len )"		3854875	0					
ANR	3856227	Callee	zend_str_tolower_copy		3854875	0					
ANR	3856228	Identifier	zend_str_tolower_copy		3854875	0					
ANR	3856229	ArgumentList	ZSTR_VAL ( lowercase_name )		3854875	1					
ANR	3856230	Argument	ZSTR_VAL ( lowercase_name )		3854875	0					
ANR	3856231	CallExpression	ZSTR_VAL ( lowercase_name )		3854875	0					
ANR	3856232	Callee	ZSTR_VAL		3854875	0					
ANR	3856233	Identifier	ZSTR_VAL		3854875	0					
ANR	3856234	ArgumentList	lowercase_name		3854875	1					
ANR	3856235	Argument	lowercase_name		3854875	0					
ANR	3856236	Identifier	lowercase_name		3854875	0					
ANR	3856237	Argument	ptr -> fname		3854875	1					
ANR	3856238	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3856239	Identifier	ptr		3854875	0					
ANR	3856240	Identifier	fname		3854875	1					
ANR	3856241	Argument	fname_len		3854875	2					
ANR	3856242	Identifier	fname_len		3854875	0					
ANR	3856243	IfStatement	"if ( zend_hash_exists ( target_function_table , lowercase_name ) )"		3854875	3					
ANR	3856244	Condition	"zend_hash_exists ( target_function_table , lowercase_name )"	2312:7:66955:67009	3854875	0	True				
ANR	3856245	CallExpression	"zend_hash_exists ( target_function_table , lowercase_name )"		3854875	0					
ANR	3856246	Callee	zend_hash_exists		3854875	0					
ANR	3856247	Identifier	zend_hash_exists		3854875	0					
ANR	3856248	ArgumentList	target_function_table		3854875	1					
ANR	3856249	Argument	target_function_table		3854875	0					
ANR	3856250	Identifier	target_function_table		3854875	0					
ANR	3856251	Argument	lowercase_name		3854875	1					
ANR	3856252	Identifier	lowercase_name		3854875	0					
ANR	3856253	CompoundStatement		199:64:8288:8288	3854875	1					
ANR	3856254	ExpressionStatement	"zend_error ( error_type , ""Function registration failed - duplicate name - %s%s%s"" , scope ? ZSTR_VAL ( scope -> name ) : """" , scope ? ""::"" : """" , ptr -> fname )"	2313:4:67018:67165	3854875	0	True				
ANR	3856255	CallExpression	"zend_error ( error_type , ""Function registration failed - duplicate name - %s%s%s"" , scope ? ZSTR_VAL ( scope -> name ) : """" , scope ? ""::"" : """" , ptr -> fname )"		3854875	0					
ANR	3856256	Callee	zend_error		3854875	0					
ANR	3856257	Identifier	zend_error		3854875	0					
ANR	3856258	ArgumentList	error_type		3854875	1					
ANR	3856259	Argument	error_type		3854875	0					
ANR	3856260	Identifier	error_type		3854875	0					
ANR	3856261	Argument	"""Function registration failed - duplicate name - %s%s%s"""		3854875	1					
ANR	3856262	PrimaryExpression	"""Function registration failed - duplicate name - %s%s%s"""		3854875	0					
ANR	3856263	Argument	"scope ? ZSTR_VAL ( scope -> name ) : """""		3854875	2					
ANR	3856264	ConditionalExpression	"scope ? ZSTR_VAL ( scope -> name ) : """""		3854875	0					
ANR	3856265	Condition	scope		3854875	0					
ANR	3856266	Identifier	scope		3854875	0					
ANR	3856267	CallExpression	ZSTR_VAL ( scope -> name )		3854875	1					
ANR	3856268	Callee	ZSTR_VAL		3854875	0					
ANR	3856269	Identifier	ZSTR_VAL		3854875	0					
ANR	3856270	ArgumentList	scope -> name		3854875	1					
ANR	3856271	Argument	scope -> name		3854875	0					
ANR	3856272	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856273	Identifier	scope		3854875	0					
ANR	3856274	Identifier	name		3854875	1					
ANR	3856275	PrimaryExpression	""""""		3854875	2					
ANR	3856276	Argument	"scope ? ""::"" : """""		3854875	3					
ANR	3856277	ConditionalExpression	"scope ? ""::"" : """""		3854875	0					
ANR	3856278	Condition	scope		3854875	0					
ANR	3856279	Identifier	scope		3854875	0					
ANR	3856280	PrimaryExpression	"""::"""		3854875	1					
ANR	3856281	PrimaryExpression	""""""		3854875	2					
ANR	3856282	Argument	ptr -> fname		3854875	4					
ANR	3856283	PtrMemberAccess	ptr -> fname		3854875	0					
ANR	3856284	Identifier	ptr		3854875	0					
ANR	3856285	Identifier	fname		3854875	1					
ANR	3856286	ExpressionStatement	zend_string_free ( lowercase_name )	2315:3:67175:67207	3854875	4	True				
ANR	3856287	CallExpression	zend_string_free ( lowercase_name )		3854875	0					
ANR	3856288	Callee	zend_string_free		3854875	0					
ANR	3856289	Identifier	zend_string_free		3854875	0					
ANR	3856290	ArgumentList	lowercase_name		3854875	1					
ANR	3856291	Argument	lowercase_name		3854875	0					
ANR	3856292	Identifier	lowercase_name		3854875	0					
ANR	3856293	ExpressionStatement	ptr ++	2316:3:67212:67217	3854875	5	True				
ANR	3856294	PostIncDecOperationExpression	ptr ++		3854875	0					
ANR	3856295	Identifier	ptr		3854875	0					
ANR	3856296	IncDec	++		3854875	1					
ANR	3856297	ExpressionStatement	"zend_unregister_functions ( functions , count , target_function_table )"	2318:2:67225:67291	3854875	2	True				
ANR	3856298	CallExpression	"zend_unregister_functions ( functions , count , target_function_table )"		3854875	0					
ANR	3856299	Callee	zend_unregister_functions		3854875	0					
ANR	3856300	Identifier	zend_unregister_functions		3854875	0					
ANR	3856301	ArgumentList	functions		3854875	1					
ANR	3856302	Argument	functions		3854875	0					
ANR	3856303	Identifier	functions		3854875	0					
ANR	3856304	Argument	count		3854875	1					
ANR	3856305	Identifier	count		3854875	0					
ANR	3856306	Argument	target_function_table		3854875	2					
ANR	3856307	Identifier	target_function_table		3854875	0					
ANR	3856308	ReturnStatement	return FAILURE ;	2319:2:67295:67309	3854875	3	True				
ANR	3856309	Identifier	FAILURE		3854875	0					
ANR	3856310	IfStatement	if ( scope )		3854875	19					
ANR	3856311	Condition	scope	2321:5:67319:67323	3854875	0	True				
ANR	3856312	Identifier	scope		3854875	0					
ANR	3856313	CompoundStatement		208:12:8602:8602	3854875	1					
ANR	3856314	ExpressionStatement	scope -> constructor = ctor	2322:2:67330:67355	3854875	0	True				
ANR	3856315	AssignmentExpression	scope -> constructor = ctor		3854875	0		=			
ANR	3856316	PtrMemberAccess	scope -> constructor		3854875	0					
ANR	3856317	Identifier	scope		3854875	0					
ANR	3856318	Identifier	constructor		3854875	1					
ANR	3856319	Identifier	ctor		3854875	1					
ANR	3856320	ExpressionStatement	scope -> destructor = dtor	2323:2:67359:67383	3854875	1	True				
ANR	3856321	AssignmentExpression	scope -> destructor = dtor		3854875	0		=			
ANR	3856322	PtrMemberAccess	scope -> destructor		3854875	0					
ANR	3856323	Identifier	scope		3854875	0					
ANR	3856324	Identifier	destructor		3854875	1					
ANR	3856325	Identifier	dtor		3854875	1					
ANR	3856326	ExpressionStatement	scope -> clone = clone	2324:2:67387:67407	3854875	2	True				
ANR	3856327	AssignmentExpression	scope -> clone = clone		3854875	0		=			
ANR	3856328	PtrMemberAccess	scope -> clone		3854875	0					
ANR	3856329	Identifier	scope		3854875	0					
ANR	3856330	Identifier	clone		3854875	1					
ANR	3856331	Identifier	clone		3854875	1					
ANR	3856332	ExpressionStatement	scope -> __call = __call	2325:2:67411:67433	3854875	3	True				
ANR	3856333	AssignmentExpression	scope -> __call = __call		3854875	0		=			
ANR	3856334	PtrMemberAccess	scope -> __call		3854875	0					
ANR	3856335	Identifier	scope		3854875	0					
ANR	3856336	Identifier	__call		3854875	1					
ANR	3856337	Identifier	__call		3854875	1					
ANR	3856338	ExpressionStatement	scope -> __callstatic = __callstatic	2326:2:67437:67471	3854875	4	True				
ANR	3856339	AssignmentExpression	scope -> __callstatic = __callstatic		3854875	0		=			
ANR	3856340	PtrMemberAccess	scope -> __callstatic		3854875	0					
ANR	3856341	Identifier	scope		3854875	0					
ANR	3856342	Identifier	__callstatic		3854875	1					
ANR	3856343	Identifier	__callstatic		3854875	1					
ANR	3856344	ExpressionStatement	scope -> __tostring = __tostring	2327:2:67475:67505	3854875	5	True				
ANR	3856345	AssignmentExpression	scope -> __tostring = __tostring		3854875	0		=			
ANR	3856346	PtrMemberAccess	scope -> __tostring		3854875	0					
ANR	3856347	Identifier	scope		3854875	0					
ANR	3856348	Identifier	__tostring		3854875	1					
ANR	3856349	Identifier	__tostring		3854875	1					
ANR	3856350	ExpressionStatement	scope -> __get = __get	2328:2:67509:67529	3854875	6	True				
ANR	3856351	AssignmentExpression	scope -> __get = __get		3854875	0		=			
ANR	3856352	PtrMemberAccess	scope -> __get		3854875	0					
ANR	3856353	Identifier	scope		3854875	0					
ANR	3856354	Identifier	__get		3854875	1					
ANR	3856355	Identifier	__get		3854875	1					
ANR	3856356	ExpressionStatement	scope -> __set = __set	2329:2:67533:67553	3854875	7	True				
ANR	3856357	AssignmentExpression	scope -> __set = __set		3854875	0		=			
ANR	3856358	PtrMemberAccess	scope -> __set		3854875	0					
ANR	3856359	Identifier	scope		3854875	0					
ANR	3856360	Identifier	__set		3854875	1					
ANR	3856361	Identifier	__set		3854875	1					
ANR	3856362	ExpressionStatement	scope -> __unset = __unset	2330:2:67557:67581	3854875	8	True				
ANR	3856363	AssignmentExpression	scope -> __unset = __unset		3854875	0		=			
ANR	3856364	PtrMemberAccess	scope -> __unset		3854875	0					
ANR	3856365	Identifier	scope		3854875	0					
ANR	3856366	Identifier	__unset		3854875	1					
ANR	3856367	Identifier	__unset		3854875	1					
ANR	3856368	ExpressionStatement	scope -> __isset = __isset	2331:2:67585:67609	3854875	9	True				
ANR	3856369	AssignmentExpression	scope -> __isset = __isset		3854875	0		=			
ANR	3856370	PtrMemberAccess	scope -> __isset		3854875	0					
ANR	3856371	Identifier	scope		3854875	0					
ANR	3856372	Identifier	__isset		3854875	1					
ANR	3856373	Identifier	__isset		3854875	1					
ANR	3856374	ExpressionStatement	scope -> __debugInfo = __debugInfo	2332:2:67613:67645	3854875	10	True				
ANR	3856375	AssignmentExpression	scope -> __debugInfo = __debugInfo		3854875	0		=			
ANR	3856376	PtrMemberAccess	scope -> __debugInfo		3854875	0					
ANR	3856377	Identifier	scope		3854875	0					
ANR	3856378	Identifier	__debugInfo		3854875	1					
ANR	3856379	Identifier	__debugInfo		3854875	1					
ANR	3856380	IfStatement	if ( ctor )		3854875	11					
ANR	3856381	Condition	ctor	2333:6:67653:67656	3854875	0	True				
ANR	3856382	Identifier	ctor		3854875	0					
ANR	3856383	CompoundStatement		220:12:8935:8935	3854875	1					
ANR	3856384	ExpressionStatement	ctor -> common . fn_flags |= ZEND_ACC_CTOR	2334:3:67664:67702	3854875	0	True				
ANR	3856385	AssignmentExpression	ctor -> common . fn_flags |= ZEND_ACC_CTOR		3854875	0		|=			
ANR	3856386	MemberAccess	ctor -> common . fn_flags		3854875	0					
ANR	3856387	PtrMemberAccess	ctor -> common		3854875	0					
ANR	3856388	Identifier	ctor		3854875	0					
ANR	3856389	Identifier	common		3854875	1					
ANR	3856390	Identifier	fn_flags		3854875	1					
ANR	3856391	Identifier	ZEND_ACC_CTOR		3854875	1					
ANR	3856392	IfStatement	if ( ctor -> common . fn_flags & ZEND_ACC_STATIC )		3854875	1					
ANR	3856393	Condition	ctor -> common . fn_flags & ZEND_ACC_STATIC	2335:7:67711:67749	3854875	0	True				
ANR	3856394	BitAndExpression	ctor -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856395	MemberAccess	ctor -> common . fn_flags		3854875	0					
ANR	3856396	PtrMemberAccess	ctor -> common		3854875	0					
ANR	3856397	Identifier	ctor		3854875	0					
ANR	3856398	Identifier	common		3854875	1					
ANR	3856399	Identifier	fn_flags		3854875	1					
ANR	3856400	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856401	CompoundStatement		222:48:9028:9028	3854875	1					
ANR	3856402	ExpressionStatement	"zend_error ( error_type , ""Constructor %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( ctor -> common . function_name ) )"	2336:4:67758:67882	3854875	0	True				
ANR	3856403	CallExpression	"zend_error ( error_type , ""Constructor %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( ctor -> common . function_name ) )"		3854875	0					
ANR	3856404	Callee	zend_error		3854875	0					
ANR	3856405	Identifier	zend_error		3854875	0					
ANR	3856406	ArgumentList	error_type		3854875	1					
ANR	3856407	Argument	error_type		3854875	0					
ANR	3856408	Identifier	error_type		3854875	0					
ANR	3856409	Argument	"""Constructor %s::%s() cannot be static"""		3854875	1					
ANR	3856410	PrimaryExpression	"""Constructor %s::%s() cannot be static"""		3854875	0					
ANR	3856411	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856412	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856413	Callee	ZSTR_VAL		3854875	0					
ANR	3856414	Identifier	ZSTR_VAL		3854875	0					
ANR	3856415	ArgumentList	scope -> name		3854875	1					
ANR	3856416	Argument	scope -> name		3854875	0					
ANR	3856417	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856418	Identifier	scope		3854875	0					
ANR	3856419	Identifier	name		3854875	1					
ANR	3856420	Argument	ZSTR_VAL ( ctor -> common . function_name )		3854875	3					
ANR	3856421	CallExpression	ZSTR_VAL ( ctor -> common . function_name )		3854875	0					
ANR	3856422	Callee	ZSTR_VAL		3854875	0					
ANR	3856423	Identifier	ZSTR_VAL		3854875	0					
ANR	3856424	ArgumentList	ctor -> common . function_name		3854875	1					
ANR	3856425	Argument	ctor -> common . function_name		3854875	0					
ANR	3856426	MemberAccess	ctor -> common . function_name		3854875	0					
ANR	3856427	PtrMemberAccess	ctor -> common		3854875	0					
ANR	3856428	Identifier	ctor		3854875	0					
ANR	3856429	Identifier	common		3854875	1					
ANR	3856430	Identifier	function_name		3854875	1					
ANR	3856431	ExpressionStatement	ctor -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC	2338:3:67892:67939	3854875	2	True				
ANR	3856432	AssignmentExpression	ctor -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC		3854875	0		&=			
ANR	3856433	MemberAccess	ctor -> common . fn_flags		3854875	0					
ANR	3856434	PtrMemberAccess	ctor -> common		3854875	0					
ANR	3856435	Identifier	ctor		3854875	0					
ANR	3856436	Identifier	common		3854875	1					
ANR	3856437	Identifier	fn_flags		3854875	1					
ANR	3856438	Identifier	~ZEND_ACC_ALLOW_STATIC		3854875	1					
ANR	3856439	IfStatement	if ( dtor )		3854875	12					
ANR	3856440	Condition	dtor	2340:6:67951:67954	3854875	0	True				
ANR	3856441	Identifier	dtor		3854875	0					
ANR	3856442	CompoundStatement		227:12:9233:9233	3854875	1					
ANR	3856443	ExpressionStatement	dtor -> common . fn_flags |= ZEND_ACC_DTOR	2341:3:67962:68000	3854875	0	True				
ANR	3856444	AssignmentExpression	dtor -> common . fn_flags |= ZEND_ACC_DTOR		3854875	0		|=			
ANR	3856445	MemberAccess	dtor -> common . fn_flags		3854875	0					
ANR	3856446	PtrMemberAccess	dtor -> common		3854875	0					
ANR	3856447	Identifier	dtor		3854875	0					
ANR	3856448	Identifier	common		3854875	1					
ANR	3856449	Identifier	fn_flags		3854875	1					
ANR	3856450	Identifier	ZEND_ACC_DTOR		3854875	1					
ANR	3856451	IfStatement	if ( dtor -> common . fn_flags & ZEND_ACC_STATIC )		3854875	1					
ANR	3856452	Condition	dtor -> common . fn_flags & ZEND_ACC_STATIC	2342:7:68009:68047	3854875	0	True				
ANR	3856453	BitAndExpression	dtor -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856454	MemberAccess	dtor -> common . fn_flags		3854875	0					
ANR	3856455	PtrMemberAccess	dtor -> common		3854875	0					
ANR	3856456	Identifier	dtor		3854875	0					
ANR	3856457	Identifier	common		3854875	1					
ANR	3856458	Identifier	fn_flags		3854875	1					
ANR	3856459	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856460	CompoundStatement		229:48:9326:9326	3854875	1					
ANR	3856461	ExpressionStatement	"zend_error ( error_type , ""Destructor %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( dtor -> common . function_name ) )"	2343:4:68056:68179	3854875	0	True				
ANR	3856462	CallExpression	"zend_error ( error_type , ""Destructor %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( dtor -> common . function_name ) )"		3854875	0					
ANR	3856463	Callee	zend_error		3854875	0					
ANR	3856464	Identifier	zend_error		3854875	0					
ANR	3856465	ArgumentList	error_type		3854875	1					
ANR	3856466	Argument	error_type		3854875	0					
ANR	3856467	Identifier	error_type		3854875	0					
ANR	3856468	Argument	"""Destructor %s::%s() cannot be static"""		3854875	1					
ANR	3856469	PrimaryExpression	"""Destructor %s::%s() cannot be static"""		3854875	0					
ANR	3856470	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856471	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856472	Callee	ZSTR_VAL		3854875	0					
ANR	3856473	Identifier	ZSTR_VAL		3854875	0					
ANR	3856474	ArgumentList	scope -> name		3854875	1					
ANR	3856475	Argument	scope -> name		3854875	0					
ANR	3856476	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856477	Identifier	scope		3854875	0					
ANR	3856478	Identifier	name		3854875	1					
ANR	3856479	Argument	ZSTR_VAL ( dtor -> common . function_name )		3854875	3					
ANR	3856480	CallExpression	ZSTR_VAL ( dtor -> common . function_name )		3854875	0					
ANR	3856481	Callee	ZSTR_VAL		3854875	0					
ANR	3856482	Identifier	ZSTR_VAL		3854875	0					
ANR	3856483	ArgumentList	dtor -> common . function_name		3854875	1					
ANR	3856484	Argument	dtor -> common . function_name		3854875	0					
ANR	3856485	MemberAccess	dtor -> common . function_name		3854875	0					
ANR	3856486	PtrMemberAccess	dtor -> common		3854875	0					
ANR	3856487	Identifier	dtor		3854875	0					
ANR	3856488	Identifier	common		3854875	1					
ANR	3856489	Identifier	function_name		3854875	1					
ANR	3856490	ExpressionStatement	dtor -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC	2345:3:68189:68236	3854875	2	True				
ANR	3856491	AssignmentExpression	dtor -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC		3854875	0		&=			
ANR	3856492	MemberAccess	dtor -> common . fn_flags		3854875	0					
ANR	3856493	PtrMemberAccess	dtor -> common		3854875	0					
ANR	3856494	Identifier	dtor		3854875	0					
ANR	3856495	Identifier	common		3854875	1					
ANR	3856496	Identifier	fn_flags		3854875	1					
ANR	3856497	Identifier	~ZEND_ACC_ALLOW_STATIC		3854875	1					
ANR	3856498	IfStatement	if ( clone )		3854875	13					
ANR	3856499	Condition	clone	2347:6:68248:68252	3854875	0	True				
ANR	3856500	Identifier	clone		3854875	0					
ANR	3856501	CompoundStatement		234:13:9531:9531	3854875	1					
ANR	3856502	ExpressionStatement	clone -> common . fn_flags |= ZEND_ACC_CLONE	2348:3:68260:68300	3854875	0	True				
ANR	3856503	AssignmentExpression	clone -> common . fn_flags |= ZEND_ACC_CLONE		3854875	0		|=			
ANR	3856504	MemberAccess	clone -> common . fn_flags		3854875	0					
ANR	3856505	PtrMemberAccess	clone -> common		3854875	0					
ANR	3856506	Identifier	clone		3854875	0					
ANR	3856507	Identifier	common		3854875	1					
ANR	3856508	Identifier	fn_flags		3854875	1					
ANR	3856509	Identifier	ZEND_ACC_CLONE		3854875	1					
ANR	3856510	IfStatement	if ( clone -> common . fn_flags & ZEND_ACC_STATIC )		3854875	1					
ANR	3856511	Condition	clone -> common . fn_flags & ZEND_ACC_STATIC	2349:7:68309:68348	3854875	0	True				
ANR	3856512	BitAndExpression	clone -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856513	MemberAccess	clone -> common . fn_flags		3854875	0					
ANR	3856514	PtrMemberAccess	clone -> common		3854875	0					
ANR	3856515	Identifier	clone		3854875	0					
ANR	3856516	Identifier	common		3854875	1					
ANR	3856517	Identifier	fn_flags		3854875	1					
ANR	3856518	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856519	CompoundStatement		236:49:9627:9627	3854875	1					
ANR	3856520	ExpressionStatement	"zend_error ( error_type , ""Constructor %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( clone -> common . function_name ) )"	2350:4:68357:68482	3854875	0	True				
ANR	3856521	CallExpression	"zend_error ( error_type , ""Constructor %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( clone -> common . function_name ) )"		3854875	0					
ANR	3856522	Callee	zend_error		3854875	0					
ANR	3856523	Identifier	zend_error		3854875	0					
ANR	3856524	ArgumentList	error_type		3854875	1					
ANR	3856525	Argument	error_type		3854875	0					
ANR	3856526	Identifier	error_type		3854875	0					
ANR	3856527	Argument	"""Constructor %s::%s() cannot be static"""		3854875	1					
ANR	3856528	PrimaryExpression	"""Constructor %s::%s() cannot be static"""		3854875	0					
ANR	3856529	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856530	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856531	Callee	ZSTR_VAL		3854875	0					
ANR	3856532	Identifier	ZSTR_VAL		3854875	0					
ANR	3856533	ArgumentList	scope -> name		3854875	1					
ANR	3856534	Argument	scope -> name		3854875	0					
ANR	3856535	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856536	Identifier	scope		3854875	0					
ANR	3856537	Identifier	name		3854875	1					
ANR	3856538	Argument	ZSTR_VAL ( clone -> common . function_name )		3854875	3					
ANR	3856539	CallExpression	ZSTR_VAL ( clone -> common . function_name )		3854875	0					
ANR	3856540	Callee	ZSTR_VAL		3854875	0					
ANR	3856541	Identifier	ZSTR_VAL		3854875	0					
ANR	3856542	ArgumentList	clone -> common . function_name		3854875	1					
ANR	3856543	Argument	clone -> common . function_name		3854875	0					
ANR	3856544	MemberAccess	clone -> common . function_name		3854875	0					
ANR	3856545	PtrMemberAccess	clone -> common		3854875	0					
ANR	3856546	Identifier	clone		3854875	0					
ANR	3856547	Identifier	common		3854875	1					
ANR	3856548	Identifier	function_name		3854875	1					
ANR	3856549	ExpressionStatement	clone -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC	2352:3:68492:68540	3854875	2	True				
ANR	3856550	AssignmentExpression	clone -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC		3854875	0		&=			
ANR	3856551	MemberAccess	clone -> common . fn_flags		3854875	0					
ANR	3856552	PtrMemberAccess	clone -> common		3854875	0					
ANR	3856553	Identifier	clone		3854875	0					
ANR	3856554	Identifier	common		3854875	1					
ANR	3856555	Identifier	fn_flags		3854875	1					
ANR	3856556	Identifier	~ZEND_ACC_ALLOW_STATIC		3854875	1					
ANR	3856557	IfStatement	if ( __call )		3854875	14					
ANR	3856558	Condition	__call	2354:6:68552:68557	3854875	0	True				
ANR	3856559	Identifier	__call		3854875	0					
ANR	3856560	CompoundStatement		241:14:9836:9836	3854875	1					
ANR	3856561	IfStatement	if ( __call -> common . fn_flags & ZEND_ACC_STATIC )		3854875	0					
ANR	3856562	Condition	__call -> common . fn_flags & ZEND_ACC_STATIC	2355:7:68569:68609	3854875	0	True				
ANR	3856563	BitAndExpression	__call -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856564	MemberAccess	__call -> common . fn_flags		3854875	0					
ANR	3856565	PtrMemberAccess	__call -> common		3854875	0					
ANR	3856566	Identifier	__call		3854875	0					
ANR	3856567	Identifier	common		3854875	1					
ANR	3856568	Identifier	fn_flags		3854875	1					
ANR	3856569	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856570	CompoundStatement		242:50:9888:9888	3854875	1					
ANR	3856571	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __call -> common . function_name ) )"	2356:4:68618:68739	3854875	0	True				
ANR	3856572	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __call -> common . function_name ) )"		3854875	0					
ANR	3856573	Callee	zend_error		3854875	0					
ANR	3856574	Identifier	zend_error		3854875	0					
ANR	3856575	ArgumentList	error_type		3854875	1					
ANR	3856576	Argument	error_type		3854875	0					
ANR	3856577	Identifier	error_type		3854875	0					
ANR	3856578	Argument	"""Method %s::%s() cannot be static"""		3854875	1					
ANR	3856579	PrimaryExpression	"""Method %s::%s() cannot be static"""		3854875	0					
ANR	3856580	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856581	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856582	Callee	ZSTR_VAL		3854875	0					
ANR	3856583	Identifier	ZSTR_VAL		3854875	0					
ANR	3856584	ArgumentList	scope -> name		3854875	1					
ANR	3856585	Argument	scope -> name		3854875	0					
ANR	3856586	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856587	Identifier	scope		3854875	0					
ANR	3856588	Identifier	name		3854875	1					
ANR	3856589	Argument	ZSTR_VAL ( __call -> common . function_name )		3854875	3					
ANR	3856590	CallExpression	ZSTR_VAL ( __call -> common . function_name )		3854875	0					
ANR	3856591	Callee	ZSTR_VAL		3854875	0					
ANR	3856592	Identifier	ZSTR_VAL		3854875	0					
ANR	3856593	ArgumentList	__call -> common . function_name		3854875	1					
ANR	3856594	Argument	__call -> common . function_name		3854875	0					
ANR	3856595	MemberAccess	__call -> common . function_name		3854875	0					
ANR	3856596	PtrMemberAccess	__call -> common		3854875	0					
ANR	3856597	Identifier	__call		3854875	0					
ANR	3856598	Identifier	common		3854875	1					
ANR	3856599	Identifier	function_name		3854875	1					
ANR	3856600	ExpressionStatement	__call -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC	2358:3:68749:68798	3854875	1	True				
ANR	3856601	AssignmentExpression	__call -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC		3854875	0		&=			
ANR	3856602	MemberAccess	__call -> common . fn_flags		3854875	0					
ANR	3856603	PtrMemberAccess	__call -> common		3854875	0					
ANR	3856604	Identifier	__call		3854875	0					
ANR	3856605	Identifier	common		3854875	1					
ANR	3856606	Identifier	fn_flags		3854875	1					
ANR	3856607	Identifier	~ZEND_ACC_ALLOW_STATIC		3854875	1					
ANR	3856608	IfStatement	if ( __callstatic )		3854875	15					
ANR	3856609	Condition	__callstatic	2360:6:68810:68821	3854875	0	True				
ANR	3856610	Identifier	__callstatic		3854875	0					
ANR	3856611	CompoundStatement		247:20:10100:10100	3854875	1					
ANR	3856612	IfStatement	if ( ! ( __callstatic -> common . fn_flags & ZEND_ACC_STATIC ) )		3854875	0					
ANR	3856613	Condition	! ( __callstatic -> common . fn_flags & ZEND_ACC_STATIC )	2361:7:68833:68882	3854875	0	True				
ANR	3856614	UnaryOperationExpression	! ( __callstatic -> common . fn_flags & ZEND_ACC_STATIC )		3854875	0					
ANR	3856615	UnaryOperator	!		3854875	0					
ANR	3856616	BitAndExpression	__callstatic -> common . fn_flags & ZEND_ACC_STATIC		3854875	1		&			
ANR	3856617	MemberAccess	__callstatic -> common . fn_flags		3854875	0					
ANR	3856618	PtrMemberAccess	__callstatic -> common		3854875	0					
ANR	3856619	Identifier	__callstatic		3854875	0					
ANR	3856620	Identifier	common		3854875	1					
ANR	3856621	Identifier	fn_flags		3854875	1					
ANR	3856622	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856623	CompoundStatement		248:59:10161:10161	3854875	1					
ANR	3856624	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() must be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __callstatic -> common . function_name ) )"	2362:4:68891:69016	3854875	0	True				
ANR	3856625	CallExpression	"zend_error ( error_type , ""Method %s::%s() must be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __callstatic -> common . function_name ) )"		3854875	0					
ANR	3856626	Callee	zend_error		3854875	0					
ANR	3856627	Identifier	zend_error		3854875	0					
ANR	3856628	ArgumentList	error_type		3854875	1					
ANR	3856629	Argument	error_type		3854875	0					
ANR	3856630	Identifier	error_type		3854875	0					
ANR	3856631	Argument	"""Method %s::%s() must be static"""		3854875	1					
ANR	3856632	PrimaryExpression	"""Method %s::%s() must be static"""		3854875	0					
ANR	3856633	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856634	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856635	Callee	ZSTR_VAL		3854875	0					
ANR	3856636	Identifier	ZSTR_VAL		3854875	0					
ANR	3856637	ArgumentList	scope -> name		3854875	1					
ANR	3856638	Argument	scope -> name		3854875	0					
ANR	3856639	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856640	Identifier	scope		3854875	0					
ANR	3856641	Identifier	name		3854875	1					
ANR	3856642	Argument	ZSTR_VAL ( __callstatic -> common . function_name )		3854875	3					
ANR	3856643	CallExpression	ZSTR_VAL ( __callstatic -> common . function_name )		3854875	0					
ANR	3856644	Callee	ZSTR_VAL		3854875	0					
ANR	3856645	Identifier	ZSTR_VAL		3854875	0					
ANR	3856646	ArgumentList	__callstatic -> common . function_name		3854875	1					
ANR	3856647	Argument	__callstatic -> common . function_name		3854875	0					
ANR	3856648	MemberAccess	__callstatic -> common . function_name		3854875	0					
ANR	3856649	PtrMemberAccess	__callstatic -> common		3854875	0					
ANR	3856650	Identifier	__callstatic		3854875	0					
ANR	3856651	Identifier	common		3854875	1					
ANR	3856652	Identifier	function_name		3854875	1					
ANR	3856653	ExpressionStatement	__callstatic -> common . fn_flags |= ZEND_ACC_STATIC	2364:3:69026:69074	3854875	1	True				
ANR	3856654	AssignmentExpression	__callstatic -> common . fn_flags |= ZEND_ACC_STATIC		3854875	0		|=			
ANR	3856655	MemberAccess	__callstatic -> common . fn_flags		3854875	0					
ANR	3856656	PtrMemberAccess	__callstatic -> common		3854875	0					
ANR	3856657	Identifier	__callstatic		3854875	0					
ANR	3856658	Identifier	common		3854875	1					
ANR	3856659	Identifier	fn_flags		3854875	1					
ANR	3856660	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856661	IfStatement	if ( __tostring )		3854875	16					
ANR	3856662	Condition	__tostring	2366:6:69086:69095	3854875	0	True				
ANR	3856663	Identifier	__tostring		3854875	0					
ANR	3856664	CompoundStatement		253:18:10374:10374	3854875	1					
ANR	3856665	IfStatement	if ( __tostring -> common . fn_flags & ZEND_ACC_STATIC )		3854875	0					
ANR	3856666	Condition	__tostring -> common . fn_flags & ZEND_ACC_STATIC	2367:7:69107:69151	3854875	0	True				
ANR	3856667	BitAndExpression	__tostring -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856668	MemberAccess	__tostring -> common . fn_flags		3854875	0					
ANR	3856669	PtrMemberAccess	__tostring -> common		3854875	0					
ANR	3856670	Identifier	__tostring		3854875	0					
ANR	3856671	Identifier	common		3854875	1					
ANR	3856672	Identifier	fn_flags		3854875	1					
ANR	3856673	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856674	CompoundStatement		254:54:10430:10430	3854875	1					
ANR	3856675	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __tostring -> common . function_name ) )"	2368:4:69160:69285	3854875	0	True				
ANR	3856676	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __tostring -> common . function_name ) )"		3854875	0					
ANR	3856677	Callee	zend_error		3854875	0					
ANR	3856678	Identifier	zend_error		3854875	0					
ANR	3856679	ArgumentList	error_type		3854875	1					
ANR	3856680	Argument	error_type		3854875	0					
ANR	3856681	Identifier	error_type		3854875	0					
ANR	3856682	Argument	"""Method %s::%s() cannot be static"""		3854875	1					
ANR	3856683	PrimaryExpression	"""Method %s::%s() cannot be static"""		3854875	0					
ANR	3856684	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856685	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856686	Callee	ZSTR_VAL		3854875	0					
ANR	3856687	Identifier	ZSTR_VAL		3854875	0					
ANR	3856688	ArgumentList	scope -> name		3854875	1					
ANR	3856689	Argument	scope -> name		3854875	0					
ANR	3856690	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856691	Identifier	scope		3854875	0					
ANR	3856692	Identifier	name		3854875	1					
ANR	3856693	Argument	ZSTR_VAL ( __tostring -> common . function_name )		3854875	3					
ANR	3856694	CallExpression	ZSTR_VAL ( __tostring -> common . function_name )		3854875	0					
ANR	3856695	Callee	ZSTR_VAL		3854875	0					
ANR	3856696	Identifier	ZSTR_VAL		3854875	0					
ANR	3856697	ArgumentList	__tostring -> common . function_name		3854875	1					
ANR	3856698	Argument	__tostring -> common . function_name		3854875	0					
ANR	3856699	MemberAccess	__tostring -> common . function_name		3854875	0					
ANR	3856700	PtrMemberAccess	__tostring -> common		3854875	0					
ANR	3856701	Identifier	__tostring		3854875	0					
ANR	3856702	Identifier	common		3854875	1					
ANR	3856703	Identifier	function_name		3854875	1					
ANR	3856704	ExpressionStatement	__tostring -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC	2370:3:69295:69348	3854875	1	True				
ANR	3856705	AssignmentExpression	__tostring -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC		3854875	0		&=			
ANR	3856706	MemberAccess	__tostring -> common . fn_flags		3854875	0					
ANR	3856707	PtrMemberAccess	__tostring -> common		3854875	0					
ANR	3856708	Identifier	__tostring		3854875	0					
ANR	3856709	Identifier	common		3854875	1					
ANR	3856710	Identifier	fn_flags		3854875	1					
ANR	3856711	Identifier	~ZEND_ACC_ALLOW_STATIC		3854875	1					
ANR	3856712	IfStatement	if ( __get )		3854875	17					
ANR	3856713	Condition	__get	2372:6:69360:69364	3854875	0	True				
ANR	3856714	Identifier	__get		3854875	0					
ANR	3856715	CompoundStatement		259:13:10643:10643	3854875	1					
ANR	3856716	IfStatement	if ( __get -> common . fn_flags & ZEND_ACC_STATIC )		3854875	0					
ANR	3856717	Condition	__get -> common . fn_flags & ZEND_ACC_STATIC	2373:7:69376:69415	3854875	0	True				
ANR	3856718	BitAndExpression	__get -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856719	MemberAccess	__get -> common . fn_flags		3854875	0					
ANR	3856720	PtrMemberAccess	__get -> common		3854875	0					
ANR	3856721	Identifier	__get		3854875	0					
ANR	3856722	Identifier	common		3854875	1					
ANR	3856723	Identifier	fn_flags		3854875	1					
ANR	3856724	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856725	CompoundStatement		260:49:10694:10694	3854875	1					
ANR	3856726	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __get -> common . function_name ) )"	2374:4:69424:69544	3854875	0	True				
ANR	3856727	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __get -> common . function_name ) )"		3854875	0					
ANR	3856728	Callee	zend_error		3854875	0					
ANR	3856729	Identifier	zend_error		3854875	0					
ANR	3856730	ArgumentList	error_type		3854875	1					
ANR	3856731	Argument	error_type		3854875	0					
ANR	3856732	Identifier	error_type		3854875	0					
ANR	3856733	Argument	"""Method %s::%s() cannot be static"""		3854875	1					
ANR	3856734	PrimaryExpression	"""Method %s::%s() cannot be static"""		3854875	0					
ANR	3856735	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856736	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856737	Callee	ZSTR_VAL		3854875	0					
ANR	3856738	Identifier	ZSTR_VAL		3854875	0					
ANR	3856739	ArgumentList	scope -> name		3854875	1					
ANR	3856740	Argument	scope -> name		3854875	0					
ANR	3856741	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856742	Identifier	scope		3854875	0					
ANR	3856743	Identifier	name		3854875	1					
ANR	3856744	Argument	ZSTR_VAL ( __get -> common . function_name )		3854875	3					
ANR	3856745	CallExpression	ZSTR_VAL ( __get -> common . function_name )		3854875	0					
ANR	3856746	Callee	ZSTR_VAL		3854875	0					
ANR	3856747	Identifier	ZSTR_VAL		3854875	0					
ANR	3856748	ArgumentList	__get -> common . function_name		3854875	1					
ANR	3856749	Argument	__get -> common . function_name		3854875	0					
ANR	3856750	MemberAccess	__get -> common . function_name		3854875	0					
ANR	3856751	PtrMemberAccess	__get -> common		3854875	0					
ANR	3856752	Identifier	__get		3854875	0					
ANR	3856753	Identifier	common		3854875	1					
ANR	3856754	Identifier	function_name		3854875	1					
ANR	3856755	ExpressionStatement	__get -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC	2376:3:69554:69602	3854875	1	True				
ANR	3856756	AssignmentExpression	__get -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC		3854875	0		&=			
ANR	3856757	MemberAccess	__get -> common . fn_flags		3854875	0					
ANR	3856758	PtrMemberAccess	__get -> common		3854875	0					
ANR	3856759	Identifier	__get		3854875	0					
ANR	3856760	Identifier	common		3854875	1					
ANR	3856761	Identifier	fn_flags		3854875	1					
ANR	3856762	Identifier	~ZEND_ACC_ALLOW_STATIC		3854875	1					
ANR	3856763	IfStatement	if ( __set )		3854875	18					
ANR	3856764	Condition	__set	2378:6:69614:69618	3854875	0	True				
ANR	3856765	Identifier	__set		3854875	0					
ANR	3856766	CompoundStatement		265:13:10897:10897	3854875	1					
ANR	3856767	IfStatement	if ( __set -> common . fn_flags & ZEND_ACC_STATIC )		3854875	0					
ANR	3856768	Condition	__set -> common . fn_flags & ZEND_ACC_STATIC	2379:7:69630:69669	3854875	0	True				
ANR	3856769	BitAndExpression	__set -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856770	MemberAccess	__set -> common . fn_flags		3854875	0					
ANR	3856771	PtrMemberAccess	__set -> common		3854875	0					
ANR	3856772	Identifier	__set		3854875	0					
ANR	3856773	Identifier	common		3854875	1					
ANR	3856774	Identifier	fn_flags		3854875	1					
ANR	3856775	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856776	CompoundStatement		266:49:10948:10948	3854875	1					
ANR	3856777	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __set -> common . function_name ) )"	2380:4:69678:69798	3854875	0	True				
ANR	3856778	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __set -> common . function_name ) )"		3854875	0					
ANR	3856779	Callee	zend_error		3854875	0					
ANR	3856780	Identifier	zend_error		3854875	0					
ANR	3856781	ArgumentList	error_type		3854875	1					
ANR	3856782	Argument	error_type		3854875	0					
ANR	3856783	Identifier	error_type		3854875	0					
ANR	3856784	Argument	"""Method %s::%s() cannot be static"""		3854875	1					
ANR	3856785	PrimaryExpression	"""Method %s::%s() cannot be static"""		3854875	0					
ANR	3856786	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856787	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856788	Callee	ZSTR_VAL		3854875	0					
ANR	3856789	Identifier	ZSTR_VAL		3854875	0					
ANR	3856790	ArgumentList	scope -> name		3854875	1					
ANR	3856791	Argument	scope -> name		3854875	0					
ANR	3856792	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856793	Identifier	scope		3854875	0					
ANR	3856794	Identifier	name		3854875	1					
ANR	3856795	Argument	ZSTR_VAL ( __set -> common . function_name )		3854875	3					
ANR	3856796	CallExpression	ZSTR_VAL ( __set -> common . function_name )		3854875	0					
ANR	3856797	Callee	ZSTR_VAL		3854875	0					
ANR	3856798	Identifier	ZSTR_VAL		3854875	0					
ANR	3856799	ArgumentList	__set -> common . function_name		3854875	1					
ANR	3856800	Argument	__set -> common . function_name		3854875	0					
ANR	3856801	MemberAccess	__set -> common . function_name		3854875	0					
ANR	3856802	PtrMemberAccess	__set -> common		3854875	0					
ANR	3856803	Identifier	__set		3854875	0					
ANR	3856804	Identifier	common		3854875	1					
ANR	3856805	Identifier	function_name		3854875	1					
ANR	3856806	ExpressionStatement	__set -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC	2382:3:69808:69856	3854875	1	True				
ANR	3856807	AssignmentExpression	__set -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC		3854875	0		&=			
ANR	3856808	MemberAccess	__set -> common . fn_flags		3854875	0					
ANR	3856809	PtrMemberAccess	__set -> common		3854875	0					
ANR	3856810	Identifier	__set		3854875	0					
ANR	3856811	Identifier	common		3854875	1					
ANR	3856812	Identifier	fn_flags		3854875	1					
ANR	3856813	Identifier	~ZEND_ACC_ALLOW_STATIC		3854875	1					
ANR	3856814	IfStatement	if ( __unset )		3854875	19					
ANR	3856815	Condition	__unset	2384:6:69868:69874	3854875	0	True				
ANR	3856816	Identifier	__unset		3854875	0					
ANR	3856817	CompoundStatement		271:15:11153:11153	3854875	1					
ANR	3856818	IfStatement	if ( __unset -> common . fn_flags & ZEND_ACC_STATIC )		3854875	0					
ANR	3856819	Condition	__unset -> common . fn_flags & ZEND_ACC_STATIC	2385:7:69886:69927	3854875	0	True				
ANR	3856820	BitAndExpression	__unset -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856821	MemberAccess	__unset -> common . fn_flags		3854875	0					
ANR	3856822	PtrMemberAccess	__unset -> common		3854875	0					
ANR	3856823	Identifier	__unset		3854875	0					
ANR	3856824	Identifier	common		3854875	1					
ANR	3856825	Identifier	fn_flags		3854875	1					
ANR	3856826	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856827	CompoundStatement		272:51:11206:11206	3854875	1					
ANR	3856828	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __unset -> common . function_name ) )"	2386:4:69936:70058	3854875	0	True				
ANR	3856829	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __unset -> common . function_name ) )"		3854875	0					
ANR	3856830	Callee	zend_error		3854875	0					
ANR	3856831	Identifier	zend_error		3854875	0					
ANR	3856832	ArgumentList	error_type		3854875	1					
ANR	3856833	Argument	error_type		3854875	0					
ANR	3856834	Identifier	error_type		3854875	0					
ANR	3856835	Argument	"""Method %s::%s() cannot be static"""		3854875	1					
ANR	3856836	PrimaryExpression	"""Method %s::%s() cannot be static"""		3854875	0					
ANR	3856837	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856838	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856839	Callee	ZSTR_VAL		3854875	0					
ANR	3856840	Identifier	ZSTR_VAL		3854875	0					
ANR	3856841	ArgumentList	scope -> name		3854875	1					
ANR	3856842	Argument	scope -> name		3854875	0					
ANR	3856843	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856844	Identifier	scope		3854875	0					
ANR	3856845	Identifier	name		3854875	1					
ANR	3856846	Argument	ZSTR_VAL ( __unset -> common . function_name )		3854875	3					
ANR	3856847	CallExpression	ZSTR_VAL ( __unset -> common . function_name )		3854875	0					
ANR	3856848	Callee	ZSTR_VAL		3854875	0					
ANR	3856849	Identifier	ZSTR_VAL		3854875	0					
ANR	3856850	ArgumentList	__unset -> common . function_name		3854875	1					
ANR	3856851	Argument	__unset -> common . function_name		3854875	0					
ANR	3856852	MemberAccess	__unset -> common . function_name		3854875	0					
ANR	3856853	PtrMemberAccess	__unset -> common		3854875	0					
ANR	3856854	Identifier	__unset		3854875	0					
ANR	3856855	Identifier	common		3854875	1					
ANR	3856856	Identifier	function_name		3854875	1					
ANR	3856857	ExpressionStatement	__unset -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC	2388:3:70068:70118	3854875	1	True				
ANR	3856858	AssignmentExpression	__unset -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC		3854875	0		&=			
ANR	3856859	MemberAccess	__unset -> common . fn_flags		3854875	0					
ANR	3856860	PtrMemberAccess	__unset -> common		3854875	0					
ANR	3856861	Identifier	__unset		3854875	0					
ANR	3856862	Identifier	common		3854875	1					
ANR	3856863	Identifier	fn_flags		3854875	1					
ANR	3856864	Identifier	~ZEND_ACC_ALLOW_STATIC		3854875	1					
ANR	3856865	IfStatement	if ( __isset )		3854875	20					
ANR	3856866	Condition	__isset	2390:6:70130:70136	3854875	0	True				
ANR	3856867	Identifier	__isset		3854875	0					
ANR	3856868	CompoundStatement		277:15:11415:11415	3854875	1					
ANR	3856869	IfStatement	if ( __isset -> common . fn_flags & ZEND_ACC_STATIC )		3854875	0					
ANR	3856870	Condition	__isset -> common . fn_flags & ZEND_ACC_STATIC	2391:7:70148:70189	3854875	0	True				
ANR	3856871	BitAndExpression	__isset -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856872	MemberAccess	__isset -> common . fn_flags		3854875	0					
ANR	3856873	PtrMemberAccess	__isset -> common		3854875	0					
ANR	3856874	Identifier	__isset		3854875	0					
ANR	3856875	Identifier	common		3854875	1					
ANR	3856876	Identifier	fn_flags		3854875	1					
ANR	3856877	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856878	CompoundStatement		278:51:11468:11468	3854875	1					
ANR	3856879	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __isset -> common . function_name ) )"	2392:4:70198:70320	3854875	0	True				
ANR	3856880	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __isset -> common . function_name ) )"		3854875	0					
ANR	3856881	Callee	zend_error		3854875	0					
ANR	3856882	Identifier	zend_error		3854875	0					
ANR	3856883	ArgumentList	error_type		3854875	1					
ANR	3856884	Argument	error_type		3854875	0					
ANR	3856885	Identifier	error_type		3854875	0					
ANR	3856886	Argument	"""Method %s::%s() cannot be static"""		3854875	1					
ANR	3856887	PrimaryExpression	"""Method %s::%s() cannot be static"""		3854875	0					
ANR	3856888	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856889	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856890	Callee	ZSTR_VAL		3854875	0					
ANR	3856891	Identifier	ZSTR_VAL		3854875	0					
ANR	3856892	ArgumentList	scope -> name		3854875	1					
ANR	3856893	Argument	scope -> name		3854875	0					
ANR	3856894	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856895	Identifier	scope		3854875	0					
ANR	3856896	Identifier	name		3854875	1					
ANR	3856897	Argument	ZSTR_VAL ( __isset -> common . function_name )		3854875	3					
ANR	3856898	CallExpression	ZSTR_VAL ( __isset -> common . function_name )		3854875	0					
ANR	3856899	Callee	ZSTR_VAL		3854875	0					
ANR	3856900	Identifier	ZSTR_VAL		3854875	0					
ANR	3856901	ArgumentList	__isset -> common . function_name		3854875	1					
ANR	3856902	Argument	__isset -> common . function_name		3854875	0					
ANR	3856903	MemberAccess	__isset -> common . function_name		3854875	0					
ANR	3856904	PtrMemberAccess	__isset -> common		3854875	0					
ANR	3856905	Identifier	__isset		3854875	0					
ANR	3856906	Identifier	common		3854875	1					
ANR	3856907	Identifier	function_name		3854875	1					
ANR	3856908	ExpressionStatement	__isset -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC	2394:3:70330:70380	3854875	1	True				
ANR	3856909	AssignmentExpression	__isset -> common . fn_flags &= ~ZEND_ACC_ALLOW_STATIC		3854875	0		&=			
ANR	3856910	MemberAccess	__isset -> common . fn_flags		3854875	0					
ANR	3856911	PtrMemberAccess	__isset -> common		3854875	0					
ANR	3856912	Identifier	__isset		3854875	0					
ANR	3856913	Identifier	common		3854875	1					
ANR	3856914	Identifier	fn_flags		3854875	1					
ANR	3856915	Identifier	~ZEND_ACC_ALLOW_STATIC		3854875	1					
ANR	3856916	IfStatement	if ( __debugInfo )		3854875	21					
ANR	3856917	Condition	__debugInfo	2396:6:70392:70402	3854875	0	True				
ANR	3856918	Identifier	__debugInfo		3854875	0					
ANR	3856919	CompoundStatement		283:19:11681:11681	3854875	1					
ANR	3856920	IfStatement	if ( __debugInfo -> common . fn_flags & ZEND_ACC_STATIC )		3854875	0					
ANR	3856921	Condition	__debugInfo -> common . fn_flags & ZEND_ACC_STATIC	2397:7:70414:70459	3854875	0	True				
ANR	3856922	BitAndExpression	__debugInfo -> common . fn_flags & ZEND_ACC_STATIC		3854875	0		&			
ANR	3856923	MemberAccess	__debugInfo -> common . fn_flags		3854875	0					
ANR	3856924	PtrMemberAccess	__debugInfo -> common		3854875	0					
ANR	3856925	Identifier	__debugInfo		3854875	0					
ANR	3856926	Identifier	common		3854875	1					
ANR	3856927	Identifier	fn_flags		3854875	1					
ANR	3856928	Identifier	ZEND_ACC_STATIC		3854875	1					
ANR	3856929	CompoundStatement		284:55:11738:11738	3854875	1					
ANR	3856930	ExpressionStatement	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __debugInfo -> common . function_name ) )"	2398:4:70468:70594	3854875	0	True				
ANR	3856931	CallExpression	"zend_error ( error_type , ""Method %s::%s() cannot be static"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( __debugInfo -> common . function_name ) )"		3854875	0					
ANR	3856932	Callee	zend_error		3854875	0					
ANR	3856933	Identifier	zend_error		3854875	0					
ANR	3856934	ArgumentList	error_type		3854875	1					
ANR	3856935	Argument	error_type		3854875	0					
ANR	3856936	Identifier	error_type		3854875	0					
ANR	3856937	Argument	"""Method %s::%s() cannot be static"""		3854875	1					
ANR	3856938	PrimaryExpression	"""Method %s::%s() cannot be static"""		3854875	0					
ANR	3856939	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856940	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856941	Callee	ZSTR_VAL		3854875	0					
ANR	3856942	Identifier	ZSTR_VAL		3854875	0					
ANR	3856943	ArgumentList	scope -> name		3854875	1					
ANR	3856944	Argument	scope -> name		3854875	0					
ANR	3856945	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856946	Identifier	scope		3854875	0					
ANR	3856947	Identifier	name		3854875	1					
ANR	3856948	Argument	ZSTR_VAL ( __debugInfo -> common . function_name )		3854875	3					
ANR	3856949	CallExpression	ZSTR_VAL ( __debugInfo -> common . function_name )		3854875	0					
ANR	3856950	Callee	ZSTR_VAL		3854875	0					
ANR	3856951	Identifier	ZSTR_VAL		3854875	0					
ANR	3856952	ArgumentList	__debugInfo -> common . function_name		3854875	1					
ANR	3856953	Argument	__debugInfo -> common . function_name		3854875	0					
ANR	3856954	MemberAccess	__debugInfo -> common . function_name		3854875	0					
ANR	3856955	PtrMemberAccess	__debugInfo -> common		3854875	0					
ANR	3856956	Identifier	__debugInfo		3854875	0					
ANR	3856957	Identifier	common		3854875	1					
ANR	3856958	Identifier	function_name		3854875	1					
ANR	3856959	IfStatement	if ( ctor && ctor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && ctor -> common . fn_flags & ZEND_ACC_CTOR )		3854875	22					
ANR	3856960	Condition	ctor && ctor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && ctor -> common . fn_flags & ZEND_ACC_CTOR	2402:6:70612:70708	3854875	0	True				
ANR	3856961	AndExpression	ctor && ctor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && ctor -> common . fn_flags & ZEND_ACC_CTOR		3854875	0		&&			
ANR	3856962	Identifier	ctor		3854875	0					
ANR	3856963	AndExpression	ctor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && ctor -> common . fn_flags & ZEND_ACC_CTOR		3854875	1		&&			
ANR	3856964	BitAndExpression	ctor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3854875	0		&			
ANR	3856965	MemberAccess	ctor -> common . fn_flags		3854875	0					
ANR	3856966	PtrMemberAccess	ctor -> common		3854875	0					
ANR	3856967	Identifier	ctor		3854875	0					
ANR	3856968	Identifier	common		3854875	1					
ANR	3856969	Identifier	fn_flags		3854875	1					
ANR	3856970	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3854875	1					
ANR	3856971	BitAndExpression	ctor -> common . fn_flags & ZEND_ACC_CTOR		3854875	1		&			
ANR	3856972	MemberAccess	ctor -> common . fn_flags		3854875	0					
ANR	3856973	PtrMemberAccess	ctor -> common		3854875	0					
ANR	3856974	Identifier	ctor		3854875	0					
ANR	3856975	Identifier	common		3854875	1					
ANR	3856976	Identifier	fn_flags		3854875	1					
ANR	3856977	Identifier	ZEND_ACC_CTOR		3854875	1					
ANR	3856978	CompoundStatement		289:105:11987:11987	3854875	1					
ANR	3856979	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Constructor %s::%s() cannot declare a return type"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( ctor -> common . function_name ) )"	2403:3:70716:70863	3854875	0	True				
ANR	3856980	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Constructor %s::%s() cannot declare a return type"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( ctor -> common . function_name ) )"		3854875	0					
ANR	3856981	Callee	zend_error_noreturn		3854875	0					
ANR	3856982	Identifier	zend_error_noreturn		3854875	0					
ANR	3856983	ArgumentList	E_CORE_ERROR		3854875	1					
ANR	3856984	Argument	E_CORE_ERROR		3854875	0					
ANR	3856985	Identifier	E_CORE_ERROR		3854875	0					
ANR	3856986	Argument	"""Constructor %s::%s() cannot declare a return type"""		3854875	1					
ANR	3856987	PrimaryExpression	"""Constructor %s::%s() cannot declare a return type"""		3854875	0					
ANR	3856988	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3856989	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3856990	Callee	ZSTR_VAL		3854875	0					
ANR	3856991	Identifier	ZSTR_VAL		3854875	0					
ANR	3856992	ArgumentList	scope -> name		3854875	1					
ANR	3856993	Argument	scope -> name		3854875	0					
ANR	3856994	PtrMemberAccess	scope -> name		3854875	0					
ANR	3856995	Identifier	scope		3854875	0					
ANR	3856996	Identifier	name		3854875	1					
ANR	3856997	Argument	ZSTR_VAL ( ctor -> common . function_name )		3854875	3					
ANR	3856998	CallExpression	ZSTR_VAL ( ctor -> common . function_name )		3854875	0					
ANR	3856999	Callee	ZSTR_VAL		3854875	0					
ANR	3857000	Identifier	ZSTR_VAL		3854875	0					
ANR	3857001	ArgumentList	ctor -> common . function_name		3854875	1					
ANR	3857002	Argument	ctor -> common . function_name		3854875	0					
ANR	3857003	MemberAccess	ctor -> common . function_name		3854875	0					
ANR	3857004	PtrMemberAccess	ctor -> common		3854875	0					
ANR	3857005	Identifier	ctor		3854875	0					
ANR	3857006	Identifier	common		3854875	1					
ANR	3857007	Identifier	function_name		3854875	1					
ANR	3857008	IfStatement	if ( dtor && dtor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && dtor -> common . fn_flags & ZEND_ACC_DTOR )		3854875	23					
ANR	3857009	Condition	dtor && dtor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && dtor -> common . fn_flags & ZEND_ACC_DTOR	2406:6:70876:70972	3854875	0	True				
ANR	3857010	AndExpression	dtor && dtor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && dtor -> common . fn_flags & ZEND_ACC_DTOR		3854875	0		&&			
ANR	3857011	Identifier	dtor		3854875	0					
ANR	3857012	AndExpression	dtor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && dtor -> common . fn_flags & ZEND_ACC_DTOR		3854875	1		&&			
ANR	3857013	BitAndExpression	dtor -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3854875	0		&			
ANR	3857014	MemberAccess	dtor -> common . fn_flags		3854875	0					
ANR	3857015	PtrMemberAccess	dtor -> common		3854875	0					
ANR	3857016	Identifier	dtor		3854875	0					
ANR	3857017	Identifier	common		3854875	1					
ANR	3857018	Identifier	fn_flags		3854875	1					
ANR	3857019	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3854875	1					
ANR	3857020	BitAndExpression	dtor -> common . fn_flags & ZEND_ACC_DTOR		3854875	1		&			
ANR	3857021	MemberAccess	dtor -> common . fn_flags		3854875	0					
ANR	3857022	PtrMemberAccess	dtor -> common		3854875	0					
ANR	3857023	Identifier	dtor		3854875	0					
ANR	3857024	Identifier	common		3854875	1					
ANR	3857025	Identifier	fn_flags		3854875	1					
ANR	3857026	Identifier	ZEND_ACC_DTOR		3854875	1					
ANR	3857027	CompoundStatement		293:105:12251:12251	3854875	1					
ANR	3857028	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Destructor %s::%s() cannot declare a return type"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( dtor -> common . function_name ) )"	2407:3:70980:71126	3854875	0	True				
ANR	3857029	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Destructor %s::%s() cannot declare a return type"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( dtor -> common . function_name ) )"		3854875	0					
ANR	3857030	Callee	zend_error_noreturn		3854875	0					
ANR	3857031	Identifier	zend_error_noreturn		3854875	0					
ANR	3857032	ArgumentList	E_CORE_ERROR		3854875	1					
ANR	3857033	Argument	E_CORE_ERROR		3854875	0					
ANR	3857034	Identifier	E_CORE_ERROR		3854875	0					
ANR	3857035	Argument	"""Destructor %s::%s() cannot declare a return type"""		3854875	1					
ANR	3857036	PrimaryExpression	"""Destructor %s::%s() cannot declare a return type"""		3854875	0					
ANR	3857037	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3857038	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3857039	Callee	ZSTR_VAL		3854875	0					
ANR	3857040	Identifier	ZSTR_VAL		3854875	0					
ANR	3857041	ArgumentList	scope -> name		3854875	1					
ANR	3857042	Argument	scope -> name		3854875	0					
ANR	3857043	PtrMemberAccess	scope -> name		3854875	0					
ANR	3857044	Identifier	scope		3854875	0					
ANR	3857045	Identifier	name		3854875	1					
ANR	3857046	Argument	ZSTR_VAL ( dtor -> common . function_name )		3854875	3					
ANR	3857047	CallExpression	ZSTR_VAL ( dtor -> common . function_name )		3854875	0					
ANR	3857048	Callee	ZSTR_VAL		3854875	0					
ANR	3857049	Identifier	ZSTR_VAL		3854875	0					
ANR	3857050	ArgumentList	dtor -> common . function_name		3854875	1					
ANR	3857051	Argument	dtor -> common . function_name		3854875	0					
ANR	3857052	MemberAccess	dtor -> common . function_name		3854875	0					
ANR	3857053	PtrMemberAccess	dtor -> common		3854875	0					
ANR	3857054	Identifier	dtor		3854875	0					
ANR	3857055	Identifier	common		3854875	1					
ANR	3857056	Identifier	function_name		3854875	1					
ANR	3857057	IfStatement	if ( clone && clone -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && dtor -> common . fn_flags & ZEND_ACC_DTOR )		3854875	24					
ANR	3857058	Condition	clone && clone -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && dtor -> common . fn_flags & ZEND_ACC_DTOR	2410:6:71139:71237	3854875	0	True				
ANR	3857059	AndExpression	clone && clone -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && dtor -> common . fn_flags & ZEND_ACC_DTOR		3854875	0		&&			
ANR	3857060	Identifier	clone		3854875	0					
ANR	3857061	AndExpression	clone -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE && dtor -> common . fn_flags & ZEND_ACC_DTOR		3854875	1		&&			
ANR	3857062	BitAndExpression	clone -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		3854875	0		&			
ANR	3857063	MemberAccess	clone -> common . fn_flags		3854875	0					
ANR	3857064	PtrMemberAccess	clone -> common		3854875	0					
ANR	3857065	Identifier	clone		3854875	0					
ANR	3857066	Identifier	common		3854875	1					
ANR	3857067	Identifier	fn_flags		3854875	1					
ANR	3857068	Identifier	ZEND_ACC_HAS_RETURN_TYPE		3854875	1					
ANR	3857069	BitAndExpression	dtor -> common . fn_flags & ZEND_ACC_DTOR		3854875	1		&			
ANR	3857070	MemberAccess	dtor -> common . fn_flags		3854875	0					
ANR	3857071	PtrMemberAccess	dtor -> common		3854875	0					
ANR	3857072	Identifier	dtor		3854875	0					
ANR	3857073	Identifier	common		3854875	1					
ANR	3857074	Identifier	fn_flags		3854875	1					
ANR	3857075	Identifier	ZEND_ACC_DTOR		3854875	1					
ANR	3857076	CompoundStatement		297:107:12516:12516	3854875	1					
ANR	3857077	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""%s::%s() cannot declare a return type"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( clone -> common . function_name ) )"	2411:3:71245:71381	3854875	0	True				
ANR	3857078	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""%s::%s() cannot declare a return type"" , ZSTR_VAL ( scope -> name ) , ZSTR_VAL ( clone -> common . function_name ) )"		3854875	0					
ANR	3857079	Callee	zend_error_noreturn		3854875	0					
ANR	3857080	Identifier	zend_error_noreturn		3854875	0					
ANR	3857081	ArgumentList	E_CORE_ERROR		3854875	1					
ANR	3857082	Argument	E_CORE_ERROR		3854875	0					
ANR	3857083	Identifier	E_CORE_ERROR		3854875	0					
ANR	3857084	Argument	"""%s::%s() cannot declare a return type"""		3854875	1					
ANR	3857085	PrimaryExpression	"""%s::%s() cannot declare a return type"""		3854875	0					
ANR	3857086	Argument	ZSTR_VAL ( scope -> name )		3854875	2					
ANR	3857087	CallExpression	ZSTR_VAL ( scope -> name )		3854875	0					
ANR	3857088	Callee	ZSTR_VAL		3854875	0					
ANR	3857089	Identifier	ZSTR_VAL		3854875	0					
ANR	3857090	ArgumentList	scope -> name		3854875	1					
ANR	3857091	Argument	scope -> name		3854875	0					
ANR	3857092	PtrMemberAccess	scope -> name		3854875	0					
ANR	3857093	Identifier	scope		3854875	0					
ANR	3857094	Identifier	name		3854875	1					
ANR	3857095	Argument	ZSTR_VAL ( clone -> common . function_name )		3854875	3					
ANR	3857096	CallExpression	ZSTR_VAL ( clone -> common . function_name )		3854875	0					
ANR	3857097	Callee	ZSTR_VAL		3854875	0					
ANR	3857098	Identifier	ZSTR_VAL		3854875	0					
ANR	3857099	ArgumentList	clone -> common . function_name		3854875	1					
ANR	3857100	Argument	clone -> common . function_name		3854875	0					
ANR	3857101	MemberAccess	clone -> common . function_name		3854875	0					
ANR	3857102	PtrMemberAccess	clone -> common		3854875	0					
ANR	3857103	Identifier	clone		3854875	0					
ANR	3857104	Identifier	common		3854875	1					
ANR	3857105	Identifier	function_name		3854875	1					
ANR	3857106	ExpressionStatement	efree ( ( char * ) lc_class_name )	2413:2:71389:71416	3854875	25	True				
ANR	3857107	CallExpression	efree ( ( char * ) lc_class_name )		3854875	0					
ANR	3857108	Callee	efree		3854875	0					
ANR	3857109	Identifier	efree		3854875	0					
ANR	3857110	ArgumentList	( char * ) lc_class_name		3854875	1					
ANR	3857111	Argument	( char * ) lc_class_name		3854875	0					
ANR	3857112	CastExpression	( char * ) lc_class_name		3854875	0					
ANR	3857113	CastTarget	char *		3854875	0					
ANR	3857114	Identifier	lc_class_name		3854875	1					
ANR	3857115	ReturnStatement	return SUCCESS ;	2415:1:71422:71436	3854875	20	True				
ANR	3857116	Identifier	SUCCESS		3854875	0					
ANR	3857117	ReturnType	ZEND_API int		3854875	1					
ANR	3857118	Identifier	zend_register_functions		3854875	2					
ANR	3857119	ParameterList	"zend_class_entry * scope , const zend_function_entry * functions , HashTable * function_table , int type"		3854875	3					
ANR	3857120	Parameter	zend_class_entry * scope	2113:37:58613:58635	3854875	0	True				
ANR	3857121	ParameterType	zend_class_entry *		3854875	0					
ANR	3857122	Identifier	scope		3854875	1					
ANR	3857123	Parameter	const zend_function_entry * functions	2113:62:58638:58673	3854875	1	True				
ANR	3857124	ParameterType	const zend_function_entry *		3854875	0					
ANR	3857125	Identifier	functions		3854875	1					
ANR	3857126	Parameter	HashTable * function_table	2113:100:58676:58700	3854875	2	True				
ANR	3857127	ParameterType	HashTable *		3854875	0					
ANR	3857128	Identifier	function_table		3854875	1					
ANR	3857129	Parameter	int type	2113:127:58703:58710	3854875	3	True				
ANR	3857130	ParameterType	int		3854875	0					
ANR	3857131	Identifier	type		3854875	1					
ANR	3857132	CFGEntryNode	ENTRY		3854875		True				
ANR	3857133	CFGExitNode	EXIT		3854875		True				
ANR	3857134	Symbol	zend_string_equals_literal		3854875						
ANR	3857135	Symbol	* reg_function		3854875						
ANR	3857136	Symbol	functions		3854875						
ANR	3857137	Symbol	scope -> ce_flags		3854875						
ANR	3857138	Symbol	ZEND_ACC_USE_GUARDS		3854875						
ANR	3857139	Symbol	__call -> common . fn_flags		3854875						
ANR	3857140	Symbol	type		3854875						
ANR	3857141	Symbol	__set -> common		3854875						
ANR	3857142	Symbol	__get		3854875						
ANR	3857143	Symbol	zend_string_init		3854875						
ANR	3857144	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		3854875						
ANR	3857145	Symbol	__isset -> common		3854875						
ANR	3857146	Symbol	ZEND_CLONE_FUNC_NAME		3854875						
ANR	3857147	Symbol	internal_function -> fn_flags		3854875						
ANR	3857148	Symbol	ptr -> flags		3854875						
ANR	3857149	Symbol	unload		3854875						
ANR	3857150	Symbol	ZEND_ACC_INTERFACE		3854875						
ANR	3857151	Symbol	__callstatic		3854875						
ANR	3857152	Symbol	ZEND_MAX_RESERVED_RESOURCES		3854875						
ANR	3857153	Symbol	ZEND_ACC_VARIADIC		3854875						
ANR	3857154	Symbol	ZEND_ACC_CTOR		3854875						
ANR	3857155	Symbol	* dtor		3854875						
ANR	3857156	Symbol	__unset -> common		3854875						
ANR	3857157	Symbol	scope -> constructor		3854875						
ANR	3857158	Symbol	* __debugInfo		3854875						
ANR	3857159	Symbol	__callstatic -> common . fn_flags		3854875						
ANR	3857160	Symbol	fname_len		3854875						
ANR	3857161	Symbol	ctor		3854875						
ANR	3857162	Symbol	* scope		3854875						
ANR	3857163	Symbol	clone -> common . function_name		3854875						
ANR	3857164	Symbol	function_table		3854875						
ANR	3857165	Symbol	lc_class_name		3854875						
ANR	3857166	Symbol	__tostring -> common . fn_flags		3854875						
ANR	3857167	Symbol	* * ptr		3854875						
ANR	3857168	Symbol	__unset -> common . function_name		3854875						
ANR	3857169	Symbol	scope -> __isset		3854875						
ANR	3857170	Symbol	E_CORE_WARNING		3854875						
ANR	3857171	Symbol	scope -> __debugInfo		3854875						
ANR	3857172	Symbol	ptr -> handler		3854875						
ANR	3857173	Symbol	ZEND_ACC_DTOR		3854875						
ANR	3857174	Symbol	ptr -> arg_info [ ptr -> num_args ] . is_variadic		3854875						
ANR	3857175	Symbol	~ZEND_ACC_ALLOW_STATIC		3854875						
ANR	3857176	Symbol	target_function_table		3854875						
ANR	3857177	Symbol	current_module		3854875						
ANR	3857178	Symbol	ZEND_GET_FUNC_NAME		3854875						
ANR	3857179	Symbol	ZEND_DEBUGINFO_FUNC_NAME		3854875						
ANR	3857180	Symbol	* ptr -> num_args		3854875						
ANR	3857181	Symbol	internal_function -> scope		3854875						
ANR	3857182	Symbol	E_WARNING		3854875						
ANR	3857183	Symbol	__set -> common . function_name		3854875						
ANR	3857184	Symbol	scope -> destructor		3854875						
ANR	3857185	Symbol	__get -> common . fn_flags		3854875						
ANR	3857186	Symbol	internal_function		3854875						
ANR	3857187	Symbol	& function		3854875						
ANR	3857188	Symbol	info -> required_num_args		3854875						
ANR	3857189	Symbol	ctor -> common . function_name		3854875						
ANR	3857190	Symbol	dtor		3854875						
ANR	3857191	Symbol	zend_memrchr		3854875						
ANR	3857192	Symbol	__debugInfo -> common . function_name		3854875						
ANR	3857193	Symbol	malloc		3854875						
ANR	3857194	Symbol	SUCCESS		3854875						
ANR	3857195	Symbol	CG		3854875						
ANR	3857196	Symbol	reg_function -> common . num_args		3854875						
ANR	3857197	Symbol	MODULE_PERSISTENT		3854875						
ANR	3857198	Symbol	dtor -> common		3854875						
ANR	3857199	Symbol	i		3854875						
ANR	3857200	Symbol	reg_function -> common . arg_info [ i ] . class_name		3854875						
ANR	3857201	Symbol	FAILURE		3854875						
ANR	3857202	Symbol	__callstatic -> common		3854875						
ANR	3857203	Symbol	ctor -> common . fn_flags		3854875						
ANR	3857204	Symbol	ZEND_ACC_ABSTRACT		3854875						
ANR	3857205	Symbol	__unset		3854875						
ANR	3857206	Symbol	* reg_function -> common		3854875						
ANR	3857207	Symbol	scope -> __unset		3854875						
ANR	3857208	Symbol	__debugInfo -> common . fn_flags		3854875						
ANR	3857209	Symbol	__tostring		3854875						
ANR	3857210	Symbol	* info		3854875						
ANR	3857211	Symbol	class_name_len		3854875						
ANR	3857212	Symbol	IS_OBJECT		3854875						
ANR	3857213	Symbol	internal_function -> prototype		3854875						
ANR	3857214	Symbol	internal_function -> required_num_args		3854875						
ANR	3857215	Symbol	ZEND_CALLSTATIC_FUNC_NAME		3854875						
ANR	3857216	Symbol	ZEND_CONSTRUCTOR_FUNC_NAME		3854875						
ANR	3857217	Symbol	__debugInfo		3854875						
ANR	3857218	Symbol	zend_hash_exists		3854875						
ANR	3857219	Symbol	ZEND_INTERNAL_FUNCTION		3854875						
ANR	3857220	Symbol	strlen		3854875						
ANR	3857221	Symbol	__isset		3854875						
ANR	3857222	Symbol	internal_function -> type		3854875						
ANR	3857223	Symbol	memcmp		3854875						
ANR	3857224	Symbol	ZEND_ACC_DEPRECATED		3854875						
ANR	3857225	Symbol	__tostring -> common . function_name		3854875						
ANR	3857226	Symbol	function		3854875						
ANR	3857227	Symbol	error_type		3854875						
ANR	3857228	Symbol	* ptr		3854875						
ANR	3857229	Symbol	reg_function -> common . arg_info [ i ] . type_hint		3854875						
ANR	3857230	Symbol	scope -> __callstatic		3854875						
ANR	3857231	Symbol	ZEND_ISSET_FUNC_NAME		3854875						
ANR	3857232	Symbol	strcasecmp		3854875						
ANR	3857233	Symbol	scope -> __tostring		3854875						
ANR	3857234	Symbol	__get -> common . function_name		3854875						
ANR	3857235	Symbol	__unset -> common . fn_flags		3854875						
ANR	3857236	Symbol	info		3854875						
ANR	3857237	Symbol	clone -> common . fn_flags		3854875						
ANR	3857238	Symbol	EG		3854875						
ANR	3857239	Symbol	zend_string_alloc		3854875						
ANR	3857240	Symbol	NULL		3854875						
ANR	3857241	Symbol	count		3854875						
ANR	3857242	Symbol	reg_function -> common		3854875						
ANR	3857243	Symbol	info -> return_reference		3854875						
ANR	3857244	Symbol	ptr -> num_args		3854875						
ANR	3857245	Symbol	ZEND_ACC_CLONE		3854875						
ANR	3857246	Symbol	__call -> common . function_name		3854875						
ANR	3857247	Symbol	* __callstatic		3854875						
ANR	3857248	Symbol	__debugInfo -> common		3854875						
ANR	3857249	Symbol	reg_function		3854875						
ANR	3857250	Symbol	internal_function -> function_name		3854875						
ANR	3857251	Symbol	clone -> common		3854875						
ANR	3857252	Symbol	lowercase_name		3854875						
ANR	3857253	Symbol	* * reg_function		3854875						
ANR	3857254	Symbol	ZEND_DESTRUCTOR_FUNC_NAME		3854875						
ANR	3857255	Symbol	ZEND_TOSTRING_FUNC_NAME		3854875						
ANR	3857256	Symbol	__call		3854875						
ANR	3857257	Symbol	zend_hash_add_ptr		3854875						
ANR	3857258	Symbol	ZEND_UNSET_FUNC_NAME		3854875						
ANR	3857259	Symbol	dtor -> common . fn_flags		3854875						
ANR	3857260	Symbol	* __unset		3854875						
ANR	3857261	Symbol	* __set		3854875						
ANR	3857262	Symbol	ZEND_ACC_PPP_MASK		3854875						
ANR	3857263	Symbol	internal_function -> arg_info		3854875						
ANR	3857264	Symbol	ZEND_ACC_PUBLIC		3854875						
ANR	3857265	Symbol	* __get		3854875						
ANR	3857266	Symbol	ptr -> arg_info		3854875						
ANR	3857267	Symbol	* __call		3854875						
ANR	3857268	Symbol	* __isset		3854875						
ANR	3857269	Symbol	* reg_function -> common . arg_info		3854875						
ANR	3857270	Symbol	ZEND_CALL_FUNC_NAME		3854875						
ANR	3857271	Symbol	ZEND_ACC_HAS_TYPE_HINTS		3854875						
ANR	3857272	Symbol	__callstatic -> common . function_name		3854875						
ANR	3857273	Symbol	scope -> __get		3854875						
ANR	3857274	Symbol	E_CORE_ERROR		3854875						
ANR	3857275	Symbol	scope		3854875						
ANR	3857276	Symbol	* ctor		3854875						
ANR	3857277	Symbol	* internal_function		3854875						
ANR	3857278	Symbol	ZEND_ACC_STATIC		3854875						
ANR	3857279	Symbol	__tostring -> common		3854875						
ANR	3857280	Symbol	scope -> __set		3854875						
ANR	3857281	Symbol	ZEND_SET_FUNC_NAME		3854875						
ANR	3857282	Symbol	reg_function -> common . arg_info		3854875						
ANR	3857283	Symbol	zend_str_tolower_dup		3854875						
ANR	3857284	Symbol	internal_function -> num_args		3854875						
ANR	3857285	Symbol	__set -> common . fn_flags		3854875						
ANR	3857286	Symbol	* clone		3854875						
ANR	3857287	Symbol	scope -> __call		3854875						
ANR	3857288	Symbol	info -> type_hint		3854875						
ANR	3857289	Symbol	__set		3854875						
ANR	3857290	Symbol	__isset -> common . function_name		3854875						
ANR	3857291	Symbol	ZEND_ACC_HAS_RETURN_TYPE		3854875						
ANR	3857292	Symbol	* ptr -> arg_info		3854875						
ANR	3857293	Symbol	ctor -> common		3854875						
ANR	3857294	Symbol	internal_function -> reserved		3854875						
ANR	3857295	Symbol	ptr -> fname		3854875						
ANR	3857296	Symbol	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3854875						
ANR	3857297	Symbol	dtor -> common . function_name		3854875						
ANR	3857298	Symbol	info -> class_name		3854875						
ANR	3857299	Symbol	ptr		3854875						
ANR	3857300	Symbol	ZSTR_VAL		3854875						
ANR	3857301	Symbol	* __tostring		3854875						
ANR	3857302	Symbol	__call -> common		3854875						
ANR	3857303	Symbol	zend_new_interned_string		3854875						
ANR	3857304	Symbol	* i		3854875						
ANR	3857305	Symbol	__isset -> common . fn_flags		3854875						
ANR	3857306	Symbol	scope -> name		3854875						
ANR	3857307	Symbol	clone		3854875						
ANR	3857308	Symbol	ZSTR_LEN		3854875						
ANR	3857309	Symbol	ZEND_ACC_RETURN_REFERENCE		3854875						
ANR	3857310	Symbol	reg_function -> common . fn_flags		3854875						
ANR	3857311	Symbol	scope -> clone		3854875						
ANR	3857312	Symbol	internal_function -> handler		3854875						
ANR	3857313	Symbol	internal_function -> module		3854875						
ANR	3857314	Symbol	__get -> common		3854875						
ANR	3857315	Function	zend_unregister_functions	2422:0:71540:72243							
ANR	3857316	FunctionDef	"zend_unregister_functions (const zend_function_entry * functions , int count , HashTable * function_table)"		3857315	0					
ANR	3857317	CompoundStatement		2423:0:71666:72243	3857315	0					
ANR	3857318	IdentifierDeclStatement	const zend_function_entry * ptr = functions ;	2424:1:71669:71711	3857315	0	True				
ANR	3857319	IdentifierDecl	* ptr = functions		3857315	0					
ANR	3857320	IdentifierDeclType	const zend_function_entry *		3857315	0					
ANR	3857321	Identifier	ptr		3857315	1					
ANR	3857322	AssignmentExpression	* ptr = functions		3857315	2		=			
ANR	3857323	Identifier	functions		3857315	0					
ANR	3857324	Identifier	functions		3857315	1					
ANR	3857325	IdentifierDeclStatement	int i = 0 ;	2425:1:71714:71721	3857315	1	True				
ANR	3857326	IdentifierDecl	i = 0		3857315	0					
ANR	3857327	IdentifierDeclType	int		3857315	0					
ANR	3857328	Identifier	i		3857315	1					
ANR	3857329	AssignmentExpression	i = 0		3857315	2		=			
ANR	3857330	Identifier	i		3857315	0					
ANR	3857331	PrimaryExpression	0		3857315	1					
ANR	3857332	IdentifierDeclStatement	HashTable * target_function_table = function_table ;	2426:1:71724:71773	3857315	2	True				
ANR	3857333	IdentifierDecl	* target_function_table = function_table		3857315	0					
ANR	3857334	IdentifierDeclType	HashTable *		3857315	0					
ANR	3857335	Identifier	target_function_table		3857315	1					
ANR	3857336	AssignmentExpression	* target_function_table = function_table		3857315	2		=			
ANR	3857337	Identifier	function_table		3857315	0					
ANR	3857338	Identifier	function_table		3857315	1					
ANR	3857339	IdentifierDeclStatement	zend_string * lowercase_name ;	2427:1:71776:71803	3857315	3	True				
ANR	3857340	IdentifierDecl	* lowercase_name		3857315	0					
ANR	3857341	IdentifierDeclType	zend_string *		3857315	0					
ANR	3857342	Identifier	lowercase_name		3857315	1					
ANR	3857343	IdentifierDeclStatement	size_t fname_len ;	2428:1:71806:71822	3857315	4	True				
ANR	3857344	IdentifierDecl	fname_len		3857315	0					
ANR	3857345	IdentifierDeclType	size_t		3857315	0					
ANR	3857346	Identifier	fname_len		3857315	1					
ANR	3857347	IfStatement	if ( ! target_function_table )		3857315	5					
ANR	3857348	Condition	! target_function_table	2430:5:71830:71851	3857315	0	True				
ANR	3857349	UnaryOperationExpression	! target_function_table		3857315	0					
ANR	3857350	UnaryOperator	!		3857315	0					
ANR	3857351	Identifier	target_function_table		3857315	1					
ANR	3857352	CompoundStatement		8:29:187:187	3857315	1					
ANR	3857353	ExpressionStatement	target_function_table = CG ( function_table )	2431:2:71858:71900	3857315	0	True				
ANR	3857354	AssignmentExpression	target_function_table = CG ( function_table )		3857315	0		=			
ANR	3857355	Identifier	target_function_table		3857315	0					
ANR	3857356	CallExpression	CG ( function_table )		3857315	1					
ANR	3857357	Callee	CG		3857315	0					
ANR	3857358	Identifier	CG		3857315	0					
ANR	3857359	ArgumentList	function_table		3857315	1					
ANR	3857360	Argument	function_table		3857315	0					
ANR	3857361	Identifier	function_table		3857315	0					
ANR	3857362	WhileStatement	while ( ptr -> fname )		3857315	6					
ANR	3857363	Condition	ptr -> fname	2433:8:71913:71922	3857315	0	True				
ANR	3857364	PtrMemberAccess	ptr -> fname		3857315	0					
ANR	3857365	Identifier	ptr		3857315	0					
ANR	3857366	Identifier	fname		3857315	1					
ANR	3857367	CompoundStatement		11:20:258:258	3857315	1					
ANR	3857368	IfStatement	if ( count != - 1 && i >= count )		3857315	0					
ANR	3857369	Condition	count != - 1 && i >= count	2434:6:71933:71953	3857315	0	True				
ANR	3857370	AndExpression	count != - 1 && i >= count		3857315	0		&&			
ANR	3857371	EqualityExpression	count != - 1		3857315	0		!=			
ANR	3857372	Identifier	count		3857315	0					
ANR	3857373	UnaryOperationExpression	- 1		3857315	1					
ANR	3857374	UnaryOperator	-		3857315	0					
ANR	3857375	PrimaryExpression	1		3857315	1					
ANR	3857376	RelationalExpression	i >= count		3857315	1		>=			
ANR	3857377	Identifier	i		3857315	0					
ANR	3857378	Identifier	count		3857315	1					
ANR	3857379	CompoundStatement		12:29:289:289	3857315	1					
ANR	3857380	BreakStatement	break ;	2435:3:71961:71966	3857315	0	True				
ANR	3857381	ExpressionStatement	fname_len = strlen ( ptr -> fname )	2437:2:71974:72004	3857315	1	True				
ANR	3857382	AssignmentExpression	fname_len = strlen ( ptr -> fname )		3857315	0		=			
ANR	3857383	Identifier	fname_len		3857315	0					
ANR	3857384	CallExpression	strlen ( ptr -> fname )		3857315	1					
ANR	3857385	Callee	strlen		3857315	0					
ANR	3857386	Identifier	strlen		3857315	0					
ANR	3857387	ArgumentList	ptr -> fname		3857315	1					
ANR	3857388	Argument	ptr -> fname		3857315	0					
ANR	3857389	PtrMemberAccess	ptr -> fname		3857315	0					
ANR	3857390	Identifier	ptr		3857315	0					
ANR	3857391	Identifier	fname		3857315	1					
ANR	3857392	ExpressionStatement	"lowercase_name = zend_string_alloc ( fname_len , 0 )"	2438:2:72008:72056	3857315	2	True				
ANR	3857393	AssignmentExpression	"lowercase_name = zend_string_alloc ( fname_len , 0 )"		3857315	0		=			
ANR	3857394	Identifier	lowercase_name		3857315	0					
ANR	3857395	CallExpression	"zend_string_alloc ( fname_len , 0 )"		3857315	1					
ANR	3857396	Callee	zend_string_alloc		3857315	0					
ANR	3857397	Identifier	zend_string_alloc		3857315	0					
ANR	3857398	ArgumentList	fname_len		3857315	1					
ANR	3857399	Argument	fname_len		3857315	0					
ANR	3857400	Identifier	fname_len		3857315	0					
ANR	3857401	Argument	0		3857315	1					
ANR	3857402	PrimaryExpression	0		3857315	0					
ANR	3857403	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ptr -> fname , fname_len )"	2439:2:72060:72130	3857315	3	True				
ANR	3857404	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ptr -> fname , fname_len )"		3857315	0					
ANR	3857405	Callee	zend_str_tolower_copy		3857315	0					
ANR	3857406	Identifier	zend_str_tolower_copy		3857315	0					
ANR	3857407	ArgumentList	ZSTR_VAL ( lowercase_name )		3857315	1					
ANR	3857408	Argument	ZSTR_VAL ( lowercase_name )		3857315	0					
ANR	3857409	CallExpression	ZSTR_VAL ( lowercase_name )		3857315	0					
ANR	3857410	Callee	ZSTR_VAL		3857315	0					
ANR	3857411	Identifier	ZSTR_VAL		3857315	0					
ANR	3857412	ArgumentList	lowercase_name		3857315	1					
ANR	3857413	Argument	lowercase_name		3857315	0					
ANR	3857414	Identifier	lowercase_name		3857315	0					
ANR	3857415	Argument	ptr -> fname		3857315	1					
ANR	3857416	PtrMemberAccess	ptr -> fname		3857315	0					
ANR	3857417	Identifier	ptr		3857315	0					
ANR	3857418	Identifier	fname		3857315	1					
ANR	3857419	Argument	fname_len		3857315	2					
ANR	3857420	Identifier	fname_len		3857315	0					
ANR	3857421	ExpressionStatement	"zend_hash_del ( target_function_table , lowercase_name )"	2440:2:72134:72186	3857315	4	True				
ANR	3857422	CallExpression	"zend_hash_del ( target_function_table , lowercase_name )"		3857315	0					
ANR	3857423	Callee	zend_hash_del		3857315	0					
ANR	3857424	Identifier	zend_hash_del		3857315	0					
ANR	3857425	ArgumentList	target_function_table		3857315	1					
ANR	3857426	Argument	target_function_table		3857315	0					
ANR	3857427	Identifier	target_function_table		3857315	0					
ANR	3857428	Argument	lowercase_name		3857315	1					
ANR	3857429	Identifier	lowercase_name		3857315	0					
ANR	3857430	ExpressionStatement	zend_string_free ( lowercase_name )	2441:2:72190:72222	3857315	5	True				
ANR	3857431	CallExpression	zend_string_free ( lowercase_name )		3857315	0					
ANR	3857432	Callee	zend_string_free		3857315	0					
ANR	3857433	Identifier	zend_string_free		3857315	0					
ANR	3857434	ArgumentList	lowercase_name		3857315	1					
ANR	3857435	Argument	lowercase_name		3857315	0					
ANR	3857436	Identifier	lowercase_name		3857315	0					
ANR	3857437	ExpressionStatement	ptr ++	2442:2:72226:72231	3857315	6	True				
ANR	3857438	PostIncDecOperationExpression	ptr ++		3857315	0					
ANR	3857439	Identifier	ptr		3857315	0					
ANR	3857440	IncDec	++		3857315	1					
ANR	3857441	ExpressionStatement	i ++	2443:2:72235:72238	3857315	7	True				
ANR	3857442	PostIncDecOperationExpression	i ++		3857315	0					
ANR	3857443	Identifier	i		3857315	0					
ANR	3857444	IncDec	++		3857315	1					
ANR	3857445	ReturnType	ZEND_API void		3857315	1					
ANR	3857446	Identifier	zend_unregister_functions		3857315	2					
ANR	3857447	ParameterList	"const zend_function_entry * functions , int count , HashTable * function_table"		3857315	3					
ANR	3857448	Parameter	const zend_function_entry * functions	2422:40:71580:71615	3857315	0	True				
ANR	3857449	ParameterType	const zend_function_entry *		3857315	0					
ANR	3857450	Identifier	functions		3857315	1					
ANR	3857451	Parameter	int count	2422:78:71618:71626	3857315	1	True				
ANR	3857452	ParameterType	int		3857315	0					
ANR	3857453	Identifier	count		3857315	1					
ANR	3857454	Parameter	HashTable * function_table	2422:89:71629:71653	3857315	2	True				
ANR	3857455	ParameterType	HashTable *		3857315	0					
ANR	3857456	Identifier	function_table		3857315	1					
ANR	3857457	CFGEntryNode	ENTRY		3857315		True				
ANR	3857458	CFGExitNode	EXIT		3857315		True				
ANR	3857459	Symbol	zend_string_alloc		3857315						
ANR	3857460	Symbol	functions		3857315						
ANR	3857461	Symbol	CG		3857315						
ANR	3857462	Symbol	count		3857315						
ANR	3857463	Symbol	i		3857315						
ANR	3857464	Symbol	ptr -> fname		3857315						
ANR	3857465	Symbol	target_function_table		3857315						
ANR	3857466	Symbol	ptr		3857315						
ANR	3857467	Symbol	ZSTR_VAL		3857315						
ANR	3857468	Symbol	strlen		3857315						
ANR	3857469	Symbol	* ptr		3857315						
ANR	3857470	Symbol	lowercase_name		3857315						
ANR	3857471	Symbol	fname_len		3857315						
ANR	3857472	Symbol	function_table		3857315						
ANR	3857473	Function	zend_startup_module	2448:0:72256:72476							
ANR	3857474	FunctionDef	zend_startup_module (zend_module_entry * module)		3857473	0					
ANR	3857475	CompoundStatement		2449:0:72326:72476	3857473	0					
ANR	3857476	IfStatement	if ( ( module = zend_register_internal_module ( module ) ) != NULL && zend_startup_module_ex ( module ) == SUCCESS )		3857473	0					
ANR	3857477	Condition	( module = zend_register_internal_module ( module ) ) != NULL && zend_startup_module_ex ( module ) == SUCCESS	2450:5:72333:72433	3857473	0	True				
ANR	3857478	AndExpression	( module = zend_register_internal_module ( module ) ) != NULL && zend_startup_module_ex ( module ) == SUCCESS		3857473	0		&&			
ANR	3857479	EqualityExpression	( module = zend_register_internal_module ( module ) ) != NULL		3857473	0		!=			
ANR	3857480	AssignmentExpression	module = zend_register_internal_module ( module )		3857473	0		=			
ANR	3857481	Identifier	module		3857473	0					
ANR	3857482	CallExpression	zend_register_internal_module ( module )		3857473	1					
ANR	3857483	Callee	zend_register_internal_module		3857473	0					
ANR	3857484	Identifier	zend_register_internal_module		3857473	0					
ANR	3857485	ArgumentList	module		3857473	1					
ANR	3857486	Argument	module		3857473	0					
ANR	3857487	Identifier	module		3857473	0					
ANR	3857488	Identifier	NULL		3857473	1					
ANR	3857489	EqualityExpression	zend_startup_module_ex ( module ) == SUCCESS		3857473	1		==			
ANR	3857490	CallExpression	zend_startup_module_ex ( module )		3857473	0					
ANR	3857491	Callee	zend_startup_module_ex		3857473	0					
ANR	3857492	Identifier	zend_startup_module_ex		3857473	0					
ANR	3857493	ArgumentList	module		3857473	1					
ANR	3857494	Argument	module		3857473	0					
ANR	3857495	Identifier	module		3857473	0					
ANR	3857496	Identifier	SUCCESS		3857473	1					
ANR	3857497	CompoundStatement		2:108:109:109	3857473	1					
ANR	3857498	ReturnStatement	return SUCCESS ;	2451:2:72440:72454	3857473	0	True				
ANR	3857499	Identifier	SUCCESS		3857473	0					
ANR	3857500	ReturnStatement	return FAILURE ;	2453:1:72460:72474	3857473	1	True				
ANR	3857501	Identifier	FAILURE		3857473	0					
ANR	3857502	ReturnType	ZEND_API int		3857473	1					
ANR	3857503	Identifier	zend_startup_module		3857473	2					
ANR	3857504	ParameterList	zend_module_entry * module		3857473	3					
ANR	3857505	Parameter	zend_module_entry * module	2448:33:72289:72313	3857473	0	True				
ANR	3857506	ParameterType	zend_module_entry *		3857473	0					
ANR	3857507	Identifier	module		3857473	1					
ANR	3857508	CFGEntryNode	ENTRY		3857473		True				
ANR	3857509	CFGExitNode	EXIT		3857473		True				
ANR	3857510	Symbol	SUCCESS		3857473						
ANR	3857511	Symbol	NULL		3857473						
ANR	3857512	Symbol	module		3857473						
ANR	3857513	Symbol	zend_register_internal_module		3857473						
ANR	3857514	Symbol	FAILURE		3857473						
ANR	3857515	Symbol	zend_startup_module_ex		3857473						
ANR	3857516	Function	zend_get_module_started	2457:0:72489:72742							
ANR	3857517	FunctionDef	zend_get_module_started (const char * module_name)		3857516	0					
ANR	3857518	CompoundStatement		2458:0:72561:72742	3857516	0					
ANR	3857519	IdentifierDeclStatement	zend_module_entry * module ;	2459:1:72564:72589	3857516	0	True				
ANR	3857520	IdentifierDecl	* module		3857516	0					
ANR	3857521	IdentifierDeclType	zend_module_entry *		3857516	0					
ANR	3857522	Identifier	module		3857516	1					
ANR	3857523	ExpressionStatement	"module = zend_hash_str_find_ptr ( & module_registry , module_name , strlen ( module_name ) )"	2461:1:72593:72676	3857516	1	True				
ANR	3857524	AssignmentExpression	"module = zend_hash_str_find_ptr ( & module_registry , module_name , strlen ( module_name ) )"		3857516	0		=			
ANR	3857525	Identifier	module		3857516	0					
ANR	3857526	CallExpression	"zend_hash_str_find_ptr ( & module_registry , module_name , strlen ( module_name ) )"		3857516	1					
ANR	3857527	Callee	zend_hash_str_find_ptr		3857516	0					
ANR	3857528	Identifier	zend_hash_str_find_ptr		3857516	0					
ANR	3857529	ArgumentList	& module_registry		3857516	1					
ANR	3857530	Argument	& module_registry		3857516	0					
ANR	3857531	UnaryOperationExpression	& module_registry		3857516	0					
ANR	3857532	UnaryOperator	&		3857516	0					
ANR	3857533	Identifier	module_registry		3857516	1					
ANR	3857534	Argument	module_name		3857516	1					
ANR	3857535	Identifier	module_name		3857516	0					
ANR	3857536	Argument	strlen ( module_name )		3857516	2					
ANR	3857537	CallExpression	strlen ( module_name )		3857516	0					
ANR	3857538	Callee	strlen		3857516	0					
ANR	3857539	Identifier	strlen		3857516	0					
ANR	3857540	ArgumentList	module_name		3857516	1					
ANR	3857541	Argument	module_name		3857516	0					
ANR	3857542	Identifier	module_name		3857516	0					
ANR	3857543	ReturnStatement	return ( module && module -> module_started ) ? SUCCESS : FAILURE ;	2462:1:72679:72740	3857516	2	True				
ANR	3857544	ConditionalExpression	( module && module -> module_started ) ? SUCCESS : FAILURE		3857516	0					
ANR	3857545	Condition	module && module -> module_started		3857516	0					
ANR	3857546	AndExpression	module && module -> module_started		3857516	0		&&			
ANR	3857547	Identifier	module		3857516	0					
ANR	3857548	PtrMemberAccess	module -> module_started		3857516	1					
ANR	3857549	Identifier	module		3857516	0					
ANR	3857550	Identifier	module_started		3857516	1					
ANR	3857551	Identifier	SUCCESS		3857516	1					
ANR	3857552	Identifier	FAILURE		3857516	2					
ANR	3857553	ReturnType	ZEND_API int		3857516	1					
ANR	3857554	Identifier	zend_get_module_started		3857516	2					
ANR	3857555	ParameterList	const char * module_name		3857516	3					
ANR	3857556	Parameter	const char * module_name	2457:37:72526:72548	3857516	0	True				
ANR	3857557	ParameterType	const char *		3857516	0					
ANR	3857558	Identifier	module_name		3857516	1					
ANR	3857559	CFGEntryNode	ENTRY		3857516		True				
ANR	3857560	CFGExitNode	EXIT		3857516		True				
ANR	3857561	Symbol	strlen		3857516						
ANR	3857562	Symbol	module -> module_started		3857516						
ANR	3857563	Symbol	SUCCESS		3857516						
ANR	3857564	Symbol	* module		3857516						
ANR	3857565	Symbol	module		3857516						
ANR	3857566	Symbol	& module_registry		3857516						
ANR	3857567	Symbol	zend_hash_str_find_ptr		3857516						
ANR	3857568	Symbol	module_name		3857516						
ANR	3857569	Symbol	FAILURE		3857516						
ANR	3857570	Function	clean_module_class	2466:0:72755:73086							
ANR	3857571	FunctionDef	"clean_module_class (zval * el , void * arg)"		3857570	0					
ANR	3857572	CompoundStatement		2467:0:72816:73086	3857570	0					
ANR	3857573	IdentifierDeclStatement	zend_class_entry * ce = ( zend_class_entry * ) Z_PTR_P ( el ) ;	2468:1:72819:72873	3857570	0	True				
ANR	3857574	IdentifierDecl	* ce = ( zend_class_entry * ) Z_PTR_P ( el )		3857570	0					
ANR	3857575	IdentifierDeclType	zend_class_entry *		3857570	0					
ANR	3857576	Identifier	ce		3857570	1					
ANR	3857577	AssignmentExpression	* ce = ( zend_class_entry * ) Z_PTR_P ( el )		3857570	2		=			
ANR	3857578	Identifier	ce		3857570	0					
ANR	3857579	CastExpression	( zend_class_entry * ) Z_PTR_P ( el )		3857570	1					
ANR	3857580	CastTarget	zend_class_entry *		3857570	0					
ANR	3857581	CallExpression	Z_PTR_P ( el )		3857570	1					
ANR	3857582	Callee	Z_PTR_P		3857570	0					
ANR	3857583	Identifier	Z_PTR_P		3857570	0					
ANR	3857584	ArgumentList	el		3857570	1					
ANR	3857585	Argument	el		3857570	0					
ANR	3857586	Identifier	el		3857570	0					
ANR	3857587	IdentifierDeclStatement	int module_number = * ( int * ) arg ;	2469:1:72876:72907	3857570	1	True				
ANR	3857588	IdentifierDecl	module_number = * ( int * ) arg		3857570	0					
ANR	3857589	IdentifierDeclType	int		3857570	0					
ANR	3857590	Identifier	module_number		3857570	1					
ANR	3857591	AssignmentExpression	module_number = * ( int * ) arg		3857570	2		=			
ANR	3857592	Identifier	module_number		3857570	0					
ANR	3857593	UnaryOperationExpression	* ( int * ) arg		3857570	1					
ANR	3857594	UnaryOperator	*		3857570	0					
ANR	3857595	CastExpression	( int * ) arg		3857570	1					
ANR	3857596	CastTarget	int *		3857570	0					
ANR	3857597	Identifier	arg		3857570	1					
ANR	3857598	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> module_number == module_number )		3857570	2					
ANR	3857599	Condition	ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> module_number == module_number	2470:5:72914:73004	3857570	0	True				
ANR	3857600	AndExpression	ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> module_number == module_number		3857570	0		&&			
ANR	3857601	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3857570	0		==			
ANR	3857602	PtrMemberAccess	ce -> type		3857570	0					
ANR	3857603	Identifier	ce		3857570	0					
ANR	3857604	Identifier	type		3857570	1					
ANR	3857605	Identifier	ZEND_INTERNAL_CLASS		3857570	1					
ANR	3857606	EqualityExpression	ce -> info . internal . module -> module_number == module_number		3857570	1		==			
ANR	3857607	PtrMemberAccess	ce -> info . internal . module -> module_number		3857570	0					
ANR	3857608	MemberAccess	ce -> info . internal . module		3857570	0					
ANR	3857609	MemberAccess	ce -> info . internal		3857570	0					
ANR	3857610	PtrMemberAccess	ce -> info		3857570	0					
ANR	3857611	Identifier	ce		3857570	0					
ANR	3857612	Identifier	info		3857570	1					
ANR	3857613	Identifier	internal		3857570	1					
ANR	3857614	Identifier	module		3857570	1					
ANR	3857615	Identifier	module_number		3857570	1					
ANR	3857616	Identifier	module_number		3857570	1					
ANR	3857617	CompoundStatement		4:98:190:190	3857570	1					
ANR	3857618	ReturnStatement	return ZEND_HASH_APPLY_REMOVE ;	2471:2:73011:73040	3857570	0	True				
ANR	3857619	Identifier	ZEND_HASH_APPLY_REMOVE		3857570	0					
ANR	3857620	ElseStatement	else		3857570	0					
ANR	3857621	CompoundStatement		6:8:233:233	3857570	0					
ANR	3857622	ReturnStatement	return ZEND_HASH_APPLY_KEEP ;	2473:2:73054:73081	3857570	0	True				
ANR	3857623	Identifier	ZEND_HASH_APPLY_KEEP		3857570	0					
ANR	3857624	ReturnType	static int		3857570	1					
ANR	3857625	Identifier	clean_module_class		3857570	2					
ANR	3857626	ParameterList	"zval * el , void * arg"		3857570	3					
ANR	3857627	Parameter	zval * el	2466:30:72785:72792	3857570	0	True				
ANR	3857628	ParameterType	zval *		3857570	0					
ANR	3857629	Identifier	el		3857570	1					
ANR	3857630	Parameter	void * arg	2466:40:72795:72803	3857570	1	True				
ANR	3857631	ParameterType	void *		3857570	0					
ANR	3857632	Identifier	arg		3857570	1					
ANR	3857633	CFGEntryNode	ENTRY		3857570		True				
ANR	3857634	CFGExitNode	EXIT		3857570		True				
ANR	3857635	Symbol	ZEND_INTERNAL_CLASS		3857570						
ANR	3857636	Symbol	Z_PTR_P		3857570						
ANR	3857637	Symbol	ce -> type		3857570						
ANR	3857638	Symbol	ce		3857570						
ANR	3857639	Symbol	el		3857570						
ANR	3857640	Symbol	ce -> info . internal . module		3857570						
ANR	3857641	Symbol	module_number		3857570						
ANR	3857642	Symbol	* ce -> info . internal . module		3857570						
ANR	3857643	Symbol	* ce		3857570						
ANR	3857644	Symbol	* * ce		3857570						
ANR	3857645	Symbol	ZEND_HASH_APPLY_KEEP		3857570						
ANR	3857646	Symbol	* ce -> info . internal		3857570						
ANR	3857647	Symbol	ce -> info . internal . module -> module_number		3857570						
ANR	3857648	Symbol	* ce -> info		3857570						
ANR	3857649	Symbol	* ( int * ) arg		3857570						
ANR	3857650	Symbol	arg		3857570						
ANR	3857651	Symbol	ce -> info		3857570						
ANR	3857652	Symbol	ZEND_HASH_APPLY_REMOVE		3857570						
ANR	3857653	Symbol	ce -> info . internal		3857570						
ANR	3857654	Symbol	* arg		3857570						
ANR	3857655	Function	clean_module_classes	2478:0:73099:73257							
ANR	3857656	FunctionDef	clean_module_classes (int module_number)		3857655	0					
ANR	3857657	CompoundStatement		2479:0:73161:73257	3857655	0					
ANR	3857658	ExpressionStatement	"zend_hash_apply_with_argument ( EG ( class_table ) , clean_module_class , ( void * ) & module_number )"	2480:1:73164:73255	3857655	0	True				
ANR	3857659	CallExpression	"zend_hash_apply_with_argument ( EG ( class_table ) , clean_module_class , ( void * ) & module_number )"		3857655	0					
ANR	3857660	Callee	zend_hash_apply_with_argument		3857655	0					
ANR	3857661	Identifier	zend_hash_apply_with_argument		3857655	0					
ANR	3857662	ArgumentList	EG ( class_table )		3857655	1					
ANR	3857663	Argument	EG ( class_table )		3857655	0					
ANR	3857664	CallExpression	EG ( class_table )		3857655	0					
ANR	3857665	Callee	EG		3857655	0					
ANR	3857666	Identifier	EG		3857655	0					
ANR	3857667	ArgumentList	class_table		3857655	1					
ANR	3857668	Argument	class_table		3857655	0					
ANR	3857669	Identifier	class_table		3857655	0					
ANR	3857670	Argument	clean_module_class		3857655	1					
ANR	3857671	Identifier	clean_module_class		3857655	0					
ANR	3857672	Argument	( void * ) & module_number		3857655	2					
ANR	3857673	CastExpression	( void * ) & module_number		3857655	0					
ANR	3857674	CastTarget	void *		3857655	0					
ANR	3857675	UnaryOperationExpression	& module_number		3857655	1					
ANR	3857676	UnaryOperator	&		3857655	0					
ANR	3857677	Identifier	module_number		3857655	1					
ANR	3857678	ReturnType	static void		3857655	1					
ANR	3857679	Identifier	clean_module_classes		3857655	2					
ANR	3857680	ParameterList	int module_number		3857655	3					
ANR	3857681	Parameter	int module_number	2478:33:73132:73148	3857655	0	True				
ANR	3857682	ParameterType	int		3857655	0					
ANR	3857683	Identifier	module_number		3857655	1					
ANR	3857684	CFGEntryNode	ENTRY		3857655		True				
ANR	3857685	CFGExitNode	EXIT		3857655		True				
ANR	3857686	Symbol	clean_module_class		3857655						
ANR	3857687	Symbol	& module_number		3857655						
ANR	3857688	Symbol	EG		3857655						
ANR	3857689	Symbol	module_number		3857655						
ANR	3857690	Symbol	class_table		3857655						
ANR	3857691	Function	module_destructor	2484:0:73270:74270							
ANR	3857692	FunctionDef	module_destructor (zend_module_entry * module)		3857691	0					
ANR	3857693	CompoundStatement		2485:0:73330:74270	3857691	0					
ANR	3857694	IfStatement	if ( module -> type == MODULE_TEMPORARY )		3857691	0					
ANR	3857695	Condition	module -> type == MODULE_TEMPORARY	2487:5:73338:73369	3857691	0	True				
ANR	3857696	EqualityExpression	module -> type == MODULE_TEMPORARY		3857691	0		==			
ANR	3857697	PtrMemberAccess	module -> type		3857691	0					
ANR	3857698	Identifier	module		3857691	0					
ANR	3857699	Identifier	type		3857691	1					
ANR	3857700	Identifier	MODULE_TEMPORARY		3857691	1					
ANR	3857701	CompoundStatement		3:39:41:41	3857691	1					
ANR	3857702	ExpressionStatement	zend_clean_module_rsrc_dtors ( module -> module_number )	2488:2:73376:73427	3857691	0	True				
ANR	3857703	CallExpression	zend_clean_module_rsrc_dtors ( module -> module_number )		3857691	0					
ANR	3857704	Callee	zend_clean_module_rsrc_dtors		3857691	0					
ANR	3857705	Identifier	zend_clean_module_rsrc_dtors		3857691	0					
ANR	3857706	ArgumentList	module -> module_number		3857691	1					
ANR	3857707	Argument	module -> module_number		3857691	0					
ANR	3857708	PtrMemberAccess	module -> module_number		3857691	0					
ANR	3857709	Identifier	module		3857691	0					
ANR	3857710	Identifier	module_number		3857691	1					
ANR	3857711	ExpressionStatement	clean_module_constants ( module -> module_number )	2489:2:73431:73476	3857691	1	True				
ANR	3857712	CallExpression	clean_module_constants ( module -> module_number )		3857691	0					
ANR	3857713	Callee	clean_module_constants		3857691	0					
ANR	3857714	Identifier	clean_module_constants		3857691	0					
ANR	3857715	ArgumentList	module -> module_number		3857691	1					
ANR	3857716	Argument	module -> module_number		3857691	0					
ANR	3857717	PtrMemberAccess	module -> module_number		3857691	0					
ANR	3857718	Identifier	module		3857691	0					
ANR	3857719	Identifier	module_number		3857691	1					
ANR	3857720	ExpressionStatement	clean_module_classes ( module -> module_number )	2490:2:73480:73523	3857691	2	True				
ANR	3857721	CallExpression	clean_module_classes ( module -> module_number )		3857691	0					
ANR	3857722	Callee	clean_module_classes		3857691	0					
ANR	3857723	Identifier	clean_module_classes		3857691	0					
ANR	3857724	ArgumentList	module -> module_number		3857691	1					
ANR	3857725	Argument	module -> module_number		3857691	0					
ANR	3857726	PtrMemberAccess	module -> module_number		3857691	0					
ANR	3857727	Identifier	module		3857691	0					
ANR	3857728	Identifier	module_number		3857691	1					
ANR	3857729	IfStatement	if ( module -> module_started && module -> module_shutdown_func )		3857691	1					
ANR	3857730	Condition	module -> module_started && module -> module_shutdown_func	2493:5:73534:73587	3857691	0	True				
ANR	3857731	AndExpression	module -> module_started && module -> module_shutdown_func		3857691	0		&&			
ANR	3857732	PtrMemberAccess	module -> module_started		3857691	0					
ANR	3857733	Identifier	module		3857691	0					
ANR	3857734	Identifier	module_started		3857691	1					
ANR	3857735	PtrMemberAccess	module -> module_shutdown_func		3857691	1					
ANR	3857736	Identifier	module		3857691	0					
ANR	3857737	Identifier	module_shutdown_func		3857691	1					
ANR	3857738	CompoundStatement		9:61:259:259	3857691	1					
ANR	3857739	ExpressionStatement	"zend_printf ( ""%s: Module shutdown\\n"" , module -> name )"	2495:2:73600:73650	3857691	0	True				
ANR	3857740	CallExpression	"zend_printf ( ""%s: Module shutdown\\n"" , module -> name )"		3857691	0					
ANR	3857741	Callee	zend_printf		3857691	0					
ANR	3857742	Identifier	zend_printf		3857691	0					
ANR	3857743	ArgumentList	"""%s: Module shutdown\\n"""		3857691	1					
ANR	3857744	Argument	"""%s: Module shutdown\\n"""		3857691	0					
ANR	3857745	PrimaryExpression	"""%s: Module shutdown\\n"""		3857691	0					
ANR	3857746	Argument	module -> name		3857691	1					
ANR	3857747	PtrMemberAccess	module -> name		3857691	0					
ANR	3857748	Identifier	module		3857691	0					
ANR	3857749	Identifier	name		3857691	1					
ANR	3857750	ExpressionStatement	"module -> module_shutdown_func ( module -> type , module -> module_number )"	2497:2:73661:73726	3857691	1	True				
ANR	3857751	CallExpression	"module -> module_shutdown_func ( module -> type , module -> module_number )"		3857691	0					
ANR	3857752	Callee	module -> module_shutdown_func		3857691	0					
ANR	3857753	PtrMemberAccess	module -> module_shutdown_func		3857691	0					
ANR	3857754	Identifier	module		3857691	0					
ANR	3857755	Identifier	module_shutdown_func		3857691	1					
ANR	3857756	ArgumentList	module -> type		3857691	1					
ANR	3857757	Argument	module -> type		3857691	0					
ANR	3857758	PtrMemberAccess	module -> type		3857691	0					
ANR	3857759	Identifier	module		3857691	0					
ANR	3857760	Identifier	type		3857691	1					
ANR	3857761	Argument	module -> module_number		3857691	1					
ANR	3857762	PtrMemberAccess	module -> module_number		3857691	0					
ANR	3857763	Identifier	module		3857691	0					
ANR	3857764	Identifier	module_number		3857691	1					
ANR	3857765	IfStatement	if ( module -> globals_size )		3857691	2					
ANR	3857766	Condition	module -> globals_size	2501:5:73772:73791	3857691	0	True				
ANR	3857767	PtrMemberAccess	module -> globals_size		3857691	0					
ANR	3857768	Identifier	module		3857691	0					
ANR	3857769	Identifier	globals_size		3857691	1					
ANR	3857770	CompoundStatement		17:27:463:463	3857691	1					
ANR	3857771	IfStatement	if ( * module -> globals_id_ptr )		3857691	0					
ANR	3857772	Condition	* module -> globals_id_ptr	2503:6:73813:73835	3857691	0	True				
ANR	3857773	UnaryOperationExpression	* module -> globals_id_ptr		3857691	0					
ANR	3857774	UnaryOperator	*		3857691	0					
ANR	3857775	PtrMemberAccess	module -> globals_id_ptr		3857691	1					
ANR	3857776	Identifier	module		3857691	0					
ANR	3857777	Identifier	globals_id_ptr		3857691	1					
ANR	3857778	CompoundStatement		19:31:507:507	3857691	1					
ANR	3857779	ExpressionStatement	ts_free_id ( * module -> globals_id_ptr )	2504:3:73843:73878	3857691	0	True				
ANR	3857780	CallExpression	ts_free_id ( * module -> globals_id_ptr )		3857691	0					
ANR	3857781	Callee	ts_free_id		3857691	0					
ANR	3857782	Identifier	ts_free_id		3857691	0					
ANR	3857783	ArgumentList	* module -> globals_id_ptr		3857691	1					
ANR	3857784	Argument	* module -> globals_id_ptr		3857691	0					
ANR	3857785	UnaryOperationExpression	* module -> globals_id_ptr		3857691	0					
ANR	3857786	UnaryOperator	*		3857691	0					
ANR	3857787	PtrMemberAccess	module -> globals_id_ptr		3857691	1					
ANR	3857788	Identifier	module		3857691	0					
ANR	3857789	Identifier	globals_id_ptr		3857691	1					
ANR	3857790	ExpressionStatement	module -> module_started = 0	2513:1:73982:74006	3857691	3	True				
ANR	3857791	AssignmentExpression	module -> module_started = 0		3857691	0		=			
ANR	3857792	PtrMemberAccess	module -> module_started		3857691	0					
ANR	3857793	Identifier	module		3857691	0					
ANR	3857794	Identifier	module_started		3857691	1					
ANR	3857795	PrimaryExpression	0		3857691	1					
ANR	3857796	IfStatement	if ( module -> functions )		3857691	4					
ANR	3857797	Condition	module -> functions	2514:5:74013:74029	3857691	0	True				
ANR	3857798	PtrMemberAccess	module -> functions		3857691	0					
ANR	3857799	Identifier	module		3857691	0					
ANR	3857800	Identifier	functions		3857691	1					
ANR	3857801	CompoundStatement		30:24:701:701	3857691	1					
ANR	3857802	ExpressionStatement	"zend_unregister_functions ( module -> functions , - 1 , NULL )"	2515:2:74036:74090	3857691	0	True				
ANR	3857803	CallExpression	"zend_unregister_functions ( module -> functions , - 1 , NULL )"		3857691	0					
ANR	3857804	Callee	zend_unregister_functions		3857691	0					
ANR	3857805	Identifier	zend_unregister_functions		3857691	0					
ANR	3857806	ArgumentList	module -> functions		3857691	1					
ANR	3857807	Argument	module -> functions		3857691	0					
ANR	3857808	PtrMemberAccess	module -> functions		3857691	0					
ANR	3857809	Identifier	module		3857691	0					
ANR	3857810	Identifier	functions		3857691	1					
ANR	3857811	Argument	- 1		3857691	1					
ANR	3857812	UnaryOperationExpression	- 1		3857691	0					
ANR	3857813	UnaryOperator	-		3857691	0					
ANR	3857814	PrimaryExpression	1		3857691	1					
ANR	3857815	Argument	NULL		3857691	2					
ANR	3857816	Identifier	NULL		3857691	0					
ANR	3857817	IfStatement	"if ( module -> handle && ! getenv ( ""ZEND_DONT_UNLOAD_MODULES"" ) )"		3857691	5					
ANR	3857818	Condition	"module -> handle && ! getenv ( ""ZEND_DONT_UNLOAD_MODULES"" )"	2520:5:74167:74219	3857691	0	True				
ANR	3857819	AndExpression	"module -> handle && ! getenv ( ""ZEND_DONT_UNLOAD_MODULES"" )"		3857691	0		&&			
ANR	3857820	PtrMemberAccess	module -> handle		3857691	0					
ANR	3857821	Identifier	module		3857691	0					
ANR	3857822	Identifier	handle		3857691	1					
ANR	3857823	UnaryOperationExpression	"! getenv ( ""ZEND_DONT_UNLOAD_MODULES"" )"		3857691	1					
ANR	3857824	UnaryOperator	!		3857691	0					
ANR	3857825	CallExpression	"getenv ( ""ZEND_DONT_UNLOAD_MODULES"" )"		3857691	1					
ANR	3857826	Callee	getenv		3857691	0					
ANR	3857827	Identifier	getenv		3857691	0					
ANR	3857828	ArgumentList	"""ZEND_DONT_UNLOAD_MODULES"""		3857691	1					
ANR	3857829	Argument	"""ZEND_DONT_UNLOAD_MODULES"""		3857691	0					
ANR	3857830	PrimaryExpression	"""ZEND_DONT_UNLOAD_MODULES"""		3857691	0					
ANR	3857831	CompoundStatement		36:60:891:891	3857691	1					
ANR	3857832	ExpressionStatement	DL_UNLOAD ( module -> handle )	2521:2:74226:74251	3857691	0	True				
ANR	3857833	CallExpression	DL_UNLOAD ( module -> handle )		3857691	0					
ANR	3857834	Callee	DL_UNLOAD		3857691	0					
ANR	3857835	Identifier	DL_UNLOAD		3857691	0					
ANR	3857836	ArgumentList	module -> handle		3857691	1					
ANR	3857837	Argument	module -> handle		3857691	0					
ANR	3857838	PtrMemberAccess	module -> handle		3857691	0					
ANR	3857839	Identifier	module		3857691	0					
ANR	3857840	Identifier	handle		3857691	1					
ANR	3857841	ReturnType	void		3857691	1					
ANR	3857842	Identifier	module_destructor		3857691	2					
ANR	3857843	ParameterList	zend_module_entry * module		3857691	3					
ANR	3857844	Parameter	zend_module_entry * module	2484:23:73293:73317	3857691	0	True				
ANR	3857845	ParameterType	zend_module_entry *		3857691	0					
ANR	3857846	Identifier	module		3857691	1					
ANR	3857847	CFGEntryNode	ENTRY		3857691		True				
ANR	3857848	CFGExitNode	EXIT		3857691		True				
ANR	3857849	Symbol	module -> module_started		3857691						
ANR	3857850	Symbol	module -> name		3857691						
ANR	3857851	Symbol	NULL		3857691						
ANR	3857852	Symbol	module -> globals_size		3857691						
ANR	3857853	Symbol	* module		3857691						
ANR	3857854	Symbol	* * module		3857691						
ANR	3857855	Symbol	module		3857691						
ANR	3857856	Symbol	module -> functions		3857691						
ANR	3857857	Symbol	module -> module_number		3857691						
ANR	3857858	Symbol	module -> handle		3857691						
ANR	3857859	Symbol	MODULE_TEMPORARY		3857691						
ANR	3857860	Symbol	module -> globals_id_ptr		3857691						
ANR	3857861	Symbol	module -> module_shutdown_func		3857691						
ANR	3857862	Symbol	module -> type		3857691						
ANR	3857863	Symbol	* module -> globals_id_ptr		3857691						
ANR	3857864	Symbol	getenv		3857691						
ANR	3857865	Function	zend_activate_modules	2528:0:74283:74637							
ANR	3857866	FunctionDef	zend_activate_modules ()		3857865	0					
ANR	3857867	CompoundStatement		2529:0:74335:74637	3857865	0					
ANR	3857868	IdentifierDeclStatement	zend_module_entry * * p = module_request_startup_handlers ;	2530:1:74338:74393	3857865	0	True				
ANR	3857869	IdentifierDecl	* * p = module_request_startup_handlers		3857865	0					
ANR	3857870	IdentifierDeclType	zend_module_entry * *		3857865	0					
ANR	3857871	Identifier	p		3857865	1					
ANR	3857872	AssignmentExpression	* * p = module_request_startup_handlers		3857865	2		=			
ANR	3857873	Identifier	module_request_startup_handlers		3857865	0					
ANR	3857874	Identifier	module_request_startup_handlers		3857865	1					
ANR	3857875	WhileStatement	while ( * p )		3857865	1					
ANR	3857876	Condition	* p	2532:8:74404:74405	3857865	0	True				
ANR	3857877	UnaryOperationExpression	* p		3857865	0					
ANR	3857878	UnaryOperator	*		3857865	0					
ANR	3857879	Identifier	p		3857865	1					
ANR	3857880	CompoundStatement		5:2:76:106	3857865	1					
ANR	3857881	IdentifierDeclStatement	zend_module_entry * module = * p ;	2533:2:74412:74442	3857865	0	True				
ANR	3857882	IdentifierDecl	* module = * p		3857865	0					
ANR	3857883	IdentifierDeclType	zend_module_entry *		3857865	0					
ANR	3857884	Identifier	module		3857865	1					
ANR	3857885	AssignmentExpression	* module = * p		3857865	2		=			
ANR	3857886	Identifier	module		3857865	0					
ANR	3857887	UnaryOperationExpression	* p		3857865	1					
ANR	3857888	UnaryOperator	*		3857865	0					
ANR	3857889	Identifier	p		3857865	1					
ANR	3857890	IfStatement	"if ( module -> request_startup_func ( module -> type , module -> module_number ) == FAILURE )"		3857865	1					
ANR	3857891	Condition	"module -> request_startup_func ( module -> type , module -> module_number ) == FAILURE"	2535:6:74451:74524	3857865	0	True				
ANR	3857892	EqualityExpression	"module -> request_startup_func ( module -> type , module -> module_number ) == FAILURE"		3857865	0		==			
ANR	3857893	CallExpression	"module -> request_startup_func ( module -> type , module -> module_number )"		3857865	0					
ANR	3857894	Callee	module -> request_startup_func		3857865	0					
ANR	3857895	PtrMemberAccess	module -> request_startup_func		3857865	0					
ANR	3857896	Identifier	module		3857865	0					
ANR	3857897	Identifier	request_startup_func		3857865	1					
ANR	3857898	ArgumentList	module -> type		3857865	1					
ANR	3857899	Argument	module -> type		3857865	0					
ANR	3857900	PtrMemberAccess	module -> type		3857865	0					
ANR	3857901	Identifier	module		3857865	0					
ANR	3857902	Identifier	type		3857865	1					
ANR	3857903	Argument	module -> module_number		3857865	1					
ANR	3857904	PtrMemberAccess	module -> module_number		3857865	0					
ANR	3857905	Identifier	module		3857865	0					
ANR	3857906	Identifier	module_number		3857865	1					
ANR	3857907	Identifier	FAILURE		3857865	1					
ANR	3857908	CompoundStatement		7:82:191:191	3857865	1					
ANR	3857909	ExpressionStatement	"zend_error ( E_WARNING , ""request_startup() for %s module failed"" , module -> name )"	2536:3:74532:74609	3857865	0	True				
ANR	3857910	CallExpression	"zend_error ( E_WARNING , ""request_startup() for %s module failed"" , module -> name )"		3857865	0					
ANR	3857911	Callee	zend_error		3857865	0					
ANR	3857912	Identifier	zend_error		3857865	0					
ANR	3857913	ArgumentList	E_WARNING		3857865	1					
ANR	3857914	Argument	E_WARNING		3857865	0					
ANR	3857915	Identifier	E_WARNING		3857865	0					
ANR	3857916	Argument	"""request_startup() for %s module failed"""		3857865	1					
ANR	3857917	PrimaryExpression	"""request_startup() for %s module failed"""		3857865	0					
ANR	3857918	Argument	module -> name		3857865	2					
ANR	3857919	PtrMemberAccess	module -> name		3857865	0					
ANR	3857920	Identifier	module		3857865	0					
ANR	3857921	Identifier	name		3857865	1					
ANR	3857922	ExpressionStatement	exit ( 1 )	2537:3:74614:74621	3857865	1	True				
ANR	3857923	CallExpression	exit ( 1 )		3857865	0					
ANR	3857924	Callee	exit		3857865	0					
ANR	3857925	Identifier	exit		3857865	0					
ANR	3857926	ArgumentList	1		3857865	1					
ANR	3857927	Argument	1		3857865	0					
ANR	3857928	PrimaryExpression	1		3857865	0					
ANR	3857929	ExpressionStatement	p ++	2539:2:74629:74632	3857865	2	True				
ANR	3857930	PostIncDecOperationExpression	p ++		3857865	0					
ANR	3857931	Identifier	p		3857865	0					
ANR	3857932	IncDec	++		3857865	1					
ANR	3857933	ReturnType	ZEND_API void		3857865	1					
ANR	3857934	Identifier	zend_activate_modules		3857865	2					
ANR	3857935	ParameterList			3857865	3					
ANR	3857936	CFGEntryNode	ENTRY		3857865		True				
ANR	3857937	CFGExitNode	EXIT		3857865		True				
ANR	3857938	Symbol	p		3857865						
ANR	3857939	Symbol	E_WARNING		3857865						
ANR	3857940	Symbol	module -> module_number		3857865						
ANR	3857941	Symbol	module -> name		3857865						
ANR	3857942	Symbol	* module		3857865						
ANR	3857943	Symbol	module		3857865						
ANR	3857944	Symbol	module -> request_startup_func		3857865						
ANR	3857945	Symbol	* p		3857865						
ANR	3857946	Symbol	module -> type		3857865						
ANR	3857947	Symbol	FAILURE		3857865						
ANR	3857948	Symbol	module_request_startup_handlers		3857865						
ANR	3857949	Function	module_registry_cleanup	2545:0:74694:74984							
ANR	3857950	FunctionDef	module_registry_cleanup (zval * zv)		3857949	0					
ANR	3857951	CompoundStatement		2546:0:74749:74984	3857949	0					
ANR	3857952	IdentifierDeclStatement	zend_module_entry * module = Z_PTR_P ( zv ) ;	2547:1:74752:74791	3857949	0	True				
ANR	3857953	IdentifierDecl	* module = Z_PTR_P ( zv )		3857949	0					
ANR	3857954	IdentifierDeclType	zend_module_entry *		3857949	0					
ANR	3857955	Identifier	module		3857949	1					
ANR	3857956	AssignmentExpression	* module = Z_PTR_P ( zv )		3857949	2		=			
ANR	3857957	Identifier	module		3857949	0					
ANR	3857958	CallExpression	Z_PTR_P ( zv )		3857949	1					
ANR	3857959	Callee	Z_PTR_P		3857949	0					
ANR	3857960	Identifier	Z_PTR_P		3857949	0					
ANR	3857961	ArgumentList	zv		3857949	1					
ANR	3857962	Argument	zv		3857949	0					
ANR	3857963	Identifier	zv		3857949	0					
ANR	3857964	IfStatement	if ( module -> request_shutdown_func )		3857949	1					
ANR	3857965	Condition	module -> request_shutdown_func	2549:5:74799:74827	3857949	0	True				
ANR	3857966	PtrMemberAccess	module -> request_shutdown_func		3857949	0					
ANR	3857967	Identifier	module		3857949	0					
ANR	3857968	Identifier	request_shutdown_func		3857949	1					
ANR	3857969	CompoundStatement		4:36:80:80	3857949	1					
ANR	3857970	ExpressionStatement	"zend_printf ( ""%s: Request shutdown\\n"" , module -> name )"	2551:2:74840:74891	3857949	0	True				
ANR	3857971	CallExpression	"zend_printf ( ""%s: Request shutdown\\n"" , module -> name )"		3857949	0					
ANR	3857972	Callee	zend_printf		3857949	0					
ANR	3857973	Identifier	zend_printf		3857949	0					
ANR	3857974	ArgumentList	"""%s: Request shutdown\\n"""		3857949	1					
ANR	3857975	Argument	"""%s: Request shutdown\\n"""		3857949	0					
ANR	3857976	PrimaryExpression	"""%s: Request shutdown\\n"""		3857949	0					
ANR	3857977	Argument	module -> name		3857949	1					
ANR	3857978	PtrMemberAccess	module -> name		3857949	0					
ANR	3857979	Identifier	module		3857949	0					
ANR	3857980	Identifier	name		3857949	1					
ANR	3857981	ExpressionStatement	"module -> request_shutdown_func ( module -> type , module -> module_number )"	2553:2:74902:74968	3857949	1	True				
ANR	3857982	CallExpression	"module -> request_shutdown_func ( module -> type , module -> module_number )"		3857949	0					
ANR	3857983	Callee	module -> request_shutdown_func		3857949	0					
ANR	3857984	PtrMemberAccess	module -> request_shutdown_func		3857949	0					
ANR	3857985	Identifier	module		3857949	0					
ANR	3857986	Identifier	request_shutdown_func		3857949	1					
ANR	3857987	ArgumentList	module -> type		3857949	1					
ANR	3857988	Argument	module -> type		3857949	0					
ANR	3857989	PtrMemberAccess	module -> type		3857949	0					
ANR	3857990	Identifier	module		3857949	0					
ANR	3857991	Identifier	type		3857949	1					
ANR	3857992	Argument	module -> module_number		3857949	1					
ANR	3857993	PtrMemberAccess	module -> module_number		3857949	0					
ANR	3857994	Identifier	module		3857949	0					
ANR	3857995	Identifier	module_number		3857949	1					
ANR	3857996	ReturnStatement	return 0 ;	2555:1:74974:74982	3857949	2	True				
ANR	3857997	PrimaryExpression	0		3857949	0					
ANR	3857998	ReturnType	static int		3857949	1					
ANR	3857999	Identifier	module_registry_cleanup		3857949	2					
ANR	3858000	ParameterList	zval * zv		3857949	3					
ANR	3858001	Parameter	zval * zv	2545:35:74729:74736	3857949	0	True				
ANR	3858002	ParameterType	zval *		3857949	0					
ANR	3858003	Identifier	zv		3857949	1					
ANR	3858004	CFGEntryNode	ENTRY		3857949		True				
ANR	3858005	CFGExitNode	EXIT		3857949		True				
ANR	3858006	Symbol	Z_PTR_P		3857949						
ANR	3858007	Symbol	module -> name		3857949						
ANR	3858008	Symbol	module -> module_number		3857949						
ANR	3858009	Symbol	* module		3857949						
ANR	3858010	Symbol	module		3857949						
ANR	3858011	Symbol	module -> request_shutdown_func		3857949						
ANR	3858012	Symbol	zv		3857949						
ANR	3858013	Symbol	module -> type		3857949						
ANR	3858014	Function	zend_deactivate_modules	2559:0:74997:75480							
ANR	3858015	FunctionDef	zend_deactivate_modules ()		3858014	0					
ANR	3858016	CompoundStatement		2560:0:75051:75480	3858014	0					
ANR	3858017	ExpressionStatement	EG ( current_execute_data ) = NULL	2561:1:75054:75085	3858014	0	True				
ANR	3858018	AssignmentExpression	EG ( current_execute_data ) = NULL		3858014	0		=			
ANR	3858019	CallExpression	EG ( current_execute_data )		3858014	0					
ANR	3858020	Callee	EG		3858014	0					
ANR	3858021	Identifier	EG		3858014	0					
ANR	3858022	ArgumentList	current_execute_data		3858014	1					
ANR	3858023	Argument	current_execute_data		3858014	0					
ANR	3858024	Identifier	current_execute_data		3858014	0					
ANR	3858025	Identifier	NULL		3858014	1					
ANR	3858026	Statement	zend_try	2563:1:75130:75137	3858014	1	True				
ANR	3858027	CompoundStatement		4:10:87:87	3858014	2					
ANR	3858028	IfStatement	if ( EG ( full_tables_cleanup ) )		3858014	0					
ANR	3858029	Condition	EG ( full_tables_cleanup )	2564:6:75147:75169	3858014	0	True				
ANR	3858030	CallExpression	EG ( full_tables_cleanup )		3858014	0					
ANR	3858031	Callee	EG		3858014	0					
ANR	3858032	Identifier	EG		3858014	0					
ANR	3858033	ArgumentList	full_tables_cleanup		3858014	1					
ANR	3858034	Argument	full_tables_cleanup		3858014	0					
ANR	3858035	Identifier	full_tables_cleanup		3858014	0					
ANR	3858036	CompoundStatement		5:31:120:120	3858014	1					
ANR	3858037	ExpressionStatement	"zend_hash_reverse_apply ( & module_registry , module_registry_cleanup )"	2565:3:75177:75243	3858014	0	True				
ANR	3858038	CallExpression	"zend_hash_reverse_apply ( & module_registry , module_registry_cleanup )"		3858014	0					
ANR	3858039	Callee	zend_hash_reverse_apply		3858014	0					
ANR	3858040	Identifier	zend_hash_reverse_apply		3858014	0					
ANR	3858041	ArgumentList	& module_registry		3858014	1					
ANR	3858042	Argument	& module_registry		3858014	0					
ANR	3858043	UnaryOperationExpression	& module_registry		3858014	0					
ANR	3858044	UnaryOperator	&		3858014	0					
ANR	3858045	Identifier	module_registry		3858014	1					
ANR	3858046	Argument	module_registry_cleanup		3858014	1					
ANR	3858047	Identifier	module_registry_cleanup		3858014	0					
ANR	3858048	ElseStatement	else		3858014	0					
ANR	3858049	CompoundStatement		8:3:207:263	3858014	0					
ANR	3858050	IdentifierDeclStatement	zend_module_entry * * p = module_request_shutdown_handlers ;	2567:3:75259:75315	3858014	0	True				
ANR	3858051	IdentifierDecl	* * p = module_request_shutdown_handlers		3858014	0					
ANR	3858052	IdentifierDeclType	zend_module_entry * *		3858014	0					
ANR	3858053	Identifier	p		3858014	1					
ANR	3858054	AssignmentExpression	* * p = module_request_shutdown_handlers		3858014	2		=			
ANR	3858055	Identifier	module_request_shutdown_handlers		3858014	0					
ANR	3858056	Identifier	module_request_shutdown_handlers		3858014	1					
ANR	3858057	WhileStatement	while ( * p )		3858014	1					
ANR	3858058	Condition	* p	2569:10:75328:75329	3858014	0	True				
ANR	3858059	UnaryOperationExpression	* p		3858014	0					
ANR	3858060	UnaryOperator	*		3858014	0					
ANR	3858061	Identifier	p		3858014	1					
ANR	3858062	CompoundStatement		11:4:286:316	3858014	1					
ANR	3858063	IdentifierDeclStatement	zend_module_entry * module = * p ;	2570:4:75338:75368	3858014	0	True				
ANR	3858064	IdentifierDecl	* module = * p		3858014	0					
ANR	3858065	IdentifierDeclType	zend_module_entry *		3858014	0					
ANR	3858066	Identifier	module		3858014	1					
ANR	3858067	AssignmentExpression	* module = * p		3858014	2		=			
ANR	3858068	Identifier	module		3858014	0					
ANR	3858069	UnaryOperationExpression	* p		3858014	1					
ANR	3858070	UnaryOperator	*		3858014	0					
ANR	3858071	Identifier	p		3858014	1					
ANR	3858072	ExpressionStatement	"module -> request_shutdown_func ( module -> type , module -> module_number )"	2572:4:75375:75441	3858014	1	True				
ANR	3858073	CallExpression	"module -> request_shutdown_func ( module -> type , module -> module_number )"		3858014	0					
ANR	3858074	Callee	module -> request_shutdown_func		3858014	0					
ANR	3858075	PtrMemberAccess	module -> request_shutdown_func		3858014	0					
ANR	3858076	Identifier	module		3858014	0					
ANR	3858077	Identifier	request_shutdown_func		3858014	1					
ANR	3858078	ArgumentList	module -> type		3858014	1					
ANR	3858079	Argument	module -> type		3858014	0					
ANR	3858080	PtrMemberAccess	module -> type		3858014	0					
ANR	3858081	Identifier	module		3858014	0					
ANR	3858082	Identifier	type		3858014	1					
ANR	3858083	Argument	module -> module_number		3858014	1					
ANR	3858084	PtrMemberAccess	module -> module_number		3858014	0					
ANR	3858085	Identifier	module		3858014	0					
ANR	3858086	Identifier	module_number		3858014	1					
ANR	3858087	ExpressionStatement	p ++	2573:4:75447:75450	3858014	2	True				
ANR	3858088	PostIncDecOperationExpression	p ++		3858014	0					
ANR	3858089	Identifier	p		3858014	0					
ANR	3858090	IncDec	++		3858014	1					
ANR	3858091	ExpressionStatement	zend_end_try ( )	2576:3:75464:75478	3858014	3	True				
ANR	3858092	CallExpression	zend_end_try ( )		3858014	0					
ANR	3858093	Callee	zend_end_try		3858014	0					
ANR	3858094	Identifier	zend_end_try		3858014	0					
ANR	3858095	ArgumentList			3858014	1					
ANR	3858096	ReturnType	ZEND_API void		3858014	1					
ANR	3858097	Identifier	zend_deactivate_modules		3858014	2					
ANR	3858098	ParameterList			3858014	3					
ANR	3858099	CFGEntryNode	ENTRY		3858014		True				
ANR	3858100	CFGExitNode	EXIT		3858014		True				
ANR	3858101	Symbol	EG		3858014						
ANR	3858102	Symbol	NULL		3858014						
ANR	3858103	Symbol	* module		3858014						
ANR	3858104	Symbol	current_execute_data		3858014						
ANR	3858105	Symbol	module		3858014						
ANR	3858106	Symbol	& module_registry		3858014						
ANR	3858107	Symbol	module_registry_cleanup		3858014						
ANR	3858108	Symbol	p		3858014						
ANR	3858109	Symbol	full_tables_cleanup		3858014						
ANR	3858110	Symbol	module -> module_number		3858014						
ANR	3858111	Symbol	module_request_shutdown_handlers		3858014						
ANR	3858112	Symbol	* p		3858014						
ANR	3858113	Symbol	module -> type		3858014						
ANR	3858114	Function	zend_cleanup_internal_classes	2580:0:75493:75668							
ANR	3858115	FunctionDef	zend_cleanup_internal_classes ()		3858114	0					
ANR	3858116	CompoundStatement		2581:0:75553:75668	3858114	0					
ANR	3858117	IdentifierDeclStatement	zend_class_entry * * p = class_cleanup_handlers ;	2582:1:75556:75601	3858114	0	True				
ANR	3858118	IdentifierDecl	* * p = class_cleanup_handlers		3858114	0					
ANR	3858119	IdentifierDeclType	zend_class_entry * *		3858114	0					
ANR	3858120	Identifier	p		3858114	1					
ANR	3858121	AssignmentExpression	* * p = class_cleanup_handlers		3858114	2		=			
ANR	3858122	Identifier	class_cleanup_handlers		3858114	0					
ANR	3858123	Identifier	class_cleanup_handlers		3858114	1					
ANR	3858124	WhileStatement	while ( * p )		3858114	1					
ANR	3858125	Condition	* p	2584:8:75612:75613	3858114	0	True				
ANR	3858126	UnaryOperationExpression	* p		3858114	0					
ANR	3858127	UnaryOperator	*		3858114	0					
ANR	3858128	Identifier	p		3858114	1					
ANR	3858129	CompoundStatement		4:12:62:62	3858114	1					
ANR	3858130	ExpressionStatement	zend_cleanup_internal_class_data ( * p )	2585:2:75620:75656	3858114	0	True				
ANR	3858131	CallExpression	zend_cleanup_internal_class_data ( * p )		3858114	0					
ANR	3858132	Callee	zend_cleanup_internal_class_data		3858114	0					
ANR	3858133	Identifier	zend_cleanup_internal_class_data		3858114	0					
ANR	3858134	ArgumentList	* p		3858114	1					
ANR	3858135	Argument	* p		3858114	0					
ANR	3858136	UnaryOperationExpression	* p		3858114	0					
ANR	3858137	UnaryOperator	*		3858114	0					
ANR	3858138	Identifier	p		3858114	1					
ANR	3858139	ExpressionStatement	p ++	2586:2:75660:75663	3858114	1	True				
ANR	3858140	PostIncDecOperationExpression	p ++		3858114	0					
ANR	3858141	Identifier	p		3858114	0					
ANR	3858142	IncDec	++		3858114	1					
ANR	3858143	ReturnType	ZEND_API void		3858114	1					
ANR	3858144	Identifier	zend_cleanup_internal_classes		3858114	2					
ANR	3858145	ParameterList			3858114	3					
ANR	3858146	CFGEntryNode	ENTRY		3858114		True				
ANR	3858147	CFGExitNode	EXIT		3858114		True				
ANR	3858148	Symbol	p		3858114						
ANR	3858149	Symbol	class_cleanup_handlers		3858114						
ANR	3858150	Symbol	* p		3858114						
ANR	3858151	Function	module_registry_unload_temp	2591:0:75681:75850							
ANR	3858152	FunctionDef	module_registry_unload_temp (const zend_module_entry * module)		3858151	0					
ANR	3858153	CompoundStatement		2592:0:75756:75850	3858151	0					
ANR	3858154	ReturnStatement	return ( module -> type == MODULE_TEMPORARY ) ? ZEND_HASH_APPLY_REMOVE : ZEND_HASH_APPLY_STOP ;	2593:1:75759:75848	3858151	0	True				
ANR	3858155	ConditionalExpression	( module -> type == MODULE_TEMPORARY ) ? ZEND_HASH_APPLY_REMOVE : ZEND_HASH_APPLY_STOP		3858151	0					
ANR	3858156	Condition	module -> type == MODULE_TEMPORARY		3858151	0					
ANR	3858157	EqualityExpression	module -> type == MODULE_TEMPORARY		3858151	0		==			
ANR	3858158	PtrMemberAccess	module -> type		3858151	0					
ANR	3858159	Identifier	module		3858151	0					
ANR	3858160	Identifier	type		3858151	1					
ANR	3858161	Identifier	MODULE_TEMPORARY		3858151	1					
ANR	3858162	Identifier	ZEND_HASH_APPLY_REMOVE		3858151	1					
ANR	3858163	Identifier	ZEND_HASH_APPLY_STOP		3858151	2					
ANR	3858164	ReturnType	int		3858151	1					
ANR	3858165	Identifier	module_registry_unload_temp		3858151	2					
ANR	3858166	ParameterList	const zend_module_entry * module		3858151	3					
ANR	3858167	Parameter	const zend_module_entry * module	2591:32:75713:75743	3858151	0	True				
ANR	3858168	ParameterType	const zend_module_entry *		3858151	0					
ANR	3858169	Identifier	module		3858151	1					
ANR	3858170	CFGEntryNode	ENTRY		3858151		True				
ANR	3858171	CFGExitNode	EXIT		3858151		True				
ANR	3858172	Symbol	MODULE_TEMPORARY		3858151						
ANR	3858173	Symbol	* module		3858151						
ANR	3858174	Symbol	module		3858151						
ANR	3858175	Symbol	ZEND_HASH_APPLY_REMOVE		3858151						
ANR	3858176	Symbol	ZEND_HASH_APPLY_STOP		3858151						
ANR	3858177	Symbol	module -> type		3858151						
ANR	3858178	Function	module_registry_unload_temp_wrapper	2597:0:75863:76067							
ANR	3858179	FunctionDef	module_registry_unload_temp_wrapper (zval * el)		3858178	0					
ANR	3858180	CompoundStatement		2598:0:75930:76067	3858178	0					
ANR	3858181	IdentifierDeclStatement	zend_module_entry * module = ( zend_module_entry * ) Z_PTR_P ( el ) ;	2599:1:75933:75993	3858178	0	True				
ANR	3858182	IdentifierDecl	* module = ( zend_module_entry * ) Z_PTR_P ( el )		3858178	0					
ANR	3858183	IdentifierDeclType	zend_module_entry *		3858178	0					
ANR	3858184	Identifier	module		3858178	1					
ANR	3858185	AssignmentExpression	* module = ( zend_module_entry * ) Z_PTR_P ( el )		3858178	2		=			
ANR	3858186	Identifier	module		3858178	0					
ANR	3858187	CastExpression	( zend_module_entry * ) Z_PTR_P ( el )		3858178	1					
ANR	3858188	CastTarget	zend_module_entry *		3858178	0					
ANR	3858189	CallExpression	Z_PTR_P ( el )		3858178	1					
ANR	3858190	Callee	Z_PTR_P		3858178	0					
ANR	3858191	Identifier	Z_PTR_P		3858178	0					
ANR	3858192	ArgumentList	el		3858178	1					
ANR	3858193	Argument	el		3858178	0					
ANR	3858194	Identifier	el		3858178	0					
ANR	3858195	ReturnStatement	return module_registry_unload_temp ( ( const zend_module_entry * ) module ) ;	2600:1:75996:76065	3858178	1	True				
ANR	3858196	CallExpression	module_registry_unload_temp ( ( const zend_module_entry * ) module )		3858178	0					
ANR	3858197	Callee	module_registry_unload_temp		3858178	0					
ANR	3858198	Identifier	module_registry_unload_temp		3858178	0					
ANR	3858199	ArgumentList	( const zend_module_entry * ) module		3858178	1					
ANR	3858200	Argument	( const zend_module_entry * ) module		3858178	0					
ANR	3858201	CastExpression	( const zend_module_entry * ) module		3858178	0					
ANR	3858202	CastTarget	const zend_module_entry *		3858178	0					
ANR	3858203	Identifier	module		3858178	1					
ANR	3858204	ReturnType	static int		3858178	1					
ANR	3858205	Identifier	module_registry_unload_temp_wrapper		3858178	2					
ANR	3858206	ParameterList	zval * el		3858178	3					
ANR	3858207	Parameter	zval * el	2597:47:75910:75917	3858178	0	True				
ANR	3858208	ParameterType	zval *		3858178	0					
ANR	3858209	Identifier	el		3858178	1					
ANR	3858210	CFGEntryNode	ENTRY		3858178		True				
ANR	3858211	CFGExitNode	EXIT		3858178		True				
ANR	3858212	Symbol	Z_PTR_P		3858178						
ANR	3858213	Symbol	module_registry_unload_temp		3858178						
ANR	3858214	Symbol	el		3858178						
ANR	3858215	Symbol	module		3858178						
ANR	3858216	Function	exec_done_cb	2604:0:76080:76274							
ANR	3858217	FunctionDef	exec_done_cb (zval * el)		3858216	0					
ANR	3858218	CompoundStatement		2605:0:76124:76274	3858216	0					
ANR	3858219	IdentifierDeclStatement	zend_module_entry * module = ( zend_module_entry * ) Z_PTR_P ( el ) ;	2606:1:76127:76187	3858216	0	True				
ANR	3858220	IdentifierDecl	* module = ( zend_module_entry * ) Z_PTR_P ( el )		3858216	0					
ANR	3858221	IdentifierDeclType	zend_module_entry *		3858216	0					
ANR	3858222	Identifier	module		3858216	1					
ANR	3858223	AssignmentExpression	* module = ( zend_module_entry * ) Z_PTR_P ( el )		3858216	2		=			
ANR	3858224	Identifier	module		3858216	0					
ANR	3858225	CastExpression	( zend_module_entry * ) Z_PTR_P ( el )		3858216	1					
ANR	3858226	CastTarget	zend_module_entry *		3858216	0					
ANR	3858227	CallExpression	Z_PTR_P ( el )		3858216	1					
ANR	3858228	Callee	Z_PTR_P		3858216	0					
ANR	3858229	Identifier	Z_PTR_P		3858216	0					
ANR	3858230	ArgumentList	el		3858216	1					
ANR	3858231	Argument	el		3858216	0					
ANR	3858232	Identifier	el		3858216	0					
ANR	3858233	IfStatement	if ( module -> post_deactivate_func )		3858216	1					
ANR	3858234	Condition	module -> post_deactivate_func	2607:5:76194:76221	3858216	0	True				
ANR	3858235	PtrMemberAccess	module -> post_deactivate_func		3858216	0					
ANR	3858236	Identifier	module		3858216	0					
ANR	3858237	Identifier	post_deactivate_func		3858216	1					
ANR	3858238	CompoundStatement		3:35:99:99	3858216	1					
ANR	3858239	ExpressionStatement	module -> post_deactivate_func ( )	2608:2:76228:76258	3858216	0	True				
ANR	3858240	CallExpression	module -> post_deactivate_func ( )		3858216	0					
ANR	3858241	Callee	module -> post_deactivate_func		3858216	0					
ANR	3858242	PtrMemberAccess	module -> post_deactivate_func		3858216	0					
ANR	3858243	Identifier	module		3858216	0					
ANR	3858244	Identifier	post_deactivate_func		3858216	1					
ANR	3858245	ArgumentList			3858216	1					
ANR	3858246	ReturnStatement	return 0 ;	2610:1:76264:76272	3858216	2	True				
ANR	3858247	PrimaryExpression	0		3858216	0					
ANR	3858248	ReturnType	static int		3858216	1					
ANR	3858249	Identifier	exec_done_cb		3858216	2					
ANR	3858250	ParameterList	zval * el		3858216	3					
ANR	3858251	Parameter	zval * el	2604:24:76104:76111	3858216	0	True				
ANR	3858252	ParameterType	zval *		3858216	0					
ANR	3858253	Identifier	el		3858216	1					
ANR	3858254	CFGEntryNode	ENTRY		3858216		True				
ANR	3858255	CFGExitNode	EXIT		3858216		True				
ANR	3858256	Symbol	Z_PTR_P		3858216						
ANR	3858257	Symbol	module -> post_deactivate_func		3858216						
ANR	3858258	Symbol	* module		3858216						
ANR	3858259	Symbol	el		3858216						
ANR	3858260	Symbol	module		3858216						
ANR	3858261	Function	zend_post_deactivate_modules	2614:0:76287:76684							
ANR	3858262	FunctionDef	zend_post_deactivate_modules ()		3858261	0					
ANR	3858263	CompoundStatement		2615:0:76346:76684	3858261	0					
ANR	3858264	IfStatement	if ( EG ( full_tables_cleanup ) )		3858261	0					
ANR	3858265	Condition	EG ( full_tables_cleanup )	2616:5:76353:76375	3858261	0	True				
ANR	3858266	CallExpression	EG ( full_tables_cleanup )		3858261	0					
ANR	3858267	Callee	EG		3858261	0					
ANR	3858268	Identifier	EG		3858261	0					
ANR	3858269	ArgumentList	full_tables_cleanup		3858261	1					
ANR	3858270	Argument	full_tables_cleanup		3858261	0					
ANR	3858271	Identifier	full_tables_cleanup		3858261	0					
ANR	3858272	CompoundStatement		2:30:31:31	3858261	1					
ANR	3858273	ExpressionStatement	"zend_hash_apply ( & module_registry , exec_done_cb )"	2617:2:76382:76429	3858261	0	True				
ANR	3858274	CallExpression	"zend_hash_apply ( & module_registry , exec_done_cb )"		3858261	0					
ANR	3858275	Callee	zend_hash_apply		3858261	0					
ANR	3858276	Identifier	zend_hash_apply		3858261	0					
ANR	3858277	ArgumentList	& module_registry		3858261	1					
ANR	3858278	Argument	& module_registry		3858261	0					
ANR	3858279	UnaryOperationExpression	& module_registry		3858261	0					
ANR	3858280	UnaryOperator	&		3858261	0					
ANR	3858281	Identifier	module_registry		3858261	1					
ANR	3858282	Argument	exec_done_cb		3858261	1					
ANR	3858283	Identifier	exec_done_cb		3858261	0					
ANR	3858284	ExpressionStatement	"zend_hash_reverse_apply ( & module_registry , module_registry_unload_temp_wrapper )"	2618:2:76433:76511	3858261	1	True				
ANR	3858285	CallExpression	"zend_hash_reverse_apply ( & module_registry , module_registry_unload_temp_wrapper )"		3858261	0					
ANR	3858286	Callee	zend_hash_reverse_apply		3858261	0					
ANR	3858287	Identifier	zend_hash_reverse_apply		3858261	0					
ANR	3858288	ArgumentList	& module_registry		3858261	1					
ANR	3858289	Argument	& module_registry		3858261	0					
ANR	3858290	UnaryOperationExpression	& module_registry		3858261	0					
ANR	3858291	UnaryOperator	&		3858261	0					
ANR	3858292	Identifier	module_registry		3858261	1					
ANR	3858293	Argument	module_registry_unload_temp_wrapper		3858261	1					
ANR	3858294	Identifier	module_registry_unload_temp_wrapper		3858261	0					
ANR	3858295	ElseStatement	else		3858261	0					
ANR	3858296	CompoundStatement		6:2:178:233	3858261	0					
ANR	3858297	IdentifierDeclStatement	zend_module_entry * * p = module_post_deactivate_handlers ;	2620:2:76525:76580	3858261	0	True				
ANR	3858298	IdentifierDecl	* * p = module_post_deactivate_handlers		3858261	0					
ANR	3858299	IdentifierDeclType	zend_module_entry * *		3858261	0					
ANR	3858300	Identifier	p		3858261	1					
ANR	3858301	AssignmentExpression	* * p = module_post_deactivate_handlers		3858261	2		=			
ANR	3858302	Identifier	module_post_deactivate_handlers		3858261	0					
ANR	3858303	Identifier	module_post_deactivate_handlers		3858261	1					
ANR	3858304	WhileStatement	while ( * p )		3858261	1					
ANR	3858305	Condition	* p	2622:9:76592:76593	3858261	0	True				
ANR	3858306	UnaryOperationExpression	* p		3858261	0					
ANR	3858307	UnaryOperator	*		3858261	0					
ANR	3858308	Identifier	p		3858261	1					
ANR	3858309	CompoundStatement		9:3:254:284	3858261	1					
ANR	3858310	IdentifierDeclStatement	zend_module_entry * module = * p ;	2623:3:76601:76631	3858261	0	True				
ANR	3858311	IdentifierDecl	* module = * p		3858261	0					
ANR	3858312	IdentifierDeclType	zend_module_entry *		3858261	0					
ANR	3858313	Identifier	module		3858261	1					
ANR	3858314	AssignmentExpression	* module = * p		3858261	2		=			
ANR	3858315	Identifier	module		3858261	0					
ANR	3858316	UnaryOperationExpression	* p		3858261	1					
ANR	3858317	UnaryOperator	*		3858261	0					
ANR	3858318	Identifier	p		3858261	1					
ANR	3858319	ExpressionStatement	module -> post_deactivate_func ( )	2625:3:76637:76667	3858261	1	True				
ANR	3858320	CallExpression	module -> post_deactivate_func ( )		3858261	0					
ANR	3858321	Callee	module -> post_deactivate_func		3858261	0					
ANR	3858322	PtrMemberAccess	module -> post_deactivate_func		3858261	0					
ANR	3858323	Identifier	module		3858261	0					
ANR	3858324	Identifier	post_deactivate_func		3858261	1					
ANR	3858325	ArgumentList			3858261	1					
ANR	3858326	ExpressionStatement	p ++	2626:3:76672:76675	3858261	2	True				
ANR	3858327	PostIncDecOperationExpression	p ++		3858261	0					
ANR	3858328	Identifier	p		3858261	0					
ANR	3858329	IncDec	++		3858261	1					
ANR	3858330	ReturnType	ZEND_API void		3858261	1					
ANR	3858331	Identifier	zend_post_deactivate_modules		3858261	2					
ANR	3858332	ParameterList			3858261	3					
ANR	3858333	CFGEntryNode	ENTRY		3858261		True				
ANR	3858334	CFGExitNode	EXIT		3858261		True				
ANR	3858335	Symbol	p		3858261						
ANR	3858336	Symbol	EG		3858261						
ANR	3858337	Symbol	full_tables_cleanup		3858261						
ANR	3858338	Symbol	module		3858261						
ANR	3858339	Symbol	& module_registry		3858261						
ANR	3858340	Symbol	module_post_deactivate_handlers		3858261						
ANR	3858341	Symbol	* p		3858261						
ANR	3858342	Symbol	exec_done_cb		3858261						
ANR	3858343	Symbol	module_registry_unload_temp_wrapper		3858261						
ANR	3858344	Function	zend_next_free_module	2633:0:76738:76845							
ANR	3858345	FunctionDef	zend_next_free_module ()		3858344	0					
ANR	3858346	CompoundStatement		2634:0:76789:76845	3858344	0					
ANR	3858347	ReturnStatement	return zend_hash_num_elements ( & module_registry ) + 1 ;	2635:1:76792:76843	3858344	0	True				
ANR	3858348	AdditiveExpression	zend_hash_num_elements ( & module_registry ) + 1		3858344	0		+			
ANR	3858349	CallExpression	zend_hash_num_elements ( & module_registry )		3858344	0					
ANR	3858350	Callee	zend_hash_num_elements		3858344	0					
ANR	3858351	Identifier	zend_hash_num_elements		3858344	0					
ANR	3858352	ArgumentList	& module_registry		3858344	1					
ANR	3858353	Argument	& module_registry		3858344	0					
ANR	3858354	UnaryOperationExpression	& module_registry		3858344	0					
ANR	3858355	UnaryOperator	&		3858344	0					
ANR	3858356	Identifier	module_registry		3858344	1					
ANR	3858357	PrimaryExpression	1		3858344	1					
ANR	3858358	ReturnType	ZEND_API int		3858344	1					
ANR	3858359	Identifier	zend_next_free_module		3858344	2					
ANR	3858360	ParameterList			3858344	3					
ANR	3858361	CFGEntryNode	ENTRY		3858344		True				
ANR	3858362	CFGExitNode	EXIT		3858344		True				
ANR	3858363	Symbol	zend_hash_num_elements		3858344						
ANR	3858364	Symbol	& module_registry		3858344						
ANR	3858365	Function	do_register_internal_class	2639:0:76858:77869							
ANR	3858366	FunctionDef	"do_register_internal_class (zend_class_entry * orig_class_entry , uint32_t ce_flags)"		3858365	0					
ANR	3858367	CompoundStatement		2640:0:76975:77869	3858365	0					
ANR	3858368	IdentifierDeclStatement	zend_class_entry * class_entry = malloc ( sizeof ( zend_class_entry ) ) ;	2641:1:76978:77042	3858365	0	True				
ANR	3858369	IdentifierDecl	* class_entry = malloc ( sizeof ( zend_class_entry ) )		3858365	0					
ANR	3858370	IdentifierDeclType	zend_class_entry *		3858365	0					
ANR	3858371	Identifier	class_entry		3858365	1					
ANR	3858372	AssignmentExpression	* class_entry = malloc ( sizeof ( zend_class_entry ) )		3858365	2		=			
ANR	3858373	Identifier	class_entry		3858365	0					
ANR	3858374	CallExpression	malloc ( sizeof ( zend_class_entry ) )		3858365	1					
ANR	3858375	Callee	malloc		3858365	0					
ANR	3858376	Identifier	malloc		3858365	0					
ANR	3858377	ArgumentList	sizeof ( zend_class_entry )		3858365	1					
ANR	3858378	Argument	sizeof ( zend_class_entry )		3858365	0					
ANR	3858379	SizeofExpression	sizeof ( zend_class_entry )		3858365	0					
ANR	3858380	Sizeof	sizeof		3858365	0					
ANR	3858381	SizeofOperand	zend_class_entry		3858365	1					
ANR	3858382	IdentifierDeclStatement	"zend_string * lowercase_name = zend_string_alloc ( ZSTR_LEN ( orig_class_entry -> name ) , 1 ) ;"	2642:1:77045:77129	3858365	1	True				
ANR	3858383	IdentifierDecl	"* lowercase_name = zend_string_alloc ( ZSTR_LEN ( orig_class_entry -> name ) , 1 )"		3858365	0					
ANR	3858384	IdentifierDeclType	zend_string *		3858365	0					
ANR	3858385	Identifier	lowercase_name		3858365	1					
ANR	3858386	AssignmentExpression	"* lowercase_name = zend_string_alloc ( ZSTR_LEN ( orig_class_entry -> name ) , 1 )"		3858365	2		=			
ANR	3858387	Identifier	lowercase_name		3858365	0					
ANR	3858388	CallExpression	"zend_string_alloc ( ZSTR_LEN ( orig_class_entry -> name ) , 1 )"		3858365	1					
ANR	3858389	Callee	zend_string_alloc		3858365	0					
ANR	3858390	Identifier	zend_string_alloc		3858365	0					
ANR	3858391	ArgumentList	ZSTR_LEN ( orig_class_entry -> name )		3858365	1					
ANR	3858392	Argument	ZSTR_LEN ( orig_class_entry -> name )		3858365	0					
ANR	3858393	CallExpression	ZSTR_LEN ( orig_class_entry -> name )		3858365	0					
ANR	3858394	Callee	ZSTR_LEN		3858365	0					
ANR	3858395	Identifier	ZSTR_LEN		3858365	0					
ANR	3858396	ArgumentList	orig_class_entry -> name		3858365	1					
ANR	3858397	Argument	orig_class_entry -> name		3858365	0					
ANR	3858398	PtrMemberAccess	orig_class_entry -> name		3858365	0					
ANR	3858399	Identifier	orig_class_entry		3858365	0					
ANR	3858400	Identifier	name		3858365	1					
ANR	3858401	Argument	1		3858365	1					
ANR	3858402	PrimaryExpression	1		3858365	0					
ANR	3858403	ExpressionStatement	* class_entry = * orig_class_entry	2643:1:77132:77164	3858365	2	True				
ANR	3858404	AssignmentExpression	* class_entry = * orig_class_entry		3858365	0		=			
ANR	3858405	UnaryOperationExpression	* class_entry		3858365	0					
ANR	3858406	UnaryOperator	*		3858365	0					
ANR	3858407	Identifier	class_entry		3858365	1					
ANR	3858408	UnaryOperationExpression	* orig_class_entry		3858365	1					
ANR	3858409	UnaryOperator	*		3858365	0					
ANR	3858410	Identifier	orig_class_entry		3858365	1					
ANR	3858411	ExpressionStatement	class_entry -> type = ZEND_INTERNAL_CLASS	2645:1:77168:77207	3858365	3	True				
ANR	3858412	AssignmentExpression	class_entry -> type = ZEND_INTERNAL_CLASS		3858365	0		=			
ANR	3858413	PtrMemberAccess	class_entry -> type		3858365	0					
ANR	3858414	Identifier	class_entry		3858365	0					
ANR	3858415	Identifier	type		3858365	1					
ANR	3858416	Identifier	ZEND_INTERNAL_CLASS		3858365	1					
ANR	3858417	ExpressionStatement	"zend_initialize_class_data ( class_entry , 0 )"	2646:1:77210:77252	3858365	4	True				
ANR	3858418	CallExpression	"zend_initialize_class_data ( class_entry , 0 )"		3858365	0					
ANR	3858419	Callee	zend_initialize_class_data		3858365	0					
ANR	3858420	Identifier	zend_initialize_class_data		3858365	0					
ANR	3858421	ArgumentList	class_entry		3858365	1					
ANR	3858422	Argument	class_entry		3858365	0					
ANR	3858423	Identifier	class_entry		3858365	0					
ANR	3858424	Argument	0		3858365	1					
ANR	3858425	PrimaryExpression	0		3858365	0					
ANR	3858426	ExpressionStatement	class_entry -> ce_flags = ce_flags | ZEND_ACC_CONSTANTS_UPDATED	2647:1:77255:77316	3858365	5	True				
ANR	3858427	AssignmentExpression	class_entry -> ce_flags = ce_flags | ZEND_ACC_CONSTANTS_UPDATED		3858365	0		=			
ANR	3858428	PtrMemberAccess	class_entry -> ce_flags		3858365	0					
ANR	3858429	Identifier	class_entry		3858365	0					
ANR	3858430	Identifier	ce_flags		3858365	1					
ANR	3858431	InclusiveOrExpression	ce_flags | ZEND_ACC_CONSTANTS_UPDATED		3858365	1		|			
ANR	3858432	Identifier	ce_flags		3858365	0					
ANR	3858433	Identifier	ZEND_ACC_CONSTANTS_UPDATED		3858365	1					
ANR	3858434	ExpressionStatement	class_entry -> info . internal . module = EG ( current_module )	2648:1:77319:77373	3858365	6	True				
ANR	3858435	AssignmentExpression	class_entry -> info . internal . module = EG ( current_module )		3858365	0		=			
ANR	3858436	MemberAccess	class_entry -> info . internal . module		3858365	0					
ANR	3858437	MemberAccess	class_entry -> info . internal		3858365	0					
ANR	3858438	PtrMemberAccess	class_entry -> info		3858365	0					
ANR	3858439	Identifier	class_entry		3858365	0					
ANR	3858440	Identifier	info		3858365	1					
ANR	3858441	Identifier	internal		3858365	1					
ANR	3858442	Identifier	module		3858365	1					
ANR	3858443	CallExpression	EG ( current_module )		3858365	1					
ANR	3858444	Callee	EG		3858365	0					
ANR	3858445	Identifier	EG		3858365	0					
ANR	3858446	ArgumentList	current_module		3858365	1					
ANR	3858447	Argument	current_module		3858365	0					
ANR	3858448	Identifier	current_module		3858365	0					
ANR	3858449	IfStatement	if ( class_entry -> info . internal . builtin_functions )		3858365	7					
ANR	3858450	Condition	class_entry -> info . internal . builtin_functions	2650:5:77381:77424	3858365	0	True				
ANR	3858451	MemberAccess	class_entry -> info . internal . builtin_functions		3858365	0					
ANR	3858452	MemberAccess	class_entry -> info . internal		3858365	0					
ANR	3858453	PtrMemberAccess	class_entry -> info		3858365	0					
ANR	3858454	Identifier	class_entry		3858365	0					
ANR	3858455	Identifier	info		3858365	1					
ANR	3858456	Identifier	internal		3858365	1					
ANR	3858457	Identifier	builtin_functions		3858365	1					
ANR	3858458	CompoundStatement		11:51:451:451	3858365	1					
ANR	3858459	ExpressionStatement	"zend_register_functions ( class_entry , class_entry -> info . internal . builtin_functions , & class_entry -> function_table , MODULE_PERSISTENT )"	2651:2:77431:77562	3858365	0	True				
ANR	3858460	CallExpression	"zend_register_functions ( class_entry , class_entry -> info . internal . builtin_functions , & class_entry -> function_table , MODULE_PERSISTENT )"		3858365	0					
ANR	3858461	Callee	zend_register_functions		3858365	0					
ANR	3858462	Identifier	zend_register_functions		3858365	0					
ANR	3858463	ArgumentList	class_entry		3858365	1					
ANR	3858464	Argument	class_entry		3858365	0					
ANR	3858465	Identifier	class_entry		3858365	0					
ANR	3858466	Argument	class_entry -> info . internal . builtin_functions		3858365	1					
ANR	3858467	MemberAccess	class_entry -> info . internal . builtin_functions		3858365	0					
ANR	3858468	MemberAccess	class_entry -> info . internal		3858365	0					
ANR	3858469	PtrMemberAccess	class_entry -> info		3858365	0					
ANR	3858470	Identifier	class_entry		3858365	0					
ANR	3858471	Identifier	info		3858365	1					
ANR	3858472	Identifier	internal		3858365	1					
ANR	3858473	Identifier	builtin_functions		3858365	1					
ANR	3858474	Argument	& class_entry -> function_table		3858365	2					
ANR	3858475	UnaryOperationExpression	& class_entry -> function_table		3858365	0					
ANR	3858476	UnaryOperator	&		3858365	0					
ANR	3858477	PtrMemberAccess	class_entry -> function_table		3858365	1					
ANR	3858478	Identifier	class_entry		3858365	0					
ANR	3858479	Identifier	function_table		3858365	1					
ANR	3858480	Argument	MODULE_PERSISTENT		3858365	3					
ANR	3858481	Identifier	MODULE_PERSISTENT		3858365	0					
ANR	3858482	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ZSTR_VAL ( orig_class_entry -> name ) , ZSTR_LEN ( class_entry -> name ) )"	2654:1:77569:77679	3858365	8	True				
ANR	3858483	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ZSTR_VAL ( orig_class_entry -> name ) , ZSTR_LEN ( class_entry -> name ) )"		3858365	0					
ANR	3858484	Callee	zend_str_tolower_copy		3858365	0					
ANR	3858485	Identifier	zend_str_tolower_copy		3858365	0					
ANR	3858486	ArgumentList	ZSTR_VAL ( lowercase_name )		3858365	1					
ANR	3858487	Argument	ZSTR_VAL ( lowercase_name )		3858365	0					
ANR	3858488	CallExpression	ZSTR_VAL ( lowercase_name )		3858365	0					
ANR	3858489	Callee	ZSTR_VAL		3858365	0					
ANR	3858490	Identifier	ZSTR_VAL		3858365	0					
ANR	3858491	ArgumentList	lowercase_name		3858365	1					
ANR	3858492	Argument	lowercase_name		3858365	0					
ANR	3858493	Identifier	lowercase_name		3858365	0					
ANR	3858494	Argument	ZSTR_VAL ( orig_class_entry -> name )		3858365	1					
ANR	3858495	CallExpression	ZSTR_VAL ( orig_class_entry -> name )		3858365	0					
ANR	3858496	Callee	ZSTR_VAL		3858365	0					
ANR	3858497	Identifier	ZSTR_VAL		3858365	0					
ANR	3858498	ArgumentList	orig_class_entry -> name		3858365	1					
ANR	3858499	Argument	orig_class_entry -> name		3858365	0					
ANR	3858500	PtrMemberAccess	orig_class_entry -> name		3858365	0					
ANR	3858501	Identifier	orig_class_entry		3858365	0					
ANR	3858502	Identifier	name		3858365	1					
ANR	3858503	Argument	ZSTR_LEN ( class_entry -> name )		3858365	2					
ANR	3858504	CallExpression	ZSTR_LEN ( class_entry -> name )		3858365	0					
ANR	3858505	Callee	ZSTR_LEN		3858365	0					
ANR	3858506	Identifier	ZSTR_LEN		3858365	0					
ANR	3858507	ArgumentList	class_entry -> name		3858365	1					
ANR	3858508	Argument	class_entry -> name		3858365	0					
ANR	3858509	PtrMemberAccess	class_entry -> name		3858365	0					
ANR	3858510	Identifier	class_entry		3858365	0					
ANR	3858511	Identifier	name		3858365	1					
ANR	3858512	ExpressionStatement	lowercase_name = zend_new_interned_string ( lowercase_name )	2655:1:77682:77739	3858365	9	True				
ANR	3858513	AssignmentExpression	lowercase_name = zend_new_interned_string ( lowercase_name )		3858365	0		=			
ANR	3858514	Identifier	lowercase_name		3858365	0					
ANR	3858515	CallExpression	zend_new_interned_string ( lowercase_name )		3858365	1					
ANR	3858516	Callee	zend_new_interned_string		3858365	0					
ANR	3858517	Identifier	zend_new_interned_string		3858365	0					
ANR	3858518	ArgumentList	lowercase_name		3858365	1					
ANR	3858519	Argument	lowercase_name		3858365	0					
ANR	3858520	Identifier	lowercase_name		3858365	0					
ANR	3858521	ExpressionStatement	"zend_hash_update_ptr ( CG ( class_table ) , lowercase_name , class_entry )"	2656:1:77742:77808	3858365	10	True				
ANR	3858522	CallExpression	"zend_hash_update_ptr ( CG ( class_table ) , lowercase_name , class_entry )"		3858365	0					
ANR	3858523	Callee	zend_hash_update_ptr		3858365	0					
ANR	3858524	Identifier	zend_hash_update_ptr		3858365	0					
ANR	3858525	ArgumentList	CG ( class_table )		3858365	1					
ANR	3858526	Argument	CG ( class_table )		3858365	0					
ANR	3858527	CallExpression	CG ( class_table )		3858365	0					
ANR	3858528	Callee	CG		3858365	0					
ANR	3858529	Identifier	CG		3858365	0					
ANR	3858530	ArgumentList	class_table		3858365	1					
ANR	3858531	Argument	class_table		3858365	0					
ANR	3858532	Identifier	class_table		3858365	0					
ANR	3858533	Argument	lowercase_name		3858365	1					
ANR	3858534	Identifier	lowercase_name		3858365	0					
ANR	3858535	Argument	class_entry		3858365	2					
ANR	3858536	Identifier	class_entry		3858365	0					
ANR	3858537	ExpressionStatement	zend_string_release ( lowercase_name )	2657:1:77811:77846	3858365	11	True				
ANR	3858538	CallExpression	zend_string_release ( lowercase_name )		3858365	0					
ANR	3858539	Callee	zend_string_release		3858365	0					
ANR	3858540	Identifier	zend_string_release		3858365	0					
ANR	3858541	ArgumentList	lowercase_name		3858365	1					
ANR	3858542	Argument	lowercase_name		3858365	0					
ANR	3858543	Identifier	lowercase_name		3858365	0					
ANR	3858544	ReturnStatement	return class_entry ;	2658:1:77849:77867	3858365	12	True				
ANR	3858545	Identifier	class_entry		3858365	0					
ANR	3858546	ReturnType	static zend_class_entry *		3858365	1					
ANR	3858547	Identifier	do_register_internal_class		3858365	2					
ANR	3858548	ParameterList	"zend_class_entry * orig_class_entry , uint32_t ce_flags"		3858365	3					
ANR	3858549	Parameter	zend_class_entry * orig_class_entry	2639:52:76910:76943	3858365	0	True				
ANR	3858550	ParameterType	zend_class_entry *		3858365	0					
ANR	3858551	Identifier	orig_class_entry		3858365	1					
ANR	3858552	Parameter	uint32_t ce_flags	2639:88:76946:76962	3858365	1	True				
ANR	3858553	ParameterType	uint32_t		3858365	0					
ANR	3858554	Identifier	ce_flags		3858365	1					
ANR	3858555	CFGEntryNode	ENTRY		3858365		True				
ANR	3858556	CFGExitNode	EXIT		3858365		True				
ANR	3858557	Symbol	ZEND_ACC_CONSTANTS_UPDATED		3858365						
ANR	3858558	Symbol	class_entry -> info		3858365						
ANR	3858559	Symbol	current_module		3858365						
ANR	3858560	Symbol	class_entry -> ce_flags		3858365						
ANR	3858561	Symbol	class_entry -> info . internal . builtin_functions		3858365						
ANR	3858562	Symbol	orig_class_entry -> name		3858365						
ANR	3858563	Symbol	class_table		3858365						
ANR	3858564	Symbol	class_entry -> type		3858365						
ANR	3858565	Symbol	ZEND_INTERNAL_CLASS		3858365						
ANR	3858566	Symbol	class_entry -> info . internal . module		3858365						
ANR	3858567	Symbol	malloc		3858365						
ANR	3858568	Symbol	zend_string_alloc		3858365						
ANR	3858569	Symbol	EG		3858365						
ANR	3858570	Symbol	class_entry -> name		3858365						
ANR	3858571	Symbol	CG		3858365						
ANR	3858572	Symbol	class_entry		3858365						
ANR	3858573	Symbol	MODULE_PERSISTENT		3858365						
ANR	3858574	Symbol	* orig_class_entry		3858365						
ANR	3858575	Symbol	ZSTR_VAL		3858365						
ANR	3858576	Symbol	orig_class_entry		3858365						
ANR	3858577	Symbol	class_entry -> info . internal		3858365						
ANR	3858578	Symbol	zend_new_interned_string		3858365						
ANR	3858579	Symbol	* class_entry		3858365						
ANR	3858580	Symbol	ZSTR_LEN		3858365						
ANR	3858581	Symbol	lowercase_name		3858365						
ANR	3858582	Symbol	ce_flags		3858365						
ANR	3858583	Symbol	& class_entry -> function_table		3858365						
ANR	3858584	Function	zend_register_internal_class_ex	2667:0:78187:78511							
ANR	3858585	FunctionDef	"zend_register_internal_class_ex (zend_class_entry * class_entry , zend_class_entry * parent_ce)"		3858584	0					
ANR	3858586	CompoundStatement		2668:0:78316:78511	3858584	0					
ANR	3858587	IdentifierDeclStatement	zend_class_entry * register_class ;	2669:1:78319:78351	3858584	0	True				
ANR	3858588	IdentifierDecl	* register_class		3858584	0					
ANR	3858589	IdentifierDeclType	zend_class_entry *		3858584	0					
ANR	3858590	Identifier	register_class		3858584	1					
ANR	3858591	ExpressionStatement	register_class = zend_register_internal_class ( class_entry )	2671:1:78355:78413	3858584	1	True				
ANR	3858592	AssignmentExpression	register_class = zend_register_internal_class ( class_entry )		3858584	0		=			
ANR	3858593	Identifier	register_class		3858584	0					
ANR	3858594	CallExpression	zend_register_internal_class ( class_entry )		3858584	1					
ANR	3858595	Callee	zend_register_internal_class		3858584	0					
ANR	3858596	Identifier	zend_register_internal_class		3858584	0					
ANR	3858597	ArgumentList	class_entry		3858584	1					
ANR	3858598	Argument	class_entry		3858584	0					
ANR	3858599	Identifier	class_entry		3858584	0					
ANR	3858600	IfStatement	if ( parent_ce )		3858584	2					
ANR	3858601	Condition	parent_ce	2673:5:78421:78429	3858584	0	True				
ANR	3858602	Identifier	parent_ce		3858584	0					
ANR	3858603	CompoundStatement		6:16:115:115	3858584	1					
ANR	3858604	ExpressionStatement	"zend_do_inheritance ( register_class , parent_ce )"	2674:2:78436:78482	3858584	0	True				
ANR	3858605	CallExpression	"zend_do_inheritance ( register_class , parent_ce )"		3858584	0					
ANR	3858606	Callee	zend_do_inheritance		3858584	0					
ANR	3858607	Identifier	zend_do_inheritance		3858584	0					
ANR	3858608	ArgumentList	register_class		3858584	1					
ANR	3858609	Argument	register_class		3858584	0					
ANR	3858610	Identifier	register_class		3858584	0					
ANR	3858611	Argument	parent_ce		3858584	1					
ANR	3858612	Identifier	parent_ce		3858584	0					
ANR	3858613	ReturnStatement	return register_class ;	2676:1:78488:78509	3858584	3	True				
ANR	3858614	Identifier	register_class		3858584	0					
ANR	3858615	ReturnType	ZEND_API zend_class_entry *		3858584	1					
ANR	3858616	Identifier	zend_register_internal_class_ex		3858584	2					
ANR	3858617	ParameterList	"zend_class_entry * class_entry , zend_class_entry * parent_ce"		3858584	3					
ANR	3858618	Parameter	zend_class_entry * class_entry	2667:59:78246:78274	3858584	0	True				
ANR	3858619	ParameterType	zend_class_entry *		3858584	0					
ANR	3858620	Identifier	class_entry		3858584	1					
ANR	3858621	Parameter	zend_class_entry * parent_ce	2667:90:78277:78303	3858584	1	True				
ANR	3858622	ParameterType	zend_class_entry *		3858584	0					
ANR	3858623	Identifier	parent_ce		3858584	1					
ANR	3858624	CFGEntryNode	ENTRY		3858584		True				
ANR	3858625	CFGExitNode	EXIT		3858584		True				
ANR	3858626	Symbol	parent_ce		3858584						
ANR	3858627	Symbol	class_entry		3858584						
ANR	3858628	Symbol	register_class		3858584						
ANR	3858629	Symbol	zend_register_internal_class		3858584						
ANR	3858630	Function	zend_class_implements	2680:0:78524:78915							
ANR	3858631	FunctionDef	"zend_class_implements (zend_class_entry * class_entry , int num_interfaces)"		3858630	0					
ANR	3858632	CompoundStatement		2681:0:78626:78915	3858630	0					
ANR	3858633	IdentifierDeclStatement	zend_class_entry * interface_entry ;	2682:1:78629:78662	3858630	0	True				
ANR	3858634	IdentifierDecl	* interface_entry		3858630	0					
ANR	3858635	IdentifierDeclType	zend_class_entry *		3858630	0					
ANR	3858636	Identifier	interface_entry		3858630	1					
ANR	3858637	IdentifierDeclStatement	va_list interface_list ;	2683:1:78665:78687	3858630	1	True				
ANR	3858638	IdentifierDecl	interface_list		3858630	0					
ANR	3858639	IdentifierDeclType	va_list		3858630	0					
ANR	3858640	Identifier	interface_list		3858630	1					
ANR	3858641	ExpressionStatement	"va_start ( interface_list , num_interfaces )"	2684:1:78690:78730	3858630	2	True				
ANR	3858642	CallExpression	"va_start ( interface_list , num_interfaces )"		3858630	0					
ANR	3858643	Callee	va_start		3858630	0					
ANR	3858644	Identifier	va_start		3858630	0					
ANR	3858645	ArgumentList	interface_list		3858630	1					
ANR	3858646	Argument	interface_list		3858630	0					
ANR	3858647	Identifier	interface_list		3858630	0					
ANR	3858648	Argument	num_interfaces		3858630	1					
ANR	3858649	Identifier	num_interfaces		3858630	0					
ANR	3858650	WhileStatement	while ( num_interfaces -- )		3858630	3					
ANR	3858651	Condition	num_interfaces --	2686:8:78741:78756	3858630	0	True				
ANR	3858652	PostIncDecOperationExpression	num_interfaces --		3858630	0					
ANR	3858653	Identifier	num_interfaces		3858630	0					
ANR	3858654	IncDec	--		3858630	1					
ANR	3858655	CompoundStatement		6:26:132:132	3858630	1					
ANR	3858656	Statement	interface_entry	2687:2:78763:78777	3858630	0	True				
ANR	3858657	Statement	=	2687:18:78779:78779	3858630	1	True				
ANR	3858658	Statement	va_arg	2687:20:78781:78786	3858630	2	True				
ANR	3858659	Statement	(	2687:26:78787:78787	3858630	3	True				
ANR	3858660	Statement	interface_list	2687:27:78788:78801	3858630	4	True				
ANR	3858661	Statement	","	2687:41:78802:78802	3858630	5	True				
ANR	3858662	Statement	zend_class_entry	2687:43:78804:78819	3858630	6	True				
ANR	3858663	Statement	*	2687:60:78821:78821	3858630	7	True				
ANR	3858664	Statement	)	2687:61:78822:78822	3858630	8	True				
ANR	3858665	ExpressionStatement		2687:62:78823:78823	3858630	9	True				
ANR	3858666	ExpressionStatement	"zend_do_implement_interface ( class_entry , interface_entry )"	2688:2:78827:78884	3858630	10	True				
ANR	3858667	CallExpression	"zend_do_implement_interface ( class_entry , interface_entry )"		3858630	0					
ANR	3858668	Callee	zend_do_implement_interface		3858630	0					
ANR	3858669	Identifier	zend_do_implement_interface		3858630	0					
ANR	3858670	ArgumentList	class_entry		3858630	1					
ANR	3858671	Argument	class_entry		3858630	0					
ANR	3858672	Identifier	class_entry		3858630	0					
ANR	3858673	Argument	interface_entry		3858630	1					
ANR	3858674	Identifier	interface_entry		3858630	0					
ANR	3858675	ExpressionStatement	va_end ( interface_list )	2691:1:78891:78913	3858630	4	True				
ANR	3858676	CallExpression	va_end ( interface_list )		3858630	0					
ANR	3858677	Callee	va_end		3858630	0					
ANR	3858678	Identifier	va_end		3858630	0					
ANR	3858679	ArgumentList	interface_list		3858630	1					
ANR	3858680	Argument	interface_list		3858630	0					
ANR	3858681	Identifier	interface_list		3858630	0					
ANR	3858682	ReturnType	ZEND_API void		3858630	1					
ANR	3858683	Identifier	zend_class_implements		3858630	2					
ANR	3858684	ParameterList	"zend_class_entry * class_entry , int num_interfaces"		3858630	3					
ANR	3858685	Parameter	zend_class_entry * class_entry	2680:36:78560:78588	3858630	0	True				
ANR	3858686	ParameterType	zend_class_entry *		3858630	0					
ANR	3858687	Identifier	class_entry		3858630	1					
ANR	3858688	Parameter	int num_interfaces	2680:67:78591:78608	3858630	1	True				
ANR	3858689	ParameterType	int		3858630	0					
ANR	3858690	Identifier	num_interfaces		3858630	1					
ANR	3858691	CFGEntryNode	ENTRY		3858630		True				
ANR	3858692	CFGExitNode	EXIT		3858630		True				
ANR	3858693	Symbol	class_entry		3858630						
ANR	3858694	Symbol	num_interfaces		3858630						
ANR	3858695	Symbol	interface_list		3858630						
ANR	3858696	Symbol	interface_entry		3858630						
ANR	3858697	Function	zend_register_internal_class	2697:0:79027:79188							
ANR	3858698	FunctionDef	zend_register_internal_class (zend_class_entry * orig_class_entry)		3858697	0					
ANR	3858699	CompoundStatement		2698:0:79129:79188	3858697	0					
ANR	3858700	ReturnStatement	"return do_register_internal_class ( orig_class_entry , 0 ) ;"	2699:1:79132:79186	3858697	0	True				
ANR	3858701	CallExpression	"do_register_internal_class ( orig_class_entry , 0 )"		3858697	0					
ANR	3858702	Callee	do_register_internal_class		3858697	0					
ANR	3858703	Identifier	do_register_internal_class		3858697	0					
ANR	3858704	ArgumentList	orig_class_entry		3858697	1					
ANR	3858705	Argument	orig_class_entry		3858697	0					
ANR	3858706	Identifier	orig_class_entry		3858697	0					
ANR	3858707	Argument	0		3858697	1					
ANR	3858708	PrimaryExpression	0		3858697	0					
ANR	3858709	ReturnType	ZEND_API zend_class_entry *		3858697	1					
ANR	3858710	Identifier	zend_register_internal_class		3858697	2					
ANR	3858711	ParameterList	zend_class_entry * orig_class_entry		3858697	3					
ANR	3858712	Parameter	zend_class_entry * orig_class_entry	2697:56:79083:79116	3858697	0	True				
ANR	3858713	ParameterType	zend_class_entry *		3858697	0					
ANR	3858714	Identifier	orig_class_entry		3858697	1					
ANR	3858715	CFGEntryNode	ENTRY		3858697		True				
ANR	3858716	CFGExitNode	EXIT		3858697		True				
ANR	3858717	Symbol	orig_class_entry		3858697						
ANR	3858718	Symbol	do_register_internal_class		3858697						
ANR	3858719	Function	zend_register_internal_interface	2703:0:79201:79383							
ANR	3858720	FunctionDef	zend_register_internal_interface (zend_class_entry * orig_class_entry)		3858719	0					
ANR	3858721	CompoundStatement		2704:0:79307:79383	3858719	0					
ANR	3858722	ReturnStatement	"return do_register_internal_class ( orig_class_entry , ZEND_ACC_INTERFACE ) ;"	2705:1:79310:79381	3858719	0	True				
ANR	3858723	CallExpression	"do_register_internal_class ( orig_class_entry , ZEND_ACC_INTERFACE )"		3858719	0					
ANR	3858724	Callee	do_register_internal_class		3858719	0					
ANR	3858725	Identifier	do_register_internal_class		3858719	0					
ANR	3858726	ArgumentList	orig_class_entry		3858719	1					
ANR	3858727	Argument	orig_class_entry		3858719	0					
ANR	3858728	Identifier	orig_class_entry		3858719	0					
ANR	3858729	Argument	ZEND_ACC_INTERFACE		3858719	1					
ANR	3858730	Identifier	ZEND_ACC_INTERFACE		3858719	0					
ANR	3858731	ReturnType	ZEND_API zend_class_entry *		3858719	1					
ANR	3858732	Identifier	zend_register_internal_interface		3858719	2					
ANR	3858733	ParameterList	zend_class_entry * orig_class_entry		3858719	3					
ANR	3858734	Parameter	zend_class_entry * orig_class_entry	2703:60:79261:79294	3858719	0	True				
ANR	3858735	ParameterType	zend_class_entry *		3858719	0					
ANR	3858736	Identifier	orig_class_entry		3858719	1					
ANR	3858737	CFGEntryNode	ENTRY		3858719		True				
ANR	3858738	CFGExitNode	EXIT		3858719		True				
ANR	3858739	Symbol	orig_class_entry		3858719						
ANR	3858740	Symbol	do_register_internal_class		3858719						
ANR	3858741	Symbol	ZEND_ACC_INTERFACE		3858719						
ANR	3858742	Function	zend_register_class_alias_ex	2709:0:79396:79969							
ANR	3858743	FunctionDef	"zend_register_class_alias_ex (const char * name , size_t name_len , zend_class_entry * ce)"		3858742	0					
ANR	3858744	CompoundStatement		2710:0:79505:79969	3858742	0					
ANR	3858745	IdentifierDeclStatement	zend_string * lcname ;	2711:1:79508:79527	3858742	0	True				
ANR	3858746	IdentifierDecl	* lcname		3858742	0					
ANR	3858747	IdentifierDeclType	zend_string *		3858742	0					
ANR	3858748	Identifier	lcname		3858742	1					
ANR	3858749	IfStatement	if ( name [ 0 ] == '\\\\' )		3858742	1					
ANR	3858750	Condition	name [ 0 ] == '\\\\'	2713:5:79535:79549	3858742	0	True				
ANR	3858751	EqualityExpression	name [ 0 ] == '\\\\'		3858742	0		==			
ANR	3858752	ArrayIndexing	name [ 0 ]		3858742	0					
ANR	3858753	Identifier	name		3858742	0					
ANR	3858754	PrimaryExpression	0		3858742	1					
ANR	3858755	PrimaryExpression	'\\\\'		3858742	1					
ANR	3858756	CompoundStatement		4:22:46:46	3858742	1					
ANR	3858757	ExpressionStatement	"lcname = zend_string_alloc ( name_len - 1 , 1 )"	2714:2:79556:79597	3858742	0	True				
ANR	3858758	AssignmentExpression	"lcname = zend_string_alloc ( name_len - 1 , 1 )"		3858742	0		=			
ANR	3858759	Identifier	lcname		3858742	0					
ANR	3858760	CallExpression	"zend_string_alloc ( name_len - 1 , 1 )"		3858742	1					
ANR	3858761	Callee	zend_string_alloc		3858742	0					
ANR	3858762	Identifier	zend_string_alloc		3858742	0					
ANR	3858763	ArgumentList	name_len - 1		3858742	1					
ANR	3858764	Argument	name_len - 1		3858742	0					
ANR	3858765	AdditiveExpression	name_len - 1		3858742	0		-			
ANR	3858766	Identifier	name_len		3858742	0					
ANR	3858767	PrimaryExpression	1		3858742	1					
ANR	3858768	Argument	1		3858742	1					
ANR	3858769	PrimaryExpression	1		3858742	0					
ANR	3858770	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , name + 1 , name_len - 1 )"	2715:2:79601:79660	3858742	1	True				
ANR	3858771	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , name + 1 , name_len - 1 )"		3858742	0					
ANR	3858772	Callee	zend_str_tolower_copy		3858742	0					
ANR	3858773	Identifier	zend_str_tolower_copy		3858742	0					
ANR	3858774	ArgumentList	ZSTR_VAL ( lcname )		3858742	1					
ANR	3858775	Argument	ZSTR_VAL ( lcname )		3858742	0					
ANR	3858776	CallExpression	ZSTR_VAL ( lcname )		3858742	0					
ANR	3858777	Callee	ZSTR_VAL		3858742	0					
ANR	3858778	Identifier	ZSTR_VAL		3858742	0					
ANR	3858779	ArgumentList	lcname		3858742	1					
ANR	3858780	Argument	lcname		3858742	0					
ANR	3858781	Identifier	lcname		3858742	0					
ANR	3858782	Argument	name + 1		3858742	1					
ANR	3858783	AdditiveExpression	name + 1		3858742	0		+			
ANR	3858784	Identifier	name		3858742	0					
ANR	3858785	PrimaryExpression	1		3858742	1					
ANR	3858786	Argument	name_len - 1		3858742	2					
ANR	3858787	AdditiveExpression	name_len - 1		3858742	0		-			
ANR	3858788	Identifier	name_len		3858742	0					
ANR	3858789	PrimaryExpression	1		3858742	1					
ANR	3858790	ElseStatement	else		3858742	0					
ANR	3858791	CompoundStatement		7:8:164:164	3858742	0					
ANR	3858792	ExpressionStatement	"lcname = zend_string_alloc ( name_len , 1 )"	2717:2:79674:79713	3858742	0	True				
ANR	3858793	AssignmentExpression	"lcname = zend_string_alloc ( name_len , 1 )"		3858742	0		=			
ANR	3858794	Identifier	lcname		3858742	0					
ANR	3858795	CallExpression	"zend_string_alloc ( name_len , 1 )"		3858742	1					
ANR	3858796	Callee	zend_string_alloc		3858742	0					
ANR	3858797	Identifier	zend_string_alloc		3858742	0					
ANR	3858798	ArgumentList	name_len		3858742	1					
ANR	3858799	Argument	name_len		3858742	0					
ANR	3858800	Identifier	name_len		3858742	0					
ANR	3858801	Argument	1		3858742	1					
ANR	3858802	PrimaryExpression	1		3858742	0					
ANR	3858803	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , name , name_len )"	2718:2:79717:79772	3858742	1	True				
ANR	3858804	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , name , name_len )"		3858742	0					
ANR	3858805	Callee	zend_str_tolower_copy		3858742	0					
ANR	3858806	Identifier	zend_str_tolower_copy		3858742	0					
ANR	3858807	ArgumentList	ZSTR_VAL ( lcname )		3858742	1					
ANR	3858808	Argument	ZSTR_VAL ( lcname )		3858742	0					
ANR	3858809	CallExpression	ZSTR_VAL ( lcname )		3858742	0					
ANR	3858810	Callee	ZSTR_VAL		3858742	0					
ANR	3858811	Identifier	ZSTR_VAL		3858742	0					
ANR	3858812	ArgumentList	lcname		3858742	1					
ANR	3858813	Argument	lcname		3858742	0					
ANR	3858814	Identifier	lcname		3858742	0					
ANR	3858815	Argument	name		3858742	1					
ANR	3858816	Identifier	name		3858742	0					
ANR	3858817	Argument	name_len		3858742	2					
ANR	3858818	Identifier	name_len		3858742	0					
ANR	3858819	ExpressionStatement	zend_assert_valid_class_name ( lcname )	2721:1:79779:79815	3858742	2	True				
ANR	3858820	CallExpression	zend_assert_valid_class_name ( lcname )		3858742	0					
ANR	3858821	Callee	zend_assert_valid_class_name		3858742	0					
ANR	3858822	Identifier	zend_assert_valid_class_name		3858742	0					
ANR	3858823	ArgumentList	lcname		3858742	1					
ANR	3858824	Argument	lcname		3858742	0					
ANR	3858825	Identifier	lcname		3858742	0					
ANR	3858826	ExpressionStatement	"ce = zend_hash_add_ptr ( CG ( class_table ) , lcname , ce )"	2723:1:79819:79870	3858742	3	True				
ANR	3858827	AssignmentExpression	"ce = zend_hash_add_ptr ( CG ( class_table ) , lcname , ce )"		3858742	0		=			
ANR	3858828	Identifier	ce		3858742	0					
ANR	3858829	CallExpression	"zend_hash_add_ptr ( CG ( class_table ) , lcname , ce )"		3858742	1					
ANR	3858830	Callee	zend_hash_add_ptr		3858742	0					
ANR	3858831	Identifier	zend_hash_add_ptr		3858742	0					
ANR	3858832	ArgumentList	CG ( class_table )		3858742	1					
ANR	3858833	Argument	CG ( class_table )		3858742	0					
ANR	3858834	CallExpression	CG ( class_table )		3858742	0					
ANR	3858835	Callee	CG		3858742	0					
ANR	3858836	Identifier	CG		3858742	0					
ANR	3858837	ArgumentList	class_table		3858742	1					
ANR	3858838	Argument	class_table		3858742	0					
ANR	3858839	Identifier	class_table		3858742	0					
ANR	3858840	Argument	lcname		3858742	1					
ANR	3858841	Identifier	lcname		3858742	0					
ANR	3858842	Argument	ce		3858742	2					
ANR	3858843	Identifier	ce		3858742	0					
ANR	3858844	ExpressionStatement	zend_string_release ( lcname )	2724:1:79873:79900	3858742	4	True				
ANR	3858845	CallExpression	zend_string_release ( lcname )		3858742	0					
ANR	3858846	Callee	zend_string_release		3858742	0					
ANR	3858847	Identifier	zend_string_release		3858742	0					
ANR	3858848	ArgumentList	lcname		3858742	1					
ANR	3858849	Argument	lcname		3858742	0					
ANR	3858850	Identifier	lcname		3858742	0					
ANR	3858851	IfStatement	if ( ce )		3858742	5					
ANR	3858852	Condition	ce	2725:5:79907:79908	3858742	0	True				
ANR	3858853	Identifier	ce		3858742	0					
ANR	3858854	CompoundStatement		16:9:405:405	3858742	1					
ANR	3858855	ExpressionStatement	ce -> refcount ++	2726:2:79915:79929	3858742	0	True				
ANR	3858856	PostIncDecOperationExpression	ce -> refcount ++		3858742	0					
ANR	3858857	PtrMemberAccess	ce -> refcount		3858742	0					
ANR	3858858	Identifier	ce		3858742	0					
ANR	3858859	Identifier	refcount		3858742	1					
ANR	3858860	IncDec	++		3858742	1					
ANR	3858861	ReturnStatement	return SUCCESS ;	2727:2:79933:79947	3858742	1	True				
ANR	3858862	Identifier	SUCCESS		3858742	0					
ANR	3858863	ReturnStatement	return FAILURE ;	2729:1:79953:79967	3858742	6	True				
ANR	3858864	Identifier	FAILURE		3858742	0					
ANR	3858865	ReturnType	ZEND_API int		3858742	1					
ANR	3858866	Identifier	zend_register_class_alias_ex		3858742	2					
ANR	3858867	ParameterList	"const char * name , size_t name_len , zend_class_entry * ce"		3858742	3					
ANR	3858868	Parameter	const char * name	2709:42:79438:79453	3858742	0	True				
ANR	3858869	ParameterType	const char *		3858742	0					
ANR	3858870	Identifier	name		3858742	1					
ANR	3858871	Parameter	size_t name_len	2709:60:79456:79470	3858742	1	True				
ANR	3858872	ParameterType	size_t		3858742	0					
ANR	3858873	Identifier	name_len		3858742	1					
ANR	3858874	Parameter	zend_class_entry * ce	2709:77:79473:79492	3858742	2	True				
ANR	3858875	ParameterType	zend_class_entry *		3858742	0					
ANR	3858876	Identifier	ce		3858742	1					
ANR	3858877	CFGEntryNode	ENTRY		3858742		True				
ANR	3858878	CFGExitNode	EXIT		3858742		True				
ANR	3858879	Symbol	* name		3858742						
ANR	3858880	Symbol	ce		3858742						
ANR	3858881	Symbol	zend_string_alloc		3858742						
ANR	3858882	Symbol	SUCCESS		3858742						
ANR	3858883	Symbol	CG		3858742						
ANR	3858884	Symbol	* ce		3858742						
ANR	3858885	Symbol	ce -> refcount		3858742						
ANR	3858886	Symbol	FAILURE		3858742						
ANR	3858887	Symbol	ZSTR_VAL		3858742						
ANR	3858888	Symbol	lcname		3858742						
ANR	3858889	Symbol	name		3858742						
ANR	3858890	Symbol	name_len		3858742						
ANR	3858891	Symbol	zend_hash_add_ptr		3858742						
ANR	3858892	Symbol	class_table		3858742						
ANR	3858893	Function	zend_set_hash_symbol	2733:0:79982:80581							
ANR	3858894	FunctionDef	"zend_set_hash_symbol (zval * symbol , const char * name , int name_length , zend_bool is_ref , int num_symbol_tables)"		3858893	0					
ANR	3858895	CompoundStatement		2734:0:80121:80581	3858893	0					
ANR	3858896	IdentifierDeclStatement	HashTable * symbol_table ;	2735:1:80124:80147	3858893	0	True				
ANR	3858897	IdentifierDecl	* symbol_table		3858893	0					
ANR	3858898	IdentifierDeclType	HashTable *		3858893	0					
ANR	3858899	Identifier	symbol_table		3858893	1					
ANR	3858900	IdentifierDeclStatement	va_list symbol_table_list ;	2736:1:80150:80175	3858893	1	True				
ANR	3858901	IdentifierDecl	symbol_table_list		3858893	0					
ANR	3858902	IdentifierDeclType	va_list		3858893	0					
ANR	3858903	Identifier	symbol_table_list		3858893	1					
ANR	3858904	IfStatement	if ( num_symbol_tables <= 0 )		3858893	2					
ANR	3858905	Condition	num_symbol_tables <= 0	2738:5:80183:80204	3858893	0	True				
ANR	3858906	RelationalExpression	num_symbol_tables <= 0		3858893	0		<=			
ANR	3858907	Identifier	num_symbol_tables		3858893	0					
ANR	3858908	PrimaryExpression	0		3858893	1					
ANR	3858909	ReturnStatement	return FAILURE ;	2738:29:80207:80221	3858893	1	True				
ANR	3858910	Identifier	FAILURE		3858893	0					
ANR	3858911	IfStatement	if ( is_ref )		3858893	3					
ANR	3858912	Condition	is_ref	2740:5:80229:80234	3858893	0	True				
ANR	3858913	Identifier	is_ref		3858893	0					
ANR	3858914	CompoundStatement		7:13:115:115	3858893	1					
ANR	3858915	ExpressionStatement	ZVAL_MAKE_REF ( symbol )	2741:2:80241:80262	3858893	0	True				
ANR	3858916	CallExpression	ZVAL_MAKE_REF ( symbol )		3858893	0					
ANR	3858917	Callee	ZVAL_MAKE_REF		3858893	0					
ANR	3858918	Identifier	ZVAL_MAKE_REF		3858893	0					
ANR	3858919	ArgumentList	symbol		3858893	1					
ANR	3858920	Argument	symbol		3858893	0					
ANR	3858921	Identifier	symbol		3858893	0					
ANR	3858922	ExpressionStatement	"va_start ( symbol_table_list , num_symbol_tables )"	2744:1:80269:80315	3858893	4	True				
ANR	3858923	CallExpression	"va_start ( symbol_table_list , num_symbol_tables )"		3858893	0					
ANR	3858924	Callee	va_start		3858893	0					
ANR	3858925	Identifier	va_start		3858893	0					
ANR	3858926	ArgumentList	symbol_table_list		3858893	1					
ANR	3858927	Argument	symbol_table_list		3858893	0					
ANR	3858928	Identifier	symbol_table_list		3858893	0					
ANR	3858929	Argument	num_symbol_tables		3858893	1					
ANR	3858930	Identifier	num_symbol_tables		3858893	0					
ANR	3858931	WhileStatement	while ( num_symbol_tables -- > 0 )		3858893	5					
ANR	3858932	Condition	num_symbol_tables -- > 0	2745:8:80325:80347	3858893	0	True				
ANR	3858933	RelationalExpression	num_symbol_tables -- > 0		3858893	0		>			
ANR	3858934	PostIncDecOperationExpression	num_symbol_tables --		3858893	0					
ANR	3858935	Identifier	num_symbol_tables		3858893	0					
ANR	3858936	IncDec	--		3858893	1					
ANR	3858937	PrimaryExpression	0		3858893	1					
ANR	3858938	CompoundStatement		12:33:228:228	3858893	1					
ANR	3858939	Statement	symbol_table	2746:2:80354:80365	3858893	0	True				
ANR	3858940	Statement	=	2746:15:80367:80367	3858893	1	True				
ANR	3858941	Statement	va_arg	2746:17:80369:80374	3858893	2	True				
ANR	3858942	Statement	(	2746:23:80375:80375	3858893	3	True				
ANR	3858943	Statement	symbol_table_list	2746:24:80376:80392	3858893	4	True				
ANR	3858944	Statement	","	2746:41:80393:80393	3858893	5	True				
ANR	3858945	Statement	HashTable	2746:43:80395:80403	3858893	6	True				
ANR	3858946	Statement	*	2746:53:80405:80405	3858893	7	True				
ANR	3858947	Statement	)	2746:54:80406:80406	3858893	8	True				
ANR	3858948	ExpressionStatement		2746:55:80407:80407	3858893	9	True				
ANR	3858949	ExpressionStatement	"zend_hash_str_update ( symbol_table , name , name_length , symbol )"	2747:2:80411:80472	3858893	10	True				
ANR	3858950	CallExpression	"zend_hash_str_update ( symbol_table , name , name_length , symbol )"		3858893	0					
ANR	3858951	Callee	zend_hash_str_update		3858893	0					
ANR	3858952	Identifier	zend_hash_str_update		3858893	0					
ANR	3858953	ArgumentList	symbol_table		3858893	1					
ANR	3858954	Argument	symbol_table		3858893	0					
ANR	3858955	Identifier	symbol_table		3858893	0					
ANR	3858956	Argument	name		3858893	1					
ANR	3858957	Identifier	name		3858893	0					
ANR	3858958	Argument	name_length		3858893	2					
ANR	3858959	Identifier	name_length		3858893	0					
ANR	3858960	Argument	symbol		3858893	3					
ANR	3858961	Identifier	symbol		3858893	0					
ANR	3858962	IfStatement	if ( Z_REFCOUNTED_P ( symbol ) )		3858893	11					
ANR	3858963	Condition	Z_REFCOUNTED_P ( symbol )	2748:6:80480:80501	3858893	0	True				
ANR	3858964	CallExpression	Z_REFCOUNTED_P ( symbol )		3858893	0					
ANR	3858965	Callee	Z_REFCOUNTED_P		3858893	0					
ANR	3858966	Identifier	Z_REFCOUNTED_P		3858893	0					
ANR	3858967	ArgumentList	symbol		3858893	1					
ANR	3858968	Argument	symbol		3858893	0					
ANR	3858969	Identifier	symbol		3858893	0					
ANR	3858970	CompoundStatement		15:30:382:382	3858893	1					
ANR	3858971	ExpressionStatement	Z_ADDREF_P ( symbol )	2749:3:80509:80527	3858893	0	True				
ANR	3858972	CallExpression	Z_ADDREF_P ( symbol )		3858893	0					
ANR	3858973	Callee	Z_ADDREF_P		3858893	0					
ANR	3858974	Identifier	Z_ADDREF_P		3858893	0					
ANR	3858975	ArgumentList	symbol		3858893	1					
ANR	3858976	Argument	symbol		3858893	0					
ANR	3858977	Identifier	symbol		3858893	0					
ANR	3858978	ExpressionStatement	va_end ( symbol_table_list )	2752:1:80537:80562	3858893	6	True				
ANR	3858979	CallExpression	va_end ( symbol_table_list )		3858893	0					
ANR	3858980	Callee	va_end		3858893	0					
ANR	3858981	Identifier	va_end		3858893	0					
ANR	3858982	ArgumentList	symbol_table_list		3858893	1					
ANR	3858983	Argument	symbol_table_list		3858893	0					
ANR	3858984	Identifier	symbol_table_list		3858893	0					
ANR	3858985	ReturnStatement	return SUCCESS ;	2753:1:80565:80579	3858893	7	True				
ANR	3858986	Identifier	SUCCESS		3858893	0					
ANR	3858987	ReturnType	ZEND_API int		3858893	1					
ANR	3858988	Identifier	zend_set_hash_symbol		3858893	2					
ANR	3858989	ParameterList	"zval * symbol , const char * name , int name_length , zend_bool is_ref , int num_symbol_tables"		3858893	3					
ANR	3858990	Parameter	zval * symbol	2733:34:80016:80027	3858893	0	True				
ANR	3858991	ParameterType	zval *		3858893	0					
ANR	3858992	Identifier	symbol		3858893	1					
ANR	3858993	Parameter	const char * name	2733:48:80030:80045	3858893	1	True				
ANR	3858994	ParameterType	const char *		3858893	0					
ANR	3858995	Identifier	name		3858893	1					
ANR	3858996	Parameter	int name_length	2733:66:80048:80062	3858893	2	True				
ANR	3858997	ParameterType	int		3858893	0					
ANR	3858998	Identifier	name_length		3858893	1					
ANR	3858999	Parameter	zend_bool is_ref	2733:83:80065:80080	3858893	3	True				
ANR	3859000	ParameterType	zend_bool		3858893	0					
ANR	3859001	Identifier	is_ref		3858893	1					
ANR	3859002	Parameter	int num_symbol_tables	2733:101:80083:80103	3858893	4	True				
ANR	3859003	ParameterType	int		3858893	0					
ANR	3859004	Identifier	num_symbol_tables		3858893	1					
ANR	3859005	CFGEntryNode	ENTRY		3858893		True				
ANR	3859006	CFGExitNode	EXIT		3858893		True				
ANR	3859007	Symbol	is_ref		3858893						
ANR	3859008	Symbol	symbol		3858893						
ANR	3859009	Symbol	symbol_table_list		3858893						
ANR	3859010	Symbol	SUCCESS		3858893						
ANR	3859011	Symbol	num_symbol_tables		3858893						
ANR	3859012	Symbol	name		3858893						
ANR	3859013	Symbol	name_length		3858893						
ANR	3859014	Symbol	symbol_table		3858893						
ANR	3859015	Symbol	Z_REFCOUNTED_P		3858893						
ANR	3859016	Symbol	FAILURE		3858893						
ANR	3859017	Function	zend_disable_function	2767:0:80920:81355							
ANR	3859018	FunctionDef	"zend_disable_function (char * function_name , size_t function_name_length)"		3859017	0					
ANR	3859019	CompoundStatement		2768:0:81015:81355	3859017	0					
ANR	3859020	IdentifierDeclStatement	zend_internal_function * func ;	2769:1:81018:81046	3859017	0	True				
ANR	3859021	IdentifierDecl	* func		3859017	0					
ANR	3859022	IdentifierDeclType	zend_internal_function *		3859017	0					
ANR	3859023	Identifier	func		3859017	1					
ANR	3859024	IfStatement	"if ( ( func = zend_hash_str_find_ptr ( CG ( function_table ) , function_name , function_name_length ) ) )"		3859017	1					
ANR	3859025	Condition	"func = zend_hash_str_find_ptr ( CG ( function_table ) , function_name , function_name_length )"	2770:5:81053:81140	3859017	0	True				
ANR	3859026	AssignmentExpression	"func = zend_hash_str_find_ptr ( CG ( function_table ) , function_name , function_name_length )"		3859017	0		=			
ANR	3859027	Identifier	func		3859017	0					
ANR	3859028	CallExpression	"zend_hash_str_find_ptr ( CG ( function_table ) , function_name , function_name_length )"		3859017	1					
ANR	3859029	Callee	zend_hash_str_find_ptr		3859017	0					
ANR	3859030	Identifier	zend_hash_str_find_ptr		3859017	0					
ANR	3859031	ArgumentList	CG ( function_table )		3859017	1					
ANR	3859032	Argument	CG ( function_table )		3859017	0					
ANR	3859033	CallExpression	CG ( function_table )		3859017	0					
ANR	3859034	Callee	CG		3859017	0					
ANR	3859035	Identifier	CG		3859017	0					
ANR	3859036	ArgumentList	function_table		3859017	1					
ANR	3859037	Argument	function_table		3859017	0					
ANR	3859038	Identifier	function_table		3859017	0					
ANR	3859039	Argument	function_name		3859017	1					
ANR	3859040	Identifier	function_name		3859017	0					
ANR	3859041	Argument	function_name_length		3859017	2					
ANR	3859042	Identifier	function_name_length		3859017	0					
ANR	3859043	CompoundStatement		3:95:127:127	3859017	1					
ANR	3859044	ExpressionStatement	func -> fn_flags &= ~ ( ZEND_ACC_VARIADIC | ZEND_ACC_HAS_TYPE_HINTS )	2771:5:81150:81214	3859017	0	True				
ANR	3859045	AssignmentExpression	func -> fn_flags &= ~ ( ZEND_ACC_VARIADIC | ZEND_ACC_HAS_TYPE_HINTS )		3859017	0		&=			
ANR	3859046	PtrMemberAccess	func -> fn_flags		3859017	0					
ANR	3859047	Identifier	func		3859017	0					
ANR	3859048	Identifier	fn_flags		3859017	1					
ANR	3859049	UnaryOperationExpression	~ ( ZEND_ACC_VARIADIC | ZEND_ACC_HAS_TYPE_HINTS )		3859017	1					
ANR	3859050	UnaryOperator	~		3859017	0					
ANR	3859051	InclusiveOrExpression	ZEND_ACC_VARIADIC | ZEND_ACC_HAS_TYPE_HINTS		3859017	1		|			
ANR	3859052	Identifier	ZEND_ACC_VARIADIC		3859017	0					
ANR	3859053	Identifier	ZEND_ACC_HAS_TYPE_HINTS		3859017	1					
ANR	3859054	ExpressionStatement	func -> num_args = 0	2772:2:81218:81236	3859017	1	True				
ANR	3859055	AssignmentExpression	func -> num_args = 0		3859017	0		=			
ANR	3859056	PtrMemberAccess	func -> num_args		3859017	0					
ANR	3859057	Identifier	func		3859017	0					
ANR	3859058	Identifier	num_args		3859017	1					
ANR	3859059	PrimaryExpression	0		3859017	1					
ANR	3859060	ExpressionStatement	func -> arg_info = NULL	2773:2:81240:81261	3859017	2	True				
ANR	3859061	AssignmentExpression	func -> arg_info = NULL		3859017	0		=			
ANR	3859062	PtrMemberAccess	func -> arg_info		3859017	0					
ANR	3859063	Identifier	func		3859017	0					
ANR	3859064	Identifier	arg_info		3859017	1					
ANR	3859065	Identifier	NULL		3859017	1					
ANR	3859066	ExpressionStatement	func -> handler = ZEND_FN ( display_disabled_function )	2774:2:81265:81315	3859017	3	True				
ANR	3859067	AssignmentExpression	func -> handler = ZEND_FN ( display_disabled_function )		3859017	0		=			
ANR	3859068	PtrMemberAccess	func -> handler		3859017	0					
ANR	3859069	Identifier	func		3859017	0					
ANR	3859070	Identifier	handler		3859017	1					
ANR	3859071	CallExpression	ZEND_FN ( display_disabled_function )		3859017	1					
ANR	3859072	Callee	ZEND_FN		3859017	0					
ANR	3859073	Identifier	ZEND_FN		3859017	0					
ANR	3859074	ArgumentList	display_disabled_function		3859017	1					
ANR	3859075	Argument	display_disabled_function		3859017	0					
ANR	3859076	Identifier	display_disabled_function		3859017	0					
ANR	3859077	ReturnStatement	return SUCCESS ;	2775:2:81319:81333	3859017	4	True				
ANR	3859078	Identifier	SUCCESS		3859017	0					
ANR	3859079	ReturnStatement	return FAILURE ;	2777:1:81339:81353	3859017	2	True				
ANR	3859080	Identifier	FAILURE		3859017	0					
ANR	3859081	ReturnType	ZEND_API int		3859017	1					
ANR	3859082	Identifier	zend_disable_function		3859017	2					
ANR	3859083	ParameterList	"char * function_name , size_t function_name_length"		3859017	3					
ANR	3859084	Parameter	char * function_name	2767:35:80955:80973	3859017	0	True				
ANR	3859085	ParameterType	char *		3859017	0					
ANR	3859086	Identifier	function_name		3859017	1					
ANR	3859087	Parameter	size_t function_name_length	2767:56:80976:81002	3859017	1	True				
ANR	3859088	ParameterType	size_t		3859017	0					
ANR	3859089	Identifier	function_name_length		3859017	1					
ANR	3859090	CFGEntryNode	ENTRY		3859017		True				
ANR	3859091	CFGExitNode	EXIT		3859017		True				
ANR	3859092	Symbol	NULL		3859017						
ANR	3859093	Symbol	SUCCESS		3859017						
ANR	3859094	Symbol	CG		3859017						
ANR	3859095	Symbol	* func		3859017						
ANR	3859096	Symbol	func -> num_args		3859017						
ANR	3859097	Symbol	func -> fn_flags		3859017						
ANR	3859098	Symbol	display_disabled_function		3859017						
ANR	3859099	Symbol	FAILURE		3859017						
ANR	3859100	Symbol	ZEND_ACC_HAS_TYPE_HINTS		3859017						
ANR	3859101	Symbol	func -> arg_info		3859017						
ANR	3859102	Symbol	ZEND_ACC_VARIADIC		3859017						
ANR	3859103	Symbol	func		3859017						
ANR	3859104	Symbol	function_name_length		3859017						
ANR	3859105	Symbol	function_name		3859017						
ANR	3859106	Symbol	zend_hash_str_find_ptr		3859017						
ANR	3859107	Symbol	func -> handler		3859017						
ANR	3859108	Symbol	function_table		3859017						
ANR	3859109	Symbol	ZEND_FN		3859017						
ANR	3859110	Function	display_disabled_class	2784:0:81419:81682							
ANR	3859111	FunctionDef	display_disabled_class (zend_class_entry * class_type)		3859110	0					
ANR	3859112	CompoundStatement		2785:0:81502:81682	3859110	0					
ANR	3859113	IdentifierDeclStatement	zend_object * intern ;	2786:1:81505:81524	3859110	0	True				
ANR	3859114	IdentifierDecl	* intern		3859110	0					
ANR	3859115	IdentifierDeclType	zend_object *		3859110	0					
ANR	3859116	Identifier	intern		3859110	1					
ANR	3859117	ExpressionStatement	intern = zend_objects_new ( class_type )	2788:1:81528:81565	3859110	1	True				
ANR	3859118	AssignmentExpression	intern = zend_objects_new ( class_type )		3859110	0		=			
ANR	3859119	Identifier	intern		3859110	0					
ANR	3859120	CallExpression	zend_objects_new ( class_type )		3859110	1					
ANR	3859121	Callee	zend_objects_new		3859110	0					
ANR	3859122	Identifier	zend_objects_new		3859110	0					
ANR	3859123	ArgumentList	class_type		3859110	1					
ANR	3859124	Argument	class_type		3859110	0					
ANR	3859125	Identifier	class_type		3859110	0					
ANR	3859126	ExpressionStatement	"zend_error ( E_WARNING , ""%s() has been disabled for security reasons"" , ZSTR_VAL ( class_type -> name ) )"	2789:1:81568:81664	3859110	2	True				
ANR	3859127	CallExpression	"zend_error ( E_WARNING , ""%s() has been disabled for security reasons"" , ZSTR_VAL ( class_type -> name ) )"		3859110	0					
ANR	3859128	Callee	zend_error		3859110	0					
ANR	3859129	Identifier	zend_error		3859110	0					
ANR	3859130	ArgumentList	E_WARNING		3859110	1					
ANR	3859131	Argument	E_WARNING		3859110	0					
ANR	3859132	Identifier	E_WARNING		3859110	0					
ANR	3859133	Argument	"""%s() has been disabled for security reasons"""		3859110	1					
ANR	3859134	PrimaryExpression	"""%s() has been disabled for security reasons"""		3859110	0					
ANR	3859135	Argument	ZSTR_VAL ( class_type -> name )		3859110	2					
ANR	3859136	CallExpression	ZSTR_VAL ( class_type -> name )		3859110	0					
ANR	3859137	Callee	ZSTR_VAL		3859110	0					
ANR	3859138	Identifier	ZSTR_VAL		3859110	0					
ANR	3859139	ArgumentList	class_type -> name		3859110	1					
ANR	3859140	Argument	class_type -> name		3859110	0					
ANR	3859141	PtrMemberAccess	class_type -> name		3859110	0					
ANR	3859142	Identifier	class_type		3859110	0					
ANR	3859143	Identifier	name		3859110	1					
ANR	3859144	ReturnStatement	return intern ;	2790:1:81667:81680	3859110	3	True				
ANR	3859145	Identifier	intern		3859110	0					
ANR	3859146	ReturnType	static zend_object *		3859110	1					
ANR	3859147	Identifier	display_disabled_class		3859110	2					
ANR	3859148	ParameterList	zend_class_entry * class_type		3859110	3					
ANR	3859149	Parameter	zend_class_entry * class_type	2784:43:81462:81489	3859110	0	True				
ANR	3859150	ParameterType	zend_class_entry *		3859110	0					
ANR	3859151	Identifier	class_type		3859110	1					
ANR	3859152	CFGEntryNode	ENTRY		3859110		True				
ANR	3859153	CFGExitNode	EXIT		3859110		True				
ANR	3859154	Symbol	E_WARNING		3859110						
ANR	3859155	Symbol	class_type		3859110						
ANR	3859156	Symbol	intern		3859110						
ANR	3859157	Symbol	* class_type		3859110						
ANR	3859158	Symbol	zend_objects_new		3859110						
ANR	3859159	Symbol	class_type -> name		3859110						
ANR	3859160	Symbol	ZSTR_VAL		3859110						
ANR	3859161	DeclStmt									
ANR	3859162	Decl							const zend_function_entry	const zend_function_entry [ ]	disabled_class_new
ANR	3859163	Function	zend_disable_class	2801:0:81820:82412							
ANR	3859164	FunctionDef	"zend_disable_class (char * class_name , size_t class_name_length)"		3859163	0					
ANR	3859165	CompoundStatement		2802:0:81906:82412	3859163	0					
ANR	3859166	IdentifierDeclStatement	zend_class_entry * disabled_class ;	2803:1:81909:81941	3859163	0	True				
ANR	3859167	IdentifierDecl	* disabled_class		3859163	0					
ANR	3859168	IdentifierDeclType	zend_class_entry *		3859163	0					
ANR	3859169	Identifier	disabled_class		3859163	1					
ANR	3859170	IdentifierDeclStatement	zend_string * key ;	2804:1:81944:81960	3859163	1	True				
ANR	3859171	IdentifierDecl	* key		3859163	0					
ANR	3859172	IdentifierDeclType	zend_string *		3859163	0					
ANR	3859173	Identifier	key		3859163	1					
ANR	3859174	ExpressionStatement	"key = zend_string_alloc ( class_name_length , 0 )"	2806:1:81964:82009	3859163	2	True				
ANR	3859175	AssignmentExpression	"key = zend_string_alloc ( class_name_length , 0 )"		3859163	0		=			
ANR	3859176	Identifier	key		3859163	0					
ANR	3859177	CallExpression	"zend_string_alloc ( class_name_length , 0 )"		3859163	1					
ANR	3859178	Callee	zend_string_alloc		3859163	0					
ANR	3859179	Identifier	zend_string_alloc		3859163	0					
ANR	3859180	ArgumentList	class_name_length		3859163	1					
ANR	3859181	Argument	class_name_length		3859163	0					
ANR	3859182	Identifier	class_name_length		3859163	0					
ANR	3859183	Argument	0		3859163	1					
ANR	3859184	PrimaryExpression	0		3859163	0					
ANR	3859185	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( key ) , class_name , class_name_length )"	2807:1:82012:82079	3859163	3	True				
ANR	3859186	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( key ) , class_name , class_name_length )"		3859163	0					
ANR	3859187	Callee	zend_str_tolower_copy		3859163	0					
ANR	3859188	Identifier	zend_str_tolower_copy		3859163	0					
ANR	3859189	ArgumentList	ZSTR_VAL ( key )		3859163	1					
ANR	3859190	Argument	ZSTR_VAL ( key )		3859163	0					
ANR	3859191	CallExpression	ZSTR_VAL ( key )		3859163	0					
ANR	3859192	Callee	ZSTR_VAL		3859163	0					
ANR	3859193	Identifier	ZSTR_VAL		3859163	0					
ANR	3859194	ArgumentList	key		3859163	1					
ANR	3859195	Argument	key		3859163	0					
ANR	3859196	Identifier	key		3859163	0					
ANR	3859197	Argument	class_name		3859163	1					
ANR	3859198	Identifier	class_name		3859163	0					
ANR	3859199	Argument	class_name_length		3859163	2					
ANR	3859200	Identifier	class_name_length		3859163	0					
ANR	3859201	ExpressionStatement	"disabled_class = zend_hash_find_ptr ( CG ( class_table ) , key )"	2808:1:82082:82139	3859163	4	True				
ANR	3859202	AssignmentExpression	"disabled_class = zend_hash_find_ptr ( CG ( class_table ) , key )"		3859163	0		=			
ANR	3859203	Identifier	disabled_class		3859163	0					
ANR	3859204	CallExpression	"zend_hash_find_ptr ( CG ( class_table ) , key )"		3859163	1					
ANR	3859205	Callee	zend_hash_find_ptr		3859163	0					
ANR	3859206	Identifier	zend_hash_find_ptr		3859163	0					
ANR	3859207	ArgumentList	CG ( class_table )		3859163	1					
ANR	3859208	Argument	CG ( class_table )		3859163	0					
ANR	3859209	CallExpression	CG ( class_table )		3859163	0					
ANR	3859210	Callee	CG		3859163	0					
ANR	3859211	Identifier	CG		3859163	0					
ANR	3859212	ArgumentList	class_table		3859163	1					
ANR	3859213	Argument	class_table		3859163	0					
ANR	3859214	Identifier	class_table		3859163	0					
ANR	3859215	Argument	key		3859163	1					
ANR	3859216	Identifier	key		3859163	0					
ANR	3859217	IfStatement	if ( ! disabled_class )		3859163	5					
ANR	3859218	Condition	! disabled_class	2809:5:82146:82160	3859163	0	True				
ANR	3859219	UnaryOperationExpression	! disabled_class		3859163	0					
ANR	3859220	UnaryOperator	!		3859163	0					
ANR	3859221	Identifier	disabled_class		3859163	1					
ANR	3859222	CompoundStatement		8:22:256:256	3859163	1					
ANR	3859223	ReturnStatement	return FAILURE ;	2810:2:82167:82181	3859163	0	True				
ANR	3859224	Identifier	FAILURE		3859163	0					
ANR	3859225	ExpressionStatement	"INIT_CLASS_ENTRY_INIT_METHODS ( ( * disabled_class ) , disabled_class_new , NULL , NULL , NULL , NULL , NULL )"	2812:1:82187:82285	3859163	6	True				
ANR	3859226	CallExpression	"INIT_CLASS_ENTRY_INIT_METHODS ( ( * disabled_class ) , disabled_class_new , NULL , NULL , NULL , NULL , NULL )"		3859163	0					
ANR	3859227	Callee	INIT_CLASS_ENTRY_INIT_METHODS		3859163	0					
ANR	3859228	Identifier	INIT_CLASS_ENTRY_INIT_METHODS		3859163	0					
ANR	3859229	ArgumentList	* disabled_class		3859163	1					
ANR	3859230	Argument	* disabled_class		3859163	0					
ANR	3859231	UnaryOperationExpression	* disabled_class		3859163	0					
ANR	3859232	UnaryOperator	*		3859163	0					
ANR	3859233	Identifier	disabled_class		3859163	1					
ANR	3859234	Argument	disabled_class_new		3859163	1					
ANR	3859235	Identifier	disabled_class_new		3859163	0					
ANR	3859236	Argument	NULL		3859163	2					
ANR	3859237	Identifier	NULL		3859163	0					
ANR	3859238	Argument	NULL		3859163	3					
ANR	3859239	Identifier	NULL		3859163	0					
ANR	3859240	Argument	NULL		3859163	4					
ANR	3859241	Identifier	NULL		3859163	0					
ANR	3859242	Argument	NULL		3859163	5					
ANR	3859243	Identifier	NULL		3859163	0					
ANR	3859244	Argument	NULL		3859163	6					
ANR	3859245	Identifier	NULL		3859163	0					
ANR	3859246	ExpressionStatement	disabled_class -> create_object = display_disabled_class	2813:1:82288:82342	3859163	7	True				
ANR	3859247	AssignmentExpression	disabled_class -> create_object = display_disabled_class		3859163	0		=			
ANR	3859248	PtrMemberAccess	disabled_class -> create_object		3859163	0					
ANR	3859249	Identifier	disabled_class		3859163	0					
ANR	3859250	Identifier	create_object		3859163	1					
ANR	3859251	Identifier	display_disabled_class		3859163	1					
ANR	3859252	ExpressionStatement	zend_hash_clean ( & disabled_class -> function_table )	2814:1:82345:82393	3859163	8	True				
ANR	3859253	CallExpression	zend_hash_clean ( & disabled_class -> function_table )		3859163	0					
ANR	3859254	Callee	zend_hash_clean		3859163	0					
ANR	3859255	Identifier	zend_hash_clean		3859163	0					
ANR	3859256	ArgumentList	& disabled_class -> function_table		3859163	1					
ANR	3859257	Argument	& disabled_class -> function_table		3859163	0					
ANR	3859258	UnaryOperationExpression	& disabled_class -> function_table		3859163	0					
ANR	3859259	UnaryOperator	&		3859163	0					
ANR	3859260	PtrMemberAccess	disabled_class -> function_table		3859163	1					
ANR	3859261	Identifier	disabled_class		3859163	0					
ANR	3859262	Identifier	function_table		3859163	1					
ANR	3859263	ReturnStatement	return SUCCESS ;	2815:1:82396:82410	3859163	9	True				
ANR	3859264	Identifier	SUCCESS		3859163	0					
ANR	3859265	ReturnType	ZEND_API int		3859163	1					
ANR	3859266	Identifier	zend_disable_class		3859163	2					
ANR	3859267	ParameterList	"char * class_name , size_t class_name_length"		3859163	3					
ANR	3859268	Parameter	char * class_name	2801:32:81852:81867	3859163	0	True				
ANR	3859269	ParameterType	char *		3859163	0					
ANR	3859270	Identifier	class_name		3859163	1					
ANR	3859271	Parameter	size_t class_name_length	2801:50:81870:81893	3859163	1	True				
ANR	3859272	ParameterType	size_t		3859163	0					
ANR	3859273	Identifier	class_name_length		3859163	1					
ANR	3859274	CFGEntryNode	ENTRY		3859163		True				
ANR	3859275	CFGExitNode	EXIT		3859163		True				
ANR	3859276	Symbol	zend_string_alloc		3859163						
ANR	3859277	Symbol	NULL		3859163						
ANR	3859278	Symbol	SUCCESS		3859163						
ANR	3859279	Symbol	CG		3859163						
ANR	3859280	Symbol	display_disabled_class		3859163						
ANR	3859281	Symbol	& disabled_class -> function_table		3859163						
ANR	3859282	Symbol	disabled_class_new		3859163						
ANR	3859283	Symbol	class_name_length		3859163						
ANR	3859284	Symbol	disabled_class		3859163						
ANR	3859285	Symbol	FAILURE		3859163						
ANR	3859286	Symbol	ZSTR_VAL		3859163						
ANR	3859287	Symbol	class_table		3859163						
ANR	3859288	Symbol	class_name		3859163						
ANR	3859289	Symbol	zend_hash_find_ptr		3859163						
ANR	3859290	Symbol	key		3859163						
ANR	3859291	Symbol	* disabled_class		3859163						
ANR	3859292	Symbol	disabled_class -> create_object		3859163						
ANR	3859293	Function	zend_is_callable_check_class	2819:0:82425:85175							
ANR	3859294	FunctionDef	"zend_is_callable_check_class (zend_string * name , zend_fcall_info_cache * fcc , int * strict_class , char * * error)"		3859293	0					
ANR	3859295	CompoundStatement		2820:0:82555:85175	3859293	0					
ANR	3859296	IdentifierDeclStatement	int ret = 0 ;	2821:1:82558:82569	3859293	0	True				
ANR	3859297	IdentifierDecl	ret = 0		3859293	0					
ANR	3859298	IdentifierDeclType	int		3859293	0					
ANR	3859299	Identifier	ret		3859293	1					
ANR	3859300	AssignmentExpression	ret = 0		3859293	2		=			
ANR	3859301	Identifier	ret		3859293	0					
ANR	3859302	PrimaryExpression	0		3859293	1					
ANR	3859303	IdentifierDeclStatement	zend_class_entry * ce ;	2822:1:82572:82592	3859293	1	True				
ANR	3859304	IdentifierDecl	* ce		3859293	0					
ANR	3859305	IdentifierDeclType	zend_class_entry *		3859293	0					
ANR	3859306	Identifier	ce		3859293	1					
ANR	3859307	IdentifierDeclStatement	size_t name_len = ZSTR_LEN ( name ) ;	2823:1:82595:82627	3859293	2	True				
ANR	3859308	IdentifierDecl	name_len = ZSTR_LEN ( name )		3859293	0					
ANR	3859309	IdentifierDeclType	size_t		3859293	0					
ANR	3859310	Identifier	name_len		3859293	1					
ANR	3859311	AssignmentExpression	name_len = ZSTR_LEN ( name )		3859293	2		=			
ANR	3859312	Identifier	name_len		3859293	0					
ANR	3859313	CallExpression	ZSTR_LEN ( name )		3859293	1					
ANR	3859314	Callee	ZSTR_LEN		3859293	0					
ANR	3859315	Identifier	ZSTR_LEN		3859293	0					
ANR	3859316	ArgumentList	name		3859293	1					
ANR	3859317	Argument	name		3859293	0					
ANR	3859318	Identifier	name		3859293	0					
ANR	3859319	IdentifierDeclStatement	zend_string * lcname ;	2824:1:82630:82649	3859293	3	True				
ANR	3859320	IdentifierDecl	* lcname		3859293	0					
ANR	3859321	IdentifierDeclType	zend_string *		3859293	0					
ANR	3859322	Identifier	lcname		3859293	1					
ANR	3859323	ExpressionStatement	ALLOCA_FLAG ( use_heap )	2825:1:82652:82673	3859293	4	True				
ANR	3859324	CallExpression	ALLOCA_FLAG ( use_heap )		3859293	0					
ANR	3859325	Callee	ALLOCA_FLAG		3859293	0					
ANR	3859326	Identifier	ALLOCA_FLAG		3859293	0					
ANR	3859327	ArgumentList	use_heap		3859293	1					
ANR	3859328	Argument	use_heap		3859293	0					
ANR	3859329	Identifier	use_heap		3859293	0					
ANR	3859330	ExpressionStatement	"ZSTR_ALLOCA_ALLOC ( lcname , name_len , use_heap )"	2827:1:82677:82722	3859293	5	True				
ANR	3859331	CallExpression	"ZSTR_ALLOCA_ALLOC ( lcname , name_len , use_heap )"		3859293	0					
ANR	3859332	Callee	ZSTR_ALLOCA_ALLOC		3859293	0					
ANR	3859333	Identifier	ZSTR_ALLOCA_ALLOC		3859293	0					
ANR	3859334	ArgumentList	lcname		3859293	1					
ANR	3859335	Argument	lcname		3859293	0					
ANR	3859336	Identifier	lcname		3859293	0					
ANR	3859337	Argument	name_len		3859293	1					
ANR	3859338	Identifier	name_len		3859293	0					
ANR	3859339	Argument	use_heap		3859293	2					
ANR	3859340	Identifier	use_heap		3859293	0					
ANR	3859341	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , ZSTR_VAL ( name ) , name_len )"	2828:1:82725:82790	3859293	6	True				
ANR	3859342	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lcname ) , ZSTR_VAL ( name ) , name_len )"		3859293	0					
ANR	3859343	Callee	zend_str_tolower_copy		3859293	0					
ANR	3859344	Identifier	zend_str_tolower_copy		3859293	0					
ANR	3859345	ArgumentList	ZSTR_VAL ( lcname )		3859293	1					
ANR	3859346	Argument	ZSTR_VAL ( lcname )		3859293	0					
ANR	3859347	CallExpression	ZSTR_VAL ( lcname )		3859293	0					
ANR	3859348	Callee	ZSTR_VAL		3859293	0					
ANR	3859349	Identifier	ZSTR_VAL		3859293	0					
ANR	3859350	ArgumentList	lcname		3859293	1					
ANR	3859351	Argument	lcname		3859293	0					
ANR	3859352	Identifier	lcname		3859293	0					
ANR	3859353	Argument	ZSTR_VAL ( name )		3859293	1					
ANR	3859354	CallExpression	ZSTR_VAL ( name )		3859293	0					
ANR	3859355	Callee	ZSTR_VAL		3859293	0					
ANR	3859356	Identifier	ZSTR_VAL		3859293	0					
ANR	3859357	ArgumentList	name		3859293	1					
ANR	3859358	Argument	name		3859293	0					
ANR	3859359	Identifier	name		3859293	0					
ANR	3859360	Argument	name_len		3859293	2					
ANR	3859361	Identifier	name_len		3859293	0					
ANR	3859362	ExpressionStatement	* strict_class = 0	2830:1:82794:82811	3859293	7	True				
ANR	3859363	AssignmentExpression	* strict_class = 0		3859293	0		=			
ANR	3859364	UnaryOperationExpression	* strict_class		3859293	0					
ANR	3859365	UnaryOperator	*		3859293	0					
ANR	3859366	Identifier	strict_class		3859293	1					
ANR	3859367	PrimaryExpression	0		3859293	1					
ANR	3859368	IfStatement	"if ( zend_string_equals_literal ( lcname , ""self"" ) )"		3859293	8					
ANR	3859369	Condition	"zend_string_equals_literal ( lcname , ""self"" )"	2831:5:82818:82859	3859293	0	True				
ANR	3859370	CallExpression	"zend_string_equals_literal ( lcname , ""self"" )"		3859293	0					
ANR	3859371	Callee	zend_string_equals_literal		3859293	0					
ANR	3859372	Identifier	zend_string_equals_literal		3859293	0					
ANR	3859373	ArgumentList	lcname		3859293	1					
ANR	3859374	Argument	lcname		3859293	0					
ANR	3859375	Identifier	lcname		3859293	0					
ANR	3859376	Argument	"""self"""		3859293	1					
ANR	3859377	PrimaryExpression	"""self"""		3859293	0					
ANR	3859378	CompoundStatement		12:49:306:306	3859293	1					
ANR	3859379	IfStatement	if ( ! EG ( scope ) )		3859293	0					
ANR	3859380	Condition	! EG ( scope )	2832:6:82870:82879	3859293	0	True				
ANR	3859381	UnaryOperationExpression	! EG ( scope )		3859293	0					
ANR	3859382	UnaryOperator	!		3859293	0					
ANR	3859383	CallExpression	EG ( scope )		3859293	1					
ANR	3859384	Callee	EG		3859293	0					
ANR	3859385	Identifier	EG		3859293	0					
ANR	3859386	ArgumentList	scope		3859293	1					
ANR	3859387	Argument	scope		3859293	0					
ANR	3859388	Identifier	scope		3859293	0					
ANR	3859389	CompoundStatement		13:18:326:326	3859293	1					
ANR	3859390	IfStatement	if ( error )		3859293	0					
ANR	3859391	Condition	error	2833:7:82891:82895	3859293	0	True				
ANR	3859392	Identifier	error		3859293	0					
ANR	3859393	ExpressionStatement	"* error = estrdup ( ""cannot access self:: when no class scope is active"" )"	2833:14:82898:82968	3859293	1	True				
ANR	3859394	AssignmentExpression	"* error = estrdup ( ""cannot access self:: when no class scope is active"" )"		3859293	0		=			
ANR	3859395	UnaryOperationExpression	* error		3859293	0					
ANR	3859396	UnaryOperator	*		3859293	0					
ANR	3859397	Identifier	error		3859293	1					
ANR	3859398	CallExpression	"estrdup ( ""cannot access self:: when no class scope is active"" )"		3859293	1					
ANR	3859399	Callee	estrdup		3859293	0					
ANR	3859400	Identifier	estrdup		3859293	0					
ANR	3859401	ArgumentList	"""cannot access self:: when no class scope is active"""		3859293	1					
ANR	3859402	Argument	"""cannot access self:: when no class scope is active"""		3859293	0					
ANR	3859403	PrimaryExpression	"""cannot access self:: when no class scope is active"""		3859293	0					
ANR	3859404	ElseStatement	else		3859293	0					
ANR	3859405	CompoundStatement		15:9:423:423	3859293	0					
ANR	3859406	ExpressionStatement	fcc -> called_scope = zend_get_called_scope ( EG ( current_execute_data ) )	2835:3:82984:83051	3859293	0	True				
ANR	3859407	AssignmentExpression	fcc -> called_scope = zend_get_called_scope ( EG ( current_execute_data ) )		3859293	0		=			
ANR	3859408	PtrMemberAccess	fcc -> called_scope		3859293	0					
ANR	3859409	Identifier	fcc		3859293	0					
ANR	3859410	Identifier	called_scope		3859293	1					
ANR	3859411	CallExpression	zend_get_called_scope ( EG ( current_execute_data ) )		3859293	1					
ANR	3859412	Callee	zend_get_called_scope		3859293	0					
ANR	3859413	Identifier	zend_get_called_scope		3859293	0					
ANR	3859414	ArgumentList	EG ( current_execute_data )		3859293	1					
ANR	3859415	Argument	EG ( current_execute_data )		3859293	0					
ANR	3859416	CallExpression	EG ( current_execute_data )		3859293	0					
ANR	3859417	Callee	EG		3859293	0					
ANR	3859418	Identifier	EG		3859293	0					
ANR	3859419	ArgumentList	current_execute_data		3859293	1					
ANR	3859420	Argument	current_execute_data		3859293	0					
ANR	3859421	Identifier	current_execute_data		3859293	0					
ANR	3859422	ExpressionStatement	fcc -> calling_scope = EG ( scope )	2836:3:83056:83086	3859293	1	True				
ANR	3859423	AssignmentExpression	fcc -> calling_scope = EG ( scope )		3859293	0		=			
ANR	3859424	PtrMemberAccess	fcc -> calling_scope		3859293	0					
ANR	3859425	Identifier	fcc		3859293	0					
ANR	3859426	Identifier	calling_scope		3859293	1					
ANR	3859427	CallExpression	EG ( scope )		3859293	1					
ANR	3859428	Callee	EG		3859293	0					
ANR	3859429	Identifier	EG		3859293	0					
ANR	3859430	ArgumentList	scope		3859293	1					
ANR	3859431	Argument	scope		3859293	0					
ANR	3859432	Identifier	scope		3859293	0					
ANR	3859433	IfStatement	if ( ! fcc -> object )		3859293	2					
ANR	3859434	Condition	! fcc -> object	2837:7:83095:83106	3859293	0	True				
ANR	3859435	UnaryOperationExpression	! fcc -> object		3859293	0					
ANR	3859436	UnaryOperator	!		3859293	0					
ANR	3859437	PtrMemberAccess	fcc -> object		3859293	1					
ANR	3859438	Identifier	fcc		3859293	0					
ANR	3859439	Identifier	object		3859293	1					
ANR	3859440	CompoundStatement		18:21:553:553	3859293	1					
ANR	3859441	ExpressionStatement	fcc -> object = zend_get_this_object ( EG ( current_execute_data ) )	2838:4:83115:83175	3859293	0	True				
ANR	3859442	AssignmentExpression	fcc -> object = zend_get_this_object ( EG ( current_execute_data ) )		3859293	0		=			
ANR	3859443	PtrMemberAccess	fcc -> object		3859293	0					
ANR	3859444	Identifier	fcc		3859293	0					
ANR	3859445	Identifier	object		3859293	1					
ANR	3859446	CallExpression	zend_get_this_object ( EG ( current_execute_data ) )		3859293	1					
ANR	3859447	Callee	zend_get_this_object		3859293	0					
ANR	3859448	Identifier	zend_get_this_object		3859293	0					
ANR	3859449	ArgumentList	EG ( current_execute_data )		3859293	1					
ANR	3859450	Argument	EG ( current_execute_data )		3859293	0					
ANR	3859451	CallExpression	EG ( current_execute_data )		3859293	0					
ANR	3859452	Callee	EG		3859293	0					
ANR	3859453	Identifier	EG		3859293	0					
ANR	3859454	ArgumentList	current_execute_data		3859293	1					
ANR	3859455	Argument	current_execute_data		3859293	0					
ANR	3859456	Identifier	current_execute_data		3859293	0					
ANR	3859457	ExpressionStatement	ret = 1	2840:3:83185:83192	3859293	3	True				
ANR	3859458	AssignmentExpression	ret = 1		3859293	0		=			
ANR	3859459	Identifier	ret		3859293	0					
ANR	3859460	PrimaryExpression	1		3859293	1					
ANR	3859461	ElseStatement	else		3859293	0					
ANR	3859462	IfStatement	"if ( zend_string_equals_literal ( lcname , ""parent"" ) )"		3859293	0					
ANR	3859463	Condition	"zend_string_equals_literal ( lcname , ""parent"" )"	2842:12:83210:83253	3859293	0	True				
ANR	3859464	CallExpression	"zend_string_equals_literal ( lcname , ""parent"" )"		3859293	0					
ANR	3859465	Callee	zend_string_equals_literal		3859293	0					
ANR	3859466	Identifier	zend_string_equals_literal		3859293	0					
ANR	3859467	ArgumentList	lcname		3859293	1					
ANR	3859468	Argument	lcname		3859293	0					
ANR	3859469	Identifier	lcname		3859293	0					
ANR	3859470	Argument	"""parent"""		3859293	1					
ANR	3859471	PrimaryExpression	"""parent"""		3859293	0					
ANR	3859472	CompoundStatement		23:58:700:700	3859293	1					
ANR	3859473	IfStatement	if ( ! EG ( scope ) )		3859293	0					
ANR	3859474	Condition	! EG ( scope )	2843:6:83264:83273	3859293	0	True				
ANR	3859475	UnaryOperationExpression	! EG ( scope )		3859293	0					
ANR	3859476	UnaryOperator	!		3859293	0					
ANR	3859477	CallExpression	EG ( scope )		3859293	1					
ANR	3859478	Callee	EG		3859293	0					
ANR	3859479	Identifier	EG		3859293	0					
ANR	3859480	ArgumentList	scope		3859293	1					
ANR	3859481	Argument	scope		3859293	0					
ANR	3859482	Identifier	scope		3859293	0					
ANR	3859483	CompoundStatement		24:18:720:720	3859293	1					
ANR	3859484	IfStatement	if ( error )		3859293	0					
ANR	3859485	Condition	error	2844:7:83285:83289	3859293	0	True				
ANR	3859486	Identifier	error		3859293	0					
ANR	3859487	ExpressionStatement	"* error = estrdup ( ""cannot access parent:: when no class scope is active"" )"	2844:14:83292:83364	3859293	1	True				
ANR	3859488	AssignmentExpression	"* error = estrdup ( ""cannot access parent:: when no class scope is active"" )"		3859293	0		=			
ANR	3859489	UnaryOperationExpression	* error		3859293	0					
ANR	3859490	UnaryOperator	*		3859293	0					
ANR	3859491	Identifier	error		3859293	1					
ANR	3859492	CallExpression	"estrdup ( ""cannot access parent:: when no class scope is active"" )"		3859293	1					
ANR	3859493	Callee	estrdup		3859293	0					
ANR	3859494	Identifier	estrdup		3859293	0					
ANR	3859495	ArgumentList	"""cannot access parent:: when no class scope is active"""		3859293	1					
ANR	3859496	Argument	"""cannot access parent:: when no class scope is active"""		3859293	0					
ANR	3859497	PrimaryExpression	"""cannot access parent:: when no class scope is active"""		3859293	0					
ANR	3859498	ElseStatement	else		3859293	0					
ANR	3859499	IfStatement	if ( ! EG ( scope ) -> parent )		3859293	0					
ANR	3859500	Condition	! EG ( scope ) -> parent	2845:13:83379:83396	3859293	0	True				
ANR	3859501	UnaryOperationExpression	! EG ( scope ) -> parent		3859293	0					
ANR	3859502	UnaryOperator	!		3859293	0					
ANR	3859503	PtrMemberAccess	EG ( scope ) -> parent		3859293	1					
ANR	3859504	CallExpression	EG ( scope )		3859293	0					
ANR	3859505	Callee	EG		3859293	0					
ANR	3859506	Identifier	EG		3859293	0					
ANR	3859507	ArgumentList	scope		3859293	1					
ANR	3859508	Argument	scope		3859293	0					
ANR	3859509	Identifier	scope		3859293	0					
ANR	3859510	Identifier	parent		3859293	1					
ANR	3859511	CompoundStatement		26:33:843:843	3859293	1					
ANR	3859512	IfStatement	if ( error )		3859293	0					
ANR	3859513	Condition	error	2846:7:83408:83412	3859293	0	True				
ANR	3859514	Identifier	error		3859293	0					
ANR	3859515	ExpressionStatement	"* error = estrdup ( ""cannot access parent:: when current class scope has no parent"" )"	2846:14:83415:83496	3859293	1	True				
ANR	3859516	AssignmentExpression	"* error = estrdup ( ""cannot access parent:: when current class scope has no parent"" )"		3859293	0		=			
ANR	3859517	UnaryOperationExpression	* error		3859293	0					
ANR	3859518	UnaryOperator	*		3859293	0					
ANR	3859519	Identifier	error		3859293	1					
ANR	3859520	CallExpression	"estrdup ( ""cannot access parent:: when current class scope has no parent"" )"		3859293	1					
ANR	3859521	Callee	estrdup		3859293	0					
ANR	3859522	Identifier	estrdup		3859293	0					
ANR	3859523	ArgumentList	"""cannot access parent:: when current class scope has no parent"""		3859293	1					
ANR	3859524	Argument	"""cannot access parent:: when current class scope has no parent"""		3859293	0					
ANR	3859525	PrimaryExpression	"""cannot access parent:: when current class scope has no parent"""		3859293	0					
ANR	3859526	ElseStatement	else		3859293	0					
ANR	3859527	CompoundStatement		28:9:951:951	3859293	0					
ANR	3859528	ExpressionStatement	fcc -> called_scope = zend_get_called_scope ( EG ( current_execute_data ) )	2848:3:83512:83579	3859293	0	True				
ANR	3859529	AssignmentExpression	fcc -> called_scope = zend_get_called_scope ( EG ( current_execute_data ) )		3859293	0		=			
ANR	3859530	PtrMemberAccess	fcc -> called_scope		3859293	0					
ANR	3859531	Identifier	fcc		3859293	0					
ANR	3859532	Identifier	called_scope		3859293	1					
ANR	3859533	CallExpression	zend_get_called_scope ( EG ( current_execute_data ) )		3859293	1					
ANR	3859534	Callee	zend_get_called_scope		3859293	0					
ANR	3859535	Identifier	zend_get_called_scope		3859293	0					
ANR	3859536	ArgumentList	EG ( current_execute_data )		3859293	1					
ANR	3859537	Argument	EG ( current_execute_data )		3859293	0					
ANR	3859538	CallExpression	EG ( current_execute_data )		3859293	0					
ANR	3859539	Callee	EG		3859293	0					
ANR	3859540	Identifier	EG		3859293	0					
ANR	3859541	ArgumentList	current_execute_data		3859293	1					
ANR	3859542	Argument	current_execute_data		3859293	0					
ANR	3859543	Identifier	current_execute_data		3859293	0					
ANR	3859544	ExpressionStatement	fcc -> calling_scope = EG ( scope ) -> parent	2849:3:83584:83622	3859293	1	True				
ANR	3859545	AssignmentExpression	fcc -> calling_scope = EG ( scope ) -> parent		3859293	0		=			
ANR	3859546	PtrMemberAccess	fcc -> calling_scope		3859293	0					
ANR	3859547	Identifier	fcc		3859293	0					
ANR	3859548	Identifier	calling_scope		3859293	1					
ANR	3859549	PtrMemberAccess	EG ( scope ) -> parent		3859293	1					
ANR	3859550	CallExpression	EG ( scope )		3859293	0					
ANR	3859551	Callee	EG		3859293	0					
ANR	3859552	Identifier	EG		3859293	0					
ANR	3859553	ArgumentList	scope		3859293	1					
ANR	3859554	Argument	scope		3859293	0					
ANR	3859555	Identifier	scope		3859293	0					
ANR	3859556	Identifier	parent		3859293	1					
ANR	3859557	IfStatement	if ( ! fcc -> object )		3859293	2					
ANR	3859558	Condition	! fcc -> object	2850:7:83631:83642	3859293	0	True				
ANR	3859559	UnaryOperationExpression	! fcc -> object		3859293	0					
ANR	3859560	UnaryOperator	!		3859293	0					
ANR	3859561	PtrMemberAccess	fcc -> object		3859293	1					
ANR	3859562	Identifier	fcc		3859293	0					
ANR	3859563	Identifier	object		3859293	1					
ANR	3859564	CompoundStatement		31:21:1089:1089	3859293	1					
ANR	3859565	ExpressionStatement	fcc -> object = zend_get_this_object ( EG ( current_execute_data ) )	2851:4:83651:83711	3859293	0	True				
ANR	3859566	AssignmentExpression	fcc -> object = zend_get_this_object ( EG ( current_execute_data ) )		3859293	0		=			
ANR	3859567	PtrMemberAccess	fcc -> object		3859293	0					
ANR	3859568	Identifier	fcc		3859293	0					
ANR	3859569	Identifier	object		3859293	1					
ANR	3859570	CallExpression	zend_get_this_object ( EG ( current_execute_data ) )		3859293	1					
ANR	3859571	Callee	zend_get_this_object		3859293	0					
ANR	3859572	Identifier	zend_get_this_object		3859293	0					
ANR	3859573	ArgumentList	EG ( current_execute_data )		3859293	1					
ANR	3859574	Argument	EG ( current_execute_data )		3859293	0					
ANR	3859575	CallExpression	EG ( current_execute_data )		3859293	0					
ANR	3859576	Callee	EG		3859293	0					
ANR	3859577	Identifier	EG		3859293	0					
ANR	3859578	ArgumentList	current_execute_data		3859293	1					
ANR	3859579	Argument	current_execute_data		3859293	0					
ANR	3859580	Identifier	current_execute_data		3859293	0					
ANR	3859581	ExpressionStatement	* strict_class = 1	2853:3:83721:83738	3859293	3	True				
ANR	3859582	AssignmentExpression	* strict_class = 1		3859293	0		=			
ANR	3859583	UnaryOperationExpression	* strict_class		3859293	0					
ANR	3859584	UnaryOperator	*		3859293	0					
ANR	3859585	Identifier	strict_class		3859293	1					
ANR	3859586	PrimaryExpression	1		3859293	1					
ANR	3859587	ExpressionStatement	ret = 1	2854:3:83743:83750	3859293	4	True				
ANR	3859588	AssignmentExpression	ret = 1		3859293	0		=			
ANR	3859589	Identifier	ret		3859293	0					
ANR	3859590	PrimaryExpression	1		3859293	1					
ANR	3859591	ElseStatement	else		3859293	0					
ANR	3859592	IfStatement	"if ( zend_string_equals_literal ( lcname , ""static"" ) )"		3859293	0					
ANR	3859593	Condition	"zend_string_equals_literal ( lcname , ""static"" )"	2856:12:83768:83811	3859293	0	True				
ANR	3859594	CallExpression	"zend_string_equals_literal ( lcname , ""static"" )"		3859293	0					
ANR	3859595	Callee	zend_string_equals_literal		3859293	0					
ANR	3859596	Identifier	zend_string_equals_literal		3859293	0					
ANR	3859597	ArgumentList	lcname		3859293	1					
ANR	3859598	Argument	lcname		3859293	0					
ANR	3859599	Identifier	lcname		3859293	0					
ANR	3859600	Argument	"""static"""		3859293	1					
ANR	3859601	PrimaryExpression	"""static"""		3859293	0					
ANR	3859602	CompoundStatement		38:2:1262:1342	3859293	1					
ANR	3859603	IdentifierDeclStatement	zend_class_entry * called_scope = zend_get_called_scope ( EG ( current_execute_data ) ) ;	2857:2:83818:83898	3859293	0	True				
ANR	3859604	IdentifierDecl	* called_scope = zend_get_called_scope ( EG ( current_execute_data ) )		3859293	0					
ANR	3859605	IdentifierDeclType	zend_class_entry *		3859293	0					
ANR	3859606	Identifier	called_scope		3859293	1					
ANR	3859607	AssignmentExpression	* called_scope = zend_get_called_scope ( EG ( current_execute_data ) )		3859293	2		=			
ANR	3859608	Identifier	called_scope		3859293	0					
ANR	3859609	CallExpression	zend_get_called_scope ( EG ( current_execute_data ) )		3859293	1					
ANR	3859610	Callee	zend_get_called_scope		3859293	0					
ANR	3859611	Identifier	zend_get_called_scope		3859293	0					
ANR	3859612	ArgumentList	EG ( current_execute_data )		3859293	1					
ANR	3859613	Argument	EG ( current_execute_data )		3859293	0					
ANR	3859614	CallExpression	EG ( current_execute_data )		3859293	0					
ANR	3859615	Callee	EG		3859293	0					
ANR	3859616	Identifier	EG		3859293	0					
ANR	3859617	ArgumentList	current_execute_data		3859293	1					
ANR	3859618	Argument	current_execute_data		3859293	0					
ANR	3859619	Identifier	current_execute_data		3859293	0					
ANR	3859620	IfStatement	if ( ! called_scope )		3859293	1					
ANR	3859621	Condition	! called_scope	2859:6:83907:83919	3859293	0	True				
ANR	3859622	UnaryOperationExpression	! called_scope		3859293	0					
ANR	3859623	UnaryOperator	!		3859293	0					
ANR	3859624	Identifier	called_scope		3859293	1					
ANR	3859625	CompoundStatement		40:21:1366:1366	3859293	1					
ANR	3859626	IfStatement	if ( error )		3859293	0					
ANR	3859627	Condition	error	2860:7:83931:83935	3859293	0	True				
ANR	3859628	Identifier	error		3859293	0					
ANR	3859629	ExpressionStatement	"* error = estrdup ( ""cannot access static:: when no class scope is active"" )"	2860:14:83938:84010	3859293	1	True				
ANR	3859630	AssignmentExpression	"* error = estrdup ( ""cannot access static:: when no class scope is active"" )"		3859293	0		=			
ANR	3859631	UnaryOperationExpression	* error		3859293	0					
ANR	3859632	UnaryOperator	*		3859293	0					
ANR	3859633	Identifier	error		3859293	1					
ANR	3859634	CallExpression	"estrdup ( ""cannot access static:: when no class scope is active"" )"		3859293	1					
ANR	3859635	Callee	estrdup		3859293	0					
ANR	3859636	Identifier	estrdup		3859293	0					
ANR	3859637	ArgumentList	"""cannot access static:: when no class scope is active"""		3859293	1					
ANR	3859638	Argument	"""cannot access static:: when no class scope is active"""		3859293	0					
ANR	3859639	PrimaryExpression	"""cannot access static:: when no class scope is active"""		3859293	0					
ANR	3859640	ElseStatement	else		3859293	0					
ANR	3859641	CompoundStatement		42:9:1465:1465	3859293	0					
ANR	3859642	ExpressionStatement	fcc -> called_scope = called_scope	2862:3:84026:84058	3859293	0	True				
ANR	3859643	AssignmentExpression	fcc -> called_scope = called_scope		3859293	0		=			
ANR	3859644	PtrMemberAccess	fcc -> called_scope		3859293	0					
ANR	3859645	Identifier	fcc		3859293	0					
ANR	3859646	Identifier	called_scope		3859293	1					
ANR	3859647	Identifier	called_scope		3859293	1					
ANR	3859648	ExpressionStatement	fcc -> calling_scope = called_scope	2863:3:84063:84096	3859293	1	True				
ANR	3859649	AssignmentExpression	fcc -> calling_scope = called_scope		3859293	0		=			
ANR	3859650	PtrMemberAccess	fcc -> calling_scope		3859293	0					
ANR	3859651	Identifier	fcc		3859293	0					
ANR	3859652	Identifier	calling_scope		3859293	1					
ANR	3859653	Identifier	called_scope		3859293	1					
ANR	3859654	IfStatement	if ( ! fcc -> object )		3859293	2					
ANR	3859655	Condition	! fcc -> object	2864:7:84105:84116	3859293	0	True				
ANR	3859656	UnaryOperationExpression	! fcc -> object		3859293	0					
ANR	3859657	UnaryOperator	!		3859293	0					
ANR	3859658	PtrMemberAccess	fcc -> object		3859293	1					
ANR	3859659	Identifier	fcc		3859293	0					
ANR	3859660	Identifier	object		3859293	1					
ANR	3859661	CompoundStatement		45:21:1563:1563	3859293	1					
ANR	3859662	ExpressionStatement	fcc -> object = zend_get_this_object ( EG ( current_execute_data ) )	2865:4:84125:84185	3859293	0	True				
ANR	3859663	AssignmentExpression	fcc -> object = zend_get_this_object ( EG ( current_execute_data ) )		3859293	0		=			
ANR	3859664	PtrMemberAccess	fcc -> object		3859293	0					
ANR	3859665	Identifier	fcc		3859293	0					
ANR	3859666	Identifier	object		3859293	1					
ANR	3859667	CallExpression	zend_get_this_object ( EG ( current_execute_data ) )		3859293	1					
ANR	3859668	Callee	zend_get_this_object		3859293	0					
ANR	3859669	Identifier	zend_get_this_object		3859293	0					
ANR	3859670	ArgumentList	EG ( current_execute_data )		3859293	1					
ANR	3859671	Argument	EG ( current_execute_data )		3859293	0					
ANR	3859672	CallExpression	EG ( current_execute_data )		3859293	0					
ANR	3859673	Callee	EG		3859293	0					
ANR	3859674	Identifier	EG		3859293	0					
ANR	3859675	ArgumentList	current_execute_data		3859293	1					
ANR	3859676	Argument	current_execute_data		3859293	0					
ANR	3859677	Identifier	current_execute_data		3859293	0					
ANR	3859678	ExpressionStatement	* strict_class = 1	2867:3:84195:84212	3859293	3	True				
ANR	3859679	AssignmentExpression	* strict_class = 1		3859293	0		=			
ANR	3859680	UnaryOperationExpression	* strict_class		3859293	0					
ANR	3859681	UnaryOperator	*		3859293	0					
ANR	3859682	Identifier	strict_class		3859293	1					
ANR	3859683	PrimaryExpression	1		3859293	1					
ANR	3859684	ExpressionStatement	ret = 1	2868:3:84217:84224	3859293	4	True				
ANR	3859685	AssignmentExpression	ret = 1		3859293	0		=			
ANR	3859686	Identifier	ret		3859293	0					
ANR	3859687	PrimaryExpression	1		3859293	1					
ANR	3859688	ElseStatement	else		3859293	0					
ANR	3859689	IfStatement	"if ( ( ce = zend_lookup_class_ex ( name , NULL , 1 ) ) != NULL )"		3859293	0					
ANR	3859690	Condition	"( ce = zend_lookup_class_ex ( name , NULL , 1 ) ) != NULL"	2870:12:84242:84291	3859293	0	True				
ANR	3859691	EqualityExpression	"( ce = zend_lookup_class_ex ( name , NULL , 1 ) ) != NULL"		3859293	0		!=			
ANR	3859692	AssignmentExpression	"ce = zend_lookup_class_ex ( name , NULL , 1 )"		3859293	0		=			
ANR	3859693	Identifier	ce		3859293	0					
ANR	3859694	CallExpression	"zend_lookup_class_ex ( name , NULL , 1 )"		3859293	1					
ANR	3859695	Callee	zend_lookup_class_ex		3859293	0					
ANR	3859696	Identifier	zend_lookup_class_ex		3859293	0					
ANR	3859697	ArgumentList	name		3859293	1					
ANR	3859698	Argument	name		3859293	0					
ANR	3859699	Identifier	name		3859293	0					
ANR	3859700	Argument	NULL		3859293	1					
ANR	3859701	Identifier	NULL		3859293	0					
ANR	3859702	Argument	1		3859293	2					
ANR	3859703	PrimaryExpression	1		3859293	0					
ANR	3859704	Identifier	NULL		3859293	1					
ANR	3859705	CompoundStatement		53:2:1769:1817	3859293	1					
ANR	3859706	IdentifierDeclStatement	zend_class_entry * scope ;	2871:2:84298:84321	3859293	0	True				
ANR	3859707	IdentifierDecl	* scope		3859293	0					
ANR	3859708	IdentifierDeclType	zend_class_entry *		3859293	0					
ANR	3859709	Identifier	scope		3859293	1					
ANR	3859710	IdentifierDeclStatement	zend_execute_data * ex = EG ( current_execute_data ) ;	2872:2:84325:84373	3859293	1	True				
ANR	3859711	IdentifierDecl	* ex = EG ( current_execute_data )		3859293	0					
ANR	3859712	IdentifierDeclType	zend_execute_data *		3859293	0					
ANR	3859713	Identifier	ex		3859293	1					
ANR	3859714	AssignmentExpression	* ex = EG ( current_execute_data )		3859293	2		=			
ANR	3859715	Identifier	ex		3859293	0					
ANR	3859716	CallExpression	EG ( current_execute_data )		3859293	1					
ANR	3859717	Callee	EG		3859293	0					
ANR	3859718	Identifier	EG		3859293	0					
ANR	3859719	ArgumentList	current_execute_data		3859293	1					
ANR	3859720	Argument	current_execute_data		3859293	0					
ANR	3859721	Identifier	current_execute_data		3859293	0					
ANR	3859722	WhileStatement	while ( ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) ) )		3859293	2					
ANR	3859723	Condition	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )	2874:9:84385:84436	3859293	0	True				
ANR	3859724	AndExpression	ex && ( ! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type ) )		3859293	0		&&			
ANR	3859725	Identifier	ex		3859293	0					
ANR	3859726	OrExpression	! ex -> func || ! ZEND_USER_CODE ( ex -> func -> type )		3859293	1		||			
ANR	3859727	UnaryOperationExpression	! ex -> func		3859293	0					
ANR	3859728	UnaryOperator	!		3859293	0					
ANR	3859729	PtrMemberAccess	ex -> func		3859293	1					
ANR	3859730	Identifier	ex		3859293	0					
ANR	3859731	Identifier	func		3859293	1					
ANR	3859732	UnaryOperationExpression	! ZEND_USER_CODE ( ex -> func -> type )		3859293	1					
ANR	3859733	UnaryOperator	!		3859293	0					
ANR	3859734	CallExpression	ZEND_USER_CODE ( ex -> func -> type )		3859293	1					
ANR	3859735	Callee	ZEND_USER_CODE		3859293	0					
ANR	3859736	Identifier	ZEND_USER_CODE		3859293	0					
ANR	3859737	ArgumentList	ex -> func -> type		3859293	1					
ANR	3859738	Argument	ex -> func -> type		3859293	0					
ANR	3859739	PtrMemberAccess	ex -> func -> type		3859293	0					
ANR	3859740	PtrMemberAccess	ex -> func		3859293	0					
ANR	3859741	Identifier	ex		3859293	0					
ANR	3859742	Identifier	func		3859293	1					
ANR	3859743	Identifier	type		3859293	1					
ANR	3859744	CompoundStatement		55:63:1883:1883	3859293	1					
ANR	3859745	ExpressionStatement	ex = ex -> prev_execute_data	2875:3:84444:84470	3859293	0	True				
ANR	3859746	AssignmentExpression	ex = ex -> prev_execute_data		3859293	0		=			
ANR	3859747	Identifier	ex		3859293	0					
ANR	3859748	PtrMemberAccess	ex -> prev_execute_data		3859293	1					
ANR	3859749	Identifier	ex		3859293	0					
ANR	3859750	Identifier	prev_execute_data		3859293	1					
ANR	3859751	ExpressionStatement	scope = ex ? ex -> func -> common . scope : NULL	2877:2:84478:84520	3859293	3	True				
ANR	3859752	AssignmentExpression	scope = ex ? ex -> func -> common . scope : NULL		3859293	0		=			
ANR	3859753	Identifier	scope		3859293	0					
ANR	3859754	ConditionalExpression	ex ? ex -> func -> common . scope : NULL		3859293	1					
ANR	3859755	Condition	ex		3859293	0					
ANR	3859756	Identifier	ex		3859293	0					
ANR	3859757	MemberAccess	ex -> func -> common . scope		3859293	1					
ANR	3859758	PtrMemberAccess	ex -> func -> common		3859293	0					
ANR	3859759	PtrMemberAccess	ex -> func		3859293	0					
ANR	3859760	Identifier	ex		3859293	0					
ANR	3859761	Identifier	func		3859293	1					
ANR	3859762	Identifier	common		3859293	1					
ANR	3859763	Identifier	scope		3859293	1					
ANR	3859764	Identifier	NULL		3859293	2					
ANR	3859765	ExpressionStatement	fcc -> calling_scope = ce	2878:2:84524:84547	3859293	4	True				
ANR	3859766	AssignmentExpression	fcc -> calling_scope = ce		3859293	0		=			
ANR	3859767	PtrMemberAccess	fcc -> calling_scope		3859293	0					
ANR	3859768	Identifier	fcc		3859293	0					
ANR	3859769	Identifier	calling_scope		3859293	1					
ANR	3859770	Identifier	ce		3859293	1					
ANR	3859771	IfStatement	if ( scope && ! fcc -> object )		3859293	5					
ANR	3859772	Condition	scope && ! fcc -> object	2879:6:84555:84575	3859293	0	True				
ANR	3859773	AndExpression	scope && ! fcc -> object		3859293	0		&&			
ANR	3859774	Identifier	scope		3859293	0					
ANR	3859775	UnaryOperationExpression	! fcc -> object		3859293	1					
ANR	3859776	UnaryOperator	!		3859293	0					
ANR	3859777	PtrMemberAccess	fcc -> object		3859293	1					
ANR	3859778	Identifier	fcc		3859293	0					
ANR	3859779	Identifier	object		3859293	1					
ANR	3859780	CompoundStatement		61:3:2027:2095	3859293	1					
ANR	3859781	IdentifierDeclStatement	zend_object * object = zend_get_this_object ( EG ( current_execute_data ) ) ;	2880:3:84583:84651	3859293	0	True				
ANR	3859782	IdentifierDecl	* object = zend_get_this_object ( EG ( current_execute_data ) )		3859293	0					
ANR	3859783	IdentifierDeclType	zend_object *		3859293	0					
ANR	3859784	Identifier	object		3859293	1					
ANR	3859785	AssignmentExpression	* object = zend_get_this_object ( EG ( current_execute_data ) )		3859293	2		=			
ANR	3859786	Identifier	object		3859293	0					
ANR	3859787	CallExpression	zend_get_this_object ( EG ( current_execute_data ) )		3859293	1					
ANR	3859788	Callee	zend_get_this_object		3859293	0					
ANR	3859789	Identifier	zend_get_this_object		3859293	0					
ANR	3859790	ArgumentList	EG ( current_execute_data )		3859293	1					
ANR	3859791	Argument	EG ( current_execute_data )		3859293	0					
ANR	3859792	CallExpression	EG ( current_execute_data )		3859293	0					
ANR	3859793	Callee	EG		3859293	0					
ANR	3859794	Identifier	EG		3859293	0					
ANR	3859795	ArgumentList	current_execute_data		3859293	1					
ANR	3859796	Argument	current_execute_data		3859293	0					
ANR	3859797	Identifier	current_execute_data		3859293	0					
ANR	3859798	IfStatement	"if ( object && instanceof_function ( object -> ce , scope ) && instanceof_function ( scope , fcc -> calling_scope ) )"		3859293	1					
ANR	3859799	Condition	"object && instanceof_function ( object -> ce , scope ) && instanceof_function ( scope , fcc -> calling_scope )"	2882:7:84661:84772	3859293	0	True				
ANR	3859800	AndExpression	"object && instanceof_function ( object -> ce , scope ) && instanceof_function ( scope , fcc -> calling_scope )"		3859293	0		&&			
ANR	3859801	Identifier	object		3859293	0					
ANR	3859802	AndExpression	"instanceof_function ( object -> ce , scope ) && instanceof_function ( scope , fcc -> calling_scope )"		3859293	1		&&			
ANR	3859803	CallExpression	"instanceof_function ( object -> ce , scope )"		3859293	0					
ANR	3859804	Callee	instanceof_function		3859293	0					
ANR	3859805	Identifier	instanceof_function		3859293	0					
ANR	3859806	ArgumentList	object -> ce		3859293	1					
ANR	3859807	Argument	object -> ce		3859293	0					
ANR	3859808	PtrMemberAccess	object -> ce		3859293	0					
ANR	3859809	Identifier	object		3859293	0					
ANR	3859810	Identifier	ce		3859293	1					
ANR	3859811	Argument	scope		3859293	1					
ANR	3859812	Identifier	scope		3859293	0					
ANR	3859813	CallExpression	"instanceof_function ( scope , fcc -> calling_scope )"		3859293	1					
ANR	3859814	Callee	instanceof_function		3859293	0					
ANR	3859815	Identifier	instanceof_function		3859293	0					
ANR	3859816	ArgumentList	scope		3859293	1					
ANR	3859817	Argument	scope		3859293	0					
ANR	3859818	Identifier	scope		3859293	0					
ANR	3859819	Argument	fcc -> calling_scope		3859293	1					
ANR	3859820	PtrMemberAccess	fcc -> calling_scope		3859293	0					
ANR	3859821	Identifier	fcc		3859293	0					
ANR	3859822	Identifier	calling_scope		3859293	1					
ANR	3859823	CompoundStatement		65:55:2219:2219	3859293	1					
ANR	3859824	ExpressionStatement	fcc -> object = object	2885:4:84781:84801	3859293	0	True				
ANR	3859825	AssignmentExpression	fcc -> object = object		3859293	0		=			
ANR	3859826	PtrMemberAccess	fcc -> object		3859293	0					
ANR	3859827	Identifier	fcc		3859293	0					
ANR	3859828	Identifier	object		3859293	1					
ANR	3859829	Identifier	object		3859293	1					
ANR	3859830	ExpressionStatement	fcc -> called_scope = object -> ce	2886:4:84807:84837	3859293	1	True				
ANR	3859831	AssignmentExpression	fcc -> called_scope = object -> ce		3859293	0		=			
ANR	3859832	PtrMemberAccess	fcc -> called_scope		3859293	0					
ANR	3859833	Identifier	fcc		3859293	0					
ANR	3859834	Identifier	called_scope		3859293	1					
ANR	3859835	PtrMemberAccess	object -> ce		3859293	1					
ANR	3859836	Identifier	object		3859293	0					
ANR	3859837	Identifier	ce		3859293	1					
ANR	3859838	ElseStatement	else		3859293	0					
ANR	3859839	CompoundStatement		68:10:2293:2293	3859293	0					
ANR	3859840	ExpressionStatement	fcc -> called_scope = fcc -> calling_scope	2888:4:84855:84893	3859293	0	True				
ANR	3859841	AssignmentExpression	fcc -> called_scope = fcc -> calling_scope		3859293	0		=			
ANR	3859842	PtrMemberAccess	fcc -> called_scope		3859293	0					
ANR	3859843	Identifier	fcc		3859293	0					
ANR	3859844	Identifier	called_scope		3859293	1					
ANR	3859845	PtrMemberAccess	fcc -> calling_scope		3859293	1					
ANR	3859846	Identifier	fcc		3859293	0					
ANR	3859847	Identifier	calling_scope		3859293	1					
ANR	3859848	ElseStatement	else		3859293	0					
ANR	3859849	CompoundStatement		71:9:2353:2353	3859293	0					
ANR	3859850	ExpressionStatement	fcc -> called_scope = fcc -> object ? fcc -> object -> ce : fcc -> calling_scope	2891:3:84914:84984	3859293	0	True				
ANR	3859851	AssignmentExpression	fcc -> called_scope = fcc -> object ? fcc -> object -> ce : fcc -> calling_scope		3859293	0		=			
ANR	3859852	PtrMemberAccess	fcc -> called_scope		3859293	0					
ANR	3859853	Identifier	fcc		3859293	0					
ANR	3859854	Identifier	called_scope		3859293	1					
ANR	3859855	ConditionalExpression	fcc -> object ? fcc -> object -> ce : fcc -> calling_scope		3859293	1					
ANR	3859856	Condition	fcc -> object		3859293	0					
ANR	3859857	PtrMemberAccess	fcc -> object		3859293	0					
ANR	3859858	Identifier	fcc		3859293	0					
ANR	3859859	Identifier	object		3859293	1					
ANR	3859860	PtrMemberAccess	fcc -> object -> ce		3859293	1					
ANR	3859861	PtrMemberAccess	fcc -> object		3859293	0					
ANR	3859862	Identifier	fcc		3859293	0					
ANR	3859863	Identifier	object		3859293	1					
ANR	3859864	Identifier	ce		3859293	1					
ANR	3859865	PtrMemberAccess	fcc -> calling_scope		3859293	2					
ANR	3859866	Identifier	fcc		3859293	0					
ANR	3859867	Identifier	calling_scope		3859293	1					
ANR	3859868	ExpressionStatement	* strict_class = 1	2893:2:84992:85009	3859293	6	True				
ANR	3859869	AssignmentExpression	* strict_class = 1		3859293	0		=			
ANR	3859870	UnaryOperationExpression	* strict_class		3859293	0					
ANR	3859871	UnaryOperator	*		3859293	0					
ANR	3859872	Identifier	strict_class		3859293	1					
ANR	3859873	PrimaryExpression	1		3859293	1					
ANR	3859874	ExpressionStatement	ret = 1	2894:2:85013:85020	3859293	7	True				
ANR	3859875	AssignmentExpression	ret = 1		3859293	0		=			
ANR	3859876	Identifier	ret		3859293	0					
ANR	3859877	PrimaryExpression	1		3859293	1					
ANR	3859878	ElseStatement	else		3859293	0					
ANR	3859879	CompoundStatement		76:8:2474:2474	3859293	0					
ANR	3859880	IfStatement	if ( error )		3859293	0					
ANR	3859881	Condition	error	2896:6:85038:85042	3859293	0	True				
ANR	3859882	Identifier	error		3859293	0					
ANR	3859883	ExpressionStatement	"zend_spprintf ( error , 0 , ""class '%.*s' not found"" , name_len , ZSTR_VAL ( name ) )"	2896:13:85045:85120	3859293	1	True				
ANR	3859884	CallExpression	"zend_spprintf ( error , 0 , ""class '%.*s' not found"" , name_len , ZSTR_VAL ( name ) )"		3859293	0					
ANR	3859885	Callee	zend_spprintf		3859293	0					
ANR	3859886	Identifier	zend_spprintf		3859293	0					
ANR	3859887	ArgumentList	error		3859293	1					
ANR	3859888	Argument	error		3859293	0					
ANR	3859889	Identifier	error		3859293	0					
ANR	3859890	Argument	0		3859293	1					
ANR	3859891	PrimaryExpression	0		3859293	0					
ANR	3859892	Argument	"""class '%.*s' not found"""		3859293	2					
ANR	3859893	PrimaryExpression	"""class '%.*s' not found"""		3859293	0					
ANR	3859894	Argument	name_len		3859293	3					
ANR	3859895	Identifier	name_len		3859293	0					
ANR	3859896	Argument	ZSTR_VAL ( name )		3859293	4					
ANR	3859897	CallExpression	ZSTR_VAL ( name )		3859293	0					
ANR	3859898	Callee	ZSTR_VAL		3859293	0					
ANR	3859899	Identifier	ZSTR_VAL		3859293	0					
ANR	3859900	ArgumentList	name		3859293	1					
ANR	3859901	Argument	name		3859293	0					
ANR	3859902	Identifier	name		3859293	0					
ANR	3859903	ExpressionStatement	"ZSTR_ALLOCA_FREE ( lcname , use_heap )"	2898:1:85126:85160	3859293	9	True				
ANR	3859904	CallExpression	"ZSTR_ALLOCA_FREE ( lcname , use_heap )"		3859293	0					
ANR	3859905	Callee	ZSTR_ALLOCA_FREE		3859293	0					
ANR	3859906	Identifier	ZSTR_ALLOCA_FREE		3859293	0					
ANR	3859907	ArgumentList	lcname		3859293	1					
ANR	3859908	Argument	lcname		3859293	0					
ANR	3859909	Identifier	lcname		3859293	0					
ANR	3859910	Argument	use_heap		3859293	1					
ANR	3859911	Identifier	use_heap		3859293	0					
ANR	3859912	ReturnStatement	return ret ;	2899:1:85163:85173	3859293	10	True				
ANR	3859913	Identifier	ret		3859293	0					
ANR	3859914	ReturnType	static int		3859293	1					
ANR	3859915	Identifier	zend_is_callable_check_class		3859293	2					
ANR	3859916	ParameterList	"zend_string * name , zend_fcall_info_cache * fcc , int * strict_class , char * * error"		3859293	3					
ANR	3859917	Parameter	zend_string * name	2819:40:82465:82481	3859293	0	True				
ANR	3859918	ParameterType	zend_string *		3859293	0					
ANR	3859919	Identifier	name		3859293	1					
ANR	3859920	Parameter	zend_fcall_info_cache * fcc	2819:59:82484:82509	3859293	1	True				
ANR	3859921	ParameterType	zend_fcall_info_cache *		3859293	0					
ANR	3859922	Identifier	fcc		3859293	1					
ANR	3859923	Parameter	int * strict_class	2819:87:82512:82528	3859293	2	True				
ANR	3859924	ParameterType	int *		3859293	0					
ANR	3859925	Identifier	strict_class		3859293	1					
ANR	3859926	Parameter	char * * error	2819:106:82531:82542	3859293	3	True				
ANR	3859927	ParameterType	char * *		3859293	0					
ANR	3859928	Identifier	error		3859293	1					
ANR	3859929	CFGEntryNode	ENTRY		3859293		True				
ANR	3859930	CFGExitNode	EXIT		3859293		True				
ANR	3859931	Symbol	zend_lookup_class_ex		3859293						
ANR	3859932	Symbol	instanceof_function		3859293						
ANR	3859933	Symbol	zend_string_equals_literal		3859293						
ANR	3859934	Symbol	object -> ce		3859293						
ANR	3859935	Symbol	ex -> func -> type		3859293						
ANR	3859936	Symbol	fcc		3859293						
ANR	3859937	Symbol	current_execute_data		3859293						
ANR	3859938	Symbol	fcc -> calling_scope		3859293						
ANR	3859939	Symbol	called_scope		3859293						
ANR	3859940	Symbol	* EG		3859293						
ANR	3859941	Symbol	error		3859293						
ANR	3859942	Symbol	* object		3859293						
ANR	3859943	Symbol	zend_get_called_scope		3859293						
ANR	3859944	Symbol	ex -> func		3859293						
ANR	3859945	Symbol	zend_get_this_object		3859293						
ANR	3859946	Symbol	* fcc		3859293						
ANR	3859947	Symbol	scope		3859293						
ANR	3859948	Symbol	* strict_class		3859293						
ANR	3859949	Symbol	* * fcc		3859293						
ANR	3859950	Symbol	name_len		3859293						
ANR	3859951	Symbol	ex -> func -> common		3859293						
ANR	3859952	Symbol	* * ex		3859293						
ANR	3859953	Symbol	strict_class		3859293						
ANR	3859954	Symbol	ret		3859293						
ANR	3859955	Symbol	ce		3859293						
ANR	3859956	Symbol	EG		3859293						
ANR	3859957	Symbol	NULL		3859293						
ANR	3859958	Symbol	ex -> prev_execute_data		3859293						
ANR	3859959	Symbol	ex -> func -> common . scope		3859293						
ANR	3859960	Symbol	EG ( scope ) -> parent		3859293						
ANR	3859961	Symbol	* fcc -> object		3859293						
ANR	3859962	Symbol	fcc -> object		3859293						
ANR	3859963	Symbol	ZSTR_VAL		3859293						
ANR	3859964	Symbol	lcname		3859293						
ANR	3859965	Symbol	ex		3859293						
ANR	3859966	Symbol	* error		3859293						
ANR	3859967	Symbol	name		3859293						
ANR	3859968	Symbol	ZSTR_LEN		3859293						
ANR	3859969	Symbol	estrdup		3859293						
ANR	3859970	Symbol	fcc -> called_scope		3859293						
ANR	3859971	Symbol	ZEND_USER_CODE		3859293						
ANR	3859972	Symbol	* ex -> func		3859293						
ANR	3859973	Symbol	* ex		3859293						
ANR	3859974	Symbol	fcc -> object -> ce		3859293						
ANR	3859975	Symbol	use_heap		3859293						
ANR	3859976	Symbol	object		3859293						
ANR	3859977	Function	zend_is_callable_check_func	2903:0:85188:94956							
ANR	3859978	FunctionDef	"zend_is_callable_check_func (int check_flags , zval * callable , zend_fcall_info_cache * fcc , int strict_class , char * * error)"		3859977	0					
ANR	3859979	CompoundStatement		2904:0:85330:94956	3859977	0					
ANR	3859980	IdentifierDeclStatement	zend_class_entry * ce_org = fcc -> calling_scope ;	2905:1:85333:85378	3859977	0	True				
ANR	3859981	IdentifierDecl	* ce_org = fcc -> calling_scope		3859977	0					
ANR	3859982	IdentifierDeclType	zend_class_entry *		3859977	0					
ANR	3859983	Identifier	ce_org		3859977	1					
ANR	3859984	AssignmentExpression	* ce_org = fcc -> calling_scope		3859977	2		=			
ANR	3859985	Identifier	ce_org		3859977	0					
ANR	3859986	PtrMemberAccess	fcc -> calling_scope		3859977	1					
ANR	3859987	Identifier	fcc		3859977	0					
ANR	3859988	Identifier	calling_scope		3859977	1					
ANR	3859989	IdentifierDeclStatement	int retval = 0 ;	2906:1:85381:85395	3859977	1	True				
ANR	3859990	IdentifierDecl	retval = 0		3859977	0					
ANR	3859991	IdentifierDeclType	int		3859977	0					
ANR	3859992	Identifier	retval		3859977	1					
ANR	3859993	AssignmentExpression	retval = 0		3859977	2		=			
ANR	3859994	Identifier	retval		3859977	0					
ANR	3859995	PrimaryExpression	0		3859977	1					
ANR	3859996	IdentifierDeclStatement	"zend_string * mname , * cname ;"	2907:1:85398:85424	3859977	2	True				
ANR	3859997	IdentifierDecl	* mname		3859977	0					
ANR	3859998	IdentifierDeclType	zend_string *		3859977	0					
ANR	3859999	Identifier	mname		3859977	1					
ANR	3860000	IdentifierDecl	* cname		3859977	1					
ANR	3860001	IdentifierDeclType	zend_string *		3859977	0					
ANR	3860002	Identifier	cname		3859977	1					
ANR	3860003	IdentifierDeclStatement	zend_string * lmname ;	2908:1:85427:85446	3859977	3	True				
ANR	3860004	IdentifierDecl	* lmname		3859977	0					
ANR	3860005	IdentifierDeclType	zend_string *		3859977	0					
ANR	3860006	Identifier	lmname		3859977	1					
ANR	3860007	IdentifierDeclStatement	const char * colon ;	2909:1:85449:85466	3859977	4	True				
ANR	3860008	IdentifierDecl	* colon		3859977	0					
ANR	3860009	IdentifierDeclType	const char *		3859977	0					
ANR	3860010	Identifier	colon		3859977	1					
ANR	3860011	IdentifierDeclStatement	"size_t clen , mlen ;"	2910:1:85469:85486	3859977	5	True				
ANR	3860012	IdentifierDecl	clen		3859977	0					
ANR	3860013	IdentifierDeclType	size_t		3859977	0					
ANR	3860014	Identifier	clen		3859977	1					
ANR	3860015	IdentifierDecl	mlen		3859977	1					
ANR	3860016	IdentifierDeclType	size_t		3859977	0					
ANR	3860017	Identifier	mlen		3859977	1					
ANR	3860018	IdentifierDeclStatement	zend_class_entry * last_scope ;	2911:1:85489:85517	3859977	6	True				
ANR	3860019	IdentifierDecl	* last_scope		3859977	0					
ANR	3860020	IdentifierDeclType	zend_class_entry *		3859977	0					
ANR	3860021	Identifier	last_scope		3859977	1					
ANR	3860022	IdentifierDeclStatement	HashTable * ftable ;	2912:1:85520:85537	3859977	7	True				
ANR	3860023	IdentifierDecl	* ftable		3859977	0					
ANR	3860024	IdentifierDeclType	HashTable *		3859977	0					
ANR	3860025	Identifier	ftable		3859977	1					
ANR	3860026	IdentifierDeclStatement	int call_via_handler = 0 ;	2913:1:85540:85564	3859977	8	True				
ANR	3860027	IdentifierDecl	call_via_handler = 0		3859977	0					
ANR	3860028	IdentifierDeclType	int		3859977	0					
ANR	3860029	Identifier	call_via_handler		3859977	1					
ANR	3860030	AssignmentExpression	call_via_handler = 0		3859977	2		=			
ANR	3860031	Identifier	call_via_handler		3859977	0					
ANR	3860032	PrimaryExpression	0		3859977	1					
ANR	3860033	Statement	ALLOCA_FLAG	2914:1:85567:85577	3859977	9	True				
ANR	3860034	Statement	(	2914:12:85578:85578	3859977	10	True				
ANR	3860035	Statement	use_heap	2914:13:85579:85586	3859977	11	True				
ANR	3860036	Statement	)	2914:21:85587:85587	3859977	12	True				
ANR	3860037	IfStatement	if ( error )		3859977	13					
ANR	3860038	Condition	error	2916:5:85595:85599	3859977	0	True				
ANR	3860039	Identifier	error		3859977	0					
ANR	3860040	CompoundStatement		13:12:271:271	3859977	1					
ANR	3860041	ExpressionStatement	* error = NULL	2917:2:85606:85619	3859977	0	True				
ANR	3860042	AssignmentExpression	* error = NULL		3859977	0		=			
ANR	3860043	UnaryOperationExpression	* error		3859977	0					
ANR	3860044	UnaryOperator	*		3859977	0					
ANR	3860045	Identifier	error		3859977	1					
ANR	3860046	Identifier	NULL		3859977	1					
ANR	3860047	ExpressionStatement	fcc -> calling_scope = NULL	2920:1:85626:85651	3859977	14	True				
ANR	3860048	AssignmentExpression	fcc -> calling_scope = NULL		3859977	0		=			
ANR	3860049	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860050	Identifier	fcc		3859977	0					
ANR	3860051	Identifier	calling_scope		3859977	1					
ANR	3860052	Identifier	NULL		3859977	1					
ANR	3860053	ExpressionStatement	fcc -> function_handler = NULL	2921:1:85654:85682	3859977	15	True				
ANR	3860054	AssignmentExpression	fcc -> function_handler = NULL		3859977	0		=			
ANR	3860055	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860056	Identifier	fcc		3859977	0					
ANR	3860057	Identifier	function_handler		3859977	1					
ANR	3860058	Identifier	NULL		3859977	1					
ANR	3860059	IfStatement	if ( ! ce_org )		3859977	16					
ANR	3860060	Condition	! ce_org	2923:5:85690:85696	3859977	0	True				
ANR	3860061	UnaryOperationExpression	! ce_org		3859977	0					
ANR	3860062	UnaryOperator	!		3859977	0					
ANR	3860063	Identifier	ce_org		3859977	1					
ANR	3860064	CompoundStatement		21:2:372:391	3859977	1					
ANR	3860065	IdentifierDeclStatement	zend_string * lmname ;	2924:2:85703:85722	3859977	0	True				
ANR	3860066	IdentifierDecl	* lmname		3859977	0					
ANR	3860067	IdentifierDeclType	zend_string *		3859977	0					
ANR	3860068	Identifier	lmname		3859977	1					
ANR	3860069	IfStatement	if ( UNEXPECTED ( Z_STRVAL_P ( callable ) [ 0 ] == '\\\\' ) )		3859977	1					
ANR	3860070	Condition	UNEXPECTED ( Z_STRVAL_P ( callable ) [ 0 ] == '\\\\' )	2927:6:85754:85796	3859977	0	True				
ANR	3860071	CallExpression	UNEXPECTED ( Z_STRVAL_P ( callable ) [ 0 ] == '\\\\' )		3859977	0					
ANR	3860072	Callee	UNEXPECTED		3859977	0					
ANR	3860073	Identifier	UNEXPECTED		3859977	0					
ANR	3860074	ArgumentList	Z_STRVAL_P ( callable ) [ 0 ] == '\\\\'		3859977	1					
ANR	3860075	Argument	Z_STRVAL_P ( callable ) [ 0 ] == '\\\\'		3859977	0					
ANR	3860076	EqualityExpression	Z_STRVAL_P ( callable ) [ 0 ] == '\\\\'		3859977	0		==			
ANR	3860077	ArrayIndexing	Z_STRVAL_P ( callable ) [ 0 ]		3859977	0					
ANR	3860078	CallExpression	Z_STRVAL_P ( callable )		3859977	0					
ANR	3860079	Callee	Z_STRVAL_P		3859977	0					
ANR	3860080	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860081	ArgumentList	callable		3859977	1					
ANR	3860082	Argument	callable		3859977	0					
ANR	3860083	Identifier	callable		3859977	0					
ANR	3860084	PrimaryExpression	0		3859977	1					
ANR	3860085	PrimaryExpression	'\\\\'		3859977	1					
ANR	3860086	CompoundStatement		24:51:468:468	3859977	1					
ANR	3860087	ExpressionStatement	"ZSTR_ALLOCA_INIT ( lmname , Z_STRVAL_P ( callable ) + 1 , Z_STRLEN_P ( callable ) - 1 , use_heap )"	2928:3:85804:85890	3859977	0	True				
ANR	3860088	CallExpression	"ZSTR_ALLOCA_INIT ( lmname , Z_STRVAL_P ( callable ) + 1 , Z_STRLEN_P ( callable ) - 1 , use_heap )"		3859977	0					
ANR	3860089	Callee	ZSTR_ALLOCA_INIT		3859977	0					
ANR	3860090	Identifier	ZSTR_ALLOCA_INIT		3859977	0					
ANR	3860091	ArgumentList	lmname		3859977	1					
ANR	3860092	Argument	lmname		3859977	0					
ANR	3860093	Identifier	lmname		3859977	0					
ANR	3860094	Argument	Z_STRVAL_P ( callable ) + 1		3859977	1					
ANR	3860095	AdditiveExpression	Z_STRVAL_P ( callable ) + 1		3859977	0		+			
ANR	3860096	CallExpression	Z_STRVAL_P ( callable )		3859977	0					
ANR	3860097	Callee	Z_STRVAL_P		3859977	0					
ANR	3860098	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860099	ArgumentList	callable		3859977	1					
ANR	3860100	Argument	callable		3859977	0					
ANR	3860101	Identifier	callable		3859977	0					
ANR	3860102	PrimaryExpression	1		3859977	1					
ANR	3860103	Argument	Z_STRLEN_P ( callable ) - 1		3859977	2					
ANR	3860104	AdditiveExpression	Z_STRLEN_P ( callable ) - 1		3859977	0		-			
ANR	3860105	CallExpression	Z_STRLEN_P ( callable )		3859977	0					
ANR	3860106	Callee	Z_STRLEN_P		3859977	0					
ANR	3860107	Identifier	Z_STRLEN_P		3859977	0					
ANR	3860108	ArgumentList	callable		3859977	1					
ANR	3860109	Argument	callable		3859977	0					
ANR	3860110	Identifier	callable		3859977	0					
ANR	3860111	PrimaryExpression	1		3859977	1					
ANR	3860112	Argument	use_heap		3859977	3					
ANR	3860113	Identifier	use_heap		3859977	0					
ANR	3860114	ElseStatement	else		3859977	0					
ANR	3860115	CompoundStatement		26:9:570:570	3859977	0					
ANR	3860116	ExpressionStatement	lmname = Z_STR_P ( callable )	2930:3:85906:85932	3859977	0	True				
ANR	3860117	AssignmentExpression	lmname = Z_STR_P ( callable )		3859977	0		=			
ANR	3860118	Identifier	lmname		3859977	0					
ANR	3860119	CallExpression	Z_STR_P ( callable )		3859977	1					
ANR	3860120	Callee	Z_STR_P		3859977	0					
ANR	3860121	Identifier	Z_STR_P		3859977	0					
ANR	3860122	ArgumentList	callable		3859977	1					
ANR	3860123	Argument	callable		3859977	0					
ANR	3860124	Identifier	callable		3859977	0					
ANR	3860125	IfStatement	"if ( EXPECTED ( ( fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname ) ) != NULL ) )"		3859977	2					
ANR	3860126	Condition	"EXPECTED ( ( fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname ) ) != NULL )"	2934:6:86056:86145	3859977	0	True				
ANR	3860127	CallExpression	"EXPECTED ( ( fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname ) ) != NULL )"		3859977	0					
ANR	3860128	Callee	EXPECTED		3859977	0					
ANR	3860129	Identifier	EXPECTED		3859977	0					
ANR	3860130	ArgumentList	"( fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname ) ) != NULL"		3859977	1					
ANR	3860131	Argument	"( fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname ) ) != NULL"		3859977	0					
ANR	3860132	EqualityExpression	"( fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname ) ) != NULL"		3859977	0		!=			
ANR	3860133	AssignmentExpression	"fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname )"		3859977	0		=			
ANR	3860134	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860135	Identifier	fcc		3859977	0					
ANR	3860136	Identifier	function_handler		3859977	1					
ANR	3860137	CallExpression	"zend_hash_find_ptr ( EG ( function_table ) , lmname )"		3859977	1					
ANR	3860138	Callee	zend_hash_find_ptr		3859977	0					
ANR	3860139	Identifier	zend_hash_find_ptr		3859977	0					
ANR	3860140	ArgumentList	EG ( function_table )		3859977	1					
ANR	3860141	Argument	EG ( function_table )		3859977	0					
ANR	3860142	CallExpression	EG ( function_table )		3859977	0					
ANR	3860143	Callee	EG		3859977	0					
ANR	3860144	Identifier	EG		3859977	0					
ANR	3860145	ArgumentList	function_table		3859977	1					
ANR	3860146	Argument	function_table		3859977	0					
ANR	3860147	Identifier	function_table		3859977	0					
ANR	3860148	Argument	lmname		3859977	1					
ANR	3860149	Identifier	lmname		3859977	0					
ANR	3860150	Identifier	NULL		3859977	1					
ANR	3860151	CompoundStatement		31:98:817:817	3859977	1					
ANR	3860152	IfStatement	if ( lmname != Z_STR_P ( callable ) )		3859977	0					
ANR	3860153	Condition	lmname != Z_STR_P ( callable )	2935:7:86157:86183	3859977	0	True				
ANR	3860154	EqualityExpression	lmname != Z_STR_P ( callable )		3859977	0		!=			
ANR	3860155	Identifier	lmname		3859977	0					
ANR	3860156	CallExpression	Z_STR_P ( callable )		3859977	1					
ANR	3860157	Callee	Z_STR_P		3859977	0					
ANR	3860158	Identifier	Z_STR_P		3859977	0					
ANR	3860159	ArgumentList	callable		3859977	1					
ANR	3860160	Argument	callable		3859977	0					
ANR	3860161	Identifier	callable		3859977	0					
ANR	3860162	CompoundStatement		32:36:855:855	3859977	1					
ANR	3860163	ExpressionStatement	"ZSTR_ALLOCA_FREE ( lmname , use_heap )"	2936:4:86192:86226	3859977	0	True				
ANR	3860164	CallExpression	"ZSTR_ALLOCA_FREE ( lmname , use_heap )"		3859977	0					
ANR	3860165	Callee	ZSTR_ALLOCA_FREE		3859977	0					
ANR	3860166	Identifier	ZSTR_ALLOCA_FREE		3859977	0					
ANR	3860167	ArgumentList	lmname		3859977	1					
ANR	3860168	Argument	lmname		3859977	0					
ANR	3860169	Identifier	lmname		3859977	0					
ANR	3860170	Argument	use_heap		3859977	1					
ANR	3860171	Identifier	use_heap		3859977	0					
ANR	3860172	ExpressionStatement	fcc -> initialized = 1	2938:3:86236:86256	3859977	1	True				
ANR	3860173	AssignmentExpression	fcc -> initialized = 1		3859977	0		=			
ANR	3860174	PtrMemberAccess	fcc -> initialized		3859977	0					
ANR	3860175	Identifier	fcc		3859977	0					
ANR	3860176	Identifier	initialized		3859977	1					
ANR	3860177	PrimaryExpression	1		3859977	1					
ANR	3860178	ReturnStatement	return 1 ;	2939:3:86261:86269	3859977	2	True				
ANR	3860179	PrimaryExpression	1		3859977	0					
ANR	3860180	ElseStatement	else		3859977	0					
ANR	3860181	CompoundStatement		37:9:949:949	3859977	0					
ANR	3860182	IfStatement	if ( lmname == Z_STR_P ( callable ) )		3859977	0					
ANR	3860183	Condition	lmname == Z_STR_P ( callable )	2941:7:86289:86315	3859977	0	True				
ANR	3860184	EqualityExpression	lmname == Z_STR_P ( callable )		3859977	0		==			
ANR	3860185	Identifier	lmname		3859977	0					
ANR	3860186	CallExpression	Z_STR_P ( callable )		3859977	1					
ANR	3860187	Callee	Z_STR_P		3859977	0					
ANR	3860188	Identifier	Z_STR_P		3859977	0					
ANR	3860189	ArgumentList	callable		3859977	1					
ANR	3860190	Argument	callable		3859977	0					
ANR	3860191	Identifier	callable		3859977	0					
ANR	3860192	CompoundStatement		38:36:987:987	3859977	1					
ANR	3860193	ExpressionStatement	"ZSTR_ALLOCA_INIT ( lmname , Z_STRVAL_P ( callable ) , Z_STRLEN_P ( callable ) , use_heap )"	2942:4:86324:86402	3859977	0	True				
ANR	3860194	CallExpression	"ZSTR_ALLOCA_INIT ( lmname , Z_STRVAL_P ( callable ) , Z_STRLEN_P ( callable ) , use_heap )"		3859977	0					
ANR	3860195	Callee	ZSTR_ALLOCA_INIT		3859977	0					
ANR	3860196	Identifier	ZSTR_ALLOCA_INIT		3859977	0					
ANR	3860197	ArgumentList	lmname		3859977	1					
ANR	3860198	Argument	lmname		3859977	0					
ANR	3860199	Identifier	lmname		3859977	0					
ANR	3860200	Argument	Z_STRVAL_P ( callable )		3859977	1					
ANR	3860201	CallExpression	Z_STRVAL_P ( callable )		3859977	0					
ANR	3860202	Callee	Z_STRVAL_P		3859977	0					
ANR	3860203	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860204	ArgumentList	callable		3859977	1					
ANR	3860205	Argument	callable		3859977	0					
ANR	3860206	Identifier	callable		3859977	0					
ANR	3860207	Argument	Z_STRLEN_P ( callable )		3859977	2					
ANR	3860208	CallExpression	Z_STRLEN_P ( callable )		3859977	0					
ANR	3860209	Callee	Z_STRLEN_P		3859977	0					
ANR	3860210	Identifier	Z_STRLEN_P		3859977	0					
ANR	3860211	ArgumentList	callable		3859977	1					
ANR	3860212	Argument	callable		3859977	0					
ANR	3860213	Identifier	callable		3859977	0					
ANR	3860214	Argument	use_heap		3859977	3					
ANR	3860215	Identifier	use_heap		3859977	0					
ANR	3860216	ElseStatement	else		3859977	0					
ANR	3860217	CompoundStatement		40:10:1083:1083	3859977	0					
ANR	3860218	ExpressionStatement	zend_string_forget_hash_val ( lmname )	2944:4:86420:86455	3859977	0	True				
ANR	3860219	CallExpression	zend_string_forget_hash_val ( lmname )		3859977	0					
ANR	3860220	Callee	zend_string_forget_hash_val		3859977	0					
ANR	3860221	Identifier	zend_string_forget_hash_val		3859977	0					
ANR	3860222	ArgumentList	lmname		3859977	1					
ANR	3860223	Argument	lmname		3859977	0					
ANR	3860224	Identifier	lmname		3859977	0					
ANR	3860225	ExpressionStatement	"zend_str_tolower ( ZSTR_VAL ( lmname ) , ZSTR_LEN ( lmname ) )"	2946:3:86465:86517	3859977	1	True				
ANR	3860226	CallExpression	"zend_str_tolower ( ZSTR_VAL ( lmname ) , ZSTR_LEN ( lmname ) )"		3859977	0					
ANR	3860227	Callee	zend_str_tolower		3859977	0					
ANR	3860228	Identifier	zend_str_tolower		3859977	0					
ANR	3860229	ArgumentList	ZSTR_VAL ( lmname )		3859977	1					
ANR	3860230	Argument	ZSTR_VAL ( lmname )		3859977	0					
ANR	3860231	CallExpression	ZSTR_VAL ( lmname )		3859977	0					
ANR	3860232	Callee	ZSTR_VAL		3859977	0					
ANR	3860233	Identifier	ZSTR_VAL		3859977	0					
ANR	3860234	ArgumentList	lmname		3859977	1					
ANR	3860235	Argument	lmname		3859977	0					
ANR	3860236	Identifier	lmname		3859977	0					
ANR	3860237	Argument	ZSTR_LEN ( lmname )		3859977	1					
ANR	3860238	CallExpression	ZSTR_LEN ( lmname )		3859977	0					
ANR	3860239	Callee	ZSTR_LEN		3859977	0					
ANR	3860240	Identifier	ZSTR_LEN		3859977	0					
ANR	3860241	ArgumentList	lmname		3859977	1					
ANR	3860242	Argument	lmname		3859977	0					
ANR	3860243	Identifier	lmname		3859977	0					
ANR	3860244	IfStatement	"if ( ( fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname ) ) != NULL )"		3859977	2					
ANR	3860245	Condition	"( fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname ) ) != NULL"	2947:7:86526:86605	3859977	0	True				
ANR	3860246	EqualityExpression	"( fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname ) ) != NULL"		3859977	0		!=			
ANR	3860247	AssignmentExpression	"fcc -> function_handler = zend_hash_find_ptr ( EG ( function_table ) , lmname )"		3859977	0		=			
ANR	3860248	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860249	Identifier	fcc		3859977	0					
ANR	3860250	Identifier	function_handler		3859977	1					
ANR	3860251	CallExpression	"zend_hash_find_ptr ( EG ( function_table ) , lmname )"		3859977	1					
ANR	3860252	Callee	zend_hash_find_ptr		3859977	0					
ANR	3860253	Identifier	zend_hash_find_ptr		3859977	0					
ANR	3860254	ArgumentList	EG ( function_table )		3859977	1					
ANR	3860255	Argument	EG ( function_table )		3859977	0					
ANR	3860256	CallExpression	EG ( function_table )		3859977	0					
ANR	3860257	Callee	EG		3859977	0					
ANR	3860258	Identifier	EG		3859977	0					
ANR	3860259	ArgumentList	function_table		3859977	1					
ANR	3860260	Argument	function_table		3859977	0					
ANR	3860261	Identifier	function_table		3859977	0					
ANR	3860262	Argument	lmname		3859977	1					
ANR	3860263	Identifier	lmname		3859977	0					
ANR	3860264	Identifier	NULL		3859977	1					
ANR	3860265	CompoundStatement		44:89:1277:1277	3859977	1					
ANR	3860266	ExpressionStatement	"ZSTR_ALLOCA_FREE ( lmname , use_heap )"	2948:4:86614:86648	3859977	0	True				
ANR	3860267	CallExpression	"ZSTR_ALLOCA_FREE ( lmname , use_heap )"		3859977	0					
ANR	3860268	Callee	ZSTR_ALLOCA_FREE		3859977	0					
ANR	3860269	Identifier	ZSTR_ALLOCA_FREE		3859977	0					
ANR	3860270	ArgumentList	lmname		3859977	1					
ANR	3860271	Argument	lmname		3859977	0					
ANR	3860272	Identifier	lmname		3859977	0					
ANR	3860273	Argument	use_heap		3859977	1					
ANR	3860274	Identifier	use_heap		3859977	0					
ANR	3860275	ExpressionStatement	fcc -> initialized = 1	2949:4:86654:86674	3859977	1	True				
ANR	3860276	AssignmentExpression	fcc -> initialized = 1		3859977	0		=			
ANR	3860277	PtrMemberAccess	fcc -> initialized		3859977	0					
ANR	3860278	Identifier	fcc		3859977	0					
ANR	3860279	Identifier	initialized		3859977	1					
ANR	3860280	PrimaryExpression	1		3859977	1					
ANR	3860281	ReturnStatement	return 1 ;	2950:4:86680:86688	3859977	2	True				
ANR	3860282	PrimaryExpression	1		3859977	0					
ANR	3860283	IfStatement	if ( lmname != Z_STR_P ( callable ) )		3859977	3					
ANR	3860284	Condition	lmname != Z_STR_P ( callable )	2953:6:86705:86731	3859977	0	True				
ANR	3860285	EqualityExpression	lmname != Z_STR_P ( callable )		3859977	0		!=			
ANR	3860286	Identifier	lmname		3859977	0					
ANR	3860287	CallExpression	Z_STR_P ( callable )		3859977	1					
ANR	3860288	Callee	Z_STR_P		3859977	0					
ANR	3860289	Identifier	Z_STR_P		3859977	0					
ANR	3860290	ArgumentList	callable		3859977	1					
ANR	3860291	Argument	callable		3859977	0					
ANR	3860292	Identifier	callable		3859977	0					
ANR	3860293	CompoundStatement		50:35:1403:1403	3859977	1					
ANR	3860294	ExpressionStatement	"ZSTR_ALLOCA_FREE ( lmname , use_heap )"	2954:3:86739:86773	3859977	0	True				
ANR	3860295	CallExpression	"ZSTR_ALLOCA_FREE ( lmname , use_heap )"		3859977	0					
ANR	3860296	Callee	ZSTR_ALLOCA_FREE		3859977	0					
ANR	3860297	Identifier	ZSTR_ALLOCA_FREE		3859977	0					
ANR	3860298	ArgumentList	lmname		3859977	1					
ANR	3860299	Argument	lmname		3859977	0					
ANR	3860300	Identifier	lmname		3859977	0					
ANR	3860301	Argument	use_heap		3859977	1					
ANR	3860302	Identifier	use_heap		3859977	0					
ANR	3860303	IfStatement	"if ( ( colon = zend_memrchr ( Z_STRVAL_P ( callable ) , ':' , Z_STRLEN_P ( callable ) ) ) != NULL && colon > Z_STRVAL_P ( callable ) && * ( colon - 1 ) == ':' )"		3859977	17					
ANR	3860304	Condition	"( colon = zend_memrchr ( Z_STRVAL_P ( callable ) , ':' , Z_STRLEN_P ( callable ) ) ) != NULL && colon > Z_STRVAL_P ( callable ) && * ( colon - 1 ) == ':'"	2959:5:86853:86988	3859977	0	True				
ANR	3860305	AndExpression	"( colon = zend_memrchr ( Z_STRVAL_P ( callable ) , ':' , Z_STRLEN_P ( callable ) ) ) != NULL && colon > Z_STRVAL_P ( callable ) && * ( colon - 1 ) == ':'"		3859977	0		&&			
ANR	3860306	EqualityExpression	"( colon = zend_memrchr ( Z_STRVAL_P ( callable ) , ':' , Z_STRLEN_P ( callable ) ) ) != NULL"		3859977	0		!=			
ANR	3860307	AssignmentExpression	"colon = zend_memrchr ( Z_STRVAL_P ( callable ) , ':' , Z_STRLEN_P ( callable ) )"		3859977	0		=			
ANR	3860308	Identifier	colon		3859977	0					
ANR	3860309	CallExpression	"zend_memrchr ( Z_STRVAL_P ( callable ) , ':' , Z_STRLEN_P ( callable ) )"		3859977	1					
ANR	3860310	Callee	zend_memrchr		3859977	0					
ANR	3860311	Identifier	zend_memrchr		3859977	0					
ANR	3860312	ArgumentList	Z_STRVAL_P ( callable )		3859977	1					
ANR	3860313	Argument	Z_STRVAL_P ( callable )		3859977	0					
ANR	3860314	CallExpression	Z_STRVAL_P ( callable )		3859977	0					
ANR	3860315	Callee	Z_STRVAL_P		3859977	0					
ANR	3860316	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860317	ArgumentList	callable		3859977	1					
ANR	3860318	Argument	callable		3859977	0					
ANR	3860319	Identifier	callable		3859977	0					
ANR	3860320	Argument	':'		3859977	1					
ANR	3860321	PrimaryExpression	':'		3859977	0					
ANR	3860322	Argument	Z_STRLEN_P ( callable )		3859977	2					
ANR	3860323	CallExpression	Z_STRLEN_P ( callable )		3859977	0					
ANR	3860324	Callee	Z_STRLEN_P		3859977	0					
ANR	3860325	Identifier	Z_STRLEN_P		3859977	0					
ANR	3860326	ArgumentList	callable		3859977	1					
ANR	3860327	Argument	callable		3859977	0					
ANR	3860328	Identifier	callable		3859977	0					
ANR	3860329	Identifier	NULL		3859977	1					
ANR	3860330	AndExpression	colon > Z_STRVAL_P ( callable ) && * ( colon - 1 ) == ':'		3859977	1		&&			
ANR	3860331	RelationalExpression	colon > Z_STRVAL_P ( callable )		3859977	0		>			
ANR	3860332	Identifier	colon		3859977	0					
ANR	3860333	CallExpression	Z_STRVAL_P ( callable )		3859977	1					
ANR	3860334	Callee	Z_STRVAL_P		3859977	0					
ANR	3860335	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860336	ArgumentList	callable		3859977	1					
ANR	3860337	Argument	callable		3859977	0					
ANR	3860338	Identifier	callable		3859977	0					
ANR	3860339	EqualityExpression	* ( colon - 1 ) == ':'		3859977	1		==			
ANR	3860340	UnaryOperationExpression	* ( colon - 1 )		3859977	0					
ANR	3860341	UnaryOperator	*		3859977	0					
ANR	3860342	AdditiveExpression	colon - 1		3859977	1		-			
ANR	3860343	Identifier	colon		3859977	0					
ANR	3860344	PrimaryExpression	1		3859977	1					
ANR	3860345	PrimaryExpression	':'		3859977	1					
ANR	3860346	CompoundStatement		59:3:1662:1662	3859977	1					
ANR	3860347	ExpressionStatement	colon --	2963:2:86997:87004	3859977	0	True				
ANR	3860348	PostIncDecOperationExpression	colon --		3859977	0					
ANR	3860349	Identifier	colon		3859977	0					
ANR	3860350	IncDec	--		3859977	1					
ANR	3860351	ExpressionStatement	clen = colon - Z_STRVAL_P ( callable )	2964:2:87008:87043	3859977	1	True				
ANR	3860352	AssignmentExpression	clen = colon - Z_STRVAL_P ( callable )		3859977	0		=			
ANR	3860353	Identifier	clen		3859977	0					
ANR	3860354	AdditiveExpression	colon - Z_STRVAL_P ( callable )		3859977	1		-			
ANR	3860355	Identifier	colon		3859977	0					
ANR	3860356	CallExpression	Z_STRVAL_P ( callable )		3859977	1					
ANR	3860357	Callee	Z_STRVAL_P		3859977	0					
ANR	3860358	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860359	ArgumentList	callable		3859977	1					
ANR	3860360	Argument	callable		3859977	0					
ANR	3860361	Identifier	callable		3859977	0					
ANR	3860362	ExpressionStatement	mlen = Z_STRLEN_P ( callable ) - clen - 2	2965:2:87047:87085	3859977	2	True				
ANR	3860363	AssignmentExpression	mlen = Z_STRLEN_P ( callable ) - clen - 2		3859977	0		=			
ANR	3860364	Identifier	mlen		3859977	0					
ANR	3860365	AdditiveExpression	Z_STRLEN_P ( callable ) - clen - 2		3859977	1		-			
ANR	3860366	CallExpression	Z_STRLEN_P ( callable )		3859977	0					
ANR	3860367	Callee	Z_STRLEN_P		3859977	0					
ANR	3860368	Identifier	Z_STRLEN_P		3859977	0					
ANR	3860369	ArgumentList	callable		3859977	1					
ANR	3860370	Argument	callable		3859977	0					
ANR	3860371	Identifier	callable		3859977	0					
ANR	3860372	AdditiveExpression	clen - 2		3859977	1		-			
ANR	3860373	Identifier	clen		3859977	0					
ANR	3860374	PrimaryExpression	2		3859977	1					
ANR	3860375	IfStatement	if ( colon == Z_STRVAL_P ( callable ) )		3859977	3					
ANR	3860376	Condition	colon == Z_STRVAL_P ( callable )	2967:6:87094:87122	3859977	0	True				
ANR	3860377	EqualityExpression	colon == Z_STRVAL_P ( callable )		3859977	0		==			
ANR	3860378	Identifier	colon		3859977	0					
ANR	3860379	CallExpression	Z_STRVAL_P ( callable )		3859977	1					
ANR	3860380	Callee	Z_STRVAL_P		3859977	0					
ANR	3860381	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860382	ArgumentList	callable		3859977	1					
ANR	3860383	Argument	callable		3859977	0					
ANR	3860384	Identifier	callable		3859977	0					
ANR	3860385	CompoundStatement		64:37:1794:1794	3859977	1					
ANR	3860386	IfStatement	if ( error )		3859977	0					
ANR	3860387	Condition	error	2968:7:87134:87138	3859977	0	True				
ANR	3860388	Identifier	error		3859977	0					
ANR	3860389	ExpressionStatement	"zend_spprintf ( error , 0 , ""invalid function name"" )"	2968:14:87141:87189	3859977	1	True				
ANR	3860390	CallExpression	"zend_spprintf ( error , 0 , ""invalid function name"" )"		3859977	0					
ANR	3860391	Callee	zend_spprintf		3859977	0					
ANR	3860392	Identifier	zend_spprintf		3859977	0					
ANR	3860393	ArgumentList	error		3859977	1					
ANR	3860394	Argument	error		3859977	0					
ANR	3860395	Identifier	error		3859977	0					
ANR	3860396	Argument	0		3859977	1					
ANR	3860397	PrimaryExpression	0		3859977	0					
ANR	3860398	Argument	"""invalid function name"""		3859977	2					
ANR	3860399	PrimaryExpression	"""invalid function name"""		3859977	0					
ANR	3860400	ReturnStatement	return 0 ;	2969:3:87194:87202	3859977	1	True				
ANR	3860401	PrimaryExpression	0		3859977	0					
ANR	3860402	ExpressionStatement	last_scope = EG ( scope )	2974:2:87297:87319	3859977	4	True				
ANR	3860403	AssignmentExpression	last_scope = EG ( scope )		3859977	0		=			
ANR	3860404	Identifier	last_scope		3859977	0					
ANR	3860405	CallExpression	EG ( scope )		3859977	1					
ANR	3860406	Callee	EG		3859977	0					
ANR	3860407	Identifier	EG		3859977	0					
ANR	3860408	ArgumentList	scope		3859977	1					
ANR	3860409	Argument	scope		3859977	0					
ANR	3860410	Identifier	scope		3859977	0					
ANR	3860411	IfStatement	if ( ce_org )		3859977	5					
ANR	3860412	Condition	ce_org	2975:6:87327:87332	3859977	0	True				
ANR	3860413	Identifier	ce_org		3859977	0					
ANR	3860414	CompoundStatement		72:14:2004:2004	3859977	1					
ANR	3860415	ExpressionStatement	EG ( scope ) = ce_org	2976:3:87340:87358	3859977	0	True				
ANR	3860416	AssignmentExpression	EG ( scope ) = ce_org		3859977	0		=			
ANR	3860417	CallExpression	EG ( scope )		3859977	0					
ANR	3860418	Callee	EG		3859977	0					
ANR	3860419	Identifier	EG		3859977	0					
ANR	3860420	ArgumentList	scope		3859977	1					
ANR	3860421	Argument	scope		3859977	0					
ANR	3860422	Identifier	scope		3859977	0					
ANR	3860423	Identifier	ce_org		3859977	1					
ANR	3860424	ExpressionStatement	"cname = zend_string_init ( Z_STRVAL_P ( callable ) , clen , 0 )"	2979:2:87367:87422	3859977	6	True				
ANR	3860425	AssignmentExpression	"cname = zend_string_init ( Z_STRVAL_P ( callable ) , clen , 0 )"		3859977	0		=			
ANR	3860426	Identifier	cname		3859977	0					
ANR	3860427	CallExpression	"zend_string_init ( Z_STRVAL_P ( callable ) , clen , 0 )"		3859977	1					
ANR	3860428	Callee	zend_string_init		3859977	0					
ANR	3860429	Identifier	zend_string_init		3859977	0					
ANR	3860430	ArgumentList	Z_STRVAL_P ( callable )		3859977	1					
ANR	3860431	Argument	Z_STRVAL_P ( callable )		3859977	0					
ANR	3860432	CallExpression	Z_STRVAL_P ( callable )		3859977	0					
ANR	3860433	Callee	Z_STRVAL_P		3859977	0					
ANR	3860434	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860435	ArgumentList	callable		3859977	1					
ANR	3860436	Argument	callable		3859977	0					
ANR	3860437	Identifier	callable		3859977	0					
ANR	3860438	Argument	clen		3859977	1					
ANR	3860439	Identifier	clen		3859977	0					
ANR	3860440	Argument	0		3859977	2					
ANR	3860441	PrimaryExpression	0		3859977	0					
ANR	3860442	IfStatement	"if ( ! zend_is_callable_check_class ( cname , fcc , & strict_class , error ) )"		3859977	7					
ANR	3860443	Condition	"! zend_is_callable_check_class ( cname , fcc , & strict_class , error )"	2980:6:87430:87492	3859977	0	True				
ANR	3860444	UnaryOperationExpression	"! zend_is_callable_check_class ( cname , fcc , & strict_class , error )"		3859977	0					
ANR	3860445	UnaryOperator	!		3859977	0					
ANR	3860446	CallExpression	"zend_is_callable_check_class ( cname , fcc , & strict_class , error )"		3859977	1					
ANR	3860447	Callee	zend_is_callable_check_class		3859977	0					
ANR	3860448	Identifier	zend_is_callable_check_class		3859977	0					
ANR	3860449	ArgumentList	cname		3859977	1					
ANR	3860450	Argument	cname		3859977	0					
ANR	3860451	Identifier	cname		3859977	0					
ANR	3860452	Argument	fcc		3859977	1					
ANR	3860453	Identifier	fcc		3859977	0					
ANR	3860454	Argument	& strict_class		3859977	2					
ANR	3860455	UnaryOperationExpression	& strict_class		3859977	0					
ANR	3860456	UnaryOperator	&		3859977	0					
ANR	3860457	Identifier	strict_class		3859977	1					
ANR	3860458	Argument	error		3859977	3					
ANR	3860459	Identifier	error		3859977	0					
ANR	3860460	CompoundStatement		77:71:2164:2164	3859977	1					
ANR	3860461	ExpressionStatement	zend_string_release ( cname )	2981:3:87500:87526	3859977	0	True				
ANR	3860462	CallExpression	zend_string_release ( cname )		3859977	0					
ANR	3860463	Callee	zend_string_release		3859977	0					
ANR	3860464	Identifier	zend_string_release		3859977	0					
ANR	3860465	ArgumentList	cname		3859977	1					
ANR	3860466	Argument	cname		3859977	0					
ANR	3860467	Identifier	cname		3859977	0					
ANR	3860468	ExpressionStatement	EG ( scope ) = last_scope	2982:3:87531:87553	3859977	1	True				
ANR	3860469	AssignmentExpression	EG ( scope ) = last_scope		3859977	0		=			
ANR	3860470	CallExpression	EG ( scope )		3859977	0					
ANR	3860471	Callee	EG		3859977	0					
ANR	3860472	Identifier	EG		3859977	0					
ANR	3860473	ArgumentList	scope		3859977	1					
ANR	3860474	Argument	scope		3859977	0					
ANR	3860475	Identifier	scope		3859977	0					
ANR	3860476	Identifier	last_scope		3859977	1					
ANR	3860477	ReturnStatement	return 0 ;	2983:3:87558:87566	3859977	2	True				
ANR	3860478	PrimaryExpression	0		3859977	0					
ANR	3860479	ExpressionStatement	zend_string_release ( cname )	2985:2:87574:87600	3859977	8	True				
ANR	3860480	CallExpression	zend_string_release ( cname )		3859977	0					
ANR	3860481	Callee	zend_string_release		3859977	0					
ANR	3860482	Identifier	zend_string_release		3859977	0					
ANR	3860483	ArgumentList	cname		3859977	1					
ANR	3860484	Argument	cname		3859977	0					
ANR	3860485	Identifier	cname		3859977	0					
ANR	3860486	ExpressionStatement	EG ( scope ) = last_scope	2986:2:87604:87626	3859977	9	True				
ANR	3860487	AssignmentExpression	EG ( scope ) = last_scope		3859977	0		=			
ANR	3860488	CallExpression	EG ( scope )		3859977	0					
ANR	3860489	Callee	EG		3859977	0					
ANR	3860490	Identifier	EG		3859977	0					
ANR	3860491	ArgumentList	scope		3859977	1					
ANR	3860492	Argument	scope		3859977	0					
ANR	3860493	Identifier	scope		3859977	0					
ANR	3860494	Identifier	last_scope		3859977	1					
ANR	3860495	ExpressionStatement	ftable = & fcc -> calling_scope -> function_table	2988:2:87631:87675	3859977	10	True				
ANR	3860496	AssignmentExpression	ftable = & fcc -> calling_scope -> function_table		3859977	0		=			
ANR	3860497	Identifier	ftable		3859977	0					
ANR	3860498	UnaryOperationExpression	& fcc -> calling_scope -> function_table		3859977	1					
ANR	3860499	UnaryOperator	&		3859977	0					
ANR	3860500	PtrMemberAccess	fcc -> calling_scope -> function_table		3859977	1					
ANR	3860501	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860502	Identifier	fcc		3859977	0					
ANR	3860503	Identifier	calling_scope		3859977	1					
ANR	3860504	Identifier	function_table		3859977	1					
ANR	3860505	IfStatement	"if ( ce_org && ! instanceof_function ( ce_org , fcc -> calling_scope ) )"		3859977	11					
ANR	3860506	Condition	"ce_org && ! instanceof_function ( ce_org , fcc -> calling_scope )"	2989:6:87683:87740	3859977	0	True				
ANR	3860507	AndExpression	"ce_org && ! instanceof_function ( ce_org , fcc -> calling_scope )"		3859977	0		&&			
ANR	3860508	Identifier	ce_org		3859977	0					
ANR	3860509	UnaryOperationExpression	"! instanceof_function ( ce_org , fcc -> calling_scope )"		3859977	1					
ANR	3860510	UnaryOperator	!		3859977	0					
ANR	3860511	CallExpression	"instanceof_function ( ce_org , fcc -> calling_scope )"		3859977	1					
ANR	3860512	Callee	instanceof_function		3859977	0					
ANR	3860513	Identifier	instanceof_function		3859977	0					
ANR	3860514	ArgumentList	ce_org		3859977	1					
ANR	3860515	Argument	ce_org		3859977	0					
ANR	3860516	Identifier	ce_org		3859977	0					
ANR	3860517	Argument	fcc -> calling_scope		3859977	1					
ANR	3860518	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860519	Identifier	fcc		3859977	0					
ANR	3860520	Identifier	calling_scope		3859977	1					
ANR	3860521	CompoundStatement		86:66:2412:2412	3859977	1					
ANR	3860522	IfStatement	if ( error )		3859977	0					
ANR	3860523	Condition	error	2990:7:87752:87756	3859977	0	True				
ANR	3860524	Identifier	error		3859977	0					
ANR	3860525	ExpressionStatement	"zend_spprintf ( error , 0 , ""class '%s' is not a subclass of '%s'"" , ZSTR_VAL ( ce_org -> name ) , ZSTR_VAL ( fcc -> calling_scope -> name ) )"	2990:14:87759:87882	3859977	1	True				
ANR	3860526	CallExpression	"zend_spprintf ( error , 0 , ""class '%s' is not a subclass of '%s'"" , ZSTR_VAL ( ce_org -> name ) , ZSTR_VAL ( fcc -> calling_scope -> name ) )"		3859977	0					
ANR	3860527	Callee	zend_spprintf		3859977	0					
ANR	3860528	Identifier	zend_spprintf		3859977	0					
ANR	3860529	ArgumentList	error		3859977	1					
ANR	3860530	Argument	error		3859977	0					
ANR	3860531	Identifier	error		3859977	0					
ANR	3860532	Argument	0		3859977	1					
ANR	3860533	PrimaryExpression	0		3859977	0					
ANR	3860534	Argument	"""class '%s' is not a subclass of '%s'"""		3859977	2					
ANR	3860535	PrimaryExpression	"""class '%s' is not a subclass of '%s'"""		3859977	0					
ANR	3860536	Argument	ZSTR_VAL ( ce_org -> name )		3859977	3					
ANR	3860537	CallExpression	ZSTR_VAL ( ce_org -> name )		3859977	0					
ANR	3860538	Callee	ZSTR_VAL		3859977	0					
ANR	3860539	Identifier	ZSTR_VAL		3859977	0					
ANR	3860540	ArgumentList	ce_org -> name		3859977	1					
ANR	3860541	Argument	ce_org -> name		3859977	0					
ANR	3860542	PtrMemberAccess	ce_org -> name		3859977	0					
ANR	3860543	Identifier	ce_org		3859977	0					
ANR	3860544	Identifier	name		3859977	1					
ANR	3860545	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	4					
ANR	3860546	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	0					
ANR	3860547	Callee	ZSTR_VAL		3859977	0					
ANR	3860548	Identifier	ZSTR_VAL		3859977	0					
ANR	3860549	ArgumentList	fcc -> calling_scope -> name		3859977	1					
ANR	3860550	Argument	fcc -> calling_scope -> name		3859977	0					
ANR	3860551	PtrMemberAccess	fcc -> calling_scope -> name		3859977	0					
ANR	3860552	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860553	Identifier	fcc		3859977	0					
ANR	3860554	Identifier	calling_scope		3859977	1					
ANR	3860555	Identifier	name		3859977	1					
ANR	3860556	ReturnStatement	return 0 ;	2991:3:87887:87895	3859977	1	True				
ANR	3860557	PrimaryExpression	0		3859977	0					
ANR	3860558	ExpressionStatement	"mname = zend_string_init ( Z_STRVAL_P ( callable ) + clen + 2 , mlen , 0 )"	2993:2:87903:87969	3859977	12	True				
ANR	3860559	AssignmentExpression	"mname = zend_string_init ( Z_STRVAL_P ( callable ) + clen + 2 , mlen , 0 )"		3859977	0		=			
ANR	3860560	Identifier	mname		3859977	0					
ANR	3860561	CallExpression	"zend_string_init ( Z_STRVAL_P ( callable ) + clen + 2 , mlen , 0 )"		3859977	1					
ANR	3860562	Callee	zend_string_init		3859977	0					
ANR	3860563	Identifier	zend_string_init		3859977	0					
ANR	3860564	ArgumentList	Z_STRVAL_P ( callable ) + clen + 2		3859977	1					
ANR	3860565	Argument	Z_STRVAL_P ( callable ) + clen + 2		3859977	0					
ANR	3860566	AdditiveExpression	Z_STRVAL_P ( callable ) + clen + 2		3859977	0		+			
ANR	3860567	CallExpression	Z_STRVAL_P ( callable )		3859977	0					
ANR	3860568	Callee	Z_STRVAL_P		3859977	0					
ANR	3860569	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860570	ArgumentList	callable		3859977	1					
ANR	3860571	Argument	callable		3859977	0					
ANR	3860572	Identifier	callable		3859977	0					
ANR	3860573	AdditiveExpression	clen + 2		3859977	1		+			
ANR	3860574	Identifier	clen		3859977	0					
ANR	3860575	PrimaryExpression	2		3859977	1					
ANR	3860576	Argument	mlen		3859977	1					
ANR	3860577	Identifier	mlen		3859977	0					
ANR	3860578	Argument	0		3859977	2					
ANR	3860579	PrimaryExpression	0		3859977	0					
ANR	3860580	ElseStatement	else		3859977	0					
ANR	3860581	IfStatement	if ( ce_org )		3859977	0					
ANR	3860582	Condition	ce_org	2994:12:87983:87988	3859977	0	True				
ANR	3860583	Identifier	ce_org		3859977	0					
ANR	3860584	CompoundStatement		91:20:2660:2660	3859977	1					
ANR	3860585	ExpressionStatement	mlen = Z_STRLEN_P ( callable )	2996:2:88051:88078	3859977	0	True				
ANR	3860586	AssignmentExpression	mlen = Z_STRLEN_P ( callable )		3859977	0		=			
ANR	3860587	Identifier	mlen		3859977	0					
ANR	3860588	CallExpression	Z_STRLEN_P ( callable )		3859977	1					
ANR	3860589	Callee	Z_STRLEN_P		3859977	0					
ANR	3860590	Identifier	Z_STRLEN_P		3859977	0					
ANR	3860591	ArgumentList	callable		3859977	1					
ANR	3860592	Argument	callable		3859977	0					
ANR	3860593	Identifier	callable		3859977	0					
ANR	3860594	ExpressionStatement	mname = Z_STR_P ( callable )	2997:2:88082:88107	3859977	1	True				
ANR	3860595	AssignmentExpression	mname = Z_STR_P ( callable )		3859977	0		=			
ANR	3860596	Identifier	mname		3859977	0					
ANR	3860597	CallExpression	Z_STR_P ( callable )		3859977	1					
ANR	3860598	Callee	Z_STR_P		3859977	0					
ANR	3860599	Identifier	Z_STR_P		3859977	0					
ANR	3860600	ArgumentList	callable		3859977	1					
ANR	3860601	Argument	callable		3859977	0					
ANR	3860602	Identifier	callable		3859977	0					
ANR	3860603	ExpressionStatement	zend_string_addref ( mname )	2998:2:88111:88136	3859977	2	True				
ANR	3860604	CallExpression	zend_string_addref ( mname )		3859977	0					
ANR	3860605	Callee	zend_string_addref		3859977	0					
ANR	3860606	Identifier	zend_string_addref		3859977	0					
ANR	3860607	ArgumentList	mname		3859977	1					
ANR	3860608	Argument	mname		3859977	0					
ANR	3860609	Identifier	mname		3859977	0					
ANR	3860610	ExpressionStatement	ftable = & ce_org -> function_table	2999:2:88140:88172	3859977	3	True				
ANR	3860611	AssignmentExpression	ftable = & ce_org -> function_table		3859977	0		=			
ANR	3860612	Identifier	ftable		3859977	0					
ANR	3860613	UnaryOperationExpression	& ce_org -> function_table		3859977	1					
ANR	3860614	UnaryOperator	&		3859977	0					
ANR	3860615	PtrMemberAccess	ce_org -> function_table		3859977	1					
ANR	3860616	Identifier	ce_org		3859977	0					
ANR	3860617	Identifier	function_table		3859977	1					
ANR	3860618	ExpressionStatement	fcc -> calling_scope = ce_org	3000:2:88176:88203	3859977	4	True				
ANR	3860619	AssignmentExpression	fcc -> calling_scope = ce_org		3859977	0		=			
ANR	3860620	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860621	Identifier	fcc		3859977	0					
ANR	3860622	Identifier	calling_scope		3859977	1					
ANR	3860623	Identifier	ce_org		3859977	1					
ANR	3860624	ElseStatement	else		3859977	0					
ANR	3860625	CompoundStatement		98:8:2882:2882	3859977	0					
ANR	3860626	IfStatement	if ( error && ! ( check_flags & IS_CALLABLE_CHECK_SILENT ) )		3859977	0					
ANR	3860627	Condition	error && ! ( check_flags & IS_CALLABLE_CHECK_SILENT )	3003:6:88275:88324	3859977	0	True				
ANR	3860628	AndExpression	error && ! ( check_flags & IS_CALLABLE_CHECK_SILENT )		3859977	0		&&			
ANR	3860629	Identifier	error		3859977	0					
ANR	3860630	UnaryOperationExpression	! ( check_flags & IS_CALLABLE_CHECK_SILENT )		3859977	1					
ANR	3860631	UnaryOperator	!		3859977	0					
ANR	3860632	BitAndExpression	check_flags & IS_CALLABLE_CHECK_SILENT		3859977	1		&			
ANR	3860633	Identifier	check_flags		3859977	0					
ANR	3860634	Identifier	IS_CALLABLE_CHECK_SILENT		3859977	1					
ANR	3860635	CompoundStatement		100:58:2996:2996	3859977	1					
ANR	3860636	ExpressionStatement	"zend_spprintf ( error , 0 , ""function '%s' not found or invalid function name"" , Z_STRVAL_P ( callable ) )"	3004:3:88332:88429	3859977	0	True				
ANR	3860637	CallExpression	"zend_spprintf ( error , 0 , ""function '%s' not found or invalid function name"" , Z_STRVAL_P ( callable ) )"		3859977	0					
ANR	3860638	Callee	zend_spprintf		3859977	0					
ANR	3860639	Identifier	zend_spprintf		3859977	0					
ANR	3860640	ArgumentList	error		3859977	1					
ANR	3860641	Argument	error		3859977	0					
ANR	3860642	Identifier	error		3859977	0					
ANR	3860643	Argument	0		3859977	1					
ANR	3860644	PrimaryExpression	0		3859977	0					
ANR	3860645	Argument	"""function '%s' not found or invalid function name"""		3859977	2					
ANR	3860646	PrimaryExpression	"""function '%s' not found or invalid function name"""		3859977	0					
ANR	3860647	Argument	Z_STRVAL_P ( callable )		3859977	3					
ANR	3860648	CallExpression	Z_STRVAL_P ( callable )		3859977	0					
ANR	3860649	Callee	Z_STRVAL_P		3859977	0					
ANR	3860650	Identifier	Z_STRVAL_P		3859977	0					
ANR	3860651	ArgumentList	callable		3859977	1					
ANR	3860652	Argument	callable		3859977	0					
ANR	3860653	Identifier	callable		3859977	0					
ANR	3860654	ReturnStatement	return 0 ;	3006:2:88437:88445	3859977	1	True				
ANR	3860655	PrimaryExpression	0		3859977	0					
ANR	3860656	ExpressionStatement	lmname = zend_string_tolower ( mname )	3009:1:88452:88487	3859977	18	True				
ANR	3860657	AssignmentExpression	lmname = zend_string_tolower ( mname )		3859977	0		=			
ANR	3860658	Identifier	lmname		3859977	0					
ANR	3860659	CallExpression	zend_string_tolower ( mname )		3859977	1					
ANR	3860660	Callee	zend_string_tolower		3859977	0					
ANR	3860661	Identifier	zend_string_tolower		3859977	0					
ANR	3860662	ArgumentList	mname		3859977	1					
ANR	3860663	Argument	mname		3859977	0					
ANR	3860664	Identifier	mname		3859977	0					
ANR	3860665	IfStatement	"if ( strict_class && fcc -> calling_scope && zend_string_equals_literal ( lmname , ZEND_CONSTRUCTOR_FUNC_NAME ) )"		3859977	19					
ANR	3860666	Condition	"strict_class && fcc -> calling_scope && zend_string_equals_literal ( lmname , ZEND_CONSTRUCTOR_FUNC_NAME )"	3010:5:88494:88600	3859977	0	True				
ANR	3860667	AndExpression	"strict_class && fcc -> calling_scope && zend_string_equals_literal ( lmname , ZEND_CONSTRUCTOR_FUNC_NAME )"		3859977	0		&&			
ANR	3860668	Identifier	strict_class		3859977	0					
ANR	3860669	AndExpression	"fcc -> calling_scope && zend_string_equals_literal ( lmname , ZEND_CONSTRUCTOR_FUNC_NAME )"		3859977	1		&&			
ANR	3860670	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860671	Identifier	fcc		3859977	0					
ANR	3860672	Identifier	calling_scope		3859977	1					
ANR	3860673	CallExpression	"zend_string_equals_literal ( lmname , ZEND_CONSTRUCTOR_FUNC_NAME )"		3859977	1					
ANR	3860674	Callee	zend_string_equals_literal		3859977	0					
ANR	3860675	Identifier	zend_string_equals_literal		3859977	0					
ANR	3860676	ArgumentList	lmname		3859977	1					
ANR	3860677	Argument	lmname		3859977	0					
ANR	3860678	Identifier	lmname		3859977	0					
ANR	3860679	Argument	ZEND_CONSTRUCTOR_FUNC_NAME		3859977	1					
ANR	3860680	Identifier	ZEND_CONSTRUCTOR_FUNC_NAME		3859977	0					
ANR	3860681	CompoundStatement		109:66:3272:3272	3859977	1					
ANR	3860682	ExpressionStatement	fcc -> function_handler = fcc -> calling_scope -> constructor	3013:2:88607:88662	3859977	0	True				
ANR	3860683	AssignmentExpression	fcc -> function_handler = fcc -> calling_scope -> constructor		3859977	0		=			
ANR	3860684	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860685	Identifier	fcc		3859977	0					
ANR	3860686	Identifier	function_handler		3859977	1					
ANR	3860687	PtrMemberAccess	fcc -> calling_scope -> constructor		3859977	1					
ANR	3860688	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860689	Identifier	fcc		3859977	0					
ANR	3860690	Identifier	calling_scope		3859977	1					
ANR	3860691	Identifier	constructor		3859977	1					
ANR	3860692	IfStatement	if ( fcc -> function_handler )		3859977	1					
ANR	3860693	Condition	fcc -> function_handler	3014:6:88670:88690	3859977	0	True				
ANR	3860694	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860695	Identifier	fcc		3859977	0					
ANR	3860696	Identifier	function_handler		3859977	1					
ANR	3860697	CompoundStatement		111:29:3362:3362	3859977	1					
ANR	3860698	ExpressionStatement	retval = 1	3015:3:88698:88708	3859977	0	True				
ANR	3860699	AssignmentExpression	retval = 1		3859977	0		=			
ANR	3860700	Identifier	retval		3859977	0					
ANR	3860701	PrimaryExpression	1		3859977	1					
ANR	3860702	ElseStatement	else		3859977	0					
ANR	3860703	IfStatement	"if ( ( fcc -> function_handler = zend_hash_find_ptr ( ftable , lmname ) ) != NULL )"		3859977	0					
ANR	3860704	Condition	"( fcc -> function_handler = zend_hash_find_ptr ( ftable , lmname ) ) != NULL"	3017:12:88726:88793	3859977	0	True				
ANR	3860705	EqualityExpression	"( fcc -> function_handler = zend_hash_find_ptr ( ftable , lmname ) ) != NULL"		3859977	0		!=			
ANR	3860706	AssignmentExpression	"fcc -> function_handler = zend_hash_find_ptr ( ftable , lmname )"		3859977	0		=			
ANR	3860707	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860708	Identifier	fcc		3859977	0					
ANR	3860709	Identifier	function_handler		3859977	1					
ANR	3860710	CallExpression	"zend_hash_find_ptr ( ftable , lmname )"		3859977	1					
ANR	3860711	Callee	zend_hash_find_ptr		3859977	0					
ANR	3860712	Identifier	zend_hash_find_ptr		3859977	0					
ANR	3860713	ArgumentList	ftable		3859977	1					
ANR	3860714	Argument	ftable		3859977	0					
ANR	3860715	Identifier	ftable		3859977	0					
ANR	3860716	Argument	lmname		3859977	1					
ANR	3860717	Identifier	lmname		3859977	0					
ANR	3860718	Identifier	NULL		3859977	1					
ANR	3860719	CompoundStatement		114:82:3465:3465	3859977	1					
ANR	3860720	ExpressionStatement	retval = 1	3018:2:88800:88810	3859977	0	True				
ANR	3860721	AssignmentExpression	retval = 1		3859977	0		=			
ANR	3860722	Identifier	retval		3859977	0					
ANR	3860723	PrimaryExpression	1		3859977	1					
ANR	3860724	IfStatement	"if ( ( fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_CHANGED ) && ! strict_class && EG ( scope ) && instanceof_function ( fcc -> function_handler -> common . scope , EG ( scope ) ) )"		3859977	1					
ANR	3860725	Condition	"( fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_CHANGED ) && ! strict_class && EG ( scope ) && instanceof_function ( fcc -> function_handler -> common . scope , EG ( scope ) )"	3019:6:88818:88991	3859977	0	True				
ANR	3860726	AndExpression	"( fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_CHANGED ) && ! strict_class && EG ( scope ) && instanceof_function ( fcc -> function_handler -> common . scope , EG ( scope ) )"		3859977	0		&&			
ANR	3860727	BitAndExpression	fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_CHANGED		3859977	0		&			
ANR	3860728	MemberAccess	fcc -> function_handler -> op_array . fn_flags		3859977	0					
ANR	3860729	PtrMemberAccess	fcc -> function_handler -> op_array		3859977	0					
ANR	3860730	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860731	Identifier	fcc		3859977	0					
ANR	3860732	Identifier	function_handler		3859977	1					
ANR	3860733	Identifier	op_array		3859977	1					
ANR	3860734	Identifier	fn_flags		3859977	1					
ANR	3860735	Identifier	ZEND_ACC_CHANGED		3859977	1					
ANR	3860736	AndExpression	"! strict_class && EG ( scope ) && instanceof_function ( fcc -> function_handler -> common . scope , EG ( scope ) )"		3859977	1		&&			
ANR	3860737	UnaryOperationExpression	! strict_class		3859977	0					
ANR	3860738	UnaryOperator	!		3859977	0					
ANR	3860739	Identifier	strict_class		3859977	1					
ANR	3860740	AndExpression	"EG ( scope ) && instanceof_function ( fcc -> function_handler -> common . scope , EG ( scope ) )"		3859977	1		&&			
ANR	3860741	CallExpression	EG ( scope )		3859977	0					
ANR	3860742	Callee	EG		3859977	0					
ANR	3860743	Identifier	EG		3859977	0					
ANR	3860744	ArgumentList	scope		3859977	1					
ANR	3860745	Argument	scope		3859977	0					
ANR	3860746	Identifier	scope		3859977	0					
ANR	3860747	CallExpression	"instanceof_function ( fcc -> function_handler -> common . scope , EG ( scope ) )"		3859977	1					
ANR	3860748	Callee	instanceof_function		3859977	0					
ANR	3860749	Identifier	instanceof_function		3859977	0					
ANR	3860750	ArgumentList	fcc -> function_handler -> common . scope		3859977	1					
ANR	3860751	Argument	fcc -> function_handler -> common . scope		3859977	0					
ANR	3860752	MemberAccess	fcc -> function_handler -> common . scope		3859977	0					
ANR	3860753	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3860754	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860755	Identifier	fcc		3859977	0					
ANR	3860756	Identifier	function_handler		3859977	1					
ANR	3860757	Identifier	common		3859977	1					
ANR	3860758	Identifier	scope		3859977	1					
ANR	3860759	Argument	EG ( scope )		3859977	1					
ANR	3860760	CallExpression	EG ( scope )		3859977	0					
ANR	3860761	Callee	EG		3859977	0					
ANR	3860762	Identifier	EG		3859977	0					
ANR	3860763	ArgumentList	scope		3859977	1					
ANR	3860764	Argument	scope		3859977	0					
ANR	3860765	Identifier	scope		3859977	0					
ANR	3860766	CompoundStatement		119:3:3668:3691	3859977	1					
ANR	3860767	IdentifierDeclStatement	zend_function * priv_fbc ;	3022:3:88999:89022	3859977	0	True				
ANR	3860768	IdentifierDecl	* priv_fbc		3859977	0					
ANR	3860769	IdentifierDeclType	zend_function *		3859977	0					
ANR	3860770	Identifier	priv_fbc		3859977	1					
ANR	3860771	IfStatement	"if ( ( priv_fbc = zend_hash_find_ptr ( & EG ( scope ) -> function_table , lmname ) ) != NULL && priv_fbc -> common . fn_flags & ZEND_ACC_PRIVATE && priv_fbc -> common . scope == EG ( scope ) )"		3859977	1					
ANR	3860772	Condition	"( priv_fbc = zend_hash_find_ptr ( & EG ( scope ) -> function_table , lmname ) ) != NULL && priv_fbc -> common . fn_flags & ZEND_ACC_PRIVATE && priv_fbc -> common . scope == EG ( scope )"	3024:7:89032:89201	3859977	0	True				
ANR	3860773	AndExpression	"( priv_fbc = zend_hash_find_ptr ( & EG ( scope ) -> function_table , lmname ) ) != NULL && priv_fbc -> common . fn_flags & ZEND_ACC_PRIVATE && priv_fbc -> common . scope == EG ( scope )"		3859977	0		&&			
ANR	3860774	EqualityExpression	"( priv_fbc = zend_hash_find_ptr ( & EG ( scope ) -> function_table , lmname ) ) != NULL"		3859977	0		!=			
ANR	3860775	AssignmentExpression	"priv_fbc = zend_hash_find_ptr ( & EG ( scope ) -> function_table , lmname )"		3859977	0		=			
ANR	3860776	Identifier	priv_fbc		3859977	0					
ANR	3860777	CallExpression	"zend_hash_find_ptr ( & EG ( scope ) -> function_table , lmname )"		3859977	1					
ANR	3860778	Callee	zend_hash_find_ptr		3859977	0					
ANR	3860779	Identifier	zend_hash_find_ptr		3859977	0					
ANR	3860780	ArgumentList	& EG ( scope ) -> function_table		3859977	1					
ANR	3860781	Argument	& EG ( scope ) -> function_table		3859977	0					
ANR	3860782	UnaryOperationExpression	& EG ( scope ) -> function_table		3859977	0					
ANR	3860783	UnaryOperator	&		3859977	0					
ANR	3860784	PtrMemberAccess	EG ( scope ) -> function_table		3859977	1					
ANR	3860785	CallExpression	EG ( scope )		3859977	0					
ANR	3860786	Callee	EG		3859977	0					
ANR	3860787	Identifier	EG		3859977	0					
ANR	3860788	ArgumentList	scope		3859977	1					
ANR	3860789	Argument	scope		3859977	0					
ANR	3860790	Identifier	scope		3859977	0					
ANR	3860791	Identifier	function_table		3859977	1					
ANR	3860792	Argument	lmname		3859977	1					
ANR	3860793	Identifier	lmname		3859977	0					
ANR	3860794	Identifier	NULL		3859977	1					
ANR	3860795	AndExpression	priv_fbc -> common . fn_flags & ZEND_ACC_PRIVATE && priv_fbc -> common . scope == EG ( scope )		3859977	1		&&			
ANR	3860796	BitAndExpression	priv_fbc -> common . fn_flags & ZEND_ACC_PRIVATE		3859977	0		&			
ANR	3860797	MemberAccess	priv_fbc -> common . fn_flags		3859977	0					
ANR	3860798	PtrMemberAccess	priv_fbc -> common		3859977	0					
ANR	3860799	Identifier	priv_fbc		3859977	0					
ANR	3860800	Identifier	common		3859977	1					
ANR	3860801	Identifier	fn_flags		3859977	1					
ANR	3860802	Identifier	ZEND_ACC_PRIVATE		3859977	1					
ANR	3860803	EqualityExpression	priv_fbc -> common . scope == EG ( scope )		3859977	1		==			
ANR	3860804	MemberAccess	priv_fbc -> common . scope		3859977	0					
ANR	3860805	PtrMemberAccess	priv_fbc -> common		3859977	0					
ANR	3860806	Identifier	priv_fbc		3859977	0					
ANR	3860807	Identifier	common		3859977	1					
ANR	3860808	Identifier	scope		3859977	1					
ANR	3860809	CallExpression	EG ( scope )		3859977	1					
ANR	3860810	Callee	EG		3859977	0					
ANR	3860811	Identifier	EG		3859977	0					
ANR	3860812	ArgumentList	scope		3859977	1					
ANR	3860813	Argument	scope		3859977	0					
ANR	3860814	Identifier	scope		3859977	0					
ANR	3860815	CompoundStatement		123:44:3873:3873	3859977	1					
ANR	3860816	ExpressionStatement	fcc -> function_handler = priv_fbc	3027:4:89210:89242	3859977	0	True				
ANR	3860817	AssignmentExpression	fcc -> function_handler = priv_fbc		3859977	0		=			
ANR	3860818	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860819	Identifier	fcc		3859977	0					
ANR	3860820	Identifier	function_handler		3859977	1					
ANR	3860821	Identifier	priv_fbc		3859977	1					
ANR	3860822	IfStatement	if ( ( check_flags & IS_CALLABLE_CHECK_NO_ACCESS ) == 0 && ( fcc -> calling_scope && ( ( fcc -> object && fcc -> calling_scope -> __call ) || ( ! fcc -> object && fcc -> calling_scope -> __callstatic ) ) ) )		3859977	2					
ANR	3860823	Condition	( check_flags & IS_CALLABLE_CHECK_NO_ACCESS ) == 0 && ( fcc -> calling_scope && ( ( fcc -> object && fcc -> calling_scope -> __call ) || ( ! fcc -> object && fcc -> calling_scope -> __callstatic ) ) )	3030:6:89259:89454	3859977	0	True				
ANR	3860824	AndExpression	( check_flags & IS_CALLABLE_CHECK_NO_ACCESS ) == 0 && ( fcc -> calling_scope && ( ( fcc -> object && fcc -> calling_scope -> __call ) || ( ! fcc -> object && fcc -> calling_scope -> __callstatic ) ) )		3859977	0		&&			
ANR	3860825	EqualityExpression	( check_flags & IS_CALLABLE_CHECK_NO_ACCESS ) == 0		3859977	0		==			
ANR	3860826	BitAndExpression	check_flags & IS_CALLABLE_CHECK_NO_ACCESS		3859977	0		&			
ANR	3860827	Identifier	check_flags		3859977	0					
ANR	3860828	Identifier	IS_CALLABLE_CHECK_NO_ACCESS		3859977	1					
ANR	3860829	PrimaryExpression	0		3859977	1					
ANR	3860830	AndExpression	fcc -> calling_scope && ( ( fcc -> object && fcc -> calling_scope -> __call ) || ( ! fcc -> object && fcc -> calling_scope -> __callstatic ) )		3859977	1		&&			
ANR	3860831	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860832	Identifier	fcc		3859977	0					
ANR	3860833	Identifier	calling_scope		3859977	1					
ANR	3860834	OrExpression	( fcc -> object && fcc -> calling_scope -> __call ) || ( ! fcc -> object && fcc -> calling_scope -> __callstatic )		3859977	1		||			
ANR	3860835	AndExpression	fcc -> object && fcc -> calling_scope -> __call		3859977	0		&&			
ANR	3860836	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3860837	Identifier	fcc		3859977	0					
ANR	3860838	Identifier	object		3859977	1					
ANR	3860839	PtrMemberAccess	fcc -> calling_scope -> __call		3859977	1					
ANR	3860840	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860841	Identifier	fcc		3859977	0					
ANR	3860842	Identifier	calling_scope		3859977	1					
ANR	3860843	Identifier	__call		3859977	1					
ANR	3860844	AndExpression	! fcc -> object && fcc -> calling_scope -> __callstatic		3859977	1		&&			
ANR	3860845	UnaryOperationExpression	! fcc -> object		3859977	0					
ANR	3860846	UnaryOperator	!		3859977	0					
ANR	3860847	PtrMemberAccess	fcc -> object		3859977	1					
ANR	3860848	Identifier	fcc		3859977	0					
ANR	3860849	Identifier	object		3859977	1					
ANR	3860850	PtrMemberAccess	fcc -> calling_scope -> __callstatic		3859977	1					
ANR	3860851	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860852	Identifier	fcc		3859977	0					
ANR	3860853	Identifier	calling_scope		3859977	1					
ANR	3860854	Identifier	__callstatic		3859977	1					
ANR	3860855	CompoundStatement		130:62:4126:4126	3859977	1					
ANR	3860856	IfStatement	if ( fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_PRIVATE )		3859977	0					
ANR	3860857	Condition	fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_PRIVATE	3034:7:89466:89524	3859977	0	True				
ANR	3860858	BitAndExpression	fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_PRIVATE		3859977	0		&			
ANR	3860859	MemberAccess	fcc -> function_handler -> op_array . fn_flags		3859977	0					
ANR	3860860	PtrMemberAccess	fcc -> function_handler -> op_array		3859977	0					
ANR	3860861	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860862	Identifier	fcc		3859977	0					
ANR	3860863	Identifier	function_handler		3859977	1					
ANR	3860864	Identifier	op_array		3859977	1					
ANR	3860865	Identifier	fn_flags		3859977	1					
ANR	3860866	Identifier	ZEND_ACC_PRIVATE		3859977	1					
ANR	3860867	CompoundStatement		131:68:4196:4196	3859977	1					
ANR	3860868	IfStatement	"if ( ! zend_check_private ( fcc -> function_handler , fcc -> object ? fcc -> object -> ce : EG ( scope ) , lmname ) )"		3859977	0					
ANR	3860869	Condition	"! zend_check_private ( fcc -> function_handler , fcc -> object ? fcc -> object -> ce : EG ( scope ) , lmname )"	3035:8:89537:89629	3859977	0	True				
ANR	3860870	UnaryOperationExpression	"! zend_check_private ( fcc -> function_handler , fcc -> object ? fcc -> object -> ce : EG ( scope ) , lmname )"		3859977	0					
ANR	3860871	UnaryOperator	!		3859977	0					
ANR	3860872	CallExpression	"zend_check_private ( fcc -> function_handler , fcc -> object ? fcc -> object -> ce : EG ( scope ) , lmname )"		3859977	1					
ANR	3860873	Callee	zend_check_private		3859977	0					
ANR	3860874	Identifier	zend_check_private		3859977	0					
ANR	3860875	ArgumentList	fcc -> function_handler		3859977	1					
ANR	3860876	Argument	fcc -> function_handler		3859977	0					
ANR	3860877	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860878	Identifier	fcc		3859977	0					
ANR	3860879	Identifier	function_handler		3859977	1					
ANR	3860880	Argument	fcc -> object ? fcc -> object -> ce : EG ( scope )		3859977	1					
ANR	3860881	ConditionalExpression	fcc -> object ? fcc -> object -> ce : EG ( scope )		3859977	0					
ANR	3860882	Condition	fcc -> object		3859977	0					
ANR	3860883	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3860884	Identifier	fcc		3859977	0					
ANR	3860885	Identifier	object		3859977	1					
ANR	3860886	PtrMemberAccess	fcc -> object -> ce		3859977	1					
ANR	3860887	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3860888	Identifier	fcc		3859977	0					
ANR	3860889	Identifier	object		3859977	1					
ANR	3860890	Identifier	ce		3859977	1					
ANR	3860891	CallExpression	EG ( scope )		3859977	2					
ANR	3860892	Callee	EG		3859977	0					
ANR	3860893	Identifier	EG		3859977	0					
ANR	3860894	ArgumentList	scope		3859977	1					
ANR	3860895	Argument	scope		3859977	0					
ANR	3860896	Identifier	scope		3859977	0					
ANR	3860897	Argument	lmname		3859977	2					
ANR	3860898	Identifier	lmname		3859977	0					
ANR	3860899	CompoundStatement		132:103:4301:4301	3859977	1					
ANR	3860900	ExpressionStatement	retval = 0	3036:5:89639:89649	3859977	0	True				
ANR	3860901	AssignmentExpression	retval = 0		3859977	0		=			
ANR	3860902	Identifier	retval		3859977	0					
ANR	3860903	PrimaryExpression	0		3859977	1					
ANR	3860904	ExpressionStatement	fcc -> function_handler = NULL	3037:5:89656:89684	3859977	1	True				
ANR	3860905	AssignmentExpression	fcc -> function_handler = NULL		3859977	0		=			
ANR	3860906	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860907	Identifier	fcc		3859977	0					
ANR	3860908	Identifier	function_handler		3859977	1					
ANR	3860909	Identifier	NULL		3859977	1					
ANR	3860910	GotoStatement	goto get_function_via_handler ;	3038:5:89691:89720	3859977	2	True				
ANR	3860911	Identifier	get_function_via_handler		3859977	0					
ANR	3860912	ElseStatement	else		3859977	0					
ANR	3860913	IfStatement	if ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_PROTECTED )		3859977	0					
ANR	3860914	Condition	fcc -> function_handler -> common . fn_flags & ZEND_ACC_PROTECTED	3040:14:89742:89800	3859977	0	True				
ANR	3860915	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_PROTECTED		3859977	0		&			
ANR	3860916	MemberAccess	fcc -> function_handler -> common . fn_flags		3859977	0					
ANR	3860917	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3860918	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860919	Identifier	fcc		3859977	0					
ANR	3860920	Identifier	function_handler		3859977	1					
ANR	3860921	Identifier	common		3859977	1					
ANR	3860922	Identifier	fn_flags		3859977	1					
ANR	3860923	Identifier	ZEND_ACC_PROTECTED		3859977	1					
ANR	3860924	CompoundStatement		137:75:4472:4472	3859977	1					
ANR	3860925	IfStatement	"if ( ! zend_check_protected ( fcc -> function_handler -> common . scope , EG ( scope ) ) )"		3859977	0					
ANR	3860926	Condition	"! zend_check_protected ( fcc -> function_handler -> common . scope , EG ( scope ) )"	3041:8:89813:89881	3859977	0	True				
ANR	3860927	UnaryOperationExpression	"! zend_check_protected ( fcc -> function_handler -> common . scope , EG ( scope ) )"		3859977	0					
ANR	3860928	UnaryOperator	!		3859977	0					
ANR	3860929	CallExpression	"zend_check_protected ( fcc -> function_handler -> common . scope , EG ( scope ) )"		3859977	1					
ANR	3860930	Callee	zend_check_protected		3859977	0					
ANR	3860931	Identifier	zend_check_protected		3859977	0					
ANR	3860932	ArgumentList	fcc -> function_handler -> common . scope		3859977	1					
ANR	3860933	Argument	fcc -> function_handler -> common . scope		3859977	0					
ANR	3860934	MemberAccess	fcc -> function_handler -> common . scope		3859977	0					
ANR	3860935	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3860936	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860937	Identifier	fcc		3859977	0					
ANR	3860938	Identifier	function_handler		3859977	1					
ANR	3860939	Identifier	common		3859977	1					
ANR	3860940	Identifier	scope		3859977	1					
ANR	3860941	Argument	EG ( scope )		3859977	1					
ANR	3860942	CallExpression	EG ( scope )		3859977	0					
ANR	3860943	Callee	EG		3859977	0					
ANR	3860944	Identifier	EG		3859977	0					
ANR	3860945	ArgumentList	scope		3859977	1					
ANR	3860946	Argument	scope		3859977	0					
ANR	3860947	Identifier	scope		3859977	0					
ANR	3860948	CompoundStatement		138:79:4553:4553	3859977	1					
ANR	3860949	ExpressionStatement	retval = 0	3042:5:89891:89901	3859977	0	True				
ANR	3860950	AssignmentExpression	retval = 0		3859977	0		=			
ANR	3860951	Identifier	retval		3859977	0					
ANR	3860952	PrimaryExpression	0		3859977	1					
ANR	3860953	ExpressionStatement	fcc -> function_handler = NULL	3043:5:89908:89936	3859977	1	True				
ANR	3860954	AssignmentExpression	fcc -> function_handler = NULL		3859977	0		=			
ANR	3860955	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860956	Identifier	fcc		3859977	0					
ANR	3860957	Identifier	function_handler		3859977	1					
ANR	3860958	Identifier	NULL		3859977	1					
ANR	3860959	GotoStatement	goto get_function_via_handler ;	3044:5:89943:89972	3859977	2	True				
ANR	3860960	Identifier	get_function_via_handler		3859977	0					
ANR	3860961	ElseStatement	else		3859977	0					
ANR	3860962	CompoundStatement		145:8:4666:4666	3859977	0					
ANR	3860963	Label	get_function_via_handler :	3049:0:89999:90023	3859977	0	True				
ANR	3860964	Identifier	get_function_via_handler		3859977	0					
ANR	3860965	IfStatement	if ( fcc -> object && fcc -> calling_scope == ce_org )		3859977	1					
ANR	3860966	Condition	fcc -> object && fcc -> calling_scope == ce_org	3050:6:90031:90073	3859977	0	True				
ANR	3860967	AndExpression	fcc -> object && fcc -> calling_scope == ce_org		3859977	0		&&			
ANR	3860968	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3860969	Identifier	fcc		3859977	0					
ANR	3860970	Identifier	object		3859977	1					
ANR	3860971	EqualityExpression	fcc -> calling_scope == ce_org		3859977	1		==			
ANR	3860972	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3860973	Identifier	fcc		3859977	0					
ANR	3860974	Identifier	calling_scope		3859977	1					
ANR	3860975	Identifier	ce_org		3859977	1					
ANR	3860976	CompoundStatement		147:51:4745:4745	3859977	1					
ANR	3860977	IfStatement	if ( strict_class && ce_org -> __call )		3859977	0					
ANR	3860978	Condition	strict_class && ce_org -> __call	3051:7:90085:90114	3859977	0	True				
ANR	3860979	AndExpression	strict_class && ce_org -> __call		3859977	0		&&			
ANR	3860980	Identifier	strict_class		3859977	0					
ANR	3860981	PtrMemberAccess	ce_org -> __call		3859977	1					
ANR	3860982	Identifier	ce_org		3859977	0					
ANR	3860983	Identifier	__call		3859977	1					
ANR	3860984	CompoundStatement		148:39:4786:4786	3859977	1					
ANR	3860985	ExpressionStatement	"fcc -> function_handler = zend_get_call_trampoline_func ( ce_org , mname , 0 )"	3052:4:90123:90194	3859977	0	True				
ANR	3860986	AssignmentExpression	"fcc -> function_handler = zend_get_call_trampoline_func ( ce_org , mname , 0 )"		3859977	0		=			
ANR	3860987	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3860988	Identifier	fcc		3859977	0					
ANR	3860989	Identifier	function_handler		3859977	1					
ANR	3860990	CallExpression	"zend_get_call_trampoline_func ( ce_org , mname , 0 )"		3859977	1					
ANR	3860991	Callee	zend_get_call_trampoline_func		3859977	0					
ANR	3860992	Identifier	zend_get_call_trampoline_func		3859977	0					
ANR	3860993	ArgumentList	ce_org		3859977	1					
ANR	3860994	Argument	ce_org		3859977	0					
ANR	3860995	Identifier	ce_org		3859977	0					
ANR	3860996	Argument	mname		3859977	1					
ANR	3860997	Identifier	mname		3859977	0					
ANR	3860998	Argument	0		3859977	2					
ANR	3860999	PrimaryExpression	0		3859977	0					
ANR	3861000	ExpressionStatement	call_via_handler = 1	3053:4:90200:90220	3859977	1	True				
ANR	3861001	AssignmentExpression	call_via_handler = 1		3859977	0		=			
ANR	3861002	Identifier	call_via_handler		3859977	0					
ANR	3861003	PrimaryExpression	1		3859977	1					
ANR	3861004	ExpressionStatement	retval = 1	3054:4:90226:90236	3859977	2	True				
ANR	3861005	AssignmentExpression	retval = 1		3859977	0		=			
ANR	3861006	Identifier	retval		3859977	0					
ANR	3861007	PrimaryExpression	1		3859977	1					
ANR	3861008	ElseStatement	else		3859977	0					
ANR	3861009	IfStatement	if ( fcc -> object -> handlers -> get_method )		3859977	0					
ANR	3861010	Condition	fcc -> object -> handlers -> get_method	3055:14:90252:90284	3859977	0	True				
ANR	3861011	PtrMemberAccess	fcc -> object -> handlers -> get_method		3859977	0					
ANR	3861012	PtrMemberAccess	fcc -> object -> handlers		3859977	0					
ANR	3861013	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3861014	Identifier	fcc		3859977	0					
ANR	3861015	Identifier	object		3859977	1					
ANR	3861016	Identifier	handlers		3859977	1					
ANR	3861017	Identifier	get_method		3859977	1					
ANR	3861018	CompoundStatement		152:49:4956:4956	3859977	1					
ANR	3861019	ExpressionStatement	"fcc -> function_handler = fcc -> object -> handlers -> get_method ( & fcc -> object , mname , NULL )"	3056:4:90293:90377	3859977	0	True				
ANR	3861020	AssignmentExpression	"fcc -> function_handler = fcc -> object -> handlers -> get_method ( & fcc -> object , mname , NULL )"		3859977	0		=			
ANR	3861021	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861022	Identifier	fcc		3859977	0					
ANR	3861023	Identifier	function_handler		3859977	1					
ANR	3861024	CallExpression	"fcc -> object -> handlers -> get_method ( & fcc -> object , mname , NULL )"		3859977	1					
ANR	3861025	Callee	fcc -> object -> handlers -> get_method		3859977	0					
ANR	3861026	PtrMemberAccess	fcc -> object -> handlers -> get_method		3859977	0					
ANR	3861027	PtrMemberAccess	fcc -> object -> handlers		3859977	0					
ANR	3861028	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3861029	Identifier	fcc		3859977	0					
ANR	3861030	Identifier	object		3859977	1					
ANR	3861031	Identifier	handlers		3859977	1					
ANR	3861032	Identifier	get_method		3859977	1					
ANR	3861033	ArgumentList	& fcc -> object		3859977	1					
ANR	3861034	Argument	& fcc -> object		3859977	0					
ANR	3861035	UnaryOperationExpression	& fcc -> object		3859977	0					
ANR	3861036	UnaryOperator	&		3859977	0					
ANR	3861037	PtrMemberAccess	fcc -> object		3859977	1					
ANR	3861038	Identifier	fcc		3859977	0					
ANR	3861039	Identifier	object		3859977	1					
ANR	3861040	Argument	mname		3859977	1					
ANR	3861041	Identifier	mname		3859977	0					
ANR	3861042	Argument	NULL		3859977	2					
ANR	3861043	Identifier	NULL		3859977	0					
ANR	3861044	IfStatement	if ( fcc -> function_handler )		3859977	1					
ANR	3861045	Condition	fcc -> function_handler	3057:8:90387:90407	3859977	0	True				
ANR	3861046	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861047	Identifier	fcc		3859977	0					
ANR	3861048	Identifier	function_handler		3859977	1					
ANR	3861049	CompoundStatement		154:31:5079:5079	3859977	1					
ANR	3861050	IfStatement	"if ( strict_class && ( ! fcc -> function_handler -> common . scope || ! instanceof_function ( ce_org , fcc -> function_handler -> common . scope ) ) )"		3859977	0					
ANR	3861051	Condition	"strict_class && ( ! fcc -> function_handler -> common . scope || ! instanceof_function ( ce_org , fcc -> function_handler -> common . scope ) )"	3058:9:90421:90562	3859977	0	True				
ANR	3861052	AndExpression	"strict_class && ( ! fcc -> function_handler -> common . scope || ! instanceof_function ( ce_org , fcc -> function_handler -> common . scope ) )"		3859977	0		&&			
ANR	3861053	Identifier	strict_class		3859977	0					
ANR	3861054	OrExpression	"! fcc -> function_handler -> common . scope || ! instanceof_function ( ce_org , fcc -> function_handler -> common . scope )"		3859977	1		||			
ANR	3861055	UnaryOperationExpression	! fcc -> function_handler -> common . scope		3859977	0					
ANR	3861056	UnaryOperator	!		3859977	0					
ANR	3861057	MemberAccess	fcc -> function_handler -> common . scope		3859977	1					
ANR	3861058	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861059	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861060	Identifier	fcc		3859977	0					
ANR	3861061	Identifier	function_handler		3859977	1					
ANR	3861062	Identifier	common		3859977	1					
ANR	3861063	Identifier	scope		3859977	1					
ANR	3861064	UnaryOperationExpression	"! instanceof_function ( ce_org , fcc -> function_handler -> common . scope )"		3859977	1					
ANR	3861065	UnaryOperator	!		3859977	0					
ANR	3861066	CallExpression	"instanceof_function ( ce_org , fcc -> function_handler -> common . scope )"		3859977	1					
ANR	3861067	Callee	instanceof_function		3859977	0					
ANR	3861068	Identifier	instanceof_function		3859977	0					
ANR	3861069	ArgumentList	ce_org		3859977	1					
ANR	3861070	Argument	ce_org		3859977	0					
ANR	3861071	Identifier	ce_org		3859977	0					
ANR	3861072	Argument	fcc -> function_handler -> common . scope		3859977	1					
ANR	3861073	MemberAccess	fcc -> function_handler -> common . scope		3859977	0					
ANR	3861074	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861075	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861076	Identifier	fcc		3859977	0					
ANR	3861077	Identifier	function_handler		3859977	1					
ANR	3861078	Identifier	common		3859977	1					
ANR	3861079	Identifier	scope		3859977	1					
ANR	3861080	CompoundStatement		157:78:5234:5234	3859977	1					
ANR	3861081	IfStatement	if ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		3859977	0					
ANR	3861082	Condition	fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE	3061:10:90577:90645	3859977	0	True				
ANR	3861083	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3859977	0		&			
ANR	3861084	MemberAccess	fcc -> function_handler -> common . fn_flags		3859977	0					
ANR	3861085	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861086	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861087	Identifier	fcc		3859977	0					
ANR	3861088	Identifier	function_handler		3859977	1					
ANR	3861089	Identifier	common		3859977	1					
ANR	3861090	Identifier	fn_flags		3859977	1					
ANR	3861091	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3859977	1					
ANR	3861092	CompoundStatement		158:81:5317:5317	3859977	1					
ANR	3861093	IfStatement	if ( fcc -> function_handler -> type != ZEND_OVERLOADED_FUNCTION )		3859977	0					
ANR	3861094	Condition	fcc -> function_handler -> type != ZEND_OVERLOADED_FUNCTION	3062:11:90661:90715	3859977	0	True				
ANR	3861095	EqualityExpression	fcc -> function_handler -> type != ZEND_OVERLOADED_FUNCTION		3859977	0		!=			
ANR	3861096	PtrMemberAccess	fcc -> function_handler -> type		3859977	0					
ANR	3861097	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861098	Identifier	fcc		3859977	0					
ANR	3861099	Identifier	function_handler		3859977	1					
ANR	3861100	Identifier	type		3859977	1					
ANR	3861101	Identifier	ZEND_OVERLOADED_FUNCTION		3859977	1					
ANR	3861102	CompoundStatement		159:68:5387:5387	3859977	1					
ANR	3861103	ExpressionStatement	zend_string_release ( fcc -> function_handler -> common . function_name )	3063:8:90728:90792	3859977	0	True				
ANR	3861104	CallExpression	zend_string_release ( fcc -> function_handler -> common . function_name )		3859977	0					
ANR	3861105	Callee	zend_string_release		3859977	0					
ANR	3861106	Identifier	zend_string_release		3859977	0					
ANR	3861107	ArgumentList	fcc -> function_handler -> common . function_name		3859977	1					
ANR	3861108	Argument	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861109	MemberAccess	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861110	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861111	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861112	Identifier	fcc		3859977	0					
ANR	3861113	Identifier	function_handler		3859977	1					
ANR	3861114	Identifier	common		3859977	1					
ANR	3861115	Identifier	function_name		3859977	1					
ANR	3861116	ExpressionStatement	zend_free_trampoline ( fcc -> function_handler )	3065:7:90810:90853	3859977	1	True				
ANR	3861117	CallExpression	zend_free_trampoline ( fcc -> function_handler )		3859977	0					
ANR	3861118	Callee	zend_free_trampoline		3859977	0					
ANR	3861119	Identifier	zend_free_trampoline		3859977	0					
ANR	3861120	ArgumentList	fcc -> function_handler		3859977	1					
ANR	3861121	Argument	fcc -> function_handler		3859977	0					
ANR	3861122	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861123	Identifier	fcc		3859977	0					
ANR	3861124	Identifier	function_handler		3859977	1					
ANR	3861125	ElseStatement	else		3859977	0					
ANR	3861126	CompoundStatement		164:12:5544:5544	3859977	0					
ANR	3861127	ExpressionStatement	retval = 1	3068:6:90883:90893	3859977	0	True				
ANR	3861128	AssignmentExpression	retval = 1		3859977	0		=			
ANR	3861129	Identifier	retval		3859977	0					
ANR	3861130	PrimaryExpression	1		3859977	1					
ANR	3861131	ExpressionStatement	call_via_handler = ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0	3069:6:90901:90996	3859977	1	True				
ANR	3861132	AssignmentExpression	call_via_handler = ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3859977	0		=			
ANR	3861133	Identifier	call_via_handler		3859977	0					
ANR	3861134	EqualityExpression	( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3859977	1		!=			
ANR	3861135	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3859977	0		&			
ANR	3861136	MemberAccess	fcc -> function_handler -> common . fn_flags		3859977	0					
ANR	3861137	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861138	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861139	Identifier	fcc		3859977	0					
ANR	3861140	Identifier	function_handler		3859977	1					
ANR	3861141	Identifier	common		3859977	1					
ANR	3861142	Identifier	fn_flags		3859977	1					
ANR	3861143	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3859977	1					
ANR	3861144	PrimaryExpression	0		3859977	1					
ANR	3861145	ElseStatement	else		3859977	0					
ANR	3861146	IfStatement	if ( fcc -> calling_scope )		3859977	0					
ANR	3861147	Condition	fcc -> calling_scope	3073:13:91029:91046	3859977	0	True				
ANR	3861148	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861149	Identifier	fcc		3859977	0					
ANR	3861150	Identifier	calling_scope		3859977	1					
ANR	3861151	CompoundStatement		170:33:5718:5718	3859977	1					
ANR	3861152	IfStatement	if ( fcc -> calling_scope -> get_static_method )		3859977	0					
ANR	3861153	Condition	fcc -> calling_scope -> get_static_method	3074:7:91058:91094	3859977	0	True				
ANR	3861154	PtrMemberAccess	fcc -> calling_scope -> get_static_method		3859977	0					
ANR	3861155	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861156	Identifier	fcc		3859977	0					
ANR	3861157	Identifier	calling_scope		3859977	1					
ANR	3861158	Identifier	get_static_method		3859977	1					
ANR	3861159	CompoundStatement		171:46:5766:5766	3859977	1					
ANR	3861160	ExpressionStatement	"fcc -> function_handler = fcc -> calling_scope -> get_static_method ( fcc -> calling_scope , mname )"	3075:4:91103:91191	3859977	0	True				
ANR	3861161	AssignmentExpression	"fcc -> function_handler = fcc -> calling_scope -> get_static_method ( fcc -> calling_scope , mname )"		3859977	0		=			
ANR	3861162	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861163	Identifier	fcc		3859977	0					
ANR	3861164	Identifier	function_handler		3859977	1					
ANR	3861165	CallExpression	"fcc -> calling_scope -> get_static_method ( fcc -> calling_scope , mname )"		3859977	1					
ANR	3861166	Callee	fcc -> calling_scope -> get_static_method		3859977	0					
ANR	3861167	PtrMemberAccess	fcc -> calling_scope -> get_static_method		3859977	0					
ANR	3861168	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861169	Identifier	fcc		3859977	0					
ANR	3861170	Identifier	calling_scope		3859977	1					
ANR	3861171	Identifier	get_static_method		3859977	1					
ANR	3861172	ArgumentList	fcc -> calling_scope		3859977	1					
ANR	3861173	Argument	fcc -> calling_scope		3859977	0					
ANR	3861174	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861175	Identifier	fcc		3859977	0					
ANR	3861176	Identifier	calling_scope		3859977	1					
ANR	3861177	Argument	mname		3859977	1					
ANR	3861178	Identifier	mname		3859977	0					
ANR	3861179	ElseStatement	else		3859977	0					
ANR	3861180	CompoundStatement		173:10:5872:5872	3859977	0					
ANR	3861181	ExpressionStatement	"fcc -> function_handler = zend_std_get_static_method ( fcc -> calling_scope , mname , NULL )"	3077:4:91209:91292	3859977	0	True				
ANR	3861182	AssignmentExpression	"fcc -> function_handler = zend_std_get_static_method ( fcc -> calling_scope , mname , NULL )"		3859977	0		=			
ANR	3861183	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861184	Identifier	fcc		3859977	0					
ANR	3861185	Identifier	function_handler		3859977	1					
ANR	3861186	CallExpression	"zend_std_get_static_method ( fcc -> calling_scope , mname , NULL )"		3859977	1					
ANR	3861187	Callee	zend_std_get_static_method		3859977	0					
ANR	3861188	Identifier	zend_std_get_static_method		3859977	0					
ANR	3861189	ArgumentList	fcc -> calling_scope		3859977	1					
ANR	3861190	Argument	fcc -> calling_scope		3859977	0					
ANR	3861191	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861192	Identifier	fcc		3859977	0					
ANR	3861193	Identifier	calling_scope		3859977	1					
ANR	3861194	Argument	mname		3859977	1					
ANR	3861195	Identifier	mname		3859977	0					
ANR	3861196	Argument	NULL		3859977	2					
ANR	3861197	Identifier	NULL		3859977	0					
ANR	3861198	IfStatement	if ( fcc -> function_handler )		3859977	1					
ANR	3861199	Condition	fcc -> function_handler	3079:7:91306:91326	3859977	0	True				
ANR	3861200	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861201	Identifier	fcc		3859977	0					
ANR	3861202	Identifier	function_handler		3859977	1					
ANR	3861203	CompoundStatement		176:30:5998:5998	3859977	1					
ANR	3861204	ExpressionStatement	retval = 1	3080:4:91335:91345	3859977	0	True				
ANR	3861205	AssignmentExpression	retval = 1		3859977	0		=			
ANR	3861206	Identifier	retval		3859977	0					
ANR	3861207	PrimaryExpression	1		3859977	1					
ANR	3861208	ExpressionStatement	call_via_handler = ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0	3081:4:91351:91446	3859977	1	True				
ANR	3861209	AssignmentExpression	call_via_handler = ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3859977	0		=			
ANR	3861210	Identifier	call_via_handler		3859977	0					
ANR	3861211	EqualityExpression	( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) != 0		3859977	1		!=			
ANR	3861212	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3859977	0		&			
ANR	3861213	MemberAccess	fcc -> function_handler -> common . fn_flags		3859977	0					
ANR	3861214	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861215	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861216	Identifier	fcc		3859977	0					
ANR	3861217	Identifier	function_handler		3859977	1					
ANR	3861218	Identifier	common		3859977	1					
ANR	3861219	Identifier	fn_flags		3859977	1					
ANR	3861220	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3859977	1					
ANR	3861221	PrimaryExpression	0		3859977	1					
ANR	3861222	IfStatement	if ( call_via_handler && ! fcc -> object )		3859977	2					
ANR	3861223	Condition	call_via_handler && ! fcc -> object	3082:8:91456:91487	3859977	0	True				
ANR	3861224	AndExpression	call_via_handler && ! fcc -> object		3859977	0		&&			
ANR	3861225	Identifier	call_via_handler		3859977	0					
ANR	3861226	UnaryOperationExpression	! fcc -> object		3859977	1					
ANR	3861227	UnaryOperator	!		3859977	0					
ANR	3861228	PtrMemberAccess	fcc -> object		3859977	1					
ANR	3861229	Identifier	fcc		3859977	0					
ANR	3861230	Identifier	object		3859977	1					
ANR	3861231	CompoundStatement		180:5:6166:6234	3859977	1					
ANR	3861232	IdentifierDeclStatement	zend_object * object = zend_get_this_object ( EG ( current_execute_data ) ) ;	3083:5:91497:91565	3859977	0	True				
ANR	3861233	IdentifierDecl	* object = zend_get_this_object ( EG ( current_execute_data ) )		3859977	0					
ANR	3861234	IdentifierDeclType	zend_object *		3859977	0					
ANR	3861235	Identifier	object		3859977	1					
ANR	3861236	AssignmentExpression	* object = zend_get_this_object ( EG ( current_execute_data ) )		3859977	2		=			
ANR	3861237	Identifier	object		3859977	0					
ANR	3861238	CallExpression	zend_get_this_object ( EG ( current_execute_data ) )		3859977	1					
ANR	3861239	Callee	zend_get_this_object		3859977	0					
ANR	3861240	Identifier	zend_get_this_object		3859977	0					
ANR	3861241	ArgumentList	EG ( current_execute_data )		3859977	1					
ANR	3861242	Argument	EG ( current_execute_data )		3859977	0					
ANR	3861243	CallExpression	EG ( current_execute_data )		3859977	0					
ANR	3861244	Callee	EG		3859977	0					
ANR	3861245	Identifier	EG		3859977	0					
ANR	3861246	ArgumentList	current_execute_data		3859977	1					
ANR	3861247	Argument	current_execute_data		3859977	0					
ANR	3861248	Identifier	current_execute_data		3859977	0					
ANR	3861249	IfStatement	"if ( object && instanceof_function ( object -> ce , fcc -> calling_scope ) )"		3859977	1					
ANR	3861250	Condition	"object && instanceof_function ( object -> ce , fcc -> calling_scope )"	3084:9:91576:91645	3859977	0	True				
ANR	3861251	AndExpression	"object && instanceof_function ( object -> ce , fcc -> calling_scope )"		3859977	0		&&			
ANR	3861252	Identifier	object		3859977	0					
ANR	3861253	CallExpression	"instanceof_function ( object -> ce , fcc -> calling_scope )"		3859977	1					
ANR	3861254	Callee	instanceof_function		3859977	0					
ANR	3861255	Identifier	instanceof_function		3859977	0					
ANR	3861256	ArgumentList	object -> ce		3859977	1					
ANR	3861257	Argument	object -> ce		3859977	0					
ANR	3861258	PtrMemberAccess	object -> ce		3859977	0					
ANR	3861259	Identifier	object		3859977	0					
ANR	3861260	Identifier	ce		3859977	1					
ANR	3861261	Argument	fcc -> calling_scope		3859977	1					
ANR	3861262	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861263	Identifier	fcc		3859977	0					
ANR	3861264	Identifier	calling_scope		3859977	1					
ANR	3861265	CompoundStatement		182:62:6317:6317	3859977	1					
ANR	3861266	ExpressionStatement	fcc -> object = object	3086:6:91656:91676	3859977	0	True				
ANR	3861267	AssignmentExpression	fcc -> object = object		3859977	0		=			
ANR	3861268	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3861269	Identifier	fcc		3859977	0					
ANR	3861270	Identifier	object		3859977	1					
ANR	3861271	Identifier	object		3859977	1					
ANR	3861272	IfStatement	if ( retval )		3859977	20					
ANR	3861273	Condition	retval	3093:5:91709:91714	3859977	0	True				
ANR	3861274	Identifier	retval		3859977	0					
ANR	3861275	CompoundStatement		190:13:6386:6386	3859977	1					
ANR	3861276	IfStatement	if ( fcc -> calling_scope && ! call_via_handler )		3859977	0					
ANR	3861277	Condition	fcc -> calling_scope && ! call_via_handler	3094:6:91725:91763	3859977	0	True				
ANR	3861278	AndExpression	fcc -> calling_scope && ! call_via_handler		3859977	0		&&			
ANR	3861279	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861280	Identifier	fcc		3859977	0					
ANR	3861281	Identifier	calling_scope		3859977	1					
ANR	3861282	UnaryOperationExpression	! call_via_handler		3859977	1					
ANR	3861283	UnaryOperator	!		3859977	0					
ANR	3861284	Identifier	call_via_handler		3859977	1					
ANR	3861285	CompoundStatement		191:47:6435:6435	3859977	1					
ANR	3861286	IfStatement	if ( ! fcc -> object && ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_ABSTRACT ) )		3859977	0					
ANR	3861287	Condition	! fcc -> object && ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_ABSTRACT )	3095:7:91775:91850	3859977	0	True				
ANR	3861288	AndExpression	! fcc -> object && ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_ABSTRACT )		3859977	0		&&			
ANR	3861289	UnaryOperationExpression	! fcc -> object		3859977	0					
ANR	3861290	UnaryOperator	!		3859977	0					
ANR	3861291	PtrMemberAccess	fcc -> object		3859977	1					
ANR	3861292	Identifier	fcc		3859977	0					
ANR	3861293	Identifier	object		3859977	1					
ANR	3861294	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_ABSTRACT		3859977	1		&			
ANR	3861295	MemberAccess	fcc -> function_handler -> common . fn_flags		3859977	0					
ANR	3861296	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861297	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861298	Identifier	fcc		3859977	0					
ANR	3861299	Identifier	function_handler		3859977	1					
ANR	3861300	Identifier	common		3859977	1					
ANR	3861301	Identifier	fn_flags		3859977	1					
ANR	3861302	Identifier	ZEND_ACC_ABSTRACT		3859977	1					
ANR	3861303	CompoundStatement		192:85:6522:6522	3859977	1					
ANR	3861304	IfStatement	if ( error )		3859977	0					
ANR	3861305	Condition	error	3096:8:91863:91867	3859977	0	True				
ANR	3861306	Identifier	error		3859977	0					
ANR	3861307	CompoundStatement		193:15:6539:6539	3859977	1					
ANR	3861308	ExpressionStatement	"zend_spprintf ( error , 0 , ""cannot call abstract method %s::%s()"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) )"	3097:5:91877:92031	3859977	0	True				
ANR	3861309	CallExpression	"zend_spprintf ( error , 0 , ""cannot call abstract method %s::%s()"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) )"		3859977	0					
ANR	3861310	Callee	zend_spprintf		3859977	0					
ANR	3861311	Identifier	zend_spprintf		3859977	0					
ANR	3861312	ArgumentList	error		3859977	1					
ANR	3861313	Argument	error		3859977	0					
ANR	3861314	Identifier	error		3859977	0					
ANR	3861315	Argument	0		3859977	1					
ANR	3861316	PrimaryExpression	0		3859977	0					
ANR	3861317	Argument	"""cannot call abstract method %s::%s()"""		3859977	2					
ANR	3861318	PrimaryExpression	"""cannot call abstract method %s::%s()"""		3859977	0					
ANR	3861319	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	3					
ANR	3861320	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	0					
ANR	3861321	Callee	ZSTR_VAL		3859977	0					
ANR	3861322	Identifier	ZSTR_VAL		3859977	0					
ANR	3861323	ArgumentList	fcc -> calling_scope -> name		3859977	1					
ANR	3861324	Argument	fcc -> calling_scope -> name		3859977	0					
ANR	3861325	PtrMemberAccess	fcc -> calling_scope -> name		3859977	0					
ANR	3861326	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861327	Identifier	fcc		3859977	0					
ANR	3861328	Identifier	calling_scope		3859977	1					
ANR	3861329	Identifier	name		3859977	1					
ANR	3861330	Argument	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	4					
ANR	3861331	CallExpression	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	0					
ANR	3861332	Callee	ZSTR_VAL		3859977	0					
ANR	3861333	Identifier	ZSTR_VAL		3859977	0					
ANR	3861334	ArgumentList	fcc -> function_handler -> common . function_name		3859977	1					
ANR	3861335	Argument	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861336	MemberAccess	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861337	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861338	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861339	Identifier	fcc		3859977	0					
ANR	3861340	Identifier	function_handler		3859977	1					
ANR	3861341	Identifier	common		3859977	1					
ANR	3861342	Identifier	function_name		3859977	1					
ANR	3861343	ExpressionStatement	retval = 0	3098:5:92038:92048	3859977	1	True				
ANR	3861344	AssignmentExpression	retval = 0		3859977	0		=			
ANR	3861345	Identifier	retval		3859977	0					
ANR	3861346	PrimaryExpression	0		3859977	1					
ANR	3861347	ElseStatement	else		3859977	0					
ANR	3861348	CompoundStatement		196:11:6730:6730	3859977	0					
ANR	3861349	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot call abstract method %s::%s()"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) )"	3100:5:92068:92221	3859977	0	True				
ANR	3861350	CallExpression	"zend_throw_error ( NULL , ""Cannot call abstract method %s::%s()"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) )"		3859977	0					
ANR	3861351	Callee	zend_throw_error		3859977	0					
ANR	3861352	Identifier	zend_throw_error		3859977	0					
ANR	3861353	ArgumentList	NULL		3859977	1					
ANR	3861354	Argument	NULL		3859977	0					
ANR	3861355	Identifier	NULL		3859977	0					
ANR	3861356	Argument	"""Cannot call abstract method %s::%s()"""		3859977	1					
ANR	3861357	PrimaryExpression	"""Cannot call abstract method %s::%s()"""		3859977	0					
ANR	3861358	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	2					
ANR	3861359	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	0					
ANR	3861360	Callee	ZSTR_VAL		3859977	0					
ANR	3861361	Identifier	ZSTR_VAL		3859977	0					
ANR	3861362	ArgumentList	fcc -> calling_scope -> name		3859977	1					
ANR	3861363	Argument	fcc -> calling_scope -> name		3859977	0					
ANR	3861364	PtrMemberAccess	fcc -> calling_scope -> name		3859977	0					
ANR	3861365	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861366	Identifier	fcc		3859977	0					
ANR	3861367	Identifier	calling_scope		3859977	1					
ANR	3861368	Identifier	name		3859977	1					
ANR	3861369	Argument	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	3					
ANR	3861370	CallExpression	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	0					
ANR	3861371	Callee	ZSTR_VAL		3859977	0					
ANR	3861372	Identifier	ZSTR_VAL		3859977	0					
ANR	3861373	ArgumentList	fcc -> function_handler -> common . function_name		3859977	1					
ANR	3861374	Argument	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861375	MemberAccess	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861376	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861377	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861378	Identifier	fcc		3859977	0					
ANR	3861379	Identifier	function_handler		3859977	1					
ANR	3861380	Identifier	common		3859977	1					
ANR	3861381	Identifier	function_name		3859977	1					
ANR	3861382	ReturnStatement	return 0 ;	3101:5:92228:92236	3859977	1	True				
ANR	3861383	PrimaryExpression	0		3859977	0					
ANR	3861384	ElseStatement	else		3859977	0					
ANR	3861385	IfStatement	if ( ! fcc -> object && ! ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_STATIC ) )		3859977	0					
ANR	3861386	Condition	! fcc -> object && ! ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_STATIC )	3103:14:92258:92332	3859977	0	True				
ANR	3861387	AndExpression	! fcc -> object && ! ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_STATIC )		3859977	0		&&			
ANR	3861388	UnaryOperationExpression	! fcc -> object		3859977	0					
ANR	3861389	UnaryOperator	!		3859977	0					
ANR	3861390	PtrMemberAccess	fcc -> object		3859977	1					
ANR	3861391	Identifier	fcc		3859977	0					
ANR	3861392	Identifier	object		3859977	1					
ANR	3861393	UnaryOperationExpression	! ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_STATIC )		3859977	1					
ANR	3861394	UnaryOperator	!		3859977	0					
ANR	3861395	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_STATIC		3859977	1		&			
ANR	3861396	MemberAccess	fcc -> function_handler -> common . fn_flags		3859977	0					
ANR	3861397	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861398	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861399	Identifier	fcc		3859977	0					
ANR	3861400	Identifier	function_handler		3859977	1					
ANR	3861401	Identifier	common		3859977	1					
ANR	3861402	Identifier	fn_flags		3859977	1					
ANR	3861403	Identifier	ZEND_ACC_STATIC		3859977	1					
ANR	3861404	CompoundStatement		202:4:7028:7038	3859977	1					
ANR	3861405	IdentifierDeclStatement	int severity ;	3104:4:92341:92353	3859977	0	True				
ANR	3861406	IdentifierDecl	severity		3859977	0					
ANR	3861407	IdentifierDeclType	int		3859977	0					
ANR	3861408	Identifier	severity		3859977	1					
ANR	3861409	IdentifierDeclStatement	char * verb ;	3105:4:92359:92369	3859977	1	True				
ANR	3861410	IdentifierDecl	* verb		3859977	0					
ANR	3861411	IdentifierDeclType	char *		3859977	0					
ANR	3861412	Identifier	verb		3859977	1					
ANR	3861413	IfStatement	if ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_ALLOW_STATIC )		3859977	2					
ANR	3861414	Condition	fcc -> function_handler -> common . fn_flags & ZEND_ACC_ALLOW_STATIC	3106:8:92379:92440	3859977	0	True				
ANR	3861415	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_ALLOW_STATIC		3859977	0		&			
ANR	3861416	MemberAccess	fcc -> function_handler -> common . fn_flags		3859977	0					
ANR	3861417	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861418	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861419	Identifier	fcc		3859977	0					
ANR	3861420	Identifier	function_handler		3859977	1					
ANR	3861421	Identifier	common		3859977	1					
ANR	3861422	Identifier	fn_flags		3859977	1					
ANR	3861423	Identifier	ZEND_ACC_ALLOW_STATIC		3859977	1					
ANR	3861424	CompoundStatement		203:72:7112:7112	3859977	1					
ANR	3861425	ExpressionStatement	severity = E_DEPRECATED	3107:5:92450:92473	3859977	0	True				
ANR	3861426	AssignmentExpression	severity = E_DEPRECATED		3859977	0		=			
ANR	3861427	Identifier	severity		3859977	0					
ANR	3861428	Identifier	E_DEPRECATED		3859977	1					
ANR	3861429	ExpressionStatement	"verb = ""should not"""	3108:5:92480:92499	3859977	1	True				
ANR	3861430	AssignmentExpression	"verb = ""should not"""		3859977	0		=			
ANR	3861431	Identifier	verb		3859977	0					
ANR	3861432	PrimaryExpression	"""should not"""		3859977	1					
ANR	3861433	ElseStatement	else		3859977	0					
ANR	3861434	CompoundStatement		206:11:7181:7181	3859977	0					
ANR	3861435	ExpressionStatement	severity = E_ERROR	3111:5:92639:92657	3859977	0	True				
ANR	3861436	AssignmentExpression	severity = E_ERROR		3859977	0		=			
ANR	3861437	Identifier	severity		3859977	0					
ANR	3861438	Identifier	E_ERROR		3859977	1					
ANR	3861439	ExpressionStatement	"verb = ""cannot"""	3112:5:92664:92679	3859977	1	True				
ANR	3861440	AssignmentExpression	"verb = ""cannot"""		3859977	0		=			
ANR	3861441	Identifier	verb		3859977	0					
ANR	3861442	PrimaryExpression	"""cannot"""		3859977	1					
ANR	3861443	IfStatement	if ( ( check_flags & IS_CALLABLE_CHECK_IS_STATIC ) != 0 )		3859977	3					
ANR	3861444	Condition	( check_flags & IS_CALLABLE_CHECK_IS_STATIC ) != 0	3114:8:92695:92742	3859977	0	True				
ANR	3861445	EqualityExpression	( check_flags & IS_CALLABLE_CHECK_IS_STATIC ) != 0		3859977	0		!=			
ANR	3861446	BitAndExpression	check_flags & IS_CALLABLE_CHECK_IS_STATIC		3859977	0		&			
ANR	3861447	Identifier	check_flags		3859977	0					
ANR	3861448	Identifier	IS_CALLABLE_CHECK_IS_STATIC		3859977	1					
ANR	3861449	PrimaryExpression	0		3859977	1					
ANR	3861450	CompoundStatement		211:58:7414:7414	3859977	1					
ANR	3861451	ExpressionStatement	retval = 0	3115:5:92752:92762	3859977	0	True				
ANR	3861452	AssignmentExpression	retval = 0		3859977	0		=			
ANR	3861453	Identifier	retval		3859977	0					
ANR	3861454	PrimaryExpression	0		3859977	1					
ANR	3861455	IfStatement	if ( error )		3859977	4					
ANR	3861456	Condition	error	3117:8:92778:92782	3859977	0	True				
ANR	3861457	Identifier	error		3859977	0					
ANR	3861458	CompoundStatement		214:15:7454:7454	3859977	1					
ANR	3861459	ExpressionStatement	"zend_spprintf ( error , 0 , ""non-static method %s::%s() %s be called statically"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) , verb )"	3118:5:92792:92966	3859977	0	True				
ANR	3861460	CallExpression	"zend_spprintf ( error , 0 , ""non-static method %s::%s() %s be called statically"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) , verb )"		3859977	0					
ANR	3861461	Callee	zend_spprintf		3859977	0					
ANR	3861462	Identifier	zend_spprintf		3859977	0					
ANR	3861463	ArgumentList	error		3859977	1					
ANR	3861464	Argument	error		3859977	0					
ANR	3861465	Identifier	error		3859977	0					
ANR	3861466	Argument	0		3859977	1					
ANR	3861467	PrimaryExpression	0		3859977	0					
ANR	3861468	Argument	"""non-static method %s::%s() %s be called statically"""		3859977	2					
ANR	3861469	PrimaryExpression	"""non-static method %s::%s() %s be called statically"""		3859977	0					
ANR	3861470	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	3					
ANR	3861471	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	0					
ANR	3861472	Callee	ZSTR_VAL		3859977	0					
ANR	3861473	Identifier	ZSTR_VAL		3859977	0					
ANR	3861474	ArgumentList	fcc -> calling_scope -> name		3859977	1					
ANR	3861475	Argument	fcc -> calling_scope -> name		3859977	0					
ANR	3861476	PtrMemberAccess	fcc -> calling_scope -> name		3859977	0					
ANR	3861477	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861478	Identifier	fcc		3859977	0					
ANR	3861479	Identifier	calling_scope		3859977	1					
ANR	3861480	Identifier	name		3859977	1					
ANR	3861481	Argument	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	4					
ANR	3861482	CallExpression	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	0					
ANR	3861483	Callee	ZSTR_VAL		3859977	0					
ANR	3861484	Identifier	ZSTR_VAL		3859977	0					
ANR	3861485	ArgumentList	fcc -> function_handler -> common . function_name		3859977	1					
ANR	3861486	Argument	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861487	MemberAccess	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861488	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861489	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861490	Identifier	fcc		3859977	0					
ANR	3861491	Identifier	function_handler		3859977	1					
ANR	3861492	Identifier	common		3859977	1					
ANR	3861493	Identifier	function_name		3859977	1					
ANR	3861494	Argument	verb		3859977	5					
ANR	3861495	Identifier	verb		3859977	0					
ANR	3861496	IfStatement	if ( severity != E_DEPRECATED )		3859977	1					
ANR	3861497	Condition	severity != E_DEPRECATED	3119:9:92977:93000	3859977	0	True				
ANR	3861498	EqualityExpression	severity != E_DEPRECATED		3859977	0		!=			
ANR	3861499	Identifier	severity		3859977	0					
ANR	3861500	Identifier	E_DEPRECATED		3859977	1					
ANR	3861501	CompoundStatement		216:35:7672:7672	3859977	1					
ANR	3861502	ExpressionStatement	retval = 0	3120:6:93011:93021	3859977	0	True				
ANR	3861503	AssignmentExpression	retval = 0		3859977	0		=			
ANR	3861504	Identifier	retval		3859977	0					
ANR	3861505	PrimaryExpression	0		3859977	1					
ANR	3861506	ElseStatement	else		3859977	0					
ANR	3861507	IfStatement	if ( retval )		3859977	0					
ANR	3861508	Condition	retval	3122:15:93045:93050	3859977	0	True				
ANR	3861509	Identifier	retval		3859977	0					
ANR	3861510	CompoundStatement		219:23:7722:7722	3859977	1					
ANR	3861511	IfStatement	if ( severity == E_ERROR )		3859977	0					
ANR	3861512	Condition	severity == E_ERROR	3123:9:93064:93082	3859977	0	True				
ANR	3861513	EqualityExpression	severity == E_ERROR		3859977	0		==			
ANR	3861514	Identifier	severity		3859977	0					
ANR	3861515	Identifier	E_ERROR		3859977	1					
ANR	3861516	CompoundStatement		220:30:7754:7754	3859977	1					
ANR	3861517	ExpressionStatement	"zend_throw_error ( NULL , ""Non-static method %s::%s() %s be called statically"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) , verb )"	3124:6:93093:93266	3859977	0	True				
ANR	3861518	CallExpression	"zend_throw_error ( NULL , ""Non-static method %s::%s() %s be called statically"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) , verb )"		3859977	0					
ANR	3861519	Callee	zend_throw_error		3859977	0					
ANR	3861520	Identifier	zend_throw_error		3859977	0					
ANR	3861521	ArgumentList	NULL		3859977	1					
ANR	3861522	Argument	NULL		3859977	0					
ANR	3861523	Identifier	NULL		3859977	0					
ANR	3861524	Argument	"""Non-static method %s::%s() %s be called statically"""		3859977	1					
ANR	3861525	PrimaryExpression	"""Non-static method %s::%s() %s be called statically"""		3859977	0					
ANR	3861526	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	2					
ANR	3861527	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	0					
ANR	3861528	Callee	ZSTR_VAL		3859977	0					
ANR	3861529	Identifier	ZSTR_VAL		3859977	0					
ANR	3861530	ArgumentList	fcc -> calling_scope -> name		3859977	1					
ANR	3861531	Argument	fcc -> calling_scope -> name		3859977	0					
ANR	3861532	PtrMemberAccess	fcc -> calling_scope -> name		3859977	0					
ANR	3861533	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861534	Identifier	fcc		3859977	0					
ANR	3861535	Identifier	calling_scope		3859977	1					
ANR	3861536	Identifier	name		3859977	1					
ANR	3861537	Argument	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	3					
ANR	3861538	CallExpression	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	0					
ANR	3861539	Callee	ZSTR_VAL		3859977	0					
ANR	3861540	Identifier	ZSTR_VAL		3859977	0					
ANR	3861541	ArgumentList	fcc -> function_handler -> common . function_name		3859977	1					
ANR	3861542	Argument	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861543	MemberAccess	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861544	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861545	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861546	Identifier	fcc		3859977	0					
ANR	3861547	Identifier	function_handler		3859977	1					
ANR	3861548	Identifier	common		3859977	1					
ANR	3861549	Identifier	function_name		3859977	1					
ANR	3861550	Argument	verb		3859977	4					
ANR	3861551	Identifier	verb		3859977	0					
ANR	3861552	ElseStatement	else		3859977	0					
ANR	3861553	CompoundStatement		222:12:7949:7949	3859977	0					
ANR	3861554	ExpressionStatement	"zend_error ( severity , ""Non-static method %s::%s() %s be called statically"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) , verb )"	3126:6:93288:93459	3859977	0	True				
ANR	3861555	CallExpression	"zend_error ( severity , ""Non-static method %s::%s() %s be called statically"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) , verb )"		3859977	0					
ANR	3861556	Callee	zend_error		3859977	0					
ANR	3861557	Identifier	zend_error		3859977	0					
ANR	3861558	ArgumentList	severity		3859977	1					
ANR	3861559	Argument	severity		3859977	0					
ANR	3861560	Identifier	severity		3859977	0					
ANR	3861561	Argument	"""Non-static method %s::%s() %s be called statically"""		3859977	1					
ANR	3861562	PrimaryExpression	"""Non-static method %s::%s() %s be called statically"""		3859977	0					
ANR	3861563	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	2					
ANR	3861564	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	0					
ANR	3861565	Callee	ZSTR_VAL		3859977	0					
ANR	3861566	Identifier	ZSTR_VAL		3859977	0					
ANR	3861567	ArgumentList	fcc -> calling_scope -> name		3859977	1					
ANR	3861568	Argument	fcc -> calling_scope -> name		3859977	0					
ANR	3861569	PtrMemberAccess	fcc -> calling_scope -> name		3859977	0					
ANR	3861570	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861571	Identifier	fcc		3859977	0					
ANR	3861572	Identifier	calling_scope		3859977	1					
ANR	3861573	Identifier	name		3859977	1					
ANR	3861574	Argument	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	3					
ANR	3861575	CallExpression	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	0					
ANR	3861576	Callee	ZSTR_VAL		3859977	0					
ANR	3861577	Identifier	ZSTR_VAL		3859977	0					
ANR	3861578	ArgumentList	fcc -> function_handler -> common . function_name		3859977	1					
ANR	3861579	Argument	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861580	MemberAccess	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861581	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861582	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861583	Identifier	fcc		3859977	0					
ANR	3861584	Identifier	function_handler		3859977	1					
ANR	3861585	Identifier	common		3859977	1					
ANR	3861586	Identifier	function_name		3859977	1					
ANR	3861587	Argument	verb		3859977	4					
ANR	3861588	Identifier	verb		3859977	0					
ANR	3861589	IfStatement	if ( retval && ( check_flags & IS_CALLABLE_CHECK_NO_ACCESS ) == 0 )		3859977	1					
ANR	3861590	Condition	retval && ( check_flags & IS_CALLABLE_CHECK_NO_ACCESS ) == 0	3130:7:93486:93543	3859977	0	True				
ANR	3861591	AndExpression	retval && ( check_flags & IS_CALLABLE_CHECK_NO_ACCESS ) == 0		3859977	0		&&			
ANR	3861592	Identifier	retval		3859977	0					
ANR	3861593	EqualityExpression	( check_flags & IS_CALLABLE_CHECK_NO_ACCESS ) == 0		3859977	1		==			
ANR	3861594	BitAndExpression	check_flags & IS_CALLABLE_CHECK_NO_ACCESS		3859977	0		&			
ANR	3861595	Identifier	check_flags		3859977	0					
ANR	3861596	Identifier	IS_CALLABLE_CHECK_NO_ACCESS		3859977	1					
ANR	3861597	PrimaryExpression	0		3859977	1					
ANR	3861598	CompoundStatement		227:67:8215:8215	3859977	1					
ANR	3861599	IfStatement	if ( fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_PRIVATE )		3859977	0					
ANR	3861600	Condition	fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_PRIVATE	3131:8:93556:93614	3859977	0	True				
ANR	3861601	BitAndExpression	fcc -> function_handler -> op_array . fn_flags & ZEND_ACC_PRIVATE		3859977	0		&			
ANR	3861602	MemberAccess	fcc -> function_handler -> op_array . fn_flags		3859977	0					
ANR	3861603	PtrMemberAccess	fcc -> function_handler -> op_array		3859977	0					
ANR	3861604	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861605	Identifier	fcc		3859977	0					
ANR	3861606	Identifier	function_handler		3859977	1					
ANR	3861607	Identifier	op_array		3859977	1					
ANR	3861608	Identifier	fn_flags		3859977	1					
ANR	3861609	Identifier	ZEND_ACC_PRIVATE		3859977	1					
ANR	3861610	CompoundStatement		228:69:8286:8286	3859977	1					
ANR	3861611	IfStatement	"if ( ! zend_check_private ( fcc -> function_handler , fcc -> object ? fcc -> object -> ce : EG ( scope ) , lmname ) )"		3859977	0					
ANR	3861612	Condition	"! zend_check_private ( fcc -> function_handler , fcc -> object ? fcc -> object -> ce : EG ( scope ) , lmname )"	3132:9:93628:93720	3859977	0	True				
ANR	3861613	UnaryOperationExpression	"! zend_check_private ( fcc -> function_handler , fcc -> object ? fcc -> object -> ce : EG ( scope ) , lmname )"		3859977	0					
ANR	3861614	UnaryOperator	!		3859977	0					
ANR	3861615	CallExpression	"zend_check_private ( fcc -> function_handler , fcc -> object ? fcc -> object -> ce : EG ( scope ) , lmname )"		3859977	1					
ANR	3861616	Callee	zend_check_private		3859977	0					
ANR	3861617	Identifier	zend_check_private		3859977	0					
ANR	3861618	ArgumentList	fcc -> function_handler		3859977	1					
ANR	3861619	Argument	fcc -> function_handler		3859977	0					
ANR	3861620	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861621	Identifier	fcc		3859977	0					
ANR	3861622	Identifier	function_handler		3859977	1					
ANR	3861623	Argument	fcc -> object ? fcc -> object -> ce : EG ( scope )		3859977	1					
ANR	3861624	ConditionalExpression	fcc -> object ? fcc -> object -> ce : EG ( scope )		3859977	0					
ANR	3861625	Condition	fcc -> object		3859977	0					
ANR	3861626	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3861627	Identifier	fcc		3859977	0					
ANR	3861628	Identifier	object		3859977	1					
ANR	3861629	PtrMemberAccess	fcc -> object -> ce		3859977	1					
ANR	3861630	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3861631	Identifier	fcc		3859977	0					
ANR	3861632	Identifier	object		3859977	1					
ANR	3861633	Identifier	ce		3859977	1					
ANR	3861634	CallExpression	EG ( scope )		3859977	2					
ANR	3861635	Callee	EG		3859977	0					
ANR	3861636	Identifier	EG		3859977	0					
ANR	3861637	ArgumentList	scope		3859977	1					
ANR	3861638	Argument	scope		3859977	0					
ANR	3861639	Identifier	scope		3859977	0					
ANR	3861640	Argument	lmname		3859977	2					
ANR	3861641	Identifier	lmname		3859977	0					
ANR	3861642	CompoundStatement		229:104:8392:8392	3859977	1					
ANR	3861643	IfStatement	if ( error )		3859977	0					
ANR	3861644	Condition	error	3133:10:93735:93739	3859977	0	True				
ANR	3861645	Identifier	error		3859977	0					
ANR	3861646	CompoundStatement		230:17:8411:8411	3859977	1					
ANR	3861647	IfStatement	if ( * error )		3859977	0					
ANR	3861648	Condition	* error	3134:11:93755:93760	3859977	0	True				
ANR	3861649	UnaryOperationExpression	* error		3859977	0					
ANR	3861650	UnaryOperator	*		3859977	0					
ANR	3861651	Identifier	error		3859977	1					
ANR	3861652	CompoundStatement		231:19:8432:8432	3859977	1					
ANR	3861653	ExpressionStatement	efree ( * error )	3135:8:93773:93786	3859977	0	True				
ANR	3861654	CallExpression	efree ( * error )		3859977	0					
ANR	3861655	Callee	efree		3859977	0					
ANR	3861656	Identifier	efree		3859977	0					
ANR	3861657	ArgumentList	* error		3859977	1					
ANR	3861658	Argument	* error		3859977	0					
ANR	3861659	UnaryOperationExpression	* error		3859977	0					
ANR	3861660	UnaryOperator	*		3859977	0					
ANR	3861661	Identifier	error		3859977	1					
ANR	3861662	ExpressionStatement	"zend_spprintf ( error , 0 , ""cannot access private method %s::%s()"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) )"	3137:7:93804:93959	3859977	1	True				
ANR	3861663	CallExpression	"zend_spprintf ( error , 0 , ""cannot access private method %s::%s()"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) )"		3859977	0					
ANR	3861664	Callee	zend_spprintf		3859977	0					
ANR	3861665	Identifier	zend_spprintf		3859977	0					
ANR	3861666	ArgumentList	error		3859977	1					
ANR	3861667	Argument	error		3859977	0					
ANR	3861668	Identifier	error		3859977	0					
ANR	3861669	Argument	0		3859977	1					
ANR	3861670	PrimaryExpression	0		3859977	0					
ANR	3861671	Argument	"""cannot access private method %s::%s()"""		3859977	2					
ANR	3861672	PrimaryExpression	"""cannot access private method %s::%s()"""		3859977	0					
ANR	3861673	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	3					
ANR	3861674	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	0					
ANR	3861675	Callee	ZSTR_VAL		3859977	0					
ANR	3861676	Identifier	ZSTR_VAL		3859977	0					
ANR	3861677	ArgumentList	fcc -> calling_scope -> name		3859977	1					
ANR	3861678	Argument	fcc -> calling_scope -> name		3859977	0					
ANR	3861679	PtrMemberAccess	fcc -> calling_scope -> name		3859977	0					
ANR	3861680	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861681	Identifier	fcc		3859977	0					
ANR	3861682	Identifier	calling_scope		3859977	1					
ANR	3861683	Identifier	name		3859977	1					
ANR	3861684	Argument	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	4					
ANR	3861685	CallExpression	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	0					
ANR	3861686	Callee	ZSTR_VAL		3859977	0					
ANR	3861687	Identifier	ZSTR_VAL		3859977	0					
ANR	3861688	ArgumentList	fcc -> function_handler -> common . function_name		3859977	1					
ANR	3861689	Argument	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861690	MemberAccess	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861691	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861692	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861693	Identifier	fcc		3859977	0					
ANR	3861694	Identifier	function_handler		3859977	1					
ANR	3861695	Identifier	common		3859977	1					
ANR	3861696	Identifier	function_name		3859977	1					
ANR	3861697	ExpressionStatement	retval = 0	3139:6:93975:93985	3859977	1	True				
ANR	3861698	AssignmentExpression	retval = 0		3859977	0		=			
ANR	3861699	Identifier	retval		3859977	0					
ANR	3861700	PrimaryExpression	0		3859977	1					
ANR	3861701	ElseStatement	else		3859977	0					
ANR	3861702	IfStatement	if ( ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_PROTECTED ) )		3859977	0					
ANR	3861703	Condition	fcc -> function_handler -> common . fn_flags & ZEND_ACC_PROTECTED	3141:15:94009:94069	3859977	0	True				
ANR	3861704	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_PROTECTED		3859977	0		&			
ANR	3861705	MemberAccess	fcc -> function_handler -> common . fn_flags		3859977	0					
ANR	3861706	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861707	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861708	Identifier	fcc		3859977	0					
ANR	3861709	Identifier	function_handler		3859977	1					
ANR	3861710	Identifier	common		3859977	1					
ANR	3861711	Identifier	fn_flags		3859977	1					
ANR	3861712	Identifier	ZEND_ACC_PROTECTED		3859977	1					
ANR	3861713	CompoundStatement		238:78:8741:8741	3859977	1					
ANR	3861714	IfStatement	"if ( ! zend_check_protected ( fcc -> function_handler -> common . scope , EG ( scope ) ) )"		3859977	0					
ANR	3861715	Condition	"! zend_check_protected ( fcc -> function_handler -> common . scope , EG ( scope ) )"	3142:9:94083:94151	3859977	0	True				
ANR	3861716	UnaryOperationExpression	"! zend_check_protected ( fcc -> function_handler -> common . scope , EG ( scope ) )"		3859977	0					
ANR	3861717	UnaryOperator	!		3859977	0					
ANR	3861718	CallExpression	"zend_check_protected ( fcc -> function_handler -> common . scope , EG ( scope ) )"		3859977	1					
ANR	3861719	Callee	zend_check_protected		3859977	0					
ANR	3861720	Identifier	zend_check_protected		3859977	0					
ANR	3861721	ArgumentList	fcc -> function_handler -> common . scope		3859977	1					
ANR	3861722	Argument	fcc -> function_handler -> common . scope		3859977	0					
ANR	3861723	MemberAccess	fcc -> function_handler -> common . scope		3859977	0					
ANR	3861724	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861725	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861726	Identifier	fcc		3859977	0					
ANR	3861727	Identifier	function_handler		3859977	1					
ANR	3861728	Identifier	common		3859977	1					
ANR	3861729	Identifier	scope		3859977	1					
ANR	3861730	Argument	EG ( scope )		3859977	1					
ANR	3861731	CallExpression	EG ( scope )		3859977	0					
ANR	3861732	Callee	EG		3859977	0					
ANR	3861733	Identifier	EG		3859977	0					
ANR	3861734	ArgumentList	scope		3859977	1					
ANR	3861735	Argument	scope		3859977	0					
ANR	3861736	Identifier	scope		3859977	0					
ANR	3861737	CompoundStatement		239:80:8823:8823	3859977	1					
ANR	3861738	IfStatement	if ( error )		3859977	0					
ANR	3861739	Condition	error	3143:10:94166:94170	3859977	0	True				
ANR	3861740	Identifier	error		3859977	0					
ANR	3861741	CompoundStatement		240:17:8842:8842	3859977	1					
ANR	3861742	IfStatement	if ( * error )		3859977	0					
ANR	3861743	Condition	* error	3144:11:94186:94191	3859977	0	True				
ANR	3861744	UnaryOperationExpression	* error		3859977	0					
ANR	3861745	UnaryOperator	*		3859977	0					
ANR	3861746	Identifier	error		3859977	1					
ANR	3861747	CompoundStatement		241:19:8863:8863	3859977	1					
ANR	3861748	ExpressionStatement	efree ( * error )	3145:8:94204:94217	3859977	0	True				
ANR	3861749	CallExpression	efree ( * error )		3859977	0					
ANR	3861750	Callee	efree		3859977	0					
ANR	3861751	Identifier	efree		3859977	0					
ANR	3861752	ArgumentList	* error		3859977	1					
ANR	3861753	Argument	* error		3859977	0					
ANR	3861754	UnaryOperationExpression	* error		3859977	0					
ANR	3861755	UnaryOperator	*		3859977	0					
ANR	3861756	Identifier	error		3859977	1					
ANR	3861757	ExpressionStatement	"zend_spprintf ( error , 0 , ""cannot access protected method %s::%s()"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) )"	3147:7:94235:94392	3859977	1	True				
ANR	3861758	CallExpression	"zend_spprintf ( error , 0 , ""cannot access protected method %s::%s()"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( fcc -> function_handler -> common . function_name ) )"		3859977	0					
ANR	3861759	Callee	zend_spprintf		3859977	0					
ANR	3861760	Identifier	zend_spprintf		3859977	0					
ANR	3861761	ArgumentList	error		3859977	1					
ANR	3861762	Argument	error		3859977	0					
ANR	3861763	Identifier	error		3859977	0					
ANR	3861764	Argument	0		3859977	1					
ANR	3861765	PrimaryExpression	0		3859977	0					
ANR	3861766	Argument	"""cannot access protected method %s::%s()"""		3859977	2					
ANR	3861767	PrimaryExpression	"""cannot access protected method %s::%s()"""		3859977	0					
ANR	3861768	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	3					
ANR	3861769	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	0					
ANR	3861770	Callee	ZSTR_VAL		3859977	0					
ANR	3861771	Identifier	ZSTR_VAL		3859977	0					
ANR	3861772	ArgumentList	fcc -> calling_scope -> name		3859977	1					
ANR	3861773	Argument	fcc -> calling_scope -> name		3859977	0					
ANR	3861774	PtrMemberAccess	fcc -> calling_scope -> name		3859977	0					
ANR	3861775	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861776	Identifier	fcc		3859977	0					
ANR	3861777	Identifier	calling_scope		3859977	1					
ANR	3861778	Identifier	name		3859977	1					
ANR	3861779	Argument	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	4					
ANR	3861780	CallExpression	ZSTR_VAL ( fcc -> function_handler -> common . function_name )		3859977	0					
ANR	3861781	Callee	ZSTR_VAL		3859977	0					
ANR	3861782	Identifier	ZSTR_VAL		3859977	0					
ANR	3861783	ArgumentList	fcc -> function_handler -> common . function_name		3859977	1					
ANR	3861784	Argument	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861785	MemberAccess	fcc -> function_handler -> common . function_name		3859977	0					
ANR	3861786	PtrMemberAccess	fcc -> function_handler -> common		3859977	0					
ANR	3861787	PtrMemberAccess	fcc -> function_handler		3859977	0					
ANR	3861788	Identifier	fcc		3859977	0					
ANR	3861789	Identifier	function_handler		3859977	1					
ANR	3861790	Identifier	common		3859977	1					
ANR	3861791	Identifier	function_name		3859977	1					
ANR	3861792	ExpressionStatement	retval = 0	3149:6:94408:94418	3859977	1	True				
ANR	3861793	AssignmentExpression	retval = 0		3859977	0		=			
ANR	3861794	Identifier	retval		3859977	0					
ANR	3861795	PrimaryExpression	0		3859977	1					
ANR	3861796	ElseStatement	else		3859977	0					
ANR	3861797	IfStatement	if ( error && ! ( check_flags & IS_CALLABLE_CHECK_SILENT ) )		3859977	0					
ANR	3861798	Condition	error && ! ( check_flags & IS_CALLABLE_CHECK_SILENT )	3154:12:94454:94503	3859977	0	True				
ANR	3861799	AndExpression	error && ! ( check_flags & IS_CALLABLE_CHECK_SILENT )		3859977	0		&&			
ANR	3861800	Identifier	error		3859977	0					
ANR	3861801	UnaryOperationExpression	! ( check_flags & IS_CALLABLE_CHECK_SILENT )		3859977	1					
ANR	3861802	UnaryOperator	!		3859977	0					
ANR	3861803	BitAndExpression	check_flags & IS_CALLABLE_CHECK_SILENT		3859977	1		&			
ANR	3861804	Identifier	check_flags		3859977	0					
ANR	3861805	Identifier	IS_CALLABLE_CHECK_SILENT		3859977	1					
ANR	3861806	CompoundStatement		251:64:9175:9175	3859977	1					
ANR	3861807	IfStatement	if ( fcc -> calling_scope )		3859977	0					
ANR	3861808	Condition	fcc -> calling_scope	3155:6:94514:94531	3859977	0	True				
ANR	3861809	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861810	Identifier	fcc		3859977	0					
ANR	3861811	Identifier	calling_scope		3859977	1					
ANR	3861812	CompoundStatement		252:26:9203:9203	3859977	1					
ANR	3861813	IfStatement	if ( error )		3859977	0					
ANR	3861814	Condition	error	3156:7:94543:94547	3859977	0	True				
ANR	3861815	Identifier	error		3859977	0					
ANR	3861816	ExpressionStatement	"zend_spprintf ( error , 0 , ""class '%s' does not have a method '%s'"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( mname ) )"	3156:14:94550:94668	3859977	1	True				
ANR	3861817	CallExpression	"zend_spprintf ( error , 0 , ""class '%s' does not have a method '%s'"" , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_VAL ( mname ) )"		3859977	0					
ANR	3861818	Callee	zend_spprintf		3859977	0					
ANR	3861819	Identifier	zend_spprintf		3859977	0					
ANR	3861820	ArgumentList	error		3859977	1					
ANR	3861821	Argument	error		3859977	0					
ANR	3861822	Identifier	error		3859977	0					
ANR	3861823	Argument	0		3859977	1					
ANR	3861824	PrimaryExpression	0		3859977	0					
ANR	3861825	Argument	"""class '%s' does not have a method '%s'"""		3859977	2					
ANR	3861826	PrimaryExpression	"""class '%s' does not have a method '%s'"""		3859977	0					
ANR	3861827	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	3					
ANR	3861828	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3859977	0					
ANR	3861829	Callee	ZSTR_VAL		3859977	0					
ANR	3861830	Identifier	ZSTR_VAL		3859977	0					
ANR	3861831	ArgumentList	fcc -> calling_scope -> name		3859977	1					
ANR	3861832	Argument	fcc -> calling_scope -> name		3859977	0					
ANR	3861833	PtrMemberAccess	fcc -> calling_scope -> name		3859977	0					
ANR	3861834	PtrMemberAccess	fcc -> calling_scope		3859977	0					
ANR	3861835	Identifier	fcc		3859977	0					
ANR	3861836	Identifier	calling_scope		3859977	1					
ANR	3861837	Identifier	name		3859977	1					
ANR	3861838	Argument	ZSTR_VAL ( mname )		3859977	4					
ANR	3861839	CallExpression	ZSTR_VAL ( mname )		3859977	0					
ANR	3861840	Callee	ZSTR_VAL		3859977	0					
ANR	3861841	Identifier	ZSTR_VAL		3859977	0					
ANR	3861842	ArgumentList	mname		3859977	1					
ANR	3861843	Argument	mname		3859977	0					
ANR	3861844	Identifier	mname		3859977	0					
ANR	3861845	ElseStatement	else		3859977	0					
ANR	3861846	CompoundStatement		254:9:9348:9348	3859977	0					
ANR	3861847	IfStatement	if ( error )		3859977	0					
ANR	3861848	Condition	error	3158:7:94688:94692	3859977	0	True				
ANR	3861849	Identifier	error		3859977	0					
ANR	3861850	ExpressionStatement	"zend_spprintf ( error , 0 , ""function '%s' does not exist"" , ZSTR_VAL ( mname ) )"	3158:14:94695:94767	3859977	1	True				
ANR	3861851	CallExpression	"zend_spprintf ( error , 0 , ""function '%s' does not exist"" , ZSTR_VAL ( mname ) )"		3859977	0					
ANR	3861852	Callee	zend_spprintf		3859977	0					
ANR	3861853	Identifier	zend_spprintf		3859977	0					
ANR	3861854	ArgumentList	error		3859977	1					
ANR	3861855	Argument	error		3859977	0					
ANR	3861856	Identifier	error		3859977	0					
ANR	3861857	Argument	0		3859977	1					
ANR	3861858	PrimaryExpression	0		3859977	0					
ANR	3861859	Argument	"""function '%s' does not exist"""		3859977	2					
ANR	3861860	PrimaryExpression	"""function '%s' does not exist"""		3859977	0					
ANR	3861861	Argument	ZSTR_VAL ( mname )		3859977	3					
ANR	3861862	CallExpression	ZSTR_VAL ( mname )		3859977	0					
ANR	3861863	Callee	ZSTR_VAL		3859977	0					
ANR	3861864	Identifier	ZSTR_VAL		3859977	0					
ANR	3861865	ArgumentList	mname		3859977	1					
ANR	3861866	Argument	mname		3859977	0					
ANR	3861867	Identifier	mname		3859977	0					
ANR	3861868	ExpressionStatement	zend_string_release ( lmname )	3161:1:94777:94804	3859977	21	True				
ANR	3861869	CallExpression	zend_string_release ( lmname )		3859977	0					
ANR	3861870	Callee	zend_string_release		3859977	0					
ANR	3861871	Identifier	zend_string_release		3859977	0					
ANR	3861872	ArgumentList	lmname		3859977	1					
ANR	3861873	Argument	lmname		3859977	0					
ANR	3861874	Identifier	lmname		3859977	0					
ANR	3861875	ExpressionStatement	zend_string_release ( mname )	3162:1:94807:94833	3859977	22	True				
ANR	3861876	CallExpression	zend_string_release ( mname )		3859977	0					
ANR	3861877	Callee	zend_string_release		3859977	0					
ANR	3861878	Identifier	zend_string_release		3859977	0					
ANR	3861879	ArgumentList	mname		3859977	1					
ANR	3861880	Argument	mname		3859977	0					
ANR	3861881	Identifier	mname		3859977	0					
ANR	3861882	IfStatement	if ( fcc -> object )		3859977	23					
ANR	3861883	Condition	fcc -> object	3164:5:94841:94851	3859977	0	True				
ANR	3861884	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3861885	Identifier	fcc		3859977	0					
ANR	3861886	Identifier	object		3859977	1					
ANR	3861887	CompoundStatement		261:18:9523:9523	3859977	1					
ANR	3861888	ExpressionStatement	fcc -> called_scope = fcc -> object -> ce	3165:2:94858:94893	3859977	0	True				
ANR	3861889	AssignmentExpression	fcc -> called_scope = fcc -> object -> ce		3859977	0		=			
ANR	3861890	PtrMemberAccess	fcc -> called_scope		3859977	0					
ANR	3861891	Identifier	fcc		3859977	0					
ANR	3861892	Identifier	called_scope		3859977	1					
ANR	3861893	PtrMemberAccess	fcc -> object -> ce		3859977	1					
ANR	3861894	PtrMemberAccess	fcc -> object		3859977	0					
ANR	3861895	Identifier	fcc		3859977	0					
ANR	3861896	Identifier	object		3859977	1					
ANR	3861897	Identifier	ce		3859977	1					
ANR	3861898	IfStatement	if ( retval )		3859977	24					
ANR	3861899	Condition	retval	3167:5:94903:94908	3859977	0	True				
ANR	3861900	Identifier	retval		3859977	0					
ANR	3861901	CompoundStatement		264:13:9580:9580	3859977	1					
ANR	3861902	ExpressionStatement	fcc -> initialized = 1	3168:2:94915:94935	3859977	0	True				
ANR	3861903	AssignmentExpression	fcc -> initialized = 1		3859977	0		=			
ANR	3861904	PtrMemberAccess	fcc -> initialized		3859977	0					
ANR	3861905	Identifier	fcc		3859977	0					
ANR	3861906	Identifier	initialized		3859977	1					
ANR	3861907	PrimaryExpression	1		3859977	1					
ANR	3861908	ReturnStatement	return retval ;	3170:1:94941:94954	3859977	25	True				
ANR	3861909	Identifier	retval		3859977	0					
ANR	3861910	ReturnType	static int		3859977	1					
ANR	3861911	Identifier	zend_is_callable_check_func		3859977	2					
ANR	3861912	ParameterList	"int check_flags , zval * callable , zend_fcall_info_cache * fcc , int strict_class , char * * error"		3859977	3					
ANR	3861913	Parameter	int check_flags	2903:39:85227:85241	3859977	0	True				
ANR	3861914	ParameterType	int		3859977	0					
ANR	3861915	Identifier	check_flags		3859977	1					
ANR	3861916	Parameter	zval * callable	2903:56:85244:85257	3859977	1	True				
ANR	3861917	ParameterType	zval *		3859977	0					
ANR	3861918	Identifier	callable		3859977	1					
ANR	3861919	Parameter	zend_fcall_info_cache * fcc	2903:72:85260:85285	3859977	2	True				
ANR	3861920	ParameterType	zend_fcall_info_cache *		3859977	0					
ANR	3861921	Identifier	fcc		3859977	1					
ANR	3861922	Parameter	int strict_class	2903:100:85288:85303	3859977	3	True				
ANR	3861923	ParameterType	int		3859977	0					
ANR	3861924	Identifier	strict_class		3859977	1					
ANR	3861925	Parameter	char * * error	2903:118:85306:85317	3859977	4	True				
ANR	3861926	ParameterType	char * *		3859977	0					
ANR	3861927	Identifier	error		3859977	1					
ANR	3861928	CFGEntryNode	ENTRY		3859977		True				
ANR	3861929	CFGExitNode	EXIT		3859977		True				
ANR	3861930	Symbol	zend_string_equals_literal		3859977						
ANR	3861931	Symbol	callable		3859977						
ANR	3861932	Symbol	& fcc -> calling_scope -> function_table		3859977						
ANR	3861933	Symbol	fcc -> function_handler -> common . scope		3859977						
ANR	3861934	Symbol	* fcc		3859977						
ANR	3861935	Symbol	priv_fbc -> common . fn_flags		3859977						
ANR	3861936	Symbol	zend_string_init		3859977						
ANR	3861937	Symbol	check_flags		3859977						
ANR	3861938	Symbol	* * fcc		3859977						
ANR	3861939	Symbol	call_via_handler		3859977						
ANR	3861940	Symbol	verb		3859977						
ANR	3861941	Symbol	& ce_org -> function_table		3859977						
ANR	3861942	Symbol	* fcc -> object		3859977						
ANR	3861943	Symbol	fcc -> calling_scope -> __callstatic		3859977						
ANR	3861944	Symbol	ce_org -> name		3859977						
ANR	3861945	Symbol	ce_org		3859977						
ANR	3861946	Symbol	fcc -> function_handler -> op_array		3859977						
ANR	3861947	Symbol	fcc -> calling_scope -> name		3859977						
ANR	3861948	Symbol	fcc -> called_scope		3859977						
ANR	3861949	Symbol	& EG ( scope ) -> function_table		3859977						
ANR	3861950	Symbol	function_table		3859977						
ANR	3861951	Symbol	fcc -> function_handler -> common		3859977						
ANR	3861952	Symbol	fcc -> object -> ce		3859977						
ANR	3861953	Symbol	object		3859977						
ANR	3861954	Symbol	fcc		3859977						
ANR	3861955	Symbol	mname		3859977						
ANR	3861956	Symbol	* object		3859977						
ANR	3861957	Symbol	* fcc -> object -> handlers		3859977						
ANR	3861958	Symbol	* ce_org		3859977						
ANR	3861959	Symbol	ZEND_ACC_PROTECTED		3859977						
ANR	3861960	Symbol	Z_STRLEN_P		3859977						
ANR	3861961	Symbol	* ( colon - 1 )		3859977						
ANR	3861962	Symbol	* Z_STRVAL_P		3859977						
ANR	3861963	Symbol	zend_memrchr		3859977						
ANR	3861964	Symbol	priv_fbc -> common . scope		3859977						
ANR	3861965	Symbol	last_scope		3859977						
ANR	3861966	Symbol	fcc -> calling_scope -> __call		3859977						
ANR	3861967	Symbol	fcc -> function_handler -> common . function_name		3859977						
ANR	3861968	Symbol	fcc -> object -> handlers		3859977						
ANR	3861969	Symbol	ZEND_ACC_ABSTRACT		3859977						
ANR	3861970	Symbol	E_ERROR		3859977						
ANR	3861971	Symbol	IS_CALLABLE_CHECK_IS_STATIC		3859977						
ANR	3861972	Symbol	priv_fbc		3859977						
ANR	3861973	Symbol	ce_org -> __call		3859977						
ANR	3861974	Symbol	IS_CALLABLE_CHECK_SILENT		3859977						
ANR	3861975	Symbol	zend_check_protected		3859977						
ANR	3861976	Symbol	* * fcc -> object		3859977						
ANR	3861977	Symbol	fcc -> calling_scope -> constructor		3859977						
ANR	3861978	Symbol	object -> ce		3859977						
ANR	3861979	Symbol	ZEND_CONSTRUCTOR_FUNC_NAME		3859977						
ANR	3861980	Symbol	current_execute_data		3859977						
ANR	3861981	Symbol	fcc -> calling_scope		3859977						
ANR	3861982	Symbol	zend_string_tolower		3859977						
ANR	3861983	Symbol	& fcc -> object		3859977						
ANR	3861984	Symbol	& strict_class		3859977						
ANR	3861985	Symbol	ZEND_OVERLOADED_FUNCTION		3859977						
ANR	3861986	Symbol	zend_hash_find_ptr		3859977						
ANR	3861987	Symbol	EG		3859977						
ANR	3861988	Symbol	NULL		3859977						
ANR	3861989	Symbol	zend_std_get_static_method		3859977						
ANR	3861990	Symbol	fcc -> calling_scope -> get_static_method		3859977						
ANR	3861991	Symbol	* fcc -> calling_scope		3859977						
ANR	3861992	Symbol	ZEND_ACC_CALL_VIA_TRAMPOLINE		3859977						
ANR	3861993	Symbol	retval		3859977						
ANR	3861994	Symbol	zend_check_private		3859977						
ANR	3861995	Symbol	* priv_fbc		3859977						
ANR	3861996	Symbol	E_DEPRECATED		3859977						
ANR	3861997	Symbol	ftable		3859977						
ANR	3861998	Symbol	* error		3859977						
ANR	3861999	Symbol	mlen		3859977						
ANR	3862000	Symbol	Z_STR_P		3859977						
ANR	3862001	Symbol	fcc -> function_handler		3859977						
ANR	3862002	Symbol	ZEND_ACC_ALLOW_STATIC		3859977						
ANR	3862003	Symbol	fcc -> function_handler -> common . fn_flags		3859977						
ANR	3862004	Symbol	use_heap		3859977						
ANR	3862005	Symbol	instanceof_function		3859977						
ANR	3862006	Symbol	IS_CALLABLE_CHECK_NO_ACCESS		3859977						
ANR	3862007	Symbol	* * * fcc		3859977						
ANR	3862008	Symbol	fcc -> function_handler -> op_array . fn_flags		3859977						
ANR	3862009	Symbol	cname		3859977						
ANR	3862010	Symbol	ZEND_ACC_CHANGED		3859977						
ANR	3862011	Symbol	error		3859977						
ANR	3862012	Symbol	zend_get_this_object		3859977						
ANR	3862013	Symbol	UNEXPECTED		3859977						
ANR	3862014	Symbol	scope		3859977						
ANR	3862015	Symbol	priv_fbc -> common		3859977						
ANR	3862016	Symbol	ZEND_ACC_STATIC		3859977						
ANR	3862017	Symbol	fcc -> initialized		3859977						
ANR	3862018	Symbol	strict_class		3859977						
ANR	3862019	Symbol	severity		3859977						
ANR	3862020	Symbol	* fcc -> function_handler		3859977						
ANR	3862021	Symbol	fcc -> function_handler -> type		3859977						
ANR	3862022	Symbol	zend_get_call_trampoline_func		3859977						
ANR	3862023	Symbol	fcc -> object		3859977						
ANR	3862024	Symbol	Z_STRVAL_P		3859977						
ANR	3862025	Symbol	* colon		3859977						
ANR	3862026	Symbol	zend_is_callable_check_class		3859977						
ANR	3862027	Symbol	ZSTR_VAL		3859977						
ANR	3862028	Symbol	ZEND_ACC_PRIVATE		3859977						
ANR	3862029	Symbol	lmname		3859977						
ANR	3862030	Symbol	colon		3859977						
ANR	3862031	Symbol	ZSTR_LEN		3859977						
ANR	3862032	Symbol	fcc -> object -> handlers -> get_method		3859977						
ANR	3862033	Symbol	clen		3859977						
ANR	3862034	Symbol	EXPECTED		3859977						
ANR	3862035	Function	zend_is_callable_ex	3174:0:94969:101463							
ANR	3862036	FunctionDef	"zend_is_callable_ex (zval * callable , zend_object * object , uint check_flags , zend_string * * callable_name , zend_fcall_info_cache * fcc , char * * error)"		3862035	0					
ANR	3862037	CompoundStatement		3175:0:95144:101463	3862035	0					
ANR	3862038	IdentifierDeclStatement	zend_bool ret ;	3176:1:95147:95160	3862035	0	True				
ANR	3862039	IdentifierDecl	ret		3862035	0					
ANR	3862040	IdentifierDeclType	zend_bool		3862035	0					
ANR	3862041	Identifier	ret		3862035	1					
ANR	3862042	IdentifierDeclStatement	zend_fcall_info_cache fcc_local ;	3177:1:95163:95194	3862035	1	True				
ANR	3862043	IdentifierDecl	fcc_local		3862035	0					
ANR	3862044	IdentifierDeclType	zend_fcall_info_cache		3862035	0					
ANR	3862045	Identifier	fcc_local		3862035	1					
ANR	3862046	IfStatement	if ( callable_name )		3862035	2					
ANR	3862047	Condition	callable_name	3179:5:95202:95214	3862035	0	True				
ANR	3862048	Identifier	callable_name		3862035	0					
ANR	3862049	CompoundStatement		5:20:72:72	3862035	1					
ANR	3862050	ExpressionStatement	* callable_name = NULL	3180:2:95221:95242	3862035	0	True				
ANR	3862051	AssignmentExpression	* callable_name = NULL		3862035	0		=			
ANR	3862052	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3862053	UnaryOperator	*		3862035	0					
ANR	3862054	Identifier	callable_name		3862035	1					
ANR	3862055	Identifier	NULL		3862035	1					
ANR	3862056	IfStatement	if ( fcc == NULL )		3862035	3					
ANR	3862057	Condition	fcc == NULL	3182:5:95252:95262	3862035	0	True				
ANR	3862058	EqualityExpression	fcc == NULL		3862035	0		==			
ANR	3862059	Identifier	fcc		3862035	0					
ANR	3862060	Identifier	NULL		3862035	1					
ANR	3862061	CompoundStatement		8:18:120:120	3862035	1					
ANR	3862062	ExpressionStatement	fcc = & fcc_local	3183:2:95269:95285	3862035	0	True				
ANR	3862063	AssignmentExpression	fcc = & fcc_local		3862035	0		=			
ANR	3862064	Identifier	fcc		3862035	0					
ANR	3862065	UnaryOperationExpression	& fcc_local		3862035	1					
ANR	3862066	UnaryOperator	&		3862035	0					
ANR	3862067	Identifier	fcc_local		3862035	1					
ANR	3862068	IfStatement	if ( error )		3862035	4					
ANR	3862069	Condition	error	3185:5:95295:95299	3862035	0	True				
ANR	3862070	Identifier	error		3862035	0					
ANR	3862071	CompoundStatement		11:12:157:157	3862035	1					
ANR	3862072	ExpressionStatement	* error = NULL	3186:2:95306:95319	3862035	0	True				
ANR	3862073	AssignmentExpression	* error = NULL		3862035	0		=			
ANR	3862074	UnaryOperationExpression	* error		3862035	0					
ANR	3862075	UnaryOperator	*		3862035	0					
ANR	3862076	Identifier	error		3862035	1					
ANR	3862077	Identifier	NULL		3862035	1					
ANR	3862078	ExpressionStatement	fcc -> initialized = 0	3189:1:95326:95346	3862035	5	True				
ANR	3862079	AssignmentExpression	fcc -> initialized = 0		3862035	0		=			
ANR	3862080	PtrMemberAccess	fcc -> initialized		3862035	0					
ANR	3862081	Identifier	fcc		3862035	0					
ANR	3862082	Identifier	initialized		3862035	1					
ANR	3862083	PrimaryExpression	0		3862035	1					
ANR	3862084	ExpressionStatement	fcc -> calling_scope = NULL	3190:1:95349:95374	3862035	6	True				
ANR	3862085	AssignmentExpression	fcc -> calling_scope = NULL		3862035	0		=			
ANR	3862086	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862087	Identifier	fcc		3862035	0					
ANR	3862088	Identifier	calling_scope		3862035	1					
ANR	3862089	Identifier	NULL		3862035	1					
ANR	3862090	ExpressionStatement	fcc -> called_scope = NULL	3191:1:95377:95401	3862035	7	True				
ANR	3862091	AssignmentExpression	fcc -> called_scope = NULL		3862035	0		=			
ANR	3862092	PtrMemberAccess	fcc -> called_scope		3862035	0					
ANR	3862093	Identifier	fcc		3862035	0					
ANR	3862094	Identifier	called_scope		3862035	1					
ANR	3862095	Identifier	NULL		3862035	1					
ANR	3862096	ExpressionStatement	fcc -> function_handler = NULL	3192:1:95404:95432	3862035	8	True				
ANR	3862097	AssignmentExpression	fcc -> function_handler = NULL		3862035	0		=			
ANR	3862098	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862099	Identifier	fcc		3862035	0					
ANR	3862100	Identifier	function_handler		3862035	1					
ANR	3862101	Identifier	NULL		3862035	1					
ANR	3862102	ExpressionStatement	fcc -> object = NULL	3193:1:95435:95453	3862035	9	True				
ANR	3862103	AssignmentExpression	fcc -> object = NULL		3862035	0		=			
ANR	3862104	PtrMemberAccess	fcc -> object		3862035	0					
ANR	3862105	Identifier	fcc		3862035	0					
ANR	3862106	Identifier	object		3862035	1					
ANR	3862107	Identifier	NULL		3862035	1					
ANR	3862108	IfStatement	if ( object && ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ object -> handle ] ) ) )		3862035	10					
ANR	3862109	Condition	object && ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ object -> handle ] ) )	3195:5:95461:95583	3862035	0	True				
ANR	3862110	AndExpression	object && ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ object -> handle ] ) )		3862035	0		&&			
ANR	3862111	Identifier	object		3862035	0					
ANR	3862112	OrExpression	! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ object -> handle ] )		3862035	1		||			
ANR	3862113	UnaryOperationExpression	! EG ( objects_store ) . object_buckets		3862035	0					
ANR	3862114	UnaryOperator	!		3862035	0					
ANR	3862115	MemberAccess	EG ( objects_store ) . object_buckets		3862035	1					
ANR	3862116	CallExpression	EG ( objects_store )		3862035	0					
ANR	3862117	Callee	EG		3862035	0					
ANR	3862118	Identifier	EG		3862035	0					
ANR	3862119	ArgumentList	objects_store		3862035	1					
ANR	3862120	Argument	objects_store		3862035	0					
ANR	3862121	Identifier	objects_store		3862035	0					
ANR	3862122	Identifier	object_buckets		3862035	1					
ANR	3862123	UnaryOperationExpression	! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ object -> handle ] )		3862035	1					
ANR	3862124	UnaryOperator	!		3862035	0					
ANR	3862125	CallExpression	IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ object -> handle ] )		3862035	1					
ANR	3862126	Callee	IS_OBJ_VALID		3862035	0					
ANR	3862127	Identifier	IS_OBJ_VALID		3862035	0					
ANR	3862128	ArgumentList	EG ( objects_store ) . object_buckets [ object -> handle ]		3862035	1					
ANR	3862129	Argument	EG ( objects_store ) . object_buckets [ object -> handle ]		3862035	0					
ANR	3862130	ArrayIndexing	EG ( objects_store ) . object_buckets [ object -> handle ]		3862035	0					
ANR	3862131	MemberAccess	EG ( objects_store ) . object_buckets		3862035	0					
ANR	3862132	CallExpression	EG ( objects_store )		3862035	0					
ANR	3862133	Callee	EG		3862035	0					
ANR	3862134	Identifier	EG		3862035	0					
ANR	3862135	ArgumentList	objects_store		3862035	1					
ANR	3862136	Argument	objects_store		3862035	0					
ANR	3862137	Identifier	objects_store		3862035	0					
ANR	3862138	Identifier	object_buckets		3862035	1					
ANR	3862139	PtrMemberAccess	object -> handle		3862035	1					
ANR	3862140	Identifier	object		3862035	0					
ANR	3862141	Identifier	handle		3862035	1					
ANR	3862142	CompoundStatement		23:72:441:441	3862035	1					
ANR	3862143	ReturnStatement	return 0 ;	3198:2:95590:95598	3862035	0	True				
ANR	3862144	PrimaryExpression	0		3862035	0					
ANR	3862145	Label	again :	3201:0:95604:95609	3862035	11	True				
ANR	3862146	Identifier	again		3862035	0					
ANR	3862147	SwitchStatement	switch ( Z_TYPE_P ( callable ) )		3862035	12					
ANR	3862148	Condition	Z_TYPE_P ( callable )	3202:9:95620:95637	3862035	0	True				
ANR	3862149	CallExpression	Z_TYPE_P ( callable )		3862035	0					
ANR	3862150	Callee	Z_TYPE_P		3862035	0					
ANR	3862151	Identifier	Z_TYPE_P		3862035	0					
ANR	3862152	ArgumentList	callable		3862035	1					
ANR	3862153	Argument	callable		3862035	0					
ANR	3862154	Identifier	callable		3862035	0					
ANR	3862155	CompoundStatement		28:29:495:495	3862035	1					
ANR	3862156	Label	case IS_STRING :	3203:2:95644:95658	3862035	0	True				
ANR	3862157	Identifier	IS_STRING		3862035	0					
ANR	3862158	IfStatement	if ( object )		3862035	1					
ANR	3862159	Condition	object	3204:7:95667:95672	3862035	0	True				
ANR	3862160	Identifier	object		3862035	0					
ANR	3862161	CompoundStatement		30:15:530:530	3862035	1					
ANR	3862162	ExpressionStatement	fcc -> object = object	3205:4:95681:95701	3862035	0	True				
ANR	3862163	AssignmentExpression	fcc -> object = object		3862035	0		=			
ANR	3862164	PtrMemberAccess	fcc -> object		3862035	0					
ANR	3862165	Identifier	fcc		3862035	0					
ANR	3862166	Identifier	object		3862035	1					
ANR	3862167	Identifier	object		3862035	1					
ANR	3862168	ExpressionStatement	fcc -> calling_scope = object -> ce	3206:4:95707:95738	3862035	1	True				
ANR	3862169	AssignmentExpression	fcc -> calling_scope = object -> ce		3862035	0		=			
ANR	3862170	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862171	Identifier	fcc		3862035	0					
ANR	3862172	Identifier	calling_scope		3862035	1					
ANR	3862173	PtrMemberAccess	object -> ce		3862035	1					
ANR	3862174	Identifier	object		3862035	0					
ANR	3862175	Identifier	ce		3862035	1					
ANR	3862176	IfStatement	if ( callable_name )		3862035	2					
ANR	3862177	Condition	callable_name	3207:8:95748:95760	3862035	0	True				
ANR	3862178	Identifier	callable_name		3862035	0					
ANR	3862179	CompoundStatement		34:5:625:634	3862035	1					
ANR	3862180	IdentifierDeclStatement	char * ptr ;	3208:5:95770:95779	3862035	0	True				
ANR	3862181	IdentifierDecl	* ptr		3862035	0					
ANR	3862182	IdentifierDeclType	char *		3862035	0					
ANR	3862183	Identifier	ptr		3862035	1					
ANR	3862184	ExpressionStatement	"* callable_name = zend_string_alloc ( ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( callable ) + sizeof ( ""::"" ) - 1 , 0 )"	3210:5:95787:95902	3862035	1	True				
ANR	3862185	AssignmentExpression	"* callable_name = zend_string_alloc ( ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( callable ) + sizeof ( ""::"" ) - 1 , 0 )"		3862035	0		=			
ANR	3862186	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3862187	UnaryOperator	*		3862035	0					
ANR	3862188	Identifier	callable_name		3862035	1					
ANR	3862189	CallExpression	"zend_string_alloc ( ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( callable ) + sizeof ( ""::"" ) - 1 , 0 )"		3862035	1					
ANR	3862190	Callee	zend_string_alloc		3862035	0					
ANR	3862191	Identifier	zend_string_alloc		3862035	0					
ANR	3862192	ArgumentList	"ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( callable ) + sizeof ( ""::"" ) - 1"		3862035	1					
ANR	3862193	Argument	"ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( callable ) + sizeof ( ""::"" ) - 1"		3862035	0					
ANR	3862194	AdditiveExpression	"ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( callable ) + sizeof ( ""::"" ) - 1"		3862035	0		+			
ANR	3862195	CallExpression	ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	0					
ANR	3862196	Callee	ZSTR_LEN		3862035	0					
ANR	3862197	Identifier	ZSTR_LEN		3862035	0					
ANR	3862198	ArgumentList	fcc -> calling_scope -> name		3862035	1					
ANR	3862199	Argument	fcc -> calling_scope -> name		3862035	0					
ANR	3862200	PtrMemberAccess	fcc -> calling_scope -> name		3862035	0					
ANR	3862201	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862202	Identifier	fcc		3862035	0					
ANR	3862203	Identifier	calling_scope		3862035	1					
ANR	3862204	Identifier	name		3862035	1					
ANR	3862205	AdditiveExpression	"Z_STRLEN_P ( callable ) + sizeof ( ""::"" ) - 1"		3862035	1		+			
ANR	3862206	CallExpression	Z_STRLEN_P ( callable )		3862035	0					
ANR	3862207	Callee	Z_STRLEN_P		3862035	0					
ANR	3862208	Identifier	Z_STRLEN_P		3862035	0					
ANR	3862209	ArgumentList	callable		3862035	1					
ANR	3862210	Argument	callable		3862035	0					
ANR	3862211	Identifier	callable		3862035	0					
ANR	3862212	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3862035	1		-			
ANR	3862213	SizeofExpression	"sizeof ( ""::"" )"		3862035	0					
ANR	3862214	Sizeof	sizeof		3862035	0					
ANR	3862215	PrimaryExpression	"""::"""		3862035	1					
ANR	3862216	PrimaryExpression	1		3862035	1					
ANR	3862217	Argument	0		3862035	1					
ANR	3862218	PrimaryExpression	0		3862035	0					
ANR	3862219	ExpressionStatement	ptr = ZSTR_VAL ( * callable_name )	3211:5:95909:95939	3862035	2	True				
ANR	3862220	AssignmentExpression	ptr = ZSTR_VAL ( * callable_name )		3862035	0		=			
ANR	3862221	Identifier	ptr		3862035	0					
ANR	3862222	CallExpression	ZSTR_VAL ( * callable_name )		3862035	1					
ANR	3862223	Callee	ZSTR_VAL		3862035	0					
ANR	3862224	Identifier	ZSTR_VAL		3862035	0					
ANR	3862225	ArgumentList	* callable_name		3862035	1					
ANR	3862226	Argument	* callable_name		3862035	0					
ANR	3862227	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3862228	UnaryOperator	*		3862035	0					
ANR	3862229	Identifier	callable_name		3862035	1					
ANR	3862230	ExpressionStatement	"memcpy ( ptr , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_LEN ( fcc -> calling_scope -> name ) )"	3212:5:95946:96029	3862035	3	True				
ANR	3862231	CallExpression	"memcpy ( ptr , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_LEN ( fcc -> calling_scope -> name ) )"		3862035	0					
ANR	3862232	Callee	memcpy		3862035	0					
ANR	3862233	Identifier	memcpy		3862035	0					
ANR	3862234	ArgumentList	ptr		3862035	1					
ANR	3862235	Argument	ptr		3862035	0					
ANR	3862236	Identifier	ptr		3862035	0					
ANR	3862237	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3862035	1					
ANR	3862238	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3862035	0					
ANR	3862239	Callee	ZSTR_VAL		3862035	0					
ANR	3862240	Identifier	ZSTR_VAL		3862035	0					
ANR	3862241	ArgumentList	fcc -> calling_scope -> name		3862035	1					
ANR	3862242	Argument	fcc -> calling_scope -> name		3862035	0					
ANR	3862243	PtrMemberAccess	fcc -> calling_scope -> name		3862035	0					
ANR	3862244	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862245	Identifier	fcc		3862035	0					
ANR	3862246	Identifier	calling_scope		3862035	1					
ANR	3862247	Identifier	name		3862035	1					
ANR	3862248	Argument	ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	2					
ANR	3862249	CallExpression	ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	0					
ANR	3862250	Callee	ZSTR_LEN		3862035	0					
ANR	3862251	Identifier	ZSTR_LEN		3862035	0					
ANR	3862252	ArgumentList	fcc -> calling_scope -> name		3862035	1					
ANR	3862253	Argument	fcc -> calling_scope -> name		3862035	0					
ANR	3862254	PtrMemberAccess	fcc -> calling_scope -> name		3862035	0					
ANR	3862255	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862256	Identifier	fcc		3862035	0					
ANR	3862257	Identifier	calling_scope		3862035	1					
ANR	3862258	Identifier	name		3862035	1					
ANR	3862259	ExpressionStatement	ptr += ZSTR_LEN ( fcc -> calling_scope -> name )	3213:5:96036:96077	3862035	4	True				
ANR	3862260	AssignmentExpression	ptr += ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	0		+=			
ANR	3862261	Identifier	ptr		3862035	0					
ANR	3862262	CallExpression	ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	1					
ANR	3862263	Callee	ZSTR_LEN		3862035	0					
ANR	3862264	Identifier	ZSTR_LEN		3862035	0					
ANR	3862265	ArgumentList	fcc -> calling_scope -> name		3862035	1					
ANR	3862266	Argument	fcc -> calling_scope -> name		3862035	0					
ANR	3862267	PtrMemberAccess	fcc -> calling_scope -> name		3862035	0					
ANR	3862268	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862269	Identifier	fcc		3862035	0					
ANR	3862270	Identifier	calling_scope		3862035	1					
ANR	3862271	Identifier	name		3862035	1					
ANR	3862272	ExpressionStatement	"memcpy ( ptr , ""::"" , sizeof ( ""::"" ) - 1 )"	3214:5:96084:96119	3862035	5	True				
ANR	3862273	CallExpression	"memcpy ( ptr , ""::"" , sizeof ( ""::"" ) - 1 )"		3862035	0					
ANR	3862274	Callee	memcpy		3862035	0					
ANR	3862275	Identifier	memcpy		3862035	0					
ANR	3862276	ArgumentList	ptr		3862035	1					
ANR	3862277	Argument	ptr		3862035	0					
ANR	3862278	Identifier	ptr		3862035	0					
ANR	3862279	Argument	"""::"""		3862035	1					
ANR	3862280	PrimaryExpression	"""::"""		3862035	0					
ANR	3862281	Argument	"sizeof ( ""::"" ) - 1"		3862035	2					
ANR	3862282	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3862035	0		-			
ANR	3862283	SizeofExpression	"sizeof ( ""::"" )"		3862035	0					
ANR	3862284	Sizeof	sizeof		3862035	0					
ANR	3862285	PrimaryExpression	"""::"""		3862035	1					
ANR	3862286	PrimaryExpression	1		3862035	1					
ANR	3862287	ExpressionStatement	"ptr += sizeof ( ""::"" ) - 1"	3215:5:96126:96149	3862035	6	True				
ANR	3862288	AssignmentExpression	"ptr += sizeof ( ""::"" ) - 1"		3862035	0		+=			
ANR	3862289	Identifier	ptr		3862035	0					
ANR	3862290	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3862035	1		-			
ANR	3862291	SizeofExpression	"sizeof ( ""::"" )"		3862035	0					
ANR	3862292	Sizeof	sizeof		3862035	0					
ANR	3862293	PrimaryExpression	"""::"""		3862035	1					
ANR	3862294	PrimaryExpression	1		3862035	1					
ANR	3862295	ExpressionStatement	"memcpy ( ptr , Z_STRVAL_P ( callable ) , Z_STRLEN_P ( callable ) + 1 )"	3216:5:96156:96215	3862035	7	True				
ANR	3862296	CallExpression	"memcpy ( ptr , Z_STRVAL_P ( callable ) , Z_STRLEN_P ( callable ) + 1 )"		3862035	0					
ANR	3862297	Callee	memcpy		3862035	0					
ANR	3862298	Identifier	memcpy		3862035	0					
ANR	3862299	ArgumentList	ptr		3862035	1					
ANR	3862300	Argument	ptr		3862035	0					
ANR	3862301	Identifier	ptr		3862035	0					
ANR	3862302	Argument	Z_STRVAL_P ( callable )		3862035	1					
ANR	3862303	CallExpression	Z_STRVAL_P ( callable )		3862035	0					
ANR	3862304	Callee	Z_STRVAL_P		3862035	0					
ANR	3862305	Identifier	Z_STRVAL_P		3862035	0					
ANR	3862306	ArgumentList	callable		3862035	1					
ANR	3862307	Argument	callable		3862035	0					
ANR	3862308	Identifier	callable		3862035	0					
ANR	3862309	Argument	Z_STRLEN_P ( callable ) + 1		3862035	2					
ANR	3862310	AdditiveExpression	Z_STRLEN_P ( callable ) + 1		3862035	0		+			
ANR	3862311	CallExpression	Z_STRLEN_P ( callable )		3862035	0					
ANR	3862312	Callee	Z_STRLEN_P		3862035	0					
ANR	3862313	Identifier	Z_STRLEN_P		3862035	0					
ANR	3862314	ArgumentList	callable		3862035	1					
ANR	3862315	Argument	callable		3862035	0					
ANR	3862316	Identifier	callable		3862035	0					
ANR	3862317	PrimaryExpression	1		3862035	1					
ANR	3862318	ElseStatement	else		3862035	0					
ANR	3862319	IfStatement	if ( callable_name )		3862035	0					
ANR	3862320	Condition	callable_name	3218:14:96237:96249	3862035	0	True				
ANR	3862321	Identifier	callable_name		3862035	0					
ANR	3862322	CompoundStatement		44:29:1107:1107	3862035	1					
ANR	3862323	ExpressionStatement	* callable_name = zend_string_copy ( Z_STR_P ( callable ) )	3219:4:96258:96310	3862035	0	True				
ANR	3862324	AssignmentExpression	* callable_name = zend_string_copy ( Z_STR_P ( callable ) )		3862035	0		=			
ANR	3862325	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3862326	UnaryOperator	*		3862035	0					
ANR	3862327	Identifier	callable_name		3862035	1					
ANR	3862328	CallExpression	zend_string_copy ( Z_STR_P ( callable ) )		3862035	1					
ANR	3862329	Callee	zend_string_copy		3862035	0					
ANR	3862330	Identifier	zend_string_copy		3862035	0					
ANR	3862331	ArgumentList	Z_STR_P ( callable )		3862035	1					
ANR	3862332	Argument	Z_STR_P ( callable )		3862035	0					
ANR	3862333	CallExpression	Z_STR_P ( callable )		3862035	0					
ANR	3862334	Callee	Z_STR_P		3862035	0					
ANR	3862335	Identifier	Z_STR_P		3862035	0					
ANR	3862336	ArgumentList	callable		3862035	1					
ANR	3862337	Argument	callable		3862035	0					
ANR	3862338	Identifier	callable		3862035	0					
ANR	3862339	IfStatement	if ( check_flags & IS_CALLABLE_CHECK_SYNTAX_ONLY )		3862035	2					
ANR	3862340	Condition	check_flags & IS_CALLABLE_CHECK_SYNTAX_ONLY	3221:7:96324:96366	3862035	0	True				
ANR	3862341	BitAndExpression	check_flags & IS_CALLABLE_CHECK_SYNTAX_ONLY		3862035	0		&			
ANR	3862342	Identifier	check_flags		3862035	0					
ANR	3862343	Identifier	IS_CALLABLE_CHECK_SYNTAX_ONLY		3862035	1					
ANR	3862344	CompoundStatement		47:52:1224:1224	3862035	1					
ANR	3862345	ExpressionStatement	fcc -> called_scope = fcc -> calling_scope	3222:4:96375:96413	3862035	0	True				
ANR	3862346	AssignmentExpression	fcc -> called_scope = fcc -> calling_scope		3862035	0		=			
ANR	3862347	PtrMemberAccess	fcc -> called_scope		3862035	0					
ANR	3862348	Identifier	fcc		3862035	0					
ANR	3862349	Identifier	called_scope		3862035	1					
ANR	3862350	PtrMemberAccess	fcc -> calling_scope		3862035	1					
ANR	3862351	Identifier	fcc		3862035	0					
ANR	3862352	Identifier	calling_scope		3862035	1					
ANR	3862353	ReturnStatement	return 1 ;	3223:4:96419:96427	3862035	1	True				
ANR	3862354	PrimaryExpression	1		3862035	0					
ANR	3862355	ExpressionStatement	"ret = zend_is_callable_check_func ( check_flags , callable , fcc , 0 , error )"	3226:3:96438:96509	3862035	3	True				
ANR	3862356	AssignmentExpression	"ret = zend_is_callable_check_func ( check_flags , callable , fcc , 0 , error )"		3862035	0		=			
ANR	3862357	Identifier	ret		3862035	0					
ANR	3862358	CallExpression	"zend_is_callable_check_func ( check_flags , callable , fcc , 0 , error )"		3862035	1					
ANR	3862359	Callee	zend_is_callable_check_func		3862035	0					
ANR	3862360	Identifier	zend_is_callable_check_func		3862035	0					
ANR	3862361	ArgumentList	check_flags		3862035	1					
ANR	3862362	Argument	check_flags		3862035	0					
ANR	3862363	Identifier	check_flags		3862035	0					
ANR	3862364	Argument	callable		3862035	1					
ANR	3862365	Identifier	callable		3862035	0					
ANR	3862366	Argument	fcc		3862035	2					
ANR	3862367	Identifier	fcc		3862035	0					
ANR	3862368	Argument	0		3862035	3					
ANR	3862369	PrimaryExpression	0		3862035	0					
ANR	3862370	Argument	error		3862035	4					
ANR	3862371	Identifier	error		3862035	0					
ANR	3862372	IfStatement	if ( fcc == & fcc_local && fcc -> function_handler && ( ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION ) )		3862035	4					
ANR	3862373	Condition	fcc == & fcc_local && fcc -> function_handler && ( ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION )	3227:7:96518:96791	3862035	0	True				
ANR	3862374	AndExpression	fcc == & fcc_local && fcc -> function_handler && ( ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION )		3862035	0		&&			
ANR	3862375	EqualityExpression	fcc == & fcc_local		3862035	0		==			
ANR	3862376	Identifier	fcc		3862035	0					
ANR	3862377	UnaryOperationExpression	& fcc_local		3862035	1					
ANR	3862378	UnaryOperator	&		3862035	0					
ANR	3862379	Identifier	fcc_local		3862035	1					
ANR	3862380	AndExpression	fcc -> function_handler && ( ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION )		3862035	1		&&			
ANR	3862381	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862382	Identifier	fcc		3862035	0					
ANR	3862383	Identifier	function_handler		3862035	1					
ANR	3862384	OrExpression	( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION		3862035	1		||			
ANR	3862385	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3862035	0		&			
ANR	3862386	MemberAccess	fcc -> function_handler -> common . fn_flags		3862035	0					
ANR	3862387	PtrMemberAccess	fcc -> function_handler -> common		3862035	0					
ANR	3862388	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862389	Identifier	fcc		3862035	0					
ANR	3862390	Identifier	function_handler		3862035	1					
ANR	3862391	Identifier	common		3862035	1					
ANR	3862392	Identifier	fn_flags		3862035	1					
ANR	3862393	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3862035	1					
ANR	3862394	OrExpression	fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION		3862035	1		||			
ANR	3862395	EqualityExpression	fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY		3862035	0		==			
ANR	3862396	PtrMemberAccess	fcc -> function_handler -> type		3862035	0					
ANR	3862397	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862398	Identifier	fcc		3862035	0					
ANR	3862399	Identifier	function_handler		3862035	1					
ANR	3862400	Identifier	type		3862035	1					
ANR	3862401	Identifier	ZEND_OVERLOADED_FUNCTION_TEMPORARY		3862035	1					
ANR	3862402	EqualityExpression	fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION		3862035	1		==			
ANR	3862403	PtrMemberAccess	fcc -> function_handler -> type		3862035	0					
ANR	3862404	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862405	Identifier	fcc		3862035	0					
ANR	3862406	Identifier	function_handler		3862035	1					
ANR	3862407	Identifier	type		3862035	1					
ANR	3862408	Identifier	ZEND_OVERLOADED_FUNCTION		3862035	1					
ANR	3862409	CompoundStatement		57:66:1649:1649	3862035	1					
ANR	3862410	IfStatement	if ( fcc -> function_handler -> type != ZEND_OVERLOADED_FUNCTION )		3862035	0					
ANR	3862411	Condition	fcc -> function_handler -> type != ZEND_OVERLOADED_FUNCTION	3232:8:96804:96858	3862035	0	True				
ANR	3862412	EqualityExpression	fcc -> function_handler -> type != ZEND_OVERLOADED_FUNCTION		3862035	0		!=			
ANR	3862413	PtrMemberAccess	fcc -> function_handler -> type		3862035	0					
ANR	3862414	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862415	Identifier	fcc		3862035	0					
ANR	3862416	Identifier	function_handler		3862035	1					
ANR	3862417	Identifier	type		3862035	1					
ANR	3862418	Identifier	ZEND_OVERLOADED_FUNCTION		3862035	1					
ANR	3862419	CompoundStatement		58:65:1716:1716	3862035	1					
ANR	3862420	ExpressionStatement	zend_string_release ( fcc -> function_handler -> common . function_name )	3233:5:96868:96932	3862035	0	True				
ANR	3862421	CallExpression	zend_string_release ( fcc -> function_handler -> common . function_name )		3862035	0					
ANR	3862422	Callee	zend_string_release		3862035	0					
ANR	3862423	Identifier	zend_string_release		3862035	0					
ANR	3862424	ArgumentList	fcc -> function_handler -> common . function_name		3862035	1					
ANR	3862425	Argument	fcc -> function_handler -> common . function_name		3862035	0					
ANR	3862426	MemberAccess	fcc -> function_handler -> common . function_name		3862035	0					
ANR	3862427	PtrMemberAccess	fcc -> function_handler -> common		3862035	0					
ANR	3862428	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862429	Identifier	fcc		3862035	0					
ANR	3862430	Identifier	function_handler		3862035	1					
ANR	3862431	Identifier	common		3862035	1					
ANR	3862432	Identifier	function_name		3862035	1					
ANR	3862433	ExpressionStatement	zend_free_trampoline ( fcc -> function_handler )	3235:4:96944:96987	3862035	1	True				
ANR	3862434	CallExpression	zend_free_trampoline ( fcc -> function_handler )		3862035	0					
ANR	3862435	Callee	zend_free_trampoline		3862035	0					
ANR	3862436	Identifier	zend_free_trampoline		3862035	0					
ANR	3862437	ArgumentList	fcc -> function_handler		3862035	1					
ANR	3862438	Argument	fcc -> function_handler		3862035	0					
ANR	3862439	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862440	Identifier	fcc		3862035	0					
ANR	3862441	Identifier	function_handler		3862035	1					
ANR	3862442	ReturnStatement	return ret ;	3237:3:96997:97007	3862035	5	True				
ANR	3862443	Identifier	ret		3862035	0					
ANR	3862444	Label	case IS_ARRAY :	3239:2:97012:97025	3862035	6	True				
ANR	3862445	Identifier	IS_ARRAY		3862035	0					
ANR	3862446	CompoundStatement		69:4:1938:1958	3862035	7					
ANR	3862447	IdentifierDeclStatement	zval * method = NULL ;	3241:4:97036:97055	3862035	0	True				
ANR	3862448	IdentifierDecl	* method = NULL		3862035	0					
ANR	3862449	IdentifierDeclType	zval *		3862035	0					
ANR	3862450	Identifier	method		3862035	1					
ANR	3862451	AssignmentExpression	* method = NULL		3862035	2		=			
ANR	3862452	Identifier	NULL		3862035	0					
ANR	3862453	Identifier	NULL		3862035	1					
ANR	3862454	IdentifierDeclStatement	zval * obj = NULL ;	3242:4:97061:97077	3862035	1	True				
ANR	3862455	IdentifierDecl	* obj = NULL		3862035	0					
ANR	3862456	IdentifierDeclType	zval *		3862035	0					
ANR	3862457	Identifier	obj		3862035	1					
ANR	3862458	AssignmentExpression	* obj = NULL		3862035	2		=			
ANR	3862459	Identifier	NULL		3862035	0					
ANR	3862460	Identifier	NULL		3862035	1					
ANR	3862461	IdentifierDeclStatement	int strict_class = 0 ;	3243:4:97083:97103	3862035	2	True				
ANR	3862462	IdentifierDecl	strict_class = 0		3862035	0					
ANR	3862463	IdentifierDeclType	int		3862035	0					
ANR	3862464	Identifier	strict_class		3862035	1					
ANR	3862465	AssignmentExpression	strict_class = 0		3862035	2		=			
ANR	3862466	Identifier	strict_class		3862035	0					
ANR	3862467	PrimaryExpression	0		3862035	1					
ANR	3862468	IfStatement	if ( zend_hash_num_elements ( Z_ARRVAL_P ( callable ) ) == 2 )		3862035	3					
ANR	3862469	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( callable ) ) == 2	3245:8:97114:97162	3862035	0	True				
ANR	3862470	EqualityExpression	zend_hash_num_elements ( Z_ARRVAL_P ( callable ) ) == 2		3862035	0		==			
ANR	3862471	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( callable ) )		3862035	0					
ANR	3862472	Callee	zend_hash_num_elements		3862035	0					
ANR	3862473	Identifier	zend_hash_num_elements		3862035	0					
ANR	3862474	ArgumentList	Z_ARRVAL_P ( callable )		3862035	1					
ANR	3862475	Argument	Z_ARRVAL_P ( callable )		3862035	0					
ANR	3862476	CallExpression	Z_ARRVAL_P ( callable )		3862035	0					
ANR	3862477	Callee	Z_ARRVAL_P		3862035	0					
ANR	3862478	Identifier	Z_ARRVAL_P		3862035	0					
ANR	3862479	ArgumentList	callable		3862035	1					
ANR	3862480	Argument	callable		3862035	0					
ANR	3862481	Identifier	callable		3862035	0					
ANR	3862482	PrimaryExpression	2		3862035	1					
ANR	3862483	CompoundStatement		71:59:2020:2020	3862035	1					
ANR	3862484	ExpressionStatement	"obj = zend_hash_index_find ( Z_ARRVAL_P ( callable ) , 0 )"	3246:5:97172:97223	3862035	0	True				
ANR	3862485	AssignmentExpression	"obj = zend_hash_index_find ( Z_ARRVAL_P ( callable ) , 0 )"		3862035	0		=			
ANR	3862486	Identifier	obj		3862035	0					
ANR	3862487	CallExpression	"zend_hash_index_find ( Z_ARRVAL_P ( callable ) , 0 )"		3862035	1					
ANR	3862488	Callee	zend_hash_index_find		3862035	0					
ANR	3862489	Identifier	zend_hash_index_find		3862035	0					
ANR	3862490	ArgumentList	Z_ARRVAL_P ( callable )		3862035	1					
ANR	3862491	Argument	Z_ARRVAL_P ( callable )		3862035	0					
ANR	3862492	CallExpression	Z_ARRVAL_P ( callable )		3862035	0					
ANR	3862493	Callee	Z_ARRVAL_P		3862035	0					
ANR	3862494	Identifier	Z_ARRVAL_P		3862035	0					
ANR	3862495	ArgumentList	callable		3862035	1					
ANR	3862496	Argument	callable		3862035	0					
ANR	3862497	Identifier	callable		3862035	0					
ANR	3862498	Argument	0		3862035	1					
ANR	3862499	PrimaryExpression	0		3862035	0					
ANR	3862500	ExpressionStatement	"method = zend_hash_index_find ( Z_ARRVAL_P ( callable ) , 1 )"	3247:5:97230:97284	3862035	1	True				
ANR	3862501	AssignmentExpression	"method = zend_hash_index_find ( Z_ARRVAL_P ( callable ) , 1 )"		3862035	0		=			
ANR	3862502	Identifier	method		3862035	0					
ANR	3862503	CallExpression	"zend_hash_index_find ( Z_ARRVAL_P ( callable ) , 1 )"		3862035	1					
ANR	3862504	Callee	zend_hash_index_find		3862035	0					
ANR	3862505	Identifier	zend_hash_index_find		3862035	0					
ANR	3862506	ArgumentList	Z_ARRVAL_P ( callable )		3862035	1					
ANR	3862507	Argument	Z_ARRVAL_P ( callable )		3862035	0					
ANR	3862508	CallExpression	Z_ARRVAL_P ( callable )		3862035	0					
ANR	3862509	Callee	Z_ARRVAL_P		3862035	0					
ANR	3862510	Identifier	Z_ARRVAL_P		3862035	0					
ANR	3862511	ArgumentList	callable		3862035	1					
ANR	3862512	Argument	callable		3862035	0					
ANR	3862513	Identifier	callable		3862035	0					
ANR	3862514	Argument	1		3862035	1					
ANR	3862515	PrimaryExpression	1		3862035	0					
ANR	3862516	DoStatement	do		3862035	4					
ANR	3862517	CompoundStatement		76:7:2155:2155	3862035	0					
ANR	3862518	IfStatement	if ( obj == NULL || method == NULL )		3862035	0					
ANR	3862519	Condition	obj == NULL || method == NULL	3251:9:97311:97339	3862035	0	True				
ANR	3862520	OrExpression	obj == NULL || method == NULL		3862035	0		||			
ANR	3862521	EqualityExpression	obj == NULL		3862035	0		==			
ANR	3862522	Identifier	obj		3862035	0					
ANR	3862523	Identifier	NULL		3862035	1					
ANR	3862524	EqualityExpression	method == NULL		3862035	1		==			
ANR	3862525	Identifier	method		3862035	0					
ANR	3862526	Identifier	NULL		3862035	1					
ANR	3862527	CompoundStatement		77:40:2197:2197	3862035	1					
ANR	3862528	BreakStatement	break ;	3252:6:97350:97355	3862035	0	True				
ANR	3862529	ExpressionStatement	ZVAL_DEREF ( method )	3255:5:97370:97388	3862035	1	True				
ANR	3862530	CallExpression	ZVAL_DEREF ( method )		3862035	0					
ANR	3862531	Callee	ZVAL_DEREF		3862035	0					
ANR	3862532	Identifier	ZVAL_DEREF		3862035	0					
ANR	3862533	ArgumentList	method		3862035	1					
ANR	3862534	Argument	method		3862035	0					
ANR	3862535	Identifier	method		3862035	0					
ANR	3862536	IfStatement	if ( Z_TYPE_P ( method ) != IS_STRING )		3862035	2					
ANR	3862537	Condition	Z_TYPE_P ( method ) != IS_STRING	3256:9:97399:97427	3862035	0	True				
ANR	3862538	EqualityExpression	Z_TYPE_P ( method ) != IS_STRING		3862035	0		!=			
ANR	3862539	CallExpression	Z_TYPE_P ( method )		3862035	0					
ANR	3862540	Callee	Z_TYPE_P		3862035	0					
ANR	3862541	Identifier	Z_TYPE_P		3862035	0					
ANR	3862542	ArgumentList	method		3862035	1					
ANR	3862543	Argument	method		3862035	0					
ANR	3862544	Identifier	method		3862035	0					
ANR	3862545	Identifier	IS_STRING		3862035	1					
ANR	3862546	CompoundStatement		82:40:2285:2285	3862035	1					
ANR	3862547	BreakStatement	break ;	3257:6:97438:97443	3862035	0	True				
ANR	3862548	ExpressionStatement	ZVAL_DEREF ( obj )	3260:5:97458:97473	3862035	3	True				
ANR	3862549	CallExpression	ZVAL_DEREF ( obj )		3862035	0					
ANR	3862550	Callee	ZVAL_DEREF		3862035	0					
ANR	3862551	Identifier	ZVAL_DEREF		3862035	0					
ANR	3862552	ArgumentList	obj		3862035	1					
ANR	3862553	Argument	obj		3862035	0					
ANR	3862554	Identifier	obj		3862035	0					
ANR	3862555	IfStatement	if ( Z_TYPE_P ( obj ) == IS_STRING )		3862035	4					
ANR	3862556	Condition	Z_TYPE_P ( obj ) == IS_STRING	3261:9:97484:97509	3862035	0	True				
ANR	3862557	EqualityExpression	Z_TYPE_P ( obj ) == IS_STRING		3862035	0		==			
ANR	3862558	CallExpression	Z_TYPE_P ( obj )		3862035	0					
ANR	3862559	Callee	Z_TYPE_P		3862035	0					
ANR	3862560	Identifier	Z_TYPE_P		3862035	0					
ANR	3862561	ArgumentList	obj		3862035	1					
ANR	3862562	Argument	obj		3862035	0					
ANR	3862563	Identifier	obj		3862035	0					
ANR	3862564	Identifier	IS_STRING		3862035	1					
ANR	3862565	CompoundStatement		87:37:2367:2367	3862035	1					
ANR	3862566	IfStatement	if ( callable_name )		3862035	0					
ANR	3862567	Condition	callable_name	3262:10:97524:97536	3862035	0	True				
ANR	3862568	Identifier	callable_name		3862035	0					
ANR	3862569	CompoundStatement		89:7:2403:2412	3862035	1					
ANR	3862570	IdentifierDeclStatement	char * ptr ;	3263:7:97548:97557	3862035	0	True				
ANR	3862571	IdentifierDecl	* ptr		3862035	0					
ANR	3862572	IdentifierDeclType	char *		3862035	0					
ANR	3862573	Identifier	ptr		3862035	1					
ANR	3862574	ExpressionStatement	"* callable_name = zend_string_alloc ( Z_STRLEN_P ( obj ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1 , 0 )"	3266:7:97568:97662	3862035	1	True				
ANR	3862575	AssignmentExpression	"* callable_name = zend_string_alloc ( Z_STRLEN_P ( obj ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1 , 0 )"		3862035	0		=			
ANR	3862576	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3862577	UnaryOperator	*		3862035	0					
ANR	3862578	Identifier	callable_name		3862035	1					
ANR	3862579	CallExpression	"zend_string_alloc ( Z_STRLEN_P ( obj ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1 , 0 )"		3862035	1					
ANR	3862580	Callee	zend_string_alloc		3862035	0					
ANR	3862581	Identifier	zend_string_alloc		3862035	0					
ANR	3862582	ArgumentList	"Z_STRLEN_P ( obj ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1"		3862035	1					
ANR	3862583	Argument	"Z_STRLEN_P ( obj ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1"		3862035	0					
ANR	3862584	AdditiveExpression	"Z_STRLEN_P ( obj ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1"		3862035	0		+			
ANR	3862585	CallExpression	Z_STRLEN_P ( obj )		3862035	0					
ANR	3862586	Callee	Z_STRLEN_P		3862035	0					
ANR	3862587	Identifier	Z_STRLEN_P		3862035	0					
ANR	3862588	ArgumentList	obj		3862035	1					
ANR	3862589	Argument	obj		3862035	0					
ANR	3862590	Identifier	obj		3862035	0					
ANR	3862591	AdditiveExpression	"Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1"		3862035	1		+			
ANR	3862592	CallExpression	Z_STRLEN_P ( method )		3862035	0					
ANR	3862593	Callee	Z_STRLEN_P		3862035	0					
ANR	3862594	Identifier	Z_STRLEN_P		3862035	0					
ANR	3862595	ArgumentList	method		3862035	1					
ANR	3862596	Argument	method		3862035	0					
ANR	3862597	Identifier	method		3862035	0					
ANR	3862598	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3862035	1		-			
ANR	3862599	SizeofExpression	"sizeof ( ""::"" )"		3862035	0					
ANR	3862600	Sizeof	sizeof		3862035	0					
ANR	3862601	PrimaryExpression	"""::"""		3862035	1					
ANR	3862602	PrimaryExpression	1		3862035	1					
ANR	3862603	Argument	0		3862035	1					
ANR	3862604	PrimaryExpression	0		3862035	0					
ANR	3862605	ExpressionStatement	ptr = ZSTR_VAL ( * callable_name )	3267:7:97671:97701	3862035	2	True				
ANR	3862606	AssignmentExpression	ptr = ZSTR_VAL ( * callable_name )		3862035	0		=			
ANR	3862607	Identifier	ptr		3862035	0					
ANR	3862608	CallExpression	ZSTR_VAL ( * callable_name )		3862035	1					
ANR	3862609	Callee	ZSTR_VAL		3862035	0					
ANR	3862610	Identifier	ZSTR_VAL		3862035	0					
ANR	3862611	ArgumentList	* callable_name		3862035	1					
ANR	3862612	Argument	* callable_name		3862035	0					
ANR	3862613	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3862614	UnaryOperator	*		3862035	0					
ANR	3862615	Identifier	callable_name		3862035	1					
ANR	3862616	ExpressionStatement	"memcpy ( ptr , Z_STRVAL_P ( obj ) , Z_STRLEN_P ( obj ) )"	3268:7:97710:97755	3862035	3	True				
ANR	3862617	CallExpression	"memcpy ( ptr , Z_STRVAL_P ( obj ) , Z_STRLEN_P ( obj ) )"		3862035	0					
ANR	3862618	Callee	memcpy		3862035	0					
ANR	3862619	Identifier	memcpy		3862035	0					
ANR	3862620	ArgumentList	ptr		3862035	1					
ANR	3862621	Argument	ptr		3862035	0					
ANR	3862622	Identifier	ptr		3862035	0					
ANR	3862623	Argument	Z_STRVAL_P ( obj )		3862035	1					
ANR	3862624	CallExpression	Z_STRVAL_P ( obj )		3862035	0					
ANR	3862625	Callee	Z_STRVAL_P		3862035	0					
ANR	3862626	Identifier	Z_STRVAL_P		3862035	0					
ANR	3862627	ArgumentList	obj		3862035	1					
ANR	3862628	Argument	obj		3862035	0					
ANR	3862629	Identifier	obj		3862035	0					
ANR	3862630	Argument	Z_STRLEN_P ( obj )		3862035	2					
ANR	3862631	CallExpression	Z_STRLEN_P ( obj )		3862035	0					
ANR	3862632	Callee	Z_STRLEN_P		3862035	0					
ANR	3862633	Identifier	Z_STRLEN_P		3862035	0					
ANR	3862634	ArgumentList	obj		3862035	1					
ANR	3862635	Argument	obj		3862035	0					
ANR	3862636	Identifier	obj		3862035	0					
ANR	3862637	ExpressionStatement	ptr += Z_STRLEN_P ( obj )	3269:7:97764:97786	3862035	4	True				
ANR	3862638	AssignmentExpression	ptr += Z_STRLEN_P ( obj )		3862035	0		+=			
ANR	3862639	Identifier	ptr		3862035	0					
ANR	3862640	CallExpression	Z_STRLEN_P ( obj )		3862035	1					
ANR	3862641	Callee	Z_STRLEN_P		3862035	0					
ANR	3862642	Identifier	Z_STRLEN_P		3862035	0					
ANR	3862643	ArgumentList	obj		3862035	1					
ANR	3862644	Argument	obj		3862035	0					
ANR	3862645	Identifier	obj		3862035	0					
ANR	3862646	ExpressionStatement	"memcpy ( ptr , ""::"" , sizeof ( ""::"" ) - 1 )"	3270:7:97795:97830	3862035	5	True				
ANR	3862647	CallExpression	"memcpy ( ptr , ""::"" , sizeof ( ""::"" ) - 1 )"		3862035	0					
ANR	3862648	Callee	memcpy		3862035	0					
ANR	3862649	Identifier	memcpy		3862035	0					
ANR	3862650	ArgumentList	ptr		3862035	1					
ANR	3862651	Argument	ptr		3862035	0					
ANR	3862652	Identifier	ptr		3862035	0					
ANR	3862653	Argument	"""::"""		3862035	1					
ANR	3862654	PrimaryExpression	"""::"""		3862035	0					
ANR	3862655	Argument	"sizeof ( ""::"" ) - 1"		3862035	2					
ANR	3862656	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3862035	0		-			
ANR	3862657	SizeofExpression	"sizeof ( ""::"" )"		3862035	0					
ANR	3862658	Sizeof	sizeof		3862035	0					
ANR	3862659	PrimaryExpression	"""::"""		3862035	1					
ANR	3862660	PrimaryExpression	1		3862035	1					
ANR	3862661	ExpressionStatement	"ptr += sizeof ( ""::"" ) - 1"	3271:7:97839:97862	3862035	6	True				
ANR	3862662	AssignmentExpression	"ptr += sizeof ( ""::"" ) - 1"		3862035	0		+=			
ANR	3862663	Identifier	ptr		3862035	0					
ANR	3862664	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3862035	1		-			
ANR	3862665	SizeofExpression	"sizeof ( ""::"" )"		3862035	0					
ANR	3862666	Sizeof	sizeof		3862035	0					
ANR	3862667	PrimaryExpression	"""::"""		3862035	1					
ANR	3862668	PrimaryExpression	1		3862035	1					
ANR	3862669	ExpressionStatement	"memcpy ( ptr , Z_STRVAL_P ( method ) , Z_STRLEN_P ( method ) + 1 )"	3272:7:97871:97926	3862035	7	True				
ANR	3862670	CallExpression	"memcpy ( ptr , Z_STRVAL_P ( method ) , Z_STRLEN_P ( method ) + 1 )"		3862035	0					
ANR	3862671	Callee	memcpy		3862035	0					
ANR	3862672	Identifier	memcpy		3862035	0					
ANR	3862673	ArgumentList	ptr		3862035	1					
ANR	3862674	Argument	ptr		3862035	0					
ANR	3862675	Identifier	ptr		3862035	0					
ANR	3862676	Argument	Z_STRVAL_P ( method )		3862035	1					
ANR	3862677	CallExpression	Z_STRVAL_P ( method )		3862035	0					
ANR	3862678	Callee	Z_STRVAL_P		3862035	0					
ANR	3862679	Identifier	Z_STRVAL_P		3862035	0					
ANR	3862680	ArgumentList	method		3862035	1					
ANR	3862681	Argument	method		3862035	0					
ANR	3862682	Identifier	method		3862035	0					
ANR	3862683	Argument	Z_STRLEN_P ( method ) + 1		3862035	2					
ANR	3862684	AdditiveExpression	Z_STRLEN_P ( method ) + 1		3862035	0		+			
ANR	3862685	CallExpression	Z_STRLEN_P ( method )		3862035	0					
ANR	3862686	Callee	Z_STRLEN_P		3862035	0					
ANR	3862687	Identifier	Z_STRLEN_P		3862035	0					
ANR	3862688	ArgumentList	method		3862035	1					
ANR	3862689	Argument	method		3862035	0					
ANR	3862690	Identifier	method		3862035	0					
ANR	3862691	PrimaryExpression	1		3862035	1					
ANR	3862692	IfStatement	if ( check_flags & IS_CALLABLE_CHECK_SYNTAX_ONLY )		3862035	1					
ANR	3862693	Condition	check_flags & IS_CALLABLE_CHECK_SYNTAX_ONLY	3275:10:97947:97989	3862035	0	True				
ANR	3862694	BitAndExpression	check_flags & IS_CALLABLE_CHECK_SYNTAX_ONLY		3862035	0		&			
ANR	3862695	Identifier	check_flags		3862035	0					
ANR	3862696	Identifier	IS_CALLABLE_CHECK_SYNTAX_ONLY		3862035	1					
ANR	3862697	CompoundStatement		101:55:2847:2847	3862035	1					
ANR	3862698	ReturnStatement	return 1 ;	3276:7:98001:98009	3862035	0	True				
ANR	3862699	PrimaryExpression	1		3862035	0					
ANR	3862700	IfStatement	"if ( ! zend_is_callable_check_class ( Z_STR_P ( obj ) , fcc , & strict_class , error ) )"		3862035	2					
ANR	3862701	Condition	"! zend_is_callable_check_class ( Z_STR_P ( obj ) , fcc , & strict_class , error )"	3279:10:98030:98099	3862035	0	True				
ANR	3862702	UnaryOperationExpression	"! zend_is_callable_check_class ( Z_STR_P ( obj ) , fcc , & strict_class , error )"		3862035	0					
ANR	3862703	UnaryOperator	!		3862035	0					
ANR	3862704	CallExpression	"zend_is_callable_check_class ( Z_STR_P ( obj ) , fcc , & strict_class , error )"		3862035	1					
ANR	3862705	Callee	zend_is_callable_check_class		3862035	0					
ANR	3862706	Identifier	zend_is_callable_check_class		3862035	0					
ANR	3862707	ArgumentList	Z_STR_P ( obj )		3862035	1					
ANR	3862708	Argument	Z_STR_P ( obj )		3862035	0					
ANR	3862709	CallExpression	Z_STR_P ( obj )		3862035	0					
ANR	3862710	Callee	Z_STR_P		3862035	0					
ANR	3862711	Identifier	Z_STR_P		3862035	0					
ANR	3862712	ArgumentList	obj		3862035	1					
ANR	3862713	Argument	obj		3862035	0					
ANR	3862714	Identifier	obj		3862035	0					
ANR	3862715	Argument	fcc		3862035	1					
ANR	3862716	Identifier	fcc		3862035	0					
ANR	3862717	Argument	& strict_class		3862035	2					
ANR	3862718	UnaryOperationExpression	& strict_class		3862035	0					
ANR	3862719	UnaryOperator	&		3862035	0					
ANR	3862720	Identifier	strict_class		3862035	1					
ANR	3862721	Argument	error		3862035	3					
ANR	3862722	Identifier	error		3862035	0					
ANR	3862723	CompoundStatement		105:82:2957:2957	3862035	1					
ANR	3862724	ReturnStatement	return 0 ;	3280:7:98111:98119	3862035	0	True				
ANR	3862725	PrimaryExpression	0		3862035	0					
ANR	3862726	ElseStatement	else		3862035	0					
ANR	3862727	IfStatement	if ( Z_TYPE_P ( obj ) == IS_OBJECT )		3862035	0					
ANR	3862728	Condition	Z_TYPE_P ( obj ) == IS_OBJECT	3283:16:98146:98171	3862035	0	True				
ANR	3862729	EqualityExpression	Z_TYPE_P ( obj ) == IS_OBJECT		3862035	0		==			
ANR	3862730	CallExpression	Z_TYPE_P ( obj )		3862035	0					
ANR	3862731	Callee	Z_TYPE_P		3862035	0					
ANR	3862732	Identifier	Z_TYPE_P		3862035	0					
ANR	3862733	ArgumentList	obj		3862035	1					
ANR	3862734	Argument	obj		3862035	0					
ANR	3862735	Identifier	obj		3862035	0					
ANR	3862736	Identifier	IS_OBJECT		3862035	1					
ANR	3862737	CompoundStatement		109:44:3029:3029	3862035	1					
ANR	3862738	IfStatement	if ( ! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ Z_OBJ_HANDLE_P ( obj ) ] ) )		3862035	0					
ANR	3862739	Condition	! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ Z_OBJ_HANDLE_P ( obj ) ] )	3284:10:98186:98300	3862035	0	True				
ANR	3862740	OrExpression	! EG ( objects_store ) . object_buckets || ! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ Z_OBJ_HANDLE_P ( obj ) ] )		3862035	0		||			
ANR	3862741	UnaryOperationExpression	! EG ( objects_store ) . object_buckets		3862035	0					
ANR	3862742	UnaryOperator	!		3862035	0					
ANR	3862743	MemberAccess	EG ( objects_store ) . object_buckets		3862035	1					
ANR	3862744	CallExpression	EG ( objects_store )		3862035	0					
ANR	3862745	Callee	EG		3862035	0					
ANR	3862746	Identifier	EG		3862035	0					
ANR	3862747	ArgumentList	objects_store		3862035	1					
ANR	3862748	Argument	objects_store		3862035	0					
ANR	3862749	Identifier	objects_store		3862035	0					
ANR	3862750	Identifier	object_buckets		3862035	1					
ANR	3862751	UnaryOperationExpression	! IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ Z_OBJ_HANDLE_P ( obj ) ] )		3862035	1					
ANR	3862752	UnaryOperator	!		3862035	0					
ANR	3862753	CallExpression	IS_OBJ_VALID ( EG ( objects_store ) . object_buckets [ Z_OBJ_HANDLE_P ( obj ) ] )		3862035	1					
ANR	3862754	Callee	IS_OBJ_VALID		3862035	0					
ANR	3862755	Identifier	IS_OBJ_VALID		3862035	0					
ANR	3862756	ArgumentList	EG ( objects_store ) . object_buckets [ Z_OBJ_HANDLE_P ( obj ) ]		3862035	1					
ANR	3862757	Argument	EG ( objects_store ) . object_buckets [ Z_OBJ_HANDLE_P ( obj ) ]		3862035	0					
ANR	3862758	ArrayIndexing	EG ( objects_store ) . object_buckets [ Z_OBJ_HANDLE_P ( obj ) ]		3862035	0					
ANR	3862759	MemberAccess	EG ( objects_store ) . object_buckets		3862035	0					
ANR	3862760	CallExpression	EG ( objects_store )		3862035	0					
ANR	3862761	Callee	EG		3862035	0					
ANR	3862762	Identifier	EG		3862035	0					
ANR	3862763	ArgumentList	objects_store		3862035	1					
ANR	3862764	Argument	objects_store		3862035	0					
ANR	3862765	Identifier	objects_store		3862035	0					
ANR	3862766	Identifier	object_buckets		3862035	1					
ANR	3862767	CallExpression	Z_OBJ_HANDLE_P ( obj )		3862035	1					
ANR	3862768	Callee	Z_OBJ_HANDLE_P		3862035	0					
ANR	3862769	Identifier	Z_OBJ_HANDLE_P		3862035	0					
ANR	3862770	ArgumentList	obj		3862035	1					
ANR	3862771	Argument	obj		3862035	0					
ANR	3862772	Identifier	obj		3862035	0					
ANR	3862773	CompoundStatement		111:80:3158:3158	3862035	1					
ANR	3862774	ReturnStatement	return 0 ;	3286:7:98312:98320	3862035	0	True				
ANR	3862775	PrimaryExpression	0		3862035	0					
ANR	3862776	ExpressionStatement	fcc -> calling_scope = Z_OBJCE_P ( obj )	3289:6:98337:98372	3862035	1	True				
ANR	3862777	AssignmentExpression	fcc -> calling_scope = Z_OBJCE_P ( obj )		3862035	0		=			
ANR	3862778	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862779	Identifier	fcc		3862035	0					
ANR	3862780	Identifier	calling_scope		3862035	1					
ANR	3862781	CallExpression	Z_OBJCE_P ( obj )		3862035	1					
ANR	3862782	Callee	Z_OBJCE_P		3862035	0					
ANR	3862783	Identifier	Z_OBJCE_P		3862035	0					
ANR	3862784	ArgumentList	obj		3862035	1					
ANR	3862785	Argument	obj		3862035	0					
ANR	3862786	Identifier	obj		3862035	0					
ANR	3862787	ExpressionStatement	fcc -> object = Z_OBJ_P ( obj )	3291:6:98421:98447	3862035	2	True				
ANR	3862788	AssignmentExpression	fcc -> object = Z_OBJ_P ( obj )		3862035	0		=			
ANR	3862789	PtrMemberAccess	fcc -> object		3862035	0					
ANR	3862790	Identifier	fcc		3862035	0					
ANR	3862791	Identifier	object		3862035	1					
ANR	3862792	CallExpression	Z_OBJ_P ( obj )		3862035	1					
ANR	3862793	Callee	Z_OBJ_P		3862035	0					
ANR	3862794	Identifier	Z_OBJ_P		3862035	0					
ANR	3862795	ArgumentList	obj		3862035	1					
ANR	3862796	Argument	obj		3862035	0					
ANR	3862797	Identifier	obj		3862035	0					
ANR	3862798	IfStatement	if ( callable_name )		3862035	3					
ANR	3862799	Condition	callable_name	3293:10:98460:98472	3862035	0	True				
ANR	3862800	Identifier	callable_name		3862035	0					
ANR	3862801	CompoundStatement		120:7:3339:3348	3862035	1					
ANR	3862802	IdentifierDeclStatement	char * ptr ;	3294:7:98484:98493	3862035	0	True				
ANR	3862803	IdentifierDecl	* ptr		3862035	0					
ANR	3862804	IdentifierDeclType	char *		3862035	0					
ANR	3862805	Identifier	ptr		3862035	1					
ANR	3862806	ExpressionStatement	"* callable_name = zend_string_alloc ( ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1 , 0 )"	3296:7:98503:98616	3862035	1	True				
ANR	3862807	AssignmentExpression	"* callable_name = zend_string_alloc ( ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1 , 0 )"		3862035	0		=			
ANR	3862808	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3862809	UnaryOperator	*		3862035	0					
ANR	3862810	Identifier	callable_name		3862035	1					
ANR	3862811	CallExpression	"zend_string_alloc ( ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1 , 0 )"		3862035	1					
ANR	3862812	Callee	zend_string_alloc		3862035	0					
ANR	3862813	Identifier	zend_string_alloc		3862035	0					
ANR	3862814	ArgumentList	"ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1"		3862035	1					
ANR	3862815	Argument	"ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1"		3862035	0					
ANR	3862816	AdditiveExpression	"ZSTR_LEN ( fcc -> calling_scope -> name ) + Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1"		3862035	0		+			
ANR	3862817	CallExpression	ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	0					
ANR	3862818	Callee	ZSTR_LEN		3862035	0					
ANR	3862819	Identifier	ZSTR_LEN		3862035	0					
ANR	3862820	ArgumentList	fcc -> calling_scope -> name		3862035	1					
ANR	3862821	Argument	fcc -> calling_scope -> name		3862035	0					
ANR	3862822	PtrMemberAccess	fcc -> calling_scope -> name		3862035	0					
ANR	3862823	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862824	Identifier	fcc		3862035	0					
ANR	3862825	Identifier	calling_scope		3862035	1					
ANR	3862826	Identifier	name		3862035	1					
ANR	3862827	AdditiveExpression	"Z_STRLEN_P ( method ) + sizeof ( ""::"" ) - 1"		3862035	1		+			
ANR	3862828	CallExpression	Z_STRLEN_P ( method )		3862035	0					
ANR	3862829	Callee	Z_STRLEN_P		3862035	0					
ANR	3862830	Identifier	Z_STRLEN_P		3862035	0					
ANR	3862831	ArgumentList	method		3862035	1					
ANR	3862832	Argument	method		3862035	0					
ANR	3862833	Identifier	method		3862035	0					
ANR	3862834	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3862035	1		-			
ANR	3862835	SizeofExpression	"sizeof ( ""::"" )"		3862035	0					
ANR	3862836	Sizeof	sizeof		3862035	0					
ANR	3862837	PrimaryExpression	"""::"""		3862035	1					
ANR	3862838	PrimaryExpression	1		3862035	1					
ANR	3862839	Argument	0		3862035	1					
ANR	3862840	PrimaryExpression	0		3862035	0					
ANR	3862841	ExpressionStatement	ptr = ZSTR_VAL ( * callable_name )	3297:7:98625:98655	3862035	2	True				
ANR	3862842	AssignmentExpression	ptr = ZSTR_VAL ( * callable_name )		3862035	0		=			
ANR	3862843	Identifier	ptr		3862035	0					
ANR	3862844	CallExpression	ZSTR_VAL ( * callable_name )		3862035	1					
ANR	3862845	Callee	ZSTR_VAL		3862035	0					
ANR	3862846	Identifier	ZSTR_VAL		3862035	0					
ANR	3862847	ArgumentList	* callable_name		3862035	1					
ANR	3862848	Argument	* callable_name		3862035	0					
ANR	3862849	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3862850	UnaryOperator	*		3862035	0					
ANR	3862851	Identifier	callable_name		3862035	1					
ANR	3862852	ExpressionStatement	"memcpy ( ptr , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_LEN ( fcc -> calling_scope -> name ) )"	3298:7:98664:98747	3862035	3	True				
ANR	3862853	CallExpression	"memcpy ( ptr , ZSTR_VAL ( fcc -> calling_scope -> name ) , ZSTR_LEN ( fcc -> calling_scope -> name ) )"		3862035	0					
ANR	3862854	Callee	memcpy		3862035	0					
ANR	3862855	Identifier	memcpy		3862035	0					
ANR	3862856	ArgumentList	ptr		3862035	1					
ANR	3862857	Argument	ptr		3862035	0					
ANR	3862858	Identifier	ptr		3862035	0					
ANR	3862859	Argument	ZSTR_VAL ( fcc -> calling_scope -> name )		3862035	1					
ANR	3862860	CallExpression	ZSTR_VAL ( fcc -> calling_scope -> name )		3862035	0					
ANR	3862861	Callee	ZSTR_VAL		3862035	0					
ANR	3862862	Identifier	ZSTR_VAL		3862035	0					
ANR	3862863	ArgumentList	fcc -> calling_scope -> name		3862035	1					
ANR	3862864	Argument	fcc -> calling_scope -> name		3862035	0					
ANR	3862865	PtrMemberAccess	fcc -> calling_scope -> name		3862035	0					
ANR	3862866	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862867	Identifier	fcc		3862035	0					
ANR	3862868	Identifier	calling_scope		3862035	1					
ANR	3862869	Identifier	name		3862035	1					
ANR	3862870	Argument	ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	2					
ANR	3862871	CallExpression	ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	0					
ANR	3862872	Callee	ZSTR_LEN		3862035	0					
ANR	3862873	Identifier	ZSTR_LEN		3862035	0					
ANR	3862874	ArgumentList	fcc -> calling_scope -> name		3862035	1					
ANR	3862875	Argument	fcc -> calling_scope -> name		3862035	0					
ANR	3862876	PtrMemberAccess	fcc -> calling_scope -> name		3862035	0					
ANR	3862877	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862878	Identifier	fcc		3862035	0					
ANR	3862879	Identifier	calling_scope		3862035	1					
ANR	3862880	Identifier	name		3862035	1					
ANR	3862881	ExpressionStatement	ptr += ZSTR_LEN ( fcc -> calling_scope -> name )	3299:7:98756:98797	3862035	4	True				
ANR	3862882	AssignmentExpression	ptr += ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	0		+=			
ANR	3862883	Identifier	ptr		3862035	0					
ANR	3862884	CallExpression	ZSTR_LEN ( fcc -> calling_scope -> name )		3862035	1					
ANR	3862885	Callee	ZSTR_LEN		3862035	0					
ANR	3862886	Identifier	ZSTR_LEN		3862035	0					
ANR	3862887	ArgumentList	fcc -> calling_scope -> name		3862035	1					
ANR	3862888	Argument	fcc -> calling_scope -> name		3862035	0					
ANR	3862889	PtrMemberAccess	fcc -> calling_scope -> name		3862035	0					
ANR	3862890	PtrMemberAccess	fcc -> calling_scope		3862035	0					
ANR	3862891	Identifier	fcc		3862035	0					
ANR	3862892	Identifier	calling_scope		3862035	1					
ANR	3862893	Identifier	name		3862035	1					
ANR	3862894	ExpressionStatement	"memcpy ( ptr , ""::"" , sizeof ( ""::"" ) - 1 )"	3300:7:98806:98841	3862035	5	True				
ANR	3862895	CallExpression	"memcpy ( ptr , ""::"" , sizeof ( ""::"" ) - 1 )"		3862035	0					
ANR	3862896	Callee	memcpy		3862035	0					
ANR	3862897	Identifier	memcpy		3862035	0					
ANR	3862898	ArgumentList	ptr		3862035	1					
ANR	3862899	Argument	ptr		3862035	0					
ANR	3862900	Identifier	ptr		3862035	0					
ANR	3862901	Argument	"""::"""		3862035	1					
ANR	3862902	PrimaryExpression	"""::"""		3862035	0					
ANR	3862903	Argument	"sizeof ( ""::"" ) - 1"		3862035	2					
ANR	3862904	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3862035	0		-			
ANR	3862905	SizeofExpression	"sizeof ( ""::"" )"		3862035	0					
ANR	3862906	Sizeof	sizeof		3862035	0					
ANR	3862907	PrimaryExpression	"""::"""		3862035	1					
ANR	3862908	PrimaryExpression	1		3862035	1					
ANR	3862909	ExpressionStatement	"ptr += sizeof ( ""::"" ) - 1"	3301:7:98850:98873	3862035	6	True				
ANR	3862910	AssignmentExpression	"ptr += sizeof ( ""::"" ) - 1"		3862035	0		+=			
ANR	3862911	Identifier	ptr		3862035	0					
ANR	3862912	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3862035	1		-			
ANR	3862913	SizeofExpression	"sizeof ( ""::"" )"		3862035	0					
ANR	3862914	Sizeof	sizeof		3862035	0					
ANR	3862915	PrimaryExpression	"""::"""		3862035	1					
ANR	3862916	PrimaryExpression	1		3862035	1					
ANR	3862917	ExpressionStatement	"memcpy ( ptr , Z_STRVAL_P ( method ) , Z_STRLEN_P ( method ) + 1 )"	3302:7:98882:98937	3862035	7	True				
ANR	3862918	CallExpression	"memcpy ( ptr , Z_STRVAL_P ( method ) , Z_STRLEN_P ( method ) + 1 )"		3862035	0					
ANR	3862919	Callee	memcpy		3862035	0					
ANR	3862920	Identifier	memcpy		3862035	0					
ANR	3862921	ArgumentList	ptr		3862035	1					
ANR	3862922	Argument	ptr		3862035	0					
ANR	3862923	Identifier	ptr		3862035	0					
ANR	3862924	Argument	Z_STRVAL_P ( method )		3862035	1					
ANR	3862925	CallExpression	Z_STRVAL_P ( method )		3862035	0					
ANR	3862926	Callee	Z_STRVAL_P		3862035	0					
ANR	3862927	Identifier	Z_STRVAL_P		3862035	0					
ANR	3862928	ArgumentList	method		3862035	1					
ANR	3862929	Argument	method		3862035	0					
ANR	3862930	Identifier	method		3862035	0					
ANR	3862931	Argument	Z_STRLEN_P ( method ) + 1		3862035	2					
ANR	3862932	AdditiveExpression	Z_STRLEN_P ( method ) + 1		3862035	0		+			
ANR	3862933	CallExpression	Z_STRLEN_P ( method )		3862035	0					
ANR	3862934	Callee	Z_STRLEN_P		3862035	0					
ANR	3862935	Identifier	Z_STRLEN_P		3862035	0					
ANR	3862936	ArgumentList	method		3862035	1					
ANR	3862937	Argument	method		3862035	0					
ANR	3862938	Identifier	method		3862035	0					
ANR	3862939	PrimaryExpression	1		3862035	1					
ANR	3862940	IfStatement	if ( check_flags & IS_CALLABLE_CHECK_SYNTAX_ONLY )		3862035	4					
ANR	3862941	Condition	check_flags & IS_CALLABLE_CHECK_SYNTAX_ONLY	3305:10:98958:99000	3862035	0	True				
ANR	3862942	BitAndExpression	check_flags & IS_CALLABLE_CHECK_SYNTAX_ONLY		3862035	0		&			
ANR	3862943	Identifier	check_flags		3862035	0					
ANR	3862944	Identifier	IS_CALLABLE_CHECK_SYNTAX_ONLY		3862035	1					
ANR	3862945	CompoundStatement		131:55:3858:3858	3862035	1					
ANR	3862946	ExpressionStatement	fcc -> called_scope = fcc -> calling_scope	3306:7:99012:99050	3862035	0	True				
ANR	3862947	AssignmentExpression	fcc -> called_scope = fcc -> calling_scope		3862035	0		=			
ANR	3862948	PtrMemberAccess	fcc -> called_scope		3862035	0					
ANR	3862949	Identifier	fcc		3862035	0					
ANR	3862950	Identifier	called_scope		3862035	1					
ANR	3862951	PtrMemberAccess	fcc -> calling_scope		3862035	1					
ANR	3862952	Identifier	fcc		3862035	0					
ANR	3862953	Identifier	calling_scope		3862035	1					
ANR	3862954	ReturnStatement	return 1 ;	3307:7:99059:99067	3862035	1	True				
ANR	3862955	PrimaryExpression	1		3862035	0					
ANR	3862956	ElseStatement	else		3862035	0					
ANR	3862957	CompoundStatement		135:12:3944:3944	3862035	0					
ANR	3862958	BreakStatement	break ;	3310:6:99097:99102	3862035	0	True				
ANR	3862959	ExpressionStatement	"ret = zend_is_callable_check_func ( check_flags , method , fcc , strict_class , error )"	3313:5:99117:99197	3862035	5	True				
ANR	3862960	AssignmentExpression	"ret = zend_is_callable_check_func ( check_flags , method , fcc , strict_class , error )"		3862035	0		=			
ANR	3862961	Identifier	ret		3862035	0					
ANR	3862962	CallExpression	"zend_is_callable_check_func ( check_flags , method , fcc , strict_class , error )"		3862035	1					
ANR	3862963	Callee	zend_is_callable_check_func		3862035	0					
ANR	3862964	Identifier	zend_is_callable_check_func		3862035	0					
ANR	3862965	ArgumentList	check_flags		3862035	1					
ANR	3862966	Argument	check_flags		3862035	0					
ANR	3862967	Identifier	check_flags		3862035	0					
ANR	3862968	Argument	method		3862035	1					
ANR	3862969	Identifier	method		3862035	0					
ANR	3862970	Argument	fcc		3862035	2					
ANR	3862971	Identifier	fcc		3862035	0					
ANR	3862972	Argument	strict_class		3862035	3					
ANR	3862973	Identifier	strict_class		3862035	0					
ANR	3862974	Argument	error		3862035	4					
ANR	3862975	Identifier	error		3862035	0					
ANR	3862976	IfStatement	if ( fcc == & fcc_local && fcc -> function_handler && ( ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION ) )		3862035	6					
ANR	3862977	Condition	fcc == & fcc_local && fcc -> function_handler && ( ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION )	3314:9:99208:99489	3862035	0	True				
ANR	3862978	AndExpression	fcc == & fcc_local && fcc -> function_handler && ( ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION )		3862035	0		&&			
ANR	3862979	EqualityExpression	fcc == & fcc_local		3862035	0		==			
ANR	3862980	Identifier	fcc		3862035	0					
ANR	3862981	UnaryOperationExpression	& fcc_local		3862035	1					
ANR	3862982	UnaryOperator	&		3862035	0					
ANR	3862983	Identifier	fcc_local		3862035	1					
ANR	3862984	AndExpression	fcc -> function_handler && ( ( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION )		3862035	1		&&			
ANR	3862985	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862986	Identifier	fcc		3862035	0					
ANR	3862987	Identifier	function_handler		3862035	1					
ANR	3862988	OrExpression	( fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION		3862035	1		||			
ANR	3862989	BitAndExpression	fcc -> function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3862035	0		&			
ANR	3862990	MemberAccess	fcc -> function_handler -> common . fn_flags		3862035	0					
ANR	3862991	PtrMemberAccess	fcc -> function_handler -> common		3862035	0					
ANR	3862992	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3862993	Identifier	fcc		3862035	0					
ANR	3862994	Identifier	function_handler		3862035	1					
ANR	3862995	Identifier	common		3862035	1					
ANR	3862996	Identifier	fn_flags		3862035	1					
ANR	3862997	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3862035	1					
ANR	3862998	OrExpression	fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION		3862035	1		||			
ANR	3862999	EqualityExpression	fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY		3862035	0		==			
ANR	3863000	PtrMemberAccess	fcc -> function_handler -> type		3862035	0					
ANR	3863001	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3863002	Identifier	fcc		3862035	0					
ANR	3863003	Identifier	function_handler		3862035	1					
ANR	3863004	Identifier	type		3862035	1					
ANR	3863005	Identifier	ZEND_OVERLOADED_FUNCTION_TEMPORARY		3862035	1					
ANR	3863006	EqualityExpression	fcc -> function_handler -> type == ZEND_OVERLOADED_FUNCTION		3862035	1		==			
ANR	3863007	PtrMemberAccess	fcc -> function_handler -> type		3862035	0					
ANR	3863008	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3863009	Identifier	fcc		3862035	0					
ANR	3863010	Identifier	function_handler		3862035	1					
ANR	3863011	Identifier	type		3862035	1					
ANR	3863012	Identifier	ZEND_OVERLOADED_FUNCTION		3862035	1					
ANR	3863013	CompoundStatement		144:68:4347:4347	3862035	1					
ANR	3863014	IfStatement	if ( fcc -> function_handler -> type != ZEND_OVERLOADED_FUNCTION )		3862035	0					
ANR	3863015	Condition	fcc -> function_handler -> type != ZEND_OVERLOADED_FUNCTION	3319:10:99504:99558	3862035	0	True				
ANR	3863016	EqualityExpression	fcc -> function_handler -> type != ZEND_OVERLOADED_FUNCTION		3862035	0		!=			
ANR	3863017	PtrMemberAccess	fcc -> function_handler -> type		3862035	0					
ANR	3863018	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3863019	Identifier	fcc		3862035	0					
ANR	3863020	Identifier	function_handler		3862035	1					
ANR	3863021	Identifier	type		3862035	1					
ANR	3863022	Identifier	ZEND_OVERLOADED_FUNCTION		3862035	1					
ANR	3863023	CompoundStatement		145:67:4416:4416	3862035	1					
ANR	3863024	ExpressionStatement	zend_string_release ( fcc -> function_handler -> common . function_name )	3320:7:99570:99634	3862035	0	True				
ANR	3863025	CallExpression	zend_string_release ( fcc -> function_handler -> common . function_name )		3862035	0					
ANR	3863026	Callee	zend_string_release		3862035	0					
ANR	3863027	Identifier	zend_string_release		3862035	0					
ANR	3863028	ArgumentList	fcc -> function_handler -> common . function_name		3862035	1					
ANR	3863029	Argument	fcc -> function_handler -> common . function_name		3862035	0					
ANR	3863030	MemberAccess	fcc -> function_handler -> common . function_name		3862035	0					
ANR	3863031	PtrMemberAccess	fcc -> function_handler -> common		3862035	0					
ANR	3863032	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3863033	Identifier	fcc		3862035	0					
ANR	3863034	Identifier	function_handler		3862035	1					
ANR	3863035	Identifier	common		3862035	1					
ANR	3863036	Identifier	function_name		3862035	1					
ANR	3863037	ExpressionStatement	zend_free_trampoline ( fcc -> function_handler )	3322:6:99650:99693	3862035	1	True				
ANR	3863038	CallExpression	zend_free_trampoline ( fcc -> function_handler )		3862035	0					
ANR	3863039	Callee	zend_free_trampoline		3862035	0					
ANR	3863040	Identifier	zend_free_trampoline		3862035	0					
ANR	3863041	ArgumentList	fcc -> function_handler		3862035	1					
ANR	3863042	Argument	fcc -> function_handler		3862035	0					
ANR	3863043	PtrMemberAccess	fcc -> function_handler		3862035	0					
ANR	3863044	Identifier	fcc		3862035	0					
ANR	3863045	Identifier	function_handler		3862035	1					
ANR	3863046	ReturnStatement	return ret ;	3324:5:99707:99717	3862035	7	True				
ANR	3863047	Identifier	ret		3862035	0					
ANR	3863048	Condition	0	3326:13:99733:99733	3862035	1	True				
ANR	3863049	PrimaryExpression	0		3862035	0					
ANR	3863050	IfStatement	if ( zend_hash_num_elements ( Z_ARRVAL_P ( callable ) ) == 2 )		3862035	5					
ANR	3863051	Condition	zend_hash_num_elements ( Z_ARRVAL_P ( callable ) ) == 2	3327:8:99745:99793	3862035	0	True				
ANR	3863052	EqualityExpression	zend_hash_num_elements ( Z_ARRVAL_P ( callable ) ) == 2		3862035	0		==			
ANR	3863053	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( callable ) )		3862035	0					
ANR	3863054	Callee	zend_hash_num_elements		3862035	0					
ANR	3863055	Identifier	zend_hash_num_elements		3862035	0					
ANR	3863056	ArgumentList	Z_ARRVAL_P ( callable )		3862035	1					
ANR	3863057	Argument	Z_ARRVAL_P ( callable )		3862035	0					
ANR	3863058	CallExpression	Z_ARRVAL_P ( callable )		3862035	0					
ANR	3863059	Callee	Z_ARRVAL_P		3862035	0					
ANR	3863060	Identifier	Z_ARRVAL_P		3862035	0					
ANR	3863061	ArgumentList	callable		3862035	1					
ANR	3863062	Argument	callable		3862035	0					
ANR	3863063	Identifier	callable		3862035	0					
ANR	3863064	PrimaryExpression	2		3862035	1					
ANR	3863065	CompoundStatement		153:59:4651:4651	3862035	1					
ANR	3863066	IfStatement	if ( ! obj || ( ! Z_ISREF_P ( obj ) ? ( Z_TYPE_P ( obj ) != IS_STRING && Z_TYPE_P ( obj ) != IS_OBJECT ) : ( Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_STRING && Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_OBJECT ) ) )		3862035	0					
ANR	3863067	Condition	! obj || ( ! Z_ISREF_P ( obj ) ? ( Z_TYPE_P ( obj ) != IS_STRING && Z_TYPE_P ( obj ) != IS_OBJECT ) : ( Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_STRING && Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_OBJECT ) )	3328:9:99807:99992	3862035	0	True				
ANR	3863068	OrExpression	! obj || ( ! Z_ISREF_P ( obj ) ? ( Z_TYPE_P ( obj ) != IS_STRING && Z_TYPE_P ( obj ) != IS_OBJECT ) : ( Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_STRING && Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_OBJECT ) )		3862035	0		||			
ANR	3863069	UnaryOperationExpression	! obj		3862035	0					
ANR	3863070	UnaryOperator	!		3862035	0					
ANR	3863071	Identifier	obj		3862035	1					
ANR	3863072	ConditionalExpression	! Z_ISREF_P ( obj ) ? ( Z_TYPE_P ( obj ) != IS_STRING && Z_TYPE_P ( obj ) != IS_OBJECT ) : ( Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_STRING && Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_OBJECT )		3862035	1					
ANR	3863073	Condition	! Z_ISREF_P ( obj )		3862035	0					
ANR	3863074	UnaryOperationExpression	! Z_ISREF_P ( obj )		3862035	0					
ANR	3863075	UnaryOperator	!		3862035	0					
ANR	3863076	CallExpression	Z_ISREF_P ( obj )		3862035	1					
ANR	3863077	Callee	Z_ISREF_P		3862035	0					
ANR	3863078	Identifier	Z_ISREF_P		3862035	0					
ANR	3863079	ArgumentList	obj		3862035	1					
ANR	3863080	Argument	obj		3862035	0					
ANR	3863081	Identifier	obj		3862035	0					
ANR	3863082	AndExpression	Z_TYPE_P ( obj ) != IS_STRING && Z_TYPE_P ( obj ) != IS_OBJECT		3862035	1		&&			
ANR	3863083	EqualityExpression	Z_TYPE_P ( obj ) != IS_STRING		3862035	0		!=			
ANR	3863084	CallExpression	Z_TYPE_P ( obj )		3862035	0					
ANR	3863085	Callee	Z_TYPE_P		3862035	0					
ANR	3863086	Identifier	Z_TYPE_P		3862035	0					
ANR	3863087	ArgumentList	obj		3862035	1					
ANR	3863088	Argument	obj		3862035	0					
ANR	3863089	Identifier	obj		3862035	0					
ANR	3863090	Identifier	IS_STRING		3862035	1					
ANR	3863091	EqualityExpression	Z_TYPE_P ( obj ) != IS_OBJECT		3862035	1		!=			
ANR	3863092	CallExpression	Z_TYPE_P ( obj )		3862035	0					
ANR	3863093	Callee	Z_TYPE_P		3862035	0					
ANR	3863094	Identifier	Z_TYPE_P		3862035	0					
ANR	3863095	ArgumentList	obj		3862035	1					
ANR	3863096	Argument	obj		3862035	0					
ANR	3863097	Identifier	obj		3862035	0					
ANR	3863098	Identifier	IS_OBJECT		3862035	1					
ANR	3863099	AndExpression	Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_STRING && Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_OBJECT		3862035	2		&&			
ANR	3863100	EqualityExpression	Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_STRING		3862035	0		!=			
ANR	3863101	CallExpression	Z_TYPE_P ( Z_REFVAL_P ( obj ) )		3862035	0					
ANR	3863102	Callee	Z_TYPE_P		3862035	0					
ANR	3863103	Identifier	Z_TYPE_P		3862035	0					
ANR	3863104	ArgumentList	Z_REFVAL_P ( obj )		3862035	1					
ANR	3863105	Argument	Z_REFVAL_P ( obj )		3862035	0					
ANR	3863106	CallExpression	Z_REFVAL_P ( obj )		3862035	0					
ANR	3863107	Callee	Z_REFVAL_P		3862035	0					
ANR	3863108	Identifier	Z_REFVAL_P		3862035	0					
ANR	3863109	ArgumentList	obj		3862035	1					
ANR	3863110	Argument	obj		3862035	0					
ANR	3863111	Identifier	obj		3862035	0					
ANR	3863112	Identifier	IS_STRING		3862035	1					
ANR	3863113	EqualityExpression	Z_TYPE_P ( Z_REFVAL_P ( obj ) ) != IS_OBJECT		3862035	1		!=			
ANR	3863114	CallExpression	Z_TYPE_P ( Z_REFVAL_P ( obj ) )		3862035	0					
ANR	3863115	Callee	Z_TYPE_P		3862035	0					
ANR	3863116	Identifier	Z_TYPE_P		3862035	0					
ANR	3863117	ArgumentList	Z_REFVAL_P ( obj )		3862035	1					
ANR	3863118	Argument	Z_REFVAL_P ( obj )		3862035	0					
ANR	3863119	CallExpression	Z_REFVAL_P ( obj )		3862035	0					
ANR	3863120	Callee	Z_REFVAL_P		3862035	0					
ANR	3863121	Identifier	Z_REFVAL_P		3862035	0					
ANR	3863122	ArgumentList	obj		3862035	1					
ANR	3863123	Argument	obj		3862035	0					
ANR	3863124	Identifier	obj		3862035	0					
ANR	3863125	Identifier	IS_OBJECT		3862035	1					
ANR	3863126	CompoundStatement		156:93:4850:4850	3862035	1					
ANR	3863127	IfStatement	if ( error )		3862035	0					
ANR	3863128	Condition	error	3331:10:100007:100011	3862035	0	True				
ANR	3863129	Identifier	error		3862035	0					
ANR	3863130	ExpressionStatement	"zend_spprintf ( error , 0 , ""first array member is not a valid class name or object"" )"	3331:17:100014:100095	3862035	1	True				
ANR	3863131	CallExpression	"zend_spprintf ( error , 0 , ""first array member is not a valid class name or object"" )"		3862035	0					
ANR	3863132	Callee	zend_spprintf		3862035	0					
ANR	3863133	Identifier	zend_spprintf		3862035	0					
ANR	3863134	ArgumentList	error		3862035	1					
ANR	3863135	Argument	error		3862035	0					
ANR	3863136	Identifier	error		3862035	0					
ANR	3863137	Argument	0		3862035	1					
ANR	3863138	PrimaryExpression	0		3862035	0					
ANR	3863139	Argument	"""first array member is not a valid class name or object"""		3862035	2					
ANR	3863140	PrimaryExpression	"""first array member is not a valid class name or object"""		3862035	0					
ANR	3863141	ElseStatement	else		3862035	0					
ANR	3863142	CompoundStatement		158:12:4964:4964	3862035	0					
ANR	3863143	IfStatement	if ( error )		3862035	0					
ANR	3863144	Condition	error	3333:10:100121:100125	3862035	0	True				
ANR	3863145	Identifier	error		3862035	0					
ANR	3863146	ExpressionStatement	"zend_spprintf ( error , 0 , ""second array member is not a valid method"" )"	3333:17:100128:100196	3862035	1	True				
ANR	3863147	CallExpression	"zend_spprintf ( error , 0 , ""second array member is not a valid method"" )"		3862035	0					
ANR	3863148	Callee	zend_spprintf		3862035	0					
ANR	3863149	Identifier	zend_spprintf		3862035	0					
ANR	3863150	ArgumentList	error		3862035	1					
ANR	3863151	Argument	error		3862035	0					
ANR	3863152	Identifier	error		3862035	0					
ANR	3863153	Argument	0		3862035	1					
ANR	3863154	PrimaryExpression	0		3862035	0					
ANR	3863155	Argument	"""second array member is not a valid method"""		3862035	2					
ANR	3863156	PrimaryExpression	"""second array member is not a valid method"""		3862035	0					
ANR	3863157	ElseStatement	else		3862035	0					
ANR	3863158	CompoundStatement		161:11:5071:5071	3862035	0					
ANR	3863159	IfStatement	if ( error )		3862035	0					
ANR	3863160	Condition	error	3336:9:100227:100231	3862035	0	True				
ANR	3863161	Identifier	error		3862035	0					
ANR	3863162	ExpressionStatement	"zend_spprintf ( error , 0 , ""array must have exactly two members"" )"	3336:16:100234:100296	3862035	1	True				
ANR	3863163	CallExpression	"zend_spprintf ( error , 0 , ""array must have exactly two members"" )"		3862035	0					
ANR	3863164	Callee	zend_spprintf		3862035	0					
ANR	3863165	Identifier	zend_spprintf		3862035	0					
ANR	3863166	ArgumentList	error		3862035	1					
ANR	3863167	Argument	error		3862035	0					
ANR	3863168	Identifier	error		3862035	0					
ANR	3863169	Argument	0		3862035	1					
ANR	3863170	PrimaryExpression	0		3862035	0					
ANR	3863171	Argument	"""array must have exactly two members"""		3862035	2					
ANR	3863172	PrimaryExpression	"""array must have exactly two members"""		3862035	0					
ANR	3863173	IfStatement	if ( callable_name )		3862035	6					
ANR	3863174	Condition	callable_name	3338:8:100312:100324	3862035	0	True				
ANR	3863175	Identifier	callable_name		3862035	0					
ANR	3863176	CompoundStatement		164:23:5182:5182	3862035	1					
ANR	3863177	ExpressionStatement	"* callable_name = zend_string_init ( ""Array"" , sizeof ( ""Array"" ) - 1 , 0 )"	3339:5:100334:100398	3862035	0	True				
ANR	3863178	AssignmentExpression	"* callable_name = zend_string_init ( ""Array"" , sizeof ( ""Array"" ) - 1 , 0 )"		3862035	0		=			
ANR	3863179	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3863180	UnaryOperator	*		3862035	0					
ANR	3863181	Identifier	callable_name		3862035	1					
ANR	3863182	CallExpression	"zend_string_init ( ""Array"" , sizeof ( ""Array"" ) - 1 , 0 )"		3862035	1					
ANR	3863183	Callee	zend_string_init		3862035	0					
ANR	3863184	Identifier	zend_string_init		3862035	0					
ANR	3863185	ArgumentList	"""Array"""		3862035	1					
ANR	3863186	Argument	"""Array"""		3862035	0					
ANR	3863187	PrimaryExpression	"""Array"""		3862035	0					
ANR	3863188	Argument	"sizeof ( ""Array"" ) - 1"		3862035	1					
ANR	3863189	AdditiveExpression	"sizeof ( ""Array"" ) - 1"		3862035	0		-			
ANR	3863190	SizeofExpression	"sizeof ( ""Array"" )"		3862035	0					
ANR	3863191	Sizeof	sizeof		3862035	0					
ANR	3863192	PrimaryExpression	"""Array"""		3862035	1					
ANR	3863193	PrimaryExpression	1		3862035	1					
ANR	3863194	Argument	0		3862035	2					
ANR	3863195	PrimaryExpression	0		3862035	0					
ANR	3863196	ReturnStatement	return 0 ;	3342:3:100414:100422	3862035	8	True				
ANR	3863197	PrimaryExpression	0		3862035	0					
ANR	3863198	Label	case IS_OBJECT :	3343:2:100426:100440	3862035	9	True				
ANR	3863199	Identifier	IS_OBJECT		3862035	0					
ANR	3863200	IfStatement	"if ( Z_OBJ_HANDLER_P ( callable , get_closure ) && Z_OBJ_HANDLER_P ( callable , get_closure ) ( callable , & fcc -> calling_scope , & fcc -> function_handler , & fcc -> object ) == SUCCESS )"		3862035	10					
ANR	3863201	Condition	"Z_OBJ_HANDLER_P ( callable , get_closure ) && Z_OBJ_HANDLER_P ( callable , get_closure ) ( callable , & fcc -> calling_scope , & fcc -> function_handler , & fcc -> object ) == SUCCESS"	3344:7:100449:100608	3862035	0	True				
ANR	3863202	AndExpression	"Z_OBJ_HANDLER_P ( callable , get_closure ) && Z_OBJ_HANDLER_P ( callable , get_closure ) ( callable , & fcc -> calling_scope , & fcc -> function_handler , & fcc -> object ) == SUCCESS"		3862035	0		&&			
ANR	3863203	CallExpression	"Z_OBJ_HANDLER_P ( callable , get_closure )"		3862035	0					
ANR	3863204	Callee	Z_OBJ_HANDLER_P		3862035	0					
ANR	3863205	Identifier	Z_OBJ_HANDLER_P		3862035	0					
ANR	3863206	ArgumentList	callable		3862035	1					
ANR	3863207	Argument	callable		3862035	0					
ANR	3863208	Identifier	callable		3862035	0					
ANR	3863209	Argument	get_closure		3862035	1					
ANR	3863210	Identifier	get_closure		3862035	0					
ANR	3863211	EqualityExpression	"Z_OBJ_HANDLER_P ( callable , get_closure ) ( callable , & fcc -> calling_scope , & fcc -> function_handler , & fcc -> object ) == SUCCESS"		3862035	1		==			
ANR	3863212	CallExpression	"Z_OBJ_HANDLER_P ( callable , get_closure ) ( callable , & fcc -> calling_scope , & fcc -> function_handler , & fcc -> object )"		3862035	0					
ANR	3863213	Callee	"Z_OBJ_HANDLER_P ( callable , get_closure )"		3862035	0					
ANR	3863214	CallExpression	"Z_OBJ_HANDLER_P ( callable , get_closure )"		3862035	0					
ANR	3863215	Callee	Z_OBJ_HANDLER_P		3862035	0					
ANR	3863216	Identifier	Z_OBJ_HANDLER_P		3862035	0					
ANR	3863217	ArgumentList	callable		3862035	1					
ANR	3863218	Argument	callable		3862035	0					
ANR	3863219	Identifier	callable		3862035	0					
ANR	3863220	Argument	get_closure		3862035	1					
ANR	3863221	Identifier	get_closure		3862035	0					
ANR	3863222	ArgumentList	callable		3862035	1					
ANR	3863223	Argument	callable		3862035	0					
ANR	3863224	Identifier	callable		3862035	0					
ANR	3863225	Argument	& fcc -> calling_scope		3862035	1					
ANR	3863226	UnaryOperationExpression	& fcc -> calling_scope		3862035	0					
ANR	3863227	UnaryOperator	&		3862035	0					
ANR	3863228	PtrMemberAccess	fcc -> calling_scope		3862035	1					
ANR	3863229	Identifier	fcc		3862035	0					
ANR	3863230	Identifier	calling_scope		3862035	1					
ANR	3863231	Argument	& fcc -> function_handler		3862035	2					
ANR	3863232	UnaryOperationExpression	& fcc -> function_handler		3862035	0					
ANR	3863233	UnaryOperator	&		3862035	0					
ANR	3863234	PtrMemberAccess	fcc -> function_handler		3862035	1					
ANR	3863235	Identifier	fcc		3862035	0					
ANR	3863236	Identifier	function_handler		3862035	1					
ANR	3863237	Argument	& fcc -> object		3862035	3					
ANR	3863238	UnaryOperationExpression	& fcc -> object		3862035	0					
ANR	3863239	UnaryOperator	&		3862035	0					
ANR	3863240	PtrMemberAccess	fcc -> object		3862035	1					
ANR	3863241	Identifier	fcc		3862035	0					
ANR	3863242	Identifier	object		3862035	1					
ANR	3863243	Identifier	SUCCESS		3862035	1					
ANR	3863244	CompoundStatement		170:169:5466:5466	3862035	1					
ANR	3863245	ExpressionStatement	fcc -> called_scope = fcc -> calling_scope	3345:4:100617:100655	3862035	0	True				
ANR	3863246	AssignmentExpression	fcc -> called_scope = fcc -> calling_scope		3862035	0		=			
ANR	3863247	PtrMemberAccess	fcc -> called_scope		3862035	0					
ANR	3863248	Identifier	fcc		3862035	0					
ANR	3863249	Identifier	called_scope		3862035	1					
ANR	3863250	PtrMemberAccess	fcc -> calling_scope		3862035	1					
ANR	3863251	Identifier	fcc		3862035	0					
ANR	3863252	Identifier	calling_scope		3862035	1					
ANR	3863253	IfStatement	if ( callable_name )		3862035	1					
ANR	3863254	Condition	callable_name	3346:8:100665:100677	3862035	0	True				
ANR	3863255	Identifier	callable_name		3862035	0					
ANR	3863256	CompoundStatement		173:5:5542:5584	3862035	1					
ANR	3863257	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( callable ) ;	3347:5:100687:100729	3862035	0	True				
ANR	3863258	IdentifierDecl	* ce = Z_OBJCE_P ( callable )		3862035	0					
ANR	3863259	IdentifierDeclType	zend_class_entry *		3862035	0					
ANR	3863260	Identifier	ce		3862035	1					
ANR	3863261	AssignmentExpression	* ce = Z_OBJCE_P ( callable )		3862035	2		=			
ANR	3863262	Identifier	ce		3862035	0					
ANR	3863263	CallExpression	Z_OBJCE_P ( callable )		3862035	1					
ANR	3863264	Callee	Z_OBJCE_P		3862035	0					
ANR	3863265	Identifier	Z_OBJCE_P		3862035	0					
ANR	3863266	ArgumentList	callable		3862035	1					
ANR	3863267	Argument	callable		3862035	0					
ANR	3863268	Identifier	callable		3862035	0					
ANR	3863269	ExpressionStatement	"* callable_name = zend_string_alloc ( ZSTR_LEN ( ce -> name ) + sizeof ( ""::__invoke"" ) - 1 , 0 )"	3349:5:100777:100861	3862035	1	True				
ANR	3863270	AssignmentExpression	"* callable_name = zend_string_alloc ( ZSTR_LEN ( ce -> name ) + sizeof ( ""::__invoke"" ) - 1 , 0 )"		3862035	0		=			
ANR	3863271	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3863272	UnaryOperator	*		3862035	0					
ANR	3863273	Identifier	callable_name		3862035	1					
ANR	3863274	CallExpression	"zend_string_alloc ( ZSTR_LEN ( ce -> name ) + sizeof ( ""::__invoke"" ) - 1 , 0 )"		3862035	1					
ANR	3863275	Callee	zend_string_alloc		3862035	0					
ANR	3863276	Identifier	zend_string_alloc		3862035	0					
ANR	3863277	ArgumentList	"ZSTR_LEN ( ce -> name ) + sizeof ( ""::__invoke"" ) - 1"		3862035	1					
ANR	3863278	Argument	"ZSTR_LEN ( ce -> name ) + sizeof ( ""::__invoke"" ) - 1"		3862035	0					
ANR	3863279	AdditiveExpression	"ZSTR_LEN ( ce -> name ) + sizeof ( ""::__invoke"" ) - 1"		3862035	0		+			
ANR	3863280	CallExpression	ZSTR_LEN ( ce -> name )		3862035	0					
ANR	3863281	Callee	ZSTR_LEN		3862035	0					
ANR	3863282	Identifier	ZSTR_LEN		3862035	0					
ANR	3863283	ArgumentList	ce -> name		3862035	1					
ANR	3863284	Argument	ce -> name		3862035	0					
ANR	3863285	PtrMemberAccess	ce -> name		3862035	0					
ANR	3863286	Identifier	ce		3862035	0					
ANR	3863287	Identifier	name		3862035	1					
ANR	3863288	AdditiveExpression	"sizeof ( ""::__invoke"" ) - 1"		3862035	1		-			
ANR	3863289	SizeofExpression	"sizeof ( ""::__invoke"" )"		3862035	0					
ANR	3863290	Sizeof	sizeof		3862035	0					
ANR	3863291	PrimaryExpression	"""::__invoke"""		3862035	1					
ANR	3863292	PrimaryExpression	1		3862035	1					
ANR	3863293	Argument	0		3862035	1					
ANR	3863294	PrimaryExpression	0		3862035	0					
ANR	3863295	ExpressionStatement	"memcpy ( ZSTR_VAL ( * callable_name ) , ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) )"	3350:5:100868:100940	3862035	2	True				
ANR	3863296	CallExpression	"memcpy ( ZSTR_VAL ( * callable_name ) , ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) )"		3862035	0					
ANR	3863297	Callee	memcpy		3862035	0					
ANR	3863298	Identifier	memcpy		3862035	0					
ANR	3863299	ArgumentList	ZSTR_VAL ( * callable_name )		3862035	1					
ANR	3863300	Argument	ZSTR_VAL ( * callable_name )		3862035	0					
ANR	3863301	CallExpression	ZSTR_VAL ( * callable_name )		3862035	0					
ANR	3863302	Callee	ZSTR_VAL		3862035	0					
ANR	3863303	Identifier	ZSTR_VAL		3862035	0					
ANR	3863304	ArgumentList	* callable_name		3862035	1					
ANR	3863305	Argument	* callable_name		3862035	0					
ANR	3863306	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3863307	UnaryOperator	*		3862035	0					
ANR	3863308	Identifier	callable_name		3862035	1					
ANR	3863309	Argument	ZSTR_VAL ( ce -> name )		3862035	1					
ANR	3863310	CallExpression	ZSTR_VAL ( ce -> name )		3862035	0					
ANR	3863311	Callee	ZSTR_VAL		3862035	0					
ANR	3863312	Identifier	ZSTR_VAL		3862035	0					
ANR	3863313	ArgumentList	ce -> name		3862035	1					
ANR	3863314	Argument	ce -> name		3862035	0					
ANR	3863315	PtrMemberAccess	ce -> name		3862035	0					
ANR	3863316	Identifier	ce		3862035	0					
ANR	3863317	Identifier	name		3862035	1					
ANR	3863318	Argument	ZSTR_LEN ( ce -> name )		3862035	2					
ANR	3863319	CallExpression	ZSTR_LEN ( ce -> name )		3862035	0					
ANR	3863320	Callee	ZSTR_LEN		3862035	0					
ANR	3863321	Identifier	ZSTR_LEN		3862035	0					
ANR	3863322	ArgumentList	ce -> name		3862035	1					
ANR	3863323	Argument	ce -> name		3862035	0					
ANR	3863324	PtrMemberAccess	ce -> name		3862035	0					
ANR	3863325	Identifier	ce		3862035	0					
ANR	3863326	Identifier	name		3862035	1					
ANR	3863327	ExpressionStatement	"memcpy ( ZSTR_VAL ( * callable_name ) + ZSTR_LEN ( ce -> name ) , ""::__invoke"" , sizeof ( ""::__invoke"" ) )"	3351:5:100947:101036	3862035	3	True				
ANR	3863328	CallExpression	"memcpy ( ZSTR_VAL ( * callable_name ) + ZSTR_LEN ( ce -> name ) , ""::__invoke"" , sizeof ( ""::__invoke"" ) )"		3862035	0					
ANR	3863329	Callee	memcpy		3862035	0					
ANR	3863330	Identifier	memcpy		3862035	0					
ANR	3863331	ArgumentList	ZSTR_VAL ( * callable_name ) + ZSTR_LEN ( ce -> name )		3862035	1					
ANR	3863332	Argument	ZSTR_VAL ( * callable_name ) + ZSTR_LEN ( ce -> name )		3862035	0					
ANR	3863333	AdditiveExpression	ZSTR_VAL ( * callable_name ) + ZSTR_LEN ( ce -> name )		3862035	0		+			
ANR	3863334	CallExpression	ZSTR_VAL ( * callable_name )		3862035	0					
ANR	3863335	Callee	ZSTR_VAL		3862035	0					
ANR	3863336	Identifier	ZSTR_VAL		3862035	0					
ANR	3863337	ArgumentList	* callable_name		3862035	1					
ANR	3863338	Argument	* callable_name		3862035	0					
ANR	3863339	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3863340	UnaryOperator	*		3862035	0					
ANR	3863341	Identifier	callable_name		3862035	1					
ANR	3863342	CallExpression	ZSTR_LEN ( ce -> name )		3862035	1					
ANR	3863343	Callee	ZSTR_LEN		3862035	0					
ANR	3863344	Identifier	ZSTR_LEN		3862035	0					
ANR	3863345	ArgumentList	ce -> name		3862035	1					
ANR	3863346	Argument	ce -> name		3862035	0					
ANR	3863347	PtrMemberAccess	ce -> name		3862035	0					
ANR	3863348	Identifier	ce		3862035	0					
ANR	3863349	Identifier	name		3862035	1					
ANR	3863350	Argument	"""::__invoke"""		3862035	1					
ANR	3863351	PrimaryExpression	"""::__invoke"""		3862035	0					
ANR	3863352	Argument	"sizeof ( ""::__invoke"" )"		3862035	2					
ANR	3863353	SizeofExpression	"sizeof ( ""::__invoke"" )"		3862035	0					
ANR	3863354	Sizeof	sizeof		3862035	0					
ANR	3863355	PrimaryExpression	"""::__invoke"""		3862035	1					
ANR	3863356	ReturnStatement	return 1 ;	3353:4:101048:101056	3862035	2	True				
ANR	3863357	PrimaryExpression	1		3862035	0					
ANR	3863358	IfStatement	if ( callable_name )		3862035	11					
ANR	3863359	Condition	callable_name	3355:7:101070:101082	3862035	0	True				
ANR	3863360	Identifier	callable_name		3862035	0					
ANR	3863361	CompoundStatement		181:22:5940:5940	3862035	1					
ANR	3863362	ExpressionStatement	* callable_name = zval_get_string ( callable )	3356:4:101091:101133	3862035	0	True				
ANR	3863363	AssignmentExpression	* callable_name = zval_get_string ( callable )		3862035	0		=			
ANR	3863364	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3863365	UnaryOperator	*		3862035	0					
ANR	3863366	Identifier	callable_name		3862035	1					
ANR	3863367	CallExpression	zval_get_string ( callable )		3862035	1					
ANR	3863368	Callee	zval_get_string		3862035	0					
ANR	3863369	Identifier	zval_get_string		3862035	0					
ANR	3863370	ArgumentList	callable		3862035	1					
ANR	3863371	Argument	callable		3862035	0					
ANR	3863372	Identifier	callable		3862035	0					
ANR	3863373	IfStatement	if ( error )		3862035	12					
ANR	3863374	Condition	error	3358:7:101147:101151	3862035	0	True				
ANR	3863375	Identifier	error		3862035	0					
ANR	3863376	ExpressionStatement	"zend_spprintf ( error , 0 , ""no array or string given"" )"	3358:14:101154:101205	3862035	1	True				
ANR	3863377	CallExpression	"zend_spprintf ( error , 0 , ""no array or string given"" )"		3862035	0					
ANR	3863378	Callee	zend_spprintf		3862035	0					
ANR	3863379	Identifier	zend_spprintf		3862035	0					
ANR	3863380	ArgumentList	error		3862035	1					
ANR	3863381	Argument	error		3862035	0					
ANR	3863382	Identifier	error		3862035	0					
ANR	3863383	Argument	0		3862035	1					
ANR	3863384	PrimaryExpression	0		3862035	0					
ANR	3863385	Argument	"""no array or string given"""		3862035	2					
ANR	3863386	PrimaryExpression	"""no array or string given"""		3862035	0					
ANR	3863387	ReturnStatement	return 0 ;	3359:3:101210:101218	3862035	13	True				
ANR	3863388	PrimaryExpression	0		3862035	0					
ANR	3863389	Label	case IS_REFERENCE :	3360:2:101222:101239	3862035	14	True				
ANR	3863390	Identifier	IS_REFERENCE		3862035	0					
ANR	3863391	ExpressionStatement	callable = Z_REFVAL_P ( callable )	3361:3:101244:101275	3862035	15	True				
ANR	3863392	AssignmentExpression	callable = Z_REFVAL_P ( callable )		3862035	0		=			
ANR	3863393	Identifier	callable		3862035	0					
ANR	3863394	CallExpression	Z_REFVAL_P ( callable )		3862035	1					
ANR	3863395	Callee	Z_REFVAL_P		3862035	0					
ANR	3863396	Identifier	Z_REFVAL_P		3862035	0					
ANR	3863397	ArgumentList	callable		3862035	1					
ANR	3863398	Argument	callable		3862035	0					
ANR	3863399	Identifier	callable		3862035	0					
ANR	3863400	GotoStatement	goto again ;	3362:3:101280:101290	3862035	16	True				
ANR	3863401	Identifier	again		3862035	0					
ANR	3863402	Label	default :	3363:2:101294:101301	3862035	17	True				
ANR	3863403	Identifier	default		3862035	0					
ANR	3863404	IfStatement	if ( callable_name )		3862035	18					
ANR	3863405	Condition	callable_name	3364:7:101310:101322	3862035	0	True				
ANR	3863406	Identifier	callable_name		3862035	0					
ANR	3863407	CompoundStatement		190:22:6180:6180	3862035	1					
ANR	3863408	ExpressionStatement	* callable_name = zval_get_string ( callable )	3365:4:101331:101373	3862035	0	True				
ANR	3863409	AssignmentExpression	* callable_name = zval_get_string ( callable )		3862035	0		=			
ANR	3863410	UnaryOperationExpression	* callable_name		3862035	0					
ANR	3863411	UnaryOperator	*		3862035	0					
ANR	3863412	Identifier	callable_name		3862035	1					
ANR	3863413	CallExpression	zval_get_string ( callable )		3862035	1					
ANR	3863414	Callee	zval_get_string		3862035	0					
ANR	3863415	Identifier	zval_get_string		3862035	0					
ANR	3863416	ArgumentList	callable		3862035	1					
ANR	3863417	Argument	callable		3862035	0					
ANR	3863418	Identifier	callable		3862035	0					
ANR	3863419	IfStatement	if ( error )		3862035	19					
ANR	3863420	Condition	error	3367:7:101387:101391	3862035	0	True				
ANR	3863421	Identifier	error		3862035	0					
ANR	3863422	ExpressionStatement	"zend_spprintf ( error , 0 , ""no array or string given"" )"	3367:14:101394:101445	3862035	1	True				
ANR	3863423	CallExpression	"zend_spprintf ( error , 0 , ""no array or string given"" )"		3862035	0					
ANR	3863424	Callee	zend_spprintf		3862035	0					
ANR	3863425	Identifier	zend_spprintf		3862035	0					
ANR	3863426	ArgumentList	error		3862035	1					
ANR	3863427	Argument	error		3862035	0					
ANR	3863428	Identifier	error		3862035	0					
ANR	3863429	Argument	0		3862035	1					
ANR	3863430	PrimaryExpression	0		3862035	0					
ANR	3863431	Argument	"""no array or string given"""		3862035	2					
ANR	3863432	PrimaryExpression	"""no array or string given"""		3862035	0					
ANR	3863433	ReturnStatement	return 0 ;	3368:3:101450:101458	3862035	20	True				
ANR	3863434	PrimaryExpression	0		3862035	0					
ANR	3863435	ReturnType	ZEND_API zend_bool		3862035	1					
ANR	3863436	Identifier	zend_is_callable_ex		3862035	2					
ANR	3863437	ParameterList	"zval * callable , zend_object * object , uint check_flags , zend_string * * callable_name , zend_fcall_info_cache * fcc , char * * error"		3862035	3					
ANR	3863438	Parameter	zval * callable	3174:39:95008:95021	3862035	0	True				
ANR	3863439	ParameterType	zval *		3862035	0					
ANR	3863440	Identifier	callable		3862035	1					
ANR	3863441	Parameter	zend_object * object	3174:55:95024:95042	3862035	1	True				
ANR	3863442	ParameterType	zend_object *		3862035	0					
ANR	3863443	Identifier	object		3862035	1					
ANR	3863444	Parameter	uint check_flags	3174:76:95045:95060	3862035	2	True				
ANR	3863445	ParameterType	uint		3862035	0					
ANR	3863446	Identifier	check_flags		3862035	1					
ANR	3863447	Parameter	zend_string * * callable_name	3174:94:95063:95089	3862035	3	True				
ANR	3863448	ParameterType	zend_string * *		3862035	0					
ANR	3863449	Identifier	callable_name		3862035	1					
ANR	3863450	Parameter	zend_fcall_info_cache * fcc	3174:123:95092:95117	3862035	4	True				
ANR	3863451	ParameterType	zend_fcall_info_cache *		3862035	0					
ANR	3863452	Identifier	fcc		3862035	1					
ANR	3863453	Parameter	char * * error	3174:151:95120:95131	3862035	5	True				
ANR	3863454	ParameterType	char * *		3862035	0					
ANR	3863455	Identifier	error		3862035	1					
ANR	3863456	CFGEntryNode	ENTRY		3862035		True				
ANR	3863457	CFGExitNode	EXIT		3862035		True				
ANR	3863458	Symbol	callable		3862035						
ANR	3863459	Symbol	object -> ce		3862035						
ANR	3863460	Symbol	* callable_name		3862035						
ANR	3863461	Symbol	fcc -> calling_scope		3862035						
ANR	3863462	Symbol	ZEND_OVERLOADED_FUNCTION_TEMPORARY		3862035						
ANR	3863463	Symbol	* ce		3862035						
ANR	3863464	Symbol	* fcc		3862035						
ANR	3863465	Symbol	& fcc -> object		3862035						
ANR	3863466	Symbol	fcc_local		3862035						
ANR	3863467	Symbol	zend_string_init		3862035						
ANR	3863468	Symbol	check_flags		3862035						
ANR	3863469	Symbol	EG ( objects_store ) . object_buckets		3862035						
ANR	3863470	Symbol	& strict_class		3862035						
ANR	3863471	Symbol	* * fcc		3862035						
ANR	3863472	Symbol	Z_OBJ_HANDLER_P		3862035						
ANR	3863473	Symbol	ZEND_OVERLOADED_FUNCTION		3862035						
ANR	3863474	Symbol	IS_STRING		3862035						
ANR	3863475	Symbol	ce -> name		3862035						
ANR	3863476	Symbol	& fcc -> function_handler		3862035						
ANR	3863477	Symbol	ret		3862035						
ANR	3863478	Symbol	IS_OBJ_VALID		3862035						
ANR	3863479	Symbol	* EG ( objects_store ) . object_buckets		3862035						
ANR	3863480	Symbol	zend_hash_index_find		3862035						
ANR	3863481	Symbol	EG		3862035						
ANR	3863482	Symbol	zend_string_alloc		3862035						
ANR	3863483	Symbol	NULL		3862035						
ANR	3863484	Symbol	method		3862035						
ANR	3863485	Symbol	* fcc -> calling_scope		3862035						
ANR	3863486	Symbol	zend_string_copy		3862035						
ANR	3863487	Symbol	ZEND_ACC_CALL_VIA_TRAMPOLINE		3862035						
ANR	3863488	Symbol	zend_is_callable_check_func		3862035						
ANR	3863489	Symbol	* error		3862035						
ANR	3863490	Symbol	fcc -> called_scope		3862035						
ANR	3863491	Symbol	fcc -> calling_scope -> name		3862035						
ANR	3863492	Symbol	Z_STR_P		3862035						
ANR	3863493	Symbol	& fcc -> calling_scope		3862035						
ANR	3863494	Symbol	fcc -> function_handler		3862035						
ANR	3863495	Symbol	fcc -> function_handler -> common		3862035						
ANR	3863496	Symbol	fcc -> function_handler -> common . fn_flags		3862035						
ANR	3863497	Symbol	Z_ISREF_P		3862035						
ANR	3863498	Symbol	object		3862035						
ANR	3863499	Symbol	* object -> handle		3862035						
ANR	3863500	Symbol	IS_CALLABLE_CHECK_SYNTAX_ONLY		3862035						
ANR	3863501	Symbol	Z_OBJ_P		3862035						
ANR	3863502	Symbol	fcc		3862035						
ANR	3863503	Symbol	* EG		3862035						
ANR	3863504	Symbol	error		3862035						
ANR	3863505	Symbol	* object		3862035						
ANR	3863506	Symbol	callable_name		3862035						
ANR	3863507	Symbol	Z_OBJCE_P		3862035						
ANR	3863508	Symbol	Z_STRLEN_P		3862035						
ANR	3863509	Symbol	Z_ARRVAL_P		3862035						
ANR	3863510	Symbol	fcc -> initialized		3862035						
ANR	3863511	Symbol	strict_class		3862035						
ANR	3863512	Symbol	* fcc -> function_handler		3862035						
ANR	3863513	Symbol	ce		3862035						
ANR	3863514	Symbol	Z_OBJ_HANDLE_P		3862035						
ANR	3863515	Symbol	SUCCESS		3862035						
ANR	3863516	Symbol	get_closure		3862035						
ANR	3863517	Symbol	zend_hash_num_elements		3862035						
ANR	3863518	Symbol	objects_store		3862035						
ANR	3863519	Symbol	fcc -> function_handler -> type		3862035						
ANR	3863520	Symbol	zval_get_string		3862035						
ANR	3863521	Symbol	fcc -> function_handler -> common . function_name		3862035						
ANR	3863522	Symbol	fcc -> object		3862035						
ANR	3863523	Symbol	Z_TYPE_P		3862035						
ANR	3863524	Symbol	Z_STRVAL_P		3862035						
ANR	3863525	Symbol	zend_is_callable_check_class		3862035						
ANR	3863526	Symbol	ptr		3862035						
ANR	3863527	Symbol	ZSTR_VAL		3862035						
ANR	3863528	Symbol	obj		3862035						
ANR	3863529	Symbol	object -> handle		3862035						
ANR	3863530	Symbol	Z_REFVAL_P		3862035						
ANR	3863531	Symbol	* * object		3862035						
ANR	3863532	Symbol	ZSTR_LEN		3862035						
ANR	3863533	Symbol	& fcc_local		3862035						
ANR	3863534	Symbol	IS_OBJECT		3862035						
ANR	3863535	Symbol	* Z_OBJ_HANDLE_P		3862035						
ANR	3863536	Function	zend_is_callable	3373:0:101476:101672							
ANR	3863537	FunctionDef	"zend_is_callable (zval * callable , uint check_flags , zend_string * * callable_name)"		3863536	0					
ANR	3863538	CompoundStatement		3374:0:101585:101672	3863536	0					
ANR	3863539	ReturnStatement	"return zend_is_callable_ex ( callable , NULL , check_flags , callable_name , NULL , NULL ) ;"	3375:1:101588:101670	3863536	0	True				
ANR	3863540	CallExpression	"zend_is_callable_ex ( callable , NULL , check_flags , callable_name , NULL , NULL )"		3863536	0					
ANR	3863541	Callee	zend_is_callable_ex		3863536	0					
ANR	3863542	Identifier	zend_is_callable_ex		3863536	0					
ANR	3863543	ArgumentList	callable		3863536	1					
ANR	3863544	Argument	callable		3863536	0					
ANR	3863545	Identifier	callable		3863536	0					
ANR	3863546	Argument	NULL		3863536	1					
ANR	3863547	Identifier	NULL		3863536	0					
ANR	3863548	Argument	check_flags		3863536	2					
ANR	3863549	Identifier	check_flags		3863536	0					
ANR	3863550	Argument	callable_name		3863536	3					
ANR	3863551	Identifier	callable_name		3863536	0					
ANR	3863552	Argument	NULL		3863536	4					
ANR	3863553	Identifier	NULL		3863536	0					
ANR	3863554	Argument	NULL		3863536	5					
ANR	3863555	Identifier	NULL		3863536	0					
ANR	3863556	ReturnType	ZEND_API zend_bool		3863536	1					
ANR	3863557	Identifier	zend_is_callable		3863536	2					
ANR	3863558	ParameterList	"zval * callable , uint check_flags , zend_string * * callable_name"		3863536	3					
ANR	3863559	Parameter	zval * callable	3373:36:101512:101525	3863536	0	True				
ANR	3863560	ParameterType	zval *		3863536	0					
ANR	3863561	Identifier	callable		3863536	1					
ANR	3863562	Parameter	uint check_flags	3373:52:101528:101543	3863536	1	True				
ANR	3863563	ParameterType	uint		3863536	0					
ANR	3863564	Identifier	check_flags		3863536	1					
ANR	3863565	Parameter	zend_string * * callable_name	3373:70:101546:101572	3863536	2	True				
ANR	3863566	ParameterType	zend_string * *		3863536	0					
ANR	3863567	Identifier	callable_name		3863536	1					
ANR	3863568	CFGEntryNode	ENTRY		3863536		True				
ANR	3863569	CFGExitNode	EXIT		3863536		True				
ANR	3863570	Symbol	check_flags		3863536						
ANR	3863571	Symbol	callable		3863536						
ANR	3863572	Symbol	NULL		3863536						
ANR	3863573	Symbol	zend_is_callable_ex		3863536						
ANR	3863574	Symbol	callable_name		3863536						
ANR	3863575	Function	zend_make_callable	3379:0:101685:102651							
ANR	3863576	FunctionDef	"zend_make_callable (zval * callable , zend_string * * callable_name)"		3863575	0					
ANR	3863577	CompoundStatement		3380:0:101778:102651	3863575	0					
ANR	3863578	IdentifierDeclStatement	zend_fcall_info_cache fcc ;	3381:1:101781:101806	3863575	0	True				
ANR	3863579	IdentifierDecl	fcc		3863575	0					
ANR	3863580	IdentifierDeclType	zend_fcall_info_cache		3863575	0					
ANR	3863581	Identifier	fcc		3863575	1					
ANR	3863582	IfStatement	"if ( zend_is_callable_ex ( callable , NULL , IS_CALLABLE_STRICT , callable_name , & fcc , NULL ) )"		3863575	1					
ANR	3863583	Condition	"zend_is_callable_ex ( callable , NULL , IS_CALLABLE_STRICT , callable_name , & fcc , NULL )"	3383:5:101814:101895	3863575	0	True				
ANR	3863584	CallExpression	"zend_is_callable_ex ( callable , NULL , IS_CALLABLE_STRICT , callable_name , & fcc , NULL )"		3863575	0					
ANR	3863585	Callee	zend_is_callable_ex		3863575	0					
ANR	3863586	Identifier	zend_is_callable_ex		3863575	0					
ANR	3863587	ArgumentList	callable		3863575	1					
ANR	3863588	Argument	callable		3863575	0					
ANR	3863589	Identifier	callable		3863575	0					
ANR	3863590	Argument	NULL		3863575	1					
ANR	3863591	Identifier	NULL		3863575	0					
ANR	3863592	Argument	IS_CALLABLE_STRICT		3863575	2					
ANR	3863593	Identifier	IS_CALLABLE_STRICT		3863575	0					
ANR	3863594	Argument	callable_name		3863575	3					
ANR	3863595	Identifier	callable_name		3863575	0					
ANR	3863596	Argument	& fcc		3863575	4					
ANR	3863597	UnaryOperationExpression	& fcc		3863575	0					
ANR	3863598	UnaryOperator	&		3863575	0					
ANR	3863599	Identifier	fcc		3863575	1					
ANR	3863600	Argument	NULL		3863575	5					
ANR	3863601	Identifier	NULL		3863575	0					
ANR	3863602	CompoundStatement		4:89:119:119	3863575	1					
ANR	3863603	IfStatement	if ( Z_TYPE_P ( callable ) == IS_STRING && fcc . calling_scope )		3863575	0					
ANR	3863604	Condition	Z_TYPE_P ( callable ) == IS_STRING && fcc . calling_scope	3384:6:101906:101957	3863575	0	True				
ANR	3863605	AndExpression	Z_TYPE_P ( callable ) == IS_STRING && fcc . calling_scope		3863575	0		&&			
ANR	3863606	EqualityExpression	Z_TYPE_P ( callable ) == IS_STRING		3863575	0		==			
ANR	3863607	CallExpression	Z_TYPE_P ( callable )		3863575	0					
ANR	3863608	Callee	Z_TYPE_P		3863575	0					
ANR	3863609	Identifier	Z_TYPE_P		3863575	0					
ANR	3863610	ArgumentList	callable		3863575	1					
ANR	3863611	Argument	callable		3863575	0					
ANR	3863612	Identifier	callable		3863575	0					
ANR	3863613	Identifier	IS_STRING		3863575	1					
ANR	3863614	MemberAccess	fcc . calling_scope		3863575	1					
ANR	3863615	Identifier	fcc		3863575	0					
ANR	3863616	Identifier	calling_scope		3863575	1					
ANR	3863617	CompoundStatement		5:60:181:181	3863575	1					
ANR	3863618	ExpressionStatement	zval_dtor ( callable )	3385:3:101965:101984	3863575	0	True				
ANR	3863619	CallExpression	zval_dtor ( callable )		3863575	0					
ANR	3863620	Callee	zval_dtor		3863575	0					
ANR	3863621	Identifier	zval_dtor		3863575	0					
ANR	3863622	ArgumentList	callable		3863575	1					
ANR	3863623	Argument	callable		3863575	0					
ANR	3863624	Identifier	callable		3863575	0					
ANR	3863625	ExpressionStatement	array_init ( callable )	3386:3:101989:102009	3863575	1	True				
ANR	3863626	CallExpression	array_init ( callable )		3863575	0					
ANR	3863627	Callee	array_init		3863575	0					
ANR	3863628	Identifier	array_init		3863575	0					
ANR	3863629	ArgumentList	callable		3863575	1					
ANR	3863630	Argument	callable		3863575	0					
ANR	3863631	Identifier	callable		3863575	0					
ANR	3863632	ExpressionStatement	"add_next_index_str ( callable , zend_string_copy ( fcc . calling_scope -> name ) )"	3387:3:102014:102085	3863575	2	True				
ANR	3863633	CallExpression	"add_next_index_str ( callable , zend_string_copy ( fcc . calling_scope -> name ) )"		3863575	0					
ANR	3863634	Callee	add_next_index_str		3863575	0					
ANR	3863635	Identifier	add_next_index_str		3863575	0					
ANR	3863636	ArgumentList	callable		3863575	1					
ANR	3863637	Argument	callable		3863575	0					
ANR	3863638	Identifier	callable		3863575	0					
ANR	3863639	Argument	zend_string_copy ( fcc . calling_scope -> name )		3863575	1					
ANR	3863640	CallExpression	zend_string_copy ( fcc . calling_scope -> name )		3863575	0					
ANR	3863641	Callee	zend_string_copy		3863575	0					
ANR	3863642	Identifier	zend_string_copy		3863575	0					
ANR	3863643	ArgumentList	fcc . calling_scope -> name		3863575	1					
ANR	3863644	Argument	fcc . calling_scope -> name		3863575	0					
ANR	3863645	PtrMemberAccess	fcc . calling_scope -> name		3863575	0					
ANR	3863646	MemberAccess	fcc . calling_scope		3863575	0					
ANR	3863647	Identifier	fcc		3863575	0					
ANR	3863648	Identifier	calling_scope		3863575	1					
ANR	3863649	Identifier	name		3863575	1					
ANR	3863650	ExpressionStatement	"add_next_index_str ( callable , zend_string_copy ( fcc . function_handler -> common . function_name ) )"	3388:3:102090:102180	3863575	3	True				
ANR	3863651	CallExpression	"add_next_index_str ( callable , zend_string_copy ( fcc . function_handler -> common . function_name ) )"		3863575	0					
ANR	3863652	Callee	add_next_index_str		3863575	0					
ANR	3863653	Identifier	add_next_index_str		3863575	0					
ANR	3863654	ArgumentList	callable		3863575	1					
ANR	3863655	Argument	callable		3863575	0					
ANR	3863656	Identifier	callable		3863575	0					
ANR	3863657	Argument	zend_string_copy ( fcc . function_handler -> common . function_name )		3863575	1					
ANR	3863658	CallExpression	zend_string_copy ( fcc . function_handler -> common . function_name )		3863575	0					
ANR	3863659	Callee	zend_string_copy		3863575	0					
ANR	3863660	Identifier	zend_string_copy		3863575	0					
ANR	3863661	ArgumentList	fcc . function_handler -> common . function_name		3863575	1					
ANR	3863662	Argument	fcc . function_handler -> common . function_name		3863575	0					
ANR	3863663	MemberAccess	fcc . function_handler -> common . function_name		3863575	0					
ANR	3863664	PtrMemberAccess	fcc . function_handler -> common		3863575	0					
ANR	3863665	MemberAccess	fcc . function_handler		3863575	0					
ANR	3863666	Identifier	fcc		3863575	0					
ANR	3863667	Identifier	function_handler		3863575	1					
ANR	3863668	Identifier	common		3863575	1					
ANR	3863669	Identifier	function_name		3863575	1					
ANR	3863670	IfStatement	if ( fcc . function_handler && ( ( fcc . function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION ) )		3863575	1					
ANR	3863671	Condition	fcc . function_handler && ( ( fcc . function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION )	3390:6:102192:102430	3863575	0	True				
ANR	3863672	AndExpression	fcc . function_handler && ( ( fcc . function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION )		3863575	0		&&			
ANR	3863673	MemberAccess	fcc . function_handler		3863575	0					
ANR	3863674	Identifier	fcc		3863575	0					
ANR	3863675	Identifier	function_handler		3863575	1					
ANR	3863676	OrExpression	( fcc . function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE ) || fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION		3863575	1		||			
ANR	3863677	BitAndExpression	fcc . function_handler -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3863575	0		&			
ANR	3863678	MemberAccess	fcc . function_handler -> common . fn_flags		3863575	0					
ANR	3863679	PtrMemberAccess	fcc . function_handler -> common		3863575	0					
ANR	3863680	MemberAccess	fcc . function_handler		3863575	0					
ANR	3863681	Identifier	fcc		3863575	0					
ANR	3863682	Identifier	function_handler		3863575	1					
ANR	3863683	Identifier	common		3863575	1					
ANR	3863684	Identifier	fn_flags		3863575	1					
ANR	3863685	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3863575	1					
ANR	3863686	OrExpression	fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY || fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION		3863575	1		||			
ANR	3863687	EqualityExpression	fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION_TEMPORARY		3863575	0		==			
ANR	3863688	PtrMemberAccess	fcc . function_handler -> type		3863575	0					
ANR	3863689	MemberAccess	fcc . function_handler		3863575	0					
ANR	3863690	Identifier	fcc		3863575	0					
ANR	3863691	Identifier	function_handler		3863575	1					
ANR	3863692	Identifier	type		3863575	1					
ANR	3863693	Identifier	ZEND_OVERLOADED_FUNCTION_TEMPORARY		3863575	1					
ANR	3863694	EqualityExpression	fcc . function_handler -> type == ZEND_OVERLOADED_FUNCTION		3863575	1		==			
ANR	3863695	PtrMemberAccess	fcc . function_handler -> type		3863575	0					
ANR	3863696	MemberAccess	fcc . function_handler		3863575	0					
ANR	3863697	Identifier	fcc		3863575	0					
ANR	3863698	Identifier	function_handler		3863575	1					
ANR	3863699	Identifier	type		3863575	1					
ANR	3863700	Identifier	ZEND_OVERLOADED_FUNCTION		3863575	1					
ANR	3863701	CompoundStatement		14:64:654:654	3863575	1					
ANR	3863702	IfStatement	if ( fcc . function_handler -> type != ZEND_OVERLOADED_FUNCTION )		3863575	0					
ANR	3863703	Condition	fcc . function_handler -> type != ZEND_OVERLOADED_FUNCTION	3394:7:102442:102495	3863575	0	True				
ANR	3863704	EqualityExpression	fcc . function_handler -> type != ZEND_OVERLOADED_FUNCTION		3863575	0		!=			
ANR	3863705	PtrMemberAccess	fcc . function_handler -> type		3863575	0					
ANR	3863706	MemberAccess	fcc . function_handler		3863575	0					
ANR	3863707	Identifier	fcc		3863575	0					
ANR	3863708	Identifier	function_handler		3863575	1					
ANR	3863709	Identifier	type		3863575	1					
ANR	3863710	Identifier	ZEND_OVERLOADED_FUNCTION		3863575	1					
ANR	3863711	CompoundStatement		15:63:719:719	3863575	1					
ANR	3863712	ExpressionStatement	zend_string_release ( fcc . function_handler -> common . function_name )	3395:4:102504:102567	3863575	0	True				
ANR	3863713	CallExpression	zend_string_release ( fcc . function_handler -> common . function_name )		3863575	0					
ANR	3863714	Callee	zend_string_release		3863575	0					
ANR	3863715	Identifier	zend_string_release		3863575	0					
ANR	3863716	ArgumentList	fcc . function_handler -> common . function_name		3863575	1					
ANR	3863717	Argument	fcc . function_handler -> common . function_name		3863575	0					
ANR	3863718	MemberAccess	fcc . function_handler -> common . function_name		3863575	0					
ANR	3863719	PtrMemberAccess	fcc . function_handler -> common		3863575	0					
ANR	3863720	MemberAccess	fcc . function_handler		3863575	0					
ANR	3863721	Identifier	fcc		3863575	0					
ANR	3863722	Identifier	function_handler		3863575	1					
ANR	3863723	Identifier	common		3863575	1					
ANR	3863724	Identifier	function_name		3863575	1					
ANR	3863725	ExpressionStatement	zend_free_trampoline ( fcc . function_handler )	3397:3:102577:102619	3863575	1	True				
ANR	3863726	CallExpression	zend_free_trampoline ( fcc . function_handler )		3863575	0					
ANR	3863727	Callee	zend_free_trampoline		3863575	0					
ANR	3863728	Identifier	zend_free_trampoline		3863575	0					
ANR	3863729	ArgumentList	fcc . function_handler		3863575	1					
ANR	3863730	Argument	fcc . function_handler		3863575	0					
ANR	3863731	MemberAccess	fcc . function_handler		3863575	0					
ANR	3863732	Identifier	fcc		3863575	0					
ANR	3863733	Identifier	function_handler		3863575	1					
ANR	3863734	ReturnStatement	return 1 ;	3399:2:102627:102635	3863575	2	True				
ANR	3863735	PrimaryExpression	1		3863575	0					
ANR	3863736	ReturnStatement	return 0 ;	3401:1:102641:102649	3863575	2	True				
ANR	3863737	PrimaryExpression	0		3863575	0					
ANR	3863738	ReturnType	ZEND_API zend_bool		3863575	1					
ANR	3863739	Identifier	zend_make_callable		3863575	2					
ANR	3863740	ParameterList	"zval * callable , zend_string * * callable_name"		3863575	3					
ANR	3863741	Parameter	zval * callable	3379:38:101723:101736	3863575	0	True				
ANR	3863742	ParameterType	zval *		3863575	0					
ANR	3863743	Identifier	callable		3863575	1					
ANR	3863744	Parameter	zend_string * * callable_name	3379:54:101739:101765	3863575	1	True				
ANR	3863745	ParameterType	zend_string * *		3863575	0					
ANR	3863746	Identifier	callable_name		3863575	1					
ANR	3863747	CFGEntryNode	ENTRY		3863575		True				
ANR	3863748	CFGExitNode	EXIT		3863575		True				
ANR	3863749	Symbol	fcc . calling_scope -> name		3863575						
ANR	3863750	Symbol	callable		3863575						
ANR	3863751	Symbol	NULL		3863575						
ANR	3863752	Symbol	zend_is_callable_ex		3863575						
ANR	3863753	Symbol	fcc		3863575						
ANR	3863754	Symbol	fcc . function_handler		3863575						
ANR	3863755	Symbol	& fcc		3863575						
ANR	3863756	Symbol	fcc . calling_scope		3863575						
ANR	3863757	Symbol	zend_string_copy		3863575						
ANR	3863758	Symbol	ZEND_OVERLOADED_FUNCTION_TEMPORARY		3863575						
ANR	3863759	Symbol	ZEND_ACC_CALL_VIA_TRAMPOLINE		3863575						
ANR	3863760	Symbol	Z_TYPE_P		3863575						
ANR	3863761	Symbol	callable_name		3863575						
ANR	3863762	Symbol	* fcc . calling_scope		3863575						
ANR	3863763	Symbol	* fcc		3863575						
ANR	3863764	Symbol	fcc . function_handler -> common . fn_flags		3863575						
ANR	3863765	Symbol	IS_CALLABLE_STRICT		3863575						
ANR	3863766	Symbol	fcc . function_handler -> common		3863575						
ANR	3863767	Symbol	fcc . function_handler -> type		3863575						
ANR	3863768	Symbol	fcc . function_handler -> common . function_name		3863575						
ANR	3863769	Symbol	* fcc . function_handler		3863575						
ANR	3863770	Symbol	IS_STRING		3863575						
ANR	3863771	Symbol	ZEND_OVERLOADED_FUNCTION		3863575						
ANR	3863772	Function	zend_fcall_info_init	3405:0:102664:103285							
ANR	3863773	FunctionDef	"zend_fcall_info_init (zval * callable , uint check_flags , zend_fcall_info * fci , zend_fcall_info_cache * fcc , zend_string * * callable_name , char * * error)"		3863772	0					
ANR	3863774	CompoundStatement		3406:0:102835:103285	3863772	0					
ANR	3863775	IfStatement	"if ( ! zend_is_callable_ex ( callable , NULL , check_flags , callable_name , fcc , error ) )"		3863772	0					
ANR	3863776	Condition	"! zend_is_callable_ex ( callable , NULL , check_flags , callable_name , fcc , error )"	3407:5:102842:102917	3863772	0	True				
ANR	3863777	UnaryOperationExpression	"! zend_is_callable_ex ( callable , NULL , check_flags , callable_name , fcc , error )"		3863772	0					
ANR	3863778	UnaryOperator	!		3863772	0					
ANR	3863779	CallExpression	"zend_is_callable_ex ( callable , NULL , check_flags , callable_name , fcc , error )"		3863772	1					
ANR	3863780	Callee	zend_is_callable_ex		3863772	0					
ANR	3863781	Identifier	zend_is_callable_ex		3863772	0					
ANR	3863782	ArgumentList	callable		3863772	1					
ANR	3863783	Argument	callable		3863772	0					
ANR	3863784	Identifier	callable		3863772	0					
ANR	3863785	Argument	NULL		3863772	1					
ANR	3863786	Identifier	NULL		3863772	0					
ANR	3863787	Argument	check_flags		3863772	2					
ANR	3863788	Identifier	check_flags		3863772	0					
ANR	3863789	Argument	callable_name		3863772	3					
ANR	3863790	Identifier	callable_name		3863772	0					
ANR	3863791	Argument	fcc		3863772	4					
ANR	3863792	Identifier	fcc		3863772	0					
ANR	3863793	Argument	error		3863772	5					
ANR	3863794	Identifier	error		3863772	0					
ANR	3863795	CompoundStatement		2:83:84:84	3863772	1					
ANR	3863796	ReturnStatement	return FAILURE ;	3408:2:102924:102938	3863772	0	True				
ANR	3863797	Identifier	FAILURE		3863772	0					
ANR	3863798	ExpressionStatement	fci -> size = sizeof ( * fci )	3411:1:102945:102969	3863772	1	True				
ANR	3863799	AssignmentExpression	fci -> size = sizeof ( * fci )		3863772	0		=			
ANR	3863800	PtrMemberAccess	fci -> size		3863772	0					
ANR	3863801	Identifier	fci		3863772	0					
ANR	3863802	Identifier	size		3863772	1					
ANR	3863803	SizeofExpression	sizeof ( * fci )		3863772	1					
ANR	3863804	Sizeof	sizeof		3863772	0					
ANR	3863805	UnaryOperationExpression	* fci		3863772	1					
ANR	3863806	UnaryOperator	*		3863772	0					
ANR	3863807	Identifier	fci		3863772	1					
ANR	3863808	ExpressionStatement	fci -> function_table = fcc -> calling_scope ? & fcc -> calling_scope -> function_table : EG ( function_table )	3412:1:102972:103071	3863772	2	True				
ANR	3863809	AssignmentExpression	fci -> function_table = fcc -> calling_scope ? & fcc -> calling_scope -> function_table : EG ( function_table )		3863772	0		=			
ANR	3863810	PtrMemberAccess	fci -> function_table		3863772	0					
ANR	3863811	Identifier	fci		3863772	0					
ANR	3863812	Identifier	function_table		3863772	1					
ANR	3863813	ConditionalExpression	fcc -> calling_scope ? & fcc -> calling_scope -> function_table : EG ( function_table )		3863772	1					
ANR	3863814	Condition	fcc -> calling_scope		3863772	0					
ANR	3863815	PtrMemberAccess	fcc -> calling_scope		3863772	0					
ANR	3863816	Identifier	fcc		3863772	0					
ANR	3863817	Identifier	calling_scope		3863772	1					
ANR	3863818	UnaryOperationExpression	& fcc -> calling_scope -> function_table		3863772	1					
ANR	3863819	UnaryOperator	&		3863772	0					
ANR	3863820	PtrMemberAccess	fcc -> calling_scope -> function_table		3863772	1					
ANR	3863821	PtrMemberAccess	fcc -> calling_scope		3863772	0					
ANR	3863822	Identifier	fcc		3863772	0					
ANR	3863823	Identifier	calling_scope		3863772	1					
ANR	3863824	Identifier	function_table		3863772	1					
ANR	3863825	CallExpression	EG ( function_table )		3863772	2					
ANR	3863826	Callee	EG		3863772	0					
ANR	3863827	Identifier	EG		3863772	0					
ANR	3863828	ArgumentList	function_table		3863772	1					
ANR	3863829	Argument	function_table		3863772	0					
ANR	3863830	Identifier	function_table		3863772	0					
ANR	3863831	ExpressionStatement	fci -> object = fcc -> object	3413:1:103074:103099	3863772	3	True				
ANR	3863832	AssignmentExpression	fci -> object = fcc -> object		3863772	0		=			
ANR	3863833	PtrMemberAccess	fci -> object		3863772	0					
ANR	3863834	Identifier	fci		3863772	0					
ANR	3863835	Identifier	object		3863772	1					
ANR	3863836	PtrMemberAccess	fcc -> object		3863772	1					
ANR	3863837	Identifier	fcc		3863772	0					
ANR	3863838	Identifier	object		3863772	1					
ANR	3863839	ExpressionStatement	"ZVAL_COPY_VALUE ( & fci -> function_name , callable )"	3414:1:103102:103148	3863772	4	True				
ANR	3863840	CallExpression	"ZVAL_COPY_VALUE ( & fci -> function_name , callable )"		3863772	0					
ANR	3863841	Callee	ZVAL_COPY_VALUE		3863772	0					
ANR	3863842	Identifier	ZVAL_COPY_VALUE		3863772	0					
ANR	3863843	ArgumentList	& fci -> function_name		3863772	1					
ANR	3863844	Argument	& fci -> function_name		3863772	0					
ANR	3863845	UnaryOperationExpression	& fci -> function_name		3863772	0					
ANR	3863846	UnaryOperator	&		3863772	0					
ANR	3863847	PtrMemberAccess	fci -> function_name		3863772	1					
ANR	3863848	Identifier	fci		3863772	0					
ANR	3863849	Identifier	function_name		3863772	1					
ANR	3863850	Argument	callable		3863772	1					
ANR	3863851	Identifier	callable		3863772	0					
ANR	3863852	ExpressionStatement	fci -> retval = NULL	3415:1:103151:103169	3863772	5	True				
ANR	3863853	AssignmentExpression	fci -> retval = NULL		3863772	0		=			
ANR	3863854	PtrMemberAccess	fci -> retval		3863772	0					
ANR	3863855	Identifier	fci		3863772	0					
ANR	3863856	Identifier	retval		3863772	1					
ANR	3863857	Identifier	NULL		3863772	1					
ANR	3863858	ExpressionStatement	fci -> param_count = 0	3416:1:103172:103192	3863772	6	True				
ANR	3863859	AssignmentExpression	fci -> param_count = 0		3863772	0		=			
ANR	3863860	PtrMemberAccess	fci -> param_count		3863772	0					
ANR	3863861	Identifier	fci		3863772	0					
ANR	3863862	Identifier	param_count		3863772	1					
ANR	3863863	PrimaryExpression	0		3863772	1					
ANR	3863864	ExpressionStatement	fci -> params = NULL	3417:1:103195:103213	3863772	7	True				
ANR	3863865	AssignmentExpression	fci -> params = NULL		3863772	0		=			
ANR	3863866	PtrMemberAccess	fci -> params		3863772	0					
ANR	3863867	Identifier	fci		3863772	0					
ANR	3863868	Identifier	params		3863772	1					
ANR	3863869	Identifier	NULL		3863772	1					
ANR	3863870	ExpressionStatement	fci -> no_separation = 1	3418:1:103216:103238	3863772	8	True				
ANR	3863871	AssignmentExpression	fci -> no_separation = 1		3863772	0		=			
ANR	3863872	PtrMemberAccess	fci -> no_separation		3863772	0					
ANR	3863873	Identifier	fci		3863772	0					
ANR	3863874	Identifier	no_separation		3863772	1					
ANR	3863875	PrimaryExpression	1		3863772	1					
ANR	3863876	ExpressionStatement	fci -> symbol_table = NULL	3419:1:103241:103265	3863772	9	True				
ANR	3863877	AssignmentExpression	fci -> symbol_table = NULL		3863772	0		=			
ANR	3863878	PtrMemberAccess	fci -> symbol_table		3863772	0					
ANR	3863879	Identifier	fci		3863772	0					
ANR	3863880	Identifier	symbol_table		3863772	1					
ANR	3863881	Identifier	NULL		3863772	1					
ANR	3863882	ReturnStatement	return SUCCESS ;	3421:1:103269:103283	3863772	10	True				
ANR	3863883	Identifier	SUCCESS		3863772	0					
ANR	3863884	ReturnType	ZEND_API int		3863772	1					
ANR	3863885	Identifier	zend_fcall_info_init		3863772	2					
ANR	3863886	ParameterList	"zval * callable , uint check_flags , zend_fcall_info * fci , zend_fcall_info_cache * fcc , zend_string * * callable_name , char * * error"		3863772	3					
ANR	3863887	Parameter	zval * callable	3405:34:102698:102711	3863772	0	True				
ANR	3863888	ParameterType	zval *		3863772	0					
ANR	3863889	Identifier	callable		3863772	1					
ANR	3863890	Parameter	uint check_flags	3405:50:102714:102729	3863772	1	True				
ANR	3863891	ParameterType	uint		3863772	0					
ANR	3863892	Identifier	check_flags		3863772	1					
ANR	3863893	Parameter	zend_fcall_info * fci	3405:68:102732:102751	3863772	2	True				
ANR	3863894	ParameterType	zend_fcall_info *		3863772	0					
ANR	3863895	Identifier	fci		3863772	1					
ANR	3863896	Parameter	zend_fcall_info_cache * fcc	3405:90:102754:102779	3863772	3	True				
ANR	3863897	ParameterType	zend_fcall_info_cache *		3863772	0					
ANR	3863898	Identifier	fcc		3863772	1					
ANR	3863899	Parameter	zend_string * * callable_name	3405:118:102782:102808	3863772	4	True				
ANR	3863900	ParameterType	zend_string * *		3863772	0					
ANR	3863901	Identifier	callable_name		3863772	1					
ANR	3863902	Parameter	char * * error	3405:147:102811:102822	3863772	5	True				
ANR	3863903	ParameterType	char * *		3863772	0					
ANR	3863904	Identifier	error		3863772	1					
ANR	3863905	CFGEntryNode	ENTRY		3863772		True				
ANR	3863906	CFGExitNode	EXIT		3863772		True				
ANR	3863907	Symbol	fci -> object		3863772						
ANR	3863908	Symbol	callable		3863772						
ANR	3863909	Symbol	zend_is_callable_ex		3863772						
ANR	3863910	Symbol	& fcc -> calling_scope -> function_table		3863772						
ANR	3863911	Symbol	fci -> size		3863772						
ANR	3863912	Symbol	fcc		3863772						
ANR	3863913	Symbol	fcc -> calling_scope		3863772						
ANR	3863914	Symbol	* fci		3863772						
ANR	3863915	Symbol	error		3863772						
ANR	3863916	Symbol	fci		3863772						
ANR	3863917	Symbol	callable_name		3863772						
ANR	3863918	Symbol	fci -> symbol_table		3863772						
ANR	3863919	Symbol	* fcc		3863772						
ANR	3863920	Symbol	check_flags		3863772						
ANR	3863921	Symbol	fci -> retval		3863772						
ANR	3863922	Symbol	fci -> no_separation		3863772						
ANR	3863923	Symbol	EG		3863772						
ANR	3863924	Symbol	NULL		3863772						
ANR	3863925	Symbol	SUCCESS		3863772						
ANR	3863926	Symbol	fci -> params		3863772						
ANR	3863927	Symbol	fcc -> object		3863772						
ANR	3863928	Symbol	FAILURE		3863772						
ANR	3863929	Symbol	fci -> param_count		3863772						
ANR	3863930	Symbol	function_table		3863772						
ANR	3863931	Symbol	fci -> function_table		3863772						
ANR	3863932	Symbol	& fci -> function_name		3863772						
ANR	3863933	Function	zend_fcall_info_args_clear	3425:0:103298:103637							
ANR	3863934	FunctionDef	"zend_fcall_info_args_clear (zend_fcall_info * fci , int free_mem)"		3863933	0					
ANR	3863935	CompoundStatement		3426:0:103385:103637	3863933	0					
ANR	3863936	IfStatement	if ( fci -> params )		3863933	0					
ANR	3863937	Condition	fci -> params	3427:5:103392:103402	3863933	0	True				
ANR	3863938	PtrMemberAccess	fci -> params		3863933	0					
ANR	3863939	Identifier	fci		3863933	0					
ANR	3863940	Identifier	params		3863933	1					
ANR	3863941	CompoundStatement		4:2:48:80	3863933	1					
ANR	3863942	IdentifierDeclStatement	zval * p = fci -> params ;	3428:2:103409:103430	3863933	0	True				
ANR	3863943	IdentifierDecl	* p = fci -> params		3863933	0					
ANR	3863944	IdentifierDeclType	zval *		3863933	0					
ANR	3863945	Identifier	p		3863933	1					
ANR	3863946	AssignmentExpression	* p = fci -> params		3863933	2		=			
ANR	3863947	Identifier	p		3863933	0					
ANR	3863948	PtrMemberAccess	fci -> params		3863933	1					
ANR	3863949	Identifier	fci		3863933	0					
ANR	3863950	Identifier	params		3863933	1					
ANR	3863951	IdentifierDeclStatement	zval * end = p + fci -> param_count ;	3429:2:103434:103466	3863933	1	True				
ANR	3863952	IdentifierDecl	* end = p + fci -> param_count		3863933	0					
ANR	3863953	IdentifierDeclType	zval *		3863933	0					
ANR	3863954	Identifier	end		3863933	1					
ANR	3863955	AssignmentExpression	* end = p + fci -> param_count		3863933	2		=			
ANR	3863956	Identifier	end		3863933	0					
ANR	3863957	AdditiveExpression	p + fci -> param_count		3863933	1		+			
ANR	3863958	Identifier	p		3863933	0					
ANR	3863959	PtrMemberAccess	fci -> param_count		3863933	1					
ANR	3863960	Identifier	fci		3863933	0					
ANR	3863961	Identifier	param_count		3863933	1					
ANR	3863962	WhileStatement	while ( p != end )		3863933	2					
ANR	3863963	Condition	p != end	3431:9:103478:103485	3863933	0	True				
ANR	3863964	EqualityExpression	p != end		3863933	0		!=			
ANR	3863965	Identifier	p		3863933	0					
ANR	3863966	Identifier	end		3863933	1					
ANR	3863967	CompoundStatement		6:19:102:102	3863933	1					
ANR	3863968	Statement	i_zval_ptr_dtor	3432:3:103493:103507	3863933	0	True				
ANR	3863969	Statement	(	3432:18:103508:103508	3863933	1	True				
ANR	3863970	Statement	p	3432:19:103509:103509	3863933	2	True				
ANR	3863971	Statement	ZEND_FILE_LINE_CC	3432:21:103511:103527	3863933	3	True				
ANR	3863972	Statement	)	3432:38:103528:103528	3863933	4	True				
ANR	3863973	ExpressionStatement		3432:39:103529:103529	3863933	5	True				
ANR	3863974	ExpressionStatement	p ++	3433:3:103534:103537	3863933	6	True				
ANR	3863975	PostIncDecOperationExpression	p ++		3863933	0					
ANR	3863976	Identifier	p		3863933	0					
ANR	3863977	IncDec	++		3863933	1					
ANR	3863978	IfStatement	if ( free_mem )		3863933	3					
ANR	3863979	Condition	free_mem	3435:6:103549:103556	3863933	0	True				
ANR	3863980	Identifier	free_mem		3863933	0					
ANR	3863981	CompoundStatement		10:16:173:173	3863933	1					
ANR	3863982	ExpressionStatement	efree ( fci -> params )	3436:3:103564:103582	3863933	0	True				
ANR	3863983	CallExpression	efree ( fci -> params )		3863933	0					
ANR	3863984	Callee	efree		3863933	0					
ANR	3863985	Identifier	efree		3863933	0					
ANR	3863986	ArgumentList	fci -> params		3863933	1					
ANR	3863987	Argument	fci -> params		3863933	0					
ANR	3863988	PtrMemberAccess	fci -> params		3863933	0					
ANR	3863989	Identifier	fci		3863933	0					
ANR	3863990	Identifier	params		3863933	1					
ANR	3863991	ExpressionStatement	fci -> params = NULL	3437:3:103587:103605	3863933	1	True				
ANR	3863992	AssignmentExpression	fci -> params = NULL		3863933	0		=			
ANR	3863993	PtrMemberAccess	fci -> params		3863933	0					
ANR	3863994	Identifier	fci		3863933	0					
ANR	3863995	Identifier	params		3863933	1					
ANR	3863996	Identifier	NULL		3863933	1					
ANR	3863997	ExpressionStatement	fci -> param_count = 0	3440:1:103615:103635	3863933	1	True				
ANR	3863998	AssignmentExpression	fci -> param_count = 0		3863933	0		=			
ANR	3863999	PtrMemberAccess	fci -> param_count		3863933	0					
ANR	3864000	Identifier	fci		3863933	0					
ANR	3864001	Identifier	param_count		3863933	1					
ANR	3864002	PrimaryExpression	0		3863933	1					
ANR	3864003	ReturnType	ZEND_API void		3863933	1					
ANR	3864004	Identifier	zend_fcall_info_args_clear		3863933	2					
ANR	3864005	ParameterList	"zend_fcall_info * fci , int free_mem"		3863933	3					
ANR	3864006	Parameter	zend_fcall_info * fci	3425:41:103339:103358	3863933	0	True				
ANR	3864007	ParameterType	zend_fcall_info *		3863933	0					
ANR	3864008	Identifier	fci		3863933	1					
ANR	3864009	Parameter	int free_mem	3425:63:103361:103372	3863933	1	True				
ANR	3864010	ParameterType	int		3863933	0					
ANR	3864011	Identifier	free_mem		3863933	1					
ANR	3864012	CFGEntryNode	ENTRY		3863933		True				
ANR	3864013	CFGExitNode	EXIT		3863933		True				
ANR	3864014	Symbol	p		3863933						
ANR	3864015	Symbol	free_mem		3863933						
ANR	3864016	Symbol	NULL		3863933						
ANR	3864017	Symbol	fci -> params		3863933						
ANR	3864018	Symbol	fci -> param_count		3863933						
ANR	3864019	Symbol	* fci		3863933						
ANR	3864020	Symbol	end		3863933						
ANR	3864021	Symbol	fci		3863933						
ANR	3864022	Function	zend_fcall_info_args_save	3444:0:103650:103859							
ANR	3864023	FunctionDef	"zend_fcall_info_args_save (zend_fcall_info * fci , int * param_count , zval * * params)"		3864022	0					
ANR	3864024	CompoundStatement		3445:0:103755:103859	3864022	0					
ANR	3864025	ExpressionStatement	* param_count = fci -> param_count	3446:1:103758:103789	3864022	0	True				
ANR	3864026	AssignmentExpression	* param_count = fci -> param_count		3864022	0		=			
ANR	3864027	UnaryOperationExpression	* param_count		3864022	0					
ANR	3864028	UnaryOperator	*		3864022	0					
ANR	3864029	Identifier	param_count		3864022	1					
ANR	3864030	PtrMemberAccess	fci -> param_count		3864022	1					
ANR	3864031	Identifier	fci		3864022	0					
ANR	3864032	Identifier	param_count		3864022	1					
ANR	3864033	ExpressionStatement	* params = fci -> params	3447:1:103792:103813	3864022	1	True				
ANR	3864034	AssignmentExpression	* params = fci -> params		3864022	0		=			
ANR	3864035	UnaryOperationExpression	* params		3864022	0					
ANR	3864036	UnaryOperator	*		3864022	0					
ANR	3864037	Identifier	params		3864022	1					
ANR	3864038	PtrMemberAccess	fci -> params		3864022	1					
ANR	3864039	Identifier	fci		3864022	0					
ANR	3864040	Identifier	params		3864022	1					
ANR	3864041	ExpressionStatement	fci -> param_count = 0	3448:1:103816:103836	3864022	2	True				
ANR	3864042	AssignmentExpression	fci -> param_count = 0		3864022	0		=			
ANR	3864043	PtrMemberAccess	fci -> param_count		3864022	0					
ANR	3864044	Identifier	fci		3864022	0					
ANR	3864045	Identifier	param_count		3864022	1					
ANR	3864046	PrimaryExpression	0		3864022	1					
ANR	3864047	ExpressionStatement	fci -> params = NULL	3449:1:103839:103857	3864022	3	True				
ANR	3864048	AssignmentExpression	fci -> params = NULL		3864022	0		=			
ANR	3864049	PtrMemberAccess	fci -> params		3864022	0					
ANR	3864050	Identifier	fci		3864022	0					
ANR	3864051	Identifier	params		3864022	1					
ANR	3864052	Identifier	NULL		3864022	1					
ANR	3864053	ReturnType	ZEND_API void		3864022	1					
ANR	3864054	Identifier	zend_fcall_info_args_save		3864022	2					
ANR	3864055	ParameterList	"zend_fcall_info * fci , int * param_count , zval * * params"		3864022	3					
ANR	3864056	Parameter	zend_fcall_info * fci	3444:40:103690:103709	3864022	0	True				
ANR	3864057	ParameterType	zend_fcall_info *		3864022	0					
ANR	3864058	Identifier	fci		3864022	1					
ANR	3864059	Parameter	int * param_count	3444:62:103712:103727	3864022	1	True				
ANR	3864060	ParameterType	int *		3864022	0					
ANR	3864061	Identifier	param_count		3864022	1					
ANR	3864062	Parameter	zval * * params	3444:80:103730:103742	3864022	2	True				
ANR	3864063	ParameterType	zval * *		3864022	0					
ANR	3864064	Identifier	params		3864022	1					
ANR	3864065	CFGEntryNode	ENTRY		3864022		True				
ANR	3864066	CFGExitNode	EXIT		3864022		True				
ANR	3864067	Symbol	NULL		3864022						
ANR	3864068	Symbol	fci -> params		3864022						
ANR	3864069	Symbol	param_count		3864022						
ANR	3864070	Symbol	fci -> param_count		3864022						
ANR	3864071	Symbol	* fci		3864022						
ANR	3864072	Symbol	* param_count		3864022						
ANR	3864073	Symbol	params		3864022						
ANR	3864074	Symbol	fci		3864022						
ANR	3864075	Symbol	* params		3864022						
ANR	3864076	Function	zend_fcall_info_args_restore	3453:0:103872:104073							
ANR	3864077	FunctionDef	"zend_fcall_info_args_restore (zend_fcall_info * fci , int param_count , zval * params)"		3864076	0					
ANR	3864078	CompoundStatement		3454:0:103978:104073	3864076	0					
ANR	3864079	ExpressionStatement	"zend_fcall_info_args_clear ( fci , 1 )"	3455:1:103981:104015	3864076	0	True				
ANR	3864080	CallExpression	"zend_fcall_info_args_clear ( fci , 1 )"		3864076	0					
ANR	3864081	Callee	zend_fcall_info_args_clear		3864076	0					
ANR	3864082	Identifier	zend_fcall_info_args_clear		3864076	0					
ANR	3864083	ArgumentList	fci		3864076	1					
ANR	3864084	Argument	fci		3864076	0					
ANR	3864085	Identifier	fci		3864076	0					
ANR	3864086	Argument	1		3864076	1					
ANR	3864087	PrimaryExpression	1		3864076	0					
ANR	3864088	ExpressionStatement	fci -> param_count = param_count	3456:1:104018:104048	3864076	1	True				
ANR	3864089	AssignmentExpression	fci -> param_count = param_count		3864076	0		=			
ANR	3864090	PtrMemberAccess	fci -> param_count		3864076	0					
ANR	3864091	Identifier	fci		3864076	0					
ANR	3864092	Identifier	param_count		3864076	1					
ANR	3864093	Identifier	param_count		3864076	1					
ANR	3864094	ExpressionStatement	fci -> params = params	3457:1:104051:104071	3864076	2	True				
ANR	3864095	AssignmentExpression	fci -> params = params		3864076	0		=			
ANR	3864096	PtrMemberAccess	fci -> params		3864076	0					
ANR	3864097	Identifier	fci		3864076	0					
ANR	3864098	Identifier	params		3864076	1					
ANR	3864099	Identifier	params		3864076	1					
ANR	3864100	ReturnType	ZEND_API void		3864076	1					
ANR	3864101	Identifier	zend_fcall_info_args_restore		3864076	2					
ANR	3864102	ParameterList	"zend_fcall_info * fci , int param_count , zval * params"		3864076	3					
ANR	3864103	Parameter	zend_fcall_info * fci	3453:43:103915:103934	3864076	0	True				
ANR	3864104	ParameterType	zend_fcall_info *		3864076	0					
ANR	3864105	Identifier	fci		3864076	1					
ANR	3864106	Parameter	int param_count	3453:65:103937:103951	3864076	1	True				
ANR	3864107	ParameterType	int		3864076	0					
ANR	3864108	Identifier	param_count		3864076	1					
ANR	3864109	Parameter	zval * params	3453:82:103954:103965	3864076	2	True				
ANR	3864110	ParameterType	zval *		3864076	0					
ANR	3864111	Identifier	params		3864076	1					
ANR	3864112	CFGEntryNode	ENTRY		3864076		True				
ANR	3864113	CFGExitNode	EXIT		3864076		True				
ANR	3864114	Symbol	fci -> params		3864076						
ANR	3864115	Symbol	param_count		3864076						
ANR	3864116	Symbol	fci -> param_count		3864076						
ANR	3864117	Symbol	* fci		3864076						
ANR	3864118	Symbol	params		3864076						
ANR	3864119	Symbol	fci		3864076						
ANR	3864120	Function	zend_fcall_info_args_ex	3461:0:104086:104828							
ANR	3864121	FunctionDef	"zend_fcall_info_args_ex (zend_fcall_info * fci , zend_function * func , zval * args)"		3864120	0					
ANR	3864122	CompoundStatement		3462:0:104188:104828	3864120	0					
ANR	3864123	IdentifierDeclStatement	"zval * arg , * params ;"	3463:1:104191:104209	3864120	0	True				
ANR	3864124	IdentifierDecl	* arg		3864120	0					
ANR	3864125	IdentifierDeclType	zval *		3864120	0					
ANR	3864126	Identifier	arg		3864120	1					
ANR	3864127	IdentifierDecl	* params		3864120	1					
ANR	3864128	IdentifierDeclType	zval *		3864120	0					
ANR	3864129	Identifier	params		3864120	1					
ANR	3864130	IdentifierDeclStatement	uint32_t n = 1 ;	3464:1:104212:104226	3864120	1	True				
ANR	3864131	IdentifierDecl	n = 1		3864120	0					
ANR	3864132	IdentifierDeclType	uint32_t		3864120	0					
ANR	3864133	Identifier	n		3864120	1					
ANR	3864134	AssignmentExpression	n = 1		3864120	2		=			
ANR	3864135	Identifier	n		3864120	0					
ANR	3864136	PrimaryExpression	1		3864120	1					
ANR	3864137	ExpressionStatement	"zend_fcall_info_args_clear ( fci , ! args )"	3466:1:104230:104268	3864120	2	True				
ANR	3864138	CallExpression	"zend_fcall_info_args_clear ( fci , ! args )"		3864120	0					
ANR	3864139	Callee	zend_fcall_info_args_clear		3864120	0					
ANR	3864140	Identifier	zend_fcall_info_args_clear		3864120	0					
ANR	3864141	ArgumentList	fci		3864120	1					
ANR	3864142	Argument	fci		3864120	0					
ANR	3864143	Identifier	fci		3864120	0					
ANR	3864144	Argument	! args		3864120	1					
ANR	3864145	UnaryOperationExpression	! args		3864120	0					
ANR	3864146	UnaryOperator	!		3864120	0					
ANR	3864147	Identifier	args		3864120	1					
ANR	3864148	IfStatement	if ( ! args )		3864120	3					
ANR	3864149	Condition	! args	3468:5:104276:104280	3864120	0	True				
ANR	3864150	UnaryOperationExpression	! args		3864120	0					
ANR	3864151	UnaryOperator	!		3864120	0					
ANR	3864152	Identifier	args		3864120	1					
ANR	3864153	CompoundStatement		7:12:94:94	3864120	1					
ANR	3864154	ReturnStatement	return SUCCESS ;	3469:2:104287:104301	3864120	0	True				
ANR	3864155	Identifier	SUCCESS		3864120	0					
ANR	3864156	IfStatement	if ( Z_TYPE_P ( args ) != IS_ARRAY )		3864120	4					
ANR	3864157	Condition	Z_TYPE_P ( args ) != IS_ARRAY	3472:5:104312:104337	3864120	0	True				
ANR	3864158	EqualityExpression	Z_TYPE_P ( args ) != IS_ARRAY		3864120	0		!=			
ANR	3864159	CallExpression	Z_TYPE_P ( args )		3864120	0					
ANR	3864160	Callee	Z_TYPE_P		3864120	0					
ANR	3864161	Identifier	Z_TYPE_P		3864120	0					
ANR	3864162	ArgumentList	args		3864120	1					
ANR	3864163	Argument	args		3864120	0					
ANR	3864164	Identifier	args		3864120	0					
ANR	3864165	Identifier	IS_ARRAY		3864120	1					
ANR	3864166	CompoundStatement		11:33:151:151	3864120	1					
ANR	3864167	ReturnStatement	return FAILURE ;	3473:2:104344:104358	3864120	0	True				
ANR	3864168	Identifier	FAILURE		3864120	0					
ANR	3864169	ExpressionStatement	fci -> param_count = zend_hash_num_elements ( Z_ARRVAL_P ( args ) )	3476:1:104365:104424	3864120	5	True				
ANR	3864170	AssignmentExpression	fci -> param_count = zend_hash_num_elements ( Z_ARRVAL_P ( args ) )		3864120	0		=			
ANR	3864171	PtrMemberAccess	fci -> param_count		3864120	0					
ANR	3864172	Identifier	fci		3864120	0					
ANR	3864173	Identifier	param_count		3864120	1					
ANR	3864174	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( args ) )		3864120	1					
ANR	3864175	Callee	zend_hash_num_elements		3864120	0					
ANR	3864176	Identifier	zend_hash_num_elements		3864120	0					
ANR	3864177	ArgumentList	Z_ARRVAL_P ( args )		3864120	1					
ANR	3864178	Argument	Z_ARRVAL_P ( args )		3864120	0					
ANR	3864179	CallExpression	Z_ARRVAL_P ( args )		3864120	0					
ANR	3864180	Callee	Z_ARRVAL_P		3864120	0					
ANR	3864181	Identifier	Z_ARRVAL_P		3864120	0					
ANR	3864182	ArgumentList	args		3864120	1					
ANR	3864183	Argument	args		3864120	0					
ANR	3864184	Identifier	args		3864120	0					
ANR	3864185	ExpressionStatement	"fci -> params = params = ( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"	3477:1:104427:104513	3864120	6	True				
ANR	3864186	AssignmentExpression	"fci -> params = params = ( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864120	0		=			
ANR	3864187	PtrMemberAccess	fci -> params		3864120	0					
ANR	3864188	Identifier	fci		3864120	0					
ANR	3864189	Identifier	params		3864120	1					
ANR	3864190	AssignmentExpression	"params = ( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864120	1		=			
ANR	3864191	Identifier	params		3864120	0					
ANR	3864192	CastExpression	"( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864120	1					
ANR	3864193	CastTarget	zval *		3864120	0					
ANR	3864194	CallExpression	"erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864120	1					
ANR	3864195	Callee	erealloc		3864120	0					
ANR	3864196	Identifier	erealloc		3864120	0					
ANR	3864197	ArgumentList	fci -> params		3864120	1					
ANR	3864198	Argument	fci -> params		3864120	0					
ANR	3864199	PtrMemberAccess	fci -> params		3864120	0					
ANR	3864200	Identifier	fci		3864120	0					
ANR	3864201	Identifier	params		3864120	1					
ANR	3864202	Argument	fci -> param_count * sizeof ( zval )		3864120	1					
ANR	3864203	MultiplicativeExpression	fci -> param_count * sizeof ( zval )		3864120	0		*			
ANR	3864204	PtrMemberAccess	fci -> param_count		3864120	0					
ANR	3864205	Identifier	fci		3864120	0					
ANR	3864206	Identifier	param_count		3864120	1					
ANR	3864207	SizeofExpression	sizeof ( zval )		3864120	1					
ANR	3864208	Sizeof	sizeof		3864120	0					
ANR	3864209	SizeofOperand	zval		3864120	1					
ANR	3864210	Statement	ZEND_HASH_FOREACH_VAL	3479:1:104517:104537	3864120	7	True				
ANR	3864211	Statement	(	3479:22:104538:104538	3864120	8	True				
ANR	3864212	Statement	Z_ARRVAL_P	3479:23:104539:104548	3864120	9	True				
ANR	3864213	Statement	(	3479:33:104549:104549	3864120	10	True				
ANR	3864214	Statement	args	3479:34:104550:104553	3864120	11	True				
ANR	3864215	Statement	)	3479:38:104554:104554	3864120	12	True				
ANR	3864216	Statement	","	3479:39:104555:104555	3864120	13	True				
ANR	3864217	Statement	arg	3479:41:104557:104559	3864120	14	True				
ANR	3864218	Statement	)	3479:44:104560:104560	3864120	15	True				
ANR	3864219	CompoundStatement		18:46:373:373	3864120	16					
ANR	3864220	IfStatement	"if ( func && ! Z_ISREF_P ( arg ) && ARG_SHOULD_BE_SENT_BY_REF ( func , n ) )"		3864120	0					
ANR	3864221	Condition	"func && ! Z_ISREF_P ( arg ) && ARG_SHOULD_BE_SENT_BY_REF ( func , n )"	3480:6:104570:104630	3864120	0	True				
ANR	3864222	AndExpression	"func && ! Z_ISREF_P ( arg ) && ARG_SHOULD_BE_SENT_BY_REF ( func , n )"		3864120	0		&&			
ANR	3864223	Identifier	func		3864120	0					
ANR	3864224	AndExpression	"! Z_ISREF_P ( arg ) && ARG_SHOULD_BE_SENT_BY_REF ( func , n )"		3864120	1		&&			
ANR	3864225	UnaryOperationExpression	! Z_ISREF_P ( arg )		3864120	0					
ANR	3864226	UnaryOperator	!		3864120	0					
ANR	3864227	CallExpression	Z_ISREF_P ( arg )		3864120	1					
ANR	3864228	Callee	Z_ISREF_P		3864120	0					
ANR	3864229	Identifier	Z_ISREF_P		3864120	0					
ANR	3864230	ArgumentList	arg		3864120	1					
ANR	3864231	Argument	arg		3864120	0					
ANR	3864232	Identifier	arg		3864120	0					
ANR	3864233	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( func , n )"		3864120	1					
ANR	3864234	Callee	ARG_SHOULD_BE_SENT_BY_REF		3864120	0					
ANR	3864235	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3864120	0					
ANR	3864236	ArgumentList	func		3864120	1					
ANR	3864237	Argument	func		3864120	0					
ANR	3864238	Identifier	func		3864120	0					
ANR	3864239	Argument	n		3864120	1					
ANR	3864240	Identifier	n		3864120	0					
ANR	3864241	CompoundStatement		19:69:444:444	3864120	1					
ANR	3864242	ExpressionStatement	"ZVAL_NEW_REF ( params , arg )"	3481:3:104638:104663	3864120	0	True				
ANR	3864243	CallExpression	"ZVAL_NEW_REF ( params , arg )"		3864120	0					
ANR	3864244	Callee	ZVAL_NEW_REF		3864120	0					
ANR	3864245	Identifier	ZVAL_NEW_REF		3864120	0					
ANR	3864246	ArgumentList	params		3864120	1					
ANR	3864247	Argument	params		3864120	0					
ANR	3864248	Identifier	params		3864120	0					
ANR	3864249	Argument	arg		3864120	1					
ANR	3864250	Identifier	arg		3864120	0					
ANR	3864251	IfStatement	if ( Z_REFCOUNTED_P ( arg ) )		3864120	1					
ANR	3864252	Condition	Z_REFCOUNTED_P ( arg )	3482:7:104672:104690	3864120	0	True				
ANR	3864253	CallExpression	Z_REFCOUNTED_P ( arg )		3864120	0					
ANR	3864254	Callee	Z_REFCOUNTED_P		3864120	0					
ANR	3864255	Identifier	Z_REFCOUNTED_P		3864120	0					
ANR	3864256	ArgumentList	arg		3864120	1					
ANR	3864257	Argument	arg		3864120	0					
ANR	3864258	Identifier	arg		3864120	0					
ANR	3864259	CompoundStatement		21:28:504:504	3864120	1					
ANR	3864260	ExpressionStatement	Z_ADDREF_P ( arg )	3483:4:104699:104714	3864120	0	True				
ANR	3864261	CallExpression	Z_ADDREF_P ( arg )		3864120	0					
ANR	3864262	Callee	Z_ADDREF_P		3864120	0					
ANR	3864263	Identifier	Z_ADDREF_P		3864120	0					
ANR	3864264	ArgumentList	arg		3864120	1					
ANR	3864265	Argument	arg		3864120	0					
ANR	3864266	Identifier	arg		3864120	0					
ANR	3864267	ElseStatement	else		3864120	0					
ANR	3864268	CompoundStatement		24:9:541:541	3864120	0					
ANR	3864269	ExpressionStatement	"ZVAL_COPY ( params , arg )"	3486:3:104735:104757	3864120	0	True				
ANR	3864270	CallExpression	"ZVAL_COPY ( params , arg )"		3864120	0					
ANR	3864271	Callee	ZVAL_COPY		3864120	0					
ANR	3864272	Identifier	ZVAL_COPY		3864120	0					
ANR	3864273	ArgumentList	params		3864120	1					
ANR	3864274	Argument	params		3864120	0					
ANR	3864275	Identifier	params		3864120	0					
ANR	3864276	Argument	arg		3864120	1					
ANR	3864277	Identifier	arg		3864120	0					
ANR	3864278	ExpressionStatement	params ++	3488:2:104765:104773	3864120	1	True				
ANR	3864279	PostIncDecOperationExpression	params ++		3864120	0					
ANR	3864280	Identifier	params		3864120	0					
ANR	3864281	IncDec	++		3864120	1					
ANR	3864282	ExpressionStatement	n ++	3489:2:104777:104780	3864120	2	True				
ANR	3864283	PostIncDecOperationExpression	n ++		3864120	0					
ANR	3864284	Identifier	n		3864120	0					
ANR	3864285	IncDec	++		3864120	1					
ANR	3864286	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3490:3:104785:104808	3864120	17	True				
ANR	3864287	CallExpression	ZEND_HASH_FOREACH_END ( )		3864120	0					
ANR	3864288	Callee	ZEND_HASH_FOREACH_END		3864120	0					
ANR	3864289	Identifier	ZEND_HASH_FOREACH_END		3864120	0					
ANR	3864290	ArgumentList			3864120	1					
ANR	3864291	ReturnStatement	return SUCCESS ;	3492:1:104812:104826	3864120	18	True				
ANR	3864292	Identifier	SUCCESS		3864120	0					
ANR	3864293	ReturnType	ZEND_API int		3864120	1					
ANR	3864294	Identifier	zend_fcall_info_args_ex		3864120	2					
ANR	3864295	ParameterList	"zend_fcall_info * fci , zend_function * func , zval * args"		3864120	3					
ANR	3864296	Parameter	zend_fcall_info * fci	3461:37:104123:104142	3864120	0	True				
ANR	3864297	ParameterType	zend_fcall_info *		3864120	0					
ANR	3864298	Identifier	fci		3864120	1					
ANR	3864299	Parameter	zend_function * func	3461:59:104145:104163	3864120	1	True				
ANR	3864300	ParameterType	zend_function *		3864120	0					
ANR	3864301	Identifier	func		3864120	1					
ANR	3864302	Parameter	zval * args	3461:80:104166:104175	3864120	2	True				
ANR	3864303	ParameterType	zval *		3864120	0					
ANR	3864304	Identifier	args		3864120	1					
ANR	3864305	CFGEntryNode	ENTRY		3864120		True				
ANR	3864306	CFGExitNode	EXIT		3864120		True				
ANR	3864307	Symbol	ARG_SHOULD_BE_SENT_BY_REF		3864120						
ANR	3864308	Symbol	SUCCESS		3864120						
ANR	3864309	Symbol	fci -> params		3864120						
ANR	3864310	Symbol	zend_hash_num_elements		3864120						
ANR	3864311	Symbol	* fci		3864120						
ANR	3864312	Symbol	params		3864120						
ANR	3864313	Symbol	Z_TYPE_P		3864120						
ANR	3864314	Symbol	fci		3864120						
ANR	3864315	Symbol	FAILURE		3864120						
ANR	3864316	Symbol	n		3864120						
ANR	3864317	Symbol	args		3864120						
ANR	3864318	Symbol	func		3864120						
ANR	3864319	Symbol	IS_ARRAY		3864120						
ANR	3864320	Symbol	fci -> param_count		3864120						
ANR	3864321	Symbol	arg		3864120						
ANR	3864322	Symbol	Z_REFCOUNTED_P		3864120						
ANR	3864323	Symbol	Z_ARRVAL_P		3864120						
ANR	3864324	Symbol	erealloc		3864120						
ANR	3864325	Symbol	Z_ISREF_P		3864120						
ANR	3864326	Function	zend_fcall_info_args	3496:0:104841:104971							
ANR	3864327	FunctionDef	"zend_fcall_info_args (zend_fcall_info * fci , zval * args)"		3864326	0					
ANR	3864328	CompoundStatement		3497:0:104919:104971	3864326	0					
ANR	3864329	ReturnStatement	"return zend_fcall_info_args_ex ( fci , NULL , args ) ;"	3498:1:104922:104969	3864326	0	True				
ANR	3864330	CallExpression	"zend_fcall_info_args_ex ( fci , NULL , args )"		3864326	0					
ANR	3864331	Callee	zend_fcall_info_args_ex		3864326	0					
ANR	3864332	Identifier	zend_fcall_info_args_ex		3864326	0					
ANR	3864333	ArgumentList	fci		3864326	1					
ANR	3864334	Argument	fci		3864326	0					
ANR	3864335	Identifier	fci		3864326	0					
ANR	3864336	Argument	NULL		3864326	1					
ANR	3864337	Identifier	NULL		3864326	0					
ANR	3864338	Argument	args		3864326	2					
ANR	3864339	Identifier	args		3864326	0					
ANR	3864340	ReturnType	ZEND_API int		3864326	1					
ANR	3864341	Identifier	zend_fcall_info_args		3864326	2					
ANR	3864342	ParameterList	"zend_fcall_info * fci , zval * args"		3864326	3					
ANR	3864343	Parameter	zend_fcall_info * fci	3496:34:104875:104894	3864326	0	True				
ANR	3864344	ParameterType	zend_fcall_info *		3864326	0					
ANR	3864345	Identifier	fci		3864326	1					
ANR	3864346	Parameter	zval * args	3496:56:104897:104906	3864326	1	True				
ANR	3864347	ParameterType	zval *		3864326	0					
ANR	3864348	Identifier	args		3864326	1					
ANR	3864349	CFGEntryNode	ENTRY		3864326		True				
ANR	3864350	CFGExitNode	EXIT		3864326		True				
ANR	3864351	Symbol	args		3864326						
ANR	3864352	Symbol	zend_fcall_info_args_ex		3864326						
ANR	3864353	Symbol	NULL		3864326						
ANR	3864354	Symbol	fci		3864326						
ANR	3864355	Function	zend_fcall_info_argp	3502:0:104984:105383							
ANR	3864356	FunctionDef	"zend_fcall_info_argp (zend_fcall_info * fci , int argc , zval * argv)"		3864355	0					
ANR	3864357	CompoundStatement		3503:0:105072:105383	3864355	0					
ANR	3864358	IdentifierDeclStatement	int i ;	3504:1:105075:105080	3864355	0	True				
ANR	3864359	IdentifierDecl	i		3864355	0					
ANR	3864360	IdentifierDeclType	int		3864355	0					
ANR	3864361	Identifier	i		3864355	1					
ANR	3864362	IfStatement	if ( argc < 0 )		3864355	1					
ANR	3864363	Condition	argc < 0	3506:5:105088:105095	3864355	0	True				
ANR	3864364	RelationalExpression	argc < 0		3864355	0		<			
ANR	3864365	Identifier	argc		3864355	0					
ANR	3864366	PrimaryExpression	0		3864355	1					
ANR	3864367	CompoundStatement		4:15:25:25	3864355	1					
ANR	3864368	ReturnStatement	return FAILURE ;	3507:2:105102:105116	3864355	0	True				
ANR	3864369	Identifier	FAILURE		3864355	0					
ANR	3864370	ExpressionStatement	"zend_fcall_info_args_clear ( fci , ! argc )"	3510:1:105123:105161	3864355	2	True				
ANR	3864371	CallExpression	"zend_fcall_info_args_clear ( fci , ! argc )"		3864355	0					
ANR	3864372	Callee	zend_fcall_info_args_clear		3864355	0					
ANR	3864373	Identifier	zend_fcall_info_args_clear		3864355	0					
ANR	3864374	ArgumentList	fci		3864355	1					
ANR	3864375	Argument	fci		3864355	0					
ANR	3864376	Identifier	fci		3864355	0					
ANR	3864377	Argument	! argc		3864355	1					
ANR	3864378	UnaryOperationExpression	! argc		3864355	0					
ANR	3864379	UnaryOperator	!		3864355	0					
ANR	3864380	Identifier	argc		3864355	1					
ANR	3864381	IfStatement	if ( argc )		3864355	3					
ANR	3864382	Condition	argc	3512:5:105169:105172	3864355	0	True				
ANR	3864383	Identifier	argc		3864355	0					
ANR	3864384	CompoundStatement		10:11:102:102	3864355	1					
ANR	3864385	ExpressionStatement	fci -> param_count = argc	3513:2:105179:105202	3864355	0	True				
ANR	3864386	AssignmentExpression	fci -> param_count = argc		3864355	0		=			
ANR	3864387	PtrMemberAccess	fci -> param_count		3864355	0					
ANR	3864388	Identifier	fci		3864355	0					
ANR	3864389	Identifier	param_count		3864355	1					
ANR	3864390	Identifier	argc		3864355	1					
ANR	3864391	ExpressionStatement	"fci -> params = ( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"	3514:2:105206:105283	3864355	1	True				
ANR	3864392	AssignmentExpression	"fci -> params = ( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864355	0		=			
ANR	3864393	PtrMemberAccess	fci -> params		3864355	0					
ANR	3864394	Identifier	fci		3864355	0					
ANR	3864395	Identifier	params		3864355	1					
ANR	3864396	CastExpression	"( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864355	1					
ANR	3864397	CastTarget	zval *		3864355	0					
ANR	3864398	CallExpression	"erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864355	1					
ANR	3864399	Callee	erealloc		3864355	0					
ANR	3864400	Identifier	erealloc		3864355	0					
ANR	3864401	ArgumentList	fci -> params		3864355	1					
ANR	3864402	Argument	fci -> params		3864355	0					
ANR	3864403	PtrMemberAccess	fci -> params		3864355	0					
ANR	3864404	Identifier	fci		3864355	0					
ANR	3864405	Identifier	params		3864355	1					
ANR	3864406	Argument	fci -> param_count * sizeof ( zval )		3864355	1					
ANR	3864407	MultiplicativeExpression	fci -> param_count * sizeof ( zval )		3864355	0		*			
ANR	3864408	PtrMemberAccess	fci -> param_count		3864355	0					
ANR	3864409	Identifier	fci		3864355	0					
ANR	3864410	Identifier	param_count		3864355	1					
ANR	3864411	SizeofExpression	sizeof ( zval )		3864355	1					
ANR	3864412	Sizeof	sizeof		3864355	0					
ANR	3864413	SizeofOperand	zval		3864355	1					
ANR	3864414	ForStatement	for ( i = 0 ; i < argc ; ++ i )		3864355	2					
ANR	3864415	ForInit	i = 0 ;	3516:7:105293:105298	3864355	0	True				
ANR	3864416	AssignmentExpression	i = 0		3864355	0		=			
ANR	3864417	Identifier	i		3864355	0					
ANR	3864418	PrimaryExpression	0		3864355	1					
ANR	3864419	Condition	i < argc	3516:14:105300:105307	3864355	1	True				
ANR	3864420	RelationalExpression	i < argc		3864355	0		<			
ANR	3864421	Identifier	i		3864355	0					
ANR	3864422	Identifier	argc		3864355	1					
ANR	3864423	UnaryExpression	++ i	3516:24:105310:105312	3864355	2	True				
ANR	3864424	IncDec	++		3864355	0					
ANR	3864425	Identifier	i		3864355	1					
ANR	3864426	CompoundStatement		14:29:242:242	3864355	3					
ANR	3864427	ExpressionStatement	"ZVAL_COPY ( & fci -> params [ i ] , & argv [ i ] )"	3517:3:105320:105356	3864355	0	True				
ANR	3864428	CallExpression	"ZVAL_COPY ( & fci -> params [ i ] , & argv [ i ] )"		3864355	0					
ANR	3864429	Callee	ZVAL_COPY		3864355	0					
ANR	3864430	Identifier	ZVAL_COPY		3864355	0					
ANR	3864431	ArgumentList	& fci -> params [ i ]		3864355	1					
ANR	3864432	Argument	& fci -> params [ i ]		3864355	0					
ANR	3864433	UnaryOperationExpression	& fci -> params [ i ]		3864355	0					
ANR	3864434	UnaryOperator	&		3864355	0					
ANR	3864435	ArrayIndexing	fci -> params [ i ]		3864355	1					
ANR	3864436	PtrMemberAccess	fci -> params		3864355	0					
ANR	3864437	Identifier	fci		3864355	0					
ANR	3864438	Identifier	params		3864355	1					
ANR	3864439	Identifier	i		3864355	1					
ANR	3864440	Argument	& argv [ i ]		3864355	1					
ANR	3864441	UnaryOperationExpression	& argv [ i ]		3864355	0					
ANR	3864442	UnaryOperator	&		3864355	0					
ANR	3864443	ArrayIndexing	argv [ i ]		3864355	1					
ANR	3864444	Identifier	argv		3864355	0					
ANR	3864445	Identifier	i		3864355	1					
ANR	3864446	ReturnStatement	return SUCCESS ;	3521:1:105367:105381	3864355	4	True				
ANR	3864447	Identifier	SUCCESS		3864355	0					
ANR	3864448	ReturnType	ZEND_API int		3864355	1					
ANR	3864449	Identifier	zend_fcall_info_argp		3864355	2					
ANR	3864450	ParameterList	"zend_fcall_info * fci , int argc , zval * argv"		3864355	3					
ANR	3864451	Parameter	zend_fcall_info * fci	3502:34:105018:105037	3864355	0	True				
ANR	3864452	ParameterType	zend_fcall_info *		3864355	0					
ANR	3864453	Identifier	fci		3864355	1					
ANR	3864454	Parameter	int argc	3502:56:105040:105047	3864355	1	True				
ANR	3864455	ParameterType	int		3864355	0					
ANR	3864456	Identifier	argc		3864355	1					
ANR	3864457	Parameter	zval * argv	3502:66:105050:105059	3864355	2	True				
ANR	3864458	ParameterType	zval *		3864355	0					
ANR	3864459	Identifier	argv		3864355	1					
ANR	3864460	CFGEntryNode	ENTRY		3864355		True				
ANR	3864461	CFGExitNode	EXIT		3864355		True				
ANR	3864462	Symbol	argc		3864355						
ANR	3864463	Symbol	SUCCESS		3864355						
ANR	3864464	Symbol	fci -> params		3864355						
ANR	3864465	Symbol	fci -> param_count		3864355						
ANR	3864466	Symbol	i		3864355						
ANR	3864467	Symbol	* fci		3864355						
ANR	3864468	Symbol	fci		3864355						
ANR	3864469	Symbol	argv		3864355						
ANR	3864470	Symbol	FAILURE		3864355						
ANR	3864471	Symbol	erealloc		3864355						
ANR	3864472	Function	zend_fcall_info_argv	3525:0:105396:105837							
ANR	3864473	FunctionDef	"zend_fcall_info_argv (zend_fcall_info * fci , int argc , va_list * argv)"		3864472	0					
ANR	3864474	CompoundStatement		3526:0:105487:105837	3864472	0					
ANR	3864475	IdentifierDeclStatement	int i ;	3527:1:105490:105495	3864472	0	True				
ANR	3864476	IdentifierDecl	i		3864472	0					
ANR	3864477	IdentifierDeclType	int		3864472	0					
ANR	3864478	Identifier	i		3864472	1					
ANR	3864479	IdentifierDeclStatement	zval * arg ;	3528:1:105498:105507	3864472	1	True				
ANR	3864480	IdentifierDecl	* arg		3864472	0					
ANR	3864481	IdentifierDeclType	zval *		3864472	0					
ANR	3864482	Identifier	arg		3864472	1					
ANR	3864483	IfStatement	if ( argc < 0 )		3864472	2					
ANR	3864484	Condition	argc < 0	3530:5:105515:105522	3864472	0	True				
ANR	3864485	RelationalExpression	argc < 0		3864472	0		<			
ANR	3864486	Identifier	argc		3864472	0					
ANR	3864487	PrimaryExpression	0		3864472	1					
ANR	3864488	CompoundStatement		5:15:37:37	3864472	1					
ANR	3864489	ReturnStatement	return FAILURE ;	3531:2:105529:105543	3864472	0	True				
ANR	3864490	Identifier	FAILURE		3864472	0					
ANR	3864491	ExpressionStatement	"zend_fcall_info_args_clear ( fci , ! argc )"	3534:1:105550:105588	3864472	3	True				
ANR	3864492	CallExpression	"zend_fcall_info_args_clear ( fci , ! argc )"		3864472	0					
ANR	3864493	Callee	zend_fcall_info_args_clear		3864472	0					
ANR	3864494	Identifier	zend_fcall_info_args_clear		3864472	0					
ANR	3864495	ArgumentList	fci		3864472	1					
ANR	3864496	Argument	fci		3864472	0					
ANR	3864497	Identifier	fci		3864472	0					
ANR	3864498	Argument	! argc		3864472	1					
ANR	3864499	UnaryOperationExpression	! argc		3864472	0					
ANR	3864500	UnaryOperator	!		3864472	0					
ANR	3864501	Identifier	argc		3864472	1					
ANR	3864502	IfStatement	if ( argc )		3864472	4					
ANR	3864503	Condition	argc	3536:5:105596:105599	3864472	0	True				
ANR	3864504	Identifier	argc		3864472	0					
ANR	3864505	CompoundStatement		11:11:114:114	3864472	1					
ANR	3864506	ExpressionStatement	fci -> param_count = argc	3537:2:105606:105629	3864472	0	True				
ANR	3864507	AssignmentExpression	fci -> param_count = argc		3864472	0		=			
ANR	3864508	PtrMemberAccess	fci -> param_count		3864472	0					
ANR	3864509	Identifier	fci		3864472	0					
ANR	3864510	Identifier	param_count		3864472	1					
ANR	3864511	Identifier	argc		3864472	1					
ANR	3864512	ExpressionStatement	"fci -> params = ( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"	3538:2:105633:105710	3864472	1	True				
ANR	3864513	AssignmentExpression	"fci -> params = ( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864472	0		=			
ANR	3864514	PtrMemberAccess	fci -> params		3864472	0					
ANR	3864515	Identifier	fci		3864472	0					
ANR	3864516	Identifier	params		3864472	1					
ANR	3864517	CastExpression	"( zval * ) erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864472	1					
ANR	3864518	CastTarget	zval *		3864472	0					
ANR	3864519	CallExpression	"erealloc ( fci -> params , fci -> param_count * sizeof ( zval ) )"		3864472	1					
ANR	3864520	Callee	erealloc		3864472	0					
ANR	3864521	Identifier	erealloc		3864472	0					
ANR	3864522	ArgumentList	fci -> params		3864472	1					
ANR	3864523	Argument	fci -> params		3864472	0					
ANR	3864524	PtrMemberAccess	fci -> params		3864472	0					
ANR	3864525	Identifier	fci		3864472	0					
ANR	3864526	Identifier	params		3864472	1					
ANR	3864527	Argument	fci -> param_count * sizeof ( zval )		3864472	1					
ANR	3864528	MultiplicativeExpression	fci -> param_count * sizeof ( zval )		3864472	0		*			
ANR	3864529	PtrMemberAccess	fci -> param_count		3864472	0					
ANR	3864530	Identifier	fci		3864472	0					
ANR	3864531	Identifier	param_count		3864472	1					
ANR	3864532	SizeofExpression	sizeof ( zval )		3864472	1					
ANR	3864533	Sizeof	sizeof		3864472	0					
ANR	3864534	SizeofOperand	zval		3864472	1					
ANR	3864535	ForStatement	for ( i = 0 ; i < argc ; ++ i )		3864472	2					
ANR	3864536	ForInit	i = 0 ;	3540:7:105720:105725	3864472	0	True				
ANR	3864537	AssignmentExpression	i = 0		3864472	0		=			
ANR	3864538	Identifier	i		3864472	0					
ANR	3864539	PrimaryExpression	0		3864472	1					
ANR	3864540	Condition	i < argc	3540:14:105727:105734	3864472	1	True				
ANR	3864541	RelationalExpression	i < argc		3864472	0		<			
ANR	3864542	Identifier	i		3864472	0					
ANR	3864543	Identifier	argc		3864472	1					
ANR	3864544	UnaryExpression	++ i	3540:24:105737:105739	3864472	2	True				
ANR	3864545	IncDec	++		3864472	0					
ANR	3864546	Identifier	i		3864472	1					
ANR	3864547	CompoundStatement		15:29:254:254	3864472	3					
ANR	3864548	Statement	arg	3541:3:105747:105749	3864472	0	True				
ANR	3864549	Statement	=	3541:7:105751:105751	3864472	1	True				
ANR	3864550	Statement	va_arg	3541:9:105753:105758	3864472	2	True				
ANR	3864551	Statement	(	3541:15:105759:105759	3864472	3	True				
ANR	3864552	Statement	*	3541:16:105760:105760	3864472	4	True				
ANR	3864553	Statement	argv	3541:17:105761:105764	3864472	5	True				
ANR	3864554	Statement	","	3541:21:105765:105765	3864472	6	True				
ANR	3864555	Statement	zval	3541:23:105767:105770	3864472	7	True				
ANR	3864556	Statement	*	3541:28:105772:105772	3864472	8	True				
ANR	3864557	Statement	)	3541:29:105773:105773	3864472	9	True				
ANR	3864558	ExpressionStatement		3541:30:105774:105774	3864472	10	True				
ANR	3864559	ExpressionStatement	"ZVAL_COPY ( & fci -> params [ i ] , arg )"	3542:3:105779:105810	3864472	11	True				
ANR	3864560	CallExpression	"ZVAL_COPY ( & fci -> params [ i ] , arg )"		3864472	0					
ANR	3864561	Callee	ZVAL_COPY		3864472	0					
ANR	3864562	Identifier	ZVAL_COPY		3864472	0					
ANR	3864563	ArgumentList	& fci -> params [ i ]		3864472	1					
ANR	3864564	Argument	& fci -> params [ i ]		3864472	0					
ANR	3864565	UnaryOperationExpression	& fci -> params [ i ]		3864472	0					
ANR	3864566	UnaryOperator	&		3864472	0					
ANR	3864567	ArrayIndexing	fci -> params [ i ]		3864472	1					
ANR	3864568	PtrMemberAccess	fci -> params		3864472	0					
ANR	3864569	Identifier	fci		3864472	0					
ANR	3864570	Identifier	params		3864472	1					
ANR	3864571	Identifier	i		3864472	1					
ANR	3864572	Argument	arg		3864472	1					
ANR	3864573	Identifier	arg		3864472	0					
ANR	3864574	ReturnStatement	return SUCCESS ;	3546:1:105821:105835	3864472	5	True				
ANR	3864575	Identifier	SUCCESS		3864472	0					
ANR	3864576	ReturnType	ZEND_API int		3864472	1					
ANR	3864577	Identifier	zend_fcall_info_argv		3864472	2					
ANR	3864578	ParameterList	"zend_fcall_info * fci , int argc , va_list * argv"		3864472	3					
ANR	3864579	Parameter	zend_fcall_info * fci	3525:34:105430:105449	3864472	0	True				
ANR	3864580	ParameterType	zend_fcall_info *		3864472	0					
ANR	3864581	Identifier	fci		3864472	1					
ANR	3864582	Parameter	int argc	3525:56:105452:105459	3864472	1	True				
ANR	3864583	ParameterType	int		3864472	0					
ANR	3864584	Identifier	argc		3864472	1					
ANR	3864585	Parameter	va_list * argv	3525:66:105462:105474	3864472	2	True				
ANR	3864586	ParameterType	va_list *		3864472	0					
ANR	3864587	Identifier	argv		3864472	1					
ANR	3864588	CFGEntryNode	ENTRY		3864472		True				
ANR	3864589	CFGExitNode	EXIT		3864472		True				
ANR	3864590	Symbol	argc		3864472						
ANR	3864591	Symbol	SUCCESS		3864472						
ANR	3864592	Symbol	fci -> params		3864472						
ANR	3864593	Symbol	fci -> param_count		3864472						
ANR	3864594	Symbol	arg		3864472						
ANR	3864595	Symbol	i		3864472						
ANR	3864596	Symbol	* fci		3864472						
ANR	3864597	Symbol	fci		3864472						
ANR	3864598	Symbol	argv		3864472						
ANR	3864599	Symbol	FAILURE		3864472						
ANR	3864600	Symbol	erealloc		3864472						
ANR	3864601	Function	zend_fcall_info_argn	3550:0:105850:106058							
ANR	3864602	FunctionDef	"zend_fcall_info_argn (zend_fcall_info * fci , int argc)"		3864601	0					
ANR	3864603	CompoundStatement		3551:0:105931:106058	3864601	0					
ANR	3864604	IdentifierDeclStatement	int ret ;	3552:1:105934:105941	3864601	0	True				
ANR	3864605	IdentifierDecl	ret		3864601	0					
ANR	3864606	IdentifierDeclType	int		3864601	0					
ANR	3864607	Identifier	ret		3864601	1					
ANR	3864608	IdentifierDeclStatement	va_list argv ;	3553:1:105944:105956	3864601	1	True				
ANR	3864609	IdentifierDecl	argv		3864601	0					
ANR	3864610	IdentifierDeclType	va_list		3864601	0					
ANR	3864611	Identifier	argv		3864601	1					
ANR	3864612	ExpressionStatement	"va_start ( argv , argc )"	3555:1:105960:105980	3864601	2	True				
ANR	3864613	CallExpression	"va_start ( argv , argc )"		3864601	0					
ANR	3864614	Callee	va_start		3864601	0					
ANR	3864615	Identifier	va_start		3864601	0					
ANR	3864616	ArgumentList	argv		3864601	1					
ANR	3864617	Argument	argv		3864601	0					
ANR	3864618	Identifier	argv		3864601	0					
ANR	3864619	Argument	argc		3864601	1					
ANR	3864620	Identifier	argc		3864601	0					
ANR	3864621	ExpressionStatement	"ret = zend_fcall_info_argv ( fci , argc , & argv )"	3556:1:105983:106027	3864601	3	True				
ANR	3864622	AssignmentExpression	"ret = zend_fcall_info_argv ( fci , argc , & argv )"		3864601	0		=			
ANR	3864623	Identifier	ret		3864601	0					
ANR	3864624	CallExpression	"zend_fcall_info_argv ( fci , argc , & argv )"		3864601	1					
ANR	3864625	Callee	zend_fcall_info_argv		3864601	0					
ANR	3864626	Identifier	zend_fcall_info_argv		3864601	0					
ANR	3864627	ArgumentList	fci		3864601	1					
ANR	3864628	Argument	fci		3864601	0					
ANR	3864629	Identifier	fci		3864601	0					
ANR	3864630	Argument	argc		3864601	1					
ANR	3864631	Identifier	argc		3864601	0					
ANR	3864632	Argument	& argv		3864601	2					
ANR	3864633	UnaryOperationExpression	& argv		3864601	0					
ANR	3864634	UnaryOperator	&		3864601	0					
ANR	3864635	Identifier	argv		3864601	1					
ANR	3864636	ExpressionStatement	va_end ( argv )	3557:1:106030:106042	3864601	4	True				
ANR	3864637	CallExpression	va_end ( argv )		3864601	0					
ANR	3864638	Callee	va_end		3864601	0					
ANR	3864639	Identifier	va_end		3864601	0					
ANR	3864640	ArgumentList	argv		3864601	1					
ANR	3864641	Argument	argv		3864601	0					
ANR	3864642	Identifier	argv		3864601	0					
ANR	3864643	ReturnStatement	return ret ;	3559:1:106046:106056	3864601	5	True				
ANR	3864644	Identifier	ret		3864601	0					
ANR	3864645	ReturnType	ZEND_API int		3864601	1					
ANR	3864646	Identifier	zend_fcall_info_argn		3864601	2					
ANR	3864647	ParameterList	"zend_fcall_info * fci , int argc"		3864601	3					
ANR	3864648	Parameter	zend_fcall_info * fci	3550:34:105884:105903	3864601	0	True				
ANR	3864649	ParameterType	zend_fcall_info *		3864601	0					
ANR	3864650	Identifier	fci		3864601	1					
ANR	3864651	Parameter	int argc	3550:56:105906:105913	3864601	1	True				
ANR	3864652	ParameterType	int		3864601	0					
ANR	3864653	Identifier	argc		3864601	1					
ANR	3864654	CFGEntryNode	ENTRY		3864601		True				
ANR	3864655	CFGExitNode	EXIT		3864601		True				
ANR	3864656	Symbol	argc		3864601						
ANR	3864657	Symbol	ret		3864601						
ANR	3864658	Symbol	zend_fcall_info_argv		3864601						
ANR	3864659	Symbol	& argv		3864601						
ANR	3864660	Symbol	fci		3864601						
ANR	3864661	Symbol	argv		3864601						
ANR	3864662	Function	zend_fcall_info_call	3563:0:106071:106632							
ANR	3864663	FunctionDef	"zend_fcall_info_call (zend_fcall_info * fci , zend_fcall_info_cache * fcc , zval * retval_ptr , zval * args)"		3864662	0					
ANR	3864664	CompoundStatement		3564:0:106195:106632	3864662	0					
ANR	3864665	IdentifierDeclStatement	"zval retval , * org_params = NULL ;"	3565:1:106198:106229	3864662	0	True				
ANR	3864666	IdentifierDecl	retval		3864662	0					
ANR	3864667	IdentifierDeclType	zval		3864662	0					
ANR	3864668	Identifier	retval		3864662	1					
ANR	3864669	IdentifierDecl	* org_params = NULL		3864662	1					
ANR	3864670	IdentifierDeclType	zval *		3864662	0					
ANR	3864671	Identifier	org_params		3864662	1					
ANR	3864672	AssignmentExpression	* org_params = NULL		3864662	2		=			
ANR	3864673	Identifier	NULL		3864662	0					
ANR	3864674	Identifier	NULL		3864662	1					
ANR	3864675	IdentifierDeclStatement	"int result , org_count = 0 ;"	3566:1:106232:106257	3864662	1	True				
ANR	3864676	IdentifierDecl	result		3864662	0					
ANR	3864677	IdentifierDeclType	int		3864662	0					
ANR	3864678	Identifier	result		3864662	1					
ANR	3864679	IdentifierDecl	org_count = 0		3864662	1					
ANR	3864680	IdentifierDeclType	int		3864662	0					
ANR	3864681	Identifier	org_count		3864662	1					
ANR	3864682	AssignmentExpression	org_count = 0		3864662	2		=			
ANR	3864683	Identifier	org_count		3864662	0					
ANR	3864684	PrimaryExpression	0		3864662	1					
ANR	3864685	ExpressionStatement	fci -> retval = retval_ptr ? retval_ptr : & retval	3568:1:106261:106308	3864662	2	True				
ANR	3864686	AssignmentExpression	fci -> retval = retval_ptr ? retval_ptr : & retval		3864662	0		=			
ANR	3864687	PtrMemberAccess	fci -> retval		3864662	0					
ANR	3864688	Identifier	fci		3864662	0					
ANR	3864689	Identifier	retval		3864662	1					
ANR	3864690	ConditionalExpression	retval_ptr ? retval_ptr : & retval		3864662	1					
ANR	3864691	Condition	retval_ptr		3864662	0					
ANR	3864692	Identifier	retval_ptr		3864662	0					
ANR	3864693	Identifier	retval_ptr		3864662	1					
ANR	3864694	UnaryOperationExpression	& retval		3864662	2					
ANR	3864695	UnaryOperator	&		3864662	0					
ANR	3864696	Identifier	retval		3864662	1					
ANR	3864697	IfStatement	if ( args )		3864662	3					
ANR	3864698	Condition	args	3569:5:106315:106318	3864662	0	True				
ANR	3864699	Identifier	args		3864662	0					
ANR	3864700	CompoundStatement		6:11:125:125	3864662	1					
ANR	3864701	ExpressionStatement	"zend_fcall_info_args_save ( fci , & org_count , & org_params )"	3570:2:106325:106380	3864662	0	True				
ANR	3864702	CallExpression	"zend_fcall_info_args_save ( fci , & org_count , & org_params )"		3864662	0					
ANR	3864703	Callee	zend_fcall_info_args_save		3864662	0					
ANR	3864704	Identifier	zend_fcall_info_args_save		3864662	0					
ANR	3864705	ArgumentList	fci		3864662	1					
ANR	3864706	Argument	fci		3864662	0					
ANR	3864707	Identifier	fci		3864662	0					
ANR	3864708	Argument	& org_count		3864662	1					
ANR	3864709	UnaryOperationExpression	& org_count		3864662	0					
ANR	3864710	UnaryOperator	&		3864662	0					
ANR	3864711	Identifier	org_count		3864662	1					
ANR	3864712	Argument	& org_params		3864662	2					
ANR	3864713	UnaryOperationExpression	& org_params		3864662	0					
ANR	3864714	UnaryOperator	&		3864662	0					
ANR	3864715	Identifier	org_params		3864662	1					
ANR	3864716	ExpressionStatement	"zend_fcall_info_args ( fci , args )"	3571:2:106384:106415	3864662	1	True				
ANR	3864717	CallExpression	"zend_fcall_info_args ( fci , args )"		3864662	0					
ANR	3864718	Callee	zend_fcall_info_args		3864662	0					
ANR	3864719	Identifier	zend_fcall_info_args		3864662	0					
ANR	3864720	ArgumentList	fci		3864662	1					
ANR	3864721	Argument	fci		3864662	0					
ANR	3864722	Identifier	fci		3864662	0					
ANR	3864723	Argument	args		3864662	1					
ANR	3864724	Identifier	args		3864662	0					
ANR	3864725	ExpressionStatement	"result = zend_call_function ( fci , fcc )"	3573:1:106421:106458	3864662	4	True				
ANR	3864726	AssignmentExpression	"result = zend_call_function ( fci , fcc )"		3864662	0		=			
ANR	3864727	Identifier	result		3864662	0					
ANR	3864728	CallExpression	"zend_call_function ( fci , fcc )"		3864662	1					
ANR	3864729	Callee	zend_call_function		3864662	0					
ANR	3864730	Identifier	zend_call_function		3864662	0					
ANR	3864731	ArgumentList	fci		3864662	1					
ANR	3864732	Argument	fci		3864662	0					
ANR	3864733	Identifier	fci		3864662	0					
ANR	3864734	Argument	fcc		3864662	1					
ANR	3864735	Identifier	fcc		3864662	0					
ANR	3864736	IfStatement	if ( ! retval_ptr && Z_TYPE ( retval ) != IS_UNDEF )		3864662	5					
ANR	3864737	Condition	! retval_ptr && Z_TYPE ( retval ) != IS_UNDEF	3575:5:106466:106506	3864662	0	True				
ANR	3864738	AndExpression	! retval_ptr && Z_TYPE ( retval ) != IS_UNDEF		3864662	0		&&			
ANR	3864739	UnaryOperationExpression	! retval_ptr		3864662	0					
ANR	3864740	UnaryOperator	!		3864662	0					
ANR	3864741	Identifier	retval_ptr		3864662	1					
ANR	3864742	EqualityExpression	Z_TYPE ( retval ) != IS_UNDEF		3864662	1		!=			
ANR	3864743	CallExpression	Z_TYPE ( retval )		3864662	0					
ANR	3864744	Callee	Z_TYPE		3864662	0					
ANR	3864745	Identifier	Z_TYPE		3864662	0					
ANR	3864746	ArgumentList	retval		3864662	1					
ANR	3864747	Argument	retval		3864662	0					
ANR	3864748	Identifier	retval		3864662	0					
ANR	3864749	Identifier	IS_UNDEF		3864662	1					
ANR	3864750	CompoundStatement		12:48:313:313	3864662	1					
ANR	3864751	ExpressionStatement	zval_ptr_dtor ( & retval )	3576:2:106513:106535	3864662	0	True				
ANR	3864752	CallExpression	zval_ptr_dtor ( & retval )		3864662	0					
ANR	3864753	Callee	zval_ptr_dtor		3864662	0					
ANR	3864754	Identifier	zval_ptr_dtor		3864662	0					
ANR	3864755	ArgumentList	& retval		3864662	1					
ANR	3864756	Argument	& retval		3864662	0					
ANR	3864757	UnaryOperationExpression	& retval		3864662	0					
ANR	3864758	UnaryOperator	&		3864662	0					
ANR	3864759	Identifier	retval		3864662	1					
ANR	3864760	IfStatement	if ( args )		3864662	6					
ANR	3864761	Condition	args	3578:5:106545:106548	3864662	0	True				
ANR	3864762	Identifier	args		3864662	0					
ANR	3864763	CompoundStatement		15:11:355:355	3864662	1					
ANR	3864764	ExpressionStatement	"zend_fcall_info_args_restore ( fci , org_count , org_params )"	3579:2:106555:106611	3864662	0	True				
ANR	3864765	CallExpression	"zend_fcall_info_args_restore ( fci , org_count , org_params )"		3864662	0					
ANR	3864766	Callee	zend_fcall_info_args_restore		3864662	0					
ANR	3864767	Identifier	zend_fcall_info_args_restore		3864662	0					
ANR	3864768	ArgumentList	fci		3864662	1					
ANR	3864769	Argument	fci		3864662	0					
ANR	3864770	Identifier	fci		3864662	0					
ANR	3864771	Argument	org_count		3864662	1					
ANR	3864772	Identifier	org_count		3864662	0					
ANR	3864773	Argument	org_params		3864662	2					
ANR	3864774	Identifier	org_params		3864662	0					
ANR	3864775	ReturnStatement	return result ;	3581:1:106617:106630	3864662	7	True				
ANR	3864776	Identifier	result		3864662	0					
ANR	3864777	ReturnType	ZEND_API int		3864662	1					
ANR	3864778	Identifier	zend_fcall_info_call		3864662	2					
ANR	3864779	ParameterList	"zend_fcall_info * fci , zend_fcall_info_cache * fcc , zval * retval_ptr , zval * args"		3864662	3					
ANR	3864780	Parameter	zend_fcall_info * fci	3563:34:106105:106124	3864662	0	True				
ANR	3864781	ParameterType	zend_fcall_info *		3864662	0					
ANR	3864782	Identifier	fci		3864662	1					
ANR	3864783	Parameter	zend_fcall_info_cache * fcc	3563:56:106127:106152	3864662	1	True				
ANR	3864784	ParameterType	zend_fcall_info_cache *		3864662	0					
ANR	3864785	Identifier	fcc		3864662	1					
ANR	3864786	Parameter	zval * retval_ptr	3563:84:106155:106170	3864662	2	True				
ANR	3864787	ParameterType	zval *		3864662	0					
ANR	3864788	Identifier	retval_ptr		3864662	1					
ANR	3864789	Parameter	zval * args	3563:102:106173:106182	3864662	3	True				
ANR	3864790	ParameterType	zval *		3864662	0					
ANR	3864791	Identifier	args		3864662	1					
ANR	3864792	CFGEntryNode	ENTRY		3864662		True				
ANR	3864793	CFGExitNode	EXIT		3864662		True				
ANR	3864794	Symbol	& org_params		3864662						
ANR	3864795	Symbol	& org_count		3864662						
ANR	3864796	Symbol	NULL		3864662						
ANR	3864797	Symbol	org_count		3864662						
ANR	3864798	Symbol	org_params		3864662						
ANR	3864799	Symbol	fcc		3864662						
ANR	3864800	Symbol	* fci		3864662						
ANR	3864801	Symbol	Z_TYPE		3864662						
ANR	3864802	Symbol	fci		3864662						
ANR	3864803	Symbol	retval		3864662						
ANR	3864804	Symbol	retval_ptr		3864662						
ANR	3864805	Symbol	args		3864662						
ANR	3864806	Symbol	result		3864662						
ANR	3864807	Symbol	fci -> retval		3864662						
ANR	3864808	Symbol	& retval		3864662						
ANR	3864809	Symbol	zend_call_function		3864662						
ANR	3864810	Symbol	IS_UNDEF		3864662						
ANR	3864811	Function	zend_get_module_version	3585:9:106654:107044							
ANR	3864812	FunctionDef	zend_get_module_version (const char * module_name)		3864811	0					
ANR	3864813	CompoundStatement		3586:0:106725:107044	3864811	0					
ANR	3864814	IdentifierDeclStatement	zend_string * lname ;	3587:1:106728:106746	3864811	0	True				
ANR	3864815	IdentifierDecl	* lname		3864811	0					
ANR	3864816	IdentifierDeclType	zend_string *		3864811	0					
ANR	3864817	Identifier	lname		3864811	1					
ANR	3864818	IdentifierDeclStatement	size_t name_len = strlen ( module_name ) ;	3588:1:106749:106786	3864811	1	True				
ANR	3864819	IdentifierDecl	name_len = strlen ( module_name )		3864811	0					
ANR	3864820	IdentifierDeclType	size_t		3864811	0					
ANR	3864821	Identifier	name_len		3864811	1					
ANR	3864822	AssignmentExpression	name_len = strlen ( module_name )		3864811	2		=			
ANR	3864823	Identifier	name_len		3864811	0					
ANR	3864824	CallExpression	strlen ( module_name )		3864811	1					
ANR	3864825	Callee	strlen		3864811	0					
ANR	3864826	Identifier	strlen		3864811	0					
ANR	3864827	ArgumentList	module_name		3864811	1					
ANR	3864828	Argument	module_name		3864811	0					
ANR	3864829	Identifier	module_name		3864811	0					
ANR	3864830	IdentifierDeclStatement	zend_module_entry * module ;	3589:1:106789:106814	3864811	2	True				
ANR	3864831	IdentifierDecl	* module		3864811	0					
ANR	3864832	IdentifierDeclType	zend_module_entry *		3864811	0					
ANR	3864833	Identifier	module		3864811	1					
ANR	3864834	ExpressionStatement	"lname = zend_string_alloc ( name_len , 0 )"	3591:1:106818:106856	3864811	3	True				
ANR	3864835	AssignmentExpression	"lname = zend_string_alloc ( name_len , 0 )"		3864811	0		=			
ANR	3864836	Identifier	lname		3864811	0					
ANR	3864837	CallExpression	"zend_string_alloc ( name_len , 0 )"		3864811	1					
ANR	3864838	Callee	zend_string_alloc		3864811	0					
ANR	3864839	Identifier	zend_string_alloc		3864811	0					
ANR	3864840	ArgumentList	name_len		3864811	1					
ANR	3864841	Argument	name_len		3864811	0					
ANR	3864842	Identifier	name_len		3864811	0					
ANR	3864843	Argument	0		3864811	1					
ANR	3864844	PrimaryExpression	0		3864811	0					
ANR	3864845	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lname ) , module_name , name_len )"	3592:1:106859:106920	3864811	4	True				
ANR	3864846	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lname ) , module_name , name_len )"		3864811	0					
ANR	3864847	Callee	zend_str_tolower_copy		3864811	0					
ANR	3864848	Identifier	zend_str_tolower_copy		3864811	0					
ANR	3864849	ArgumentList	ZSTR_VAL ( lname )		3864811	1					
ANR	3864850	Argument	ZSTR_VAL ( lname )		3864811	0					
ANR	3864851	CallExpression	ZSTR_VAL ( lname )		3864811	0					
ANR	3864852	Callee	ZSTR_VAL		3864811	0					
ANR	3864853	Identifier	ZSTR_VAL		3864811	0					
ANR	3864854	ArgumentList	lname		3864811	1					
ANR	3864855	Argument	lname		3864811	0					
ANR	3864856	Identifier	lname		3864811	0					
ANR	3864857	Argument	module_name		3864811	1					
ANR	3864858	Identifier	module_name		3864811	0					
ANR	3864859	Argument	name_len		3864811	2					
ANR	3864860	Identifier	name_len		3864811	0					
ANR	3864861	ExpressionStatement	"module = zend_hash_find_ptr ( & module_registry , lname )"	3593:1:106923:106975	3864811	5	True				
ANR	3864862	AssignmentExpression	"module = zend_hash_find_ptr ( & module_registry , lname )"		3864811	0		=			
ANR	3864863	Identifier	module		3864811	0					
ANR	3864864	CallExpression	"zend_hash_find_ptr ( & module_registry , lname )"		3864811	1					
ANR	3864865	Callee	zend_hash_find_ptr		3864811	0					
ANR	3864866	Identifier	zend_hash_find_ptr		3864811	0					
ANR	3864867	ArgumentList	& module_registry		3864811	1					
ANR	3864868	Argument	& module_registry		3864811	0					
ANR	3864869	UnaryOperationExpression	& module_registry		3864811	0					
ANR	3864870	UnaryOperator	&		3864811	0					
ANR	3864871	Identifier	module_registry		3864811	1					
ANR	3864872	Argument	lname		3864811	1					
ANR	3864873	Identifier	lname		3864811	0					
ANR	3864874	ExpressionStatement	zend_string_free ( lname )	3594:1:106978:107001	3864811	6	True				
ANR	3864875	CallExpression	zend_string_free ( lname )		3864811	0					
ANR	3864876	Callee	zend_string_free		3864811	0					
ANR	3864877	Identifier	zend_string_free		3864811	0					
ANR	3864878	ArgumentList	lname		3864811	1					
ANR	3864879	Argument	lname		3864811	0					
ANR	3864880	Identifier	lname		3864811	0					
ANR	3864881	ReturnStatement	return module ? module -> version : NULL ;	3595:1:107004:107042	3864811	7	True				
ANR	3864882	ConditionalExpression	module ? module -> version : NULL		3864811	0					
ANR	3864883	Condition	module		3864811	0					
ANR	3864884	Identifier	module		3864811	0					
ANR	3864885	PtrMemberAccess	module -> version		3864811	1					
ANR	3864886	Identifier	module		3864811	0					
ANR	3864887	Identifier	version		3864811	1					
ANR	3864888	Identifier	NULL		3864811	2					
ANR	3864889	ReturnType	const char *		3864811	1					
ANR	3864890	Identifier	zend_get_module_version		3864811	2					
ANR	3864891	ParameterList	const char * module_name		3864811	3					
ANR	3864892	Parameter	const char * module_name	3585:45:106690:106712	3864811	0	True				
ANR	3864893	ParameterType	const char *		3864811	0					
ANR	3864894	Identifier	module_name		3864811	1					
ANR	3864895	CFGEntryNode	ENTRY		3864811		True				
ANR	3864896	CFGExitNode	EXIT		3864811		True				
ANR	3864897	Symbol	strlen		3864811						
ANR	3864898	Symbol	lname		3864811						
ANR	3864899	Symbol	zend_string_alloc		3864811						
ANR	3864900	Symbol	module -> version		3864811						
ANR	3864901	Symbol	NULL		3864811						
ANR	3864902	Symbol	* module		3864811						
ANR	3864903	Symbol	module		3864811						
ANR	3864904	Symbol	& module_registry		3864811						
ANR	3864905	Symbol	module_name		3864811						
ANR	3864906	Symbol	name_len		3864811						
ANR	3864907	Symbol	zend_hash_find_ptr		3864811						
ANR	3864908	Symbol	ZSTR_VAL		3864811						
ANR	3864909	Function	zend_declare_property_ex	3599:0:107057:110254							
ANR	3864910	FunctionDef	"zend_declare_property_ex (zend_class_entry * ce , zend_string * name , zval * property , int access_type , zend_string * doc_comment)"		3864909	0					
ANR	3864911	CompoundStatement		3600:0:107205:110254	3864909	0					
ANR	3864912	IdentifierDeclStatement	"zend_property_info * property_info , * property_info_ptr ;"	3601:1:107208:107261	3864909	0	True				
ANR	3864913	IdentifierDecl	* property_info		3864909	0					
ANR	3864914	IdentifierDeclType	zend_property_info *		3864909	0					
ANR	3864915	Identifier	property_info		3864909	1					
ANR	3864916	IdentifierDecl	* property_info_ptr		3864909	1					
ANR	3864917	IdentifierDeclType	zend_property_info *		3864909	0					
ANR	3864918	Identifier	property_info_ptr		3864909	1					
ANR	3864919	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		3864909	1					
ANR	3864920	Condition	ce -> type == ZEND_INTERNAL_CLASS	3603:5:107269:107299	3864909	0	True				
ANR	3864921	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3864909	0		==			
ANR	3864922	PtrMemberAccess	ce -> type		3864909	0					
ANR	3864923	Identifier	ce		3864909	0					
ANR	3864924	Identifier	type		3864909	1					
ANR	3864925	Identifier	ZEND_INTERNAL_CLASS		3864909	1					
ANR	3864926	CompoundStatement		4:38:96:96	3864909	1					
ANR	3864927	ExpressionStatement	"property_info = pemalloc ( sizeof ( zend_property_info ) , 1 )"	3604:2:107306:107361	3864909	0	True				
ANR	3864928	AssignmentExpression	"property_info = pemalloc ( sizeof ( zend_property_info ) , 1 )"		3864909	0		=			
ANR	3864929	Identifier	property_info		3864909	0					
ANR	3864930	CallExpression	"pemalloc ( sizeof ( zend_property_info ) , 1 )"		3864909	1					
ANR	3864931	Callee	pemalloc		3864909	0					
ANR	3864932	Identifier	pemalloc		3864909	0					
ANR	3864933	ArgumentList	sizeof ( zend_property_info )		3864909	1					
ANR	3864934	Argument	sizeof ( zend_property_info )		3864909	0					
ANR	3864935	SizeofExpression	sizeof ( zend_property_info )		3864909	0					
ANR	3864936	Sizeof	sizeof		3864909	0					
ANR	3864937	SizeofOperand	zend_property_info		3864909	1					
ANR	3864938	Argument	1		3864909	1					
ANR	3864939	PrimaryExpression	1		3864909	0					
ANR	3864940	IfStatement	if ( ( access_type & ZEND_ACC_STATIC ) || Z_CONSTANT_P ( property ) )		3864909	1					
ANR	3864941	Condition	( access_type & ZEND_ACC_STATIC ) || Z_CONSTANT_P ( property )	3605:6:107369:107425	3864909	0	True				
ANR	3864942	OrExpression	( access_type & ZEND_ACC_STATIC ) || Z_CONSTANT_P ( property )		3864909	0		||			
ANR	3864943	BitAndExpression	access_type & ZEND_ACC_STATIC		3864909	0		&			
ANR	3864944	Identifier	access_type		3864909	0					
ANR	3864945	Identifier	ZEND_ACC_STATIC		3864909	1					
ANR	3864946	CallExpression	Z_CONSTANT_P ( property )		3864909	1					
ANR	3864947	Callee	Z_CONSTANT_P		3864909	0					
ANR	3864948	Identifier	Z_CONSTANT_P		3864909	0					
ANR	3864949	ArgumentList	property		3864909	1					
ANR	3864950	Argument	property		3864909	0					
ANR	3864951	Identifier	property		3864909	0					
ANR	3864952	CompoundStatement		6:65:222:222	3864909	1					
ANR	3864953	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	3606:3:107433:107476	3864909	0	True				
ANR	3864954	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		3864909	0		&=			
ANR	3864955	PtrMemberAccess	ce -> ce_flags		3864909	0					
ANR	3864956	Identifier	ce		3864909	0					
ANR	3864957	Identifier	ce_flags		3864909	1					
ANR	3864958	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		3864909	1					
ANR	3864959	ElseStatement	else		3864909	0					
ANR	3864960	CompoundStatement		9:8:284:284	3864909	0					
ANR	3864961	ExpressionStatement	"property_info = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_property_info ) )"	3609:2:107494:107566	3864909	0	True				
ANR	3864962	AssignmentExpression	"property_info = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_property_info ) )"		3864909	0		=			
ANR	3864963	Identifier	property_info		3864909	0					
ANR	3864964	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_property_info ) )"		3864909	1					
ANR	3864965	Callee	zend_arena_alloc		3864909	0					
ANR	3864966	Identifier	zend_arena_alloc		3864909	0					
ANR	3864967	ArgumentList	& CG ( arena )		3864909	1					
ANR	3864968	Argument	& CG ( arena )		3864909	0					
ANR	3864969	UnaryOperationExpression	& CG ( arena )		3864909	0					
ANR	3864970	UnaryOperator	&		3864909	0					
ANR	3864971	CallExpression	CG ( arena )		3864909	1					
ANR	3864972	Callee	CG		3864909	0					
ANR	3864973	Identifier	CG		3864909	0					
ANR	3864974	ArgumentList	arena		3864909	1					
ANR	3864975	Argument	arena		3864909	0					
ANR	3864976	Identifier	arena		3864909	0					
ANR	3864977	Argument	sizeof ( zend_property_info )		3864909	1					
ANR	3864978	SizeofExpression	sizeof ( zend_property_info )		3864909	0					
ANR	3864979	Sizeof	sizeof		3864909	0					
ANR	3864980	SizeofOperand	zend_property_info		3864909	1					
ANR	3864981	IfStatement	if ( Z_CONSTANT_P ( property ) )		3864909	1					
ANR	3864982	Condition	Z_CONSTANT_P ( property )	3610:6:107574:107595	3864909	0	True				
ANR	3864983	CallExpression	Z_CONSTANT_P ( property )		3864909	0					
ANR	3864984	Callee	Z_CONSTANT_P		3864909	0					
ANR	3864985	Identifier	Z_CONSTANT_P		3864909	0					
ANR	3864986	ArgumentList	property		3864909	1					
ANR	3864987	Argument	property		3864909	0					
ANR	3864988	Identifier	property		3864909	0					
ANR	3864989	CompoundStatement		11:30:392:392	3864909	1					
ANR	3864990	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	3611:3:107603:107646	3864909	0	True				
ANR	3864991	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		3864909	0		&=			
ANR	3864992	PtrMemberAccess	ce -> ce_flags		3864909	0					
ANR	3864993	Identifier	ce		3864909	0					
ANR	3864994	Identifier	ce_flags		3864909	1					
ANR	3864995	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		3864909	1					
ANR	3864996	IfStatement	if ( ! ( access_type & ZEND_ACC_PPP_MASK ) )		3864909	2					
ANR	3864997	Condition	! ( access_type & ZEND_ACC_PPP_MASK )	3615:5:107661:107694	3864909	0	True				
ANR	3864998	UnaryOperationExpression	! ( access_type & ZEND_ACC_PPP_MASK )		3864909	0					
ANR	3864999	UnaryOperator	!		3864909	0					
ANR	3865000	BitAndExpression	access_type & ZEND_ACC_PPP_MASK		3864909	1		&			
ANR	3865001	Identifier	access_type		3864909	0					
ANR	3865002	Identifier	ZEND_ACC_PPP_MASK		3864909	1					
ANR	3865003	CompoundStatement		16:41:491:491	3864909	1					
ANR	3865004	ExpressionStatement	access_type |= ZEND_ACC_PUBLIC	3616:2:107701:107731	3864909	0	True				
ANR	3865005	AssignmentExpression	access_type |= ZEND_ACC_PUBLIC		3864909	0		|=			
ANR	3865006	Identifier	access_type		3864909	0					
ANR	3865007	Identifier	ZEND_ACC_PUBLIC		3864909	1					
ANR	3865008	IfStatement	if ( access_type & ZEND_ACC_STATIC )		3864909	3					
ANR	3865009	Condition	access_type & ZEND_ACC_STATIC	3618:5:107741:107769	3864909	0	True				
ANR	3865010	BitAndExpression	access_type & ZEND_ACC_STATIC		3864909	0		&			
ANR	3865011	Identifier	access_type		3864909	0					
ANR	3865012	Identifier	ZEND_ACC_STATIC		3864909	1					
ANR	3865013	CompoundStatement		19:36:566:566	3864909	1					
ANR	3865014	IfStatement	"if ( ( property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name ) ) != NULL && ( property_info_ptr -> flags & ZEND_ACC_STATIC ) != 0 )"		3864909	0					
ANR	3865015	Condition	"( property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name ) ) != NULL && ( property_info_ptr -> flags & ZEND_ACC_STATIC ) != 0"	3619:6:107780:107914	3864909	0	True				
ANR	3865016	AndExpression	"( property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name ) ) != NULL && ( property_info_ptr -> flags & ZEND_ACC_STATIC ) != 0"		3864909	0		&&			
ANR	3865017	EqualityExpression	"( property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name ) ) != NULL"		3864909	0		!=			
ANR	3865018	AssignmentExpression	"property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name )"		3864909	0		=			
ANR	3865019	Identifier	property_info_ptr		3864909	0					
ANR	3865020	CallExpression	"zend_hash_find_ptr ( & ce -> properties_info , name )"		3864909	1					
ANR	3865021	Callee	zend_hash_find_ptr		3864909	0					
ANR	3865022	Identifier	zend_hash_find_ptr		3864909	0					
ANR	3865023	ArgumentList	& ce -> properties_info		3864909	1					
ANR	3865024	Argument	& ce -> properties_info		3864909	0					
ANR	3865025	UnaryOperationExpression	& ce -> properties_info		3864909	0					
ANR	3865026	UnaryOperator	&		3864909	0					
ANR	3865027	PtrMemberAccess	ce -> properties_info		3864909	1					
ANR	3865028	Identifier	ce		3864909	0					
ANR	3865029	Identifier	properties_info		3864909	1					
ANR	3865030	Argument	name		3864909	1					
ANR	3865031	Identifier	name		3864909	0					
ANR	3865032	Identifier	NULL		3864909	1					
ANR	3865033	EqualityExpression	( property_info_ptr -> flags & ZEND_ACC_STATIC ) != 0		3864909	1		!=			
ANR	3865034	BitAndExpression	property_info_ptr -> flags & ZEND_ACC_STATIC		3864909	0		&			
ANR	3865035	PtrMemberAccess	property_info_ptr -> flags		3864909	0					
ANR	3865036	Identifier	property_info_ptr		3864909	0					
ANR	3865037	Identifier	flags		3864909	1					
ANR	3865038	Identifier	ZEND_ACC_STATIC		3864909	1					
ANR	3865039	PrimaryExpression	0		3864909	1					
ANR	3865040	CompoundStatement		21:57:711:711	3864909	1					
ANR	3865041	ExpressionStatement	property_info -> offset = property_info_ptr -> offset	3621:3:107922:107971	3864909	0	True				
ANR	3865042	AssignmentExpression	property_info -> offset = property_info_ptr -> offset		3864909	0		=			
ANR	3865043	PtrMemberAccess	property_info -> offset		3864909	0					
ANR	3865044	Identifier	property_info		3864909	0					
ANR	3865045	Identifier	offset		3864909	1					
ANR	3865046	PtrMemberAccess	property_info_ptr -> offset		3864909	1					
ANR	3865047	Identifier	property_info_ptr		3864909	0					
ANR	3865048	Identifier	offset		3864909	1					
ANR	3865049	ExpressionStatement	zval_ptr_dtor ( & ce -> default_static_members_table [ property_info -> offset ] )	3622:3:107976:108047	3864909	1	True				
ANR	3865050	CallExpression	zval_ptr_dtor ( & ce -> default_static_members_table [ property_info -> offset ] )		3864909	0					
ANR	3865051	Callee	zval_ptr_dtor		3864909	0					
ANR	3865052	Identifier	zval_ptr_dtor		3864909	0					
ANR	3865053	ArgumentList	& ce -> default_static_members_table [ property_info -> offset ]		3864909	1					
ANR	3865054	Argument	& ce -> default_static_members_table [ property_info -> offset ]		3864909	0					
ANR	3865055	UnaryOperationExpression	& ce -> default_static_members_table [ property_info -> offset ]		3864909	0					
ANR	3865056	UnaryOperator	&		3864909	0					
ANR	3865057	ArrayIndexing	ce -> default_static_members_table [ property_info -> offset ]		3864909	1					
ANR	3865058	PtrMemberAccess	ce -> default_static_members_table		3864909	0					
ANR	3865059	Identifier	ce		3864909	0					
ANR	3865060	Identifier	default_static_members_table		3864909	1					
ANR	3865061	PtrMemberAccess	property_info -> offset		3864909	1					
ANR	3865062	Identifier	property_info		3864909	0					
ANR	3865063	Identifier	offset		3864909	1					
ANR	3865064	ExpressionStatement	"zend_hash_del ( & ce -> properties_info , name )"	3623:3:108052:108093	3864909	2	True				
ANR	3865065	CallExpression	"zend_hash_del ( & ce -> properties_info , name )"		3864909	0					
ANR	3865066	Callee	zend_hash_del		3864909	0					
ANR	3865067	Identifier	zend_hash_del		3864909	0					
ANR	3865068	ArgumentList	& ce -> properties_info		3864909	1					
ANR	3865069	Argument	& ce -> properties_info		3864909	0					
ANR	3865070	UnaryOperationExpression	& ce -> properties_info		3864909	0					
ANR	3865071	UnaryOperator	&		3864909	0					
ANR	3865072	PtrMemberAccess	ce -> properties_info		3864909	1					
ANR	3865073	Identifier	ce		3864909	0					
ANR	3865074	Identifier	properties_info		3864909	1					
ANR	3865075	Argument	name		3864909	1					
ANR	3865076	Identifier	name		3864909	0					
ANR	3865077	ElseStatement	else		3864909	0					
ANR	3865078	CompoundStatement		25:9:898:898	3864909	0					
ANR	3865079	ExpressionStatement	property_info -> offset = ce -> default_static_members_count ++	3625:3:108109:108167	3864909	0	True				
ANR	3865080	AssignmentExpression	property_info -> offset = ce -> default_static_members_count ++		3864909	0		=			
ANR	3865081	PtrMemberAccess	property_info -> offset		3864909	0					
ANR	3865082	Identifier	property_info		3864909	0					
ANR	3865083	Identifier	offset		3864909	1					
ANR	3865084	PostIncDecOperationExpression	ce -> default_static_members_count ++		3864909	1					
ANR	3865085	PtrMemberAccess	ce -> default_static_members_count		3864909	0					
ANR	3865086	Identifier	ce		3864909	0					
ANR	3865087	Identifier	default_static_members_count		3864909	1					
ANR	3865088	IncDec	++		3864909	1					
ANR	3865089	ExpressionStatement	"ce -> default_static_members_table = perealloc ( ce -> default_static_members_table , sizeof ( zval ) * ce -> default_static_members_count , ce -> type == ZEND_INTERNAL_CLASS )"	3626:3:108172:108332	3864909	1	True				
ANR	3865090	AssignmentExpression	"ce -> default_static_members_table = perealloc ( ce -> default_static_members_table , sizeof ( zval ) * ce -> default_static_members_count , ce -> type == ZEND_INTERNAL_CLASS )"		3864909	0		=			
ANR	3865091	PtrMemberAccess	ce -> default_static_members_table		3864909	0					
ANR	3865092	Identifier	ce		3864909	0					
ANR	3865093	Identifier	default_static_members_table		3864909	1					
ANR	3865094	CallExpression	"perealloc ( ce -> default_static_members_table , sizeof ( zval ) * ce -> default_static_members_count , ce -> type == ZEND_INTERNAL_CLASS )"		3864909	1					
ANR	3865095	Callee	perealloc		3864909	0					
ANR	3865096	Identifier	perealloc		3864909	0					
ANR	3865097	ArgumentList	ce -> default_static_members_table		3864909	1					
ANR	3865098	Argument	ce -> default_static_members_table		3864909	0					
ANR	3865099	PtrMemberAccess	ce -> default_static_members_table		3864909	0					
ANR	3865100	Identifier	ce		3864909	0					
ANR	3865101	Identifier	default_static_members_table		3864909	1					
ANR	3865102	Argument	sizeof ( zval ) * ce -> default_static_members_count		3864909	1					
ANR	3865103	MultiplicativeExpression	sizeof ( zval ) * ce -> default_static_members_count		3864909	0		*			
ANR	3865104	SizeofExpression	sizeof ( zval )		3864909	0					
ANR	3865105	Sizeof	sizeof		3864909	0					
ANR	3865106	SizeofOperand	zval		3864909	1					
ANR	3865107	PtrMemberAccess	ce -> default_static_members_count		3864909	1					
ANR	3865108	Identifier	ce		3864909	0					
ANR	3865109	Identifier	default_static_members_count		3864909	1					
ANR	3865110	Argument	ce -> type == ZEND_INTERNAL_CLASS		3864909	2					
ANR	3865111	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3864909	0		==			
ANR	3865112	PtrMemberAccess	ce -> type		3864909	0					
ANR	3865113	Identifier	ce		3864909	0					
ANR	3865114	Identifier	type		3864909	1					
ANR	3865115	Identifier	ZEND_INTERNAL_CLASS		3864909	1					
ANR	3865116	ExpressionStatement	"ZVAL_COPY_VALUE ( & ce -> default_static_members_table [ property_info -> offset ] , property )"	3628:2:108340:108423	3864909	1	True				
ANR	3865117	CallExpression	"ZVAL_COPY_VALUE ( & ce -> default_static_members_table [ property_info -> offset ] , property )"		3864909	0					
ANR	3865118	Callee	ZVAL_COPY_VALUE		3864909	0					
ANR	3865119	Identifier	ZVAL_COPY_VALUE		3864909	0					
ANR	3865120	ArgumentList	& ce -> default_static_members_table [ property_info -> offset ]		3864909	1					
ANR	3865121	Argument	& ce -> default_static_members_table [ property_info -> offset ]		3864909	0					
ANR	3865122	UnaryOperationExpression	& ce -> default_static_members_table [ property_info -> offset ]		3864909	0					
ANR	3865123	UnaryOperator	&		3864909	0					
ANR	3865124	ArrayIndexing	ce -> default_static_members_table [ property_info -> offset ]		3864909	1					
ANR	3865125	PtrMemberAccess	ce -> default_static_members_table		3864909	0					
ANR	3865126	Identifier	ce		3864909	0					
ANR	3865127	Identifier	default_static_members_table		3864909	1					
ANR	3865128	PtrMemberAccess	property_info -> offset		3864909	1					
ANR	3865129	Identifier	property_info		3864909	0					
ANR	3865130	Identifier	offset		3864909	1					
ANR	3865131	Argument	property		3864909	1					
ANR	3865132	Identifier	property		3864909	0					
ANR	3865133	IfStatement	if ( ce -> type == ZEND_USER_CLASS )		3864909	2					
ANR	3865134	Condition	ce -> type == ZEND_USER_CLASS	3629:6:108431:108457	3864909	0	True				
ANR	3865135	EqualityExpression	ce -> type == ZEND_USER_CLASS		3864909	0		==			
ANR	3865136	PtrMemberAccess	ce -> type		3864909	0					
ANR	3865137	Identifier	ce		3864909	0					
ANR	3865138	Identifier	type		3864909	1					
ANR	3865139	Identifier	ZEND_USER_CLASS		3864909	1					
ANR	3865140	CompoundStatement		30:35:1254:1254	3864909	1					
ANR	3865141	ExpressionStatement	ce -> static_members_table = ce -> default_static_members_table	3630:3:108465:108524	3864909	0	True				
ANR	3865142	AssignmentExpression	ce -> static_members_table = ce -> default_static_members_table		3864909	0		=			
ANR	3865143	PtrMemberAccess	ce -> static_members_table		3864909	0					
ANR	3865144	Identifier	ce		3864909	0					
ANR	3865145	Identifier	static_members_table		3864909	1					
ANR	3865146	PtrMemberAccess	ce -> default_static_members_table		3864909	1					
ANR	3865147	Identifier	ce		3864909	0					
ANR	3865148	Identifier	default_static_members_table		3864909	1					
ANR	3865149	ElseStatement	else		3864909	0					
ANR	3865150	CompoundStatement		33:8:1332:1332	3864909	0					
ANR	3865151	IfStatement	"if ( ( property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name ) ) != NULL && ( property_info_ptr -> flags & ZEND_ACC_STATIC ) == 0 )"		3864909	0					
ANR	3865152	Condition	"( property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name ) ) != NULL && ( property_info_ptr -> flags & ZEND_ACC_STATIC ) == 0"	3633:6:108546:108680	3864909	0	True				
ANR	3865153	AndExpression	"( property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name ) ) != NULL && ( property_info_ptr -> flags & ZEND_ACC_STATIC ) == 0"		3864909	0		&&			
ANR	3865154	EqualityExpression	"( property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name ) ) != NULL"		3864909	0		!=			
ANR	3865155	AssignmentExpression	"property_info_ptr = zend_hash_find_ptr ( & ce -> properties_info , name )"		3864909	0		=			
ANR	3865156	Identifier	property_info_ptr		3864909	0					
ANR	3865157	CallExpression	"zend_hash_find_ptr ( & ce -> properties_info , name )"		3864909	1					
ANR	3865158	Callee	zend_hash_find_ptr		3864909	0					
ANR	3865159	Identifier	zend_hash_find_ptr		3864909	0					
ANR	3865160	ArgumentList	& ce -> properties_info		3864909	1					
ANR	3865161	Argument	& ce -> properties_info		3864909	0					
ANR	3865162	UnaryOperationExpression	& ce -> properties_info		3864909	0					
ANR	3865163	UnaryOperator	&		3864909	0					
ANR	3865164	PtrMemberAccess	ce -> properties_info		3864909	1					
ANR	3865165	Identifier	ce		3864909	0					
ANR	3865166	Identifier	properties_info		3864909	1					
ANR	3865167	Argument	name		3864909	1					
ANR	3865168	Identifier	name		3864909	0					
ANR	3865169	Identifier	NULL		3864909	1					
ANR	3865170	EqualityExpression	( property_info_ptr -> flags & ZEND_ACC_STATIC ) == 0		3864909	1		==			
ANR	3865171	BitAndExpression	property_info_ptr -> flags & ZEND_ACC_STATIC		3864909	0		&			
ANR	3865172	PtrMemberAccess	property_info_ptr -> flags		3864909	0					
ANR	3865173	Identifier	property_info_ptr		3864909	0					
ANR	3865174	Identifier	flags		3864909	1					
ANR	3865175	Identifier	ZEND_ACC_STATIC		3864909	1					
ANR	3865176	PrimaryExpression	0		3864909	1					
ANR	3865177	CompoundStatement		35:57:1477:1477	3864909	1					
ANR	3865178	ExpressionStatement	property_info -> offset = property_info_ptr -> offset	3635:3:108688:108737	3864909	0	True				
ANR	3865179	AssignmentExpression	property_info -> offset = property_info_ptr -> offset		3864909	0		=			
ANR	3865180	PtrMemberAccess	property_info -> offset		3864909	0					
ANR	3865181	Identifier	property_info		3864909	0					
ANR	3865182	Identifier	offset		3864909	1					
ANR	3865183	PtrMemberAccess	property_info_ptr -> offset		3864909	1					
ANR	3865184	Identifier	property_info_ptr		3864909	0					
ANR	3865185	Identifier	offset		3864909	1					
ANR	3865186	ExpressionStatement	zval_ptr_dtor ( & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] )	3636:3:108742:108826	3864909	1	True				
ANR	3865187	CallExpression	zval_ptr_dtor ( & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] )		3864909	0					
ANR	3865188	Callee	zval_ptr_dtor		3864909	0					
ANR	3865189	Identifier	zval_ptr_dtor		3864909	0					
ANR	3865190	ArgumentList	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		3864909	1					
ANR	3865191	Argument	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		3864909	0					
ANR	3865192	UnaryOperationExpression	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		3864909	0					
ANR	3865193	UnaryOperator	&		3864909	0					
ANR	3865194	ArrayIndexing	ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		3864909	1					
ANR	3865195	PtrMemberAccess	ce -> default_properties_table		3864909	0					
ANR	3865196	Identifier	ce		3864909	0					
ANR	3865197	Identifier	default_properties_table		3864909	1					
ANR	3865198	CallExpression	OBJ_PROP_TO_NUM ( property_info -> offset )		3864909	1					
ANR	3865199	Callee	OBJ_PROP_TO_NUM		3864909	0					
ANR	3865200	Identifier	OBJ_PROP_TO_NUM		3864909	0					
ANR	3865201	ArgumentList	property_info -> offset		3864909	1					
ANR	3865202	Argument	property_info -> offset		3864909	0					
ANR	3865203	PtrMemberAccess	property_info -> offset		3864909	0					
ANR	3865204	Identifier	property_info		3864909	0					
ANR	3865205	Identifier	offset		3864909	1					
ANR	3865206	ExpressionStatement	"zend_hash_del ( & ce -> properties_info , name )"	3637:3:108831:108872	3864909	2	True				
ANR	3865207	CallExpression	"zend_hash_del ( & ce -> properties_info , name )"		3864909	0					
ANR	3865208	Callee	zend_hash_del		3864909	0					
ANR	3865209	Identifier	zend_hash_del		3864909	0					
ANR	3865210	ArgumentList	& ce -> properties_info		3864909	1					
ANR	3865211	Argument	& ce -> properties_info		3864909	0					
ANR	3865212	UnaryOperationExpression	& ce -> properties_info		3864909	0					
ANR	3865213	UnaryOperator	&		3864909	0					
ANR	3865214	PtrMemberAccess	ce -> properties_info		3864909	1					
ANR	3865215	Identifier	ce		3864909	0					
ANR	3865216	Identifier	properties_info		3864909	1					
ANR	3865217	Argument	name		3864909	1					
ANR	3865218	Identifier	name		3864909	0					
ANR	3865219	ElseStatement	else		3864909	0					
ANR	3865220	CompoundStatement		39:9:1677:1677	3864909	0					
ANR	3865221	ExpressionStatement	property_info -> offset = OBJ_PROP_TO_OFFSET ( ce -> default_properties_count )	3639:3:108888:108960	3864909	0	True				
ANR	3865222	AssignmentExpression	property_info -> offset = OBJ_PROP_TO_OFFSET ( ce -> default_properties_count )		3864909	0		=			
ANR	3865223	PtrMemberAccess	property_info -> offset		3864909	0					
ANR	3865224	Identifier	property_info		3864909	0					
ANR	3865225	Identifier	offset		3864909	1					
ANR	3865226	CallExpression	OBJ_PROP_TO_OFFSET ( ce -> default_properties_count )		3864909	1					
ANR	3865227	Callee	OBJ_PROP_TO_OFFSET		3864909	0					
ANR	3865228	Identifier	OBJ_PROP_TO_OFFSET		3864909	0					
ANR	3865229	ArgumentList	ce -> default_properties_count		3864909	1					
ANR	3865230	Argument	ce -> default_properties_count		3864909	0					
ANR	3865231	PtrMemberAccess	ce -> default_properties_count		3864909	0					
ANR	3865232	Identifier	ce		3864909	0					
ANR	3865233	Identifier	default_properties_count		3864909	1					
ANR	3865234	ExpressionStatement	ce -> default_properties_count ++	3640:3:108965:108995	3864909	1	True				
ANR	3865235	PostIncDecOperationExpression	ce -> default_properties_count ++		3864909	0					
ANR	3865236	PtrMemberAccess	ce -> default_properties_count		3864909	0					
ANR	3865237	Identifier	ce		3864909	0					
ANR	3865238	Identifier	default_properties_count		3864909	1					
ANR	3865239	IncDec	++		3864909	1					
ANR	3865240	ExpressionStatement	"ce -> default_properties_table = perealloc ( ce -> default_properties_table , sizeof ( zval ) * ce -> default_properties_count , ce -> type == ZEND_INTERNAL_CLASS )"	3641:3:109000:109148	3864909	2	True				
ANR	3865241	AssignmentExpression	"ce -> default_properties_table = perealloc ( ce -> default_properties_table , sizeof ( zval ) * ce -> default_properties_count , ce -> type == ZEND_INTERNAL_CLASS )"		3864909	0		=			
ANR	3865242	PtrMemberAccess	ce -> default_properties_table		3864909	0					
ANR	3865243	Identifier	ce		3864909	0					
ANR	3865244	Identifier	default_properties_table		3864909	1					
ANR	3865245	CallExpression	"perealloc ( ce -> default_properties_table , sizeof ( zval ) * ce -> default_properties_count , ce -> type == ZEND_INTERNAL_CLASS )"		3864909	1					
ANR	3865246	Callee	perealloc		3864909	0					
ANR	3865247	Identifier	perealloc		3864909	0					
ANR	3865248	ArgumentList	ce -> default_properties_table		3864909	1					
ANR	3865249	Argument	ce -> default_properties_table		3864909	0					
ANR	3865250	PtrMemberAccess	ce -> default_properties_table		3864909	0					
ANR	3865251	Identifier	ce		3864909	0					
ANR	3865252	Identifier	default_properties_table		3864909	1					
ANR	3865253	Argument	sizeof ( zval ) * ce -> default_properties_count		3864909	1					
ANR	3865254	MultiplicativeExpression	sizeof ( zval ) * ce -> default_properties_count		3864909	0		*			
ANR	3865255	SizeofExpression	sizeof ( zval )		3864909	0					
ANR	3865256	Sizeof	sizeof		3864909	0					
ANR	3865257	SizeofOperand	zval		3864909	1					
ANR	3865258	PtrMemberAccess	ce -> default_properties_count		3864909	1					
ANR	3865259	Identifier	ce		3864909	0					
ANR	3865260	Identifier	default_properties_count		3864909	1					
ANR	3865261	Argument	ce -> type == ZEND_INTERNAL_CLASS		3864909	2					
ANR	3865262	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3864909	0		==			
ANR	3865263	PtrMemberAccess	ce -> type		3864909	0					
ANR	3865264	Identifier	ce		3864909	0					
ANR	3865265	Identifier	type		3864909	1					
ANR	3865266	Identifier	ZEND_INTERNAL_CLASS		3864909	1					
ANR	3865267	ExpressionStatement	"ZVAL_COPY_VALUE ( & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] , property )"	3643:2:109156:109252	3864909	1	True				
ANR	3865268	CallExpression	"ZVAL_COPY_VALUE ( & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] , property )"		3864909	0					
ANR	3865269	Callee	ZVAL_COPY_VALUE		3864909	0					
ANR	3865270	Identifier	ZVAL_COPY_VALUE		3864909	0					
ANR	3865271	ArgumentList	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		3864909	1					
ANR	3865272	Argument	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		3864909	0					
ANR	3865273	UnaryOperationExpression	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		3864909	0					
ANR	3865274	UnaryOperator	&		3864909	0					
ANR	3865275	ArrayIndexing	ce -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		3864909	1					
ANR	3865276	PtrMemberAccess	ce -> default_properties_table		3864909	0					
ANR	3865277	Identifier	ce		3864909	0					
ANR	3865278	Identifier	default_properties_table		3864909	1					
ANR	3865279	CallExpression	OBJ_PROP_TO_NUM ( property_info -> offset )		3864909	1					
ANR	3865280	Callee	OBJ_PROP_TO_NUM		3864909	0					
ANR	3865281	Identifier	OBJ_PROP_TO_NUM		3864909	0					
ANR	3865282	ArgumentList	property_info -> offset		3864909	1					
ANR	3865283	Argument	property_info -> offset		3864909	0					
ANR	3865284	PtrMemberAccess	property_info -> offset		3864909	0					
ANR	3865285	Identifier	property_info		3864909	0					
ANR	3865286	Identifier	offset		3864909	1					
ANR	3865287	Argument	property		3864909	1					
ANR	3865288	Identifier	property		3864909	0					
ANR	3865289	IfStatement	if ( ce -> type & ZEND_INTERNAL_CLASS )		3864909	4					
ANR	3865290	Condition	ce -> type & ZEND_INTERNAL_CLASS	3645:5:109262:109291	3864909	0	True				
ANR	3865291	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		3864909	0		&			
ANR	3865292	PtrMemberAccess	ce -> type		3864909	0					
ANR	3865293	Identifier	ce		3864909	0					
ANR	3865294	Identifier	type		3864909	1					
ANR	3865295	Identifier	ZEND_INTERNAL_CLASS		3864909	1					
ANR	3865296	CompoundStatement		46:37:2088:2088	3864909	1					
ANR	3865297	SwitchStatement	switch ( Z_TYPE_P ( property ) )		3864909	0					
ANR	3865298	Condition	Z_TYPE_P ( property )	3646:9:109305:109322	3864909	0	True				
ANR	3865299	CallExpression	Z_TYPE_P ( property )		3864909	0					
ANR	3865300	Callee	Z_TYPE_P		3864909	0					
ANR	3865301	Identifier	Z_TYPE_P		3864909	0					
ANR	3865302	ArgumentList	property		3864909	1					
ANR	3865303	Argument	property		3864909	0					
ANR	3865304	Identifier	property		3864909	0					
ANR	3865305	CompoundStatement		47:29:2119:2119	3864909	1					
ANR	3865306	Label	case IS_ARRAY :	3647:3:109330:109343	3864909	0	True				
ANR	3865307	Identifier	IS_ARRAY		3864909	0					
ANR	3865308	Label	case IS_OBJECT :	3648:3:109348:109362	3864909	1	True				
ANR	3865309	Identifier	IS_OBJECT		3864909	0					
ANR	3865310	Label	case IS_RESOURCE :	3649:3:109367:109383	3864909	2	True				
ANR	3865311	Identifier	IS_RESOURCE		3864909	0					
ANR	3865312	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Internal zval's can't be arrays, objects or resources"" )"	3650:4:109389:109479	3864909	3	True				
ANR	3865313	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Internal zval's can't be arrays, objects or resources"" )"		3864909	0					
ANR	3865314	Callee	zend_error_noreturn		3864909	0					
ANR	3865315	Identifier	zend_error_noreturn		3864909	0					
ANR	3865316	ArgumentList	E_CORE_ERROR		3864909	1					
ANR	3865317	Argument	E_CORE_ERROR		3864909	0					
ANR	3865318	Identifier	E_CORE_ERROR		3864909	0					
ANR	3865319	Argument	"""Internal zval's can't be arrays, objects or resources"""		3864909	1					
ANR	3865320	PrimaryExpression	"""Internal zval's can't be arrays, objects or resources"""		3864909	0					
ANR	3865321	BreakStatement	break ;	3651:4:109485:109490	3864909	4	True				
ANR	3865322	Label	default :	3652:3:109495:109502	3864909	5	True				
ANR	3865323	Identifier	default		3864909	0					
ANR	3865324	BreakStatement	break ;	3653:4:109508:109513	3864909	6	True				
ANR	3865325	IfStatement	if ( access_type & ZEND_ACC_PUBLIC )		3864909	5					
ANR	3865326	Condition	access_type & ZEND_ACC_PUBLIC	3656:5:109527:109555	3864909	0	True				
ANR	3865327	BitAndExpression	access_type & ZEND_ACC_PUBLIC		3864909	0		&			
ANR	3865328	Identifier	access_type		3864909	0					
ANR	3865329	Identifier	ZEND_ACC_PUBLIC		3864909	1					
ANR	3865330	CompoundStatement		57:36:2352:2352	3864909	1					
ANR	3865331	ExpressionStatement	property_info -> name = zend_string_copy ( name )	3657:2:109562:109606	3864909	0	True				
ANR	3865332	AssignmentExpression	property_info -> name = zend_string_copy ( name )		3864909	0		=			
ANR	3865333	PtrMemberAccess	property_info -> name		3864909	0					
ANR	3865334	Identifier	property_info		3864909	0					
ANR	3865335	Identifier	name		3864909	1					
ANR	3865336	CallExpression	zend_string_copy ( name )		3864909	1					
ANR	3865337	Callee	zend_string_copy		3864909	0					
ANR	3865338	Identifier	zend_string_copy		3864909	0					
ANR	3865339	ArgumentList	name		3864909	1					
ANR	3865340	Argument	name		3864909	0					
ANR	3865341	Identifier	name		3864909	0					
ANR	3865342	ElseStatement	else		3864909	0					
ANR	3865343	IfStatement	if ( access_type & ZEND_ACC_PRIVATE )		3864909	0					
ANR	3865344	Condition	access_type & ZEND_ACC_PRIVATE	3658:12:109620:109649	3864909	0	True				
ANR	3865345	BitAndExpression	access_type & ZEND_ACC_PRIVATE		3864909	0		&			
ANR	3865346	Identifier	access_type		3864909	0					
ANR	3865347	Identifier	ZEND_ACC_PRIVATE		3864909	1					
ANR	3865348	CompoundStatement		59:44:2446:2446	3864909	1					
ANR	3865349	ExpressionStatement	"property_info -> name = zend_mangle_property_name ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , ce -> type & ZEND_INTERNAL_CLASS )"	3659:2:109656:109807	3864909	0	True				
ANR	3865350	AssignmentExpression	"property_info -> name = zend_mangle_property_name ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , ce -> type & ZEND_INTERNAL_CLASS )"		3864909	0		=			
ANR	3865351	PtrMemberAccess	property_info -> name		3864909	0					
ANR	3865352	Identifier	property_info		3864909	0					
ANR	3865353	Identifier	name		3864909	1					
ANR	3865354	CallExpression	"zend_mangle_property_name ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , ce -> type & ZEND_INTERNAL_CLASS )"		3864909	1					
ANR	3865355	Callee	zend_mangle_property_name		3864909	0					
ANR	3865356	Identifier	zend_mangle_property_name		3864909	0					
ANR	3865357	ArgumentList	ZSTR_VAL ( ce -> name )		3864909	1					
ANR	3865358	Argument	ZSTR_VAL ( ce -> name )		3864909	0					
ANR	3865359	CallExpression	ZSTR_VAL ( ce -> name )		3864909	0					
ANR	3865360	Callee	ZSTR_VAL		3864909	0					
ANR	3865361	Identifier	ZSTR_VAL		3864909	0					
ANR	3865362	ArgumentList	ce -> name		3864909	1					
ANR	3865363	Argument	ce -> name		3864909	0					
ANR	3865364	PtrMemberAccess	ce -> name		3864909	0					
ANR	3865365	Identifier	ce		3864909	0					
ANR	3865366	Identifier	name		3864909	1					
ANR	3865367	Argument	ZSTR_LEN ( ce -> name )		3864909	1					
ANR	3865368	CallExpression	ZSTR_LEN ( ce -> name )		3864909	0					
ANR	3865369	Callee	ZSTR_LEN		3864909	0					
ANR	3865370	Identifier	ZSTR_LEN		3864909	0					
ANR	3865371	ArgumentList	ce -> name		3864909	1					
ANR	3865372	Argument	ce -> name		3864909	0					
ANR	3865373	PtrMemberAccess	ce -> name		3864909	0					
ANR	3865374	Identifier	ce		3864909	0					
ANR	3865375	Identifier	name		3864909	1					
ANR	3865376	Argument	ZSTR_VAL ( name )		3864909	2					
ANR	3865377	CallExpression	ZSTR_VAL ( name )		3864909	0					
ANR	3865378	Callee	ZSTR_VAL		3864909	0					
ANR	3865379	Identifier	ZSTR_VAL		3864909	0					
ANR	3865380	ArgumentList	name		3864909	1					
ANR	3865381	Argument	name		3864909	0					
ANR	3865382	Identifier	name		3864909	0					
ANR	3865383	Argument	ZSTR_LEN ( name )		3864909	3					
ANR	3865384	CallExpression	ZSTR_LEN ( name )		3864909	0					
ANR	3865385	Callee	ZSTR_LEN		3864909	0					
ANR	3865386	Identifier	ZSTR_LEN		3864909	0					
ANR	3865387	ArgumentList	name		3864909	1					
ANR	3865388	Argument	name		3864909	0					
ANR	3865389	Identifier	name		3864909	0					
ANR	3865390	Argument	ce -> type & ZEND_INTERNAL_CLASS		3864909	4					
ANR	3865391	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		3864909	0		&			
ANR	3865392	PtrMemberAccess	ce -> type		3864909	0					
ANR	3865393	Identifier	ce		3864909	0					
ANR	3865394	Identifier	type		3864909	1					
ANR	3865395	Identifier	ZEND_INTERNAL_CLASS		3864909	1					
ANR	3865396	ElseStatement	else		3864909	0					
ANR	3865397	CompoundStatement		61:8:2611:2611	3864909	0					
ANR	3865398	ExpressionStatement	ZEND_ASSERT ( access_type & ZEND_ACC_PROTECTED )	3661:2:109821:109866	3864909	0	True				
ANR	3865399	CallExpression	ZEND_ASSERT ( access_type & ZEND_ACC_PROTECTED )		3864909	0					
ANR	3865400	Callee	ZEND_ASSERT		3864909	0					
ANR	3865401	Identifier	ZEND_ASSERT		3864909	0					
ANR	3865402	ArgumentList	access_type & ZEND_ACC_PROTECTED		3864909	1					
ANR	3865403	Argument	access_type & ZEND_ACC_PROTECTED		3864909	0					
ANR	3865404	BitAndExpression	access_type & ZEND_ACC_PROTECTED		3864909	0		&			
ANR	3865405	Identifier	access_type		3864909	0					
ANR	3865406	Identifier	ZEND_ACC_PROTECTED		3864909	1					
ANR	3865407	ExpressionStatement	"property_info -> name = zend_mangle_property_name ( ""*"" , 1 , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , ce -> type & ZEND_INTERNAL_CLASS )"	3662:2:109870:109989	3864909	1	True				
ANR	3865408	AssignmentExpression	"property_info -> name = zend_mangle_property_name ( ""*"" , 1 , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , ce -> type & ZEND_INTERNAL_CLASS )"		3864909	0		=			
ANR	3865409	PtrMemberAccess	property_info -> name		3864909	0					
ANR	3865410	Identifier	property_info		3864909	0					
ANR	3865411	Identifier	name		3864909	1					
ANR	3865412	CallExpression	"zend_mangle_property_name ( ""*"" , 1 , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) , ce -> type & ZEND_INTERNAL_CLASS )"		3864909	1					
ANR	3865413	Callee	zend_mangle_property_name		3864909	0					
ANR	3865414	Identifier	zend_mangle_property_name		3864909	0					
ANR	3865415	ArgumentList	"""*"""		3864909	1					
ANR	3865416	Argument	"""*"""		3864909	0					
ANR	3865417	PrimaryExpression	"""*"""		3864909	0					
ANR	3865418	Argument	1		3864909	1					
ANR	3865419	PrimaryExpression	1		3864909	0					
ANR	3865420	Argument	ZSTR_VAL ( name )		3864909	2					
ANR	3865421	CallExpression	ZSTR_VAL ( name )		3864909	0					
ANR	3865422	Callee	ZSTR_VAL		3864909	0					
ANR	3865423	Identifier	ZSTR_VAL		3864909	0					
ANR	3865424	ArgumentList	name		3864909	1					
ANR	3865425	Argument	name		3864909	0					
ANR	3865426	Identifier	name		3864909	0					
ANR	3865427	Argument	ZSTR_LEN ( name )		3864909	3					
ANR	3865428	CallExpression	ZSTR_LEN ( name )		3864909	0					
ANR	3865429	Callee	ZSTR_LEN		3864909	0					
ANR	3865430	Identifier	ZSTR_LEN		3864909	0					
ANR	3865431	ArgumentList	name		3864909	1					
ANR	3865432	Argument	name		3864909	0					
ANR	3865433	Identifier	name		3864909	0					
ANR	3865434	Argument	ce -> type & ZEND_INTERNAL_CLASS		3864909	4					
ANR	3865435	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		3864909	0		&			
ANR	3865436	PtrMemberAccess	ce -> type		3864909	0					
ANR	3865437	Identifier	ce		3864909	0					
ANR	3865438	Identifier	type		3864909	1					
ANR	3865439	Identifier	ZEND_INTERNAL_CLASS		3864909	1					
ANR	3865440	ExpressionStatement	property_info -> name = zend_new_interned_string ( property_info -> name )	3665:1:109996:110063	3864909	6	True				
ANR	3865441	AssignmentExpression	property_info -> name = zend_new_interned_string ( property_info -> name )		3864909	0		=			
ANR	3865442	PtrMemberAccess	property_info -> name		3864909	0					
ANR	3865443	Identifier	property_info		3864909	0					
ANR	3865444	Identifier	name		3864909	1					
ANR	3865445	CallExpression	zend_new_interned_string ( property_info -> name )		3864909	1					
ANR	3865446	Callee	zend_new_interned_string		3864909	0					
ANR	3865447	Identifier	zend_new_interned_string		3864909	0					
ANR	3865448	ArgumentList	property_info -> name		3864909	1					
ANR	3865449	Argument	property_info -> name		3864909	0					
ANR	3865450	PtrMemberAccess	property_info -> name		3864909	0					
ANR	3865451	Identifier	property_info		3864909	0					
ANR	3865452	Identifier	name		3864909	1					
ANR	3865453	ExpressionStatement	property_info -> flags = access_type	3666:1:110066:110100	3864909	7	True				
ANR	3865454	AssignmentExpression	property_info -> flags = access_type		3864909	0		=			
ANR	3865455	PtrMemberAccess	property_info -> flags		3864909	0					
ANR	3865456	Identifier	property_info		3864909	0					
ANR	3865457	Identifier	flags		3864909	1					
ANR	3865458	Identifier	access_type		3864909	1					
ANR	3865459	ExpressionStatement	property_info -> doc_comment = doc_comment	3667:1:110103:110143	3864909	8	True				
ANR	3865460	AssignmentExpression	property_info -> doc_comment = doc_comment		3864909	0		=			
ANR	3865461	PtrMemberAccess	property_info -> doc_comment		3864909	0					
ANR	3865462	Identifier	property_info		3864909	0					
ANR	3865463	Identifier	doc_comment		3864909	1					
ANR	3865464	Identifier	doc_comment		3864909	1					
ANR	3865465	ExpressionStatement	property_info -> ce = ce	3668:1:110146:110168	3864909	9	True				
ANR	3865466	AssignmentExpression	property_info -> ce = ce		3864909	0		=			
ANR	3865467	PtrMemberAccess	property_info -> ce		3864909	0					
ANR	3865468	Identifier	property_info		3864909	0					
ANR	3865469	Identifier	ce		3864909	1					
ANR	3865470	Identifier	ce		3864909	1					
ANR	3865471	ExpressionStatement	"zend_hash_update_ptr ( & ce -> properties_info , name , property_info )"	3669:1:110171:110234	3864909	10	True				
ANR	3865472	CallExpression	"zend_hash_update_ptr ( & ce -> properties_info , name , property_info )"		3864909	0					
ANR	3865473	Callee	zend_hash_update_ptr		3864909	0					
ANR	3865474	Identifier	zend_hash_update_ptr		3864909	0					
ANR	3865475	ArgumentList	& ce -> properties_info		3864909	1					
ANR	3865476	Argument	& ce -> properties_info		3864909	0					
ANR	3865477	UnaryOperationExpression	& ce -> properties_info		3864909	0					
ANR	3865478	UnaryOperator	&		3864909	0					
ANR	3865479	PtrMemberAccess	ce -> properties_info		3864909	1					
ANR	3865480	Identifier	ce		3864909	0					
ANR	3865481	Identifier	properties_info		3864909	1					
ANR	3865482	Argument	name		3864909	1					
ANR	3865483	Identifier	name		3864909	0					
ANR	3865484	Argument	property_info		3864909	2					
ANR	3865485	Identifier	property_info		3864909	0					
ANR	3865486	ReturnStatement	return SUCCESS ;	3671:1:110238:110252	3864909	11	True				
ANR	3865487	Identifier	SUCCESS		3864909	0					
ANR	3865488	ReturnType	ZEND_API int		3864909	1					
ANR	3865489	Identifier	zend_declare_property_ex		3864909	2					
ANR	3865490	ParameterList	"zend_class_entry * ce , zend_string * name , zval * property , int access_type , zend_string * doc_comment"		3864909	3					
ANR	3865491	Parameter	zend_class_entry * ce	3599:38:107095:107114	3864909	0	True				
ANR	3865492	ParameterType	zend_class_entry *		3864909	0					
ANR	3865493	Identifier	ce		3864909	1					
ANR	3865494	Parameter	zend_string * name	3599:60:107117:107133	3864909	1	True				
ANR	3865495	ParameterType	zend_string *		3864909	0					
ANR	3865496	Identifier	name		3864909	1					
ANR	3865497	Parameter	zval * property	3599:79:107136:107149	3864909	2	True				
ANR	3865498	ParameterType	zval *		3864909	0					
ANR	3865499	Identifier	property		3864909	1					
ANR	3865500	Parameter	int access_type	3599:95:107152:107166	3864909	3	True				
ANR	3865501	ParameterType	int		3864909	0					
ANR	3865502	Identifier	access_type		3864909	1					
ANR	3865503	Parameter	zend_string * doc_comment	3599:112:107169:107192	3864909	4	True				
ANR	3865504	ParameterType	zend_string *		3864909	0					
ANR	3865505	Identifier	doc_comment		3864909	1					
ANR	3865506	CFGEntryNode	ENTRY		3864909		True				
ANR	3865507	CFGExitNode	EXIT		3864909		True				
ANR	3865508	Symbol	doc_comment		3864909						
ANR	3865509	Symbol	ce -> default_properties_count		3864909						
ANR	3865510	Symbol	Z_CONSTANT_P		3864909						
ANR	3865511	Symbol	OBJ_PROP_TO_OFFSET		3864909						
ANR	3865512	Symbol	zend_mangle_property_name		3864909						
ANR	3865513	Symbol	* ce		3864909						
ANR	3865514	Symbol	arena		3864909						
ANR	3865515	Symbol	ce -> static_members_table		3864909						
ANR	3865516	Symbol	& CG		3864909						
ANR	3865517	Symbol	* property_info		3864909						
ANR	3865518	Symbol	property_info_ptr -> flags		3864909						
ANR	3865519	Symbol	ZEND_USER_CLASS		3864909						
ANR	3865520	Symbol	property		3864909						
ANR	3865521	Symbol	ce -> name		3864909						
ANR	3865522	Symbol	property_info_ptr		3864909						
ANR	3865523	Symbol	zend_hash_find_ptr		3864909						
ANR	3865524	Symbol	ZEND_INTERNAL_CLASS		3864909						
ANR	3865525	Symbol	NULL		3864909						
ANR	3865526	Symbol	zend_arena_alloc		3864909						
ANR	3865527	Symbol	ce -> default_properties_table		3864909						
ANR	3865528	Symbol	property_info -> name		3864909						
ANR	3865529	Symbol	zend_string_copy		3864909						
ANR	3865530	Symbol	ce -> default_static_members_table		3864909						
ANR	3865531	Symbol	property_info -> ce		3864909						
ANR	3865532	Symbol	ce -> ce_flags		3864909						
ANR	3865533	Symbol	& ce -> properties_info		3864909						
ANR	3865534	Symbol	name		3864909						
ANR	3865535	Symbol	~ZEND_ACC_CONSTANTS_UPDATED		3864909						
ANR	3865536	Symbol	ce -> type		3864909						
ANR	3865537	Symbol	access_type		3864909						
ANR	3865538	Symbol	property_info -> offset		3864909						
ANR	3865539	Symbol	property_info_ptr -> offset		3864909						
ANR	3865540	Symbol	ce -> default_static_members_count		3864909						
ANR	3865541	Symbol	ZEND_ACC_PPP_MASK		3864909						
ANR	3865542	Symbol	ZEND_ACC_PUBLIC		3864909						
ANR	3865543	Symbol	E_CORE_ERROR		3864909						
ANR	3865544	Symbol	ZEND_ACC_STATIC		3864909						
ANR	3865545	Symbol	ZEND_ACC_PROTECTED		3864909						
ANR	3865546	Symbol	* property_info_ptr		3864909						
ANR	3865547	Symbol	property_info -> flags		3864909						
ANR	3865548	Symbol	property_info		3864909						
ANR	3865549	Symbol	OBJ_PROP_TO_NUM		3864909						
ANR	3865550	Symbol	ce		3864909						
ANR	3865551	Symbol	SUCCESS		3864909						
ANR	3865552	Symbol	Z_TYPE_P		3864909						
ANR	3865553	Symbol	ZEND_ACC_PRIVATE		3864909						
ANR	3865554	Symbol	ZSTR_VAL		3864909						
ANR	3865555	Symbol	property_info -> doc_comment		3864909						
ANR	3865556	Symbol	zend_new_interned_string		3864909						
ANR	3865557	Symbol	ZSTR_LEN		3864909						
ANR	3865558	Symbol	perealloc		3864909						
ANR	3865559	Symbol	pemalloc		3864909						
ANR	3865560	Function	zend_declare_property	3675:0:110267:110611							
ANR	3865561	FunctionDef	"zend_declare_property (zend_class_entry * ce , const char * name , size_t name_length , zval * property , int access_type)"		3865560	0					
ANR	3865562	CompoundStatement		3676:0:110405:110611	3865560	0					
ANR	3865563	IdentifierDeclStatement	"zend_string * key = zend_string_init ( name , name_length , ce -> type & ZEND_INTERNAL_CLASS ) ;"	3677:1:110408:110494	3865560	0	True				
ANR	3865564	IdentifierDecl	"* key = zend_string_init ( name , name_length , ce -> type & ZEND_INTERNAL_CLASS )"		3865560	0					
ANR	3865565	IdentifierDeclType	zend_string *		3865560	0					
ANR	3865566	Identifier	key		3865560	1					
ANR	3865567	AssignmentExpression	"* key = zend_string_init ( name , name_length , ce -> type & ZEND_INTERNAL_CLASS )"		3865560	2		=			
ANR	3865568	Identifier	key		3865560	0					
ANR	3865569	CallExpression	"zend_string_init ( name , name_length , ce -> type & ZEND_INTERNAL_CLASS )"		3865560	1					
ANR	3865570	Callee	zend_string_init		3865560	0					
ANR	3865571	Identifier	zend_string_init		3865560	0					
ANR	3865572	ArgumentList	name		3865560	1					
ANR	3865573	Argument	name		3865560	0					
ANR	3865574	Identifier	name		3865560	0					
ANR	3865575	Argument	name_length		3865560	1					
ANR	3865576	Identifier	name_length		3865560	0					
ANR	3865577	Argument	ce -> type & ZEND_INTERNAL_CLASS		3865560	2					
ANR	3865578	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		3865560	0		&			
ANR	3865579	PtrMemberAccess	ce -> type		3865560	0					
ANR	3865580	Identifier	ce		3865560	0					
ANR	3865581	Identifier	type		3865560	1					
ANR	3865582	Identifier	ZEND_INTERNAL_CLASS		3865560	1					
ANR	3865583	IdentifierDeclStatement	"int ret = zend_declare_property_ex ( ce , key , property , access_type , NULL ) ;"	3678:1:110497:110569	3865560	1	True				
ANR	3865584	IdentifierDecl	"ret = zend_declare_property_ex ( ce , key , property , access_type , NULL )"		3865560	0					
ANR	3865585	IdentifierDeclType	int		3865560	0					
ANR	3865586	Identifier	ret		3865560	1					
ANR	3865587	AssignmentExpression	"ret = zend_declare_property_ex ( ce , key , property , access_type , NULL )"		3865560	2		=			
ANR	3865588	Identifier	ret		3865560	0					
ANR	3865589	CallExpression	"zend_declare_property_ex ( ce , key , property , access_type , NULL )"		3865560	1					
ANR	3865590	Callee	zend_declare_property_ex		3865560	0					
ANR	3865591	Identifier	zend_declare_property_ex		3865560	0					
ANR	3865592	ArgumentList	ce		3865560	1					
ANR	3865593	Argument	ce		3865560	0					
ANR	3865594	Identifier	ce		3865560	0					
ANR	3865595	Argument	key		3865560	1					
ANR	3865596	Identifier	key		3865560	0					
ANR	3865597	Argument	property		3865560	2					
ANR	3865598	Identifier	property		3865560	0					
ANR	3865599	Argument	access_type		3865560	3					
ANR	3865600	Identifier	access_type		3865560	0					
ANR	3865601	Argument	NULL		3865560	4					
ANR	3865602	Identifier	NULL		3865560	0					
ANR	3865603	ExpressionStatement	zend_string_release ( key )	3679:1:110572:110596	3865560	2	True				
ANR	3865604	CallExpression	zend_string_release ( key )		3865560	0					
ANR	3865605	Callee	zend_string_release		3865560	0					
ANR	3865606	Identifier	zend_string_release		3865560	0					
ANR	3865607	ArgumentList	key		3865560	1					
ANR	3865608	Argument	key		3865560	0					
ANR	3865609	Identifier	key		3865560	0					
ANR	3865610	ReturnStatement	return ret ;	3680:1:110599:110609	3865560	3	True				
ANR	3865611	Identifier	ret		3865560	0					
ANR	3865612	ReturnType	ZEND_API int		3865560	1					
ANR	3865613	Identifier	zend_declare_property		3865560	2					
ANR	3865614	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , zval * property , int access_type"		3865560	3					
ANR	3865615	Parameter	zend_class_entry * ce	3675:35:110302:110321	3865560	0	True				
ANR	3865616	ParameterType	zend_class_entry *		3865560	0					
ANR	3865617	Identifier	ce		3865560	1					
ANR	3865618	Parameter	const char * name	3675:57:110324:110339	3865560	1	True				
ANR	3865619	ParameterType	const char *		3865560	0					
ANR	3865620	Identifier	name		3865560	1					
ANR	3865621	Parameter	size_t name_length	3675:75:110342:110359	3865560	2	True				
ANR	3865622	ParameterType	size_t		3865560	0					
ANR	3865623	Identifier	name_length		3865560	1					
ANR	3865624	Parameter	zval * property	3675:95:110362:110375	3865560	3	True				
ANR	3865625	ParameterType	zval *		3865560	0					
ANR	3865626	Identifier	property		3865560	1					
ANR	3865627	Parameter	int access_type	3675:111:110378:110392	3865560	4	True				
ANR	3865628	ParameterType	int		3865560	0					
ANR	3865629	Identifier	access_type		3865560	1					
ANR	3865630	CFGEntryNode	ENTRY		3865560		True				
ANR	3865631	CFGExitNode	EXIT		3865560		True				
ANR	3865632	Symbol	ZEND_INTERNAL_CLASS		3865560						
ANR	3865633	Symbol	ret		3865560						
ANR	3865634	Symbol	ce -> type		3865560						
ANR	3865635	Symbol	ce		3865560						
ANR	3865636	Symbol	access_type		3865560						
ANR	3865637	Symbol	NULL		3865560						
ANR	3865638	Symbol	name_length		3865560						
ANR	3865639	Symbol	* ce		3865560						
ANR	3865640	Symbol	zend_string_init		3865560						
ANR	3865641	Symbol	zend_declare_property_ex		3865560						
ANR	3865642	Symbol	name		3865560						
ANR	3865643	Symbol	property		3865560						
ANR	3865644	Symbol	key		3865560						
ANR	3865645	Function	zend_declare_property_null	3684:0:110624:110871							
ANR	3865646	FunctionDef	"zend_declare_property_null (zend_class_entry * ce , const char * name , size_t name_length , int access_type)"		3865645	0					
ANR	3865647	CompoundStatement		3685:0:110751:110871	3865645	0					
ANR	3865648	IdentifierDeclStatement	zval property ;	3686:1:110754:110767	3865645	0	True				
ANR	3865649	IdentifierDecl	property		3865645	0					
ANR	3865650	IdentifierDeclType	zval		3865645	0					
ANR	3865651	Identifier	property		3865645	1					
ANR	3865652	ExpressionStatement	ZVAL_NULL ( & property )	3688:1:110771:110791	3865645	1	True				
ANR	3865653	CallExpression	ZVAL_NULL ( & property )		3865645	0					
ANR	3865654	Callee	ZVAL_NULL		3865645	0					
ANR	3865655	Identifier	ZVAL_NULL		3865645	0					
ANR	3865656	ArgumentList	& property		3865645	1					
ANR	3865657	Argument	& property		3865645	0					
ANR	3865658	UnaryOperationExpression	& property		3865645	0					
ANR	3865659	UnaryOperator	&		3865645	0					
ANR	3865660	Identifier	property		3865645	1					
ANR	3865661	ReturnStatement	"return zend_declare_property ( ce , name , name_length , & property , access_type ) ;"	3689:1:110794:110869	3865645	2	True				
ANR	3865662	CallExpression	"zend_declare_property ( ce , name , name_length , & property , access_type )"		3865645	0					
ANR	3865663	Callee	zend_declare_property		3865645	0					
ANR	3865664	Identifier	zend_declare_property		3865645	0					
ANR	3865665	ArgumentList	ce		3865645	1					
ANR	3865666	Argument	ce		3865645	0					
ANR	3865667	Identifier	ce		3865645	0					
ANR	3865668	Argument	name		3865645	1					
ANR	3865669	Identifier	name		3865645	0					
ANR	3865670	Argument	name_length		3865645	2					
ANR	3865671	Identifier	name_length		3865645	0					
ANR	3865672	Argument	& property		3865645	3					
ANR	3865673	UnaryOperationExpression	& property		3865645	0					
ANR	3865674	UnaryOperator	&		3865645	0					
ANR	3865675	Identifier	property		3865645	1					
ANR	3865676	Argument	access_type		3865645	4					
ANR	3865677	Identifier	access_type		3865645	0					
ANR	3865678	ReturnType	ZEND_API int		3865645	1					
ANR	3865679	Identifier	zend_declare_property_null		3865645	2					
ANR	3865680	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , int access_type"		3865645	3					
ANR	3865681	Parameter	zend_class_entry * ce	3684:40:110664:110683	3865645	0	True				
ANR	3865682	ParameterType	zend_class_entry *		3865645	0					
ANR	3865683	Identifier	ce		3865645	1					
ANR	3865684	Parameter	const char * name	3684:62:110686:110701	3865645	1	True				
ANR	3865685	ParameterType	const char *		3865645	0					
ANR	3865686	Identifier	name		3865645	1					
ANR	3865687	Parameter	size_t name_length	3684:80:110704:110721	3865645	2	True				
ANR	3865688	ParameterType	size_t		3865645	0					
ANR	3865689	Identifier	name_length		3865645	1					
ANR	3865690	Parameter	int access_type	3684:100:110724:110738	3865645	3	True				
ANR	3865691	ParameterType	int		3865645	0					
ANR	3865692	Identifier	access_type		3865645	1					
ANR	3865693	CFGEntryNode	ENTRY		3865645		True				
ANR	3865694	CFGExitNode	EXIT		3865645		True				
ANR	3865695	Symbol	ce		3865645						
ANR	3865696	Symbol	access_type		3865645						
ANR	3865697	Symbol	name		3865645						
ANR	3865698	Symbol	property		3865645						
ANR	3865699	Symbol	name_length		3865645						
ANR	3865700	Symbol	& property		3865645						
ANR	3865701	Symbol	zend_declare_property		3865645						
ANR	3865702	Function	zend_declare_property_bool	3693:0:110884:111155							
ANR	3865703	FunctionDef	"zend_declare_property_bool (zend_class_entry * ce , const char * name , size_t name_length , zend_long value , int access_type)"		3865702	0					
ANR	3865704	CompoundStatement		3694:0:111028:111155	3865702	0					
ANR	3865705	IdentifierDeclStatement	zval property ;	3695:1:111031:111044	3865702	0	True				
ANR	3865706	IdentifierDecl	property		3865702	0					
ANR	3865707	IdentifierDeclType	zval		3865702	0					
ANR	3865708	Identifier	property		3865702	1					
ANR	3865709	ExpressionStatement	"ZVAL_BOOL ( & property , value )"	3697:1:111048:111075	3865702	1	True				
ANR	3865710	CallExpression	"ZVAL_BOOL ( & property , value )"		3865702	0					
ANR	3865711	Callee	ZVAL_BOOL		3865702	0					
ANR	3865712	Identifier	ZVAL_BOOL		3865702	0					
ANR	3865713	ArgumentList	& property		3865702	1					
ANR	3865714	Argument	& property		3865702	0					
ANR	3865715	UnaryOperationExpression	& property		3865702	0					
ANR	3865716	UnaryOperator	&		3865702	0					
ANR	3865717	Identifier	property		3865702	1					
ANR	3865718	Argument	value		3865702	1					
ANR	3865719	Identifier	value		3865702	0					
ANR	3865720	ReturnStatement	"return zend_declare_property ( ce , name , name_length , & property , access_type ) ;"	3698:1:111078:111153	3865702	2	True				
ANR	3865721	CallExpression	"zend_declare_property ( ce , name , name_length , & property , access_type )"		3865702	0					
ANR	3865722	Callee	zend_declare_property		3865702	0					
ANR	3865723	Identifier	zend_declare_property		3865702	0					
ANR	3865724	ArgumentList	ce		3865702	1					
ANR	3865725	Argument	ce		3865702	0					
ANR	3865726	Identifier	ce		3865702	0					
ANR	3865727	Argument	name		3865702	1					
ANR	3865728	Identifier	name		3865702	0					
ANR	3865729	Argument	name_length		3865702	2					
ANR	3865730	Identifier	name_length		3865702	0					
ANR	3865731	Argument	& property		3865702	3					
ANR	3865732	UnaryOperationExpression	& property		3865702	0					
ANR	3865733	UnaryOperator	&		3865702	0					
ANR	3865734	Identifier	property		3865702	1					
ANR	3865735	Argument	access_type		3865702	4					
ANR	3865736	Identifier	access_type		3865702	0					
ANR	3865737	ReturnType	ZEND_API int		3865702	1					
ANR	3865738	Identifier	zend_declare_property_bool		3865702	2					
ANR	3865739	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , zend_long value , int access_type"		3865702	3					
ANR	3865740	Parameter	zend_class_entry * ce	3693:40:110924:110943	3865702	0	True				
ANR	3865741	ParameterType	zend_class_entry *		3865702	0					
ANR	3865742	Identifier	ce		3865702	1					
ANR	3865743	Parameter	const char * name	3693:62:110946:110961	3865702	1	True				
ANR	3865744	ParameterType	const char *		3865702	0					
ANR	3865745	Identifier	name		3865702	1					
ANR	3865746	Parameter	size_t name_length	3693:80:110964:110981	3865702	2	True				
ANR	3865747	ParameterType	size_t		3865702	0					
ANR	3865748	Identifier	name_length		3865702	1					
ANR	3865749	Parameter	zend_long value	3693:100:110984:110998	3865702	3	True				
ANR	3865750	ParameterType	zend_long		3865702	0					
ANR	3865751	Identifier	value		3865702	1					
ANR	3865752	Parameter	int access_type	3693:117:111001:111015	3865702	4	True				
ANR	3865753	ParameterType	int		3865702	0					
ANR	3865754	Identifier	access_type		3865702	1					
ANR	3865755	CFGEntryNode	ENTRY		3865702		True				
ANR	3865756	CFGExitNode	EXIT		3865702		True				
ANR	3865757	Symbol	ce		3865702						
ANR	3865758	Symbol	access_type		3865702						
ANR	3865759	Symbol	name		3865702						
ANR	3865760	Symbol	property		3865702						
ANR	3865761	Symbol	name_length		3865702						
ANR	3865762	Symbol	value		3865702						
ANR	3865763	Symbol	& property		3865702						
ANR	3865764	Symbol	zend_declare_property		3865702						
ANR	3865765	Function	zend_declare_property_long	3702:0:111168:111439							
ANR	3865766	FunctionDef	"zend_declare_property_long (zend_class_entry * ce , const char * name , size_t name_length , zend_long value , int access_type)"		3865765	0					
ANR	3865767	CompoundStatement		3703:0:111312:111439	3865765	0					
ANR	3865768	IdentifierDeclStatement	zval property ;	3704:1:111315:111328	3865765	0	True				
ANR	3865769	IdentifierDecl	property		3865765	0					
ANR	3865770	IdentifierDeclType	zval		3865765	0					
ANR	3865771	Identifier	property		3865765	1					
ANR	3865772	ExpressionStatement	"ZVAL_LONG ( & property , value )"	3706:1:111332:111359	3865765	1	True				
ANR	3865773	CallExpression	"ZVAL_LONG ( & property , value )"		3865765	0					
ANR	3865774	Callee	ZVAL_LONG		3865765	0					
ANR	3865775	Identifier	ZVAL_LONG		3865765	0					
ANR	3865776	ArgumentList	& property		3865765	1					
ANR	3865777	Argument	& property		3865765	0					
ANR	3865778	UnaryOperationExpression	& property		3865765	0					
ANR	3865779	UnaryOperator	&		3865765	0					
ANR	3865780	Identifier	property		3865765	1					
ANR	3865781	Argument	value		3865765	1					
ANR	3865782	Identifier	value		3865765	0					
ANR	3865783	ReturnStatement	"return zend_declare_property ( ce , name , name_length , & property , access_type ) ;"	3707:1:111362:111437	3865765	2	True				
ANR	3865784	CallExpression	"zend_declare_property ( ce , name , name_length , & property , access_type )"		3865765	0					
ANR	3865785	Callee	zend_declare_property		3865765	0					
ANR	3865786	Identifier	zend_declare_property		3865765	0					
ANR	3865787	ArgumentList	ce		3865765	1					
ANR	3865788	Argument	ce		3865765	0					
ANR	3865789	Identifier	ce		3865765	0					
ANR	3865790	Argument	name		3865765	1					
ANR	3865791	Identifier	name		3865765	0					
ANR	3865792	Argument	name_length		3865765	2					
ANR	3865793	Identifier	name_length		3865765	0					
ANR	3865794	Argument	& property		3865765	3					
ANR	3865795	UnaryOperationExpression	& property		3865765	0					
ANR	3865796	UnaryOperator	&		3865765	0					
ANR	3865797	Identifier	property		3865765	1					
ANR	3865798	Argument	access_type		3865765	4					
ANR	3865799	Identifier	access_type		3865765	0					
ANR	3865800	ReturnType	ZEND_API int		3865765	1					
ANR	3865801	Identifier	zend_declare_property_long		3865765	2					
ANR	3865802	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , zend_long value , int access_type"		3865765	3					
ANR	3865803	Parameter	zend_class_entry * ce	3702:40:111208:111227	3865765	0	True				
ANR	3865804	ParameterType	zend_class_entry *		3865765	0					
ANR	3865805	Identifier	ce		3865765	1					
ANR	3865806	Parameter	const char * name	3702:62:111230:111245	3865765	1	True				
ANR	3865807	ParameterType	const char *		3865765	0					
ANR	3865808	Identifier	name		3865765	1					
ANR	3865809	Parameter	size_t name_length	3702:80:111248:111265	3865765	2	True				
ANR	3865810	ParameterType	size_t		3865765	0					
ANR	3865811	Identifier	name_length		3865765	1					
ANR	3865812	Parameter	zend_long value	3702:100:111268:111282	3865765	3	True				
ANR	3865813	ParameterType	zend_long		3865765	0					
ANR	3865814	Identifier	value		3865765	1					
ANR	3865815	Parameter	int access_type	3702:117:111285:111299	3865765	4	True				
ANR	3865816	ParameterType	int		3865765	0					
ANR	3865817	Identifier	access_type		3865765	1					
ANR	3865818	CFGEntryNode	ENTRY		3865765		True				
ANR	3865819	CFGExitNode	EXIT		3865765		True				
ANR	3865820	Symbol	ce		3865765						
ANR	3865821	Symbol	access_type		3865765						
ANR	3865822	Symbol	name		3865765						
ANR	3865823	Symbol	property		3865765						
ANR	3865824	Symbol	name_length		3865765						
ANR	3865825	Symbol	value		3865765						
ANR	3865826	Symbol	& property		3865765						
ANR	3865827	Symbol	zend_declare_property		3865765						
ANR	3865828	Function	zend_declare_property_double	3711:0:111452:111724							
ANR	3865829	FunctionDef	"zend_declare_property_double (zend_class_entry * ce , const char * name , size_t name_length , double value , int access_type)"		3865828	0					
ANR	3865830	CompoundStatement		3712:0:111595:111724	3865828	0					
ANR	3865831	IdentifierDeclStatement	zval property ;	3713:1:111598:111611	3865828	0	True				
ANR	3865832	IdentifierDecl	property		3865828	0					
ANR	3865833	IdentifierDeclType	zval		3865828	0					
ANR	3865834	Identifier	property		3865828	1					
ANR	3865835	ExpressionStatement	"ZVAL_DOUBLE ( & property , value )"	3715:1:111615:111644	3865828	1	True				
ANR	3865836	CallExpression	"ZVAL_DOUBLE ( & property , value )"		3865828	0					
ANR	3865837	Callee	ZVAL_DOUBLE		3865828	0					
ANR	3865838	Identifier	ZVAL_DOUBLE		3865828	0					
ANR	3865839	ArgumentList	& property		3865828	1					
ANR	3865840	Argument	& property		3865828	0					
ANR	3865841	UnaryOperationExpression	& property		3865828	0					
ANR	3865842	UnaryOperator	&		3865828	0					
ANR	3865843	Identifier	property		3865828	1					
ANR	3865844	Argument	value		3865828	1					
ANR	3865845	Identifier	value		3865828	0					
ANR	3865846	ReturnStatement	"return zend_declare_property ( ce , name , name_length , & property , access_type ) ;"	3716:1:111647:111722	3865828	2	True				
ANR	3865847	CallExpression	"zend_declare_property ( ce , name , name_length , & property , access_type )"		3865828	0					
ANR	3865848	Callee	zend_declare_property		3865828	0					
ANR	3865849	Identifier	zend_declare_property		3865828	0					
ANR	3865850	ArgumentList	ce		3865828	1					
ANR	3865851	Argument	ce		3865828	0					
ANR	3865852	Identifier	ce		3865828	0					
ANR	3865853	Argument	name		3865828	1					
ANR	3865854	Identifier	name		3865828	0					
ANR	3865855	Argument	name_length		3865828	2					
ANR	3865856	Identifier	name_length		3865828	0					
ANR	3865857	Argument	& property		3865828	3					
ANR	3865858	UnaryOperationExpression	& property		3865828	0					
ANR	3865859	UnaryOperator	&		3865828	0					
ANR	3865860	Identifier	property		3865828	1					
ANR	3865861	Argument	access_type		3865828	4					
ANR	3865862	Identifier	access_type		3865828	0					
ANR	3865863	ReturnType	ZEND_API int		3865828	1					
ANR	3865864	Identifier	zend_declare_property_double		3865828	2					
ANR	3865865	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , double value , int access_type"		3865828	3					
ANR	3865866	Parameter	zend_class_entry * ce	3711:42:111494:111513	3865828	0	True				
ANR	3865867	ParameterType	zend_class_entry *		3865828	0					
ANR	3865868	Identifier	ce		3865828	1					
ANR	3865869	Parameter	const char * name	3711:64:111516:111531	3865828	1	True				
ANR	3865870	ParameterType	const char *		3865828	0					
ANR	3865871	Identifier	name		3865828	1					
ANR	3865872	Parameter	size_t name_length	3711:82:111534:111551	3865828	2	True				
ANR	3865873	ParameterType	size_t		3865828	0					
ANR	3865874	Identifier	name_length		3865828	1					
ANR	3865875	Parameter	double value	3711:102:111554:111565	3865828	3	True				
ANR	3865876	ParameterType	double		3865828	0					
ANR	3865877	Identifier	value		3865828	1					
ANR	3865878	Parameter	int access_type	3711:116:111568:111582	3865828	4	True				
ANR	3865879	ParameterType	int		3865828	0					
ANR	3865880	Identifier	access_type		3865828	1					
ANR	3865881	CFGEntryNode	ENTRY		3865828		True				
ANR	3865882	CFGExitNode	EXIT		3865828		True				
ANR	3865883	Symbol	ce		3865828						
ANR	3865884	Symbol	access_type		3865828						
ANR	3865885	Symbol	name		3865828						
ANR	3865886	Symbol	property		3865828						
ANR	3865887	Symbol	name_length		3865828						
ANR	3865888	Symbol	value		3865828						
ANR	3865889	Symbol	& property		3865828						
ANR	3865890	Symbol	zend_declare_property		3865828						
ANR	3865891	Function	zend_declare_property_string	3720:0:111737:112080							
ANR	3865892	FunctionDef	"zend_declare_property_string (zend_class_entry * ce , const char * name , size_t name_length , const char * value , int access_type)"		3865891	0					
ANR	3865893	CompoundStatement		3721:0:111885:112080	3865891	0					
ANR	3865894	IdentifierDeclStatement	zval property ;	3722:1:111888:111901	3865891	0	True				
ANR	3865895	IdentifierDecl	property		3865891	0					
ANR	3865896	IdentifierDeclType	zval		3865891	0					
ANR	3865897	Identifier	property		3865891	1					
ANR	3865898	ExpressionStatement	"ZVAL_NEW_STR ( & property , zend_string_init ( value , strlen ( value ) , ce -> type & ZEND_INTERNAL_CLASS ) )"	3724:1:111905:112000	3865891	1	True				
ANR	3865899	CallExpression	"ZVAL_NEW_STR ( & property , zend_string_init ( value , strlen ( value ) , ce -> type & ZEND_INTERNAL_CLASS ) )"		3865891	0					
ANR	3865900	Callee	ZVAL_NEW_STR		3865891	0					
ANR	3865901	Identifier	ZVAL_NEW_STR		3865891	0					
ANR	3865902	ArgumentList	& property		3865891	1					
ANR	3865903	Argument	& property		3865891	0					
ANR	3865904	UnaryOperationExpression	& property		3865891	0					
ANR	3865905	UnaryOperator	&		3865891	0					
ANR	3865906	Identifier	property		3865891	1					
ANR	3865907	Argument	"zend_string_init ( value , strlen ( value ) , ce -> type & ZEND_INTERNAL_CLASS )"		3865891	1					
ANR	3865908	CallExpression	"zend_string_init ( value , strlen ( value ) , ce -> type & ZEND_INTERNAL_CLASS )"		3865891	0					
ANR	3865909	Callee	zend_string_init		3865891	0					
ANR	3865910	Identifier	zend_string_init		3865891	0					
ANR	3865911	ArgumentList	value		3865891	1					
ANR	3865912	Argument	value		3865891	0					
ANR	3865913	Identifier	value		3865891	0					
ANR	3865914	Argument	strlen ( value )		3865891	1					
ANR	3865915	CallExpression	strlen ( value )		3865891	0					
ANR	3865916	Callee	strlen		3865891	0					
ANR	3865917	Identifier	strlen		3865891	0					
ANR	3865918	ArgumentList	value		3865891	1					
ANR	3865919	Argument	value		3865891	0					
ANR	3865920	Identifier	value		3865891	0					
ANR	3865921	Argument	ce -> type & ZEND_INTERNAL_CLASS		3865891	2					
ANR	3865922	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		3865891	0		&			
ANR	3865923	PtrMemberAccess	ce -> type		3865891	0					
ANR	3865924	Identifier	ce		3865891	0					
ANR	3865925	Identifier	type		3865891	1					
ANR	3865926	Identifier	ZEND_INTERNAL_CLASS		3865891	1					
ANR	3865927	ReturnStatement	"return zend_declare_property ( ce , name , name_length , & property , access_type ) ;"	3725:1:112003:112078	3865891	2	True				
ANR	3865928	CallExpression	"zend_declare_property ( ce , name , name_length , & property , access_type )"		3865891	0					
ANR	3865929	Callee	zend_declare_property		3865891	0					
ANR	3865930	Identifier	zend_declare_property		3865891	0					
ANR	3865931	ArgumentList	ce		3865891	1					
ANR	3865932	Argument	ce		3865891	0					
ANR	3865933	Identifier	ce		3865891	0					
ANR	3865934	Argument	name		3865891	1					
ANR	3865935	Identifier	name		3865891	0					
ANR	3865936	Argument	name_length		3865891	2					
ANR	3865937	Identifier	name_length		3865891	0					
ANR	3865938	Argument	& property		3865891	3					
ANR	3865939	UnaryOperationExpression	& property		3865891	0					
ANR	3865940	UnaryOperator	&		3865891	0					
ANR	3865941	Identifier	property		3865891	1					
ANR	3865942	Argument	access_type		3865891	4					
ANR	3865943	Identifier	access_type		3865891	0					
ANR	3865944	ReturnType	ZEND_API int		3865891	1					
ANR	3865945	Identifier	zend_declare_property_string		3865891	2					
ANR	3865946	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , const char * value , int access_type"		3865891	3					
ANR	3865947	Parameter	zend_class_entry * ce	3720:42:111779:111798	3865891	0	True				
ANR	3865948	ParameterType	zend_class_entry *		3865891	0					
ANR	3865949	Identifier	ce		3865891	1					
ANR	3865950	Parameter	const char * name	3720:64:111801:111816	3865891	1	True				
ANR	3865951	ParameterType	const char *		3865891	0					
ANR	3865952	Identifier	name		3865891	1					
ANR	3865953	Parameter	size_t name_length	3720:82:111819:111836	3865891	2	True				
ANR	3865954	ParameterType	size_t		3865891	0					
ANR	3865955	Identifier	name_length		3865891	1					
ANR	3865956	Parameter	const char * value	3720:102:111839:111855	3865891	3	True				
ANR	3865957	ParameterType	const char *		3865891	0					
ANR	3865958	Identifier	value		3865891	1					
ANR	3865959	Parameter	int access_type	3720:121:111858:111872	3865891	4	True				
ANR	3865960	ParameterType	int		3865891	0					
ANR	3865961	Identifier	access_type		3865891	1					
ANR	3865962	CFGEntryNode	ENTRY		3865891		True				
ANR	3865963	CFGExitNode	EXIT		3865891		True				
ANR	3865964	Symbol	ZEND_INTERNAL_CLASS		3865891						
ANR	3865965	Symbol	ce -> type		3865891						
ANR	3865966	Symbol	ce		3865891						
ANR	3865967	Symbol	access_type		3865891						
ANR	3865968	Symbol	name_length		3865891						
ANR	3865969	Symbol	* ce		3865891						
ANR	3865970	Symbol	& property		3865891						
ANR	3865971	Symbol	zend_declare_property		3865891						
ANR	3865972	Symbol	zend_string_init		3865891						
ANR	3865973	Symbol	strlen		3865891						
ANR	3865974	Symbol	name		3865891						
ANR	3865975	Symbol	property		3865891						
ANR	3865976	Symbol	value		3865891						
ANR	3865977	Function	zend_declare_property_stringl	3729:0:112093:112451							
ANR	3865978	FunctionDef	"zend_declare_property_stringl (zend_class_entry * ce , const char * name , size_t name_length , const char * value , size_t value_len , int access_type)"		3865977	0					
ANR	3865979	CompoundStatement		3730:0:112260:112451	3865977	0					
ANR	3865980	IdentifierDeclStatement	zval property ;	3731:1:112263:112276	3865977	0	True				
ANR	3865981	IdentifierDecl	property		3865977	0					
ANR	3865982	IdentifierDeclType	zval		3865977	0					
ANR	3865983	Identifier	property		3865977	1					
ANR	3865984	ExpressionStatement	"ZVAL_NEW_STR ( & property , zend_string_init ( value , value_len , ce -> type & ZEND_INTERNAL_CLASS ) )"	3733:1:112280:112371	3865977	1	True				
ANR	3865985	CallExpression	"ZVAL_NEW_STR ( & property , zend_string_init ( value , value_len , ce -> type & ZEND_INTERNAL_CLASS ) )"		3865977	0					
ANR	3865986	Callee	ZVAL_NEW_STR		3865977	0					
ANR	3865987	Identifier	ZVAL_NEW_STR		3865977	0					
ANR	3865988	ArgumentList	& property		3865977	1					
ANR	3865989	Argument	& property		3865977	0					
ANR	3865990	UnaryOperationExpression	& property		3865977	0					
ANR	3865991	UnaryOperator	&		3865977	0					
ANR	3865992	Identifier	property		3865977	1					
ANR	3865993	Argument	"zend_string_init ( value , value_len , ce -> type & ZEND_INTERNAL_CLASS )"		3865977	1					
ANR	3865994	CallExpression	"zend_string_init ( value , value_len , ce -> type & ZEND_INTERNAL_CLASS )"		3865977	0					
ANR	3865995	Callee	zend_string_init		3865977	0					
ANR	3865996	Identifier	zend_string_init		3865977	0					
ANR	3865997	ArgumentList	value		3865977	1					
ANR	3865998	Argument	value		3865977	0					
ANR	3865999	Identifier	value		3865977	0					
ANR	3866000	Argument	value_len		3865977	1					
ANR	3866001	Identifier	value_len		3865977	0					
ANR	3866002	Argument	ce -> type & ZEND_INTERNAL_CLASS		3865977	2					
ANR	3866003	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		3865977	0		&			
ANR	3866004	PtrMemberAccess	ce -> type		3865977	0					
ANR	3866005	Identifier	ce		3865977	0					
ANR	3866006	Identifier	type		3865977	1					
ANR	3866007	Identifier	ZEND_INTERNAL_CLASS		3865977	1					
ANR	3866008	ReturnStatement	"return zend_declare_property ( ce , name , name_length , & property , access_type ) ;"	3734:1:112374:112449	3865977	2	True				
ANR	3866009	CallExpression	"zend_declare_property ( ce , name , name_length , & property , access_type )"		3865977	0					
ANR	3866010	Callee	zend_declare_property		3865977	0					
ANR	3866011	Identifier	zend_declare_property		3865977	0					
ANR	3866012	ArgumentList	ce		3865977	1					
ANR	3866013	Argument	ce		3865977	0					
ANR	3866014	Identifier	ce		3865977	0					
ANR	3866015	Argument	name		3865977	1					
ANR	3866016	Identifier	name		3865977	0					
ANR	3866017	Argument	name_length		3865977	2					
ANR	3866018	Identifier	name_length		3865977	0					
ANR	3866019	Argument	& property		3865977	3					
ANR	3866020	UnaryOperationExpression	& property		3865977	0					
ANR	3866021	UnaryOperator	&		3865977	0					
ANR	3866022	Identifier	property		3865977	1					
ANR	3866023	Argument	access_type		3865977	4					
ANR	3866024	Identifier	access_type		3865977	0					
ANR	3866025	ReturnType	ZEND_API int		3865977	1					
ANR	3866026	Identifier	zend_declare_property_stringl		3865977	2					
ANR	3866027	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , const char * value , size_t value_len , int access_type"		3865977	3					
ANR	3866028	Parameter	zend_class_entry * ce	3729:43:112136:112155	3865977	0	True				
ANR	3866029	ParameterType	zend_class_entry *		3865977	0					
ANR	3866030	Identifier	ce		3865977	1					
ANR	3866031	Parameter	const char * name	3729:65:112158:112173	3865977	1	True				
ANR	3866032	ParameterType	const char *		3865977	0					
ANR	3866033	Identifier	name		3865977	1					
ANR	3866034	Parameter	size_t name_length	3729:83:112176:112193	3865977	2	True				
ANR	3866035	ParameterType	size_t		3865977	0					
ANR	3866036	Identifier	name_length		3865977	1					
ANR	3866037	Parameter	const char * value	3729:103:112196:112212	3865977	3	True				
ANR	3866038	ParameterType	const char *		3865977	0					
ANR	3866039	Identifier	value		3865977	1					
ANR	3866040	Parameter	size_t value_len	3729:122:112215:112230	3865977	4	True				
ANR	3866041	ParameterType	size_t		3865977	0					
ANR	3866042	Identifier	value_len		3865977	1					
ANR	3866043	Parameter	int access_type	3729:140:112233:112247	3865977	5	True				
ANR	3866044	ParameterType	int		3865977	0					
ANR	3866045	Identifier	access_type		3865977	1					
ANR	3866046	CFGEntryNode	ENTRY		3865977		True				
ANR	3866047	CFGExitNode	EXIT		3865977		True				
ANR	3866048	Symbol	ZEND_INTERNAL_CLASS		3865977						
ANR	3866049	Symbol	ce -> type		3865977						
ANR	3866050	Symbol	ce		3865977						
ANR	3866051	Symbol	access_type		3865977						
ANR	3866052	Symbol	value_len		3865977						
ANR	3866053	Symbol	name_length		3865977						
ANR	3866054	Symbol	* ce		3865977						
ANR	3866055	Symbol	& property		3865977						
ANR	3866056	Symbol	zend_declare_property		3865977						
ANR	3866057	Symbol	zend_string_init		3865977						
ANR	3866058	Symbol	name		3865977						
ANR	3866059	Symbol	property		3865977						
ANR	3866060	Symbol	value		3865977						
ANR	3866061	Function	zend_declare_class_constant	3738:0:112464:112768							
ANR	3866062	FunctionDef	"zend_declare_class_constant (zend_class_entry * ce , const char * name , size_t name_length , zval * value)"		3866061	0					
ANR	3866063	CompoundStatement		3739:0:112588:112768	3866061	0					
ANR	3866064	IfStatement	if ( Z_CONSTANT_P ( value ) )		3866061	0					
ANR	3866065	Condition	Z_CONSTANT_P ( value )	3740:5:112595:112613	3866061	0	True				
ANR	3866066	CallExpression	Z_CONSTANT_P ( value )		3866061	0					
ANR	3866067	Callee	Z_CONSTANT_P		3866061	0					
ANR	3866068	Identifier	Z_CONSTANT_P		3866061	0					
ANR	3866069	ArgumentList	value		3866061	1					
ANR	3866070	Argument	value		3866061	0					
ANR	3866071	Identifier	value		3866061	0					
ANR	3866072	CompoundStatement		2:26:27:27	3866061	1					
ANR	3866073	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	3741:2:112620:112663	3866061	0	True				
ANR	3866074	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		3866061	0		&=			
ANR	3866075	PtrMemberAccess	ce -> ce_flags		3866061	0					
ANR	3866076	Identifier	ce		3866061	0					
ANR	3866077	Identifier	ce_flags		3866061	1					
ANR	3866078	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		3866061	1					
ANR	3866079	ReturnStatement	"return zend_hash_str_update ( & ce -> constants_table , name , name_length , value ) ? SUCCESS : FAILURE ;"	3743:1:112669:112766	3866061	1	True				
ANR	3866080	ConditionalExpression	"zend_hash_str_update ( & ce -> constants_table , name , name_length , value ) ? SUCCESS : FAILURE"		3866061	0					
ANR	3866081	Condition	"zend_hash_str_update ( & ce -> constants_table , name , name_length , value )"		3866061	0					
ANR	3866082	CallExpression	"zend_hash_str_update ( & ce -> constants_table , name , name_length , value )"		3866061	0					
ANR	3866083	Callee	zend_hash_str_update		3866061	0					
ANR	3866084	Identifier	zend_hash_str_update		3866061	0					
ANR	3866085	ArgumentList	& ce -> constants_table		3866061	1					
ANR	3866086	Argument	& ce -> constants_table		3866061	0					
ANR	3866087	UnaryOperationExpression	& ce -> constants_table		3866061	0					
ANR	3866088	UnaryOperator	&		3866061	0					
ANR	3866089	PtrMemberAccess	ce -> constants_table		3866061	1					
ANR	3866090	Identifier	ce		3866061	0					
ANR	3866091	Identifier	constants_table		3866061	1					
ANR	3866092	Argument	name		3866061	1					
ANR	3866093	Identifier	name		3866061	0					
ANR	3866094	Argument	name_length		3866061	2					
ANR	3866095	Identifier	name_length		3866061	0					
ANR	3866096	Argument	value		3866061	3					
ANR	3866097	Identifier	value		3866061	0					
ANR	3866098	Identifier	SUCCESS		3866061	1					
ANR	3866099	Identifier	FAILURE		3866061	2					
ANR	3866100	ReturnType	ZEND_API int		3866061	1					
ANR	3866101	Identifier	zend_declare_class_constant		3866061	2					
ANR	3866102	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , zval * value"		3866061	3					
ANR	3866103	Parameter	zend_class_entry * ce	3738:41:112505:112524	3866061	0	True				
ANR	3866104	ParameterType	zend_class_entry *		3866061	0					
ANR	3866105	Identifier	ce		3866061	1					
ANR	3866106	Parameter	const char * name	3738:63:112527:112542	3866061	1	True				
ANR	3866107	ParameterType	const char *		3866061	0					
ANR	3866108	Identifier	name		3866061	1					
ANR	3866109	Parameter	size_t name_length	3738:81:112545:112562	3866061	2	True				
ANR	3866110	ParameterType	size_t		3866061	0					
ANR	3866111	Identifier	name_length		3866061	1					
ANR	3866112	Parameter	zval * value	3738:101:112565:112575	3866061	3	True				
ANR	3866113	ParameterType	zval *		3866061	0					
ANR	3866114	Identifier	value		3866061	1					
ANR	3866115	CFGEntryNode	ENTRY		3866061		True				
ANR	3866116	CFGExitNode	EXIT		3866061		True				
ANR	3866117	Symbol	ce -> ce_flags		3866061						
ANR	3866118	Symbol	ce		3866061						
ANR	3866119	Symbol	& ce -> constants_table		3866061						
ANR	3866120	Symbol	Z_CONSTANT_P		3866061						
ANR	3866121	Symbol	SUCCESS		3866061						
ANR	3866122	Symbol	zend_hash_str_update		3866061						
ANR	3866123	Symbol	name		3866061						
ANR	3866124	Symbol	name_length		3866061						
ANR	3866125	Symbol	* ce		3866061						
ANR	3866126	Symbol	value		3866061						
ANR	3866127	Symbol	FAILURE		3866061						
ANR	3866128	Symbol	~ZEND_ACC_CONSTANTS_UPDATED		3866061						
ANR	3866129	Function	zend_declare_class_constant_null	3748:0:112781:113010							
ANR	3866130	FunctionDef	"zend_declare_class_constant_null (zend_class_entry * ce , const char * name , size_t name_length)"		3866129	0					
ANR	3866131	CompoundStatement		3749:0:112897:113010	3866129	0					
ANR	3866132	IdentifierDeclStatement	zval constant ;	3750:1:112900:112913	3866129	0	True				
ANR	3866133	IdentifierDecl	constant		3866129	0					
ANR	3866134	IdentifierDeclType	zval		3866129	0					
ANR	3866135	Identifier	constant		3866129	1					
ANR	3866136	ExpressionStatement	ZVAL_NULL ( & constant )	3752:1:112917:112937	3866129	1	True				
ANR	3866137	CallExpression	ZVAL_NULL ( & constant )		3866129	0					
ANR	3866138	Callee	ZVAL_NULL		3866129	0					
ANR	3866139	Identifier	ZVAL_NULL		3866129	0					
ANR	3866140	ArgumentList	& constant		3866129	1					
ANR	3866141	Argument	& constant		3866129	0					
ANR	3866142	UnaryOperationExpression	& constant		3866129	0					
ANR	3866143	UnaryOperator	&		3866129	0					
ANR	3866144	Identifier	constant		3866129	1					
ANR	3866145	ReturnStatement	"return zend_declare_class_constant ( ce , name , name_length , & constant ) ;"	3753:1:112940:113008	3866129	2	True				
ANR	3866146	CallExpression	"zend_declare_class_constant ( ce , name , name_length , & constant )"		3866129	0					
ANR	3866147	Callee	zend_declare_class_constant		3866129	0					
ANR	3866148	Identifier	zend_declare_class_constant		3866129	0					
ANR	3866149	ArgumentList	ce		3866129	1					
ANR	3866150	Argument	ce		3866129	0					
ANR	3866151	Identifier	ce		3866129	0					
ANR	3866152	Argument	name		3866129	1					
ANR	3866153	Identifier	name		3866129	0					
ANR	3866154	Argument	name_length		3866129	2					
ANR	3866155	Identifier	name_length		3866129	0					
ANR	3866156	Argument	& constant		3866129	3					
ANR	3866157	UnaryOperationExpression	& constant		3866129	0					
ANR	3866158	UnaryOperator	&		3866129	0					
ANR	3866159	Identifier	constant		3866129	1					
ANR	3866160	ReturnType	ZEND_API int		3866129	1					
ANR	3866161	Identifier	zend_declare_class_constant_null		3866129	2					
ANR	3866162	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length"		3866129	3					
ANR	3866163	Parameter	zend_class_entry * ce	3748:46:112827:112846	3866129	0	True				
ANR	3866164	ParameterType	zend_class_entry *		3866129	0					
ANR	3866165	Identifier	ce		3866129	1					
ANR	3866166	Parameter	const char * name	3748:68:112849:112864	3866129	1	True				
ANR	3866167	ParameterType	const char *		3866129	0					
ANR	3866168	Identifier	name		3866129	1					
ANR	3866169	Parameter	size_t name_length	3748:86:112867:112884	3866129	2	True				
ANR	3866170	ParameterType	size_t		3866129	0					
ANR	3866171	Identifier	name_length		3866129	1					
ANR	3866172	CFGEntryNode	ENTRY		3866129		True				
ANR	3866173	CFGExitNode	EXIT		3866129		True				
ANR	3866174	Symbol	ce		3866129						
ANR	3866175	Symbol	& constant		3866129						
ANR	3866176	Symbol	constant		3866129						
ANR	3866177	Symbol	zend_declare_class_constant		3866129						
ANR	3866178	Symbol	name		3866129						
ANR	3866179	Symbol	name_length		3866129						
ANR	3866180	Function	zend_declare_class_constant_long	3757:0:113023:113276							
ANR	3866181	FunctionDef	"zend_declare_class_constant_long (zend_class_entry * ce , const char * name , size_t name_length , zend_long value)"		3866180	0					
ANR	3866182	CompoundStatement		3758:0:113156:113276	3866180	0					
ANR	3866183	IdentifierDeclStatement	zval constant ;	3759:1:113159:113172	3866180	0	True				
ANR	3866184	IdentifierDecl	constant		3866180	0					
ANR	3866185	IdentifierDeclType	zval		3866180	0					
ANR	3866186	Identifier	constant		3866180	1					
ANR	3866187	ExpressionStatement	"ZVAL_LONG ( & constant , value )"	3761:1:113176:113203	3866180	1	True				
ANR	3866188	CallExpression	"ZVAL_LONG ( & constant , value )"		3866180	0					
ANR	3866189	Callee	ZVAL_LONG		3866180	0					
ANR	3866190	Identifier	ZVAL_LONG		3866180	0					
ANR	3866191	ArgumentList	& constant		3866180	1					
ANR	3866192	Argument	& constant		3866180	0					
ANR	3866193	UnaryOperationExpression	& constant		3866180	0					
ANR	3866194	UnaryOperator	&		3866180	0					
ANR	3866195	Identifier	constant		3866180	1					
ANR	3866196	Argument	value		3866180	1					
ANR	3866197	Identifier	value		3866180	0					
ANR	3866198	ReturnStatement	"return zend_declare_class_constant ( ce , name , name_length , & constant ) ;"	3762:1:113206:113274	3866180	2	True				
ANR	3866199	CallExpression	"zend_declare_class_constant ( ce , name , name_length , & constant )"		3866180	0					
ANR	3866200	Callee	zend_declare_class_constant		3866180	0					
ANR	3866201	Identifier	zend_declare_class_constant		3866180	0					
ANR	3866202	ArgumentList	ce		3866180	1					
ANR	3866203	Argument	ce		3866180	0					
ANR	3866204	Identifier	ce		3866180	0					
ANR	3866205	Argument	name		3866180	1					
ANR	3866206	Identifier	name		3866180	0					
ANR	3866207	Argument	name_length		3866180	2					
ANR	3866208	Identifier	name_length		3866180	0					
ANR	3866209	Argument	& constant		3866180	3					
ANR	3866210	UnaryOperationExpression	& constant		3866180	0					
ANR	3866211	UnaryOperator	&		3866180	0					
ANR	3866212	Identifier	constant		3866180	1					
ANR	3866213	ReturnType	ZEND_API int		3866180	1					
ANR	3866214	Identifier	zend_declare_class_constant_long		3866180	2					
ANR	3866215	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , zend_long value"		3866180	3					
ANR	3866216	Parameter	zend_class_entry * ce	3757:46:113069:113088	3866180	0	True				
ANR	3866217	ParameterType	zend_class_entry *		3866180	0					
ANR	3866218	Identifier	ce		3866180	1					
ANR	3866219	Parameter	const char * name	3757:68:113091:113106	3866180	1	True				
ANR	3866220	ParameterType	const char *		3866180	0					
ANR	3866221	Identifier	name		3866180	1					
ANR	3866222	Parameter	size_t name_length	3757:86:113109:113126	3866180	2	True				
ANR	3866223	ParameterType	size_t		3866180	0					
ANR	3866224	Identifier	name_length		3866180	1					
ANR	3866225	Parameter	zend_long value	3757:106:113129:113143	3866180	3	True				
ANR	3866226	ParameterType	zend_long		3866180	0					
ANR	3866227	Identifier	value		3866180	1					
ANR	3866228	CFGEntryNode	ENTRY		3866180		True				
ANR	3866229	CFGExitNode	EXIT		3866180		True				
ANR	3866230	Symbol	ce		3866180						
ANR	3866231	Symbol	& constant		3866180						
ANR	3866232	Symbol	constant		3866180						
ANR	3866233	Symbol	zend_declare_class_constant		3866180						
ANR	3866234	Symbol	name		3866180						
ANR	3866235	Symbol	name_length		3866180						
ANR	3866236	Symbol	value		3866180						
ANR	3866237	Function	zend_declare_class_constant_bool	3766:0:113289:113542							
ANR	3866238	FunctionDef	"zend_declare_class_constant_bool (zend_class_entry * ce , const char * name , size_t name_length , zend_bool value)"		3866237	0					
ANR	3866239	CompoundStatement		3767:0:113422:113542	3866237	0					
ANR	3866240	IdentifierDeclStatement	zval constant ;	3768:1:113425:113438	3866237	0	True				
ANR	3866241	IdentifierDecl	constant		3866237	0					
ANR	3866242	IdentifierDeclType	zval		3866237	0					
ANR	3866243	Identifier	constant		3866237	1					
ANR	3866244	ExpressionStatement	"ZVAL_BOOL ( & constant , value )"	3770:1:113442:113469	3866237	1	True				
ANR	3866245	CallExpression	"ZVAL_BOOL ( & constant , value )"		3866237	0					
ANR	3866246	Callee	ZVAL_BOOL		3866237	0					
ANR	3866247	Identifier	ZVAL_BOOL		3866237	0					
ANR	3866248	ArgumentList	& constant		3866237	1					
ANR	3866249	Argument	& constant		3866237	0					
ANR	3866250	UnaryOperationExpression	& constant		3866237	0					
ANR	3866251	UnaryOperator	&		3866237	0					
ANR	3866252	Identifier	constant		3866237	1					
ANR	3866253	Argument	value		3866237	1					
ANR	3866254	Identifier	value		3866237	0					
ANR	3866255	ReturnStatement	"return zend_declare_class_constant ( ce , name , name_length , & constant ) ;"	3771:1:113472:113540	3866237	2	True				
ANR	3866256	CallExpression	"zend_declare_class_constant ( ce , name , name_length , & constant )"		3866237	0					
ANR	3866257	Callee	zend_declare_class_constant		3866237	0					
ANR	3866258	Identifier	zend_declare_class_constant		3866237	0					
ANR	3866259	ArgumentList	ce		3866237	1					
ANR	3866260	Argument	ce		3866237	0					
ANR	3866261	Identifier	ce		3866237	0					
ANR	3866262	Argument	name		3866237	1					
ANR	3866263	Identifier	name		3866237	0					
ANR	3866264	Argument	name_length		3866237	2					
ANR	3866265	Identifier	name_length		3866237	0					
ANR	3866266	Argument	& constant		3866237	3					
ANR	3866267	UnaryOperationExpression	& constant		3866237	0					
ANR	3866268	UnaryOperator	&		3866237	0					
ANR	3866269	Identifier	constant		3866237	1					
ANR	3866270	ReturnType	ZEND_API int		3866237	1					
ANR	3866271	Identifier	zend_declare_class_constant_bool		3866237	2					
ANR	3866272	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , zend_bool value"		3866237	3					
ANR	3866273	Parameter	zend_class_entry * ce	3766:46:113335:113354	3866237	0	True				
ANR	3866274	ParameterType	zend_class_entry *		3866237	0					
ANR	3866275	Identifier	ce		3866237	1					
ANR	3866276	Parameter	const char * name	3766:68:113357:113372	3866237	1	True				
ANR	3866277	ParameterType	const char *		3866237	0					
ANR	3866278	Identifier	name		3866237	1					
ANR	3866279	Parameter	size_t name_length	3766:86:113375:113392	3866237	2	True				
ANR	3866280	ParameterType	size_t		3866237	0					
ANR	3866281	Identifier	name_length		3866237	1					
ANR	3866282	Parameter	zend_bool value	3766:106:113395:113409	3866237	3	True				
ANR	3866283	ParameterType	zend_bool		3866237	0					
ANR	3866284	Identifier	value		3866237	1					
ANR	3866285	CFGEntryNode	ENTRY		3866237		True				
ANR	3866286	CFGExitNode	EXIT		3866237		True				
ANR	3866287	Symbol	ce		3866237						
ANR	3866288	Symbol	& constant		3866237						
ANR	3866289	Symbol	constant		3866237						
ANR	3866290	Symbol	zend_declare_class_constant		3866237						
ANR	3866291	Symbol	name		3866237						
ANR	3866292	Symbol	name_length		3866237						
ANR	3866293	Symbol	value		3866237						
ANR	3866294	Function	zend_declare_class_constant_double	3775:0:113555:113809							
ANR	3866295	FunctionDef	"zend_declare_class_constant_double (zend_class_entry * ce , const char * name , size_t name_length , double value)"		3866294	0					
ANR	3866296	CompoundStatement		3776:0:113687:113809	3866294	0					
ANR	3866297	IdentifierDeclStatement	zval constant ;	3777:1:113690:113703	3866294	0	True				
ANR	3866298	IdentifierDecl	constant		3866294	0					
ANR	3866299	IdentifierDeclType	zval		3866294	0					
ANR	3866300	Identifier	constant		3866294	1					
ANR	3866301	ExpressionStatement	"ZVAL_DOUBLE ( & constant , value )"	3779:1:113707:113736	3866294	1	True				
ANR	3866302	CallExpression	"ZVAL_DOUBLE ( & constant , value )"		3866294	0					
ANR	3866303	Callee	ZVAL_DOUBLE		3866294	0					
ANR	3866304	Identifier	ZVAL_DOUBLE		3866294	0					
ANR	3866305	ArgumentList	& constant		3866294	1					
ANR	3866306	Argument	& constant		3866294	0					
ANR	3866307	UnaryOperationExpression	& constant		3866294	0					
ANR	3866308	UnaryOperator	&		3866294	0					
ANR	3866309	Identifier	constant		3866294	1					
ANR	3866310	Argument	value		3866294	1					
ANR	3866311	Identifier	value		3866294	0					
ANR	3866312	ReturnStatement	"return zend_declare_class_constant ( ce , name , name_length , & constant ) ;"	3780:1:113739:113807	3866294	2	True				
ANR	3866313	CallExpression	"zend_declare_class_constant ( ce , name , name_length , & constant )"		3866294	0					
ANR	3866314	Callee	zend_declare_class_constant		3866294	0					
ANR	3866315	Identifier	zend_declare_class_constant		3866294	0					
ANR	3866316	ArgumentList	ce		3866294	1					
ANR	3866317	Argument	ce		3866294	0					
ANR	3866318	Identifier	ce		3866294	0					
ANR	3866319	Argument	name		3866294	1					
ANR	3866320	Identifier	name		3866294	0					
ANR	3866321	Argument	name_length		3866294	2					
ANR	3866322	Identifier	name_length		3866294	0					
ANR	3866323	Argument	& constant		3866294	3					
ANR	3866324	UnaryOperationExpression	& constant		3866294	0					
ANR	3866325	UnaryOperator	&		3866294	0					
ANR	3866326	Identifier	constant		3866294	1					
ANR	3866327	ReturnType	ZEND_API int		3866294	1					
ANR	3866328	Identifier	zend_declare_class_constant_double		3866294	2					
ANR	3866329	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , double value"		3866294	3					
ANR	3866330	Parameter	zend_class_entry * ce	3775:48:113603:113622	3866294	0	True				
ANR	3866331	ParameterType	zend_class_entry *		3866294	0					
ANR	3866332	Identifier	ce		3866294	1					
ANR	3866333	Parameter	const char * name	3775:70:113625:113640	3866294	1	True				
ANR	3866334	ParameterType	const char *		3866294	0					
ANR	3866335	Identifier	name		3866294	1					
ANR	3866336	Parameter	size_t name_length	3775:88:113643:113660	3866294	2	True				
ANR	3866337	ParameterType	size_t		3866294	0					
ANR	3866338	Identifier	name_length		3866294	1					
ANR	3866339	Parameter	double value	3775:108:113663:113674	3866294	3	True				
ANR	3866340	ParameterType	double		3866294	0					
ANR	3866341	Identifier	value		3866294	1					
ANR	3866342	CFGEntryNode	ENTRY		3866294		True				
ANR	3866343	CFGExitNode	EXIT		3866294		True				
ANR	3866344	Symbol	ce		3866294						
ANR	3866345	Symbol	& constant		3866294						
ANR	3866346	Symbol	constant		3866294						
ANR	3866347	Symbol	zend_declare_class_constant		3866294						
ANR	3866348	Symbol	name		3866294						
ANR	3866349	Symbol	name_length		3866294						
ANR	3866350	Symbol	value		3866294						
ANR	3866351	Function	zend_declare_class_constant_stringl	3784:0:113822:114168							
ANR	3866352	FunctionDef	"zend_declare_class_constant_stringl (zend_class_entry * ce , const char * name , size_t name_length , const char * value , size_t value_length)"		3866351	0					
ANR	3866353	CompoundStatement		3785:0:113981:114168	3866351	0					
ANR	3866354	IdentifierDeclStatement	zval constant ;	3786:1:113984:113997	3866351	0	True				
ANR	3866355	IdentifierDecl	constant		3866351	0					
ANR	3866356	IdentifierDeclType	zval		3866351	0					
ANR	3866357	Identifier	constant		3866351	1					
ANR	3866358	ExpressionStatement	"ZVAL_NEW_STR ( & constant , zend_string_init ( value , value_length , ce -> type & ZEND_INTERNAL_CLASS ) )"	3788:1:114001:114095	3866351	1	True				
ANR	3866359	CallExpression	"ZVAL_NEW_STR ( & constant , zend_string_init ( value , value_length , ce -> type & ZEND_INTERNAL_CLASS ) )"		3866351	0					
ANR	3866360	Callee	ZVAL_NEW_STR		3866351	0					
ANR	3866361	Identifier	ZVAL_NEW_STR		3866351	0					
ANR	3866362	ArgumentList	& constant		3866351	1					
ANR	3866363	Argument	& constant		3866351	0					
ANR	3866364	UnaryOperationExpression	& constant		3866351	0					
ANR	3866365	UnaryOperator	&		3866351	0					
ANR	3866366	Identifier	constant		3866351	1					
ANR	3866367	Argument	"zend_string_init ( value , value_length , ce -> type & ZEND_INTERNAL_CLASS )"		3866351	1					
ANR	3866368	CallExpression	"zend_string_init ( value , value_length , ce -> type & ZEND_INTERNAL_CLASS )"		3866351	0					
ANR	3866369	Callee	zend_string_init		3866351	0					
ANR	3866370	Identifier	zend_string_init		3866351	0					
ANR	3866371	ArgumentList	value		3866351	1					
ANR	3866372	Argument	value		3866351	0					
ANR	3866373	Identifier	value		3866351	0					
ANR	3866374	Argument	value_length		3866351	1					
ANR	3866375	Identifier	value_length		3866351	0					
ANR	3866376	Argument	ce -> type & ZEND_INTERNAL_CLASS		3866351	2					
ANR	3866377	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		3866351	0		&			
ANR	3866378	PtrMemberAccess	ce -> type		3866351	0					
ANR	3866379	Identifier	ce		3866351	0					
ANR	3866380	Identifier	type		3866351	1					
ANR	3866381	Identifier	ZEND_INTERNAL_CLASS		3866351	1					
ANR	3866382	ReturnStatement	"return zend_declare_class_constant ( ce , name , name_length , & constant ) ;"	3789:1:114098:114166	3866351	2	True				
ANR	3866383	CallExpression	"zend_declare_class_constant ( ce , name , name_length , & constant )"		3866351	0					
ANR	3866384	Callee	zend_declare_class_constant		3866351	0					
ANR	3866385	Identifier	zend_declare_class_constant		3866351	0					
ANR	3866386	ArgumentList	ce		3866351	1					
ANR	3866387	Argument	ce		3866351	0					
ANR	3866388	Identifier	ce		3866351	0					
ANR	3866389	Argument	name		3866351	1					
ANR	3866390	Identifier	name		3866351	0					
ANR	3866391	Argument	name_length		3866351	2					
ANR	3866392	Identifier	name_length		3866351	0					
ANR	3866393	Argument	& constant		3866351	3					
ANR	3866394	UnaryOperationExpression	& constant		3866351	0					
ANR	3866395	UnaryOperator	&		3866351	0					
ANR	3866396	Identifier	constant		3866351	1					
ANR	3866397	ReturnType	ZEND_API int		3866351	1					
ANR	3866398	Identifier	zend_declare_class_constant_stringl		3866351	2					
ANR	3866399	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , const char * value , size_t value_length"		3866351	3					
ANR	3866400	Parameter	zend_class_entry * ce	3784:49:113871:113890	3866351	0	True				
ANR	3866401	ParameterType	zend_class_entry *		3866351	0					
ANR	3866402	Identifier	ce		3866351	1					
ANR	3866403	Parameter	const char * name	3784:71:113893:113908	3866351	1	True				
ANR	3866404	ParameterType	const char *		3866351	0					
ANR	3866405	Identifier	name		3866351	1					
ANR	3866406	Parameter	size_t name_length	3784:89:113911:113928	3866351	2	True				
ANR	3866407	ParameterType	size_t		3866351	0					
ANR	3866408	Identifier	name_length		3866351	1					
ANR	3866409	Parameter	const char * value	3784:109:113931:113947	3866351	3	True				
ANR	3866410	ParameterType	const char *		3866351	0					
ANR	3866411	Identifier	value		3866351	1					
ANR	3866412	Parameter	size_t value_length	3784:128:113950:113968	3866351	4	True				
ANR	3866413	ParameterType	size_t		3866351	0					
ANR	3866414	Identifier	value_length		3866351	1					
ANR	3866415	CFGEntryNode	ENTRY		3866351		True				
ANR	3866416	CFGExitNode	EXIT		3866351		True				
ANR	3866417	Symbol	ZEND_INTERNAL_CLASS		3866351						
ANR	3866418	Symbol	zend_string_init		3866351						
ANR	3866419	Symbol	ce -> type		3866351						
ANR	3866420	Symbol	ce		3866351						
ANR	3866421	Symbol	& constant		3866351						
ANR	3866422	Symbol	constant		3866351						
ANR	3866423	Symbol	value_length		3866351						
ANR	3866424	Symbol	zend_declare_class_constant		3866351						
ANR	3866425	Symbol	name		3866351						
ANR	3866426	Symbol	name_length		3866351						
ANR	3866427	Symbol	* ce		3866351						
ANR	3866428	Symbol	value		3866351						
ANR	3866429	Function	zend_declare_class_constant_string	3793:0:114181:114410							
ANR	3866430	FunctionDef	"zend_declare_class_constant_string (zend_class_entry * ce , const char * name , size_t name_length , const char * value)"		3866429	0					
ANR	3866431	CompoundStatement		3794:0:114318:114410	3866429	0					
ANR	3866432	ReturnStatement	"return zend_declare_class_constant_stringl ( ce , name , name_length , value , strlen ( value ) ) ;"	3795:1:114321:114408	3866429	0	True				
ANR	3866433	CallExpression	"zend_declare_class_constant_stringl ( ce , name , name_length , value , strlen ( value ) )"		3866429	0					
ANR	3866434	Callee	zend_declare_class_constant_stringl		3866429	0					
ANR	3866435	Identifier	zend_declare_class_constant_stringl		3866429	0					
ANR	3866436	ArgumentList	ce		3866429	1					
ANR	3866437	Argument	ce		3866429	0					
ANR	3866438	Identifier	ce		3866429	0					
ANR	3866439	Argument	name		3866429	1					
ANR	3866440	Identifier	name		3866429	0					
ANR	3866441	Argument	name_length		3866429	2					
ANR	3866442	Identifier	name_length		3866429	0					
ANR	3866443	Argument	value		3866429	3					
ANR	3866444	Identifier	value		3866429	0					
ANR	3866445	Argument	strlen ( value )		3866429	4					
ANR	3866446	CallExpression	strlen ( value )		3866429	0					
ANR	3866447	Callee	strlen		3866429	0					
ANR	3866448	Identifier	strlen		3866429	0					
ANR	3866449	ArgumentList	value		3866429	1					
ANR	3866450	Argument	value		3866429	0					
ANR	3866451	Identifier	value		3866429	0					
ANR	3866452	ReturnType	ZEND_API int		3866429	1					
ANR	3866453	Identifier	zend_declare_class_constant_string		3866429	2					
ANR	3866454	ParameterList	"zend_class_entry * ce , const char * name , size_t name_length , const char * value"		3866429	3					
ANR	3866455	Parameter	zend_class_entry * ce	3793:48:114229:114248	3866429	0	True				
ANR	3866456	ParameterType	zend_class_entry *		3866429	0					
ANR	3866457	Identifier	ce		3866429	1					
ANR	3866458	Parameter	const char * name	3793:70:114251:114266	3866429	1	True				
ANR	3866459	ParameterType	const char *		3866429	0					
ANR	3866460	Identifier	name		3866429	1					
ANR	3866461	Parameter	size_t name_length	3793:88:114269:114286	3866429	2	True				
ANR	3866462	ParameterType	size_t		3866429	0					
ANR	3866463	Identifier	name_length		3866429	1					
ANR	3866464	Parameter	const char * value	3793:108:114289:114305	3866429	3	True				
ANR	3866465	ParameterType	const char *		3866429	0					
ANR	3866466	Identifier	value		3866429	1					
ANR	3866467	CFGEntryNode	ENTRY		3866429		True				
ANR	3866468	CFGExitNode	EXIT		3866429		True				
ANR	3866469	Symbol	strlen		3866429						
ANR	3866470	Symbol	ce		3866429						
ANR	3866471	Symbol	name		3866429						
ANR	3866472	Symbol	zend_declare_class_constant_stringl		3866429						
ANR	3866473	Symbol	name_length		3866429						
ANR	3866474	Symbol	value		3866429						
ANR	3866475	Function	zend_update_property_ex	3799:0:114423:114916							
ANR	3866476	FunctionDef	"zend_update_property_ex (zend_class_entry * scope , zval * object , zend_string * name , zval * value)"		3866475	0					
ANR	3866477	CompoundStatement		3800:0:114542:114916	3866475	0					
ANR	3866478	IdentifierDeclStatement	zval property ;	3801:1:114545:114558	3866475	0	True				
ANR	3866479	IdentifierDecl	property		3866475	0					
ANR	3866480	IdentifierDeclType	zval		3866475	0					
ANR	3866481	Identifier	property		3866475	1					
ANR	3866482	IdentifierDeclStatement	zend_class_entry * old_scope = EG ( scope ) ;	3802:1:114561:114600	3866475	1	True				
ANR	3866483	IdentifierDecl	* old_scope = EG ( scope )		3866475	0					
ANR	3866484	IdentifierDeclType	zend_class_entry *		3866475	0					
ANR	3866485	Identifier	old_scope		3866475	1					
ANR	3866486	AssignmentExpression	* old_scope = EG ( scope )		3866475	2		=			
ANR	3866487	Identifier	old_scope		3866475	0					
ANR	3866488	CallExpression	EG ( scope )		3866475	1					
ANR	3866489	Callee	EG		3866475	0					
ANR	3866490	Identifier	EG		3866475	0					
ANR	3866491	ArgumentList	scope		3866475	1					
ANR	3866492	Argument	scope		3866475	0					
ANR	3866493	Identifier	scope		3866475	0					
ANR	3866494	ExpressionStatement	EG ( scope ) = scope	3804:1:114604:114621	3866475	2	True				
ANR	3866495	AssignmentExpression	EG ( scope ) = scope		3866475	0		=			
ANR	3866496	CallExpression	EG ( scope )		3866475	0					
ANR	3866497	Callee	EG		3866475	0					
ANR	3866498	Identifier	EG		3866475	0					
ANR	3866499	ArgumentList	scope		3866475	1					
ANR	3866500	Argument	scope		3866475	0					
ANR	3866501	Identifier	scope		3866475	0					
ANR	3866502	Identifier	scope		3866475	1					
ANR	3866503	IfStatement	if ( ! Z_OBJ_HT_P ( object ) -> write_property )		3866475	3					
ANR	3866504	Condition	! Z_OBJ_HT_P ( object ) -> write_property	3806:5:114629:114663	3866475	0	True				
ANR	3866505	UnaryOperationExpression	! Z_OBJ_HT_P ( object ) -> write_property		3866475	0					
ANR	3866506	UnaryOperator	!		3866475	0					
ANR	3866507	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_property		3866475	1					
ANR	3866508	CallExpression	Z_OBJ_HT_P ( object )		3866475	0					
ANR	3866509	Callee	Z_OBJ_HT_P		3866475	0					
ANR	3866510	Identifier	Z_OBJ_HT_P		3866475	0					
ANR	3866511	ArgumentList	object		3866475	1					
ANR	3866512	Argument	object		3866475	0					
ANR	3866513	Identifier	object		3866475	0					
ANR	3866514	Identifier	write_property		3866475	1					
ANR	3866515	CompoundStatement		7:42:123:123	3866475	1					
ANR	3866516	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Property %s of class %s cannot be updated"" , name , ZSTR_VAL ( Z_OBJCE_P ( object ) -> name ) )"	3807:2:114670:114789	3866475	0	True				
ANR	3866517	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Property %s of class %s cannot be updated"" , name , ZSTR_VAL ( Z_OBJCE_P ( object ) -> name ) )"		3866475	0					
ANR	3866518	Callee	zend_error_noreturn		3866475	0					
ANR	3866519	Identifier	zend_error_noreturn		3866475	0					
ANR	3866520	ArgumentList	E_CORE_ERROR		3866475	1					
ANR	3866521	Argument	E_CORE_ERROR		3866475	0					
ANR	3866522	Identifier	E_CORE_ERROR		3866475	0					
ANR	3866523	Argument	"""Property %s of class %s cannot be updated"""		3866475	1					
ANR	3866524	PrimaryExpression	"""Property %s of class %s cannot be updated"""		3866475	0					
ANR	3866525	Argument	name		3866475	2					
ANR	3866526	Identifier	name		3866475	0					
ANR	3866527	Argument	ZSTR_VAL ( Z_OBJCE_P ( object ) -> name )		3866475	3					
ANR	3866528	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( object ) -> name )		3866475	0					
ANR	3866529	Callee	ZSTR_VAL		3866475	0					
ANR	3866530	Identifier	ZSTR_VAL		3866475	0					
ANR	3866531	ArgumentList	Z_OBJCE_P ( object ) -> name		3866475	1					
ANR	3866532	Argument	Z_OBJCE_P ( object ) -> name		3866475	0					
ANR	3866533	PtrMemberAccess	Z_OBJCE_P ( object ) -> name		3866475	0					
ANR	3866534	CallExpression	Z_OBJCE_P ( object )		3866475	0					
ANR	3866535	Callee	Z_OBJCE_P		3866475	0					
ANR	3866536	Identifier	Z_OBJCE_P		3866475	0					
ANR	3866537	ArgumentList	object		3866475	1					
ANR	3866538	Argument	object		3866475	0					
ANR	3866539	Identifier	object		3866475	0					
ANR	3866540	Identifier	name		3866475	1					
ANR	3866541	ExpressionStatement	"ZVAL_STR ( & property , name )"	3809:1:114795:114820	3866475	4	True				
ANR	3866542	CallExpression	"ZVAL_STR ( & property , name )"		3866475	0					
ANR	3866543	Callee	ZVAL_STR		3866475	0					
ANR	3866544	Identifier	ZVAL_STR		3866475	0					
ANR	3866545	ArgumentList	& property		3866475	1					
ANR	3866546	Argument	& property		3866475	0					
ANR	3866547	UnaryOperationExpression	& property		3866475	0					
ANR	3866548	UnaryOperator	&		3866475	0					
ANR	3866549	Identifier	property		3866475	1					
ANR	3866550	Argument	name		3866475	1					
ANR	3866551	Identifier	name		3866475	0					
ANR	3866552	ExpressionStatement	"Z_OBJ_HT_P ( object ) -> write_property ( object , & property , value , NULL )"	3810:1:114823:114889	3866475	5	True				
ANR	3866553	CallExpression	"Z_OBJ_HT_P ( object ) -> write_property ( object , & property , value , NULL )"		3866475	0					
ANR	3866554	Callee	Z_OBJ_HT_P ( object ) -> write_property		3866475	0					
ANR	3866555	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_property		3866475	0					
ANR	3866556	CallExpression	Z_OBJ_HT_P ( object )		3866475	0					
ANR	3866557	Callee	Z_OBJ_HT_P		3866475	0					
ANR	3866558	Identifier	Z_OBJ_HT_P		3866475	0					
ANR	3866559	ArgumentList	object		3866475	1					
ANR	3866560	Argument	object		3866475	0					
ANR	3866561	Identifier	object		3866475	0					
ANR	3866562	Identifier	write_property		3866475	1					
ANR	3866563	ArgumentList	object		3866475	1					
ANR	3866564	Argument	object		3866475	0					
ANR	3866565	Identifier	object		3866475	0					
ANR	3866566	Argument	& property		3866475	1					
ANR	3866567	UnaryOperationExpression	& property		3866475	0					
ANR	3866568	UnaryOperator	&		3866475	0					
ANR	3866569	Identifier	property		3866475	1					
ANR	3866570	Argument	value		3866475	2					
ANR	3866571	Identifier	value		3866475	0					
ANR	3866572	Argument	NULL		3866475	3					
ANR	3866573	Identifier	NULL		3866475	0					
ANR	3866574	ExpressionStatement	EG ( scope ) = old_scope	3812:1:114893:114914	3866475	6	True				
ANR	3866575	AssignmentExpression	EG ( scope ) = old_scope		3866475	0		=			
ANR	3866576	CallExpression	EG ( scope )		3866475	0					
ANR	3866577	Callee	EG		3866475	0					
ANR	3866578	Identifier	EG		3866475	0					
ANR	3866579	ArgumentList	scope		3866475	1					
ANR	3866580	Argument	scope		3866475	0					
ANR	3866581	Identifier	scope		3866475	0					
ANR	3866582	Identifier	old_scope		3866475	1					
ANR	3866583	ReturnType	ZEND_API void		3866475	1					
ANR	3866584	Identifier	zend_update_property_ex		3866475	2					
ANR	3866585	ParameterList	"zend_class_entry * scope , zval * object , zend_string * name , zval * value"		3866475	3					
ANR	3866586	Parameter	zend_class_entry * scope	3799:38:114461:114483	3866475	0	True				
ANR	3866587	ParameterType	zend_class_entry *		3866475	0					
ANR	3866588	Identifier	scope		3866475	1					
ANR	3866589	Parameter	zval * object	3799:63:114486:114497	3866475	1	True				
ANR	3866590	ParameterType	zval *		3866475	0					
ANR	3866591	Identifier	object		3866475	1					
ANR	3866592	Parameter	zend_string * name	3799:77:114500:114516	3866475	2	True				
ANR	3866593	ParameterType	zend_string *		3866475	0					
ANR	3866594	Identifier	name		3866475	1					
ANR	3866595	Parameter	zval * value	3799:96:114519:114529	3866475	3	True				
ANR	3866596	ParameterType	zval *		3866475	0					
ANR	3866597	Identifier	value		3866475	1					
ANR	3866598	CFGEntryNode	ENTRY		3866475		True				
ANR	3866599	CFGExitNode	EXIT		3866475		True				
ANR	3866600	Symbol	EG		3866475						
ANR	3866601	Symbol	Z_OBJ_HT_P ( object ) -> write_property		3866475						
ANR	3866602	Symbol	Z_OBJCE_P ( object ) -> name		3866475						
ANR	3866603	Symbol	NULL		3866475						
ANR	3866604	Symbol	old_scope		3866475						
ANR	3866605	Symbol	* Z_OBJ_HT_P		3866475						
ANR	3866606	Symbol	& property		3866475						
ANR	3866607	Symbol	ZSTR_VAL		3866475						
ANR	3866608	Symbol	E_CORE_ERROR		3866475						
ANR	3866609	Symbol	scope		3866475						
ANR	3866610	Symbol	name		3866475						
ANR	3866611	Symbol	property		3866475						
ANR	3866612	Symbol	Z_OBJ_HT_P		3866475						
ANR	3866613	Symbol	Z_OBJCE_P		3866475						
ANR	3866614	Symbol	value		3866475						
ANR	3866615	Symbol	object		3866475						
ANR	3866616	Symbol	* Z_OBJCE_P		3866475						
ANR	3866617	Function	zend_update_property	3816:0:114929:115482							
ANR	3866618	FunctionDef	"zend_update_property (zend_class_entry * scope , zval * object , const char * name , size_t name_length , zval * value)"		3866617	0					
ANR	3866619	CompoundStatement		3817:0:115064:115482	3866617	0					
ANR	3866620	IdentifierDeclStatement	zval property ;	3818:1:115067:115080	3866617	0	True				
ANR	3866621	IdentifierDecl	property		3866617	0					
ANR	3866622	IdentifierDeclType	zval		3866617	0					
ANR	3866623	Identifier	property		3866617	1					
ANR	3866624	IdentifierDeclStatement	zend_class_entry * old_scope = EG ( scope ) ;	3819:1:115083:115122	3866617	1	True				
ANR	3866625	IdentifierDecl	* old_scope = EG ( scope )		3866617	0					
ANR	3866626	IdentifierDeclType	zend_class_entry *		3866617	0					
ANR	3866627	Identifier	old_scope		3866617	1					
ANR	3866628	AssignmentExpression	* old_scope = EG ( scope )		3866617	2		=			
ANR	3866629	Identifier	old_scope		3866617	0					
ANR	3866630	CallExpression	EG ( scope )		3866617	1					
ANR	3866631	Callee	EG		3866617	0					
ANR	3866632	Identifier	EG		3866617	0					
ANR	3866633	ArgumentList	scope		3866617	1					
ANR	3866634	Argument	scope		3866617	0					
ANR	3866635	Identifier	scope		3866617	0					
ANR	3866636	ExpressionStatement	EG ( scope ) = scope	3821:1:115126:115143	3866617	2	True				
ANR	3866637	AssignmentExpression	EG ( scope ) = scope		3866617	0		=			
ANR	3866638	CallExpression	EG ( scope )		3866617	0					
ANR	3866639	Callee	EG		3866617	0					
ANR	3866640	Identifier	EG		3866617	0					
ANR	3866641	ArgumentList	scope		3866617	1					
ANR	3866642	Argument	scope		3866617	0					
ANR	3866643	Identifier	scope		3866617	0					
ANR	3866644	Identifier	scope		3866617	1					
ANR	3866645	IfStatement	if ( ! Z_OBJ_HT_P ( object ) -> write_property )		3866617	3					
ANR	3866646	Condition	! Z_OBJ_HT_P ( object ) -> write_property	3823:5:115151:115185	3866617	0	True				
ANR	3866647	UnaryOperationExpression	! Z_OBJ_HT_P ( object ) -> write_property		3866617	0					
ANR	3866648	UnaryOperator	!		3866617	0					
ANR	3866649	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_property		3866617	1					
ANR	3866650	CallExpression	Z_OBJ_HT_P ( object )		3866617	0					
ANR	3866651	Callee	Z_OBJ_HT_P		3866617	0					
ANR	3866652	Identifier	Z_OBJ_HT_P		3866617	0					
ANR	3866653	ArgumentList	object		3866617	1					
ANR	3866654	Argument	object		3866617	0					
ANR	3866655	Identifier	object		3866617	0					
ANR	3866656	Identifier	write_property		3866617	1					
ANR	3866657	CompoundStatement		7:42:123:123	3866617	1					
ANR	3866658	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Property %s of class %s cannot be updated"" , name , ZSTR_VAL ( Z_OBJCE_P ( object ) -> name ) )"	3824:2:115192:115311	3866617	0	True				
ANR	3866659	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Property %s of class %s cannot be updated"" , name , ZSTR_VAL ( Z_OBJCE_P ( object ) -> name ) )"		3866617	0					
ANR	3866660	Callee	zend_error_noreturn		3866617	0					
ANR	3866661	Identifier	zend_error_noreturn		3866617	0					
ANR	3866662	ArgumentList	E_CORE_ERROR		3866617	1					
ANR	3866663	Argument	E_CORE_ERROR		3866617	0					
ANR	3866664	Identifier	E_CORE_ERROR		3866617	0					
ANR	3866665	Argument	"""Property %s of class %s cannot be updated"""		3866617	1					
ANR	3866666	PrimaryExpression	"""Property %s of class %s cannot be updated"""		3866617	0					
ANR	3866667	Argument	name		3866617	2					
ANR	3866668	Identifier	name		3866617	0					
ANR	3866669	Argument	ZSTR_VAL ( Z_OBJCE_P ( object ) -> name )		3866617	3					
ANR	3866670	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( object ) -> name )		3866617	0					
ANR	3866671	Callee	ZSTR_VAL		3866617	0					
ANR	3866672	Identifier	ZSTR_VAL		3866617	0					
ANR	3866673	ArgumentList	Z_OBJCE_P ( object ) -> name		3866617	1					
ANR	3866674	Argument	Z_OBJCE_P ( object ) -> name		3866617	0					
ANR	3866675	PtrMemberAccess	Z_OBJCE_P ( object ) -> name		3866617	0					
ANR	3866676	CallExpression	Z_OBJCE_P ( object )		3866617	0					
ANR	3866677	Callee	Z_OBJCE_P		3866617	0					
ANR	3866678	Identifier	Z_OBJCE_P		3866617	0					
ANR	3866679	ArgumentList	object		3866617	1					
ANR	3866680	Argument	object		3866617	0					
ANR	3866681	Identifier	object		3866617	0					
ANR	3866682	Identifier	name		3866617	1					
ANR	3866683	ExpressionStatement	"ZVAL_STRINGL ( & property , name , name_length )"	3826:1:115317:115359	3866617	4	True				
ANR	3866684	CallExpression	"ZVAL_STRINGL ( & property , name , name_length )"		3866617	0					
ANR	3866685	Callee	ZVAL_STRINGL		3866617	0					
ANR	3866686	Identifier	ZVAL_STRINGL		3866617	0					
ANR	3866687	ArgumentList	& property		3866617	1					
ANR	3866688	Argument	& property		3866617	0					
ANR	3866689	UnaryOperationExpression	& property		3866617	0					
ANR	3866690	UnaryOperator	&		3866617	0					
ANR	3866691	Identifier	property		3866617	1					
ANR	3866692	Argument	name		3866617	1					
ANR	3866693	Identifier	name		3866617	0					
ANR	3866694	Argument	name_length		3866617	2					
ANR	3866695	Identifier	name_length		3866617	0					
ANR	3866696	ExpressionStatement	"Z_OBJ_HT_P ( object ) -> write_property ( object , & property , value , NULL )"	3827:1:115362:115428	3866617	5	True				
ANR	3866697	CallExpression	"Z_OBJ_HT_P ( object ) -> write_property ( object , & property , value , NULL )"		3866617	0					
ANR	3866698	Callee	Z_OBJ_HT_P ( object ) -> write_property		3866617	0					
ANR	3866699	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_property		3866617	0					
ANR	3866700	CallExpression	Z_OBJ_HT_P ( object )		3866617	0					
ANR	3866701	Callee	Z_OBJ_HT_P		3866617	0					
ANR	3866702	Identifier	Z_OBJ_HT_P		3866617	0					
ANR	3866703	ArgumentList	object		3866617	1					
ANR	3866704	Argument	object		3866617	0					
ANR	3866705	Identifier	object		3866617	0					
ANR	3866706	Identifier	write_property		3866617	1					
ANR	3866707	ArgumentList	object		3866617	1					
ANR	3866708	Argument	object		3866617	0					
ANR	3866709	Identifier	object		3866617	0					
ANR	3866710	Argument	& property		3866617	1					
ANR	3866711	UnaryOperationExpression	& property		3866617	0					
ANR	3866712	UnaryOperator	&		3866617	0					
ANR	3866713	Identifier	property		3866617	1					
ANR	3866714	Argument	value		3866617	2					
ANR	3866715	Identifier	value		3866617	0					
ANR	3866716	Argument	NULL		3866617	3					
ANR	3866717	Identifier	NULL		3866617	0					
ANR	3866718	ExpressionStatement	zval_ptr_dtor ( & property )	3828:1:115431:115455	3866617	6	True				
ANR	3866719	CallExpression	zval_ptr_dtor ( & property )		3866617	0					
ANR	3866720	Callee	zval_ptr_dtor		3866617	0					
ANR	3866721	Identifier	zval_ptr_dtor		3866617	0					
ANR	3866722	ArgumentList	& property		3866617	1					
ANR	3866723	Argument	& property		3866617	0					
ANR	3866724	UnaryOperationExpression	& property		3866617	0					
ANR	3866725	UnaryOperator	&		3866617	0					
ANR	3866726	Identifier	property		3866617	1					
ANR	3866727	ExpressionStatement	EG ( scope ) = old_scope	3830:1:115459:115480	3866617	7	True				
ANR	3866728	AssignmentExpression	EG ( scope ) = old_scope		3866617	0		=			
ANR	3866729	CallExpression	EG ( scope )		3866617	0					
ANR	3866730	Callee	EG		3866617	0					
ANR	3866731	Identifier	EG		3866617	0					
ANR	3866732	ArgumentList	scope		3866617	1					
ANR	3866733	Argument	scope		3866617	0					
ANR	3866734	Identifier	scope		3866617	0					
ANR	3866735	Identifier	old_scope		3866617	1					
ANR	3866736	ReturnType	ZEND_API void		3866617	1					
ANR	3866737	Identifier	zend_update_property		3866617	2					
ANR	3866738	ParameterList	"zend_class_entry * scope , zval * object , const char * name , size_t name_length , zval * value"		3866617	3					
ANR	3866739	Parameter	zend_class_entry * scope	3816:35:114964:114986	3866617	0	True				
ANR	3866740	ParameterType	zend_class_entry *		3866617	0					
ANR	3866741	Identifier	scope		3866617	1					
ANR	3866742	Parameter	zval * object	3816:60:114989:115000	3866617	1	True				
ANR	3866743	ParameterType	zval *		3866617	0					
ANR	3866744	Identifier	object		3866617	1					
ANR	3866745	Parameter	const char * name	3816:74:115003:115018	3866617	2	True				
ANR	3866746	ParameterType	const char *		3866617	0					
ANR	3866747	Identifier	name		3866617	1					
ANR	3866748	Parameter	size_t name_length	3816:92:115021:115038	3866617	3	True				
ANR	3866749	ParameterType	size_t		3866617	0					
ANR	3866750	Identifier	name_length		3866617	1					
ANR	3866751	Parameter	zval * value	3816:112:115041:115051	3866617	4	True				
ANR	3866752	ParameterType	zval *		3866617	0					
ANR	3866753	Identifier	value		3866617	1					
ANR	3866754	CFGEntryNode	ENTRY		3866617		True				
ANR	3866755	CFGExitNode	EXIT		3866617		True				
ANR	3866756	Symbol	EG		3866617						
ANR	3866757	Symbol	Z_OBJ_HT_P ( object ) -> write_property		3866617						
ANR	3866758	Symbol	Z_OBJCE_P ( object ) -> name		3866617						
ANR	3866759	Symbol	NULL		3866617						
ANR	3866760	Symbol	old_scope		3866617						
ANR	3866761	Symbol	name_length		3866617						
ANR	3866762	Symbol	* Z_OBJ_HT_P		3866617						
ANR	3866763	Symbol	& property		3866617						
ANR	3866764	Symbol	ZSTR_VAL		3866617						
ANR	3866765	Symbol	E_CORE_ERROR		3866617						
ANR	3866766	Symbol	scope		3866617						
ANR	3866767	Symbol	name		3866617						
ANR	3866768	Symbol	property		3866617						
ANR	3866769	Symbol	Z_OBJ_HT_P		3866617						
ANR	3866770	Symbol	Z_OBJCE_P		3866617						
ANR	3866771	Symbol	value		3866617						
ANR	3866772	Symbol	object		3866617						
ANR	3866773	Symbol	* Z_OBJCE_P		3866617						
ANR	3866774	Function	zend_update_property_null	3834:0:115495:115717							
ANR	3866775	FunctionDef	"zend_update_property_null (zend_class_entry * scope , zval * object , const char * name , size_t name_length)"		3866774	0					
ANR	3866776	CompoundStatement		3835:0:115622:115717	3866774	0					
ANR	3866777	IdentifierDeclStatement	zval tmp ;	3836:1:115625:115633	3866774	0	True				
ANR	3866778	IdentifierDecl	tmp		3866774	0					
ANR	3866779	IdentifierDeclType	zval		3866774	0					
ANR	3866780	Identifier	tmp		3866774	1					
ANR	3866781	ExpressionStatement	ZVAL_NULL ( & tmp )	3838:1:115637:115652	3866774	1	True				
ANR	3866782	CallExpression	ZVAL_NULL ( & tmp )		3866774	0					
ANR	3866783	Callee	ZVAL_NULL		3866774	0					
ANR	3866784	Identifier	ZVAL_NULL		3866774	0					
ANR	3866785	ArgumentList	& tmp		3866774	1					
ANR	3866786	Argument	& tmp		3866774	0					
ANR	3866787	UnaryOperationExpression	& tmp		3866774	0					
ANR	3866788	UnaryOperator	&		3866774	0					
ANR	3866789	Identifier	tmp		3866774	1					
ANR	3866790	ExpressionStatement	"zend_update_property ( scope , object , name , name_length , & tmp )"	3839:1:115655:115715	3866774	2	True				
ANR	3866791	CallExpression	"zend_update_property ( scope , object , name , name_length , & tmp )"		3866774	0					
ANR	3866792	Callee	zend_update_property		3866774	0					
ANR	3866793	Identifier	zend_update_property		3866774	0					
ANR	3866794	ArgumentList	scope		3866774	1					
ANR	3866795	Argument	scope		3866774	0					
ANR	3866796	Identifier	scope		3866774	0					
ANR	3866797	Argument	object		3866774	1					
ANR	3866798	Identifier	object		3866774	0					
ANR	3866799	Argument	name		3866774	2					
ANR	3866800	Identifier	name		3866774	0					
ANR	3866801	Argument	name_length		3866774	3					
ANR	3866802	Identifier	name_length		3866774	0					
ANR	3866803	Argument	& tmp		3866774	4					
ANR	3866804	UnaryOperationExpression	& tmp		3866774	0					
ANR	3866805	UnaryOperator	&		3866774	0					
ANR	3866806	Identifier	tmp		3866774	1					
ANR	3866807	ReturnType	ZEND_API void		3866774	1					
ANR	3866808	Identifier	zend_update_property_null		3866774	2					
ANR	3866809	ParameterList	"zend_class_entry * scope , zval * object , const char * name , size_t name_length"		3866774	3					
ANR	3866810	Parameter	zend_class_entry * scope	3834:40:115535:115557	3866774	0	True				
ANR	3866811	ParameterType	zend_class_entry *		3866774	0					
ANR	3866812	Identifier	scope		3866774	1					
ANR	3866813	Parameter	zval * object	3834:65:115560:115571	3866774	1	True				
ANR	3866814	ParameterType	zval *		3866774	0					
ANR	3866815	Identifier	object		3866774	1					
ANR	3866816	Parameter	const char * name	3834:79:115574:115589	3866774	2	True				
ANR	3866817	ParameterType	const char *		3866774	0					
ANR	3866818	Identifier	name		3866774	1					
ANR	3866819	Parameter	size_t name_length	3834:97:115592:115609	3866774	3	True				
ANR	3866820	ParameterType	size_t		3866774	0					
ANR	3866821	Identifier	name_length		3866774	1					
ANR	3866822	CFGEntryNode	ENTRY		3866774		True				
ANR	3866823	CFGExitNode	EXIT		3866774		True				
ANR	3866824	Symbol	tmp		3866774						
ANR	3866825	Symbol	scope		3866774						
ANR	3866826	Symbol	name		3866774						
ANR	3866827	Symbol	name_length		3866774						
ANR	3866828	Symbol	& tmp		3866774						
ANR	3866829	Symbol	object		3866774						
ANR	3866830	Function	zend_update_property_bool	3843:0:115730:115976							
ANR	3866831	FunctionDef	"zend_update_property_bool (zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_long value)"		3866830	0					
ANR	3866832	CompoundStatement		3844:0:115874:115976	3866830	0					
ANR	3866833	IdentifierDeclStatement	zval tmp ;	3845:1:115877:115885	3866830	0	True				
ANR	3866834	IdentifierDecl	tmp		3866830	0					
ANR	3866835	IdentifierDeclType	zval		3866830	0					
ANR	3866836	Identifier	tmp		3866830	1					
ANR	3866837	ExpressionStatement	"ZVAL_BOOL ( & tmp , value )"	3847:1:115889:115911	3866830	1	True				
ANR	3866838	CallExpression	"ZVAL_BOOL ( & tmp , value )"		3866830	0					
ANR	3866839	Callee	ZVAL_BOOL		3866830	0					
ANR	3866840	Identifier	ZVAL_BOOL		3866830	0					
ANR	3866841	ArgumentList	& tmp		3866830	1					
ANR	3866842	Argument	& tmp		3866830	0					
ANR	3866843	UnaryOperationExpression	& tmp		3866830	0					
ANR	3866844	UnaryOperator	&		3866830	0					
ANR	3866845	Identifier	tmp		3866830	1					
ANR	3866846	Argument	value		3866830	1					
ANR	3866847	Identifier	value		3866830	0					
ANR	3866848	ExpressionStatement	"zend_update_property ( scope , object , name , name_length , & tmp )"	3848:1:115914:115974	3866830	2	True				
ANR	3866849	CallExpression	"zend_update_property ( scope , object , name , name_length , & tmp )"		3866830	0					
ANR	3866850	Callee	zend_update_property		3866830	0					
ANR	3866851	Identifier	zend_update_property		3866830	0					
ANR	3866852	ArgumentList	scope		3866830	1					
ANR	3866853	Argument	scope		3866830	0					
ANR	3866854	Identifier	scope		3866830	0					
ANR	3866855	Argument	object		3866830	1					
ANR	3866856	Identifier	object		3866830	0					
ANR	3866857	Argument	name		3866830	2					
ANR	3866858	Identifier	name		3866830	0					
ANR	3866859	Argument	name_length		3866830	3					
ANR	3866860	Identifier	name_length		3866830	0					
ANR	3866861	Argument	& tmp		3866830	4					
ANR	3866862	UnaryOperationExpression	& tmp		3866830	0					
ANR	3866863	UnaryOperator	&		3866830	0					
ANR	3866864	Identifier	tmp		3866830	1					
ANR	3866865	ReturnType	ZEND_API void		3866830	1					
ANR	3866866	Identifier	zend_update_property_bool		3866830	2					
ANR	3866867	ParameterList	"zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_long value"		3866830	3					
ANR	3866868	Parameter	zend_class_entry * scope	3843:40:115770:115792	3866830	0	True				
ANR	3866869	ParameterType	zend_class_entry *		3866830	0					
ANR	3866870	Identifier	scope		3866830	1					
ANR	3866871	Parameter	zval * object	3843:65:115795:115806	3866830	1	True				
ANR	3866872	ParameterType	zval *		3866830	0					
ANR	3866873	Identifier	object		3866830	1					
ANR	3866874	Parameter	const char * name	3843:79:115809:115824	3866830	2	True				
ANR	3866875	ParameterType	const char *		3866830	0					
ANR	3866876	Identifier	name		3866830	1					
ANR	3866877	Parameter	size_t name_length	3843:97:115827:115844	3866830	3	True				
ANR	3866878	ParameterType	size_t		3866830	0					
ANR	3866879	Identifier	name_length		3866830	1					
ANR	3866880	Parameter	zend_long value	3843:117:115847:115861	3866830	4	True				
ANR	3866881	ParameterType	zend_long		3866830	0					
ANR	3866882	Identifier	value		3866830	1					
ANR	3866883	CFGEntryNode	ENTRY		3866830		True				
ANR	3866884	CFGExitNode	EXIT		3866830		True				
ANR	3866885	Symbol	tmp		3866830						
ANR	3866886	Symbol	scope		3866830						
ANR	3866887	Symbol	name		3866830						
ANR	3866888	Symbol	name_length		3866830						
ANR	3866889	Symbol	& tmp		3866830						
ANR	3866890	Symbol	value		3866830						
ANR	3866891	Symbol	object		3866830						
ANR	3866892	Function	zend_update_property_long	3852:0:115989:116235							
ANR	3866893	FunctionDef	"zend_update_property_long (zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_long value)"		3866892	0					
ANR	3866894	CompoundStatement		3853:0:116133:116235	3866892	0					
ANR	3866895	IdentifierDeclStatement	zval tmp ;	3854:1:116136:116144	3866892	0	True				
ANR	3866896	IdentifierDecl	tmp		3866892	0					
ANR	3866897	IdentifierDeclType	zval		3866892	0					
ANR	3866898	Identifier	tmp		3866892	1					
ANR	3866899	ExpressionStatement	"ZVAL_LONG ( & tmp , value )"	3856:1:116148:116170	3866892	1	True				
ANR	3866900	CallExpression	"ZVAL_LONG ( & tmp , value )"		3866892	0					
ANR	3866901	Callee	ZVAL_LONG		3866892	0					
ANR	3866902	Identifier	ZVAL_LONG		3866892	0					
ANR	3866903	ArgumentList	& tmp		3866892	1					
ANR	3866904	Argument	& tmp		3866892	0					
ANR	3866905	UnaryOperationExpression	& tmp		3866892	0					
ANR	3866906	UnaryOperator	&		3866892	0					
ANR	3866907	Identifier	tmp		3866892	1					
ANR	3866908	Argument	value		3866892	1					
ANR	3866909	Identifier	value		3866892	0					
ANR	3866910	ExpressionStatement	"zend_update_property ( scope , object , name , name_length , & tmp )"	3857:1:116173:116233	3866892	2	True				
ANR	3866911	CallExpression	"zend_update_property ( scope , object , name , name_length , & tmp )"		3866892	0					
ANR	3866912	Callee	zend_update_property		3866892	0					
ANR	3866913	Identifier	zend_update_property		3866892	0					
ANR	3866914	ArgumentList	scope		3866892	1					
ANR	3866915	Argument	scope		3866892	0					
ANR	3866916	Identifier	scope		3866892	0					
ANR	3866917	Argument	object		3866892	1					
ANR	3866918	Identifier	object		3866892	0					
ANR	3866919	Argument	name		3866892	2					
ANR	3866920	Identifier	name		3866892	0					
ANR	3866921	Argument	name_length		3866892	3					
ANR	3866922	Identifier	name_length		3866892	0					
ANR	3866923	Argument	& tmp		3866892	4					
ANR	3866924	UnaryOperationExpression	& tmp		3866892	0					
ANR	3866925	UnaryOperator	&		3866892	0					
ANR	3866926	Identifier	tmp		3866892	1					
ANR	3866927	ReturnType	ZEND_API void		3866892	1					
ANR	3866928	Identifier	zend_update_property_long		3866892	2					
ANR	3866929	ParameterList	"zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_long value"		3866892	3					
ANR	3866930	Parameter	zend_class_entry * scope	3852:40:116029:116051	3866892	0	True				
ANR	3866931	ParameterType	zend_class_entry *		3866892	0					
ANR	3866932	Identifier	scope		3866892	1					
ANR	3866933	Parameter	zval * object	3852:65:116054:116065	3866892	1	True				
ANR	3866934	ParameterType	zval *		3866892	0					
ANR	3866935	Identifier	object		3866892	1					
ANR	3866936	Parameter	const char * name	3852:79:116068:116083	3866892	2	True				
ANR	3866937	ParameterType	const char *		3866892	0					
ANR	3866938	Identifier	name		3866892	1					
ANR	3866939	Parameter	size_t name_length	3852:97:116086:116103	3866892	3	True				
ANR	3866940	ParameterType	size_t		3866892	0					
ANR	3866941	Identifier	name_length		3866892	1					
ANR	3866942	Parameter	zend_long value	3852:117:116106:116120	3866892	4	True				
ANR	3866943	ParameterType	zend_long		3866892	0					
ANR	3866944	Identifier	value		3866892	1					
ANR	3866945	CFGEntryNode	ENTRY		3866892		True				
ANR	3866946	CFGExitNode	EXIT		3866892		True				
ANR	3866947	Symbol	tmp		3866892						
ANR	3866948	Symbol	scope		3866892						
ANR	3866949	Symbol	name		3866892						
ANR	3866950	Symbol	name_length		3866892						
ANR	3866951	Symbol	& tmp		3866892						
ANR	3866952	Symbol	value		3866892						
ANR	3866953	Symbol	object		3866892						
ANR	3866954	Function	zend_update_property_double	3861:0:116248:116495							
ANR	3866955	FunctionDef	"zend_update_property_double (zend_class_entry * scope , zval * object , const char * name , size_t name_length , double value)"		3866954	0					
ANR	3866956	CompoundStatement		3862:0:116391:116495	3866954	0					
ANR	3866957	IdentifierDeclStatement	zval tmp ;	3863:1:116394:116402	3866954	0	True				
ANR	3866958	IdentifierDecl	tmp		3866954	0					
ANR	3866959	IdentifierDeclType	zval		3866954	0					
ANR	3866960	Identifier	tmp		3866954	1					
ANR	3866961	ExpressionStatement	"ZVAL_DOUBLE ( & tmp , value )"	3865:1:116406:116430	3866954	1	True				
ANR	3866962	CallExpression	"ZVAL_DOUBLE ( & tmp , value )"		3866954	0					
ANR	3866963	Callee	ZVAL_DOUBLE		3866954	0					
ANR	3866964	Identifier	ZVAL_DOUBLE		3866954	0					
ANR	3866965	ArgumentList	& tmp		3866954	1					
ANR	3866966	Argument	& tmp		3866954	0					
ANR	3866967	UnaryOperationExpression	& tmp		3866954	0					
ANR	3866968	UnaryOperator	&		3866954	0					
ANR	3866969	Identifier	tmp		3866954	1					
ANR	3866970	Argument	value		3866954	1					
ANR	3866971	Identifier	value		3866954	0					
ANR	3866972	ExpressionStatement	"zend_update_property ( scope , object , name , name_length , & tmp )"	3866:1:116433:116493	3866954	2	True				
ANR	3866973	CallExpression	"zend_update_property ( scope , object , name , name_length , & tmp )"		3866954	0					
ANR	3866974	Callee	zend_update_property		3866954	0					
ANR	3866975	Identifier	zend_update_property		3866954	0					
ANR	3866976	ArgumentList	scope		3866954	1					
ANR	3866977	Argument	scope		3866954	0					
ANR	3866978	Identifier	scope		3866954	0					
ANR	3866979	Argument	object		3866954	1					
ANR	3866980	Identifier	object		3866954	0					
ANR	3866981	Argument	name		3866954	2					
ANR	3866982	Identifier	name		3866954	0					
ANR	3866983	Argument	name_length		3866954	3					
ANR	3866984	Identifier	name_length		3866954	0					
ANR	3866985	Argument	& tmp		3866954	4					
ANR	3866986	UnaryOperationExpression	& tmp		3866954	0					
ANR	3866987	UnaryOperator	&		3866954	0					
ANR	3866988	Identifier	tmp		3866954	1					
ANR	3866989	ReturnType	ZEND_API void		3866954	1					
ANR	3866990	Identifier	zend_update_property_double		3866954	2					
ANR	3866991	ParameterList	"zend_class_entry * scope , zval * object , const char * name , size_t name_length , double value"		3866954	3					
ANR	3866992	Parameter	zend_class_entry * scope	3861:42:116290:116312	3866954	0	True				
ANR	3866993	ParameterType	zend_class_entry *		3866954	0					
ANR	3866994	Identifier	scope		3866954	1					
ANR	3866995	Parameter	zval * object	3861:67:116315:116326	3866954	1	True				
ANR	3866996	ParameterType	zval *		3866954	0					
ANR	3866997	Identifier	object		3866954	1					
ANR	3866998	Parameter	const char * name	3861:81:116329:116344	3866954	2	True				
ANR	3866999	ParameterType	const char *		3866954	0					
ANR	3867000	Identifier	name		3866954	1					
ANR	3867001	Parameter	size_t name_length	3861:99:116347:116364	3866954	3	True				
ANR	3867002	ParameterType	size_t		3866954	0					
ANR	3867003	Identifier	name_length		3866954	1					
ANR	3867004	Parameter	double value	3861:119:116367:116378	3866954	4	True				
ANR	3867005	ParameterType	double		3866954	0					
ANR	3867006	Identifier	value		3866954	1					
ANR	3867007	CFGEntryNode	ENTRY		3866954		True				
ANR	3867008	CFGExitNode	EXIT		3866954		True				
ANR	3867009	Symbol	tmp		3866954						
ANR	3867010	Symbol	scope		3866954						
ANR	3867011	Symbol	name		3866954						
ANR	3867012	Symbol	name_length		3866954						
ANR	3867013	Symbol	& tmp		3866954						
ANR	3867014	Symbol	value		3866954						
ANR	3867015	Symbol	object		3866954						
ANR	3867016	Function	zend_update_property_str	3870:0:116508:116755							
ANR	3867017	FunctionDef	"zend_update_property_str (zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_string * value)"		3867016	0					
ANR	3867018	CompoundStatement		3871:0:116654:116755	3867016	0					
ANR	3867019	IdentifierDeclStatement	zval tmp ;	3872:1:116657:116665	3867016	0	True				
ANR	3867020	IdentifierDecl	tmp		3867016	0					
ANR	3867021	IdentifierDeclType	zval		3867016	0					
ANR	3867022	Identifier	tmp		3867016	1					
ANR	3867023	ExpressionStatement	"ZVAL_STR ( & tmp , value )"	3874:1:116669:116690	3867016	1	True				
ANR	3867024	CallExpression	"ZVAL_STR ( & tmp , value )"		3867016	0					
ANR	3867025	Callee	ZVAL_STR		3867016	0					
ANR	3867026	Identifier	ZVAL_STR		3867016	0					
ANR	3867027	ArgumentList	& tmp		3867016	1					
ANR	3867028	Argument	& tmp		3867016	0					
ANR	3867029	UnaryOperationExpression	& tmp		3867016	0					
ANR	3867030	UnaryOperator	&		3867016	0					
ANR	3867031	Identifier	tmp		3867016	1					
ANR	3867032	Argument	value		3867016	1					
ANR	3867033	Identifier	value		3867016	0					
ANR	3867034	ExpressionStatement	"zend_update_property ( scope , object , name , name_length , & tmp )"	3875:1:116693:116753	3867016	2	True				
ANR	3867035	CallExpression	"zend_update_property ( scope , object , name , name_length , & tmp )"		3867016	0					
ANR	3867036	Callee	zend_update_property		3867016	0					
ANR	3867037	Identifier	zend_update_property		3867016	0					
ANR	3867038	ArgumentList	scope		3867016	1					
ANR	3867039	Argument	scope		3867016	0					
ANR	3867040	Identifier	scope		3867016	0					
ANR	3867041	Argument	object		3867016	1					
ANR	3867042	Identifier	object		3867016	0					
ANR	3867043	Argument	name		3867016	2					
ANR	3867044	Identifier	name		3867016	0					
ANR	3867045	Argument	name_length		3867016	3					
ANR	3867046	Identifier	name_length		3867016	0					
ANR	3867047	Argument	& tmp		3867016	4					
ANR	3867048	UnaryOperationExpression	& tmp		3867016	0					
ANR	3867049	UnaryOperator	&		3867016	0					
ANR	3867050	Identifier	tmp		3867016	1					
ANR	3867051	ReturnType	ZEND_API void		3867016	1					
ANR	3867052	Identifier	zend_update_property_str		3867016	2					
ANR	3867053	ParameterList	"zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_string * value"		3867016	3					
ANR	3867054	Parameter	zend_class_entry * scope	3870:39:116547:116569	3867016	0	True				
ANR	3867055	ParameterType	zend_class_entry *		3867016	0					
ANR	3867056	Identifier	scope		3867016	1					
ANR	3867057	Parameter	zval * object	3870:64:116572:116583	3867016	1	True				
ANR	3867058	ParameterType	zval *		3867016	0					
ANR	3867059	Identifier	object		3867016	1					
ANR	3867060	Parameter	const char * name	3870:78:116586:116601	3867016	2	True				
ANR	3867061	ParameterType	const char *		3867016	0					
ANR	3867062	Identifier	name		3867016	1					
ANR	3867063	Parameter	size_t name_length	3870:96:116604:116621	3867016	3	True				
ANR	3867064	ParameterType	size_t		3867016	0					
ANR	3867065	Identifier	name_length		3867016	1					
ANR	3867066	Parameter	zend_string * value	3870:116:116624:116641	3867016	4	True				
ANR	3867067	ParameterType	zend_string *		3867016	0					
ANR	3867068	Identifier	value		3867016	1					
ANR	3867069	CFGEntryNode	ENTRY		3867016		True				
ANR	3867070	CFGExitNode	EXIT		3867016		True				
ANR	3867071	Symbol	tmp		3867016						
ANR	3867072	Symbol	scope		3867016						
ANR	3867073	Symbol	name		3867016						
ANR	3867074	Symbol	name_length		3867016						
ANR	3867075	Symbol	& tmp		3867016						
ANR	3867076	Symbol	value		3867016						
ANR	3867077	Symbol	object		3867016						
ANR	3867078	Function	zend_update_property_string	3879:0:116768:117045							
ANR	3867079	FunctionDef	"zend_update_property_string (zend_class_entry * scope , zval * object , const char * name , size_t name_length , const char * value)"		3867078	0					
ANR	3867080	CompoundStatement		3880:0:116916:117045	3867078	0					
ANR	3867081	IdentifierDeclStatement	zval tmp ;	3881:1:116919:116927	3867078	0	True				
ANR	3867082	IdentifierDecl	tmp		3867078	0					
ANR	3867083	IdentifierDeclType	zval		3867078	0					
ANR	3867084	Identifier	tmp		3867078	1					
ANR	3867085	ExpressionStatement	"ZVAL_STRING ( & tmp , value )"	3883:1:116931:116955	3867078	1	True				
ANR	3867086	CallExpression	"ZVAL_STRING ( & tmp , value )"		3867078	0					
ANR	3867087	Callee	ZVAL_STRING		3867078	0					
ANR	3867088	Identifier	ZVAL_STRING		3867078	0					
ANR	3867089	ArgumentList	& tmp		3867078	1					
ANR	3867090	Argument	& tmp		3867078	0					
ANR	3867091	UnaryOperationExpression	& tmp		3867078	0					
ANR	3867092	UnaryOperator	&		3867078	0					
ANR	3867093	Identifier	tmp		3867078	1					
ANR	3867094	Argument	value		3867078	1					
ANR	3867095	Identifier	value		3867078	0					
ANR	3867096	ExpressionStatement	"Z_SET_REFCOUNT ( tmp , 0 )"	3884:1:116958:116980	3867078	2	True				
ANR	3867097	CallExpression	"Z_SET_REFCOUNT ( tmp , 0 )"		3867078	0					
ANR	3867098	Callee	Z_SET_REFCOUNT		3867078	0					
ANR	3867099	Identifier	Z_SET_REFCOUNT		3867078	0					
ANR	3867100	ArgumentList	tmp		3867078	1					
ANR	3867101	Argument	tmp		3867078	0					
ANR	3867102	Identifier	tmp		3867078	0					
ANR	3867103	Argument	0		3867078	1					
ANR	3867104	PrimaryExpression	0		3867078	0					
ANR	3867105	ExpressionStatement	"zend_update_property ( scope , object , name , name_length , & tmp )"	3885:1:116983:117043	3867078	3	True				
ANR	3867106	CallExpression	"zend_update_property ( scope , object , name , name_length , & tmp )"		3867078	0					
ANR	3867107	Callee	zend_update_property		3867078	0					
ANR	3867108	Identifier	zend_update_property		3867078	0					
ANR	3867109	ArgumentList	scope		3867078	1					
ANR	3867110	Argument	scope		3867078	0					
ANR	3867111	Identifier	scope		3867078	0					
ANR	3867112	Argument	object		3867078	1					
ANR	3867113	Identifier	object		3867078	0					
ANR	3867114	Argument	name		3867078	2					
ANR	3867115	Identifier	name		3867078	0					
ANR	3867116	Argument	name_length		3867078	3					
ANR	3867117	Identifier	name_length		3867078	0					
ANR	3867118	Argument	& tmp		3867078	4					
ANR	3867119	UnaryOperationExpression	& tmp		3867078	0					
ANR	3867120	UnaryOperator	&		3867078	0					
ANR	3867121	Identifier	tmp		3867078	1					
ANR	3867122	ReturnType	ZEND_API void		3867078	1					
ANR	3867123	Identifier	zend_update_property_string		3867078	2					
ANR	3867124	ParameterList	"zend_class_entry * scope , zval * object , const char * name , size_t name_length , const char * value"		3867078	3					
ANR	3867125	Parameter	zend_class_entry * scope	3879:42:116810:116832	3867078	0	True				
ANR	3867126	ParameterType	zend_class_entry *		3867078	0					
ANR	3867127	Identifier	scope		3867078	1					
ANR	3867128	Parameter	zval * object	3879:67:116835:116846	3867078	1	True				
ANR	3867129	ParameterType	zval *		3867078	0					
ANR	3867130	Identifier	object		3867078	1					
ANR	3867131	Parameter	const char * name	3879:81:116849:116864	3867078	2	True				
ANR	3867132	ParameterType	const char *		3867078	0					
ANR	3867133	Identifier	name		3867078	1					
ANR	3867134	Parameter	size_t name_length	3879:99:116867:116884	3867078	3	True				
ANR	3867135	ParameterType	size_t		3867078	0					
ANR	3867136	Identifier	name_length		3867078	1					
ANR	3867137	Parameter	const char * value	3879:119:116887:116903	3867078	4	True				
ANR	3867138	ParameterType	const char *		3867078	0					
ANR	3867139	Identifier	value		3867078	1					
ANR	3867140	CFGEntryNode	ENTRY		3867078		True				
ANR	3867141	CFGExitNode	EXIT		3867078		True				
ANR	3867142	Symbol	tmp		3867078						
ANR	3867143	Symbol	scope		3867078						
ANR	3867144	Symbol	name		3867078						
ANR	3867145	Symbol	name_length		3867078						
ANR	3867146	Symbol	& tmp		3867078						
ANR	3867147	Symbol	value		3867078						
ANR	3867148	Symbol	object		3867078						
ANR	3867149	Function	zend_update_property_stringl	3889:0:117058:117366							
ANR	3867150	FunctionDef	"zend_update_property_stringl (zend_class_entry * scope , zval * object , const char * name , size_t name_length , const char * value , size_t value_len)"		3867149	0					
ANR	3867151	CompoundStatement		3890:0:117225:117366	3867149	0					
ANR	3867152	IdentifierDeclStatement	zval tmp ;	3891:1:117228:117236	3867149	0	True				
ANR	3867153	IdentifierDecl	tmp		3867149	0					
ANR	3867154	IdentifierDeclType	zval		3867149	0					
ANR	3867155	Identifier	tmp		3867149	1					
ANR	3867156	ExpressionStatement	"ZVAL_STRINGL ( & tmp , value , value_len )"	3893:1:117240:117276	3867149	1	True				
ANR	3867157	CallExpression	"ZVAL_STRINGL ( & tmp , value , value_len )"		3867149	0					
ANR	3867158	Callee	ZVAL_STRINGL		3867149	0					
ANR	3867159	Identifier	ZVAL_STRINGL		3867149	0					
ANR	3867160	ArgumentList	& tmp		3867149	1					
ANR	3867161	Argument	& tmp		3867149	0					
ANR	3867162	UnaryOperationExpression	& tmp		3867149	0					
ANR	3867163	UnaryOperator	&		3867149	0					
ANR	3867164	Identifier	tmp		3867149	1					
ANR	3867165	Argument	value		3867149	1					
ANR	3867166	Identifier	value		3867149	0					
ANR	3867167	Argument	value_len		3867149	2					
ANR	3867168	Identifier	value_len		3867149	0					
ANR	3867169	ExpressionStatement	"Z_SET_REFCOUNT ( tmp , 0 )"	3894:1:117279:117301	3867149	2	True				
ANR	3867170	CallExpression	"Z_SET_REFCOUNT ( tmp , 0 )"		3867149	0					
ANR	3867171	Callee	Z_SET_REFCOUNT		3867149	0					
ANR	3867172	Identifier	Z_SET_REFCOUNT		3867149	0					
ANR	3867173	ArgumentList	tmp		3867149	1					
ANR	3867174	Argument	tmp		3867149	0					
ANR	3867175	Identifier	tmp		3867149	0					
ANR	3867176	Argument	0		3867149	1					
ANR	3867177	PrimaryExpression	0		3867149	0					
ANR	3867178	ExpressionStatement	"zend_update_property ( scope , object , name , name_length , & tmp )"	3895:1:117304:117364	3867149	3	True				
ANR	3867179	CallExpression	"zend_update_property ( scope , object , name , name_length , & tmp )"		3867149	0					
ANR	3867180	Callee	zend_update_property		3867149	0					
ANR	3867181	Identifier	zend_update_property		3867149	0					
ANR	3867182	ArgumentList	scope		3867149	1					
ANR	3867183	Argument	scope		3867149	0					
ANR	3867184	Identifier	scope		3867149	0					
ANR	3867185	Argument	object		3867149	1					
ANR	3867186	Identifier	object		3867149	0					
ANR	3867187	Argument	name		3867149	2					
ANR	3867188	Identifier	name		3867149	0					
ANR	3867189	Argument	name_length		3867149	3					
ANR	3867190	Identifier	name_length		3867149	0					
ANR	3867191	Argument	& tmp		3867149	4					
ANR	3867192	UnaryOperationExpression	& tmp		3867149	0					
ANR	3867193	UnaryOperator	&		3867149	0					
ANR	3867194	Identifier	tmp		3867149	1					
ANR	3867195	ReturnType	ZEND_API void		3867149	1					
ANR	3867196	Identifier	zend_update_property_stringl		3867149	2					
ANR	3867197	ParameterList	"zend_class_entry * scope , zval * object , const char * name , size_t name_length , const char * value , size_t value_len"		3867149	3					
ANR	3867198	Parameter	zend_class_entry * scope	3889:43:117101:117123	3867149	0	True				
ANR	3867199	ParameterType	zend_class_entry *		3867149	0					
ANR	3867200	Identifier	scope		3867149	1					
ANR	3867201	Parameter	zval * object	3889:68:117126:117137	3867149	1	True				
ANR	3867202	ParameterType	zval *		3867149	0					
ANR	3867203	Identifier	object		3867149	1					
ANR	3867204	Parameter	const char * name	3889:82:117140:117155	3867149	2	True				
ANR	3867205	ParameterType	const char *		3867149	0					
ANR	3867206	Identifier	name		3867149	1					
ANR	3867207	Parameter	size_t name_length	3889:100:117158:117175	3867149	3	True				
ANR	3867208	ParameterType	size_t		3867149	0					
ANR	3867209	Identifier	name_length		3867149	1					
ANR	3867210	Parameter	const char * value	3889:120:117178:117194	3867149	4	True				
ANR	3867211	ParameterType	const char *		3867149	0					
ANR	3867212	Identifier	value		3867149	1					
ANR	3867213	Parameter	size_t value_len	3889:139:117197:117212	3867149	5	True				
ANR	3867214	ParameterType	size_t		3867149	0					
ANR	3867215	Identifier	value_len		3867149	1					
ANR	3867216	CFGEntryNode	ENTRY		3867149		True				
ANR	3867217	CFGExitNode	EXIT		3867149		True				
ANR	3867218	Symbol	value_len		3867149						
ANR	3867219	Symbol	tmp		3867149						
ANR	3867220	Symbol	scope		3867149						
ANR	3867221	Symbol	name		3867149						
ANR	3867222	Symbol	name_length		3867149						
ANR	3867223	Symbol	& tmp		3867149						
ANR	3867224	Symbol	value		3867149						
ANR	3867225	Symbol	object		3867149						
ANR	3867226	Function	zend_update_static_property	3899:0:117379:118316							
ANR	3867227	FunctionDef	"zend_update_static_property (zend_class_entry * scope , const char * name , size_t name_length , zval * value)"		3867226	0					
ANR	3867228	CompoundStatement		3900:0:117506:118316	3867226	0					
ANR	3867229	IdentifierDeclStatement	zval * property ;	3901:1:117509:117523	3867226	0	True				
ANR	3867230	IdentifierDecl	* property		3867226	0					
ANR	3867231	IdentifierDeclType	zval *		3867226	0					
ANR	3867232	Identifier	property		3867226	1					
ANR	3867233	IdentifierDeclStatement	zend_class_entry * old_scope = EG ( scope ) ;	3902:1:117526:117565	3867226	1	True				
ANR	3867234	IdentifierDecl	* old_scope = EG ( scope )		3867226	0					
ANR	3867235	IdentifierDeclType	zend_class_entry *		3867226	0					
ANR	3867236	Identifier	old_scope		3867226	1					
ANR	3867237	AssignmentExpression	* old_scope = EG ( scope )		3867226	2		=			
ANR	3867238	Identifier	old_scope		3867226	0					
ANR	3867239	CallExpression	EG ( scope )		3867226	1					
ANR	3867240	Callee	EG		3867226	0					
ANR	3867241	Identifier	EG		3867226	0					
ANR	3867242	ArgumentList	scope		3867226	1					
ANR	3867243	Argument	scope		3867226	0					
ANR	3867244	Identifier	scope		3867226	0					
ANR	3867245	IdentifierDeclStatement	"zend_string * key = zend_string_init ( name , name_length , 0 ) ;"	3903:1:117568:117625	3867226	2	True				
ANR	3867246	IdentifierDecl	"* key = zend_string_init ( name , name_length , 0 )"		3867226	0					
ANR	3867247	IdentifierDeclType	zend_string *		3867226	0					
ANR	3867248	Identifier	key		3867226	1					
ANR	3867249	AssignmentExpression	"* key = zend_string_init ( name , name_length , 0 )"		3867226	2		=			
ANR	3867250	Identifier	key		3867226	0					
ANR	3867251	CallExpression	"zend_string_init ( name , name_length , 0 )"		3867226	1					
ANR	3867252	Callee	zend_string_init		3867226	0					
ANR	3867253	Identifier	zend_string_init		3867226	0					
ANR	3867254	ArgumentList	name		3867226	1					
ANR	3867255	Argument	name		3867226	0					
ANR	3867256	Identifier	name		3867226	0					
ANR	3867257	Argument	name_length		3867226	1					
ANR	3867258	Identifier	name_length		3867226	0					
ANR	3867259	Argument	0		3867226	2					
ANR	3867260	PrimaryExpression	0		3867226	0					
ANR	3867261	ExpressionStatement	EG ( scope ) = scope	3905:1:117629:117646	3867226	3	True				
ANR	3867262	AssignmentExpression	EG ( scope ) = scope		3867226	0		=			
ANR	3867263	CallExpression	EG ( scope )		3867226	0					
ANR	3867264	Callee	EG		3867226	0					
ANR	3867265	Identifier	EG		3867226	0					
ANR	3867266	ArgumentList	scope		3867226	1					
ANR	3867267	Argument	scope		3867226	0					
ANR	3867268	Identifier	scope		3867226	0					
ANR	3867269	Identifier	scope		3867226	1					
ANR	3867270	ExpressionStatement	"property = zend_std_get_static_property ( scope , key , 0 )"	3906:1:117649:117703	3867226	4	True				
ANR	3867271	AssignmentExpression	"property = zend_std_get_static_property ( scope , key , 0 )"		3867226	0		=			
ANR	3867272	Identifier	property		3867226	0					
ANR	3867273	CallExpression	"zend_std_get_static_property ( scope , key , 0 )"		3867226	1					
ANR	3867274	Callee	zend_std_get_static_property		3867226	0					
ANR	3867275	Identifier	zend_std_get_static_property		3867226	0					
ANR	3867276	ArgumentList	scope		3867226	1					
ANR	3867277	Argument	scope		3867226	0					
ANR	3867278	Identifier	scope		3867226	0					
ANR	3867279	Argument	key		3867226	1					
ANR	3867280	Identifier	key		3867226	0					
ANR	3867281	Argument	0		3867226	2					
ANR	3867282	PrimaryExpression	0		3867226	0					
ANR	3867283	ExpressionStatement	EG ( scope ) = old_scope	3907:1:117706:117727	3867226	5	True				
ANR	3867284	AssignmentExpression	EG ( scope ) = old_scope		3867226	0		=			
ANR	3867285	CallExpression	EG ( scope )		3867226	0					
ANR	3867286	Callee	EG		3867226	0					
ANR	3867287	Identifier	EG		3867226	0					
ANR	3867288	ArgumentList	scope		3867226	1					
ANR	3867289	Argument	scope		3867226	0					
ANR	3867290	Identifier	scope		3867226	0					
ANR	3867291	Identifier	old_scope		3867226	1					
ANR	3867292	ExpressionStatement	zend_string_free ( key )	3908:1:117730:117751	3867226	6	True				
ANR	3867293	CallExpression	zend_string_free ( key )		3867226	0					
ANR	3867294	Callee	zend_string_free		3867226	0					
ANR	3867295	Identifier	zend_string_free		3867226	0					
ANR	3867296	ArgumentList	key		3867226	1					
ANR	3867297	Argument	key		3867226	0					
ANR	3867298	Identifier	key		3867226	0					
ANR	3867299	IfStatement	if ( ! property )		3867226	7					
ANR	3867300	Condition	! property	3909:5:117758:117766	3867226	0	True				
ANR	3867301	UnaryOperationExpression	! property		3867226	0					
ANR	3867302	UnaryOperator	!		3867226	0					
ANR	3867303	Identifier	property		3867226	1					
ANR	3867304	CompoundStatement		10:16:262:262	3867226	1					
ANR	3867305	ReturnStatement	return FAILURE ;	3910:2:117773:117787	3867226	0	True				
ANR	3867306	Identifier	FAILURE		3867226	0					
ANR	3867307	ElseStatement	else		3867226	0					
ANR	3867308	CompoundStatement		12:8:290:290	3867226	0					
ANR	3867309	IfStatement	if ( property != value )		3867226	0					
ANR	3867310	Condition	property != value	3912:6:117805:117821	3867226	0	True				
ANR	3867311	EqualityExpression	property != value		3867226	0		!=			
ANR	3867312	Identifier	property		3867226	0					
ANR	3867313	Identifier	value		3867226	1					
ANR	3867314	CompoundStatement		13:25:317:317	3867226	1					
ANR	3867315	IfStatement	if ( Z_ISREF_P ( property ) )		3867226	0					
ANR	3867316	Condition	Z_ISREF_P ( property )	3913:7:117833:117851	3867226	0	True				
ANR	3867317	CallExpression	Z_ISREF_P ( property )		3867226	0					
ANR	3867318	Callee	Z_ISREF_P		3867226	0					
ANR	3867319	Identifier	Z_ISREF_P		3867226	0					
ANR	3867320	ArgumentList	property		3867226	1					
ANR	3867321	Argument	property		3867226	0					
ANR	3867322	Identifier	property		3867226	0					
ANR	3867323	CompoundStatement		14:28:347:347	3867226	1					
ANR	3867324	ExpressionStatement	zval_dtor ( property )	3914:4:117860:117879	3867226	0	True				
ANR	3867325	CallExpression	zval_dtor ( property )		3867226	0					
ANR	3867326	Callee	zval_dtor		3867226	0					
ANR	3867327	Identifier	zval_dtor		3867226	0					
ANR	3867328	ArgumentList	property		3867226	1					
ANR	3867329	Argument	property		3867226	0					
ANR	3867330	Identifier	property		3867226	0					
ANR	3867331	ExpressionStatement	"ZVAL_COPY_VALUE ( property , value )"	3915:4:117885:117917	3867226	1	True				
ANR	3867332	CallExpression	"ZVAL_COPY_VALUE ( property , value )"		3867226	0					
ANR	3867333	Callee	ZVAL_COPY_VALUE		3867226	0					
ANR	3867334	Identifier	ZVAL_COPY_VALUE		3867226	0					
ANR	3867335	ArgumentList	property		3867226	1					
ANR	3867336	Argument	property		3867226	0					
ANR	3867337	Identifier	property		3867226	0					
ANR	3867338	Argument	value		3867226	1					
ANR	3867339	Identifier	value		3867226	0					
ANR	3867340	IfStatement	if ( Z_REFCOUNTED_P ( value ) && Z_REFCOUNT_P ( value ) > 0 )		3867226	2					
ANR	3867341	Condition	Z_REFCOUNTED_P ( value ) && Z_REFCOUNT_P ( value ) > 0	3916:8:117927:117974	3867226	0	True				
ANR	3867342	AndExpression	Z_REFCOUNTED_P ( value ) && Z_REFCOUNT_P ( value ) > 0		3867226	0		&&			
ANR	3867343	CallExpression	Z_REFCOUNTED_P ( value )		3867226	0					
ANR	3867344	Callee	Z_REFCOUNTED_P		3867226	0					
ANR	3867345	Identifier	Z_REFCOUNTED_P		3867226	0					
ANR	3867346	ArgumentList	value		3867226	1					
ANR	3867347	Argument	value		3867226	0					
ANR	3867348	Identifier	value		3867226	0					
ANR	3867349	RelationalExpression	Z_REFCOUNT_P ( value ) > 0		3867226	1		>			
ANR	3867350	CallExpression	Z_REFCOUNT_P ( value )		3867226	0					
ANR	3867351	Callee	Z_REFCOUNT_P		3867226	0					
ANR	3867352	Identifier	Z_REFCOUNT_P		3867226	0					
ANR	3867353	ArgumentList	value		3867226	1					
ANR	3867354	Argument	value		3867226	0					
ANR	3867355	Identifier	value		3867226	0					
ANR	3867356	PrimaryExpression	0		3867226	1					
ANR	3867357	CompoundStatement		17:58:470:470	3867226	1					
ANR	3867358	ExpressionStatement	zval_opt_copy_ctor ( property )	3917:5:117984:118012	3867226	0	True				
ANR	3867359	CallExpression	zval_opt_copy_ctor ( property )		3867226	0					
ANR	3867360	Callee	zval_opt_copy_ctor		3867226	0					
ANR	3867361	Identifier	zval_opt_copy_ctor		3867226	0					
ANR	3867362	ArgumentList	property		3867226	1					
ANR	3867363	Argument	property		3867226	0					
ANR	3867364	Identifier	property		3867226	0					
ANR	3867365	ElseStatement	else		3867226	0					
ANR	3867366	CompoundStatement		21:4:529:541	3867226	0					
ANR	3867367	IdentifierDeclStatement	zval garbage ;	3920:4:118036:118048	3867226	0	True				
ANR	3867368	IdentifierDecl	garbage		3867226	0					
ANR	3867369	IdentifierDeclType	zval		3867226	0					
ANR	3867370	Identifier	garbage		3867226	1					
ANR	3867371	ExpressionStatement	"ZVAL_COPY_VALUE ( & garbage , property )"	3922:4:118055:118090	3867226	1	True				
ANR	3867372	CallExpression	"ZVAL_COPY_VALUE ( & garbage , property )"		3867226	0					
ANR	3867373	Callee	ZVAL_COPY_VALUE		3867226	0					
ANR	3867374	Identifier	ZVAL_COPY_VALUE		3867226	0					
ANR	3867375	ArgumentList	& garbage		3867226	1					
ANR	3867376	Argument	& garbage		3867226	0					
ANR	3867377	UnaryOperationExpression	& garbage		3867226	0					
ANR	3867378	UnaryOperator	&		3867226	0					
ANR	3867379	Identifier	garbage		3867226	1					
ANR	3867380	Argument	property		3867226	1					
ANR	3867381	Identifier	property		3867226	0					
ANR	3867382	IfStatement	if ( Z_REFCOUNTED_P ( value ) )		3867226	2					
ANR	3867383	Condition	Z_REFCOUNTED_P ( value )	3923:8:118100:118120	3867226	0	True				
ANR	3867384	CallExpression	Z_REFCOUNTED_P ( value )		3867226	0					
ANR	3867385	Callee	Z_REFCOUNTED_P		3867226	0					
ANR	3867386	Identifier	Z_REFCOUNTED_P		3867226	0					
ANR	3867387	ArgumentList	value		3867226	1					
ANR	3867388	Argument	value		3867226	0					
ANR	3867389	Identifier	value		3867226	0					
ANR	3867390	CompoundStatement		24:31:616:616	3867226	1					
ANR	3867391	ExpressionStatement	Z_ADDREF_P ( value )	3924:5:118130:118147	3867226	0	True				
ANR	3867392	CallExpression	Z_ADDREF_P ( value )		3867226	0					
ANR	3867393	Callee	Z_ADDREF_P		3867226	0					
ANR	3867394	Identifier	Z_ADDREF_P		3867226	0					
ANR	3867395	ArgumentList	value		3867226	1					
ANR	3867396	Argument	value		3867226	0					
ANR	3867397	Identifier	value		3867226	0					
ANR	3867398	IfStatement	if ( Z_ISREF_P ( value ) )		3867226	1					
ANR	3867399	Condition	Z_ISREF_P ( value )	3925:9:118158:118173	3867226	0	True				
ANR	3867400	CallExpression	Z_ISREF_P ( value )		3867226	0					
ANR	3867401	Callee	Z_ISREF_P		3867226	0					
ANR	3867402	Identifier	Z_ISREF_P		3867226	0					
ANR	3867403	ArgumentList	value		3867226	1					
ANR	3867404	Argument	value		3867226	0					
ANR	3867405	Identifier	value		3867226	0					
ANR	3867406	CompoundStatement		26:27:669:669	3867226	1					
ANR	3867407	ExpressionStatement	SEPARATE_ZVAL ( value )	3926:6:118184:118204	3867226	0	True				
ANR	3867408	CallExpression	SEPARATE_ZVAL ( value )		3867226	0					
ANR	3867409	Callee	SEPARATE_ZVAL		3867226	0					
ANR	3867410	Identifier	SEPARATE_ZVAL		3867226	0					
ANR	3867411	ArgumentList	value		3867226	1					
ANR	3867412	Argument	value		3867226	0					
ANR	3867413	Identifier	value		3867226	0					
ANR	3867414	ExpressionStatement	"ZVAL_COPY_VALUE ( property , value )"	3929:4:118223:118255	3867226	3	True				
ANR	3867415	CallExpression	"ZVAL_COPY_VALUE ( property , value )"		3867226	0					
ANR	3867416	Callee	ZVAL_COPY_VALUE		3867226	0					
ANR	3867417	Identifier	ZVAL_COPY_VALUE		3867226	0					
ANR	3867418	ArgumentList	property		3867226	1					
ANR	3867419	Argument	property		3867226	0					
ANR	3867420	Identifier	property		3867226	0					
ANR	3867421	Argument	value		3867226	1					
ANR	3867422	Identifier	value		3867226	0					
ANR	3867423	ExpressionStatement	zval_ptr_dtor ( & garbage )	3930:4:118261:118284	3867226	4	True				
ANR	3867424	CallExpression	zval_ptr_dtor ( & garbage )		3867226	0					
ANR	3867425	Callee	zval_ptr_dtor		3867226	0					
ANR	3867426	Identifier	zval_ptr_dtor		3867226	0					
ANR	3867427	ArgumentList	& garbage		3867226	1					
ANR	3867428	Argument	& garbage		3867226	0					
ANR	3867429	UnaryOperationExpression	& garbage		3867226	0					
ANR	3867430	UnaryOperator	&		3867226	0					
ANR	3867431	Identifier	garbage		3867226	1					
ANR	3867432	ReturnStatement	return SUCCESS ;	3933:2:118297:118311	3867226	1	True				
ANR	3867433	Identifier	SUCCESS		3867226	0					
ANR	3867434	ReturnType	ZEND_API int		3867226	1					
ANR	3867435	Identifier	zend_update_static_property		3867226	2					
ANR	3867436	ParameterList	"zend_class_entry * scope , const char * name , size_t name_length , zval * value"		3867226	3					
ANR	3867437	Parameter	zend_class_entry * scope	3899:41:117420:117442	3867226	0	True				
ANR	3867438	ParameterType	zend_class_entry *		3867226	0					
ANR	3867439	Identifier	scope		3867226	1					
ANR	3867440	Parameter	const char * name	3899:66:117445:117460	3867226	1	True				
ANR	3867441	ParameterType	const char *		3867226	0					
ANR	3867442	Identifier	name		3867226	1					
ANR	3867443	Parameter	size_t name_length	3899:84:117463:117480	3867226	2	True				
ANR	3867444	ParameterType	size_t		3867226	0					
ANR	3867445	Identifier	name_length		3867226	1					
ANR	3867446	Parameter	zval * value	3899:104:117483:117493	3867226	3	True				
ANR	3867447	ParameterType	zval *		3867226	0					
ANR	3867448	Identifier	value		3867226	1					
ANR	3867449	CFGEntryNode	ENTRY		3867226		True				
ANR	3867450	CFGExitNode	EXIT		3867226		True				
ANR	3867451	Symbol	EG		3867226						
ANR	3867452	Symbol	SUCCESS		3867226						
ANR	3867453	Symbol	old_scope		3867226						
ANR	3867454	Symbol	garbage		3867226						
ANR	3867455	Symbol	name_length		3867226						
ANR	3867456	Symbol	FAILURE		3867226						
ANR	3867457	Symbol	Z_REFCOUNT_P		3867226						
ANR	3867458	Symbol	zend_std_get_static_property		3867226						
ANR	3867459	Symbol	zend_string_init		3867226						
ANR	3867460	Symbol	& garbage		3867226						
ANR	3867461	Symbol	scope		3867226						
ANR	3867462	Symbol	name		3867226						
ANR	3867463	Symbol	property		3867226						
ANR	3867464	Symbol	Z_REFCOUNTED_P		3867226						
ANR	3867465	Symbol	value		3867226						
ANR	3867466	Symbol	key		3867226						
ANR	3867467	Symbol	Z_ISREF_P		3867226						
ANR	3867468	Function	zend_update_static_property_null	3938:0:118329:118549							
ANR	3867469	FunctionDef	"zend_update_static_property_null (zend_class_entry * scope , const char * name , size_t name_length)"		3867468	0					
ANR	3867470	CompoundStatement		3939:0:118448:118549	3867468	0					
ANR	3867471	IdentifierDeclStatement	zval tmp ;	3940:1:118451:118459	3867468	0	True				
ANR	3867472	IdentifierDecl	tmp		3867468	0					
ANR	3867473	IdentifierDeclType	zval		3867468	0					
ANR	3867474	Identifier	tmp		3867468	1					
ANR	3867475	ExpressionStatement	ZVAL_NULL ( & tmp )	3942:1:118463:118478	3867468	1	True				
ANR	3867476	CallExpression	ZVAL_NULL ( & tmp )		3867468	0					
ANR	3867477	Callee	ZVAL_NULL		3867468	0					
ANR	3867478	Identifier	ZVAL_NULL		3867468	0					
ANR	3867479	ArgumentList	& tmp		3867468	1					
ANR	3867480	Argument	& tmp		3867468	0					
ANR	3867481	UnaryOperationExpression	& tmp		3867468	0					
ANR	3867482	UnaryOperator	&		3867468	0					
ANR	3867483	Identifier	tmp		3867468	1					
ANR	3867484	ReturnStatement	"return zend_update_static_property ( scope , name , name_length , & tmp ) ;"	3943:1:118481:118547	3867468	2	True				
ANR	3867485	CallExpression	"zend_update_static_property ( scope , name , name_length , & tmp )"		3867468	0					
ANR	3867486	Callee	zend_update_static_property		3867468	0					
ANR	3867487	Identifier	zend_update_static_property		3867468	0					
ANR	3867488	ArgumentList	scope		3867468	1					
ANR	3867489	Argument	scope		3867468	0					
ANR	3867490	Identifier	scope		3867468	0					
ANR	3867491	Argument	name		3867468	1					
ANR	3867492	Identifier	name		3867468	0					
ANR	3867493	Argument	name_length		3867468	2					
ANR	3867494	Identifier	name_length		3867468	0					
ANR	3867495	Argument	& tmp		3867468	3					
ANR	3867496	UnaryOperationExpression	& tmp		3867468	0					
ANR	3867497	UnaryOperator	&		3867468	0					
ANR	3867498	Identifier	tmp		3867468	1					
ANR	3867499	ReturnType	ZEND_API int		3867468	1					
ANR	3867500	Identifier	zend_update_static_property_null		3867468	2					
ANR	3867501	ParameterList	"zend_class_entry * scope , const char * name , size_t name_length"		3867468	3					
ANR	3867502	Parameter	zend_class_entry * scope	3938:46:118375:118397	3867468	0	True				
ANR	3867503	ParameterType	zend_class_entry *		3867468	0					
ANR	3867504	Identifier	scope		3867468	1					
ANR	3867505	Parameter	const char * name	3938:71:118400:118415	3867468	1	True				
ANR	3867506	ParameterType	const char *		3867468	0					
ANR	3867507	Identifier	name		3867468	1					
ANR	3867508	Parameter	size_t name_length	3938:89:118418:118435	3867468	2	True				
ANR	3867509	ParameterType	size_t		3867468	0					
ANR	3867510	Identifier	name_length		3867468	1					
ANR	3867511	CFGEntryNode	ENTRY		3867468		True				
ANR	3867512	CFGExitNode	EXIT		3867468		True				
ANR	3867513	Symbol	tmp		3867468						
ANR	3867514	Symbol	scope		3867468						
ANR	3867515	Symbol	name		3867468						
ANR	3867516	Symbol	name_length		3867468						
ANR	3867517	Symbol	& tmp		3867468						
ANR	3867518	Symbol	zend_update_static_property		3867468						
ANR	3867519	Function	zend_update_static_property_bool	3947:0:118562:118806							
ANR	3867520	FunctionDef	"zend_update_static_property_bool (zend_class_entry * scope , const char * name , size_t name_length , zend_long value)"		3867519	0					
ANR	3867521	CompoundStatement		3948:0:118698:118806	3867519	0					
ANR	3867522	IdentifierDeclStatement	zval tmp ;	3949:1:118701:118709	3867519	0	True				
ANR	3867523	IdentifierDecl	tmp		3867519	0					
ANR	3867524	IdentifierDeclType	zval		3867519	0					
ANR	3867525	Identifier	tmp		3867519	1					
ANR	3867526	ExpressionStatement	"ZVAL_BOOL ( & tmp , value )"	3951:1:118713:118735	3867519	1	True				
ANR	3867527	CallExpression	"ZVAL_BOOL ( & tmp , value )"		3867519	0					
ANR	3867528	Callee	ZVAL_BOOL		3867519	0					
ANR	3867529	Identifier	ZVAL_BOOL		3867519	0					
ANR	3867530	ArgumentList	& tmp		3867519	1					
ANR	3867531	Argument	& tmp		3867519	0					
ANR	3867532	UnaryOperationExpression	& tmp		3867519	0					
ANR	3867533	UnaryOperator	&		3867519	0					
ANR	3867534	Identifier	tmp		3867519	1					
ANR	3867535	Argument	value		3867519	1					
ANR	3867536	Identifier	value		3867519	0					
ANR	3867537	ReturnStatement	"return zend_update_static_property ( scope , name , name_length , & tmp ) ;"	3952:1:118738:118804	3867519	2	True				
ANR	3867538	CallExpression	"zend_update_static_property ( scope , name , name_length , & tmp )"		3867519	0					
ANR	3867539	Callee	zend_update_static_property		3867519	0					
ANR	3867540	Identifier	zend_update_static_property		3867519	0					
ANR	3867541	ArgumentList	scope		3867519	1					
ANR	3867542	Argument	scope		3867519	0					
ANR	3867543	Identifier	scope		3867519	0					
ANR	3867544	Argument	name		3867519	1					
ANR	3867545	Identifier	name		3867519	0					
ANR	3867546	Argument	name_length		3867519	2					
ANR	3867547	Identifier	name_length		3867519	0					
ANR	3867548	Argument	& tmp		3867519	3					
ANR	3867549	UnaryOperationExpression	& tmp		3867519	0					
ANR	3867550	UnaryOperator	&		3867519	0					
ANR	3867551	Identifier	tmp		3867519	1					
ANR	3867552	ReturnType	ZEND_API int		3867519	1					
ANR	3867553	Identifier	zend_update_static_property_bool		3867519	2					
ANR	3867554	ParameterList	"zend_class_entry * scope , const char * name , size_t name_length , zend_long value"		3867519	3					
ANR	3867555	Parameter	zend_class_entry * scope	3947:46:118608:118630	3867519	0	True				
ANR	3867556	ParameterType	zend_class_entry *		3867519	0					
ANR	3867557	Identifier	scope		3867519	1					
ANR	3867558	Parameter	const char * name	3947:71:118633:118648	3867519	1	True				
ANR	3867559	ParameterType	const char *		3867519	0					
ANR	3867560	Identifier	name		3867519	1					
ANR	3867561	Parameter	size_t name_length	3947:89:118651:118668	3867519	2	True				
ANR	3867562	ParameterType	size_t		3867519	0					
ANR	3867563	Identifier	name_length		3867519	1					
ANR	3867564	Parameter	zend_long value	3947:109:118671:118685	3867519	3	True				
ANR	3867565	ParameterType	zend_long		3867519	0					
ANR	3867566	Identifier	value		3867519	1					
ANR	3867567	CFGEntryNode	ENTRY		3867519		True				
ANR	3867568	CFGExitNode	EXIT		3867519		True				
ANR	3867569	Symbol	tmp		3867519						
ANR	3867570	Symbol	scope		3867519						
ANR	3867571	Symbol	name		3867519						
ANR	3867572	Symbol	name_length		3867519						
ANR	3867573	Symbol	& tmp		3867519						
ANR	3867574	Symbol	value		3867519						
ANR	3867575	Symbol	zend_update_static_property		3867519						
ANR	3867576	Function	zend_update_static_property_long	3956:0:118819:119063							
ANR	3867577	FunctionDef	"zend_update_static_property_long (zend_class_entry * scope , const char * name , size_t name_length , zend_long value)"		3867576	0					
ANR	3867578	CompoundStatement		3957:0:118955:119063	3867576	0					
ANR	3867579	IdentifierDeclStatement	zval tmp ;	3958:1:118958:118966	3867576	0	True				
ANR	3867580	IdentifierDecl	tmp		3867576	0					
ANR	3867581	IdentifierDeclType	zval		3867576	0					
ANR	3867582	Identifier	tmp		3867576	1					
ANR	3867583	ExpressionStatement	"ZVAL_LONG ( & tmp , value )"	3960:1:118970:118992	3867576	1	True				
ANR	3867584	CallExpression	"ZVAL_LONG ( & tmp , value )"		3867576	0					
ANR	3867585	Callee	ZVAL_LONG		3867576	0					
ANR	3867586	Identifier	ZVAL_LONG		3867576	0					
ANR	3867587	ArgumentList	& tmp		3867576	1					
ANR	3867588	Argument	& tmp		3867576	0					
ANR	3867589	UnaryOperationExpression	& tmp		3867576	0					
ANR	3867590	UnaryOperator	&		3867576	0					
ANR	3867591	Identifier	tmp		3867576	1					
ANR	3867592	Argument	value		3867576	1					
ANR	3867593	Identifier	value		3867576	0					
ANR	3867594	ReturnStatement	"return zend_update_static_property ( scope , name , name_length , & tmp ) ;"	3961:1:118995:119061	3867576	2	True				
ANR	3867595	CallExpression	"zend_update_static_property ( scope , name , name_length , & tmp )"		3867576	0					
ANR	3867596	Callee	zend_update_static_property		3867576	0					
ANR	3867597	Identifier	zend_update_static_property		3867576	0					
ANR	3867598	ArgumentList	scope		3867576	1					
ANR	3867599	Argument	scope		3867576	0					
ANR	3867600	Identifier	scope		3867576	0					
ANR	3867601	Argument	name		3867576	1					
ANR	3867602	Identifier	name		3867576	0					
ANR	3867603	Argument	name_length		3867576	2					
ANR	3867604	Identifier	name_length		3867576	0					
ANR	3867605	Argument	& tmp		3867576	3					
ANR	3867606	UnaryOperationExpression	& tmp		3867576	0					
ANR	3867607	UnaryOperator	&		3867576	0					
ANR	3867608	Identifier	tmp		3867576	1					
ANR	3867609	ReturnType	ZEND_API int		3867576	1					
ANR	3867610	Identifier	zend_update_static_property_long		3867576	2					
ANR	3867611	ParameterList	"zend_class_entry * scope , const char * name , size_t name_length , zend_long value"		3867576	3					
ANR	3867612	Parameter	zend_class_entry * scope	3956:46:118865:118887	3867576	0	True				
ANR	3867613	ParameterType	zend_class_entry *		3867576	0					
ANR	3867614	Identifier	scope		3867576	1					
ANR	3867615	Parameter	const char * name	3956:71:118890:118905	3867576	1	True				
ANR	3867616	ParameterType	const char *		3867576	0					
ANR	3867617	Identifier	name		3867576	1					
ANR	3867618	Parameter	size_t name_length	3956:89:118908:118925	3867576	2	True				
ANR	3867619	ParameterType	size_t		3867576	0					
ANR	3867620	Identifier	name_length		3867576	1					
ANR	3867621	Parameter	zend_long value	3956:109:118928:118942	3867576	3	True				
ANR	3867622	ParameterType	zend_long		3867576	0					
ANR	3867623	Identifier	value		3867576	1					
ANR	3867624	CFGEntryNode	ENTRY		3867576		True				
ANR	3867625	CFGExitNode	EXIT		3867576		True				
ANR	3867626	Symbol	tmp		3867576						
ANR	3867627	Symbol	scope		3867576						
ANR	3867628	Symbol	name		3867576						
ANR	3867629	Symbol	name_length		3867576						
ANR	3867630	Symbol	& tmp		3867576						
ANR	3867631	Symbol	value		3867576						
ANR	3867632	Symbol	zend_update_static_property		3867576						
ANR	3867633	Function	zend_update_static_property_double	3965:0:119076:119321							
ANR	3867634	FunctionDef	"zend_update_static_property_double (zend_class_entry * scope , const char * name , size_t name_length , double value)"		3867633	0					
ANR	3867635	CompoundStatement		3966:0:119211:119321	3867633	0					
ANR	3867636	IdentifierDeclStatement	zval tmp ;	3967:1:119214:119222	3867633	0	True				
ANR	3867637	IdentifierDecl	tmp		3867633	0					
ANR	3867638	IdentifierDeclType	zval		3867633	0					
ANR	3867639	Identifier	tmp		3867633	1					
ANR	3867640	ExpressionStatement	"ZVAL_DOUBLE ( & tmp , value )"	3969:1:119226:119250	3867633	1	True				
ANR	3867641	CallExpression	"ZVAL_DOUBLE ( & tmp , value )"		3867633	0					
ANR	3867642	Callee	ZVAL_DOUBLE		3867633	0					
ANR	3867643	Identifier	ZVAL_DOUBLE		3867633	0					
ANR	3867644	ArgumentList	& tmp		3867633	1					
ANR	3867645	Argument	& tmp		3867633	0					
ANR	3867646	UnaryOperationExpression	& tmp		3867633	0					
ANR	3867647	UnaryOperator	&		3867633	0					
ANR	3867648	Identifier	tmp		3867633	1					
ANR	3867649	Argument	value		3867633	1					
ANR	3867650	Identifier	value		3867633	0					
ANR	3867651	ReturnStatement	"return zend_update_static_property ( scope , name , name_length , & tmp ) ;"	3970:1:119253:119319	3867633	2	True				
ANR	3867652	CallExpression	"zend_update_static_property ( scope , name , name_length , & tmp )"		3867633	0					
ANR	3867653	Callee	zend_update_static_property		3867633	0					
ANR	3867654	Identifier	zend_update_static_property		3867633	0					
ANR	3867655	ArgumentList	scope		3867633	1					
ANR	3867656	Argument	scope		3867633	0					
ANR	3867657	Identifier	scope		3867633	0					
ANR	3867658	Argument	name		3867633	1					
ANR	3867659	Identifier	name		3867633	0					
ANR	3867660	Argument	name_length		3867633	2					
ANR	3867661	Identifier	name_length		3867633	0					
ANR	3867662	Argument	& tmp		3867633	3					
ANR	3867663	UnaryOperationExpression	& tmp		3867633	0					
ANR	3867664	UnaryOperator	&		3867633	0					
ANR	3867665	Identifier	tmp		3867633	1					
ANR	3867666	ReturnType	ZEND_API int		3867633	1					
ANR	3867667	Identifier	zend_update_static_property_double		3867633	2					
ANR	3867668	ParameterList	"zend_class_entry * scope , const char * name , size_t name_length , double value"		3867633	3					
ANR	3867669	Parameter	zend_class_entry * scope	3965:48:119124:119146	3867633	0	True				
ANR	3867670	ParameterType	zend_class_entry *		3867633	0					
ANR	3867671	Identifier	scope		3867633	1					
ANR	3867672	Parameter	const char * name	3965:73:119149:119164	3867633	1	True				
ANR	3867673	ParameterType	const char *		3867633	0					
ANR	3867674	Identifier	name		3867633	1					
ANR	3867675	Parameter	size_t name_length	3965:91:119167:119184	3867633	2	True				
ANR	3867676	ParameterType	size_t		3867633	0					
ANR	3867677	Identifier	name_length		3867633	1					
ANR	3867678	Parameter	double value	3965:111:119187:119198	3867633	3	True				
ANR	3867679	ParameterType	double		3867633	0					
ANR	3867680	Identifier	value		3867633	1					
ANR	3867681	CFGEntryNode	ENTRY		3867633		True				
ANR	3867682	CFGExitNode	EXIT		3867633		True				
ANR	3867683	Symbol	tmp		3867633						
ANR	3867684	Symbol	scope		3867633						
ANR	3867685	Symbol	name		3867633						
ANR	3867686	Symbol	name_length		3867633						
ANR	3867687	Symbol	& tmp		3867633						
ANR	3867688	Symbol	value		3867633						
ANR	3867689	Symbol	zend_update_static_property		3867633						
ANR	3867690	Function	zend_update_static_property_string	3974:0:119334:119609							
ANR	3867691	FunctionDef	"zend_update_static_property_string (zend_class_entry * scope , const char * name , size_t name_length , const char * value)"		3867690	0					
ANR	3867692	CompoundStatement		3975:0:119474:119609	3867690	0					
ANR	3867693	IdentifierDeclStatement	zval tmp ;	3976:1:119477:119485	3867690	0	True				
ANR	3867694	IdentifierDecl	tmp		3867690	0					
ANR	3867695	IdentifierDeclType	zval		3867690	0					
ANR	3867696	Identifier	tmp		3867690	1					
ANR	3867697	ExpressionStatement	"ZVAL_STRING ( & tmp , value )"	3978:1:119489:119513	3867690	1	True				
ANR	3867698	CallExpression	"ZVAL_STRING ( & tmp , value )"		3867690	0					
ANR	3867699	Callee	ZVAL_STRING		3867690	0					
ANR	3867700	Identifier	ZVAL_STRING		3867690	0					
ANR	3867701	ArgumentList	& tmp		3867690	1					
ANR	3867702	Argument	& tmp		3867690	0					
ANR	3867703	UnaryOperationExpression	& tmp		3867690	0					
ANR	3867704	UnaryOperator	&		3867690	0					
ANR	3867705	Identifier	tmp		3867690	1					
ANR	3867706	Argument	value		3867690	1					
ANR	3867707	Identifier	value		3867690	0					
ANR	3867708	ExpressionStatement	"Z_SET_REFCOUNT ( tmp , 0 )"	3979:1:119516:119538	3867690	2	True				
ANR	3867709	CallExpression	"Z_SET_REFCOUNT ( tmp , 0 )"		3867690	0					
ANR	3867710	Callee	Z_SET_REFCOUNT		3867690	0					
ANR	3867711	Identifier	Z_SET_REFCOUNT		3867690	0					
ANR	3867712	ArgumentList	tmp		3867690	1					
ANR	3867713	Argument	tmp		3867690	0					
ANR	3867714	Identifier	tmp		3867690	0					
ANR	3867715	Argument	0		3867690	1					
ANR	3867716	PrimaryExpression	0		3867690	0					
ANR	3867717	ReturnStatement	"return zend_update_static_property ( scope , name , name_length , & tmp ) ;"	3980:1:119541:119607	3867690	3	True				
ANR	3867718	CallExpression	"zend_update_static_property ( scope , name , name_length , & tmp )"		3867690	0					
ANR	3867719	Callee	zend_update_static_property		3867690	0					
ANR	3867720	Identifier	zend_update_static_property		3867690	0					
ANR	3867721	ArgumentList	scope		3867690	1					
ANR	3867722	Argument	scope		3867690	0					
ANR	3867723	Identifier	scope		3867690	0					
ANR	3867724	Argument	name		3867690	1					
ANR	3867725	Identifier	name		3867690	0					
ANR	3867726	Argument	name_length		3867690	2					
ANR	3867727	Identifier	name_length		3867690	0					
ANR	3867728	Argument	& tmp		3867690	3					
ANR	3867729	UnaryOperationExpression	& tmp		3867690	0					
ANR	3867730	UnaryOperator	&		3867690	0					
ANR	3867731	Identifier	tmp		3867690	1					
ANR	3867732	ReturnType	ZEND_API int		3867690	1					
ANR	3867733	Identifier	zend_update_static_property_string		3867690	2					
ANR	3867734	ParameterList	"zend_class_entry * scope , const char * name , size_t name_length , const char * value"		3867690	3					
ANR	3867735	Parameter	zend_class_entry * scope	3974:48:119382:119404	3867690	0	True				
ANR	3867736	ParameterType	zend_class_entry *		3867690	0					
ANR	3867737	Identifier	scope		3867690	1					
ANR	3867738	Parameter	const char * name	3974:73:119407:119422	3867690	1	True				
ANR	3867739	ParameterType	const char *		3867690	0					
ANR	3867740	Identifier	name		3867690	1					
ANR	3867741	Parameter	size_t name_length	3974:91:119425:119442	3867690	2	True				
ANR	3867742	ParameterType	size_t		3867690	0					
ANR	3867743	Identifier	name_length		3867690	1					
ANR	3867744	Parameter	const char * value	3974:111:119445:119461	3867690	3	True				
ANR	3867745	ParameterType	const char *		3867690	0					
ANR	3867746	Identifier	value		3867690	1					
ANR	3867747	CFGEntryNode	ENTRY		3867690		True				
ANR	3867748	CFGExitNode	EXIT		3867690		True				
ANR	3867749	Symbol	tmp		3867690						
ANR	3867750	Symbol	scope		3867690						
ANR	3867751	Symbol	name		3867690						
ANR	3867752	Symbol	name_length		3867690						
ANR	3867753	Symbol	& tmp		3867690						
ANR	3867754	Symbol	value		3867690						
ANR	3867755	Symbol	zend_update_static_property		3867690						
ANR	3867756	Function	zend_update_static_property_stringl	3984:0:119622:119928							
ANR	3867757	FunctionDef	"zend_update_static_property_stringl (zend_class_entry * scope , const char * name , size_t name_length , const char * value , size_t value_len)"		3867756	0					
ANR	3867758	CompoundStatement		3985:0:119781:119928	3867756	0					
ANR	3867759	IdentifierDeclStatement	zval tmp ;	3986:1:119784:119792	3867756	0	True				
ANR	3867760	IdentifierDecl	tmp		3867756	0					
ANR	3867761	IdentifierDeclType	zval		3867756	0					
ANR	3867762	Identifier	tmp		3867756	1					
ANR	3867763	ExpressionStatement	"ZVAL_STRINGL ( & tmp , value , value_len )"	3988:1:119796:119832	3867756	1	True				
ANR	3867764	CallExpression	"ZVAL_STRINGL ( & tmp , value , value_len )"		3867756	0					
ANR	3867765	Callee	ZVAL_STRINGL		3867756	0					
ANR	3867766	Identifier	ZVAL_STRINGL		3867756	0					
ANR	3867767	ArgumentList	& tmp		3867756	1					
ANR	3867768	Argument	& tmp		3867756	0					
ANR	3867769	UnaryOperationExpression	& tmp		3867756	0					
ANR	3867770	UnaryOperator	&		3867756	0					
ANR	3867771	Identifier	tmp		3867756	1					
ANR	3867772	Argument	value		3867756	1					
ANR	3867773	Identifier	value		3867756	0					
ANR	3867774	Argument	value_len		3867756	2					
ANR	3867775	Identifier	value_len		3867756	0					
ANR	3867776	ExpressionStatement	"Z_SET_REFCOUNT ( tmp , 0 )"	3989:1:119835:119857	3867756	2	True				
ANR	3867777	CallExpression	"Z_SET_REFCOUNT ( tmp , 0 )"		3867756	0					
ANR	3867778	Callee	Z_SET_REFCOUNT		3867756	0					
ANR	3867779	Identifier	Z_SET_REFCOUNT		3867756	0					
ANR	3867780	ArgumentList	tmp		3867756	1					
ANR	3867781	Argument	tmp		3867756	0					
ANR	3867782	Identifier	tmp		3867756	0					
ANR	3867783	Argument	0		3867756	1					
ANR	3867784	PrimaryExpression	0		3867756	0					
ANR	3867785	ReturnStatement	"return zend_update_static_property ( scope , name , name_length , & tmp ) ;"	3990:1:119860:119926	3867756	3	True				
ANR	3867786	CallExpression	"zend_update_static_property ( scope , name , name_length , & tmp )"		3867756	0					
ANR	3867787	Callee	zend_update_static_property		3867756	0					
ANR	3867788	Identifier	zend_update_static_property		3867756	0					
ANR	3867789	ArgumentList	scope		3867756	1					
ANR	3867790	Argument	scope		3867756	0					
ANR	3867791	Identifier	scope		3867756	0					
ANR	3867792	Argument	name		3867756	1					
ANR	3867793	Identifier	name		3867756	0					
ANR	3867794	Argument	name_length		3867756	2					
ANR	3867795	Identifier	name_length		3867756	0					
ANR	3867796	Argument	& tmp		3867756	3					
ANR	3867797	UnaryOperationExpression	& tmp		3867756	0					
ANR	3867798	UnaryOperator	&		3867756	0					
ANR	3867799	Identifier	tmp		3867756	1					
ANR	3867800	ReturnType	ZEND_API int		3867756	1					
ANR	3867801	Identifier	zend_update_static_property_stringl		3867756	2					
ANR	3867802	ParameterList	"zend_class_entry * scope , const char * name , size_t name_length , const char * value , size_t value_len"		3867756	3					
ANR	3867803	Parameter	zend_class_entry * scope	3984:49:119671:119693	3867756	0	True				
ANR	3867804	ParameterType	zend_class_entry *		3867756	0					
ANR	3867805	Identifier	scope		3867756	1					
ANR	3867806	Parameter	const char * name	3984:74:119696:119711	3867756	1	True				
ANR	3867807	ParameterType	const char *		3867756	0					
ANR	3867808	Identifier	name		3867756	1					
ANR	3867809	Parameter	size_t name_length	3984:92:119714:119731	3867756	2	True				
ANR	3867810	ParameterType	size_t		3867756	0					
ANR	3867811	Identifier	name_length		3867756	1					
ANR	3867812	Parameter	const char * value	3984:112:119734:119750	3867756	3	True				
ANR	3867813	ParameterType	const char *		3867756	0					
ANR	3867814	Identifier	value		3867756	1					
ANR	3867815	Parameter	size_t value_len	3984:131:119753:119768	3867756	4	True				
ANR	3867816	ParameterType	size_t		3867756	0					
ANR	3867817	Identifier	value_len		3867756	1					
ANR	3867818	CFGEntryNode	ENTRY		3867756		True				
ANR	3867819	CFGExitNode	EXIT		3867756		True				
ANR	3867820	Symbol	value_len		3867756						
ANR	3867821	Symbol	tmp		3867756						
ANR	3867822	Symbol	scope		3867756						
ANR	3867823	Symbol	name		3867756						
ANR	3867824	Symbol	name_length		3867756						
ANR	3867825	Symbol	& tmp		3867756						
ANR	3867826	Symbol	value		3867756						
ANR	3867827	Symbol	zend_update_static_property		3867756						
ANR	3867828	Function	zend_read_property	3994:0:119941:120559							
ANR	3867829	FunctionDef	"zend_read_property (zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_bool silent , zval * rv)"		3867828	0					
ANR	3867830	CompoundStatement		3995:0:120090:120559	3867828	0					
ANR	3867831	IdentifierDeclStatement	"zval property , * value ;"	3996:1:120093:120114	3867828	0	True				
ANR	3867832	IdentifierDecl	property		3867828	0					
ANR	3867833	IdentifierDeclType	zval		3867828	0					
ANR	3867834	Identifier	property		3867828	1					
ANR	3867835	IdentifierDecl	* value		3867828	1					
ANR	3867836	IdentifierDeclType	zval *		3867828	0					
ANR	3867837	Identifier	value		3867828	1					
ANR	3867838	IdentifierDeclStatement	zend_class_entry * old_scope = EG ( scope ) ;	3997:1:120117:120156	3867828	1	True				
ANR	3867839	IdentifierDecl	* old_scope = EG ( scope )		3867828	0					
ANR	3867840	IdentifierDeclType	zend_class_entry *		3867828	0					
ANR	3867841	Identifier	old_scope		3867828	1					
ANR	3867842	AssignmentExpression	* old_scope = EG ( scope )		3867828	2		=			
ANR	3867843	Identifier	old_scope		3867828	0					
ANR	3867844	CallExpression	EG ( scope )		3867828	1					
ANR	3867845	Callee	EG		3867828	0					
ANR	3867846	Identifier	EG		3867828	0					
ANR	3867847	ArgumentList	scope		3867828	1					
ANR	3867848	Argument	scope		3867828	0					
ANR	3867849	Identifier	scope		3867828	0					
ANR	3867850	ExpressionStatement	EG ( scope ) = scope	3999:1:120160:120177	3867828	2	True				
ANR	3867851	AssignmentExpression	EG ( scope ) = scope		3867828	0		=			
ANR	3867852	CallExpression	EG ( scope )		3867828	0					
ANR	3867853	Callee	EG		3867828	0					
ANR	3867854	Identifier	EG		3867828	0					
ANR	3867855	ArgumentList	scope		3867828	1					
ANR	3867856	Argument	scope		3867828	0					
ANR	3867857	Identifier	scope		3867828	0					
ANR	3867858	Identifier	scope		3867828	1					
ANR	3867859	IfStatement	if ( ! Z_OBJ_HT_P ( object ) -> read_property )		3867828	3					
ANR	3867860	Condition	! Z_OBJ_HT_P ( object ) -> read_property	4001:5:120185:120218	3867828	0	True				
ANR	3867861	UnaryOperationExpression	! Z_OBJ_HT_P ( object ) -> read_property		3867828	0					
ANR	3867862	UnaryOperator	!		3867828	0					
ANR	3867863	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> read_property		3867828	1					
ANR	3867864	CallExpression	Z_OBJ_HT_P ( object )		3867828	0					
ANR	3867865	Callee	Z_OBJ_HT_P		3867828	0					
ANR	3867866	Identifier	Z_OBJ_HT_P		3867828	0					
ANR	3867867	ArgumentList	object		3867828	1					
ANR	3867868	Argument	object		3867828	0					
ANR	3867869	Identifier	object		3867828	0					
ANR	3867870	Identifier	read_property		3867828	1					
ANR	3867871	CompoundStatement		7:41:130:130	3867828	1					
ANR	3867872	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Property %s of class %s cannot be read"" , name , ZSTR_VAL ( Z_OBJCE_P ( object ) -> name ) )"	4002:2:120225:120341	3867828	0	True				
ANR	3867873	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Property %s of class %s cannot be read"" , name , ZSTR_VAL ( Z_OBJCE_P ( object ) -> name ) )"		3867828	0					
ANR	3867874	Callee	zend_error_noreturn		3867828	0					
ANR	3867875	Identifier	zend_error_noreturn		3867828	0					
ANR	3867876	ArgumentList	E_CORE_ERROR		3867828	1					
ANR	3867877	Argument	E_CORE_ERROR		3867828	0					
ANR	3867878	Identifier	E_CORE_ERROR		3867828	0					
ANR	3867879	Argument	"""Property %s of class %s cannot be read"""		3867828	1					
ANR	3867880	PrimaryExpression	"""Property %s of class %s cannot be read"""		3867828	0					
ANR	3867881	Argument	name		3867828	2					
ANR	3867882	Identifier	name		3867828	0					
ANR	3867883	Argument	ZSTR_VAL ( Z_OBJCE_P ( object ) -> name )		3867828	3					
ANR	3867884	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( object ) -> name )		3867828	0					
ANR	3867885	Callee	ZSTR_VAL		3867828	0					
ANR	3867886	Identifier	ZSTR_VAL		3867828	0					
ANR	3867887	ArgumentList	Z_OBJCE_P ( object ) -> name		3867828	1					
ANR	3867888	Argument	Z_OBJCE_P ( object ) -> name		3867828	0					
ANR	3867889	PtrMemberAccess	Z_OBJCE_P ( object ) -> name		3867828	0					
ANR	3867890	CallExpression	Z_OBJCE_P ( object )		3867828	0					
ANR	3867891	Callee	Z_OBJCE_P		3867828	0					
ANR	3867892	Identifier	Z_OBJCE_P		3867828	0					
ANR	3867893	ArgumentList	object		3867828	1					
ANR	3867894	Argument	object		3867828	0					
ANR	3867895	Identifier	object		3867828	0					
ANR	3867896	Identifier	name		3867828	1					
ANR	3867897	ExpressionStatement	"ZVAL_STRINGL ( & property , name , name_length )"	4005:1:120348:120390	3867828	4	True				
ANR	3867898	CallExpression	"ZVAL_STRINGL ( & property , name , name_length )"		3867828	0					
ANR	3867899	Callee	ZVAL_STRINGL		3867828	0					
ANR	3867900	Identifier	ZVAL_STRINGL		3867828	0					
ANR	3867901	ArgumentList	& property		3867828	1					
ANR	3867902	Argument	& property		3867828	0					
ANR	3867903	UnaryOperationExpression	& property		3867828	0					
ANR	3867904	UnaryOperator	&		3867828	0					
ANR	3867905	Identifier	property		3867828	1					
ANR	3867906	Argument	name		3867828	1					
ANR	3867907	Identifier	name		3867828	0					
ANR	3867908	Argument	name_length		3867828	2					
ANR	3867909	Identifier	name_length		3867828	0					
ANR	3867910	ExpressionStatement	"value = Z_OBJ_HT_P ( object ) -> read_property ( object , & property , silent ? BP_VAR_IS : BP_VAR_R , NULL , rv )"	4006:1:120393:120490	3867828	5	True				
ANR	3867911	AssignmentExpression	"value = Z_OBJ_HT_P ( object ) -> read_property ( object , & property , silent ? BP_VAR_IS : BP_VAR_R , NULL , rv )"		3867828	0		=			
ANR	3867912	Identifier	value		3867828	0					
ANR	3867913	CallExpression	"Z_OBJ_HT_P ( object ) -> read_property ( object , & property , silent ? BP_VAR_IS : BP_VAR_R , NULL , rv )"		3867828	1					
ANR	3867914	Callee	Z_OBJ_HT_P ( object ) -> read_property		3867828	0					
ANR	3867915	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> read_property		3867828	0					
ANR	3867916	CallExpression	Z_OBJ_HT_P ( object )		3867828	0					
ANR	3867917	Callee	Z_OBJ_HT_P		3867828	0					
ANR	3867918	Identifier	Z_OBJ_HT_P		3867828	0					
ANR	3867919	ArgumentList	object		3867828	1					
ANR	3867920	Argument	object		3867828	0					
ANR	3867921	Identifier	object		3867828	0					
ANR	3867922	Identifier	read_property		3867828	1					
ANR	3867923	ArgumentList	object		3867828	1					
ANR	3867924	Argument	object		3867828	0					
ANR	3867925	Identifier	object		3867828	0					
ANR	3867926	Argument	& property		3867828	1					
ANR	3867927	UnaryOperationExpression	& property		3867828	0					
ANR	3867928	UnaryOperator	&		3867828	0					
ANR	3867929	Identifier	property		3867828	1					
ANR	3867930	Argument	silent ? BP_VAR_IS : BP_VAR_R		3867828	2					
ANR	3867931	ConditionalExpression	silent ? BP_VAR_IS : BP_VAR_R		3867828	0					
ANR	3867932	Condition	silent		3867828	0					
ANR	3867933	Identifier	silent		3867828	0					
ANR	3867934	Identifier	BP_VAR_IS		3867828	1					
ANR	3867935	Identifier	BP_VAR_R		3867828	2					
ANR	3867936	Argument	NULL		3867828	3					
ANR	3867937	Identifier	NULL		3867828	0					
ANR	3867938	Argument	rv		3867828	4					
ANR	3867939	Identifier	rv		3867828	0					
ANR	3867940	ExpressionStatement	zval_ptr_dtor ( & property )	4007:1:120493:120517	3867828	6	True				
ANR	3867941	CallExpression	zval_ptr_dtor ( & property )		3867828	0					
ANR	3867942	Callee	zval_ptr_dtor		3867828	0					
ANR	3867943	Identifier	zval_ptr_dtor		3867828	0					
ANR	3867944	ArgumentList	& property		3867828	1					
ANR	3867945	Argument	& property		3867828	0					
ANR	3867946	UnaryOperationExpression	& property		3867828	0					
ANR	3867947	UnaryOperator	&		3867828	0					
ANR	3867948	Identifier	property		3867828	1					
ANR	3867949	ExpressionStatement	EG ( scope ) = old_scope	4009:1:120521:120542	3867828	7	True				
ANR	3867950	AssignmentExpression	EG ( scope ) = old_scope		3867828	0		=			
ANR	3867951	CallExpression	EG ( scope )		3867828	0					
ANR	3867952	Callee	EG		3867828	0					
ANR	3867953	Identifier	EG		3867828	0					
ANR	3867954	ArgumentList	scope		3867828	1					
ANR	3867955	Argument	scope		3867828	0					
ANR	3867956	Identifier	scope		3867828	0					
ANR	3867957	Identifier	old_scope		3867828	1					
ANR	3867958	ReturnStatement	return value ;	4010:1:120545:120557	3867828	8	True				
ANR	3867959	Identifier	value		3867828	0					
ANR	3867960	ReturnType	ZEND_API zval *		3867828	1					
ANR	3867961	Identifier	zend_read_property		3867828	2					
ANR	3867962	ParameterList	"zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_bool silent , zval * rv"		3867828	3					
ANR	3867963	Parameter	zend_class_entry * scope	3994:34:119975:119997	3867828	0	True				
ANR	3867964	ParameterType	zend_class_entry *		3867828	0					
ANR	3867965	Identifier	scope		3867828	1					
ANR	3867966	Parameter	zval * object	3994:59:120000:120011	3867828	1	True				
ANR	3867967	ParameterType	zval *		3867828	0					
ANR	3867968	Identifier	object		3867828	1					
ANR	3867969	Parameter	const char * name	3994:73:120014:120029	3867828	2	True				
ANR	3867970	ParameterType	const char *		3867828	0					
ANR	3867971	Identifier	name		3867828	1					
ANR	3867972	Parameter	size_t name_length	3994:91:120032:120049	3867828	3	True				
ANR	3867973	ParameterType	size_t		3867828	0					
ANR	3867974	Identifier	name_length		3867828	1					
ANR	3867975	Parameter	zend_bool silent	3994:111:120052:120067	3867828	4	True				
ANR	3867976	ParameterType	zend_bool		3867828	0					
ANR	3867977	Identifier	silent		3867828	1					
ANR	3867978	Parameter	zval * rv	3994:129:120070:120077	3867828	5	True				
ANR	3867979	ParameterType	zval *		3867828	0					
ANR	3867980	Identifier	rv		3867828	1					
ANR	3867981	CFGEntryNode	ENTRY		3867828		True				
ANR	3867982	CFGExitNode	EXIT		3867828		True				
ANR	3867983	Symbol	silent		3867828						
ANR	3867984	Symbol	EG		3867828						
ANR	3867985	Symbol	Z_OBJ_HT_P ( object ) -> read_property		3867828						
ANR	3867986	Symbol	Z_OBJCE_P ( object ) -> name		3867828						
ANR	3867987	Symbol	NULL		3867828						
ANR	3867988	Symbol	rv		3867828						
ANR	3867989	Symbol	old_scope		3867828						
ANR	3867990	Symbol	name_length		3867828						
ANR	3867991	Symbol	* Z_OBJ_HT_P		3867828						
ANR	3867992	Symbol	& property		3867828						
ANR	3867993	Symbol	ZSTR_VAL		3867828						
ANR	3867994	Symbol	E_CORE_ERROR		3867828						
ANR	3867995	Symbol	scope		3867828						
ANR	3867996	Symbol	name		3867828						
ANR	3867997	Symbol	property		3867828						
ANR	3867998	Symbol	Z_OBJ_HT_P		3867828						
ANR	3867999	Symbol	Z_OBJCE_P		3867828						
ANR	3868000	Symbol	value		3867828						
ANR	3868001	Symbol	BP_VAR_IS		3867828						
ANR	3868002	Symbol	BP_VAR_R		3867828						
ANR	3868003	Symbol	object		3867828						
ANR	3868004	Symbol	* Z_OBJCE_P		3867828						
ANR	3868005	Function	zend_read_static_property	4014:0:120572:120975							
ANR	3868006	FunctionDef	"zend_read_static_property (zend_class_entry * scope , const char * name , size_t name_length , zend_bool silent)"		3868005	0					
ANR	3868007	CompoundStatement		4015:0:120704:120975	3868005	0					
ANR	3868008	IdentifierDeclStatement	zval * property ;	4016:1:120707:120721	3868005	0	True				
ANR	3868009	IdentifierDecl	* property		3868005	0					
ANR	3868010	IdentifierDeclType	zval *		3868005	0					
ANR	3868011	Identifier	property		3868005	1					
ANR	3868012	IdentifierDeclStatement	zend_class_entry * old_scope = EG ( scope ) ;	4017:1:120724:120763	3868005	1	True				
ANR	3868013	IdentifierDecl	* old_scope = EG ( scope )		3868005	0					
ANR	3868014	IdentifierDeclType	zend_class_entry *		3868005	0					
ANR	3868015	Identifier	old_scope		3868005	1					
ANR	3868016	AssignmentExpression	* old_scope = EG ( scope )		3868005	2		=			
ANR	3868017	Identifier	old_scope		3868005	0					
ANR	3868018	CallExpression	EG ( scope )		3868005	1					
ANR	3868019	Callee	EG		3868005	0					
ANR	3868020	Identifier	EG		3868005	0					
ANR	3868021	ArgumentList	scope		3868005	1					
ANR	3868022	Argument	scope		3868005	0					
ANR	3868023	Identifier	scope		3868005	0					
ANR	3868024	IdentifierDeclStatement	"zend_string * key = zend_string_init ( name , name_length , 0 ) ;"	4018:1:120766:120823	3868005	2	True				
ANR	3868025	IdentifierDecl	"* key = zend_string_init ( name , name_length , 0 )"		3868005	0					
ANR	3868026	IdentifierDeclType	zend_string *		3868005	0					
ANR	3868027	Identifier	key		3868005	1					
ANR	3868028	AssignmentExpression	"* key = zend_string_init ( name , name_length , 0 )"		3868005	2		=			
ANR	3868029	Identifier	key		3868005	0					
ANR	3868030	CallExpression	"zend_string_init ( name , name_length , 0 )"		3868005	1					
ANR	3868031	Callee	zend_string_init		3868005	0					
ANR	3868032	Identifier	zend_string_init		3868005	0					
ANR	3868033	ArgumentList	name		3868005	1					
ANR	3868034	Argument	name		3868005	0					
ANR	3868035	Identifier	name		3868005	0					
ANR	3868036	Argument	name_length		3868005	1					
ANR	3868037	Identifier	name_length		3868005	0					
ANR	3868038	Argument	0		3868005	2					
ANR	3868039	PrimaryExpression	0		3868005	0					
ANR	3868040	ExpressionStatement	EG ( scope ) = scope	4020:1:120827:120844	3868005	3	True				
ANR	3868041	AssignmentExpression	EG ( scope ) = scope		3868005	0		=			
ANR	3868042	CallExpression	EG ( scope )		3868005	0					
ANR	3868043	Callee	EG		3868005	0					
ANR	3868044	Identifier	EG		3868005	0					
ANR	3868045	ArgumentList	scope		3868005	1					
ANR	3868046	Argument	scope		3868005	0					
ANR	3868047	Identifier	scope		3868005	0					
ANR	3868048	Identifier	scope		3868005	1					
ANR	3868049	ExpressionStatement	"property = zend_std_get_static_property ( scope , key , silent )"	4021:1:120847:120906	3868005	4	True				
ANR	3868050	AssignmentExpression	"property = zend_std_get_static_property ( scope , key , silent )"		3868005	0		=			
ANR	3868051	Identifier	property		3868005	0					
ANR	3868052	CallExpression	"zend_std_get_static_property ( scope , key , silent )"		3868005	1					
ANR	3868053	Callee	zend_std_get_static_property		3868005	0					
ANR	3868054	Identifier	zend_std_get_static_property		3868005	0					
ANR	3868055	ArgumentList	scope		3868005	1					
ANR	3868056	Argument	scope		3868005	0					
ANR	3868057	Identifier	scope		3868005	0					
ANR	3868058	Argument	key		3868005	1					
ANR	3868059	Identifier	key		3868005	0					
ANR	3868060	Argument	silent		3868005	2					
ANR	3868061	Identifier	silent		3868005	0					
ANR	3868062	ExpressionStatement	EG ( scope ) = old_scope	4022:1:120909:120930	3868005	5	True				
ANR	3868063	AssignmentExpression	EG ( scope ) = old_scope		3868005	0		=			
ANR	3868064	CallExpression	EG ( scope )		3868005	0					
ANR	3868065	Callee	EG		3868005	0					
ANR	3868066	Identifier	EG		3868005	0					
ANR	3868067	ArgumentList	scope		3868005	1					
ANR	3868068	Argument	scope		3868005	0					
ANR	3868069	Identifier	scope		3868005	0					
ANR	3868070	Identifier	old_scope		3868005	1					
ANR	3868071	ExpressionStatement	zend_string_free ( key )	4023:1:120933:120954	3868005	6	True				
ANR	3868072	CallExpression	zend_string_free ( key )		3868005	0					
ANR	3868073	Callee	zend_string_free		3868005	0					
ANR	3868074	Identifier	zend_string_free		3868005	0					
ANR	3868075	ArgumentList	key		3868005	1					
ANR	3868076	Argument	key		3868005	0					
ANR	3868077	Identifier	key		3868005	0					
ANR	3868078	ReturnStatement	return property ;	4025:1:120958:120973	3868005	7	True				
ANR	3868079	Identifier	property		3868005	0					
ANR	3868080	ReturnType	ZEND_API zval *		3868005	1					
ANR	3868081	Identifier	zend_read_static_property		3868005	2					
ANR	3868082	ParameterList	"zend_class_entry * scope , const char * name , size_t name_length , zend_bool silent"		3868005	3					
ANR	3868083	Parameter	zend_class_entry * scope	4014:41:120613:120635	3868005	0	True				
ANR	3868084	ParameterType	zend_class_entry *		3868005	0					
ANR	3868085	Identifier	scope		3868005	1					
ANR	3868086	Parameter	const char * name	4014:66:120638:120653	3868005	1	True				
ANR	3868087	ParameterType	const char *		3868005	0					
ANR	3868088	Identifier	name		3868005	1					
ANR	3868089	Parameter	size_t name_length	4014:84:120656:120673	3868005	2	True				
ANR	3868090	ParameterType	size_t		3868005	0					
ANR	3868091	Identifier	name_length		3868005	1					
ANR	3868092	Parameter	zend_bool silent	4014:104:120676:120691	3868005	3	True				
ANR	3868093	ParameterType	zend_bool		3868005	0					
ANR	3868094	Identifier	silent		3868005	1					
ANR	3868095	CFGEntryNode	ENTRY		3868005		True				
ANR	3868096	CFGExitNode	EXIT		3868005		True				
ANR	3868097	Symbol	zend_string_init		3868005						
ANR	3868098	Symbol	silent		3868005						
ANR	3868099	Symbol	EG		3868005						
ANR	3868100	Symbol	old_scope		3868005						
ANR	3868101	Symbol	scope		3868005						
ANR	3868102	Symbol	name		3868005						
ANR	3868103	Symbol	property		3868005						
ANR	3868104	Symbol	name_length		3868005						
ANR	3868105	Symbol	key		3868005						
ANR	3868106	Symbol	zend_std_get_static_property		3868005						
ANR	3868107	Function	zend_save_error_handling	4029:0:120988:121214							
ANR	3868108	FunctionDef	zend_save_error_handling (zend_error_handling * current)		3868107	0					
ANR	3868109	CompoundStatement		4030:0:121067:121214	3868107	0					
ANR	3868110	ExpressionStatement	current -> handling = EG ( error_handling )	4031:1:121070:121108	3868107	0	True				
ANR	3868111	AssignmentExpression	current -> handling = EG ( error_handling )		3868107	0		=			
ANR	3868112	PtrMemberAccess	current -> handling		3868107	0					
ANR	3868113	Identifier	current		3868107	0					
ANR	3868114	Identifier	handling		3868107	1					
ANR	3868115	CallExpression	EG ( error_handling )		3868107	1					
ANR	3868116	Callee	EG		3868107	0					
ANR	3868117	Identifier	EG		3868107	0					
ANR	3868118	ArgumentList	error_handling		3868107	1					
ANR	3868119	Argument	error_handling		3868107	0					
ANR	3868120	Identifier	error_handling		3868107	0					
ANR	3868121	ExpressionStatement	current -> exception = EG ( exception_class )	4032:1:121111:121151	3868107	1	True				
ANR	3868122	AssignmentExpression	current -> exception = EG ( exception_class )		3868107	0		=			
ANR	3868123	PtrMemberAccess	current -> exception		3868107	0					
ANR	3868124	Identifier	current		3868107	0					
ANR	3868125	Identifier	exception		3868107	1					
ANR	3868126	CallExpression	EG ( exception_class )		3868107	1					
ANR	3868127	Callee	EG		3868107	0					
ANR	3868128	Identifier	EG		3868107	0					
ANR	3868129	ArgumentList	exception_class		3868107	1					
ANR	3868130	Argument	exception_class		3868107	0					
ANR	3868131	Identifier	exception_class		3868107	0					
ANR	3868132	ExpressionStatement	"ZVAL_COPY ( & current -> user_handler , & EG ( user_error_handler ) )"	4033:1:121154:121212	3868107	2	True				
ANR	3868133	CallExpression	"ZVAL_COPY ( & current -> user_handler , & EG ( user_error_handler ) )"		3868107	0					
ANR	3868134	Callee	ZVAL_COPY		3868107	0					
ANR	3868135	Identifier	ZVAL_COPY		3868107	0					
ANR	3868136	ArgumentList	& current -> user_handler		3868107	1					
ANR	3868137	Argument	& current -> user_handler		3868107	0					
ANR	3868138	UnaryOperationExpression	& current -> user_handler		3868107	0					
ANR	3868139	UnaryOperator	&		3868107	0					
ANR	3868140	PtrMemberAccess	current -> user_handler		3868107	1					
ANR	3868141	Identifier	current		3868107	0					
ANR	3868142	Identifier	user_handler		3868107	1					
ANR	3868143	Argument	& EG ( user_error_handler )		3868107	1					
ANR	3868144	UnaryOperationExpression	& EG ( user_error_handler )		3868107	0					
ANR	3868145	UnaryOperator	&		3868107	0					
ANR	3868146	CallExpression	EG ( user_error_handler )		3868107	1					
ANR	3868147	Callee	EG		3868107	0					
ANR	3868148	Identifier	EG		3868107	0					
ANR	3868149	ArgumentList	user_error_handler		3868107	1					
ANR	3868150	Argument	user_error_handler		3868107	0					
ANR	3868151	Identifier	user_error_handler		3868107	0					
ANR	3868152	ReturnType	ZEND_API void		3868107	1					
ANR	3868153	Identifier	zend_save_error_handling		3868107	2					
ANR	3868154	ParameterList	zend_error_handling * current		3868107	3					
ANR	3868155	Parameter	zend_error_handling * current	4029:39:121027:121054	3868107	0	True				
ANR	3868156	ParameterType	zend_error_handling *		3868107	0					
ANR	3868157	Identifier	current		3868107	1					
ANR	3868158	CFGEntryNode	ENTRY		3868107		True				
ANR	3868159	CFGExitNode	EXIT		3868107		True				
ANR	3868160	Symbol	current		3868107						
ANR	3868161	Symbol	EG		3868107						
ANR	3868162	Symbol	user_error_handler		3868107						
ANR	3868163	Symbol	* current		3868107						
ANR	3868164	Symbol	current -> handling		3868107						
ANR	3868165	Symbol	current -> exception		3868107						
ANR	3868166	Symbol	exception_class		3868107						
ANR	3868167	Symbol	error_handling		3868107						
ANR	3868168	Symbol	& current -> user_handler		3868107						
ANR	3868169	Symbol	& EG		3868107						
ANR	3868170	Function	zend_replace_error_handling	4037:0:121227:121724							
ANR	3868171	FunctionDef	"zend_replace_error_handling (zend_error_handling_t error_handling , zend_class_entry * exception_class , zend_error_handling * current)"		3868170	0					
ANR	3868172	CompoundStatement		4038:0:121382:121724	3868170	0					
ANR	3868173	IfStatement	if ( current )		3868170	0					
ANR	3868174	Condition	current	4039:5:121389:121395	3868170	0	True				
ANR	3868175	Identifier	current		3868170	0					
ANR	3868176	CompoundStatement		2:14:15:15	3868170	1					
ANR	3868177	ExpressionStatement	zend_save_error_handling ( current )	4040:2:121402:121435	3868170	0	True				
ANR	3868178	CallExpression	zend_save_error_handling ( current )		3868170	0					
ANR	3868179	Callee	zend_save_error_handling		3868170	0					
ANR	3868180	Identifier	zend_save_error_handling		3868170	0					
ANR	3868181	ArgumentList	current		3868170	1					
ANR	3868182	Argument	current		3868170	0					
ANR	3868183	Identifier	current		3868170	0					
ANR	3868184	IfStatement	if ( error_handling != EH_NORMAL && Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF )		3868170	1					
ANR	3868185	Condition	error_handling != EH_NORMAL && Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF	4041:6:121443:121515	3868170	0	True				
ANR	3868186	AndExpression	error_handling != EH_NORMAL && Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF		3868170	0		&&			
ANR	3868187	EqualityExpression	error_handling != EH_NORMAL		3868170	0		!=			
ANR	3868188	Identifier	error_handling		3868170	0					
ANR	3868189	Identifier	EH_NORMAL		3868170	1					
ANR	3868190	EqualityExpression	Z_TYPE ( EG ( user_error_handler ) ) != IS_UNDEF		3868170	1		!=			
ANR	3868191	CallExpression	Z_TYPE ( EG ( user_error_handler ) )		3868170	0					
ANR	3868192	Callee	Z_TYPE		3868170	0					
ANR	3868193	Identifier	Z_TYPE		3868170	0					
ANR	3868194	ArgumentList	EG ( user_error_handler )		3868170	1					
ANR	3868195	Argument	EG ( user_error_handler )		3868170	0					
ANR	3868196	CallExpression	EG ( user_error_handler )		3868170	0					
ANR	3868197	Callee	EG		3868170	0					
ANR	3868198	Identifier	EG		3868170	0					
ANR	3868199	ArgumentList	user_error_handler		3868170	1					
ANR	3868200	Argument	user_error_handler		3868170	0					
ANR	3868201	Identifier	user_error_handler		3868170	0					
ANR	3868202	Identifier	IS_UNDEF		3868170	1					
ANR	3868203	CompoundStatement		4:81:135:135	3868170	1					
ANR	3868204	ExpressionStatement	zval_ptr_dtor ( & EG ( user_error_handler ) )	4042:3:121523:121561	3868170	0	True				
ANR	3868205	CallExpression	zval_ptr_dtor ( & EG ( user_error_handler ) )		3868170	0					
ANR	3868206	Callee	zval_ptr_dtor		3868170	0					
ANR	3868207	Identifier	zval_ptr_dtor		3868170	0					
ANR	3868208	ArgumentList	& EG ( user_error_handler )		3868170	1					
ANR	3868209	Argument	& EG ( user_error_handler )		3868170	0					
ANR	3868210	UnaryOperationExpression	& EG ( user_error_handler )		3868170	0					
ANR	3868211	UnaryOperator	&		3868170	0					
ANR	3868212	CallExpression	EG ( user_error_handler )		3868170	1					
ANR	3868213	Callee	EG		3868170	0					
ANR	3868214	Identifier	EG		3868170	0					
ANR	3868215	ArgumentList	user_error_handler		3868170	1					
ANR	3868216	Argument	user_error_handler		3868170	0					
ANR	3868217	Identifier	user_error_handler		3868170	0					
ANR	3868218	ExpressionStatement	ZVAL_UNDEF ( & EG ( user_error_handler ) )	4043:3:121566:121601	3868170	1	True				
ANR	3868219	CallExpression	ZVAL_UNDEF ( & EG ( user_error_handler ) )		3868170	0					
ANR	3868220	Callee	ZVAL_UNDEF		3868170	0					
ANR	3868221	Identifier	ZVAL_UNDEF		3868170	0					
ANR	3868222	ArgumentList	& EG ( user_error_handler )		3868170	1					
ANR	3868223	Argument	& EG ( user_error_handler )		3868170	0					
ANR	3868224	UnaryOperationExpression	& EG ( user_error_handler )		3868170	0					
ANR	3868225	UnaryOperator	&		3868170	0					
ANR	3868226	CallExpression	EG ( user_error_handler )		3868170	1					
ANR	3868227	Callee	EG		3868170	0					
ANR	3868228	Identifier	EG		3868170	0					
ANR	3868229	ArgumentList	user_error_handler		3868170	1					
ANR	3868230	Argument	user_error_handler		3868170	0					
ANR	3868231	Identifier	user_error_handler		3868170	0					
ANR	3868232	ExpressionStatement	EG ( error_handling ) = error_handling	4046:1:121611:121646	3868170	1	True				
ANR	3868233	AssignmentExpression	EG ( error_handling ) = error_handling		3868170	0		=			
ANR	3868234	CallExpression	EG ( error_handling )		3868170	0					
ANR	3868235	Callee	EG		3868170	0					
ANR	3868236	Identifier	EG		3868170	0					
ANR	3868237	ArgumentList	error_handling		3868170	1					
ANR	3868238	Argument	error_handling		3868170	0					
ANR	3868239	Identifier	error_handling		3868170	0					
ANR	3868240	Identifier	error_handling		3868170	1					
ANR	3868241	ExpressionStatement	EG ( exception_class ) = error_handling == EH_THROW ? exception_class : NULL	4047:1:121649:121722	3868170	2	True				
ANR	3868242	AssignmentExpression	EG ( exception_class ) = error_handling == EH_THROW ? exception_class : NULL		3868170	0		=			
ANR	3868243	CallExpression	EG ( exception_class )		3868170	0					
ANR	3868244	Callee	EG		3868170	0					
ANR	3868245	Identifier	EG		3868170	0					
ANR	3868246	ArgumentList	exception_class		3868170	1					
ANR	3868247	Argument	exception_class		3868170	0					
ANR	3868248	Identifier	exception_class		3868170	0					
ANR	3868249	ConditionalExpression	error_handling == EH_THROW ? exception_class : NULL		3868170	1					
ANR	3868250	Condition	error_handling == EH_THROW		3868170	0					
ANR	3868251	EqualityExpression	error_handling == EH_THROW		3868170	0		==			
ANR	3868252	Identifier	error_handling		3868170	0					
ANR	3868253	Identifier	EH_THROW		3868170	1					
ANR	3868254	Identifier	exception_class		3868170	1					
ANR	3868255	Identifier	NULL		3868170	2					
ANR	3868256	ReturnType	ZEND_API void		3868170	1					
ANR	3868257	Identifier	zend_replace_error_handling		3868170	2					
ANR	3868258	ParameterList	"zend_error_handling_t error_handling , zend_class_entry * exception_class , zend_error_handling * current"		3868170	3					
ANR	3868259	Parameter	zend_error_handling_t error_handling	4037:42:121269:121304	3868170	0	True				
ANR	3868260	ParameterType	zend_error_handling_t		3868170	0					
ANR	3868261	Identifier	error_handling		3868170	1					
ANR	3868262	Parameter	zend_class_entry * exception_class	4037:80:121307:121339	3868170	1	True				
ANR	3868263	ParameterType	zend_class_entry *		3868170	0					
ANR	3868264	Identifier	exception_class		3868170	1					
ANR	3868265	Parameter	zend_error_handling * current	4037:115:121342:121369	3868170	2	True				
ANR	3868266	ParameterType	zend_error_handling *		3868170	0					
ANR	3868267	Identifier	current		3868170	1					
ANR	3868268	CFGEntryNode	ENTRY		3868170		True				
ANR	3868269	CFGExitNode	EXIT		3868170		True				
ANR	3868270	Symbol	current		3868170						
ANR	3868271	Symbol	EG		3868170						
ANR	3868272	Symbol	EH_NORMAL		3868170						
ANR	3868273	Symbol	user_error_handler		3868170						
ANR	3868274	Symbol	NULL		3868170						
ANR	3868275	Symbol	EH_THROW		3868170						
ANR	3868276	Symbol	Z_TYPE		3868170						
ANR	3868277	Symbol	exception_class		3868170						
ANR	3868278	Symbol	error_handling		3868170						
ANR	3868279	Symbol	& EG		3868170						
ANR	3868280	Symbol	IS_UNDEF		3868170						
ANR	3868281	Function	same_zval	4051:0:121737:122218							
ANR	3868282	FunctionDef	"same_zval (zval * zv1 , zval * zv2)"		3868281	0					
ANR	3868283	CompoundStatement		4052:0:121791:122218	3868281	0					
ANR	3868284	IfStatement	if ( Z_TYPE_P ( zv1 ) != Z_TYPE_P ( zv2 ) )		3868281	0					
ANR	3868285	Condition	Z_TYPE_P ( zv1 ) != Z_TYPE_P ( zv2 )	4053:5:121798:121827	3868281	0	True				
ANR	3868286	EqualityExpression	Z_TYPE_P ( zv1 ) != Z_TYPE_P ( zv2 )		3868281	0		!=			
ANR	3868287	CallExpression	Z_TYPE_P ( zv1 )		3868281	0					
ANR	3868288	Callee	Z_TYPE_P		3868281	0					
ANR	3868289	Identifier	Z_TYPE_P		3868281	0					
ANR	3868290	ArgumentList	zv1		3868281	1					
ANR	3868291	Argument	zv1		3868281	0					
ANR	3868292	Identifier	zv1		3868281	0					
ANR	3868293	CallExpression	Z_TYPE_P ( zv2 )		3868281	1					
ANR	3868294	Callee	Z_TYPE_P		3868281	0					
ANR	3868295	Identifier	Z_TYPE_P		3868281	0					
ANR	3868296	ArgumentList	zv2		3868281	1					
ANR	3868297	Argument	zv2		3868281	0					
ANR	3868298	Identifier	zv2		3868281	0					
ANR	3868299	CompoundStatement		2:37:38:38	3868281	1					
ANR	3868300	ReturnStatement	return 0 ;	4054:2:121834:121842	3868281	0	True				
ANR	3868301	PrimaryExpression	0		3868281	0					
ANR	3868302	SwitchStatement	switch ( Z_TYPE_P ( zv1 ) )		3868281	1					
ANR	3868303	Condition	Z_TYPE_P ( zv1 )	4056:9:121856:121868	3868281	0	True				
ANR	3868304	CallExpression	Z_TYPE_P ( zv1 )		3868281	0					
ANR	3868305	Callee	Z_TYPE_P		3868281	0					
ANR	3868306	Identifier	Z_TYPE_P		3868281	0					
ANR	3868307	ArgumentList	zv1		3868281	1					
ANR	3868308	Argument	zv1		3868281	0					
ANR	3868309	Identifier	zv1		3868281	0					
ANR	3868310	CompoundStatement		5:24:79:79	3868281	1					
ANR	3868311	Label	case IS_UNDEF :	4057:2:121875:121888	3868281	0	True				
ANR	3868312	Identifier	IS_UNDEF		3868281	0					
ANR	3868313	Label	case IS_NULL :	4058:2:121892:121904	3868281	1	True				
ANR	3868314	Identifier	IS_NULL		3868281	0					
ANR	3868315	Label	case IS_FALSE :	4059:2:121908:121921	3868281	2	True				
ANR	3868316	Identifier	IS_FALSE		3868281	0					
ANR	3868317	Label	case IS_TRUE :	4060:2:121925:121937	3868281	3	True				
ANR	3868318	Identifier	IS_TRUE		3868281	0					
ANR	3868319	ReturnStatement	return 1 ;	4061:3:121942:121950	3868281	4	True				
ANR	3868320	PrimaryExpression	1		3868281	0					
ANR	3868321	Label	case IS_LONG :	4062:2:121954:121966	3868281	5	True				
ANR	3868322	Identifier	IS_LONG		3868281	0					
ANR	3868323	ReturnStatement	return Z_LVAL_P ( zv1 ) == Z_LVAL_P ( zv2 ) ;	4063:3:121971:122008	3868281	6	True				
ANR	3868324	EqualityExpression	Z_LVAL_P ( zv1 ) == Z_LVAL_P ( zv2 )		3868281	0		==			
ANR	3868325	CallExpression	Z_LVAL_P ( zv1 )		3868281	0					
ANR	3868326	Callee	Z_LVAL_P		3868281	0					
ANR	3868327	Identifier	Z_LVAL_P		3868281	0					
ANR	3868328	ArgumentList	zv1		3868281	1					
ANR	3868329	Argument	zv1		3868281	0					
ANR	3868330	Identifier	zv1		3868281	0					
ANR	3868331	CallExpression	Z_LVAL_P ( zv2 )		3868281	1					
ANR	3868332	Callee	Z_LVAL_P		3868281	0					
ANR	3868333	Identifier	Z_LVAL_P		3868281	0					
ANR	3868334	ArgumentList	zv2		3868281	1					
ANR	3868335	Argument	zv2		3868281	0					
ANR	3868336	Identifier	zv2		3868281	0					
ANR	3868337	Label	case IS_DOUBLE :	4064:2:122012:122026	3868281	7	True				
ANR	3868338	Identifier	IS_DOUBLE		3868281	0					
ANR	3868339	ReturnStatement	return Z_LVAL_P ( zv1 ) == Z_LVAL_P ( zv2 ) ;	4065:3:122031:122068	3868281	8	True				
ANR	3868340	EqualityExpression	Z_LVAL_P ( zv1 ) == Z_LVAL_P ( zv2 )		3868281	0		==			
ANR	3868341	CallExpression	Z_LVAL_P ( zv1 )		3868281	0					
ANR	3868342	Callee	Z_LVAL_P		3868281	0					
ANR	3868343	Identifier	Z_LVAL_P		3868281	0					
ANR	3868344	ArgumentList	zv1		3868281	1					
ANR	3868345	Argument	zv1		3868281	0					
ANR	3868346	Identifier	zv1		3868281	0					
ANR	3868347	CallExpression	Z_LVAL_P ( zv2 )		3868281	1					
ANR	3868348	Callee	Z_LVAL_P		3868281	0					
ANR	3868349	Identifier	Z_LVAL_P		3868281	0					
ANR	3868350	ArgumentList	zv2		3868281	1					
ANR	3868351	Argument	zv2		3868281	0					
ANR	3868352	Identifier	zv2		3868281	0					
ANR	3868353	Label	case IS_STRING :	4066:2:122072:122086	3868281	9	True				
ANR	3868354	Identifier	IS_STRING		3868281	0					
ANR	3868355	Label	case IS_ARRAY :	4067:2:122090:122103	3868281	10	True				
ANR	3868356	Identifier	IS_ARRAY		3868281	0					
ANR	3868357	Label	case IS_OBJECT :	4068:2:122107:122121	3868281	11	True				
ANR	3868358	Identifier	IS_OBJECT		3868281	0					
ANR	3868359	Label	case IS_RESOURCE :	4069:2:122125:122141	3868281	12	True				
ANR	3868360	Identifier	IS_RESOURCE		3868281	0					
ANR	3868361	ReturnStatement	return Z_COUNTED_P ( zv1 ) == Z_COUNTED_P ( zv2 ) ;	4070:3:122146:122189	3868281	13	True				
ANR	3868362	EqualityExpression	Z_COUNTED_P ( zv1 ) == Z_COUNTED_P ( zv2 )		3868281	0		==			
ANR	3868363	CallExpression	Z_COUNTED_P ( zv1 )		3868281	0					
ANR	3868364	Callee	Z_COUNTED_P		3868281	0					
ANR	3868365	Identifier	Z_COUNTED_P		3868281	0					
ANR	3868366	ArgumentList	zv1		3868281	1					
ANR	3868367	Argument	zv1		3868281	0					
ANR	3868368	Identifier	zv1		3868281	0					
ANR	3868369	CallExpression	Z_COUNTED_P ( zv2 )		3868281	1					
ANR	3868370	Callee	Z_COUNTED_P		3868281	0					
ANR	3868371	Identifier	Z_COUNTED_P		3868281	0					
ANR	3868372	ArgumentList	zv2		3868281	1					
ANR	3868373	Argument	zv2		3868281	0					
ANR	3868374	Identifier	zv2		3868281	0					
ANR	3868375	Label	default :	4071:2:122193:122200	3868281	14	True				
ANR	3868376	Identifier	default		3868281	0					
ANR	3868377	ReturnStatement	return 0 ;	4072:3:122205:122213	3868281	15	True				
ANR	3868378	PrimaryExpression	0		3868281	0					
ANR	3868379	ReturnType	static int		3868281	1					
ANR	3868380	Identifier	same_zval		3868281	2					
ANR	3868381	ParameterList	"zval * zv1 , zval * zv2"		3868281	3					
ANR	3868382	Parameter	zval * zv1	4051:21:121758:121766	3868281	0	True				
ANR	3868383	ParameterType	zval *		3868281	0					
ANR	3868384	Identifier	zv1		3868281	1					
ANR	3868385	Parameter	zval * zv2	4051:32:121769:121777	3868281	1	True				
ANR	3868386	ParameterType	zval *		3868281	0					
ANR	3868387	Identifier	zv2		3868281	1					
ANR	3868388	CFGEntryNode	ENTRY		3868281		True				
ANR	3868389	CFGExitNode	EXIT		3868281		True				
ANR	3868390	Symbol	Z_COUNTED_P		3868281						
ANR	3868391	Symbol	zv1		3868281						
ANR	3868392	Symbol	zv2		3868281						
ANR	3868393	Symbol	Z_TYPE_P		3868281						
ANR	3868394	Symbol	Z_LVAL_P		3868281						
ANR	3868395	Function	zend_restore_error_handling	4077:0:122231:122769							
ANR	3868396	FunctionDef	zend_restore_error_handling (zend_error_handling * saved)		3868395	0					
ANR	3868397	CompoundStatement		4078:0:122311:122769	3868395	0					
ANR	3868398	ExpressionStatement	EG ( error_handling ) = saved -> handling	4079:1:122314:122350	3868395	0	True				
ANR	3868399	AssignmentExpression	EG ( error_handling ) = saved -> handling		3868395	0		=			
ANR	3868400	CallExpression	EG ( error_handling )		3868395	0					
ANR	3868401	Callee	EG		3868395	0					
ANR	3868402	Identifier	EG		3868395	0					
ANR	3868403	ArgumentList	error_handling		3868395	1					
ANR	3868404	Argument	error_handling		3868395	0					
ANR	3868405	Identifier	error_handling		3868395	0					
ANR	3868406	PtrMemberAccess	saved -> handling		3868395	1					
ANR	3868407	Identifier	saved		3868395	0					
ANR	3868408	Identifier	handling		3868395	1					
ANR	3868409	ExpressionStatement	EG ( exception_class ) = saved -> handling == EH_THROW ? saved -> exception : NULL	4080:1:122353:122428	3868395	1	True				
ANR	3868410	AssignmentExpression	EG ( exception_class ) = saved -> handling == EH_THROW ? saved -> exception : NULL		3868395	0		=			
ANR	3868411	CallExpression	EG ( exception_class )		3868395	0					
ANR	3868412	Callee	EG		3868395	0					
ANR	3868413	Identifier	EG		3868395	0					
ANR	3868414	ArgumentList	exception_class		3868395	1					
ANR	3868415	Argument	exception_class		3868395	0					
ANR	3868416	Identifier	exception_class		3868395	0					
ANR	3868417	ConditionalExpression	saved -> handling == EH_THROW ? saved -> exception : NULL		3868395	1					
ANR	3868418	Condition	saved -> handling == EH_THROW		3868395	0					
ANR	3868419	EqualityExpression	saved -> handling == EH_THROW		3868395	0		==			
ANR	3868420	PtrMemberAccess	saved -> handling		3868395	0					
ANR	3868421	Identifier	saved		3868395	0					
ANR	3868422	Identifier	handling		3868395	1					
ANR	3868423	Identifier	EH_THROW		3868395	1					
ANR	3868424	PtrMemberAccess	saved -> exception		3868395	1					
ANR	3868425	Identifier	saved		3868395	0					
ANR	3868426	Identifier	exception		3868395	1					
ANR	3868427	Identifier	NULL		3868395	2					
ANR	3868428	IfStatement	"if ( Z_TYPE ( saved -> user_handler ) != IS_UNDEF && ! same_zval ( & saved -> user_handler , & EG ( user_error_handler ) ) )"		3868395	2					
ANR	3868429	Condition	"Z_TYPE ( saved -> user_handler ) != IS_UNDEF && ! same_zval ( & saved -> user_handler , & EG ( user_error_handler ) )"	4081:5:122435:122536	3868395	0	True				
ANR	3868430	AndExpression	"Z_TYPE ( saved -> user_handler ) != IS_UNDEF && ! same_zval ( & saved -> user_handler , & EG ( user_error_handler ) )"		3868395	0		&&			
ANR	3868431	EqualityExpression	Z_TYPE ( saved -> user_handler ) != IS_UNDEF		3868395	0		!=			
ANR	3868432	CallExpression	Z_TYPE ( saved -> user_handler )		3868395	0					
ANR	3868433	Callee	Z_TYPE		3868395	0					
ANR	3868434	Identifier	Z_TYPE		3868395	0					
ANR	3868435	ArgumentList	saved -> user_handler		3868395	1					
ANR	3868436	Argument	saved -> user_handler		3868395	0					
ANR	3868437	PtrMemberAccess	saved -> user_handler		3868395	0					
ANR	3868438	Identifier	saved		3868395	0					
ANR	3868439	Identifier	user_handler		3868395	1					
ANR	3868440	Identifier	IS_UNDEF		3868395	1					
ANR	3868441	UnaryOperationExpression	"! same_zval ( & saved -> user_handler , & EG ( user_error_handler ) )"		3868395	1					
ANR	3868442	UnaryOperator	!		3868395	0					
ANR	3868443	CallExpression	"same_zval ( & saved -> user_handler , & EG ( user_error_handler ) )"		3868395	1					
ANR	3868444	Callee	same_zval		3868395	0					
ANR	3868445	Identifier	same_zval		3868395	0					
ANR	3868446	ArgumentList	& saved -> user_handler		3868395	1					
ANR	3868447	Argument	& saved -> user_handler		3868395	0					
ANR	3868448	UnaryOperationExpression	& saved -> user_handler		3868395	0					
ANR	3868449	UnaryOperator	&		3868395	0					
ANR	3868450	PtrMemberAccess	saved -> user_handler		3868395	1					
ANR	3868451	Identifier	saved		3868395	0					
ANR	3868452	Identifier	user_handler		3868395	1					
ANR	3868453	Argument	& EG ( user_error_handler )		3868395	1					
ANR	3868454	UnaryOperationExpression	& EG ( user_error_handler )		3868395	0					
ANR	3868455	UnaryOperator	&		3868395	0					
ANR	3868456	CallExpression	EG ( user_error_handler )		3868395	1					
ANR	3868457	Callee	EG		3868395	0					
ANR	3868458	Identifier	EG		3868395	0					
ANR	3868459	ArgumentList	user_error_handler		3868395	1					
ANR	3868460	Argument	user_error_handler		3868395	0					
ANR	3868461	Identifier	user_error_handler		3868395	0					
ANR	3868462	CompoundStatement		5:64:227:227	3868395	1					
ANR	3868463	ExpressionStatement	zval_ptr_dtor ( & EG ( user_error_handler ) )	4083:2:122543:122581	3868395	0	True				
ANR	3868464	CallExpression	zval_ptr_dtor ( & EG ( user_error_handler ) )		3868395	0					
ANR	3868465	Callee	zval_ptr_dtor		3868395	0					
ANR	3868466	Identifier	zval_ptr_dtor		3868395	0					
ANR	3868467	ArgumentList	& EG ( user_error_handler )		3868395	1					
ANR	3868468	Argument	& EG ( user_error_handler )		3868395	0					
ANR	3868469	UnaryOperationExpression	& EG ( user_error_handler )		3868395	0					
ANR	3868470	UnaryOperator	&		3868395	0					
ANR	3868471	CallExpression	EG ( user_error_handler )		3868395	1					
ANR	3868472	Callee	EG		3868395	0					
ANR	3868473	Identifier	EG		3868395	0					
ANR	3868474	ArgumentList	user_error_handler		3868395	1					
ANR	3868475	Argument	user_error_handler		3868395	0					
ANR	3868476	Identifier	user_error_handler		3868395	0					
ANR	3868477	ExpressionStatement	"ZVAL_COPY_VALUE ( & EG ( user_error_handler ) , & saved -> user_handler )"	4084:2:122585:122647	3868395	1	True				
ANR	3868478	CallExpression	"ZVAL_COPY_VALUE ( & EG ( user_error_handler ) , & saved -> user_handler )"		3868395	0					
ANR	3868479	Callee	ZVAL_COPY_VALUE		3868395	0					
ANR	3868480	Identifier	ZVAL_COPY_VALUE		3868395	0					
ANR	3868481	ArgumentList	& EG ( user_error_handler )		3868395	1					
ANR	3868482	Argument	& EG ( user_error_handler )		3868395	0					
ANR	3868483	UnaryOperationExpression	& EG ( user_error_handler )		3868395	0					
ANR	3868484	UnaryOperator	&		3868395	0					
ANR	3868485	CallExpression	EG ( user_error_handler )		3868395	1					
ANR	3868486	Callee	EG		3868395	0					
ANR	3868487	Identifier	EG		3868395	0					
ANR	3868488	ArgumentList	user_error_handler		3868395	1					
ANR	3868489	Argument	user_error_handler		3868395	0					
ANR	3868490	Identifier	user_error_handler		3868395	0					
ANR	3868491	Argument	& saved -> user_handler		3868395	1					
ANR	3868492	UnaryOperationExpression	& saved -> user_handler		3868395	0					
ANR	3868493	UnaryOperator	&		3868395	0					
ANR	3868494	PtrMemberAccess	saved -> user_handler		3868395	1					
ANR	3868495	Identifier	saved		3868395	0					
ANR	3868496	Identifier	user_handler		3868395	1					
ANR	3868497	ElseStatement	else		3868395	0					
ANR	3868498	IfStatement	if ( Z_TYPE ( saved -> user_handler ) )		3868395	0					
ANR	3868499	Condition	Z_TYPE ( saved -> user_handler )	4085:12:122661:122687	3868395	0	True				
ANR	3868500	CallExpression	Z_TYPE ( saved -> user_handler )		3868395	0					
ANR	3868501	Callee	Z_TYPE		3868395	0					
ANR	3868502	Identifier	Z_TYPE		3868395	0					
ANR	3868503	ArgumentList	saved -> user_handler		3868395	1					
ANR	3868504	Argument	saved -> user_handler		3868395	0					
ANR	3868505	PtrMemberAccess	saved -> user_handler		3868395	0					
ANR	3868506	Identifier	saved		3868395	0					
ANR	3868507	Identifier	user_handler		3868395	1					
ANR	3868508	CompoundStatement		8:41:378:378	3868395	1					
ANR	3868509	ExpressionStatement	zval_ptr_dtor ( & saved -> user_handler )	4086:2:122694:122729	3868395	0	True				
ANR	3868510	CallExpression	zval_ptr_dtor ( & saved -> user_handler )		3868395	0					
ANR	3868511	Callee	zval_ptr_dtor		3868395	0					
ANR	3868512	Identifier	zval_ptr_dtor		3868395	0					
ANR	3868513	ArgumentList	& saved -> user_handler		3868395	1					
ANR	3868514	Argument	& saved -> user_handler		3868395	0					
ANR	3868515	UnaryOperationExpression	& saved -> user_handler		3868395	0					
ANR	3868516	UnaryOperator	&		3868395	0					
ANR	3868517	PtrMemberAccess	saved -> user_handler		3868395	1					
ANR	3868518	Identifier	saved		3868395	0					
ANR	3868519	Identifier	user_handler		3868395	1					
ANR	3868520	ExpressionStatement	ZVAL_UNDEF ( & saved -> user_handler )	4088:1:122735:122767	3868395	3	True				
ANR	3868521	CallExpression	ZVAL_UNDEF ( & saved -> user_handler )		3868395	0					
ANR	3868522	Callee	ZVAL_UNDEF		3868395	0					
ANR	3868523	Identifier	ZVAL_UNDEF		3868395	0					
ANR	3868524	ArgumentList	& saved -> user_handler		3868395	1					
ANR	3868525	Argument	& saved -> user_handler		3868395	0					
ANR	3868526	UnaryOperationExpression	& saved -> user_handler		3868395	0					
ANR	3868527	UnaryOperator	&		3868395	0					
ANR	3868528	PtrMemberAccess	saved -> user_handler		3868395	1					
ANR	3868529	Identifier	saved		3868395	0					
ANR	3868530	Identifier	user_handler		3868395	1					
ANR	3868531	ReturnType	ZEND_API void		3868395	1					
ANR	3868532	Identifier	zend_restore_error_handling		3868395	2					
ANR	3868533	ParameterList	zend_error_handling * saved		3868395	3					
ANR	3868534	Parameter	zend_error_handling * saved	4077:42:122273:122298	3868395	0	True				
ANR	3868535	ParameterType	zend_error_handling *		3868395	0					
ANR	3868536	Identifier	saved		3868395	1					
ANR	3868537	CFGEntryNode	ENTRY		3868395		True				
ANR	3868538	CFGExitNode	EXIT		3868395		True				
ANR	3868539	Symbol	EG		3868395						
ANR	3868540	Symbol	NULL		3868395						
ANR	3868541	Symbol	user_error_handler		3868395						
ANR	3868542	Symbol	same_zval		3868395						
ANR	3868543	Symbol	saved		3868395						
ANR	3868544	Symbol	EH_THROW		3868395						
ANR	3868545	Symbol	saved -> exception		3868395						
ANR	3868546	Symbol	Z_TYPE		3868395						
ANR	3868547	Symbol	exception_class		3868395						
ANR	3868548	Symbol	error_handling		3868395						
ANR	3868549	Symbol	& EG		3868395						
ANR	3868550	Symbol	* saved		3868395						
ANR	3868551	Symbol	saved -> user_handler		3868395						
ANR	3868552	Symbol	& saved -> user_handler		3868395						
ANR	3868553	Symbol	IS_UNDEF		3868395						
ANR	3868554	Symbol	saved -> handling		3868395						
ANR	3868555	Function	zend_find_alias_name	4092:0:122782:123157							
ANR	3868556	FunctionDef	"zend_find_alias_name (zend_class_entry * ce , zend_string * name)"		3868555	0					
ANR	3868557	CompoundStatement		4093:0:122876:123157	3868555	0					
ANR	3868558	IdentifierDeclStatement	"zend_trait_alias * alias , * * alias_ptr ;"	4094:1:122879:122915	3868555	0	True				
ANR	3868559	IdentifierDecl	* alias		3868555	0					
ANR	3868560	IdentifierDeclType	zend_trait_alias *		3868555	0					
ANR	3868561	Identifier	alias		3868555	1					
ANR	3868562	IdentifierDecl	* * alias_ptr		3868555	1					
ANR	3868563	IdentifierDeclType	zend_trait_alias * *		3868555	0					
ANR	3868564	Identifier	alias_ptr		3868555	1					
ANR	3868565	IfStatement	if ( ( alias_ptr = ce -> trait_aliases ) )		3868555	1					
ANR	3868566	Condition	alias_ptr = ce -> trait_aliases	4096:5:122923:122953	3868555	0	True				
ANR	3868567	AssignmentExpression	alias_ptr = ce -> trait_aliases		3868555	0		=			
ANR	3868568	Identifier	alias_ptr		3868555	0					
ANR	3868569	PtrMemberAccess	ce -> trait_aliases		3868555	1					
ANR	3868570	Identifier	ce		3868555	0					
ANR	3868571	Identifier	trait_aliases		3868555	1					
ANR	3868572	CompoundStatement		4:38:79:79	3868555	1					
ANR	3868573	ExpressionStatement	alias = * alias_ptr	4097:2:122960:122978	3868555	0	True				
ANR	3868574	AssignmentExpression	alias = * alias_ptr		3868555	0		=			
ANR	3868575	Identifier	alias		3868555	0					
ANR	3868576	UnaryOperationExpression	* alias_ptr		3868555	1					
ANR	3868577	UnaryOperator	*		3868555	0					
ANR	3868578	Identifier	alias_ptr		3868555	1					
ANR	3868579	WhileStatement	while ( alias )		3868555	1					
ANR	3868580	Condition	alias	4098:9:122989:122993	3868555	0	True				
ANR	3868581	Identifier	alias		3868555	0					
ANR	3868582	CompoundStatement		6:16:119:119	3868555	1					
ANR	3868583	IfStatement	"if ( alias -> alias && zend_string_equals_ci ( alias -> alias , name ) )"		3868555	0					
ANR	3868584	Condition	"alias -> alias && zend_string_equals_ci ( alias -> alias , name )"	4099:7:123005:123061	3868555	0	True				
ANR	3868585	AndExpression	"alias -> alias && zend_string_equals_ci ( alias -> alias , name )"		3868555	0		&&			
ANR	3868586	PtrMemberAccess	alias -> alias		3868555	0					
ANR	3868587	Identifier	alias		3868555	0					
ANR	3868588	Identifier	alias		3868555	1					
ANR	3868589	CallExpression	"zend_string_equals_ci ( alias -> alias , name )"		3868555	1					
ANR	3868590	Callee	zend_string_equals_ci		3868555	0					
ANR	3868591	Identifier	zend_string_equals_ci		3868555	0					
ANR	3868592	ArgumentList	alias -> alias		3868555	1					
ANR	3868593	Argument	alias -> alias		3868555	0					
ANR	3868594	PtrMemberAccess	alias -> alias		3868555	0					
ANR	3868595	Identifier	alias		3868555	0					
ANR	3868596	Identifier	alias		3868555	1					
ANR	3868597	Argument	name		3868555	1					
ANR	3868598	Identifier	name		3868555	0					
ANR	3868599	CompoundStatement		7:66:187:187	3868555	1					
ANR	3868600	ReturnStatement	return alias -> alias ;	4100:4:123070:123089	3868555	0	True				
ANR	3868601	PtrMemberAccess	alias -> alias		3868555	0					
ANR	3868602	Identifier	alias		3868555	0					
ANR	3868603	Identifier	alias		3868555	1					
ANR	3868604	ExpressionStatement	alias_ptr ++	4102:3:123099:123110	3868555	1	True				
ANR	3868605	PostIncDecOperationExpression	alias_ptr ++		3868555	0					
ANR	3868606	Identifier	alias_ptr		3868555	0					
ANR	3868607	IncDec	++		3868555	1					
ANR	3868608	ExpressionStatement	alias = * alias_ptr	4103:3:123115:123133	3868555	2	True				
ANR	3868609	AssignmentExpression	alias = * alias_ptr		3868555	0		=			
ANR	3868610	Identifier	alias		3868555	0					
ANR	3868611	UnaryOperationExpression	* alias_ptr		3868555	1					
ANR	3868612	UnaryOperator	*		3868555	0					
ANR	3868613	Identifier	alias_ptr		3868555	1					
ANR	3868614	ReturnStatement	return name ;	4107:1:123144:123155	3868555	2	True				
ANR	3868615	Identifier	name		3868555	0					
ANR	3868616	ReturnType	ZEND_API zend_string *		3868555	1					
ANR	3868617	Identifier	zend_find_alias_name		3868555	2					
ANR	3868618	ParameterList	"zend_class_entry * ce , zend_string * name"		3868555	3					
ANR	3868619	Parameter	zend_class_entry * ce	4092:43:122825:122844	3868555	0	True				
ANR	3868620	ParameterType	zend_class_entry *		3868555	0					
ANR	3868621	Identifier	ce		3868555	1					
ANR	3868622	Parameter	zend_string * name	4092:65:122847:122863	3868555	1	True				
ANR	3868623	ParameterType	zend_string *		3868555	0					
ANR	3868624	Identifier	name		3868555	1					
ANR	3868625	CFGEntryNode	ENTRY		3868555		True				
ANR	3868626	CFGExitNode	EXIT		3868555		True				
ANR	3868627	Symbol	* alias		3868555						
ANR	3868628	Symbol	ce		3868555						
ANR	3868629	Symbol	ce -> trait_aliases		3868555						
ANR	3868630	Symbol	zend_string_equals_ci		3868555						
ANR	3868631	Symbol	name		3868555						
ANR	3868632	Symbol	alias		3868555						
ANR	3868633	Symbol	* ce		3868555						
ANR	3868634	Symbol	alias_ptr		3868555						
ANR	3868635	Symbol	alias -> alias		3868555						
ANR	3868636	Symbol	* alias_ptr		3868555						
ANR	3868637	Function	zend_resolve_method_name	4111:0:123170:124058							
ANR	3868638	FunctionDef	"zend_resolve_method_name (zend_class_entry * ce , zend_function * f)"		3868637	0					
ANR	3868639	CompoundStatement		4112:0:123267:124058	3868637	0					
ANR	3868640	IdentifierDeclStatement	zend_function * func ;	4113:1:123270:123289	3868637	0	True				
ANR	3868641	IdentifierDecl	* func		3868637	0					
ANR	3868642	IdentifierDeclType	zend_function *		3868637	0					
ANR	3868643	Identifier	func		3868637	1					
ANR	3868644	IdentifierDeclStatement	HashTable * function_table ;	4114:1:123292:123317	3868637	1	True				
ANR	3868645	IdentifierDecl	* function_table		3868637	0					
ANR	3868646	IdentifierDeclType	HashTable *		3868637	0					
ANR	3868647	Identifier	function_table		3868637	1					
ANR	3868648	IdentifierDeclStatement	zend_string * name ;	4115:1:123320:123337	3868637	2	True				
ANR	3868649	IdentifierDecl	* name		3868637	0					
ANR	3868650	IdentifierDeclType	zend_string *		3868637	0					
ANR	3868651	Identifier	name		3868637	1					
ANR	3868652	IfStatement	if ( f -> common . type != ZEND_USER_FUNCTION || ( f -> op_array . refcount && * ( f -> op_array . refcount ) < 2 ) || ! f -> common . scope || ! f -> common . scope -> trait_aliases )		3868637	3					
ANR	3868653	Condition	f -> common . type != ZEND_USER_FUNCTION || ( f -> op_array . refcount && * ( f -> op_array . refcount ) < 2 ) || ! f -> common . scope || ! f -> common . scope -> trait_aliases	4117:5:123345:123507	3868637	0	True				
ANR	3868654	OrExpression	f -> common . type != ZEND_USER_FUNCTION || ( f -> op_array . refcount && * ( f -> op_array . refcount ) < 2 ) || ! f -> common . scope || ! f -> common . scope -> trait_aliases		3868637	0		||			
ANR	3868655	EqualityExpression	f -> common . type != ZEND_USER_FUNCTION		3868637	0		!=			
ANR	3868656	MemberAccess	f -> common . type		3868637	0					
ANR	3868657	PtrMemberAccess	f -> common		3868637	0					
ANR	3868658	Identifier	f		3868637	0					
ANR	3868659	Identifier	common		3868637	1					
ANR	3868660	Identifier	type		3868637	1					
ANR	3868661	Identifier	ZEND_USER_FUNCTION		3868637	1					
ANR	3868662	OrExpression	( f -> op_array . refcount && * ( f -> op_array . refcount ) < 2 ) || ! f -> common . scope || ! f -> common . scope -> trait_aliases		3868637	1		||			
ANR	3868663	AndExpression	f -> op_array . refcount && * ( f -> op_array . refcount ) < 2		3868637	0		&&			
ANR	3868664	MemberAccess	f -> op_array . refcount		3868637	0					
ANR	3868665	PtrMemberAccess	f -> op_array		3868637	0					
ANR	3868666	Identifier	f		3868637	0					
ANR	3868667	Identifier	op_array		3868637	1					
ANR	3868668	Identifier	refcount		3868637	1					
ANR	3868669	RelationalExpression	* ( f -> op_array . refcount ) < 2		3868637	1		<			
ANR	3868670	UnaryOperationExpression	* ( f -> op_array . refcount )		3868637	0					
ANR	3868671	UnaryOperator	*		3868637	0					
ANR	3868672	MemberAccess	f -> op_array . refcount		3868637	1					
ANR	3868673	PtrMemberAccess	f -> op_array		3868637	0					
ANR	3868674	Identifier	f		3868637	0					
ANR	3868675	Identifier	op_array		3868637	1					
ANR	3868676	Identifier	refcount		3868637	1					
ANR	3868677	PrimaryExpression	2		3868637	1					
ANR	3868678	OrExpression	! f -> common . scope || ! f -> common . scope -> trait_aliases		3868637	1		||			
ANR	3868679	UnaryOperationExpression	! f -> common . scope		3868637	0					
ANR	3868680	UnaryOperator	!		3868637	0					
ANR	3868681	MemberAccess	f -> common . scope		3868637	1					
ANR	3868682	PtrMemberAccess	f -> common		3868637	0					
ANR	3868683	Identifier	f		3868637	0					
ANR	3868684	Identifier	common		3868637	1					
ANR	3868685	Identifier	scope		3868637	1					
ANR	3868686	UnaryOperationExpression	! f -> common . scope -> trait_aliases		3868637	1					
ANR	3868687	UnaryOperator	!		3868637	0					
ANR	3868688	PtrMemberAccess	f -> common . scope -> trait_aliases		3868637	1					
ANR	3868689	MemberAccess	f -> common . scope		3868637	0					
ANR	3868690	PtrMemberAccess	f -> common		3868637	0					
ANR	3868691	Identifier	f		3868637	0					
ANR	3868692	Identifier	common		3868637	1					
ANR	3868693	Identifier	scope		3868637	1					
ANR	3868694	Identifier	trait_aliases		3868637	1					
ANR	3868695	CompoundStatement		9:38:242:242	3868637	1					
ANR	3868696	ReturnStatement	return f -> common . function_name ;	4121:2:123514:123544	3868637	0	True				
ANR	3868697	MemberAccess	f -> common . function_name		3868637	0					
ANR	3868698	PtrMemberAccess	f -> common		3868637	0					
ANR	3868699	Identifier	f		3868637	0					
ANR	3868700	Identifier	common		3868637	1					
ANR	3868701	Identifier	function_name		3868637	1					
ANR	3868702	ExpressionStatement	function_table = & ce -> function_table	4124:1:123551:123587	3868637	4	True				
ANR	3868703	AssignmentExpression	function_table = & ce -> function_table		3868637	0		=			
ANR	3868704	Identifier	function_table		3868637	0					
ANR	3868705	UnaryOperationExpression	& ce -> function_table		3868637	1					
ANR	3868706	UnaryOperator	&		3868637	0					
ANR	3868707	PtrMemberAccess	ce -> function_table		3868637	1					
ANR	3868708	Identifier	ce		3868637	0					
ANR	3868709	Identifier	function_table		3868637	1					
ANR	3868710	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	4125:1:123590:123618	3868637	5	True				
ANR	3868711	Statement	(	4125:30:123619:123619	3868637	6	True				
ANR	3868712	Statement	function_table	4125:31:123620:123633	3868637	7	True				
ANR	3868713	Statement	","	4125:45:123634:123634	3868637	8	True				
ANR	3868714	Statement	name	4125:47:123636:123639	3868637	9	True				
ANR	3868715	Statement	","	4125:51:123640:123640	3868637	10	True				
ANR	3868716	Statement	func	4125:53:123642:123645	3868637	11	True				
ANR	3868717	Statement	)	4125:57:123646:123646	3868637	12	True				
ANR	3868718	CompoundStatement		14:59:380:380	3868637	13					
ANR	3868719	IfStatement	if ( func == f )		3868637	0					
ANR	3868720	Condition	func == f	4126:6:123656:123664	3868637	0	True				
ANR	3868721	EqualityExpression	func == f		3868637	0		==			
ANR	3868722	Identifier	func		3868637	0					
ANR	3868723	Identifier	f		3868637	1					
ANR	3868724	CompoundStatement		15:17:399:399	3868637	1					
ANR	3868725	IfStatement	if ( ! name )		3868637	0					
ANR	3868726	Condition	! name	4127:7:123676:123680	3868637	0	True				
ANR	3868727	UnaryOperationExpression	! name		3868637	0					
ANR	3868728	UnaryOperator	!		3868637	0					
ANR	3868729	Identifier	name		3868637	1					
ANR	3868730	CompoundStatement		16:14:415:415	3868637	1					
ANR	3868731	ReturnStatement	return f -> common . function_name ;	4128:4:123689:123719	3868637	0	True				
ANR	3868732	MemberAccess	f -> common . function_name		3868637	0					
ANR	3868733	PtrMemberAccess	f -> common		3868637	0					
ANR	3868734	Identifier	f		3868637	0					
ANR	3868735	Identifier	common		3868637	1					
ANR	3868736	Identifier	function_name		3868637	1					
ANR	3868737	IfStatement	"if ( ZSTR_LEN ( name ) == ZSTR_LEN ( f -> common . function_name ) && ! strncasecmp ( ZSTR_VAL ( name ) , ZSTR_VAL ( f -> common . function_name ) , ZSTR_LEN ( f -> common . function_name ) ) )"		3868637	1					
ANR	3868738	Condition	"ZSTR_LEN ( name ) == ZSTR_LEN ( f -> common . function_name ) && ! strncasecmp ( ZSTR_VAL ( name ) , ZSTR_VAL ( f -> common . function_name ) , ZSTR_LEN ( f -> common . function_name ) )"	4130:7:123733:123892	3868637	0	True				
ANR	3868739	AndExpression	"ZSTR_LEN ( name ) == ZSTR_LEN ( f -> common . function_name ) && ! strncasecmp ( ZSTR_VAL ( name ) , ZSTR_VAL ( f -> common . function_name ) , ZSTR_LEN ( f -> common . function_name ) )"		3868637	0		&&			
ANR	3868740	EqualityExpression	ZSTR_LEN ( name ) == ZSTR_LEN ( f -> common . function_name )		3868637	0		==			
ANR	3868741	CallExpression	ZSTR_LEN ( name )		3868637	0					
ANR	3868742	Callee	ZSTR_LEN		3868637	0					
ANR	3868743	Identifier	ZSTR_LEN		3868637	0					
ANR	3868744	ArgumentList	name		3868637	1					
ANR	3868745	Argument	name		3868637	0					
ANR	3868746	Identifier	name		3868637	0					
ANR	3868747	CallExpression	ZSTR_LEN ( f -> common . function_name )		3868637	1					
ANR	3868748	Callee	ZSTR_LEN		3868637	0					
ANR	3868749	Identifier	ZSTR_LEN		3868637	0					
ANR	3868750	ArgumentList	f -> common . function_name		3868637	1					
ANR	3868751	Argument	f -> common . function_name		3868637	0					
ANR	3868752	MemberAccess	f -> common . function_name		3868637	0					
ANR	3868753	PtrMemberAccess	f -> common		3868637	0					
ANR	3868754	Identifier	f		3868637	0					
ANR	3868755	Identifier	common		3868637	1					
ANR	3868756	Identifier	function_name		3868637	1					
ANR	3868757	UnaryOperationExpression	"! strncasecmp ( ZSTR_VAL ( name ) , ZSTR_VAL ( f -> common . function_name ) , ZSTR_LEN ( f -> common . function_name ) )"		3868637	1					
ANR	3868758	UnaryOperator	!		3868637	0					
ANR	3868759	CallExpression	"strncasecmp ( ZSTR_VAL ( name ) , ZSTR_VAL ( f -> common . function_name ) , ZSTR_LEN ( f -> common . function_name ) )"		3868637	1					
ANR	3868760	Callee	strncasecmp		3868637	0					
ANR	3868761	Identifier	strncasecmp		3868637	0					
ANR	3868762	ArgumentList	ZSTR_VAL ( name )		3868637	1					
ANR	3868763	Argument	ZSTR_VAL ( name )		3868637	0					
ANR	3868764	CallExpression	ZSTR_VAL ( name )		3868637	0					
ANR	3868765	Callee	ZSTR_VAL		3868637	0					
ANR	3868766	Identifier	ZSTR_VAL		3868637	0					
ANR	3868767	ArgumentList	name		3868637	1					
ANR	3868768	Argument	name		3868637	0					
ANR	3868769	Identifier	name		3868637	0					
ANR	3868770	Argument	ZSTR_VAL ( f -> common . function_name )		3868637	1					
ANR	3868771	CallExpression	ZSTR_VAL ( f -> common . function_name )		3868637	0					
ANR	3868772	Callee	ZSTR_VAL		3868637	0					
ANR	3868773	Identifier	ZSTR_VAL		3868637	0					
ANR	3868774	ArgumentList	f -> common . function_name		3868637	1					
ANR	3868775	Argument	f -> common . function_name		3868637	0					
ANR	3868776	MemberAccess	f -> common . function_name		3868637	0					
ANR	3868777	PtrMemberAccess	f -> common		3868637	0					
ANR	3868778	Identifier	f		3868637	0					
ANR	3868779	Identifier	common		3868637	1					
ANR	3868780	Identifier	function_name		3868637	1					
ANR	3868781	Argument	ZSTR_LEN ( f -> common . function_name )		3868637	2					
ANR	3868782	CallExpression	ZSTR_LEN ( f -> common . function_name )		3868637	0					
ANR	3868783	Callee	ZSTR_LEN		3868637	0					
ANR	3868784	Identifier	ZSTR_LEN		3868637	0					
ANR	3868785	ArgumentList	f -> common . function_name		3868637	1					
ANR	3868786	Argument	f -> common . function_name		3868637	0					
ANR	3868787	MemberAccess	f -> common . function_name		3868637	0					
ANR	3868788	PtrMemberAccess	f -> common		3868637	0					
ANR	3868789	Identifier	f		3868637	0					
ANR	3868790	Identifier	common		3868637	1					
ANR	3868791	Identifier	function_name		3868637	1					
ANR	3868792	CompoundStatement		20:107:627:627	3868637	1					
ANR	3868793	ReturnStatement	return f -> common . function_name ;	4132:4:123901:123931	3868637	0	True				
ANR	3868794	MemberAccess	f -> common . function_name		3868637	0					
ANR	3868795	PtrMemberAccess	f -> common		3868637	0					
ANR	3868796	Identifier	f		3868637	0					
ANR	3868797	Identifier	common		3868637	1					
ANR	3868798	Identifier	function_name		3868637	1					
ANR	3868799	ReturnStatement	"return zend_find_alias_name ( f -> common . scope , name ) ;"	4134:3:123941:123991	3868637	2	True				
ANR	3868800	CallExpression	"zend_find_alias_name ( f -> common . scope , name )"		3868637	0					
ANR	3868801	Callee	zend_find_alias_name		3868637	0					
ANR	3868802	Identifier	zend_find_alias_name		3868637	0					
ANR	3868803	ArgumentList	f -> common . scope		3868637	1					
ANR	3868804	Argument	f -> common . scope		3868637	0					
ANR	3868805	MemberAccess	f -> common . scope		3868637	0					
ANR	3868806	PtrMemberAccess	f -> common		3868637	0					
ANR	3868807	Identifier	f		3868637	0					
ANR	3868808	Identifier	common		3868637	1					
ANR	3868809	Identifier	scope		3868637	1					
ANR	3868810	Argument	name		3868637	1					
ANR	3868811	Identifier	name		3868637	0					
ANR	3868812	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4136:3:124000:124023	3868637	14	True				
ANR	3868813	CallExpression	ZEND_HASH_FOREACH_END ( )		3868637	0					
ANR	3868814	Callee	ZEND_HASH_FOREACH_END		3868637	0					
ANR	3868815	Identifier	ZEND_HASH_FOREACH_END		3868637	0					
ANR	3868816	ArgumentList			3868637	1					
ANR	3868817	ReturnStatement	return f -> common . function_name ;	4137:1:124026:124056	3868637	15	True				
ANR	3868818	MemberAccess	f -> common . function_name		3868637	0					
ANR	3868819	PtrMemberAccess	f -> common		3868637	0					
ANR	3868820	Identifier	f		3868637	0					
ANR	3868821	Identifier	common		3868637	1					
ANR	3868822	Identifier	function_name		3868637	1					
ANR	3868823	ReturnType	ZEND_API zend_string *		3868637	1					
ANR	3868824	Identifier	zend_resolve_method_name		3868637	2					
ANR	3868825	ParameterList	"zend_class_entry * ce , zend_function * f"		3868637	3					
ANR	3868826	Parameter	zend_class_entry * ce	4111:47:123217:123236	3868637	0	True				
ANR	3868827	ParameterType	zend_class_entry *		3868637	0					
ANR	3868828	Identifier	ce		3868637	1					
ANR	3868829	Parameter	zend_function * f	4111:69:123239:123254	3868637	1	True				
ANR	3868830	ParameterType	zend_function *		3868637	0					
ANR	3868831	Identifier	f		3868637	1					
ANR	3868832	CFGEntryNode	ENTRY		3868637		True				
ANR	3868833	CFGExitNode	EXIT		3868637		True				
ANR	3868834	Symbol	* ( f -> op_array . refcount )		3868637						
ANR	3868835	Symbol	* f -> common . scope		3868637						
ANR	3868836	Symbol	f -> op_array . refcount		3868637						
ANR	3868837	Symbol	strncasecmp		3868637						
ANR	3868838	Symbol	& ce -> function_table		3868637						
ANR	3868839	Symbol	f -> common . function_name		3868637						
ANR	3868840	Symbol	* f -> common		3868637						
ANR	3868841	Symbol	ZEND_USER_FUNCTION		3868637						
ANR	3868842	Symbol	f -> common . scope -> trait_aliases		3868637						
ANR	3868843	Symbol	* f -> op_array . refcount		3868637						
ANR	3868844	Symbol	ce		3868637						
ANR	3868845	Symbol	f -> common		3868637						
ANR	3868846	Symbol	* * f		3868637						
ANR	3868847	Symbol	f		3868637						
ANR	3868848	Symbol	f -> op_array		3868637						
ANR	3868849	Symbol	* f -> op_array		3868637						
ANR	3868850	Symbol	f -> common . type		3868637						
ANR	3868851	Symbol	ZSTR_VAL		3868637						
ANR	3868852	Symbol	zend_find_alias_name		3868637						
ANR	3868853	Symbol	* f		3868637						
ANR	3868854	Symbol	func		3868637						
ANR	3868855	Symbol	f -> common . scope		3868637						
ANR	3868856	Symbol	name		3868637						
ANR	3868857	Symbol	ZSTR_LEN		3868637						
ANR	3868858	Symbol	function_table		3868637						
ANR	3868859	Function	zend_get_object_type	4141:9:124080:124310							
ANR	3868860	FunctionDef	zend_get_object_type (const zend_class_entry * ce)		3868859	0					
ANR	3868861	CompoundStatement		4142:0:124151:124310	3868859	0					
ANR	3868862	IfStatement	if ( ce -> ce_flags & ZEND_ACC_TRAIT )		3868859	0					
ANR	3868863	Condition	ce -> ce_flags & ZEND_ACC_TRAIT	4143:4:124157:124185	3868859	0	True				
ANR	3868864	BitAndExpression	ce -> ce_flags & ZEND_ACC_TRAIT		3868859	0		&			
ANR	3868865	PtrMemberAccess	ce -> ce_flags		3868859	0					
ANR	3868866	Identifier	ce		3868859	0					
ANR	3868867	Identifier	ce_flags		3868859	1					
ANR	3868868	Identifier	ZEND_ACC_TRAIT		3868859	1					
ANR	3868869	CompoundStatement		2:35:36:36	3868859	1					
ANR	3868870	ReturnStatement	"return ""trait"" ;"	4144:2:124192:124206	3868859	0	True				
ANR	3868871	PrimaryExpression	"""trait"""		3868859	0					
ANR	3868872	ElseStatement	else		3868859	0					
ANR	3868873	IfStatement	if ( ce -> ce_flags & ZEND_ACC_INTERFACE )		3868859	0					
ANR	3868874	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE	4145:12:124220:124252	3868859	0	True				
ANR	3868875	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3868859	0		&			
ANR	3868876	PtrMemberAccess	ce -> ce_flags		3868859	0					
ANR	3868877	Identifier	ce		3868859	0					
ANR	3868878	Identifier	ce_flags		3868859	1					
ANR	3868879	Identifier	ZEND_ACC_INTERFACE		3868859	1					
ANR	3868880	CompoundStatement		4:47:103:103	3868859	1					
ANR	3868881	ReturnStatement	"return ""interface"" ;"	4146:2:124259:124277	3868859	0	True				
ANR	3868882	PrimaryExpression	"""interface"""		3868859	0					
ANR	3868883	ElseStatement	else		3868859	0					
ANR	3868884	CompoundStatement		6:8:135:135	3868859	0					
ANR	3868885	ReturnStatement	"return ""class"" ;"	4148:2:124291:124305	3868859	0	True				
ANR	3868886	PrimaryExpression	"""class"""		3868859	0					
ANR	3868887	ReturnType	const char *		3868859	1					
ANR	3868888	Identifier	zend_get_object_type		3868859	2					
ANR	3868889	ParameterList	const zend_class_entry * ce		3868859	3					
ANR	3868890	Parameter	const zend_class_entry * ce	4141:42:124113:124138	3868859	0	True				
ANR	3868891	ParameterType	const zend_class_entry *		3868859	0					
ANR	3868892	Identifier	ce		3868859	1					
ANR	3868893	CFGEntryNode	ENTRY		3868859		True				
ANR	3868894	CFGExitNode	EXIT		3868859		True				
ANR	3868895	Symbol	ce -> ce_flags		3868859						
ANR	3868896	Symbol	ce		3868859						
ANR	3868897	Symbol	* ce		3868859						
ANR	3868898	Symbol	ZEND_ACC_INTERFACE		3868859						
ANR	3868899	Symbol	ZEND_ACC_TRAIT		3868859						
