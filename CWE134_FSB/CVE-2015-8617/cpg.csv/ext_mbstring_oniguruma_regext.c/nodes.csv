command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1206510	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_regext.c								
ANR	1206511	Function	conv_ext0be32	32:0:1608:1787							
ANR	1206512	FunctionDef	"conv_ext0be32 (const UChar * s , const UChar * end , UChar * conv)"		1206511	0					
ANR	1206513	CompoundStatement		34:0:1681:1787	1206511	0					
ANR	1206514	WhileStatement	while ( s < end )		1206511	0					
ANR	1206515	Condition	s < end	35:9:1692:1698	1206511	0	True				
ANR	1206516	RelationalExpression	s < end		1206511	0		<			
ANR	1206517	Identifier	s		1206511	0					
ANR	1206518	Identifier	end		1206511	1					
ANR	1206519	CompoundStatement		2:18:19:19	1206511	1					
ANR	1206520	ExpressionStatement	* conv ++ = '\\0'	36:4:1707:1721	1206511	0	True				
ANR	1206521	AssignmentExpression	* conv ++ = '\\0'		1206511	0		=			
ANR	1206522	UnaryOperationExpression	* conv ++		1206511	0					
ANR	1206523	UnaryOperator	*		1206511	0					
ANR	1206524	PostIncDecOperationExpression	conv ++		1206511	1					
ANR	1206525	Identifier	conv		1206511	0					
ANR	1206526	IncDec	++		1206511	1					
ANR	1206527	PrimaryExpression	'\\0'		1206511	1					
ANR	1206528	ExpressionStatement	* conv ++ = '\\0'	37:4:1727:1741	1206511	1	True				
ANR	1206529	AssignmentExpression	* conv ++ = '\\0'		1206511	0		=			
ANR	1206530	UnaryOperationExpression	* conv ++		1206511	0					
ANR	1206531	UnaryOperator	*		1206511	0					
ANR	1206532	PostIncDecOperationExpression	conv ++		1206511	1					
ANR	1206533	Identifier	conv		1206511	0					
ANR	1206534	IncDec	++		1206511	1					
ANR	1206535	PrimaryExpression	'\\0'		1206511	1					
ANR	1206536	ExpressionStatement	* conv ++ = '\\0'	38:4:1747:1761	1206511	2	True				
ANR	1206537	AssignmentExpression	* conv ++ = '\\0'		1206511	0		=			
ANR	1206538	UnaryOperationExpression	* conv ++		1206511	0					
ANR	1206539	UnaryOperator	*		1206511	0					
ANR	1206540	PostIncDecOperationExpression	conv ++		1206511	1					
ANR	1206541	Identifier	conv		1206511	0					
ANR	1206542	IncDec	++		1206511	1					
ANR	1206543	PrimaryExpression	'\\0'		1206511	1					
ANR	1206544	ExpressionStatement	* conv ++ = * s ++	39:4:1767:1781	1206511	3	True				
ANR	1206545	AssignmentExpression	* conv ++ = * s ++		1206511	0		=			
ANR	1206546	UnaryOperationExpression	* conv ++		1206511	0					
ANR	1206547	UnaryOperator	*		1206511	0					
ANR	1206548	PostIncDecOperationExpression	conv ++		1206511	1					
ANR	1206549	Identifier	conv		1206511	0					
ANR	1206550	IncDec	++		1206511	1					
ANR	1206551	UnaryOperationExpression	* s ++		1206511	1					
ANR	1206552	UnaryOperator	*		1206511	0					
ANR	1206553	PostIncDecOperationExpression	s ++		1206511	1					
ANR	1206554	Identifier	s		1206511	0					
ANR	1206555	IncDec	++		1206511	1					
ANR	1206556	ReturnType	static void		1206511	1					
ANR	1206557	Identifier	conv_ext0be32		1206511	2					
ANR	1206558	ParameterList	"const UChar * s , const UChar * end , UChar * conv"		1206511	3					
ANR	1206559	Parameter	const UChar * s	33:14:1634:1647	1206511	0	True				
ANR	1206560	ParameterType	const UChar *		1206511	0					
ANR	1206561	Identifier	s		1206511	1					
ANR	1206562	Parameter	const UChar * end	33:30:1650:1665	1206511	1	True				
ANR	1206563	ParameterType	const UChar *		1206511	0					
ANR	1206564	Identifier	end		1206511	1					
ANR	1206565	Parameter	UChar * conv	33:48:1668:1678	1206511	2	True				
ANR	1206566	ParameterType	UChar *		1206511	0					
ANR	1206567	Identifier	conv		1206511	1					
ANR	1206568	CFGEntryNode	ENTRY		1206511		True				
ANR	1206569	CFGExitNode	EXIT		1206511		True				
ANR	1206570	Symbol	* conv ++		1206511						
ANR	1206571	Symbol	* s ++		1206511						
ANR	1206572	Symbol	s		1206511						
ANR	1206573	Symbol	end		1206511						
ANR	1206574	Symbol	conv		1206511						
ANR	1206575	Function	conv_ext0le32	43:0:1790:1969							
ANR	1206576	FunctionDef	"conv_ext0le32 (const UChar * s , const UChar * end , UChar * conv)"		1206575	0					
ANR	1206577	CompoundStatement		45:0:1863:1969	1206575	0					
ANR	1206578	WhileStatement	while ( s < end )		1206575	0					
ANR	1206579	Condition	s < end	46:9:1874:1880	1206575	0	True				
ANR	1206580	RelationalExpression	s < end		1206575	0		<			
ANR	1206581	Identifier	s		1206575	0					
ANR	1206582	Identifier	end		1206575	1					
ANR	1206583	CompoundStatement		2:18:19:19	1206575	1					
ANR	1206584	ExpressionStatement	* conv ++ = * s ++	47:4:1889:1903	1206575	0	True				
ANR	1206585	AssignmentExpression	* conv ++ = * s ++		1206575	0		=			
ANR	1206586	UnaryOperationExpression	* conv ++		1206575	0					
ANR	1206587	UnaryOperator	*		1206575	0					
ANR	1206588	PostIncDecOperationExpression	conv ++		1206575	1					
ANR	1206589	Identifier	conv		1206575	0					
ANR	1206590	IncDec	++		1206575	1					
ANR	1206591	UnaryOperationExpression	* s ++		1206575	1					
ANR	1206592	UnaryOperator	*		1206575	0					
ANR	1206593	PostIncDecOperationExpression	s ++		1206575	1					
ANR	1206594	Identifier	s		1206575	0					
ANR	1206595	IncDec	++		1206575	1					
ANR	1206596	ExpressionStatement	* conv ++ = '\\0'	48:4:1909:1923	1206575	1	True				
ANR	1206597	AssignmentExpression	* conv ++ = '\\0'		1206575	0		=			
ANR	1206598	UnaryOperationExpression	* conv ++		1206575	0					
ANR	1206599	UnaryOperator	*		1206575	0					
ANR	1206600	PostIncDecOperationExpression	conv ++		1206575	1					
ANR	1206601	Identifier	conv		1206575	0					
ANR	1206602	IncDec	++		1206575	1					
ANR	1206603	PrimaryExpression	'\\0'		1206575	1					
ANR	1206604	ExpressionStatement	* conv ++ = '\\0'	49:4:1929:1943	1206575	2	True				
ANR	1206605	AssignmentExpression	* conv ++ = '\\0'		1206575	0		=			
ANR	1206606	UnaryOperationExpression	* conv ++		1206575	0					
ANR	1206607	UnaryOperator	*		1206575	0					
ANR	1206608	PostIncDecOperationExpression	conv ++		1206575	1					
ANR	1206609	Identifier	conv		1206575	0					
ANR	1206610	IncDec	++		1206575	1					
ANR	1206611	PrimaryExpression	'\\0'		1206575	1					
ANR	1206612	ExpressionStatement	* conv ++ = '\\0'	50:4:1949:1963	1206575	3	True				
ANR	1206613	AssignmentExpression	* conv ++ = '\\0'		1206575	0		=			
ANR	1206614	UnaryOperationExpression	* conv ++		1206575	0					
ANR	1206615	UnaryOperator	*		1206575	0					
ANR	1206616	PostIncDecOperationExpression	conv ++		1206575	1					
ANR	1206617	Identifier	conv		1206575	0					
ANR	1206618	IncDec	++		1206575	1					
ANR	1206619	PrimaryExpression	'\\0'		1206575	1					
ANR	1206620	ReturnType	static void		1206575	1					
ANR	1206621	Identifier	conv_ext0le32		1206575	2					
ANR	1206622	ParameterList	"const UChar * s , const UChar * end , UChar * conv"		1206575	3					
ANR	1206623	Parameter	const UChar * s	44:14:1816:1829	1206575	0	True				
ANR	1206624	ParameterType	const UChar *		1206575	0					
ANR	1206625	Identifier	s		1206575	1					
ANR	1206626	Parameter	const UChar * end	44:30:1832:1847	1206575	1	True				
ANR	1206627	ParameterType	const UChar *		1206575	0					
ANR	1206628	Identifier	end		1206575	1					
ANR	1206629	Parameter	UChar * conv	44:48:1850:1860	1206575	2	True				
ANR	1206630	ParameterType	UChar *		1206575	0					
ANR	1206631	Identifier	conv		1206575	1					
ANR	1206632	CFGEntryNode	ENTRY		1206575		True				
ANR	1206633	CFGExitNode	EXIT		1206575		True				
ANR	1206634	Symbol	* conv ++		1206575						
ANR	1206635	Symbol	* s ++		1206575						
ANR	1206636	Symbol	s		1206575						
ANR	1206637	Symbol	end		1206575						
ANR	1206638	Symbol	conv		1206575						
ANR	1206639	Function	conv_ext0be	54:0:1972:2109							
ANR	1206640	FunctionDef	"conv_ext0be (const UChar * s , const UChar * end , UChar * conv)"		1206639	0					
ANR	1206641	CompoundStatement		56:0:2043:2109	1206639	0					
ANR	1206642	WhileStatement	while ( s < end )		1206639	0					
ANR	1206643	Condition	s < end	57:9:2054:2060	1206639	0	True				
ANR	1206644	RelationalExpression	s < end		1206639	0		<			
ANR	1206645	Identifier	s		1206639	0					
ANR	1206646	Identifier	end		1206639	1					
ANR	1206647	CompoundStatement		2:18:19:19	1206639	1					
ANR	1206648	ExpressionStatement	* conv ++ = '\\0'	58:4:2069:2083	1206639	0	True				
ANR	1206649	AssignmentExpression	* conv ++ = '\\0'		1206639	0		=			
ANR	1206650	UnaryOperationExpression	* conv ++		1206639	0					
ANR	1206651	UnaryOperator	*		1206639	0					
ANR	1206652	PostIncDecOperationExpression	conv ++		1206639	1					
ANR	1206653	Identifier	conv		1206639	0					
ANR	1206654	IncDec	++		1206639	1					
ANR	1206655	PrimaryExpression	'\\0'		1206639	1					
ANR	1206656	ExpressionStatement	* conv ++ = * s ++	59:4:2089:2103	1206639	1	True				
ANR	1206657	AssignmentExpression	* conv ++ = * s ++		1206639	0		=			
ANR	1206658	UnaryOperationExpression	* conv ++		1206639	0					
ANR	1206659	UnaryOperator	*		1206639	0					
ANR	1206660	PostIncDecOperationExpression	conv ++		1206639	1					
ANR	1206661	Identifier	conv		1206639	0					
ANR	1206662	IncDec	++		1206639	1					
ANR	1206663	UnaryOperationExpression	* s ++		1206639	1					
ANR	1206664	UnaryOperator	*		1206639	0					
ANR	1206665	PostIncDecOperationExpression	s ++		1206639	1					
ANR	1206666	Identifier	s		1206639	0					
ANR	1206667	IncDec	++		1206639	1					
ANR	1206668	ReturnType	static void		1206639	1					
ANR	1206669	Identifier	conv_ext0be		1206639	2					
ANR	1206670	ParameterList	"const UChar * s , const UChar * end , UChar * conv"		1206639	3					
ANR	1206671	Parameter	const UChar * s	55:12:1996:2009	1206639	0	True				
ANR	1206672	ParameterType	const UChar *		1206639	0					
ANR	1206673	Identifier	s		1206639	1					
ANR	1206674	Parameter	const UChar * end	55:28:2012:2027	1206639	1	True				
ANR	1206675	ParameterType	const UChar *		1206639	0					
ANR	1206676	Identifier	end		1206639	1					
ANR	1206677	Parameter	UChar * conv	55:46:2030:2040	1206639	2	True				
ANR	1206678	ParameterType	UChar *		1206639	0					
ANR	1206679	Identifier	conv		1206639	1					
ANR	1206680	CFGEntryNode	ENTRY		1206639		True				
ANR	1206681	CFGExitNode	EXIT		1206639		True				
ANR	1206682	Symbol	* conv ++		1206639						
ANR	1206683	Symbol	* s ++		1206639						
ANR	1206684	Symbol	s		1206639						
ANR	1206685	Symbol	end		1206639						
ANR	1206686	Symbol	conv		1206639						
ANR	1206687	Function	conv_ext0le	63:0:2112:2249							
ANR	1206688	FunctionDef	"conv_ext0le (const UChar * s , const UChar * end , UChar * conv)"		1206687	0					
ANR	1206689	CompoundStatement		65:0:2183:2249	1206687	0					
ANR	1206690	WhileStatement	while ( s < end )		1206687	0					
ANR	1206691	Condition	s < end	66:9:2194:2200	1206687	0	True				
ANR	1206692	RelationalExpression	s < end		1206687	0		<			
ANR	1206693	Identifier	s		1206687	0					
ANR	1206694	Identifier	end		1206687	1					
ANR	1206695	CompoundStatement		2:18:19:19	1206687	1					
ANR	1206696	ExpressionStatement	* conv ++ = * s ++	67:4:2209:2223	1206687	0	True				
ANR	1206697	AssignmentExpression	* conv ++ = * s ++		1206687	0		=			
ANR	1206698	UnaryOperationExpression	* conv ++		1206687	0					
ANR	1206699	UnaryOperator	*		1206687	0					
ANR	1206700	PostIncDecOperationExpression	conv ++		1206687	1					
ANR	1206701	Identifier	conv		1206687	0					
ANR	1206702	IncDec	++		1206687	1					
ANR	1206703	UnaryOperationExpression	* s ++		1206687	1					
ANR	1206704	UnaryOperator	*		1206687	0					
ANR	1206705	PostIncDecOperationExpression	s ++		1206687	1					
ANR	1206706	Identifier	s		1206687	0					
ANR	1206707	IncDec	++		1206687	1					
ANR	1206708	ExpressionStatement	* conv ++ = '\\0'	68:4:2229:2243	1206687	1	True				
ANR	1206709	AssignmentExpression	* conv ++ = '\\0'		1206687	0		=			
ANR	1206710	UnaryOperationExpression	* conv ++		1206687	0					
ANR	1206711	UnaryOperator	*		1206687	0					
ANR	1206712	PostIncDecOperationExpression	conv ++		1206687	1					
ANR	1206713	Identifier	conv		1206687	0					
ANR	1206714	IncDec	++		1206687	1					
ANR	1206715	PrimaryExpression	'\\0'		1206687	1					
ANR	1206716	ReturnType	static void		1206687	1					
ANR	1206717	Identifier	conv_ext0le		1206687	2					
ANR	1206718	ParameterList	"const UChar * s , const UChar * end , UChar * conv"		1206687	3					
ANR	1206719	Parameter	const UChar * s	64:12:2136:2149	1206687	0	True				
ANR	1206720	ParameterType	const UChar *		1206687	0					
ANR	1206721	Identifier	s		1206687	1					
ANR	1206722	Parameter	const UChar * end	64:28:2152:2167	1206687	1	True				
ANR	1206723	ParameterType	const UChar *		1206687	0					
ANR	1206724	Identifier	end		1206687	1					
ANR	1206725	Parameter	UChar * conv	64:46:2170:2180	1206687	2	True				
ANR	1206726	ParameterType	UChar *		1206687	0					
ANR	1206727	Identifier	conv		1206687	1					
ANR	1206728	CFGEntryNode	ENTRY		1206687		True				
ANR	1206729	CFGExitNode	EXIT		1206687		True				
ANR	1206730	Symbol	* conv ++		1206687						
ANR	1206731	Symbol	* s ++		1206687						
ANR	1206732	Symbol	s		1206687						
ANR	1206733	Symbol	end		1206687						
ANR	1206734	Symbol	conv		1206687						
ANR	1206735	Function	conv_swap4bytes	72:0:2252:2445							
ANR	1206736	FunctionDef	"conv_swap4bytes (const UChar * s , const UChar * end , UChar * conv)"		1206735	0					
ANR	1206737	CompoundStatement		74:0:2327:2445	1206735	0					
ANR	1206738	WhileStatement	while ( s < end )		1206735	0					
ANR	1206739	Condition	s < end	75:9:2338:2344	1206735	0	True				
ANR	1206740	RelationalExpression	s < end		1206735	0		<			
ANR	1206741	Identifier	s		1206735	0					
ANR	1206742	Identifier	end		1206735	1					
ANR	1206743	CompoundStatement		2:18:19:19	1206735	1					
ANR	1206744	ExpressionStatement	* conv ++ = s [ 3 ]	76:4:2353:2367	1206735	0	True				
ANR	1206745	AssignmentExpression	* conv ++ = s [ 3 ]		1206735	0		=			
ANR	1206746	UnaryOperationExpression	* conv ++		1206735	0					
ANR	1206747	UnaryOperator	*		1206735	0					
ANR	1206748	PostIncDecOperationExpression	conv ++		1206735	1					
ANR	1206749	Identifier	conv		1206735	0					
ANR	1206750	IncDec	++		1206735	1					
ANR	1206751	ArrayIndexing	s [ 3 ]		1206735	1					
ANR	1206752	Identifier	s		1206735	0					
ANR	1206753	PrimaryExpression	3		1206735	1					
ANR	1206754	ExpressionStatement	* conv ++ = s [ 2 ]	77:4:2373:2387	1206735	1	True				
ANR	1206755	AssignmentExpression	* conv ++ = s [ 2 ]		1206735	0		=			
ANR	1206756	UnaryOperationExpression	* conv ++		1206735	0					
ANR	1206757	UnaryOperator	*		1206735	0					
ANR	1206758	PostIncDecOperationExpression	conv ++		1206735	1					
ANR	1206759	Identifier	conv		1206735	0					
ANR	1206760	IncDec	++		1206735	1					
ANR	1206761	ArrayIndexing	s [ 2 ]		1206735	1					
ANR	1206762	Identifier	s		1206735	0					
ANR	1206763	PrimaryExpression	2		1206735	1					
ANR	1206764	ExpressionStatement	* conv ++ = s [ 1 ]	78:4:2393:2407	1206735	2	True				
ANR	1206765	AssignmentExpression	* conv ++ = s [ 1 ]		1206735	0		=			
ANR	1206766	UnaryOperationExpression	* conv ++		1206735	0					
ANR	1206767	UnaryOperator	*		1206735	0					
ANR	1206768	PostIncDecOperationExpression	conv ++		1206735	1					
ANR	1206769	Identifier	conv		1206735	0					
ANR	1206770	IncDec	++		1206735	1					
ANR	1206771	ArrayIndexing	s [ 1 ]		1206735	1					
ANR	1206772	Identifier	s		1206735	0					
ANR	1206773	PrimaryExpression	1		1206735	1					
ANR	1206774	ExpressionStatement	* conv ++ = s [ 0 ]	79:4:2413:2427	1206735	3	True				
ANR	1206775	AssignmentExpression	* conv ++ = s [ 0 ]		1206735	0		=			
ANR	1206776	UnaryOperationExpression	* conv ++		1206735	0					
ANR	1206777	UnaryOperator	*		1206735	0					
ANR	1206778	PostIncDecOperationExpression	conv ++		1206735	1					
ANR	1206779	Identifier	conv		1206735	0					
ANR	1206780	IncDec	++		1206735	1					
ANR	1206781	ArrayIndexing	s [ 0 ]		1206735	1					
ANR	1206782	Identifier	s		1206735	0					
ANR	1206783	PrimaryExpression	0		1206735	1					
ANR	1206784	ExpressionStatement	s += 4	80:4:2433:2439	1206735	4	True				
ANR	1206785	AssignmentExpression	s += 4		1206735	0		+=			
ANR	1206786	Identifier	s		1206735	0					
ANR	1206787	PrimaryExpression	4		1206735	1					
ANR	1206788	ReturnType	static void		1206735	1					
ANR	1206789	Identifier	conv_swap4bytes		1206735	2					
ANR	1206790	ParameterList	"const UChar * s , const UChar * end , UChar * conv"		1206735	3					
ANR	1206791	Parameter	const UChar * s	73:16:2280:2293	1206735	0	True				
ANR	1206792	ParameterType	const UChar *		1206735	0					
ANR	1206793	Identifier	s		1206735	1					
ANR	1206794	Parameter	const UChar * end	73:32:2296:2311	1206735	1	True				
ANR	1206795	ParameterType	const UChar *		1206735	0					
ANR	1206796	Identifier	end		1206735	1					
ANR	1206797	Parameter	UChar * conv	73:50:2314:2324	1206735	2	True				
ANR	1206798	ParameterType	UChar *		1206735	0					
ANR	1206799	Identifier	conv		1206735	1					
ANR	1206800	CFGEntryNode	ENTRY		1206735		True				
ANR	1206801	CFGExitNode	EXIT		1206735		True				
ANR	1206802	Symbol	* conv ++		1206735						
ANR	1206803	Symbol	s		1206735						
ANR	1206804	Symbol	end		1206735						
ANR	1206805	Symbol	conv		1206735						
ANR	1206806	Symbol	* s		1206735						
ANR	1206807	Function	conv_swap2bytes	84:0:2448:2601							
ANR	1206808	FunctionDef	"conv_swap2bytes (const UChar * s , const UChar * end , UChar * conv)"		1206807	0					
ANR	1206809	CompoundStatement		86:0:2523:2601	1206807	0					
ANR	1206810	WhileStatement	while ( s < end )		1206807	0					
ANR	1206811	Condition	s < end	87:9:2534:2540	1206807	0	True				
ANR	1206812	RelationalExpression	s < end		1206807	0		<			
ANR	1206813	Identifier	s		1206807	0					
ANR	1206814	Identifier	end		1206807	1					
ANR	1206815	CompoundStatement		2:18:19:19	1206807	1					
ANR	1206816	ExpressionStatement	* conv ++ = s [ 1 ]	88:4:2549:2563	1206807	0	True				
ANR	1206817	AssignmentExpression	* conv ++ = s [ 1 ]		1206807	0		=			
ANR	1206818	UnaryOperationExpression	* conv ++		1206807	0					
ANR	1206819	UnaryOperator	*		1206807	0					
ANR	1206820	PostIncDecOperationExpression	conv ++		1206807	1					
ANR	1206821	Identifier	conv		1206807	0					
ANR	1206822	IncDec	++		1206807	1					
ANR	1206823	ArrayIndexing	s [ 1 ]		1206807	1					
ANR	1206824	Identifier	s		1206807	0					
ANR	1206825	PrimaryExpression	1		1206807	1					
ANR	1206826	ExpressionStatement	* conv ++ = s [ 0 ]	89:4:2569:2583	1206807	1	True				
ANR	1206827	AssignmentExpression	* conv ++ = s [ 0 ]		1206807	0		=			
ANR	1206828	UnaryOperationExpression	* conv ++		1206807	0					
ANR	1206829	UnaryOperator	*		1206807	0					
ANR	1206830	PostIncDecOperationExpression	conv ++		1206807	1					
ANR	1206831	Identifier	conv		1206807	0					
ANR	1206832	IncDec	++		1206807	1					
ANR	1206833	ArrayIndexing	s [ 0 ]		1206807	1					
ANR	1206834	Identifier	s		1206807	0					
ANR	1206835	PrimaryExpression	0		1206807	1					
ANR	1206836	ExpressionStatement	s += 2	90:4:2589:2595	1206807	2	True				
ANR	1206837	AssignmentExpression	s += 2		1206807	0		+=			
ANR	1206838	Identifier	s		1206807	0					
ANR	1206839	PrimaryExpression	2		1206807	1					
ANR	1206840	ReturnType	static void		1206807	1					
ANR	1206841	Identifier	conv_swap2bytes		1206807	2					
ANR	1206842	ParameterList	"const UChar * s , const UChar * end , UChar * conv"		1206807	3					
ANR	1206843	Parameter	const UChar * s	85:16:2476:2489	1206807	0	True				
ANR	1206844	ParameterType	const UChar *		1206807	0					
ANR	1206845	Identifier	s		1206807	1					
ANR	1206846	Parameter	const UChar * end	85:32:2492:2507	1206807	1	True				
ANR	1206847	ParameterType	const UChar *		1206807	0					
ANR	1206848	Identifier	end		1206807	1					
ANR	1206849	Parameter	UChar * conv	85:50:2510:2520	1206807	2	True				
ANR	1206850	ParameterType	UChar *		1206807	0					
ANR	1206851	Identifier	conv		1206807	1					
ANR	1206852	CFGEntryNode	ENTRY		1206807		True				
ANR	1206853	CFGExitNode	EXIT		1206807		True				
ANR	1206854	Symbol	* conv ++		1206807						
ANR	1206855	Symbol	s		1206807						
ANR	1206856	Symbol	end		1206807						
ANR	1206857	Symbol	conv		1206807						
ANR	1206858	Symbol	* s		1206807						
ANR	1206859	Function	conv_encoding	94:0:2604:4593							
ANR	1206860	FunctionDef	"conv_encoding (OnigEncoding from , OnigEncoding to , const UChar * s , const UChar * end , UChar * * conv , UChar * * conv_end)"		1206859	0					
ANR	1206861	CompoundStatement		97:0:2745:4593	1206859	0					
ANR	1206862	IdentifierDeclStatement	int len = end - s ;	98:2:2749:2766	1206859	0	True				
ANR	1206863	IdentifierDecl	len = end - s		1206859	0					
ANR	1206864	IdentifierDeclType	int		1206859	0					
ANR	1206865	Identifier	len		1206859	1					
ANR	1206866	AssignmentExpression	len = end - s		1206859	2		=			
ANR	1206867	Identifier	len		1206859	0					
ANR	1206868	AdditiveExpression	end - s		1206859	1		-			
ANR	1206869	Identifier	end		1206859	0					
ANR	1206870	Identifier	s		1206859	1					
ANR	1206871	IfStatement	if ( to == ONIG_ENCODING_UTF16_BE )		1206859	1					
ANR	1206872	Condition	to == ONIG_ENCODING_UTF16_BE	100:6:2775:2802	1206859	0	True				
ANR	1206873	EqualityExpression	to == ONIG_ENCODING_UTF16_BE		1206859	0		==			
ANR	1206874	Identifier	to		1206859	0					
ANR	1206875	Identifier	ONIG_ENCODING_UTF16_BE		1206859	1					
ANR	1206876	CompoundStatement		4:36:59:59	1206859	1					
ANR	1206877	IfStatement	if ( from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1 )		1206859	0					
ANR	1206878	Condition	from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1	101:8:2815:2877	1206859	0	True				
ANR	1206879	OrExpression	from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1		1206859	0		||			
ANR	1206880	EqualityExpression	from == ONIG_ENCODING_ASCII		1206859	0		==			
ANR	1206881	Identifier	from		1206859	0					
ANR	1206882	Identifier	ONIG_ENCODING_ASCII		1206859	1					
ANR	1206883	EqualityExpression	from == ONIG_ENCODING_ISO_8859_1		1206859	1		==			
ANR	1206884	Identifier	from		1206859	0					
ANR	1206885	Identifier	ONIG_ENCODING_ISO_8859_1		1206859	1					
ANR	1206886	CompoundStatement		5:73:134:134	1206859	1					
ANR	1206887	ExpressionStatement	* conv = ( UChar * ) xmalloc ( len * 2 )	102:6:2888:2921	1206859	0	True				
ANR	1206888	AssignmentExpression	* conv = ( UChar * ) xmalloc ( len * 2 )		1206859	0		=			
ANR	1206889	UnaryOperationExpression	* conv		1206859	0					
ANR	1206890	UnaryOperator	*		1206859	0					
ANR	1206891	Identifier	conv		1206859	1					
ANR	1206892	CastExpression	( UChar * ) xmalloc ( len * 2 )		1206859	1					
ANR	1206893	CastTarget	UChar *		1206859	0					
ANR	1206894	CallExpression	xmalloc ( len * 2 )		1206859	1					
ANR	1206895	Callee	xmalloc		1206859	0					
ANR	1206896	Identifier	xmalloc		1206859	0					
ANR	1206897	ArgumentList	len * 2		1206859	1					
ANR	1206898	Argument	len * 2		1206859	0					
ANR	1206899	MultiplicativeExpression	len * 2		1206859	0		*			
ANR	1206900	Identifier	len		1206859	0					
ANR	1206901	PrimaryExpression	2		1206859	1					
ANR	1206902	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * conv )	103:6:2929:2960	1206859	1	True				
ANR	1206903	CallExpression	CHECK_NULL_RETURN_MEMERR ( * conv )		1206859	0					
ANR	1206904	Callee	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1206905	Identifier	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1206906	ArgumentList	* conv		1206859	1					
ANR	1206907	Argument	* conv		1206859	0					
ANR	1206908	UnaryOperationExpression	* conv		1206859	0					
ANR	1206909	UnaryOperator	*		1206859	0					
ANR	1206910	Identifier	conv		1206859	1					
ANR	1206911	ExpressionStatement	* conv_end = * conv + ( len * 2 )	104:6:2968:2997	1206859	2	True				
ANR	1206912	AssignmentExpression	* conv_end = * conv + ( len * 2 )		1206859	0		=			
ANR	1206913	UnaryOperationExpression	* conv_end		1206859	0					
ANR	1206914	UnaryOperator	*		1206859	0					
ANR	1206915	Identifier	conv_end		1206859	1					
ANR	1206916	AdditiveExpression	* conv + ( len * 2 )		1206859	1		+			
ANR	1206917	UnaryOperationExpression	* conv		1206859	0					
ANR	1206918	UnaryOperator	*		1206859	0					
ANR	1206919	Identifier	conv		1206859	1					
ANR	1206920	MultiplicativeExpression	len * 2		1206859	1		*			
ANR	1206921	Identifier	len		1206859	0					
ANR	1206922	PrimaryExpression	2		1206859	1					
ANR	1206923	ExpressionStatement	"conv_ext0be ( s , end , * conv )"	105:6:3005:3031	1206859	3	True				
ANR	1206924	CallExpression	"conv_ext0be ( s , end , * conv )"		1206859	0					
ANR	1206925	Callee	conv_ext0be		1206859	0					
ANR	1206926	Identifier	conv_ext0be		1206859	0					
ANR	1206927	ArgumentList	s		1206859	1					
ANR	1206928	Argument	s		1206859	0					
ANR	1206929	Identifier	s		1206859	0					
ANR	1206930	Argument	end		1206859	1					
ANR	1206931	Identifier	end		1206859	0					
ANR	1206932	Argument	* conv		1206859	2					
ANR	1206933	UnaryOperationExpression	* conv		1206859	0					
ANR	1206934	UnaryOperator	*		1206859	0					
ANR	1206935	Identifier	conv		1206859	1					
ANR	1206936	ReturnStatement	return 0 ;	106:6:3039:3047	1206859	4	True				
ANR	1206937	PrimaryExpression	0		1206859	0					
ANR	1206938	ElseStatement	else		1206859	0					
ANR	1206939	IfStatement	if ( from == ONIG_ENCODING_UTF16_LE )		1206859	0					
ANR	1206940	Condition	from == ONIG_ENCODING_UTF16_LE	108:13:3068:3097	1206859	0	True				
ANR	1206941	EqualityExpression	from == ONIG_ENCODING_UTF16_LE		1206859	0		==			
ANR	1206942	Identifier	from		1206859	0					
ANR	1206943	Identifier	ONIG_ENCODING_UTF16_LE		1206859	1					
ANR	1206944	CompoundStatement		12:45:354:354	1206859	1					
ANR	1206945	Label	swap16 :	109:4:3106:3112	1206859	0	True				
ANR	1206946	Identifier	swap16		1206859	0					
ANR	1206947	ExpressionStatement	* conv = ( UChar * ) xmalloc ( len )	110:6:3120:3149	1206859	1	True				
ANR	1206948	AssignmentExpression	* conv = ( UChar * ) xmalloc ( len )		1206859	0		=			
ANR	1206949	UnaryOperationExpression	* conv		1206859	0					
ANR	1206950	UnaryOperator	*		1206859	0					
ANR	1206951	Identifier	conv		1206859	1					
ANR	1206952	CastExpression	( UChar * ) xmalloc ( len )		1206859	1					
ANR	1206953	CastTarget	UChar *		1206859	0					
ANR	1206954	CallExpression	xmalloc ( len )		1206859	1					
ANR	1206955	Callee	xmalloc		1206859	0					
ANR	1206956	Identifier	xmalloc		1206859	0					
ANR	1206957	ArgumentList	len		1206859	1					
ANR	1206958	Argument	len		1206859	0					
ANR	1206959	Identifier	len		1206859	0					
ANR	1206960	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * conv )	111:6:3157:3188	1206859	2	True				
ANR	1206961	CallExpression	CHECK_NULL_RETURN_MEMERR ( * conv )		1206859	0					
ANR	1206962	Callee	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1206963	Identifier	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1206964	ArgumentList	* conv		1206859	1					
ANR	1206965	Argument	* conv		1206859	0					
ANR	1206966	UnaryOperationExpression	* conv		1206859	0					
ANR	1206967	UnaryOperator	*		1206859	0					
ANR	1206968	Identifier	conv		1206859	1					
ANR	1206969	ExpressionStatement	* conv_end = * conv + len	112:6:3196:3219	1206859	3	True				
ANR	1206970	AssignmentExpression	* conv_end = * conv + len		1206859	0		=			
ANR	1206971	UnaryOperationExpression	* conv_end		1206859	0					
ANR	1206972	UnaryOperator	*		1206859	0					
ANR	1206973	Identifier	conv_end		1206859	1					
ANR	1206974	AdditiveExpression	* conv + len		1206859	1		+			
ANR	1206975	UnaryOperationExpression	* conv		1206859	0					
ANR	1206976	UnaryOperator	*		1206859	0					
ANR	1206977	Identifier	conv		1206859	1					
ANR	1206978	Identifier	len		1206859	1					
ANR	1206979	ExpressionStatement	"conv_swap2bytes ( s , end , * conv )"	113:6:3227:3257	1206859	4	True				
ANR	1206980	CallExpression	"conv_swap2bytes ( s , end , * conv )"		1206859	0					
ANR	1206981	Callee	conv_swap2bytes		1206859	0					
ANR	1206982	Identifier	conv_swap2bytes		1206859	0					
ANR	1206983	ArgumentList	s		1206859	1					
ANR	1206984	Argument	s		1206859	0					
ANR	1206985	Identifier	s		1206859	0					
ANR	1206986	Argument	end		1206859	1					
ANR	1206987	Identifier	end		1206859	0					
ANR	1206988	Argument	* conv		1206859	2					
ANR	1206989	UnaryOperationExpression	* conv		1206859	0					
ANR	1206990	UnaryOperator	*		1206859	0					
ANR	1206991	Identifier	conv		1206859	1					
ANR	1206992	ReturnStatement	return 0 ;	114:6:3265:3273	1206859	5	True				
ANR	1206993	PrimaryExpression	0		1206859	0					
ANR	1206994	ElseStatement	else		1206859	0					
ANR	1206995	IfStatement	if ( to == ONIG_ENCODING_UTF16_LE )		1206859	0					
ANR	1206996	Condition	to == ONIG_ENCODING_UTF16_LE	117:11:3296:3323	1206859	0	True				
ANR	1206997	EqualityExpression	to == ONIG_ENCODING_UTF16_LE		1206859	0		==			
ANR	1206998	Identifier	to		1206859	0					
ANR	1206999	Identifier	ONIG_ENCODING_UTF16_LE		1206859	1					
ANR	1207000	CompoundStatement		21:41:580:580	1206859	1					
ANR	1207001	IfStatement	if ( from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1 )		1206859	0					
ANR	1207002	Condition	from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1	118:8:3336:3398	1206859	0	True				
ANR	1207003	OrExpression	from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1		1206859	0		||			
ANR	1207004	EqualityExpression	from == ONIG_ENCODING_ASCII		1206859	0		==			
ANR	1207005	Identifier	from		1206859	0					
ANR	1207006	Identifier	ONIG_ENCODING_ASCII		1206859	1					
ANR	1207007	EqualityExpression	from == ONIG_ENCODING_ISO_8859_1		1206859	1		==			
ANR	1207008	Identifier	from		1206859	0					
ANR	1207009	Identifier	ONIG_ENCODING_ISO_8859_1		1206859	1					
ANR	1207010	CompoundStatement		22:73:655:655	1206859	1					
ANR	1207011	ExpressionStatement	* conv = ( UChar * ) xmalloc ( len * 2 )	119:6:3409:3442	1206859	0	True				
ANR	1207012	AssignmentExpression	* conv = ( UChar * ) xmalloc ( len * 2 )		1206859	0		=			
ANR	1207013	UnaryOperationExpression	* conv		1206859	0					
ANR	1207014	UnaryOperator	*		1206859	0					
ANR	1207015	Identifier	conv		1206859	1					
ANR	1207016	CastExpression	( UChar * ) xmalloc ( len * 2 )		1206859	1					
ANR	1207017	CastTarget	UChar *		1206859	0					
ANR	1207018	CallExpression	xmalloc ( len * 2 )		1206859	1					
ANR	1207019	Callee	xmalloc		1206859	0					
ANR	1207020	Identifier	xmalloc		1206859	0					
ANR	1207021	ArgumentList	len * 2		1206859	1					
ANR	1207022	Argument	len * 2		1206859	0					
ANR	1207023	MultiplicativeExpression	len * 2		1206859	0		*			
ANR	1207024	Identifier	len		1206859	0					
ANR	1207025	PrimaryExpression	2		1206859	1					
ANR	1207026	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * conv )	120:6:3450:3481	1206859	1	True				
ANR	1207027	CallExpression	CHECK_NULL_RETURN_MEMERR ( * conv )		1206859	0					
ANR	1207028	Callee	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1207029	Identifier	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1207030	ArgumentList	* conv		1206859	1					
ANR	1207031	Argument	* conv		1206859	0					
ANR	1207032	UnaryOperationExpression	* conv		1206859	0					
ANR	1207033	UnaryOperator	*		1206859	0					
ANR	1207034	Identifier	conv		1206859	1					
ANR	1207035	ExpressionStatement	* conv_end = * conv + ( len * 2 )	121:6:3489:3518	1206859	2	True				
ANR	1207036	AssignmentExpression	* conv_end = * conv + ( len * 2 )		1206859	0		=			
ANR	1207037	UnaryOperationExpression	* conv_end		1206859	0					
ANR	1207038	UnaryOperator	*		1206859	0					
ANR	1207039	Identifier	conv_end		1206859	1					
ANR	1207040	AdditiveExpression	* conv + ( len * 2 )		1206859	1		+			
ANR	1207041	UnaryOperationExpression	* conv		1206859	0					
ANR	1207042	UnaryOperator	*		1206859	0					
ANR	1207043	Identifier	conv		1206859	1					
ANR	1207044	MultiplicativeExpression	len * 2		1206859	1		*			
ANR	1207045	Identifier	len		1206859	0					
ANR	1207046	PrimaryExpression	2		1206859	1					
ANR	1207047	ExpressionStatement	"conv_ext0le ( s , end , * conv )"	122:6:3526:3552	1206859	3	True				
ANR	1207048	CallExpression	"conv_ext0le ( s , end , * conv )"		1206859	0					
ANR	1207049	Callee	conv_ext0le		1206859	0					
ANR	1207050	Identifier	conv_ext0le		1206859	0					
ANR	1207051	ArgumentList	s		1206859	1					
ANR	1207052	Argument	s		1206859	0					
ANR	1207053	Identifier	s		1206859	0					
ANR	1207054	Argument	end		1206859	1					
ANR	1207055	Identifier	end		1206859	0					
ANR	1207056	Argument	* conv		1206859	2					
ANR	1207057	UnaryOperationExpression	* conv		1206859	0					
ANR	1207058	UnaryOperator	*		1206859	0					
ANR	1207059	Identifier	conv		1206859	1					
ANR	1207060	ReturnStatement	return 0 ;	123:6:3560:3568	1206859	4	True				
ANR	1207061	PrimaryExpression	0		1206859	0					
ANR	1207062	ElseStatement	else		1206859	0					
ANR	1207063	IfStatement	if ( from == ONIG_ENCODING_UTF16_BE )		1206859	0					
ANR	1207064	Condition	from == ONIG_ENCODING_UTF16_BE	125:13:3589:3618	1206859	0	True				
ANR	1207065	EqualityExpression	from == ONIG_ENCODING_UTF16_BE		1206859	0		==			
ANR	1207066	Identifier	from		1206859	0					
ANR	1207067	Identifier	ONIG_ENCODING_UTF16_BE		1206859	1					
ANR	1207068	CompoundStatement		29:45:875:875	1206859	1					
ANR	1207069	GotoStatement	goto swap16 ;	126:6:3629:3640	1206859	0	True				
ANR	1207070	Identifier	swap16		1206859	0					
ANR	1207071	IfStatement	if ( to == ONIG_ENCODING_UTF32_BE )		1206859	2					
ANR	1207072	Condition	to == ONIG_ENCODING_UTF32_BE	129:6:3658:3685	1206859	0	True				
ANR	1207073	EqualityExpression	to == ONIG_ENCODING_UTF32_BE		1206859	0		==			
ANR	1207074	Identifier	to		1206859	0					
ANR	1207075	Identifier	ONIG_ENCODING_UTF32_BE		1206859	1					
ANR	1207076	CompoundStatement		33:36:942:942	1206859	1					
ANR	1207077	IfStatement	if ( from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1 )		1206859	0					
ANR	1207078	Condition	from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1	130:8:3698:3760	1206859	0	True				
ANR	1207079	OrExpression	from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1		1206859	0		||			
ANR	1207080	EqualityExpression	from == ONIG_ENCODING_ASCII		1206859	0		==			
ANR	1207081	Identifier	from		1206859	0					
ANR	1207082	Identifier	ONIG_ENCODING_ASCII		1206859	1					
ANR	1207083	EqualityExpression	from == ONIG_ENCODING_ISO_8859_1		1206859	1		==			
ANR	1207084	Identifier	from		1206859	0					
ANR	1207085	Identifier	ONIG_ENCODING_ISO_8859_1		1206859	1					
ANR	1207086	CompoundStatement		34:73:1017:1017	1206859	1					
ANR	1207087	ExpressionStatement	* conv = ( UChar * ) xmalloc ( len * 4 )	131:6:3771:3804	1206859	0	True				
ANR	1207088	AssignmentExpression	* conv = ( UChar * ) xmalloc ( len * 4 )		1206859	0		=			
ANR	1207089	UnaryOperationExpression	* conv		1206859	0					
ANR	1207090	UnaryOperator	*		1206859	0					
ANR	1207091	Identifier	conv		1206859	1					
ANR	1207092	CastExpression	( UChar * ) xmalloc ( len * 4 )		1206859	1					
ANR	1207093	CastTarget	UChar *		1206859	0					
ANR	1207094	CallExpression	xmalloc ( len * 4 )		1206859	1					
ANR	1207095	Callee	xmalloc		1206859	0					
ANR	1207096	Identifier	xmalloc		1206859	0					
ANR	1207097	ArgumentList	len * 4		1206859	1					
ANR	1207098	Argument	len * 4		1206859	0					
ANR	1207099	MultiplicativeExpression	len * 4		1206859	0		*			
ANR	1207100	Identifier	len		1206859	0					
ANR	1207101	PrimaryExpression	4		1206859	1					
ANR	1207102	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * conv )	132:6:3812:3843	1206859	1	True				
ANR	1207103	CallExpression	CHECK_NULL_RETURN_MEMERR ( * conv )		1206859	0					
ANR	1207104	Callee	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1207105	Identifier	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1207106	ArgumentList	* conv		1206859	1					
ANR	1207107	Argument	* conv		1206859	0					
ANR	1207108	UnaryOperationExpression	* conv		1206859	0					
ANR	1207109	UnaryOperator	*		1206859	0					
ANR	1207110	Identifier	conv		1206859	1					
ANR	1207111	ExpressionStatement	* conv_end = * conv + ( len * 4 )	133:6:3851:3880	1206859	2	True				
ANR	1207112	AssignmentExpression	* conv_end = * conv + ( len * 4 )		1206859	0		=			
ANR	1207113	UnaryOperationExpression	* conv_end		1206859	0					
ANR	1207114	UnaryOperator	*		1206859	0					
ANR	1207115	Identifier	conv_end		1206859	1					
ANR	1207116	AdditiveExpression	* conv + ( len * 4 )		1206859	1		+			
ANR	1207117	UnaryOperationExpression	* conv		1206859	0					
ANR	1207118	UnaryOperator	*		1206859	0					
ANR	1207119	Identifier	conv		1206859	1					
ANR	1207120	MultiplicativeExpression	len * 4		1206859	1		*			
ANR	1207121	Identifier	len		1206859	0					
ANR	1207122	PrimaryExpression	4		1206859	1					
ANR	1207123	ExpressionStatement	"conv_ext0be32 ( s , end , * conv )"	134:6:3888:3916	1206859	3	True				
ANR	1207124	CallExpression	"conv_ext0be32 ( s , end , * conv )"		1206859	0					
ANR	1207125	Callee	conv_ext0be32		1206859	0					
ANR	1207126	Identifier	conv_ext0be32		1206859	0					
ANR	1207127	ArgumentList	s		1206859	1					
ANR	1207128	Argument	s		1206859	0					
ANR	1207129	Identifier	s		1206859	0					
ANR	1207130	Argument	end		1206859	1					
ANR	1207131	Identifier	end		1206859	0					
ANR	1207132	Argument	* conv		1206859	2					
ANR	1207133	UnaryOperationExpression	* conv		1206859	0					
ANR	1207134	UnaryOperator	*		1206859	0					
ANR	1207135	Identifier	conv		1206859	1					
ANR	1207136	ReturnStatement	return 0 ;	135:6:3924:3932	1206859	4	True				
ANR	1207137	PrimaryExpression	0		1206859	0					
ANR	1207138	ElseStatement	else		1206859	0					
ANR	1207139	IfStatement	if ( from == ONIG_ENCODING_UTF32_LE )		1206859	0					
ANR	1207140	Condition	from == ONIG_ENCODING_UTF32_LE	137:13:3953:3982	1206859	0	True				
ANR	1207141	EqualityExpression	from == ONIG_ENCODING_UTF32_LE		1206859	0		==			
ANR	1207142	Identifier	from		1206859	0					
ANR	1207143	Identifier	ONIG_ENCODING_UTF32_LE		1206859	1					
ANR	1207144	CompoundStatement		41:45:1239:1239	1206859	1					
ANR	1207145	Label	swap32 :	138:4:3991:3997	1206859	0	True				
ANR	1207146	Identifier	swap32		1206859	0					
ANR	1207147	ExpressionStatement	* conv = ( UChar * ) xmalloc ( len )	139:6:4005:4034	1206859	1	True				
ANR	1207148	AssignmentExpression	* conv = ( UChar * ) xmalloc ( len )		1206859	0		=			
ANR	1207149	UnaryOperationExpression	* conv		1206859	0					
ANR	1207150	UnaryOperator	*		1206859	0					
ANR	1207151	Identifier	conv		1206859	1					
ANR	1207152	CastExpression	( UChar * ) xmalloc ( len )		1206859	1					
ANR	1207153	CastTarget	UChar *		1206859	0					
ANR	1207154	CallExpression	xmalloc ( len )		1206859	1					
ANR	1207155	Callee	xmalloc		1206859	0					
ANR	1207156	Identifier	xmalloc		1206859	0					
ANR	1207157	ArgumentList	len		1206859	1					
ANR	1207158	Argument	len		1206859	0					
ANR	1207159	Identifier	len		1206859	0					
ANR	1207160	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * conv )	140:6:4042:4073	1206859	2	True				
ANR	1207161	CallExpression	CHECK_NULL_RETURN_MEMERR ( * conv )		1206859	0					
ANR	1207162	Callee	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1207163	Identifier	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1207164	ArgumentList	* conv		1206859	1					
ANR	1207165	Argument	* conv		1206859	0					
ANR	1207166	UnaryOperationExpression	* conv		1206859	0					
ANR	1207167	UnaryOperator	*		1206859	0					
ANR	1207168	Identifier	conv		1206859	1					
ANR	1207169	ExpressionStatement	* conv_end = * conv + len	141:6:4081:4104	1206859	3	True				
ANR	1207170	AssignmentExpression	* conv_end = * conv + len		1206859	0		=			
ANR	1207171	UnaryOperationExpression	* conv_end		1206859	0					
ANR	1207172	UnaryOperator	*		1206859	0					
ANR	1207173	Identifier	conv_end		1206859	1					
ANR	1207174	AdditiveExpression	* conv + len		1206859	1		+			
ANR	1207175	UnaryOperationExpression	* conv		1206859	0					
ANR	1207176	UnaryOperator	*		1206859	0					
ANR	1207177	Identifier	conv		1206859	1					
ANR	1207178	Identifier	len		1206859	1					
ANR	1207179	ExpressionStatement	"conv_swap4bytes ( s , end , * conv )"	142:6:4112:4142	1206859	4	True				
ANR	1207180	CallExpression	"conv_swap4bytes ( s , end , * conv )"		1206859	0					
ANR	1207181	Callee	conv_swap4bytes		1206859	0					
ANR	1207182	Identifier	conv_swap4bytes		1206859	0					
ANR	1207183	ArgumentList	s		1206859	1					
ANR	1207184	Argument	s		1206859	0					
ANR	1207185	Identifier	s		1206859	0					
ANR	1207186	Argument	end		1206859	1					
ANR	1207187	Identifier	end		1206859	0					
ANR	1207188	Argument	* conv		1206859	2					
ANR	1207189	UnaryOperationExpression	* conv		1206859	0					
ANR	1207190	UnaryOperator	*		1206859	0					
ANR	1207191	Identifier	conv		1206859	1					
ANR	1207192	ReturnStatement	return 0 ;	143:6:4150:4158	1206859	5	True				
ANR	1207193	PrimaryExpression	0		1206859	0					
ANR	1207194	ElseStatement	else		1206859	0					
ANR	1207195	IfStatement	if ( to == ONIG_ENCODING_UTF32_LE )		1206859	0					
ANR	1207196	Condition	to == ONIG_ENCODING_UTF32_LE	146:11:4181:4208	1206859	0	True				
ANR	1207197	EqualityExpression	to == ONIG_ENCODING_UTF32_LE		1206859	0		==			
ANR	1207198	Identifier	to		1206859	0					
ANR	1207199	Identifier	ONIG_ENCODING_UTF32_LE		1206859	1					
ANR	1207200	CompoundStatement		50:41:1465:1465	1206859	1					
ANR	1207201	IfStatement	if ( from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1 )		1206859	0					
ANR	1207202	Condition	from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1	147:8:4221:4283	1206859	0	True				
ANR	1207203	OrExpression	from == ONIG_ENCODING_ASCII || from == ONIG_ENCODING_ISO_8859_1		1206859	0		||			
ANR	1207204	EqualityExpression	from == ONIG_ENCODING_ASCII		1206859	0		==			
ANR	1207205	Identifier	from		1206859	0					
ANR	1207206	Identifier	ONIG_ENCODING_ASCII		1206859	1					
ANR	1207207	EqualityExpression	from == ONIG_ENCODING_ISO_8859_1		1206859	1		==			
ANR	1207208	Identifier	from		1206859	0					
ANR	1207209	Identifier	ONIG_ENCODING_ISO_8859_1		1206859	1					
ANR	1207210	CompoundStatement		51:73:1540:1540	1206859	1					
ANR	1207211	ExpressionStatement	* conv = ( UChar * ) xmalloc ( len * 4 )	148:6:4294:4327	1206859	0	True				
ANR	1207212	AssignmentExpression	* conv = ( UChar * ) xmalloc ( len * 4 )		1206859	0		=			
ANR	1207213	UnaryOperationExpression	* conv		1206859	0					
ANR	1207214	UnaryOperator	*		1206859	0					
ANR	1207215	Identifier	conv		1206859	1					
ANR	1207216	CastExpression	( UChar * ) xmalloc ( len * 4 )		1206859	1					
ANR	1207217	CastTarget	UChar *		1206859	0					
ANR	1207218	CallExpression	xmalloc ( len * 4 )		1206859	1					
ANR	1207219	Callee	xmalloc		1206859	0					
ANR	1207220	Identifier	xmalloc		1206859	0					
ANR	1207221	ArgumentList	len * 4		1206859	1					
ANR	1207222	Argument	len * 4		1206859	0					
ANR	1207223	MultiplicativeExpression	len * 4		1206859	0		*			
ANR	1207224	Identifier	len		1206859	0					
ANR	1207225	PrimaryExpression	4		1206859	1					
ANR	1207226	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * conv )	149:6:4335:4366	1206859	1	True				
ANR	1207227	CallExpression	CHECK_NULL_RETURN_MEMERR ( * conv )		1206859	0					
ANR	1207228	Callee	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1207229	Identifier	CHECK_NULL_RETURN_MEMERR		1206859	0					
ANR	1207230	ArgumentList	* conv		1206859	1					
ANR	1207231	Argument	* conv		1206859	0					
ANR	1207232	UnaryOperationExpression	* conv		1206859	0					
ANR	1207233	UnaryOperator	*		1206859	0					
ANR	1207234	Identifier	conv		1206859	1					
ANR	1207235	ExpressionStatement	* conv_end = * conv + ( len * 4 )	150:6:4374:4403	1206859	2	True				
ANR	1207236	AssignmentExpression	* conv_end = * conv + ( len * 4 )		1206859	0		=			
ANR	1207237	UnaryOperationExpression	* conv_end		1206859	0					
ANR	1207238	UnaryOperator	*		1206859	0					
ANR	1207239	Identifier	conv_end		1206859	1					
ANR	1207240	AdditiveExpression	* conv + ( len * 4 )		1206859	1		+			
ANR	1207241	UnaryOperationExpression	* conv		1206859	0					
ANR	1207242	UnaryOperator	*		1206859	0					
ANR	1207243	Identifier	conv		1206859	1					
ANR	1207244	MultiplicativeExpression	len * 4		1206859	1		*			
ANR	1207245	Identifier	len		1206859	0					
ANR	1207246	PrimaryExpression	4		1206859	1					
ANR	1207247	ExpressionStatement	"conv_ext0le32 ( s , end , * conv )"	151:6:4411:4439	1206859	3	True				
ANR	1207248	CallExpression	"conv_ext0le32 ( s , end , * conv )"		1206859	0					
ANR	1207249	Callee	conv_ext0le32		1206859	0					
ANR	1207250	Identifier	conv_ext0le32		1206859	0					
ANR	1207251	ArgumentList	s		1206859	1					
ANR	1207252	Argument	s		1206859	0					
ANR	1207253	Identifier	s		1206859	0					
ANR	1207254	Argument	end		1206859	1					
ANR	1207255	Identifier	end		1206859	0					
ANR	1207256	Argument	* conv		1206859	2					
ANR	1207257	UnaryOperationExpression	* conv		1206859	0					
ANR	1207258	UnaryOperator	*		1206859	0					
ANR	1207259	Identifier	conv		1206859	1					
ANR	1207260	ReturnStatement	return 0 ;	152:6:4447:4455	1206859	4	True				
ANR	1207261	PrimaryExpression	0		1206859	0					
ANR	1207262	ElseStatement	else		1206859	0					
ANR	1207263	IfStatement	if ( from == ONIG_ENCODING_UTF32_BE )		1206859	0					
ANR	1207264	Condition	from == ONIG_ENCODING_UTF32_BE	154:13:4476:4505	1206859	0	True				
ANR	1207265	EqualityExpression	from == ONIG_ENCODING_UTF32_BE		1206859	0		==			
ANR	1207266	Identifier	from		1206859	0					
ANR	1207267	Identifier	ONIG_ENCODING_UTF32_BE		1206859	1					
ANR	1207268	CompoundStatement		58:45:1762:1762	1206859	1					
ANR	1207269	GotoStatement	goto swap32 ;	155:6:4516:4527	1206859	0	True				
ANR	1207270	Identifier	swap32		1206859	0					
ANR	1207271	ReturnStatement	return ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION ;	159:2:4542:4591	1206859	3	True				
ANR	1207272	Identifier	ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION		1206859	0					
ANR	1207273	ReturnType	static int		1206859	1					
ANR	1207274	Identifier	conv_encoding		1206859	2					
ANR	1207275	ParameterList	"OnigEncoding from , OnigEncoding to , const UChar * s , const UChar * end , UChar * * conv , UChar * * conv_end"		1206859	3					
ANR	1207276	Parameter	OnigEncoding from	95:14:2629:2645	1206859	0	True				
ANR	1207277	ParameterType	OnigEncoding		1206859	0					
ANR	1207278	Identifier	from		1206859	1					
ANR	1207279	Parameter	OnigEncoding to	95:33:2648:2662	1206859	1	True				
ANR	1207280	ParameterType	OnigEncoding		1206859	0					
ANR	1207281	Identifier	to		1206859	1					
ANR	1207282	Parameter	const UChar * s	95:50:2665:2678	1206859	2	True				
ANR	1207283	ParameterType	const UChar *		1206859	0					
ANR	1207284	Identifier	s		1206859	1					
ANR	1207285	Parameter	const UChar * end	95:66:2681:2696	1206859	3	True				
ANR	1207286	ParameterType	const UChar *		1206859	0					
ANR	1207287	Identifier	end		1206859	1					
ANR	1207288	Parameter	UChar * * conv	96:14:2713:2724	1206859	4	True				
ANR	1207289	ParameterType	UChar * *		1206859	0					
ANR	1207290	Identifier	conv		1206859	1					
ANR	1207291	Parameter	UChar * * conv_end	96:28:2727:2742	1206859	5	True				
ANR	1207292	ParameterType	UChar * *		1206859	0					
ANR	1207293	Identifier	conv_end		1206859	1					
ANR	1207294	CFGEntryNode	ENTRY		1206859		True				
ANR	1207295	CFGExitNode	EXIT		1206859		True				
ANR	1207296	Symbol	* conv_end		1206859						
ANR	1207297	Symbol	ONIG_ENCODING_UTF16_LE		1206859						
ANR	1207298	Symbol	ONIG_ENCODING_UTF32_LE		1206859						
ANR	1207299	Symbol	s		1206859						
ANR	1207300	Symbol	len		1206859						
ANR	1207301	Symbol	xmalloc		1206859						
ANR	1207302	Symbol	ONIG_ENCODING_UTF32_BE		1206859						
ANR	1207303	Symbol	ONIG_ENCODING_ASCII		1206859						
ANR	1207304	Symbol	ONIG_ENCODING_ISO_8859_1		1206859						
ANR	1207305	Symbol	* conv		1206859						
ANR	1207306	Symbol	conv_end		1206859						
ANR	1207307	Symbol	ONIG_ENCODING_UTF16_BE		1206859						
ANR	1207308	Symbol	ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION		1206859						
ANR	1207309	Symbol	from		1206859						
ANR	1207310	Symbol	end		1206859						
ANR	1207311	Symbol	conv		1206859						
ANR	1207312	Symbol	to		1206859						
ANR	1207313	Function	onig_new_deluxe	162:0:4596:5500							
ANR	1207314	FunctionDef	"onig_new_deluxe (regex_t * * reg , const UChar * pattern , const UChar * pattern_end , OnigCompileInfo * ci , OnigErrorInfo * einfo)"		1207313	0					
ANR	1207315	CompoundStatement		165:0:4745:5500	1207313	0					
ANR	1207316	IdentifierDeclStatement	int r ;	166:2:4749:4754	1207313	0	True				
ANR	1207317	IdentifierDecl	r		1207313	0					
ANR	1207318	IdentifierDeclType	int		1207313	0					
ANR	1207319	Identifier	r		1207313	1					
ANR	1207320	IdentifierDeclStatement	"UChar * cpat , * cpat_end ;"	167:2:4758:4780	1207313	1	True				
ANR	1207321	IdentifierDecl	* cpat		1207313	0					
ANR	1207322	IdentifierDeclType	UChar *		1207313	0					
ANR	1207323	Identifier	cpat		1207313	1					
ANR	1207324	IdentifierDecl	* cpat_end		1207313	1					
ANR	1207325	IdentifierDeclType	UChar *		1207313	0					
ANR	1207326	Identifier	cpat_end		1207313	1					
ANR	1207327	IfStatement	if ( IS_NOT_NULL ( einfo ) )		1207313	2					
ANR	1207328	Condition	IS_NOT_NULL ( einfo )	169:6:4789:4806	1207313	0	True				
ANR	1207329	CallExpression	IS_NOT_NULL ( einfo )		1207313	0					
ANR	1207330	Callee	IS_NOT_NULL		1207313	0					
ANR	1207331	Identifier	IS_NOT_NULL		1207313	0					
ANR	1207332	ArgumentList	einfo		1207313	1					
ANR	1207333	Argument	einfo		1207313	0					
ANR	1207334	Identifier	einfo		1207313	0					
ANR	1207335	ExpressionStatement	einfo -> par = ( UChar * ) NULL	169:26:4809:4835	1207313	1	True				
ANR	1207336	AssignmentExpression	einfo -> par = ( UChar * ) NULL		1207313	0		=			
ANR	1207337	PtrMemberAccess	einfo -> par		1207313	0					
ANR	1207338	Identifier	einfo		1207313	0					
ANR	1207339	Identifier	par		1207313	1					
ANR	1207340	CastExpression	( UChar * ) NULL		1207313	1					
ANR	1207341	CastTarget	UChar *		1207313	0					
ANR	1207342	Identifier	NULL		1207313	1					
ANR	1207343	IfStatement	if ( ci -> pattern_enc != ci -> target_enc )		1207313	3					
ANR	1207344	Condition	ci -> pattern_enc != ci -> target_enc	171:6:4844:4876	1207313	0	True				
ANR	1207345	EqualityExpression	ci -> pattern_enc != ci -> target_enc		1207313	0		!=			
ANR	1207346	PtrMemberAccess	ci -> pattern_enc		1207313	0					
ANR	1207347	Identifier	ci		1207313	0					
ANR	1207348	Identifier	pattern_enc		1207313	1					
ANR	1207349	PtrMemberAccess	ci -> target_enc		1207313	1					
ANR	1207350	Identifier	ci		1207313	0					
ANR	1207351	Identifier	target_enc		1207313	1					
ANR	1207352	CompoundStatement		7:41:133:133	1207313	1					
ANR	1207353	ExpressionStatement	"r = conv_encoding ( ci -> pattern_enc , ci -> target_enc , pattern , pattern_end , & cpat , & cpat_end )"	172:4:4885:4997	1207313	0	True				
ANR	1207354	AssignmentExpression	"r = conv_encoding ( ci -> pattern_enc , ci -> target_enc , pattern , pattern_end , & cpat , & cpat_end )"		1207313	0		=			
ANR	1207355	Identifier	r		1207313	0					
ANR	1207356	CallExpression	"conv_encoding ( ci -> pattern_enc , ci -> target_enc , pattern , pattern_end , & cpat , & cpat_end )"		1207313	1					
ANR	1207357	Callee	conv_encoding		1207313	0					
ANR	1207358	Identifier	conv_encoding		1207313	0					
ANR	1207359	ArgumentList	ci -> pattern_enc		1207313	1					
ANR	1207360	Argument	ci -> pattern_enc		1207313	0					
ANR	1207361	PtrMemberAccess	ci -> pattern_enc		1207313	0					
ANR	1207362	Identifier	ci		1207313	0					
ANR	1207363	Identifier	pattern_enc		1207313	1					
ANR	1207364	Argument	ci -> target_enc		1207313	1					
ANR	1207365	PtrMemberAccess	ci -> target_enc		1207313	0					
ANR	1207366	Identifier	ci		1207313	0					
ANR	1207367	Identifier	target_enc		1207313	1					
ANR	1207368	Argument	pattern		1207313	2					
ANR	1207369	Identifier	pattern		1207313	0					
ANR	1207370	Argument	pattern_end		1207313	3					
ANR	1207371	Identifier	pattern_end		1207313	0					
ANR	1207372	Argument	& cpat		1207313	4					
ANR	1207373	UnaryOperationExpression	& cpat		1207313	0					
ANR	1207374	UnaryOperator	&		1207313	0					
ANR	1207375	Identifier	cpat		1207313	1					
ANR	1207376	Argument	& cpat_end		1207313	5					
ANR	1207377	UnaryOperationExpression	& cpat_end		1207313	0					
ANR	1207378	UnaryOperator	&		1207313	0					
ANR	1207379	Identifier	cpat_end		1207313	1					
ANR	1207380	IfStatement	if ( r )		1207313	1					
ANR	1207381	Condition	r	174:8:5007:5007	1207313	0	True				
ANR	1207382	Identifier	r		1207313	0					
ANR	1207383	ReturnStatement	return r ;	174:11:5010:5018	1207313	1	True				
ANR	1207384	Identifier	r		1207313	0					
ANR	1207385	ElseStatement	else		1207313	0					
ANR	1207386	CompoundStatement		12:7:285:285	1207313	0					
ANR	1207387	ExpressionStatement	cpat = ( UChar * ) pattern	177:4:5037:5064	1207313	0	True				
ANR	1207388	AssignmentExpression	cpat = ( UChar * ) pattern		1207313	0		=			
ANR	1207389	Identifier	cpat		1207313	0					
ANR	1207390	CastExpression	( UChar * ) pattern		1207313	1					
ANR	1207391	CastTarget	UChar *		1207313	0					
ANR	1207392	Identifier	pattern		1207313	1					
ANR	1207393	ExpressionStatement	cpat_end = ( UChar * ) pattern_end	178:4:5070:5101	1207313	1	True				
ANR	1207394	AssignmentExpression	cpat_end = ( UChar * ) pattern_end		1207313	0		=			
ANR	1207395	Identifier	cpat_end		1207313	0					
ANR	1207396	CastExpression	( UChar * ) pattern_end		1207313	1					
ANR	1207397	CastTarget	UChar *		1207313	0					
ANR	1207398	Identifier	pattern_end		1207313	1					
ANR	1207399	ExpressionStatement	* reg = ( regex_t * ) xmalloc ( sizeof ( regex_t ) )	181:2:5110:5152	1207313	4	True				
ANR	1207400	AssignmentExpression	* reg = ( regex_t * ) xmalloc ( sizeof ( regex_t ) )		1207313	0		=			
ANR	1207401	UnaryOperationExpression	* reg		1207313	0					
ANR	1207402	UnaryOperator	*		1207313	0					
ANR	1207403	Identifier	reg		1207313	1					
ANR	1207404	CastExpression	( regex_t * ) xmalloc ( sizeof ( regex_t ) )		1207313	1					
ANR	1207405	CastTarget	regex_t *		1207313	0					
ANR	1207406	CallExpression	xmalloc ( sizeof ( regex_t ) )		1207313	1					
ANR	1207407	Callee	xmalloc		1207313	0					
ANR	1207408	Identifier	xmalloc		1207313	0					
ANR	1207409	ArgumentList	sizeof ( regex_t )		1207313	1					
ANR	1207410	Argument	sizeof ( regex_t )		1207313	0					
ANR	1207411	SizeofExpression	sizeof ( regex_t )		1207313	0					
ANR	1207412	Sizeof	sizeof		1207313	0					
ANR	1207413	SizeofOperand	regex_t		1207313	1					
ANR	1207414	IfStatement	if ( IS_NULL ( * reg ) )		1207313	5					
ANR	1207415	Condition	IS_NULL ( * reg )	182:6:5160:5172	1207313	0	True				
ANR	1207416	CallExpression	IS_NULL ( * reg )		1207313	0					
ANR	1207417	Callee	IS_NULL		1207313	0					
ANR	1207418	Identifier	IS_NULL		1207313	0					
ANR	1207419	ArgumentList	* reg		1207313	1					
ANR	1207420	Argument	* reg		1207313	0					
ANR	1207421	UnaryOperationExpression	* reg		1207313	0					
ANR	1207422	UnaryOperator	*		1207313	0					
ANR	1207423	Identifier	reg		1207313	1					
ANR	1207424	CompoundStatement		18:21:429:429	1207313	1					
ANR	1207425	ExpressionStatement	r = ONIGERR_MEMORY	183:4:5181:5199	1207313	0	True				
ANR	1207426	AssignmentExpression	r = ONIGERR_MEMORY		1207313	0		=			
ANR	1207427	Identifier	r		1207313	0					
ANR	1207428	Identifier	ONIGERR_MEMORY		1207313	1					
ANR	1207429	GotoStatement	goto err2 ;	184:4:5205:5214	1207313	1	True				
ANR	1207430	Identifier	err2		1207313	0					
ANR	1207431	ExpressionStatement	"r = onig_reg_init ( * reg , ci -> option , ci -> case_fold_flag , ci -> target_enc , ci -> syntax )"	187:2:5223:5312	1207313	6	True				
ANR	1207432	AssignmentExpression	"r = onig_reg_init ( * reg , ci -> option , ci -> case_fold_flag , ci -> target_enc , ci -> syntax )"		1207313	0		=			
ANR	1207433	Identifier	r		1207313	0					
ANR	1207434	CallExpression	"onig_reg_init ( * reg , ci -> option , ci -> case_fold_flag , ci -> target_enc , ci -> syntax )"		1207313	1					
ANR	1207435	Callee	onig_reg_init		1207313	0					
ANR	1207436	Identifier	onig_reg_init		1207313	0					
ANR	1207437	ArgumentList	* reg		1207313	1					
ANR	1207438	Argument	* reg		1207313	0					
ANR	1207439	UnaryOperationExpression	* reg		1207313	0					
ANR	1207440	UnaryOperator	*		1207313	0					
ANR	1207441	Identifier	reg		1207313	1					
ANR	1207442	Argument	ci -> option		1207313	1					
ANR	1207443	PtrMemberAccess	ci -> option		1207313	0					
ANR	1207444	Identifier	ci		1207313	0					
ANR	1207445	Identifier	option		1207313	1					
ANR	1207446	Argument	ci -> case_fold_flag		1207313	2					
ANR	1207447	PtrMemberAccess	ci -> case_fold_flag		1207313	0					
ANR	1207448	Identifier	ci		1207313	0					
ANR	1207449	Identifier	case_fold_flag		1207313	1					
ANR	1207450	Argument	ci -> target_enc		1207313	3					
ANR	1207451	PtrMemberAccess	ci -> target_enc		1207313	0					
ANR	1207452	Identifier	ci		1207313	0					
ANR	1207453	Identifier	target_enc		1207313	1					
ANR	1207454	Argument	ci -> syntax		1207313	4					
ANR	1207455	PtrMemberAccess	ci -> syntax		1207313	0					
ANR	1207456	Identifier	ci		1207313	0					
ANR	1207457	Identifier	syntax		1207313	1					
ANR	1207458	IfStatement	if ( r )		1207313	7					
ANR	1207459	Condition	r	189:6:5320:5320	1207313	0	True				
ANR	1207460	Identifier	r		1207313	0					
ANR	1207461	GotoStatement	goto err ;	189:9:5323:5331	1207313	1	True				
ANR	1207462	Identifier	err		1207313	0					
ANR	1207463	ExpressionStatement	"r = onig_compile ( * reg , cpat , cpat_end , einfo )"	191:2:5336:5381	1207313	8	True				
ANR	1207464	AssignmentExpression	"r = onig_compile ( * reg , cpat , cpat_end , einfo )"		1207313	0		=			
ANR	1207465	Identifier	r		1207313	0					
ANR	1207466	CallExpression	"onig_compile ( * reg , cpat , cpat_end , einfo )"		1207313	1					
ANR	1207467	Callee	onig_compile		1207313	0					
ANR	1207468	Identifier	onig_compile		1207313	0					
ANR	1207469	ArgumentList	* reg		1207313	1					
ANR	1207470	Argument	* reg		1207313	0					
ANR	1207471	UnaryOperationExpression	* reg		1207313	0					
ANR	1207472	UnaryOperator	*		1207313	0					
ANR	1207473	Identifier	reg		1207313	1					
ANR	1207474	Argument	cpat		1207313	1					
ANR	1207475	Identifier	cpat		1207313	0					
ANR	1207476	Argument	cpat_end		1207313	2					
ANR	1207477	Identifier	cpat_end		1207313	0					
ANR	1207478	Argument	einfo		1207313	3					
ANR	1207479	Identifier	einfo		1207313	0					
ANR	1207480	IfStatement	if ( r )		1207313	9					
ANR	1207481	Condition	r	192:6:5389:5389	1207313	0	True				
ANR	1207482	Identifier	r		1207313	0					
ANR	1207483	CompoundStatement		28:9:646:646	1207313	1					
ANR	1207484	Label	err :	193:2:5396:5399	1207313	0	True				
ANR	1207485	Identifier	err		1207313	0					
ANR	1207486	ExpressionStatement	onig_free ( * reg )	194:4:5405:5420	1207313	1	True				
ANR	1207487	CallExpression	onig_free ( * reg )		1207313	0					
ANR	1207488	Callee	onig_free		1207313	0					
ANR	1207489	Identifier	onig_free		1207313	0					
ANR	1207490	ArgumentList	* reg		1207313	1					
ANR	1207491	Argument	* reg		1207313	0					
ANR	1207492	UnaryOperationExpression	* reg		1207313	0					
ANR	1207493	UnaryOperator	*		1207313	0					
ANR	1207494	Identifier	reg		1207313	1					
ANR	1207495	ExpressionStatement	* reg = NULL	195:4:5426:5437	1207313	2	True				
ANR	1207496	AssignmentExpression	* reg = NULL		1207313	0		=			
ANR	1207497	UnaryOperationExpression	* reg		1207313	0					
ANR	1207498	UnaryOperator	*		1207313	0					
ANR	1207499	Identifier	reg		1207313	1					
ANR	1207500	Identifier	NULL		1207313	1					
ANR	1207501	Label	err2 :	198:1:5445:5449	1207313	10	True				
ANR	1207502	Identifier	err2		1207313	0					
ANR	1207503	IfStatement	if ( cpat != pattern )		1207313	11					
ANR	1207504	Condition	cpat != pattern	199:6:5457:5471	1207313	0	True				
ANR	1207505	EqualityExpression	cpat != pattern		1207313	0		!=			
ANR	1207506	Identifier	cpat		1207313	0					
ANR	1207507	Identifier	pattern		1207313	1					
ANR	1207508	ExpressionStatement	xfree ( cpat )	199:23:5474:5485	1207313	1	True				
ANR	1207509	CallExpression	xfree ( cpat )		1207313	0					
ANR	1207510	Callee	xfree		1207313	0					
ANR	1207511	Identifier	xfree		1207313	0					
ANR	1207512	ArgumentList	cpat		1207313	1					
ANR	1207513	Argument	cpat		1207313	0					
ANR	1207514	Identifier	cpat		1207313	0					
ANR	1207515	ReturnStatement	return r ;	201:2:5490:5498	1207313	12	True				
ANR	1207516	Identifier	r		1207313	0					
ANR	1207517	ReturnType	extern int		1207313	1					
ANR	1207518	Identifier	onig_new_deluxe		1207313	2					
ANR	1207519	ParameterList	"regex_t * * reg , const UChar * pattern , const UChar * pattern_end , OnigCompileInfo * ci , OnigErrorInfo * einfo"		1207313	3					
ANR	1207520	Parameter	regex_t * * reg	163:16:4623:4635	1207313	0	True				
ANR	1207521	ParameterType	regex_t * *		1207313	0					
ANR	1207522	Identifier	reg		1207313	1					
ANR	1207523	Parameter	const UChar * pattern	163:31:4638:4657	1207313	1	True				
ANR	1207524	ParameterType	const UChar *		1207313	0					
ANR	1207525	Identifier	pattern		1207313	1					
ANR	1207526	Parameter	const UChar * pattern_end	163:53:4660:4683	1207313	2	True				
ANR	1207527	ParameterType	const UChar *		1207313	0					
ANR	1207528	Identifier	pattern_end		1207313	1					
ANR	1207529	Parameter	OnigCompileInfo * ci	164:16:4702:4720	1207313	3	True				
ANR	1207530	ParameterType	OnigCompileInfo *		1207313	0					
ANR	1207531	Identifier	ci		1207313	1					
ANR	1207532	Parameter	OnigErrorInfo * einfo	164:37:4723:4742	1207313	4	True				
ANR	1207533	ParameterType	OnigErrorInfo *		1207313	0					
ANR	1207534	Identifier	einfo		1207313	1					
ANR	1207535	CFGEntryNode	ENTRY		1207313		True				
ANR	1207536	CFGExitNode	EXIT		1207313		True				
ANR	1207537	Symbol	IS_NOT_NULL		1207313						
ANR	1207538	Symbol	pattern		1207313						
ANR	1207539	Symbol	ci -> target_enc		1207313						
ANR	1207540	Symbol	conv_encoding		1207313						
ANR	1207541	Symbol	cpat		1207313						
ANR	1207542	Symbol	* ci		1207313						
ANR	1207543	Symbol	ci -> pattern_enc		1207313						
ANR	1207544	Symbol	einfo		1207313						
ANR	1207545	Symbol	& cpat		1207313						
ANR	1207546	Symbol	IS_NULL		1207313						
ANR	1207547	Symbol	reg		1207313						
ANR	1207548	Symbol	xmalloc		1207313						
ANR	1207549	Symbol	ci -> syntax		1207313						
ANR	1207550	Symbol	ci -> option		1207313						
ANR	1207551	Symbol	onig_compile		1207313						
ANR	1207552	Symbol	cpat_end		1207313						
ANR	1207553	Symbol	NULL		1207313						
ANR	1207554	Symbol	ci		1207313						
ANR	1207555	Symbol	ONIGERR_MEMORY		1207313						
ANR	1207556	Symbol	pattern_end		1207313						
ANR	1207557	Symbol	ci -> case_fold_flag		1207313						
ANR	1207558	Symbol	& cpat_end		1207313						
ANR	1207559	Symbol	r		1207313						
ANR	1207560	Symbol	onig_reg_init		1207313						
ANR	1207561	Symbol	einfo -> par		1207313						
ANR	1207562	Symbol	* einfo		1207313						
ANR	1207563	Symbol	* reg		1207313						
ANR	1207564	Function	onig_recompile_deluxe	205:0:5528:5952							
ANR	1207565	FunctionDef	"onig_recompile_deluxe (regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigCompileInfo * ci , OnigErrorInfo * einfo)"		1207564	0					
ANR	1207566	CompoundStatement		208:0:5688:5952	1207564	0					
ANR	1207567	IdentifierDeclStatement	int r ;	209:2:5692:5697	1207564	0	True				
ANR	1207568	IdentifierDecl	r		1207564	0					
ANR	1207569	IdentifierDeclType	int		1207564	0					
ANR	1207570	Identifier	r		1207564	1					
ANR	1207571	IdentifierDeclStatement	regex_t * new_reg ;	210:2:5701:5717	1207564	1	True				
ANR	1207572	IdentifierDecl	* new_reg		1207564	0					
ANR	1207573	IdentifierDeclType	regex_t *		1207564	0					
ANR	1207574	Identifier	new_reg		1207564	1					
ANR	1207575	ExpressionStatement	"r = onig_new_deluxe ( & new_reg , pattern , pattern_end , ci , einfo )"	212:2:5722:5784	1207564	2	True				
ANR	1207576	AssignmentExpression	"r = onig_new_deluxe ( & new_reg , pattern , pattern_end , ci , einfo )"		1207564	0		=			
ANR	1207577	Identifier	r		1207564	0					
ANR	1207578	CallExpression	"onig_new_deluxe ( & new_reg , pattern , pattern_end , ci , einfo )"		1207564	1					
ANR	1207579	Callee	onig_new_deluxe		1207564	0					
ANR	1207580	Identifier	onig_new_deluxe		1207564	0					
ANR	1207581	ArgumentList	& new_reg		1207564	1					
ANR	1207582	Argument	& new_reg		1207564	0					
ANR	1207583	UnaryOperationExpression	& new_reg		1207564	0					
ANR	1207584	UnaryOperator	&		1207564	0					
ANR	1207585	Identifier	new_reg		1207564	1					
ANR	1207586	Argument	pattern		1207564	1					
ANR	1207587	Identifier	pattern		1207564	0					
ANR	1207588	Argument	pattern_end		1207564	2					
ANR	1207589	Identifier	pattern_end		1207564	0					
ANR	1207590	Argument	ci		1207564	3					
ANR	1207591	Identifier	ci		1207564	0					
ANR	1207592	Argument	einfo		1207564	4					
ANR	1207593	Identifier	einfo		1207564	0					
ANR	1207594	IfStatement	if ( r )		1207564	3					
ANR	1207595	Condition	r	213:6:5792:5792	1207564	0	True				
ANR	1207596	Identifier	r		1207564	0					
ANR	1207597	ReturnStatement	return r ;	213:9:5795:5803	1207564	1	True				
ANR	1207598	Identifier	r		1207564	0					
ANR	1207599	IfStatement	if ( ONIG_STATE ( reg ) == ONIG_STATE_NORMAL )		1207564	4					
ANR	1207600	Condition	ONIG_STATE ( reg ) == ONIG_STATE_NORMAL	214:6:5811:5846	1207564	0	True				
ANR	1207601	EqualityExpression	ONIG_STATE ( reg ) == ONIG_STATE_NORMAL		1207564	0		==			
ANR	1207602	CallExpression	ONIG_STATE ( reg )		1207564	0					
ANR	1207603	Callee	ONIG_STATE		1207564	0					
ANR	1207604	Identifier	ONIG_STATE		1207564	0					
ANR	1207605	ArgumentList	reg		1207564	1					
ANR	1207606	Argument	reg		1207564	0					
ANR	1207607	Identifier	reg		1207564	0					
ANR	1207608	Identifier	ONIG_STATE_NORMAL		1207564	1					
ANR	1207609	CompoundStatement		7:44:160:160	1207564	1					
ANR	1207610	ExpressionStatement	"onig_transfer ( reg , new_reg )"	215:4:5855:5882	1207564	0	True				
ANR	1207611	CallExpression	"onig_transfer ( reg , new_reg )"		1207564	0					
ANR	1207612	Callee	onig_transfer		1207564	0					
ANR	1207613	Identifier	onig_transfer		1207564	0					
ANR	1207614	ArgumentList	reg		1207564	1					
ANR	1207615	Argument	reg		1207564	0					
ANR	1207616	Identifier	reg		1207564	0					
ANR	1207617	Argument	new_reg		1207564	1					
ANR	1207618	Identifier	new_reg		1207564	0					
ANR	1207619	ElseStatement	else		1207564	0					
ANR	1207620	CompoundStatement		10:7:206:206	1207564	0					
ANR	1207621	ExpressionStatement	"onig_chain_link_add ( reg , new_reg )"	218:4:5901:5934	1207564	0	True				
ANR	1207622	CallExpression	"onig_chain_link_add ( reg , new_reg )"		1207564	0					
ANR	1207623	Callee	onig_chain_link_add		1207564	0					
ANR	1207624	Identifier	onig_chain_link_add		1207564	0					
ANR	1207625	ArgumentList	reg		1207564	1					
ANR	1207626	Argument	reg		1207564	0					
ANR	1207627	Identifier	reg		1207564	0					
ANR	1207628	Argument	new_reg		1207564	1					
ANR	1207629	Identifier	new_reg		1207564	0					
ANR	1207630	ReturnStatement	return 0 ;	220:2:5942:5950	1207564	5	True				
ANR	1207631	PrimaryExpression	0		1207564	0					
ANR	1207632	ReturnType	extern int		1207564	1					
ANR	1207633	Identifier	onig_recompile_deluxe		1207564	2					
ANR	1207634	ParameterList	"regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigCompileInfo * ci , OnigErrorInfo * einfo"		1207564	3					
ANR	1207635	Parameter	regex_t * reg	206:22:5561:5572	1207564	0	True				
ANR	1207636	ParameterType	regex_t *		1207564	0					
ANR	1207637	Identifier	reg		1207564	1					
ANR	1207638	Parameter	const UChar * pattern	206:36:5575:5594	1207564	1	True				
ANR	1207639	ParameterType	const UChar *		1207564	0					
ANR	1207640	Identifier	pattern		1207564	1					
ANR	1207641	Parameter	const UChar * pattern_end	206:58:5597:5620	1207564	2	True				
ANR	1207642	ParameterType	const UChar *		1207564	0					
ANR	1207643	Identifier	pattern_end		1207564	1					
ANR	1207644	Parameter	OnigCompileInfo * ci	207:22:5645:5663	1207564	3	True				
ANR	1207645	ParameterType	OnigCompileInfo *		1207564	0					
ANR	1207646	Identifier	ci		1207564	1					
ANR	1207647	Parameter	OnigErrorInfo * einfo	207:43:5666:5685	1207564	4	True				
ANR	1207648	ParameterType	OnigErrorInfo *		1207564	0					
ANR	1207649	Identifier	einfo		1207564	1					
ANR	1207650	CFGEntryNode	ENTRY		1207564		True				
ANR	1207651	CFGExitNode	EXIT		1207564		True				
ANR	1207652	Symbol	r		1207564						
ANR	1207653	Symbol	einfo		1207564						
ANR	1207654	Symbol	reg		1207564						
ANR	1207655	Symbol	new_reg		1207564						
ANR	1207656	Symbol	& new_reg		1207564						
ANR	1207657	Symbol	ci		1207564						
ANR	1207658	Symbol	ONIG_STATE		1207564						
ANR	1207659	Symbol	pattern		1207564						
ANR	1207660	Symbol	pattern_end		1207564						
ANR	1207661	Symbol	onig_new_deluxe		1207564						
ANR	1207662	Symbol	ONIG_STATE_NORMAL		1207564						
