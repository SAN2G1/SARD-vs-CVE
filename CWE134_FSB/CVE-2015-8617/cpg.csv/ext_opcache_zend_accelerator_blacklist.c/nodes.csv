command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1406004	File	data/converged/CVE-2015-8617_php-src/ext_opcache_zend_accelerator_blacklist.c								
ANR	1406005	ClassDef	_zend_regexp_list	45:0:1799:1874							
ANR	1406006	DeclStmt									
ANR	1406007	Decl							pcre	pcre *	re
ANR	1406008	DeclStmt									
ANR	1406009	Decl							zend_regexp_list	zend_regexp_list *	next
ANR	1406010	DeclStmt									
ANR	1406011	Decl							zend_blacklist	zend_blacklist	accel_blacklist
ANR	1406012	Function	zend_accel_blacklist_init	52:0:1911:2375							
ANR	1406013	FunctionDef	zend_accel_blacklist_init (zend_blacklist * blacklist)		1406012	0					
ANR	1406014	CompoundStatement		53:0:1969:2375	1406012	0					
ANR	1406015	ExpressionStatement	blacklist -> pos = 0	54:1:1972:1990	1406012	0	True				
ANR	1406016	AssignmentExpression	blacklist -> pos = 0		1406012	0		=			
ANR	1406017	PtrMemberAccess	blacklist -> pos		1406012	0					
ANR	1406018	Identifier	blacklist		1406012	0					
ANR	1406019	Identifier	pos		1406012	1					
ANR	1406020	PrimaryExpression	0		1406012	1					
ANR	1406021	ExpressionStatement	blacklist -> size = ZEND_BLACKLIST_BLOCK_SIZE	55:1:1993:2036	1406012	1	True				
ANR	1406022	AssignmentExpression	blacklist -> size = ZEND_BLACKLIST_BLOCK_SIZE		1406012	0		=			
ANR	1406023	PtrMemberAccess	blacklist -> size		1406012	0					
ANR	1406024	Identifier	blacklist		1406012	0					
ANR	1406025	Identifier	size		1406012	1					
ANR	1406026	Identifier	ZEND_BLACKLIST_BLOCK_SIZE		1406012	1					
ANR	1406027	IfStatement	if ( blacklist -> entries != NULL )		1406012	2					
ANR	1406028	Condition	blacklist -> entries != NULL	57:5:2044:2069	1406012	0	True				
ANR	1406029	EqualityExpression	blacklist -> entries != NULL		1406012	0		!=			
ANR	1406030	PtrMemberAccess	blacklist -> entries		1406012	0					
ANR	1406031	Identifier	blacklist		1406012	0					
ANR	1406032	Identifier	entries		1406012	1					
ANR	1406033	Identifier	NULL		1406012	1					
ANR	1406034	CompoundStatement		5:33:102:102	1406012	1					
ANR	1406035	ExpressionStatement	zend_accel_blacklist_shutdown ( blacklist )	58:2:2076:2116	1406012	0	True				
ANR	1406036	CallExpression	zend_accel_blacklist_shutdown ( blacklist )		1406012	0					
ANR	1406037	Callee	zend_accel_blacklist_shutdown		1406012	0					
ANR	1406038	Identifier	zend_accel_blacklist_shutdown		1406012	0					
ANR	1406039	ArgumentList	blacklist		1406012	1					
ANR	1406040	Argument	blacklist		1406012	0					
ANR	1406041	Identifier	blacklist		1406012	0					
ANR	1406042	ExpressionStatement	"blacklist -> entries = ( zend_blacklist_entry * ) calloc ( sizeof ( zend_blacklist_entry ) , blacklist -> size )"	61:1:2123:2222	1406012	3	True				
ANR	1406043	AssignmentExpression	"blacklist -> entries = ( zend_blacklist_entry * ) calloc ( sizeof ( zend_blacklist_entry ) , blacklist -> size )"		1406012	0		=			
ANR	1406044	PtrMemberAccess	blacklist -> entries		1406012	0					
ANR	1406045	Identifier	blacklist		1406012	0					
ANR	1406046	Identifier	entries		1406012	1					
ANR	1406047	CastExpression	"( zend_blacklist_entry * ) calloc ( sizeof ( zend_blacklist_entry ) , blacklist -> size )"		1406012	1					
ANR	1406048	CastTarget	zend_blacklist_entry *		1406012	0					
ANR	1406049	CallExpression	"calloc ( sizeof ( zend_blacklist_entry ) , blacklist -> size )"		1406012	1					
ANR	1406050	Callee	calloc		1406012	0					
ANR	1406051	Identifier	calloc		1406012	0					
ANR	1406052	ArgumentList	sizeof ( zend_blacklist_entry )		1406012	1					
ANR	1406053	Argument	sizeof ( zend_blacklist_entry )		1406012	0					
ANR	1406054	SizeofExpression	sizeof ( zend_blacklist_entry )		1406012	0					
ANR	1406055	Sizeof	sizeof		1406012	0					
ANR	1406056	SizeofOperand	zend_blacklist_entry		1406012	1					
ANR	1406057	Argument	blacklist -> size		1406012	1					
ANR	1406058	PtrMemberAccess	blacklist -> size		1406012	0					
ANR	1406059	Identifier	blacklist		1406012	0					
ANR	1406060	Identifier	size		1406012	1					
ANR	1406061	IfStatement	if ( ! blacklist -> entries )		1406012	4					
ANR	1406062	Condition	! blacklist -> entries	62:5:2229:2247	1406012	0	True				
ANR	1406063	UnaryOperationExpression	! blacklist -> entries		1406012	0					
ANR	1406064	UnaryOperator	!		1406012	0					
ANR	1406065	PtrMemberAccess	blacklist -> entries		1406012	1					
ANR	1406066	Identifier	blacklist		1406012	0					
ANR	1406067	Identifier	entries		1406012	1					
ANR	1406068	CompoundStatement		10:26:280:280	1406012	1					
ANR	1406069	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_FATAL , ""Blacklist initialization: no memory\\n"" )"	63:2:2254:2328	1406012	0	True				
ANR	1406070	CallExpression	"zend_accel_error ( ACCEL_LOG_FATAL , ""Blacklist initialization: no memory\\n"" )"		1406012	0					
ANR	1406071	Callee	zend_accel_error		1406012	0					
ANR	1406072	Identifier	zend_accel_error		1406012	0					
ANR	1406073	ArgumentList	ACCEL_LOG_FATAL		1406012	1					
ANR	1406074	Argument	ACCEL_LOG_FATAL		1406012	0					
ANR	1406075	Identifier	ACCEL_LOG_FATAL		1406012	0					
ANR	1406076	Argument	"""Blacklist initialization: no memory\\n"""		1406012	1					
ANR	1406077	PrimaryExpression	"""Blacklist initialization: no memory\\n"""		1406012	0					
ANR	1406078	ReturnStatement	return ;	64:2:2332:2338	1406012	1	True				
ANR	1406079	ExpressionStatement	blacklist -> regexp_list = NULL	66:1:2344:2373	1406012	5	True				
ANR	1406080	AssignmentExpression	blacklist -> regexp_list = NULL		1406012	0		=			
ANR	1406081	PtrMemberAccess	blacklist -> regexp_list		1406012	0					
ANR	1406082	Identifier	blacklist		1406012	0					
ANR	1406083	Identifier	regexp_list		1406012	1					
ANR	1406084	Identifier	NULL		1406012	1					
ANR	1406085	ReturnType	void		1406012	1					
ANR	1406086	Identifier	zend_accel_blacklist_init		1406012	2					
ANR	1406087	ParameterList	zend_blacklist * blacklist		1406012	3					
ANR	1406088	Parameter	zend_blacklist * blacklist	52:31:1942:1966	1406012	0	True				
ANR	1406089	ParameterType	zend_blacklist *		1406012	0					
ANR	1406090	Identifier	blacklist		1406012	1					
ANR	1406091	CFGEntryNode	ENTRY		1406012		True				
ANR	1406092	CFGExitNode	EXIT		1406012		True				
ANR	1406093	Symbol	* blacklist		1406012						
ANR	1406094	Symbol	blacklist -> pos		1406012						
ANR	1406095	Symbol	blacklist -> size		1406012						
ANR	1406096	Symbol	NULL		1406012						
ANR	1406097	Symbol	ACCEL_LOG_FATAL		1406012						
ANR	1406098	Symbol	ZEND_BLACKLIST_BLOCK_SIZE		1406012						
ANR	1406099	Symbol	blacklist -> regexp_list		1406012						
ANR	1406100	Symbol	blacklist -> entries		1406012						
ANR	1406101	Symbol	blacklist		1406012						
ANR	1406102	Symbol	calloc		1406012						
ANR	1406103	Function	blacklist_report_regexp_error	69:0:2378:2587							
ANR	1406104	FunctionDef	"blacklist_report_regexp_error (const char * pcre_error , int pcre_error_offset)"		1406103	0					
ANR	1406105	CompoundStatement		70:0:2467:2587	1406103	0					
ANR	1406106	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_ERROR , ""Blacklist compilation failed (offset: %d), %s\\n"" , pcre_error_offset , pcre_error )"	71:1:2470:2585	1406103	0	True				
ANR	1406107	CallExpression	"zend_accel_error ( ACCEL_LOG_ERROR , ""Blacklist compilation failed (offset: %d), %s\\n"" , pcre_error_offset , pcre_error )"		1406103	0					
ANR	1406108	Callee	zend_accel_error		1406103	0					
ANR	1406109	Identifier	zend_accel_error		1406103	0					
ANR	1406110	ArgumentList	ACCEL_LOG_ERROR		1406103	1					
ANR	1406111	Argument	ACCEL_LOG_ERROR		1406103	0					
ANR	1406112	Identifier	ACCEL_LOG_ERROR		1406103	0					
ANR	1406113	Argument	"""Blacklist compilation failed (offset: %d), %s\\n"""		1406103	1					
ANR	1406114	PrimaryExpression	"""Blacklist compilation failed (offset: %d), %s\\n"""		1406103	0					
ANR	1406115	Argument	pcre_error_offset		1406103	2					
ANR	1406116	Identifier	pcre_error_offset		1406103	0					
ANR	1406117	Argument	pcre_error		1406103	3					
ANR	1406118	Identifier	pcre_error		1406103	0					
ANR	1406119	ReturnType	static void		1406103	1					
ANR	1406120	Identifier	blacklist_report_regexp_error		1406103	2					
ANR	1406121	ParameterList	"const char * pcre_error , int pcre_error_offset"		1406103	3					
ANR	1406122	Parameter	const char * pcre_error	69:42:2420:2441	1406103	0	True				
ANR	1406123	ParameterType	const char *		1406103	0					
ANR	1406124	Identifier	pcre_error		1406103	1					
ANR	1406125	Parameter	int pcre_error_offset	69:66:2444:2464	1406103	1	True				
ANR	1406126	ParameterType	int		1406103	0					
ANR	1406127	Identifier	pcre_error_offset		1406103	1					
ANR	1406128	CFGEntryNode	ENTRY		1406103		True				
ANR	1406129	CFGExitNode	EXIT		1406103		True				
ANR	1406130	Symbol	pcre_error_offset		1406103						
ANR	1406131	Symbol	pcre_error		1406103						
ANR	1406132	Symbol	ACCEL_LOG_ERROR		1406103						
ANR	1406133	Function	zend_accel_blacklist_update_regexp	74:0:2590:5100							
ANR	1406134	FunctionDef	zend_accel_blacklist_update_regexp (zend_blacklist * blacklist)		1406133	0					
ANR	1406135	CompoundStatement		75:0:2664:5100	1406133	0					
ANR	1406136	IdentifierDeclStatement	const char * pcre_error ;	76:1:2667:2689	1406133	0	True				
ANR	1406137	IdentifierDecl	* pcre_error		1406133	0					
ANR	1406138	IdentifierDeclType	const char *		1406133	0					
ANR	1406139	Identifier	pcre_error		1406133	1					
ANR	1406140	IdentifierDeclStatement	"int i , pcre_error_offset ;"	77:1:2692:2716	1406133	1	True				
ANR	1406141	IdentifierDecl	i		1406133	0					
ANR	1406142	IdentifierDeclType	int		1406133	0					
ANR	1406143	Identifier	i		1406133	1					
ANR	1406144	IdentifierDecl	pcre_error_offset		1406133	1					
ANR	1406145	IdentifierDeclType	int		1406133	0					
ANR	1406146	Identifier	pcre_error_offset		1406133	1					
ANR	1406147	IdentifierDeclStatement	"zend_regexp_list * * regexp_list_it , * it ;"	78:1:2719:2757	1406133	2	True				
ANR	1406148	IdentifierDecl	* * regexp_list_it		1406133	0					
ANR	1406149	IdentifierDeclType	zend_regexp_list * *		1406133	0					
ANR	1406150	Identifier	regexp_list_it		1406133	1					
ANR	1406151	IdentifierDecl	* it		1406133	1					
ANR	1406152	IdentifierDeclType	zend_regexp_list *		1406133	0					
ANR	1406153	Identifier	it		1406133	1					
ANR	1406154	IdentifierDeclStatement	"char regexp [ 12 * 1024 ] , * p , * end , * c , * backtrack = NULL ;"	79:1:2760:2813	1406133	3	True				
ANR	1406155	IdentifierDecl	regexp [ 12 * 1024 ]		1406133	0					
ANR	1406156	IdentifierDeclType	char [ 12 * 1024 ]		1406133	0					
ANR	1406157	Identifier	regexp		1406133	1					
ANR	1406158	MultiplicativeExpression	12 * 1024		1406133	2		*			
ANR	1406159	PrimaryExpression	12		1406133	0					
ANR	1406160	PrimaryExpression	1024		1406133	1					
ANR	1406161	IdentifierDecl	* p		1406133	1					
ANR	1406162	IdentifierDeclType	char *		1406133	0					
ANR	1406163	Identifier	p		1406133	1					
ANR	1406164	IdentifierDecl	* end		1406133	2					
ANR	1406165	IdentifierDeclType	char *		1406133	0					
ANR	1406166	Identifier	end		1406133	1					
ANR	1406167	IdentifierDecl	* c		1406133	3					
ANR	1406168	IdentifierDeclType	char *		1406133	0					
ANR	1406169	Identifier	c		1406133	1					
ANR	1406170	IdentifierDecl	* backtrack = NULL		1406133	4					
ANR	1406171	IdentifierDeclType	char *		1406133	0					
ANR	1406172	Identifier	backtrack		1406133	1					
ANR	1406173	AssignmentExpression	* backtrack = NULL		1406133	2		=			
ANR	1406174	Identifier	NULL		1406133	0					
ANR	1406175	Identifier	NULL		1406133	1					
ANR	1406176	IfStatement	if ( blacklist -> pos == 0 )		1406133	4					
ANR	1406177	Condition	blacklist -> pos == 0	81:5:2821:2839	1406133	0	True				
ANR	1406178	EqualityExpression	blacklist -> pos == 0		1406133	0		==			
ANR	1406179	PtrMemberAccess	blacklist -> pos		1406133	0					
ANR	1406180	Identifier	blacklist		1406133	0					
ANR	1406181	Identifier	pos		1406133	1					
ANR	1406182	PrimaryExpression	0		1406133	1					
ANR	1406183	CompoundStatement		7:26:177:177	1406133	1					
ANR	1406184	ReturnStatement	return ;	83:2:2889:2895	1406133	0	True				
ANR	1406185	ExpressionStatement	regexp_list_it = & ( blacklist -> regexp_list )	86:1:2902:2944	1406133	5	True				
ANR	1406186	AssignmentExpression	regexp_list_it = & ( blacklist -> regexp_list )		1406133	0		=			
ANR	1406187	Identifier	regexp_list_it		1406133	0					
ANR	1406188	UnaryOperationExpression	& ( blacklist -> regexp_list )		1406133	1					
ANR	1406189	UnaryOperator	&		1406133	0					
ANR	1406190	PtrMemberAccess	blacklist -> regexp_list		1406133	1					
ANR	1406191	Identifier	blacklist		1406133	0					
ANR	1406192	Identifier	regexp_list		1406133	1					
ANR	1406193	ExpressionStatement	regexp [ 0 ] = '^'	88:1:2948:2963	1406133	6	True				
ANR	1406194	AssignmentExpression	regexp [ 0 ] = '^'		1406133	0		=			
ANR	1406195	ArrayIndexing	regexp [ 0 ]		1406133	0					
ANR	1406196	Identifier	regexp		1406133	0					
ANR	1406197	PrimaryExpression	0		1406133	1					
ANR	1406198	PrimaryExpression	'^'		1406133	1					
ANR	1406199	ExpressionStatement	regexp [ 1 ] = '('	89:1:2966:2981	1406133	7	True				
ANR	1406200	AssignmentExpression	regexp [ 1 ] = '('		1406133	0		=			
ANR	1406201	ArrayIndexing	regexp [ 1 ]		1406133	0					
ANR	1406202	Identifier	regexp		1406133	0					
ANR	1406203	PrimaryExpression	1		1406133	1					
ANR	1406204	PrimaryExpression	'('		1406133	1					
ANR	1406205	ExpressionStatement	p = regexp + 2	90:1:2984:2998	1406133	8	True				
ANR	1406206	AssignmentExpression	p = regexp + 2		1406133	0		=			
ANR	1406207	Identifier	p		1406133	0					
ANR	1406208	AdditiveExpression	regexp + 2		1406133	1		+			
ANR	1406209	Identifier	regexp		1406133	0					
ANR	1406210	PrimaryExpression	2		1406133	1					
ANR	1406211	ExpressionStatement	"end = regexp + sizeof ( regexp ) - sizeof ( ""[^\\\\\\\\]*)\\0"" )"	91:1:3001:3054	1406133	9	True				
ANR	1406212	AssignmentExpression	"end = regexp + sizeof ( regexp ) - sizeof ( ""[^\\\\\\\\]*)\\0"" )"		1406133	0		=			
ANR	1406213	Identifier	end		1406133	0					
ANR	1406214	AdditiveExpression	"regexp + sizeof ( regexp ) - sizeof ( ""[^\\\\\\\\]*)\\0"" )"		1406133	1		+			
ANR	1406215	Identifier	regexp		1406133	0					
ANR	1406216	AdditiveExpression	"sizeof ( regexp ) - sizeof ( ""[^\\\\\\\\]*)\\0"" )"		1406133	1		-			
ANR	1406217	SizeofExpression	sizeof ( regexp )		1406133	0					
ANR	1406218	Sizeof	sizeof		1406133	0					
ANR	1406219	SizeofOperand	regexp		1406133	1					
ANR	1406220	SizeofExpression	"sizeof ( ""[^\\\\\\\\]*)\\0"" )"		1406133	1					
ANR	1406221	Sizeof	sizeof		1406133	0					
ANR	1406222	PrimaryExpression	"""[^\\\\\\\\]*)\\0"""		1406133	1					
ANR	1406223	ForStatement	for ( i = 0 ; i < blacklist -> pos ; )		1406133	10					
ANR	1406224	ForInit	i = 0 ;	93:6:3063:3068	1406133	0	True				
ANR	1406225	AssignmentExpression	i = 0		1406133	0		=			
ANR	1406226	Identifier	i		1406133	0					
ANR	1406227	PrimaryExpression	0		1406133	1					
ANR	1406228	Condition	i < blacklist -> pos	93:13:3070:3087	1406133	1	True				
ANR	1406229	RelationalExpression	i < blacklist -> pos		1406133	0		<			
ANR	1406230	Identifier	i		1406133	0					
ANR	1406231	PtrMemberAccess	blacklist -> pos		1406133	1					
ANR	1406232	Identifier	blacklist		1406133	0					
ANR	1406233	Identifier	pos		1406133	1					
ANR	1406234	CompoundStatement		19:35:427:427	1406133	2					
ANR	1406235	ExpressionStatement	c = blacklist -> entries [ i ] . path	94:2:3096:3126	1406133	0	True				
ANR	1406236	AssignmentExpression	c = blacklist -> entries [ i ] . path		1406133	0		=			
ANR	1406237	Identifier	c		1406133	0					
ANR	1406238	MemberAccess	blacklist -> entries [ i ] . path		1406133	1					
ANR	1406239	ArrayIndexing	blacklist -> entries [ i ]		1406133	0					
ANR	1406240	PtrMemberAccess	blacklist -> entries		1406133	0					
ANR	1406241	Identifier	blacklist		1406133	0					
ANR	1406242	Identifier	entries		1406133	1					
ANR	1406243	Identifier	i		1406133	1					
ANR	1406244	Identifier	path		1406133	1					
ANR	1406245	IfStatement	if ( p + blacklist -> entries [ i ] . path_length < end )		1406133	1					
ANR	1406246	Condition	p + blacklist -> entries [ i ] . path_length < end	95:6:3134:3176	1406133	0	True				
ANR	1406247	RelationalExpression	p + blacklist -> entries [ i ] . path_length < end		1406133	0		<			
ANR	1406248	AdditiveExpression	p + blacklist -> entries [ i ] . path_length		1406133	0		+			
ANR	1406249	Identifier	p		1406133	0					
ANR	1406250	MemberAccess	blacklist -> entries [ i ] . path_length		1406133	1					
ANR	1406251	ArrayIndexing	blacklist -> entries [ i ]		1406133	0					
ANR	1406252	PtrMemberAccess	blacklist -> entries		1406133	0					
ANR	1406253	Identifier	blacklist		1406133	0					
ANR	1406254	Identifier	entries		1406133	1					
ANR	1406255	Identifier	i		1406133	1					
ANR	1406256	Identifier	path_length		1406133	1					
ANR	1406257	Identifier	end		1406133	1					
ANR	1406258	CompoundStatement		21:51:514:514	1406133	1					
ANR	1406259	WhileStatement	while ( * c && p < end )		1406133	0					
ANR	1406260	Condition	* c && p < end	96:10:3191:3203	1406133	0	True				
ANR	1406261	AndExpression	* c && p < end		1406133	0		&&			
ANR	1406262	UnaryOperationExpression	* c		1406133	0					
ANR	1406263	UnaryOperator	*		1406133	0					
ANR	1406264	Identifier	c		1406133	1					
ANR	1406265	RelationalExpression	p < end		1406133	1		<			
ANR	1406266	Identifier	p		1406133	0					
ANR	1406267	Identifier	end		1406133	1					
ANR	1406268	CompoundStatement		22:25:541:541	1406133	1					
ANR	1406269	SwitchStatement	switch ( * c )		1406133	0					
ANR	1406270	Condition	* c	97:12:3220:3221	1406133	0	True				
ANR	1406271	UnaryOperationExpression	* c		1406133	0					
ANR	1406272	UnaryOperator	*		1406133	0					
ANR	1406273	Identifier	c		1406133	1					
ANR	1406274	CompoundStatement		23:16:559:559	1406133	1					
ANR	1406275	Label	case '?' :	98:5:3231:3239	1406133	0	True				
ANR	1406276	ExpressionStatement	c ++	99:6:3247:3250	1406133	1	True				
ANR	1406277	PostIncDecOperationExpression	c ++		1406133	0					
ANR	1406278	Identifier	c		1406133	0					
ANR	1406279	IncDec	++		1406133	1					
ANR	1406280	ExpressionStatement	p [ 0 ] = '['	101:7:3277:3287	1406133	2	True				
ANR	1406281	AssignmentExpression	p [ 0 ] = '['		1406133	0		=			
ANR	1406282	ArrayIndexing	p [ 0 ]		1406133	0					
ANR	1406283	Identifier	p		1406133	0					
ANR	1406284	PrimaryExpression	0		1406133	1					
ANR	1406285	PrimaryExpression	'['		1406133	1					
ANR	1406286	ExpressionStatement	p [ 1 ] = '^'	102:7:3324:3334	1406133	3	True				
ANR	1406287	AssignmentExpression	p [ 1 ] = '^'		1406133	0		=			
ANR	1406288	ArrayIndexing	p [ 1 ]		1406133	0					
ANR	1406289	Identifier	p		1406133	0					
ANR	1406290	PrimaryExpression	1		1406133	1					
ANR	1406291	PrimaryExpression	'^'		1406133	1					
ANR	1406292	ExpressionStatement	p [ 2 ] = '\\\\'	103:7:3343:3354	1406133	4	True				
ANR	1406293	AssignmentExpression	p [ 2 ] = '\\\\'		1406133	0		=			
ANR	1406294	ArrayIndexing	p [ 2 ]		1406133	0					
ANR	1406295	Identifier	p		1406133	0					
ANR	1406296	PrimaryExpression	2		1406133	1					
ANR	1406297	PrimaryExpression	'\\\\'		1406133	1					
ANR	1406298	ExpressionStatement	p [ 3 ] = '\\\\'	104:7:3363:3374	1406133	5	True				
ANR	1406299	AssignmentExpression	p [ 3 ] = '\\\\'		1406133	0		=			
ANR	1406300	ArrayIndexing	p [ 3 ]		1406133	0					
ANR	1406301	Identifier	p		1406133	0					
ANR	1406302	PrimaryExpression	3		1406133	1					
ANR	1406303	PrimaryExpression	'\\\\'		1406133	1					
ANR	1406304	ExpressionStatement	p [ 4 ] = ']'	105:7:3383:3393	1406133	6	True				
ANR	1406305	AssignmentExpression	p [ 4 ] = ']'		1406133	0		=			
ANR	1406306	ArrayIndexing	p [ 4 ]		1406133	0					
ANR	1406307	Identifier	p		1406133	0					
ANR	1406308	PrimaryExpression	4		1406133	1					
ANR	1406309	PrimaryExpression	']'		1406133	1					
ANR	1406310	ExpressionStatement	p += 5	106:6:3401:3407	1406133	7	True				
ANR	1406311	AssignmentExpression	p += 5		1406133	0		+=			
ANR	1406312	Identifier	p		1406133	0					
ANR	1406313	PrimaryExpression	5		1406133	1					
ANR	1406314	BreakStatement	break ;	114:6:3544:3549	1406133	8	True				
ANR	1406315	Label	case '*' :	115:5:3556:3564	1406133	9	True				
ANR	1406316	ExpressionStatement	c ++	116:6:3572:3575	1406133	10	True				
ANR	1406317	PostIncDecOperationExpression	c ++		1406133	0					
ANR	1406318	Identifier	c		1406133	0					
ANR	1406319	IncDec	++		1406133	1					
ANR	1406320	IfStatement	if ( * c == '*' )		1406133	11					
ANR	1406321	Condition	* c == '*'	117:10:3587:3595	1406133	0	True				
ANR	1406322	EqualityExpression	* c == '*'		1406133	0		==			
ANR	1406323	UnaryOperationExpression	* c		1406133	0					
ANR	1406324	UnaryOperator	*		1406133	0					
ANR	1406325	Identifier	c		1406133	1					
ANR	1406326	PrimaryExpression	'*'		1406133	1					
ANR	1406327	CompoundStatement		43:21:933:933	1406133	1					
ANR	1406328	ExpressionStatement	c ++	118:7:3607:3610	1406133	0	True				
ANR	1406329	PostIncDecOperationExpression	c ++		1406133	0					
ANR	1406330	Identifier	c		1406133	0					
ANR	1406331	IncDec	++		1406133	1					
ANR	1406332	ExpressionStatement	p [ 0 ] = '.'	119:8:3620:3630	1406133	1	True				
ANR	1406333	AssignmentExpression	p [ 0 ] = '.'		1406133	0		=			
ANR	1406334	ArrayIndexing	p [ 0 ]		1406133	0					
ANR	1406335	Identifier	p		1406133	0					
ANR	1406336	PrimaryExpression	0		1406133	1					
ANR	1406337	PrimaryExpression	'.'		1406133	1					
ANR	1406338	ExpressionStatement	p [ 1 ] = '*'	120:7:3656:3666	1406133	2	True				
ANR	1406339	AssignmentExpression	p [ 1 ] = '*'		1406133	0		=			
ANR	1406340	ArrayIndexing	p [ 1 ]		1406133	0					
ANR	1406341	Identifier	p		1406133	0					
ANR	1406342	PrimaryExpression	1		1406133	1					
ANR	1406343	PrimaryExpression	'*'		1406133	1					
ANR	1406344	ExpressionStatement	p += 2	121:7:3675:3681	1406133	3	True				
ANR	1406345	AssignmentExpression	p += 2		1406133	0		+=			
ANR	1406346	Identifier	p		1406133	0					
ANR	1406347	PrimaryExpression	2		1406133	1					
ANR	1406348	ElseStatement	else		1406133	0					
ANR	1406349	CompoundStatement		48:13:1031:1031	1406133	0					
ANR	1406350	ExpressionStatement	p [ 0 ] = '['	124:8:3724:3734	1406133	0	True				
ANR	1406351	AssignmentExpression	p [ 0 ] = '['		1406133	0		=			
ANR	1406352	ArrayIndexing	p [ 0 ]		1406133	0					
ANR	1406353	Identifier	p		1406133	0					
ANR	1406354	PrimaryExpression	0		1406133	1					
ANR	1406355	PrimaryExpression	'['		1406133	1					
ANR	1406356	ExpressionStatement	p [ 1 ] = '^'	125:8:3773:3783	1406133	1	True				
ANR	1406357	AssignmentExpression	p [ 1 ] = '^'		1406133	0		=			
ANR	1406358	ArrayIndexing	p [ 1 ]		1406133	0					
ANR	1406359	Identifier	p		1406133	0					
ANR	1406360	PrimaryExpression	1		1406133	1					
ANR	1406361	PrimaryExpression	'^'		1406133	1					
ANR	1406362	ExpressionStatement	p [ 2 ] = '\\\\'	126:8:3793:3804	1406133	2	True				
ANR	1406363	AssignmentExpression	p [ 2 ] = '\\\\'		1406133	0		=			
ANR	1406364	ArrayIndexing	p [ 2 ]		1406133	0					
ANR	1406365	Identifier	p		1406133	0					
ANR	1406366	PrimaryExpression	2		1406133	1					
ANR	1406367	PrimaryExpression	'\\\\'		1406133	1					
ANR	1406368	ExpressionStatement	p [ 3 ] = '\\\\'	127:8:3814:3825	1406133	3	True				
ANR	1406369	AssignmentExpression	p [ 3 ] = '\\\\'		1406133	0		=			
ANR	1406370	ArrayIndexing	p [ 3 ]		1406133	0					
ANR	1406371	Identifier	p		1406133	0					
ANR	1406372	PrimaryExpression	3		1406133	1					
ANR	1406373	PrimaryExpression	'\\\\'		1406133	1					
ANR	1406374	ExpressionStatement	p [ 4 ] = ']'	128:8:3835:3845	1406133	4	True				
ANR	1406375	AssignmentExpression	p [ 4 ] = ']'		1406133	0		=			
ANR	1406376	ArrayIndexing	p [ 4 ]		1406133	0					
ANR	1406377	Identifier	p		1406133	0					
ANR	1406378	PrimaryExpression	4		1406133	1					
ANR	1406379	PrimaryExpression	']'		1406133	1					
ANR	1406380	ExpressionStatement	p [ 5 ] = '*'	129:8:3855:3865	1406133	5	True				
ANR	1406381	AssignmentExpression	p [ 5 ] = '*'		1406133	0		=			
ANR	1406382	ArrayIndexing	p [ 5 ]		1406133	0					
ANR	1406383	Identifier	p		1406133	0					
ANR	1406384	PrimaryExpression	5		1406133	1					
ANR	1406385	PrimaryExpression	'*'		1406133	1					
ANR	1406386	ExpressionStatement	p += 6	130:7:3874:3880	1406133	6	True				
ANR	1406387	AssignmentExpression	p += 6		1406133	0		+=			
ANR	1406388	Identifier	p		1406133	0					
ANR	1406389	PrimaryExpression	6		1406133	1					
ANR	1406390	BreakStatement	break ;	140:6:4051:4056	1406133	12	True				
ANR	1406391	Label	case '^' :	141:5:4063:4071	1406133	13	True				
ANR	1406392	Label	case '.' :	142:5:4078:4086	1406133	14	True				
ANR	1406393	Label	case '[' :	143:5:4093:4101	1406133	15	True				
ANR	1406394	Label	case ']' :	144:5:4108:4116	1406133	16	True				
ANR	1406395	Label	case '$' :	145:5:4123:4131	1406133	17	True				
ANR	1406396	Label	case '(' :	146:5:4138:4146	1406133	18	True				
ANR	1406397	Label	case ')' :	147:5:4153:4161	1406133	19	True				
ANR	1406398	Label	case '|' :	148:5:4168:4176	1406133	20	True				
ANR	1406399	Label	case '+' :	149:5:4183:4191	1406133	21	True				
ANR	1406400	Label	case '{' :	150:5:4198:4206	1406133	22	True				
ANR	1406401	Label	case '}' :	151:5:4213:4221	1406133	23	True				
ANR	1406402	Label	case '\\\\' :	152:5:4228:4237	1406133	24	True				
ANR	1406403	ExpressionStatement	* p ++ = '\\\\'	153:6:4245:4256	1406133	25	True				
ANR	1406404	AssignmentExpression	* p ++ = '\\\\'		1406133	0		=			
ANR	1406405	UnaryOperationExpression	* p ++		1406133	0					
ANR	1406406	UnaryOperator	*		1406133	0					
ANR	1406407	PostIncDecOperationExpression	p ++		1406133	1					
ANR	1406408	Identifier	p		1406133	0					
ANR	1406409	IncDec	++		1406133	1					
ANR	1406410	PrimaryExpression	'\\\\'		1406133	1					
ANR	1406411	Label	default :	155:5:4303:4310	1406133	26	True				
ANR	1406412	Identifier	default		1406133	0					
ANR	1406413	ExpressionStatement	* p ++ = * c ++	156:6:4318:4329	1406133	27	True				
ANR	1406414	AssignmentExpression	* p ++ = * c ++		1406133	0		=			
ANR	1406415	UnaryOperationExpression	* p ++		1406133	0					
ANR	1406416	UnaryOperator	*		1406133	0					
ANR	1406417	PostIncDecOperationExpression	p ++		1406133	1					
ANR	1406418	Identifier	p		1406133	0					
ANR	1406419	IncDec	++		1406133	1					
ANR	1406420	UnaryOperationExpression	* c ++		1406133	1					
ANR	1406421	UnaryOperator	*		1406133	0					
ANR	1406422	PostIncDecOperationExpression	c ++		1406133	1					
ANR	1406423	Identifier	c		1406133	0					
ANR	1406424	IncDec	++		1406133	1					
ANR	1406425	IfStatement	if ( * c || i == blacklist -> pos - 1 )		1406133	2					
ANR	1406426	Condition	* c || i == blacklist -> pos - 1	161:6:4353:4381	1406133	0	True				
ANR	1406427	OrExpression	* c || i == blacklist -> pos - 1		1406133	0		||			
ANR	1406428	UnaryOperationExpression	* c		1406133	0					
ANR	1406429	UnaryOperator	*		1406133	0					
ANR	1406430	Identifier	c		1406133	1					
ANR	1406431	EqualityExpression	i == blacklist -> pos - 1		1406133	1		==			
ANR	1406432	Identifier	i		1406133	0					
ANR	1406433	AdditiveExpression	blacklist -> pos - 1		1406133	1		-			
ANR	1406434	PtrMemberAccess	blacklist -> pos		1406133	0					
ANR	1406435	Identifier	blacklist		1406133	0					
ANR	1406436	Identifier	pos		1406133	1					
ANR	1406437	PrimaryExpression	1		1406133	1					
ANR	1406438	CompoundStatement		87:37:1719:1719	1406133	1					
ANR	1406439	IfStatement	if ( * c )		1406133	0					
ANR	1406440	Condition	* c	162:7:4393:4394	1406133	0	True				
ANR	1406441	UnaryOperationExpression	* c		1406133	0					
ANR	1406442	UnaryOperator	*		1406133	0					
ANR	1406443	Identifier	c		1406133	1					
ANR	1406444	CompoundStatement		88:11:1732:1732	1406133	1					
ANR	1406445	IfStatement	if ( ! backtrack )		1406133	0					
ANR	1406446	Condition	! backtrack	163:8:4407:4416	1406133	0	True				
ANR	1406447	UnaryOperationExpression	! backtrack		1406133	0					
ANR	1406448	UnaryOperator	!		1406133	0					
ANR	1406449	Identifier	backtrack		1406133	1					
ANR	1406450	CompoundStatement		89:20:1754:1754	1406133	1					
ANR	1406451	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_ERROR , ""Too long blacklist entry\\n"" )"	164:5:4426:4489	1406133	0	True				
ANR	1406452	CallExpression	"zend_accel_error ( ACCEL_LOG_ERROR , ""Too long blacklist entry\\n"" )"		1406133	0					
ANR	1406453	Callee	zend_accel_error		1406133	0					
ANR	1406454	Identifier	zend_accel_error		1406133	0					
ANR	1406455	ArgumentList	ACCEL_LOG_ERROR		1406133	1					
ANR	1406456	Argument	ACCEL_LOG_ERROR		1406133	0					
ANR	1406457	Identifier	ACCEL_LOG_ERROR		1406133	0					
ANR	1406458	Argument	"""Too long blacklist entry\\n"""		1406133	1					
ANR	1406459	PrimaryExpression	"""Too long blacklist entry\\n"""		1406133	0					
ANR	1406460	ExpressionStatement	p = backtrack	166:4:4501:4514	1406133	1	True				
ANR	1406461	AssignmentExpression	p = backtrack		1406133	0		=			
ANR	1406462	Identifier	p		1406133	0					
ANR	1406463	Identifier	backtrack		1406133	1					
ANR	1406464	ElseStatement	else		1406133	0					
ANR	1406465	CompoundStatement		93:10:1861:1861	1406133	0					
ANR	1406466	ExpressionStatement	i ++	168:4:4532:4535	1406133	0	True				
ANR	1406467	PostIncDecOperationExpression	i ++		1406133	0					
ANR	1406468	Identifier	i		1406133	0					
ANR	1406469	IncDec	++		1406133	1					
ANR	1406470	ExpressionStatement	* p ++ = ')'	170:3:4545:4555	1406133	1	True				
ANR	1406471	AssignmentExpression	* p ++ = ')'		1406133	0		=			
ANR	1406472	UnaryOperationExpression	* p ++		1406133	0					
ANR	1406473	UnaryOperator	*		1406133	0					
ANR	1406474	PostIncDecOperationExpression	p ++		1406133	1					
ANR	1406475	Identifier	p		1406133	0					
ANR	1406476	IncDec	++		1406133	1					
ANR	1406477	PrimaryExpression	')'		1406133	1					
ANR	1406478	ExpressionStatement	* p ++ = '\\0'	171:3:4560:4571	1406133	2	True				
ANR	1406479	AssignmentExpression	* p ++ = '\\0'		1406133	0		=			
ANR	1406480	UnaryOperationExpression	* p ++		1406133	0					
ANR	1406481	UnaryOperator	*		1406133	0					
ANR	1406482	PostIncDecOperationExpression	p ++		1406133	1					
ANR	1406483	Identifier	p		1406133	0					
ANR	1406484	IncDec	++		1406133	1					
ANR	1406485	PrimaryExpression	'\\0'		1406133	1					
ANR	1406486	ExpressionStatement	it = ( zend_regexp_list * ) malloc ( sizeof ( zend_regexp_list ) )	173:3:4577:4633	1406133	3	True				
ANR	1406487	AssignmentExpression	it = ( zend_regexp_list * ) malloc ( sizeof ( zend_regexp_list ) )		1406133	0		=			
ANR	1406488	Identifier	it		1406133	0					
ANR	1406489	CastExpression	( zend_regexp_list * ) malloc ( sizeof ( zend_regexp_list ) )		1406133	1					
ANR	1406490	CastTarget	zend_regexp_list *		1406133	0					
ANR	1406491	CallExpression	malloc ( sizeof ( zend_regexp_list ) )		1406133	1					
ANR	1406492	Callee	malloc		1406133	0					
ANR	1406493	Identifier	malloc		1406133	0					
ANR	1406494	ArgumentList	sizeof ( zend_regexp_list )		1406133	1					
ANR	1406495	Argument	sizeof ( zend_regexp_list )		1406133	0					
ANR	1406496	SizeofExpression	sizeof ( zend_regexp_list )		1406133	0					
ANR	1406497	Sizeof	sizeof		1406133	0					
ANR	1406498	SizeofOperand	zend_regexp_list		1406133	1					
ANR	1406499	IfStatement	if ( ! it )		1406133	4					
ANR	1406500	Condition	! it	174:7:4642:4644	1406133	0	True				
ANR	1406501	UnaryOperationExpression	! it		1406133	0					
ANR	1406502	UnaryOperator	!		1406133	0					
ANR	1406503	Identifier	it		1406133	1					
ANR	1406504	CompoundStatement		100:12:1982:1982	1406133	1					
ANR	1406505	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_ERROR , ""malloc() failed\\n"" )"	175:4:4653:4707	1406133	0	True				
ANR	1406506	CallExpression	"zend_accel_error ( ACCEL_LOG_ERROR , ""malloc() failed\\n"" )"		1406133	0					
ANR	1406507	Callee	zend_accel_error		1406133	0					
ANR	1406508	Identifier	zend_accel_error		1406133	0					
ANR	1406509	ArgumentList	ACCEL_LOG_ERROR		1406133	1					
ANR	1406510	Argument	ACCEL_LOG_ERROR		1406133	0					
ANR	1406511	Identifier	ACCEL_LOG_ERROR		1406133	0					
ANR	1406512	Argument	"""malloc() failed\\n"""		1406133	1					
ANR	1406513	PrimaryExpression	"""malloc() failed\\n"""		1406133	0					
ANR	1406514	ReturnStatement	return ;	176:4:4713:4719	1406133	1	True				
ANR	1406515	ExpressionStatement	it -> next = NULL	178:3:4729:4744	1406133	5	True				
ANR	1406516	AssignmentExpression	it -> next = NULL		1406133	0		=			
ANR	1406517	PtrMemberAccess	it -> next		1406133	0					
ANR	1406518	Identifier	it		1406133	0					
ANR	1406519	Identifier	next		1406133	1					
ANR	1406520	Identifier	NULL		1406133	1					
ANR	1406521	IfStatement	"if ( ( it -> re = pcre_compile ( regexp , PCRE_NO_AUTO_CAPTURE , & pcre_error , & pcre_error_offset , 0 ) ) == NULL )"		1406133	6					
ANR	1406522	Condition	"( it -> re = pcre_compile ( regexp , PCRE_NO_AUTO_CAPTURE , & pcre_error , & pcre_error_offset , 0 ) ) == NULL"	180:7:4754:4850	1406133	0	True				
ANR	1406523	EqualityExpression	"( it -> re = pcre_compile ( regexp , PCRE_NO_AUTO_CAPTURE , & pcre_error , & pcre_error_offset , 0 ) ) == NULL"		1406133	0		==			
ANR	1406524	AssignmentExpression	"it -> re = pcre_compile ( regexp , PCRE_NO_AUTO_CAPTURE , & pcre_error , & pcre_error_offset , 0 )"		1406133	0		=			
ANR	1406525	PtrMemberAccess	it -> re		1406133	0					
ANR	1406526	Identifier	it		1406133	0					
ANR	1406527	Identifier	re		1406133	1					
ANR	1406528	CallExpression	"pcre_compile ( regexp , PCRE_NO_AUTO_CAPTURE , & pcre_error , & pcre_error_offset , 0 )"		1406133	1					
ANR	1406529	Callee	pcre_compile		1406133	0					
ANR	1406530	Identifier	pcre_compile		1406133	0					
ANR	1406531	ArgumentList	regexp		1406133	1					
ANR	1406532	Argument	regexp		1406133	0					
ANR	1406533	Identifier	regexp		1406133	0					
ANR	1406534	Argument	PCRE_NO_AUTO_CAPTURE		1406133	1					
ANR	1406535	Identifier	PCRE_NO_AUTO_CAPTURE		1406133	0					
ANR	1406536	Argument	& pcre_error		1406133	2					
ANR	1406537	UnaryOperationExpression	& pcre_error		1406133	0					
ANR	1406538	UnaryOperator	&		1406133	0					
ANR	1406539	Identifier	pcre_error		1406133	1					
ANR	1406540	Argument	& pcre_error_offset		1406133	3					
ANR	1406541	UnaryOperationExpression	& pcre_error_offset		1406133	0					
ANR	1406542	UnaryOperator	&		1406133	0					
ANR	1406543	Identifier	pcre_error_offset		1406133	1					
ANR	1406544	Argument	0		1406133	4					
ANR	1406545	PrimaryExpression	0		1406133	0					
ANR	1406546	Identifier	NULL		1406133	1					
ANR	1406547	CompoundStatement		106:106:2188:2188	1406133	1					
ANR	1406548	ExpressionStatement	"blacklist_report_regexp_error ( pcre_error , pcre_error_offset )"	181:4:4859:4919	1406133	0	True				
ANR	1406549	CallExpression	"blacklist_report_regexp_error ( pcre_error , pcre_error_offset )"		1406133	0					
ANR	1406550	Callee	blacklist_report_regexp_error		1406133	0					
ANR	1406551	Identifier	blacklist_report_regexp_error		1406133	0					
ANR	1406552	ArgumentList	pcre_error		1406133	1					
ANR	1406553	Argument	pcre_error		1406133	0					
ANR	1406554	Identifier	pcre_error		1406133	0					
ANR	1406555	Argument	pcre_error_offset		1406133	1					
ANR	1406556	Identifier	pcre_error_offset		1406133	0					
ANR	1406557	ExpressionStatement	p = regexp + 2	184:3:4969:4983	1406133	7	True				
ANR	1406558	AssignmentExpression	p = regexp + 2		1406133	0		=			
ANR	1406559	Identifier	p		1406133	0					
ANR	1406560	AdditiveExpression	regexp + 2		1406133	1		+			
ANR	1406561	Identifier	regexp		1406133	0					
ANR	1406562	PrimaryExpression	2		1406133	1					
ANR	1406563	ExpressionStatement	* regexp_list_it = it	185:3:4988:5008	1406133	8	True				
ANR	1406564	AssignmentExpression	* regexp_list_it = it		1406133	0		=			
ANR	1406565	UnaryOperationExpression	* regexp_list_it		1406133	0					
ANR	1406566	UnaryOperator	*		1406133	0					
ANR	1406567	Identifier	regexp_list_it		1406133	1					
ANR	1406568	Identifier	it		1406133	1					
ANR	1406569	ExpressionStatement	regexp_list_it = & it -> next	186:3:5013:5039	1406133	9	True				
ANR	1406570	AssignmentExpression	regexp_list_it = & it -> next		1406133	0		=			
ANR	1406571	Identifier	regexp_list_it		1406133	0					
ANR	1406572	UnaryOperationExpression	& it -> next		1406133	1					
ANR	1406573	UnaryOperator	&		1406133	0					
ANR	1406574	PtrMemberAccess	it -> next		1406133	1					
ANR	1406575	Identifier	it		1406133	0					
ANR	1406576	Identifier	next		1406133	1					
ANR	1406577	ElseStatement	else		1406133	0					
ANR	1406578	CompoundStatement		113:9:2385:2385	1406133	0					
ANR	1406579	ExpressionStatement	backtrack = p	188:3:5055:5068	1406133	0	True				
ANR	1406580	AssignmentExpression	backtrack = p		1406133	0		=			
ANR	1406581	Identifier	backtrack		1406133	0					
ANR	1406582	Identifier	p		1406133	1					
ANR	1406583	ExpressionStatement	* p ++ = '|'	189:3:5073:5083	1406133	1	True				
ANR	1406584	AssignmentExpression	* p ++ = '|'		1406133	0		=			
ANR	1406585	UnaryOperationExpression	* p ++		1406133	0					
ANR	1406586	UnaryOperator	*		1406133	0					
ANR	1406587	PostIncDecOperationExpression	p ++		1406133	1					
ANR	1406588	Identifier	p		1406133	0					
ANR	1406589	IncDec	++		1406133	1					
ANR	1406590	PrimaryExpression	'|'		1406133	1					
ANR	1406591	ExpressionStatement	i ++	190:3:5088:5091	1406133	2	True				
ANR	1406592	PostIncDecOperationExpression	i ++		1406133	0					
ANR	1406593	Identifier	i		1406133	0					
ANR	1406594	IncDec	++		1406133	1					
ANR	1406595	ReturnType	static void		1406133	1					
ANR	1406596	Identifier	zend_accel_blacklist_update_regexp		1406133	2					
ANR	1406597	ParameterList	zend_blacklist * blacklist		1406133	3					
ANR	1406598	Parameter	zend_blacklist * blacklist	74:47:2637:2661	1406133	0	True				
ANR	1406599	ParameterType	zend_blacklist *		1406133	0					
ANR	1406600	Identifier	blacklist		1406133	1					
ANR	1406601	CFGEntryNode	ENTRY		1406133		True				
ANR	1406602	CFGExitNode	EXIT		1406133		True				
ANR	1406603	Symbol	* blacklist		1406133						
ANR	1406604	Symbol	regexp		1406133						
ANR	1406605	Symbol	blacklist -> pos		1406133						
ANR	1406606	Symbol	blacklist -> entries		1406133						
ANR	1406607	Symbol	blacklist -> entries [ i ] . path		1406133						
ANR	1406608	Symbol	pcre_compile		1406133						
ANR	1406609	Symbol	it -> next		1406133						
ANR	1406610	Symbol	regexp_list_it		1406133						
ANR	1406611	Symbol	end		1406133						
ANR	1406612	Symbol	blacklist -> entries [ i ] . path_length		1406133						
ANR	1406613	Symbol	ACCEL_LOG_ERROR		1406133						
ANR	1406614	Symbol	& pcre_error		1406133						
ANR	1406615	Symbol	malloc		1406133						
ANR	1406616	Symbol	NULL		1406133						
ANR	1406617	Symbol	c		1406133						
ANR	1406618	Symbol	* regexp_list_it		1406133						
ANR	1406619	Symbol	* p ++		1406133						
ANR	1406620	Symbol	* c ++		1406133						
ANR	1406621	Symbol	blacklist		1406133						
ANR	1406622	Symbol	pcre_error_offset		1406133						
ANR	1406623	Symbol	i		1406133						
ANR	1406624	Symbol	* * blacklist		1406133						
ANR	1406625	Symbol	it		1406133						
ANR	1406626	Symbol	& blacklist -> regexp_list		1406133						
ANR	1406627	Symbol	* blacklist -> entries		1406133						
ANR	1406628	Symbol	* c		1406133						
ANR	1406629	Symbol	it -> re		1406133						
ANR	1406630	Symbol	p		1406133						
ANR	1406631	Symbol	& it -> next		1406133						
ANR	1406632	Symbol	* it		1406133						
ANR	1406633	Symbol	* i		1406133						
ANR	1406634	Symbol	& pcre_error_offset		1406133						
ANR	1406635	Symbol	* p		1406133						
ANR	1406636	Symbol	pcre_error		1406133						
ANR	1406637	Symbol	PCRE_NO_AUTO_CAPTURE		1406133						
ANR	1406638	Symbol	backtrack		1406133						
ANR	1406639	Symbol	* regexp		1406133						
ANR	1406640	Function	zend_accel_blacklist_shutdown	195:0:5103:5536							
ANR	1406641	FunctionDef	zend_accel_blacklist_shutdown (zend_blacklist * blacklist)		1406640	0					
ANR	1406642	CompoundStatement		196:0:5165:5536	1406640	0					
ANR	1406643	IdentifierDeclStatement	"zend_blacklist_entry * p = blacklist -> entries , * end = blacklist -> entries + blacklist -> pos ;"	197:1:5168:5256	1406640	0	True				
ANR	1406644	IdentifierDecl	* p = blacklist -> entries		1406640	0					
ANR	1406645	IdentifierDeclType	zend_blacklist_entry *		1406640	0					
ANR	1406646	Identifier	p		1406640	1					
ANR	1406647	AssignmentExpression	* p = blacklist -> entries		1406640	2		=			
ANR	1406648	Identifier	p		1406640	0					
ANR	1406649	PtrMemberAccess	blacklist -> entries		1406640	1					
ANR	1406650	Identifier	blacklist		1406640	0					
ANR	1406651	Identifier	entries		1406640	1					
ANR	1406652	IdentifierDecl	* end = blacklist -> entries + blacklist -> pos		1406640	1					
ANR	1406653	IdentifierDeclType	zend_blacklist_entry *		1406640	0					
ANR	1406654	Identifier	end		1406640	1					
ANR	1406655	AssignmentExpression	* end = blacklist -> entries + blacklist -> pos		1406640	2		=			
ANR	1406656	Identifier	end		1406640	0					
ANR	1406657	AdditiveExpression	blacklist -> entries + blacklist -> pos		1406640	1		+			
ANR	1406658	PtrMemberAccess	blacklist -> entries		1406640	0					
ANR	1406659	Identifier	blacklist		1406640	0					
ANR	1406660	Identifier	entries		1406640	1					
ANR	1406661	PtrMemberAccess	blacklist -> pos		1406640	1					
ANR	1406662	Identifier	blacklist		1406640	0					
ANR	1406663	Identifier	pos		1406640	1					
ANR	1406664	WhileStatement	while ( p < end )		1406640	1					
ANR	1406665	Condition	p < end	199:8:5267:5271	1406640	0	True				
ANR	1406666	RelationalExpression	p < end		1406640	0		<			
ANR	1406667	Identifier	p		1406640	0					
ANR	1406668	Identifier	end		1406640	1					
ANR	1406669	CompoundStatement		4:15:108:108	1406640	1					
ANR	1406670	ExpressionStatement	free ( p -> path )	200:2:5278:5291	1406640	0	True				
ANR	1406671	CallExpression	free ( p -> path )		1406640	0					
ANR	1406672	Callee	free		1406640	0					
ANR	1406673	Identifier	free		1406640	0					
ANR	1406674	ArgumentList	p -> path		1406640	1					
ANR	1406675	Argument	p -> path		1406640	0					
ANR	1406676	PtrMemberAccess	p -> path		1406640	0					
ANR	1406677	Identifier	p		1406640	0					
ANR	1406678	Identifier	path		1406640	1					
ANR	1406679	ExpressionStatement	p ++	201:2:5295:5298	1406640	1	True				
ANR	1406680	PostIncDecOperationExpression	p ++		1406640	0					
ANR	1406681	Identifier	p		1406640	0					
ANR	1406682	IncDec	++		1406640	1					
ANR	1406683	ExpressionStatement	free ( blacklist -> entries )	203:1:5304:5328	1406640	2	True				
ANR	1406684	CallExpression	free ( blacklist -> entries )		1406640	0					
ANR	1406685	Callee	free		1406640	0					
ANR	1406686	Identifier	free		1406640	0					
ANR	1406687	ArgumentList	blacklist -> entries		1406640	1					
ANR	1406688	Argument	blacklist -> entries		1406640	0					
ANR	1406689	PtrMemberAccess	blacklist -> entries		1406640	0					
ANR	1406690	Identifier	blacklist		1406640	0					
ANR	1406691	Identifier	entries		1406640	1					
ANR	1406692	ExpressionStatement	blacklist -> entries = NULL	204:1:5331:5356	1406640	3	True				
ANR	1406693	AssignmentExpression	blacklist -> entries = NULL		1406640	0		=			
ANR	1406694	PtrMemberAccess	blacklist -> entries		1406640	0					
ANR	1406695	Identifier	blacklist		1406640	0					
ANR	1406696	Identifier	entries		1406640	1					
ANR	1406697	Identifier	NULL		1406640	1					
ANR	1406698	IfStatement	if ( blacklist -> regexp_list )		1406640	4					
ANR	1406699	Condition	blacklist -> regexp_list	205:5:5363:5384	1406640	0	True				
ANR	1406700	PtrMemberAccess	blacklist -> regexp_list		1406640	0					
ANR	1406701	Identifier	blacklist		1406640	0					
ANR	1406702	Identifier	regexp_list		1406640	1					
ANR	1406703	CompoundStatement		11:2:225:277	1406640	1					
ANR	1406704	IdentifierDeclStatement	"zend_regexp_list * temp , * it = blacklist -> regexp_list ;"	206:2:5391:5443	1406640	0	True				
ANR	1406705	IdentifierDecl	* temp		1406640	0					
ANR	1406706	IdentifierDeclType	zend_regexp_list *		1406640	0					
ANR	1406707	Identifier	temp		1406640	1					
ANR	1406708	IdentifierDecl	* it = blacklist -> regexp_list		1406640	1					
ANR	1406709	IdentifierDeclType	zend_regexp_list *		1406640	0					
ANR	1406710	Identifier	it		1406640	1					
ANR	1406711	AssignmentExpression	* it = blacklist -> regexp_list		1406640	2		=			
ANR	1406712	Identifier	it		1406640	0					
ANR	1406713	PtrMemberAccess	blacklist -> regexp_list		1406640	1					
ANR	1406714	Identifier	blacklist		1406640	0					
ANR	1406715	Identifier	regexp_list		1406640	1					
ANR	1406716	WhileStatement	while ( it )		1406640	1					
ANR	1406717	Condition	it	207:9:5454:5455	1406640	0	True				
ANR	1406718	Identifier	it		1406640	0					
ANR	1406719	CompoundStatement		12:13:292:292	1406640	1					
ANR	1406720	ExpressionStatement	pcre_free ( it -> re )	208:3:5463:5480	1406640	0	True				
ANR	1406721	CallExpression	pcre_free ( it -> re )		1406640	0					
ANR	1406722	Callee	pcre_free		1406640	0					
ANR	1406723	Identifier	pcre_free		1406640	0					
ANR	1406724	ArgumentList	it -> re		1406640	1					
ANR	1406725	Argument	it -> re		1406640	0					
ANR	1406726	PtrMemberAccess	it -> re		1406640	0					
ANR	1406727	Identifier	it		1406640	0					
ANR	1406728	Identifier	re		1406640	1					
ANR	1406729	ExpressionStatement	temp = it	209:3:5485:5494	1406640	1	True				
ANR	1406730	AssignmentExpression	temp = it		1406640	0		=			
ANR	1406731	Identifier	temp		1406640	0					
ANR	1406732	Identifier	it		1406640	1					
ANR	1406733	ExpressionStatement	it = it -> next	210:3:5499:5512	1406640	2	True				
ANR	1406734	AssignmentExpression	it = it -> next		1406640	0		=			
ANR	1406735	Identifier	it		1406640	0					
ANR	1406736	PtrMemberAccess	it -> next		1406640	1					
ANR	1406737	Identifier	it		1406640	0					
ANR	1406738	Identifier	next		1406640	1					
ANR	1406739	ExpressionStatement	free ( temp )	211:3:5517:5527	1406640	3	True				
ANR	1406740	CallExpression	free ( temp )		1406640	0					
ANR	1406741	Callee	free		1406640	0					
ANR	1406742	Identifier	free		1406640	0					
ANR	1406743	ArgumentList	temp		1406640	1					
ANR	1406744	Argument	temp		1406640	0					
ANR	1406745	Identifier	temp		1406640	0					
ANR	1406746	ReturnType	void		1406640	1					
ANR	1406747	Identifier	zend_accel_blacklist_shutdown		1406640	2					
ANR	1406748	ParameterList	zend_blacklist * blacklist		1406640	3					
ANR	1406749	Parameter	zend_blacklist * blacklist	195:35:5138:5162	1406640	0	True				
ANR	1406750	ParameterType	zend_blacklist *		1406640	0					
ANR	1406751	Identifier	blacklist		1406640	1					
ANR	1406752	CFGEntryNode	ENTRY		1406640		True				
ANR	1406753	CFGExitNode	EXIT		1406640		True				
ANR	1406754	Symbol	* blacklist		1406640						
ANR	1406755	Symbol	blacklist -> pos		1406640						
ANR	1406756	Symbol	temp		1406640						
ANR	1406757	Symbol	NULL		1406640						
ANR	1406758	Symbol	blacklist -> entries		1406640						
ANR	1406759	Symbol	blacklist		1406640						
ANR	1406760	Symbol	it		1406640						
ANR	1406761	Symbol	it -> re		1406640						
ANR	1406762	Symbol	it -> next		1406640						
ANR	1406763	Symbol	p		1406640						
ANR	1406764	Symbol	* it		1406640						
ANR	1406765	Symbol	blacklist -> regexp_list		1406640						
ANR	1406766	Symbol	p -> path		1406640						
ANR	1406767	Symbol	end		1406640						
ANR	1406768	Symbol	* p		1406640						
ANR	1406769	Function	zend_accel_blacklist_allocate	216:0:5539:5833							
ANR	1406770	FunctionDef	zend_accel_blacklist_allocate (zend_blacklist * blacklist)		1406769	0					
ANR	1406771	CompoundStatement		217:0:5615:5833	1406769	0					
ANR	1406772	IfStatement	if ( blacklist -> pos == blacklist -> size )		1406769	0					
ANR	1406773	Condition	blacklist -> pos == blacklist -> size	218:5:5622:5654	1406769	0	True				
ANR	1406774	EqualityExpression	blacklist -> pos == blacklist -> size		1406769	0		==			
ANR	1406775	PtrMemberAccess	blacklist -> pos		1406769	0					
ANR	1406776	Identifier	blacklist		1406769	0					
ANR	1406777	Identifier	pos		1406769	1					
ANR	1406778	PtrMemberAccess	blacklist -> size		1406769	1					
ANR	1406779	Identifier	blacklist		1406769	0					
ANR	1406780	Identifier	size		1406769	1					
ANR	1406781	CompoundStatement		2:40:41:41	1406769	1					
ANR	1406782	ExpressionStatement	blacklist -> size += ZEND_BLACKLIST_BLOCK_SIZE	219:2:5661:5705	1406769	0	True				
ANR	1406783	AssignmentExpression	blacklist -> size += ZEND_BLACKLIST_BLOCK_SIZE		1406769	0		+=			
ANR	1406784	PtrMemberAccess	blacklist -> size		1406769	0					
ANR	1406785	Identifier	blacklist		1406769	0					
ANR	1406786	Identifier	size		1406769	1					
ANR	1406787	Identifier	ZEND_BLACKLIST_BLOCK_SIZE		1406769	1					
ANR	1406788	ExpressionStatement	"blacklist -> entries = ( zend_blacklist_entry * ) realloc ( blacklist -> entries , sizeof ( zend_blacklist_entry ) * blacklist -> size )"	220:2:5709:5828	1406769	1	True				
ANR	1406789	AssignmentExpression	"blacklist -> entries = ( zend_blacklist_entry * ) realloc ( blacklist -> entries , sizeof ( zend_blacklist_entry ) * blacklist -> size )"		1406769	0		=			
ANR	1406790	PtrMemberAccess	blacklist -> entries		1406769	0					
ANR	1406791	Identifier	blacklist		1406769	0					
ANR	1406792	Identifier	entries		1406769	1					
ANR	1406793	CastExpression	"( zend_blacklist_entry * ) realloc ( blacklist -> entries , sizeof ( zend_blacklist_entry ) * blacklist -> size )"		1406769	1					
ANR	1406794	CastTarget	zend_blacklist_entry *		1406769	0					
ANR	1406795	CallExpression	"realloc ( blacklist -> entries , sizeof ( zend_blacklist_entry ) * blacklist -> size )"		1406769	1					
ANR	1406796	Callee	realloc		1406769	0					
ANR	1406797	Identifier	realloc		1406769	0					
ANR	1406798	ArgumentList	blacklist -> entries		1406769	1					
ANR	1406799	Argument	blacklist -> entries		1406769	0					
ANR	1406800	PtrMemberAccess	blacklist -> entries		1406769	0					
ANR	1406801	Identifier	blacklist		1406769	0					
ANR	1406802	Identifier	entries		1406769	1					
ANR	1406803	Argument	sizeof ( zend_blacklist_entry ) * blacklist -> size		1406769	1					
ANR	1406804	MultiplicativeExpression	sizeof ( zend_blacklist_entry ) * blacklist -> size		1406769	0		*			
ANR	1406805	SizeofExpression	sizeof ( zend_blacklist_entry )		1406769	0					
ANR	1406806	Sizeof	sizeof		1406769	0					
ANR	1406807	SizeofOperand	zend_blacklist_entry		1406769	1					
ANR	1406808	PtrMemberAccess	blacklist -> size		1406769	1					
ANR	1406809	Identifier	blacklist		1406769	0					
ANR	1406810	Identifier	size		1406769	1					
ANR	1406811	ReturnType	static inline void		1406769	1					
ANR	1406812	Identifier	zend_accel_blacklist_allocate		1406769	2					
ANR	1406813	ParameterList	zend_blacklist * blacklist		1406769	3					
ANR	1406814	Parameter	zend_blacklist * blacklist	216:49:5588:5612	1406769	0	True				
ANR	1406815	ParameterType	zend_blacklist *		1406769	0					
ANR	1406816	Identifier	blacklist		1406769	1					
ANR	1406817	CFGEntryNode	ENTRY		1406769		True				
ANR	1406818	CFGExitNode	EXIT		1406769		True				
ANR	1406819	Symbol	* blacklist		1406769						
ANR	1406820	Symbol	blacklist -> pos		1406769						
ANR	1406821	Symbol	blacklist -> size		1406769						
ANR	1406822	Symbol	ZEND_BLACKLIST_BLOCK_SIZE		1406769						
ANR	1406823	Symbol	blacklist -> entries		1406769						
ANR	1406824	Symbol	blacklist		1406769						
ANR	1406825	Symbol	realloc		1406769						
ANR	1406826	DeclStmt									
ANR	1406827	Decl							char	char [ MAXPATHLEN + 1 ]	buf
ANR	1406828	Decl							char	char [ MAXPATHLEN + 1 ]	real_path
ANR	1406829	Decl							char	char *	blacklist_path
ANR	1406830	DeclStmt									
ANR	1406831	Decl							FILE	FILE *	fp
ANR	1406832	DeclStmt									
ANR	1406833	Decl							int	int	path_length
ANR	1406834	Decl							int	int	blacklist_path_length
ANR	1406835	DeclStmt									
ANR	1406836	Decl							char	char *	path_dup
ANR	1406837	Decl							char	char *	pbuf
ANR	1406838	Function	zend_accel_blacklist_load	311:0:8104:8651							
ANR	1406839	FunctionDef	"zend_accel_blacklist_load (zend_blacklist * blacklist , char * filename)"		1406838	0					
ANR	1406840	CompoundStatement		312:0:8178:8651	1406838	0					
ANR	1406841	IdentifierDeclStatement	glob_t globbuf ;	313:1:8181:8195	1406838	0	True				
ANR	1406842	IdentifierDecl	globbuf		1406838	0					
ANR	1406843	IdentifierDeclType	glob_t		1406838	0					
ANR	1406844	Identifier	globbuf		1406838	1					
ANR	1406845	IdentifierDeclStatement	int ret ;	314:1:8198:8208	1406838	1	True				
ANR	1406846	IdentifierDecl	ret		1406838	0					
ANR	1406847	IdentifierDeclType	int		1406838	0					
ANR	1406848	Identifier	ret		1406838	1					
ANR	1406849	IdentifierDeclStatement	unsigned int i ;	315:1:8211:8225	1406838	2	True				
ANR	1406850	IdentifierDecl	i		1406838	0					
ANR	1406851	IdentifierDeclType	unsigned int		1406838	0					
ANR	1406852	Identifier	i		1406838	1					
ANR	1406853	ExpressionStatement	"memset ( & globbuf , 0 , sizeof ( glob_t ) )"	317:1:8229:8264	1406838	3	True				
ANR	1406854	CallExpression	"memset ( & globbuf , 0 , sizeof ( glob_t ) )"		1406838	0					
ANR	1406855	Callee	memset		1406838	0					
ANR	1406856	Identifier	memset		1406838	0					
ANR	1406857	ArgumentList	& globbuf		1406838	1					
ANR	1406858	Argument	& globbuf		1406838	0					
ANR	1406859	UnaryOperationExpression	& globbuf		1406838	0					
ANR	1406860	UnaryOperator	&		1406838	0					
ANR	1406861	Identifier	globbuf		1406838	1					
ANR	1406862	Argument	0		1406838	1					
ANR	1406863	PrimaryExpression	0		1406838	0					
ANR	1406864	Argument	sizeof ( glob_t )		1406838	2					
ANR	1406865	SizeofExpression	sizeof ( glob_t )		1406838	0					
ANR	1406866	Sizeof	sizeof		1406838	0					
ANR	1406867	SizeofOperand	glob_t		1406838	1					
ANR	1406868	ExpressionStatement	"ret = glob ( filename , 0 , NULL , & globbuf )"	319:1:8268:8307	1406838	4	True				
ANR	1406869	AssignmentExpression	"ret = glob ( filename , 0 , NULL , & globbuf )"		1406838	0		=			
ANR	1406870	Identifier	ret		1406838	0					
ANR	1406871	CallExpression	"glob ( filename , 0 , NULL , & globbuf )"		1406838	1					
ANR	1406872	Callee	glob		1406838	0					
ANR	1406873	Identifier	glob		1406838	0					
ANR	1406874	ArgumentList	filename		1406838	1					
ANR	1406875	Argument	filename		1406838	0					
ANR	1406876	Identifier	filename		1406838	0					
ANR	1406877	Argument	0		1406838	1					
ANR	1406878	PrimaryExpression	0		1406838	0					
ANR	1406879	Argument	NULL		1406838	2					
ANR	1406880	Identifier	NULL		1406838	0					
ANR	1406881	Argument	& globbuf		1406838	3					
ANR	1406882	UnaryOperationExpression	& globbuf		1406838	0					
ANR	1406883	UnaryOperator	&		1406838	0					
ANR	1406884	Identifier	globbuf		1406838	1					
ANR	1406885	IfStatement	if ( ret == GLOB_NOMATCH || ! globbuf . gl_pathc )		1406838	5					
ANR	1406886	Condition	ret == GLOB_NOMATCH || ! globbuf . gl_pathc	321:5:8334:8373	1406838	0	True				
ANR	1406887	OrExpression	ret == GLOB_NOMATCH || ! globbuf . gl_pathc		1406838	0		||			
ANR	1406888	EqualityExpression	ret == GLOB_NOMATCH		1406838	0		==			
ANR	1406889	Identifier	ret		1406838	0					
ANR	1406890	Identifier	GLOB_NOMATCH		1406838	1					
ANR	1406891	UnaryOperationExpression	! globbuf . gl_pathc		1406838	1					
ANR	1406892	UnaryOperator	!		1406838	0					
ANR	1406893	MemberAccess	globbuf . gl_pathc		1406838	1					
ANR	1406894	Identifier	globbuf		1406838	0					
ANR	1406895	Identifier	gl_pathc		1406838	1					
ANR	1406896	CompoundStatement		10:47:197:197	1406838	1					
ANR	1406897	ExpressionStatement	"zend_accel_error ( ACCEL_LOG_WARNING , ""No blacklist file found matching: %s\\n"" , filename )"	325:2:8419:8506	1406838	0	True				
ANR	1406898	CallExpression	"zend_accel_error ( ACCEL_LOG_WARNING , ""No blacklist file found matching: %s\\n"" , filename )"		1406838	0					
ANR	1406899	Callee	zend_accel_error		1406838	0					
ANR	1406900	Identifier	zend_accel_error		1406838	0					
ANR	1406901	ArgumentList	ACCEL_LOG_WARNING		1406838	1					
ANR	1406902	Argument	ACCEL_LOG_WARNING		1406838	0					
ANR	1406903	Identifier	ACCEL_LOG_WARNING		1406838	0					
ANR	1406904	Argument	"""No blacklist file found matching: %s\\n"""		1406838	1					
ANR	1406905	PrimaryExpression	"""No blacklist file found matching: %s\\n"""		1406838	0					
ANR	1406906	Argument	filename		1406838	2					
ANR	1406907	Identifier	filename		1406838	0					
ANR	1406908	ElseStatement	else		1406838	0					
ANR	1406909	CompoundStatement		15:8:337:337	1406838	0					
ANR	1406910	ForStatement	for ( i = 0 ; i < globbuf . gl_pathc ; i ++ )		1406838	0					
ANR	1406911	ForInit	i = 0 ;	327:6:8524:8528	1406838	0	True				
ANR	1406912	AssignmentExpression	i = 0		1406838	0		=			
ANR	1406913	Identifier	i		1406838	0					
ANR	1406914	PrimaryExpression	0		1406838	1					
ANR	1406915	Condition	i < globbuf . gl_pathc	327:12:8530:8547	1406838	1	True				
ANR	1406916	RelationalExpression	i < globbuf . gl_pathc		1406838	0		<			
ANR	1406917	Identifier	i		1406838	0					
ANR	1406918	MemberAccess	globbuf . gl_pathc		1406838	1					
ANR	1406919	Identifier	globbuf		1406838	0					
ANR	1406920	Identifier	gl_pathc		1406838	1					
ANR	1406921	PostIncDecOperationExpression	i ++	327:32:8550:8552	1406838	2	True				
ANR	1406922	Identifier	i		1406838	0					
ANR	1406923	IncDec	++		1406838	1					
ANR	1406924	CompoundStatement		16:37:376:376	1406838	3					
ANR	1406925	ExpressionStatement	"zend_accel_blacklist_loadone ( blacklist , globbuf . gl_pathv [ i ] )"	328:3:8560:8620	1406838	0	True				
ANR	1406926	CallExpression	"zend_accel_blacklist_loadone ( blacklist , globbuf . gl_pathv [ i ] )"		1406838	0					
ANR	1406927	Callee	zend_accel_blacklist_loadone		1406838	0					
ANR	1406928	Identifier	zend_accel_blacklist_loadone		1406838	0					
ANR	1406929	ArgumentList	blacklist		1406838	1					
ANR	1406930	Argument	blacklist		1406838	0					
ANR	1406931	Identifier	blacklist		1406838	0					
ANR	1406932	Argument	globbuf . gl_pathv [ i ]		1406838	1					
ANR	1406933	ArrayIndexing	globbuf . gl_pathv [ i ]		1406838	0					
ANR	1406934	MemberAccess	globbuf . gl_pathv		1406838	0					
ANR	1406935	Identifier	globbuf		1406838	0					
ANR	1406936	Identifier	gl_pathv		1406838	1					
ANR	1406937	Identifier	i		1406838	1					
ANR	1406938	ExpressionStatement	globfree ( & globbuf )	330:2:8628:8646	1406838	1	True				
ANR	1406939	CallExpression	globfree ( & globbuf )		1406838	0					
ANR	1406940	Callee	globfree		1406838	0					
ANR	1406941	Identifier	globfree		1406838	0					
ANR	1406942	ArgumentList	& globbuf		1406838	1					
ANR	1406943	Argument	& globbuf		1406838	0					
ANR	1406944	UnaryOperationExpression	& globbuf		1406838	0					
ANR	1406945	UnaryOperator	&		1406838	0					
ANR	1406946	Identifier	globbuf		1406838	1					
ANR	1406947	ReturnType	void		1406838	1					
ANR	1406948	Identifier	zend_accel_blacklist_load		1406838	2					
ANR	1406949	ParameterList	"zend_blacklist * blacklist , char * filename"		1406838	3					
ANR	1406950	Parameter	zend_blacklist * blacklist	311:31:8135:8159	1406838	0	True				
ANR	1406951	ParameterType	zend_blacklist *		1406838	0					
ANR	1406952	Identifier	blacklist		1406838	1					
ANR	1406953	Parameter	char * filename	311:58:8162:8175	1406838	1	True				
ANR	1406954	ParameterType	char *		1406838	0					
ANR	1406955	Identifier	filename		1406838	1					
ANR	1406956	CFGEntryNode	ENTRY		1406838		True				
ANR	1406957	CFGExitNode	EXIT		1406838		True				
ANR	1406958	Symbol	ret		1406838						
ANR	1406959	Symbol	globbuf . gl_pathv		1406838						
ANR	1406960	Symbol	NULL		1406838						
ANR	1406961	Symbol	& globbuf		1406838						
ANR	1406962	Symbol	GLOB_NOMATCH		1406838						
ANR	1406963	Symbol	glob		1406838						
ANR	1406964	Symbol	blacklist		1406838						
ANR	1406965	Symbol	i		1406838						
ANR	1406966	Symbol	globbuf		1406838						
ANR	1406967	Symbol	* globbuf . gl_pathv		1406838						
ANR	1406968	Symbol	* globbuf		1406838						
ANR	1406969	Symbol	filename		1406838						
ANR	1406970	Symbol	* i		1406838						
ANR	1406971	Symbol	globbuf . gl_pathc		1406838						
ANR	1406972	Symbol	ACCEL_LOG_WARNING		1406838						
ANR	1406973	Function	zend_accel_blacklist_is_blacklisted	335:0:8661:9092							
ANR	1406974	FunctionDef	"zend_accel_blacklist_is_blacklisted (zend_blacklist * blacklist , char * verify_path)"		1406973	0					
ANR	1406975	CompoundStatement		336:0:8753:9092	1406973	0					
ANR	1406976	IdentifierDeclStatement	int ret = 0 ;	337:1:8756:8767	1406973	0	True				
ANR	1406977	IdentifierDecl	ret = 0		1406973	0					
ANR	1406978	IdentifierDeclType	int		1406973	0					
ANR	1406979	Identifier	ret		1406973	1					
ANR	1406980	AssignmentExpression	ret = 0		1406973	2		=			
ANR	1406981	Identifier	ret		1406973	0					
ANR	1406982	PrimaryExpression	0		1406973	1					
ANR	1406983	IdentifierDeclStatement	zend_regexp_list * regexp_list_it = blacklist -> regexp_list ;	338:1:8770:8827	1406973	1	True				
ANR	1406984	IdentifierDecl	* regexp_list_it = blacklist -> regexp_list		1406973	0					
ANR	1406985	IdentifierDeclType	zend_regexp_list *		1406973	0					
ANR	1406986	Identifier	regexp_list_it		1406973	1					
ANR	1406987	AssignmentExpression	* regexp_list_it = blacklist -> regexp_list		1406973	2		=			
ANR	1406988	Identifier	regexp_list_it		1406973	0					
ANR	1406989	PtrMemberAccess	blacklist -> regexp_list		1406973	1					
ANR	1406990	Identifier	blacklist		1406973	0					
ANR	1406991	Identifier	regexp_list		1406973	1					
ANR	1406992	IfStatement	if ( regexp_list_it == NULL )		1406973	2					
ANR	1406993	Condition	regexp_list_it == NULL	340:5:8835:8856	1406973	0	True				
ANR	1406994	EqualityExpression	regexp_list_it == NULL		1406973	0		==			
ANR	1406995	Identifier	regexp_list_it		1406973	0					
ANR	1406996	Identifier	NULL		1406973	1					
ANR	1406997	CompoundStatement		5:29:105:105	1406973	1					
ANR	1406998	ReturnStatement	return 0 ;	341:2:8863:8871	1406973	0	True				
ANR	1406999	PrimaryExpression	0		1406973	0					
ANR	1407000	WhileStatement	while ( regexp_list_it != NULL )		1406973	3					
ANR	1407001	Condition	regexp_list_it != NULL	343:8:8884:8905	1406973	0	True				
ANR	1407002	EqualityExpression	regexp_list_it != NULL		1406973	0		!=			
ANR	1407003	Identifier	regexp_list_it		1406973	0					
ANR	1407004	Identifier	NULL		1406973	1					
ANR	1407005	CompoundStatement		8:32:154:154	1406973	1					
ANR	1407006	IfStatement	"if ( pcre_exec ( regexp_list_it -> re , NULL , verify_path , strlen ( verify_path ) , 0 , 0 , NULL , 0 ) >= 0 )"		1406973	0					
ANR	1407007	Condition	"pcre_exec ( regexp_list_it -> re , NULL , verify_path , strlen ( verify_path ) , 0 , 0 , NULL , 0 ) >= 0"	344:6:8916:9004	1406973	0	True				
ANR	1407008	RelationalExpression	"pcre_exec ( regexp_list_it -> re , NULL , verify_path , strlen ( verify_path ) , 0 , 0 , NULL , 0 ) >= 0"		1406973	0		>=			
ANR	1407009	CallExpression	"pcre_exec ( regexp_list_it -> re , NULL , verify_path , strlen ( verify_path ) , 0 , 0 , NULL , 0 )"		1406973	0					
ANR	1407010	Callee	pcre_exec		1406973	0					
ANR	1407011	Identifier	pcre_exec		1406973	0					
ANR	1407012	ArgumentList	regexp_list_it -> re		1406973	1					
ANR	1407013	Argument	regexp_list_it -> re		1406973	0					
ANR	1407014	PtrMemberAccess	regexp_list_it -> re		1406973	0					
ANR	1407015	Identifier	regexp_list_it		1406973	0					
ANR	1407016	Identifier	re		1406973	1					
ANR	1407017	Argument	NULL		1406973	1					
ANR	1407018	Identifier	NULL		1406973	0					
ANR	1407019	Argument	verify_path		1406973	2					
ANR	1407020	Identifier	verify_path		1406973	0					
ANR	1407021	Argument	strlen ( verify_path )		1406973	3					
ANR	1407022	CallExpression	strlen ( verify_path )		1406973	0					
ANR	1407023	Callee	strlen		1406973	0					
ANR	1407024	Identifier	strlen		1406973	0					
ANR	1407025	ArgumentList	verify_path		1406973	1					
ANR	1407026	Argument	verify_path		1406973	0					
ANR	1407027	Identifier	verify_path		1406973	0					
ANR	1407028	Argument	0		1406973	4					
ANR	1407029	PrimaryExpression	0		1406973	0					
ANR	1407030	Argument	0		1406973	5					
ANR	1407031	PrimaryExpression	0		1406973	0					
ANR	1407032	Argument	NULL		1406973	6					
ANR	1407033	Identifier	NULL		1406973	0					
ANR	1407034	Argument	0		1406973	7					
ANR	1407035	PrimaryExpression	0		1406973	0					
ANR	1407036	PrimaryExpression	0		1406973	1					
ANR	1407037	CompoundStatement		9:97:253:253	1406973	1					
ANR	1407038	ExpressionStatement	ret = 1	345:3:9012:9019	1406973	0	True				
ANR	1407039	AssignmentExpression	ret = 1		1406973	0		=			
ANR	1407040	Identifier	ret		1406973	0					
ANR	1407041	PrimaryExpression	1		1406973	1					
ANR	1407042	BreakStatement	break ;	346:3:9024:9029	1406973	1	True				
ANR	1407043	ExpressionStatement	regexp_list_it = regexp_list_it -> next	348:2:9037:9074	1406973	1	True				
ANR	1407044	AssignmentExpression	regexp_list_it = regexp_list_it -> next		1406973	0		=			
ANR	1407045	Identifier	regexp_list_it		1406973	0					
ANR	1407046	PtrMemberAccess	regexp_list_it -> next		1406973	1					
ANR	1407047	Identifier	regexp_list_it		1406973	0					
ANR	1407048	Identifier	next		1406973	1					
ANR	1407049	ReturnStatement	return ret ;	350:1:9080:9090	1406973	4	True				
ANR	1407050	Identifier	ret		1406973	0					
ANR	1407051	ReturnType	zend_bool		1406973	1					
ANR	1407052	Identifier	zend_accel_blacklist_is_blacklisted		1406973	2					
ANR	1407053	ParameterList	"zend_blacklist * blacklist , char * verify_path"		1406973	3					
ANR	1407054	Parameter	zend_blacklist * blacklist	335:46:8707:8731	1406973	0	True				
ANR	1407055	ParameterType	zend_blacklist *		1406973	0					
ANR	1407056	Identifier	blacklist		1406973	1					
ANR	1407057	Parameter	char * verify_path	335:73:8734:8750	1406973	1	True				
ANR	1407058	ParameterType	char *		1406973	0					
ANR	1407059	Identifier	verify_path		1406973	1					
ANR	1407060	CFGEntryNode	ENTRY		1406973		True				
ANR	1407061	CFGExitNode	EXIT		1406973		True				
ANR	1407062	Symbol	ret		1406973						
ANR	1407063	Symbol	* blacklist		1406973						
ANR	1407064	Symbol	strlen		1406973						
ANR	1407065	Symbol	regexp_list_it -> re		1406973						
ANR	1407066	Symbol	NULL		1406973						
ANR	1407067	Symbol	blacklist -> regexp_list		1406973						
ANR	1407068	Symbol	pcre_exec		1406973						
ANR	1407069	Symbol	verify_path		1406973						
ANR	1407070	Symbol	* regexp_list_it		1406973						
ANR	1407071	Symbol	blacklist		1406973						
ANR	1407072	Symbol	regexp_list_it		1406973						
ANR	1407073	Symbol	regexp_list_it -> next		1406973						
ANR	1407074	Function	zend_accel_blacklist_apply	353:0:9095:9299							
ANR	1407075	FunctionDef	"zend_accel_blacklist_apply (zend_blacklist * blacklist , blacklist_apply_func_arg_t func , void * argument)"		1407074	0					
ANR	1407076	CompoundStatement		354:0:9203:9299	1407074	0					
ANR	1407077	IdentifierDeclStatement	int i ;	355:1:9206:9211	1407074	0	True				
ANR	1407078	IdentifierDecl	i		1407074	0					
ANR	1407079	IdentifierDeclType	int		1407074	0					
ANR	1407080	Identifier	i		1407074	1					
ANR	1407081	ForStatement	for ( i = 0 ; i < blacklist -> pos ; i ++ )		1407074	1					
ANR	1407082	ForInit	i = 0 ;	357:6:9220:9225	1407074	0	True				
ANR	1407083	AssignmentExpression	i = 0		1407074	0		=			
ANR	1407084	Identifier	i		1407074	0					
ANR	1407085	PrimaryExpression	0		1407074	1					
ANR	1407086	Condition	i < blacklist -> pos	357:13:9227:9244	1407074	1	True				
ANR	1407087	RelationalExpression	i < blacklist -> pos		1407074	0		<			
ANR	1407088	Identifier	i		1407074	0					
ANR	1407089	PtrMemberAccess	blacklist -> pos		1407074	1					
ANR	1407090	Identifier	blacklist		1407074	0					
ANR	1407091	Identifier	pos		1407074	1					
ANR	1407092	PostIncDecOperationExpression	i ++	357:33:9247:9249	1407074	2	True				
ANR	1407093	Identifier	i		1407074	0					
ANR	1407094	IncDec	++		1407074	1					
ANR	1407095	CompoundStatement		4:38:48:48	1407074	3					
ANR	1407096	ExpressionStatement	"func ( & blacklist -> entries [ i ] , argument )"	358:2:9256:9294	1407074	0	True				
ANR	1407097	CallExpression	"func ( & blacklist -> entries [ i ] , argument )"		1407074	0					
ANR	1407098	Callee	func		1407074	0					
ANR	1407099	Identifier	func		1407074	0					
ANR	1407100	ArgumentList	& blacklist -> entries [ i ]		1407074	1					
ANR	1407101	Argument	& blacklist -> entries [ i ]		1407074	0					
ANR	1407102	UnaryOperationExpression	& blacklist -> entries [ i ]		1407074	0					
ANR	1407103	UnaryOperator	&		1407074	0					
ANR	1407104	ArrayIndexing	blacklist -> entries [ i ]		1407074	1					
ANR	1407105	PtrMemberAccess	blacklist -> entries		1407074	0					
ANR	1407106	Identifier	blacklist		1407074	0					
ANR	1407107	Identifier	entries		1407074	1					
ANR	1407108	Identifier	i		1407074	1					
ANR	1407109	Argument	argument		1407074	1					
ANR	1407110	Identifier	argument		1407074	0					
ANR	1407111	ReturnType	void		1407074	1					
ANR	1407112	Identifier	zend_accel_blacklist_apply		1407074	2					
ANR	1407113	ParameterList	"zend_blacklist * blacklist , blacklist_apply_func_arg_t func , void * argument"		1407074	3					
ANR	1407114	Parameter	zend_blacklist * blacklist	353:32:9127:9151	1407074	0	True				
ANR	1407115	ParameterType	zend_blacklist *		1407074	0					
ANR	1407116	Identifier	blacklist		1407074	1					
ANR	1407117	Parameter	blacklist_apply_func_arg_t func	353:59:9154:9184	1407074	1	True				
ANR	1407118	ParameterType	blacklist_apply_func_arg_t		1407074	0					
ANR	1407119	Identifier	func		1407074	1					
ANR	1407120	Parameter	void * argument	353:92:9187:9200	1407074	2	True				
ANR	1407121	ParameterType	void *		1407074	0					
ANR	1407122	Identifier	argument		1407074	1					
ANR	1407123	CFGEntryNode	ENTRY		1407074		True				
ANR	1407124	CFGExitNode	EXIT		1407074		True				
ANR	1407125	Symbol	* blacklist		1407074						
ANR	1407126	Symbol	blacklist -> pos		1407074						
ANR	1407127	Symbol	argument		1407074						
ANR	1407128	Symbol	func		1407074						
ANR	1407129	Symbol	blacklist -> entries		1407074						
ANR	1407130	Symbol	blacklist		1407074						
ANR	1407131	Symbol	i		1407074						
