command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2729774	File	data/converged/CVE-2015-8617_php-src/ext_standard_formatted_print.c								
ANR	2729775	DeclStmt									
ANR	2729776	Decl							char	char [ ]	hexchars
ANR	2729777	DeclStmt									
ANR	2729778	Decl							char	char [ ]	HEXCHARS
ANR	2729779	Function	php_sprintf_appendchar	59:0:2002:2420							
ANR	2729780	FunctionDef	"php_sprintf_appendchar (zend_string * * buffer , size_t * pos , char add)"		2729779	0					
ANR	2729781	CompoundStatement		61:0:2089:2420	2729779	0					
ANR	2729782	IfStatement	if ( ! * buffer || ( * pos + 1 ) >= ZSTR_LEN ( * buffer ) )		2729779	0					
ANR	2729783	Condition	! * buffer || ( * pos + 1 ) >= ZSTR_LEN ( * buffer )	62:5:2096:2138	2729779	0	True				
ANR	2729784	OrExpression	! * buffer || ( * pos + 1 ) >= ZSTR_LEN ( * buffer )		2729779	0		||			
ANR	2729785	UnaryOperationExpression	! * buffer		2729779	0					
ANR	2729786	UnaryOperator	!		2729779	0					
ANR	2729787	UnaryOperationExpression	* buffer		2729779	1					
ANR	2729788	UnaryOperator	*		2729779	0					
ANR	2729789	Identifier	buffer		2729779	1					
ANR	2729790	RelationalExpression	( * pos + 1 ) >= ZSTR_LEN ( * buffer )		2729779	1		>=			
ANR	2729791	AdditiveExpression	* pos + 1		2729779	0		+			
ANR	2729792	UnaryOperationExpression	* pos		2729779	0					
ANR	2729793	UnaryOperator	*		2729779	0					
ANR	2729794	Identifier	pos		2729779	1					
ANR	2729795	PrimaryExpression	1		2729779	1					
ANR	2729796	CallExpression	ZSTR_LEN ( * buffer )		2729779	1					
ANR	2729797	Callee	ZSTR_LEN		2729779	0					
ANR	2729798	Identifier	ZSTR_LEN		2729779	0					
ANR	2729799	ArgumentList	* buffer		2729779	1					
ANR	2729800	Argument	* buffer		2729779	0					
ANR	2729801	UnaryOperationExpression	* buffer		2729779	0					
ANR	2729802	UnaryOperator	*		2729779	0					
ANR	2729803	Identifier	buffer		2729779	1					
ANR	2729804	CompoundStatement		2:50:51:51	2729779	1					
ANR	2729805	ExpressionStatement	"PRINTF_DEBUG ( ( ""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( ) , ZSTR_LEN ( * buffer ) ) )"	63:2:2145:2248	2729779	0	True				
ANR	2729806	CallExpression	"PRINTF_DEBUG ( ( ""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( ) , ZSTR_LEN ( * buffer ) ) )"		2729779	0					
ANR	2729807	Callee	PRINTF_DEBUG		2729779	0					
ANR	2729808	Identifier	PRINTF_DEBUG		2729779	0					
ANR	2729809	ArgumentList	"""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( ) , ZSTR_LEN ( * buffer )"		2729779	1					
ANR	2729810	Argument	"""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( ) , ZSTR_LEN ( * buffer )"		2729779	0					
ANR	2729811	Expression	"""%s(): ereallocing buffer to %d bytes\\n"" , get_active_function_name ( ) , ZSTR_LEN ( * buffer )"		2729779	0					
ANR	2729812	PrimaryExpression	"""%s(): ereallocing buffer to %d bytes\\n"""		2729779	0					
ANR	2729813	Expression	"get_active_function_name ( ) , ZSTR_LEN ( * buffer )"		2729779	1					
ANR	2729814	CallExpression	get_active_function_name ( )		2729779	0					
ANR	2729815	Callee	get_active_function_name		2729779	0					
ANR	2729816	Identifier	get_active_function_name		2729779	0					
ANR	2729817	ArgumentList			2729779	1					
ANR	2729818	CallExpression	ZSTR_LEN ( * buffer )		2729779	1					
ANR	2729819	Callee	ZSTR_LEN		2729779	0					
ANR	2729820	Identifier	ZSTR_LEN		2729779	0					
ANR	2729821	ArgumentList	* buffer		2729779	1					
ANR	2729822	Argument	* buffer		2729779	0					
ANR	2729823	UnaryOperationExpression	* buffer		2729779	0					
ANR	2729824	UnaryOperator	*		2729779	0					
ANR	2729825	Identifier	buffer		2729779	1					
ANR	2729826	ExpressionStatement	"* buffer = zend_string_extend ( * buffer , ZSTR_LEN ( * buffer ) << 1 , 0 )"	64:2:2252:2316	2729779	1	True				
ANR	2729827	AssignmentExpression	"* buffer = zend_string_extend ( * buffer , ZSTR_LEN ( * buffer ) << 1 , 0 )"		2729779	0		=			
ANR	2729828	UnaryOperationExpression	* buffer		2729779	0					
ANR	2729829	UnaryOperator	*		2729779	0					
ANR	2729830	Identifier	buffer		2729779	1					
ANR	2729831	CallExpression	"zend_string_extend ( * buffer , ZSTR_LEN ( * buffer ) << 1 , 0 )"		2729779	1					
ANR	2729832	Callee	zend_string_extend		2729779	0					
ANR	2729833	Identifier	zend_string_extend		2729779	0					
ANR	2729834	ArgumentList	* buffer		2729779	1					
ANR	2729835	Argument	* buffer		2729779	0					
ANR	2729836	UnaryOperationExpression	* buffer		2729779	0					
ANR	2729837	UnaryOperator	*		2729779	0					
ANR	2729838	Identifier	buffer		2729779	1					
ANR	2729839	Argument	ZSTR_LEN ( * buffer ) << 1		2729779	1					
ANR	2729840	ShiftExpression	ZSTR_LEN ( * buffer ) << 1		2729779	0		<<			
ANR	2729841	CallExpression	ZSTR_LEN ( * buffer )		2729779	0					
ANR	2729842	Callee	ZSTR_LEN		2729779	0					
ANR	2729843	Identifier	ZSTR_LEN		2729779	0					
ANR	2729844	ArgumentList	* buffer		2729779	1					
ANR	2729845	Argument	* buffer		2729779	0					
ANR	2729846	UnaryOperationExpression	* buffer		2729779	0					
ANR	2729847	UnaryOperator	*		2729779	0					
ANR	2729848	Identifier	buffer		2729779	1					
ANR	2729849	PrimaryExpression	1		2729779	1					
ANR	2729850	Argument	0		2729779	2					
ANR	2729851	PrimaryExpression	0		2729779	0					
ANR	2729852	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appending '%c', pos=\\n"" , add , * pos ) )"	66:1:2322:2382	2729779	1	True				
ANR	2729853	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appending '%c', pos=\\n"" , add , * pos ) )"		2729779	0					
ANR	2729854	Callee	PRINTF_DEBUG		2729779	0					
ANR	2729855	Identifier	PRINTF_DEBUG		2729779	0					
ANR	2729856	ArgumentList	"""sprintf: appending '%c', pos=\\n"" , add , * pos"		2729779	1					
ANR	2729857	Argument	"""sprintf: appending '%c', pos=\\n"" , add , * pos"		2729779	0					
ANR	2729858	Expression	"""sprintf: appending '%c', pos=\\n"" , add , * pos"		2729779	0					
ANR	2729859	PrimaryExpression	"""sprintf: appending '%c', pos=\\n"""		2729779	0					
ANR	2729860	Expression	"add , * pos"		2729779	1					
ANR	2729861	Identifier	add		2729779	0					
ANR	2729862	UnaryOperationExpression	* pos		2729779	1					
ANR	2729863	UnaryOperator	*		2729779	0					
ANR	2729864	Identifier	pos		2729779	1					
ANR	2729865	IdentifierDeclStatement	ZSTR_VAL ( * buffer ) [ ( * pos ) ++ ] = add ;	67:1:2385:2418	2729779	2	True				
ANR	2729866	IdentifierDecl	( * buffer ) [ ( * pos ) ++ ] = add		2729779	0					
ANR	2729867	IdentifierDeclType	ZSTR_VAL ( * ) [ ( * pos ) ++ ]		2729779	0					
ANR	2729868	Identifier	buffer		2729779	1					
ANR	2729869	PostIncDecOperationExpression	( * pos ) ++		2729779	2					
ANR	2729870	UnaryOperationExpression	* pos		2729779	0					
ANR	2729871	UnaryOperator	*		2729779	0					
ANR	2729872	Identifier	pos		2729779	1					
ANR	2729873	IncDec	++		2729779	1					
ANR	2729874	AssignmentExpression	( * buffer ) [ ( * pos ) ++ ] = add		2729779	3		=			
ANR	2729875	Identifier	add		2729779	0					
ANR	2729876	Identifier	add		2729779	1					
ANR	2729877	ReturnType	inline static void		2729779	1					
ANR	2729878	Identifier	php_sprintf_appendchar		2729779	2					
ANR	2729879	ParameterList	"zend_string * * buffer , size_t * pos , char add"		2729779	3					
ANR	2729880	Parameter	zend_string * * buffer	60:23:2044:2063	2729779	0	True				
ANR	2729881	ParameterType	zend_string * *		2729779	0					
ANR	2729882	Identifier	buffer		2729779	1					
ANR	2729883	Parameter	size_t * pos	60:45:2066:2076	2729779	1	True				
ANR	2729884	ParameterType	size_t *		2729779	0					
ANR	2729885	Identifier	pos		2729779	1					
ANR	2729886	Parameter	char add	60:58:2079:2086	2729779	2	True				
ANR	2729887	ParameterType	char		2729779	0					
ANR	2729888	Identifier	add		2729779	1					
ANR	2729889	CFGEntryNode	ENTRY		2729779		True				
ANR	2729890	CFGExitNode	EXIT		2729779		True				
ANR	2729891	Symbol	add		2729779						
ANR	2729892	Symbol	* buffer		2729779						
ANR	2729893	Symbol	zend_string_extend		2729779						
ANR	2729894	Symbol	pos		2729779						
ANR	2729895	Symbol	ZSTR_LEN		2729779						
ANR	2729896	Symbol	get_active_function_name		2729779						
ANR	2729897	Symbol	buffer		2729779						
ANR	2729898	Symbol	* pos		2729779						
ANR	2729899	Function	php_sprintf_appendstring	72:0:2469:4055							
ANR	2729900	FunctionDef	"php_sprintf_appendstring (zend_string * * buffer , size_t * pos , char * add , size_t min_width , size_t max_width , char padding , size_t alignment , size_t len , int neg , int expprec , int always_sign)"		2729899	0					
ANR	2729901	CompoundStatement		76:0:2696:4055	2729899	0					
ANR	2729902	Statement	register	77:1:2699:2706	2729899	0	True				
ANR	2729903	IdentifierDeclStatement	size_t npad ;	77:10:2708:2719	2729899	1	True				
ANR	2729904	IdentifierDecl	npad		2729899	0					
ANR	2729905	IdentifierDeclType	size_t		2729899	0					
ANR	2729906	Identifier	npad		2729899	1					
ANR	2729907	IdentifierDeclStatement	size_t req_size ;	78:1:2722:2737	2729899	2	True				
ANR	2729908	IdentifierDecl	req_size		2729899	0					
ANR	2729909	IdentifierDeclType	size_t		2729899	0					
ANR	2729910	Identifier	req_size		2729899	1					
ANR	2729911	IdentifierDeclStatement	size_t copy_len ;	79:1:2740:2755	2729899	3	True				
ANR	2729912	IdentifierDecl	copy_len		2729899	0					
ANR	2729913	IdentifierDeclType	size_t		2729899	0					
ANR	2729914	Identifier	copy_len		2729899	1					
ANR	2729915	IdentifierDeclStatement	size_t m_width ;	80:1:2758:2772	2729899	4	True				
ANR	2729916	IdentifierDecl	m_width		2729899	0					
ANR	2729917	IdentifierDeclType	size_t		2729899	0					
ANR	2729918	Identifier	m_width		2729899	1					
ANR	2729919	ExpressionStatement	"copy_len = ( expprec ? MIN ( max_width , len ) : len )"	82:1:2776:2824	2729899	5	True				
ANR	2729920	AssignmentExpression	"copy_len = ( expprec ? MIN ( max_width , len ) : len )"		2729899	0		=			
ANR	2729921	Identifier	copy_len		2729899	0					
ANR	2729922	ConditionalExpression	"expprec ? MIN ( max_width , len ) : len"		2729899	1					
ANR	2729923	Condition	expprec		2729899	0					
ANR	2729924	Identifier	expprec		2729899	0					
ANR	2729925	CallExpression	"MIN ( max_width , len )"		2729899	1					
ANR	2729926	Callee	MIN		2729899	0					
ANR	2729927	Identifier	MIN		2729899	0					
ANR	2729928	ArgumentList	max_width		2729899	1					
ANR	2729929	Argument	max_width		2729899	0					
ANR	2729930	Identifier	max_width		2729899	0					
ANR	2729931	Argument	len		2729899	1					
ANR	2729932	Identifier	len		2729899	0					
ANR	2729933	Identifier	len		2729899	2					
ANR	2729934	ExpressionStatement	npad = ( min_width < copy_len ) ? 0 : min_width - copy_len	83:1:2827:2883	2729899	6	True				
ANR	2729935	AssignmentExpression	npad = ( min_width < copy_len ) ? 0 : min_width - copy_len		2729899	0		=			
ANR	2729936	Identifier	npad		2729899	0					
ANR	2729937	ConditionalExpression	( min_width < copy_len ) ? 0 : min_width - copy_len		2729899	1					
ANR	2729938	Condition	min_width < copy_len		2729899	0					
ANR	2729939	RelationalExpression	min_width < copy_len		2729899	0		<			
ANR	2729940	Identifier	min_width		2729899	0					
ANR	2729941	Identifier	copy_len		2729899	1					
ANR	2729942	PrimaryExpression	0		2729899	1					
ANR	2729943	AdditiveExpression	min_width - copy_len		2729899	2		-			
ANR	2729944	Identifier	min_width		2729899	0					
ANR	2729945	Identifier	copy_len		2729899	1					
ANR	2729946	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , ZSTR_LEN ( * buffer ) , add , min_width , padding , alignment ) )"	85:1:2887:3038	2729899	7	True				
ANR	2729947	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , ZSTR_LEN ( * buffer ) , add , min_width , padding , alignment ) )"		2729899	0					
ANR	2729948	Callee	PRINTF_DEBUG		2729899	0					
ANR	2729949	Identifier	PRINTF_DEBUG		2729899	0					
ANR	2729950	ArgumentList	"""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , ZSTR_LEN ( * buffer ) , add , min_width , padding , alignment"		2729899	1					
ANR	2729951	Argument	"""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , ZSTR_LEN ( * buffer ) , add , min_width , padding , alignment"		2729899	0					
ANR	2729952	Expression	"""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"" , * buffer , * pos , ZSTR_LEN ( * buffer ) , add , min_width , padding , alignment"		2729899	0					
ANR	2729953	PrimaryExpression	"""sprintf: appendstring(%x, %d, %d, \\""%s\\"", %d, '%c', %d)\\n"""		2729899	0					
ANR	2729954	Expression	"* buffer , * pos , ZSTR_LEN ( * buffer ) , add , min_width , padding , alignment"		2729899	1					
ANR	2729955	UnaryOperationExpression	* buffer		2729899	0					
ANR	2729956	UnaryOperator	*		2729899	0					
ANR	2729957	Identifier	buffer		2729899	1					
ANR	2729958	Expression	"* pos , ZSTR_LEN ( * buffer ) , add , min_width , padding , alignment"		2729899	1					
ANR	2729959	UnaryOperationExpression	* pos		2729899	0					
ANR	2729960	UnaryOperator	*		2729899	0					
ANR	2729961	Identifier	pos		2729899	1					
ANR	2729962	Expression	"ZSTR_LEN ( * buffer ) , add , min_width , padding , alignment"		2729899	1					
ANR	2729963	CallExpression	ZSTR_LEN ( * buffer )		2729899	0					
ANR	2729964	Callee	ZSTR_LEN		2729899	0					
ANR	2729965	Identifier	ZSTR_LEN		2729899	0					
ANR	2729966	ArgumentList	* buffer		2729899	1					
ANR	2729967	Argument	* buffer		2729899	0					
ANR	2729968	UnaryOperationExpression	* buffer		2729899	0					
ANR	2729969	UnaryOperator	*		2729899	0					
ANR	2729970	Identifier	buffer		2729899	1					
ANR	2729971	Expression	"add , min_width , padding , alignment"		2729899	1					
ANR	2729972	Identifier	add		2729899	0					
ANR	2729973	Expression	"min_width , padding , alignment"		2729899	1					
ANR	2729974	Identifier	min_width		2729899	0					
ANR	2729975	Expression	"padding , alignment"		2729899	1					
ANR	2729976	Identifier	padding		2729899	0					
ANR	2729977	Identifier	alignment		2729899	1					
ANR	2729978	ExpressionStatement	"m_width = MAX ( min_width , copy_len )"	87:1:3041:3075	2729899	8	True				
ANR	2729979	AssignmentExpression	"m_width = MAX ( min_width , copy_len )"		2729899	0		=			
ANR	2729980	Identifier	m_width		2729899	0					
ANR	2729981	CallExpression	"MAX ( min_width , copy_len )"		2729899	1					
ANR	2729982	Callee	MAX		2729899	0					
ANR	2729983	Identifier	MAX		2729899	0					
ANR	2729984	ArgumentList	min_width		2729899	1					
ANR	2729985	Argument	min_width		2729899	0					
ANR	2729986	Identifier	min_width		2729899	0					
ANR	2729987	Argument	copy_len		2729899	1					
ANR	2729988	Identifier	copy_len		2729899	0					
ANR	2729989	IfStatement	if ( m_width > INT_MAX - * pos - 1 )		2729899	9					
ANR	2729990	Condition	m_width > INT_MAX - * pos - 1	89:4:3082:3109	2729899	0	True				
ANR	2729991	RelationalExpression	m_width > INT_MAX - * pos - 1		2729899	0		>			
ANR	2729992	Identifier	m_width		2729899	0					
ANR	2729993	AdditiveExpression	INT_MAX - * pos - 1		2729899	1		-			
ANR	2729994	Identifier	INT_MAX		2729899	0					
ANR	2729995	AdditiveExpression	* pos - 1		2729899	1		-			
ANR	2729996	UnaryOperationExpression	* pos		2729899	0					
ANR	2729997	UnaryOperator	*		2729899	0					
ANR	2729998	Identifier	pos		2729899	1					
ANR	2729999	PrimaryExpression	1		2729899	1					
ANR	2730000	CompoundStatement		14:34:415:415	2729899	1					
ANR	2730001	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Field width %d is too long"" , m_width )"	90:2:3116:3183	2729899	0	True				
ANR	2730002	CallExpression	"zend_error_noreturn ( E_ERROR , ""Field width %d is too long"" , m_width )"		2729899	0					
ANR	2730003	Callee	zend_error_noreturn		2729899	0					
ANR	2730004	Identifier	zend_error_noreturn		2729899	0					
ANR	2730005	ArgumentList	E_ERROR		2729899	1					
ANR	2730006	Argument	E_ERROR		2729899	0					
ANR	2730007	Identifier	E_ERROR		2729899	0					
ANR	2730008	Argument	"""Field width %d is too long"""		2729899	1					
ANR	2730009	PrimaryExpression	"""Field width %d is too long"""		2729899	0					
ANR	2730010	Argument	m_width		2729899	2					
ANR	2730011	Identifier	m_width		2729899	0					
ANR	2730012	ExpressionStatement	req_size = * pos + m_width + 1	93:1:3190:3219	2729899	10	True				
ANR	2730013	AssignmentExpression	req_size = * pos + m_width + 1		2729899	0		=			
ANR	2730014	Identifier	req_size		2729899	0					
ANR	2730015	AdditiveExpression	* pos + m_width + 1		2729899	1		+			
ANR	2730016	UnaryOperationExpression	* pos		2729899	0					
ANR	2730017	UnaryOperator	*		2729899	0					
ANR	2730018	Identifier	pos		2729899	1					
ANR	2730019	AdditiveExpression	m_width + 1		2729899	1		+			
ANR	2730020	Identifier	m_width		2729899	0					
ANR	2730021	PrimaryExpression	1		2729899	1					
ANR	2730022	IfStatement	if ( ! * buffer || req_size > ZSTR_LEN ( * buffer ) )		2729899	11					
ANR	2730023	Condition	! * buffer || req_size > ZSTR_LEN ( * buffer )	95:5:3227:3266	2729899	0	True				
ANR	2730024	OrExpression	! * buffer || req_size > ZSTR_LEN ( * buffer )		2729899	0		||			
ANR	2730025	UnaryOperationExpression	! * buffer		2729899	0					
ANR	2730026	UnaryOperator	!		2729899	0					
ANR	2730027	UnaryOperationExpression	* buffer		2729899	1					
ANR	2730028	UnaryOperator	*		2729899	0					
ANR	2730029	Identifier	buffer		2729899	1					
ANR	2730030	RelationalExpression	req_size > ZSTR_LEN ( * buffer )		2729899	1		>			
ANR	2730031	Identifier	req_size		2729899	0					
ANR	2730032	CallExpression	ZSTR_LEN ( * buffer )		2729899	1					
ANR	2730033	Callee	ZSTR_LEN		2729899	0					
ANR	2730034	Identifier	ZSTR_LEN		2729899	0					
ANR	2730035	ArgumentList	* buffer		2729899	1					
ANR	2730036	Argument	* buffer		2729899	0					
ANR	2730037	UnaryOperationExpression	* buffer		2729899	0					
ANR	2730038	UnaryOperator	*		2729899	0					
ANR	2730039	Identifier	buffer		2729899	1					
ANR	2730040	CompoundStatement		21:2:576:607	2729899	1					
ANR	2730041	IdentifierDeclStatement	size_t size = ZSTR_LEN ( * buffer ) ;	96:2:3273:3304	2729899	0	True				
ANR	2730042	IdentifierDecl	size = ZSTR_LEN ( * buffer )		2729899	0					
ANR	2730043	IdentifierDeclType	size_t		2729899	0					
ANR	2730044	Identifier	size		2729899	1					
ANR	2730045	AssignmentExpression	size = ZSTR_LEN ( * buffer )		2729899	2		=			
ANR	2730046	Identifier	size		2729899	0					
ANR	2730047	CallExpression	ZSTR_LEN ( * buffer )		2729899	1					
ANR	2730048	Callee	ZSTR_LEN		2729899	0					
ANR	2730049	Identifier	ZSTR_LEN		2729899	0					
ANR	2730050	ArgumentList	* buffer		2729899	1					
ANR	2730051	Argument	* buffer		2729899	0					
ANR	2730052	UnaryOperationExpression	* buffer		2729899	0					
ANR	2730053	UnaryOperator	*		2729899	0					
ANR	2730054	Identifier	buffer		2729899	1					
ANR	2730055	WhileStatement	while ( req_size > size )		2729899	1					
ANR	2730056	Condition	req_size > size	97:9:3315:3329	2729899	0	True				
ANR	2730057	RelationalExpression	req_size > size		2729899	0		>			
ANR	2730058	Identifier	req_size		2729899	0					
ANR	2730059	Identifier	size		2729899	1					
ANR	2730060	CompoundStatement		22:26:635:635	2729899	1					
ANR	2730061	IfStatement	if ( size > ZEND_SIZE_MAX / 2 )		2729899	0					
ANR	2730062	Condition	size > ZEND_SIZE_MAX / 2	98:7:3341:3362	2729899	0	True				
ANR	2730063	RelationalExpression	size > ZEND_SIZE_MAX / 2		2729899	0		>			
ANR	2730064	Identifier	size		2729899	0					
ANR	2730065	MultiplicativeExpression	ZEND_SIZE_MAX / 2		2729899	1		/			
ANR	2730066	Identifier	ZEND_SIZE_MAX		2729899	0					
ANR	2730067	PrimaryExpression	2		2729899	1					
ANR	2730068	CompoundStatement		23:31:668:668	2729899	1					
ANR	2730069	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Field width %zd is too long"" , req_size )"	99:4:3371:3440	2729899	0	True				
ANR	2730070	CallExpression	"zend_error_noreturn ( E_ERROR , ""Field width %zd is too long"" , req_size )"		2729899	0					
ANR	2730071	Callee	zend_error_noreturn		2729899	0					
ANR	2730072	Identifier	zend_error_noreturn		2729899	0					
ANR	2730073	ArgumentList	E_ERROR		2729899	1					
ANR	2730074	Argument	E_ERROR		2729899	0					
ANR	2730075	Identifier	E_ERROR		2729899	0					
ANR	2730076	Argument	"""Field width %zd is too long"""		2729899	1					
ANR	2730077	PrimaryExpression	"""Field width %zd is too long"""		2729899	0					
ANR	2730078	Argument	req_size		2729899	2					
ANR	2730079	Identifier	req_size		2729899	0					
ANR	2730080	ExpressionStatement	size <<= 1	101:3:3450:3460	2729899	1	True				
ANR	2730081	AssignmentExpression	size <<= 1		2729899	0		<<=			
ANR	2730082	Identifier	size		2729899	0					
ANR	2730083	PrimaryExpression	1		2729899	1					
ANR	2730084	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf ereallocing buffer to %d bytes\\n"" , size ) )"	103:2:3468:3532	2729899	2	True				
ANR	2730085	CallExpression	"PRINTF_DEBUG ( ( ""sprintf ereallocing buffer to %d bytes\\n"" , size ) )"		2729899	0					
ANR	2730086	Callee	PRINTF_DEBUG		2729899	0					
ANR	2730087	Identifier	PRINTF_DEBUG		2729899	0					
ANR	2730088	ArgumentList	"""sprintf ereallocing buffer to %d bytes\\n"" , size"		2729899	1					
ANR	2730089	Argument	"""sprintf ereallocing buffer to %d bytes\\n"" , size"		2729899	0					
ANR	2730090	Expression	"""sprintf ereallocing buffer to %d bytes\\n"" , size"		2729899	0					
ANR	2730091	PrimaryExpression	"""sprintf ereallocing buffer to %d bytes\\n"""		2729899	0					
ANR	2730092	Identifier	size		2729899	1					
ANR	2730093	ExpressionStatement	"* buffer = zend_string_extend ( * buffer , size , 0 )"	104:2:3536:3582	2729899	3	True				
ANR	2730094	AssignmentExpression	"* buffer = zend_string_extend ( * buffer , size , 0 )"		2729899	0		=			
ANR	2730095	UnaryOperationExpression	* buffer		2729899	0					
ANR	2730096	UnaryOperator	*		2729899	0					
ANR	2730097	Identifier	buffer		2729899	1					
ANR	2730098	CallExpression	"zend_string_extend ( * buffer , size , 0 )"		2729899	1					
ANR	2730099	Callee	zend_string_extend		2729899	0					
ANR	2730100	Identifier	zend_string_extend		2729899	0					
ANR	2730101	ArgumentList	* buffer		2729899	1					
ANR	2730102	Argument	* buffer		2729899	0					
ANR	2730103	UnaryOperationExpression	* buffer		2729899	0					
ANR	2730104	UnaryOperator	*		2729899	0					
ANR	2730105	Identifier	buffer		2729899	1					
ANR	2730106	Argument	size		2729899	1					
ANR	2730107	Identifier	size		2729899	0					
ANR	2730108	Argument	0		2729899	2					
ANR	2730109	PrimaryExpression	0		2729899	0					
ANR	2730110	IfStatement	if ( alignment == ALIGN_RIGHT )		2729899	12					
ANR	2730111	Condition	alignment == ALIGN_RIGHT	106:5:3592:3615	2729899	0	True				
ANR	2730112	EqualityExpression	alignment == ALIGN_RIGHT		2729899	0		==			
ANR	2730113	Identifier	alignment		2729899	0					
ANR	2730114	Identifier	ALIGN_RIGHT		2729899	1					
ANR	2730115	CompoundStatement		31:31:921:921	2729899	1					
ANR	2730116	IfStatement	if ( ( neg || always_sign ) && padding == '0' )		2729899	0					
ANR	2730117	Condition	( neg || always_sign ) && padding == '0'	107:6:3626:3661	2729899	0	True				
ANR	2730118	AndExpression	( neg || always_sign ) && padding == '0'		2729899	0		&&			
ANR	2730119	OrExpression	neg || always_sign		2729899	0		||			
ANR	2730120	Identifier	neg		2729899	0					
ANR	2730121	Identifier	always_sign		2729899	1					
ANR	2730122	EqualityExpression	padding == '0'		2729899	1		==			
ANR	2730123	Identifier	padding		2729899	0					
ANR	2730124	PrimaryExpression	'0'		2729899	1					
ANR	2730125	CompoundStatement		33:3:972:1019	2729899	1					
ANR	2730126	IdentifierDeclStatement	ZSTR_VAL ( * buffer ) [ ( * pos ) ++ ] = ( neg ) ? '-' : '+' ;	108:3:3669:3716	2729899	0	True				
ANR	2730127	IdentifierDecl	( * buffer ) [ ( * pos ) ++ ] = ( neg ) ? '-' : '+'		2729899	0					
ANR	2730128	IdentifierDeclType	ZSTR_VAL ( * ) [ ( * pos ) ++ ]		2729899	0					
ANR	2730129	Identifier	buffer		2729899	1					
ANR	2730130	PostIncDecOperationExpression	( * pos ) ++		2729899	2					
ANR	2730131	UnaryOperationExpression	* pos		2729899	0					
ANR	2730132	UnaryOperator	*		2729899	0					
ANR	2730133	Identifier	pos		2729899	1					
ANR	2730134	IncDec	++		2729899	1					
ANR	2730135	AssignmentExpression	( * buffer ) [ ( * pos ) ++ ] = ( neg ) ? '-' : '+'		2729899	3		=			
ANR	2730136	Identifier	buffer		2729899	0					
ANR	2730137	ConditionalExpression	( neg ) ? '-' : '+'		2729899	1					
ANR	2730138	Condition	neg		2729899	0					
ANR	2730139	Identifier	neg		2729899	0					
ANR	2730140	PrimaryExpression	'-'		2729899	1					
ANR	2730141	PrimaryExpression	'+'		2729899	2					
ANR	2730142	ExpressionStatement	add ++	109:3:3721:3726	2729899	1	True				
ANR	2730143	PostIncDecOperationExpression	add ++		2729899	0					
ANR	2730144	Identifier	add		2729899	0					
ANR	2730145	IncDec	++		2729899	1					
ANR	2730146	ExpressionStatement	len --	110:3:3731:3736	2729899	2	True				
ANR	2730147	PostIncDecOperationExpression	len --		2729899	0					
ANR	2730148	Identifier	len		2729899	0					
ANR	2730149	IncDec	--		2729899	1					
ANR	2730150	ExpressionStatement	copy_len --	111:3:3741:3751	2729899	3	True				
ANR	2730151	PostIncDecOperationExpression	copy_len --		2729899	0					
ANR	2730152	Identifier	copy_len		2729899	0					
ANR	2730153	IncDec	--		2729899	1					
ANR	2730154	WhileStatement	while ( npad -- > 0 )		2729899	1					
ANR	2730155	Condition	npad -- > 0	113:9:3766:3775	2729899	0	True				
ANR	2730156	RelationalExpression	npad -- > 0		2729899	0		>			
ANR	2730157	PostIncDecOperationExpression	npad --		2729899	0					
ANR	2730158	Identifier	npad		2729899	0					
ANR	2730159	IncDec	--		2729899	1					
ANR	2730160	PrimaryExpression	0		2729899	1					
ANR	2730161	CompoundStatement		39:3:1086:1123	2729899	1					
ANR	2730162	IdentifierDeclStatement	ZSTR_VAL ( * buffer ) [ ( * pos ) ++ ] = padding ;	114:3:3783:3820	2729899	0	True				
ANR	2730163	IdentifierDecl	( * buffer ) [ ( * pos ) ++ ] = padding		2729899	0					
ANR	2730164	IdentifierDeclType	ZSTR_VAL ( * ) [ ( * pos ) ++ ]		2729899	0					
ANR	2730165	Identifier	buffer		2729899	1					
ANR	2730166	PostIncDecOperationExpression	( * pos ) ++		2729899	2					
ANR	2730167	UnaryOperationExpression	* pos		2729899	0					
ANR	2730168	UnaryOperator	*		2729899	0					
ANR	2730169	Identifier	pos		2729899	1					
ANR	2730170	IncDec	++		2729899	1					
ANR	2730171	AssignmentExpression	( * buffer ) [ ( * pos ) ++ ] = padding		2729899	3		=			
ANR	2730172	Identifier	padding		2729899	0					
ANR	2730173	Identifier	padding		2729899	1					
ANR	2730174	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appending \\""%s\\""\\n"" , add ) )"	117:1:3830:3880	2729899	13	True				
ANR	2730175	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appending \\""%s\\""\\n"" , add ) )"		2729899	0					
ANR	2730176	Callee	PRINTF_DEBUG		2729899	0					
ANR	2730177	Identifier	PRINTF_DEBUG		2729899	0					
ANR	2730178	ArgumentList	"""sprintf: appending \\""%s\\""\\n"" , add"		2729899	1					
ANR	2730179	Argument	"""sprintf: appending \\""%s\\""\\n"" , add"		2729899	0					
ANR	2730180	Expression	"""sprintf: appending \\""%s\\""\\n"" , add"		2729899	0					
ANR	2730181	PrimaryExpression	"""sprintf: appending \\""%s\\""\\n"""		2729899	0					
ANR	2730182	Identifier	add		2729899	1					
ANR	2730183	ExpressionStatement	"memcpy ( & ZSTR_VAL ( * buffer ) [ * pos ] , add , copy_len + 1 )"	118:1:3883:3934	2729899	14	True				
ANR	2730184	CallExpression	"memcpy ( & ZSTR_VAL ( * buffer ) [ * pos ] , add , copy_len + 1 )"		2729899	0					
ANR	2730185	Callee	memcpy		2729899	0					
ANR	2730186	Identifier	memcpy		2729899	0					
ANR	2730187	ArgumentList	& ZSTR_VAL ( * buffer ) [ * pos ]		2729899	1					
ANR	2730188	Argument	& ZSTR_VAL ( * buffer ) [ * pos ]		2729899	0					
ANR	2730189	UnaryOperationExpression	& ZSTR_VAL ( * buffer ) [ * pos ]		2729899	0					
ANR	2730190	UnaryOperator	&		2729899	0					
ANR	2730191	ArrayIndexing	ZSTR_VAL ( * buffer ) [ * pos ]		2729899	1					
ANR	2730192	CallExpression	ZSTR_VAL ( * buffer )		2729899	0					
ANR	2730193	Callee	ZSTR_VAL		2729899	0					
ANR	2730194	Identifier	ZSTR_VAL		2729899	0					
ANR	2730195	ArgumentList	* buffer		2729899	1					
ANR	2730196	Argument	* buffer		2729899	0					
ANR	2730197	UnaryOperationExpression	* buffer		2729899	0					
ANR	2730198	UnaryOperator	*		2729899	0					
ANR	2730199	Identifier	buffer		2729899	1					
ANR	2730200	UnaryOperationExpression	* pos		2729899	1					
ANR	2730201	UnaryOperator	*		2729899	0					
ANR	2730202	Identifier	pos		2729899	1					
ANR	2730203	Argument	add		2729899	1					
ANR	2730204	Identifier	add		2729899	0					
ANR	2730205	Argument	copy_len + 1		2729899	2					
ANR	2730206	AdditiveExpression	copy_len + 1		2729899	0		+			
ANR	2730207	Identifier	copy_len		2729899	0					
ANR	2730208	PrimaryExpression	1		2729899	1					
ANR	2730209	ExpressionStatement	* pos += copy_len	119:1:3937:3953	2729899	15	True				
ANR	2730210	AssignmentExpression	* pos += copy_len		2729899	0		+=			
ANR	2730211	UnaryOperationExpression	* pos		2729899	0					
ANR	2730212	UnaryOperator	*		2729899	0					
ANR	2730213	Identifier	pos		2729899	1					
ANR	2730214	Identifier	copy_len		2729899	1					
ANR	2730215	IfStatement	if ( alignment == ALIGN_LEFT )		2729899	16					
ANR	2730216	Condition	alignment == ALIGN_LEFT	120:5:3960:3982	2729899	0	True				
ANR	2730217	EqualityExpression	alignment == ALIGN_LEFT		2729899	0		==			
ANR	2730218	Identifier	alignment		2729899	0					
ANR	2730219	Identifier	ALIGN_LEFT		2729899	1					
ANR	2730220	CompoundStatement		45:30:1288:1288	2729899	1					
ANR	2730221	WhileStatement	while ( npad -- )		2729899	0					
ANR	2730222	Condition	npad --	121:9:3996:4001	2729899	0	True				
ANR	2730223	PostIncDecOperationExpression	npad --		2729899	0					
ANR	2730224	Identifier	npad		2729899	0					
ANR	2730225	IncDec	--		2729899	1					
ANR	2730226	CompoundStatement		47:3:1312:1349	2729899	1					
ANR	2730227	IdentifierDeclStatement	ZSTR_VAL ( * buffer ) [ ( * pos ) ++ ] = padding ;	122:3:4009:4046	2729899	0	True				
ANR	2730228	IdentifierDecl	( * buffer ) [ ( * pos ) ++ ] = padding		2729899	0					
ANR	2730229	IdentifierDeclType	ZSTR_VAL ( * ) [ ( * pos ) ++ ]		2729899	0					
ANR	2730230	Identifier	buffer		2729899	1					
ANR	2730231	PostIncDecOperationExpression	( * pos ) ++		2729899	2					
ANR	2730232	UnaryOperationExpression	* pos		2729899	0					
ANR	2730233	UnaryOperator	*		2729899	0					
ANR	2730234	Identifier	pos		2729899	1					
ANR	2730235	IncDec	++		2729899	1					
ANR	2730236	AssignmentExpression	( * buffer ) [ ( * pos ) ++ ] = padding		2729899	3		=			
ANR	2730237	Identifier	padding		2729899	0					
ANR	2730238	Identifier	padding		2729899	1					
ANR	2730239	ReturnType	inline static void		2729899	1					
ANR	2730240	Identifier	php_sprintf_appendstring		2729899	2					
ANR	2730241	ParameterList	"zend_string * * buffer , size_t * pos , char * add , size_t min_width , size_t max_width , char padding , size_t alignment , size_t len , int neg , int expprec , int always_sign"		2729899	3					
ANR	2730242	Parameter	zend_string * * buffer	73:25:2513:2532	2729899	0	True				
ANR	2730243	ParameterType	zend_string * *		2729899	0					
ANR	2730244	Identifier	buffer		2729899	1					
ANR	2730245	Parameter	size_t * pos	73:47:2535:2545	2729899	1	True				
ANR	2730246	ParameterType	size_t *		2729899	0					
ANR	2730247	Identifier	pos		2729899	1					
ANR	2730248	Parameter	char * add	73:60:2548:2556	2729899	2	True				
ANR	2730249	ParameterType	char *		2729899	0					
ANR	2730250	Identifier	add		2729899	1					
ANR	2730251	Parameter	size_t min_width	74:9:2568:2583	2729899	3	True				
ANR	2730252	ParameterType	size_t		2729899	0					
ANR	2730253	Identifier	min_width		2729899	1					
ANR	2730254	Parameter	size_t max_width	74:27:2586:2601	2729899	4	True				
ANR	2730255	ParameterType	size_t		2729899	0					
ANR	2730256	Identifier	max_width		2729899	1					
ANR	2730257	Parameter	char padding	74:45:2604:2615	2729899	5	True				
ANR	2730258	ParameterType	char		2729899	0					
ANR	2730259	Identifier	padding		2729899	1					
ANR	2730260	Parameter	size_t alignment	75:9:2627:2642	2729899	6	True				
ANR	2730261	ParameterType	size_t		2729899	0					
ANR	2730262	Identifier	alignment		2729899	1					
ANR	2730263	Parameter	size_t len	75:27:2645:2654	2729899	7	True				
ANR	2730264	ParameterType	size_t		2729899	0					
ANR	2730265	Identifier	len		2729899	1					
ANR	2730266	Parameter	int neg	75:39:2657:2663	2729899	8	True				
ANR	2730267	ParameterType	int		2729899	0					
ANR	2730268	Identifier	neg		2729899	1					
ANR	2730269	Parameter	int expprec	75:48:2666:2676	2729899	9	True				
ANR	2730270	ParameterType	int		2729899	0					
ANR	2730271	Identifier	expprec		2729899	1					
ANR	2730272	Parameter	int always_sign	75:61:2679:2693	2729899	10	True				
ANR	2730273	ParameterType	int		2729899	0					
ANR	2730274	Identifier	always_sign		2729899	1					
ANR	2730275	CFGEntryNode	ENTRY		2729899		True				
ANR	2730276	CFGExitNode	EXIT		2729899		True				
ANR	2730277	Symbol	zend_string_extend		2729899						
ANR	2730278	Symbol	expprec		2729899						
ANR	2730279	Symbol	MAX		2729899						
ANR	2730280	Symbol	max_width		2729899						
ANR	2730281	Symbol	neg		2729899						
ANR	2730282	Symbol	len		2729899						
ANR	2730283	Symbol	pos		2729899						
ANR	2730284	Symbol	m_width		2729899						
ANR	2730285	Symbol	npad		2729899						
ANR	2730286	Symbol	copy_len		2729899						
ANR	2730287	Symbol	INT_MAX		2729899						
ANR	2730288	Symbol	ZEND_SIZE_MAX		2729899						
ANR	2730289	Symbol	buffer		2729899						
ANR	2730290	Symbol	ALIGN_RIGHT		2729899						
ANR	2730291	Symbol	req_size		2729899						
ANR	2730292	Symbol	ALIGN_LEFT		2729899						
ANR	2730293	Symbol	min_width		2729899						
ANR	2730294	Symbol	add		2729899						
ANR	2730295	Symbol	padding		2729899						
ANR	2730296	Symbol	* buffer		2729899						
ANR	2730297	Symbol	always_sign		2729899						
ANR	2730298	Symbol	ZSTR_VAL		2729899						
ANR	2730299	Symbol	MIN		2729899						
ANR	2730300	Symbol	E_ERROR		2729899						
ANR	2730301	Symbol	size		2729899						
ANR	2730302	Symbol	ZSTR_LEN		2729899						
ANR	2730303	Symbol	alignment		2729899						
ANR	2730304	Symbol	* pos		2729899						
ANR	2730305	Function	php_sprintf_appendint	129:0:4101:5210							
ANR	2730306	FunctionDef	"php_sprintf_appendint (zend_string * * buffer , size_t * pos , zend_long number , size_t width , char padding , size_t alignment , int always_sign)"		2730305	0					
ANR	2730307	CompoundStatement		133:0:4270:5210	2730305	0					
ANR	2730308	IdentifierDeclStatement	char numbuf [ NUM_BUF_SIZE ] ;	134:1:4273:4298	2730305	0	True				
ANR	2730309	IdentifierDecl	numbuf [ NUM_BUF_SIZE ]		2730305	0					
ANR	2730310	IdentifierDeclType	char [ NUM_BUF_SIZE ]		2730305	0					
ANR	2730311	Identifier	numbuf		2730305	1					
ANR	2730312	Identifier	NUM_BUF_SIZE		2730305	2					
ANR	2730313	Statement	register	135:1:4301:4308	2730305	1	True				
ANR	2730314	IdentifierDeclStatement	"zend_ulong magn , nmagn ;"	135:10:4310:4332	2730305	2	True				
ANR	2730315	IdentifierDecl	magn		2730305	0					
ANR	2730316	IdentifierDeclType	zend_ulong		2730305	0					
ANR	2730317	Identifier	magn		2730305	1					
ANR	2730318	IdentifierDecl	nmagn		2730305	1					
ANR	2730319	IdentifierDeclType	zend_ulong		2730305	0					
ANR	2730320	Identifier	nmagn		2730305	1					
ANR	2730321	Statement	register	136:1:4335:4342	2730305	3	True				
ANR	2730322	IdentifierDeclStatement	"unsigned int i = NUM_BUF_SIZE - 1 , neg = 0 ;"	136:10:4344:4386	2730305	4	True				
ANR	2730323	IdentifierDecl	i = NUM_BUF_SIZE - 1		2730305	0					
ANR	2730324	IdentifierDeclType	unsigned int		2730305	0					
ANR	2730325	Identifier	i		2730305	1					
ANR	2730326	AssignmentExpression	i = NUM_BUF_SIZE - 1		2730305	2		=			
ANR	2730327	Identifier	i		2730305	0					
ANR	2730328	AdditiveExpression	NUM_BUF_SIZE - 1		2730305	1		-			
ANR	2730329	Identifier	NUM_BUF_SIZE		2730305	0					
ANR	2730330	PrimaryExpression	1		2730305	1					
ANR	2730331	IdentifierDecl	neg = 0		2730305	1					
ANR	2730332	IdentifierDeclType	unsigned int		2730305	0					
ANR	2730333	Identifier	neg		2730305	1					
ANR	2730334	AssignmentExpression	neg = 0		2730305	2		=			
ANR	2730335	Identifier	neg		2730305	0					
ANR	2730336	PrimaryExpression	0		2730305	1					
ANR	2730337	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment ) )"	138:1:4390:4533	2730305	5	True				
ANR	2730338	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment ) )"		2730305	0					
ANR	2730339	Callee	PRINTF_DEBUG		2730305	0					
ANR	2730340	Identifier	PRINTF_DEBUG		2730305	0					
ANR	2730341	ArgumentList	"""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730305	1					
ANR	2730342	Argument	"""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730305	0					
ANR	2730343	Expression	"""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730305	0					
ANR	2730344	PrimaryExpression	"""sprintf: appendint(%x, %x, %x, %d, %d, '%c', %d)\\n"""		2730305	0					
ANR	2730345	Expression	"* buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730305	1					
ANR	2730346	UnaryOperationExpression	* buffer		2730305	0					
ANR	2730347	UnaryOperator	*		2730305	0					
ANR	2730348	Identifier	buffer		2730305	1					
ANR	2730349	Expression	"pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730305	1					
ANR	2730350	Identifier	pos		2730305	0					
ANR	2730351	Expression	"& ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730305	1					
ANR	2730352	UnaryOperationExpression	& ZSTR_LEN ( * buffer )		2730305	0					
ANR	2730353	UnaryOperator	&		2730305	0					
ANR	2730354	CallExpression	ZSTR_LEN ( * buffer )		2730305	1					
ANR	2730355	Callee	ZSTR_LEN		2730305	0					
ANR	2730356	Identifier	ZSTR_LEN		2730305	0					
ANR	2730357	ArgumentList	* buffer		2730305	1					
ANR	2730358	Argument	* buffer		2730305	0					
ANR	2730359	UnaryOperationExpression	* buffer		2730305	0					
ANR	2730360	UnaryOperator	*		2730305	0					
ANR	2730361	Identifier	buffer		2730305	1					
ANR	2730362	Expression	"number , width , padding , alignment"		2730305	1					
ANR	2730363	Identifier	number		2730305	0					
ANR	2730364	Expression	"width , padding , alignment"		2730305	1					
ANR	2730365	Identifier	width		2730305	0					
ANR	2730366	Expression	"padding , alignment"		2730305	1					
ANR	2730367	Identifier	padding		2730305	0					
ANR	2730368	Identifier	alignment		2730305	1					
ANR	2730369	IfStatement	if ( number < 0 )		2730305	6					
ANR	2730370	Condition	number < 0	140:5:4540:4549	2730305	0	True				
ANR	2730371	RelationalExpression	number < 0		2730305	0		<			
ANR	2730372	Identifier	number		2730305	0					
ANR	2730373	PrimaryExpression	0		2730305	1					
ANR	2730374	CompoundStatement		8:17:281:281	2730305	1					
ANR	2730375	ExpressionStatement	neg = 1	141:2:4556:4563	2730305	0	True				
ANR	2730376	AssignmentExpression	neg = 1		2730305	0		=			
ANR	2730377	Identifier	neg		2730305	0					
ANR	2730378	PrimaryExpression	1		2730305	1					
ANR	2730379	ExpressionStatement	magn = ( ( zend_ulong ) - ( number + 1 ) ) + 1	142:2:4567:4606	2730305	1	True				
ANR	2730380	AssignmentExpression	magn = ( ( zend_ulong ) - ( number + 1 ) ) + 1		2730305	0		=			
ANR	2730381	Identifier	magn		2730305	0					
ANR	2730382	AdditiveExpression	( ( zend_ulong ) - ( number + 1 ) ) + 1		2730305	1		+			
ANR	2730383	CastExpression	( zend_ulong ) - ( number + 1 )		2730305	0					
ANR	2730384	CastTarget	zend_ulong		2730305	0					
ANR	2730385	UnaryOperationExpression	- ( number + 1 )		2730305	1					
ANR	2730386	UnaryOperator	-		2730305	0					
ANR	2730387	AdditiveExpression	number + 1		2730305	1		+			
ANR	2730388	Identifier	number		2730305	0					
ANR	2730389	PrimaryExpression	1		2730305	1					
ANR	2730390	PrimaryExpression	1		2730305	1					
ANR	2730391	ElseStatement	else		2730305	0					
ANR	2730392	CompoundStatement		11:8:345:345	2730305	0					
ANR	2730393	ExpressionStatement	magn = ( zend_ulong ) number	144:2:4620:4646	2730305	0	True				
ANR	2730394	AssignmentExpression	magn = ( zend_ulong ) number		2730305	0		=			
ANR	2730395	Identifier	magn		2730305	0					
ANR	2730396	CastExpression	( zend_ulong ) number		2730305	1					
ANR	2730397	CastTarget	zend_ulong		2730305	0					
ANR	2730398	Identifier	number		2730305	1					
ANR	2730399	IfStatement	if ( alignment == 0 && padding == '0' )		2730305	7					
ANR	2730400	Condition	alignment == 0 && padding == '0'	148:4:4695:4722	2730305	0	True				
ANR	2730401	AndExpression	alignment == 0 && padding == '0'		2730305	0		&&			
ANR	2730402	EqualityExpression	alignment == 0		2730305	0		==			
ANR	2730403	Identifier	alignment		2730305	0					
ANR	2730404	PrimaryExpression	0		2730305	1					
ANR	2730405	EqualityExpression	padding == '0'		2730305	1		==			
ANR	2730406	Identifier	padding		2730305	0					
ANR	2730407	PrimaryExpression	'0'		2730305	1					
ANR	2730408	ExpressionStatement	padding = ' '	148:34:4725:4736	2730305	1	True				
ANR	2730409	AssignmentExpression	padding = ' '		2730305	0		=			
ANR	2730410	Identifier	padding		2730305	0					
ANR	2730411	PrimaryExpression	' '		2730305	1					
ANR	2730412	ExpressionStatement	numbuf [ i ] = '\\0'	150:1:4740:4756	2730305	8	True				
ANR	2730413	AssignmentExpression	numbuf [ i ] = '\\0'		2730305	0		=			
ANR	2730414	ArrayIndexing	numbuf [ i ]		2730305	0					
ANR	2730415	Identifier	numbuf		2730305	0					
ANR	2730416	Identifier	i		2730305	1					
ANR	2730417	PrimaryExpression	'\\0'		2730305	1					
ANR	2730418	DoStatement	do		2730305	9					
ANR	2730419	CompoundStatement		20:4:492:492	2730305	0					
ANR	2730420	ExpressionStatement	nmagn = magn / 10	153:2:4767:4784	2730305	0	True				
ANR	2730421	AssignmentExpression	nmagn = magn / 10		2730305	0		=			
ANR	2730422	Identifier	nmagn		2730305	0					
ANR	2730423	MultiplicativeExpression	magn / 10		2730305	1		/			
ANR	2730424	Identifier	magn		2730305	0					
ANR	2730425	PrimaryExpression	10		2730305	1					
ANR	2730426	ExpressionStatement	numbuf [ -- i ] = ( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'	155:2:4789:4845	2730305	1	True				
ANR	2730427	AssignmentExpression	numbuf [ -- i ] = ( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'		2730305	0		=			
ANR	2730428	ArrayIndexing	numbuf [ -- i ]		2730305	0					
ANR	2730429	Identifier	numbuf		2730305	0					
ANR	2730430	UnaryExpression	-- i		2730305	1					
ANR	2730431	IncDec	--		2730305	0					
ANR	2730432	Identifier	i		2730305	1					
ANR	2730433	AdditiveExpression	( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'		2730305	1		+			
ANR	2730434	CastExpression	( unsigned char ) ( magn - ( nmagn * 10 ) )		2730305	0					
ANR	2730435	CastTarget	unsigned char		2730305	0					
ANR	2730436	AdditiveExpression	magn - ( nmagn * 10 )		2730305	1		-			
ANR	2730437	Identifier	magn		2730305	0					
ANR	2730438	MultiplicativeExpression	nmagn * 10		2730305	1		*			
ANR	2730439	Identifier	nmagn		2730305	0					
ANR	2730440	PrimaryExpression	10		2730305	1					
ANR	2730441	PrimaryExpression	'0'		2730305	1					
ANR	2730442	ExpressionStatement	magn = nmagn	156:2:4849:4861	2730305	2	True				
ANR	2730443	AssignmentExpression	magn = nmagn		2730305	0		=			
ANR	2730444	Identifier	magn		2730305	0					
ANR	2730445	Identifier	nmagn		2730305	1					
ANR	2730446	Condition	magn > 0 && i > 1	158:8:4874:4890	2730305	1	True				
ANR	2730447	AndExpression	magn > 0 && i > 1		2730305	0		&&			
ANR	2730448	RelationalExpression	magn > 0		2730305	0		>			
ANR	2730449	Identifier	magn		2730305	0					
ANR	2730450	PrimaryExpression	0		2730305	1					
ANR	2730451	RelationalExpression	i > 1		2730305	1		>			
ANR	2730452	Identifier	i		2730305	0					
ANR	2730453	PrimaryExpression	1		2730305	1					
ANR	2730454	IfStatement	if ( neg )		2730305	10					
ANR	2730455	Condition	neg	159:5:4899:4901	2730305	0	True				
ANR	2730456	Identifier	neg		2730305	0					
ANR	2730457	CompoundStatement		27:10:633:633	2730305	1					
ANR	2730458	ExpressionStatement	numbuf [ -- i ] = '-'	160:2:4908:4925	2730305	0	True				
ANR	2730459	AssignmentExpression	numbuf [ -- i ] = '-'		2730305	0		=			
ANR	2730460	ArrayIndexing	numbuf [ -- i ]		2730305	0					
ANR	2730461	Identifier	numbuf		2730305	0					
ANR	2730462	UnaryExpression	-- i		2730305	1					
ANR	2730463	IncDec	--		2730305	0					
ANR	2730464	Identifier	i		2730305	1					
ANR	2730465	PrimaryExpression	'-'		2730305	1					
ANR	2730466	ElseStatement	else		2730305	0					
ANR	2730467	IfStatement	if ( always_sign )		2730305	0					
ANR	2730468	Condition	always_sign	161:12:4939:4949	2730305	0	True				
ANR	2730469	Identifier	always_sign		2730305	0					
ANR	2730470	CompoundStatement		29:25:681:681	2730305	1					
ANR	2730471	ExpressionStatement	numbuf [ -- i ] = '+'	162:2:4956:4973	2730305	0	True				
ANR	2730472	AssignmentExpression	numbuf [ -- i ] = '+'		2730305	0		=			
ANR	2730473	ArrayIndexing	numbuf [ -- i ]		2730305	0					
ANR	2730474	Identifier	numbuf		2730305	0					
ANR	2730475	UnaryExpression	-- i		2730305	1					
ANR	2730476	IncDec	--		2730305	0					
ANR	2730477	Identifier	i		2730305	1					
ANR	2730478	PrimaryExpression	'+'		2730305	1					
ANR	2730479	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i ) )"	164:1:4979:5065	2730305	11	True				
ANR	2730480	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i ) )"		2730305	0					
ANR	2730481	Callee	PRINTF_DEBUG		2730305	0					
ANR	2730482	Identifier	PRINTF_DEBUG		2730305	0					
ANR	2730483	ArgumentList	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		2730305	1					
ANR	2730484	Argument	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		2730305	0					
ANR	2730485	Expression	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		2730305	0					
ANR	2730486	PrimaryExpression	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"""		2730305	0					
ANR	2730487	Expression	"number , & numbuf [ i ] , i"		2730305	1					
ANR	2730488	Identifier	number		2730305	0					
ANR	2730489	Expression	"& numbuf [ i ] , i"		2730305	1					
ANR	2730490	UnaryOperationExpression	& numbuf [ i ]		2730305	0					
ANR	2730491	UnaryOperator	&		2730305	0					
ANR	2730492	ArrayIndexing	numbuf [ i ]		2730305	1					
ANR	2730493	Identifier	numbuf		2730305	0					
ANR	2730494	Identifier	i		2730305	1					
ANR	2730495	Identifier	i		2730305	1					
ANR	2730496	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , neg , 0 , always_sign )"	166:1:5068:5208	2730305	12	True				
ANR	2730497	CallExpression	"php_sprintf_appendstring ( buffer , pos , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , neg , 0 , always_sign )"		2730305	0					
ANR	2730498	Callee	php_sprintf_appendstring		2730305	0					
ANR	2730499	Identifier	php_sprintf_appendstring		2730305	0					
ANR	2730500	ArgumentList	buffer		2730305	1					
ANR	2730501	Argument	buffer		2730305	0					
ANR	2730502	Identifier	buffer		2730305	0					
ANR	2730503	Argument	pos		2730305	1					
ANR	2730504	Identifier	pos		2730305	0					
ANR	2730505	Argument	& numbuf [ i ]		2730305	2					
ANR	2730506	UnaryOperationExpression	& numbuf [ i ]		2730305	0					
ANR	2730507	UnaryOperator	&		2730305	0					
ANR	2730508	ArrayIndexing	numbuf [ i ]		2730305	1					
ANR	2730509	Identifier	numbuf		2730305	0					
ANR	2730510	Identifier	i		2730305	1					
ANR	2730511	Argument	width		2730305	3					
ANR	2730512	Identifier	width		2730305	0					
ANR	2730513	Argument	0		2730305	4					
ANR	2730514	PrimaryExpression	0		2730305	0					
ANR	2730515	Argument	padding		2730305	5					
ANR	2730516	Identifier	padding		2730305	0					
ANR	2730517	Argument	alignment		2730305	6					
ANR	2730518	Identifier	alignment		2730305	0					
ANR	2730519	Argument	( NUM_BUF_SIZE - 1 ) - i		2730305	7					
ANR	2730520	AdditiveExpression	( NUM_BUF_SIZE - 1 ) - i		2730305	0		-			
ANR	2730521	AdditiveExpression	NUM_BUF_SIZE - 1		2730305	0		-			
ANR	2730522	Identifier	NUM_BUF_SIZE		2730305	0					
ANR	2730523	PrimaryExpression	1		2730305	1					
ANR	2730524	Identifier	i		2730305	1					
ANR	2730525	Argument	neg		2730305	8					
ANR	2730526	Identifier	neg		2730305	0					
ANR	2730527	Argument	0		2730305	9					
ANR	2730528	PrimaryExpression	0		2730305	0					
ANR	2730529	Argument	always_sign		2730305	10					
ANR	2730530	Identifier	always_sign		2730305	0					
ANR	2730531	ReturnType	inline static void		2730305	1					
ANR	2730532	Identifier	php_sprintf_appendint		2730305	2					
ANR	2730533	ParameterList	"zend_string * * buffer , size_t * pos , zend_long number , size_t width , char padding , size_t alignment , int always_sign"		2730305	3					
ANR	2730534	Parameter	zend_string * * buffer	130:22:4142:4161	2730305	0	True				
ANR	2730535	ParameterType	zend_string * *		2730305	0					
ANR	2730536	Identifier	buffer		2730305	1					
ANR	2730537	Parameter	size_t * pos	130:44:4164:4174	2730305	1	True				
ANR	2730538	ParameterType	size_t *		2730305	0					
ANR	2730539	Identifier	pos		2730305	1					
ANR	2730540	Parameter	zend_long number	130:57:4177:4192	2730305	2	True				
ANR	2730541	ParameterType	zend_long		2730305	0					
ANR	2730542	Identifier	number		2730305	1					
ANR	2730543	Parameter	size_t width	131:6:4201:4212	2730305	3	True				
ANR	2730544	ParameterType	size_t		2730305	0					
ANR	2730545	Identifier	width		2730305	1					
ANR	2730546	Parameter	char padding	131:20:4215:4226	2730305	4	True				
ANR	2730547	ParameterType	char		2730305	0					
ANR	2730548	Identifier	padding		2730305	1					
ANR	2730549	Parameter	size_t alignment	131:34:4229:4244	2730305	5	True				
ANR	2730550	ParameterType	size_t		2730305	0					
ANR	2730551	Identifier	alignment		2730305	1					
ANR	2730552	Parameter	int always_sign	132:6:4253:4267	2730305	6	True				
ANR	2730553	ParameterType	int		2730305	0					
ANR	2730554	Identifier	always_sign		2730305	1					
ANR	2730555	CFGEntryNode	ENTRY		2730305		True				
ANR	2730556	CFGExitNode	EXIT		2730305		True				
ANR	2730557	Symbol	padding		2730305						
ANR	2730558	Symbol	* buffer		2730305						
ANR	2730559	Symbol	nmagn		2730305						
ANR	2730560	Symbol	magn		2730305						
ANR	2730561	Symbol	always_sign		2730305						
ANR	2730562	Symbol	i		2730305						
ANR	2730563	Symbol	& ZSTR_LEN		2730305						
ANR	2730564	Symbol	number		2730305						
ANR	2730565	Symbol	neg		2730305						
ANR	2730566	Symbol	* numbuf		2730305						
ANR	2730567	Symbol	* i		2730305						
ANR	2730568	Symbol	pos		2730305						
ANR	2730569	Symbol	numbuf		2730305						
ANR	2730570	Symbol	width		2730305						
ANR	2730571	Symbol	NUM_BUF_SIZE		2730305						
ANR	2730572	Symbol	buffer		2730305						
ANR	2730573	Symbol	alignment		2730305						
ANR	2730574	Function	php_sprintf_appenduint	173:0:5257:6157							
ANR	2730575	FunctionDef	"php_sprintf_appenduint (zend_string * * buffer , size_t * pos , zend_ulong number , size_t width , char padding , size_t alignment)"		2730574	0					
ANR	2730576	CompoundStatement		177:0:5415:6157	2730574	0					
ANR	2730577	IdentifierDeclStatement	char numbuf [ NUM_BUF_SIZE ] ;	178:1:5418:5443	2730574	0	True				
ANR	2730578	IdentifierDecl	numbuf [ NUM_BUF_SIZE ]		2730574	0					
ANR	2730579	IdentifierDeclType	char [ NUM_BUF_SIZE ]		2730574	0					
ANR	2730580	Identifier	numbuf		2730574	1					
ANR	2730581	Identifier	NUM_BUF_SIZE		2730574	2					
ANR	2730582	Statement	register	179:1:5446:5453	2730574	1	True				
ANR	2730583	IdentifierDeclStatement	"zend_ulong magn , nmagn ;"	179:10:5455:5477	2730574	2	True				
ANR	2730584	IdentifierDecl	magn		2730574	0					
ANR	2730585	IdentifierDeclType	zend_ulong		2730574	0					
ANR	2730586	Identifier	magn		2730574	1					
ANR	2730587	IdentifierDecl	nmagn		2730574	1					
ANR	2730588	IdentifierDeclType	zend_ulong		2730574	0					
ANR	2730589	Identifier	nmagn		2730574	1					
ANR	2730590	Statement	register	180:1:5480:5487	2730574	3	True				
ANR	2730591	IdentifierDeclStatement	unsigned int i = NUM_BUF_SIZE - 1 ;	180:10:5489:5522	2730574	4	True				
ANR	2730592	IdentifierDecl	i = NUM_BUF_SIZE - 1		2730574	0					
ANR	2730593	IdentifierDeclType	unsigned int		2730574	0					
ANR	2730594	Identifier	i		2730574	1					
ANR	2730595	AssignmentExpression	i = NUM_BUF_SIZE - 1		2730574	2		=			
ANR	2730596	Identifier	i		2730574	0					
ANR	2730597	AdditiveExpression	NUM_BUF_SIZE - 1		2730574	1		-			
ANR	2730598	Identifier	NUM_BUF_SIZE		2730574	0					
ANR	2730599	PrimaryExpression	1		2730574	1					
ANR	2730600	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment ) )"	182:1:5526:5670	2730574	5	True				
ANR	2730601	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment ) )"		2730574	0					
ANR	2730602	Callee	PRINTF_DEBUG		2730574	0					
ANR	2730603	Identifier	PRINTF_DEBUG		2730574	0					
ANR	2730604	ArgumentList	"""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730574	1					
ANR	2730605	Argument	"""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730574	0					
ANR	2730606	Expression	"""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730574	0					
ANR	2730607	PrimaryExpression	"""sprintf: appenduint(%x, %x, %x, %d, %d, '%c', %d)\\n"""		2730574	0					
ANR	2730608	Expression	"* buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730574	1					
ANR	2730609	UnaryOperationExpression	* buffer		2730574	0					
ANR	2730610	UnaryOperator	*		2730574	0					
ANR	2730611	Identifier	buffer		2730574	1					
ANR	2730612	Expression	"pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730574	1					
ANR	2730613	Identifier	pos		2730574	0					
ANR	2730614	Expression	"& ZSTR_LEN ( * buffer ) , number , width , padding , alignment"		2730574	1					
ANR	2730615	UnaryOperationExpression	& ZSTR_LEN ( * buffer )		2730574	0					
ANR	2730616	UnaryOperator	&		2730574	0					
ANR	2730617	CallExpression	ZSTR_LEN ( * buffer )		2730574	1					
ANR	2730618	Callee	ZSTR_LEN		2730574	0					
ANR	2730619	Identifier	ZSTR_LEN		2730574	0					
ANR	2730620	ArgumentList	* buffer		2730574	1					
ANR	2730621	Argument	* buffer		2730574	0					
ANR	2730622	UnaryOperationExpression	* buffer		2730574	0					
ANR	2730623	UnaryOperator	*		2730574	0					
ANR	2730624	Identifier	buffer		2730574	1					
ANR	2730625	Expression	"number , width , padding , alignment"		2730574	1					
ANR	2730626	Identifier	number		2730574	0					
ANR	2730627	Expression	"width , padding , alignment"		2730574	1					
ANR	2730628	Identifier	width		2730574	0					
ANR	2730629	Expression	"padding , alignment"		2730574	1					
ANR	2730630	Identifier	padding		2730574	0					
ANR	2730631	Identifier	alignment		2730574	1					
ANR	2730632	ExpressionStatement	magn = ( zend_ulong ) number	184:1:5673:5699	2730574	6	True				
ANR	2730633	AssignmentExpression	magn = ( zend_ulong ) number		2730574	0		=			
ANR	2730634	Identifier	magn		2730574	0					
ANR	2730635	CastExpression	( zend_ulong ) number		2730574	1					
ANR	2730636	CastTarget	zend_ulong		2730574	0					
ANR	2730637	Identifier	number		2730574	1					
ANR	2730638	IfStatement	if ( alignment == 0 && padding == '0' )		2730574	7					
ANR	2730639	Condition	alignment == 0 && padding == '0'	187:5:5746:5777	2730574	0	True				
ANR	2730640	AndExpression	alignment == 0 && padding == '0'		2730574	0		&&			
ANR	2730641	EqualityExpression	alignment == 0		2730574	0		==			
ANR	2730642	Identifier	alignment		2730574	0					
ANR	2730643	PrimaryExpression	0		2730574	1					
ANR	2730644	EqualityExpression	padding == '0'		2730574	1		==			
ANR	2730645	Identifier	padding		2730574	0					
ANR	2730646	PrimaryExpression	'0'		2730574	1					
ANR	2730647	ExpressionStatement	padding = ' '	187:39:5780:5793	2730574	1	True				
ANR	2730648	AssignmentExpression	padding = ' '		2730574	0		=			
ANR	2730649	Identifier	padding		2730574	0					
ANR	2730650	PrimaryExpression	' '		2730574	1					
ANR	2730651	ExpressionStatement	numbuf [ i ] = '\\0'	189:1:5797:5813	2730574	8	True				
ANR	2730652	AssignmentExpression	numbuf [ i ] = '\\0'		2730574	0		=			
ANR	2730653	ArrayIndexing	numbuf [ i ]		2730574	0					
ANR	2730654	Identifier	numbuf		2730574	0					
ANR	2730655	Identifier	i		2730574	1					
ANR	2730656	PrimaryExpression	'\\0'		2730574	1					
ANR	2730657	DoStatement	do		2730574	9					
ANR	2730658	CompoundStatement		15:4:404:404	2730574	0					
ANR	2730659	ExpressionStatement	nmagn = magn / 10	192:2:5824:5841	2730574	0	True				
ANR	2730660	AssignmentExpression	nmagn = magn / 10		2730574	0		=			
ANR	2730661	Identifier	nmagn		2730574	0					
ANR	2730662	MultiplicativeExpression	magn / 10		2730574	1		/			
ANR	2730663	Identifier	magn		2730574	0					
ANR	2730664	PrimaryExpression	10		2730574	1					
ANR	2730665	ExpressionStatement	numbuf [ -- i ] = ( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'	194:2:5846:5902	2730574	1	True				
ANR	2730666	AssignmentExpression	numbuf [ -- i ] = ( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'		2730574	0		=			
ANR	2730667	ArrayIndexing	numbuf [ -- i ]		2730574	0					
ANR	2730668	Identifier	numbuf		2730574	0					
ANR	2730669	UnaryExpression	-- i		2730574	1					
ANR	2730670	IncDec	--		2730574	0					
ANR	2730671	Identifier	i		2730574	1					
ANR	2730672	AdditiveExpression	( unsigned char ) ( magn - ( nmagn * 10 ) ) + '0'		2730574	1		+			
ANR	2730673	CastExpression	( unsigned char ) ( magn - ( nmagn * 10 ) )		2730574	0					
ANR	2730674	CastTarget	unsigned char		2730574	0					
ANR	2730675	AdditiveExpression	magn - ( nmagn * 10 )		2730574	1		-			
ANR	2730676	Identifier	magn		2730574	0					
ANR	2730677	MultiplicativeExpression	nmagn * 10		2730574	1		*			
ANR	2730678	Identifier	nmagn		2730574	0					
ANR	2730679	PrimaryExpression	10		2730574	1					
ANR	2730680	PrimaryExpression	'0'		2730574	1					
ANR	2730681	ExpressionStatement	magn = nmagn	195:2:5906:5918	2730574	2	True				
ANR	2730682	AssignmentExpression	magn = nmagn		2730574	0		=			
ANR	2730683	Identifier	magn		2730574	0					
ANR	2730684	Identifier	nmagn		2730574	1					
ANR	2730685	Condition	magn > 0 && i > 0	196:10:5930:5946	2730574	1	True				
ANR	2730686	AndExpression	magn > 0 && i > 0		2730574	0		&&			
ANR	2730687	RelationalExpression	magn > 0		2730574	0		>			
ANR	2730688	Identifier	magn		2730574	0					
ANR	2730689	PrimaryExpression	0		2730574	1					
ANR	2730690	RelationalExpression	i > 0		2730574	1		>			
ANR	2730691	Identifier	i		2730574	0					
ANR	2730692	PrimaryExpression	0		2730574	1					
ANR	2730693	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i ) )"	198:1:5952:6032	2730574	10	True				
ANR	2730694	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i ) )"		2730574	0					
ANR	2730695	Callee	PRINTF_DEBUG		2730574	0					
ANR	2730696	Identifier	PRINTF_DEBUG		2730574	0					
ANR	2730697	ArgumentList	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		2730574	1					
ANR	2730698	Argument	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		2730574	0					
ANR	2730699	Expression	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"" , number , & numbuf [ i ] , i"		2730574	0					
ANR	2730700	PrimaryExpression	"""sprintf: appending %d as \\""%s\\"", i=%d\\n"""		2730574	0					
ANR	2730701	Expression	"number , & numbuf [ i ] , i"		2730574	1					
ANR	2730702	Identifier	number		2730574	0					
ANR	2730703	Expression	"& numbuf [ i ] , i"		2730574	1					
ANR	2730704	UnaryOperationExpression	& numbuf [ i ]		2730574	0					
ANR	2730705	UnaryOperator	&		2730574	0					
ANR	2730706	ArrayIndexing	numbuf [ i ]		2730574	1					
ANR	2730707	Identifier	numbuf		2730574	0					
ANR	2730708	Identifier	i		2730574	1					
ANR	2730709	Identifier	i		2730574	1					
ANR	2730710	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , 0 , 0 , 0 )"	199:1:6035:6155	2730574	11	True				
ANR	2730711	CallExpression	"php_sprintf_appendstring ( buffer , pos , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , 0 , 0 , 0 )"		2730574	0					
ANR	2730712	Callee	php_sprintf_appendstring		2730574	0					
ANR	2730713	Identifier	php_sprintf_appendstring		2730574	0					
ANR	2730714	ArgumentList	buffer		2730574	1					
ANR	2730715	Argument	buffer		2730574	0					
ANR	2730716	Identifier	buffer		2730574	0					
ANR	2730717	Argument	pos		2730574	1					
ANR	2730718	Identifier	pos		2730574	0					
ANR	2730719	Argument	& numbuf [ i ]		2730574	2					
ANR	2730720	UnaryOperationExpression	& numbuf [ i ]		2730574	0					
ANR	2730721	UnaryOperator	&		2730574	0					
ANR	2730722	ArrayIndexing	numbuf [ i ]		2730574	1					
ANR	2730723	Identifier	numbuf		2730574	0					
ANR	2730724	Identifier	i		2730574	1					
ANR	2730725	Argument	width		2730574	3					
ANR	2730726	Identifier	width		2730574	0					
ANR	2730727	Argument	0		2730574	4					
ANR	2730728	PrimaryExpression	0		2730574	0					
ANR	2730729	Argument	padding		2730574	5					
ANR	2730730	Identifier	padding		2730574	0					
ANR	2730731	Argument	alignment		2730574	6					
ANR	2730732	Identifier	alignment		2730574	0					
ANR	2730733	Argument	( NUM_BUF_SIZE - 1 ) - i		2730574	7					
ANR	2730734	AdditiveExpression	( NUM_BUF_SIZE - 1 ) - i		2730574	0		-			
ANR	2730735	AdditiveExpression	NUM_BUF_SIZE - 1		2730574	0		-			
ANR	2730736	Identifier	NUM_BUF_SIZE		2730574	0					
ANR	2730737	PrimaryExpression	1		2730574	1					
ANR	2730738	Identifier	i		2730574	1					
ANR	2730739	Argument	0		2730574	8					
ANR	2730740	PrimaryExpression	0		2730574	0					
ANR	2730741	Argument	0		2730574	9					
ANR	2730742	PrimaryExpression	0		2730574	0					
ANR	2730743	Argument	0		2730574	10					
ANR	2730744	PrimaryExpression	0		2730574	0					
ANR	2730745	ReturnType	inline static void		2730574	1					
ANR	2730746	Identifier	php_sprintf_appenduint		2730574	2					
ANR	2730747	ParameterList	"zend_string * * buffer , size_t * pos , zend_ulong number , size_t width , char padding , size_t alignment"		2730574	3					
ANR	2730748	Parameter	zend_string * * buffer	174:23:5299:5318	2730574	0	True				
ANR	2730749	ParameterType	zend_string * *		2730574	0					
ANR	2730750	Identifier	buffer		2730574	1					
ANR	2730751	Parameter	size_t * pos	174:45:5321:5331	2730574	1	True				
ANR	2730752	ParameterType	size_t *		2730574	0					
ANR	2730753	Identifier	pos		2730574	1					
ANR	2730754	Parameter	zend_ulong number	175:8:5342:5358	2730574	2	True				
ANR	2730755	ParameterType	zend_ulong		2730574	0					
ANR	2730756	Identifier	number		2730574	1					
ANR	2730757	Parameter	size_t width	176:8:5369:5380	2730574	3	True				
ANR	2730758	ParameterType	size_t		2730574	0					
ANR	2730759	Identifier	width		2730574	1					
ANR	2730760	Parameter	char padding	176:22:5383:5394	2730574	4	True				
ANR	2730761	ParameterType	char		2730574	0					
ANR	2730762	Identifier	padding		2730574	1					
ANR	2730763	Parameter	size_t alignment	176:36:5397:5412	2730574	5	True				
ANR	2730764	ParameterType	size_t		2730574	0					
ANR	2730765	Identifier	alignment		2730574	1					
ANR	2730766	CFGEntryNode	ENTRY		2730574		True				
ANR	2730767	CFGExitNode	EXIT		2730574		True				
ANR	2730768	Symbol	padding		2730574						
ANR	2730769	Symbol	* buffer		2730574						
ANR	2730770	Symbol	magn		2730574						
ANR	2730771	Symbol	nmagn		2730574						
ANR	2730772	Symbol	i		2730574						
ANR	2730773	Symbol	& ZSTR_LEN		2730574						
ANR	2730774	Symbol	number		2730574						
ANR	2730775	Symbol	* numbuf		2730574						
ANR	2730776	Symbol	* i		2730574						
ANR	2730777	Symbol	pos		2730574						
ANR	2730778	Symbol	numbuf		2730574						
ANR	2730779	Symbol	width		2730574						
ANR	2730780	Symbol	NUM_BUF_SIZE		2730574						
ANR	2730781	Symbol	buffer		2730574						
ANR	2730782	Symbol	alignment		2730574						
ANR	2730783	Function	php_sprintf_appenddouble	205:0:6206:8586							
ANR	2730784	FunctionDef	"php_sprintf_appenddouble (zend_string * * buffer , size_t * pos , double number , size_t width , char padding , size_t alignment , int precision , int adjust , char fmt , int always_sign)"		2730783	0					
ANR	2730785	CompoundStatement		213:0:6442:8586	2730783	0					
ANR	2730786	IdentifierDeclStatement	char num_buf [ NUM_BUF_SIZE ] ;	214:1:6445:6471	2730783	0	True				
ANR	2730787	IdentifierDecl	num_buf [ NUM_BUF_SIZE ]		2730783	0					
ANR	2730788	IdentifierDeclType	char [ NUM_BUF_SIZE ]		2730783	0					
ANR	2730789	Identifier	num_buf		2730783	1					
ANR	2730790	Identifier	NUM_BUF_SIZE		2730783	2					
ANR	2730791	IdentifierDeclStatement	char * s = NULL ;	215:1:6474:6488	2730783	1	True				
ANR	2730792	IdentifierDecl	* s = NULL		2730783	0					
ANR	2730793	IdentifierDeclType	char *		2730783	0					
ANR	2730794	Identifier	s		2730783	1					
ANR	2730795	AssignmentExpression	* s = NULL		2730783	2		=			
ANR	2730796	Identifier	NULL		2730783	0					
ANR	2730797	Identifier	NULL		2730783	1					
ANR	2730798	IdentifierDeclStatement	size_t s_len = 0 ;	216:1:6491:6507	2730783	2	True				
ANR	2730799	IdentifierDecl	s_len = 0		2730783	0					
ANR	2730800	IdentifierDeclType	size_t		2730783	0					
ANR	2730801	Identifier	s_len		2730783	1					
ANR	2730802	AssignmentExpression	s_len = 0		2730783	2		=			
ANR	2730803	Identifier	s_len		2730783	0					
ANR	2730804	PrimaryExpression	0		2730783	1					
ANR	2730805	IdentifierDeclStatement	int is_negative = 0 ;	217:1:6510:6529	2730783	3	True				
ANR	2730806	IdentifierDecl	is_negative = 0		2730783	0					
ANR	2730807	IdentifierDeclType	int		2730783	0					
ANR	2730808	Identifier	is_negative		2730783	1					
ANR	2730809	AssignmentExpression	is_negative = 0		2730783	2		=			
ANR	2730810	Identifier	is_negative		2730783	0					
ANR	2730811	PrimaryExpression	0		2730783	1					
ANR	2730812	IdentifierDeclStatement	struct lconv lconv ;	220:1:6564:6582	2730783	4	True				
ANR	2730813	IdentifierDecl	lconv		2730783	0					
ANR	2730814	IdentifierDeclType	struct lconv		2730783	0					
ANR	2730815	Identifier	lconv		2730783	1					
ANR	2730816	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , fmt ) )"	226:1:6628:6783	2730783	5	True				
ANR	2730817	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , fmt ) )"		2730783	0					
ANR	2730818	Callee	PRINTF_DEBUG		2730783	0					
ANR	2730819	Identifier	PRINTF_DEBUG		2730783	0					
ANR	2730820	ArgumentList	"""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , fmt"		2730783	1					
ANR	2730821	Argument	"""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , fmt"		2730783	0					
ANR	2730822	Expression	"""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , fmt"		2730783	0					
ANR	2730823	PrimaryExpression	"""sprintf: appenddouble(%x, %x, %x, %f, %d, '%c', %d, %c)\\n"""		2730783	0					
ANR	2730824	Expression	"* buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , fmt"		2730783	1					
ANR	2730825	UnaryOperationExpression	* buffer		2730783	0					
ANR	2730826	UnaryOperator	*		2730783	0					
ANR	2730827	Identifier	buffer		2730783	1					
ANR	2730828	Expression	"pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , fmt"		2730783	1					
ANR	2730829	Identifier	pos		2730783	0					
ANR	2730830	Expression	"& ZSTR_LEN ( * buffer ) , number , width , padding , alignment , fmt"		2730783	1					
ANR	2730831	UnaryOperationExpression	& ZSTR_LEN ( * buffer )		2730783	0					
ANR	2730832	UnaryOperator	&		2730783	0					
ANR	2730833	CallExpression	ZSTR_LEN ( * buffer )		2730783	1					
ANR	2730834	Callee	ZSTR_LEN		2730783	0					
ANR	2730835	Identifier	ZSTR_LEN		2730783	0					
ANR	2730836	ArgumentList	* buffer		2730783	1					
ANR	2730837	Argument	* buffer		2730783	0					
ANR	2730838	UnaryOperationExpression	* buffer		2730783	0					
ANR	2730839	UnaryOperator	*		2730783	0					
ANR	2730840	Identifier	buffer		2730783	1					
ANR	2730841	Expression	"number , width , padding , alignment , fmt"		2730783	1					
ANR	2730842	Identifier	number		2730783	0					
ANR	2730843	Expression	"width , padding , alignment , fmt"		2730783	1					
ANR	2730844	Identifier	width		2730783	0					
ANR	2730845	Expression	"padding , alignment , fmt"		2730783	1					
ANR	2730846	Identifier	padding		2730783	0					
ANR	2730847	Expression	"alignment , fmt"		2730783	1					
ANR	2730848	Identifier	alignment		2730783	0					
ANR	2730849	Identifier	fmt		2730783	1					
ANR	2730850	IfStatement	if ( ( adjust & ADJ_PRECISION ) == 0 )		2730783	6					
ANR	2730851	Condition	( adjust & ADJ_PRECISION ) == 0	228:5:6790:6818	2730783	0	True				
ANR	2730852	EqualityExpression	( adjust & ADJ_PRECISION ) == 0		2730783	0		==			
ANR	2730853	BitAndExpression	adjust & ADJ_PRECISION		2730783	0		&			
ANR	2730854	Identifier	adjust		2730783	0					
ANR	2730855	Identifier	ADJ_PRECISION		2730783	1					
ANR	2730856	PrimaryExpression	0		2730783	1					
ANR	2730857	CompoundStatement		16:36:378:378	2730783	1					
ANR	2730858	ExpressionStatement	precision = FLOAT_PRECISION	229:2:6825:6852	2730783	0	True				
ANR	2730859	AssignmentExpression	precision = FLOAT_PRECISION		2730783	0		=			
ANR	2730860	Identifier	precision		2730783	0					
ANR	2730861	Identifier	FLOAT_PRECISION		2730783	1					
ANR	2730862	ElseStatement	else		2730783	0					
ANR	2730863	IfStatement	if ( precision > MAX_FLOAT_PRECISION )		2730783	0					
ANR	2730864	Condition	precision > MAX_FLOAT_PRECISION	230:12:6866:6896	2730783	0	True				
ANR	2730865	RelationalExpression	precision > MAX_FLOAT_PRECISION		2730783	0		>			
ANR	2730866	Identifier	precision		2730783	0					
ANR	2730867	Identifier	MAX_FLOAT_PRECISION		2730783	1					
ANR	2730868	CompoundStatement		18:45:456:456	2730783	1					
ANR	2730869	ExpressionStatement	"php_error_docref ( NULL , E_NOTICE , ""Requested precision of %d digits was truncated to PHP maximum of %d digits"" , precision , MAX_FLOAT_PRECISION )"	231:2:6903:7045	2730783	0	True				
ANR	2730870	CallExpression	"php_error_docref ( NULL , E_NOTICE , ""Requested precision of %d digits was truncated to PHP maximum of %d digits"" , precision , MAX_FLOAT_PRECISION )"		2730783	0					
ANR	2730871	Callee	php_error_docref		2730783	0					
ANR	2730872	Identifier	php_error_docref		2730783	0					
ANR	2730873	ArgumentList	NULL		2730783	1					
ANR	2730874	Argument	NULL		2730783	0					
ANR	2730875	Identifier	NULL		2730783	0					
ANR	2730876	Argument	E_NOTICE		2730783	1					
ANR	2730877	Identifier	E_NOTICE		2730783	0					
ANR	2730878	Argument	"""Requested precision of %d digits was truncated to PHP maximum of %d digits"""		2730783	2					
ANR	2730879	PrimaryExpression	"""Requested precision of %d digits was truncated to PHP maximum of %d digits"""		2730783	0					
ANR	2730880	Argument	precision		2730783	3					
ANR	2730881	Identifier	precision		2730783	0					
ANR	2730882	Argument	MAX_FLOAT_PRECISION		2730783	4					
ANR	2730883	Identifier	MAX_FLOAT_PRECISION		2730783	0					
ANR	2730884	ExpressionStatement	precision = MAX_FLOAT_PRECISION	232:2:7049:7080	2730783	1	True				
ANR	2730885	AssignmentExpression	precision = MAX_FLOAT_PRECISION		2730783	0		=			
ANR	2730886	Identifier	precision		2730783	0					
ANR	2730887	Identifier	MAX_FLOAT_PRECISION		2730783	1					
ANR	2730888	IfStatement	if ( zend_isnan ( number ) )		2730783	7					
ANR	2730889	Condition	zend_isnan ( number )	235:5:7091:7108	2730783	0	True				
ANR	2730890	CallExpression	zend_isnan ( number )		2730783	0					
ANR	2730891	Callee	zend_isnan		2730783	0					
ANR	2730892	Identifier	zend_isnan		2730783	0					
ANR	2730893	ArgumentList	number		2730783	1					
ANR	2730894	Argument	number		2730783	0					
ANR	2730895	Identifier	number		2730783	0					
ANR	2730896	CompoundStatement		23:25:668:668	2730783	1					
ANR	2730897	ExpressionStatement	is_negative = ( number < 0 )	236:2:7115:7139	2730783	0	True				
ANR	2730898	AssignmentExpression	is_negative = ( number < 0 )		2730783	0		=			
ANR	2730899	Identifier	is_negative		2730783	0					
ANR	2730900	RelationalExpression	number < 0		2730783	1		<			
ANR	2730901	Identifier	number		2730783	0					
ANR	2730902	PrimaryExpression	0		2730783	1					
ANR	2730903	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , ""NaN"" , 3 , 0 , padding , alignment , 3 , is_negative , 0 , always_sign )"	237:2:7143:7254	2730783	1	True				
ANR	2730904	CallExpression	"php_sprintf_appendstring ( buffer , pos , ""NaN"" , 3 , 0 , padding , alignment , 3 , is_negative , 0 , always_sign )"		2730783	0					
ANR	2730905	Callee	php_sprintf_appendstring		2730783	0					
ANR	2730906	Identifier	php_sprintf_appendstring		2730783	0					
ANR	2730907	ArgumentList	buffer		2730783	1					
ANR	2730908	Argument	buffer		2730783	0					
ANR	2730909	Identifier	buffer		2730783	0					
ANR	2730910	Argument	pos		2730783	1					
ANR	2730911	Identifier	pos		2730783	0					
ANR	2730912	Argument	"""NaN"""		2730783	2					
ANR	2730913	PrimaryExpression	"""NaN"""		2730783	0					
ANR	2730914	Argument	3		2730783	3					
ANR	2730915	PrimaryExpression	3		2730783	0					
ANR	2730916	Argument	0		2730783	4					
ANR	2730917	PrimaryExpression	0		2730783	0					
ANR	2730918	Argument	padding		2730783	5					
ANR	2730919	Identifier	padding		2730783	0					
ANR	2730920	Argument	alignment		2730783	6					
ANR	2730921	Identifier	alignment		2730783	0					
ANR	2730922	Argument	3		2730783	7					
ANR	2730923	PrimaryExpression	3		2730783	0					
ANR	2730924	Argument	is_negative		2730783	8					
ANR	2730925	Identifier	is_negative		2730783	0					
ANR	2730926	Argument	0		2730783	9					
ANR	2730927	PrimaryExpression	0		2730783	0					
ANR	2730928	Argument	always_sign		2730783	10					
ANR	2730929	Identifier	always_sign		2730783	0					
ANR	2730930	ReturnStatement	return ;	239:2:7258:7264	2730783	2	True				
ANR	2730931	IfStatement	if ( zend_isinf ( number ) )		2730783	8					
ANR	2730932	Condition	zend_isinf ( number )	242:5:7275:7292	2730783	0	True				
ANR	2730933	CallExpression	zend_isinf ( number )		2730783	0					
ANR	2730934	Callee	zend_isinf		2730783	0					
ANR	2730935	Identifier	zend_isinf		2730783	0					
ANR	2730936	ArgumentList	number		2730783	1					
ANR	2730937	Argument	number		2730783	0					
ANR	2730938	Identifier	number		2730783	0					
ANR	2730939	CompoundStatement		30:25:852:852	2730783	1					
ANR	2730940	ExpressionStatement	is_negative = ( number < 0 )	243:2:7299:7323	2730783	0	True				
ANR	2730941	AssignmentExpression	is_negative = ( number < 0 )		2730783	0		=			
ANR	2730942	Identifier	is_negative		2730783	0					
ANR	2730943	RelationalExpression	number < 0		2730783	1		<			
ANR	2730944	Identifier	number		2730783	0					
ANR	2730945	PrimaryExpression	0		2730783	1					
ANR	2730946	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , ""INF"" , 3 , 0 , padding , alignment , 3 , is_negative , 0 , always_sign )"	244:2:7327:7438	2730783	1	True				
ANR	2730947	CallExpression	"php_sprintf_appendstring ( buffer , pos , ""INF"" , 3 , 0 , padding , alignment , 3 , is_negative , 0 , always_sign )"		2730783	0					
ANR	2730948	Callee	php_sprintf_appendstring		2730783	0					
ANR	2730949	Identifier	php_sprintf_appendstring		2730783	0					
ANR	2730950	ArgumentList	buffer		2730783	1					
ANR	2730951	Argument	buffer		2730783	0					
ANR	2730952	Identifier	buffer		2730783	0					
ANR	2730953	Argument	pos		2730783	1					
ANR	2730954	Identifier	pos		2730783	0					
ANR	2730955	Argument	"""INF"""		2730783	2					
ANR	2730956	PrimaryExpression	"""INF"""		2730783	0					
ANR	2730957	Argument	3		2730783	3					
ANR	2730958	PrimaryExpression	3		2730783	0					
ANR	2730959	Argument	0		2730783	4					
ANR	2730960	PrimaryExpression	0		2730783	0					
ANR	2730961	Argument	padding		2730783	5					
ANR	2730962	Identifier	padding		2730783	0					
ANR	2730963	Argument	alignment		2730783	6					
ANR	2730964	Identifier	alignment		2730783	0					
ANR	2730965	Argument	3		2730783	7					
ANR	2730966	PrimaryExpression	3		2730783	0					
ANR	2730967	Argument	is_negative		2730783	8					
ANR	2730968	Identifier	is_negative		2730783	0					
ANR	2730969	Argument	0		2730783	9					
ANR	2730970	PrimaryExpression	0		2730783	0					
ANR	2730971	Argument	always_sign		2730783	10					
ANR	2730972	Identifier	always_sign		2730783	0					
ANR	2730973	ReturnStatement	return ;	246:2:7442:7448	2730783	2	True				
ANR	2730974	SwitchStatement	switch ( fmt )		2730783	9					
ANR	2730975	Condition	fmt	249:9:7463:7465	2730783	0	True				
ANR	2730976	Identifier	fmt		2730783	0					
ANR	2730977	CompoundStatement		37:14:1025:1025	2730783	1					
ANR	2730978	Label	case 'e' :	250:2:7472:7480	2730783	0	True				
ANR	2730979	Label	case 'E' :	251:2:7484:7492	2730783	1	True				
ANR	2730980	Label	case 'f' :	252:2:7496:7504	2730783	2	True				
ANR	2730981	Label	case 'F' :	253:2:7508:7516	2730783	3	True				
ANR	2730982	ExpressionStatement	localeconv_r ( & lconv )	256:3:7553:7573	2730783	4	True				
ANR	2730983	CallExpression	localeconv_r ( & lconv )		2730783	0					
ANR	2730984	Callee	localeconv_r		2730783	0					
ANR	2730985	Identifier	localeconv_r		2730783	0					
ANR	2730986	ArgumentList	& lconv		2730783	1					
ANR	2730987	Argument	& lconv		2730783	0					
ANR	2730988	UnaryOperationExpression	& lconv		2730783	0					
ANR	2730989	UnaryOperator	&		2730783	0					
ANR	2730990	Identifier	lconv		2730783	1					
ANR	2730991	ExpressionStatement	"s = php_conv_fp ( ( fmt == 'f' ) ? 'F' : fmt , number , 0 , precision , ( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"	261:3:7623:7767	2730783	5	True				
ANR	2730992	AssignmentExpression	"s = php_conv_fp ( ( fmt == 'f' ) ? 'F' : fmt , number , 0 , precision , ( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"		2730783	0		=			
ANR	2730993	Identifier	s		2730783	0					
ANR	2730994	CallExpression	"php_conv_fp ( ( fmt == 'f' ) ? 'F' : fmt , number , 0 , precision , ( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.' , & is_negative , & num_buf [ 1 ] , & s_len )"		2730783	1					
ANR	2730995	Callee	php_conv_fp		2730783	0					
ANR	2730996	Identifier	php_conv_fp		2730783	0					
ANR	2730997	ArgumentList	( fmt == 'f' ) ? 'F' : fmt		2730783	1					
ANR	2730998	Argument	( fmt == 'f' ) ? 'F' : fmt		2730783	0					
ANR	2730999	ConditionalExpression	( fmt == 'f' ) ? 'F' : fmt		2730783	0					
ANR	2731000	Condition	fmt == 'f'		2730783	0					
ANR	2731001	EqualityExpression	fmt == 'f'		2730783	0		==			
ANR	2731002	Identifier	fmt		2730783	0					
ANR	2731003	PrimaryExpression	'f'		2730783	1					
ANR	2731004	PrimaryExpression	'F'		2730783	1					
ANR	2731005	Identifier	fmt		2730783	2					
ANR	2731006	Argument	number		2730783	1					
ANR	2731007	Identifier	number		2730783	0					
ANR	2731008	Argument	0		2730783	2					
ANR	2731009	PrimaryExpression	0		2730783	0					
ANR	2731010	Argument	precision		2730783	3					
ANR	2731011	Identifier	precision		2730783	0					
ANR	2731012	Argument	( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.'		2730783	4					
ANR	2731013	ConditionalExpression	( fmt == 'f' ) ? LCONV_DECIMAL_POINT : '.'		2730783	0					
ANR	2731014	Condition	fmt == 'f'		2730783	0					
ANR	2731015	EqualityExpression	fmt == 'f'		2730783	0		==			
ANR	2731016	Identifier	fmt		2730783	0					
ANR	2731017	PrimaryExpression	'f'		2730783	1					
ANR	2731018	Identifier	LCONV_DECIMAL_POINT		2730783	1					
ANR	2731019	PrimaryExpression	'.'		2730783	2					
ANR	2731020	Argument	& is_negative		2730783	5					
ANR	2731021	UnaryOperationExpression	& is_negative		2730783	0					
ANR	2731022	UnaryOperator	&		2730783	0					
ANR	2731023	Identifier	is_negative		2730783	1					
ANR	2731024	Argument	& num_buf [ 1 ]		2730783	6					
ANR	2731025	UnaryOperationExpression	& num_buf [ 1 ]		2730783	0					
ANR	2731026	UnaryOperator	&		2730783	0					
ANR	2731027	ArrayIndexing	num_buf [ 1 ]		2730783	1					
ANR	2731028	Identifier	num_buf		2730783	0					
ANR	2731029	PrimaryExpression	1		2730783	1					
ANR	2731030	Argument	& s_len		2730783	7					
ANR	2731031	UnaryOperationExpression	& s_len		2730783	0					
ANR	2731032	UnaryOperator	&		2730783	0					
ANR	2731033	Identifier	s_len		2730783	1					
ANR	2731034	IfStatement	if ( is_negative )		2730783	6					
ANR	2731035	Condition	is_negative	264:7:7776:7786	2730783	0	True				
ANR	2731036	Identifier	is_negative		2730783	0					
ANR	2731037	CompoundStatement		52:20:1346:1346	2730783	1					
ANR	2731038	ExpressionStatement	num_buf [ 0 ] = '-'	265:4:7795:7811	2730783	0	True				
ANR	2731039	AssignmentExpression	num_buf [ 0 ] = '-'		2730783	0		=			
ANR	2731040	ArrayIndexing	num_buf [ 0 ]		2730783	0					
ANR	2731041	Identifier	num_buf		2730783	0					
ANR	2731042	PrimaryExpression	0		2730783	1					
ANR	2731043	PrimaryExpression	'-'		2730783	1					
ANR	2731044	ExpressionStatement	s = num_buf	266:4:7817:7828	2730783	1	True				
ANR	2731045	AssignmentExpression	s = num_buf		2730783	0		=			
ANR	2731046	Identifier	s		2730783	0					
ANR	2731047	Identifier	num_buf		2730783	1					
ANR	2731048	ExpressionStatement	s_len ++	267:4:7834:7841	2730783	2	True				
ANR	2731049	PostIncDecOperationExpression	s_len ++		2730783	0					
ANR	2731050	Identifier	s_len		2730783	0					
ANR	2731051	IncDec	++		2730783	1					
ANR	2731052	ElseStatement	else		2730783	0					
ANR	2731053	IfStatement	if ( always_sign )		2730783	0					
ANR	2731054	Condition	always_sign	268:14:7857:7867	2730783	0	True				
ANR	2731055	Identifier	always_sign		2730783	0					
ANR	2731056	CompoundStatement		56:27:1427:1427	2730783	1					
ANR	2731057	ExpressionStatement	num_buf [ 0 ] = '+'	269:4:7876:7892	2730783	0	True				
ANR	2731058	AssignmentExpression	num_buf [ 0 ] = '+'		2730783	0		=			
ANR	2731059	ArrayIndexing	num_buf [ 0 ]		2730783	0					
ANR	2731060	Identifier	num_buf		2730783	0					
ANR	2731061	PrimaryExpression	0		2730783	1					
ANR	2731062	PrimaryExpression	'+'		2730783	1					
ANR	2731063	ExpressionStatement	s = num_buf	270:4:7898:7909	2730783	1	True				
ANR	2731064	AssignmentExpression	s = num_buf		2730783	0		=			
ANR	2731065	Identifier	s		2730783	0					
ANR	2731066	Identifier	num_buf		2730783	1					
ANR	2731067	ExpressionStatement	s_len ++	271:4:7915:7922	2730783	2	True				
ANR	2731068	PostIncDecOperationExpression	s_len ++		2730783	0					
ANR	2731069	Identifier	s_len		2730783	0					
ANR	2731070	IncDec	++		2730783	1					
ANR	2731071	BreakStatement	break ;	273:3:7932:7937	2730783	7	True				
ANR	2731072	Label	case 'g' :	275:2:7942:7950	2730783	8	True				
ANR	2731073	Label	case 'G' :	276:2:7954:7962	2730783	9	True				
ANR	2731074	IfStatement	if ( precision == 0 )		2730783	10					
ANR	2731075	Condition	precision == 0	277:7:7971:7984	2730783	0	True				
ANR	2731076	EqualityExpression	precision == 0		2730783	0		==			
ANR	2731077	Identifier	precision		2730783	0					
ANR	2731078	PrimaryExpression	0		2730783	1					
ANR	2731079	ExpressionStatement	precision = 1	278:4:7991:8004	2730783	1	True				
ANR	2731080	AssignmentExpression	precision = 1		2730783	0		=			
ANR	2731081	Identifier	precision		2730783	0					
ANR	2731082	PrimaryExpression	1		2730783	1					
ANR	2731083	ExpressionStatement	localeconv_r ( & lconv )	284:3:8118:8138	2730783	11	True				
ANR	2731084	CallExpression	localeconv_r ( & lconv )		2730783	0					
ANR	2731085	Callee	localeconv_r		2730783	0					
ANR	2731086	Identifier	localeconv_r		2730783	0					
ANR	2731087	ArgumentList	& lconv		2730783	1					
ANR	2731088	Argument	& lconv		2730783	0					
ANR	2731089	UnaryOperationExpression	& lconv		2730783	0					
ANR	2731090	UnaryOperator	&		2730783	0					
ANR	2731091	Identifier	lconv		2730783	1					
ANR	2731092	ExpressionStatement	"s = php_gcvt ( number , precision , LCONV_DECIMAL_POINT , ( fmt == 'G' ) ? 'E' : 'e' , & num_buf [ 1 ] )"	289:3:8188:8275	2730783	12	True				
ANR	2731093	AssignmentExpression	"s = php_gcvt ( number , precision , LCONV_DECIMAL_POINT , ( fmt == 'G' ) ? 'E' : 'e' , & num_buf [ 1 ] )"		2730783	0		=			
ANR	2731094	Identifier	s		2730783	0					
ANR	2731095	CallExpression	"php_gcvt ( number , precision , LCONV_DECIMAL_POINT , ( fmt == 'G' ) ? 'E' : 'e' , & num_buf [ 1 ] )"		2730783	1					
ANR	2731096	Callee	php_gcvt		2730783	0					
ANR	2731097	Identifier	php_gcvt		2730783	0					
ANR	2731098	ArgumentList	number		2730783	1					
ANR	2731099	Argument	number		2730783	0					
ANR	2731100	Identifier	number		2730783	0					
ANR	2731101	Argument	precision		2730783	1					
ANR	2731102	Identifier	precision		2730783	0					
ANR	2731103	Argument	LCONV_DECIMAL_POINT		2730783	2					
ANR	2731104	Identifier	LCONV_DECIMAL_POINT		2730783	0					
ANR	2731105	Argument	( fmt == 'G' ) ? 'E' : 'e'		2730783	3					
ANR	2731106	ConditionalExpression	( fmt == 'G' ) ? 'E' : 'e'		2730783	0					
ANR	2731107	Condition	fmt == 'G'		2730783	0					
ANR	2731108	EqualityExpression	fmt == 'G'		2730783	0		==			
ANR	2731109	Identifier	fmt		2730783	0					
ANR	2731110	PrimaryExpression	'G'		2730783	1					
ANR	2731111	PrimaryExpression	'E'		2730783	1					
ANR	2731112	PrimaryExpression	'e'		2730783	2					
ANR	2731113	Argument	& num_buf [ 1 ]		2730783	4					
ANR	2731114	UnaryOperationExpression	& num_buf [ 1 ]		2730783	0					
ANR	2731115	UnaryOperator	&		2730783	0					
ANR	2731116	ArrayIndexing	num_buf [ 1 ]		2730783	1					
ANR	2731117	Identifier	num_buf		2730783	0					
ANR	2731118	PrimaryExpression	1		2730783	1					
ANR	2731119	ExpressionStatement	is_negative = 0	290:3:8280:8295	2730783	13	True				
ANR	2731120	AssignmentExpression	is_negative = 0		2730783	0		=			
ANR	2731121	Identifier	is_negative		2730783	0					
ANR	2731122	PrimaryExpression	0		2730783	1					
ANR	2731123	IfStatement	if ( * s == '-' )		2730783	14					
ANR	2731124	Condition	* s == '-'	291:7:8304:8312	2730783	0	True				
ANR	2731125	EqualityExpression	* s == '-'		2730783	0		==			
ANR	2731126	UnaryOperationExpression	* s		2730783	0					
ANR	2731127	UnaryOperator	*		2730783	0					
ANR	2731128	Identifier	s		2730783	1					
ANR	2731129	PrimaryExpression	'-'		2730783	1					
ANR	2731130	CompoundStatement		79:18:1872:1872	2730783	1					
ANR	2731131	ExpressionStatement	is_negative = 1	292:4:8321:8336	2730783	0	True				
ANR	2731132	AssignmentExpression	is_negative = 1		2730783	0		=			
ANR	2731133	Identifier	is_negative		2730783	0					
ANR	2731134	PrimaryExpression	1		2730783	1					
ANR	2731135	ExpressionStatement	s = & num_buf [ 1 ]	293:4:8342:8357	2730783	1	True				
ANR	2731136	AssignmentExpression	s = & num_buf [ 1 ]		2730783	0		=			
ANR	2731137	Identifier	s		2730783	0					
ANR	2731138	UnaryOperationExpression	& num_buf [ 1 ]		2730783	1					
ANR	2731139	UnaryOperator	&		2730783	0					
ANR	2731140	ArrayIndexing	num_buf [ 1 ]		2730783	1					
ANR	2731141	Identifier	num_buf		2730783	0					
ANR	2731142	PrimaryExpression	1		2730783	1					
ANR	2731143	ElseStatement	else		2730783	0					
ANR	2731144	IfStatement	if ( always_sign )		2730783	0					
ANR	2731145	Condition	always_sign	294:14:8373:8383	2730783	0	True				
ANR	2731146	Identifier	always_sign		2730783	0					
ANR	2731147	CompoundStatement		82:27:1943:1943	2730783	1					
ANR	2731148	ExpressionStatement	num_buf [ 0 ] = '+'	295:4:8392:8408	2730783	0	True				
ANR	2731149	AssignmentExpression	num_buf [ 0 ] = '+'		2730783	0		=			
ANR	2731150	ArrayIndexing	num_buf [ 0 ]		2730783	0					
ANR	2731151	Identifier	num_buf		2730783	0					
ANR	2731152	PrimaryExpression	0		2730783	1					
ANR	2731153	PrimaryExpression	'+'		2730783	1					
ANR	2731154	ExpressionStatement	s = num_buf	296:4:8414:8425	2730783	1	True				
ANR	2731155	AssignmentExpression	s = num_buf		2730783	0		=			
ANR	2731156	Identifier	s		2730783	0					
ANR	2731157	Identifier	num_buf		2730783	1					
ANR	2731158	ExpressionStatement	s_len = strlen ( s )	299:3:8436:8453	2730783	15	True				
ANR	2731159	AssignmentExpression	s_len = strlen ( s )		2730783	0		=			
ANR	2731160	Identifier	s_len		2730783	0					
ANR	2731161	CallExpression	strlen ( s )		2730783	1					
ANR	2731162	Callee	strlen		2730783	0					
ANR	2731163	Identifier	strlen		2730783	0					
ANR	2731164	ArgumentList	s		2730783	1					
ANR	2731165	Argument	s		2730783	0					
ANR	2731166	Identifier	s		2730783	0					
ANR	2731167	BreakStatement	break ;	300:3:8458:8463	2730783	16	True				
ANR	2731168	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , s , width , 0 , padding , alignment , s_len , is_negative , 0 , always_sign )"	303:1:8470:8584	2730783	10	True				
ANR	2731169	CallExpression	"php_sprintf_appendstring ( buffer , pos , s , width , 0 , padding , alignment , s_len , is_negative , 0 , always_sign )"		2730783	0					
ANR	2731170	Callee	php_sprintf_appendstring		2730783	0					
ANR	2731171	Identifier	php_sprintf_appendstring		2730783	0					
ANR	2731172	ArgumentList	buffer		2730783	1					
ANR	2731173	Argument	buffer		2730783	0					
ANR	2731174	Identifier	buffer		2730783	0					
ANR	2731175	Argument	pos		2730783	1					
ANR	2731176	Identifier	pos		2730783	0					
ANR	2731177	Argument	s		2730783	2					
ANR	2731178	Identifier	s		2730783	0					
ANR	2731179	Argument	width		2730783	3					
ANR	2731180	Identifier	width		2730783	0					
ANR	2731181	Argument	0		2730783	4					
ANR	2731182	PrimaryExpression	0		2730783	0					
ANR	2731183	Argument	padding		2730783	5					
ANR	2731184	Identifier	padding		2730783	0					
ANR	2731185	Argument	alignment		2730783	6					
ANR	2731186	Identifier	alignment		2730783	0					
ANR	2731187	Argument	s_len		2730783	7					
ANR	2731188	Identifier	s_len		2730783	0					
ANR	2731189	Argument	is_negative		2730783	8					
ANR	2731190	Identifier	is_negative		2730783	0					
ANR	2731191	Argument	0		2730783	9					
ANR	2731192	PrimaryExpression	0		2730783	0					
ANR	2731193	Argument	always_sign		2730783	10					
ANR	2731194	Identifier	always_sign		2730783	0					
ANR	2731195	ReturnType	inline static void		2730783	1					
ANR	2731196	Identifier	php_sprintf_appenddouble		2730783	2					
ANR	2731197	ParameterList	"zend_string * * buffer , size_t * pos , double number , size_t width , char padding , size_t alignment , int precision , int adjust , char fmt , int always_sign"		2730783	3					
ANR	2731198	Parameter	zend_string * * buffer	206:25:6250:6269	2730783	0	True				
ANR	2731199	ParameterType	zend_string * *		2730783	0					
ANR	2731200	Identifier	buffer		2730783	1					
ANR	2731201	Parameter	size_t * pos	206:47:6272:6282	2730783	1	True				
ANR	2731202	ParameterType	size_t *		2730783	0					
ANR	2731203	Identifier	pos		2730783	1					
ANR	2731204	Parameter	double number	207:7:6292:6304	2730783	2	True				
ANR	2731205	ParameterType	double		2730783	0					
ANR	2731206	Identifier	number		2730783	1					
ANR	2731207	Parameter	size_t width	208:7:6314:6325	2730783	3	True				
ANR	2731208	ParameterType	size_t		2730783	0					
ANR	2731209	Identifier	width		2730783	1					
ANR	2731210	Parameter	char padding	208:21:6328:6339	2730783	4	True				
ANR	2731211	ParameterType	char		2730783	0					
ANR	2731212	Identifier	padding		2730783	1					
ANR	2731213	Parameter	size_t alignment	209:7:6349:6364	2730783	5	True				
ANR	2731214	ParameterType	size_t		2730783	0					
ANR	2731215	Identifier	alignment		2730783	1					
ANR	2731216	Parameter	int precision	209:25:6367:6379	2730783	6	True				
ANR	2731217	ParameterType	int		2730783	0					
ANR	2731218	Identifier	precision		2730783	1					
ANR	2731219	Parameter	int adjust	210:7:6389:6398	2730783	7	True				
ANR	2731220	ParameterType	int		2730783	0					
ANR	2731221	Identifier	adjust		2730783	1					
ANR	2731222	Parameter	char fmt	210:19:6401:6408	2730783	8	True				
ANR	2731223	ParameterType	char		2730783	0					
ANR	2731224	Identifier	fmt		2730783	1					
ANR	2731225	Parameter	int always_sign	211:7:6418:6432	2730783	9	True				
ANR	2731226	ParameterType	int		2730783	0					
ANR	2731227	Identifier	always_sign		2730783	1					
ANR	2731228	CFGEntryNode	ENTRY		2730783		True				
ANR	2731229	CFGExitNode	EXIT		2730783		True				
ANR	2731230	Symbol	lconv		2730783						
ANR	2731231	Symbol	LCONV_DECIMAL_POINT		2730783						
ANR	2731232	Symbol	ADJ_PRECISION		2730783						
ANR	2731233	Symbol	& s_len		2730783						
ANR	2731234	Symbol	precision		2730783						
ANR	2731235	Symbol	s_len		2730783						
ANR	2731236	Symbol	fmt		2730783						
ANR	2731237	Symbol	& lconv		2730783						
ANR	2731238	Symbol	& is_negative		2730783						
ANR	2731239	Symbol	number		2730783						
ANR	2731240	Symbol	strlen		2730783						
ANR	2731241	Symbol	zend_isinf		2730783						
ANR	2731242	Symbol	php_gcvt		2730783						
ANR	2731243	Symbol	pos		2730783						
ANR	2731244	Symbol	zend_isnan		2730783						
ANR	2731245	Symbol	buffer		2730783						
ANR	2731246	Symbol	padding		2730783						
ANR	2731247	Symbol	* buffer		2730783						
ANR	2731248	Symbol	NULL		2730783						
ANR	2731249	Symbol	* num_buf		2730783						
ANR	2731250	Symbol	FLOAT_PRECISION		2730783						
ANR	2731251	Symbol	always_sign		2730783						
ANR	2731252	Symbol	E_NOTICE		2730783						
ANR	2731253	Symbol	& ZSTR_LEN		2730783						
ANR	2731254	Symbol	MAX_FLOAT_PRECISION		2730783						
ANR	2731255	Symbol	php_conv_fp		2730783						
ANR	2731256	Symbol	s		2730783						
ANR	2731257	Symbol	adjust		2730783						
ANR	2731258	Symbol	width		2730783						
ANR	2731259	Symbol	num_buf		2730783						
ANR	2731260	Symbol	alignment		2730783						
ANR	2731261	Symbol	is_negative		2730783						
ANR	2731262	Symbol	* s		2730783						
ANR	2731263	Function	php_sprintf_append2n	309:0:8632:9471							
ANR	2731264	FunctionDef	"php_sprintf_append2n (zend_string * * buffer , size_t * pos , zend_long number , size_t width , char padding , size_t alignment , int n , char * chartable , int expprec)"		2731263	0					
ANR	2731265	CompoundStatement		313:0:8820:9471	2731263	0					
ANR	2731266	IdentifierDeclStatement	char numbuf [ NUM_BUF_SIZE ] ;	314:1:8823:8848	2731263	0	True				
ANR	2731267	IdentifierDecl	numbuf [ NUM_BUF_SIZE ]		2731263	0					
ANR	2731268	IdentifierDeclType	char [ NUM_BUF_SIZE ]		2731263	0					
ANR	2731269	Identifier	numbuf		2731263	1					
ANR	2731270	Identifier	NUM_BUF_SIZE		2731263	2					
ANR	2731271	Statement	register	315:1:8851:8858	2731263	1	True				
ANR	2731272	IdentifierDeclStatement	zend_ulong num ;	315:10:8860:8874	2731263	2	True				
ANR	2731273	IdentifierDecl	num		2731263	0					
ANR	2731274	IdentifierDeclType	zend_ulong		2731263	0					
ANR	2731275	Identifier	num		2731263	1					
ANR	2731276	Statement	register	316:1:8877:8884	2731263	3	True				
ANR	2731277	IdentifierDeclStatement	zend_ulong i = NUM_BUF_SIZE - 1 ;	316:10:8886:8918	2731263	4	True				
ANR	2731278	IdentifierDecl	i = NUM_BUF_SIZE - 1		2731263	0					
ANR	2731279	IdentifierDeclType	zend_ulong		2731263	0					
ANR	2731280	Identifier	i		2731263	1					
ANR	2731281	AssignmentExpression	i = NUM_BUF_SIZE - 1		2731263	2		=			
ANR	2731282	Identifier	i		2731263	0					
ANR	2731283	AdditiveExpression	NUM_BUF_SIZE - 1		2731263	1		-			
ANR	2731284	Identifier	NUM_BUF_SIZE		2731263	0					
ANR	2731285	PrimaryExpression	1		2731263	1					
ANR	2731286	Statement	register	317:1:8921:8928	2731263	5	True				
ANR	2731287	IdentifierDeclStatement	int andbits = ( 1 << n ) - 1 ;	317:10:8930:8956	2731263	6	True				
ANR	2731288	IdentifierDecl	andbits = ( 1 << n ) - 1		2731263	0					
ANR	2731289	IdentifierDeclType	int		2731263	0					
ANR	2731290	Identifier	andbits		2731263	1					
ANR	2731291	AssignmentExpression	andbits = ( 1 << n ) - 1		2731263	2		=			
ANR	2731292	Identifier	andbits		2731263	0					
ANR	2731293	AdditiveExpression	( 1 << n ) - 1		2731263	1		-			
ANR	2731294	ShiftExpression	1 << n		2731263	0		<<			
ANR	2731295	PrimaryExpression	1		2731263	0					
ANR	2731296	Identifier	n		2731263	1					
ANR	2731297	PrimaryExpression	1		2731263	1					
ANR	2731298	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , n , chartable ) )"	319:1:8960:9130	2731263	7	True				
ANR	2731299	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , n , chartable ) )"		2731263	0					
ANR	2731300	Callee	PRINTF_DEBUG		2731263	0					
ANR	2731301	Identifier	PRINTF_DEBUG		2731263	0					
ANR	2731302	ArgumentList	"""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , n , chartable"		2731263	1					
ANR	2731303	Argument	"""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , n , chartable"		2731263	0					
ANR	2731304	Expression	"""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"" , * buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , n , chartable"		2731263	0					
ANR	2731305	PrimaryExpression	"""sprintf: append2n(%x, %x, %x, %d, %d, '%c', %d, %d, %x)\\n"""		2731263	0					
ANR	2731306	Expression	"* buffer , pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , n , chartable"		2731263	1					
ANR	2731307	UnaryOperationExpression	* buffer		2731263	0					
ANR	2731308	UnaryOperator	*		2731263	0					
ANR	2731309	Identifier	buffer		2731263	1					
ANR	2731310	Expression	"pos , & ZSTR_LEN ( * buffer ) , number , width , padding , alignment , n , chartable"		2731263	1					
ANR	2731311	Identifier	pos		2731263	0					
ANR	2731312	Expression	"& ZSTR_LEN ( * buffer ) , number , width , padding , alignment , n , chartable"		2731263	1					
ANR	2731313	UnaryOperationExpression	& ZSTR_LEN ( * buffer )		2731263	0					
ANR	2731314	UnaryOperator	&		2731263	0					
ANR	2731315	CallExpression	ZSTR_LEN ( * buffer )		2731263	1					
ANR	2731316	Callee	ZSTR_LEN		2731263	0					
ANR	2731317	Identifier	ZSTR_LEN		2731263	0					
ANR	2731318	ArgumentList	* buffer		2731263	1					
ANR	2731319	Argument	* buffer		2731263	0					
ANR	2731320	UnaryOperationExpression	* buffer		2731263	0					
ANR	2731321	UnaryOperator	*		2731263	0					
ANR	2731322	Identifier	buffer		2731263	1					
ANR	2731323	Expression	"number , width , padding , alignment , n , chartable"		2731263	1					
ANR	2731324	Identifier	number		2731263	0					
ANR	2731325	Expression	"width , padding , alignment , n , chartable"		2731263	1					
ANR	2731326	Identifier	width		2731263	0					
ANR	2731327	Expression	"padding , alignment , n , chartable"		2731263	1					
ANR	2731328	Identifier	padding		2731263	0					
ANR	2731329	Expression	"alignment , n , chartable"		2731263	1					
ANR	2731330	Identifier	alignment		2731263	0					
ANR	2731331	Expression	"n , chartable"		2731263	1					
ANR	2731332	Identifier	n		2731263	0					
ANR	2731333	Identifier	chartable		2731263	1					
ANR	2731334	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits ) )"	322:1:9133:9198	2731263	8	True				
ANR	2731335	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits ) )"		2731263	0					
ANR	2731336	Callee	PRINTF_DEBUG		2731263	0					
ANR	2731337	Identifier	PRINTF_DEBUG		2731263	0					
ANR	2731338	ArgumentList	"""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits"		2731263	1					
ANR	2731339	Argument	"""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits"		2731263	0					
ANR	2731340	Expression	"""sprintf: append2n 2^%d andbits=%x\\n"" , n , andbits"		2731263	0					
ANR	2731341	PrimaryExpression	"""sprintf: append2n 2^%d andbits=%x\\n"""		2731263	0					
ANR	2731342	Expression	"n , andbits"		2731263	1					
ANR	2731343	Identifier	n		2731263	0					
ANR	2731344	Identifier	andbits		2731263	1					
ANR	2731345	ExpressionStatement	num = ( zend_ulong ) number	324:1:9202:9227	2731263	9	True				
ANR	2731346	AssignmentExpression	num = ( zend_ulong ) number		2731263	0		=			
ANR	2731347	Identifier	num		2731263	0					
ANR	2731348	CastExpression	( zend_ulong ) number		2731263	1					
ANR	2731349	CastTarget	zend_ulong		2731263	0					
ANR	2731350	Identifier	number		2731263	1					
ANR	2731351	ExpressionStatement	numbuf [ i ] = '\\0'	325:1:9230:9246	2731263	10	True				
ANR	2731352	AssignmentExpression	numbuf [ i ] = '\\0'		2731263	0		=			
ANR	2731353	ArrayIndexing	numbuf [ i ]		2731263	0					
ANR	2731354	Identifier	numbuf		2731263	0					
ANR	2731355	Identifier	i		2731263	1					
ANR	2731356	PrimaryExpression	'\\0'		2731263	1					
ANR	2731357	DoStatement	do		2731263	11					
ANR	2731358	CompoundStatement		15:4:432:432	2731263	0					
ANR	2731359	ExpressionStatement	numbuf [ -- i ] = chartable [ ( num & andbits ) ]	328:2:9257:9297	2731263	0	True				
ANR	2731360	AssignmentExpression	numbuf [ -- i ] = chartable [ ( num & andbits ) ]		2731263	0		=			
ANR	2731361	ArrayIndexing	numbuf [ -- i ]		2731263	0					
ANR	2731362	Identifier	numbuf		2731263	0					
ANR	2731363	UnaryExpression	-- i		2731263	1					
ANR	2731364	IncDec	--		2731263	0					
ANR	2731365	Identifier	i		2731263	1					
ANR	2731366	ArrayIndexing	chartable [ ( num & andbits ) ]		2731263	1					
ANR	2731367	Identifier	chartable		2731263	0					
ANR	2731368	BitAndExpression	num & andbits		2731263	1		&			
ANR	2731369	Identifier	num		2731263	0					
ANR	2731370	Identifier	andbits		2731263	1					
ANR	2731371	ExpressionStatement	num >>= n	329:2:9301:9310	2731263	1	True				
ANR	2731372	AssignmentExpression	num >>= n		2731263	0		>>=			
ANR	2731373	Identifier	num		2731263	0					
ANR	2731374	Identifier	n		2731263	1					
ANR	2731375	Condition	num > 0	331:8:9323:9329	2731263	1	True				
ANR	2731376	RelationalExpression	num > 0		2731263	0		>			
ANR	2731377	Identifier	num		2731263	0					
ANR	2731378	PrimaryExpression	0		2731263	1					
ANR	2731379	ExpressionStatement	"php_sprintf_appendstring ( buffer , pos , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , 0 , expprec , 0 )"	333:1:9335:9469	2731263	12	True				
ANR	2731380	CallExpression	"php_sprintf_appendstring ( buffer , pos , & numbuf [ i ] , width , 0 , padding , alignment , ( NUM_BUF_SIZE - 1 ) - i , 0 , expprec , 0 )"		2731263	0					
ANR	2731381	Callee	php_sprintf_appendstring		2731263	0					
ANR	2731382	Identifier	php_sprintf_appendstring		2731263	0					
ANR	2731383	ArgumentList	buffer		2731263	1					
ANR	2731384	Argument	buffer		2731263	0					
ANR	2731385	Identifier	buffer		2731263	0					
ANR	2731386	Argument	pos		2731263	1					
ANR	2731387	Identifier	pos		2731263	0					
ANR	2731388	Argument	& numbuf [ i ]		2731263	2					
ANR	2731389	UnaryOperationExpression	& numbuf [ i ]		2731263	0					
ANR	2731390	UnaryOperator	&		2731263	0					
ANR	2731391	ArrayIndexing	numbuf [ i ]		2731263	1					
ANR	2731392	Identifier	numbuf		2731263	0					
ANR	2731393	Identifier	i		2731263	1					
ANR	2731394	Argument	width		2731263	3					
ANR	2731395	Identifier	width		2731263	0					
ANR	2731396	Argument	0		2731263	4					
ANR	2731397	PrimaryExpression	0		2731263	0					
ANR	2731398	Argument	padding		2731263	5					
ANR	2731399	Identifier	padding		2731263	0					
ANR	2731400	Argument	alignment		2731263	6					
ANR	2731401	Identifier	alignment		2731263	0					
ANR	2731402	Argument	( NUM_BUF_SIZE - 1 ) - i		2731263	7					
ANR	2731403	AdditiveExpression	( NUM_BUF_SIZE - 1 ) - i		2731263	0		-			
ANR	2731404	AdditiveExpression	NUM_BUF_SIZE - 1		2731263	0		-			
ANR	2731405	Identifier	NUM_BUF_SIZE		2731263	0					
ANR	2731406	PrimaryExpression	1		2731263	1					
ANR	2731407	Identifier	i		2731263	1					
ANR	2731408	Argument	0		2731263	8					
ANR	2731409	PrimaryExpression	0		2731263	0					
ANR	2731410	Argument	expprec		2731263	9					
ANR	2731411	Identifier	expprec		2731263	0					
ANR	2731412	Argument	0		2731263	10					
ANR	2731413	PrimaryExpression	0		2731263	0					
ANR	2731414	ReturnType	inline static void		2731263	1					
ANR	2731415	Identifier	php_sprintf_append2n		2731263	2					
ANR	2731416	ParameterList	"zend_string * * buffer , size_t * pos , zend_long number , size_t width , char padding , size_t alignment , int n , char * chartable , int expprec"		2731263	3					
ANR	2731417	Parameter	zend_string * * buffer	310:21:8672:8691	2731263	0	True				
ANR	2731418	ParameterType	zend_string * *		2731263	0					
ANR	2731419	Identifier	buffer		2731263	1					
ANR	2731420	Parameter	size_t * pos	310:43:8694:8704	2731263	1	True				
ANR	2731421	ParameterType	size_t *		2731263	0					
ANR	2731422	Identifier	pos		2731263	1					
ANR	2731423	Parameter	zend_long number	310:56:8707:8722	2731263	2	True				
ANR	2731424	ParameterType	zend_long		2731263	0					
ANR	2731425	Identifier	number		2731263	1					
ANR	2731426	Parameter	size_t width	311:6:8731:8742	2731263	3	True				
ANR	2731427	ParameterType	size_t		2731263	0					
ANR	2731428	Identifier	width		2731263	1					
ANR	2731429	Parameter	char padding	311:20:8745:8756	2731263	4	True				
ANR	2731430	ParameterType	char		2731263	0					
ANR	2731431	Identifier	padding		2731263	1					
ANR	2731432	Parameter	size_t alignment	311:34:8759:8774	2731263	5	True				
ANR	2731433	ParameterType	size_t		2731263	0					
ANR	2731434	Identifier	alignment		2731263	1					
ANR	2731435	Parameter	int n	311:52:8777:8781	2731263	6	True				
ANR	2731436	ParameterType	int		2731263	0					
ANR	2731437	Identifier	n		2731263	1					
ANR	2731438	Parameter	char * chartable	312:6:8790:8804	2731263	7	True				
ANR	2731439	ParameterType	char *		2731263	0					
ANR	2731440	Identifier	chartable		2731263	1					
ANR	2731441	Parameter	int expprec	312:23:8807:8817	2731263	8	True				
ANR	2731442	ParameterType	int		2731263	0					
ANR	2731443	Identifier	expprec		2731263	1					
ANR	2731444	CFGEntryNode	ENTRY		2731263		True				
ANR	2731445	CFGExitNode	EXIT		2731263		True				
ANR	2731446	Symbol	padding		2731263						
ANR	2731447	Symbol	* buffer		2731263						
ANR	2731448	Symbol	expprec		2731263						
ANR	2731449	Symbol	num		2731263						
ANR	2731450	Symbol	* andbits		2731263						
ANR	2731451	Symbol	i		2731263						
ANR	2731452	Symbol	& ZSTR_LEN		2731263						
ANR	2731453	Symbol	n		2731263						
ANR	2731454	Symbol	* num		2731263						
ANR	2731455	Symbol	number		2731263						
ANR	2731456	Symbol	* numbuf		2731263						
ANR	2731457	Symbol	* i		2731263						
ANR	2731458	Symbol	pos		2731263						
ANR	2731459	Symbol	numbuf		2731263						
ANR	2731460	Symbol	width		2731263						
ANR	2731461	Symbol	NUM_BUF_SIZE		2731263						
ANR	2731462	Symbol	buffer		2731263						
ANR	2731463	Symbol	* chartable		2731263						
ANR	2731464	Symbol	alignment		2731263						
ANR	2731465	Symbol	andbits		2731263						
ANR	2731466	Symbol	chartable		2731263						
ANR	2731467	Function	php_sprintf_getnumber	340:0:9517:9913							
ANR	2731468	FunctionDef	"php_sprintf_getnumber (char * buffer , size_t * pos)"		2731467	0					
ANR	2731469	CompoundStatement		342:0:9584:9913	2731467	0					
ANR	2731470	IdentifierDeclStatement	char * endptr ;	343:1:9587:9599	2731467	0	True				
ANR	2731471	IdentifierDecl	* endptr		2731467	0					
ANR	2731472	IdentifierDeclType	char *		2731467	0					
ANR	2731473	Identifier	endptr		2731467	1					
ANR	2731474	Statement	register	344:1:9602:9609	2731467	1	True				
ANR	2731475	IdentifierDeclStatement	"zend_long num = ZEND_STRTOL ( & buffer [ * pos ] , & endptr , 10 ) ;"	344:10:9611:9666	2731467	2	True				
ANR	2731476	IdentifierDecl	"num = ZEND_STRTOL ( & buffer [ * pos ] , & endptr , 10 )"		2731467	0					
ANR	2731477	IdentifierDeclType	zend_long		2731467	0					
ANR	2731478	Identifier	num		2731467	1					
ANR	2731479	AssignmentExpression	"num = ZEND_STRTOL ( & buffer [ * pos ] , & endptr , 10 )"		2731467	2		=			
ANR	2731480	Identifier	num		2731467	0					
ANR	2731481	CallExpression	"ZEND_STRTOL ( & buffer [ * pos ] , & endptr , 10 )"		2731467	1					
ANR	2731482	Callee	ZEND_STRTOL		2731467	0					
ANR	2731483	Identifier	ZEND_STRTOL		2731467	0					
ANR	2731484	ArgumentList	& buffer [ * pos ]		2731467	1					
ANR	2731485	Argument	& buffer [ * pos ]		2731467	0					
ANR	2731486	UnaryOperationExpression	& buffer [ * pos ]		2731467	0					
ANR	2731487	UnaryOperator	&		2731467	0					
ANR	2731488	ArrayIndexing	buffer [ * pos ]		2731467	1					
ANR	2731489	Identifier	buffer		2731467	0					
ANR	2731490	UnaryOperationExpression	* pos		2731467	1					
ANR	2731491	UnaryOperator	*		2731467	0					
ANR	2731492	Identifier	pos		2731467	1					
ANR	2731493	Argument	& endptr		2731467	1					
ANR	2731494	UnaryOperationExpression	& endptr		2731467	0					
ANR	2731495	UnaryOperator	&		2731467	0					
ANR	2731496	Identifier	endptr		2731467	1					
ANR	2731497	Argument	10		2731467	2					
ANR	2731498	PrimaryExpression	10		2731467	0					
ANR	2731499	Statement	register	345:1:9669:9676	2731467	3	True				
ANR	2731500	IdentifierDeclStatement	size_t i = 0 ;	345:10:9678:9690	2731467	4	True				
ANR	2731501	IdentifierDecl	i = 0		2731467	0					
ANR	2731502	IdentifierDeclType	size_t		2731467	0					
ANR	2731503	Identifier	i		2731467	1					
ANR	2731504	AssignmentExpression	i = 0		2731467	2		=			
ANR	2731505	Identifier	i		2731467	0					
ANR	2731506	PrimaryExpression	0		2731467	1					
ANR	2731507	IfStatement	if ( endptr != NULL )		2731467	5					
ANR	2731508	Condition	endptr != NULL	347:5:9698:9711	2731467	0	True				
ANR	2731509	EqualityExpression	endptr != NULL		2731467	0		!=			
ANR	2731510	Identifier	endptr		2731467	0					
ANR	2731511	Identifier	NULL		2731467	1					
ANR	2731512	CompoundStatement		6:21:129:129	2731467	1					
ANR	2731513	ExpressionStatement	i = ( endptr - & buffer [ * pos ] )	348:2:9718:9746	2731467	0	True				
ANR	2731514	AssignmentExpression	i = ( endptr - & buffer [ * pos ] )		2731467	0		=			
ANR	2731515	Identifier	i		2731467	0					
ANR	2731516	AdditiveExpression	endptr - & buffer [ * pos ]		2731467	1		-			
ANR	2731517	Identifier	endptr		2731467	0					
ANR	2731518	UnaryOperationExpression	& buffer [ * pos ]		2731467	1					
ANR	2731519	UnaryOperator	&		2731467	0					
ANR	2731520	ArrayIndexing	buffer [ * pos ]		2731467	1					
ANR	2731521	Identifier	buffer		2731467	0					
ANR	2731522	UnaryOperationExpression	* pos		2731467	1					
ANR	2731523	UnaryOperator	*		2731467	0					
ANR	2731524	Identifier	pos		2731467	1					
ANR	2731525	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf_getnumber: number was %d bytes long\\n"" , i ) )"	350:1:9752:9818	2731467	6	True				
ANR	2731526	CallExpression	"PRINTF_DEBUG ( ( ""sprintf_getnumber: number was %d bytes long\\n"" , i ) )"		2731467	0					
ANR	2731527	Callee	PRINTF_DEBUG		2731467	0					
ANR	2731528	Identifier	PRINTF_DEBUG		2731467	0					
ANR	2731529	ArgumentList	"""sprintf_getnumber: number was %d bytes long\\n"" , i"		2731467	1					
ANR	2731530	Argument	"""sprintf_getnumber: number was %d bytes long\\n"" , i"		2731467	0					
ANR	2731531	Expression	"""sprintf_getnumber: number was %d bytes long\\n"" , i"		2731467	0					
ANR	2731532	PrimaryExpression	"""sprintf_getnumber: number was %d bytes long\\n"""		2731467	0					
ANR	2731533	Identifier	i		2731467	1					
ANR	2731534	ExpressionStatement	* pos += i	351:1:9821:9830	2731467	7	True				
ANR	2731535	AssignmentExpression	* pos += i		2731467	0		+=			
ANR	2731536	UnaryOperationExpression	* pos		2731467	0					
ANR	2731537	UnaryOperator	*		2731467	0					
ANR	2731538	Identifier	pos		2731467	1					
ANR	2731539	Identifier	i		2731467	1					
ANR	2731540	IfStatement	if ( num >= INT_MAX || num < 0 )		2731467	8					
ANR	2731541	Condition	num >= INT_MAX || num < 0	353:5:9838:9862	2731467	0	True				
ANR	2731542	OrExpression	num >= INT_MAX || num < 0		2731467	0		||			
ANR	2731543	RelationalExpression	num >= INT_MAX		2731467	0		>=			
ANR	2731544	Identifier	num		2731467	0					
ANR	2731545	Identifier	INT_MAX		2731467	1					
ANR	2731546	RelationalExpression	num < 0		2731467	1		<			
ANR	2731547	Identifier	num		2731467	0					
ANR	2731548	PrimaryExpression	0		2731467	1					
ANR	2731549	CompoundStatement		12:32:280:280	2731467	1					
ANR	2731550	ReturnStatement	return - 1 ;	354:2:9869:9878	2731467	0	True				
ANR	2731551	UnaryOperationExpression	- 1		2731467	0					
ANR	2731552	UnaryOperator	-		2731467	0					
ANR	2731553	PrimaryExpression	1		2731467	1					
ANR	2731554	ElseStatement	else		2731467	0					
ANR	2731555	CompoundStatement		14:8:303:303	2731467	0					
ANR	2731556	ReturnStatement	return ( int ) num ;	356:2:9892:9908	2731467	0	True				
ANR	2731557	CastExpression	( int ) num		2731467	0					
ANR	2731558	CastTarget	int		2731467	0					
ANR	2731559	Identifier	num		2731467	1					
ANR	2731560	ReturnType	inline static int		2731467	1					
ANR	2731561	Identifier	php_sprintf_getnumber		2731467	2					
ANR	2731562	ParameterList	"char * buffer , size_t * pos"		2731467	3					
ANR	2731563	Parameter	char * buffer	341:22:9557:9568	2731467	0	True				
ANR	2731564	ParameterType	char *		2731467	0					
ANR	2731565	Identifier	buffer		2731467	1					
ANR	2731566	Parameter	size_t * pos	341:36:9571:9581	2731467	1	True				
ANR	2731567	ParameterType	size_t *		2731467	0					
ANR	2731568	Identifier	pos		2731467	1					
ANR	2731569	CFGEntryNode	ENTRY		2731467		True				
ANR	2731570	CFGExitNode	EXIT		2731467		True				
ANR	2731571	Symbol	NULL		2731467						
ANR	2731572	Symbol	pos		2731467						
ANR	2731573	Symbol	endptr		2731467						
ANR	2731574	Symbol	num		2731467						
ANR	2731575	Symbol	& endptr		2731467						
ANR	2731576	Symbol	INT_MAX		2731467						
ANR	2731577	Symbol	i		2731467						
ANR	2731578	Symbol	ZEND_STRTOL		2731467						
ANR	2731579	Symbol	buffer		2731467						
ANR	2731580	Symbol	* pos		2731467						
ANR	2731581	Function	php_formatted_print	385:0:10652:17910							
ANR	2731582	FunctionDef	"php_formatted_print (zend_execute_data * execute_data , int use_array , int format_offset)"		2731581	0					
ANR	2731583	CompoundStatement		387:0:10760:17910	2731581	0					
ANR	2731584	IdentifierDeclStatement	zval * newargs = NULL ;	388:1:10763:10783	2731581	0	True				
ANR	2731585	IdentifierDecl	* newargs = NULL		2731581	0					
ANR	2731586	IdentifierDeclType	zval *		2731581	0					
ANR	2731587	Identifier	newargs		2731581	1					
ANR	2731588	AssignmentExpression	* newargs = NULL		2731581	2		=			
ANR	2731589	Identifier	NULL		2731581	0					
ANR	2731590	Identifier	NULL		2731581	1					
ANR	2731591	IdentifierDeclStatement	"zval * args , * z_format ;"	389:1:10786:10807	2731581	1	True				
ANR	2731592	IdentifierDecl	* args		2731581	0					
ANR	2731593	IdentifierDeclType	zval *		2731581	0					
ANR	2731594	Identifier	args		2731581	1					
ANR	2731595	IdentifierDecl	* z_format		2731581	1					
ANR	2731596	IdentifierDeclType	zval *		2731581	0					
ANR	2731597	Identifier	z_format		2731581	1					
ANR	2731598	IdentifierDeclStatement	int argc ;	390:1:10810:10818	2731581	2	True				
ANR	2731599	IdentifierDecl	argc		2731581	0					
ANR	2731600	IdentifierDeclType	int		2731581	0					
ANR	2731601	Identifier	argc		2731581	1					
ANR	2731602	IdentifierDeclStatement	"size_t size = 240 , inpos = 0 , outpos = 0 , temppos ;"	391:1:10821:10870	2731581	3	True				
ANR	2731603	IdentifierDecl	size = 240		2731581	0					
ANR	2731604	IdentifierDeclType	size_t		2731581	0					
ANR	2731605	Identifier	size		2731581	1					
ANR	2731606	AssignmentExpression	size = 240		2731581	2		=			
ANR	2731607	Identifier	size		2731581	0					
ANR	2731608	PrimaryExpression	240		2731581	1					
ANR	2731609	IdentifierDecl	inpos = 0		2731581	1					
ANR	2731610	IdentifierDeclType	size_t		2731581	0					
ANR	2731611	Identifier	inpos		2731581	1					
ANR	2731612	AssignmentExpression	inpos = 0		2731581	2		=			
ANR	2731613	Identifier	inpos		2731581	0					
ANR	2731614	PrimaryExpression	0		2731581	1					
ANR	2731615	IdentifierDecl	outpos = 0		2731581	2					
ANR	2731616	IdentifierDeclType	size_t		2731581	0					
ANR	2731617	Identifier	outpos		2731581	1					
ANR	2731618	AssignmentExpression	outpos = 0		2731581	2		=			
ANR	2731619	Identifier	outpos		2731581	0					
ANR	2731620	PrimaryExpression	0		2731581	1					
ANR	2731621	IdentifierDecl	temppos		2731581	3					
ANR	2731622	IdentifierDeclType	size_t		2731581	0					
ANR	2731623	Identifier	temppos		2731581	1					
ANR	2731624	IdentifierDeclStatement	"int alignment , currarg , adjusting , argnum , width , precision ;"	392:1:10873:10932	2731581	4	True				
ANR	2731625	IdentifierDecl	alignment		2731581	0					
ANR	2731626	IdentifierDeclType	int		2731581	0					
ANR	2731627	Identifier	alignment		2731581	1					
ANR	2731628	IdentifierDecl	currarg		2731581	1					
ANR	2731629	IdentifierDeclType	int		2731581	0					
ANR	2731630	Identifier	currarg		2731581	1					
ANR	2731631	IdentifierDecl	adjusting		2731581	2					
ANR	2731632	IdentifierDeclType	int		2731581	0					
ANR	2731633	Identifier	adjusting		2731581	1					
ANR	2731634	IdentifierDecl	argnum		2731581	3					
ANR	2731635	IdentifierDeclType	int		2731581	0					
ANR	2731636	Identifier	argnum		2731581	1					
ANR	2731637	IdentifierDecl	width		2731581	4					
ANR	2731638	IdentifierDeclType	int		2731581	0					
ANR	2731639	Identifier	width		2731581	1					
ANR	2731640	IdentifierDecl	precision		2731581	5					
ANR	2731641	IdentifierDeclType	int		2731581	0					
ANR	2731642	Identifier	precision		2731581	1					
ANR	2731643	IdentifierDeclStatement	"char * format , padding ;"	393:1:10935:10956	2731581	5	True				
ANR	2731644	IdentifierDecl	* format		2731581	0					
ANR	2731645	IdentifierDeclType	char *		2731581	0					
ANR	2731646	Identifier	format		2731581	1					
ANR	2731647	IdentifierDecl	padding		2731581	1					
ANR	2731648	IdentifierDeclType	char		2731581	0					
ANR	2731649	Identifier	padding		2731581	1					
ANR	2731650	IdentifierDeclStatement	zend_string * result ;	394:1:10959:10978	2731581	6	True				
ANR	2731651	IdentifierDecl	* result		2731581	0					
ANR	2731652	IdentifierDeclType	zend_string *		2731581	0					
ANR	2731653	Identifier	result		2731581	1					
ANR	2731654	IdentifierDeclStatement	int always_sign ;	395:1:10981:10996	2731581	7	True				
ANR	2731655	IdentifierDecl	always_sign		2731581	0					
ANR	2731656	IdentifierDeclType	int		2731581	0					
ANR	2731657	Identifier	always_sign		2731581	1					
ANR	2731658	IdentifierDeclStatement	size_t format_len ;	396:1:10999:11016	2731581	8	True				
ANR	2731659	IdentifierDecl	format_len		2731581	0					
ANR	2731660	IdentifierDeclType	size_t		2731581	0					
ANR	2731661	Identifier	format_len		2731581	1					
ANR	2731662	IfStatement	"if ( zend_parse_parameters ( ZEND_NUM_ARGS ( ) , ""+"" , & args , & argc ) == FAILURE )"		2731581	9					
ANR	2731663	Condition	"zend_parse_parameters ( ZEND_NUM_ARGS ( ) , ""+"" , & args , & argc ) == FAILURE"	399:5:11041:11108	2731581	0	True				
ANR	2731664	EqualityExpression	"zend_parse_parameters ( ZEND_NUM_ARGS ( ) , ""+"" , & args , & argc ) == FAILURE"		2731581	0		==			
ANR	2731665	CallExpression	"zend_parse_parameters ( ZEND_NUM_ARGS ( ) , ""+"" , & args , & argc )"		2731581	0					
ANR	2731666	Callee	zend_parse_parameters		2731581	0					
ANR	2731667	Identifier	zend_parse_parameters		2731581	0					
ANR	2731668	ArgumentList	ZEND_NUM_ARGS ( )		2731581	1					
ANR	2731669	Argument	ZEND_NUM_ARGS ( )		2731581	0					
ANR	2731670	CallExpression	ZEND_NUM_ARGS ( )		2731581	0					
ANR	2731671	Callee	ZEND_NUM_ARGS		2731581	0					
ANR	2731672	Identifier	ZEND_NUM_ARGS		2731581	0					
ANR	2731673	ArgumentList			2731581	1					
ANR	2731674	Argument	"""+"""		2731581	1					
ANR	2731675	PrimaryExpression	"""+"""		2731581	0					
ANR	2731676	Argument	& args		2731581	2					
ANR	2731677	UnaryOperationExpression	& args		2731581	0					
ANR	2731678	UnaryOperator	&		2731581	0					
ANR	2731679	Identifier	args		2731581	1					
ANR	2731680	Argument	& argc		2731581	3					
ANR	2731681	UnaryOperationExpression	& argc		2731581	0					
ANR	2731682	UnaryOperator	&		2731581	0					
ANR	2731683	Identifier	argc		2731581	1					
ANR	2731684	Identifier	FAILURE		2731581	1					
ANR	2731685	CompoundStatement		13:75:350:350	2731581	1					
ANR	2731686	ReturnStatement	return NULL ;	400:2:11115:11126	2731581	0	True				
ANR	2731687	Identifier	NULL		2731581	0					
ANR	2731688	IfStatement	if ( ( use_array && argc != ( 2 + format_offset ) ) || ( ! use_array && argc < ( 1 + format_offset ) ) )		2731581	10					
ANR	2731689	Condition	( use_array && argc != ( 2 + format_offset ) ) || ( ! use_array && argc < ( 1 + format_offset ) )	409:5:11299:11389	2731581	0	True				
ANR	2731690	OrExpression	( use_array && argc != ( 2 + format_offset ) ) || ( ! use_array && argc < ( 1 + format_offset ) )		2731581	0		||			
ANR	2731691	AndExpression	use_array && argc != ( 2 + format_offset )		2731581	0		&&			
ANR	2731692	Identifier	use_array		2731581	0					
ANR	2731693	EqualityExpression	argc != ( 2 + format_offset )		2731581	1		!=			
ANR	2731694	Identifier	argc		2731581	0					
ANR	2731695	AdditiveExpression	2 + format_offset		2731581	1		+			
ANR	2731696	PrimaryExpression	2		2731581	0					
ANR	2731697	Identifier	format_offset		2731581	1					
ANR	2731698	AndExpression	! use_array && argc < ( 1 + format_offset )		2731581	1		&&			
ANR	2731699	UnaryOperationExpression	! use_array		2731581	0					
ANR	2731700	UnaryOperator	!		2731581	0					
ANR	2731701	Identifier	use_array		2731581	1					
ANR	2731702	RelationalExpression	argc < ( 1 + format_offset )		2731581	1		<			
ANR	2731703	Identifier	argc		2731581	0					
ANR	2731704	AdditiveExpression	1 + format_offset		2731581	1		+			
ANR	2731705	PrimaryExpression	1		2731581	0					
ANR	2731706	Identifier	format_offset		2731581	1					
ANR	2731707	CompoundStatement		24:50:631:631	2731581	1					
ANR	2731708	ExpressionStatement	WRONG_PARAM_COUNT_WITH_RETVAL ( NULL )	411:2:11396:11431	2731581	0	True				
ANR	2731709	CallExpression	WRONG_PARAM_COUNT_WITH_RETVAL ( NULL )		2731581	0					
ANR	2731710	Callee	WRONG_PARAM_COUNT_WITH_RETVAL		2731581	0					
ANR	2731711	Identifier	WRONG_PARAM_COUNT_WITH_RETVAL		2731581	0					
ANR	2731712	ArgumentList	NULL		2731581	1					
ANR	2731713	Argument	NULL		2731581	0					
ANR	2731714	Identifier	NULL		2731581	0					
ANR	2731715	ExpressionStatement	convert_to_string_ex ( & args [ format_offset ] )	414:1:11438:11480	2731581	11	True				
ANR	2731716	CallExpression	convert_to_string_ex ( & args [ format_offset ] )		2731581	0					
ANR	2731717	Callee	convert_to_string_ex		2731581	0					
ANR	2731718	Identifier	convert_to_string_ex		2731581	0					
ANR	2731719	ArgumentList	& args [ format_offset ]		2731581	1					
ANR	2731720	Argument	& args [ format_offset ]		2731581	0					
ANR	2731721	UnaryOperationExpression	& args [ format_offset ]		2731581	0					
ANR	2731722	UnaryOperator	&		2731581	0					
ANR	2731723	ArrayIndexing	args [ format_offset ]		2731581	1					
ANR	2731724	Identifier	args		2731581	0					
ANR	2731725	Identifier	format_offset		2731581	1					
ANR	2731726	IfStatement	if ( use_array )		2731581	12					
ANR	2731727	Condition	use_array	415:5:11487:11495	2731581	0	True				
ANR	2731728	Identifier	use_array		2731581	0					
ANR	2731729	CompoundStatement		32:2:766:777	2731581	1					
ANR	2731730	IdentifierDeclStatement	int i = 1 ;	416:2:11502:11511	2731581	0	True				
ANR	2731731	IdentifierDecl	i = 1		2731581	0					
ANR	2731732	IdentifierDeclType	int		2731581	0					
ANR	2731733	Identifier	i		2731581	1					
ANR	2731734	AssignmentExpression	i = 1		2731581	2		=			
ANR	2731735	Identifier	i		2731581	0					
ANR	2731736	PrimaryExpression	1		2731581	1					
ANR	2731737	IdentifierDeclStatement	zval * zv ;	417:2:11515:11523	2731581	1	True				
ANR	2731738	IdentifierDecl	* zv		2731581	0					
ANR	2731739	IdentifierDeclType	zval *		2731581	0					
ANR	2731740	Identifier	zv		2731581	1					
ANR	2731741	IdentifierDeclStatement	zval * array ;	418:2:11527:11538	2731581	2	True				
ANR	2731742	IdentifierDecl	* array		2731581	0					
ANR	2731743	IdentifierDeclType	zval *		2731581	0					
ANR	2731744	Identifier	array		2731581	1					
ANR	2731745	ExpressionStatement	z_format = & args [ format_offset ]	420:2:11543:11574	2731581	3	True				
ANR	2731746	AssignmentExpression	z_format = & args [ format_offset ]		2731581	0		=			
ANR	2731747	Identifier	z_format		2731581	0					
ANR	2731748	UnaryOperationExpression	& args [ format_offset ]		2731581	1					
ANR	2731749	UnaryOperator	&		2731581	0					
ANR	2731750	ArrayIndexing	args [ format_offset ]		2731581	1					
ANR	2731751	Identifier	args		2731581	0					
ANR	2731752	Identifier	format_offset		2731581	1					
ANR	2731753	ExpressionStatement	array = & args [ 1 + format_offset ]	421:2:11578:11610	2731581	4	True				
ANR	2731754	AssignmentExpression	array = & args [ 1 + format_offset ]		2731581	0		=			
ANR	2731755	Identifier	array		2731581	0					
ANR	2731756	UnaryOperationExpression	& args [ 1 + format_offset ]		2731581	1					
ANR	2731757	UnaryOperator	&		2731581	0					
ANR	2731758	ArrayIndexing	args [ 1 + format_offset ]		2731581	1					
ANR	2731759	Identifier	args		2731581	0					
ANR	2731760	AdditiveExpression	1 + format_offset		2731581	1		+			
ANR	2731761	PrimaryExpression	1		2731581	0					
ANR	2731762	Identifier	format_offset		2731581	1					
ANR	2731763	IfStatement	if ( Z_TYPE_P ( array ) != IS_ARRAY )		2731581	5					
ANR	2731764	Condition	Z_TYPE_P ( array ) != IS_ARRAY	422:6:11618:11644	2731581	0	True				
ANR	2731765	EqualityExpression	Z_TYPE_P ( array ) != IS_ARRAY		2731581	0		!=			
ANR	2731766	CallExpression	Z_TYPE_P ( array )		2731581	0					
ANR	2731767	Callee	Z_TYPE_P		2731581	0					
ANR	2731768	Identifier	Z_TYPE_P		2731581	0					
ANR	2731769	ArgumentList	array		2731581	1					
ANR	2731770	Argument	array		2731581	0					
ANR	2731771	Identifier	array		2731581	0					
ANR	2731772	Identifier	IS_ARRAY		2731581	1					
ANR	2731773	CompoundStatement		36:35:886:886	2731581	1					
ANR	2731774	ExpressionStatement	convert_to_array ( array )	423:3:11652:11675	2731581	0	True				
ANR	2731775	CallExpression	convert_to_array ( array )		2731581	0					
ANR	2731776	Callee	convert_to_array		2731581	0					
ANR	2731777	Identifier	convert_to_array		2731581	0					
ANR	2731778	ArgumentList	array		2731581	1					
ANR	2731779	Argument	array		2731581	0					
ANR	2731780	Identifier	array		2731581	0					
ANR	2731781	ExpressionStatement	argc = 1 + zend_hash_num_elements ( Z_ARRVAL_P ( array ) )	426:2:11684:11736	2731581	6	True				
ANR	2731782	AssignmentExpression	argc = 1 + zend_hash_num_elements ( Z_ARRVAL_P ( array ) )		2731581	0		=			
ANR	2731783	Identifier	argc		2731581	0					
ANR	2731784	AdditiveExpression	1 + zend_hash_num_elements ( Z_ARRVAL_P ( array ) )		2731581	1		+			
ANR	2731785	PrimaryExpression	1		2731581	0					
ANR	2731786	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( array ) )		2731581	1					
ANR	2731787	Callee	zend_hash_num_elements		2731581	0					
ANR	2731788	Identifier	zend_hash_num_elements		2731581	0					
ANR	2731789	ArgumentList	Z_ARRVAL_P ( array )		2731581	1					
ANR	2731790	Argument	Z_ARRVAL_P ( array )		2731581	0					
ANR	2731791	CallExpression	Z_ARRVAL_P ( array )		2731581	0					
ANR	2731792	Callee	Z_ARRVAL_P		2731581	0					
ANR	2731793	Identifier	Z_ARRVAL_P		2731581	0					
ANR	2731794	ArgumentList	array		2731581	1					
ANR	2731795	Argument	array		2731581	0					
ANR	2731796	Identifier	array		2731581	0					
ANR	2731797	ExpressionStatement	"newargs = ( zval * ) safe_emalloc ( argc , sizeof ( zval ) , 0 )"	427:2:11740:11793	2731581	7	True				
ANR	2731798	AssignmentExpression	"newargs = ( zval * ) safe_emalloc ( argc , sizeof ( zval ) , 0 )"		2731581	0		=			
ANR	2731799	Identifier	newargs		2731581	0					
ANR	2731800	CastExpression	"( zval * ) safe_emalloc ( argc , sizeof ( zval ) , 0 )"		2731581	1					
ANR	2731801	CastTarget	zval *		2731581	0					
ANR	2731802	CallExpression	"safe_emalloc ( argc , sizeof ( zval ) , 0 )"		2731581	1					
ANR	2731803	Callee	safe_emalloc		2731581	0					
ANR	2731804	Identifier	safe_emalloc		2731581	0					
ANR	2731805	ArgumentList	argc		2731581	1					
ANR	2731806	Argument	argc		2731581	0					
ANR	2731807	Identifier	argc		2731581	0					
ANR	2731808	Argument	sizeof ( zval )		2731581	1					
ANR	2731809	SizeofExpression	sizeof ( zval )		2731581	0					
ANR	2731810	Sizeof	sizeof		2731581	0					
ANR	2731811	SizeofOperand	zval		2731581	1					
ANR	2731812	Argument	0		2731581	2					
ANR	2731813	PrimaryExpression	0		2731581	0					
ANR	2731814	ExpressionStatement	"ZVAL_COPY_VALUE ( & newargs [ 0 ] , z_format )"	428:2:11797:11835	2731581	8	True				
ANR	2731815	CallExpression	"ZVAL_COPY_VALUE ( & newargs [ 0 ] , z_format )"		2731581	0					
ANR	2731816	Callee	ZVAL_COPY_VALUE		2731581	0					
ANR	2731817	Identifier	ZVAL_COPY_VALUE		2731581	0					
ANR	2731818	ArgumentList	& newargs [ 0 ]		2731581	1					
ANR	2731819	Argument	& newargs [ 0 ]		2731581	0					
ANR	2731820	UnaryOperationExpression	& newargs [ 0 ]		2731581	0					
ANR	2731821	UnaryOperator	&		2731581	0					
ANR	2731822	ArrayIndexing	newargs [ 0 ]		2731581	1					
ANR	2731823	Identifier	newargs		2731581	0					
ANR	2731824	PrimaryExpression	0		2731581	1					
ANR	2731825	Argument	z_format		2731581	1					
ANR	2731826	Identifier	z_format		2731581	0					
ANR	2731827	Statement	ZEND_HASH_FOREACH_VAL	430:2:11840:11860	2731581	9	True				
ANR	2731828	Statement	(	430:23:11861:11861	2731581	10	True				
ANR	2731829	Statement	Z_ARRVAL_P	430:24:11862:11871	2731581	11	True				
ANR	2731830	Statement	(	430:34:11872:11872	2731581	12	True				
ANR	2731831	Statement	array	430:35:11873:11877	2731581	13	True				
ANR	2731832	Statement	)	430:40:11878:11878	2731581	14	True				
ANR	2731833	Statement	","	430:41:11879:11879	2731581	15	True				
ANR	2731834	Statement	zv	430:43:11881:11882	2731581	16	True				
ANR	2731835	Statement	)	430:45:11883:11883	2731581	17	True				
ANR	2731836	CompoundStatement		44:47:1124:1124	2731581	18					
ANR	2731837	ExpressionStatement	"ZVAL_COPY_VALUE ( & newargs [ i ] , zv )"	431:3:11890:11922	2731581	0	True				
ANR	2731838	CallExpression	"ZVAL_COPY_VALUE ( & newargs [ i ] , zv )"		2731581	0					
ANR	2731839	Callee	ZVAL_COPY_VALUE		2731581	0					
ANR	2731840	Identifier	ZVAL_COPY_VALUE		2731581	0					
ANR	2731841	ArgumentList	& newargs [ i ]		2731581	1					
ANR	2731842	Argument	& newargs [ i ]		2731581	0					
ANR	2731843	UnaryOperationExpression	& newargs [ i ]		2731581	0					
ANR	2731844	UnaryOperator	&		2731581	0					
ANR	2731845	ArrayIndexing	newargs [ i ]		2731581	1					
ANR	2731846	Identifier	newargs		2731581	0					
ANR	2731847	Identifier	i		2731581	1					
ANR	2731848	Argument	zv		2731581	1					
ANR	2731849	Identifier	zv		2731581	0					
ANR	2731850	ExpressionStatement	i ++	432:3:11927:11930	2731581	1	True				
ANR	2731851	PostIncDecOperationExpression	i ++		2731581	0					
ANR	2731852	Identifier	i		2731581	0					
ANR	2731853	IncDec	++		2731581	1					
ANR	2731854	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	433:4:11936:11959	2731581	19	True				
ANR	2731855	CallExpression	ZEND_HASH_FOREACH_END ( )		2731581	0					
ANR	2731856	Callee	ZEND_HASH_FOREACH_END		2731581	0					
ANR	2731857	Identifier	ZEND_HASH_FOREACH_END		2731581	0					
ANR	2731858	ArgumentList			2731581	1					
ANR	2731859	ExpressionStatement	args = newargs	434:2:11963:11977	2731581	20	True				
ANR	2731860	AssignmentExpression	args = newargs		2731581	0		=			
ANR	2731861	Identifier	args		2731581	0					
ANR	2731862	Identifier	newargs		2731581	1					
ANR	2731863	ExpressionStatement	format_offset = 0	435:2:11981:11998	2731581	21	True				
ANR	2731864	AssignmentExpression	format_offset = 0		2731581	0		=			
ANR	2731865	Identifier	format_offset		2731581	0					
ANR	2731866	PrimaryExpression	0		2731581	1					
ANR	2731867	ExpressionStatement	format = Z_STRVAL ( args [ format_offset ] )	438:1:12005:12043	2731581	13	True				
ANR	2731868	AssignmentExpression	format = Z_STRVAL ( args [ format_offset ] )		2731581	0		=			
ANR	2731869	Identifier	format		2731581	0					
ANR	2731870	CallExpression	Z_STRVAL ( args [ format_offset ] )		2731581	1					
ANR	2731871	Callee	Z_STRVAL		2731581	0					
ANR	2731872	Identifier	Z_STRVAL		2731581	0					
ANR	2731873	ArgumentList	args [ format_offset ]		2731581	1					
ANR	2731874	Argument	args [ format_offset ]		2731581	0					
ANR	2731875	ArrayIndexing	args [ format_offset ]		2731581	0					
ANR	2731876	Identifier	args		2731581	0					
ANR	2731877	Identifier	format_offset		2731581	1					
ANR	2731878	ExpressionStatement	format_len = Z_STRLEN ( args [ format_offset ] )	439:1:12046:12088	2731581	14	True				
ANR	2731879	AssignmentExpression	format_len = Z_STRLEN ( args [ format_offset ] )		2731581	0		=			
ANR	2731880	Identifier	format_len		2731581	0					
ANR	2731881	CallExpression	Z_STRLEN ( args [ format_offset ] )		2731581	1					
ANR	2731882	Callee	Z_STRLEN		2731581	0					
ANR	2731883	Identifier	Z_STRLEN		2731581	0					
ANR	2731884	ArgumentList	args [ format_offset ]		2731581	1					
ANR	2731885	Argument	args [ format_offset ]		2731581	0					
ANR	2731886	ArrayIndexing	args [ format_offset ]		2731581	0					
ANR	2731887	Identifier	args		2731581	0					
ANR	2731888	Identifier	format_offset		2731581	1					
ANR	2731889	ExpressionStatement	"result = zend_string_alloc ( size , 0 )"	440:1:12091:12126	2731581	15	True				
ANR	2731890	AssignmentExpression	"result = zend_string_alloc ( size , 0 )"		2731581	0		=			
ANR	2731891	Identifier	result		2731581	0					
ANR	2731892	CallExpression	"zend_string_alloc ( size , 0 )"		2731581	1					
ANR	2731893	Callee	zend_string_alloc		2731581	0					
ANR	2731894	Identifier	zend_string_alloc		2731581	0					
ANR	2731895	ArgumentList	size		2731581	1					
ANR	2731896	Argument	size		2731581	0					
ANR	2731897	Identifier	size		2731581	0					
ANR	2731898	Argument	0		2731581	1					
ANR	2731899	PrimaryExpression	0		2731581	0					
ANR	2731900	ExpressionStatement	currarg = 1	442:1:12130:12141	2731581	16	True				
ANR	2731901	AssignmentExpression	currarg = 1		2731581	0		=			
ANR	2731902	Identifier	currarg		2731581	0					
ANR	2731903	PrimaryExpression	1		2731581	1					
ANR	2731904	WhileStatement	while ( inpos < Z_STRLEN ( args [ format_offset ] ) )		2731581	17					
ANR	2731905	Condition	inpos < Z_STRLEN ( args [ format_offset ] )	444:8:12152:12188	2731581	0	True				
ANR	2731906	RelationalExpression	inpos < Z_STRLEN ( args [ format_offset ] )		2731581	0		<			
ANR	2731907	Identifier	inpos		2731581	0					
ANR	2731908	CallExpression	Z_STRLEN ( args [ format_offset ] )		2731581	1					
ANR	2731909	Callee	Z_STRLEN		2731581	0					
ANR	2731910	Identifier	Z_STRLEN		2731581	0					
ANR	2731911	ArgumentList	args [ format_offset ]		2731581	1					
ANR	2731912	Argument	args [ format_offset ]		2731581	0					
ANR	2731913	ArrayIndexing	args [ format_offset ]		2731581	0					
ANR	2731914	Identifier	args		2731581	0					
ANR	2731915	Identifier	format_offset		2731581	1					
ANR	2731916	CompoundStatement		60:2:1453:1462	2731581	1					
ANR	2731917	IdentifierDeclStatement	int expprec = 0 ;	445:2:12195:12210	2731581	0	True				
ANR	2731918	IdentifierDecl	expprec = 0		2731581	0					
ANR	2731919	IdentifierDeclType	int		2731581	0					
ANR	2731920	Identifier	expprec		2731581	1					
ANR	2731921	AssignmentExpression	expprec = 0		2731581	2		=			
ANR	2731922	Identifier	expprec		2731581	0					
ANR	2731923	PrimaryExpression	0		2731581	1					
ANR	2731924	IdentifierDeclStatement	zval * tmp ;	446:2:12214:12223	2731581	1	True				
ANR	2731925	IdentifierDecl	* tmp		2731581	0					
ANR	2731926	IdentifierDeclType	zval *		2731581	0					
ANR	2731927	Identifier	tmp		2731581	1					
ANR	2731928	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ] ) )"	448:2:12228:12294	2731581	2	True				
ANR	2731929	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ] ) )"		2731581	0					
ANR	2731930	Callee	PRINTF_DEBUG		2731581	0					
ANR	2731931	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2731932	ArgumentList	"""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ]"		2731581	1					
ANR	2731933	Argument	"""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ]"		2731581	0					
ANR	2731934	Expression	"""sprintf: format[%d]='%c'\\n"" , inpos , format [ inpos ]"		2731581	0					
ANR	2731935	PrimaryExpression	"""sprintf: format[%d]='%c'\\n"""		2731581	0					
ANR	2731936	Expression	"inpos , format [ inpos ]"		2731581	1					
ANR	2731937	Identifier	inpos		2731581	0					
ANR	2731938	ArrayIndexing	format [ inpos ]		2731581	1					
ANR	2731939	Identifier	format		2731581	0					
ANR	2731940	Identifier	inpos		2731581	1					
ANR	2731941	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: outpos=%d\\n"" , outpos ) )"	449:2:12298:12344	2731581	3	True				
ANR	2731942	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: outpos=%d\\n"" , outpos ) )"		2731581	0					
ANR	2731943	Callee	PRINTF_DEBUG		2731581	0					
ANR	2731944	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2731945	ArgumentList	"""sprintf: outpos=%d\\n"" , outpos"		2731581	1					
ANR	2731946	Argument	"""sprintf: outpos=%d\\n"" , outpos"		2731581	0					
ANR	2731947	Expression	"""sprintf: outpos=%d\\n"" , outpos"		2731581	0					
ANR	2731948	PrimaryExpression	"""sprintf: outpos=%d\\n"""		2731581	0					
ANR	2731949	Identifier	outpos		2731581	1					
ANR	2731950	IfStatement	if ( format [ inpos ] != '%' )		2731581	4					
ANR	2731951	Condition	format [ inpos ] != '%'	450:6:12352:12371	2731581	0	True				
ANR	2731952	EqualityExpression	format [ inpos ] != '%'		2731581	0		!=			
ANR	2731953	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2731954	Identifier	format		2731581	0					
ANR	2731955	Identifier	inpos		2731581	1					
ANR	2731956	PrimaryExpression	'%'		2731581	1					
ANR	2731957	CompoundStatement		64:28:1613:1613	2731581	1					
ANR	2731958	ExpressionStatement	"php_sprintf_appendchar ( & result , & outpos , format [ inpos ++ ] )"	451:3:12379:12436	2731581	0	True				
ANR	2731959	CallExpression	"php_sprintf_appendchar ( & result , & outpos , format [ inpos ++ ] )"		2731581	0					
ANR	2731960	Callee	php_sprintf_appendchar		2731581	0					
ANR	2731961	Identifier	php_sprintf_appendchar		2731581	0					
ANR	2731962	ArgumentList	& result		2731581	1					
ANR	2731963	Argument	& result		2731581	0					
ANR	2731964	UnaryOperationExpression	& result		2731581	0					
ANR	2731965	UnaryOperator	&		2731581	0					
ANR	2731966	Identifier	result		2731581	1					
ANR	2731967	Argument	& outpos		2731581	1					
ANR	2731968	UnaryOperationExpression	& outpos		2731581	0					
ANR	2731969	UnaryOperator	&		2731581	0					
ANR	2731970	Identifier	outpos		2731581	1					
ANR	2731971	Argument	format [ inpos ++ ]		2731581	2					
ANR	2731972	ArrayIndexing	format [ inpos ++ ]		2731581	0					
ANR	2731973	Identifier	format		2731581	0					
ANR	2731974	PostIncDecOperationExpression	inpos ++		2731581	1					
ANR	2731975	Identifier	inpos		2731581	0					
ANR	2731976	IncDec	++		2731581	1					
ANR	2731977	ElseStatement	else		2731581	0					
ANR	2731978	IfStatement	if ( format [ inpos + 1 ] == '%' )		2731581	0					
ANR	2731979	Condition	format [ inpos + 1 ] == '%'	452:13:12451:12474	2731581	0	True				
ANR	2731980	EqualityExpression	format [ inpos + 1 ] == '%'		2731581	0		==			
ANR	2731981	ArrayIndexing	format [ inpos + 1 ]		2731581	0					
ANR	2731982	Identifier	format		2731581	0					
ANR	2731983	AdditiveExpression	inpos + 1		2731581	1		+			
ANR	2731984	Identifier	inpos		2731581	0					
ANR	2731985	PrimaryExpression	1		2731581	1					
ANR	2731986	PrimaryExpression	'%'		2731581	1					
ANR	2731987	CompoundStatement		66:39:1716:1716	2731581	1					
ANR	2731988	ExpressionStatement	"php_sprintf_appendchar ( & result , & outpos , '%' )"	453:3:12482:12527	2731581	0	True				
ANR	2731989	CallExpression	"php_sprintf_appendchar ( & result , & outpos , '%' )"		2731581	0					
ANR	2731990	Callee	php_sprintf_appendchar		2731581	0					
ANR	2731991	Identifier	php_sprintf_appendchar		2731581	0					
ANR	2731992	ArgumentList	& result		2731581	1					
ANR	2731993	Argument	& result		2731581	0					
ANR	2731994	UnaryOperationExpression	& result		2731581	0					
ANR	2731995	UnaryOperator	&		2731581	0					
ANR	2731996	Identifier	result		2731581	1					
ANR	2731997	Argument	& outpos		2731581	1					
ANR	2731998	UnaryOperationExpression	& outpos		2731581	0					
ANR	2731999	UnaryOperator	&		2731581	0					
ANR	2732000	Identifier	outpos		2731581	1					
ANR	2732001	Argument	'%'		2731581	2					
ANR	2732002	PrimaryExpression	'%'		2731581	0					
ANR	2732003	ExpressionStatement	inpos += 2	454:3:12532:12542	2731581	1	True				
ANR	2732004	AssignmentExpression	inpos += 2		2731581	0		+=			
ANR	2732005	Identifier	inpos		2731581	0					
ANR	2732006	PrimaryExpression	2		2731581	1					
ANR	2732007	ElseStatement	else		2731581	0					
ANR	2732008	CompoundStatement		69:9:1792:1792	2731581	0					
ANR	2732009	ExpressionStatement	alignment = ALIGN_RIGHT	457:3:12616:12639	2731581	0	True				
ANR	2732010	AssignmentExpression	alignment = ALIGN_RIGHT		2731581	0		=			
ANR	2732011	Identifier	alignment		2731581	0					
ANR	2732012	Identifier	ALIGN_RIGHT		2731581	1					
ANR	2732013	ExpressionStatement	adjusting = 0	458:3:12644:12657	2731581	1	True				
ANR	2732014	AssignmentExpression	adjusting = 0		2731581	0		=			
ANR	2732015	Identifier	adjusting		2731581	0					
ANR	2732016	PrimaryExpression	0		2731581	1					
ANR	2732017	ExpressionStatement	padding = ' '	459:3:12662:12675	2731581	2	True				
ANR	2732018	AssignmentExpression	padding = ' '		2731581	0		=			
ANR	2732019	Identifier	padding		2731581	0					
ANR	2732020	PrimaryExpression	' '		2731581	1					
ANR	2732021	ExpressionStatement	always_sign = 0	460:3:12680:12695	2731581	3	True				
ANR	2732022	AssignmentExpression	always_sign = 0		2731581	0		=			
ANR	2732023	Identifier	always_sign		2731581	0					
ANR	2732024	PrimaryExpression	0		2731581	1					
ANR	2732025	ExpressionStatement	inpos ++	461:3:12700:12707	2731581	4	True				
ANR	2732026	PostIncDecOperationExpression	inpos ++		2731581	0					
ANR	2732027	Identifier	inpos		2731581	0					
ANR	2732028	IncDec	++		2731581	1					
ANR	2732029	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos ) )"	463:3:12734:12824	2731581	5	True				
ANR	2732030	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos ) )"		2731581	0					
ANR	2732031	Callee	PRINTF_DEBUG		2731581	0					
ANR	2732032	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2732033	ArgumentList	"""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos"		2731581	1					
ANR	2732034	Argument	"""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos"		2731581	0					
ANR	2732035	Expression	"""sprintf: first looking at '%c', inpos=%d\\n"" , format [ inpos ] , inpos"		2731581	0					
ANR	2732036	PrimaryExpression	"""sprintf: first looking at '%c', inpos=%d\\n"""		2731581	0					
ANR	2732037	Expression	"format [ inpos ] , inpos"		2731581	1					
ANR	2732038	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732039	Identifier	format		2731581	0					
ANR	2732040	Identifier	inpos		2731581	1					
ANR	2732041	Identifier	inpos		2731581	1					
ANR	2732042	IfStatement	if ( isascii ( ( int ) format [ inpos ] ) && ! isalpha ( ( int ) format [ inpos ] ) )		2731581	6					
ANR	2732043	Condition	isascii ( ( int ) format [ inpos ] ) && ! isalpha ( ( int ) format [ inpos ] )	465:7:12833:12891	2731581	0	True				
ANR	2732044	AndExpression	isascii ( ( int ) format [ inpos ] ) && ! isalpha ( ( int ) format [ inpos ] )		2731581	0		&&			
ANR	2732045	CallExpression	isascii ( ( int ) format [ inpos ] )		2731581	0					
ANR	2732046	Callee	isascii		2731581	0					
ANR	2732047	Identifier	isascii		2731581	0					
ANR	2732048	ArgumentList	( int ) format [ inpos ]		2731581	1					
ANR	2732049	Argument	( int ) format [ inpos ]		2731581	0					
ANR	2732050	CastExpression	( int ) format [ inpos ]		2731581	0					
ANR	2732051	CastTarget	int		2731581	0					
ANR	2732052	ArrayIndexing	format [ inpos ]		2731581	1					
ANR	2732053	Identifier	format		2731581	0					
ANR	2732054	Identifier	inpos		2731581	1					
ANR	2732055	UnaryOperationExpression	! isalpha ( ( int ) format [ inpos ] )		2731581	1					
ANR	2732056	UnaryOperator	!		2731581	0					
ANR	2732057	CallExpression	isalpha ( ( int ) format [ inpos ] )		2731581	1					
ANR	2732058	Callee	isalpha		2731581	0					
ANR	2732059	Identifier	isalpha		2731581	0					
ANR	2732060	ArgumentList	( int ) format [ inpos ]		2731581	1					
ANR	2732061	Argument	( int ) format [ inpos ]		2731581	0					
ANR	2732062	CastExpression	( int ) format [ inpos ]		2731581	0					
ANR	2732063	CastTarget	int		2731581	0					
ANR	2732064	ArrayIndexing	format [ inpos ]		2731581	1					
ANR	2732065	Identifier	format		2731581	0					
ANR	2732066	Identifier	inpos		2731581	1					
ANR	2732067	CompoundStatement		79:68:2133:2133	2731581	1					
ANR	2732068	ExpressionStatement	temppos = inpos	467:4:12932:12947	2731581	0	True				
ANR	2732069	AssignmentExpression	temppos = inpos		2731581	0		=			
ANR	2732070	Identifier	temppos		2731581	0					
ANR	2732071	Identifier	inpos		2731581	1					
ANR	2732072	WhileStatement	while ( isdigit ( ( int ) format [ temppos ] ) )		2731581	1					
ANR	2732073	Condition	isdigit ( ( int ) format [ temppos ] )	468:11:12960:12988	2731581	0	True				
ANR	2732074	CallExpression	isdigit ( ( int ) format [ temppos ] )		2731581	0					
ANR	2732075	Callee	isdigit		2731581	0					
ANR	2732076	Identifier	isdigit		2731581	0					
ANR	2732077	ArgumentList	( int ) format [ temppos ]		2731581	1					
ANR	2732078	Argument	( int ) format [ temppos ]		2731581	0					
ANR	2732079	CastExpression	( int ) format [ temppos ]		2731581	0					
ANR	2732080	CastTarget	int		2731581	0					
ANR	2732081	ArrayIndexing	format [ temppos ]		2731581	1					
ANR	2732082	Identifier	format		2731581	0					
ANR	2732083	Identifier	temppos		2731581	1					
ANR	2732084	ExpressionStatement	temppos ++	468:42:12991:13000	2731581	1	True				
ANR	2732085	PostIncDecOperationExpression	temppos ++		2731581	0					
ANR	2732086	Identifier	temppos		2731581	0					
ANR	2732087	IncDec	++		2731581	1					
ANR	2732088	IfStatement	if ( format [ temppos ] == '$' )		2731581	2					
ANR	2732089	Condition	format [ temppos ] == '$'	469:8:13010:13031	2731581	0	True				
ANR	2732090	EqualityExpression	format [ temppos ] == '$'		2731581	0		==			
ANR	2732091	ArrayIndexing	format [ temppos ]		2731581	0					
ANR	2732092	Identifier	format		2731581	0					
ANR	2732093	Identifier	temppos		2731581	1					
ANR	2732094	PrimaryExpression	'$'		2731581	1					
ANR	2732095	CompoundStatement		83:32:2273:2273	2731581	1					
ANR	2732096	ExpressionStatement	"argnum = php_sprintf_getnumber ( format , & inpos )"	470:5:13041:13087	2731581	0	True				
ANR	2732097	AssignmentExpression	"argnum = php_sprintf_getnumber ( format , & inpos )"		2731581	0		=			
ANR	2732098	Identifier	argnum		2731581	0					
ANR	2732099	CallExpression	"php_sprintf_getnumber ( format , & inpos )"		2731581	1					
ANR	2732100	Callee	php_sprintf_getnumber		2731581	0					
ANR	2732101	Identifier	php_sprintf_getnumber		2731581	0					
ANR	2732102	ArgumentList	format		2731581	1					
ANR	2732103	Argument	format		2731581	0					
ANR	2732104	Identifier	format		2731581	0					
ANR	2732105	Argument	& inpos		2731581	1					
ANR	2732106	UnaryOperationExpression	& inpos		2731581	0					
ANR	2732107	UnaryOperator	&		2731581	0					
ANR	2732108	Identifier	inpos		2731581	1					
ANR	2732109	IfStatement	if ( argnum <= 0 )		2731581	1					
ANR	2732110	Condition	argnum <= 0	472:9:13099:13109	2731581	0	True				
ANR	2732111	RelationalExpression	argnum <= 0		2731581	0		<=			
ANR	2732112	Identifier	argnum		2731581	0					
ANR	2732113	PrimaryExpression	0		2731581	1					
ANR	2732114	CompoundStatement		86:22:2351:2351	2731581	1					
ANR	2732115	ExpressionStatement	efree ( result )	473:6:13120:13133	2731581	0	True				
ANR	2732116	CallExpression	efree ( result )		2731581	0					
ANR	2732117	Callee	efree		2731581	0					
ANR	2732118	Identifier	efree		2731581	0					
ANR	2732119	ArgumentList	result		2731581	1					
ANR	2732120	Argument	result		2731581	0					
ANR	2732121	Identifier	result		2731581	0					
ANR	2732122	IfStatement	if ( newargs )		2731581	1					
ANR	2732123	Condition	newargs	474:10:13145:13151	2731581	0	True				
ANR	2732124	Identifier	newargs		2731581	0					
ANR	2732125	CompoundStatement		88:19:2393:2393	2731581	1					
ANR	2732126	ExpressionStatement	efree ( newargs )	475:7:13163:13177	2731581	0	True				
ANR	2732127	CallExpression	efree ( newargs )		2731581	0					
ANR	2732128	Callee	efree		2731581	0					
ANR	2732129	Identifier	efree		2731581	0					
ANR	2732130	ArgumentList	newargs		2731581	1					
ANR	2732131	Argument	newargs		2731581	0					
ANR	2732132	Identifier	newargs		2731581	0					
ANR	2732133	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Argument number must be greater than zero"" )"	477:6:13193:13271	2731581	2	True				
ANR	2732134	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Argument number must be greater than zero"" )"		2731581	0					
ANR	2732135	Callee	php_error_docref		2731581	0					
ANR	2732136	Identifier	php_error_docref		2731581	0					
ANR	2732137	ArgumentList	NULL		2731581	1					
ANR	2732138	Argument	NULL		2731581	0					
ANR	2732139	Identifier	NULL		2731581	0					
ANR	2732140	Argument	E_WARNING		2731581	1					
ANR	2732141	Identifier	E_WARNING		2731581	0					
ANR	2732142	Argument	"""Argument number must be greater than zero"""		2731581	2					
ANR	2732143	PrimaryExpression	"""Argument number must be greater than zero"""		2731581	0					
ANR	2732144	ReturnStatement	return NULL ;	478:6:13279:13290	2731581	3	True				
ANR	2732145	Identifier	NULL		2731581	0					
ANR	2732146	ExpressionStatement	inpos ++	481:5:13305:13312	2731581	2	True				
ANR	2732147	PostIncDecOperationExpression	inpos ++		2731581	0					
ANR	2732148	Identifier	inpos		2731581	0					
ANR	2732149	IncDec	++		2731581	1					
ANR	2732150	ElseStatement	else		2731581	0					
ANR	2732151	CompoundStatement		96:11:2584:2584	2731581	0					
ANR	2732152	ExpressionStatement	argnum = currarg ++	483:5:13352:13370	2731581	0	True				
ANR	2732153	AssignmentExpression	argnum = currarg ++		2731581	0		=			
ANR	2732154	Identifier	argnum		2731581	0					
ANR	2732155	PostIncDecOperationExpression	currarg ++		2731581	1					
ANR	2732156	Identifier	currarg		2731581	0					
ANR	2732157	IncDec	++		2731581	1					
ANR	2732158	ExpressionStatement	argnum += format_offset	486:4:13383:13406	2731581	3	True				
ANR	2732159	AssignmentExpression	argnum += format_offset		2731581	0		+=			
ANR	2732160	Identifier	argnum		2731581	0					
ANR	2732161	Identifier	format_offset		2731581	1					
ANR	2732162	Statement	PRINTF_DEBUG	489:4:13452:13463	2731581	4	True				
ANR	2732163	Statement	(	489:16:13464:13464	2731581	5	True				
ANR	2732164	Statement	(	489:17:13465:13465	2731581	6	True				
ANR	2732165	Statement	"""sprintf: looking for modifiers\\n"""	489:18:13466:13499	2731581	7	True				
ANR	2732166	Statement	"""sprintf: now looking at '%c', inpos=%d\\n"""	490:9:13510:13551	2731581	8	True				
ANR	2732167	Statement	","	490:51:13552:13552	2731581	9	True				
ANR	2732168	Statement	format	491:9:13563:13568	2731581	10	True				
ANR	2732169	Statement	[	491:15:13569:13569	2731581	11	True				
ANR	2732170	Statement	inpos	491:16:13570:13574	2731581	12	True				
ANR	2732171	Statement	]	491:21:13575:13575	2731581	13	True				
ANR	2732172	Statement	","	491:22:13576:13576	2731581	14	True				
ANR	2732173	Statement	inpos	491:24:13578:13582	2731581	15	True				
ANR	2732174	Statement	)	491:29:13583:13583	2731581	16	True				
ANR	2732175	Statement	)	491:30:13584:13584	2731581	17	True				
ANR	2732176	ExpressionStatement		491:31:13585:13585	2731581	18	True				
ANR	2732177	ForStatement	for ( ; ; inpos ++ )		2731581	19					
ANR	2732178	PostIncDecOperationExpression	inpos ++	492:12:13599:13605	2731581	0	True				
ANR	2732179	Identifier	inpos		2731581	0					
ANR	2732180	IncDec	++		2731581	1					
ANR	2732181	CompoundStatement		106:21:2847:2847	2731581	1					
ANR	2732182	IfStatement	if ( format [ inpos ] == ' ' || format [ inpos ] == '0' )		2731581	0					
ANR	2732183	Condition	format [ inpos ] == ' ' || format [ inpos ] == '0'	493:9:13619:13662	2731581	0	True				
ANR	2732184	OrExpression	format [ inpos ] == ' ' || format [ inpos ] == '0'		2731581	0		||			
ANR	2732185	EqualityExpression	format [ inpos ] == ' '		2731581	0		==			
ANR	2732186	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732187	Identifier	format		2731581	0					
ANR	2732188	Identifier	inpos		2731581	1					
ANR	2732189	PrimaryExpression	' '		2731581	1					
ANR	2732190	EqualityExpression	format [ inpos ] == '0'		2731581	1		==			
ANR	2732191	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732192	Identifier	format		2731581	0					
ANR	2732193	Identifier	inpos		2731581	1					
ANR	2732194	PrimaryExpression	'0'		2731581	1					
ANR	2732195	CompoundStatement		107:55:2904:2904	2731581	1					
ANR	2732196	ExpressionStatement	padding = format [ inpos ]	494:6:13673:13696	2731581	0	True				
ANR	2732197	AssignmentExpression	padding = format [ inpos ]		2731581	0		=			
ANR	2732198	Identifier	padding		2731581	0					
ANR	2732199	ArrayIndexing	format [ inpos ]		2731581	1					
ANR	2732200	Identifier	format		2731581	0					
ANR	2732201	Identifier	inpos		2731581	1					
ANR	2732202	ElseStatement	else		2731581	0					
ANR	2732203	IfStatement	if ( format [ inpos ] == '-' )		2731581	0					
ANR	2732204	Condition	format [ inpos ] == '-'	495:16:13714:13733	2731581	0	True				
ANR	2732205	EqualityExpression	format [ inpos ] == '-'		2731581	0		==			
ANR	2732206	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732207	Identifier	format		2731581	0					
ANR	2732208	Identifier	inpos		2731581	1					
ANR	2732209	PrimaryExpression	'-'		2731581	1					
ANR	2732210	CompoundStatement		109:38:2975:2975	2731581	1					
ANR	2732211	ExpressionStatement	alignment = ALIGN_LEFT	496:6:13744:13766	2731581	0	True				
ANR	2732212	AssignmentExpression	alignment = ALIGN_LEFT		2731581	0		=			
ANR	2732213	Identifier	alignment		2731581	0					
ANR	2732214	Identifier	ALIGN_LEFT		2731581	1					
ANR	2732215	ElseStatement	else		2731581	0					
ANR	2732216	IfStatement	if ( format [ inpos ] == '+' )		2731581	0					
ANR	2732217	Condition	format [ inpos ] == '+'	498:16:13823:13842	2731581	0	True				
ANR	2732218	EqualityExpression	format [ inpos ] == '+'		2731581	0		==			
ANR	2732219	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732220	Identifier	format		2731581	0					
ANR	2732221	Identifier	inpos		2731581	1					
ANR	2732222	PrimaryExpression	'+'		2731581	1					
ANR	2732223	CompoundStatement		112:38:3084:3084	2731581	1					
ANR	2732224	ExpressionStatement	always_sign = 1	499:6:13853:13868	2731581	0	True				
ANR	2732225	AssignmentExpression	always_sign = 1		2731581	0		=			
ANR	2732226	Identifier	always_sign		2731581	0					
ANR	2732227	PrimaryExpression	1		2731581	1					
ANR	2732228	ElseStatement	else		2731581	0					
ANR	2732229	IfStatement	if ( format [ inpos ] == '\\'' && inpos + 1 < format_len )		2731581	0					
ANR	2732230	Condition	format [ inpos ] == '\\'' && inpos + 1 < format_len	500:16:13886:13928	2731581	0	True				
ANR	2732231	AndExpression	format [ inpos ] == '\\'' && inpos + 1 < format_len		2731581	0		&&			
ANR	2732232	EqualityExpression	format [ inpos ] == '\\''		2731581	0		==			
ANR	2732233	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732234	Identifier	format		2731581	0					
ANR	2732235	Identifier	inpos		2731581	1					
ANR	2732236	PrimaryExpression	'\\''		2731581	1					
ANR	2732237	RelationalExpression	inpos + 1 < format_len		2731581	1		<			
ANR	2732238	AdditiveExpression	inpos + 1		2731581	0		+			
ANR	2732239	Identifier	inpos		2731581	0					
ANR	2732240	PrimaryExpression	1		2731581	1					
ANR	2732241	Identifier	format_len		2731581	1					
ANR	2732242	CompoundStatement		114:61:3170:3170	2731581	1					
ANR	2732243	ExpressionStatement	padding = format [ ++ inpos ]	501:6:13939:13964	2731581	0	True				
ANR	2732244	AssignmentExpression	padding = format [ ++ inpos ]		2731581	0		=			
ANR	2732245	Identifier	padding		2731581	0					
ANR	2732246	ArrayIndexing	format [ ++ inpos ]		2731581	1					
ANR	2732247	Identifier	format		2731581	0					
ANR	2732248	UnaryExpression	++ inpos		2731581	1					
ANR	2732249	IncDec	++		2731581	0					
ANR	2732250	Identifier	inpos		2731581	1					
ANR	2732251	ElseStatement	else		2731581	0					
ANR	2732252	CompoundStatement		116:12:3217:3217	2731581	0					
ANR	2732253	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: end of modifiers\\n"" ) )"	503:6:13986:14031	2731581	0	True				
ANR	2732254	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: end of modifiers\\n"" ) )"		2731581	0					
ANR	2732255	Callee	PRINTF_DEBUG		2731581	0					
ANR	2732256	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2732257	ArgumentList	"""sprintf: end of modifiers\\n"""		2731581	1					
ANR	2732258	Argument	"""sprintf: end of modifiers\\n"""		2731581	0					
ANR	2732259	PrimaryExpression	"""sprintf: end of modifiers\\n"""		2731581	0					
ANR	2732260	BreakStatement	break ;	504:6:14039:14044	2731581	1	True				
ANR	2732261	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: padding='%c'\\n"" , padding ) )"	507:4:14063:14113	2731581	20	True				
ANR	2732262	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: padding='%c'\\n"" , padding ) )"		2731581	0					
ANR	2732263	Callee	PRINTF_DEBUG		2731581	0					
ANR	2732264	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2732265	ArgumentList	"""sprintf: padding='%c'\\n"" , padding"		2731581	1					
ANR	2732266	Argument	"""sprintf: padding='%c'\\n"" , padding"		2731581	0					
ANR	2732267	Expression	"""sprintf: padding='%c'\\n"" , padding"		2731581	0					
ANR	2732268	PrimaryExpression	"""sprintf: padding='%c'\\n"""		2731581	0					
ANR	2732269	Identifier	padding		2731581	1					
ANR	2732270	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"" ) )"	508:4:14119:14215	2731581	21	True				
ANR	2732271	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"" ) )"		2731581	0					
ANR	2732272	Callee	PRINTF_DEBUG		2731581	0					
ANR	2732273	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2732274	ArgumentList	"""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"""		2731581	1					
ANR	2732275	Argument	"""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"""		2731581	0					
ANR	2732276	Expression	"""sprintf: alignment=%s\\n"" , ( alignment == ALIGN_LEFT ) ? ""left"" : ""right"""		2731581	0					
ANR	2732277	PrimaryExpression	"""sprintf: alignment=%s\\n"""		2731581	0					
ANR	2732278	ConditionalExpression	"( alignment == ALIGN_LEFT ) ? ""left"" : ""right"""		2731581	1					
ANR	2732279	Condition	alignment == ALIGN_LEFT		2731581	0					
ANR	2732280	EqualityExpression	alignment == ALIGN_LEFT		2731581	0		==			
ANR	2732281	Identifier	alignment		2731581	0					
ANR	2732282	Identifier	ALIGN_LEFT		2731581	1					
ANR	2732283	PrimaryExpression	"""left"""		2731581	1					
ANR	2732284	PrimaryExpression	"""right"""		2731581	2					
ANR	2732285	IfStatement	if ( isdigit ( ( int ) format [ inpos ] ) )		2731581	22					
ANR	2732286	Condition	isdigit ( ( int ) format [ inpos ] )	513:8:14265:14291	2731581	0	True				
ANR	2732287	CallExpression	isdigit ( ( int ) format [ inpos ] )		2731581	0					
ANR	2732288	Callee	isdigit		2731581	0					
ANR	2732289	Identifier	isdigit		2731581	0					
ANR	2732290	ArgumentList	( int ) format [ inpos ]		2731581	1					
ANR	2732291	Argument	( int ) format [ inpos ]		2731581	0					
ANR	2732292	CastExpression	( int ) format [ inpos ]		2731581	0					
ANR	2732293	CastTarget	int		2731581	0					
ANR	2732294	ArrayIndexing	format [ inpos ]		2731581	1					
ANR	2732295	Identifier	format		2731581	0					
ANR	2732296	Identifier	inpos		2731581	1					
ANR	2732297	CompoundStatement		127:37:3533:3533	2731581	1					
ANR	2732298	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: getting width\\n"" ) )"	514:5:14301:14343	2731581	0	True				
ANR	2732299	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: getting width\\n"" ) )"		2731581	0					
ANR	2732300	Callee	PRINTF_DEBUG		2731581	0					
ANR	2732301	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2732302	ArgumentList	"""sprintf: getting width\\n"""		2731581	1					
ANR	2732303	Argument	"""sprintf: getting width\\n"""		2731581	0					
ANR	2732304	PrimaryExpression	"""sprintf: getting width\\n"""		2731581	0					
ANR	2732305	IfStatement	"if ( ( width = php_sprintf_getnumber ( format , & inpos ) ) < 0 )"		2731581	1					
ANR	2732306	Condition	"( width = php_sprintf_getnumber ( format , & inpos ) ) < 0"	515:9:14354:14404	2731581	0	True				
ANR	2732307	RelationalExpression	"( width = php_sprintf_getnumber ( format , & inpos ) ) < 0"		2731581	0		<			
ANR	2732308	AssignmentExpression	"width = php_sprintf_getnumber ( format , & inpos )"		2731581	0		=			
ANR	2732309	Identifier	width		2731581	0					
ANR	2732310	CallExpression	"php_sprintf_getnumber ( format , & inpos )"		2731581	1					
ANR	2732311	Callee	php_sprintf_getnumber		2731581	0					
ANR	2732312	Identifier	php_sprintf_getnumber		2731581	0					
ANR	2732313	ArgumentList	format		2731581	1					
ANR	2732314	Argument	format		2731581	0					
ANR	2732315	Identifier	format		2731581	0					
ANR	2732316	Argument	& inpos		2731581	1					
ANR	2732317	UnaryOperationExpression	& inpos		2731581	0					
ANR	2732318	UnaryOperator	&		2731581	0					
ANR	2732319	Identifier	inpos		2731581	1					
ANR	2732320	PrimaryExpression	0		2731581	1					
ANR	2732321	CompoundStatement		129:62:3646:3646	2731581	1					
ANR	2732322	ExpressionStatement	efree ( result )	516:6:14415:14428	2731581	0	True				
ANR	2732323	CallExpression	efree ( result )		2731581	0					
ANR	2732324	Callee	efree		2731581	0					
ANR	2732325	Identifier	efree		2731581	0					
ANR	2732326	ArgumentList	result		2731581	1					
ANR	2732327	Argument	result		2731581	0					
ANR	2732328	Identifier	result		2731581	0					
ANR	2732329	IfStatement	if ( newargs )		2731581	1					
ANR	2732330	Condition	newargs	517:10:14440:14446	2731581	0	True				
ANR	2732331	Identifier	newargs		2731581	0					
ANR	2732332	CompoundStatement		131:19:3688:3688	2731581	1					
ANR	2732333	ExpressionStatement	efree ( newargs )	518:7:14458:14472	2731581	0	True				
ANR	2732334	CallExpression	efree ( newargs )		2731581	0					
ANR	2732335	Callee	efree		2731581	0					
ANR	2732336	Identifier	efree		2731581	0					
ANR	2732337	ArgumentList	newargs		2731581	1					
ANR	2732338	Argument	newargs		2731581	0					
ANR	2732339	Identifier	newargs		2731581	0					
ANR	2732340	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Width must be greater than zero and less than %d"" , INT_MAX )"	520:6:14488:14582	2731581	2	True				
ANR	2732341	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Width must be greater than zero and less than %d"" , INT_MAX )"		2731581	0					
ANR	2732342	Callee	php_error_docref		2731581	0					
ANR	2732343	Identifier	php_error_docref		2731581	0					
ANR	2732344	ArgumentList	NULL		2731581	1					
ANR	2732345	Argument	NULL		2731581	0					
ANR	2732346	Identifier	NULL		2731581	0					
ANR	2732347	Argument	E_WARNING		2731581	1					
ANR	2732348	Identifier	E_WARNING		2731581	0					
ANR	2732349	Argument	"""Width must be greater than zero and less than %d"""		2731581	2					
ANR	2732350	PrimaryExpression	"""Width must be greater than zero and less than %d"""		2731581	0					
ANR	2732351	Argument	INT_MAX		2731581	3					
ANR	2732352	Identifier	INT_MAX		2731581	0					
ANR	2732353	ReturnStatement	return NULL ;	521:6:14590:14601	2731581	3	True				
ANR	2732354	Identifier	NULL		2731581	0					
ANR	2732355	ExpressionStatement	adjusting |= ADJ_WIDTH	523:5:14615:14637	2731581	2	True				
ANR	2732356	AssignmentExpression	adjusting |= ADJ_WIDTH		2731581	0		|=			
ANR	2732357	Identifier	adjusting		2731581	0					
ANR	2732358	Identifier	ADJ_WIDTH		2731581	1					
ANR	2732359	ElseStatement	else		2731581	0					
ANR	2732360	CompoundStatement		138:11:3889:3889	2731581	0					
ANR	2732361	ExpressionStatement	width = 0	525:5:14657:14666	2731581	0	True				
ANR	2732362	AssignmentExpression	width = 0		2731581	0		=			
ANR	2732363	Identifier	width		2731581	0					
ANR	2732364	PrimaryExpression	0		2731581	1					
ANR	2732365	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: width=%d\\n"" , width ) )"	527:4:14678:14722	2731581	23	True				
ANR	2732366	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: width=%d\\n"" , width ) )"		2731581	0					
ANR	2732367	Callee	PRINTF_DEBUG		2731581	0					
ANR	2732368	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2732369	ArgumentList	"""sprintf: width=%d\\n"" , width"		2731581	1					
ANR	2732370	Argument	"""sprintf: width=%d\\n"" , width"		2731581	0					
ANR	2732371	Expression	"""sprintf: width=%d\\n"" , width"		2731581	0					
ANR	2732372	PrimaryExpression	"""sprintf: width=%d\\n"""		2731581	0					
ANR	2732373	Identifier	width		2731581	1					
ANR	2732374	IfStatement	if ( format [ inpos ] == '.' )		2731581	24					
ANR	2732375	Condition	format [ inpos ] == '.'	530:8:14782:14801	2731581	0	True				
ANR	2732376	EqualityExpression	format [ inpos ] == '.'		2731581	0		==			
ANR	2732377	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732378	Identifier	format		2731581	0					
ANR	2732379	Identifier	inpos		2731581	1					
ANR	2732380	PrimaryExpression	'.'		2731581	1					
ANR	2732381	CompoundStatement		144:30:4043:4043	2731581	1					
ANR	2732382	ExpressionStatement	inpos ++	531:5:14811:14818	2731581	0	True				
ANR	2732383	PostIncDecOperationExpression	inpos ++		2731581	0					
ANR	2732384	Identifier	inpos		2731581	0					
ANR	2732385	IncDec	++		2731581	1					
ANR	2732386	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: getting precision\\n"" ) )"	532:5:14825:14871	2731581	1	True				
ANR	2732387	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: getting precision\\n"" ) )"		2731581	0					
ANR	2732388	Callee	PRINTF_DEBUG		2731581	0					
ANR	2732389	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2732390	ArgumentList	"""sprintf: getting precision\\n"""		2731581	1					
ANR	2732391	Argument	"""sprintf: getting precision\\n"""		2731581	0					
ANR	2732392	PrimaryExpression	"""sprintf: getting precision\\n"""		2731581	0					
ANR	2732393	IfStatement	if ( isdigit ( ( int ) format [ inpos ] ) )		2731581	2					
ANR	2732394	Condition	isdigit ( ( int ) format [ inpos ] )	533:9:14882:14908	2731581	0	True				
ANR	2732395	CallExpression	isdigit ( ( int ) format [ inpos ] )		2731581	0					
ANR	2732396	Callee	isdigit		2731581	0					
ANR	2732397	Identifier	isdigit		2731581	0					
ANR	2732398	ArgumentList	( int ) format [ inpos ]		2731581	1					
ANR	2732399	Argument	( int ) format [ inpos ]		2731581	0					
ANR	2732400	CastExpression	( int ) format [ inpos ]		2731581	0					
ANR	2732401	CastTarget	int		2731581	0					
ANR	2732402	ArrayIndexing	format [ inpos ]		2731581	1					
ANR	2732403	Identifier	format		2731581	0					
ANR	2732404	Identifier	inpos		2731581	1					
ANR	2732405	CompoundStatement		147:38:4150:4150	2731581	1					
ANR	2732406	IfStatement	"if ( ( precision = php_sprintf_getnumber ( format , & inpos ) ) < 0 )"		2731581	0					
ANR	2732407	Condition	"( precision = php_sprintf_getnumber ( format , & inpos ) ) < 0"	534:10:14923:14977	2731581	0	True				
ANR	2732408	RelationalExpression	"( precision = php_sprintf_getnumber ( format , & inpos ) ) < 0"		2731581	0		<			
ANR	2732409	AssignmentExpression	"precision = php_sprintf_getnumber ( format , & inpos )"		2731581	0		=			
ANR	2732410	Identifier	precision		2731581	0					
ANR	2732411	CallExpression	"php_sprintf_getnumber ( format , & inpos )"		2731581	1					
ANR	2732412	Callee	php_sprintf_getnumber		2731581	0					
ANR	2732413	Identifier	php_sprintf_getnumber		2731581	0					
ANR	2732414	ArgumentList	format		2731581	1					
ANR	2732415	Argument	format		2731581	0					
ANR	2732416	Identifier	format		2731581	0					
ANR	2732417	Argument	& inpos		2731581	1					
ANR	2732418	UnaryOperationExpression	& inpos		2731581	0					
ANR	2732419	UnaryOperator	&		2731581	0					
ANR	2732420	Identifier	inpos		2731581	1					
ANR	2732421	PrimaryExpression	0		2731581	1					
ANR	2732422	CompoundStatement		148:67:4219:4219	2731581	1					
ANR	2732423	ExpressionStatement	efree ( result )	535:7:14989:15002	2731581	0	True				
ANR	2732424	CallExpression	efree ( result )		2731581	0					
ANR	2732425	Callee	efree		2731581	0					
ANR	2732426	Identifier	efree		2731581	0					
ANR	2732427	ArgumentList	result		2731581	1					
ANR	2732428	Argument	result		2731581	0					
ANR	2732429	Identifier	result		2731581	0					
ANR	2732430	IfStatement	if ( newargs )		2731581	1					
ANR	2732431	Condition	newargs	536:11:15015:15021	2731581	0	True				
ANR	2732432	Identifier	newargs		2731581	0					
ANR	2732433	CompoundStatement		150:20:4263:4263	2731581	1					
ANR	2732434	ExpressionStatement	efree ( newargs )	537:8:15034:15048	2731581	0	True				
ANR	2732435	CallExpression	efree ( newargs )		2731581	0					
ANR	2732436	Callee	efree		2731581	0					
ANR	2732437	Identifier	efree		2731581	0					
ANR	2732438	ArgumentList	newargs		2731581	1					
ANR	2732439	Argument	newargs		2731581	0					
ANR	2732440	Identifier	newargs		2731581	0					
ANR	2732441	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Precision must be greater than zero and less than %d"" , INT_MAX )"	539:7:15066:15164	2731581	2	True				
ANR	2732442	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Precision must be greater than zero and less than %d"" , INT_MAX )"		2731581	0					
ANR	2732443	Callee	php_error_docref		2731581	0					
ANR	2732444	Identifier	php_error_docref		2731581	0					
ANR	2732445	ArgumentList	NULL		2731581	1					
ANR	2732446	Argument	NULL		2731581	0					
ANR	2732447	Identifier	NULL		2731581	0					
ANR	2732448	Argument	E_WARNING		2731581	1					
ANR	2732449	Identifier	E_WARNING		2731581	0					
ANR	2732450	Argument	"""Precision must be greater than zero and less than %d"""		2731581	2					
ANR	2732451	PrimaryExpression	"""Precision must be greater than zero and less than %d"""		2731581	0					
ANR	2732452	Argument	INT_MAX		2731581	3					
ANR	2732453	Identifier	INT_MAX		2731581	0					
ANR	2732454	ReturnStatement	return NULL ;	540:7:15173:15184	2731581	3	True				
ANR	2732455	Identifier	NULL		2731581	0					
ANR	2732456	ExpressionStatement	adjusting |= ADJ_PRECISION	542:6:15200:15226	2731581	1	True				
ANR	2732457	AssignmentExpression	adjusting |= ADJ_PRECISION		2731581	0		|=			
ANR	2732458	Identifier	adjusting		2731581	0					
ANR	2732459	Identifier	ADJ_PRECISION		2731581	1					
ANR	2732460	ExpressionStatement	expprec = 1	543:6:15234:15245	2731581	2	True				
ANR	2732461	AssignmentExpression	expprec = 1		2731581	0		=			
ANR	2732462	Identifier	expprec		2731581	0					
ANR	2732463	PrimaryExpression	1		2731581	1					
ANR	2732464	ElseStatement	else		2731581	0					
ANR	2732465	CompoundStatement		158:12:4498:4498	2731581	0					
ANR	2732466	ExpressionStatement	precision = 0	545:6:15267:15280	2731581	0	True				
ANR	2732467	AssignmentExpression	precision = 0		2731581	0		=			
ANR	2732468	Identifier	precision		2731581	0					
ANR	2732469	PrimaryExpression	0		2731581	1					
ANR	2732470	ElseStatement	else		2731581	0					
ANR	2732471	CompoundStatement		161:11:4539:4539	2731581	0					
ANR	2732472	ExpressionStatement	precision = 0	548:5:15307:15320	2731581	0	True				
ANR	2732473	AssignmentExpression	precision = 0		2731581	0		=			
ANR	2732474	Identifier	precision		2731581	0					
ANR	2732475	PrimaryExpression	0		2731581	1					
ANR	2732476	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: precision=%d\\n"" , precision ) )"	550:4:15332:15384	2731581	25	True				
ANR	2732477	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: precision=%d\\n"" , precision ) )"		2731581	0					
ANR	2732478	Callee	PRINTF_DEBUG		2731581	0					
ANR	2732479	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2732480	ArgumentList	"""sprintf: precision=%d\\n"" , precision"		2731581	1					
ANR	2732481	Argument	"""sprintf: precision=%d\\n"" , precision"		2731581	0					
ANR	2732482	Expression	"""sprintf: precision=%d\\n"" , precision"		2731581	0					
ANR	2732483	PrimaryExpression	"""sprintf: precision=%d\\n"""		2731581	0					
ANR	2732484	Identifier	precision		2731581	1					
ANR	2732485	ElseStatement	else		2731581	0					
ANR	2732486	CompoundStatement		165:10:4635:4635	2731581	0					
ANR	2732487	ExpressionStatement	width = precision = 0	552:4:15402:15423	2731581	0	True				
ANR	2732488	AssignmentExpression	width = precision = 0		2731581	0		=			
ANR	2732489	Identifier	width		2731581	0					
ANR	2732490	AssignmentExpression	precision = 0		2731581	1		=			
ANR	2732491	Identifier	precision		2731581	0					
ANR	2732492	PrimaryExpression	0		2731581	1					
ANR	2732493	ExpressionStatement	argnum = currarg ++ + format_offset	553:4:15429:15463	2731581	1	True				
ANR	2732494	AssignmentExpression	argnum = currarg ++ + format_offset		2731581	0		=			
ANR	2732495	Identifier	argnum		2731581	0					
ANR	2732496	AdditiveExpression	currarg ++ + format_offset		2731581	1		+			
ANR	2732497	PostIncDecOperationExpression	currarg ++		2731581	0					
ANR	2732498	Identifier	currarg		2731581	0					
ANR	2732499	IncDec	++		2731581	1					
ANR	2732500	Identifier	format_offset		2731581	1					
ANR	2732501	IfStatement	if ( argnum >= argc )		2731581	7					
ANR	2732502	Condition	argnum >= argc	556:7:15478:15491	2731581	0	True				
ANR	2732503	RelationalExpression	argnum >= argc		2731581	0		>=			
ANR	2732504	Identifier	argnum		2731581	0					
ANR	2732505	Identifier	argc		2731581	1					
ANR	2732506	CompoundStatement		170:23:4733:4733	2731581	1					
ANR	2732507	ExpressionStatement	efree ( result )	557:4:15500:15513	2731581	0	True				
ANR	2732508	CallExpression	efree ( result )		2731581	0					
ANR	2732509	Callee	efree		2731581	0					
ANR	2732510	Identifier	efree		2731581	0					
ANR	2732511	ArgumentList	result		2731581	1					
ANR	2732512	Argument	result		2731581	0					
ANR	2732513	Identifier	result		2731581	0					
ANR	2732514	IfStatement	if ( newargs )		2731581	1					
ANR	2732515	Condition	newargs	558:8:15523:15529	2731581	0	True				
ANR	2732516	Identifier	newargs		2731581	0					
ANR	2732517	CompoundStatement		172:17:4771:4771	2731581	1					
ANR	2732518	ExpressionStatement	efree ( newargs )	559:5:15539:15553	2731581	0	True				
ANR	2732519	CallExpression	efree ( newargs )		2731581	0					
ANR	2732520	Callee	efree		2731581	0					
ANR	2732521	Identifier	efree		2731581	0					
ANR	2732522	ArgumentList	newargs		2731581	1					
ANR	2732523	Argument	newargs		2731581	0					
ANR	2732524	Identifier	newargs		2731581	0					
ANR	2732525	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Too few arguments"" )"	561:4:15565:15619	2731581	2	True				
ANR	2732526	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Too few arguments"" )"		2731581	0					
ANR	2732527	Callee	php_error_docref		2731581	0					
ANR	2732528	Identifier	php_error_docref		2731581	0					
ANR	2732529	ArgumentList	NULL		2731581	1					
ANR	2732530	Argument	NULL		2731581	0					
ANR	2732531	Identifier	NULL		2731581	0					
ANR	2732532	Argument	E_WARNING		2731581	1					
ANR	2732533	Identifier	E_WARNING		2731581	0					
ANR	2732534	Argument	"""Too few arguments"""		2731581	2					
ANR	2732535	PrimaryExpression	"""Too few arguments"""		2731581	0					
ANR	2732536	ReturnStatement	return NULL ;	562:4:15625:15636	2731581	3	True				
ANR	2732537	Identifier	NULL		2731581	0					
ANR	2732538	IfStatement	if ( format [ inpos ] == 'l' )		2731581	8					
ANR	2732539	Condition	format [ inpos ] == 'l'	565:7:15651:15670	2731581	0	True				
ANR	2732540	EqualityExpression	format [ inpos ] == 'l'		2731581	0		==			
ANR	2732541	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732542	Identifier	format		2731581	0					
ANR	2732543	Identifier	inpos		2731581	1					
ANR	2732544	PrimaryExpression	'l'		2731581	1					
ANR	2732545	CompoundStatement		179:29:4912:4912	2731581	1					
ANR	2732546	ExpressionStatement	inpos ++	566:4:15679:15686	2731581	0	True				
ANR	2732547	PostIncDecOperationExpression	inpos ++		2731581	0					
ANR	2732548	Identifier	inpos		2731581	0					
ANR	2732549	IncDec	++		2731581	1					
ANR	2732550	ExpressionStatement	"PRINTF_DEBUG ( ( ""sprintf: format character='%c'\\n"" , format [ inpos ] ) )"	568:3:15696:15761	2731581	9	True				
ANR	2732551	CallExpression	"PRINTF_DEBUG ( ( ""sprintf: format character='%c'\\n"" , format [ inpos ] ) )"		2731581	0					
ANR	2732552	Callee	PRINTF_DEBUG		2731581	0					
ANR	2732553	Identifier	PRINTF_DEBUG		2731581	0					
ANR	2732554	ArgumentList	"""sprintf: format character='%c'\\n"" , format [ inpos ]"		2731581	1					
ANR	2732555	Argument	"""sprintf: format character='%c'\\n"" , format [ inpos ]"		2731581	0					
ANR	2732556	Expression	"""sprintf: format character='%c'\\n"" , format [ inpos ]"		2731581	0					
ANR	2732557	PrimaryExpression	"""sprintf: format character='%c'\\n"""		2731581	0					
ANR	2732558	ArrayIndexing	format [ inpos ]		2731581	1					
ANR	2732559	Identifier	format		2731581	0					
ANR	2732560	Identifier	inpos		2731581	1					
ANR	2732561	ExpressionStatement	tmp = & args [ argnum ]	570:3:15814:15833	2731581	10	True				
ANR	2732562	AssignmentExpression	tmp = & args [ argnum ]		2731581	0		=			
ANR	2732563	Identifier	tmp		2731581	0					
ANR	2732564	UnaryOperationExpression	& args [ argnum ]		2731581	1					
ANR	2732565	UnaryOperator	&		2731581	0					
ANR	2732566	ArrayIndexing	args [ argnum ]		2731581	1					
ANR	2732567	Identifier	args		2731581	0					
ANR	2732568	Identifier	argnum		2731581	1					
ANR	2732569	SwitchStatement	switch ( format [ inpos ] )		2731581	11					
ANR	2732570	Condition	format [ inpos ]	571:11:15846:15858	2731581	0	True				
ANR	2732571	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732572	Identifier	format		2731581	0					
ANR	2732573	Identifier	inpos		2731581	1					
ANR	2732574	CompoundStatement		185:26:5100:5100	2731581	1					
ANR	2732575	Label	case 's' :	572:4:15867:15875	2731581	0	True				
ANR	2732576	CompoundStatement		187:5:5123:5162	2731581	1					
ANR	2732577	IdentifierDeclStatement	zend_string * str = zval_get_string ( tmp ) ;	573:5:15884:15923	2731581	0	True				
ANR	2732578	IdentifierDecl	* str = zval_get_string ( tmp )		2731581	0					
ANR	2732579	IdentifierDeclType	zend_string *		2731581	0					
ANR	2732580	Identifier	str		2731581	1					
ANR	2732581	AssignmentExpression	* str = zval_get_string ( tmp )		2731581	2		=			
ANR	2732582	Identifier	str		2731581	0					
ANR	2732583	CallExpression	zval_get_string ( tmp )		2731581	1					
ANR	2732584	Callee	zval_get_string		2731581	0					
ANR	2732585	Identifier	zval_get_string		2731581	0					
ANR	2732586	ArgumentList	tmp		2731581	1					
ANR	2732587	Argument	tmp		2731581	0					
ANR	2732588	Identifier	tmp		2731581	0					
ANR	2732589	ExpressionStatement	"php_sprintf_appendstring ( & result , & outpos , ZSTR_VAL ( str ) , width , precision , padding , alignment , ZSTR_LEN ( str ) , 0 , expprec , 0 )"	574:5:15930:16115	2731581	1	True				
ANR	2732590	CallExpression	"php_sprintf_appendstring ( & result , & outpos , ZSTR_VAL ( str ) , width , precision , padding , alignment , ZSTR_LEN ( str ) , 0 , expprec , 0 )"		2731581	0					
ANR	2732591	Callee	php_sprintf_appendstring		2731581	0					
ANR	2732592	Identifier	php_sprintf_appendstring		2731581	0					
ANR	2732593	ArgumentList	& result		2731581	1					
ANR	2732594	Argument	& result		2731581	0					
ANR	2732595	UnaryOperationExpression	& result		2731581	0					
ANR	2732596	UnaryOperator	&		2731581	0					
ANR	2732597	Identifier	result		2731581	1					
ANR	2732598	Argument	& outpos		2731581	1					
ANR	2732599	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732600	UnaryOperator	&		2731581	0					
ANR	2732601	Identifier	outpos		2731581	1					
ANR	2732602	Argument	ZSTR_VAL ( str )		2731581	2					
ANR	2732603	CallExpression	ZSTR_VAL ( str )		2731581	0					
ANR	2732604	Callee	ZSTR_VAL		2731581	0					
ANR	2732605	Identifier	ZSTR_VAL		2731581	0					
ANR	2732606	ArgumentList	str		2731581	1					
ANR	2732607	Argument	str		2731581	0					
ANR	2732608	Identifier	str		2731581	0					
ANR	2732609	Argument	width		2731581	3					
ANR	2732610	Identifier	width		2731581	0					
ANR	2732611	Argument	precision		2731581	4					
ANR	2732612	Identifier	precision		2731581	0					
ANR	2732613	Argument	padding		2731581	5					
ANR	2732614	Identifier	padding		2731581	0					
ANR	2732615	Argument	alignment		2731581	6					
ANR	2732616	Identifier	alignment		2731581	0					
ANR	2732617	Argument	ZSTR_LEN ( str )		2731581	7					
ANR	2732618	CallExpression	ZSTR_LEN ( str )		2731581	0					
ANR	2732619	Callee	ZSTR_LEN		2731581	0					
ANR	2732620	Identifier	ZSTR_LEN		2731581	0					
ANR	2732621	ArgumentList	str		2731581	1					
ANR	2732622	Argument	str		2731581	0					
ANR	2732623	Identifier	str		2731581	0					
ANR	2732624	Argument	0		2731581	8					
ANR	2732625	PrimaryExpression	0		2731581	0					
ANR	2732626	Argument	expprec		2731581	9					
ANR	2732627	Identifier	expprec		2731581	0					
ANR	2732628	Argument	0		2731581	10					
ANR	2732629	PrimaryExpression	0		2731581	0					
ANR	2732630	ExpressionStatement	zend_string_release ( str )	580:5:16122:16146	2731581	2	True				
ANR	2732631	CallExpression	zend_string_release ( str )		2731581	0					
ANR	2732632	Callee	zend_string_release		2731581	0					
ANR	2732633	Identifier	zend_string_release		2731581	0					
ANR	2732634	ArgumentList	str		2731581	1					
ANR	2732635	Argument	str		2731581	0					
ANR	2732636	Identifier	str		2731581	0					
ANR	2732637	BreakStatement	break ;	581:5:16153:16158	2731581	3	True				
ANR	2732638	Label	case 'd' :	584:4:16171:16179	2731581	2	True				
ANR	2732639	ExpressionStatement	"php_sprintf_appendint ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , always_sign )"	585:5:16186:16321	2731581	3	True				
ANR	2732640	CallExpression	"php_sprintf_appendint ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , always_sign )"		2731581	0					
ANR	2732641	Callee	php_sprintf_appendint		2731581	0					
ANR	2732642	Identifier	php_sprintf_appendint		2731581	0					
ANR	2732643	ArgumentList	& result		2731581	1					
ANR	2732644	Argument	& result		2731581	0					
ANR	2732645	UnaryOperationExpression	& result		2731581	0					
ANR	2732646	UnaryOperator	&		2731581	0					
ANR	2732647	Identifier	result		2731581	1					
ANR	2732648	Argument	& outpos		2731581	1					
ANR	2732649	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732650	UnaryOperator	&		2731581	0					
ANR	2732651	Identifier	outpos		2731581	1					
ANR	2732652	Argument	zval_get_long ( tmp )		2731581	2					
ANR	2732653	CallExpression	zval_get_long ( tmp )		2731581	0					
ANR	2732654	Callee	zval_get_long		2731581	0					
ANR	2732655	Identifier	zval_get_long		2731581	0					
ANR	2732656	ArgumentList	tmp		2731581	1					
ANR	2732657	Argument	tmp		2731581	0					
ANR	2732658	Identifier	tmp		2731581	0					
ANR	2732659	Argument	width		2731581	3					
ANR	2732660	Identifier	width		2731581	0					
ANR	2732661	Argument	padding		2731581	4					
ANR	2732662	Identifier	padding		2731581	0					
ANR	2732663	Argument	alignment		2731581	5					
ANR	2732664	Identifier	alignment		2731581	0					
ANR	2732665	Argument	always_sign		2731581	6					
ANR	2732666	Identifier	always_sign		2731581	0					
ANR	2732667	BreakStatement	break ;	589:5:16328:16333	2731581	4	True				
ANR	2732668	Label	case 'u' :	591:4:16340:16348	2731581	5	True				
ANR	2732669	ExpressionStatement	"php_sprintf_appenduint ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment )"	592:5:16355:16466	2731581	6	True				
ANR	2732670	CallExpression	"php_sprintf_appenduint ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment )"		2731581	0					
ANR	2732671	Callee	php_sprintf_appenduint		2731581	0					
ANR	2732672	Identifier	php_sprintf_appenduint		2731581	0					
ANR	2732673	ArgumentList	& result		2731581	1					
ANR	2732674	Argument	& result		2731581	0					
ANR	2732675	UnaryOperationExpression	& result		2731581	0					
ANR	2732676	UnaryOperator	&		2731581	0					
ANR	2732677	Identifier	result		2731581	1					
ANR	2732678	Argument	& outpos		2731581	1					
ANR	2732679	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732680	UnaryOperator	&		2731581	0					
ANR	2732681	Identifier	outpos		2731581	1					
ANR	2732682	Argument	zval_get_long ( tmp )		2731581	2					
ANR	2732683	CallExpression	zval_get_long ( tmp )		2731581	0					
ANR	2732684	Callee	zval_get_long		2731581	0					
ANR	2732685	Identifier	zval_get_long		2731581	0					
ANR	2732686	ArgumentList	tmp		2731581	1					
ANR	2732687	Argument	tmp		2731581	0					
ANR	2732688	Identifier	tmp		2731581	0					
ANR	2732689	Argument	width		2731581	3					
ANR	2732690	Identifier	width		2731581	0					
ANR	2732691	Argument	padding		2731581	4					
ANR	2732692	Identifier	padding		2731581	0					
ANR	2732693	Argument	alignment		2731581	5					
ANR	2732694	Identifier	alignment		2731581	0					
ANR	2732695	BreakStatement	break ;	595:5:16473:16478	2731581	7	True				
ANR	2732696	Label	case 'g' :	597:4:16485:16493	2731581	8	True				
ANR	2732697	Label	case 'G' :	598:4:16499:16507	2731581	9	True				
ANR	2732698	Label	case 'e' :	599:4:16513:16521	2731581	10	True				
ANR	2732699	Label	case 'E' :	600:4:16527:16535	2731581	11	True				
ANR	2732700	Label	case 'f' :	601:4:16541:16549	2731581	12	True				
ANR	2732701	Label	case 'F' :	602:4:16555:16563	2731581	13	True				
ANR	2732702	ExpressionStatement	"php_sprintf_appenddouble ( & result , & outpos , zval_get_double ( tmp ) , width , padding , alignment , precision , adjusting , format [ inpos ] , always_sign )"	603:5:16570:16771	2731581	14	True				
ANR	2732703	CallExpression	"php_sprintf_appenddouble ( & result , & outpos , zval_get_double ( tmp ) , width , padding , alignment , precision , adjusting , format [ inpos ] , always_sign )"		2731581	0					
ANR	2732704	Callee	php_sprintf_appenddouble		2731581	0					
ANR	2732705	Identifier	php_sprintf_appenddouble		2731581	0					
ANR	2732706	ArgumentList	& result		2731581	1					
ANR	2732707	Argument	& result		2731581	0					
ANR	2732708	UnaryOperationExpression	& result		2731581	0					
ANR	2732709	UnaryOperator	&		2731581	0					
ANR	2732710	Identifier	result		2731581	1					
ANR	2732711	Argument	& outpos		2731581	1					
ANR	2732712	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732713	UnaryOperator	&		2731581	0					
ANR	2732714	Identifier	outpos		2731581	1					
ANR	2732715	Argument	zval_get_double ( tmp )		2731581	2					
ANR	2732716	CallExpression	zval_get_double ( tmp )		2731581	0					
ANR	2732717	Callee	zval_get_double		2731581	0					
ANR	2732718	Identifier	zval_get_double		2731581	0					
ANR	2732719	ArgumentList	tmp		2731581	1					
ANR	2732720	Argument	tmp		2731581	0					
ANR	2732721	Identifier	tmp		2731581	0					
ANR	2732722	Argument	width		2731581	3					
ANR	2732723	Identifier	width		2731581	0					
ANR	2732724	Argument	padding		2731581	4					
ANR	2732725	Identifier	padding		2731581	0					
ANR	2732726	Argument	alignment		2731581	5					
ANR	2732727	Identifier	alignment		2731581	0					
ANR	2732728	Argument	precision		2731581	6					
ANR	2732729	Identifier	precision		2731581	0					
ANR	2732730	Argument	adjusting		2731581	7					
ANR	2732731	Identifier	adjusting		2731581	0					
ANR	2732732	Argument	format [ inpos ]		2731581	8					
ANR	2732733	ArrayIndexing	format [ inpos ]		2731581	0					
ANR	2732734	Identifier	format		2731581	0					
ANR	2732735	Identifier	inpos		2731581	1					
ANR	2732736	Argument	always_sign		2731581	9					
ANR	2732737	Identifier	always_sign		2731581	0					
ANR	2732738	BreakStatement	break ;	609:5:16778:16783	2731581	15	True				
ANR	2732739	Label	case 'c' :	611:4:16790:16798	2731581	16	True				
ANR	2732740	ExpressionStatement	"php_sprintf_appendchar ( & result , & outpos , ( char ) zval_get_long ( tmp ) )"	612:5:16805:16882	2731581	17	True				
ANR	2732741	CallExpression	"php_sprintf_appendchar ( & result , & outpos , ( char ) zval_get_long ( tmp ) )"		2731581	0					
ANR	2732742	Callee	php_sprintf_appendchar		2731581	0					
ANR	2732743	Identifier	php_sprintf_appendchar		2731581	0					
ANR	2732744	ArgumentList	& result		2731581	1					
ANR	2732745	Argument	& result		2731581	0					
ANR	2732746	UnaryOperationExpression	& result		2731581	0					
ANR	2732747	UnaryOperator	&		2731581	0					
ANR	2732748	Identifier	result		2731581	1					
ANR	2732749	Argument	& outpos		2731581	1					
ANR	2732750	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732751	UnaryOperator	&		2731581	0					
ANR	2732752	Identifier	outpos		2731581	1					
ANR	2732753	Argument	( char ) zval_get_long ( tmp )		2731581	2					
ANR	2732754	CastExpression	( char ) zval_get_long ( tmp )		2731581	0					
ANR	2732755	CastTarget	char		2731581	0					
ANR	2732756	CallExpression	zval_get_long ( tmp )		2731581	1					
ANR	2732757	Callee	zval_get_long		2731581	0					
ANR	2732758	Identifier	zval_get_long		2731581	0					
ANR	2732759	ArgumentList	tmp		2731581	1					
ANR	2732760	Argument	tmp		2731581	0					
ANR	2732761	Identifier	tmp		2731581	0					
ANR	2732762	BreakStatement	break ;	614:5:16889:16894	2731581	18	True				
ANR	2732763	Label	case 'o' :	616:4:16901:16909	2731581	19	True				
ANR	2732764	ExpressionStatement	"php_sprintf_append2n ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , 3 , hexchars , expprec )"	617:5:16916:17056	2731581	20	True				
ANR	2732765	CallExpression	"php_sprintf_append2n ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , 3 , hexchars , expprec )"		2731581	0					
ANR	2732766	Callee	php_sprintf_append2n		2731581	0					
ANR	2732767	Identifier	php_sprintf_append2n		2731581	0					
ANR	2732768	ArgumentList	& result		2731581	1					
ANR	2732769	Argument	& result		2731581	0					
ANR	2732770	UnaryOperationExpression	& result		2731581	0					
ANR	2732771	UnaryOperator	&		2731581	0					
ANR	2732772	Identifier	result		2731581	1					
ANR	2732773	Argument	& outpos		2731581	1					
ANR	2732774	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732775	UnaryOperator	&		2731581	0					
ANR	2732776	Identifier	outpos		2731581	1					
ANR	2732777	Argument	zval_get_long ( tmp )		2731581	2					
ANR	2732778	CallExpression	zval_get_long ( tmp )		2731581	0					
ANR	2732779	Callee	zval_get_long		2731581	0					
ANR	2732780	Identifier	zval_get_long		2731581	0					
ANR	2732781	ArgumentList	tmp		2731581	1					
ANR	2732782	Argument	tmp		2731581	0					
ANR	2732783	Identifier	tmp		2731581	0					
ANR	2732784	Argument	width		2731581	3					
ANR	2732785	Identifier	width		2731581	0					
ANR	2732786	Argument	padding		2731581	4					
ANR	2732787	Identifier	padding		2731581	0					
ANR	2732788	Argument	alignment		2731581	5					
ANR	2732789	Identifier	alignment		2731581	0					
ANR	2732790	Argument	3		2731581	6					
ANR	2732791	PrimaryExpression	3		2731581	0					
ANR	2732792	Argument	hexchars		2731581	7					
ANR	2732793	Identifier	hexchars		2731581	0					
ANR	2732794	Argument	expprec		2731581	8					
ANR	2732795	Identifier	expprec		2731581	0					
ANR	2732796	BreakStatement	break ;	621:5:17063:17068	2731581	21	True				
ANR	2732797	Label	case 'x' :	623:4:17075:17083	2731581	22	True				
ANR	2732798	ExpressionStatement	"php_sprintf_append2n ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , 4 , hexchars , expprec )"	624:5:17090:17230	2731581	23	True				
ANR	2732799	CallExpression	"php_sprintf_append2n ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , 4 , hexchars , expprec )"		2731581	0					
ANR	2732800	Callee	php_sprintf_append2n		2731581	0					
ANR	2732801	Identifier	php_sprintf_append2n		2731581	0					
ANR	2732802	ArgumentList	& result		2731581	1					
ANR	2732803	Argument	& result		2731581	0					
ANR	2732804	UnaryOperationExpression	& result		2731581	0					
ANR	2732805	UnaryOperator	&		2731581	0					
ANR	2732806	Identifier	result		2731581	1					
ANR	2732807	Argument	& outpos		2731581	1					
ANR	2732808	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732809	UnaryOperator	&		2731581	0					
ANR	2732810	Identifier	outpos		2731581	1					
ANR	2732811	Argument	zval_get_long ( tmp )		2731581	2					
ANR	2732812	CallExpression	zval_get_long ( tmp )		2731581	0					
ANR	2732813	Callee	zval_get_long		2731581	0					
ANR	2732814	Identifier	zval_get_long		2731581	0					
ANR	2732815	ArgumentList	tmp		2731581	1					
ANR	2732816	Argument	tmp		2731581	0					
ANR	2732817	Identifier	tmp		2731581	0					
ANR	2732818	Argument	width		2731581	3					
ANR	2732819	Identifier	width		2731581	0					
ANR	2732820	Argument	padding		2731581	4					
ANR	2732821	Identifier	padding		2731581	0					
ANR	2732822	Argument	alignment		2731581	5					
ANR	2732823	Identifier	alignment		2731581	0					
ANR	2732824	Argument	4		2731581	6					
ANR	2732825	PrimaryExpression	4		2731581	0					
ANR	2732826	Argument	hexchars		2731581	7					
ANR	2732827	Identifier	hexchars		2731581	0					
ANR	2732828	Argument	expprec		2731581	8					
ANR	2732829	Identifier	expprec		2731581	0					
ANR	2732830	BreakStatement	break ;	628:5:17237:17242	2731581	24	True				
ANR	2732831	Label	case 'X' :	630:4:17249:17257	2731581	25	True				
ANR	2732832	ExpressionStatement	"php_sprintf_append2n ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , 4 , HEXCHARS , expprec )"	631:5:17264:17404	2731581	26	True				
ANR	2732833	CallExpression	"php_sprintf_append2n ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , 4 , HEXCHARS , expprec )"		2731581	0					
ANR	2732834	Callee	php_sprintf_append2n		2731581	0					
ANR	2732835	Identifier	php_sprintf_append2n		2731581	0					
ANR	2732836	ArgumentList	& result		2731581	1					
ANR	2732837	Argument	& result		2731581	0					
ANR	2732838	UnaryOperationExpression	& result		2731581	0					
ANR	2732839	UnaryOperator	&		2731581	0					
ANR	2732840	Identifier	result		2731581	1					
ANR	2732841	Argument	& outpos		2731581	1					
ANR	2732842	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732843	UnaryOperator	&		2731581	0					
ANR	2732844	Identifier	outpos		2731581	1					
ANR	2732845	Argument	zval_get_long ( tmp )		2731581	2					
ANR	2732846	CallExpression	zval_get_long ( tmp )		2731581	0					
ANR	2732847	Callee	zval_get_long		2731581	0					
ANR	2732848	Identifier	zval_get_long		2731581	0					
ANR	2732849	ArgumentList	tmp		2731581	1					
ANR	2732850	Argument	tmp		2731581	0					
ANR	2732851	Identifier	tmp		2731581	0					
ANR	2732852	Argument	width		2731581	3					
ANR	2732853	Identifier	width		2731581	0					
ANR	2732854	Argument	padding		2731581	4					
ANR	2732855	Identifier	padding		2731581	0					
ANR	2732856	Argument	alignment		2731581	5					
ANR	2732857	Identifier	alignment		2731581	0					
ANR	2732858	Argument	4		2731581	6					
ANR	2732859	PrimaryExpression	4		2731581	0					
ANR	2732860	Argument	HEXCHARS		2731581	7					
ANR	2732861	Identifier	HEXCHARS		2731581	0					
ANR	2732862	Argument	expprec		2731581	8					
ANR	2732863	Identifier	expprec		2731581	0					
ANR	2732864	BreakStatement	break ;	635:5:17411:17416	2731581	27	True				
ANR	2732865	Label	case 'b' :	637:4:17423:17431	2731581	28	True				
ANR	2732866	ExpressionStatement	"php_sprintf_append2n ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , 1 , hexchars , expprec )"	638:5:17438:17578	2731581	29	True				
ANR	2732867	CallExpression	"php_sprintf_append2n ( & result , & outpos , zval_get_long ( tmp ) , width , padding , alignment , 1 , hexchars , expprec )"		2731581	0					
ANR	2732868	Callee	php_sprintf_append2n		2731581	0					
ANR	2732869	Identifier	php_sprintf_append2n		2731581	0					
ANR	2732870	ArgumentList	& result		2731581	1					
ANR	2732871	Argument	& result		2731581	0					
ANR	2732872	UnaryOperationExpression	& result		2731581	0					
ANR	2732873	UnaryOperator	&		2731581	0					
ANR	2732874	Identifier	result		2731581	1					
ANR	2732875	Argument	& outpos		2731581	1					
ANR	2732876	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732877	UnaryOperator	&		2731581	0					
ANR	2732878	Identifier	outpos		2731581	1					
ANR	2732879	Argument	zval_get_long ( tmp )		2731581	2					
ANR	2732880	CallExpression	zval_get_long ( tmp )		2731581	0					
ANR	2732881	Callee	zval_get_long		2731581	0					
ANR	2732882	Identifier	zval_get_long		2731581	0					
ANR	2732883	ArgumentList	tmp		2731581	1					
ANR	2732884	Argument	tmp		2731581	0					
ANR	2732885	Identifier	tmp		2731581	0					
ANR	2732886	Argument	width		2731581	3					
ANR	2732887	Identifier	width		2731581	0					
ANR	2732888	Argument	padding		2731581	4					
ANR	2732889	Identifier	padding		2731581	0					
ANR	2732890	Argument	alignment		2731581	5					
ANR	2732891	Identifier	alignment		2731581	0					
ANR	2732892	Argument	1		2731581	6					
ANR	2732893	PrimaryExpression	1		2731581	0					
ANR	2732894	Argument	hexchars		2731581	7					
ANR	2732895	Identifier	hexchars		2731581	0					
ANR	2732896	Argument	expprec		2731581	8					
ANR	2732897	Identifier	expprec		2731581	0					
ANR	2732898	BreakStatement	break ;	642:5:17585:17590	2731581	30	True				
ANR	2732899	Label	case '%' :	644:4:17597:17605	2731581	31	True				
ANR	2732900	ExpressionStatement	"php_sprintf_appendchar ( & result , & outpos , '%' )"	645:5:17612:17657	2731581	32	True				
ANR	2732901	CallExpression	"php_sprintf_appendchar ( & result , & outpos , '%' )"		2731581	0					
ANR	2732902	Callee	php_sprintf_appendchar		2731581	0					
ANR	2732903	Identifier	php_sprintf_appendchar		2731581	0					
ANR	2732904	ArgumentList	& result		2731581	1					
ANR	2732905	Argument	& result		2731581	0					
ANR	2732906	UnaryOperationExpression	& result		2731581	0					
ANR	2732907	UnaryOperator	&		2731581	0					
ANR	2732908	Identifier	result		2731581	1					
ANR	2732909	Argument	& outpos		2731581	1					
ANR	2732910	UnaryOperationExpression	& outpos		2731581	0					
ANR	2732911	UnaryOperator	&		2731581	0					
ANR	2732912	Identifier	outpos		2731581	1					
ANR	2732913	Argument	'%'		2731581	2					
ANR	2732914	PrimaryExpression	'%'		2731581	0					
ANR	2732915	BreakStatement	break ;	647:5:17665:17670	2731581	33	True				
ANR	2732916	Label	default :	648:4:17676:17683	2731581	34	True				
ANR	2732917	Identifier	default		2731581	0					
ANR	2732918	BreakStatement	break ;	649:5:17690:17695	2731581	35	True				
ANR	2732919	ExpressionStatement	inpos ++	651:3:17705:17712	2731581	12	True				
ANR	2732920	PostIncDecOperationExpression	inpos ++		2731581	0					
ANR	2732921	Identifier	inpos		2731581	0					
ANR	2732922	IncDec	++		2731581	1					
ANR	2732923	IfStatement	if ( newargs )		2731581	18					
ANR	2732924	Condition	newargs	655:5:17727:17733	2731581	0	True				
ANR	2732925	Identifier	newargs		2731581	0					
ANR	2732926	CompoundStatement		269:14:6975:6975	2731581	1					
ANR	2732927	ExpressionStatement	efree ( newargs )	656:2:17740:17754	2731581	0	True				
ANR	2732928	CallExpression	efree ( newargs )		2731581	0					
ANR	2732929	Callee	efree		2731581	0					
ANR	2732930	Identifier	efree		2731581	0					
ANR	2732931	ArgumentList	newargs		2731581	1					
ANR	2732932	Argument	newargs		2731581	0					
ANR	2732933	Identifier	newargs		2731581	0					
ANR	2732934	ExpressionStatement	ZSTR_VAL ( result ) [ outpos ] = 0	660:1:17838:17864	2731581	19	True				
ANR	2732935	AssignmentExpression	ZSTR_VAL ( result ) [ outpos ] = 0		2731581	0		=			
ANR	2732936	ArrayIndexing	ZSTR_VAL ( result ) [ outpos ]		2731581	0					
ANR	2732937	CallExpression	ZSTR_VAL ( result )		2731581	0					
ANR	2732938	Callee	ZSTR_VAL		2731581	0					
ANR	2732939	Identifier	ZSTR_VAL		2731581	0					
ANR	2732940	ArgumentList	result		2731581	1					
ANR	2732941	Argument	result		2731581	0					
ANR	2732942	Identifier	result		2731581	0					
ANR	2732943	Identifier	outpos		2731581	1					
ANR	2732944	PrimaryExpression	0		2731581	1					
ANR	2732945	ExpressionStatement	ZSTR_LEN ( result ) = outpos	661:1:17867:17892	2731581	20	True				
ANR	2732946	AssignmentExpression	ZSTR_LEN ( result ) = outpos		2731581	0		=			
ANR	2732947	CallExpression	ZSTR_LEN ( result )		2731581	0					
ANR	2732948	Callee	ZSTR_LEN		2731581	0					
ANR	2732949	Identifier	ZSTR_LEN		2731581	0					
ANR	2732950	ArgumentList	result		2731581	1					
ANR	2732951	Argument	result		2731581	0					
ANR	2732952	Identifier	result		2731581	0					
ANR	2732953	Identifier	outpos		2731581	1					
ANR	2732954	ReturnStatement	return result ;	662:1:17895:17908	2731581	21	True				
ANR	2732955	Identifier	result		2731581	0					
ANR	2732956	ReturnType	static zend_string *		2731581	1					
ANR	2732957	Identifier	php_formatted_print		2731581	2					
ANR	2732958	ParameterList	"zend_execute_data * execute_data , int use_array , int format_offset"		2731581	3					
ANR	2732959	Parameter	zend_execute_data * execute_data	386:20:10693:10723	2731581	0	True				
ANR	2732960	ParameterType	zend_execute_data *		2731581	0					
ANR	2732961	Identifier	execute_data		2731581	1					
ANR	2732962	Parameter	int use_array	386:53:10726:10738	2731581	1	True				
ANR	2732963	ParameterType	int		2731581	0					
ANR	2732964	Identifier	use_array		2731581	1					
ANR	2732965	Parameter	int format_offset	386:68:10741:10757	2731581	2	True				
ANR	2732966	ParameterType	int		2731581	0					
ANR	2732967	Identifier	format_offset		2731581	1					
ANR	2732968	CFGEntryNode	ENTRY		2731581		True				
ANR	2732969	CFGExitNode	EXIT		2731581		True				
ANR	2732970	InfiniteForNode	true		2731581		True				
ANR	2732971	Symbol	precision		2731581						
ANR	2732972	Symbol	argnum		2731581						
ANR	2732973	Symbol	execute_data		2731581						
ANR	2732974	Symbol	zend_parse_parameters		2731581						
ANR	2732975	Symbol	* args		2731581						
ANR	2732976	Symbol	zval_get_double		2731581						
ANR	2732977	Symbol	tmp		2731581						
ANR	2732978	Symbol	adjusting		2731581						
ANR	2732979	Symbol	hexchars		2731581						
ANR	2732980	Symbol	format_len		2731581						
ANR	2732981	Symbol	ALIGN_RIGHT		2731581						
ANR	2732982	Symbol	isdigit		2731581						
ANR	2732983	Symbol	* ZSTR_VAL		2731581						
ANR	2732984	Symbol	zend_string_alloc		2731581						
ANR	2732985	Symbol	NULL		2731581						
ANR	2732986	Symbol	ZEND_NUM_ARGS		2731581						
ANR	2732987	Symbol	format		2731581						
ANR	2732988	Symbol	always_sign		2731581						
ANR	2732989	Symbol	ADJ_WIDTH		2731581						
ANR	2732990	Symbol	format_offset		2731581						
ANR	2732991	Symbol	str		2731581						
ANR	2732992	Symbol	size		2731581						
ANR	2732993	Symbol	* format		2731581						
ANR	2732994	Symbol	* outpos		2731581						
ANR	2732995	Symbol	zval_get_long		2731581						
ANR	2732996	Symbol	alignment		2731581						
ANR	2732997	Symbol	zv		2731581						
ANR	2732998	Symbol	isalpha		2731581						
ANR	2732999	Symbol	z_format		2731581						
ANR	2733000	Symbol	expprec		2731581						
ANR	2733001	Symbol	ADJ_PRECISION		2731581						
ANR	2733002	Symbol	* inpos		2731581						
ANR	2733003	Symbol	& outpos		2731581						
ANR	2733004	Symbol	* temppos		2731581						
ANR	2733005	Symbol	* format_offset		2731581						
ANR	2733006	Symbol	Z_STRLEN		2731581						
ANR	2733007	Symbol	use_array		2731581						
ANR	2733008	Symbol	currarg		2731581						
ANR	2733009	Symbol	& argc		2731581						
ANR	2733010	Symbol	result		2731581						
ANR	2733011	Symbol	E_WARNING		2731581						
ANR	2733012	Symbol	array		2731581						
ANR	2733013	Symbol	IS_ARRAY		2731581						
ANR	2733014	Symbol	& result		2731581						
ANR	2733015	Symbol	& inpos		2731581						
ANR	2733016	Symbol	outpos		2731581						
ANR	2733017	Symbol	Z_STRVAL		2731581						
ANR	2733018	Symbol	INT_MAX		2731581						
ANR	2733019	Symbol	Z_ARRVAL_P		2731581						
ANR	2733020	Symbol	ALIGN_LEFT		2731581						
ANR	2733021	Symbol	& args		2731581						
ANR	2733022	Symbol	isascii		2731581						
ANR	2733023	Symbol	argc		2731581						
ANR	2733024	Symbol	temppos		2731581						
ANR	2733025	Symbol	padding		2731581						
ANR	2733026	Symbol	zend_hash_num_elements		2731581						
ANR	2733027	Symbol	i		2731581						
ANR	2733028	Symbol	zval_get_string		2731581						
ANR	2733029	Symbol	Z_TYPE_P		2731581						
ANR	2733030	Symbol	FAILURE		2731581						
ANR	2733031	Symbol	ZSTR_VAL		2731581						
ANR	2733032	Symbol	args		2731581						
ANR	2733033	Symbol	inpos		2731581						
ANR	2733034	Symbol	width		2731581						
ANR	2733035	Symbol	ZSTR_LEN		2731581						
ANR	2733036	Symbol	newargs		2731581						
ANR	2733037	Symbol	HEXCHARS		2731581						
ANR	2733038	Symbol	safe_emalloc		2731581						
ANR	2733039	Symbol	php_sprintf_getnumber		2731581						
ANR	2733040	DeclStmt									
ANR	2733041	Decl							zend_string	zend_string *	result
ANR	2733042	DeclStmt									
ANR	2733043	Decl							zend_string	zend_string *	result
ANR	2733044	DeclStmt									
ANR	2733045	Decl							zend_string	zend_string *	result
ANR	2733046	DeclStmt									
ANR	2733047	Decl							size_t	size_t	rlen
ANR	2733048	DeclStmt									
ANR	2733049	Decl							zend_string	zend_string *	result
ANR	2733050	DeclStmt									
ANR	2733051	Decl							size_t	size_t	rlen
ANR	2733052	DeclStmt									
ANR	2733053	Decl							php_stream	php_stream *	stream
ANR	2733054	DeclStmt									
ANR	2733055	Decl							zval	zval *	arg1
ANR	2733056	DeclStmt									
ANR	2733057	Decl							zend_string	zend_string *	result
ANR	2733058	DeclStmt									
ANR	2733059	Decl							php_stream	php_stream *	stream
ANR	2733060	DeclStmt									
ANR	2733061	Decl							zval	zval *	arg1
ANR	2733062	DeclStmt									
ANR	2733063	Decl							zend_string	zend_string *	result
