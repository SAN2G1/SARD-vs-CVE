command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	519409	File	data/converged/CVE-2015-8617_php-src/ext_com_dotnet_com_saproxy.c								
ANR	519410	ClassDef	<unnamed>	39:8:1655:1961							
ANR	519411	DeclStmt									
ANR	519412	Decl							zend_object	zend_object	std
ANR	519413	DeclStmt									
ANR	519414	Decl							zval	zval *	zobj
ANR	519415	DeclStmt									
ANR	519416	Decl							php_com_dotnet_object	php_com_dotnet_object *	obj
ANR	519417	DeclStmt									
ANR	519418	Decl							LONG	LONG	dimensions
ANR	519419	DeclStmt									
ANR	519420	Decl							zval	zval *	indices
ANR	519421	DeclStmt									
ANR	519422	Decl									php_com_saproxy
ANR	519423	ClassDef	<unnamed>	53:8:1972:2130							
ANR	519424	DeclStmt									
ANR	519425	Decl							zend_object_iterator	zend_object_iterator	iter
ANR	519426	DeclStmt									
ANR	519427	Decl							zval	zval	proxy_obj
ANR	519428	DeclStmt									
ANR	519429	Decl							zval	zval	data
ANR	519430	DeclStmt									
ANR	519431	Decl							php_com_saproxy	php_com_saproxy *	proxy
ANR	519432	DeclStmt									
ANR	519433	Decl							LONG	LONG	key
ANR	519434	DeclStmt									
ANR	519435	Decl							LONG	LONG	imin
ANR	519436	Decl							LONG	LONG	imax
ANR	519437	DeclStmt									
ANR	519438	Decl							LONG	LONG *	indices
ANR	519439	DeclStmt									
ANR	519440	Decl									php_com_saproxy_iter
ANR	519441	Function	clone_indices	65:0:2187:2370							
ANR	519442	FunctionDef	"clone_indices (php_com_saproxy * dest , php_com_saproxy * src , int ndims)"		519441	0					
ANR	519443	CompoundStatement		66:0:2276:2370	519441	0					
ANR	519444	IdentifierDeclStatement	int i ;	67:1:2279:2284	519441	0	True				
ANR	519445	IdentifierDecl	i		519441	0					
ANR	519446	IdentifierDeclType	int		519441	0					
ANR	519447	Identifier	i		519441	1					
ANR	519448	ForStatement	for ( i = 0 ; i < ndims ; i ++ )		519441	1					
ANR	519449	ForInit	i = 0 ;	69:6:2293:2298	519441	0	True				
ANR	519450	AssignmentExpression	i = 0		519441	0		=			
ANR	519451	Identifier	i		519441	0					
ANR	519452	PrimaryExpression	0		519441	1					
ANR	519453	Condition	i < ndims	69:13:2300:2308	519441	1	True				
ANR	519454	RelationalExpression	i < ndims		519441	0		<			
ANR	519455	Identifier	i		519441	0					
ANR	519456	Identifier	ndims		519441	1					
ANR	519457	PostIncDecOperationExpression	i ++	69:24:2311:2313	519441	2	True				
ANR	519458	Identifier	i		519441	0					
ANR	519459	IncDec	++		519441	1					
ANR	519460	CompoundStatement		4:29:39:39	519441	3					
ANR	519461	ExpressionStatement	"ZVAL_DUP ( & dest -> indices [ i ] , & src -> indices [ i ] )"	70:2:2320:2365	519441	0	True				
ANR	519462	CallExpression	"ZVAL_DUP ( & dest -> indices [ i ] , & src -> indices [ i ] )"		519441	0					
ANR	519463	Callee	ZVAL_DUP		519441	0					
ANR	519464	Identifier	ZVAL_DUP		519441	0					
ANR	519465	ArgumentList	& dest -> indices [ i ]		519441	1					
ANR	519466	Argument	& dest -> indices [ i ]		519441	0					
ANR	519467	UnaryOperationExpression	& dest -> indices [ i ]		519441	0					
ANR	519468	UnaryOperator	&		519441	0					
ANR	519469	ArrayIndexing	dest -> indices [ i ]		519441	1					
ANR	519470	PtrMemberAccess	dest -> indices		519441	0					
ANR	519471	Identifier	dest		519441	0					
ANR	519472	Identifier	indices		519441	1					
ANR	519473	Identifier	i		519441	1					
ANR	519474	Argument	& src -> indices [ i ]		519441	1					
ANR	519475	UnaryOperationExpression	& src -> indices [ i ]		519441	0					
ANR	519476	UnaryOperator	&		519441	0					
ANR	519477	ArrayIndexing	src -> indices [ i ]		519441	1					
ANR	519478	PtrMemberAccess	src -> indices		519441	0					
ANR	519479	Identifier	src		519441	0					
ANR	519480	Identifier	indices		519441	1					
ANR	519481	Identifier	i		519441	1					
ANR	519482	ReturnType	static inline void		519441	1					
ANR	519483	Identifier	clone_indices		519441	2					
ANR	519484	ParameterList	"php_com_saproxy * dest , php_com_saproxy * src , int ndims"		519441	3					
ANR	519485	Parameter	php_com_saproxy * dest	65:33:2220:2240	519441	0	True				
ANR	519486	ParameterType	php_com_saproxy *		519441	0					
ANR	519487	Identifier	dest		519441	1					
ANR	519488	Parameter	php_com_saproxy * src	65:56:2243:2262	519441	1	True				
ANR	519489	ParameterType	php_com_saproxy *		519441	0					
ANR	519490	Identifier	src		519441	1					
ANR	519491	Parameter	int ndims	65:78:2265:2273	519441	2	True				
ANR	519492	ParameterType	int		519441	0					
ANR	519493	Identifier	ndims		519441	1					
ANR	519494	CFGEntryNode	ENTRY		519441		True				
ANR	519495	CFGExitNode	EXIT		519441		True				
ANR	519496	Symbol	ndims		519441						
ANR	519497	Symbol	src		519441						
ANR	519498	Symbol	* dest		519441						
ANR	519499	Symbol	dest -> indices		519441						
ANR	519500	Symbol	i		519441						
ANR	519501	Symbol	dest		519441						
ANR	519502	Symbol	* src		519441						
ANR	519503	Symbol	src -> indices		519441						
ANR	519504	Function	saproxy_property_read	74:0:2373:2578							
ANR	519505	FunctionDef	"saproxy_property_read (zval * object , zval * member , int type , void * * cahce_slot , zval * rv)"		519504	0					
ANR	519506	CompoundStatement		75:0:2475:2578	519504	0					
ANR	519507	ExpressionStatement	ZVAL_NULL ( rv )	76:1:2478:2491	519504	0	True				
ANR	519508	CallExpression	ZVAL_NULL ( rv )		519504	0					
ANR	519509	Callee	ZVAL_NULL		519504	0					
ANR	519510	Identifier	ZVAL_NULL		519504	0					
ANR	519511	ArgumentList	rv		519504	1					
ANR	519512	Argument	rv		519504	0					
ANR	519513	Identifier	rv		519504	0					
ANR	519514	ExpressionStatement	"php_com_throw_exception ( E_INVALIDARG , ""safearray has no properties"" )"	78:1:2495:2563	519504	1	True				
ANR	519515	CallExpression	"php_com_throw_exception ( E_INVALIDARG , ""safearray has no properties"" )"		519504	0					
ANR	519516	Callee	php_com_throw_exception		519504	0					
ANR	519517	Identifier	php_com_throw_exception		519504	0					
ANR	519518	ArgumentList	E_INVALIDARG		519504	1					
ANR	519519	Argument	E_INVALIDARG		519504	0					
ANR	519520	Identifier	E_INVALIDARG		519504	0					
ANR	519521	Argument	"""safearray has no properties"""		519504	1					
ANR	519522	PrimaryExpression	"""safearray has no properties"""		519504	0					
ANR	519523	ReturnStatement	return rv ;	80:1:2567:2576	519504	2	True				
ANR	519524	Identifier	rv		519504	0					
ANR	519525	ReturnType	static zval *		519504	1					
ANR	519526	Identifier	saproxy_property_read		519504	2					
ANR	519527	ParameterList	"zval * object , zval * member , int type , void * * cahce_slot , zval * rv"		519504	3					
ANR	519528	Parameter	zval * object	74:35:2408:2419	519504	0	True				
ANR	519529	ParameterType	zval *		519504	0					
ANR	519530	Identifier	object		519504	1					
ANR	519531	Parameter	zval * member	74:49:2422:2433	519504	1	True				
ANR	519532	ParameterType	zval *		519504	0					
ANR	519533	Identifier	member		519504	1					
ANR	519534	Parameter	int type	74:63:2436:2443	519504	2	True				
ANR	519535	ParameterType	int		519504	0					
ANR	519536	Identifier	type		519504	1					
ANR	519537	Parameter	void * * cahce_slot	74:73:2446:2462	519504	3	True				
ANR	519538	ParameterType	void * *		519504	0					
ANR	519539	Identifier	cahce_slot		519504	1					
ANR	519540	Parameter	zval * rv	74:92:2465:2472	519504	4	True				
ANR	519541	ParameterType	zval *		519504	0					
ANR	519542	Identifier	rv		519504	1					
ANR	519543	CFGEntryNode	ENTRY		519504		True				
ANR	519544	CFGExitNode	EXIT		519504		True				
ANR	519545	Symbol	cahce_slot		519504						
ANR	519546	Symbol	E_INVALIDARG		519504						
ANR	519547	Symbol	rv		519504						
ANR	519548	Symbol	member		519504						
ANR	519549	Symbol	type		519504						
ANR	519550	Symbol	object		519504						
ANR	519551	Function	saproxy_property_write	83:0:2581:2749							
ANR	519552	FunctionDef	"saproxy_property_write (zval * object , zval * member , zval * value , void * * cache_slot)"		519551	0					
ANR	519553	CompoundStatement		84:0:2676:2749	519551	0					
ANR	519554	ExpressionStatement	"php_com_throw_exception ( E_INVALIDARG , ""safearray has no properties"" )"	85:1:2679:2747	519551	0	True				
ANR	519555	CallExpression	"php_com_throw_exception ( E_INVALIDARG , ""safearray has no properties"" )"		519551	0					
ANR	519556	Callee	php_com_throw_exception		519551	0					
ANR	519557	Identifier	php_com_throw_exception		519551	0					
ANR	519558	ArgumentList	E_INVALIDARG		519551	1					
ANR	519559	Argument	E_INVALIDARG		519551	0					
ANR	519560	Identifier	E_INVALIDARG		519551	0					
ANR	519561	Argument	"""safearray has no properties"""		519551	1					
ANR	519562	PrimaryExpression	"""safearray has no properties"""		519551	0					
ANR	519563	ReturnType	static void		519551	1					
ANR	519564	Identifier	saproxy_property_write		519551	2					
ANR	519565	ParameterList	"zval * object , zval * member , zval * value , void * * cache_slot"		519551	3					
ANR	519566	Parameter	zval * object	83:35:2616:2627	519551	0	True				
ANR	519567	ParameterType	zval *		519551	0					
ANR	519568	Identifier	object		519551	1					
ANR	519569	Parameter	zval * member	83:49:2630:2641	519551	1	True				
ANR	519570	ParameterType	zval *		519551	0					
ANR	519571	Identifier	member		519551	1					
ANR	519572	Parameter	zval * value	83:63:2644:2654	519551	2	True				
ANR	519573	ParameterType	zval *		519551	0					
ANR	519574	Identifier	value		519551	1					
ANR	519575	Parameter	void * * cache_slot	83:76:2657:2673	519551	3	True				
ANR	519576	ParameterType	void * *		519551	0					
ANR	519577	Identifier	cache_slot		519551	1					
ANR	519578	CFGEntryNode	ENTRY		519551		True				
ANR	519579	CFGExitNode	EXIT		519551		True				
ANR	519580	Symbol	cache_slot		519551						
ANR	519581	Symbol	E_INVALIDARG		519551						
ANR	519582	Symbol	member		519551						
ANR	519583	Symbol	value		519551						
ANR	519584	Symbol	object		519551						
ANR	519585	Function	saproxy_read_dimension	88:0:2752:5556							
ANR	519586	FunctionDef	"saproxy_read_dimension (zval * object , zval * offset , int type , zval * rv)"		519585	0					
ANR	519587	CompoundStatement		89:0:2836:5556	519585	0					
ANR	519588	IdentifierDeclStatement	php_com_saproxy * proxy = SA_FETCH ( object ) ;	90:1:2839:2880	519585	0	True				
ANR	519589	IdentifierDecl	* proxy = SA_FETCH ( object )		519585	0					
ANR	519590	IdentifierDeclType	php_com_saproxy *		519585	0					
ANR	519591	Identifier	proxy		519585	1					
ANR	519592	AssignmentExpression	* proxy = SA_FETCH ( object )		519585	2		=			
ANR	519593	Identifier	proxy		519585	0					
ANR	519594	CallExpression	SA_FETCH ( object )		519585	1					
ANR	519595	Callee	SA_FETCH		519585	0					
ANR	519596	Identifier	SA_FETCH		519585	0					
ANR	519597	ArgumentList	object		519585	1					
ANR	519598	Argument	object		519585	0					
ANR	519599	Identifier	object		519585	0					
ANR	519600	IdentifierDeclStatement	"UINT dims , i ;"	91:1:2883:2895	519585	1	True				
ANR	519601	IdentifierDecl	dims		519585	0					
ANR	519602	IdentifierDeclType	UINT		519585	0					
ANR	519603	Identifier	dims		519585	1					
ANR	519604	IdentifierDecl	i		519585	1					
ANR	519605	IdentifierDeclType	UINT		519585	0					
ANR	519606	Identifier	i		519585	1					
ANR	519607	IdentifierDeclStatement	SAFEARRAY * sa ;	92:1:2898:2911	519585	2	True				
ANR	519608	IdentifierDecl	* sa		519585	0					
ANR	519609	IdentifierDeclType	SAFEARRAY *		519585	0					
ANR	519610	Identifier	sa		519585	1					
ANR	519611	IdentifierDeclStatement	"LONG ubound , lbound ;"	93:1:2914:2933	519585	3	True				
ANR	519612	IdentifierDecl	ubound		519585	0					
ANR	519613	IdentifierDeclType	LONG		519585	0					
ANR	519614	Identifier	ubound		519585	1					
ANR	519615	IdentifierDecl	lbound		519585	1					
ANR	519616	IdentifierDeclType	LONG		519585	0					
ANR	519617	Identifier	lbound		519585	1					
ANR	519618	IdentifierDeclStatement	HRESULT res ;	94:1:2936:2947	519585	4	True				
ANR	519619	IdentifierDecl	res		519585	0					
ANR	519620	IdentifierDeclType	HRESULT		519585	0					
ANR	519621	Identifier	res		519585	1					
ANR	519622	ExpressionStatement	ZVAL_NULL ( rv )	96:1:2951:2964	519585	5	True				
ANR	519623	CallExpression	ZVAL_NULL ( rv )		519585	0					
ANR	519624	Callee	ZVAL_NULL		519585	0					
ANR	519625	Identifier	ZVAL_NULL		519585	0					
ANR	519626	ArgumentList	rv		519585	1					
ANR	519627	Argument	rv		519585	0					
ANR	519628	Identifier	rv		519585	0					
ANR	519629	IfStatement	if ( V_VT ( & proxy -> obj -> v ) == VT_DISPATCH )		519585	6					
ANR	519630	Condition	V_VT ( & proxy -> obj -> v ) == VT_DISPATCH	98:5:2972:3006	519585	0	True				
ANR	519631	EqualityExpression	V_VT ( & proxy -> obj -> v ) == VT_DISPATCH		519585	0		==			
ANR	519632	CallExpression	V_VT ( & proxy -> obj -> v )		519585	0					
ANR	519633	Callee	V_VT		519585	0					
ANR	519634	Identifier	V_VT		519585	0					
ANR	519635	ArgumentList	& proxy -> obj -> v		519585	1					
ANR	519636	Argument	& proxy -> obj -> v		519585	0					
ANR	519637	UnaryOperationExpression	& proxy -> obj -> v		519585	0					
ANR	519638	UnaryOperator	&		519585	0					
ANR	519639	PtrMemberAccess	proxy -> obj -> v		519585	1					
ANR	519640	PtrMemberAccess	proxy -> obj		519585	0					
ANR	519641	Identifier	proxy		519585	0					
ANR	519642	Identifier	obj		519585	1					
ANR	519643	Identifier	v		519585	1					
ANR	519644	Identifier	VT_DISPATCH		519585	1					
ANR	519645	CompoundStatement		12:2:189:199	519585	1					
ANR	519646	IdentifierDeclStatement	VARIANT v ;	99:2:3013:3022	519585	0	True				
ANR	519647	IdentifierDecl	v		519585	0					
ANR	519648	IdentifierDeclType	VARIANT		519585	0					
ANR	519649	Identifier	v		519585	1					
ANR	519650	IdentifierDeclStatement	zval * args ;	100:2:3026:3036	519585	1	True				
ANR	519651	IdentifierDecl	* args		519585	0					
ANR	519652	IdentifierDeclType	zval *		519585	0					
ANR	519653	Identifier	args		519585	1					
ANR	519654	ExpressionStatement	"args = safe_emalloc ( proxy -> dimensions + 1 , sizeof ( zval ) , 0 )"	105:2:3163:3222	519585	2	True				
ANR	519655	AssignmentExpression	"args = safe_emalloc ( proxy -> dimensions + 1 , sizeof ( zval ) , 0 )"		519585	0		=			
ANR	519656	Identifier	args		519585	0					
ANR	519657	CallExpression	"safe_emalloc ( proxy -> dimensions + 1 , sizeof ( zval ) , 0 )"		519585	1					
ANR	519658	Callee	safe_emalloc		519585	0					
ANR	519659	Identifier	safe_emalloc		519585	0					
ANR	519660	ArgumentList	proxy -> dimensions + 1		519585	1					
ANR	519661	Argument	proxy -> dimensions + 1		519585	0					
ANR	519662	AdditiveExpression	proxy -> dimensions + 1		519585	0		+			
ANR	519663	PtrMemberAccess	proxy -> dimensions		519585	0					
ANR	519664	Identifier	proxy		519585	0					
ANR	519665	Identifier	dimensions		519585	1					
ANR	519666	PrimaryExpression	1		519585	1					
ANR	519667	Argument	sizeof ( zval )		519585	1					
ANR	519668	SizeofExpression	sizeof ( zval )		519585	0					
ANR	519669	Sizeof	sizeof		519585	0					
ANR	519670	SizeofOperand	zval		519585	1					
ANR	519671	Argument	0		519585	2					
ANR	519672	PrimaryExpression	0		519585	0					
ANR	519673	ForStatement	for ( i = 1 ; i < ( UINT ) proxy -> dimensions ; i ++ )		519585	3					
ANR	519674	ForInit	i = 1 ;	107:7:3232:3237	519585	0	True				
ANR	519675	AssignmentExpression	i = 1		519585	0		=			
ANR	519676	Identifier	i		519585	0					
ANR	519677	PrimaryExpression	1		519585	1					
ANR	519678	Condition	i < ( UINT ) proxy -> dimensions	107:14:3239:3266	519585	1	True				
ANR	519679	RelationalExpression	i < ( UINT ) proxy -> dimensions		519585	0		<			
ANR	519680	Identifier	i		519585	0					
ANR	519681	CastExpression	( UINT ) proxy -> dimensions		519585	1					
ANR	519682	CastTarget	UINT		519585	0					
ANR	519683	PtrMemberAccess	proxy -> dimensions		519585	1					
ANR	519684	Identifier	proxy		519585	0					
ANR	519685	Identifier	dimensions		519585	1					
ANR	519686	PostIncDecOperationExpression	i ++	107:44:3269:3271	519585	2	True				
ANR	519687	Identifier	i		519585	0					
ANR	519688	IncDec	++		519585	1					
ANR	519689	CompoundStatement		19:49:437:437	519585	3					
ANR	519690	ExpressionStatement	args [ i - 1 ] = proxy -> indices [ i ]	108:3:3279:3308	519585	0	True				
ANR	519691	AssignmentExpression	args [ i - 1 ] = proxy -> indices [ i ]		519585	0		=			
ANR	519692	ArrayIndexing	args [ i - 1 ]		519585	0					
ANR	519693	Identifier	args		519585	0					
ANR	519694	AdditiveExpression	i - 1		519585	1		-			
ANR	519695	Identifier	i		519585	0					
ANR	519696	PrimaryExpression	1		519585	1					
ANR	519697	ArrayIndexing	proxy -> indices [ i ]		519585	1					
ANR	519698	PtrMemberAccess	proxy -> indices		519585	0					
ANR	519699	Identifier	proxy		519585	0					
ANR	519700	Identifier	indices		519585	1					
ANR	519701	Identifier	i		519585	1					
ANR	519702	ExpressionStatement	"ZVAL_COPY_VALUE ( & args [ i - 1 ] , offset )"	110:2:3316:3351	519585	4	True				
ANR	519703	CallExpression	"ZVAL_COPY_VALUE ( & args [ i - 1 ] , offset )"		519585	0					
ANR	519704	Callee	ZVAL_COPY_VALUE		519585	0					
ANR	519705	Identifier	ZVAL_COPY_VALUE		519585	0					
ANR	519706	ArgumentList	& args [ i - 1 ]		519585	1					
ANR	519707	Argument	& args [ i - 1 ]		519585	0					
ANR	519708	UnaryOperationExpression	& args [ i - 1 ]		519585	0					
ANR	519709	UnaryOperator	&		519585	0					
ANR	519710	ArrayIndexing	args [ i - 1 ]		519585	1					
ANR	519711	Identifier	args		519585	0					
ANR	519712	AdditiveExpression	i - 1		519585	1		-			
ANR	519713	Identifier	i		519585	0					
ANR	519714	PrimaryExpression	1		519585	1					
ANR	519715	Argument	offset		519585	1					
ANR	519716	Identifier	offset		519585	0					
ANR	519717	ExpressionStatement	convert_to_string ( & proxy -> indices [ 0 ] )	112:2:3356:3393	519585	5	True				
ANR	519718	CallExpression	convert_to_string ( & proxy -> indices [ 0 ] )		519585	0					
ANR	519719	Callee	convert_to_string		519585	0					
ANR	519720	Identifier	convert_to_string		519585	0					
ANR	519721	ArgumentList	& proxy -> indices [ 0 ]		519585	1					
ANR	519722	Argument	& proxy -> indices [ 0 ]		519585	0					
ANR	519723	UnaryOperationExpression	& proxy -> indices [ 0 ]		519585	0					
ANR	519724	UnaryOperator	&		519585	0					
ANR	519725	ArrayIndexing	proxy -> indices [ 0 ]		519585	1					
ANR	519726	PtrMemberAccess	proxy -> indices		519585	0					
ANR	519727	Identifier	proxy		519585	0					
ANR	519728	Identifier	indices		519585	1					
ANR	519729	PrimaryExpression	0		519585	1					
ANR	519730	ExpressionStatement	VariantInit ( & v )	113:2:3397:3412	519585	6	True				
ANR	519731	CallExpression	VariantInit ( & v )		519585	0					
ANR	519732	Callee	VariantInit		519585	0					
ANR	519733	Identifier	VariantInit		519585	0					
ANR	519734	ArgumentList	& v		519585	1					
ANR	519735	Argument	& v		519585	0					
ANR	519736	UnaryOperationExpression	& v		519585	0					
ANR	519737	UnaryOperator	&		519585	0					
ANR	519738	Identifier	v		519585	1					
ANR	519739	ExpressionStatement	"res = php_com_do_invoke ( proxy -> obj , Z_STRVAL ( proxy -> indices [ 0 ] ) , Z_STRLEN ( proxy -> indices [ 0 ] ) , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , proxy -> dimensions , args , 0 )"	115:2:3417:3594	519585	7	True				
ANR	519740	AssignmentExpression	"res = php_com_do_invoke ( proxy -> obj , Z_STRVAL ( proxy -> indices [ 0 ] ) , Z_STRLEN ( proxy -> indices [ 0 ] ) , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , proxy -> dimensions , args , 0 )"		519585	0		=			
ANR	519741	Identifier	res		519585	0					
ANR	519742	CallExpression	"php_com_do_invoke ( proxy -> obj , Z_STRVAL ( proxy -> indices [ 0 ] ) , Z_STRLEN ( proxy -> indices [ 0 ] ) , DISPATCH_METHOD | DISPATCH_PROPERTYGET , & v , proxy -> dimensions , args , 0 )"		519585	1					
ANR	519743	Callee	php_com_do_invoke		519585	0					
ANR	519744	Identifier	php_com_do_invoke		519585	0					
ANR	519745	ArgumentList	proxy -> obj		519585	1					
ANR	519746	Argument	proxy -> obj		519585	0					
ANR	519747	PtrMemberAccess	proxy -> obj		519585	0					
ANR	519748	Identifier	proxy		519585	0					
ANR	519749	Identifier	obj		519585	1					
ANR	519750	Argument	Z_STRVAL ( proxy -> indices [ 0 ] )		519585	1					
ANR	519751	CallExpression	Z_STRVAL ( proxy -> indices [ 0 ] )		519585	0					
ANR	519752	Callee	Z_STRVAL		519585	0					
ANR	519753	Identifier	Z_STRVAL		519585	0					
ANR	519754	ArgumentList	proxy -> indices [ 0 ]		519585	1					
ANR	519755	Argument	proxy -> indices [ 0 ]		519585	0					
ANR	519756	ArrayIndexing	proxy -> indices [ 0 ]		519585	0					
ANR	519757	PtrMemberAccess	proxy -> indices		519585	0					
ANR	519758	Identifier	proxy		519585	0					
ANR	519759	Identifier	indices		519585	1					
ANR	519760	PrimaryExpression	0		519585	1					
ANR	519761	Argument	Z_STRLEN ( proxy -> indices [ 0 ] )		519585	2					
ANR	519762	CallExpression	Z_STRLEN ( proxy -> indices [ 0 ] )		519585	0					
ANR	519763	Callee	Z_STRLEN		519585	0					
ANR	519764	Identifier	Z_STRLEN		519585	0					
ANR	519765	ArgumentList	proxy -> indices [ 0 ]		519585	1					
ANR	519766	Argument	proxy -> indices [ 0 ]		519585	0					
ANR	519767	ArrayIndexing	proxy -> indices [ 0 ]		519585	0					
ANR	519768	PtrMemberAccess	proxy -> indices		519585	0					
ANR	519769	Identifier	proxy		519585	0					
ANR	519770	Identifier	indices		519585	1					
ANR	519771	PrimaryExpression	0		519585	1					
ANR	519772	Argument	DISPATCH_METHOD | DISPATCH_PROPERTYGET		519585	3					
ANR	519773	InclusiveOrExpression	DISPATCH_METHOD | DISPATCH_PROPERTYGET		519585	0		|			
ANR	519774	Identifier	DISPATCH_METHOD		519585	0					
ANR	519775	Identifier	DISPATCH_PROPERTYGET		519585	1					
ANR	519776	Argument	& v		519585	4					
ANR	519777	UnaryOperationExpression	& v		519585	0					
ANR	519778	UnaryOperator	&		519585	0					
ANR	519779	Identifier	v		519585	1					
ANR	519780	Argument	proxy -> dimensions		519585	5					
ANR	519781	PtrMemberAccess	proxy -> dimensions		519585	0					
ANR	519782	Identifier	proxy		519585	0					
ANR	519783	Identifier	dimensions		519585	1					
ANR	519784	Argument	args		519585	6					
ANR	519785	Identifier	args		519585	0					
ANR	519786	Argument	0		519585	7					
ANR	519787	PrimaryExpression	0		519585	0					
ANR	519788	IfStatement	if ( res == SUCCESS )		519585	8					
ANR	519789	Condition	res == SUCCESS	119:6:3603:3616	519585	0	True				
ANR	519790	EqualityExpression	res == SUCCESS		519585	0		==			
ANR	519791	Identifier	res		519585	0					
ANR	519792	Identifier	SUCCESS		519585	1					
ANR	519793	CompoundStatement		31:22:782:782	519585	1					
ANR	519794	ExpressionStatement	"php_com_zval_from_variant ( rv , & v , proxy -> obj -> code_page )"	120:3:3624:3680	519585	0	True				
ANR	519795	CallExpression	"php_com_zval_from_variant ( rv , & v , proxy -> obj -> code_page )"		519585	0					
ANR	519796	Callee	php_com_zval_from_variant		519585	0					
ANR	519797	Identifier	php_com_zval_from_variant		519585	0					
ANR	519798	ArgumentList	rv		519585	1					
ANR	519799	Argument	rv		519585	0					
ANR	519800	Identifier	rv		519585	0					
ANR	519801	Argument	& v		519585	1					
ANR	519802	UnaryOperationExpression	& v		519585	0					
ANR	519803	UnaryOperator	&		519585	0					
ANR	519804	Identifier	v		519585	1					
ANR	519805	Argument	proxy -> obj -> code_page		519585	2					
ANR	519806	PtrMemberAccess	proxy -> obj -> code_page		519585	0					
ANR	519807	PtrMemberAccess	proxy -> obj		519585	0					
ANR	519808	Identifier	proxy		519585	0					
ANR	519809	Identifier	obj		519585	1					
ANR	519810	Identifier	code_page		519585	1					
ANR	519811	ExpressionStatement	VariantClear ( & v )	121:3:3685:3701	519585	1	True				
ANR	519812	CallExpression	VariantClear ( & v )		519585	0					
ANR	519813	Callee	VariantClear		519585	0					
ANR	519814	Identifier	VariantClear		519585	0					
ANR	519815	ArgumentList	& v		519585	1					
ANR	519816	Argument	& v		519585	0					
ANR	519817	UnaryOperationExpression	& v		519585	0					
ANR	519818	UnaryOperator	&		519585	0					
ANR	519819	Identifier	v		519585	1					
ANR	519820	ElseStatement	else		519585	0					
ANR	519821	IfStatement	if ( res == DISP_E_BADPARAMCOUNT )		519585	0					
ANR	519822	Condition	res == DISP_E_BADPARAMCOUNT	122:13:3716:3742	519585	0	True				
ANR	519823	EqualityExpression	res == DISP_E_BADPARAMCOUNT		519585	0		==			
ANR	519824	Identifier	res		519585	0					
ANR	519825	Identifier	DISP_E_BADPARAMCOUNT		519585	1					
ANR	519826	CompoundStatement		34:42:908:908	519585	1					
ANR	519827	ExpressionStatement	"php_com_saproxy_create ( object , rv , offset )"	124:3:3780:3822	519585	0	True				
ANR	519828	CallExpression	"php_com_saproxy_create ( object , rv , offset )"		519585	0					
ANR	519829	Callee	php_com_saproxy_create		519585	0					
ANR	519830	Identifier	php_com_saproxy_create		519585	0					
ANR	519831	ArgumentList	object		519585	1					
ANR	519832	Argument	object		519585	0					
ANR	519833	Identifier	object		519585	0					
ANR	519834	Argument	rv		519585	1					
ANR	519835	Identifier	rv		519585	0					
ANR	519836	Argument	offset		519585	2					
ANR	519837	Identifier	offset		519585	0					
ANR	519838	ReturnStatement	return rv ;	127:2:3831:3840	519585	9	True				
ANR	519839	Identifier	rv		519585	0					
ANR	519840	ElseStatement	else		519585	0					
ANR	519841	IfStatement	if ( ! V_ISARRAY ( & proxy -> obj -> v ) )		519585	0					
ANR	519842	Condition	! V_ISARRAY ( & proxy -> obj -> v )	129:12:3855:3880	519585	0	True				
ANR	519843	UnaryOperationExpression	! V_ISARRAY ( & proxy -> obj -> v )		519585	0					
ANR	519844	UnaryOperator	!		519585	0					
ANR	519845	CallExpression	V_ISARRAY ( & proxy -> obj -> v )		519585	1					
ANR	519846	Callee	V_ISARRAY		519585	0					
ANR	519847	Identifier	V_ISARRAY		519585	0					
ANR	519848	ArgumentList	& proxy -> obj -> v		519585	1					
ANR	519849	Argument	& proxy -> obj -> v		519585	0					
ANR	519850	UnaryOperationExpression	& proxy -> obj -> v		519585	0					
ANR	519851	UnaryOperator	&		519585	0					
ANR	519852	PtrMemberAccess	proxy -> obj -> v		519585	1					
ANR	519853	PtrMemberAccess	proxy -> obj		519585	0					
ANR	519854	Identifier	proxy		519585	0					
ANR	519855	Identifier	obj		519585	1					
ANR	519856	Identifier	v		519585	1					
ANR	519857	CompoundStatement		41:40:1046:1046	519585	1					
ANR	519858	ExpressionStatement	"php_com_throw_exception ( E_INVALIDARG , ""invalid read from com proxy object"" )"	130:2:3887:3962	519585	0	True				
ANR	519859	CallExpression	"php_com_throw_exception ( E_INVALIDARG , ""invalid read from com proxy object"" )"		519585	0					
ANR	519860	Callee	php_com_throw_exception		519585	0					
ANR	519861	Identifier	php_com_throw_exception		519585	0					
ANR	519862	ArgumentList	E_INVALIDARG		519585	1					
ANR	519863	Argument	E_INVALIDARG		519585	0					
ANR	519864	Identifier	E_INVALIDARG		519585	0					
ANR	519865	Argument	"""invalid read from com proxy object"""		519585	1					
ANR	519866	PrimaryExpression	"""invalid read from com proxy object"""		519585	0					
ANR	519867	ReturnStatement	return rv ;	131:2:3966:3975	519585	1	True				
ANR	519868	Identifier	rv		519585	0					
ANR	519869	ExpressionStatement	convert_to_long ( offset )	137:1:4048:4071	519585	7	True				
ANR	519870	CallExpression	convert_to_long ( offset )		519585	0					
ANR	519871	Callee	convert_to_long		519585	0					
ANR	519872	Identifier	convert_to_long		519585	0					
ANR	519873	ArgumentList	offset		519585	1					
ANR	519874	Argument	offset		519585	0					
ANR	519875	Identifier	offset		519585	0					
ANR	519876	ExpressionStatement	sa = V_ARRAY ( & proxy -> obj -> v )	139:1:4075:4103	519585	8	True				
ANR	519877	AssignmentExpression	sa = V_ARRAY ( & proxy -> obj -> v )		519585	0		=			
ANR	519878	Identifier	sa		519585	0					
ANR	519879	CallExpression	V_ARRAY ( & proxy -> obj -> v )		519585	1					
ANR	519880	Callee	V_ARRAY		519585	0					
ANR	519881	Identifier	V_ARRAY		519585	0					
ANR	519882	ArgumentList	& proxy -> obj -> v		519585	1					
ANR	519883	Argument	& proxy -> obj -> v		519585	0					
ANR	519884	UnaryOperationExpression	& proxy -> obj -> v		519585	0					
ANR	519885	UnaryOperator	&		519585	0					
ANR	519886	PtrMemberAccess	proxy -> obj -> v		519585	1					
ANR	519887	PtrMemberAccess	proxy -> obj		519585	0					
ANR	519888	Identifier	proxy		519585	0					
ANR	519889	Identifier	obj		519585	1					
ANR	519890	Identifier	v		519585	1					
ANR	519891	ExpressionStatement	dims = SafeArrayGetDim ( sa )	140:1:4106:4132	519585	9	True				
ANR	519892	AssignmentExpression	dims = SafeArrayGetDim ( sa )		519585	0		=			
ANR	519893	Identifier	dims		519585	0					
ANR	519894	CallExpression	SafeArrayGetDim ( sa )		519585	1					
ANR	519895	Callee	SafeArrayGetDim		519585	0					
ANR	519896	Identifier	SafeArrayGetDim		519585	0					
ANR	519897	ArgumentList	sa		519585	1					
ANR	519898	Argument	sa		519585	0					
ANR	519899	Identifier	sa		519585	0					
ANR	519900	IfStatement	if ( ( UINT ) proxy -> dimensions >= dims )		519585	10					
ANR	519901	Condition	( UINT ) proxy -> dimensions >= dims	142:5:4140:4171	519585	0	True				
ANR	519902	RelationalExpression	( UINT ) proxy -> dimensions >= dims		519585	0		>=			
ANR	519903	CastExpression	( UINT ) proxy -> dimensions		519585	0					
ANR	519904	CastTarget	UINT		519585	0					
ANR	519905	PtrMemberAccess	proxy -> dimensions		519585	1					
ANR	519906	Identifier	proxy		519585	0					
ANR	519907	Identifier	dimensions		519585	1					
ANR	519908	Identifier	dims		519585	1					
ANR	519909	CompoundStatement		54:39:1337:1337	519585	1					
ANR	519910	ExpressionStatement	"php_com_throw_exception ( E_INVALIDARG , ""too many dimensions!"" )"	144:2:4206:4267	519585	0	True				
ANR	519911	CallExpression	"php_com_throw_exception ( E_INVALIDARG , ""too many dimensions!"" )"		519585	0					
ANR	519912	Callee	php_com_throw_exception		519585	0					
ANR	519913	Identifier	php_com_throw_exception		519585	0					
ANR	519914	ArgumentList	E_INVALIDARG		519585	1					
ANR	519915	Argument	E_INVALIDARG		519585	0					
ANR	519916	Identifier	E_INVALIDARG		519585	0					
ANR	519917	Argument	"""too many dimensions!"""		519585	1					
ANR	519918	PrimaryExpression	"""too many dimensions!"""		519585	0					
ANR	519919	ReturnStatement	return rv ;	145:2:4271:4280	519585	1	True				
ANR	519920	Identifier	rv		519585	0					
ANR	519921	ExpressionStatement	"SafeArrayGetLBound ( sa , proxy -> dimensions , & lbound )"	149:1:4307:4357	519585	11	True				
ANR	519922	CallExpression	"SafeArrayGetLBound ( sa , proxy -> dimensions , & lbound )"		519585	0					
ANR	519923	Callee	SafeArrayGetLBound		519585	0					
ANR	519924	Identifier	SafeArrayGetLBound		519585	0					
ANR	519925	ArgumentList	sa		519585	1					
ANR	519926	Argument	sa		519585	0					
ANR	519927	Identifier	sa		519585	0					
ANR	519928	Argument	proxy -> dimensions		519585	1					
ANR	519929	PtrMemberAccess	proxy -> dimensions		519585	0					
ANR	519930	Identifier	proxy		519585	0					
ANR	519931	Identifier	dimensions		519585	1					
ANR	519932	Argument	& lbound		519585	2					
ANR	519933	UnaryOperationExpression	& lbound		519585	0					
ANR	519934	UnaryOperator	&		519585	0					
ANR	519935	Identifier	lbound		519585	1					
ANR	519936	ExpressionStatement	"SafeArrayGetUBound ( sa , proxy -> dimensions , & ubound )"	150:1:4360:4410	519585	12	True				
ANR	519937	CallExpression	"SafeArrayGetUBound ( sa , proxy -> dimensions , & ubound )"		519585	0					
ANR	519938	Callee	SafeArrayGetUBound		519585	0					
ANR	519939	Identifier	SafeArrayGetUBound		519585	0					
ANR	519940	ArgumentList	sa		519585	1					
ANR	519941	Argument	sa		519585	0					
ANR	519942	Identifier	sa		519585	0					
ANR	519943	Argument	proxy -> dimensions		519585	1					
ANR	519944	PtrMemberAccess	proxy -> dimensions		519585	0					
ANR	519945	Identifier	proxy		519585	0					
ANR	519946	Identifier	dimensions		519585	1					
ANR	519947	Argument	& ubound		519585	2					
ANR	519948	UnaryOperationExpression	& ubound		519585	0					
ANR	519949	UnaryOperator	&		519585	0					
ANR	519950	Identifier	ubound		519585	1					
ANR	519951	IfStatement	if ( Z_LVAL_P ( offset ) < lbound || Z_LVAL_P ( offset ) > ubound )		519585	13					
ANR	519952	Condition	Z_LVAL_P ( offset ) < lbound || Z_LVAL_P ( offset ) > ubound	152:5:4418:4471	519585	0	True				
ANR	519953	OrExpression	Z_LVAL_P ( offset ) < lbound || Z_LVAL_P ( offset ) > ubound		519585	0		||			
ANR	519954	RelationalExpression	Z_LVAL_P ( offset ) < lbound		519585	0		<			
ANR	519955	CallExpression	Z_LVAL_P ( offset )		519585	0					
ANR	519956	Callee	Z_LVAL_P		519585	0					
ANR	519957	Identifier	Z_LVAL_P		519585	0					
ANR	519958	ArgumentList	offset		519585	1					
ANR	519959	Argument	offset		519585	0					
ANR	519960	Identifier	offset		519585	0					
ANR	519961	Identifier	lbound		519585	1					
ANR	519962	RelationalExpression	Z_LVAL_P ( offset ) > ubound		519585	1		>			
ANR	519963	CallExpression	Z_LVAL_P ( offset )		519585	0					
ANR	519964	Callee	Z_LVAL_P		519585	0					
ANR	519965	Identifier	Z_LVAL_P		519585	0					
ANR	519966	ArgumentList	offset		519585	1					
ANR	519967	Argument	offset		519585	0					
ANR	519968	Identifier	offset		519585	0					
ANR	519969	Identifier	ubound		519585	1					
ANR	519970	CompoundStatement		64:61:1637:1637	519585	1					
ANR	519971	ExpressionStatement	"php_com_throw_exception ( DISP_E_BADINDEX , ""index out of bounds"" )"	153:2:4478:4541	519585	0	True				
ANR	519972	CallExpression	"php_com_throw_exception ( DISP_E_BADINDEX , ""index out of bounds"" )"		519585	0					
ANR	519973	Callee	php_com_throw_exception		519585	0					
ANR	519974	Identifier	php_com_throw_exception		519585	0					
ANR	519975	ArgumentList	DISP_E_BADINDEX		519585	1					
ANR	519976	Argument	DISP_E_BADINDEX		519585	0					
ANR	519977	Identifier	DISP_E_BADINDEX		519585	0					
ANR	519978	Argument	"""index out of bounds"""		519585	1					
ANR	519979	PrimaryExpression	"""index out of bounds"""		519585	0					
ANR	519980	ReturnStatement	return rv ;	154:2:4545:4554	519585	1	True				
ANR	519981	Identifier	rv		519585	0					
ANR	519982	IfStatement	if ( dims - 1 == proxy -> dimensions )		519585	14					
ANR	519983	Condition	dims - 1 == proxy -> dimensions	157:5:4565:4593	519585	0	True				
ANR	519984	EqualityExpression	dims - 1 == proxy -> dimensions		519585	0		==			
ANR	519985	AdditiveExpression	dims - 1		519585	0		-			
ANR	519986	Identifier	dims		519585	0					
ANR	519987	PrimaryExpression	1		519585	1					
ANR	519988	PtrMemberAccess	proxy -> dimensions		519585	1					
ANR	519989	Identifier	proxy		519585	0					
ANR	519990	Identifier	dimensions		519585	1					
ANR	519991	CompoundStatement		72:2:1794:1803	519585	1					
ANR	519992	IdentifierDeclStatement	LONG * indices ;	158:2:4600:4613	519585	0	True				
ANR	519993	IdentifierDecl	* indices		519585	0					
ANR	519994	IdentifierDeclType	LONG *		519585	0					
ANR	519995	Identifier	indices		519585	1					
ANR	519996	IdentifierDeclStatement	VARTYPE vt ;	159:2:4617:4627	519585	1	True				
ANR	519997	IdentifierDecl	vt		519585	0					
ANR	519998	IdentifierDeclType	VARTYPE		519585	0					
ANR	519999	Identifier	vt		519585	1					
ANR	520000	IdentifierDeclStatement	VARIANT v ;	160:2:4631:4640	519585	2	True				
ANR	520001	IdentifierDecl	v		519585	0					
ANR	520002	IdentifierDeclType	VARIANT		519585	0					
ANR	520003	Identifier	v		519585	1					
ANR	520004	ExpressionStatement	VariantInit ( & v )	162:2:4645:4660	519585	3	True				
ANR	520005	CallExpression	VariantInit ( & v )		519585	0					
ANR	520006	Callee	VariantInit		519585	0					
ANR	520007	Identifier	VariantInit		519585	0					
ANR	520008	ArgumentList	& v		519585	1					
ANR	520009	Argument	& v		519585	0					
ANR	520010	UnaryOperationExpression	& v		519585	0					
ANR	520011	UnaryOperator	&		519585	0					
ANR	520012	Identifier	v		519585	1					
ANR	520013	ExpressionStatement	"indices = safe_emalloc ( dims , sizeof ( LONG ) , 0 )"	165:2:4700:4745	519585	4	True				
ANR	520014	AssignmentExpression	"indices = safe_emalloc ( dims , sizeof ( LONG ) , 0 )"		519585	0		=			
ANR	520015	Identifier	indices		519585	0					
ANR	520016	CallExpression	"safe_emalloc ( dims , sizeof ( LONG ) , 0 )"		519585	1					
ANR	520017	Callee	safe_emalloc		519585	0					
ANR	520018	Identifier	safe_emalloc		519585	0					
ANR	520019	ArgumentList	dims		519585	1					
ANR	520020	Argument	dims		519585	0					
ANR	520021	Identifier	dims		519585	0					
ANR	520022	Argument	sizeof ( LONG )		519585	1					
ANR	520023	SizeofExpression	sizeof ( LONG )		519585	0					
ANR	520024	Sizeof	sizeof		519585	0					
ANR	520025	SizeofOperand	LONG		519585	1					
ANR	520026	Argument	0		519585	2					
ANR	520027	PrimaryExpression	0		519585	0					
ANR	520028	ForStatement	for ( i = 0 ; i < dims ; i ++ )		519585	5					
ANR	520029	ForInit	i = 0 ;	168:7:4787:4792	519585	0	True				
ANR	520030	AssignmentExpression	i = 0		519585	0		=			
ANR	520031	Identifier	i		519585	0					
ANR	520032	PrimaryExpression	0		519585	1					
ANR	520033	Condition	i < dims	168:14:4794:4801	519585	1	True				
ANR	520034	RelationalExpression	i < dims		519585	0		<			
ANR	520035	Identifier	i		519585	0					
ANR	520036	Identifier	dims		519585	1					
ANR	520037	PostIncDecOperationExpression	i ++	168:24:4804:4806	519585	2	True				
ANR	520038	Identifier	i		519585	0					
ANR	520039	IncDec	++		519585	1					
ANR	520040	CompoundStatement		80:29:1972:1972	519585	3					
ANR	520041	ExpressionStatement	convert_to_long ( & proxy -> indices [ i ] )	169:3:4814:4849	519585	0	True				
ANR	520042	CallExpression	convert_to_long ( & proxy -> indices [ i ] )		519585	0					
ANR	520043	Callee	convert_to_long		519585	0					
ANR	520044	Identifier	convert_to_long		519585	0					
ANR	520045	ArgumentList	& proxy -> indices [ i ]		519585	1					
ANR	520046	Argument	& proxy -> indices [ i ]		519585	0					
ANR	520047	UnaryOperationExpression	& proxy -> indices [ i ]		519585	0					
ANR	520048	UnaryOperator	&		519585	0					
ANR	520049	ArrayIndexing	proxy -> indices [ i ]		519585	1					
ANR	520050	PtrMemberAccess	proxy -> indices		519585	0					
ANR	520051	Identifier	proxy		519585	0					
ANR	520052	Identifier	indices		519585	1					
ANR	520053	Identifier	i		519585	1					
ANR	520054	ExpressionStatement	indices [ i ] = ( LONG ) Z_LVAL ( proxy -> indices [ i ] )	170:3:4854:4898	519585	1	True				
ANR	520055	AssignmentExpression	indices [ i ] = ( LONG ) Z_LVAL ( proxy -> indices [ i ] )		519585	0		=			
ANR	520056	ArrayIndexing	indices [ i ]		519585	0					
ANR	520057	Identifier	indices		519585	0					
ANR	520058	Identifier	i		519585	1					
ANR	520059	CastExpression	( LONG ) Z_LVAL ( proxy -> indices [ i ] )		519585	1					
ANR	520060	CastTarget	LONG		519585	0					
ANR	520061	CallExpression	Z_LVAL ( proxy -> indices [ i ] )		519585	1					
ANR	520062	Callee	Z_LVAL		519585	0					
ANR	520063	Identifier	Z_LVAL		519585	0					
ANR	520064	ArgumentList	proxy -> indices [ i ]		519585	1					
ANR	520065	Argument	proxy -> indices [ i ]		519585	0					
ANR	520066	ArrayIndexing	proxy -> indices [ i ]		519585	0					
ANR	520067	PtrMemberAccess	proxy -> indices		519585	0					
ANR	520068	Identifier	proxy		519585	0					
ANR	520069	Identifier	indices		519585	1					
ANR	520070	Identifier	i		519585	1					
ANR	520071	ExpressionStatement	indices [ dims - 1 ] = ( LONG ) Z_LVAL_P ( offset )	174:2:4939:4979	519585	6	True				
ANR	520072	AssignmentExpression	indices [ dims - 1 ] = ( LONG ) Z_LVAL_P ( offset )		519585	0		=			
ANR	520073	ArrayIndexing	indices [ dims - 1 ]		519585	0					
ANR	520074	Identifier	indices		519585	0					
ANR	520075	AdditiveExpression	dims - 1		519585	1		-			
ANR	520076	Identifier	dims		519585	0					
ANR	520077	PrimaryExpression	1		519585	1					
ANR	520078	CastExpression	( LONG ) Z_LVAL_P ( offset )		519585	1					
ANR	520079	CastTarget	LONG		519585	0					
ANR	520080	CallExpression	Z_LVAL_P ( offset )		519585	1					
ANR	520081	Callee	Z_LVAL_P		519585	0					
ANR	520082	Identifier	Z_LVAL_P		519585	0					
ANR	520083	ArgumentList	offset		519585	1					
ANR	520084	Argument	offset		519585	0					
ANR	520085	Identifier	offset		519585	0					
ANR	520086	IfStatement	"if ( FAILED ( SafeArrayGetVartype ( sa , & vt ) ) || vt == VT_EMPTY )"		519585	7					
ANR	520087	Condition	"FAILED ( SafeArrayGetVartype ( sa , & vt ) ) || vt == VT_EMPTY"	177:6:5016:5069	519585	0	True				
ANR	520088	OrExpression	"FAILED ( SafeArrayGetVartype ( sa , & vt ) ) || vt == VT_EMPTY"		519585	0		||			
ANR	520089	CallExpression	"FAILED ( SafeArrayGetVartype ( sa , & vt ) )"		519585	0					
ANR	520090	Callee	FAILED		519585	0					
ANR	520091	Identifier	FAILED		519585	0					
ANR	520092	ArgumentList	"SafeArrayGetVartype ( sa , & vt )"		519585	1					
ANR	520093	Argument	"SafeArrayGetVartype ( sa , & vt )"		519585	0					
ANR	520094	CallExpression	"SafeArrayGetVartype ( sa , & vt )"		519585	0					
ANR	520095	Callee	SafeArrayGetVartype		519585	0					
ANR	520096	Identifier	SafeArrayGetVartype		519585	0					
ANR	520097	ArgumentList	sa		519585	1					
ANR	520098	Argument	sa		519585	0					
ANR	520099	Identifier	sa		519585	0					
ANR	520100	Argument	& vt		519585	1					
ANR	520101	UnaryOperationExpression	& vt		519585	0					
ANR	520102	UnaryOperator	&		519585	0					
ANR	520103	Identifier	vt		519585	1					
ANR	520104	EqualityExpression	vt == VT_EMPTY		519585	1		==			
ANR	520105	Identifier	vt		519585	0					
ANR	520106	Identifier	VT_EMPTY		519585	1					
ANR	520107	CompoundStatement		89:62:2235:2235	519585	1					
ANR	520108	ExpressionStatement	vt = V_VT ( & proxy -> obj -> v ) & ~VT_ARRAY	178:3:5077:5114	519585	0	True				
ANR	520109	AssignmentExpression	vt = V_VT ( & proxy -> obj -> v ) & ~VT_ARRAY		519585	0		=			
ANR	520110	Identifier	vt		519585	0					
ANR	520111	BitAndExpression	V_VT ( & proxy -> obj -> v ) & ~VT_ARRAY		519585	1		&			
ANR	520112	CallExpression	V_VT ( & proxy -> obj -> v )		519585	0					
ANR	520113	Callee	V_VT		519585	0					
ANR	520114	Identifier	V_VT		519585	0					
ANR	520115	ArgumentList	& proxy -> obj -> v		519585	1					
ANR	520116	Argument	& proxy -> obj -> v		519585	0					
ANR	520117	UnaryOperationExpression	& proxy -> obj -> v		519585	0					
ANR	520118	UnaryOperator	&		519585	0					
ANR	520119	PtrMemberAccess	proxy -> obj -> v		519585	1					
ANR	520120	PtrMemberAccess	proxy -> obj		519585	0					
ANR	520121	Identifier	proxy		519585	0					
ANR	520122	Identifier	obj		519585	1					
ANR	520123	Identifier	v		519585	1					
ANR	520124	Identifier	~VT_ARRAY		519585	1					
ANR	520125	IfStatement	if ( vt == VT_VARIANT )		519585	8					
ANR	520126	Condition	vt == VT_VARIANT	181:6:5127:5142	519585	0	True				
ANR	520127	EqualityExpression	vt == VT_VARIANT		519585	0		==			
ANR	520128	Identifier	vt		519585	0					
ANR	520129	Identifier	VT_VARIANT		519585	1					
ANR	520130	CompoundStatement		93:24:2308:2308	519585	1					
ANR	520131	ExpressionStatement	"res = SafeArrayGetElement ( sa , indices , & v )"	182:3:5150:5192	519585	0	True				
ANR	520132	AssignmentExpression	"res = SafeArrayGetElement ( sa , indices , & v )"		519585	0		=			
ANR	520133	Identifier	res		519585	0					
ANR	520134	CallExpression	"SafeArrayGetElement ( sa , indices , & v )"		519585	1					
ANR	520135	Callee	SafeArrayGetElement		519585	0					
ANR	520136	Identifier	SafeArrayGetElement		519585	0					
ANR	520137	ArgumentList	sa		519585	1					
ANR	520138	Argument	sa		519585	0					
ANR	520139	Identifier	sa		519585	0					
ANR	520140	Argument	indices		519585	1					
ANR	520141	Identifier	indices		519585	0					
ANR	520142	Argument	& v		519585	2					
ANR	520143	UnaryOperationExpression	& v		519585	0					
ANR	520144	UnaryOperator	&		519585	0					
ANR	520145	Identifier	v		519585	1					
ANR	520146	ElseStatement	else		519585	0					
ANR	520147	CompoundStatement		95:9:2366:2366	519585	0					
ANR	520148	ExpressionStatement	V_VT ( & v ) = vt	184:3:5208:5221	519585	0	True				
ANR	520149	AssignmentExpression	V_VT ( & v ) = vt		519585	0		=			
ANR	520150	CallExpression	V_VT ( & v )		519585	0					
ANR	520151	Callee	V_VT		519585	0					
ANR	520152	Identifier	V_VT		519585	0					
ANR	520153	ArgumentList	& v		519585	1					
ANR	520154	Argument	& v		519585	0					
ANR	520155	UnaryOperationExpression	& v		519585	0					
ANR	520156	UnaryOperator	&		519585	0					
ANR	520157	Identifier	v		519585	1					
ANR	520158	Identifier	vt		519585	1					
ANR	520159	ExpressionStatement	"res = SafeArrayGetElement ( sa , indices , & v . lVal )"	185:3:5226:5273	519585	1	True				
ANR	520160	AssignmentExpression	"res = SafeArrayGetElement ( sa , indices , & v . lVal )"		519585	0		=			
ANR	520161	Identifier	res		519585	0					
ANR	520162	CallExpression	"SafeArrayGetElement ( sa , indices , & v . lVal )"		519585	1					
ANR	520163	Callee	SafeArrayGetElement		519585	0					
ANR	520164	Identifier	SafeArrayGetElement		519585	0					
ANR	520165	ArgumentList	sa		519585	1					
ANR	520166	Argument	sa		519585	0					
ANR	520167	Identifier	sa		519585	0					
ANR	520168	Argument	indices		519585	1					
ANR	520169	Identifier	indices		519585	0					
ANR	520170	Argument	& v . lVal		519585	2					
ANR	520171	UnaryOperationExpression	& v . lVal		519585	0					
ANR	520172	UnaryOperator	&		519585	0					
ANR	520173	MemberAccess	v . lVal		519585	1					
ANR	520174	Identifier	v		519585	0					
ANR	520175	Identifier	lVal		519585	1					
ANR	520176	ExpressionStatement	efree ( indices )	188:2:5282:5296	519585	9	True				
ANR	520177	CallExpression	efree ( indices )		519585	0					
ANR	520178	Callee	efree		519585	0					
ANR	520179	Identifier	efree		519585	0					
ANR	520180	ArgumentList	indices		519585	1					
ANR	520181	Argument	indices		519585	0					
ANR	520182	Identifier	indices		519585	0					
ANR	520183	IfStatement	if ( SUCCEEDED ( res ) )		519585	10					
ANR	520184	Condition	SUCCEEDED ( res )	190:6:5305:5318	519585	0	True				
ANR	520185	CallExpression	SUCCEEDED ( res )		519585	0					
ANR	520186	Callee	SUCCEEDED		519585	0					
ANR	520187	Identifier	SUCCEEDED		519585	0					
ANR	520188	ArgumentList	res		519585	1					
ANR	520189	Argument	res		519585	0					
ANR	520190	Identifier	res		519585	0					
ANR	520191	CompoundStatement		102:22:2484:2484	519585	1					
ANR	520192	ExpressionStatement	"php_com_wrap_variant ( rv , & v , proxy -> obj -> code_page )"	191:3:5326:5377	519585	0	True				
ANR	520193	CallExpression	"php_com_wrap_variant ( rv , & v , proxy -> obj -> code_page )"		519585	0					
ANR	520194	Callee	php_com_wrap_variant		519585	0					
ANR	520195	Identifier	php_com_wrap_variant		519585	0					
ANR	520196	ArgumentList	rv		519585	1					
ANR	520197	Argument	rv		519585	0					
ANR	520198	Identifier	rv		519585	0					
ANR	520199	Argument	& v		519585	1					
ANR	520200	UnaryOperationExpression	& v		519585	0					
ANR	520201	UnaryOperator	&		519585	0					
ANR	520202	Identifier	v		519585	1					
ANR	520203	Argument	proxy -> obj -> code_page		519585	2					
ANR	520204	PtrMemberAccess	proxy -> obj -> code_page		519585	0					
ANR	520205	PtrMemberAccess	proxy -> obj		519585	0					
ANR	520206	Identifier	proxy		519585	0					
ANR	520207	Identifier	obj		519585	1					
ANR	520208	Identifier	code_page		519585	1					
ANR	520209	ElseStatement	else		519585	0					
ANR	520210	CompoundStatement		104:9:2551:2551	519585	0					
ANR	520211	ExpressionStatement	"php_com_throw_exception ( res , NULL )"	193:3:5393:5427	519585	0	True				
ANR	520212	CallExpression	"php_com_throw_exception ( res , NULL )"		519585	0					
ANR	520213	Callee	php_com_throw_exception		519585	0					
ANR	520214	Identifier	php_com_throw_exception		519585	0					
ANR	520215	ArgumentList	res		519585	1					
ANR	520216	Argument	res		519585	0					
ANR	520217	Identifier	res		519585	0					
ANR	520218	Argument	NULL		519585	1					
ANR	520219	Identifier	NULL		519585	0					
ANR	520220	ExpressionStatement	VariantClear ( & v )	196:2:5436:5452	519585	11	True				
ANR	520221	CallExpression	VariantClear ( & v )		519585	0					
ANR	520222	Callee	VariantClear		519585	0					
ANR	520223	Identifier	VariantClear		519585	0					
ANR	520224	ArgumentList	& v		519585	1					
ANR	520225	Argument	& v		519585	0					
ANR	520226	UnaryOperationExpression	& v		519585	0					
ANR	520227	UnaryOperator	&		519585	0					
ANR	520228	Identifier	v		519585	1					
ANR	520229	ElseStatement	else		519585	0					
ANR	520230	CompoundStatement		110:8:2626:2626	519585	0					
ANR	520231	ExpressionStatement	"php_com_saproxy_create ( object , rv , offset )"	200:2:5496:5538	519585	0	True				
ANR	520232	CallExpression	"php_com_saproxy_create ( object , rv , offset )"		519585	0					
ANR	520233	Callee	php_com_saproxy_create		519585	0					
ANR	520234	Identifier	php_com_saproxy_create		519585	0					
ANR	520235	ArgumentList	object		519585	1					
ANR	520236	Argument	object		519585	0					
ANR	520237	Identifier	object		519585	0					
ANR	520238	Argument	rv		519585	1					
ANR	520239	Identifier	rv		519585	0					
ANR	520240	Argument	offset		519585	2					
ANR	520241	Identifier	offset		519585	0					
ANR	520242	ReturnStatement	return rv ;	203:1:5545:5554	519585	15	True				
ANR	520243	Identifier	rv		519585	0					
ANR	520244	ReturnType	static zval *		519585	1					
ANR	520245	Identifier	saproxy_read_dimension		519585	2					
ANR	520246	ParameterList	"zval * object , zval * offset , int type , zval * rv"		519585	3					
ANR	520247	Parameter	zval * object	88:36:2788:2799	519585	0	True				
ANR	520248	ParameterType	zval *		519585	0					
ANR	520249	Identifier	object		519585	1					
ANR	520250	Parameter	zval * offset	88:50:2802:2813	519585	1	True				
ANR	520251	ParameterType	zval *		519585	0					
ANR	520252	Identifier	offset		519585	1					
ANR	520253	Parameter	int type	88:64:2816:2823	519585	2	True				
ANR	520254	ParameterType	int		519585	0					
ANR	520255	Identifier	type		519585	1					
ANR	520256	Parameter	zval * rv	88:74:2826:2833	519585	3	True				
ANR	520257	ParameterType	zval *		519585	0					
ANR	520258	Identifier	rv		519585	1					
ANR	520259	CFGEntryNode	ENTRY		519585		True				
ANR	520260	CFGExitNode	EXIT		519585		True				
ANR	520261	Symbol	* indices		519585						
ANR	520262	Symbol	Z_LVAL		519585						
ANR	520263	Symbol	* proxy -> obj		519585						
ANR	520264	Symbol	proxy -> indices		519585						
ANR	520265	Symbol	type		519585						
ANR	520266	Symbol	proxy -> obj		519585						
ANR	520267	Symbol	* args		519585						
ANR	520268	Symbol	& v . lVal		519585						
ANR	520269	Symbol	FAILED		519585						
ANR	520270	Symbol	php_com_do_invoke		519585						
ANR	520271	Symbol	& ubound		519585						
ANR	520272	Symbol	res		519585						
ANR	520273	Symbol	& proxy -> obj -> v		519585						
ANR	520274	Symbol	* * proxy		519585						
ANR	520275	Symbol	NULL		519585						
ANR	520276	Symbol	offset		519585						
ANR	520277	Symbol	proxy -> dimensions		519585						
ANR	520278	Symbol	VT_DISPATCH		519585						
ANR	520279	Symbol	* proxy -> indices		519585						
ANR	520280	Symbol	DISP_E_BADINDEX		519585						
ANR	520281	Symbol	proxy		519585						
ANR	520282	Symbol	SUCCEEDED		519585						
ANR	520283	Symbol	* proxy		519585						
ANR	520284	Symbol	* dims		519585						
ANR	520285	Symbol	V_ARRAY		519585						
ANR	520286	Symbol	vt		519585						
ANR	520287	Symbol	object		519585						
ANR	520288	Symbol	~VT_ARRAY		519585						
ANR	520289	Symbol	E_INVALIDARG		519585						
ANR	520290	Symbol	rv		519585						
ANR	520291	Symbol	dims		519585						
ANR	520292	Symbol	proxy -> obj -> code_page		519585						
ANR	520293	Symbol	Z_STRLEN		519585						
ANR	520294	Symbol	SafeArrayGetVartype		519585						
ANR	520295	Symbol	sa		519585						
ANR	520296	Symbol	VT_EMPTY		519585						
ANR	520297	Symbol	& lbound		519585						
ANR	520298	Symbol	SafeArrayGetDim		519585						
ANR	520299	Symbol	Z_STRVAL		519585						
ANR	520300	Symbol	SUCCESS		519585						
ANR	520301	Symbol	SA_FETCH		519585						
ANR	520302	Symbol	i		519585						
ANR	520303	Symbol	ubound		519585						
ANR	520304	Symbol	& vt		519585						
ANR	520305	Symbol	SafeArrayGetElement		519585						
ANR	520306	Symbol	V_VT		519585						
ANR	520307	Symbol	Z_LVAL_P		519585						
ANR	520308	Symbol	args		519585						
ANR	520309	Symbol	DISPATCH_METHOD		519585						
ANR	520310	Symbol	DISPATCH_PROPERTYGET		519585						
ANR	520311	Symbol	indices		519585						
ANR	520312	Symbol	* i		519585						
ANR	520313	Symbol	lbound		519585						
ANR	520314	Symbol	v		519585						
ANR	520315	Symbol	V_ISARRAY		519585						
ANR	520316	Symbol	& v		519585						
ANR	520317	Symbol	DISP_E_BADPARAMCOUNT		519585						
ANR	520318	Symbol	VT_VARIANT		519585						
ANR	520319	Symbol	safe_emalloc		519585						
ANR	520320	Function	saproxy_write_dimension	206:0:5559:7553							
ANR	520321	FunctionDef	"saproxy_write_dimension (zval * object , zval * offset , zval * value)"		520320	0					
ANR	520322	CompoundStatement		207:0:5636:7553	520320	0					
ANR	520323	IdentifierDeclStatement	php_com_saproxy * proxy = SA_FETCH ( object ) ;	208:1:5639:5680	520320	0	True				
ANR	520324	IdentifierDecl	* proxy = SA_FETCH ( object )		520320	0					
ANR	520325	IdentifierDeclType	php_com_saproxy *		520320	0					
ANR	520326	Identifier	proxy		520320	1					
ANR	520327	AssignmentExpression	* proxy = SA_FETCH ( object )		520320	2		=			
ANR	520328	Identifier	proxy		520320	0					
ANR	520329	CallExpression	SA_FETCH ( object )		520320	1					
ANR	520330	Callee	SA_FETCH		520320	0					
ANR	520331	Identifier	SA_FETCH		520320	0					
ANR	520332	ArgumentList	object		520320	1					
ANR	520333	Argument	object		520320	0					
ANR	520334	Identifier	object		520320	0					
ANR	520335	IdentifierDeclStatement	"UINT dims , i ;"	209:1:5683:5695	520320	1	True				
ANR	520336	IdentifierDecl	dims		520320	0					
ANR	520337	IdentifierDeclType	UINT		520320	0					
ANR	520338	Identifier	dims		520320	1					
ANR	520339	IdentifierDecl	i		520320	1					
ANR	520340	IdentifierDeclType	UINT		520320	0					
ANR	520341	Identifier	i		520320	1					
ANR	520342	IdentifierDeclStatement	HRESULT res ;	210:1:5698:5709	520320	2	True				
ANR	520343	IdentifierDecl	res		520320	0					
ANR	520344	IdentifierDeclType	HRESULT		520320	0					
ANR	520345	Identifier	res		520320	1					
ANR	520346	IdentifierDeclStatement	VARIANT v ;	211:1:5712:5721	520320	3	True				
ANR	520347	IdentifierDecl	v		520320	0					
ANR	520348	IdentifierDeclType	VARIANT		520320	0					
ANR	520349	Identifier	v		520320	1					
ANR	520350	IfStatement	if ( V_VT ( & proxy -> obj -> v ) == VT_DISPATCH )		520320	4					
ANR	520351	Condition	V_VT ( & proxy -> obj -> v ) == VT_DISPATCH	213:5:5729:5763	520320	0	True				
ANR	520352	EqualityExpression	V_VT ( & proxy -> obj -> v ) == VT_DISPATCH		520320	0		==			
ANR	520353	CallExpression	V_VT ( & proxy -> obj -> v )		520320	0					
ANR	520354	Callee	V_VT		520320	0					
ANR	520355	Identifier	V_VT		520320	0					
ANR	520356	ArgumentList	& proxy -> obj -> v		520320	1					
ANR	520357	Argument	& proxy -> obj -> v		520320	0					
ANR	520358	UnaryOperationExpression	& proxy -> obj -> v		520320	0					
ANR	520359	UnaryOperator	&		520320	0					
ANR	520360	PtrMemberAccess	proxy -> obj -> v		520320	1					
ANR	520361	PtrMemberAccess	proxy -> obj		520320	0					
ANR	520362	Identifier	proxy		520320	0					
ANR	520363	Identifier	obj		520320	1					
ANR	520364	Identifier	v		520320	1					
ANR	520365	Identifier	VT_DISPATCH		520320	1					
ANR	520366	CompoundStatement		11:2:298:363	520320	1					
ANR	520367	IdentifierDeclStatement	"zval * args = safe_emalloc ( proxy -> dimensions + 2 , sizeof ( zval ) , 0 ) ;"	217:2:5935:6000	520320	0	True				
ANR	520368	IdentifierDecl	"* args = safe_emalloc ( proxy -> dimensions + 2 , sizeof ( zval ) , 0 )"		520320	0					
ANR	520369	IdentifierDeclType	zval *		520320	0					
ANR	520370	Identifier	args		520320	1					
ANR	520371	AssignmentExpression	"* args = safe_emalloc ( proxy -> dimensions + 2 , sizeof ( zval ) , 0 )"		520320	2		=			
ANR	520372	Identifier	args		520320	0					
ANR	520373	CallExpression	"safe_emalloc ( proxy -> dimensions + 2 , sizeof ( zval ) , 0 )"		520320	1					
ANR	520374	Callee	safe_emalloc		520320	0					
ANR	520375	Identifier	safe_emalloc		520320	0					
ANR	520376	ArgumentList	proxy -> dimensions + 2		520320	1					
ANR	520377	Argument	proxy -> dimensions + 2		520320	0					
ANR	520378	AdditiveExpression	proxy -> dimensions + 2		520320	0		+			
ANR	520379	PtrMemberAccess	proxy -> dimensions		520320	0					
ANR	520380	Identifier	proxy		520320	0					
ANR	520381	Identifier	dimensions		520320	1					
ANR	520382	PrimaryExpression	2		520320	1					
ANR	520383	Argument	sizeof ( zval )		520320	1					
ANR	520384	SizeofExpression	sizeof ( zval )		520320	0					
ANR	520385	Sizeof	sizeof		520320	0					
ANR	520386	SizeofOperand	zval		520320	1					
ANR	520387	Argument	0		520320	2					
ANR	520388	PrimaryExpression	0		520320	0					
ANR	520389	ForStatement	for ( i = 1 ; i < ( UINT ) proxy -> dimensions ; i ++ )		520320	1					
ANR	520390	ForInit	i = 1 ;	219:7:6010:6015	520320	0	True				
ANR	520391	AssignmentExpression	i = 1		520320	0		=			
ANR	520392	Identifier	i		520320	0					
ANR	520393	PrimaryExpression	1		520320	1					
ANR	520394	Condition	i < ( UINT ) proxy -> dimensions	219:14:6017:6044	520320	1	True				
ANR	520395	RelationalExpression	i < ( UINT ) proxy -> dimensions		520320	0		<			
ANR	520396	Identifier	i		520320	0					
ANR	520397	CastExpression	( UINT ) proxy -> dimensions		520320	1					
ANR	520398	CastTarget	UINT		520320	0					
ANR	520399	PtrMemberAccess	proxy -> dimensions		520320	1					
ANR	520400	Identifier	proxy		520320	0					
ANR	520401	Identifier	dimensions		520320	1					
ANR	520402	PostIncDecOperationExpression	i ++	219:44:6047:6049	520320	2	True				
ANR	520403	Identifier	i		520320	0					
ANR	520404	IncDec	++		520320	1					
ANR	520405	CompoundStatement		13:49:415:415	520320	3					
ANR	520406	ExpressionStatement	"ZVAL_COPY_VALUE ( & args [ i - 1 ] , & proxy -> indices [ i ] )"	220:3:6057:6104	520320	0	True				
ANR	520407	CallExpression	"ZVAL_COPY_VALUE ( & args [ i - 1 ] , & proxy -> indices [ i ] )"		520320	0					
ANR	520408	Callee	ZVAL_COPY_VALUE		520320	0					
ANR	520409	Identifier	ZVAL_COPY_VALUE		520320	0					
ANR	520410	ArgumentList	& args [ i - 1 ]		520320	1					
ANR	520411	Argument	& args [ i - 1 ]		520320	0					
ANR	520412	UnaryOperationExpression	& args [ i - 1 ]		520320	0					
ANR	520413	UnaryOperator	&		520320	0					
ANR	520414	ArrayIndexing	args [ i - 1 ]		520320	1					
ANR	520415	Identifier	args		520320	0					
ANR	520416	AdditiveExpression	i - 1		520320	1		-			
ANR	520417	Identifier	i		520320	0					
ANR	520418	PrimaryExpression	1		520320	1					
ANR	520419	Argument	& proxy -> indices [ i ]		520320	1					
ANR	520420	UnaryOperationExpression	& proxy -> indices [ i ]		520320	0					
ANR	520421	UnaryOperator	&		520320	0					
ANR	520422	ArrayIndexing	proxy -> indices [ i ]		520320	1					
ANR	520423	PtrMemberAccess	proxy -> indices		520320	0					
ANR	520424	Identifier	proxy		520320	0					
ANR	520425	Identifier	indices		520320	1					
ANR	520426	Identifier	i		520320	1					
ANR	520427	ExpressionStatement	"ZVAL_COPY_VALUE ( & args [ i - 1 ] , offset )"	222:2:6112:6147	520320	2	True				
ANR	520428	CallExpression	"ZVAL_COPY_VALUE ( & args [ i - 1 ] , offset )"		520320	0					
ANR	520429	Callee	ZVAL_COPY_VALUE		520320	0					
ANR	520430	Identifier	ZVAL_COPY_VALUE		520320	0					
ANR	520431	ArgumentList	& args [ i - 1 ]		520320	1					
ANR	520432	Argument	& args [ i - 1 ]		520320	0					
ANR	520433	UnaryOperationExpression	& args [ i - 1 ]		520320	0					
ANR	520434	UnaryOperator	&		520320	0					
ANR	520435	ArrayIndexing	args [ i - 1 ]		520320	1					
ANR	520436	Identifier	args		520320	0					
ANR	520437	AdditiveExpression	i - 1		520320	1		-			
ANR	520438	Identifier	i		520320	0					
ANR	520439	PrimaryExpression	1		520320	1					
ANR	520440	Argument	offset		520320	1					
ANR	520441	Identifier	offset		520320	0					
ANR	520442	ExpressionStatement	"ZVAL_COPY_VALUE ( & args [ i ] , value )"	223:2:6151:6183	520320	3	True				
ANR	520443	CallExpression	"ZVAL_COPY_VALUE ( & args [ i ] , value )"		520320	0					
ANR	520444	Callee	ZVAL_COPY_VALUE		520320	0					
ANR	520445	Identifier	ZVAL_COPY_VALUE		520320	0					
ANR	520446	ArgumentList	& args [ i ]		520320	1					
ANR	520447	Argument	& args [ i ]		520320	0					
ANR	520448	UnaryOperationExpression	& args [ i ]		520320	0					
ANR	520449	UnaryOperator	&		520320	0					
ANR	520450	ArrayIndexing	args [ i ]		520320	1					
ANR	520451	Identifier	args		520320	0					
ANR	520452	Identifier	i		520320	1					
ANR	520453	Argument	value		520320	1					
ANR	520454	Identifier	value		520320	0					
ANR	520455	ExpressionStatement	convert_to_string ( & proxy -> indices [ 0 ] )	225:2:6188:6225	520320	4	True				
ANR	520456	CallExpression	convert_to_string ( & proxy -> indices [ 0 ] )		520320	0					
ANR	520457	Callee	convert_to_string		520320	0					
ANR	520458	Identifier	convert_to_string		520320	0					
ANR	520459	ArgumentList	& proxy -> indices [ 0 ]		520320	1					
ANR	520460	Argument	& proxy -> indices [ 0 ]		520320	0					
ANR	520461	UnaryOperationExpression	& proxy -> indices [ 0 ]		520320	0					
ANR	520462	UnaryOperator	&		520320	0					
ANR	520463	ArrayIndexing	proxy -> indices [ 0 ]		520320	1					
ANR	520464	PtrMemberAccess	proxy -> indices		520320	0					
ANR	520465	Identifier	proxy		520320	0					
ANR	520466	Identifier	indices		520320	1					
ANR	520467	PrimaryExpression	0		520320	1					
ANR	520468	ExpressionStatement	VariantInit ( & v )	226:2:6229:6244	520320	5	True				
ANR	520469	CallExpression	VariantInit ( & v )		520320	0					
ANR	520470	Callee	VariantInit		520320	0					
ANR	520471	Identifier	VariantInit		520320	0					
ANR	520472	ArgumentList	& v		520320	1					
ANR	520473	Argument	& v		520320	0					
ANR	520474	UnaryOperationExpression	& v		520320	0					
ANR	520475	UnaryOperator	&		520320	0					
ANR	520476	Identifier	v		520320	1					
ANR	520477	IfStatement	"if ( SUCCESS == php_com_do_invoke ( proxy -> obj , Z_STRVAL ( proxy -> indices [ 0 ] ) , Z_STRLEN ( proxy -> indices [ 0 ] ) , DISPATCH_PROPERTYPUT , & v , proxy -> dimensions + 1 , args , 0 ) )"		520320	6					
ANR	520478	Condition	"SUCCESS == php_com_do_invoke ( proxy -> obj , Z_STRVAL ( proxy -> indices [ 0 ] ) , Z_STRLEN ( proxy -> indices [ 0 ] ) , DISPATCH_PROPERTYPUT , & v , proxy -> dimensions + 1 , args , 0 )"	227:6:6252:6417	520320	0	True				
ANR	520479	EqualityExpression	"SUCCESS == php_com_do_invoke ( proxy -> obj , Z_STRVAL ( proxy -> indices [ 0 ] ) , Z_STRLEN ( proxy -> indices [ 0 ] ) , DISPATCH_PROPERTYPUT , & v , proxy -> dimensions + 1 , args , 0 )"		520320	0		==			
ANR	520480	Identifier	SUCCESS		520320	0					
ANR	520481	CallExpression	"php_com_do_invoke ( proxy -> obj , Z_STRVAL ( proxy -> indices [ 0 ] ) , Z_STRLEN ( proxy -> indices [ 0 ] ) , DISPATCH_PROPERTYPUT , & v , proxy -> dimensions + 1 , args , 0 )"		520320	1					
ANR	520482	Callee	php_com_do_invoke		520320	0					
ANR	520483	Identifier	php_com_do_invoke		520320	0					
ANR	520484	ArgumentList	proxy -> obj		520320	1					
ANR	520485	Argument	proxy -> obj		520320	0					
ANR	520486	PtrMemberAccess	proxy -> obj		520320	0					
ANR	520487	Identifier	proxy		520320	0					
ANR	520488	Identifier	obj		520320	1					
ANR	520489	Argument	Z_STRVAL ( proxy -> indices [ 0 ] )		520320	1					
ANR	520490	CallExpression	Z_STRVAL ( proxy -> indices [ 0 ] )		520320	0					
ANR	520491	Callee	Z_STRVAL		520320	0					
ANR	520492	Identifier	Z_STRVAL		520320	0					
ANR	520493	ArgumentList	proxy -> indices [ 0 ]		520320	1					
ANR	520494	Argument	proxy -> indices [ 0 ]		520320	0					
ANR	520495	ArrayIndexing	proxy -> indices [ 0 ]		520320	0					
ANR	520496	PtrMemberAccess	proxy -> indices		520320	0					
ANR	520497	Identifier	proxy		520320	0					
ANR	520498	Identifier	indices		520320	1					
ANR	520499	PrimaryExpression	0		520320	1					
ANR	520500	Argument	Z_STRLEN ( proxy -> indices [ 0 ] )		520320	2					
ANR	520501	CallExpression	Z_STRLEN ( proxy -> indices [ 0 ] )		520320	0					
ANR	520502	Callee	Z_STRLEN		520320	0					
ANR	520503	Identifier	Z_STRLEN		520320	0					
ANR	520504	ArgumentList	proxy -> indices [ 0 ]		520320	1					
ANR	520505	Argument	proxy -> indices [ 0 ]		520320	0					
ANR	520506	ArrayIndexing	proxy -> indices [ 0 ]		520320	0					
ANR	520507	PtrMemberAccess	proxy -> indices		520320	0					
ANR	520508	Identifier	proxy		520320	0					
ANR	520509	Identifier	indices		520320	1					
ANR	520510	PrimaryExpression	0		520320	1					
ANR	520511	Argument	DISPATCH_PROPERTYPUT		520320	3					
ANR	520512	Identifier	DISPATCH_PROPERTYPUT		520320	0					
ANR	520513	Argument	& v		520320	4					
ANR	520514	UnaryOperationExpression	& v		520320	0					
ANR	520515	UnaryOperator	&		520320	0					
ANR	520516	Identifier	v		520320	1					
ANR	520517	Argument	proxy -> dimensions + 1		520320	5					
ANR	520518	AdditiveExpression	proxy -> dimensions + 1		520320	0		+			
ANR	520519	PtrMemberAccess	proxy -> dimensions		520320	0					
ANR	520520	Identifier	proxy		520320	0					
ANR	520521	Identifier	dimensions		520320	1					
ANR	520522	PrimaryExpression	1		520320	1					
ANR	520523	Argument	args		520320	6					
ANR	520524	Identifier	args		520320	0					
ANR	520525	Argument	0		520320	7					
ANR	520526	PrimaryExpression	0		520320	0					
ANR	520527	CompoundStatement		23:15:783:783	520320	1					
ANR	520528	ExpressionStatement	VariantClear ( & v )	230:3:6425:6441	520320	0	True				
ANR	520529	CallExpression	VariantClear ( & v )		520320	0					
ANR	520530	Callee	VariantClear		520320	0					
ANR	520531	Identifier	VariantClear		520320	0					
ANR	520532	ArgumentList	& v		520320	1					
ANR	520533	Argument	& v		520320	0					
ANR	520534	UnaryOperationExpression	& v		520320	0					
ANR	520535	UnaryOperator	&		520320	0					
ANR	520536	Identifier	v		520320	1					
ANR	520537	ExpressionStatement	efree ( args )	233:2:6450:6461	520320	7	True				
ANR	520538	CallExpression	efree ( args )		520320	0					
ANR	520539	Callee	efree		520320	0					
ANR	520540	Identifier	efree		520320	0					
ANR	520541	ArgumentList	args		520320	1					
ANR	520542	Argument	args		520320	0					
ANR	520543	Identifier	args		520320	0					
ANR	520544	ElseStatement	else		520320	0					
ANR	520545	IfStatement	if ( V_ISARRAY ( & proxy -> obj -> v ) )		520320	0					
ANR	520546	Condition	V_ISARRAY ( & proxy -> obj -> v )	235:12:6476:6500	520320	0	True				
ANR	520547	CallExpression	V_ISARRAY ( & proxy -> obj -> v )		520320	0					
ANR	520548	Callee	V_ISARRAY		520320	0					
ANR	520549	Identifier	V_ISARRAY		520320	0					
ANR	520550	ArgumentList	& proxy -> obj -> v		520320	1					
ANR	520551	Argument	& proxy -> obj -> v		520320	0					
ANR	520552	UnaryOperationExpression	& proxy -> obj -> v		520320	0					
ANR	520553	UnaryOperator	&		520320	0					
ANR	520554	PtrMemberAccess	proxy -> obj -> v		520320	1					
ANR	520555	PtrMemberAccess	proxy -> obj		520320	0					
ANR	520556	Identifier	proxy		520320	0					
ANR	520557	Identifier	obj		520320	1					
ANR	520558	Identifier	v		520320	1					
ANR	520559	CompoundStatement		31:2:887:897	520320	1					
ANR	520560	IdentifierDeclStatement	LONG * indices ;	236:2:6507:6520	520320	0	True				
ANR	520561	IdentifierDecl	* indices		520320	0					
ANR	520562	IdentifierDeclType	LONG *		520320	0					
ANR	520563	Identifier	indices		520320	1					
ANR	520564	IdentifierDeclStatement	VARTYPE vt ;	237:2:6524:6534	520320	1	True				
ANR	520565	IdentifierDecl	vt		520320	0					
ANR	520566	IdentifierDeclType	VARTYPE		520320	0					
ANR	520567	Identifier	vt		520320	1					
ANR	520568	ExpressionStatement	dims = SafeArrayGetDim ( V_ARRAY ( & proxy -> obj -> v ) )	239:2:6539:6586	520320	2	True				
ANR	520569	AssignmentExpression	dims = SafeArrayGetDim ( V_ARRAY ( & proxy -> obj -> v ) )		520320	0		=			
ANR	520570	Identifier	dims		520320	0					
ANR	520571	CallExpression	SafeArrayGetDim ( V_ARRAY ( & proxy -> obj -> v ) )		520320	1					
ANR	520572	Callee	SafeArrayGetDim		520320	0					
ANR	520573	Identifier	SafeArrayGetDim		520320	0					
ANR	520574	ArgumentList	V_ARRAY ( & proxy -> obj -> v )		520320	1					
ANR	520575	Argument	V_ARRAY ( & proxy -> obj -> v )		520320	0					
ANR	520576	CallExpression	V_ARRAY ( & proxy -> obj -> v )		520320	0					
ANR	520577	Callee	V_ARRAY		520320	0					
ANR	520578	Identifier	V_ARRAY		520320	0					
ANR	520579	ArgumentList	& proxy -> obj -> v		520320	1					
ANR	520580	Argument	& proxy -> obj -> v		520320	0					
ANR	520581	UnaryOperationExpression	& proxy -> obj -> v		520320	0					
ANR	520582	UnaryOperator	&		520320	0					
ANR	520583	PtrMemberAccess	proxy -> obj -> v		520320	1					
ANR	520584	PtrMemberAccess	proxy -> obj		520320	0					
ANR	520585	Identifier	proxy		520320	0					
ANR	520586	Identifier	obj		520320	1					
ANR	520587	Identifier	v		520320	1					
ANR	520588	ExpressionStatement	"indices = safe_emalloc ( dims , sizeof ( LONG ) , 0 )"	240:2:6590:6635	520320	3	True				
ANR	520589	AssignmentExpression	"indices = safe_emalloc ( dims , sizeof ( LONG ) , 0 )"		520320	0		=			
ANR	520590	Identifier	indices		520320	0					
ANR	520591	CallExpression	"safe_emalloc ( dims , sizeof ( LONG ) , 0 )"		520320	1					
ANR	520592	Callee	safe_emalloc		520320	0					
ANR	520593	Identifier	safe_emalloc		520320	0					
ANR	520594	ArgumentList	dims		520320	1					
ANR	520595	Argument	dims		520320	0					
ANR	520596	Identifier	dims		520320	0					
ANR	520597	Argument	sizeof ( LONG )		520320	1					
ANR	520598	SizeofExpression	sizeof ( LONG )		520320	0					
ANR	520599	Sizeof	sizeof		520320	0					
ANR	520600	SizeofOperand	LONG		520320	1					
ANR	520601	Argument	0		520320	2					
ANR	520602	PrimaryExpression	0		520320	0					
ANR	520603	ForStatement	for ( i = 0 ; i < dims ; i ++ )		520320	4					
ANR	520604	ForInit	i = 0 ;	242:7:6676:6681	520320	0	True				
ANR	520605	AssignmentExpression	i = 0		520320	0		=			
ANR	520606	Identifier	i		520320	0					
ANR	520607	PrimaryExpression	0		520320	1					
ANR	520608	Condition	i < dims	242:14:6683:6690	520320	1	True				
ANR	520609	RelationalExpression	i < dims		520320	0		<			
ANR	520610	Identifier	i		520320	0					
ANR	520611	Identifier	dims		520320	1					
ANR	520612	PostIncDecOperationExpression	i ++	242:24:6693:6695	520320	2	True				
ANR	520613	Identifier	i		520320	0					
ANR	520614	IncDec	++		520320	1					
ANR	520615	CompoundStatement		36:29:1061:1061	520320	3					
ANR	520616	ExpressionStatement	convert_to_long ( & proxy -> indices [ i ] )	243:3:6703:6738	520320	0	True				
ANR	520617	CallExpression	convert_to_long ( & proxy -> indices [ i ] )		520320	0					
ANR	520618	Callee	convert_to_long		520320	0					
ANR	520619	Identifier	convert_to_long		520320	0					
ANR	520620	ArgumentList	& proxy -> indices [ i ]		520320	1					
ANR	520621	Argument	& proxy -> indices [ i ]		520320	0					
ANR	520622	UnaryOperationExpression	& proxy -> indices [ i ]		520320	0					
ANR	520623	UnaryOperator	&		520320	0					
ANR	520624	ArrayIndexing	proxy -> indices [ i ]		520320	1					
ANR	520625	PtrMemberAccess	proxy -> indices		520320	0					
ANR	520626	Identifier	proxy		520320	0					
ANR	520627	Identifier	indices		520320	1					
ANR	520628	Identifier	i		520320	1					
ANR	520629	ExpressionStatement	indices [ i ] = ( LONG ) Z_LVAL ( proxy -> indices [ i ] )	244:3:6743:6787	520320	1	True				
ANR	520630	AssignmentExpression	indices [ i ] = ( LONG ) Z_LVAL ( proxy -> indices [ i ] )		520320	0		=			
ANR	520631	ArrayIndexing	indices [ i ]		520320	0					
ANR	520632	Identifier	indices		520320	0					
ANR	520633	Identifier	i		520320	1					
ANR	520634	CastExpression	( LONG ) Z_LVAL ( proxy -> indices [ i ] )		520320	1					
ANR	520635	CastTarget	LONG		520320	0					
ANR	520636	CallExpression	Z_LVAL ( proxy -> indices [ i ] )		520320	1					
ANR	520637	Callee	Z_LVAL		520320	0					
ANR	520638	Identifier	Z_LVAL		520320	0					
ANR	520639	ArgumentList	proxy -> indices [ i ]		520320	1					
ANR	520640	Argument	proxy -> indices [ i ]		520320	0					
ANR	520641	ArrayIndexing	proxy -> indices [ i ]		520320	0					
ANR	520642	PtrMemberAccess	proxy -> indices		520320	0					
ANR	520643	Identifier	proxy		520320	0					
ANR	520644	Identifier	indices		520320	1					
ANR	520645	Identifier	i		520320	1					
ANR	520646	ExpressionStatement	convert_to_long ( offset )	248:2:6828:6851	520320	5	True				
ANR	520647	CallExpression	convert_to_long ( offset )		520320	0					
ANR	520648	Callee	convert_to_long		520320	0					
ANR	520649	Identifier	convert_to_long		520320	0					
ANR	520650	ArgumentList	offset		520320	1					
ANR	520651	Argument	offset		520320	0					
ANR	520652	Identifier	offset		520320	0					
ANR	520653	ExpressionStatement	indices [ dims - 1 ] = ( LONG ) Z_LVAL_P ( offset )	249:2:6855:6895	520320	6	True				
ANR	520654	AssignmentExpression	indices [ dims - 1 ] = ( LONG ) Z_LVAL_P ( offset )		520320	0		=			
ANR	520655	ArrayIndexing	indices [ dims - 1 ]		520320	0					
ANR	520656	Identifier	indices		520320	0					
ANR	520657	AdditiveExpression	dims - 1		520320	1		-			
ANR	520658	Identifier	dims		520320	0					
ANR	520659	PrimaryExpression	1		520320	1					
ANR	520660	CastExpression	( LONG ) Z_LVAL_P ( offset )		520320	1					
ANR	520661	CastTarget	LONG		520320	0					
ANR	520662	CallExpression	Z_LVAL_P ( offset )		520320	1					
ANR	520663	Callee	Z_LVAL_P		520320	0					
ANR	520664	Identifier	Z_LVAL_P		520320	0					
ANR	520665	ArgumentList	offset		520320	1					
ANR	520666	Argument	offset		520320	0					
ANR	520667	Identifier	offset		520320	0					
ANR	520668	IfStatement	"if ( FAILED ( SafeArrayGetVartype ( V_ARRAY ( & proxy -> obj -> v ) , & vt ) ) || vt == VT_EMPTY )"		520320	7					
ANR	520669	Condition	"FAILED ( SafeArrayGetVartype ( V_ARRAY ( & proxy -> obj -> v ) , & vt ) ) || vt == VT_EMPTY"	251:6:6904:6978	520320	0	True				
ANR	520670	OrExpression	"FAILED ( SafeArrayGetVartype ( V_ARRAY ( & proxy -> obj -> v ) , & vt ) ) || vt == VT_EMPTY"		520320	0		||			
ANR	520671	CallExpression	"FAILED ( SafeArrayGetVartype ( V_ARRAY ( & proxy -> obj -> v ) , & vt ) )"		520320	0					
ANR	520672	Callee	FAILED		520320	0					
ANR	520673	Identifier	FAILED		520320	0					
ANR	520674	ArgumentList	"SafeArrayGetVartype ( V_ARRAY ( & proxy -> obj -> v ) , & vt )"		520320	1					
ANR	520675	Argument	"SafeArrayGetVartype ( V_ARRAY ( & proxy -> obj -> v ) , & vt )"		520320	0					
ANR	520676	CallExpression	"SafeArrayGetVartype ( V_ARRAY ( & proxy -> obj -> v ) , & vt )"		520320	0					
ANR	520677	Callee	SafeArrayGetVartype		520320	0					
ANR	520678	Identifier	SafeArrayGetVartype		520320	0					
ANR	520679	ArgumentList	V_ARRAY ( & proxy -> obj -> v )		520320	1					
ANR	520680	Argument	V_ARRAY ( & proxy -> obj -> v )		520320	0					
ANR	520681	CallExpression	V_ARRAY ( & proxy -> obj -> v )		520320	0					
ANR	520682	Callee	V_ARRAY		520320	0					
ANR	520683	Identifier	V_ARRAY		520320	0					
ANR	520684	ArgumentList	& proxy -> obj -> v		520320	1					
ANR	520685	Argument	& proxy -> obj -> v		520320	0					
ANR	520686	UnaryOperationExpression	& proxy -> obj -> v		520320	0					
ANR	520687	UnaryOperator	&		520320	0					
ANR	520688	PtrMemberAccess	proxy -> obj -> v		520320	1					
ANR	520689	PtrMemberAccess	proxy -> obj		520320	0					
ANR	520690	Identifier	proxy		520320	0					
ANR	520691	Identifier	obj		520320	1					
ANR	520692	Identifier	v		520320	1					
ANR	520693	Argument	& vt		520320	1					
ANR	520694	UnaryOperationExpression	& vt		520320	0					
ANR	520695	UnaryOperator	&		520320	0					
ANR	520696	Identifier	vt		520320	1					
ANR	520697	EqualityExpression	vt == VT_EMPTY		520320	1		==			
ANR	520698	Identifier	vt		520320	0					
ANR	520699	Identifier	VT_EMPTY		520320	1					
ANR	520700	CompoundStatement		45:83:1344:1344	520320	1					
ANR	520701	ExpressionStatement	vt = V_VT ( & proxy -> obj -> v ) & ~VT_ARRAY	252:3:6986:7023	520320	0	True				
ANR	520702	AssignmentExpression	vt = V_VT ( & proxy -> obj -> v ) & ~VT_ARRAY		520320	0		=			
ANR	520703	Identifier	vt		520320	0					
ANR	520704	BitAndExpression	V_VT ( & proxy -> obj -> v ) & ~VT_ARRAY		520320	1		&			
ANR	520705	CallExpression	V_VT ( & proxy -> obj -> v )		520320	0					
ANR	520706	Callee	V_VT		520320	0					
ANR	520707	Identifier	V_VT		520320	0					
ANR	520708	ArgumentList	& proxy -> obj -> v		520320	1					
ANR	520709	Argument	& proxy -> obj -> v		520320	0					
ANR	520710	UnaryOperationExpression	& proxy -> obj -> v		520320	0					
ANR	520711	UnaryOperator	&		520320	0					
ANR	520712	PtrMemberAccess	proxy -> obj -> v		520320	1					
ANR	520713	PtrMemberAccess	proxy -> obj		520320	0					
ANR	520714	Identifier	proxy		520320	0					
ANR	520715	Identifier	obj		520320	1					
ANR	520716	Identifier	v		520320	1					
ANR	520717	Identifier	~VT_ARRAY		520320	1					
ANR	520718	ExpressionStatement	VariantInit ( & v )	255:2:7032:7047	520320	8	True				
ANR	520719	CallExpression	VariantInit ( & v )		520320	0					
ANR	520720	Callee	VariantInit		520320	0					
ANR	520721	Identifier	VariantInit		520320	0					
ANR	520722	ArgumentList	& v		520320	1					
ANR	520723	Argument	& v		520320	0					
ANR	520724	UnaryOperationExpression	& v		520320	0					
ANR	520725	UnaryOperator	&		520320	0					
ANR	520726	Identifier	v		520320	1					
ANR	520727	ExpressionStatement	"php_com_variant_from_zval ( & v , value , proxy -> obj -> code_page )"	256:2:7051:7110	520320	9	True				
ANR	520728	CallExpression	"php_com_variant_from_zval ( & v , value , proxy -> obj -> code_page )"		520320	0					
ANR	520729	Callee	php_com_variant_from_zval		520320	0					
ANR	520730	Identifier	php_com_variant_from_zval		520320	0					
ANR	520731	ArgumentList	& v		520320	1					
ANR	520732	Argument	& v		520320	0					
ANR	520733	UnaryOperationExpression	& v		520320	0					
ANR	520734	UnaryOperator	&		520320	0					
ANR	520735	Identifier	v		520320	1					
ANR	520736	Argument	value		520320	1					
ANR	520737	Identifier	value		520320	0					
ANR	520738	Argument	proxy -> obj -> code_page		520320	2					
ANR	520739	PtrMemberAccess	proxy -> obj -> code_page		520320	0					
ANR	520740	PtrMemberAccess	proxy -> obj		520320	0					
ANR	520741	Identifier	proxy		520320	0					
ANR	520742	Identifier	obj		520320	1					
ANR	520743	Identifier	code_page		520320	1					
ANR	520744	IfStatement	if ( V_VT ( & v ) != vt )		520320	10					
ANR	520745	Condition	V_VT ( & v ) != vt	258:6:7119:7132	520320	0	True				
ANR	520746	EqualityExpression	V_VT ( & v ) != vt		520320	0		!=			
ANR	520747	CallExpression	V_VT ( & v )		520320	0					
ANR	520748	Callee	V_VT		520320	0					
ANR	520749	Identifier	V_VT		520320	0					
ANR	520750	ArgumentList	& v		520320	1					
ANR	520751	Argument	& v		520320	0					
ANR	520752	UnaryOperationExpression	& v		520320	0					
ANR	520753	UnaryOperator	&		520320	0					
ANR	520754	Identifier	v		520320	1					
ANR	520755	Identifier	vt		520320	1					
ANR	520756	CompoundStatement		52:22:1498:1498	520320	1					
ANR	520757	ExpressionStatement	"VariantChangeType ( & v , & v , 0 , vt )"	259:3:7140:7172	520320	0	True				
ANR	520758	CallExpression	"VariantChangeType ( & v , & v , 0 , vt )"		520320	0					
ANR	520759	Callee	VariantChangeType		520320	0					
ANR	520760	Identifier	VariantChangeType		520320	0					
ANR	520761	ArgumentList	& v		520320	1					
ANR	520762	Argument	& v		520320	0					
ANR	520763	UnaryOperationExpression	& v		520320	0					
ANR	520764	UnaryOperator	&		520320	0					
ANR	520765	Identifier	v		520320	1					
ANR	520766	Argument	& v		520320	1					
ANR	520767	UnaryOperationExpression	& v		520320	0					
ANR	520768	UnaryOperator	&		520320	0					
ANR	520769	Identifier	v		520320	1					
ANR	520770	Argument	0		520320	2					
ANR	520771	PrimaryExpression	0		520320	0					
ANR	520772	Argument	vt		520320	3					
ANR	520773	Identifier	vt		520320	0					
ANR	520774	IfStatement	if ( vt == VT_VARIANT )		520320	11					
ANR	520775	Condition	vt == VT_VARIANT	262:6:7185:7200	520320	0	True				
ANR	520776	EqualityExpression	vt == VT_VARIANT		520320	0		==			
ANR	520777	Identifier	vt		520320	0					
ANR	520778	Identifier	VT_VARIANT		520320	1					
ANR	520779	CompoundStatement		56:24:1566:1566	520320	1					
ANR	520780	ExpressionStatement	"res = SafeArrayPutElement ( V_ARRAY ( & proxy -> obj -> v ) , indices , & v )"	263:3:7208:7271	520320	0	True				
ANR	520781	AssignmentExpression	"res = SafeArrayPutElement ( V_ARRAY ( & proxy -> obj -> v ) , indices , & v )"		520320	0		=			
ANR	520782	Identifier	res		520320	0					
ANR	520783	CallExpression	"SafeArrayPutElement ( V_ARRAY ( & proxy -> obj -> v ) , indices , & v )"		520320	1					
ANR	520784	Callee	SafeArrayPutElement		520320	0					
ANR	520785	Identifier	SafeArrayPutElement		520320	0					
ANR	520786	ArgumentList	V_ARRAY ( & proxy -> obj -> v )		520320	1					
ANR	520787	Argument	V_ARRAY ( & proxy -> obj -> v )		520320	0					
ANR	520788	CallExpression	V_ARRAY ( & proxy -> obj -> v )		520320	0					
ANR	520789	Callee	V_ARRAY		520320	0					
ANR	520790	Identifier	V_ARRAY		520320	0					
ANR	520791	ArgumentList	& proxy -> obj -> v		520320	1					
ANR	520792	Argument	& proxy -> obj -> v		520320	0					
ANR	520793	UnaryOperationExpression	& proxy -> obj -> v		520320	0					
ANR	520794	UnaryOperator	&		520320	0					
ANR	520795	PtrMemberAccess	proxy -> obj -> v		520320	1					
ANR	520796	PtrMemberAccess	proxy -> obj		520320	0					
ANR	520797	Identifier	proxy		520320	0					
ANR	520798	Identifier	obj		520320	1					
ANR	520799	Identifier	v		520320	1					
ANR	520800	Argument	indices		520320	1					
ANR	520801	Identifier	indices		520320	0					
ANR	520802	Argument	& v		520320	2					
ANR	520803	UnaryOperationExpression	& v		520320	0					
ANR	520804	UnaryOperator	&		520320	0					
ANR	520805	Identifier	v		520320	1					
ANR	520806	ElseStatement	else		520320	0					
ANR	520807	CompoundStatement		58:9:1645:1645	520320	0					
ANR	520808	ExpressionStatement	"res = SafeArrayPutElement ( V_ARRAY ( & proxy -> obj -> v ) , indices , & v . lVal )"	265:3:7287:7355	520320	0	True				
ANR	520809	AssignmentExpression	"res = SafeArrayPutElement ( V_ARRAY ( & proxy -> obj -> v ) , indices , & v . lVal )"		520320	0		=			
ANR	520810	Identifier	res		520320	0					
ANR	520811	CallExpression	"SafeArrayPutElement ( V_ARRAY ( & proxy -> obj -> v ) , indices , & v . lVal )"		520320	1					
ANR	520812	Callee	SafeArrayPutElement		520320	0					
ANR	520813	Identifier	SafeArrayPutElement		520320	0					
ANR	520814	ArgumentList	V_ARRAY ( & proxy -> obj -> v )		520320	1					
ANR	520815	Argument	V_ARRAY ( & proxy -> obj -> v )		520320	0					
ANR	520816	CallExpression	V_ARRAY ( & proxy -> obj -> v )		520320	0					
ANR	520817	Callee	V_ARRAY		520320	0					
ANR	520818	Identifier	V_ARRAY		520320	0					
ANR	520819	ArgumentList	& proxy -> obj -> v		520320	1					
ANR	520820	Argument	& proxy -> obj -> v		520320	0					
ANR	520821	UnaryOperationExpression	& proxy -> obj -> v		520320	0					
ANR	520822	UnaryOperator	&		520320	0					
ANR	520823	PtrMemberAccess	proxy -> obj -> v		520320	1					
ANR	520824	PtrMemberAccess	proxy -> obj		520320	0					
ANR	520825	Identifier	proxy		520320	0					
ANR	520826	Identifier	obj		520320	1					
ANR	520827	Identifier	v		520320	1					
ANR	520828	Argument	indices		520320	1					
ANR	520829	Identifier	indices		520320	0					
ANR	520830	Argument	& v . lVal		520320	2					
ANR	520831	UnaryOperationExpression	& v . lVal		520320	0					
ANR	520832	UnaryOperator	&		520320	0					
ANR	520833	MemberAccess	v . lVal		520320	1					
ANR	520834	Identifier	v		520320	0					
ANR	520835	Identifier	lVal		520320	1					
ANR	520836	ExpressionStatement	efree ( indices )	268:2:7364:7378	520320	12	True				
ANR	520837	CallExpression	efree ( indices )		520320	0					
ANR	520838	Callee	efree		520320	0					
ANR	520839	Identifier	efree		520320	0					
ANR	520840	ArgumentList	indices		520320	1					
ANR	520841	Argument	indices		520320	0					
ANR	520842	Identifier	indices		520320	0					
ANR	520843	ExpressionStatement	VariantClear ( & v )	269:2:7382:7398	520320	13	True				
ANR	520844	CallExpression	VariantClear ( & v )		520320	0					
ANR	520845	Callee	VariantClear		520320	0					
ANR	520846	Identifier	VariantClear		520320	0					
ANR	520847	ArgumentList	& v		520320	1					
ANR	520848	Argument	& v		520320	0					
ANR	520849	UnaryOperationExpression	& v		520320	0					
ANR	520850	UnaryOperator	&		520320	0					
ANR	520851	Identifier	v		520320	1					
ANR	520852	IfStatement	if ( FAILED ( res ) )		520320	14					
ANR	520853	Condition	FAILED ( res )	271:6:7407:7417	520320	0	True				
ANR	520854	CallExpression	FAILED ( res )		520320	0					
ANR	520855	Callee	FAILED		520320	0					
ANR	520856	Identifier	FAILED		520320	0					
ANR	520857	ArgumentList	res		520320	1					
ANR	520858	Argument	res		520320	0					
ANR	520859	Identifier	res		520320	0					
ANR	520860	CompoundStatement		65:19:1783:1783	520320	1					
ANR	520861	ExpressionStatement	"php_com_throw_exception ( res , NULL )"	272:3:7425:7459	520320	0	True				
ANR	520862	CallExpression	"php_com_throw_exception ( res , NULL )"		520320	0					
ANR	520863	Callee	php_com_throw_exception		520320	0					
ANR	520864	Identifier	php_com_throw_exception		520320	0					
ANR	520865	ArgumentList	res		520320	1					
ANR	520866	Argument	res		520320	0					
ANR	520867	Identifier	res		520320	0					
ANR	520868	Argument	NULL		520320	1					
ANR	520869	Identifier	NULL		520320	0					
ANR	520870	ElseStatement	else		520320	0					
ANR	520871	CompoundStatement		68:8:1836:1836	520320	0					
ANR	520872	ExpressionStatement	"php_com_throw_exception ( E_NOTIMPL , ""invalid write to com proxy object"" )"	275:2:7477:7548	520320	0	True				
ANR	520873	CallExpression	"php_com_throw_exception ( E_NOTIMPL , ""invalid write to com proxy object"" )"		520320	0					
ANR	520874	Callee	php_com_throw_exception		520320	0					
ANR	520875	Identifier	php_com_throw_exception		520320	0					
ANR	520876	ArgumentList	E_NOTIMPL		520320	1					
ANR	520877	Argument	E_NOTIMPL		520320	0					
ANR	520878	Identifier	E_NOTIMPL		520320	0					
ANR	520879	Argument	"""invalid write to com proxy object"""		520320	1					
ANR	520880	PrimaryExpression	"""invalid write to com proxy object"""		520320	0					
ANR	520881	ReturnType	static void		520320	1					
ANR	520882	Identifier	saproxy_write_dimension		520320	2					
ANR	520883	ParameterList	"zval * object , zval * offset , zval * value"		520320	3					
ANR	520884	Parameter	zval * object	206:36:5595:5606	520320	0	True				
ANR	520885	ParameterType	zval *		520320	0					
ANR	520886	Identifier	object		520320	1					
ANR	520887	Parameter	zval * offset	206:50:5609:5620	520320	1	True				
ANR	520888	ParameterType	zval *		520320	0					
ANR	520889	Identifier	offset		520320	1					
ANR	520890	Parameter	zval * value	206:64:5623:5633	520320	2	True				
ANR	520891	ParameterType	zval *		520320	0					
ANR	520892	Identifier	value		520320	1					
ANR	520893	CFGEntryNode	ENTRY		520320		True				
ANR	520894	CFGExitNode	EXIT		520320		True				
ANR	520895	Symbol	~VT_ARRAY		520320						
ANR	520896	Symbol	dims		520320						
ANR	520897	Symbol	* indices		520320						
ANR	520898	Symbol	proxy -> obj -> code_page		520320						
ANR	520899	Symbol	Z_LVAL		520320						
ANR	520900	Symbol	* proxy -> obj		520320						
ANR	520901	Symbol	proxy -> indices		520320						
ANR	520902	Symbol	Z_STRLEN		520320						
ANR	520903	Symbol	SafeArrayGetVartype		520320						
ANR	520904	Symbol	proxy -> obj		520320						
ANR	520905	Symbol	& v . lVal		520320						
ANR	520906	Symbol	VT_EMPTY		520320						
ANR	520907	Symbol	FAILED		520320						
ANR	520908	Symbol	php_com_do_invoke		520320						
ANR	520909	Symbol	SafeArrayGetDim		520320						
ANR	520910	Symbol	Z_STRVAL		520320						
ANR	520911	Symbol	value		520320						
ANR	520912	Symbol	res		520320						
ANR	520913	Symbol	& proxy -> obj -> v		520320						
ANR	520914	Symbol	SafeArrayPutElement		520320						
ANR	520915	Symbol	E_NOTIMPL		520320						
ANR	520916	Symbol	* * proxy		520320						
ANR	520917	Symbol	SUCCESS		520320						
ANR	520918	Symbol	NULL		520320						
ANR	520919	Symbol	offset		520320						
ANR	520920	Symbol	SA_FETCH		520320						
ANR	520921	Symbol	proxy -> dimensions		520320						
ANR	520922	Symbol	i		520320						
ANR	520923	Symbol	& vt		520320						
ANR	520924	Symbol	VT_DISPATCH		520320						
ANR	520925	Symbol	* proxy -> indices		520320						
ANR	520926	Symbol	V_VT		520320						
ANR	520927	Symbol	Z_LVAL_P		520320						
ANR	520928	Symbol	args		520320						
ANR	520929	Symbol	proxy		520320						
ANR	520930	Symbol	indices		520320						
ANR	520931	Symbol	* i		520320						
ANR	520932	Symbol	v		520320						
ANR	520933	Symbol	V_ISARRAY		520320						
ANR	520934	Symbol	* proxy		520320						
ANR	520935	Symbol	DISPATCH_PROPERTYPUT		520320						
ANR	520936	Symbol	& v		520320						
ANR	520937	Symbol	* dims		520320						
ANR	520938	Symbol	VT_VARIANT		520320						
ANR	520939	Symbol	safe_emalloc		520320						
ANR	520940	Symbol	vt		520320						
ANR	520941	Symbol	V_ARRAY		520320						
ANR	520942	Symbol	object		520320						
ANR	520943	Function	saproxy_object_set	280:0:7562:7625							
ANR	520944	FunctionDef	"saproxy_object_set (zval * * property , zval * value)"		520943	0					
ANR	520945	CompoundStatement		281:0:7623:7625	520943	0					
ANR	520946	ReturnType	static void		520943	1					
ANR	520947	Identifier	saproxy_object_set		520943	2					
ANR	520948	ParameterList	"zval * * property , zval * value"		520943	3					
ANR	520949	Parameter	zval * * property	280:31:7593:7607	520943	0	True				
ANR	520950	ParameterType	zval * *		520943	0					
ANR	520951	Identifier	property		520943	1					
ANR	520952	Parameter	zval * value	280:48:7610:7620	520943	1	True				
ANR	520953	ParameterType	zval *		520943	0					
ANR	520954	Identifier	value		520943	1					
ANR	520955	CFGEntryNode	ENTRY		520943		True				
ANR	520956	CFGExitNode	EXIT		520943		True				
ANR	520957	Symbol	property		520943						
ANR	520958	Symbol	value		520943						
ANR	520959	Function	saproxy_object_get	284:0:7628:7733							
ANR	520960	FunctionDef	saproxy_object_get (zval * property)		520959	0					
ANR	520961	CompoundStatement		285:0:7676:7733	520959	0					
ANR	520962	ReturnStatement	return NULL ;	287:1:7720:7731	520959	0	True				
ANR	520963	Identifier	NULL		520959	0					
ANR	520964	ReturnType	static zval *		520959	1					
ANR	520965	Identifier	saproxy_object_get		520959	2					
ANR	520966	ParameterList	zval * property		520959	3					
ANR	520967	Parameter	zval * property	284:32:7660:7673	520959	0	True				
ANR	520968	ParameterType	zval *		520959	0					
ANR	520969	Identifier	property		520959	1					
ANR	520970	CFGEntryNode	ENTRY		520959		True				
ANR	520971	CFGExitNode	EXIT		520959		True				
ANR	520972	Symbol	NULL		520959						
ANR	520973	Symbol	property		520959						
ANR	520974	Function	saproxy_property_exists	291:0:7743:7876							
ANR	520975	FunctionDef	"saproxy_property_exists (zval * object , zval * member , int check_empty , void * * cache_slot)"		520974	0					
ANR	520976	CompoundStatement		292:0:7842:7876	520974	0					
ANR	520977	ReturnStatement	return 0 ;	294:1:7866:7874	520974	0	True				
ANR	520978	PrimaryExpression	0		520974	0					
ANR	520979	ReturnType	static int		520974	1					
ANR	520980	Identifier	saproxy_property_exists		520974	2					
ANR	520981	ParameterList	"zval * object , zval * member , int check_empty , void * * cache_slot"		520974	3					
ANR	520982	Parameter	zval * object	291:35:7778:7789	520974	0	True				
ANR	520983	ParameterType	zval *		520974	0					
ANR	520984	Identifier	object		520974	1					
ANR	520985	Parameter	zval * member	291:49:7792:7803	520974	1	True				
ANR	520986	ParameterType	zval *		520974	0					
ANR	520987	Identifier	member		520974	1					
ANR	520988	Parameter	int check_empty	291:63:7806:7820	520974	2	True				
ANR	520989	ParameterType	int		520974	0					
ANR	520990	Identifier	check_empty		520974	1					
ANR	520991	Parameter	void * * cache_slot	291:80:7823:7839	520974	3	True				
ANR	520992	ParameterType	void * *		520974	0					
ANR	520993	Identifier	cache_slot		520974	1					
ANR	520994	CFGEntryNode	ENTRY		520974		True				
ANR	520995	CFGExitNode	EXIT		520974		True				
ANR	520996	Symbol	cache_slot		520974						
ANR	520997	Symbol	check_empty		520974						
ANR	520998	Symbol	member		520974						
ANR	520999	Symbol	object		520974						
ANR	521000	Function	saproxy_dimension_exists	297:0:7879:8056							
ANR	521001	FunctionDef	"saproxy_dimension_exists (zval * object , zval * member , int check_empty)"		521000	0					
ANR	521002	CompoundStatement		298:0:7960:8056	521000	0					
ANR	521003	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Operation not yet supported on a COM object"" )"	299:1:7963:8043	521000	0	True				
ANR	521004	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Operation not yet supported on a COM object"" )"		521000	0					
ANR	521005	Callee	php_error_docref		521000	0					
ANR	521006	Identifier	php_error_docref		521000	0					
ANR	521007	ArgumentList	NULL		521000	1					
ANR	521008	Argument	NULL		521000	0					
ANR	521009	Identifier	NULL		521000	0					
ANR	521010	Argument	E_WARNING		521000	1					
ANR	521011	Identifier	E_WARNING		521000	0					
ANR	521012	Argument	"""Operation not yet supported on a COM object"""		521000	2					
ANR	521013	PrimaryExpression	"""Operation not yet supported on a COM object"""		521000	0					
ANR	521014	ReturnStatement	return 0 ;	300:1:8046:8054	521000	1	True				
ANR	521015	PrimaryExpression	0		521000	0					
ANR	521016	ReturnType	static int		521000	1					
ANR	521017	Identifier	saproxy_dimension_exists		521000	2					
ANR	521018	ParameterList	"zval * object , zval * member , int check_empty"		521000	3					
ANR	521019	Parameter	zval * object	297:36:7915:7926	521000	0	True				
ANR	521020	ParameterType	zval *		521000	0					
ANR	521021	Identifier	object		521000	1					
ANR	521022	Parameter	zval * member	297:50:7929:7940	521000	1	True				
ANR	521023	ParameterType	zval *		521000	0					
ANR	521024	Identifier	member		521000	1					
ANR	521025	Parameter	int check_empty	297:64:7943:7957	521000	2	True				
ANR	521026	ParameterType	int		521000	0					
ANR	521027	Identifier	check_empty		521000	1					
ANR	521028	CFGEntryNode	ENTRY		521000		True				
ANR	521029	CFGExitNode	EXIT		521000		True				
ANR	521030	Symbol	E_WARNING		521000						
ANR	521031	Symbol	check_empty		521000						
ANR	521032	Symbol	NULL		521000						
ANR	521033	Symbol	member		521000						
ANR	521034	Symbol	object		521000						
ANR	521035	Function	saproxy_property_delete	303:0:8059:8226							
ANR	521036	FunctionDef	"saproxy_property_delete (zval * object , zval * member , void * * cache_slot)"		521035	0					
ANR	521037	CompoundStatement		304:0:8142:8226	521035	0					
ANR	521038	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot delete properties from a COM object"" )"	305:1:8145:8224	521035	0	True				
ANR	521039	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot delete properties from a COM object"" )"		521035	0					
ANR	521040	Callee	php_error_docref		521035	0					
ANR	521041	Identifier	php_error_docref		521035	0					
ANR	521042	ArgumentList	NULL		521035	1					
ANR	521043	Argument	NULL		521035	0					
ANR	521044	Identifier	NULL		521035	0					
ANR	521045	Argument	E_WARNING		521035	1					
ANR	521046	Identifier	E_WARNING		521035	0					
ANR	521047	Argument	"""Cannot delete properties from a COM object"""		521035	2					
ANR	521048	PrimaryExpression	"""Cannot delete properties from a COM object"""		521035	0					
ANR	521049	ReturnType	static void		521035	1					
ANR	521050	Identifier	saproxy_property_delete		521035	2					
ANR	521051	ParameterList	"zval * object , zval * member , void * * cache_slot"		521035	3					
ANR	521052	Parameter	zval * object	303:36:8095:8106	521035	0	True				
ANR	521053	ParameterType	zval *		521035	0					
ANR	521054	Identifier	object		521035	1					
ANR	521055	Parameter	zval * member	303:50:8109:8120	521035	1	True				
ANR	521056	ParameterType	zval *		521035	0					
ANR	521057	Identifier	member		521035	1					
ANR	521058	Parameter	void * * cache_slot	303:64:8123:8139	521035	2	True				
ANR	521059	ParameterType	void * *		521035	0					
ANR	521060	Identifier	cache_slot		521035	1					
ANR	521061	CFGEntryNode	ENTRY		521035		True				
ANR	521062	CFGExitNode	EXIT		521035		True				
ANR	521063	Symbol	cache_slot		521035						
ANR	521064	Symbol	E_WARNING		521035						
ANR	521065	Symbol	NULL		521035						
ANR	521066	Symbol	member		521035						
ANR	521067	Symbol	object		521035						
ANR	521068	Function	saproxy_dimension_delete	308:0:8229:8378							
ANR	521069	FunctionDef	"saproxy_dimension_delete (zval * object , zval * offset)"		521068	0					
ANR	521070	CompoundStatement		309:0:8294:8378	521068	0					
ANR	521071	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot delete properties from a COM object"" )"	310:1:8297:8376	521068	0	True				
ANR	521072	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot delete properties from a COM object"" )"		521068	0					
ANR	521073	Callee	php_error_docref		521068	0					
ANR	521074	Identifier	php_error_docref		521068	0					
ANR	521075	ArgumentList	NULL		521068	1					
ANR	521076	Argument	NULL		521068	0					
ANR	521077	Identifier	NULL		521068	0					
ANR	521078	Argument	E_WARNING		521068	1					
ANR	521079	Identifier	E_WARNING		521068	0					
ANR	521080	Argument	"""Cannot delete properties from a COM object"""		521068	2					
ANR	521081	PrimaryExpression	"""Cannot delete properties from a COM object"""		521068	0					
ANR	521082	ReturnType	static void		521068	1					
ANR	521083	Identifier	saproxy_dimension_delete		521068	2					
ANR	521084	ParameterList	"zval * object , zval * offset"		521068	3					
ANR	521085	Parameter	zval * object	308:37:8266:8277	521068	0	True				
ANR	521086	ParameterType	zval *		521068	0					
ANR	521087	Identifier	object		521068	1					
ANR	521088	Parameter	zval * offset	308:51:8280:8291	521068	1	True				
ANR	521089	ParameterType	zval *		521068	0					
ANR	521090	Identifier	offset		521068	1					
ANR	521091	CFGEntryNode	ENTRY		521068		True				
ANR	521092	CFGExitNode	EXIT		521068		True				
ANR	521093	Symbol	E_WARNING		521068						
ANR	521094	Symbol	NULL		521068						
ANR	521095	Symbol	offset		521068						
ANR	521096	Symbol	object		521068						
ANR	521097	Function	saproxy_properties_get	313:0:8381:8473							
ANR	521098	FunctionDef	saproxy_properties_get (zval * object)		521097	0					
ANR	521099	CompoundStatement		314:0:8436:8473	521097	0					
ANR	521100	ReturnStatement	return NULL ;	316:1:8460:8471	521097	0	True				
ANR	521101	Identifier	NULL		521097	0					
ANR	521102	ReturnType	static HashTable *		521097	1					
ANR	521103	Identifier	saproxy_properties_get		521097	2					
ANR	521104	ParameterList	zval * object		521097	3					
ANR	521105	Parameter	zval * object	313:41:8422:8433	521097	0	True				
ANR	521106	ParameterType	zval *		521097	0					
ANR	521107	Identifier	object		521097	1					
ANR	521108	CFGEntryNode	ENTRY		521097		True				
ANR	521109	CFGExitNode	EXIT		521097		True				
ANR	521110	Symbol	NULL		521097						
ANR	521111	Symbol	object		521097						
ANR	521112	Function	saproxy_method_get	319:0:8476:8616							
ANR	521113	FunctionDef	"saproxy_method_get (zend_object * * object , zend_string * name , const zval * key)"		521112	0					
ANR	521114	CompoundStatement		320:0:8582:8616	521112	0					
ANR	521115	ReturnStatement	return NULL ;	322:1:8603:8614	521112	0	True				
ANR	521116	Identifier	NULL		521112	0					
ANR	521117	ReturnType	static union _zend_function *		521112	1					
ANR	521118	Identifier	saproxy_method_get		521112	2					
ANR	521119	ParameterList	"zend_object * * object , zend_string * name , const zval * key"		521112	3					
ANR	521120	Parameter	zend_object * * object	319:48:8524:8543	521112	0	True				
ANR	521121	ParameterType	zend_object * *		521112	0					
ANR	521122	Identifier	object		521112	1					
ANR	521123	Parameter	zend_string * name	319:70:8546:8562	521112	1	True				
ANR	521124	ParameterType	zend_string *		521112	0					
ANR	521125	Identifier	name		521112	1					
ANR	521126	Parameter	const zval * key	319:89:8565:8579	521112	2	True				
ANR	521127	ParameterType	const zval *		521112	0					
ANR	521128	Identifier	key		521112	1					
ANR	521129	CFGEntryNode	ENTRY		521112		True				
ANR	521130	CFGExitNode	EXIT		521112		True				
ANR	521131	Symbol	NULL		521112						
ANR	521132	Symbol	name		521112						
ANR	521133	Symbol	key		521112						
ANR	521134	Symbol	object		521112						
ANR	521135	Function	saproxy_constructor_get	330:0:8744:8865							
ANR	521136	FunctionDef	saproxy_constructor_get (zend_object * object)		521135	0					
ANR	521137	CompoundStatement		331:0:8818:8865	521135	0					
ANR	521138	ReturnStatement	return NULL ;	333:1:8852:8863	521135	0	True				
ANR	521139	Identifier	NULL		521135	0					
ANR	521140	ReturnType	static union _zend_function *		521135	1					
ANR	521141	Identifier	saproxy_constructor_get		521135	2					
ANR	521142	ParameterList	zend_object * object		521135	3					
ANR	521143	Parameter	zend_object * object	330:53:8797:8815	521135	0	True				
ANR	521144	ParameterType	zend_object *		521135	0					
ANR	521145	Identifier	object		521135	1					
ANR	521146	CFGEntryNode	ENTRY		521135		True				
ANR	521147	CFGExitNode	EXIT		521135		True				
ANR	521148	Symbol	NULL		521135						
ANR	521149	Symbol	object		521135						
ANR	521150	Function	saproxy_class_name_get	336:0:8868:9001							
ANR	521151	FunctionDef	saproxy_class_name_get (const zend_object * object)		521150	0					
ANR	521152	CompoundStatement		337:0:8938:9001	521150	0					
ANR	521153	ReturnStatement	return zend_string_copy ( php_com_saproxy_class_entry -> name ) ;	338:1:8941:8999	521150	0	True				
ANR	521154	CallExpression	zend_string_copy ( php_com_saproxy_class_entry -> name )		521150	0					
ANR	521155	Callee	zend_string_copy		521150	0					
ANR	521156	Identifier	zend_string_copy		521150	0					
ANR	521157	ArgumentList	php_com_saproxy_class_entry -> name		521150	1					
ANR	521158	Argument	php_com_saproxy_class_entry -> name		521150	0					
ANR	521159	PtrMemberAccess	php_com_saproxy_class_entry -> name		521150	0					
ANR	521160	Identifier	php_com_saproxy_class_entry		521150	0					
ANR	521161	Identifier	name		521150	1					
ANR	521162	ReturnType	static zend_string *		521150	1					
ANR	521163	Identifier	saproxy_class_name_get		521150	2					
ANR	521164	ParameterList	const zend_object * object		521150	3					
ANR	521165	Parameter	const zend_object * object	336:43:8911:8935	521150	0	True				
ANR	521166	ParameterType	const zend_object *		521150	0					
ANR	521167	Identifier	object		521150	1					
ANR	521168	CFGEntryNode	ENTRY		521150		True				
ANR	521169	CFGExitNode	EXIT		521150		True				
ANR	521170	Symbol	* php_com_saproxy_class_entry		521150						
ANR	521171	Symbol	php_com_saproxy_class_entry -> name		521150						
ANR	521172	Symbol	zend_string_copy		521150						
ANR	521173	Symbol	object		521150						
ANR	521174	Symbol	php_com_saproxy_class_entry		521150						
ANR	521175	Function	saproxy_objects_compare	341:0:9004:9083							
ANR	521176	FunctionDef	"saproxy_objects_compare (zval * object1 , zval * object2)"		521175	0					
ANR	521177	CompoundStatement		342:0:9069:9083	521175	0					
ANR	521178	ReturnStatement	return - 1 ;	343:1:9072:9081	521175	0	True				
ANR	521179	UnaryOperationExpression	- 1		521175	0					
ANR	521180	UnaryOperator	-		521175	0					
ANR	521181	PrimaryExpression	1		521175	1					
ANR	521182	ReturnType	static int		521175	1					
ANR	521183	Identifier	saproxy_objects_compare		521175	2					
ANR	521184	ParameterList	"zval * object1 , zval * object2"		521175	3					
ANR	521185	Parameter	zval * object1	341:35:9039:9051	521175	0	True				
ANR	521186	ParameterType	zval *		521175	0					
ANR	521187	Identifier	object1		521175	1					
ANR	521188	Parameter	zval * object2	341:50:9054:9066	521175	1	True				
ANR	521189	ParameterType	zval *		521175	0					
ANR	521190	Identifier	object2		521175	1					
ANR	521191	CFGEntryNode	ENTRY		521175		True				
ANR	521192	CFGExitNode	EXIT		521175		True				
ANR	521193	Symbol	object2		521175						
ANR	521194	Symbol	object1		521175						
ANR	521195	Function	saproxy_object_cast	346:0:9086:9177							
ANR	521196	FunctionDef	"saproxy_object_cast (zval * readobj , zval * writeobj , int type)"		521195	0					
ANR	521197	CompoundStatement		347:0:9158:9177	521195	0					
ANR	521198	ReturnStatement	return FAILURE ;	348:1:9161:9175	521195	0	True				
ANR	521199	Identifier	FAILURE		521195	0					
ANR	521200	ReturnType	static int		521195	1					
ANR	521201	Identifier	saproxy_object_cast		521195	2					
ANR	521202	ParameterList	"zval * readobj , zval * writeobj , int type"		521195	3					
ANR	521203	Parameter	zval * readobj	346:31:9117:9129	521195	0	True				
ANR	521204	ParameterType	zval *		521195	0					
ANR	521205	Identifier	readobj		521195	1					
ANR	521206	Parameter	zval * writeobj	346:46:9132:9145	521195	1	True				
ANR	521207	ParameterType	zval *		521195	0					
ANR	521208	Identifier	writeobj		521195	1					
ANR	521209	Parameter	int type	346:62:9148:9155	521195	2	True				
ANR	521210	ParameterType	int		521195	0					
ANR	521211	Identifier	type		521195	1					
ANR	521212	CFGEntryNode	ENTRY		521195		True				
ANR	521213	CFGExitNode	EXIT		521195		True				
ANR	521214	Symbol	readobj		521195						
ANR	521215	Symbol	writeobj		521195						
ANR	521216	Symbol	type		521195						
ANR	521217	Symbol	FAILURE		521195						
ANR	521218	Function	saproxy_count_elements	351:0:9180:9570							
ANR	521219	FunctionDef	"saproxy_count_elements (zval * object , zend_long * count)"		521218	0					
ANR	521220	CompoundStatement		352:0:9246:9570	521218	0					
ANR	521221	IdentifierDeclStatement	php_com_saproxy * proxy = SA_FETCH ( object ) ;	353:1:9249:9290	521218	0	True				
ANR	521222	IdentifierDecl	* proxy = SA_FETCH ( object )		521218	0					
ANR	521223	IdentifierDeclType	php_com_saproxy *		521218	0					
ANR	521224	Identifier	proxy		521218	1					
ANR	521225	AssignmentExpression	* proxy = SA_FETCH ( object )		521218	2		=			
ANR	521226	Identifier	proxy		521218	0					
ANR	521227	CallExpression	SA_FETCH ( object )		521218	1					
ANR	521228	Callee	SA_FETCH		521218	0					
ANR	521229	Identifier	SA_FETCH		521218	0					
ANR	521230	ArgumentList	object		521218	1					
ANR	521231	Argument	object		521218	0					
ANR	521232	Identifier	object		521218	0					
ANR	521233	IdentifierDeclStatement	"LONG ubound , lbound ;"	354:1:9293:9312	521218	1	True				
ANR	521234	IdentifierDecl	ubound		521218	0					
ANR	521235	IdentifierDeclType	LONG		521218	0					
ANR	521236	Identifier	ubound		521218	1					
ANR	521237	IdentifierDecl	lbound		521218	1					
ANR	521238	IdentifierDeclType	LONG		521218	0					
ANR	521239	Identifier	lbound		521218	1					
ANR	521240	IfStatement	if ( ! V_ISARRAY ( & proxy -> obj -> v ) )		521218	2					
ANR	521241	Condition	! V_ISARRAY ( & proxy -> obj -> v )	356:5:9320:9345	521218	0	True				
ANR	521242	UnaryOperationExpression	! V_ISARRAY ( & proxy -> obj -> v )		521218	0					
ANR	521243	UnaryOperator	!		521218	0					
ANR	521244	CallExpression	V_ISARRAY ( & proxy -> obj -> v )		521218	1					
ANR	521245	Callee	V_ISARRAY		521218	0					
ANR	521246	Identifier	V_ISARRAY		521218	0					
ANR	521247	ArgumentList	& proxy -> obj -> v		521218	1					
ANR	521248	Argument	& proxy -> obj -> v		521218	0					
ANR	521249	UnaryOperationExpression	& proxy -> obj -> v		521218	0					
ANR	521250	UnaryOperator	&		521218	0					
ANR	521251	PtrMemberAccess	proxy -> obj -> v		521218	1					
ANR	521252	PtrMemberAccess	proxy -> obj		521218	0					
ANR	521253	Identifier	proxy		521218	0					
ANR	521254	Identifier	obj		521218	1					
ANR	521255	Identifier	v		521218	1					
ANR	521256	CompoundStatement		5:33:101:101	521218	1					
ANR	521257	ReturnStatement	return FAILURE ;	357:2:9352:9366	521218	0	True				
ANR	521258	Identifier	FAILURE		521218	0					
ANR	521259	ExpressionStatement	"SafeArrayGetLBound ( V_ARRAY ( & proxy -> obj -> v ) , proxy -> dimensions , & lbound )"	360:1:9373:9444	521218	3	True				
ANR	521260	CallExpression	"SafeArrayGetLBound ( V_ARRAY ( & proxy -> obj -> v ) , proxy -> dimensions , & lbound )"		521218	0					
ANR	521261	Callee	SafeArrayGetLBound		521218	0					
ANR	521262	Identifier	SafeArrayGetLBound		521218	0					
ANR	521263	ArgumentList	V_ARRAY ( & proxy -> obj -> v )		521218	1					
ANR	521264	Argument	V_ARRAY ( & proxy -> obj -> v )		521218	0					
ANR	521265	CallExpression	V_ARRAY ( & proxy -> obj -> v )		521218	0					
ANR	521266	Callee	V_ARRAY		521218	0					
ANR	521267	Identifier	V_ARRAY		521218	0					
ANR	521268	ArgumentList	& proxy -> obj -> v		521218	1					
ANR	521269	Argument	& proxy -> obj -> v		521218	0					
ANR	521270	UnaryOperationExpression	& proxy -> obj -> v		521218	0					
ANR	521271	UnaryOperator	&		521218	0					
ANR	521272	PtrMemberAccess	proxy -> obj -> v		521218	1					
ANR	521273	PtrMemberAccess	proxy -> obj		521218	0					
ANR	521274	Identifier	proxy		521218	0					
ANR	521275	Identifier	obj		521218	1					
ANR	521276	Identifier	v		521218	1					
ANR	521277	Argument	proxy -> dimensions		521218	1					
ANR	521278	PtrMemberAccess	proxy -> dimensions		521218	0					
ANR	521279	Identifier	proxy		521218	0					
ANR	521280	Identifier	dimensions		521218	1					
ANR	521281	Argument	& lbound		521218	2					
ANR	521282	UnaryOperationExpression	& lbound		521218	0					
ANR	521283	UnaryOperator	&		521218	0					
ANR	521284	Identifier	lbound		521218	1					
ANR	521285	ExpressionStatement	"SafeArrayGetUBound ( V_ARRAY ( & proxy -> obj -> v ) , proxy -> dimensions , & ubound )"	361:1:9447:9518	521218	4	True				
ANR	521286	CallExpression	"SafeArrayGetUBound ( V_ARRAY ( & proxy -> obj -> v ) , proxy -> dimensions , & ubound )"		521218	0					
ANR	521287	Callee	SafeArrayGetUBound		521218	0					
ANR	521288	Identifier	SafeArrayGetUBound		521218	0					
ANR	521289	ArgumentList	V_ARRAY ( & proxy -> obj -> v )		521218	1					
ANR	521290	Argument	V_ARRAY ( & proxy -> obj -> v )		521218	0					
ANR	521291	CallExpression	V_ARRAY ( & proxy -> obj -> v )		521218	0					
ANR	521292	Callee	V_ARRAY		521218	0					
ANR	521293	Identifier	V_ARRAY		521218	0					
ANR	521294	ArgumentList	& proxy -> obj -> v		521218	1					
ANR	521295	Argument	& proxy -> obj -> v		521218	0					
ANR	521296	UnaryOperationExpression	& proxy -> obj -> v		521218	0					
ANR	521297	UnaryOperator	&		521218	0					
ANR	521298	PtrMemberAccess	proxy -> obj -> v		521218	1					
ANR	521299	PtrMemberAccess	proxy -> obj		521218	0					
ANR	521300	Identifier	proxy		521218	0					
ANR	521301	Identifier	obj		521218	1					
ANR	521302	Identifier	v		521218	1					
ANR	521303	Argument	proxy -> dimensions		521218	1					
ANR	521304	PtrMemberAccess	proxy -> dimensions		521218	0					
ANR	521305	Identifier	proxy		521218	0					
ANR	521306	Identifier	dimensions		521218	1					
ANR	521307	Argument	& ubound		521218	2					
ANR	521308	UnaryOperationExpression	& ubound		521218	0					
ANR	521309	UnaryOperator	&		521218	0					
ANR	521310	Identifier	ubound		521218	1					
ANR	521311	ExpressionStatement	* count = ubound - lbound + 1	363:1:9522:9550	521218	5	True				
ANR	521312	AssignmentExpression	* count = ubound - lbound + 1		521218	0		=			
ANR	521313	UnaryOperationExpression	* count		521218	0					
ANR	521314	UnaryOperator	*		521218	0					
ANR	521315	Identifier	count		521218	1					
ANR	521316	AdditiveExpression	ubound - lbound + 1		521218	1		-			
ANR	521317	Identifier	ubound		521218	0					
ANR	521318	AdditiveExpression	lbound + 1		521218	1		+			
ANR	521319	Identifier	lbound		521218	0					
ANR	521320	PrimaryExpression	1		521218	1					
ANR	521321	ReturnStatement	return SUCCESS ;	365:1:9554:9568	521218	6	True				
ANR	521322	Identifier	SUCCESS		521218	0					
ANR	521323	ReturnType	static int		521218	1					
ANR	521324	Identifier	saproxy_count_elements		521218	2					
ANR	521325	ParameterList	"zval * object , zend_long * count"		521218	3					
ANR	521326	Parameter	zval * object	351:34:9214:9225	521218	0	True				
ANR	521327	ParameterType	zval *		521218	0					
ANR	521328	Identifier	object		521218	1					
ANR	521329	Parameter	zend_long * count	351:48:9228:9243	521218	1	True				
ANR	521330	ParameterType	zend_long *		521218	0					
ANR	521331	Identifier	count		521218	1					
ANR	521332	CFGEntryNode	ENTRY		521218		True				
ANR	521333	CFGExitNode	EXIT		521218		True				
ANR	521334	Symbol	& proxy -> obj -> v		521218						
ANR	521335	Symbol	SUCCESS		521218						
ANR	521336	Symbol	SA_FETCH		521218						
ANR	521337	Symbol	proxy -> dimensions		521218						
ANR	521338	Symbol	count		521218						
ANR	521339	Symbol	ubound		521218						
ANR	521340	Symbol	FAILURE		521218						
ANR	521341	Symbol	proxy -> obj		521218						
ANR	521342	Symbol	proxy		521218						
ANR	521343	Symbol	* count		521218						
ANR	521344	Symbol	& lbound		521218						
ANR	521345	Symbol	lbound		521218						
ANR	521346	Symbol	V_ISARRAY		521218						
ANR	521347	Symbol	& ubound		521218						
ANR	521348	Symbol	* proxy		521218						
ANR	521349	Symbol	V_ARRAY		521218						
ANR	521350	Symbol	object		521218						
ANR	521351	Function	saproxy_free_storage	368:0:9573:9888							
ANR	521352	FunctionDef	saproxy_free_storage (zend_object * object)		521351	0					
ANR	521353	CompoundStatement		369:0:9627:9888	521351	0					
ANR	521354	IdentifierDeclStatement	php_com_saproxy * proxy = ( php_com_saproxy * ) object ;	370:1:9630:9680	521351	0	True				
ANR	521355	IdentifierDecl	* proxy = ( php_com_saproxy * ) object		521351	0					
ANR	521356	IdentifierDeclType	php_com_saproxy *		521351	0					
ANR	521357	Identifier	proxy		521351	1					
ANR	521358	AssignmentExpression	* proxy = ( php_com_saproxy * ) object		521351	2		=			
ANR	521359	Identifier	proxy		521351	0					
ANR	521360	CastExpression	( php_com_saproxy * ) object		521351	1					
ANR	521361	CastTarget	php_com_saproxy *		521351	0					
ANR	521362	Identifier	object		521351	1					
ANR	521363	ExpressionStatement	zval_ptr_dtor ( proxy -> zobj )	379:1:9836:9862	521351	1	True				
ANR	521364	CallExpression	zval_ptr_dtor ( proxy -> zobj )		521351	0					
ANR	521365	Callee	zval_ptr_dtor		521351	0					
ANR	521366	Identifier	zval_ptr_dtor		521351	0					
ANR	521367	ArgumentList	proxy -> zobj		521351	1					
ANR	521368	Argument	proxy -> zobj		521351	0					
ANR	521369	PtrMemberAccess	proxy -> zobj		521351	0					
ANR	521370	Identifier	proxy		521351	0					
ANR	521371	Identifier	zobj		521351	1					
ANR	521372	ExpressionStatement	efree ( proxy -> indices )	380:1:9865:9886	521351	2	True				
ANR	521373	CallExpression	efree ( proxy -> indices )		521351	0					
ANR	521374	Callee	efree		521351	0					
ANR	521375	Identifier	efree		521351	0					
ANR	521376	ArgumentList	proxy -> indices		521351	1					
ANR	521377	Argument	proxy -> indices		521351	0					
ANR	521378	PtrMemberAccess	proxy -> indices		521351	0					
ANR	521379	Identifier	proxy		521351	0					
ANR	521380	Identifier	indices		521351	1					
ANR	521381	ReturnType	static void		521351	1					
ANR	521382	Identifier	saproxy_free_storage		521351	2					
ANR	521383	ParameterList	zend_object * object		521351	3					
ANR	521384	Parameter	zend_object * object	368:33:9606:9624	521351	0	True				
ANR	521385	ParameterType	zend_object *		521351	0					
ANR	521386	Identifier	object		521351	1					
ANR	521387	CFGEntryNode	ENTRY		521351		True				
ANR	521388	CFGExitNode	EXIT		521351		True				
ANR	521389	Symbol	proxy		521351						
ANR	521390	Symbol	* proxy		521351						
ANR	521391	Symbol	proxy -> indices		521351						
ANR	521392	Symbol	proxy -> zobj		521351						
ANR	521393	Symbol	object		521351						
ANR	521394	Function	saproxy_clone	383:0:9891:10320							
ANR	521395	FunctionDef	saproxy_clone (zval * object)		521394	0					
ANR	521396	CompoundStatement		384:0:9939:10320	521394	0					
ANR	521397	IdentifierDeclStatement	php_com_saproxy * proxy = ( php_com_saproxy * ) Z_OBJ_P ( object ) ;	385:1:9942:10001	521394	0	True				
ANR	521398	IdentifierDecl	* proxy = ( php_com_saproxy * ) Z_OBJ_P ( object )		521394	0					
ANR	521399	IdentifierDeclType	php_com_saproxy *		521394	0					
ANR	521400	Identifier	proxy		521394	1					
ANR	521401	AssignmentExpression	* proxy = ( php_com_saproxy * ) Z_OBJ_P ( object )		521394	2		=			
ANR	521402	Identifier	proxy		521394	0					
ANR	521403	CastExpression	( php_com_saproxy * ) Z_OBJ_P ( object )		521394	1					
ANR	521404	CastTarget	php_com_saproxy *		521394	0					
ANR	521405	CallExpression	Z_OBJ_P ( object )		521394	1					
ANR	521406	Callee	Z_OBJ_P		521394	0					
ANR	521407	Identifier	Z_OBJ_P		521394	0					
ANR	521408	ArgumentList	object		521394	1					
ANR	521409	Argument	object		521394	0					
ANR	521410	Identifier	object		521394	0					
ANR	521411	IdentifierDeclStatement	php_com_saproxy * cloneproxy ;	386:1:10004:10031	521394	1	True				
ANR	521412	IdentifierDecl	* cloneproxy		521394	0					
ANR	521413	IdentifierDeclType	php_com_saproxy *		521394	0					
ANR	521414	Identifier	cloneproxy		521394	1					
ANR	521415	ExpressionStatement	cloneproxy = emalloc ( sizeof ( * cloneproxy ) )	388:1:10035:10076	521394	2	True				
ANR	521416	AssignmentExpression	cloneproxy = emalloc ( sizeof ( * cloneproxy ) )		521394	0		=			
ANR	521417	Identifier	cloneproxy		521394	0					
ANR	521418	CallExpression	emalloc ( sizeof ( * cloneproxy ) )		521394	1					
ANR	521419	Callee	emalloc		521394	0					
ANR	521420	Identifier	emalloc		521394	0					
ANR	521421	ArgumentList	sizeof ( * cloneproxy )		521394	1					
ANR	521422	Argument	sizeof ( * cloneproxy )		521394	0					
ANR	521423	SizeofExpression	sizeof ( * cloneproxy )		521394	0					
ANR	521424	Sizeof	sizeof		521394	0					
ANR	521425	UnaryOperationExpression	* cloneproxy		521394	1					
ANR	521426	UnaryOperator	*		521394	0					
ANR	521427	Identifier	cloneproxy		521394	1					
ANR	521428	ExpressionStatement	"memcpy ( cloneproxy , proxy , sizeof ( * cloneproxy ) )"	389:1:10079:10125	521394	3	True				
ANR	521429	CallExpression	"memcpy ( cloneproxy , proxy , sizeof ( * cloneproxy ) )"		521394	0					
ANR	521430	Callee	memcpy		521394	0					
ANR	521431	Identifier	memcpy		521394	0					
ANR	521432	ArgumentList	cloneproxy		521394	1					
ANR	521433	Argument	cloneproxy		521394	0					
ANR	521434	Identifier	cloneproxy		521394	0					
ANR	521435	Argument	proxy		521394	1					
ANR	521436	Identifier	proxy		521394	0					
ANR	521437	Argument	sizeof ( * cloneproxy )		521394	2					
ANR	521438	SizeofExpression	sizeof ( * cloneproxy )		521394	0					
ANR	521439	Sizeof	sizeof		521394	0					
ANR	521440	UnaryOperationExpression	* cloneproxy		521394	1					
ANR	521441	UnaryOperator	*		521394	0					
ANR	521442	Identifier	cloneproxy		521394	1					
ANR	521443	ExpressionStatement	Z_ADDREF_P ( cloneproxy -> zobj )	391:1:10129:10157	521394	4	True				
ANR	521444	CallExpression	Z_ADDREF_P ( cloneproxy -> zobj )		521394	0					
ANR	521445	Callee	Z_ADDREF_P		521394	0					
ANR	521446	Identifier	Z_ADDREF_P		521394	0					
ANR	521447	ArgumentList	cloneproxy -> zobj		521394	1					
ANR	521448	Argument	cloneproxy -> zobj		521394	0					
ANR	521449	PtrMemberAccess	cloneproxy -> zobj		521394	0					
ANR	521450	Identifier	cloneproxy		521394	0					
ANR	521451	Identifier	zobj		521394	1					
ANR	521452	ExpressionStatement	"cloneproxy -> indices = safe_emalloc ( cloneproxy -> dimensions , sizeof ( zval * ) , 0 )"	392:1:10160:10237	521394	5	True				
ANR	521453	AssignmentExpression	"cloneproxy -> indices = safe_emalloc ( cloneproxy -> dimensions , sizeof ( zval * ) , 0 )"		521394	0		=			
ANR	521454	PtrMemberAccess	cloneproxy -> indices		521394	0					
ANR	521455	Identifier	cloneproxy		521394	0					
ANR	521456	Identifier	indices		521394	1					
ANR	521457	CallExpression	"safe_emalloc ( cloneproxy -> dimensions , sizeof ( zval * ) , 0 )"		521394	1					
ANR	521458	Callee	safe_emalloc		521394	0					
ANR	521459	Identifier	safe_emalloc		521394	0					
ANR	521460	ArgumentList	cloneproxy -> dimensions		521394	1					
ANR	521461	Argument	cloneproxy -> dimensions		521394	0					
ANR	521462	PtrMemberAccess	cloneproxy -> dimensions		521394	0					
ANR	521463	Identifier	cloneproxy		521394	0					
ANR	521464	Identifier	dimensions		521394	1					
ANR	521465	Argument	sizeof ( zval * )		521394	1					
ANR	521466	SizeofExpression	sizeof ( zval * )		521394	0					
ANR	521467	Sizeof	sizeof		521394	0					
ANR	521468	SizeofOperand	zval *		521394	1					
ANR	521469	Argument	0		521394	2					
ANR	521470	PrimaryExpression	0		521394	0					
ANR	521471	ExpressionStatement	"clone_indices ( cloneproxy , proxy , proxy -> dimensions )"	393:1:10240:10291	521394	6	True				
ANR	521472	CallExpression	"clone_indices ( cloneproxy , proxy , proxy -> dimensions )"		521394	0					
ANR	521473	Callee	clone_indices		521394	0					
ANR	521474	Identifier	clone_indices		521394	0					
ANR	521475	ArgumentList	cloneproxy		521394	1					
ANR	521476	Argument	cloneproxy		521394	0					
ANR	521477	Identifier	cloneproxy		521394	0					
ANR	521478	Argument	proxy		521394	1					
ANR	521479	Identifier	proxy		521394	0					
ANR	521480	Argument	proxy -> dimensions		521394	2					
ANR	521481	PtrMemberAccess	proxy -> dimensions		521394	0					
ANR	521482	Identifier	proxy		521394	0					
ANR	521483	Identifier	dimensions		521394	1					
ANR	521484	ReturnStatement	return & cloneproxy -> std ;	395:1:10295:10318	521394	7	True				
ANR	521485	UnaryOperationExpression	& cloneproxy -> std		521394	0					
ANR	521486	UnaryOperator	&		521394	0					
ANR	521487	PtrMemberAccess	cloneproxy -> std		521394	1					
ANR	521488	Identifier	cloneproxy		521394	0					
ANR	521489	Identifier	std		521394	1					
ANR	521490	ReturnType	static zend_object *		521394	1					
ANR	521491	Identifier	saproxy_clone		521394	2					
ANR	521492	ParameterList	zval * object		521394	3					
ANR	521493	Parameter	zval * object	383:34:9925:9936	521394	0	True				
ANR	521494	ParameterType	zval *		521394	0					
ANR	521495	Identifier	object		521394	1					
ANR	521496	CFGEntryNode	ENTRY		521394		True				
ANR	521497	CFGExitNode	EXIT		521394		True				
ANR	521498	Symbol	cloneproxy -> zobj		521394						
ANR	521499	Symbol	cloneproxy -> indices		521394						
ANR	521500	Symbol	Z_OBJ_P		521394						
ANR	521501	Symbol	proxy -> dimensions		521394						
ANR	521502	Symbol	* cloneproxy		521394						
ANR	521503	Symbol	cloneproxy -> dimensions		521394						
ANR	521504	Symbol	proxy		521394						
ANR	521505	Symbol	& cloneproxy -> std		521394						
ANR	521506	Symbol	emalloc		521394						
ANR	521507	Symbol	* proxy		521394						
ANR	521508	Symbol	safe_emalloc		521394						
ANR	521509	Symbol	object		521394						
ANR	521510	Symbol	cloneproxy		521394						
ANR	521511	DeclStmt									
ANR	521512	Decl							zend_object_handlers	zend_object_handlers	php_com_saproxy_handlers
ANR	521513	Function	php_com_saproxy_create	424:0:10920:11740							
ANR	521514	FunctionDef	"php_com_saproxy_create (zval * com_object , zval * proxy_out , zval * index)"		521513	0					
ANR	521515	CompoundStatement		425:0:10995:11740	521513	0					
ANR	521516	IdentifierDeclStatement	"php_com_saproxy * proxy , * rel = NULL ;"	426:1:10998:11033	521513	0	True				
ANR	521517	IdentifierDecl	* proxy		521513	0					
ANR	521518	IdentifierDeclType	php_com_saproxy *		521513	0					
ANR	521519	Identifier	proxy		521513	1					
ANR	521520	IdentifierDecl	* rel = NULL		521513	1					
ANR	521521	IdentifierDeclType	php_com_saproxy *		521513	0					
ANR	521522	Identifier	rel		521513	1					
ANR	521523	AssignmentExpression	* rel = NULL		521513	2		=			
ANR	521524	Identifier	NULL		521513	0					
ANR	521525	Identifier	NULL		521513	1					
ANR	521526	ExpressionStatement	"proxy = ecalloc ( 1 , sizeof ( * proxy ) )"	428:1:11037:11071	521513	1	True				
ANR	521527	AssignmentExpression	"proxy = ecalloc ( 1 , sizeof ( * proxy ) )"		521513	0		=			
ANR	521528	Identifier	proxy		521513	0					
ANR	521529	CallExpression	"ecalloc ( 1 , sizeof ( * proxy ) )"		521513	1					
ANR	521530	Callee	ecalloc		521513	0					
ANR	521531	Identifier	ecalloc		521513	0					
ANR	521532	ArgumentList	1		521513	1					
ANR	521533	Argument	1		521513	0					
ANR	521534	PrimaryExpression	1		521513	0					
ANR	521535	Argument	sizeof ( * proxy )		521513	1					
ANR	521536	SizeofExpression	sizeof ( * proxy )		521513	0					
ANR	521537	Sizeof	sizeof		521513	0					
ANR	521538	UnaryOperationExpression	* proxy		521513	1					
ANR	521539	UnaryOperator	*		521513	0					
ANR	521540	Identifier	proxy		521513	1					
ANR	521541	ExpressionStatement	proxy -> dimensions = 1	429:1:11074:11095	521513	2	True				
ANR	521542	AssignmentExpression	proxy -> dimensions = 1		521513	0		=			
ANR	521543	PtrMemberAccess	proxy -> dimensions		521513	0					
ANR	521544	Identifier	proxy		521513	0					
ANR	521545	Identifier	dimensions		521513	1					
ANR	521546	PrimaryExpression	1		521513	1					
ANR	521547	IfStatement	if ( Z_OBJCE_P ( com_object ) == php_com_saproxy_class_entry )		521513	3					
ANR	521548	Condition	Z_OBJCE_P ( com_object ) == php_com_saproxy_class_entry	431:5:11103:11154	521513	0	True				
ANR	521549	EqualityExpression	Z_OBJCE_P ( com_object ) == php_com_saproxy_class_entry		521513	0		==			
ANR	521550	CallExpression	Z_OBJCE_P ( com_object )		521513	0					
ANR	521551	Callee	Z_OBJCE_P		521513	0					
ANR	521552	Identifier	Z_OBJCE_P		521513	0					
ANR	521553	ArgumentList	com_object		521513	1					
ANR	521554	Argument	com_object		521513	0					
ANR	521555	Identifier	com_object		521513	0					
ANR	521556	Identifier	php_com_saproxy_class_entry		521513	1					
ANR	521557	CompoundStatement		7:59:161:161	521513	1					
ANR	521558	ExpressionStatement	rel = SA_FETCH ( com_object )	432:2:11161:11187	521513	0	True				
ANR	521559	AssignmentExpression	rel = SA_FETCH ( com_object )		521513	0		=			
ANR	521560	Identifier	rel		521513	0					
ANR	521561	CallExpression	SA_FETCH ( com_object )		521513	1					
ANR	521562	Callee	SA_FETCH		521513	0					
ANR	521563	Identifier	SA_FETCH		521513	0					
ANR	521564	ArgumentList	com_object		521513	1					
ANR	521565	Argument	com_object		521513	0					
ANR	521566	Identifier	com_object		521513	0					
ANR	521567	ExpressionStatement	proxy -> obj = rel -> obj	433:2:11191:11212	521513	1	True				
ANR	521568	AssignmentExpression	proxy -> obj = rel -> obj		521513	0		=			
ANR	521569	PtrMemberAccess	proxy -> obj		521513	0					
ANR	521570	Identifier	proxy		521513	0					
ANR	521571	Identifier	obj		521513	1					
ANR	521572	PtrMemberAccess	rel -> obj		521513	1					
ANR	521573	Identifier	rel		521513	0					
ANR	521574	Identifier	obj		521513	1					
ANR	521575	ExpressionStatement	proxy -> zobj = rel -> zobj	434:2:11216:11239	521513	2	True				
ANR	521576	AssignmentExpression	proxy -> zobj = rel -> zobj		521513	0		=			
ANR	521577	PtrMemberAccess	proxy -> zobj		521513	0					
ANR	521578	Identifier	proxy		521513	0					
ANR	521579	Identifier	zobj		521513	1					
ANR	521580	PtrMemberAccess	rel -> zobj		521513	1					
ANR	521581	Identifier	rel		521513	0					
ANR	521582	Identifier	zobj		521513	1					
ANR	521583	ExpressionStatement	proxy -> dimensions += rel -> dimensions	435:2:11243:11279	521513	3	True				
ANR	521584	AssignmentExpression	proxy -> dimensions += rel -> dimensions		521513	0		+=			
ANR	521585	PtrMemberAccess	proxy -> dimensions		521513	0					
ANR	521586	Identifier	proxy		521513	0					
ANR	521587	Identifier	dimensions		521513	1					
ANR	521588	PtrMemberAccess	rel -> dimensions		521513	1					
ANR	521589	Identifier	rel		521513	0					
ANR	521590	Identifier	dimensions		521513	1					
ANR	521591	ElseStatement	else		521513	0					
ANR	521592	CompoundStatement		12:8:293:293	521513	0					
ANR	521593	ExpressionStatement	proxy -> obj = CDNO_FETCH ( com_object )	437:2:11293:11328	521513	0	True				
ANR	521594	AssignmentExpression	proxy -> obj = CDNO_FETCH ( com_object )		521513	0		=			
ANR	521595	PtrMemberAccess	proxy -> obj		521513	0					
ANR	521596	Identifier	proxy		521513	0					
ANR	521597	Identifier	obj		521513	1					
ANR	521598	CallExpression	CDNO_FETCH ( com_object )		521513	1					
ANR	521599	Callee	CDNO_FETCH		521513	0					
ANR	521600	Identifier	CDNO_FETCH		521513	0					
ANR	521601	ArgumentList	com_object		521513	1					
ANR	521602	Argument	com_object		521513	0					
ANR	521603	Identifier	com_object		521513	0					
ANR	521604	ExpressionStatement	proxy -> zobj = com_object	438:2:11332:11356	521513	1	True				
ANR	521605	AssignmentExpression	proxy -> zobj = com_object		521513	0		=			
ANR	521606	PtrMemberAccess	proxy -> zobj		521513	0					
ANR	521607	Identifier	proxy		521513	0					
ANR	521608	Identifier	zobj		521513	1					
ANR	521609	Identifier	com_object		521513	1					
ANR	521610	ExpressionStatement	Z_ADDREF_P ( proxy -> zobj )	441:1:11363:11386	521513	4	True				
ANR	521611	CallExpression	Z_ADDREF_P ( proxy -> zobj )		521513	0					
ANR	521612	Callee	Z_ADDREF_P		521513	0					
ANR	521613	Identifier	Z_ADDREF_P		521513	0					
ANR	521614	ArgumentList	proxy -> zobj		521513	1					
ANR	521615	Argument	proxy -> zobj		521513	0					
ANR	521616	PtrMemberAccess	proxy -> zobj		521513	0					
ANR	521617	Identifier	proxy		521513	0					
ANR	521618	Identifier	zobj		521513	1					
ANR	521619	ExpressionStatement	"proxy -> indices = safe_emalloc ( proxy -> dimensions , sizeof ( zval * ) , 0 )"	442:1:11389:11456	521513	5	True				
ANR	521620	AssignmentExpression	"proxy -> indices = safe_emalloc ( proxy -> dimensions , sizeof ( zval * ) , 0 )"		521513	0		=			
ANR	521621	PtrMemberAccess	proxy -> indices		521513	0					
ANR	521622	Identifier	proxy		521513	0					
ANR	521623	Identifier	indices		521513	1					
ANR	521624	CallExpression	"safe_emalloc ( proxy -> dimensions , sizeof ( zval * ) , 0 )"		521513	1					
ANR	521625	Callee	safe_emalloc		521513	0					
ANR	521626	Identifier	safe_emalloc		521513	0					
ANR	521627	ArgumentList	proxy -> dimensions		521513	1					
ANR	521628	Argument	proxy -> dimensions		521513	0					
ANR	521629	PtrMemberAccess	proxy -> dimensions		521513	0					
ANR	521630	Identifier	proxy		521513	0					
ANR	521631	Identifier	dimensions		521513	1					
ANR	521632	Argument	sizeof ( zval * )		521513	1					
ANR	521633	SizeofExpression	sizeof ( zval * )		521513	0					
ANR	521634	Sizeof	sizeof		521513	0					
ANR	521635	SizeofOperand	zval *		521513	1					
ANR	521636	Argument	0		521513	2					
ANR	521637	PrimaryExpression	0		521513	0					
ANR	521638	IfStatement	if ( rel )		521513	6					
ANR	521639	Condition	rel	444:5:11464:11466	521513	0	True				
ANR	521640	Identifier	rel		521513	0					
ANR	521641	CompoundStatement		20:10:473:473	521513	1					
ANR	521642	ExpressionStatement	"clone_indices ( proxy , rel , rel -> dimensions )"	445:2:11473:11515	521513	0	True				
ANR	521643	CallExpression	"clone_indices ( proxy , rel , rel -> dimensions )"		521513	0					
ANR	521644	Callee	clone_indices		521513	0					
ANR	521645	Identifier	clone_indices		521513	0					
ANR	521646	ArgumentList	proxy		521513	1					
ANR	521647	Argument	proxy		521513	0					
ANR	521648	Identifier	proxy		521513	0					
ANR	521649	Argument	rel		521513	1					
ANR	521650	Identifier	rel		521513	0					
ANR	521651	Argument	rel -> dimensions		521513	2					
ANR	521652	PtrMemberAccess	rel -> dimensions		521513	0					
ANR	521653	Identifier	rel		521513	0					
ANR	521654	Identifier	dimensions		521513	1					
ANR	521655	ExpressionStatement	"ZVAL_DUP ( & proxy -> indices [ proxy -> dimensions - 1 ] , index )"	448:1:11522:11575	521513	7	True				
ANR	521656	CallExpression	"ZVAL_DUP ( & proxy -> indices [ proxy -> dimensions - 1 ] , index )"		521513	0					
ANR	521657	Callee	ZVAL_DUP		521513	0					
ANR	521658	Identifier	ZVAL_DUP		521513	0					
ANR	521659	ArgumentList	& proxy -> indices [ proxy -> dimensions - 1 ]		521513	1					
ANR	521660	Argument	& proxy -> indices [ proxy -> dimensions - 1 ]		521513	0					
ANR	521661	UnaryOperationExpression	& proxy -> indices [ proxy -> dimensions - 1 ]		521513	0					
ANR	521662	UnaryOperator	&		521513	0					
ANR	521663	ArrayIndexing	proxy -> indices [ proxy -> dimensions - 1 ]		521513	1					
ANR	521664	PtrMemberAccess	proxy -> indices		521513	0					
ANR	521665	Identifier	proxy		521513	0					
ANR	521666	Identifier	indices		521513	1					
ANR	521667	AdditiveExpression	proxy -> dimensions - 1		521513	1		-			
ANR	521668	PtrMemberAccess	proxy -> dimensions		521513	0					
ANR	521669	Identifier	proxy		521513	0					
ANR	521670	Identifier	dimensions		521513	1					
ANR	521671	PrimaryExpression	1		521513	1					
ANR	521672	Argument	index		521513	1					
ANR	521673	Identifier	index		521513	0					
ANR	521674	ExpressionStatement	"zend_object_std_init ( & proxy -> std , php_com_saproxy_class_entry )"	450:1:11579:11641	521513	8	True				
ANR	521675	CallExpression	"zend_object_std_init ( & proxy -> std , php_com_saproxy_class_entry )"		521513	0					
ANR	521676	Callee	zend_object_std_init		521513	0					
ANR	521677	Identifier	zend_object_std_init		521513	0					
ANR	521678	ArgumentList	& proxy -> std		521513	1					
ANR	521679	Argument	& proxy -> std		521513	0					
ANR	521680	UnaryOperationExpression	& proxy -> std		521513	0					
ANR	521681	UnaryOperator	&		521513	0					
ANR	521682	PtrMemberAccess	proxy -> std		521513	1					
ANR	521683	Identifier	proxy		521513	0					
ANR	521684	Identifier	std		521513	1					
ANR	521685	Argument	php_com_saproxy_class_entry		521513	1					
ANR	521686	Identifier	php_com_saproxy_class_entry		521513	0					
ANR	521687	ExpressionStatement	proxy -> std . handlers = & php_com_saproxy_handlers	451:1:11644:11691	521513	9	True				
ANR	521688	AssignmentExpression	proxy -> std . handlers = & php_com_saproxy_handlers		521513	0		=			
ANR	521689	MemberAccess	proxy -> std . handlers		521513	0					
ANR	521690	PtrMemberAccess	proxy -> std		521513	0					
ANR	521691	Identifier	proxy		521513	0					
ANR	521692	Identifier	std		521513	1					
ANR	521693	Identifier	handlers		521513	1					
ANR	521694	UnaryOperationExpression	& php_com_saproxy_handlers		521513	1					
ANR	521695	UnaryOperator	&		521513	0					
ANR	521696	Identifier	php_com_saproxy_handlers		521513	1					
ANR	521697	ExpressionStatement	"ZVAL_OBJ ( proxy_out , & proxy -> std )"	452:1:11694:11726	521513	10	True				
ANR	521698	CallExpression	"ZVAL_OBJ ( proxy_out , & proxy -> std )"		521513	0					
ANR	521699	Callee	ZVAL_OBJ		521513	0					
ANR	521700	Identifier	ZVAL_OBJ		521513	0					
ANR	521701	ArgumentList	proxy_out		521513	1					
ANR	521702	Argument	proxy_out		521513	0					
ANR	521703	Identifier	proxy_out		521513	0					
ANR	521704	Argument	& proxy -> std		521513	1					
ANR	521705	UnaryOperationExpression	& proxy -> std		521513	0					
ANR	521706	UnaryOperator	&		521513	0					
ANR	521707	PtrMemberAccess	proxy -> std		521513	1					
ANR	521708	Identifier	proxy		521513	0					
ANR	521709	Identifier	std		521513	1					
ANR	521710	ReturnStatement	return 1 ;	454:1:11730:11738	521513	11	True				
ANR	521711	PrimaryExpression	1		521513	0					
ANR	521712	ReturnType	int		521513	1					
ANR	521713	Identifier	php_com_saproxy_create		521513	2					
ANR	521714	ParameterList	"zval * com_object , zval * proxy_out , zval * index"		521513	3					
ANR	521715	Parameter	zval * com_object	424:27:10947:10962	521513	0	True				
ANR	521716	ParameterType	zval *		521513	0					
ANR	521717	Identifier	com_object		521513	1					
ANR	521718	Parameter	zval * proxy_out	424:45:10965:10979	521513	1	True				
ANR	521719	ParameterType	zval *		521513	0					
ANR	521720	Identifier	proxy_out		521513	1					
ANR	521721	Parameter	zval * index	424:62:10982:10992	521513	2	True				
ANR	521722	ParameterType	zval *		521513	0					
ANR	521723	Identifier	index		521513	1					
ANR	521724	CFGEntryNode	ENTRY		521513		True				
ANR	521725	CFGExitNode	EXIT		521513		True				
ANR	521726	Symbol	* rel		521513						
ANR	521727	Symbol	& php_com_saproxy_handlers		521513						
ANR	521728	Symbol	rel -> dimensions		521513						
ANR	521729	Symbol	proxy -> indices		521513						
ANR	521730	Symbol	proxy -> obj		521513						
ANR	521731	Symbol	rel -> obj		521513						
ANR	521732	Symbol	rel -> zobj		521513						
ANR	521733	Symbol	proxy -> std		521513						
ANR	521734	Symbol	proxy_out		521513						
ANR	521735	Symbol	rel		521513						
ANR	521736	Symbol	Z_OBJCE_P		521513						
ANR	521737	Symbol	CDNO_FETCH		521513						
ANR	521738	Symbol	ecalloc		521513						
ANR	521739	Symbol	com_object		521513						
ANR	521740	Symbol	proxy -> zobj		521513						
ANR	521741	Symbol	& proxy -> std		521513						
ANR	521742	Symbol	NULL		521513						
ANR	521743	Symbol	proxy -> dimensions		521513						
ANR	521744	Symbol	SA_FETCH		521513						
ANR	521745	Symbol	index		521513						
ANR	521746	Symbol	php_com_saproxy_class_entry		521513						
ANR	521747	Symbol	proxy		521513						
ANR	521748	Symbol	* proxy		521513						
ANR	521749	Symbol	safe_emalloc		521513						
ANR	521750	Symbol	proxy -> std . handlers		521513						
ANR	521751	Function	saproxy_iter_dtor	459:0:11759:11952							
ANR	521752	FunctionDef	saproxy_iter_dtor (zend_object_iterator * iter)		521751	0					
ANR	521753	CompoundStatement		460:0:11817:11952	521751	0					
ANR	521754	IdentifierDeclStatement	php_com_saproxy_iter * I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data ) ;	461:1:11820:11886	521751	0	True				
ANR	521755	IdentifierDecl	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		521751	0					
ANR	521756	IdentifierDeclType	php_com_saproxy_iter *		521751	0					
ANR	521757	Identifier	I		521751	1					
ANR	521758	AssignmentExpression	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		521751	2		=			
ANR	521759	Identifier	I		521751	0					
ANR	521760	CastExpression	( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		521751	1					
ANR	521761	CastTarget	php_com_saproxy_iter *		521751	0					
ANR	521762	CallExpression	Z_PTR ( iter -> data )		521751	1					
ANR	521763	Callee	Z_PTR		521751	0					
ANR	521764	Identifier	Z_PTR		521751	0					
ANR	521765	ArgumentList	iter -> data		521751	1					
ANR	521766	Argument	iter -> data		521751	0					
ANR	521767	PtrMemberAccess	iter -> data		521751	0					
ANR	521768	Identifier	iter		521751	0					
ANR	521769	Identifier	data		521751	1					
ANR	521770	ExpressionStatement	zval_ptr_dtor ( & I -> proxy_obj )	463:1:11890:11918	521751	1	True				
ANR	521771	CallExpression	zval_ptr_dtor ( & I -> proxy_obj )		521751	0					
ANR	521772	Callee	zval_ptr_dtor		521751	0					
ANR	521773	Identifier	zval_ptr_dtor		521751	0					
ANR	521774	ArgumentList	& I -> proxy_obj		521751	1					
ANR	521775	Argument	& I -> proxy_obj		521751	0					
ANR	521776	UnaryOperationExpression	& I -> proxy_obj		521751	0					
ANR	521777	UnaryOperator	&		521751	0					
ANR	521778	PtrMemberAccess	I -> proxy_obj		521751	1					
ANR	521779	Identifier	I		521751	0					
ANR	521780	Identifier	proxy_obj		521751	1					
ANR	521781	ExpressionStatement	efree ( I -> indices )	465:1:11922:11939	521751	2	True				
ANR	521782	CallExpression	efree ( I -> indices )		521751	0					
ANR	521783	Callee	efree		521751	0					
ANR	521784	Identifier	efree		521751	0					
ANR	521785	ArgumentList	I -> indices		521751	1					
ANR	521786	Argument	I -> indices		521751	0					
ANR	521787	PtrMemberAccess	I -> indices		521751	0					
ANR	521788	Identifier	I		521751	0					
ANR	521789	Identifier	indices		521751	1					
ANR	521790	ExpressionStatement	efree ( I )	466:1:11942:11950	521751	3	True				
ANR	521791	CallExpression	efree ( I )		521751	0					
ANR	521792	Callee	efree		521751	0					
ANR	521793	Identifier	efree		521751	0					
ANR	521794	ArgumentList	I		521751	1					
ANR	521795	Argument	I		521751	0					
ANR	521796	Identifier	I		521751	0					
ANR	521797	ReturnType	static void		521751	1					
ANR	521798	Identifier	saproxy_iter_dtor		521751	2					
ANR	521799	ParameterList	zend_object_iterator * iter		521751	3					
ANR	521800	Parameter	zend_object_iterator * iter	459:30:11789:11814	521751	0	True				
ANR	521801	ParameterType	zend_object_iterator *		521751	0					
ANR	521802	Identifier	iter		521751	1					
ANR	521803	CFGEntryNode	ENTRY		521751		True				
ANR	521804	CFGExitNode	EXIT		521751		True				
ANR	521805	Symbol	* iter		521751						
ANR	521806	Symbol	* I		521751						
ANR	521807	Symbol	iter		521751						
ANR	521808	Symbol	Z_PTR		521751						
ANR	521809	Symbol	I		521751						
ANR	521810	Symbol	I -> indices		521751						
ANR	521811	Symbol	iter -> data		521751						
ANR	521812	Symbol	& I -> proxy_obj		521751						
ANR	521813	Function	saproxy_iter_valid	469:0:11955:12133							
ANR	521814	FunctionDef	saproxy_iter_valid (zend_object_iterator * iter)		521813	0					
ANR	521815	CompoundStatement		470:0:12013:12133	521813	0					
ANR	521816	IdentifierDeclStatement	php_com_saproxy_iter * I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data ) ;	471:1:12016:12082	521813	0	True				
ANR	521817	IdentifierDecl	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		521813	0					
ANR	521818	IdentifierDeclType	php_com_saproxy_iter *		521813	0					
ANR	521819	Identifier	I		521813	1					
ANR	521820	AssignmentExpression	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		521813	2		=			
ANR	521821	Identifier	I		521813	0					
ANR	521822	CastExpression	( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		521813	1					
ANR	521823	CastTarget	php_com_saproxy_iter *		521813	0					
ANR	521824	CallExpression	Z_PTR ( iter -> data )		521813	1					
ANR	521825	Callee	Z_PTR		521813	0					
ANR	521826	Identifier	Z_PTR		521813	0					
ANR	521827	ArgumentList	iter -> data		521813	1					
ANR	521828	Argument	iter -> data		521813	0					
ANR	521829	PtrMemberAccess	iter -> data		521813	0					
ANR	521830	Identifier	iter		521813	0					
ANR	521831	Identifier	data		521813	1					
ANR	521832	ReturnStatement	return ( I -> key < I -> imax ) ? SUCCESS : FAILURE ;	473:1:12086:12131	521813	1	True				
ANR	521833	ConditionalExpression	( I -> key < I -> imax ) ? SUCCESS : FAILURE		521813	0					
ANR	521834	Condition	I -> key < I -> imax		521813	0					
ANR	521835	RelationalExpression	I -> key < I -> imax		521813	0		<			
ANR	521836	PtrMemberAccess	I -> key		521813	0					
ANR	521837	Identifier	I		521813	0					
ANR	521838	Identifier	key		521813	1					
ANR	521839	PtrMemberAccess	I -> imax		521813	1					
ANR	521840	Identifier	I		521813	0					
ANR	521841	Identifier	imax		521813	1					
ANR	521842	Identifier	SUCCESS		521813	1					
ANR	521843	Identifier	FAILURE		521813	2					
ANR	521844	ReturnType	static int		521813	1					
ANR	521845	Identifier	saproxy_iter_valid		521813	2					
ANR	521846	ParameterList	zend_object_iterator * iter		521813	3					
ANR	521847	Parameter	zend_object_iterator * iter	469:30:11985:12010	521813	0	True				
ANR	521848	ParameterType	zend_object_iterator *		521813	0					
ANR	521849	Identifier	iter		521813	1					
ANR	521850	CFGEntryNode	ENTRY		521813		True				
ANR	521851	CFGExitNode	EXIT		521813		True				
ANR	521852	Symbol	* iter		521813						
ANR	521853	Symbol	I -> imax		521813						
ANR	521854	Symbol	* I		521813						
ANR	521855	Symbol	SUCCESS		521813						
ANR	521856	Symbol	I -> key		521813						
ANR	521857	Symbol	iter		521813						
ANR	521858	Symbol	I		521813						
ANR	521859	Symbol	Z_PTR		521813						
ANR	521860	Symbol	iter -> data		521813						
ANR	521861	Symbol	FAILURE		521813						
ANR	521862	Function	saproxy_iter_get_data	476:0:12136:12793							
ANR	521863	FunctionDef	saproxy_iter_get_data (zend_object_iterator * iter)		521862	0					
ANR	521864	CompoundStatement		477:0:12199:12793	521862	0					
ANR	521865	IdentifierDeclStatement	php_com_saproxy_iter * I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data ) ;	478:1:12202:12268	521862	0	True				
ANR	521866	IdentifierDecl	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		521862	0					
ANR	521867	IdentifierDeclType	php_com_saproxy_iter *		521862	0					
ANR	521868	Identifier	I		521862	1					
ANR	521869	AssignmentExpression	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		521862	2		=			
ANR	521870	Identifier	I		521862	0					
ANR	521871	CastExpression	( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		521862	1					
ANR	521872	CastTarget	php_com_saproxy_iter *		521862	0					
ANR	521873	CallExpression	Z_PTR ( iter -> data )		521862	1					
ANR	521874	Callee	Z_PTR		521862	0					
ANR	521875	Identifier	Z_PTR		521862	0					
ANR	521876	ArgumentList	iter -> data		521862	1					
ANR	521877	Argument	iter -> data		521862	0					
ANR	521878	PtrMemberAccess	iter -> data		521862	0					
ANR	521879	Identifier	iter		521862	0					
ANR	521880	Identifier	data		521862	1					
ANR	521881	IdentifierDeclStatement	VARIANT v ;	479:1:12271:12280	521862	1	True				
ANR	521882	IdentifierDecl	v		521862	0					
ANR	521883	IdentifierDeclType	VARIANT		521862	0					
ANR	521884	Identifier	v		521862	1					
ANR	521885	IdentifierDeclStatement	VARTYPE vt ;	480:1:12283:12293	521862	2	True				
ANR	521886	IdentifierDecl	vt		521862	0					
ANR	521887	IdentifierDeclType	VARTYPE		521862	0					
ANR	521888	Identifier	vt		521862	1					
ANR	521889	IdentifierDeclStatement	SAFEARRAY * sa ;	481:1:12296:12309	521862	3	True				
ANR	521890	IdentifierDecl	* sa		521862	0					
ANR	521891	IdentifierDeclType	SAFEARRAY *		521862	0					
ANR	521892	Identifier	sa		521862	1					
ANR	521893	ExpressionStatement	I -> indices [ I -> proxy -> dimensions - 1 ] = I -> key	483:1:12313:12356	521862	4	True				
ANR	521894	AssignmentExpression	I -> indices [ I -> proxy -> dimensions - 1 ] = I -> key		521862	0		=			
ANR	521895	ArrayIndexing	I -> indices [ I -> proxy -> dimensions - 1 ]		521862	0					
ANR	521896	PtrMemberAccess	I -> indices		521862	0					
ANR	521897	Identifier	I		521862	0					
ANR	521898	Identifier	indices		521862	1					
ANR	521899	AdditiveExpression	I -> proxy -> dimensions - 1		521862	1		-			
ANR	521900	PtrMemberAccess	I -> proxy -> dimensions		521862	0					
ANR	521901	PtrMemberAccess	I -> proxy		521862	0					
ANR	521902	Identifier	I		521862	0					
ANR	521903	Identifier	proxy		521862	1					
ANR	521904	Identifier	dimensions		521862	1					
ANR	521905	PrimaryExpression	1		521862	1					
ANR	521906	PtrMemberAccess	I -> key		521862	1					
ANR	521907	Identifier	I		521862	0					
ANR	521908	Identifier	key		521862	1					
ANR	521909	ExpressionStatement	sa = V_ARRAY ( & I -> proxy -> obj -> v )	485:1:12360:12391	521862	5	True				
ANR	521910	AssignmentExpression	sa = V_ARRAY ( & I -> proxy -> obj -> v )		521862	0		=			
ANR	521911	Identifier	sa		521862	0					
ANR	521912	CallExpression	V_ARRAY ( & I -> proxy -> obj -> v )		521862	1					
ANR	521913	Callee	V_ARRAY		521862	0					
ANR	521914	Identifier	V_ARRAY		521862	0					
ANR	521915	ArgumentList	& I -> proxy -> obj -> v		521862	1					
ANR	521916	Argument	& I -> proxy -> obj -> v		521862	0					
ANR	521917	UnaryOperationExpression	& I -> proxy -> obj -> v		521862	0					
ANR	521918	UnaryOperator	&		521862	0					
ANR	521919	PtrMemberAccess	I -> proxy -> obj -> v		521862	1					
ANR	521920	PtrMemberAccess	I -> proxy -> obj		521862	0					
ANR	521921	PtrMemberAccess	I -> proxy		521862	0					
ANR	521922	Identifier	I		521862	0					
ANR	521923	Identifier	proxy		521862	1					
ANR	521924	Identifier	obj		521862	1					
ANR	521925	Identifier	v		521862	1					
ANR	521926	IfStatement	"if ( FAILED ( SafeArrayGetVartype ( sa , & vt ) ) || vt == VT_EMPTY )"		521862	6					
ANR	521927	Condition	"FAILED ( SafeArrayGetVartype ( sa , & vt ) ) || vt == VT_EMPTY"	487:5:12399:12452	521862	0	True				
ANR	521928	OrExpression	"FAILED ( SafeArrayGetVartype ( sa , & vt ) ) || vt == VT_EMPTY"		521862	0		||			
ANR	521929	CallExpression	"FAILED ( SafeArrayGetVartype ( sa , & vt ) )"		521862	0					
ANR	521930	Callee	FAILED		521862	0					
ANR	521931	Identifier	FAILED		521862	0					
ANR	521932	ArgumentList	"SafeArrayGetVartype ( sa , & vt )"		521862	1					
ANR	521933	Argument	"SafeArrayGetVartype ( sa , & vt )"		521862	0					
ANR	521934	CallExpression	"SafeArrayGetVartype ( sa , & vt )"		521862	0					
ANR	521935	Callee	SafeArrayGetVartype		521862	0					
ANR	521936	Identifier	SafeArrayGetVartype		521862	0					
ANR	521937	ArgumentList	sa		521862	1					
ANR	521938	Argument	sa		521862	0					
ANR	521939	Identifier	sa		521862	0					
ANR	521940	Argument	& vt		521862	1					
ANR	521941	UnaryOperationExpression	& vt		521862	0					
ANR	521942	UnaryOperator	&		521862	0					
ANR	521943	Identifier	vt		521862	1					
ANR	521944	EqualityExpression	vt == VT_EMPTY		521862	1		==			
ANR	521945	Identifier	vt		521862	0					
ANR	521946	Identifier	VT_EMPTY		521862	1					
ANR	521947	CompoundStatement		11:61:255:255	521862	1					
ANR	521948	ExpressionStatement	vt = V_VT ( & I -> proxy -> obj -> v ) & ~VT_ARRAY	488:2:12459:12499	521862	0	True				
ANR	521949	AssignmentExpression	vt = V_VT ( & I -> proxy -> obj -> v ) & ~VT_ARRAY		521862	0		=			
ANR	521950	Identifier	vt		521862	0					
ANR	521951	BitAndExpression	V_VT ( & I -> proxy -> obj -> v ) & ~VT_ARRAY		521862	1		&			
ANR	521952	CallExpression	V_VT ( & I -> proxy -> obj -> v )		521862	0					
ANR	521953	Callee	V_VT		521862	0					
ANR	521954	Identifier	V_VT		521862	0					
ANR	521955	ArgumentList	& I -> proxy -> obj -> v		521862	1					
ANR	521956	Argument	& I -> proxy -> obj -> v		521862	0					
ANR	521957	UnaryOperationExpression	& I -> proxy -> obj -> v		521862	0					
ANR	521958	UnaryOperator	&		521862	0					
ANR	521959	PtrMemberAccess	I -> proxy -> obj -> v		521862	1					
ANR	521960	PtrMemberAccess	I -> proxy -> obj		521862	0					
ANR	521961	PtrMemberAccess	I -> proxy		521862	0					
ANR	521962	Identifier	I		521862	0					
ANR	521963	Identifier	proxy		521862	1					
ANR	521964	Identifier	obj		521862	1					
ANR	521965	Identifier	v		521862	1					
ANR	521966	Identifier	~VT_ARRAY		521862	1					
ANR	521967	ExpressionStatement	VariantInit ( & v )	491:1:12506:12521	521862	7	True				
ANR	521968	CallExpression	VariantInit ( & v )		521862	0					
ANR	521969	Callee	VariantInit		521862	0					
ANR	521970	Identifier	VariantInit		521862	0					
ANR	521971	ArgumentList	& v		521862	1					
ANR	521972	Argument	& v		521862	0					
ANR	521973	UnaryOperationExpression	& v		521862	0					
ANR	521974	UnaryOperator	&		521862	0					
ANR	521975	Identifier	v		521862	1					
ANR	521976	IfStatement	if ( vt == VT_VARIANT )		521862	8					
ANR	521977	Condition	vt == VT_VARIANT	492:5:12528:12543	521862	0	True				
ANR	521978	EqualityExpression	vt == VT_VARIANT		521862	0		==			
ANR	521979	Identifier	vt		521862	0					
ANR	521980	Identifier	VT_VARIANT		521862	1					
ANR	521981	CompoundStatement		16:23:346:346	521862	1					
ANR	521982	ExpressionStatement	"SafeArrayGetElement ( sa , I -> indices , & v )"	493:2:12550:12589	521862	0	True				
ANR	521983	CallExpression	"SafeArrayGetElement ( sa , I -> indices , & v )"		521862	0					
ANR	521984	Callee	SafeArrayGetElement		521862	0					
ANR	521985	Identifier	SafeArrayGetElement		521862	0					
ANR	521986	ArgumentList	sa		521862	1					
ANR	521987	Argument	sa		521862	0					
ANR	521988	Identifier	sa		521862	0					
ANR	521989	Argument	I -> indices		521862	1					
ANR	521990	PtrMemberAccess	I -> indices		521862	0					
ANR	521991	Identifier	I		521862	0					
ANR	521992	Identifier	indices		521862	1					
ANR	521993	Argument	& v		521862	2					
ANR	521994	UnaryOperationExpression	& v		521862	0					
ANR	521995	UnaryOperator	&		521862	0					
ANR	521996	Identifier	v		521862	1					
ANR	521997	ElseStatement	else		521862	0					
ANR	521998	CompoundStatement		18:8:399:399	521862	0					
ANR	521999	ExpressionStatement	V_VT ( & v ) = vt	495:2:12603:12616	521862	0	True				
ANR	522000	AssignmentExpression	V_VT ( & v ) = vt		521862	0		=			
ANR	522001	CallExpression	V_VT ( & v )		521862	0					
ANR	522002	Callee	V_VT		521862	0					
ANR	522003	Identifier	V_VT		521862	0					
ANR	522004	ArgumentList	& v		521862	1					
ANR	522005	Argument	& v		521862	0					
ANR	522006	UnaryOperationExpression	& v		521862	0					
ANR	522007	UnaryOperator	&		521862	0					
ANR	522008	Identifier	v		521862	1					
ANR	522009	Identifier	vt		521862	1					
ANR	522010	ExpressionStatement	"SafeArrayGetElement ( sa , I -> indices , & v . lVal )"	496:2:12620:12664	521862	1	True				
ANR	522011	CallExpression	"SafeArrayGetElement ( sa , I -> indices , & v . lVal )"		521862	0					
ANR	522012	Callee	SafeArrayGetElement		521862	0					
ANR	522013	Identifier	SafeArrayGetElement		521862	0					
ANR	522014	ArgumentList	sa		521862	1					
ANR	522015	Argument	sa		521862	0					
ANR	522016	Identifier	sa		521862	0					
ANR	522017	Argument	I -> indices		521862	1					
ANR	522018	PtrMemberAccess	I -> indices		521862	0					
ANR	522019	Identifier	I		521862	0					
ANR	522020	Identifier	indices		521862	1					
ANR	522021	Argument	& v . lVal		521862	2					
ANR	522022	UnaryOperationExpression	& v . lVal		521862	0					
ANR	522023	UnaryOperator	&		521862	0					
ANR	522024	MemberAccess	v . lVal		521862	1					
ANR	522025	Identifier	v		521862	0					
ANR	522026	Identifier	lVal		521862	1					
ANR	522027	ExpressionStatement	ZVAL_NULL ( & I -> data )	499:1:12671:12690	521862	9	True				
ANR	522028	CallExpression	ZVAL_NULL ( & I -> data )		521862	0					
ANR	522029	Callee	ZVAL_NULL		521862	0					
ANR	522030	Identifier	ZVAL_NULL		521862	0					
ANR	522031	ArgumentList	& I -> data		521862	1					
ANR	522032	Argument	& I -> data		521862	0					
ANR	522033	UnaryOperationExpression	& I -> data		521862	0					
ANR	522034	UnaryOperator	&		521862	0					
ANR	522035	PtrMemberAccess	I -> data		521862	1					
ANR	522036	Identifier	I		521862	0					
ANR	522037	Identifier	data		521862	1					
ANR	522038	ExpressionStatement	"php_com_wrap_variant ( & I -> data , & v , I -> proxy -> obj -> code_page )"	500:1:12693:12753	521862	10	True				
ANR	522039	CallExpression	"php_com_wrap_variant ( & I -> data , & v , I -> proxy -> obj -> code_page )"		521862	0					
ANR	522040	Callee	php_com_wrap_variant		521862	0					
ANR	522041	Identifier	php_com_wrap_variant		521862	0					
ANR	522042	ArgumentList	& I -> data		521862	1					
ANR	522043	Argument	& I -> data		521862	0					
ANR	522044	UnaryOperationExpression	& I -> data		521862	0					
ANR	522045	UnaryOperator	&		521862	0					
ANR	522046	PtrMemberAccess	I -> data		521862	1					
ANR	522047	Identifier	I		521862	0					
ANR	522048	Identifier	data		521862	1					
ANR	522049	Argument	& v		521862	1					
ANR	522050	UnaryOperationExpression	& v		521862	0					
ANR	522051	UnaryOperator	&		521862	0					
ANR	522052	Identifier	v		521862	1					
ANR	522053	Argument	I -> proxy -> obj -> code_page		521862	2					
ANR	522054	PtrMemberAccess	I -> proxy -> obj -> code_page		521862	0					
ANR	522055	PtrMemberAccess	I -> proxy -> obj		521862	0					
ANR	522056	PtrMemberAccess	I -> proxy		521862	0					
ANR	522057	Identifier	I		521862	0					
ANR	522058	Identifier	proxy		521862	1					
ANR	522059	Identifier	obj		521862	1					
ANR	522060	Identifier	code_page		521862	1					
ANR	522061	ExpressionStatement	VariantClear ( & v )	501:1:12756:12772	521862	11	True				
ANR	522062	CallExpression	VariantClear ( & v )		521862	0					
ANR	522063	Callee	VariantClear		521862	0					
ANR	522064	Identifier	VariantClear		521862	0					
ANR	522065	ArgumentList	& v		521862	1					
ANR	522066	Argument	& v		521862	0					
ANR	522067	UnaryOperationExpression	& v		521862	0					
ANR	522068	UnaryOperator	&		521862	0					
ANR	522069	Identifier	v		521862	1					
ANR	522070	ReturnStatement	return & I -> data ;	503:1:12776:12791	521862	12	True				
ANR	522071	UnaryOperationExpression	& I -> data		521862	0					
ANR	522072	UnaryOperator	&		521862	0					
ANR	522073	PtrMemberAccess	I -> data		521862	1					
ANR	522074	Identifier	I		521862	0					
ANR	522075	Identifier	data		521862	1					
ANR	522076	ReturnType	static zval *		521862	1					
ANR	522077	Identifier	saproxy_iter_get_data		521862	2					
ANR	522078	ParameterList	zend_object_iterator * iter		521862	3					
ANR	522079	Parameter	zend_object_iterator * iter	476:35:12171:12196	521862	0	True				
ANR	522080	ParameterType	zend_object_iterator *		521862	0					
ANR	522081	Identifier	iter		521862	1					
ANR	522082	CFGEntryNode	ENTRY		521862		True				
ANR	522083	CFGExitNode	EXIT		521862		True				
ANR	522084	Symbol	~VT_ARRAY		521862						
ANR	522085	Symbol	* * I		521862						
ANR	522086	Symbol	& I -> proxy -> obj -> v		521862						
ANR	522087	Symbol	I -> proxy -> obj -> code_page		521862						
ANR	522088	Symbol	* I -> proxy -> dimensions		521862						
ANR	522089	Symbol	* I -> proxy -> obj		521862						
ANR	522090	Symbol	I -> proxy -> dimensions		521862						
ANR	522091	Symbol	Z_PTR		521862						
ANR	522092	Symbol	I		521862						
ANR	522093	Symbol	SafeArrayGetVartype		521862						
ANR	522094	Symbol	sa		521862						
ANR	522095	Symbol	& v . lVal		521862						
ANR	522096	Symbol	* iter		521862						
ANR	522097	Symbol	VT_EMPTY		521862						
ANR	522098	Symbol	* I		521862						
ANR	522099	Symbol	FAILED		521862						
ANR	522100	Symbol	* * * I		521862						
ANR	522101	Symbol	I -> indices		521862						
ANR	522102	Symbol	* I -> indices		521862						
ANR	522103	Symbol	* I -> proxy		521862						
ANR	522104	Symbol	I -> key		521862						
ANR	522105	Symbol	I -> proxy		521862						
ANR	522106	Symbol	& I -> data		521862						
ANR	522107	Symbol	iter		521862						
ANR	522108	Symbol	& vt		521862						
ANR	522109	Symbol	V_VT		521862						
ANR	522110	Symbol	* * I -> proxy		521862						
ANR	522111	Symbol	v		521862						
ANR	522112	Symbol	I -> proxy -> obj		521862						
ANR	522113	Symbol	iter -> data		521862						
ANR	522114	Symbol	& v		521862						
ANR	522115	Symbol	VT_VARIANT		521862						
ANR	522116	Symbol	vt		521862						
ANR	522117	Symbol	V_ARRAY		521862						
ANR	522118	Function	saproxy_iter_get_key	506:0:12796:13018							
ANR	522119	FunctionDef	"saproxy_iter_get_key (zend_object_iterator * iter , zval * key)"		522118	0					
ANR	522120	CompoundStatement		507:0:12868:13018	522118	0					
ANR	522121	IdentifierDeclStatement	php_com_saproxy_iter * I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data ) ;	508:1:12871:12937	522118	0	True				
ANR	522122	IdentifierDecl	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		522118	0					
ANR	522123	IdentifierDeclType	php_com_saproxy_iter *		522118	0					
ANR	522124	Identifier	I		522118	1					
ANR	522125	AssignmentExpression	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		522118	2		=			
ANR	522126	Identifier	I		522118	0					
ANR	522127	CastExpression	( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		522118	1					
ANR	522128	CastTarget	php_com_saproxy_iter *		522118	0					
ANR	522129	CallExpression	Z_PTR ( iter -> data )		522118	1					
ANR	522130	Callee	Z_PTR		522118	0					
ANR	522131	Identifier	Z_PTR		522118	0					
ANR	522132	ArgumentList	iter -> data		522118	1					
ANR	522133	Argument	iter -> data		522118	0					
ANR	522134	PtrMemberAccess	iter -> data		522118	0					
ANR	522135	Identifier	iter		522118	0					
ANR	522136	Identifier	data		522118	1					
ANR	522137	IfStatement	if ( I -> key == - 1 )		522118	1					
ANR	522138	Condition	I -> key == - 1	510:5:12945:12956	522118	0	True				
ANR	522139	EqualityExpression	I -> key == - 1		522118	0		==			
ANR	522140	PtrMemberAccess	I -> key		522118	0					
ANR	522141	Identifier	I		522118	0					
ANR	522142	Identifier	key		522118	1					
ANR	522143	UnaryOperationExpression	- 1		522118	1					
ANR	522144	UnaryOperator	-		522118	0					
ANR	522145	PrimaryExpression	1		522118	1					
ANR	522146	CompoundStatement		4:19:90:90	522118	1					
ANR	522147	ExpressionStatement	ZVAL_NULL ( key )	511:2:12963:12977	522118	0	True				
ANR	522148	CallExpression	ZVAL_NULL ( key )		522118	0					
ANR	522149	Callee	ZVAL_NULL		522118	0					
ANR	522150	Identifier	ZVAL_NULL		522118	0					
ANR	522151	ArgumentList	key		522118	1					
ANR	522152	Argument	key		522118	0					
ANR	522153	Identifier	key		522118	0					
ANR	522154	ElseStatement	else		522118	0					
ANR	522155	CompoundStatement		6:8:118:118	522118	0					
ANR	522156	ExpressionStatement	"ZVAL_LONG ( key , I -> key )"	513:2:12991:13013	522118	0	True				
ANR	522157	CallExpression	"ZVAL_LONG ( key , I -> key )"		522118	0					
ANR	522158	Callee	ZVAL_LONG		522118	0					
ANR	522159	Identifier	ZVAL_LONG		522118	0					
ANR	522160	ArgumentList	key		522118	1					
ANR	522161	Argument	key		522118	0					
ANR	522162	Identifier	key		522118	0					
ANR	522163	Argument	I -> key		522118	1					
ANR	522164	PtrMemberAccess	I -> key		522118	0					
ANR	522165	Identifier	I		522118	0					
ANR	522166	Identifier	key		522118	1					
ANR	522167	ReturnType	static void		522118	1					
ANR	522168	Identifier	saproxy_iter_get_key		522118	2					
ANR	522169	ParameterList	"zend_object_iterator * iter , zval * key"		522118	3					
ANR	522170	Parameter	zend_object_iterator * iter	506:33:12829:12854	522118	0	True				
ANR	522171	ParameterType	zend_object_iterator *		522118	0					
ANR	522172	Identifier	iter		522118	1					
ANR	522173	Parameter	zval * key	506:61:12857:12865	522118	1	True				
ANR	522174	ParameterType	zval *		522118	0					
ANR	522175	Identifier	key		522118	1					
ANR	522176	CFGEntryNode	ENTRY		522118		True				
ANR	522177	CFGExitNode	EXIT		522118		True				
ANR	522178	Symbol	* iter		522118						
ANR	522179	Symbol	* I		522118						
ANR	522180	Symbol	I -> key		522118						
ANR	522181	Symbol	iter		522118						
ANR	522182	Symbol	I		522118						
ANR	522183	Symbol	Z_PTR		522118						
ANR	522184	Symbol	iter -> data		522118						
ANR	522185	Symbol	key		522118						
ANR	522186	Function	saproxy_iter_move_forwards	517:0:13021:13240							
ANR	522187	FunctionDef	saproxy_iter_move_forwards (zend_object_iterator * iter)		522186	0					
ANR	522188	CompoundStatement		518:0:13087:13240	522186	0					
ANR	522189	IdentifierDeclStatement	php_com_saproxy_iter * I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data ) ;	519:1:13090:13156	522186	0	True				
ANR	522190	IdentifierDecl	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		522186	0					
ANR	522191	IdentifierDeclType	php_com_saproxy_iter *		522186	0					
ANR	522192	Identifier	I		522186	1					
ANR	522193	AssignmentExpression	* I = ( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		522186	2		=			
ANR	522194	Identifier	I		522186	0					
ANR	522195	CastExpression	( php_com_saproxy_iter * ) Z_PTR ( iter -> data )		522186	1					
ANR	522196	CastTarget	php_com_saproxy_iter *		522186	0					
ANR	522197	CallExpression	Z_PTR ( iter -> data )		522186	1					
ANR	522198	Callee	Z_PTR		522186	0					
ANR	522199	Identifier	Z_PTR		522186	0					
ANR	522200	ArgumentList	iter -> data		522186	1					
ANR	522201	Argument	iter -> data		522186	0					
ANR	522202	PtrMemberAccess	iter -> data		522186	0					
ANR	522203	Identifier	iter		522186	0					
ANR	522204	Identifier	data		522186	1					
ANR	522205	IfStatement	if ( ++ I -> key >= I -> imax )		522186	1					
ANR	522206	Condition	++ I -> key >= I -> imax	521:5:13164:13182	522186	0	True				
ANR	522207	RelationalExpression	++ I -> key >= I -> imax		522186	0		>=			
ANR	522208	UnaryExpression	++ I -> key		522186	0					
ANR	522209	IncDec	++		522186	0					
ANR	522210	PtrMemberAccess	I -> key		522186	1					
ANR	522211	Identifier	I		522186	0					
ANR	522212	Identifier	key		522186	1					
ANR	522213	PtrMemberAccess	I -> imax		522186	1					
ANR	522214	Identifier	I		522186	0					
ANR	522215	Identifier	imax		522186	1					
ANR	522216	CompoundStatement		4:26:97:97	522186	1					
ANR	522217	ExpressionStatement	I -> key = - 1	522:2:13189:13200	522186	0	True				
ANR	522218	AssignmentExpression	I -> key = - 1		522186	0		=			
ANR	522219	PtrMemberAccess	I -> key		522186	0					
ANR	522220	Identifier	I		522186	0					
ANR	522221	Identifier	key		522186	1					
ANR	522222	UnaryOperationExpression	- 1		522186	1					
ANR	522223	UnaryOperator	-		522186	0					
ANR	522224	PrimaryExpression	1		522186	1					
ANR	522225	ReturnStatement	return FAILURE ;	523:2:13204:13218	522186	1	True				
ANR	522226	Identifier	FAILURE		522186	0					
ANR	522227	ReturnStatement	return SUCCESS ;	525:1:13224:13238	522186	2	True				
ANR	522228	Identifier	SUCCESS		522186	0					
ANR	522229	ReturnType	static int		522186	1					
ANR	522230	Identifier	saproxy_iter_move_forwards		522186	2					
ANR	522231	ParameterList	zend_object_iterator * iter		522186	3					
ANR	522232	Parameter	zend_object_iterator * iter	517:38:13059:13084	522186	0	True				
ANR	522233	ParameterType	zend_object_iterator *		522186	0					
ANR	522234	Identifier	iter		522186	1					
ANR	522235	CFGEntryNode	ENTRY		522186		True				
ANR	522236	CFGExitNode	EXIT		522186		True				
ANR	522237	Symbol	* iter		522186						
ANR	522238	Symbol	I -> imax		522186						
ANR	522239	Symbol	* I		522186						
ANR	522240	Symbol	SUCCESS		522186						
ANR	522241	Symbol	I -> key		522186						
ANR	522242	Symbol	iter		522186						
ANR	522243	Symbol	I		522186						
ANR	522244	Symbol	Z_PTR		522186						
ANR	522245	Symbol	iter -> data		522186						
ANR	522246	Symbol	FAILURE		522186						
ANR	522247	DeclStmt									
ANR	522248	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	saproxy_iter_funcs
ANR	522249	Function	php_com_saproxy_iter_get	538:0:13428:14245							
ANR	522250	FunctionDef	"php_com_saproxy_iter_get (zend_class_entry * ce , zval * object , int by_ref)"		522249	0					
ANR	522251	CompoundStatement		539:0:13523:14245	522249	0					
ANR	522252	IdentifierDeclStatement	php_com_saproxy * proxy = SA_FETCH ( object ) ;	540:1:13526:13567	522249	0	True				
ANR	522253	IdentifierDecl	* proxy = SA_FETCH ( object )		522249	0					
ANR	522254	IdentifierDeclType	php_com_saproxy *		522249	0					
ANR	522255	Identifier	proxy		522249	1					
ANR	522256	AssignmentExpression	* proxy = SA_FETCH ( object )		522249	2		=			
ANR	522257	Identifier	proxy		522249	0					
ANR	522258	CallExpression	SA_FETCH ( object )		522249	1					
ANR	522259	Callee	SA_FETCH		522249	0					
ANR	522260	Identifier	SA_FETCH		522249	0					
ANR	522261	ArgumentList	object		522249	1					
ANR	522262	Argument	object		522249	0					
ANR	522263	Identifier	object		522249	0					
ANR	522264	IdentifierDeclStatement	php_com_saproxy_iter * I ;	541:1:13570:13593	522249	1	True				
ANR	522265	IdentifierDecl	* I		522249	0					
ANR	522266	IdentifierDeclType	php_com_saproxy_iter *		522249	0					
ANR	522267	Identifier	I		522249	1					
ANR	522268	IdentifierDeclStatement	int i ;	542:1:13596:13601	522249	2	True				
ANR	522269	IdentifierDecl	i		522249	0					
ANR	522270	IdentifierDeclType	int		522249	0					
ANR	522271	Identifier	i		522249	1					
ANR	522272	IfStatement	if ( by_ref )		522249	3					
ANR	522273	Condition	by_ref	544:5:13609:13614	522249	0	True				
ANR	522274	Identifier	by_ref		522249	0					
ANR	522275	CompoundStatement		6:13:93:93	522249	1					
ANR	522276	ExpressionStatement	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"	545:2:13621:13696	522249	0	True				
ANR	522277	CallExpression	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"		522249	0					
ANR	522278	Callee	zend_error		522249	0					
ANR	522279	Identifier	zend_error		522249	0					
ANR	522280	ArgumentList	E_ERROR		522249	1					
ANR	522281	Argument	E_ERROR		522249	0					
ANR	522282	Identifier	E_ERROR		522249	0					
ANR	522283	Argument	"""An iterator cannot be used with foreach by reference"""		522249	1					
ANR	522284	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		522249	0					
ANR	522285	ExpressionStatement	"I = ecalloc ( 1 , sizeof ( * I ) )"	548:1:13703:13729	522249	4	True				
ANR	522286	AssignmentExpression	"I = ecalloc ( 1 , sizeof ( * I ) )"		522249	0		=			
ANR	522287	Identifier	I		522249	0					
ANR	522288	CallExpression	"ecalloc ( 1 , sizeof ( * I ) )"		522249	1					
ANR	522289	Callee	ecalloc		522249	0					
ANR	522290	Identifier	ecalloc		522249	0					
ANR	522291	ArgumentList	1		522249	1					
ANR	522292	Argument	1		522249	0					
ANR	522293	PrimaryExpression	1		522249	0					
ANR	522294	Argument	sizeof ( * I )		522249	1					
ANR	522295	SizeofExpression	sizeof ( * I )		522249	0					
ANR	522296	Sizeof	sizeof		522249	0					
ANR	522297	UnaryOperationExpression	* I		522249	1					
ANR	522298	UnaryOperator	*		522249	0					
ANR	522299	Identifier	I		522249	1					
ANR	522300	ExpressionStatement	I -> iter . funcs = & saproxy_iter_funcs	549:1:13732:13767	522249	5	True				
ANR	522301	AssignmentExpression	I -> iter . funcs = & saproxy_iter_funcs		522249	0		=			
ANR	522302	MemberAccess	I -> iter . funcs		522249	0					
ANR	522303	PtrMemberAccess	I -> iter		522249	0					
ANR	522304	Identifier	I		522249	0					
ANR	522305	Identifier	iter		522249	1					
ANR	522306	Identifier	funcs		522249	1					
ANR	522307	UnaryOperationExpression	& saproxy_iter_funcs		522249	1					
ANR	522308	UnaryOperator	&		522249	0					
ANR	522309	Identifier	saproxy_iter_funcs		522249	1					
ANR	522310	ExpressionStatement	Z_PTR ( I -> iter . data ) = I	550:1:13770:13793	522249	6	True				
ANR	522311	AssignmentExpression	Z_PTR ( I -> iter . data ) = I		522249	0		=			
ANR	522312	CallExpression	Z_PTR ( I -> iter . data )		522249	0					
ANR	522313	Callee	Z_PTR		522249	0					
ANR	522314	Identifier	Z_PTR		522249	0					
ANR	522315	ArgumentList	I -> iter . data		522249	1					
ANR	522316	Argument	I -> iter . data		522249	0					
ANR	522317	MemberAccess	I -> iter . data		522249	0					
ANR	522318	PtrMemberAccess	I -> iter		522249	0					
ANR	522319	Identifier	I		522249	0					
ANR	522320	Identifier	iter		522249	1					
ANR	522321	Identifier	data		522249	1					
ANR	522322	Identifier	I		522249	1					
ANR	522323	ExpressionStatement	I -> proxy = proxy	552:1:13797:13813	522249	7	True				
ANR	522324	AssignmentExpression	I -> proxy = proxy		522249	0		=			
ANR	522325	PtrMemberAccess	I -> proxy		522249	0					
ANR	522326	Identifier	I		522249	0					
ANR	522327	Identifier	proxy		522249	1					
ANR	522328	Identifier	proxy		522249	1					
ANR	522329	ExpressionStatement	"ZVAL_COPY ( & I -> proxy_obj , object )"	553:1:13816:13848	522249	8	True				
ANR	522330	CallExpression	"ZVAL_COPY ( & I -> proxy_obj , object )"		522249	0					
ANR	522331	Callee	ZVAL_COPY		522249	0					
ANR	522332	Identifier	ZVAL_COPY		522249	0					
ANR	522333	ArgumentList	& I -> proxy_obj		522249	1					
ANR	522334	Argument	& I -> proxy_obj		522249	0					
ANR	522335	UnaryOperationExpression	& I -> proxy_obj		522249	0					
ANR	522336	UnaryOperator	&		522249	0					
ANR	522337	PtrMemberAccess	I -> proxy_obj		522249	1					
ANR	522338	Identifier	I		522249	0					
ANR	522339	Identifier	proxy_obj		522249	1					
ANR	522340	Argument	object		522249	1					
ANR	522341	Identifier	object		522249	0					
ANR	522342	ExpressionStatement	"I -> indices = safe_emalloc ( proxy -> dimensions + 1 , sizeof ( LONG ) , 0 )"	555:1:13852:13917	522249	9	True				
ANR	522343	AssignmentExpression	"I -> indices = safe_emalloc ( proxy -> dimensions + 1 , sizeof ( LONG ) , 0 )"		522249	0		=			
ANR	522344	PtrMemberAccess	I -> indices		522249	0					
ANR	522345	Identifier	I		522249	0					
ANR	522346	Identifier	indices		522249	1					
ANR	522347	CallExpression	"safe_emalloc ( proxy -> dimensions + 1 , sizeof ( LONG ) , 0 )"		522249	1					
ANR	522348	Callee	safe_emalloc		522249	0					
ANR	522349	Identifier	safe_emalloc		522249	0					
ANR	522350	ArgumentList	proxy -> dimensions + 1		522249	1					
ANR	522351	Argument	proxy -> dimensions + 1		522249	0					
ANR	522352	AdditiveExpression	proxy -> dimensions + 1		522249	0		+			
ANR	522353	PtrMemberAccess	proxy -> dimensions		522249	0					
ANR	522354	Identifier	proxy		522249	0					
ANR	522355	Identifier	dimensions		522249	1					
ANR	522356	PrimaryExpression	1		522249	1					
ANR	522357	Argument	sizeof ( LONG )		522249	1					
ANR	522358	SizeofExpression	sizeof ( LONG )		522249	0					
ANR	522359	Sizeof	sizeof		522249	0					
ANR	522360	SizeofOperand	LONG		522249	1					
ANR	522361	Argument	0		522249	2					
ANR	522362	PrimaryExpression	0		522249	0					
ANR	522363	ForStatement	for ( i = 0 ; i < proxy -> dimensions ; i ++ )		522249	10					
ANR	522364	ForInit	i = 0 ;	556:6:13925:13930	522249	0	True				
ANR	522365	AssignmentExpression	i = 0		522249	0		=			
ANR	522366	Identifier	i		522249	0					
ANR	522367	PrimaryExpression	0		522249	1					
ANR	522368	Condition	i < proxy -> dimensions	556:13:13932:13952	522249	1	True				
ANR	522369	RelationalExpression	i < proxy -> dimensions		522249	0		<			
ANR	522370	Identifier	i		522249	0					
ANR	522371	PtrMemberAccess	proxy -> dimensions		522249	1					
ANR	522372	Identifier	proxy		522249	0					
ANR	522373	Identifier	dimensions		522249	1					
ANR	522374	PostIncDecOperationExpression	i ++	556:36:13955:13957	522249	2	True				
ANR	522375	Identifier	i		522249	0					
ANR	522376	IncDec	++		522249	1					
ANR	522377	CompoundStatement		18:41:436:436	522249	3					
ANR	522378	ExpressionStatement	convert_to_long ( & proxy -> indices [ i ] )	557:2:13964:13999	522249	0	True				
ANR	522379	CallExpression	convert_to_long ( & proxy -> indices [ i ] )		522249	0					
ANR	522380	Callee	convert_to_long		522249	0					
ANR	522381	Identifier	convert_to_long		522249	0					
ANR	522382	ArgumentList	& proxy -> indices [ i ]		522249	1					
ANR	522383	Argument	& proxy -> indices [ i ]		522249	0					
ANR	522384	UnaryOperationExpression	& proxy -> indices [ i ]		522249	0					
ANR	522385	UnaryOperator	&		522249	0					
ANR	522386	ArrayIndexing	proxy -> indices [ i ]		522249	1					
ANR	522387	PtrMemberAccess	proxy -> indices		522249	0					
ANR	522388	Identifier	proxy		522249	0					
ANR	522389	Identifier	indices		522249	1					
ANR	522390	Identifier	i		522249	1					
ANR	522391	ExpressionStatement	I -> indices [ i ] = ( LONG ) Z_LVAL ( proxy -> indices [ i ] )	558:2:14003:14050	522249	1	True				
ANR	522392	AssignmentExpression	I -> indices [ i ] = ( LONG ) Z_LVAL ( proxy -> indices [ i ] )		522249	0		=			
ANR	522393	ArrayIndexing	I -> indices [ i ]		522249	0					
ANR	522394	PtrMemberAccess	I -> indices		522249	0					
ANR	522395	Identifier	I		522249	0					
ANR	522396	Identifier	indices		522249	1					
ANR	522397	Identifier	i		522249	1					
ANR	522398	CastExpression	( LONG ) Z_LVAL ( proxy -> indices [ i ] )		522249	1					
ANR	522399	CastTarget	LONG		522249	0					
ANR	522400	CallExpression	Z_LVAL ( proxy -> indices [ i ] )		522249	1					
ANR	522401	Callee	Z_LVAL		522249	0					
ANR	522402	Identifier	Z_LVAL		522249	0					
ANR	522403	ArgumentList	proxy -> indices [ i ]		522249	1					
ANR	522404	Argument	proxy -> indices [ i ]		522249	0					
ANR	522405	ArrayIndexing	proxy -> indices [ i ]		522249	0					
ANR	522406	PtrMemberAccess	proxy -> indices		522249	0					
ANR	522407	Identifier	proxy		522249	0					
ANR	522408	Identifier	indices		522249	1					
ANR	522409	Identifier	i		522249	1					
ANR	522410	ExpressionStatement	"SafeArrayGetLBound ( V_ARRAY ( & proxy -> obj -> v ) , proxy -> dimensions , & I -> imin )"	561:1:14057:14129	522249	11	True				
ANR	522411	CallExpression	"SafeArrayGetLBound ( V_ARRAY ( & proxy -> obj -> v ) , proxy -> dimensions , & I -> imin )"		522249	0					
ANR	522412	Callee	SafeArrayGetLBound		522249	0					
ANR	522413	Identifier	SafeArrayGetLBound		522249	0					
ANR	522414	ArgumentList	V_ARRAY ( & proxy -> obj -> v )		522249	1					
ANR	522415	Argument	V_ARRAY ( & proxy -> obj -> v )		522249	0					
ANR	522416	CallExpression	V_ARRAY ( & proxy -> obj -> v )		522249	0					
ANR	522417	Callee	V_ARRAY		522249	0					
ANR	522418	Identifier	V_ARRAY		522249	0					
ANR	522419	ArgumentList	& proxy -> obj -> v		522249	1					
ANR	522420	Argument	& proxy -> obj -> v		522249	0					
ANR	522421	UnaryOperationExpression	& proxy -> obj -> v		522249	0					
ANR	522422	UnaryOperator	&		522249	0					
ANR	522423	PtrMemberAccess	proxy -> obj -> v		522249	1					
ANR	522424	PtrMemberAccess	proxy -> obj		522249	0					
ANR	522425	Identifier	proxy		522249	0					
ANR	522426	Identifier	obj		522249	1					
ANR	522427	Identifier	v		522249	1					
ANR	522428	Argument	proxy -> dimensions		522249	1					
ANR	522429	PtrMemberAccess	proxy -> dimensions		522249	0					
ANR	522430	Identifier	proxy		522249	0					
ANR	522431	Identifier	dimensions		522249	1					
ANR	522432	Argument	& I -> imin		522249	2					
ANR	522433	UnaryOperationExpression	& I -> imin		522249	0					
ANR	522434	UnaryOperator	&		522249	0					
ANR	522435	PtrMemberAccess	I -> imin		522249	1					
ANR	522436	Identifier	I		522249	0					
ANR	522437	Identifier	imin		522249	1					
ANR	522438	ExpressionStatement	"SafeArrayGetUBound ( V_ARRAY ( & proxy -> obj -> v ) , proxy -> dimensions , & I -> imax )"	562:1:14132:14204	522249	12	True				
ANR	522439	CallExpression	"SafeArrayGetUBound ( V_ARRAY ( & proxy -> obj -> v ) , proxy -> dimensions , & I -> imax )"		522249	0					
ANR	522440	Callee	SafeArrayGetUBound		522249	0					
ANR	522441	Identifier	SafeArrayGetUBound		522249	0					
ANR	522442	ArgumentList	V_ARRAY ( & proxy -> obj -> v )		522249	1					
ANR	522443	Argument	V_ARRAY ( & proxy -> obj -> v )		522249	0					
ANR	522444	CallExpression	V_ARRAY ( & proxy -> obj -> v )		522249	0					
ANR	522445	Callee	V_ARRAY		522249	0					
ANR	522446	Identifier	V_ARRAY		522249	0					
ANR	522447	ArgumentList	& proxy -> obj -> v		522249	1					
ANR	522448	Argument	& proxy -> obj -> v		522249	0					
ANR	522449	UnaryOperationExpression	& proxy -> obj -> v		522249	0					
ANR	522450	UnaryOperator	&		522249	0					
ANR	522451	PtrMemberAccess	proxy -> obj -> v		522249	1					
ANR	522452	PtrMemberAccess	proxy -> obj		522249	0					
ANR	522453	Identifier	proxy		522249	0					
ANR	522454	Identifier	obj		522249	1					
ANR	522455	Identifier	v		522249	1					
ANR	522456	Argument	proxy -> dimensions		522249	1					
ANR	522457	PtrMemberAccess	proxy -> dimensions		522249	0					
ANR	522458	Identifier	proxy		522249	0					
ANR	522459	Identifier	dimensions		522249	1					
ANR	522460	Argument	& I -> imax		522249	2					
ANR	522461	UnaryOperationExpression	& I -> imax		522249	0					
ANR	522462	UnaryOperator	&		522249	0					
ANR	522463	PtrMemberAccess	I -> imax		522249	1					
ANR	522464	Identifier	I		522249	0					
ANR	522465	Identifier	imax		522249	1					
ANR	522466	ExpressionStatement	I -> key = I -> imin	564:1:14208:14224	522249	13	True				
ANR	522467	AssignmentExpression	I -> key = I -> imin		522249	0		=			
ANR	522468	PtrMemberAccess	I -> key		522249	0					
ANR	522469	Identifier	I		522249	0					
ANR	522470	Identifier	key		522249	1					
ANR	522471	PtrMemberAccess	I -> imin		522249	1					
ANR	522472	Identifier	I		522249	0					
ANR	522473	Identifier	imin		522249	1					
ANR	522474	ReturnStatement	return & I -> iter ;	566:1:14228:14243	522249	14	True				
ANR	522475	UnaryOperationExpression	& I -> iter		522249	0					
ANR	522476	UnaryOperator	&		522249	0					
ANR	522477	PtrMemberAccess	I -> iter		522249	1					
ANR	522478	Identifier	I		522249	0					
ANR	522479	Identifier	iter		522249	1					
ANR	522480	ReturnType	zend_object_iterator *		522249	1					
ANR	522481	Identifier	php_com_saproxy_iter_get		522249	2					
ANR	522482	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		522249	3					
ANR	522483	Parameter	zend_class_entry * ce	538:47:13475:13494	522249	0	True				
ANR	522484	ParameterType	zend_class_entry *		522249	0					
ANR	522485	Identifier	ce		522249	1					
ANR	522486	Parameter	zval * object	538:69:13497:13508	522249	1	True				
ANR	522487	ParameterType	zval *		522249	0					
ANR	522488	Identifier	object		522249	1					
ANR	522489	Parameter	int by_ref	538:83:13511:13520	522249	2	True				
ANR	522490	ParameterType	int		522249	0					
ANR	522491	Identifier	by_ref		522249	1					
ANR	522492	CFGEntryNode	ENTRY		522249		True				
ANR	522493	CFGExitNode	EXIT		522249		True				
ANR	522494	Symbol	* * I		522249						
ANR	522495	Symbol	& I -> imin		522249						
ANR	522496	Symbol	Z_LVAL		522249						
ANR	522497	Symbol	I		522249						
ANR	522498	Symbol	Z_PTR		522249						
ANR	522499	Symbol	proxy -> indices		522249						
ANR	522500	Symbol	& I -> proxy_obj		522249						
ANR	522501	Symbol	proxy -> obj		522249						
ANR	522502	Symbol	* I		522249						
ANR	522503	Symbol	I -> iter . funcs		522249						
ANR	522504	Symbol	& I -> iter		522249						
ANR	522505	Symbol	ecalloc		522249						
ANR	522506	Symbol	& saproxy_iter_funcs		522249						
ANR	522507	Symbol	I -> indices		522249						
ANR	522508	Symbol	& I -> imax		522249						
ANR	522509	Symbol	* I -> indices		522249						
ANR	522510	Symbol	& proxy -> obj -> v		522249						
ANR	522511	Symbol	ce		522249						
ANR	522512	Symbol	* * proxy		522249						
ANR	522513	Symbol	I -> imin		522249						
ANR	522514	Symbol	I -> key		522249						
ANR	522515	Symbol	SA_FETCH		522249						
ANR	522516	Symbol	I -> proxy		522249						
ANR	522517	Symbol	proxy -> dimensions		522249						
ANR	522518	Symbol	I -> iter . data		522249						
ANR	522519	Symbol	i		522249						
ANR	522520	Symbol	* proxy -> indices		522249						
ANR	522521	Symbol	proxy		522249						
ANR	522522	Symbol	I -> iter		522249						
ANR	522523	Symbol	E_ERROR		522249						
ANR	522524	Symbol	* i		522249						
ANR	522525	Symbol	* proxy		522249						
ANR	522526	Symbol	by_ref		522249						
ANR	522527	Symbol	safe_emalloc		522249						
ANR	522528	Symbol	V_ARRAY		522249						
ANR	522529	Symbol	object		522249						
