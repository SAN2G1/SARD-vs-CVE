command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2049933	File	data/converged/CVE-2015-8617_php-src/ext_spl_spl_functions.c								
ANR	2049934	Function	spl_register_interface	31:0:1334:1588							
ANR	2049935	FunctionDef	"spl_register_interface (zend_class_entry * * ppce , char * class_name , const zend_function_entry * functions)"		2049934	0					
ANR	2049936	CompoundStatement		32:0:1446:1588	2049934	0					
ANR	2049937	IdentifierDeclStatement	zend_class_entry ce ;	33:1:1449:1468	2049934	0	True				
ANR	2049938	IdentifierDecl	ce		2049934	0					
ANR	2049939	IdentifierDeclType	zend_class_entry		2049934	0					
ANR	2049940	Identifier	ce		2049934	1					
ANR	2049941	ExpressionStatement	"INIT_CLASS_ENTRY_EX ( ce , class_name , strlen ( class_name ) , functions )"	35:1:1472:1538	2049934	1	True				
ANR	2049942	CallExpression	"INIT_CLASS_ENTRY_EX ( ce , class_name , strlen ( class_name ) , functions )"		2049934	0					
ANR	2049943	Callee	INIT_CLASS_ENTRY_EX		2049934	0					
ANR	2049944	Identifier	INIT_CLASS_ENTRY_EX		2049934	0					
ANR	2049945	ArgumentList	ce		2049934	1					
ANR	2049946	Argument	ce		2049934	0					
ANR	2049947	Identifier	ce		2049934	0					
ANR	2049948	Argument	class_name		2049934	1					
ANR	2049949	Identifier	class_name		2049934	0					
ANR	2049950	Argument	strlen ( class_name )		2049934	2					
ANR	2049951	CallExpression	strlen ( class_name )		2049934	0					
ANR	2049952	Callee	strlen		2049934	0					
ANR	2049953	Identifier	strlen		2049934	0					
ANR	2049954	ArgumentList	class_name		2049934	1					
ANR	2049955	Argument	class_name		2049934	0					
ANR	2049956	Identifier	class_name		2049934	0					
ANR	2049957	Argument	functions		2049934	3					
ANR	2049958	Identifier	functions		2049934	0					
ANR	2049959	ExpressionStatement	* ppce = zend_register_internal_interface ( & ce )	36:1:1541:1586	2049934	2	True				
ANR	2049960	AssignmentExpression	* ppce = zend_register_internal_interface ( & ce )		2049934	0		=			
ANR	2049961	UnaryOperationExpression	* ppce		2049934	0					
ANR	2049962	UnaryOperator	*		2049934	0					
ANR	2049963	Identifier	ppce		2049934	1					
ANR	2049964	CallExpression	zend_register_internal_interface ( & ce )		2049934	1					
ANR	2049965	Callee	zend_register_internal_interface		2049934	0					
ANR	2049966	Identifier	zend_register_internal_interface		2049934	0					
ANR	2049967	ArgumentList	& ce		2049934	1					
ANR	2049968	Argument	& ce		2049934	0					
ANR	2049969	UnaryOperationExpression	& ce		2049934	0					
ANR	2049970	UnaryOperator	&		2049934	0					
ANR	2049971	Identifier	ce		2049934	1					
ANR	2049972	ReturnType	void		2049934	1					
ANR	2049973	Identifier	spl_register_interface		2049934	2					
ANR	2049974	ParameterList	"zend_class_entry * * ppce , char * class_name , const zend_function_entry * functions"		2049934	3					
ANR	2049975	Parameter	zend_class_entry * * ppce	31:28:1362:1385	2049934	0	True				
ANR	2049976	ParameterType	zend_class_entry * *		2049934	0					
ANR	2049977	Identifier	ppce		2049934	1					
ANR	2049978	Parameter	char * class_name	31:54:1388:1404	2049934	1	True				
ANR	2049979	ParameterType	char *		2049934	0					
ANR	2049980	Identifier	class_name		2049934	1					
ANR	2049981	Parameter	const zend_function_entry * functions	31:73:1407:1443	2049934	2	True				
ANR	2049982	ParameterType	const zend_function_entry *		2049934	0					
ANR	2049983	Identifier	functions		2049934	1					
ANR	2049984	CFGEntryNode	ENTRY		2049934		True				
ANR	2049985	CFGExitNode	EXIT		2049934		True				
ANR	2049986	Symbol	strlen		2049934						
ANR	2049987	Symbol	ce		2049934						
ANR	2049988	Symbol	functions		2049934						
ANR	2049989	Symbol	ppce		2049934						
ANR	2049990	Symbol	* ppce		2049934						
ANR	2049991	Symbol	class_name		2049934						
ANR	2049992	Symbol	& ce		2049934						
ANR	2049993	Symbol	zend_register_internal_interface		2049934						
ANR	2049994	Function	spl_register_std_class	41:0:1634:2011							
ANR	2049995	FunctionDef	"spl_register_std_class (zend_class_entry * * ppce , char * class_name , void * obj_ctor , const zend_function_entry * function_list)"		2049994	0					
ANR	2049996	CompoundStatement		42:0:1774:2011	2049994	0					
ANR	2049997	IdentifierDeclStatement	zend_class_entry ce ;	43:1:1777:1796	2049994	0	True				
ANR	2049998	IdentifierDecl	ce		2049994	0					
ANR	2049999	IdentifierDeclType	zend_class_entry		2049994	0					
ANR	2050000	Identifier	ce		2049994	1					
ANR	2050001	ExpressionStatement	"INIT_CLASS_ENTRY_EX ( ce , class_name , strlen ( class_name ) , function_list )"	45:1:1800:1870	2049994	1	True				
ANR	2050002	CallExpression	"INIT_CLASS_ENTRY_EX ( ce , class_name , strlen ( class_name ) , function_list )"		2049994	0					
ANR	2050003	Callee	INIT_CLASS_ENTRY_EX		2049994	0					
ANR	2050004	Identifier	INIT_CLASS_ENTRY_EX		2049994	0					
ANR	2050005	ArgumentList	ce		2049994	1					
ANR	2050006	Argument	ce		2049994	0					
ANR	2050007	Identifier	ce		2049994	0					
ANR	2050008	Argument	class_name		2049994	1					
ANR	2050009	Identifier	class_name		2049994	0					
ANR	2050010	Argument	strlen ( class_name )		2049994	2					
ANR	2050011	CallExpression	strlen ( class_name )		2049994	0					
ANR	2050012	Callee	strlen		2049994	0					
ANR	2050013	Identifier	strlen		2049994	0					
ANR	2050014	ArgumentList	class_name		2049994	1					
ANR	2050015	Argument	class_name		2049994	0					
ANR	2050016	Identifier	class_name		2049994	0					
ANR	2050017	Argument	function_list		2049994	3					
ANR	2050018	Identifier	function_list		2049994	0					
ANR	2050019	ExpressionStatement	* ppce = zend_register_internal_class ( & ce )	46:1:1873:1914	2049994	2	True				
ANR	2050020	AssignmentExpression	* ppce = zend_register_internal_class ( & ce )		2049994	0		=			
ANR	2050021	UnaryOperationExpression	* ppce		2049994	0					
ANR	2050022	UnaryOperator	*		2049994	0					
ANR	2050023	Identifier	ppce		2049994	1					
ANR	2050024	CallExpression	zend_register_internal_class ( & ce )		2049994	1					
ANR	2050025	Callee	zend_register_internal_class		2049994	0					
ANR	2050026	Identifier	zend_register_internal_class		2049994	0					
ANR	2050027	ArgumentList	& ce		2049994	1					
ANR	2050028	Argument	& ce		2049994	0					
ANR	2050029	UnaryOperationExpression	& ce		2049994	0					
ANR	2050030	UnaryOperator	&		2049994	0					
ANR	2050031	Identifier	ce		2049994	1					
ANR	2050032	IfStatement	if ( obj_ctor )		2049994	3					
ANR	2050033	Condition	obj_ctor	49:5:1959:1966	2049994	0	True				
ANR	2050034	Identifier	obj_ctor		2049994	0					
ANR	2050035	CompoundStatement		8:15:194:194	2049994	1					
ANR	2050036	ExpressionStatement	( * ppce ) -> create_object = obj_ctor	50:2:1973:2006	2049994	0	True				
ANR	2050037	AssignmentExpression	( * ppce ) -> create_object = obj_ctor		2049994	0		=			
ANR	2050038	PtrMemberAccess	( * ppce ) -> create_object		2049994	0					
ANR	2050039	UnaryOperationExpression	* ppce		2049994	0					
ANR	2050040	UnaryOperator	*		2049994	0					
ANR	2050041	Identifier	ppce		2049994	1					
ANR	2050042	Identifier	create_object		2049994	1					
ANR	2050043	Identifier	obj_ctor		2049994	1					
ANR	2050044	ReturnType	PHPAPI void		2049994	1					
ANR	2050045	Identifier	spl_register_std_class		2049994	2					
ANR	2050046	ParameterList	"zend_class_entry * * ppce , char * class_name , void * obj_ctor , const zend_function_entry * function_list"		2049994	3					
ANR	2050047	Parameter	zend_class_entry * * ppce	41:35:1669:1692	2049994	0	True				
ANR	2050048	ParameterType	zend_class_entry * *		2049994	0					
ANR	2050049	Identifier	ppce		2049994	1					
ANR	2050050	Parameter	char * class_name	41:61:1695:1711	2049994	1	True				
ANR	2050051	ParameterType	char *		2049994	0					
ANR	2050052	Identifier	class_name		2049994	1					
ANR	2050053	Parameter	void * obj_ctor	41:80:1714:1728	2049994	2	True				
ANR	2050054	ParameterType	void *		2049994	0					
ANR	2050055	Identifier	obj_ctor		2049994	1					
ANR	2050056	Parameter	const zend_function_entry * function_list	41:97:1731:1771	2049994	3	True				
ANR	2050057	ParameterType	const zend_function_entry *		2049994	0					
ANR	2050058	Identifier	function_list		2049994	1					
ANR	2050059	CFGEntryNode	ENTRY		2049994		True				
ANR	2050060	CFGExitNode	EXIT		2049994		True				
ANR	2050061	Symbol	function_list		2049994						
ANR	2050062	Symbol	strlen		2049994						
ANR	2050063	Symbol	ce		2049994						
ANR	2050064	Symbol	( * ppce ) -> create_object		2049994						
ANR	2050065	Symbol	* * ppce		2049994						
ANR	2050066	Symbol	ppce		2049994						
ANR	2050067	Symbol	* ppce		2049994						
ANR	2050068	Symbol	obj_ctor		2049994						
ANR	2050069	Symbol	class_name		2049994						
ANR	2050070	Symbol	& ce		2049994						
ANR	2050071	Symbol	zend_register_internal_class		2049994						
ANR	2050072	Function	spl_register_sub_class	56:0:2057:2540							
ANR	2050073	FunctionDef	"spl_register_sub_class (zend_class_entry * * ppce , zend_class_entry * parent_ce , char * class_name , void * obj_ctor , const zend_function_entry * function_list)"		2050072	0					
ANR	2050074	CompoundStatement		57:0:2226:2540	2050072	0					
ANR	2050075	IdentifierDeclStatement	zend_class_entry ce ;	58:1:2229:2248	2050072	0	True				
ANR	2050076	IdentifierDecl	ce		2050072	0					
ANR	2050077	IdentifierDeclType	zend_class_entry		2050072	0					
ANR	2050078	Identifier	ce		2050072	1					
ANR	2050079	ExpressionStatement	"INIT_CLASS_ENTRY_EX ( ce , class_name , strlen ( class_name ) , function_list )"	60:1:2252:2322	2050072	1	True				
ANR	2050080	CallExpression	"INIT_CLASS_ENTRY_EX ( ce , class_name , strlen ( class_name ) , function_list )"		2050072	0					
ANR	2050081	Callee	INIT_CLASS_ENTRY_EX		2050072	0					
ANR	2050082	Identifier	INIT_CLASS_ENTRY_EX		2050072	0					
ANR	2050083	ArgumentList	ce		2050072	1					
ANR	2050084	Argument	ce		2050072	0					
ANR	2050085	Identifier	ce		2050072	0					
ANR	2050086	Argument	class_name		2050072	1					
ANR	2050087	Identifier	class_name		2050072	0					
ANR	2050088	Argument	strlen ( class_name )		2050072	2					
ANR	2050089	CallExpression	strlen ( class_name )		2050072	0					
ANR	2050090	Callee	strlen		2050072	0					
ANR	2050091	Identifier	strlen		2050072	0					
ANR	2050092	ArgumentList	class_name		2050072	1					
ANR	2050093	Argument	class_name		2050072	0					
ANR	2050094	Identifier	class_name		2050072	0					
ANR	2050095	Argument	function_list		2050072	3					
ANR	2050096	Identifier	function_list		2050072	0					
ANR	2050097	ExpressionStatement	"* ppce = zend_register_internal_class_ex ( & ce , parent_ce )"	61:1:2325:2380	2050072	2	True				
ANR	2050098	AssignmentExpression	"* ppce = zend_register_internal_class_ex ( & ce , parent_ce )"		2050072	0		=			
ANR	2050099	UnaryOperationExpression	* ppce		2050072	0					
ANR	2050100	UnaryOperator	*		2050072	0					
ANR	2050101	Identifier	ppce		2050072	1					
ANR	2050102	CallExpression	"zend_register_internal_class_ex ( & ce , parent_ce )"		2050072	1					
ANR	2050103	Callee	zend_register_internal_class_ex		2050072	0					
ANR	2050104	Identifier	zend_register_internal_class_ex		2050072	0					
ANR	2050105	ArgumentList	& ce		2050072	1					
ANR	2050106	Argument	& ce		2050072	0					
ANR	2050107	UnaryOperationExpression	& ce		2050072	0					
ANR	2050108	UnaryOperator	&		2050072	0					
ANR	2050109	Identifier	ce		2050072	1					
ANR	2050110	Argument	parent_ce		2050072	1					
ANR	2050111	Identifier	parent_ce		2050072	0					
ANR	2050112	IfStatement	if ( obj_ctor )		2050072	3					
ANR	2050113	Condition	obj_ctor	64:5:2425:2432	2050072	0	True				
ANR	2050114	Identifier	obj_ctor		2050072	0					
ANR	2050115	CompoundStatement		8:15:208:208	2050072	1					
ANR	2050116	ExpressionStatement	( * ppce ) -> create_object = obj_ctor	65:2:2439:2472	2050072	0	True				
ANR	2050117	AssignmentExpression	( * ppce ) -> create_object = obj_ctor		2050072	0		=			
ANR	2050118	PtrMemberAccess	( * ppce ) -> create_object		2050072	0					
ANR	2050119	UnaryOperationExpression	* ppce		2050072	0					
ANR	2050120	UnaryOperator	*		2050072	0					
ANR	2050121	Identifier	ppce		2050072	1					
ANR	2050122	Identifier	create_object		2050072	1					
ANR	2050123	Identifier	obj_ctor		2050072	1					
ANR	2050124	ElseStatement	else		2050072	0					
ANR	2050125	CompoundStatement		10:8:255:255	2050072	0					
ANR	2050126	ExpressionStatement	( * ppce ) -> create_object = parent_ce -> create_object	67:2:2486:2535	2050072	0	True				
ANR	2050127	AssignmentExpression	( * ppce ) -> create_object = parent_ce -> create_object		2050072	0		=			
ANR	2050128	PtrMemberAccess	( * ppce ) -> create_object		2050072	0					
ANR	2050129	UnaryOperationExpression	* ppce		2050072	0					
ANR	2050130	UnaryOperator	*		2050072	0					
ANR	2050131	Identifier	ppce		2050072	1					
ANR	2050132	Identifier	create_object		2050072	1					
ANR	2050133	PtrMemberAccess	parent_ce -> create_object		2050072	1					
ANR	2050134	Identifier	parent_ce		2050072	0					
ANR	2050135	Identifier	create_object		2050072	1					
ANR	2050136	ReturnType	PHPAPI void		2050072	1					
ANR	2050137	Identifier	spl_register_sub_class		2050072	2					
ANR	2050138	ParameterList	"zend_class_entry * * ppce , zend_class_entry * parent_ce , char * class_name , void * obj_ctor , const zend_function_entry * function_list"		2050072	3					
ANR	2050139	Parameter	zend_class_entry * * ppce	56:35:2092:2115	2050072	0	True				
ANR	2050140	ParameterType	zend_class_entry * *		2050072	0					
ANR	2050141	Identifier	ppce		2050072	1					
ANR	2050142	Parameter	zend_class_entry * parent_ce	56:61:2118:2145	2050072	1	True				
ANR	2050143	ParameterType	zend_class_entry *		2050072	0					
ANR	2050144	Identifier	parent_ce		2050072	1					
ANR	2050145	Parameter	char * class_name	56:91:2148:2164	2050072	2	True				
ANR	2050146	ParameterType	char *		2050072	0					
ANR	2050147	Identifier	class_name		2050072	1					
ANR	2050148	Parameter	void * obj_ctor	56:110:2167:2180	2050072	3	True				
ANR	2050149	ParameterType	void *		2050072	0					
ANR	2050150	Identifier	obj_ctor		2050072	1					
ANR	2050151	Parameter	const zend_function_entry * function_list	56:126:2183:2223	2050072	4	True				
ANR	2050152	ParameterType	const zend_function_entry *		2050072	0					
ANR	2050153	Identifier	function_list		2050072	1					
ANR	2050154	CFGEntryNode	ENTRY		2050072		True				
ANR	2050155	CFGExitNode	EXIT		2050072		True				
ANR	2050156	Symbol	function_list		2050072						
ANR	2050157	Symbol	ce		2050072						
ANR	2050158	Symbol	obj_ctor		2050072						
ANR	2050159	Symbol	& ce		2050072						
ANR	2050160	Symbol	parent_ce		2050072						
ANR	2050161	Symbol	strlen		2050072						
ANR	2050162	Symbol	zend_register_internal_class_ex		2050072						
ANR	2050163	Symbol	( * ppce ) -> create_object		2050072						
ANR	2050164	Symbol	* * ppce		2050072						
ANR	2050165	Symbol	ppce		2050072						
ANR	2050166	Symbol	parent_ce -> create_object		2050072						
ANR	2050167	Symbol	* ppce		2050072						
ANR	2050168	Symbol	* parent_ce		2050072						
ANR	2050169	Symbol	class_name		2050072						
ANR	2050170	Function	spl_register_property	73:0:2585:2779							
ANR	2050171	FunctionDef	"spl_register_property (zend_class_entry * class_entry , char * prop_name , int prop_name_len , int prop_flags)"		2050170	0					
ANR	2050172	CompoundStatement		74:0:2697:2779	2050170	0					
ANR	2050173	ExpressionStatement	"zend_declare_property_null ( class_entry , prop_name , prop_name_len , prop_flags )"	75:1:2700:2777	2050170	0	True				
ANR	2050174	CallExpression	"zend_declare_property_null ( class_entry , prop_name , prop_name_len , prop_flags )"		2050170	0					
ANR	2050175	Callee	zend_declare_property_null		2050170	0					
ANR	2050176	Identifier	zend_declare_property_null		2050170	0					
ANR	2050177	ArgumentList	class_entry		2050170	1					
ANR	2050178	Argument	class_entry		2050170	0					
ANR	2050179	Identifier	class_entry		2050170	0					
ANR	2050180	Argument	prop_name		2050170	1					
ANR	2050181	Identifier	prop_name		2050170	0					
ANR	2050182	Argument	prop_name_len		2050170	2					
ANR	2050183	Identifier	prop_name_len		2050170	0					
ANR	2050184	Argument	prop_flags		2050170	3					
ANR	2050185	Identifier	prop_flags		2050170	0					
ANR	2050186	ReturnType	void		2050170	1					
ANR	2050187	Identifier	spl_register_property		2050170	2					
ANR	2050188	ParameterList	"zend_class_entry * class_entry , char * prop_name , int prop_name_len , int prop_flags"		2050170	3					
ANR	2050189	Parameter	zend_class_entry * class_entry	73:28:2613:2642	2050170	0	True				
ANR	2050190	ParameterType	zend_class_entry *		2050170	0					
ANR	2050191	Identifier	class_entry		2050170	1					
ANR	2050192	Parameter	char * prop_name	73:60:2645:2659	2050170	1	True				
ANR	2050193	ParameterType	char *		2050170	0					
ANR	2050194	Identifier	prop_name		2050170	1					
ANR	2050195	Parameter	int prop_name_len	73:77:2662:2678	2050170	2	True				
ANR	2050196	ParameterType	int		2050170	0					
ANR	2050197	Identifier	prop_name_len		2050170	1					
ANR	2050198	Parameter	int prop_flags	73:96:2681:2694	2050170	3	True				
ANR	2050199	ParameterType	int		2050170	0					
ANR	2050200	Identifier	prop_flags		2050170	1					
ANR	2050201	CFGEntryNode	ENTRY		2050170		True				
ANR	2050202	CFGExitNode	EXIT		2050170		True				
ANR	2050203	Symbol	prop_name		2050170						
ANR	2050204	Symbol	class_entry		2050170						
ANR	2050205	Symbol	prop_name_len		2050170						
ANR	2050206	Symbol	prop_flags		2050170						
ANR	2050207	Function	spl_add_class_name	80:0:2821:3196							
ANR	2050208	FunctionDef	"spl_add_class_name (zval * list , zend_class_entry * pce , int allow , int ce_flags)"		2050207	0					
ANR	2050209	CompoundStatement		81:0:2905:3196	2050207	0					
ANR	2050210	IfStatement	if ( ! allow || ( allow > 0 && pce -> ce_flags & ce_flags ) || ( allow < 0 && ! ( pce -> ce_flags & ce_flags ) ) )		2050207	0					
ANR	2050211	Condition	! allow || ( allow > 0 && pce -> ce_flags & ce_flags ) || ( allow < 0 && ! ( pce -> ce_flags & ce_flags ) )	82:5:2912:3006	2050207	0	True				
ANR	2050212	OrExpression	! allow || ( allow > 0 && pce -> ce_flags & ce_flags ) || ( allow < 0 && ! ( pce -> ce_flags & ce_flags ) )		2050207	0		||			
ANR	2050213	UnaryOperationExpression	! allow		2050207	0					
ANR	2050214	UnaryOperator	!		2050207	0					
ANR	2050215	Identifier	allow		2050207	1					
ANR	2050216	OrExpression	( allow > 0 && pce -> ce_flags & ce_flags ) || ( allow < 0 && ! ( pce -> ce_flags & ce_flags ) )		2050207	1		||			
ANR	2050217	AndExpression	allow > 0 && pce -> ce_flags & ce_flags		2050207	0		&&			
ANR	2050218	RelationalExpression	allow > 0		2050207	0		>			
ANR	2050219	Identifier	allow		2050207	0					
ANR	2050220	PrimaryExpression	0		2050207	1					
ANR	2050221	BitAndExpression	pce -> ce_flags & ce_flags		2050207	1		&			
ANR	2050222	PtrMemberAccess	pce -> ce_flags		2050207	0					
ANR	2050223	Identifier	pce		2050207	0					
ANR	2050224	Identifier	ce_flags		2050207	1					
ANR	2050225	Identifier	ce_flags		2050207	1					
ANR	2050226	AndExpression	allow < 0 && ! ( pce -> ce_flags & ce_flags )		2050207	1		&&			
ANR	2050227	RelationalExpression	allow < 0		2050207	0		<			
ANR	2050228	Identifier	allow		2050207	0					
ANR	2050229	PrimaryExpression	0		2050207	1					
ANR	2050230	UnaryOperationExpression	! ( pce -> ce_flags & ce_flags )		2050207	1					
ANR	2050231	UnaryOperator	!		2050207	0					
ANR	2050232	BitAndExpression	pce -> ce_flags & ce_flags		2050207	1		&			
ANR	2050233	PtrMemberAccess	pce -> ce_flags		2050207	0					
ANR	2050234	Identifier	pce		2050207	0					
ANR	2050235	Identifier	ce_flags		2050207	1					
ANR	2050236	Identifier	ce_flags		2050207	1					
ANR	2050237	CompoundStatement		3:2:107:116	2050207	1					
ANR	2050238	IdentifierDeclStatement	zval * tmp ;	83:2:3013:3022	2050207	0	True				
ANR	2050239	IdentifierDecl	* tmp		2050207	0					
ANR	2050240	IdentifierDeclType	zval *		2050207	0					
ANR	2050241	Identifier	tmp		2050207	1					
ANR	2050242	IfStatement	"if ( ( tmp = zend_hash_find ( Z_ARRVAL_P ( list ) , pce -> name ) ) == NULL )"		2050207	1					
ANR	2050243	Condition	"( tmp = zend_hash_find ( Z_ARRVAL_P ( list ) , pce -> name ) ) == NULL"	85:6:3031:3089	2050207	0	True				
ANR	2050244	EqualityExpression	"( tmp = zend_hash_find ( Z_ARRVAL_P ( list ) , pce -> name ) ) == NULL"		2050207	0		==			
ANR	2050245	AssignmentExpression	"tmp = zend_hash_find ( Z_ARRVAL_P ( list ) , pce -> name )"		2050207	0		=			
ANR	2050246	Identifier	tmp		2050207	0					
ANR	2050247	CallExpression	"zend_hash_find ( Z_ARRVAL_P ( list ) , pce -> name )"		2050207	1					
ANR	2050248	Callee	zend_hash_find		2050207	0					
ANR	2050249	Identifier	zend_hash_find		2050207	0					
ANR	2050250	ArgumentList	Z_ARRVAL_P ( list )		2050207	1					
ANR	2050251	Argument	Z_ARRVAL_P ( list )		2050207	0					
ANR	2050252	CallExpression	Z_ARRVAL_P ( list )		2050207	0					
ANR	2050253	Callee	Z_ARRVAL_P		2050207	0					
ANR	2050254	Identifier	Z_ARRVAL_P		2050207	0					
ANR	2050255	ArgumentList	list		2050207	1					
ANR	2050256	Argument	list		2050207	0					
ANR	2050257	Identifier	list		2050207	0					
ANR	2050258	Argument	pce -> name		2050207	1					
ANR	2050259	PtrMemberAccess	pce -> name		2050207	0					
ANR	2050260	Identifier	pce		2050207	0					
ANR	2050261	Identifier	name		2050207	1					
ANR	2050262	Identifier	NULL		2050207	1					
ANR	2050263	CompoundStatement		6:3:191:197	2050207	1					
ANR	2050264	IdentifierDeclStatement	zval t ;	86:3:3097:3103	2050207	0	True				
ANR	2050265	IdentifierDecl	t		2050207	0					
ANR	2050266	IdentifierDeclType	zval		2050207	0					
ANR	2050267	Identifier	t		2050207	1					
ANR	2050268	ExpressionStatement	"ZVAL_STR_COPY ( & t , pce -> name )"	87:3:3108:3136	2050207	1	True				
ANR	2050269	CallExpression	"ZVAL_STR_COPY ( & t , pce -> name )"		2050207	0					
ANR	2050270	Callee	ZVAL_STR_COPY		2050207	0					
ANR	2050271	Identifier	ZVAL_STR_COPY		2050207	0					
ANR	2050272	ArgumentList	& t		2050207	1					
ANR	2050273	Argument	& t		2050207	0					
ANR	2050274	UnaryOperationExpression	& t		2050207	0					
ANR	2050275	UnaryOperator	&		2050207	0					
ANR	2050276	Identifier	t		2050207	1					
ANR	2050277	Argument	pce -> name		2050207	1					
ANR	2050278	PtrMemberAccess	pce -> name		2050207	0					
ANR	2050279	Identifier	pce		2050207	0					
ANR	2050280	Identifier	name		2050207	1					
ANR	2050281	ExpressionStatement	"zend_hash_add ( Z_ARRVAL_P ( list ) , pce -> name , & t )"	88:3:3141:3187	2050207	2	True				
ANR	2050282	CallExpression	"zend_hash_add ( Z_ARRVAL_P ( list ) , pce -> name , & t )"		2050207	0					
ANR	2050283	Callee	zend_hash_add		2050207	0					
ANR	2050284	Identifier	zend_hash_add		2050207	0					
ANR	2050285	ArgumentList	Z_ARRVAL_P ( list )		2050207	1					
ANR	2050286	Argument	Z_ARRVAL_P ( list )		2050207	0					
ANR	2050287	CallExpression	Z_ARRVAL_P ( list )		2050207	0					
ANR	2050288	Callee	Z_ARRVAL_P		2050207	0					
ANR	2050289	Identifier	Z_ARRVAL_P		2050207	0					
ANR	2050290	ArgumentList	list		2050207	1					
ANR	2050291	Argument	list		2050207	0					
ANR	2050292	Identifier	list		2050207	0					
ANR	2050293	Argument	pce -> name		2050207	1					
ANR	2050294	PtrMemberAccess	pce -> name		2050207	0					
ANR	2050295	Identifier	pce		2050207	0					
ANR	2050296	Identifier	name		2050207	1					
ANR	2050297	Argument	& t		2050207	2					
ANR	2050298	UnaryOperationExpression	& t		2050207	0					
ANR	2050299	UnaryOperator	&		2050207	0					
ANR	2050300	Identifier	t		2050207	1					
ANR	2050301	ReturnType	void		2050207	1					
ANR	2050302	Identifier	spl_add_class_name		2050207	2					
ANR	2050303	ParameterList	"zval * list , zend_class_entry * pce , int allow , int ce_flags"		2050207	3					
ANR	2050304	Parameter	zval * list	80:24:2845:2854	2050207	0	True				
ANR	2050305	ParameterType	zval *		2050207	0					
ANR	2050306	Identifier	list		2050207	1					
ANR	2050307	Parameter	zend_class_entry * pce	80:36:2857:2877	2050207	1	True				
ANR	2050308	ParameterType	zend_class_entry *		2050207	0					
ANR	2050309	Identifier	pce		2050207	1					
ANR	2050310	Parameter	int allow	80:59:2880:2888	2050207	2	True				
ANR	2050311	ParameterType	int		2050207	0					
ANR	2050312	Identifier	allow		2050207	1					
ANR	2050313	Parameter	int ce_flags	80:70:2891:2902	2050207	3	True				
ANR	2050314	ParameterType	int		2050207	0					
ANR	2050315	Identifier	ce_flags		2050207	1					
ANR	2050316	CFGEntryNode	ENTRY		2050207		True				
ANR	2050317	CFGExitNode	EXIT		2050207		True				
ANR	2050318	Symbol	allow		2050207						
ANR	2050319	Symbol	pce -> ce_flags		2050207						
ANR	2050320	Symbol	NULL		2050207						
ANR	2050321	Symbol	list		2050207						
ANR	2050322	Symbol	zend_hash_find		2050207						
ANR	2050323	Symbol	pce		2050207						
ANR	2050324	Symbol	t		2050207						
ANR	2050325	Symbol	tmp		2050207						
ANR	2050326	Symbol	pce -> name		2050207						
ANR	2050327	Symbol	& t		2050207						
ANR	2050328	Symbol	ce_flags		2050207						
ANR	2050329	Symbol	* pce		2050207						
ANR	2050330	Symbol	Z_ARRVAL_P		2050207						
ANR	2050331	Function	spl_add_interfaces	95:0:3238:3517							
ANR	2050332	FunctionDef	"spl_add_interfaces (zval * list , zend_class_entry * pce , int allow , int ce_flags)"		2050331	0					
ANR	2050333	CompoundStatement		96:0:3323:3517	2050331	0					
ANR	2050334	IdentifierDeclStatement	uint32_t num_interfaces ;	97:1:3326:3349	2050331	0	True				
ANR	2050335	IdentifierDecl	num_interfaces		2050331	0					
ANR	2050336	IdentifierDeclType	uint32_t		2050331	0					
ANR	2050337	Identifier	num_interfaces		2050331	1					
ANR	2050338	ForStatement	for ( num_interfaces = 0 ; num_interfaces < pce -> num_interfaces ; num_interfaces ++ )		2050331	1					
ANR	2050339	ForInit	num_interfaces = 0 ;	99:6:3358:3376	2050331	0	True				
ANR	2050340	AssignmentExpression	num_interfaces = 0		2050331	0		=			
ANR	2050341	Identifier	num_interfaces		2050331	0					
ANR	2050342	PrimaryExpression	0		2050331	1					
ANR	2050343	Condition	num_interfaces < pce -> num_interfaces	99:26:3378:3413	2050331	1	True				
ANR	2050344	RelationalExpression	num_interfaces < pce -> num_interfaces		2050331	0		<			
ANR	2050345	Identifier	num_interfaces		2050331	0					
ANR	2050346	PtrMemberAccess	pce -> num_interfaces		2050331	1					
ANR	2050347	Identifier	pce		2050331	0					
ANR	2050348	Identifier	num_interfaces		2050331	1					
ANR	2050349	PostIncDecOperationExpression	num_interfaces ++	99:64:3416:3431	2050331	2	True				
ANR	2050350	Identifier	num_interfaces		2050331	0					
ANR	2050351	IncDec	++		2050331	1					
ANR	2050352	CompoundStatement		4:82:110:110	2050331	3					
ANR	2050353	ExpressionStatement	"spl_add_class_name ( list , pce -> interfaces [ num_interfaces ] , allow , ce_flags )"	100:2:3438:3512	2050331	0	True				
ANR	2050354	CallExpression	"spl_add_class_name ( list , pce -> interfaces [ num_interfaces ] , allow , ce_flags )"		2050331	0					
ANR	2050355	Callee	spl_add_class_name		2050331	0					
ANR	2050356	Identifier	spl_add_class_name		2050331	0					
ANR	2050357	ArgumentList	list		2050331	1					
ANR	2050358	Argument	list		2050331	0					
ANR	2050359	Identifier	list		2050331	0					
ANR	2050360	Argument	pce -> interfaces [ num_interfaces ]		2050331	1					
ANR	2050361	ArrayIndexing	pce -> interfaces [ num_interfaces ]		2050331	0					
ANR	2050362	PtrMemberAccess	pce -> interfaces		2050331	0					
ANR	2050363	Identifier	pce		2050331	0					
ANR	2050364	Identifier	interfaces		2050331	1					
ANR	2050365	Identifier	num_interfaces		2050331	1					
ANR	2050366	Argument	allow		2050331	2					
ANR	2050367	Identifier	allow		2050331	0					
ANR	2050368	Argument	ce_flags		2050331	3					
ANR	2050369	Identifier	ce_flags		2050331	0					
ANR	2050370	ReturnType	void		2050331	1					
ANR	2050371	Identifier	spl_add_interfaces		2050331	2					
ANR	2050372	ParameterList	"zval * list , zend_class_entry * pce , int allow , int ce_flags"		2050331	3					
ANR	2050373	Parameter	zval * list	95:24:3262:3271	2050331	0	True				
ANR	2050374	ParameterType	zval *		2050331	0					
ANR	2050375	Identifier	list		2050331	1					
ANR	2050376	Parameter	zend_class_entry * pce	95:36:3274:3295	2050331	1	True				
ANR	2050377	ParameterType	zend_class_entry *		2050331	0					
ANR	2050378	Identifier	pce		2050331	1					
ANR	2050379	Parameter	int allow	95:60:3298:3306	2050331	2	True				
ANR	2050380	ParameterType	int		2050331	0					
ANR	2050381	Identifier	allow		2050331	1					
ANR	2050382	Parameter	int ce_flags	95:71:3309:3320	2050331	3	True				
ANR	2050383	ParameterType	int		2050331	0					
ANR	2050384	Identifier	ce_flags		2050331	1					
ANR	2050385	CFGEntryNode	ENTRY		2050331		True				
ANR	2050386	CFGExitNode	EXIT		2050331		True				
ANR	2050387	Symbol	allow		2050331						
ANR	2050388	Symbol	pce		2050331						
ANR	2050389	Symbol	* pce -> interfaces		2050331						
ANR	2050390	Symbol	* * pce		2050331						
ANR	2050391	Symbol	num_interfaces		2050331						
ANR	2050392	Symbol	pce -> interfaces		2050331						
ANR	2050393	Symbol	list		2050331						
ANR	2050394	Symbol	ce_flags		2050331						
ANR	2050395	Symbol	* pce		2050331						
ANR	2050396	Symbol	* num_interfaces		2050331						
ANR	2050397	Symbol	pce -> num_interfaces		2050331						
ANR	2050398	Function	spl_add_traits	106:0:3555:3802							
ANR	2050399	FunctionDef	"spl_add_traits (zval * list , zend_class_entry * pce , int allow , int ce_flags)"		2050398	0					
ANR	2050400	CompoundStatement		107:0:3636:3802	2050398	0					
ANR	2050401	IdentifierDeclStatement	uint32_t num_traits ;	108:1:3639:3658	2050398	0	True				
ANR	2050402	IdentifierDecl	num_traits		2050398	0					
ANR	2050403	IdentifierDeclType	uint32_t		2050398	0					
ANR	2050404	Identifier	num_traits		2050398	1					
ANR	2050405	ForStatement	for ( num_traits = 0 ; num_traits < pce -> num_traits ; num_traits ++ )		2050398	1					
ANR	2050406	ForInit	num_traits = 0 ;	110:6:3667:3681	2050398	0	True				
ANR	2050407	AssignmentExpression	num_traits = 0		2050398	0		=			
ANR	2050408	Identifier	num_traits		2050398	0					
ANR	2050409	PrimaryExpression	0		2050398	1					
ANR	2050410	Condition	num_traits < pce -> num_traits	110:22:3683:3710	2050398	1	True				
ANR	2050411	RelationalExpression	num_traits < pce -> num_traits		2050398	0		<			
ANR	2050412	Identifier	num_traits		2050398	0					
ANR	2050413	PtrMemberAccess	pce -> num_traits		2050398	1					
ANR	2050414	Identifier	pce		2050398	0					
ANR	2050415	Identifier	num_traits		2050398	1					
ANR	2050416	PostIncDecOperationExpression	num_traits ++	110:52:3713:3724	2050398	2	True				
ANR	2050417	Identifier	num_traits		2050398	0					
ANR	2050418	IncDec	++		2050398	1					
ANR	2050419	CompoundStatement		4:66:90:90	2050398	3					
ANR	2050420	ExpressionStatement	"spl_add_class_name ( list , pce -> traits [ num_traits ] , allow , ce_flags )"	111:2:3731:3797	2050398	0	True				
ANR	2050421	CallExpression	"spl_add_class_name ( list , pce -> traits [ num_traits ] , allow , ce_flags )"		2050398	0					
ANR	2050422	Callee	spl_add_class_name		2050398	0					
ANR	2050423	Identifier	spl_add_class_name		2050398	0					
ANR	2050424	ArgumentList	list		2050398	1					
ANR	2050425	Argument	list		2050398	0					
ANR	2050426	Identifier	list		2050398	0					
ANR	2050427	Argument	pce -> traits [ num_traits ]		2050398	1					
ANR	2050428	ArrayIndexing	pce -> traits [ num_traits ]		2050398	0					
ANR	2050429	PtrMemberAccess	pce -> traits		2050398	0					
ANR	2050430	Identifier	pce		2050398	0					
ANR	2050431	Identifier	traits		2050398	1					
ANR	2050432	Identifier	num_traits		2050398	1					
ANR	2050433	Argument	allow		2050398	2					
ANR	2050434	Identifier	allow		2050398	0					
ANR	2050435	Argument	ce_flags		2050398	3					
ANR	2050436	Identifier	ce_flags		2050398	0					
ANR	2050437	ReturnType	void		2050398	1					
ANR	2050438	Identifier	spl_add_traits		2050398	2					
ANR	2050439	ParameterList	"zval * list , zend_class_entry * pce , int allow , int ce_flags"		2050398	3					
ANR	2050440	Parameter	zval * list	106:20:3575:3584	2050398	0	True				
ANR	2050441	ParameterType	zval *		2050398	0					
ANR	2050442	Identifier	list		2050398	1					
ANR	2050443	Parameter	zend_class_entry * pce	106:32:3587:3608	2050398	1	True				
ANR	2050444	ParameterType	zend_class_entry *		2050398	0					
ANR	2050445	Identifier	pce		2050398	1					
ANR	2050446	Parameter	int allow	106:56:3611:3619	2050398	2	True				
ANR	2050447	ParameterType	int		2050398	0					
ANR	2050448	Identifier	allow		2050398	1					
ANR	2050449	Parameter	int ce_flags	106:67:3622:3633	2050398	3	True				
ANR	2050450	ParameterType	int		2050398	0					
ANR	2050451	Identifier	ce_flags		2050398	1					
ANR	2050452	CFGEntryNode	ENTRY		2050398		True				
ANR	2050453	CFGExitNode	EXIT		2050398		True				
ANR	2050454	Symbol	allow		2050398						
ANR	2050455	Symbol	pce		2050398						
ANR	2050456	Symbol	* num_traits		2050398						
ANR	2050457	Symbol	num_traits		2050398						
ANR	2050458	Symbol	* pce -> traits		2050398						
ANR	2050459	Symbol	* * pce		2050398						
ANR	2050460	Symbol	pce -> traits		2050398						
ANR	2050461	Symbol	pce -> num_traits		2050398						
ANR	2050462	Symbol	list		2050398						
ANR	2050463	Symbol	ce_flags		2050398						
ANR	2050464	Symbol	* pce		2050398						
ANR	2050465	Function	spl_add_classes	118:0:3842:4189							
ANR	2050466	FunctionDef	"spl_add_classes (zend_class_entry * pce , zval * list , int sub , int allow , int ce_flags)"		2050465	0					
ANR	2050467	CompoundStatement		119:0:3931:4189	2050465	0					
ANR	2050468	IfStatement	if ( ! pce )		2050465	0					
ANR	2050469	Condition	! pce	120:5:3938:3941	2050465	0	True				
ANR	2050470	UnaryOperationExpression	! pce		2050465	0					
ANR	2050471	UnaryOperator	!		2050465	0					
ANR	2050472	Identifier	pce		2050465	1					
ANR	2050473	CompoundStatement		2:11:12:12	2050465	1					
ANR	2050474	ReturnStatement	return 0 ;	121:2:3948:3956	2050465	0	True				
ANR	2050475	PrimaryExpression	0		2050465	0					
ANR	2050476	ExpressionStatement	"spl_add_class_name ( list , pce , allow , ce_flags )"	123:1:3962:4008	2050465	1	True				
ANR	2050477	CallExpression	"spl_add_class_name ( list , pce , allow , ce_flags )"		2050465	0					
ANR	2050478	Callee	spl_add_class_name		2050465	0					
ANR	2050479	Identifier	spl_add_class_name		2050465	0					
ANR	2050480	ArgumentList	list		2050465	1					
ANR	2050481	Argument	list		2050465	0					
ANR	2050482	Identifier	list		2050465	0					
ANR	2050483	Argument	pce		2050465	1					
ANR	2050484	Identifier	pce		2050465	0					
ANR	2050485	Argument	allow		2050465	2					
ANR	2050486	Identifier	allow		2050465	0					
ANR	2050487	Argument	ce_flags		2050465	3					
ANR	2050488	Identifier	ce_flags		2050465	0					
ANR	2050489	IfStatement	if ( sub )		2050465	2					
ANR	2050490	Condition	sub	124:5:4015:4017	2050465	0	True				
ANR	2050491	Identifier	sub		2050465	0					
ANR	2050492	CompoundStatement		6:10:88:88	2050465	1					
ANR	2050493	ExpressionStatement	"spl_add_interfaces ( list , pce , allow , ce_flags )"	125:2:4024:4070	2050465	0	True				
ANR	2050494	CallExpression	"spl_add_interfaces ( list , pce , allow , ce_flags )"		2050465	0					
ANR	2050495	Callee	spl_add_interfaces		2050465	0					
ANR	2050496	Identifier	spl_add_interfaces		2050465	0					
ANR	2050497	ArgumentList	list		2050465	1					
ANR	2050498	Argument	list		2050465	0					
ANR	2050499	Identifier	list		2050465	0					
ANR	2050500	Argument	pce		2050465	1					
ANR	2050501	Identifier	pce		2050465	0					
ANR	2050502	Argument	allow		2050465	2					
ANR	2050503	Identifier	allow		2050465	0					
ANR	2050504	Argument	ce_flags		2050465	3					
ANR	2050505	Identifier	ce_flags		2050465	0					
ANR	2050506	WhileStatement	while ( pce -> parent )		2050465	1					
ANR	2050507	Condition	pce -> parent	126:9:4081:4091	2050465	0	True				
ANR	2050508	PtrMemberAccess	pce -> parent		2050465	0					
ANR	2050509	Identifier	pce		2050465	0					
ANR	2050510	Identifier	parent		2050465	1					
ANR	2050511	CompoundStatement		8:22:162:162	2050465	1					
ANR	2050512	ExpressionStatement	pce = pce -> parent	127:3:4099:4116	2050465	0	True				
ANR	2050513	AssignmentExpression	pce = pce -> parent		2050465	0		=			
ANR	2050514	Identifier	pce		2050465	0					
ANR	2050515	PtrMemberAccess	pce -> parent		2050465	1					
ANR	2050516	Identifier	pce		2050465	0					
ANR	2050517	Identifier	parent		2050465	1					
ANR	2050518	ExpressionStatement	"spl_add_classes ( pce , list , sub , allow , ce_flags )"	128:3:4121:4169	2050465	1	True				
ANR	2050519	CallExpression	"spl_add_classes ( pce , list , sub , allow , ce_flags )"		2050465	0					
ANR	2050520	Callee	spl_add_classes		2050465	0					
ANR	2050521	Identifier	spl_add_classes		2050465	0					
ANR	2050522	ArgumentList	pce		2050465	1					
ANR	2050523	Argument	pce		2050465	0					
ANR	2050524	Identifier	pce		2050465	0					
ANR	2050525	Argument	list		2050465	1					
ANR	2050526	Identifier	list		2050465	0					
ANR	2050527	Argument	sub		2050465	2					
ANR	2050528	Identifier	sub		2050465	0					
ANR	2050529	Argument	allow		2050465	3					
ANR	2050530	Identifier	allow		2050465	0					
ANR	2050531	Argument	ce_flags		2050465	4					
ANR	2050532	Identifier	ce_flags		2050465	0					
ANR	2050533	ReturnStatement	return 0 ;	131:1:4179:4187	2050465	3	True				
ANR	2050534	PrimaryExpression	0		2050465	0					
ANR	2050535	ReturnType	int		2050465	1					
ANR	2050536	Identifier	spl_add_classes		2050465	2					
ANR	2050537	ParameterList	"zend_class_entry * pce , zval * list , int sub , int allow , int ce_flags"		2050465	3					
ANR	2050538	Parameter	zend_class_entry * pce	118:20:3862:3882	2050465	0	True				
ANR	2050539	ParameterType	zend_class_entry *		2050465	0					
ANR	2050540	Identifier	pce		2050465	1					
ANR	2050541	Parameter	zval * list	118:43:3885:3894	2050465	1	True				
ANR	2050542	ParameterType	zval *		2050465	0					
ANR	2050543	Identifier	list		2050465	1					
ANR	2050544	Parameter	int sub	118:55:3897:3903	2050465	2	True				
ANR	2050545	ParameterType	int		2050465	0					
ANR	2050546	Identifier	sub		2050465	1					
ANR	2050547	Parameter	int allow	118:64:3906:3914	2050465	3	True				
ANR	2050548	ParameterType	int		2050465	0					
ANR	2050549	Identifier	allow		2050465	1					
ANR	2050550	Parameter	int ce_flags	118:75:3917:3928	2050465	4	True				
ANR	2050551	ParameterType	int		2050465	0					
ANR	2050552	Identifier	ce_flags		2050465	1					
ANR	2050553	CFGEntryNode	ENTRY		2050465		True				
ANR	2050554	CFGExitNode	EXIT		2050465		True				
ANR	2050555	Symbol	allow		2050465						
ANR	2050556	Symbol	sub		2050465						
ANR	2050557	Symbol	pce		2050465						
ANR	2050558	Symbol	pce -> parent		2050465						
ANR	2050559	Symbol	list		2050465						
ANR	2050560	Symbol	ce_flags		2050465						
ANR	2050561	Symbol	* pce		2050465						
ANR	2050562	Function	spl_gen_private_prop_name	135:0:4202:4406							
ANR	2050563	FunctionDef	"spl_gen_private_prop_name (zend_class_entry * ce , char * prop_name , int prop_len)"		2050562	0					
ANR	2050564	CompoundStatement		136:0:4305:4406	2050562	0					
ANR	2050565	ReturnStatement	"return zend_mangle_property_name ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , prop_name , prop_len , 0 ) ;"	137:1:4308:4404	2050562	0	True				
ANR	2050566	CallExpression	"zend_mangle_property_name ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , prop_name , prop_len , 0 )"		2050562	0					
ANR	2050567	Callee	zend_mangle_property_name		2050562	0					
ANR	2050568	Identifier	zend_mangle_property_name		2050562	0					
ANR	2050569	ArgumentList	ZSTR_VAL ( ce -> name )		2050562	1					
ANR	2050570	Argument	ZSTR_VAL ( ce -> name )		2050562	0					
ANR	2050571	CallExpression	ZSTR_VAL ( ce -> name )		2050562	0					
ANR	2050572	Callee	ZSTR_VAL		2050562	0					
ANR	2050573	Identifier	ZSTR_VAL		2050562	0					
ANR	2050574	ArgumentList	ce -> name		2050562	1					
ANR	2050575	Argument	ce -> name		2050562	0					
ANR	2050576	PtrMemberAccess	ce -> name		2050562	0					
ANR	2050577	Identifier	ce		2050562	0					
ANR	2050578	Identifier	name		2050562	1					
ANR	2050579	Argument	ZSTR_LEN ( ce -> name )		2050562	1					
ANR	2050580	CallExpression	ZSTR_LEN ( ce -> name )		2050562	0					
ANR	2050581	Callee	ZSTR_LEN		2050562	0					
ANR	2050582	Identifier	ZSTR_LEN		2050562	0					
ANR	2050583	ArgumentList	ce -> name		2050562	1					
ANR	2050584	Argument	ce -> name		2050562	0					
ANR	2050585	PtrMemberAccess	ce -> name		2050562	0					
ANR	2050586	Identifier	ce		2050562	0					
ANR	2050587	Identifier	name		2050562	1					
ANR	2050588	Argument	prop_name		2050562	2					
ANR	2050589	Identifier	prop_name		2050562	0					
ANR	2050590	Argument	prop_len		2050562	3					
ANR	2050591	Identifier	prop_len		2050562	0					
ANR	2050592	Argument	0		2050562	4					
ANR	2050593	PrimaryExpression	0		2050562	0					
ANR	2050594	ReturnType	zend_string *		2050562	1					
ANR	2050595	Identifier	spl_gen_private_prop_name		2050562	2					
ANR	2050596	ParameterList	"zend_class_entry * ce , char * prop_name , int prop_len"		2050562	3					
ANR	2050597	Parameter	zend_class_entry * ce	135:40:4242:4261	2050562	0	True				
ANR	2050598	ParameterType	zend_class_entry *		2050562	0					
ANR	2050599	Identifier	ce		2050562	1					
ANR	2050600	Parameter	char * prop_name	135:62:4264:4278	2050562	1	True				
ANR	2050601	ParameterType	char *		2050562	0					
ANR	2050602	Identifier	prop_name		2050562	1					
ANR	2050603	Parameter	int prop_len	135:79:4281:4292	2050562	2	True				
ANR	2050604	ParameterType	int		2050562	0					
ANR	2050605	Identifier	prop_len		2050562	1					
ANR	2050606	CFGEntryNode	ENTRY		2050562		True				
ANR	2050607	CFGExitNode	EXIT		2050562		True				
ANR	2050608	Symbol	prop_name		2050562						
ANR	2050609	Symbol	ce		2050562						
ANR	2050610	Symbol	prop_len		2050562						
ANR	2050611	Symbol	ZSTR_LEN		2050562						
ANR	2050612	Symbol	zend_mangle_property_name		2050562						
ANR	2050613	Symbol	ce -> name		2050562						
ANR	2050614	Symbol	* ce		2050562						
ANR	2050615	Symbol	ZSTR_VAL		2050562						
