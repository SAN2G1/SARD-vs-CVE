command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3351818	File	data/converged/CVE-2015-8617_php-src/pass1_5.c								
ANR	3351819	Function	zend_optimizer_pass1	40:0:1919:23941							
ANR	3351820	FunctionDef	"zend_optimizer_pass1 (zend_op_array * op_array , zend_optimizer_ctx * ctx)"		3351819	0					
ANR	3351821	CompoundStatement		41:0:1995:23941	3351819	0					
ANR	3351822	IdentifierDeclStatement	int i = 0 ;	42:1:1998:2007	3351819	0	True				
ANR	3351823	IdentifierDecl	i = 0		3351819	0					
ANR	3351824	IdentifierDeclType	int		3351819	0					
ANR	3351825	Identifier	i		3351819	1					
ANR	3351826	AssignmentExpression	i = 0		3351819	2		=			
ANR	3351827	Identifier	i		3351819	0					
ANR	3351828	PrimaryExpression	0		3351819	1					
ANR	3351829	IdentifierDeclStatement	zend_op * opline = op_array -> opcodes ;	43:1:2010:2045	3351819	1	True				
ANR	3351830	IdentifierDecl	* opline = op_array -> opcodes		3351819	0					
ANR	3351831	IdentifierDeclType	zend_op *		3351819	0					
ANR	3351832	Identifier	opline		3351819	1					
ANR	3351833	AssignmentExpression	* opline = op_array -> opcodes		3351819	2		=			
ANR	3351834	Identifier	opline		3351819	0					
ANR	3351835	PtrMemberAccess	op_array -> opcodes		3351819	1					
ANR	3351836	Identifier	op_array		3351819	0					
ANR	3351837	Identifier	opcodes		3351819	1					
ANR	3351838	IdentifierDeclStatement	zend_op * end = opline + op_array -> last ;	44:1:2048:2086	3351819	2	True				
ANR	3351839	IdentifierDecl	* end = opline + op_array -> last		3351819	0					
ANR	3351840	IdentifierDeclType	zend_op *		3351819	0					
ANR	3351841	Identifier	end		3351819	1					
ANR	3351842	AssignmentExpression	* end = opline + op_array -> last		3351819	2		=			
ANR	3351843	Identifier	end		3351819	0					
ANR	3351844	AdditiveExpression	opline + op_array -> last		3351819	1		+			
ANR	3351845	Identifier	opline		3351819	0					
ANR	3351846	PtrMemberAccess	op_array -> last		3351819	1					
ANR	3351847	Identifier	op_array		3351819	0					
ANR	3351848	Identifier	last		3351819	1					
ANR	3351849	IdentifierDeclStatement	zend_bool collect_constants = ( op_array == & ctx -> script -> main_op_array ) ;	45:1:2089:2160	3351819	3	True				
ANR	3351850	IdentifierDecl	collect_constants = ( op_array == & ctx -> script -> main_op_array )		3351819	0					
ANR	3351851	IdentifierDeclType	zend_bool		3351819	0					
ANR	3351852	Identifier	collect_constants		3351819	1					
ANR	3351853	AssignmentExpression	collect_constants = ( op_array == & ctx -> script -> main_op_array )		3351819	2		=			
ANR	3351854	Identifier	collect_constants		3351819	0					
ANR	3351855	EqualityExpression	op_array == & ctx -> script -> main_op_array		3351819	1		==			
ANR	3351856	Identifier	op_array		3351819	0					
ANR	3351857	UnaryOperationExpression	& ctx -> script -> main_op_array		3351819	1					
ANR	3351858	UnaryOperator	&		3351819	0					
ANR	3351859	PtrMemberAccess	ctx -> script -> main_op_array		3351819	1					
ANR	3351860	PtrMemberAccess	ctx -> script		3351819	0					
ANR	3351861	Identifier	ctx		3351819	0					
ANR	3351862	Identifier	script		3351819	1					
ANR	3351863	Identifier	main_op_array		3351819	1					
ANR	3351864	WhileStatement	while ( opline < end )		3351819	4					
ANR	3351865	Condition	opline < end	47:8:2171:2182	3351819	0	True				
ANR	3351866	RelationalExpression	opline < end		3351819	0		<			
ANR	3351867	Identifier	opline		3351819	0					
ANR	3351868	Identifier	end		3351819	1					
ANR	3351869	CompoundStatement		7:22:189:189	3351819	1					
ANR	3351870	SwitchStatement	switch ( opline -> opcode )		3351819	0					
ANR	3351871	Condition	opline -> opcode	48:10:2197:2210	3351819	0	True				
ANR	3351872	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3351873	Identifier	opline		3351819	0					
ANR	3351874	Identifier	opcode		3351819	1					
ANR	3351875	CompoundStatement		8:26:217:217	3351819	1					
ANR	3351876	Label	case ZEND_ADD :	49:2:2217:2230	3351819	0	True				
ANR	3351877	Identifier	ZEND_ADD		3351819	0					
ANR	3351878	Label	case ZEND_SUB :	50:2:2234:2247	3351819	1	True				
ANR	3351879	Identifier	ZEND_SUB		3351819	0					
ANR	3351880	Label	case ZEND_MUL :	51:2:2251:2264	3351819	2	True				
ANR	3351881	Identifier	ZEND_MUL		3351819	0					
ANR	3351882	Label	case ZEND_DIV :	52:2:2268:2281	3351819	3	True				
ANR	3351883	Identifier	ZEND_DIV		3351819	0					
ANR	3351884	Label	case ZEND_MOD :	53:2:2285:2298	3351819	4	True				
ANR	3351885	Identifier	ZEND_MOD		3351819	0					
ANR	3351886	Label	case ZEND_POW :	54:2:2302:2315	3351819	5	True				
ANR	3351887	Identifier	ZEND_POW		3351819	0					
ANR	3351888	Label	case ZEND_SL :	55:2:2319:2331	3351819	6	True				
ANR	3351889	Identifier	ZEND_SL		3351819	0					
ANR	3351890	Label	case ZEND_SR :	56:2:2335:2347	3351819	7	True				
ANR	3351891	Identifier	ZEND_SR		3351819	0					
ANR	3351892	Label	case ZEND_CONCAT :	57:2:2351:2367	3351819	8	True				
ANR	3351893	Identifier	ZEND_CONCAT		3351819	0					
ANR	3351894	Label	case ZEND_FAST_CONCAT :	58:2:2371:2392	3351819	9	True				
ANR	3351895	Identifier	ZEND_FAST_CONCAT		3351819	0					
ANR	3351896	Label	case ZEND_IS_EQUAL :	59:2:2396:2414	3351819	10	True				
ANR	3351897	Identifier	ZEND_IS_EQUAL		3351819	0					
ANR	3351898	Label	case ZEND_IS_NOT_EQUAL :	60:2:2418:2440	3351819	11	True				
ANR	3351899	Identifier	ZEND_IS_NOT_EQUAL		3351819	0					
ANR	3351900	Label	case ZEND_IS_SMALLER :	61:2:2444:2464	3351819	12	True				
ANR	3351901	Identifier	ZEND_IS_SMALLER		3351819	0					
ANR	3351902	Label	case ZEND_IS_SMALLER_OR_EQUAL :	62:2:2468:2497	3351819	13	True				
ANR	3351903	Identifier	ZEND_IS_SMALLER_OR_EQUAL		3351819	0					
ANR	3351904	Label	case ZEND_IS_IDENTICAL :	63:2:2501:2523	3351819	14	True				
ANR	3351905	Identifier	ZEND_IS_IDENTICAL		3351819	0					
ANR	3351906	Label	case ZEND_IS_NOT_IDENTICAL :	64:2:2527:2553	3351819	15	True				
ANR	3351907	Identifier	ZEND_IS_NOT_IDENTICAL		3351819	0					
ANR	3351908	Label	case ZEND_BW_OR :	65:2:2557:2572	3351819	16	True				
ANR	3351909	Identifier	ZEND_BW_OR		3351819	0					
ANR	3351910	Label	case ZEND_BW_AND :	66:2:2576:2592	3351819	17	True				
ANR	3351911	Identifier	ZEND_BW_AND		3351819	0					
ANR	3351912	Label	case ZEND_BW_XOR :	67:2:2596:2612	3351819	18	True				
ANR	3351913	Identifier	ZEND_BW_XOR		3351819	0					
ANR	3351914	Label	case ZEND_BOOL_XOR :	68:2:2616:2634	3351819	19	True				
ANR	3351915	Identifier	ZEND_BOOL_XOR		3351819	0					
ANR	3351916	Label	case ZEND_SPACESHIP :	69:2:2638:2657	3351819	20	True				
ANR	3351917	Identifier	ZEND_SPACESHIP		3351819	0					
ANR	3351918	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST )		3351819	21					
ANR	3351919	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST	70:7:2666:2739	3351819	0	True				
ANR	3351920	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && ZEND_OP2_TYPE ( opline ) == IS_CONST		3351819	0		&&			
ANR	3351921	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		3351819	0		==			
ANR	3351922	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3351923	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3351924	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3351925	ArgumentList	opline		3351819	1					
ANR	3351926	Argument	opline		3351819	0					
ANR	3351927	Identifier	opline		3351819	0					
ANR	3351928	Identifier	IS_CONST		3351819	1					
ANR	3351929	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		3351819	1		==			
ANR	3351930	CallExpression	ZEND_OP2_TYPE ( opline )		3351819	0					
ANR	3351931	Callee	ZEND_OP2_TYPE		3351819	0					
ANR	3351932	Identifier	ZEND_OP2_TYPE		3351819	0					
ANR	3351933	ArgumentList	opline		3351819	1					
ANR	3351934	Argument	opline		3351819	0					
ANR	3351935	Identifier	opline		3351819	0					
ANR	3351936	Identifier	IS_CONST		3351819	1					
ANR	3351937	CompoundStatement		36:4:950:956	3351819	1					
ANR	3351938	IdentifierDeclStatement	binary_op_type binary_op = get_binary_op ( opline -> opcode ) ;	73:4:2798:2854	3351819	0	True				
ANR	3351939	IdentifierDecl	binary_op = get_binary_op ( opline -> opcode )		3351819	0					
ANR	3351940	IdentifierDeclType	binary_op_type		3351819	0					
ANR	3351941	Identifier	binary_op		3351819	1					
ANR	3351942	AssignmentExpression	binary_op = get_binary_op ( opline -> opcode )		3351819	2		=			
ANR	3351943	Identifier	binary_op		3351819	0					
ANR	3351944	CallExpression	get_binary_op ( opline -> opcode )		3351819	1					
ANR	3351945	Callee	get_binary_op		3351819	0					
ANR	3351946	Identifier	get_binary_op		3351819	0					
ANR	3351947	ArgumentList	opline -> opcode		3351819	1					
ANR	3351948	Argument	opline -> opcode		3351819	0					
ANR	3351949	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3351950	Identifier	opline		3351819	0					
ANR	3351951	Identifier	opcode		3351819	1					
ANR	3351952	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	74:4:2860:2897	3351819	1	True				
ANR	3351953	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3351954	IdentifierDeclType	uint32_t		3351819	0					
ANR	3351955	Identifier	tv		3351819	1					
ANR	3351956	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		3351819	2		=			
ANR	3351957	Identifier	tv		3351819	0					
ANR	3351958	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	1					
ANR	3351959	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3351960	Callee	ZEND_RESULT		3351819	0					
ANR	3351961	Identifier	ZEND_RESULT		3351819	0					
ANR	3351962	ArgumentList	opline		3351819	1					
ANR	3351963	Argument	opline		3351819	0					
ANR	3351964	Identifier	opline		3351819	0					
ANR	3351965	Identifier	var		3351819	1					
ANR	3351966	IdentifierDeclStatement	zval result ;	75:4:2929:2940	3351819	2	True				
ANR	3351967	IdentifierDecl	result		3351819	0					
ANR	3351968	IdentifierDeclType	zval		3351819	0					
ANR	3351969	Identifier	result		3351819	1					
ANR	3351970	IdentifierDeclStatement	int er ;	76:4:2946:2952	3351819	3	True				
ANR	3351971	IdentifierDecl	er		3351819	0					
ANR	3351972	IdentifierDeclType	int		3351819	0					
ANR	3351973	Identifier	er		3351819	1					
ANR	3351974	IfStatement	if ( ( opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0 )		3351819	4					
ANR	3351975	Condition	( opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0	78:8:2963:3074	3351819	0	True				
ANR	3351976	AndExpression	( opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0		3351819	0		&&			
ANR	3351977	OrExpression	opline -> opcode == ZEND_DIV || opline -> opcode == ZEND_MOD		3351819	0		||			
ANR	3351978	EqualityExpression	opline -> opcode == ZEND_DIV		3351819	0		==			
ANR	3351979	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3351980	Identifier	opline		3351819	0					
ANR	3351981	Identifier	opcode		3351819	1					
ANR	3351982	Identifier	ZEND_DIV		3351819	1					
ANR	3351983	EqualityExpression	opline -> opcode == ZEND_MOD		3351819	1		==			
ANR	3351984	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3351985	Identifier	opline		3351819	0					
ANR	3351986	Identifier	opcode		3351819	1					
ANR	3351987	Identifier	ZEND_MOD		3351819	1					
ANR	3351988	EqualityExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) == 0		3351819	1		==			
ANR	3351989	CallExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3351990	Callee	zval_get_long		3351819	0					
ANR	3351991	Identifier	zval_get_long		3351819	0					
ANR	3351992	ArgumentList	& ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3351993	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3351994	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3351995	UnaryOperator	&		3351819	0					
ANR	3351996	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3351997	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3351998	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3351999	ArgumentList	opline		3351819	1					
ANR	3352000	Argument	opline		3351819	0					
ANR	3352001	Identifier	opline		3351819	0					
ANR	3352002	PrimaryExpression	0		3351819	1					
ANR	3352003	CompoundStatement		39:52:1081:1081	3351819	1					
ANR	3352004	BreakStatement	break ;	81:5:3104:3109	3351819	0	True				
ANR	3352005	ElseStatement	else		3351819	0					
ANR	3352006	IfStatement	if ( ( opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0 )		3351819	0					
ANR	3352007	Condition	( opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0	82:15:3126:3234	3351819	0	True				
ANR	3352008	AndExpression	( opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR ) && zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0		3351819	0		&&			
ANR	3352009	OrExpression	opline -> opcode == ZEND_SL || opline -> opcode == ZEND_SR		3351819	0		||			
ANR	3352010	EqualityExpression	opline -> opcode == ZEND_SL		3351819	0		==			
ANR	3352011	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3352012	Identifier	opline		3351819	0					
ANR	3352013	Identifier	opcode		3351819	1					
ANR	3352014	Identifier	ZEND_SL		3351819	1					
ANR	3352015	EqualityExpression	opline -> opcode == ZEND_SR		3351819	1		==			
ANR	3352016	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3352017	Identifier	opline		3351819	0					
ANR	3352018	Identifier	opcode		3351819	1					
ANR	3352019	Identifier	ZEND_SR		3351819	1					
ANR	3352020	RelationalExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) ) < 0		3351819	1		<			
ANR	3352021	CallExpression	zval_get_long ( & ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3352022	Callee	zval_get_long		3351819	0					
ANR	3352023	Identifier	zval_get_long		3351819	0					
ANR	3352024	ArgumentList	& ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352025	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352026	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352027	UnaryOperator	&		3351819	0					
ANR	3352028	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352029	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352030	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352031	ArgumentList	opline		3351819	1					
ANR	3352032	Argument	opline		3351819	0					
ANR	3352033	Identifier	opline		3351819	0					
ANR	3352034	PrimaryExpression	0		3351819	1					
ANR	3352035	CompoundStatement		43:51:1241:1241	3351819	1					
ANR	3352036	BreakStatement	break ;	85:5:3280:3285	3351819	0	True				
ANR	3352037	ExpressionStatement	er = EG ( error_reporting )	87:4:3297:3321	3351819	5	True				
ANR	3352038	AssignmentExpression	er = EG ( error_reporting )		3351819	0		=			
ANR	3352039	Identifier	er		3351819	0					
ANR	3352040	CallExpression	EG ( error_reporting )		3351819	1					
ANR	3352041	Callee	EG		3351819	0					
ANR	3352042	Identifier	EG		3351819	0					
ANR	3352043	ArgumentList	error_reporting		3351819	1					
ANR	3352044	Argument	error_reporting		3351819	0					
ANR	3352045	Identifier	error_reporting		3351819	0					
ANR	3352046	ExpressionStatement	EG ( error_reporting ) = 0	88:4:3327:3350	3351819	6	True				
ANR	3352047	AssignmentExpression	EG ( error_reporting ) = 0		3351819	0		=			
ANR	3352048	CallExpression	EG ( error_reporting )		3351819	0					
ANR	3352049	Callee	EG		3351819	0					
ANR	3352050	Identifier	EG		3351819	0					
ANR	3352051	ArgumentList	error_reporting		3351819	1					
ANR	3352052	Argument	error_reporting		3351819	0					
ANR	3352053	Identifier	error_reporting		3351819	0					
ANR	3352054	PrimaryExpression	0		3351819	1					
ANR	3352055	IfStatement	"if ( binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) ) != SUCCESS )"		3351819	7					
ANR	3352056	Condition	"binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) ) != SUCCESS"	90:8:3399:3481	3351819	0	True				
ANR	3352057	EqualityExpression	"binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) ) != SUCCESS"		3351819	0		!=			
ANR	3352058	CallExpression	"binary_op ( & result , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) )"		3351819	0					
ANR	3352059	Callee	binary_op		3351819	0					
ANR	3352060	Identifier	binary_op		3351819	0					
ANR	3352061	ArgumentList	& result		3351819	1					
ANR	3352062	Argument	& result		3351819	0					
ANR	3352063	UnaryOperationExpression	& result		3351819	0					
ANR	3352064	UnaryOperator	&		3351819	0					
ANR	3352065	Identifier	result		3351819	1					
ANR	3352066	Argument	& ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352067	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3352068	UnaryOperator	&		3351819	0					
ANR	3352069	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352070	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3352071	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3352072	ArgumentList	opline		3351819	1					
ANR	3352073	Argument	opline		3351819	0					
ANR	3352074	Identifier	opline		3351819	0					
ANR	3352075	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	2					
ANR	3352076	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352077	UnaryOperator	&		3351819	0					
ANR	3352078	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352079	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352080	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352081	ArgumentList	opline		3351819	1					
ANR	3352082	Argument	opline		3351819	0					
ANR	3352083	Identifier	opline		3351819	0					
ANR	3352084	Identifier	SUCCESS		3351819	1					
ANR	3352085	CompoundStatement		50:93:1488:1488	3351819	1					
ANR	3352086	ExpressionStatement	EG ( error_reporting ) = er	91:5:3491:3515	3351819	0	True				
ANR	3352087	AssignmentExpression	EG ( error_reporting ) = er		3351819	0		=			
ANR	3352088	CallExpression	EG ( error_reporting )		3351819	0					
ANR	3352089	Callee	EG		3351819	0					
ANR	3352090	Identifier	EG		3351819	0					
ANR	3352091	ArgumentList	error_reporting		3351819	1					
ANR	3352092	Argument	error_reporting		3351819	0					
ANR	3352093	Identifier	error_reporting		3351819	0					
ANR	3352094	Identifier	er		3351819	1					
ANR	3352095	BreakStatement	break ;	92:5:3522:3527	3351819	1	True				
ANR	3352096	ExpressionStatement	EG ( error_reporting ) = er	94:4:3539:3563	3351819	8	True				
ANR	3352097	AssignmentExpression	EG ( error_reporting ) = er		3351819	0		=			
ANR	3352098	CallExpression	EG ( error_reporting )		3351819	0					
ANR	3352099	Callee	EG		3351819	0					
ANR	3352100	Identifier	EG		3351819	0					
ANR	3352101	ArgumentList	error_reporting		3351819	1					
ANR	3352102	Argument	error_reporting		3351819	0					
ANR	3352103	Identifier	error_reporting		3351819	0					
ANR	3352104	Identifier	er		3351819	1					
ANR	3352105	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result ) )"		3351819	9					
ANR	3352106	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result )"	96:8:3574:3651	3351819	0	True				
ANR	3352107	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result )"		3351819	0					
ANR	3352108	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3352109	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3352110	ArgumentList	op_array		3351819	1					
ANR	3352111	Argument	op_array		3351819	0					
ANR	3352112	Identifier	op_array		3351819	0					
ANR	3352113	Argument	opline + 1		3351819	1					
ANR	3352114	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3352115	Identifier	opline		3351819	0					
ANR	3352116	PrimaryExpression	1		3351819	1					
ANR	3352117	Argument	IS_TMP_VAR		3351819	2					
ANR	3352118	Identifier	IS_TMP_VAR		3351819	0					
ANR	3352119	Argument	tv		3351819	3					
ANR	3352120	Identifier	tv		3351819	0					
ANR	3352121	Argument	& result		3351819	4					
ANR	3352122	UnaryOperationExpression	& result		3351819	0					
ANR	3352123	UnaryOperator	&		3351819	0					
ANR	3352124	Identifier	result		3351819	1					
ANR	3352125	CompoundStatement		56:88:1658:1658	3351819	1					
ANR	3352126	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	97:5:3661:3700	3351819	0	True				
ANR	3352127	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3352128	Callee	literal_dtor		3351819	0					
ANR	3352129	Identifier	literal_dtor		3351819	0					
ANR	3352130	ArgumentList	& ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352131	Argument	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3352132	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3352133	UnaryOperator	&		3351819	0					
ANR	3352134	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352135	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3352136	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3352137	ArgumentList	opline		3351819	1					
ANR	3352138	Argument	opline		3351819	0					
ANR	3352139	Identifier	opline		3351819	0					
ANR	3352140	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	98:5:3707:3746	3351819	1	True				
ANR	3352141	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3352142	Callee	literal_dtor		3351819	0					
ANR	3352143	Identifier	literal_dtor		3351819	0					
ANR	3352144	ArgumentList	& ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352145	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352146	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352147	UnaryOperator	&		3351819	0					
ANR	3352148	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352149	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352150	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352151	ArgumentList	opline		3351819	1					
ANR	3352152	Argument	opline		3351819	0					
ANR	3352153	Identifier	opline		3351819	0					
ANR	3352154	ExpressionStatement	MAKE_NOP ( opline )	99:5:3753:3769	3351819	2	True				
ANR	3352155	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3352156	Callee	MAKE_NOP		3351819	0					
ANR	3352157	Identifier	MAKE_NOP		3351819	0					
ANR	3352158	ArgumentList	opline		3351819	1					
ANR	3352159	Argument	opline		3351819	0					
ANR	3352160	Identifier	opline		3351819	0					
ANR	3352161	BreakStatement	break ;	102:3:3785:3790	3351819	22	True				
ANR	3352162	Label	case ZEND_CAST :	104:2:3795:3809	3351819	23	True				
ANR	3352163	Identifier	ZEND_CAST		3351819	0					
ANR	3352164	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && opline -> extended_value != IS_ARRAY && opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE )		3351819	24					
ANR	3352165	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && opline -> extended_value != IS_ARRAY && opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE	105:7:3818:3980	3351819	0	True				
ANR	3352166	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && opline -> extended_value != IS_ARRAY && opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE		3351819	0		&&			
ANR	3352167	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		3351819	0		==			
ANR	3352168	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3352169	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3352170	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3352171	ArgumentList	opline		3351819	1					
ANR	3352172	Argument	opline		3351819	0					
ANR	3352173	Identifier	opline		3351819	0					
ANR	3352174	Identifier	IS_CONST		3351819	1					
ANR	3352175	AndExpression	opline -> extended_value != IS_ARRAY && opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE		3351819	1		&&			
ANR	3352176	EqualityExpression	opline -> extended_value != IS_ARRAY		3351819	0		!=			
ANR	3352177	PtrMemberAccess	opline -> extended_value		3351819	0					
ANR	3352178	Identifier	opline		3351819	0					
ANR	3352179	Identifier	extended_value		3351819	1					
ANR	3352180	Identifier	IS_ARRAY		3351819	1					
ANR	3352181	AndExpression	opline -> extended_value != IS_OBJECT && opline -> extended_value != IS_RESOURCE		3351819	1		&&			
ANR	3352182	EqualityExpression	opline -> extended_value != IS_OBJECT		3351819	0		!=			
ANR	3352183	PtrMemberAccess	opline -> extended_value		3351819	0					
ANR	3352184	Identifier	opline		3351819	0					
ANR	3352185	Identifier	extended_value		3351819	1					
ANR	3352186	Identifier	IS_OBJECT		3351819	1					
ANR	3352187	EqualityExpression	opline -> extended_value != IS_RESOURCE		3351819	1		!=			
ANR	3352188	PtrMemberAccess	opline -> extended_value		3351819	0					
ANR	3352189	Identifier	opline		3351819	0					
ANR	3352190	Identifier	extended_value		3351819	1					
ANR	3352191	Identifier	IS_RESOURCE		3351819	1					
ANR	3352192	CompoundStatement		72:4:2140:2148	3351819	1					
ANR	3352193	IdentifierDeclStatement	zend_uchar type = opline -> result_type ;	110:4:4024:4061	3351819	0	True				
ANR	3352194	IdentifierDecl	type = opline -> result_type		3351819	0					
ANR	3352195	IdentifierDeclType	zend_uchar		3351819	0					
ANR	3352196	Identifier	type		3351819	1					
ANR	3352197	AssignmentExpression	type = opline -> result_type		3351819	2		=			
ANR	3352198	Identifier	type		3351819	0					
ANR	3352199	PtrMemberAccess	opline -> result_type		3351819	1					
ANR	3352200	Identifier	opline		3351819	0					
ANR	3352201	Identifier	result_type		3351819	1					
ANR	3352202	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	111:4:4067:4104	3351819	1	True				
ANR	3352203	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3352204	IdentifierDeclType	uint32_t		3351819	0					
ANR	3352205	Identifier	tv		3351819	1					
ANR	3352206	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		3351819	2		=			
ANR	3352207	Identifier	tv		3351819	0					
ANR	3352208	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	1					
ANR	3352209	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3352210	Callee	ZEND_RESULT		3351819	0					
ANR	3352211	Identifier	ZEND_RESULT		3351819	0					
ANR	3352212	ArgumentList	opline		3351819	1					
ANR	3352213	Argument	opline		3351819	0					
ANR	3352214	Identifier	opline		3351819	0					
ANR	3352215	Identifier	var		3351819	1					
ANR	3352216	IdentifierDeclStatement	zval res ;	112:4:4136:4144	3351819	2	True				
ANR	3352217	IdentifierDecl	res		3351819	0					
ANR	3352218	IdentifierDeclType	zval		3351819	0					
ANR	3352219	Identifier	res		3351819	1					
ANR	3352220	ExpressionStatement	res = ZEND_OP1_LITERAL ( opline )	113:4:4150:4180	3351819	3	True				
ANR	3352221	AssignmentExpression	res = ZEND_OP1_LITERAL ( opline )		3351819	0		=			
ANR	3352222	Identifier	res		3351819	0					
ANR	3352223	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352224	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3352225	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3352226	ArgumentList	opline		3351819	1					
ANR	3352227	Argument	opline		3351819	0					
ANR	3352228	Identifier	opline		3351819	0					
ANR	3352229	ExpressionStatement	zval_copy_ctor ( & res )	114:4:4186:4206	3351819	4	True				
ANR	3352230	CallExpression	zval_copy_ctor ( & res )		3351819	0					
ANR	3352231	Callee	zval_copy_ctor		3351819	0					
ANR	3352232	Identifier	zval_copy_ctor		3351819	0					
ANR	3352233	ArgumentList	& res		3351819	1					
ANR	3352234	Argument	& res		3351819	0					
ANR	3352235	UnaryOperationExpression	& res		3351819	0					
ANR	3352236	UnaryOperator	&		3351819	0					
ANR	3352237	Identifier	res		3351819	1					
ANR	3352238	SwitchStatement	switch ( opline -> extended_value )		3351819	5					
ANR	3352239	Condition	opline -> extended_value	115:12:4220:4241	3351819	0	True				
ANR	3352240	PtrMemberAccess	opline -> extended_value		3351819	0					
ANR	3352241	Identifier	opline		3351819	0					
ANR	3352242	Identifier	extended_value		3351819	1					
ANR	3352243	CompoundStatement		75:36:2248:2248	3351819	1					
ANR	3352244	Label	case IS_NULL :	116:5:4251:4263	3351819	0	True				
ANR	3352245	Identifier	IS_NULL		3351819	0					
ANR	3352246	ExpressionStatement	convert_to_null ( & res )	117:6:4271:4292	3351819	1	True				
ANR	3352247	CallExpression	convert_to_null ( & res )		3351819	0					
ANR	3352248	Callee	convert_to_null		3351819	0					
ANR	3352249	Identifier	convert_to_null		3351819	0					
ANR	3352250	ArgumentList	& res		3351819	1					
ANR	3352251	Argument	& res		3351819	0					
ANR	3352252	UnaryOperationExpression	& res		3351819	0					
ANR	3352253	UnaryOperator	&		3351819	0					
ANR	3352254	Identifier	res		3351819	1					
ANR	3352255	BreakStatement	break ;	118:6:4300:4305	3351819	2	True				
ANR	3352256	Label	case _IS_BOOL :	119:5:4312:4325	3351819	3	True				
ANR	3352257	Identifier	_IS_BOOL		3351819	0					
ANR	3352258	ExpressionStatement	convert_to_boolean ( & res )	120:6:4333:4357	3351819	4	True				
ANR	3352259	CallExpression	convert_to_boolean ( & res )		3351819	0					
ANR	3352260	Callee	convert_to_boolean		3351819	0					
ANR	3352261	Identifier	convert_to_boolean		3351819	0					
ANR	3352262	ArgumentList	& res		3351819	1					
ANR	3352263	Argument	& res		3351819	0					
ANR	3352264	UnaryOperationExpression	& res		3351819	0					
ANR	3352265	UnaryOperator	&		3351819	0					
ANR	3352266	Identifier	res		3351819	1					
ANR	3352267	BreakStatement	break ;	121:6:4365:4370	3351819	5	True				
ANR	3352268	Label	case IS_LONG :	122:5:4377:4389	3351819	6	True				
ANR	3352269	Identifier	IS_LONG		3351819	0					
ANR	3352270	ExpressionStatement	convert_to_long ( & res )	123:6:4397:4418	3351819	7	True				
ANR	3352271	CallExpression	convert_to_long ( & res )		3351819	0					
ANR	3352272	Callee	convert_to_long		3351819	0					
ANR	3352273	Identifier	convert_to_long		3351819	0					
ANR	3352274	ArgumentList	& res		3351819	1					
ANR	3352275	Argument	& res		3351819	0					
ANR	3352276	UnaryOperationExpression	& res		3351819	0					
ANR	3352277	UnaryOperator	&		3351819	0					
ANR	3352278	Identifier	res		3351819	1					
ANR	3352279	BreakStatement	break ;	124:6:4426:4431	3351819	8	True				
ANR	3352280	Label	case IS_DOUBLE :	125:5:4438:4452	3351819	9	True				
ANR	3352281	Identifier	IS_DOUBLE		3351819	0					
ANR	3352282	ExpressionStatement	convert_to_double ( & res )	126:6:4460:4483	3351819	10	True				
ANR	3352283	CallExpression	convert_to_double ( & res )		3351819	0					
ANR	3352284	Callee	convert_to_double		3351819	0					
ANR	3352285	Identifier	convert_to_double		3351819	0					
ANR	3352286	ArgumentList	& res		3351819	1					
ANR	3352287	Argument	& res		3351819	0					
ANR	3352288	UnaryOperationExpression	& res		3351819	0					
ANR	3352289	UnaryOperator	&		3351819	0					
ANR	3352290	Identifier	res		3351819	1					
ANR	3352291	BreakStatement	break ;	127:6:4491:4496	3351819	11	True				
ANR	3352292	Label	case IS_STRING :	128:5:4503:4517	3351819	12	True				
ANR	3352293	Identifier	IS_STRING		3351819	0					
ANR	3352294	ExpressionStatement	convert_to_string ( & res )	129:6:4525:4548	3351819	13	True				
ANR	3352295	CallExpression	convert_to_string ( & res )		3351819	0					
ANR	3352296	Callee	convert_to_string		3351819	0					
ANR	3352297	Identifier	convert_to_string		3351819	0					
ANR	3352298	ArgumentList	& res		3351819	1					
ANR	3352299	Argument	& res		3351819	0					
ANR	3352300	UnaryOperationExpression	& res		3351819	0					
ANR	3352301	UnaryOperator	&		3351819	0					
ANR	3352302	Identifier	res		3351819	1					
ANR	3352303	BreakStatement	break ;	130:6:4556:4561	3351819	14	True				
ANR	3352304	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , type , tv , & res ) )"		3351819	6					
ANR	3352305	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , type , tv , & res )"	133:8:4578:4646	3351819	0	True				
ANR	3352306	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , type , tv , & res )"		3351819	0					
ANR	3352307	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3352308	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3352309	ArgumentList	op_array		3351819	1					
ANR	3352310	Argument	op_array		3351819	0					
ANR	3352311	Identifier	op_array		3351819	0					
ANR	3352312	Argument	opline + 1		3351819	1					
ANR	3352313	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3352314	Identifier	opline		3351819	0					
ANR	3352315	PrimaryExpression	1		3351819	1					
ANR	3352316	Argument	type		3351819	2					
ANR	3352317	Identifier	type		3351819	0					
ANR	3352318	Argument	tv		3351819	3					
ANR	3352319	Identifier	tv		3351819	0					
ANR	3352320	Argument	& res		3351819	4					
ANR	3352321	UnaryOperationExpression	& res		3351819	0					
ANR	3352322	UnaryOperator	&		3351819	0					
ANR	3352323	Identifier	res		3351819	1					
ANR	3352324	CompoundStatement		93:79:2653:2653	3351819	1					
ANR	3352325	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	134:5:4656:4695	3351819	0	True				
ANR	3352326	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3352327	Callee	literal_dtor		3351819	0					
ANR	3352328	Identifier	literal_dtor		3351819	0					
ANR	3352329	ArgumentList	& ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352330	Argument	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3352331	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3352332	UnaryOperator	&		3351819	0					
ANR	3352333	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352334	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3352335	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3352336	ArgumentList	opline		3351819	1					
ANR	3352337	Argument	opline		3351819	0					
ANR	3352338	Identifier	opline		3351819	0					
ANR	3352339	ExpressionStatement	MAKE_NOP ( opline )	135:5:4702:4718	3351819	1	True				
ANR	3352340	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3352341	Callee	MAKE_NOP		3351819	0					
ANR	3352342	Identifier	MAKE_NOP		3351819	0					
ANR	3352343	ArgumentList	opline		3351819	1					
ANR	3352344	Argument	opline		3351819	0					
ANR	3352345	Identifier	opline		3351819	0					
ANR	3352346	ElseStatement	else		3351819	0					
ANR	3352347	IfStatement	if ( opline -> extended_value == _IS_BOOL )		3351819	0					
ANR	3352348	Condition	opline -> extended_value == _IS_BOOL	137:14:4740:4773	3351819	0	True				
ANR	3352349	EqualityExpression	opline -> extended_value == _IS_BOOL		3351819	0		==			
ANR	3352350	PtrMemberAccess	opline -> extended_value		3351819	0					
ANR	3352351	Identifier	opline		3351819	0					
ANR	3352352	Identifier	extended_value		3351819	1					
ANR	3352353	Identifier	_IS_BOOL		3351819	1					
ANR	3352354	CompoundStatement		97:50:2780:2780	3351819	1					
ANR	3352355	ExpressionStatement	opline -> opcode = ZEND_BOOL	139:4:4828:4854	3351819	0	True				
ANR	3352356	AssignmentExpression	opline -> opcode = ZEND_BOOL		3351819	0		=			
ANR	3352357	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3352358	Identifier	opline		3351819	0					
ANR	3352359	Identifier	opcode		3351819	1					
ANR	3352360	Identifier	ZEND_BOOL		3351819	1					
ANR	3352361	ExpressionStatement	opline -> extended_value = 0	140:4:4860:4886	3351819	1	True				
ANR	3352362	AssignmentExpression	opline -> extended_value = 0		3351819	0		=			
ANR	3352363	PtrMemberAccess	opline -> extended_value		3351819	0					
ANR	3352364	Identifier	opline		3351819	0					
ANR	3352365	Identifier	extended_value		3351819	1					
ANR	3352366	PrimaryExpression	0		3351819	1					
ANR	3352367	BreakStatement	break ;	142:3:4896:4901	3351819	25	True				
ANR	3352368	Label	case ZEND_BW_NOT :	144:2:4906:4922	3351819	26	True				
ANR	3352369	Identifier	ZEND_BW_NOT		3351819	0					
ANR	3352370	Label	case ZEND_BOOL_NOT :	145:2:4926:4944	3351819	27	True				
ANR	3352371	Identifier	ZEND_BOOL_NOT		3351819	0					
ANR	3352372	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		3351819	28					
ANR	3352373	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	146:7:4953:4985	3351819	0	True				
ANR	3352374	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		3351819	0		==			
ANR	3352375	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3352376	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3352377	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3352378	ArgumentList	opline		3351819	1					
ANR	3352379	Argument	opline		3351819	0					
ANR	3352380	Identifier	opline		3351819	0					
ANR	3352381	Identifier	IS_CONST		3351819	1					
ANR	3352382	CompoundStatement		111:4:3189:3195	3351819	1					
ANR	3352383	IdentifierDeclStatement	unary_op_type unary_op = get_unary_op ( opline -> opcode ) ;	148:4:5040:5093	3351819	0	True				
ANR	3352384	IdentifierDecl	unary_op = get_unary_op ( opline -> opcode )		3351819	0					
ANR	3352385	IdentifierDeclType	unary_op_type		3351819	0					
ANR	3352386	Identifier	unary_op		3351819	1					
ANR	3352387	AssignmentExpression	unary_op = get_unary_op ( opline -> opcode )		3351819	2		=			
ANR	3352388	Identifier	unary_op		3351819	0					
ANR	3352389	CallExpression	get_unary_op ( opline -> opcode )		3351819	1					
ANR	3352390	Callee	get_unary_op		3351819	0					
ANR	3352391	Identifier	get_unary_op		3351819	0					
ANR	3352392	ArgumentList	opline -> opcode		3351819	1					
ANR	3352393	Argument	opline -> opcode		3351819	0					
ANR	3352394	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3352395	Identifier	opline		3351819	0					
ANR	3352396	Identifier	opcode		3351819	1					
ANR	3352397	IdentifierDeclStatement	zval result ;	149:4:5099:5110	3351819	1	True				
ANR	3352398	IdentifierDecl	result		3351819	0					
ANR	3352399	IdentifierDeclType	zval		3351819	0					
ANR	3352400	Identifier	result		3351819	1					
ANR	3352401	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	150:4:5116:5153	3351819	2	True				
ANR	3352402	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3352403	IdentifierDeclType	uint32_t		3351819	0					
ANR	3352404	Identifier	tv		3351819	1					
ANR	3352405	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		3351819	2		=			
ANR	3352406	Identifier	tv		3351819	0					
ANR	3352407	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	1					
ANR	3352408	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3352409	Callee	ZEND_RESULT		3351819	0					
ANR	3352410	Identifier	ZEND_RESULT		3351819	0					
ANR	3352411	ArgumentList	opline		3351819	1					
ANR	3352412	Argument	opline		3351819	0					
ANR	3352413	Identifier	opline		3351819	0					
ANR	3352414	Identifier	var		3351819	1					
ANR	3352415	IdentifierDeclStatement	int er ;	151:4:5185:5191	3351819	3	True				
ANR	3352416	IdentifierDecl	er		3351819	0					
ANR	3352417	IdentifierDeclType	int		3351819	0					
ANR	3352418	Identifier	er		3351819	1					
ANR	3352419	ExpressionStatement	er = EG ( error_reporting )	153:4:5198:5222	3351819	4	True				
ANR	3352420	AssignmentExpression	er = EG ( error_reporting )		3351819	0		=			
ANR	3352421	Identifier	er		3351819	0					
ANR	3352422	CallExpression	EG ( error_reporting )		3351819	1					
ANR	3352423	Callee	EG		3351819	0					
ANR	3352424	Identifier	EG		3351819	0					
ANR	3352425	ArgumentList	error_reporting		3351819	1					
ANR	3352426	Argument	error_reporting		3351819	0					
ANR	3352427	Identifier	error_reporting		3351819	0					
ANR	3352428	ExpressionStatement	EG ( error_reporting ) = 0	154:4:5228:5251	3351819	5	True				
ANR	3352429	AssignmentExpression	EG ( error_reporting ) = 0		3351819	0		=			
ANR	3352430	CallExpression	EG ( error_reporting )		3351819	0					
ANR	3352431	Callee	EG		3351819	0					
ANR	3352432	Identifier	EG		3351819	0					
ANR	3352433	ArgumentList	error_reporting		3351819	1					
ANR	3352434	Argument	error_reporting		3351819	0					
ANR	3352435	Identifier	error_reporting		3351819	0					
ANR	3352436	PrimaryExpression	0		3351819	1					
ANR	3352437	IfStatement	"if ( unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) ) != SUCCESS )"		3351819	6					
ANR	3352438	Condition	"unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) ) != SUCCESS"	155:8:5261:5315	3351819	0	True				
ANR	3352439	EqualityExpression	"unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) ) != SUCCESS"		3351819	0		!=			
ANR	3352440	CallExpression	"unary_op ( & result , & ZEND_OP1_LITERAL ( opline ) )"		3351819	0					
ANR	3352441	Callee	unary_op		3351819	0					
ANR	3352442	Identifier	unary_op		3351819	0					
ANR	3352443	ArgumentList	& result		3351819	1					
ANR	3352444	Argument	& result		3351819	0					
ANR	3352445	UnaryOperationExpression	& result		3351819	0					
ANR	3352446	UnaryOperator	&		3351819	0					
ANR	3352447	Identifier	result		3351819	1					
ANR	3352448	Argument	& ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352449	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3352450	UnaryOperator	&		3351819	0					
ANR	3352451	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352452	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3352453	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3352454	ArgumentList	opline		3351819	1					
ANR	3352455	Argument	opline		3351819	0					
ANR	3352456	Identifier	opline		3351819	0					
ANR	3352457	Identifier	SUCCESS		3351819	1					
ANR	3352458	CompoundStatement		115:65:3322:3322	3351819	1					
ANR	3352459	ExpressionStatement	EG ( error_reporting ) = er	156:5:5325:5349	3351819	0	True				
ANR	3352460	AssignmentExpression	EG ( error_reporting ) = er		3351819	0		=			
ANR	3352461	CallExpression	EG ( error_reporting )		3351819	0					
ANR	3352462	Callee	EG		3351819	0					
ANR	3352463	Identifier	EG		3351819	0					
ANR	3352464	ArgumentList	error_reporting		3351819	1					
ANR	3352465	Argument	error_reporting		3351819	0					
ANR	3352466	Identifier	error_reporting		3351819	0					
ANR	3352467	Identifier	er		3351819	1					
ANR	3352468	BreakStatement	break ;	157:5:5356:5361	3351819	1	True				
ANR	3352469	ExpressionStatement	EG ( error_reporting ) = er	159:4:5373:5397	3351819	7	True				
ANR	3352470	AssignmentExpression	EG ( error_reporting ) = er		3351819	0		=			
ANR	3352471	CallExpression	EG ( error_reporting )		3351819	0					
ANR	3352472	Callee	EG		3351819	0					
ANR	3352473	Identifier	EG		3351819	0					
ANR	3352474	ArgumentList	error_reporting		3351819	1					
ANR	3352475	Argument	error_reporting		3351819	0					
ANR	3352476	Identifier	error_reporting		3351819	0					
ANR	3352477	Identifier	er		3351819	1					
ANR	3352478	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result ) )"		3351819	8					
ANR	3352479	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result )"	161:8:5408:5485	3351819	0	True				
ANR	3352480	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , tv , & result )"		3351819	0					
ANR	3352481	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3352482	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3352483	ArgumentList	op_array		3351819	1					
ANR	3352484	Argument	op_array		3351819	0					
ANR	3352485	Identifier	op_array		3351819	0					
ANR	3352486	Argument	opline + 1		3351819	1					
ANR	3352487	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3352488	Identifier	opline		3351819	0					
ANR	3352489	PrimaryExpression	1		3351819	1					
ANR	3352490	Argument	IS_TMP_VAR		3351819	2					
ANR	3352491	Identifier	IS_TMP_VAR		3351819	0					
ANR	3352492	Argument	tv		3351819	3					
ANR	3352493	Identifier	tv		3351819	0					
ANR	3352494	Argument	& result		3351819	4					
ANR	3352495	UnaryOperationExpression	& result		3351819	0					
ANR	3352496	UnaryOperator	&		3351819	0					
ANR	3352497	Identifier	result		3351819	1					
ANR	3352498	CompoundStatement		121:88:3492:3492	3351819	1					
ANR	3352499	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	162:5:5495:5534	3351819	0	True				
ANR	3352500	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3352501	Callee	literal_dtor		3351819	0					
ANR	3352502	Identifier	literal_dtor		3351819	0					
ANR	3352503	ArgumentList	& ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352504	Argument	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3352505	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3352506	UnaryOperator	&		3351819	0					
ANR	3352507	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3352508	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3352509	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3352510	ArgumentList	opline		3351819	1					
ANR	3352511	Argument	opline		3351819	0					
ANR	3352512	Identifier	opline		3351819	0					
ANR	3352513	ExpressionStatement	MAKE_NOP ( opline )	163:5:5541:5557	3351819	1	True				
ANR	3352514	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3352515	Callee	MAKE_NOP		3351819	0					
ANR	3352516	Identifier	MAKE_NOP		3351819	0					
ANR	3352517	ArgumentList	opline		3351819	1					
ANR	3352518	Argument	opline		3351819	0					
ANR	3352519	Identifier	opline		3351819	0					
ANR	3352520	BreakStatement	break ;	166:3:5573:5578	3351819	29	True				
ANR	3352521	Label	case ZEND_ADD_STRING :	169:2:5589:5609	3351819	30	True				
ANR	3352522	Identifier	ZEND_ADD_STRING		3351819	0					
ANR	3352523	Label	case ZEND_ADD_CHAR :	170:2:5613:5631	3351819	31	True				
ANR	3352524	Identifier	ZEND_ADD_CHAR		3351819	0					
ANR	3352525	CompoundStatement		137:4:3819:3835	3351819	32					
ANR	3352526	IdentifierDeclStatement	zend_op * next_op = opline + 1 ;	172:4:5642:5671	3351819	0	True				
ANR	3352527	IdentifierDecl	* next_op = opline + 1		3351819	0					
ANR	3352528	IdentifierDeclType	zend_op *		3351819	0					
ANR	3352529	Identifier	next_op		3351819	1					
ANR	3352530	AssignmentExpression	* next_op = opline + 1		3351819	2		=			
ANR	3352531	Identifier	next_op		3351819	0					
ANR	3352532	AdditiveExpression	opline + 1		3351819	1		+			
ANR	3352533	Identifier	opline		3351819	0					
ANR	3352534	PrimaryExpression	1		3351819	1					
ANR	3352535	IdentifierDeclStatement	int requires_conversion = ( opline -> opcode == ZEND_ADD_CHAR ? 1 : 0 ) ;	173:4:5677:5743	3351819	1	True				
ANR	3352536	IdentifierDecl	requires_conversion = ( opline -> opcode == ZEND_ADD_CHAR ? 1 : 0 )		3351819	0					
ANR	3352537	IdentifierDeclType	int		3351819	0					
ANR	3352538	Identifier	requires_conversion		3351819	1					
ANR	3352539	AssignmentExpression	requires_conversion = ( opline -> opcode == ZEND_ADD_CHAR ? 1 : 0 )		3351819	2		=			
ANR	3352540	Identifier	requires_conversion		3351819	0					
ANR	3352541	ConditionalExpression	opline -> opcode == ZEND_ADD_CHAR ? 1 : 0		3351819	1					
ANR	3352542	Condition	opline -> opcode == ZEND_ADD_CHAR		3351819	0					
ANR	3352543	EqualityExpression	opline -> opcode == ZEND_ADD_CHAR		3351819	0		==			
ANR	3352544	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3352545	Identifier	opline		3351819	0					
ANR	3352546	Identifier	opcode		3351819	1					
ANR	3352547	Identifier	ZEND_ADD_CHAR		3351819	1					
ANR	3352548	PrimaryExpression	1		3351819	1					
ANR	3352549	PrimaryExpression	0		3351819	2					
ANR	3352550	IdentifierDeclStatement	size_t final_length = 0 ;	174:4:5749:5772	3351819	2	True				
ANR	3352551	IdentifierDecl	final_length = 0		3351819	0					
ANR	3352552	IdentifierDeclType	size_t		3351819	0					
ANR	3352553	Identifier	final_length		3351819	1					
ANR	3352554	AssignmentExpression	final_length = 0		3351819	2		=			
ANR	3352555	Identifier	final_length		3351819	0					
ANR	3352556	PrimaryExpression	0		3351819	1					
ANR	3352557	IdentifierDeclStatement	zend_string * str ;	175:4:5778:5794	3351819	3	True				
ANR	3352558	IdentifierDecl	* str		3351819	0					
ANR	3352559	IdentifierDeclType	zend_string *		3351819	0					
ANR	3352560	Identifier	str		3351819	1					
ANR	3352561	IdentifierDeclStatement	char * ptr ;	176:4:5800:5809	3351819	4	True				
ANR	3352562	IdentifierDecl	* ptr		3351819	0					
ANR	3352563	IdentifierDeclType	char *		3351819	0					
ANR	3352564	Identifier	ptr		3351819	1					
ANR	3352565	IdentifierDeclStatement	zend_op * last_op ;	177:4:5815:5831	3351819	5	True				
ANR	3352566	IdentifierDecl	* last_op		3351819	0					
ANR	3352567	IdentifierDeclType	zend_op *		3351819	0					
ANR	3352568	Identifier	last_op		3351819	1					
ANR	3352569	WhileStatement	while ( next_op -> opcode == ZEND_ADD_STRING || next_op -> opcode == ZEND_ADD_CHAR )		3351819	6					
ANR	3352570	Condition	next_op -> opcode == ZEND_ADD_STRING || next_op -> opcode == ZEND_ADD_CHAR	184:11:5942:6011	3351819	0	True				
ANR	3352571	OrExpression	next_op -> opcode == ZEND_ADD_STRING || next_op -> opcode == ZEND_ADD_CHAR		3351819	0		||			
ANR	3352572	EqualityExpression	next_op -> opcode == ZEND_ADD_STRING		3351819	0		==			
ANR	3352573	PtrMemberAccess	next_op -> opcode		3351819	0					
ANR	3352574	Identifier	next_op		3351819	0					
ANR	3352575	Identifier	opcode		3351819	1					
ANR	3352576	Identifier	ZEND_ADD_STRING		3351819	1					
ANR	3352577	EqualityExpression	next_op -> opcode == ZEND_ADD_CHAR		3351819	1		==			
ANR	3352578	PtrMemberAccess	next_op -> opcode		3351819	0					
ANR	3352579	Identifier	next_op		3351819	0					
ANR	3352580	Identifier	opcode		3351819	1					
ANR	3352581	Identifier	ZEND_ADD_CHAR		3351819	1					
ANR	3352582	CompoundStatement		144:83:4018:4018	3351819	1					
ANR	3352583	IfStatement	if ( ZEND_RESULT ( opline ) . var != ZEND_RESULT ( next_op ) . var )		3351819	0					
ANR	3352584	Condition	ZEND_RESULT ( opline ) . var != ZEND_RESULT ( next_op ) . var	185:9:6025:6075	3351819	0	True				
ANR	3352585	EqualityExpression	ZEND_RESULT ( opline ) . var != ZEND_RESULT ( next_op ) . var		3351819	0		!=			
ANR	3352586	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3352587	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3352588	Callee	ZEND_RESULT		3351819	0					
ANR	3352589	Identifier	ZEND_RESULT		3351819	0					
ANR	3352590	ArgumentList	opline		3351819	1					
ANR	3352591	Argument	opline		3351819	0					
ANR	3352592	Identifier	opline		3351819	0					
ANR	3352593	Identifier	var		3351819	1					
ANR	3352594	MemberAccess	ZEND_RESULT ( next_op ) . var		3351819	1					
ANR	3352595	CallExpression	ZEND_RESULT ( next_op )		3351819	0					
ANR	3352596	Callee	ZEND_RESULT		3351819	0					
ANR	3352597	Identifier	ZEND_RESULT		3351819	0					
ANR	3352598	ArgumentList	next_op		3351819	1					
ANR	3352599	Argument	next_op		3351819	0					
ANR	3352600	Identifier	next_op		3351819	0					
ANR	3352601	Identifier	var		3351819	1					
ANR	3352602	CompoundStatement		145:62:4082:4082	3351819	1					
ANR	3352603	BreakStatement	break ;	186:6:6086:6091	3351819	0	True				
ANR	3352604	IfStatement	if ( next_op -> opcode == ZEND_ADD_CHAR )		3351819	1					
ANR	3352605	Condition	next_op -> opcode == ZEND_ADD_CHAR	188:9:6109:6140	3351819	0	True				
ANR	3352606	EqualityExpression	next_op -> opcode == ZEND_ADD_CHAR		3351819	0		==			
ANR	3352607	PtrMemberAccess	next_op -> opcode		3351819	0					
ANR	3352608	Identifier	next_op		3351819	0					
ANR	3352609	Identifier	opcode		3351819	1					
ANR	3352610	Identifier	ZEND_ADD_CHAR		3351819	1					
ANR	3352611	CompoundStatement		148:43:4147:4147	3351819	1					
ANR	3352612	ExpressionStatement	final_length += 1	189:6:6151:6168	3351819	0	True				
ANR	3352613	AssignmentExpression	final_length += 1		3351819	0		+=			
ANR	3352614	Identifier	final_length		3351819	0					
ANR	3352615	PrimaryExpression	1		3351819	1					
ANR	3352616	ElseStatement	else		3351819	0					
ANR	3352617	CompoundStatement		150:12:4186:4186	3351819	0					
ANR	3352618	ExpressionStatement	final_length += Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )	191:6:6212:6263	3351819	0	True				
ANR	3352619	AssignmentExpression	final_length += Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		3351819	0		+=			
ANR	3352620	Identifier	final_length		3351819	0					
ANR	3352621	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		3351819	1					
ANR	3352622	Callee	Z_STRLEN		3351819	0					
ANR	3352623	Identifier	Z_STRLEN		3351819	0					
ANR	3352624	ArgumentList	ZEND_OP2_LITERAL ( next_op )		3351819	1					
ANR	3352625	Argument	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352626	CallExpression	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352627	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352628	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352629	ArgumentList	next_op		3351819	1					
ANR	3352630	Argument	next_op		3351819	0					
ANR	3352631	Identifier	next_op		3351819	0					
ANR	3352632	ExpressionStatement	next_op ++	193:5:6277:6286	3351819	2	True				
ANR	3352633	PostIncDecOperationExpression	next_op ++		3351819	0					
ANR	3352634	Identifier	next_op		3351819	0					
ANR	3352635	IncDec	++		3351819	1					
ANR	3352636	IfStatement	if ( final_length == 0 )		3351819	7					
ANR	3352637	Condition	final_length == 0	195:8:6302:6318	3351819	0	True				
ANR	3352638	EqualityExpression	final_length == 0		3351819	0		==			
ANR	3352639	Identifier	final_length		3351819	0					
ANR	3352640	PrimaryExpression	0		3351819	1					
ANR	3352641	CompoundStatement		155:27:4325:4325	3351819	1					
ANR	3352642	BreakStatement	break ;	196:5:6328:6333	3351819	0	True				
ANR	3352643	ExpressionStatement	last_op = next_op	198:4:6345:6362	3351819	8	True				
ANR	3352644	AssignmentExpression	last_op = next_op		3351819	0		=			
ANR	3352645	Identifier	last_op		3351819	0					
ANR	3352646	Identifier	next_op		3351819	1					
ANR	3352647	ExpressionStatement	final_length += ( requires_conversion ? 1 : Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )	199:4:6368:6445	3351819	9	True				
ANR	3352648	AssignmentExpression	final_length += ( requires_conversion ? 1 : Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )		3351819	0		+=			
ANR	3352649	Identifier	final_length		3351819	0					
ANR	3352650	ConditionalExpression	requires_conversion ? 1 : Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		3351819	1					
ANR	3352651	Condition	requires_conversion		3351819	0					
ANR	3352652	Identifier	requires_conversion		3351819	0					
ANR	3352653	PrimaryExpression	1		3351819	1					
ANR	3352654	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		3351819	2					
ANR	3352655	Callee	Z_STRLEN		3351819	0					
ANR	3352656	Identifier	Z_STRLEN		3351819	0					
ANR	3352657	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352658	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352659	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352660	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352661	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352662	ArgumentList	opline		3351819	1					
ANR	3352663	Argument	opline		3351819	0					
ANR	3352664	Identifier	opline		3351819	0					
ANR	3352665	ExpressionStatement	"str = zend_string_alloc ( final_length , 0 )"	200:4:6451:6491	3351819	10	True				
ANR	3352666	AssignmentExpression	"str = zend_string_alloc ( final_length , 0 )"		3351819	0		=			
ANR	3352667	Identifier	str		3351819	0					
ANR	3352668	CallExpression	"zend_string_alloc ( final_length , 0 )"		3351819	1					
ANR	3352669	Callee	zend_string_alloc		3351819	0					
ANR	3352670	Identifier	zend_string_alloc		3351819	0					
ANR	3352671	ArgumentList	final_length		3351819	1					
ANR	3352672	Argument	final_length		3351819	0					
ANR	3352673	Identifier	final_length		3351819	0					
ANR	3352674	Argument	0		3351819	1					
ANR	3352675	PrimaryExpression	0		3351819	0					
ANR	3352676	ExpressionStatement	str -> len = final_length	201:4:6497:6520	3351819	11	True				
ANR	3352677	AssignmentExpression	str -> len = final_length		3351819	0		=			
ANR	3352678	PtrMemberAccess	str -> len		3351819	0					
ANR	3352679	Identifier	str		3351819	0					
ANR	3352680	Identifier	len		3351819	1					
ANR	3352681	Identifier	final_length		3351819	1					
ANR	3352682	ExpressionStatement	ptr = str -> val	202:4:6526:6540	3351819	12	True				
ANR	3352683	AssignmentExpression	ptr = str -> val		3351819	0		=			
ANR	3352684	Identifier	ptr		3351819	0					
ANR	3352685	PtrMemberAccess	str -> val		3351819	1					
ANR	3352686	Identifier	str		3351819	0					
ANR	3352687	Identifier	val		3351819	1					
ANR	3352688	ExpressionStatement	ptr [ final_length ] = '\\0'	203:4:6546:6570	3351819	13	True				
ANR	3352689	AssignmentExpression	ptr [ final_length ] = '\\0'		3351819	0		=			
ANR	3352690	ArrayIndexing	ptr [ final_length ]		3351819	0					
ANR	3352691	Identifier	ptr		3351819	0					
ANR	3352692	Identifier	final_length		3351819	1					
ANR	3352693	PrimaryExpression	'\\0'		3351819	1					
ANR	3352694	IfStatement	if ( requires_conversion )		3351819	14					
ANR	3352695	Condition	requires_conversion	204:8:6580:6598	3351819	0	True				
ANR	3352696	Identifier	requires_conversion		3351819	0					
ANR	3352697	CompoundStatement		165:5:4632:4683	3351819	1					
ANR	3352698	IdentifierDeclStatement	char chval = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( opline ) ) ;	205:5:6628:6679	3351819	0	True				
ANR	3352699	IdentifierDecl	chval = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3352700	IdentifierDeclType	char		3351819	0					
ANR	3352701	Identifier	chval		3351819	1					
ANR	3352702	AssignmentExpression	chval = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( opline ) )		3351819	2		=			
ANR	3352703	Identifier	chval		3351819	0					
ANR	3352704	CastExpression	( char ) Z_LVAL ( ZEND_OP2_LITERAL ( opline ) )		3351819	1					
ANR	3352705	CastTarget	char		3351819	0					
ANR	3352706	CallExpression	Z_LVAL ( ZEND_OP2_LITERAL ( opline ) )		3351819	1					
ANR	3352707	Callee	Z_LVAL		3351819	0					
ANR	3352708	Identifier	Z_LVAL		3351819	0					
ANR	3352709	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352710	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352711	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352712	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352713	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352714	ArgumentList	opline		3351819	1					
ANR	3352715	Argument	opline		3351819	0					
ANR	3352716	Identifier	opline		3351819	0					
ANR	3352717	ExpressionStatement	"ZVAL_NEW_STR ( & ZEND_OP2_LITERAL ( opline ) , str )"	207:5:6687:6731	3351819	1	True				
ANR	3352718	CallExpression	"ZVAL_NEW_STR ( & ZEND_OP2_LITERAL ( opline ) , str )"		3351819	0					
ANR	3352719	Callee	ZVAL_NEW_STR		3351819	0					
ANR	3352720	Identifier	ZVAL_NEW_STR		3351819	0					
ANR	3352721	ArgumentList	& ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352722	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352723	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352724	UnaryOperator	&		3351819	0					
ANR	3352725	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352726	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352727	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352728	ArgumentList	opline		3351819	1					
ANR	3352729	Argument	opline		3351819	0					
ANR	3352730	Identifier	opline		3351819	0					
ANR	3352731	Argument	str		3351819	1					
ANR	3352732	Identifier	str		3351819	0					
ANR	3352733	ExpressionStatement	ptr [ 0 ] = chval	208:5:6738:6752	3351819	2	True				
ANR	3352734	AssignmentExpression	ptr [ 0 ] = chval		3351819	0		=			
ANR	3352735	ArrayIndexing	ptr [ 0 ]		3351819	0					
ANR	3352736	Identifier	ptr		3351819	0					
ANR	3352737	PrimaryExpression	0		3351819	1					
ANR	3352738	Identifier	chval		3351819	1					
ANR	3352739	ExpressionStatement	opline -> opcode = ZEND_ADD_STRING	209:5:6759:6791	3351819	3	True				
ANR	3352740	AssignmentExpression	opline -> opcode = ZEND_ADD_STRING		3351819	0		=			
ANR	3352741	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3352742	Identifier	opline		3351819	0					
ANR	3352743	Identifier	opcode		3351819	1					
ANR	3352744	Identifier	ZEND_ADD_STRING		3351819	1					
ANR	3352745	ExpressionStatement	ptr ++	210:5:6798:6803	3351819	4	True				
ANR	3352746	PostIncDecOperationExpression	ptr ++		3351819	0					
ANR	3352747	Identifier	ptr		3351819	0					
ANR	3352748	IncDec	++		3351819	1					
ANR	3352749	ElseStatement	else		3351819	0					
ANR	3352750	CompoundStatement		171:11:4820:4820	3351819	0					
ANR	3352751	ExpressionStatement	"memcpy ( ptr , Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )"	212:5:6845:6928	3351819	0	True				
ANR	3352752	CallExpression	"memcpy ( ptr , Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) )"		3351819	0					
ANR	3352753	Callee	memcpy		3351819	0					
ANR	3352754	Identifier	memcpy		3351819	0					
ANR	3352755	ArgumentList	ptr		3351819	1					
ANR	3352756	Argument	ptr		3351819	0					
ANR	3352757	Identifier	ptr		3351819	0					
ANR	3352758	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		3351819	1					
ANR	3352759	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3352760	Callee	Z_STRVAL		3351819	0					
ANR	3352761	Identifier	Z_STRVAL		3351819	0					
ANR	3352762	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352763	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352764	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352765	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352766	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352767	ArgumentList	opline		3351819	1					
ANR	3352768	Argument	opline		3351819	0					
ANR	3352769	Identifier	opline		3351819	0					
ANR	3352770	Argument	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		3351819	2					
ANR	3352771	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3352772	Callee	Z_STRLEN		3351819	0					
ANR	3352773	Identifier	Z_STRLEN		3351819	0					
ANR	3352774	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352775	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352776	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352777	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352778	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352779	ArgumentList	opline		3351819	1					
ANR	3352780	Argument	opline		3351819	0					
ANR	3352781	Identifier	opline		3351819	0					
ANR	3352782	ExpressionStatement	ptr += Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )	213:5:6935:6976	3351819	1	True				
ANR	3352783	AssignmentExpression	ptr += Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		3351819	0		+=			
ANR	3352784	Identifier	ptr		3351819	0					
ANR	3352785	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		3351819	1					
ANR	3352786	Callee	Z_STRLEN		3351819	0					
ANR	3352787	Identifier	Z_STRLEN		3351819	0					
ANR	3352788	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352789	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352790	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352791	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352792	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352793	ArgumentList	opline		3351819	1					
ANR	3352794	Argument	opline		3351819	0					
ANR	3352795	Identifier	opline		3351819	0					
ANR	3352796	ExpressionStatement	zend_string_release ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )	214:5:6983:7035	3351819	2	True				
ANR	3352797	CallExpression	zend_string_release ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )		3351819	0					
ANR	3352798	Callee	zend_string_release		3351819	0					
ANR	3352799	Identifier	zend_string_release		3351819	0					
ANR	3352800	ArgumentList	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		3351819	1					
ANR	3352801	Argument	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3352802	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3352803	Callee	Z_STR		3351819	0					
ANR	3352804	Identifier	Z_STR		3351819	0					
ANR	3352805	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352806	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352807	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352808	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352809	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352810	ArgumentList	opline		3351819	1					
ANR	3352811	Argument	opline		3351819	0					
ANR	3352812	Identifier	opline		3351819	0					
ANR	3352813	ExpressionStatement	"ZVAL_NEW_STR ( & ZEND_OP2_LITERAL ( opline ) , str )"	215:5:7042:7086	3351819	3	True				
ANR	3352814	CallExpression	"ZVAL_NEW_STR ( & ZEND_OP2_LITERAL ( opline ) , str )"		3351819	0					
ANR	3352815	Callee	ZVAL_NEW_STR		3351819	0					
ANR	3352816	Identifier	ZVAL_NEW_STR		3351819	0					
ANR	3352817	ArgumentList	& ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352818	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352819	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3352820	UnaryOperator	&		3351819	0					
ANR	3352821	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3352822	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352823	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352824	ArgumentList	opline		3351819	1					
ANR	3352825	Argument	opline		3351819	0					
ANR	3352826	Identifier	opline		3351819	0					
ANR	3352827	Argument	str		3351819	1					
ANR	3352828	Identifier	str		3351819	0					
ANR	3352829	ExpressionStatement	next_op = opline + 1	217:4:7098:7118	3351819	15	True				
ANR	3352830	AssignmentExpression	next_op = opline + 1		3351819	0		=			
ANR	3352831	Identifier	next_op		3351819	0					
ANR	3352832	AdditiveExpression	opline + 1		3351819	1		+			
ANR	3352833	Identifier	opline		3351819	0					
ANR	3352834	PrimaryExpression	1		3351819	1					
ANR	3352835	WhileStatement	while ( next_op < last_op )		3351819	16					
ANR	3352836	Condition	next_op < last_op	218:11:7131:7147	3351819	0	True				
ANR	3352837	RelationalExpression	next_op < last_op		3351819	0		<			
ANR	3352838	Identifier	next_op		3351819	0					
ANR	3352839	Identifier	last_op		3351819	1					
ANR	3352840	CompoundStatement		178:30:5154:5154	3351819	1					
ANR	3352841	IfStatement	if ( next_op -> opcode == ZEND_ADD_STRING )		3351819	0					
ANR	3352842	Condition	next_op -> opcode == ZEND_ADD_STRING	219:9:7161:7194	3351819	0	True				
ANR	3352843	EqualityExpression	next_op -> opcode == ZEND_ADD_STRING		3351819	0		==			
ANR	3352844	PtrMemberAccess	next_op -> opcode		3351819	0					
ANR	3352845	Identifier	next_op		3351819	0					
ANR	3352846	Identifier	opcode		3351819	1					
ANR	3352847	Identifier	ZEND_ADD_STRING		3351819	1					
ANR	3352848	CompoundStatement		179:45:5201:5201	3351819	1					
ANR	3352849	ExpressionStatement	"memcpy ( ptr , Z_STRVAL ( ZEND_OP2_LITERAL ( next_op ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) ) )"	220:6:7205:7290	3351819	0	True				
ANR	3352850	CallExpression	"memcpy ( ptr , Z_STRVAL ( ZEND_OP2_LITERAL ( next_op ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) ) )"		3351819	0					
ANR	3352851	Callee	memcpy		3351819	0					
ANR	3352852	Identifier	memcpy		3351819	0					
ANR	3352853	ArgumentList	ptr		3351819	1					
ANR	3352854	Argument	ptr		3351819	0					
ANR	3352855	Identifier	ptr		3351819	0					
ANR	3352856	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( next_op ) )		3351819	1					
ANR	3352857	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( next_op ) )		3351819	0					
ANR	3352858	Callee	Z_STRVAL		3351819	0					
ANR	3352859	Identifier	Z_STRVAL		3351819	0					
ANR	3352860	ArgumentList	ZEND_OP2_LITERAL ( next_op )		3351819	1					
ANR	3352861	Argument	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352862	CallExpression	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352863	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352864	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352865	ArgumentList	next_op		3351819	1					
ANR	3352866	Argument	next_op		3351819	0					
ANR	3352867	Identifier	next_op		3351819	0					
ANR	3352868	Argument	Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		3351819	2					
ANR	3352869	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		3351819	0					
ANR	3352870	Callee	Z_STRLEN		3351819	0					
ANR	3352871	Identifier	Z_STRLEN		3351819	0					
ANR	3352872	ArgumentList	ZEND_OP2_LITERAL ( next_op )		3351819	1					
ANR	3352873	Argument	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352874	CallExpression	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352875	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352876	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352877	ArgumentList	next_op		3351819	1					
ANR	3352878	Argument	next_op		3351819	0					
ANR	3352879	Identifier	next_op		3351819	0					
ANR	3352880	ExpressionStatement	ptr += Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )	221:6:7298:7340	3351819	1	True				
ANR	3352881	AssignmentExpression	ptr += Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		3351819	0		+=			
ANR	3352882	Identifier	ptr		3351819	0					
ANR	3352883	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( next_op ) )		3351819	1					
ANR	3352884	Callee	Z_STRLEN		3351819	0					
ANR	3352885	Identifier	Z_STRLEN		3351819	0					
ANR	3352886	ArgumentList	ZEND_OP2_LITERAL ( next_op )		3351819	1					
ANR	3352887	Argument	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352888	CallExpression	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352889	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352890	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352891	ArgumentList	next_op		3351819	1					
ANR	3352892	Argument	next_op		3351819	0					
ANR	3352893	Identifier	next_op		3351819	0					
ANR	3352894	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( next_op ) )	222:6:7348:7388	3351819	2	True				
ANR	3352895	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( next_op ) )		3351819	0					
ANR	3352896	Callee	literal_dtor		3351819	0					
ANR	3352897	Identifier	literal_dtor		3351819	0					
ANR	3352898	ArgumentList	& ZEND_OP2_LITERAL ( next_op )		3351819	1					
ANR	3352899	Argument	& ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352900	UnaryOperationExpression	& ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352901	UnaryOperator	&		3351819	0					
ANR	3352902	CallExpression	ZEND_OP2_LITERAL ( next_op )		3351819	1					
ANR	3352903	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352904	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352905	ArgumentList	next_op		3351819	1					
ANR	3352906	Argument	next_op		3351819	0					
ANR	3352907	Identifier	next_op		3351819	0					
ANR	3352908	ElseStatement	else		3351819	0					
ANR	3352909	CompoundStatement		183:12:5406:5406	3351819	0					
ANR	3352910	ExpressionStatement	* ptr = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( next_op ) )	224:6:7430:7476	3351819	0	True				
ANR	3352911	AssignmentExpression	* ptr = ( char ) Z_LVAL ( ZEND_OP2_LITERAL ( next_op ) )		3351819	0		=			
ANR	3352912	UnaryOperationExpression	* ptr		3351819	0					
ANR	3352913	UnaryOperator	*		3351819	0					
ANR	3352914	Identifier	ptr		3351819	1					
ANR	3352915	CastExpression	( char ) Z_LVAL ( ZEND_OP2_LITERAL ( next_op ) )		3351819	1					
ANR	3352916	CastTarget	char		3351819	0					
ANR	3352917	CallExpression	Z_LVAL ( ZEND_OP2_LITERAL ( next_op ) )		3351819	1					
ANR	3352918	Callee	Z_LVAL		3351819	0					
ANR	3352919	Identifier	Z_LVAL		3351819	0					
ANR	3352920	ArgumentList	ZEND_OP2_LITERAL ( next_op )		3351819	1					
ANR	3352921	Argument	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352922	CallExpression	ZEND_OP2_LITERAL ( next_op )		3351819	0					
ANR	3352923	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3352924	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3352925	ArgumentList	next_op		3351819	1					
ANR	3352926	Argument	next_op		3351819	0					
ANR	3352927	Identifier	next_op		3351819	0					
ANR	3352928	ExpressionStatement	ptr ++	225:6:7484:7489	3351819	1	True				
ANR	3352929	PostIncDecOperationExpression	ptr ++		3351819	0					
ANR	3352930	Identifier	ptr		3351819	0					
ANR	3352931	IncDec	++		3351819	1					
ANR	3352932	ExpressionStatement	MAKE_NOP ( next_op )	227:5:7503:7520	3351819	1	True				
ANR	3352933	CallExpression	MAKE_NOP ( next_op )		3351819	0					
ANR	3352934	Callee	MAKE_NOP		3351819	0					
ANR	3352935	Identifier	MAKE_NOP		3351819	0					
ANR	3352936	ArgumentList	next_op		3351819	1					
ANR	3352937	Argument	next_op		3351819	0					
ANR	3352938	Identifier	next_op		3351819	0					
ANR	3352939	ExpressionStatement	next_op ++	228:5:7527:7536	3351819	2	True				
ANR	3352940	PostIncDecOperationExpression	next_op ++		3351819	0					
ANR	3352941	Identifier	next_op		3351819	0					
ANR	3352942	IncDec	++		3351819	1					
ANR	3352943	IfStatement	if ( ! ( ( ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10 ) & OPTIMIZATION_LEVEL ) )		3351819	17					
ANR	3352944	Condition	! ( ( ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10 ) & OPTIMIZATION_LEVEL )	230:8:7552:7621	3351819	0	True				
ANR	3352945	UnaryOperationExpression	! ( ( ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10 ) & OPTIMIZATION_LEVEL )		3351819	0					
ANR	3352946	UnaryOperator	!		3351819	0					
ANR	3352947	BitAndExpression	( ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10 ) & OPTIMIZATION_LEVEL		3351819	1		&			
ANR	3352948	InclusiveOrExpression	ZEND_OPTIMIZER_PASS_5 | ZEND_OPTIMIZER_PASS_10		3351819	0		|			
ANR	3352949	Identifier	ZEND_OPTIMIZER_PASS_5		3351819	0					
ANR	3352950	Identifier	ZEND_OPTIMIZER_PASS_10		3351819	1					
ANR	3352951	Identifier	OPTIMIZATION_LEVEL		3351819	1					
ANR	3352952	CompoundStatement		190:80:5628:5628	3351819	1					
ANR	3352953	IfStatement	if ( last_op - opline >= 3 )		3351819	0					
ANR	3352954	Condition	last_op - opline >= 3	232:9:7694:7712	3351819	0	True				
ANR	3352955	RelationalExpression	last_op - opline >= 3		3351819	0		>=			
ANR	3352956	AdditiveExpression	last_op - opline		3351819	0		-			
ANR	3352957	Identifier	last_op		3351819	0					
ANR	3352958	Identifier	opline		3351819	1					
ANR	3352959	PrimaryExpression	3		3351819	1					
ANR	3352960	CompoundStatement		192:30:5719:5719	3351819	1					
ANR	3352961	ExpressionStatement	( opline + 1 ) -> opcode = ZEND_JMP	233:6:7776:7807	3351819	0	True				
ANR	3352962	AssignmentExpression	( opline + 1 ) -> opcode = ZEND_JMP		3351819	0		=			
ANR	3352963	PtrMemberAccess	( opline + 1 ) -> opcode		3351819	0					
ANR	3352964	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3352965	Identifier	opline		3351819	0					
ANR	3352966	PrimaryExpression	1		3351819	1					
ANR	3352967	Identifier	opcode		3351819	1					
ANR	3352968	Identifier	ZEND_JMP		3351819	1					
ANR	3352969	ExpressionStatement	ZEND_OP1 ( opline + 1 ) . opline_num = last_op - op_array -> opcodes	234:6:7815:7876	3351819	1	True				
ANR	3352970	AssignmentExpression	ZEND_OP1 ( opline + 1 ) . opline_num = last_op - op_array -> opcodes		3351819	0		=			
ANR	3352971	MemberAccess	ZEND_OP1 ( opline + 1 ) . opline_num		3351819	0					
ANR	3352972	CallExpression	ZEND_OP1 ( opline + 1 )		3351819	0					
ANR	3352973	Callee	ZEND_OP1		3351819	0					
ANR	3352974	Identifier	ZEND_OP1		3351819	0					
ANR	3352975	ArgumentList	opline + 1		3351819	1					
ANR	3352976	Argument	opline + 1		3351819	0					
ANR	3352977	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3352978	Identifier	opline		3351819	0					
ANR	3352979	PrimaryExpression	1		3351819	1					
ANR	3352980	Identifier	opline_num		3351819	1					
ANR	3352981	AdditiveExpression	last_op - op_array -> opcodes		3351819	1		-			
ANR	3352982	Identifier	last_op		3351819	0					
ANR	3352983	PtrMemberAccess	op_array -> opcodes		3351819	1					
ANR	3352984	Identifier	op_array		3351819	0					
ANR	3352985	Identifier	opcodes		3351819	1					
ANR	3352986	BreakStatement	break ;	238:3:7977:7982	3351819	33	True				
ANR	3352987	Label	case ZEND_FETCH_CONSTANT :	241:2:7994:8018	3351819	34	True				
ANR	3352988	Identifier	ZEND_FETCH_CONSTANT		3351819	0					
ANR	3352989	IfStatement	"if ( ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0 )"		3351819	35					
ANR	3352990	Condition	"ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"	242:7:8027:8361	3351819	0	True				
ANR	3352991	AndExpression	"ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		3351819	0		&&			
ANR	3352992	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_UNUSED		3351819	0		==			
ANR	3352993	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3352994	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3352995	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3352996	ArgumentList	opline		3351819	1					
ANR	3352997	Argument	opline		3351819	0					
ANR	3352998	Identifier	opline		3351819	0					
ANR	3352999	Identifier	IS_UNUSED		3351819	1					
ANR	3353000	AndExpression	"ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		3351819	1		&&			
ANR	3353001	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		3351819	0		==			
ANR	3353002	CallExpression	ZEND_OP2_TYPE ( opline )		3351819	0					
ANR	3353003	Callee	ZEND_OP2_TYPE		3351819	0					
ANR	3353004	Identifier	ZEND_OP2_TYPE		3351819	0					
ANR	3353005	ArgumentList	opline		3351819	1					
ANR	3353006	Argument	opline		3351819	0					
ANR	3353007	Identifier	opline		3351819	0					
ANR	3353008	Identifier	IS_CONST		3351819	1					
ANR	3353009	AndExpression	"Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING && Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		3351819	1		&&			
ANR	3353010	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		3351819	0		==			
ANR	3353011	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353012	Callee	Z_TYPE		3351819	0					
ANR	3353013	Identifier	Z_TYPE		3351819	0					
ANR	3353014	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353015	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353016	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353017	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353018	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353019	ArgumentList	opline		3351819	1					
ANR	3353020	Argument	opline		3351819	0					
ANR	3353021	Identifier	opline		3351819	0					
ANR	3353022	Identifier	IS_STRING		3351819	1					
ANR	3353023	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		3351819	1		&&			
ANR	3353024	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3351819	0		==			
ANR	3353025	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353026	Callee	Z_STRLEN		3351819	0					
ANR	3353027	Identifier	Z_STRLEN		3351819	0					
ANR	3353028	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353029	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353030	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353031	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353032	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353033	ArgumentList	opline		3351819	1					
ANR	3353034	Argument	opline		3351819	0					
ANR	3353035	Identifier	opline		3351819	0					
ANR	3353036	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3351819	1		-			
ANR	3353037	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		3351819	0					
ANR	3353038	Sizeof	sizeof		3351819	0					
ANR	3353039	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3351819	1					
ANR	3353040	PrimaryExpression	1		3351819	1					
ANR	3353041	EqualityExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) == 0"		3351819	1		==			
ANR	3353042	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		3351819	0					
ANR	3353043	Callee	memcmp		3351819	0					
ANR	3353044	Identifier	memcmp		3351819	0					
ANR	3353045	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		3351819	1					
ANR	3353046	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353047	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353048	Callee	Z_STRVAL		3351819	0					
ANR	3353049	Identifier	Z_STRVAL		3351819	0					
ANR	3353050	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353051	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353052	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353053	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353054	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353055	ArgumentList	opline		3351819	1					
ANR	3353056	Argument	opline		3351819	0					
ANR	3353057	Identifier	opline		3351819	0					
ANR	3353058	Argument	"""__COMPILER_HALT_OFFSET__"""		3351819	1					
ANR	3353059	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3351819	0					
ANR	3353060	Argument	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3351819	2					
ANR	3353061	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3351819	0		-			
ANR	3353062	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		3351819	0					
ANR	3353063	Sizeof	sizeof		3351819	0					
ANR	3353064	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3351819	1					
ANR	3353065	PrimaryExpression	1		3351819	1					
ANR	3353066	PrimaryExpression	0		3351819	1					
ANR	3353067	CompoundStatement		210:4:6539:6551	3351819	1					
ANR	3353068	IdentifierDeclStatement	zend_execute_data * orig_execute_data = EG ( current_execute_data ) ;	248:4:8425:8488	3351819	0	True				
ANR	3353069	IdentifierDecl	* orig_execute_data = EG ( current_execute_data )		3351819	0					
ANR	3353070	IdentifierDeclType	zend_execute_data *		3351819	0					
ANR	3353071	Identifier	orig_execute_data		3351819	1					
ANR	3353072	AssignmentExpression	* orig_execute_data = EG ( current_execute_data )		3351819	2		=			
ANR	3353073	Identifier	orig_execute_data		3351819	0					
ANR	3353074	CallExpression	EG ( current_execute_data )		3351819	1					
ANR	3353075	Callee	EG		3351819	0					
ANR	3353076	Identifier	EG		3351819	0					
ANR	3353077	ArgumentList	current_execute_data		3351819	1					
ANR	3353078	Argument	current_execute_data		3351819	0					
ANR	3353079	Identifier	current_execute_data		3351819	0					
ANR	3353080	IdentifierDeclStatement	zend_execute_data fake_execute_data ;	249:4:8494:8529	3351819	1	True				
ANR	3353081	IdentifierDecl	fake_execute_data		3351819	0					
ANR	3353082	IdentifierDeclType	zend_execute_data		3351819	0					
ANR	3353083	Identifier	fake_execute_data		3351819	1					
ANR	3353084	IdentifierDeclStatement	zval * offset ;	250:4:8535:8547	3351819	2	True				
ANR	3353085	IdentifierDecl	* offset		3351819	0					
ANR	3353086	IdentifierDeclType	zval *		3351819	0					
ANR	3353087	Identifier	offset		3351819	1					
ANR	3353088	ExpressionStatement	"memset ( & fake_execute_data , 0 , sizeof ( zend_execute_data ) )"	252:4:8554:8610	3351819	3	True				
ANR	3353089	CallExpression	"memset ( & fake_execute_data , 0 , sizeof ( zend_execute_data ) )"		3351819	0					
ANR	3353090	Callee	memset		3351819	0					
ANR	3353091	Identifier	memset		3351819	0					
ANR	3353092	ArgumentList	& fake_execute_data		3351819	1					
ANR	3353093	Argument	& fake_execute_data		3351819	0					
ANR	3353094	UnaryOperationExpression	& fake_execute_data		3351819	0					
ANR	3353095	UnaryOperator	&		3351819	0					
ANR	3353096	Identifier	fake_execute_data		3351819	1					
ANR	3353097	Argument	0		3351819	1					
ANR	3353098	PrimaryExpression	0		3351819	0					
ANR	3353099	Argument	sizeof ( zend_execute_data )		3351819	2					
ANR	3353100	SizeofExpression	sizeof ( zend_execute_data )		3351819	0					
ANR	3353101	Sizeof	sizeof		3351819	0					
ANR	3353102	SizeofOperand	zend_execute_data		3351819	1					
ANR	3353103	ExpressionStatement	fake_execute_data . func = ( zend_function * ) op_array	253:4:8616:8665	3351819	4	True				
ANR	3353104	AssignmentExpression	fake_execute_data . func = ( zend_function * ) op_array		3351819	0		=			
ANR	3353105	MemberAccess	fake_execute_data . func		3351819	0					
ANR	3353106	Identifier	fake_execute_data		3351819	0					
ANR	3353107	Identifier	func		3351819	1					
ANR	3353108	CastExpression	( zend_function * ) op_array		3351819	1					
ANR	3353109	CastTarget	zend_function *		3351819	0					
ANR	3353110	Identifier	op_array		3351819	1					
ANR	3353111	ExpressionStatement	EG ( current_execute_data ) = & fake_execute_data	254:4:8671:8716	3351819	5	True				
ANR	3353112	AssignmentExpression	EG ( current_execute_data ) = & fake_execute_data		3351819	0		=			
ANR	3353113	CallExpression	EG ( current_execute_data )		3351819	0					
ANR	3353114	Callee	EG		3351819	0					
ANR	3353115	Identifier	EG		3351819	0					
ANR	3353116	ArgumentList	current_execute_data		3351819	1					
ANR	3353117	Argument	current_execute_data		3351819	0					
ANR	3353118	Identifier	current_execute_data		3351819	0					
ANR	3353119	UnaryOperationExpression	& fake_execute_data		3351819	1					
ANR	3353120	UnaryOperator	&		3351819	0					
ANR	3353121	Identifier	fake_execute_data		3351819	1					
ANR	3353122	IfStatement	"if ( ( offset = zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) ) != NULL )"		3351819	6					
ANR	3353123	Condition	"( offset = zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) ) != NULL"	255:8:8726:8833	3351819	0	True				
ANR	3353124	EqualityExpression	"( offset = zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) ) != NULL"		3351819	0		!=			
ANR	3353125	AssignmentExpression	"offset = zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		3351819	0		=			
ANR	3353126	Identifier	offset		3351819	0					
ANR	3353127	CallExpression	"zend_get_constant_str ( ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		3351819	1					
ANR	3353128	Callee	zend_get_constant_str		3351819	0					
ANR	3353129	Identifier	zend_get_constant_str		3351819	0					
ANR	3353130	ArgumentList	"""__COMPILER_HALT_OFFSET__"""		3351819	1					
ANR	3353131	Argument	"""__COMPILER_HALT_OFFSET__"""		3351819	0					
ANR	3353132	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3351819	0					
ANR	3353133	Argument	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3351819	1					
ANR	3353134	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3351819	0		-			
ANR	3353135	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		3351819	0					
ANR	3353136	Sizeof	sizeof		3351819	0					
ANR	3353137	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3351819	1					
ANR	3353138	PrimaryExpression	1		3351819	1					
ANR	3353139	Identifier	NULL		3351819	1					
ANR	3353140	CompoundStatement		216:5:6847:6884	3351819	1					
ANR	3353141	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	256:5:8843:8880	3351819	0	True				
ANR	3353142	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3353143	IdentifierDeclType	uint32_t		3351819	0					
ANR	3353144	Identifier	tv		3351819	1					
ANR	3353145	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		3351819	2		=			
ANR	3353146	Identifier	tv		3351819	0					
ANR	3353147	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	1					
ANR	3353148	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3353149	Callee	ZEND_RESULT		3351819	0					
ANR	3353150	Identifier	ZEND_RESULT		3351819	0					
ANR	3353151	ArgumentList	opline		3351819	1					
ANR	3353152	Argument	opline		3351819	0					
ANR	3353153	Identifier	opline		3351819	0					
ANR	3353154	Identifier	var		3351819	1					
ANR	3353155	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , offset ) )"		3351819	1					
ANR	3353156	Condition	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , offset )"	258:9:8892:8964	3351819	0	True				
ANR	3353157	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , offset )"		3351819	0					
ANR	3353158	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3353159	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3353160	ArgumentList	op_array		3351819	1					
ANR	3353161	Argument	op_array		3351819	0					
ANR	3353162	Identifier	op_array		3351819	0					
ANR	3353163	Argument	opline		3351819	1					
ANR	3353164	Identifier	opline		3351819	0					
ANR	3353165	Argument	IS_TMP_VAR		3351819	2					
ANR	3353166	Identifier	IS_TMP_VAR		3351819	0					
ANR	3353167	Argument	tv		3351819	3					
ANR	3353168	Identifier	tv		3351819	0					
ANR	3353169	Argument	offset		3351819	4					
ANR	3353170	Identifier	offset		3351819	0					
ANR	3353171	CompoundStatement		218:84:6971:6971	3351819	1					
ANR	3353172	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	259:6:8975:9014	3351819	0	True				
ANR	3353173	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353174	Callee	literal_dtor		3351819	0					
ANR	3353175	Identifier	literal_dtor		3351819	0					
ANR	3353176	ArgumentList	& ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353177	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353178	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353179	UnaryOperator	&		3351819	0					
ANR	3353180	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353181	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353182	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353183	ArgumentList	opline		3351819	1					
ANR	3353184	Argument	opline		3351819	0					
ANR	3353185	Identifier	opline		3351819	0					
ANR	3353186	ExpressionStatement	MAKE_NOP ( opline )	260:6:9022:9038	3351819	1	True				
ANR	3353187	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3353188	Callee	MAKE_NOP		3351819	0					
ANR	3353189	Identifier	MAKE_NOP		3351819	0					
ANR	3353190	ArgumentList	opline		3351819	1					
ANR	3353191	Argument	opline		3351819	0					
ANR	3353192	Identifier	opline		3351819	0					
ANR	3353193	ExpressionStatement	EG ( current_execute_data ) = orig_execute_data	263:4:9057:9101	3351819	7	True				
ANR	3353194	AssignmentExpression	EG ( current_execute_data ) = orig_execute_data		3351819	0		=			
ANR	3353195	CallExpression	EG ( current_execute_data )		3351819	0					
ANR	3353196	Callee	EG		3351819	0					
ANR	3353197	Identifier	EG		3351819	0					
ANR	3353198	ArgumentList	current_execute_data		3351819	1					
ANR	3353199	Argument	current_execute_data		3351819	0					
ANR	3353200	Identifier	current_execute_data		3351819	0					
ANR	3353201	Identifier	orig_execute_data		3351819	1					
ANR	3353202	BreakStatement	break ;	264:4:9107:9112	3351819	8	True				
ANR	3353203	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING )		3351819	36					
ANR	3353204	Condition	ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING	267:7:9127:9254	3351819	0	True				
ANR	3353205	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		3351819	0		&&			
ANR	3353206	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_UNUSED		3351819	0		==			
ANR	3353207	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3353208	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3353209	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3353210	ArgumentList	opline		3351819	1					
ANR	3353211	Argument	opline		3351819	0					
ANR	3353212	Identifier	opline		3351819	0					
ANR	3353213	Identifier	IS_UNUSED		3351819	1					
ANR	3353214	AndExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		3351819	1		&&			
ANR	3353215	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		3351819	0		==			
ANR	3353216	CallExpression	ZEND_OP2_TYPE ( opline )		3351819	0					
ANR	3353217	Callee	ZEND_OP2_TYPE		3351819	0					
ANR	3353218	Identifier	ZEND_OP2_TYPE		3351819	0					
ANR	3353219	ArgumentList	opline		3351819	1					
ANR	3353220	Argument	opline		3351819	0					
ANR	3353221	Identifier	opline		3351819	0					
ANR	3353222	Identifier	IS_CONST		3351819	1					
ANR	3353223	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		3351819	1		==			
ANR	3353224	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353225	Callee	Z_TYPE		3351819	0					
ANR	3353226	Identifier	Z_TYPE		3351819	0					
ANR	3353227	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353228	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353229	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353230	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353231	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353232	ArgumentList	opline		3351819	1					
ANR	3353233	Argument	opline		3351819	0					
ANR	3353234	Identifier	opline		3351819	0					
ANR	3353235	Identifier	IS_STRING		3351819	1					
ANR	3353236	CompoundStatement		232:4:7352:7358	3351819	1					
ANR	3353237	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	271:4:9305:9342	3351819	0	True				
ANR	3353238	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3353239	IdentifierDeclType	uint32_t		3351819	0					
ANR	3353240	Identifier	tv		3351819	1					
ANR	3353241	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		3351819	2		=			
ANR	3353242	Identifier	tv		3351819	0					
ANR	3353243	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	1					
ANR	3353244	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3353245	Callee	ZEND_RESULT		3351819	0					
ANR	3353246	Identifier	ZEND_RESULT		3351819	0					
ANR	3353247	ArgumentList	opline		3351819	1					
ANR	3353248	Argument	opline		3351819	0					
ANR	3353249	Identifier	opline		3351819	0					
ANR	3353250	Identifier	var		3351819	1					
ANR	3353251	IdentifierDeclStatement	zval c ;	272:4:9348:9354	3351819	1	True				
ANR	3353252	IdentifierDecl	c		3351819	0					
ANR	3353253	IdentifierDeclType	zval		3351819	0					
ANR	3353254	Identifier	c		3351819	1					
ANR	3353255	IfStatement	"if ( ! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) , & c , 1 ) )"		3351819	2					
ANR	3353256	Condition	"! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) , & c , 1 )"	274:8:9365:9443	3351819	0	True				
ANR	3353257	UnaryOperationExpression	"! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) , & c , 1 )"		3351819	0					
ANR	3353258	UnaryOperator	!		3351819	0					
ANR	3353259	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP2_LITERAL ( opline ) ) , & c , 1 )"		3351819	1					
ANR	3353260	Callee	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3353261	Identifier	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3353262	ArgumentList	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		3351819	1					
ANR	3353263	Argument	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353264	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353265	Callee	Z_STR		3351819	0					
ANR	3353266	Identifier	Z_STR		3351819	0					
ANR	3353267	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353268	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353269	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353270	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353271	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353272	ArgumentList	opline		3351819	1					
ANR	3353273	Argument	opline		3351819	0					
ANR	3353274	Identifier	opline		3351819	0					
ANR	3353275	Argument	& c		3351819	1					
ANR	3353276	UnaryOperationExpression	& c		3351819	0					
ANR	3353277	UnaryOperator	&		3351819	0					
ANR	3353278	Identifier	c		3351819	1					
ANR	3353279	Argument	1		3351819	2					
ANR	3353280	PrimaryExpression	1		3351819	0					
ANR	3353281	CompoundStatement		234:89:7450:7450	3351819	1					
ANR	3353282	IfStatement	"if ( ! ctx -> constants || ! zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c ) )"		3351819	0					
ANR	3353283	Condition	"! ctx -> constants || ! zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c )"	275:9:9457:9560	3351819	0	True				
ANR	3353284	OrExpression	"! ctx -> constants || ! zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c )"		3351819	0		||			
ANR	3353285	UnaryOperationExpression	! ctx -> constants		3351819	0					
ANR	3353286	UnaryOperator	!		3351819	0					
ANR	3353287	PtrMemberAccess	ctx -> constants		3351819	1					
ANR	3353288	Identifier	ctx		3351819	0					
ANR	3353289	Identifier	constants		3351819	1					
ANR	3353290	UnaryOperationExpression	"! zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c )"		3351819	1					
ANR	3353291	UnaryOperator	!		3351819	0					
ANR	3353292	CallExpression	"zend_optimizer_get_collected_constant ( ctx -> constants , & ZEND_OP2_LITERAL ( opline ) , & c )"		3351819	1					
ANR	3353293	Callee	zend_optimizer_get_collected_constant		3351819	0					
ANR	3353294	Identifier	zend_optimizer_get_collected_constant		3351819	0					
ANR	3353295	ArgumentList	ctx -> constants		3351819	1					
ANR	3353296	Argument	ctx -> constants		3351819	0					
ANR	3353297	PtrMemberAccess	ctx -> constants		3351819	0					
ANR	3353298	Identifier	ctx		3351819	0					
ANR	3353299	Identifier	constants		3351819	1					
ANR	3353300	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353301	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353302	UnaryOperator	&		3351819	0					
ANR	3353303	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353304	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353305	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353306	ArgumentList	opline		3351819	1					
ANR	3353307	Argument	opline		3351819	0					
ANR	3353308	Identifier	opline		3351819	0					
ANR	3353309	Argument	& c		3351819	2					
ANR	3353310	UnaryOperationExpression	& c		3351819	0					
ANR	3353311	UnaryOperator	&		3351819	0					
ANR	3353312	Identifier	c		3351819	1					
ANR	3353313	CompoundStatement		235:115:7567:7567	3351819	1					
ANR	3353314	BreakStatement	break ;	276:6:9571:9576	3351819	0	True				
ANR	3353315	IfStatement	if ( Z_TYPE ( c ) == IS_CONSTANT_AST )		3351819	3					
ANR	3353316	Condition	Z_TYPE ( c ) == IS_CONSTANT_AST	279:8:9599:9626	3351819	0	True				
ANR	3353317	EqualityExpression	Z_TYPE ( c ) == IS_CONSTANT_AST		3351819	0		==			
ANR	3353318	CallExpression	Z_TYPE ( c )		3351819	0					
ANR	3353319	Callee	Z_TYPE		3351819	0					
ANR	3353320	Identifier	Z_TYPE		3351819	0					
ANR	3353321	ArgumentList	c		3351819	1					
ANR	3353322	Argument	c		3351819	0					
ANR	3353323	Identifier	c		3351819	0					
ANR	3353324	Identifier	IS_CONSTANT_AST		3351819	1					
ANR	3353325	CompoundStatement		239:38:7633:7633	3351819	1					
ANR	3353326	BreakStatement	break ;	280:5:9636:9641	3351819	0	True				
ANR	3353327	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c ) )"		3351819	4					
ANR	3353328	Condition	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c )"	282:8:9657:9725	3351819	0	True				
ANR	3353329	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c )"		3351819	0					
ANR	3353330	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3353331	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3353332	ArgumentList	op_array		3351819	1					
ANR	3353333	Argument	op_array		3351819	0					
ANR	3353334	Identifier	op_array		3351819	0					
ANR	3353335	Argument	opline		3351819	1					
ANR	3353336	Identifier	opline		3351819	0					
ANR	3353337	Argument	IS_TMP_VAR		3351819	2					
ANR	3353338	Identifier	IS_TMP_VAR		3351819	0					
ANR	3353339	Argument	tv		3351819	3					
ANR	3353340	Identifier	tv		3351819	0					
ANR	3353341	Argument	& c		3351819	4					
ANR	3353342	UnaryOperationExpression	& c		3351819	0					
ANR	3353343	UnaryOperator	&		3351819	0					
ANR	3353344	Identifier	c		3351819	1					
ANR	3353345	CompoundStatement		242:79:7732:7732	3351819	1					
ANR	3353346	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	283:5:9735:9774	3351819	0	True				
ANR	3353347	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353348	Callee	literal_dtor		3351819	0					
ANR	3353349	Identifier	literal_dtor		3351819	0					
ANR	3353350	ArgumentList	& ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353351	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353352	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353353	UnaryOperator	&		3351819	0					
ANR	3353354	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353355	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353356	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353357	ArgumentList	opline		3351819	1					
ANR	3353358	Argument	opline		3351819	0					
ANR	3353359	Identifier	opline		3351819	0					
ANR	3353360	ExpressionStatement	MAKE_NOP ( opline )	284:5:9781:9797	3351819	1	True				
ANR	3353361	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3353362	Callee	MAKE_NOP		3351819	0					
ANR	3353363	Identifier	MAKE_NOP		3351819	0					
ANR	3353364	ArgumentList	opline		3351819	1					
ANR	3353365	Argument	opline		3351819	0					
ANR	3353366	Identifier	opline		3351819	0					
ANR	3353367	IfStatement	if ( ZEND_OP1_TYPE ( opline ) != IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING )		3351819	37					
ANR	3353368	Condition	ZEND_OP1_TYPE ( opline ) != IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING	289:7:9842:9972	3351819	0	True				
ANR	3353369	AndExpression	ZEND_OP1_TYPE ( opline ) != IS_UNUSED && ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		3351819	0		&&			
ANR	3353370	EqualityExpression	ZEND_OP1_TYPE ( opline ) != IS_UNUSED		3351819	0		!=			
ANR	3353371	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3353372	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3353373	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3353374	ArgumentList	opline		3351819	1					
ANR	3353375	Argument	opline		3351819	0					
ANR	3353376	Identifier	opline		3351819	0					
ANR	3353377	Identifier	IS_UNUSED		3351819	1					
ANR	3353378	AndExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		3351819	1		&&			
ANR	3353379	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		3351819	0		==			
ANR	3353380	CallExpression	ZEND_OP2_TYPE ( opline )		3351819	0					
ANR	3353381	Callee	ZEND_OP2_TYPE		3351819	0					
ANR	3353382	Identifier	ZEND_OP2_TYPE		3351819	0					
ANR	3353383	ArgumentList	opline		3351819	1					
ANR	3353384	Argument	opline		3351819	0					
ANR	3353385	Identifier	opline		3351819	0					
ANR	3353386	Identifier	IS_CONST		3351819	1					
ANR	3353387	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) == IS_STRING		3351819	1		==			
ANR	3353388	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353389	Callee	Z_TYPE		3351819	0					
ANR	3353390	Identifier	Z_TYPE		3351819	0					
ANR	3353391	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353392	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353393	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353394	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353395	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353396	ArgumentList	opline		3351819	1					
ANR	3353397	Argument	opline		3351819	0					
ANR	3353398	Identifier	opline		3351819	0					
ANR	3353399	Identifier	IS_STRING		3351819	1					
ANR	3353400	CompoundStatement		253:4:7986:8013	3351819	1					
ANR	3353401	IdentifierDeclStatement	zend_class_entry * ce = NULL ;	293:4:9982:10009	3351819	0	True				
ANR	3353402	IdentifierDecl	* ce = NULL		3351819	0					
ANR	3353403	IdentifierDeclType	zend_class_entry *		3351819	0					
ANR	3353404	Identifier	ce		3351819	1					
ANR	3353405	AssignmentExpression	* ce = NULL		3351819	2		=			
ANR	3353406	Identifier	NULL		3351819	0					
ANR	3353407	Identifier	NULL		3351819	1					
ANR	3353408	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING )		3351819	1					
ANR	3353409	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING	295:8:10020:10112	3351819	0	True				
ANR	3353410	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		3351819	0		&&			
ANR	3353411	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		3351819	0		==			
ANR	3353412	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3353413	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3353414	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3353415	ArgumentList	opline		3351819	1					
ANR	3353416	Argument	opline		3351819	0					
ANR	3353417	Identifier	opline		3351819	0					
ANR	3353418	Identifier	IS_CONST		3351819	1					
ANR	3353419	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		3351819	1		==			
ANR	3353420	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3353421	Callee	Z_TYPE		3351819	0					
ANR	3353422	Identifier	Z_TYPE		3351819	0					
ANR	3353423	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3353424	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3353425	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3353426	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3353427	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3353428	ArgumentList	opline		3351819	1					
ANR	3353429	Argument	opline		3351819	0					
ANR	3353430	Identifier	opline		3351819	0					
ANR	3353431	Identifier	IS_STRING		3351819	1					
ANR	3353432	CompoundStatement		256:58:8119:8119	3351819	1					
ANR	3353433	IfStatement	"if ( op_array -> scope && ! strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 ) )"		3351819	0					
ANR	3353434	Condition	"op_array -> scope && ! strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 )"	298:9:10146:10297	3351819	0	True				
ANR	3353435	AndExpression	"op_array -> scope && ! strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 )"		3351819	0		&&			
ANR	3353436	PtrMemberAccess	op_array -> scope		3351819	0					
ANR	3353437	Identifier	op_array		3351819	0					
ANR	3353438	Identifier	scope		3351819	1					
ANR	3353439	UnaryOperationExpression	"! strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 )"		3351819	1					
ANR	3353440	UnaryOperator	!		3351819	0					
ANR	3353441	CallExpression	"strncasecmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ZSTR_VAL ( op_array -> scope -> name ) , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1 )"		3351819	1					
ANR	3353442	Callee	strncasecmp		3351819	0					
ANR	3353443	Identifier	strncasecmp		3351819	0					
ANR	3353444	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		3351819	1					
ANR	3353445	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3353446	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3353447	Callee	Z_STRVAL		3351819	0					
ANR	3353448	Identifier	Z_STRVAL		3351819	0					
ANR	3353449	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3353450	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3353451	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3353452	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3353453	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3353454	ArgumentList	opline		3351819	1					
ANR	3353455	Argument	opline		3351819	0					
ANR	3353456	Identifier	opline		3351819	0					
ANR	3353457	Argument	ZSTR_VAL ( op_array -> scope -> name )		3351819	1					
ANR	3353458	CallExpression	ZSTR_VAL ( op_array -> scope -> name )		3351819	0					
ANR	3353459	Callee	ZSTR_VAL		3351819	0					
ANR	3353460	Identifier	ZSTR_VAL		3351819	0					
ANR	3353461	ArgumentList	op_array -> scope -> name		3351819	1					
ANR	3353462	Argument	op_array -> scope -> name		3351819	0					
ANR	3353463	PtrMemberAccess	op_array -> scope -> name		3351819	0					
ANR	3353464	PtrMemberAccess	op_array -> scope		3351819	0					
ANR	3353465	Identifier	op_array		3351819	0					
ANR	3353466	Identifier	scope		3351819	1					
ANR	3353467	Identifier	name		3351819	1					
ANR	3353468	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1		3351819	2					
ANR	3353469	AdditiveExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) + 1		3351819	0		+			
ANR	3353470	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3353471	Callee	Z_STRLEN		3351819	0					
ANR	3353472	Identifier	Z_STRLEN		3351819	0					
ANR	3353473	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3353474	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3353475	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3353476	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3353477	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3353478	ArgumentList	opline		3351819	1					
ANR	3353479	Argument	opline		3351819	0					
ANR	3353480	Identifier	opline		3351819	0					
ANR	3353481	PrimaryExpression	1		3351819	1					
ANR	3353482	CompoundStatement		260:80:8304:8304	3351819	1					
ANR	3353483	ExpressionStatement	ce = op_array -> scope	301:6:10308:10328	3351819	0	True				
ANR	3353484	AssignmentExpression	ce = op_array -> scope		3351819	0		=			
ANR	3353485	Identifier	ce		3351819	0					
ANR	3353486	PtrMemberAccess	op_array -> scope		3351819	1					
ANR	3353487	Identifier	op_array		3351819	0					
ANR	3353488	Identifier	scope		3351819	1					
ANR	3353489	ElseStatement	else		3351819	0					
ANR	3353490	CompoundStatement		262:12:8346:8346	3351819	0					
ANR	3353491	IfStatement	"if ( ( ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) ) ) == NULL || ( ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT ) || ( ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename ) )"		3351819	0					
ANR	3353492	Condition	"( ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) ) ) == NULL || ( ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT ) || ( ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename )"	303:10:10354:10669	3351819	0	True				
ANR	3353493	OrExpression	"( ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) ) ) == NULL || ( ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT ) || ( ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename )"		3351819	0		||			
ANR	3353494	EqualityExpression	"( ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) ) ) == NULL"		3351819	0		==			
ANR	3353495	AssignmentExpression	"ce = zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) )"		3351819	0		=			
ANR	3353496	Identifier	ce		3351819	0					
ANR	3353497	CallExpression	"zend_hash_find_ptr ( EG ( class_table ) , Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] ) )"		3351819	1					
ANR	3353498	Callee	zend_hash_find_ptr		3351819	0					
ANR	3353499	Identifier	zend_hash_find_ptr		3351819	0					
ANR	3353500	ArgumentList	EG ( class_table )		3351819	1					
ANR	3353501	Argument	EG ( class_table )		3351819	0					
ANR	3353502	CallExpression	EG ( class_table )		3351819	0					
ANR	3353503	Callee	EG		3351819	0					
ANR	3353504	Identifier	EG		3351819	0					
ANR	3353505	ArgumentList	class_table		3351819	1					
ANR	3353506	Argument	class_table		3351819	0					
ANR	3353507	Identifier	class_table		3351819	0					
ANR	3353508	Argument	Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] )		3351819	1					
ANR	3353509	CallExpression	Z_STR ( op_array -> literals [ opline -> op1 . constant + 1 ] )		3351819	0					
ANR	3353510	Callee	Z_STR		3351819	0					
ANR	3353511	Identifier	Z_STR		3351819	0					
ANR	3353512	ArgumentList	op_array -> literals [ opline -> op1 . constant + 1 ]		3351819	1					
ANR	3353513	Argument	op_array -> literals [ opline -> op1 . constant + 1 ]		3351819	0					
ANR	3353514	ArrayIndexing	op_array -> literals [ opline -> op1 . constant + 1 ]		3351819	0					
ANR	3353515	PtrMemberAccess	op_array -> literals		3351819	0					
ANR	3353516	Identifier	op_array		3351819	0					
ANR	3353517	Identifier	literals		3351819	1					
ANR	3353518	AdditiveExpression	opline -> op1 . constant + 1		3351819	1		+			
ANR	3353519	MemberAccess	opline -> op1 . constant		3351819	0					
ANR	3353520	PtrMemberAccess	opline -> op1		3351819	0					
ANR	3353521	Identifier	opline		3351819	0					
ANR	3353522	Identifier	op1		3351819	1					
ANR	3353523	Identifier	constant		3351819	1					
ANR	3353524	PrimaryExpression	1		3351819	1					
ANR	3353525	Identifier	NULL		3351819	1					
ANR	3353526	OrExpression	( ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT ) || ( ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename )		3351819	1		||			
ANR	3353527	AndExpression	ce -> type == ZEND_INTERNAL_CLASS && ce -> info . internal . module -> type != MODULE_PERSISTENT		3351819	0		&&			
ANR	3353528	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		3351819	0		==			
ANR	3353529	PtrMemberAccess	ce -> type		3351819	0					
ANR	3353530	Identifier	ce		3351819	0					
ANR	3353531	Identifier	type		3351819	1					
ANR	3353532	Identifier	ZEND_INTERNAL_CLASS		3351819	1					
ANR	3353533	EqualityExpression	ce -> info . internal . module -> type != MODULE_PERSISTENT		3351819	1		!=			
ANR	3353534	PtrMemberAccess	ce -> info . internal . module -> type		3351819	0					
ANR	3353535	MemberAccess	ce -> info . internal . module		3351819	0					
ANR	3353536	MemberAccess	ce -> info . internal		3351819	0					
ANR	3353537	PtrMemberAccess	ce -> info		3351819	0					
ANR	3353538	Identifier	ce		3351819	0					
ANR	3353539	Identifier	info		3351819	1					
ANR	3353540	Identifier	internal		3351819	1					
ANR	3353541	Identifier	module		3351819	1					
ANR	3353542	Identifier	type		3351819	1					
ANR	3353543	Identifier	MODULE_PERSISTENT		3351819	1					
ANR	3353544	AndExpression	ce -> type == ZEND_USER_CLASS && ZEND_CE_FILENAME ( ce ) != op_array -> filename		3351819	1		&&			
ANR	3353545	EqualityExpression	ce -> type == ZEND_USER_CLASS		3351819	0		==			
ANR	3353546	PtrMemberAccess	ce -> type		3351819	0					
ANR	3353547	Identifier	ce		3351819	0					
ANR	3353548	Identifier	type		3351819	1					
ANR	3353549	Identifier	ZEND_USER_CLASS		3351819	1					
ANR	3353550	EqualityExpression	ZEND_CE_FILENAME ( ce ) != op_array -> filename		3351819	1		!=			
ANR	3353551	CallExpression	ZEND_CE_FILENAME ( ce )		3351819	0					
ANR	3353552	Callee	ZEND_CE_FILENAME		3351819	0					
ANR	3353553	Identifier	ZEND_CE_FILENAME		3351819	0					
ANR	3353554	ArgumentList	ce		3351819	1					
ANR	3353555	Argument	ce		3351819	0					
ANR	3353556	Identifier	ce		3351819	0					
ANR	3353557	PtrMemberAccess	op_array -> filename		3351819	1					
ANR	3353558	Identifier	op_array		3351819	0					
ANR	3353559	Identifier	filename		3351819	1					
ANR	3353560	CompoundStatement		268:54:8676:8676	3351819	1					
ANR	3353561	BreakStatement	break ;	309:7:10681:10686	3351819	0	True				
ANR	3353562	ElseStatement	else		3351819	0					
ANR	3353563	IfStatement	if ( op_array -> scope && ZEND_OP1_TYPE ( opline ) == IS_VAR && ( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var )		3351819	0					
ANR	3353564	Condition	op_array -> scope && ZEND_OP1_TYPE ( opline ) == IS_VAR && ( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var	312:15:10718:11028	3351819	0	True				
ANR	3353565	AndExpression	op_array -> scope && ZEND_OP1_TYPE ( opline ) == IS_VAR && ( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		3351819	0		&&			
ANR	3353566	PtrMemberAccess	op_array -> scope		3351819	0					
ANR	3353567	Identifier	op_array		3351819	0					
ANR	3353568	Identifier	scope		3351819	1					
ANR	3353569	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_VAR && ( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		3351819	1		&&			
ANR	3353570	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_VAR		3351819	0		==			
ANR	3353571	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3353572	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3353573	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3353574	ArgumentList	opline		3351819	1					
ANR	3353575	Argument	opline		3351819	0					
ANR	3353576	Identifier	opline		3351819	0					
ANR	3353577	Identifier	IS_VAR		3351819	1					
ANR	3353578	AndExpression	( opline - 1 ) -> opcode == ZEND_FETCH_CLASS && ( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		3351819	1		&&			
ANR	3353579	EqualityExpression	( opline - 1 ) -> opcode == ZEND_FETCH_CLASS		3351819	0		==			
ANR	3353580	PtrMemberAccess	( opline - 1 ) -> opcode		3351819	0					
ANR	3353581	AdditiveExpression	opline - 1		3351819	0		-			
ANR	3353582	Identifier	opline		3351819	0					
ANR	3353583	PrimaryExpression	1		3351819	1					
ANR	3353584	Identifier	opcode		3351819	1					
ANR	3353585	Identifier	ZEND_FETCH_CLASS		3351819	1					
ANR	3353586	AndExpression	( ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF ) && ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		3351819	1		&&			
ANR	3353587	AndExpression	ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED && ( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF		3351819	0		&&			
ANR	3353588	EqualityExpression	ZEND_OP1_TYPE ( opline - 1 ) == IS_UNUSED		3351819	0		==			
ANR	3353589	CallExpression	ZEND_OP1_TYPE ( opline - 1 )		3351819	0					
ANR	3353590	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3353591	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3353592	ArgumentList	opline - 1		3351819	1					
ANR	3353593	Argument	opline - 1		3351819	0					
ANR	3353594	AdditiveExpression	opline - 1		3351819	0		-			
ANR	3353595	Identifier	opline		3351819	0					
ANR	3353596	PrimaryExpression	1		3351819	1					
ANR	3353597	Identifier	IS_UNUSED		3351819	1					
ANR	3353598	EqualityExpression	( ( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD ) == ZEND_FETCH_CLASS_SELF		3351819	1		==			
ANR	3353599	BitAndExpression	( opline - 1 ) -> extended_value & ~ZEND_FETCH_CLASS_NO_AUTOLOAD		3351819	0		&			
ANR	3353600	PtrMemberAccess	( opline - 1 ) -> extended_value		3351819	0					
ANR	3353601	AdditiveExpression	opline - 1		3351819	0		-			
ANR	3353602	Identifier	opline		3351819	0					
ANR	3353603	PrimaryExpression	1		3351819	1					
ANR	3353604	Identifier	extended_value		3351819	1					
ANR	3353605	Identifier	~ZEND_FETCH_CLASS_NO_AUTOLOAD		3351819	1					
ANR	3353606	Identifier	ZEND_FETCH_CLASS_SELF		3351819	1					
ANR	3353607	EqualityExpression	ZEND_RESULT ( ( opline - 1 ) ) . var == ZEND_OP1 ( opline ) . var		3351819	1		==			
ANR	3353608	MemberAccess	ZEND_RESULT ( ( opline - 1 ) ) . var		3351819	0					
ANR	3353609	CallExpression	ZEND_RESULT ( ( opline - 1 ) )		3351819	0					
ANR	3353610	Callee	ZEND_RESULT		3351819	0					
ANR	3353611	Identifier	ZEND_RESULT		3351819	0					
ANR	3353612	ArgumentList	opline - 1		3351819	1					
ANR	3353613	Argument	opline - 1		3351819	0					
ANR	3353614	AdditiveExpression	opline - 1		3351819	0		-			
ANR	3353615	Identifier	opline		3351819	0					
ANR	3353616	PrimaryExpression	1		3351819	1					
ANR	3353617	Identifier	var		3351819	1					
ANR	3353618	MemberAccess	ZEND_OP1 ( opline ) . var		3351819	1					
ANR	3353619	CallExpression	ZEND_OP1 ( opline )		3351819	0					
ANR	3353620	Callee	ZEND_OP1		3351819	0					
ANR	3353621	Identifier	ZEND_OP1		3351819	0					
ANR	3353622	ArgumentList	opline		3351819	1					
ANR	3353623	Argument	opline		3351819	0					
ANR	3353624	Identifier	opline		3351819	0					
ANR	3353625	Identifier	var		3351819	1					
ANR	3353626	CompoundStatement		277:60:9035:9035	3351819	1					
ANR	3353627	ExpressionStatement	ce = op_array -> scope	319:5:11061:11081	3351819	0	True				
ANR	3353628	AssignmentExpression	ce = op_array -> scope		3351819	0		=			
ANR	3353629	Identifier	ce		3351819	0					
ANR	3353630	PtrMemberAccess	op_array -> scope		3351819	1					
ANR	3353631	Identifier	op_array		3351819	0					
ANR	3353632	Identifier	scope		3351819	1					
ANR	3353633	IfStatement	if ( ce )		3351819	2					
ANR	3353634	Condition	ce	322:8:11098:11099	3351819	0	True				
ANR	3353635	Identifier	ce		3351819	0					
ANR	3353636	CompoundStatement		284:5:9157:9167	3351819	1					
ANR	3353637	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	323:5:11109:11146	3351819	0	True				
ANR	3353638	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3353639	IdentifierDeclType	uint32_t		3351819	0					
ANR	3353640	Identifier	tv		3351819	1					
ANR	3353641	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		3351819	2		=			
ANR	3353642	Identifier	tv		3351819	0					
ANR	3353643	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	1					
ANR	3353644	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3353645	Callee	ZEND_RESULT		3351819	0					
ANR	3353646	Identifier	ZEND_RESULT		3351819	0					
ANR	3353647	ArgumentList	opline		3351819	1					
ANR	3353648	Argument	opline		3351819	0					
ANR	3353649	Identifier	opline		3351819	0					
ANR	3353650	Identifier	var		3351819	1					
ANR	3353651	IdentifierDeclStatement	"zval * c , t ;"	324:5:11153:11163	3351819	1	True				
ANR	3353652	IdentifierDecl	* c		3351819	0					
ANR	3353653	IdentifierDeclType	zval *		3351819	0					
ANR	3353654	Identifier	c		3351819	1					
ANR	3353655	IdentifierDecl	t		3351819	1					
ANR	3353656	IdentifierDeclType	zval		3351819	0					
ANR	3353657	Identifier	t		3351819	1					
ANR	3353658	IfStatement	"if ( ( c = zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) ) ) != NULL )"		3351819	2					
ANR	3353659	Condition	"( c = zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) ) ) != NULL"	326:9:11175:11264	3351819	0	True				
ANR	3353660	EqualityExpression	"( c = zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) ) ) != NULL"		3351819	0		!=			
ANR	3353661	AssignmentExpression	"c = zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )"		3351819	0		=			
ANR	3353662	Identifier	c		3351819	0					
ANR	3353663	CallExpression	"zend_hash_find ( & ce -> constants_table , Z_STR ( ZEND_OP2_LITERAL ( opline ) ) )"		3351819	1					
ANR	3353664	Callee	zend_hash_find		3351819	0					
ANR	3353665	Identifier	zend_hash_find		3351819	0					
ANR	3353666	ArgumentList	& ce -> constants_table		3351819	1					
ANR	3353667	Argument	& ce -> constants_table		3351819	0					
ANR	3353668	UnaryOperationExpression	& ce -> constants_table		3351819	0					
ANR	3353669	UnaryOperator	&		3351819	0					
ANR	3353670	PtrMemberAccess	ce -> constants_table		3351819	1					
ANR	3353671	Identifier	ce		3351819	0					
ANR	3353672	Identifier	constants_table		3351819	1					
ANR	3353673	Argument	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		3351819	1					
ANR	3353674	CallExpression	Z_STR ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353675	Callee	Z_STR		3351819	0					
ANR	3353676	Identifier	Z_STR		3351819	0					
ANR	3353677	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353678	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353679	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353680	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353681	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353682	ArgumentList	opline		3351819	1					
ANR	3353683	Argument	opline		3351819	0					
ANR	3353684	Identifier	opline		3351819	0					
ANR	3353685	Identifier	NULL		3351819	1					
ANR	3353686	CompoundStatement		287:50:9271:9271	3351819	1					
ANR	3353687	ExpressionStatement	ZVAL_DEREF ( c )	328:6:11275:11288	3351819	0	True				
ANR	3353688	CallExpression	ZVAL_DEREF ( c )		3351819	0					
ANR	3353689	Callee	ZVAL_DEREF		3351819	0					
ANR	3353690	Identifier	ZVAL_DEREF		3351819	0					
ANR	3353691	ArgumentList	c		3351819	1					
ANR	3353692	Argument	c		3351819	0					
ANR	3353693	Identifier	c		3351819	0					
ANR	3353694	IfStatement	if ( Z_TYPE_P ( c ) == IS_CONSTANT_AST )		3351819	1					
ANR	3353695	Condition	Z_TYPE_P ( c ) == IS_CONSTANT_AST	329:10:11300:11329	3351819	0	True				
ANR	3353696	EqualityExpression	Z_TYPE_P ( c ) == IS_CONSTANT_AST		3351819	0		==			
ANR	3353697	CallExpression	Z_TYPE_P ( c )		3351819	0					
ANR	3353698	Callee	Z_TYPE_P		3351819	0					
ANR	3353699	Identifier	Z_TYPE_P		3351819	0					
ANR	3353700	ArgumentList	c		3351819	1					
ANR	3353701	Argument	c		3351819	0					
ANR	3353702	Identifier	c		3351819	0					
ANR	3353703	Identifier	IS_CONSTANT_AST		3351819	1					
ANR	3353704	CompoundStatement		289:42:9336:9336	3351819	1					
ANR	3353705	BreakStatement	break ;	330:7:11341:11346	3351819	0	True				
ANR	3353706	IfStatement	if ( ZEND_IS_CONSTANT_TYPE ( Z_TYPE_P ( c ) ) )		3351819	2					
ANR	3353707	Condition	ZEND_IS_CONSTANT_TYPE ( Z_TYPE_P ( c ) )	332:10:11366:11399	3351819	0	True				
ANR	3353708	CallExpression	ZEND_IS_CONSTANT_TYPE ( Z_TYPE_P ( c ) )		3351819	0					
ANR	3353709	Callee	ZEND_IS_CONSTANT_TYPE		3351819	0					
ANR	3353710	Identifier	ZEND_IS_CONSTANT_TYPE		3351819	0					
ANR	3353711	ArgumentList	Z_TYPE_P ( c )		3351819	1					
ANR	3353712	Argument	Z_TYPE_P ( c )		3351819	0					
ANR	3353713	CallExpression	Z_TYPE_P ( c )		3351819	0					
ANR	3353714	Callee	Z_TYPE_P		3351819	0					
ANR	3353715	Identifier	Z_TYPE_P		3351819	0					
ANR	3353716	ArgumentList	c		3351819	1					
ANR	3353717	Argument	c		3351819	0					
ANR	3353718	Identifier	c		3351819	0					
ANR	3353719	CompoundStatement		292:46:9406:9406	3351819	1					
ANR	3353720	IfStatement	"if ( ! zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 ) || ZEND_IS_CONSTANT_TYPE ( Z_TYPE ( t ) ) )"		3351819	0					
ANR	3353721	Condition	"! zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 ) || ZEND_IS_CONSTANT_TYPE ( Z_TYPE ( t ) )"	333:11:11415:11519	3351819	0	True				
ANR	3353722	OrExpression	"! zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 ) || ZEND_IS_CONSTANT_TYPE ( Z_TYPE ( t ) )"		3351819	0		||			
ANR	3353723	UnaryOperationExpression	"! zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 )"		3351819	0					
ANR	3353724	UnaryOperator	!		3351819	0					
ANR	3353725	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR_P ( c ) , & t , 1 )"		3351819	1					
ANR	3353726	Callee	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3353727	Identifier	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3353728	ArgumentList	Z_STR_P ( c )		3351819	1					
ANR	3353729	Argument	Z_STR_P ( c )		3351819	0					
ANR	3353730	CallExpression	Z_STR_P ( c )		3351819	0					
ANR	3353731	Callee	Z_STR_P		3351819	0					
ANR	3353732	Identifier	Z_STR_P		3351819	0					
ANR	3353733	ArgumentList	c		3351819	1					
ANR	3353734	Argument	c		3351819	0					
ANR	3353735	Identifier	c		3351819	0					
ANR	3353736	Argument	& t		3351819	1					
ANR	3353737	UnaryOperationExpression	& t		3351819	0					
ANR	3353738	UnaryOperator	&		3351819	0					
ANR	3353739	Identifier	t		3351819	1					
ANR	3353740	Argument	1		3351819	2					
ANR	3353741	PrimaryExpression	1		3351819	0					
ANR	3353742	CallExpression	ZEND_IS_CONSTANT_TYPE ( Z_TYPE ( t ) )		3351819	1					
ANR	3353743	Callee	ZEND_IS_CONSTANT_TYPE		3351819	0					
ANR	3353744	Identifier	ZEND_IS_CONSTANT_TYPE		3351819	0					
ANR	3353745	ArgumentList	Z_TYPE ( t )		3351819	1					
ANR	3353746	Argument	Z_TYPE ( t )		3351819	0					
ANR	3353747	CallExpression	Z_TYPE ( t )		3351819	0					
ANR	3353748	Callee	Z_TYPE		3351819	0					
ANR	3353749	Identifier	Z_TYPE		3351819	0					
ANR	3353750	ArgumentList	t		3351819	1					
ANR	3353751	Argument	t		3351819	0					
ANR	3353752	Identifier	t		3351819	0					
ANR	3353753	CompoundStatement		294:45:9526:9526	3351819	1					
ANR	3353754	BreakStatement	break ;	335:8:11532:11537	3351819	0	True				
ANR	3353755	ElseStatement	else		3351819	0					
ANR	3353756	CompoundStatement		297:13:9565:9565	3351819	0					
ANR	3353757	ExpressionStatement	"ZVAL_COPY_VALUE ( & t , c )"	338:7:11570:11592	3351819	0	True				
ANR	3353758	CallExpression	"ZVAL_COPY_VALUE ( & t , c )"		3351819	0					
ANR	3353759	Callee	ZVAL_COPY_VALUE		3351819	0					
ANR	3353760	Identifier	ZVAL_COPY_VALUE		3351819	0					
ANR	3353761	ArgumentList	& t		3351819	1					
ANR	3353762	Argument	& t		3351819	0					
ANR	3353763	UnaryOperationExpression	& t		3351819	0					
ANR	3353764	UnaryOperator	&		3351819	0					
ANR	3353765	Identifier	t		3351819	1					
ANR	3353766	Argument	c		3351819	1					
ANR	3353767	Identifier	c		3351819	0					
ANR	3353768	ExpressionStatement	zval_copy_ctor ( & t )	339:7:11601:11619	3351819	1	True				
ANR	3353769	CallExpression	zval_copy_ctor ( & t )		3351819	0					
ANR	3353770	Callee	zval_copy_ctor		3351819	0					
ANR	3353771	Identifier	zval_copy_ctor		3351819	0					
ANR	3353772	ArgumentList	& t		3351819	1					
ANR	3353773	Argument	& t		3351819	0					
ANR	3353774	UnaryOperationExpression	& t		3351819	0					
ANR	3353775	UnaryOperator	&		3351819	0					
ANR	3353776	Identifier	t		3351819	1					
ANR	3353777	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		3351819	3					
ANR	3353778	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	342:10:11640:11672	3351819	0	True				
ANR	3353779	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		3351819	0		==			
ANR	3353780	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3353781	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3353782	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3353783	ArgumentList	opline		3351819	1					
ANR	3353784	Argument	opline		3351819	0					
ANR	3353785	Identifier	opline		3351819	0					
ANR	3353786	Identifier	IS_CONST		3351819	1					
ANR	3353787	CompoundStatement		302:45:9679:9679	3351819	1					
ANR	3353788	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	343:7:11684:11723	3351819	0	True				
ANR	3353789	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3353790	Callee	literal_dtor		3351819	0					
ANR	3353791	Identifier	literal_dtor		3351819	0					
ANR	3353792	ArgumentList	& ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3353793	Argument	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3353794	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3353795	UnaryOperator	&		3351819	0					
ANR	3353796	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3353797	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3353798	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3353799	ArgumentList	opline		3351819	1					
ANR	3353800	Argument	opline		3351819	0					
ANR	3353801	Identifier	opline		3351819	0					
ANR	3353802	ElseStatement	else		3351819	0					
ANR	3353803	CompoundStatement		304:13:9742:9742	3351819	0					
ANR	3353804	ExpressionStatement	MAKE_NOP ( ( opline - 1 ) )	345:7:11747:11769	3351819	0	True				
ANR	3353805	CallExpression	MAKE_NOP ( ( opline - 1 ) )		3351819	0					
ANR	3353806	Callee	MAKE_NOP		3351819	0					
ANR	3353807	Identifier	MAKE_NOP		3351819	0					
ANR	3353808	ArgumentList	opline - 1		3351819	1					
ANR	3353809	Argument	opline - 1		3351819	0					
ANR	3353810	AdditiveExpression	opline - 1		3351819	0		-			
ANR	3353811	Identifier	opline		3351819	0					
ANR	3353812	PrimaryExpression	1		3351819	1					
ANR	3353813	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & t ) )"		3351819	4					
ANR	3353814	Condition	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & t )"	347:10:11789:11857	3351819	0	True				
ANR	3353815	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & t )"		3351819	0					
ANR	3353816	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3353817	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3353818	ArgumentList	op_array		3351819	1					
ANR	3353819	Argument	op_array		3351819	0					
ANR	3353820	Identifier	op_array		3351819	0					
ANR	3353821	Argument	opline		3351819	1					
ANR	3353822	Identifier	opline		3351819	0					
ANR	3353823	Argument	IS_TMP_VAR		3351819	2					
ANR	3353824	Identifier	IS_TMP_VAR		3351819	0					
ANR	3353825	Argument	tv		3351819	3					
ANR	3353826	Identifier	tv		3351819	0					
ANR	3353827	Argument	& t		3351819	4					
ANR	3353828	UnaryOperationExpression	& t		3351819	0					
ANR	3353829	UnaryOperator	&		3351819	0					
ANR	3353830	Identifier	t		3351819	1					
ANR	3353831	CompoundStatement		307:81:9864:9864	3351819	1					
ANR	3353832	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )	348:7:11869:11908	3351819	0	True				
ANR	3353833	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3353834	Callee	literal_dtor		3351819	0					
ANR	3353835	Identifier	literal_dtor		3351819	0					
ANR	3353836	ArgumentList	& ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353837	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353838	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3353839	UnaryOperator	&		3351819	0					
ANR	3353840	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3353841	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3353842	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3353843	ArgumentList	opline		3351819	1					
ANR	3353844	Argument	opline		3351819	0					
ANR	3353845	Identifier	opline		3351819	0					
ANR	3353846	ExpressionStatement	MAKE_NOP ( opline )	349:7:11917:11933	3351819	1	True				
ANR	3353847	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3353848	Callee	MAKE_NOP		3351819	0					
ANR	3353849	Identifier	MAKE_NOP		3351819	0					
ANR	3353850	ArgumentList	opline		3351819	1					
ANR	3353851	Argument	opline		3351819	0					
ANR	3353852	Identifier	opline		3351819	0					
ANR	3353853	BreakStatement	break ;	354:3:11964:11969	3351819	38	True				
ANR	3353854	Label	case ZEND_DO_ICALL :	356:2:11974:11992	3351819	39	True				
ANR	3353855	Identifier	ZEND_DO_ICALL		3351819	0					
ANR	3353856	CompoundStatement		319:3:10075:10102	3351819	40					
ANR	3353857	IdentifierDeclStatement	zend_op * send1_opline = opline - 1 ;	357:3:11999:12033	3351819	0	True				
ANR	3353858	IdentifierDecl	* send1_opline = opline - 1		3351819	0					
ANR	3353859	IdentifierDeclType	zend_op *		3351819	0					
ANR	3353860	Identifier	send1_opline		3351819	1					
ANR	3353861	AssignmentExpression	* send1_opline = opline - 1		3351819	2		=			
ANR	3353862	Identifier	send1_opline		3351819	0					
ANR	3353863	AdditiveExpression	opline - 1		3351819	1		-			
ANR	3353864	Identifier	opline		3351819	0					
ANR	3353865	PrimaryExpression	1		3351819	1					
ANR	3353866	IdentifierDeclStatement	zend_op * send2_opline = NULL ;	358:3:12038:12066	3351819	1	True				
ANR	3353867	IdentifierDecl	* send2_opline = NULL		3351819	0					
ANR	3353868	IdentifierDeclType	zend_op *		3351819	0					
ANR	3353869	Identifier	send2_opline		3351819	1					
ANR	3353870	AssignmentExpression	* send2_opline = NULL		3351819	2		=			
ANR	3353871	Identifier	NULL		3351819	0					
ANR	3353872	Identifier	NULL		3351819	1					
ANR	3353873	IdentifierDeclStatement	zend_op * init_opline = NULL ;	359:3:12071:12098	3351819	2	True				
ANR	3353874	IdentifierDecl	* init_opline = NULL		3351819	0					
ANR	3353875	IdentifierDeclType	zend_op *		3351819	0					
ANR	3353876	Identifier	init_opline		3351819	1					
ANR	3353877	AssignmentExpression	* init_opline = NULL		3351819	2		=			
ANR	3353878	Identifier	NULL		3351819	0					
ANR	3353879	Identifier	NULL		3351819	1					
ANR	3353880	WhileStatement	while ( send1_opline -> opcode == ZEND_NOP )		3351819	3					
ANR	3353881	Condition	send1_opline -> opcode == ZEND_NOP	361:10:12111:12142	3351819	0	True				
ANR	3353882	EqualityExpression	send1_opline -> opcode == ZEND_NOP		3351819	0		==			
ANR	3353883	PtrMemberAccess	send1_opline -> opcode		3351819	0					
ANR	3353884	Identifier	send1_opline		3351819	0					
ANR	3353885	Identifier	opcode		3351819	1					
ANR	3353886	Identifier	ZEND_NOP		3351819	1					
ANR	3353887	CompoundStatement		321:44:10149:10149	3351819	1					
ANR	3353888	ExpressionStatement	send1_opline --	362:4:12151:12165	3351819	0	True				
ANR	3353889	PostIncDecOperationExpression	send1_opline --		3351819	0					
ANR	3353890	Identifier	send1_opline		3351819	0					
ANR	3353891	IncDec	--		3351819	1					
ANR	3353892	IfStatement	if ( send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST )		3351819	4					
ANR	3353893	Condition	send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST	364:7:12179:12265	3351819	0	True				
ANR	3353894	OrExpression	send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST		3351819	0		||			
ANR	3353895	EqualityExpression	send1_opline -> opcode != ZEND_SEND_VAL		3351819	0		!=			
ANR	3353896	PtrMemberAccess	send1_opline -> opcode		3351819	0					
ANR	3353897	Identifier	send1_opline		3351819	0					
ANR	3353898	Identifier	opcode		3351819	1					
ANR	3353899	Identifier	ZEND_SEND_VAL		3351819	1					
ANR	3353900	EqualityExpression	ZEND_OP1_TYPE ( send1_opline ) != IS_CONST		3351819	1		!=			
ANR	3353901	CallExpression	ZEND_OP1_TYPE ( send1_opline )		3351819	0					
ANR	3353902	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3353903	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3353904	ArgumentList	send1_opline		3351819	1					
ANR	3353905	Argument	send1_opline		3351819	0					
ANR	3353906	Identifier	send1_opline		3351819	0					
ANR	3353907	Identifier	IS_CONST		3351819	1					
ANR	3353908	CompoundStatement		325:48:10272:10272	3351819	1					
ANR	3353909	ExpressionStatement	collect_constants = 0	367:4:12337:12358	3351819	0	True				
ANR	3353910	AssignmentExpression	collect_constants = 0		3351819	0		=			
ANR	3353911	Identifier	collect_constants		3351819	0					
ANR	3353912	PrimaryExpression	0		3351819	1					
ANR	3353913	BreakStatement	break ;	368:4:12364:12369	3351819	1	True				
ANR	3353914	IfStatement	if ( send1_opline -> op2 . num == 2 )		3351819	5					
ANR	3353915	Condition	send1_opline -> op2 . num == 2	370:7:12383:12408	3351819	0	True				
ANR	3353916	EqualityExpression	send1_opline -> op2 . num == 2		3351819	0		==			
ANR	3353917	MemberAccess	send1_opline -> op2 . num		3351819	0					
ANR	3353918	PtrMemberAccess	send1_opline -> op2		3351819	0					
ANR	3353919	Identifier	send1_opline		3351819	0					
ANR	3353920	Identifier	op2		3351819	1					
ANR	3353921	Identifier	num		3351819	1					
ANR	3353922	PrimaryExpression	2		3351819	1					
ANR	3353923	CompoundStatement		330:35:10415:10415	3351819	1					
ANR	3353924	ExpressionStatement	send2_opline = send1_opline	371:4:12417:12444	3351819	0	True				
ANR	3353925	AssignmentExpression	send2_opline = send1_opline		3351819	0		=			
ANR	3353926	Identifier	send2_opline		3351819	0					
ANR	3353927	Identifier	send1_opline		3351819	1					
ANR	3353928	ExpressionStatement	send1_opline --	372:4:12450:12464	3351819	1	True				
ANR	3353929	PostIncDecOperationExpression	send1_opline --		3351819	0					
ANR	3353930	Identifier	send1_opline		3351819	0					
ANR	3353931	IncDec	--		3351819	1					
ANR	3353932	WhileStatement	while ( send1_opline -> opcode == ZEND_NOP )		3351819	2					
ANR	3353933	Condition	send1_opline -> opcode == ZEND_NOP	373:11:12477:12508	3351819	0	True				
ANR	3353934	EqualityExpression	send1_opline -> opcode == ZEND_NOP		3351819	0		==			
ANR	3353935	PtrMemberAccess	send1_opline -> opcode		3351819	0					
ANR	3353936	Identifier	send1_opline		3351819	0					
ANR	3353937	Identifier	opcode		3351819	1					
ANR	3353938	Identifier	ZEND_NOP		3351819	1					
ANR	3353939	CompoundStatement		333:45:10515:10515	3351819	1					
ANR	3353940	ExpressionStatement	send1_opline --	374:5:12518:12532	3351819	0	True				
ANR	3353941	PostIncDecOperationExpression	send1_opline --		3351819	0					
ANR	3353942	Identifier	send1_opline		3351819	0					
ANR	3353943	IncDec	--		3351819	1					
ANR	3353944	IfStatement	if ( send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST )		3351819	3					
ANR	3353945	Condition	send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST	376:8:12548:12635	3351819	0	True				
ANR	3353946	OrExpression	send1_opline -> opcode != ZEND_SEND_VAL || ZEND_OP1_TYPE ( send1_opline ) != IS_CONST		3351819	0		||			
ANR	3353947	EqualityExpression	send1_opline -> opcode != ZEND_SEND_VAL		3351819	0		!=			
ANR	3353948	PtrMemberAccess	send1_opline -> opcode		3351819	0					
ANR	3353949	Identifier	send1_opline		3351819	0					
ANR	3353950	Identifier	opcode		3351819	1					
ANR	3353951	Identifier	ZEND_SEND_VAL		3351819	1					
ANR	3353952	EqualityExpression	ZEND_OP1_TYPE ( send1_opline ) != IS_CONST		3351819	1		!=			
ANR	3353953	CallExpression	ZEND_OP1_TYPE ( send1_opline )		3351819	0					
ANR	3353954	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3353955	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3353956	ArgumentList	send1_opline		3351819	1					
ANR	3353957	Argument	send1_opline		3351819	0					
ANR	3353958	Identifier	send1_opline		3351819	0					
ANR	3353959	Identifier	IS_CONST		3351819	1					
ANR	3353960	CompoundStatement		337:49:10642:10642	3351819	1					
ANR	3353961	ExpressionStatement	collect_constants = 0	379:5:12709:12730	3351819	0	True				
ANR	3353962	AssignmentExpression	collect_constants = 0		3351819	0		=			
ANR	3353963	Identifier	collect_constants		3351819	0					
ANR	3353964	PrimaryExpression	0		3351819	1					
ANR	3353965	BreakStatement	break ;	380:5:12737:12742	3351819	1	True				
ANR	3353966	ExpressionStatement	init_opline = send1_opline - 1	383:3:12758:12788	3351819	6	True				
ANR	3353967	AssignmentExpression	init_opline = send1_opline - 1		3351819	0		=			
ANR	3353968	Identifier	init_opline		3351819	0					
ANR	3353969	AdditiveExpression	send1_opline - 1		3351819	1		-			
ANR	3353970	Identifier	send1_opline		3351819	0					
ANR	3353971	PrimaryExpression	1		3351819	1					
ANR	3353972	WhileStatement	while ( init_opline -> opcode == ZEND_NOP )		3351819	7					
ANR	3353973	Condition	init_opline -> opcode == ZEND_NOP	384:10:12800:12830	3351819	0	True				
ANR	3353974	EqualityExpression	init_opline -> opcode == ZEND_NOP		3351819	0		==			
ANR	3353975	PtrMemberAccess	init_opline -> opcode		3351819	0					
ANR	3353976	Identifier	init_opline		3351819	0					
ANR	3353977	Identifier	opcode		3351819	1					
ANR	3353978	Identifier	ZEND_NOP		3351819	1					
ANR	3353979	CompoundStatement		344:43:10837:10837	3351819	1					
ANR	3353980	ExpressionStatement	init_opline --	385:4:12839:12852	3351819	0	True				
ANR	3353981	PostIncDecOperationExpression	init_opline --		3351819	0					
ANR	3353982	Identifier	init_opline		3351819	0					
ANR	3353983	IncDec	--		3351819	1					
ANR	3353984	IfStatement	if ( init_opline -> opcode != ZEND_INIT_FCALL || ZEND_OP2_TYPE ( init_opline ) != IS_CONST || Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING )		3351819	8					
ANR	3353985	Condition	init_opline -> opcode != ZEND_INIT_FCALL || ZEND_OP2_TYPE ( init_opline ) != IS_CONST || Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING	387:7:12866:13013	3351819	0	True				
ANR	3353986	OrExpression	init_opline -> opcode != ZEND_INIT_FCALL || ZEND_OP2_TYPE ( init_opline ) != IS_CONST || Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING		3351819	0		||			
ANR	3353987	EqualityExpression	init_opline -> opcode != ZEND_INIT_FCALL		3351819	0		!=			
ANR	3353988	PtrMemberAccess	init_opline -> opcode		3351819	0					
ANR	3353989	Identifier	init_opline		3351819	0					
ANR	3353990	Identifier	opcode		3351819	1					
ANR	3353991	Identifier	ZEND_INIT_FCALL		3351819	1					
ANR	3353992	OrExpression	ZEND_OP2_TYPE ( init_opline ) != IS_CONST || Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING		3351819	1		||			
ANR	3353993	EqualityExpression	ZEND_OP2_TYPE ( init_opline ) != IS_CONST		3351819	0		!=			
ANR	3353994	CallExpression	ZEND_OP2_TYPE ( init_opline )		3351819	0					
ANR	3353995	Callee	ZEND_OP2_TYPE		3351819	0					
ANR	3353996	Identifier	ZEND_OP2_TYPE		3351819	0					
ANR	3353997	ArgumentList	init_opline		3351819	1					
ANR	3353998	Argument	init_opline		3351819	0					
ANR	3353999	Identifier	init_opline		3351819	0					
ANR	3354000	Identifier	IS_CONST		3351819	1					
ANR	3354001	EqualityExpression	Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) ) != IS_STRING		3351819	1		!=			
ANR	3354002	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354003	Callee	Z_TYPE		3351819	0					
ANR	3354004	Identifier	Z_TYPE		3351819	0					
ANR	3354005	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354006	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354007	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354008	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354009	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354010	ArgumentList	init_opline		3351819	1					
ANR	3354011	Argument	init_opline		3351819	0					
ANR	3354012	Identifier	init_opline		3351819	0					
ANR	3354013	Identifier	IS_STRING		3351819	1					
ANR	3354014	CompoundStatement		349:59:11020:11020	3351819	1					
ANR	3354015	ExpressionStatement	collect_constants = 0	391:4:13085:13106	3351819	0	True				
ANR	3354016	AssignmentExpression	collect_constants = 0		3351819	0		=			
ANR	3354017	Identifier	collect_constants		3351819	0					
ANR	3354018	PrimaryExpression	0		3351819	1					
ANR	3354019	BreakStatement	break ;	392:4:13112:13117	3351819	1	True				
ANR	3354020	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""define"" ) - 1 && zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 ) == 0 )"		3351819	9					
ANR	3354021	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""define"" ) - 1 && zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 ) == 0"	396:7:13165:13375	3351819	0	True				
ANR	3354022	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""define"" ) - 1 && zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 ) == 0"		3351819	0		&&			
ANR	3354023	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""define"" ) - 1"		3351819	0		==			
ANR	3354024	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354025	Callee	Z_STRLEN		3351819	0					
ANR	3354026	Identifier	Z_STRLEN		3351819	0					
ANR	3354027	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354028	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354029	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354030	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354031	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354032	ArgumentList	init_opline		3351819	1					
ANR	3354033	Argument	init_opline		3351819	0					
ANR	3354034	Identifier	init_opline		3351819	0					
ANR	3354035	AdditiveExpression	"sizeof ( ""define"" ) - 1"		3351819	1		-			
ANR	3354036	SizeofExpression	"sizeof ( ""define"" )"		3351819	0					
ANR	3354037	Sizeof	sizeof		3351819	0					
ANR	3354038	PrimaryExpression	"""define"""		3351819	1					
ANR	3354039	PrimaryExpression	1		3351819	1					
ANR	3354040	EqualityExpression	"zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 ) == 0"		3351819	1		==			
ANR	3354041	CallExpression	"zend_binary_strcasecmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) , ""define"" , sizeof ( ""define"" ) - 1 )"		3351819	0					
ANR	3354042	Callee	zend_binary_strcasecmp		3351819	0					
ANR	3354043	Identifier	zend_binary_strcasecmp		3351819	0					
ANR	3354044	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	1					
ANR	3354045	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354046	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354047	Callee	Z_STRVAL		3351819	0					
ANR	3354048	Identifier	Z_STRVAL		3351819	0					
ANR	3354049	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354050	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354051	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354052	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354053	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354054	ArgumentList	init_opline		3351819	1					
ANR	3354055	Argument	init_opline		3351819	0					
ANR	3354056	Identifier	init_opline		3351819	0					
ANR	3354057	Argument	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	1					
ANR	3354058	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354059	Callee	Z_STRLEN		3351819	0					
ANR	3354060	Identifier	Z_STRLEN		3351819	0					
ANR	3354061	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354062	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354063	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354064	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354065	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354066	ArgumentList	init_opline		3351819	1					
ANR	3354067	Argument	init_opline		3351819	0					
ANR	3354068	Identifier	init_opline		3351819	0					
ANR	3354069	Argument	"""define"""		3351819	2					
ANR	3354070	PrimaryExpression	"""define"""		3351819	0					
ANR	3354071	Argument	"sizeof ( ""define"" ) - 1"		3351819	3					
ANR	3354072	AdditiveExpression	"sizeof ( ""define"" ) - 1"		3351819	0		-			
ANR	3354073	SizeofExpression	"sizeof ( ""define"" )"		3351819	0					
ANR	3354074	Sizeof	sizeof		3351819	0					
ANR	3354075	PrimaryExpression	"""define"""		3351819	1					
ANR	3354076	PrimaryExpression	1		3351819	1					
ANR	3354077	PrimaryExpression	0		3351819	1					
ANR	3354078	CompoundStatement		357:148:11382:11382	3351819	1					
ANR	3354079	IfStatement	if ( Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING && send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING )		3351819	0					
ANR	3354080	Condition	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING && send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING	399:8:13389:13526	3351819	0	True				
ANR	3354081	AndExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING && send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING		3351819	0		&&			
ANR	3354082	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING		3351819	0		==			
ANR	3354083	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354084	Callee	Z_TYPE		3351819	0					
ANR	3354085	Identifier	Z_TYPE		3351819	0					
ANR	3354086	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354087	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354088	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354089	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354090	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354091	ArgumentList	send1_opline		3351819	1					
ANR	3354092	Argument	send1_opline		3351819	0					
ANR	3354093	Identifier	send1_opline		3351819	0					
ANR	3354094	Identifier	IS_STRING		3351819	1					
ANR	3354095	AndExpression	send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING		3351819	1		&&			
ANR	3354096	Identifier	send2_opline		3351819	0					
ANR	3354097	RelationalExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) ) <= IS_STRING		3351819	1		<=			
ANR	3354098	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send2_opline ) )		3351819	0					
ANR	3354099	Callee	Z_TYPE		3351819	0					
ANR	3354100	Identifier	Z_TYPE		3351819	0					
ANR	3354101	ArgumentList	ZEND_OP1_LITERAL ( send2_opline )		3351819	1					
ANR	3354102	Argument	ZEND_OP1_LITERAL ( send2_opline )		3351819	0					
ANR	3354103	CallExpression	ZEND_OP1_LITERAL ( send2_opline )		3351819	0					
ANR	3354104	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354105	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354106	ArgumentList	send2_opline		3351819	1					
ANR	3354107	Argument	send2_opline		3351819	0					
ANR	3354108	Identifier	send2_opline		3351819	0					
ANR	3354109	Identifier	IS_STRING		3351819	1					
ANR	3354110	CompoundStatement		361:61:11533:11533	3351819	1					
ANR	3354111	IfStatement	if ( collect_constants )		3351819	0					
ANR	3354112	Condition	collect_constants	403:9:13541:13557	3351819	0	True				
ANR	3354113	Identifier	collect_constants		3351819	0					
ANR	3354114	CompoundStatement		363:28:11564:11564	3351819	1					
ANR	3354115	ExpressionStatement	"zend_optimizer_collect_constant ( ctx , & ZEND_OP1_LITERAL ( send1_opline ) , & ZEND_OP1_LITERAL ( send2_opline ) )"	404:6:13568:13670	3351819	0	True				
ANR	3354116	CallExpression	"zend_optimizer_collect_constant ( ctx , & ZEND_OP1_LITERAL ( send1_opline ) , & ZEND_OP1_LITERAL ( send2_opline ) )"		3351819	0					
ANR	3354117	Callee	zend_optimizer_collect_constant		3351819	0					
ANR	3354118	Identifier	zend_optimizer_collect_constant		3351819	0					
ANR	3354119	ArgumentList	ctx		3351819	1					
ANR	3354120	Argument	ctx		3351819	0					
ANR	3354121	Identifier	ctx		3351819	0					
ANR	3354122	Argument	& ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354123	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354124	UnaryOperator	&		3351819	0					
ANR	3354125	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354126	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354127	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354128	ArgumentList	send1_opline		3351819	1					
ANR	3354129	Argument	send1_opline		3351819	0					
ANR	3354130	Identifier	send1_opline		3351819	0					
ANR	3354131	Argument	& ZEND_OP1_LITERAL ( send2_opline )		3351819	2					
ANR	3354132	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send2_opline )		3351819	0					
ANR	3354133	UnaryOperator	&		3351819	0					
ANR	3354134	CallExpression	ZEND_OP1_LITERAL ( send2_opline )		3351819	1					
ANR	3354135	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354136	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354137	ArgumentList	send2_opline		3351819	1					
ANR	3354138	Argument	send2_opline		3351819	0					
ANR	3354139	Identifier	send2_opline		3351819	0					
ANR	3354140	IfStatement	"if ( RESULT_UNUSED ( opline ) && ! zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) ) )"		3351819	1					
ANR	3354141	Condition	"RESULT_UNUSED ( opline ) && ! zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"	407:9:13689:13886	3351819	0	True				
ANR	3354142	AndExpression	"RESULT_UNUSED ( opline ) && ! zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		3351819	0		&&			
ANR	3354143	CallExpression	RESULT_UNUSED ( opline )		3351819	0					
ANR	3354144	Callee	RESULT_UNUSED		3351819	0					
ANR	3354145	Identifier	RESULT_UNUSED		3351819	0					
ANR	3354146	ArgumentList	opline		3351819	1					
ANR	3354147	Argument	opline		3351819	0					
ANR	3354148	Identifier	opline		3351819	0					
ANR	3354149	UnaryOperationExpression	"! zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		3351819	1					
ANR	3354150	UnaryOperator	!		3351819	0					
ANR	3354151	CallExpression	"zend_memnstr ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , ""::"" , sizeof ( ""::"" ) - 1 , Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		3351819	1					
ANR	3354152	Callee	zend_memnstr		3351819	0					
ANR	3354153	Identifier	zend_memnstr		3351819	0					
ANR	3354154	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3354155	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354156	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354157	Callee	Z_STRVAL		3351819	0					
ANR	3354158	Identifier	Z_STRVAL		3351819	0					
ANR	3354159	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354160	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354161	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354162	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354163	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354164	ArgumentList	send1_opline		3351819	1					
ANR	3354165	Argument	send1_opline		3351819	0					
ANR	3354166	Identifier	send1_opline		3351819	0					
ANR	3354167	Argument	"""::"""		3351819	1					
ANR	3354168	PrimaryExpression	"""::"""		3351819	0					
ANR	3354169	Argument	"sizeof ( ""::"" ) - 1"		3351819	2					
ANR	3354170	AdditiveExpression	"sizeof ( ""::"" ) - 1"		3351819	0		-			
ANR	3354171	SizeofExpression	"sizeof ( ""::"" )"		3351819	0					
ANR	3354172	Sizeof	sizeof		3351819	0					
ANR	3354173	PrimaryExpression	"""::"""		3351819	1					
ANR	3354174	PrimaryExpression	1		3351819	1					
ANR	3354175	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	3					
ANR	3354176	AdditiveExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) + Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0		+			
ANR	3354177	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354178	Callee	Z_STRVAL		3351819	0					
ANR	3354179	Identifier	Z_STRVAL		3351819	0					
ANR	3354180	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354181	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354182	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354183	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354184	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354185	ArgumentList	send1_opline		3351819	1					
ANR	3354186	Argument	send1_opline		3351819	0					
ANR	3354187	Identifier	send1_opline		3351819	0					
ANR	3354188	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3354189	Callee	Z_STRLEN		3351819	0					
ANR	3354190	Identifier	Z_STRLEN		3351819	0					
ANR	3354191	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354192	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354193	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354194	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354195	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354196	ArgumentList	send1_opline		3351819	1					
ANR	3354197	Argument	send1_opline		3351819	0					
ANR	3354198	Identifier	send1_opline		3351819	0					
ANR	3354199	CompoundStatement		368:175:11893:11893	3351819	1					
ANR	3354200	ExpressionStatement	opline -> opcode = ZEND_DECLARE_CONST	410:6:13898:13933	3351819	0	True				
ANR	3354201	AssignmentExpression	opline -> opcode = ZEND_DECLARE_CONST		3351819	0		=			
ANR	3354202	PtrMemberAccess	opline -> opcode		3351819	0					
ANR	3354203	Identifier	opline		3351819	0					
ANR	3354204	Identifier	opcode		3351819	1					
ANR	3354205	Identifier	ZEND_DECLARE_CONST		3351819	1					
ANR	3354206	ExpressionStatement	opline -> op1_type = IS_CONST	411:6:13941:13968	3351819	1	True				
ANR	3354207	AssignmentExpression	opline -> op1_type = IS_CONST		3351819	0		=			
ANR	3354208	PtrMemberAccess	opline -> op1_type		3351819	0					
ANR	3354209	Identifier	opline		3351819	0					
ANR	3354210	Identifier	op1_type		3351819	1					
ANR	3354211	Identifier	IS_CONST		3351819	1					
ANR	3354212	ExpressionStatement	opline -> op2_type = IS_CONST	412:6:13976:14003	3351819	2	True				
ANR	3354213	AssignmentExpression	opline -> op2_type = IS_CONST		3351819	0		=			
ANR	3354214	PtrMemberAccess	opline -> op2_type		3351819	0					
ANR	3354215	Identifier	opline		3351819	0					
ANR	3354216	Identifier	op2_type		3351819	1					
ANR	3354217	Identifier	IS_CONST		3351819	1					
ANR	3354218	ExpressionStatement	opline -> result_type = IS_UNUSED	413:6:14011:14042	3351819	3	True				
ANR	3354219	AssignmentExpression	opline -> result_type = IS_UNUSED		3351819	0		=			
ANR	3354220	PtrMemberAccess	opline -> result_type		3351819	0					
ANR	3354221	Identifier	opline		3351819	0					
ANR	3354222	Identifier	result_type		3351819	1					
ANR	3354223	Identifier	IS_UNUSED		3351819	1					
ANR	3354224	ExpressionStatement	opline -> op1 . constant = send1_opline -> op1 . constant	414:6:14050:14099	3351819	4	True				
ANR	3354225	AssignmentExpression	opline -> op1 . constant = send1_opline -> op1 . constant		3351819	0		=			
ANR	3354226	MemberAccess	opline -> op1 . constant		3351819	0					
ANR	3354227	PtrMemberAccess	opline -> op1		3351819	0					
ANR	3354228	Identifier	opline		3351819	0					
ANR	3354229	Identifier	op1		3351819	1					
ANR	3354230	Identifier	constant		3351819	1					
ANR	3354231	MemberAccess	send1_opline -> op1 . constant		3351819	1					
ANR	3354232	PtrMemberAccess	send1_opline -> op1		3351819	0					
ANR	3354233	Identifier	send1_opline		3351819	0					
ANR	3354234	Identifier	op1		3351819	1					
ANR	3354235	Identifier	constant		3351819	1					
ANR	3354236	ExpressionStatement	opline -> op2 . constant = send2_opline -> op1 . constant	415:6:14107:14156	3351819	5	True				
ANR	3354237	AssignmentExpression	opline -> op2 . constant = send2_opline -> op1 . constant		3351819	0		=			
ANR	3354238	MemberAccess	opline -> op2 . constant		3351819	0					
ANR	3354239	PtrMemberAccess	opline -> op2		3351819	0					
ANR	3354240	Identifier	opline		3351819	0					
ANR	3354241	Identifier	op2		3351819	1					
ANR	3354242	Identifier	constant		3351819	1					
ANR	3354243	MemberAccess	send2_opline -> op1 . constant		3351819	1					
ANR	3354244	PtrMemberAccess	send2_opline -> op1		3351819	0					
ANR	3354245	Identifier	send2_opline		3351819	0					
ANR	3354246	Identifier	op1		3351819	1					
ANR	3354247	Identifier	constant		3351819	1					
ANR	3354248	ExpressionStatement	opline -> result . num = 0	416:6:14164:14186	3351819	6	True				
ANR	3354249	AssignmentExpression	opline -> result . num = 0		3351819	0		=			
ANR	3354250	MemberAccess	opline -> result . num		3351819	0					
ANR	3354251	PtrMemberAccess	opline -> result		3351819	0					
ANR	3354252	Identifier	opline		3351819	0					
ANR	3354253	Identifier	result		3351819	1					
ANR	3354254	Identifier	num		3351819	1					
ANR	3354255	PrimaryExpression	0		3351819	1					
ANR	3354256	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	418:6:14195:14239	3351819	7	True				
ANR	3354257	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354258	Callee	literal_dtor		3351819	0					
ANR	3354259	Identifier	literal_dtor		3351819	0					
ANR	3354260	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354261	Argument	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354262	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354263	UnaryOperator	&		3351819	0					
ANR	3354264	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354265	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354266	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354267	ArgumentList	init_opline		3351819	1					
ANR	3354268	Argument	init_opline		3351819	0					
ANR	3354269	Identifier	init_opline		3351819	0					
ANR	3354270	ExpressionStatement	MAKE_NOP ( init_opline )	419:6:14247:14268	3351819	8	True				
ANR	3354271	CallExpression	MAKE_NOP ( init_opline )		3351819	0					
ANR	3354272	Callee	MAKE_NOP		3351819	0					
ANR	3354273	Identifier	MAKE_NOP		3351819	0					
ANR	3354274	ArgumentList	init_opline		3351819	1					
ANR	3354275	Argument	init_opline		3351819	0					
ANR	3354276	Identifier	init_opline		3351819	0					
ANR	3354277	ExpressionStatement	MAKE_NOP ( send1_opline )	420:6:14276:14298	3351819	9	True				
ANR	3354278	CallExpression	MAKE_NOP ( send1_opline )		3351819	0					
ANR	3354279	Callee	MAKE_NOP		3351819	0					
ANR	3354280	Identifier	MAKE_NOP		3351819	0					
ANR	3354281	ArgumentList	send1_opline		3351819	1					
ANR	3354282	Argument	send1_opline		3351819	0					
ANR	3354283	Identifier	send1_opline		3351819	0					
ANR	3354284	ExpressionStatement	MAKE_NOP ( send2_opline )	421:6:14306:14328	3351819	10	True				
ANR	3354285	CallExpression	MAKE_NOP ( send2_opline )		3351819	0					
ANR	3354286	Callee	MAKE_NOP		3351819	0					
ANR	3354287	Identifier	MAKE_NOP		3351819	0					
ANR	3354288	ArgumentList	send2_opline		3351819	1					
ANR	3354289	Argument	send2_opline		3351819	0					
ANR	3354290	Identifier	send2_opline		3351819	0					
ANR	3354291	BreakStatement	break ;	423:5:14342:14347	3351819	2	True				
ANR	3354292	IfStatement	if ( ! send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING )		3351819	10					
ANR	3354293	Condition	! send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING	434:7:14520:14594	3351819	0	True				
ANR	3354294	AndExpression	! send2_opline && Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING		3351819	0		&&			
ANR	3354295	UnaryOperationExpression	! send2_opline		3351819	0					
ANR	3354296	UnaryOperator	!		3351819	0					
ANR	3354297	Identifier	send2_opline		3351819	1					
ANR	3354298	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) ) == IS_STRING		3351819	1		==			
ANR	3354299	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354300	Callee	Z_TYPE		3351819	0					
ANR	3354301	Identifier	Z_TYPE		3351819	0					
ANR	3354302	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354303	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354304	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354305	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354306	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354307	ArgumentList	send1_opline		3351819	1					
ANR	3354308	Argument	send1_opline		3351819	0					
ANR	3354309	Identifier	send1_opline		3351819	0					
ANR	3354310	Identifier	IS_STRING		3351819	1					
ANR	3354311	CompoundStatement		395:60:12601:12601	3351819	1					
ANR	3354312	IfStatement	"if ( ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) ) || ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) ) )"		3351819	0					
ANR	3354313	Condition	"( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) ) || ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) )"	436:8:14607:15141	3351819	0	True				
ANR	3354314	OrExpression	"( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) ) || ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 ) )"		3351819	0		||			
ANR	3354315	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		3351819	0		&&			
ANR	3354316	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""function_exists"" ) - 1"		3351819	0		==			
ANR	3354317	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354318	Callee	Z_STRLEN		3351819	0					
ANR	3354319	Identifier	Z_STRLEN		3351819	0					
ANR	3354320	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354321	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354322	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354323	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354324	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354325	ArgumentList	init_opline		3351819	1					
ANR	3354326	Argument	init_opline		3351819	0					
ANR	3354327	Identifier	init_opline		3351819	0					
ANR	3354328	AdditiveExpression	"sizeof ( ""function_exists"" ) - 1"		3351819	1		-			
ANR	3354329	SizeofExpression	"sizeof ( ""function_exists"" )"		3351819	0					
ANR	3354330	Sizeof	sizeof		3351819	0					
ANR	3354331	PrimaryExpression	"""function_exists"""		3351819	1					
ANR	3354332	PrimaryExpression	1		3351819	1					
ANR	3354333	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		3351819	1		&&			
ANR	3354334	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		3351819	0					
ANR	3354335	UnaryOperator	!		3351819	0					
ANR	3354336	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		3351819	1					
ANR	3354337	Callee	memcmp		3351819	0					
ANR	3354338	Identifier	memcmp		3351819	0					
ANR	3354339	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	1					
ANR	3354340	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354341	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354342	Callee	Z_STRVAL		3351819	0					
ANR	3354343	Identifier	Z_STRVAL		3351819	0					
ANR	3354344	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354345	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354346	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354347	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354348	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354349	ArgumentList	init_opline		3351819	1					
ANR	3354350	Argument	init_opline		3351819	0					
ANR	3354351	Identifier	init_opline		3351819	0					
ANR	3354352	Argument	"""function_exists"""		3351819	1					
ANR	3354353	PrimaryExpression	"""function_exists"""		3351819	0					
ANR	3354354	Argument	"sizeof ( ""function_exists"" ) - 1"		3351819	2					
ANR	3354355	AdditiveExpression	"sizeof ( ""function_exists"" ) - 1"		3351819	0		-			
ANR	3354356	SizeofExpression	"sizeof ( ""function_exists"" )"		3351819	0					
ANR	3354357	Sizeof	sizeof		3351819	0					
ANR	3354358	PrimaryExpression	"""function_exists"""		3351819	1					
ANR	3354359	PrimaryExpression	1		3351819	1					
ANR	3354360	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		3351819	1					
ANR	3354361	UnaryOperator	!		3351819	0					
ANR	3354362	CallExpression	"zend_optimizer_is_disabled_func ( ""function_exists"" , sizeof ( ""function_exists"" ) - 1 )"		3351819	1					
ANR	3354363	Callee	zend_optimizer_is_disabled_func		3351819	0					
ANR	3354364	Identifier	zend_optimizer_is_disabled_func		3351819	0					
ANR	3354365	ArgumentList	"""function_exists"""		3351819	1					
ANR	3354366	Argument	"""function_exists"""		3351819	0					
ANR	3354367	PrimaryExpression	"""function_exists"""		3351819	0					
ANR	3354368	Argument	"sizeof ( ""function_exists"" ) - 1"		3351819	1					
ANR	3354369	AdditiveExpression	"sizeof ( ""function_exists"" ) - 1"		3351819	0		-			
ANR	3354370	SizeofExpression	"sizeof ( ""function_exists"" )"		3351819	0					
ANR	3354371	Sizeof	sizeof		3351819	0					
ANR	3354372	PrimaryExpression	"""function_exists"""		3351819	1					
ANR	3354373	PrimaryExpression	1		3351819	1					
ANR	3354374	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 )"		3351819	1		&&			
ANR	3354375	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1"		3351819	0		==			
ANR	3354376	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354377	Callee	Z_STRLEN		3351819	0					
ANR	3354378	Identifier	Z_STRLEN		3351819	0					
ANR	3354379	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354380	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354381	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354382	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354383	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354384	ArgumentList	init_opline		3351819	1					
ANR	3354385	Argument	init_opline		3351819	0					
ANR	3354386	Identifier	init_opline		3351819	0					
ANR	3354387	AdditiveExpression	"sizeof ( ""is_callable"" ) - 1"		3351819	1		-			
ANR	3354388	SizeofExpression	"sizeof ( ""is_callable"" )"		3351819	0					
ANR	3354389	Sizeof	sizeof		3351819	0					
ANR	3354390	PrimaryExpression	"""is_callable"""		3351819	1					
ANR	3354391	PrimaryExpression	1		3351819	1					
ANR	3354392	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) ) && ! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 )"		3351819	1		&&			
ANR	3354393	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) )"		3351819	0					
ANR	3354394	UnaryOperator	!		3351819	0					
ANR	3354395	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""is_callable"" , sizeof ( ""is_callable"" ) )"		3351819	1					
ANR	3354396	Callee	memcmp		3351819	0					
ANR	3354397	Identifier	memcmp		3351819	0					
ANR	3354398	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	1					
ANR	3354399	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354400	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354401	Callee	Z_STRVAL		3351819	0					
ANR	3354402	Identifier	Z_STRVAL		3351819	0					
ANR	3354403	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354404	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354405	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354406	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354407	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354408	ArgumentList	init_opline		3351819	1					
ANR	3354409	Argument	init_opline		3351819	0					
ANR	3354410	Identifier	init_opline		3351819	0					
ANR	3354411	Argument	"""is_callable"""		3351819	1					
ANR	3354412	PrimaryExpression	"""is_callable"""		3351819	0					
ANR	3354413	Argument	"sizeof ( ""is_callable"" )"		3351819	2					
ANR	3354414	SizeofExpression	"sizeof ( ""is_callable"" )"		3351819	0					
ANR	3354415	Sizeof	sizeof		3351819	0					
ANR	3354416	PrimaryExpression	"""is_callable"""		3351819	1					
ANR	3354417	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 )"		3351819	1					
ANR	3354418	UnaryOperator	!		3351819	0					
ANR	3354419	CallExpression	"zend_optimizer_is_disabled_func ( ""is_callable"" , sizeof ( ""is_callable"" ) - 1 )"		3351819	1					
ANR	3354420	Callee	zend_optimizer_is_disabled_func		3351819	0					
ANR	3354421	Identifier	zend_optimizer_is_disabled_func		3351819	0					
ANR	3354422	ArgumentList	"""is_callable"""		3351819	1					
ANR	3354423	Argument	"""is_callable"""		3351819	0					
ANR	3354424	PrimaryExpression	"""is_callable"""		3351819	0					
ANR	3354425	Argument	"sizeof ( ""is_callable"" ) - 1"		3351819	1					
ANR	3354426	AdditiveExpression	"sizeof ( ""is_callable"" ) - 1"		3351819	0		-			
ANR	3354427	SizeofExpression	"sizeof ( ""is_callable"" )"		3351819	0					
ANR	3354428	Sizeof	sizeof		3351819	0					
ANR	3354429	PrimaryExpression	"""is_callable"""		3351819	1					
ANR	3354430	PrimaryExpression	1		3351819	1					
ANR	3354431	CompoundStatement		405:5:13190:13279	3351819	1					
ANR	3354432	IdentifierDeclStatement	zend_internal_function * func ;	444:5:15151:15179	3351819	0	True				
ANR	3354433	IdentifierDecl	* func		3351819	0					
ANR	3354434	IdentifierDeclType	zend_internal_function *		3351819	0					
ANR	3354435	Identifier	func		3351819	1					
ANR	3354436	IdentifierDeclStatement	zend_string * lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) ) ;	445:5:15186:15275	3351819	1	True				
ANR	3354437	IdentifierDecl	* lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		3351819	0					
ANR	3354438	IdentifierDeclType	zend_string *		3351819	0					
ANR	3354439	Identifier	lc_name		3351819	1					
ANR	3354440	AssignmentExpression	* lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		3351819	2		=			
ANR	3354441	Identifier	lc_name		3351819	0					
ANR	3354442	CallExpression	zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		3351819	1					
ANR	3354443	Callee	zend_string_tolower		3351819	0					
ANR	3354444	Identifier	zend_string_tolower		3351819	0					
ANR	3354445	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3354446	Argument	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354447	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354448	Callee	Z_STR		3351819	0					
ANR	3354449	Identifier	Z_STR		3351819	0					
ANR	3354450	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354451	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354452	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354453	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354454	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354455	ArgumentList	send1_opline		3351819	1					
ANR	3354456	Argument	send1_opline		3351819	0					
ANR	3354457	Identifier	send1_opline		3351819	0					
ANR	3354458	Statement	if	448:5:15283:15284	3351819	2	True				
ANR	3354459	Statement	(	448:8:15286:15286	3351819	3	True				
ANR	3354460	Statement	(	448:9:15287:15287	3351819	4	True				
ANR	3354461	Statement	func	448:10:15288:15291	3351819	5	True				
ANR	3354462	Statement	=	448:15:15293:15293	3351819	6	True				
ANR	3354463	Statement	zend_hash_find_ptr	448:17:15295:15312	3351819	7	True				
ANR	3354464	Statement	(	448:35:15313:15313	3351819	8	True				
ANR	3354465	Statement	EG	448:36:15314:15315	3351819	9	True				
ANR	3354466	Statement	(	448:38:15316:15316	3351819	10	True				
ANR	3354467	Statement	function_table	448:39:15317:15330	3351819	11	True				
ANR	3354468	Statement	)	448:53:15331:15331	3351819	12	True				
ANR	3354469	Statement	","	448:54:15332:15332	3351819	13	True				
ANR	3354470	Statement	lc_name	448:56:15334:15340	3351819	14	True				
ANR	3354471	Statement	)	448:63:15341:15341	3351819	15	True				
ANR	3354472	Statement	)	448:64:15342:15342	3351819	16	True				
ANR	3354473	Statement	!=	448:66:15344:15345	3351819	17	True				
ANR	3354474	Statement	NULL	448:69:15347:15350	3351819	18	True				
ANR	3354475	Statement	&&	449:7:15359:15360	3351819	19	True				
ANR	3354476	Statement	func	449:10:15362:15365	3351819	20	True				
ANR	3354477	Statement	->	449:14:15366:15367	3351819	21	True				
ANR	3354478	Statement	type	449:16:15368:15371	3351819	22	True				
ANR	3354479	Statement	==	449:21:15373:15374	3351819	23	True				
ANR	3354480	Statement	ZEND_INTERNAL_FUNCTION	449:24:15376:15397	3351819	24	True				
ANR	3354481	Statement	&&	450:7:15406:15407	3351819	25	True				
ANR	3354482	Statement	func	450:10:15409:15412	3351819	26	True				
ANR	3354483	Statement	->	450:14:15413:15414	3351819	27	True				
ANR	3354484	Statement	module	450:16:15415:15420	3351819	28	True				
ANR	3354485	Statement	->	450:22:15421:15422	3351819	29	True				
ANR	3354486	Statement	type	450:24:15423:15426	3351819	30	True				
ANR	3354487	Statement	==	450:29:15428:15429	3351819	31	True				
ANR	3354488	Statement	MODULE_PERSISTENT	450:32:15431:15447	3351819	32	True				
ANR	3354489	Statement	&&	452:7:15474:15475	3351819	33	True				
ANR	3354490	Statement	func	452:10:15477:15480	3351819	34	True				
ANR	3354491	Statement	->	452:14:15481:15482	3351819	35	True				
ANR	3354492	Statement	module	452:16:15483:15488	3351819	36	True				
ANR	3354493	Statement	->	452:22:15489:15490	3351819	37	True				
ANR	3354494	Statement	handle	452:24:15491:15496	3351819	38	True				
ANR	3354495	Statement	==	452:31:15498:15499	3351819	39	True				
ANR	3354496	Statement	NULL	452:34:15501:15504	3351819	40	True				
ANR	3354497	Statement	)	454:6:15519:15519	3351819	41	True				
ANR	3354498	CompoundStatement		415:6:13533:13539	3351819	42					
ANR	3354499	IdentifierDeclStatement	zval t ;	455:6:15529:15535	3351819	0	True				
ANR	3354500	IdentifierDecl	t		3351819	0					
ANR	3354501	IdentifierDeclType	zval		3351819	0					
ANR	3354502	Identifier	t		3351819	1					
ANR	3354503	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 || func -> handler != ZEND_FN ( display_disabled_function ) )"		3351819	1					
ANR	3354504	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 || func -> handler != ZEND_FN ( display_disabled_function )"	456:10:15547:15677	3351819	0	True				
ANR	3354505	OrExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1 || func -> handler != ZEND_FN ( display_disabled_function )"		3351819	0		||			
ANR	3354506	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""is_callable"" ) - 1"		3351819	0		==			
ANR	3354507	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354508	Callee	Z_STRLEN		3351819	0					
ANR	3354509	Identifier	Z_STRLEN		3351819	0					
ANR	3354510	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354511	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354512	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354513	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354514	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354515	ArgumentList	init_opline		3351819	1					
ANR	3354516	Argument	init_opline		3351819	0					
ANR	3354517	Identifier	init_opline		3351819	0					
ANR	3354518	AdditiveExpression	"sizeof ( ""is_callable"" ) - 1"		3351819	1		-			
ANR	3354519	SizeofExpression	"sizeof ( ""is_callable"" )"		3351819	0					
ANR	3354520	Sizeof	sizeof		3351819	0					
ANR	3354521	PrimaryExpression	"""is_callable"""		3351819	1					
ANR	3354522	PrimaryExpression	1		3351819	1					
ANR	3354523	EqualityExpression	func -> handler != ZEND_FN ( display_disabled_function )		3351819	1		!=			
ANR	3354524	PtrMemberAccess	func -> handler		3351819	0					
ANR	3354525	Identifier	func		3351819	0					
ANR	3354526	Identifier	handler		3351819	1					
ANR	3354527	CallExpression	ZEND_FN ( display_disabled_function )		3351819	1					
ANR	3354528	Callee	ZEND_FN		3351819	0					
ANR	3354529	Identifier	ZEND_FN		3351819	0					
ANR	3354530	ArgumentList	display_disabled_function		3351819	1					
ANR	3354531	Argument	display_disabled_function		3351819	0					
ANR	3354532	Identifier	display_disabled_function		3351819	0					
ANR	3354533	CompoundStatement		417:61:13684:13684	3351819	1					
ANR	3354534	ExpressionStatement	ZVAL_TRUE ( & t )	458:7:15689:15702	3351819	0	True				
ANR	3354535	CallExpression	ZVAL_TRUE ( & t )		3351819	0					
ANR	3354536	Callee	ZVAL_TRUE		3351819	0					
ANR	3354537	Identifier	ZVAL_TRUE		3351819	0					
ANR	3354538	ArgumentList	& t		3351819	1					
ANR	3354539	Argument	& t		3351819	0					
ANR	3354540	UnaryOperationExpression	& t		3351819	0					
ANR	3354541	UnaryOperator	&		3351819	0					
ANR	3354542	Identifier	t		3351819	1					
ANR	3354543	ElseStatement	else		3351819	0					
ANR	3354544	CompoundStatement		419:13:13721:13721	3351819	0					
ANR	3354545	ExpressionStatement	ZVAL_FALSE ( & t )	460:7:15726:15740	3351819	0	True				
ANR	3354546	CallExpression	ZVAL_FALSE ( & t )		3351819	0					
ANR	3354547	Callee	ZVAL_FALSE		3351819	0					
ANR	3354548	Identifier	ZVAL_FALSE		3351819	0					
ANR	3354549	ArgumentList	& t		3351819	1					
ANR	3354550	Argument	& t		3351819	0					
ANR	3354551	UnaryOperationExpression	& t		3351819	0					
ANR	3354552	UnaryOperator	&		3351819	0					
ANR	3354553	Identifier	t		3351819	1					
ANR	3354554	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		3351819	2					
ANR	3354555	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	462:10:15760:15849	3351819	0	True				
ANR	3354556	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		3351819	0					
ANR	3354557	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3354558	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3354559	ArgumentList	op_array		3351819	1					
ANR	3354560	Argument	op_array		3351819	0					
ANR	3354561	Identifier	op_array		3351819	0					
ANR	3354562	Argument	opline + 1		3351819	1					
ANR	3354563	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3354564	Identifier	opline		3351819	0					
ANR	3354565	PrimaryExpression	1		3351819	1					
ANR	3354566	Argument	IS_VAR		3351819	2					
ANR	3354567	Identifier	IS_VAR		3351819	0					
ANR	3354568	Argument	ZEND_RESULT ( opline ) . var		3351819	3					
ANR	3354569	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3354570	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3354571	Callee	ZEND_RESULT		3351819	0					
ANR	3354572	Identifier	ZEND_RESULT		3351819	0					
ANR	3354573	ArgumentList	opline		3351819	1					
ANR	3354574	Argument	opline		3351819	0					
ANR	3354575	Identifier	opline		3351819	0					
ANR	3354576	Identifier	var		3351819	1					
ANR	3354577	Argument	& t		3351819	4					
ANR	3354578	UnaryOperationExpression	& t		3351819	0					
ANR	3354579	UnaryOperator	&		3351819	0					
ANR	3354580	Identifier	t		3351819	1					
ANR	3354581	CompoundStatement		422:102:13856:13856	3351819	1					
ANR	3354582	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	463:7:15861:15905	3351819	0	True				
ANR	3354583	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354584	Callee	literal_dtor		3351819	0					
ANR	3354585	Identifier	literal_dtor		3351819	0					
ANR	3354586	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354587	Argument	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354588	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354589	UnaryOperator	&		3351819	0					
ANR	3354590	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354591	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354592	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354593	ArgumentList	init_opline		3351819	1					
ANR	3354594	Argument	init_opline		3351819	0					
ANR	3354595	Identifier	init_opline		3351819	0					
ANR	3354596	ExpressionStatement	MAKE_NOP ( init_opline )	464:7:15914:15935	3351819	1	True				
ANR	3354597	CallExpression	MAKE_NOP ( init_opline )		3351819	0					
ANR	3354598	Callee	MAKE_NOP		3351819	0					
ANR	3354599	Identifier	MAKE_NOP		3351819	0					
ANR	3354600	ArgumentList	init_opline		3351819	1					
ANR	3354601	Argument	init_opline		3351819	0					
ANR	3354602	Identifier	init_opline		3351819	0					
ANR	3354603	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	465:7:15944:15989	3351819	2	True				
ANR	3354604	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354605	Callee	literal_dtor		3351819	0					
ANR	3354606	Identifier	literal_dtor		3351819	0					
ANR	3354607	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354608	Argument	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354609	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354610	UnaryOperator	&		3351819	0					
ANR	3354611	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354612	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354613	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354614	ArgumentList	send1_opline		3351819	1					
ANR	3354615	Argument	send1_opline		3351819	0					
ANR	3354616	Identifier	send1_opline		3351819	0					
ANR	3354617	ExpressionStatement	MAKE_NOP ( send1_opline )	466:7:15998:16020	3351819	3	True				
ANR	3354618	CallExpression	MAKE_NOP ( send1_opline )		3351819	0					
ANR	3354619	Callee	MAKE_NOP		3351819	0					
ANR	3354620	Identifier	MAKE_NOP		3351819	0					
ANR	3354621	ArgumentList	send1_opline		3351819	1					
ANR	3354622	Argument	send1_opline		3351819	0					
ANR	3354623	Identifier	send1_opline		3351819	0					
ANR	3354624	ExpressionStatement	MAKE_NOP ( opline )	467:7:16029:16045	3351819	4	True				
ANR	3354625	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3354626	Callee	MAKE_NOP		3351819	0					
ANR	3354627	Identifier	MAKE_NOP		3351819	0					
ANR	3354628	ArgumentList	opline		3351819	1					
ANR	3354629	Argument	opline		3351819	0					
ANR	3354630	Identifier	opline		3351819	0					
ANR	3354631	ExpressionStatement	zend_string_release ( lc_name )	468:7:16054:16082	3351819	5	True				
ANR	3354632	CallExpression	zend_string_release ( lc_name )		3351819	0					
ANR	3354633	Callee	zend_string_release		3351819	0					
ANR	3354634	Identifier	zend_string_release		3351819	0					
ANR	3354635	ArgumentList	lc_name		3351819	1					
ANR	3354636	Argument	lc_name		3351819	0					
ANR	3354637	Identifier	lc_name		3351819	0					
ANR	3354638	BreakStatement	break ;	469:7:16091:16096	3351819	6	True				
ANR	3354639	ExpressionStatement	zend_string_release ( lc_name )	472:5:16118:16146	3351819	43	True				
ANR	3354640	CallExpression	zend_string_release ( lc_name )		3351819	0					
ANR	3354641	Callee	zend_string_release		3351819	0					
ANR	3354642	Identifier	zend_string_release		3351819	0					
ANR	3354643	ArgumentList	lc_name		3351819	1					
ANR	3354644	Argument	lc_name		3351819	0					
ANR	3354645	Identifier	lc_name		3351819	0					
ANR	3354646	ElseStatement	else		3351819	0					
ANR	3354647	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""defined"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 ) )"		3351819	0					
ANR	3354648	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""defined"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"	510:15:17283:17514	3351819	0	True				
ANR	3354649	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""defined"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"		3351819	0		&&			
ANR	3354650	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""defined"" ) - 1"		3351819	0		==			
ANR	3354651	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354652	Callee	Z_STRLEN		3351819	0					
ANR	3354653	Identifier	Z_STRLEN		3351819	0					
ANR	3354654	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354655	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354656	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354657	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354658	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354659	ArgumentList	init_opline		3351819	1					
ANR	3354660	Argument	init_opline		3351819	0					
ANR	3354661	Identifier	init_opline		3351819	0					
ANR	3354662	AdditiveExpression	"sizeof ( ""defined"" ) - 1"		3351819	1		-			
ANR	3354663	SizeofExpression	"sizeof ( ""defined"" )"		3351819	0					
ANR	3354664	Sizeof	sizeof		3351819	0					
ANR	3354665	PrimaryExpression	"""defined"""		3351819	1					
ANR	3354666	PrimaryExpression	1		3351819	1					
ANR	3354667	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"		3351819	1		&&			
ANR	3354668	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 )"		3351819	0					
ANR	3354669	UnaryOperator	!		3351819	0					
ANR	3354670	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""defined"" , sizeof ( ""defined"" ) - 1 )"		3351819	1					
ANR	3354671	Callee	memcmp		3351819	0					
ANR	3354672	Identifier	memcmp		3351819	0					
ANR	3354673	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	1					
ANR	3354674	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354675	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354676	Callee	Z_STRVAL		3351819	0					
ANR	3354677	Identifier	Z_STRVAL		3351819	0					
ANR	3354678	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354679	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354680	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354681	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354682	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354683	ArgumentList	init_opline		3351819	1					
ANR	3354684	Argument	init_opline		3351819	0					
ANR	3354685	Identifier	init_opline		3351819	0					
ANR	3354686	Argument	"""defined"""		3351819	1					
ANR	3354687	PrimaryExpression	"""defined"""		3351819	0					
ANR	3354688	Argument	"sizeof ( ""defined"" ) - 1"		3351819	2					
ANR	3354689	AdditiveExpression	"sizeof ( ""defined"" ) - 1"		3351819	0		-			
ANR	3354690	SizeofExpression	"sizeof ( ""defined"" )"		3351819	0					
ANR	3354691	Sizeof	sizeof		3351819	0					
ANR	3354692	PrimaryExpression	"""defined"""		3351819	1					
ANR	3354693	PrimaryExpression	1		3351819	1					
ANR	3354694	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"		3351819	1					
ANR	3354695	UnaryOperator	!		3351819	0					
ANR	3354696	CallExpression	"zend_optimizer_is_disabled_func ( ""defined"" , sizeof ( ""defined"" ) - 1 )"		3351819	1					
ANR	3354697	Callee	zend_optimizer_is_disabled_func		3351819	0					
ANR	3354698	Identifier	zend_optimizer_is_disabled_func		3351819	0					
ANR	3354699	ArgumentList	"""defined"""		3351819	1					
ANR	3354700	Argument	"""defined"""		3351819	0					
ANR	3354701	PrimaryExpression	"""defined"""		3351819	0					
ANR	3354702	Argument	"sizeof ( ""defined"" ) - 1"		3351819	1					
ANR	3354703	AdditiveExpression	"sizeof ( ""defined"" ) - 1"		3351819	0		-			
ANR	3354704	SizeofExpression	"sizeof ( ""defined"" )"		3351819	0					
ANR	3354705	Sizeof	sizeof		3351819	0					
ANR	3354706	PrimaryExpression	"""defined"""		3351819	1					
ANR	3354707	PrimaryExpression	1		3351819	1					
ANR	3354708	CompoundStatement		474:5:15528:15534	3351819	1					
ANR	3354709	IdentifierDeclStatement	zval t ;	514:5:17524:17530	3351819	0	True				
ANR	3354710	IdentifierDecl	t		3351819	0					
ANR	3354711	IdentifierDeclType	zval		3351819	0					
ANR	3354712	Identifier	t		3351819	1					
ANR	3354713	IfStatement	"if ( zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 0 ) )"		3351819	1					
ANR	3354714	Condition	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 0 )"	516:9:17542:17625	3351819	0	True				
ANR	3354715	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 0 )"		3351819	0					
ANR	3354716	Callee	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3354717	Identifier	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3354718	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3354719	Argument	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354720	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354721	Callee	Z_STR		3351819	0					
ANR	3354722	Identifier	Z_STR		3351819	0					
ANR	3354723	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354724	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354725	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354726	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354727	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354728	ArgumentList	send1_opline		3351819	1					
ANR	3354729	Argument	send1_opline		3351819	0					
ANR	3354730	Identifier	send1_opline		3351819	0					
ANR	3354731	Argument	& t		3351819	1					
ANR	3354732	UnaryOperationExpression	& t		3351819	0					
ANR	3354733	UnaryOperator	&		3351819	0					
ANR	3354734	Identifier	t		3351819	1					
ANR	3354735	Argument	0		3351819	2					
ANR	3354736	PrimaryExpression	0		3351819	0					
ANR	3354737	CompoundStatement		476:95:15632:15632	3351819	1					
ANR	3354738	ExpressionStatement	ZVAL_TRUE ( & t )	518:6:17637:17650	3351819	0	True				
ANR	3354739	CallExpression	ZVAL_TRUE ( & t )		3351819	0					
ANR	3354740	Callee	ZVAL_TRUE		3351819	0					
ANR	3354741	Identifier	ZVAL_TRUE		3351819	0					
ANR	3354742	ArgumentList	& t		3351819	1					
ANR	3354743	Argument	& t		3351819	0					
ANR	3354744	UnaryOperationExpression	& t		3351819	0					
ANR	3354745	UnaryOperator	&		3351819	0					
ANR	3354746	Identifier	t		3351819	1					
ANR	3354747	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		3351819	1					
ANR	3354748	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	519:10:17662:17751	3351819	0	True				
ANR	3354749	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		3351819	0					
ANR	3354750	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3354751	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3354752	ArgumentList	op_array		3351819	1					
ANR	3354753	Argument	op_array		3351819	0					
ANR	3354754	Identifier	op_array		3351819	0					
ANR	3354755	Argument	opline + 1		3351819	1					
ANR	3354756	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3354757	Identifier	opline		3351819	0					
ANR	3354758	PrimaryExpression	1		3351819	1					
ANR	3354759	Argument	IS_VAR		3351819	2					
ANR	3354760	Identifier	IS_VAR		3351819	0					
ANR	3354761	Argument	ZEND_RESULT ( opline ) . var		3351819	3					
ANR	3354762	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3354763	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3354764	Callee	ZEND_RESULT		3351819	0					
ANR	3354765	Identifier	ZEND_RESULT		3351819	0					
ANR	3354766	ArgumentList	opline		3351819	1					
ANR	3354767	Argument	opline		3351819	0					
ANR	3354768	Identifier	opline		3351819	0					
ANR	3354769	Identifier	var		3351819	1					
ANR	3354770	Argument	& t		3351819	4					
ANR	3354771	UnaryOperationExpression	& t		3351819	0					
ANR	3354772	UnaryOperator	&		3351819	0					
ANR	3354773	Identifier	t		3351819	1					
ANR	3354774	CompoundStatement		479:102:15758:15758	3351819	1					
ANR	3354775	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	520:7:17763:17807	3351819	0	True				
ANR	3354776	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354777	Callee	literal_dtor		3351819	0					
ANR	3354778	Identifier	literal_dtor		3351819	0					
ANR	3354779	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354780	Argument	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354781	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354782	UnaryOperator	&		3351819	0					
ANR	3354783	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354784	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354785	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354786	ArgumentList	init_opline		3351819	1					
ANR	3354787	Argument	init_opline		3351819	0					
ANR	3354788	Identifier	init_opline		3351819	0					
ANR	3354789	ExpressionStatement	MAKE_NOP ( init_opline )	521:7:17816:17837	3351819	1	True				
ANR	3354790	CallExpression	MAKE_NOP ( init_opline )		3351819	0					
ANR	3354791	Callee	MAKE_NOP		3351819	0					
ANR	3354792	Identifier	MAKE_NOP		3351819	0					
ANR	3354793	ArgumentList	init_opline		3351819	1					
ANR	3354794	Argument	init_opline		3351819	0					
ANR	3354795	Identifier	init_opline		3351819	0					
ANR	3354796	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	522:7:17846:17891	3351819	2	True				
ANR	3354797	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354798	Callee	literal_dtor		3351819	0					
ANR	3354799	Identifier	literal_dtor		3351819	0					
ANR	3354800	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354801	Argument	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354802	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354803	UnaryOperator	&		3351819	0					
ANR	3354804	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354805	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354806	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354807	ArgumentList	send1_opline		3351819	1					
ANR	3354808	Argument	send1_opline		3351819	0					
ANR	3354809	Identifier	send1_opline		3351819	0					
ANR	3354810	ExpressionStatement	MAKE_NOP ( send1_opline )	523:7:17900:17922	3351819	3	True				
ANR	3354811	CallExpression	MAKE_NOP ( send1_opline )		3351819	0					
ANR	3354812	Callee	MAKE_NOP		3351819	0					
ANR	3354813	Identifier	MAKE_NOP		3351819	0					
ANR	3354814	ArgumentList	send1_opline		3351819	1					
ANR	3354815	Argument	send1_opline		3351819	0					
ANR	3354816	Identifier	send1_opline		3351819	0					
ANR	3354817	ExpressionStatement	MAKE_NOP ( opline )	524:7:17931:17947	3351819	4	True				
ANR	3354818	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3354819	Callee	MAKE_NOP		3351819	0					
ANR	3354820	Identifier	MAKE_NOP		3351819	0					
ANR	3354821	ArgumentList	opline		3351819	1					
ANR	3354822	Argument	opline		3351819	0					
ANR	3354823	Identifier	opline		3351819	0					
ANR	3354824	BreakStatement	break ;	525:7:17956:17961	3351819	5	True				
ANR	3354825	ElseStatement	else		3351819	0					
ANR	3354826	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""constant"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 ) )"		3351819	0					
ANR	3354827	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""constant"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"	528:15:17993:18229	3351819	0	True				
ANR	3354828	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""constant"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"		3351819	0		&&			
ANR	3354829	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""constant"" ) - 1"		3351819	0		==			
ANR	3354830	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354831	Callee	Z_STRLEN		3351819	0					
ANR	3354832	Identifier	Z_STRLEN		3351819	0					
ANR	3354833	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354834	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354835	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354836	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354837	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354838	ArgumentList	init_opline		3351819	1					
ANR	3354839	Argument	init_opline		3351819	0					
ANR	3354840	Identifier	init_opline		3351819	0					
ANR	3354841	AdditiveExpression	"sizeof ( ""constant"" ) - 1"		3351819	1		-			
ANR	3354842	SizeofExpression	"sizeof ( ""constant"" )"		3351819	0					
ANR	3354843	Sizeof	sizeof		3351819	0					
ANR	3354844	PrimaryExpression	"""constant"""		3351819	1					
ANR	3354845	PrimaryExpression	1		3351819	1					
ANR	3354846	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"		3351819	1		&&			
ANR	3354847	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 )"		3351819	0					
ANR	3354848	UnaryOperator	!		3351819	0					
ANR	3354849	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""constant"" , sizeof ( ""constant"" ) - 1 )"		3351819	1					
ANR	3354850	Callee	memcmp		3351819	0					
ANR	3354851	Identifier	memcmp		3351819	0					
ANR	3354852	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	1					
ANR	3354853	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354854	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354855	Callee	Z_STRVAL		3351819	0					
ANR	3354856	Identifier	Z_STRVAL		3351819	0					
ANR	3354857	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354858	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354859	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354860	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354861	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354862	ArgumentList	init_opline		3351819	1					
ANR	3354863	Argument	init_opline		3351819	0					
ANR	3354864	Identifier	init_opline		3351819	0					
ANR	3354865	Argument	"""constant"""		3351819	1					
ANR	3354866	PrimaryExpression	"""constant"""		3351819	0					
ANR	3354867	Argument	"sizeof ( ""constant"" ) - 1"		3351819	2					
ANR	3354868	AdditiveExpression	"sizeof ( ""constant"" ) - 1"		3351819	0		-			
ANR	3354869	SizeofExpression	"sizeof ( ""constant"" )"		3351819	0					
ANR	3354870	Sizeof	sizeof		3351819	0					
ANR	3354871	PrimaryExpression	"""constant"""		3351819	1					
ANR	3354872	PrimaryExpression	1		3351819	1					
ANR	3354873	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"		3351819	1					
ANR	3354874	UnaryOperator	!		3351819	0					
ANR	3354875	CallExpression	"zend_optimizer_is_disabled_func ( ""constant"" , sizeof ( ""constant"" ) - 1 )"		3351819	1					
ANR	3354876	Callee	zend_optimizer_is_disabled_func		3351819	0					
ANR	3354877	Identifier	zend_optimizer_is_disabled_func		3351819	0					
ANR	3354878	ArgumentList	"""constant"""		3351819	1					
ANR	3354879	Argument	"""constant"""		3351819	0					
ANR	3354880	PrimaryExpression	"""constant"""		3351819	0					
ANR	3354881	Argument	"sizeof ( ""constant"" ) - 1"		3351819	1					
ANR	3354882	AdditiveExpression	"sizeof ( ""constant"" ) - 1"		3351819	0		-			
ANR	3354883	SizeofExpression	"sizeof ( ""constant"" )"		3351819	0					
ANR	3354884	Sizeof	sizeof		3351819	0					
ANR	3354885	PrimaryExpression	"""constant"""		3351819	1					
ANR	3354886	PrimaryExpression	1		3351819	1					
ANR	3354887	CompoundStatement		492:5:16243:16249	3351819	1					
ANR	3354888	IdentifierDeclStatement	zval t ;	532:5:18239:18245	3351819	0	True				
ANR	3354889	IdentifierDecl	t		3351819	0					
ANR	3354890	IdentifierDeclType	zval		3351819	0					
ANR	3354891	Identifier	t		3351819	1					
ANR	3354892	IfStatement	"if ( zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 1 ) )"		3351819	1					
ANR	3354893	Condition	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 1 )"	534:9:18257:18340	3351819	0	True				
ANR	3354894	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) , & t , 1 )"		3351819	0					
ANR	3354895	Callee	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3354896	Identifier	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3354897	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3354898	Argument	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354899	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354900	Callee	Z_STR		3351819	0					
ANR	3354901	Identifier	Z_STR		3351819	0					
ANR	3354902	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354903	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354904	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354905	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354906	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354907	ArgumentList	send1_opline		3351819	1					
ANR	3354908	Argument	send1_opline		3351819	0					
ANR	3354909	Identifier	send1_opline		3351819	0					
ANR	3354910	Argument	& t		3351819	1					
ANR	3354911	UnaryOperationExpression	& t		3351819	0					
ANR	3354912	UnaryOperator	&		3351819	0					
ANR	3354913	Identifier	t		3351819	1					
ANR	3354914	Argument	1		3351819	2					
ANR	3354915	PrimaryExpression	1		3351819	0					
ANR	3354916	CompoundStatement		494:95:16347:16347	3351819	1					
ANR	3354917	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		3351819	0					
ANR	3354918	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	535:10:18355:18444	3351819	0	True				
ANR	3354919	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		3351819	0					
ANR	3354920	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3354921	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3354922	ArgumentList	op_array		3351819	1					
ANR	3354923	Argument	op_array		3351819	0					
ANR	3354924	Identifier	op_array		3351819	0					
ANR	3354925	Argument	opline + 1		3351819	1					
ANR	3354926	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3354927	Identifier	opline		3351819	0					
ANR	3354928	PrimaryExpression	1		3351819	1					
ANR	3354929	Argument	IS_VAR		3351819	2					
ANR	3354930	Identifier	IS_VAR		3351819	0					
ANR	3354931	Argument	ZEND_RESULT ( opline ) . var		3351819	3					
ANR	3354932	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3354933	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3354934	Callee	ZEND_RESULT		3351819	0					
ANR	3354935	Identifier	ZEND_RESULT		3351819	0					
ANR	3354936	ArgumentList	opline		3351819	1					
ANR	3354937	Argument	opline		3351819	0					
ANR	3354938	Identifier	opline		3351819	0					
ANR	3354939	Identifier	var		3351819	1					
ANR	3354940	Argument	& t		3351819	4					
ANR	3354941	UnaryOperationExpression	& t		3351819	0					
ANR	3354942	UnaryOperator	&		3351819	0					
ANR	3354943	Identifier	t		3351819	1					
ANR	3354944	CompoundStatement		495:102:16451:16451	3351819	1					
ANR	3354945	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	536:7:18456:18500	3351819	0	True				
ANR	3354946	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3354947	Callee	literal_dtor		3351819	0					
ANR	3354948	Identifier	literal_dtor		3351819	0					
ANR	3354949	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354950	Argument	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354951	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3354952	UnaryOperator	&		3351819	0					
ANR	3354953	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3354954	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3354955	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3354956	ArgumentList	init_opline		3351819	1					
ANR	3354957	Argument	init_opline		3351819	0					
ANR	3354958	Identifier	init_opline		3351819	0					
ANR	3354959	ExpressionStatement	MAKE_NOP ( init_opline )	537:7:18509:18530	3351819	1	True				
ANR	3354960	CallExpression	MAKE_NOP ( init_opline )		3351819	0					
ANR	3354961	Callee	MAKE_NOP		3351819	0					
ANR	3354962	Identifier	MAKE_NOP		3351819	0					
ANR	3354963	ArgumentList	init_opline		3351819	1					
ANR	3354964	Argument	init_opline		3351819	0					
ANR	3354965	Identifier	init_opline		3351819	0					
ANR	3354966	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	538:7:18539:18584	3351819	2	True				
ANR	3354967	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3354968	Callee	literal_dtor		3351819	0					
ANR	3354969	Identifier	literal_dtor		3351819	0					
ANR	3354970	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354971	Argument	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354972	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3354973	UnaryOperator	&		3351819	0					
ANR	3354974	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3354975	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3354976	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3354977	ArgumentList	send1_opline		3351819	1					
ANR	3354978	Argument	send1_opline		3351819	0					
ANR	3354979	Identifier	send1_opline		3351819	0					
ANR	3354980	ExpressionStatement	MAKE_NOP ( send1_opline )	539:7:18593:18615	3351819	3	True				
ANR	3354981	CallExpression	MAKE_NOP ( send1_opline )		3351819	0					
ANR	3354982	Callee	MAKE_NOP		3351819	0					
ANR	3354983	Identifier	MAKE_NOP		3351819	0					
ANR	3354984	ArgumentList	send1_opline		3351819	1					
ANR	3354985	Argument	send1_opline		3351819	0					
ANR	3354986	Identifier	send1_opline		3351819	0					
ANR	3354987	ExpressionStatement	MAKE_NOP ( opline )	540:7:18624:18640	3351819	4	True				
ANR	3354988	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3354989	Callee	MAKE_NOP		3351819	0					
ANR	3354990	Identifier	MAKE_NOP		3351819	0					
ANR	3354991	ArgumentList	opline		3351819	1					
ANR	3354992	Argument	opline		3351819	0					
ANR	3354993	Identifier	opline		3351819	0					
ANR	3354994	BreakStatement	break ;	541:7:18649:18654	3351819	5	True				
ANR	3354995	ElseStatement	else		3351819	0					
ANR	3354996	IfStatement	"if ( ( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) == 0 && Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 ) )"		3351819	0					
ANR	3354997	Condition	"( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) == 0 && Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"	544:15:18686:18979	3351819	0	True				
ANR	3354998	AndExpression	"( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) == 0 && Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		3351819	0		&&			
ANR	3354999	EqualityExpression	( CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN ) == 0		3351819	0		==			
ANR	3355000	BitAndExpression	CG ( compiler_options ) & ZEND_COMPILE_NO_BUILTIN_STRLEN		3351819	0		&			
ANR	3355001	CallExpression	CG ( compiler_options )		3351819	0					
ANR	3355002	Callee	CG		3351819	0					
ANR	3355003	Identifier	CG		3351819	0					
ANR	3355004	ArgumentList	compiler_options		3351819	1					
ANR	3355005	Argument	compiler_options		3351819	0					
ANR	3355006	Identifier	compiler_options		3351819	0					
ANR	3355007	Identifier	ZEND_COMPILE_NO_BUILTIN_STRLEN		3351819	1					
ANR	3355008	PrimaryExpression	0		3351819	1					
ANR	3355009	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		3351819	1		&&			
ANR	3355010	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""strlen"" ) - 1"		3351819	0		==			
ANR	3355011	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355012	Callee	Z_STRLEN		3351819	0					
ANR	3355013	Identifier	Z_STRLEN		3351819	0					
ANR	3355014	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355015	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355016	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355017	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355018	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355019	ArgumentList	init_opline		3351819	1					
ANR	3355020	Argument	init_opline		3351819	0					
ANR	3355021	Identifier	init_opline		3351819	0					
ANR	3355022	AdditiveExpression	"sizeof ( ""strlen"" ) - 1"		3351819	1		-			
ANR	3355023	SizeofExpression	"sizeof ( ""strlen"" )"		3351819	0					
ANR	3355024	Sizeof	sizeof		3351819	0					
ANR	3355025	PrimaryExpression	"""strlen"""		3351819	1					
ANR	3355026	PrimaryExpression	1		3351819	1					
ANR	3355027	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		3351819	1		&&			
ANR	3355028	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		3351819	0					
ANR	3355029	UnaryOperator	!		3351819	0					
ANR	3355030	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		3351819	1					
ANR	3355031	Callee	memcmp		3351819	0					
ANR	3355032	Identifier	memcmp		3351819	0					
ANR	3355033	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	1					
ANR	3355034	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355035	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355036	Callee	Z_STRVAL		3351819	0					
ANR	3355037	Identifier	Z_STRVAL		3351819	0					
ANR	3355038	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355039	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355040	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355041	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355042	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355043	ArgumentList	init_opline		3351819	1					
ANR	3355044	Argument	init_opline		3351819	0					
ANR	3355045	Identifier	init_opline		3351819	0					
ANR	3355046	Argument	"""strlen"""		3351819	1					
ANR	3355047	PrimaryExpression	"""strlen"""		3351819	0					
ANR	3355048	Argument	"sizeof ( ""strlen"" ) - 1"		3351819	2					
ANR	3355049	AdditiveExpression	"sizeof ( ""strlen"" ) - 1"		3351819	0		-			
ANR	3355050	SizeofExpression	"sizeof ( ""strlen"" )"		3351819	0					
ANR	3355051	Sizeof	sizeof		3351819	0					
ANR	3355052	PrimaryExpression	"""strlen"""		3351819	1					
ANR	3355053	PrimaryExpression	1		3351819	1					
ANR	3355054	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		3351819	1					
ANR	3355055	UnaryOperator	!		3351819	0					
ANR	3355056	CallExpression	"zend_optimizer_is_disabled_func ( ""strlen"" , sizeof ( ""strlen"" ) - 1 )"		3351819	1					
ANR	3355057	Callee	zend_optimizer_is_disabled_func		3351819	0					
ANR	3355058	Identifier	zend_optimizer_is_disabled_func		3351819	0					
ANR	3355059	ArgumentList	"""strlen"""		3351819	1					
ANR	3355060	Argument	"""strlen"""		3351819	0					
ANR	3355061	PrimaryExpression	"""strlen"""		3351819	0					
ANR	3355062	Argument	"sizeof ( ""strlen"" ) - 1"		3351819	1					
ANR	3355063	AdditiveExpression	"sizeof ( ""strlen"" ) - 1"		3351819	0		-			
ANR	3355064	SizeofExpression	"sizeof ( ""strlen"" )"		3351819	0					
ANR	3355065	Sizeof	sizeof		3351819	0					
ANR	3355066	PrimaryExpression	"""strlen"""		3351819	1					
ANR	3355067	PrimaryExpression	1		3351819	1					
ANR	3355068	CompoundStatement		508:5:16993:16999	3351819	1					
ANR	3355069	IdentifierDeclStatement	zval t ;	548:5:18989:18995	3351819	0	True				
ANR	3355070	IdentifierDecl	t		3351819	0					
ANR	3355071	IdentifierDeclType	zval		3351819	0					
ANR	3355072	Identifier	t		3351819	1					
ANR	3355073	ExpressionStatement	"ZVAL_LONG ( & t , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"	550:5:19003:19058	3351819	1	True				
ANR	3355074	CallExpression	"ZVAL_LONG ( & t , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		3351819	0					
ANR	3355075	Callee	ZVAL_LONG		3351819	0					
ANR	3355076	Identifier	ZVAL_LONG		3351819	0					
ANR	3355077	ArgumentList	& t		3351819	1					
ANR	3355078	Argument	& t		3351819	0					
ANR	3355079	UnaryOperationExpression	& t		3351819	0					
ANR	3355080	UnaryOperator	&		3351819	0					
ANR	3355081	Identifier	t		3351819	1					
ANR	3355082	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3355083	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355084	Callee	Z_STRLEN		3351819	0					
ANR	3355085	Identifier	Z_STRLEN		3351819	0					
ANR	3355086	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355087	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355088	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355089	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355090	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355091	ArgumentList	send1_opline		3351819	1					
ANR	3355092	Argument	send1_opline		3351819	0					
ANR	3355093	Identifier	send1_opline		3351819	0					
ANR	3355094	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		3351819	2					
ANR	3355095	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	551:9:19069:19158	3351819	0	True				
ANR	3355096	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		3351819	0					
ANR	3355097	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3355098	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3355099	ArgumentList	op_array		3351819	1					
ANR	3355100	Argument	op_array		3351819	0					
ANR	3355101	Identifier	op_array		3351819	0					
ANR	3355102	Argument	opline + 1		3351819	1					
ANR	3355103	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3355104	Identifier	opline		3351819	0					
ANR	3355105	PrimaryExpression	1		3351819	1					
ANR	3355106	Argument	IS_VAR		3351819	2					
ANR	3355107	Identifier	IS_VAR		3351819	0					
ANR	3355108	Argument	ZEND_RESULT ( opline ) . var		3351819	3					
ANR	3355109	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3355110	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3355111	Callee	ZEND_RESULT		3351819	0					
ANR	3355112	Identifier	ZEND_RESULT		3351819	0					
ANR	3355113	ArgumentList	opline		3351819	1					
ANR	3355114	Argument	opline		3351819	0					
ANR	3355115	Identifier	opline		3351819	0					
ANR	3355116	Identifier	var		3351819	1					
ANR	3355117	Argument	& t		3351819	4					
ANR	3355118	UnaryOperationExpression	& t		3351819	0					
ANR	3355119	UnaryOperator	&		3351819	0					
ANR	3355120	Identifier	t		3351819	1					
ANR	3355121	CompoundStatement		511:101:17165:17165	3351819	1					
ANR	3355122	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	552:6:19169:19213	3351819	0	True				
ANR	3355123	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355124	Callee	literal_dtor		3351819	0					
ANR	3355125	Identifier	literal_dtor		3351819	0					
ANR	3355126	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355127	Argument	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355128	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355129	UnaryOperator	&		3351819	0					
ANR	3355130	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355131	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355132	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355133	ArgumentList	init_opline		3351819	1					
ANR	3355134	Argument	init_opline		3351819	0					
ANR	3355135	Identifier	init_opline		3351819	0					
ANR	3355136	ExpressionStatement	MAKE_NOP ( init_opline )	553:6:19221:19242	3351819	1	True				
ANR	3355137	CallExpression	MAKE_NOP ( init_opline )		3351819	0					
ANR	3355138	Callee	MAKE_NOP		3351819	0					
ANR	3355139	Identifier	MAKE_NOP		3351819	0					
ANR	3355140	ArgumentList	init_opline		3351819	1					
ANR	3355141	Argument	init_opline		3351819	0					
ANR	3355142	Identifier	init_opline		3351819	0					
ANR	3355143	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	554:6:19250:19295	3351819	2	True				
ANR	3355144	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355145	Callee	literal_dtor		3351819	0					
ANR	3355146	Identifier	literal_dtor		3351819	0					
ANR	3355147	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355148	Argument	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355149	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355150	UnaryOperator	&		3351819	0					
ANR	3355151	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355152	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355153	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355154	ArgumentList	send1_opline		3351819	1					
ANR	3355155	Argument	send1_opline		3351819	0					
ANR	3355156	Identifier	send1_opline		3351819	0					
ANR	3355157	ExpressionStatement	MAKE_NOP ( send1_opline )	555:6:19303:19325	3351819	3	True				
ANR	3355158	CallExpression	MAKE_NOP ( send1_opline )		3351819	0					
ANR	3355159	Callee	MAKE_NOP		3351819	0					
ANR	3355160	Identifier	MAKE_NOP		3351819	0					
ANR	3355161	ArgumentList	send1_opline		3351819	1					
ANR	3355162	Argument	send1_opline		3351819	0					
ANR	3355163	Identifier	send1_opline		3351819	0					
ANR	3355164	ExpressionStatement	MAKE_NOP ( opline )	556:6:19333:19349	3351819	4	True				
ANR	3355165	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3355166	Callee	MAKE_NOP		3351819	0					
ANR	3355167	Identifier	MAKE_NOP		3351819	0					
ANR	3355168	ArgumentList	opline		3351819	1					
ANR	3355169	Argument	opline		3351819	0					
ANR	3355170	Identifier	opline		3351819	0					
ANR	3355171	BreakStatement	break ;	557:6:19357:19362	3351819	5	True				
ANR	3355172	ElseStatement	else		3351819	0					
ANR	3355173	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""dirname"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) ) )"		3351819	0					
ANR	3355174	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""dirname"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"	560:15:19446:19788	3351819	0	True				
ANR	3355175	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""dirname"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		3351819	0		&&			
ANR	3355176	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""dirname"" ) - 1"		3351819	0		==			
ANR	3355177	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355178	Callee	Z_STRLEN		3351819	0					
ANR	3355179	Identifier	Z_STRLEN		3351819	0					
ANR	3355180	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355181	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355182	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355183	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355184	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355185	ArgumentList	init_opline		3351819	1					
ANR	3355186	Argument	init_opline		3351819	0					
ANR	3355187	Identifier	init_opline		3351819	0					
ANR	3355188	AdditiveExpression	"sizeof ( ""dirname"" ) - 1"		3351819	1		-			
ANR	3355189	SizeofExpression	"sizeof ( ""dirname"" )"		3351819	0					
ANR	3355190	Sizeof	sizeof		3351819	0					
ANR	3355191	PrimaryExpression	"""dirname"""		3351819	1					
ANR	3355192	PrimaryExpression	1		3351819	1					
ANR	3355193	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		3351819	1		&&			
ANR	3355194	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 )"		3351819	0					
ANR	3355195	UnaryOperator	!		3351819	0					
ANR	3355196	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""dirname"" , sizeof ( ""dirname"" ) - 1 )"		3351819	1					
ANR	3355197	Callee	memcmp		3351819	0					
ANR	3355198	Identifier	memcmp		3351819	0					
ANR	3355199	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	1					
ANR	3355200	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355201	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355202	Callee	Z_STRVAL		3351819	0					
ANR	3355203	Identifier	Z_STRVAL		3351819	0					
ANR	3355204	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355205	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355206	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355207	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355208	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355209	ArgumentList	init_opline		3351819	1					
ANR	3355210	Argument	init_opline		3351819	0					
ANR	3355211	Identifier	init_opline		3351819	0					
ANR	3355212	Argument	"""dirname"""		3351819	1					
ANR	3355213	PrimaryExpression	"""dirname"""		3351819	0					
ANR	3355214	Argument	"sizeof ( ""dirname"" ) - 1"		3351819	2					
ANR	3355215	AdditiveExpression	"sizeof ( ""dirname"" ) - 1"		3351819	0		-			
ANR	3355216	SizeofExpression	"sizeof ( ""dirname"" )"		3351819	0					
ANR	3355217	Sizeof	sizeof		3351819	0					
ANR	3355218	PrimaryExpression	"""dirname"""		3351819	1					
ANR	3355219	PrimaryExpression	1		3351819	1					
ANR	3355220	AndExpression	"! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 ) && IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		3351819	1		&&			
ANR	3355221	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 )"		3351819	0					
ANR	3355222	UnaryOperator	!		3351819	0					
ANR	3355223	CallExpression	"zend_optimizer_is_disabled_func ( ""dirname"" , sizeof ( ""dirname"" ) - 1 )"		3351819	1					
ANR	3355224	Callee	zend_optimizer_is_disabled_func		3351819	0					
ANR	3355225	Identifier	zend_optimizer_is_disabled_func		3351819	0					
ANR	3355226	ArgumentList	"""dirname"""		3351819	1					
ANR	3355227	Argument	"""dirname"""		3351819	0					
ANR	3355228	PrimaryExpression	"""dirname"""		3351819	0					
ANR	3355229	Argument	"sizeof ( ""dirname"" ) - 1"		3351819	1					
ANR	3355230	AdditiveExpression	"sizeof ( ""dirname"" ) - 1"		3351819	0		-			
ANR	3355231	SizeofExpression	"sizeof ( ""dirname"" )"		3351819	0					
ANR	3355232	Sizeof	sizeof		3351819	0					
ANR	3355233	PrimaryExpression	"""dirname"""		3351819	1					
ANR	3355234	PrimaryExpression	1		3351819	1					
ANR	3355235	CallExpression	"IS_ABSOLUTE_PATH ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) )"		3351819	1					
ANR	3355236	Callee	IS_ABSOLUTE_PATH		3351819	0					
ANR	3355237	Identifier	IS_ABSOLUTE_PATH		3351819	0					
ANR	3355238	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3355239	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355240	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355241	Callee	Z_STRVAL		3351819	0					
ANR	3355242	Identifier	Z_STRVAL		3351819	0					
ANR	3355243	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355244	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355245	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355246	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355247	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355248	ArgumentList	send1_opline		3351819	1					
ANR	3355249	Argument	send1_opline		3351819	0					
ANR	3355250	Identifier	send1_opline		3351819	0					
ANR	3355251	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3355252	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355253	Callee	Z_STRLEN		3351819	0					
ANR	3355254	Identifier	Z_STRLEN		3351819	0					
ANR	3355255	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355256	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355257	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355258	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355259	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355260	ArgumentList	send1_opline		3351819	1					
ANR	3355261	Argument	send1_opline		3351819	0					
ANR	3355262	Identifier	send1_opline		3351819	0					
ANR	3355263	CompoundStatement		525:5:17802:17928	3351819	1					
ANR	3355264	IdentifierDeclStatement	"zend_string * dirname = zend_string_init ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) , 0 ) ;"	565:5:19798:19924	3351819	0	True				
ANR	3355265	IdentifierDecl	"* dirname = zend_string_init ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) , 0 )"		3351819	0					
ANR	3355266	IdentifierDeclType	zend_string *		3351819	0					
ANR	3355267	Identifier	dirname		3351819	1					
ANR	3355268	AssignmentExpression	"* dirname = zend_string_init ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) , 0 )"		3351819	2		=			
ANR	3355269	Identifier	dirname		3351819	0					
ANR	3355270	CallExpression	"zend_string_init ( Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) ) , Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) ) , 0 )"		3351819	1					
ANR	3355271	Callee	zend_string_init		3351819	0					
ANR	3355272	Identifier	zend_string_init		3351819	0					
ANR	3355273	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3355274	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355275	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355276	Callee	Z_STRVAL		3351819	0					
ANR	3355277	Identifier	Z_STRVAL		3351819	0					
ANR	3355278	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355279	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355280	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355281	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355282	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355283	ArgumentList	send1_opline		3351819	1					
ANR	3355284	Argument	send1_opline		3351819	0					
ANR	3355285	Identifier	send1_opline		3351819	0					
ANR	3355286	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3355287	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355288	Callee	Z_STRLEN		3351819	0					
ANR	3355289	Identifier	Z_STRLEN		3351819	0					
ANR	3355290	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355291	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355292	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355293	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355294	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355295	ArgumentList	send1_opline		3351819	1					
ANR	3355296	Argument	send1_opline		3351819	0					
ANR	3355297	Identifier	send1_opline		3351819	0					
ANR	3355298	Argument	0		3351819	2					
ANR	3355299	PrimaryExpression	0		3351819	0					
ANR	3355300	ExpressionStatement	"ZSTR_LEN ( dirname ) = zend_dirname ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"	566:5:19931:20001	3351819	1	True				
ANR	3355301	AssignmentExpression	"ZSTR_LEN ( dirname ) = zend_dirname ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"		3351819	0		=			
ANR	3355302	CallExpression	ZSTR_LEN ( dirname )		3351819	0					
ANR	3355303	Callee	ZSTR_LEN		3351819	0					
ANR	3355304	Identifier	ZSTR_LEN		3351819	0					
ANR	3355305	ArgumentList	dirname		3351819	1					
ANR	3355306	Argument	dirname		3351819	0					
ANR	3355307	Identifier	dirname		3351819	0					
ANR	3355308	CallExpression	"zend_dirname ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"		3351819	1					
ANR	3355309	Callee	zend_dirname		3351819	0					
ANR	3355310	Identifier	zend_dirname		3351819	0					
ANR	3355311	ArgumentList	ZSTR_VAL ( dirname )		3351819	1					
ANR	3355312	Argument	ZSTR_VAL ( dirname )		3351819	0					
ANR	3355313	CallExpression	ZSTR_VAL ( dirname )		3351819	0					
ANR	3355314	Callee	ZSTR_VAL		3351819	0					
ANR	3355315	Identifier	ZSTR_VAL		3351819	0					
ANR	3355316	ArgumentList	dirname		3351819	1					
ANR	3355317	Argument	dirname		3351819	0					
ANR	3355318	Identifier	dirname		3351819	0					
ANR	3355319	Argument	ZSTR_LEN ( dirname )		3351819	1					
ANR	3355320	CallExpression	ZSTR_LEN ( dirname )		3351819	0					
ANR	3355321	Callee	ZSTR_LEN		3351819	0					
ANR	3355322	Identifier	ZSTR_LEN		3351819	0					
ANR	3355323	ArgumentList	dirname		3351819	1					
ANR	3355324	Argument	dirname		3351819	0					
ANR	3355325	Identifier	dirname		3351819	0					
ANR	3355326	IfStatement	"if ( IS_ABSOLUTE_PATH ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) ) )"		3351819	2					
ANR	3355327	Condition	"IS_ABSOLUTE_PATH ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"	567:9:20012:20065	3351819	0	True				
ANR	3355328	CallExpression	"IS_ABSOLUTE_PATH ( ZSTR_VAL ( dirname ) , ZSTR_LEN ( dirname ) )"		3351819	0					
ANR	3355329	Callee	IS_ABSOLUTE_PATH		3351819	0					
ANR	3355330	Identifier	IS_ABSOLUTE_PATH		3351819	0					
ANR	3355331	ArgumentList	ZSTR_VAL ( dirname )		3351819	1					
ANR	3355332	Argument	ZSTR_VAL ( dirname )		3351819	0					
ANR	3355333	CallExpression	ZSTR_VAL ( dirname )		3351819	0					
ANR	3355334	Callee	ZSTR_VAL		3351819	0					
ANR	3355335	Identifier	ZSTR_VAL		3351819	0					
ANR	3355336	ArgumentList	dirname		3351819	1					
ANR	3355337	Argument	dirname		3351819	0					
ANR	3355338	Identifier	dirname		3351819	0					
ANR	3355339	Argument	ZSTR_LEN ( dirname )		3351819	1					
ANR	3355340	CallExpression	ZSTR_LEN ( dirname )		3351819	0					
ANR	3355341	Callee	ZSTR_LEN		3351819	0					
ANR	3355342	Identifier	ZSTR_LEN		3351819	0					
ANR	3355343	ArgumentList	dirname		3351819	1					
ANR	3355344	Argument	dirname		3351819	0					
ANR	3355345	Identifier	dirname		3351819	0					
ANR	3355346	CompoundStatement		528:6:18080:18086	3351819	1					
ANR	3355347	IdentifierDeclStatement	zval t ;	568:6:20076:20082	3351819	0	True				
ANR	3355348	IdentifierDecl	t		3351819	0					
ANR	3355349	IdentifierDeclType	zval		3351819	0					
ANR	3355350	Identifier	t		3351819	1					
ANR	3355351	ExpressionStatement	"ZVAL_STR ( & t , dirname )"	570:6:20091:20112	3351819	1	True				
ANR	3355352	CallExpression	"ZVAL_STR ( & t , dirname )"		3351819	0					
ANR	3355353	Callee	ZVAL_STR		3351819	0					
ANR	3355354	Identifier	ZVAL_STR		3351819	0					
ANR	3355355	ArgumentList	& t		3351819	1					
ANR	3355356	Argument	& t		3351819	0					
ANR	3355357	UnaryOperationExpression	& t		3351819	0					
ANR	3355358	UnaryOperator	&		3351819	0					
ANR	3355359	Identifier	t		3351819	1					
ANR	3355360	Argument	dirname		3351819	1					
ANR	3355361	Identifier	dirname		3351819	0					
ANR	3355362	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		3351819	2					
ANR	3355363	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	571:10:20124:20213	3351819	0	True				
ANR	3355364	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		3351819	0					
ANR	3355365	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3355366	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3355367	ArgumentList	op_array		3351819	1					
ANR	3355368	Argument	op_array		3351819	0					
ANR	3355369	Identifier	op_array		3351819	0					
ANR	3355370	Argument	opline + 1		3351819	1					
ANR	3355371	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3355372	Identifier	opline		3351819	0					
ANR	3355373	PrimaryExpression	1		3351819	1					
ANR	3355374	Argument	IS_VAR		3351819	2					
ANR	3355375	Identifier	IS_VAR		3351819	0					
ANR	3355376	Argument	ZEND_RESULT ( opline ) . var		3351819	3					
ANR	3355377	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3355378	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3355379	Callee	ZEND_RESULT		3351819	0					
ANR	3355380	Identifier	ZEND_RESULT		3351819	0					
ANR	3355381	ArgumentList	opline		3351819	1					
ANR	3355382	Argument	opline		3351819	0					
ANR	3355383	Identifier	opline		3351819	0					
ANR	3355384	Identifier	var		3351819	1					
ANR	3355385	Argument	& t		3351819	4					
ANR	3355386	UnaryOperationExpression	& t		3351819	0					
ANR	3355387	UnaryOperator	&		3351819	0					
ANR	3355388	Identifier	t		3351819	1					
ANR	3355389	CompoundStatement		531:102:18220:18220	3351819	1					
ANR	3355390	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	572:7:20225:20269	3351819	0	True				
ANR	3355391	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355392	Callee	literal_dtor		3351819	0					
ANR	3355393	Identifier	literal_dtor		3351819	0					
ANR	3355394	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355395	Argument	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355396	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355397	UnaryOperator	&		3351819	0					
ANR	3355398	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355399	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355400	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355401	ArgumentList	init_opline		3351819	1					
ANR	3355402	Argument	init_opline		3351819	0					
ANR	3355403	Identifier	init_opline		3351819	0					
ANR	3355404	ExpressionStatement	MAKE_NOP ( init_opline )	573:7:20278:20299	3351819	1	True				
ANR	3355405	CallExpression	MAKE_NOP ( init_opline )		3351819	0					
ANR	3355406	Callee	MAKE_NOP		3351819	0					
ANR	3355407	Identifier	MAKE_NOP		3351819	0					
ANR	3355408	ArgumentList	init_opline		3351819	1					
ANR	3355409	Argument	init_opline		3351819	0					
ANR	3355410	Identifier	init_opline		3351819	0					
ANR	3355411	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	574:7:20308:20353	3351819	2	True				
ANR	3355412	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355413	Callee	literal_dtor		3351819	0					
ANR	3355414	Identifier	literal_dtor		3351819	0					
ANR	3355415	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355416	Argument	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355417	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355418	UnaryOperator	&		3351819	0					
ANR	3355419	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355420	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355421	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355422	ArgumentList	send1_opline		3351819	1					
ANR	3355423	Argument	send1_opline		3351819	0					
ANR	3355424	Identifier	send1_opline		3351819	0					
ANR	3355425	ExpressionStatement	MAKE_NOP ( send1_opline )	575:7:20362:20384	3351819	3	True				
ANR	3355426	CallExpression	MAKE_NOP ( send1_opline )		3351819	0					
ANR	3355427	Callee	MAKE_NOP		3351819	0					
ANR	3355428	Identifier	MAKE_NOP		3351819	0					
ANR	3355429	ArgumentList	send1_opline		3351819	1					
ANR	3355430	Argument	send1_opline		3351819	0					
ANR	3355431	Identifier	send1_opline		3351819	0					
ANR	3355432	ExpressionStatement	MAKE_NOP ( opline )	576:7:20393:20409	3351819	4	True				
ANR	3355433	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3355434	Callee	MAKE_NOP		3351819	0					
ANR	3355435	Identifier	MAKE_NOP		3351819	0					
ANR	3355436	ArgumentList	opline		3351819	1					
ANR	3355437	Argument	opline		3351819	0					
ANR	3355438	Identifier	opline		3351819	0					
ANR	3355439	BreakStatement	break ;	577:7:20418:20423	3351819	5	True				
ANR	3355440	ElseStatement	else		3351819	0					
ANR	3355441	CompoundStatement		539:12:18449:18449	3351819	0					
ANR	3355442	ExpressionStatement	zend_string_release ( dirname )	580:6:20453:20481	3351819	0	True				
ANR	3355443	CallExpression	zend_string_release ( dirname )		3351819	0					
ANR	3355444	Callee	zend_string_release		3351819	0					
ANR	3355445	Identifier	zend_string_release		3351819	0					
ANR	3355446	ArgumentList	dirname		3351819	1					
ANR	3355447	Argument	dirname		3351819	0					
ANR	3355448	Identifier	dirname		3351819	0					
ANR	3355449	ElseStatement	else		3351819	0					
ANR	3355450	IfStatement	"if ( Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""extension_loaded"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) )"		3351819	0					
ANR	3355451	Condition	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""extension_loaded"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"	473:15:16163:16439	3351819	0	True				
ANR	3355452	AndExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""extension_loaded"" ) - 1 && ! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		3351819	0		&&			
ANR	3355453	EqualityExpression	"Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) ) == sizeof ( ""extension_loaded"" ) - 1"		3351819	0		==			
ANR	3355454	CallExpression	Z_STRLEN ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355455	Callee	Z_STRLEN		3351819	0					
ANR	3355456	Identifier	Z_STRLEN		3351819	0					
ANR	3355457	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355458	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355459	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355460	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355461	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355462	ArgumentList	init_opline		3351819	1					
ANR	3355463	Argument	init_opline		3351819	0					
ANR	3355464	Identifier	init_opline		3351819	0					
ANR	3355465	AdditiveExpression	"sizeof ( ""extension_loaded"" ) - 1"		3351819	1		-			
ANR	3355466	SizeofExpression	"sizeof ( ""extension_loaded"" )"		3351819	0					
ANR	3355467	Sizeof	sizeof		3351819	0					
ANR	3355468	PrimaryExpression	"""extension_loaded"""		3351819	1					
ANR	3355469	PrimaryExpression	1		3351819	1					
ANR	3355470	AndExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 ) && ! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		3351819	1		&&			
ANR	3355471	UnaryOperationExpression	"! memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		3351819	0					
ANR	3355472	UnaryOperator	!		3351819	0					
ANR	3355473	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) ) , ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		3351819	1					
ANR	3355474	Callee	memcmp		3351819	0					
ANR	3355475	Identifier	memcmp		3351819	0					
ANR	3355476	ArgumentList	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	1					
ANR	3355477	Argument	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355478	CallExpression	Z_STRVAL ( ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355479	Callee	Z_STRVAL		3351819	0					
ANR	3355480	Identifier	Z_STRVAL		3351819	0					
ANR	3355481	ArgumentList	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355482	Argument	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355483	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355484	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355485	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355486	ArgumentList	init_opline		3351819	1					
ANR	3355487	Argument	init_opline		3351819	0					
ANR	3355488	Identifier	init_opline		3351819	0					
ANR	3355489	Argument	"""extension_loaded"""		3351819	1					
ANR	3355490	PrimaryExpression	"""extension_loaded"""		3351819	0					
ANR	3355491	Argument	"sizeof ( ""extension_loaded"" ) - 1"		3351819	2					
ANR	3355492	AdditiveExpression	"sizeof ( ""extension_loaded"" ) - 1"		3351819	0		-			
ANR	3355493	SizeofExpression	"sizeof ( ""extension_loaded"" )"		3351819	0					
ANR	3355494	Sizeof	sizeof		3351819	0					
ANR	3355495	PrimaryExpression	"""extension_loaded"""		3351819	1					
ANR	3355496	PrimaryExpression	1		3351819	1					
ANR	3355497	UnaryOperationExpression	"! zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		3351819	1					
ANR	3355498	UnaryOperator	!		3351819	0					
ANR	3355499	CallExpression	"zend_optimizer_is_disabled_func ( ""extension_loaded"" , sizeof ( ""extension_loaded"" ) - 1 )"		3351819	1					
ANR	3355500	Callee	zend_optimizer_is_disabled_func		3351819	0					
ANR	3355501	Identifier	zend_optimizer_is_disabled_func		3351819	0					
ANR	3355502	ArgumentList	"""extension_loaded"""		3351819	1					
ANR	3355503	Argument	"""extension_loaded"""		3351819	0					
ANR	3355504	PrimaryExpression	"""extension_loaded"""		3351819	0					
ANR	3355505	Argument	"sizeof ( ""extension_loaded"" ) - 1"		3351819	1					
ANR	3355506	AdditiveExpression	"sizeof ( ""extension_loaded"" ) - 1"		3351819	0		-			
ANR	3355507	SizeofExpression	"sizeof ( ""extension_loaded"" )"		3351819	0					
ANR	3355508	Sizeof	sizeof		3351819	0					
ANR	3355509	PrimaryExpression	"""extension_loaded"""		3351819	1					
ANR	3355510	PrimaryExpression	1		3351819	1					
ANR	3355511	CompoundStatement		440:5:14562:14637	3351819	1					
ANR	3355512	IdentifierDeclStatement	zval t ;	477:5:16449:16455	3351819	0	True				
ANR	3355513	IdentifierDecl	t		3351819	0					
ANR	3355514	IdentifierDeclType	zval		3351819	0					
ANR	3355515	Identifier	t		3351819	1					
ANR	3355516	IdentifierDeclStatement	zend_string * lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) ) ;	478:5:16462:16551	3351819	1	True				
ANR	3355517	IdentifierDecl	* lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		3351819	0					
ANR	3355518	IdentifierDeclType	zend_string *		3351819	0					
ANR	3355519	Identifier	lc_name		3351819	1					
ANR	3355520	AssignmentExpression	* lc_name = zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		3351819	2		=			
ANR	3355521	Identifier	lc_name		3351819	0					
ANR	3355522	CallExpression	zend_string_tolower ( Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) ) )		3351819	1					
ANR	3355523	Callee	zend_string_tolower		3351819	0					
ANR	3355524	Identifier	zend_string_tolower		3351819	0					
ANR	3355525	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	1					
ANR	3355526	Argument	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355527	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355528	Callee	Z_STR		3351819	0					
ANR	3355529	Identifier	Z_STR		3351819	0					
ANR	3355530	ArgumentList	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355531	Argument	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355532	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355533	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355534	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355535	ArgumentList	send1_opline		3351819	1					
ANR	3355536	Argument	send1_opline		3351819	0					
ANR	3355537	Identifier	send1_opline		3351819	0					
ANR	3355538	IdentifierDeclStatement	"zend_module_entry * m = zend_hash_find_ptr ( & module_registry , lc_name ) ;"	480:5:16558:16633	3351819	2	True				
ANR	3355539	IdentifierDecl	"* m = zend_hash_find_ptr ( & module_registry , lc_name )"		3351819	0					
ANR	3355540	IdentifierDeclType	zend_module_entry *		3351819	0					
ANR	3355541	Identifier	m		3351819	1					
ANR	3355542	AssignmentExpression	"* m = zend_hash_find_ptr ( & module_registry , lc_name )"		3351819	2		=			
ANR	3355543	Identifier	m		3351819	0					
ANR	3355544	CallExpression	"zend_hash_find_ptr ( & module_registry , lc_name )"		3351819	1					
ANR	3355545	Callee	zend_hash_find_ptr		3351819	0					
ANR	3355546	Identifier	zend_hash_find_ptr		3351819	0					
ANR	3355547	ArgumentList	& module_registry		3351819	1					
ANR	3355548	Argument	& module_registry		3351819	0					
ANR	3355549	UnaryOperationExpression	& module_registry		3351819	0					
ANR	3355550	UnaryOperator	&		3351819	0					
ANR	3355551	Identifier	module_registry		3351819	1					
ANR	3355552	Argument	lc_name		3351819	1					
ANR	3355553	Identifier	lc_name		3351819	0					
ANR	3355554	ExpressionStatement	zend_string_release ( lc_name )	483:5:16641:16669	3351819	3	True				
ANR	3355555	CallExpression	zend_string_release ( lc_name )		3351819	0					
ANR	3355556	Callee	zend_string_release		3351819	0					
ANR	3355557	Identifier	zend_string_release		3351819	0					
ANR	3355558	ArgumentList	lc_name		3351819	1					
ANR	3355559	Argument	lc_name		3351819	0					
ANR	3355560	Identifier	lc_name		3351819	0					
ANR	3355561	IfStatement	if ( ! m )		3351819	4					
ANR	3355562	Condition	! m	484:9:16680:16681	3351819	0	True				
ANR	3355563	UnaryOperationExpression	! m		3351819	0					
ANR	3355564	UnaryOperator	!		3351819	0					
ANR	3355565	Identifier	m		3351819	1					
ANR	3355566	CompoundStatement		444:13:14688:14688	3351819	1					
ANR	3355567	IfStatement	if ( ! PG ( enable_dl ) )		3351819	0					
ANR	3355568	Condition	! PG ( enable_dl )	485:10:16696:16709	3351819	0	True				
ANR	3355569	UnaryOperationExpression	! PG ( enable_dl )		3351819	0					
ANR	3355570	UnaryOperator	!		3351819	0					
ANR	3355571	CallExpression	PG ( enable_dl )		3351819	1					
ANR	3355572	Callee	PG		3351819	0					
ANR	3355573	Identifier	PG		3351819	0					
ANR	3355574	ArgumentList	enable_dl		3351819	1					
ANR	3355575	Argument	enable_dl		3351819	0					
ANR	3355576	Identifier	enable_dl		3351819	0					
ANR	3355577	CompoundStatement		445:26:14716:14716	3351819	1					
ANR	3355578	BreakStatement	break ;	486:7:16721:16726	3351819	0	True				
ANR	3355579	ElseStatement	else		3351819	0					
ANR	3355580	CompoundStatement		447:13:14745:14745	3351819	0					
ANR	3355581	ExpressionStatement	ZVAL_FALSE ( & t )	488:7:16750:16764	3351819	0	True				
ANR	3355582	CallExpression	ZVAL_FALSE ( & t )		3351819	0					
ANR	3355583	Callee	ZVAL_FALSE		3351819	0					
ANR	3355584	Identifier	ZVAL_FALSE		3351819	0					
ANR	3355585	ArgumentList	& t		3351819	1					
ANR	3355586	Argument	& t		3351819	0					
ANR	3355587	UnaryOperationExpression	& t		3351819	0					
ANR	3355588	UnaryOperator	&		3351819	0					
ANR	3355589	Identifier	t		3351819	1					
ANR	3355590	ElseStatement	else		3351819	0					
ANR	3355591	CompoundStatement		457:13:14929:14929	3351819	0					
ANR	3355592	BreakStatement	break ;	498:7:16934:16939	3351819	0	True				
ANR	3355593	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		3351819	5					
ANR	3355594	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"	502:9:16966:17055	3351819	0	True				
ANR	3355595	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_VAR , ZEND_RESULT ( opline ) . var , & t )"		3351819	0					
ANR	3355596	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3355597	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3355598	ArgumentList	op_array		3351819	1					
ANR	3355599	Argument	op_array		3351819	0					
ANR	3355600	Identifier	op_array		3351819	0					
ANR	3355601	Argument	opline + 1		3351819	1					
ANR	3355602	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3355603	Identifier	opline		3351819	0					
ANR	3355604	PrimaryExpression	1		3351819	1					
ANR	3355605	Argument	IS_VAR		3351819	2					
ANR	3355606	Identifier	IS_VAR		3351819	0					
ANR	3355607	Argument	ZEND_RESULT ( opline ) . var		3351819	3					
ANR	3355608	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3355609	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3355610	Callee	ZEND_RESULT		3351819	0					
ANR	3355611	Identifier	ZEND_RESULT		3351819	0					
ANR	3355612	ArgumentList	opline		3351819	1					
ANR	3355613	Argument	opline		3351819	0					
ANR	3355614	Identifier	opline		3351819	0					
ANR	3355615	Identifier	var		3351819	1					
ANR	3355616	Argument	& t		3351819	4					
ANR	3355617	UnaryOperationExpression	& t		3351819	0					
ANR	3355618	UnaryOperator	&		3351819	0					
ANR	3355619	Identifier	t		3351819	1					
ANR	3355620	CompoundStatement		462:101:15062:15062	3351819	1					
ANR	3355621	ExpressionStatement	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )	503:6:17066:17110	3351819	0	True				
ANR	3355622	CallExpression	literal_dtor ( & ZEND_OP2_LITERAL ( init_opline ) )		3351819	0					
ANR	3355623	Callee	literal_dtor		3351819	0					
ANR	3355624	Identifier	literal_dtor		3351819	0					
ANR	3355625	ArgumentList	& ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355626	Argument	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355627	UnaryOperationExpression	& ZEND_OP2_LITERAL ( init_opline )		3351819	0					
ANR	3355628	UnaryOperator	&		3351819	0					
ANR	3355629	CallExpression	ZEND_OP2_LITERAL ( init_opline )		3351819	1					
ANR	3355630	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355631	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355632	ArgumentList	init_opline		3351819	1					
ANR	3355633	Argument	init_opline		3351819	0					
ANR	3355634	Identifier	init_opline		3351819	0					
ANR	3355635	ExpressionStatement	MAKE_NOP ( init_opline )	504:6:17118:17139	3351819	1	True				
ANR	3355636	CallExpression	MAKE_NOP ( init_opline )		3351819	0					
ANR	3355637	Callee	MAKE_NOP		3351819	0					
ANR	3355638	Identifier	MAKE_NOP		3351819	0					
ANR	3355639	ArgumentList	init_opline		3351819	1					
ANR	3355640	Argument	init_opline		3351819	0					
ANR	3355641	Identifier	init_opline		3351819	0					
ANR	3355642	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )	505:6:17147:17192	3351819	2	True				
ANR	3355643	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( send1_opline ) )		3351819	0					
ANR	3355644	Callee	literal_dtor		3351819	0					
ANR	3355645	Identifier	literal_dtor		3351819	0					
ANR	3355646	ArgumentList	& ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355647	Argument	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355648	UnaryOperationExpression	& ZEND_OP1_LITERAL ( send1_opline )		3351819	0					
ANR	3355649	UnaryOperator	&		3351819	0					
ANR	3355650	CallExpression	ZEND_OP1_LITERAL ( send1_opline )		3351819	1					
ANR	3355651	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355652	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355653	ArgumentList	send1_opline		3351819	1					
ANR	3355654	Argument	send1_opline		3351819	0					
ANR	3355655	Identifier	send1_opline		3351819	0					
ANR	3355656	ExpressionStatement	MAKE_NOP ( send1_opline )	506:6:17200:17222	3351819	3	True				
ANR	3355657	CallExpression	MAKE_NOP ( send1_opline )		3351819	0					
ANR	3355658	Callee	MAKE_NOP		3351819	0					
ANR	3355659	Identifier	MAKE_NOP		3351819	0					
ANR	3355660	ArgumentList	send1_opline		3351819	1					
ANR	3355661	Argument	send1_opline		3351819	0					
ANR	3355662	Identifier	send1_opline		3351819	0					
ANR	3355663	ExpressionStatement	MAKE_NOP ( opline )	507:6:17230:17246	3351819	4	True				
ANR	3355664	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3355665	Callee	MAKE_NOP		3351819	0					
ANR	3355666	Identifier	MAKE_NOP		3351819	0					
ANR	3355667	ArgumentList	opline		3351819	1					
ANR	3355668	Argument	opline		3351819	0					
ANR	3355669	Identifier	opline		3351819	0					
ANR	3355670	BreakStatement	break ;	508:6:17254:17259	3351819	5	True				
ANR	3355671	ElseStatement	else		3351819	0					
ANR	3355672	CompoundStatement		450:12:14790:14790	3351819	0					
ANR	3355673	Statement	if	491:6:16794:16795	3351819	0	True				
ANR	3355674	Statement	(	491:9:16797:16797	3351819	1	True				
ANR	3355675	Statement	m	491:10:16798:16798	3351819	2	True				
ANR	3355676	Statement	->	491:11:16799:16800	3351819	3	True				
ANR	3355677	Statement	type	491:13:16801:16804	3351819	4	True				
ANR	3355678	Statement	==	491:18:16806:16807	3351819	5	True				
ANR	3355679	Statement	MODULE_PERSISTENT	491:21:16809:16825	3351819	6	True				
ANR	3355680	Statement	&&	493:7:16852:16853	3351819	7	True				
ANR	3355681	Statement	m	493:10:16855:16855	3351819	8	True				
ANR	3355682	Statement	->	493:11:16856:16857	3351819	9	True				
ANR	3355683	Statement	handle	493:13:16858:16863	3351819	10	True				
ANR	3355684	Statement	==	493:20:16865:16866	3351819	11	True				
ANR	3355685	Statement	NULL	493:23:16868:16871	3351819	12	True				
ANR	3355686	Statement	)	495:6:16886:16886	3351819	13	True				
ANR	3355687	CompoundStatement		455:8:14892:14892	3351819	14					
ANR	3355688	ExpressionStatement	ZVAL_TRUE ( & t )	496:7:16897:16910	3351819	0	True				
ANR	3355689	CallExpression	ZVAL_TRUE ( & t )		3351819	0					
ANR	3355690	Callee	ZVAL_TRUE		3351819	0					
ANR	3355691	Identifier	ZVAL_TRUE		3351819	0					
ANR	3355692	ArgumentList	& t		3351819	1					
ANR	3355693	Argument	& t		3351819	0					
ANR	3355694	UnaryOperationExpression	& t		3351819	0					
ANR	3355695	UnaryOperator	&		3351819	0					
ANR	3355696	Identifier	t		3351819	1					
ANR	3355697	ExpressionStatement	collect_constants = 0	585:3:20568:20589	3351819	11	True				
ANR	3355698	AssignmentExpression	collect_constants = 0		3351819	0		=			
ANR	3355699	Identifier	collect_constants		3351819	0					
ANR	3355700	PrimaryExpression	0		3351819	1					
ANR	3355701	BreakStatement	break ;	586:3:20594:20599	3351819	12	True				
ANR	3355702	Label	case ZEND_STRLEN :	588:2:20607:20623	3351819	41	True				
ANR	3355703	Identifier	ZEND_STRLEN		3351819	0					
ANR	3355704	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING )		3351819	42					
ANR	3355705	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING	589:7:20632:20720	3351819	0	True				
ANR	3355706	AndExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		3351819	0		&&			
ANR	3355707	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		3351819	0		==			
ANR	3355708	CallExpression	ZEND_OP1_TYPE ( opline )		3351819	0					
ANR	3355709	Callee	ZEND_OP1_TYPE		3351819	0					
ANR	3355710	Identifier	ZEND_OP1_TYPE		3351819	0					
ANR	3355711	ArgumentList	opline		3351819	1					
ANR	3355712	Argument	opline		3351819	0					
ANR	3355713	Identifier	opline		3351819	0					
ANR	3355714	Identifier	IS_CONST		3351819	1					
ANR	3355715	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		3351819	1		==			
ANR	3355716	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3355717	Callee	Z_TYPE		3351819	0					
ANR	3355718	Identifier	Z_TYPE		3351819	0					
ANR	3355719	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355720	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355721	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355722	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355723	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355724	ArgumentList	opline		3351819	1					
ANR	3355725	Argument	opline		3351819	0					
ANR	3355726	Identifier	opline		3351819	0					
ANR	3355727	Identifier	IS_STRING		3351819	1					
ANR	3355728	CompoundStatement		551:4:18733:18739	3351819	1					
ANR	3355729	IdentifierDeclStatement	zval t ;	591:4:20729:20735	3351819	0	True				
ANR	3355730	IdentifierDecl	t		3351819	0					
ANR	3355731	IdentifierDeclType	zval		3351819	0					
ANR	3355732	Identifier	t		3351819	1					
ANR	3355733	ExpressionStatement	"ZVAL_LONG ( & t , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) )"	593:4:20742:20791	3351819	1	True				
ANR	3355734	CallExpression	"ZVAL_LONG ( & t , Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) )"		3351819	0					
ANR	3355735	Callee	ZVAL_LONG		3351819	0					
ANR	3355736	Identifier	ZVAL_LONG		3351819	0					
ANR	3355737	ArgumentList	& t		3351819	1					
ANR	3355738	Argument	& t		3351819	0					
ANR	3355739	UnaryOperationExpression	& t		3351819	0					
ANR	3355740	UnaryOperator	&		3351819	0					
ANR	3355741	Identifier	t		3351819	1					
ANR	3355742	Argument	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		3351819	1					
ANR	3355743	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3355744	Callee	Z_STRLEN		3351819	0					
ANR	3355745	Identifier	Z_STRLEN		3351819	0					
ANR	3355746	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355747	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355748	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355749	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355750	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355751	ArgumentList	opline		3351819	1					
ANR	3355752	Argument	opline		3351819	0					
ANR	3355753	Identifier	opline		3351819	0					
ANR	3355754	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , ZEND_RESULT ( opline ) . var , & t ) )"		3351819	2					
ANR	3355755	Condition	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , ZEND_RESULT ( opline ) . var , & t )"	594:8:20801:20894	3351819	0	True				
ANR	3355756	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline + 1 , IS_TMP_VAR , ZEND_RESULT ( opline ) . var , & t )"		3351819	0					
ANR	3355757	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3355758	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3355759	ArgumentList	op_array		3351819	1					
ANR	3355760	Argument	op_array		3351819	0					
ANR	3355761	Identifier	op_array		3351819	0					
ANR	3355762	Argument	opline + 1		3351819	1					
ANR	3355763	AdditiveExpression	opline + 1		3351819	0		+			
ANR	3355764	Identifier	opline		3351819	0					
ANR	3355765	PrimaryExpression	1		3351819	1					
ANR	3355766	Argument	IS_TMP_VAR		3351819	2					
ANR	3355767	Identifier	IS_TMP_VAR		3351819	0					
ANR	3355768	Argument	ZEND_RESULT ( opline ) . var		3351819	3					
ANR	3355769	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3355770	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3355771	Callee	ZEND_RESULT		3351819	0					
ANR	3355772	Identifier	ZEND_RESULT		3351819	0					
ANR	3355773	ArgumentList	opline		3351819	1					
ANR	3355774	Argument	opline		3351819	0					
ANR	3355775	Identifier	opline		3351819	0					
ANR	3355776	Identifier	var		3351819	1					
ANR	3355777	Argument	& t		3351819	4					
ANR	3355778	UnaryOperationExpression	& t		3351819	0					
ANR	3355779	UnaryOperator	&		3351819	0					
ANR	3355780	Identifier	t		3351819	1					
ANR	3355781	CompoundStatement		554:104:18901:18901	3351819	1					
ANR	3355782	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	595:5:20904:20943	3351819	0	True				
ANR	3355783	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3355784	Callee	literal_dtor		3351819	0					
ANR	3355785	Identifier	literal_dtor		3351819	0					
ANR	3355786	ArgumentList	& ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355787	Argument	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355788	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355789	UnaryOperator	&		3351819	0					
ANR	3355790	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355791	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355792	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355793	ArgumentList	opline		3351819	1					
ANR	3355794	Argument	opline		3351819	0					
ANR	3355795	Identifier	opline		3351819	0					
ANR	3355796	ExpressionStatement	MAKE_NOP ( opline )	596:5:20950:20966	3351819	1	True				
ANR	3355797	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3355798	Callee	MAKE_NOP		3351819	0					
ANR	3355799	Identifier	MAKE_NOP		3351819	0					
ANR	3355800	ArgumentList	opline		3351819	1					
ANR	3355801	Argument	opline		3351819	0					
ANR	3355802	Identifier	opline		3351819	0					
ANR	3355803	BreakStatement	break ;	599:3:20982:20987	3351819	43	True				
ANR	3355804	Label	case ZEND_DEFINED :	600:2:20991:21008	3351819	44	True				
ANR	3355805	Identifier	ZEND_DEFINED		3351819	0					
ANR	3355806	CompoundStatement		563:4:19035:19072	3351819	45					
ANR	3355807	IdentifierDeclStatement	zval c ;	602:4:21019:21025	3351819	0	True				
ANR	3355808	IdentifierDecl	c		3351819	0					
ANR	3355809	IdentifierDeclType	zval		3351819	0					
ANR	3355810	Identifier	c		3351819	1					
ANR	3355811	IdentifierDeclStatement	uint32_t tv = ZEND_RESULT ( opline ) . var ;	603:4:21031:21068	3351819	1	True				
ANR	3355812	IdentifierDecl	tv = ZEND_RESULT ( opline ) . var		3351819	0					
ANR	3355813	IdentifierDeclType	uint32_t		3351819	0					
ANR	3355814	Identifier	tv		3351819	1					
ANR	3355815	AssignmentExpression	tv = ZEND_RESULT ( opline ) . var		3351819	2		=			
ANR	3355816	Identifier	tv		3351819	0					
ANR	3355817	MemberAccess	ZEND_RESULT ( opline ) . var		3351819	1					
ANR	3355818	CallExpression	ZEND_RESULT ( opline )		3351819	0					
ANR	3355819	Callee	ZEND_RESULT		3351819	0					
ANR	3355820	Identifier	ZEND_RESULT		3351819	0					
ANR	3355821	ArgumentList	opline		3351819	1					
ANR	3355822	Argument	opline		3351819	0					
ANR	3355823	Identifier	opline		3351819	0					
ANR	3355824	Identifier	var		3351819	1					
ANR	3355825	IfStatement	"if ( ! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( opline ) ) , & c , 0 ) )"		3351819	2					
ANR	3355826	Condition	"! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( opline ) ) , & c , 0 )"	604:8:21078:21156	3351819	0	True				
ANR	3355827	UnaryOperationExpression	"! zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( opline ) ) , & c , 0 )"		3351819	0					
ANR	3355828	UnaryOperator	!		3351819	0					
ANR	3355829	CallExpression	"zend_optimizer_get_persistent_constant ( Z_STR ( ZEND_OP1_LITERAL ( opline ) ) , & c , 0 )"		3351819	1					
ANR	3355830	Callee	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3355831	Identifier	zend_optimizer_get_persistent_constant		3351819	0					
ANR	3355832	ArgumentList	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		3351819	1					
ANR	3355833	Argument	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3355834	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3355835	Callee	Z_STR		3351819	0					
ANR	3355836	Identifier	Z_STR		3351819	0					
ANR	3355837	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355838	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355839	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355840	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355841	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355842	ArgumentList	opline		3351819	1					
ANR	3355843	Argument	opline		3351819	0					
ANR	3355844	Identifier	opline		3351819	0					
ANR	3355845	Argument	& c		3351819	1					
ANR	3355846	UnaryOperationExpression	& c		3351819	0					
ANR	3355847	UnaryOperator	&		3351819	0					
ANR	3355848	Identifier	c		3351819	1					
ANR	3355849	Argument	0		3351819	2					
ANR	3355850	PrimaryExpression	0		3351819	0					
ANR	3355851	CompoundStatement		564:89:19163:19163	3351819	1					
ANR	3355852	BreakStatement	break ;	605:5:21166:21171	3351819	0	True				
ANR	3355853	ExpressionStatement	ZVAL_TRUE ( & c )	607:4:21183:21196	3351819	3	True				
ANR	3355854	CallExpression	ZVAL_TRUE ( & c )		3351819	0					
ANR	3355855	Callee	ZVAL_TRUE		3351819	0					
ANR	3355856	Identifier	ZVAL_TRUE		3351819	0					
ANR	3355857	ArgumentList	& c		3351819	1					
ANR	3355858	Argument	& c		3351819	0					
ANR	3355859	UnaryOperationExpression	& c		3351819	0					
ANR	3355860	UnaryOperator	&		3351819	0					
ANR	3355861	Identifier	c		3351819	1					
ANR	3355862	IfStatement	"if ( zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c ) )"		3351819	4					
ANR	3355863	Condition	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c )"	608:8:21206:21274	3351819	0	True				
ANR	3355864	CallExpression	"zend_optimizer_replace_by_const ( op_array , opline , IS_TMP_VAR , tv , & c )"		3351819	0					
ANR	3355865	Callee	zend_optimizer_replace_by_const		3351819	0					
ANR	3355866	Identifier	zend_optimizer_replace_by_const		3351819	0					
ANR	3355867	ArgumentList	op_array		3351819	1					
ANR	3355868	Argument	op_array		3351819	0					
ANR	3355869	Identifier	op_array		3351819	0					
ANR	3355870	Argument	opline		3351819	1					
ANR	3355871	Identifier	opline		3351819	0					
ANR	3355872	Argument	IS_TMP_VAR		3351819	2					
ANR	3355873	Identifier	IS_TMP_VAR		3351819	0					
ANR	3355874	Argument	tv		3351819	3					
ANR	3355875	Identifier	tv		3351819	0					
ANR	3355876	Argument	& c		3351819	4					
ANR	3355877	UnaryOperationExpression	& c		3351819	0					
ANR	3355878	UnaryOperator	&		3351819	0					
ANR	3355879	Identifier	c		3351819	1					
ANR	3355880	CompoundStatement		568:79:19281:19281	3351819	1					
ANR	3355881	ExpressionStatement	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )	609:5:21284:21323	3351819	0	True				
ANR	3355882	CallExpression	literal_dtor ( & ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3355883	Callee	literal_dtor		3351819	0					
ANR	3355884	Identifier	literal_dtor		3351819	0					
ANR	3355885	ArgumentList	& ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355886	Argument	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355887	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355888	UnaryOperator	&		3351819	0					
ANR	3355889	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355890	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355891	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355892	ArgumentList	opline		3351819	1					
ANR	3355893	Argument	opline		3351819	0					
ANR	3355894	Identifier	opline		3351819	0					
ANR	3355895	ExpressionStatement	MAKE_NOP ( opline )	610:5:21330:21346	3351819	1	True				
ANR	3355896	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3355897	Callee	MAKE_NOP		3351819	0					
ANR	3355898	Identifier	MAKE_NOP		3351819	0					
ANR	3355899	ArgumentList	opline		3351819	1					
ANR	3355900	Argument	opline		3351819	0					
ANR	3355901	Identifier	opline		3351819	0					
ANR	3355902	BreakStatement	break ;	613:3:21362:21367	3351819	46	True				
ANR	3355903	Label	case ZEND_DECLARE_CONST :	614:2:21371:21394	3351819	47	True				
ANR	3355904	Identifier	ZEND_DECLARE_CONST		3351819	0					
ANR	3355905	IfStatement	if ( collect_constants && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING )		3351819	48					
ANR	3355906	Condition	collect_constants && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING	615:7:21403:21531	3351819	0	True				
ANR	3355907	AndExpression	collect_constants && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING		3351819	0		&&			
ANR	3355908	Identifier	collect_constants		3351819	0					
ANR	3355909	AndExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING		3351819	1		&&			
ANR	3355910	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		3351819	0		==			
ANR	3355911	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3355912	Callee	Z_TYPE		3351819	0					
ANR	3355913	Identifier	Z_TYPE		3351819	0					
ANR	3355914	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355915	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355916	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355917	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355918	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355919	ArgumentList	opline		3351819	1					
ANR	3355920	Argument	opline		3351819	0					
ANR	3355921	Identifier	opline		3351819	0					
ANR	3355922	Identifier	IS_STRING		3351819	1					
ANR	3355923	RelationalExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) ) <= IS_STRING		3351819	1		<=			
ANR	3355924	CallExpression	Z_TYPE ( ZEND_OP2_LITERAL ( opline ) )		3351819	0					
ANR	3355925	Callee	Z_TYPE		3351819	0					
ANR	3355926	Identifier	Z_TYPE		3351819	0					
ANR	3355927	ArgumentList	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3355928	Argument	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3355929	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3355930	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355931	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355932	ArgumentList	opline		3351819	1					
ANR	3355933	Argument	opline		3351819	0					
ANR	3355934	Identifier	opline		3351819	0					
ANR	3355935	Identifier	IS_STRING		3351819	1					
ANR	3355936	CompoundStatement		577:54:19538:19538	3351819	1					
ANR	3355937	ExpressionStatement	"zend_optimizer_collect_constant ( ctx , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) )"	618:4:21540:21630	3351819	0	True				
ANR	3355938	CallExpression	"zend_optimizer_collect_constant ( ctx , & ZEND_OP1_LITERAL ( opline ) , & ZEND_OP2_LITERAL ( opline ) )"		3351819	0					
ANR	3355939	Callee	zend_optimizer_collect_constant		3351819	0					
ANR	3355940	Identifier	zend_optimizer_collect_constant		3351819	0					
ANR	3355941	ArgumentList	ctx		3351819	1					
ANR	3355942	Argument	ctx		3351819	0					
ANR	3355943	Identifier	ctx		3351819	0					
ANR	3355944	Argument	& ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355945	UnaryOperationExpression	& ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3355946	UnaryOperator	&		3351819	0					
ANR	3355947	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3355948	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3355949	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3355950	ArgumentList	opline		3351819	1					
ANR	3355951	Argument	opline		3351819	0					
ANR	3355952	Identifier	opline		3351819	0					
ANR	3355953	Argument	& ZEND_OP2_LITERAL ( opline )		3351819	2					
ANR	3355954	UnaryOperationExpression	& ZEND_OP2_LITERAL ( opline )		3351819	0					
ANR	3355955	UnaryOperator	&		3351819	0					
ANR	3355956	CallExpression	ZEND_OP2_LITERAL ( opline )		3351819	1					
ANR	3355957	Callee	ZEND_OP2_LITERAL		3351819	0					
ANR	3355958	Identifier	ZEND_OP2_LITERAL		3351819	0					
ANR	3355959	ArgumentList	opline		3351819	1					
ANR	3355960	Argument	opline		3351819	0					
ANR	3355961	Identifier	opline		3351819	0					
ANR	3355962	BreakStatement	break ;	620:3:21640:21645	3351819	49	True				
ANR	3355963	Label	case ZEND_RETURN :	622:2:21650:21666	3351819	50	True				
ANR	3355964	Identifier	ZEND_RETURN		3351819	0					
ANR	3355965	Label	case ZEND_RETURN_BY_REF :	623:2:21670:21693	3351819	51	True				
ANR	3355966	Identifier	ZEND_RETURN_BY_REF		3351819	0					
ANR	3355967	Label	case ZEND_GENERATOR_RETURN :	624:2:21697:21723	3351819	52	True				
ANR	3355968	Identifier	ZEND_GENERATOR_RETURN		3351819	0					
ANR	3355969	Label	case ZEND_EXIT :	625:2:21727:21741	3351819	53	True				
ANR	3355970	Identifier	ZEND_EXIT		3351819	0					
ANR	3355971	Label	case ZEND_THROW :	626:2:21745:21760	3351819	54	True				
ANR	3355972	Identifier	ZEND_THROW		3351819	0					
ANR	3355973	Label	case ZEND_CATCH :	627:2:21764:21779	3351819	55	True				
ANR	3355974	Identifier	ZEND_CATCH		3351819	0					
ANR	3355975	Label	case ZEND_FAST_CALL :	628:2:21783:21802	3351819	56	True				
ANR	3355976	Identifier	ZEND_FAST_CALL		3351819	0					
ANR	3355977	Label	case ZEND_FAST_RET :	629:2:21806:21824	3351819	57	True				
ANR	3355978	Identifier	ZEND_FAST_RET		3351819	0					
ANR	3355979	Label	case ZEND_JMP :	630:2:21828:21841	3351819	58	True				
ANR	3355980	Identifier	ZEND_JMP		3351819	0					
ANR	3355981	Label	case ZEND_JMPZNZ :	631:2:21845:21861	3351819	59	True				
ANR	3355982	Identifier	ZEND_JMPZNZ		3351819	0					
ANR	3355983	Label	case ZEND_JMPZ :	632:2:21865:21879	3351819	60	True				
ANR	3355984	Identifier	ZEND_JMPZ		3351819	0					
ANR	3355985	Label	case ZEND_JMPNZ :	633:2:21883:21898	3351819	61	True				
ANR	3355986	Identifier	ZEND_JMPNZ		3351819	0					
ANR	3355987	Label	case ZEND_JMPZ_EX :	634:2:21902:21919	3351819	62	True				
ANR	3355988	Identifier	ZEND_JMPZ_EX		3351819	0					
ANR	3355989	Label	case ZEND_JMPNZ_EX :	635:2:21923:21941	3351819	63	True				
ANR	3355990	Identifier	ZEND_JMPNZ_EX		3351819	0					
ANR	3355991	Label	case ZEND_FE_RESET_R :	636:2:21945:21965	3351819	64	True				
ANR	3355992	Identifier	ZEND_FE_RESET_R		3351819	0					
ANR	3355993	Label	case ZEND_FE_RESET_RW :	637:2:21969:21990	3351819	65	True				
ANR	3355994	Identifier	ZEND_FE_RESET_RW		3351819	0					
ANR	3355995	Label	case ZEND_FE_FETCH_R :	638:2:21994:22014	3351819	66	True				
ANR	3355996	Identifier	ZEND_FE_FETCH_R		3351819	0					
ANR	3355997	Label	case ZEND_FE_FETCH_RW :	639:2:22018:22039	3351819	67	True				
ANR	3355998	Identifier	ZEND_FE_FETCH_RW		3351819	0					
ANR	3355999	Label	case ZEND_NEW :	640:2:22043:22056	3351819	68	True				
ANR	3356000	Identifier	ZEND_NEW		3351819	0					
ANR	3356001	Label	case ZEND_JMP_SET :	641:2:22060:22077	3351819	69	True				
ANR	3356002	Identifier	ZEND_JMP_SET		3351819	0					
ANR	3356003	Label	case ZEND_COALESCE :	642:2:22081:22099	3351819	70	True				
ANR	3356004	Identifier	ZEND_COALESCE		3351819	0					
ANR	3356005	Label	case ZEND_ASSERT_CHECK :	643:2:22103:22125	3351819	71	True				
ANR	3356006	Identifier	ZEND_ASSERT_CHECK		3351819	0					
ANR	3356007	ExpressionStatement	collect_constants = 0	644:3:22130:22151	3351819	72	True				
ANR	3356008	AssignmentExpression	collect_constants = 0		3351819	0		=			
ANR	3356009	Identifier	collect_constants		3351819	0					
ANR	3356010	PrimaryExpression	0		3351819	1					
ANR	3356011	BreakStatement	break ;	645:3:22156:22161	3351819	73	True				
ANR	3356012	Label	case ZEND_FETCH_R :	646:2:22165:22182	3351819	74	True				
ANR	3356013	Identifier	ZEND_FETCH_R		3351819	0					
ANR	3356014	Label	case ZEND_FETCH_W :	647:2:22186:22203	3351819	75	True				
ANR	3356015	Identifier	ZEND_FETCH_W		3351819	0					
ANR	3356016	Label	case ZEND_FETCH_RW :	648:2:22207:22225	3351819	76	True				
ANR	3356017	Identifier	ZEND_FETCH_RW		3351819	0					
ANR	3356018	Label	case ZEND_FETCH_FUNC_ARG :	649:2:22229:22253	3351819	77	True				
ANR	3356019	Identifier	ZEND_FETCH_FUNC_ARG		3351819	0					
ANR	3356020	Label	case ZEND_FETCH_IS :	650:2:22257:22275	3351819	78	True				
ANR	3356021	Identifier	ZEND_FETCH_IS		3351819	0					
ANR	3356022	Label	case ZEND_FETCH_UNSET :	651:2:22279:22300	3351819	79	True				
ANR	3356023	Identifier	ZEND_FETCH_UNSET		3351819	0					
ANR	3356024	IfStatement	"if ( opline != op_array -> opcodes && ( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE && ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 ) )"		3351819	80					
ANR	3356025	Condition	"opline != op_array -> opcodes && ( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE && ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"	652:7:22309:22750	3351819	0	True				
ANR	3356026	AndExpression	"opline != op_array -> opcodes && ( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE && ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		3351819	0		&&			
ANR	3356027	EqualityExpression	opline != op_array -> opcodes		3351819	0		!=			
ANR	3356028	Identifier	opline		3351819	0					
ANR	3356029	PtrMemberAccess	op_array -> opcodes		3351819	1					
ANR	3356030	Identifier	op_array		3351819	0					
ANR	3356031	Identifier	opcodes		3351819	1					
ANR	3356032	AndExpression	"( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE && ( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		3351819	1		&&			
ANR	3356033	EqualityExpression	( opline - 1 ) -> opcode == ZEND_BEGIN_SILENCE		3351819	0		==			
ANR	3356034	PtrMemberAccess	( opline - 1 ) -> opcode		3351819	0					
ANR	3356035	AdditiveExpression	opline - 1		3351819	0		-			
ANR	3356036	Identifier	opline		3351819	0					
ANR	3356037	PrimaryExpression	1		3351819	1					
ANR	3356038	Identifier	opcode		3351819	1					
ANR	3356039	Identifier	ZEND_BEGIN_SILENCE		3351819	1					
ANR	3356040	AndExpression	"( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL && opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		3351819	1		&&			
ANR	3356041	EqualityExpression	( opline -> extended_value & ZEND_FETCH_TYPE_MASK ) == ZEND_FETCH_LOCAL		3351819	0		==			
ANR	3356042	BitAndExpression	opline -> extended_value & ZEND_FETCH_TYPE_MASK		3351819	0		&			
ANR	3356043	PtrMemberAccess	opline -> extended_value		3351819	0					
ANR	3356044	Identifier	opline		3351819	0					
ANR	3356045	Identifier	extended_value		3351819	1					
ANR	3356046	Identifier	ZEND_FETCH_TYPE_MASK		3351819	1					
ANR	3356047	Identifier	ZEND_FETCH_LOCAL		3351819	1					
ANR	3356048	AndExpression	"opline -> op1_type == IS_CONST && opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		3351819	1		&&			
ANR	3356049	EqualityExpression	opline -> op1_type == IS_CONST		3351819	0		==			
ANR	3356050	PtrMemberAccess	opline -> op1_type		3351819	0					
ANR	3356051	Identifier	opline		3351819	0					
ANR	3356052	Identifier	op1_type		3351819	1					
ANR	3356053	Identifier	IS_CONST		3351819	1					
ANR	3356054	AndExpression	"opline -> op2_type == IS_UNUSED && Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		3351819	1		&&			
ANR	3356055	EqualityExpression	opline -> op2_type == IS_UNUSED		3351819	0		==			
ANR	3356056	PtrMemberAccess	opline -> op2_type		3351819	0					
ANR	3356057	Identifier	opline		3351819	0					
ANR	3356058	Identifier	op2_type		3351819	1					
ANR	3356059	Identifier	IS_UNUSED		3351819	1					
ANR	3356060	AndExpression	"Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING && ( Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0 )"		3351819	1		&&			
ANR	3356061	EqualityExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) ) == IS_STRING		3351819	0		==			
ANR	3356062	CallExpression	Z_TYPE ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3356063	Callee	Z_TYPE		3351819	0					
ANR	3356064	Identifier	Z_TYPE		3351819	0					
ANR	3356065	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3356066	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356067	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356068	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3356069	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3356070	ArgumentList	opline		3351819	1					
ANR	3356071	Argument	opline		3351819	0					
ANR	3356072	Identifier	opline		3351819	0					
ANR	3356073	Identifier	IS_STRING		3351819	1					
ANR	3356074	OrExpression	"Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1 || memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0"		3351819	1		||			
ANR	3356075	EqualityExpression	"Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) ) != sizeof ( ""this"" ) - 1"		3351819	0		!=			
ANR	3356076	CallExpression	Z_STRLEN ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3356077	Callee	Z_STRLEN		3351819	0					
ANR	3356078	Identifier	Z_STRLEN		3351819	0					
ANR	3356079	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3356080	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356081	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356082	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3356083	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3356084	ArgumentList	opline		3351819	1					
ANR	3356085	Argument	opline		3351819	0					
ANR	3356086	Identifier	opline		3351819	0					
ANR	3356087	AdditiveExpression	"sizeof ( ""this"" ) - 1"		3351819	1		-			
ANR	3356088	SizeofExpression	"sizeof ( ""this"" )"		3351819	0					
ANR	3356089	Sizeof	sizeof		3351819	0					
ANR	3356090	PrimaryExpression	"""this"""		3351819	1					
ANR	3356091	PrimaryExpression	1		3351819	1					
ANR	3356092	EqualityExpression	"memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 ) != 0"		3351819	1		!=			
ANR	3356093	CallExpression	"memcmp ( Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) ) , ""this"" , sizeof ( ""this"" ) - 1 )"		3351819	0					
ANR	3356094	Callee	memcmp		3351819	0					
ANR	3356095	Identifier	memcmp		3351819	0					
ANR	3356096	ArgumentList	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		3351819	1					
ANR	3356097	Argument	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3356098	CallExpression	Z_STRVAL ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3356099	Callee	Z_STRVAL		3351819	0					
ANR	3356100	Identifier	Z_STRVAL		3351819	0					
ANR	3356101	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3356102	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356103	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356104	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3356105	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3356106	ArgumentList	opline		3351819	1					
ANR	3356107	Argument	opline		3351819	0					
ANR	3356108	Identifier	opline		3351819	0					
ANR	3356109	Argument	"""this"""		3351819	1					
ANR	3356110	PrimaryExpression	"""this"""		3351819	0					
ANR	3356111	Argument	"sizeof ( ""this"" ) - 1"		3351819	2					
ANR	3356112	AdditiveExpression	"sizeof ( ""this"" ) - 1"		3351819	0		-			
ANR	3356113	SizeofExpression	"sizeof ( ""this"" )"		3351819	0					
ANR	3356114	Sizeof	sizeof		3351819	0					
ANR	3356115	PrimaryExpression	"""this"""		3351819	1					
ANR	3356116	PrimaryExpression	1		3351819	1					
ANR	3356117	PrimaryExpression	0		3351819	1					
ANR	3356118	CompoundStatement		624:4:20853:20872	3351819	1					
ANR	3356119	IdentifierDeclStatement	int var = opline -> result . var ;	661:7:22763:22791	3351819	0	True				
ANR	3356120	IdentifierDecl	var = opline -> result . var		3351819	0					
ANR	3356121	IdentifierDeclType	int		3351819	0					
ANR	3356122	Identifier	var		3351819	1					
ANR	3356123	AssignmentExpression	var = opline -> result . var		3351819	2		=			
ANR	3356124	Identifier	var		3351819	0					
ANR	3356125	MemberAccess	opline -> result . var		3351819	1					
ANR	3356126	PtrMemberAccess	opline -> result		3351819	0					
ANR	3356127	Identifier	opline		3351819	0					
ANR	3356128	Identifier	result		3351819	1					
ANR	3356129	Identifier	var		3351819	1					
ANR	3356130	IdentifierDeclStatement	int level = 0 ;	662:7:22800:22813	3351819	1	True				
ANR	3356131	IdentifierDecl	level = 0		3351819	0					
ANR	3356132	IdentifierDeclType	int		3351819	0					
ANR	3356133	Identifier	level		3351819	1					
ANR	3356134	AssignmentExpression	level = 0		3351819	2		=			
ANR	3356135	Identifier	level		3351819	0					
ANR	3356136	PrimaryExpression	0		3351819	1					
ANR	3356137	IdentifierDeclStatement	zend_op * op = opline + 1 ;	663:4:22819:22843	3351819	2	True				
ANR	3356138	IdentifierDecl	* op = opline + 1		3351819	0					
ANR	3356139	IdentifierDeclType	zend_op *		3351819	0					
ANR	3356140	Identifier	op		3351819	1					
ANR	3356141	AssignmentExpression	* op = opline + 1		3351819	2		=			
ANR	3356142	Identifier	op		3351819	0					
ANR	3356143	AdditiveExpression	opline + 1		3351819	1		+			
ANR	3356144	Identifier	opline		3351819	0					
ANR	3356145	PrimaryExpression	1		3351819	1					
ANR	3356146	IdentifierDeclStatement	zend_op * use = NULL ;	664:4:22849:22868	3351819	3	True				
ANR	3356147	IdentifierDecl	* use = NULL		3351819	0					
ANR	3356148	IdentifierDeclType	zend_op *		3351819	0					
ANR	3356149	Identifier	use		3351819	1					
ANR	3356150	AssignmentExpression	* use = NULL		3351819	2		=			
ANR	3356151	Identifier	NULL		3351819	0					
ANR	3356152	Identifier	NULL		3351819	1					
ANR	3356153	WhileStatement	while ( op < end )		3351819	4					
ANR	3356154	Condition	op < end	666:11:22882:22889	3351819	0	True				
ANR	3356155	RelationalExpression	op < end		3351819	0		<			
ANR	3356156	Identifier	op		3351819	0					
ANR	3356157	Identifier	end		3351819	1					
ANR	3356158	CompoundStatement		626:21:20896:20896	3351819	1					
ANR	3356159	IfStatement	if ( op -> opcode == ZEND_BEGIN_SILENCE )		3351819	0					
ANR	3356160	Condition	op -> opcode == ZEND_BEGIN_SILENCE	667:9:22903:22934	3351819	0	True				
ANR	3356161	EqualityExpression	op -> opcode == ZEND_BEGIN_SILENCE		3351819	0		==			
ANR	3356162	PtrMemberAccess	op -> opcode		3351819	0					
ANR	3356163	Identifier	op		3351819	0					
ANR	3356164	Identifier	opcode		3351819	1					
ANR	3356165	Identifier	ZEND_BEGIN_SILENCE		3351819	1					
ANR	3356166	CompoundStatement		627:43:20941:20941	3351819	1					
ANR	3356167	ExpressionStatement	level ++	668:6:22945:22952	3351819	0	True				
ANR	3356168	PostIncDecOperationExpression	level ++		3351819	0					
ANR	3356169	Identifier	level		3351819	0					
ANR	3356170	IncDec	++		3351819	1					
ANR	3356171	ElseStatement	else		3351819	0					
ANR	3356172	IfStatement	if ( op -> opcode == ZEND_END_SILENCE )		3351819	0					
ANR	3356173	Condition	op -> opcode == ZEND_END_SILENCE	669:16:22970:22999	3351819	0	True				
ANR	3356174	EqualityExpression	op -> opcode == ZEND_END_SILENCE		3351819	0		==			
ANR	3356175	PtrMemberAccess	op -> opcode		3351819	0					
ANR	3356176	Identifier	op		3351819	0					
ANR	3356177	Identifier	opcode		3351819	1					
ANR	3356178	Identifier	ZEND_END_SILENCE		3351819	1					
ANR	3356179	CompoundStatement		629:48:21006:21006	3351819	1					
ANR	3356180	IfStatement	if ( level == 0 )		3351819	0					
ANR	3356181	Condition	level == 0	670:10:23014:23023	3351819	0	True				
ANR	3356182	EqualityExpression	level == 0		3351819	0		==			
ANR	3356183	Identifier	level		3351819	0					
ANR	3356184	PrimaryExpression	0		3351819	1					
ANR	3356185	CompoundStatement		630:22:21030:21030	3351819	1					
ANR	3356186	BreakStatement	break ;	671:7:23035:23040	3351819	0	True				
ANR	3356187	ElseStatement	else		3351819	0					
ANR	3356188	CompoundStatement		632:13:21059:21059	3351819	0					
ANR	3356189	ExpressionStatement	level --	673:7:23064:23071	3351819	0	True				
ANR	3356190	PostIncDecOperationExpression	level --		3351819	0					
ANR	3356191	Identifier	level		3351819	0					
ANR	3356192	IncDec	--		3351819	1					
ANR	3356193	IfStatement	if ( op -> op1_type == IS_VAR && op -> op1 . var == var )		3351819	1					
ANR	3356194	Condition	op -> op1_type == IS_VAR && op -> op1 . var == var	676:9:23097:23140	3351819	0	True				
ANR	3356195	AndExpression	op -> op1_type == IS_VAR && op -> op1 . var == var		3351819	0		&&			
ANR	3356196	EqualityExpression	op -> op1_type == IS_VAR		3351819	0		==			
ANR	3356197	PtrMemberAccess	op -> op1_type		3351819	0					
ANR	3356198	Identifier	op		3351819	0					
ANR	3356199	Identifier	op1_type		3351819	1					
ANR	3356200	Identifier	IS_VAR		3351819	1					
ANR	3356201	EqualityExpression	op -> op1 . var == var		3351819	1		==			
ANR	3356202	MemberAccess	op -> op1 . var		3351819	0					
ANR	3356203	PtrMemberAccess	op -> op1		3351819	0					
ANR	3356204	Identifier	op		3351819	0					
ANR	3356205	Identifier	op1		3351819	1					
ANR	3356206	Identifier	var		3351819	1					
ANR	3356207	Identifier	var		3351819	1					
ANR	3356208	CompoundStatement		636:55:21147:21147	3351819	1					
ANR	3356209	IfStatement	if ( use )		3351819	0					
ANR	3356210	Condition	use	677:10:23155:23157	3351819	0	True				
ANR	3356211	Identifier	use		3351819	0					
ANR	3356212	CompoundStatement		637:15:21164:21164	3351819	1					
ANR	3356213	ExpressionStatement	use = NULL	679:7:23202:23212	3351819	0	True				
ANR	3356214	AssignmentExpression	use = NULL		3351819	0		=			
ANR	3356215	Identifier	use		3351819	0					
ANR	3356216	Identifier	NULL		3351819	1					
ANR	3356217	BreakStatement	break ;	680:7:23221:23226	3351819	1	True				
ANR	3356218	ExpressionStatement	use = op	682:6:23242:23250	3351819	1	True				
ANR	3356219	AssignmentExpression	use = op		3351819	0		=			
ANR	3356220	Identifier	use		3351819	0					
ANR	3356221	Identifier	op		3351819	1					
ANR	3356222	ElseStatement	else		3351819	0					
ANR	3356223	IfStatement	if ( op -> op2_type == IS_VAR && op -> op2 . var == var )		3351819	0					
ANR	3356224	Condition	op -> op2_type == IS_VAR && op -> op2 . var == var	683:16:23268:23311	3351819	0	True				
ANR	3356225	AndExpression	op -> op2_type == IS_VAR && op -> op2 . var == var		3351819	0		&&			
ANR	3356226	EqualityExpression	op -> op2_type == IS_VAR		3351819	0		==			
ANR	3356227	PtrMemberAccess	op -> op2_type		3351819	0					
ANR	3356228	Identifier	op		3351819	0					
ANR	3356229	Identifier	op2_type		3351819	1					
ANR	3356230	Identifier	IS_VAR		3351819	1					
ANR	3356231	EqualityExpression	op -> op2 . var == var		3351819	1		==			
ANR	3356232	MemberAccess	op -> op2 . var		3351819	0					
ANR	3356233	PtrMemberAccess	op -> op2		3351819	0					
ANR	3356234	Identifier	op		3351819	0					
ANR	3356235	Identifier	op2		3351819	1					
ANR	3356236	Identifier	var		3351819	1					
ANR	3356237	Identifier	var		3351819	1					
ANR	3356238	CompoundStatement		643:62:21318:21318	3351819	1					
ANR	3356239	IfStatement	if ( use )		3351819	0					
ANR	3356240	Condition	use	684:10:23326:23328	3351819	0	True				
ANR	3356241	Identifier	use		3351819	0					
ANR	3356242	CompoundStatement		644:15:21335:21335	3351819	1					
ANR	3356243	ExpressionStatement	use = NULL	686:7:23373:23383	3351819	0	True				
ANR	3356244	AssignmentExpression	use = NULL		3351819	0		=			
ANR	3356245	Identifier	use		3351819	0					
ANR	3356246	Identifier	NULL		3351819	1					
ANR	3356247	BreakStatement	break ;	687:7:23392:23397	3351819	1	True				
ANR	3356248	ExpressionStatement	use = op	689:6:23413:23421	3351819	1	True				
ANR	3356249	AssignmentExpression	use = op		3351819	0		=			
ANR	3356250	Identifier	use		3351819	0					
ANR	3356251	Identifier	op		3351819	1					
ANR	3356252	ExpressionStatement	op ++	691:5:23435:23439	3351819	2	True				
ANR	3356253	PostIncDecOperationExpression	op ++		3351819	0					
ANR	3356254	Identifier	op		3351819	0					
ANR	3356255	IncDec	++		3351819	1					
ANR	3356256	IfStatement	if ( use )		3351819	5					
ANR	3356257	Condition	use	693:8:23455:23457	3351819	0	True				
ANR	3356258	Identifier	use		3351819	0					
ANR	3356259	CompoundStatement		653:13:21464:21464	3351819	1					
ANR	3356260	IfStatement	if ( use -> op1_type == IS_VAR && use -> op1 . var == var )		3351819	0					
ANR	3356261	Condition	use -> op1_type == IS_VAR && use -> op1 . var == var	694:9:23471:23516	3351819	0	True				
ANR	3356262	AndExpression	use -> op1_type == IS_VAR && use -> op1 . var == var		3351819	0		&&			
ANR	3356263	EqualityExpression	use -> op1_type == IS_VAR		3351819	0		==			
ANR	3356264	PtrMemberAccess	use -> op1_type		3351819	0					
ANR	3356265	Identifier	use		3351819	0					
ANR	3356266	Identifier	op1_type		3351819	1					
ANR	3356267	Identifier	IS_VAR		3351819	1					
ANR	3356268	EqualityExpression	use -> op1 . var == var		3351819	1		==			
ANR	3356269	MemberAccess	use -> op1 . var		3351819	0					
ANR	3356270	PtrMemberAccess	use -> op1		3351819	0					
ANR	3356271	Identifier	use		3351819	0					
ANR	3356272	Identifier	op1		3351819	1					
ANR	3356273	Identifier	var		3351819	1					
ANR	3356274	Identifier	var		3351819	1					
ANR	3356275	CompoundStatement		654:57:21523:21523	3351819	1					
ANR	3356276	ExpressionStatement	use -> op1_type = IS_CV	695:6:23527:23548	3351819	0	True				
ANR	3356277	AssignmentExpression	use -> op1_type = IS_CV		3351819	0		=			
ANR	3356278	PtrMemberAccess	use -> op1_type		3351819	0					
ANR	3356279	Identifier	use		3351819	0					
ANR	3356280	Identifier	op1_type		3351819	1					
ANR	3356281	Identifier	IS_CV		3351819	1					
ANR	3356282	ExpressionStatement	"use -> op1 . var = zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"	696:6:23556:23645	3351819	1	True				
ANR	3356283	AssignmentExpression	"use -> op1 . var = zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"		3351819	0		=			
ANR	3356284	MemberAccess	use -> op1 . var		3351819	0					
ANR	3356285	PtrMemberAccess	use -> op1		3351819	0					
ANR	3356286	Identifier	use		3351819	0					
ANR	3356287	Identifier	op1		3351819	1					
ANR	3356288	Identifier	var		3351819	1					
ANR	3356289	CallExpression	"zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"		3351819	1					
ANR	3356290	Callee	zend_optimizer_lookup_cv		3351819	0					
ANR	3356291	Identifier	zend_optimizer_lookup_cv		3351819	0					
ANR	3356292	ArgumentList	op_array		3351819	1					
ANR	3356293	Argument	op_array		3351819	0					
ANR	3356294	Identifier	op_array		3351819	0					
ANR	3356295	Argument	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		3351819	1					
ANR	3356296	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3356297	Callee	Z_STR		3351819	0					
ANR	3356298	Identifier	Z_STR		3351819	0					
ANR	3356299	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3356300	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356301	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356302	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3356303	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3356304	ArgumentList	opline		3351819	1					
ANR	3356305	Argument	opline		3351819	0					
ANR	3356306	Identifier	opline		3351819	0					
ANR	3356307	ExpressionStatement	MAKE_NOP ( opline )	698:6:23653:23669	3351819	2	True				
ANR	3356308	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3356309	Callee	MAKE_NOP		3351819	0					
ANR	3356310	Identifier	MAKE_NOP		3351819	0					
ANR	3356311	ArgumentList	opline		3351819	1					
ANR	3356312	Argument	opline		3351819	0					
ANR	3356313	Identifier	opline		3351819	0					
ANR	3356314	ElseStatement	else		3351819	0					
ANR	3356315	IfStatement	if ( use -> op2_type == IS_VAR && use -> op2 . var == var )		3351819	0					
ANR	3356316	Condition	use -> op2_type == IS_VAR && use -> op2 . var == var	699:16:23687:23732	3351819	0	True				
ANR	3356317	AndExpression	use -> op2_type == IS_VAR && use -> op2 . var == var		3351819	0		&&			
ANR	3356318	EqualityExpression	use -> op2_type == IS_VAR		3351819	0		==			
ANR	3356319	PtrMemberAccess	use -> op2_type		3351819	0					
ANR	3356320	Identifier	use		3351819	0					
ANR	3356321	Identifier	op2_type		3351819	1					
ANR	3356322	Identifier	IS_VAR		3351819	1					
ANR	3356323	EqualityExpression	use -> op2 . var == var		3351819	1		==			
ANR	3356324	MemberAccess	use -> op2 . var		3351819	0					
ANR	3356325	PtrMemberAccess	use -> op2		3351819	0					
ANR	3356326	Identifier	use		3351819	0					
ANR	3356327	Identifier	op2		3351819	1					
ANR	3356328	Identifier	var		3351819	1					
ANR	3356329	Identifier	var		3351819	1					
ANR	3356330	CompoundStatement		659:64:21739:21739	3351819	1					
ANR	3356331	ExpressionStatement	use -> op2_type = IS_CV	700:6:23743:23764	3351819	0	True				
ANR	3356332	AssignmentExpression	use -> op2_type = IS_CV		3351819	0		=			
ANR	3356333	PtrMemberAccess	use -> op2_type		3351819	0					
ANR	3356334	Identifier	use		3351819	0					
ANR	3356335	Identifier	op2_type		3351819	1					
ANR	3356336	Identifier	IS_CV		3351819	1					
ANR	3356337	ExpressionStatement	"use -> op2 . var = zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"	701:6:23772:23861	3351819	1	True				
ANR	3356338	AssignmentExpression	"use -> op2 . var = zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"		3351819	0		=			
ANR	3356339	MemberAccess	use -> op2 . var		3351819	0					
ANR	3356340	PtrMemberAccess	use -> op2		3351819	0					
ANR	3356341	Identifier	use		3351819	0					
ANR	3356342	Identifier	op2		3351819	1					
ANR	3356343	Identifier	var		3351819	1					
ANR	3356344	CallExpression	"zend_optimizer_lookup_cv ( op_array , Z_STR ( ZEND_OP1_LITERAL ( opline ) ) )"		3351819	1					
ANR	3356345	Callee	zend_optimizer_lookup_cv		3351819	0					
ANR	3356346	Identifier	zend_optimizer_lookup_cv		3351819	0					
ANR	3356347	ArgumentList	op_array		3351819	1					
ANR	3356348	Argument	op_array		3351819	0					
ANR	3356349	Identifier	op_array		3351819	0					
ANR	3356350	Argument	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		3351819	1					
ANR	3356351	CallExpression	Z_STR ( ZEND_OP1_LITERAL ( opline ) )		3351819	0					
ANR	3356352	Callee	Z_STR		3351819	0					
ANR	3356353	Identifier	Z_STR		3351819	0					
ANR	3356354	ArgumentList	ZEND_OP1_LITERAL ( opline )		3351819	1					
ANR	3356355	Argument	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356356	CallExpression	ZEND_OP1_LITERAL ( opline )		3351819	0					
ANR	3356357	Callee	ZEND_OP1_LITERAL		3351819	0					
ANR	3356358	Identifier	ZEND_OP1_LITERAL		3351819	0					
ANR	3356359	ArgumentList	opline		3351819	1					
ANR	3356360	Argument	opline		3351819	0					
ANR	3356361	Identifier	opline		3351819	0					
ANR	3356362	ExpressionStatement	MAKE_NOP ( opline )	703:6:23869:23885	3351819	2	True				
ANR	3356363	CallExpression	MAKE_NOP ( opline )		3351819	0					
ANR	3356364	Callee	MAKE_NOP		3351819	0					
ANR	3356365	Identifier	MAKE_NOP		3351819	0					
ANR	3356366	ArgumentList	opline		3351819	1					
ANR	3356367	Argument	opline		3351819	0					
ANR	3356368	Identifier	opline		3351819	0					
ANR	3356369	BreakStatement	break ;	707:3:23908:23913	3351819	81	True				
ANR	3356370	ExpressionStatement	opline ++	709:2:23921:23929	3351819	1	True				
ANR	3356371	PostIncDecOperationExpression	opline ++		3351819	0					
ANR	3356372	Identifier	opline		3351819	0					
ANR	3356373	IncDec	++		3351819	1					
ANR	3356374	ExpressionStatement	i ++	710:2:23933:23936	3351819	2	True				
ANR	3356375	PostIncDecOperationExpression	i ++		3351819	0					
ANR	3356376	Identifier	i		3351819	0					
ANR	3356377	IncDec	++		3351819	1					
ANR	3356378	ReturnType	void		3351819	1					
ANR	3356379	Identifier	zend_optimizer_pass1		3351819	2					
ANR	3356380	ParameterList	"zend_op_array * op_array , zend_optimizer_ctx * ctx"		3351819	3					
ANR	3356381	Parameter	zend_op_array * op_array	40:26:1945:1967	3351819	0	True				
ANR	3356382	ParameterType	zend_op_array *		3351819	0					
ANR	3356383	Identifier	op_array		3351819	1					
ANR	3356384	Parameter	zend_optimizer_ctx * ctx	40:51:1970:1992	3351819	1	True				
ANR	3356385	ParameterType	zend_optimizer_ctx *		3351819	0					
ANR	3356386	Identifier	ctx		3351819	1					
ANR	3356387	CFGEntryNode	ENTRY		3351819		True				
ANR	3356388	CFGExitNode	EXIT		3351819		True				
ANR	3356389	Symbol	zend_optimizer_replace_by_const		3351819						
ANR	3356390	Symbol	get_binary_op		3351819						
ANR	3356391	Symbol	send1_opline		3351819						
ANR	3356392	Symbol	error_reporting		3351819						
ANR	3356393	Symbol	* ce		3351819						
ANR	3356394	Symbol	ZEND_OP2_TYPE		3351819						
ANR	3356395	Symbol	ZEND_ADD_STRING		3351819						
ANR	3356396	Symbol	* init_opline		3351819						
ANR	3356397	Symbol	ZEND_RESULT ( opline ) . var		3351819						
ANR	3356398	Symbol	* opline -> op1		3351819						
ANR	3356399	Symbol	ZEND_INIT_FCALL		3351819						
ANR	3356400	Symbol	ce -> info . internal		3351819						
ANR	3356401	Symbol	ZEND_INTERNAL_CLASS		3351819						
ANR	3356402	Symbol	IS_CONST		3351819						
ANR	3356403	Symbol	ctx		3351819						
ANR	3356404	Symbol	ZEND_SR		3351819						
ANR	3356405	Symbol	zend_binary_strcasecmp		3351819						
ANR	3356406	Symbol	unary_op		3351819						
ANR	3356407	Symbol	ZEND_SL		3351819						
ANR	3356408	Symbol	* op_array		3351819						
ANR	3356409	Symbol	send2_opline -> op1 . constant		3351819						
ANR	3356410	Symbol	str		3351819						
ANR	3356411	Symbol	ctx -> constants		3351819						
ANR	3356412	Symbol	* ce -> info		3351819						
ANR	3356413	Symbol	ce -> info		3351819						
ANR	3356414	Symbol	* * op_array		3351819						
ANR	3356415	Symbol	ZEND_BEGIN_SILENCE		3351819						
ANR	3356416	Symbol	result		3351819						
ANR	3356417	Symbol	str -> val		3351819						
ANR	3356418	Symbol	init_opline -> opcode		3351819						
ANR	3356419	Symbol	send1_opline -> op1		3351819						
ANR	3356420	Symbol	send1_opline -> op2		3351819						
ANR	3356421	Symbol	binary_op		3351819						
ANR	3356422	Symbol	ce		3351819						
ANR	3356423	Symbol	SUCCESS		3351819						
ANR	3356424	Symbol	c		3351819						
ANR	3356425	Symbol	CG		3351819						
ANR	3356426	Symbol	MODULE_PERSISTENT		3351819						
ANR	3356427	Symbol	i		3351819						
ANR	3356428	Symbol	zend_memnstr		3351819						
ANR	3356429	Symbol	& fake_execute_data		3351819						
ANR	3356430	Symbol	m		3351819						
ANR	3356431	Symbol	send2_opline -> op1		3351819						
ANR	3356432	Symbol	ZEND_JMP		3351819						
ANR	3356433	Symbol	ZEND_FETCH_CLASS		3351819						
ANR	3356434	Symbol	t		3351819						
ANR	3356435	Symbol	send1_opline -> op2 . num		3351819						
ANR	3356436	Symbol	ZEND_OP2_LITERAL		3351819						
ANR	3356437	Symbol	opline -> op2_type		3351819						
ANR	3356438	Symbol	IS_OBJECT		3351819						
ANR	3356439	Symbol	opline -> result . var		3351819						
ANR	3356440	Symbol	tv		3351819						
ANR	3356441	Symbol	* send2_opline		3351819						
ANR	3356442	Symbol	ZEND_ADD_CHAR		3351819						
ANR	3356443	Symbol	opline -> extended_value		3351819						
ANR	3356444	Symbol	opline -> result		3351819						
ANR	3356445	Symbol	zend_string_tolower		3351819						
ANR	3356446	Symbol	_IS_BOOL		3351819						
ANR	3356447	Symbol	opline		3351819						
ANR	3356448	Symbol	memcmp		3351819						
ANR	3356449	Symbol	use -> op1 . var		3351819						
ANR	3356450	Symbol	zend_hash_find_ptr		3351819						
ANR	3356451	Symbol	enable_dl		3351819						
ANR	3356452	Symbol	IS_TMP_VAR		3351819						
ANR	3356453	Symbol	( opline - 1 ) -> opcode		3351819						
ANR	3356454	Symbol	res		3351819						
ANR	3356455	Symbol	EG		3351819						
ANR	3356456	Symbol	str -> len		3351819						
ANR	3356457	Symbol	& module_registry		3351819						
ANR	3356458	Symbol	er		3351819						
ANR	3356459	Symbol	opline -> op1_type		3351819						
ANR	3356460	Symbol	ZEND_SEND_VAL		3351819						
ANR	3356461	Symbol	next_op		3351819						
ANR	3356462	Symbol	op_array -> literals		3351819						
ANR	3356463	Symbol	send1_opline -> opcode		3351819						
ANR	3356464	Symbol	ZEND_CE_FILENAME		3351819						
ANR	3356465	Symbol	Z_STR_P		3351819						
ANR	3356466	Symbol	requires_conversion		3351819						
ANR	3356467	Symbol	RESULT_UNUSED		3351819						
ANR	3356468	Symbol	ZEND_FN		3351819						
ANR	3356469	Symbol	use -> op2_type		3351819						
ANR	3356470	Symbol	ZEND_OPTIMIZER_PASS_5		3351819						
ANR	3356471	Symbol	Z_STRLEN		3351819						
ANR	3356472	Symbol	compiler_options		3351819						
ANR	3356473	Symbol	( opline + 1 ) -> opcode		3351819						
ANR	3356474	Symbol	end		3351819						
ANR	3356475	Symbol	use -> op1_type		3351819						
ANR	3356476	Symbol	ZEND_END_SILENCE		3351819						
ANR	3356477	Symbol	op -> op1_type		3351819						
ANR	3356478	Symbol	& ZEND_OP2_LITERAL		3351819						
ANR	3356479	Symbol	& c		3351819						
ANR	3356480	Symbol	ZEND_FETCH_LOCAL		3351819						
ANR	3356481	Symbol	Z_TYPE_P		3351819						
ANR	3356482	Symbol	op_array -> scope		3351819						
ANR	3356483	Symbol	ptr		3351819						
ANR	3356484	Symbol	ZEND_OP1_TYPE		3351819						
ANR	3356485	Symbol	* use		3351819						
ANR	3356486	Symbol	func		3351819						
ANR	3356487	Symbol	ZSTR_LEN		3351819						
ANR	3356488	Symbol	& t		3351819						
ANR	3356489	Symbol	IS_UNUSED		3351819						
ANR	3356490	Symbol	ZEND_BOOL		3351819						
ANR	3356491	Symbol	Z_LVAL		3351819						
ANR	3356492	Symbol	Z_TYPE		3351819						
ANR	3356493	Symbol	send2_opline		3351819						
ANR	3356494	Symbol	zend_optimizer_is_disabled_func		3351819						
ANR	3356495	Symbol	next_op -> opcode		3351819						
ANR	3356496	Symbol	use -> op1		3351819						
ANR	3356497	Symbol	use -> op2		3351819						
ANR	3356498	Symbol	type		3351819						
ANR	3356499	Symbol	dirname		3351819						
ANR	3356500	Symbol	~ZEND_FETCH_CLASS_NO_AUTOLOAD		3351819						
ANR	3356501	Symbol	zend_hash_find		3351819						
ANR	3356502	Symbol	zend_string_init		3351819						
ANR	3356503	Symbol	ZEND_USER_CLASS		3351819						
ANR	3356504	Symbol	( opline - 1 ) -> extended_value		3351819						
ANR	3356505	Symbol	send1_opline -> op1 . constant		3351819						
ANR	3356506	Symbol	zend_optimizer_lookup_cv		3351819						
ANR	3356507	Symbol	& ctx -> script -> main_op_array		3351819						
ANR	3356508	Symbol	last_op		3351819						
ANR	3356509	Symbol	fake_execute_data . func		3351819						
ANR	3356510	Symbol	var		3351819						
ANR	3356511	Symbol	ce -> info . internal . module		3351819						
ANR	3356512	Symbol	zend_dirname		3351819						
ANR	3356513	Symbol	& ZEND_OP1_LITERAL		3351819						
ANR	3356514	Symbol	lc_name		3351819						
ANR	3356515	Symbol	IS_ABSOLUTE_PATH		3351819						
ANR	3356516	Symbol	ZEND_OP1_LITERAL		3351819						
ANR	3356517	Symbol	chval		3351819						
ANR	3356518	Symbol	IS_VAR		3351819						
ANR	3356519	Symbol	IS_RESOURCE		3351819						
ANR	3356520	Symbol	final_length		3351819						
ANR	3356521	Symbol	* op_array -> scope		3351819						
ANR	3356522	Symbol	zend_optimizer_get_collected_constant		3351819						
ANR	3356523	Symbol	ce -> type		3351819						
ANR	3356524	Symbol	orig_execute_data		3351819						
ANR	3356525	Symbol	op -> opcode		3351819						
ANR	3356526	Symbol	op -> op2_type		3351819						
ANR	3356527	Symbol	op -> op2 . var		3351819						
ANR	3356528	Symbol	strncasecmp		3351819						
ANR	3356529	Symbol	* opline -> op1 . constant		3351819						
ANR	3356530	Symbol	use -> op2 . var		3351819						
ANR	3356531	Symbol	ZEND_COMPILE_NO_BUILTIN_STRLEN		3351819						
ANR	3356532	Symbol	IS_ARRAY		3351819						
ANR	3356533	Symbol	opline -> op1 . constant		3351819						
ANR	3356534	Symbol	collect_constants		3351819						
ANR	3356535	Symbol	* final_length		3351819						
ANR	3356536	Symbol	* str		3351819						
ANR	3356537	Symbol	* * opline		3351819						
ANR	3356538	Symbol	fake_execute_data		3351819						
ANR	3356539	Symbol	* func		3351819						
ANR	3356540	Symbol	ce -> info . internal . module -> type		3351819						
ANR	3356541	Symbol	ZEND_FETCH_TYPE_MASK		3351819						
ANR	3356542	Symbol	* ctx		3351819						
ANR	3356543	Symbol	ZEND_OP1		3351819						
ANR	3356544	Symbol	ZEND_DIV		3351819						
ANR	3356545	Symbol	* opline		3351819						
ANR	3356546	Symbol	opline -> op2 . constant		3351819						
ANR	3356547	Symbol	op -> op1 . var		3351819						
ANR	3356548	Symbol	ZEND_RESULT ( next_op ) . var		3351819						
ANR	3356549	Symbol	op_array		3351819						
ANR	3356550	Symbol	& res		3351819						
ANR	3356551	Symbol	ZEND_DECLARE_CONST		3351819						
ANR	3356552	Symbol	IS_CV		3351819						
ANR	3356553	Symbol	* op		3351819						
ANR	3356554	Symbol	get_unary_op		3351819						
ANR	3356555	Symbol	use		3351819						
ANR	3356556	Symbol	current_execute_data		3351819						
ANR	3356557	Symbol	* send1_opline		3351819						
ANR	3356558	Symbol	Z_STR		3351819						
ANR	3356559	Symbol	* op_array -> literals		3351819						
ANR	3356560	Symbol	ZEND_OP1 ( opline + 1 ) . opline_num		3351819						
ANR	3356561	Symbol	ZEND_FETCH_CLASS_SELF		3351819						
ANR	3356562	Symbol	* ptr		3351819						
ANR	3356563	Symbol	op -> op2		3351819						
ANR	3356564	Symbol	IS_STRING		3351819						
ANR	3356565	Symbol	op -> op1		3351819						
ANR	3356566	Symbol	zend_string_alloc		3351819						
ANR	3356567	Symbol	NULL		3351819						
ANR	3356568	Symbol	offset		3351819						
ANR	3356569	Symbol	level		3351819						
ANR	3356570	Symbol	ctx -> script		3351819						
ANR	3356571	Symbol	display_disabled_function		3351819						
ANR	3356572	Symbol	ZEND_NOP		3351819						
ANR	3356573	Symbol	op_array -> last		3351819						
ANR	3356574	Symbol	zend_get_constant_str		3351819						
ANR	3356575	Symbol	* ce -> info . internal		3351819						
ANR	3356576	Symbol	zval_get_long		3351819						
ANR	3356577	Symbol	op_array -> filename		3351819						
ANR	3356578	Symbol	* next_op		3351819						
ANR	3356579	Symbol	ZEND_OPTIMIZER_PASS_10		3351819						
ANR	3356580	Symbol	opline -> op1		3351819						
ANR	3356581	Symbol	opline -> op2		3351819						
ANR	3356582	Symbol	ZEND_IS_CONSTANT_TYPE		3351819						
ANR	3356583	Symbol	IS_CONSTANT_AST		3351819						
ANR	3356584	Symbol	init_opline		3351819						
ANR	3356585	Symbol	* * ce		3351819						
ANR	3356586	Symbol	op_array -> opcodes		3351819						
ANR	3356587	Symbol	& result		3351819						
ANR	3356588	Symbol	ZEND_RESULT		3351819						
ANR	3356589	Symbol	Z_STRVAL		3351819						
ANR	3356590	Symbol	OPTIMIZATION_LEVEL		3351819						
ANR	3356591	Symbol	ZEND_RESULT ( ( opline - 1 ) ) . var		3351819						
ANR	3356592	Symbol	class_table		3351819						
ANR	3356593	Symbol	zend_optimizer_get_persistent_constant		3351819						
ANR	3356594	Symbol	opline -> result . num		3351819						
ANR	3356595	Symbol	opline -> result_type		3351819						
ANR	3356596	Symbol	op		3351819						
ANR	3356597	Symbol	ZEND_OP1 ( opline ) . var		3351819						
ANR	3356598	Symbol	* ce -> info . internal . module		3351819						
ANR	3356599	Symbol	ZSTR_VAL		3351819						
ANR	3356600	Symbol	& ce -> constants_table		3351819						
ANR	3356601	Symbol	opline -> opcode		3351819						
ANR	3356602	Symbol	PG		3351819						
ANR	3356603	Symbol	ZEND_MOD		3351819						
ANR	3356604	Symbol	op_array -> scope -> name		3351819						
ANR	3356605	Symbol	func -> handler		3351819						
