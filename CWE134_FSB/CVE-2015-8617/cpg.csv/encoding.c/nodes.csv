command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	494220	File	data/converged/CVE-2015-8617_php-src/encoding.c								
ANR	494221	DeclStmt									
ANR	494222	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_ascii
ANR	494223	DeclStmt									
ANR	494224	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_utf8_with_BOM
ANR	494225	DeclStmt									
ANR	494226	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_ucs16
ANR	494227	DeclStmt									
ANR	494228	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_latin1
ANR	494229	DeclStmt									
ANR	494230	Decl							int	"int ( const unsigned char * , size_t , unichar * , size_t * )"	looks_extended
ANR	494231	DeclStmt									
ANR	494232	Decl							void	"void ( const unsigned char * , size_t , unsigned char * )"	from_ebcdic
ANR	494233	Function	file_encoding	67:10:2724:4992							
ANR	494234	FunctionDef	"file_encoding (struct magic_set * ms , const unsigned char * buf , size_t nbytes , unichar * * ubuf , size_t * ulen , const char * * code , const char * * code_mime , const char * * type)"		494233	0					
ANR	494235	CompoundStatement		69:0:2897:4992	494233	0					
ANR	494236	IdentifierDeclStatement	size_t mlen ;	70:1:2900:2911	494233	0	True				
ANR	494237	IdentifierDecl	mlen		494233	0					
ANR	494238	IdentifierDeclType	size_t		494233	0					
ANR	494239	Identifier	mlen		494233	1					
ANR	494240	IdentifierDeclStatement	"int rv = 1 , ucs_type ;"	71:1:2914:2934	494233	1	True				
ANR	494241	IdentifierDecl	rv = 1		494233	0					
ANR	494242	IdentifierDeclType	int		494233	0					
ANR	494243	Identifier	rv		494233	1					
ANR	494244	AssignmentExpression	rv = 1		494233	2		=			
ANR	494245	Identifier	rv		494233	0					
ANR	494246	PrimaryExpression	1		494233	1					
ANR	494247	IdentifierDecl	ucs_type		494233	1					
ANR	494248	IdentifierDeclType	int		494233	0					
ANR	494249	Identifier	ucs_type		494233	1					
ANR	494250	IdentifierDeclStatement	unsigned char * nbuf = NULL ;	72:1:2937:2963	494233	2	True				
ANR	494251	IdentifierDecl	* nbuf = NULL		494233	0					
ANR	494252	IdentifierDeclType	unsigned char *		494233	0					
ANR	494253	Identifier	nbuf		494233	1					
ANR	494254	AssignmentExpression	* nbuf = NULL		494233	2		=			
ANR	494255	Identifier	NULL		494233	0					
ANR	494256	Identifier	NULL		494233	1					
ANR	494257	ExpressionStatement	"* type = ""text"""	74:1:2967:2981	494233	3	True				
ANR	494258	AssignmentExpression	"* type = ""text"""		494233	0		=			
ANR	494259	UnaryOperationExpression	* type		494233	0					
ANR	494260	UnaryOperator	*		494233	0					
ANR	494261	Identifier	type		494233	1					
ANR	494262	PrimaryExpression	"""text"""		494233	1					
ANR	494263	ExpressionStatement	* ulen = 0	75:1:2984:2993	494233	4	True				
ANR	494264	AssignmentExpression	* ulen = 0		494233	0		=			
ANR	494265	UnaryOperationExpression	* ulen		494233	0					
ANR	494266	UnaryOperator	*		494233	0					
ANR	494267	Identifier	ulen		494233	1					
ANR	494268	PrimaryExpression	0		494233	1					
ANR	494269	ExpressionStatement	"* code = ""unknown"""	76:1:2996:3013	494233	5	True				
ANR	494270	AssignmentExpression	"* code = ""unknown"""		494233	0		=			
ANR	494271	UnaryOperationExpression	* code		494233	0					
ANR	494272	UnaryOperator	*		494233	0					
ANR	494273	Identifier	code		494233	1					
ANR	494274	PrimaryExpression	"""unknown"""		494233	1					
ANR	494275	ExpressionStatement	"* code_mime = ""binary"""	77:1:3016:3037	494233	6	True				
ANR	494276	AssignmentExpression	"* code_mime = ""binary"""		494233	0		=			
ANR	494277	UnaryOperationExpression	* code_mime		494233	0					
ANR	494278	UnaryOperator	*		494233	0					
ANR	494279	Identifier	code_mime		494233	1					
ANR	494280	PrimaryExpression	"""binary"""		494233	1					
ANR	494281	ExpressionStatement	mlen = ( nbytes + 1 ) * sizeof ( ( * ubuf ) [ 0 ] )	79:1:3041:3081	494233	7	True				
ANR	494282	AssignmentExpression	mlen = ( nbytes + 1 ) * sizeof ( ( * ubuf ) [ 0 ] )		494233	0		=			
ANR	494283	Identifier	mlen		494233	0					
ANR	494284	MultiplicativeExpression	( nbytes + 1 ) * sizeof ( ( * ubuf ) [ 0 ] )		494233	1		*			
ANR	494285	AdditiveExpression	nbytes + 1		494233	0		+			
ANR	494286	Identifier	nbytes		494233	0					
ANR	494287	PrimaryExpression	1		494233	1					
ANR	494288	SizeofExpression	sizeof ( ( * ubuf ) [ 0 ] )		494233	1					
ANR	494289	Sizeof	sizeof		494233	0					
ANR	494290	ArrayIndexing	( * ubuf ) [ 0 ]		494233	1					
ANR	494291	UnaryOperationExpression	* ubuf		494233	0					
ANR	494292	UnaryOperator	*		494233	0					
ANR	494293	Identifier	ubuf		494233	1					
ANR	494294	PrimaryExpression	0		494233	1					
ANR	494295	Statement	if	80:1:3084:3085	494233	8	True				
ANR	494296	Statement	(	80:4:3087:3087	494233	9	True				
ANR	494297	Statement	(	80:5:3088:3088	494233	10	True				
ANR	494298	Statement	*	80:6:3089:3089	494233	11	True				
ANR	494299	Statement	ubuf	80:7:3090:3093	494233	12	True				
ANR	494300	Statement	=	80:12:3095:3095	494233	13	True				
ANR	494301	Statement	CAST	80:14:3097:3100	494233	14	True				
ANR	494302	Statement	(	80:18:3101:3101	494233	15	True				
ANR	494303	Statement	unichar	80:19:3102:3108	494233	16	True				
ANR	494304	Statement	*	80:27:3110:3110	494233	17	True				
ANR	494305	Statement	","	80:28:3111:3111	494233	18	True				
ANR	494306	Statement	calloc	80:30:3113:3118	494233	19	True				
ANR	494307	Statement	(	80:36:3119:3119	494233	20	True				
ANR	494308	Statement	(	80:37:3120:3120	494233	21	True				
ANR	494309	Statement	size_t	80:38:3121:3126	494233	22	True				
ANR	494310	Statement	)	80:44:3127:3127	494233	23	True				
ANR	494311	Statement	1	80:45:3128:3128	494233	24	True				
ANR	494312	Statement	","	80:46:3129:3129	494233	25	True				
ANR	494313	Statement	mlen	80:48:3131:3134	494233	26	True				
ANR	494314	Statement	)	80:52:3135:3135	494233	27	True				
ANR	494315	Statement	)	80:53:3136:3136	494233	28	True				
ANR	494316	Statement	)	80:54:3137:3137	494233	29	True				
ANR	494317	Statement	==	80:56:3139:3140	494233	30	True				
ANR	494318	Statement	NULL	80:59:3142:3145	494233	31	True				
ANR	494319	Statement	)	80:63:3146:3146	494233	32	True				
ANR	494320	CompoundStatement		12:65:250:250	494233	33					
ANR	494321	ExpressionStatement	"file_oomem ( ms , mlen )"	81:2:3152:3172	494233	0	True				
ANR	494322	CallExpression	"file_oomem ( ms , mlen )"		494233	0					
ANR	494323	Callee	file_oomem		494233	0					
ANR	494324	Identifier	file_oomem		494233	0					
ANR	494325	ArgumentList	ms		494233	1					
ANR	494326	Argument	ms		494233	0					
ANR	494327	Identifier	ms		494233	0					
ANR	494328	Argument	mlen		494233	1					
ANR	494329	Identifier	mlen		494233	0					
ANR	494330	GotoStatement	goto done ;	82:2:3176:3185	494233	1	True				
ANR	494331	Identifier	done		494233	0					
ANR	494332	ExpressionStatement	mlen = ( nbytes + 1 ) * sizeof ( nbuf [ 0 ] )	84:1:3191:3228	494233	34	True				
ANR	494333	AssignmentExpression	mlen = ( nbytes + 1 ) * sizeof ( nbuf [ 0 ] )		494233	0		=			
ANR	494334	Identifier	mlen		494233	0					
ANR	494335	MultiplicativeExpression	( nbytes + 1 ) * sizeof ( nbuf [ 0 ] )		494233	1		*			
ANR	494336	AdditiveExpression	nbytes + 1		494233	0		+			
ANR	494337	Identifier	nbytes		494233	0					
ANR	494338	PrimaryExpression	1		494233	1					
ANR	494339	SizeofExpression	sizeof ( nbuf [ 0 ] )		494233	1					
ANR	494340	Sizeof	sizeof		494233	0					
ANR	494341	ArrayIndexing	nbuf [ 0 ]		494233	1					
ANR	494342	Identifier	nbuf		494233	0					
ANR	494343	PrimaryExpression	0		494233	1					
ANR	494344	Statement	if	85:1:3231:3232	494233	35	True				
ANR	494345	Statement	(	85:4:3234:3234	494233	36	True				
ANR	494346	Statement	(	85:5:3235:3235	494233	37	True				
ANR	494347	Statement	nbuf	85:6:3236:3239	494233	38	True				
ANR	494348	Statement	=	85:11:3241:3241	494233	39	True				
ANR	494349	Statement	CAST	85:13:3243:3246	494233	40	True				
ANR	494350	Statement	(	85:17:3247:3247	494233	41	True				
ANR	494351	Statement	unsigned	85:18:3248:3255	494233	42	True				
ANR	494352	Statement	char	85:27:3257:3260	494233	43	True				
ANR	494353	Statement	*	85:32:3262:3262	494233	44	True				
ANR	494354	Statement	","	85:33:3263:3263	494233	45	True				
ANR	494355	Statement	calloc	85:35:3265:3270	494233	46	True				
ANR	494356	Statement	(	85:41:3271:3271	494233	47	True				
ANR	494357	Statement	(	85:42:3272:3272	494233	48	True				
ANR	494358	Statement	size_t	85:43:3273:3278	494233	49	True				
ANR	494359	Statement	)	85:49:3279:3279	494233	50	True				
ANR	494360	Statement	1	85:50:3280:3280	494233	51	True				
ANR	494361	Statement	","	85:51:3281:3281	494233	52	True				
ANR	494362	Statement	mlen	85:53:3283:3286	494233	53	True				
ANR	494363	Statement	)	85:57:3287:3287	494233	54	True				
ANR	494364	Statement	)	85:58:3288:3288	494233	55	True				
ANR	494365	Statement	)	85:59:3289:3289	494233	56	True				
ANR	494366	Statement	==	85:61:3291:3292	494233	57	True				
ANR	494367	Statement	NULL	85:64:3294:3297	494233	58	True				
ANR	494368	Statement	)	85:68:3298:3298	494233	59	True				
ANR	494369	CompoundStatement		17:70:402:402	494233	60					
ANR	494370	ExpressionStatement	"file_oomem ( ms , mlen )"	86:2:3304:3324	494233	0	True				
ANR	494371	CallExpression	"file_oomem ( ms , mlen )"		494233	0					
ANR	494372	Callee	file_oomem		494233	0					
ANR	494373	Identifier	file_oomem		494233	0					
ANR	494374	ArgumentList	ms		494233	1					
ANR	494375	Argument	ms		494233	0					
ANR	494376	Identifier	ms		494233	0					
ANR	494377	Argument	mlen		494233	1					
ANR	494378	Identifier	mlen		494233	0					
ANR	494379	GotoStatement	goto done ;	87:2:3328:3337	494233	1	True				
ANR	494380	Identifier	done		494233	0					
ANR	494381	IfStatement	"if ( looks_ascii ( buf , nbytes , * ubuf , ulen ) )"		494233	61					
ANR	494382	Condition	"looks_ascii ( buf , nbytes , * ubuf , ulen )"	90:5:3348:3384	494233	0	True				
ANR	494383	CallExpression	"looks_ascii ( buf , nbytes , * ubuf , ulen )"		494233	0					
ANR	494384	Callee	looks_ascii		494233	0					
ANR	494385	Identifier	looks_ascii		494233	0					
ANR	494386	ArgumentList	buf		494233	1					
ANR	494387	Argument	buf		494233	0					
ANR	494388	Identifier	buf		494233	0					
ANR	494389	Argument	nbytes		494233	1					
ANR	494390	Identifier	nbytes		494233	0					
ANR	494391	Argument	* ubuf		494233	2					
ANR	494392	UnaryOperationExpression	* ubuf		494233	0					
ANR	494393	UnaryOperator	*		494233	0					
ANR	494394	Identifier	ubuf		494233	1					
ANR	494395	Argument	ulen		494233	3					
ANR	494396	Identifier	ulen		494233	0					
ANR	494397	CompoundStatement		22:44:489:489	494233	1					
ANR	494398	Statement	DPRINTF	91:2:3391:3397	494233	0	True				
ANR	494399	Statement	(	91:9:3398:3398	494233	1	True				
ANR	494400	Statement	(	91:10:3399:3399	494233	2	True				
ANR	494401	Statement	"""ascii %"""	91:11:3400:3408	494233	3	True				
ANR	494402	Statement	SIZE_T_FORMAT	91:21:3410:3422	494233	4	True				
ANR	494403	Statement	"""u\\n"""	91:35:3424:3428	494233	5	True				
ANR	494404	Statement	","	91:40:3429:3429	494233	6	True				
ANR	494405	Statement	*	91:42:3431:3431	494233	7	True				
ANR	494406	Statement	ulen	91:43:3432:3435	494233	8	True				
ANR	494407	Statement	)	91:47:3436:3436	494233	9	True				
ANR	494408	Statement	)	91:48:3437:3437	494233	10	True				
ANR	494409	ExpressionStatement		91:49:3438:3438	494233	11	True				
ANR	494410	ExpressionStatement	"* code = ""ASCII"""	92:2:3442:3457	494233	12	True				
ANR	494411	AssignmentExpression	"* code = ""ASCII"""		494233	0		=			
ANR	494412	UnaryOperationExpression	* code		494233	0					
ANR	494413	UnaryOperator	*		494233	0					
ANR	494414	Identifier	code		494233	1					
ANR	494415	PrimaryExpression	"""ASCII"""		494233	1					
ANR	494416	ExpressionStatement	"* code_mime = ""us-ascii"""	93:2:3461:3484	494233	13	True				
ANR	494417	AssignmentExpression	"* code_mime = ""us-ascii"""		494233	0		=			
ANR	494418	UnaryOperationExpression	* code_mime		494233	0					
ANR	494419	UnaryOperator	*		494233	0					
ANR	494420	Identifier	code_mime		494233	1					
ANR	494421	PrimaryExpression	"""us-ascii"""		494233	1					
ANR	494422	ElseStatement	else		494233	0					
ANR	494423	IfStatement	"if ( looks_utf8_with_BOM ( buf , nbytes , * ubuf , ulen ) > 0 )"		494233	0					
ANR	494424	Condition	"looks_utf8_with_BOM ( buf , nbytes , * ubuf , ulen ) > 0"	94:12:3498:3546	494233	0	True				
ANR	494425	RelationalExpression	"looks_utf8_with_BOM ( buf , nbytes , * ubuf , ulen ) > 0"		494233	0		>			
ANR	494426	CallExpression	"looks_utf8_with_BOM ( buf , nbytes , * ubuf , ulen )"		494233	0					
ANR	494427	Callee	looks_utf8_with_BOM		494233	0					
ANR	494428	Identifier	looks_utf8_with_BOM		494233	0					
ANR	494429	ArgumentList	buf		494233	1					
ANR	494430	Argument	buf		494233	0					
ANR	494431	Identifier	buf		494233	0					
ANR	494432	Argument	nbytes		494233	1					
ANR	494433	Identifier	nbytes		494233	0					
ANR	494434	Argument	* ubuf		494233	2					
ANR	494435	UnaryOperationExpression	* ubuf		494233	0					
ANR	494436	UnaryOperator	*		494233	0					
ANR	494437	Identifier	ubuf		494233	1					
ANR	494438	Argument	ulen		494233	3					
ANR	494439	Identifier	ulen		494233	0					
ANR	494440	PrimaryExpression	0		494233	1					
ANR	494441	CompoundStatement		26:63:651:651	494233	1					
ANR	494442	Statement	DPRINTF	95:2:3553:3559	494233	0	True				
ANR	494443	Statement	(	95:9:3560:3560	494233	1	True				
ANR	494444	Statement	(	95:10:3561:3561	494233	2	True				
ANR	494445	Statement	"""utf8/bom %"""	95:11:3562:3573	494233	3	True				
ANR	494446	Statement	SIZE_T_FORMAT	95:24:3575:3587	494233	4	True				
ANR	494447	Statement	"""u\\n"""	95:38:3589:3593	494233	5	True				
ANR	494448	Statement	","	95:43:3594:3594	494233	6	True				
ANR	494449	Statement	*	95:45:3596:3596	494233	7	True				
ANR	494450	Statement	ulen	95:46:3597:3600	494233	8	True				
ANR	494451	Statement	)	95:50:3601:3601	494233	9	True				
ANR	494452	Statement	)	95:51:3602:3602	494233	10	True				
ANR	494453	ExpressionStatement		95:52:3603:3603	494233	11	True				
ANR	494454	ExpressionStatement	"* code = ""UTF-8 Unicode (with BOM)"""	96:2:3607:3641	494233	12	True				
ANR	494455	AssignmentExpression	"* code = ""UTF-8 Unicode (with BOM)"""		494233	0		=			
ANR	494456	UnaryOperationExpression	* code		494233	0					
ANR	494457	UnaryOperator	*		494233	0					
ANR	494458	Identifier	code		494233	1					
ANR	494459	PrimaryExpression	"""UTF-8 Unicode (with BOM)"""		494233	1					
ANR	494460	ExpressionStatement	"* code_mime = ""utf-8"""	97:2:3645:3665	494233	13	True				
ANR	494461	AssignmentExpression	"* code_mime = ""utf-8"""		494233	0		=			
ANR	494462	UnaryOperationExpression	* code_mime		494233	0					
ANR	494463	UnaryOperator	*		494233	0					
ANR	494464	Identifier	code_mime		494233	1					
ANR	494465	PrimaryExpression	"""utf-8"""		494233	1					
ANR	494466	ElseStatement	else		494233	0					
ANR	494467	IfStatement	"if ( file_looks_utf8 ( buf , nbytes , * ubuf , ulen ) > 1 )"		494233	0					
ANR	494468	Condition	"file_looks_utf8 ( buf , nbytes , * ubuf , ulen ) > 1"	98:12:3679:3723	494233	0	True				
ANR	494469	RelationalExpression	"file_looks_utf8 ( buf , nbytes , * ubuf , ulen ) > 1"		494233	0		>			
ANR	494470	CallExpression	"file_looks_utf8 ( buf , nbytes , * ubuf , ulen )"		494233	0					
ANR	494471	Callee	file_looks_utf8		494233	0					
ANR	494472	Identifier	file_looks_utf8		494233	0					
ANR	494473	ArgumentList	buf		494233	1					
ANR	494474	Argument	buf		494233	0					
ANR	494475	Identifier	buf		494233	0					
ANR	494476	Argument	nbytes		494233	1					
ANR	494477	Identifier	nbytes		494233	0					
ANR	494478	Argument	* ubuf		494233	2					
ANR	494479	UnaryOperationExpression	* ubuf		494233	0					
ANR	494480	UnaryOperator	*		494233	0					
ANR	494481	Identifier	ubuf		494233	1					
ANR	494482	Argument	ulen		494233	3					
ANR	494483	Identifier	ulen		494233	0					
ANR	494484	PrimaryExpression	1		494233	1					
ANR	494485	CompoundStatement		30:59:828:828	494233	1					
ANR	494486	Statement	DPRINTF	99:2:3730:3736	494233	0	True				
ANR	494487	Statement	(	99:9:3737:3737	494233	1	True				
ANR	494488	Statement	(	99:10:3738:3738	494233	2	True				
ANR	494489	Statement	"""utf8 %"""	99:11:3739:3746	494233	3	True				
ANR	494490	Statement	SIZE_T_FORMAT	99:20:3748:3760	494233	4	True				
ANR	494491	Statement	"""u\\n"""	99:34:3762:3766	494233	5	True				
ANR	494492	Statement	","	99:39:3767:3767	494233	6	True				
ANR	494493	Statement	*	99:41:3769:3769	494233	7	True				
ANR	494494	Statement	ulen	99:42:3770:3773	494233	8	True				
ANR	494495	Statement	)	99:46:3774:3774	494233	9	True				
ANR	494496	Statement	)	99:47:3775:3775	494233	10	True				
ANR	494497	ExpressionStatement		99:48:3776:3776	494233	11	True				
ANR	494498	ExpressionStatement	"* code = ""UTF-8 Unicode"""	100:2:3780:3803	494233	12	True				
ANR	494499	AssignmentExpression	"* code = ""UTF-8 Unicode"""		494233	0		=			
ANR	494500	UnaryOperationExpression	* code		494233	0					
ANR	494501	UnaryOperator	*		494233	0					
ANR	494502	Identifier	code		494233	1					
ANR	494503	PrimaryExpression	"""UTF-8 Unicode"""		494233	1					
ANR	494504	ExpressionStatement	"* code_mime = ""utf-8"""	101:2:3807:3827	494233	13	True				
ANR	494505	AssignmentExpression	"* code_mime = ""utf-8"""		494233	0		=			
ANR	494506	UnaryOperationExpression	* code_mime		494233	0					
ANR	494507	UnaryOperator	*		494233	0					
ANR	494508	Identifier	code_mime		494233	1					
ANR	494509	PrimaryExpression	"""utf-8"""		494233	1					
ANR	494510	ElseStatement	else		494233	0					
ANR	494511	IfStatement	"if ( ( ucs_type = looks_ucs16 ( buf , nbytes , * ubuf , ulen ) ) != 0 )"		494233	0					
ANR	494512	Condition	"( ucs_type = looks_ucs16 ( buf , nbytes , * ubuf , ulen ) ) != 0"	102:12:3841:3895	494233	0	True				
ANR	494513	EqualityExpression	"( ucs_type = looks_ucs16 ( buf , nbytes , * ubuf , ulen ) ) != 0"		494233	0		!=			
ANR	494514	AssignmentExpression	"ucs_type = looks_ucs16 ( buf , nbytes , * ubuf , ulen )"		494233	0		=			
ANR	494515	Identifier	ucs_type		494233	0					
ANR	494516	CallExpression	"looks_ucs16 ( buf , nbytes , * ubuf , ulen )"		494233	1					
ANR	494517	Callee	looks_ucs16		494233	0					
ANR	494518	Identifier	looks_ucs16		494233	0					
ANR	494519	ArgumentList	buf		494233	1					
ANR	494520	Argument	buf		494233	0					
ANR	494521	Identifier	buf		494233	0					
ANR	494522	Argument	nbytes		494233	1					
ANR	494523	Identifier	nbytes		494233	0					
ANR	494524	Argument	* ubuf		494233	2					
ANR	494525	UnaryOperationExpression	* ubuf		494233	0					
ANR	494526	UnaryOperator	*		494233	0					
ANR	494527	Identifier	ubuf		494233	1					
ANR	494528	Argument	ulen		494233	3					
ANR	494529	Identifier	ulen		494233	0					
ANR	494530	PrimaryExpression	0		494233	1					
ANR	494531	CompoundStatement		34:69:1000:1000	494233	1					
ANR	494532	IfStatement	if ( ucs_type == 1 )		494233	0					
ANR	494533	Condition	ucs_type == 1	103:6:3906:3918	494233	0	True				
ANR	494534	EqualityExpression	ucs_type == 1		494233	0		==			
ANR	494535	Identifier	ucs_type		494233	0					
ANR	494536	PrimaryExpression	1		494233	1					
ANR	494537	CompoundStatement		35:21:1023:1023	494233	1					
ANR	494538	ExpressionStatement	"* code = ""Little-endian UTF-16 Unicode"""	104:3:3926:3964	494233	0	True				
ANR	494539	AssignmentExpression	"* code = ""Little-endian UTF-16 Unicode"""		494233	0		=			
ANR	494540	UnaryOperationExpression	* code		494233	0					
ANR	494541	UnaryOperator	*		494233	0					
ANR	494542	Identifier	code		494233	1					
ANR	494543	PrimaryExpression	"""Little-endian UTF-16 Unicode"""		494233	1					
ANR	494544	ExpressionStatement	"* code_mime = ""utf-16le"""	105:3:3969:3992	494233	1	True				
ANR	494545	AssignmentExpression	"* code_mime = ""utf-16le"""		494233	0		=			
ANR	494546	UnaryOperationExpression	* code_mime		494233	0					
ANR	494547	UnaryOperator	*		494233	0					
ANR	494548	Identifier	code_mime		494233	1					
ANR	494549	PrimaryExpression	"""utf-16le"""		494233	1					
ANR	494550	ElseStatement	else		494233	0					
ANR	494551	CompoundStatement		38:9:1105:1105	494233	0					
ANR	494552	ExpressionStatement	"* code = ""Big-endian UTF-16 Unicode"""	107:3:4008:4043	494233	0	True				
ANR	494553	AssignmentExpression	"* code = ""Big-endian UTF-16 Unicode"""		494233	0		=			
ANR	494554	UnaryOperationExpression	* code		494233	0					
ANR	494555	UnaryOperator	*		494233	0					
ANR	494556	Identifier	code		494233	1					
ANR	494557	PrimaryExpression	"""Big-endian UTF-16 Unicode"""		494233	1					
ANR	494558	ExpressionStatement	"* code_mime = ""utf-16be"""	108:3:4048:4071	494233	1	True				
ANR	494559	AssignmentExpression	"* code_mime = ""utf-16be"""		494233	0		=			
ANR	494560	UnaryOperationExpression	* code_mime		494233	0					
ANR	494561	UnaryOperator	*		494233	0					
ANR	494562	Identifier	code_mime		494233	1					
ANR	494563	PrimaryExpression	"""utf-16be"""		494233	1					
ANR	494564	Statement	DPRINTF	110:2:4079:4085	494233	1	True				
ANR	494565	Statement	(	110:9:4086:4086	494233	2	True				
ANR	494566	Statement	(	110:10:4087:4087	494233	3	True				
ANR	494567	Statement	"""ucs16 %"""	110:11:4088:4096	494233	4	True				
ANR	494568	Statement	SIZE_T_FORMAT	110:21:4098:4110	494233	5	True				
ANR	494569	Statement	"""u\\n"""	110:35:4112:4116	494233	6	True				
ANR	494570	Statement	","	110:40:4117:4117	494233	7	True				
ANR	494571	Statement	*	110:42:4119:4119	494233	8	True				
ANR	494572	Statement	ulen	110:43:4120:4123	494233	9	True				
ANR	494573	Statement	)	110:47:4124:4124	494233	10	True				
ANR	494574	Statement	)	110:48:4125:4125	494233	11	True				
ANR	494575	ExpressionStatement		110:49:4126:4126	494233	12	True				
ANR	494576	ElseStatement	else		494233	0					
ANR	494577	IfStatement	"if ( looks_latin1 ( buf , nbytes , * ubuf , ulen ) )"		494233	0					
ANR	494578	Condition	"looks_latin1 ( buf , nbytes , * ubuf , ulen )"	111:12:4140:4177	494233	0	True				
ANR	494579	CallExpression	"looks_latin1 ( buf , nbytes , * ubuf , ulen )"		494233	0					
ANR	494580	Callee	looks_latin1		494233	0					
ANR	494581	Identifier	looks_latin1		494233	0					
ANR	494582	ArgumentList	buf		494233	1					
ANR	494583	Argument	buf		494233	0					
ANR	494584	Identifier	buf		494233	0					
ANR	494585	Argument	nbytes		494233	1					
ANR	494586	Identifier	nbytes		494233	0					
ANR	494587	Argument	* ubuf		494233	2					
ANR	494588	UnaryOperationExpression	* ubuf		494233	0					
ANR	494589	UnaryOperator	*		494233	0					
ANR	494590	Identifier	ubuf		494233	1					
ANR	494591	Argument	ulen		494233	3					
ANR	494592	Identifier	ulen		494233	0					
ANR	494593	CompoundStatement		43:52:1282:1282	494233	1					
ANR	494594	Statement	DPRINTF	112:2:4184:4190	494233	0	True				
ANR	494595	Statement	(	112:9:4191:4191	494233	1	True				
ANR	494596	Statement	(	112:10:4192:4192	494233	2	True				
ANR	494597	Statement	"""latin1 %"""	112:11:4193:4202	494233	3	True				
ANR	494598	Statement	SIZE_T_FORMAT	112:22:4204:4216	494233	4	True				
ANR	494599	Statement	"""u\\n"""	112:36:4218:4222	494233	5	True				
ANR	494600	Statement	","	112:41:4223:4223	494233	6	True				
ANR	494601	Statement	*	112:43:4225:4225	494233	7	True				
ANR	494602	Statement	ulen	112:44:4226:4229	494233	8	True				
ANR	494603	Statement	)	112:48:4230:4230	494233	9	True				
ANR	494604	Statement	)	112:49:4231:4231	494233	10	True				
ANR	494605	ExpressionStatement		112:50:4232:4232	494233	11	True				
ANR	494606	ExpressionStatement	"* code = ""ISO-8859"""	113:2:4236:4254	494233	12	True				
ANR	494607	AssignmentExpression	"* code = ""ISO-8859"""		494233	0		=			
ANR	494608	UnaryOperationExpression	* code		494233	0					
ANR	494609	UnaryOperator	*		494233	0					
ANR	494610	Identifier	code		494233	1					
ANR	494611	PrimaryExpression	"""ISO-8859"""		494233	1					
ANR	494612	ExpressionStatement	"* code_mime = ""iso-8859-1"""	114:2:4258:4283	494233	13	True				
ANR	494613	AssignmentExpression	"* code_mime = ""iso-8859-1"""		494233	0		=			
ANR	494614	UnaryOperationExpression	* code_mime		494233	0					
ANR	494615	UnaryOperator	*		494233	0					
ANR	494616	Identifier	code_mime		494233	1					
ANR	494617	PrimaryExpression	"""iso-8859-1"""		494233	1					
ANR	494618	ElseStatement	else		494233	0					
ANR	494619	IfStatement	"if ( looks_extended ( buf , nbytes , * ubuf , ulen ) )"		494233	0					
ANR	494620	Condition	"looks_extended ( buf , nbytes , * ubuf , ulen )"	115:12:4297:4336	494233	0	True				
ANR	494621	CallExpression	"looks_extended ( buf , nbytes , * ubuf , ulen )"		494233	0					
ANR	494622	Callee	looks_extended		494233	0					
ANR	494623	Identifier	looks_extended		494233	0					
ANR	494624	ArgumentList	buf		494233	1					
ANR	494625	Argument	buf		494233	0					
ANR	494626	Identifier	buf		494233	0					
ANR	494627	Argument	nbytes		494233	1					
ANR	494628	Identifier	nbytes		494233	0					
ANR	494629	Argument	* ubuf		494233	2					
ANR	494630	UnaryOperationExpression	* ubuf		494233	0					
ANR	494631	UnaryOperator	*		494233	0					
ANR	494632	Identifier	ubuf		494233	1					
ANR	494633	Argument	ulen		494233	3					
ANR	494634	Identifier	ulen		494233	0					
ANR	494635	CompoundStatement		47:54:1441:1441	494233	1					
ANR	494636	Statement	DPRINTF	116:2:4343:4349	494233	0	True				
ANR	494637	Statement	(	116:9:4350:4350	494233	1	True				
ANR	494638	Statement	(	116:10:4351:4351	494233	2	True				
ANR	494639	Statement	"""extended %"""	116:11:4352:4363	494233	3	True				
ANR	494640	Statement	SIZE_T_FORMAT	116:24:4365:4377	494233	4	True				
ANR	494641	Statement	"""u\\n"""	116:38:4379:4383	494233	5	True				
ANR	494642	Statement	","	116:43:4384:4384	494233	6	True				
ANR	494643	Statement	*	116:45:4386:4386	494233	7	True				
ANR	494644	Statement	ulen	116:46:4387:4390	494233	8	True				
ANR	494645	Statement	)	116:50:4391:4391	494233	9	True				
ANR	494646	Statement	)	116:51:4392:4392	494233	10	True				
ANR	494647	ExpressionStatement		116:52:4393:4393	494233	11	True				
ANR	494648	ExpressionStatement	"* code = ""Non-ISO extended-ASCII"""	117:2:4397:4429	494233	12	True				
ANR	494649	AssignmentExpression	"* code = ""Non-ISO extended-ASCII"""		494233	0		=			
ANR	494650	UnaryOperationExpression	* code		494233	0					
ANR	494651	UnaryOperator	*		494233	0					
ANR	494652	Identifier	code		494233	1					
ANR	494653	PrimaryExpression	"""Non-ISO extended-ASCII"""		494233	1					
ANR	494654	ExpressionStatement	"* code_mime = ""unknown-8bit"""	118:2:4433:4460	494233	13	True				
ANR	494655	AssignmentExpression	"* code_mime = ""unknown-8bit"""		494233	0		=			
ANR	494656	UnaryOperationExpression	* code_mime		494233	0					
ANR	494657	UnaryOperator	*		494233	0					
ANR	494658	Identifier	code_mime		494233	1					
ANR	494659	PrimaryExpression	"""unknown-8bit"""		494233	1					
ANR	494660	ElseStatement	else		494233	0					
ANR	494661	CompoundStatement		51:8:1572:1572	494233	0					
ANR	494662	ExpressionStatement	"from_ebcdic ( buf , nbytes , nbuf )"	120:2:4474:4504	494233	0	True				
ANR	494663	CallExpression	"from_ebcdic ( buf , nbytes , nbuf )"		494233	0					
ANR	494664	Callee	from_ebcdic		494233	0					
ANR	494665	Identifier	from_ebcdic		494233	0					
ANR	494666	ArgumentList	buf		494233	1					
ANR	494667	Argument	buf		494233	0					
ANR	494668	Identifier	buf		494233	0					
ANR	494669	Argument	nbytes		494233	1					
ANR	494670	Identifier	nbytes		494233	0					
ANR	494671	Argument	nbuf		494233	2					
ANR	494672	Identifier	nbuf		494233	0					
ANR	494673	IfStatement	"if ( looks_ascii ( nbuf , nbytes , * ubuf , ulen ) )"		494233	1					
ANR	494674	Condition	"looks_ascii ( nbuf , nbytes , * ubuf , ulen )"	122:6:4513:4550	494233	0	True				
ANR	494675	CallExpression	"looks_ascii ( nbuf , nbytes , * ubuf , ulen )"		494233	0					
ANR	494676	Callee	looks_ascii		494233	0					
ANR	494677	Identifier	looks_ascii		494233	0					
ANR	494678	ArgumentList	nbuf		494233	1					
ANR	494679	Argument	nbuf		494233	0					
ANR	494680	Identifier	nbuf		494233	0					
ANR	494681	Argument	nbytes		494233	1					
ANR	494682	Identifier	nbytes		494233	0					
ANR	494683	Argument	* ubuf		494233	2					
ANR	494684	UnaryOperationExpression	* ubuf		494233	0					
ANR	494685	UnaryOperator	*		494233	0					
ANR	494686	Identifier	ubuf		494233	1					
ANR	494687	Argument	ulen		494233	3					
ANR	494688	Identifier	ulen		494233	0					
ANR	494689	CompoundStatement		54:46:1655:1655	494233	1					
ANR	494690	Statement	DPRINTF	123:3:4558:4564	494233	0	True				
ANR	494691	Statement	(	123:10:4565:4565	494233	1	True				
ANR	494692	Statement	(	123:11:4566:4566	494233	2	True				
ANR	494693	Statement	"""ebcdic %"""	123:12:4567:4576	494233	3	True				
ANR	494694	Statement	SIZE_T_FORMAT	123:23:4578:4590	494233	4	True				
ANR	494695	Statement	"""u\\n"""	123:37:4592:4596	494233	5	True				
ANR	494696	Statement	","	123:42:4597:4597	494233	6	True				
ANR	494697	Statement	*	123:44:4599:4599	494233	7	True				
ANR	494698	Statement	ulen	123:45:4600:4603	494233	8	True				
ANR	494699	Statement	)	123:49:4604:4604	494233	9	True				
ANR	494700	Statement	)	123:50:4605:4605	494233	10	True				
ANR	494701	ExpressionStatement		123:51:4606:4606	494233	11	True				
ANR	494702	ExpressionStatement	"* code = ""EBCDIC"""	124:3:4611:4627	494233	12	True				
ANR	494703	AssignmentExpression	"* code = ""EBCDIC"""		494233	0		=			
ANR	494704	UnaryOperationExpression	* code		494233	0					
ANR	494705	UnaryOperator	*		494233	0					
ANR	494706	Identifier	code		494233	1					
ANR	494707	PrimaryExpression	"""EBCDIC"""		494233	1					
ANR	494708	ExpressionStatement	"* code_mime = ""ebcdic"""	125:3:4632:4653	494233	13	True				
ANR	494709	AssignmentExpression	"* code_mime = ""ebcdic"""		494233	0		=			
ANR	494710	UnaryOperationExpression	* code_mime		494233	0					
ANR	494711	UnaryOperator	*		494233	0					
ANR	494712	Identifier	code_mime		494233	1					
ANR	494713	PrimaryExpression	"""ebcdic"""		494233	1					
ANR	494714	ElseStatement	else		494233	0					
ANR	494715	IfStatement	"if ( looks_latin1 ( nbuf , nbytes , * ubuf , ulen ) )"		494233	0					
ANR	494716	Condition	"looks_latin1 ( nbuf , nbytes , * ubuf , ulen )"	126:13:4668:4706	494233	0	True				
ANR	494717	CallExpression	"looks_latin1 ( nbuf , nbytes , * ubuf , ulen )"		494233	0					
ANR	494718	Callee	looks_latin1		494233	0					
ANR	494719	Identifier	looks_latin1		494233	0					
ANR	494720	ArgumentList	nbuf		494233	1					
ANR	494721	Argument	nbuf		494233	0					
ANR	494722	Identifier	nbuf		494233	0					
ANR	494723	Argument	nbytes		494233	1					
ANR	494724	Identifier	nbytes		494233	0					
ANR	494725	Argument	* ubuf		494233	2					
ANR	494726	UnaryOperationExpression	* ubuf		494233	0					
ANR	494727	UnaryOperator	*		494233	0					
ANR	494728	Identifier	ubuf		494233	1					
ANR	494729	Argument	ulen		494233	3					
ANR	494730	Identifier	ulen		494233	0					
ANR	494731	CompoundStatement		58:54:1811:1811	494233	1					
ANR	494732	Statement	DPRINTF	127:3:4714:4720	494233	0	True				
ANR	494733	Statement	(	127:10:4721:4721	494233	1	True				
ANR	494734	Statement	(	127:11:4722:4722	494233	2	True				
ANR	494735	Statement	"""ebcdic/international %"""	127:12:4723:4746	494233	3	True				
ANR	494736	Statement	SIZE_T_FORMAT	127:37:4748:4760	494233	4	True				
ANR	494737	Statement	"""u\\n"""	127:51:4762:4766	494233	5	True				
ANR	494738	Statement	","	127:56:4767:4767	494233	6	True				
ANR	494739	Statement	*	128:7:4776:4776	494233	7	True				
ANR	494740	Statement	ulen	128:8:4777:4780	494233	8	True				
ANR	494741	Statement	)	128:12:4781:4781	494233	9	True				
ANR	494742	Statement	)	128:13:4782:4782	494233	10	True				
ANR	494743	ExpressionStatement		128:14:4783:4783	494233	11	True				
ANR	494744	ExpressionStatement	"* code = ""International EBCDIC"""	129:3:4788:4818	494233	12	True				
ANR	494745	AssignmentExpression	"* code = ""International EBCDIC"""		494233	0		=			
ANR	494746	UnaryOperationExpression	* code		494233	0					
ANR	494747	UnaryOperator	*		494233	0					
ANR	494748	Identifier	code		494233	1					
ANR	494749	PrimaryExpression	"""International EBCDIC"""		494233	1					
ANR	494750	ExpressionStatement	"* code_mime = ""ebcdic"""	130:3:4823:4844	494233	13	True				
ANR	494751	AssignmentExpression	"* code_mime = ""ebcdic"""		494233	0		=			
ANR	494752	UnaryOperationExpression	* code_mime		494233	0					
ANR	494753	UnaryOperator	*		494233	0					
ANR	494754	Identifier	code_mime		494233	1					
ANR	494755	PrimaryExpression	"""ebcdic"""		494233	1					
ANR	494756	ElseStatement	else		494233	0					
ANR	494757	CompoundStatement		63:9:1957:1957	494233	0					
ANR	494758	ExpressionStatement	"DPRINTF ( ( ""binary\\n"" ) )"	132:3:4896:4917	494233	0	True				
ANR	494759	CallExpression	"DPRINTF ( ( ""binary\\n"" ) )"		494233	0					
ANR	494760	Callee	DPRINTF		494233	0					
ANR	494761	Identifier	DPRINTF		494233	0					
ANR	494762	ArgumentList	"""binary\\n"""		494233	1					
ANR	494763	Argument	"""binary\\n"""		494233	0					
ANR	494764	PrimaryExpression	"""binary\\n"""		494233	0					
ANR	494765	ExpressionStatement	rv = 0	133:3:4922:4928	494233	1	True				
ANR	494766	AssignmentExpression	rv = 0		494233	0		=			
ANR	494767	Identifier	rv		494233	0					
ANR	494768	PrimaryExpression	0		494233	1					
ANR	494769	ExpressionStatement	"* type = ""binary"""	134:3:4933:4949	494233	2	True				
ANR	494770	AssignmentExpression	"* type = ""binary"""		494233	0		=			
ANR	494771	UnaryOperationExpression	* type		494233	0					
ANR	494772	UnaryOperator	*		494233	0					
ANR	494773	Identifier	type		494233	1					
ANR	494774	PrimaryExpression	"""binary"""		494233	1					
ANR	494775	Label	done :	138:1:4960:4964	494233	62	True				
ANR	494776	Identifier	done		494233	0					
ANR	494777	ExpressionStatement	free ( nbuf )	139:1:4967:4977	494233	63	True				
ANR	494778	CallExpression	free ( nbuf )		494233	0					
ANR	494779	Callee	free		494233	0					
ANR	494780	Identifier	free		494233	0					
ANR	494781	ArgumentList	nbuf		494233	1					
ANR	494782	Argument	nbuf		494233	0					
ANR	494783	Identifier	nbuf		494233	0					
ANR	494784	ReturnStatement	return rv ;	141:1:4981:4990	494233	64	True				
ANR	494785	Identifier	rv		494233	0					
ANR	494786	ReturnType	int		494233	1					
ANR	494787	Identifier	file_encoding		494233	2					
ANR	494788	ParameterList	"struct magic_set * ms , const unsigned char * buf , size_t nbytes , unichar * * ubuf , size_t * ulen , const char * * code , const char * * code_mime , const char * * type"		494233	3					
ANR	494789	Parameter	struct magic_set * ms	68:14:2742:2761	494233	0	True				
ANR	494790	ParameterType	struct magic_set *		494233	0					
ANR	494791	Identifier	ms		494233	1					
ANR	494792	Parameter	const unsigned char * buf	68:36:2764:2787	494233	1	True				
ANR	494793	ParameterType	const unsigned char *		494233	0					
ANR	494794	Identifier	buf		494233	1					
ANR	494795	Parameter	size_t nbytes	68:62:2790:2802	494233	2	True				
ANR	494796	ParameterType	size_t		494233	0					
ANR	494797	Identifier	nbytes		494233	1					
ANR	494798	Parameter	unichar * * ubuf	68:77:2805:2818	494233	3	True				
ANR	494799	ParameterType	unichar * *		494233	0					
ANR	494800	Identifier	ubuf		494233	1					
ANR	494801	Parameter	size_t * ulen	68:93:2821:2832	494233	4	True				
ANR	494802	ParameterType	size_t *		494233	0					
ANR	494803	Identifier	ulen		494233	1					
ANR	494804	Parameter	const char * * code	68:107:2835:2851	494233	5	True				
ANR	494805	ParameterType	const char * *		494233	0					
ANR	494806	Identifier	code		494233	1					
ANR	494807	Parameter	const char * * code_mime	68:126:2854:2875	494233	6	True				
ANR	494808	ParameterType	const char * *		494233	0					
ANR	494809	Identifier	code_mime		494233	1					
ANR	494810	Parameter	const char * * type	68:150:2878:2894	494233	7	True				
ANR	494811	ParameterType	const char * *		494233	0					
ANR	494812	Identifier	type		494233	1					
ANR	494813	CFGEntryNode	ENTRY		494233		True				
ANR	494814	CFGExitNode	EXIT		494233		True				
ANR	494815	Symbol	code		494233						
ANR	494816	Symbol	rv		494233						
ANR	494817	Symbol	code_mime		494233						
ANR	494818	Symbol	type		494233						
ANR	494819	Symbol	* ulen		494233						
ANR	494820	Symbol	* code_mime		494233						
ANR	494821	Symbol	* type		494233						
ANR	494822	Symbol	* * ubuf		494233						
ANR	494823	Symbol	* nbuf		494233						
ANR	494824	Symbol	NULL		494233						
ANR	494825	Symbol	looks_latin1		494233						
ANR	494826	Symbol	ms		494233						
ANR	494827	Symbol	ubuf		494233						
ANR	494828	Symbol	file_looks_utf8		494233						
ANR	494829	Symbol	looks_utf8_with_BOM		494233						
ANR	494830	Symbol	nbytes		494233						
ANR	494831	Symbol	* ubuf		494233						
ANR	494832	Symbol	buf		494233						
ANR	494833	Symbol	ucs_type		494233						
ANR	494834	Symbol	looks_ascii		494233						
ANR	494835	Symbol	ulen		494233						
ANR	494836	Symbol	nbuf		494233						
ANR	494837	Symbol	looks_ucs16		494233						
ANR	494838	Symbol	mlen		494233						
ANR	494839	Symbol	looks_extended		494233						
ANR	494840	Symbol	* code		494233						
ANR	494841	DeclStmt									
ANR	494842	Decl							char	char [ 256 ]	text_chars
ANR	494843	Function	looks_ascii	223:8:9258:9509							
ANR	494844	FunctionDef	"looks_ascii (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		494843	0					
ANR	494845	CompoundStatement		226:0:9348:9509	494843	0					
ANR	494846	IdentifierDeclStatement	size_t i ;	227:1:9351:9359	494843	0	True				
ANR	494847	IdentifierDecl	i		494843	0					
ANR	494848	IdentifierDeclType	size_t		494843	0					
ANR	494849	Identifier	i		494843	1					
ANR	494850	ExpressionStatement	* ulen = 0	229:1:9363:9372	494843	1	True				
ANR	494851	AssignmentExpression	* ulen = 0		494843	0		=			
ANR	494852	UnaryOperationExpression	* ulen		494843	0					
ANR	494853	UnaryOperator	*		494843	0					
ANR	494854	Identifier	ulen		494843	1					
ANR	494855	PrimaryExpression	0		494843	1					
ANR	494856	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		494843	2					
ANR	494857	ForInit	i = 0 ;	231:6:9381:9386	494843	0	True				
ANR	494858	AssignmentExpression	i = 0		494843	0		=			
ANR	494859	Identifier	i		494843	0					
ANR	494860	PrimaryExpression	0		494843	1					
ANR	494861	Condition	i < nbytes	231:13:9388:9397	494843	1	True				
ANR	494862	RelationalExpression	i < nbytes		494843	0		<			
ANR	494863	Identifier	i		494843	0					
ANR	494864	Identifier	nbytes		494843	1					
ANR	494865	PostIncDecOperationExpression	i ++	231:25:9400:9402	494843	2	True				
ANR	494866	Identifier	i		494843	0					
ANR	494867	IncDec	++		494843	1					
ANR	494868	CompoundStatement		7:2:60:86	494843	3					
ANR	494869	IdentifierDeclStatement	int t = text_chars [ buf [ i ] ] ;	232:2:9409:9435	494843	0	True				
ANR	494870	IdentifierDecl	t = text_chars [ buf [ i ] ]		494843	0					
ANR	494871	IdentifierDeclType	int		494843	0					
ANR	494872	Identifier	t		494843	1					
ANR	494873	AssignmentExpression	t = text_chars [ buf [ i ] ]		494843	2		=			
ANR	494874	Identifier	t		494843	0					
ANR	494875	ArrayIndexing	text_chars [ buf [ i ] ]		494843	1					
ANR	494876	Identifier	text_chars		494843	0					
ANR	494877	ArrayIndexing	buf [ i ]		494843	1					
ANR	494878	Identifier	buf		494843	0					
ANR	494879	Identifier	i		494843	1					
ANR	494880	IfStatement	if ( t != T )		494843	1					
ANR	494881	Condition	t != T	234:6:9444:9449	494843	0	True				
ANR	494882	EqualityExpression	t != T		494843	0		!=			
ANR	494883	Identifier	t		494843	0					
ANR	494884	Identifier	T		494843	1					
ANR	494885	ReturnStatement	return 0 ;	235:3:9455:9463	494843	1	True				
ANR	494886	PrimaryExpression	0		494843	0					
ANR	494887	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ]	237:2:9468:9492	494843	2	True				
ANR	494888	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ]		494843	0		=			
ANR	494889	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		494843	0					
ANR	494890	Identifier	ubuf		494843	0					
ANR	494891	PostIncDecOperationExpression	( * ulen ) ++		494843	1					
ANR	494892	UnaryOperationExpression	* ulen		494843	0					
ANR	494893	UnaryOperator	*		494843	0					
ANR	494894	Identifier	ulen		494843	1					
ANR	494895	IncDec	++		494843	1					
ANR	494896	ArrayIndexing	buf [ i ]		494843	1					
ANR	494897	Identifier	buf		494843	0					
ANR	494898	Identifier	i		494843	1					
ANR	494899	ReturnStatement	return 1 ;	240:1:9499:9507	494843	3	True				
ANR	494900	PrimaryExpression	1		494843	0					
ANR	494901	ReturnType	int		494843	1					
ANR	494902	Identifier	looks_ascii		494843	2					
ANR	494903	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		494843	3					
ANR	494904	Parameter	const unsigned char * buf	224:12:9274:9297	494843	0	True				
ANR	494905	ParameterType	const unsigned char *		494843	0					
ANR	494906	Identifier	buf		494843	1					
ANR	494907	Parameter	size_t nbytes	224:38:9300:9312	494843	1	True				
ANR	494908	ParameterType	size_t		494843	0					
ANR	494909	Identifier	nbytes		494843	1					
ANR	494910	Parameter	unichar * ubuf	224:53:9315:9327	494843	2	True				
ANR	494911	ParameterType	unichar *		494843	0					
ANR	494912	Identifier	ubuf		494843	1					
ANR	494913	Parameter	size_t * ulen	225:4:9334:9345	494843	3	True				
ANR	494914	ParameterType	size_t *		494843	0					
ANR	494915	Identifier	ulen		494843	1					
ANR	494916	CFGEntryNode	ENTRY		494843		True				
ANR	494917	CFGExitNode	EXIT		494843		True				
ANR	494918	Symbol	* buf		494843						
ANR	494919	Symbol	* * i		494843						
ANR	494920	Symbol	* text_chars		494843						
ANR	494921	Symbol	* * buf		494843						
ANR	494922	Symbol	ubuf		494843						
ANR	494923	Symbol	i		494843						
ANR	494924	Symbol	text_chars		494843						
ANR	494925	Symbol	nbytes		494843						
ANR	494926	Symbol	* ubuf		494843						
ANR	494927	Symbol	buf		494843						
ANR	494928	Symbol	* ulen		494843						
ANR	494929	Symbol	* i		494843						
ANR	494930	Symbol	t		494843						
ANR	494931	Symbol	T		494843						
ANR	494932	Symbol	ulen		494843						
ANR	494933	Function	looks_latin1	243:8:9520:9778							
ANR	494934	FunctionDef	"looks_latin1 (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		494933	0					
ANR	494935	CompoundStatement		245:0:9607:9778	494933	0					
ANR	494936	IdentifierDeclStatement	size_t i ;	246:1:9610:9618	494933	0	True				
ANR	494937	IdentifierDecl	i		494933	0					
ANR	494938	IdentifierDeclType	size_t		494933	0					
ANR	494939	Identifier	i		494933	1					
ANR	494940	ExpressionStatement	* ulen = 0	248:1:9622:9631	494933	1	True				
ANR	494941	AssignmentExpression	* ulen = 0		494933	0		=			
ANR	494942	UnaryOperationExpression	* ulen		494933	0					
ANR	494943	UnaryOperator	*		494933	0					
ANR	494944	Identifier	ulen		494933	1					
ANR	494945	PrimaryExpression	0		494933	1					
ANR	494946	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		494933	2					
ANR	494947	ForInit	i = 0 ;	250:6:9640:9645	494933	0	True				
ANR	494948	AssignmentExpression	i = 0		494933	0		=			
ANR	494949	Identifier	i		494933	0					
ANR	494950	PrimaryExpression	0		494933	1					
ANR	494951	Condition	i < nbytes	250:13:9647:9656	494933	1	True				
ANR	494952	RelationalExpression	i < nbytes		494933	0		<			
ANR	494953	Identifier	i		494933	0					
ANR	494954	Identifier	nbytes		494933	1					
ANR	494955	PostIncDecOperationExpression	i ++	250:25:9659:9661	494933	2	True				
ANR	494956	Identifier	i		494933	0					
ANR	494957	IncDec	++		494933	1					
ANR	494958	CompoundStatement		7:2:60:86	494933	3					
ANR	494959	IdentifierDeclStatement	int t = text_chars [ buf [ i ] ] ;	251:2:9668:9694	494933	0	True				
ANR	494960	IdentifierDecl	t = text_chars [ buf [ i ] ]		494933	0					
ANR	494961	IdentifierDeclType	int		494933	0					
ANR	494962	Identifier	t		494933	1					
ANR	494963	AssignmentExpression	t = text_chars [ buf [ i ] ]		494933	2		=			
ANR	494964	Identifier	t		494933	0					
ANR	494965	ArrayIndexing	text_chars [ buf [ i ] ]		494933	1					
ANR	494966	Identifier	text_chars		494933	0					
ANR	494967	ArrayIndexing	buf [ i ]		494933	1					
ANR	494968	Identifier	buf		494933	0					
ANR	494969	Identifier	i		494933	1					
ANR	494970	IfStatement	if ( t != T && t != I )		494933	1					
ANR	494971	Condition	t != T && t != I	253:6:9703:9718	494933	0	True				
ANR	494972	AndExpression	t != T && t != I		494933	0		&&			
ANR	494973	EqualityExpression	t != T		494933	0		!=			
ANR	494974	Identifier	t		494933	0					
ANR	494975	Identifier	T		494933	1					
ANR	494976	EqualityExpression	t != I		494933	1		!=			
ANR	494977	Identifier	t		494933	0					
ANR	494978	Identifier	I		494933	1					
ANR	494979	ReturnStatement	return 0 ;	254:3:9724:9732	494933	1	True				
ANR	494980	PrimaryExpression	0		494933	0					
ANR	494981	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ]	256:2:9737:9761	494933	2	True				
ANR	494982	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ]		494933	0		=			
ANR	494983	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		494933	0					
ANR	494984	Identifier	ubuf		494933	0					
ANR	494985	PostIncDecOperationExpression	( * ulen ) ++		494933	1					
ANR	494986	UnaryOperationExpression	* ulen		494933	0					
ANR	494987	UnaryOperator	*		494933	0					
ANR	494988	Identifier	ulen		494933	1					
ANR	494989	IncDec	++		494933	1					
ANR	494990	ArrayIndexing	buf [ i ]		494933	1					
ANR	494991	Identifier	buf		494933	0					
ANR	494992	Identifier	i		494933	1					
ANR	494993	ReturnStatement	return 1 ;	259:1:9768:9776	494933	3	True				
ANR	494994	PrimaryExpression	1		494933	0					
ANR	494995	ReturnType	int		494933	1					
ANR	494996	Identifier	looks_latin1		494933	2					
ANR	494997	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		494933	3					
ANR	494998	Parameter	const unsigned char * buf	244:13:9537:9560	494933	0	True				
ANR	494999	ParameterType	const unsigned char *		494933	0					
ANR	495000	Identifier	buf		494933	1					
ANR	495001	Parameter	size_t nbytes	244:39:9563:9575	494933	1	True				
ANR	495002	ParameterType	size_t		494933	0					
ANR	495003	Identifier	nbytes		494933	1					
ANR	495004	Parameter	unichar * ubuf	244:54:9578:9590	494933	2	True				
ANR	495005	ParameterType	unichar *		494933	0					
ANR	495006	Identifier	ubuf		494933	1					
ANR	495007	Parameter	size_t * ulen	244:69:9593:9604	494933	3	True				
ANR	495008	ParameterType	size_t *		494933	0					
ANR	495009	Identifier	ulen		494933	1					
ANR	495010	CFGEntryNode	ENTRY		494933		True				
ANR	495011	CFGExitNode	EXIT		494933		True				
ANR	495012	Symbol	* buf		494933						
ANR	495013	Symbol	* * i		494933						
ANR	495014	Symbol	* text_chars		494933						
ANR	495015	Symbol	* * buf		494933						
ANR	495016	Symbol	ubuf		494933						
ANR	495017	Symbol	i		494933						
ANR	495018	Symbol	I		494933						
ANR	495019	Symbol	text_chars		494933						
ANR	495020	Symbol	nbytes		494933						
ANR	495021	Symbol	* ubuf		494933						
ANR	495022	Symbol	buf		494933						
ANR	495023	Symbol	* ulen		494933						
ANR	495024	Symbol	* i		494933						
ANR	495025	Symbol	t		494933						
ANR	495026	Symbol	T		494933						
ANR	495027	Symbol	ulen		494933						
ANR	495028	Function	looks_extended	262:8:9789:10063							
ANR	495029	FunctionDef	"looks_extended (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		495028	0					
ANR	495030	CompoundStatement		265:0:9882:10063	495028	0					
ANR	495031	IdentifierDeclStatement	size_t i ;	266:1:9885:9893	495028	0	True				
ANR	495032	IdentifierDecl	i		495028	0					
ANR	495033	IdentifierDeclType	size_t		495028	0					
ANR	495034	Identifier	i		495028	1					
ANR	495035	ExpressionStatement	* ulen = 0	268:1:9897:9906	495028	1	True				
ANR	495036	AssignmentExpression	* ulen = 0		495028	0		=			
ANR	495037	UnaryOperationExpression	* ulen		495028	0					
ANR	495038	UnaryOperator	*		495028	0					
ANR	495039	Identifier	ulen		495028	1					
ANR	495040	PrimaryExpression	0		495028	1					
ANR	495041	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		495028	2					
ANR	495042	ForInit	i = 0 ;	270:6:9915:9920	495028	0	True				
ANR	495043	AssignmentExpression	i = 0		495028	0		=			
ANR	495044	Identifier	i		495028	0					
ANR	495045	PrimaryExpression	0		495028	1					
ANR	495046	Condition	i < nbytes	270:13:9922:9931	495028	1	True				
ANR	495047	RelationalExpression	i < nbytes		495028	0		<			
ANR	495048	Identifier	i		495028	0					
ANR	495049	Identifier	nbytes		495028	1					
ANR	495050	PostIncDecOperationExpression	i ++	270:25:9934:9936	495028	2	True				
ANR	495051	Identifier	i		495028	0					
ANR	495052	IncDec	++		495028	1					
ANR	495053	CompoundStatement		7:2:60:86	495028	3					
ANR	495054	IdentifierDeclStatement	int t = text_chars [ buf [ i ] ] ;	271:2:9943:9969	495028	0	True				
ANR	495055	IdentifierDecl	t = text_chars [ buf [ i ] ]		495028	0					
ANR	495056	IdentifierDeclType	int		495028	0					
ANR	495057	Identifier	t		495028	1					
ANR	495058	AssignmentExpression	t = text_chars [ buf [ i ] ]		495028	2		=			
ANR	495059	Identifier	t		495028	0					
ANR	495060	ArrayIndexing	text_chars [ buf [ i ] ]		495028	1					
ANR	495061	Identifier	text_chars		495028	0					
ANR	495062	ArrayIndexing	buf [ i ]		495028	1					
ANR	495063	Identifier	buf		495028	0					
ANR	495064	Identifier	i		495028	1					
ANR	495065	IfStatement	if ( t != T && t != I && t != X )		495028	1					
ANR	495066	Condition	t != T && t != I && t != X	273:6:9978:10003	495028	0	True				
ANR	495067	AndExpression	t != T && t != I && t != X		495028	0		&&			
ANR	495068	EqualityExpression	t != T		495028	0		!=			
ANR	495069	Identifier	t		495028	0					
ANR	495070	Identifier	T		495028	1					
ANR	495071	AndExpression	t != I && t != X		495028	1		&&			
ANR	495072	EqualityExpression	t != I		495028	0		!=			
ANR	495073	Identifier	t		495028	0					
ANR	495074	Identifier	I		495028	1					
ANR	495075	EqualityExpression	t != X		495028	1		!=			
ANR	495076	Identifier	t		495028	0					
ANR	495077	Identifier	X		495028	1					
ANR	495078	ReturnStatement	return 0 ;	274:3:10009:10017	495028	1	True				
ANR	495079	PrimaryExpression	0		495028	0					
ANR	495080	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ]	276:2:10022:10046	495028	2	True				
ANR	495081	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ]		495028	0		=			
ANR	495082	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		495028	0					
ANR	495083	Identifier	ubuf		495028	0					
ANR	495084	PostIncDecOperationExpression	( * ulen ) ++		495028	1					
ANR	495085	UnaryOperationExpression	* ulen		495028	0					
ANR	495086	UnaryOperator	*		495028	0					
ANR	495087	Identifier	ulen		495028	1					
ANR	495088	IncDec	++		495028	1					
ANR	495089	ArrayIndexing	buf [ i ]		495028	1					
ANR	495090	Identifier	buf		495028	0					
ANR	495091	Identifier	i		495028	1					
ANR	495092	ReturnStatement	return 1 ;	279:1:10053:10061	495028	3	True				
ANR	495093	PrimaryExpression	1		495028	0					
ANR	495094	ReturnType	int		495028	1					
ANR	495095	Identifier	looks_extended		495028	2					
ANR	495096	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		495028	3					
ANR	495097	Parameter	const unsigned char * buf	263:15:9808:9831	495028	0	True				
ANR	495098	ParameterType	const unsigned char *		495028	0					
ANR	495099	Identifier	buf		495028	1					
ANR	495100	Parameter	size_t nbytes	263:41:9834:9846	495028	1	True				
ANR	495101	ParameterType	size_t		495028	0					
ANR	495102	Identifier	nbytes		495028	1					
ANR	495103	Parameter	unichar * ubuf	263:56:9849:9861	495028	2	True				
ANR	495104	ParameterType	unichar *		495028	0					
ANR	495105	Identifier	ubuf		495028	1					
ANR	495106	Parameter	size_t * ulen	264:4:9868:9879	495028	3	True				
ANR	495107	ParameterType	size_t *		495028	0					
ANR	495108	Identifier	ulen		495028	1					
ANR	495109	CFGEntryNode	ENTRY		495028		True				
ANR	495110	CFGExitNode	EXIT		495028		True				
ANR	495111	Symbol	* * i		495028						
ANR	495112	Symbol	* buf		495028						
ANR	495113	Symbol	* text_chars		495028						
ANR	495114	Symbol	* * buf		495028						
ANR	495115	Symbol	ubuf		495028						
ANR	495116	Symbol	i		495028						
ANR	495117	Symbol	I		495028						
ANR	495118	Symbol	text_chars		495028						
ANR	495119	Symbol	nbytes		495028						
ANR	495120	Symbol	* ubuf		495028						
ANR	495121	Symbol	buf		495028						
ANR	495122	Symbol	* ulen		495028						
ANR	495123	Symbol	* i		495028						
ANR	495124	Symbol	t		495028						
ANR	495125	Symbol	T		495028						
ANR	495126	Symbol	ulen		495028						
ANR	495127	Symbol	X		495028						
ANR	495128	Function	file_looks_utf8	293:10:10412:11835							
ANR	495129	FunctionDef	"file_looks_utf8 (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		495128	0					
ANR	495130	CompoundStatement		295:0:10502:11835	495128	0					
ANR	495131	IdentifierDeclStatement	size_t i ;	296:1:10505:10513	495128	0	True				
ANR	495132	IdentifierDecl	i		495128	0					
ANR	495133	IdentifierDeclType	size_t		495128	0					
ANR	495134	Identifier	i		495128	1					
ANR	495135	IdentifierDeclStatement	int n ;	297:1:10516:10521	495128	1	True				
ANR	495136	IdentifierDecl	n		495128	0					
ANR	495137	IdentifierDeclType	int		495128	0					
ANR	495138	Identifier	n		495128	1					
ANR	495139	IdentifierDeclStatement	unichar c ;	298:1:10524:10533	495128	2	True				
ANR	495140	IdentifierDecl	c		495128	0					
ANR	495141	IdentifierDeclType	unichar		495128	0					
ANR	495142	Identifier	c		495128	1					
ANR	495143	IdentifierDeclStatement	"int gotone = 0 , ctrl = 0 ;"	299:1:10536:10560	495128	3	True				
ANR	495144	IdentifierDecl	gotone = 0		495128	0					
ANR	495145	IdentifierDeclType	int		495128	0					
ANR	495146	Identifier	gotone		495128	1					
ANR	495147	AssignmentExpression	gotone = 0		495128	2		=			
ANR	495148	Identifier	gotone		495128	0					
ANR	495149	PrimaryExpression	0		495128	1					
ANR	495150	IdentifierDecl	ctrl = 0		495128	1					
ANR	495151	IdentifierDeclType	int		495128	0					
ANR	495152	Identifier	ctrl		495128	1					
ANR	495153	AssignmentExpression	ctrl = 0		495128	2		=			
ANR	495154	Identifier	ctrl		495128	0					
ANR	495155	PrimaryExpression	0		495128	1					
ANR	495156	IfStatement	if ( ubuf )		495128	4					
ANR	495157	Condition	ubuf	301:5:10568:10571	495128	0	True				
ANR	495158	Identifier	ubuf		495128	0					
ANR	495159	ExpressionStatement	* ulen = 0	302:2:10576:10585	495128	1	True				
ANR	495160	AssignmentExpression	* ulen = 0		495128	0		=			
ANR	495161	UnaryOperationExpression	* ulen		495128	0					
ANR	495162	UnaryOperator	*		495128	0					
ANR	495163	Identifier	ulen		495128	1					
ANR	495164	PrimaryExpression	0		495128	1					
ANR	495165	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		495128	5					
ANR	495166	ForInit	i = 0 ;	304:6:10594:10599	495128	0	True				
ANR	495167	AssignmentExpression	i = 0		495128	0		=			
ANR	495168	Identifier	i		495128	0					
ANR	495169	PrimaryExpression	0		495128	1					
ANR	495170	Condition	i < nbytes	304:13:10601:10610	495128	1	True				
ANR	495171	RelationalExpression	i < nbytes		495128	0		<			
ANR	495172	Identifier	i		495128	0					
ANR	495173	Identifier	nbytes		495128	1					
ANR	495174	PostIncDecOperationExpression	i ++	304:25:10613:10615	495128	2	True				
ANR	495175	Identifier	i		495128	0					
ANR	495176	IncDec	++		495128	1					
ANR	495177	CompoundStatement		10:30:115:115	495128	3					
ANR	495178	IfStatement	if ( ( buf [ i ] & 0x80 ) == 0 )		495128	0					
ANR	495179	Condition	( buf [ i ] & 0x80 ) == 0	305:6:10626:10645	495128	0	True				
ANR	495180	EqualityExpression	( buf [ i ] & 0x80 ) == 0		495128	0		==			
ANR	495181	BitAndExpression	buf [ i ] & 0x80		495128	0		&			
ANR	495182	ArrayIndexing	buf [ i ]		495128	0					
ANR	495183	Identifier	buf		495128	0					
ANR	495184	Identifier	i		495128	1					
ANR	495185	PrimaryExpression	0x80		495128	1					
ANR	495186	PrimaryExpression	0		495128	1					
ANR	495187	CompoundStatement		11:28:145:145	495128	1					
ANR	495188	IfStatement	if ( text_chars [ buf [ i ] ] != T )		495128	0					
ANR	495189	Condition	text_chars [ buf [ i ] ] != T	311:7:10818:10840	495128	0	True				
ANR	495190	EqualityExpression	text_chars [ buf [ i ] ] != T		495128	0		!=			
ANR	495191	ArrayIndexing	text_chars [ buf [ i ] ]		495128	0					
ANR	495192	Identifier	text_chars		495128	0					
ANR	495193	ArrayIndexing	buf [ i ]		495128	1					
ANR	495194	Identifier	buf		495128	0					
ANR	495195	Identifier	i		495128	1					
ANR	495196	Identifier	T		495128	1					
ANR	495197	ExpressionStatement	ctrl = 1	312:4:10847:10855	495128	1	True				
ANR	495198	AssignmentExpression	ctrl = 1		495128	0		=			
ANR	495199	Identifier	ctrl		495128	0					
ANR	495200	PrimaryExpression	1		495128	1					
ANR	495201	IfStatement	if ( ubuf )		495128	1					
ANR	495202	Condition	ubuf	314:7:10865:10868	495128	0	True				
ANR	495203	Identifier	ubuf		495128	0					
ANR	495204	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ]	315:4:10875:10899	495128	1	True				
ANR	495205	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ]		495128	0		=			
ANR	495206	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		495128	0					
ANR	495207	Identifier	ubuf		495128	0					
ANR	495208	PostIncDecOperationExpression	( * ulen ) ++		495128	1					
ANR	495209	UnaryOperationExpression	* ulen		495128	0					
ANR	495210	UnaryOperator	*		495128	0					
ANR	495211	Identifier	ulen		495128	1					
ANR	495212	IncDec	++		495128	1					
ANR	495213	ArrayIndexing	buf [ i ]		495128	1					
ANR	495214	Identifier	buf		495128	0					
ANR	495215	Identifier	i		495128	1					
ANR	495216	ElseStatement	else		495128	0					
ANR	495217	IfStatement	if ( ( buf [ i ] & 0x40 ) == 0 )		495128	0					
ANR	495218	Condition	( buf [ i ] & 0x40 ) == 0	316:13:10914:10933	495128	0	True				
ANR	495219	EqualityExpression	( buf [ i ] & 0x40 ) == 0		495128	0		==			
ANR	495220	BitAndExpression	buf [ i ] & 0x40		495128	0		&			
ANR	495221	ArrayIndexing	buf [ i ]		495128	0					
ANR	495222	Identifier	buf		495128	0					
ANR	495223	Identifier	i		495128	1					
ANR	495224	PrimaryExpression	0x40		495128	1					
ANR	495225	PrimaryExpression	0		495128	1					
ANR	495226	CompoundStatement		22:35:433:433	495128	1					
ANR	495227	ReturnStatement	return - 1 ;	317:3:10971:10980	495128	0	True				
ANR	495228	UnaryOperationExpression	- 1		495128	0					
ANR	495229	UnaryOperator	-		495128	0					
ANR	495230	PrimaryExpression	1		495128	1					
ANR	495231	ElseStatement	else		495128	0					
ANR	495232	CompoundStatement		25:3:526:539	495128	0					
ANR	495233	IdentifierDeclStatement	int following ;	319:3:11029:11042	495128	0	True				
ANR	495234	IdentifierDecl	following		495128	0					
ANR	495235	IdentifierDeclType	int		495128	0					
ANR	495236	Identifier	following		495128	1					
ANR	495237	IfStatement	if ( ( buf [ i ] & 0x20 ) == 0 )		495128	1					
ANR	495238	Condition	( buf [ i ] & 0x20 ) == 0	321:7:11052:11071	495128	0	True				
ANR	495239	EqualityExpression	( buf [ i ] & 0x20 ) == 0		495128	0		==			
ANR	495240	BitAndExpression	buf [ i ] & 0x20		495128	0		&			
ANR	495241	ArrayIndexing	buf [ i ]		495128	0					
ANR	495242	Identifier	buf		495128	0					
ANR	495243	Identifier	i		495128	1					
ANR	495244	PrimaryExpression	0x20		495128	1					
ANR	495245	PrimaryExpression	0		495128	1					
ANR	495246	CompoundStatement		27:29:571:571	495128	1					
ANR	495247	ExpressionStatement	c = buf [ i ] & 0x1f	322:4:11096:11113	495128	0	True				
ANR	495248	AssignmentExpression	c = buf [ i ] & 0x1f		495128	0		=			
ANR	495249	Identifier	c		495128	0					
ANR	495250	BitAndExpression	buf [ i ] & 0x1f		495128	1		&			
ANR	495251	ArrayIndexing	buf [ i ]		495128	0					
ANR	495252	Identifier	buf		495128	0					
ANR	495253	Identifier	i		495128	1					
ANR	495254	PrimaryExpression	0x1f		495128	1					
ANR	495255	ExpressionStatement	following = 1	323:4:11119:11132	495128	1	True				
ANR	495256	AssignmentExpression	following = 1		495128	0		=			
ANR	495257	Identifier	following		495128	0					
ANR	495258	PrimaryExpression	1		495128	1					
ANR	495259	ElseStatement	else		495128	0					
ANR	495260	IfStatement	if ( ( buf [ i ] & 0x10 ) == 0 )		495128	0					
ANR	495261	Condition	( buf [ i ] & 0x10 ) == 0	324:14:11148:11167	495128	0	True				
ANR	495262	EqualityExpression	( buf [ i ] & 0x10 ) == 0		495128	0		==			
ANR	495263	BitAndExpression	buf [ i ] & 0x10		495128	0		&			
ANR	495264	ArrayIndexing	buf [ i ]		495128	0					
ANR	495265	Identifier	buf		495128	0					
ANR	495266	Identifier	i		495128	1					
ANR	495267	PrimaryExpression	0x10		495128	1					
ANR	495268	PrimaryExpression	0		495128	1					
ANR	495269	CompoundStatement		30:36:667:667	495128	1					
ANR	495270	ExpressionStatement	c = buf [ i ] & 0x0f	325:4:11191:11208	495128	0	True				
ANR	495271	AssignmentExpression	c = buf [ i ] & 0x0f		495128	0		=			
ANR	495272	Identifier	c		495128	0					
ANR	495273	BitAndExpression	buf [ i ] & 0x0f		495128	1		&			
ANR	495274	ArrayIndexing	buf [ i ]		495128	0					
ANR	495275	Identifier	buf		495128	0					
ANR	495276	Identifier	i		495128	1					
ANR	495277	PrimaryExpression	0x0f		495128	1					
ANR	495278	ExpressionStatement	following = 2	326:4:11214:11227	495128	1	True				
ANR	495279	AssignmentExpression	following = 2		495128	0		=			
ANR	495280	Identifier	following		495128	0					
ANR	495281	PrimaryExpression	2		495128	1					
ANR	495282	ElseStatement	else		495128	0					
ANR	495283	IfStatement	if ( ( buf [ i ] & 0x08 ) == 0 )		495128	0					
ANR	495284	Condition	( buf [ i ] & 0x08 ) == 0	327:14:11243:11262	495128	0	True				
ANR	495285	EqualityExpression	( buf [ i ] & 0x08 ) == 0		495128	0		==			
ANR	495286	BitAndExpression	buf [ i ] & 0x08		495128	0		&			
ANR	495287	ArrayIndexing	buf [ i ]		495128	0					
ANR	495288	Identifier	buf		495128	0					
ANR	495289	Identifier	i		495128	1					
ANR	495290	PrimaryExpression	0x08		495128	1					
ANR	495291	PrimaryExpression	0		495128	1					
ANR	495292	CompoundStatement		33:36:762:762	495128	1					
ANR	495293	ExpressionStatement	c = buf [ i ] & 0x07	328:4:11286:11303	495128	0	True				
ANR	495294	AssignmentExpression	c = buf [ i ] & 0x07		495128	0		=			
ANR	495295	Identifier	c		495128	0					
ANR	495296	BitAndExpression	buf [ i ] & 0x07		495128	1		&			
ANR	495297	ArrayIndexing	buf [ i ]		495128	0					
ANR	495298	Identifier	buf		495128	0					
ANR	495299	Identifier	i		495128	1					
ANR	495300	PrimaryExpression	0x07		495128	1					
ANR	495301	ExpressionStatement	following = 3	329:4:11309:11322	495128	1	True				
ANR	495302	AssignmentExpression	following = 3		495128	0		=			
ANR	495303	Identifier	following		495128	0					
ANR	495304	PrimaryExpression	3		495128	1					
ANR	495305	ElseStatement	else		495128	0					
ANR	495306	IfStatement	if ( ( buf [ i ] & 0x04 ) == 0 )		495128	0					
ANR	495307	Condition	( buf [ i ] & 0x04 ) == 0	330:14:11338:11357	495128	0	True				
ANR	495308	EqualityExpression	( buf [ i ] & 0x04 ) == 0		495128	0		==			
ANR	495309	BitAndExpression	buf [ i ] & 0x04		495128	0		&			
ANR	495310	ArrayIndexing	buf [ i ]		495128	0					
ANR	495311	Identifier	buf		495128	0					
ANR	495312	Identifier	i		495128	1					
ANR	495313	PrimaryExpression	0x04		495128	1					
ANR	495314	PrimaryExpression	0		495128	1					
ANR	495315	CompoundStatement		36:36:857:857	495128	1					
ANR	495316	ExpressionStatement	c = buf [ i ] & 0x03	331:4:11381:11398	495128	0	True				
ANR	495317	AssignmentExpression	c = buf [ i ] & 0x03		495128	0		=			
ANR	495318	Identifier	c		495128	0					
ANR	495319	BitAndExpression	buf [ i ] & 0x03		495128	1		&			
ANR	495320	ArrayIndexing	buf [ i ]		495128	0					
ANR	495321	Identifier	buf		495128	0					
ANR	495322	Identifier	i		495128	1					
ANR	495323	PrimaryExpression	0x03		495128	1					
ANR	495324	ExpressionStatement	following = 4	332:4:11404:11417	495128	1	True				
ANR	495325	AssignmentExpression	following = 4		495128	0		=			
ANR	495326	Identifier	following		495128	0					
ANR	495327	PrimaryExpression	4		495128	1					
ANR	495328	ElseStatement	else		495128	0					
ANR	495329	IfStatement	if ( ( buf [ i ] & 0x02 ) == 0 )		495128	0					
ANR	495330	Condition	( buf [ i ] & 0x02 ) == 0	333:14:11433:11452	495128	0	True				
ANR	495331	EqualityExpression	( buf [ i ] & 0x02 ) == 0		495128	0		==			
ANR	495332	BitAndExpression	buf [ i ] & 0x02		495128	0		&			
ANR	495333	ArrayIndexing	buf [ i ]		495128	0					
ANR	495334	Identifier	buf		495128	0					
ANR	495335	Identifier	i		495128	1					
ANR	495336	PrimaryExpression	0x02		495128	1					
ANR	495337	PrimaryExpression	0		495128	1					
ANR	495338	CompoundStatement		39:36:952:952	495128	1					
ANR	495339	ExpressionStatement	c = buf [ i ] & 0x01	334:4:11476:11493	495128	0	True				
ANR	495340	AssignmentExpression	c = buf [ i ] & 0x01		495128	0		=			
ANR	495341	Identifier	c		495128	0					
ANR	495342	BitAndExpression	buf [ i ] & 0x01		495128	1		&			
ANR	495343	ArrayIndexing	buf [ i ]		495128	0					
ANR	495344	Identifier	buf		495128	0					
ANR	495345	Identifier	i		495128	1					
ANR	495346	PrimaryExpression	0x01		495128	1					
ANR	495347	ExpressionStatement	following = 5	335:4:11499:11512	495128	1	True				
ANR	495348	AssignmentExpression	following = 5		495128	0		=			
ANR	495349	Identifier	following		495128	0					
ANR	495350	PrimaryExpression	5		495128	1					
ANR	495351	ElseStatement	else		495128	0					
ANR	495352	ReturnStatement	return - 1 ;	337:4:11528:11537	495128	0	True				
ANR	495353	UnaryOperationExpression	- 1		495128	0					
ANR	495354	UnaryOperator	-		495128	0					
ANR	495355	PrimaryExpression	1		495128	1					
ANR	495356	ForStatement	for ( n = 0 ; n < following ; n ++ )		495128	2					
ANR	495357	ForInit	n = 0 ;	339:8:11548:11553	495128	0	True				
ANR	495358	AssignmentExpression	n = 0		495128	0		=			
ANR	495359	Identifier	n		495128	0					
ANR	495360	PrimaryExpression	0		495128	1					
ANR	495361	Condition	n < following	339:15:11555:11567	495128	1	True				
ANR	495362	RelationalExpression	n < following		495128	0		<			
ANR	495363	Identifier	n		495128	0					
ANR	495364	Identifier	following		495128	1					
ANR	495365	PostIncDecOperationExpression	n ++	339:30:11570:11572	495128	2	True				
ANR	495366	Identifier	n		495128	0					
ANR	495367	IncDec	++		495128	1					
ANR	495368	CompoundStatement		45:35:1072:1072	495128	3					
ANR	495369	ExpressionStatement	i ++	340:4:11581:11584	495128	0	True				
ANR	495370	PostIncDecOperationExpression	i ++		495128	0					
ANR	495371	Identifier	i		495128	0					
ANR	495372	IncDec	++		495128	1					
ANR	495373	IfStatement	if ( i >= nbytes )		495128	1					
ANR	495374	Condition	i >= nbytes	341:8:11594:11604	495128	0	True				
ANR	495375	RelationalExpression	i >= nbytes		495128	0		>=			
ANR	495376	Identifier	i		495128	0					
ANR	495377	Identifier	nbytes		495128	1					
ANR	495378	GotoStatement	goto done ;	342:5:11612:11621	495128	1	True				
ANR	495379	Identifier	done		495128	0					
ANR	495380	IfStatement	if ( ( buf [ i ] & 0x80 ) == 0 || ( buf [ i ] & 0x40 ) )		495128	2					
ANR	495381	Condition	( buf [ i ] & 0x80 ) == 0 || ( buf [ i ] & 0x40 )	344:8:11632:11670	495128	0	True				
ANR	495382	OrExpression	( buf [ i ] & 0x80 ) == 0 || ( buf [ i ] & 0x40 )		495128	0		||			
ANR	495383	EqualityExpression	( buf [ i ] & 0x80 ) == 0		495128	0		==			
ANR	495384	BitAndExpression	buf [ i ] & 0x80		495128	0		&			
ANR	495385	ArrayIndexing	buf [ i ]		495128	0					
ANR	495386	Identifier	buf		495128	0					
ANR	495387	Identifier	i		495128	1					
ANR	495388	PrimaryExpression	0x80		495128	1					
ANR	495389	PrimaryExpression	0		495128	1					
ANR	495390	BitAndExpression	buf [ i ] & 0x40		495128	1		&			
ANR	495391	ArrayIndexing	buf [ i ]		495128	0					
ANR	495392	Identifier	buf		495128	0					
ANR	495393	Identifier	i		495128	1					
ANR	495394	PrimaryExpression	0x40		495128	1					
ANR	495395	ReturnStatement	return - 1 ;	345:5:11678:11687	495128	1	True				
ANR	495396	UnaryOperationExpression	- 1		495128	0					
ANR	495397	UnaryOperator	-		495128	0					
ANR	495398	PrimaryExpression	1		495128	1					
ANR	495399	ExpressionStatement	c = ( c << 6 ) + ( buf [ i ] & 0x3f )	347:4:11694:11724	495128	3	True				
ANR	495400	AssignmentExpression	c = ( c << 6 ) + ( buf [ i ] & 0x3f )		495128	0		=			
ANR	495401	Identifier	c		495128	0					
ANR	495402	AdditiveExpression	( c << 6 ) + ( buf [ i ] & 0x3f )		495128	1		+			
ANR	495403	ShiftExpression	c << 6		495128	0		<<			
ANR	495404	Identifier	c		495128	0					
ANR	495405	PrimaryExpression	6		495128	1					
ANR	495406	BitAndExpression	buf [ i ] & 0x3f		495128	1		&			
ANR	495407	ArrayIndexing	buf [ i ]		495128	0					
ANR	495408	Identifier	buf		495128	0					
ANR	495409	Identifier	i		495128	1					
ANR	495410	PrimaryExpression	0x3f		495128	1					
ANR	495411	IfStatement	if ( ubuf )		495128	3					
ANR	495412	Condition	ubuf	350:7:11739:11742	495128	0	True				
ANR	495413	Identifier	ubuf		495128	0					
ANR	495414	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = c	351:4:11749:11768	495128	1	True				
ANR	495415	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = c		495128	0		=			
ANR	495416	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		495128	0					
ANR	495417	Identifier	ubuf		495128	0					
ANR	495418	PostIncDecOperationExpression	( * ulen ) ++		495128	1					
ANR	495419	UnaryOperationExpression	* ulen		495128	0					
ANR	495420	UnaryOperator	*		495128	0					
ANR	495421	Identifier	ulen		495128	1					
ANR	495422	IncDec	++		495128	1					
ANR	495423	Identifier	c		495128	1					
ANR	495424	ExpressionStatement	gotone = 1	352:3:11773:11783	495128	4	True				
ANR	495425	AssignmentExpression	gotone = 1		495128	0		=			
ANR	495426	Identifier	gotone		495128	0					
ANR	495427	PrimaryExpression	1		495128	1					
ANR	495428	Label	done :	355:0:11792:11796	495128	6	True				
ANR	495429	Identifier	done		495128	0					
ANR	495430	ReturnStatement	return ctrl ? 0 : ( gotone ? 2 : 1 ) ;	356:1:11799:11833	495128	7	True				
ANR	495431	ConditionalExpression	ctrl ? 0 : ( gotone ? 2 : 1 )		495128	0					
ANR	495432	Condition	ctrl		495128	0					
ANR	495433	Identifier	ctrl		495128	0					
ANR	495434	PrimaryExpression	0		495128	1					
ANR	495435	ConditionalExpression	gotone ? 2 : 1		495128	2					
ANR	495436	Condition	gotone		495128	0					
ANR	495437	Identifier	gotone		495128	0					
ANR	495438	PrimaryExpression	2		495128	1					
ANR	495439	PrimaryExpression	1		495128	2					
ANR	495440	ReturnType	int		495128	1					
ANR	495441	Identifier	file_looks_utf8		495128	2					
ANR	495442	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		495128	3					
ANR	495443	Parameter	const unsigned char * buf	294:16:10432:10455	495128	0	True				
ANR	495444	ParameterType	const unsigned char *		495128	0					
ANR	495445	Identifier	buf		495128	1					
ANR	495446	Parameter	size_t nbytes	294:42:10458:10470	495128	1	True				
ANR	495447	ParameterType	size_t		495128	0					
ANR	495448	Identifier	nbytes		495128	1					
ANR	495449	Parameter	unichar * ubuf	294:57:10473:10485	495128	2	True				
ANR	495450	ParameterType	unichar *		495128	0					
ANR	495451	Identifier	ubuf		495128	1					
ANR	495452	Parameter	size_t * ulen	294:72:10488:10499	495128	3	True				
ANR	495453	ParameterType	size_t *		495128	0					
ANR	495454	Identifier	ulen		495128	1					
ANR	495455	CFGEntryNode	ENTRY		495128		True				
ANR	495456	CFGExitNode	EXIT		495128		True				
ANR	495457	Symbol	* buf		495128						
ANR	495458	Symbol	* * i		495128						
ANR	495459	Symbol	c		495128						
ANR	495460	Symbol	* text_chars		495128						
ANR	495461	Symbol	ctrl		495128						
ANR	495462	Symbol	* * buf		495128						
ANR	495463	Symbol	ubuf		495128						
ANR	495464	Symbol	i		495128						
ANR	495465	Symbol	text_chars		495128						
ANR	495466	Symbol	n		495128						
ANR	495467	Symbol	nbytes		495128						
ANR	495468	Symbol	gotone		495128						
ANR	495469	Symbol	* ubuf		495128						
ANR	495470	Symbol	buf		495128						
ANR	495471	Symbol	* ulen		495128						
ANR	495472	Symbol	* i		495128						
ANR	495473	Symbol	T		495128						
ANR	495474	Symbol	ulen		495128						
ANR	495475	Symbol	following		495128						
ANR	495476	Function	looks_utf8_with_BOM	364:8:12012:12261							
ANR	495477	FunctionDef	"looks_utf8_with_BOM (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		495476	0					
ANR	495478	CompoundStatement		367:0:12110:12261	495476	0					
ANR	495479	IfStatement	if ( nbytes > 3 && buf [ 0 ] == 0xef && buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf )		495476	0					
ANR	495480	Condition	nbytes > 3 && buf [ 0 ] == 0xef && buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf	368:5:12117:12180	495476	0	True				
ANR	495481	AndExpression	nbytes > 3 && buf [ 0 ] == 0xef && buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf		495476	0		&&			
ANR	495482	RelationalExpression	nbytes > 3		495476	0		>			
ANR	495483	Identifier	nbytes		495476	0					
ANR	495484	PrimaryExpression	3		495476	1					
ANR	495485	AndExpression	buf [ 0 ] == 0xef && buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf		495476	1		&&			
ANR	495486	EqualityExpression	buf [ 0 ] == 0xef		495476	0		==			
ANR	495487	ArrayIndexing	buf [ 0 ]		495476	0					
ANR	495488	Identifier	buf		495476	0					
ANR	495489	PrimaryExpression	0		495476	1					
ANR	495490	PrimaryExpression	0xef		495476	1					
ANR	495491	AndExpression	buf [ 1 ] == 0xbb && buf [ 2 ] == 0xbf		495476	1		&&			
ANR	495492	EqualityExpression	buf [ 1 ] == 0xbb		495476	0		==			
ANR	495493	ArrayIndexing	buf [ 1 ]		495476	0					
ANR	495494	Identifier	buf		495476	0					
ANR	495495	PrimaryExpression	1		495476	1					
ANR	495496	PrimaryExpression	0xbb		495476	1					
ANR	495497	EqualityExpression	buf [ 2 ] == 0xbf		495476	1		==			
ANR	495498	ArrayIndexing	buf [ 2 ]		495476	0					
ANR	495499	Identifier	buf		495476	0					
ANR	495500	PrimaryExpression	2		495476	1					
ANR	495501	PrimaryExpression	0xbf		495476	1					
ANR	495502	ReturnStatement	"return file_looks_utf8 ( buf + 3 , nbytes - 3 , ubuf , ulen ) ;"	369:2:12185:12240	495476	1	True				
ANR	495503	CallExpression	"file_looks_utf8 ( buf + 3 , nbytes - 3 , ubuf , ulen )"		495476	0					
ANR	495504	Callee	file_looks_utf8		495476	0					
ANR	495505	Identifier	file_looks_utf8		495476	0					
ANR	495506	ArgumentList	buf + 3		495476	1					
ANR	495507	Argument	buf + 3		495476	0					
ANR	495508	AdditiveExpression	buf + 3		495476	0		+			
ANR	495509	Identifier	buf		495476	0					
ANR	495510	PrimaryExpression	3		495476	1					
ANR	495511	Argument	nbytes - 3		495476	1					
ANR	495512	AdditiveExpression	nbytes - 3		495476	0		-			
ANR	495513	Identifier	nbytes		495476	0					
ANR	495514	PrimaryExpression	3		495476	1					
ANR	495515	Argument	ubuf		495476	2					
ANR	495516	Identifier	ubuf		495476	0					
ANR	495517	Argument	ulen		495476	3					
ANR	495518	Identifier	ulen		495476	0					
ANR	495519	ElseStatement	else		495476	0					
ANR	495520	ReturnStatement	return - 1 ;	371:2:12250:12259	495476	0	True				
ANR	495521	UnaryOperationExpression	- 1		495476	0					
ANR	495522	UnaryOperator	-		495476	0					
ANR	495523	PrimaryExpression	1		495476	1					
ANR	495524	ReturnType	int		495476	1					
ANR	495525	Identifier	looks_utf8_with_BOM		495476	2					
ANR	495526	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		495476	3					
ANR	495527	Parameter	const unsigned char * buf	365:20:12036:12059	495476	0	True				
ANR	495528	ParameterType	const unsigned char *		495476	0					
ANR	495529	Identifier	buf		495476	1					
ANR	495530	Parameter	size_t nbytes	365:46:12062:12074	495476	1	True				
ANR	495531	ParameterType	size_t		495476	0					
ANR	495532	Identifier	nbytes		495476	1					
ANR	495533	Parameter	unichar * ubuf	365:61:12077:12089	495476	2	True				
ANR	495534	ParameterType	unichar *		495476	0					
ANR	495535	Identifier	ubuf		495476	1					
ANR	495536	Parameter	size_t * ulen	366:4:12096:12107	495476	3	True				
ANR	495537	ParameterType	size_t *		495476	0					
ANR	495538	Identifier	ulen		495476	1					
ANR	495539	CFGEntryNode	ENTRY		495476		True				
ANR	495540	CFGExitNode	EXIT		495476		True				
ANR	495541	Symbol	buf		495476						
ANR	495542	Symbol	* buf		495476						
ANR	495543	Symbol	ulen		495476						
ANR	495544	Symbol	ubuf		495476						
ANR	495545	Symbol	file_looks_utf8		495476						
ANR	495546	Symbol	nbytes		495476						
ANR	495547	Function	looks_ucs16	374:8:12272:12931							
ANR	495548	FunctionDef	"looks_ucs16 (const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen)"		495547	0					
ANR	495549	CompoundStatement		377:0:12362:12931	495547	0					
ANR	495550	IdentifierDeclStatement	int bigend ;	378:1:12365:12375	495547	0	True				
ANR	495551	IdentifierDecl	bigend		495547	0					
ANR	495552	IdentifierDeclType	int		495547	0					
ANR	495553	Identifier	bigend		495547	1					
ANR	495554	IdentifierDeclStatement	size_t i ;	379:1:12378:12386	495547	1	True				
ANR	495555	IdentifierDecl	i		495547	0					
ANR	495556	IdentifierDeclType	size_t		495547	0					
ANR	495557	Identifier	i		495547	1					
ANR	495558	IfStatement	if ( nbytes < 2 )		495547	2					
ANR	495559	Condition	nbytes < 2	381:5:12394:12403	495547	0	True				
ANR	495560	RelationalExpression	nbytes < 2		495547	0		<			
ANR	495561	Identifier	nbytes		495547	0					
ANR	495562	PrimaryExpression	2		495547	1					
ANR	495563	ReturnStatement	return 0 ;	382:2:12408:12416	495547	1	True				
ANR	495564	PrimaryExpression	0		495547	0					
ANR	495565	IfStatement	if ( buf [ 0 ] == 0xff && buf [ 1 ] == 0xfe )		495547	3					
ANR	495566	Condition	buf [ 0 ] == 0xff && buf [ 1 ] == 0xfe	384:5:12424:12455	495547	0	True				
ANR	495567	AndExpression	buf [ 0 ] == 0xff && buf [ 1 ] == 0xfe		495547	0		&&			
ANR	495568	EqualityExpression	buf [ 0 ] == 0xff		495547	0		==			
ANR	495569	ArrayIndexing	buf [ 0 ]		495547	0					
ANR	495570	Identifier	buf		495547	0					
ANR	495571	PrimaryExpression	0		495547	1					
ANR	495572	PrimaryExpression	0xff		495547	1					
ANR	495573	EqualityExpression	buf [ 1 ] == 0xfe		495547	1		==			
ANR	495574	ArrayIndexing	buf [ 1 ]		495547	0					
ANR	495575	Identifier	buf		495547	0					
ANR	495576	PrimaryExpression	1		495547	1					
ANR	495577	PrimaryExpression	0xfe		495547	1					
ANR	495578	ExpressionStatement	bigend = 0	385:2:12460:12470	495547	1	True				
ANR	495579	AssignmentExpression	bigend = 0		495547	0		=			
ANR	495580	Identifier	bigend		495547	0					
ANR	495581	PrimaryExpression	0		495547	1					
ANR	495582	ElseStatement	else		495547	0					
ANR	495583	IfStatement	if ( buf [ 0 ] == 0xfe && buf [ 1 ] == 0xff )		495547	0					
ANR	495584	Condition	buf [ 0 ] == 0xfe && buf [ 1 ] == 0xff	386:10:12482:12513	495547	0	True				
ANR	495585	AndExpression	buf [ 0 ] == 0xfe && buf [ 1 ] == 0xff		495547	0		&&			
ANR	495586	EqualityExpression	buf [ 0 ] == 0xfe		495547	0		==			
ANR	495587	ArrayIndexing	buf [ 0 ]		495547	0					
ANR	495588	Identifier	buf		495547	0					
ANR	495589	PrimaryExpression	0		495547	1					
ANR	495590	PrimaryExpression	0xfe		495547	1					
ANR	495591	EqualityExpression	buf [ 1 ] == 0xff		495547	1		==			
ANR	495592	ArrayIndexing	buf [ 1 ]		495547	0					
ANR	495593	Identifier	buf		495547	0					
ANR	495594	PrimaryExpression	1		495547	1					
ANR	495595	PrimaryExpression	0xff		495547	1					
ANR	495596	ExpressionStatement	bigend = 1	387:2:12518:12528	495547	1	True				
ANR	495597	AssignmentExpression	bigend = 1		495547	0		=			
ANR	495598	Identifier	bigend		495547	0					
ANR	495599	PrimaryExpression	1		495547	1					
ANR	495600	ElseStatement	else		495547	0					
ANR	495601	ReturnStatement	return 0 ;	389:2:12538:12546	495547	0	True				
ANR	495602	PrimaryExpression	0		495547	0					
ANR	495603	ExpressionStatement	* ulen = 0	391:1:12550:12559	495547	4	True				
ANR	495604	AssignmentExpression	* ulen = 0		495547	0		=			
ANR	495605	UnaryOperationExpression	* ulen		495547	0					
ANR	495606	UnaryOperator	*		495547	0					
ANR	495607	Identifier	ulen		495547	1					
ANR	495608	PrimaryExpression	0		495547	1					
ANR	495609	ForStatement	for ( i = 2 ; i + 1 < nbytes ; i += 2 )		495547	5					
ANR	495610	ForInit	i = 2 ;	393:6:12568:12573	495547	0	True				
ANR	495611	AssignmentExpression	i = 2		495547	0		=			
ANR	495612	Identifier	i		495547	0					
ANR	495613	PrimaryExpression	2		495547	1					
ANR	495614	Condition	i + 1 < nbytes	393:13:12575:12588	495547	1	True				
ANR	495615	RelationalExpression	i + 1 < nbytes		495547	0		<			
ANR	495616	AdditiveExpression	i + 1		495547	0		+			
ANR	495617	Identifier	i		495547	0					
ANR	495618	PrimaryExpression	1		495547	1					
ANR	495619	Identifier	nbytes		495547	1					
ANR	495620	AssignmentExpression	i += 2	393:29:12591:12596	495547	2	True	+=			
ANR	495621	Identifier	i		495547	0					
ANR	495622	PrimaryExpression	2		495547	1					
ANR	495623	CompoundStatement		17:37:236:236	495547	3					
ANR	495624	IfStatement	if ( bigend )		495547	0					
ANR	495625	Condition	bigend	396:6:12657:12662	495547	0	True				
ANR	495626	Identifier	bigend		495547	0					
ANR	495627	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i + 1 ] + 256 * buf [ i ]	397:3:12668:12711	495547	1	True				
ANR	495628	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i + 1 ] + 256 * buf [ i ]		495547	0		=			
ANR	495629	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		495547	0					
ANR	495630	Identifier	ubuf		495547	0					
ANR	495631	PostIncDecOperationExpression	( * ulen ) ++		495547	1					
ANR	495632	UnaryOperationExpression	* ulen		495547	0					
ANR	495633	UnaryOperator	*		495547	0					
ANR	495634	Identifier	ulen		495547	1					
ANR	495635	IncDec	++		495547	1					
ANR	495636	AdditiveExpression	buf [ i + 1 ] + 256 * buf [ i ]		495547	1		+			
ANR	495637	ArrayIndexing	buf [ i + 1 ]		495547	0					
ANR	495638	Identifier	buf		495547	0					
ANR	495639	AdditiveExpression	i + 1		495547	1		+			
ANR	495640	Identifier	i		495547	0					
ANR	495641	PrimaryExpression	1		495547	1					
ANR	495642	MultiplicativeExpression	256 * buf [ i ]		495547	1		*			
ANR	495643	PrimaryExpression	256		495547	0					
ANR	495644	ArrayIndexing	buf [ i ]		495547	1					
ANR	495645	Identifier	buf		495547	0					
ANR	495646	Identifier	i		495547	1					
ANR	495647	ElseStatement	else		495547	0					
ANR	495648	ExpressionStatement	ubuf [ ( * ulen ) ++ ] = buf [ i ] + 256 * buf [ i + 1 ]	399:3:12723:12766	495547	0	True				
ANR	495649	AssignmentExpression	ubuf [ ( * ulen ) ++ ] = buf [ i ] + 256 * buf [ i + 1 ]		495547	0		=			
ANR	495650	ArrayIndexing	ubuf [ ( * ulen ) ++ ]		495547	0					
ANR	495651	Identifier	ubuf		495547	0					
ANR	495652	PostIncDecOperationExpression	( * ulen ) ++		495547	1					
ANR	495653	UnaryOperationExpression	* ulen		495547	0					
ANR	495654	UnaryOperator	*		495547	0					
ANR	495655	Identifier	ulen		495547	1					
ANR	495656	IncDec	++		495547	1					
ANR	495657	AdditiveExpression	buf [ i ] + 256 * buf [ i + 1 ]		495547	1		+			
ANR	495658	ArrayIndexing	buf [ i ]		495547	0					
ANR	495659	Identifier	buf		495547	0					
ANR	495660	Identifier	i		495547	1					
ANR	495661	MultiplicativeExpression	256 * buf [ i + 1 ]		495547	1		*			
ANR	495662	PrimaryExpression	256		495547	0					
ANR	495663	ArrayIndexing	buf [ i + 1 ]		495547	1					
ANR	495664	Identifier	buf		495547	0					
ANR	495665	AdditiveExpression	i + 1		495547	1		+			
ANR	495666	Identifier	i		495547	0					
ANR	495667	PrimaryExpression	1		495547	1					
ANR	495668	IfStatement	if ( ubuf [ * ulen - 1 ] == 0xfffe )		495547	1					
ANR	495669	Condition	ubuf [ * ulen - 1 ] == 0xfffe	401:6:12775:12799	495547	0	True				
ANR	495670	EqualityExpression	ubuf [ * ulen - 1 ] == 0xfffe		495547	0		==			
ANR	495671	ArrayIndexing	ubuf [ * ulen - 1 ]		495547	0					
ANR	495672	Identifier	ubuf		495547	0					
ANR	495673	AdditiveExpression	* ulen - 1		495547	1		-			
ANR	495674	UnaryOperationExpression	* ulen		495547	0					
ANR	495675	UnaryOperator	*		495547	0					
ANR	495676	Identifier	ulen		495547	1					
ANR	495677	PrimaryExpression	1		495547	1					
ANR	495678	PrimaryExpression	0xfffe		495547	1					
ANR	495679	ReturnStatement	return 0 ;	402:3:12805:12813	495547	1	True				
ANR	495680	PrimaryExpression	0		495547	0					
ANR	495681	IfStatement	if ( ubuf [ * ulen - 1 ] < 128 && text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ] != T )		495547	2					
ANR	495682	Condition	ubuf [ * ulen - 1 ] < 128 && text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ] != T	403:6:12821:12891	495547	0	True				
ANR	495683	AndExpression	ubuf [ * ulen - 1 ] < 128 && text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ] != T		495547	0		&&			
ANR	495684	RelationalExpression	ubuf [ * ulen - 1 ] < 128		495547	0		<			
ANR	495685	ArrayIndexing	ubuf [ * ulen - 1 ]		495547	0					
ANR	495686	Identifier	ubuf		495547	0					
ANR	495687	AdditiveExpression	* ulen - 1		495547	1		-			
ANR	495688	UnaryOperationExpression	* ulen		495547	0					
ANR	495689	UnaryOperator	*		495547	0					
ANR	495690	Identifier	ulen		495547	1					
ANR	495691	PrimaryExpression	1		495547	1					
ANR	495692	PrimaryExpression	128		495547	1					
ANR	495693	EqualityExpression	text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ] != T		495547	1		!=			
ANR	495694	ArrayIndexing	text_chars [ ( size_t ) ubuf [ * ulen - 1 ] ]		495547	0					
ANR	495695	Identifier	text_chars		495547	0					
ANR	495696	CastExpression	( size_t ) ubuf [ * ulen - 1 ]		495547	1					
ANR	495697	CastTarget	size_t		495547	0					
ANR	495698	ArrayIndexing	ubuf [ * ulen - 1 ]		495547	1					
ANR	495699	Identifier	ubuf		495547	0					
ANR	495700	AdditiveExpression	* ulen - 1		495547	1		-			
ANR	495701	UnaryOperationExpression	* ulen		495547	0					
ANR	495702	UnaryOperator	*		495547	0					
ANR	495703	Identifier	ulen		495547	1					
ANR	495704	PrimaryExpression	1		495547	1					
ANR	495705	Identifier	T		495547	1					
ANR	495706	ReturnStatement	return 0 ;	405:3:12897:12905	495547	1	True				
ANR	495707	PrimaryExpression	0		495547	0					
ANR	495708	ReturnStatement	return 1 + bigend ;	408:1:12912:12929	495547	6	True				
ANR	495709	AdditiveExpression	1 + bigend		495547	0		+			
ANR	495710	PrimaryExpression	1		495547	0					
ANR	495711	Identifier	bigend		495547	1					
ANR	495712	ReturnType	int		495547	1					
ANR	495713	Identifier	looks_ucs16		495547	2					
ANR	495714	ParameterList	"const unsigned char * buf , size_t nbytes , unichar * ubuf , size_t * ulen"		495547	3					
ANR	495715	Parameter	const unsigned char * buf	375:12:12288:12311	495547	0	True				
ANR	495716	ParameterType	const unsigned char *		495547	0					
ANR	495717	Identifier	buf		495547	1					
ANR	495718	Parameter	size_t nbytes	375:38:12314:12326	495547	1	True				
ANR	495719	ParameterType	size_t		495547	0					
ANR	495720	Identifier	nbytes		495547	1					
ANR	495721	Parameter	unichar * ubuf	375:53:12329:12341	495547	2	True				
ANR	495722	ParameterType	unichar *		495547	0					
ANR	495723	Identifier	ubuf		495547	1					
ANR	495724	Parameter	size_t * ulen	376:4:12348:12359	495547	3	True				
ANR	495725	ParameterType	size_t *		495547	0					
ANR	495726	Identifier	ulen		495547	1					
ANR	495727	CFGEntryNode	ENTRY		495547		True				
ANR	495728	CFGExitNode	EXIT		495547		True				
ANR	495729	Symbol	* buf		495547						
ANR	495730	Symbol	* text_chars		495547						
ANR	495731	Symbol	ubuf		495547						
ANR	495732	Symbol	bigend		495547						
ANR	495733	Symbol	i		495547						
ANR	495734	Symbol	text_chars		495547						
ANR	495735	Symbol	nbytes		495547						
ANR	495736	Symbol	* ubuf		495547						
ANR	495737	Symbol	buf		495547						
ANR	495738	Symbol	* * ulen		495547						
ANR	495739	Symbol	* ulen		495547						
ANR	495740	Symbol	* i		495547						
ANR	495741	Symbol	T		495547						
ANR	495742	Symbol	ulen		495547						
ANR	495743	Symbol	* * ubuf		495547						
ANR	495744	Symbol	* * * ulen		495547						
ANR	495745	DeclStmt									
ANR	495746	Decl							unsigned char	unsigned char [ ]	ebcdic_to_ascii
ANR	495747	DeclStmt									
ANR	495748	Decl							unsigned char	unsigned char [ ]	ebcdic_1047_to_8859
ANR	495749	Function	from_ebcdic	495:8:17250:17413							
ANR	495750	FunctionDef	"from_ebcdic (const unsigned char * buf , size_t nbytes , unsigned char * out)"		495749	0					
ANR	495751	CompoundStatement		497:0:17328:17413	495749	0					
ANR	495752	IdentifierDeclStatement	size_t i ;	498:1:17331:17339	495749	0	True				
ANR	495753	IdentifierDecl	i		495749	0					
ANR	495754	IdentifierDeclType	size_t		495749	0					
ANR	495755	Identifier	i		495749	1					
ANR	495756	ForStatement	for ( i = 0 ; i < nbytes ; i ++ )		495749	1					
ANR	495757	ForInit	i = 0 ;	500:6:17348:17353	495749	0	True				
ANR	495758	AssignmentExpression	i = 0		495749	0		=			
ANR	495759	Identifier	i		495749	0					
ANR	495760	PrimaryExpression	0		495749	1					
ANR	495761	Condition	i < nbytes	500:13:17355:17364	495749	1	True				
ANR	495762	RelationalExpression	i < nbytes		495749	0		<			
ANR	495763	Identifier	i		495749	0					
ANR	495764	Identifier	nbytes		495749	1					
ANR	495765	PostIncDecOperationExpression	i ++	500:25:17367:17369	495749	2	True				
ANR	495766	Identifier	i		495749	0					
ANR	495767	IncDec	++		495749	1					
ANR	495768	CompoundStatement		4:30:43:43	495749	3					
ANR	495769	ExpressionStatement	out [ i ] = ebcdic_to_ascii [ buf [ i ] ]	501:2:17376:17408	495749	0	True				
ANR	495770	AssignmentExpression	out [ i ] = ebcdic_to_ascii [ buf [ i ] ]		495749	0		=			
ANR	495771	ArrayIndexing	out [ i ]		495749	0					
ANR	495772	Identifier	out		495749	0					
ANR	495773	Identifier	i		495749	1					
ANR	495774	ArrayIndexing	ebcdic_to_ascii [ buf [ i ] ]		495749	1					
ANR	495775	Identifier	ebcdic_to_ascii		495749	0					
ANR	495776	ArrayIndexing	buf [ i ]		495749	1					
ANR	495777	Identifier	buf		495749	0					
ANR	495778	Identifier	i		495749	1					
ANR	495779	ReturnType	void		495749	1					
ANR	495780	Identifier	from_ebcdic		495749	2					
ANR	495781	ParameterList	"const unsigned char * buf , size_t nbytes , unsigned char * out"		495749	3					
ANR	495782	Parameter	const unsigned char * buf	496:12:17267:17290	495749	0	True				
ANR	495783	ParameterType	const unsigned char *		495749	0					
ANR	495784	Identifier	buf		495749	1					
ANR	495785	Parameter	size_t nbytes	496:38:17293:17305	495749	1	True				
ANR	495786	ParameterType	size_t		495749	0					
ANR	495787	Identifier	nbytes		495749	1					
ANR	495788	Parameter	unsigned char * out	496:53:17308:17325	495749	2	True				
ANR	495789	ParameterType	unsigned char *		495749	0					
ANR	495790	Identifier	out		495749	1					
ANR	495791	CFGEntryNode	ENTRY		495749		True				
ANR	495792	CFGExitNode	EXIT		495749		True				
ANR	495793	Symbol	buf		495749						
ANR	495794	Symbol	* * i		495749						
ANR	495795	Symbol	* buf		495749						
ANR	495796	Symbol	ebcdic_to_ascii		495749						
ANR	495797	Symbol	* i		495749						
ANR	495798	Symbol	* * buf		495749						
ANR	495799	Symbol	* out		495749						
ANR	495800	Symbol	i		495749						
ANR	495801	Symbol	* ebcdic_to_ascii		495749						
ANR	495802	Symbol	nbytes		495749						
ANR	495803	Symbol	out		495749						
