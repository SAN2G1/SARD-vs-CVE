command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3432580	File	data/converged/CVE-2015-8617_php-src/recmul.c								
ANR	3432581	DeclStmt									
ANR	3432582	Decl							int	int	mul_base_digits
ANR	3432583	DeclStmt									
ANR	3432584	Decl							int	int	length
ANR	3432585	Decl							int	int	scale
ANR	3432586	DeclStmt									
ANR	3432587	Decl							char	char *	value
ANR	3432588	DeclStmt									
ANR	3432589	Decl							bc_num	bc_num	temp
ANR	3432590	Function	_bc_simp_mul	80:0:2180:2969							
ANR	3432591	FunctionDef	"_bc_simp_mul (bc_num n1 , int n1len , bc_num n2 , int n2len , bc_num * prod , int full_scale)"		3432590	0					
ANR	3432592	CompoundStatement		83:0:2287:2969	3432590	0					
ANR	3432593	IdentifierDeclStatement	"char * n1ptr , * n2ptr , * pvptr ;"	84:2:2291:2318	3432590	0	True				
ANR	3432594	IdentifierDecl	* n1ptr		3432590	0					
ANR	3432595	IdentifierDeclType	char *		3432590	0					
ANR	3432596	Identifier	n1ptr		3432590	1					
ANR	3432597	IdentifierDecl	* n2ptr		3432590	1					
ANR	3432598	IdentifierDeclType	char *		3432590	0					
ANR	3432599	Identifier	n2ptr		3432590	1					
ANR	3432600	IdentifierDecl	* pvptr		3432590	2					
ANR	3432601	IdentifierDeclType	char *		3432590	0					
ANR	3432602	Identifier	pvptr		3432590	1					
ANR	3432603	IdentifierDeclStatement	"char * n1end , * n2end ;"	85:2:2322:2341	3432590	1	True				
ANR	3432604	IdentifierDecl	* n1end		3432590	0					
ANR	3432605	IdentifierDeclType	char *		3432590	0					
ANR	3432606	Identifier	n1end		3432590	1					
ANR	3432607	IdentifierDecl	* n2end		3432590	1					
ANR	3432608	IdentifierDeclType	char *		3432590	0					
ANR	3432609	Identifier	n2end		3432590	1					
ANR	3432610	IdentifierDeclStatement	"int indx , sum , prodlen ;"	86:2:2377:2399	3432590	2	True				
ANR	3432611	IdentifierDecl	indx		3432590	0					
ANR	3432612	IdentifierDeclType	int		3432590	0					
ANR	3432613	Identifier	indx		3432590	1					
ANR	3432614	IdentifierDecl	sum		3432590	1					
ANR	3432615	IdentifierDeclType	int		3432590	0					
ANR	3432616	Identifier	sum		3432590	1					
ANR	3432617	IdentifierDecl	prodlen		3432590	2					
ANR	3432618	IdentifierDeclType	int		3432590	0					
ANR	3432619	Identifier	prodlen		3432590	1					
ANR	3432620	ExpressionStatement	prodlen = n1len + n2len + 1	88:2:2404:2427	3432590	3	True				
ANR	3432621	AssignmentExpression	prodlen = n1len + n2len + 1		3432590	0		=			
ANR	3432622	Identifier	prodlen		3432590	0					
ANR	3432623	AdditiveExpression	n1len + n2len + 1		3432590	1		+			
ANR	3432624	Identifier	n1len		3432590	0					
ANR	3432625	AdditiveExpression	n2len + 1		3432590	1		+			
ANR	3432626	Identifier	n2len		3432590	0					
ANR	3432627	PrimaryExpression	1		3432590	1					
ANR	3432628	ExpressionStatement	"* prod = bc_new_num ( prodlen , 0 )"	90:2:2432:2463	3432590	4	True				
ANR	3432629	AssignmentExpression	"* prod = bc_new_num ( prodlen , 0 )"		3432590	0		=			
ANR	3432630	UnaryOperationExpression	* prod		3432590	0					
ANR	3432631	UnaryOperator	*		3432590	0					
ANR	3432632	Identifier	prod		3432590	1					
ANR	3432633	CallExpression	"bc_new_num ( prodlen , 0 )"		3432590	1					
ANR	3432634	Callee	bc_new_num		3432590	0					
ANR	3432635	Identifier	bc_new_num		3432590	0					
ANR	3432636	ArgumentList	prodlen		3432590	1					
ANR	3432637	Argument	prodlen		3432590	0					
ANR	3432638	Identifier	prodlen		3432590	0					
ANR	3432639	Argument	0		3432590	1					
ANR	3432640	PrimaryExpression	0		3432590	0					
ANR	3432641	ExpressionStatement	n1end = ( char * ) ( n1 -> n_value + n1len - 1 )	92:2:2468:2510	3432590	5	True				
ANR	3432642	AssignmentExpression	n1end = ( char * ) ( n1 -> n_value + n1len - 1 )		3432590	0		=			
ANR	3432643	Identifier	n1end		3432590	0					
ANR	3432644	CastExpression	( char * ) ( n1 -> n_value + n1len - 1 )		3432590	1					
ANR	3432645	CastTarget	char *		3432590	0					
ANR	3432646	AdditiveExpression	n1 -> n_value + n1len - 1		3432590	1		+			
ANR	3432647	PtrMemberAccess	n1 -> n_value		3432590	0					
ANR	3432648	Identifier	n1		3432590	0					
ANR	3432649	Identifier	n_value		3432590	1					
ANR	3432650	AdditiveExpression	n1len - 1		3432590	1		-			
ANR	3432651	Identifier	n1len		3432590	0					
ANR	3432652	PrimaryExpression	1		3432590	1					
ANR	3432653	ExpressionStatement	n2end = ( char * ) ( n2 -> n_value + n2len - 1 )	93:2:2514:2556	3432590	6	True				
ANR	3432654	AssignmentExpression	n2end = ( char * ) ( n2 -> n_value + n2len - 1 )		3432590	0		=			
ANR	3432655	Identifier	n2end		3432590	0					
ANR	3432656	CastExpression	( char * ) ( n2 -> n_value + n2len - 1 )		3432590	1					
ANR	3432657	CastTarget	char *		3432590	0					
ANR	3432658	AdditiveExpression	n2 -> n_value + n2len - 1		3432590	1		+			
ANR	3432659	PtrMemberAccess	n2 -> n_value		3432590	0					
ANR	3432660	Identifier	n2		3432590	0					
ANR	3432661	Identifier	n_value		3432590	1					
ANR	3432662	AdditiveExpression	n2len - 1		3432590	1		-			
ANR	3432663	Identifier	n2len		3432590	0					
ANR	3432664	PrimaryExpression	1		3432590	1					
ANR	3432665	ExpressionStatement	pvptr = ( char * ) ( ( * prod ) -> n_value + prodlen - 1 )	94:2:2560:2609	3432590	7	True				
ANR	3432666	AssignmentExpression	pvptr = ( char * ) ( ( * prod ) -> n_value + prodlen - 1 )		3432590	0		=			
ANR	3432667	Identifier	pvptr		3432590	0					
ANR	3432668	CastExpression	( char * ) ( ( * prod ) -> n_value + prodlen - 1 )		3432590	1					
ANR	3432669	CastTarget	char *		3432590	0					
ANR	3432670	AdditiveExpression	( * prod ) -> n_value + prodlen - 1		3432590	1		+			
ANR	3432671	PtrMemberAccess	( * prod ) -> n_value		3432590	0					
ANR	3432672	UnaryOperationExpression	* prod		3432590	0					
ANR	3432673	UnaryOperator	*		3432590	0					
ANR	3432674	Identifier	prod		3432590	1					
ANR	3432675	Identifier	n_value		3432590	1					
ANR	3432676	AdditiveExpression	prodlen - 1		3432590	1		-			
ANR	3432677	Identifier	prodlen		3432590	0					
ANR	3432678	PrimaryExpression	1		3432590	1					
ANR	3432679	ExpressionStatement	sum = 0	95:2:2613:2620	3432590	8	True				
ANR	3432680	AssignmentExpression	sum = 0		3432590	0		=			
ANR	3432681	Identifier	sum		3432590	0					
ANR	3432682	PrimaryExpression	0		3432590	1					
ANR	3432683	ForStatement	for ( indx = 0 ; indx < prodlen - 1 ; indx ++ )		3432590	9					
ANR	3432684	ForInit	indx = 0 ;	98:7:2658:2666	3432590	0	True				
ANR	3432685	AssignmentExpression	indx = 0		3432590	0		=			
ANR	3432686	Identifier	indx		3432590	0					
ANR	3432687	PrimaryExpression	0		3432590	1					
ANR	3432688	Condition	indx < prodlen - 1	98:17:2668:2683	3432590	1	True				
ANR	3432689	RelationalExpression	indx < prodlen - 1		3432590	0		<			
ANR	3432690	Identifier	indx		3432590	0					
ANR	3432691	AdditiveExpression	prodlen - 1		3432590	1		-			
ANR	3432692	Identifier	prodlen		3432590	0					
ANR	3432693	PrimaryExpression	1		3432590	1					
ANR	3432694	PostIncDecOperationExpression	indx ++	98:35:2686:2691	3432590	2	True				
ANR	3432695	Identifier	indx		3432590	0					
ANR	3432696	IncDec	++		3432590	1					
ANR	3432697	CompoundStatement		17:4:410:410	3432590	3					
ANR	3432698	ExpressionStatement	"n1ptr = ( char * ) ( n1end - MAX ( 0 , indx - n2len + 1 ) )"	100:6:2706:2753	3432590	0	True				
ANR	3432699	AssignmentExpression	"n1ptr = ( char * ) ( n1end - MAX ( 0 , indx - n2len + 1 ) )"		3432590	0		=			
ANR	3432700	Identifier	n1ptr		3432590	0					
ANR	3432701	CastExpression	"( char * ) ( n1end - MAX ( 0 , indx - n2len + 1 ) )"		3432590	1					
ANR	3432702	CastTarget	char *		3432590	0					
ANR	3432703	AdditiveExpression	"n1end - MAX ( 0 , indx - n2len + 1 )"		3432590	1		-			
ANR	3432704	Identifier	n1end		3432590	0					
ANR	3432705	CallExpression	"MAX ( 0 , indx - n2len + 1 )"		3432590	1					
ANR	3432706	Callee	MAX		3432590	0					
ANR	3432707	Identifier	MAX		3432590	0					
ANR	3432708	ArgumentList	0		3432590	1					
ANR	3432709	Argument	0		3432590	0					
ANR	3432710	PrimaryExpression	0		3432590	0					
ANR	3432711	Argument	indx - n2len + 1		3432590	1					
ANR	3432712	AdditiveExpression	indx - n2len + 1		3432590	0		-			
ANR	3432713	Identifier	indx		3432590	0					
ANR	3432714	AdditiveExpression	n2len + 1		3432590	1		+			
ANR	3432715	Identifier	n2len		3432590	0					
ANR	3432716	PrimaryExpression	1		3432590	1					
ANR	3432717	ExpressionStatement	"n2ptr = ( char * ) ( n2end - MIN ( indx , n2len - 1 ) )"	101:6:2761:2806	3432590	1	True				
ANR	3432718	AssignmentExpression	"n2ptr = ( char * ) ( n2end - MIN ( indx , n2len - 1 ) )"		3432590	0		=			
ANR	3432719	Identifier	n2ptr		3432590	0					
ANR	3432720	CastExpression	"( char * ) ( n2end - MIN ( indx , n2len - 1 ) )"		3432590	1					
ANR	3432721	CastTarget	char *		3432590	0					
ANR	3432722	AdditiveExpression	"n2end - MIN ( indx , n2len - 1 )"		3432590	1		-			
ANR	3432723	Identifier	n2end		3432590	0					
ANR	3432724	CallExpression	"MIN ( indx , n2len - 1 )"		3432590	1					
ANR	3432725	Callee	MIN		3432590	0					
ANR	3432726	Identifier	MIN		3432590	0					
ANR	3432727	ArgumentList	indx		3432590	1					
ANR	3432728	Argument	indx		3432590	0					
ANR	3432729	Identifier	indx		3432590	0					
ANR	3432730	Argument	n2len - 1		3432590	1					
ANR	3432731	AdditiveExpression	n2len - 1		3432590	0		-			
ANR	3432732	Identifier	n2len		3432590	0					
ANR	3432733	PrimaryExpression	1		3432590	1					
ANR	3432734	WhileStatement	while ( ( n1ptr >= n1 -> n_value ) && ( n2ptr <= n2end ) )		3432590	2					
ANR	3432735	Condition	( n1ptr >= n1 -> n_value ) && ( n2ptr <= n2end )	102:13:2821:2862	3432590	0	True				
ANR	3432736	AndExpression	( n1ptr >= n1 -> n_value ) && ( n2ptr <= n2end )		3432590	0		&&			
ANR	3432737	RelationalExpression	n1ptr >= n1 -> n_value		3432590	0		>=			
ANR	3432738	Identifier	n1ptr		3432590	0					
ANR	3432739	PtrMemberAccess	n1 -> n_value		3432590	1					
ANR	3432740	Identifier	n1		3432590	0					
ANR	3432741	Identifier	n_value		3432590	1					
ANR	3432742	RelationalExpression	n2ptr <= n2end		3432590	1		<=			
ANR	3432743	Identifier	n2ptr		3432590	0					
ANR	3432744	Identifier	n2end		3432590	1					
ANR	3432745	ExpressionStatement	sum += * n1ptr -- * * n2ptr ++	103:1:2866:2892	3432590	1	True				
ANR	3432746	AssignmentExpression	sum += * n1ptr -- * * n2ptr ++		3432590	0		+=			
ANR	3432747	Identifier	sum		3432590	0					
ANR	3432748	MultiplicativeExpression	* n1ptr -- * * n2ptr ++		3432590	1		*			
ANR	3432749	UnaryOperationExpression	* n1ptr --		3432590	0					
ANR	3432750	UnaryOperator	*		3432590	0					
ANR	3432751	PostIncDecOperationExpression	n1ptr --		3432590	1					
ANR	3432752	Identifier	n1ptr		3432590	0					
ANR	3432753	IncDec	--		3432590	1					
ANR	3432754	UnaryOperationExpression	* n2ptr ++		3432590	1					
ANR	3432755	UnaryOperator	*		3432590	0					
ANR	3432756	PostIncDecOperationExpression	n2ptr ++		3432590	1					
ANR	3432757	Identifier	n2ptr		3432590	0					
ANR	3432758	IncDec	++		3432590	1					
ANR	3432759	ExpressionStatement	* pvptr -- = sum % BASE	104:6:2900:2921	3432590	3	True				
ANR	3432760	AssignmentExpression	* pvptr -- = sum % BASE		3432590	0		=			
ANR	3432761	UnaryOperationExpression	* pvptr --		3432590	0					
ANR	3432762	UnaryOperator	*		3432590	0					
ANR	3432763	PostIncDecOperationExpression	pvptr --		3432590	1					
ANR	3432764	Identifier	pvptr		3432590	0					
ANR	3432765	IncDec	--		3432590	1					
ANR	3432766	MultiplicativeExpression	sum % BASE		3432590	1		%			
ANR	3432767	Identifier	sum		3432590	0					
ANR	3432768	Identifier	BASE		3432590	1					
ANR	3432769	ExpressionStatement	sum = sum / BASE	105:6:2929:2945	3432590	4	True				
ANR	3432770	AssignmentExpression	sum = sum / BASE		3432590	0		=			
ANR	3432771	Identifier	sum		3432590	0					
ANR	3432772	MultiplicativeExpression	sum / BASE		3432590	1		/			
ANR	3432773	Identifier	sum		3432590	0					
ANR	3432774	Identifier	BASE		3432590	1					
ANR	3432775	ExpressionStatement	* pvptr = sum	107:2:2955:2967	3432590	10	True				
ANR	3432776	AssignmentExpression	* pvptr = sum		3432590	0		=			
ANR	3432777	UnaryOperationExpression	* pvptr		3432590	0					
ANR	3432778	UnaryOperator	*		3432590	0					
ANR	3432779	Identifier	pvptr		3432590	1					
ANR	3432780	Identifier	sum		3432590	1					
ANR	3432781	ReturnType	static void		3432590	1					
ANR	3432782	Identifier	_bc_simp_mul		3432590	2					
ANR	3432783	ParameterList	"bc_num n1 , int n1len , bc_num n2 , int n2len , bc_num * prod , int full_scale"		3432590	3					
ANR	3432784	Parameter	bc_num n1	81:14:2206:2214	3432590	0	True				
ANR	3432785	ParameterType	bc_num		3432590	0					
ANR	3432786	Identifier	n1		3432590	1					
ANR	3432787	Parameter	int n1len	81:25:2217:2225	3432590	1	True				
ANR	3432788	ParameterType	int		3432590	0					
ANR	3432789	Identifier	n1len		3432590	1					
ANR	3432790	Parameter	bc_num n2	81:36:2228:2236	3432590	2	True				
ANR	3432791	ParameterType	bc_num		3432590	0					
ANR	3432792	Identifier	n2		3432590	1					
ANR	3432793	Parameter	int n2len	81:47:2239:2247	3432590	3	True				
ANR	3432794	ParameterType	int		3432590	0					
ANR	3432795	Identifier	n2len		3432590	1					
ANR	3432796	Parameter	bc_num * prod	81:58:2250:2261	3432590	4	True				
ANR	3432797	ParameterType	bc_num *		3432590	0					
ANR	3432798	Identifier	prod		3432590	1					
ANR	3432799	Parameter	int full_scale	82:7:2271:2284	3432590	5	True				
ANR	3432800	ParameterType	int		3432590	0					
ANR	3432801	Identifier	full_scale		3432590	1					
ANR	3432802	CFGEntryNode	ENTRY		3432590		True				
ANR	3432803	CFGExitNode	EXIT		3432590		True				
ANR	3432804	Symbol	n1		3432590						
ANR	3432805	Symbol	n2		3432590						
ANR	3432806	Symbol	MAX		3432590						
ANR	3432807	Symbol	* n2ptr ++		3432590						
ANR	3432808	Symbol	indx		3432590						
ANR	3432809	Symbol	pvptr		3432590						
ANR	3432810	Symbol	sum		3432590						
ANR	3432811	Symbol	n2ptr		3432590						
ANR	3432812	Symbol	bc_new_num		3432590						
ANR	3432813	Symbol	BASE		3432590						
ANR	3432814	Symbol	full_scale		3432590						
ANR	3432815	Symbol	prodlen		3432590						
ANR	3432816	Symbol	n1len		3432590						
ANR	3432817	Symbol	n1 -> n_value		3432590						
ANR	3432818	Symbol	* * prod		3432590						
ANR	3432819	Symbol	( * prod ) -> n_value		3432590						
ANR	3432820	Symbol	n1end		3432590						
ANR	3432821	Symbol	n2 -> n_value		3432590						
ANR	3432822	Symbol	prod		3432590						
ANR	3432823	Symbol	* n2		3432590						
ANR	3432824	Symbol	* n1ptr --		3432590						
ANR	3432825	Symbol	* n1		3432590						
ANR	3432826	Symbol	n1ptr		3432590						
ANR	3432827	Symbol	* prod		3432590						
ANR	3432828	Symbol	* pvptr		3432590						
ANR	3432829	Symbol	n2end		3432590						
ANR	3432830	Symbol	MIN		3432590						
ANR	3432831	Symbol	n2len		3432590						
ANR	3432832	Symbol	* pvptr --		3432590						
ANR	3432833	Function	_bc_shift_addsub	115:0:3233:4332							
ANR	3432834	FunctionDef	"_bc_shift_addsub (bc_num accum , bc_num val , int shift , int sub)"		3432833	0					
ANR	3432835	CompoundStatement		117:0:3309:4332	3432833	0					
ANR	3432836	IdentifierDeclStatement	"signed char * accp , * valp ;"	118:2:3313:3337	3432833	0	True				
ANR	3432837	IdentifierDecl	* accp		3432833	0					
ANR	3432838	IdentifierDeclType	signed char *		3432833	0					
ANR	3432839	Identifier	accp		3432833	1					
ANR	3432840	IdentifierDecl	* valp		3432833	1					
ANR	3432841	IdentifierDeclType	signed char *		3432833	0					
ANR	3432842	Identifier	valp		3432833	1					
ANR	3432843	IdentifierDeclStatement	"int count , carry ;"	119:2:3341:3358	3432833	1	True				
ANR	3432844	IdentifierDecl	count		3432833	0					
ANR	3432845	IdentifierDeclType	int		3432833	0					
ANR	3432846	Identifier	count		3432833	1					
ANR	3432847	IdentifierDecl	carry		3432833	1					
ANR	3432848	IdentifierDeclType	int		3432833	0					
ANR	3432849	Identifier	carry		3432833	1					
ANR	3432850	ExpressionStatement	count = val -> n_len	121:2:3363:3381	3432833	2	True				
ANR	3432851	AssignmentExpression	count = val -> n_len		3432833	0		=			
ANR	3432852	Identifier	count		3432833	0					
ANR	3432853	PtrMemberAccess	val -> n_len		3432833	1					
ANR	3432854	Identifier	val		3432833	0					
ANR	3432855	Identifier	n_len		3432833	1					
ANR	3432856	IfStatement	if ( val -> n_value [ 0 ] == 0 )		3432833	3					
ANR	3432857	Condition	val -> n_value [ 0 ] == 0	122:6:3389:3408	3432833	0	True				
ANR	3432858	EqualityExpression	val -> n_value [ 0 ] == 0		3432833	0		==			
ANR	3432859	ArrayIndexing	val -> n_value [ 0 ]		3432833	0					
ANR	3432860	PtrMemberAccess	val -> n_value		3432833	0					
ANR	3432861	Identifier	val		3432833	0					
ANR	3432862	Identifier	n_value		3432833	1					
ANR	3432863	PrimaryExpression	0		3432833	1					
ANR	3432864	PrimaryExpression	0		3432833	1					
ANR	3432865	ExpressionStatement	count --	123:4:3415:3422	3432833	1	True				
ANR	3432866	PostIncDecOperationExpression	count --		3432833	0					
ANR	3432867	Identifier	count		3432833	0					
ANR	3432868	IncDec	--		3432833	1					
ANR	3432869	ExpressionStatement	assert ( accum -> n_len + accum -> n_scale >= shift + count )	124:2:3426:3477	3432833	4	True				
ANR	3432870	CallExpression	assert ( accum -> n_len + accum -> n_scale >= shift + count )		3432833	0					
ANR	3432871	Callee	assert		3432833	0					
ANR	3432872	Identifier	assert		3432833	0					
ANR	3432873	ArgumentList	accum -> n_len + accum -> n_scale >= shift + count		3432833	1					
ANR	3432874	Argument	accum -> n_len + accum -> n_scale >= shift + count		3432833	0					
ANR	3432875	RelationalExpression	accum -> n_len + accum -> n_scale >= shift + count		3432833	0		>=			
ANR	3432876	AdditiveExpression	accum -> n_len + accum -> n_scale		3432833	0		+			
ANR	3432877	PtrMemberAccess	accum -> n_len		3432833	0					
ANR	3432878	Identifier	accum		3432833	0					
ANR	3432879	Identifier	n_len		3432833	1					
ANR	3432880	PtrMemberAccess	accum -> n_scale		3432833	1					
ANR	3432881	Identifier	accum		3432833	0					
ANR	3432882	Identifier	n_scale		3432833	1					
ANR	3432883	AdditiveExpression	shift + count		3432833	1		+			
ANR	3432884	Identifier	shift		3432833	0					
ANR	3432885	Identifier	count		3432833	1					
ANR	3432886	ExpressionStatement	accp = ( signed char * ) ( accum -> n_value + accum -> n_len + accum -> n_scale - shift - 1 )	127:2:3517:3603	3432833	5	True				
ANR	3432887	AssignmentExpression	accp = ( signed char * ) ( accum -> n_value + accum -> n_len + accum -> n_scale - shift - 1 )		3432833	0		=			
ANR	3432888	Identifier	accp		3432833	0					
ANR	3432889	CastExpression	( signed char * ) ( accum -> n_value + accum -> n_len + accum -> n_scale - shift - 1 )		3432833	1					
ANR	3432890	CastTarget	signed char *		3432833	0					
ANR	3432891	AdditiveExpression	accum -> n_value + accum -> n_len + accum -> n_scale - shift - 1		3432833	1		+			
ANR	3432892	PtrMemberAccess	accum -> n_value		3432833	0					
ANR	3432893	Identifier	accum		3432833	0					
ANR	3432894	Identifier	n_value		3432833	1					
ANR	3432895	AdditiveExpression	accum -> n_len + accum -> n_scale - shift - 1		3432833	1		+			
ANR	3432896	PtrMemberAccess	accum -> n_len		3432833	0					
ANR	3432897	Identifier	accum		3432833	0					
ANR	3432898	Identifier	n_len		3432833	1					
ANR	3432899	AdditiveExpression	accum -> n_scale - shift - 1		3432833	1		-			
ANR	3432900	PtrMemberAccess	accum -> n_scale		3432833	0					
ANR	3432901	Identifier	accum		3432833	0					
ANR	3432902	Identifier	n_scale		3432833	1					
ANR	3432903	AdditiveExpression	shift - 1		3432833	1		-			
ANR	3432904	Identifier	shift		3432833	0					
ANR	3432905	PrimaryExpression	1		3432833	1					
ANR	3432906	ExpressionStatement	valp = ( signed char * ) ( val -> n_value + val -> n_len - 1 )	129:2:3607:3660	3432833	6	True				
ANR	3432907	AssignmentExpression	valp = ( signed char * ) ( val -> n_value + val -> n_len - 1 )		3432833	0		=			
ANR	3432908	Identifier	valp		3432833	0					
ANR	3432909	CastExpression	( signed char * ) ( val -> n_value + val -> n_len - 1 )		3432833	1					
ANR	3432910	CastTarget	signed char *		3432833	0					
ANR	3432911	AdditiveExpression	val -> n_value + val -> n_len - 1		3432833	1		+			
ANR	3432912	PtrMemberAccess	val -> n_value		3432833	0					
ANR	3432913	Identifier	val		3432833	0					
ANR	3432914	Identifier	n_value		3432833	1					
ANR	3432915	AdditiveExpression	val -> n_len - 1		3432833	1		-			
ANR	3432916	PtrMemberAccess	val -> n_len		3432833	0					
ANR	3432917	Identifier	val		3432833	0					
ANR	3432918	Identifier	n_len		3432833	1					
ANR	3432919	PrimaryExpression	1		3432833	1					
ANR	3432920	ExpressionStatement	carry = 0	130:2:3664:3673	3432833	7	True				
ANR	3432921	AssignmentExpression	carry = 0		3432833	0		=			
ANR	3432922	Identifier	carry		3432833	0					
ANR	3432923	PrimaryExpression	0		3432833	1					
ANR	3432924	IfStatement	if ( sub )		3432833	8					
ANR	3432925	Condition	sub	132:6:3682:3684	3432833	0	True				
ANR	3432926	Identifier	sub		3432833	0					
ANR	3432927	CompoundStatement		16:11:377:377	3432833	1					
ANR	3432928	WhileStatement	while ( count -- )		3432833	0					
ANR	3432929	Condition	count --	134:11:3747:3753	3432833	0	True				
ANR	3432930	PostIncDecOperationExpression	count --		3432833	0					
ANR	3432931	Identifier	count		3432833	0					
ANR	3432932	IncDec	--		3432833	1					
ANR	3432933	CompoundStatement		18:20:446:446	3432833	1					
ANR	3432934	ExpressionStatement	* accp -= * valp -- + carry	135:6:3764:3788	3432833	0	True				
ANR	3432935	AssignmentExpression	* accp -= * valp -- + carry		3432833	0		-=			
ANR	3432936	UnaryOperationExpression	* accp		3432833	0					
ANR	3432937	UnaryOperator	*		3432833	0					
ANR	3432938	Identifier	accp		3432833	1					
ANR	3432939	AdditiveExpression	* valp -- + carry		3432833	1		+			
ANR	3432940	UnaryOperationExpression	* valp --		3432833	0					
ANR	3432941	UnaryOperator	*		3432833	0					
ANR	3432942	PostIncDecOperationExpression	valp --		3432833	1					
ANR	3432943	Identifier	valp		3432833	0					
ANR	3432944	IncDec	--		3432833	1					
ANR	3432945	Identifier	carry		3432833	1					
ANR	3432946	IfStatement	if ( * accp < 0 )		3432833	1					
ANR	3432947	Condition	* accp < 0	136:10:3800:3808	3432833	0	True				
ANR	3432948	RelationalExpression	* accp < 0		3432833	0		<			
ANR	3432949	UnaryOperationExpression	* accp		3432833	0					
ANR	3432950	UnaryOperator	*		3432833	0					
ANR	3432951	Identifier	accp		3432833	1					
ANR	3432952	PrimaryExpression	0		3432833	1					
ANR	3432953	CompoundStatement		20:21:501:501	3432833	1					
ANR	3432954	ExpressionStatement	carry = 1	137:1:3814:3823	3432833	0	True				
ANR	3432955	AssignmentExpression	carry = 1		3432833	0		=			
ANR	3432956	Identifier	carry		3432833	0					
ANR	3432957	PrimaryExpression	1		3432833	1					
ANR	3432958	ExpressionStatement	* accp -- += BASE	138:8:3833:3848	3432833	1	True				
ANR	3432959	AssignmentExpression	* accp -- += BASE		3432833	0		+=			
ANR	3432960	UnaryOperationExpression	* accp --		3432833	0					
ANR	3432961	UnaryOperator	*		3432833	0					
ANR	3432962	PostIncDecOperationExpression	accp --		3432833	1					
ANR	3432963	Identifier	accp		3432833	0					
ANR	3432964	IncDec	--		3432833	1					
ANR	3432965	Identifier	BASE		3432833	1					
ANR	3432966	ElseStatement	else		3432833	0					
ANR	3432967	CompoundStatement		23:13:553:553	3432833	0					
ANR	3432968	ExpressionStatement	carry = 0	140:1:3866:3875	3432833	0	True				
ANR	3432969	AssignmentExpression	carry = 0		3432833	0		=			
ANR	3432970	Identifier	carry		3432833	0					
ANR	3432971	PrimaryExpression	0		3432833	1					
ANR	3432972	ExpressionStatement	accp --	141:1:3878:3884	3432833	1	True				
ANR	3432973	PostIncDecOperationExpression	accp --		3432833	0					
ANR	3432974	Identifier	accp		3432833	0					
ANR	3432975	IncDec	--		3432833	1					
ANR	3432976	WhileStatement	while ( carry )		3432833	1					
ANR	3432977	Condition	carry	144:11:3911:3915	3432833	0	True				
ANR	3432978	Identifier	carry		3432833	0					
ANR	3432979	CompoundStatement		28:18:608:608	3432833	1					
ANR	3432980	ExpressionStatement	* accp -= carry	145:6:3926:3940	3432833	0	True				
ANR	3432981	AssignmentExpression	* accp -= carry		3432833	0		-=			
ANR	3432982	UnaryOperationExpression	* accp		3432833	0					
ANR	3432983	UnaryOperator	*		3432833	0					
ANR	3432984	Identifier	accp		3432833	1					
ANR	3432985	Identifier	carry		3432833	1					
ANR	3432986	IfStatement	if ( * accp < 0 )		3432833	1					
ANR	3432987	Condition	* accp < 0	146:10:3952:3960	3432833	0	True				
ANR	3432988	RelationalExpression	* accp < 0		3432833	0		<			
ANR	3432989	UnaryOperationExpression	* accp		3432833	0					
ANR	3432990	UnaryOperator	*		3432833	0					
ANR	3432991	Identifier	accp		3432833	1					
ANR	3432992	PrimaryExpression	0		3432833	1					
ANR	3432993	ExpressionStatement	* accp -- += BASE	147:1:3964:3979	3432833	1	True				
ANR	3432994	AssignmentExpression	* accp -- += BASE		3432833	0		+=			
ANR	3432995	UnaryOperationExpression	* accp --		3432833	0					
ANR	3432996	UnaryOperator	*		3432833	0					
ANR	3432997	PostIncDecOperationExpression	accp --		3432833	1					
ANR	3432998	Identifier	accp		3432833	0					
ANR	3432999	IncDec	--		3432833	1					
ANR	3433000	Identifier	BASE		3432833	1					
ANR	3433001	ElseStatement	else		3432833	0					
ANR	3433002	ExpressionStatement	carry = 0	149:1:3993:4002	3432833	0	True				
ANR	3433003	AssignmentExpression	carry = 0		3432833	0		=			
ANR	3433004	Identifier	carry		3432833	0					
ANR	3433005	PrimaryExpression	0		3432833	1					
ANR	3433006	ElseStatement	else		3432833	0					
ANR	3433007	CompoundStatement		35:9:709:709	3432833	0					
ANR	3433008	WhileStatement	while ( count -- )		3432833	0					
ANR	3433009	Condition	count --	153:11:4051:4057	3432833	0	True				
ANR	3433010	PostIncDecOperationExpression	count --		3432833	0					
ANR	3433011	Identifier	count		3432833	0					
ANR	3433012	IncDec	--		3432833	1					
ANR	3433013	CompoundStatement		37:20:750:750	3432833	1					
ANR	3433014	ExpressionStatement	* accp += * valp -- + carry	154:6:4068:4092	3432833	0	True				
ANR	3433015	AssignmentExpression	* accp += * valp -- + carry		3432833	0		+=			
ANR	3433016	UnaryOperationExpression	* accp		3432833	0					
ANR	3433017	UnaryOperator	*		3432833	0					
ANR	3433018	Identifier	accp		3432833	1					
ANR	3433019	AdditiveExpression	* valp -- + carry		3432833	1		+			
ANR	3433020	UnaryOperationExpression	* valp --		3432833	0					
ANR	3433021	UnaryOperator	*		3432833	0					
ANR	3433022	PostIncDecOperationExpression	valp --		3432833	1					
ANR	3433023	Identifier	valp		3432833	0					
ANR	3433024	IncDec	--		3432833	1					
ANR	3433025	Identifier	carry		3432833	1					
ANR	3433026	IfStatement	if ( * accp > ( BASE - 1 ) )		3432833	1					
ANR	3433027	Condition	* accp > ( BASE - 1 )	155:10:4104:4119	3432833	0	True				
ANR	3433028	RelationalExpression	* accp > ( BASE - 1 )		3432833	0		>			
ANR	3433029	UnaryOperationExpression	* accp		3432833	0					
ANR	3433030	UnaryOperator	*		3432833	0					
ANR	3433031	Identifier	accp		3432833	1					
ANR	3433032	AdditiveExpression	BASE - 1		3432833	1		-			
ANR	3433033	Identifier	BASE		3432833	0					
ANR	3433034	PrimaryExpression	1		3432833	1					
ANR	3433035	CompoundStatement		39:28:812:812	3432833	1					
ANR	3433036	ExpressionStatement	carry = 1	156:1:4125:4134	3432833	0	True				
ANR	3433037	AssignmentExpression	carry = 1		3432833	0		=			
ANR	3433038	Identifier	carry		3432833	0					
ANR	3433039	PrimaryExpression	1		3432833	1					
ANR	3433040	ExpressionStatement	* accp -- -= BASE	157:8:4144:4159	3432833	1	True				
ANR	3433041	AssignmentExpression	* accp -- -= BASE		3432833	0		-=			
ANR	3433042	UnaryOperationExpression	* accp --		3432833	0					
ANR	3433043	UnaryOperator	*		3432833	0					
ANR	3433044	PostIncDecOperationExpression	accp --		3432833	1					
ANR	3433045	Identifier	accp		3432833	0					
ANR	3433046	IncDec	--		3432833	1					
ANR	3433047	Identifier	BASE		3432833	1					
ANR	3433048	ElseStatement	else		3432833	0					
ANR	3433049	CompoundStatement		42:13:864:864	3432833	0					
ANR	3433050	ExpressionStatement	carry = 0	159:1:4177:4186	3432833	0	True				
ANR	3433051	AssignmentExpression	carry = 0		3432833	0		=			
ANR	3433052	Identifier	carry		3432833	0					
ANR	3433053	PrimaryExpression	0		3432833	1					
ANR	3433054	ExpressionStatement	accp --	160:1:4189:4195	3432833	1	True				
ANR	3433055	PostIncDecOperationExpression	accp --		3432833	0					
ANR	3433056	Identifier	accp		3432833	0					
ANR	3433057	IncDec	--		3432833	1					
ANR	3433058	WhileStatement	while ( carry )		3432833	1					
ANR	3433059	Condition	carry	163:11:4222:4226	3432833	0	True				
ANR	3433060	Identifier	carry		3432833	0					
ANR	3433061	CompoundStatement		47:18:919:919	3432833	1					
ANR	3433062	ExpressionStatement	* accp += carry	164:6:4237:4251	3432833	0	True				
ANR	3433063	AssignmentExpression	* accp += carry		3432833	0		+=			
ANR	3433064	UnaryOperationExpression	* accp		3432833	0					
ANR	3433065	UnaryOperator	*		3432833	0					
ANR	3433066	Identifier	accp		3432833	1					
ANR	3433067	Identifier	carry		3432833	1					
ANR	3433068	IfStatement	if ( * accp > ( BASE - 1 ) )		3432833	1					
ANR	3433069	Condition	* accp > ( BASE - 1 )	165:10:4263:4278	3432833	0	True				
ANR	3433070	RelationalExpression	* accp > ( BASE - 1 )		3432833	0		>			
ANR	3433071	UnaryOperationExpression	* accp		3432833	0					
ANR	3433072	UnaryOperator	*		3432833	0					
ANR	3433073	Identifier	accp		3432833	1					
ANR	3433074	AdditiveExpression	BASE - 1		3432833	1		-			
ANR	3433075	Identifier	BASE		3432833	0					
ANR	3433076	PrimaryExpression	1		3432833	1					
ANR	3433077	ExpressionStatement	* accp -- -= BASE	166:1:4282:4297	3432833	1	True				
ANR	3433078	AssignmentExpression	* accp -- -= BASE		3432833	0		-=			
ANR	3433079	UnaryOperationExpression	* accp --		3432833	0					
ANR	3433080	UnaryOperator	*		3432833	0					
ANR	3433081	PostIncDecOperationExpression	accp --		3432833	1					
ANR	3433082	Identifier	accp		3432833	0					
ANR	3433083	IncDec	--		3432833	1					
ANR	3433084	Identifier	BASE		3432833	1					
ANR	3433085	ElseStatement	else		3432833	0					
ANR	3433086	ExpressionStatement	carry = 0	168:1:4311:4320	3432833	0	True				
ANR	3433087	AssignmentExpression	carry = 0		3432833	0		=			
ANR	3433088	Identifier	carry		3432833	0					
ANR	3433089	PrimaryExpression	0		3432833	1					
ANR	3433090	ReturnType	static void		3432833	1					
ANR	3433091	Identifier	_bc_shift_addsub		3432833	2					
ANR	3433092	ParameterList	"bc_num accum , bc_num val , int shift , int sub"		3432833	3					
ANR	3433093	Parameter	bc_num accum	116:18:3263:3274	3432833	0	True				
ANR	3433094	ParameterType	bc_num		3432833	0					
ANR	3433095	Identifier	accum		3432833	1					
ANR	3433096	Parameter	bc_num val	116:32:3277:3286	3432833	1	True				
ANR	3433097	ParameterType	bc_num		3432833	0					
ANR	3433098	Identifier	val		3432833	1					
ANR	3433099	Parameter	int shift	116:44:3289:3297	3432833	2	True				
ANR	3433100	ParameterType	int		3432833	0					
ANR	3433101	Identifier	shift		3432833	1					
ANR	3433102	Parameter	int sub	116:55:3300:3306	3432833	3	True				
ANR	3433103	ParameterType	int		3432833	0					
ANR	3433104	Identifier	sub		3432833	1					
ANR	3433105	CFGEntryNode	ENTRY		3432833		True				
ANR	3433106	CFGExitNode	EXIT		3432833		True				
ANR	3433107	Symbol	val		3432833						
ANR	3433108	Symbol	sub		3432833						
ANR	3433109	Symbol	accp		3432833						
ANR	3433110	Symbol	* accum		3432833						
ANR	3433111	Symbol	shift		3432833						
ANR	3433112	Symbol	count		3432833						
ANR	3433113	Symbol	* accp --		3432833						
ANR	3433114	Symbol	* val		3432833						
ANR	3433115	Symbol	accum -> n_value		3432833						
ANR	3433116	Symbol	BASE		3432833						
ANR	3433117	Symbol	val -> n_value		3432833						
ANR	3433118	Symbol	accum -> n_len		3432833						
ANR	3433119	Symbol	* valp --		3432833						
ANR	3433120	Symbol	val -> n_len		3432833						
ANR	3433121	Symbol	* * val		3432833						
ANR	3433122	Symbol	valp		3432833						
ANR	3433123	Symbol	* accp		3432833						
ANR	3433124	Symbol	carry		3432833						
ANR	3433125	Symbol	accum		3432833						
ANR	3433126	Symbol	* val -> n_value		3432833						
ANR	3433127	Symbol	accum -> n_scale		3432833						
ANR	3433128	Function	_bc_rec_mul	181:0:4592:6831							
ANR	3433129	FunctionDef	"_bc_rec_mul (bc_num u , int ulen , bc_num v , int vlen , bc_num * prod , int full_scale)"		3433128	0					
ANR	3433130	CompoundStatement		184:0:4693:6831	3433128	0					
ANR	3433131	IdentifierDeclStatement	"bc_num u0 , u1 , v0 , v1 ;"	185:2:4697:4718	3433128	0	True				
ANR	3433132	IdentifierDecl	u0		3433128	0					
ANR	3433133	IdentifierDeclType	bc_num		3433128	0					
ANR	3433134	Identifier	u0		3433128	1					
ANR	3433135	IdentifierDecl	u1		3433128	1					
ANR	3433136	IdentifierDeclType	bc_num		3433128	0					
ANR	3433137	Identifier	u1		3433128	1					
ANR	3433138	IdentifierDecl	v0		3433128	2					
ANR	3433139	IdentifierDeclType	bc_num		3433128	0					
ANR	3433140	Identifier	v0		3433128	1					
ANR	3433141	IdentifierDecl	v1		3433128	3					
ANR	3433142	IdentifierDeclType	bc_num		3433128	0					
ANR	3433143	Identifier	v1		3433128	1					
ANR	3433144	IdentifierDeclStatement	"bc_num m1 , m2 , m3 , d1 , d2 ;"	186:2:4722:4747	3433128	1	True				
ANR	3433145	IdentifierDecl	m1		3433128	0					
ANR	3433146	IdentifierDeclType	bc_num		3433128	0					
ANR	3433147	Identifier	m1		3433128	1					
ANR	3433148	IdentifierDecl	m2		3433128	1					
ANR	3433149	IdentifierDeclType	bc_num		3433128	0					
ANR	3433150	Identifier	m2		3433128	1					
ANR	3433151	IdentifierDecl	m3		3433128	2					
ANR	3433152	IdentifierDeclType	bc_num		3433128	0					
ANR	3433153	Identifier	m3		3433128	1					
ANR	3433154	IdentifierDecl	d1		3433128	3					
ANR	3433155	IdentifierDeclType	bc_num		3433128	0					
ANR	3433156	Identifier	d1		3433128	1					
ANR	3433157	IdentifierDecl	d2		3433128	4					
ANR	3433158	IdentifierDeclType	bc_num		3433128	0					
ANR	3433159	Identifier	d2		3433128	1					
ANR	3433160	IdentifierDeclStatement	"int n , prodlen , m1zero ;"	187:2:4751:4773	3433128	2	True				
ANR	3433161	IdentifierDecl	n		3433128	0					
ANR	3433162	IdentifierDeclType	int		3433128	0					
ANR	3433163	Identifier	n		3433128	1					
ANR	3433164	IdentifierDecl	prodlen		3433128	1					
ANR	3433165	IdentifierDeclType	int		3433128	0					
ANR	3433166	Identifier	prodlen		3433128	1					
ANR	3433167	IdentifierDecl	m1zero		3433128	2					
ANR	3433168	IdentifierDeclType	int		3433128	0					
ANR	3433169	Identifier	m1zero		3433128	1					
ANR	3433170	IdentifierDeclStatement	"int d1len , d2len ;"	188:2:4777:4793	3433128	3	True				
ANR	3433171	IdentifierDecl	d1len		3433128	0					
ANR	3433172	IdentifierDeclType	int		3433128	0					
ANR	3433173	Identifier	d1len		3433128	1					
ANR	3433174	IdentifierDecl	d2len		3433128	1					
ANR	3433175	IdentifierDeclType	int		3433128	0					
ANR	3433176	Identifier	d2len		3433128	1					
ANR	3433177	IfStatement	if ( ( ulen + vlen ) < mul_base_digits || ulen < MUL_SMALL_DIGITS || vlen < MUL_SMALL_DIGITS )		3433128	4					
ANR	3433178	Condition	( ulen + vlen ) < mul_base_digits || ulen < MUL_SMALL_DIGITS || vlen < MUL_SMALL_DIGITS	191:6:4821:4915	3433128	0	True				
ANR	3433179	OrExpression	( ulen + vlen ) < mul_base_digits || ulen < MUL_SMALL_DIGITS || vlen < MUL_SMALL_DIGITS		3433128	0		||			
ANR	3433180	RelationalExpression	( ulen + vlen ) < mul_base_digits		3433128	0		<			
ANR	3433181	AdditiveExpression	ulen + vlen		3433128	0		+			
ANR	3433182	Identifier	ulen		3433128	0					
ANR	3433183	Identifier	vlen		3433128	1					
ANR	3433184	Identifier	mul_base_digits		3433128	1					
ANR	3433185	OrExpression	ulen < MUL_SMALL_DIGITS || vlen < MUL_SMALL_DIGITS		3433128	1		||			
ANR	3433186	RelationalExpression	ulen < MUL_SMALL_DIGITS		3433128	0		<			
ANR	3433187	Identifier	ulen		3433128	0					
ANR	3433188	Identifier	MUL_SMALL_DIGITS		3433128	1					
ANR	3433189	RelationalExpression	vlen < MUL_SMALL_DIGITS		3433128	1		<			
ANR	3433190	Identifier	vlen		3433128	0					
ANR	3433191	Identifier	MUL_SMALL_DIGITS		3433128	1					
ANR	3433192	CompoundStatement		10:35:225:225	3433128	1					
ANR	3433193	ExpressionStatement	"_bc_simp_mul ( u , ulen , v , vlen , prod , full_scale )"	194:4:4925:4974	3433128	0	True				
ANR	3433194	CallExpression	"_bc_simp_mul ( u , ulen , v , vlen , prod , full_scale )"		3433128	0					
ANR	3433195	Callee	_bc_simp_mul		3433128	0					
ANR	3433196	Identifier	_bc_simp_mul		3433128	0					
ANR	3433197	ArgumentList	u		3433128	1					
ANR	3433198	Argument	u		3433128	0					
ANR	3433199	Identifier	u		3433128	0					
ANR	3433200	Argument	ulen		3433128	1					
ANR	3433201	Identifier	ulen		3433128	0					
ANR	3433202	Argument	v		3433128	2					
ANR	3433203	Identifier	v		3433128	0					
ANR	3433204	Argument	vlen		3433128	3					
ANR	3433205	Identifier	vlen		3433128	0					
ANR	3433206	Argument	prod		3433128	4					
ANR	3433207	Identifier	prod		3433128	0					
ANR	3433208	Argument	full_scale		3433128	5					
ANR	3433209	Identifier	full_scale		3433128	0					
ANR	3433210	ReturnStatement	return ;	195:4:4980:4986	3433128	1	True				
ANR	3433211	ExpressionStatement	"n = ( MAX ( ulen , vlen ) + 1 ) / 2"	199:2:5053:5080	3433128	5	True				
ANR	3433212	AssignmentExpression	"n = ( MAX ( ulen , vlen ) + 1 ) / 2"		3433128	0		=			
ANR	3433213	Identifier	n		3433128	0					
ANR	3433214	MultiplicativeExpression	"( MAX ( ulen , vlen ) + 1 ) / 2"		3433128	1		/			
ANR	3433215	AdditiveExpression	"MAX ( ulen , vlen ) + 1"		3433128	0		+			
ANR	3433216	CallExpression	"MAX ( ulen , vlen )"		3433128	0					
ANR	3433217	Callee	MAX		3433128	0					
ANR	3433218	Identifier	MAX		3433128	0					
ANR	3433219	ArgumentList	ulen		3433128	1					
ANR	3433220	Argument	ulen		3433128	0					
ANR	3433221	Identifier	ulen		3433128	0					
ANR	3433222	Argument	vlen		3433128	1					
ANR	3433223	Identifier	vlen		3433128	0					
ANR	3433224	PrimaryExpression	1		3433128	1					
ANR	3433225	PrimaryExpression	2		3433128	1					
ANR	3433226	IfStatement	if ( ulen < n )		3433128	6					
ANR	3433227	Condition	ulen < n	202:6:5112:5119	3433128	0	True				
ANR	3433228	RelationalExpression	ulen < n		3433128	0		<			
ANR	3433229	Identifier	ulen		3433128	0					
ANR	3433230	Identifier	n		3433128	1					
ANR	3433231	CompoundStatement		19:16:428:428	3433128	1					
ANR	3433232	ExpressionStatement	u1 = bc_copy_num ( BCG ( _zero_ ) )	203:4:5128:5158	3433128	0	True				
ANR	3433233	AssignmentExpression	u1 = bc_copy_num ( BCG ( _zero_ ) )		3433128	0		=			
ANR	3433234	Identifier	u1		3433128	0					
ANR	3433235	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		3433128	1					
ANR	3433236	Callee	bc_copy_num		3433128	0					
ANR	3433237	Identifier	bc_copy_num		3433128	0					
ANR	3433238	ArgumentList	BCG ( _zero_ )		3433128	1					
ANR	3433239	Argument	BCG ( _zero_ )		3433128	0					
ANR	3433240	CallExpression	BCG ( _zero_ )		3433128	0					
ANR	3433241	Callee	BCG		3433128	0					
ANR	3433242	Identifier	BCG		3433128	0					
ANR	3433243	ArgumentList	_zero_		3433128	1					
ANR	3433244	Argument	_zero_		3433128	0					
ANR	3433245	Identifier	_zero_		3433128	0					
ANR	3433246	ExpressionStatement	"u0 = new_sub_num ( ulen , 0 , u -> n_value )"	204:4:5164:5201	3433128	1	True				
ANR	3433247	AssignmentExpression	"u0 = new_sub_num ( ulen , 0 , u -> n_value )"		3433128	0		=			
ANR	3433248	Identifier	u0		3433128	0					
ANR	3433249	CallExpression	"new_sub_num ( ulen , 0 , u -> n_value )"		3433128	1					
ANR	3433250	Callee	new_sub_num		3433128	0					
ANR	3433251	Identifier	new_sub_num		3433128	0					
ANR	3433252	ArgumentList	ulen		3433128	1					
ANR	3433253	Argument	ulen		3433128	0					
ANR	3433254	Identifier	ulen		3433128	0					
ANR	3433255	Argument	0		3433128	1					
ANR	3433256	PrimaryExpression	0		3433128	0					
ANR	3433257	Argument	u -> n_value		3433128	2					
ANR	3433258	PtrMemberAccess	u -> n_value		3433128	0					
ANR	3433259	Identifier	u		3433128	0					
ANR	3433260	Identifier	n_value		3433128	1					
ANR	3433261	ElseStatement	else		3433128	0					
ANR	3433262	CompoundStatement		22:9:518:518	3433128	0					
ANR	3433263	ExpressionStatement	"u1 = new_sub_num ( ulen - n , 0 , u -> n_value )"	206:4:5218:5258	3433128	0	True				
ANR	3433264	AssignmentExpression	"u1 = new_sub_num ( ulen - n , 0 , u -> n_value )"		3433128	0		=			
ANR	3433265	Identifier	u1		3433128	0					
ANR	3433266	CallExpression	"new_sub_num ( ulen - n , 0 , u -> n_value )"		3433128	1					
ANR	3433267	Callee	new_sub_num		3433128	0					
ANR	3433268	Identifier	new_sub_num		3433128	0					
ANR	3433269	ArgumentList	ulen - n		3433128	1					
ANR	3433270	Argument	ulen - n		3433128	0					
ANR	3433271	AdditiveExpression	ulen - n		3433128	0		-			
ANR	3433272	Identifier	ulen		3433128	0					
ANR	3433273	Identifier	n		3433128	1					
ANR	3433274	Argument	0		3433128	1					
ANR	3433275	PrimaryExpression	0		3433128	0					
ANR	3433276	Argument	u -> n_value		3433128	2					
ANR	3433277	PtrMemberAccess	u -> n_value		3433128	0					
ANR	3433278	Identifier	u		3433128	0					
ANR	3433279	Identifier	n_value		3433128	1					
ANR	3433280	ExpressionStatement	"u0 = new_sub_num ( n , 0 , u -> n_value + ulen - n )"	207:4:5264:5306	3433128	1	True				
ANR	3433281	AssignmentExpression	"u0 = new_sub_num ( n , 0 , u -> n_value + ulen - n )"		3433128	0		=			
ANR	3433282	Identifier	u0		3433128	0					
ANR	3433283	CallExpression	"new_sub_num ( n , 0 , u -> n_value + ulen - n )"		3433128	1					
ANR	3433284	Callee	new_sub_num		3433128	0					
ANR	3433285	Identifier	new_sub_num		3433128	0					
ANR	3433286	ArgumentList	n		3433128	1					
ANR	3433287	Argument	n		3433128	0					
ANR	3433288	Identifier	n		3433128	0					
ANR	3433289	Argument	0		3433128	1					
ANR	3433290	PrimaryExpression	0		3433128	0					
ANR	3433291	Argument	u -> n_value + ulen - n		3433128	2					
ANR	3433292	AdditiveExpression	u -> n_value + ulen - n		3433128	0		+			
ANR	3433293	PtrMemberAccess	u -> n_value		3433128	0					
ANR	3433294	Identifier	u		3433128	0					
ANR	3433295	Identifier	n_value		3433128	1					
ANR	3433296	AdditiveExpression	ulen - n		3433128	1		-			
ANR	3433297	Identifier	ulen		3433128	0					
ANR	3433298	Identifier	n		3433128	1					
ANR	3433299	IfStatement	if ( vlen < n )		3433128	7					
ANR	3433300	Condition	vlen < n	209:6:5318:5325	3433128	0	True				
ANR	3433301	RelationalExpression	vlen < n		3433128	0		<			
ANR	3433302	Identifier	vlen		3433128	0					
ANR	3433303	Identifier	n		3433128	1					
ANR	3433304	CompoundStatement		26:16:634:634	3433128	1					
ANR	3433305	ExpressionStatement	v1 = bc_copy_num ( BCG ( _zero_ ) )	210:4:5334:5364	3433128	0	True				
ANR	3433306	AssignmentExpression	v1 = bc_copy_num ( BCG ( _zero_ ) )		3433128	0		=			
ANR	3433307	Identifier	v1		3433128	0					
ANR	3433308	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		3433128	1					
ANR	3433309	Callee	bc_copy_num		3433128	0					
ANR	3433310	Identifier	bc_copy_num		3433128	0					
ANR	3433311	ArgumentList	BCG ( _zero_ )		3433128	1					
ANR	3433312	Argument	BCG ( _zero_ )		3433128	0					
ANR	3433313	CallExpression	BCG ( _zero_ )		3433128	0					
ANR	3433314	Callee	BCG		3433128	0					
ANR	3433315	Identifier	BCG		3433128	0					
ANR	3433316	ArgumentList	_zero_		3433128	1					
ANR	3433317	Argument	_zero_		3433128	0					
ANR	3433318	Identifier	_zero_		3433128	0					
ANR	3433319	ExpressionStatement	"v0 = new_sub_num ( vlen , 0 , v -> n_value )"	211:4:5370:5407	3433128	1	True				
ANR	3433320	AssignmentExpression	"v0 = new_sub_num ( vlen , 0 , v -> n_value )"		3433128	0		=			
ANR	3433321	Identifier	v0		3433128	0					
ANR	3433322	CallExpression	"new_sub_num ( vlen , 0 , v -> n_value )"		3433128	1					
ANR	3433323	Callee	new_sub_num		3433128	0					
ANR	3433324	Identifier	new_sub_num		3433128	0					
ANR	3433325	ArgumentList	vlen		3433128	1					
ANR	3433326	Argument	vlen		3433128	0					
ANR	3433327	Identifier	vlen		3433128	0					
ANR	3433328	Argument	0		3433128	1					
ANR	3433329	PrimaryExpression	0		3433128	0					
ANR	3433330	Argument	v -> n_value		3433128	2					
ANR	3433331	PtrMemberAccess	v -> n_value		3433128	0					
ANR	3433332	Identifier	v		3433128	0					
ANR	3433333	Identifier	n_value		3433128	1					
ANR	3433334	ElseStatement	else		3433128	0					
ANR	3433335	CompoundStatement		29:9:724:724	3433128	0					
ANR	3433336	ExpressionStatement	"v1 = new_sub_num ( vlen - n , 0 , v -> n_value )"	213:4:5424:5464	3433128	0	True				
ANR	3433337	AssignmentExpression	"v1 = new_sub_num ( vlen - n , 0 , v -> n_value )"		3433128	0		=			
ANR	3433338	Identifier	v1		3433128	0					
ANR	3433339	CallExpression	"new_sub_num ( vlen - n , 0 , v -> n_value )"		3433128	1					
ANR	3433340	Callee	new_sub_num		3433128	0					
ANR	3433341	Identifier	new_sub_num		3433128	0					
ANR	3433342	ArgumentList	vlen - n		3433128	1					
ANR	3433343	Argument	vlen - n		3433128	0					
ANR	3433344	AdditiveExpression	vlen - n		3433128	0		-			
ANR	3433345	Identifier	vlen		3433128	0					
ANR	3433346	Identifier	n		3433128	1					
ANR	3433347	Argument	0		3433128	1					
ANR	3433348	PrimaryExpression	0		3433128	0					
ANR	3433349	Argument	v -> n_value		3433128	2					
ANR	3433350	PtrMemberAccess	v -> n_value		3433128	0					
ANR	3433351	Identifier	v		3433128	0					
ANR	3433352	Identifier	n_value		3433128	1					
ANR	3433353	ExpressionStatement	"v0 = new_sub_num ( n , 0 , v -> n_value + vlen - n )"	214:4:5470:5512	3433128	1	True				
ANR	3433354	AssignmentExpression	"v0 = new_sub_num ( n , 0 , v -> n_value + vlen - n )"		3433128	0		=			
ANR	3433355	Identifier	v0		3433128	0					
ANR	3433356	CallExpression	"new_sub_num ( n , 0 , v -> n_value + vlen - n )"		3433128	1					
ANR	3433357	Callee	new_sub_num		3433128	0					
ANR	3433358	Identifier	new_sub_num		3433128	0					
ANR	3433359	ArgumentList	n		3433128	1					
ANR	3433360	Argument	n		3433128	0					
ANR	3433361	Identifier	n		3433128	0					
ANR	3433362	Argument	0		3433128	1					
ANR	3433363	PrimaryExpression	0		3433128	0					
ANR	3433364	Argument	v -> n_value + vlen - n		3433128	2					
ANR	3433365	AdditiveExpression	v -> n_value + vlen - n		3433128	0		+			
ANR	3433366	PtrMemberAccess	v -> n_value		3433128	0					
ANR	3433367	Identifier	v		3433128	0					
ANR	3433368	Identifier	n_value		3433128	1					
ANR	3433369	AdditiveExpression	vlen - n		3433128	1		-			
ANR	3433370	Identifier	vlen		3433128	0					
ANR	3433371	Identifier	n		3433128	1					
ANR	3433372	ExpressionStatement	_bc_rm_leading_zeros ( u1 )	216:2:5522:5547	3433128	8	True				
ANR	3433373	CallExpression	_bc_rm_leading_zeros ( u1 )		3433128	0					
ANR	3433374	Callee	_bc_rm_leading_zeros		3433128	0					
ANR	3433375	Identifier	_bc_rm_leading_zeros		3433128	0					
ANR	3433376	ArgumentList	u1		3433128	1					
ANR	3433377	Argument	u1		3433128	0					
ANR	3433378	Identifier	u1		3433128	0					
ANR	3433379	ExpressionStatement	_bc_rm_leading_zeros ( u0 )	217:2:5551:5576	3433128	9	True				
ANR	3433380	CallExpression	_bc_rm_leading_zeros ( u0 )		3433128	0					
ANR	3433381	Callee	_bc_rm_leading_zeros		3433128	0					
ANR	3433382	Identifier	_bc_rm_leading_zeros		3433128	0					
ANR	3433383	ArgumentList	u0		3433128	1					
ANR	3433384	Argument	u0		3433128	0					
ANR	3433385	Identifier	u0		3433128	0					
ANR	3433386	ExpressionStatement	_bc_rm_leading_zeros ( v1 )	218:2:5580:5605	3433128	10	True				
ANR	3433387	CallExpression	_bc_rm_leading_zeros ( v1 )		3433128	0					
ANR	3433388	Callee	_bc_rm_leading_zeros		3433128	0					
ANR	3433389	Identifier	_bc_rm_leading_zeros		3433128	0					
ANR	3433390	ArgumentList	v1		3433128	1					
ANR	3433391	Argument	v1		3433128	0					
ANR	3433392	Identifier	v1		3433128	0					
ANR	3433393	ExpressionStatement	_bc_rm_leading_zeros ( v0 )	219:2:5609:5634	3433128	11	True				
ANR	3433394	CallExpression	_bc_rm_leading_zeros ( v0 )		3433128	0					
ANR	3433395	Callee	_bc_rm_leading_zeros		3433128	0					
ANR	3433396	Identifier	_bc_rm_leading_zeros		3433128	0					
ANR	3433397	ArgumentList	v0		3433128	1					
ANR	3433398	Argument	v0		3433128	0					
ANR	3433399	Identifier	v0		3433128	0					
ANR	3433400	ExpressionStatement	m1zero = bc_is_zero ( u1 ) || bc_is_zero ( v1 )	221:2:5639:5680	3433128	12	True				
ANR	3433401	AssignmentExpression	m1zero = bc_is_zero ( u1 ) || bc_is_zero ( v1 )		3433128	0		=			
ANR	3433402	Identifier	m1zero		3433128	0					
ANR	3433403	OrExpression	bc_is_zero ( u1 ) || bc_is_zero ( v1 )		3433128	1		||			
ANR	3433404	CallExpression	bc_is_zero ( u1 )		3433128	0					
ANR	3433405	Callee	bc_is_zero		3433128	0					
ANR	3433406	Identifier	bc_is_zero		3433128	0					
ANR	3433407	ArgumentList	u1		3433128	1					
ANR	3433408	Argument	u1		3433128	0					
ANR	3433409	Identifier	u1		3433128	0					
ANR	3433410	CallExpression	bc_is_zero ( v1 )		3433128	1					
ANR	3433411	Callee	bc_is_zero		3433128	0					
ANR	3433412	Identifier	bc_is_zero		3433128	0					
ANR	3433413	ArgumentList	v1		3433128	1					
ANR	3433414	Argument	v1		3433128	0					
ANR	3433415	Identifier	v1		3433128	0					
ANR	3433416	ExpressionStatement	bc_init_num ( & d1 )	225:2:5720:5736	3433128	13	True				
ANR	3433417	CallExpression	bc_init_num ( & d1 )		3433128	0					
ANR	3433418	Callee	bc_init_num		3433128	0					
ANR	3433419	Identifier	bc_init_num		3433128	0					
ANR	3433420	ArgumentList	& d1		3433128	1					
ANR	3433421	Argument	& d1		3433128	0					
ANR	3433422	UnaryOperationExpression	& d1		3433128	0					
ANR	3433423	UnaryOperator	&		3433128	0					
ANR	3433424	Identifier	d1		3433128	1					
ANR	3433425	ExpressionStatement	bc_init_num ( & d2 )	226:2:5740:5756	3433128	14	True				
ANR	3433426	CallExpression	bc_init_num ( & d2 )		3433128	0					
ANR	3433427	Callee	bc_init_num		3433128	0					
ANR	3433428	Identifier	bc_init_num		3433128	0					
ANR	3433429	ArgumentList	& d2		3433128	1					
ANR	3433430	Argument	& d2		3433128	0					
ANR	3433431	UnaryOperationExpression	& d2		3433128	0					
ANR	3433432	UnaryOperator	&		3433128	0					
ANR	3433433	Identifier	d2		3433128	1					
ANR	3433434	ExpressionStatement	"bc_sub ( u1 , u0 , & d1 , 0 )"	227:2:5760:5783	3433128	15	True				
ANR	3433435	CallExpression	"bc_sub ( u1 , u0 , & d1 , 0 )"		3433128	0					
ANR	3433436	Callee	bc_sub		3433128	0					
ANR	3433437	Identifier	bc_sub		3433128	0					
ANR	3433438	ArgumentList	u1		3433128	1					
ANR	3433439	Argument	u1		3433128	0					
ANR	3433440	Identifier	u1		3433128	0					
ANR	3433441	Argument	u0		3433128	1					
ANR	3433442	Identifier	u0		3433128	0					
ANR	3433443	Argument	& d1		3433128	2					
ANR	3433444	UnaryOperationExpression	& d1		3433128	0					
ANR	3433445	UnaryOperator	&		3433128	0					
ANR	3433446	Identifier	d1		3433128	1					
ANR	3433447	Argument	0		3433128	3					
ANR	3433448	PrimaryExpression	0		3433128	0					
ANR	3433449	ExpressionStatement	d1len = d1 -> n_len	228:2:5787:5804	3433128	16	True				
ANR	3433450	AssignmentExpression	d1len = d1 -> n_len		3433128	0		=			
ANR	3433451	Identifier	d1len		3433128	0					
ANR	3433452	PtrMemberAccess	d1 -> n_len		3433128	1					
ANR	3433453	Identifier	d1		3433128	0					
ANR	3433454	Identifier	n_len		3433128	1					
ANR	3433455	ExpressionStatement	"bc_sub ( v0 , v1 , & d2 , 0 )"	229:2:5808:5831	3433128	17	True				
ANR	3433456	CallExpression	"bc_sub ( v0 , v1 , & d2 , 0 )"		3433128	0					
ANR	3433457	Callee	bc_sub		3433128	0					
ANR	3433458	Identifier	bc_sub		3433128	0					
ANR	3433459	ArgumentList	v0		3433128	1					
ANR	3433460	Argument	v0		3433128	0					
ANR	3433461	Identifier	v0		3433128	0					
ANR	3433462	Argument	v1		3433128	1					
ANR	3433463	Identifier	v1		3433128	0					
ANR	3433464	Argument	& d2		3433128	2					
ANR	3433465	UnaryOperationExpression	& d2		3433128	0					
ANR	3433466	UnaryOperator	&		3433128	0					
ANR	3433467	Identifier	d2		3433128	1					
ANR	3433468	Argument	0		3433128	3					
ANR	3433469	PrimaryExpression	0		3433128	0					
ANR	3433470	ExpressionStatement	d2len = d2 -> n_len	230:2:5835:5852	3433128	18	True				
ANR	3433471	AssignmentExpression	d2len = d2 -> n_len		3433128	0		=			
ANR	3433472	Identifier	d2len		3433128	0					
ANR	3433473	PtrMemberAccess	d2 -> n_len		3433128	1					
ANR	3433474	Identifier	d2		3433128	0					
ANR	3433475	Identifier	n_len		3433128	1					
ANR	3433476	IfStatement	if ( m1zero )		3433128	19					
ANR	3433477	Condition	m1zero	234:6:5912:5917	3433128	0	True				
ANR	3433478	Identifier	m1zero		3433128	0					
ANR	3433479	ExpressionStatement	m1 = bc_copy_num ( BCG ( _zero_ ) )	235:4:5924:5954	3433128	1	True				
ANR	3433480	AssignmentExpression	m1 = bc_copy_num ( BCG ( _zero_ ) )		3433128	0		=			
ANR	3433481	Identifier	m1		3433128	0					
ANR	3433482	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		3433128	1					
ANR	3433483	Callee	bc_copy_num		3433128	0					
ANR	3433484	Identifier	bc_copy_num		3433128	0					
ANR	3433485	ArgumentList	BCG ( _zero_ )		3433128	1					
ANR	3433486	Argument	BCG ( _zero_ )		3433128	0					
ANR	3433487	CallExpression	BCG ( _zero_ )		3433128	0					
ANR	3433488	Callee	BCG		3433128	0					
ANR	3433489	Identifier	BCG		3433128	0					
ANR	3433490	ArgumentList	_zero_		3433128	1					
ANR	3433491	Argument	_zero_		3433128	0					
ANR	3433492	Identifier	_zero_		3433128	0					
ANR	3433493	ElseStatement	else		3433128	0					
ANR	3433494	ExpressionStatement	"_bc_rec_mul ( u1 , u1 -> n_len , v1 , v1 -> n_len , & m1 , 0 )"	237:4:5967:6017	3433128	0	True				
ANR	3433495	CallExpression	"_bc_rec_mul ( u1 , u1 -> n_len , v1 , v1 -> n_len , & m1 , 0 )"		3433128	0					
ANR	3433496	Callee	_bc_rec_mul		3433128	0					
ANR	3433497	Identifier	_bc_rec_mul		3433128	0					
ANR	3433498	ArgumentList	u1		3433128	1					
ANR	3433499	Argument	u1		3433128	0					
ANR	3433500	Identifier	u1		3433128	0					
ANR	3433501	Argument	u1 -> n_len		3433128	1					
ANR	3433502	PtrMemberAccess	u1 -> n_len		3433128	0					
ANR	3433503	Identifier	u1		3433128	0					
ANR	3433504	Identifier	n_len		3433128	1					
ANR	3433505	Argument	v1		3433128	2					
ANR	3433506	Identifier	v1		3433128	0					
ANR	3433507	Argument	v1 -> n_len		3433128	3					
ANR	3433508	PtrMemberAccess	v1 -> n_len		3433128	0					
ANR	3433509	Identifier	v1		3433128	0					
ANR	3433510	Identifier	n_len		3433128	1					
ANR	3433511	Argument	& m1		3433128	4					
ANR	3433512	UnaryOperationExpression	& m1		3433128	0					
ANR	3433513	UnaryOperator	&		3433128	0					
ANR	3433514	Identifier	m1		3433128	1					
ANR	3433515	Argument	0		3433128	5					
ANR	3433516	PrimaryExpression	0		3433128	0					
ANR	3433517	IfStatement	if ( bc_is_zero ( d1 ) || bc_is_zero ( d2 ) )		3433128	20					
ANR	3433518	Condition	bc_is_zero ( d1 ) || bc_is_zero ( d2 )	239:6:6026:6057	3433128	0	True				
ANR	3433519	OrExpression	bc_is_zero ( d1 ) || bc_is_zero ( d2 )		3433128	0		||			
ANR	3433520	CallExpression	bc_is_zero ( d1 )		3433128	0					
ANR	3433521	Callee	bc_is_zero		3433128	0					
ANR	3433522	Identifier	bc_is_zero		3433128	0					
ANR	3433523	ArgumentList	d1		3433128	1					
ANR	3433524	Argument	d1		3433128	0					
ANR	3433525	Identifier	d1		3433128	0					
ANR	3433526	CallExpression	bc_is_zero ( d2 )		3433128	1					
ANR	3433527	Callee	bc_is_zero		3433128	0					
ANR	3433528	Identifier	bc_is_zero		3433128	0					
ANR	3433529	ArgumentList	d2		3433128	1					
ANR	3433530	Argument	d2		3433128	0					
ANR	3433531	Identifier	d2		3433128	0					
ANR	3433532	ExpressionStatement	m2 = bc_copy_num ( BCG ( _zero_ ) )	240:4:6064:6094	3433128	1	True				
ANR	3433533	AssignmentExpression	m2 = bc_copy_num ( BCG ( _zero_ ) )		3433128	0		=			
ANR	3433534	Identifier	m2		3433128	0					
ANR	3433535	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		3433128	1					
ANR	3433536	Callee	bc_copy_num		3433128	0					
ANR	3433537	Identifier	bc_copy_num		3433128	0					
ANR	3433538	ArgumentList	BCG ( _zero_ )		3433128	1					
ANR	3433539	Argument	BCG ( _zero_ )		3433128	0					
ANR	3433540	CallExpression	BCG ( _zero_ )		3433128	0					
ANR	3433541	Callee	BCG		3433128	0					
ANR	3433542	Identifier	BCG		3433128	0					
ANR	3433543	ArgumentList	_zero_		3433128	1					
ANR	3433544	Argument	_zero_		3433128	0					
ANR	3433545	Identifier	_zero_		3433128	0					
ANR	3433546	ElseStatement	else		3433128	0					
ANR	3433547	ExpressionStatement	"_bc_rec_mul ( d1 , d1len , d2 , d2len , & m2 , 0 )"	242:4:6107:6149	3433128	0	True				
ANR	3433548	CallExpression	"_bc_rec_mul ( d1 , d1len , d2 , d2len , & m2 , 0 )"		3433128	0					
ANR	3433549	Callee	_bc_rec_mul		3433128	0					
ANR	3433550	Identifier	_bc_rec_mul		3433128	0					
ANR	3433551	ArgumentList	d1		3433128	1					
ANR	3433552	Argument	d1		3433128	0					
ANR	3433553	Identifier	d1		3433128	0					
ANR	3433554	Argument	d1len		3433128	1					
ANR	3433555	Identifier	d1len		3433128	0					
ANR	3433556	Argument	d2		3433128	2					
ANR	3433557	Identifier	d2		3433128	0					
ANR	3433558	Argument	d2len		3433128	3					
ANR	3433559	Identifier	d2len		3433128	0					
ANR	3433560	Argument	& m2		3433128	4					
ANR	3433561	UnaryOperationExpression	& m2		3433128	0					
ANR	3433562	UnaryOperator	&		3433128	0					
ANR	3433563	Identifier	m2		3433128	1					
ANR	3433564	Argument	0		3433128	5					
ANR	3433565	PrimaryExpression	0		3433128	0					
ANR	3433566	IfStatement	if ( bc_is_zero ( u0 ) || bc_is_zero ( v0 ) )		3433128	21					
ANR	3433567	Condition	bc_is_zero ( u0 ) || bc_is_zero ( v0 )	244:6:6158:6189	3433128	0	True				
ANR	3433568	OrExpression	bc_is_zero ( u0 ) || bc_is_zero ( v0 )		3433128	0		||			
ANR	3433569	CallExpression	bc_is_zero ( u0 )		3433128	0					
ANR	3433570	Callee	bc_is_zero		3433128	0					
ANR	3433571	Identifier	bc_is_zero		3433128	0					
ANR	3433572	ArgumentList	u0		3433128	1					
ANR	3433573	Argument	u0		3433128	0					
ANR	3433574	Identifier	u0		3433128	0					
ANR	3433575	CallExpression	bc_is_zero ( v0 )		3433128	1					
ANR	3433576	Callee	bc_is_zero		3433128	0					
ANR	3433577	Identifier	bc_is_zero		3433128	0					
ANR	3433578	ArgumentList	v0		3433128	1					
ANR	3433579	Argument	v0		3433128	0					
ANR	3433580	Identifier	v0		3433128	0					
ANR	3433581	ExpressionStatement	m3 = bc_copy_num ( BCG ( _zero_ ) )	245:4:6196:6226	3433128	1	True				
ANR	3433582	AssignmentExpression	m3 = bc_copy_num ( BCG ( _zero_ ) )		3433128	0		=			
ANR	3433583	Identifier	m3		3433128	0					
ANR	3433584	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		3433128	1					
ANR	3433585	Callee	bc_copy_num		3433128	0					
ANR	3433586	Identifier	bc_copy_num		3433128	0					
ANR	3433587	ArgumentList	BCG ( _zero_ )		3433128	1					
ANR	3433588	Argument	BCG ( _zero_ )		3433128	0					
ANR	3433589	CallExpression	BCG ( _zero_ )		3433128	0					
ANR	3433590	Callee	BCG		3433128	0					
ANR	3433591	Identifier	BCG		3433128	0					
ANR	3433592	ArgumentList	_zero_		3433128	1					
ANR	3433593	Argument	_zero_		3433128	0					
ANR	3433594	Identifier	_zero_		3433128	0					
ANR	3433595	ElseStatement	else		3433128	0					
ANR	3433596	ExpressionStatement	"_bc_rec_mul ( u0 , u0 -> n_len , v0 , v0 -> n_len , & m3 , 0 )"	247:4:6239:6289	3433128	0	True				
ANR	3433597	CallExpression	"_bc_rec_mul ( u0 , u0 -> n_len , v0 , v0 -> n_len , & m3 , 0 )"		3433128	0					
ANR	3433598	Callee	_bc_rec_mul		3433128	0					
ANR	3433599	Identifier	_bc_rec_mul		3433128	0					
ANR	3433600	ArgumentList	u0		3433128	1					
ANR	3433601	Argument	u0		3433128	0					
ANR	3433602	Identifier	u0		3433128	0					
ANR	3433603	Argument	u0 -> n_len		3433128	1					
ANR	3433604	PtrMemberAccess	u0 -> n_len		3433128	0					
ANR	3433605	Identifier	u0		3433128	0					
ANR	3433606	Identifier	n_len		3433128	1					
ANR	3433607	Argument	v0		3433128	2					
ANR	3433608	Identifier	v0		3433128	0					
ANR	3433609	Argument	v0 -> n_len		3433128	3					
ANR	3433610	PtrMemberAccess	v0 -> n_len		3433128	0					
ANR	3433611	Identifier	v0		3433128	0					
ANR	3433612	Identifier	n_len		3433128	1					
ANR	3433613	Argument	& m3		3433128	4					
ANR	3433614	UnaryOperationExpression	& m3		3433128	0					
ANR	3433615	UnaryOperator	&		3433128	0					
ANR	3433616	Identifier	m3		3433128	1					
ANR	3433617	Argument	0		3433128	5					
ANR	3433618	PrimaryExpression	0		3433128	0					
ANR	3433619	ExpressionStatement	prodlen = ulen + vlen + 1	250:2:6321:6342	3433128	22	True				
ANR	3433620	AssignmentExpression	prodlen = ulen + vlen + 1		3433128	0		=			
ANR	3433621	Identifier	prodlen		3433128	0					
ANR	3433622	AdditiveExpression	ulen + vlen + 1		3433128	1		+			
ANR	3433623	Identifier	ulen		3433128	0					
ANR	3433624	AdditiveExpression	vlen + 1		3433128	1		+			
ANR	3433625	Identifier	vlen		3433128	0					
ANR	3433626	PrimaryExpression	1		3433128	1					
ANR	3433627	ExpressionStatement	"* prod = bc_new_num ( prodlen , 0 )"	251:2:6346:6376	3433128	23	True				
ANR	3433628	AssignmentExpression	"* prod = bc_new_num ( prodlen , 0 )"		3433128	0		=			
ANR	3433629	UnaryOperationExpression	* prod		3433128	0					
ANR	3433630	UnaryOperator	*		3433128	0					
ANR	3433631	Identifier	prod		3433128	1					
ANR	3433632	CallExpression	"bc_new_num ( prodlen , 0 )"		3433128	1					
ANR	3433633	Callee	bc_new_num		3433128	0					
ANR	3433634	Identifier	bc_new_num		3433128	0					
ANR	3433635	ArgumentList	prodlen		3433128	1					
ANR	3433636	Argument	prodlen		3433128	0					
ANR	3433637	Identifier	prodlen		3433128	0					
ANR	3433638	Argument	0		3433128	1					
ANR	3433639	PrimaryExpression	0		3433128	0					
ANR	3433640	IfStatement	if ( ! m1zero )		3433128	24					
ANR	3433641	Condition	! m1zero	253:6:6385:6391	3433128	0	True				
ANR	3433642	UnaryOperationExpression	! m1zero		3433128	0					
ANR	3433643	UnaryOperator	!		3433128	0					
ANR	3433644	Identifier	m1zero		3433128	1					
ANR	3433645	CompoundStatement		70:15:1700:1700	3433128	1					
ANR	3433646	ExpressionStatement	"_bc_shift_addsub ( * prod , m1 , 2 * n , 0 )"	254:4:6400:6436	3433128	0	True				
ANR	3433647	CallExpression	"_bc_shift_addsub ( * prod , m1 , 2 * n , 0 )"		3433128	0					
ANR	3433648	Callee	_bc_shift_addsub		3433128	0					
ANR	3433649	Identifier	_bc_shift_addsub		3433128	0					
ANR	3433650	ArgumentList	* prod		3433128	1					
ANR	3433651	Argument	* prod		3433128	0					
ANR	3433652	UnaryOperationExpression	* prod		3433128	0					
ANR	3433653	UnaryOperator	*		3433128	0					
ANR	3433654	Identifier	prod		3433128	1					
ANR	3433655	Argument	m1		3433128	1					
ANR	3433656	Identifier	m1		3433128	0					
ANR	3433657	Argument	2 * n		3433128	2					
ANR	3433658	MultiplicativeExpression	2 * n		3433128	0		*			
ANR	3433659	PrimaryExpression	2		3433128	0					
ANR	3433660	Identifier	n		3433128	1					
ANR	3433661	Argument	0		3433128	3					
ANR	3433662	PrimaryExpression	0		3433128	0					
ANR	3433663	ExpressionStatement	"_bc_shift_addsub ( * prod , m1 , n , 0 )"	255:4:6442:6476	3433128	1	True				
ANR	3433664	CallExpression	"_bc_shift_addsub ( * prod , m1 , n , 0 )"		3433128	0					
ANR	3433665	Callee	_bc_shift_addsub		3433128	0					
ANR	3433666	Identifier	_bc_shift_addsub		3433128	0					
ANR	3433667	ArgumentList	* prod		3433128	1					
ANR	3433668	Argument	* prod		3433128	0					
ANR	3433669	UnaryOperationExpression	* prod		3433128	0					
ANR	3433670	UnaryOperator	*		3433128	0					
ANR	3433671	Identifier	prod		3433128	1					
ANR	3433672	Argument	m1		3433128	1					
ANR	3433673	Identifier	m1		3433128	0					
ANR	3433674	Argument	n		3433128	2					
ANR	3433675	Identifier	n		3433128	0					
ANR	3433676	Argument	0		3433128	3					
ANR	3433677	PrimaryExpression	0		3433128	0					
ANR	3433678	ExpressionStatement	"_bc_shift_addsub ( * prod , m3 , n , 0 )"	257:2:6484:6518	3433128	25	True				
ANR	3433679	CallExpression	"_bc_shift_addsub ( * prod , m3 , n , 0 )"		3433128	0					
ANR	3433680	Callee	_bc_shift_addsub		3433128	0					
ANR	3433681	Identifier	_bc_shift_addsub		3433128	0					
ANR	3433682	ArgumentList	* prod		3433128	1					
ANR	3433683	Argument	* prod		3433128	0					
ANR	3433684	UnaryOperationExpression	* prod		3433128	0					
ANR	3433685	UnaryOperator	*		3433128	0					
ANR	3433686	Identifier	prod		3433128	1					
ANR	3433687	Argument	m3		3433128	1					
ANR	3433688	Identifier	m3		3433128	0					
ANR	3433689	Argument	n		3433128	2					
ANR	3433690	Identifier	n		3433128	0					
ANR	3433691	Argument	0		3433128	3					
ANR	3433692	PrimaryExpression	0		3433128	0					
ANR	3433693	ExpressionStatement	"_bc_shift_addsub ( * prod , m3 , 0 , 0 )"	258:2:6522:6556	3433128	26	True				
ANR	3433694	CallExpression	"_bc_shift_addsub ( * prod , m3 , 0 , 0 )"		3433128	0					
ANR	3433695	Callee	_bc_shift_addsub		3433128	0					
ANR	3433696	Identifier	_bc_shift_addsub		3433128	0					
ANR	3433697	ArgumentList	* prod		3433128	1					
ANR	3433698	Argument	* prod		3433128	0					
ANR	3433699	UnaryOperationExpression	* prod		3433128	0					
ANR	3433700	UnaryOperator	*		3433128	0					
ANR	3433701	Identifier	prod		3433128	1					
ANR	3433702	Argument	m3		3433128	1					
ANR	3433703	Identifier	m3		3433128	0					
ANR	3433704	Argument	0		3433128	2					
ANR	3433705	PrimaryExpression	0		3433128	0					
ANR	3433706	Argument	0		3433128	3					
ANR	3433707	PrimaryExpression	0		3433128	0					
ANR	3433708	ExpressionStatement	"_bc_shift_addsub ( * prod , m2 , n , d1 -> n_sign != d2 -> n_sign )"	259:2:6560:6617	3433128	27	True				
ANR	3433709	CallExpression	"_bc_shift_addsub ( * prod , m2 , n , d1 -> n_sign != d2 -> n_sign )"		3433128	0					
ANR	3433710	Callee	_bc_shift_addsub		3433128	0					
ANR	3433711	Identifier	_bc_shift_addsub		3433128	0					
ANR	3433712	ArgumentList	* prod		3433128	1					
ANR	3433713	Argument	* prod		3433128	0					
ANR	3433714	UnaryOperationExpression	* prod		3433128	0					
ANR	3433715	UnaryOperator	*		3433128	0					
ANR	3433716	Identifier	prod		3433128	1					
ANR	3433717	Argument	m2		3433128	1					
ANR	3433718	Identifier	m2		3433128	0					
ANR	3433719	Argument	n		3433128	2					
ANR	3433720	Identifier	n		3433128	0					
ANR	3433721	Argument	d1 -> n_sign != d2 -> n_sign		3433128	3					
ANR	3433722	EqualityExpression	d1 -> n_sign != d2 -> n_sign		3433128	0		!=			
ANR	3433723	PtrMemberAccess	d1 -> n_sign		3433128	0					
ANR	3433724	Identifier	d1		3433128	0					
ANR	3433725	Identifier	n_sign		3433128	1					
ANR	3433726	PtrMemberAccess	d2 -> n_sign		3433128	1					
ANR	3433727	Identifier	d2		3433128	0					
ANR	3433728	Identifier	n_sign		3433128	1					
ANR	3433729	ExpressionStatement	bc_free_num ( & u1 )	262:2:6644:6661	3433128	28	True				
ANR	3433730	CallExpression	bc_free_num ( & u1 )		3433128	0					
ANR	3433731	Callee	bc_free_num		3433128	0					
ANR	3433732	Identifier	bc_free_num		3433128	0					
ANR	3433733	ArgumentList	& u1		3433128	1					
ANR	3433734	Argument	& u1		3433128	0					
ANR	3433735	UnaryOperationExpression	& u1		3433128	0					
ANR	3433736	UnaryOperator	&		3433128	0					
ANR	3433737	Identifier	u1		3433128	1					
ANR	3433738	ExpressionStatement	bc_free_num ( & u0 )	263:2:6665:6682	3433128	29	True				
ANR	3433739	CallExpression	bc_free_num ( & u0 )		3433128	0					
ANR	3433740	Callee	bc_free_num		3433128	0					
ANR	3433741	Identifier	bc_free_num		3433128	0					
ANR	3433742	ArgumentList	& u0		3433128	1					
ANR	3433743	Argument	& u0		3433128	0					
ANR	3433744	UnaryOperationExpression	& u0		3433128	0					
ANR	3433745	UnaryOperator	&		3433128	0					
ANR	3433746	Identifier	u0		3433128	1					
ANR	3433747	ExpressionStatement	bc_free_num ( & v1 )	264:2:6686:6703	3433128	30	True				
ANR	3433748	CallExpression	bc_free_num ( & v1 )		3433128	0					
ANR	3433749	Callee	bc_free_num		3433128	0					
ANR	3433750	Identifier	bc_free_num		3433128	0					
ANR	3433751	ArgumentList	& v1		3433128	1					
ANR	3433752	Argument	& v1		3433128	0					
ANR	3433753	UnaryOperationExpression	& v1		3433128	0					
ANR	3433754	UnaryOperator	&		3433128	0					
ANR	3433755	Identifier	v1		3433128	1					
ANR	3433756	ExpressionStatement	bc_free_num ( & m1 )	265:2:6707:6724	3433128	31	True				
ANR	3433757	CallExpression	bc_free_num ( & m1 )		3433128	0					
ANR	3433758	Callee	bc_free_num		3433128	0					
ANR	3433759	Identifier	bc_free_num		3433128	0					
ANR	3433760	ArgumentList	& m1		3433128	1					
ANR	3433761	Argument	& m1		3433128	0					
ANR	3433762	UnaryOperationExpression	& m1		3433128	0					
ANR	3433763	UnaryOperator	&		3433128	0					
ANR	3433764	Identifier	m1		3433128	1					
ANR	3433765	ExpressionStatement	bc_free_num ( & v0 )	266:2:6728:6745	3433128	32	True				
ANR	3433766	CallExpression	bc_free_num ( & v0 )		3433128	0					
ANR	3433767	Callee	bc_free_num		3433128	0					
ANR	3433768	Identifier	bc_free_num		3433128	0					
ANR	3433769	ArgumentList	& v0		3433128	1					
ANR	3433770	Argument	& v0		3433128	0					
ANR	3433771	UnaryOperationExpression	& v0		3433128	0					
ANR	3433772	UnaryOperator	&		3433128	0					
ANR	3433773	Identifier	v0		3433128	1					
ANR	3433774	ExpressionStatement	bc_free_num ( & m2 )	267:2:6749:6766	3433128	33	True				
ANR	3433775	CallExpression	bc_free_num ( & m2 )		3433128	0					
ANR	3433776	Callee	bc_free_num		3433128	0					
ANR	3433777	Identifier	bc_free_num		3433128	0					
ANR	3433778	ArgumentList	& m2		3433128	1					
ANR	3433779	Argument	& m2		3433128	0					
ANR	3433780	UnaryOperationExpression	& m2		3433128	0					
ANR	3433781	UnaryOperator	&		3433128	0					
ANR	3433782	Identifier	m2		3433128	1					
ANR	3433783	ExpressionStatement	bc_free_num ( & m3 )	268:2:6770:6787	3433128	34	True				
ANR	3433784	CallExpression	bc_free_num ( & m3 )		3433128	0					
ANR	3433785	Callee	bc_free_num		3433128	0					
ANR	3433786	Identifier	bc_free_num		3433128	0					
ANR	3433787	ArgumentList	& m3		3433128	1					
ANR	3433788	Argument	& m3		3433128	0					
ANR	3433789	UnaryOperationExpression	& m3		3433128	0					
ANR	3433790	UnaryOperator	&		3433128	0					
ANR	3433791	Identifier	m3		3433128	1					
ANR	3433792	ExpressionStatement	bc_free_num ( & d1 )	269:2:6791:6808	3433128	35	True				
ANR	3433793	CallExpression	bc_free_num ( & d1 )		3433128	0					
ANR	3433794	Callee	bc_free_num		3433128	0					
ANR	3433795	Identifier	bc_free_num		3433128	0					
ANR	3433796	ArgumentList	& d1		3433128	1					
ANR	3433797	Argument	& d1		3433128	0					
ANR	3433798	UnaryOperationExpression	& d1		3433128	0					
ANR	3433799	UnaryOperator	&		3433128	0					
ANR	3433800	Identifier	d1		3433128	1					
ANR	3433801	ExpressionStatement	bc_free_num ( & d2 )	270:2:6812:6829	3433128	36	True				
ANR	3433802	CallExpression	bc_free_num ( & d2 )		3433128	0					
ANR	3433803	Callee	bc_free_num		3433128	0					
ANR	3433804	Identifier	bc_free_num		3433128	0					
ANR	3433805	ArgumentList	& d2		3433128	1					
ANR	3433806	Argument	& d2		3433128	0					
ANR	3433807	UnaryOperationExpression	& d2		3433128	0					
ANR	3433808	UnaryOperator	&		3433128	0					
ANR	3433809	Identifier	d2		3433128	1					
ANR	3433810	ReturnType	static void		3433128	1					
ANR	3433811	Identifier	_bc_rec_mul		3433128	2					
ANR	3433812	ParameterList	"bc_num u , int ulen , bc_num v , int vlen , bc_num * prod , int full_scale"		3433128	3					
ANR	3433813	Parameter	bc_num u	182:13:4617:4624	3433128	0	True				
ANR	3433814	ParameterType	bc_num		3433128	0					
ANR	3433815	Identifier	u		3433128	1					
ANR	3433816	Parameter	int ulen	182:23:4627:4634	3433128	1	True				
ANR	3433817	ParameterType	int		3433128	0					
ANR	3433818	Identifier	ulen		3433128	1					
ANR	3433819	Parameter	bc_num v	182:33:4637:4644	3433128	2	True				
ANR	3433820	ParameterType	bc_num		3433128	0					
ANR	3433821	Identifier	v		3433128	1					
ANR	3433822	Parameter	int vlen	182:43:4647:4654	3433128	3	True				
ANR	3433823	ParameterType	int		3433128	0					
ANR	3433824	Identifier	vlen		3433128	1					
ANR	3433825	Parameter	bc_num * prod	182:53:4657:4668	3433128	4	True				
ANR	3433826	ParameterType	bc_num *		3433128	0					
ANR	3433827	Identifier	prod		3433128	1					
ANR	3433828	Parameter	int full_scale	183:6:4677:4690	3433128	5	True				
ANR	3433829	ParameterType	int		3433128	0					
ANR	3433830	Identifier	full_scale		3433128	1					
ANR	3433831	CFGEntryNode	ENTRY		3433128		True				
ANR	3433832	CFGExitNode	EXIT		3433128		True				
ANR	3433833	Symbol	* v		3433128						
ANR	3433834	Symbol	* u1		3433128						
ANR	3433835	Symbol	* u0		3433128						
ANR	3433836	Symbol	& u0		3433128						
ANR	3433837	Symbol	& u1		3433128						
ANR	3433838	Symbol	v -> n_value		3433128						
ANR	3433839	Symbol	& m2		3433128						
ANR	3433840	Symbol	& m1		3433128						
ANR	3433841	Symbol	* d1		3433128						
ANR	3433842	Symbol	v0 -> n_len		3433128						
ANR	3433843	Symbol	& d1		3433128						
ANR	3433844	Symbol	u1 -> n_len		3433128						
ANR	3433845	Symbol	d1 -> n_len		3433128						
ANR	3433846	Symbol	* d2		3433128						
ANR	3433847	Symbol	& d2		3433128						
ANR	3433848	Symbol	d2len		3433128						
ANR	3433849	Symbol	* v1		3433128						
ANR	3433850	Symbol	* v0		3433128						
ANR	3433851	Symbol	& v1		3433128						
ANR	3433852	Symbol	& v0		3433128						
ANR	3433853	Symbol	BCG		3433128						
ANR	3433854	Symbol	new_sub_num		3433128						
ANR	3433855	Symbol	v1 -> n_len		3433128						
ANR	3433856	Symbol	* prod		3433128						
ANR	3433857	Symbol	d1len		3433128						
ANR	3433858	Symbol	& m3		3433128						
ANR	3433859	Symbol	ulen		3433128						
ANR	3433860	Symbol	_zero_		3433128						
ANR	3433861	Symbol	u0 -> n_len		3433128						
ANR	3433862	Symbol	MAX		3433128						
ANR	3433863	Symbol	d1		3433128						
ANR	3433864	Symbol	bc_new_num		3433128						
ANR	3433865	Symbol	d2		3433128						
ANR	3433866	Symbol	d2 -> n_len		3433128						
ANR	3433867	Symbol	bc_copy_num		3433128						
ANR	3433868	Symbol	d2 -> n_sign		3433128						
ANR	3433869	Symbol	full_scale		3433128						
ANR	3433870	Symbol	prodlen		3433128						
ANR	3433871	Symbol	u0		3433128						
ANR	3433872	Symbol	u1		3433128						
ANR	3433873	Symbol	bc_is_zero		3433128						
ANR	3433874	Symbol	u -> n_value		3433128						
ANR	3433875	Symbol	prod		3433128						
ANR	3433876	Symbol	m1		3433128						
ANR	3433877	Symbol	m2		3433128						
ANR	3433878	Symbol	m3		3433128						
ANR	3433879	Symbol	m1zero		3433128						
ANR	3433880	Symbol	mul_base_digits		3433128						
ANR	3433881	Symbol	vlen		3433128						
ANR	3433882	Symbol	n		3433128						
ANR	3433883	Symbol	u		3433128						
ANR	3433884	Symbol	v		3433128						
ANR	3433885	Symbol	v0		3433128						
ANR	3433886	Symbol	MUL_SMALL_DIGITS		3433128						
ANR	3433887	Symbol	v1		3433128						
ANR	3433888	Symbol	d1 -> n_sign		3433128						
ANR	3433889	Symbol	* u		3433128						
ANR	3433890	Function	bc_multiply	277:0:6990:7747							
ANR	3433891	FunctionDef	"bc_multiply (bc_num n1 , bc_num n2 , bc_num * prod , int scale)"		3433890	0					
ANR	3433892	CompoundStatement		279:0:7055:7747	3433890	0					
ANR	3433893	IdentifierDeclStatement	bc_num pval ;	280:2:7059:7070	3433890	0	True				
ANR	3433894	IdentifierDecl	pval		3433890	0					
ANR	3433895	IdentifierDeclType	bc_num		3433890	0					
ANR	3433896	Identifier	pval		3433890	1					
ANR	3433897	IdentifierDeclStatement	"int len1 , len2 ;"	281:2:7074:7088	3433890	1	True				
ANR	3433898	IdentifierDecl	len1		3433890	0					
ANR	3433899	IdentifierDeclType	int		3433890	0					
ANR	3433900	Identifier	len1		3433890	1					
ANR	3433901	IdentifierDecl	len2		3433890	1					
ANR	3433902	IdentifierDeclType	int		3433890	0					
ANR	3433903	Identifier	len2		3433890	1					
ANR	3433904	IdentifierDeclStatement	"int full_scale , prod_scale ;"	282:2:7092:7118	3433890	2	True				
ANR	3433905	IdentifierDecl	full_scale		3433890	0					
ANR	3433906	IdentifierDeclType	int		3433890	0					
ANR	3433907	Identifier	full_scale		3433890	1					
ANR	3433908	IdentifierDecl	prod_scale		3433890	1					
ANR	3433909	IdentifierDeclType	int		3433890	0					
ANR	3433910	Identifier	prod_scale		3433890	1					
ANR	3433911	ExpressionStatement	len1 = n1 -> n_len + n1 -> n_scale	285:2:7150:7180	3433890	3	True				
ANR	3433912	AssignmentExpression	len1 = n1 -> n_len + n1 -> n_scale		3433890	0		=			
ANR	3433913	Identifier	len1		3433890	0					
ANR	3433914	AdditiveExpression	n1 -> n_len + n1 -> n_scale		3433890	1		+			
ANR	3433915	PtrMemberAccess	n1 -> n_len		3433890	0					
ANR	3433916	Identifier	n1		3433890	0					
ANR	3433917	Identifier	n_len		3433890	1					
ANR	3433918	PtrMemberAccess	n1 -> n_scale		3433890	1					
ANR	3433919	Identifier	n1		3433890	0					
ANR	3433920	Identifier	n_scale		3433890	1					
ANR	3433921	ExpressionStatement	len2 = n2 -> n_len + n2 -> n_scale	286:2:7184:7214	3433890	4	True				
ANR	3433922	AssignmentExpression	len2 = n2 -> n_len + n2 -> n_scale		3433890	0		=			
ANR	3433923	Identifier	len2		3433890	0					
ANR	3433924	AdditiveExpression	n2 -> n_len + n2 -> n_scale		3433890	1		+			
ANR	3433925	PtrMemberAccess	n2 -> n_len		3433890	0					
ANR	3433926	Identifier	n2		3433890	0					
ANR	3433927	Identifier	n_len		3433890	1					
ANR	3433928	PtrMemberAccess	n2 -> n_scale		3433890	1					
ANR	3433929	Identifier	n2		3433890	0					
ANR	3433930	Identifier	n_scale		3433890	1					
ANR	3433931	ExpressionStatement	full_scale = n1 -> n_scale + n2 -> n_scale	287:2:7218:7256	3433890	5	True				
ANR	3433932	AssignmentExpression	full_scale = n1 -> n_scale + n2 -> n_scale		3433890	0		=			
ANR	3433933	Identifier	full_scale		3433890	0					
ANR	3433934	AdditiveExpression	n1 -> n_scale + n2 -> n_scale		3433890	1		+			
ANR	3433935	PtrMemberAccess	n1 -> n_scale		3433890	0					
ANR	3433936	Identifier	n1		3433890	0					
ANR	3433937	Identifier	n_scale		3433890	1					
ANR	3433938	PtrMemberAccess	n2 -> n_scale		3433890	1					
ANR	3433939	Identifier	n2		3433890	0					
ANR	3433940	Identifier	n_scale		3433890	1					
ANR	3433941	ExpressionStatement	"prod_scale = MIN ( full_scale , MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) ) )"	288:2:7260:7328	3433890	6	True				
ANR	3433942	AssignmentExpression	"prod_scale = MIN ( full_scale , MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) ) )"		3433890	0		=			
ANR	3433943	Identifier	prod_scale		3433890	0					
ANR	3433944	CallExpression	"MIN ( full_scale , MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) ) )"		3433890	1					
ANR	3433945	Callee	MIN		3433890	0					
ANR	3433946	Identifier	MIN		3433890	0					
ANR	3433947	ArgumentList	full_scale		3433890	1					
ANR	3433948	Argument	full_scale		3433890	0					
ANR	3433949	Identifier	full_scale		3433890	0					
ANR	3433950	Argument	"MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) )"		3433890	1					
ANR	3433951	CallExpression	"MAX ( scale , MAX ( n1 -> n_scale , n2 -> n_scale ) )"		3433890	0					
ANR	3433952	Callee	MAX		3433890	0					
ANR	3433953	Identifier	MAX		3433890	0					
ANR	3433954	ArgumentList	scale		3433890	1					
ANR	3433955	Argument	scale		3433890	0					
ANR	3433956	Identifier	scale		3433890	0					
ANR	3433957	Argument	"MAX ( n1 -> n_scale , n2 -> n_scale )"		3433890	1					
ANR	3433958	CallExpression	"MAX ( n1 -> n_scale , n2 -> n_scale )"		3433890	0					
ANR	3433959	Callee	MAX		3433890	0					
ANR	3433960	Identifier	MAX		3433890	0					
ANR	3433961	ArgumentList	n1 -> n_scale		3433890	1					
ANR	3433962	Argument	n1 -> n_scale		3433890	0					
ANR	3433963	PtrMemberAccess	n1 -> n_scale		3433890	0					
ANR	3433964	Identifier	n1		3433890	0					
ANR	3433965	Identifier	n_scale		3433890	1					
ANR	3433966	Argument	n2 -> n_scale		3433890	1					
ANR	3433967	PtrMemberAccess	n2 -> n_scale		3433890	0					
ANR	3433968	Identifier	n2		3433890	0					
ANR	3433969	Identifier	n_scale		3433890	1					
ANR	3433970	ExpressionStatement	"_bc_rec_mul ( n1 , len1 , n2 , len2 , & pval , full_scale )"	291:2:7357:7408	3433890	7	True				
ANR	3433971	CallExpression	"_bc_rec_mul ( n1 , len1 , n2 , len2 , & pval , full_scale )"		3433890	0					
ANR	3433972	Callee	_bc_rec_mul		3433890	0					
ANR	3433973	Identifier	_bc_rec_mul		3433890	0					
ANR	3433974	ArgumentList	n1		3433890	1					
ANR	3433975	Argument	n1		3433890	0					
ANR	3433976	Identifier	n1		3433890	0					
ANR	3433977	Argument	len1		3433890	1					
ANR	3433978	Identifier	len1		3433890	0					
ANR	3433979	Argument	n2		3433890	2					
ANR	3433980	Identifier	n2		3433890	0					
ANR	3433981	Argument	len2		3433890	3					
ANR	3433982	Identifier	len2		3433890	0					
ANR	3433983	Argument	& pval		3433890	4					
ANR	3433984	UnaryOperationExpression	& pval		3433890	0					
ANR	3433985	UnaryOperator	&		3433890	0					
ANR	3433986	Identifier	pval		3433890	1					
ANR	3433987	Argument	full_scale		3433890	5					
ANR	3433988	Identifier	full_scale		3433890	0					
ANR	3433989	ExpressionStatement	pval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )	294:2:7461:7519	3433890	8	True				
ANR	3433990	AssignmentExpression	pval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )		3433890	0		=			
ANR	3433991	PtrMemberAccess	pval -> n_sign		3433890	0					
ANR	3433992	Identifier	pval		3433890	0					
ANR	3433993	Identifier	n_sign		3433890	1					
ANR	3433994	ConditionalExpression	n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS		3433890	1					
ANR	3433995	Condition	n1 -> n_sign == n2 -> n_sign		3433890	0					
ANR	3433996	EqualityExpression	n1 -> n_sign == n2 -> n_sign		3433890	0		==			
ANR	3433997	PtrMemberAccess	n1 -> n_sign		3433890	0					
ANR	3433998	Identifier	n1		3433890	0					
ANR	3433999	Identifier	n_sign		3433890	1					
ANR	3434000	PtrMemberAccess	n2 -> n_sign		3433890	1					
ANR	3434001	Identifier	n2		3433890	0					
ANR	3434002	Identifier	n_sign		3433890	1					
ANR	3434003	Identifier	PLUS		3433890	1					
ANR	3434004	Identifier	MINUS		3433890	2					
ANR	3434005	ExpressionStatement	pval -> n_value = pval -> n_ptr	295:2:7523:7550	3433890	9	True				
ANR	3434006	AssignmentExpression	pval -> n_value = pval -> n_ptr		3433890	0		=			
ANR	3434007	PtrMemberAccess	pval -> n_value		3433890	0					
ANR	3434008	Identifier	pval		3433890	0					
ANR	3434009	Identifier	n_value		3433890	1					
ANR	3434010	PtrMemberAccess	pval -> n_ptr		3433890	1					
ANR	3434011	Identifier	pval		3433890	0					
ANR	3434012	Identifier	n_ptr		3433890	1					
ANR	3434013	ExpressionStatement	pval -> n_len = len2 + len1 + 1 - full_scale	296:2:7554:7596	3433890	10	True				
ANR	3434014	AssignmentExpression	pval -> n_len = len2 + len1 + 1 - full_scale		3433890	0		=			
ANR	3434015	PtrMemberAccess	pval -> n_len		3433890	0					
ANR	3434016	Identifier	pval		3433890	0					
ANR	3434017	Identifier	n_len		3433890	1					
ANR	3434018	AdditiveExpression	len2 + len1 + 1 - full_scale		3433890	1		+			
ANR	3434019	Identifier	len2		3433890	0					
ANR	3434020	AdditiveExpression	len1 + 1 - full_scale		3433890	1		+			
ANR	3434021	Identifier	len1		3433890	0					
ANR	3434022	AdditiveExpression	1 - full_scale		3433890	1		-			
ANR	3434023	PrimaryExpression	1		3433890	0					
ANR	3434024	Identifier	full_scale		3433890	1					
ANR	3434025	ExpressionStatement	pval -> n_scale = prod_scale	297:2:7600:7626	3433890	11	True				
ANR	3434026	AssignmentExpression	pval -> n_scale = prod_scale		3433890	0		=			
ANR	3434027	PtrMemberAccess	pval -> n_scale		3433890	0					
ANR	3434028	Identifier	pval		3433890	0					
ANR	3434029	Identifier	n_scale		3433890	1					
ANR	3434030	Identifier	prod_scale		3433890	1					
ANR	3434031	ExpressionStatement	_bc_rm_leading_zeros ( pval )	298:2:7630:7657	3433890	12	True				
ANR	3434032	CallExpression	_bc_rm_leading_zeros ( pval )		3433890	0					
ANR	3434033	Callee	_bc_rm_leading_zeros		3433890	0					
ANR	3434034	Identifier	_bc_rm_leading_zeros		3433890	0					
ANR	3434035	ArgumentList	pval		3433890	1					
ANR	3434036	Argument	pval		3433890	0					
ANR	3434037	Identifier	pval		3433890	0					
ANR	3434038	IfStatement	if ( bc_is_zero ( pval ) )		3433890	13					
ANR	3434039	Condition	bc_is_zero ( pval )	299:6:7665:7681	3433890	0	True				
ANR	3434040	CallExpression	bc_is_zero ( pval )		3433890	0					
ANR	3434041	Callee	bc_is_zero		3433890	0					
ANR	3434042	Identifier	bc_is_zero		3433890	0					
ANR	3434043	ArgumentList	pval		3433890	1					
ANR	3434044	Argument	pval		3433890	0					
ANR	3434045	Identifier	pval		3433890	0					
ANR	3434046	ExpressionStatement	pval -> n_sign = PLUS	300:4:7688:7707	3433890	1	True				
ANR	3434047	AssignmentExpression	pval -> n_sign = PLUS		3433890	0		=			
ANR	3434048	PtrMemberAccess	pval -> n_sign		3433890	0					
ANR	3434049	Identifier	pval		3433890	0					
ANR	3434050	Identifier	n_sign		3433890	1					
ANR	3434051	Identifier	PLUS		3433890	1					
ANR	3434052	ExpressionStatement	bc_free_num ( prod )	301:2:7711:7729	3433890	14	True				
ANR	3434053	CallExpression	bc_free_num ( prod )		3433890	0					
ANR	3434054	Callee	bc_free_num		3433890	0					
ANR	3434055	Identifier	bc_free_num		3433890	0					
ANR	3434056	ArgumentList	prod		3433890	1					
ANR	3434057	Argument	prod		3433890	0					
ANR	3434058	Identifier	prod		3433890	0					
ANR	3434059	ExpressionStatement	* prod = pval	302:2:7733:7745	3433890	15	True				
ANR	3434060	AssignmentExpression	* prod = pval		3433890	0		=			
ANR	3434061	UnaryOperationExpression	* prod		3433890	0					
ANR	3434062	UnaryOperator	*		3433890	0					
ANR	3434063	Identifier	prod		3433890	1					
ANR	3434064	Identifier	pval		3433890	1					
ANR	3434065	ReturnType	void		3433890	1					
ANR	3434066	Identifier	bc_multiply		3433890	2					
ANR	3434067	ParameterList	"bc_num n1 , bc_num n2 , bc_num * prod , int scale"		3433890	3					
ANR	3434068	Parameter	bc_num n1	278:13:7008:7016	3433890	0	True				
ANR	3434069	ParameterType	bc_num		3433890	0					
ANR	3434070	Identifier	n1		3433890	1					
ANR	3434071	Parameter	bc_num n2	278:24:7019:7027	3433890	1	True				
ANR	3434072	ParameterType	bc_num		3433890	0					
ANR	3434073	Identifier	n2		3433890	1					
ANR	3434074	Parameter	bc_num * prod	278:35:7030:7041	3433890	2	True				
ANR	3434075	ParameterType	bc_num *		3433890	0					
ANR	3434076	Identifier	prod		3433890	1					
ANR	3434077	Parameter	int scale	278:49:7044:7052	3433890	3	True				
ANR	3434078	ParameterType	int		3433890	0					
ANR	3434079	Identifier	scale		3433890	1					
ANR	3434080	CFGEntryNode	ENTRY		3433890		True				
ANR	3434081	CFGExitNode	EXIT		3433890		True				
ANR	3434082	Symbol	n1		3433890						
ANR	3434083	Symbol	n2		3433890						
ANR	3434084	Symbol	* pval		3433890						
ANR	3434085	Symbol	pval		3433890						
ANR	3434086	Symbol	MAX		3433890						
ANR	3434087	Symbol	scale		3433890						
ANR	3434088	Symbol	n2 -> n_sign		3433890						
ANR	3434089	Symbol	pval -> n_scale		3433890						
ANR	3434090	Symbol	len1		3433890						
ANR	3434091	Symbol	len2		3433890						
ANR	3434092	Symbol	MINUS		3433890						
ANR	3434093	Symbol	full_scale		3433890						
ANR	3434094	Symbol	n1 -> n_scale		3433890						
ANR	3434095	Symbol	n1 -> n_len		3433890						
ANR	3434096	Symbol	bc_is_zero		3433890						
ANR	3434097	Symbol	prod		3433890						
ANR	3434098	Symbol	& pval		3433890						
ANR	3434099	Symbol	n2 -> n_scale		3433890						
ANR	3434100	Symbol	n1 -> n_sign		3433890						
ANR	3434101	Symbol	prod_scale		3433890						
ANR	3434102	Symbol	* n2		3433890						
ANR	3434103	Symbol	n2 -> n_len		3433890						
ANR	3434104	Symbol	* n1		3433890						
ANR	3434105	Symbol	pval -> n_sign		3433890						
ANR	3434106	Symbol	pval -> n_ptr		3433890						
ANR	3434107	Symbol	* prod		3433890						
ANR	3434108	Symbol	MIN		3433890						
ANR	3434109	Symbol	pval -> n_len		3433890						
ANR	3434110	Symbol	pval -> n_value		3433890						
ANR	3434111	Symbol	PLUS		3433890						
