command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3960184	File	data/converged/CVE-2015-8617_php-src/zend_constants.c								
ANR	3960185	Function	free_zend_constant	31:0:1441:1712							
ANR	3960186	FunctionDef	free_zend_constant (zval * zv)		3960185	0					
ANR	3960187	CompoundStatement		32:0:1475:1712	3960185	0					
ANR	3960188	IdentifierDeclStatement	zend_constant * c = Z_PTR_P ( zv ) ;	33:1:1478:1508	3960185	0	True				
ANR	3960189	IdentifierDecl	* c = Z_PTR_P ( zv )		3960185	0					
ANR	3960190	IdentifierDeclType	zend_constant *		3960185	0					
ANR	3960191	Identifier	c		3960185	1					
ANR	3960192	AssignmentExpression	* c = Z_PTR_P ( zv )		3960185	2		=			
ANR	3960193	Identifier	c		3960185	0					
ANR	3960194	CallExpression	Z_PTR_P ( zv )		3960185	1					
ANR	3960195	Callee	Z_PTR_P		3960185	0					
ANR	3960196	Identifier	Z_PTR_P		3960185	0					
ANR	3960197	ArgumentList	zv		3960185	1					
ANR	3960198	Argument	zv		3960185	0					
ANR	3960199	Identifier	zv		3960185	0					
ANR	3960200	IfStatement	if ( ! ( c -> flags & CONST_PERSISTENT ) )		3960185	1					
ANR	3960201	Condition	! ( c -> flags & CONST_PERSISTENT )	35:5:1516:1545	3960185	0	True				
ANR	3960202	UnaryOperationExpression	! ( c -> flags & CONST_PERSISTENT )		3960185	0					
ANR	3960203	UnaryOperator	!		3960185	0					
ANR	3960204	BitAndExpression	c -> flags & CONST_PERSISTENT		3960185	1		&			
ANR	3960205	PtrMemberAccess	c -> flags		3960185	0					
ANR	3960206	Identifier	c		3960185	0					
ANR	3960207	Identifier	flags		3960185	1					
ANR	3960208	Identifier	CONST_PERSISTENT		3960185	1					
ANR	3960209	CompoundStatement		4:37:72:72	3960185	1					
ANR	3960210	ExpressionStatement	zval_dtor ( & c -> value )	36:2:1552:1572	3960185	0	True				
ANR	3960211	CallExpression	zval_dtor ( & c -> value )		3960185	0					
ANR	3960212	Callee	zval_dtor		3960185	0					
ANR	3960213	Identifier	zval_dtor		3960185	0					
ANR	3960214	ArgumentList	& c -> value		3960185	1					
ANR	3960215	Argument	& c -> value		3960185	0					
ANR	3960216	UnaryOperationExpression	& c -> value		3960185	0					
ANR	3960217	UnaryOperator	&		3960185	0					
ANR	3960218	PtrMemberAccess	c -> value		3960185	1					
ANR	3960219	Identifier	c		3960185	0					
ANR	3960220	Identifier	value		3960185	1					
ANR	3960221	ElseStatement	else		3960185	0					
ANR	3960222	CompoundStatement		6:8:106:106	3960185	0					
ANR	3960223	ExpressionStatement	zval_internal_dtor ( & c -> value )	38:2:1586:1615	3960185	0	True				
ANR	3960224	CallExpression	zval_internal_dtor ( & c -> value )		3960185	0					
ANR	3960225	Callee	zval_internal_dtor		3960185	0					
ANR	3960226	Identifier	zval_internal_dtor		3960185	0					
ANR	3960227	ArgumentList	& c -> value		3960185	1					
ANR	3960228	Argument	& c -> value		3960185	0					
ANR	3960229	UnaryOperationExpression	& c -> value		3960185	0					
ANR	3960230	UnaryOperator	&		3960185	0					
ANR	3960231	PtrMemberAccess	c -> value		3960185	1					
ANR	3960232	Identifier	c		3960185	0					
ANR	3960233	Identifier	value		3960185	1					
ANR	3960234	IfStatement	if ( c -> name )		3960185	2					
ANR	3960235	Condition	c -> name	40:5:1625:1631	3960185	0	True				
ANR	3960236	PtrMemberAccess	c -> name		3960185	0					
ANR	3960237	Identifier	c		3960185	0					
ANR	3960238	Identifier	name		3960185	1					
ANR	3960239	CompoundStatement		9:14:158:158	3960185	1					
ANR	3960240	ExpressionStatement	zend_string_release ( c -> name )	41:2:1638:1666	3960185	0	True				
ANR	3960241	CallExpression	zend_string_release ( c -> name )		3960185	0					
ANR	3960242	Callee	zend_string_release		3960185	0					
ANR	3960243	Identifier	zend_string_release		3960185	0					
ANR	3960244	ArgumentList	c -> name		3960185	1					
ANR	3960245	Argument	c -> name		3960185	0					
ANR	3960246	PtrMemberAccess	c -> name		3960185	0					
ANR	3960247	Identifier	c		3960185	0					
ANR	3960248	Identifier	name		3960185	1					
ANR	3960249	ExpressionStatement	"pefree ( c , c -> flags & CONST_PERSISTENT )"	43:1:1672:1710	3960185	3	True				
ANR	3960250	CallExpression	"pefree ( c , c -> flags & CONST_PERSISTENT )"		3960185	0					
ANR	3960251	Callee	pefree		3960185	0					
ANR	3960252	Identifier	pefree		3960185	0					
ANR	3960253	ArgumentList	c		3960185	1					
ANR	3960254	Argument	c		3960185	0					
ANR	3960255	Identifier	c		3960185	0					
ANR	3960256	Argument	c -> flags & CONST_PERSISTENT		3960185	1					
ANR	3960257	BitAndExpression	c -> flags & CONST_PERSISTENT		3960185	0		&			
ANR	3960258	PtrMemberAccess	c -> flags		3960185	0					
ANR	3960259	Identifier	c		3960185	0					
ANR	3960260	Identifier	flags		3960185	1					
ANR	3960261	Identifier	CONST_PERSISTENT		3960185	1					
ANR	3960262	ReturnType	void		3960185	1					
ANR	3960263	Identifier	free_zend_constant		3960185	2					
ANR	3960264	ParameterList	zval * zv		3960185	3					
ANR	3960265	Parameter	zval * zv	31:24:1465:1472	3960185	0	True				
ANR	3960266	ParameterType	zval *		3960185	0					
ANR	3960267	Identifier	zv		3960185	1					
ANR	3960268	CFGEntryNode	ENTRY		3960185		True				
ANR	3960269	CFGExitNode	EXIT		3960185		True				
ANR	3960270	Symbol	Z_PTR_P		3960185						
ANR	3960271	Symbol	& c -> value		3960185						
ANR	3960272	Symbol	c		3960185						
ANR	3960273	Symbol	c -> flags		3960185						
ANR	3960274	Symbol	c -> name		3960185						
ANR	3960275	Symbol	zv		3960185						
ANR	3960276	Symbol	CONST_PERSISTENT		3960185						
ANR	3960277	Symbol	* c		3960185						
ANR	3960278	Function	copy_zend_constant	47:0:1716:2157							
ANR	3960279	FunctionDef	copy_zend_constant (zval * zv)		3960278	0					
ANR	3960280	CompoundStatement		48:0:1757:2157	3960278	0					
ANR	3960281	IdentifierDeclStatement	zend_constant * c = Z_PTR_P ( zv ) ;	49:1:1760:1790	3960278	0	True				
ANR	3960282	IdentifierDecl	* c = Z_PTR_P ( zv )		3960278	0					
ANR	3960283	IdentifierDeclType	zend_constant *		3960278	0					
ANR	3960284	Identifier	c		3960278	1					
ANR	3960285	AssignmentExpression	* c = Z_PTR_P ( zv )		3960278	2		=			
ANR	3960286	Identifier	c		3960278	0					
ANR	3960287	CallExpression	Z_PTR_P ( zv )		3960278	1					
ANR	3960288	Callee	Z_PTR_P		3960278	0					
ANR	3960289	Identifier	Z_PTR_P		3960278	0					
ANR	3960290	ArgumentList	zv		3960278	1					
ANR	3960291	Argument	zv		3960278	0					
ANR	3960292	Identifier	zv		3960278	0					
ANR	3960293	ExpressionStatement	"Z_PTR_P ( zv ) = pemalloc ( sizeof ( zend_constant ) , c -> flags & CONST_PERSISTENT )"	51:1:1794:1868	3960278	1	True				
ANR	3960294	AssignmentExpression	"Z_PTR_P ( zv ) = pemalloc ( sizeof ( zend_constant ) , c -> flags & CONST_PERSISTENT )"		3960278	0		=			
ANR	3960295	CallExpression	Z_PTR_P ( zv )		3960278	0					
ANR	3960296	Callee	Z_PTR_P		3960278	0					
ANR	3960297	Identifier	Z_PTR_P		3960278	0					
ANR	3960298	ArgumentList	zv		3960278	1					
ANR	3960299	Argument	zv		3960278	0					
ANR	3960300	Identifier	zv		3960278	0					
ANR	3960301	CallExpression	"pemalloc ( sizeof ( zend_constant ) , c -> flags & CONST_PERSISTENT )"		3960278	1					
ANR	3960302	Callee	pemalloc		3960278	0					
ANR	3960303	Identifier	pemalloc		3960278	0					
ANR	3960304	ArgumentList	sizeof ( zend_constant )		3960278	1					
ANR	3960305	Argument	sizeof ( zend_constant )		3960278	0					
ANR	3960306	SizeofExpression	sizeof ( zend_constant )		3960278	0					
ANR	3960307	Sizeof	sizeof		3960278	0					
ANR	3960308	SizeofOperand	zend_constant		3960278	1					
ANR	3960309	Argument	c -> flags & CONST_PERSISTENT		3960278	1					
ANR	3960310	BitAndExpression	c -> flags & CONST_PERSISTENT		3960278	0		&			
ANR	3960311	PtrMemberAccess	c -> flags		3960278	0					
ANR	3960312	Identifier	c		3960278	0					
ANR	3960313	Identifier	flags		3960278	1					
ANR	3960314	Identifier	CONST_PERSISTENT		3960278	1					
ANR	3960315	ExpressionStatement	"memcpy ( Z_PTR_P ( zv ) , c , sizeof ( zend_constant ) )"	52:1:1871:1916	3960278	2	True				
ANR	3960316	CallExpression	"memcpy ( Z_PTR_P ( zv ) , c , sizeof ( zend_constant ) )"		3960278	0					
ANR	3960317	Callee	memcpy		3960278	0					
ANR	3960318	Identifier	memcpy		3960278	0					
ANR	3960319	ArgumentList	Z_PTR_P ( zv )		3960278	1					
ANR	3960320	Argument	Z_PTR_P ( zv )		3960278	0					
ANR	3960321	CallExpression	Z_PTR_P ( zv )		3960278	0					
ANR	3960322	Callee	Z_PTR_P		3960278	0					
ANR	3960323	Identifier	Z_PTR_P		3960278	0					
ANR	3960324	ArgumentList	zv		3960278	1					
ANR	3960325	Argument	zv		3960278	0					
ANR	3960326	Identifier	zv		3960278	0					
ANR	3960327	Argument	c		3960278	1					
ANR	3960328	Identifier	c		3960278	0					
ANR	3960329	Argument	sizeof ( zend_constant )		3960278	2					
ANR	3960330	SizeofExpression	sizeof ( zend_constant )		3960278	0					
ANR	3960331	Sizeof	sizeof		3960278	0					
ANR	3960332	SizeofOperand	zend_constant		3960278	1					
ANR	3960333	ExpressionStatement	c = Z_PTR_P ( zv )	54:1:1920:1935	3960278	3	True				
ANR	3960334	AssignmentExpression	c = Z_PTR_P ( zv )		3960278	0		=			
ANR	3960335	Identifier	c		3960278	0					
ANR	3960336	CallExpression	Z_PTR_P ( zv )		3960278	1					
ANR	3960337	Callee	Z_PTR_P		3960278	0					
ANR	3960338	Identifier	Z_PTR_P		3960278	0					
ANR	3960339	ArgumentList	zv		3960278	1					
ANR	3960340	Argument	zv		3960278	0					
ANR	3960341	Identifier	zv		3960278	0					
ANR	3960342	ExpressionStatement	c -> name = zend_string_copy ( c -> name )	55:1:1938:1973	3960278	4	True				
ANR	3960343	AssignmentExpression	c -> name = zend_string_copy ( c -> name )		3960278	0		=			
ANR	3960344	PtrMemberAccess	c -> name		3960278	0					
ANR	3960345	Identifier	c		3960278	0					
ANR	3960346	Identifier	name		3960278	1					
ANR	3960347	CallExpression	zend_string_copy ( c -> name )		3960278	1					
ANR	3960348	Callee	zend_string_copy		3960278	0					
ANR	3960349	Identifier	zend_string_copy		3960278	0					
ANR	3960350	ArgumentList	c -> name		3960278	1					
ANR	3960351	Argument	c -> name		3960278	0					
ANR	3960352	PtrMemberAccess	c -> name		3960278	0					
ANR	3960353	Identifier	c		3960278	0					
ANR	3960354	Identifier	name		3960278	1					
ANR	3960355	IfStatement	if ( ! ( c -> flags & CONST_PERSISTENT ) )		3960278	5					
ANR	3960356	Condition	! ( c -> flags & CONST_PERSISTENT )	56:5:1980:2009	3960278	0	True				
ANR	3960357	UnaryOperationExpression	! ( c -> flags & CONST_PERSISTENT )		3960278	0					
ANR	3960358	UnaryOperator	!		3960278	0					
ANR	3960359	BitAndExpression	c -> flags & CONST_PERSISTENT		3960278	1		&			
ANR	3960360	PtrMemberAccess	c -> flags		3960278	0					
ANR	3960361	Identifier	c		3960278	0					
ANR	3960362	Identifier	flags		3960278	1					
ANR	3960363	Identifier	CONST_PERSISTENT		3960278	1					
ANR	3960364	CompoundStatement		9:37:254:254	3960278	1					
ANR	3960365	ExpressionStatement	zval_copy_ctor ( & c -> value )	57:2:2016:2041	3960278	0	True				
ANR	3960366	CallExpression	zval_copy_ctor ( & c -> value )		3960278	0					
ANR	3960367	Callee	zval_copy_ctor		3960278	0					
ANR	3960368	Identifier	zval_copy_ctor		3960278	0					
ANR	3960369	ArgumentList	& c -> value		3960278	1					
ANR	3960370	Argument	& c -> value		3960278	0					
ANR	3960371	UnaryOperationExpression	& c -> value		3960278	0					
ANR	3960372	UnaryOperator	&		3960278	0					
ANR	3960373	PtrMemberAccess	c -> value		3960278	1					
ANR	3960374	Identifier	c		3960278	0					
ANR	3960375	Identifier	value		3960278	1					
ANR	3960376	ElseStatement	else		3960278	0					
ANR	3960377	CompoundStatement		11:8:293:293	3960278	0					
ANR	3960378	IfStatement	if ( Z_TYPE ( c -> value ) == IS_STRING )		3960278	0					
ANR	3960379	Condition	Z_TYPE ( c -> value ) == IS_STRING	59:6:2059:2087	3960278	0	True				
ANR	3960380	EqualityExpression	Z_TYPE ( c -> value ) == IS_STRING		3960278	0		==			
ANR	3960381	CallExpression	Z_TYPE ( c -> value )		3960278	0					
ANR	3960382	Callee	Z_TYPE		3960278	0					
ANR	3960383	Identifier	Z_TYPE		3960278	0					
ANR	3960384	ArgumentList	c -> value		3960278	1					
ANR	3960385	Argument	c -> value		3960278	0					
ANR	3960386	PtrMemberAccess	c -> value		3960278	0					
ANR	3960387	Identifier	c		3960278	0					
ANR	3960388	Identifier	value		3960278	1					
ANR	3960389	Identifier	IS_STRING		3960278	1					
ANR	3960390	CompoundStatement		12:37:332:332	3960278	1					
ANR	3960391	ExpressionStatement	"Z_STR ( c -> value ) = zend_string_dup ( Z_STR ( c -> value ) , 1 )"	60:3:2095:2148	3960278	0	True				
ANR	3960392	AssignmentExpression	"Z_STR ( c -> value ) = zend_string_dup ( Z_STR ( c -> value ) , 1 )"		3960278	0		=			
ANR	3960393	CallExpression	Z_STR ( c -> value )		3960278	0					
ANR	3960394	Callee	Z_STR		3960278	0					
ANR	3960395	Identifier	Z_STR		3960278	0					
ANR	3960396	ArgumentList	c -> value		3960278	1					
ANR	3960397	Argument	c -> value		3960278	0					
ANR	3960398	PtrMemberAccess	c -> value		3960278	0					
ANR	3960399	Identifier	c		3960278	0					
ANR	3960400	Identifier	value		3960278	1					
ANR	3960401	CallExpression	"zend_string_dup ( Z_STR ( c -> value ) , 1 )"		3960278	1					
ANR	3960402	Callee	zend_string_dup		3960278	0					
ANR	3960403	Identifier	zend_string_dup		3960278	0					
ANR	3960404	ArgumentList	Z_STR ( c -> value )		3960278	1					
ANR	3960405	Argument	Z_STR ( c -> value )		3960278	0					
ANR	3960406	CallExpression	Z_STR ( c -> value )		3960278	0					
ANR	3960407	Callee	Z_STR		3960278	0					
ANR	3960408	Identifier	Z_STR		3960278	0					
ANR	3960409	ArgumentList	c -> value		3960278	1					
ANR	3960410	Argument	c -> value		3960278	0					
ANR	3960411	PtrMemberAccess	c -> value		3960278	0					
ANR	3960412	Identifier	c		3960278	0					
ANR	3960413	Identifier	value		3960278	1					
ANR	3960414	Argument	1		3960278	1					
ANR	3960415	PrimaryExpression	1		3960278	0					
ANR	3960416	ReturnType	static void		3960278	1					
ANR	3960417	Identifier	copy_zend_constant		3960278	2					
ANR	3960418	ParameterList	zval * zv		3960278	3					
ANR	3960419	Parameter	zval * zv	47:31:1747:1754	3960278	0	True				
ANR	3960420	ParameterType	zval *		3960278	0					
ANR	3960421	Identifier	zv		3960278	1					
ANR	3960422	CFGEntryNode	ENTRY		3960278		True				
ANR	3960423	CFGExitNode	EXIT		3960278		True				
ANR	3960424	Symbol	Z_PTR_P		3960278						
ANR	3960425	Symbol	c		3960278						
ANR	3960426	Symbol	c -> flags		3960278						
ANR	3960427	Symbol	Z_TYPE		3960278						
ANR	3960428	Symbol	c -> name		3960278						
ANR	3960429	Symbol	zend_string_copy		3960278						
ANR	3960430	Symbol	c -> value		3960278						
ANR	3960431	Symbol	Z_STR		3960278						
ANR	3960432	Symbol	* c		3960278						
ANR	3960433	Symbol	zend_string_dup		3960278						
ANR	3960434	Symbol	& c -> value		3960278						
ANR	3960435	Symbol	IS_STRING		3960278						
ANR	3960436	Symbol	zv		3960278						
ANR	3960437	Symbol	CONST_PERSISTENT		3960278						
ANR	3960438	Symbol	pemalloc		3960278						
ANR	3960439	Function	zend_copy_constants	66:0:2161:2279							
ANR	3960440	FunctionDef	"zend_copy_constants (HashTable * target , HashTable * source)"		3960439	0					
ANR	3960441	CompoundStatement		67:0:2224:2279	3960439	0					
ANR	3960442	ExpressionStatement	"zend_hash_copy ( target , source , copy_zend_constant )"	68:1:2227:2277	3960439	0	True				
ANR	3960443	CallExpression	"zend_hash_copy ( target , source , copy_zend_constant )"		3960439	0					
ANR	3960444	Callee	zend_hash_copy		3960439	0					
ANR	3960445	Identifier	zend_hash_copy		3960439	0					
ANR	3960446	ArgumentList	target		3960439	1					
ANR	3960447	Argument	target		3960439	0					
ANR	3960448	Identifier	target		3960439	0					
ANR	3960449	Argument	source		3960439	1					
ANR	3960450	Identifier	source		3960439	0					
ANR	3960451	Argument	copy_zend_constant		3960439	2					
ANR	3960452	Identifier	copy_zend_constant		3960439	0					
ANR	3960453	ReturnType	void		3960439	1					
ANR	3960454	Identifier	zend_copy_constants		3960439	2					
ANR	3960455	ParameterList	"HashTable * target , HashTable * source"		3960439	3					
ANR	3960456	Parameter	HashTable * target	66:25:2186:2202	3960439	0	True				
ANR	3960457	ParameterType	HashTable *		3960439	0					
ANR	3960458	Identifier	target		3960439	1					
ANR	3960459	Parameter	HashTable * source	66:44:2205:2221	3960439	1	True				
ANR	3960460	ParameterType	HashTable *		3960439	0					
ANR	3960461	Identifier	source		3960439	1					
ANR	3960462	CFGEntryNode	ENTRY		3960439		True				
ANR	3960463	CFGExitNode	EXIT		3960439		True				
ANR	3960464	Symbol	copy_zend_constant		3960439						
ANR	3960465	Symbol	source		3960439						
ANR	3960466	Symbol	target		3960439						
ANR	3960467	Function	clean_non_persistent_constant	72:0:2283:2456							
ANR	3960468	FunctionDef	clean_non_persistent_constant (zval * zv)		3960467	0					
ANR	3960469	CompoundStatement		73:0:2334:2456	3960467	0					
ANR	3960470	IdentifierDeclStatement	zend_constant * c = Z_PTR_P ( zv ) ;	74:1:2337:2367	3960467	0	True				
ANR	3960471	IdentifierDecl	* c = Z_PTR_P ( zv )		3960467	0					
ANR	3960472	IdentifierDeclType	zend_constant *		3960467	0					
ANR	3960473	Identifier	c		3960467	1					
ANR	3960474	AssignmentExpression	* c = Z_PTR_P ( zv )		3960467	2		=			
ANR	3960475	Identifier	c		3960467	0					
ANR	3960476	CallExpression	Z_PTR_P ( zv )		3960467	1					
ANR	3960477	Callee	Z_PTR_P		3960467	0					
ANR	3960478	Identifier	Z_PTR_P		3960467	0					
ANR	3960479	ArgumentList	zv		3960467	1					
ANR	3960480	Argument	zv		3960467	0					
ANR	3960481	Identifier	zv		3960467	0					
ANR	3960482	ReturnStatement	return ( c -> flags & CONST_PERSISTENT ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE ;	75:1:2370:2454	3960467	1	True				
ANR	3960483	ConditionalExpression	( c -> flags & CONST_PERSISTENT ) ? ZEND_HASH_APPLY_STOP : ZEND_HASH_APPLY_REMOVE		3960467	0					
ANR	3960484	Condition	c -> flags & CONST_PERSISTENT		3960467	0					
ANR	3960485	BitAndExpression	c -> flags & CONST_PERSISTENT		3960467	0		&			
ANR	3960486	PtrMemberAccess	c -> flags		3960467	0					
ANR	3960487	Identifier	c		3960467	0					
ANR	3960488	Identifier	flags		3960467	1					
ANR	3960489	Identifier	CONST_PERSISTENT		3960467	1					
ANR	3960490	Identifier	ZEND_HASH_APPLY_STOP		3960467	1					
ANR	3960491	Identifier	ZEND_HASH_APPLY_REMOVE		3960467	2					
ANR	3960492	ReturnType	static int		3960467	1					
ANR	3960493	Identifier	clean_non_persistent_constant		3960467	2					
ANR	3960494	ParameterList	zval * zv		3960467	3					
ANR	3960495	Parameter	zval * zv	72:41:2324:2331	3960467	0	True				
ANR	3960496	ParameterType	zval *		3960467	0					
ANR	3960497	Identifier	zv		3960467	1					
ANR	3960498	CFGEntryNode	ENTRY		3960467		True				
ANR	3960499	CFGExitNode	EXIT		3960467		True				
ANR	3960500	Symbol	Z_PTR_P		3960467						
ANR	3960501	Symbol	c		3960467						
ANR	3960502	Symbol	c -> flags		3960467						
ANR	3960503	Symbol	ZEND_HASH_APPLY_REMOVE		3960467						
ANR	3960504	Symbol	ZEND_HASH_APPLY_STOP		3960467						
ANR	3960505	Symbol	zv		3960467						
ANR	3960506	Symbol	CONST_PERSISTENT		3960467						
ANR	3960507	Symbol	* c		3960467						
ANR	3960508	Function	clean_non_persistent_constant_full	79:0:2460:2598							
ANR	3960509	FunctionDef	clean_non_persistent_constant_full (zval * zv)		3960508	0					
ANR	3960510	CompoundStatement		80:0:2516:2598	3960508	0					
ANR	3960511	IdentifierDeclStatement	zend_constant * c = Z_PTR_P ( zv ) ;	81:1:2519:2549	3960508	0	True				
ANR	3960512	IdentifierDecl	* c = Z_PTR_P ( zv )		3960508	0					
ANR	3960513	IdentifierDeclType	zend_constant *		3960508	0					
ANR	3960514	Identifier	c		3960508	1					
ANR	3960515	AssignmentExpression	* c = Z_PTR_P ( zv )		3960508	2		=			
ANR	3960516	Identifier	c		3960508	0					
ANR	3960517	CallExpression	Z_PTR_P ( zv )		3960508	1					
ANR	3960518	Callee	Z_PTR_P		3960508	0					
ANR	3960519	Identifier	Z_PTR_P		3960508	0					
ANR	3960520	ArgumentList	zv		3960508	1					
ANR	3960521	Argument	zv		3960508	0					
ANR	3960522	Identifier	zv		3960508	0					
ANR	3960523	ReturnStatement	return ( c -> flags & CONST_PERSISTENT ) ? 0 : 1 ;	82:1:2552:2596	3960508	1	True				
ANR	3960524	ConditionalExpression	( c -> flags & CONST_PERSISTENT ) ? 0 : 1		3960508	0					
ANR	3960525	Condition	c -> flags & CONST_PERSISTENT		3960508	0					
ANR	3960526	BitAndExpression	c -> flags & CONST_PERSISTENT		3960508	0		&			
ANR	3960527	PtrMemberAccess	c -> flags		3960508	0					
ANR	3960528	Identifier	c		3960508	0					
ANR	3960529	Identifier	flags		3960508	1					
ANR	3960530	Identifier	CONST_PERSISTENT		3960508	1					
ANR	3960531	PrimaryExpression	0		3960508	1					
ANR	3960532	PrimaryExpression	1		3960508	2					
ANR	3960533	ReturnType	static int		3960508	1					
ANR	3960534	Identifier	clean_non_persistent_constant_full		3960508	2					
ANR	3960535	ParameterList	zval * zv		3960508	3					
ANR	3960536	Parameter	zval * zv	79:46:2506:2513	3960508	0	True				
ANR	3960537	ParameterType	zval *		3960508	0					
ANR	3960538	Identifier	zv		3960508	1					
ANR	3960539	CFGEntryNode	ENTRY		3960508		True				
ANR	3960540	CFGExitNode	EXIT		3960508		True				
ANR	3960541	Symbol	Z_PTR_P		3960508						
ANR	3960542	Symbol	c		3960508						
ANR	3960543	Symbol	c -> flags		3960508						
ANR	3960544	Symbol	zv		3960508						
ANR	3960545	Symbol	CONST_PERSISTENT		3960508						
ANR	3960546	Symbol	* c		3960508						
ANR	3960547	Function	clean_module_constant	86:0:2602:2822							
ANR	3960548	FunctionDef	"clean_module_constant (zval * el , void * arg)"		3960547	0					
ANR	3960549	CompoundStatement		87:0:2656:2822	3960547	0					
ANR	3960550	IdentifierDeclStatement	zend_constant * c = ( zend_constant * ) Z_PTR_P ( el ) ;	88:1:2659:2706	3960547	0	True				
ANR	3960551	IdentifierDecl	* c = ( zend_constant * ) Z_PTR_P ( el )		3960547	0					
ANR	3960552	IdentifierDeclType	zend_constant *		3960547	0					
ANR	3960553	Identifier	c		3960547	1					
ANR	3960554	AssignmentExpression	* c = ( zend_constant * ) Z_PTR_P ( el )		3960547	2		=			
ANR	3960555	Identifier	c		3960547	0					
ANR	3960556	CastExpression	( zend_constant * ) Z_PTR_P ( el )		3960547	1					
ANR	3960557	CastTarget	zend_constant *		3960547	0					
ANR	3960558	CallExpression	Z_PTR_P ( el )		3960547	1					
ANR	3960559	Callee	Z_PTR_P		3960547	0					
ANR	3960560	Identifier	Z_PTR_P		3960547	0					
ANR	3960561	ArgumentList	el		3960547	1					
ANR	3960562	Argument	el		3960547	0					
ANR	3960563	Identifier	el		3960547	0					
ANR	3960564	IdentifierDeclStatement	int module_number = * ( int * ) arg ;	89:1:2709:2740	3960547	1	True				
ANR	3960565	IdentifierDecl	module_number = * ( int * ) arg		3960547	0					
ANR	3960566	IdentifierDeclType	int		3960547	0					
ANR	3960567	Identifier	module_number		3960547	1					
ANR	3960568	AssignmentExpression	module_number = * ( int * ) arg		3960547	2		=			
ANR	3960569	Identifier	module_number		3960547	0					
ANR	3960570	UnaryOperationExpression	* ( int * ) arg		3960547	1					
ANR	3960571	UnaryOperator	*		3960547	0					
ANR	3960572	CastExpression	( int * ) arg		3960547	1					
ANR	3960573	CastTarget	int *		3960547	0					
ANR	3960574	Identifier	arg		3960547	1					
ANR	3960575	IfStatement	if ( c -> module_number == module_number )		3960547	2					
ANR	3960576	Condition	c -> module_number == module_number	91:5:2748:2780	3960547	0	True				
ANR	3960577	EqualityExpression	c -> module_number == module_number		3960547	0		==			
ANR	3960578	PtrMemberAccess	c -> module_number		3960547	0					
ANR	3960579	Identifier	c		3960547	0					
ANR	3960580	Identifier	module_number		3960547	1					
ANR	3960581	Identifier	module_number		3960547	1					
ANR	3960582	CompoundStatement		5:40:126:126	3960547	1					
ANR	3960583	ReturnStatement	return 1 ;	92:2:2787:2795	3960547	0	True				
ANR	3960584	PrimaryExpression	1		3960547	0					
ANR	3960585	ElseStatement	else		3960547	0					
ANR	3960586	CompoundStatement		7:8:148:148	3960547	0					
ANR	3960587	ReturnStatement	return 0 ;	94:2:2809:2817	3960547	0	True				
ANR	3960588	PrimaryExpression	0		3960547	0					
ANR	3960589	ReturnType	static int		3960547	1					
ANR	3960590	Identifier	clean_module_constant		3960547	2					
ANR	3960591	ParameterList	"zval * el , void * arg"		3960547	3					
ANR	3960592	Parameter	zval * el	86:33:2635:2642	3960547	0	True				
ANR	3960593	ParameterType	zval *		3960547	0					
ANR	3960594	Identifier	el		3960547	1					
ANR	3960595	Parameter	void * arg	86:43:2645:2653	3960547	1	True				
ANR	3960596	ParameterType	void *		3960547	0					
ANR	3960597	Identifier	arg		3960547	1					
ANR	3960598	CFGEntryNode	ENTRY		3960547		True				
ANR	3960599	CFGExitNode	EXIT		3960547		True				
ANR	3960600	Symbol	Z_PTR_P		3960547						
ANR	3960601	Symbol	c		3960547						
ANR	3960602	Symbol	* ( int * ) arg		3960547						
ANR	3960603	Symbol	c -> module_number		3960547						
ANR	3960604	Symbol	el		3960547						
ANR	3960605	Symbol	arg		3960547						
ANR	3960606	Symbol	module_number		3960547						
ANR	3960607	Symbol	* c		3960547						
ANR	3960608	Symbol	* arg		3960547						
ANR	3960609	Function	clean_module_constants	99:0:2826:2975							
ANR	3960610	FunctionDef	clean_module_constants (int module_number)		3960609	0					
ANR	3960611	CompoundStatement		100:0:2873:2975	3960609	0					
ANR	3960612	ExpressionStatement	"zend_hash_apply_with_argument ( EG ( zend_constants ) , clean_module_constant , ( void * ) & module_number )"	101:1:2876:2973	3960609	0	True				
ANR	3960613	CallExpression	"zend_hash_apply_with_argument ( EG ( zend_constants ) , clean_module_constant , ( void * ) & module_number )"		3960609	0					
ANR	3960614	Callee	zend_hash_apply_with_argument		3960609	0					
ANR	3960615	Identifier	zend_hash_apply_with_argument		3960609	0					
ANR	3960616	ArgumentList	EG ( zend_constants )		3960609	1					
ANR	3960617	Argument	EG ( zend_constants )		3960609	0					
ANR	3960618	CallExpression	EG ( zend_constants )		3960609	0					
ANR	3960619	Callee	EG		3960609	0					
ANR	3960620	Identifier	EG		3960609	0					
ANR	3960621	ArgumentList	zend_constants		3960609	1					
ANR	3960622	Argument	zend_constants		3960609	0					
ANR	3960623	Identifier	zend_constants		3960609	0					
ANR	3960624	Argument	clean_module_constant		3960609	1					
ANR	3960625	Identifier	clean_module_constant		3960609	0					
ANR	3960626	Argument	( void * ) & module_number		3960609	2					
ANR	3960627	CastExpression	( void * ) & module_number		3960609	0					
ANR	3960628	CastTarget	void *		3960609	0					
ANR	3960629	UnaryOperationExpression	& module_number		3960609	1					
ANR	3960630	UnaryOperator	&		3960609	0					
ANR	3960631	Identifier	module_number		3960609	1					
ANR	3960632	ReturnType	void		3960609	1					
ANR	3960633	Identifier	clean_module_constants		3960609	2					
ANR	3960634	ParameterList	int module_number		3960609	3					
ANR	3960635	Parameter	int module_number	99:28:2854:2870	3960609	0	True				
ANR	3960636	ParameterType	int		3960609	0					
ANR	3960637	Identifier	module_number		3960609	1					
ANR	3960638	CFGEntryNode	ENTRY		3960609		True				
ANR	3960639	CFGExitNode	EXIT		3960609		True				
ANR	3960640	Symbol	EG		3960609						
ANR	3960641	Symbol	& module_number		3960609						
ANR	3960642	Symbol	clean_module_constant		3960609						
ANR	3960643	Symbol	zend_constants		3960609						
ANR	3960644	Symbol	module_number		3960609						
ANR	3960645	Function	zend_startup_constants	105:0:2979:3166							
ANR	3960646	FunctionDef	zend_startup_constants ()		3960645	0					
ANR	3960647	CompoundStatement		106:0:3012:3166	3960645	0					
ANR	3960648	ExpressionStatement	EG ( zend_constants ) = ( HashTable * ) malloc ( sizeof ( HashTable ) )	107:1:3015:3075	3960645	0	True				
ANR	3960649	AssignmentExpression	EG ( zend_constants ) = ( HashTable * ) malloc ( sizeof ( HashTable ) )		3960645	0		=			
ANR	3960650	CallExpression	EG ( zend_constants )		3960645	0					
ANR	3960651	Callee	EG		3960645	0					
ANR	3960652	Identifier	EG		3960645	0					
ANR	3960653	ArgumentList	zend_constants		3960645	1					
ANR	3960654	Argument	zend_constants		3960645	0					
ANR	3960655	Identifier	zend_constants		3960645	0					
ANR	3960656	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		3960645	1					
ANR	3960657	CastTarget	HashTable *		3960645	0					
ANR	3960658	CallExpression	malloc ( sizeof ( HashTable ) )		3960645	1					
ANR	3960659	Callee	malloc		3960645	0					
ANR	3960660	Identifier	malloc		3960645	0					
ANR	3960661	ArgumentList	sizeof ( HashTable )		3960645	1					
ANR	3960662	Argument	sizeof ( HashTable )		3960645	0					
ANR	3960663	SizeofExpression	sizeof ( HashTable )		3960645	0					
ANR	3960664	Sizeof	sizeof		3960645	0					
ANR	3960665	SizeofOperand	HashTable		3960645	1					
ANR	3960666	ExpressionStatement	"zend_hash_init ( EG ( zend_constants ) , 128 , NULL , ZEND_CONSTANT_DTOR , 1 )"	109:1:3079:3147	3960645	1	True				
ANR	3960667	CallExpression	"zend_hash_init ( EG ( zend_constants ) , 128 , NULL , ZEND_CONSTANT_DTOR , 1 )"		3960645	0					
ANR	3960668	Callee	zend_hash_init		3960645	0					
ANR	3960669	Identifier	zend_hash_init		3960645	0					
ANR	3960670	ArgumentList	EG ( zend_constants )		3960645	1					
ANR	3960671	Argument	EG ( zend_constants )		3960645	0					
ANR	3960672	CallExpression	EG ( zend_constants )		3960645	0					
ANR	3960673	Callee	EG		3960645	0					
ANR	3960674	Identifier	EG		3960645	0					
ANR	3960675	ArgumentList	zend_constants		3960645	1					
ANR	3960676	Argument	zend_constants		3960645	0					
ANR	3960677	Identifier	zend_constants		3960645	0					
ANR	3960678	Argument	128		3960645	1					
ANR	3960679	PrimaryExpression	128		3960645	0					
ANR	3960680	Argument	NULL		3960645	2					
ANR	3960681	Identifier	NULL		3960645	0					
ANR	3960682	Argument	ZEND_CONSTANT_DTOR		3960645	3					
ANR	3960683	Identifier	ZEND_CONSTANT_DTOR		3960645	0					
ANR	3960684	Argument	1		3960645	4					
ANR	3960685	PrimaryExpression	1		3960645	0					
ANR	3960686	ReturnStatement	return SUCCESS ;	110:1:3150:3164	3960645	2	True				
ANR	3960687	Identifier	SUCCESS		3960645	0					
ANR	3960688	ReturnType	int		3960645	1					
ANR	3960689	Identifier	zend_startup_constants		3960645	2					
ANR	3960690	ParameterList			3960645	3					
ANR	3960691	CFGEntryNode	ENTRY		3960645		True				
ANR	3960692	CFGExitNode	EXIT		3960645		True				
ANR	3960693	Symbol	malloc		3960645						
ANR	3960694	Symbol	EG		3960645						
ANR	3960695	Symbol	NULL		3960645						
ANR	3960696	Symbol	SUCCESS		3960645						
ANR	3960697	Symbol	zend_constants		3960645						
ANR	3960698	Symbol	ZEND_CONSTANT_DTOR		3960645						
ANR	3960699	Function	zend_register_standard_constants	115:0:3171:5322							
ANR	3960700	FunctionDef	zend_register_standard_constants ()		3960699	0					
ANR	3960701	CompoundStatement		116:0:3215:5322	3960699	0					
ANR	3960702	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_ERROR"" , E_ERROR , CONST_PERSISTENT | CONST_CS )"	117:1:3218:3294	3960699	0	True				
ANR	3960703	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_ERROR"" , E_ERROR , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960704	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960705	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960706	ArgumentList	"""E_ERROR"""		3960699	1					
ANR	3960707	Argument	"""E_ERROR"""		3960699	0					
ANR	3960708	PrimaryExpression	"""E_ERROR"""		3960699	0					
ANR	3960709	Argument	E_ERROR		3960699	1					
ANR	3960710	Identifier	E_ERROR		3960699	0					
ANR	3960711	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960712	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960713	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960714	Identifier	CONST_CS		3960699	1					
ANR	3960715	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_RECOVERABLE_ERROR"" , E_RECOVERABLE_ERROR , CONST_PERSISTENT | CONST_CS )"	118:1:3297:3397	3960699	1	True				
ANR	3960716	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_RECOVERABLE_ERROR"" , E_RECOVERABLE_ERROR , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960717	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960718	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960719	ArgumentList	"""E_RECOVERABLE_ERROR"""		3960699	1					
ANR	3960720	Argument	"""E_RECOVERABLE_ERROR"""		3960699	0					
ANR	3960721	PrimaryExpression	"""E_RECOVERABLE_ERROR"""		3960699	0					
ANR	3960722	Argument	E_RECOVERABLE_ERROR		3960699	1					
ANR	3960723	Identifier	E_RECOVERABLE_ERROR		3960699	0					
ANR	3960724	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960725	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960726	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960727	Identifier	CONST_CS		3960699	1					
ANR	3960728	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_WARNING"" , E_WARNING , CONST_PERSISTENT | CONST_CS )"	119:1:3400:3480	3960699	2	True				
ANR	3960729	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_WARNING"" , E_WARNING , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960730	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960731	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960732	ArgumentList	"""E_WARNING"""		3960699	1					
ANR	3960733	Argument	"""E_WARNING"""		3960699	0					
ANR	3960734	PrimaryExpression	"""E_WARNING"""		3960699	0					
ANR	3960735	Argument	E_WARNING		3960699	1					
ANR	3960736	Identifier	E_WARNING		3960699	0					
ANR	3960737	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960738	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960739	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960740	Identifier	CONST_CS		3960699	1					
ANR	3960741	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_PARSE"" , E_PARSE , CONST_PERSISTENT | CONST_CS )"	120:1:3483:3559	3960699	3	True				
ANR	3960742	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_PARSE"" , E_PARSE , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960743	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960744	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960745	ArgumentList	"""E_PARSE"""		3960699	1					
ANR	3960746	Argument	"""E_PARSE"""		3960699	0					
ANR	3960747	PrimaryExpression	"""E_PARSE"""		3960699	0					
ANR	3960748	Argument	E_PARSE		3960699	1					
ANR	3960749	Identifier	E_PARSE		3960699	0					
ANR	3960750	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960751	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960752	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960753	Identifier	CONST_CS		3960699	1					
ANR	3960754	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_NOTICE"" , E_NOTICE , CONST_PERSISTENT | CONST_CS )"	121:1:3562:3640	3960699	4	True				
ANR	3960755	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_NOTICE"" , E_NOTICE , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960756	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960757	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960758	ArgumentList	"""E_NOTICE"""		3960699	1					
ANR	3960759	Argument	"""E_NOTICE"""		3960699	0					
ANR	3960760	PrimaryExpression	"""E_NOTICE"""		3960699	0					
ANR	3960761	Argument	E_NOTICE		3960699	1					
ANR	3960762	Identifier	E_NOTICE		3960699	0					
ANR	3960763	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960764	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960765	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960766	Identifier	CONST_CS		3960699	1					
ANR	3960767	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_STRICT"" , E_STRICT , CONST_PERSISTENT | CONST_CS )"	122:1:3643:3721	3960699	5	True				
ANR	3960768	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_STRICT"" , E_STRICT , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960769	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960770	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960771	ArgumentList	"""E_STRICT"""		3960699	1					
ANR	3960772	Argument	"""E_STRICT"""		3960699	0					
ANR	3960773	PrimaryExpression	"""E_STRICT"""		3960699	0					
ANR	3960774	Argument	E_STRICT		3960699	1					
ANR	3960775	Identifier	E_STRICT		3960699	0					
ANR	3960776	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960777	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960778	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960779	Identifier	CONST_CS		3960699	1					
ANR	3960780	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_DEPRECATED"" , E_DEPRECATED , CONST_PERSISTENT | CONST_CS )"	123:1:3724:3810	3960699	6	True				
ANR	3960781	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_DEPRECATED"" , E_DEPRECATED , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960782	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960783	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960784	ArgumentList	"""E_DEPRECATED"""		3960699	1					
ANR	3960785	Argument	"""E_DEPRECATED"""		3960699	0					
ANR	3960786	PrimaryExpression	"""E_DEPRECATED"""		3960699	0					
ANR	3960787	Argument	E_DEPRECATED		3960699	1					
ANR	3960788	Identifier	E_DEPRECATED		3960699	0					
ANR	3960789	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960790	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960791	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960792	Identifier	CONST_CS		3960699	1					
ANR	3960793	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_CORE_ERROR"" , E_CORE_ERROR , CONST_PERSISTENT | CONST_CS )"	124:1:3813:3899	3960699	7	True				
ANR	3960794	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_CORE_ERROR"" , E_CORE_ERROR , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960795	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960796	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960797	ArgumentList	"""E_CORE_ERROR"""		3960699	1					
ANR	3960798	Argument	"""E_CORE_ERROR"""		3960699	0					
ANR	3960799	PrimaryExpression	"""E_CORE_ERROR"""		3960699	0					
ANR	3960800	Argument	E_CORE_ERROR		3960699	1					
ANR	3960801	Identifier	E_CORE_ERROR		3960699	0					
ANR	3960802	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960803	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960804	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960805	Identifier	CONST_CS		3960699	1					
ANR	3960806	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_CORE_WARNING"" , E_CORE_WARNING , CONST_PERSISTENT | CONST_CS )"	125:1:3902:3992	3960699	8	True				
ANR	3960807	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_CORE_WARNING"" , E_CORE_WARNING , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960808	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960809	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960810	ArgumentList	"""E_CORE_WARNING"""		3960699	1					
ANR	3960811	Argument	"""E_CORE_WARNING"""		3960699	0					
ANR	3960812	PrimaryExpression	"""E_CORE_WARNING"""		3960699	0					
ANR	3960813	Argument	E_CORE_WARNING		3960699	1					
ANR	3960814	Identifier	E_CORE_WARNING		3960699	0					
ANR	3960815	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960816	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960817	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960818	Identifier	CONST_CS		3960699	1					
ANR	3960819	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_COMPILE_ERROR"" , E_COMPILE_ERROR , CONST_PERSISTENT | CONST_CS )"	126:1:3995:4087	3960699	9	True				
ANR	3960820	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_COMPILE_ERROR"" , E_COMPILE_ERROR , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960821	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960822	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960823	ArgumentList	"""E_COMPILE_ERROR"""		3960699	1					
ANR	3960824	Argument	"""E_COMPILE_ERROR"""		3960699	0					
ANR	3960825	PrimaryExpression	"""E_COMPILE_ERROR"""		3960699	0					
ANR	3960826	Argument	E_COMPILE_ERROR		3960699	1					
ANR	3960827	Identifier	E_COMPILE_ERROR		3960699	0					
ANR	3960828	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960829	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960830	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960831	Identifier	CONST_CS		3960699	1					
ANR	3960832	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_COMPILE_WARNING"" , E_COMPILE_WARNING , CONST_PERSISTENT | CONST_CS )"	127:1:4090:4186	3960699	10	True				
ANR	3960833	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_COMPILE_WARNING"" , E_COMPILE_WARNING , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960834	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960835	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960836	ArgumentList	"""E_COMPILE_WARNING"""		3960699	1					
ANR	3960837	Argument	"""E_COMPILE_WARNING"""		3960699	0					
ANR	3960838	PrimaryExpression	"""E_COMPILE_WARNING"""		3960699	0					
ANR	3960839	Argument	E_COMPILE_WARNING		3960699	1					
ANR	3960840	Identifier	E_COMPILE_WARNING		3960699	0					
ANR	3960841	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960842	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960843	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960844	Identifier	CONST_CS		3960699	1					
ANR	3960845	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_USER_ERROR"" , E_USER_ERROR , CONST_PERSISTENT | CONST_CS )"	128:1:4189:4275	3960699	11	True				
ANR	3960846	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_USER_ERROR"" , E_USER_ERROR , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960847	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960848	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960849	ArgumentList	"""E_USER_ERROR"""		3960699	1					
ANR	3960850	Argument	"""E_USER_ERROR"""		3960699	0					
ANR	3960851	PrimaryExpression	"""E_USER_ERROR"""		3960699	0					
ANR	3960852	Argument	E_USER_ERROR		3960699	1					
ANR	3960853	Identifier	E_USER_ERROR		3960699	0					
ANR	3960854	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960855	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960856	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960857	Identifier	CONST_CS		3960699	1					
ANR	3960858	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_USER_WARNING"" , E_USER_WARNING , CONST_PERSISTENT | CONST_CS )"	129:1:4278:4368	3960699	12	True				
ANR	3960859	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_USER_WARNING"" , E_USER_WARNING , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960860	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960861	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960862	ArgumentList	"""E_USER_WARNING"""		3960699	1					
ANR	3960863	Argument	"""E_USER_WARNING"""		3960699	0					
ANR	3960864	PrimaryExpression	"""E_USER_WARNING"""		3960699	0					
ANR	3960865	Argument	E_USER_WARNING		3960699	1					
ANR	3960866	Identifier	E_USER_WARNING		3960699	0					
ANR	3960867	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960868	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960869	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960870	Identifier	CONST_CS		3960699	1					
ANR	3960871	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_USER_NOTICE"" , E_USER_NOTICE , CONST_PERSISTENT | CONST_CS )"	130:1:4371:4459	3960699	13	True				
ANR	3960872	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_USER_NOTICE"" , E_USER_NOTICE , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960873	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960874	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960875	ArgumentList	"""E_USER_NOTICE"""		3960699	1					
ANR	3960876	Argument	"""E_USER_NOTICE"""		3960699	0					
ANR	3960877	PrimaryExpression	"""E_USER_NOTICE"""		3960699	0					
ANR	3960878	Argument	E_USER_NOTICE		3960699	1					
ANR	3960879	Identifier	E_USER_NOTICE		3960699	0					
ANR	3960880	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960881	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960882	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960883	Identifier	CONST_CS		3960699	1					
ANR	3960884	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_USER_DEPRECATED"" , E_USER_DEPRECATED , CONST_PERSISTENT | CONST_CS )"	131:1:4462:4558	3960699	14	True				
ANR	3960885	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_USER_DEPRECATED"" , E_USER_DEPRECATED , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960886	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960887	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960888	ArgumentList	"""E_USER_DEPRECATED"""		3960699	1					
ANR	3960889	Argument	"""E_USER_DEPRECATED"""		3960699	0					
ANR	3960890	PrimaryExpression	"""E_USER_DEPRECATED"""		3960699	0					
ANR	3960891	Argument	E_USER_DEPRECATED		3960699	1					
ANR	3960892	Identifier	E_USER_DEPRECATED		3960699	0					
ANR	3960893	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960894	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960895	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960896	Identifier	CONST_CS		3960699	1					
ANR	3960897	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""E_ALL"" , E_ALL , CONST_PERSISTENT | CONST_CS )"	133:1:4562:4634	3960699	15	True				
ANR	3960898	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""E_ALL"" , E_ALL , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960899	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960900	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960901	ArgumentList	"""E_ALL"""		3960699	1					
ANR	3960902	Argument	"""E_ALL"""		3960699	0					
ANR	3960903	PrimaryExpression	"""E_ALL"""		3960699	0					
ANR	3960904	Argument	E_ALL		3960699	1					
ANR	3960905	Identifier	E_ALL		3960699	0					
ANR	3960906	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960907	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960908	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960909	Identifier	CONST_CS		3960699	1					
ANR	3960910	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""DEBUG_BACKTRACE_PROVIDE_OBJECT"" , DEBUG_BACKTRACE_PROVIDE_OBJECT , CONST_PERSISTENT | CONST_CS )"	135:1:4638:4760	3960699	16	True				
ANR	3960911	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""DEBUG_BACKTRACE_PROVIDE_OBJECT"" , DEBUG_BACKTRACE_PROVIDE_OBJECT , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960912	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960913	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960914	ArgumentList	"""DEBUG_BACKTRACE_PROVIDE_OBJECT"""		3960699	1					
ANR	3960915	Argument	"""DEBUG_BACKTRACE_PROVIDE_OBJECT"""		3960699	0					
ANR	3960916	PrimaryExpression	"""DEBUG_BACKTRACE_PROVIDE_OBJECT"""		3960699	0					
ANR	3960917	Argument	DEBUG_BACKTRACE_PROVIDE_OBJECT		3960699	1					
ANR	3960918	Identifier	DEBUG_BACKTRACE_PROVIDE_OBJECT		3960699	0					
ANR	3960919	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960920	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960921	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960922	Identifier	CONST_CS		3960699	1					
ANR	3960923	ExpressionStatement	"REGISTER_MAIN_LONG_CONSTANT ( ""DEBUG_BACKTRACE_IGNORE_ARGS"" , DEBUG_BACKTRACE_IGNORE_ARGS , CONST_PERSISTENT | CONST_CS )"	136:1:4763:4879	3960699	17	True				
ANR	3960924	CallExpression	"REGISTER_MAIN_LONG_CONSTANT ( ""DEBUG_BACKTRACE_IGNORE_ARGS"" , DEBUG_BACKTRACE_IGNORE_ARGS , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960925	Callee	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960926	Identifier	REGISTER_MAIN_LONG_CONSTANT		3960699	0					
ANR	3960927	ArgumentList	"""DEBUG_BACKTRACE_IGNORE_ARGS"""		3960699	1					
ANR	3960928	Argument	"""DEBUG_BACKTRACE_IGNORE_ARGS"""		3960699	0					
ANR	3960929	PrimaryExpression	"""DEBUG_BACKTRACE_IGNORE_ARGS"""		3960699	0					
ANR	3960930	Argument	DEBUG_BACKTRACE_IGNORE_ARGS		3960699	1					
ANR	3960931	Identifier	DEBUG_BACKTRACE_IGNORE_ARGS		3960699	0					
ANR	3960932	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960933	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960934	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960935	Identifier	CONST_CS		3960699	1					
ANR	3960936	CompoundStatement		23:1:1694:1694	3960699	18					
ANR	3960937	ExpressionStatement	"REGISTER_MAIN_BOOL_CONSTANT ( ""TRUE"" , 1 , CONST_PERSISTENT | CONST_CT_SUBST )"	139:2:4914:4987	3960699	0	True				
ANR	3960938	CallExpression	"REGISTER_MAIN_BOOL_CONSTANT ( ""TRUE"" , 1 , CONST_PERSISTENT | CONST_CT_SUBST )"		3960699	0					
ANR	3960939	Callee	REGISTER_MAIN_BOOL_CONSTANT		3960699	0					
ANR	3960940	Identifier	REGISTER_MAIN_BOOL_CONSTANT		3960699	0					
ANR	3960941	ArgumentList	"""TRUE"""		3960699	1					
ANR	3960942	Argument	"""TRUE"""		3960699	0					
ANR	3960943	PrimaryExpression	"""TRUE"""		3960699	0					
ANR	3960944	Argument	1		3960699	1					
ANR	3960945	PrimaryExpression	1		3960699	0					
ANR	3960946	Argument	CONST_PERSISTENT | CONST_CT_SUBST		3960699	2					
ANR	3960947	InclusiveOrExpression	CONST_PERSISTENT | CONST_CT_SUBST		3960699	0		|			
ANR	3960948	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960949	Identifier	CONST_CT_SUBST		3960699	1					
ANR	3960950	ExpressionStatement	"REGISTER_MAIN_BOOL_CONSTANT ( ""FALSE"" , 0 , CONST_PERSISTENT | CONST_CT_SUBST )"	140:2:4991:5065	3960699	1	True				
ANR	3960951	CallExpression	"REGISTER_MAIN_BOOL_CONSTANT ( ""FALSE"" , 0 , CONST_PERSISTENT | CONST_CT_SUBST )"		3960699	0					
ANR	3960952	Callee	REGISTER_MAIN_BOOL_CONSTANT		3960699	0					
ANR	3960953	Identifier	REGISTER_MAIN_BOOL_CONSTANT		3960699	0					
ANR	3960954	ArgumentList	"""FALSE"""		3960699	1					
ANR	3960955	Argument	"""FALSE"""		3960699	0					
ANR	3960956	PrimaryExpression	"""FALSE"""		3960699	0					
ANR	3960957	Argument	0		3960699	1					
ANR	3960958	PrimaryExpression	0		3960699	0					
ANR	3960959	Argument	CONST_PERSISTENT | CONST_CT_SUBST		3960699	2					
ANR	3960960	InclusiveOrExpression	CONST_PERSISTENT | CONST_CT_SUBST		3960699	0		|			
ANR	3960961	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960962	Identifier	CONST_CT_SUBST		3960699	1					
ANR	3960963	ExpressionStatement	"REGISTER_MAIN_BOOL_CONSTANT ( ""ZEND_THREAD_SAFE"" , ZTS_V , CONST_PERSISTENT | CONST_CS )"	141:2:5069:5152	3960699	2	True				
ANR	3960964	CallExpression	"REGISTER_MAIN_BOOL_CONSTANT ( ""ZEND_THREAD_SAFE"" , ZTS_V , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960965	Callee	REGISTER_MAIN_BOOL_CONSTANT		3960699	0					
ANR	3960966	Identifier	REGISTER_MAIN_BOOL_CONSTANT		3960699	0					
ANR	3960967	ArgumentList	"""ZEND_THREAD_SAFE"""		3960699	1					
ANR	3960968	Argument	"""ZEND_THREAD_SAFE"""		3960699	0					
ANR	3960969	PrimaryExpression	"""ZEND_THREAD_SAFE"""		3960699	0					
ANR	3960970	Argument	ZTS_V		3960699	1					
ANR	3960971	Identifier	ZTS_V		3960699	0					
ANR	3960972	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960973	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960974	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960975	Identifier	CONST_CS		3960699	1					
ANR	3960976	ExpressionStatement	"REGISTER_MAIN_BOOL_CONSTANT ( ""ZEND_DEBUG_BUILD"" , ZEND_DEBUG , CONST_PERSISTENT | CONST_CS )"	142:2:5156:5244	3960699	3	True				
ANR	3960977	CallExpression	"REGISTER_MAIN_BOOL_CONSTANT ( ""ZEND_DEBUG_BUILD"" , ZEND_DEBUG , CONST_PERSISTENT | CONST_CS )"		3960699	0					
ANR	3960978	Callee	REGISTER_MAIN_BOOL_CONSTANT		3960699	0					
ANR	3960979	Identifier	REGISTER_MAIN_BOOL_CONSTANT		3960699	0					
ANR	3960980	ArgumentList	"""ZEND_DEBUG_BUILD"""		3960699	1					
ANR	3960981	Argument	"""ZEND_DEBUG_BUILD"""		3960699	0					
ANR	3960982	PrimaryExpression	"""ZEND_DEBUG_BUILD"""		3960699	0					
ANR	3960983	Argument	ZEND_DEBUG		3960699	1					
ANR	3960984	Identifier	ZEND_DEBUG		3960699	0					
ANR	3960985	Argument	CONST_PERSISTENT | CONST_CS		3960699	2					
ANR	3960986	InclusiveOrExpression	CONST_PERSISTENT | CONST_CS		3960699	0		|			
ANR	3960987	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960988	Identifier	CONST_CS		3960699	1					
ANR	3960989	ExpressionStatement	"REGISTER_MAIN_NULL_CONSTANT ( ""NULL"" , CONST_PERSISTENT | CONST_CT_SUBST )"	144:1:5250:5320	3960699	19	True				
ANR	3960990	CallExpression	"REGISTER_MAIN_NULL_CONSTANT ( ""NULL"" , CONST_PERSISTENT | CONST_CT_SUBST )"		3960699	0					
ANR	3960991	Callee	REGISTER_MAIN_NULL_CONSTANT		3960699	0					
ANR	3960992	Identifier	REGISTER_MAIN_NULL_CONSTANT		3960699	0					
ANR	3960993	ArgumentList	"""NULL"""		3960699	1					
ANR	3960994	Argument	"""NULL"""		3960699	0					
ANR	3960995	PrimaryExpression	"""NULL"""		3960699	0					
ANR	3960996	Argument	CONST_PERSISTENT | CONST_CT_SUBST		3960699	1					
ANR	3960997	InclusiveOrExpression	CONST_PERSISTENT | CONST_CT_SUBST		3960699	0		|			
ANR	3960998	Identifier	CONST_PERSISTENT		3960699	0					
ANR	3960999	Identifier	CONST_CT_SUBST		3960699	1					
ANR	3961000	ReturnType	void		3960699	1					
ANR	3961001	Identifier	zend_register_standard_constants		3960699	2					
ANR	3961002	ParameterList			3960699	3					
ANR	3961003	CFGEntryNode	ENTRY		3960699		True				
ANR	3961004	CFGExitNode	EXIT		3960699		True				
ANR	3961005	Symbol	CONST_CT_SUBST		3960699						
ANR	3961006	Symbol	CONST_CS		3960699						
ANR	3961007	Symbol	E_RECOVERABLE_ERROR		3960699						
ANR	3961008	Symbol	E_USER_WARNING		3960699						
ANR	3961009	Symbol	E_CORE_WARNING		3960699						
ANR	3961010	Symbol	E_COMPILE_ERROR		3960699						
ANR	3961011	Symbol	E_PARSE		3960699						
ANR	3961012	Symbol	E_NOTICE		3960699						
ANR	3961013	Symbol	E_STRICT		3960699						
ANR	3961014	Symbol	E_USER_NOTICE		3960699						
ANR	3961015	Symbol	DEBUG_BACKTRACE_PROVIDE_OBJECT		3960699						
ANR	3961016	Symbol	ZTS_V		3960699						
ANR	3961017	Symbol	E_USER_DEPRECATED		3960699						
ANR	3961018	Symbol	E_WARNING		3960699						
ANR	3961019	Symbol	E_ERROR		3960699						
ANR	3961020	Symbol	E_DEPRECATED		3960699						
ANR	3961021	Symbol	DEBUG_BACKTRACE_IGNORE_ARGS		3960699						
ANR	3961022	Symbol	E_CORE_ERROR		3960699						
ANR	3961023	Symbol	ZEND_DEBUG		3960699						
ANR	3961024	Symbol	E_COMPILE_WARNING		3960699						
ANR	3961025	Symbol	CONST_PERSISTENT		3960699						
ANR	3961026	Symbol	E_USER_ERROR		3960699						
ANR	3961027	Symbol	E_ALL		3960699						
ANR	3961028	Function	zend_shutdown_constants	148:0:5326:5446							
ANR	3961029	FunctionDef	zend_shutdown_constants ()		3961028	0					
ANR	3961030	CompoundStatement		149:0:5360:5446	3961028	0					
ANR	3961031	ExpressionStatement	zend_hash_destroy ( EG ( zend_constants ) )	150:1:5363:5400	3961028	0	True				
ANR	3961032	CallExpression	zend_hash_destroy ( EG ( zend_constants ) )		3961028	0					
ANR	3961033	Callee	zend_hash_destroy		3961028	0					
ANR	3961034	Identifier	zend_hash_destroy		3961028	0					
ANR	3961035	ArgumentList	EG ( zend_constants )		3961028	1					
ANR	3961036	Argument	EG ( zend_constants )		3961028	0					
ANR	3961037	CallExpression	EG ( zend_constants )		3961028	0					
ANR	3961038	Callee	EG		3961028	0					
ANR	3961039	Identifier	EG		3961028	0					
ANR	3961040	ArgumentList	zend_constants		3961028	1					
ANR	3961041	Argument	zend_constants		3961028	0					
ANR	3961042	Identifier	zend_constants		3961028	0					
ANR	3961043	ExpressionStatement	free ( EG ( zend_constants ) )	151:1:5403:5427	3961028	1	True				
ANR	3961044	CallExpression	free ( EG ( zend_constants ) )		3961028	0					
ANR	3961045	Callee	free		3961028	0					
ANR	3961046	Identifier	free		3961028	0					
ANR	3961047	ArgumentList	EG ( zend_constants )		3961028	1					
ANR	3961048	Argument	EG ( zend_constants )		3961028	0					
ANR	3961049	CallExpression	EG ( zend_constants )		3961028	0					
ANR	3961050	Callee	EG		3961028	0					
ANR	3961051	Identifier	EG		3961028	0					
ANR	3961052	ArgumentList	zend_constants		3961028	1					
ANR	3961053	Argument	zend_constants		3961028	0					
ANR	3961054	Identifier	zend_constants		3961028	0					
ANR	3961055	ReturnStatement	return SUCCESS ;	152:1:5430:5444	3961028	2	True				
ANR	3961056	Identifier	SUCCESS		3961028	0					
ANR	3961057	ReturnType	int		3961028	1					
ANR	3961058	Identifier	zend_shutdown_constants		3961028	2					
ANR	3961059	ParameterList			3961028	3					
ANR	3961060	CFGEntryNode	ENTRY		3961028		True				
ANR	3961061	CFGExitNode	EXIT		3961028		True				
ANR	3961062	Symbol	EG		3961028						
ANR	3961063	Symbol	SUCCESS		3961028						
ANR	3961064	Symbol	zend_constants		3961028						
ANR	3961065	Function	clean_non_persistent_constants	156:0:5450:5692							
ANR	3961066	FunctionDef	clean_non_persistent_constants ()		3961065	0					
ANR	3961067	CompoundStatement		157:0:5492:5692	3961065	0					
ANR	3961068	IfStatement	if ( EG ( full_tables_cleanup ) )		3961065	0					
ANR	3961069	Condition	EG ( full_tables_cleanup )	158:5:5499:5521	3961065	0	True				
ANR	3961070	CallExpression	EG ( full_tables_cleanup )		3961065	0					
ANR	3961071	Callee	EG		3961065	0					
ANR	3961072	Identifier	EG		3961065	0					
ANR	3961073	ArgumentList	full_tables_cleanup		3961065	1					
ANR	3961074	Argument	full_tables_cleanup		3961065	0					
ANR	3961075	Identifier	full_tables_cleanup		3961065	0					
ANR	3961076	CompoundStatement		2:30:31:31	3961065	1					
ANR	3961077	ExpressionStatement	"zend_hash_apply ( EG ( zend_constants ) , clean_non_persistent_constant_full )"	159:2:5528:5599	3961065	0	True				
ANR	3961078	CallExpression	"zend_hash_apply ( EG ( zend_constants ) , clean_non_persistent_constant_full )"		3961065	0					
ANR	3961079	Callee	zend_hash_apply		3961065	0					
ANR	3961080	Identifier	zend_hash_apply		3961065	0					
ANR	3961081	ArgumentList	EG ( zend_constants )		3961065	1					
ANR	3961082	Argument	EG ( zend_constants )		3961065	0					
ANR	3961083	CallExpression	EG ( zend_constants )		3961065	0					
ANR	3961084	Callee	EG		3961065	0					
ANR	3961085	Identifier	EG		3961065	0					
ANR	3961086	ArgumentList	zend_constants		3961065	1					
ANR	3961087	Argument	zend_constants		3961065	0					
ANR	3961088	Identifier	zend_constants		3961065	0					
ANR	3961089	Argument	clean_non_persistent_constant_full		3961065	1					
ANR	3961090	Identifier	clean_non_persistent_constant_full		3961065	0					
ANR	3961091	ElseStatement	else		3961065	0					
ANR	3961092	CompoundStatement		4:8:116:116	3961065	0					
ANR	3961093	ExpressionStatement	"zend_hash_reverse_apply ( EG ( zend_constants ) , clean_non_persistent_constant )"	161:2:5613:5687	3961065	0	True				
ANR	3961094	CallExpression	"zend_hash_reverse_apply ( EG ( zend_constants ) , clean_non_persistent_constant )"		3961065	0					
ANR	3961095	Callee	zend_hash_reverse_apply		3961065	0					
ANR	3961096	Identifier	zend_hash_reverse_apply		3961065	0					
ANR	3961097	ArgumentList	EG ( zend_constants )		3961065	1					
ANR	3961098	Argument	EG ( zend_constants )		3961065	0					
ANR	3961099	CallExpression	EG ( zend_constants )		3961065	0					
ANR	3961100	Callee	EG		3961065	0					
ANR	3961101	Identifier	EG		3961065	0					
ANR	3961102	ArgumentList	zend_constants		3961065	1					
ANR	3961103	Argument	zend_constants		3961065	0					
ANR	3961104	Identifier	zend_constants		3961065	0					
ANR	3961105	Argument	clean_non_persistent_constant		3961065	1					
ANR	3961106	Identifier	clean_non_persistent_constant		3961065	0					
ANR	3961107	ReturnType	void		3961065	1					
ANR	3961108	Identifier	clean_non_persistent_constants		3961065	2					
ANR	3961109	ParameterList			3961065	3					
ANR	3961110	CFGEntryNode	ENTRY		3961065		True				
ANR	3961111	CFGExitNode	EXIT		3961065		True				
ANR	3961112	Symbol	clean_non_persistent_constant		3961065						
ANR	3961113	Symbol	EG		3961065						
ANR	3961114	Symbol	full_tables_cleanup		3961065						
ANR	3961115	Symbol	clean_non_persistent_constant_full		3961065						
ANR	3961116	Symbol	zend_constants		3961065						
ANR	3961117	Function	zend_register_null_constant	165:0:5695:5996							
ANR	3961118	FunctionDef	"zend_register_null_constant (const char * name , size_t name_len , int flags , int module_number)"		3961117	0					
ANR	3961119	CompoundStatement		166:0:5802:5996	3961117	0					
ANR	3961120	IdentifierDeclStatement	zend_constant c ;	167:1:5805:5820	3961117	0	True				
ANR	3961121	IdentifierDecl	c		3961117	0					
ANR	3961122	IdentifierDeclType	zend_constant		3961117	0					
ANR	3961123	Identifier	c		3961117	1					
ANR	3961124	ExpressionStatement	ZVAL_NULL ( & c . value )	169:1:5824:5843	3961117	1	True				
ANR	3961125	CallExpression	ZVAL_NULL ( & c . value )		3961117	0					
ANR	3961126	Callee	ZVAL_NULL		3961117	0					
ANR	3961127	Identifier	ZVAL_NULL		3961117	0					
ANR	3961128	ArgumentList	& c . value		3961117	1					
ANR	3961129	Argument	& c . value		3961117	0					
ANR	3961130	UnaryOperationExpression	& c . value		3961117	0					
ANR	3961131	UnaryOperator	&		3961117	0					
ANR	3961132	MemberAccess	c . value		3961117	1					
ANR	3961133	Identifier	c		3961117	0					
ANR	3961134	Identifier	value		3961117	1					
ANR	3961135	ExpressionStatement	c . flags = flags	170:1:5846:5861	3961117	2	True				
ANR	3961136	AssignmentExpression	c . flags = flags		3961117	0		=			
ANR	3961137	MemberAccess	c . flags		3961117	0					
ANR	3961138	Identifier	c		3961117	0					
ANR	3961139	Identifier	flags		3961117	1					
ANR	3961140	Identifier	flags		3961117	1					
ANR	3961141	ExpressionStatement	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"	171:1:5864:5931	3961117	3	True				
ANR	3961142	AssignmentExpression	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961117	0		=			
ANR	3961143	MemberAccess	c . name		3961117	0					
ANR	3961144	Identifier	c		3961117	0					
ANR	3961145	Identifier	name		3961117	1					
ANR	3961146	CallExpression	"zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961117	1					
ANR	3961147	Callee	zend_string_init		3961117	0					
ANR	3961148	Identifier	zend_string_init		3961117	0					
ANR	3961149	ArgumentList	name		3961117	1					
ANR	3961150	Argument	name		3961117	0					
ANR	3961151	Identifier	name		3961117	0					
ANR	3961152	Argument	name_len		3961117	1					
ANR	3961153	Identifier	name_len		3961117	0					
ANR	3961154	Argument	flags & CONST_PERSISTENT		3961117	2					
ANR	3961155	BitAndExpression	flags & CONST_PERSISTENT		3961117	0		&			
ANR	3961156	Identifier	flags		3961117	0					
ANR	3961157	Identifier	CONST_PERSISTENT		3961117	1					
ANR	3961158	ExpressionStatement	c . module_number = module_number	172:1:5934:5965	3961117	4	True				
ANR	3961159	AssignmentExpression	c . module_number = module_number		3961117	0		=			
ANR	3961160	MemberAccess	c . module_number		3961117	0					
ANR	3961161	Identifier	c		3961117	0					
ANR	3961162	Identifier	module_number		3961117	1					
ANR	3961163	Identifier	module_number		3961117	1					
ANR	3961164	ExpressionStatement	zend_register_constant ( & c )	173:1:5968:5994	3961117	5	True				
ANR	3961165	CallExpression	zend_register_constant ( & c )		3961117	0					
ANR	3961166	Callee	zend_register_constant		3961117	0					
ANR	3961167	Identifier	zend_register_constant		3961117	0					
ANR	3961168	ArgumentList	& c		3961117	1					
ANR	3961169	Argument	& c		3961117	0					
ANR	3961170	UnaryOperationExpression	& c		3961117	0					
ANR	3961171	UnaryOperator	&		3961117	0					
ANR	3961172	Identifier	c		3961117	1					
ANR	3961173	ReturnType	ZEND_API void		3961117	1					
ANR	3961174	Identifier	zend_register_null_constant		3961117	2					
ANR	3961175	ParameterList	"const char * name , size_t name_len , int flags , int module_number"		3961117	3					
ANR	3961176	Parameter	const char * name	165:42:5737:5752	3961117	0	True				
ANR	3961177	ParameterType	const char *		3961117	0					
ANR	3961178	Identifier	name		3961117	1					
ANR	3961179	Parameter	size_t name_len	165:60:5755:5769	3961117	1	True				
ANR	3961180	ParameterType	size_t		3961117	0					
ANR	3961181	Identifier	name_len		3961117	1					
ANR	3961182	Parameter	int flags	165:77:5772:5780	3961117	2	True				
ANR	3961183	ParameterType	int		3961117	0					
ANR	3961184	Identifier	flags		3961117	1					
ANR	3961185	Parameter	int module_number	165:88:5783:5799	3961117	3	True				
ANR	3961186	ParameterType	int		3961117	0					
ANR	3961187	Identifier	module_number		3961117	1					
ANR	3961188	CFGEntryNode	ENTRY		3961117		True				
ANR	3961189	CFGExitNode	EXIT		3961117		True				
ANR	3961190	Symbol	zend_string_init		3961117						
ANR	3961191	Symbol	c		3961117						
ANR	3961192	Symbol	c . module_number		3961117						
ANR	3961193	Symbol	name		3961117						
ANR	3961194	Symbol	flags		3961117						
ANR	3961195	Symbol	module_number		3961117						
ANR	3961196	Symbol	& c		3961117						
ANR	3961197	Symbol	name_len		3961117						
ANR	3961198	Symbol	& c . value		3961117						
ANR	3961199	Symbol	c . name		3961117						
ANR	3961200	Symbol	CONST_PERSISTENT		3961117						
ANR	3961201	Symbol	c . flags		3961117						
ANR	3961202	Function	zend_register_bool_constant	176:0:5999:6322							
ANR	3961203	FunctionDef	"zend_register_bool_constant (const char * name , size_t name_len , zend_bool bval , int flags , int module_number)"		3961202	0					
ANR	3961204	CompoundStatement		177:0:6122:6322	3961202	0					
ANR	3961205	IdentifierDeclStatement	zend_constant c ;	178:1:6125:6140	3961202	0	True				
ANR	3961206	IdentifierDecl	c		3961202	0					
ANR	3961207	IdentifierDeclType	zend_constant		3961202	0					
ANR	3961208	Identifier	c		3961202	1					
ANR	3961209	ExpressionStatement	"ZVAL_BOOL ( & c . value , bval )"	180:1:6144:6169	3961202	1	True				
ANR	3961210	CallExpression	"ZVAL_BOOL ( & c . value , bval )"		3961202	0					
ANR	3961211	Callee	ZVAL_BOOL		3961202	0					
ANR	3961212	Identifier	ZVAL_BOOL		3961202	0					
ANR	3961213	ArgumentList	& c . value		3961202	1					
ANR	3961214	Argument	& c . value		3961202	0					
ANR	3961215	UnaryOperationExpression	& c . value		3961202	0					
ANR	3961216	UnaryOperator	&		3961202	0					
ANR	3961217	MemberAccess	c . value		3961202	1					
ANR	3961218	Identifier	c		3961202	0					
ANR	3961219	Identifier	value		3961202	1					
ANR	3961220	Argument	bval		3961202	1					
ANR	3961221	Identifier	bval		3961202	0					
ANR	3961222	ExpressionStatement	c . flags = flags	181:1:6172:6187	3961202	2	True				
ANR	3961223	AssignmentExpression	c . flags = flags		3961202	0		=			
ANR	3961224	MemberAccess	c . flags		3961202	0					
ANR	3961225	Identifier	c		3961202	0					
ANR	3961226	Identifier	flags		3961202	1					
ANR	3961227	Identifier	flags		3961202	1					
ANR	3961228	ExpressionStatement	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"	182:1:6190:6257	3961202	3	True				
ANR	3961229	AssignmentExpression	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961202	0		=			
ANR	3961230	MemberAccess	c . name		3961202	0					
ANR	3961231	Identifier	c		3961202	0					
ANR	3961232	Identifier	name		3961202	1					
ANR	3961233	CallExpression	"zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961202	1					
ANR	3961234	Callee	zend_string_init		3961202	0					
ANR	3961235	Identifier	zend_string_init		3961202	0					
ANR	3961236	ArgumentList	name		3961202	1					
ANR	3961237	Argument	name		3961202	0					
ANR	3961238	Identifier	name		3961202	0					
ANR	3961239	Argument	name_len		3961202	1					
ANR	3961240	Identifier	name_len		3961202	0					
ANR	3961241	Argument	flags & CONST_PERSISTENT		3961202	2					
ANR	3961242	BitAndExpression	flags & CONST_PERSISTENT		3961202	0		&			
ANR	3961243	Identifier	flags		3961202	0					
ANR	3961244	Identifier	CONST_PERSISTENT		3961202	1					
ANR	3961245	ExpressionStatement	c . module_number = module_number	183:1:6260:6291	3961202	4	True				
ANR	3961246	AssignmentExpression	c . module_number = module_number		3961202	0		=			
ANR	3961247	MemberAccess	c . module_number		3961202	0					
ANR	3961248	Identifier	c		3961202	0					
ANR	3961249	Identifier	module_number		3961202	1					
ANR	3961250	Identifier	module_number		3961202	1					
ANR	3961251	ExpressionStatement	zend_register_constant ( & c )	184:1:6294:6320	3961202	5	True				
ANR	3961252	CallExpression	zend_register_constant ( & c )		3961202	0					
ANR	3961253	Callee	zend_register_constant		3961202	0					
ANR	3961254	Identifier	zend_register_constant		3961202	0					
ANR	3961255	ArgumentList	& c		3961202	1					
ANR	3961256	Argument	& c		3961202	0					
ANR	3961257	UnaryOperationExpression	& c		3961202	0					
ANR	3961258	UnaryOperator	&		3961202	0					
ANR	3961259	Identifier	c		3961202	1					
ANR	3961260	ReturnType	ZEND_API void		3961202	1					
ANR	3961261	Identifier	zend_register_bool_constant		3961202	2					
ANR	3961262	ParameterList	"const char * name , size_t name_len , zend_bool bval , int flags , int module_number"		3961202	3					
ANR	3961263	Parameter	const char * name	176:42:6041:6056	3961202	0	True				
ANR	3961264	ParameterType	const char *		3961202	0					
ANR	3961265	Identifier	name		3961202	1					
ANR	3961266	Parameter	size_t name_len	176:60:6059:6073	3961202	1	True				
ANR	3961267	ParameterType	size_t		3961202	0					
ANR	3961268	Identifier	name_len		3961202	1					
ANR	3961269	Parameter	zend_bool bval	176:77:6076:6089	3961202	2	True				
ANR	3961270	ParameterType	zend_bool		3961202	0					
ANR	3961271	Identifier	bval		3961202	1					
ANR	3961272	Parameter	int flags	176:93:6092:6100	3961202	3	True				
ANR	3961273	ParameterType	int		3961202	0					
ANR	3961274	Identifier	flags		3961202	1					
ANR	3961275	Parameter	int module_number	176:104:6103:6119	3961202	4	True				
ANR	3961276	ParameterType	int		3961202	0					
ANR	3961277	Identifier	module_number		3961202	1					
ANR	3961278	CFGEntryNode	ENTRY		3961202		True				
ANR	3961279	CFGExitNode	EXIT		3961202		True				
ANR	3961280	Symbol	c		3961202						
ANR	3961281	Symbol	c . module_number		3961202						
ANR	3961282	Symbol	flags		3961202						
ANR	3961283	Symbol	module_number		3961202						
ANR	3961284	Symbol	& c		3961202						
ANR	3961285	Symbol	& c . value		3961202						
ANR	3961286	Symbol	c . name		3961202						
ANR	3961287	Symbol	bval		3961202						
ANR	3961288	Symbol	zend_string_init		3961202						
ANR	3961289	Symbol	name		3961202						
ANR	3961290	Symbol	name_len		3961202						
ANR	3961291	Symbol	CONST_PERSISTENT		3961202						
ANR	3961292	Symbol	c . flags		3961202						
ANR	3961293	Function	zend_register_long_constant	187:0:6325:6648							
ANR	3961294	FunctionDef	"zend_register_long_constant (const char * name , size_t name_len , zend_long lval , int flags , int module_number)"		3961293	0					
ANR	3961295	CompoundStatement		188:0:6448:6648	3961293	0					
ANR	3961296	IdentifierDeclStatement	zend_constant c ;	189:1:6451:6466	3961293	0	True				
ANR	3961297	IdentifierDecl	c		3961293	0					
ANR	3961298	IdentifierDeclType	zend_constant		3961293	0					
ANR	3961299	Identifier	c		3961293	1					
ANR	3961300	ExpressionStatement	"ZVAL_LONG ( & c . value , lval )"	191:1:6470:6495	3961293	1	True				
ANR	3961301	CallExpression	"ZVAL_LONG ( & c . value , lval )"		3961293	0					
ANR	3961302	Callee	ZVAL_LONG		3961293	0					
ANR	3961303	Identifier	ZVAL_LONG		3961293	0					
ANR	3961304	ArgumentList	& c . value		3961293	1					
ANR	3961305	Argument	& c . value		3961293	0					
ANR	3961306	UnaryOperationExpression	& c . value		3961293	0					
ANR	3961307	UnaryOperator	&		3961293	0					
ANR	3961308	MemberAccess	c . value		3961293	1					
ANR	3961309	Identifier	c		3961293	0					
ANR	3961310	Identifier	value		3961293	1					
ANR	3961311	Argument	lval		3961293	1					
ANR	3961312	Identifier	lval		3961293	0					
ANR	3961313	ExpressionStatement	c . flags = flags	192:1:6498:6513	3961293	2	True				
ANR	3961314	AssignmentExpression	c . flags = flags		3961293	0		=			
ANR	3961315	MemberAccess	c . flags		3961293	0					
ANR	3961316	Identifier	c		3961293	0					
ANR	3961317	Identifier	flags		3961293	1					
ANR	3961318	Identifier	flags		3961293	1					
ANR	3961319	ExpressionStatement	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"	193:1:6516:6583	3961293	3	True				
ANR	3961320	AssignmentExpression	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961293	0		=			
ANR	3961321	MemberAccess	c . name		3961293	0					
ANR	3961322	Identifier	c		3961293	0					
ANR	3961323	Identifier	name		3961293	1					
ANR	3961324	CallExpression	"zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961293	1					
ANR	3961325	Callee	zend_string_init		3961293	0					
ANR	3961326	Identifier	zend_string_init		3961293	0					
ANR	3961327	ArgumentList	name		3961293	1					
ANR	3961328	Argument	name		3961293	0					
ANR	3961329	Identifier	name		3961293	0					
ANR	3961330	Argument	name_len		3961293	1					
ANR	3961331	Identifier	name_len		3961293	0					
ANR	3961332	Argument	flags & CONST_PERSISTENT		3961293	2					
ANR	3961333	BitAndExpression	flags & CONST_PERSISTENT		3961293	0		&			
ANR	3961334	Identifier	flags		3961293	0					
ANR	3961335	Identifier	CONST_PERSISTENT		3961293	1					
ANR	3961336	ExpressionStatement	c . module_number = module_number	194:1:6586:6617	3961293	4	True				
ANR	3961337	AssignmentExpression	c . module_number = module_number		3961293	0		=			
ANR	3961338	MemberAccess	c . module_number		3961293	0					
ANR	3961339	Identifier	c		3961293	0					
ANR	3961340	Identifier	module_number		3961293	1					
ANR	3961341	Identifier	module_number		3961293	1					
ANR	3961342	ExpressionStatement	zend_register_constant ( & c )	195:1:6620:6646	3961293	5	True				
ANR	3961343	CallExpression	zend_register_constant ( & c )		3961293	0					
ANR	3961344	Callee	zend_register_constant		3961293	0					
ANR	3961345	Identifier	zend_register_constant		3961293	0					
ANR	3961346	ArgumentList	& c		3961293	1					
ANR	3961347	Argument	& c		3961293	0					
ANR	3961348	UnaryOperationExpression	& c		3961293	0					
ANR	3961349	UnaryOperator	&		3961293	0					
ANR	3961350	Identifier	c		3961293	1					
ANR	3961351	ReturnType	ZEND_API void		3961293	1					
ANR	3961352	Identifier	zend_register_long_constant		3961293	2					
ANR	3961353	ParameterList	"const char * name , size_t name_len , zend_long lval , int flags , int module_number"		3961293	3					
ANR	3961354	Parameter	const char * name	187:42:6367:6382	3961293	0	True				
ANR	3961355	ParameterType	const char *		3961293	0					
ANR	3961356	Identifier	name		3961293	1					
ANR	3961357	Parameter	size_t name_len	187:60:6385:6399	3961293	1	True				
ANR	3961358	ParameterType	size_t		3961293	0					
ANR	3961359	Identifier	name_len		3961293	1					
ANR	3961360	Parameter	zend_long lval	187:77:6402:6415	3961293	2	True				
ANR	3961361	ParameterType	zend_long		3961293	0					
ANR	3961362	Identifier	lval		3961293	1					
ANR	3961363	Parameter	int flags	187:93:6418:6426	3961293	3	True				
ANR	3961364	ParameterType	int		3961293	0					
ANR	3961365	Identifier	flags		3961293	1					
ANR	3961366	Parameter	int module_number	187:104:6429:6445	3961293	4	True				
ANR	3961367	ParameterType	int		3961293	0					
ANR	3961368	Identifier	module_number		3961293	1					
ANR	3961369	CFGEntryNode	ENTRY		3961293		True				
ANR	3961370	CFGExitNode	EXIT		3961293		True				
ANR	3961371	Symbol	c		3961293						
ANR	3961372	Symbol	c . module_number		3961293						
ANR	3961373	Symbol	lval		3961293						
ANR	3961374	Symbol	flags		3961293						
ANR	3961375	Symbol	module_number		3961293						
ANR	3961376	Symbol	& c		3961293						
ANR	3961377	Symbol	& c . value		3961293						
ANR	3961378	Symbol	c . name		3961293						
ANR	3961379	Symbol	zend_string_init		3961293						
ANR	3961380	Symbol	name		3961293						
ANR	3961381	Symbol	name_len		3961293						
ANR	3961382	Symbol	CONST_PERSISTENT		3961293						
ANR	3961383	Symbol	c . flags		3961293						
ANR	3961384	Function	zend_register_double_constant	199:0:6652:6976							
ANR	3961385	FunctionDef	"zend_register_double_constant (const char * name , size_t name_len , double dval , int flags , int module_number)"		3961384	0					
ANR	3961386	CompoundStatement		200:0:6774:6976	3961384	0					
ANR	3961387	IdentifierDeclStatement	zend_constant c ;	201:1:6777:6792	3961384	0	True				
ANR	3961388	IdentifierDecl	c		3961384	0					
ANR	3961389	IdentifierDeclType	zend_constant		3961384	0					
ANR	3961390	Identifier	c		3961384	1					
ANR	3961391	ExpressionStatement	"ZVAL_DOUBLE ( & c . value , dval )"	203:1:6796:6823	3961384	1	True				
ANR	3961392	CallExpression	"ZVAL_DOUBLE ( & c . value , dval )"		3961384	0					
ANR	3961393	Callee	ZVAL_DOUBLE		3961384	0					
ANR	3961394	Identifier	ZVAL_DOUBLE		3961384	0					
ANR	3961395	ArgumentList	& c . value		3961384	1					
ANR	3961396	Argument	& c . value		3961384	0					
ANR	3961397	UnaryOperationExpression	& c . value		3961384	0					
ANR	3961398	UnaryOperator	&		3961384	0					
ANR	3961399	MemberAccess	c . value		3961384	1					
ANR	3961400	Identifier	c		3961384	0					
ANR	3961401	Identifier	value		3961384	1					
ANR	3961402	Argument	dval		3961384	1					
ANR	3961403	Identifier	dval		3961384	0					
ANR	3961404	ExpressionStatement	c . flags = flags	204:1:6826:6841	3961384	2	True				
ANR	3961405	AssignmentExpression	c . flags = flags		3961384	0		=			
ANR	3961406	MemberAccess	c . flags		3961384	0					
ANR	3961407	Identifier	c		3961384	0					
ANR	3961408	Identifier	flags		3961384	1					
ANR	3961409	Identifier	flags		3961384	1					
ANR	3961410	ExpressionStatement	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"	205:1:6844:6911	3961384	3	True				
ANR	3961411	AssignmentExpression	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961384	0		=			
ANR	3961412	MemberAccess	c . name		3961384	0					
ANR	3961413	Identifier	c		3961384	0					
ANR	3961414	Identifier	name		3961384	1					
ANR	3961415	CallExpression	"zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961384	1					
ANR	3961416	Callee	zend_string_init		3961384	0					
ANR	3961417	Identifier	zend_string_init		3961384	0					
ANR	3961418	ArgumentList	name		3961384	1					
ANR	3961419	Argument	name		3961384	0					
ANR	3961420	Identifier	name		3961384	0					
ANR	3961421	Argument	name_len		3961384	1					
ANR	3961422	Identifier	name_len		3961384	0					
ANR	3961423	Argument	flags & CONST_PERSISTENT		3961384	2					
ANR	3961424	BitAndExpression	flags & CONST_PERSISTENT		3961384	0		&			
ANR	3961425	Identifier	flags		3961384	0					
ANR	3961426	Identifier	CONST_PERSISTENT		3961384	1					
ANR	3961427	ExpressionStatement	c . module_number = module_number	206:1:6914:6945	3961384	4	True				
ANR	3961428	AssignmentExpression	c . module_number = module_number		3961384	0		=			
ANR	3961429	MemberAccess	c . module_number		3961384	0					
ANR	3961430	Identifier	c		3961384	0					
ANR	3961431	Identifier	module_number		3961384	1					
ANR	3961432	Identifier	module_number		3961384	1					
ANR	3961433	ExpressionStatement	zend_register_constant ( & c )	207:1:6948:6974	3961384	5	True				
ANR	3961434	CallExpression	zend_register_constant ( & c )		3961384	0					
ANR	3961435	Callee	zend_register_constant		3961384	0					
ANR	3961436	Identifier	zend_register_constant		3961384	0					
ANR	3961437	ArgumentList	& c		3961384	1					
ANR	3961438	Argument	& c		3961384	0					
ANR	3961439	UnaryOperationExpression	& c		3961384	0					
ANR	3961440	UnaryOperator	&		3961384	0					
ANR	3961441	Identifier	c		3961384	1					
ANR	3961442	ReturnType	ZEND_API void		3961384	1					
ANR	3961443	Identifier	zend_register_double_constant		3961384	2					
ANR	3961444	ParameterList	"const char * name , size_t name_len , double dval , int flags , int module_number"		3961384	3					
ANR	3961445	Parameter	const char * name	199:44:6696:6711	3961384	0	True				
ANR	3961446	ParameterType	const char *		3961384	0					
ANR	3961447	Identifier	name		3961384	1					
ANR	3961448	Parameter	size_t name_len	199:62:6714:6728	3961384	1	True				
ANR	3961449	ParameterType	size_t		3961384	0					
ANR	3961450	Identifier	name_len		3961384	1					
ANR	3961451	Parameter	double dval	199:79:6731:6741	3961384	2	True				
ANR	3961452	ParameterType	double		3961384	0					
ANR	3961453	Identifier	dval		3961384	1					
ANR	3961454	Parameter	int flags	199:92:6744:6752	3961384	3	True				
ANR	3961455	ParameterType	int		3961384	0					
ANR	3961456	Identifier	flags		3961384	1					
ANR	3961457	Parameter	int module_number	199:103:6755:6771	3961384	4	True				
ANR	3961458	ParameterType	int		3961384	0					
ANR	3961459	Identifier	module_number		3961384	1					
ANR	3961460	CFGEntryNode	ENTRY		3961384		True				
ANR	3961461	CFGExitNode	EXIT		3961384		True				
ANR	3961462	Symbol	c		3961384						
ANR	3961463	Symbol	c . module_number		3961384						
ANR	3961464	Symbol	flags		3961384						
ANR	3961465	Symbol	module_number		3961384						
ANR	3961466	Symbol	& c		3961384						
ANR	3961467	Symbol	& c . value		3961384						
ANR	3961468	Symbol	c . name		3961384						
ANR	3961469	Symbol	zend_string_init		3961384						
ANR	3961470	Symbol	dval		3961384						
ANR	3961471	Symbol	name		3961384						
ANR	3961472	Symbol	name_len		3961384						
ANR	3961473	Symbol	CONST_PERSISTENT		3961384						
ANR	3961474	Symbol	c . flags		3961384						
ANR	3961475	Function	zend_register_stringl_constant	211:0:6980:7376							
ANR	3961476	FunctionDef	"zend_register_stringl_constant (const char * name , size_t name_len , char * strval , size_t strlen , int flags , int module_number)"		3961475	0					
ANR	3961477	CompoundStatement		212:0:7119:7376	3961475	0					
ANR	3961478	IdentifierDeclStatement	zend_constant c ;	213:1:7122:7137	3961475	0	True				
ANR	3961479	IdentifierDecl	c		3961475	0					
ANR	3961480	IdentifierDeclType	zend_constant		3961475	0					
ANR	3961481	Identifier	c		3961475	1					
ANR	3961482	ExpressionStatement	"ZVAL_NEW_STR ( & c . value , zend_string_init ( strval , strlen , flags & CONST_PERSISTENT ) )"	215:1:7141:7223	3961475	1	True				
ANR	3961483	CallExpression	"ZVAL_NEW_STR ( & c . value , zend_string_init ( strval , strlen , flags & CONST_PERSISTENT ) )"		3961475	0					
ANR	3961484	Callee	ZVAL_NEW_STR		3961475	0					
ANR	3961485	Identifier	ZVAL_NEW_STR		3961475	0					
ANR	3961486	ArgumentList	& c . value		3961475	1					
ANR	3961487	Argument	& c . value		3961475	0					
ANR	3961488	UnaryOperationExpression	& c . value		3961475	0					
ANR	3961489	UnaryOperator	&		3961475	0					
ANR	3961490	MemberAccess	c . value		3961475	1					
ANR	3961491	Identifier	c		3961475	0					
ANR	3961492	Identifier	value		3961475	1					
ANR	3961493	Argument	"zend_string_init ( strval , strlen , flags & CONST_PERSISTENT )"		3961475	1					
ANR	3961494	CallExpression	"zend_string_init ( strval , strlen , flags & CONST_PERSISTENT )"		3961475	0					
ANR	3961495	Callee	zend_string_init		3961475	0					
ANR	3961496	Identifier	zend_string_init		3961475	0					
ANR	3961497	ArgumentList	strval		3961475	1					
ANR	3961498	Argument	strval		3961475	0					
ANR	3961499	Identifier	strval		3961475	0					
ANR	3961500	Argument	strlen		3961475	1					
ANR	3961501	Identifier	strlen		3961475	0					
ANR	3961502	Argument	flags & CONST_PERSISTENT		3961475	2					
ANR	3961503	BitAndExpression	flags & CONST_PERSISTENT		3961475	0		&			
ANR	3961504	Identifier	flags		3961475	0					
ANR	3961505	Identifier	CONST_PERSISTENT		3961475	1					
ANR	3961506	ExpressionStatement	c . flags = flags	216:1:7226:7241	3961475	2	True				
ANR	3961507	AssignmentExpression	c . flags = flags		3961475	0		=			
ANR	3961508	MemberAccess	c . flags		3961475	0					
ANR	3961509	Identifier	c		3961475	0					
ANR	3961510	Identifier	flags		3961475	1					
ANR	3961511	Identifier	flags		3961475	1					
ANR	3961512	ExpressionStatement	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"	217:1:7244:7311	3961475	3	True				
ANR	3961513	AssignmentExpression	"c . name = zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961475	0		=			
ANR	3961514	MemberAccess	c . name		3961475	0					
ANR	3961515	Identifier	c		3961475	0					
ANR	3961516	Identifier	name		3961475	1					
ANR	3961517	CallExpression	"zend_string_init ( name , name_len , flags & CONST_PERSISTENT )"		3961475	1					
ANR	3961518	Callee	zend_string_init		3961475	0					
ANR	3961519	Identifier	zend_string_init		3961475	0					
ANR	3961520	ArgumentList	name		3961475	1					
ANR	3961521	Argument	name		3961475	0					
ANR	3961522	Identifier	name		3961475	0					
ANR	3961523	Argument	name_len		3961475	1					
ANR	3961524	Identifier	name_len		3961475	0					
ANR	3961525	Argument	flags & CONST_PERSISTENT		3961475	2					
ANR	3961526	BitAndExpression	flags & CONST_PERSISTENT		3961475	0		&			
ANR	3961527	Identifier	flags		3961475	0					
ANR	3961528	Identifier	CONST_PERSISTENT		3961475	1					
ANR	3961529	ExpressionStatement	c . module_number = module_number	218:1:7314:7345	3961475	4	True				
ANR	3961530	AssignmentExpression	c . module_number = module_number		3961475	0		=			
ANR	3961531	MemberAccess	c . module_number		3961475	0					
ANR	3961532	Identifier	c		3961475	0					
ANR	3961533	Identifier	module_number		3961475	1					
ANR	3961534	Identifier	module_number		3961475	1					
ANR	3961535	ExpressionStatement	zend_register_constant ( & c )	219:1:7348:7374	3961475	5	True				
ANR	3961536	CallExpression	zend_register_constant ( & c )		3961475	0					
ANR	3961537	Callee	zend_register_constant		3961475	0					
ANR	3961538	Identifier	zend_register_constant		3961475	0					
ANR	3961539	ArgumentList	& c		3961475	1					
ANR	3961540	Argument	& c		3961475	0					
ANR	3961541	UnaryOperationExpression	& c		3961475	0					
ANR	3961542	UnaryOperator	&		3961475	0					
ANR	3961543	Identifier	c		3961475	1					
ANR	3961544	ReturnType	ZEND_API void		3961475	1					
ANR	3961545	Identifier	zend_register_stringl_constant		3961475	2					
ANR	3961546	ParameterList	"const char * name , size_t name_len , char * strval , size_t strlen , int flags , int module_number"		3961475	3					
ANR	3961547	Parameter	const char * name	211:45:7025:7040	3961475	0	True				
ANR	3961548	ParameterType	const char *		3961475	0					
ANR	3961549	Identifier	name		3961475	1					
ANR	3961550	Parameter	size_t name_len	211:63:7043:7057	3961475	1	True				
ANR	3961551	ParameterType	size_t		3961475	0					
ANR	3961552	Identifier	name_len		3961475	1					
ANR	3961553	Parameter	char * strval	211:80:7060:7071	3961475	2	True				
ANR	3961554	ParameterType	char *		3961475	0					
ANR	3961555	Identifier	strval		3961475	1					
ANR	3961556	Parameter	size_t strlen	211:94:7074:7086	3961475	3	True				
ANR	3961557	ParameterType	size_t		3961475	0					
ANR	3961558	Identifier	strlen		3961475	1					
ANR	3961559	Parameter	int flags	211:109:7089:7097	3961475	4	True				
ANR	3961560	ParameterType	int		3961475	0					
ANR	3961561	Identifier	flags		3961475	1					
ANR	3961562	Parameter	int module_number	211:120:7100:7116	3961475	5	True				
ANR	3961563	ParameterType	int		3961475	0					
ANR	3961564	Identifier	module_number		3961475	1					
ANR	3961565	CFGEntryNode	ENTRY		3961475		True				
ANR	3961566	CFGExitNode	EXIT		3961475		True				
ANR	3961567	Symbol	c		3961475						
ANR	3961568	Symbol	strval		3961475						
ANR	3961569	Symbol	c . module_number		3961475						
ANR	3961570	Symbol	flags		3961475						
ANR	3961571	Symbol	module_number		3961475						
ANR	3961572	Symbol	& c		3961475						
ANR	3961573	Symbol	& c . value		3961475						
ANR	3961574	Symbol	c . name		3961475						
ANR	3961575	Symbol	strlen		3961475						
ANR	3961576	Symbol	zend_string_init		3961475						
ANR	3961577	Symbol	name		3961475						
ANR	3961578	Symbol	name_len		3961475						
ANR	3961579	Symbol	CONST_PERSISTENT		3961475						
ANR	3961580	Symbol	c . flags		3961475						
ANR	3961581	Function	zend_register_string_constant	223:0:7380:7600							
ANR	3961582	FunctionDef	"zend_register_string_constant (const char * name , size_t name_len , char * strval , int flags , int module_number)"		3961581	0					
ANR	3961583	CompoundStatement		224:0:7503:7600	3961581	0					
ANR	3961584	ExpressionStatement	"zend_register_stringl_constant ( name , name_len , strval , strlen ( strval ) , flags , module_number )"	225:1:7506:7598	3961581	0	True				
ANR	3961585	CallExpression	"zend_register_stringl_constant ( name , name_len , strval , strlen ( strval ) , flags , module_number )"		3961581	0					
ANR	3961586	Callee	zend_register_stringl_constant		3961581	0					
ANR	3961587	Identifier	zend_register_stringl_constant		3961581	0					
ANR	3961588	ArgumentList	name		3961581	1					
ANR	3961589	Argument	name		3961581	0					
ANR	3961590	Identifier	name		3961581	0					
ANR	3961591	Argument	name_len		3961581	1					
ANR	3961592	Identifier	name_len		3961581	0					
ANR	3961593	Argument	strval		3961581	2					
ANR	3961594	Identifier	strval		3961581	0					
ANR	3961595	Argument	strlen ( strval )		3961581	3					
ANR	3961596	CallExpression	strlen ( strval )		3961581	0					
ANR	3961597	Callee	strlen		3961581	0					
ANR	3961598	Identifier	strlen		3961581	0					
ANR	3961599	ArgumentList	strval		3961581	1					
ANR	3961600	Argument	strval		3961581	0					
ANR	3961601	Identifier	strval		3961581	0					
ANR	3961602	Argument	flags		3961581	4					
ANR	3961603	Identifier	flags		3961581	0					
ANR	3961604	Argument	module_number		3961581	5					
ANR	3961605	Identifier	module_number		3961581	0					
ANR	3961606	ReturnType	ZEND_API void		3961581	1					
ANR	3961607	Identifier	zend_register_string_constant		3961581	2					
ANR	3961608	ParameterList	"const char * name , size_t name_len , char * strval , int flags , int module_number"		3961581	3					
ANR	3961609	Parameter	const char * name	223:44:7424:7439	3961581	0	True				
ANR	3961610	ParameterType	const char *		3961581	0					
ANR	3961611	Identifier	name		3961581	1					
ANR	3961612	Parameter	size_t name_len	223:62:7442:7456	3961581	1	True				
ANR	3961613	ParameterType	size_t		3961581	0					
ANR	3961614	Identifier	name_len		3961581	1					
ANR	3961615	Parameter	char * strval	223:79:7459:7470	3961581	2	True				
ANR	3961616	ParameterType	char *		3961581	0					
ANR	3961617	Identifier	strval		3961581	1					
ANR	3961618	Parameter	int flags	223:93:7473:7481	3961581	3	True				
ANR	3961619	ParameterType	int		3961581	0					
ANR	3961620	Identifier	flags		3961581	1					
ANR	3961621	Parameter	int module_number	223:104:7484:7500	3961581	4	True				
ANR	3961622	ParameterType	int		3961581	0					
ANR	3961623	Identifier	module_number		3961581	1					
ANR	3961624	CFGEntryNode	ENTRY		3961581		True				
ANR	3961625	CFGExitNode	EXIT		3961581		True				
ANR	3961626	Symbol	strlen		3961581						
ANR	3961627	Symbol	strval		3961581						
ANR	3961628	Symbol	name		3961581						
ANR	3961629	Symbol	flags		3961581						
ANR	3961630	Symbol	module_number		3961581						
ANR	3961631	Symbol	name_len		3961581						
ANR	3961632	Function	zend_get_special_constant	228:0:7603:8387							
ANR	3961633	FunctionDef	"zend_get_special_constant (const char * name , size_t name_len)"		3961632	0					
ANR	3961634	CompoundStatement		229:0:7686:8387	3961632	0					
ANR	3961635	IdentifierDeclStatement	zend_constant * c ;	230:1:7689:7705	3961632	0	True				
ANR	3961636	IdentifierDecl	* c		3961632	0					
ANR	3961637	IdentifierDeclType	zend_constant *		3961632	0					
ANR	3961638	Identifier	c		3961632	1					
ANR	3961639	Statement	static	231:1:7708:7713	3961632	1	True				
ANR	3961640	IdentifierDeclStatement	"char haltoff [ ] = ""__COMPILER_HALT_OFFSET__"" ;"	231:8:7715:7758	3961632	2	True				
ANR	3961641	IdentifierDecl	"haltoff [ ] = ""__COMPILER_HALT_OFFSET__"""		3961632	0					
ANR	3961642	IdentifierDeclType	char [ ]		3961632	0					
ANR	3961643	Identifier	haltoff		3961632	1					
ANR	3961644	AssignmentExpression	"haltoff [ ] = ""__COMPILER_HALT_OFFSET__"""		3961632	2		=			
ANR	3961645	Identifier	haltoff		3961632	0					
ANR	3961646	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3961632	1					
ANR	3961647	IfStatement	if ( ! EG ( current_execute_data ) )		3961632	3					
ANR	3961648	Condition	! EG ( current_execute_data )	233:5:7766:7790	3961632	0	True				
ANR	3961649	UnaryOperationExpression	! EG ( current_execute_data )		3961632	0					
ANR	3961650	UnaryOperator	!		3961632	0					
ANR	3961651	CallExpression	EG ( current_execute_data )		3961632	1					
ANR	3961652	Callee	EG		3961632	0					
ANR	3961653	Identifier	EG		3961632	0					
ANR	3961654	ArgumentList	current_execute_data		3961632	1					
ANR	3961655	Argument	current_execute_data		3961632	0					
ANR	3961656	Identifier	current_execute_data		3961632	0					
ANR	3961657	CompoundStatement		5:32:106:106	3961632	1					
ANR	3961658	ReturnStatement	return NULL ;	234:2:7797:7808	3961632	0	True				
ANR	3961659	Identifier	NULL		3961632	0					
ANR	3961660	ElseStatement	else		3961632	0					
ANR	3961661	IfStatement	"if ( name_len == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && ! memcmp ( name , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) )"		3961632	0					
ANR	3961662	Condition	"name_len == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && ! memcmp ( name , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"	235:12:7822:7963	3961632	0	True				
ANR	3961663	AndExpression	"name_len == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && ! memcmp ( name , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		3961632	0		&&			
ANR	3961664	EqualityExpression	"name_len == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3961632	0		==			
ANR	3961665	Identifier	name_len		3961632	0					
ANR	3961666	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3961632	1		-			
ANR	3961667	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		3961632	0					
ANR	3961668	Sizeof	sizeof		3961632	0					
ANR	3961669	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3961632	1					
ANR	3961670	PrimaryExpression	1		3961632	1					
ANR	3961671	UnaryOperationExpression	"! memcmp ( name , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		3961632	1					
ANR	3961672	UnaryOperator	!		3961632	0					
ANR	3961673	CallExpression	"memcmp ( name , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		3961632	1					
ANR	3961674	Callee	memcmp		3961632	0					
ANR	3961675	Identifier	memcmp		3961632	0					
ANR	3961676	ArgumentList	name		3961632	1					
ANR	3961677	Argument	name		3961632	0					
ANR	3961678	Identifier	name		3961632	0					
ANR	3961679	Argument	"""__COMPILER_HALT_OFFSET__"""		3961632	1					
ANR	3961680	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3961632	0					
ANR	3961681	Argument	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3961632	2					
ANR	3961682	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3961632	0		-			
ANR	3961683	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		3961632	0					
ANR	3961684	Sizeof	sizeof		3961632	0					
ANR	3961685	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3961632	1					
ANR	3961686	PrimaryExpression	1		3961632	1					
ANR	3961687	CompoundStatement		11:2:333:344	3961632	1					
ANR	3961688	IdentifierDeclStatement	const char * cfilename ;	237:2:7970:7991	3961632	0	True				
ANR	3961689	IdentifierDecl	* cfilename		3961632	0					
ANR	3961690	IdentifierDeclType	const char *		3961632	0					
ANR	3961691	Identifier	cfilename		3961632	1					
ANR	3961692	IdentifierDeclStatement	zend_string * haltname ;	238:2:7995:8016	3961632	1	True				
ANR	3961693	IdentifierDecl	* haltname		3961632	0					
ANR	3961694	IdentifierDeclType	zend_string *		3961632	0					
ANR	3961695	Identifier	haltname		3961632	1					
ANR	3961696	IdentifierDeclStatement	size_t clen ;	239:2:8020:8031	3961632	2	True				
ANR	3961697	IdentifierDecl	clen		3961632	0					
ANR	3961698	IdentifierDeclType	size_t		3961632	0					
ANR	3961699	Identifier	clen		3961632	1					
ANR	3961700	ExpressionStatement	cfilename = zend_get_executed_filename ( )	241:2:8036:8076	3961632	3	True				
ANR	3961701	AssignmentExpression	cfilename = zend_get_executed_filename ( )		3961632	0		=			
ANR	3961702	Identifier	cfilename		3961632	0					
ANR	3961703	CallExpression	zend_get_executed_filename ( )		3961632	1					
ANR	3961704	Callee	zend_get_executed_filename		3961632	0					
ANR	3961705	Identifier	zend_get_executed_filename		3961632	0					
ANR	3961706	ArgumentList			3961632	1					
ANR	3961707	ExpressionStatement	clen = strlen ( cfilename )	242:2:8080:8104	3961632	4	True				
ANR	3961708	AssignmentExpression	clen = strlen ( cfilename )		3961632	0		=			
ANR	3961709	Identifier	clen		3961632	0					
ANR	3961710	CallExpression	strlen ( cfilename )		3961632	1					
ANR	3961711	Callee	strlen		3961632	0					
ANR	3961712	Identifier	strlen		3961632	0					
ANR	3961713	ArgumentList	cfilename		3961632	1					
ANR	3961714	Argument	cfilename		3961632	0					
ANR	3961715	Identifier	cfilename		3961632	0					
ANR	3961716	ExpressionStatement	"haltname = zend_mangle_property_name ( haltoff , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 , cfilename , clen , 0 )"	244:2:8151:8259	3961632	5	True				
ANR	3961717	AssignmentExpression	"haltname = zend_mangle_property_name ( haltoff , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 , cfilename , clen , 0 )"		3961632	0		=			
ANR	3961718	Identifier	haltname		3961632	0					
ANR	3961719	CallExpression	"zend_mangle_property_name ( haltoff , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 , cfilename , clen , 0 )"		3961632	1					
ANR	3961720	Callee	zend_mangle_property_name		3961632	0					
ANR	3961721	Identifier	zend_mangle_property_name		3961632	0					
ANR	3961722	ArgumentList	haltoff		3961632	1					
ANR	3961723	Argument	haltoff		3961632	0					
ANR	3961724	Identifier	haltoff		3961632	0					
ANR	3961725	Argument	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3961632	1					
ANR	3961726	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3961632	0		-			
ANR	3961727	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		3961632	0					
ANR	3961728	Sizeof	sizeof		3961632	0					
ANR	3961729	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3961632	1					
ANR	3961730	PrimaryExpression	1		3961632	1					
ANR	3961731	Argument	cfilename		3961632	2					
ANR	3961732	Identifier	cfilename		3961632	0					
ANR	3961733	Argument	clen		3961632	3					
ANR	3961734	Identifier	clen		3961632	0					
ANR	3961735	Argument	0		3961632	4					
ANR	3961736	PrimaryExpression	0		3961632	0					
ANR	3961737	ExpressionStatement	"c = zend_hash_find_ptr ( EG ( zend_constants ) , haltname )"	246:2:8263:8315	3961632	6	True				
ANR	3961738	AssignmentExpression	"c = zend_hash_find_ptr ( EG ( zend_constants ) , haltname )"		3961632	0		=			
ANR	3961739	Identifier	c		3961632	0					
ANR	3961740	CallExpression	"zend_hash_find_ptr ( EG ( zend_constants ) , haltname )"		3961632	1					
ANR	3961741	Callee	zend_hash_find_ptr		3961632	0					
ANR	3961742	Identifier	zend_hash_find_ptr		3961632	0					
ANR	3961743	ArgumentList	EG ( zend_constants )		3961632	1					
ANR	3961744	Argument	EG ( zend_constants )		3961632	0					
ANR	3961745	CallExpression	EG ( zend_constants )		3961632	0					
ANR	3961746	Callee	EG		3961632	0					
ANR	3961747	Identifier	EG		3961632	0					
ANR	3961748	ArgumentList	zend_constants		3961632	1					
ANR	3961749	Argument	zend_constants		3961632	0					
ANR	3961750	Identifier	zend_constants		3961632	0					
ANR	3961751	Argument	haltname		3961632	1					
ANR	3961752	Identifier	haltname		3961632	0					
ANR	3961753	ExpressionStatement	zend_string_free ( haltname )	247:2:8319:8345	3961632	7	True				
ANR	3961754	CallExpression	zend_string_free ( haltname )		3961632	0					
ANR	3961755	Callee	zend_string_free		3961632	0					
ANR	3961756	Identifier	zend_string_free		3961632	0					
ANR	3961757	ArgumentList	haltname		3961632	1					
ANR	3961758	Argument	haltname		3961632	0					
ANR	3961759	Identifier	haltname		3961632	0					
ANR	3961760	ReturnStatement	return c ;	248:2:8349:8357	3961632	8	True				
ANR	3961761	Identifier	c		3961632	0					
ANR	3961762	ElseStatement	else		3961632	0					
ANR	3961763	CompoundStatement		21:8:680:680	3961632	0					
ANR	3961764	ReturnStatement	return NULL ;	250:2:8371:8382	3961632	0	True				
ANR	3961765	Identifier	NULL		3961632	0					
ANR	3961766	ReturnType	static zend_constant *		3961632	1					
ANR	3961767	Identifier	zend_get_special_constant		3961632	2					
ANR	3961768	ParameterList	"const char * name , size_t name_len"		3961632	3					
ANR	3961769	Parameter	const char * name	228:48:7651:7666	3961632	0	True				
ANR	3961770	ParameterType	const char *		3961632	0					
ANR	3961771	Identifier	name		3961632	1					
ANR	3961772	Parameter	size_t name_len	228:66:7669:7683	3961632	1	True				
ANR	3961773	ParameterType	size_t		3961632	0					
ANR	3961774	Identifier	name_len		3961632	1					
ANR	3961775	CFGEntryNode	ENTRY		3961632		True				
ANR	3961776	CFGExitNode	EXIT		3961632		True				
ANR	3961777	Symbol	cfilename		3961632						
ANR	3961778	Symbol	EG		3961632						
ANR	3961779	Symbol	c		3961632						
ANR	3961780	Symbol	NULL		3961632						
ANR	3961781	Symbol	current_execute_data		3961632						
ANR	3961782	Symbol	zend_mangle_property_name		3961632						
ANR	3961783	Symbol	strlen		3961632						
ANR	3961784	Symbol	memcmp		3961632						
ANR	3961785	Symbol	haltname		3961632						
ANR	3961786	Symbol	zend_constants		3961632						
ANR	3961787	Symbol	zend_get_executed_filename		3961632						
ANR	3961788	Symbol	name		3961632						
ANR	3961789	Symbol	haltoff		3961632						
ANR	3961790	Symbol	name_len		3961632						
ANR	3961791	Symbol	clen		3961632						
ANR	3961792	Symbol	zend_hash_find_ptr		3961632						
ANR	3961793	Function	zend_get_constant_str	255:0:8391:8955							
ANR	3961794	FunctionDef	"zend_get_constant_str (const char * name , size_t name_len)"		3961793	0					
ANR	3961795	CompoundStatement		256:0:8463:8955	3961793	0					
ANR	3961796	IdentifierDeclStatement	zend_constant * c ;	257:1:8466:8482	3961793	0	True				
ANR	3961797	IdentifierDecl	* c		3961793	0					
ANR	3961798	IdentifierDeclType	zend_constant *		3961793	0					
ANR	3961799	Identifier	c		3961793	1					
ANR	3961800	Statement	ALLOCA_FLAG	258:1:8485:8495	3961793	1	True				
ANR	3961801	Statement	(	258:12:8496:8496	3961793	2	True				
ANR	3961802	Statement	use_heap	258:13:8497:8504	3961793	3	True				
ANR	3961803	Statement	)	258:21:8505:8505	3961793	4	True				
ANR	3961804	IfStatement	"if ( ( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , name , name_len ) ) == NULL )"		3961793	5					
ANR	3961805	Condition	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , name , name_len ) ) == NULL"	260:5:8513:8584	3961793	0	True				
ANR	3961806	EqualityExpression	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , name , name_len ) ) == NULL"		3961793	0		==			
ANR	3961807	AssignmentExpression	"c = zend_hash_str_find_ptr ( EG ( zend_constants ) , name , name_len )"		3961793	0		=			
ANR	3961808	Identifier	c		3961793	0					
ANR	3961809	CallExpression	"zend_hash_str_find_ptr ( EG ( zend_constants ) , name , name_len )"		3961793	1					
ANR	3961810	Callee	zend_hash_str_find_ptr		3961793	0					
ANR	3961811	Identifier	zend_hash_str_find_ptr		3961793	0					
ANR	3961812	ArgumentList	EG ( zend_constants )		3961793	1					
ANR	3961813	Argument	EG ( zend_constants )		3961793	0					
ANR	3961814	CallExpression	EG ( zend_constants )		3961793	0					
ANR	3961815	Callee	EG		3961793	0					
ANR	3961816	Identifier	EG		3961793	0					
ANR	3961817	ArgumentList	zend_constants		3961793	1					
ANR	3961818	Argument	zend_constants		3961793	0					
ANR	3961819	Identifier	zend_constants		3961793	0					
ANR	3961820	Argument	name		3961793	1					
ANR	3961821	Identifier	name		3961793	0					
ANR	3961822	Argument	name_len		3961793	2					
ANR	3961823	Identifier	name_len		3961793	0					
ANR	3961824	Identifier	NULL		3961793	1					
ANR	3961825	CompoundStatement		6:2:127:175	3961793	1					
ANR	3961826	IdentifierDeclStatement	"char * lcname = do_alloca ( name_len + 1 , use_heap ) ;"	261:2:8591:8639	3961793	0	True				
ANR	3961827	IdentifierDecl	"* lcname = do_alloca ( name_len + 1 , use_heap )"		3961793	0					
ANR	3961828	IdentifierDeclType	char *		3961793	0					
ANR	3961829	Identifier	lcname		3961793	1					
ANR	3961830	AssignmentExpression	"* lcname = do_alloca ( name_len + 1 , use_heap )"		3961793	2		=			
ANR	3961831	Identifier	lcname		3961793	0					
ANR	3961832	CallExpression	"do_alloca ( name_len + 1 , use_heap )"		3961793	1					
ANR	3961833	Callee	do_alloca		3961793	0					
ANR	3961834	Identifier	do_alloca		3961793	0					
ANR	3961835	ArgumentList	name_len + 1		3961793	1					
ANR	3961836	Argument	name_len + 1		3961793	0					
ANR	3961837	AdditiveExpression	name_len + 1		3961793	0		+			
ANR	3961838	Identifier	name_len		3961793	0					
ANR	3961839	PrimaryExpression	1		3961793	1					
ANR	3961840	Argument	use_heap		3961793	1					
ANR	3961841	Identifier	use_heap		3961793	0					
ANR	3961842	ExpressionStatement	"zend_str_tolower_copy ( lcname , name , name_len )"	262:2:8643:8688	3961793	1	True				
ANR	3961843	CallExpression	"zend_str_tolower_copy ( lcname , name , name_len )"		3961793	0					
ANR	3961844	Callee	zend_str_tolower_copy		3961793	0					
ANR	3961845	Identifier	zend_str_tolower_copy		3961793	0					
ANR	3961846	ArgumentList	lcname		3961793	1					
ANR	3961847	Argument	lcname		3961793	0					
ANR	3961848	Identifier	lcname		3961793	0					
ANR	3961849	Argument	name		3961793	1					
ANR	3961850	Identifier	name		3961793	0					
ANR	3961851	Argument	name_len		3961793	2					
ANR	3961852	Identifier	name_len		3961793	0					
ANR	3961853	IfStatement	"if ( ( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , name_len ) ) != NULL )"		3961793	2					
ANR	3961854	Condition	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , name_len ) ) != NULL"	263:6:8696:8769	3961793	0	True				
ANR	3961855	EqualityExpression	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , name_len ) ) != NULL"		3961793	0		!=			
ANR	3961856	AssignmentExpression	"c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , name_len )"		3961793	0		=			
ANR	3961857	Identifier	c		3961793	0					
ANR	3961858	CallExpression	"zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , name_len )"		3961793	1					
ANR	3961859	Callee	zend_hash_str_find_ptr		3961793	0					
ANR	3961860	Identifier	zend_hash_str_find_ptr		3961793	0					
ANR	3961861	ArgumentList	EG ( zend_constants )		3961793	1					
ANR	3961862	Argument	EG ( zend_constants )		3961793	0					
ANR	3961863	CallExpression	EG ( zend_constants )		3961793	0					
ANR	3961864	Callee	EG		3961793	0					
ANR	3961865	Identifier	EG		3961793	0					
ANR	3961866	ArgumentList	zend_constants		3961793	1					
ANR	3961867	Argument	zend_constants		3961793	0					
ANR	3961868	Identifier	zend_constants		3961793	0					
ANR	3961869	Argument	lcname		3961793	1					
ANR	3961870	Identifier	lcname		3961793	0					
ANR	3961871	Argument	name_len		3961793	2					
ANR	3961872	Identifier	name_len		3961793	0					
ANR	3961873	Identifier	NULL		3961793	1					
ANR	3961874	CompoundStatement		8:82:308:308	3961793	1					
ANR	3961875	IfStatement	if ( c -> flags & CONST_CS )		3961793	0					
ANR	3961876	Condition	c -> flags & CONST_CS	264:7:8781:8799	3961793	0	True				
ANR	3961877	BitAndExpression	c -> flags & CONST_CS		3961793	0		&			
ANR	3961878	PtrMemberAccess	c -> flags		3961793	0					
ANR	3961879	Identifier	c		3961793	0					
ANR	3961880	Identifier	flags		3961793	1					
ANR	3961881	Identifier	CONST_CS		3961793	1					
ANR	3961882	CompoundStatement		9:28:338:338	3961793	1					
ANR	3961883	ExpressionStatement	c = NULL	265:4:8808:8816	3961793	0	True				
ANR	3961884	AssignmentExpression	c = NULL		3961793	0		=			
ANR	3961885	Identifier	c		3961793	0					
ANR	3961886	Identifier	NULL		3961793	1					
ANR	3961887	ElseStatement	else		3961793	0					
ANR	3961888	CompoundStatement		12:9:368:368	3961793	0					
ANR	3961889	ExpressionStatement	"c = zend_get_special_constant ( name , name_len )"	268:3:8837:8882	3961793	0	True				
ANR	3961890	AssignmentExpression	"c = zend_get_special_constant ( name , name_len )"		3961793	0		=			
ANR	3961891	Identifier	c		3961793	0					
ANR	3961892	CallExpression	"zend_get_special_constant ( name , name_len )"		3961793	1					
ANR	3961893	Callee	zend_get_special_constant		3961793	0					
ANR	3961894	Identifier	zend_get_special_constant		3961793	0					
ANR	3961895	ArgumentList	name		3961793	1					
ANR	3961896	Argument	name		3961793	0					
ANR	3961897	Identifier	name		3961793	0					
ANR	3961898	Argument	name_len		3961793	1					
ANR	3961899	Identifier	name_len		3961793	0					
ANR	3961900	ExpressionStatement	"free_alloca ( lcname , use_heap )"	270:2:8890:8919	3961793	3	True				
ANR	3961901	CallExpression	"free_alloca ( lcname , use_heap )"		3961793	0					
ANR	3961902	Callee	free_alloca		3961793	0					
ANR	3961903	Identifier	free_alloca		3961793	0					
ANR	3961904	ArgumentList	lcname		3961793	1					
ANR	3961905	Argument	lcname		3961793	0					
ANR	3961906	Identifier	lcname		3961793	0					
ANR	3961907	Argument	use_heap		3961793	1					
ANR	3961908	Identifier	use_heap		3961793	0					
ANR	3961909	ReturnStatement	return c ? & c -> value : NULL ;	273:1:8926:8953	3961793	6	True				
ANR	3961910	ConditionalExpression	c ? & c -> value : NULL		3961793	0					
ANR	3961911	Condition	c		3961793	0					
ANR	3961912	Identifier	c		3961793	0					
ANR	3961913	UnaryOperationExpression	& c -> value		3961793	1					
ANR	3961914	UnaryOperator	&		3961793	0					
ANR	3961915	PtrMemberAccess	c -> value		3961793	1					
ANR	3961916	Identifier	c		3961793	0					
ANR	3961917	Identifier	value		3961793	1					
ANR	3961918	Identifier	NULL		3961793	2					
ANR	3961919	ReturnType	ZEND_API zval *		3961793	1					
ANR	3961920	Identifier	zend_get_constant_str		3961793	2					
ANR	3961921	ParameterList	"const char * name , size_t name_len"		3961793	3					
ANR	3961922	Parameter	const char * name	255:37:8428:8443	3961793	0	True				
ANR	3961923	ParameterType	const char *		3961793	0					
ANR	3961924	Identifier	name		3961793	1					
ANR	3961925	Parameter	size_t name_len	255:55:8446:8460	3961793	1	True				
ANR	3961926	ParameterType	size_t		3961793	0					
ANR	3961927	Identifier	name_len		3961793	1					
ANR	3961928	CFGEntryNode	ENTRY		3961793		True				
ANR	3961929	CFGExitNode	EXIT		3961793		True				
ANR	3961930	Symbol	EG		3961793						
ANR	3961931	Symbol	CONST_CS		3961793						
ANR	3961932	Symbol	c		3961793						
ANR	3961933	Symbol	NULL		3961793						
ANR	3961934	Symbol	c -> flags		3961793						
ANR	3961935	Symbol	* c		3961793						
ANR	3961936	Symbol	& c -> value		3961793						
ANR	3961937	Symbol	lcname		3961793						
ANR	3961938	Symbol	zend_constants		3961793						
ANR	3961939	Symbol	name		3961793						
ANR	3961940	Symbol	zend_hash_str_find_ptr		3961793						
ANR	3961941	Symbol	do_alloca		3961793						
ANR	3961942	Symbol	name_len		3961793						
ANR	3961943	Symbol	zend_get_special_constant		3961793						
ANR	3961944	Symbol	use_heap		3961793						
ANR	3961945	Function	zend_get_constant	276:0:8958:9532							
ANR	3961946	FunctionDef	zend_get_constant (zend_string * name)		3961945	0					
ANR	3961947	CompoundStatement		277:0:9010:9532	3961945	0					
ANR	3961948	IdentifierDeclStatement	zend_constant * c ;	278:1:9013:9029	3961945	0	True				
ANR	3961949	IdentifierDecl	* c		3961945	0					
ANR	3961950	IdentifierDeclType	zend_constant *		3961945	0					
ANR	3961951	Identifier	c		3961945	1					
ANR	3961952	Statement	ALLOCA_FLAG	279:1:9032:9042	3961945	1	True				
ANR	3961953	Statement	(	279:12:9043:9043	3961945	2	True				
ANR	3961954	Statement	use_heap	279:13:9044:9051	3961945	3	True				
ANR	3961955	Statement	)	279:21:9052:9052	3961945	4	True				
ANR	3961956	IfStatement	"if ( ( c = zend_hash_find_ptr ( EG ( zend_constants ) , name ) ) == NULL )"		3961945	5					
ANR	3961957	Condition	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , name ) ) == NULL"	281:5:9060:9117	3961945	0	True				
ANR	3961958	EqualityExpression	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , name ) ) == NULL"		3961945	0		==			
ANR	3961959	AssignmentExpression	"c = zend_hash_find_ptr ( EG ( zend_constants ) , name )"		3961945	0		=			
ANR	3961960	Identifier	c		3961945	0					
ANR	3961961	CallExpression	"zend_hash_find_ptr ( EG ( zend_constants ) , name )"		3961945	1					
ANR	3961962	Callee	zend_hash_find_ptr		3961945	0					
ANR	3961963	Identifier	zend_hash_find_ptr		3961945	0					
ANR	3961964	ArgumentList	EG ( zend_constants )		3961945	1					
ANR	3961965	Argument	EG ( zend_constants )		3961945	0					
ANR	3961966	CallExpression	EG ( zend_constants )		3961945	0					
ANR	3961967	Callee	EG		3961945	0					
ANR	3961968	Identifier	EG		3961945	0					
ANR	3961969	ArgumentList	zend_constants		3961945	1					
ANR	3961970	Argument	zend_constants		3961945	0					
ANR	3961971	Identifier	zend_constants		3961945	0					
ANR	3961972	Argument	name		3961945	1					
ANR	3961973	Identifier	name		3961945	0					
ANR	3961974	Identifier	NULL		3961945	1					
ANR	3961975	CompoundStatement		6:2:113:167	3961945	1					
ANR	3961976	IdentifierDeclStatement	"char * lcname = do_alloca ( ZSTR_LEN ( name ) + 1 , use_heap ) ;"	282:2:9124:9178	3961945	0	True				
ANR	3961977	IdentifierDecl	"* lcname = do_alloca ( ZSTR_LEN ( name ) + 1 , use_heap )"		3961945	0					
ANR	3961978	IdentifierDeclType	char *		3961945	0					
ANR	3961979	Identifier	lcname		3961945	1					
ANR	3961980	AssignmentExpression	"* lcname = do_alloca ( ZSTR_LEN ( name ) + 1 , use_heap )"		3961945	2		=			
ANR	3961981	Identifier	lcname		3961945	0					
ANR	3961982	CallExpression	"do_alloca ( ZSTR_LEN ( name ) + 1 , use_heap )"		3961945	1					
ANR	3961983	Callee	do_alloca		3961945	0					
ANR	3961984	Identifier	do_alloca		3961945	0					
ANR	3961985	ArgumentList	ZSTR_LEN ( name ) + 1		3961945	1					
ANR	3961986	Argument	ZSTR_LEN ( name ) + 1		3961945	0					
ANR	3961987	AdditiveExpression	ZSTR_LEN ( name ) + 1		3961945	0		+			
ANR	3961988	CallExpression	ZSTR_LEN ( name )		3961945	0					
ANR	3961989	Callee	ZSTR_LEN		3961945	0					
ANR	3961990	Identifier	ZSTR_LEN		3961945	0					
ANR	3961991	ArgumentList	name		3961945	1					
ANR	3961992	Argument	name		3961945	0					
ANR	3961993	Identifier	name		3961945	0					
ANR	3961994	PrimaryExpression	1		3961945	1					
ANR	3961995	Argument	use_heap		3961945	1					
ANR	3961996	Identifier	use_heap		3961945	0					
ANR	3961997	ExpressionStatement	"zend_str_tolower_copy ( lcname , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"	283:2:9182:9243	3961945	1	True				
ANR	3961998	CallExpression	"zend_str_tolower_copy ( lcname , ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3961945	0					
ANR	3961999	Callee	zend_str_tolower_copy		3961945	0					
ANR	3962000	Identifier	zend_str_tolower_copy		3961945	0					
ANR	3962001	ArgumentList	lcname		3961945	1					
ANR	3962002	Argument	lcname		3961945	0					
ANR	3962003	Identifier	lcname		3961945	0					
ANR	3962004	Argument	ZSTR_VAL ( name )		3961945	1					
ANR	3962005	CallExpression	ZSTR_VAL ( name )		3961945	0					
ANR	3962006	Callee	ZSTR_VAL		3961945	0					
ANR	3962007	Identifier	ZSTR_VAL		3961945	0					
ANR	3962008	ArgumentList	name		3961945	1					
ANR	3962009	Argument	name		3961945	0					
ANR	3962010	Identifier	name		3961945	0					
ANR	3962011	Argument	ZSTR_LEN ( name )		3961945	2					
ANR	3962012	CallExpression	ZSTR_LEN ( name )		3961945	0					
ANR	3962013	Callee	ZSTR_LEN		3961945	0					
ANR	3962014	Identifier	ZSTR_LEN		3961945	0					
ANR	3962015	ArgumentList	name		3961945	1					
ANR	3962016	Argument	name		3961945	0					
ANR	3962017	Identifier	name		3961945	0					
ANR	3962018	IfStatement	"if ( ( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , ZSTR_LEN ( name ) ) ) != NULL )"		3961945	2					
ANR	3962019	Condition	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , ZSTR_LEN ( name ) ) ) != NULL"	284:6:9251:9330	3961945	0	True				
ANR	3962020	EqualityExpression	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , ZSTR_LEN ( name ) ) ) != NULL"		3961945	0		!=			
ANR	3962021	AssignmentExpression	"c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , ZSTR_LEN ( name ) )"		3961945	0		=			
ANR	3962022	Identifier	c		3961945	0					
ANR	3962023	CallExpression	"zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , ZSTR_LEN ( name ) )"		3961945	1					
ANR	3962024	Callee	zend_hash_str_find_ptr		3961945	0					
ANR	3962025	Identifier	zend_hash_str_find_ptr		3961945	0					
ANR	3962026	ArgumentList	EG ( zend_constants )		3961945	1					
ANR	3962027	Argument	EG ( zend_constants )		3961945	0					
ANR	3962028	CallExpression	EG ( zend_constants )		3961945	0					
ANR	3962029	Callee	EG		3961945	0					
ANR	3962030	Identifier	EG		3961945	0					
ANR	3962031	ArgumentList	zend_constants		3961945	1					
ANR	3962032	Argument	zend_constants		3961945	0					
ANR	3962033	Identifier	zend_constants		3961945	0					
ANR	3962034	Argument	lcname		3961945	1					
ANR	3962035	Identifier	lcname		3961945	0					
ANR	3962036	Argument	ZSTR_LEN ( name )		3961945	2					
ANR	3962037	CallExpression	ZSTR_LEN ( name )		3961945	0					
ANR	3962038	Callee	ZSTR_LEN		3961945	0					
ANR	3962039	Identifier	ZSTR_LEN		3961945	0					
ANR	3962040	ArgumentList	name		3961945	1					
ANR	3962041	Argument	name		3961945	0					
ANR	3962042	Identifier	name		3961945	0					
ANR	3962043	Identifier	NULL		3961945	1					
ANR	3962044	CompoundStatement		8:88:322:322	3961945	1					
ANR	3962045	IfStatement	if ( c -> flags & CONST_CS )		3961945	0					
ANR	3962046	Condition	c -> flags & CONST_CS	285:7:9342:9360	3961945	0	True				
ANR	3962047	BitAndExpression	c -> flags & CONST_CS		3961945	0		&			
ANR	3962048	PtrMemberAccess	c -> flags		3961945	0					
ANR	3962049	Identifier	c		3961945	0					
ANR	3962050	Identifier	flags		3961945	1					
ANR	3962051	Identifier	CONST_CS		3961945	1					
ANR	3962052	CompoundStatement		9:28:352:352	3961945	1					
ANR	3962053	ExpressionStatement	c = NULL	286:4:9369:9377	3961945	0	True				
ANR	3962054	AssignmentExpression	c = NULL		3961945	0		=			
ANR	3962055	Identifier	c		3961945	0					
ANR	3962056	Identifier	NULL		3961945	1					
ANR	3962057	ElseStatement	else		3961945	0					
ANR	3962058	CompoundStatement		12:9:382:382	3961945	0					
ANR	3962059	ExpressionStatement	"c = zend_get_special_constant ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"	289:3:9398:9459	3961945	0	True				
ANR	3962060	AssignmentExpression	"c = zend_get_special_constant ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3961945	0		=			
ANR	3962061	Identifier	c		3961945	0					
ANR	3962062	CallExpression	"zend_get_special_constant ( ZSTR_VAL ( name ) , ZSTR_LEN ( name ) )"		3961945	1					
ANR	3962063	Callee	zend_get_special_constant		3961945	0					
ANR	3962064	Identifier	zend_get_special_constant		3961945	0					
ANR	3962065	ArgumentList	ZSTR_VAL ( name )		3961945	1					
ANR	3962066	Argument	ZSTR_VAL ( name )		3961945	0					
ANR	3962067	CallExpression	ZSTR_VAL ( name )		3961945	0					
ANR	3962068	Callee	ZSTR_VAL		3961945	0					
ANR	3962069	Identifier	ZSTR_VAL		3961945	0					
ANR	3962070	ArgumentList	name		3961945	1					
ANR	3962071	Argument	name		3961945	0					
ANR	3962072	Identifier	name		3961945	0					
ANR	3962073	Argument	ZSTR_LEN ( name )		3961945	1					
ANR	3962074	CallExpression	ZSTR_LEN ( name )		3961945	0					
ANR	3962075	Callee	ZSTR_LEN		3961945	0					
ANR	3962076	Identifier	ZSTR_LEN		3961945	0					
ANR	3962077	ArgumentList	name		3961945	1					
ANR	3962078	Argument	name		3961945	0					
ANR	3962079	Identifier	name		3961945	0					
ANR	3962080	ExpressionStatement	"free_alloca ( lcname , use_heap )"	291:2:9467:9496	3961945	3	True				
ANR	3962081	CallExpression	"free_alloca ( lcname , use_heap )"		3961945	0					
ANR	3962082	Callee	free_alloca		3961945	0					
ANR	3962083	Identifier	free_alloca		3961945	0					
ANR	3962084	ArgumentList	lcname		3961945	1					
ANR	3962085	Argument	lcname		3961945	0					
ANR	3962086	Identifier	lcname		3961945	0					
ANR	3962087	Argument	use_heap		3961945	1					
ANR	3962088	Identifier	use_heap		3961945	0					
ANR	3962089	ReturnStatement	return c ? & c -> value : NULL ;	294:1:9503:9530	3961945	6	True				
ANR	3962090	ConditionalExpression	c ? & c -> value : NULL		3961945	0					
ANR	3962091	Condition	c		3961945	0					
ANR	3962092	Identifier	c		3961945	0					
ANR	3962093	UnaryOperationExpression	& c -> value		3961945	1					
ANR	3962094	UnaryOperator	&		3961945	0					
ANR	3962095	PtrMemberAccess	c -> value		3961945	1					
ANR	3962096	Identifier	c		3961945	0					
ANR	3962097	Identifier	value		3961945	1					
ANR	3962098	Identifier	NULL		3961945	2					
ANR	3962099	ReturnType	ZEND_API zval *		3961945	1					
ANR	3962100	Identifier	zend_get_constant		3961945	2					
ANR	3962101	ParameterList	zend_string * name		3961945	3					
ANR	3962102	Parameter	zend_string * name	276:33:8991:9007	3961945	0	True				
ANR	3962103	ParameterType	zend_string *		3961945	0					
ANR	3962104	Identifier	name		3961945	1					
ANR	3962105	CFGEntryNode	ENTRY		3961945		True				
ANR	3962106	CFGExitNode	EXIT		3961945		True				
ANR	3962107	Symbol	EG		3961945						
ANR	3962108	Symbol	CONST_CS		3961945						
ANR	3962109	Symbol	c		3961945						
ANR	3962110	Symbol	NULL		3961945						
ANR	3962111	Symbol	c -> flags		3961945						
ANR	3962112	Symbol	* c		3961945						
ANR	3962113	Symbol	ZSTR_VAL		3961945						
ANR	3962114	Symbol	& c -> value		3961945						
ANR	3962115	Symbol	lcname		3961945						
ANR	3962116	Symbol	zend_constants		3961945						
ANR	3962117	Symbol	name		3961945						
ANR	3962118	Symbol	do_alloca		3961945						
ANR	3962119	Symbol	ZSTR_LEN		3961945						
ANR	3962120	Symbol	zend_hash_str_find_ptr		3961945						
ANR	3962121	Symbol	zend_get_special_constant		3961945						
ANR	3962122	Symbol	zend_hash_find_ptr		3961945						
ANR	3962123	Symbol	use_heap		3961945						
ANR	3962124	Function	zend_get_constant_ex	297:0:9535:13657							
ANR	3962125	FunctionDef	"zend_get_constant_ex (zend_string * cname , zend_class_entry * scope , zend_ulong flags)"		3962124	0					
ANR	3962126	CompoundStatement		298:0:9634:13657	3962124	0					
ANR	3962127	IdentifierDeclStatement	zend_constant * c ;	299:1:9637:9653	3962124	0	True				
ANR	3962128	IdentifierDecl	* c		3962124	0					
ANR	3962129	IdentifierDeclType	zend_constant *		3962124	0					
ANR	3962130	Identifier	c		3962124	1					
ANR	3962131	IdentifierDeclStatement	const char * colon ;	300:1:9656:9673	3962124	1	True				
ANR	3962132	IdentifierDecl	* colon		3962124	0					
ANR	3962133	IdentifierDeclType	const char *		3962124	0					
ANR	3962134	Identifier	colon		3962124	1					
ANR	3962135	IdentifierDeclStatement	zend_class_entry * ce = NULL ;	301:1:9676:9703	3962124	2	True				
ANR	3962136	IdentifierDecl	* ce = NULL		3962124	0					
ANR	3962137	IdentifierDeclType	zend_class_entry *		3962124	0					
ANR	3962138	Identifier	ce		3962124	1					
ANR	3962139	AssignmentExpression	* ce = NULL		3962124	2		=			
ANR	3962140	Identifier	NULL		3962124	0					
ANR	3962141	Identifier	NULL		3962124	1					
ANR	3962142	IdentifierDeclStatement	zend_string * class_name ;	302:1:9706:9729	3962124	3	True				
ANR	3962143	IdentifierDecl	* class_name		3962124	0					
ANR	3962144	IdentifierDeclType	zend_string *		3962124	0					
ANR	3962145	Identifier	class_name		3962124	1					
ANR	3962146	IdentifierDeclStatement	const char * name = ZSTR_VAL ( cname ) ;	303:1:9732:9766	3962124	4	True				
ANR	3962147	IdentifierDecl	* name = ZSTR_VAL ( cname )		3962124	0					
ANR	3962148	IdentifierDeclType	const char *		3962124	0					
ANR	3962149	Identifier	name		3962124	1					
ANR	3962150	AssignmentExpression	* name = ZSTR_VAL ( cname )		3962124	2		=			
ANR	3962151	Identifier	name		3962124	0					
ANR	3962152	CallExpression	ZSTR_VAL ( cname )		3962124	1					
ANR	3962153	Callee	ZSTR_VAL		3962124	0					
ANR	3962154	Identifier	ZSTR_VAL		3962124	0					
ANR	3962155	ArgumentList	cname		3962124	1					
ANR	3962156	Argument	cname		3962124	0					
ANR	3962157	Identifier	cname		3962124	0					
ANR	3962158	IdentifierDeclStatement	size_t name_len = ZSTR_LEN ( cname ) ;	304:1:9769:9802	3962124	5	True				
ANR	3962159	IdentifierDecl	name_len = ZSTR_LEN ( cname )		3962124	0					
ANR	3962160	IdentifierDeclType	size_t		3962124	0					
ANR	3962161	Identifier	name_len		3962124	1					
ANR	3962162	AssignmentExpression	name_len = ZSTR_LEN ( cname )		3962124	2		=			
ANR	3962163	Identifier	name_len		3962124	0					
ANR	3962164	CallExpression	ZSTR_LEN ( cname )		3962124	1					
ANR	3962165	Callee	ZSTR_LEN		3962124	0					
ANR	3962166	Identifier	ZSTR_LEN		3962124	0					
ANR	3962167	ArgumentList	cname		3962124	1					
ANR	3962168	Argument	cname		3962124	0					
ANR	3962169	Identifier	cname		3962124	0					
ANR	3962170	IfStatement	if ( name [ 0 ] == '\\\\' )		3962124	6					
ANR	3962171	Condition	name [ 0 ] == '\\\\'	307:5:9833:9847	3962124	0	True				
ANR	3962172	EqualityExpression	name [ 0 ] == '\\\\'		3962124	0		==			
ANR	3962173	ArrayIndexing	name [ 0 ]		3962124	0					
ANR	3962174	Identifier	name		3962124	0					
ANR	3962175	PrimaryExpression	0		3962124	1					
ANR	3962176	PrimaryExpression	'\\\\'		3962124	1					
ANR	3962177	CompoundStatement		10:22:215:215	3962124	1					
ANR	3962178	ExpressionStatement	name += 1	308:2:9854:9863	3962124	0	True				
ANR	3962179	AssignmentExpression	name += 1		3962124	0		+=			
ANR	3962180	Identifier	name		3962124	0					
ANR	3962181	PrimaryExpression	1		3962124	1					
ANR	3962182	ExpressionStatement	name_len -= 1	309:2:9867:9880	3962124	1	True				
ANR	3962183	AssignmentExpression	name_len -= 1		3962124	0		-=			
ANR	3962184	Identifier	name_len		3962124	0					
ANR	3962185	PrimaryExpression	1		3962124	1					
ANR	3962186	ExpressionStatement	cname = NULL	310:2:9884:9896	3962124	2	True				
ANR	3962187	AssignmentExpression	cname = NULL		3962124	0		=			
ANR	3962188	Identifier	cname		3962124	0					
ANR	3962189	Identifier	NULL		3962124	1					
ANR	3962190	IfStatement	"if ( ( colon = zend_memrchr ( name , ':' , name_len ) ) && colon > name && ( * ( colon - 1 ) == ':' ) )"		3962124	7					
ANR	3962191	Condition	"( colon = zend_memrchr ( name , ':' , name_len ) ) && colon > name && ( * ( colon - 1 ) == ':' )"	313:5:9907:9995	3962124	0	True				
ANR	3962192	AndExpression	"( colon = zend_memrchr ( name , ':' , name_len ) ) && colon > name && ( * ( colon - 1 ) == ':' )"		3962124	0		&&			
ANR	3962193	AssignmentExpression	"colon = zend_memrchr ( name , ':' , name_len )"		3962124	0		=			
ANR	3962194	Identifier	colon		3962124	0					
ANR	3962195	CallExpression	"zend_memrchr ( name , ':' , name_len )"		3962124	1					
ANR	3962196	Callee	zend_memrchr		3962124	0					
ANR	3962197	Identifier	zend_memrchr		3962124	0					
ANR	3962198	ArgumentList	name		3962124	1					
ANR	3962199	Argument	name		3962124	0					
ANR	3962200	Identifier	name		3962124	0					
ANR	3962201	Argument	':'		3962124	1					
ANR	3962202	PrimaryExpression	':'		3962124	0					
ANR	3962203	Argument	name_len		3962124	2					
ANR	3962204	Identifier	name_len		3962124	0					
ANR	3962205	AndExpression	colon > name && ( * ( colon - 1 ) == ':' )		3962124	1		&&			
ANR	3962206	RelationalExpression	colon > name		3962124	0		>			
ANR	3962207	Identifier	colon		3962124	0					
ANR	3962208	Identifier	name		3962124	1					
ANR	3962209	EqualityExpression	* ( colon - 1 ) == ':'		3962124	1		==			
ANR	3962210	UnaryOperationExpression	* ( colon - 1 )		3962124	0					
ANR	3962211	UnaryOperator	*		3962124	0					
ANR	3962212	AdditiveExpression	colon - 1		3962124	1		-			
ANR	3962213	Identifier	colon		3962124	0					
ANR	3962214	PrimaryExpression	1		3962124	1					
ANR	3962215	PrimaryExpression	':'		3962124	1					
ANR	3962216	CompoundStatement		22:2:560:585	3962124	1					
ANR	3962217	IdentifierDeclStatement	int class_name_len = colon - name - 1 ;	315:2:10002:10039	3962124	0	True				
ANR	3962218	IdentifierDecl	class_name_len = colon - name - 1		3962124	0					
ANR	3962219	IdentifierDeclType	int		3962124	0					
ANR	3962220	Identifier	class_name_len		3962124	1					
ANR	3962221	AssignmentExpression	class_name_len = colon - name - 1		3962124	2		=			
ANR	3962222	Identifier	class_name_len		3962124	0					
ANR	3962223	AdditiveExpression	colon - name - 1		3962124	1		-			
ANR	3962224	Identifier	colon		3962124	0					
ANR	3962225	AdditiveExpression	name - 1		3962124	1		-			
ANR	3962226	Identifier	name		3962124	0					
ANR	3962227	PrimaryExpression	1		3962124	1					
ANR	3962228	IdentifierDeclStatement	size_t const_name_len = name_len - class_name_len - 2 ;	316:2:10043:10096	3962124	1	True				
ANR	3962229	IdentifierDecl	const_name_len = name_len - class_name_len - 2		3962124	0					
ANR	3962230	IdentifierDeclType	size_t		3962124	0					
ANR	3962231	Identifier	const_name_len		3962124	1					
ANR	3962232	AssignmentExpression	const_name_len = name_len - class_name_len - 2		3962124	2		=			
ANR	3962233	Identifier	const_name_len		3962124	0					
ANR	3962234	AdditiveExpression	name_len - class_name_len - 2		3962124	1		-			
ANR	3962235	Identifier	name_len		3962124	0					
ANR	3962236	AdditiveExpression	class_name_len - 2		3962124	1		-			
ANR	3962237	Identifier	class_name_len		3962124	0					
ANR	3962238	PrimaryExpression	2		3962124	1					
ANR	3962239	IdentifierDeclStatement	"zend_string * constant_name = zend_string_init ( colon + 1 , const_name_len , 0 ) ;"	317:2:10100:10175	3962124	2	True				
ANR	3962240	IdentifierDecl	"* constant_name = zend_string_init ( colon + 1 , const_name_len , 0 )"		3962124	0					
ANR	3962241	IdentifierDeclType	zend_string *		3962124	0					
ANR	3962242	Identifier	constant_name		3962124	1					
ANR	3962243	AssignmentExpression	"* constant_name = zend_string_init ( colon + 1 , const_name_len , 0 )"		3962124	2		=			
ANR	3962244	Identifier	constant_name		3962124	0					
ANR	3962245	CallExpression	"zend_string_init ( colon + 1 , const_name_len , 0 )"		3962124	1					
ANR	3962246	Callee	zend_string_init		3962124	0					
ANR	3962247	Identifier	zend_string_init		3962124	0					
ANR	3962248	ArgumentList	colon + 1		3962124	1					
ANR	3962249	Argument	colon + 1		3962124	0					
ANR	3962250	AdditiveExpression	colon + 1		3962124	0		+			
ANR	3962251	Identifier	colon		3962124	0					
ANR	3962252	PrimaryExpression	1		3962124	1					
ANR	3962253	Argument	const_name_len		3962124	1					
ANR	3962254	Identifier	const_name_len		3962124	0					
ANR	3962255	Argument	0		3962124	2					
ANR	3962256	PrimaryExpression	0		3962124	0					
ANR	3962257	IdentifierDeclStatement	char * lcname ;	318:2:10179:10191	3962124	3	True				
ANR	3962258	IdentifierDecl	* lcname		3962124	0					
ANR	3962259	IdentifierDeclType	char *		3962124	0					
ANR	3962260	Identifier	lcname		3962124	1					
ANR	3962261	IdentifierDeclStatement	zval * ret_constant = NULL ;	319:2:10195:10220	3962124	4	True				
ANR	3962262	IdentifierDecl	* ret_constant = NULL		3962124	0					
ANR	3962263	IdentifierDeclType	zval *		3962124	0					
ANR	3962264	Identifier	ret_constant		3962124	1					
ANR	3962265	AssignmentExpression	* ret_constant = NULL		3962124	2		=			
ANR	3962266	Identifier	NULL		3962124	0					
ANR	3962267	Identifier	NULL		3962124	1					
ANR	3962268	Statement	ALLOCA_FLAG	320:2:10224:10234	3962124	5	True				
ANR	3962269	ExpressionStatement	"( use_heap ) class_name = zend_string_init ( name , class_name_len , 0 )"	320:13:10235:10303	3962124	6	True				
ANR	3962270	AssignmentExpression	"( use_heap ) class_name = zend_string_init ( name , class_name_len , 0 )"		3962124	0		=			
ANR	3962271	CastExpression	( use_heap ) class_name		3962124	0					
ANR	3962272	CastTarget	use_heap		3962124	0					
ANR	3962273	Identifier	class_name		3962124	1					
ANR	3962274	CallExpression	"zend_string_init ( name , class_name_len , 0 )"		3962124	1					
ANR	3962275	Callee	zend_string_init		3962124	0					
ANR	3962276	Identifier	zend_string_init		3962124	0					
ANR	3962277	ArgumentList	name		3962124	1					
ANR	3962278	Argument	name		3962124	0					
ANR	3962279	Identifier	name		3962124	0					
ANR	3962280	Argument	class_name_len		3962124	1					
ANR	3962281	Identifier	class_name_len		3962124	0					
ANR	3962282	Argument	0		3962124	2					
ANR	3962283	PrimaryExpression	0		3962124	0					
ANR	3962284	ExpressionStatement	"lcname = do_alloca ( class_name_len + 1 , use_heap )"	323:2:10307:10355	3962124	7	True				
ANR	3962285	AssignmentExpression	"lcname = do_alloca ( class_name_len + 1 , use_heap )"		3962124	0		=			
ANR	3962286	Identifier	lcname		3962124	0					
ANR	3962287	CallExpression	"do_alloca ( class_name_len + 1 , use_heap )"		3962124	1					
ANR	3962288	Callee	do_alloca		3962124	0					
ANR	3962289	Identifier	do_alloca		3962124	0					
ANR	3962290	ArgumentList	class_name_len + 1		3962124	1					
ANR	3962291	Argument	class_name_len + 1		3962124	0					
ANR	3962292	AdditiveExpression	class_name_len + 1		3962124	0		+			
ANR	3962293	Identifier	class_name_len		3962124	0					
ANR	3962294	PrimaryExpression	1		3962124	1					
ANR	3962295	Argument	use_heap		3962124	1					
ANR	3962296	Identifier	use_heap		3962124	0					
ANR	3962297	ExpressionStatement	"zend_str_tolower_copy ( lcname , name , class_name_len )"	324:2:10359:10410	3962124	8	True				
ANR	3962298	CallExpression	"zend_str_tolower_copy ( lcname , name , class_name_len )"		3962124	0					
ANR	3962299	Callee	zend_str_tolower_copy		3962124	0					
ANR	3962300	Identifier	zend_str_tolower_copy		3962124	0					
ANR	3962301	ArgumentList	lcname		3962124	1					
ANR	3962302	Argument	lcname		3962124	0					
ANR	3962303	Identifier	lcname		3962124	0					
ANR	3962304	Argument	name		3962124	1					
ANR	3962305	Identifier	name		3962124	0					
ANR	3962306	Argument	class_name_len		3962124	2					
ANR	3962307	Identifier	class_name_len		3962124	0					
ANR	3962308	IfStatement	if ( ! scope )		3962124	9					
ANR	3962309	Condition	! scope	325:6:10418:10423	3962124	0	True				
ANR	3962310	UnaryOperationExpression	! scope		3962124	0					
ANR	3962311	UnaryOperator	!		3962124	0					
ANR	3962312	Identifier	scope		3962124	1					
ANR	3962313	CompoundStatement		28:14:791:791	3962124	1					
ANR	3962314	IfStatement	if ( EG ( current_execute_data ) )		3962124	0					
ANR	3962315	Condition	EG ( current_execute_data )	326:7:10435:10458	3962124	0	True				
ANR	3962316	CallExpression	EG ( current_execute_data )		3962124	0					
ANR	3962317	Callee	EG		3962124	0					
ANR	3962318	Identifier	EG		3962124	0					
ANR	3962319	ArgumentList	current_execute_data		3962124	1					
ANR	3962320	Argument	current_execute_data		3962124	0					
ANR	3962321	Identifier	current_execute_data		3962124	0					
ANR	3962322	CompoundStatement		29:33:826:826	3962124	1					
ANR	3962323	ExpressionStatement	scope = EG ( scope )	327:4:10467:10484	3962124	0	True				
ANR	3962324	AssignmentExpression	scope = EG ( scope )		3962124	0		=			
ANR	3962325	Identifier	scope		3962124	0					
ANR	3962326	CallExpression	EG ( scope )		3962124	1					
ANR	3962327	Callee	EG		3962124	0					
ANR	3962328	Identifier	EG		3962124	0					
ANR	3962329	ArgumentList	scope		3962124	1					
ANR	3962330	Argument	scope		3962124	0					
ANR	3962331	Identifier	scope		3962124	0					
ANR	3962332	ElseStatement	else		3962124	0					
ANR	3962333	CompoundStatement		31:10:861:861	3962124	0					
ANR	3962334	ExpressionStatement	scope = CG ( active_class_entry )	329:4:10502:10532	3962124	0	True				
ANR	3962335	AssignmentExpression	scope = CG ( active_class_entry )		3962124	0		=			
ANR	3962336	Identifier	scope		3962124	0					
ANR	3962337	CallExpression	CG ( active_class_entry )		3962124	1					
ANR	3962338	Callee	CG		3962124	0					
ANR	3962339	Identifier	CG		3962124	0					
ANR	3962340	ArgumentList	active_class_entry		3962124	1					
ANR	3962341	Argument	active_class_entry		3962124	0					
ANR	3962342	Identifier	active_class_entry		3962124	0					
ANR	3962343	IfStatement	"if ( class_name_len == sizeof ( ""self"" ) - 1 && ! memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 ) )"		3962124	10					
ANR	3962344	Condition	"class_name_len == sizeof ( ""self"" ) - 1 && ! memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 )"	333:6:10550:10634	3962124	0	True				
ANR	3962345	AndExpression	"class_name_len == sizeof ( ""self"" ) - 1 && ! memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 )"		3962124	0		&&			
ANR	3962346	EqualityExpression	"class_name_len == sizeof ( ""self"" ) - 1"		3962124	0		==			
ANR	3962347	Identifier	class_name_len		3962124	0					
ANR	3962348	AdditiveExpression	"sizeof ( ""self"" ) - 1"		3962124	1		-			
ANR	3962349	SizeofExpression	"sizeof ( ""self"" )"		3962124	0					
ANR	3962350	Sizeof	sizeof		3962124	0					
ANR	3962351	PrimaryExpression	"""self"""		3962124	1					
ANR	3962352	PrimaryExpression	1		3962124	1					
ANR	3962353	UnaryOperationExpression	"! memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 )"		3962124	1					
ANR	3962354	UnaryOperator	!		3962124	0					
ANR	3962355	CallExpression	"memcmp ( lcname , ""self"" , sizeof ( ""self"" ) - 1 )"		3962124	1					
ANR	3962356	Callee	memcmp		3962124	0					
ANR	3962357	Identifier	memcmp		3962124	0					
ANR	3962358	ArgumentList	lcname		3962124	1					
ANR	3962359	Argument	lcname		3962124	0					
ANR	3962360	Identifier	lcname		3962124	0					
ANR	3962361	Argument	"""self"""		3962124	1					
ANR	3962362	PrimaryExpression	"""self"""		3962124	0					
ANR	3962363	Argument	"sizeof ( ""self"" ) - 1"		3962124	2					
ANR	3962364	AdditiveExpression	"sizeof ( ""self"" ) - 1"		3962124	0		-			
ANR	3962365	SizeofExpression	"sizeof ( ""self"" )"		3962124	0					
ANR	3962366	Sizeof	sizeof		3962124	0					
ANR	3962367	PrimaryExpression	"""self"""		3962124	1					
ANR	3962368	PrimaryExpression	1		3962124	1					
ANR	3962369	CompoundStatement		37:49:1002:1002	3962124	1					
ANR	3962370	IfStatement	if ( UNEXPECTED ( ! scope ) )		3962124	0					
ANR	3962371	Condition	UNEXPECTED ( ! scope )	335:7:10646:10663	3962124	0	True				
ANR	3962372	CallExpression	UNEXPECTED ( ! scope )		3962124	0					
ANR	3962373	Callee	UNEXPECTED		3962124	0					
ANR	3962374	Identifier	UNEXPECTED		3962124	0					
ANR	3962375	ArgumentList	! scope		3962124	1					
ANR	3962376	Argument	! scope		3962124	0					
ANR	3962377	UnaryOperationExpression	! scope		3962124	0					
ANR	3962378	UnaryOperator	!		3962124	0					
ANR	3962379	Identifier	scope		3962124	1					
ANR	3962380	CompoundStatement		38:27:1031:1031	3962124	1					
ANR	3962381	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access self:: when no class scope is active"" )"	336:4:10672:10748	3962124	0	True				
ANR	3962382	CallExpression	"zend_throw_error ( NULL , ""Cannot access self:: when no class scope is active"" )"		3962124	0					
ANR	3962383	Callee	zend_throw_error		3962124	0					
ANR	3962384	Identifier	zend_throw_error		3962124	0					
ANR	3962385	ArgumentList	NULL		3962124	1					
ANR	3962386	Argument	NULL		3962124	0					
ANR	3962387	Identifier	NULL		3962124	0					
ANR	3962388	Argument	"""Cannot access self:: when no class scope is active"""		3962124	1					
ANR	3962389	PrimaryExpression	"""Cannot access self:: when no class scope is active"""		3962124	0					
ANR	3962390	ReturnStatement	return NULL ;	337:4:10754:10765	3962124	1	True				
ANR	3962391	Identifier	NULL		3962124	0					
ANR	3962392	ExpressionStatement	ce = scope	339:3:10775:10785	3962124	1	True				
ANR	3962393	AssignmentExpression	ce = scope		3962124	0		=			
ANR	3962394	Identifier	ce		3962124	0					
ANR	3962395	Identifier	scope		3962124	1					
ANR	3962396	ElseStatement	else		3962124	0					
ANR	3962397	IfStatement	"if ( class_name_len == sizeof ( ""parent"" ) - 1 && ! memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 ) )"		3962124	0					
ANR	3962398	Condition	"class_name_len == sizeof ( ""parent"" ) - 1 && ! memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 )"	340:13:10800:10897	3962124	0	True				
ANR	3962399	AndExpression	"class_name_len == sizeof ( ""parent"" ) - 1 && ! memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 )"		3962124	0		&&			
ANR	3962400	EqualityExpression	"class_name_len == sizeof ( ""parent"" ) - 1"		3962124	0		==			
ANR	3962401	Identifier	class_name_len		3962124	0					
ANR	3962402	AdditiveExpression	"sizeof ( ""parent"" ) - 1"		3962124	1		-			
ANR	3962403	SizeofExpression	"sizeof ( ""parent"" )"		3962124	0					
ANR	3962404	Sizeof	sizeof		3962124	0					
ANR	3962405	PrimaryExpression	"""parent"""		3962124	1					
ANR	3962406	PrimaryExpression	1		3962124	1					
ANR	3962407	UnaryOperationExpression	"! memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 )"		3962124	1					
ANR	3962408	UnaryOperator	!		3962124	0					
ANR	3962409	CallExpression	"memcmp ( lcname , ""parent"" , sizeof ( ""parent"" ) - 1 )"		3962124	1					
ANR	3962410	Callee	memcmp		3962124	0					
ANR	3962411	Identifier	memcmp		3962124	0					
ANR	3962412	ArgumentList	lcname		3962124	1					
ANR	3962413	Argument	lcname		3962124	0					
ANR	3962414	Identifier	lcname		3962124	0					
ANR	3962415	Argument	"""parent"""		3962124	1					
ANR	3962416	PrimaryExpression	"""parent"""		3962124	0					
ANR	3962417	Argument	"sizeof ( ""parent"" ) - 1"		3962124	2					
ANR	3962418	AdditiveExpression	"sizeof ( ""parent"" ) - 1"		3962124	0		-			
ANR	3962419	SizeofExpression	"sizeof ( ""parent"" )"		3962124	0					
ANR	3962420	Sizeof	sizeof		3962124	0					
ANR	3962421	PrimaryExpression	"""parent"""		3962124	1					
ANR	3962422	PrimaryExpression	1		3962124	1					
ANR	3962423	CompoundStatement		44:60:1265:1265	3962124	1					
ANR	3962424	IfStatement	if ( UNEXPECTED ( ! scope ) )		3962124	0					
ANR	3962425	Condition	UNEXPECTED ( ! scope )	342:7:10909:10926	3962124	0	True				
ANR	3962426	CallExpression	UNEXPECTED ( ! scope )		3962124	0					
ANR	3962427	Callee	UNEXPECTED		3962124	0					
ANR	3962428	Identifier	UNEXPECTED		3962124	0					
ANR	3962429	ArgumentList	! scope		3962124	1					
ANR	3962430	Argument	! scope		3962124	0					
ANR	3962431	UnaryOperationExpression	! scope		3962124	0					
ANR	3962432	UnaryOperator	!		3962124	0					
ANR	3962433	Identifier	scope		3962124	1					
ANR	3962434	CompoundStatement		45:27:1294:1294	3962124	1					
ANR	3962435	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access parent:: when no class scope is active"" )"	343:4:10935:11013	3962124	0	True				
ANR	3962436	CallExpression	"zend_throw_error ( NULL , ""Cannot access parent:: when no class scope is active"" )"		3962124	0					
ANR	3962437	Callee	zend_throw_error		3962124	0					
ANR	3962438	Identifier	zend_throw_error		3962124	0					
ANR	3962439	ArgumentList	NULL		3962124	1					
ANR	3962440	Argument	NULL		3962124	0					
ANR	3962441	Identifier	NULL		3962124	0					
ANR	3962442	Argument	"""Cannot access parent:: when no class scope is active"""		3962124	1					
ANR	3962443	PrimaryExpression	"""Cannot access parent:: when no class scope is active"""		3962124	0					
ANR	3962444	ReturnStatement	return NULL ;	344:4:11019:11030	3962124	1	True				
ANR	3962445	Identifier	NULL		3962124	0					
ANR	3962446	ElseStatement	else		3962124	0					
ANR	3962447	IfStatement	if ( UNEXPECTED ( ! scope -> parent ) )		3962124	0					
ANR	3962448	Condition	UNEXPECTED ( ! scope -> parent )	345:14:11046:11071	3962124	0	True				
ANR	3962449	CallExpression	UNEXPECTED ( ! scope -> parent )		3962124	0					
ANR	3962450	Callee	UNEXPECTED		3962124	0					
ANR	3962451	Identifier	UNEXPECTED		3962124	0					
ANR	3962452	ArgumentList	! scope -> parent		3962124	1					
ANR	3962453	Argument	! scope -> parent		3962124	0					
ANR	3962454	UnaryOperationExpression	! scope -> parent		3962124	0					
ANR	3962455	UnaryOperator	!		3962124	0					
ANR	3962456	PtrMemberAccess	scope -> parent		3962124	1					
ANR	3962457	Identifier	scope		3962124	0					
ANR	3962458	Identifier	parent		3962124	1					
ANR	3962459	CompoundStatement		48:42:1439:1439	3962124	1					
ANR	3962460	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access parent:: when current class scope has no parent"" )"	346:4:11080:11167	3962124	0	True				
ANR	3962461	CallExpression	"zend_throw_error ( NULL , ""Cannot access parent:: when current class scope has no parent"" )"		3962124	0					
ANR	3962462	Callee	zend_throw_error		3962124	0					
ANR	3962463	Identifier	zend_throw_error		3962124	0					
ANR	3962464	ArgumentList	NULL		3962124	1					
ANR	3962465	Argument	NULL		3962124	0					
ANR	3962466	Identifier	NULL		3962124	0					
ANR	3962467	Argument	"""Cannot access parent:: when current class scope has no parent"""		3962124	1					
ANR	3962468	PrimaryExpression	"""Cannot access parent:: when current class scope has no parent"""		3962124	0					
ANR	3962469	ReturnStatement	return NULL ;	347:4:11173:11184	3962124	1	True				
ANR	3962470	Identifier	NULL		3962124	0					
ANR	3962471	ElseStatement	else		3962124	0					
ANR	3962472	CompoundStatement		51:10:1561:1561	3962124	0					
ANR	3962473	ExpressionStatement	ce = scope -> parent	349:4:11202:11220	3962124	0	True				
ANR	3962474	AssignmentExpression	ce = scope -> parent		3962124	0		=			
ANR	3962475	Identifier	ce		3962124	0					
ANR	3962476	PtrMemberAccess	scope -> parent		3962124	1					
ANR	3962477	Identifier	scope		3962124	0					
ANR	3962478	Identifier	parent		3962124	1					
ANR	3962479	ElseStatement	else		3962124	0					
ANR	3962480	IfStatement	"if ( class_name_len == sizeof ( ""static"" ) - 1 && ! memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 ) )"		3962124	0					
ANR	3962481	Condition	"class_name_len == sizeof ( ""static"" ) - 1 && ! memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 )"	351:13:11240:11337	3962124	0	True				
ANR	3962482	AndExpression	"class_name_len == sizeof ( ""static"" ) - 1 && ! memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 )"		3962124	0		&&			
ANR	3962483	EqualityExpression	"class_name_len == sizeof ( ""static"" ) - 1"		3962124	0		==			
ANR	3962484	Identifier	class_name_len		3962124	0					
ANR	3962485	AdditiveExpression	"sizeof ( ""static"" ) - 1"		3962124	1		-			
ANR	3962486	SizeofExpression	"sizeof ( ""static"" )"		3962124	0					
ANR	3962487	Sizeof	sizeof		3962124	0					
ANR	3962488	PrimaryExpression	"""static"""		3962124	1					
ANR	3962489	PrimaryExpression	1		3962124	1					
ANR	3962490	UnaryOperationExpression	"! memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 )"		3962124	1					
ANR	3962491	UnaryOperator	!		3962124	0					
ANR	3962492	CallExpression	"memcmp ( lcname , ""static"" , sizeof ( ""static"" ) - 1 )"		3962124	1					
ANR	3962493	Callee	memcmp		3962124	0					
ANR	3962494	Identifier	memcmp		3962124	0					
ANR	3962495	ArgumentList	lcname		3962124	1					
ANR	3962496	Argument	lcname		3962124	0					
ANR	3962497	Identifier	lcname		3962124	0					
ANR	3962498	Argument	"""static"""		3962124	1					
ANR	3962499	PrimaryExpression	"""static"""		3962124	0					
ANR	3962500	Argument	"sizeof ( ""static"" ) - 1"		3962124	2					
ANR	3962501	AdditiveExpression	"sizeof ( ""static"" ) - 1"		3962124	0		-			
ANR	3962502	SizeofExpression	"sizeof ( ""static"" )"		3962124	0					
ANR	3962503	Sizeof	sizeof		3962124	0					
ANR	3962504	PrimaryExpression	"""static"""		3962124	1					
ANR	3962505	PrimaryExpression	1		3962124	1					
ANR	3962506	CompoundStatement		55:60:1705:1705	3962124	1					
ANR	3962507	ExpressionStatement	ce = zend_get_called_scope ( EG ( current_execute_data ) )	353:3:11345:11397	3962124	0	True				
ANR	3962508	AssignmentExpression	ce = zend_get_called_scope ( EG ( current_execute_data ) )		3962124	0		=			
ANR	3962509	Identifier	ce		3962124	0					
ANR	3962510	CallExpression	zend_get_called_scope ( EG ( current_execute_data ) )		3962124	1					
ANR	3962511	Callee	zend_get_called_scope		3962124	0					
ANR	3962512	Identifier	zend_get_called_scope		3962124	0					
ANR	3962513	ArgumentList	EG ( current_execute_data )		3962124	1					
ANR	3962514	Argument	EG ( current_execute_data )		3962124	0					
ANR	3962515	CallExpression	EG ( current_execute_data )		3962124	0					
ANR	3962516	Callee	EG		3962124	0					
ANR	3962517	Identifier	EG		3962124	0					
ANR	3962518	ArgumentList	current_execute_data		3962124	1					
ANR	3962519	Argument	current_execute_data		3962124	0					
ANR	3962520	Identifier	current_execute_data		3962124	0					
ANR	3962521	IfStatement	if ( UNEXPECTED ( ! ce ) )		3962124	1					
ANR	3962522	Condition	UNEXPECTED ( ! ce )	354:7:11406:11420	3962124	0	True				
ANR	3962523	CallExpression	UNEXPECTED ( ! ce )		3962124	0					
ANR	3962524	Callee	UNEXPECTED		3962124	0					
ANR	3962525	Identifier	UNEXPECTED		3962124	0					
ANR	3962526	ArgumentList	! ce		3962124	1					
ANR	3962527	Argument	! ce		3962124	0					
ANR	3962528	UnaryOperationExpression	! ce		3962124	0					
ANR	3962529	UnaryOperator	!		3962124	0					
ANR	3962530	Identifier	ce		3962124	1					
ANR	3962531	CompoundStatement		57:24:1788:1788	3962124	1					
ANR	3962532	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access static:: when no class scope is active"" )"	355:4:11429:11507	3962124	0	True				
ANR	3962533	CallExpression	"zend_throw_error ( NULL , ""Cannot access static:: when no class scope is active"" )"		3962124	0					
ANR	3962534	Callee	zend_throw_error		3962124	0					
ANR	3962535	Identifier	zend_throw_error		3962124	0					
ANR	3962536	ArgumentList	NULL		3962124	1					
ANR	3962537	Argument	NULL		3962124	0					
ANR	3962538	Identifier	NULL		3962124	0					
ANR	3962539	Argument	"""Cannot access static:: when no class scope is active"""		3962124	1					
ANR	3962540	PrimaryExpression	"""Cannot access static:: when no class scope is active"""		3962124	0					
ANR	3962541	ReturnStatement	return NULL ;	356:4:11513:11524	3962124	1	True				
ANR	3962542	Identifier	NULL		3962124	0					
ANR	3962543	ElseStatement	else		3962124	0					
ANR	3962544	CompoundStatement		61:9:1905:1905	3962124	0					
ANR	3962545	ExpressionStatement	"ce = zend_fetch_class ( class_name , flags )"	359:3:11545:11585	3962124	0	True				
ANR	3962546	AssignmentExpression	"ce = zend_fetch_class ( class_name , flags )"		3962124	0		=			
ANR	3962547	Identifier	ce		3962124	0					
ANR	3962548	CallExpression	"zend_fetch_class ( class_name , flags )"		3962124	1					
ANR	3962549	Callee	zend_fetch_class		3962124	0					
ANR	3962550	Identifier	zend_fetch_class		3962124	0					
ANR	3962551	ArgumentList	class_name		3962124	1					
ANR	3962552	Argument	class_name		3962124	0					
ANR	3962553	Identifier	class_name		3962124	0					
ANR	3962554	Argument	flags		3962124	1					
ANR	3962555	Identifier	flags		3962124	0					
ANR	3962556	ExpressionStatement	"free_alloca ( lcname , use_heap )"	361:2:11593:11622	3962124	11	True				
ANR	3962557	CallExpression	"free_alloca ( lcname , use_heap )"		3962124	0					
ANR	3962558	Callee	free_alloca		3962124	0					
ANR	3962559	Identifier	free_alloca		3962124	0					
ANR	3962560	ArgumentList	lcname		3962124	1					
ANR	3962561	Argument	lcname		3962124	0					
ANR	3962562	Identifier	lcname		3962124	0					
ANR	3962563	Argument	use_heap		3962124	1					
ANR	3962564	Identifier	use_heap		3962124	0					
ANR	3962565	IfStatement	if ( ce )		3962124	12					
ANR	3962566	Condition	ce	362:6:11630:11631	3962124	0	True				
ANR	3962567	Identifier	ce		3962124	0					
ANR	3962568	CompoundStatement		65:10:1999:1999	3962124	1					
ANR	3962569	ExpressionStatement	"ret_constant = zend_hash_find ( & ce -> constants_table , constant_name )"	363:3:11639:11705	3962124	0	True				
ANR	3962570	AssignmentExpression	"ret_constant = zend_hash_find ( & ce -> constants_table , constant_name )"		3962124	0		=			
ANR	3962571	Identifier	ret_constant		3962124	0					
ANR	3962572	CallExpression	"zend_hash_find ( & ce -> constants_table , constant_name )"		3962124	1					
ANR	3962573	Callee	zend_hash_find		3962124	0					
ANR	3962574	Identifier	zend_hash_find		3962124	0					
ANR	3962575	ArgumentList	& ce -> constants_table		3962124	1					
ANR	3962576	Argument	& ce -> constants_table		3962124	0					
ANR	3962577	UnaryOperationExpression	& ce -> constants_table		3962124	0					
ANR	3962578	UnaryOperator	&		3962124	0					
ANR	3962579	PtrMemberAccess	ce -> constants_table		3962124	1					
ANR	3962580	Identifier	ce		3962124	0					
ANR	3962581	Identifier	constants_table		3962124	1					
ANR	3962582	Argument	constant_name		3962124	1					
ANR	3962583	Identifier	constant_name		3962124	0					
ANR	3962584	IfStatement	if ( ret_constant == NULL )		3962124	1					
ANR	3962585	Condition	ret_constant == NULL	364:7:11714:11733	3962124	0	True				
ANR	3962586	EqualityExpression	ret_constant == NULL		3962124	0		==			
ANR	3962587	Identifier	ret_constant		3962124	0					
ANR	3962588	Identifier	NULL		3962124	1					
ANR	3962589	CompoundStatement		67:29:2101:2101	3962124	1					
ANR	3962590	IfStatement	if ( ( flags & ZEND_FETCH_CLASS_SILENT ) == 0 )		3962124	0					
ANR	3962591	Condition	( flags & ZEND_FETCH_CLASS_SILENT ) == 0	365:8:11746:11783	3962124	0	True				
ANR	3962592	EqualityExpression	( flags & ZEND_FETCH_CLASS_SILENT ) == 0		3962124	0		==			
ANR	3962593	BitAndExpression	flags & ZEND_FETCH_CLASS_SILENT		3962124	0		&			
ANR	3962594	Identifier	flags		3962124	0					
ANR	3962595	Identifier	ZEND_FETCH_CLASS_SILENT		3962124	1					
ANR	3962596	PrimaryExpression	0		3962124	1					
ANR	3962597	CompoundStatement		68:48:2151:2151	3962124	1					
ANR	3962598	ExpressionStatement	"zend_throw_error ( NULL , ""Undefined class constant '%s::%s'"" , ZSTR_VAL ( class_name ) , ZSTR_VAL ( constant_name ) )"	366:5:11793:11899	3962124	0	True				
ANR	3962599	CallExpression	"zend_throw_error ( NULL , ""Undefined class constant '%s::%s'"" , ZSTR_VAL ( class_name ) , ZSTR_VAL ( constant_name ) )"		3962124	0					
ANR	3962600	Callee	zend_throw_error		3962124	0					
ANR	3962601	Identifier	zend_throw_error		3962124	0					
ANR	3962602	ArgumentList	NULL		3962124	1					
ANR	3962603	Argument	NULL		3962124	0					
ANR	3962604	Identifier	NULL		3962124	0					
ANR	3962605	Argument	"""Undefined class constant '%s::%s'"""		3962124	1					
ANR	3962606	PrimaryExpression	"""Undefined class constant '%s::%s'"""		3962124	0					
ANR	3962607	Argument	ZSTR_VAL ( class_name )		3962124	2					
ANR	3962608	CallExpression	ZSTR_VAL ( class_name )		3962124	0					
ANR	3962609	Callee	ZSTR_VAL		3962124	0					
ANR	3962610	Identifier	ZSTR_VAL		3962124	0					
ANR	3962611	ArgumentList	class_name		3962124	1					
ANR	3962612	Argument	class_name		3962124	0					
ANR	3962613	Identifier	class_name		3962124	0					
ANR	3962614	Argument	ZSTR_VAL ( constant_name )		3962124	3					
ANR	3962615	CallExpression	ZSTR_VAL ( constant_name )		3962124	0					
ANR	3962616	Callee	ZSTR_VAL		3962124	0					
ANR	3962617	Identifier	ZSTR_VAL		3962124	0					
ANR	3962618	ArgumentList	constant_name		3962124	1					
ANR	3962619	Argument	constant_name		3962124	0					
ANR	3962620	Identifier	constant_name		3962124	0					
ANR	3962621	ExpressionStatement	zend_string_release ( class_name )	367:5:11906:11937	3962124	1	True				
ANR	3962622	CallExpression	zend_string_release ( class_name )		3962124	0					
ANR	3962623	Callee	zend_string_release		3962124	0					
ANR	3962624	Identifier	zend_string_release		3962124	0					
ANR	3962625	ArgumentList	class_name		3962124	1					
ANR	3962626	Argument	class_name		3962124	0					
ANR	3962627	Identifier	class_name		3962124	0					
ANR	3962628	ExpressionStatement	zend_string_free ( constant_name )	368:5:11944:11975	3962124	2	True				
ANR	3962629	CallExpression	zend_string_free ( constant_name )		3962124	0					
ANR	3962630	Callee	zend_string_free		3962124	0					
ANR	3962631	Identifier	zend_string_free		3962124	0					
ANR	3962632	ArgumentList	constant_name		3962124	1					
ANR	3962633	Argument	constant_name		3962124	0					
ANR	3962634	Identifier	constant_name		3962124	0					
ANR	3962635	ReturnStatement	return NULL ;	369:5:11982:11993	3962124	3	True				
ANR	3962636	Identifier	NULL		3962124	0					
ANR	3962637	ElseStatement	else		3962124	0					
ANR	3962638	IfStatement	if ( Z_ISREF_P ( ret_constant ) )		3962124	0					
ANR	3962639	Condition	Z_ISREF_P ( ret_constant )	371:14:12015:12037	3962124	0	True				
ANR	3962640	CallExpression	Z_ISREF_P ( ret_constant )		3962124	0					
ANR	3962641	Callee	Z_ISREF_P		3962124	0					
ANR	3962642	Identifier	Z_ISREF_P		3962124	0					
ANR	3962643	ArgumentList	ret_constant		3962124	1					
ANR	3962644	Argument	ret_constant		3962124	0					
ANR	3962645	Identifier	ret_constant		3962124	0					
ANR	3962646	CompoundStatement		74:39:2405:2405	3962124	1					
ANR	3962647	ExpressionStatement	ret_constant = Z_REFVAL_P ( ret_constant )	372:4:12046:12085	3962124	0	True				
ANR	3962648	AssignmentExpression	ret_constant = Z_REFVAL_P ( ret_constant )		3962124	0		=			
ANR	3962649	Identifier	ret_constant		3962124	0					
ANR	3962650	CallExpression	Z_REFVAL_P ( ret_constant )		3962124	1					
ANR	3962651	Callee	Z_REFVAL_P		3962124	0					
ANR	3962652	Identifier	Z_REFVAL_P		3962124	0					
ANR	3962653	ArgumentList	ret_constant		3962124	1					
ANR	3962654	Argument	ret_constant		3962124	0					
ANR	3962655	Identifier	ret_constant		3962124	0					
ANR	3962656	ExpressionStatement	zend_string_release ( class_name )	375:2:12098:12129	3962124	13	True				
ANR	3962657	CallExpression	zend_string_release ( class_name )		3962124	0					
ANR	3962658	Callee	zend_string_release		3962124	0					
ANR	3962659	Identifier	zend_string_release		3962124	0					
ANR	3962660	ArgumentList	class_name		3962124	1					
ANR	3962661	Argument	class_name		3962124	0					
ANR	3962662	Identifier	class_name		3962124	0					
ANR	3962663	ExpressionStatement	zend_string_free ( constant_name )	376:2:12133:12164	3962124	14	True				
ANR	3962664	CallExpression	zend_string_free ( constant_name )		3962124	0					
ANR	3962665	Callee	zend_string_free		3962124	0					
ANR	3962666	Identifier	zend_string_free		3962124	0					
ANR	3962667	ArgumentList	constant_name		3962124	1					
ANR	3962668	Argument	constant_name		3962124	0					
ANR	3962669	Identifier	constant_name		3962124	0					
ANR	3962670	IfStatement	if ( ret_constant && Z_CONSTANT_P ( ret_constant ) )		3962124	15					
ANR	3962671	Condition	ret_constant && Z_CONSTANT_P ( ret_constant )	377:6:12172:12213	3962124	0	True				
ANR	3962672	AndExpression	ret_constant && Z_CONSTANT_P ( ret_constant )		3962124	0		&&			
ANR	3962673	Identifier	ret_constant		3962124	0					
ANR	3962674	CallExpression	Z_CONSTANT_P ( ret_constant )		3962124	1					
ANR	3962675	Callee	Z_CONSTANT_P		3962124	0					
ANR	3962676	Identifier	Z_CONSTANT_P		3962124	0					
ANR	3962677	ArgumentList	ret_constant		3962124	1					
ANR	3962678	Argument	ret_constant		3962124	0					
ANR	3962679	Identifier	ret_constant		3962124	0					
ANR	3962680	CompoundStatement		80:50:2581:2581	3962124	1					
ANR	3962681	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( ret_constant , 1 , ce ) != SUCCESS ) )"		3962124	0					
ANR	3962682	Condition	"UNEXPECTED ( zval_update_constant_ex ( ret_constant , 1 , ce ) != SUCCESS )"	378:7:12225:12291	3962124	0	True				
ANR	3962683	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( ret_constant , 1 , ce ) != SUCCESS )"		3962124	0					
ANR	3962684	Callee	UNEXPECTED		3962124	0					
ANR	3962685	Identifier	UNEXPECTED		3962124	0					
ANR	3962686	ArgumentList	"zval_update_constant_ex ( ret_constant , 1 , ce ) != SUCCESS"		3962124	1					
ANR	3962687	Argument	"zval_update_constant_ex ( ret_constant , 1 , ce ) != SUCCESS"		3962124	0					
ANR	3962688	EqualityExpression	"zval_update_constant_ex ( ret_constant , 1 , ce ) != SUCCESS"		3962124	0		!=			
ANR	3962689	CallExpression	"zval_update_constant_ex ( ret_constant , 1 , ce )"		3962124	0					
ANR	3962690	Callee	zval_update_constant_ex		3962124	0					
ANR	3962691	Identifier	zval_update_constant_ex		3962124	0					
ANR	3962692	ArgumentList	ret_constant		3962124	1					
ANR	3962693	Argument	ret_constant		3962124	0					
ANR	3962694	Identifier	ret_constant		3962124	0					
ANR	3962695	Argument	1		3962124	1					
ANR	3962696	PrimaryExpression	1		3962124	0					
ANR	3962697	Argument	ce		3962124	2					
ANR	3962698	Identifier	ce		3962124	0					
ANR	3962699	Identifier	SUCCESS		3962124	1					
ANR	3962700	CompoundStatement		81:76:2659:2659	3962124	1					
ANR	3962701	ReturnStatement	return NULL ;	379:4:12300:12311	3962124	0	True				
ANR	3962702	Identifier	NULL		3962124	0					
ANR	3962703	ReturnStatement	return ret_constant ;	382:2:12324:12343	3962124	16	True				
ANR	3962704	Identifier	ret_constant		3962124	0					
ANR	3962705	IfStatement	"if ( ( colon = zend_memrchr ( name , '\\\\' , name_len ) ) != NULL )"		3962124	8					
ANR	3962706	Condition	"( colon = zend_memrchr ( name , '\\\\' , name_len ) ) != NULL"	386:5:12380:12431	3962124	0	True				
ANR	3962707	EqualityExpression	"( colon = zend_memrchr ( name , '\\\\' , name_len ) ) != NULL"		3962124	0		!=			
ANR	3962708	AssignmentExpression	"colon = zend_memrchr ( name , '\\\\' , name_len )"		3962124	0		=			
ANR	3962709	Identifier	colon		3962124	0					
ANR	3962710	CallExpression	"zend_memrchr ( name , '\\\\' , name_len )"		3962124	1					
ANR	3962711	Callee	zend_memrchr		3962124	0					
ANR	3962712	Identifier	zend_memrchr		3962124	0					
ANR	3962713	ArgumentList	name		3962124	1					
ANR	3962714	Argument	name		3962124	0					
ANR	3962715	Identifier	name		3962124	0					
ANR	3962716	Argument	'\\\\'		3962124	1					
ANR	3962717	PrimaryExpression	'\\\\'		3962124	0					
ANR	3962718	Argument	name_len		3962124	2					
ANR	3962719	Identifier	name_len		3962124	0					
ANR	3962720	Identifier	NULL		3962124	1					
ANR	3962721	CompoundStatement		95:2:2977:2994	3962124	1					
ANR	3962722	IdentifierDeclStatement	int prefix_len = colon - name ;	388:2:12469:12498	3962124	0	True				
ANR	3962723	IdentifierDecl	prefix_len = colon - name		3962124	0					
ANR	3962724	IdentifierDeclType	int		3962124	0					
ANR	3962725	Identifier	prefix_len		3962124	1					
ANR	3962726	AssignmentExpression	prefix_len = colon - name		3962124	2		=			
ANR	3962727	Identifier	prefix_len		3962124	0					
ANR	3962728	AdditiveExpression	colon - name		3962124	1		-			
ANR	3962729	Identifier	colon		3962124	0					
ANR	3962730	Identifier	name		3962124	1					
ANR	3962731	IdentifierDeclStatement	size_t const_name_len = name_len - prefix_len - 1 ;	389:2:12502:12551	3962124	1	True				
ANR	3962732	IdentifierDecl	const_name_len = name_len - prefix_len - 1		3962124	0					
ANR	3962733	IdentifierDeclType	size_t		3962124	0					
ANR	3962734	Identifier	const_name_len		3962124	1					
ANR	3962735	AssignmentExpression	const_name_len = name_len - prefix_len - 1		3962124	2		=			
ANR	3962736	Identifier	const_name_len		3962124	0					
ANR	3962737	AdditiveExpression	name_len - prefix_len - 1		3962124	1		-			
ANR	3962738	Identifier	name_len		3962124	0					
ANR	3962739	AdditiveExpression	prefix_len - 1		3962124	1		-			
ANR	3962740	Identifier	prefix_len		3962124	0					
ANR	3962741	PrimaryExpression	1		3962124	1					
ANR	3962742	IdentifierDeclStatement	const char * constant_name = colon + 1 ;	390:2:12555:12592	3962124	2	True				
ANR	3962743	IdentifierDecl	* constant_name = colon + 1		3962124	0					
ANR	3962744	IdentifierDeclType	const char *		3962124	0					
ANR	3962745	Identifier	constant_name		3962124	1					
ANR	3962746	AssignmentExpression	* constant_name = colon + 1		3962124	2		=			
ANR	3962747	Identifier	constant_name		3962124	0					
ANR	3962748	AdditiveExpression	colon + 1		3962124	1		+			
ANR	3962749	Identifier	colon		3962124	0					
ANR	3962750	PrimaryExpression	1		3962124	1					
ANR	3962751	IdentifierDeclStatement	char * lcname ;	391:2:12596:12608	3962124	3	True				
ANR	3962752	IdentifierDecl	* lcname		3962124	0					
ANR	3962753	IdentifierDeclType	char *		3962124	0					
ANR	3962754	Identifier	lcname		3962124	1					
ANR	3962755	IdentifierDeclStatement	size_t lcname_len ;	392:2:12612:12629	3962124	4	True				
ANR	3962756	IdentifierDecl	lcname_len		3962124	0					
ANR	3962757	IdentifierDeclType	size_t		3962124	0					
ANR	3962758	Identifier	lcname_len		3962124	1					
ANR	3962759	Statement	ALLOCA_FLAG	393:2:12633:12643	3962124	5	True				
ANR	3962760	ExpressionStatement	( use_heap ) lcname_len = prefix_len + 1 + const_name_len	393:13:12644:12702	3962124	6	True				
ANR	3962761	AssignmentExpression	( use_heap ) lcname_len = prefix_len + 1 + const_name_len		3962124	0		=			
ANR	3962762	CastExpression	( use_heap ) lcname_len		3962124	0					
ANR	3962763	CastTarget	use_heap		3962124	0					
ANR	3962764	Identifier	lcname_len		3962124	1					
ANR	3962765	AdditiveExpression	prefix_len + 1 + const_name_len		3962124	1		+			
ANR	3962766	Identifier	prefix_len		3962124	0					
ANR	3962767	AdditiveExpression	1 + const_name_len		3962124	1		+			
ANR	3962768	PrimaryExpression	1		3962124	0					
ANR	3962769	Identifier	const_name_len		3962124	1					
ANR	3962770	ExpressionStatement	"lcname = do_alloca ( lcname_len + 1 , use_heap )"	396:2:12706:12750	3962124	7	True				
ANR	3962771	AssignmentExpression	"lcname = do_alloca ( lcname_len + 1 , use_heap )"		3962124	0		=			
ANR	3962772	Identifier	lcname		3962124	0					
ANR	3962773	CallExpression	"do_alloca ( lcname_len + 1 , use_heap )"		3962124	1					
ANR	3962774	Callee	do_alloca		3962124	0					
ANR	3962775	Identifier	do_alloca		3962124	0					
ANR	3962776	ArgumentList	lcname_len + 1		3962124	1					
ANR	3962777	Argument	lcname_len + 1		3962124	0					
ANR	3962778	AdditiveExpression	lcname_len + 1		3962124	0		+			
ANR	3962779	Identifier	lcname_len		3962124	0					
ANR	3962780	PrimaryExpression	1		3962124	1					
ANR	3962781	Argument	use_heap		3962124	1					
ANR	3962782	Identifier	use_heap		3962124	0					
ANR	3962783	ExpressionStatement	"zend_str_tolower_copy ( lcname , name , prefix_len )"	397:2:12754:12801	3962124	8	True				
ANR	3962784	CallExpression	"zend_str_tolower_copy ( lcname , name , prefix_len )"		3962124	0					
ANR	3962785	Callee	zend_str_tolower_copy		3962124	0					
ANR	3962786	Identifier	zend_str_tolower_copy		3962124	0					
ANR	3962787	ArgumentList	lcname		3962124	1					
ANR	3962788	Argument	lcname		3962124	0					
ANR	3962789	Identifier	lcname		3962124	0					
ANR	3962790	Argument	name		3962124	1					
ANR	3962791	Identifier	name		3962124	0					
ANR	3962792	Argument	prefix_len		3962124	2					
ANR	3962793	Identifier	prefix_len		3962124	0					
ANR	3962794	ExpressionStatement	lcname [ prefix_len ] = '\\\\'	400:2:12843:12868	3962124	9	True				
ANR	3962795	AssignmentExpression	lcname [ prefix_len ] = '\\\\'		3962124	0		=			
ANR	3962796	ArrayIndexing	lcname [ prefix_len ]		3962124	0					
ANR	3962797	Identifier	lcname		3962124	0					
ANR	3962798	Identifier	prefix_len		3962124	1					
ANR	3962799	PrimaryExpression	'\\\\'		3962124	1					
ANR	3962800	ExpressionStatement	"memcpy ( lcname + prefix_len + 1 , constant_name , const_name_len + 1 )"	401:2:12872:12938	3962124	10	True				
ANR	3962801	CallExpression	"memcpy ( lcname + prefix_len + 1 , constant_name , const_name_len + 1 )"		3962124	0					
ANR	3962802	Callee	memcpy		3962124	0					
ANR	3962803	Identifier	memcpy		3962124	0					
ANR	3962804	ArgumentList	lcname + prefix_len + 1		3962124	1					
ANR	3962805	Argument	lcname + prefix_len + 1		3962124	0					
ANR	3962806	AdditiveExpression	lcname + prefix_len + 1		3962124	0		+			
ANR	3962807	Identifier	lcname		3962124	0					
ANR	3962808	AdditiveExpression	prefix_len + 1		3962124	1		+			
ANR	3962809	Identifier	prefix_len		3962124	0					
ANR	3962810	PrimaryExpression	1		3962124	1					
ANR	3962811	Argument	constant_name		3962124	1					
ANR	3962812	Identifier	constant_name		3962124	0					
ANR	3962813	Argument	const_name_len + 1		3962124	2					
ANR	3962814	AdditiveExpression	const_name_len + 1		3962124	0		+			
ANR	3962815	Identifier	const_name_len		3962124	0					
ANR	3962816	PrimaryExpression	1		3962124	1					
ANR	3962817	IfStatement	"if ( ( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len ) ) == NULL )"		3962124	11					
ANR	3962818	Condition	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len ) ) == NULL"	403:6:12947:13022	3962124	0	True				
ANR	3962819	EqualityExpression	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len ) ) == NULL"		3962124	0		==			
ANR	3962820	AssignmentExpression	"c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len )"		3962124	0		=			
ANR	3962821	Identifier	c		3962124	0					
ANR	3962822	CallExpression	"zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len )"		3962124	1					
ANR	3962823	Callee	zend_hash_str_find_ptr		3962124	0					
ANR	3962824	Identifier	zend_hash_str_find_ptr		3962124	0					
ANR	3962825	ArgumentList	EG ( zend_constants )		3962124	1					
ANR	3962826	Argument	EG ( zend_constants )		3962124	0					
ANR	3962827	CallExpression	EG ( zend_constants )		3962124	0					
ANR	3962828	Callee	EG		3962124	0					
ANR	3962829	Identifier	EG		3962124	0					
ANR	3962830	ArgumentList	zend_constants		3962124	1					
ANR	3962831	Argument	zend_constants		3962124	0					
ANR	3962832	Identifier	zend_constants		3962124	0					
ANR	3962833	Argument	lcname		3962124	1					
ANR	3962834	Identifier	lcname		3962124	0					
ANR	3962835	Argument	lcname_len		3962124	2					
ANR	3962836	Identifier	lcname_len		3962124	0					
ANR	3962837	Identifier	NULL		3962124	1					
ANR	3962838	CompoundStatement		106:84:3390:3390	3962124	1					
ANR	3962839	ExpressionStatement	"zend_str_tolower ( lcname + prefix_len + 1 , const_name_len )"	405:3:13053:13110	3962124	0	True				
ANR	3962840	CallExpression	"zend_str_tolower ( lcname + prefix_len + 1 , const_name_len )"		3962124	0					
ANR	3962841	Callee	zend_str_tolower		3962124	0					
ANR	3962842	Identifier	zend_str_tolower		3962124	0					
ANR	3962843	ArgumentList	lcname + prefix_len + 1		3962124	1					
ANR	3962844	Argument	lcname + prefix_len + 1		3962124	0					
ANR	3962845	AdditiveExpression	lcname + prefix_len + 1		3962124	0		+			
ANR	3962846	Identifier	lcname		3962124	0					
ANR	3962847	AdditiveExpression	prefix_len + 1		3962124	1		+			
ANR	3962848	Identifier	prefix_len		3962124	0					
ANR	3962849	PrimaryExpression	1		3962124	1					
ANR	3962850	Argument	const_name_len		3962124	1					
ANR	3962851	Identifier	const_name_len		3962124	0					
ANR	3962852	IfStatement	"if ( ( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len ) ) != NULL )"		3962124	1					
ANR	3962853	Condition	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len ) ) != NULL"	406:7:13119:13194	3962124	0	True				
ANR	3962854	EqualityExpression	"( c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len ) ) != NULL"		3962124	0		!=			
ANR	3962855	AssignmentExpression	"c = zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len )"		3962124	0		=			
ANR	3962856	Identifier	c		3962124	0					
ANR	3962857	CallExpression	"zend_hash_str_find_ptr ( EG ( zend_constants ) , lcname , lcname_len )"		3962124	1					
ANR	3962858	Callee	zend_hash_str_find_ptr		3962124	0					
ANR	3962859	Identifier	zend_hash_str_find_ptr		3962124	0					
ANR	3962860	ArgumentList	EG ( zend_constants )		3962124	1					
ANR	3962861	Argument	EG ( zend_constants )		3962124	0					
ANR	3962862	CallExpression	EG ( zend_constants )		3962124	0					
ANR	3962863	Callee	EG		3962124	0					
ANR	3962864	Identifier	EG		3962124	0					
ANR	3962865	ArgumentList	zend_constants		3962124	1					
ANR	3962866	Argument	zend_constants		3962124	0					
ANR	3962867	Identifier	zend_constants		3962124	0					
ANR	3962868	Argument	lcname		3962124	1					
ANR	3962869	Identifier	lcname		3962124	0					
ANR	3962870	Argument	lcname_len		3962124	2					
ANR	3962871	Identifier	lcname_len		3962124	0					
ANR	3962872	Identifier	NULL		3962124	1					
ANR	3962873	CompoundStatement		109:85:3562:3562	3962124	1					
ANR	3962874	IfStatement	if ( ( c -> flags & CONST_CS ) != 0 )		3962124	0					
ANR	3962875	Condition	( c -> flags & CONST_CS ) != 0	407:8:13207:13232	3962124	0	True				
ANR	3962876	EqualityExpression	( c -> flags & CONST_CS ) != 0		3962124	0		!=			
ANR	3962877	BitAndExpression	c -> flags & CONST_CS		3962124	0		&			
ANR	3962878	PtrMemberAccess	c -> flags		3962124	0					
ANR	3962879	Identifier	c		3962124	0					
ANR	3962880	Identifier	flags		3962124	1					
ANR	3962881	Identifier	CONST_CS		3962124	1					
ANR	3962882	PrimaryExpression	0		3962124	1					
ANR	3962883	CompoundStatement		110:36:3600:3600	3962124	1					
ANR	3962884	ExpressionStatement	c = NULL	408:5:13242:13250	3962124	0	True				
ANR	3962885	AssignmentExpression	c = NULL		3962124	0		=			
ANR	3962886	Identifier	c		3962124	0					
ANR	3962887	Identifier	NULL		3962124	1					
ANR	3962888	ExpressionStatement	"free_alloca ( lcname , use_heap )"	412:2:13269:13298	3962124	12	True				
ANR	3962889	CallExpression	"free_alloca ( lcname , use_heap )"		3962124	0					
ANR	3962890	Callee	free_alloca		3962124	0					
ANR	3962891	Identifier	free_alloca		3962124	0					
ANR	3962892	ArgumentList	lcname		3962124	1					
ANR	3962893	Argument	lcname		3962124	0					
ANR	3962894	Identifier	lcname		3962124	0					
ANR	3962895	Argument	use_heap		3962124	1					
ANR	3962896	Identifier	use_heap		3962124	0					
ANR	3962897	IfStatement	if ( c )		3962124	13					
ANR	3962898	Condition	c	413:6:13306:13306	3962124	0	True				
ANR	3962899	Identifier	c		3962124	0					
ANR	3962900	CompoundStatement		116:9:3674:3674	3962124	1					
ANR	3962901	ReturnStatement	return & c -> value ;	414:3:13314:13330	3962124	0	True				
ANR	3962902	UnaryOperationExpression	& c -> value		3962124	0					
ANR	3962903	UnaryOperator	&		3962124	0					
ANR	3962904	PtrMemberAccess	c -> value		3962124	1					
ANR	3962905	Identifier	c		3962124	0					
ANR	3962906	Identifier	value		3962124	1					
ANR	3962907	IfStatement	if ( ( flags & IS_CONSTANT_UNQUALIFIED ) != 0 )		3962124	14					
ANR	3962908	Condition	( flags & IS_CONSTANT_UNQUALIFIED ) != 0	417:6:13418:13455	3962124	0	True				
ANR	3962909	EqualityExpression	( flags & IS_CONSTANT_UNQUALIFIED ) != 0		3962124	0		!=			
ANR	3962910	BitAndExpression	flags & IS_CONSTANT_UNQUALIFIED		3962124	0		&			
ANR	3962911	Identifier	flags		3962124	0					
ANR	3962912	Identifier	IS_CONSTANT_UNQUALIFIED		3962124	1					
ANR	3962913	PrimaryExpression	0		3962124	1					
ANR	3962914	CompoundStatement		120:46:3823:3823	3962124	1					
ANR	3962915	ReturnStatement	"return zend_get_constant_str ( constant_name , const_name_len ) ;"	418:3:13463:13522	3962124	0	True				
ANR	3962916	CallExpression	"zend_get_constant_str ( constant_name , const_name_len )"		3962124	0					
ANR	3962917	Callee	zend_get_constant_str		3962124	0					
ANR	3962918	Identifier	zend_get_constant_str		3962124	0					
ANR	3962919	ArgumentList	constant_name		3962124	1					
ANR	3962920	Argument	constant_name		3962124	0					
ANR	3962921	Identifier	constant_name		3962124	0					
ANR	3962922	Argument	const_name_len		3962124	1					
ANR	3962923	Identifier	const_name_len		3962124	0					
ANR	3962924	ReturnStatement	return NULL ;	420:2:13530:13541	3962124	15	True				
ANR	3962925	Identifier	NULL		3962124	0					
ANR	3962926	IfStatement	if ( cname )		3962124	9					
ANR	3962927	Condition	cname	423:5:13552:13556	3962124	0	True				
ANR	3962928	Identifier	cname		3962124	0					
ANR	3962929	CompoundStatement		126:12:3924:3924	3962124	1					
ANR	3962930	ReturnStatement	return zend_get_constant ( cname ) ;	424:2:13563:13594	3962124	0	True				
ANR	3962931	CallExpression	zend_get_constant ( cname )		3962124	0					
ANR	3962932	Callee	zend_get_constant		3962124	0					
ANR	3962933	Identifier	zend_get_constant		3962124	0					
ANR	3962934	ArgumentList	cname		3962124	1					
ANR	3962935	Argument	cname		3962124	0					
ANR	3962936	Identifier	cname		3962124	0					
ANR	3962937	ElseStatement	else		3962124	0					
ANR	3962938	CompoundStatement		128:8:3969:3969	3962124	0					
ANR	3962939	ReturnStatement	"return zend_get_constant_str ( name , name_len ) ;"	426:2:13608:13652	3962124	0	True				
ANR	3962940	CallExpression	"zend_get_constant_str ( name , name_len )"		3962124	0					
ANR	3962941	Callee	zend_get_constant_str		3962124	0					
ANR	3962942	Identifier	zend_get_constant_str		3962124	0					
ANR	3962943	ArgumentList	name		3962124	1					
ANR	3962944	Argument	name		3962124	0					
ANR	3962945	Identifier	name		3962124	0					
ANR	3962946	Argument	name_len		3962124	1					
ANR	3962947	Identifier	name_len		3962124	0					
ANR	3962948	ReturnType	ZEND_API zval *		3962124	1					
ANR	3962949	Identifier	zend_get_constant_ex		3962124	2					
ANR	3962950	ParameterList	"zend_string * cname , zend_class_entry * scope , zend_ulong flags"		3962124	3					
ANR	3962951	Parameter	zend_string * cname	297:36:9571:9588	3962124	0	True				
ANR	3962952	ParameterType	zend_string *		3962124	0					
ANR	3962953	Identifier	cname		3962124	1					
ANR	3962954	Parameter	zend_class_entry * scope	297:56:9591:9613	3962124	1	True				
ANR	3962955	ParameterType	zend_class_entry *		3962124	0					
ANR	3962956	Identifier	scope		3962124	1					
ANR	3962957	Parameter	zend_ulong flags	297:81:9616:9631	3962124	2	True				
ANR	3962958	ParameterType	zend_ulong		3962124	0					
ANR	3962959	Identifier	flags		3962124	1					
ANR	3962960	CFGEntryNode	ENTRY		3962124		True				
ANR	3962961	CFGExitNode	EXIT		3962124		True				
ANR	3962962	Symbol	Z_CONSTANT_P		3962124						
ANR	3962963	Symbol	current_execute_data		3962124						
ANR	3962964	Symbol	active_class_entry		3962124						
ANR	3962965	Symbol	zend_string_init		3962124						
ANR	3962966	Symbol	zend_hash_find		3962124						
ANR	3962967	Symbol	& c -> value		3962124						
ANR	3962968	Symbol	* lcname		3962124						
ANR	3962969	Symbol	memcmp		3962124						
ANR	3962970	Symbol	IS_CONSTANT_UNQUALIFIED		3962124						
ANR	3962971	Symbol	zend_constants		3962124						
ANR	3962972	Symbol	EG		3962124						
ANR	3962973	Symbol	CONST_CS		3962124						
ANR	3962974	Symbol	NULL		3962124						
ANR	3962975	Symbol	ret_constant		3962124						
ANR	3962976	Symbol	const_name_len		3962124						
ANR	3962977	Symbol	zend_get_constant_str		3962124						
ANR	3962978	Symbol	name		3962124						
ANR	3962979	Symbol	* scope		3962124						
ANR	3962980	Symbol	Z_ISREF_P		3962124						
ANR	3962981	Symbol	use_heap		3962124						
ANR	3962982	Symbol	* prefix_len		3962124						
ANR	3962983	Symbol	c -> flags		3962124						
ANR	3962984	Symbol	ZEND_FETCH_CLASS_SILENT		3962124						
ANR	3962985	Symbol	cname		3962124						
ANR	3962986	Symbol	flags		3962124						
ANR	3962987	Symbol	prefix_len		3962124						
ANR	3962988	Symbol	zend_get_called_scope		3962124						
ANR	3962989	Symbol	constant_name		3962124						
ANR	3962990	Symbol	UNEXPECTED		3962124						
ANR	3962991	Symbol	scope		3962124						
ANR	3962992	Symbol	zend_hash_str_find_ptr		3962124						
ANR	3962993	Symbol	zend_get_constant		3962124						
ANR	3962994	Symbol	* ( colon - 1 )		3962124						
ANR	3962995	Symbol	name_len		3962124						
ANR	3962996	Symbol	class_name		3962124						
ANR	3962997	Symbol	* name		3962124						
ANR	3962998	Symbol	zend_memrchr		3962124						
ANR	3962999	Symbol	zend_fetch_class		3962124						
ANR	3963000	Symbol	ce		3962124						
ANR	3963001	Symbol	c		3962124						
ANR	3963002	Symbol	SUCCESS		3962124						
ANR	3963003	Symbol	CG		3962124						
ANR	3963004	Symbol	scope -> parent		3962124						
ANR	3963005	Symbol	* c		3962124						
ANR	3963006	Symbol	* colon		3962124						
ANR	3963007	Symbol	ZSTR_VAL		3962124						
ANR	3963008	Symbol	& ce -> constants_table		3962124						
ANR	3963009	Symbol	lcname		3962124						
ANR	3963010	Symbol	lcname_len		3962124						
ANR	3963011	Symbol	Z_REFVAL_P		3962124						
ANR	3963012	Symbol	colon		3962124						
ANR	3963013	Symbol	ZSTR_LEN		3962124						
ANR	3963014	Symbol	do_alloca		3962124						
ANR	3963015	Symbol	zval_update_constant_ex		3962124						
ANR	3963016	Symbol	class_name_len		3962124						
ANR	3963017	Function	zend_quick_get_constant	430:0:13660:14402							
ANR	3963018	FunctionDef	"zend_quick_get_constant (const zval * key , zend_ulong flags)"		3963017	0					
ANR	3963019	CompoundStatement		431:0:13734:14402	3963017	0					
ANR	3963020	IdentifierDeclStatement	zend_constant * c ;	432:1:13737:13753	3963017	0	True				
ANR	3963021	IdentifierDecl	* c		3963017	0					
ANR	3963022	IdentifierDeclType	zend_constant *		3963017	0					
ANR	3963023	Identifier	c		3963017	1					
ANR	3963024	IfStatement	"if ( ( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL )"		3963017	1					
ANR	3963025	Condition	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL"	434:5:13761:13826	3963017	0	True				
ANR	3963026	EqualityExpression	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL"		3963017	0		==			
ANR	3963027	AssignmentExpression	"c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) )"		3963017	0		=			
ANR	3963028	Identifier	c		3963017	0					
ANR	3963029	CallExpression	"zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) )"		3963017	1					
ANR	3963030	Callee	zend_hash_find_ptr		3963017	0					
ANR	3963031	Identifier	zend_hash_find_ptr		3963017	0					
ANR	3963032	ArgumentList	EG ( zend_constants )		3963017	1					
ANR	3963033	Argument	EG ( zend_constants )		3963017	0					
ANR	3963034	CallExpression	EG ( zend_constants )		3963017	0					
ANR	3963035	Callee	EG		3963017	0					
ANR	3963036	Identifier	EG		3963017	0					
ANR	3963037	ArgumentList	zend_constants		3963017	1					
ANR	3963038	Argument	zend_constants		3963017	0					
ANR	3963039	Identifier	zend_constants		3963017	0					
ANR	3963040	Argument	Z_STR_P ( key )		3963017	1					
ANR	3963041	CallExpression	Z_STR_P ( key )		3963017	0					
ANR	3963042	Callee	Z_STR_P		3963017	0					
ANR	3963043	Identifier	Z_STR_P		3963017	0					
ANR	3963044	ArgumentList	key		3963017	1					
ANR	3963045	Argument	key		3963017	0					
ANR	3963046	Identifier	key		3963017	0					
ANR	3963047	Identifier	NULL		3963017	1					
ANR	3963048	CompoundStatement		4:73:94:94	3963017	1					
ANR	3963049	ExpressionStatement	key ++	435:2:13833:13838	3963017	0	True				
ANR	3963050	PostIncDecOperationExpression	key ++		3963017	0					
ANR	3963051	Identifier	key		3963017	0					
ANR	3963052	IncDec	++		3963017	1					
ANR	3963053	IfStatement	"if ( ( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL || ( c -> flags & CONST_CS ) != 0 )"		3963017	1					
ANR	3963054	Condition	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL || ( c -> flags & CONST_CS ) != 0"	436:6:13846:13947	3963017	0	True				
ANR	3963055	OrExpression	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL || ( c -> flags & CONST_CS ) != 0"		3963017	0		||			
ANR	3963056	EqualityExpression	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL"		3963017	0		==			
ANR	3963057	AssignmentExpression	"c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) )"		3963017	0		=			
ANR	3963058	Identifier	c		3963017	0					
ANR	3963059	CallExpression	"zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) )"		3963017	1					
ANR	3963060	Callee	zend_hash_find_ptr		3963017	0					
ANR	3963061	Identifier	zend_hash_find_ptr		3963017	0					
ANR	3963062	ArgumentList	EG ( zend_constants )		3963017	1					
ANR	3963063	Argument	EG ( zend_constants )		3963017	0					
ANR	3963064	CallExpression	EG ( zend_constants )		3963017	0					
ANR	3963065	Callee	EG		3963017	0					
ANR	3963066	Identifier	EG		3963017	0					
ANR	3963067	ArgumentList	zend_constants		3963017	1					
ANR	3963068	Argument	zend_constants		3963017	0					
ANR	3963069	Identifier	zend_constants		3963017	0					
ANR	3963070	Argument	Z_STR_P ( key )		3963017	1					
ANR	3963071	CallExpression	Z_STR_P ( key )		3963017	0					
ANR	3963072	Callee	Z_STR_P		3963017	0					
ANR	3963073	Identifier	Z_STR_P		3963017	0					
ANR	3963074	ArgumentList	key		3963017	1					
ANR	3963075	Argument	key		3963017	0					
ANR	3963076	Identifier	key		3963017	0					
ANR	3963077	Identifier	NULL		3963017	1					
ANR	3963078	EqualityExpression	( c -> flags & CONST_CS ) != 0		3963017	1		!=			
ANR	3963079	BitAndExpression	c -> flags & CONST_CS		3963017	0		&			
ANR	3963080	PtrMemberAccess	c -> flags		3963017	0					
ANR	3963081	Identifier	c		3963017	0					
ANR	3963082	Identifier	flags		3963017	1					
ANR	3963083	Identifier	CONST_CS		3963017	1					
ANR	3963084	PrimaryExpression	0		3963017	1					
ANR	3963085	CompoundStatement		7:34:215:215	3963017	1					
ANR	3963086	IfStatement	if ( ( flags & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) )		3963017	0					
ANR	3963087	Condition	( flags & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )	438:7:13959:14072	3963017	0	True				
ANR	3963088	EqualityExpression	( flags & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )		3963017	0		==			
ANR	3963089	BitAndExpression	flags & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )		3963017	0		&			
ANR	3963090	Identifier	flags		3963017	0					
ANR	3963091	InclusiveOrExpression	IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED		3963017	1		|			
ANR	3963092	Identifier	IS_CONSTANT_IN_NAMESPACE		3963017	0					
ANR	3963093	Identifier	IS_CONSTANT_UNQUALIFIED		3963017	1					
ANR	3963094	InclusiveOrExpression	IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED		3963017	1		|			
ANR	3963095	Identifier	IS_CONSTANT_IN_NAMESPACE		3963017	0					
ANR	3963096	Identifier	IS_CONSTANT_UNQUALIFIED		3963017	1					
ANR	3963097	CompoundStatement		8:123:340:340	3963017	1					
ANR	3963098	ExpressionStatement	key ++	439:4:14081:14086	3963017	0	True				
ANR	3963099	PostIncDecOperationExpression	key ++		3963017	0					
ANR	3963100	Identifier	key		3963017	0					
ANR	3963101	IncDec	++		3963017	1					
ANR	3963102	IfStatement	"if ( ( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL )"		3963017	1					
ANR	3963103	Condition	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL"	440:8:14096:14161	3963017	0	True				
ANR	3963104	EqualityExpression	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL"		3963017	0		==			
ANR	3963105	AssignmentExpression	"c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) )"		3963017	0		=			
ANR	3963106	Identifier	c		3963017	0					
ANR	3963107	CallExpression	"zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) )"		3963017	1					
ANR	3963108	Callee	zend_hash_find_ptr		3963017	0					
ANR	3963109	Identifier	zend_hash_find_ptr		3963017	0					
ANR	3963110	ArgumentList	EG ( zend_constants )		3963017	1					
ANR	3963111	Argument	EG ( zend_constants )		3963017	0					
ANR	3963112	CallExpression	EG ( zend_constants )		3963017	0					
ANR	3963113	Callee	EG		3963017	0					
ANR	3963114	Identifier	EG		3963017	0					
ANR	3963115	ArgumentList	zend_constants		3963017	1					
ANR	3963116	Argument	zend_constants		3963017	0					
ANR	3963117	Identifier	zend_constants		3963017	0					
ANR	3963118	Argument	Z_STR_P ( key )		3963017	1					
ANR	3963119	CallExpression	Z_STR_P ( key )		3963017	0					
ANR	3963120	Callee	Z_STR_P		3963017	0					
ANR	3963121	Identifier	Z_STR_P		3963017	0					
ANR	3963122	ArgumentList	key		3963017	1					
ANR	3963123	Argument	key		3963017	0					
ANR	3963124	Identifier	key		3963017	0					
ANR	3963125	Identifier	NULL		3963017	1					
ANR	3963126	CompoundStatement		10:76:429:429	3963017	1					
ANR	3963127	ExpressionStatement	key ++	441:8:14174:14179	3963017	0	True				
ANR	3963128	PostIncDecOperationExpression	key ++		3963017	0					
ANR	3963129	Identifier	key		3963017	0					
ANR	3963130	IncDec	++		3963017	1					
ANR	3963131	IfStatement	"if ( ( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL || ( c -> flags & CONST_CS ) != 0 )"		3963017	1					
ANR	3963132	Condition	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL || ( c -> flags & CONST_CS ) != 0"	442:9:14190:14294	3963017	0	True				
ANR	3963133	OrExpression	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL || ( c -> flags & CONST_CS ) != 0"		3963017	0		||			
ANR	3963134	EqualityExpression	"( c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) ) ) == NULL"		3963017	0		==			
ANR	3963135	AssignmentExpression	"c = zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) )"		3963017	0		=			
ANR	3963136	Identifier	c		3963017	0					
ANR	3963137	CallExpression	"zend_hash_find_ptr ( EG ( zend_constants ) , Z_STR_P ( key ) )"		3963017	1					
ANR	3963138	Callee	zend_hash_find_ptr		3963017	0					
ANR	3963139	Identifier	zend_hash_find_ptr		3963017	0					
ANR	3963140	ArgumentList	EG ( zend_constants )		3963017	1					
ANR	3963141	Argument	EG ( zend_constants )		3963017	0					
ANR	3963142	CallExpression	EG ( zend_constants )		3963017	0					
ANR	3963143	Callee	EG		3963017	0					
ANR	3963144	Identifier	EG		3963017	0					
ANR	3963145	ArgumentList	zend_constants		3963017	1					
ANR	3963146	Argument	zend_constants		3963017	0					
ANR	3963147	Identifier	zend_constants		3963017	0					
ANR	3963148	Argument	Z_STR_P ( key )		3963017	1					
ANR	3963149	CallExpression	Z_STR_P ( key )		3963017	0					
ANR	3963150	Callee	Z_STR_P		3963017	0					
ANR	3963151	Identifier	Z_STR_P		3963017	0					
ANR	3963152	ArgumentList	key		3963017	1					
ANR	3963153	Argument	key		3963017	0					
ANR	3963154	Identifier	key		3963017	0					
ANR	3963155	Identifier	NULL		3963017	1					
ANR	3963156	EqualityExpression	( c -> flags & CONST_CS ) != 0		3963017	1		!=			
ANR	3963157	BitAndExpression	c -> flags & CONST_CS		3963017	0		&			
ANR	3963158	PtrMemberAccess	c -> flags		3963017	0					
ANR	3963159	Identifier	c		3963017	0					
ANR	3963160	Identifier	flags		3963017	1					
ANR	3963161	Identifier	CONST_CS		3963017	1					
ANR	3963162	PrimaryExpression	0		3963017	1					
ANR	3963163	CompoundStatement		13:37:562:562	3963017	1					
ANR	3963164	ExpressionStatement	key --	445:6:14306:14311	3963017	0	True				
ANR	3963165	PostIncDecOperationExpression	key --		3963017	0					
ANR	3963166	Identifier	key		3963017	0					
ANR	3963167	IncDec	--		3963017	1					
ANR	3963168	ExpressionStatement	c = NULL	446:6:14319:14327	3963017	1	True				
ANR	3963169	AssignmentExpression	c = NULL		3963017	0		=			
ANR	3963170	Identifier	c		3963017	0					
ANR	3963171	Identifier	NULL		3963017	1					
ANR	3963172	ElseStatement	else		3963017	0					
ANR	3963173	CompoundStatement		19:10:617:617	3963017	0					
ANR	3963174	ExpressionStatement	key --	450:4:14358:14363	3963017	0	True				
ANR	3963175	PostIncDecOperationExpression	key --		3963017	0					
ANR	3963176	Identifier	key		3963017	0					
ANR	3963177	IncDec	--		3963017	1					
ANR	3963178	ExpressionStatement	c = NULL	451:4:14369:14377	3963017	1	True				
ANR	3963179	AssignmentExpression	c = NULL		3963017	0		=			
ANR	3963180	Identifier	c		3963017	0					
ANR	3963181	Identifier	NULL		3963017	1					
ANR	3963182	ReturnStatement	return c ;	455:1:14392:14400	3963017	2	True				
ANR	3963183	Identifier	c		3963017	0					
ANR	3963184	ReturnType	zend_constant *		3963017	1					
ANR	3963185	Identifier	zend_quick_get_constant		3963017	2					
ANR	3963186	ParameterList	"const zval * key , zend_ulong flags"		3963017	3					
ANR	3963187	Parameter	const zval * key	430:39:13699:13713	3963017	0	True				
ANR	3963188	ParameterType	const zval *		3963017	0					
ANR	3963189	Identifier	key		3963017	1					
ANR	3963190	Parameter	zend_ulong flags	430:56:13716:13731	3963017	1	True				
ANR	3963191	ParameterType	zend_ulong		3963017	0					
ANR	3963192	Identifier	flags		3963017	1					
ANR	3963193	CFGEntryNode	ENTRY		3963017		True				
ANR	3963194	CFGExitNode	EXIT		3963017		True				
ANR	3963195	Symbol	EG		3963017						
ANR	3963196	Symbol	CONST_CS		3963017						
ANR	3963197	Symbol	c		3963017						
ANR	3963198	Symbol	NULL		3963017						
ANR	3963199	Symbol	c -> flags		3963017						
ANR	3963200	Symbol	flags		3963017						
ANR	3963201	Symbol	IS_CONSTANT_IN_NAMESPACE		3963017						
ANR	3963202	Symbol	* c		3963017						
ANR	3963203	Symbol	IS_CONSTANT_UNQUALIFIED		3963017						
ANR	3963204	Symbol	zend_constants		3963017						
ANR	3963205	Symbol	Z_STR_P		3963017						
ANR	3963206	Symbol	zend_hash_find_ptr		3963017						
ANR	3963207	Symbol	key		3963017						
ANR	3963208	Function	zend_hash_add_constant	458:0:14405:14748							
ANR	3963209	FunctionDef	"zend_hash_add_constant (HashTable * ht , zend_string * key , zend_constant * c)"		3963208	0					
ANR	3963210	CompoundStatement		459:0:14492:14748	3963208	0					
ANR	3963211	IdentifierDeclStatement	void * ret ;	460:1:14495:14504	3963208	0	True				
ANR	3963212	IdentifierDecl	* ret		3963208	0					
ANR	3963213	IdentifierDeclType	void *		3963208	0					
ANR	3963214	Identifier	ret		3963208	1					
ANR	3963215	IdentifierDeclStatement	"zend_constant * copy = pemalloc ( sizeof ( zend_constant ) , c -> flags & CONST_PERSISTENT ) ;"	461:1:14507:14589	3963208	1	True				
ANR	3963216	IdentifierDecl	"* copy = pemalloc ( sizeof ( zend_constant ) , c -> flags & CONST_PERSISTENT )"		3963208	0					
ANR	3963217	IdentifierDeclType	zend_constant *		3963208	0					
ANR	3963218	Identifier	copy		3963208	1					
ANR	3963219	AssignmentExpression	"* copy = pemalloc ( sizeof ( zend_constant ) , c -> flags & CONST_PERSISTENT )"		3963208	2		=			
ANR	3963220	Identifier	copy		3963208	0					
ANR	3963221	CallExpression	"pemalloc ( sizeof ( zend_constant ) , c -> flags & CONST_PERSISTENT )"		3963208	1					
ANR	3963222	Callee	pemalloc		3963208	0					
ANR	3963223	Identifier	pemalloc		3963208	0					
ANR	3963224	ArgumentList	sizeof ( zend_constant )		3963208	1					
ANR	3963225	Argument	sizeof ( zend_constant )		3963208	0					
ANR	3963226	SizeofExpression	sizeof ( zend_constant )		3963208	0					
ANR	3963227	Sizeof	sizeof		3963208	0					
ANR	3963228	SizeofOperand	zend_constant		3963208	1					
ANR	3963229	Argument	c -> flags & CONST_PERSISTENT		3963208	1					
ANR	3963230	BitAndExpression	c -> flags & CONST_PERSISTENT		3963208	0		&			
ANR	3963231	PtrMemberAccess	c -> flags		3963208	0					
ANR	3963232	Identifier	c		3963208	0					
ANR	3963233	Identifier	flags		3963208	1					
ANR	3963234	Identifier	CONST_PERSISTENT		3963208	1					
ANR	3963235	ExpressionStatement	"memcpy ( copy , c , sizeof ( zend_constant ) )"	463:1:14593:14631	3963208	2	True				
ANR	3963236	CallExpression	"memcpy ( copy , c , sizeof ( zend_constant ) )"		3963208	0					
ANR	3963237	Callee	memcpy		3963208	0					
ANR	3963238	Identifier	memcpy		3963208	0					
ANR	3963239	ArgumentList	copy		3963208	1					
ANR	3963240	Argument	copy		3963208	0					
ANR	3963241	Identifier	copy		3963208	0					
ANR	3963242	Argument	c		3963208	1					
ANR	3963243	Identifier	c		3963208	0					
ANR	3963244	Argument	sizeof ( zend_constant )		3963208	2					
ANR	3963245	SizeofExpression	sizeof ( zend_constant )		3963208	0					
ANR	3963246	Sizeof	sizeof		3963208	0					
ANR	3963247	SizeofOperand	zend_constant		3963208	1					
ANR	3963248	ExpressionStatement	"ret = zend_hash_add_ptr ( ht , key , copy )"	464:1:14634:14672	3963208	3	True				
ANR	3963249	AssignmentExpression	"ret = zend_hash_add_ptr ( ht , key , copy )"		3963208	0		=			
ANR	3963250	Identifier	ret		3963208	0					
ANR	3963251	CallExpression	"zend_hash_add_ptr ( ht , key , copy )"		3963208	1					
ANR	3963252	Callee	zend_hash_add_ptr		3963208	0					
ANR	3963253	Identifier	zend_hash_add_ptr		3963208	0					
ANR	3963254	ArgumentList	ht		3963208	1					
ANR	3963255	Argument	ht		3963208	0					
ANR	3963256	Identifier	ht		3963208	0					
ANR	3963257	Argument	key		3963208	1					
ANR	3963258	Identifier	key		3963208	0					
ANR	3963259	Argument	copy		3963208	2					
ANR	3963260	Identifier	copy		3963208	0					
ANR	3963261	IfStatement	if ( ! ret )		3963208	4					
ANR	3963262	Condition	! ret	465:5:14679:14682	3963208	0	True				
ANR	3963263	UnaryOperationExpression	! ret		3963208	0					
ANR	3963264	UnaryOperator	!		3963208	0					
ANR	3963265	Identifier	ret		3963208	1					
ANR	3963266	CompoundStatement		7:11:192:192	3963208	1					
ANR	3963267	ExpressionStatement	"pefree ( copy , c -> flags & CONST_PERSISTENT )"	466:2:14689:14730	3963208	0	True				
ANR	3963268	CallExpression	"pefree ( copy , c -> flags & CONST_PERSISTENT )"		3963208	0					
ANR	3963269	Callee	pefree		3963208	0					
ANR	3963270	Identifier	pefree		3963208	0					
ANR	3963271	ArgumentList	copy		3963208	1					
ANR	3963272	Argument	copy		3963208	0					
ANR	3963273	Identifier	copy		3963208	0					
ANR	3963274	Argument	c -> flags & CONST_PERSISTENT		3963208	1					
ANR	3963275	BitAndExpression	c -> flags & CONST_PERSISTENT		3963208	0		&			
ANR	3963276	PtrMemberAccess	c -> flags		3963208	0					
ANR	3963277	Identifier	c		3963208	0					
ANR	3963278	Identifier	flags		3963208	1					
ANR	3963279	Identifier	CONST_PERSISTENT		3963208	1					
ANR	3963280	ReturnStatement	return ret ;	468:1:14736:14746	3963208	5	True				
ANR	3963281	Identifier	ret		3963208	0					
ANR	3963282	ReturnType	static void *		3963208	1					
ANR	3963283	Identifier	zend_hash_add_constant		3963208	2					
ANR	3963284	ParameterList	"HashTable * ht , zend_string * key , zend_constant * c"		3963208	3					
ANR	3963285	Parameter	HashTable * ht	458:36:14441:14453	3963208	0	True				
ANR	3963286	ParameterType	HashTable *		3963208	0					
ANR	3963287	Identifier	ht		3963208	1					
ANR	3963288	Parameter	zend_string * key	458:51:14456:14471	3963208	1	True				
ANR	3963289	ParameterType	zend_string *		3963208	0					
ANR	3963290	Identifier	key		3963208	1					
ANR	3963291	Parameter	zend_constant * c	458:69:14474:14489	3963208	2	True				
ANR	3963292	ParameterType	zend_constant *		3963208	0					
ANR	3963293	Identifier	c		3963208	1					
ANR	3963294	CFGEntryNode	ENTRY		3963208		True				
ANR	3963295	CFGExitNode	EXIT		3963208		True				
ANR	3963296	Symbol	ret		3963208						
ANR	3963297	Symbol	c		3963208						
ANR	3963298	Symbol	c -> flags		3963208						
ANR	3963299	Symbol	copy		3963208						
ANR	3963300	Symbol	zend_hash_add_ptr		3963208						
ANR	3963301	Symbol	ht		3963208						
ANR	3963302	Symbol	CONST_PERSISTENT		3963208						
ANR	3963303	Symbol	* c		3963208						
ANR	3963304	Symbol	key		3963208						
ANR	3963305	Symbol	pemalloc		3963208						
ANR	3963306	Function	zend_register_constant	471:0:14751:16517							
ANR	3963307	FunctionDef	zend_register_constant (zend_constant * c)		3963306	0					
ANR	3963308	CompoundStatement		472:0:14805:16517	3963306	0					
ANR	3963309	IdentifierDeclStatement	zend_string * lowercase_name = NULL ;	473:1:14808:14842	3963306	0	True				
ANR	3963310	IdentifierDecl	* lowercase_name = NULL		3963306	0					
ANR	3963311	IdentifierDeclType	zend_string *		3963306	0					
ANR	3963312	Identifier	lowercase_name		3963306	1					
ANR	3963313	AssignmentExpression	* lowercase_name = NULL		3963306	2		=			
ANR	3963314	Identifier	NULL		3963306	0					
ANR	3963315	Identifier	NULL		3963306	1					
ANR	3963316	IdentifierDeclStatement	zend_string * name ;	474:1:14845:14862	3963306	1	True				
ANR	3963317	IdentifierDecl	* name		3963306	0					
ANR	3963318	IdentifierDeclType	zend_string *		3963306	0					
ANR	3963319	Identifier	name		3963306	1					
ANR	3963320	IdentifierDeclStatement	int ret = SUCCESS ;	475:1:14865:14882	3963306	2	True				
ANR	3963321	IdentifierDecl	ret = SUCCESS		3963306	0					
ANR	3963322	IdentifierDeclType	int		3963306	0					
ANR	3963323	Identifier	ret		3963306	1					
ANR	3963324	AssignmentExpression	ret = SUCCESS		3963306	2		=			
ANR	3963325	Identifier	SUCCESS		3963306	0					
ANR	3963326	Identifier	SUCCESS		3963306	1					
ANR	3963327	ExpressionStatement	"printf ( ""Registering constant for module %d\\n"" , c -> module_number )"	478:1:14892:14956	3963306	3	True				
ANR	3963328	CallExpression	"printf ( ""Registering constant for module %d\\n"" , c -> module_number )"		3963306	0					
ANR	3963329	Callee	printf		3963306	0					
ANR	3963330	Identifier	printf		3963306	0					
ANR	3963331	ArgumentList	"""Registering constant for module %d\\n"""		3963306	1					
ANR	3963332	Argument	"""Registering constant for module %d\\n"""		3963306	0					
ANR	3963333	PrimaryExpression	"""Registering constant for module %d\\n"""		3963306	0					
ANR	3963334	Argument	c -> module_number		3963306	1					
ANR	3963335	PtrMemberAccess	c -> module_number		3963306	0					
ANR	3963336	Identifier	c		3963306	0					
ANR	3963337	Identifier	module_number		3963306	1					
ANR	3963338	IfStatement	if ( ! ( c -> flags & CONST_CS ) )		3963306	4					
ANR	3963339	Condition	! ( c -> flags & CONST_CS )	481:5:14971:14992	3963306	0	True				
ANR	3963340	UnaryOperationExpression	! ( c -> flags & CONST_CS )		3963306	0					
ANR	3963341	UnaryOperator	!		3963306	0					
ANR	3963342	BitAndExpression	c -> flags & CONST_CS		3963306	1		&			
ANR	3963343	PtrMemberAccess	c -> flags		3963306	0					
ANR	3963344	Identifier	c		3963306	0					
ANR	3963345	Identifier	flags		3963306	1					
ANR	3963346	Identifier	CONST_CS		3963306	1					
ANR	3963347	CompoundStatement		10:29:189:189	3963306	1					
ANR	3963348	ExpressionStatement	"lowercase_name = zend_string_alloc ( ZSTR_LEN ( c -> name ) , c -> flags & CONST_PERSISTENT )"	482:2:14999:15081	3963306	0	True				
ANR	3963349	AssignmentExpression	"lowercase_name = zend_string_alloc ( ZSTR_LEN ( c -> name ) , c -> flags & CONST_PERSISTENT )"		3963306	0		=			
ANR	3963350	Identifier	lowercase_name		3963306	0					
ANR	3963351	CallExpression	"zend_string_alloc ( ZSTR_LEN ( c -> name ) , c -> flags & CONST_PERSISTENT )"		3963306	1					
ANR	3963352	Callee	zend_string_alloc		3963306	0					
ANR	3963353	Identifier	zend_string_alloc		3963306	0					
ANR	3963354	ArgumentList	ZSTR_LEN ( c -> name )		3963306	1					
ANR	3963355	Argument	ZSTR_LEN ( c -> name )		3963306	0					
ANR	3963356	CallExpression	ZSTR_LEN ( c -> name )		3963306	0					
ANR	3963357	Callee	ZSTR_LEN		3963306	0					
ANR	3963358	Identifier	ZSTR_LEN		3963306	0					
ANR	3963359	ArgumentList	c -> name		3963306	1					
ANR	3963360	Argument	c -> name		3963306	0					
ANR	3963361	PtrMemberAccess	c -> name		3963306	0					
ANR	3963362	Identifier	c		3963306	0					
ANR	3963363	Identifier	name		3963306	1					
ANR	3963364	Argument	c -> flags & CONST_PERSISTENT		3963306	1					
ANR	3963365	BitAndExpression	c -> flags & CONST_PERSISTENT		3963306	0		&			
ANR	3963366	PtrMemberAccess	c -> flags		3963306	0					
ANR	3963367	Identifier	c		3963306	0					
ANR	3963368	Identifier	flags		3963306	1					
ANR	3963369	Identifier	CONST_PERSISTENT		3963306	1					
ANR	3963370	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ZSTR_VAL ( c -> name ) , ZSTR_LEN ( c -> name ) )"	483:2:15085:15170	3963306	1	True				
ANR	3963371	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lowercase_name ) , ZSTR_VAL ( c -> name ) , ZSTR_LEN ( c -> name ) )"		3963306	0					
ANR	3963372	Callee	zend_str_tolower_copy		3963306	0					
ANR	3963373	Identifier	zend_str_tolower_copy		3963306	0					
ANR	3963374	ArgumentList	ZSTR_VAL ( lowercase_name )		3963306	1					
ANR	3963375	Argument	ZSTR_VAL ( lowercase_name )		3963306	0					
ANR	3963376	CallExpression	ZSTR_VAL ( lowercase_name )		3963306	0					
ANR	3963377	Callee	ZSTR_VAL		3963306	0					
ANR	3963378	Identifier	ZSTR_VAL		3963306	0					
ANR	3963379	ArgumentList	lowercase_name		3963306	1					
ANR	3963380	Argument	lowercase_name		3963306	0					
ANR	3963381	Identifier	lowercase_name		3963306	0					
ANR	3963382	Argument	ZSTR_VAL ( c -> name )		3963306	1					
ANR	3963383	CallExpression	ZSTR_VAL ( c -> name )		3963306	0					
ANR	3963384	Callee	ZSTR_VAL		3963306	0					
ANR	3963385	Identifier	ZSTR_VAL		3963306	0					
ANR	3963386	ArgumentList	c -> name		3963306	1					
ANR	3963387	Argument	c -> name		3963306	0					
ANR	3963388	PtrMemberAccess	c -> name		3963306	0					
ANR	3963389	Identifier	c		3963306	0					
ANR	3963390	Identifier	name		3963306	1					
ANR	3963391	Argument	ZSTR_LEN ( c -> name )		3963306	2					
ANR	3963392	CallExpression	ZSTR_LEN ( c -> name )		3963306	0					
ANR	3963393	Callee	ZSTR_LEN		3963306	0					
ANR	3963394	Identifier	ZSTR_LEN		3963306	0					
ANR	3963395	ArgumentList	c -> name		3963306	1					
ANR	3963396	Argument	c -> name		3963306	0					
ANR	3963397	PtrMemberAccess	c -> name		3963306	0					
ANR	3963398	Identifier	c		3963306	0					
ANR	3963399	Identifier	name		3963306	1					
ANR	3963400	ExpressionStatement	lowercase_name = zend_new_interned_string ( lowercase_name )	484:2:15174:15231	3963306	2	True				
ANR	3963401	AssignmentExpression	lowercase_name = zend_new_interned_string ( lowercase_name )		3963306	0		=			
ANR	3963402	Identifier	lowercase_name		3963306	0					
ANR	3963403	CallExpression	zend_new_interned_string ( lowercase_name )		3963306	1					
ANR	3963404	Callee	zend_new_interned_string		3963306	0					
ANR	3963405	Identifier	zend_new_interned_string		3963306	0					
ANR	3963406	ArgumentList	lowercase_name		3963306	1					
ANR	3963407	Argument	lowercase_name		3963306	0					
ANR	3963408	Identifier	lowercase_name		3963306	0					
ANR	3963409	ExpressionStatement	name = lowercase_name	485:2:15235:15256	3963306	3	True				
ANR	3963410	AssignmentExpression	name = lowercase_name		3963306	0		=			
ANR	3963411	Identifier	name		3963306	0					
ANR	3963412	Identifier	lowercase_name		3963306	1					
ANR	3963413	ElseStatement	else		3963306	0					
ANR	3963414	CompoundStatement		16:2:464:510	3963306	0					
ANR	3963415	IdentifierDeclStatement	"char * slash = strrchr ( ZSTR_VAL ( c -> name ) , '\\\\' ) ;"	487:2:15270:15316	3963306	0	True				
ANR	3963416	IdentifierDecl	"* slash = strrchr ( ZSTR_VAL ( c -> name ) , '\\\\' )"		3963306	0					
ANR	3963417	IdentifierDeclType	char *		3963306	0					
ANR	3963418	Identifier	slash		3963306	1					
ANR	3963419	AssignmentExpression	"* slash = strrchr ( ZSTR_VAL ( c -> name ) , '\\\\' )"		3963306	2		=			
ANR	3963420	Identifier	slash		3963306	0					
ANR	3963421	CallExpression	"strrchr ( ZSTR_VAL ( c -> name ) , '\\\\' )"		3963306	1					
ANR	3963422	Callee	strrchr		3963306	0					
ANR	3963423	Identifier	strrchr		3963306	0					
ANR	3963424	ArgumentList	ZSTR_VAL ( c -> name )		3963306	1					
ANR	3963425	Argument	ZSTR_VAL ( c -> name )		3963306	0					
ANR	3963426	CallExpression	ZSTR_VAL ( c -> name )		3963306	0					
ANR	3963427	Callee	ZSTR_VAL		3963306	0					
ANR	3963428	Identifier	ZSTR_VAL		3963306	0					
ANR	3963429	ArgumentList	c -> name		3963306	1					
ANR	3963430	Argument	c -> name		3963306	0					
ANR	3963431	PtrMemberAccess	c -> name		3963306	0					
ANR	3963432	Identifier	c		3963306	0					
ANR	3963433	Identifier	name		3963306	1					
ANR	3963434	Argument	'\\\\'		3963306	1					
ANR	3963435	PrimaryExpression	'\\\\'		3963306	0					
ANR	3963436	IfStatement	if ( slash )		3963306	1					
ANR	3963437	Condition	slash	488:6:15324:15328	3963306	0	True				
ANR	3963438	Identifier	slash		3963306	0					
ANR	3963439	CompoundStatement		17:13:525:525	3963306	1					
ANR	3963440	ExpressionStatement	"lowercase_name = zend_string_init ( ZSTR_VAL ( c -> name ) , ZSTR_LEN ( c -> name ) , c -> flags & CONST_PERSISTENT )"	489:3:15336:15436	3963306	0	True				
ANR	3963441	AssignmentExpression	"lowercase_name = zend_string_init ( ZSTR_VAL ( c -> name ) , ZSTR_LEN ( c -> name ) , c -> flags & CONST_PERSISTENT )"		3963306	0		=			
ANR	3963442	Identifier	lowercase_name		3963306	0					
ANR	3963443	CallExpression	"zend_string_init ( ZSTR_VAL ( c -> name ) , ZSTR_LEN ( c -> name ) , c -> flags & CONST_PERSISTENT )"		3963306	1					
ANR	3963444	Callee	zend_string_init		3963306	0					
ANR	3963445	Identifier	zend_string_init		3963306	0					
ANR	3963446	ArgumentList	ZSTR_VAL ( c -> name )		3963306	1					
ANR	3963447	Argument	ZSTR_VAL ( c -> name )		3963306	0					
ANR	3963448	CallExpression	ZSTR_VAL ( c -> name )		3963306	0					
ANR	3963449	Callee	ZSTR_VAL		3963306	0					
ANR	3963450	Identifier	ZSTR_VAL		3963306	0					
ANR	3963451	ArgumentList	c -> name		3963306	1					
ANR	3963452	Argument	c -> name		3963306	0					
ANR	3963453	PtrMemberAccess	c -> name		3963306	0					
ANR	3963454	Identifier	c		3963306	0					
ANR	3963455	Identifier	name		3963306	1					
ANR	3963456	Argument	ZSTR_LEN ( c -> name )		3963306	1					
ANR	3963457	CallExpression	ZSTR_LEN ( c -> name )		3963306	0					
ANR	3963458	Callee	ZSTR_LEN		3963306	0					
ANR	3963459	Identifier	ZSTR_LEN		3963306	0					
ANR	3963460	ArgumentList	c -> name		3963306	1					
ANR	3963461	Argument	c -> name		3963306	0					
ANR	3963462	PtrMemberAccess	c -> name		3963306	0					
ANR	3963463	Identifier	c		3963306	0					
ANR	3963464	Identifier	name		3963306	1					
ANR	3963465	Argument	c -> flags & CONST_PERSISTENT		3963306	2					
ANR	3963466	BitAndExpression	c -> flags & CONST_PERSISTENT		3963306	0		&			
ANR	3963467	PtrMemberAccess	c -> flags		3963306	0					
ANR	3963468	Identifier	c		3963306	0					
ANR	3963469	Identifier	flags		3963306	1					
ANR	3963470	Identifier	CONST_PERSISTENT		3963306	1					
ANR	3963471	ExpressionStatement	"zend_str_tolower ( ZSTR_VAL ( lowercase_name ) , slash - ZSTR_VAL ( c -> name ) )"	490:3:15441:15510	3963306	1	True				
ANR	3963472	CallExpression	"zend_str_tolower ( ZSTR_VAL ( lowercase_name ) , slash - ZSTR_VAL ( c -> name ) )"		3963306	0					
ANR	3963473	Callee	zend_str_tolower		3963306	0					
ANR	3963474	Identifier	zend_str_tolower		3963306	0					
ANR	3963475	ArgumentList	ZSTR_VAL ( lowercase_name )		3963306	1					
ANR	3963476	Argument	ZSTR_VAL ( lowercase_name )		3963306	0					
ANR	3963477	CallExpression	ZSTR_VAL ( lowercase_name )		3963306	0					
ANR	3963478	Callee	ZSTR_VAL		3963306	0					
ANR	3963479	Identifier	ZSTR_VAL		3963306	0					
ANR	3963480	ArgumentList	lowercase_name		3963306	1					
ANR	3963481	Argument	lowercase_name		3963306	0					
ANR	3963482	Identifier	lowercase_name		3963306	0					
ANR	3963483	Argument	slash - ZSTR_VAL ( c -> name )		3963306	1					
ANR	3963484	AdditiveExpression	slash - ZSTR_VAL ( c -> name )		3963306	0		-			
ANR	3963485	Identifier	slash		3963306	0					
ANR	3963486	CallExpression	ZSTR_VAL ( c -> name )		3963306	1					
ANR	3963487	Callee	ZSTR_VAL		3963306	0					
ANR	3963488	Identifier	ZSTR_VAL		3963306	0					
ANR	3963489	ArgumentList	c -> name		3963306	1					
ANR	3963490	Argument	c -> name		3963306	0					
ANR	3963491	PtrMemberAccess	c -> name		3963306	0					
ANR	3963492	Identifier	c		3963306	0					
ANR	3963493	Identifier	name		3963306	1					
ANR	3963494	ExpressionStatement	lowercase_name = zend_new_interned_string ( lowercase_name )	491:3:15515:15572	3963306	2	True				
ANR	3963495	AssignmentExpression	lowercase_name = zend_new_interned_string ( lowercase_name )		3963306	0		=			
ANR	3963496	Identifier	lowercase_name		3963306	0					
ANR	3963497	CallExpression	zend_new_interned_string ( lowercase_name )		3963306	1					
ANR	3963498	Callee	zend_new_interned_string		3963306	0					
ANR	3963499	Identifier	zend_new_interned_string		3963306	0					
ANR	3963500	ArgumentList	lowercase_name		3963306	1					
ANR	3963501	Argument	lowercase_name		3963306	0					
ANR	3963502	Identifier	lowercase_name		3963306	0					
ANR	3963503	ExpressionStatement	name = lowercase_name	492:3:15577:15598	3963306	3	True				
ANR	3963504	AssignmentExpression	name = lowercase_name		3963306	0		=			
ANR	3963505	Identifier	name		3963306	0					
ANR	3963506	Identifier	lowercase_name		3963306	1					
ANR	3963507	ElseStatement	else		3963306	0					
ANR	3963508	CompoundStatement		22:9:803:803	3963306	0					
ANR	3963509	ExpressionStatement	name = c -> name	494:3:15614:15628	3963306	0	True				
ANR	3963510	AssignmentExpression	name = c -> name		3963306	0		=			
ANR	3963511	Identifier	name		3963306	0					
ANR	3963512	PtrMemberAccess	c -> name		3963306	1					
ANR	3963513	Identifier	c		3963306	0					
ANR	3963514	Identifier	name		3963306	1					
ANR	3963515	IfStatement	"if ( ( ZSTR_LEN ( c -> name ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && ! memcmp ( ZSTR_VAL ( name ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) ) || zend_hash_add_constant ( EG ( zend_constants ) , name , c ) == NULL )"		3963306	5					
ANR	3963516	Condition	"( ZSTR_LEN ( c -> name ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && ! memcmp ( ZSTR_VAL ( name ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) ) || zend_hash_add_constant ( EG ( zend_constants ) , name , c ) == NULL"	499:5:15747:15965	3963306	0	True				
ANR	3963517	OrExpression	"( ZSTR_LEN ( c -> name ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && ! memcmp ( ZSTR_VAL ( name ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 ) ) || zend_hash_add_constant ( EG ( zend_constants ) , name , c ) == NULL"		3963306	0		||			
ANR	3963518	AndExpression	"ZSTR_LEN ( c -> name ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 && ! memcmp ( ZSTR_VAL ( name ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		3963306	0		&&			
ANR	3963519	EqualityExpression	"ZSTR_LEN ( c -> name ) == sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3963306	0		==			
ANR	3963520	CallExpression	ZSTR_LEN ( c -> name )		3963306	0					
ANR	3963521	Callee	ZSTR_LEN		3963306	0					
ANR	3963522	Identifier	ZSTR_LEN		3963306	0					
ANR	3963523	ArgumentList	c -> name		3963306	1					
ANR	3963524	Argument	c -> name		3963306	0					
ANR	3963525	PtrMemberAccess	c -> name		3963306	0					
ANR	3963526	Identifier	c		3963306	0					
ANR	3963527	Identifier	name		3963306	1					
ANR	3963528	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3963306	1		-			
ANR	3963529	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		3963306	0					
ANR	3963530	Sizeof	sizeof		3963306	0					
ANR	3963531	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3963306	1					
ANR	3963532	PrimaryExpression	1		3963306	1					
ANR	3963533	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( name ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		3963306	1					
ANR	3963534	UnaryOperator	!		3963306	0					
ANR	3963535	CallExpression	"memcmp ( ZSTR_VAL ( name ) , ""__COMPILER_HALT_OFFSET__"" , sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1 )"		3963306	1					
ANR	3963536	Callee	memcmp		3963306	0					
ANR	3963537	Identifier	memcmp		3963306	0					
ANR	3963538	ArgumentList	ZSTR_VAL ( name )		3963306	1					
ANR	3963539	Argument	ZSTR_VAL ( name )		3963306	0					
ANR	3963540	CallExpression	ZSTR_VAL ( name )		3963306	0					
ANR	3963541	Callee	ZSTR_VAL		3963306	0					
ANR	3963542	Identifier	ZSTR_VAL		3963306	0					
ANR	3963543	ArgumentList	name		3963306	1					
ANR	3963544	Argument	name		3963306	0					
ANR	3963545	Identifier	name		3963306	0					
ANR	3963546	Argument	"""__COMPILER_HALT_OFFSET__"""		3963306	1					
ANR	3963547	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3963306	0					
ANR	3963548	Argument	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3963306	2					
ANR	3963549	AdditiveExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" ) - 1"		3963306	0		-			
ANR	3963550	SizeofExpression	"sizeof ( ""__COMPILER_HALT_OFFSET__"" )"		3963306	0					
ANR	3963551	Sizeof	sizeof		3963306	0					
ANR	3963552	PrimaryExpression	"""__COMPILER_HALT_OFFSET__"""		3963306	1					
ANR	3963553	PrimaryExpression	1		3963306	1					
ANR	3963554	EqualityExpression	"zend_hash_add_constant ( EG ( zend_constants ) , name , c ) == NULL"		3963306	1		==			
ANR	3963555	CallExpression	"zend_hash_add_constant ( EG ( zend_constants ) , name , c )"		3963306	0					
ANR	3963556	Callee	zend_hash_add_constant		3963306	0					
ANR	3963557	Identifier	zend_hash_add_constant		3963306	0					
ANR	3963558	ArgumentList	EG ( zend_constants )		3963306	1					
ANR	3963559	Argument	EG ( zend_constants )		3963306	0					
ANR	3963560	CallExpression	EG ( zend_constants )		3963306	0					
ANR	3963561	Callee	EG		3963306	0					
ANR	3963562	Identifier	EG		3963306	0					
ANR	3963563	ArgumentList	zend_constants		3963306	1					
ANR	3963564	Argument	zend_constants		3963306	0					
ANR	3963565	Identifier	zend_constants		3963306	0					
ANR	3963566	Argument	name		3963306	1					
ANR	3963567	Identifier	name		3963306	0					
ANR	3963568	Argument	c		3963306	2					
ANR	3963569	Identifier	c		3963306	0					
ANR	3963570	Identifier	NULL		3963306	1					
ANR	3963571	CompoundStatement		30:66:1162:1162	3963306	1					
ANR	3963572	IfStatement	"if ( ZSTR_VAL ( c -> name ) [ 0 ] == '\\0' && ZSTR_LEN ( c -> name ) > sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( ZSTR_VAL ( name ) , ""\\0__COMPILER_HALT_OFFSET__"" , sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) ) == 0 )"		3963306	0					
ANR	3963573	Condition	"ZSTR_VAL ( c -> name ) [ 0 ] == '\\0' && ZSTR_LEN ( c -> name ) > sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( ZSTR_VAL ( name ) , ""\\0__COMPILER_HALT_OFFSET__"" , sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) ) == 0"	504:6:16048:16239	3963306	0	True				
ANR	3963574	AndExpression	"ZSTR_VAL ( c -> name ) [ 0 ] == '\\0' && ZSTR_LEN ( c -> name ) > sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( ZSTR_VAL ( name ) , ""\\0__COMPILER_HALT_OFFSET__"" , sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) ) == 0"		3963306	0		&&			
ANR	3963575	EqualityExpression	ZSTR_VAL ( c -> name ) [ 0 ] == '\\0'		3963306	0		==			
ANR	3963576	ArrayIndexing	ZSTR_VAL ( c -> name ) [ 0 ]		3963306	0					
ANR	3963577	CallExpression	ZSTR_VAL ( c -> name )		3963306	0					
ANR	3963578	Callee	ZSTR_VAL		3963306	0					
ANR	3963579	Identifier	ZSTR_VAL		3963306	0					
ANR	3963580	ArgumentList	c -> name		3963306	1					
ANR	3963581	Argument	c -> name		3963306	0					
ANR	3963582	PtrMemberAccess	c -> name		3963306	0					
ANR	3963583	Identifier	c		3963306	0					
ANR	3963584	Identifier	name		3963306	1					
ANR	3963585	PrimaryExpression	0		3963306	1					
ANR	3963586	PrimaryExpression	'\\0'		3963306	1					
ANR	3963587	AndExpression	"ZSTR_LEN ( c -> name ) > sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) - 1 && memcmp ( ZSTR_VAL ( name ) , ""\\0__COMPILER_HALT_OFFSET__"" , sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) ) == 0"		3963306	1		&&			
ANR	3963588	RelationalExpression	"ZSTR_LEN ( c -> name ) > sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) - 1"		3963306	0		>			
ANR	3963589	CallExpression	ZSTR_LEN ( c -> name )		3963306	0					
ANR	3963590	Callee	ZSTR_LEN		3963306	0					
ANR	3963591	Identifier	ZSTR_LEN		3963306	0					
ANR	3963592	ArgumentList	c -> name		3963306	1					
ANR	3963593	Argument	c -> name		3963306	0					
ANR	3963594	PtrMemberAccess	c -> name		3963306	0					
ANR	3963595	Identifier	c		3963306	0					
ANR	3963596	Identifier	name		3963306	1					
ANR	3963597	AdditiveExpression	"sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) - 1"		3963306	1		-			
ANR	3963598	SizeofExpression	"sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" )"		3963306	0					
ANR	3963599	Sizeof	sizeof		3963306	0					
ANR	3963600	PrimaryExpression	"""\\0__COMPILER_HALT_OFFSET__"""		3963306	1					
ANR	3963601	PrimaryExpression	1		3963306	1					
ANR	3963602	EqualityExpression	"memcmp ( ZSTR_VAL ( name ) , ""\\0__COMPILER_HALT_OFFSET__"" , sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) ) == 0"		3963306	1		==			
ANR	3963603	CallExpression	"memcmp ( ZSTR_VAL ( name ) , ""\\0__COMPILER_HALT_OFFSET__"" , sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" ) )"		3963306	0					
ANR	3963604	Callee	memcmp		3963306	0					
ANR	3963605	Identifier	memcmp		3963306	0					
ANR	3963606	ArgumentList	ZSTR_VAL ( name )		3963306	1					
ANR	3963607	Argument	ZSTR_VAL ( name )		3963306	0					
ANR	3963608	CallExpression	ZSTR_VAL ( name )		3963306	0					
ANR	3963609	Callee	ZSTR_VAL		3963306	0					
ANR	3963610	Identifier	ZSTR_VAL		3963306	0					
ANR	3963611	ArgumentList	name		3963306	1					
ANR	3963612	Argument	name		3963306	0					
ANR	3963613	Identifier	name		3963306	0					
ANR	3963614	Argument	"""\\0__COMPILER_HALT_OFFSET__"""		3963306	1					
ANR	3963615	PrimaryExpression	"""\\0__COMPILER_HALT_OFFSET__"""		3963306	0					
ANR	3963616	Argument	"sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" )"		3963306	2					
ANR	3963617	SizeofExpression	"sizeof ( ""\\0__COMPILER_HALT_OFFSET__"" )"		3963306	0					
ANR	3963618	Sizeof	sizeof		3963306	0					
ANR	3963619	PrimaryExpression	"""\\0__COMPILER_HALT_OFFSET__"""		3963306	1					
ANR	3963620	PrimaryExpression	0		3963306	1					
ANR	3963621	CompoundStatement		34:103:1436:1436	3963306	1					
ANR	3963622	ExpressionStatement	"zend_error ( E_NOTICE , ""Constant %s already defined"" , ZSTR_VAL ( name ) )"	507:2:16250:16316	3963306	1	True				
ANR	3963623	CallExpression	"zend_error ( E_NOTICE , ""Constant %s already defined"" , ZSTR_VAL ( name ) )"		3963306	0					
ANR	3963624	Callee	zend_error		3963306	0					
ANR	3963625	Identifier	zend_error		3963306	0					
ANR	3963626	ArgumentList	E_NOTICE		3963306	1					
ANR	3963627	Argument	E_NOTICE		3963306	0					
ANR	3963628	Identifier	E_NOTICE		3963306	0					
ANR	3963629	Argument	"""Constant %s already defined"""		3963306	1					
ANR	3963630	PrimaryExpression	"""Constant %s already defined"""		3963306	0					
ANR	3963631	Argument	ZSTR_VAL ( name )		3963306	2					
ANR	3963632	CallExpression	ZSTR_VAL ( name )		3963306	0					
ANR	3963633	Callee	ZSTR_VAL		3963306	0					
ANR	3963634	Identifier	ZSTR_VAL		3963306	0					
ANR	3963635	ArgumentList	name		3963306	1					
ANR	3963636	Argument	name		3963306	0					
ANR	3963637	Identifier	name		3963306	0					
ANR	3963638	ExpressionStatement	zend_string_release ( c -> name )	508:2:16320:16348	3963306	2	True				
ANR	3963639	CallExpression	zend_string_release ( c -> name )		3963306	0					
ANR	3963640	Callee	zend_string_release		3963306	0					
ANR	3963641	Identifier	zend_string_release		3963306	0					
ANR	3963642	ArgumentList	c -> name		3963306	1					
ANR	3963643	Argument	c -> name		3963306	0					
ANR	3963644	PtrMemberAccess	c -> name		3963306	0					
ANR	3963645	Identifier	c		3963306	0					
ANR	3963646	Identifier	name		3963306	1					
ANR	3963647	IfStatement	if ( ! ( c -> flags & CONST_PERSISTENT ) )		3963306	3					
ANR	3963648	Condition	! ( c -> flags & CONST_PERSISTENT )	509:6:16356:16385	3963306	0	True				
ANR	3963649	UnaryOperationExpression	! ( c -> flags & CONST_PERSISTENT )		3963306	0					
ANR	3963650	UnaryOperator	!		3963306	0					
ANR	3963651	BitAndExpression	c -> flags & CONST_PERSISTENT		3963306	1		&			
ANR	3963652	PtrMemberAccess	c -> flags		3963306	0					
ANR	3963653	Identifier	c		3963306	0					
ANR	3963654	Identifier	flags		3963306	1					
ANR	3963655	Identifier	CONST_PERSISTENT		3963306	1					
ANR	3963656	CompoundStatement		38:38:1582:1582	3963306	1					
ANR	3963657	ExpressionStatement	zval_dtor ( & c -> value )	510:3:16393:16413	3963306	0	True				
ANR	3963658	CallExpression	zval_dtor ( & c -> value )		3963306	0					
ANR	3963659	Callee	zval_dtor		3963306	0					
ANR	3963660	Identifier	zval_dtor		3963306	0					
ANR	3963661	ArgumentList	& c -> value		3963306	1					
ANR	3963662	Argument	& c -> value		3963306	0					
ANR	3963663	UnaryOperationExpression	& c -> value		3963306	0					
ANR	3963664	UnaryOperator	&		3963306	0					
ANR	3963665	PtrMemberAccess	c -> value		3963306	1					
ANR	3963666	Identifier	c		3963306	0					
ANR	3963667	Identifier	value		3963306	1					
ANR	3963668	ExpressionStatement	ret = FAILURE	512:2:16421:16434	3963306	4	True				
ANR	3963669	AssignmentExpression	ret = FAILURE		3963306	0		=			
ANR	3963670	Identifier	ret		3963306	0					
ANR	3963671	Identifier	FAILURE		3963306	1					
ANR	3963672	IfStatement	if ( lowercase_name )		3963306	6					
ANR	3963673	Condition	lowercase_name	514:5:16444:16457	3963306	0	True				
ANR	3963674	Identifier	lowercase_name		3963306	0					
ANR	3963675	CompoundStatement		43:21:1654:1654	3963306	1					
ANR	3963676	ExpressionStatement	zend_string_release ( lowercase_name )	515:2:16464:16499	3963306	0	True				
ANR	3963677	CallExpression	zend_string_release ( lowercase_name )		3963306	0					
ANR	3963678	Callee	zend_string_release		3963306	0					
ANR	3963679	Identifier	zend_string_release		3963306	0					
ANR	3963680	ArgumentList	lowercase_name		3963306	1					
ANR	3963681	Argument	lowercase_name		3963306	0					
ANR	3963682	Identifier	lowercase_name		3963306	0					
ANR	3963683	ReturnStatement	return ret ;	517:1:16505:16515	3963306	7	True				
ANR	3963684	Identifier	ret		3963306	0					
ANR	3963685	ReturnType	ZEND_API int		3963306	1					
ANR	3963686	Identifier	zend_register_constant		3963306	2					
ANR	3963687	ParameterList	zend_constant * c		3963306	3					
ANR	3963688	Parameter	zend_constant * c	471:36:14787:14802	3963306	0	True				
ANR	3963689	ParameterType	zend_constant *		3963306	0					
ANR	3963690	Identifier	c		3963306	1					
ANR	3963691	CFGEntryNode	ENTRY		3963306		True				
ANR	3963692	CFGExitNode	EXIT		3963306		True				
ANR	3963693	Symbol	c -> flags		3963306						
ANR	3963694	Symbol	c -> name		3963306						
ANR	3963695	Symbol	zend_string_init		3963306						
ANR	3963696	Symbol	& c -> value		3963306						
ANR	3963697	Symbol	memcmp		3963306						
ANR	3963698	Symbol	zend_constants		3963306						
ANR	3963699	Symbol	CONST_PERSISTENT		3963306						
ANR	3963700	Symbol	* ZSTR_VAL		3963306						
ANR	3963701	Symbol	ret		3963306						
ANR	3963702	Symbol	CONST_CS		3963306						
ANR	3963703	Symbol	zend_string_alloc		3963306						
ANR	3963704	Symbol	EG		3963306						
ANR	3963705	Symbol	c		3963306						
ANR	3963706	Symbol	NULL		3963306						
ANR	3963707	Symbol	SUCCESS		3963306						
ANR	3963708	Symbol	E_NOTICE		3963306						
ANR	3963709	Symbol	* c		3963306						
ANR	3963710	Symbol	FAILURE		3963306						
ANR	3963711	Symbol	ZSTR_VAL		3963306						
ANR	3963712	Symbol	zend_new_interned_string		3963306						
ANR	3963713	Symbol	c -> module_number		3963306						
ANR	3963714	Symbol	strrchr		3963306						
ANR	3963715	Symbol	zend_hash_add_constant		3963306						
ANR	3963716	Symbol	name		3963306						
ANR	3963717	Symbol	ZSTR_LEN		3963306						
ANR	3963718	Symbol	lowercase_name		3963306						
ANR	3963719	Symbol	slash		3963306						
