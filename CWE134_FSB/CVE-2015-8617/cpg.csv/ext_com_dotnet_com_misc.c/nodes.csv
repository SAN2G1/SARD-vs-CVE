command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	516582	File	data/converged/CVE-2015-8617_php-src/ext_com_dotnet_com_misc.c								
ANR	516583	Function	php_com_throw_exception	32:0:1378:1793							
ANR	516584	FunctionDef	"php_com_throw_exception (HRESULT code , char * message)"		516583	0					
ANR	516585	CompoundStatement		33:0:1436:1793	516583	0					
ANR	516586	IdentifierDeclStatement	int free_msg = 0 ;	34:1:1439:1455	516583	0	True				
ANR	516587	IdentifierDecl	free_msg = 0		516583	0					
ANR	516588	IdentifierDeclType	int		516583	0					
ANR	516589	Identifier	free_msg		516583	1					
ANR	516590	AssignmentExpression	free_msg = 0		516583	2		=			
ANR	516591	Identifier	free_msg		516583	0					
ANR	516592	PrimaryExpression	0		516583	1					
ANR	516593	IfStatement	if ( message == NULL )		516583	1					
ANR	516594	Condition	message == NULL	35:5:1462:1476	516583	0	True				
ANR	516595	EqualityExpression	message == NULL		516583	0		==			
ANR	516596	Identifier	message		516583	0					
ANR	516597	Identifier	NULL		516583	1					
ANR	516598	CompoundStatement		3:22:42:42	516583	1					
ANR	516599	ExpressionStatement	message = php_win32_error_to_msg ( code )	36:2:1483:1521	516583	0	True				
ANR	516600	AssignmentExpression	message = php_win32_error_to_msg ( code )		516583	0		=			
ANR	516601	Identifier	message		516583	0					
ANR	516602	CallExpression	php_win32_error_to_msg ( code )		516583	1					
ANR	516603	Callee	php_win32_error_to_msg		516583	0					
ANR	516604	Identifier	php_win32_error_to_msg		516583	0					
ANR	516605	ArgumentList	code		516583	1					
ANR	516606	Argument	code		516583	0					
ANR	516607	Identifier	code		516583	0					
ANR	516608	ExpressionStatement	free_msg = 1	37:2:1525:1537	516583	1	True				
ANR	516609	AssignmentExpression	free_msg = 1		516583	0		=			
ANR	516610	Identifier	free_msg		516583	0					
ANR	516611	PrimaryExpression	1		516583	1					
ANR	516612	ExpressionStatement	"zend_throw_exception ( php_com_exception_class_entry , message , ( zend_long ) ( uint32_t ) code )"	40:1:1569:1656	516583	2	True				
ANR	516613	CallExpression	"zend_throw_exception ( php_com_exception_class_entry , message , ( zend_long ) ( uint32_t ) code )"		516583	0					
ANR	516614	Callee	zend_throw_exception		516583	0					
ANR	516615	Identifier	zend_throw_exception		516583	0					
ANR	516616	ArgumentList	php_com_exception_class_entry		516583	1					
ANR	516617	Argument	php_com_exception_class_entry		516583	0					
ANR	516618	Identifier	php_com_exception_class_entry		516583	0					
ANR	516619	Argument	message		516583	1					
ANR	516620	Identifier	message		516583	0					
ANR	516621	Argument	( zend_long ) ( uint32_t ) code		516583	2					
ANR	516622	CastExpression	( zend_long ) ( uint32_t ) code		516583	0					
ANR	516623	CastTarget	zend_long		516583	0					
ANR	516624	CastExpression	( uint32_t ) code		516583	1					
ANR	516625	CastTarget	uint32_t		516583	0					
ANR	516626	Identifier	code		516583	1					
ANR	516627	IfStatement	if ( free_msg )		516583	3					
ANR	516628	Condition	free_msg	44:5:1756:1763	516583	0	True				
ANR	516629	Identifier	free_msg		516583	0					
ANR	516630	CompoundStatement		12:15:329:329	516583	1					
ANR	516631	ExpressionStatement	LocalFree ( message )	45:2:1770:1788	516583	0	True				
ANR	516632	CallExpression	LocalFree ( message )		516583	0					
ANR	516633	Callee	LocalFree		516583	0					
ANR	516634	Identifier	LocalFree		516583	0					
ANR	516635	ArgumentList	message		516583	1					
ANR	516636	Argument	message		516583	0					
ANR	516637	Identifier	message		516583	0					
ANR	516638	ReturnType	void		516583	1					
ANR	516639	Identifier	php_com_throw_exception		516583	2					
ANR	516640	ParameterList	"HRESULT code , char * message"		516583	3					
ANR	516641	Parameter	HRESULT code	32:29:1407:1418	516583	0	True				
ANR	516642	ParameterType	HRESULT		516583	0					
ANR	516643	Identifier	code		516583	1					
ANR	516644	Parameter	char * message	32:43:1421:1433	516583	1	True				
ANR	516645	ParameterType	char *		516583	0					
ANR	516646	Identifier	message		516583	1					
ANR	516647	CFGEntryNode	ENTRY		516583		True				
ANR	516648	CFGExitNode	EXIT		516583		True				
ANR	516649	Symbol	php_com_exception_class_entry		516583						
ANR	516650	Symbol	php_win32_error_to_msg		516583						
ANR	516651	Symbol	code		516583						
ANR	516652	Symbol	NULL		516583						
ANR	516653	Symbol	message		516583						
ANR	516654	Symbol	free_msg		516583						
ANR	516655	Function	php_com_wrap_dispatch	49:0:1796:2423							
ANR	516656	FunctionDef	"php_com_wrap_dispatch (zval * z , IDispatch * disp , int codepage)"		516655	0					
ANR	516657	CompoundStatement		51:0:1884:2423	516655	0					
ANR	516658	IdentifierDeclStatement	php_com_dotnet_object * obj ;	52:1:1887:1913	516655	0	True				
ANR	516659	IdentifierDecl	* obj		516655	0					
ANR	516660	IdentifierDeclType	php_com_dotnet_object *		516655	0					
ANR	516661	Identifier	obj		516655	1					
ANR	516662	ExpressionStatement	obj = emalloc ( sizeof ( * obj ) )	54:1:1917:1944	516655	1	True				
ANR	516663	AssignmentExpression	obj = emalloc ( sizeof ( * obj ) )		516655	0		=			
ANR	516664	Identifier	obj		516655	0					
ANR	516665	CallExpression	emalloc ( sizeof ( * obj ) )		516655	1					
ANR	516666	Callee	emalloc		516655	0					
ANR	516667	Identifier	emalloc		516655	0					
ANR	516668	ArgumentList	sizeof ( * obj )		516655	1					
ANR	516669	Argument	sizeof ( * obj )		516655	0					
ANR	516670	SizeofExpression	sizeof ( * obj )		516655	0					
ANR	516671	Sizeof	sizeof		516655	0					
ANR	516672	UnaryOperationExpression	* obj		516655	1					
ANR	516673	UnaryOperator	*		516655	0					
ANR	516674	Identifier	obj		516655	1					
ANR	516675	ExpressionStatement	"memset ( obj , 0 , sizeof ( * obj ) )"	55:1:1947:1975	516655	2	True				
ANR	516676	CallExpression	"memset ( obj , 0 , sizeof ( * obj ) )"		516655	0					
ANR	516677	Callee	memset		516655	0					
ANR	516678	Identifier	memset		516655	0					
ANR	516679	ArgumentList	obj		516655	1					
ANR	516680	Argument	obj		516655	0					
ANR	516681	Identifier	obj		516655	0					
ANR	516682	Argument	0		516655	1					
ANR	516683	PrimaryExpression	0		516655	0					
ANR	516684	Argument	sizeof ( * obj )		516655	2					
ANR	516685	SizeofExpression	sizeof ( * obj )		516655	0					
ANR	516686	Sizeof	sizeof		516655	0					
ANR	516687	UnaryOperationExpression	* obj		516655	1					
ANR	516688	UnaryOperator	*		516655	0					
ANR	516689	Identifier	obj		516655	1					
ANR	516690	ExpressionStatement	obj -> code_page = codepage	56:1:1978:2003	516655	3	True				
ANR	516691	AssignmentExpression	obj -> code_page = codepage		516655	0		=			
ANR	516692	PtrMemberAccess	obj -> code_page		516655	0					
ANR	516693	Identifier	obj		516655	0					
ANR	516694	Identifier	code_page		516655	1					
ANR	516695	Identifier	codepage		516655	1					
ANR	516696	ExpressionStatement	obj -> ce = php_com_variant_class_entry	57:1:2006:2043	516655	4	True				
ANR	516697	AssignmentExpression	obj -> ce = php_com_variant_class_entry		516655	0		=			
ANR	516698	PtrMemberAccess	obj -> ce		516655	0					
ANR	516699	Identifier	obj		516655	0					
ANR	516700	Identifier	ce		516655	1					
ANR	516701	Identifier	php_com_variant_class_entry		516655	1					
ANR	516702	ExpressionStatement	obj -> zo . ce = php_com_variant_class_entry	58:1:2046:2086	516655	5	True				
ANR	516703	AssignmentExpression	obj -> zo . ce = php_com_variant_class_entry		516655	0		=			
ANR	516704	MemberAccess	obj -> zo . ce		516655	0					
ANR	516705	PtrMemberAccess	obj -> zo		516655	0					
ANR	516706	Identifier	obj		516655	0					
ANR	516707	Identifier	zo		516655	1					
ANR	516708	Identifier	ce		516655	1					
ANR	516709	Identifier	php_com_variant_class_entry		516655	1					
ANR	516710	ExpressionStatement	VariantInit ( & obj -> v )	60:1:2090:2110	516655	6	True				
ANR	516711	CallExpression	VariantInit ( & obj -> v )		516655	0					
ANR	516712	Callee	VariantInit		516655	0					
ANR	516713	Identifier	VariantInit		516655	0					
ANR	516714	ArgumentList	& obj -> v		516655	1					
ANR	516715	Argument	& obj -> v		516655	0					
ANR	516716	UnaryOperationExpression	& obj -> v		516655	0					
ANR	516717	UnaryOperator	&		516655	0					
ANR	516718	PtrMemberAccess	obj -> v		516655	1					
ANR	516719	Identifier	obj		516655	0					
ANR	516720	Identifier	v		516655	1					
ANR	516721	ExpressionStatement	V_VT ( & obj -> v ) = VT_DISPATCH	61:1:2113:2140	516655	7	True				
ANR	516722	AssignmentExpression	V_VT ( & obj -> v ) = VT_DISPATCH		516655	0		=			
ANR	516723	CallExpression	V_VT ( & obj -> v )		516655	0					
ANR	516724	Callee	V_VT		516655	0					
ANR	516725	Identifier	V_VT		516655	0					
ANR	516726	ArgumentList	& obj -> v		516655	1					
ANR	516727	Argument	& obj -> v		516655	0					
ANR	516728	UnaryOperationExpression	& obj -> v		516655	0					
ANR	516729	UnaryOperator	&		516655	0					
ANR	516730	PtrMemberAccess	obj -> v		516655	1					
ANR	516731	Identifier	obj		516655	0					
ANR	516732	Identifier	v		516655	1					
ANR	516733	Identifier	VT_DISPATCH		516655	1					
ANR	516734	ExpressionStatement	V_DISPATCH ( & obj -> v ) = disp	62:1:2143:2169	516655	8	True				
ANR	516735	AssignmentExpression	V_DISPATCH ( & obj -> v ) = disp		516655	0		=			
ANR	516736	CallExpression	V_DISPATCH ( & obj -> v )		516655	0					
ANR	516737	Callee	V_DISPATCH		516655	0					
ANR	516738	Identifier	V_DISPATCH		516655	0					
ANR	516739	ArgumentList	& obj -> v		516655	1					
ANR	516740	Argument	& obj -> v		516655	0					
ANR	516741	UnaryOperationExpression	& obj -> v		516655	0					
ANR	516742	UnaryOperator	&		516655	0					
ANR	516743	PtrMemberAccess	obj -> v		516655	1					
ANR	516744	Identifier	obj		516655	0					
ANR	516745	Identifier	v		516655	1					
ANR	516746	Identifier	disp		516655	1					
ANR	516747	ExpressionStatement	IDispatch_AddRef ( V_DISPATCH ( & obj -> v ) )	64:1:2173:2210	516655	9	True				
ANR	516748	CallExpression	IDispatch_AddRef ( V_DISPATCH ( & obj -> v ) )		516655	0					
ANR	516749	Callee	IDispatch_AddRef		516655	0					
ANR	516750	Identifier	IDispatch_AddRef		516655	0					
ANR	516751	ArgumentList	V_DISPATCH ( & obj -> v )		516655	1					
ANR	516752	Argument	V_DISPATCH ( & obj -> v )		516655	0					
ANR	516753	CallExpression	V_DISPATCH ( & obj -> v )		516655	0					
ANR	516754	Callee	V_DISPATCH		516655	0					
ANR	516755	Identifier	V_DISPATCH		516655	0					
ANR	516756	ArgumentList	& obj -> v		516655	1					
ANR	516757	Argument	& obj -> v		516655	0					
ANR	516758	UnaryOperationExpression	& obj -> v		516655	0					
ANR	516759	UnaryOperator	&		516655	0					
ANR	516760	PtrMemberAccess	obj -> v		516655	1					
ANR	516761	Identifier	obj		516655	0					
ANR	516762	Identifier	v		516655	1					
ANR	516763	ExpressionStatement	"IDispatch_GetTypeInfo ( V_DISPATCH ( & obj -> v ) , 0 , LANG_NEUTRAL , & obj -> typeinfo )"	65:1:2213:2288	516655	10	True				
ANR	516764	CallExpression	"IDispatch_GetTypeInfo ( V_DISPATCH ( & obj -> v ) , 0 , LANG_NEUTRAL , & obj -> typeinfo )"		516655	0					
ANR	516765	Callee	IDispatch_GetTypeInfo		516655	0					
ANR	516766	Identifier	IDispatch_GetTypeInfo		516655	0					
ANR	516767	ArgumentList	V_DISPATCH ( & obj -> v )		516655	1					
ANR	516768	Argument	V_DISPATCH ( & obj -> v )		516655	0					
ANR	516769	CallExpression	V_DISPATCH ( & obj -> v )		516655	0					
ANR	516770	Callee	V_DISPATCH		516655	0					
ANR	516771	Identifier	V_DISPATCH		516655	0					
ANR	516772	ArgumentList	& obj -> v		516655	1					
ANR	516773	Argument	& obj -> v		516655	0					
ANR	516774	UnaryOperationExpression	& obj -> v		516655	0					
ANR	516775	UnaryOperator	&		516655	0					
ANR	516776	PtrMemberAccess	obj -> v		516655	1					
ANR	516777	Identifier	obj		516655	0					
ANR	516778	Identifier	v		516655	1					
ANR	516779	Argument	0		516655	1					
ANR	516780	PrimaryExpression	0		516655	0					
ANR	516781	Argument	LANG_NEUTRAL		516655	2					
ANR	516782	Identifier	LANG_NEUTRAL		516655	0					
ANR	516783	Argument	& obj -> typeinfo		516655	3					
ANR	516784	UnaryOperationExpression	& obj -> typeinfo		516655	0					
ANR	516785	UnaryOperator	&		516655	0					
ANR	516786	PtrMemberAccess	obj -> typeinfo		516655	1					
ANR	516787	Identifier	obj		516655	0					
ANR	516788	Identifier	typeinfo		516655	1					
ANR	516789	ExpressionStatement	"zend_object_std_init ( & obj -> zo , php_com_variant_class_entry )"	67:1:2292:2351	516655	11	True				
ANR	516790	CallExpression	"zend_object_std_init ( & obj -> zo , php_com_variant_class_entry )"		516655	0					
ANR	516791	Callee	zend_object_std_init		516655	0					
ANR	516792	Identifier	zend_object_std_init		516655	0					
ANR	516793	ArgumentList	& obj -> zo		516655	1					
ANR	516794	Argument	& obj -> zo		516655	0					
ANR	516795	UnaryOperationExpression	& obj -> zo		516655	0					
ANR	516796	UnaryOperator	&		516655	0					
ANR	516797	PtrMemberAccess	obj -> zo		516655	1					
ANR	516798	Identifier	obj		516655	0					
ANR	516799	Identifier	zo		516655	1					
ANR	516800	Argument	php_com_variant_class_entry		516655	1					
ANR	516801	Identifier	php_com_variant_class_entry		516655	0					
ANR	516802	ExpressionStatement	obj -> zo . handlers = & php_com_object_handlers	68:1:2354:2397	516655	12	True				
ANR	516803	AssignmentExpression	obj -> zo . handlers = & php_com_object_handlers		516655	0		=			
ANR	516804	MemberAccess	obj -> zo . handlers		516655	0					
ANR	516805	PtrMemberAccess	obj -> zo		516655	0					
ANR	516806	Identifier	obj		516655	0					
ANR	516807	Identifier	zo		516655	1					
ANR	516808	Identifier	handlers		516655	1					
ANR	516809	UnaryOperationExpression	& php_com_object_handlers		516655	1					
ANR	516810	UnaryOperator	&		516655	0					
ANR	516811	Identifier	php_com_object_handlers		516655	1					
ANR	516812	ExpressionStatement	"ZVAL_OBJ ( z , & obj -> zo )"	69:1:2400:2421	516655	13	True				
ANR	516813	CallExpression	"ZVAL_OBJ ( z , & obj -> zo )"		516655	0					
ANR	516814	Callee	ZVAL_OBJ		516655	0					
ANR	516815	Identifier	ZVAL_OBJ		516655	0					
ANR	516816	ArgumentList	z		516655	1					
ANR	516817	Argument	z		516655	0					
ANR	516818	Identifier	z		516655	0					
ANR	516819	Argument	& obj -> zo		516655	1					
ANR	516820	UnaryOperationExpression	& obj -> zo		516655	0					
ANR	516821	UnaryOperator	&		516655	0					
ANR	516822	PtrMemberAccess	obj -> zo		516655	1					
ANR	516823	Identifier	obj		516655	0					
ANR	516824	Identifier	zo		516655	1					
ANR	516825	ReturnType	PHP_COM_DOTNET_API void		516655	1					
ANR	516826	Identifier	php_com_wrap_dispatch		516655	2					
ANR	516827	ParameterList	"zval * z , IDispatch * disp , int codepage"		516655	3					
ANR	516828	Parameter	zval * z	49:46:1842:1848	516655	0	True				
ANR	516829	ParameterType	zval *		516655	0					
ANR	516830	Identifier	z		516655	1					
ANR	516831	Parameter	IDispatch * disp	49:55:1851:1865	516655	1	True				
ANR	516832	ParameterType	IDispatch *		516655	0					
ANR	516833	Identifier	disp		516655	1					
ANR	516834	Parameter	int codepage	50:2:1870:1881	516655	2	True				
ANR	516835	ParameterType	int		516655	0					
ANR	516836	Identifier	codepage		516655	1					
ANR	516837	CFGEntryNode	ENTRY		516655		True				
ANR	516838	CFGExitNode	EXIT		516655		True				
ANR	516839	Symbol	* obj		516655						
ANR	516840	Symbol	& obj -> typeinfo		516655						
ANR	516841	Symbol	LANG_NEUTRAL		516655						
ANR	516842	Symbol	& obj -> zo		516655						
ANR	516843	Symbol	obj -> zo . ce		516655						
ANR	516844	Symbol	VT_DISPATCH		516655						
ANR	516845	Symbol	obj -> code_page		516655						
ANR	516846	Symbol	codepage		516655						
ANR	516847	Symbol	disp		516655						
ANR	516848	Symbol	obj -> ce		516655						
ANR	516849	Symbol	php_com_variant_class_entry		516655						
ANR	516850	Symbol	V_VT		516655						
ANR	516851	Symbol	emalloc		516655						
ANR	516852	Symbol	V_DISPATCH		516655						
ANR	516853	Symbol	obj		516655						
ANR	516854	Symbol	obj -> zo . handlers		516655						
ANR	516855	Symbol	& obj -> v		516655						
ANR	516856	Symbol	z		516655						
ANR	516857	Symbol	& php_com_object_handlers		516655						
ANR	516858	Symbol	obj -> zo		516655						
ANR	516859	Function	php_com_wrap_variant	72:0:2426:3073							
ANR	516860	FunctionDef	"php_com_wrap_variant (zval * z , VARIANT * v , int codepage)"		516859	0					
ANR	516861	CompoundStatement		74:0:2508:3073	516859	0					
ANR	516862	IdentifierDeclStatement	php_com_dotnet_object * obj ;	75:1:2511:2537	516859	0	True				
ANR	516863	IdentifierDecl	* obj		516859	0					
ANR	516864	IdentifierDeclType	php_com_dotnet_object *		516859	0					
ANR	516865	Identifier	obj		516859	1					
ANR	516866	ExpressionStatement	obj = emalloc ( sizeof ( * obj ) )	77:1:2541:2568	516859	1	True				
ANR	516867	AssignmentExpression	obj = emalloc ( sizeof ( * obj ) )		516859	0		=			
ANR	516868	Identifier	obj		516859	0					
ANR	516869	CallExpression	emalloc ( sizeof ( * obj ) )		516859	1					
ANR	516870	Callee	emalloc		516859	0					
ANR	516871	Identifier	emalloc		516859	0					
ANR	516872	ArgumentList	sizeof ( * obj )		516859	1					
ANR	516873	Argument	sizeof ( * obj )		516859	0					
ANR	516874	SizeofExpression	sizeof ( * obj )		516859	0					
ANR	516875	Sizeof	sizeof		516859	0					
ANR	516876	UnaryOperationExpression	* obj		516859	1					
ANR	516877	UnaryOperator	*		516859	0					
ANR	516878	Identifier	obj		516859	1					
ANR	516879	ExpressionStatement	"memset ( obj , 0 , sizeof ( * obj ) )"	78:1:2571:2599	516859	2	True				
ANR	516880	CallExpression	"memset ( obj , 0 , sizeof ( * obj ) )"		516859	0					
ANR	516881	Callee	memset		516859	0					
ANR	516882	Identifier	memset		516859	0					
ANR	516883	ArgumentList	obj		516859	1					
ANR	516884	Argument	obj		516859	0					
ANR	516885	Identifier	obj		516859	0					
ANR	516886	Argument	0		516859	1					
ANR	516887	PrimaryExpression	0		516859	0					
ANR	516888	Argument	sizeof ( * obj )		516859	2					
ANR	516889	SizeofExpression	sizeof ( * obj )		516859	0					
ANR	516890	Sizeof	sizeof		516859	0					
ANR	516891	UnaryOperationExpression	* obj		516859	1					
ANR	516892	UnaryOperator	*		516859	0					
ANR	516893	Identifier	obj		516859	1					
ANR	516894	ExpressionStatement	obj -> code_page = codepage	79:1:2602:2627	516859	3	True				
ANR	516895	AssignmentExpression	obj -> code_page = codepage		516859	0		=			
ANR	516896	PtrMemberAccess	obj -> code_page		516859	0					
ANR	516897	Identifier	obj		516859	0					
ANR	516898	Identifier	code_page		516859	1					
ANR	516899	Identifier	codepage		516859	1					
ANR	516900	ExpressionStatement	obj -> ce = php_com_variant_class_entry	80:1:2630:2667	516859	4	True				
ANR	516901	AssignmentExpression	obj -> ce = php_com_variant_class_entry		516859	0		=			
ANR	516902	PtrMemberAccess	obj -> ce		516859	0					
ANR	516903	Identifier	obj		516859	0					
ANR	516904	Identifier	ce		516859	1					
ANR	516905	Identifier	php_com_variant_class_entry		516859	1					
ANR	516906	ExpressionStatement	obj -> zo . ce = php_com_variant_class_entry	81:1:2670:2710	516859	5	True				
ANR	516907	AssignmentExpression	obj -> zo . ce = php_com_variant_class_entry		516859	0		=			
ANR	516908	MemberAccess	obj -> zo . ce		516859	0					
ANR	516909	PtrMemberAccess	obj -> zo		516859	0					
ANR	516910	Identifier	obj		516859	0					
ANR	516911	Identifier	zo		516859	1					
ANR	516912	Identifier	ce		516859	1					
ANR	516913	Identifier	php_com_variant_class_entry		516859	1					
ANR	516914	ExpressionStatement	VariantInit ( & obj -> v )	83:1:2714:2734	516859	6	True				
ANR	516915	CallExpression	VariantInit ( & obj -> v )		516859	0					
ANR	516916	Callee	VariantInit		516859	0					
ANR	516917	Identifier	VariantInit		516859	0					
ANR	516918	ArgumentList	& obj -> v		516859	1					
ANR	516919	Argument	& obj -> v		516859	0					
ANR	516920	UnaryOperationExpression	& obj -> v		516859	0					
ANR	516921	UnaryOperator	&		516859	0					
ANR	516922	PtrMemberAccess	obj -> v		516859	1					
ANR	516923	Identifier	obj		516859	0					
ANR	516924	Identifier	v		516859	1					
ANR	516925	ExpressionStatement	"VariantCopyInd ( & obj -> v , v )"	84:1:2737:2763	516859	7	True				
ANR	516926	CallExpression	"VariantCopyInd ( & obj -> v , v )"		516859	0					
ANR	516927	Callee	VariantCopyInd		516859	0					
ANR	516928	Identifier	VariantCopyInd		516859	0					
ANR	516929	ArgumentList	& obj -> v		516859	1					
ANR	516930	Argument	& obj -> v		516859	0					
ANR	516931	UnaryOperationExpression	& obj -> v		516859	0					
ANR	516932	UnaryOperator	&		516859	0					
ANR	516933	PtrMemberAccess	obj -> v		516859	1					
ANR	516934	Identifier	obj		516859	0					
ANR	516935	Identifier	v		516859	1					
ANR	516936	Argument	v		516859	1					
ANR	516937	Identifier	v		516859	0					
ANR	516938	ExpressionStatement	obj -> modified = 0	85:1:2766:2783	516859	8	True				
ANR	516939	AssignmentExpression	obj -> modified = 0		516859	0		=			
ANR	516940	PtrMemberAccess	obj -> modified		516859	0					
ANR	516941	Identifier	obj		516859	0					
ANR	516942	Identifier	modified		516859	1					
ANR	516943	PrimaryExpression	0		516859	1					
ANR	516944	IfStatement	if ( ( V_VT ( & obj -> v ) == VT_DISPATCH ) && ( V_DISPATCH ( & obj -> v ) != NULL ) )		516859	9					
ANR	516945	Condition	( V_VT ( & obj -> v ) == VT_DISPATCH ) && ( V_DISPATCH ( & obj -> v ) != NULL )	87:5:2791:2853	516859	0	True				
ANR	516946	AndExpression	( V_VT ( & obj -> v ) == VT_DISPATCH ) && ( V_DISPATCH ( & obj -> v ) != NULL )		516859	0		&&			
ANR	516947	EqualityExpression	V_VT ( & obj -> v ) == VT_DISPATCH		516859	0		==			
ANR	516948	CallExpression	V_VT ( & obj -> v )		516859	0					
ANR	516949	Callee	V_VT		516859	0					
ANR	516950	Identifier	V_VT		516859	0					
ANR	516951	ArgumentList	& obj -> v		516859	1					
ANR	516952	Argument	& obj -> v		516859	0					
ANR	516953	UnaryOperationExpression	& obj -> v		516859	0					
ANR	516954	UnaryOperator	&		516859	0					
ANR	516955	PtrMemberAccess	obj -> v		516859	1					
ANR	516956	Identifier	obj		516859	0					
ANR	516957	Identifier	v		516859	1					
ANR	516958	Identifier	VT_DISPATCH		516859	1					
ANR	516959	EqualityExpression	V_DISPATCH ( & obj -> v ) != NULL		516859	1		!=			
ANR	516960	CallExpression	V_DISPATCH ( & obj -> v )		516859	0					
ANR	516961	Callee	V_DISPATCH		516859	0					
ANR	516962	Identifier	V_DISPATCH		516859	0					
ANR	516963	ArgumentList	& obj -> v		516859	1					
ANR	516964	Argument	& obj -> v		516859	0					
ANR	516965	UnaryOperationExpression	& obj -> v		516859	0					
ANR	516966	UnaryOperator	&		516859	0					
ANR	516967	PtrMemberAccess	obj -> v		516859	1					
ANR	516968	Identifier	obj		516859	0					
ANR	516969	Identifier	v		516859	1					
ANR	516970	Identifier	NULL		516859	1					
ANR	516971	CompoundStatement		14:70:347:347	516859	1					
ANR	516972	ExpressionStatement	"IDispatch_GetTypeInfo ( V_DISPATCH ( & obj -> v ) , 0 , LANG_NEUTRAL , & obj -> typeinfo )"	88:2:2860:2935	516859	0	True				
ANR	516973	CallExpression	"IDispatch_GetTypeInfo ( V_DISPATCH ( & obj -> v ) , 0 , LANG_NEUTRAL , & obj -> typeinfo )"		516859	0					
ANR	516974	Callee	IDispatch_GetTypeInfo		516859	0					
ANR	516975	Identifier	IDispatch_GetTypeInfo		516859	0					
ANR	516976	ArgumentList	V_DISPATCH ( & obj -> v )		516859	1					
ANR	516977	Argument	V_DISPATCH ( & obj -> v )		516859	0					
ANR	516978	CallExpression	V_DISPATCH ( & obj -> v )		516859	0					
ANR	516979	Callee	V_DISPATCH		516859	0					
ANR	516980	Identifier	V_DISPATCH		516859	0					
ANR	516981	ArgumentList	& obj -> v		516859	1					
ANR	516982	Argument	& obj -> v		516859	0					
ANR	516983	UnaryOperationExpression	& obj -> v		516859	0					
ANR	516984	UnaryOperator	&		516859	0					
ANR	516985	PtrMemberAccess	obj -> v		516859	1					
ANR	516986	Identifier	obj		516859	0					
ANR	516987	Identifier	v		516859	1					
ANR	516988	Argument	0		516859	1					
ANR	516989	PrimaryExpression	0		516859	0					
ANR	516990	Argument	LANG_NEUTRAL		516859	2					
ANR	516991	Identifier	LANG_NEUTRAL		516859	0					
ANR	516992	Argument	& obj -> typeinfo		516859	3					
ANR	516993	UnaryOperationExpression	& obj -> typeinfo		516859	0					
ANR	516994	UnaryOperator	&		516859	0					
ANR	516995	PtrMemberAccess	obj -> typeinfo		516859	1					
ANR	516996	Identifier	obj		516859	0					
ANR	516997	Identifier	typeinfo		516859	1					
ANR	516998	ExpressionStatement	"zend_object_std_init ( & obj -> zo , php_com_variant_class_entry )"	91:1:2942:3001	516859	10	True				
ANR	516999	CallExpression	"zend_object_std_init ( & obj -> zo , php_com_variant_class_entry )"		516859	0					
ANR	517000	Callee	zend_object_std_init		516859	0					
ANR	517001	Identifier	zend_object_std_init		516859	0					
ANR	517002	ArgumentList	& obj -> zo		516859	1					
ANR	517003	Argument	& obj -> zo		516859	0					
ANR	517004	UnaryOperationExpression	& obj -> zo		516859	0					
ANR	517005	UnaryOperator	&		516859	0					
ANR	517006	PtrMemberAccess	obj -> zo		516859	1					
ANR	517007	Identifier	obj		516859	0					
ANR	517008	Identifier	zo		516859	1					
ANR	517009	Argument	php_com_variant_class_entry		516859	1					
ANR	517010	Identifier	php_com_variant_class_entry		516859	0					
ANR	517011	ExpressionStatement	obj -> zo . handlers = & php_com_object_handlers	92:1:3004:3047	516859	11	True				
ANR	517012	AssignmentExpression	obj -> zo . handlers = & php_com_object_handlers		516859	0		=			
ANR	517013	MemberAccess	obj -> zo . handlers		516859	0					
ANR	517014	PtrMemberAccess	obj -> zo		516859	0					
ANR	517015	Identifier	obj		516859	0					
ANR	517016	Identifier	zo		516859	1					
ANR	517017	Identifier	handlers		516859	1					
ANR	517018	UnaryOperationExpression	& php_com_object_handlers		516859	1					
ANR	517019	UnaryOperator	&		516859	0					
ANR	517020	Identifier	php_com_object_handlers		516859	1					
ANR	517021	ExpressionStatement	"ZVAL_OBJ ( z , & obj -> zo )"	93:1:3050:3071	516859	12	True				
ANR	517022	CallExpression	"ZVAL_OBJ ( z , & obj -> zo )"		516859	0					
ANR	517023	Callee	ZVAL_OBJ		516859	0					
ANR	517024	Identifier	ZVAL_OBJ		516859	0					
ANR	517025	ArgumentList	z		516859	1					
ANR	517026	Argument	z		516859	0					
ANR	517027	Identifier	z		516859	0					
ANR	517028	Argument	& obj -> zo		516859	1					
ANR	517029	UnaryOperationExpression	& obj -> zo		516859	0					
ANR	517030	UnaryOperator	&		516859	0					
ANR	517031	PtrMemberAccess	obj -> zo		516859	1					
ANR	517032	Identifier	obj		516859	0					
ANR	517033	Identifier	zo		516859	1					
ANR	517034	ReturnType	PHP_COM_DOTNET_API void		516859	1					
ANR	517035	Identifier	php_com_wrap_variant		516859	2					
ANR	517036	ParameterList	"zval * z , VARIANT * v , int codepage"		516859	3					
ANR	517037	Parameter	zval * z	72:45:2471:2477	516859	0	True				
ANR	517038	ParameterType	zval *		516859	0					
ANR	517039	Identifier	z		516859	1					
ANR	517040	Parameter	VARIANT * v	72:54:2480:2489	516859	1	True				
ANR	517041	ParameterType	VARIANT *		516859	0					
ANR	517042	Identifier	v		516859	1					
ANR	517043	Parameter	int codepage	73:2:2494:2505	516859	2	True				
ANR	517044	ParameterType	int		516859	0					
ANR	517045	Identifier	codepage		516859	1					
ANR	517046	CFGEntryNode	ENTRY		516859		True				
ANR	517047	CFGExitNode	EXIT		516859		True				
ANR	517048	Symbol	* obj		516859						
ANR	517049	Symbol	& obj -> typeinfo		516859						
ANR	517050	Symbol	NULL		516859						
ANR	517051	Symbol	LANG_NEUTRAL		516859						
ANR	517052	Symbol	& obj -> zo		516859						
ANR	517053	Symbol	obj -> zo . ce		516859						
ANR	517054	Symbol	VT_DISPATCH		516859						
ANR	517055	Symbol	obj -> code_page		516859						
ANR	517056	Symbol	codepage		516859						
ANR	517057	Symbol	php_com_variant_class_entry		516859						
ANR	517058	Symbol	obj -> ce		516859						
ANR	517059	Symbol	V_VT		516859						
ANR	517060	Symbol	emalloc		516859						
ANR	517061	Symbol	V_DISPATCH		516859						
ANR	517062	Symbol	obj -> modified		516859						
ANR	517063	Symbol	v		516859						
ANR	517064	Symbol	obj		516859						
ANR	517065	Symbol	obj -> zo . handlers		516859						
ANR	517066	Symbol	& obj -> v		516859						
ANR	517067	Symbol	z		516859						
ANR	517068	Symbol	& php_com_object_handlers		516859						
ANR	517069	Symbol	obj -> zo		516859						
ANR	517070	Function	php_com_safearray_get_elem	98:0:3197:4399							
ANR	517071	FunctionDef	"php_com_safearray_get_elem (VARIANT * array , VARIANT * dest , LONG dim1)"		517070	0					
ANR	517072	CompoundStatement		99:0:3289:4399	517070	0					
ANR	517073	IdentifierDeclStatement	UINT dims ;	100:1:3292:3301	517070	0	True				
ANR	517074	IdentifierDecl	dims		517070	0					
ANR	517075	IdentifierDeclType	UINT		517070	0					
ANR	517076	Identifier	dims		517070	1					
ANR	517077	IdentifierDeclStatement	"LONG lbound , ubound ;"	101:1:3304:3323	517070	1	True				
ANR	517078	IdentifierDecl	lbound		517070	0					
ANR	517079	IdentifierDeclType	LONG		517070	0					
ANR	517080	Identifier	lbound		517070	1					
ANR	517081	IdentifierDecl	ubound		517070	1					
ANR	517082	IdentifierDeclType	LONG		517070	0					
ANR	517083	Identifier	ubound		517070	1					
ANR	517084	IdentifierDeclStatement	LONG indices [ 1 ] ;	102:1:3326:3341	517070	2	True				
ANR	517085	IdentifierDecl	indices [ 1 ]		517070	0					
ANR	517086	IdentifierDeclType	LONG [ 1 ]		517070	0					
ANR	517087	Identifier	indices		517070	1					
ANR	517088	PrimaryExpression	1		517070	2					
ANR	517089	IdentifierDeclStatement	VARTYPE vt ;	103:1:3344:3354	517070	3	True				
ANR	517090	IdentifierDecl	vt		517070	0					
ANR	517091	IdentifierDeclType	VARTYPE		517070	0					
ANR	517092	Identifier	vt		517070	1					
ANR	517093	IfStatement	if ( ! V_ISARRAY ( array ) )		517070	4					
ANR	517094	Condition	! V_ISARRAY ( array )	105:5:3362:3378	517070	0	True				
ANR	517095	UnaryOperationExpression	! V_ISARRAY ( array )		517070	0					
ANR	517096	UnaryOperator	!		517070	0					
ANR	517097	CallExpression	V_ISARRAY ( array )		517070	1					
ANR	517098	Callee	V_ISARRAY		517070	0					
ANR	517099	Identifier	V_ISARRAY		517070	0					
ANR	517100	ArgumentList	array		517070	1					
ANR	517101	Argument	array		517070	0					
ANR	517102	Identifier	array		517070	0					
ANR	517103	CompoundStatement		7:24:91:91	517070	1					
ANR	517104	ReturnStatement	return 0 ;	106:2:3385:3393	517070	0	True				
ANR	517105	PrimaryExpression	0		517070	0					
ANR	517106	ExpressionStatement	dims = SafeArrayGetDim ( V_ARRAY ( array ) )	109:1:3400:3438	517070	5	True				
ANR	517107	AssignmentExpression	dims = SafeArrayGetDim ( V_ARRAY ( array ) )		517070	0		=			
ANR	517108	Identifier	dims		517070	0					
ANR	517109	CallExpression	SafeArrayGetDim ( V_ARRAY ( array ) )		517070	1					
ANR	517110	Callee	SafeArrayGetDim		517070	0					
ANR	517111	Identifier	SafeArrayGetDim		517070	0					
ANR	517112	ArgumentList	V_ARRAY ( array )		517070	1					
ANR	517113	Argument	V_ARRAY ( array )		517070	0					
ANR	517114	CallExpression	V_ARRAY ( array )		517070	0					
ANR	517115	Callee	V_ARRAY		517070	0					
ANR	517116	Identifier	V_ARRAY		517070	0					
ANR	517117	ArgumentList	array		517070	1					
ANR	517118	Argument	array		517070	0					
ANR	517119	Identifier	array		517070	0					
ANR	517120	IfStatement	if ( dims != 1 )		517070	6					
ANR	517121	Condition	dims != 1	111:5:3446:3454	517070	0	True				
ANR	517122	EqualityExpression	dims != 1		517070	0		!=			
ANR	517123	Identifier	dims		517070	0					
ANR	517124	PrimaryExpression	1		517070	1					
ANR	517125	CompoundStatement		13:16:167:167	517070	1					
ANR	517126	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Can only handle single dimension variant arrays (this array has %d)"" , dims )"	112:2:3461:3577	517070	0	True				
ANR	517127	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Can only handle single dimension variant arrays (this array has %d)"" , dims )"		517070	0					
ANR	517128	Callee	php_error_docref		517070	0					
ANR	517129	Identifier	php_error_docref		517070	0					
ANR	517130	ArgumentList	NULL		517070	1					
ANR	517131	Argument	NULL		517070	0					
ANR	517132	Identifier	NULL		517070	0					
ANR	517133	Argument	E_WARNING		517070	1					
ANR	517134	Identifier	E_WARNING		517070	0					
ANR	517135	Argument	"""Can only handle single dimension variant arrays (this array has %d)"""		517070	2					
ANR	517136	PrimaryExpression	"""Can only handle single dimension variant arrays (this array has %d)"""		517070	0					
ANR	517137	Argument	dims		517070	3					
ANR	517138	Identifier	dims		517070	0					
ANR	517139	ReturnStatement	return 0 ;	114:2:3581:3589	517070	1	True				
ANR	517140	PrimaryExpression	0		517070	0					
ANR	517141	IfStatement	"if ( FAILED ( SafeArrayGetVartype ( V_ARRAY ( array ) , & vt ) ) || vt == VT_EMPTY )"		517070	7					
ANR	517142	Condition	"FAILED ( SafeArrayGetVartype ( V_ARRAY ( array ) , & vt ) ) || vt == VT_EMPTY"	117:5:3600:3665	517070	0	True				
ANR	517143	OrExpression	"FAILED ( SafeArrayGetVartype ( V_ARRAY ( array ) , & vt ) ) || vt == VT_EMPTY"		517070	0		||			
ANR	517144	CallExpression	"FAILED ( SafeArrayGetVartype ( V_ARRAY ( array ) , & vt ) )"		517070	0					
ANR	517145	Callee	FAILED		517070	0					
ANR	517146	Identifier	FAILED		517070	0					
ANR	517147	ArgumentList	"SafeArrayGetVartype ( V_ARRAY ( array ) , & vt )"		517070	1					
ANR	517148	Argument	"SafeArrayGetVartype ( V_ARRAY ( array ) , & vt )"		517070	0					
ANR	517149	CallExpression	"SafeArrayGetVartype ( V_ARRAY ( array ) , & vt )"		517070	0					
ANR	517150	Callee	SafeArrayGetVartype		517070	0					
ANR	517151	Identifier	SafeArrayGetVartype		517070	0					
ANR	517152	ArgumentList	V_ARRAY ( array )		517070	1					
ANR	517153	Argument	V_ARRAY ( array )		517070	0					
ANR	517154	CallExpression	V_ARRAY ( array )		517070	0					
ANR	517155	Callee	V_ARRAY		517070	0					
ANR	517156	Identifier	V_ARRAY		517070	0					
ANR	517157	ArgumentList	array		517070	1					
ANR	517158	Argument	array		517070	0					
ANR	517159	Identifier	array		517070	0					
ANR	517160	Argument	& vt		517070	1					
ANR	517161	UnaryOperationExpression	& vt		517070	0					
ANR	517162	UnaryOperator	&		517070	0					
ANR	517163	Identifier	vt		517070	1					
ANR	517164	EqualityExpression	vt == VT_EMPTY		517070	1		==			
ANR	517165	Identifier	vt		517070	0					
ANR	517166	Identifier	VT_EMPTY		517070	1					
ANR	517167	CompoundStatement		19:73:378:378	517070	1					
ANR	517168	ExpressionStatement	vt = V_VT ( array ) & ~VT_ARRAY	118:2:3672:3700	517070	0	True				
ANR	517169	AssignmentExpression	vt = V_VT ( array ) & ~VT_ARRAY		517070	0		=			
ANR	517170	Identifier	vt		517070	0					
ANR	517171	BitAndExpression	V_VT ( array ) & ~VT_ARRAY		517070	1		&			
ANR	517172	CallExpression	V_VT ( array )		517070	0					
ANR	517173	Callee	V_VT		517070	0					
ANR	517174	Identifier	V_VT		517070	0					
ANR	517175	ArgumentList	array		517070	1					
ANR	517176	Argument	array		517070	0					
ANR	517177	Identifier	array		517070	0					
ANR	517178	Identifier	~VT_ARRAY		517070	1					
ANR	517179	ExpressionStatement	"SafeArrayGetLBound ( V_ARRAY ( array ) , 1 , & lbound )"	122:1:3735:3781	517070	8	True				
ANR	517180	CallExpression	"SafeArrayGetLBound ( V_ARRAY ( array ) , 1 , & lbound )"		517070	0					
ANR	517181	Callee	SafeArrayGetLBound		517070	0					
ANR	517182	Identifier	SafeArrayGetLBound		517070	0					
ANR	517183	ArgumentList	V_ARRAY ( array )		517070	1					
ANR	517184	Argument	V_ARRAY ( array )		517070	0					
ANR	517185	CallExpression	V_ARRAY ( array )		517070	0					
ANR	517186	Callee	V_ARRAY		517070	0					
ANR	517187	Identifier	V_ARRAY		517070	0					
ANR	517188	ArgumentList	array		517070	1					
ANR	517189	Argument	array		517070	0					
ANR	517190	Identifier	array		517070	0					
ANR	517191	Argument	1		517070	1					
ANR	517192	PrimaryExpression	1		517070	0					
ANR	517193	Argument	& lbound		517070	2					
ANR	517194	UnaryOperationExpression	& lbound		517070	0					
ANR	517195	UnaryOperator	&		517070	0					
ANR	517196	Identifier	lbound		517070	1					
ANR	517197	ExpressionStatement	"SafeArrayGetUBound ( V_ARRAY ( array ) , 1 , & ubound )"	123:1:3784:3830	517070	9	True				
ANR	517198	CallExpression	"SafeArrayGetUBound ( V_ARRAY ( array ) , 1 , & ubound )"		517070	0					
ANR	517199	Callee	SafeArrayGetUBound		517070	0					
ANR	517200	Identifier	SafeArrayGetUBound		517070	0					
ANR	517201	ArgumentList	V_ARRAY ( array )		517070	1					
ANR	517202	Argument	V_ARRAY ( array )		517070	0					
ANR	517203	CallExpression	V_ARRAY ( array )		517070	0					
ANR	517204	Callee	V_ARRAY		517070	0					
ANR	517205	Identifier	V_ARRAY		517070	0					
ANR	517206	ArgumentList	array		517070	1					
ANR	517207	Argument	array		517070	0					
ANR	517208	Identifier	array		517070	0					
ANR	517209	Argument	1		517070	1					
ANR	517210	PrimaryExpression	1		517070	0					
ANR	517211	Argument	& ubound		517070	2					
ANR	517212	UnaryOperationExpression	& ubound		517070	0					
ANR	517213	UnaryOperator	&		517070	0					
ANR	517214	Identifier	ubound		517070	1					
ANR	517215	IfStatement	if ( dim1 < lbound || dim1 > ubound )		517070	10					
ANR	517216	Condition	dim1 < lbound || dim1 > ubound	126:5:3858:3887	517070	0	True				
ANR	517217	OrExpression	dim1 < lbound || dim1 > ubound		517070	0		||			
ANR	517218	RelationalExpression	dim1 < lbound		517070	0		<			
ANR	517219	Identifier	dim1		517070	0					
ANR	517220	Identifier	lbound		517070	1					
ANR	517221	RelationalExpression	dim1 > ubound		517070	1		>			
ANR	517222	Identifier	dim1		517070	0					
ANR	517223	Identifier	ubound		517070	1					
ANR	517224	CompoundStatement		28:37:600:600	517070	1					
ANR	517225	ExpressionStatement	"php_com_throw_exception ( DISP_E_BADINDEX , ""index out of bounds"" )"	127:2:3894:3957	517070	0	True				
ANR	517226	CallExpression	"php_com_throw_exception ( DISP_E_BADINDEX , ""index out of bounds"" )"		517070	0					
ANR	517227	Callee	php_com_throw_exception		517070	0					
ANR	517228	Identifier	php_com_throw_exception		517070	0					
ANR	517229	ArgumentList	DISP_E_BADINDEX		517070	1					
ANR	517230	Argument	DISP_E_BADINDEX		517070	0					
ANR	517231	Identifier	DISP_E_BADINDEX		517070	0					
ANR	517232	Argument	"""index out of bounds"""		517070	1					
ANR	517233	PrimaryExpression	"""index out of bounds"""		517070	0					
ANR	517234	ReturnStatement	return 0 ;	128:2:3961:3969	517070	1	True				
ANR	517235	PrimaryExpression	0		517070	0					
ANR	517236	ExpressionStatement	VariantInit ( dest )	132:1:4006:4023	517070	11	True				
ANR	517237	CallExpression	VariantInit ( dest )		517070	0					
ANR	517238	Callee	VariantInit		517070	0					
ANR	517239	Identifier	VariantInit		517070	0					
ANR	517240	ArgumentList	dest		517070	1					
ANR	517241	Argument	dest		517070	0					
ANR	517242	Identifier	dest		517070	0					
ANR	517243	ExpressionStatement	indices [ 0 ] = dim1	134:1:4027:4044	517070	12	True				
ANR	517244	AssignmentExpression	indices [ 0 ] = dim1		517070	0		=			
ANR	517245	ArrayIndexing	indices [ 0 ]		517070	0					
ANR	517246	Identifier	indices		517070	0					
ANR	517247	PrimaryExpression	0		517070	1					
ANR	517248	Identifier	dim1		517070	1					
ANR	517249	IfStatement	if ( vt == VT_VARIANT )		517070	13					
ANR	517250	Condition	vt == VT_VARIANT	136:5:4052:4067	517070	0	True				
ANR	517251	EqualityExpression	vt == VT_VARIANT		517070	0		==			
ANR	517252	Identifier	vt		517070	0					
ANR	517253	Identifier	VT_VARIANT		517070	1					
ANR	517254	CompoundStatement		38:23:780:780	517070	1					
ANR	517255	ExpressionStatement	"SafeArrayGetElement ( V_ARRAY ( array ) , indices , dest )"	137:2:4074:4124	517070	0	True				
ANR	517256	CallExpression	"SafeArrayGetElement ( V_ARRAY ( array ) , indices , dest )"		517070	0					
ANR	517257	Callee	SafeArrayGetElement		517070	0					
ANR	517258	Identifier	SafeArrayGetElement		517070	0					
ANR	517259	ArgumentList	V_ARRAY ( array )		517070	1					
ANR	517260	Argument	V_ARRAY ( array )		517070	0					
ANR	517261	CallExpression	V_ARRAY ( array )		517070	0					
ANR	517262	Callee	V_ARRAY		517070	0					
ANR	517263	Identifier	V_ARRAY		517070	0					
ANR	517264	ArgumentList	array		517070	1					
ANR	517265	Argument	array		517070	0					
ANR	517266	Identifier	array		517070	0					
ANR	517267	Argument	indices		517070	1					
ANR	517268	Identifier	indices		517070	0					
ANR	517269	Argument	dest		517070	2					
ANR	517270	Identifier	dest		517070	0					
ANR	517271	ElseStatement	else		517070	0					
ANR	517272	CompoundStatement		40:8:844:844	517070	0					
ANR	517273	ExpressionStatement	V_VT ( dest ) = vt	139:2:4138:4153	517070	0	True				
ANR	517274	AssignmentExpression	V_VT ( dest ) = vt		517070	0		=			
ANR	517275	CallExpression	V_VT ( dest )		517070	0					
ANR	517276	Callee	V_VT		517070	0					
ANR	517277	Identifier	V_VT		517070	0					
ANR	517278	ArgumentList	dest		517070	1					
ANR	517279	Argument	dest		517070	0					
ANR	517280	Identifier	dest		517070	0					
ANR	517281	Identifier	vt		517070	1					
ANR	517282	ExpressionStatement	"SafeArrayGetElement ( V_ARRAY ( array ) , indices , & dest -> lVal )"	143:2:4325:4382	517070	1	True				
ANR	517283	CallExpression	"SafeArrayGetElement ( V_ARRAY ( array ) , indices , & dest -> lVal )"		517070	0					
ANR	517284	Callee	SafeArrayGetElement		517070	0					
ANR	517285	Identifier	SafeArrayGetElement		517070	0					
ANR	517286	ArgumentList	V_ARRAY ( array )		517070	1					
ANR	517287	Argument	V_ARRAY ( array )		517070	0					
ANR	517288	CallExpression	V_ARRAY ( array )		517070	0					
ANR	517289	Callee	V_ARRAY		517070	0					
ANR	517290	Identifier	V_ARRAY		517070	0					
ANR	517291	ArgumentList	array		517070	1					
ANR	517292	Argument	array		517070	0					
ANR	517293	Identifier	array		517070	0					
ANR	517294	Argument	indices		517070	1					
ANR	517295	Identifier	indices		517070	0					
ANR	517296	Argument	& dest -> lVal		517070	2					
ANR	517297	UnaryOperationExpression	& dest -> lVal		517070	0					
ANR	517298	UnaryOperator	&		517070	0					
ANR	517299	PtrMemberAccess	dest -> lVal		517070	1					
ANR	517300	Identifier	dest		517070	0					
ANR	517301	Identifier	lVal		517070	1					
ANR	517302	ReturnStatement	return 1 ;	146:1:4389:4397	517070	14	True				
ANR	517303	PrimaryExpression	1		517070	0					
ANR	517304	ReturnType	PHP_COM_DOTNET_API int		517070	1					
ANR	517305	Identifier	php_com_safearray_get_elem		517070	2					
ANR	517306	ParameterList	"VARIANT * array , VARIANT * dest , LONG dim1"		517070	3					
ANR	517307	Parameter	VARIANT * array	98:50:3247:3260	517070	0	True				
ANR	517308	ParameterType	VARIANT *		517070	0					
ANR	517309	Identifier	array		517070	1					
ANR	517310	Parameter	VARIANT * dest	98:66:3263:3275	517070	1	True				
ANR	517311	ParameterType	VARIANT *		517070	0					
ANR	517312	Identifier	dest		517070	1					
ANR	517313	Parameter	LONG dim1	98:81:3278:3286	517070	2	True				
ANR	517314	ParameterType	LONG		517070	0					
ANR	517315	Identifier	dim1		517070	1					
ANR	517316	CFGEntryNode	ENTRY		517070		True				
ANR	517317	CFGExitNode	EXIT		517070		True				
ANR	517318	Symbol	~VT_ARRAY		517070						
ANR	517319	Symbol	dims		517070						
ANR	517320	Symbol	* indices		517070						
ANR	517321	Symbol	dim1		517070						
ANR	517322	Symbol	dest		517070						
ANR	517323	Symbol	SafeArrayGetVartype		517070						
ANR	517324	Symbol	E_WARNING		517070						
ANR	517325	Symbol	VT_EMPTY		517070						
ANR	517326	Symbol	FAILED		517070						
ANR	517327	Symbol	& lbound		517070						
ANR	517328	Symbol	array		517070						
ANR	517329	Symbol	SafeArrayGetDim		517070						
ANR	517330	Symbol	& ubound		517070						
ANR	517331	Symbol	NULL		517070						
ANR	517332	Symbol	ubound		517070						
ANR	517333	Symbol	& vt		517070						
ANR	517334	Symbol	& dest -> lVal		517070						
ANR	517335	Symbol	DISP_E_BADINDEX		517070						
ANR	517336	Symbol	V_VT		517070						
ANR	517337	Symbol	indices		517070						
ANR	517338	Symbol	lbound		517070						
ANR	517339	Symbol	V_ISARRAY		517070						
ANR	517340	Symbol	VT_VARIANT		517070						
ANR	517341	Symbol	vt		517070						
ANR	517342	Symbol	V_ARRAY		517070						
