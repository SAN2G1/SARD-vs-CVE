command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	797447	File	data/converged/CVE-2015-8617_php-src/ext_filter_logical_filters.c								
ANR	797448	DeclStmt									
ANR	797449	Decl							var_name	var_name	_set
ANR	797450	DeclStmt									
ANR	797451	Decl							var_name	var_name	_set
ANR	797452	DeclStmt									
ANR	797453	Decl							var_name	var_name	_set
ANR	797454	DeclStmt									
ANR	797455	Decl							var_name	var_name	_len
ANR	797456	DeclStmt									
ANR	797457	Decl							var_name	var_name	_len
ANR	797458	DeclStmt									
ANR	797459	Decl							var_name	var_name	_set
ANR	797460	DeclStmt									
ANR	797461	Decl							var_name	var_name	_set
ANR	797462	DeclStmt									
ANR	797463	Decl							var_name	var_name	_set
ANR	797464	DeclStmt									
ANR	797465	Decl							int	"int ( char * str , size_t str_len )"	_php_filter_validate_ipv6
ANR	797466	Function	php_filter_parse_int	86:0:2965:4039							
ANR	797467	FunctionDef	"php_filter_parse_int (const char * str , size_t str_len , zend_long * ret)"		797466	0					
ANR	797468	CompoundStatement		86:81:3046:4039	797466	0					
ANR	797469	IdentifierDeclStatement	zend_long ctx_value ;	87:1:3059:3078	797466	0	True				
ANR	797470	IdentifierDecl	ctx_value		797466	0					
ANR	797471	IdentifierDeclType	zend_long		797466	0					
ANR	797472	Identifier	ctx_value		797466	1					
ANR	797473	IdentifierDeclStatement	"int sign = 0 , digit = 0 ;"	88:1:3081:3104	797466	1	True				
ANR	797474	IdentifierDecl	sign = 0		797466	0					
ANR	797475	IdentifierDeclType	int		797466	0					
ANR	797476	Identifier	sign		797466	1					
ANR	797477	AssignmentExpression	sign = 0		797466	2		=			
ANR	797478	Identifier	sign		797466	0					
ANR	797479	PrimaryExpression	0		797466	1					
ANR	797480	IdentifierDecl	digit = 0		797466	1					
ANR	797481	IdentifierDeclType	int		797466	0					
ANR	797482	Identifier	digit		797466	1					
ANR	797483	AssignmentExpression	digit = 0		797466	2		=			
ANR	797484	Identifier	digit		797466	0					
ANR	797485	PrimaryExpression	0		797466	1					
ANR	797486	IdentifierDeclStatement	const char * end = str + str_len ;	89:1:3107:3138	797466	2	True				
ANR	797487	IdentifierDecl	* end = str + str_len		797466	0					
ANR	797488	IdentifierDeclType	const char *		797466	0					
ANR	797489	Identifier	end		797466	1					
ANR	797490	AssignmentExpression	* end = str + str_len		797466	2		=			
ANR	797491	Identifier	end		797466	0					
ANR	797492	AdditiveExpression	str + str_len		797466	1		+			
ANR	797493	Identifier	str		797466	0					
ANR	797494	Identifier	str_len		797466	1					
ANR	797495	SwitchStatement	switch ( * str )		797466	3					
ANR	797496	Condition	* str	91:9:3150:3153	797466	0	True				
ANR	797497	UnaryOperationExpression	* str		797466	0					
ANR	797498	UnaryOperator	*		797466	0					
ANR	797499	Identifier	str		797466	1					
ANR	797500	CompoundStatement		6:15:109:109	797466	1					
ANR	797501	Label	case '-' :	92:2:3160:3168	797466	0	True				
ANR	797502	ExpressionStatement	sign = 1	93:3:3173:3181	797466	1	True				
ANR	797503	AssignmentExpression	sign = 1		797466	0		=			
ANR	797504	Identifier	sign		797466	0					
ANR	797505	PrimaryExpression	1		797466	1					
ANR	797506	Label	case '+' :	94:2:3185:3193	797466	2	True				
ANR	797507	ExpressionStatement	str ++	95:3:3198:3203	797466	3	True				
ANR	797508	PostIncDecOperationExpression	str ++		797466	0					
ANR	797509	Identifier	str		797466	0					
ANR	797510	IncDec	++		797466	1					
ANR	797511	Label	default :	96:2:3207:3214	797466	4	True				
ANR	797512	Identifier	default		797466	0					
ANR	797513	BreakStatement	break ;	97:3:3219:3224	797466	5	True				
ANR	797514	IfStatement	if ( * str == '0' && str + 1 == end )		797466	4					
ANR	797515	Condition	* str == '0' && str + 1 == end	100:5:3235:3263	797466	0	True				
ANR	797516	AndExpression	* str == '0' && str + 1 == end		797466	0		&&			
ANR	797517	EqualityExpression	* str == '0'		797466	0		==			
ANR	797518	UnaryOperationExpression	* str		797466	0					
ANR	797519	UnaryOperator	*		797466	0					
ANR	797520	Identifier	str		797466	1					
ANR	797521	PrimaryExpression	'0'		797466	1					
ANR	797522	EqualityExpression	str + 1 == end		797466	1		==			
ANR	797523	AdditiveExpression	str + 1		797466	0		+			
ANR	797524	Identifier	str		797466	0					
ANR	797525	PrimaryExpression	1		797466	1					
ANR	797526	Identifier	end		797466	1					
ANR	797527	CompoundStatement		15:36:219:219	797466	1					
ANR	797528	ReturnStatement	return 1 ;	102:2:3303:3311	797466	0	True				
ANR	797529	PrimaryExpression	1		797466	0					
ANR	797530	IfStatement	if ( str < end && * str >= '1' && * str <= '9' )		797466	5					
ANR	797531	Condition	str < end && * str >= '1' && * str <= '9'	106:5:3349:3387	797466	0	True				
ANR	797532	AndExpression	str < end && * str >= '1' && * str <= '9'		797466	0		&&			
ANR	797533	RelationalExpression	str < end		797466	0		<			
ANR	797534	Identifier	str		797466	0					
ANR	797535	Identifier	end		797466	1					
ANR	797536	AndExpression	* str >= '1' && * str <= '9'		797466	1		&&			
ANR	797537	RelationalExpression	* str >= '1'		797466	0		>=			
ANR	797538	UnaryOperationExpression	* str		797466	0					
ANR	797539	UnaryOperator	*		797466	0					
ANR	797540	Identifier	str		797466	1					
ANR	797541	PrimaryExpression	'1'		797466	1					
ANR	797542	RelationalExpression	* str <= '9'		797466	1		<=			
ANR	797543	UnaryOperationExpression	* str		797466	0					
ANR	797544	UnaryOperator	*		797466	0					
ANR	797545	Identifier	str		797466	1					
ANR	797546	PrimaryExpression	'9'		797466	1					
ANR	797547	CompoundStatement		21:46:343:343	797466	1					
ANR	797548	ExpressionStatement	ctx_value = ( ( sign ) ? - 1 : 1 ) * ( ( * ( str ++ ) ) - '0' )	107:2:3394:3440	797466	0	True				
ANR	797549	AssignmentExpression	ctx_value = ( ( sign ) ? - 1 : 1 ) * ( ( * ( str ++ ) ) - '0' )		797466	0		=			
ANR	797550	Identifier	ctx_value		797466	0					
ANR	797551	MultiplicativeExpression	( ( sign ) ? - 1 : 1 ) * ( ( * ( str ++ ) ) - '0' )		797466	1		*			
ANR	797552	ConditionalExpression	( sign ) ? - 1 : 1		797466	0					
ANR	797553	Condition	sign		797466	0					
ANR	797554	Identifier	sign		797466	0					
ANR	797555	UnaryOperationExpression	- 1		797466	1					
ANR	797556	UnaryOperator	-		797466	0					
ANR	797557	PrimaryExpression	1		797466	1					
ANR	797558	PrimaryExpression	1		797466	2					
ANR	797559	AdditiveExpression	( * ( str ++ ) ) - '0'		797466	1		-			
ANR	797560	UnaryOperationExpression	* ( str ++ )		797466	0					
ANR	797561	UnaryOperator	*		797466	0					
ANR	797562	PostIncDecOperationExpression	str ++		797466	1					
ANR	797563	Identifier	str		797466	0					
ANR	797564	IncDec	++		797466	1					
ANR	797565	PrimaryExpression	'0'		797466	1					
ANR	797566	ElseStatement	else		797466	0					
ANR	797567	CompoundStatement		23:8:403:403	797466	0					
ANR	797568	ReturnStatement	return - 1 ;	109:2:3454:3463	797466	0	True				
ANR	797569	UnaryOperationExpression	- 1		797466	0					
ANR	797570	UnaryOperator	-		797466	0					
ANR	797571	PrimaryExpression	1		797466	1					
ANR	797572	IfStatement	if ( ( end - str > MAX_LENGTH_OF_LONG - 1 ) || ( SIZEOF_LONG == 4 && ( end - str == MAX_LENGTH_OF_LONG - 1 ) && * str > '2' ) )		797466	6					
ANR	797573	Condition	( end - str > MAX_LENGTH_OF_LONG - 1 ) || ( SIZEOF_LONG == 4 && ( end - str == MAX_LENGTH_OF_LONG - 1 ) && * str > '2' )	112:5:3474:3610	797466	0	True				
ANR	797574	OrExpression	( end - str > MAX_LENGTH_OF_LONG - 1 ) || ( SIZEOF_LONG == 4 && ( end - str == MAX_LENGTH_OF_LONG - 1 ) && * str > '2' )		797466	0		||			
ANR	797575	RelationalExpression	end - str > MAX_LENGTH_OF_LONG - 1		797466	0		>			
ANR	797576	AdditiveExpression	end - str		797466	0		-			
ANR	797577	Identifier	end		797466	0					
ANR	797578	Identifier	str		797466	1					
ANR	797579	AdditiveExpression	MAX_LENGTH_OF_LONG - 1		797466	1		-			
ANR	797580	Identifier	MAX_LENGTH_OF_LONG		797466	0					
ANR	797581	PrimaryExpression	1		797466	1					
ANR	797582	AndExpression	SIZEOF_LONG == 4 && ( end - str == MAX_LENGTH_OF_LONG - 1 ) && * str > '2'		797466	1		&&			
ANR	797583	EqualityExpression	SIZEOF_LONG == 4		797466	0		==			
ANR	797584	Identifier	SIZEOF_LONG		797466	0					
ANR	797585	PrimaryExpression	4		797466	1					
ANR	797586	AndExpression	( end - str == MAX_LENGTH_OF_LONG - 1 ) && * str > '2'		797466	1		&&			
ANR	797587	EqualityExpression	end - str == MAX_LENGTH_OF_LONG - 1		797466	0		==			
ANR	797588	AdditiveExpression	end - str		797466	0		-			
ANR	797589	Identifier	end		797466	0					
ANR	797590	Identifier	str		797466	1					
ANR	797591	AdditiveExpression	MAX_LENGTH_OF_LONG - 1		797466	1		-			
ANR	797592	Identifier	MAX_LENGTH_OF_LONG		797466	0					
ANR	797593	PrimaryExpression	1		797466	1					
ANR	797594	RelationalExpression	* str > '2'		797466	1		>			
ANR	797595	UnaryOperationExpression	* str		797466	0					
ANR	797596	UnaryOperator	*		797466	0					
ANR	797597	Identifier	str		797466	1					
ANR	797598	PrimaryExpression	'2'		797466	1					
ANR	797599	CompoundStatement		28:80:566:566	797466	1					
ANR	797600	ReturnStatement	return - 1 ;	115:2:3634:3643	797466	0	True				
ANR	797601	UnaryOperationExpression	- 1		797466	0					
ANR	797602	UnaryOperator	-		797466	0					
ANR	797603	PrimaryExpression	1		797466	1					
ANR	797604	WhileStatement	while ( str < end )		797466	7					
ANR	797605	Condition	str < end	118:8:3657:3665	797466	0	True				
ANR	797606	RelationalExpression	str < end		797466	0		<			
ANR	797607	Identifier	str		797466	0					
ANR	797608	Identifier	end		797466	1					
ANR	797609	CompoundStatement		33:19:621:621	797466	1					
ANR	797610	IfStatement	if ( * str >= '0' && * str <= '9' )		797466	0					
ANR	797611	Condition	* str >= '0' && * str <= '9'	119:6:3676:3701	797466	0	True				
ANR	797612	AndExpression	* str >= '0' && * str <= '9'		797466	0		&&			
ANR	797613	RelationalExpression	* str >= '0'		797466	0		>=			
ANR	797614	UnaryOperationExpression	* str		797466	0					
ANR	797615	UnaryOperator	*		797466	0					
ANR	797616	Identifier	str		797466	1					
ANR	797617	PrimaryExpression	'0'		797466	1					
ANR	797618	RelationalExpression	* str <= '9'		797466	1		<=			
ANR	797619	UnaryOperationExpression	* str		797466	0					
ANR	797620	UnaryOperator	*		797466	0					
ANR	797621	Identifier	str		797466	1					
ANR	797622	PrimaryExpression	'9'		797466	1					
ANR	797623	CompoundStatement		34:34:657:657	797466	1					
ANR	797624	ExpressionStatement	digit = ( * ( str ++ ) - '0' )	120:3:3709:3733	797466	0	True				
ANR	797625	AssignmentExpression	digit = ( * ( str ++ ) - '0' )		797466	0		=			
ANR	797626	Identifier	digit		797466	0					
ANR	797627	AdditiveExpression	* ( str ++ ) - '0'		797466	1		-			
ANR	797628	UnaryOperationExpression	* ( str ++ )		797466	0					
ANR	797629	UnaryOperator	*		797466	0					
ANR	797630	PostIncDecOperationExpression	str ++		797466	1					
ANR	797631	Identifier	str		797466	0					
ANR	797632	IncDec	++		797466	1					
ANR	797633	PrimaryExpression	'0'		797466	1					
ANR	797634	IfStatement	if ( ( ! sign ) && ctx_value <= ( ZEND_LONG_MAX - digit ) / 10 )		797466	1					
ANR	797635	Condition	( ! sign ) && ctx_value <= ( ZEND_LONG_MAX - digit ) / 10	121:8:3743:3790	797466	0	True				
ANR	797636	AndExpression	( ! sign ) && ctx_value <= ( ZEND_LONG_MAX - digit ) / 10		797466	0		&&			
ANR	797637	UnaryOperationExpression	! sign		797466	0					
ANR	797638	UnaryOperator	!		797466	0					
ANR	797639	Identifier	sign		797466	1					
ANR	797640	RelationalExpression	ctx_value <= ( ZEND_LONG_MAX - digit ) / 10		797466	1		<=			
ANR	797641	Identifier	ctx_value		797466	0					
ANR	797642	MultiplicativeExpression	( ZEND_LONG_MAX - digit ) / 10		797466	1		/			
ANR	797643	AdditiveExpression	ZEND_LONG_MAX - digit		797466	0		-			
ANR	797644	Identifier	ZEND_LONG_MAX		797466	0					
ANR	797645	Identifier	digit		797466	1					
ANR	797646	PrimaryExpression	10		797466	1					
ANR	797647	CompoundStatement		36:59:747:747	797466	1					
ANR	797648	ExpressionStatement	ctx_value = ( ctx_value * 10 ) + digit	122:4:3800:3836	797466	0	True				
ANR	797649	AssignmentExpression	ctx_value = ( ctx_value * 10 ) + digit		797466	0		=			
ANR	797650	Identifier	ctx_value		797466	0					
ANR	797651	AdditiveExpression	( ctx_value * 10 ) + digit		797466	1		+			
ANR	797652	MultiplicativeExpression	ctx_value * 10		797466	0		*			
ANR	797653	Identifier	ctx_value		797466	0					
ANR	797654	PrimaryExpression	10		797466	1					
ANR	797655	Identifier	digit		797466	1					
ANR	797656	ElseStatement	else		797466	0					
ANR	797657	IfStatement	if ( sign && ctx_value >= ( ZEND_LONG_MIN + digit ) / 10 )		797466	0					
ANR	797658	Condition	sign && ctx_value >= ( ZEND_LONG_MIN + digit ) / 10	123:15:3853:3897	797466	0	True				
ANR	797659	AndExpression	sign && ctx_value >= ( ZEND_LONG_MIN + digit ) / 10		797466	0		&&			
ANR	797660	Identifier	sign		797466	0					
ANR	797661	RelationalExpression	ctx_value >= ( ZEND_LONG_MIN + digit ) / 10		797466	1		>=			
ANR	797662	Identifier	ctx_value		797466	0					
ANR	797663	MultiplicativeExpression	( ZEND_LONG_MIN + digit ) / 10		797466	1		/			
ANR	797664	AdditiveExpression	ZEND_LONG_MIN + digit		797466	0		+			
ANR	797665	Identifier	ZEND_LONG_MIN		797466	0					
ANR	797666	Identifier	digit		797466	1					
ANR	797667	PrimaryExpression	10		797466	1					
ANR	797668	CompoundStatement		38:62:853:853	797466	1					
ANR	797669	ExpressionStatement	ctx_value = ( ctx_value * 10 ) - digit	124:4:3906:3942	797466	0	True				
ANR	797670	AssignmentExpression	ctx_value = ( ctx_value * 10 ) - digit		797466	0		=			
ANR	797671	Identifier	ctx_value		797466	0					
ANR	797672	AdditiveExpression	( ctx_value * 10 ) - digit		797466	1		-			
ANR	797673	MultiplicativeExpression	ctx_value * 10		797466	0		*			
ANR	797674	Identifier	ctx_value		797466	0					
ANR	797675	PrimaryExpression	10		797466	1					
ANR	797676	Identifier	digit		797466	1					
ANR	797677	ElseStatement	else		797466	0					
ANR	797678	CompoundStatement		40:10:907:907	797466	0					
ANR	797679	ReturnStatement	return - 1 ;	126:4:3960:3969	797466	0	True				
ANR	797680	UnaryOperationExpression	- 1		797466	0					
ANR	797681	UnaryOperator	-		797466	0					
ANR	797682	PrimaryExpression	1		797466	1					
ANR	797683	ElseStatement	else		797466	0					
ANR	797684	CompoundStatement		43:9:938:938	797466	0					
ANR	797685	ReturnStatement	return - 1 ;	129:3:3990:3999	797466	0	True				
ANR	797686	UnaryOperationExpression	- 1		797466	0					
ANR	797687	UnaryOperator	-		797466	0					
ANR	797688	PrimaryExpression	1		797466	1					
ANR	797689	ExpressionStatement	* ret = ctx_value	133:1:4010:4026	797466	8	True				
ANR	797690	AssignmentExpression	* ret = ctx_value		797466	0		=			
ANR	797691	UnaryOperationExpression	* ret		797466	0					
ANR	797692	UnaryOperator	*		797466	0					
ANR	797693	Identifier	ret		797466	1					
ANR	797694	Identifier	ctx_value		797466	1					
ANR	797695	ReturnStatement	return 1 ;	134:1:4029:4037	797466	9	True				
ANR	797696	PrimaryExpression	1		797466	0					
ANR	797697	ReturnType	static int		797466	1					
ANR	797698	Identifier	php_filter_parse_int		797466	2					
ANR	797699	ParameterList	"const char * str , size_t str_len , zend_long * ret"		797466	3					
ANR	797700	Parameter	const char * str	86:32:2997:3011	797466	0	True				
ANR	797701	ParameterType	const char *		797466	0					
ANR	797702	Identifier	str		797466	1					
ANR	797703	Parameter	size_t str_len	86:49:3014:3027	797466	1	True				
ANR	797704	ParameterType	size_t		797466	0					
ANR	797705	Identifier	str_len		797466	1					
ANR	797706	Parameter	zend_long * ret	86:65:3030:3043	797466	2	True				
ANR	797707	ParameterType	zend_long *		797466	0					
ANR	797708	Identifier	ret		797466	1					
ANR	797709	CFGEntryNode	ENTRY		797466		True				
ANR	797710	CFGExitNode	EXIT		797466		True				
ANR	797711	Symbol	ret		797466						
ANR	797712	Symbol	ZEND_LONG_MAX		797466						
ANR	797713	Symbol	sign		797466						
ANR	797714	Symbol	MAX_LENGTH_OF_LONG		797466						
ANR	797715	Symbol	ctx_value		797466						
ANR	797716	Symbol	* ret		797466						
ANR	797717	Symbol	str		797466						
ANR	797718	Symbol	ZEND_LONG_MIN		797466						
ANR	797719	Symbol	str_len		797466						
ANR	797720	Symbol	SIZEOF_LONG		797466						
ANR	797721	Symbol	end		797466						
ANR	797722	Symbol	* ( str ++ )		797466						
ANR	797723	Symbol	* str		797466						
ANR	797724	Symbol	digit		797466						
ANR	797725	Function	php_filter_parse_octal	138:0:4052:4549							
ANR	797726	FunctionDef	"php_filter_parse_octal (const char * str , size_t str_len , zend_long * ret)"		797725	0					
ANR	797727	CompoundStatement		138:83:4135:4549	797725	0					
ANR	797728	IdentifierDeclStatement	zend_ulong ctx_value = 0 ;	139:1:4148:4172	797725	0	True				
ANR	797729	IdentifierDecl	ctx_value = 0		797725	0					
ANR	797730	IdentifierDeclType	zend_ulong		797725	0					
ANR	797731	Identifier	ctx_value		797725	1					
ANR	797732	AssignmentExpression	ctx_value = 0		797725	2		=			
ANR	797733	Identifier	ctx_value		797725	0					
ANR	797734	PrimaryExpression	0		797725	1					
ANR	797735	IdentifierDeclStatement	const char * end = str + str_len ;	140:1:4175:4206	797725	1	True				
ANR	797736	IdentifierDecl	* end = str + str_len		797725	0					
ANR	797737	IdentifierDeclType	const char *		797725	0					
ANR	797738	Identifier	end		797725	1					
ANR	797739	AssignmentExpression	* end = str + str_len		797725	2		=			
ANR	797740	Identifier	end		797725	0					
ANR	797741	AdditiveExpression	str + str_len		797725	1		+			
ANR	797742	Identifier	str		797725	0					
ANR	797743	Identifier	str_len		797725	1					
ANR	797744	WhileStatement	while ( str < end )		797725	2					
ANR	797745	Condition	str < end	142:8:4217:4225	797725	0	True				
ANR	797746	RelationalExpression	str < end		797725	0		<			
ANR	797747	Identifier	str		797725	0					
ANR	797748	Identifier	end		797725	1					
ANR	797749	CompoundStatement		5:19:92:92	797725	1					
ANR	797750	IfStatement	if ( * str >= '0' && * str <= '7' )		797725	0					
ANR	797751	Condition	* str >= '0' && * str <= '7'	143:6:4236:4261	797725	0	True				
ANR	797752	AndExpression	* str >= '0' && * str <= '7'		797725	0		&&			
ANR	797753	RelationalExpression	* str >= '0'		797725	0		>=			
ANR	797754	UnaryOperationExpression	* str		797725	0					
ANR	797755	UnaryOperator	*		797725	0					
ANR	797756	Identifier	str		797725	1					
ANR	797757	PrimaryExpression	'0'		797725	1					
ANR	797758	RelationalExpression	* str <= '7'		797725	1		<=			
ANR	797759	UnaryOperationExpression	* str		797725	0					
ANR	797760	UnaryOperator	*		797725	0					
ANR	797761	Identifier	str		797725	1					
ANR	797762	PrimaryExpression	'7'		797725	1					
ANR	797763	CompoundStatement		7:3:133:166	797725	1					
ANR	797764	IdentifierDeclStatement	zend_ulong n = ( ( * ( str ++ ) ) - '0' ) ;	144:3:4269:4302	797725	0	True				
ANR	797765	IdentifierDecl	n = ( ( * ( str ++ ) ) - '0' )		797725	0					
ANR	797766	IdentifierDeclType	zend_ulong		797725	0					
ANR	797767	Identifier	n		797725	1					
ANR	797768	AssignmentExpression	n = ( ( * ( str ++ ) ) - '0' )		797725	2		=			
ANR	797769	Identifier	n		797725	0					
ANR	797770	AdditiveExpression	( * ( str ++ ) ) - '0'		797725	1		-			
ANR	797771	UnaryOperationExpression	* ( str ++ )		797725	0					
ANR	797772	UnaryOperator	*		797725	0					
ANR	797773	PostIncDecOperationExpression	str ++		797725	1					
ANR	797774	Identifier	str		797725	0					
ANR	797775	IncDec	++		797725	1					
ANR	797776	PrimaryExpression	'0'		797725	1					
ANR	797777	IfStatement	if ( ( ctx_value > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 8 ) || ( ( ctx_value = ctx_value * 8 ) > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n ) )		797725	1					
ANR	797778	Condition	( ctx_value > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 8 ) || ( ( ctx_value = ctx_value * 8 ) > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n )	146:7:4312:4431	797725	0	True				
ANR	797779	OrExpression	( ctx_value > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 8 ) || ( ( ctx_value = ctx_value * 8 ) > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n )		797725	0		||			
ANR	797780	RelationalExpression	ctx_value > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 8		797725	0		>			
ANR	797781	Identifier	ctx_value		797725	0					
ANR	797782	MultiplicativeExpression	( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 8		797725	1		/			
ANR	797783	CastExpression	( zend_ulong ) ( ~ ( zend_long ) 0 )		797725	0					
ANR	797784	CastTarget	zend_ulong		797725	0					
ANR	797785	UnaryOperationExpression	~ ( zend_long ) 0		797725	1					
ANR	797786	UnaryOperator	~		797725	0					
ANR	797787	CastExpression	( zend_long ) 0		797725	1					
ANR	797788	CastTarget	zend_long		797725	0					
ANR	797789	PrimaryExpression	0		797725	1					
ANR	797790	PrimaryExpression	8		797725	1					
ANR	797791	RelationalExpression	( ctx_value = ctx_value * 8 ) > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n		797725	1		>			
ANR	797792	AssignmentExpression	ctx_value = ctx_value * 8		797725	0		=			
ANR	797793	Identifier	ctx_value		797725	0					
ANR	797794	MultiplicativeExpression	ctx_value * 8		797725	1		*			
ANR	797795	Identifier	ctx_value		797725	0					
ANR	797796	PrimaryExpression	8		797725	1					
ANR	797797	AdditiveExpression	( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n		797725	1		-			
ANR	797798	CastExpression	( zend_ulong ) ( ~ ( zend_long ) 0 )		797725	0					
ANR	797799	CastTarget	zend_ulong		797725	0					
ANR	797800	UnaryOperationExpression	~ ( zend_long ) 0		797725	1					
ANR	797801	UnaryOperator	~		797725	0					
ANR	797802	CastExpression	( zend_long ) 0		797725	1					
ANR	797803	CastTarget	zend_long		797725	0					
ANR	797804	PrimaryExpression	0		797725	1					
ANR	797805	Identifier	n		797725	1					
ANR	797806	CompoundStatement		10:71:298:298	797725	1					
ANR	797807	ReturnStatement	return - 1 ;	148:4:4440:4449	797725	0	True				
ANR	797808	UnaryOperationExpression	- 1		797725	0					
ANR	797809	UnaryOperator	-		797725	0					
ANR	797810	PrimaryExpression	1		797725	1					
ANR	797811	ExpressionStatement	ctx_value += n	150:3:4459:4473	797725	2	True				
ANR	797812	AssignmentExpression	ctx_value += n		797725	0		+=			
ANR	797813	Identifier	ctx_value		797725	0					
ANR	797814	Identifier	n		797725	1					
ANR	797815	ElseStatement	else		797725	0					
ANR	797816	CompoundStatement		14:9:348:348	797725	0					
ANR	797817	ReturnStatement	return - 1 ;	152:3:4489:4498	797725	0	True				
ANR	797818	UnaryOperationExpression	- 1		797725	0					
ANR	797819	UnaryOperator	-		797725	0					
ANR	797820	PrimaryExpression	1		797725	1					
ANR	797821	ExpressionStatement	* ret = ( zend_long ) ctx_value	156:1:4509:4536	797725	3	True				
ANR	797822	AssignmentExpression	* ret = ( zend_long ) ctx_value		797725	0		=			
ANR	797823	UnaryOperationExpression	* ret		797725	0					
ANR	797824	UnaryOperator	*		797725	0					
ANR	797825	Identifier	ret		797725	1					
ANR	797826	CastExpression	( zend_long ) ctx_value		797725	1					
ANR	797827	CastTarget	zend_long		797725	0					
ANR	797828	Identifier	ctx_value		797725	1					
ANR	797829	ReturnStatement	return 1 ;	157:1:4539:4547	797725	4	True				
ANR	797830	PrimaryExpression	1		797725	0					
ANR	797831	ReturnType	static int		797725	1					
ANR	797832	Identifier	php_filter_parse_octal		797725	2					
ANR	797833	ParameterList	"const char * str , size_t str_len , zend_long * ret"		797725	3					
ANR	797834	Parameter	const char * str	138:34:4086:4100	797725	0	True				
ANR	797835	ParameterType	const char *		797725	0					
ANR	797836	Identifier	str		797725	1					
ANR	797837	Parameter	size_t str_len	138:51:4103:4116	797725	1	True				
ANR	797838	ParameterType	size_t		797725	0					
ANR	797839	Identifier	str_len		797725	1					
ANR	797840	Parameter	zend_long * ret	138:67:4119:4132	797725	2	True				
ANR	797841	ParameterType	zend_long *		797725	0					
ANR	797842	Identifier	ret		797725	1					
ANR	797843	CFGEntryNode	ENTRY		797725		True				
ANR	797844	CFGExitNode	EXIT		797725		True				
ANR	797845	Symbol	str		797725						
ANR	797846	Symbol	ret		797725						
ANR	797847	Symbol	str_len		797725						
ANR	797848	Symbol	ctx_value		797725						
ANR	797849	Symbol	end		797725						
ANR	797850	Symbol	* ( str ++ )		797725						
ANR	797851	Symbol	* str		797725						
ANR	797852	Symbol	* ret		797725						
ANR	797853	Symbol	n		797725						
ANR	797854	Function	php_filter_parse_hex	161:0:4562:5211							
ANR	797855	FunctionDef	"php_filter_parse_hex (const char * str , size_t str_len , zend_long * ret)"		797854	0					
ANR	797856	CompoundStatement		161:81:4643:5211	797854	0					
ANR	797857	IdentifierDeclStatement	zend_ulong ctx_value = 0 ;	162:1:4656:4680	797854	0	True				
ANR	797858	IdentifierDecl	ctx_value = 0		797854	0					
ANR	797859	IdentifierDeclType	zend_ulong		797854	0					
ANR	797860	Identifier	ctx_value		797854	1					
ANR	797861	AssignmentExpression	ctx_value = 0		797854	2		=			
ANR	797862	Identifier	ctx_value		797854	0					
ANR	797863	PrimaryExpression	0		797854	1					
ANR	797864	IdentifierDeclStatement	const char * end = str + str_len ;	163:1:4683:4714	797854	1	True				
ANR	797865	IdentifierDecl	* end = str + str_len		797854	0					
ANR	797866	IdentifierDeclType	const char *		797854	0					
ANR	797867	Identifier	end		797854	1					
ANR	797868	AssignmentExpression	* end = str + str_len		797854	2		=			
ANR	797869	Identifier	end		797854	0					
ANR	797870	AdditiveExpression	str + str_len		797854	1		+			
ANR	797871	Identifier	str		797854	0					
ANR	797872	Identifier	str_len		797854	1					
ANR	797873	IdentifierDeclStatement	zend_ulong n ;	164:1:4717:4729	797854	2	True				
ANR	797874	IdentifierDecl	n		797854	0					
ANR	797875	IdentifierDeclType	zend_ulong		797854	0					
ANR	797876	Identifier	n		797854	1					
ANR	797877	WhileStatement	while ( str < end )		797854	3					
ANR	797878	Condition	str < end	166:8:4740:4748	797854	0	True				
ANR	797879	RelationalExpression	str < end		797854	0		<			
ANR	797880	Identifier	str		797854	0					
ANR	797881	Identifier	end		797854	1					
ANR	797882	CompoundStatement		6:19:107:107	797854	1					
ANR	797883	IfStatement	if ( * str >= '0' && * str <= '9' )		797854	0					
ANR	797884	Condition	* str >= '0' && * str <= '9'	167:6:4759:4784	797854	0	True				
ANR	797885	AndExpression	* str >= '0' && * str <= '9'		797854	0		&&			
ANR	797886	RelationalExpression	* str >= '0'		797854	0		>=			
ANR	797887	UnaryOperationExpression	* str		797854	0					
ANR	797888	UnaryOperator	*		797854	0					
ANR	797889	Identifier	str		797854	1					
ANR	797890	PrimaryExpression	'0'		797854	1					
ANR	797891	RelationalExpression	* str <= '9'		797854	1		<=			
ANR	797892	UnaryOperationExpression	* str		797854	0					
ANR	797893	UnaryOperator	*		797854	0					
ANR	797894	Identifier	str		797854	1					
ANR	797895	PrimaryExpression	'9'		797854	1					
ANR	797896	CompoundStatement		7:34:143:143	797854	1					
ANR	797897	ExpressionStatement	n = ( ( * ( str ++ ) ) - '0' )	168:3:4792:4814	797854	0	True				
ANR	797898	AssignmentExpression	n = ( ( * ( str ++ ) ) - '0' )		797854	0		=			
ANR	797899	Identifier	n		797854	0					
ANR	797900	AdditiveExpression	( * ( str ++ ) ) - '0'		797854	1		-			
ANR	797901	UnaryOperationExpression	* ( str ++ )		797854	0					
ANR	797902	UnaryOperator	*		797854	0					
ANR	797903	PostIncDecOperationExpression	str ++		797854	1					
ANR	797904	Identifier	str		797854	0					
ANR	797905	IncDec	++		797854	1					
ANR	797906	PrimaryExpression	'0'		797854	1					
ANR	797907	ElseStatement	else		797854	0					
ANR	797908	IfStatement	if ( * str >= 'a' && * str <= 'f' )		797854	0					
ANR	797909	Condition	* str >= 'a' && * str <= 'f'	169:13:4829:4854	797854	0	True				
ANR	797910	AndExpression	* str >= 'a' && * str <= 'f'		797854	0		&&			
ANR	797911	RelationalExpression	* str >= 'a'		797854	0		>=			
ANR	797912	UnaryOperationExpression	* str		797854	0					
ANR	797913	UnaryOperator	*		797854	0					
ANR	797914	Identifier	str		797854	1					
ANR	797915	PrimaryExpression	'a'		797854	1					
ANR	797916	RelationalExpression	* str <= 'f'		797854	1		<=			
ANR	797917	UnaryOperationExpression	* str		797854	0					
ANR	797918	UnaryOperator	*		797854	0					
ANR	797919	Identifier	str		797854	1					
ANR	797920	PrimaryExpression	'f'		797854	1					
ANR	797921	CompoundStatement		9:41:213:213	797854	1					
ANR	797922	ExpressionStatement	n = ( ( * ( str ++ ) ) - ( 'a' - 10 ) )	170:3:4862:4891	797854	0	True				
ANR	797923	AssignmentExpression	n = ( ( * ( str ++ ) ) - ( 'a' - 10 ) )		797854	0		=			
ANR	797924	Identifier	n		797854	0					
ANR	797925	AdditiveExpression	( * ( str ++ ) ) - ( 'a' - 10 )		797854	1		-			
ANR	797926	UnaryOperationExpression	* ( str ++ )		797854	0					
ANR	797927	UnaryOperator	*		797854	0					
ANR	797928	PostIncDecOperationExpression	str ++		797854	1					
ANR	797929	Identifier	str		797854	0					
ANR	797930	IncDec	++		797854	1					
ANR	797931	AdditiveExpression	'a' - 10		797854	1		-			
ANR	797932	PrimaryExpression	'a'		797854	0					
ANR	797933	PrimaryExpression	10		797854	1					
ANR	797934	ElseStatement	else		797854	0					
ANR	797935	IfStatement	if ( * str >= 'A' && * str <= 'F' )		797854	0					
ANR	797936	Condition	* str >= 'A' && * str <= 'F'	171:13:4906:4931	797854	0	True				
ANR	797937	AndExpression	* str >= 'A' && * str <= 'F'		797854	0		&&			
ANR	797938	RelationalExpression	* str >= 'A'		797854	0		>=			
ANR	797939	UnaryOperationExpression	* str		797854	0					
ANR	797940	UnaryOperator	*		797854	0					
ANR	797941	Identifier	str		797854	1					
ANR	797942	PrimaryExpression	'A'		797854	1					
ANR	797943	RelationalExpression	* str <= 'F'		797854	1		<=			
ANR	797944	UnaryOperationExpression	* str		797854	0					
ANR	797945	UnaryOperator	*		797854	0					
ANR	797946	Identifier	str		797854	1					
ANR	797947	PrimaryExpression	'F'		797854	1					
ANR	797948	CompoundStatement		11:41:290:290	797854	1					
ANR	797949	ExpressionStatement	n = ( ( * ( str ++ ) ) - ( 'A' - 10 ) )	172:3:4939:4968	797854	0	True				
ANR	797950	AssignmentExpression	n = ( ( * ( str ++ ) ) - ( 'A' - 10 ) )		797854	0		=			
ANR	797951	Identifier	n		797854	0					
ANR	797952	AdditiveExpression	( * ( str ++ ) ) - ( 'A' - 10 )		797854	1		-			
ANR	797953	UnaryOperationExpression	* ( str ++ )		797854	0					
ANR	797954	UnaryOperator	*		797854	0					
ANR	797955	PostIncDecOperationExpression	str ++		797854	1					
ANR	797956	Identifier	str		797854	0					
ANR	797957	IncDec	++		797854	1					
ANR	797958	AdditiveExpression	'A' - 10		797854	1		-			
ANR	797959	PrimaryExpression	'A'		797854	0					
ANR	797960	PrimaryExpression	10		797854	1					
ANR	797961	ElseStatement	else		797854	0					
ANR	797962	CompoundStatement		13:9:335:335	797854	0					
ANR	797963	ReturnStatement	return - 1 ;	174:3:4984:4993	797854	0	True				
ANR	797964	UnaryOperationExpression	- 1		797854	0					
ANR	797965	UnaryOperator	-		797854	0					
ANR	797966	PrimaryExpression	1		797854	1					
ANR	797967	IfStatement	if ( ( ctx_value > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 16 ) || ( ( ctx_value = ctx_value * 16 ) > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n ) )		797854	1					
ANR	797968	Condition	( ctx_value > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 16 ) || ( ( ctx_value = ctx_value * 16 ) > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n )	176:6:5005:5125	797854	0	True				
ANR	797969	OrExpression	( ctx_value > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 16 ) || ( ( ctx_value = ctx_value * 16 ) > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n )		797854	0		||			
ANR	797970	RelationalExpression	ctx_value > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 16		797854	0		>			
ANR	797971	Identifier	ctx_value		797854	0					
ANR	797972	MultiplicativeExpression	( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) / 16		797854	1		/			
ANR	797973	CastExpression	( zend_ulong ) ( ~ ( zend_long ) 0 )		797854	0					
ANR	797974	CastTarget	zend_ulong		797854	0					
ANR	797975	UnaryOperationExpression	~ ( zend_long ) 0		797854	1					
ANR	797976	UnaryOperator	~		797854	0					
ANR	797977	CastExpression	( zend_long ) 0		797854	1					
ANR	797978	CastTarget	zend_long		797854	0					
ANR	797979	PrimaryExpression	0		797854	1					
ANR	797980	PrimaryExpression	16		797854	1					
ANR	797981	RelationalExpression	( ctx_value = ctx_value * 16 ) > ( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n		797854	1		>			
ANR	797982	AssignmentExpression	ctx_value = ctx_value * 16		797854	0		=			
ANR	797983	Identifier	ctx_value		797854	0					
ANR	797984	MultiplicativeExpression	ctx_value * 16		797854	1		*			
ANR	797985	Identifier	ctx_value		797854	0					
ANR	797986	PrimaryExpression	16		797854	1					
ANR	797987	AdditiveExpression	( ( zend_ulong ) ( ~ ( zend_long ) 0 ) ) - n		797854	1		-			
ANR	797988	CastExpression	( zend_ulong ) ( ~ ( zend_long ) 0 )		797854	0					
ANR	797989	CastTarget	zend_ulong		797854	0					
ANR	797990	UnaryOperationExpression	~ ( zend_long ) 0		797854	1					
ANR	797991	UnaryOperator	~		797854	0					
ANR	797992	CastExpression	( zend_long ) 0		797854	1					
ANR	797993	CastTarget	zend_long		797854	0					
ANR	797994	PrimaryExpression	0		797854	1					
ANR	797995	Identifier	n		797854	1					
ANR	797996	CompoundStatement		17:71:484:484	797854	1					
ANR	797997	ReturnStatement	return - 1 ;	178:3:5133:5142	797854	0	True				
ANR	797998	UnaryOperationExpression	- 1		797854	0					
ANR	797999	UnaryOperator	-		797854	0					
ANR	798000	PrimaryExpression	1		797854	1					
ANR	798001	ExpressionStatement	ctx_value += n	180:2:5150:5164	797854	2	True				
ANR	798002	AssignmentExpression	ctx_value += n		797854	0		+=			
ANR	798003	Identifier	ctx_value		797854	0					
ANR	798004	Identifier	n		797854	1					
ANR	798005	ExpressionStatement	* ret = ( zend_long ) ctx_value	183:1:5171:5198	797854	4	True				
ANR	798006	AssignmentExpression	* ret = ( zend_long ) ctx_value		797854	0		=			
ANR	798007	UnaryOperationExpression	* ret		797854	0					
ANR	798008	UnaryOperator	*		797854	0					
ANR	798009	Identifier	ret		797854	1					
ANR	798010	CastExpression	( zend_long ) ctx_value		797854	1					
ANR	798011	CastTarget	zend_long		797854	0					
ANR	798012	Identifier	ctx_value		797854	1					
ANR	798013	ReturnStatement	return 1 ;	184:1:5201:5209	797854	5	True				
ANR	798014	PrimaryExpression	1		797854	0					
ANR	798015	ReturnType	static int		797854	1					
ANR	798016	Identifier	php_filter_parse_hex		797854	2					
ANR	798017	ParameterList	"const char * str , size_t str_len , zend_long * ret"		797854	3					
ANR	798018	Parameter	const char * str	161:32:4594:4608	797854	0	True				
ANR	798019	ParameterType	const char *		797854	0					
ANR	798020	Identifier	str		797854	1					
ANR	798021	Parameter	size_t str_len	161:49:4611:4624	797854	1	True				
ANR	798022	ParameterType	size_t		797854	0					
ANR	798023	Identifier	str_len		797854	1					
ANR	798024	Parameter	zend_long * ret	161:65:4627:4640	797854	2	True				
ANR	798025	ParameterType	zend_long *		797854	0					
ANR	798026	Identifier	ret		797854	1					
ANR	798027	CFGEntryNode	ENTRY		797854		True				
ANR	798028	CFGExitNode	EXIT		797854		True				
ANR	798029	Symbol	str		797854						
ANR	798030	Symbol	ret		797854						
ANR	798031	Symbol	str_len		797854						
ANR	798032	Symbol	ctx_value		797854						
ANR	798033	Symbol	end		797854						
ANR	798034	Symbol	* ( str ++ )		797854						
ANR	798035	Symbol	* str		797854						
ANR	798036	Symbol	* ret		797854						
ANR	798037	Symbol	n		797854						
ANR	798038	DeclStmt									
ANR	798039	Decl							zval	zval *	option_val
ANR	798040	DeclStmt									
ANR	798041	Decl							zend_long	zend_long	min_range
ANR	798042	Decl							zend_long	zend_long	max_range
ANR	798043	Decl							zend_long	zend_long	option_flags
ANR	798044	DeclStmt									
ANR	798045	Decl							int	int	min_range_set
ANR	798046	Decl							int	int	max_range_set
ANR	798047	DeclStmt									
ANR	798048	Decl							int	int	allow_octal
ANR	798049	Decl							int	int	allow_hex
ANR	798050	DeclStmt									
ANR	798051	Decl							size_t	size_t	len
ANR	798052	DeclStmt									
ANR	798053	Decl							int	int	error
ANR	798054	DeclStmt									
ANR	798055	Decl							zend_long	zend_long	ctx_value
ANR	798056	DeclStmt									
ANR	798057	Decl							char	char *	p
ANR	798058	DeclStmt									
ANR	798059	Decl							char	char *	str
ANR	798060	DeclStmt									
ANR	798061	Decl							size_t	size_t	len
ANR	798062	DeclStmt									
ANR	798063	Decl							int	int	ret
ANR	798064	DeclStmt									
ANR	798065	Decl							size_t	size_t	len
ANR	798066	DeclStmt									
ANR	798067	Decl							char	char *	str
ANR	798068	Decl							char	char *	end
ANR	798069	DeclStmt									
ANR	798070	Decl							char	char *	num
ANR	798071	Decl							char	char *	p
ANR	798072	DeclStmt									
ANR	798073	Decl							zval	zval *	option_val
ANR	798074	DeclStmt									
ANR	798075	Decl							char	char *	decimal
ANR	798076	DeclStmt									
ANR	798077	Decl							int	int	decimal_set
ANR	798078	DeclStmt									
ANR	798079	Decl							size_t	size_t	decimal_len
ANR	798080	DeclStmt									
ANR	798081	Decl							char	char	dec_sep
ANR	798082	DeclStmt									
ANR	798083	Decl							char	char [ 3 ]	tsd_sep
ANR	798084	DeclStmt									
ANR	798085	Decl							zend_long	zend_long	lval
ANR	798086	DeclStmt									
ANR	798087	Decl							double	double	dval
ANR	798088	DeclStmt									
ANR	798089	Decl							int	int	first
ANR	798090	Decl							int	int	n
ANR	798091	DeclStmt									
ANR	798092	Decl							zval	zval *	option_val
ANR	798093	DeclStmt									
ANR	798094	Decl							zend_string	zend_string *	regexp
ANR	798095	DeclStmt									
ANR	798096	Decl							int	int	regexp_set
ANR	798097	DeclStmt									
ANR	798098	Decl							pcre	pcre *	re
ANR	798099	DeclStmt									
ANR	798100	Decl							pcre_extra	pcre_extra *	pcre_extra
ANR	798101	DeclStmt									
ANR	798102	Decl							int	int	preg_options
ANR	798103	DeclStmt									
ANR	798104	Decl							int	int [ 3 ]	ovector
ANR	798105	DeclStmt									
ANR	798106	Decl							int	int	matches
ANR	798107	Function	_php_filter_validate_domain	457:0:10548:11544							
ANR	798108	FunctionDef	"_php_filter_validate_domain (char * domain , int len , zend_long flags)"		798107	0					
ANR	798109	CompoundStatement		458:0:10638:11544	798107	0					
ANR	798110	IdentifierDeclStatement	"char * e , * s , * t ;"	459:1:10641:10656	798107	0	True				
ANR	798111	IdentifierDecl	* e		798107	0					
ANR	798112	IdentifierDeclType	char *		798107	0					
ANR	798113	Identifier	e		798107	1					
ANR	798114	IdentifierDecl	* s		798107	1					
ANR	798115	IdentifierDeclType	char *		798107	0					
ANR	798116	Identifier	s		798107	1					
ANR	798117	IdentifierDecl	* t		798107	2					
ANR	798118	IdentifierDeclType	char *		798107	0					
ANR	798119	Identifier	t		798107	1					
ANR	798120	IdentifierDeclStatement	size_t l ;	460:1:10659:10667	798107	1	True				
ANR	798121	IdentifierDecl	l		798107	0					
ANR	798122	IdentifierDeclType	size_t		798107	0					
ANR	798123	Identifier	l		798107	1					
ANR	798124	IdentifierDeclStatement	int hostname = flags & FILTER_FLAG_HOSTNAME ;	461:1:10670:10713	798107	2	True				
ANR	798125	IdentifierDecl	hostname = flags & FILTER_FLAG_HOSTNAME		798107	0					
ANR	798126	IdentifierDeclType	int		798107	0					
ANR	798127	Identifier	hostname		798107	1					
ANR	798128	AssignmentExpression	hostname = flags & FILTER_FLAG_HOSTNAME		798107	2		=			
ANR	798129	Identifier	hostname		798107	0					
ANR	798130	BitAndExpression	flags & FILTER_FLAG_HOSTNAME		798107	1		&			
ANR	798131	Identifier	flags		798107	0					
ANR	798132	Identifier	FILTER_FLAG_HOSTNAME		798107	1					
ANR	798133	IdentifierDeclStatement	unsigned char i = 1 ;	462:1:10716:10735	798107	3	True				
ANR	798134	IdentifierDecl	i = 1		798107	0					
ANR	798135	IdentifierDeclType	unsigned char		798107	0					
ANR	798136	Identifier	i		798107	1					
ANR	798137	AssignmentExpression	i = 1		798107	2		=			
ANR	798138	Identifier	i		798107	0					
ANR	798139	PrimaryExpression	1		798107	1					
ANR	798140	ExpressionStatement	s = domain	464:1:10739:10749	798107	4	True				
ANR	798141	AssignmentExpression	s = domain		798107	0		=			
ANR	798142	Identifier	s		798107	0					
ANR	798143	Identifier	domain		798107	1					
ANR	798144	ExpressionStatement	l = len	465:1:10752:10759	798107	5	True				
ANR	798145	AssignmentExpression	l = len		798107	0		=			
ANR	798146	Identifier	l		798107	0					
ANR	798147	Identifier	len		798107	1					
ANR	798148	ExpressionStatement	e = domain + l	466:1:10762:10776	798107	6	True				
ANR	798149	AssignmentExpression	e = domain + l		798107	0		=			
ANR	798150	Identifier	e		798107	0					
ANR	798151	AdditiveExpression	domain + l		798107	1		+			
ANR	798152	Identifier	domain		798107	0					
ANR	798153	Identifier	l		798107	1					
ANR	798154	ExpressionStatement	t = e - 1	467:1:10779:10788	798107	7	True				
ANR	798155	AssignmentExpression	t = e - 1		798107	0		=			
ANR	798156	Identifier	t		798107	0					
ANR	798157	AdditiveExpression	e - 1		798107	1		-			
ANR	798158	Identifier	e		798107	0					
ANR	798159	PrimaryExpression	1		798107	1					
ANR	798160	IfStatement	if ( * t == '.' )		798107	8					
ANR	798161	Condition	* t == '.'	470:5:10823:10831	798107	0	True				
ANR	798162	EqualityExpression	* t == '.'		798107	0		==			
ANR	798163	UnaryOperationExpression	* t		798107	0					
ANR	798164	UnaryOperator	*		798107	0					
ANR	798165	Identifier	t		798107	1					
ANR	798166	PrimaryExpression	'.'		798107	1					
ANR	798167	CompoundStatement		13:16:195:195	798107	1					
ANR	798168	ExpressionStatement	e = t	471:2:10838:10843	798107	0	True				
ANR	798169	AssignmentExpression	e = t		798107	0		=			
ANR	798170	Identifier	e		798107	0					
ANR	798171	Identifier	t		798107	1					
ANR	798172	ExpressionStatement	l --	472:2:10847:10850	798107	1	True				
ANR	798173	PostIncDecOperationExpression	l --		798107	0					
ANR	798174	Identifier	l		798107	0					
ANR	798175	IncDec	--		798107	1					
ANR	798176	IfStatement	if ( l > 253 )		798107	9					
ANR	798177	Condition	l > 253	476:5:10939:10945	798107	0	True				
ANR	798178	RelationalExpression	l > 253		798107	0		>			
ANR	798179	Identifier	l		798107	0					
ANR	798180	PrimaryExpression	253		798107	1					
ANR	798181	CompoundStatement		19:14:309:309	798107	1					
ANR	798182	ReturnStatement	return 0 ;	477:2:10952:10960	798107	0	True				
ANR	798183	PrimaryExpression	0		798107	0					
ANR	798184	IfStatement	if ( * s == '.' || ( hostname && ! isalnum ( ( int ) * ( unsigned char * ) s ) ) )		798107	10					
ANR	798185	Condition	* s == '.' || ( hostname && ! isalnum ( ( int ) * ( unsigned char * ) s ) )	481:4:11009:11069	798107	0	True				
ANR	798186	OrExpression	* s == '.' || ( hostname && ! isalnum ( ( int ) * ( unsigned char * ) s ) )		798107	0		||			
ANR	798187	EqualityExpression	* s == '.'		798107	0		==			
ANR	798188	UnaryOperationExpression	* s		798107	0					
ANR	798189	UnaryOperator	*		798107	0					
ANR	798190	Identifier	s		798107	1					
ANR	798191	PrimaryExpression	'.'		798107	1					
ANR	798192	AndExpression	hostname && ! isalnum ( ( int ) * ( unsigned char * ) s )		798107	1		&&			
ANR	798193	Identifier	hostname		798107	0					
ANR	798194	UnaryOperationExpression	! isalnum ( ( int ) * ( unsigned char * ) s )		798107	1					
ANR	798195	UnaryOperator	!		798107	0					
ANR	798196	CallExpression	isalnum ( ( int ) * ( unsigned char * ) s )		798107	1					
ANR	798197	Callee	isalnum		798107	0					
ANR	798198	Identifier	isalnum		798107	0					
ANR	798199	ArgumentList	( int ) * ( unsigned char * ) s		798107	1					
ANR	798200	Argument	( int ) * ( unsigned char * ) s		798107	0					
ANR	798201	CastExpression	( int ) * ( unsigned char * ) s		798107	0					
ANR	798202	CastTarget	int		798107	0					
ANR	798203	UnaryOperationExpression	* ( unsigned char * ) s		798107	1					
ANR	798204	UnaryOperator	*		798107	0					
ANR	798205	CastExpression	( unsigned char * ) s		798107	1					
ANR	798206	CastTarget	unsigned char *		798107	0					
ANR	798207	Identifier	s		798107	1					
ANR	798208	CompoundStatement		24:67:433:433	798107	1					
ANR	798209	ReturnStatement	return 0 ;	482:2:11076:11084	798107	0	True				
ANR	798210	PrimaryExpression	0		798107	0					
ANR	798211	WhileStatement	while ( s < e )		798107	11					
ANR	798212	Condition	s < e	485:8:11098:11102	798107	0	True				
ANR	798213	RelationalExpression	s < e		798107	0		<			
ANR	798214	Identifier	s		798107	0					
ANR	798215	Identifier	e		798107	1					
ANR	798216	CompoundStatement		28:15:466:466	798107	1					
ANR	798217	IfStatement	if ( * s == '.' )		798107	0					
ANR	798218	Condition	* s == '.'	486:6:11113:11121	798107	0	True				
ANR	798219	EqualityExpression	* s == '.'		798107	0		==			
ANR	798220	UnaryOperationExpression	* s		798107	0					
ANR	798221	UnaryOperator	*		798107	0					
ANR	798222	Identifier	s		798107	1					
ANR	798223	PrimaryExpression	'.'		798107	1					
ANR	798224	CompoundStatement		29:17:485:485	798107	1					
ANR	798225	IfStatement	if ( * ( s + 1 ) == '.' || ( hostname && ( ! isalnum ( ( int ) * ( unsigned char * ) ( s - 1 ) ) || ! isalnum ( ( int ) * ( unsigned char * ) ( s + 1 ) ) ) ) )		798107	0					
ANR	798226	Condition	* ( s + 1 ) == '.' || ( hostname && ( ! isalnum ( ( int ) * ( unsigned char * ) ( s - 1 ) ) || ! isalnum ( ( int ) * ( unsigned char * ) ( s + 1 ) ) ) )	488:7:11207:11325	798107	0	True				
ANR	798227	OrExpression	* ( s + 1 ) == '.' || ( hostname && ( ! isalnum ( ( int ) * ( unsigned char * ) ( s - 1 ) ) || ! isalnum ( ( int ) * ( unsigned char * ) ( s + 1 ) ) ) )		798107	0		||			
ANR	798228	EqualityExpression	* ( s + 1 ) == '.'		798107	0		==			
ANR	798229	UnaryOperationExpression	* ( s + 1 )		798107	0					
ANR	798230	UnaryOperator	*		798107	0					
ANR	798231	AdditiveExpression	s + 1		798107	1		+			
ANR	798232	Identifier	s		798107	0					
ANR	798233	PrimaryExpression	1		798107	1					
ANR	798234	PrimaryExpression	'.'		798107	1					
ANR	798235	AndExpression	hostname && ( ! isalnum ( ( int ) * ( unsigned char * ) ( s - 1 ) ) || ! isalnum ( ( int ) * ( unsigned char * ) ( s + 1 ) ) )		798107	1		&&			
ANR	798236	Identifier	hostname		798107	0					
ANR	798237	OrExpression	! isalnum ( ( int ) * ( unsigned char * ) ( s - 1 ) ) || ! isalnum ( ( int ) * ( unsigned char * ) ( s + 1 ) )		798107	1		||			
ANR	798238	UnaryOperationExpression	! isalnum ( ( int ) * ( unsigned char * ) ( s - 1 ) )		798107	0					
ANR	798239	UnaryOperator	!		798107	0					
ANR	798240	CallExpression	isalnum ( ( int ) * ( unsigned char * ) ( s - 1 ) )		798107	1					
ANR	798241	Callee	isalnum		798107	0					
ANR	798242	Identifier	isalnum		798107	0					
ANR	798243	ArgumentList	( int ) * ( unsigned char * ) ( s - 1 )		798107	1					
ANR	798244	Argument	( int ) * ( unsigned char * ) ( s - 1 )		798107	0					
ANR	798245	CastExpression	( int ) * ( unsigned char * ) ( s - 1 )		798107	0					
ANR	798246	CastTarget	int		798107	0					
ANR	798247	UnaryOperationExpression	* ( unsigned char * ) ( s - 1 )		798107	1					
ANR	798248	UnaryOperator	*		798107	0					
ANR	798249	CastExpression	( unsigned char * ) ( s - 1 )		798107	1					
ANR	798250	CastTarget	unsigned char *		798107	0					
ANR	798251	AdditiveExpression	s - 1		798107	1		-			
ANR	798252	Identifier	s		798107	0					
ANR	798253	PrimaryExpression	1		798107	1					
ANR	798254	UnaryOperationExpression	! isalnum ( ( int ) * ( unsigned char * ) ( s + 1 ) )		798107	1					
ANR	798255	UnaryOperator	!		798107	0					
ANR	798256	CallExpression	isalnum ( ( int ) * ( unsigned char * ) ( s + 1 ) )		798107	1					
ANR	798257	Callee	isalnum		798107	0					
ANR	798258	Identifier	isalnum		798107	0					
ANR	798259	ArgumentList	( int ) * ( unsigned char * ) ( s + 1 )		798107	1					
ANR	798260	Argument	( int ) * ( unsigned char * ) ( s + 1 )		798107	0					
ANR	798261	CastExpression	( int ) * ( unsigned char * ) ( s + 1 )		798107	0					
ANR	798262	CastTarget	int		798107	0					
ANR	798263	UnaryOperationExpression	* ( unsigned char * ) ( s + 1 )		798107	1					
ANR	798264	UnaryOperator	*		798107	0					
ANR	798265	CastExpression	( unsigned char * ) ( s + 1 )		798107	1					
ANR	798266	CastTarget	unsigned char *		798107	0					
ANR	798267	AdditiveExpression	s + 1		798107	1		+			
ANR	798268	Identifier	s		798107	0					
ANR	798269	PrimaryExpression	1		798107	1					
ANR	798270	CompoundStatement		31:128:689:689	798107	1					
ANR	798271	ReturnStatement	return 0 ;	489:4:11334:11342	798107	0	True				
ANR	798272	PrimaryExpression	0		798107	0					
ANR	798273	ExpressionStatement	i = 1	493:3:11389:11394	798107	1	True				
ANR	798274	AssignmentExpression	i = 1		798107	0		=			
ANR	798275	Identifier	i		798107	0					
ANR	798276	PrimaryExpression	1		798107	1					
ANR	798277	ElseStatement	else		798107	0					
ANR	798278	CompoundStatement		37:9:766:766	798107	0					
ANR	798279	IfStatement	if ( i > 63 || ( hostname && * s != '-' && ! isalnum ( ( int ) * ( unsigned char * ) s ) ) )		798107	0					
ANR	798280	Condition	i > 63 || ( hostname && * s != '-' && ! isalnum ( ( int ) * ( unsigned char * ) s ) )	495:7:11414:11484	798107	0	True				
ANR	798281	OrExpression	i > 63 || ( hostname && * s != '-' && ! isalnum ( ( int ) * ( unsigned char * ) s ) )		798107	0		||			
ANR	798282	RelationalExpression	i > 63		798107	0		>			
ANR	798283	Identifier	i		798107	0					
ANR	798284	PrimaryExpression	63		798107	1					
ANR	798285	AndExpression	hostname && * s != '-' && ! isalnum ( ( int ) * ( unsigned char * ) s )		798107	1		&&			
ANR	798286	Identifier	hostname		798107	0					
ANR	798287	AndExpression	* s != '-' && ! isalnum ( ( int ) * ( unsigned char * ) s )		798107	1		&&			
ANR	798288	EqualityExpression	* s != '-'		798107	0		!=			
ANR	798289	UnaryOperationExpression	* s		798107	0					
ANR	798290	UnaryOperator	*		798107	0					
ANR	798291	Identifier	s		798107	1					
ANR	798292	PrimaryExpression	'-'		798107	1					
ANR	798293	UnaryOperationExpression	! isalnum ( ( int ) * ( unsigned char * ) s )		798107	1					
ANR	798294	UnaryOperator	!		798107	0					
ANR	798295	CallExpression	isalnum ( ( int ) * ( unsigned char * ) s )		798107	1					
ANR	798296	Callee	isalnum		798107	0					
ANR	798297	Identifier	isalnum		798107	0					
ANR	798298	ArgumentList	( int ) * ( unsigned char * ) s		798107	1					
ANR	798299	Argument	( int ) * ( unsigned char * ) s		798107	0					
ANR	798300	CastExpression	( int ) * ( unsigned char * ) s		798107	0					
ANR	798301	CastTarget	int		798107	0					
ANR	798302	UnaryOperationExpression	* ( unsigned char * ) s		798107	1					
ANR	798303	UnaryOperator	*		798107	0					
ANR	798304	CastExpression	( unsigned char * ) s		798107	1					
ANR	798305	CastTarget	unsigned char *		798107	0					
ANR	798306	Identifier	s		798107	1					
ANR	798307	CompoundStatement		38:80:848:848	798107	1					
ANR	798308	ReturnStatement	return 0 ;	496:4:11493:11501	798107	0	True				
ANR	798309	PrimaryExpression	0		798107	0					
ANR	798310	ExpressionStatement	i ++	499:3:11512:11515	798107	1	True				
ANR	798311	PostIncDecOperationExpression	i ++		798107	0					
ANR	798312	Identifier	i		798107	0					
ANR	798313	IncDec	++		798107	1					
ANR	798314	ExpressionStatement	s ++	502:2:11524:11527	798107	1	True				
ANR	798315	PostIncDecOperationExpression	s ++		798107	0					
ANR	798316	Identifier	s		798107	0					
ANR	798317	IncDec	++		798107	1					
ANR	798318	ReturnStatement	return 1 ;	505:1:11534:11542	798107	12	True				
ANR	798319	PrimaryExpression	1		798107	0					
ANR	798320	ReturnType	static int		798107	1					
ANR	798321	Identifier	_php_filter_validate_domain		798107	2					
ANR	798322	ParameterList	"char * domain , int len , zend_long flags"		798107	3					
ANR	798323	Parameter	char * domain	457:39:10587:10599	798107	0	True				
ANR	798324	ParameterType	char *		798107	0					
ANR	798325	Identifier	domain		798107	1					
ANR	798326	Parameter	int len	457:54:10602:10608	798107	1	True				
ANR	798327	ParameterType	int		798107	0					
ANR	798328	Identifier	len		798107	1					
ANR	798329	Parameter	zend_long flags	457:63:10611:10625	798107	2	True				
ANR	798330	ParameterType	zend_long		798107	0					
ANR	798331	Identifier	flags		798107	1					
ANR	798332	CFGEntryNode	ENTRY		798107		True				
ANR	798333	CFGExitNode	EXIT		798107		True				
ANR	798334	Symbol	isalnum		798107						
ANR	798335	Symbol	e		798107						
ANR	798336	Symbol	flags		798107						
ANR	798337	Symbol	FILTER_FLAG_HOSTNAME		798107						
ANR	798338	Symbol	i		798107						
ANR	798339	Symbol	* ( unsigned char * ) s		798107						
ANR	798340	Symbol	l		798107						
ANR	798341	Symbol	* ( unsigned char * ) ( s - 1 )		798107						
ANR	798342	Symbol	hostname		798107						
ANR	798343	Symbol	s		798107						
ANR	798344	Symbol	len		798107						
ANR	798345	Symbol	t		798107						
ANR	798346	Symbol	* ( s + 1 )		798107						
ANR	798347	Symbol	domain		798107						
ANR	798348	Symbol	* ( unsigned char * ) ( s + 1 )		798107						
ANR	798349	Symbol	* s		798107						
ANR	798350	Symbol	* t		798107						
ANR	798351	DeclStmt									
ANR	798352	Decl							php_url	php_url *	url
ANR	798353	DeclStmt									
ANR	798354	Decl							int	int	old_len
ANR	798355	DeclStmt									
ANR	798356	Decl							char	char *	e
ANR	798357	Decl							char	char *	s
ANR	798358	Decl							char	char *	t
ANR	798359	DeclStmt									
ANR	798360	Decl							size_t	size_t	l
ANR	798361	DeclStmt									
ANR	798362	Decl							const char	const char [ ]	regexp
ANR	798363	DeclStmt									
ANR	798364	Decl							pcre	pcre *	re
ANR	798365	DeclStmt									
ANR	798366	Decl							pcre_extra	pcre_extra *	pcre_extra
ANR	798367	DeclStmt									
ANR	798368	Decl							int	int	preg_options
ANR	798369	DeclStmt									
ANR	798370	Decl							int	int [ 150 ]	ovector
ANR	798371	DeclStmt									
ANR	798372	Decl							int	int	matches
ANR	798373	DeclStmt									
ANR	798374	Decl							zend_string	zend_string *	sregexp
ANR	798375	Function	_php_filter_validate_ipv4	632:0:16365:17099							
ANR	798376	FunctionDef	"_php_filter_validate_ipv4 (char * str , size_t str_len , int * ip)"		798375	0					
ANR	798377	CompoundStatement		633:0:16448:17099	798375	0					
ANR	798378	IdentifierDeclStatement	const char * end = str + str_len ;	634:1:16451:16482	798375	0	True				
ANR	798379	IdentifierDecl	* end = str + str_len		798375	0					
ANR	798380	IdentifierDeclType	const char *		798375	0					
ANR	798381	Identifier	end		798375	1					
ANR	798382	AssignmentExpression	* end = str + str_len		798375	2		=			
ANR	798383	Identifier	end		798375	0					
ANR	798384	AdditiveExpression	str + str_len		798375	1		+			
ANR	798385	Identifier	str		798375	0					
ANR	798386	Identifier	str_len		798375	1					
ANR	798387	IdentifierDeclStatement	"int num , m ;"	635:1:16485:16495	798375	1	True				
ANR	798388	IdentifierDecl	num		798375	0					
ANR	798389	IdentifierDeclType	int		798375	0					
ANR	798390	Identifier	num		798375	1					
ANR	798391	IdentifierDecl	m		798375	1					
ANR	798392	IdentifierDeclType	int		798375	0					
ANR	798393	Identifier	m		798375	1					
ANR	798394	IdentifierDeclStatement	int n = 0 ;	636:1:16498:16507	798375	2	True				
ANR	798395	IdentifierDecl	n = 0		798375	0					
ANR	798396	IdentifierDeclType	int		798375	0					
ANR	798397	Identifier	n		798375	1					
ANR	798398	AssignmentExpression	n = 0		798375	2		=			
ANR	798399	Identifier	n		798375	0					
ANR	798400	PrimaryExpression	0		798375	1					
ANR	798401	WhileStatement	while ( str < end )		798375	3					
ANR	798402	Condition	str < end	638:8:16518:16526	798375	0	True				
ANR	798403	RelationalExpression	str < end		798375	0		<			
ANR	798404	Identifier	str		798375	0					
ANR	798405	Identifier	end		798375	1					
ANR	798406	CompoundStatement		7:2:84:100	798375	1					
ANR	798407	IdentifierDeclStatement	int leading_zero ;	639:2:16533:16549	798375	0	True				
ANR	798408	IdentifierDecl	leading_zero		798375	0					
ANR	798409	IdentifierDeclType	int		798375	0					
ANR	798410	Identifier	leading_zero		798375	1					
ANR	798411	IfStatement	if ( * str < '0' || * str > '9' )		798375	1					
ANR	798412	Condition	* str < '0' || * str > '9'	640:6:16557:16580	798375	0	True				
ANR	798413	OrExpression	* str < '0' || * str > '9'		798375	0		||			
ANR	798414	RelationalExpression	* str < '0'		798375	0		<			
ANR	798415	UnaryOperationExpression	* str		798375	0					
ANR	798416	UnaryOperator	*		798375	0					
ANR	798417	Identifier	str		798375	1					
ANR	798418	PrimaryExpression	'0'		798375	1					
ANR	798419	RelationalExpression	* str > '9'		798375	1		>			
ANR	798420	UnaryOperationExpression	* str		798375	0					
ANR	798421	UnaryOperator	*		798375	0					
ANR	798422	Identifier	str		798375	1					
ANR	798423	PrimaryExpression	'9'		798375	1					
ANR	798424	CompoundStatement		8:32:134:134	798375	1					
ANR	798425	ReturnStatement	return 0 ;	641:3:16588:16596	798375	0	True				
ANR	798426	PrimaryExpression	0		798375	0					
ANR	798427	ExpressionStatement	leading_zero = ( * str == '0' )	643:2:16604:16632	798375	2	True				
ANR	798428	AssignmentExpression	leading_zero = ( * str == '0' )		798375	0		=			
ANR	798429	Identifier	leading_zero		798375	0					
ANR	798430	EqualityExpression	* str == '0'		798375	1		==			
ANR	798431	UnaryOperationExpression	* str		798375	0					
ANR	798432	UnaryOperator	*		798375	0					
ANR	798433	Identifier	str		798375	1					
ANR	798434	PrimaryExpression	'0'		798375	1					
ANR	798435	ExpressionStatement	m = 1	644:2:16636:16641	798375	3	True				
ANR	798436	AssignmentExpression	m = 1		798375	0		=			
ANR	798437	Identifier	m		798375	0					
ANR	798438	PrimaryExpression	1		798375	1					
ANR	798439	ExpressionStatement	num = ( ( * ( str ++ ) ) - '0' )	645:2:16645:16669	798375	4	True				
ANR	798440	AssignmentExpression	num = ( ( * ( str ++ ) ) - '0' )		798375	0		=			
ANR	798441	Identifier	num		798375	0					
ANR	798442	AdditiveExpression	( * ( str ++ ) ) - '0'		798375	1		-			
ANR	798443	UnaryOperationExpression	* ( str ++ )		798375	0					
ANR	798444	UnaryOperator	*		798375	0					
ANR	798445	PostIncDecOperationExpression	str ++		798375	1					
ANR	798446	Identifier	str		798375	0					
ANR	798447	IncDec	++		798375	1					
ANR	798448	PrimaryExpression	'0'		798375	1					
ANR	798449	WhileStatement	while ( str < end && ( * str >= '0' && * str <= '9' ) )		798375	5					
ANR	798450	Condition	str < end && ( * str >= '0' && * str <= '9' )	646:9:16680:16720	798375	0	True				
ANR	798451	AndExpression	str < end && ( * str >= '0' && * str <= '9' )		798375	0		&&			
ANR	798452	RelationalExpression	str < end		798375	0		<			
ANR	798453	Identifier	str		798375	0					
ANR	798454	Identifier	end		798375	1					
ANR	798455	AndExpression	* str >= '0' && * str <= '9'		798375	1		&&			
ANR	798456	RelationalExpression	* str >= '0'		798375	0		>=			
ANR	798457	UnaryOperationExpression	* str		798375	0					
ANR	798458	UnaryOperator	*		798375	0					
ANR	798459	Identifier	str		798375	1					
ANR	798460	PrimaryExpression	'0'		798375	1					
ANR	798461	RelationalExpression	* str <= '9'		798375	1		<=			
ANR	798462	UnaryOperationExpression	* str		798375	0					
ANR	798463	UnaryOperator	*		798375	0					
ANR	798464	Identifier	str		798375	1					
ANR	798465	PrimaryExpression	'9'		798375	1					
ANR	798466	CompoundStatement		14:52:274:274	798375	1					
ANR	798467	ExpressionStatement	num = num * 10 + ( ( * ( str ++ ) ) - '0' )	647:3:16728:16763	798375	0	True				
ANR	798468	AssignmentExpression	num = num * 10 + ( ( * ( str ++ ) ) - '0' )		798375	0		=			
ANR	798469	Identifier	num		798375	0					
ANR	798470	AdditiveExpression	num * 10 + ( ( * ( str ++ ) ) - '0' )		798375	1		+			
ANR	798471	MultiplicativeExpression	num * 10		798375	0		*			
ANR	798472	Identifier	num		798375	0					
ANR	798473	PrimaryExpression	10		798375	1					
ANR	798474	AdditiveExpression	( * ( str ++ ) ) - '0'		798375	1		-			
ANR	798475	UnaryOperationExpression	* ( str ++ )		798375	0					
ANR	798476	UnaryOperator	*		798375	0					
ANR	798477	PostIncDecOperationExpression	str ++		798375	1					
ANR	798478	Identifier	str		798375	0					
ANR	798479	IncDec	++		798375	1					
ANR	798480	PrimaryExpression	'0'		798375	1					
ANR	798481	IfStatement	if ( num > 255 || ++ m > 3 )		798375	1					
ANR	798482	Condition	num > 255 || ++ m > 3	648:7:16772:16791	798375	0	True				
ANR	798483	OrExpression	num > 255 || ++ m > 3		798375	0		||			
ANR	798484	RelationalExpression	num > 255		798375	0		>			
ANR	798485	Identifier	num		798375	0					
ANR	798486	PrimaryExpression	255		798375	1					
ANR	798487	RelationalExpression	++ m > 3		798375	1		>			
ANR	798488	UnaryExpression	++ m		798375	0					
ANR	798489	IncDec	++		798375	0					
ANR	798490	Identifier	m		798375	1					
ANR	798491	PrimaryExpression	3		798375	1					
ANR	798492	CompoundStatement		16:29:345:345	798375	1					
ANR	798493	ReturnStatement	return 0 ;	649:4:16800:16808	798375	0	True				
ANR	798494	PrimaryExpression	0		798375	0					
ANR	798495	IfStatement	if ( leading_zero && ( num != 0 || m > 1 ) )		798375	6					
ANR	798496	Condition	leading_zero && ( num != 0 || m > 1 )	654:6:16917:16951	798375	0	True				
ANR	798497	AndExpression	leading_zero && ( num != 0 || m > 1 )		798375	0		&&			
ANR	798498	Identifier	leading_zero		798375	0					
ANR	798499	OrExpression	num != 0 || m > 1		798375	1		||			
ANR	798500	EqualityExpression	num != 0		798375	0		!=			
ANR	798501	Identifier	num		798375	0					
ANR	798502	PrimaryExpression	0		798375	1					
ANR	798503	RelationalExpression	m > 1		798375	1		>			
ANR	798504	Identifier	m		798375	0					
ANR	798505	PrimaryExpression	1		798375	1					
ANR	798506	ReturnStatement	return 0 ;	655:3:16957:16965	798375	1	True				
ANR	798507	PrimaryExpression	0		798375	0					
ANR	798508	ExpressionStatement	ip [ n ++ ] = num	656:2:16969:16982	798375	7	True				
ANR	798509	AssignmentExpression	ip [ n ++ ] = num		798375	0		=			
ANR	798510	ArrayIndexing	ip [ n ++ ]		798375	0					
ANR	798511	Identifier	ip		798375	0					
ANR	798512	PostIncDecOperationExpression	n ++		798375	1					
ANR	798513	Identifier	n		798375	0					
ANR	798514	IncDec	++		798375	1					
ANR	798515	Identifier	num		798375	1					
ANR	798516	IfStatement	if ( n == 4 )		798375	8					
ANR	798517	Condition	n == 4	657:6:16990:16995	798375	0	True				
ANR	798518	EqualityExpression	n == 4		798375	0		==			
ANR	798519	Identifier	n		798375	0					
ANR	798520	PrimaryExpression	4		798375	1					
ANR	798521	CompoundStatement		25:14:549:549	798375	1					
ANR	798522	ReturnStatement	return str == end ;	658:3:17003:17020	798375	0	True				
ANR	798523	EqualityExpression	str == end		798375	0		==			
ANR	798524	Identifier	str		798375	0					
ANR	798525	Identifier	end		798375	1					
ANR	798526	ElseStatement	else		798375	0					
ANR	798527	IfStatement	if ( str >= end || * ( str ++ ) != '.' )		798375	0					
ANR	798528	Condition	str >= end || * ( str ++ ) != '.'	659:13:17035:17063	798375	0	True				
ANR	798529	OrExpression	str >= end || * ( str ++ ) != '.'		798375	0		||			
ANR	798530	RelationalExpression	str >= end		798375	0		>=			
ANR	798531	Identifier	str		798375	0					
ANR	798532	Identifier	end		798375	1					
ANR	798533	EqualityExpression	* ( str ++ ) != '.'		798375	1		!=			
ANR	798534	UnaryOperationExpression	* ( str ++ )		798375	0					
ANR	798535	UnaryOperator	*		798375	0					
ANR	798536	PostIncDecOperationExpression	str ++		798375	1					
ANR	798537	Identifier	str		798375	0					
ANR	798538	IncDec	++		798375	1					
ANR	798539	PrimaryExpression	'.'		798375	1					
ANR	798540	CompoundStatement		27:44:617:617	798375	1					
ANR	798541	ReturnStatement	return 0 ;	660:3:17071:17079	798375	0	True				
ANR	798542	PrimaryExpression	0		798375	0					
ANR	798543	ReturnStatement	return 0 ;	663:1:17089:17097	798375	4	True				
ANR	798544	PrimaryExpression	0		798375	0					
ANR	798545	ReturnType	static int		798375	1					
ANR	798546	Identifier	_php_filter_validate_ipv4		798375	2					
ANR	798547	ParameterList	"char * str , size_t str_len , int * ip"		798375	3					
ANR	798548	Parameter	char * str	632:37:16402:16410	798375	0	True				
ANR	798549	ParameterType	char *		798375	0					
ANR	798550	Identifier	str		798375	1					
ANR	798551	Parameter	size_t str_len	632:48:16413:16426	798375	1	True				
ANR	798552	ParameterType	size_t		798375	0					
ANR	798553	Identifier	str_len		798375	1					
ANR	798554	Parameter	int * ip	632:64:16429:16435	798375	2	True				
ANR	798555	ParameterType	int *		798375	0					
ANR	798556	Identifier	ip		798375	1					
ANR	798557	CFGEntryNode	ENTRY		798375		True				
ANR	798558	CFGExitNode	EXIT		798375		True				
ANR	798559	Symbol	str		798375						
ANR	798560	Symbol	str_len		798375						
ANR	798561	Symbol	ip		798375						
ANR	798562	Symbol	num		798375						
ANR	798563	Symbol	end		798375						
ANR	798564	Symbol	leading_zero		798375						
ANR	798565	Symbol	* ( str ++ )		798375						
ANR	798566	Symbol	* str		798375						
ANR	798567	Symbol	m		798375						
ANR	798568	Symbol	n		798375						
ANR	798569	Symbol	* ip		798375						
ANR	798570	Function	_php_filter_validate_ipv6	667:0:17112:18559							
ANR	798571	FunctionDef	"_php_filter_validate_ipv6 (char * str , size_t str_len)"		798570	0					
ANR	798572	CompoundStatement		668:0:17186:18559	798570	0					
ANR	798573	IdentifierDeclStatement	int compressed = 0 ;	669:1:17189:17207	798570	0	True				
ANR	798574	IdentifierDecl	compressed = 0		798570	0					
ANR	798575	IdentifierDeclType	int		798570	0					
ANR	798576	Identifier	compressed		798570	1					
ANR	798577	AssignmentExpression	compressed = 0		798570	2		=			
ANR	798578	Identifier	compressed		798570	0					
ANR	798579	PrimaryExpression	0		798570	1					
ANR	798580	IdentifierDeclStatement	int blocks = 0 ;	670:1:17210:17224	798570	1	True				
ANR	798581	IdentifierDecl	blocks = 0		798570	0					
ANR	798582	IdentifierDeclType	int		798570	0					
ANR	798583	Identifier	blocks		798570	1					
ANR	798584	AssignmentExpression	blocks = 0		798570	2		=			
ANR	798585	Identifier	blocks		798570	0					
ANR	798586	PrimaryExpression	0		798570	1					
ANR	798587	IdentifierDeclStatement	int n ;	671:1:17227:17232	798570	2	True				
ANR	798588	IdentifierDecl	n		798570	0					
ANR	798589	IdentifierDeclType	int		798570	0					
ANR	798590	Identifier	n		798570	1					
ANR	798591	IdentifierDeclStatement	char * ipv4 ;	672:1:17235:17245	798570	3	True				
ANR	798592	IdentifierDecl	* ipv4		798570	0					
ANR	798593	IdentifierDeclType	char *		798570	0					
ANR	798594	Identifier	ipv4		798570	1					
ANR	798595	IdentifierDeclStatement	char * end ;	673:1:17248:17257	798570	4	True				
ANR	798596	IdentifierDecl	* end		798570	0					
ANR	798597	IdentifierDeclType	char *		798570	0					
ANR	798598	Identifier	end		798570	1					
ANR	798599	IdentifierDeclStatement	int ip4elm [ 4 ] ;	674:1:17260:17273	798570	5	True				
ANR	798600	IdentifierDecl	ip4elm [ 4 ]		798570	0					
ANR	798601	IdentifierDeclType	int [ 4 ]		798570	0					
ANR	798602	Identifier	ip4elm		798570	1					
ANR	798603	PrimaryExpression	4		798570	2					
ANR	798604	IdentifierDeclStatement	char * s = str ;	675:1:17276:17289	798570	6	True				
ANR	798605	IdentifierDecl	* s = str		798570	0					
ANR	798606	IdentifierDeclType	char *		798570	0					
ANR	798607	Identifier	s		798570	1					
ANR	798608	AssignmentExpression	* s = str		798570	2		=			
ANR	798609	Identifier	str		798570	0					
ANR	798610	Identifier	str		798570	1					
ANR	798611	IfStatement	"if ( ! memchr ( str , ':' , str_len ) )"		798570	7					
ANR	798612	Condition	"! memchr ( str , ':' , str_len )"	677:5:17297:17322	798570	0	True				
ANR	798613	UnaryOperationExpression	"! memchr ( str , ':' , str_len )"		798570	0					
ANR	798614	UnaryOperator	!		798570	0					
ANR	798615	CallExpression	"memchr ( str , ':' , str_len )"		798570	1					
ANR	798616	Callee	memchr		798570	0					
ANR	798617	Identifier	memchr		798570	0					
ANR	798618	ArgumentList	str		798570	1					
ANR	798619	Argument	str		798570	0					
ANR	798620	Identifier	str		798570	0					
ANR	798621	Argument	':'		798570	1					
ANR	798622	PrimaryExpression	':'		798570	0					
ANR	798623	Argument	str_len		798570	2					
ANR	798624	Identifier	str_len		798570	0					
ANR	798625	CompoundStatement		10:33:138:138	798570	1					
ANR	798626	ReturnStatement	return 0 ;	678:2:17329:17337	798570	0	True				
ANR	798627	PrimaryExpression	0		798570	0					
ANR	798628	ExpressionStatement	"ipv4 = memchr ( str , '.' , str_len )"	682:1:17374:17406	798570	8	True				
ANR	798629	AssignmentExpression	"ipv4 = memchr ( str , '.' , str_len )"		798570	0		=			
ANR	798630	Identifier	ipv4		798570	0					
ANR	798631	CallExpression	"memchr ( str , '.' , str_len )"		798570	1					
ANR	798632	Callee	memchr		798570	0					
ANR	798633	Identifier	memchr		798570	0					
ANR	798634	ArgumentList	str		798570	1					
ANR	798635	Argument	str		798570	0					
ANR	798636	Identifier	str		798570	0					
ANR	798637	Argument	'.'		798570	1					
ANR	798638	PrimaryExpression	'.'		798570	0					
ANR	798639	Argument	str_len		798570	2					
ANR	798640	Identifier	str_len		798570	0					
ANR	798641	IfStatement	if ( ipv4 )		798570	9					
ANR	798642	Condition	ipv4	683:5:17413:17416	798570	0	True				
ANR	798643	Identifier	ipv4		798570	0					
ANR	798644	CompoundStatement		16:11:232:232	798570	1					
ANR	798645	WhileStatement	while ( ipv4 > str && * ( ipv4 - 1 ) != ':' )		798570	0					
ANR	798646	Condition	ipv4 > str && * ( ipv4 - 1 ) != ':'	684:10:17431:17460	798570	0	True				
ANR	798647	AndExpression	ipv4 > str && * ( ipv4 - 1 ) != ':'		798570	0		&&			
ANR	798648	RelationalExpression	ipv4 > str		798570	0		>			
ANR	798649	Identifier	ipv4		798570	0					
ANR	798650	Identifier	str		798570	1					
ANR	798651	EqualityExpression	* ( ipv4 - 1 ) != ':'		798570	1		!=			
ANR	798652	UnaryOperationExpression	* ( ipv4 - 1 )		798570	0					
ANR	798653	UnaryOperator	*		798570	0					
ANR	798654	AdditiveExpression	ipv4 - 1		798570	1		-			
ANR	798655	Identifier	ipv4		798570	0					
ANR	798656	PrimaryExpression	1		798570	1					
ANR	798657	PrimaryExpression	':'		798570	1					
ANR	798658	CompoundStatement		17:42:276:276	798570	1					
ANR	798659	ExpressionStatement	ipv4 --	685:3:17468:17474	798570	0	True				
ANR	798660	PostIncDecOperationExpression	ipv4 --		798570	0					
ANR	798661	Identifier	ipv4		798570	0					
ANR	798662	IncDec	--		798570	1					
ANR	798663	IfStatement	"if ( ! _php_filter_validate_ipv4 ( ipv4 , ( str_len - ( ipv4 - str ) ) , ip4elm ) )"		798570	1					
ANR	798664	Condition	"! _php_filter_validate_ipv4 ( ipv4 , ( str_len - ( ipv4 - str ) ) , ip4elm )"	688:6:17487:17552	798570	0	True				
ANR	798665	UnaryOperationExpression	"! _php_filter_validate_ipv4 ( ipv4 , ( str_len - ( ipv4 - str ) ) , ip4elm )"		798570	0					
ANR	798666	UnaryOperator	!		798570	0					
ANR	798667	CallExpression	"_php_filter_validate_ipv4 ( ipv4 , ( str_len - ( ipv4 - str ) ) , ip4elm )"		798570	1					
ANR	798668	Callee	_php_filter_validate_ipv4		798570	0					
ANR	798669	Identifier	_php_filter_validate_ipv4		798570	0					
ANR	798670	ArgumentList	ipv4		798570	1					
ANR	798671	Argument	ipv4		798570	0					
ANR	798672	Identifier	ipv4		798570	0					
ANR	798673	Argument	str_len - ( ipv4 - str )		798570	1					
ANR	798674	AdditiveExpression	str_len - ( ipv4 - str )		798570	0		-			
ANR	798675	Identifier	str_len		798570	0					
ANR	798676	AdditiveExpression	ipv4 - str		798570	1		-			
ANR	798677	Identifier	ipv4		798570	0					
ANR	798678	Identifier	str		798570	1					
ANR	798679	Argument	ip4elm		798570	2					
ANR	798680	Identifier	ip4elm		798570	0					
ANR	798681	CompoundStatement		21:74:368:368	798570	1					
ANR	798682	ReturnStatement	return 0 ;	689:3:17560:17568	798570	0	True				
ANR	798683	PrimaryExpression	0		798570	0					
ANR	798684	ExpressionStatement	str_len = ipv4 - str	692:2:17577:17597	798570	2	True				
ANR	798685	AssignmentExpression	str_len = ipv4 - str		798570	0		=			
ANR	798686	Identifier	str_len		798570	0					
ANR	798687	AdditiveExpression	ipv4 - str		798570	1		-			
ANR	798688	Identifier	ipv4		798570	0					
ANR	798689	Identifier	str		798570	1					
ANR	798690	IfStatement	if ( str_len < 2 )		798570	3					
ANR	798691	Condition	str_len < 2	693:6:17633:17643	798570	0	True				
ANR	798692	RelationalExpression	str_len < 2		798570	0		<			
ANR	798693	Identifier	str_len		798570	0					
ANR	798694	PrimaryExpression	2		798570	1					
ANR	798695	CompoundStatement		26:19:459:459	798570	1					
ANR	798696	ReturnStatement	return 0 ;	694:3:17651:17659	798570	0	True				
ANR	798697	PrimaryExpression	0		798570	0					
ANR	798698	IfStatement	if ( ipv4 [ - 2 ] != ':' )		798570	4					
ANR	798699	Condition	ipv4 [ - 2 ] != ':'	697:6:17672:17686	798570	0	True				
ANR	798700	EqualityExpression	ipv4 [ - 2 ] != ':'		798570	0		!=			
ANR	798701	ArrayIndexing	ipv4 [ - 2 ]		798570	0					
ANR	798702	Identifier	ipv4		798570	0					
ANR	798703	UnaryOperationExpression	- 2		798570	1					
ANR	798704	UnaryOperator	-		798570	0					
ANR	798705	PrimaryExpression	2		798570	1					
ANR	798706	PrimaryExpression	':'		798570	1					
ANR	798707	CompoundStatement		30:23:502:502	798570	1					
ANR	798708	ExpressionStatement	str_len --	699:3:17748:17757	798570	0	True				
ANR	798709	PostIncDecOperationExpression	str_len --		798570	0					
ANR	798710	Identifier	str_len		798570	0					
ANR	798711	IncDec	--		798570	1					
ANR	798712	ExpressionStatement	blocks = 2	702:2:17766:17776	798570	5	True				
ANR	798713	AssignmentExpression	blocks = 2		798570	0		=			
ANR	798714	Identifier	blocks		798570	0					
ANR	798715	PrimaryExpression	2		798570	1					
ANR	798716	ExpressionStatement	end = str + str_len	705:1:17783:17802	798570	10	True				
ANR	798717	AssignmentExpression	end = str + str_len		798570	0		=			
ANR	798718	Identifier	end		798570	0					
ANR	798719	AdditiveExpression	str + str_len		798570	1		+			
ANR	798720	Identifier	str		798570	0					
ANR	798721	Identifier	str_len		798570	1					
ANR	798722	WhileStatement	while ( str < end )		798570	11					
ANR	798723	Condition	str < end	707:8:17813:17821	798570	0	True				
ANR	798724	RelationalExpression	str < end		798570	0		<			
ANR	798725	Identifier	str		798570	0					
ANR	798726	Identifier	end		798570	1					
ANR	798727	CompoundStatement		40:19:637:637	798570	1					
ANR	798728	IfStatement	if ( * str == ':' )		798570	0					
ANR	798729	Condition	* str == ':'	708:6:17832:17842	798570	0	True				
ANR	798730	EqualityExpression	* str == ':'		798570	0		==			
ANR	798731	UnaryOperationExpression	* str		798570	0					
ANR	798732	UnaryOperator	*		798570	0					
ANR	798733	Identifier	str		798570	1					
ANR	798734	PrimaryExpression	':'		798570	1					
ANR	798735	CompoundStatement		41:19:658:658	798570	1					
ANR	798736	IfStatement	if ( ++ str >= end )		798570	0					
ANR	798737	Condition	++ str >= end	709:7:17854:17865	798570	0	True				
ANR	798738	RelationalExpression	++ str >= end		798570	0		>=			
ANR	798739	UnaryExpression	++ str		798570	0					
ANR	798740	IncDec	++		798570	0					
ANR	798741	Identifier	str		798570	1					
ANR	798742	Identifier	end		798570	1					
ANR	798743	CompoundStatement		42:21:681:681	798570	1					
ANR	798744	ReturnStatement	return 0 ;	711:4:17919:17927	798570	0	True				
ANR	798745	PrimaryExpression	0		798570	0					
ANR	798746	IfStatement	if ( * str == ':' )		798570	1					
ANR	798747	Condition	* str == ':'	713:7:17941:17951	798570	0	True				
ANR	798748	EqualityExpression	* str == ':'		798570	0		==			
ANR	798749	UnaryOperationExpression	* str		798570	0					
ANR	798750	UnaryOperator	*		798570	0					
ANR	798751	Identifier	str		798570	1					
ANR	798752	PrimaryExpression	':'		798570	1					
ANR	798753	CompoundStatement		46:20:767:767	798570	1					
ANR	798754	IfStatement	if ( compressed )		798570	0					
ANR	798755	Condition	compressed	714:8:17964:17973	798570	0	True				
ANR	798756	Identifier	compressed		798570	0					
ANR	798757	CompoundStatement		47:20:789:789	798570	1					
ANR	798758	ReturnStatement	return 0 ;	715:5:17983:17991	798570	0	True				
ANR	798759	PrimaryExpression	0		798570	0					
ANR	798760	ExpressionStatement	blocks ++	717:4:18003:18011	798570	1	True				
ANR	798761	PostIncDecOperationExpression	blocks ++		798570	0					
ANR	798762	Identifier	blocks		798570	0					
ANR	798763	IncDec	++		798570	1					
ANR	798764	ExpressionStatement	compressed = 1	718:4:18058:18072	798570	2	True				
ANR	798765	AssignmentExpression	compressed = 1		798570	0		=			
ANR	798766	Identifier	compressed		798570	0					
ANR	798767	PrimaryExpression	1		798570	1					
ANR	798768	IfStatement	if ( ++ str == end )		798570	3					
ANR	798769	Condition	++ str == end	720:8:18083:18094	798570	0	True				
ANR	798770	EqualityExpression	++ str == end		798570	0		==			
ANR	798771	UnaryExpression	++ str		798570	0					
ANR	798772	IncDec	++		798570	0					
ANR	798773	Identifier	str		798570	1					
ANR	798774	Identifier	end		798570	1					
ANR	798775	CompoundStatement		53:22:910:910	798570	1					
ANR	798776	ReturnStatement	return ( blocks <= 8 ) ;	721:5:18104:18124	798570	0	True				
ANR	798777	RelationalExpression	blocks <= 8		798570	0		<=			
ANR	798778	Identifier	blocks		798570	0					
ANR	798779	PrimaryExpression	8		798570	1					
ANR	798780	ElseStatement	else		798570	0					
ANR	798781	IfStatement	if ( ( str - 1 ) == s )		798570	0					
ANR	798782	Condition	( str - 1 ) == s	723:14:18146:18159	798570	0	True				
ANR	798783	EqualityExpression	( str - 1 ) == s		798570	0		==			
ANR	798784	AdditiveExpression	str - 1		798570	0		-			
ANR	798785	Identifier	str		798570	0					
ANR	798786	PrimaryExpression	1		798570	1					
ANR	798787	Identifier	s		798570	1					
ANR	798788	CompoundStatement		56:30:975:975	798570	1					
ANR	798789	ReturnStatement	return 0 ;	725:4:18227:18235	798570	0	True				
ANR	798790	PrimaryExpression	0		798570	0					
ANR	798791	ExpressionStatement	n = 0	728:2:18248:18253	798570	1	True				
ANR	798792	AssignmentExpression	n = 0		798570	0		=			
ANR	798793	Identifier	n		798570	0					
ANR	798794	PrimaryExpression	0		798570	1					
ANR	798795	WhileStatement	while ( ( str < end ) && ( ( * str >= '0' && * str <= '9' ) || ( * str >= 'a' && * str <= 'f' ) || ( * str >= 'A' && * str <= 'F' ) ) )		798570	2					
ANR	798796	Condition	( str < end ) && ( ( * str >= '0' && * str <= '9' ) || ( * str >= 'a' && * str <= 'f' ) || ( * str >= 'A' && * str <= 'F' ) )	729:9:18264:18401	798570	0	True				
ANR	798797	AndExpression	( str < end ) && ( ( * str >= '0' && * str <= '9' ) || ( * str >= 'a' && * str <= 'f' ) || ( * str >= 'A' && * str <= 'F' ) )		798570	0		&&			
ANR	798798	RelationalExpression	str < end		798570	0		<			
ANR	798799	Identifier	str		798570	0					
ANR	798800	Identifier	end		798570	1					
ANR	798801	OrExpression	( * str >= '0' && * str <= '9' ) || ( * str >= 'a' && * str <= 'f' ) || ( * str >= 'A' && * str <= 'F' )		798570	1		||			
ANR	798802	AndExpression	* str >= '0' && * str <= '9'		798570	0		&&			
ANR	798803	RelationalExpression	* str >= '0'		798570	0		>=			
ANR	798804	UnaryOperationExpression	* str		798570	0					
ANR	798805	UnaryOperator	*		798570	0					
ANR	798806	Identifier	str		798570	1					
ANR	798807	PrimaryExpression	'0'		798570	1					
ANR	798808	RelationalExpression	* str <= '9'		798570	1		<=			
ANR	798809	UnaryOperationExpression	* str		798570	0					
ANR	798810	UnaryOperator	*		798570	0					
ANR	798811	Identifier	str		798570	1					
ANR	798812	PrimaryExpression	'9'		798570	1					
ANR	798813	OrExpression	( * str >= 'a' && * str <= 'f' ) || ( * str >= 'A' && * str <= 'F' )		798570	1		||			
ANR	798814	AndExpression	* str >= 'a' && * str <= 'f'		798570	0		&&			
ANR	798815	RelationalExpression	* str >= 'a'		798570	0		>=			
ANR	798816	UnaryOperationExpression	* str		798570	0					
ANR	798817	UnaryOperator	*		798570	0					
ANR	798818	Identifier	str		798570	1					
ANR	798819	PrimaryExpression	'a'		798570	1					
ANR	798820	RelationalExpression	* str <= 'f'		798570	1		<=			
ANR	798821	UnaryOperationExpression	* str		798570	0					
ANR	798822	UnaryOperator	*		798570	0					
ANR	798823	Identifier	str		798570	1					
ANR	798824	PrimaryExpression	'f'		798570	1					
ANR	798825	AndExpression	* str >= 'A' && * str <= 'F'		798570	1		&&			
ANR	798826	RelationalExpression	* str >= 'A'		798570	0		>=			
ANR	798827	UnaryOperationExpression	* str		798570	0					
ANR	798828	UnaryOperator	*		798570	0					
ANR	798829	Identifier	str		798570	1					
ANR	798830	PrimaryExpression	'A'		798570	1					
ANR	798831	RelationalExpression	* str <= 'F'		798570	1		<=			
ANR	798832	UnaryOperationExpression	* str		798570	0					
ANR	798833	UnaryOperator	*		798570	0					
ANR	798834	Identifier	str		798570	1					
ANR	798835	PrimaryExpression	'F'		798570	1					
ANR	798836	CompoundStatement		65:41:1217:1217	798570	1					
ANR	798837	ExpressionStatement	n ++	733:3:18409:18412	798570	0	True				
ANR	798838	PostIncDecOperationExpression	n ++		798570	0					
ANR	798839	Identifier	n		798570	0					
ANR	798840	IncDec	++		798570	1					
ANR	798841	ExpressionStatement	str ++	734:3:18417:18422	798570	1	True				
ANR	798842	PostIncDecOperationExpression	str ++		798570	0					
ANR	798843	Identifier	str		798570	0					
ANR	798844	IncDec	++		798570	1					
ANR	798845	IfStatement	if ( n < 1 || n > 4 )		798570	3					
ANR	798846	Condition	n < 1 || n > 4	736:6:18434:18447	798570	0	True				
ANR	798847	OrExpression	n < 1 || n > 4		798570	0		||			
ANR	798848	RelationalExpression	n < 1		798570	0		<			
ANR	798849	Identifier	n		798570	0					
ANR	798850	PrimaryExpression	1		798570	1					
ANR	798851	RelationalExpression	n > 4		798570	1		>			
ANR	798852	Identifier	n		798570	0					
ANR	798853	PrimaryExpression	4		798570	1					
ANR	798854	CompoundStatement		69:22:1263:1263	798570	1					
ANR	798855	ReturnStatement	return 0 ;	737:3:18455:18463	798570	0	True				
ANR	798856	PrimaryExpression	0		798570	0					
ANR	798857	IfStatement	if ( ++ blocks > 8 )		798570	4					
ANR	798858	Condition	++ blocks > 8	739:6:18475:18486	798570	0	True				
ANR	798859	RelationalExpression	++ blocks > 8		798570	0		>			
ANR	798860	UnaryExpression	++ blocks		798570	0					
ANR	798861	IncDec	++		798570	0					
ANR	798862	Identifier	blocks		798570	1					
ANR	798863	PrimaryExpression	8		798570	1					
ANR	798864	ReturnStatement	return 0 ;	740:3:18492:18500	798570	1	True				
ANR	798865	PrimaryExpression	0		798570	0					
ANR	798866	ReturnStatement	return ( ( compressed && blocks <= 8 ) || blocks == 8 ) ;	742:1:18506:18557	798570	12	True				
ANR	798867	OrExpression	( compressed && blocks <= 8 ) || blocks == 8		798570	0		||			
ANR	798868	AndExpression	compressed && blocks <= 8		798570	0		&&			
ANR	798869	Identifier	compressed		798570	0					
ANR	798870	RelationalExpression	blocks <= 8		798570	1		<=			
ANR	798871	Identifier	blocks		798570	0					
ANR	798872	PrimaryExpression	8		798570	1					
ANR	798873	EqualityExpression	blocks == 8		798570	1		==			
ANR	798874	Identifier	blocks		798570	0					
ANR	798875	PrimaryExpression	8		798570	1					
ANR	798876	ReturnType	static int		798570	1					
ANR	798877	Identifier	_php_filter_validate_ipv6		798570	2					
ANR	798878	ParameterList	"char * str , size_t str_len"		798570	3					
ANR	798879	Parameter	char * str	667:37:17149:17157	798570	0	True				
ANR	798880	ParameterType	char *		798570	0					
ANR	798881	Identifier	str		798570	1					
ANR	798882	Parameter	size_t str_len	667:48:17160:17173	798570	1	True				
ANR	798883	ParameterType	size_t		798570	0					
ANR	798884	Identifier	str_len		798570	1					
ANR	798885	CFGEntryNode	ENTRY		798570		True				
ANR	798886	CFGExitNode	EXIT		798570		True				
ANR	798887	Symbol	_php_filter_validate_ipv4		798570						
ANR	798888	Symbol	* ipv4		798570						
ANR	798889	Symbol	* ( ipv4 - 1 )		798570						
ANR	798890	Symbol	blocks		798570						
ANR	798891	Symbol	ip4elm		798570						
ANR	798892	Symbol	n		798570						
ANR	798893	Symbol	str		798570						
ANR	798894	Symbol	s		798570						
ANR	798895	Symbol	ipv4		798570						
ANR	798896	Symbol	str_len		798570						
ANR	798897	Symbol	end		798570						
ANR	798898	Symbol	memchr		798570						
ANR	798899	Symbol	compressed		798570						
ANR	798900	Symbol	* str		798570						
ANR	798901	DeclStmt									
ANR	798902	Decl							int	int [ 4 ]	ip
ANR	798903	DeclStmt									
ANR	798904	Decl							int	int	mode
ANR	798905	DeclStmt									
ANR	798906	Decl							int	int	res
ANR	798907	DeclStmt									
ANR	798908	Decl							char	char *	input
ANR	798909	DeclStmt									
ANR	798910	Decl							size_t	size_t	input_len
ANR	798911	DeclStmt									
ANR	798912	Decl							int	int	tokens
ANR	798913	Decl							int	int	length
ANR	798914	Decl							int	int	i
ANR	798915	Decl							int	int	offset
ANR	798916	Decl							int	int	exp_separator_set
ANR	798917	DeclStmt									
ANR	798918	Decl							size_t	size_t	exp_separator_len
ANR	798919	DeclStmt									
ANR	798920	Decl							char	char	separator
ANR	798921	DeclStmt									
ANR	798922	Decl							char	char *	exp_separator
ANR	798923	DeclStmt									
ANR	798924	Decl							zend_long	zend_long	ret
ANR	798925	DeclStmt									
ANR	798926	Decl							zval	zval *	option_val
