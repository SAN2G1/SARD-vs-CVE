command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2965860	File	data/converged/CVE-2015-8617_php-src/iso8859_4.c								
ANR	2965861	DeclStmt									
ANR	2965862	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_4_ToLowerCaseTable
ANR	2965863	DeclStmt									
ANR	2965864	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_4_CtypeTable
ANR	2965865	DeclStmt									
ANR	2965866	Decl							const UChar	const UChar *	p
ANR	2965867	Function	is_mbc_ambiguous	125:0:6566:7029							
ANR	2965868	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		2965867	0					
ANR	2965869	CompoundStatement		127:0:6653:7029	2965867	0					
ANR	2965870	IdentifierDeclStatement	int v ;	128:2:6657:6662	2965867	0	True				
ANR	2965871	IdentifierDecl	v		2965867	0					
ANR	2965872	IdentifierDeclType	int		2965867	0					
ANR	2965873	Identifier	v		2965867	1					
ANR	2965874	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6666:6686	2965867	1	True				
ANR	2965875	IdentifierDecl	* p = * pp		2965867	0					
ANR	2965876	IdentifierDeclType	const UChar *		2965867	0					
ANR	2965877	Identifier	p		2965867	1					
ANR	2965878	AssignmentExpression	* p = * pp		2965867	2		=			
ANR	2965879	Identifier	p		2965867	0					
ANR	2965880	UnaryOperationExpression	* pp		2965867	1					
ANR	2965881	UnaryOperator	*		2965867	0					
ANR	2965882	Identifier	pp		2965867	1					
ANR	2965883	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		2965867	2					
ANR	2965884	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6695:6759	2965867	0	True				
ANR	2965885	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2965867	0		&&			
ANR	2965886	EqualityExpression	* p == 0xdf		2965867	0		==			
ANR	2965887	UnaryOperationExpression	* p		2965867	0					
ANR	2965888	UnaryOperator	*		2965867	0					
ANR	2965889	Identifier	p		2965867	1					
ANR	2965890	PrimaryExpression	0xdf		2965867	1					
ANR	2965891	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2965867	1		!=			
ANR	2965892	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2965867	0		&			
ANR	2965893	Identifier	flag		2965867	0					
ANR	2965894	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2965867	1					
ANR	2965895	PrimaryExpression	0		2965867	1					
ANR	2965896	CompoundStatement		5:73:108:108	2965867	1					
ANR	2965897	ExpressionStatement	( * pp ) ++	132:4:6768:6775	2965867	0	True				
ANR	2965898	PostIncDecOperationExpression	( * pp ) ++		2965867	0					
ANR	2965899	UnaryOperationExpression	* pp		2965867	0					
ANR	2965900	UnaryOperator	*		2965867	0					
ANR	2965901	Identifier	pp		2965867	1					
ANR	2965902	IncDec	++		2965867	1					
ANR	2965903	ReturnStatement	return TRUE ;	133:4:6781:6792	2965867	1	True				
ANR	2965904	Identifier	TRUE		2965867	0					
ANR	2965905	ExpressionStatement	( * pp ) ++	136:2:6801:6808	2965867	3	True				
ANR	2965906	PostIncDecOperationExpression	( * pp ) ++		2965867	0					
ANR	2965907	UnaryOperationExpression	* pp		2965867	0					
ANR	2965908	UnaryOperator	*		2965867	0					
ANR	2965909	Identifier	pp		2965867	1					
ANR	2965910	IncDec	++		2965867	1					
ANR	2965911	ExpressionStatement	v = ( EncISO_8859_4_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6812:6884	2965867	4	True				
ANR	2965912	AssignmentExpression	v = ( EncISO_8859_4_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		2965867	0		=			
ANR	2965913	Identifier	v		2965867	0					
ANR	2965914	BitAndExpression	EncISO_8859_4_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		2965867	1		&			
ANR	2965915	ArrayIndexing	EncISO_8859_4_CtypeTable [ * p ]		2965867	0					
ANR	2965916	Identifier	EncISO_8859_4_CtypeTable		2965867	0					
ANR	2965917	UnaryOperationExpression	* p		2965867	1					
ANR	2965918	UnaryOperator	*		2965867	0					
ANR	2965919	Identifier	p		2965867	1					
ANR	2965920	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		2965867	1		|			
ANR	2965921	Identifier	BIT_CTYPE_UPPER		2965867	0					
ANR	2965922	Identifier	BIT_CTYPE_LOWER		2965867	1					
ANR	2965923	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		2965867	5					
ANR	2965924	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6892:6917	2965867	0	True				
ANR	2965925	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		2965867	0		!=			
ANR	2965926	InclusiveOrExpression	v | BIT_CTYPE_LOWER		2965867	0		|			
ANR	2965927	Identifier	v		2965867	0					
ANR	2965928	Identifier	BIT_CTYPE_LOWER		2965867	1					
ANR	2965929	PrimaryExpression	0		2965867	1					
ANR	2965930	CompoundStatement		12:34:266:266	2965867	1					
ANR	2965931	IfStatement	if ( * p == 0xa2 )		2965867	0					
ANR	2965932	Condition	* p == 0xa2	139:8:6930:6939	2965867	0	True				
ANR	2965933	EqualityExpression	* p == 0xa2		2965867	0		==			
ANR	2965934	UnaryOperationExpression	* p		2965867	0					
ANR	2965935	UnaryOperator	*		2965867	0					
ANR	2965936	Identifier	p		2965867	1					
ANR	2965937	PrimaryExpression	0xa2		2965867	1					
ANR	2965938	ReturnStatement	return FALSE ;	140:6:6948:6960	2965867	1	True				
ANR	2965939	Identifier	FALSE		2965867	0					
ANR	2965940	ElseStatement	else		2965867	0					
ANR	2965941	ReturnStatement	return TRUE ;	142:6:6977:6988	2965867	0	True				
ANR	2965942	Identifier	TRUE		2965867	0					
ANR	2965943	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	145:2:6997:7027	2965867	6	True				
ANR	2965944	ConditionalExpression	v != 0 ? TRUE : FALSE		2965867	0					
ANR	2965945	Condition	v != 0		2965867	0					
ANR	2965946	EqualityExpression	v != 0		2965867	0		!=			
ANR	2965947	Identifier	v		2965867	0					
ANR	2965948	PrimaryExpression	0		2965867	1					
ANR	2965949	Identifier	TRUE		2965867	1					
ANR	2965950	Identifier	FALSE		2965867	2					
ANR	2965951	ReturnType	static int		2965867	1					
ANR	2965952	Identifier	is_mbc_ambiguous		2965867	2					
ANR	2965953	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		2965867	3					
ANR	2965954	Parameter	OnigCaseFoldType flag	126:17:6594:6614	2965867	0	True				
ANR	2965955	ParameterType	OnigCaseFoldType		2965867	0					
ANR	2965956	Identifier	flag		2965867	1					
ANR	2965957	Parameter	const UChar * * pp	126:40:6617:6632	2965867	1	True				
ANR	2965958	ParameterType	const UChar * *		2965867	0					
ANR	2965959	Identifier	pp		2965867	1					
ANR	2965960	Parameter	const UChar * end	126:58:6635:6650	2965867	2	True				
ANR	2965961	ParameterType	const UChar *		2965867	0					
ANR	2965962	Identifier	end		2965867	1					
ANR	2965963	CFGEntryNode	ENTRY		2965867		True				
ANR	2965964	CFGExitNode	EXIT		2965867		True				
ANR	2965965	Symbol	pp		2965867						
ANR	2965966	Symbol	flag		2965867						
ANR	2965967	Symbol	* pp		2965867						
ANR	2965968	Symbol	TRUE		2965867						
ANR	2965969	Symbol	p		2965867						
ANR	2965970	Symbol	v		2965867						
ANR	2965971	Symbol	* EncISO_8859_4_CtypeTable		2965867						
ANR	2965972	Symbol	BIT_CTYPE_LOWER		2965867						
ANR	2965973	Symbol	end		2965867						
ANR	2965974	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2965867						
ANR	2965975	Symbol	* p		2965867						
ANR	2965976	Symbol	BIT_CTYPE_UPPER		2965867						
ANR	2965977	Symbol	FALSE		2965867						
ANR	2965978	Symbol	* * p		2965867						
ANR	2965979	Symbol	EncISO_8859_4_CtypeTable		2965867						
ANR	2965980	Function	is_code_ctype	149:0:7039:7198							
ANR	2965981	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		2965980	0					
ANR	2965982	CompoundStatement		151:0:7104:7198	2965980	0					
ANR	2965983	IfStatement	if ( code < 256 )		2965980	0					
ANR	2965984	Condition	code < 256	152:6:7112:7121	2965980	0	True				
ANR	2965985	RelationalExpression	code < 256		2965980	0		<			
ANR	2965986	Identifier	code		2965980	0					
ANR	2965987	PrimaryExpression	256		2965980	1					
ANR	2965988	ReturnStatement	"return ENC_IS_ISO_8859_4_CTYPE ( code , ctype ) ;"	153:4:7128:7171	2965980	1	True				
ANR	2965989	CallExpression	"ENC_IS_ISO_8859_4_CTYPE ( code , ctype )"		2965980	0					
ANR	2965990	Callee	ENC_IS_ISO_8859_4_CTYPE		2965980	0					
ANR	2965991	Identifier	ENC_IS_ISO_8859_4_CTYPE		2965980	0					
ANR	2965992	ArgumentList	code		2965980	1					
ANR	2965993	Argument	code		2965980	0					
ANR	2965994	Identifier	code		2965980	0					
ANR	2965995	Argument	ctype		2965980	1					
ANR	2965996	Identifier	ctype		2965980	0					
ANR	2965997	ElseStatement	else		2965980	0					
ANR	2965998	ReturnStatement	return FALSE ;	155:4:7184:7196	2965980	0	True				
ANR	2965999	Identifier	FALSE		2965980	0					
ANR	2966000	ReturnType	static int		2965980	1					
ANR	2966001	Identifier	is_code_ctype		2965980	2					
ANR	2966002	ParameterList	"OnigCodePoint code , unsigned int ctype"		2965980	3					
ANR	2966003	Parameter	OnigCodePoint code	150:14:7064:7081	2965980	0	True				
ANR	2966004	ParameterType	OnigCodePoint		2965980	0					
ANR	2966005	Identifier	code		2965980	1					
ANR	2966006	Parameter	unsigned int ctype	150:34:7084:7101	2965980	1	True				
ANR	2966007	ParameterType	unsigned int		2965980	0					
ANR	2966008	Identifier	ctype		2965980	1					
ANR	2966009	CFGEntryNode	ENTRY		2965980		True				
ANR	2966010	CFGExitNode	EXIT		2965980		True				
ANR	2966011	Symbol	code		2965980						
ANR	2966012	Symbol	ctype		2965980						
ANR	2966013	Symbol	ENC_IS_ISO_8859_4_CTYPE		2965980						
ANR	2966014	Symbol	FALSE		2965980						
ANR	2966015	DeclStmt									
ANR	2966016	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	2966017	Function	apply_all_case_fold	202:0:7922:8178							
ANR	2966018	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		2966017	0					
ANR	2966019	CompoundStatement		205:0:8021:8178	2966017	0					
ANR	2966020	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	206:2:8025:8176	2966017	0	True				
ANR	2966021	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		2966017	0					
ANR	2966022	Callee	onigenc_apply_all_case_fold_with_map		2966017	0					
ANR	2966023	Identifier	onigenc_apply_all_case_fold_with_map		2966017	0					
ANR	2966024	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966017	1					
ANR	2966025	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966017	0					
ANR	2966026	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966017	0		/			
ANR	2966027	SizeofExpression	sizeof ( CaseFoldMap )		2966017	0					
ANR	2966028	Sizeof	sizeof		2966017	0					
ANR	2966029	SizeofOperand	CaseFoldMap		2966017	1					
ANR	2966030	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2966017	1					
ANR	2966031	Sizeof	sizeof		2966017	0					
ANR	2966032	SizeofOperand	OnigPairCaseFoldCodes		2966017	1					
ANR	2966033	Argument	CaseFoldMap		2966017	1					
ANR	2966034	Identifier	CaseFoldMap		2966017	0					
ANR	2966035	Argument	1		2966017	2					
ANR	2966036	PrimaryExpression	1		2966017	0					
ANR	2966037	Argument	flag		2966017	3					
ANR	2966038	Identifier	flag		2966017	0					
ANR	2966039	Argument	f		2966017	4					
ANR	2966040	Identifier	f		2966017	0					
ANR	2966041	Argument	arg		2966017	5					
ANR	2966042	Identifier	arg		2966017	0					
ANR	2966043	ReturnType	static int		2966017	1					
ANR	2966044	Identifier	apply_all_case_fold		2966017	2					
ANR	2966045	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		2966017	3					
ANR	2966046	Parameter	OnigCaseFoldType flag	203:20:7953:7973	2966017	0	True				
ANR	2966047	ParameterType	OnigCaseFoldType		2966017	0					
ANR	2966048	Identifier	flag		2966017	1					
ANR	2966049	Parameter	OnigApplyAllCaseFoldFunc f	204:6:7982:8007	2966017	1	True				
ANR	2966050	ParameterType	OnigApplyAllCaseFoldFunc		2966017	0					
ANR	2966051	Identifier	f		2966017	1					
ANR	2966052	Parameter	void * arg	204:34:8010:8018	2966017	2	True				
ANR	2966053	ParameterType	void *		2966017	0					
ANR	2966054	Identifier	arg		2966017	1					
ANR	2966055	CFGEntryNode	ENTRY		2966017		True				
ANR	2966056	CFGExitNode	EXIT		2966017		True				
ANR	2966057	Symbol	flag		2966017						
ANR	2966058	Symbol	f		2966017						
ANR	2966059	Symbol	arg		2966017						
ANR	2966060	Symbol	CaseFoldMap		2966017						
ANR	2966061	Symbol	onigenc_apply_all_case_fold_with_map		2966017						
ANR	2966062	Function	get_case_fold_codes_by_str	211:0:8181:8475							
ANR	2966063	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		2966062	0					
ANR	2966064	CompoundStatement		214:0:8318:8475	2966062	0					
ANR	2966065	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	215:2:8322:8473	2966062	0	True				
ANR	2966066	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		2966062	0					
ANR	2966067	Callee	onigenc_get_case_fold_codes_by_str_with_map		2966062	0					
ANR	2966068	Identifier	onigenc_get_case_fold_codes_by_str_with_map		2966062	0					
ANR	2966069	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966062	1					
ANR	2966070	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966062	0					
ANR	2966071	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966062	0		/			
ANR	2966072	SizeofExpression	sizeof ( CaseFoldMap )		2966062	0					
ANR	2966073	Sizeof	sizeof		2966062	0					
ANR	2966074	SizeofOperand	CaseFoldMap		2966062	1					
ANR	2966075	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2966062	1					
ANR	2966076	Sizeof	sizeof		2966062	0					
ANR	2966077	SizeofOperand	OnigPairCaseFoldCodes		2966062	1					
ANR	2966078	Argument	CaseFoldMap		2966062	1					
ANR	2966079	Identifier	CaseFoldMap		2966062	0					
ANR	2966080	Argument	1		2966062	2					
ANR	2966081	PrimaryExpression	1		2966062	0					
ANR	2966082	Argument	flag		2966062	3					
ANR	2966083	Identifier	flag		2966062	0					
ANR	2966084	Argument	p		2966062	4					
ANR	2966085	Identifier	p		2966062	0					
ANR	2966086	Argument	end		2966062	5					
ANR	2966087	Identifier	end		2966062	0					
ANR	2966088	Argument	items		2966062	6					
ANR	2966089	Identifier	items		2966062	0					
ANR	2966090	ReturnType	static int		2966062	1					
ANR	2966091	Identifier	get_case_fold_codes_by_str		2966062	2					
ANR	2966092	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		2966062	3					
ANR	2966093	Parameter	OnigCaseFoldType flag	212:27:8219:8239	2966062	0	True				
ANR	2966094	ParameterType	OnigCaseFoldType		2966062	0					
ANR	2966095	Identifier	flag		2966062	1					
ANR	2966096	Parameter	const OnigUChar * p	213:4:8246:8263	2966062	1	True				
ANR	2966097	ParameterType	const OnigUChar *		2966062	0					
ANR	2966098	Identifier	p		2966062	1					
ANR	2966099	Parameter	const OnigUChar * end	213:24:8266:8285	2966062	2	True				
ANR	2966100	ParameterType	const OnigUChar *		2966062	0					
ANR	2966101	Identifier	end		2966062	1					
ANR	2966102	Parameter	OnigCaseFoldCodeItem items [ ]	213:46:8288:8315	2966062	3	True				
ANR	2966103	ParameterType	OnigCaseFoldCodeItem [ ]		2966062	0					
ANR	2966104	Identifier	items		2966062	1					
ANR	2966105	CFGEntryNode	ENTRY		2966062		True				
ANR	2966106	CFGExitNode	EXIT		2966062		True				
ANR	2966107	Symbol	p		2966062						
ANR	2966108	Symbol	flag		2966062						
ANR	2966109	Symbol	end		2966062						
ANR	2966110	Symbol	CaseFoldMap		2966062						
ANR	2966111	Symbol	onigenc_get_case_fold_codes_by_str_with_map		2966062						
ANR	2966112	Symbol	items		2966062						
ANR	2966113	DeclStmt									
ANR	2966114	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_4
