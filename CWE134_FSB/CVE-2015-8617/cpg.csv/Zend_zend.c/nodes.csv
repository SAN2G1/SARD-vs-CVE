command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	24287	File	data/converged/CVE-2015-8617_php-src/Zend_zend.c								
ANR	24288	DeclStmt									
ANR	24289	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_standard_class_def
ANR	24290	DeclStmt									
ANR	24291	Decl							ZEND_API zend_write_func_t	ZEND_API zend_write_func_t	zend_write
ANR	24292	DeclStmt									
ANR	24293	Decl							"ZEND_API FILE * ( * ) ( const char * filename , zend_string * * opened_path )"	"ZEND_API FILE * ( * ) ( const char * filename , zend_string * * opened_path )"	zend_fopen
ANR	24294	DeclStmt									
ANR	24295	Decl							"ZEND_API int ( * ) ( const char * filename , zend_file_handle * handle )"	"ZEND_API int ( * ) ( const char * filename , zend_file_handle * handle )"	zend_stream_open_function
ANR	24296	DeclStmt									
ANR	24297	Decl							ZEND_API void ( * ) ( void )	ZEND_API void ( * ) ( void )	zend_block_interruptions
ANR	24298	DeclStmt									
ANR	24299	Decl							ZEND_API void ( * ) ( void )	ZEND_API void ( * ) ( void )	zend_unblock_interruptions
ANR	24300	DeclStmt									
ANR	24301	Decl							ZEND_API void ( * ) ( int ticks )	ZEND_API void ( * ) ( int ticks )	zend_ticks_function
ANR	24302	DeclStmt									
ANR	24303	Decl							"ZEND_API void ( * ) ( int type , const char * error_filename , const uint error_lineno , const char * format , va_list args )"	"ZEND_API void ( * ) ( int type , const char * error_filename , const uint error_lineno , const char * format , va_list args )"	zend_error_cb
ANR	24304	DeclStmt									
ANR	24305	Decl							"size_t ( * ) ( char * * pbuf , size_t max_len , const char * format , va_list ap )"	"size_t ( * ) ( char * * pbuf , size_t max_len , const char * format , va_list ap )"	zend_vspprintf
ANR	24306	DeclStmt									
ANR	24307	Decl							"zend_string * ( * ) ( size_t max_len , const char * format , va_list ap )"	"zend_string * ( * ) ( size_t max_len , const char * format , va_list ap )"	zend_vstrpprintf
ANR	24308	DeclStmt									
ANR	24309	Decl							"ZEND_API char * ( * ) ( char * name , size_t name_len )"	"ZEND_API char * ( * ) ( char * name , size_t name_len )"	zend_getenv
ANR	24310	DeclStmt									
ANR	24311	Decl							"ZEND_API zend_string * ( * ) ( const char * filename , int filename_len )"	"ZEND_API zend_string * ( * ) ( const char * filename , int filename_len )"	zend_resolve_path
ANR	24312	DeclStmt									
ANR	24313	Decl							void ( * ) ( int seconds )	void ( * ) ( int seconds )	zend_on_timeout
ANR	24314	DeclStmt									
ANR	24315	Decl							"void ( * ) ( zend_long message , const void * data )"	"void ( * ) ( zend_long message , const void * data )"	zend_message_dispatcher_p
ANR	24316	DeclStmt									
ANR	24317	Decl							zval * ( * ) ( zend_string * name )	zval * ( * ) ( zend_string * name )	zend_get_configuration_directive_p
ANR	24318	DeclStmt									
ANR	24319	Decl							~E_STRICT	~E_STRICT &	~E_DEPRECATED
ANR	24320	DeclStmt									
ANR	24321	Decl							zend_long	zend_long *	p
ANR	24322	Decl							zend_long	zend_long	val
ANR	24323	DeclStmt									
ANR	24324	Decl							char	char *	base
ANR	24325	DeclStmt									
ANR	24326	Decl							char	char *	base
ANR	24327	DeclStmt									
ANR	24328	Decl							ZEND_API int	ZEND_API int	compiler_globals_id
ANR	24329	DeclStmt									
ANR	24330	Decl							ZEND_API int	ZEND_API int	executor_globals_id
ANR	24331	DeclStmt									
ANR	24332	Decl							HashTable	HashTable *	global_function_table
ANR	24333	DeclStmt									
ANR	24334	Decl							HashTable	HashTable *	global_class_table
ANR	24335	DeclStmt									
ANR	24336	Decl							HashTable	HashTable *	global_constants_table
ANR	24337	DeclStmt									
ANR	24338	Decl							HashTable	HashTable *	global_auto_globals_table
ANR	24339	DeclStmt									
ANR	24340	Decl							HashTable	HashTable *	global_persistent_list
ANR	24341	DeclStmt									
ANR	24342	Decl							ZEND_API zend_utility_values	ZEND_API zend_utility_values	zend_uv
ANR	24343	DeclStmt									
ANR	24344	Decl							char	char *	zend_version_info
ANR	24345	DeclStmt									
ANR	24346	Decl							uint	uint	zend_version_info_length
ANR	24347	Function	print_hash	162:0:6023:7480							
ANR	24348	FunctionDef	"print_hash (zend_write_func_t write_func , HashTable * ht , int indent , zend_bool is_object)"		24347	0					
ANR	24349	CompoundStatement		163:0:6134:7480	24347	0					
ANR	24350	IdentifierDeclStatement	zval * tmp ;	164:1:6137:6146	24347	0	True				
ANR	24351	IdentifierDecl	* tmp		24347	0					
ANR	24352	IdentifierDeclType	zval *		24347	0					
ANR	24353	Identifier	tmp		24347	1					
ANR	24354	IdentifierDeclStatement	zend_string * string_key ;	165:1:6149:6172	24347	1	True				
ANR	24355	IdentifierDecl	* string_key		24347	0					
ANR	24356	IdentifierDeclType	zend_string *		24347	0					
ANR	24357	Identifier	string_key		24347	1					
ANR	24358	IdentifierDeclStatement	zend_ulong num_key ;	166:1:6175:6193	24347	2	True				
ANR	24359	IdentifierDecl	num_key		24347	0					
ANR	24360	IdentifierDeclType	zend_ulong		24347	0					
ANR	24361	Identifier	num_key		24347	1					
ANR	24362	IdentifierDeclStatement	int i ;	167:1:6196:6201	24347	3	True				
ANR	24363	IdentifierDecl	i		24347	0					
ANR	24364	IdentifierDeclType	int		24347	0					
ANR	24365	Identifier	i		24347	1					
ANR	24366	ForStatement	for ( i = 0 ; i < indent ; i ++ )		24347	4					
ANR	24367	ForInit	i = 0 ;	169:6:6210:6215	24347	0	True				
ANR	24368	AssignmentExpression	i = 0		24347	0		=			
ANR	24369	Identifier	i		24347	0					
ANR	24370	PrimaryExpression	0		24347	1					
ANR	24371	Condition	i < indent	169:13:6217:6226	24347	1	True				
ANR	24372	RelationalExpression	i < indent		24347	0		<			
ANR	24373	Identifier	i		24347	0					
ANR	24374	Identifier	indent		24347	1					
ANR	24375	PostIncDecOperationExpression	i ++	169:25:6229:6231	24347	2	True				
ANR	24376	Identifier	i		24347	0					
ANR	24377	IncDec	++		24347	1					
ANR	24378	CompoundStatement		7:30:99:99	24347	3					
ANR	24379	ExpressionStatement	"ZEND_PUTS_EX ( "" "" )"	170:2:6238:6255	24347	0	True				
ANR	24380	CallExpression	"ZEND_PUTS_EX ( "" "" )"		24347	0					
ANR	24381	Callee	ZEND_PUTS_EX		24347	0					
ANR	24382	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24383	ArgumentList	""" """		24347	1					
ANR	24384	Argument	""" """		24347	0					
ANR	24385	PrimaryExpression	""" """		24347	0					
ANR	24386	ExpressionStatement	"ZEND_PUTS_EX ( ""(\\n"" )"	172:1:6261:6280	24347	5	True				
ANR	24387	CallExpression	"ZEND_PUTS_EX ( ""(\\n"" )"		24347	0					
ANR	24388	Callee	ZEND_PUTS_EX		24347	0					
ANR	24389	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24390	ArgumentList	"""(\\n"""		24347	1					
ANR	24391	Argument	"""(\\n"""		24347	0					
ANR	24392	PrimaryExpression	"""(\\n"""		24347	0					
ANR	24393	ExpressionStatement	indent += PRINT_ZVAL_INDENT	173:1:6283:6310	24347	6	True				
ANR	24394	AssignmentExpression	indent += PRINT_ZVAL_INDENT		24347	0		+=			
ANR	24395	Identifier	indent		24347	0					
ANR	24396	Identifier	PRINT_ZVAL_INDENT		24347	1					
ANR	24397	Statement	ZEND_HASH_FOREACH_KEY_VAL	174:1:6313:6337	24347	7	True				
ANR	24398	Statement	(	174:26:6338:6338	24347	8	True				
ANR	24399	Statement	ht	174:27:6339:6340	24347	9	True				
ANR	24400	Statement	","	174:29:6341:6341	24347	10	True				
ANR	24401	Statement	num_key	174:31:6343:6349	24347	11	True				
ANR	24402	Statement	","	174:38:6350:6350	24347	12	True				
ANR	24403	Statement	string_key	174:40:6352:6361	24347	13	True				
ANR	24404	Statement	","	174:50:6362:6362	24347	14	True				
ANR	24405	Statement	tmp	174:52:6364:6366	24347	15	True				
ANR	24406	Statement	)	174:55:6367:6367	24347	16	True				
ANR	24407	CompoundStatement		12:57:234:234	24347	17					
ANR	24408	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_INDIRECT )		24347	0					
ANR	24409	Condition	Z_TYPE_P ( tmp ) == IS_INDIRECT	175:6:6377:6404	24347	0	True				
ANR	24410	EqualityExpression	Z_TYPE_P ( tmp ) == IS_INDIRECT		24347	0		==			
ANR	24411	CallExpression	Z_TYPE_P ( tmp )		24347	0					
ANR	24412	Callee	Z_TYPE_P		24347	0					
ANR	24413	Identifier	Z_TYPE_P		24347	0					
ANR	24414	ArgumentList	tmp		24347	1					
ANR	24415	Argument	tmp		24347	0					
ANR	24416	Identifier	tmp		24347	0					
ANR	24417	Identifier	IS_INDIRECT		24347	1					
ANR	24418	CompoundStatement		13:36:272:272	24347	1					
ANR	24419	ExpressionStatement	tmp = Z_INDIRECT_P ( tmp )	176:3:6412:6435	24347	0	True				
ANR	24420	AssignmentExpression	tmp = Z_INDIRECT_P ( tmp )		24347	0		=			
ANR	24421	Identifier	tmp		24347	0					
ANR	24422	CallExpression	Z_INDIRECT_P ( tmp )		24347	1					
ANR	24423	Callee	Z_INDIRECT_P		24347	0					
ANR	24424	Identifier	Z_INDIRECT_P		24347	0					
ANR	24425	ArgumentList	tmp		24347	1					
ANR	24426	Argument	tmp		24347	0					
ANR	24427	Identifier	tmp		24347	0					
ANR	24428	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_UNDEF )		24347	1					
ANR	24429	Condition	Z_TYPE_P ( tmp ) == IS_UNDEF	177:7:6444:6468	24347	0	True				
ANR	24430	EqualityExpression	Z_TYPE_P ( tmp ) == IS_UNDEF		24347	0		==			
ANR	24431	CallExpression	Z_TYPE_P ( tmp )		24347	0					
ANR	24432	Callee	Z_TYPE_P		24347	0					
ANR	24433	Identifier	Z_TYPE_P		24347	0					
ANR	24434	ArgumentList	tmp		24347	1					
ANR	24435	Argument	tmp		24347	0					
ANR	24436	Identifier	tmp		24347	0					
ANR	24437	Identifier	IS_UNDEF		24347	1					
ANR	24438	CompoundStatement		15:34:336:336	24347	1					
ANR	24439	ContinueStatement	continue ;	178:4:6477:6485	24347	0	True				
ANR	24440	ForStatement	for ( i = 0 ; i < indent ; i ++ )		24347	1					
ANR	24441	ForInit	i = 0 ;	181:7:6503:6508	24347	0	True				
ANR	24442	AssignmentExpression	i = 0		24347	0		=			
ANR	24443	Identifier	i		24347	0					
ANR	24444	PrimaryExpression	0		24347	1					
ANR	24445	Condition	i < indent	181:14:6510:6519	24347	1	True				
ANR	24446	RelationalExpression	i < indent		24347	0		<			
ANR	24447	Identifier	i		24347	0					
ANR	24448	Identifier	indent		24347	1					
ANR	24449	PostIncDecOperationExpression	i ++	181:26:6522:6524	24347	2	True				
ANR	24450	Identifier	i		24347	0					
ANR	24451	IncDec	++		24347	1					
ANR	24452	CompoundStatement		19:31:392:392	24347	3					
ANR	24453	ExpressionStatement	"ZEND_PUTS_EX ( "" "" )"	182:3:6532:6549	24347	0	True				
ANR	24454	CallExpression	"ZEND_PUTS_EX ( "" "" )"		24347	0					
ANR	24455	Callee	ZEND_PUTS_EX		24347	0					
ANR	24456	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24457	ArgumentList	""" """		24347	1					
ANR	24458	Argument	""" """		24347	0					
ANR	24459	PrimaryExpression	""" """		24347	0					
ANR	24460	ExpressionStatement	"ZEND_PUTS_EX ( ""["" )"	184:2:6557:6574	24347	2	True				
ANR	24461	CallExpression	"ZEND_PUTS_EX ( ""["" )"		24347	0					
ANR	24462	Callee	ZEND_PUTS_EX		24347	0					
ANR	24463	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24464	ArgumentList	"""["""		24347	1					
ANR	24465	Argument	"""["""		24347	0					
ANR	24466	PrimaryExpression	"""["""		24347	0					
ANR	24467	IfStatement	if ( string_key )		24347	3					
ANR	24468	Condition	string_key	185:6:6582:6591	24347	0	True				
ANR	24469	Identifier	string_key		24347	0					
ANR	24470	CompoundStatement		23:18:459:459	24347	1					
ANR	24471	IfStatement	if ( is_object )		24347	0					
ANR	24472	Condition	is_object	186:7:6603:6611	24347	0	True				
ANR	24473	Identifier	is_object		24347	0					
ANR	24474	CompoundStatement		27:4:546:638	24347	1					
ANR	24475	IdentifierDeclStatement	"const char * prop_name , * class_name ;"	187:4:6620:6654	24347	0	True				
ANR	24476	IdentifierDecl	* prop_name		24347	0					
ANR	24477	IdentifierDeclType	const char *		24347	0					
ANR	24478	Identifier	prop_name		24347	1					
ANR	24479	IdentifierDecl	* class_name		24347	1					
ANR	24480	IdentifierDeclType	const char *		24347	0					
ANR	24481	Identifier	class_name		24347	1					
ANR	24482	IdentifierDeclStatement	size_t prop_len ;	188:4:6660:6675	24347	1	True				
ANR	24483	IdentifierDecl	prop_len		24347	0					
ANR	24484	IdentifierDeclType	size_t		24347	0					
ANR	24485	Identifier	prop_len		24347	1					
ANR	24486	IdentifierDeclStatement	"int mangled = zend_unmangle_property_name_ex ( string_key , & class_name , & prop_name , & prop_len ) ;"	189:4:6681:6773	24347	2	True				
ANR	24487	IdentifierDecl	"mangled = zend_unmangle_property_name_ex ( string_key , & class_name , & prop_name , & prop_len )"		24347	0					
ANR	24488	IdentifierDeclType	int		24347	0					
ANR	24489	Identifier	mangled		24347	1					
ANR	24490	AssignmentExpression	"mangled = zend_unmangle_property_name_ex ( string_key , & class_name , & prop_name , & prop_len )"		24347	2		=			
ANR	24491	Identifier	mangled		24347	0					
ANR	24492	CallExpression	"zend_unmangle_property_name_ex ( string_key , & class_name , & prop_name , & prop_len )"		24347	1					
ANR	24493	Callee	zend_unmangle_property_name_ex		24347	0					
ANR	24494	Identifier	zend_unmangle_property_name_ex		24347	0					
ANR	24495	ArgumentList	string_key		24347	1					
ANR	24496	Argument	string_key		24347	0					
ANR	24497	Identifier	string_key		24347	0					
ANR	24498	Argument	& class_name		24347	1					
ANR	24499	UnaryOperationExpression	& class_name		24347	0					
ANR	24500	UnaryOperator	&		24347	0					
ANR	24501	Identifier	class_name		24347	1					
ANR	24502	Argument	& prop_name		24347	2					
ANR	24503	UnaryOperationExpression	& prop_name		24347	0					
ANR	24504	UnaryOperator	&		24347	0					
ANR	24505	Identifier	prop_name		24347	1					
ANR	24506	Argument	& prop_len		24347	3					
ANR	24507	UnaryOperationExpression	& prop_len		24347	0					
ANR	24508	UnaryOperator	&		24347	0					
ANR	24509	Identifier	prop_len		24347	1					
ANR	24510	ExpressionStatement	"ZEND_WRITE_EX ( prop_name , prop_len )"	191:4:6780:6814	24347	3	True				
ANR	24511	CallExpression	"ZEND_WRITE_EX ( prop_name , prop_len )"		24347	0					
ANR	24512	Callee	ZEND_WRITE_EX		24347	0					
ANR	24513	Identifier	ZEND_WRITE_EX		24347	0					
ANR	24514	ArgumentList	prop_name		24347	1					
ANR	24515	Argument	prop_name		24347	0					
ANR	24516	Identifier	prop_name		24347	0					
ANR	24517	Argument	prop_len		24347	1					
ANR	24518	Identifier	prop_len		24347	0					
ANR	24519	IfStatement	if ( class_name && mangled == SUCCESS )		24347	4					
ANR	24520	Condition	class_name && mangled == SUCCESS	192:8:6824:6855	24347	0	True				
ANR	24521	AndExpression	class_name && mangled == SUCCESS		24347	0		&&			
ANR	24522	Identifier	class_name		24347	0					
ANR	24523	EqualityExpression	mangled == SUCCESS		24347	1		==			
ANR	24524	Identifier	mangled		24347	0					
ANR	24525	Identifier	SUCCESS		24347	1					
ANR	24526	CompoundStatement		30:42:723:723	24347	1					
ANR	24527	IfStatement	if ( class_name [ 0 ] == '*' )		24347	0					
ANR	24528	Condition	class_name [ 0 ] == '*'	193:9:6869:6886	24347	0	True				
ANR	24529	EqualityExpression	class_name [ 0 ] == '*'		24347	0		==			
ANR	24530	ArrayIndexing	class_name [ 0 ]		24347	0					
ANR	24531	Identifier	class_name		24347	0					
ANR	24532	PrimaryExpression	0		24347	1					
ANR	24533	PrimaryExpression	'*'		24347	1					
ANR	24534	CompoundStatement		31:29:754:754	24347	1					
ANR	24535	ExpressionStatement	"ZEND_PUTS_EX ( "":protected"" )"	194:6:6897:6923	24347	0	True				
ANR	24536	CallExpression	"ZEND_PUTS_EX ( "":protected"" )"		24347	0					
ANR	24537	Callee	ZEND_PUTS_EX		24347	0					
ANR	24538	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24539	ArgumentList	""":protected"""		24347	1					
ANR	24540	Argument	""":protected"""		24347	0					
ANR	24541	PrimaryExpression	""":protected"""		24347	0					
ANR	24542	ElseStatement	else		24347	0					
ANR	24543	CompoundStatement		33:12:802:802	24347	0					
ANR	24544	ExpressionStatement	"ZEND_PUTS_EX ( "":"" )"	196:6:6945:6962	24347	0	True				
ANR	24545	CallExpression	"ZEND_PUTS_EX ( "":"" )"		24347	0					
ANR	24546	Callee	ZEND_PUTS_EX		24347	0					
ANR	24547	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24548	ArgumentList	""":"""		24347	1					
ANR	24549	Argument	""":"""		24347	0					
ANR	24550	PrimaryExpression	""":"""		24347	0					
ANR	24551	ExpressionStatement	ZEND_PUTS_EX ( class_name )	197:6:6970:6994	24347	1	True				
ANR	24552	CallExpression	ZEND_PUTS_EX ( class_name )		24347	0					
ANR	24553	Callee	ZEND_PUTS_EX		24347	0					
ANR	24554	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24555	ArgumentList	class_name		24347	1					
ANR	24556	Argument	class_name		24347	0					
ANR	24557	Identifier	class_name		24347	0					
ANR	24558	ExpressionStatement	"ZEND_PUTS_EX ( "":private"" )"	198:6:7002:7026	24347	2	True				
ANR	24559	CallExpression	"ZEND_PUTS_EX ( "":private"" )"		24347	0					
ANR	24560	Callee	ZEND_PUTS_EX		24347	0					
ANR	24561	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24562	ArgumentList	""":private"""		24347	1					
ANR	24563	Argument	""":private"""		24347	0					
ANR	24564	PrimaryExpression	""":private"""		24347	0					
ANR	24565	ElseStatement	else		24347	0					
ANR	24566	CompoundStatement		39:10:916:916	24347	0					
ANR	24567	ExpressionStatement	"ZEND_WRITE_EX ( ZSTR_VAL ( string_key ) , ZSTR_LEN ( string_key ) )"	202:4:7057:7114	24347	0	True				
ANR	24568	CallExpression	"ZEND_WRITE_EX ( ZSTR_VAL ( string_key ) , ZSTR_LEN ( string_key ) )"		24347	0					
ANR	24569	Callee	ZEND_WRITE_EX		24347	0					
ANR	24570	Identifier	ZEND_WRITE_EX		24347	0					
ANR	24571	ArgumentList	ZSTR_VAL ( string_key )		24347	1					
ANR	24572	Argument	ZSTR_VAL ( string_key )		24347	0					
ANR	24573	CallExpression	ZSTR_VAL ( string_key )		24347	0					
ANR	24574	Callee	ZSTR_VAL		24347	0					
ANR	24575	Identifier	ZSTR_VAL		24347	0					
ANR	24576	ArgumentList	string_key		24347	1					
ANR	24577	Argument	string_key		24347	0					
ANR	24578	Identifier	string_key		24347	0					
ANR	24579	Argument	ZSTR_LEN ( string_key )		24347	1					
ANR	24580	CallExpression	ZSTR_LEN ( string_key )		24347	0					
ANR	24581	Callee	ZSTR_LEN		24347	0					
ANR	24582	Identifier	ZSTR_LEN		24347	0					
ANR	24583	ArgumentList	string_key		24347	1					
ANR	24584	Argument	string_key		24347	0					
ANR	24585	Identifier	string_key		24347	0					
ANR	24586	ElseStatement	else		24347	0					
ANR	24587	CompoundStatement		43:3:1000:1012	24347	0					
ANR	24588	IdentifierDeclStatement	char key [ 25 ] ;	205:3:7135:7147	24347	0	True				
ANR	24589	IdentifierDecl	key [ 25 ]		24347	0					
ANR	24590	IdentifierDeclType	char [ 25 ]		24347	0					
ANR	24591	Identifier	key		24347	1					
ANR	24592	PrimaryExpression	25		24347	2					
ANR	24593	ExpressionStatement	"snprintf ( key , sizeof ( key ) , ZEND_LONG_FMT , num_key )"	206:3:7152:7202	24347	1	True				
ANR	24594	CallExpression	"snprintf ( key , sizeof ( key ) , ZEND_LONG_FMT , num_key )"		24347	0					
ANR	24595	Callee	snprintf		24347	0					
ANR	24596	Identifier	snprintf		24347	0					
ANR	24597	ArgumentList	key		24347	1					
ANR	24598	Argument	key		24347	0					
ANR	24599	Identifier	key		24347	0					
ANR	24600	Argument	sizeof ( key )		24347	1					
ANR	24601	SizeofExpression	sizeof ( key )		24347	0					
ANR	24602	Sizeof	sizeof		24347	0					
ANR	24603	SizeofOperand	key		24347	1					
ANR	24604	Argument	ZEND_LONG_FMT		24347	2					
ANR	24605	Identifier	ZEND_LONG_FMT		24347	0					
ANR	24606	Argument	num_key		24347	3					
ANR	24607	Identifier	num_key		24347	0					
ANR	24608	ExpressionStatement	ZEND_PUTS_EX ( key )	207:3:7207:7224	24347	2	True				
ANR	24609	CallExpression	ZEND_PUTS_EX ( key )		24347	0					
ANR	24610	Callee	ZEND_PUTS_EX		24347	0					
ANR	24611	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24612	ArgumentList	key		24347	1					
ANR	24613	Argument	key		24347	0					
ANR	24614	Identifier	key		24347	0					
ANR	24615	ExpressionStatement	"ZEND_PUTS_EX ( ""] => "" )"	209:2:7232:7253	24347	4	True				
ANR	24616	CallExpression	"ZEND_PUTS_EX ( ""] => "" )"		24347	0					
ANR	24617	Callee	ZEND_PUTS_EX		24347	0					
ANR	24618	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24619	ArgumentList	"""] => """		24347	1					
ANR	24620	Argument	"""] => """		24347	0					
ANR	24621	PrimaryExpression	"""] => """		24347	0					
ANR	24622	ExpressionStatement	"zend_print_zval_r_ex ( write_func , tmp , indent + PRINT_ZVAL_INDENT )"	210:2:7257:7320	24347	5	True				
ANR	24623	CallExpression	"zend_print_zval_r_ex ( write_func , tmp , indent + PRINT_ZVAL_INDENT )"		24347	0					
ANR	24624	Callee	zend_print_zval_r_ex		24347	0					
ANR	24625	Identifier	zend_print_zval_r_ex		24347	0					
ANR	24626	ArgumentList	write_func		24347	1					
ANR	24627	Argument	write_func		24347	0					
ANR	24628	Identifier	write_func		24347	0					
ANR	24629	Argument	tmp		24347	1					
ANR	24630	Identifier	tmp		24347	0					
ANR	24631	Argument	indent + PRINT_ZVAL_INDENT		24347	2					
ANR	24632	AdditiveExpression	indent + PRINT_ZVAL_INDENT		24347	0		+			
ANR	24633	Identifier	indent		24347	0					
ANR	24634	Identifier	PRINT_ZVAL_INDENT		24347	1					
ANR	24635	ExpressionStatement	"ZEND_PUTS_EX ( ""\\n"" )"	211:2:7324:7342	24347	6	True				
ANR	24636	CallExpression	"ZEND_PUTS_EX ( ""\\n"" )"		24347	0					
ANR	24637	Callee	ZEND_PUTS_EX		24347	0					
ANR	24638	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24639	ArgumentList	"""\\n"""		24347	1					
ANR	24640	Argument	"""\\n"""		24347	0					
ANR	24641	PrimaryExpression	"""\\n"""		24347	0					
ANR	24642	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	212:3:7347:7370	24347	18	True				
ANR	24643	CallExpression	ZEND_HASH_FOREACH_END ( )		24347	0					
ANR	24644	Callee	ZEND_HASH_FOREACH_END		24347	0					
ANR	24645	Identifier	ZEND_HASH_FOREACH_END		24347	0					
ANR	24646	ArgumentList			24347	1					
ANR	24647	ExpressionStatement	indent -= PRINT_ZVAL_INDENT	213:1:7373:7400	24347	19	True				
ANR	24648	AssignmentExpression	indent -= PRINT_ZVAL_INDENT		24347	0		-=			
ANR	24649	Identifier	indent		24347	0					
ANR	24650	Identifier	PRINT_ZVAL_INDENT		24347	1					
ANR	24651	ForStatement	for ( i = 0 ; i < indent ; i ++ )		24347	20					
ANR	24652	ForInit	i = 0 ;	214:6:7408:7413	24347	0	True				
ANR	24653	AssignmentExpression	i = 0		24347	0		=			
ANR	24654	Identifier	i		24347	0					
ANR	24655	PrimaryExpression	0		24347	1					
ANR	24656	Condition	i < indent	214:13:7415:7424	24347	1	True				
ANR	24657	RelationalExpression	i < indent		24347	0		<			
ANR	24658	Identifier	i		24347	0					
ANR	24659	Identifier	indent		24347	1					
ANR	24660	PostIncDecOperationExpression	i ++	214:25:7427:7429	24347	2	True				
ANR	24661	Identifier	i		24347	0					
ANR	24662	IncDec	++		24347	1					
ANR	24663	CompoundStatement		52:30:1297:1297	24347	3					
ANR	24664	ExpressionStatement	"ZEND_PUTS_EX ( "" "" )"	215:2:7436:7453	24347	0	True				
ANR	24665	CallExpression	"ZEND_PUTS_EX ( "" "" )"		24347	0					
ANR	24666	Callee	ZEND_PUTS_EX		24347	0					
ANR	24667	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24668	ArgumentList	""" """		24347	1					
ANR	24669	Argument	""" """		24347	0					
ANR	24670	PrimaryExpression	""" """		24347	0					
ANR	24671	ExpressionStatement	"ZEND_PUTS_EX ( "")\\n"" )"	217:1:7459:7478	24347	21	True				
ANR	24672	CallExpression	"ZEND_PUTS_EX ( "")\\n"" )"		24347	0					
ANR	24673	Callee	ZEND_PUTS_EX		24347	0					
ANR	24674	Identifier	ZEND_PUTS_EX		24347	0					
ANR	24675	ArgumentList	""")\\n"""		24347	1					
ANR	24676	Argument	""")\\n"""		24347	0					
ANR	24677	PrimaryExpression	""")\\n"""		24347	0					
ANR	24678	ReturnType	static void		24347	1					
ANR	24679	Identifier	print_hash		24347	2					
ANR	24680	ParameterList	"zend_write_func_t write_func , HashTable * ht , int indent , zend_bool is_object"		24347	3					
ANR	24681	Parameter	zend_write_func_t write_func	162:23:6046:6073	24347	0	True				
ANR	24682	ParameterType	zend_write_func_t		24347	0					
ANR	24683	Identifier	write_func		24347	1					
ANR	24684	Parameter	HashTable * ht	162:53:6076:6088	24347	1	True				
ANR	24685	ParameterType	HashTable *		24347	0					
ANR	24686	Identifier	ht		24347	1					
ANR	24687	Parameter	int indent	162:68:6091:6100	24347	2	True				
ANR	24688	ParameterType	int		24347	0					
ANR	24689	Identifier	indent		24347	1					
ANR	24690	Parameter	zend_bool is_object	162:80:6103:6121	24347	3	True				
ANR	24691	ParameterType	zend_bool		24347	0					
ANR	24692	Identifier	is_object		24347	1					
ANR	24693	CFGEntryNode	ENTRY		24347		True				
ANR	24694	CFGExitNode	EXIT		24347		True				
ANR	24695	CFGErrorNode	ERROR		24347		True				
ANR	24696	Symbol	* class_name		24347						
ANR	24697	Symbol	PRINT_ZVAL_INDENT		24347						
ANR	24698	Symbol	indent		24347						
ANR	24699	Symbol	& class_name		24347						
ANR	24700	Symbol	Z_INDIRECT_P		24347						
ANR	24701	Symbol	ht		24347						
ANR	24702	Symbol	& prop_len		24347						
ANR	24703	Symbol	ZEND_LONG_FMT		24347						
ANR	24704	Symbol	mangled		24347						
ANR	24705	Symbol	tmp		24347						
ANR	24706	Symbol	& prop_name		24347						
ANR	24707	Symbol	is_object		24347						
ANR	24708	Symbol	class_name		24347						
ANR	24709	Symbol	IS_UNDEF		24347						
ANR	24710	Symbol	key		24347						
ANR	24711	Symbol	SUCCESS		24347						
ANR	24712	Symbol	num_key		24347						
ANR	24713	Symbol	i		24347						
ANR	24714	Symbol	write_func		24347						
ANR	24715	Symbol	Z_TYPE_P		24347						
ANR	24716	Symbol	ZSTR_VAL		24347						
ANR	24717	Symbol	string_key		24347						
ANR	24718	Symbol	prop_name		24347						
ANR	24719	Symbol	prop_len		24347						
ANR	24720	Symbol	zend_unmangle_property_name_ex		24347						
ANR	24721	Symbol	ZSTR_LEN		24347						
ANR	24722	Symbol	IS_INDIRECT		24347						
ANR	24723	Function	print_flat_hash	221:0:7493:7957							
ANR	24724	FunctionDef	print_flat_hash (HashTable * ht)		24723	0					
ANR	24725	CompoundStatement		222:0:7546:7957	24723	0					
ANR	24726	IdentifierDeclStatement	zval * tmp ;	223:1:7549:7558	24723	0	True				
ANR	24727	IdentifierDecl	* tmp		24723	0					
ANR	24728	IdentifierDeclType	zval *		24723	0					
ANR	24729	Identifier	tmp		24723	1					
ANR	24730	IdentifierDeclStatement	zend_string * string_key ;	224:1:7561:7584	24723	1	True				
ANR	24731	IdentifierDecl	* string_key		24723	0					
ANR	24732	IdentifierDeclType	zend_string *		24723	0					
ANR	24733	Identifier	string_key		24723	1					
ANR	24734	IdentifierDeclStatement	zend_ulong num_key ;	225:1:7587:7605	24723	2	True				
ANR	24735	IdentifierDecl	num_key		24723	0					
ANR	24736	IdentifierDeclType	zend_ulong		24723	0					
ANR	24737	Identifier	num_key		24723	1					
ANR	24738	IdentifierDeclStatement	int i = 0 ;	226:1:7608:7617	24723	3	True				
ANR	24739	IdentifierDecl	i = 0		24723	0					
ANR	24740	IdentifierDeclType	int		24723	0					
ANR	24741	Identifier	i		24723	1					
ANR	24742	AssignmentExpression	i = 0		24723	2		=			
ANR	24743	Identifier	i		24723	0					
ANR	24744	PrimaryExpression	0		24723	1					
ANR	24745	Statement	ZEND_HASH_FOREACH_KEY_VAL_IND	228:1:7621:7649	24723	4	True				
ANR	24746	Statement	(	228:30:7650:7650	24723	5	True				
ANR	24747	Statement	ht	228:31:7651:7652	24723	6	True				
ANR	24748	Statement	","	228:33:7653:7653	24723	7	True				
ANR	24749	Statement	num_key	228:35:7655:7661	24723	8	True				
ANR	24750	Statement	","	228:42:7662:7662	24723	9	True				
ANR	24751	Statement	string_key	228:44:7664:7673	24723	10	True				
ANR	24752	Statement	","	228:54:7674:7674	24723	11	True				
ANR	24753	Statement	tmp	228:56:7676:7678	24723	12	True				
ANR	24754	Statement	)	228:59:7679:7679	24723	13	True				
ANR	24755	CompoundStatement		7:61:134:134	24723	14					
ANR	24756	IfStatement	if ( i ++ > 0 )		24723	0					
ANR	24757	Condition	i ++ > 0	229:6:7689:7695	24723	0	True				
ANR	24758	RelationalExpression	i ++ > 0		24723	0		>			
ANR	24759	PostIncDecOperationExpression	i ++		24723	0					
ANR	24760	Identifier	i		24723	0					
ANR	24761	IncDec	++		24723	1					
ANR	24762	PrimaryExpression	0		24723	1					
ANR	24763	CompoundStatement		8:15:151:151	24723	1					
ANR	24764	ExpressionStatement	"ZEND_PUTS ( "","" )"	230:3:7703:7717	24723	0	True				
ANR	24765	CallExpression	"ZEND_PUTS ( "","" )"		24723	0					
ANR	24766	Callee	ZEND_PUTS		24723	0					
ANR	24767	Identifier	ZEND_PUTS		24723	0					
ANR	24768	ArgumentList	""","""		24723	1					
ANR	24769	Argument	""","""		24723	0					
ANR	24770	PrimaryExpression	""","""		24723	0					
ANR	24771	ExpressionStatement	"ZEND_PUTS ( ""["" )"	232:2:7725:7739	24723	1	True				
ANR	24772	CallExpression	"ZEND_PUTS ( ""["" )"		24723	0					
ANR	24773	Callee	ZEND_PUTS		24723	0					
ANR	24774	Identifier	ZEND_PUTS		24723	0					
ANR	24775	ArgumentList	"""["""		24723	1					
ANR	24776	Argument	"""["""		24723	0					
ANR	24777	PrimaryExpression	"""["""		24723	0					
ANR	24778	IfStatement	if ( string_key )		24723	2					
ANR	24779	Condition	string_key	233:6:7747:7756	24723	0	True				
ANR	24780	Identifier	string_key		24723	0					
ANR	24781	CompoundStatement		12:18:212:212	24723	1					
ANR	24782	ExpressionStatement	"ZEND_WRITE ( ZSTR_VAL ( string_key ) , ZSTR_LEN ( string_key ) )"	234:3:7764:7818	24723	0	True				
ANR	24783	CallExpression	"ZEND_WRITE ( ZSTR_VAL ( string_key ) , ZSTR_LEN ( string_key ) )"		24723	0					
ANR	24784	Callee	ZEND_WRITE		24723	0					
ANR	24785	Identifier	ZEND_WRITE		24723	0					
ANR	24786	ArgumentList	ZSTR_VAL ( string_key )		24723	1					
ANR	24787	Argument	ZSTR_VAL ( string_key )		24723	0					
ANR	24788	CallExpression	ZSTR_VAL ( string_key )		24723	0					
ANR	24789	Callee	ZSTR_VAL		24723	0					
ANR	24790	Identifier	ZSTR_VAL		24723	0					
ANR	24791	ArgumentList	string_key		24723	1					
ANR	24792	Argument	string_key		24723	0					
ANR	24793	Identifier	string_key		24723	0					
ANR	24794	Argument	ZSTR_LEN ( string_key )		24723	1					
ANR	24795	CallExpression	ZSTR_LEN ( string_key )		24723	0					
ANR	24796	Callee	ZSTR_LEN		24723	0					
ANR	24797	Identifier	ZSTR_LEN		24723	0					
ANR	24798	ArgumentList	string_key		24723	1					
ANR	24799	Argument	string_key		24723	0					
ANR	24800	Identifier	string_key		24723	0					
ANR	24801	ElseStatement	else		24723	0					
ANR	24802	CompoundStatement		14:9:282:282	24723	0					
ANR	24803	ExpressionStatement	"zend_printf ( ZEND_ULONG_FMT , num_key )"	236:3:7834:7870	24723	0	True				
ANR	24804	CallExpression	"zend_printf ( ZEND_ULONG_FMT , num_key )"		24723	0					
ANR	24805	Callee	zend_printf		24723	0					
ANR	24806	Identifier	zend_printf		24723	0					
ANR	24807	ArgumentList	ZEND_ULONG_FMT		24723	1					
ANR	24808	Argument	ZEND_ULONG_FMT		24723	0					
ANR	24809	Identifier	ZEND_ULONG_FMT		24723	0					
ANR	24810	Argument	num_key		24723	1					
ANR	24811	Identifier	num_key		24723	0					
ANR	24812	ExpressionStatement	"ZEND_PUTS ( ""] => "" )"	238:2:7878:7896	24723	3	True				
ANR	24813	CallExpression	"ZEND_PUTS ( ""] => "" )"		24723	0					
ANR	24814	Callee	ZEND_PUTS		24723	0					
ANR	24815	Identifier	ZEND_PUTS		24723	0					
ANR	24816	ArgumentList	"""] => """		24723	1					
ANR	24817	Argument	"""] => """		24723	0					
ANR	24818	PrimaryExpression	"""] => """		24723	0					
ANR	24819	ExpressionStatement	zend_print_flat_zval_r ( tmp )	239:2:7900:7927	24723	4	True				
ANR	24820	CallExpression	zend_print_flat_zval_r ( tmp )		24723	0					
ANR	24821	Callee	zend_print_flat_zval_r		24723	0					
ANR	24822	Identifier	zend_print_flat_zval_r		24723	0					
ANR	24823	ArgumentList	tmp		24723	1					
ANR	24824	Argument	tmp		24723	0					
ANR	24825	Identifier	tmp		24723	0					
ANR	24826	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	240:3:7932:7955	24723	15	True				
ANR	24827	CallExpression	ZEND_HASH_FOREACH_END ( )		24723	0					
ANR	24828	Callee	ZEND_HASH_FOREACH_END		24723	0					
ANR	24829	Identifier	ZEND_HASH_FOREACH_END		24723	0					
ANR	24830	ArgumentList			24723	1					
ANR	24831	ReturnType	static void		24723	1					
ANR	24832	Identifier	print_flat_hash		24723	2					
ANR	24833	ParameterList	HashTable * ht		24723	3					
ANR	24834	Parameter	HashTable * ht	221:28:7521:7533	24723	0	True				
ANR	24835	ParameterType	HashTable *		24723	0					
ANR	24836	Identifier	ht		24723	1					
ANR	24837	CFGEntryNode	ENTRY		24723		True				
ANR	24838	CFGExitNode	EXIT		24723		True				
ANR	24839	Symbol	string_key		24723						
ANR	24840	Symbol	tmp		24723						
ANR	24841	Symbol	ZEND_ULONG_FMT		24723						
ANR	24842	Symbol	num_key		24723						
ANR	24843	Symbol	ZSTR_LEN		24723						
ANR	24844	Symbol	i		24723						
ANR	24845	Symbol	ht		24723						
ANR	24846	Symbol	ZSTR_VAL		24723						
ANR	24847	Function	zend_make_printable_zval	244:0:7970:8174							
ANR	24848	FunctionDef	"zend_make_printable_zval (zval * expr , zval * expr_copy)"		24847	0					
ANR	24849	CompoundStatement		245:0:8047:8174	24847	0					
ANR	24850	IfStatement	if ( Z_TYPE_P ( expr ) == IS_STRING )		24847	0					
ANR	24851	Condition	Z_TYPE_P ( expr ) == IS_STRING	246:5:8054:8080	24847	0	True				
ANR	24852	EqualityExpression	Z_TYPE_P ( expr ) == IS_STRING		24847	0		==			
ANR	24853	CallExpression	Z_TYPE_P ( expr )		24847	0					
ANR	24854	Callee	Z_TYPE_P		24847	0					
ANR	24855	Identifier	Z_TYPE_P		24847	0					
ANR	24856	ArgumentList	expr		24847	1					
ANR	24857	Argument	expr		24847	0					
ANR	24858	Identifier	expr		24847	0					
ANR	24859	Identifier	IS_STRING		24847	1					
ANR	24860	CompoundStatement		2:34:35:35	24847	1					
ANR	24861	ReturnStatement	return 0 ;	247:2:8087:8095	24847	0	True				
ANR	24862	PrimaryExpression	0		24847	0					
ANR	24863	ElseStatement	else		24847	0					
ANR	24864	CompoundStatement		4:8:57:57	24847	0					
ANR	24865	ExpressionStatement	"ZVAL_STR ( expr_copy , _zval_get_string_func ( expr ) )"	249:2:8109:8157	24847	0	True				
ANR	24866	CallExpression	"ZVAL_STR ( expr_copy , _zval_get_string_func ( expr ) )"		24847	0					
ANR	24867	Callee	ZVAL_STR		24847	0					
ANR	24868	Identifier	ZVAL_STR		24847	0					
ANR	24869	ArgumentList	expr_copy		24847	1					
ANR	24870	Argument	expr_copy		24847	0					
ANR	24871	Identifier	expr_copy		24847	0					
ANR	24872	Argument	_zval_get_string_func ( expr )		24847	1					
ANR	24873	CallExpression	_zval_get_string_func ( expr )		24847	0					
ANR	24874	Callee	_zval_get_string_func		24847	0					
ANR	24875	Identifier	_zval_get_string_func		24847	0					
ANR	24876	ArgumentList	expr		24847	1					
ANR	24877	Argument	expr		24847	0					
ANR	24878	Identifier	expr		24847	0					
ANR	24879	ReturnStatement	return 1 ;	250:2:8161:8169	24847	1	True				
ANR	24880	PrimaryExpression	1		24847	0					
ANR	24881	ReturnType	ZEND_API int		24847	1					
ANR	24882	Identifier	zend_make_printable_zval		24847	2					
ANR	24883	ParameterList	"zval * expr , zval * expr_copy"		24847	3					
ANR	24884	Parameter	zval * expr	244:38:8008:8017	24847	0	True				
ANR	24885	ParameterType	zval *		24847	0					
ANR	24886	Identifier	expr		24847	1					
ANR	24887	Parameter	zval * expr_copy	244:50:8020:8034	24847	1	True				
ANR	24888	ParameterType	zval *		24847	0					
ANR	24889	Identifier	expr_copy		24847	1					
ANR	24890	CFGEntryNode	ENTRY		24847		True				
ANR	24891	CFGExitNode	EXIT		24847		True				
ANR	24892	Symbol	_zval_get_string_func		24847						
ANR	24893	Symbol	expr_copy		24847						
ANR	24894	Symbol	expr		24847						
ANR	24895	Symbol	IS_STRING		24847						
ANR	24896	Symbol	Z_TYPE_P		24847						
ANR	24897	Function	zend_print_zval	255:0:8187:8309							
ANR	24898	FunctionDef	"zend_print_zval (zval * expr , int indent)"		24897	0					
ANR	24899	CompoundStatement		256:0:8253:8309	24897	0					
ANR	24900	ReturnStatement	"return zend_print_zval_ex ( zend_write , expr , indent ) ;"	257:1:8256:8307	24897	0	True				
ANR	24901	CallExpression	"zend_print_zval_ex ( zend_write , expr , indent )"		24897	0					
ANR	24902	Callee	zend_print_zval_ex		24897	0					
ANR	24903	Identifier	zend_print_zval_ex		24897	0					
ANR	24904	ArgumentList	zend_write		24897	1					
ANR	24905	Argument	zend_write		24897	0					
ANR	24906	Identifier	zend_write		24897	0					
ANR	24907	Argument	expr		24897	1					
ANR	24908	Identifier	expr		24897	0					
ANR	24909	Argument	indent		24897	2					
ANR	24910	Identifier	indent		24897	0					
ANR	24911	ReturnType	ZEND_API size_t		24897	1					
ANR	24912	Identifier	zend_print_zval		24897	2					
ANR	24913	ParameterList	"zval * expr , int indent"		24897	3					
ANR	24914	Parameter	zval * expr	255:32:8219:8228	24897	0	True				
ANR	24915	ParameterType	zval *		24897	0					
ANR	24916	Identifier	expr		24897	1					
ANR	24917	Parameter	int indent	255:44:8231:8240	24897	1	True				
ANR	24918	ParameterType	int		24897	0					
ANR	24919	Identifier	indent		24897	1					
ANR	24920	CFGEntryNode	ENTRY		24897		True				
ANR	24921	CFGExitNode	EXIT		24897		True				
ANR	24922	Symbol	indent		24897						
ANR	24923	Symbol	expr		24897						
ANR	24924	Symbol	zend_print_zval_ex		24897						
ANR	24925	Symbol	zend_write		24897						
ANR	24926	Function	zend_print_zval_ex	261:0:8322:8591							
ANR	24927	FunctionDef	"zend_print_zval_ex (zend_write_func_t write_func , zval * expr , int indent)"		24926	0					
ANR	24928	CompoundStatement		262:0:8421:8591	24926	0					
ANR	24929	IdentifierDeclStatement	zend_string * str = zval_get_string ( expr ) ;	263:1:8424:8464	24926	0	True				
ANR	24930	IdentifierDecl	* str = zval_get_string ( expr )		24926	0					
ANR	24931	IdentifierDeclType	zend_string *		24926	0					
ANR	24932	Identifier	str		24926	1					
ANR	24933	AssignmentExpression	* str = zval_get_string ( expr )		24926	2		=			
ANR	24934	Identifier	str		24926	0					
ANR	24935	CallExpression	zval_get_string ( expr )		24926	1					
ANR	24936	Callee	zval_get_string		24926	0					
ANR	24937	Identifier	zval_get_string		24926	0					
ANR	24938	ArgumentList	expr		24926	1					
ANR	24939	Argument	expr		24926	0					
ANR	24940	Identifier	expr		24926	0					
ANR	24941	IdentifierDeclStatement	size_t len = ZSTR_LEN ( str ) ;	264:1:8467:8493	24926	1	True				
ANR	24942	IdentifierDecl	len = ZSTR_LEN ( str )		24926	0					
ANR	24943	IdentifierDeclType	size_t		24926	0					
ANR	24944	Identifier	len		24926	1					
ANR	24945	AssignmentExpression	len = ZSTR_LEN ( str )		24926	2		=			
ANR	24946	Identifier	len		24926	0					
ANR	24947	CallExpression	ZSTR_LEN ( str )		24926	1					
ANR	24948	Callee	ZSTR_LEN		24926	0					
ANR	24949	Identifier	ZSTR_LEN		24926	0					
ANR	24950	ArgumentList	str		24926	1					
ANR	24951	Argument	str		24926	0					
ANR	24952	Identifier	str		24926	0					
ANR	24953	IfStatement	if ( len != 0 )		24926	2					
ANR	24954	Condition	len != 0	266:5:8501:8508	24926	0	True				
ANR	24955	EqualityExpression	len != 0		24926	0		!=			
ANR	24956	Identifier	len		24926	0					
ANR	24957	PrimaryExpression	0		24926	1					
ANR	24958	CompoundStatement		5:15:89:89	24926	1					
ANR	24959	ExpressionStatement	"write_func ( ZSTR_VAL ( str ) , len )"	267:2:8515:8545	24926	0	True				
ANR	24960	CallExpression	"write_func ( ZSTR_VAL ( str ) , len )"		24926	0					
ANR	24961	Callee	write_func		24926	0					
ANR	24962	Identifier	write_func		24926	0					
ANR	24963	ArgumentList	ZSTR_VAL ( str )		24926	1					
ANR	24964	Argument	ZSTR_VAL ( str )		24926	0					
ANR	24965	CallExpression	ZSTR_VAL ( str )		24926	0					
ANR	24966	Callee	ZSTR_VAL		24926	0					
ANR	24967	Identifier	ZSTR_VAL		24926	0					
ANR	24968	ArgumentList	str		24926	1					
ANR	24969	Argument	str		24926	0					
ANR	24970	Identifier	str		24926	0					
ANR	24971	Argument	len		24926	1					
ANR	24972	Identifier	len		24926	0					
ANR	24973	ExpressionStatement	zend_string_release ( str )	270:1:8552:8576	24926	3	True				
ANR	24974	CallExpression	zend_string_release ( str )		24926	0					
ANR	24975	Callee	zend_string_release		24926	0					
ANR	24976	Identifier	zend_string_release		24926	0					
ANR	24977	ArgumentList	str		24926	1					
ANR	24978	Argument	str		24926	0					
ANR	24979	Identifier	str		24926	0					
ANR	24980	ReturnStatement	return len ;	271:1:8579:8589	24926	4	True				
ANR	24981	Identifier	len		24926	0					
ANR	24982	ReturnType	ZEND_API size_t		24926	1					
ANR	24983	Identifier	zend_print_zval_ex		24926	2					
ANR	24984	ParameterList	"zend_write_func_t write_func , zval * expr , int indent"		24926	3					
ANR	24985	Parameter	zend_write_func_t write_func	261:35:8357:8384	24926	0	True				
ANR	24986	ParameterType	zend_write_func_t		24926	0					
ANR	24987	Identifier	write_func		24926	1					
ANR	24988	Parameter	zval * expr	261:65:8387:8396	24926	1	True				
ANR	24989	ParameterType	zval *		24926	0					
ANR	24990	Identifier	expr		24926	1					
ANR	24991	Parameter	int indent	261:77:8399:8408	24926	2	True				
ANR	24992	ParameterType	int		24926	0					
ANR	24993	Identifier	indent		24926	1					
ANR	24994	CFGEntryNode	ENTRY		24926		True				
ANR	24995	CFGExitNode	EXIT		24926		True				
ANR	24996	Symbol	str		24926						
ANR	24997	Symbol	len		24926						
ANR	24998	Symbol	indent		24926						
ANR	24999	Symbol	ZSTR_LEN		24926						
ANR	25000	Symbol	zval_get_string		24926						
ANR	25001	Symbol	expr		24926						
ANR	25002	Symbol	write_func		24926						
ANR	25003	Symbol	ZSTR_VAL		24926						
ANR	25004	Function	zend_print_flat_zval_r	275:0:8604:9716							
ANR	25005	FunctionDef	zend_print_flat_zval_r (zval * expr)		25004	0					
ANR	25006	CompoundStatement		276:0:8663:9716	25004	0					
ANR	25007	SwitchStatement	switch ( Z_TYPE_P ( expr ) )		25004	0					
ANR	25008	Condition	Z_TYPE_P ( expr )	277:9:8674:8687	25004	0	True				
ANR	25009	CallExpression	Z_TYPE_P ( expr )		25004	0					
ANR	25010	Callee	Z_TYPE_P		25004	0					
ANR	25011	Identifier	Z_TYPE_P		25004	0					
ANR	25012	ArgumentList	expr		25004	1					
ANR	25013	Argument	expr		25004	0					
ANR	25014	Identifier	expr		25004	0					
ANR	25015	CompoundStatement		2:25:26:26	25004	1					
ANR	25016	Label	case IS_ARRAY :	278:2:8694:8707	25004	0	True				
ANR	25017	Identifier	IS_ARRAY		25004	0					
ANR	25018	ExpressionStatement	"ZEND_PUTS ( ""Array ("" )"	279:3:8712:8732	25004	1	True				
ANR	25019	CallExpression	"ZEND_PUTS ( ""Array ("" )"		25004	0					
ANR	25020	Callee	ZEND_PUTS		25004	0					
ANR	25021	Identifier	ZEND_PUTS		25004	0					
ANR	25022	ArgumentList	"""Array ("""		25004	1					
ANR	25023	Argument	"""Array ("""		25004	0					
ANR	25024	PrimaryExpression	"""Array ("""		25004	0					
ANR	25025	IfStatement	if ( ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) ) && ++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount > 1 )		25004	2					
ANR	25026	Condition	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) ) && ++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount > 1	280:7:8741:8832	25004	0	True				
ANR	25027	AndExpression	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) ) && ++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount > 1		25004	0		&&			
ANR	25028	CallExpression	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) )		25004	0					
ANR	25029	Callee	ZEND_HASH_APPLY_PROTECTION		25004	0					
ANR	25030	Identifier	ZEND_HASH_APPLY_PROTECTION		25004	0					
ANR	25031	ArgumentList	Z_ARRVAL_P ( expr )		25004	1					
ANR	25032	Argument	Z_ARRVAL_P ( expr )		25004	0					
ANR	25033	CallExpression	Z_ARRVAL_P ( expr )		25004	0					
ANR	25034	Callee	Z_ARRVAL_P		25004	0					
ANR	25035	Identifier	Z_ARRVAL_P		25004	0					
ANR	25036	ArgumentList	expr		25004	1					
ANR	25037	Argument	expr		25004	0					
ANR	25038	Identifier	expr		25004	0					
ANR	25039	RelationalExpression	++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount > 1		25004	1		>			
ANR	25040	UnaryExpression	++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25004	0					
ANR	25041	IncDec	++		25004	0					
ANR	25042	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25004	1					
ANR	25043	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v		25004	0					
ANR	25044	PtrMemberAccess	Z_ARRVAL_P ( expr ) -> u		25004	0					
ANR	25045	CallExpression	Z_ARRVAL_P ( expr )		25004	0					
ANR	25046	Callee	Z_ARRVAL_P		25004	0					
ANR	25047	Identifier	Z_ARRVAL_P		25004	0					
ANR	25048	ArgumentList	expr		25004	1					
ANR	25049	Argument	expr		25004	0					
ANR	25050	Identifier	expr		25004	0					
ANR	25051	Identifier	u		25004	1					
ANR	25052	Identifier	v		25004	1					
ANR	25053	Identifier	nApplyCount		25004	1					
ANR	25054	PrimaryExpression	1		25004	1					
ANR	25055	CompoundStatement		6:46:171:171	25004	1					
ANR	25056	ExpressionStatement	"ZEND_PUTS ( "" *RECURSION*"" )"	282:4:8841:8866	25004	0	True				
ANR	25057	CallExpression	"ZEND_PUTS ( "" *RECURSION*"" )"		25004	0					
ANR	25058	Callee	ZEND_PUTS		25004	0					
ANR	25059	Identifier	ZEND_PUTS		25004	0					
ANR	25060	ArgumentList	""" *RECURSION*"""		25004	1					
ANR	25061	Argument	""" *RECURSION*"""		25004	0					
ANR	25062	PrimaryExpression	""" *RECURSION*"""		25004	0					
ANR	25063	ExpressionStatement	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount --	283:4:8872:8907	25004	1	True				
ANR	25064	PostIncDecOperationExpression	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount --		25004	0					
ANR	25065	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25004	0					
ANR	25066	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v		25004	0					
ANR	25067	PtrMemberAccess	Z_ARRVAL_P ( expr ) -> u		25004	0					
ANR	25068	CallExpression	Z_ARRVAL_P ( expr )		25004	0					
ANR	25069	Callee	Z_ARRVAL_P		25004	0					
ANR	25070	Identifier	Z_ARRVAL_P		25004	0					
ANR	25071	ArgumentList	expr		25004	1					
ANR	25072	Argument	expr		25004	0					
ANR	25073	Identifier	expr		25004	0					
ANR	25074	Identifier	u		25004	1					
ANR	25075	Identifier	v		25004	1					
ANR	25076	Identifier	nApplyCount		25004	1					
ANR	25077	IncDec	--		25004	1					
ANR	25078	ReturnStatement	return ;	284:4:8913:8919	25004	2	True				
ANR	25079	ExpressionStatement	print_flat_hash ( Z_ARRVAL_P ( expr ) )	286:3:8929:8962	25004	3	True				
ANR	25080	CallExpression	print_flat_hash ( Z_ARRVAL_P ( expr ) )		25004	0					
ANR	25081	Callee	print_flat_hash		25004	0					
ANR	25082	Identifier	print_flat_hash		25004	0					
ANR	25083	ArgumentList	Z_ARRVAL_P ( expr )		25004	1					
ANR	25084	Argument	Z_ARRVAL_P ( expr )		25004	0					
ANR	25085	CallExpression	Z_ARRVAL_P ( expr )		25004	0					
ANR	25086	Callee	Z_ARRVAL_P		25004	0					
ANR	25087	Identifier	Z_ARRVAL_P		25004	0					
ANR	25088	ArgumentList	expr		25004	1					
ANR	25089	Argument	expr		25004	0					
ANR	25090	Identifier	expr		25004	0					
ANR	25091	ExpressionStatement	"ZEND_PUTS ( "")"" )"	287:3:8967:8981	25004	4	True				
ANR	25092	CallExpression	"ZEND_PUTS ( "")"" )"		25004	0					
ANR	25093	Callee	ZEND_PUTS		25004	0					
ANR	25094	Identifier	ZEND_PUTS		25004	0					
ANR	25095	ArgumentList	""")"""		25004	1					
ANR	25096	Argument	""")"""		25004	0					
ANR	25097	PrimaryExpression	""")"""		25004	0					
ANR	25098	IfStatement	if ( ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) ) )		25004	5					
ANR	25099	Condition	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) )	288:7:8990:9033	25004	0	True				
ANR	25100	CallExpression	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) )		25004	0					
ANR	25101	Callee	ZEND_HASH_APPLY_PROTECTION		25004	0					
ANR	25102	Identifier	ZEND_HASH_APPLY_PROTECTION		25004	0					
ANR	25103	ArgumentList	Z_ARRVAL_P ( expr )		25004	1					
ANR	25104	Argument	Z_ARRVAL_P ( expr )		25004	0					
ANR	25105	CallExpression	Z_ARRVAL_P ( expr )		25004	0					
ANR	25106	Callee	Z_ARRVAL_P		25004	0					
ANR	25107	Identifier	Z_ARRVAL_P		25004	0					
ANR	25108	ArgumentList	expr		25004	1					
ANR	25109	Argument	expr		25004	0					
ANR	25110	Identifier	expr		25004	0					
ANR	25111	CompoundStatement		13:53:372:372	25004	1					
ANR	25112	ExpressionStatement	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount --	289:4:9042:9077	25004	0	True				
ANR	25113	PostIncDecOperationExpression	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount --		25004	0					
ANR	25114	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25004	0					
ANR	25115	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v		25004	0					
ANR	25116	PtrMemberAccess	Z_ARRVAL_P ( expr ) -> u		25004	0					
ANR	25117	CallExpression	Z_ARRVAL_P ( expr )		25004	0					
ANR	25118	Callee	Z_ARRVAL_P		25004	0					
ANR	25119	Identifier	Z_ARRVAL_P		25004	0					
ANR	25120	ArgumentList	expr		25004	1					
ANR	25121	Argument	expr		25004	0					
ANR	25122	Identifier	expr		25004	0					
ANR	25123	Identifier	u		25004	1					
ANR	25124	Identifier	v		25004	1					
ANR	25125	Identifier	nApplyCount		25004	1					
ANR	25126	IncDec	--		25004	1					
ANR	25127	BreakStatement	break ;	291:3:9087:9092	25004	6	True				
ANR	25128	Label	case IS_OBJECT :	292:2:9096:9110	25004	7	True				
ANR	25129	Identifier	IS_OBJECT		25004	0					
ANR	25130	CompoundStatement		20:3:488:566	25004	8					
ANR	25131	IdentifierDeclStatement	HashTable * properties = NULL ;	294:3:9119:9147	25004	0	True				
ANR	25132	IdentifierDecl	* properties = NULL		25004	0					
ANR	25133	IdentifierDeclType	HashTable *		25004	0					
ANR	25134	Identifier	properties		25004	1					
ANR	25135	AssignmentExpression	* properties = NULL		25004	2		=			
ANR	25136	Identifier	NULL		25004	0					
ANR	25137	Identifier	NULL		25004	1					
ANR	25138	IdentifierDeclStatement	"zend_string * class_name = Z_OBJ_HANDLER_P ( expr , get_class_name ) ( Z_OBJ_P ( expr ) ) ;"	295:3:9152:9230	25004	1	True				
ANR	25139	IdentifierDecl	"* class_name = Z_OBJ_HANDLER_P ( expr , get_class_name ) ( Z_OBJ_P ( expr ) )"		25004	0					
ANR	25140	IdentifierDeclType	zend_string *		25004	0					
ANR	25141	Identifier	class_name		25004	1					
ANR	25142	AssignmentExpression	"* class_name = Z_OBJ_HANDLER_P ( expr , get_class_name ) ( Z_OBJ_P ( expr ) )"		25004	2		=			
ANR	25143	Identifier	class_name		25004	0					
ANR	25144	CallExpression	"Z_OBJ_HANDLER_P ( expr , get_class_name ) ( Z_OBJ_P ( expr ) )"		25004	1					
ANR	25145	Callee	"Z_OBJ_HANDLER_P ( expr , get_class_name )"		25004	0					
ANR	25146	CallExpression	"Z_OBJ_HANDLER_P ( expr , get_class_name )"		25004	0					
ANR	25147	Callee	Z_OBJ_HANDLER_P		25004	0					
ANR	25148	Identifier	Z_OBJ_HANDLER_P		25004	0					
ANR	25149	ArgumentList	expr		25004	1					
ANR	25150	Argument	expr		25004	0					
ANR	25151	Identifier	expr		25004	0					
ANR	25152	Argument	get_class_name		25004	1					
ANR	25153	Identifier	get_class_name		25004	0					
ANR	25154	ArgumentList	Z_OBJ_P ( expr )		25004	1					
ANR	25155	Argument	Z_OBJ_P ( expr )		25004	0					
ANR	25156	CallExpression	Z_OBJ_P ( expr )		25004	0					
ANR	25157	Callee	Z_OBJ_P		25004	0					
ANR	25158	Identifier	Z_OBJ_P		25004	0					
ANR	25159	ArgumentList	expr		25004	1					
ANR	25160	Argument	expr		25004	0					
ANR	25161	Identifier	expr		25004	0					
ANR	25162	ExpressionStatement	"zend_printf ( ""%s Object ("" , ZSTR_VAL ( class_name ) )"	296:3:9235:9283	25004	2	True				
ANR	25163	CallExpression	"zend_printf ( ""%s Object ("" , ZSTR_VAL ( class_name ) )"		25004	0					
ANR	25164	Callee	zend_printf		25004	0					
ANR	25165	Identifier	zend_printf		25004	0					
ANR	25166	ArgumentList	"""%s Object ("""		25004	1					
ANR	25167	Argument	"""%s Object ("""		25004	0					
ANR	25168	PrimaryExpression	"""%s Object ("""		25004	0					
ANR	25169	Argument	ZSTR_VAL ( class_name )		25004	1					
ANR	25170	CallExpression	ZSTR_VAL ( class_name )		25004	0					
ANR	25171	Callee	ZSTR_VAL		25004	0					
ANR	25172	Identifier	ZSTR_VAL		25004	0					
ANR	25173	ArgumentList	class_name		25004	1					
ANR	25174	Argument	class_name		25004	0					
ANR	25175	Identifier	class_name		25004	0					
ANR	25176	ExpressionStatement	zend_string_release ( class_name )	297:3:9288:9319	25004	3	True				
ANR	25177	CallExpression	zend_string_release ( class_name )		25004	0					
ANR	25178	Callee	zend_string_release		25004	0					
ANR	25179	Identifier	zend_string_release		25004	0					
ANR	25180	ArgumentList	class_name		25004	1					
ANR	25181	Argument	class_name		25004	0					
ANR	25182	Identifier	class_name		25004	0					
ANR	25183	IfStatement	if ( Z_OBJ_APPLY_COUNT_P ( expr ) > 0 )		25004	4					
ANR	25184	Condition	Z_OBJ_APPLY_COUNT_P ( expr ) > 0	299:7:9329:9357	25004	0	True				
ANR	25185	RelationalExpression	Z_OBJ_APPLY_COUNT_P ( expr ) > 0		25004	0		>			
ANR	25186	CallExpression	Z_OBJ_APPLY_COUNT_P ( expr )		25004	0					
ANR	25187	Callee	Z_OBJ_APPLY_COUNT_P		25004	0					
ANR	25188	Identifier	Z_OBJ_APPLY_COUNT_P		25004	0					
ANR	25189	ArgumentList	expr		25004	1					
ANR	25190	Argument	expr		25004	0					
ANR	25191	Identifier	expr		25004	0					
ANR	25192	PrimaryExpression	0		25004	1					
ANR	25193	CompoundStatement		24:38:696:696	25004	1					
ANR	25194	ExpressionStatement	"ZEND_PUTS ( "" *RECURSION*"" )"	300:4:9366:9391	25004	0	True				
ANR	25195	CallExpression	"ZEND_PUTS ( "" *RECURSION*"" )"		25004	0					
ANR	25196	Callee	ZEND_PUTS		25004	0					
ANR	25197	Identifier	ZEND_PUTS		25004	0					
ANR	25198	ArgumentList	""" *RECURSION*"""		25004	1					
ANR	25199	Argument	""" *RECURSION*"""		25004	0					
ANR	25200	PrimaryExpression	""" *RECURSION*"""		25004	0					
ANR	25201	ReturnStatement	return ;	301:4:9397:9403	25004	1	True				
ANR	25202	IfStatement	"if ( Z_OBJ_HANDLER_P ( expr , get_properties ) )"		25004	5					
ANR	25203	Condition	"Z_OBJ_HANDLER_P ( expr , get_properties )"	304:7:9418:9454	25004	0	True				
ANR	25204	CallExpression	"Z_OBJ_HANDLER_P ( expr , get_properties )"		25004	0					
ANR	25205	Callee	Z_OBJ_HANDLER_P		25004	0					
ANR	25206	Identifier	Z_OBJ_HANDLER_P		25004	0					
ANR	25207	ArgumentList	expr		25004	1					
ANR	25208	Argument	expr		25004	0					
ANR	25209	Identifier	expr		25004	0					
ANR	25210	Argument	get_properties		25004	1					
ANR	25211	Identifier	get_properties		25004	0					
ANR	25212	CompoundStatement		29:46:793:793	25004	1					
ANR	25213	ExpressionStatement	properties = Z_OBJPROP_P ( expr )	305:4:9463:9493	25004	0	True				
ANR	25214	AssignmentExpression	properties = Z_OBJPROP_P ( expr )		25004	0		=			
ANR	25215	Identifier	properties		25004	0					
ANR	25216	CallExpression	Z_OBJPROP_P ( expr )		25004	1					
ANR	25217	Callee	Z_OBJPROP_P		25004	0					
ANR	25218	Identifier	Z_OBJPROP_P		25004	0					
ANR	25219	ArgumentList	expr		25004	1					
ANR	25220	Argument	expr		25004	0					
ANR	25221	Identifier	expr		25004	0					
ANR	25222	IfStatement	if ( properties )		25004	6					
ANR	25223	Condition	properties	307:7:9507:9516	25004	0	True				
ANR	25224	Identifier	properties		25004	0					
ANR	25225	CompoundStatement		32:19:855:855	25004	1					
ANR	25226	ExpressionStatement	Z_OBJ_INC_APPLY_COUNT_P ( expr )	308:4:9525:9554	25004	0	True				
ANR	25227	CallExpression	Z_OBJ_INC_APPLY_COUNT_P ( expr )		25004	0					
ANR	25228	Callee	Z_OBJ_INC_APPLY_COUNT_P		25004	0					
ANR	25229	Identifier	Z_OBJ_INC_APPLY_COUNT_P		25004	0					
ANR	25230	ArgumentList	expr		25004	1					
ANR	25231	Argument	expr		25004	0					
ANR	25232	Identifier	expr		25004	0					
ANR	25233	ExpressionStatement	print_flat_hash ( properties )	309:4:9560:9587	25004	1	True				
ANR	25234	CallExpression	print_flat_hash ( properties )		25004	0					
ANR	25235	Callee	print_flat_hash		25004	0					
ANR	25236	Identifier	print_flat_hash		25004	0					
ANR	25237	ArgumentList	properties		25004	1					
ANR	25238	Argument	properties		25004	0					
ANR	25239	Identifier	properties		25004	0					
ANR	25240	ExpressionStatement	Z_OBJ_DEC_APPLY_COUNT_P ( expr )	310:4:9593:9622	25004	2	True				
ANR	25241	CallExpression	Z_OBJ_DEC_APPLY_COUNT_P ( expr )		25004	0					
ANR	25242	Callee	Z_OBJ_DEC_APPLY_COUNT_P		25004	0					
ANR	25243	Identifier	Z_OBJ_DEC_APPLY_COUNT_P		25004	0					
ANR	25244	ArgumentList	expr		25004	1					
ANR	25245	Argument	expr		25004	0					
ANR	25246	Identifier	expr		25004	0					
ANR	25247	ExpressionStatement	"ZEND_PUTS ( "")"" )"	312:3:9632:9646	25004	7	True				
ANR	25248	CallExpression	"ZEND_PUTS ( "")"" )"		25004	0					
ANR	25249	Callee	ZEND_PUTS		25004	0					
ANR	25250	Identifier	ZEND_PUTS		25004	0					
ANR	25251	ArgumentList	""")"""		25004	1					
ANR	25252	Argument	""")"""		25004	0					
ANR	25253	PrimaryExpression	""")"""		25004	0					
ANR	25254	BreakStatement	break ;	313:3:9651:9656	25004	8	True				
ANR	25255	Label	default :	315:2:9664:9671	25004	9	True				
ANR	25256	Identifier	default		25004	0					
ANR	25257	ExpressionStatement	zend_print_variable ( expr )	316:3:9676:9701	25004	10	True				
ANR	25258	CallExpression	zend_print_variable ( expr )		25004	0					
ANR	25259	Callee	zend_print_variable		25004	0					
ANR	25260	Identifier	zend_print_variable		25004	0					
ANR	25261	ArgumentList	expr		25004	1					
ANR	25262	Argument	expr		25004	0					
ANR	25263	Identifier	expr		25004	0					
ANR	25264	BreakStatement	break ;	317:3:9706:9711	25004	11	True				
ANR	25265	ReturnType	ZEND_API void		25004	1					
ANR	25266	Identifier	zend_print_flat_zval_r		25004	2					
ANR	25267	ParameterList	zval * expr		25004	3					
ANR	25268	Parameter	zval * expr	275:37:8641:8650	25004	0	True				
ANR	25269	ParameterType	zval *		25004	0					
ANR	25270	Identifier	expr		25004	1					
ANR	25271	CFGEntryNode	ENTRY		25004		True				
ANR	25272	CFGExitNode	EXIT		25004		True				
ANR	25273	Symbol	get_class_name		25004						
ANR	25274	Symbol	NULL		25004						
ANR	25275	Symbol	get_properties		25004						
ANR	25276	Symbol	Z_ARRVAL_P ( expr ) -> u		25004						
ANR	25277	Symbol	Z_OBJ_P		25004						
ANR	25278	Symbol	* Z_ARRVAL_P		25004						
ANR	25279	Symbol	Z_OBJPROP_P		25004						
ANR	25280	Symbol	Z_TYPE_P		25004						
ANR	25281	Symbol	ZSTR_VAL		25004						
ANR	25282	Symbol	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25004						
ANR	25283	Symbol	Z_ARRVAL_P ( expr ) -> u . v		25004						
ANR	25284	Symbol	ZEND_HASH_APPLY_PROTECTION		25004						
ANR	25285	Symbol	Z_OBJ_APPLY_COUNT_P		25004						
ANR	25286	Symbol	expr		25004						
ANR	25287	Symbol	Z_OBJ_HANDLER_P		25004						
ANR	25288	Symbol	Z_ARRVAL_P		25004						
ANR	25289	Symbol	class_name		25004						
ANR	25290	Symbol	properties		25004						
ANR	25291	Function	zend_print_zval_r	322:0:9729:9846							
ANR	25292	FunctionDef	"zend_print_zval_r (zval * expr , int indent)"		25291	0					
ANR	25293	CompoundStatement		323:0:9795:9846	25291	0					
ANR	25294	ExpressionStatement	"zend_print_zval_r_ex ( zend_write , expr , indent )"	324:1:9798:9844	25291	0	True				
ANR	25295	CallExpression	"zend_print_zval_r_ex ( zend_write , expr , indent )"		25291	0					
ANR	25296	Callee	zend_print_zval_r_ex		25291	0					
ANR	25297	Identifier	zend_print_zval_r_ex		25291	0					
ANR	25298	ArgumentList	zend_write		25291	1					
ANR	25299	Argument	zend_write		25291	0					
ANR	25300	Identifier	zend_write		25291	0					
ANR	25301	Argument	expr		25291	1					
ANR	25302	Identifier	expr		25291	0					
ANR	25303	Argument	indent		25291	2					
ANR	25304	Identifier	indent		25291	0					
ANR	25305	ReturnType	ZEND_API void		25291	1					
ANR	25306	Identifier	zend_print_zval_r		25291	2					
ANR	25307	ParameterList	"zval * expr , int indent"		25291	3					
ANR	25308	Parameter	zval * expr	322:32:9761:9770	25291	0	True				
ANR	25309	ParameterType	zval *		25291	0					
ANR	25310	Identifier	expr		25291	1					
ANR	25311	Parameter	int indent	322:44:9773:9782	25291	1	True				
ANR	25312	ParameterType	int		25291	0					
ANR	25313	Identifier	indent		25291	1					
ANR	25314	CFGEntryNode	ENTRY		25291		True				
ANR	25315	CFGExitNode	EXIT		25291		True				
ANR	25316	Symbol	indent		25291						
ANR	25317	Symbol	expr		25291						
ANR	25318	Symbol	zend_write		25291						
ANR	25319	Function	zend_print_zval_r_ex	328:0:9859:11155							
ANR	25320	FunctionDef	"zend_print_zval_r_ex (zend_write_func_t write_func , zval * expr , int indent)"		25319	0					
ANR	25321	CompoundStatement		329:0:9958:11155	25319	0					
ANR	25322	ExpressionStatement	ZVAL_DEREF ( expr )	330:1:9961:9977	25319	0	True				
ANR	25323	CallExpression	ZVAL_DEREF ( expr )		25319	0					
ANR	25324	Callee	ZVAL_DEREF		25319	0					
ANR	25325	Identifier	ZVAL_DEREF		25319	0					
ANR	25326	ArgumentList	expr		25319	1					
ANR	25327	Argument	expr		25319	0					
ANR	25328	Identifier	expr		25319	0					
ANR	25329	SwitchStatement	switch ( Z_TYPE_P ( expr ) )		25319	1					
ANR	25330	Condition	Z_TYPE_P ( expr )	331:9:9988:10001	25319	0	True				
ANR	25331	CallExpression	Z_TYPE_P ( expr )		25319	0					
ANR	25332	Callee	Z_TYPE_P		25319	0					
ANR	25333	Identifier	Z_TYPE_P		25319	0					
ANR	25334	ArgumentList	expr		25319	1					
ANR	25335	Argument	expr		25319	0					
ANR	25336	Identifier	expr		25319	0					
ANR	25337	CompoundStatement		3:25:45:45	25319	1					
ANR	25338	Label	case IS_ARRAY :	332:2:10008:10021	25319	0	True				
ANR	25339	Identifier	IS_ARRAY		25319	0					
ANR	25340	ExpressionStatement	"ZEND_PUTS_EX ( ""Array\\n"" )"	333:3:10026:10049	25319	1	True				
ANR	25341	CallExpression	"ZEND_PUTS_EX ( ""Array\\n"" )"		25319	0					
ANR	25342	Callee	ZEND_PUTS_EX		25319	0					
ANR	25343	Identifier	ZEND_PUTS_EX		25319	0					
ANR	25344	ArgumentList	"""Array\\n"""		25319	1					
ANR	25345	Argument	"""Array\\n"""		25319	0					
ANR	25346	PrimaryExpression	"""Array\\n"""		25319	0					
ANR	25347	IfStatement	if ( ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) ) && ++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount > 1 )		25319	2					
ANR	25348	Condition	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) ) && ++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount > 1	334:7:10058:10149	25319	0	True				
ANR	25349	AndExpression	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) ) && ++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount > 1		25319	0		&&			
ANR	25350	CallExpression	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) )		25319	0					
ANR	25351	Callee	ZEND_HASH_APPLY_PROTECTION		25319	0					
ANR	25352	Identifier	ZEND_HASH_APPLY_PROTECTION		25319	0					
ANR	25353	ArgumentList	Z_ARRVAL_P ( expr )		25319	1					
ANR	25354	Argument	Z_ARRVAL_P ( expr )		25319	0					
ANR	25355	CallExpression	Z_ARRVAL_P ( expr )		25319	0					
ANR	25356	Callee	Z_ARRVAL_P		25319	0					
ANR	25357	Identifier	Z_ARRVAL_P		25319	0					
ANR	25358	ArgumentList	expr		25319	1					
ANR	25359	Argument	expr		25319	0					
ANR	25360	Identifier	expr		25319	0					
ANR	25361	RelationalExpression	++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount > 1		25319	1		>			
ANR	25362	UnaryExpression	++ Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25319	0					
ANR	25363	IncDec	++		25319	0					
ANR	25364	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25319	1					
ANR	25365	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v		25319	0					
ANR	25366	PtrMemberAccess	Z_ARRVAL_P ( expr ) -> u		25319	0					
ANR	25367	CallExpression	Z_ARRVAL_P ( expr )		25319	0					
ANR	25368	Callee	Z_ARRVAL_P		25319	0					
ANR	25369	Identifier	Z_ARRVAL_P		25319	0					
ANR	25370	ArgumentList	expr		25319	1					
ANR	25371	Argument	expr		25319	0					
ANR	25372	Identifier	expr		25319	0					
ANR	25373	Identifier	u		25319	1					
ANR	25374	Identifier	v		25319	1					
ANR	25375	Identifier	nApplyCount		25319	1					
ANR	25376	PrimaryExpression	1		25319	1					
ANR	25377	CompoundStatement		7:46:193:193	25319	1					
ANR	25378	ExpressionStatement	"ZEND_PUTS_EX ( "" *RECURSION*"" )"	336:4:10158:10186	25319	0	True				
ANR	25379	CallExpression	"ZEND_PUTS_EX ( "" *RECURSION*"" )"		25319	0					
ANR	25380	Callee	ZEND_PUTS_EX		25319	0					
ANR	25381	Identifier	ZEND_PUTS_EX		25319	0					
ANR	25382	ArgumentList	""" *RECURSION*"""		25319	1					
ANR	25383	Argument	""" *RECURSION*"""		25319	0					
ANR	25384	PrimaryExpression	""" *RECURSION*"""		25319	0					
ANR	25385	ExpressionStatement	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount --	337:4:10192:10227	25319	1	True				
ANR	25386	PostIncDecOperationExpression	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount --		25319	0					
ANR	25387	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25319	0					
ANR	25388	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v		25319	0					
ANR	25389	PtrMemberAccess	Z_ARRVAL_P ( expr ) -> u		25319	0					
ANR	25390	CallExpression	Z_ARRVAL_P ( expr )		25319	0					
ANR	25391	Callee	Z_ARRVAL_P		25319	0					
ANR	25392	Identifier	Z_ARRVAL_P		25319	0					
ANR	25393	ArgumentList	expr		25319	1					
ANR	25394	Argument	expr		25319	0					
ANR	25395	Identifier	expr		25319	0					
ANR	25396	Identifier	u		25319	1					
ANR	25397	Identifier	v		25319	1					
ANR	25398	Identifier	nApplyCount		25319	1					
ANR	25399	IncDec	--		25319	1					
ANR	25400	ReturnStatement	return ;	338:4:10233:10239	25319	2	True				
ANR	25401	ExpressionStatement	"print_hash ( write_func , Z_ARRVAL_P ( expr ) , indent , 0 )"	340:3:10249:10300	25319	3	True				
ANR	25402	CallExpression	"print_hash ( write_func , Z_ARRVAL_P ( expr ) , indent , 0 )"		25319	0					
ANR	25403	Callee	print_hash		25319	0					
ANR	25404	Identifier	print_hash		25319	0					
ANR	25405	ArgumentList	write_func		25319	1					
ANR	25406	Argument	write_func		25319	0					
ANR	25407	Identifier	write_func		25319	0					
ANR	25408	Argument	Z_ARRVAL_P ( expr )		25319	1					
ANR	25409	CallExpression	Z_ARRVAL_P ( expr )		25319	0					
ANR	25410	Callee	Z_ARRVAL_P		25319	0					
ANR	25411	Identifier	Z_ARRVAL_P		25319	0					
ANR	25412	ArgumentList	expr		25319	1					
ANR	25413	Argument	expr		25319	0					
ANR	25414	Identifier	expr		25319	0					
ANR	25415	Argument	indent		25319	2					
ANR	25416	Identifier	indent		25319	0					
ANR	25417	Argument	0		25319	3					
ANR	25418	PrimaryExpression	0		25319	0					
ANR	25419	IfStatement	if ( ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) ) )		25319	4					
ANR	25420	Condition	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) )	341:7:10309:10352	25319	0	True				
ANR	25421	CallExpression	ZEND_HASH_APPLY_PROTECTION ( Z_ARRVAL_P ( expr ) )		25319	0					
ANR	25422	Callee	ZEND_HASH_APPLY_PROTECTION		25319	0					
ANR	25423	Identifier	ZEND_HASH_APPLY_PROTECTION		25319	0					
ANR	25424	ArgumentList	Z_ARRVAL_P ( expr )		25319	1					
ANR	25425	Argument	Z_ARRVAL_P ( expr )		25319	0					
ANR	25426	CallExpression	Z_ARRVAL_P ( expr )		25319	0					
ANR	25427	Callee	Z_ARRVAL_P		25319	0					
ANR	25428	Identifier	Z_ARRVAL_P		25319	0					
ANR	25429	ArgumentList	expr		25319	1					
ANR	25430	Argument	expr		25319	0					
ANR	25431	Identifier	expr		25319	0					
ANR	25432	CompoundStatement		13:53:396:396	25319	1					
ANR	25433	ExpressionStatement	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount --	342:4:10361:10396	25319	0	True				
ANR	25434	PostIncDecOperationExpression	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount --		25319	0					
ANR	25435	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25319	0					
ANR	25436	MemberAccess	Z_ARRVAL_P ( expr ) -> u . v		25319	0					
ANR	25437	PtrMemberAccess	Z_ARRVAL_P ( expr ) -> u		25319	0					
ANR	25438	CallExpression	Z_ARRVAL_P ( expr )		25319	0					
ANR	25439	Callee	Z_ARRVAL_P		25319	0					
ANR	25440	Identifier	Z_ARRVAL_P		25319	0					
ANR	25441	ArgumentList	expr		25319	1					
ANR	25442	Argument	expr		25319	0					
ANR	25443	Identifier	expr		25319	0					
ANR	25444	Identifier	u		25319	1					
ANR	25445	Identifier	v		25319	1					
ANR	25446	Identifier	nApplyCount		25319	1					
ANR	25447	IncDec	--		25319	1					
ANR	25448	BreakStatement	break ;	344:3:10406:10411	25319	5	True				
ANR	25449	Label	case IS_OBJECT :	345:2:10415:10429	25319	6	True				
ANR	25450	Identifier	IS_OBJECT		25319	0					
ANR	25451	CompoundStatement		22:4:526:604	25319	7					
ANR	25452	IdentifierDeclStatement	HashTable * properties ;	347:4:10440:10461	25319	0	True				
ANR	25453	IdentifierDecl	* properties		25319	0					
ANR	25454	IdentifierDeclType	HashTable *		25319	0					
ANR	25455	Identifier	properties		25319	1					
ANR	25456	IdentifierDeclStatement	int is_temp ;	348:4:10467:10478	25319	1	True				
ANR	25457	IdentifierDecl	is_temp		25319	0					
ANR	25458	IdentifierDeclType	int		25319	0					
ANR	25459	Identifier	is_temp		25319	1					
ANR	25460	IdentifierDeclStatement	"zend_string * class_name = Z_OBJ_HANDLER_P ( expr , get_class_name ) ( Z_OBJ_P ( expr ) ) ;"	350:4:10485:10563	25319	2	True				
ANR	25461	IdentifierDecl	"* class_name = Z_OBJ_HANDLER_P ( expr , get_class_name ) ( Z_OBJ_P ( expr ) )"		25319	0					
ANR	25462	IdentifierDeclType	zend_string *		25319	0					
ANR	25463	Identifier	class_name		25319	1					
ANR	25464	AssignmentExpression	"* class_name = Z_OBJ_HANDLER_P ( expr , get_class_name ) ( Z_OBJ_P ( expr ) )"		25319	2		=			
ANR	25465	Identifier	class_name		25319	0					
ANR	25466	CallExpression	"Z_OBJ_HANDLER_P ( expr , get_class_name ) ( Z_OBJ_P ( expr ) )"		25319	1					
ANR	25467	Callee	"Z_OBJ_HANDLER_P ( expr , get_class_name )"		25319	0					
ANR	25468	CallExpression	"Z_OBJ_HANDLER_P ( expr , get_class_name )"		25319	0					
ANR	25469	Callee	Z_OBJ_HANDLER_P		25319	0					
ANR	25470	Identifier	Z_OBJ_HANDLER_P		25319	0					
ANR	25471	ArgumentList	expr		25319	1					
ANR	25472	Argument	expr		25319	0					
ANR	25473	Identifier	expr		25319	0					
ANR	25474	Argument	get_class_name		25319	1					
ANR	25475	Identifier	get_class_name		25319	0					
ANR	25476	ArgumentList	Z_OBJ_P ( expr )		25319	1					
ANR	25477	Argument	Z_OBJ_P ( expr )		25319	0					
ANR	25478	CallExpression	Z_OBJ_P ( expr )		25319	0					
ANR	25479	Callee	Z_OBJ_P		25319	0					
ANR	25480	Identifier	Z_OBJ_P		25319	0					
ANR	25481	ArgumentList	expr		25319	1					
ANR	25482	Argument	expr		25319	0					
ANR	25483	Identifier	expr		25319	0					
ANR	25484	ExpressionStatement	ZEND_PUTS_EX ( ZSTR_VAL ( class_name ) )	351:4:10569:10603	25319	3	True				
ANR	25485	CallExpression	ZEND_PUTS_EX ( ZSTR_VAL ( class_name ) )		25319	0					
ANR	25486	Callee	ZEND_PUTS_EX		25319	0					
ANR	25487	Identifier	ZEND_PUTS_EX		25319	0					
ANR	25488	ArgumentList	ZSTR_VAL ( class_name )		25319	1					
ANR	25489	Argument	ZSTR_VAL ( class_name )		25319	0					
ANR	25490	CallExpression	ZSTR_VAL ( class_name )		25319	0					
ANR	25491	Callee	ZSTR_VAL		25319	0					
ANR	25492	Identifier	ZSTR_VAL		25319	0					
ANR	25493	ArgumentList	class_name		25319	1					
ANR	25494	Argument	class_name		25319	0					
ANR	25495	Identifier	class_name		25319	0					
ANR	25496	ExpressionStatement	zend_string_release ( class_name )	352:4:10609:10640	25319	4	True				
ANR	25497	CallExpression	zend_string_release ( class_name )		25319	0					
ANR	25498	Callee	zend_string_release		25319	0					
ANR	25499	Identifier	zend_string_release		25319	0					
ANR	25500	ArgumentList	class_name		25319	1					
ANR	25501	Argument	class_name		25319	0					
ANR	25502	Identifier	class_name		25319	0					
ANR	25503	ExpressionStatement	"ZEND_PUTS_EX ( "" Object\\n"" )"	354:4:10647:10672	25319	5	True				
ANR	25504	CallExpression	"ZEND_PUTS_EX ( "" Object\\n"" )"		25319	0					
ANR	25505	Callee	ZEND_PUTS_EX		25319	0					
ANR	25506	Identifier	ZEND_PUTS_EX		25319	0					
ANR	25507	ArgumentList	""" Object\\n"""		25319	1					
ANR	25508	Argument	""" Object\\n"""		25319	0					
ANR	25509	PrimaryExpression	""" Object\\n"""		25319	0					
ANR	25510	IfStatement	if ( Z_OBJ_APPLY_COUNT_P ( expr ) > 0 )		25319	6					
ANR	25511	Condition	Z_OBJ_APPLY_COUNT_P ( expr ) > 0	355:8:10682:10710	25319	0	True				
ANR	25512	RelationalExpression	Z_OBJ_APPLY_COUNT_P ( expr ) > 0		25319	0		>			
ANR	25513	CallExpression	Z_OBJ_APPLY_COUNT_P ( expr )		25319	0					
ANR	25514	Callee	Z_OBJ_APPLY_COUNT_P		25319	0					
ANR	25515	Identifier	Z_OBJ_APPLY_COUNT_P		25319	0					
ANR	25516	ArgumentList	expr		25319	1					
ANR	25517	Argument	expr		25319	0					
ANR	25518	Identifier	expr		25319	0					
ANR	25519	PrimaryExpression	0		25319	1					
ANR	25520	CompoundStatement		27:39:754:754	25319	1					
ANR	25521	ExpressionStatement	"ZEND_PUTS_EX ( "" *RECURSION*"" )"	356:5:10720:10748	25319	0	True				
ANR	25522	CallExpression	"ZEND_PUTS_EX ( "" *RECURSION*"" )"		25319	0					
ANR	25523	Callee	ZEND_PUTS_EX		25319	0					
ANR	25524	Identifier	ZEND_PUTS_EX		25319	0					
ANR	25525	ArgumentList	""" *RECURSION*"""		25319	1					
ANR	25526	Argument	""" *RECURSION*"""		25319	0					
ANR	25527	PrimaryExpression	""" *RECURSION*"""		25319	0					
ANR	25528	ReturnStatement	return ;	357:5:10755:10761	25319	1	True				
ANR	25529	IfStatement	"if ( ( properties = Z_OBJDEBUG_P ( expr , is_temp ) ) == NULL )"		25319	7					
ANR	25530	Condition	"( properties = Z_OBJDEBUG_P ( expr , is_temp ) ) == NULL"	359:8:10777:10826	25319	0	True				
ANR	25531	EqualityExpression	"( properties = Z_OBJDEBUG_P ( expr , is_temp ) ) == NULL"		25319	0		==			
ANR	25532	AssignmentExpression	"properties = Z_OBJDEBUG_P ( expr , is_temp )"		25319	0		=			
ANR	25533	Identifier	properties		25319	0					
ANR	25534	CallExpression	"Z_OBJDEBUG_P ( expr , is_temp )"		25319	1					
ANR	25535	Callee	Z_OBJDEBUG_P		25319	0					
ANR	25536	Identifier	Z_OBJDEBUG_P		25319	0					
ANR	25537	ArgumentList	expr		25319	1					
ANR	25538	Argument	expr		25319	0					
ANR	25539	Identifier	expr		25319	0					
ANR	25540	Argument	is_temp		25319	1					
ANR	25541	Identifier	is_temp		25319	0					
ANR	25542	Identifier	NULL		25319	1					
ANR	25543	CompoundStatement		31:60:870:870	25319	1					
ANR	25544	BreakStatement	break ;	360:5:10836:10841	25319	0	True				
ANR	25545	ExpressionStatement	Z_OBJ_INC_APPLY_COUNT_P ( expr )	363:4:10854:10883	25319	8	True				
ANR	25546	CallExpression	Z_OBJ_INC_APPLY_COUNT_P ( expr )		25319	0					
ANR	25547	Callee	Z_OBJ_INC_APPLY_COUNT_P		25319	0					
ANR	25548	Identifier	Z_OBJ_INC_APPLY_COUNT_P		25319	0					
ANR	25549	ArgumentList	expr		25319	1					
ANR	25550	Argument	expr		25319	0					
ANR	25551	Identifier	expr		25319	0					
ANR	25552	ExpressionStatement	"print_hash ( write_func , properties , indent , 1 )"	364:4:10889:10934	25319	9	True				
ANR	25553	CallExpression	"print_hash ( write_func , properties , indent , 1 )"		25319	0					
ANR	25554	Callee	print_hash		25319	0					
ANR	25555	Identifier	print_hash		25319	0					
ANR	25556	ArgumentList	write_func		25319	1					
ANR	25557	Argument	write_func		25319	0					
ANR	25558	Identifier	write_func		25319	0					
ANR	25559	Argument	properties		25319	1					
ANR	25560	Identifier	properties		25319	0					
ANR	25561	Argument	indent		25319	2					
ANR	25562	Identifier	indent		25319	0					
ANR	25563	Argument	1		25319	3					
ANR	25564	PrimaryExpression	1		25319	0					
ANR	25565	ExpressionStatement	Z_OBJ_DEC_APPLY_COUNT_P ( expr )	365:4:10940:10969	25319	10	True				
ANR	25566	CallExpression	Z_OBJ_DEC_APPLY_COUNT_P ( expr )		25319	0					
ANR	25567	Callee	Z_OBJ_DEC_APPLY_COUNT_P		25319	0					
ANR	25568	Identifier	Z_OBJ_DEC_APPLY_COUNT_P		25319	0					
ANR	25569	ArgumentList	expr		25319	1					
ANR	25570	Argument	expr		25319	0					
ANR	25571	Identifier	expr		25319	0					
ANR	25572	IfStatement	if ( is_temp )		25319	11					
ANR	25573	Condition	is_temp	367:8:10980:10986	25319	0	True				
ANR	25574	Identifier	is_temp		25319	0					
ANR	25575	CompoundStatement		39:17:1030:1030	25319	1					
ANR	25576	ExpressionStatement	zend_hash_destroy ( properties )	368:5:10996:11025	25319	0	True				
ANR	25577	CallExpression	zend_hash_destroy ( properties )		25319	0					
ANR	25578	Callee	zend_hash_destroy		25319	0					
ANR	25579	Identifier	zend_hash_destroy		25319	0					
ANR	25580	ArgumentList	properties		25319	1					
ANR	25581	Argument	properties		25319	0					
ANR	25582	Identifier	properties		25319	0					
ANR	25583	ExpressionStatement	FREE_HASHTABLE ( properties )	369:5:11032:11058	25319	1	True				
ANR	25584	CallExpression	FREE_HASHTABLE ( properties )		25319	0					
ANR	25585	Callee	FREE_HASHTABLE		25319	0					
ANR	25586	Identifier	FREE_HASHTABLE		25319	0					
ANR	25587	ArgumentList	properties		25319	1					
ANR	25588	Argument	properties		25319	0					
ANR	25589	Identifier	properties		25319	0					
ANR	25590	BreakStatement	break ;	371:4:11070:11075	25319	12	True				
ANR	25591	Label	default :	373:2:11084:11091	25319	8	True				
ANR	25592	Identifier	default		25319	0					
ANR	25593	ExpressionStatement	"zend_print_zval_ex ( write_func , expr , indent )"	374:3:11096:11140	25319	9	True				
ANR	25594	CallExpression	"zend_print_zval_ex ( write_func , expr , indent )"		25319	0					
ANR	25595	Callee	zend_print_zval_ex		25319	0					
ANR	25596	Identifier	zend_print_zval_ex		25319	0					
ANR	25597	ArgumentList	write_func		25319	1					
ANR	25598	Argument	write_func		25319	0					
ANR	25599	Identifier	write_func		25319	0					
ANR	25600	Argument	expr		25319	1					
ANR	25601	Identifier	expr		25319	0					
ANR	25602	Argument	indent		25319	2					
ANR	25603	Identifier	indent		25319	0					
ANR	25604	BreakStatement	break ;	375:3:11145:11150	25319	10	True				
ANR	25605	ReturnType	ZEND_API void		25319	1					
ANR	25606	Identifier	zend_print_zval_r_ex		25319	2					
ANR	25607	ParameterList	"zend_write_func_t write_func , zval * expr , int indent"		25319	3					
ANR	25608	Parameter	zend_write_func_t write_func	328:35:9894:9921	25319	0	True				
ANR	25609	ParameterType	zend_write_func_t		25319	0					
ANR	25610	Identifier	write_func		25319	1					
ANR	25611	Parameter	zval * expr	328:65:9924:9933	25319	1	True				
ANR	25612	ParameterType	zval *		25319	0					
ANR	25613	Identifier	expr		25319	1					
ANR	25614	Parameter	int indent	328:77:9936:9945	25319	2	True				
ANR	25615	ParameterType	int		25319	0					
ANR	25616	Identifier	indent		25319	1					
ANR	25617	CFGEntryNode	ENTRY		25319		True				
ANR	25618	CFGExitNode	EXIT		25319		True				
ANR	25619	Symbol	get_class_name		25319						
ANR	25620	Symbol	NULL		25319						
ANR	25621	Symbol	indent		25319						
ANR	25622	Symbol	Z_ARRVAL_P ( expr ) -> u		25319						
ANR	25623	Symbol	Z_OBJ_P		25319						
ANR	25624	Symbol	* Z_ARRVAL_P		25319						
ANR	25625	Symbol	write_func		25319						
ANR	25626	Symbol	Z_TYPE_P		25319						
ANR	25627	Symbol	ZSTR_VAL		25319						
ANR	25628	Symbol	Z_ARRVAL_P ( expr ) -> u . v . nApplyCount		25319						
ANR	25629	Symbol	Z_ARRVAL_P ( expr ) -> u . v		25319						
ANR	25630	Symbol	is_temp		25319						
ANR	25631	Symbol	Z_OBJDEBUG_P		25319						
ANR	25632	Symbol	ZEND_HASH_APPLY_PROTECTION		25319						
ANR	25633	Symbol	Z_OBJ_APPLY_COUNT_P		25319						
ANR	25634	Symbol	expr		25319						
ANR	25635	Symbol	Z_OBJ_HANDLER_P		25319						
ANR	25636	Symbol	Z_ARRVAL_P		25319						
ANR	25637	Symbol	class_name		25319						
ANR	25638	Symbol	properties		25319						
ANR	25639	Function	zend_fopen_wrapper	380:0:11168:11381							
ANR	25640	FunctionDef	"zend_fopen_wrapper (const char * filename , zend_string * * opened_path)"		25639	0					
ANR	25641	CompoundStatement		381:0:11259:11381	25639	0					
ANR	25642	IfStatement	if ( opened_path )		25639	0					
ANR	25643	Condition	opened_path	382:5:11266:11276	25639	0	True				
ANR	25644	Identifier	opened_path		25639	0					
ANR	25645	CompoundStatement		2:18:19:19	25639	1					
ANR	25646	ExpressionStatement	"* opened_path = zend_string_init ( filename , strlen ( filename ) , 0 )"	383:2:11283:11345	25639	0	True				
ANR	25647	AssignmentExpression	"* opened_path = zend_string_init ( filename , strlen ( filename ) , 0 )"		25639	0		=			
ANR	25648	UnaryOperationExpression	* opened_path		25639	0					
ANR	25649	UnaryOperator	*		25639	0					
ANR	25650	Identifier	opened_path		25639	1					
ANR	25651	CallExpression	"zend_string_init ( filename , strlen ( filename ) , 0 )"		25639	1					
ANR	25652	Callee	zend_string_init		25639	0					
ANR	25653	Identifier	zend_string_init		25639	0					
ANR	25654	ArgumentList	filename		25639	1					
ANR	25655	Argument	filename		25639	0					
ANR	25656	Identifier	filename		25639	0					
ANR	25657	Argument	strlen ( filename )		25639	1					
ANR	25658	CallExpression	strlen ( filename )		25639	0					
ANR	25659	Callee	strlen		25639	0					
ANR	25660	Identifier	strlen		25639	0					
ANR	25661	ArgumentList	filename		25639	1					
ANR	25662	Argument	filename		25639	0					
ANR	25663	Identifier	filename		25639	0					
ANR	25664	Argument	0		25639	2					
ANR	25665	PrimaryExpression	0		25639	0					
ANR	25666	ReturnStatement	"return fopen ( filename , ""rb"" ) ;"	385:1:11351:11379	25639	1	True				
ANR	25667	CallExpression	"fopen ( filename , ""rb"" )"		25639	0					
ANR	25668	Callee	fopen		25639	0					
ANR	25669	Identifier	fopen		25639	0					
ANR	25670	ArgumentList	filename		25639	1					
ANR	25671	Argument	filename		25639	0					
ANR	25672	Identifier	filename		25639	0					
ANR	25673	Argument	"""rb"""		25639	1					
ANR	25674	PrimaryExpression	"""rb"""		25639	0					
ANR	25675	ReturnType	static FILE *		25639	1					
ANR	25676	Identifier	zend_fopen_wrapper		25639	2					
ANR	25677	ParameterList	"const char * filename , zend_string * * opened_path"		25639	3					
ANR	25678	Parameter	const char * filename	380:32:11200:11219	25639	0	True				
ANR	25679	ParameterType	const char *		25639	0					
ANR	25680	Identifier	filename		25639	1					
ANR	25681	Parameter	zend_string * * opened_path	380:54:11222:11246	25639	1	True				
ANR	25682	ParameterType	zend_string * *		25639	0					
ANR	25683	Identifier	opened_path		25639	1					
ANR	25684	CFGEntryNode	ENTRY		25639		True				
ANR	25685	CFGExitNode	EXIT		25639		True				
ANR	25686	Symbol	zend_string_init		25639						
ANR	25687	Symbol	strlen		25639						
ANR	25688	Symbol	fopen		25639						
ANR	25689	Symbol	filename		25639						
ANR	25690	Symbol	* opened_path		25639						
ANR	25691	Symbol	opened_path		25639						
ANR	25692	DeclStmt									
ANR	25693	Decl							zend_bool	zend_bool	short_tags_default
ANR	25694	DeclStmt									
ANR	25695	Decl							uint32_t	uint32_t	compiler_options_default
ANR	25696	Function	zend_set_default_compile_time_values	397:0:11617:11807							
ANR	25697	FunctionDef	zend_set_default_compile_time_values ()		25696	0					
ANR	25698	CompoundStatement		398:0:11682:11807	25696	0					
ANR	25699	ExpressionStatement	CG ( short_tags ) = short_tags_default	400:1:11720:11755	25696	0	True				
ANR	25700	AssignmentExpression	CG ( short_tags ) = short_tags_default		25696	0		=			
ANR	25701	CallExpression	CG ( short_tags )		25696	0					
ANR	25702	Callee	CG		25696	0					
ANR	25703	Identifier	CG		25696	0					
ANR	25704	ArgumentList	short_tags		25696	1					
ANR	25705	Argument	short_tags		25696	0					
ANR	25706	Identifier	short_tags		25696	0					
ANR	25707	Identifier	short_tags_default		25696	1					
ANR	25708	ExpressionStatement	CG ( compiler_options ) = compiler_options_default	401:1:11758:11805	25696	1	True				
ANR	25709	AssignmentExpression	CG ( compiler_options ) = compiler_options_default		25696	0		=			
ANR	25710	CallExpression	CG ( compiler_options )		25696	0					
ANR	25711	Callee	CG		25696	0					
ANR	25712	Identifier	CG		25696	0					
ANR	25713	ArgumentList	compiler_options		25696	1					
ANR	25714	Argument	compiler_options		25696	0					
ANR	25715	Identifier	compiler_options		25696	0					
ANR	25716	Identifier	compiler_options_default		25696	1					
ANR	25717	ReturnType	static void		25696	1					
ANR	25718	Identifier	zend_set_default_compile_time_values		25696	2					
ANR	25719	ParameterList			25696	3					
ANR	25720	CFGEntryNode	ENTRY		25696		True				
ANR	25721	CFGExitNode	EXIT		25696		True				
ANR	25722	Symbol	compiler_options		25696						
ANR	25723	Symbol	CG		25696						
ANR	25724	Symbol	short_tags		25696						
ANR	25725	Symbol	short_tags_default		25696						
ANR	25726	Symbol	compiler_options_default		25696						
ANR	25727	Function	zend_get_windows_version_info	406:0:11838:12122							
ANR	25728	FunctionDef	zend_get_windows_version_info (OSVERSIONINFOEX * osvi)		25727	0					
ANR	25729	CompoundStatement		407:0:11913:12122	25727	0					
ANR	25730	ExpressionStatement	"ZeroMemory ( osvi , sizeof ( OSVERSIONINFOEX ) )"	408:1:11916:11957	25727	0	True				
ANR	25731	CallExpression	"ZeroMemory ( osvi , sizeof ( OSVERSIONINFOEX ) )"		25727	0					
ANR	25732	Callee	ZeroMemory		25727	0					
ANR	25733	Identifier	ZeroMemory		25727	0					
ANR	25734	ArgumentList	osvi		25727	1					
ANR	25735	Argument	osvi		25727	0					
ANR	25736	Identifier	osvi		25727	0					
ANR	25737	Argument	sizeof ( OSVERSIONINFOEX )		25727	1					
ANR	25738	SizeofExpression	sizeof ( OSVERSIONINFOEX )		25727	0					
ANR	25739	Sizeof	sizeof		25727	0					
ANR	25740	SizeofOperand	OSVERSIONINFOEX		25727	1					
ANR	25741	ExpressionStatement	osvi -> dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )	409:1:11960:12011	25727	1	True				
ANR	25742	AssignmentExpression	osvi -> dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )		25727	0		=			
ANR	25743	PtrMemberAccess	osvi -> dwOSVersionInfoSize		25727	0					
ANR	25744	Identifier	osvi		25727	0					
ANR	25745	Identifier	dwOSVersionInfoSize		25727	1					
ANR	25746	SizeofExpression	sizeof ( OSVERSIONINFOEX )		25727	1					
ANR	25747	Sizeof	sizeof		25727	0					
ANR	25748	SizeofOperand	OSVERSIONINFOEX		25727	1					
ANR	25749	IfStatement	if ( ! GetVersionEx ( ( OSVERSIONINFO * ) osvi ) )		25727	2					
ANR	25750	Condition	! GetVersionEx ( ( OSVERSIONINFO * ) osvi )	410:4:12017:12053	25727	0	True				
ANR	25751	UnaryOperationExpression	! GetVersionEx ( ( OSVERSIONINFO * ) osvi )		25727	0					
ANR	25752	UnaryOperator	!		25727	0					
ANR	25753	CallExpression	GetVersionEx ( ( OSVERSIONINFO * ) osvi )		25727	1					
ANR	25754	Callee	GetVersionEx		25727	0					
ANR	25755	Identifier	GetVersionEx		25727	0					
ANR	25756	ArgumentList	( OSVERSIONINFO * ) osvi		25727	1					
ANR	25757	Argument	( OSVERSIONINFO * ) osvi		25727	0					
ANR	25758	CastExpression	( OSVERSIONINFO * ) osvi		25727	0					
ANR	25759	CastTarget	OSVERSIONINFO *		25727	0					
ANR	25760	Identifier	osvi		25727	1					
ANR	25761	CompoundStatement		4:43:142:142	25727	1					
ANR	25762	ExpressionStatement	ZEND_ASSERT ( 0 )	411:2:12060:12074	25727	0	True				
ANR	25763	CallExpression	ZEND_ASSERT ( 0 )		25727	0					
ANR	25764	Callee	ZEND_ASSERT		25727	0					
ANR	25765	Identifier	ZEND_ASSERT		25727	0					
ANR	25766	ArgumentList	0		25727	1					
ANR	25767	Argument	0		25727	0					
ANR	25768	PrimaryExpression	0		25727	0					
ANR	25769	ReturnType	static void		25727	1					
ANR	25770	Identifier	zend_get_windows_version_info		25727	2					
ANR	25771	ParameterList	OSVERSIONINFOEX * osvi		25727	3					
ANR	25772	Parameter	OSVERSIONINFOEX * osvi	406:42:11880:11900	25727	0	True				
ANR	25773	ParameterType	OSVERSIONINFOEX *		25727	0					
ANR	25774	Identifier	osvi		25727	1					
ANR	25775	CFGEntryNode	ENTRY		25727		True				
ANR	25776	CFGExitNode	EXIT		25727		True				
ANR	25777	Symbol	osvi		25727						
ANR	25778	Symbol	osvi -> dwOSVersionInfoSize		25727						
ANR	25779	Symbol	* osvi		25727						
ANR	25780	Symbol	GetVersionEx		25727						
ANR	25781	Function	zend_init_exception_op	417:0:12142:12951							
ANR	25782	FunctionDef	zend_init_exception_op ()		25781	0					
ANR	25783	CompoundStatement		418:0:12193:12951	25781	0					
ANR	25784	ExpressionStatement	"memset ( EG ( exception_op ) , 0 , sizeof ( EG ( exception_op ) ) )"	419:1:12196:12249	25781	0	True				
ANR	25785	CallExpression	"memset ( EG ( exception_op ) , 0 , sizeof ( EG ( exception_op ) ) )"		25781	0					
ANR	25786	Callee	memset		25781	0					
ANR	25787	Identifier	memset		25781	0					
ANR	25788	ArgumentList	EG ( exception_op )		25781	1					
ANR	25789	Argument	EG ( exception_op )		25781	0					
ANR	25790	CallExpression	EG ( exception_op )		25781	0					
ANR	25791	Callee	EG		25781	0					
ANR	25792	Identifier	EG		25781	0					
ANR	25793	ArgumentList	exception_op		25781	1					
ANR	25794	Argument	exception_op		25781	0					
ANR	25795	Identifier	exception_op		25781	0					
ANR	25796	Argument	0		25781	1					
ANR	25797	PrimaryExpression	0		25781	0					
ANR	25798	Argument	sizeof ( EG ( exception_op ) )		25781	2					
ANR	25799	SizeofExpression	sizeof ( EG ( exception_op ) )		25781	0					
ANR	25800	Sizeof	sizeof		25781	0					
ANR	25801	CallExpression	EG ( exception_op )		25781	1					
ANR	25802	Callee	EG		25781	0					
ANR	25803	Identifier	EG		25781	0					
ANR	25804	ArgumentList	exception_op		25781	1					
ANR	25805	Argument	exception_op		25781	0					
ANR	25806	Identifier	exception_op		25781	0					
ANR	25807	ExpressionStatement	EG ( exception_op ) [ 0 ] . opcode = ZEND_HANDLE_EXCEPTION	420:1:12252:12302	25781	1	True				
ANR	25808	AssignmentExpression	EG ( exception_op ) [ 0 ] . opcode = ZEND_HANDLE_EXCEPTION		25781	0		=			
ANR	25809	MemberAccess	EG ( exception_op ) [ 0 ] . opcode		25781	0					
ANR	25810	ArrayIndexing	EG ( exception_op ) [ 0 ]		25781	0					
ANR	25811	CallExpression	EG ( exception_op )		25781	0					
ANR	25812	Callee	EG		25781	0					
ANR	25813	Identifier	EG		25781	0					
ANR	25814	ArgumentList	exception_op		25781	1					
ANR	25815	Argument	exception_op		25781	0					
ANR	25816	Identifier	exception_op		25781	0					
ANR	25817	PrimaryExpression	0		25781	1					
ANR	25818	Identifier	opcode		25781	1					
ANR	25819	Identifier	ZEND_HANDLE_EXCEPTION		25781	1					
ANR	25820	ExpressionStatement	EG ( exception_op ) [ 0 ] . op1_type = IS_UNUSED	421:1:12305:12345	25781	2	True				
ANR	25821	AssignmentExpression	EG ( exception_op ) [ 0 ] . op1_type = IS_UNUSED		25781	0		=			
ANR	25822	MemberAccess	EG ( exception_op ) [ 0 ] . op1_type		25781	0					
ANR	25823	ArrayIndexing	EG ( exception_op ) [ 0 ]		25781	0					
ANR	25824	CallExpression	EG ( exception_op )		25781	0					
ANR	25825	Callee	EG		25781	0					
ANR	25826	Identifier	EG		25781	0					
ANR	25827	ArgumentList	exception_op		25781	1					
ANR	25828	Argument	exception_op		25781	0					
ANR	25829	Identifier	exception_op		25781	0					
ANR	25830	PrimaryExpression	0		25781	1					
ANR	25831	Identifier	op1_type		25781	1					
ANR	25832	Identifier	IS_UNUSED		25781	1					
ANR	25833	ExpressionStatement	EG ( exception_op ) [ 0 ] . op2_type = IS_UNUSED	422:1:12348:12388	25781	3	True				
ANR	25834	AssignmentExpression	EG ( exception_op ) [ 0 ] . op2_type = IS_UNUSED		25781	0		=			
ANR	25835	MemberAccess	EG ( exception_op ) [ 0 ] . op2_type		25781	0					
ANR	25836	ArrayIndexing	EG ( exception_op ) [ 0 ]		25781	0					
ANR	25837	CallExpression	EG ( exception_op )		25781	0					
ANR	25838	Callee	EG		25781	0					
ANR	25839	Identifier	EG		25781	0					
ANR	25840	ArgumentList	exception_op		25781	1					
ANR	25841	Argument	exception_op		25781	0					
ANR	25842	Identifier	exception_op		25781	0					
ANR	25843	PrimaryExpression	0		25781	1					
ANR	25844	Identifier	op2_type		25781	1					
ANR	25845	Identifier	IS_UNUSED		25781	1					
ANR	25846	ExpressionStatement	EG ( exception_op ) [ 0 ] . result_type = IS_UNUSED	423:1:12391:12434	25781	4	True				
ANR	25847	AssignmentExpression	EG ( exception_op ) [ 0 ] . result_type = IS_UNUSED		25781	0		=			
ANR	25848	MemberAccess	EG ( exception_op ) [ 0 ] . result_type		25781	0					
ANR	25849	ArrayIndexing	EG ( exception_op ) [ 0 ]		25781	0					
ANR	25850	CallExpression	EG ( exception_op )		25781	0					
ANR	25851	Callee	EG		25781	0					
ANR	25852	Identifier	EG		25781	0					
ANR	25853	ArgumentList	exception_op		25781	1					
ANR	25854	Argument	exception_op		25781	0					
ANR	25855	Identifier	exception_op		25781	0					
ANR	25856	PrimaryExpression	0		25781	1					
ANR	25857	Identifier	result_type		25781	1					
ANR	25858	Identifier	IS_UNUSED		25781	1					
ANR	25859	ExpressionStatement	ZEND_VM_SET_OPCODE_HANDLER ( EG ( exception_op ) )	424:1:12437:12481	25781	5	True				
ANR	25860	CallExpression	ZEND_VM_SET_OPCODE_HANDLER ( EG ( exception_op ) )		25781	0					
ANR	25861	Callee	ZEND_VM_SET_OPCODE_HANDLER		25781	0					
ANR	25862	Identifier	ZEND_VM_SET_OPCODE_HANDLER		25781	0					
ANR	25863	ArgumentList	EG ( exception_op )		25781	1					
ANR	25864	Argument	EG ( exception_op )		25781	0					
ANR	25865	CallExpression	EG ( exception_op )		25781	0					
ANR	25866	Callee	EG		25781	0					
ANR	25867	Identifier	EG		25781	0					
ANR	25868	ArgumentList	exception_op		25781	1					
ANR	25869	Argument	exception_op		25781	0					
ANR	25870	Identifier	exception_op		25781	0					
ANR	25871	ExpressionStatement	EG ( exception_op ) [ 1 ] . opcode = ZEND_HANDLE_EXCEPTION	425:1:12484:12534	25781	6	True				
ANR	25872	AssignmentExpression	EG ( exception_op ) [ 1 ] . opcode = ZEND_HANDLE_EXCEPTION		25781	0		=			
ANR	25873	MemberAccess	EG ( exception_op ) [ 1 ] . opcode		25781	0					
ANR	25874	ArrayIndexing	EG ( exception_op ) [ 1 ]		25781	0					
ANR	25875	CallExpression	EG ( exception_op )		25781	0					
ANR	25876	Callee	EG		25781	0					
ANR	25877	Identifier	EG		25781	0					
ANR	25878	ArgumentList	exception_op		25781	1					
ANR	25879	Argument	exception_op		25781	0					
ANR	25880	Identifier	exception_op		25781	0					
ANR	25881	PrimaryExpression	1		25781	1					
ANR	25882	Identifier	opcode		25781	1					
ANR	25883	Identifier	ZEND_HANDLE_EXCEPTION		25781	1					
ANR	25884	ExpressionStatement	EG ( exception_op ) [ 1 ] . op1_type = IS_UNUSED	426:1:12537:12577	25781	7	True				
ANR	25885	AssignmentExpression	EG ( exception_op ) [ 1 ] . op1_type = IS_UNUSED		25781	0		=			
ANR	25886	MemberAccess	EG ( exception_op ) [ 1 ] . op1_type		25781	0					
ANR	25887	ArrayIndexing	EG ( exception_op ) [ 1 ]		25781	0					
ANR	25888	CallExpression	EG ( exception_op )		25781	0					
ANR	25889	Callee	EG		25781	0					
ANR	25890	Identifier	EG		25781	0					
ANR	25891	ArgumentList	exception_op		25781	1					
ANR	25892	Argument	exception_op		25781	0					
ANR	25893	Identifier	exception_op		25781	0					
ANR	25894	PrimaryExpression	1		25781	1					
ANR	25895	Identifier	op1_type		25781	1					
ANR	25896	Identifier	IS_UNUSED		25781	1					
ANR	25897	ExpressionStatement	EG ( exception_op ) [ 1 ] . op2_type = IS_UNUSED	427:1:12580:12620	25781	8	True				
ANR	25898	AssignmentExpression	EG ( exception_op ) [ 1 ] . op2_type = IS_UNUSED		25781	0		=			
ANR	25899	MemberAccess	EG ( exception_op ) [ 1 ] . op2_type		25781	0					
ANR	25900	ArrayIndexing	EG ( exception_op ) [ 1 ]		25781	0					
ANR	25901	CallExpression	EG ( exception_op )		25781	0					
ANR	25902	Callee	EG		25781	0					
ANR	25903	Identifier	EG		25781	0					
ANR	25904	ArgumentList	exception_op		25781	1					
ANR	25905	Argument	exception_op		25781	0					
ANR	25906	Identifier	exception_op		25781	0					
ANR	25907	PrimaryExpression	1		25781	1					
ANR	25908	Identifier	op2_type		25781	1					
ANR	25909	Identifier	IS_UNUSED		25781	1					
ANR	25910	ExpressionStatement	EG ( exception_op ) [ 1 ] . result_type = IS_UNUSED	428:1:12623:12666	25781	9	True				
ANR	25911	AssignmentExpression	EG ( exception_op ) [ 1 ] . result_type = IS_UNUSED		25781	0		=			
ANR	25912	MemberAccess	EG ( exception_op ) [ 1 ] . result_type		25781	0					
ANR	25913	ArrayIndexing	EG ( exception_op ) [ 1 ]		25781	0					
ANR	25914	CallExpression	EG ( exception_op )		25781	0					
ANR	25915	Callee	EG		25781	0					
ANR	25916	Identifier	EG		25781	0					
ANR	25917	ArgumentList	exception_op		25781	1					
ANR	25918	Argument	exception_op		25781	0					
ANR	25919	Identifier	exception_op		25781	0					
ANR	25920	PrimaryExpression	1		25781	1					
ANR	25921	Identifier	result_type		25781	1					
ANR	25922	Identifier	IS_UNUSED		25781	1					
ANR	25923	ExpressionStatement	ZEND_VM_SET_OPCODE_HANDLER ( EG ( exception_op ) + 1 )	429:1:12669:12715	25781	10	True				
ANR	25924	CallExpression	ZEND_VM_SET_OPCODE_HANDLER ( EG ( exception_op ) + 1 )		25781	0					
ANR	25925	Callee	ZEND_VM_SET_OPCODE_HANDLER		25781	0					
ANR	25926	Identifier	ZEND_VM_SET_OPCODE_HANDLER		25781	0					
ANR	25927	ArgumentList	EG ( exception_op ) + 1		25781	1					
ANR	25928	Argument	EG ( exception_op ) + 1		25781	0					
ANR	25929	AdditiveExpression	EG ( exception_op ) + 1		25781	0		+			
ANR	25930	CallExpression	EG ( exception_op )		25781	0					
ANR	25931	Callee	EG		25781	0					
ANR	25932	Identifier	EG		25781	0					
ANR	25933	ArgumentList	exception_op		25781	1					
ANR	25934	Argument	exception_op		25781	0					
ANR	25935	Identifier	exception_op		25781	0					
ANR	25936	PrimaryExpression	1		25781	1					
ANR	25937	ExpressionStatement	EG ( exception_op ) [ 2 ] . opcode = ZEND_HANDLE_EXCEPTION	430:1:12718:12768	25781	11	True				
ANR	25938	AssignmentExpression	EG ( exception_op ) [ 2 ] . opcode = ZEND_HANDLE_EXCEPTION		25781	0		=			
ANR	25939	MemberAccess	EG ( exception_op ) [ 2 ] . opcode		25781	0					
ANR	25940	ArrayIndexing	EG ( exception_op ) [ 2 ]		25781	0					
ANR	25941	CallExpression	EG ( exception_op )		25781	0					
ANR	25942	Callee	EG		25781	0					
ANR	25943	Identifier	EG		25781	0					
ANR	25944	ArgumentList	exception_op		25781	1					
ANR	25945	Argument	exception_op		25781	0					
ANR	25946	Identifier	exception_op		25781	0					
ANR	25947	PrimaryExpression	2		25781	1					
ANR	25948	Identifier	opcode		25781	1					
ANR	25949	Identifier	ZEND_HANDLE_EXCEPTION		25781	1					
ANR	25950	ExpressionStatement	EG ( exception_op ) [ 2 ] . op1_type = IS_UNUSED	431:1:12771:12811	25781	12	True				
ANR	25951	AssignmentExpression	EG ( exception_op ) [ 2 ] . op1_type = IS_UNUSED		25781	0		=			
ANR	25952	MemberAccess	EG ( exception_op ) [ 2 ] . op1_type		25781	0					
ANR	25953	ArrayIndexing	EG ( exception_op ) [ 2 ]		25781	0					
ANR	25954	CallExpression	EG ( exception_op )		25781	0					
ANR	25955	Callee	EG		25781	0					
ANR	25956	Identifier	EG		25781	0					
ANR	25957	ArgumentList	exception_op		25781	1					
ANR	25958	Argument	exception_op		25781	0					
ANR	25959	Identifier	exception_op		25781	0					
ANR	25960	PrimaryExpression	2		25781	1					
ANR	25961	Identifier	op1_type		25781	1					
ANR	25962	Identifier	IS_UNUSED		25781	1					
ANR	25963	ExpressionStatement	EG ( exception_op ) [ 2 ] . op2_type = IS_UNUSED	432:1:12814:12854	25781	13	True				
ANR	25964	AssignmentExpression	EG ( exception_op ) [ 2 ] . op2_type = IS_UNUSED		25781	0		=			
ANR	25965	MemberAccess	EG ( exception_op ) [ 2 ] . op2_type		25781	0					
ANR	25966	ArrayIndexing	EG ( exception_op ) [ 2 ]		25781	0					
ANR	25967	CallExpression	EG ( exception_op )		25781	0					
ANR	25968	Callee	EG		25781	0					
ANR	25969	Identifier	EG		25781	0					
ANR	25970	ArgumentList	exception_op		25781	1					
ANR	25971	Argument	exception_op		25781	0					
ANR	25972	Identifier	exception_op		25781	0					
ANR	25973	PrimaryExpression	2		25781	1					
ANR	25974	Identifier	op2_type		25781	1					
ANR	25975	Identifier	IS_UNUSED		25781	1					
ANR	25976	ExpressionStatement	EG ( exception_op ) [ 2 ] . result_type = IS_UNUSED	433:1:12857:12900	25781	14	True				
ANR	25977	AssignmentExpression	EG ( exception_op ) [ 2 ] . result_type = IS_UNUSED		25781	0		=			
ANR	25978	MemberAccess	EG ( exception_op ) [ 2 ] . result_type		25781	0					
ANR	25979	ArrayIndexing	EG ( exception_op ) [ 2 ]		25781	0					
ANR	25980	CallExpression	EG ( exception_op )		25781	0					
ANR	25981	Callee	EG		25781	0					
ANR	25982	Identifier	EG		25781	0					
ANR	25983	ArgumentList	exception_op		25781	1					
ANR	25984	Argument	exception_op		25781	0					
ANR	25985	Identifier	exception_op		25781	0					
ANR	25986	PrimaryExpression	2		25781	1					
ANR	25987	Identifier	result_type		25781	1					
ANR	25988	Identifier	IS_UNUSED		25781	1					
ANR	25989	ExpressionStatement	ZEND_VM_SET_OPCODE_HANDLER ( EG ( exception_op ) + 2 )	434:1:12903:12949	25781	15	True				
ANR	25990	CallExpression	ZEND_VM_SET_OPCODE_HANDLER ( EG ( exception_op ) + 2 )		25781	0					
ANR	25991	Callee	ZEND_VM_SET_OPCODE_HANDLER		25781	0					
ANR	25992	Identifier	ZEND_VM_SET_OPCODE_HANDLER		25781	0					
ANR	25993	ArgumentList	EG ( exception_op ) + 2		25781	1					
ANR	25994	Argument	EG ( exception_op ) + 2		25781	0					
ANR	25995	AdditiveExpression	EG ( exception_op ) + 2		25781	0		+			
ANR	25996	CallExpression	EG ( exception_op )		25781	0					
ANR	25997	Callee	EG		25781	0					
ANR	25998	Identifier	EG		25781	0					
ANR	25999	ArgumentList	exception_op		25781	1					
ANR	26000	Argument	exception_op		25781	0					
ANR	26001	Identifier	exception_op		25781	0					
ANR	26002	PrimaryExpression	2		25781	1					
ANR	26003	ReturnType	static void		25781	1					
ANR	26004	Identifier	zend_init_exception_op		25781	2					
ANR	26005	ParameterList			25781	3					
ANR	26006	CFGEntryNode	ENTRY		25781		True				
ANR	26007	CFGExitNode	EXIT		25781		True				
ANR	26008	Symbol	EG ( exception_op ) [ 0 ] . op2_type		25781						
ANR	26009	Symbol	EG ( exception_op ) [ 1 ] . op2_type		25781						
ANR	26010	Symbol	EG		25781						
ANR	26011	Symbol	EG ( exception_op ) [ 1 ] . result_type		25781						
ANR	26012	Symbol	EG ( exception_op ) [ 2 ] . opcode		25781						
ANR	26013	Symbol	EG ( exception_op ) [ 1 ] . opcode		25781						
ANR	26014	Symbol	EG ( exception_op ) [ 2 ] . op1_type		25781						
ANR	26015	Symbol	ZEND_HANDLE_EXCEPTION		25781						
ANR	26016	Symbol	EG ( exception_op ) [ 1 ] . op1_type		25781						
ANR	26017	Symbol	* EG		25781						
ANR	26018	Symbol	EG ( exception_op ) [ 2 ] . result_type		25781						
ANR	26019	Symbol	EG ( exception_op ) [ 0 ] . op1_type		25781						
ANR	26020	Symbol	exception_op		25781						
ANR	26021	Symbol	EG ( exception_op ) [ 0 ] . result_type		25781						
ANR	26022	Symbol	EG ( exception_op ) [ 0 ] . opcode		25781						
ANR	26023	Symbol	EG ( exception_op ) [ 2 ] . op2_type		25781						
ANR	26024	Symbol	IS_UNUSED		25781						
ANR	26025	Function	zend_init_call_trampoline_op	438:0:12964:13342							
ANR	26026	FunctionDef	zend_init_call_trampoline_op ()		26025	0					
ANR	26027	CompoundStatement		439:0:13021:13342	26025	0					
ANR	26028	ExpressionStatement	"memset ( & EG ( call_trampoline_op ) , 0 , sizeof ( EG ( call_trampoline_op ) ) )"	440:1:13024:13090	26025	0	True				
ANR	26029	CallExpression	"memset ( & EG ( call_trampoline_op ) , 0 , sizeof ( EG ( call_trampoline_op ) ) )"		26025	0					
ANR	26030	Callee	memset		26025	0					
ANR	26031	Identifier	memset		26025	0					
ANR	26032	ArgumentList	& EG ( call_trampoline_op )		26025	1					
ANR	26033	Argument	& EG ( call_trampoline_op )		26025	0					
ANR	26034	UnaryOperationExpression	& EG ( call_trampoline_op )		26025	0					
ANR	26035	UnaryOperator	&		26025	0					
ANR	26036	CallExpression	EG ( call_trampoline_op )		26025	1					
ANR	26037	Callee	EG		26025	0					
ANR	26038	Identifier	EG		26025	0					
ANR	26039	ArgumentList	call_trampoline_op		26025	1					
ANR	26040	Argument	call_trampoline_op		26025	0					
ANR	26041	Identifier	call_trampoline_op		26025	0					
ANR	26042	Argument	0		26025	1					
ANR	26043	PrimaryExpression	0		26025	0					
ANR	26044	Argument	sizeof ( EG ( call_trampoline_op ) )		26025	2					
ANR	26045	SizeofExpression	sizeof ( EG ( call_trampoline_op ) )		26025	0					
ANR	26046	Sizeof	sizeof		26025	0					
ANR	26047	CallExpression	EG ( call_trampoline_op )		26025	1					
ANR	26048	Callee	EG		26025	0					
ANR	26049	Identifier	EG		26025	0					
ANR	26050	ArgumentList	call_trampoline_op		26025	1					
ANR	26051	Argument	call_trampoline_op		26025	0					
ANR	26052	Identifier	call_trampoline_op		26025	0					
ANR	26053	ExpressionStatement	EG ( call_trampoline_op ) . opcode = ZEND_CALL_TRAMPOLINE	441:1:13093:13145	26025	1	True				
ANR	26054	AssignmentExpression	EG ( call_trampoline_op ) . opcode = ZEND_CALL_TRAMPOLINE		26025	0		=			
ANR	26055	MemberAccess	EG ( call_trampoline_op ) . opcode		26025	0					
ANR	26056	CallExpression	EG ( call_trampoline_op )		26025	0					
ANR	26057	Callee	EG		26025	0					
ANR	26058	Identifier	EG		26025	0					
ANR	26059	ArgumentList	call_trampoline_op		26025	1					
ANR	26060	Argument	call_trampoline_op		26025	0					
ANR	26061	Identifier	call_trampoline_op		26025	0					
ANR	26062	Identifier	opcode		26025	1					
ANR	26063	Identifier	ZEND_CALL_TRAMPOLINE		26025	1					
ANR	26064	ExpressionStatement	EG ( call_trampoline_op ) . op1_type = IS_UNUSED	442:1:13148:13191	26025	2	True				
ANR	26065	AssignmentExpression	EG ( call_trampoline_op ) . op1_type = IS_UNUSED		26025	0		=			
ANR	26066	MemberAccess	EG ( call_trampoline_op ) . op1_type		26025	0					
ANR	26067	CallExpression	EG ( call_trampoline_op )		26025	0					
ANR	26068	Callee	EG		26025	0					
ANR	26069	Identifier	EG		26025	0					
ANR	26070	ArgumentList	call_trampoline_op		26025	1					
ANR	26071	Argument	call_trampoline_op		26025	0					
ANR	26072	Identifier	call_trampoline_op		26025	0					
ANR	26073	Identifier	op1_type		26025	1					
ANR	26074	Identifier	IS_UNUSED		26025	1					
ANR	26075	ExpressionStatement	EG ( call_trampoline_op ) . op2_type = IS_UNUSED	443:1:13194:13237	26025	3	True				
ANR	26076	AssignmentExpression	EG ( call_trampoline_op ) . op2_type = IS_UNUSED		26025	0		=			
ANR	26077	MemberAccess	EG ( call_trampoline_op ) . op2_type		26025	0					
ANR	26078	CallExpression	EG ( call_trampoline_op )		26025	0					
ANR	26079	Callee	EG		26025	0					
ANR	26080	Identifier	EG		26025	0					
ANR	26081	ArgumentList	call_trampoline_op		26025	1					
ANR	26082	Argument	call_trampoline_op		26025	0					
ANR	26083	Identifier	call_trampoline_op		26025	0					
ANR	26084	Identifier	op2_type		26025	1					
ANR	26085	Identifier	IS_UNUSED		26025	1					
ANR	26086	ExpressionStatement	EG ( call_trampoline_op ) . result_type = IS_UNUSED	444:1:13240:13286	26025	4	True				
ANR	26087	AssignmentExpression	EG ( call_trampoline_op ) . result_type = IS_UNUSED		26025	0		=			
ANR	26088	MemberAccess	EG ( call_trampoline_op ) . result_type		26025	0					
ANR	26089	CallExpression	EG ( call_trampoline_op )		26025	0					
ANR	26090	Callee	EG		26025	0					
ANR	26091	Identifier	EG		26025	0					
ANR	26092	ArgumentList	call_trampoline_op		26025	1					
ANR	26093	Argument	call_trampoline_op		26025	0					
ANR	26094	Identifier	call_trampoline_op		26025	0					
ANR	26095	Identifier	result_type		26025	1					
ANR	26096	Identifier	IS_UNUSED		26025	1					
ANR	26097	ExpressionStatement	ZEND_VM_SET_OPCODE_HANDLER ( & EG ( call_trampoline_op ) )	445:1:13289:13340	26025	5	True				
ANR	26098	CallExpression	ZEND_VM_SET_OPCODE_HANDLER ( & EG ( call_trampoline_op ) )		26025	0					
ANR	26099	Callee	ZEND_VM_SET_OPCODE_HANDLER		26025	0					
ANR	26100	Identifier	ZEND_VM_SET_OPCODE_HANDLER		26025	0					
ANR	26101	ArgumentList	& EG ( call_trampoline_op )		26025	1					
ANR	26102	Argument	& EG ( call_trampoline_op )		26025	0					
ANR	26103	UnaryOperationExpression	& EG ( call_trampoline_op )		26025	0					
ANR	26104	UnaryOperator	&		26025	0					
ANR	26105	CallExpression	EG ( call_trampoline_op )		26025	1					
ANR	26106	Callee	EG		26025	0					
ANR	26107	Identifier	EG		26025	0					
ANR	26108	ArgumentList	call_trampoline_op		26025	1					
ANR	26109	Argument	call_trampoline_op		26025	0					
ANR	26110	Identifier	call_trampoline_op		26025	0					
ANR	26111	ReturnType	static void		26025	1					
ANR	26112	Identifier	zend_init_call_trampoline_op		26025	2					
ANR	26113	ParameterList			26025	3					
ANR	26114	CFGEntryNode	ENTRY		26025		True				
ANR	26115	CFGExitNode	EXIT		26025		True				
ANR	26116	Symbol	EG		26025						
ANR	26117	Symbol	ZEND_CALL_TRAMPOLINE		26025						
ANR	26118	Symbol	EG ( call_trampoline_op ) . op1_type		26025						
ANR	26119	Symbol	call_trampoline_op		26025						
ANR	26120	Symbol	EG ( call_trampoline_op ) . result_type		26025						
ANR	26121	Symbol	EG ( call_trampoline_op ) . op2_type		26025						
ANR	26122	Symbol	& EG		26025						
ANR	26123	Symbol	EG ( call_trampoline_op ) . opcode		26025						
ANR	26124	Symbol	IS_UNUSED		26025						
ANR	26125	Function	auto_global_dtor	449:0:13355:13426							
ANR	26126	FunctionDef	auto_global_dtor (zval * zv)		26125	0					
ANR	26127	CompoundStatement		450:0:13404:13426	26125	0					
ANR	26128	ExpressionStatement	free ( Z_PTR_P ( zv ) )	451:1:13407:13424	26125	0	True				
ANR	26129	CallExpression	free ( Z_PTR_P ( zv ) )		26125	0					
ANR	26130	Callee	free		26125	0					
ANR	26131	Identifier	free		26125	0					
ANR	26132	ArgumentList	Z_PTR_P ( zv )		26125	1					
ANR	26133	Argument	Z_PTR_P ( zv )		26125	0					
ANR	26134	CallExpression	Z_PTR_P ( zv )		26125	0					
ANR	26135	Callee	Z_PTR_P		26125	0					
ANR	26136	Identifier	Z_PTR_P		26125	0					
ANR	26137	ArgumentList	zv		26125	1					
ANR	26138	Argument	zv		26125	0					
ANR	26139	Identifier	zv		26125	0					
ANR	26140	ReturnType	static void		26125	1					
ANR	26141	Identifier	auto_global_dtor		26125	2					
ANR	26142	ParameterList	zval * zv		26125	3					
ANR	26143	Parameter	zval * zv	449:29:13384:13391	26125	0	True				
ANR	26144	ParameterType	zval *		26125	0					
ANR	26145	Identifier	zv		26125	1					
ANR	26146	CFGEntryNode	ENTRY		26125		True				
ANR	26147	CFGExitNode	EXIT		26125		True				
ANR	26148	Symbol	Z_PTR_P		26125						
ANR	26149	Symbol	zv		26125						
ANR	26150	Function	function_copy_ctor	456:0:13450:13703							
ANR	26151	FunctionDef	function_copy_ctor (zval * zv)		26150	0					
ANR	26152	CompoundStatement		457:0:13501:13703	26150	0					
ANR	26153	IdentifierDeclStatement	zend_function * old_func = Z_FUNC_P ( zv ) ;	458:1:13504:13542	26150	0	True				
ANR	26154	IdentifierDecl	* old_func = Z_FUNC_P ( zv )		26150	0					
ANR	26155	IdentifierDeclType	zend_function *		26150	0					
ANR	26156	Identifier	old_func		26150	1					
ANR	26157	AssignmentExpression	* old_func = Z_FUNC_P ( zv )		26150	2		=			
ANR	26158	Identifier	old_func		26150	0					
ANR	26159	CallExpression	Z_FUNC_P ( zv )		26150	1					
ANR	26160	Callee	Z_FUNC_P		26150	0					
ANR	26161	Identifier	Z_FUNC_P		26150	0					
ANR	26162	ArgumentList	zv		26150	1					
ANR	26163	Argument	zv		26150	0					
ANR	26164	Identifier	zv		26150	0					
ANR	26165	ExpressionStatement	"Z_FUNC_P ( zv ) = pemalloc ( sizeof ( zend_internal_function ) , 1 )"	459:1:13545:13603	26150	1	True				
ANR	26166	AssignmentExpression	"Z_FUNC_P ( zv ) = pemalloc ( sizeof ( zend_internal_function ) , 1 )"		26150	0		=			
ANR	26167	CallExpression	Z_FUNC_P ( zv )		26150	0					
ANR	26168	Callee	Z_FUNC_P		26150	0					
ANR	26169	Identifier	Z_FUNC_P		26150	0					
ANR	26170	ArgumentList	zv		26150	1					
ANR	26171	Argument	zv		26150	0					
ANR	26172	Identifier	zv		26150	0					
ANR	26173	CallExpression	"pemalloc ( sizeof ( zend_internal_function ) , 1 )"		26150	1					
ANR	26174	Callee	pemalloc		26150	0					
ANR	26175	Identifier	pemalloc		26150	0					
ANR	26176	ArgumentList	sizeof ( zend_internal_function )		26150	1					
ANR	26177	Argument	sizeof ( zend_internal_function )		26150	0					
ANR	26178	SizeofExpression	sizeof ( zend_internal_function )		26150	0					
ANR	26179	Sizeof	sizeof		26150	0					
ANR	26180	SizeofOperand	zend_internal_function		26150	1					
ANR	26181	Argument	1		26150	1					
ANR	26182	PrimaryExpression	1		26150	0					
ANR	26183	ExpressionStatement	"memcpy ( Z_FUNC_P ( zv ) , old_func , sizeof ( zend_internal_function ) )"	460:1:13606:13668	26150	2	True				
ANR	26184	CallExpression	"memcpy ( Z_FUNC_P ( zv ) , old_func , sizeof ( zend_internal_function ) )"		26150	0					
ANR	26185	Callee	memcpy		26150	0					
ANR	26186	Identifier	memcpy		26150	0					
ANR	26187	ArgumentList	Z_FUNC_P ( zv )		26150	1					
ANR	26188	Argument	Z_FUNC_P ( zv )		26150	0					
ANR	26189	CallExpression	Z_FUNC_P ( zv )		26150	0					
ANR	26190	Callee	Z_FUNC_P		26150	0					
ANR	26191	Identifier	Z_FUNC_P		26150	0					
ANR	26192	ArgumentList	zv		26150	1					
ANR	26193	Argument	zv		26150	0					
ANR	26194	Identifier	zv		26150	0					
ANR	26195	Argument	old_func		26150	1					
ANR	26196	Identifier	old_func		26150	0					
ANR	26197	Argument	sizeof ( zend_internal_function )		26150	2					
ANR	26198	SizeofExpression	sizeof ( zend_internal_function )		26150	0					
ANR	26199	Sizeof	sizeof		26150	0					
ANR	26200	SizeofOperand	zend_internal_function		26150	1					
ANR	26201	ExpressionStatement	function_add_ref ( Z_FUNC_P ( zv ) )	461:1:13671:13701	26150	3	True				
ANR	26202	CallExpression	function_add_ref ( Z_FUNC_P ( zv ) )		26150	0					
ANR	26203	Callee	function_add_ref		26150	0					
ANR	26204	Identifier	function_add_ref		26150	0					
ANR	26205	ArgumentList	Z_FUNC_P ( zv )		26150	1					
ANR	26206	Argument	Z_FUNC_P ( zv )		26150	0					
ANR	26207	CallExpression	Z_FUNC_P ( zv )		26150	0					
ANR	26208	Callee	Z_FUNC_P		26150	0					
ANR	26209	Identifier	Z_FUNC_P		26150	0					
ANR	26210	ArgumentList	zv		26150	1					
ANR	26211	Argument	zv		26150	0					
ANR	26212	Identifier	zv		26150	0					
ANR	26213	ReturnType	static void		26150	1					
ANR	26214	Identifier	function_copy_ctor		26150	2					
ANR	26215	ParameterList	zval * zv		26150	3					
ANR	26216	Parameter	zval * zv	456:31:13481:13488	26150	0	True				
ANR	26217	ParameterType	zval *		26150	0					
ANR	26218	Identifier	zv		26150	1					
ANR	26219	CFGEntryNode	ENTRY		26150		True				
ANR	26220	CFGExitNode	EXIT		26150		True				
ANR	26221	Symbol	Z_FUNC_P		26150						
ANR	26222	Symbol	zv		26150						
ANR	26223	Symbol	old_func		26150						
ANR	26224	Symbol	pemalloc		26150						
ANR	26225	Function	auto_global_copy_ctor	465:0:13716:14046							
ANR	26226	FunctionDef	auto_global_copy_ctor (zval * zv)		26225	0					
ANR	26227	CompoundStatement		466:0:13770:14046	26225	0					
ANR	26228	IdentifierDeclStatement	zend_auto_global * old_ag = ( zend_auto_global * ) Z_PTR_P ( zv ) ;	467:1:13773:13832	26225	0	True				
ANR	26229	IdentifierDecl	* old_ag = ( zend_auto_global * ) Z_PTR_P ( zv )		26225	0					
ANR	26230	IdentifierDeclType	zend_auto_global *		26225	0					
ANR	26231	Identifier	old_ag		26225	1					
ANR	26232	AssignmentExpression	* old_ag = ( zend_auto_global * ) Z_PTR_P ( zv )		26225	2		=			
ANR	26233	Identifier	old_ag		26225	0					
ANR	26234	CastExpression	( zend_auto_global * ) Z_PTR_P ( zv )		26225	1					
ANR	26235	CastTarget	zend_auto_global *		26225	0					
ANR	26236	CallExpression	Z_PTR_P ( zv )		26225	1					
ANR	26237	Callee	Z_PTR_P		26225	0					
ANR	26238	Identifier	Z_PTR_P		26225	0					
ANR	26239	ArgumentList	zv		26225	1					
ANR	26240	Argument	zv		26225	0					
ANR	26241	Identifier	zv		26225	0					
ANR	26242	IdentifierDeclStatement	"zend_auto_global * new_ag = pemalloc ( sizeof ( zend_auto_global ) , 1 ) ;"	468:1:13835:13899	26225	1	True				
ANR	26243	IdentifierDecl	"* new_ag = pemalloc ( sizeof ( zend_auto_global ) , 1 )"		26225	0					
ANR	26244	IdentifierDeclType	zend_auto_global *		26225	0					
ANR	26245	Identifier	new_ag		26225	1					
ANR	26246	AssignmentExpression	"* new_ag = pemalloc ( sizeof ( zend_auto_global ) , 1 )"		26225	2		=			
ANR	26247	Identifier	new_ag		26225	0					
ANR	26248	CallExpression	"pemalloc ( sizeof ( zend_auto_global ) , 1 )"		26225	1					
ANR	26249	Callee	pemalloc		26225	0					
ANR	26250	Identifier	pemalloc		26225	0					
ANR	26251	ArgumentList	sizeof ( zend_auto_global )		26225	1					
ANR	26252	Argument	sizeof ( zend_auto_global )		26225	0					
ANR	26253	SizeofExpression	sizeof ( zend_auto_global )		26225	0					
ANR	26254	Sizeof	sizeof		26225	0					
ANR	26255	SizeofOperand	zend_auto_global		26225	1					
ANR	26256	Argument	1		26225	1					
ANR	26257	PrimaryExpression	1		26225	0					
ANR	26258	ExpressionStatement	new_ag -> name = old_ag -> name	470:1:13903:13930	26225	2	True				
ANR	26259	AssignmentExpression	new_ag -> name = old_ag -> name		26225	0		=			
ANR	26260	PtrMemberAccess	new_ag -> name		26225	0					
ANR	26261	Identifier	new_ag		26225	0					
ANR	26262	Identifier	name		26225	1					
ANR	26263	PtrMemberAccess	old_ag -> name		26225	1					
ANR	26264	Identifier	old_ag		26225	0					
ANR	26265	Identifier	name		26225	1					
ANR	26266	ExpressionStatement	new_ag -> auto_global_callback = old_ag -> auto_global_callback	471:1:13933:13992	26225	3	True				
ANR	26267	AssignmentExpression	new_ag -> auto_global_callback = old_ag -> auto_global_callback		26225	0		=			
ANR	26268	PtrMemberAccess	new_ag -> auto_global_callback		26225	0					
ANR	26269	Identifier	new_ag		26225	0					
ANR	26270	Identifier	auto_global_callback		26225	1					
ANR	26271	PtrMemberAccess	old_ag -> auto_global_callback		26225	1					
ANR	26272	Identifier	old_ag		26225	0					
ANR	26273	Identifier	auto_global_callback		26225	1					
ANR	26274	ExpressionStatement	new_ag -> jit = old_ag -> jit	472:1:13995:14020	26225	4	True				
ANR	26275	AssignmentExpression	new_ag -> jit = old_ag -> jit		26225	0		=			
ANR	26276	PtrMemberAccess	new_ag -> jit		26225	0					
ANR	26277	Identifier	new_ag		26225	0					
ANR	26278	Identifier	jit		26225	1					
ANR	26279	PtrMemberAccess	old_ag -> jit		26225	1					
ANR	26280	Identifier	old_ag		26225	0					
ANR	26281	Identifier	jit		26225	1					
ANR	26282	ExpressionStatement	Z_PTR_P ( zv ) = new_ag	474:1:14024:14044	26225	5	True				
ANR	26283	AssignmentExpression	Z_PTR_P ( zv ) = new_ag		26225	0		=			
ANR	26284	CallExpression	Z_PTR_P ( zv )		26225	0					
ANR	26285	Callee	Z_PTR_P		26225	0					
ANR	26286	Identifier	Z_PTR_P		26225	0					
ANR	26287	ArgumentList	zv		26225	1					
ANR	26288	Argument	zv		26225	0					
ANR	26289	Identifier	zv		26225	0					
ANR	26290	Identifier	new_ag		26225	1					
ANR	26291	ReturnType	static void		26225	1					
ANR	26292	Identifier	auto_global_copy_ctor		26225	2					
ANR	26293	ParameterList	zval * zv		26225	3					
ANR	26294	Parameter	zval * zv	465:34:13750:13757	26225	0	True				
ANR	26295	ParameterType	zval *		26225	0					
ANR	26296	Identifier	zv		26225	1					
ANR	26297	CFGEntryNode	ENTRY		26225		True				
ANR	26298	CFGExitNode	EXIT		26225		True				
ANR	26299	Symbol	Z_PTR_P		26225						
ANR	26300	Symbol	old_ag -> jit		26225						
ANR	26301	Symbol	new_ag -> jit		26225						
ANR	26302	Symbol	old_ag -> name		26225						
ANR	26303	Symbol	new_ag -> auto_global_callback		26225						
ANR	26304	Symbol	* new_ag		26225						
ANR	26305	Symbol	new_ag -> name		26225						
ANR	26306	Symbol	old_ag		26225						
ANR	26307	Symbol	* old_ag		26225						
ANR	26308	Symbol	old_ag -> auto_global_callback		26225						
ANR	26309	Symbol	zv		26225						
ANR	26310	Symbol	new_ag		26225						
ANR	26311	Symbol	pemalloc		26225						
ANR	26312	Function	compiler_globals_ctor	478:0:14059:15518							
ANR	26313	FunctionDef	compiler_globals_ctor (zend_compiler_globals * compiler_globals)		26312	0					
ANR	26314	CompoundStatement		479:0:14144:15518	26312	0					
ANR	26315	ExpressionStatement	compiler_globals -> compiled_filename = NULL	480:1:14147:14189	26312	0	True				
ANR	26316	AssignmentExpression	compiler_globals -> compiled_filename = NULL		26312	0		=			
ANR	26317	PtrMemberAccess	compiler_globals -> compiled_filename		26312	0					
ANR	26318	Identifier	compiler_globals		26312	0					
ANR	26319	Identifier	compiled_filename		26312	1					
ANR	26320	Identifier	NULL		26312	1					
ANR	26321	ExpressionStatement	compiler_globals -> function_table = ( HashTable * ) malloc ( sizeof ( HashTable ) )	482:1:14193:14267	26312	1	True				
ANR	26322	AssignmentExpression	compiler_globals -> function_table = ( HashTable * ) malloc ( sizeof ( HashTable ) )		26312	0		=			
ANR	26323	PtrMemberAccess	compiler_globals -> function_table		26312	0					
ANR	26324	Identifier	compiler_globals		26312	0					
ANR	26325	Identifier	function_table		26312	1					
ANR	26326	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		26312	1					
ANR	26327	CastTarget	HashTable *		26312	0					
ANR	26328	CallExpression	malloc ( sizeof ( HashTable ) )		26312	1					
ANR	26329	Callee	malloc		26312	0					
ANR	26330	Identifier	malloc		26312	0					
ANR	26331	ArgumentList	sizeof ( HashTable )		26312	1					
ANR	26332	Argument	sizeof ( HashTable )		26312	0					
ANR	26333	SizeofExpression	sizeof ( HashTable )		26312	0					
ANR	26334	Sizeof	sizeof		26312	0					
ANR	26335	SizeofOperand	HashTable		26312	1					
ANR	26336	ExpressionStatement	"zend_hash_init_ex ( compiler_globals -> function_table , 1024 , NULL , ZEND_FUNCTION_DTOR , 1 , 0 )"	483:1:14270:14359	26312	2	True				
ANR	26337	CallExpression	"zend_hash_init_ex ( compiler_globals -> function_table , 1024 , NULL , ZEND_FUNCTION_DTOR , 1 , 0 )"		26312	0					
ANR	26338	Callee	zend_hash_init_ex		26312	0					
ANR	26339	Identifier	zend_hash_init_ex		26312	0					
ANR	26340	ArgumentList	compiler_globals -> function_table		26312	1					
ANR	26341	Argument	compiler_globals -> function_table		26312	0					
ANR	26342	PtrMemberAccess	compiler_globals -> function_table		26312	0					
ANR	26343	Identifier	compiler_globals		26312	0					
ANR	26344	Identifier	function_table		26312	1					
ANR	26345	Argument	1024		26312	1					
ANR	26346	PrimaryExpression	1024		26312	0					
ANR	26347	Argument	NULL		26312	2					
ANR	26348	Identifier	NULL		26312	0					
ANR	26349	Argument	ZEND_FUNCTION_DTOR		26312	3					
ANR	26350	Identifier	ZEND_FUNCTION_DTOR		26312	0					
ANR	26351	Argument	1		26312	4					
ANR	26352	PrimaryExpression	1		26312	0					
ANR	26353	Argument	0		26312	5					
ANR	26354	PrimaryExpression	0		26312	0					
ANR	26355	ExpressionStatement	"zend_hash_copy ( compiler_globals -> function_table , global_function_table , function_copy_ctor )"	484:1:14362:14453	26312	3	True				
ANR	26356	CallExpression	"zend_hash_copy ( compiler_globals -> function_table , global_function_table , function_copy_ctor )"		26312	0					
ANR	26357	Callee	zend_hash_copy		26312	0					
ANR	26358	Identifier	zend_hash_copy		26312	0					
ANR	26359	ArgumentList	compiler_globals -> function_table		26312	1					
ANR	26360	Argument	compiler_globals -> function_table		26312	0					
ANR	26361	PtrMemberAccess	compiler_globals -> function_table		26312	0					
ANR	26362	Identifier	compiler_globals		26312	0					
ANR	26363	Identifier	function_table		26312	1					
ANR	26364	Argument	global_function_table		26312	1					
ANR	26365	Identifier	global_function_table		26312	0					
ANR	26366	Argument	function_copy_ctor		26312	2					
ANR	26367	Identifier	function_copy_ctor		26312	0					
ANR	26368	ExpressionStatement	compiler_globals -> class_table = ( HashTable * ) malloc ( sizeof ( HashTable ) )	486:1:14457:14528	26312	4	True				
ANR	26369	AssignmentExpression	compiler_globals -> class_table = ( HashTable * ) malloc ( sizeof ( HashTable ) )		26312	0		=			
ANR	26370	PtrMemberAccess	compiler_globals -> class_table		26312	0					
ANR	26371	Identifier	compiler_globals		26312	0					
ANR	26372	Identifier	class_table		26312	1					
ANR	26373	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		26312	1					
ANR	26374	CastTarget	HashTable *		26312	0					
ANR	26375	CallExpression	malloc ( sizeof ( HashTable ) )		26312	1					
ANR	26376	Callee	malloc		26312	0					
ANR	26377	Identifier	malloc		26312	0					
ANR	26378	ArgumentList	sizeof ( HashTable )		26312	1					
ANR	26379	Argument	sizeof ( HashTable )		26312	0					
ANR	26380	SizeofExpression	sizeof ( HashTable )		26312	0					
ANR	26381	Sizeof	sizeof		26312	0					
ANR	26382	SizeofOperand	HashTable		26312	1					
ANR	26383	ExpressionStatement	"zend_hash_init_ex ( compiler_globals -> class_table , 64 , NULL , ZEND_CLASS_DTOR , 1 , 0 )"	487:1:14531:14612	26312	5	True				
ANR	26384	CallExpression	"zend_hash_init_ex ( compiler_globals -> class_table , 64 , NULL , ZEND_CLASS_DTOR , 1 , 0 )"		26312	0					
ANR	26385	Callee	zend_hash_init_ex		26312	0					
ANR	26386	Identifier	zend_hash_init_ex		26312	0					
ANR	26387	ArgumentList	compiler_globals -> class_table		26312	1					
ANR	26388	Argument	compiler_globals -> class_table		26312	0					
ANR	26389	PtrMemberAccess	compiler_globals -> class_table		26312	0					
ANR	26390	Identifier	compiler_globals		26312	0					
ANR	26391	Identifier	class_table		26312	1					
ANR	26392	Argument	64		26312	1					
ANR	26393	PrimaryExpression	64		26312	0					
ANR	26394	Argument	NULL		26312	2					
ANR	26395	Identifier	NULL		26312	0					
ANR	26396	Argument	ZEND_CLASS_DTOR		26312	3					
ANR	26397	Identifier	ZEND_CLASS_DTOR		26312	0					
ANR	26398	Argument	1		26312	4					
ANR	26399	PrimaryExpression	1		26312	0					
ANR	26400	Argument	0		26312	5					
ANR	26401	PrimaryExpression	0		26312	0					
ANR	26402	ExpressionStatement	"zend_hash_copy ( compiler_globals -> class_table , global_class_table , zend_class_add_ref )"	488:1:14615:14700	26312	6	True				
ANR	26403	CallExpression	"zend_hash_copy ( compiler_globals -> class_table , global_class_table , zend_class_add_ref )"		26312	0					
ANR	26404	Callee	zend_hash_copy		26312	0					
ANR	26405	Identifier	zend_hash_copy		26312	0					
ANR	26406	ArgumentList	compiler_globals -> class_table		26312	1					
ANR	26407	Argument	compiler_globals -> class_table		26312	0					
ANR	26408	PtrMemberAccess	compiler_globals -> class_table		26312	0					
ANR	26409	Identifier	compiler_globals		26312	0					
ANR	26410	Identifier	class_table		26312	1					
ANR	26411	Argument	global_class_table		26312	1					
ANR	26412	Identifier	global_class_table		26312	0					
ANR	26413	Argument	zend_class_add_ref		26312	2					
ANR	26414	Identifier	zend_class_add_ref		26312	0					
ANR	26415	ExpressionStatement	zend_set_default_compile_time_values ( )	490:1:14704:14742	26312	7	True				
ANR	26416	CallExpression	zend_set_default_compile_time_values ( )		26312	0					
ANR	26417	Callee	zend_set_default_compile_time_values		26312	0					
ANR	26418	Identifier	zend_set_default_compile_time_values		26312	0					
ANR	26419	ArgumentList			26312	1					
ANR	26420	ExpressionStatement	compiler_globals -> auto_globals = ( HashTable * ) malloc ( sizeof ( HashTable ) )	492:1:14746:14818	26312	8	True				
ANR	26421	AssignmentExpression	compiler_globals -> auto_globals = ( HashTable * ) malloc ( sizeof ( HashTable ) )		26312	0		=			
ANR	26422	PtrMemberAccess	compiler_globals -> auto_globals		26312	0					
ANR	26423	Identifier	compiler_globals		26312	0					
ANR	26424	Identifier	auto_globals		26312	1					
ANR	26425	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		26312	1					
ANR	26426	CastTarget	HashTable *		26312	0					
ANR	26427	CallExpression	malloc ( sizeof ( HashTable ) )		26312	1					
ANR	26428	Callee	malloc		26312	0					
ANR	26429	Identifier	malloc		26312	0					
ANR	26430	ArgumentList	sizeof ( HashTable )		26312	1					
ANR	26431	Argument	sizeof ( HashTable )		26312	0					
ANR	26432	SizeofExpression	sizeof ( HashTable )		26312	0					
ANR	26433	Sizeof	sizeof		26312	0					
ANR	26434	SizeofOperand	HashTable		26312	1					
ANR	26435	ExpressionStatement	"zend_hash_init_ex ( compiler_globals -> auto_globals , 8 , NULL , auto_global_dtor , 1 , 0 )"	493:1:14821:14903	26312	9	True				
ANR	26436	CallExpression	"zend_hash_init_ex ( compiler_globals -> auto_globals , 8 , NULL , auto_global_dtor , 1 , 0 )"		26312	0					
ANR	26437	Callee	zend_hash_init_ex		26312	0					
ANR	26438	Identifier	zend_hash_init_ex		26312	0					
ANR	26439	ArgumentList	compiler_globals -> auto_globals		26312	1					
ANR	26440	Argument	compiler_globals -> auto_globals		26312	0					
ANR	26441	PtrMemberAccess	compiler_globals -> auto_globals		26312	0					
ANR	26442	Identifier	compiler_globals		26312	0					
ANR	26443	Identifier	auto_globals		26312	1					
ANR	26444	Argument	8		26312	1					
ANR	26445	PrimaryExpression	8		26312	0					
ANR	26446	Argument	NULL		26312	2					
ANR	26447	Identifier	NULL		26312	0					
ANR	26448	Argument	auto_global_dtor		26312	3					
ANR	26449	Identifier	auto_global_dtor		26312	0					
ANR	26450	Argument	1		26312	4					
ANR	26451	PrimaryExpression	1		26312	0					
ANR	26452	Argument	0		26312	5					
ANR	26453	PrimaryExpression	0		26312	0					
ANR	26454	ExpressionStatement	"zend_hash_copy ( compiler_globals -> auto_globals , global_auto_globals_table , auto_global_copy_ctor )"	494:1:14906:15002	26312	10	True				
ANR	26455	CallExpression	"zend_hash_copy ( compiler_globals -> auto_globals , global_auto_globals_table , auto_global_copy_ctor )"		26312	0					
ANR	26456	Callee	zend_hash_copy		26312	0					
ANR	26457	Identifier	zend_hash_copy		26312	0					
ANR	26458	ArgumentList	compiler_globals -> auto_globals		26312	1					
ANR	26459	Argument	compiler_globals -> auto_globals		26312	0					
ANR	26460	PtrMemberAccess	compiler_globals -> auto_globals		26312	0					
ANR	26461	Identifier	compiler_globals		26312	0					
ANR	26462	Identifier	auto_globals		26312	1					
ANR	26463	Argument	global_auto_globals_table		26312	1					
ANR	26464	Identifier	global_auto_globals_table		26312	0					
ANR	26465	Argument	auto_global_copy_ctor		26312	2					
ANR	26466	Identifier	auto_global_copy_ctor		26312	0					
ANR	26467	ExpressionStatement	compiler_globals -> last_static_member = zend_hash_num_elements ( compiler_globals -> class_table )	496:1:15006:15098	26312	11	True				
ANR	26468	AssignmentExpression	compiler_globals -> last_static_member = zend_hash_num_elements ( compiler_globals -> class_table )		26312	0		=			
ANR	26469	PtrMemberAccess	compiler_globals -> last_static_member		26312	0					
ANR	26470	Identifier	compiler_globals		26312	0					
ANR	26471	Identifier	last_static_member		26312	1					
ANR	26472	CallExpression	zend_hash_num_elements ( compiler_globals -> class_table )		26312	1					
ANR	26473	Callee	zend_hash_num_elements		26312	0					
ANR	26474	Identifier	zend_hash_num_elements		26312	0					
ANR	26475	ArgumentList	compiler_globals -> class_table		26312	1					
ANR	26476	Argument	compiler_globals -> class_table		26312	0					
ANR	26477	PtrMemberAccess	compiler_globals -> class_table		26312	0					
ANR	26478	Identifier	compiler_globals		26312	0					
ANR	26479	Identifier	class_table		26312	1					
ANR	26480	IfStatement	if ( compiler_globals -> last_static_member )		26312	12					
ANR	26481	Condition	compiler_globals -> last_static_member	497:5:15105:15140	26312	0	True				
ANR	26482	PtrMemberAccess	compiler_globals -> last_static_member		26312	0					
ANR	26483	Identifier	compiler_globals		26312	0					
ANR	26484	Identifier	last_static_member		26312	1					
ANR	26485	CompoundStatement		19:43:998:998	26312	1					
ANR	26486	ExpressionStatement	"compiler_globals -> static_members_table = calloc ( compiler_globals -> last_static_member , sizeof ( zval * ) )"	498:2:15147:15247	26312	0	True				
ANR	26487	AssignmentExpression	"compiler_globals -> static_members_table = calloc ( compiler_globals -> last_static_member , sizeof ( zval * ) )"		26312	0		=			
ANR	26488	PtrMemberAccess	compiler_globals -> static_members_table		26312	0					
ANR	26489	Identifier	compiler_globals		26312	0					
ANR	26490	Identifier	static_members_table		26312	1					
ANR	26491	CallExpression	"calloc ( compiler_globals -> last_static_member , sizeof ( zval * ) )"		26312	1					
ANR	26492	Callee	calloc		26312	0					
ANR	26493	Identifier	calloc		26312	0					
ANR	26494	ArgumentList	compiler_globals -> last_static_member		26312	1					
ANR	26495	Argument	compiler_globals -> last_static_member		26312	0					
ANR	26496	PtrMemberAccess	compiler_globals -> last_static_member		26312	0					
ANR	26497	Identifier	compiler_globals		26312	0					
ANR	26498	Identifier	last_static_member		26312	1					
ANR	26499	Argument	sizeof ( zval * )		26312	1					
ANR	26500	SizeofExpression	sizeof ( zval * )		26312	0					
ANR	26501	Sizeof	sizeof		26312	0					
ANR	26502	SizeofOperand	zval *		26312	1					
ANR	26503	ElseStatement	else		26312	0					
ANR	26504	CompoundStatement		21:8:1112:1112	26312	0					
ANR	26505	ExpressionStatement	compiler_globals -> static_members_table = NULL	500:2:15261:15306	26312	0	True				
ANR	26506	AssignmentExpression	compiler_globals -> static_members_table = NULL		26312	0		=			
ANR	26507	PtrMemberAccess	compiler_globals -> static_members_table		26312	0					
ANR	26508	Identifier	compiler_globals		26312	0					
ANR	26509	Identifier	static_members_table		26312	1					
ANR	26510	Identifier	NULL		26312	1					
ANR	26511	ExpressionStatement	compiler_globals -> script_encoding_list = NULL	502:1:15312:15357	26312	13	True				
ANR	26512	AssignmentExpression	compiler_globals -> script_encoding_list = NULL		26312	0		=			
ANR	26513	PtrMemberAccess	compiler_globals -> script_encoding_list		26312	0					
ANR	26514	Identifier	compiler_globals		26312	0					
ANR	26515	Identifier	script_encoding_list		26312	1					
ANR	26516	Identifier	NULL		26312	1					
ANR	26517	ExpressionStatement	zend_interned_empty_string_init ( & compiler_globals -> empty_string )	504:1:15361:15425	26312	14	True				
ANR	26518	CallExpression	zend_interned_empty_string_init ( & compiler_globals -> empty_string )		26312	0					
ANR	26519	Callee	zend_interned_empty_string_init		26312	0					
ANR	26520	Identifier	zend_interned_empty_string_init		26312	0					
ANR	26521	ArgumentList	& compiler_globals -> empty_string		26312	1					
ANR	26522	Argument	& compiler_globals -> empty_string		26312	0					
ANR	26523	UnaryOperationExpression	& compiler_globals -> empty_string		26312	0					
ANR	26524	UnaryOperator	&		26312	0					
ANR	26525	PtrMemberAccess	compiler_globals -> empty_string		26312	1					
ANR	26526	Identifier	compiler_globals		26312	0					
ANR	26527	Identifier	empty_string		26312	1					
ANR	26528	ExpressionStatement	"memset ( compiler_globals -> one_char_string , 0 , sizeof ( compiler_globals -> one_char_string ) )"	506:1:15429:15516	26312	15	True				
ANR	26529	CallExpression	"memset ( compiler_globals -> one_char_string , 0 , sizeof ( compiler_globals -> one_char_string ) )"		26312	0					
ANR	26530	Callee	memset		26312	0					
ANR	26531	Identifier	memset		26312	0					
ANR	26532	ArgumentList	compiler_globals -> one_char_string		26312	1					
ANR	26533	Argument	compiler_globals -> one_char_string		26312	0					
ANR	26534	PtrMemberAccess	compiler_globals -> one_char_string		26312	0					
ANR	26535	Identifier	compiler_globals		26312	0					
ANR	26536	Identifier	one_char_string		26312	1					
ANR	26537	Argument	0		26312	1					
ANR	26538	PrimaryExpression	0		26312	0					
ANR	26539	Argument	sizeof ( compiler_globals -> one_char_string )		26312	2					
ANR	26540	SizeofExpression	sizeof ( compiler_globals -> one_char_string )		26312	0					
ANR	26541	Sizeof	sizeof		26312	0					
ANR	26542	PtrMemberAccess	compiler_globals -> one_char_string		26312	1					
ANR	26543	Identifier	compiler_globals		26312	0					
ANR	26544	Identifier	one_char_string		26312	1					
ANR	26545	ReturnType	static void		26312	1					
ANR	26546	Identifier	compiler_globals_ctor		26312	2					
ANR	26547	ParameterList	zend_compiler_globals * compiler_globals		26312	3					
ANR	26548	Parameter	zend_compiler_globals * compiler_globals	478:34:14093:14131	26312	0	True				
ANR	26549	ParameterType	zend_compiler_globals *		26312	0					
ANR	26550	Identifier	compiler_globals		26312	1					
ANR	26551	CFGEntryNode	ENTRY		26312		True				
ANR	26552	CFGExitNode	EXIT		26312		True				
ANR	26553	Symbol	ZEND_FUNCTION_DTOR		26312						
ANR	26554	Symbol	malloc		26312						
ANR	26555	Symbol	NULL		26312						
ANR	26556	Symbol	global_auto_globals_table		26312						
ANR	26557	Symbol	compiler_globals -> script_encoding_list		26312						
ANR	26558	Symbol	ZEND_CLASS_DTOR		26312						
ANR	26559	Symbol	zend_hash_num_elements		26312						
ANR	26560	Symbol	auto_global_dtor		26312						
ANR	26561	Symbol	compiler_globals -> auto_globals		26312						
ANR	26562	Symbol	zend_class_add_ref		26312						
ANR	26563	Symbol	compiler_globals -> compiled_filename		26312						
ANR	26564	Symbol	calloc		26312						
ANR	26565	Symbol	* compiler_globals		26312						
ANR	26566	Symbol	compiler_globals		26312						
ANR	26567	Symbol	compiler_globals -> class_table		26312						
ANR	26568	Symbol	compiler_globals -> static_members_table		26312						
ANR	26569	Symbol	auto_global_copy_ctor		26312						
ANR	26570	Symbol	compiler_globals -> one_char_string		26312						
ANR	26571	Symbol	compiler_globals -> last_static_member		26312						
ANR	26572	Symbol	& compiler_globals -> empty_string		26312						
ANR	26573	Symbol	global_function_table		26312						
ANR	26574	Symbol	global_class_table		26312						
ANR	26575	Symbol	function_copy_ctor		26312						
ANR	26576	Symbol	compiler_globals -> function_table		26312						
ANR	26577	Function	compiler_globals_dtor	510:0:15531:16421							
ANR	26578	FunctionDef	compiler_globals_dtor (zend_compiler_globals * compiler_globals)		26577	0					
ANR	26579	CompoundStatement		511:0:15616:16421	26577	0					
ANR	26580	IfStatement	if ( compiler_globals -> function_table != GLOBAL_FUNCTION_TABLE )		26577	0					
ANR	26581	Condition	compiler_globals -> function_table != GLOBAL_FUNCTION_TABLE	512:5:15623:15679	26577	0	True				
ANR	26582	EqualityExpression	compiler_globals -> function_table != GLOBAL_FUNCTION_TABLE		26577	0		!=			
ANR	26583	PtrMemberAccess	compiler_globals -> function_table		26577	0					
ANR	26584	Identifier	compiler_globals		26577	0					
ANR	26585	Identifier	function_table		26577	1					
ANR	26586	Identifier	GLOBAL_FUNCTION_TABLE		26577	1					
ANR	26587	CompoundStatement		2:64:65:65	26577	1					
ANR	26588	ExpressionStatement	zend_hash_destroy ( compiler_globals -> function_table )	513:2:15686:15737	26577	0	True				
ANR	26589	CallExpression	zend_hash_destroy ( compiler_globals -> function_table )		26577	0					
ANR	26590	Callee	zend_hash_destroy		26577	0					
ANR	26591	Identifier	zend_hash_destroy		26577	0					
ANR	26592	ArgumentList	compiler_globals -> function_table		26577	1					
ANR	26593	Argument	compiler_globals -> function_table		26577	0					
ANR	26594	PtrMemberAccess	compiler_globals -> function_table		26577	0					
ANR	26595	Identifier	compiler_globals		26577	0					
ANR	26596	Identifier	function_table		26577	1					
ANR	26597	ExpressionStatement	free ( compiler_globals -> function_table )	514:2:15741:15779	26577	1	True				
ANR	26598	CallExpression	free ( compiler_globals -> function_table )		26577	0					
ANR	26599	Callee	free		26577	0					
ANR	26600	Identifier	free		26577	0					
ANR	26601	ArgumentList	compiler_globals -> function_table		26577	1					
ANR	26602	Argument	compiler_globals -> function_table		26577	0					
ANR	26603	PtrMemberAccess	compiler_globals -> function_table		26577	0					
ANR	26604	Identifier	compiler_globals		26577	0					
ANR	26605	Identifier	function_table		26577	1					
ANR	26606	IfStatement	if ( compiler_globals -> class_table != GLOBAL_CLASS_TABLE )		26577	1					
ANR	26607	Condition	compiler_globals -> class_table != GLOBAL_CLASS_TABLE	516:5:15789:15839	26577	0	True				
ANR	26608	EqualityExpression	compiler_globals -> class_table != GLOBAL_CLASS_TABLE		26577	0		!=			
ANR	26609	PtrMemberAccess	compiler_globals -> class_table		26577	0					
ANR	26610	Identifier	compiler_globals		26577	0					
ANR	26611	Identifier	class_table		26577	1					
ANR	26612	Identifier	GLOBAL_CLASS_TABLE		26577	1					
ANR	26613	CompoundStatement		6:58:225:225	26577	1					
ANR	26614	ExpressionStatement	zend_hash_destroy ( compiler_globals -> class_table )	517:2:15846:15894	26577	0	True				
ANR	26615	CallExpression	zend_hash_destroy ( compiler_globals -> class_table )		26577	0					
ANR	26616	Callee	zend_hash_destroy		26577	0					
ANR	26617	Identifier	zend_hash_destroy		26577	0					
ANR	26618	ArgumentList	compiler_globals -> class_table		26577	1					
ANR	26619	Argument	compiler_globals -> class_table		26577	0					
ANR	26620	PtrMemberAccess	compiler_globals -> class_table		26577	0					
ANR	26621	Identifier	compiler_globals		26577	0					
ANR	26622	Identifier	class_table		26577	1					
ANR	26623	ExpressionStatement	free ( compiler_globals -> class_table )	518:2:15898:15933	26577	1	True				
ANR	26624	CallExpression	free ( compiler_globals -> class_table )		26577	0					
ANR	26625	Callee	free		26577	0					
ANR	26626	Identifier	free		26577	0					
ANR	26627	ArgumentList	compiler_globals -> class_table		26577	1					
ANR	26628	Argument	compiler_globals -> class_table		26577	0					
ANR	26629	PtrMemberAccess	compiler_globals -> class_table		26577	0					
ANR	26630	Identifier	compiler_globals		26577	0					
ANR	26631	Identifier	class_table		26577	1					
ANR	26632	IfStatement	if ( compiler_globals -> auto_globals != GLOBAL_AUTO_GLOBALS_TABLE )		26577	2					
ANR	26633	Condition	compiler_globals -> auto_globals != GLOBAL_AUTO_GLOBALS_TABLE	520:5:15943:16001	26577	0	True				
ANR	26634	EqualityExpression	compiler_globals -> auto_globals != GLOBAL_AUTO_GLOBALS_TABLE		26577	0		!=			
ANR	26635	PtrMemberAccess	compiler_globals -> auto_globals		26577	0					
ANR	26636	Identifier	compiler_globals		26577	0					
ANR	26637	Identifier	auto_globals		26577	1					
ANR	26638	Identifier	GLOBAL_AUTO_GLOBALS_TABLE		26577	1					
ANR	26639	CompoundStatement		10:66:387:387	26577	1					
ANR	26640	ExpressionStatement	zend_hash_destroy ( compiler_globals -> auto_globals )	521:2:16008:16057	26577	0	True				
ANR	26641	CallExpression	zend_hash_destroy ( compiler_globals -> auto_globals )		26577	0					
ANR	26642	Callee	zend_hash_destroy		26577	0					
ANR	26643	Identifier	zend_hash_destroy		26577	0					
ANR	26644	ArgumentList	compiler_globals -> auto_globals		26577	1					
ANR	26645	Argument	compiler_globals -> auto_globals		26577	0					
ANR	26646	PtrMemberAccess	compiler_globals -> auto_globals		26577	0					
ANR	26647	Identifier	compiler_globals		26577	0					
ANR	26648	Identifier	auto_globals		26577	1					
ANR	26649	ExpressionStatement	free ( compiler_globals -> auto_globals )	522:2:16061:16097	26577	1	True				
ANR	26650	CallExpression	free ( compiler_globals -> auto_globals )		26577	0					
ANR	26651	Callee	free		26577	0					
ANR	26652	Identifier	free		26577	0					
ANR	26653	ArgumentList	compiler_globals -> auto_globals		26577	1					
ANR	26654	Argument	compiler_globals -> auto_globals		26577	0					
ANR	26655	PtrMemberAccess	compiler_globals -> auto_globals		26577	0					
ANR	26656	Identifier	compiler_globals		26577	0					
ANR	26657	Identifier	auto_globals		26577	1					
ANR	26658	IfStatement	if ( compiler_globals -> static_members_table )		26577	3					
ANR	26659	Condition	compiler_globals -> static_members_table	524:5:16107:16144	26577	0	True				
ANR	26660	PtrMemberAccess	compiler_globals -> static_members_table		26577	0					
ANR	26661	Identifier	compiler_globals		26577	0					
ANR	26662	Identifier	static_members_table		26577	1					
ANR	26663	CompoundStatement		14:45:530:530	26577	1					
ANR	26664	ExpressionStatement	free ( compiler_globals -> static_members_table )	525:2:16151:16195	26577	0	True				
ANR	26665	CallExpression	free ( compiler_globals -> static_members_table )		26577	0					
ANR	26666	Callee	free		26577	0					
ANR	26667	Identifier	free		26577	0					
ANR	26668	ArgumentList	compiler_globals -> static_members_table		26577	1					
ANR	26669	Argument	compiler_globals -> static_members_table		26577	0					
ANR	26670	PtrMemberAccess	compiler_globals -> static_members_table		26577	0					
ANR	26671	Identifier	compiler_globals		26577	0					
ANR	26672	Identifier	static_members_table		26577	1					
ANR	26673	IfStatement	if ( compiler_globals -> script_encoding_list )		26577	4					
ANR	26674	Condition	compiler_globals -> script_encoding_list	527:5:16205:16242	26577	0	True				
ANR	26675	PtrMemberAccess	compiler_globals -> script_encoding_list		26577	0					
ANR	26676	Identifier	compiler_globals		26577	0					
ANR	26677	Identifier	script_encoding_list		26577	1					
ANR	26678	CompoundStatement		17:45:628:628	26577	1					
ANR	26679	ExpressionStatement	"pefree ( ( char * ) compiler_globals -> script_encoding_list , 1 )"	528:2:16249:16305	26577	0	True				
ANR	26680	CallExpression	"pefree ( ( char * ) compiler_globals -> script_encoding_list , 1 )"		26577	0					
ANR	26681	Callee	pefree		26577	0					
ANR	26682	Identifier	pefree		26577	0					
ANR	26683	ArgumentList	( char * ) compiler_globals -> script_encoding_list		26577	1					
ANR	26684	Argument	( char * ) compiler_globals -> script_encoding_list		26577	0					
ANR	26685	CastExpression	( char * ) compiler_globals -> script_encoding_list		26577	0					
ANR	26686	CastTarget	char *		26577	0					
ANR	26687	PtrMemberAccess	compiler_globals -> script_encoding_list		26577	1					
ANR	26688	Identifier	compiler_globals		26577	0					
ANR	26689	Identifier	script_encoding_list		26577	1					
ANR	26690	Argument	1		26577	1					
ANR	26691	PrimaryExpression	1		26577	0					
ANR	26692	ExpressionStatement	compiler_globals -> last_static_member = 0	530:1:16311:16351	26577	5	True				
ANR	26693	AssignmentExpression	compiler_globals -> last_static_member = 0		26577	0		=			
ANR	26694	PtrMemberAccess	compiler_globals -> last_static_member		26577	0					
ANR	26695	Identifier	compiler_globals		26577	0					
ANR	26696	Identifier	last_static_member		26577	1					
ANR	26697	PrimaryExpression	0		26577	1					
ANR	26698	ExpressionStatement	zend_interned_empty_string_free ( & compiler_globals -> empty_string )	532:1:16355:16419	26577	6	True				
ANR	26699	CallExpression	zend_interned_empty_string_free ( & compiler_globals -> empty_string )		26577	0					
ANR	26700	Callee	zend_interned_empty_string_free		26577	0					
ANR	26701	Identifier	zend_interned_empty_string_free		26577	0					
ANR	26702	ArgumentList	& compiler_globals -> empty_string		26577	1					
ANR	26703	Argument	& compiler_globals -> empty_string		26577	0					
ANR	26704	UnaryOperationExpression	& compiler_globals -> empty_string		26577	0					
ANR	26705	UnaryOperator	&		26577	0					
ANR	26706	PtrMemberAccess	compiler_globals -> empty_string		26577	1					
ANR	26707	Identifier	compiler_globals		26577	0					
ANR	26708	Identifier	empty_string		26577	1					
ANR	26709	ReturnType	static void		26577	1					
ANR	26710	Identifier	compiler_globals_dtor		26577	2					
ANR	26711	ParameterList	zend_compiler_globals * compiler_globals		26577	3					
ANR	26712	Parameter	zend_compiler_globals * compiler_globals	510:34:15565:15603	26577	0	True				
ANR	26713	ParameterType	zend_compiler_globals *		26577	0					
ANR	26714	Identifier	compiler_globals		26577	1					
ANR	26715	CFGEntryNode	ENTRY		26577		True				
ANR	26716	CFGExitNode	EXIT		26577		True				
ANR	26717	Symbol	compiler_globals -> class_table		26577						
ANR	26718	Symbol	compiler_globals -> static_members_table		26577						
ANR	26719	Symbol	compiler_globals -> script_encoding_list		26577						
ANR	26720	Symbol	compiler_globals -> last_static_member		26577						
ANR	26721	Symbol	compiler_globals -> auto_globals		26577						
ANR	26722	Symbol	& compiler_globals -> empty_string		26577						
ANR	26723	Symbol	GLOBAL_AUTO_GLOBALS_TABLE		26577						
ANR	26724	Symbol	GLOBAL_FUNCTION_TABLE		26577						
ANR	26725	Symbol	* compiler_globals		26577						
ANR	26726	Symbol	compiler_globals -> function_table		26577						
ANR	26727	Symbol	compiler_globals		26577						
ANR	26728	Symbol	GLOBAL_CLASS_TABLE		26577						
ANR	26729	Function	executor_globals_ctor	536:0:16434:17559							
ANR	26730	FunctionDef	executor_globals_ctor (zend_executor_globals * executor_globals)		26729	0					
ANR	26731	CompoundStatement		537:0:16519:17559	26729	0					
ANR	26732	ExpressionStatement	ZEND_TSRMLS_CACHE_UPDATE ( )	538:1:16522:16548	26729	0	True				
ANR	26733	CallExpression	ZEND_TSRMLS_CACHE_UPDATE ( )		26729	0					
ANR	26734	Callee	ZEND_TSRMLS_CACHE_UPDATE		26729	0					
ANR	26735	Identifier	ZEND_TSRMLS_CACHE_UPDATE		26729	0					
ANR	26736	ArgumentList			26729	1					
ANR	26737	ExpressionStatement	zend_startup_constants ( )	540:1:16552:16576	26729	1	True				
ANR	26738	CallExpression	zend_startup_constants ( )		26729	0					
ANR	26739	Callee	zend_startup_constants		26729	0					
ANR	26740	Identifier	zend_startup_constants		26729	0					
ANR	26741	ArgumentList			26729	1					
ANR	26742	ExpressionStatement	"zend_copy_constants ( EG ( zend_constants ) , GLOBAL_CONSTANTS_TABLE )"	541:1:16579:16642	26729	2	True				
ANR	26743	CallExpression	"zend_copy_constants ( EG ( zend_constants ) , GLOBAL_CONSTANTS_TABLE )"		26729	0					
ANR	26744	Callee	zend_copy_constants		26729	0					
ANR	26745	Identifier	zend_copy_constants		26729	0					
ANR	26746	ArgumentList	EG ( zend_constants )		26729	1					
ANR	26747	Argument	EG ( zend_constants )		26729	0					
ANR	26748	CallExpression	EG ( zend_constants )		26729	0					
ANR	26749	Callee	EG		26729	0					
ANR	26750	Identifier	EG		26729	0					
ANR	26751	ArgumentList	zend_constants		26729	1					
ANR	26752	Argument	zend_constants		26729	0					
ANR	26753	Identifier	zend_constants		26729	0					
ANR	26754	Argument	GLOBAL_CONSTANTS_TABLE		26729	1					
ANR	26755	Identifier	GLOBAL_CONSTANTS_TABLE		26729	0					
ANR	26756	ExpressionStatement	zend_init_rsrc_plist ( )	542:1:16645:16667	26729	3	True				
ANR	26757	CallExpression	zend_init_rsrc_plist ( )		26729	0					
ANR	26758	Callee	zend_init_rsrc_plist		26729	0					
ANR	26759	Identifier	zend_init_rsrc_plist		26729	0					
ANR	26760	ArgumentList			26729	1					
ANR	26761	ExpressionStatement	zend_init_exception_op ( )	543:1:16670:16694	26729	4	True				
ANR	26762	CallExpression	zend_init_exception_op ( )		26729	0					
ANR	26763	Callee	zend_init_exception_op		26729	0					
ANR	26764	Identifier	zend_init_exception_op		26729	0					
ANR	26765	ArgumentList			26729	1					
ANR	26766	ExpressionStatement	zend_init_call_trampoline_op ( )	544:1:16697:16727	26729	5	True				
ANR	26767	CallExpression	zend_init_call_trampoline_op ( )		26729	0					
ANR	26768	Callee	zend_init_call_trampoline_op		26729	0					
ANR	26769	Identifier	zend_init_call_trampoline_op		26729	0					
ANR	26770	ArgumentList			26729	1					
ANR	26771	ExpressionStatement	"memset ( & executor_globals -> trampoline , 0 , sizeof ( zend_op_array ) )"	545:1:16730:16793	26729	6	True				
ANR	26772	CallExpression	"memset ( & executor_globals -> trampoline , 0 , sizeof ( zend_op_array ) )"		26729	0					
ANR	26773	Callee	memset		26729	0					
ANR	26774	Identifier	memset		26729	0					
ANR	26775	ArgumentList	& executor_globals -> trampoline		26729	1					
ANR	26776	Argument	& executor_globals -> trampoline		26729	0					
ANR	26777	UnaryOperationExpression	& executor_globals -> trampoline		26729	0					
ANR	26778	UnaryOperator	&		26729	0					
ANR	26779	PtrMemberAccess	executor_globals -> trampoline		26729	1					
ANR	26780	Identifier	executor_globals		26729	0					
ANR	26781	Identifier	trampoline		26729	1					
ANR	26782	Argument	0		26729	1					
ANR	26783	PrimaryExpression	0		26729	0					
ANR	26784	Argument	sizeof ( zend_op_array )		26729	2					
ANR	26785	SizeofExpression	sizeof ( zend_op_array )		26729	0					
ANR	26786	Sizeof	sizeof		26729	0					
ANR	26787	SizeofOperand	zend_op_array		26729	1					
ANR	26788	ExpressionStatement	executor_globals -> lambda_count = 0	546:1:16796:16830	26729	7	True				
ANR	26789	AssignmentExpression	executor_globals -> lambda_count = 0		26729	0		=			
ANR	26790	PtrMemberAccess	executor_globals -> lambda_count		26729	0					
ANR	26791	Identifier	executor_globals		26729	0					
ANR	26792	Identifier	lambda_count		26729	1					
ANR	26793	PrimaryExpression	0		26729	1					
ANR	26794	ExpressionStatement	ZVAL_UNDEF ( & executor_globals -> user_error_handler )	547:1:16833:16882	26729	8	True				
ANR	26795	CallExpression	ZVAL_UNDEF ( & executor_globals -> user_error_handler )		26729	0					
ANR	26796	Callee	ZVAL_UNDEF		26729	0					
ANR	26797	Identifier	ZVAL_UNDEF		26729	0					
ANR	26798	ArgumentList	& executor_globals -> user_error_handler		26729	1					
ANR	26799	Argument	& executor_globals -> user_error_handler		26729	0					
ANR	26800	UnaryOperationExpression	& executor_globals -> user_error_handler		26729	0					
ANR	26801	UnaryOperator	&		26729	0					
ANR	26802	PtrMemberAccess	executor_globals -> user_error_handler		26729	1					
ANR	26803	Identifier	executor_globals		26729	0					
ANR	26804	Identifier	user_error_handler		26729	1					
ANR	26805	ExpressionStatement	ZVAL_UNDEF ( & executor_globals -> user_exception_handler )	548:1:16885:16938	26729	9	True				
ANR	26806	CallExpression	ZVAL_UNDEF ( & executor_globals -> user_exception_handler )		26729	0					
ANR	26807	Callee	ZVAL_UNDEF		26729	0					
ANR	26808	Identifier	ZVAL_UNDEF		26729	0					
ANR	26809	ArgumentList	& executor_globals -> user_exception_handler		26729	1					
ANR	26810	Argument	& executor_globals -> user_exception_handler		26729	0					
ANR	26811	UnaryOperationExpression	& executor_globals -> user_exception_handler		26729	0					
ANR	26812	UnaryOperator	&		26729	0					
ANR	26813	PtrMemberAccess	executor_globals -> user_exception_handler		26729	1					
ANR	26814	Identifier	executor_globals		26729	0					
ANR	26815	Identifier	user_exception_handler		26729	1					
ANR	26816	ExpressionStatement	executor_globals -> in_autoload = NULL	549:1:16941:16977	26729	10	True				
ANR	26817	AssignmentExpression	executor_globals -> in_autoload = NULL		26729	0		=			
ANR	26818	PtrMemberAccess	executor_globals -> in_autoload		26729	0					
ANR	26819	Identifier	executor_globals		26729	0					
ANR	26820	Identifier	in_autoload		26729	1					
ANR	26821	Identifier	NULL		26729	1					
ANR	26822	ExpressionStatement	executor_globals -> current_execute_data = NULL	550:1:16980:17025	26729	11	True				
ANR	26823	AssignmentExpression	executor_globals -> current_execute_data = NULL		26729	0		=			
ANR	26824	PtrMemberAccess	executor_globals -> current_execute_data		26729	0					
ANR	26825	Identifier	executor_globals		26729	0					
ANR	26826	Identifier	current_execute_data		26729	1					
ANR	26827	Identifier	NULL		26729	1					
ANR	26828	ExpressionStatement	executor_globals -> current_module = NULL	551:1:17028:17067	26729	12	True				
ANR	26829	AssignmentExpression	executor_globals -> current_module = NULL		26729	0		=			
ANR	26830	PtrMemberAccess	executor_globals -> current_module		26729	0					
ANR	26831	Identifier	executor_globals		26729	0					
ANR	26832	Identifier	current_module		26729	1					
ANR	26833	Identifier	NULL		26729	1					
ANR	26834	ExpressionStatement	executor_globals -> exit_status = 0	552:1:17070:17103	26729	13	True				
ANR	26835	AssignmentExpression	executor_globals -> exit_status = 0		26729	0		=			
ANR	26836	PtrMemberAccess	executor_globals -> exit_status		26729	0					
ANR	26837	Identifier	executor_globals		26729	0					
ANR	26838	Identifier	exit_status		26729	1					
ANR	26839	PrimaryExpression	0		26729	1					
ANR	26840	ExpressionStatement	executor_globals -> saved_fpu_cw = 0	554:1:17124:17158	26729	14	True				
ANR	26841	AssignmentExpression	executor_globals -> saved_fpu_cw = 0		26729	0		=			
ANR	26842	PtrMemberAccess	executor_globals -> saved_fpu_cw		26729	0					
ANR	26843	Identifier	executor_globals		26729	0					
ANR	26844	Identifier	saved_fpu_cw		26729	1					
ANR	26845	PrimaryExpression	0		26729	1					
ANR	26846	ExpressionStatement	executor_globals -> saved_fpu_cw_ptr = NULL	556:1:17168:17209	26729	15	True				
ANR	26847	AssignmentExpression	executor_globals -> saved_fpu_cw_ptr = NULL		26729	0		=			
ANR	26848	PtrMemberAccess	executor_globals -> saved_fpu_cw_ptr		26729	0					
ANR	26849	Identifier	executor_globals		26729	0					
ANR	26850	Identifier	saved_fpu_cw_ptr		26729	1					
ANR	26851	Identifier	NULL		26729	1					
ANR	26852	ExpressionStatement	executor_globals -> active = 0	557:1:17212:17240	26729	16	True				
ANR	26853	AssignmentExpression	executor_globals -> active = 0		26729	0		=			
ANR	26854	PtrMemberAccess	executor_globals -> active		26729	0					
ANR	26855	Identifier	executor_globals		26729	0					
ANR	26856	Identifier	active		26729	1					
ANR	26857	PrimaryExpression	0		26729	1					
ANR	26858	ExpressionStatement	executor_globals -> bailout = NULL	558:1:17243:17275	26729	17	True				
ANR	26859	AssignmentExpression	executor_globals -> bailout = NULL		26729	0		=			
ANR	26860	PtrMemberAccess	executor_globals -> bailout		26729	0					
ANR	26861	Identifier	executor_globals		26729	0					
ANR	26862	Identifier	bailout		26729	1					
ANR	26863	Identifier	NULL		26729	1					
ANR	26864	ExpressionStatement	executor_globals -> error_handling = EH_NORMAL	559:1:17278:17323	26729	18	True				
ANR	26865	AssignmentExpression	executor_globals -> error_handling = EH_NORMAL		26729	0		=			
ANR	26866	PtrMemberAccess	executor_globals -> error_handling		26729	0					
ANR	26867	Identifier	executor_globals		26729	0					
ANR	26868	Identifier	error_handling		26729	1					
ANR	26869	Identifier	EH_NORMAL		26729	1					
ANR	26870	ExpressionStatement	executor_globals -> exception_class = NULL	560:1:17326:17366	26729	19	True				
ANR	26871	AssignmentExpression	executor_globals -> exception_class = NULL		26729	0		=			
ANR	26872	PtrMemberAccess	executor_globals -> exception_class		26729	0					
ANR	26873	Identifier	executor_globals		26729	0					
ANR	26874	Identifier	exception_class		26729	1					
ANR	26875	Identifier	NULL		26729	1					
ANR	26876	ExpressionStatement	executor_globals -> exception = NULL	561:1:17369:17403	26729	20	True				
ANR	26877	AssignmentExpression	executor_globals -> exception = NULL		26729	0		=			
ANR	26878	PtrMemberAccess	executor_globals -> exception		26729	0					
ANR	26879	Identifier	executor_globals		26729	0					
ANR	26880	Identifier	exception		26729	1					
ANR	26881	Identifier	NULL		26729	1					
ANR	26882	ExpressionStatement	executor_globals -> objects_store . object_buckets = NULL	562:1:17406:17459	26729	21	True				
ANR	26883	AssignmentExpression	executor_globals -> objects_store . object_buckets = NULL		26729	0		=			
ANR	26884	MemberAccess	executor_globals -> objects_store . object_buckets		26729	0					
ANR	26885	PtrMemberAccess	executor_globals -> objects_store		26729	0					
ANR	26886	Identifier	executor_globals		26729	0					
ANR	26887	Identifier	objects_store		26729	1					
ANR	26888	Identifier	object_buckets		26729	1					
ANR	26889	Identifier	NULL		26729	1					
ANR	26890	ExpressionStatement	zend_get_windows_version_info ( & executor_globals -> windows_version_info )	564:1:17480:17550	26729	22	True				
ANR	26891	CallExpression	zend_get_windows_version_info ( & executor_globals -> windows_version_info )		26729	0					
ANR	26892	Callee	zend_get_windows_version_info		26729	0					
ANR	26893	Identifier	zend_get_windows_version_info		26729	0					
ANR	26894	ArgumentList	& executor_globals -> windows_version_info		26729	1					
ANR	26895	Argument	& executor_globals -> windows_version_info		26729	0					
ANR	26896	UnaryOperationExpression	& executor_globals -> windows_version_info		26729	0					
ANR	26897	UnaryOperator	&		26729	0					
ANR	26898	PtrMemberAccess	executor_globals -> windows_version_info		26729	1					
ANR	26899	Identifier	executor_globals		26729	0					
ANR	26900	Identifier	windows_version_info		26729	1					
ANR	26901	ReturnType	static void		26729	1					
ANR	26902	Identifier	executor_globals_ctor		26729	2					
ANR	26903	ParameterList	zend_executor_globals * executor_globals		26729	3					
ANR	26904	Parameter	zend_executor_globals * executor_globals	536:34:16468:16506	26729	0	True				
ANR	26905	ParameterType	zend_executor_globals *		26729	0					
ANR	26906	Identifier	executor_globals		26729	1					
ANR	26907	CFGEntryNode	ENTRY		26729		True				
ANR	26908	CFGExitNode	EXIT		26729		True				
ANR	26909	Symbol	GLOBAL_CONSTANTS_TABLE		26729						
ANR	26910	Symbol	executor_globals -> objects_store . object_buckets		26729						
ANR	26911	Symbol	& executor_globals -> windows_version_info		26729						
ANR	26912	Symbol	executor_globals -> active		26729						
ANR	26913	Symbol	executor_globals -> in_autoload		26729						
ANR	26914	Symbol	EH_NORMAL		26729						
ANR	26915	Symbol	zend_constants		26729						
ANR	26916	Symbol	executor_globals -> error_handling		26729						
ANR	26917	Symbol	* executor_globals		26729						
ANR	26918	Symbol	executor_globals -> exit_status		26729						
ANR	26919	Symbol	EG		26729						
ANR	26920	Symbol	& executor_globals -> user_exception_handler		26729						
ANR	26921	Symbol	NULL		26729						
ANR	26922	Symbol	executor_globals -> current_execute_data		26729						
ANR	26923	Symbol	executor_globals -> exception_class		26729						
ANR	26924	Symbol	executor_globals -> exception		26729						
ANR	26925	Symbol	executor_globals -> saved_fpu_cw		26729						
ANR	26926	Symbol	& executor_globals -> trampoline		26729						
ANR	26927	Symbol	& executor_globals -> user_error_handler		26729						
ANR	26928	Symbol	executor_globals -> bailout		26729						
ANR	26929	Symbol	executor_globals -> objects_store		26729						
ANR	26930	Symbol	executor_globals -> lambda_count		26729						
ANR	26931	Symbol	executor_globals		26729						
ANR	26932	Symbol	executor_globals -> current_module		26729						
ANR	26933	Symbol	executor_globals -> saved_fpu_cw_ptr		26729						
ANR	26934	Function	executor_globals_dtor	569:0:17572:18011							
ANR	26935	FunctionDef	executor_globals_dtor (zend_executor_globals * executor_globals)		26934	0					
ANR	26936	CompoundStatement		570:0:17657:18011	26934	0					
ANR	26937	ExpressionStatement	zend_ini_dtor ( executor_globals -> ini_directives )	571:1:17660:17707	26934	0	True				
ANR	26938	CallExpression	zend_ini_dtor ( executor_globals -> ini_directives )		26934	0					
ANR	26939	Callee	zend_ini_dtor		26934	0					
ANR	26940	Identifier	zend_ini_dtor		26934	0					
ANR	26941	ArgumentList	executor_globals -> ini_directives		26934	1					
ANR	26942	Argument	executor_globals -> ini_directives		26934	0					
ANR	26943	PtrMemberAccess	executor_globals -> ini_directives		26934	0					
ANR	26944	Identifier	executor_globals		26934	0					
ANR	26945	Identifier	ini_directives		26934	1					
ANR	26946	IfStatement	if ( & executor_globals -> persistent_list != global_persistent_list )		26934	1					
ANR	26947	Condition	& executor_globals -> persistent_list != global_persistent_list	573:5:17715:17774	26934	0	True				
ANR	26948	EqualityExpression	& executor_globals -> persistent_list != global_persistent_list		26934	0		!=			
ANR	26949	UnaryOperationExpression	& executor_globals -> persistent_list		26934	0					
ANR	26950	UnaryOperator	&		26934	0					
ANR	26951	PtrMemberAccess	executor_globals -> persistent_list		26934	1					
ANR	26952	Identifier	executor_globals		26934	0					
ANR	26953	Identifier	persistent_list		26934	1					
ANR	26954	Identifier	global_persistent_list		26934	1					
ANR	26955	CompoundStatement		4:67:119:119	26934	1					
ANR	26956	ExpressionStatement	zend_destroy_rsrc_list ( & executor_globals -> persistent_list )	574:2:17781:17839	26934	0	True				
ANR	26957	CallExpression	zend_destroy_rsrc_list ( & executor_globals -> persistent_list )		26934	0					
ANR	26958	Callee	zend_destroy_rsrc_list		26934	0					
ANR	26959	Identifier	zend_destroy_rsrc_list		26934	0					
ANR	26960	ArgumentList	& executor_globals -> persistent_list		26934	1					
ANR	26961	Argument	& executor_globals -> persistent_list		26934	0					
ANR	26962	UnaryOperationExpression	& executor_globals -> persistent_list		26934	0					
ANR	26963	UnaryOperator	&		26934	0					
ANR	26964	PtrMemberAccess	executor_globals -> persistent_list		26934	1					
ANR	26965	Identifier	executor_globals		26934	0					
ANR	26966	Identifier	persistent_list		26934	1					
ANR	26967	IfStatement	if ( executor_globals -> zend_constants != GLOBAL_CONSTANTS_TABLE )		26934	2					
ANR	26968	Condition	executor_globals -> zend_constants != GLOBAL_CONSTANTS_TABLE	576:5:17849:17906	26934	0	True				
ANR	26969	EqualityExpression	executor_globals -> zend_constants != GLOBAL_CONSTANTS_TABLE		26934	0		!=			
ANR	26970	PtrMemberAccess	executor_globals -> zend_constants		26934	0					
ANR	26971	Identifier	executor_globals		26934	0					
ANR	26972	Identifier	zend_constants		26934	1					
ANR	26973	Identifier	GLOBAL_CONSTANTS_TABLE		26934	1					
ANR	26974	CompoundStatement		7:65:251:251	26934	1					
ANR	26975	ExpressionStatement	zend_hash_destroy ( executor_globals -> zend_constants )	577:2:17913:17964	26934	0	True				
ANR	26976	CallExpression	zend_hash_destroy ( executor_globals -> zend_constants )		26934	0					
ANR	26977	Callee	zend_hash_destroy		26934	0					
ANR	26978	Identifier	zend_hash_destroy		26934	0					
ANR	26979	ArgumentList	executor_globals -> zend_constants		26934	1					
ANR	26980	Argument	executor_globals -> zend_constants		26934	0					
ANR	26981	PtrMemberAccess	executor_globals -> zend_constants		26934	0					
ANR	26982	Identifier	executor_globals		26934	0					
ANR	26983	Identifier	zend_constants		26934	1					
ANR	26984	ExpressionStatement	free ( executor_globals -> zend_constants )	578:2:17968:18006	26934	1	True				
ANR	26985	CallExpression	free ( executor_globals -> zend_constants )		26934	0					
ANR	26986	Callee	free		26934	0					
ANR	26987	Identifier	free		26934	0					
ANR	26988	ArgumentList	executor_globals -> zend_constants		26934	1					
ANR	26989	Argument	executor_globals -> zend_constants		26934	0					
ANR	26990	PtrMemberAccess	executor_globals -> zend_constants		26934	0					
ANR	26991	Identifier	executor_globals		26934	0					
ANR	26992	Identifier	zend_constants		26934	1					
ANR	26993	ReturnType	static void		26934	1					
ANR	26994	Identifier	executor_globals_dtor		26934	2					
ANR	26995	ParameterList	zend_executor_globals * executor_globals		26934	3					
ANR	26996	Parameter	zend_executor_globals * executor_globals	569:34:17606:17644	26934	0	True				
ANR	26997	ParameterType	zend_executor_globals *		26934	0					
ANR	26998	Identifier	executor_globals		26934	1					
ANR	26999	CFGEntryNode	ENTRY		26934		True				
ANR	27000	CFGExitNode	EXIT		26934		True				
ANR	27001	Symbol	executor_globals -> ini_directives		26934						
ANR	27002	Symbol	GLOBAL_CONSTANTS_TABLE		26934						
ANR	27003	Symbol	executor_globals -> zend_constants		26934						
ANR	27004	Symbol	executor_globals		26934						
ANR	27005	Symbol	global_persistent_list		26934						
ANR	27006	Symbol	& executor_globals -> persistent_list		26934						
ANR	27007	Symbol	* executor_globals		26934						
ANR	27008	Function	zend_new_thread_end_handler	583:0:18024:18196							
ANR	27009	FunctionDef	zend_new_thread_end_handler (THREAD_T thread_id)		27008	0					
ANR	27010	CompoundStatement		584:0:18094:18196	27008	0					
ANR	27011	IfStatement	if ( zend_copy_ini_directives ( ) == SUCCESS )		27008	0					
ANR	27012	Condition	zend_copy_ini_directives ( ) == SUCCESS	585:5:18101:18137	27008	0	True				
ANR	27013	EqualityExpression	zend_copy_ini_directives ( ) == SUCCESS		27008	0		==			
ANR	27014	CallExpression	zend_copy_ini_directives ( )		27008	0					
ANR	27015	Callee	zend_copy_ini_directives		27008	0					
ANR	27016	Identifier	zend_copy_ini_directives		27008	0					
ANR	27017	ArgumentList			27008	1					
ANR	27018	Identifier	SUCCESS		27008	1					
ANR	27019	CompoundStatement		2:44:45:45	27008	1					
ANR	27020	ExpressionStatement	zend_ini_refresh_caches ( ZEND_INI_STAGE_STARTUP )	586:2:18144:18191	27008	0	True				
ANR	27021	CallExpression	zend_ini_refresh_caches ( ZEND_INI_STAGE_STARTUP )		27008	0					
ANR	27022	Callee	zend_ini_refresh_caches		27008	0					
ANR	27023	Identifier	zend_ini_refresh_caches		27008	0					
ANR	27024	ArgumentList	ZEND_INI_STAGE_STARTUP		27008	1					
ANR	27025	Argument	ZEND_INI_STAGE_STARTUP		27008	0					
ANR	27026	Identifier	ZEND_INI_STAGE_STARTUP		27008	0					
ANR	27027	ReturnType	static void		27008	1					
ANR	27028	Identifier	zend_new_thread_end_handler		27008	2					
ANR	27029	ParameterList	THREAD_T thread_id		27008	3					
ANR	27030	Parameter	THREAD_T thread_id	583:40:18064:18081	27008	0	True				
ANR	27031	ParameterType	THREAD_T		27008	0					
ANR	27032	Identifier	thread_id		27008	1					
ANR	27033	CFGEntryNode	ENTRY		27008		True				
ANR	27034	CFGExitNode	EXIT		27008		True				
ANR	27035	Symbol	thread_id		27008						
ANR	27036	Symbol	zend_copy_ini_directives		27008						
ANR	27037	Symbol	SUCCESS		27008						
ANR	27038	Symbol	ZEND_INI_STAGE_STARTUP		27008						
ANR	27039	Function	ini_scanner_globals_ctor	597:0:18359:18512							
ANR	27040	FunctionDef	ini_scanner_globals_ctor (zend_ini_scanner_globals * scanner_globals_p)		27039	0					
ANR	27041	CompoundStatement		598:0:18451:18512	27039	0					
ANR	27042	ExpressionStatement	"memset ( scanner_globals_p , 0 , sizeof ( * scanner_globals_p ) )"	599:1:18454:18510	27039	0	True				
ANR	27043	CallExpression	"memset ( scanner_globals_p , 0 , sizeof ( * scanner_globals_p ) )"		27039	0					
ANR	27044	Callee	memset		27039	0					
ANR	27045	Identifier	memset		27039	0					
ANR	27046	ArgumentList	scanner_globals_p		27039	1					
ANR	27047	Argument	scanner_globals_p		27039	0					
ANR	27048	Identifier	scanner_globals_p		27039	0					
ANR	27049	Argument	0		27039	1					
ANR	27050	PrimaryExpression	0		27039	0					
ANR	27051	Argument	sizeof ( * scanner_globals_p )		27039	2					
ANR	27052	SizeofExpression	sizeof ( * scanner_globals_p )		27039	0					
ANR	27053	Sizeof	sizeof		27039	0					
ANR	27054	UnaryOperationExpression	* scanner_globals_p		27039	1					
ANR	27055	UnaryOperator	*		27039	0					
ANR	27056	Identifier	scanner_globals_p		27039	1					
ANR	27057	ReturnType	static void		27039	1					
ANR	27058	Identifier	ini_scanner_globals_ctor		27039	2					
ANR	27059	ParameterList	zend_ini_scanner_globals * scanner_globals_p		27039	3					
ANR	27060	Parameter	zend_ini_scanner_globals * scanner_globals_p	597:37:18396:18438	27039	0	True				
ANR	27061	ParameterType	zend_ini_scanner_globals *		27039	0					
ANR	27062	Identifier	scanner_globals_p		27039	1					
ANR	27063	CFGEntryNode	ENTRY		27039		True				
ANR	27064	CFGExitNode	EXIT		27039		True				
ANR	27065	Symbol	scanner_globals_p		27039						
ANR	27066	Symbol	* scanner_globals_p		27039						
ANR	27067	Function	php_scanner_globals_ctor	603:0:18525:18678							
ANR	27068	FunctionDef	php_scanner_globals_ctor (zend_php_scanner_globals * scanner_globals_p)		27067	0					
ANR	27069	CompoundStatement		604:0:18617:18678	27067	0					
ANR	27070	ExpressionStatement	"memset ( scanner_globals_p , 0 , sizeof ( * scanner_globals_p ) )"	605:1:18620:18676	27067	0	True				
ANR	27071	CallExpression	"memset ( scanner_globals_p , 0 , sizeof ( * scanner_globals_p ) )"		27067	0					
ANR	27072	Callee	memset		27067	0					
ANR	27073	Identifier	memset		27067	0					
ANR	27074	ArgumentList	scanner_globals_p		27067	1					
ANR	27075	Argument	scanner_globals_p		27067	0					
ANR	27076	Identifier	scanner_globals_p		27067	0					
ANR	27077	Argument	0		27067	1					
ANR	27078	PrimaryExpression	0		27067	0					
ANR	27079	Argument	sizeof ( * scanner_globals_p )		27067	2					
ANR	27080	SizeofExpression	sizeof ( * scanner_globals_p )		27067	0					
ANR	27081	Sizeof	sizeof		27067	0					
ANR	27082	UnaryOperationExpression	* scanner_globals_p		27067	1					
ANR	27083	UnaryOperator	*		27067	0					
ANR	27084	Identifier	scanner_globals_p		27067	1					
ANR	27085	ReturnType	static void		27067	1					
ANR	27086	Identifier	php_scanner_globals_ctor		27067	2					
ANR	27087	ParameterList	zend_php_scanner_globals * scanner_globals_p		27067	3					
ANR	27088	Parameter	zend_php_scanner_globals * scanner_globals_p	603:37:18562:18604	27067	0	True				
ANR	27089	ParameterType	zend_php_scanner_globals *		27067	0					
ANR	27090	Identifier	scanner_globals_p		27067	1					
ANR	27091	CFGEntryNode	ENTRY		27067		True				
ANR	27092	CFGExitNode	EXIT		27067		True				
ANR	27093	Symbol	scanner_globals_p		27067						
ANR	27094	Symbol	* scanner_globals_p		27067						
ANR	27095	DeclStmt									
ANR	27096	Decl							void	void ( void )	zend_init_opcodes_handlers
ANR	27097	Function	module_destructor_zval	611:0:18731:18894							
ANR	27098	FunctionDef	module_destructor_zval (zval * zv)		27097	0					
ANR	27099	CompoundStatement		612:0:18786:18894	27097	0					
ANR	27100	IdentifierDeclStatement	zend_module_entry * module = ( zend_module_entry * ) Z_PTR_P ( zv ) ;	613:1:18789:18848	27097	0	True				
ANR	27101	IdentifierDecl	* module = ( zend_module_entry * ) Z_PTR_P ( zv )		27097	0					
ANR	27102	IdentifierDeclType	zend_module_entry *		27097	0					
ANR	27103	Identifier	module		27097	1					
ANR	27104	AssignmentExpression	* module = ( zend_module_entry * ) Z_PTR_P ( zv )		27097	2		=			
ANR	27105	Identifier	module		27097	0					
ANR	27106	CastExpression	( zend_module_entry * ) Z_PTR_P ( zv )		27097	1					
ANR	27107	CastTarget	zend_module_entry *		27097	0					
ANR	27108	CallExpression	Z_PTR_P ( zv )		27097	1					
ANR	27109	Callee	Z_PTR_P		27097	0					
ANR	27110	Identifier	Z_PTR_P		27097	0					
ANR	27111	ArgumentList	zv		27097	1					
ANR	27112	Argument	zv		27097	0					
ANR	27113	Identifier	zv		27097	0					
ANR	27114	ExpressionStatement	module_destructor ( module )	615:1:18852:18877	27097	1	True				
ANR	27115	CallExpression	module_destructor ( module )		27097	0					
ANR	27116	Callee	module_destructor		27097	0					
ANR	27117	Identifier	module_destructor		27097	0					
ANR	27118	ArgumentList	module		27097	1					
ANR	27119	Argument	module		27097	0					
ANR	27120	Identifier	module		27097	0					
ANR	27121	ExpressionStatement	free ( module )	616:1:18880:18892	27097	2	True				
ANR	27122	CallExpression	free ( module )		27097	0					
ANR	27123	Callee	free		27097	0					
ANR	27124	Identifier	free		27097	0					
ANR	27125	ArgumentList	module		27097	1					
ANR	27126	Argument	module		27097	0					
ANR	27127	Identifier	module		27097	0					
ANR	27128	ReturnType	static void		27097	1					
ANR	27129	Identifier	module_destructor_zval		27097	2					
ANR	27130	ParameterList	zval * zv		27097	3					
ANR	27131	Parameter	zval * zv	611:35:18766:18773	27097	0	True				
ANR	27132	ParameterType	zval *		27097	0					
ANR	27133	Identifier	zv		27097	1					
ANR	27134	CFGEntryNode	ENTRY		27097		True				
ANR	27135	CFGExitNode	EXIT		27097		True				
ANR	27136	Symbol	Z_PTR_P		27097						
ANR	27137	Symbol	module		27097						
ANR	27138	Symbol	zv		27097						
ANR	27139	Function	php_auto_globals_create_globals	620:0:18907:19226							
ANR	27140	FunctionDef	php_auto_globals_create_globals (zend_string * name)		27139	0					
ANR	27141	CompoundStatement		621:0:18985:19226	27139	0					
ANR	27142	IdentifierDeclStatement	zval globals ;	622:1:18988:19000	27139	0	True				
ANR	27143	IdentifierDecl	globals		27139	0					
ANR	27144	IdentifierDeclType	zval		27139	0					
ANR	27145	Identifier	globals		27139	1					
ANR	27146	ExpressionStatement	"ZVAL_ARR ( & globals , & EG ( symbol_table ) )"	624:1:19004:19041	27139	1	True				
ANR	27147	CallExpression	"ZVAL_ARR ( & globals , & EG ( symbol_table ) )"		27139	0					
ANR	27148	Callee	ZVAL_ARR		27139	0					
ANR	27149	Identifier	ZVAL_ARR		27139	0					
ANR	27150	ArgumentList	& globals		27139	1					
ANR	27151	Argument	& globals		27139	0					
ANR	27152	UnaryOperationExpression	& globals		27139	0					
ANR	27153	UnaryOperator	&		27139	0					
ANR	27154	Identifier	globals		27139	1					
ANR	27155	Argument	& EG ( symbol_table )		27139	1					
ANR	27156	UnaryOperationExpression	& EG ( symbol_table )		27139	0					
ANR	27157	UnaryOperator	&		27139	0					
ANR	27158	CallExpression	EG ( symbol_table )		27139	1					
ANR	27159	Callee	EG		27139	0					
ANR	27160	Identifier	EG		27139	0					
ANR	27161	ArgumentList	symbol_table		27139	1					
ANR	27162	Argument	symbol_table		27139	0					
ANR	27163	Identifier	symbol_table		27139	0					
ANR	27164	ExpressionStatement	Z_TYPE_INFO_P ( & globals ) = IS_ARRAY | ( IS_TYPE_SYMBOLTABLE << Z_TYPE_FLAGS_SHIFT )	625:1:19044:19124	27139	2	True				
ANR	27165	AssignmentExpression	Z_TYPE_INFO_P ( & globals ) = IS_ARRAY | ( IS_TYPE_SYMBOLTABLE << Z_TYPE_FLAGS_SHIFT )		27139	0		=			
ANR	27166	CallExpression	Z_TYPE_INFO_P ( & globals )		27139	0					
ANR	27167	Callee	Z_TYPE_INFO_P		27139	0					
ANR	27168	Identifier	Z_TYPE_INFO_P		27139	0					
ANR	27169	ArgumentList	& globals		27139	1					
ANR	27170	Argument	& globals		27139	0					
ANR	27171	UnaryOperationExpression	& globals		27139	0					
ANR	27172	UnaryOperator	&		27139	0					
ANR	27173	Identifier	globals		27139	1					
ANR	27174	InclusiveOrExpression	IS_ARRAY | ( IS_TYPE_SYMBOLTABLE << Z_TYPE_FLAGS_SHIFT )		27139	1		|			
ANR	27175	Identifier	IS_ARRAY		27139	0					
ANR	27176	ShiftExpression	IS_TYPE_SYMBOLTABLE << Z_TYPE_FLAGS_SHIFT		27139	1		<<			
ANR	27177	Identifier	IS_TYPE_SYMBOLTABLE		27139	0					
ANR	27178	Identifier	Z_TYPE_FLAGS_SHIFT		27139	1					
ANR	27179	ExpressionStatement	"ZVAL_NEW_REF ( & globals , & globals )"	626:1:19127:19159	27139	3	True				
ANR	27180	CallExpression	"ZVAL_NEW_REF ( & globals , & globals )"		27139	0					
ANR	27181	Callee	ZVAL_NEW_REF		27139	0					
ANR	27182	Identifier	ZVAL_NEW_REF		27139	0					
ANR	27183	ArgumentList	& globals		27139	1					
ANR	27184	Argument	& globals		27139	0					
ANR	27185	UnaryOperationExpression	& globals		27139	0					
ANR	27186	UnaryOperator	&		27139	0					
ANR	27187	Identifier	globals		27139	1					
ANR	27188	Argument	& globals		27139	1					
ANR	27189	UnaryOperationExpression	& globals		27139	0					
ANR	27190	UnaryOperator	&		27139	0					
ANR	27191	Identifier	globals		27139	1					
ANR	27192	ExpressionStatement	"zend_hash_update ( & EG ( symbol_table ) , name , & globals )"	627:1:19162:19213	27139	4	True				
ANR	27193	CallExpression	"zend_hash_update ( & EG ( symbol_table ) , name , & globals )"		27139	0					
ANR	27194	Callee	zend_hash_update		27139	0					
ANR	27195	Identifier	zend_hash_update		27139	0					
ANR	27196	ArgumentList	& EG ( symbol_table )		27139	1					
ANR	27197	Argument	& EG ( symbol_table )		27139	0					
ANR	27198	UnaryOperationExpression	& EG ( symbol_table )		27139	0					
ANR	27199	UnaryOperator	&		27139	0					
ANR	27200	CallExpression	EG ( symbol_table )		27139	1					
ANR	27201	Callee	EG		27139	0					
ANR	27202	Identifier	EG		27139	0					
ANR	27203	ArgumentList	symbol_table		27139	1					
ANR	27204	Argument	symbol_table		27139	0					
ANR	27205	Identifier	symbol_table		27139	0					
ANR	27206	Argument	name		27139	1					
ANR	27207	Identifier	name		27139	0					
ANR	27208	Argument	& globals		27139	2					
ANR	27209	UnaryOperationExpression	& globals		27139	0					
ANR	27210	UnaryOperator	&		27139	0					
ANR	27211	Identifier	globals		27139	1					
ANR	27212	ReturnStatement	return 0 ;	628:1:19216:19224	27139	5	True				
ANR	27213	PrimaryExpression	0		27139	0					
ANR	27214	ReturnType	static zend_bool		27139	1					
ANR	27215	Identifier	php_auto_globals_create_globals		27139	2					
ANR	27216	ParameterList	zend_string * name		27139	3					
ANR	27217	Parameter	zend_string * name	620:49:18956:18972	27139	0	True				
ANR	27218	ParameterType	zend_string *		27139	0					
ANR	27219	Identifier	name		27139	1					
ANR	27220	CFGEntryNode	ENTRY		27139		True				
ANR	27221	CFGExitNode	EXIT		27139		True				
ANR	27222	Symbol	& globals		27139						
ANR	27223	Symbol	IS_ARRAY		27139						
ANR	27224	Symbol	globals		27139						
ANR	27225	Symbol	name		27139						
ANR	27226	Symbol	Z_TYPE_FLAGS_SHIFT		27139						
ANR	27227	Symbol	symbol_table		27139						
ANR	27228	Symbol	& EG		27139						
ANR	27229	Symbol	IS_TYPE_SYMBOLTABLE		27139						
ANR	27230	Symbol	Z_TYPE_INFO_P		27139						
ANR	27231	Function	zend_startup	632:0:19239:24375							
ANR	27232	FunctionDef	"zend_startup (zend_utility_functions * utility_functions , char * * extensions)"		27231	0					
ANR	27233	CompoundStatement		633:0:19328:24375	27231	0					
ANR	27234	IdentifierDeclStatement	zend_compiler_globals * compiler_globals ;	635:1:19342:19381	27231	0	True				
ANR	27235	IdentifierDecl	* compiler_globals		27231	0					
ANR	27236	IdentifierDeclType	zend_compiler_globals *		27231	0					
ANR	27237	Identifier	compiler_globals		27231	1					
ANR	27238	IdentifierDeclStatement	zend_executor_globals * executor_globals ;	636:1:19384:19423	27231	1	True				
ANR	27239	IdentifierDecl	* executor_globals		27231	0					
ANR	27240	IdentifierDeclType	zend_executor_globals *		27231	0					
ANR	27241	Identifier	executor_globals		27231	1					
ANR	27242	IdentifierDeclStatement	extern ZEND_API ts_rsrc_id ini_scanner_globals_id ;	637:1:19426:19475	27231	2	True				
ANR	27243	IdentifierDecl	ini_scanner_globals_id		27231	0					
ANR	27244	IdentifierDeclType	extern ZEND_API ts_rsrc_id		27231	0					
ANR	27245	Identifier	ini_scanner_globals_id		27231	1					
ANR	27246	IdentifierDeclStatement	extern ZEND_API ts_rsrc_id language_scanner_globals_id ;	638:1:19478:19532	27231	3	True				
ANR	27247	IdentifierDecl	language_scanner_globals_id		27231	0					
ANR	27248	IdentifierDeclType	extern ZEND_API ts_rsrc_id		27231	0					
ANR	27249	Identifier	language_scanner_globals_id		27231	1					
ANR	27250	ExpressionStatement	ZEND_TSRMLS_CACHE_UPDATE ( )	639:1:19535:19561	27231	4	True				
ANR	27251	CallExpression	ZEND_TSRMLS_CACHE_UPDATE ( )		27231	0					
ANR	27252	Callee	ZEND_TSRMLS_CACHE_UPDATE		27231	0					
ANR	27253	Identifier	ZEND_TSRMLS_CACHE_UPDATE		27231	0					
ANR	27254	ArgumentList			27231	1					
ANR	27255	ExpressionStatement	start_memory_manager ( )	645:1:19691:19713	27231	5	True				
ANR	27256	CallExpression	start_memory_manager ( )		27231	0					
ANR	27257	Callee	start_memory_manager		27231	0					
ANR	27258	Identifier	start_memory_manager		27231	0					
ANR	27259	ArgumentList			27231	1					
ANR	27260	ExpressionStatement	virtual_cwd_startup ( )	647:1:19717:19738	27231	6	True				
ANR	27261	CallExpression	virtual_cwd_startup ( )		27231	0					
ANR	27262	Callee	virtual_cwd_startup		27231	0					
ANR	27263	Identifier	virtual_cwd_startup		27231	0					
ANR	27264	ArgumentList			27231	1					
ANR	27265	ExpressionStatement	fpsetmask ( 0 )	651:1:19936:19948	27231	7	True				
ANR	27266	CallExpression	fpsetmask ( 0 )		27231	0					
ANR	27267	Callee	fpsetmask		27231	0					
ANR	27268	Identifier	fpsetmask		27231	0					
ANR	27269	ArgumentList	0		27231	1					
ANR	27270	Argument	0		27231	0					
ANR	27271	PrimaryExpression	0		27231	0					
ANR	27272	ExpressionStatement	zend_startup_strtod ( )	654:1:19959:19980	27231	8	True				
ANR	27273	CallExpression	zend_startup_strtod ( )		27231	0					
ANR	27274	Callee	zend_startup_strtod		27231	0					
ANR	27275	Identifier	zend_startup_strtod		27231	0					
ANR	27276	ArgumentList			27231	1					
ANR	27277	ExpressionStatement	zend_startup_extensions_mechanism ( )	655:1:19983:20018	27231	9	True				
ANR	27278	CallExpression	zend_startup_extensions_mechanism ( )		27231	0					
ANR	27279	Callee	zend_startup_extensions_mechanism		27231	0					
ANR	27280	Identifier	zend_startup_extensions_mechanism		27231	0					
ANR	27281	ArgumentList			27231	1					
ANR	27282	ExpressionStatement	zend_error_cb = utility_functions -> error_function	658:1:20065:20114	27231	10	True				
ANR	27283	AssignmentExpression	zend_error_cb = utility_functions -> error_function		27231	0		=			
ANR	27284	Identifier	zend_error_cb		27231	0					
ANR	27285	PtrMemberAccess	utility_functions -> error_function		27231	1					
ANR	27286	Identifier	utility_functions		27231	0					
ANR	27287	Identifier	error_function		27231	1					
ANR	27288	ExpressionStatement	zend_printf = utility_functions -> printf_function	659:1:20117:20165	27231	11	True				
ANR	27289	AssignmentExpression	zend_printf = utility_functions -> printf_function		27231	0		=			
ANR	27290	Identifier	zend_printf		27231	0					
ANR	27291	PtrMemberAccess	utility_functions -> printf_function		27231	1					
ANR	27292	Identifier	utility_functions		27231	0					
ANR	27293	Identifier	printf_function		27231	1					
ANR	27294	ExpressionStatement	zend_write = ( zend_write_func_t ) utility_functions -> write_function	660:1:20168:20234	27231	12	True				
ANR	27295	AssignmentExpression	zend_write = ( zend_write_func_t ) utility_functions -> write_function		27231	0		=			
ANR	27296	Identifier	zend_write		27231	0					
ANR	27297	CastExpression	( zend_write_func_t ) utility_functions -> write_function		27231	1					
ANR	27298	CastTarget	zend_write_func_t		27231	0					
ANR	27299	PtrMemberAccess	utility_functions -> write_function		27231	1					
ANR	27300	Identifier	utility_functions		27231	0					
ANR	27301	Identifier	write_function		27231	1					
ANR	27302	ExpressionStatement	zend_fopen = utility_functions -> fopen_function	661:1:20237:20283	27231	13	True				
ANR	27303	AssignmentExpression	zend_fopen = utility_functions -> fopen_function		27231	0		=			
ANR	27304	Identifier	zend_fopen		27231	0					
ANR	27305	PtrMemberAccess	utility_functions -> fopen_function		27231	1					
ANR	27306	Identifier	utility_functions		27231	0					
ANR	27307	Identifier	fopen_function		27231	1					
ANR	27308	IfStatement	if ( ! zend_fopen )		27231	14					
ANR	27309	Condition	! zend_fopen	662:5:20290:20300	27231	0	True				
ANR	27310	UnaryOperationExpression	! zend_fopen		27231	0					
ANR	27311	UnaryOperator	!		27231	0					
ANR	27312	Identifier	zend_fopen		27231	1					
ANR	27313	CompoundStatement		30:18:974:974	27231	1					
ANR	27314	ExpressionStatement	zend_fopen = zend_fopen_wrapper	663:2:20307:20338	27231	0	True				
ANR	27315	AssignmentExpression	zend_fopen = zend_fopen_wrapper		27231	0		=			
ANR	27316	Identifier	zend_fopen		27231	0					
ANR	27317	Identifier	zend_fopen_wrapper		27231	1					
ANR	27318	ExpressionStatement	zend_stream_open_function = utility_functions -> stream_open_function	665:1:20344:20411	27231	15	True				
ANR	27319	AssignmentExpression	zend_stream_open_function = utility_functions -> stream_open_function		27231	0		=			
ANR	27320	Identifier	zend_stream_open_function		27231	0					
ANR	27321	PtrMemberAccess	utility_functions -> stream_open_function		27231	1					
ANR	27322	Identifier	utility_functions		27231	0					
ANR	27323	Identifier	stream_open_function		27231	1					
ANR	27324	ExpressionStatement	zend_message_dispatcher_p = utility_functions -> message_handler	666:1:20414:20476	27231	16	True				
ANR	27325	AssignmentExpression	zend_message_dispatcher_p = utility_functions -> message_handler		27231	0		=			
ANR	27326	Identifier	zend_message_dispatcher_p		27231	0					
ANR	27327	PtrMemberAccess	utility_functions -> message_handler		27231	1					
ANR	27328	Identifier	utility_functions		27231	0					
ANR	27329	Identifier	message_handler		27231	1					
ANR	27330	ExpressionStatement	zend_block_interruptions = utility_functions -> block_interruptions	668:1:20500:20565	27231	17	True				
ANR	27331	AssignmentExpression	zend_block_interruptions = utility_functions -> block_interruptions		27231	0		=			
ANR	27332	Identifier	zend_block_interruptions		27231	0					
ANR	27333	PtrMemberAccess	utility_functions -> block_interruptions		27231	1					
ANR	27334	Identifier	utility_functions		27231	0					
ANR	27335	Identifier	block_interruptions		27231	1					
ANR	27336	ExpressionStatement	zend_unblock_interruptions = utility_functions -> unblock_interruptions	669:1:20568:20637	27231	18	True				
ANR	27337	AssignmentExpression	zend_unblock_interruptions = utility_functions -> unblock_interruptions		27231	0		=			
ANR	27338	Identifier	zend_unblock_interruptions		27231	0					
ANR	27339	PtrMemberAccess	utility_functions -> unblock_interruptions		27231	1					
ANR	27340	Identifier	utility_functions		27231	0					
ANR	27341	Identifier	unblock_interruptions		27231	1					
ANR	27342	ExpressionStatement	zend_get_configuration_directive_p = utility_functions -> get_configuration_directive	671:1:20647:20730	27231	19	True				
ANR	27343	AssignmentExpression	zend_get_configuration_directive_p = utility_functions -> get_configuration_directive		27231	0		=			
ANR	27344	Identifier	zend_get_configuration_directive_p		27231	0					
ANR	27345	PtrMemberAccess	utility_functions -> get_configuration_directive		27231	1					
ANR	27346	Identifier	utility_functions		27231	0					
ANR	27347	Identifier	get_configuration_directive		27231	1					
ANR	27348	ExpressionStatement	zend_ticks_function = utility_functions -> ticks_function	672:1:20733:20788	27231	20	True				
ANR	27349	AssignmentExpression	zend_ticks_function = utility_functions -> ticks_function		27231	0		=			
ANR	27350	Identifier	zend_ticks_function		27231	0					
ANR	27351	PtrMemberAccess	utility_functions -> ticks_function		27231	1					
ANR	27352	Identifier	utility_functions		27231	0					
ANR	27353	Identifier	ticks_function		27231	1					
ANR	27354	ExpressionStatement	zend_on_timeout = utility_functions -> on_timeout	673:1:20791:20838	27231	21	True				
ANR	27355	AssignmentExpression	zend_on_timeout = utility_functions -> on_timeout		27231	0		=			
ANR	27356	Identifier	zend_on_timeout		27231	0					
ANR	27357	PtrMemberAccess	utility_functions -> on_timeout		27231	1					
ANR	27358	Identifier	utility_functions		27231	0					
ANR	27359	Identifier	on_timeout		27231	1					
ANR	27360	ExpressionStatement	zend_vspprintf = utility_functions -> vspprintf_function	674:1:20841:20895	27231	22	True				
ANR	27361	AssignmentExpression	zend_vspprintf = utility_functions -> vspprintf_function		27231	0		=			
ANR	27362	Identifier	zend_vspprintf		27231	0					
ANR	27363	PtrMemberAccess	utility_functions -> vspprintf_function		27231	1					
ANR	27364	Identifier	utility_functions		27231	0					
ANR	27365	Identifier	vspprintf_function		27231	1					
ANR	27366	ExpressionStatement	zend_vstrpprintf = utility_functions -> vstrpprintf_function	675:1:20898:20956	27231	23	True				
ANR	27367	AssignmentExpression	zend_vstrpprintf = utility_functions -> vstrpprintf_function		27231	0		=			
ANR	27368	Identifier	zend_vstrpprintf		27231	0					
ANR	27369	PtrMemberAccess	utility_functions -> vstrpprintf_function		27231	1					
ANR	27370	Identifier	utility_functions		27231	0					
ANR	27371	Identifier	vstrpprintf_function		27231	1					
ANR	27372	ExpressionStatement	zend_getenv = utility_functions -> getenv_function	676:1:20959:21007	27231	24	True				
ANR	27373	AssignmentExpression	zend_getenv = utility_functions -> getenv_function		27231	0		=			
ANR	27374	Identifier	zend_getenv		27231	0					
ANR	27375	PtrMemberAccess	utility_functions -> getenv_function		27231	1					
ANR	27376	Identifier	utility_functions		27231	0					
ANR	27377	Identifier	getenv_function		27231	1					
ANR	27378	ExpressionStatement	zend_resolve_path = utility_functions -> resolve_path_function	677:1:21010:21070	27231	25	True				
ANR	27379	AssignmentExpression	zend_resolve_path = utility_functions -> resolve_path_function		27231	0		=			
ANR	27380	Identifier	zend_resolve_path		27231	0					
ANR	27381	PtrMemberAccess	utility_functions -> resolve_path_function		27231	1					
ANR	27382	Identifier	utility_functions		27231	0					
ANR	27383	Identifier	resolve_path_function		27231	1					
ANR	27384	ExpressionStatement	zend_compile_file = dtrace_compile_file	681:1:21122:21161	27231	26	True				
ANR	27385	AssignmentExpression	zend_compile_file = dtrace_compile_file		27231	0		=			
ANR	27386	Identifier	zend_compile_file		27231	0					
ANR	27387	Identifier	dtrace_compile_file		27231	1					
ANR	27388	ExpressionStatement	zend_execute_ex = dtrace_execute_ex	682:1:21164:21199	27231	27	True				
ANR	27389	AssignmentExpression	zend_execute_ex = dtrace_execute_ex		27231	0		=			
ANR	27390	Identifier	zend_execute_ex		27231	0					
ANR	27391	Identifier	dtrace_execute_ex		27231	1					
ANR	27392	ExpressionStatement	zend_execute_internal = dtrace_execute_internal	683:1:21202:21249	27231	28	True				
ANR	27393	AssignmentExpression	zend_execute_internal = dtrace_execute_internal		27231	0		=			
ANR	27394	Identifier	zend_execute_internal		27231	0					
ANR	27395	Identifier	dtrace_execute_internal		27231	1					
ANR	27396	ExpressionStatement	zend_compile_string = compile_string	689:1:21383:21419	27231	29	True				
ANR	27397	AssignmentExpression	zend_compile_string = compile_string		27231	0		=			
ANR	27398	Identifier	zend_compile_string		27231	0					
ANR	27399	Identifier	compile_string		27231	1					
ANR	27400	ExpressionStatement	zend_throw_exception_hook = NULL	690:1:21422:21454	27231	30	True				
ANR	27401	AssignmentExpression	zend_throw_exception_hook = NULL		27231	0		=			
ANR	27402	Identifier	zend_throw_exception_hook		27231	0					
ANR	27403	Identifier	NULL		27231	1					
ANR	27404	ExpressionStatement	gc_collect_cycles = zend_gc_collect_cycles	693:1:21519:21561	27231	31	True				
ANR	27405	AssignmentExpression	gc_collect_cycles = zend_gc_collect_cycles		27231	0		=			
ANR	27406	Identifier	gc_collect_cycles		27231	0					
ANR	27407	Identifier	zend_gc_collect_cycles		27231	1					
ANR	27408	ExpressionStatement	zend_init_opcodes_handlers ( )	695:1:21565:21593	27231	32	True				
ANR	27409	CallExpression	zend_init_opcodes_handlers ( )		27231	0					
ANR	27410	Callee	zend_init_opcodes_handlers		27231	0					
ANR	27411	Identifier	zend_init_opcodes_handlers		27231	0					
ANR	27412	ArgumentList			27231	1					
ANR	27413	ExpressionStatement	zend_version_info = strdup ( ZEND_CORE_VERSION_INFO )	698:1:21619:21669	27231	33	True				
ANR	27414	AssignmentExpression	zend_version_info = strdup ( ZEND_CORE_VERSION_INFO )		27231	0		=			
ANR	27415	Identifier	zend_version_info		27231	0					
ANR	27416	CallExpression	strdup ( ZEND_CORE_VERSION_INFO )		27231	1					
ANR	27417	Callee	strdup		27231	0					
ANR	27418	Identifier	strdup		27231	0					
ANR	27419	ArgumentList	ZEND_CORE_VERSION_INFO		27231	1					
ANR	27420	Argument	ZEND_CORE_VERSION_INFO		27231	0					
ANR	27421	Identifier	ZEND_CORE_VERSION_INFO		27231	0					
ANR	27422	ExpressionStatement	zend_version_info_length = sizeof ( ZEND_CORE_VERSION_INFO ) - 1	699:1:21672:21733	27231	34	True				
ANR	27423	AssignmentExpression	zend_version_info_length = sizeof ( ZEND_CORE_VERSION_INFO ) - 1		27231	0		=			
ANR	27424	Identifier	zend_version_info_length		27231	0					
ANR	27425	AdditiveExpression	sizeof ( ZEND_CORE_VERSION_INFO ) - 1		27231	1		-			
ANR	27426	SizeofExpression	sizeof ( ZEND_CORE_VERSION_INFO )		27231	0					
ANR	27427	Sizeof	sizeof		27231	0					
ANR	27428	SizeofOperand	ZEND_CORE_VERSION_INFO		27231	1					
ANR	27429	PrimaryExpression	1		27231	1					
ANR	27430	ExpressionStatement	GLOBAL_FUNCTION_TABLE = ( HashTable * ) malloc ( sizeof ( HashTable ) )	701:1:21737:21800	27231	35	True				
ANR	27431	AssignmentExpression	GLOBAL_FUNCTION_TABLE = ( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	0		=			
ANR	27432	Identifier	GLOBAL_FUNCTION_TABLE		27231	0					
ANR	27433	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27434	CastTarget	HashTable *		27231	0					
ANR	27435	CallExpression	malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27436	Callee	malloc		27231	0					
ANR	27437	Identifier	malloc		27231	0					
ANR	27438	ArgumentList	sizeof ( HashTable )		27231	1					
ANR	27439	Argument	sizeof ( HashTable )		27231	0					
ANR	27440	SizeofExpression	sizeof ( HashTable )		27231	0					
ANR	27441	Sizeof	sizeof		27231	0					
ANR	27442	SizeofOperand	HashTable		27231	1					
ANR	27443	ExpressionStatement	GLOBAL_CLASS_TABLE = ( HashTable * ) malloc ( sizeof ( HashTable ) )	702:1:21803:21863	27231	36	True				
ANR	27444	AssignmentExpression	GLOBAL_CLASS_TABLE = ( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	0		=			
ANR	27445	Identifier	GLOBAL_CLASS_TABLE		27231	0					
ANR	27446	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27447	CastTarget	HashTable *		27231	0					
ANR	27448	CallExpression	malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27449	Callee	malloc		27231	0					
ANR	27450	Identifier	malloc		27231	0					
ANR	27451	ArgumentList	sizeof ( HashTable )		27231	1					
ANR	27452	Argument	sizeof ( HashTable )		27231	0					
ANR	27453	SizeofExpression	sizeof ( HashTable )		27231	0					
ANR	27454	Sizeof	sizeof		27231	0					
ANR	27455	SizeofOperand	HashTable		27231	1					
ANR	27456	ExpressionStatement	GLOBAL_AUTO_GLOBALS_TABLE = ( HashTable * ) malloc ( sizeof ( HashTable ) )	703:1:21866:21933	27231	37	True				
ANR	27457	AssignmentExpression	GLOBAL_AUTO_GLOBALS_TABLE = ( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	0		=			
ANR	27458	Identifier	GLOBAL_AUTO_GLOBALS_TABLE		27231	0					
ANR	27459	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27460	CastTarget	HashTable *		27231	0					
ANR	27461	CallExpression	malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27462	Callee	malloc		27231	0					
ANR	27463	Identifier	malloc		27231	0					
ANR	27464	ArgumentList	sizeof ( HashTable )		27231	1					
ANR	27465	Argument	sizeof ( HashTable )		27231	0					
ANR	27466	SizeofExpression	sizeof ( HashTable )		27231	0					
ANR	27467	Sizeof	sizeof		27231	0					
ANR	27468	SizeofOperand	HashTable		27231	1					
ANR	27469	ExpressionStatement	GLOBAL_CONSTANTS_TABLE = ( HashTable * ) malloc ( sizeof ( HashTable ) )	704:1:21936:22000	27231	38	True				
ANR	27470	AssignmentExpression	GLOBAL_CONSTANTS_TABLE = ( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	0		=			
ANR	27471	Identifier	GLOBAL_CONSTANTS_TABLE		27231	0					
ANR	27472	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27473	CastTarget	HashTable *		27231	0					
ANR	27474	CallExpression	malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27475	Callee	malloc		27231	0					
ANR	27476	Identifier	malloc		27231	0					
ANR	27477	ArgumentList	sizeof ( HashTable )		27231	1					
ANR	27478	Argument	sizeof ( HashTable )		27231	0					
ANR	27479	SizeofExpression	sizeof ( HashTable )		27231	0					
ANR	27480	Sizeof	sizeof		27231	0					
ANR	27481	SizeofOperand	HashTable		27231	1					
ANR	27482	ExpressionStatement	"zend_hash_init_ex ( GLOBAL_FUNCTION_TABLE , 1024 , NULL , ZEND_FUNCTION_DTOR , 1 , 0 )"	706:1:22004:22082	27231	39	True				
ANR	27483	CallExpression	"zend_hash_init_ex ( GLOBAL_FUNCTION_TABLE , 1024 , NULL , ZEND_FUNCTION_DTOR , 1 , 0 )"		27231	0					
ANR	27484	Callee	zend_hash_init_ex		27231	0					
ANR	27485	Identifier	zend_hash_init_ex		27231	0					
ANR	27486	ArgumentList	GLOBAL_FUNCTION_TABLE		27231	1					
ANR	27487	Argument	GLOBAL_FUNCTION_TABLE		27231	0					
ANR	27488	Identifier	GLOBAL_FUNCTION_TABLE		27231	0					
ANR	27489	Argument	1024		27231	1					
ANR	27490	PrimaryExpression	1024		27231	0					
ANR	27491	Argument	NULL		27231	2					
ANR	27492	Identifier	NULL		27231	0					
ANR	27493	Argument	ZEND_FUNCTION_DTOR		27231	3					
ANR	27494	Identifier	ZEND_FUNCTION_DTOR		27231	0					
ANR	27495	Argument	1		27231	4					
ANR	27496	PrimaryExpression	1		27231	0					
ANR	27497	Argument	0		27231	5					
ANR	27498	PrimaryExpression	0		27231	0					
ANR	27499	ExpressionStatement	"zend_hash_init_ex ( GLOBAL_CLASS_TABLE , 64 , NULL , ZEND_CLASS_DTOR , 1 , 0 )"	707:1:22085:22155	27231	40	True				
ANR	27500	CallExpression	"zend_hash_init_ex ( GLOBAL_CLASS_TABLE , 64 , NULL , ZEND_CLASS_DTOR , 1 , 0 )"		27231	0					
ANR	27501	Callee	zend_hash_init_ex		27231	0					
ANR	27502	Identifier	zend_hash_init_ex		27231	0					
ANR	27503	ArgumentList	GLOBAL_CLASS_TABLE		27231	1					
ANR	27504	Argument	GLOBAL_CLASS_TABLE		27231	0					
ANR	27505	Identifier	GLOBAL_CLASS_TABLE		27231	0					
ANR	27506	Argument	64		27231	1					
ANR	27507	PrimaryExpression	64		27231	0					
ANR	27508	Argument	NULL		27231	2					
ANR	27509	Identifier	NULL		27231	0					
ANR	27510	Argument	ZEND_CLASS_DTOR		27231	3					
ANR	27511	Identifier	ZEND_CLASS_DTOR		27231	0					
ANR	27512	Argument	1		27231	4					
ANR	27513	PrimaryExpression	1		27231	0					
ANR	27514	Argument	0		27231	5					
ANR	27515	PrimaryExpression	0		27231	0					
ANR	27516	ExpressionStatement	"zend_hash_init_ex ( GLOBAL_AUTO_GLOBALS_TABLE , 8 , NULL , auto_global_dtor , 1 , 0 )"	708:1:22158:22235	27231	41	True				
ANR	27517	CallExpression	"zend_hash_init_ex ( GLOBAL_AUTO_GLOBALS_TABLE , 8 , NULL , auto_global_dtor , 1 , 0 )"		27231	0					
ANR	27518	Callee	zend_hash_init_ex		27231	0					
ANR	27519	Identifier	zend_hash_init_ex		27231	0					
ANR	27520	ArgumentList	GLOBAL_AUTO_GLOBALS_TABLE		27231	1					
ANR	27521	Argument	GLOBAL_AUTO_GLOBALS_TABLE		27231	0					
ANR	27522	Identifier	GLOBAL_AUTO_GLOBALS_TABLE		27231	0					
ANR	27523	Argument	8		27231	1					
ANR	27524	PrimaryExpression	8		27231	0					
ANR	27525	Argument	NULL		27231	2					
ANR	27526	Identifier	NULL		27231	0					
ANR	27527	Argument	auto_global_dtor		27231	3					
ANR	27528	Identifier	auto_global_dtor		27231	0					
ANR	27529	Argument	1		27231	4					
ANR	27530	PrimaryExpression	1		27231	0					
ANR	27531	Argument	0		27231	5					
ANR	27532	PrimaryExpression	0		27231	0					
ANR	27533	ExpressionStatement	"zend_hash_init_ex ( GLOBAL_CONSTANTS_TABLE , 128 , NULL , ZEND_CONSTANT_DTOR , 1 , 0 )"	709:1:22238:22316	27231	42	True				
ANR	27534	CallExpression	"zend_hash_init_ex ( GLOBAL_CONSTANTS_TABLE , 128 , NULL , ZEND_CONSTANT_DTOR , 1 , 0 )"		27231	0					
ANR	27535	Callee	zend_hash_init_ex		27231	0					
ANR	27536	Identifier	zend_hash_init_ex		27231	0					
ANR	27537	ArgumentList	GLOBAL_CONSTANTS_TABLE		27231	1					
ANR	27538	Argument	GLOBAL_CONSTANTS_TABLE		27231	0					
ANR	27539	Identifier	GLOBAL_CONSTANTS_TABLE		27231	0					
ANR	27540	Argument	128		27231	1					
ANR	27541	PrimaryExpression	128		27231	0					
ANR	27542	Argument	NULL		27231	2					
ANR	27543	Identifier	NULL		27231	0					
ANR	27544	Argument	ZEND_CONSTANT_DTOR		27231	3					
ANR	27545	Identifier	ZEND_CONSTANT_DTOR		27231	0					
ANR	27546	Argument	1		27231	4					
ANR	27547	PrimaryExpression	1		27231	0					
ANR	27548	Argument	0		27231	5					
ANR	27549	PrimaryExpression	0		27231	0					
ANR	27550	ExpressionStatement	"zend_hash_init_ex ( & module_registry , 32 , NULL , module_destructor_zval , 1 , 0 )"	711:1:22320:22395	27231	43	True				
ANR	27551	CallExpression	"zend_hash_init_ex ( & module_registry , 32 , NULL , module_destructor_zval , 1 , 0 )"		27231	0					
ANR	27552	Callee	zend_hash_init_ex		27231	0					
ANR	27553	Identifier	zend_hash_init_ex		27231	0					
ANR	27554	ArgumentList	& module_registry		27231	1					
ANR	27555	Argument	& module_registry		27231	0					
ANR	27556	UnaryOperationExpression	& module_registry		27231	0					
ANR	27557	UnaryOperator	&		27231	0					
ANR	27558	Identifier	module_registry		27231	1					
ANR	27559	Argument	32		27231	1					
ANR	27560	PrimaryExpression	32		27231	0					
ANR	27561	Argument	NULL		27231	2					
ANR	27562	Identifier	NULL		27231	0					
ANR	27563	Argument	module_destructor_zval		27231	3					
ANR	27564	Identifier	module_destructor_zval		27231	0					
ANR	27565	Argument	1		27231	4					
ANR	27566	PrimaryExpression	1		27231	0					
ANR	27567	Argument	0		27231	5					
ANR	27568	PrimaryExpression	0		27231	0					
ANR	27569	ExpressionStatement	zend_init_rsrc_list_dtors ( )	712:1:22398:22425	27231	44	True				
ANR	27570	CallExpression	zend_init_rsrc_list_dtors ( )		27231	0					
ANR	27571	Callee	zend_init_rsrc_list_dtors		27231	0					
ANR	27572	Identifier	zend_init_rsrc_list_dtors		27231	0					
ANR	27573	ArgumentList			27231	1					
ANR	27574	ExpressionStatement	"ts_allocate_id ( & compiler_globals_id , sizeof ( zend_compiler_globals ) , ( ts_allocate_ctor ) compiler_globals_ctor , ( ts_allocate_dtor ) compiler_globals_dtor )"	715:1:22440:22591	27231	45	True				
ANR	27575	CallExpression	"ts_allocate_id ( & compiler_globals_id , sizeof ( zend_compiler_globals ) , ( ts_allocate_ctor ) compiler_globals_ctor , ( ts_allocate_dtor ) compiler_globals_dtor )"		27231	0					
ANR	27576	Callee	ts_allocate_id		27231	0					
ANR	27577	Identifier	ts_allocate_id		27231	0					
ANR	27578	ArgumentList	& compiler_globals_id		27231	1					
ANR	27579	Argument	& compiler_globals_id		27231	0					
ANR	27580	UnaryOperationExpression	& compiler_globals_id		27231	0					
ANR	27581	UnaryOperator	&		27231	0					
ANR	27582	Identifier	compiler_globals_id		27231	1					
ANR	27583	Argument	sizeof ( zend_compiler_globals )		27231	1					
ANR	27584	SizeofExpression	sizeof ( zend_compiler_globals )		27231	0					
ANR	27585	Sizeof	sizeof		27231	0					
ANR	27586	SizeofOperand	zend_compiler_globals		27231	1					
ANR	27587	Argument	( ts_allocate_ctor ) compiler_globals_ctor		27231	2					
ANR	27588	CastExpression	( ts_allocate_ctor ) compiler_globals_ctor		27231	0					
ANR	27589	CastTarget	ts_allocate_ctor		27231	0					
ANR	27590	Identifier	compiler_globals_ctor		27231	1					
ANR	27591	Argument	( ts_allocate_dtor ) compiler_globals_dtor		27231	3					
ANR	27592	CastExpression	( ts_allocate_dtor ) compiler_globals_dtor		27231	0					
ANR	27593	CastTarget	ts_allocate_dtor		27231	0					
ANR	27594	Identifier	compiler_globals_dtor		27231	1					
ANR	27595	ExpressionStatement	"ts_allocate_id ( & executor_globals_id , sizeof ( zend_executor_globals ) , ( ts_allocate_ctor ) executor_globals_ctor , ( ts_allocate_dtor ) executor_globals_dtor )"	716:1:22594:22745	27231	46	True				
ANR	27596	CallExpression	"ts_allocate_id ( & executor_globals_id , sizeof ( zend_executor_globals ) , ( ts_allocate_ctor ) executor_globals_ctor , ( ts_allocate_dtor ) executor_globals_dtor )"		27231	0					
ANR	27597	Callee	ts_allocate_id		27231	0					
ANR	27598	Identifier	ts_allocate_id		27231	0					
ANR	27599	ArgumentList	& executor_globals_id		27231	1					
ANR	27600	Argument	& executor_globals_id		27231	0					
ANR	27601	UnaryOperationExpression	& executor_globals_id		27231	0					
ANR	27602	UnaryOperator	&		27231	0					
ANR	27603	Identifier	executor_globals_id		27231	1					
ANR	27604	Argument	sizeof ( zend_executor_globals )		27231	1					
ANR	27605	SizeofExpression	sizeof ( zend_executor_globals )		27231	0					
ANR	27606	Sizeof	sizeof		27231	0					
ANR	27607	SizeofOperand	zend_executor_globals		27231	1					
ANR	27608	Argument	( ts_allocate_ctor ) executor_globals_ctor		27231	2					
ANR	27609	CastExpression	( ts_allocate_ctor ) executor_globals_ctor		27231	0					
ANR	27610	CastTarget	ts_allocate_ctor		27231	0					
ANR	27611	Identifier	executor_globals_ctor		27231	1					
ANR	27612	Argument	( ts_allocate_dtor ) executor_globals_dtor		27231	3					
ANR	27613	CastExpression	( ts_allocate_dtor ) executor_globals_dtor		27231	0					
ANR	27614	CastTarget	ts_allocate_dtor		27231	0					
ANR	27615	Identifier	executor_globals_dtor		27231	1					
ANR	27616	ExpressionStatement	"ts_allocate_id ( & language_scanner_globals_id , sizeof ( zend_php_scanner_globals ) , ( ts_allocate_ctor ) php_scanner_globals_ctor , NULL )"	717:1:22748:22877	27231	47	True				
ANR	27617	CallExpression	"ts_allocate_id ( & language_scanner_globals_id , sizeof ( zend_php_scanner_globals ) , ( ts_allocate_ctor ) php_scanner_globals_ctor , NULL )"		27231	0					
ANR	27618	Callee	ts_allocate_id		27231	0					
ANR	27619	Identifier	ts_allocate_id		27231	0					
ANR	27620	ArgumentList	& language_scanner_globals_id		27231	1					
ANR	27621	Argument	& language_scanner_globals_id		27231	0					
ANR	27622	UnaryOperationExpression	& language_scanner_globals_id		27231	0					
ANR	27623	UnaryOperator	&		27231	0					
ANR	27624	Identifier	language_scanner_globals_id		27231	1					
ANR	27625	Argument	sizeof ( zend_php_scanner_globals )		27231	1					
ANR	27626	SizeofExpression	sizeof ( zend_php_scanner_globals )		27231	0					
ANR	27627	Sizeof	sizeof		27231	0					
ANR	27628	SizeofOperand	zend_php_scanner_globals		27231	1					
ANR	27629	Argument	( ts_allocate_ctor ) php_scanner_globals_ctor		27231	2					
ANR	27630	CastExpression	( ts_allocate_ctor ) php_scanner_globals_ctor		27231	0					
ANR	27631	CastTarget	ts_allocate_ctor		27231	0					
ANR	27632	Identifier	php_scanner_globals_ctor		27231	1					
ANR	27633	Argument	NULL		27231	3					
ANR	27634	Identifier	NULL		27231	0					
ANR	27635	ExpressionStatement	"ts_allocate_id ( & ini_scanner_globals_id , sizeof ( zend_ini_scanner_globals ) , ( ts_allocate_ctor ) ini_scanner_globals_ctor , NULL )"	718:1:22880:23004	27231	48	True				
ANR	27636	CallExpression	"ts_allocate_id ( & ini_scanner_globals_id , sizeof ( zend_ini_scanner_globals ) , ( ts_allocate_ctor ) ini_scanner_globals_ctor , NULL )"		27231	0					
ANR	27637	Callee	ts_allocate_id		27231	0					
ANR	27638	Identifier	ts_allocate_id		27231	0					
ANR	27639	ArgumentList	& ini_scanner_globals_id		27231	1					
ANR	27640	Argument	& ini_scanner_globals_id		27231	0					
ANR	27641	UnaryOperationExpression	& ini_scanner_globals_id		27231	0					
ANR	27642	UnaryOperator	&		27231	0					
ANR	27643	Identifier	ini_scanner_globals_id		27231	1					
ANR	27644	Argument	sizeof ( zend_ini_scanner_globals )		27231	1					
ANR	27645	SizeofExpression	sizeof ( zend_ini_scanner_globals )		27231	0					
ANR	27646	Sizeof	sizeof		27231	0					
ANR	27647	SizeofOperand	zend_ini_scanner_globals		27231	1					
ANR	27648	Argument	( ts_allocate_ctor ) ini_scanner_globals_ctor		27231	2					
ANR	27649	CastExpression	( ts_allocate_ctor ) ini_scanner_globals_ctor		27231	0					
ANR	27650	CastTarget	ts_allocate_ctor		27231	0					
ANR	27651	Identifier	ini_scanner_globals_ctor		27231	1					
ANR	27652	Argument	NULL		27231	3					
ANR	27653	Identifier	NULL		27231	0					
ANR	27654	ExpressionStatement	compiler_globals = ts_resource ( compiler_globals_id )	719:1:23007:23058	27231	49	True				
ANR	27655	AssignmentExpression	compiler_globals = ts_resource ( compiler_globals_id )		27231	0		=			
ANR	27656	Identifier	compiler_globals		27231	0					
ANR	27657	CallExpression	ts_resource ( compiler_globals_id )		27231	1					
ANR	27658	Callee	ts_resource		27231	0					
ANR	27659	Identifier	ts_resource		27231	0					
ANR	27660	ArgumentList	compiler_globals_id		27231	1					
ANR	27661	Argument	compiler_globals_id		27231	0					
ANR	27662	Identifier	compiler_globals_id		27231	0					
ANR	27663	ExpressionStatement	executor_globals = ts_resource ( executor_globals_id )	720:1:23061:23112	27231	50	True				
ANR	27664	AssignmentExpression	executor_globals = ts_resource ( executor_globals_id )		27231	0		=			
ANR	27665	Identifier	executor_globals		27231	0					
ANR	27666	CallExpression	ts_resource ( executor_globals_id )		27231	1					
ANR	27667	Callee	ts_resource		27231	0					
ANR	27668	Identifier	ts_resource		27231	0					
ANR	27669	ArgumentList	executor_globals_id		27231	1					
ANR	27670	Argument	executor_globals_id		27231	0					
ANR	27671	Identifier	executor_globals_id		27231	0					
ANR	27672	ExpressionStatement	compiler_globals_dtor ( compiler_globals )	722:1:23116:23155	27231	51	True				
ANR	27673	CallExpression	compiler_globals_dtor ( compiler_globals )		27231	0					
ANR	27674	Callee	compiler_globals_dtor		27231	0					
ANR	27675	Identifier	compiler_globals_dtor		27231	0					
ANR	27676	ArgumentList	compiler_globals		27231	1					
ANR	27677	Argument	compiler_globals		27231	0					
ANR	27678	Identifier	compiler_globals		27231	0					
ANR	27679	ExpressionStatement	compiler_globals -> in_compilation = 0	723:1:23158:23194	27231	52	True				
ANR	27680	AssignmentExpression	compiler_globals -> in_compilation = 0		27231	0		=			
ANR	27681	PtrMemberAccess	compiler_globals -> in_compilation		27231	0					
ANR	27682	Identifier	compiler_globals		27231	0					
ANR	27683	Identifier	in_compilation		27231	1					
ANR	27684	PrimaryExpression	0		27231	1					
ANR	27685	ExpressionStatement	compiler_globals -> function_table = ( HashTable * ) malloc ( sizeof ( HashTable ) )	724:1:23197:23271	27231	53	True				
ANR	27686	AssignmentExpression	compiler_globals -> function_table = ( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	0		=			
ANR	27687	PtrMemberAccess	compiler_globals -> function_table		27231	0					
ANR	27688	Identifier	compiler_globals		27231	0					
ANR	27689	Identifier	function_table		27231	1					
ANR	27690	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27691	CastTarget	HashTable *		27231	0					
ANR	27692	CallExpression	malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27693	Callee	malloc		27231	0					
ANR	27694	Identifier	malloc		27231	0					
ANR	27695	ArgumentList	sizeof ( HashTable )		27231	1					
ANR	27696	Argument	sizeof ( HashTable )		27231	0					
ANR	27697	SizeofExpression	sizeof ( HashTable )		27231	0					
ANR	27698	Sizeof	sizeof		27231	0					
ANR	27699	SizeofOperand	HashTable		27231	1					
ANR	27700	ExpressionStatement	compiler_globals -> class_table = ( HashTable * ) malloc ( sizeof ( HashTable ) )	725:1:23274:23345	27231	54	True				
ANR	27701	AssignmentExpression	compiler_globals -> class_table = ( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	0		=			
ANR	27702	PtrMemberAccess	compiler_globals -> class_table		27231	0					
ANR	27703	Identifier	compiler_globals		27231	0					
ANR	27704	Identifier	class_table		27231	1					
ANR	27705	CastExpression	( HashTable * ) malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27706	CastTarget	HashTable *		27231	0					
ANR	27707	CallExpression	malloc ( sizeof ( HashTable ) )		27231	1					
ANR	27708	Callee	malloc		27231	0					
ANR	27709	Identifier	malloc		27231	0					
ANR	27710	ArgumentList	sizeof ( HashTable )		27231	1					
ANR	27711	Argument	sizeof ( HashTable )		27231	0					
ANR	27712	SizeofExpression	sizeof ( HashTable )		27231	0					
ANR	27713	Sizeof	sizeof		27231	0					
ANR	27714	SizeofOperand	HashTable		27231	1					
ANR	27715	ExpressionStatement	* compiler_globals -> function_table = * GLOBAL_FUNCTION_TABLE	727:1:23349:23407	27231	55	True				
ANR	27716	AssignmentExpression	* compiler_globals -> function_table = * GLOBAL_FUNCTION_TABLE		27231	0		=			
ANR	27717	UnaryOperationExpression	* compiler_globals -> function_table		27231	0					
ANR	27718	UnaryOperator	*		27231	0					
ANR	27719	PtrMemberAccess	compiler_globals -> function_table		27231	1					
ANR	27720	Identifier	compiler_globals		27231	0					
ANR	27721	Identifier	function_table		27231	1					
ANR	27722	UnaryOperationExpression	* GLOBAL_FUNCTION_TABLE		27231	1					
ANR	27723	UnaryOperator	*		27231	0					
ANR	27724	Identifier	GLOBAL_FUNCTION_TABLE		27231	1					
ANR	27725	ExpressionStatement	* compiler_globals -> class_table = * GLOBAL_CLASS_TABLE	728:1:23410:23462	27231	56	True				
ANR	27726	AssignmentExpression	* compiler_globals -> class_table = * GLOBAL_CLASS_TABLE		27231	0		=			
ANR	27727	UnaryOperationExpression	* compiler_globals -> class_table		27231	0					
ANR	27728	UnaryOperator	*		27231	0					
ANR	27729	PtrMemberAccess	compiler_globals -> class_table		27231	1					
ANR	27730	Identifier	compiler_globals		27231	0					
ANR	27731	Identifier	class_table		27231	1					
ANR	27732	UnaryOperationExpression	* GLOBAL_CLASS_TABLE		27231	1					
ANR	27733	UnaryOperator	*		27231	0					
ANR	27734	Identifier	GLOBAL_CLASS_TABLE		27231	1					
ANR	27735	ExpressionStatement	compiler_globals -> auto_globals = GLOBAL_AUTO_GLOBALS_TABLE	729:1:23465:23523	27231	57	True				
ANR	27736	AssignmentExpression	compiler_globals -> auto_globals = GLOBAL_AUTO_GLOBALS_TABLE		27231	0		=			
ANR	27737	PtrMemberAccess	compiler_globals -> auto_globals		27231	0					
ANR	27738	Identifier	compiler_globals		27231	0					
ANR	27739	Identifier	auto_globals		27231	1					
ANR	27740	Identifier	GLOBAL_AUTO_GLOBALS_TABLE		27231	1					
ANR	27741	ExpressionStatement	zend_hash_destroy ( executor_globals -> zend_constants )	731:1:23527:23578	27231	58	True				
ANR	27742	CallExpression	zend_hash_destroy ( executor_globals -> zend_constants )		27231	0					
ANR	27743	Callee	zend_hash_destroy		27231	0					
ANR	27744	Identifier	zend_hash_destroy		27231	0					
ANR	27745	ArgumentList	executor_globals -> zend_constants		27231	1					
ANR	27746	Argument	executor_globals -> zend_constants		27231	0					
ANR	27747	PtrMemberAccess	executor_globals -> zend_constants		27231	0					
ANR	27748	Identifier	executor_globals		27231	0					
ANR	27749	Identifier	zend_constants		27231	1					
ANR	27750	ExpressionStatement	* executor_globals -> zend_constants = * GLOBAL_CONSTANTS_TABLE	732:1:23581:23640	27231	59	True				
ANR	27751	AssignmentExpression	* executor_globals -> zend_constants = * GLOBAL_CONSTANTS_TABLE		27231	0		=			
ANR	27752	UnaryOperationExpression	* executor_globals -> zend_constants		27231	0					
ANR	27753	UnaryOperator	*		27231	0					
ANR	27754	PtrMemberAccess	executor_globals -> zend_constants		27231	1					
ANR	27755	Identifier	executor_globals		27231	0					
ANR	27756	Identifier	zend_constants		27231	1					
ANR	27757	UnaryOperationExpression	* GLOBAL_CONSTANTS_TABLE		27231	1					
ANR	27758	UnaryOperator	*		27231	0					
ANR	27759	Identifier	GLOBAL_CONSTANTS_TABLE		27231	1					
ANR	27760	ExpressionStatement	EG ( error_reporting ) = E_ALL & ~E_NOTICE	741:1:23884:23923	27231	60	True				
ANR	27761	AssignmentExpression	EG ( error_reporting ) = E_ALL & ~E_NOTICE		27231	0		=			
ANR	27762	CallExpression	EG ( error_reporting )		27231	0					
ANR	27763	Callee	EG		27231	0					
ANR	27764	Identifier	EG		27231	0					
ANR	27765	ArgumentList	error_reporting		27231	1					
ANR	27766	Argument	error_reporting		27231	0					
ANR	27767	Identifier	error_reporting		27231	0					
ANR	27768	BitAndExpression	E_ALL & ~E_NOTICE		27231	1		&			
ANR	27769	Identifier	E_ALL		27231	0					
ANR	27770	Identifier	~E_NOTICE		27231	1					
ANR	27771	ExpressionStatement	zend_interned_strings_init ( )	743:1:23927:23955	27231	61	True				
ANR	27772	CallExpression	zend_interned_strings_init ( )		27231	0					
ANR	27773	Callee	zend_interned_strings_init		27231	0					
ANR	27774	Identifier	zend_interned_strings_init		27231	0					
ANR	27775	ArgumentList			27231	1					
ANR	27776	ExpressionStatement	zend_startup_builtin_functions ( )	744:1:23958:23990	27231	62	True				
ANR	27777	CallExpression	zend_startup_builtin_functions ( )		27231	0					
ANR	27778	Callee	zend_startup_builtin_functions		27231	0					
ANR	27779	Identifier	zend_startup_builtin_functions		27231	0					
ANR	27780	ArgumentList			27231	1					
ANR	27781	ExpressionStatement	zend_register_standard_constants ( )	745:1:23993:24027	27231	63	True				
ANR	27782	CallExpression	zend_register_standard_constants ( )		27231	0					
ANR	27783	Callee	zend_register_standard_constants		27231	0					
ANR	27784	Identifier	zend_register_standard_constants		27231	0					
ANR	27785	ArgumentList			27231	1					
ANR	27786	ExpressionStatement	"zend_register_auto_global ( zend_string_init ( ""GLOBALS"" , sizeof ( ""GLOBALS"" ) - 1 , 1 ) , 1 , php_auto_globals_create_globals )"	746:1:24030:24146	27231	64	True				
ANR	27787	CallExpression	"zend_register_auto_global ( zend_string_init ( ""GLOBALS"" , sizeof ( ""GLOBALS"" ) - 1 , 1 ) , 1 , php_auto_globals_create_globals )"		27231	0					
ANR	27788	Callee	zend_register_auto_global		27231	0					
ANR	27789	Identifier	zend_register_auto_global		27231	0					
ANR	27790	ArgumentList	"zend_string_init ( ""GLOBALS"" , sizeof ( ""GLOBALS"" ) - 1 , 1 )"		27231	1					
ANR	27791	Argument	"zend_string_init ( ""GLOBALS"" , sizeof ( ""GLOBALS"" ) - 1 , 1 )"		27231	0					
ANR	27792	CallExpression	"zend_string_init ( ""GLOBALS"" , sizeof ( ""GLOBALS"" ) - 1 , 1 )"		27231	0					
ANR	27793	Callee	zend_string_init		27231	0					
ANR	27794	Identifier	zend_string_init		27231	0					
ANR	27795	ArgumentList	"""GLOBALS"""		27231	1					
ANR	27796	Argument	"""GLOBALS"""		27231	0					
ANR	27797	PrimaryExpression	"""GLOBALS"""		27231	0					
ANR	27798	Argument	"sizeof ( ""GLOBALS"" ) - 1"		27231	1					
ANR	27799	AdditiveExpression	"sizeof ( ""GLOBALS"" ) - 1"		27231	0		-			
ANR	27800	SizeofExpression	"sizeof ( ""GLOBALS"" )"		27231	0					
ANR	27801	Sizeof	sizeof		27231	0					
ANR	27802	PrimaryExpression	"""GLOBALS"""		27231	1					
ANR	27803	PrimaryExpression	1		27231	1					
ANR	27804	Argument	1		27231	2					
ANR	27805	PrimaryExpression	1		27231	0					
ANR	27806	Argument	1		27231	1					
ANR	27807	PrimaryExpression	1		27231	0					
ANR	27808	Argument	php_auto_globals_create_globals		27231	2					
ANR	27809	Identifier	php_auto_globals_create_globals		27231	0					
ANR	27810	ExpressionStatement	zend_init_rsrc_plist ( )	749:1:24162:24184	27231	65	True				
ANR	27811	CallExpression	zend_init_rsrc_plist ( )		27231	0					
ANR	27812	Callee	zend_init_rsrc_plist		27231	0					
ANR	27813	Identifier	zend_init_rsrc_plist		27231	0					
ANR	27814	ArgumentList			27231	1					
ANR	27815	ExpressionStatement	zend_init_exception_op ( )	750:1:24187:24211	27231	66	True				
ANR	27816	CallExpression	zend_init_exception_op ( )		27231	0					
ANR	27817	Callee	zend_init_exception_op		27231	0					
ANR	27818	Identifier	zend_init_exception_op		27231	0					
ANR	27819	ArgumentList			27231	1					
ANR	27820	ExpressionStatement	zend_init_call_trampoline_op ( )	751:1:24214:24244	27231	67	True				
ANR	27821	CallExpression	zend_init_call_trampoline_op ( )		27231	0					
ANR	27822	Callee	zend_init_call_trampoline_op		27231	0					
ANR	27823	Identifier	zend_init_call_trampoline_op		27231	0					
ANR	27824	ArgumentList			27231	1					
ANR	27825	ExpressionStatement	zend_ini_startup ( )	754:1:24255:24273	27231	68	True				
ANR	27826	CallExpression	zend_ini_startup ( )		27231	0					
ANR	27827	Callee	zend_ini_startup		27231	0					
ANR	27828	Identifier	zend_ini_startup		27231	0					
ANR	27829	ArgumentList			27231	1					
ANR	27830	ExpressionStatement	tsrm_set_new_thread_end_handler ( zend_new_thread_end_handler )	757:1:24288:24348	27231	69	True				
ANR	27831	CallExpression	tsrm_set_new_thread_end_handler ( zend_new_thread_end_handler )		27231	0					
ANR	27832	Callee	tsrm_set_new_thread_end_handler		27231	0					
ANR	27833	Identifier	tsrm_set_new_thread_end_handler		27231	0					
ANR	27834	ArgumentList	zend_new_thread_end_handler		27231	1					
ANR	27835	Argument	zend_new_thread_end_handler		27231	0					
ANR	27836	Identifier	zend_new_thread_end_handler		27231	0					
ANR	27837	ReturnStatement	return SUCCESS ;	760:1:24359:24373	27231	70	True				
ANR	27838	Identifier	SUCCESS		27231	0					
ANR	27839	ReturnType	int		27231	1					
ANR	27840	Identifier	zend_startup		27231	2					
ANR	27841	ParameterList	"zend_utility_functions * utility_functions , char * * extensions"		27231	3					
ANR	27842	Parameter	zend_utility_functions * utility_functions	632:17:19256:19296	27231	0	True				
ANR	27843	ParameterType	zend_utility_functions *		27231	0					
ANR	27844	Identifier	utility_functions		27231	1					
ANR	27845	Parameter	char * * extensions	632:60:19299:19315	27231	1	True				
ANR	27846	ParameterType	char * *		27231	0					
ANR	27847	Identifier	extensions		27231	1					
ANR	27848	CFGEntryNode	ENTRY		27231		True				
ANR	27849	CFGExitNode	EXIT		27231		True				
ANR	27850	Symbol	executor_globals_id		27231						
ANR	27851	Symbol	zend_ticks_function		27231						
ANR	27852	Symbol	* GLOBAL_CONSTANTS_TABLE		27231						
ANR	27853	Symbol	utility_functions -> get_configuration_directive		27231						
ANR	27854	Symbol	zend_resolve_path		27231						
ANR	27855	Symbol	zend_gc_collect_cycles		27231						
ANR	27856	Symbol	error_reporting		27231						
ANR	27857	Symbol	ZEND_CORE_VERSION_INFO		27231						
ANR	27858	Symbol	zend_string_init		27231						
ANR	27859	Symbol	zend_execute_internal		27231						
ANR	27860	Symbol	gc_collect_cycles		27231						
ANR	27861	Symbol	& executor_globals_id		27231						
ANR	27862	Symbol	GLOBAL_FUNCTION_TABLE		27231						
ANR	27863	Symbol	ZEND_FUNCTION_DTOR		27231						
ANR	27864	Symbol	utility_functions -> ticks_function		27231						
ANR	27865	Symbol	php_auto_globals_create_globals		27231						
ANR	27866	Symbol	GLOBAL_AUTO_GLOBALS_TABLE		27231						
ANR	27867	Symbol	utility_functions -> stream_open_function		27231						
ANR	27868	Symbol	zend_vstrpprintf		27231						
ANR	27869	Symbol	* * executor_globals		27231						
ANR	27870	Symbol	extensions		27231						
ANR	27871	Symbol	utility_functions -> resolve_path_function		27231						
ANR	27872	Symbol	compiler_globals_dtor		27231						
ANR	27873	Symbol	zend_block_interruptions		27231						
ANR	27874	Symbol	zend_compile_file		27231						
ANR	27875	Symbol	executor_globals_dtor		27231						
ANR	27876	Symbol	utility_functions -> vstrpprintf_function		27231						
ANR	27877	Symbol	utility_functions -> message_handler		27231						
ANR	27878	Symbol	zend_get_configuration_directive_p		27231						
ANR	27879	Symbol	GLOBAL_CONSTANTS_TABLE		27231						
ANR	27880	Symbol	compiler_globals_id		27231						
ANR	27881	Symbol	compiler_globals -> auto_globals		27231						
ANR	27882	Symbol	utility_functions -> block_interruptions		27231						
ANR	27883	Symbol	module_destructor_zval		27231						
ANR	27884	Symbol	zend_error_cb		27231						
ANR	27885	Symbol	zend_throw_exception_hook		27231						
ANR	27886	Symbol	compiler_globals		27231						
ANR	27887	Symbol	GLOBAL_CLASS_TABLE		27231						
ANR	27888	Symbol	zend_message_dispatcher_p		27231						
ANR	27889	Symbol	zend_execute_ex		27231						
ANR	27890	Symbol	* executor_globals		27231						
ANR	27891	Symbol	* executor_globals -> zend_constants		27231						
ANR	27892	Symbol	utility_functions -> printf_function		27231						
ANR	27893	Symbol	malloc		27231						
ANR	27894	Symbol	ts_resource		27231						
ANR	27895	Symbol	& compiler_globals_id		27231						
ANR	27896	Symbol	SUCCESS		27231						
ANR	27897	Symbol	php_scanner_globals_ctor		27231						
ANR	27898	Symbol	auto_global_dtor		27231						
ANR	27899	Symbol	executor_globals -> zend_constants		27231						
ANR	27900	Symbol	zend_version_info_length		27231						
ANR	27901	Symbol	ini_scanner_globals_id		27231						
ANR	27902	Symbol	utility_functions -> write_function		27231						
ANR	27903	Symbol	* compiler_globals -> function_table		27231						
ANR	27904	Symbol	zend_printf		27231						
ANR	27905	Symbol	compiler_globals -> class_table		27231						
ANR	27906	Symbol	utility_functions -> fopen_function		27231						
ANR	27907	Symbol	E_ALL		27231						
ANR	27908	Symbol	zend_new_thread_end_handler		27231						
ANR	27909	Symbol	utility_functions -> getenv_function		27231						
ANR	27910	Symbol	utility_functions -> vspprintf_function		27231						
ANR	27911	Symbol	utility_functions -> error_function		27231						
ANR	27912	Symbol	utility_functions -> on_timeout		27231						
ANR	27913	Symbol	zend_fopen		27231						
ANR	27914	Symbol	compiler_globals_ctor		27231						
ANR	27915	Symbol	* * compiler_globals		27231						
ANR	27916	Symbol	zend_vspprintf		27231						
ANR	27917	Symbol	executor_globals_ctor		27231						
ANR	27918	Symbol	compiler_globals -> function_table		27231						
ANR	27919	Symbol	* utility_functions		27231						
ANR	27920	Symbol	EG		27231						
ANR	27921	Symbol	dtrace_execute_ex		27231						
ANR	27922	Symbol	NULL		27231						
ANR	27923	Symbol	& module_registry		27231						
ANR	27924	Symbol	zend_unblock_interruptions		27231						
ANR	27925	Symbol	compiler_globals -> in_compilation		27231						
ANR	27926	Symbol	* GLOBAL_FUNCTION_TABLE		27231						
ANR	27927	Symbol	executor_globals		27231						
ANR	27928	Symbol	ZEND_CONSTANT_DTOR		27231						
ANR	27929	Symbol	zend_on_timeout		27231						
ANR	27930	Symbol	dtrace_execute_internal		27231						
ANR	27931	Symbol	utility_functions -> unblock_interruptions		27231						
ANR	27932	Symbol	& language_scanner_globals_id		27231						
ANR	27933	Symbol	* compiler_globals		27231						
ANR	27934	Symbol	language_scanner_globals_id		27231						
ANR	27935	Symbol	zend_write		27231						
ANR	27936	Symbol	zend_stream_open_function		27231						
ANR	27937	Symbol	& ini_scanner_globals_id		27231						
ANR	27938	Symbol	* GLOBAL_CLASS_TABLE		27231						
ANR	27939	Symbol	ZEND_CLASS_DTOR		27231						
ANR	27940	Symbol	zend_fopen_wrapper		27231						
ANR	27941	Symbol	* compiler_globals -> class_table		27231						
ANR	27942	Symbol	utility_functions		27231						
ANR	27943	Symbol	zend_getenv		27231						
ANR	27944	Symbol	dtrace_compile_file		27231						
ANR	27945	Symbol	ini_scanner_globals_ctor		27231						
ANR	27946	Symbol	zend_version_info		27231						
ANR	27947	Symbol	~E_NOTICE		27231						
ANR	27948	Symbol	strdup		27231						
ANR	27949	Symbol	compile_string		27231						
ANR	27950	Symbol	zend_compile_string		27231						
ANR	27951	Function	zend_register_standard_ini_entries	764:0:24388:24496							
ANR	27952	FunctionDef	zend_register_standard_ini_entries ()		27951	0					
ANR	27953	CompoundStatement		765:0:24444:24496	27951	0					
ANR	27954	IdentifierDeclStatement	int module_number = 0 ;	766:1:24447:24468	27951	0	True				
ANR	27955	IdentifierDecl	module_number = 0		27951	0					
ANR	27956	IdentifierDeclType	int		27951	0					
ANR	27957	Identifier	module_number		27951	1					
ANR	27958	AssignmentExpression	module_number = 0		27951	2		=			
ANR	27959	Identifier	module_number		27951	0					
ANR	27960	PrimaryExpression	0		27951	1					
ANR	27961	ExpressionStatement	REGISTER_INI_ENTRIES ( )	768:1:24472:24494	27951	1	True				
ANR	27962	CallExpression	REGISTER_INI_ENTRIES ( )		27951	0					
ANR	27963	Callee	REGISTER_INI_ENTRIES		27951	0					
ANR	27964	Identifier	REGISTER_INI_ENTRIES		27951	0					
ANR	27965	ArgumentList			27951	1					
ANR	27966	ReturnType	void		27951	1					
ANR	27967	Identifier	zend_register_standard_ini_entries		27951	2					
ANR	27968	ParameterList			27951	3					
ANR	27969	CFGEntryNode	ENTRY		27951		True				
ANR	27970	CFGExitNode	EXIT		27951		True				
ANR	27971	Symbol	module_number		27951						
ANR	27972	Function	zend_post_startup	775:0:24642:25776							
ANR	27973	FunctionDef	zend_post_startup ()		27972	0					
ANR	27974	CompoundStatement		776:0:24681:25776	27972	0					
ANR	27975	IdentifierDeclStatement	zend_encoding * * script_encoding_list ;	778:1:24695:24731	27972	0	True				
ANR	27976	IdentifierDecl	* * script_encoding_list		27972	0					
ANR	27977	IdentifierDeclType	zend_encoding * *		27972	0					
ANR	27978	Identifier	script_encoding_list		27972	1					
ANR	27979	IdentifierDeclStatement	zend_compiler_globals * compiler_globals = ts_resource ( compiler_globals_id ) ;	780:1:24735:24809	27972	1	True				
ANR	27980	IdentifierDecl	* compiler_globals = ts_resource ( compiler_globals_id )		27972	0					
ANR	27981	IdentifierDeclType	zend_compiler_globals *		27972	0					
ANR	27982	Identifier	compiler_globals		27972	1					
ANR	27983	AssignmentExpression	* compiler_globals = ts_resource ( compiler_globals_id )		27972	2		=			
ANR	27984	Identifier	compiler_globals		27972	0					
ANR	27985	CallExpression	ts_resource ( compiler_globals_id )		27972	1					
ANR	27986	Callee	ts_resource		27972	0					
ANR	27987	Identifier	ts_resource		27972	0					
ANR	27988	ArgumentList	compiler_globals_id		27972	1					
ANR	27989	Argument	compiler_globals_id		27972	0					
ANR	27990	Identifier	compiler_globals_id		27972	0					
ANR	27991	IdentifierDeclStatement	zend_executor_globals * executor_globals = ts_resource ( executor_globals_id ) ;	781:1:24812:24886	27972	2	True				
ANR	27992	IdentifierDecl	* executor_globals = ts_resource ( executor_globals_id )		27972	0					
ANR	27993	IdentifierDeclType	zend_executor_globals *		27972	0					
ANR	27994	Identifier	executor_globals		27972	1					
ANR	27995	AssignmentExpression	* executor_globals = ts_resource ( executor_globals_id )		27972	2		=			
ANR	27996	Identifier	executor_globals		27972	0					
ANR	27997	CallExpression	ts_resource ( executor_globals_id )		27972	1					
ANR	27998	Callee	ts_resource		27972	0					
ANR	27999	Identifier	ts_resource		27972	0					
ANR	28000	ArgumentList	executor_globals_id		27972	1					
ANR	28001	Argument	executor_globals_id		27972	0					
ANR	28002	Identifier	executor_globals_id		27972	0					
ANR	28003	ExpressionStatement	* GLOBAL_FUNCTION_TABLE = * compiler_globals -> function_table	783:1:24890:24948	27972	3	True				
ANR	28004	AssignmentExpression	* GLOBAL_FUNCTION_TABLE = * compiler_globals -> function_table		27972	0		=			
ANR	28005	UnaryOperationExpression	* GLOBAL_FUNCTION_TABLE		27972	0					
ANR	28006	UnaryOperator	*		27972	0					
ANR	28007	Identifier	GLOBAL_FUNCTION_TABLE		27972	1					
ANR	28008	UnaryOperationExpression	* compiler_globals -> function_table		27972	1					
ANR	28009	UnaryOperator	*		27972	0					
ANR	28010	PtrMemberAccess	compiler_globals -> function_table		27972	1					
ANR	28011	Identifier	compiler_globals		27972	0					
ANR	28012	Identifier	function_table		27972	1					
ANR	28013	ExpressionStatement	* GLOBAL_CLASS_TABLE = * compiler_globals -> class_table	784:1:24951:25003	27972	4	True				
ANR	28014	AssignmentExpression	* GLOBAL_CLASS_TABLE = * compiler_globals -> class_table		27972	0		=			
ANR	28015	UnaryOperationExpression	* GLOBAL_CLASS_TABLE		27972	0					
ANR	28016	UnaryOperator	*		27972	0					
ANR	28017	Identifier	GLOBAL_CLASS_TABLE		27972	1					
ANR	28018	UnaryOperationExpression	* compiler_globals -> class_table		27972	1					
ANR	28019	UnaryOperator	*		27972	0					
ANR	28020	PtrMemberAccess	compiler_globals -> class_table		27972	1					
ANR	28021	Identifier	compiler_globals		27972	0					
ANR	28022	Identifier	class_table		27972	1					
ANR	28023	ExpressionStatement	* GLOBAL_CONSTANTS_TABLE = * executor_globals -> zend_constants	785:1:25006:25065	27972	5	True				
ANR	28024	AssignmentExpression	* GLOBAL_CONSTANTS_TABLE = * executor_globals -> zend_constants		27972	0		=			
ANR	28025	UnaryOperationExpression	* GLOBAL_CONSTANTS_TABLE		27972	0					
ANR	28026	UnaryOperator	*		27972	0					
ANR	28027	Identifier	GLOBAL_CONSTANTS_TABLE		27972	1					
ANR	28028	UnaryOperationExpression	* executor_globals -> zend_constants		27972	1					
ANR	28029	UnaryOperator	*		27972	0					
ANR	28030	PtrMemberAccess	executor_globals -> zend_constants		27972	1					
ANR	28031	Identifier	executor_globals		27972	0					
ANR	28032	Identifier	zend_constants		27972	1					
ANR	28033	ExpressionStatement	short_tags_default = CG ( short_tags )	787:1:25069:25104	27972	6	True				
ANR	28034	AssignmentExpression	short_tags_default = CG ( short_tags )		27972	0		=			
ANR	28035	Identifier	short_tags_default		27972	0					
ANR	28036	CallExpression	CG ( short_tags )		27972	1					
ANR	28037	Callee	CG		27972	0					
ANR	28038	Identifier	CG		27972	0					
ANR	28039	ArgumentList	short_tags		27972	1					
ANR	28040	Argument	short_tags		27972	0					
ANR	28041	Identifier	short_tags		27972	0					
ANR	28042	ExpressionStatement	compiler_options_default = CG ( compiler_options )	788:1:25107:25154	27972	7	True				
ANR	28043	AssignmentExpression	compiler_options_default = CG ( compiler_options )		27972	0		=			
ANR	28044	Identifier	compiler_options_default		27972	0					
ANR	28045	CallExpression	CG ( compiler_options )		27972	1					
ANR	28046	Callee	CG		27972	0					
ANR	28047	Identifier	CG		27972	0					
ANR	28048	ArgumentList	compiler_options		27972	1					
ANR	28049	Argument	compiler_options		27972	0					
ANR	28050	Identifier	compiler_options		27972	0					
ANR	28051	ExpressionStatement	zend_destroy_rsrc_list ( & EG ( persistent_list ) )	790:1:25158:25202	27972	8	True				
ANR	28052	CallExpression	zend_destroy_rsrc_list ( & EG ( persistent_list ) )		27972	0					
ANR	28053	Callee	zend_destroy_rsrc_list		27972	0					
ANR	28054	Identifier	zend_destroy_rsrc_list		27972	0					
ANR	28055	ArgumentList	& EG ( persistent_list )		27972	1					
ANR	28056	Argument	& EG ( persistent_list )		27972	0					
ANR	28057	UnaryOperationExpression	& EG ( persistent_list )		27972	0					
ANR	28058	UnaryOperator	&		27972	0					
ANR	28059	CallExpression	EG ( persistent_list )		27972	1					
ANR	28060	Callee	EG		27972	0					
ANR	28061	Identifier	EG		27972	0					
ANR	28062	ArgumentList	persistent_list		27972	1					
ANR	28063	Argument	persistent_list		27972	0					
ANR	28064	Identifier	persistent_list		27972	0					
ANR	28065	ExpressionStatement	free ( compiler_globals -> function_table )	791:1:25205:25243	27972	9	True				
ANR	28066	CallExpression	free ( compiler_globals -> function_table )		27972	0					
ANR	28067	Callee	free		27972	0					
ANR	28068	Identifier	free		27972	0					
ANR	28069	ArgumentList	compiler_globals -> function_table		27972	1					
ANR	28070	Argument	compiler_globals -> function_table		27972	0					
ANR	28071	PtrMemberAccess	compiler_globals -> function_table		27972	0					
ANR	28072	Identifier	compiler_globals		27972	0					
ANR	28073	Identifier	function_table		27972	1					
ANR	28074	ExpressionStatement	free ( compiler_globals -> class_table )	792:1:25246:25281	27972	10	True				
ANR	28075	CallExpression	free ( compiler_globals -> class_table )		27972	0					
ANR	28076	Callee	free		27972	0					
ANR	28077	Identifier	free		27972	0					
ANR	28078	ArgumentList	compiler_globals -> class_table		27972	1					
ANR	28079	Argument	compiler_globals -> class_table		27972	0					
ANR	28080	PtrMemberAccess	compiler_globals -> class_table		27972	0					
ANR	28081	Identifier	compiler_globals		27972	0					
ANR	28082	Identifier	class_table		27972	1					
ANR	28083	IfStatement	if ( ( script_encoding_list = ( zend_encoding * * ) compiler_globals -> script_encoding_list ) )		27972	11					
ANR	28084	Condition	script_encoding_list = ( zend_encoding * * ) compiler_globals -> script_encoding_list	793:5:25288:25368	27972	0	True				
ANR	28085	AssignmentExpression	script_encoding_list = ( zend_encoding * * ) compiler_globals -> script_encoding_list		27972	0		=			
ANR	28086	Identifier	script_encoding_list		27972	0					
ANR	28087	CastExpression	( zend_encoding * * ) compiler_globals -> script_encoding_list		27972	1					
ANR	28088	CastTarget	zend_encoding * *		27972	0					
ANR	28089	PtrMemberAccess	compiler_globals -> script_encoding_list		27972	1					
ANR	28090	Identifier	compiler_globals		27972	0					
ANR	28091	Identifier	script_encoding_list		27972	1					
ANR	28092	CompoundStatement		18:88:689:689	27972	1					
ANR	28093	ExpressionStatement	compiler_globals_ctor ( compiler_globals )	794:2:25375:25414	27972	0	True				
ANR	28094	CallExpression	compiler_globals_ctor ( compiler_globals )		27972	0					
ANR	28095	Callee	compiler_globals_ctor		27972	0					
ANR	28096	Identifier	compiler_globals_ctor		27972	0					
ANR	28097	ArgumentList	compiler_globals		27972	1					
ANR	28098	Argument	compiler_globals		27972	0					
ANR	28099	Identifier	compiler_globals		27972	0					
ANR	28100	ExpressionStatement	compiler_globals -> script_encoding_list = ( const zend_encoding * * ) script_encoding_list	795:2:25418:25503	27972	1	True				
ANR	28101	AssignmentExpression	compiler_globals -> script_encoding_list = ( const zend_encoding * * ) script_encoding_list		27972	0		=			
ANR	28102	PtrMemberAccess	compiler_globals -> script_encoding_list		27972	0					
ANR	28103	Identifier	compiler_globals		27972	0					
ANR	28104	Identifier	script_encoding_list		27972	1					
ANR	28105	CastExpression	( const zend_encoding * * ) script_encoding_list		27972	1					
ANR	28106	CastTarget	const zend_encoding * *		27972	0					
ANR	28107	Identifier	script_encoding_list		27972	1					
ANR	28108	ElseStatement	else		27972	0					
ANR	28109	CompoundStatement		21:8:831:831	27972	0					
ANR	28110	ExpressionStatement	compiler_globals_ctor ( compiler_globals )	797:2:25517:25556	27972	0	True				
ANR	28111	CallExpression	compiler_globals_ctor ( compiler_globals )		27972	0					
ANR	28112	Callee	compiler_globals_ctor		27972	0					
ANR	28113	Identifier	compiler_globals_ctor		27972	0					
ANR	28114	ArgumentList	compiler_globals		27972	1					
ANR	28115	Argument	compiler_globals		27972	0					
ANR	28116	Identifier	compiler_globals		27972	0					
ANR	28117	ExpressionStatement	free ( EG ( zend_constants ) )	799:1:25562:25586	27972	12	True				
ANR	28118	CallExpression	free ( EG ( zend_constants ) )		27972	0					
ANR	28119	Callee	free		27972	0					
ANR	28120	Identifier	free		27972	0					
ANR	28121	ArgumentList	EG ( zend_constants )		27972	1					
ANR	28122	Argument	EG ( zend_constants )		27972	0					
ANR	28123	CallExpression	EG ( zend_constants )		27972	0					
ANR	28124	Callee	EG		27972	0					
ANR	28125	Identifier	EG		27972	0					
ANR	28126	ArgumentList	zend_constants		27972	1					
ANR	28127	Argument	zend_constants		27972	0					
ANR	28128	Identifier	zend_constants		27972	0					
ANR	28129	ExpressionStatement	virtual_cwd_deactivate ( )	801:1:25590:25614	27972	13	True				
ANR	28130	CallExpression	virtual_cwd_deactivate ( )		27972	0					
ANR	28131	Callee	virtual_cwd_deactivate		27972	0					
ANR	28132	Identifier	virtual_cwd_deactivate		27972	0					
ANR	28133	ArgumentList			27972	1					
ANR	28134	ExpressionStatement	executor_globals_ctor ( executor_globals )	803:1:25618:25657	27972	14	True				
ANR	28135	CallExpression	executor_globals_ctor ( executor_globals )		27972	0					
ANR	28136	Callee	executor_globals_ctor		27972	0					
ANR	28137	Identifier	executor_globals_ctor		27972	0					
ANR	28138	ArgumentList	executor_globals		27972	1					
ANR	28139	Argument	executor_globals		27972	0					
ANR	28140	Identifier	executor_globals		27972	0					
ANR	28141	ExpressionStatement	global_persistent_list = & EG ( persistent_list )	804:1:25660:25705	27972	15	True				
ANR	28142	AssignmentExpression	global_persistent_list = & EG ( persistent_list )		27972	0		=			
ANR	28143	Identifier	global_persistent_list		27972	0					
ANR	28144	UnaryOperationExpression	& EG ( persistent_list )		27972	1					
ANR	28145	UnaryOperator	&		27972	0					
ANR	28146	CallExpression	EG ( persistent_list )		27972	1					
ANR	28147	Callee	EG		27972	0					
ANR	28148	Identifier	EG		27972	0					
ANR	28149	ArgumentList	persistent_list		27972	1					
ANR	28150	Argument	persistent_list		27972	0					
ANR	28151	Identifier	persistent_list		27972	0					
ANR	28152	ExpressionStatement	zend_copy_ini_directives ( )	805:1:25708:25734	27972	16	True				
ANR	28153	CallExpression	zend_copy_ini_directives ( )		27972	0					
ANR	28154	Callee	zend_copy_ini_directives		27972	0					
ANR	28155	Identifier	zend_copy_ini_directives		27972	0					
ANR	28156	ArgumentList			27972	1					
ANR	28157	ReturnType	void		27972	1					
ANR	28158	Identifier	zend_post_startup		27972	2					
ANR	28159	ParameterList			27972	3					
ANR	28160	CFGEntryNode	ENTRY		27972		True				
ANR	28161	CFGExitNode	EXIT		27972		True				
ANR	28162	Symbol	executor_globals_id		27972						
ANR	28163	Symbol	* GLOBAL_CONSTANTS_TABLE		27972						
ANR	28164	Symbol	GLOBAL_CONSTANTS_TABLE		27972						
ANR	28165	Symbol	compiler_globals_id		27972						
ANR	28166	Symbol	global_persistent_list		27972						
ANR	28167	Symbol	* compiler_globals		27972						
ANR	28168	Symbol	short_tags_default		27972						
ANR	28169	Symbol	& EG		27972						
ANR	28170	Symbol	compiler_options_default		27972						
ANR	28171	Symbol	compiler_globals		27972						
ANR	28172	Symbol	GLOBAL_CLASS_TABLE		27972						
ANR	28173	Symbol	persistent_list		27972						
ANR	28174	Symbol	compiler_options		27972						
ANR	28175	Symbol	zend_constants		27972						
ANR	28176	Symbol	* * compiler_globals		27972						
ANR	28177	Symbol	GLOBAL_FUNCTION_TABLE		27972						
ANR	28178	Symbol	* executor_globals		27972						
ANR	28179	Symbol	compiler_globals -> function_table		27972						
ANR	28180	Symbol	script_encoding_list		27972						
ANR	28181	Symbol	* GLOBAL_CLASS_TABLE		27972						
ANR	28182	Symbol	* executor_globals -> zend_constants		27972						
ANR	28183	Symbol	ts_resource		27972						
ANR	28184	Symbol	EG		27972						
ANR	28185	Symbol	CG		27972						
ANR	28186	Symbol	compiler_globals -> script_encoding_list		27972						
ANR	28187	Symbol	executor_globals -> zend_constants		27972						
ANR	28188	Symbol	short_tags		27972						
ANR	28189	Symbol	* compiler_globals -> function_table		27972						
ANR	28190	Symbol	* * executor_globals		27972						
ANR	28191	Symbol	compiler_globals -> class_table		27972						
ANR	28192	Symbol	* compiler_globals -> class_table		27972						
ANR	28193	Symbol	* GLOBAL_FUNCTION_TABLE		27972						
ANR	28194	Symbol	executor_globals		27972						
ANR	28195	Function	zend_shutdown	812:0:25789:27323							
ANR	28196	FunctionDef	zend_shutdown ()		28195	0					
ANR	28197	CompoundStatement		813:0:25824:27323	28195	0					
ANR	28198	ExpressionStatement	zend_destroy_rsrc_list ( & EG ( persistent_list ) )	814:1:25827:25871	28195	0	True				
ANR	28199	CallExpression	zend_destroy_rsrc_list ( & EG ( persistent_list ) )		28195	0					
ANR	28200	Callee	zend_destroy_rsrc_list		28195	0					
ANR	28201	Identifier	zend_destroy_rsrc_list		28195	0					
ANR	28202	ArgumentList	& EG ( persistent_list )		28195	1					
ANR	28203	Argument	& EG ( persistent_list )		28195	0					
ANR	28204	UnaryOperationExpression	& EG ( persistent_list )		28195	0					
ANR	28205	UnaryOperator	&		28195	0					
ANR	28206	CallExpression	EG ( persistent_list )		28195	1					
ANR	28207	Callee	EG		28195	0					
ANR	28208	Identifier	EG		28195	0					
ANR	28209	ArgumentList	persistent_list		28195	1					
ANR	28210	Argument	persistent_list		28195	0					
ANR	28211	Identifier	persistent_list		28195	0					
ANR	28212	IfStatement	if ( EG ( active ) )		28195	1					
ANR	28213	Condition	EG ( active )	815:5:25878:25887	28195	0	True				
ANR	28214	CallExpression	EG ( active )		28195	0					
ANR	28215	Callee	EG		28195	0					
ANR	28216	Identifier	EG		28195	0					
ANR	28217	ArgumentList	active		28195	1					
ANR	28218	Argument	active		28195	0					
ANR	28219	Identifier	active		28195	0					
ANR	28220	CompoundStatement		10:2:185:205	28195	1					
ANR	28221	IdentifierDeclStatement	zend_function * func ;	821:2:25987:26006	28195	0	True				
ANR	28222	IdentifierDecl	* func		28195	0					
ANR	28223	IdentifierDeclType	zend_function *		28195	0					
ANR	28224	Identifier	func		28195	1					
ANR	28225	IdentifierDeclStatement	zend_class_entry * ce ;	822:2:26010:26030	28195	1	True				
ANR	28226	IdentifierDecl	* ce		28195	0					
ANR	28227	IdentifierDeclType	zend_class_entry *		28195	0					
ANR	28228	Identifier	ce		28195	1					
ANR	28229	Statement	ZEND_HASH_REVERSE_FOREACH_PTR	824:2:26035:26063	28195	2	True				
ANR	28230	Statement	(	824:31:26064:26064	28195	3	True				
ANR	28231	Statement	GLOBAL_FUNCTION_TABLE	824:32:26065:26085	28195	4	True				
ANR	28232	Statement	","	824:53:26086:26086	28195	5	True				
ANR	28233	Statement	func	824:55:26088:26091	28195	6	True				
ANR	28234	Statement	)	824:59:26092:26092	28195	7	True				
ANR	28235	CompoundStatement		12:61:269:269	28195	8					
ANR	28236	IfStatement	if ( func -> type == ZEND_USER_FUNCTION )		28195	0					
ANR	28237	Condition	func -> type == ZEND_USER_FUNCTION	825:7:26103:26134	28195	0	True				
ANR	28238	EqualityExpression	func -> type == ZEND_USER_FUNCTION		28195	0		==			
ANR	28239	PtrMemberAccess	func -> type		28195	0					
ANR	28240	Identifier	func		28195	0					
ANR	28241	Identifier	type		28195	1					
ANR	28242	Identifier	ZEND_USER_FUNCTION		28195	1					
ANR	28243	CompoundStatement		13:41:312:312	28195	1					
ANR	28244	ExpressionStatement	zend_cleanup_op_array_data ( ( zend_op_array * ) func )	826:4:26143:26193	28195	0	True				
ANR	28245	CallExpression	zend_cleanup_op_array_data ( ( zend_op_array * ) func )		28195	0					
ANR	28246	Callee	zend_cleanup_op_array_data		28195	0					
ANR	28247	Identifier	zend_cleanup_op_array_data		28195	0					
ANR	28248	ArgumentList	( zend_op_array * ) func		28195	1					
ANR	28249	Argument	( zend_op_array * ) func		28195	0					
ANR	28250	CastExpression	( zend_op_array * ) func		28195	0					
ANR	28251	CastTarget	zend_op_array *		28195	0					
ANR	28252	Identifier	func		28195	1					
ANR	28253	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	828:4:26204:26227	28195	9	True				
ANR	28254	CallExpression	ZEND_HASH_FOREACH_END ( )		28195	0					
ANR	28255	Callee	ZEND_HASH_FOREACH_END		28195	0					
ANR	28256	Identifier	ZEND_HASH_FOREACH_END		28195	0					
ANR	28257	ArgumentList			28195	1					
ANR	28258	Statement	ZEND_HASH_REVERSE_FOREACH_PTR	829:2:26231:26259	28195	10	True				
ANR	28259	Statement	(	829:31:26260:26260	28195	11	True				
ANR	28260	Statement	GLOBAL_CLASS_TABLE	829:32:26261:26278	28195	12	True				
ANR	28261	Statement	","	829:50:26279:26279	28195	13	True				
ANR	28262	Statement	ce	829:52:26281:26282	28195	14	True				
ANR	28263	Statement	)	829:54:26283:26283	28195	15	True				
ANR	28264	CompoundStatement		17:56:460:460	28195	16					
ANR	28265	IfStatement	if ( ce -> type == ZEND_USER_CLASS )		28195	0					
ANR	28266	Condition	ce -> type == ZEND_USER_CLASS	830:7:26294:26320	28195	0	True				
ANR	28267	EqualityExpression	ce -> type == ZEND_USER_CLASS		28195	0		==			
ANR	28268	PtrMemberAccess	ce -> type		28195	0					
ANR	28269	Identifier	ce		28195	0					
ANR	28270	Identifier	type		28195	1					
ANR	28271	Identifier	ZEND_USER_CLASS		28195	1					
ANR	28272	CompoundStatement		18:36:498:498	28195	1					
ANR	28273	ExpressionStatement	zend_cleanup_user_class_data ( ce )	831:4:26329:26361	28195	0	True				
ANR	28274	CallExpression	zend_cleanup_user_class_data ( ce )		28195	0					
ANR	28275	Callee	zend_cleanup_user_class_data		28195	0					
ANR	28276	Identifier	zend_cleanup_user_class_data		28195	0					
ANR	28277	ArgumentList	ce		28195	1					
ANR	28278	Argument	ce		28195	0					
ANR	28279	Identifier	ce		28195	0					
ANR	28280	ElseStatement	else		28195	0					
ANR	28281	CompoundStatement		20:10:548:548	28195	0					
ANR	28282	BreakStatement	break ;	833:4:26379:26384	28195	0	True				
ANR	28283	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	835:4:26395:26418	28195	17	True				
ANR	28284	CallExpression	ZEND_HASH_FOREACH_END ( )		28195	0					
ANR	28285	Callee	ZEND_HASH_FOREACH_END		28195	0					
ANR	28286	Identifier	ZEND_HASH_FOREACH_END		28195	0					
ANR	28287	ArgumentList			28195	1					
ANR	28288	ExpressionStatement	zend_cleanup_internal_classes ( )	836:2:26422:26453	28195	18	True				
ANR	28289	CallExpression	zend_cleanup_internal_classes ( )		28195	0					
ANR	28290	Callee	zend_cleanup_internal_classes		28195	0					
ANR	28291	Identifier	zend_cleanup_internal_classes		28195	0					
ANR	28292	ArgumentList			28195	1					
ANR	28293	ExpressionStatement	"zend_hash_reverse_apply ( GLOBAL_FUNCTION_TABLE , ( apply_func_t ) clean_non_persistent_function_full )"	837:2:26457:26554	28195	19	True				
ANR	28294	CallExpression	"zend_hash_reverse_apply ( GLOBAL_FUNCTION_TABLE , ( apply_func_t ) clean_non_persistent_function_full )"		28195	0					
ANR	28295	Callee	zend_hash_reverse_apply		28195	0					
ANR	28296	Identifier	zend_hash_reverse_apply		28195	0					
ANR	28297	ArgumentList	GLOBAL_FUNCTION_TABLE		28195	1					
ANR	28298	Argument	GLOBAL_FUNCTION_TABLE		28195	0					
ANR	28299	Identifier	GLOBAL_FUNCTION_TABLE		28195	0					
ANR	28300	Argument	( apply_func_t ) clean_non_persistent_function_full		28195	1					
ANR	28301	CastExpression	( apply_func_t ) clean_non_persistent_function_full		28195	0					
ANR	28302	CastTarget	apply_func_t		28195	0					
ANR	28303	Identifier	clean_non_persistent_function_full		28195	1					
ANR	28304	ExpressionStatement	"zend_hash_reverse_apply ( GLOBAL_CLASS_TABLE , ( apply_func_t ) clean_non_persistent_class_full )"	838:2:26558:26649	28195	20	True				
ANR	28305	CallExpression	"zend_hash_reverse_apply ( GLOBAL_CLASS_TABLE , ( apply_func_t ) clean_non_persistent_class_full )"		28195	0					
ANR	28306	Callee	zend_hash_reverse_apply		28195	0					
ANR	28307	Identifier	zend_hash_reverse_apply		28195	0					
ANR	28308	ArgumentList	GLOBAL_CLASS_TABLE		28195	1					
ANR	28309	Argument	GLOBAL_CLASS_TABLE		28195	0					
ANR	28310	Identifier	GLOBAL_CLASS_TABLE		28195	0					
ANR	28311	Argument	( apply_func_t ) clean_non_persistent_class_full		28195	1					
ANR	28312	CastExpression	( apply_func_t ) clean_non_persistent_class_full		28195	0					
ANR	28313	CastTarget	apply_func_t		28195	0					
ANR	28314	Identifier	clean_non_persistent_class_full		28195	1					
ANR	28315	ExpressionStatement	zend_destroy_modules ( )	840:1:26655:26677	28195	2	True				
ANR	28316	CallExpression	zend_destroy_modules ( )		28195	0					
ANR	28317	Callee	zend_destroy_modules		28195	0					
ANR	28318	Identifier	zend_destroy_modules		28195	0					
ANR	28319	ArgumentList			28195	1					
ANR	28320	ExpressionStatement	virtual_cwd_deactivate ( )	842:1:26681:26705	28195	3	True				
ANR	28321	CallExpression	virtual_cwd_deactivate ( )		28195	0					
ANR	28322	Callee	virtual_cwd_deactivate		28195	0					
ANR	28323	Identifier	virtual_cwd_deactivate		28195	0					
ANR	28324	ArgumentList			28195	1					
ANR	28325	ExpressionStatement	virtual_cwd_shutdown ( )	843:1:26708:26730	28195	4	True				
ANR	28326	CallExpression	virtual_cwd_shutdown ( )		28195	0					
ANR	28327	Callee	virtual_cwd_shutdown		28195	0					
ANR	28328	Identifier	virtual_cwd_shutdown		28195	0					
ANR	28329	ArgumentList			28195	1					
ANR	28330	ExpressionStatement	zend_hash_destroy ( GLOBAL_FUNCTION_TABLE )	845:1:26734:26774	28195	5	True				
ANR	28331	CallExpression	zend_hash_destroy ( GLOBAL_FUNCTION_TABLE )		28195	0					
ANR	28332	Callee	zend_hash_destroy		28195	0					
ANR	28333	Identifier	zend_hash_destroy		28195	0					
ANR	28334	ArgumentList	GLOBAL_FUNCTION_TABLE		28195	1					
ANR	28335	Argument	GLOBAL_FUNCTION_TABLE		28195	0					
ANR	28336	Identifier	GLOBAL_FUNCTION_TABLE		28195	0					
ANR	28337	ExpressionStatement	zend_hash_destroy ( GLOBAL_CLASS_TABLE )	846:1:26777:26814	28195	6	True				
ANR	28338	CallExpression	zend_hash_destroy ( GLOBAL_CLASS_TABLE )		28195	0					
ANR	28339	Callee	zend_hash_destroy		28195	0					
ANR	28340	Identifier	zend_hash_destroy		28195	0					
ANR	28341	ArgumentList	GLOBAL_CLASS_TABLE		28195	1					
ANR	28342	Argument	GLOBAL_CLASS_TABLE		28195	0					
ANR	28343	Identifier	GLOBAL_CLASS_TABLE		28195	0					
ANR	28344	ExpressionStatement	zend_hash_destroy ( GLOBAL_AUTO_GLOBALS_TABLE )	848:1:26818:26862	28195	7	True				
ANR	28345	CallExpression	zend_hash_destroy ( GLOBAL_AUTO_GLOBALS_TABLE )		28195	0					
ANR	28346	Callee	zend_hash_destroy		28195	0					
ANR	28347	Identifier	zend_hash_destroy		28195	0					
ANR	28348	ArgumentList	GLOBAL_AUTO_GLOBALS_TABLE		28195	1					
ANR	28349	Argument	GLOBAL_AUTO_GLOBALS_TABLE		28195	0					
ANR	28350	Identifier	GLOBAL_AUTO_GLOBALS_TABLE		28195	0					
ANR	28351	ExpressionStatement	free ( GLOBAL_AUTO_GLOBALS_TABLE )	849:1:26865:26896	28195	8	True				
ANR	28352	CallExpression	free ( GLOBAL_AUTO_GLOBALS_TABLE )		28195	0					
ANR	28353	Callee	free		28195	0					
ANR	28354	Identifier	free		28195	0					
ANR	28355	ArgumentList	GLOBAL_AUTO_GLOBALS_TABLE		28195	1					
ANR	28356	Argument	GLOBAL_AUTO_GLOBALS_TABLE		28195	0					
ANR	28357	Identifier	GLOBAL_AUTO_GLOBALS_TABLE		28195	0					
ANR	28358	ExpressionStatement	zend_shutdown_extensions ( )	851:1:26900:26926	28195	9	True				
ANR	28359	CallExpression	zend_shutdown_extensions ( )		28195	0					
ANR	28360	Callee	zend_shutdown_extensions		28195	0					
ANR	28361	Identifier	zend_shutdown_extensions		28195	0					
ANR	28362	ArgumentList			28195	1					
ANR	28363	ExpressionStatement	free ( zend_version_info )	852:1:26929:26952	28195	10	True				
ANR	28364	CallExpression	free ( zend_version_info )		28195	0					
ANR	28365	Callee	free		28195	0					
ANR	28366	Identifier	free		28195	0					
ANR	28367	ArgumentList	zend_version_info		28195	1					
ANR	28368	Argument	zend_version_info		28195	0					
ANR	28369	Identifier	zend_version_info		28195	0					
ANR	28370	ExpressionStatement	free ( GLOBAL_FUNCTION_TABLE )	854:1:26956:26983	28195	11	True				
ANR	28371	CallExpression	free ( GLOBAL_FUNCTION_TABLE )		28195	0					
ANR	28372	Callee	free		28195	0					
ANR	28373	Identifier	free		28195	0					
ANR	28374	ArgumentList	GLOBAL_FUNCTION_TABLE		28195	1					
ANR	28375	Argument	GLOBAL_FUNCTION_TABLE		28195	0					
ANR	28376	Identifier	GLOBAL_FUNCTION_TABLE		28195	0					
ANR	28377	ExpressionStatement	free ( GLOBAL_CLASS_TABLE )	855:1:26986:27010	28195	12	True				
ANR	28378	CallExpression	free ( GLOBAL_CLASS_TABLE )		28195	0					
ANR	28379	Callee	free		28195	0					
ANR	28380	Identifier	free		28195	0					
ANR	28381	ArgumentList	GLOBAL_CLASS_TABLE		28195	1					
ANR	28382	Argument	GLOBAL_CLASS_TABLE		28195	0					
ANR	28383	Identifier	GLOBAL_CLASS_TABLE		28195	0					
ANR	28384	ExpressionStatement	zend_hash_destroy ( GLOBAL_CONSTANTS_TABLE )	857:1:27014:27055	28195	13	True				
ANR	28385	CallExpression	zend_hash_destroy ( GLOBAL_CONSTANTS_TABLE )		28195	0					
ANR	28386	Callee	zend_hash_destroy		28195	0					
ANR	28387	Identifier	zend_hash_destroy		28195	0					
ANR	28388	ArgumentList	GLOBAL_CONSTANTS_TABLE		28195	1					
ANR	28389	Argument	GLOBAL_CONSTANTS_TABLE		28195	0					
ANR	28390	Identifier	GLOBAL_CONSTANTS_TABLE		28195	0					
ANR	28391	ExpressionStatement	free ( GLOBAL_CONSTANTS_TABLE )	858:1:27058:27086	28195	14	True				
ANR	28392	CallExpression	free ( GLOBAL_CONSTANTS_TABLE )		28195	0					
ANR	28393	Callee	free		28195	0					
ANR	28394	Identifier	free		28195	0					
ANR	28395	ArgumentList	GLOBAL_CONSTANTS_TABLE		28195	1					
ANR	28396	Argument	GLOBAL_CONSTANTS_TABLE		28195	0					
ANR	28397	Identifier	GLOBAL_CONSTANTS_TABLE		28195	0					
ANR	28398	ExpressionStatement	zend_shutdown_strtod ( )	859:1:27089:27111	28195	15	True				
ANR	28399	CallExpression	zend_shutdown_strtod ( )		28195	0					
ANR	28400	Callee	zend_shutdown_strtod		28195	0					
ANR	28401	Identifier	zend_shutdown_strtod		28195	0					
ANR	28402	ArgumentList			28195	1					
ANR	28403	ExpressionStatement	GLOBAL_FUNCTION_TABLE = NULL	862:1:27126:27154	28195	16	True				
ANR	28404	AssignmentExpression	GLOBAL_FUNCTION_TABLE = NULL		28195	0		=			
ANR	28405	Identifier	GLOBAL_FUNCTION_TABLE		28195	0					
ANR	28406	Identifier	NULL		28195	1					
ANR	28407	ExpressionStatement	GLOBAL_CLASS_TABLE = NULL	863:1:27157:27182	28195	17	True				
ANR	28408	AssignmentExpression	GLOBAL_CLASS_TABLE = NULL		28195	0		=			
ANR	28409	Identifier	GLOBAL_CLASS_TABLE		28195	0					
ANR	28410	Identifier	NULL		28195	1					
ANR	28411	ExpressionStatement	GLOBAL_AUTO_GLOBALS_TABLE = NULL	864:1:27185:27217	28195	18	True				
ANR	28412	AssignmentExpression	GLOBAL_AUTO_GLOBALS_TABLE = NULL		28195	0		=			
ANR	28413	Identifier	GLOBAL_AUTO_GLOBALS_TABLE		28195	0					
ANR	28414	Identifier	NULL		28195	1					
ANR	28415	ExpressionStatement	GLOBAL_CONSTANTS_TABLE = NULL	865:1:27220:27249	28195	19	True				
ANR	28416	AssignmentExpression	GLOBAL_CONSTANTS_TABLE = NULL		28195	0		=			
ANR	28417	Identifier	GLOBAL_CONSTANTS_TABLE		28195	0					
ANR	28418	Identifier	NULL		28195	1					
ANR	28419	ExpressionStatement	zend_destroy_rsrc_list_dtors ( )	867:1:27259:27289	28195	20	True				
ANR	28420	CallExpression	zend_destroy_rsrc_list_dtors ( )		28195	0					
ANR	28421	Callee	zend_destroy_rsrc_list_dtors		28195	0					
ANR	28422	Identifier	zend_destroy_rsrc_list_dtors		28195	0					
ANR	28423	ArgumentList			28195	1					
ANR	28424	ExpressionStatement	zend_interned_strings_dtor ( )	869:1:27293:27321	28195	21	True				
ANR	28425	CallExpression	zend_interned_strings_dtor ( )		28195	0					
ANR	28426	Callee	zend_interned_strings_dtor		28195	0					
ANR	28427	Identifier	zend_interned_strings_dtor		28195	0					
ANR	28428	ArgumentList			28195	1					
ANR	28429	ReturnType	void		28195	1					
ANR	28430	Identifier	zend_shutdown		28195	2					
ANR	28431	ParameterList			28195	3					
ANR	28432	CFGEntryNode	ENTRY		28195		True				
ANR	28433	CFGExitNode	EXIT		28195		True				
ANR	28434	CFGErrorNode	ERROR		28195		True				
ANR	28435	Symbol	ce -> type		28195						
ANR	28436	Symbol	EG		28195						
ANR	28437	Symbol	ce		28195						
ANR	28438	Symbol	NULL		28195						
ANR	28439	Symbol	* func		28195						
ANR	28440	Symbol	clean_non_persistent_class_full		28195						
ANR	28441	Symbol	GLOBAL_CONSTANTS_TABLE		28195						
ANR	28442	Symbol	active		28195						
ANR	28443	Symbol	GLOBAL_AUTO_GLOBALS_TABLE		28195						
ANR	28444	Symbol	* ce		28195						
ANR	28445	Symbol	clean_non_persistent_function_full		28195						
ANR	28446	Symbol	& EG		28195						
ANR	28447	Symbol	GLOBAL_CLASS_TABLE		28195						
ANR	28448	Symbol	persistent_list		28195						
ANR	28449	Symbol	func		28195						
ANR	28450	Symbol	ZEND_USER_CLASS		28195						
ANR	28451	Symbol	ZEND_USER_FUNCTION		28195						
ANR	28452	Symbol	func -> type		28195						
ANR	28453	Symbol	zend_version_info		28195						
ANR	28454	Symbol	GLOBAL_FUNCTION_TABLE		28195						
ANR	28455	Function	zend_set_utility_values	873:0:27336:27525							
ANR	28456	FunctionDef	zend_set_utility_values (zend_utility_values * utility_values)		28455	0					
ANR	28457	CompoundStatement		874:0:27412:27525	28455	0					
ANR	28458	ExpressionStatement	zend_uv = * utility_values	875:1:27415:27440	28455	0	True				
ANR	28459	AssignmentExpression	zend_uv = * utility_values		28455	0		=			
ANR	28460	Identifier	zend_uv		28455	0					
ANR	28461	UnaryOperationExpression	* utility_values		28455	1					
ANR	28462	UnaryOperator	*		28455	0					
ANR	28463	Identifier	utility_values		28455	1					
ANR	28464	ExpressionStatement	zend_uv . import_use_extension_length = ( uint ) strlen ( zend_uv . import_use_extension )	876:1:27443:27523	28455	1	True				
ANR	28465	AssignmentExpression	zend_uv . import_use_extension_length = ( uint ) strlen ( zend_uv . import_use_extension )		28455	0		=			
ANR	28466	MemberAccess	zend_uv . import_use_extension_length		28455	0					
ANR	28467	Identifier	zend_uv		28455	0					
ANR	28468	Identifier	import_use_extension_length		28455	1					
ANR	28469	CastExpression	( uint ) strlen ( zend_uv . import_use_extension )		28455	1					
ANR	28470	CastTarget	uint		28455	0					
ANR	28471	CallExpression	strlen ( zend_uv . import_use_extension )		28455	1					
ANR	28472	Callee	strlen		28455	0					
ANR	28473	Identifier	strlen		28455	0					
ANR	28474	ArgumentList	zend_uv . import_use_extension		28455	1					
ANR	28475	Argument	zend_uv . import_use_extension		28455	0					
ANR	28476	MemberAccess	zend_uv . import_use_extension		28455	0					
ANR	28477	Identifier	zend_uv		28455	0					
ANR	28478	Identifier	import_use_extension		28455	1					
ANR	28479	ReturnType	void		28455	1					
ANR	28480	Identifier	zend_set_utility_values		28455	2					
ANR	28481	ParameterList	zend_utility_values * utility_values		28455	3					
ANR	28482	Parameter	zend_utility_values * utility_values	873:29:27365:27399	28455	0	True				
ANR	28483	ParameterType	zend_utility_values *		28455	0					
ANR	28484	Identifier	utility_values		28455	1					
ANR	28485	CFGEntryNode	ENTRY		28455		True				
ANR	28486	CFGExitNode	EXIT		28455		True				
ANR	28487	Symbol	zend_uv . import_use_extension_length		28455						
ANR	28488	Symbol	zend_uv		28455						
ANR	28489	Symbol	strlen		28455						
ANR	28490	Symbol	zend_uv . import_use_extension		28455						
ANR	28491	Symbol	utility_values		28455						
ANR	28492	Symbol	* utility_values		28455						
ANR	28493	Function	zenderror	881:0:27598:27825							
ANR	28494	FunctionDef	zenderror (const char * error)		28493	0					
ANR	28495	CompoundStatement		882:0:27652:27825	28493	0					
ANR	28496	IfStatement	if ( EG ( exception ) )		28493	0					
ANR	28497	Condition	EG ( exception )	883:5:27659:27671	28493	0	True				
ANR	28498	CallExpression	EG ( exception )		28493	0					
ANR	28499	Callee	EG		28493	0					
ANR	28500	Identifier	EG		28493	0					
ANR	28501	ArgumentList	exception		28493	1					
ANR	28502	Argument	exception		28493	0					
ANR	28503	Identifier	exception		28493	0					
ANR	28504	CompoundStatement		2:20:21:21	28493	1					
ANR	28505	ReturnStatement	return ;	885:2:27759:27765	28493	0	True				
ANR	28506	ExpressionStatement	"zend_throw_exception ( zend_ce_parse_error , error , 0 )"	888:1:27772:27823	28493	1	True				
ANR	28507	CallExpression	"zend_throw_exception ( zend_ce_parse_error , error , 0 )"		28493	0					
ANR	28508	Callee	zend_throw_exception		28493	0					
ANR	28509	Identifier	zend_throw_exception		28493	0					
ANR	28510	ArgumentList	zend_ce_parse_error		28493	1					
ANR	28511	Argument	zend_ce_parse_error		28493	0					
ANR	28512	Identifier	zend_ce_parse_error		28493	0					
ANR	28513	Argument	error		28493	1					
ANR	28514	Identifier	error		28493	0					
ANR	28515	Argument	0		28493	2					
ANR	28516	PrimaryExpression	0		28493	0					
ANR	28517	ReturnType	ZEND_COLD void		28493	1					
ANR	28518	Identifier	zenderror		28493	2					
ANR	28519	ParameterList	const char * error		28493	3					
ANR	28520	Parameter	const char * error	881:25:27623:27639	28493	0	True				
ANR	28521	ParameterType	const char *		28493	0					
ANR	28522	Identifier	error		28493	1					
ANR	28523	CFGEntryNode	ENTRY		28493		True				
ANR	28524	CFGExitNode	EXIT		28493		True				
ANR	28525	Symbol	exception		28493						
ANR	28526	Symbol	EG		28493						
ANR	28527	Symbol	error		28493						
ANR	28528	Symbol	zend_ce_parse_error		28493						
ANR	28529	Function	_zend_bailout	893:0:27855:28221							
ANR	28530	FunctionDef	"_zend_bailout (char * filename , uint lineno)"		28529	0					
ANR	28531	CompoundStatement		894:0:27932:28221	28529	0					
ANR	28532	IfStatement	if ( ! EG ( bailout ) )		28529	0					
ANR	28533	Condition	! EG ( bailout )	896:5:27940:27951	28529	0	True				
ANR	28534	UnaryOperationExpression	! EG ( bailout )		28529	0					
ANR	28535	UnaryOperator	!		28529	0					
ANR	28536	CallExpression	EG ( bailout )		28529	1					
ANR	28537	Callee	EG		28529	0					
ANR	28538	Identifier	EG		28529	0					
ANR	28539	ArgumentList	bailout		28529	1					
ANR	28540	Argument	bailout		28529	0					
ANR	28541	Identifier	bailout		28529	0					
ANR	28542	CompoundStatement		3:19:21:21	28529	1					
ANR	28543	ExpressionStatement	"zend_output_debug_string ( 1 , ""%s(%d) : Bailed out without a bailout address!"" , filename , lineno )"	897:2:27958:28053	28529	0	True				
ANR	28544	CallExpression	"zend_output_debug_string ( 1 , ""%s(%d) : Bailed out without a bailout address!"" , filename , lineno )"		28529	0					
ANR	28545	Callee	zend_output_debug_string		28529	0					
ANR	28546	Identifier	zend_output_debug_string		28529	0					
ANR	28547	ArgumentList	1		28529	1					
ANR	28548	Argument	1		28529	0					
ANR	28549	PrimaryExpression	1		28529	0					
ANR	28550	Argument	"""%s(%d) : Bailed out without a bailout address!"""		28529	1					
ANR	28551	PrimaryExpression	"""%s(%d) : Bailed out without a bailout address!"""		28529	0					
ANR	28552	Argument	filename		28529	2					
ANR	28553	Identifier	filename		28529	0					
ANR	28554	Argument	lineno		28529	3					
ANR	28555	Identifier	lineno		28529	0					
ANR	28556	ExpressionStatement	exit ( - 1 )	898:2:28057:28065	28529	1	True				
ANR	28557	CallExpression	exit ( - 1 )		28529	0					
ANR	28558	Callee	exit		28529	0					
ANR	28559	Identifier	exit		28529	0					
ANR	28560	ArgumentList	- 1		28529	1					
ANR	28561	Argument	- 1		28529	0					
ANR	28562	UnaryOperationExpression	- 1		28529	0					
ANR	28563	UnaryOperator	-		28529	0					
ANR	28564	PrimaryExpression	1		28529	1					
ANR	28565	ExpressionStatement	CG ( unclean_shutdown ) = 1	900:1:28071:28095	28529	1	True				
ANR	28566	AssignmentExpression	CG ( unclean_shutdown ) = 1		28529	0		=			
ANR	28567	CallExpression	CG ( unclean_shutdown )		28529	0					
ANR	28568	Callee	CG		28529	0					
ANR	28569	Identifier	CG		28529	0					
ANR	28570	ArgumentList	unclean_shutdown		28529	1					
ANR	28571	Argument	unclean_shutdown		28529	0					
ANR	28572	Identifier	unclean_shutdown		28529	0					
ANR	28573	PrimaryExpression	1		28529	1					
ANR	28574	ExpressionStatement	CG ( active_class_entry ) = NULL	901:1:28098:28127	28529	2	True				
ANR	28575	AssignmentExpression	CG ( active_class_entry ) = NULL		28529	0		=			
ANR	28576	CallExpression	CG ( active_class_entry )		28529	0					
ANR	28577	Callee	CG		28529	0					
ANR	28578	Identifier	CG		28529	0					
ANR	28579	ArgumentList	active_class_entry		28529	1					
ANR	28580	Argument	active_class_entry		28529	0					
ANR	28581	Identifier	active_class_entry		28529	0					
ANR	28582	Identifier	NULL		28529	1					
ANR	28583	ExpressionStatement	CG ( in_compilation ) = 0	902:1:28130:28152	28529	3	True				
ANR	28584	AssignmentExpression	CG ( in_compilation ) = 0		28529	0		=			
ANR	28585	CallExpression	CG ( in_compilation )		28529	0					
ANR	28586	Callee	CG		28529	0					
ANR	28587	Identifier	CG		28529	0					
ANR	28588	ArgumentList	in_compilation		28529	1					
ANR	28589	Argument	in_compilation		28529	0					
ANR	28590	Identifier	in_compilation		28529	0					
ANR	28591	PrimaryExpression	0		28529	1					
ANR	28592	ExpressionStatement	EG ( current_execute_data ) = NULL	903:1:28155:28186	28529	4	True				
ANR	28593	AssignmentExpression	EG ( current_execute_data ) = NULL		28529	0		=			
ANR	28594	CallExpression	EG ( current_execute_data )		28529	0					
ANR	28595	Callee	EG		28529	0					
ANR	28596	Identifier	EG		28529	0					
ANR	28597	ArgumentList	current_execute_data		28529	1					
ANR	28598	Argument	current_execute_data		28529	0					
ANR	28599	Identifier	current_execute_data		28529	0					
ANR	28600	Identifier	NULL		28529	1					
ANR	28601	ExpressionStatement	"LONGJMP ( * EG ( bailout ) , FAILURE )"	904:1:28189:28219	28529	5	True				
ANR	28602	CallExpression	"LONGJMP ( * EG ( bailout ) , FAILURE )"		28529	0					
ANR	28603	Callee	LONGJMP		28529	0					
ANR	28604	Identifier	LONGJMP		28529	0					
ANR	28605	ArgumentList	* EG ( bailout )		28529	1					
ANR	28606	Argument	* EG ( bailout )		28529	0					
ANR	28607	UnaryOperationExpression	* EG ( bailout )		28529	0					
ANR	28608	UnaryOperator	*		28529	0					
ANR	28609	CallExpression	EG ( bailout )		28529	1					
ANR	28610	Callee	EG		28529	0					
ANR	28611	Identifier	EG		28529	0					
ANR	28612	ArgumentList	bailout		28529	1					
ANR	28613	Argument	bailout		28529	0					
ANR	28614	Identifier	bailout		28529	0					
ANR	28615	Argument	FAILURE		28529	1					
ANR	28616	Identifier	FAILURE		28529	0					
ANR	28617	ReturnType	ZEND_API ZEND_COLD void		28529	1					
ANR	28618	Identifier	_zend_bailout		28529	2					
ANR	28619	ParameterList	"char * filename , uint lineno"		28529	3					
ANR	28620	Parameter	char * filename	893:38:27893:27906	28529	0	True				
ANR	28621	ParameterType	char *		28529	0					
ANR	28622	Identifier	filename		28529	1					
ANR	28623	Parameter	uint lineno	893:54:27909:27919	28529	1	True				
ANR	28624	ParameterType	uint		28529	0					
ANR	28625	Identifier	lineno		28529	1					
ANR	28626	CFGEntryNode	ENTRY		28529		True				
ANR	28627	CFGExitNode	EXIT		28529		True				
ANR	28628	Symbol	EG		28529						
ANR	28629	Symbol	NULL		28529						
ANR	28630	Symbol	CG		28529						
ANR	28631	Symbol	active_class_entry		28529						
ANR	28632	Symbol	current_execute_data		28529						
ANR	28633	Symbol	* EG		28529						
ANR	28634	Symbol	FAILURE		28529						
ANR	28635	Symbol	in_compilation		28529						
ANR	28636	Symbol	bailout		28529						
ANR	28637	Symbol	unclean_shutdown		28529						
ANR	28638	Symbol	filename		28529						
ANR	28639	Symbol	lineno		28529						
ANR	28640	Symbol	* EG ( bailout )		28529						
ANR	28641	Function	zend_append_version_info	909:0:28249:28995							
ANR	28642	FunctionDef	zend_append_version_info (const zend_extension * extension)		28641	0					
ANR	28643	CompoundStatement		910:0:28331:28995	28641	0					
ANR	28644	IdentifierDeclStatement	char * new_info ;	911:1:28334:28348	28641	0	True				
ANR	28645	IdentifierDecl	* new_info		28641	0					
ANR	28646	IdentifierDeclType	char *		28641	0					
ANR	28647	Identifier	new_info		28641	1					
ANR	28648	IdentifierDeclStatement	uint new_info_length ;	912:1:28351:28371	28641	1	True				
ANR	28649	IdentifierDecl	new_info_length		28641	0					
ANR	28650	IdentifierDeclType	uint		28641	0					
ANR	28651	Identifier	new_info_length		28641	1					
ANR	28652	ExpressionStatement	"new_info_length = ( uint ) ( sizeof ( ""    with  v, , by \\n"" ) + strlen ( extension -> name ) + strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author ) )"	914:1:28375:28569	28641	2	True				
ANR	28653	AssignmentExpression	"new_info_length = ( uint ) ( sizeof ( ""    with  v, , by \\n"" ) + strlen ( extension -> name ) + strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author ) )"		28641	0		=			
ANR	28654	Identifier	new_info_length		28641	0					
ANR	28655	CastExpression	"( uint ) ( sizeof ( ""    with  v, , by \\n"" ) + strlen ( extension -> name ) + strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author ) )"		28641	1					
ANR	28656	CastTarget	uint		28641	0					
ANR	28657	AdditiveExpression	"sizeof ( ""    with  v, , by \\n"" ) + strlen ( extension -> name ) + strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author )"		28641	1		+			
ANR	28658	SizeofExpression	"sizeof ( ""    with  v, , by \\n"" )"		28641	0					
ANR	28659	Sizeof	sizeof		28641	0					
ANR	28660	PrimaryExpression	"""    with  v, , by \\n"""		28641	1					
ANR	28661	AdditiveExpression	strlen ( extension -> name ) + strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author )		28641	1		+			
ANR	28662	CallExpression	strlen ( extension -> name )		28641	0					
ANR	28663	Callee	strlen		28641	0					
ANR	28664	Identifier	strlen		28641	0					
ANR	28665	ArgumentList	extension -> name		28641	1					
ANR	28666	Argument	extension -> name		28641	0					
ANR	28667	PtrMemberAccess	extension -> name		28641	0					
ANR	28668	Identifier	extension		28641	0					
ANR	28669	Identifier	name		28641	1					
ANR	28670	AdditiveExpression	strlen ( extension -> version ) + strlen ( extension -> copyright ) + strlen ( extension -> author )		28641	1		+			
ANR	28671	CallExpression	strlen ( extension -> version )		28641	0					
ANR	28672	Callee	strlen		28641	0					
ANR	28673	Identifier	strlen		28641	0					
ANR	28674	ArgumentList	extension -> version		28641	1					
ANR	28675	Argument	extension -> version		28641	0					
ANR	28676	PtrMemberAccess	extension -> version		28641	0					
ANR	28677	Identifier	extension		28641	0					
ANR	28678	Identifier	version		28641	1					
ANR	28679	AdditiveExpression	strlen ( extension -> copyright ) + strlen ( extension -> author )		28641	1		+			
ANR	28680	CallExpression	strlen ( extension -> copyright )		28641	0					
ANR	28681	Callee	strlen		28641	0					
ANR	28682	Identifier	strlen		28641	0					
ANR	28683	ArgumentList	extension -> copyright		28641	1					
ANR	28684	Argument	extension -> copyright		28641	0					
ANR	28685	PtrMemberAccess	extension -> copyright		28641	0					
ANR	28686	Identifier	extension		28641	0					
ANR	28687	Identifier	copyright		28641	1					
ANR	28688	CallExpression	strlen ( extension -> author )		28641	1					
ANR	28689	Callee	strlen		28641	0					
ANR	28690	Identifier	strlen		28641	0					
ANR	28691	ArgumentList	extension -> author		28641	1					
ANR	28692	Argument	extension -> author		28641	0					
ANR	28693	PtrMemberAccess	extension -> author		28641	0					
ANR	28694	Identifier	extension		28641	0					
ANR	28695	Identifier	author		28641	1					
ANR	28696	ExpressionStatement	new_info = ( char * ) malloc ( new_info_length + 1 )	920:1:28573:28620	28641	3	True				
ANR	28697	AssignmentExpression	new_info = ( char * ) malloc ( new_info_length + 1 )		28641	0		=			
ANR	28698	Identifier	new_info		28641	0					
ANR	28699	CastExpression	( char * ) malloc ( new_info_length + 1 )		28641	1					
ANR	28700	CastTarget	char *		28641	0					
ANR	28701	CallExpression	malloc ( new_info_length + 1 )		28641	1					
ANR	28702	Callee	malloc		28641	0					
ANR	28703	Identifier	malloc		28641	0					
ANR	28704	ArgumentList	new_info_length + 1		28641	1					
ANR	28705	Argument	new_info_length + 1		28641	0					
ANR	28706	AdditiveExpression	new_info_length + 1		28641	0		+			
ANR	28707	Identifier	new_info_length		28641	0					
ANR	28708	PrimaryExpression	1		28641	1					
ANR	28709	ExpressionStatement	"snprintf ( new_info , new_info_length , ""    with %s v%s, %s, by %s\\n"" , extension -> name , extension -> version , extension -> copyright , extension -> author )"	922:1:28624:28769	28641	4	True				
ANR	28710	CallExpression	"snprintf ( new_info , new_info_length , ""    with %s v%s, %s, by %s\\n"" , extension -> name , extension -> version , extension -> copyright , extension -> author )"		28641	0					
ANR	28711	Callee	snprintf		28641	0					
ANR	28712	Identifier	snprintf		28641	0					
ANR	28713	ArgumentList	new_info		28641	1					
ANR	28714	Argument	new_info		28641	0					
ANR	28715	Identifier	new_info		28641	0					
ANR	28716	Argument	new_info_length		28641	1					
ANR	28717	Identifier	new_info_length		28641	0					
ANR	28718	Argument	"""    with %s v%s, %s, by %s\\n"""		28641	2					
ANR	28719	PrimaryExpression	"""    with %s v%s, %s, by %s\\n"""		28641	0					
ANR	28720	Argument	extension -> name		28641	3					
ANR	28721	PtrMemberAccess	extension -> name		28641	0					
ANR	28722	Identifier	extension		28641	0					
ANR	28723	Identifier	name		28641	1					
ANR	28724	Argument	extension -> version		28641	4					
ANR	28725	PtrMemberAccess	extension -> version		28641	0					
ANR	28726	Identifier	extension		28641	0					
ANR	28727	Identifier	version		28641	1					
ANR	28728	Argument	extension -> copyright		28641	5					
ANR	28729	PtrMemberAccess	extension -> copyright		28641	0					
ANR	28730	Identifier	extension		28641	0					
ANR	28731	Identifier	copyright		28641	1					
ANR	28732	Argument	extension -> author		28641	6					
ANR	28733	PtrMemberAccess	extension -> author		28641	0					
ANR	28734	Identifier	extension		28641	0					
ANR	28735	Identifier	author		28641	1					
ANR	28736	ExpressionStatement	"zend_version_info = ( char * ) realloc ( zend_version_info , zend_version_info_length + new_info_length + 1 )"	924:1:28773:28874	28641	5	True				
ANR	28737	AssignmentExpression	"zend_version_info = ( char * ) realloc ( zend_version_info , zend_version_info_length + new_info_length + 1 )"		28641	0		=			
ANR	28738	Identifier	zend_version_info		28641	0					
ANR	28739	CastExpression	"( char * ) realloc ( zend_version_info , zend_version_info_length + new_info_length + 1 )"		28641	1					
ANR	28740	CastTarget	char *		28641	0					
ANR	28741	CallExpression	"realloc ( zend_version_info , zend_version_info_length + new_info_length + 1 )"		28641	1					
ANR	28742	Callee	realloc		28641	0					
ANR	28743	Identifier	realloc		28641	0					
ANR	28744	ArgumentList	zend_version_info		28641	1					
ANR	28745	Argument	zend_version_info		28641	0					
ANR	28746	Identifier	zend_version_info		28641	0					
ANR	28747	Argument	zend_version_info_length + new_info_length + 1		28641	1					
ANR	28748	AdditiveExpression	zend_version_info_length + new_info_length + 1		28641	0		+			
ANR	28749	Identifier	zend_version_info_length		28641	0					
ANR	28750	AdditiveExpression	new_info_length + 1		28641	1		+			
ANR	28751	Identifier	new_info_length		28641	0					
ANR	28752	PrimaryExpression	1		28641	1					
ANR	28753	ExpressionStatement	"strncat ( zend_version_info , new_info , new_info_length )"	925:1:28877:28930	28641	6	True				
ANR	28754	CallExpression	"strncat ( zend_version_info , new_info , new_info_length )"		28641	0					
ANR	28755	Callee	strncat		28641	0					
ANR	28756	Identifier	strncat		28641	0					
ANR	28757	ArgumentList	zend_version_info		28641	1					
ANR	28758	Argument	zend_version_info		28641	0					
ANR	28759	Identifier	zend_version_info		28641	0					
ANR	28760	Argument	new_info		28641	1					
ANR	28761	Identifier	new_info		28641	0					
ANR	28762	Argument	new_info_length		28641	2					
ANR	28763	Identifier	new_info_length		28641	0					
ANR	28764	ExpressionStatement	zend_version_info_length += new_info_length	926:1:28933:28976	28641	7	True				
ANR	28765	AssignmentExpression	zend_version_info_length += new_info_length		28641	0		+=			
ANR	28766	Identifier	zend_version_info_length		28641	0					
ANR	28767	Identifier	new_info_length		28641	1					
ANR	28768	ExpressionStatement	free ( new_info )	927:1:28979:28993	28641	8	True				
ANR	28769	CallExpression	free ( new_info )		28641	0					
ANR	28770	Callee	free		28641	0					
ANR	28771	Identifier	free		28641	0					
ANR	28772	ArgumentList	new_info		28641	1					
ANR	28773	Argument	new_info		28641	0					
ANR	28774	Identifier	new_info		28641	0					
ANR	28775	ReturnType	ZEND_API void		28641	1					
ANR	28776	Identifier	zend_append_version_info		28641	2					
ANR	28777	ParameterList	const zend_extension * extension		28641	3					
ANR	28778	Parameter	const zend_extension * extension	909:39:28288:28318	28641	0	True				
ANR	28779	ParameterType	const zend_extension *		28641	0					
ANR	28780	Identifier	extension		28641	1					
ANR	28781	CFGEntryNode	ENTRY		28641		True				
ANR	28782	CFGExitNode	EXIT		28641		True				
ANR	28783	Symbol	extension -> name		28641						
ANR	28784	Symbol	malloc		28641						
ANR	28785	Symbol	extension		28641						
ANR	28786	Symbol	new_info_length		28641						
ANR	28787	Symbol	zend_version_info_length		28641						
ANR	28788	Symbol	realloc		28641						
ANR	28789	Symbol	extension -> copyright		28641						
ANR	28790	Symbol	strlen		28641						
ANR	28791	Symbol	extension -> version		28641						
ANR	28792	Symbol	* extension		28641						
ANR	28793	Symbol	zend_version_info		28641						
ANR	28794	Symbol	extension -> author		28641						
ANR	28795	Symbol	new_info		28641						
ANR	28796	Function	get_zend_version	931:0:29008:29085							
ANR	28797	FunctionDef	get_zend_version ()		28796	0					
ANR	28798	CompoundStatement		932:0:29056:29085	28796	0					
ANR	28799	ReturnStatement	return zend_version_info ;	933:1:29059:29083	28796	0	True				
ANR	28800	Identifier	zend_version_info		28796	0					
ANR	28801	ReturnType	ZEND_API char *		28796	1					
ANR	28802	Identifier	get_zend_version		28796	2					
ANR	28803	ParameterList			28796	3					
ANR	28804	CFGEntryNode	ENTRY		28796		True				
ANR	28805	CFGExitNode	EXIT		28796		True				
ANR	28806	Symbol	zend_version_info		28796						
ANR	28807	Function	zend_activate	937:0:29098:29256							
ANR	28808	FunctionDef	zend_activate ()		28807	0					
ANR	28809	CompoundStatement		938:0:29142:29256	28807	0					
ANR	28810	ExpressionStatement	virtual_cwd_activate ( )	940:1:29156:29178	28807	0	True				
ANR	28811	CallExpression	virtual_cwd_activate ( )		28807	0					
ANR	28812	Callee	virtual_cwd_activate		28807	0					
ANR	28813	Identifier	virtual_cwd_activate		28807	0					
ANR	28814	ArgumentList			28807	1					
ANR	28815	ExpressionStatement	gc_reset ( )	942:1:29188:29198	28807	1	True				
ANR	28816	CallExpression	gc_reset ( )		28807	0					
ANR	28817	Callee	gc_reset		28807	0					
ANR	28818	Identifier	gc_reset		28807	0					
ANR	28819	ArgumentList			28807	1					
ANR	28820	ExpressionStatement	init_compiler ( )	943:1:29201:29216	28807	2	True				
ANR	28821	CallExpression	init_compiler ( )		28807	0					
ANR	28822	Callee	init_compiler		28807	0					
ANR	28823	Identifier	init_compiler		28807	0					
ANR	28824	ArgumentList			28807	1					
ANR	28825	ExpressionStatement	init_executor ( )	944:1:29219:29234	28807	3	True				
ANR	28826	CallExpression	init_executor ( )		28807	0					
ANR	28827	Callee	init_executor		28807	0					
ANR	28828	Identifier	init_executor		28807	0					
ANR	28829	ArgumentList			28807	1					
ANR	28830	ExpressionStatement	startup_scanner ( )	945:1:29237:29254	28807	4	True				
ANR	28831	CallExpression	startup_scanner ( )		28807	0					
ANR	28832	Callee	startup_scanner		28807	0					
ANR	28833	Identifier	startup_scanner		28807	0					
ANR	28834	ArgumentList			28807	1					
ANR	28835	ReturnType	ZEND_API void		28807	1					
ANR	28836	Identifier	zend_activate		28807	2					
ANR	28837	ParameterList			28807	3					
ANR	28838	CFGEntryNode	ENTRY		28807		True				
ANR	28839	CFGExitNode	EXIT		28807		True				
ANR	28840	Function	zend_call_destructors	949:0:29269:29371							
ANR	28841	FunctionDef	zend_call_destructors ()		28840	0					
ANR	28842	CompoundStatement		950:0:29312:29371	28840	0					
ANR	28843	Statement	zend_try	951:1:29315:29322	28840	0	True				
ANR	28844	CompoundStatement		2:10:11:11	28840	1					
ANR	28845	ExpressionStatement	shutdown_destructors ( )	952:2:29328:29350	28840	0	True				
ANR	28846	CallExpression	shutdown_destructors ( )		28840	0					
ANR	28847	Callee	shutdown_destructors		28840	0					
ANR	28848	Identifier	shutdown_destructors		28840	0					
ANR	28849	ArgumentList			28840	1					
ANR	28850	ExpressionStatement	zend_end_try ( )	953:3:29355:29369	28840	2	True				
ANR	28851	CallExpression	zend_end_try ( )		28840	0					
ANR	28852	Callee	zend_end_try		28840	0					
ANR	28853	Identifier	zend_end_try		28840	0					
ANR	28854	ArgumentList			28840	1					
ANR	28855	ReturnType	void		28840	1					
ANR	28856	Identifier	zend_call_destructors		28840	2					
ANR	28857	ParameterList			28840	3					
ANR	28858	CFGEntryNode	ENTRY		28840		True				
ANR	28859	CFGExitNode	EXIT		28840		True				
ANR	28860	Function	zend_deactivate	957:0:29384:30671							
ANR	28861	FunctionDef	zend_deactivate ()		28860	0					
ANR	28862	CompoundStatement		958:0:29430:30671	28860	0					
ANR	28863	ExpressionStatement	EG ( current_execute_data ) = NULL	960:1:29475:29506	28860	0	True				
ANR	28864	AssignmentExpression	EG ( current_execute_data ) = NULL		28860	0		=			
ANR	28865	CallExpression	EG ( current_execute_data )		28860	0					
ANR	28866	Callee	EG		28860	0					
ANR	28867	Identifier	EG		28860	0					
ANR	28868	ArgumentList	current_execute_data		28860	1					
ANR	28869	Argument	current_execute_data		28860	0					
ANR	28870	Identifier	current_execute_data		28860	0					
ANR	28871	Identifier	NULL		28860	1					
ANR	28872	Statement	zend_try	962:1:29510:29517	28860	1	True				
ANR	28873	CompoundStatement		5:10:88:88	28860	2					
ANR	28874	ExpressionStatement	shutdown_scanner ( )	963:2:29523:29541	28860	0	True				
ANR	28875	CallExpression	shutdown_scanner ( )		28860	0					
ANR	28876	Callee	shutdown_scanner		28860	0					
ANR	28877	Identifier	shutdown_scanner		28860	0					
ANR	28878	ArgumentList			28860	1					
ANR	28879	ExpressionStatement	zend_end_try ( )	964:3:29546:29560	28860	3	True				
ANR	28880	CallExpression	zend_end_try ( )		28860	0					
ANR	28881	Callee	zend_end_try		28860	0					
ANR	28882	Identifier	zend_end_try		28860	0					
ANR	28883	ArgumentList			28860	1					
ANR	28884	ExpressionStatement	shutdown_executor ( )	967:1:29630:29649	28860	4	True				
ANR	28885	CallExpression	shutdown_executor ( )		28860	0					
ANR	28886	Callee	shutdown_executor		28860	0					
ANR	28887	Identifier	shutdown_executor		28860	0					
ANR	28888	ArgumentList			28860	1					
ANR	28889	Statement	zend_try	969:1:29653:29660	28860	5	True				
ANR	28890	CompoundStatement		12:10:231:231	28860	6					
ANR	28891	ExpressionStatement	shutdown_compiler ( )	970:2:29666:29685	28860	0	True				
ANR	28892	CallExpression	shutdown_compiler ( )		28860	0					
ANR	28893	Callee	shutdown_compiler		28860	0					
ANR	28894	Identifier	shutdown_compiler		28860	0					
ANR	28895	ArgumentList			28860	1					
ANR	28896	ExpressionStatement	zend_end_try ( )	971:3:29690:29704	28860	7	True				
ANR	28897	CallExpression	zend_end_try ( )		28860	0					
ANR	28898	Callee	zend_end_try		28860	0					
ANR	28899	Identifier	zend_end_try		28860	0					
ANR	28900	ArgumentList			28860	1					
ANR	28901	ExpressionStatement	zend_destroy_rsrc_list ( & EG ( regular_list ) )	973:1:29708:29749	28860	8	True				
ANR	28902	CallExpression	zend_destroy_rsrc_list ( & EG ( regular_list ) )		28860	0					
ANR	28903	Callee	zend_destroy_rsrc_list		28860	0					
ANR	28904	Identifier	zend_destroy_rsrc_list		28860	0					
ANR	28905	ArgumentList	& EG ( regular_list )		28860	1					
ANR	28906	Argument	& EG ( regular_list )		28860	0					
ANR	28907	UnaryOperationExpression	& EG ( regular_list )		28860	0					
ANR	28908	UnaryOperator	&		28860	0					
ANR	28909	CallExpression	EG ( regular_list )		28860	1					
ANR	28910	Callee	EG		28860	0					
ANR	28911	Identifier	EG		28860	0					
ANR	28912	ArgumentList	regular_list		28860	1					
ANR	28913	Argument	regular_list		28860	0					
ANR	28914	Identifier	regular_list		28860	0					
ANR	28915	ExpressionStatement	"fprintf ( stderr , ""GC Statistics\\n"" )"	976:1:29766:29800	28860	9	True				
ANR	28916	CallExpression	"fprintf ( stderr , ""GC Statistics\\n"" )"		28860	0					
ANR	28917	Callee	fprintf		28860	0					
ANR	28918	Identifier	fprintf		28860	0					
ANR	28919	ArgumentList	stderr		28860	1					
ANR	28920	Argument	stderr		28860	0					
ANR	28921	Identifier	stderr		28860	0					
ANR	28922	Argument	"""GC Statistics\\n"""		28860	1					
ANR	28923	PrimaryExpression	"""GC Statistics\\n"""		28860	0					
ANR	28924	ExpressionStatement	"fprintf ( stderr , ""-------------\\n"" )"	977:1:29803:29837	28860	10	True				
ANR	28925	CallExpression	"fprintf ( stderr , ""-------------\\n"" )"		28860	0					
ANR	28926	Callee	fprintf		28860	0					
ANR	28927	Identifier	fprintf		28860	0					
ANR	28928	ArgumentList	stderr		28860	1					
ANR	28929	Argument	stderr		28860	0					
ANR	28930	Identifier	stderr		28860	0					
ANR	28931	Argument	"""-------------\\n"""		28860	1					
ANR	28932	PrimaryExpression	"""-------------\\n"""		28860	0					
ANR	28933	ExpressionStatement	"fprintf ( stderr , ""Runs:               %d\\n"" , GC_G ( gc_runs ) )"	978:1:29840:29898	28860	11	True				
ANR	28934	CallExpression	"fprintf ( stderr , ""Runs:               %d\\n"" , GC_G ( gc_runs ) )"		28860	0					
ANR	28935	Callee	fprintf		28860	0					
ANR	28936	Identifier	fprintf		28860	0					
ANR	28937	ArgumentList	stderr		28860	1					
ANR	28938	Argument	stderr		28860	0					
ANR	28939	Identifier	stderr		28860	0					
ANR	28940	Argument	"""Runs:               %d\\n"""		28860	1					
ANR	28941	PrimaryExpression	"""Runs:               %d\\n"""		28860	0					
ANR	28942	Argument	GC_G ( gc_runs )		28860	2					
ANR	28943	CallExpression	GC_G ( gc_runs )		28860	0					
ANR	28944	Callee	GC_G		28860	0					
ANR	28945	Identifier	GC_G		28860	0					
ANR	28946	ArgumentList	gc_runs		28860	1					
ANR	28947	Argument	gc_runs		28860	0					
ANR	28948	Identifier	gc_runs		28860	0					
ANR	28949	ExpressionStatement	"fprintf ( stderr , ""Collected:          %d\\n"" , GC_G ( collected ) )"	979:1:29901:29961	28860	12	True				
ANR	28950	CallExpression	"fprintf ( stderr , ""Collected:          %d\\n"" , GC_G ( collected ) )"		28860	0					
ANR	28951	Callee	fprintf		28860	0					
ANR	28952	Identifier	fprintf		28860	0					
ANR	28953	ArgumentList	stderr		28860	1					
ANR	28954	Argument	stderr		28860	0					
ANR	28955	Identifier	stderr		28860	0					
ANR	28956	Argument	"""Collected:          %d\\n"""		28860	1					
ANR	28957	PrimaryExpression	"""Collected:          %d\\n"""		28860	0					
ANR	28958	Argument	GC_G ( collected )		28860	2					
ANR	28959	CallExpression	GC_G ( collected )		28860	0					
ANR	28960	Callee	GC_G		28860	0					
ANR	28961	Identifier	GC_G		28860	0					
ANR	28962	ArgumentList	collected		28860	1					
ANR	28963	Argument	collected		28860	0					
ANR	28964	Identifier	collected		28860	0					
ANR	28965	ExpressionStatement	"fprintf ( stderr , ""Root buffer length: %d\\n"" , GC_G ( root_buf_length ) )"	980:1:29964:30030	28860	13	True				
ANR	28966	CallExpression	"fprintf ( stderr , ""Root buffer length: %d\\n"" , GC_G ( root_buf_length ) )"		28860	0					
ANR	28967	Callee	fprintf		28860	0					
ANR	28968	Identifier	fprintf		28860	0					
ANR	28969	ArgumentList	stderr		28860	1					
ANR	28970	Argument	stderr		28860	0					
ANR	28971	Identifier	stderr		28860	0					
ANR	28972	Argument	"""Root buffer length: %d\\n"""		28860	1					
ANR	28973	PrimaryExpression	"""Root buffer length: %d\\n"""		28860	0					
ANR	28974	Argument	GC_G ( root_buf_length )		28860	2					
ANR	28975	CallExpression	GC_G ( root_buf_length )		28860	0					
ANR	28976	Callee	GC_G		28860	0					
ANR	28977	Identifier	GC_G		28860	0					
ANR	28978	ArgumentList	root_buf_length		28860	1					
ANR	28979	Argument	root_buf_length		28860	0					
ANR	28980	Identifier	root_buf_length		28860	0					
ANR	28981	ExpressionStatement	"fprintf ( stderr , ""Root buffer peak:   %d\\n\\n"" , GC_G ( root_buf_peak ) )"	981:1:30033:30099	28860	14	True				
ANR	28982	CallExpression	"fprintf ( stderr , ""Root buffer peak:   %d\\n\\n"" , GC_G ( root_buf_peak ) )"		28860	0					
ANR	28983	Callee	fprintf		28860	0					
ANR	28984	Identifier	fprintf		28860	0					
ANR	28985	ArgumentList	stderr		28860	1					
ANR	28986	Argument	stderr		28860	0					
ANR	28987	Identifier	stderr		28860	0					
ANR	28988	Argument	"""Root buffer peak:   %d\\n\\n"""		28860	1					
ANR	28989	PrimaryExpression	"""Root buffer peak:   %d\\n\\n"""		28860	0					
ANR	28990	Argument	GC_G ( root_buf_peak )		28860	2					
ANR	28991	CallExpression	GC_G ( root_buf_peak )		28860	0					
ANR	28992	Callee	GC_G		28860	0					
ANR	28993	Identifier	GC_G		28860	0					
ANR	28994	ArgumentList	root_buf_peak		28860	1					
ANR	28995	Argument	root_buf_peak		28860	0					
ANR	28996	Identifier	root_buf_peak		28860	0					
ANR	28997	ExpressionStatement	"fprintf ( stderr , ""      Possible            Remove from  Marked\\n"" )"	982:1:30102:30168	28860	15	True				
ANR	28998	CallExpression	"fprintf ( stderr , ""      Possible            Remove from  Marked\\n"" )"		28860	0					
ANR	28999	Callee	fprintf		28860	0					
ANR	29000	Identifier	fprintf		28860	0					
ANR	29001	ArgumentList	stderr		28860	1					
ANR	29002	Argument	stderr		28860	0					
ANR	29003	Identifier	stderr		28860	0					
ANR	29004	Argument	"""      Possible            Remove from  Marked\\n"""		28860	1					
ANR	29005	PrimaryExpression	"""      Possible            Remove from  Marked\\n"""		28860	0					
ANR	29006	ExpressionStatement	"fprintf ( stderr , ""        Root    Buffered     buffer     grey\\n"" )"	983:1:30171:30236	28860	16	True				
ANR	29007	CallExpression	"fprintf ( stderr , ""        Root    Buffered     buffer     grey\\n"" )"		28860	0					
ANR	29008	Callee	fprintf		28860	0					
ANR	29009	Identifier	fprintf		28860	0					
ANR	29010	ArgumentList	stderr		28860	1					
ANR	29011	Argument	stderr		28860	0					
ANR	29012	Identifier	stderr		28860	0					
ANR	29013	Argument	"""        Root    Buffered     buffer     grey\\n"""		28860	1					
ANR	29014	PrimaryExpression	"""        Root    Buffered     buffer     grey\\n"""		28860	0					
ANR	29015	ExpressionStatement	"fprintf ( stderr , ""      --------  --------  -----------  ------\\n"" )"	984:1:30239:30305	28860	17	True				
ANR	29016	CallExpression	"fprintf ( stderr , ""      --------  --------  -----------  ------\\n"" )"		28860	0					
ANR	29017	Callee	fprintf		28860	0					
ANR	29018	Identifier	fprintf		28860	0					
ANR	29019	ArgumentList	stderr		28860	1					
ANR	29020	Argument	stderr		28860	0					
ANR	29021	Identifier	stderr		28860	0					
ANR	29022	Argument	"""      --------  --------  -----------  ------\\n"""		28860	1					
ANR	29023	PrimaryExpression	"""      --------  --------  -----------  ------\\n"""		28860	0					
ANR	29024	ExpressionStatement	"fprintf ( stderr , ""ZVAL  %8d  %8d  %9d  %8d\\n"" , GC_G ( zval_possible_root ) , GC_G ( zval_buffered ) , GC_G ( zval_remove_from_buffer ) , GC_G ( zval_marked_grey ) )"	985:1:30308:30455	28860	18	True				
ANR	29025	CallExpression	"fprintf ( stderr , ""ZVAL  %8d  %8d  %9d  %8d\\n"" , GC_G ( zval_possible_root ) , GC_G ( zval_buffered ) , GC_G ( zval_remove_from_buffer ) , GC_G ( zval_marked_grey ) )"		28860	0					
ANR	29026	Callee	fprintf		28860	0					
ANR	29027	Identifier	fprintf		28860	0					
ANR	29028	ArgumentList	stderr		28860	1					
ANR	29029	Argument	stderr		28860	0					
ANR	29030	Identifier	stderr		28860	0					
ANR	29031	Argument	"""ZVAL  %8d  %8d  %9d  %8d\\n"""		28860	1					
ANR	29032	PrimaryExpression	"""ZVAL  %8d  %8d  %9d  %8d\\n"""		28860	0					
ANR	29033	Argument	GC_G ( zval_possible_root )		28860	2					
ANR	29034	CallExpression	GC_G ( zval_possible_root )		28860	0					
ANR	29035	Callee	GC_G		28860	0					
ANR	29036	Identifier	GC_G		28860	0					
ANR	29037	ArgumentList	zval_possible_root		28860	1					
ANR	29038	Argument	zval_possible_root		28860	0					
ANR	29039	Identifier	zval_possible_root		28860	0					
ANR	29040	Argument	GC_G ( zval_buffered )		28860	3					
ANR	29041	CallExpression	GC_G ( zval_buffered )		28860	0					
ANR	29042	Callee	GC_G		28860	0					
ANR	29043	Identifier	GC_G		28860	0					
ANR	29044	ArgumentList	zval_buffered		28860	1					
ANR	29045	Argument	zval_buffered		28860	0					
ANR	29046	Identifier	zval_buffered		28860	0					
ANR	29047	Argument	GC_G ( zval_remove_from_buffer )		28860	4					
ANR	29048	CallExpression	GC_G ( zval_remove_from_buffer )		28860	0					
ANR	29049	Callee	GC_G		28860	0					
ANR	29050	Identifier	GC_G		28860	0					
ANR	29051	ArgumentList	zval_remove_from_buffer		28860	1					
ANR	29052	Argument	zval_remove_from_buffer		28860	0					
ANR	29053	Identifier	zval_remove_from_buffer		28860	0					
ANR	29054	Argument	GC_G ( zval_marked_grey )		28860	5					
ANR	29055	CallExpression	GC_G ( zval_marked_grey )		28860	0					
ANR	29056	Callee	GC_G		28860	0					
ANR	29057	Identifier	GC_G		28860	0					
ANR	29058	ArgumentList	zval_marked_grey		28860	1					
ANR	29059	Argument	zval_marked_grey		28860	0					
ANR	29060	Identifier	zval_marked_grey		28860	0					
ANR	29061	ExpressionStatement	"fprintf ( stderr , ""ZOBJ  %8d  %8d  %9d  %8d\\n"" , GC_G ( zobj_possible_root ) , GC_G ( zobj_buffered ) , GC_G ( zobj_remove_from_buffer ) , GC_G ( zobj_marked_grey ) )"	986:1:30458:30605	28860	19	True				
ANR	29062	CallExpression	"fprintf ( stderr , ""ZOBJ  %8d  %8d  %9d  %8d\\n"" , GC_G ( zobj_possible_root ) , GC_G ( zobj_buffered ) , GC_G ( zobj_remove_from_buffer ) , GC_G ( zobj_marked_grey ) )"		28860	0					
ANR	29063	Callee	fprintf		28860	0					
ANR	29064	Identifier	fprintf		28860	0					
ANR	29065	ArgumentList	stderr		28860	1					
ANR	29066	Argument	stderr		28860	0					
ANR	29067	Identifier	stderr		28860	0					
ANR	29068	Argument	"""ZOBJ  %8d  %8d  %9d  %8d\\n"""		28860	1					
ANR	29069	PrimaryExpression	"""ZOBJ  %8d  %8d  %9d  %8d\\n"""		28860	0					
ANR	29070	Argument	GC_G ( zobj_possible_root )		28860	2					
ANR	29071	CallExpression	GC_G ( zobj_possible_root )		28860	0					
ANR	29072	Callee	GC_G		28860	0					
ANR	29073	Identifier	GC_G		28860	0					
ANR	29074	ArgumentList	zobj_possible_root		28860	1					
ANR	29075	Argument	zobj_possible_root		28860	0					
ANR	29076	Identifier	zobj_possible_root		28860	0					
ANR	29077	Argument	GC_G ( zobj_buffered )		28860	3					
ANR	29078	CallExpression	GC_G ( zobj_buffered )		28860	0					
ANR	29079	Callee	GC_G		28860	0					
ANR	29080	Identifier	GC_G		28860	0					
ANR	29081	ArgumentList	zobj_buffered		28860	1					
ANR	29082	Argument	zobj_buffered		28860	0					
ANR	29083	Identifier	zobj_buffered		28860	0					
ANR	29084	Argument	GC_G ( zobj_remove_from_buffer )		28860	4					
ANR	29085	CallExpression	GC_G ( zobj_remove_from_buffer )		28860	0					
ANR	29086	Callee	GC_G		28860	0					
ANR	29087	Identifier	GC_G		28860	0					
ANR	29088	ArgumentList	zobj_remove_from_buffer		28860	1					
ANR	29089	Argument	zobj_remove_from_buffer		28860	0					
ANR	29090	Identifier	zobj_remove_from_buffer		28860	0					
ANR	29091	Argument	GC_G ( zobj_marked_grey )		28860	5					
ANR	29092	CallExpression	GC_G ( zobj_marked_grey )		28860	0					
ANR	29093	Callee	GC_G		28860	0					
ANR	29094	Identifier	GC_G		28860	0					
ANR	29095	ArgumentList	zobj_marked_grey		28860	1					
ANR	29096	Argument	zobj_marked_grey		28860	0					
ANR	29097	Identifier	zobj_marked_grey		28860	0					
ANR	29098	Statement	zend_try	989:1:30616:30623	28860	20	True				
ANR	29099	CompoundStatement		32:10:1194:1194	28860	21					
ANR	29100	ExpressionStatement	zend_ini_deactivate ( )	990:2:30629:30650	28860	0	True				
ANR	29101	CallExpression	zend_ini_deactivate ( )		28860	0					
ANR	29102	Callee	zend_ini_deactivate		28860	0					
ANR	29103	Identifier	zend_ini_deactivate		28860	0					
ANR	29104	ArgumentList			28860	1					
ANR	29105	ExpressionStatement	zend_end_try ( )	991:3:30655:30669	28860	22	True				
ANR	29106	CallExpression	zend_end_try ( )		28860	0					
ANR	29107	Callee	zend_end_try		28860	0					
ANR	29108	Identifier	zend_end_try		28860	0					
ANR	29109	ArgumentList			28860	1					
ANR	29110	ReturnType	ZEND_API void		28860	1					
ANR	29111	Identifier	zend_deactivate		28860	2					
ANR	29112	ParameterList			28860	3					
ANR	29113	CFGEntryNode	ENTRY		28860		True				
ANR	29114	CFGExitNode	EXIT		28860		True				
ANR	29115	Symbol	zval_possible_root		28860						
ANR	29116	Symbol	zobj_possible_root		28860						
ANR	29117	Symbol	EG		28860						
ANR	29118	Symbol	NULL		28860						
ANR	29119	Symbol	GC_G		28860						
ANR	29120	Symbol	current_execute_data		28860						
ANR	29121	Symbol	zval_remove_from_buffer		28860						
ANR	29122	Symbol	root_buf_length		28860						
ANR	29123	Symbol	zval_marked_grey		28860						
ANR	29124	Symbol	gc_runs		28860						
ANR	29125	Symbol	collected		28860						
ANR	29126	Symbol	stderr		28860						
ANR	29127	Symbol	& EG		28860						
ANR	29128	Symbol	zval_buffered		28860						
ANR	29129	Symbol	zobj_remove_from_buffer		28860						
ANR	29130	Symbol	root_buf_peak		28860						
ANR	29131	Symbol	zobj_buffered		28860						
ANR	29132	Symbol	regular_list		28860						
ANR	29133	Symbol	zobj_marked_grey		28860						
ANR	29134	Function	zend_message_dispatcher	996:0:30701:30869							
ANR	29135	FunctionDef	"zend_message_dispatcher (zend_long message , const void * data)"		29134	0					
ANR	29136	CompoundStatement		997:0:30786:30869	29134	0					
ANR	29137	IfStatement	if ( zend_message_dispatcher_p )		29134	0					
ANR	29138	Condition	zend_message_dispatcher_p	998:5:30793:30817	29134	0	True				
ANR	29139	Identifier	zend_message_dispatcher_p		29134	0					
ANR	29140	CompoundStatement		2:32:33:33	29134	1					
ANR	29141	ExpressionStatement	"zend_message_dispatcher_p ( message , data )"	999:2:30824:30864	29134	0	True				
ANR	29142	CallExpression	"zend_message_dispatcher_p ( message , data )"		29134	0					
ANR	29143	Callee	zend_message_dispatcher_p		29134	0					
ANR	29144	Identifier	zend_message_dispatcher_p		29134	0					
ANR	29145	ArgumentList	message		29134	1					
ANR	29146	Argument	message		29134	0					
ANR	29147	Identifier	message		29134	0					
ANR	29148	Argument	data		29134	1					
ANR	29149	Identifier	data		29134	0					
ANR	29150	ReturnType	ZEND_API void		29134	1					
ANR	29151	Identifier	zend_message_dispatcher		29134	2					
ANR	29152	ParameterList	"zend_long message , const void * data"		29134	3					
ANR	29153	Parameter	zend_long message	996:38:30739:30755	29134	0	True				
ANR	29154	ParameterType	zend_long		29134	0					
ANR	29155	Identifier	message		29134	1					
ANR	29156	Parameter	const void * data	996:57:30758:30773	29134	1	True				
ANR	29157	ParameterType	const void *		29134	0					
ANR	29158	Identifier	data		29134	1					
ANR	29159	CFGEntryNode	ENTRY		29134		True				
ANR	29160	CFGExitNode	EXIT		29134		True				
ANR	29161	Symbol	data		29134						
ANR	29162	Symbol	zend_message_dispatcher_p		29134						
ANR	29163	Symbol	message		29134						
ANR	29164	Function	zend_get_configuration_directive	1005:0:30897:31098							
ANR	29165	FunctionDef	zend_get_configuration_directive (zend_string * name)		29164	0					
ANR	29166	CompoundStatement		1006:0:30974:31098	29164	0					
ANR	29167	IfStatement	if ( zend_get_configuration_directive_p )		29164	0					
ANR	29168	Condition	zend_get_configuration_directive_p	1007:5:30981:31014	29164	0	True				
ANR	29169	Identifier	zend_get_configuration_directive_p		29164	0					
ANR	29170	CompoundStatement		2:41:42:42	29164	1					
ANR	29171	ReturnStatement	return zend_get_configuration_directive_p ( name ) ;	1008:2:31021:31068	29164	0	True				
ANR	29172	CallExpression	zend_get_configuration_directive_p ( name )		29164	0					
ANR	29173	Callee	zend_get_configuration_directive_p		29164	0					
ANR	29174	Identifier	zend_get_configuration_directive_p		29164	0					
ANR	29175	ArgumentList	name		29164	1					
ANR	29176	Argument	name		29164	0					
ANR	29177	Identifier	name		29164	0					
ANR	29178	ElseStatement	else		29164	0					
ANR	29179	CompoundStatement		4:8:103:103	29164	0					
ANR	29180	ReturnStatement	return NULL ;	1010:2:31082:31093	29164	0	True				
ANR	29181	Identifier	NULL		29164	0					
ANR	29182	ReturnType	ZEND_API zval *		29164	1					
ANR	29183	Identifier	zend_get_configuration_directive		29164	2					
ANR	29184	ParameterList	zend_string * name		29164	3					
ANR	29185	Parameter	zend_string * name	1005:48:30945:30961	29164	0	True				
ANR	29186	ParameterType	zend_string *		29164	0					
ANR	29187	Identifier	name		29164	1					
ANR	29188	CFGEntryNode	ENTRY		29164		True				
ANR	29189	CFGExitNode	EXIT		29164		True				
ANR	29190	Symbol	NULL		29164						
ANR	29191	Symbol	zend_get_configuration_directive_p		29164						
ANR	29192	Symbol	name		29164						
ANR	29193	DeclStmt									
ANR	29194	Decl							char	char *	str
ANR	29195	DeclStmt									
ANR	29196	Decl							int	int	len
ANR	29197	DeclStmt									
ANR	29198	Decl							va_list	va_list	args
ANR	29199	DeclStmt									
ANR	29200	Decl							va_list	va_list	usr_copy
ANR	29201	DeclStmt									
ANR	29202	Decl							zval	zval [ 5 ]	params
ANR	29203	DeclStmt									
ANR	29204	Decl							zval	zval	retval
ANR	29205	DeclStmt									
ANR	29206	Decl							const char	const char *	error_filename
ANR	29207	DeclStmt									
ANR	29208	Decl							uint	uint	error_lineno
ANR	29209	DeclStmt									
ANR	29210	Decl							zval	zval	orig_user_error_handler
ANR	29211	DeclStmt									
ANR	29212	Decl							zend_bool	zend_bool	in_compilation
ANR	29213	DeclStmt									
ANR	29214	Decl							zend_class_entry	zend_class_entry *	saved_class_entry
ANR	29215	DeclStmt									
ANR	29216	Decl							zend_stack	zend_stack	loop_var_stack
ANR	29217	DeclStmt									
ANR	29218	Decl							zend_stack	zend_stack	delayed_oplines_stack
ANR	29219	DeclStmt									
ANR	29220	Decl							zend_array	zend_array *	symbol_table
ANR	29221	DeclStmt									
ANR	29222	Decl							zend_execute_data	zend_execute_data *	ex
ANR	29223	DeclStmt									
ANR	29224	Decl							const zend_op	const zend_op *	opline
ANR	29225	DeclStmt									
ANR	29226	Decl							char	char *	dtrace_error_buffer
ANR	29227	Function	zend_error	1277:0:38322:38493							
ANR	29228	FunctionDef	"zend_error (int type , const char * format)"		29227	0					
ANR	29229	CompoundStatement		1278:0:38402:38493	29227	0					
ANR	29230	IdentifierDeclStatement	va_list va ;	1279:1:38405:38415	29227	0	True				
ANR	29231	IdentifierDecl	va		29227	0					
ANR	29232	IdentifierDeclType	va_list		29227	0					
ANR	29233	Identifier	va		29227	1					
ANR	29234	ExpressionStatement	"va_start ( va , format )"	1281:1:38419:38439	29227	1	True				
ANR	29235	CallExpression	"va_start ( va , format )"		29227	0					
ANR	29236	Callee	va_start		29227	0					
ANR	29237	Identifier	va_start		29227	0					
ANR	29238	ArgumentList	va		29227	1					
ANR	29239	Argument	va		29227	0					
ANR	29240	Identifier	va		29227	0					
ANR	29241	Argument	format		29227	1					
ANR	29242	Identifier	format		29227	0					
ANR	29243	ExpressionStatement	"zend_error_va_list ( type , format , va )"	1282:1:38442:38478	29227	2	True				
ANR	29244	CallExpression	"zend_error_va_list ( type , format , va )"		29227	0					
ANR	29245	Callee	zend_error_va_list		29227	0					
ANR	29246	Identifier	zend_error_va_list		29227	0					
ANR	29247	ArgumentList	type		29227	1					
ANR	29248	Argument	type		29227	0					
ANR	29249	Identifier	type		29227	0					
ANR	29250	Argument	format		29227	1					
ANR	29251	Identifier	format		29227	0					
ANR	29252	Argument	va		29227	2					
ANR	29253	Identifier	va		29227	0					
ANR	29254	ExpressionStatement	va_end ( va )	1283:1:38481:38491	29227	3	True				
ANR	29255	CallExpression	va_end ( va )		29227	0					
ANR	29256	Callee	va_end		29227	0					
ANR	29257	Identifier	va_end		29227	0					
ANR	29258	ArgumentList	va		29227	1					
ANR	29259	Argument	va		29227	0					
ANR	29260	Identifier	va		29227	0					
ANR	29261	ReturnType	ZEND_API ZEND_COLD void		29227	1					
ANR	29262	Identifier	zend_error		29227	2					
ANR	29263	ParameterList	"int type , const char * format"		29227	3					
ANR	29264	Parameter	int type	1277:35:38357:38364	29227	0	True				
ANR	29265	ParameterType	int		29227	0					
ANR	29266	Identifier	type		29227	1					
ANR	29267	Parameter	const char * format	1277:45:38367:38384	29227	1	True				
ANR	29268	ParameterType	const char *		29227	0					
ANR	29269	Identifier	format		29227	1					
ANR	29270	CFGEntryNode	ENTRY		29227		True				
ANR	29271	CFGExitNode	EXIT		29227		True				
ANR	29272	Symbol	format		29227						
ANR	29273	Symbol	va		29227						
ANR	29274	Symbol	type		29227						
ANR	29275	Function	zend_error_noreturn	1286:0:38496:38680							
ANR	29276	FunctionDef	"zend_error_noreturn (int type , const char * format)"		29275	0					
ANR	29277	CompoundStatement		1287:0:38589:38680	29275	0					
ANR	29278	IdentifierDeclStatement	va_list va ;	1288:1:38592:38602	29275	0	True				
ANR	29279	IdentifierDecl	va		29275	0					
ANR	29280	IdentifierDeclType	va_list		29275	0					
ANR	29281	Identifier	va		29275	1					
ANR	29282	ExpressionStatement	"va_start ( va , format )"	1290:1:38606:38626	29275	1	True				
ANR	29283	CallExpression	"va_start ( va , format )"		29275	0					
ANR	29284	Callee	va_start		29275	0					
ANR	29285	Identifier	va_start		29275	0					
ANR	29286	ArgumentList	va		29275	1					
ANR	29287	Argument	va		29275	0					
ANR	29288	Identifier	va		29275	0					
ANR	29289	Argument	format		29275	1					
ANR	29290	Identifier	format		29275	0					
ANR	29291	ExpressionStatement	"zend_error_va_list ( type , format , va )"	1291:1:38629:38665	29275	2	True				
ANR	29292	CallExpression	"zend_error_va_list ( type , format , va )"		29275	0					
ANR	29293	Callee	zend_error_va_list		29275	0					
ANR	29294	Identifier	zend_error_va_list		29275	0					
ANR	29295	ArgumentList	type		29275	1					
ANR	29296	Argument	type		29275	0					
ANR	29297	Identifier	type		29275	0					
ANR	29298	Argument	format		29275	1					
ANR	29299	Identifier	format		29275	0					
ANR	29300	Argument	va		29275	2					
ANR	29301	Identifier	va		29275	0					
ANR	29302	ExpressionStatement	va_end ( va )	1292:1:38668:38678	29275	3	True				
ANR	29303	CallExpression	va_end ( va )		29275	0					
ANR	29304	Callee	va_end		29275	0					
ANR	29305	Identifier	va_end		29275	0					
ANR	29306	ArgumentList	va		29275	1					
ANR	29307	Argument	va		29275	0					
ANR	29308	Identifier	va		29275	0					
ANR	29309	ReturnType	ZEND_API ZEND_COLD ZEND_NORETURN void		29275	1					
ANR	29310	Identifier	zend_error_noreturn		29275	2					
ANR	29311	ParameterList	"int type , const char * format"		29275	3					
ANR	29312	Parameter	int type	1286:58:38554:38561	29275	0	True				
ANR	29313	ParameterType	int		29275	0					
ANR	29314	Identifier	type		29275	1					
ANR	29315	Parameter	const char * format	1286:68:38564:38581	29275	1	True				
ANR	29316	ParameterType	const char *		29275	0					
ANR	29317	Identifier	format		29275	1					
ANR	29318	CFGEntryNode	ENTRY		29275		True				
ANR	29319	CFGExitNode	EXIT		29275		True				
ANR	29320	Symbol	format		29275						
ANR	29321	Symbol	va		29275						
ANR	29322	Symbol	type		29275						
ANR	29323	Function	zend_throw_error	1298:0:38708:39412							
ANR	29324	FunctionDef	"zend_throw_error (zend_class_entry * exception_ce , const char * format)"		29323	0					
ANR	29325	CompoundStatement		1299:0:38816:39412	29323	0					
ANR	29326	IdentifierDeclStatement	va_list va ;	1300:1:38819:38829	29323	0	True				
ANR	29327	IdentifierDecl	va		29323	0					
ANR	29328	IdentifierDeclType	va_list		29323	0					
ANR	29329	Identifier	va		29323	1					
ANR	29330	IdentifierDeclStatement	char * message = NULL ;	1301:1:38832:38852	29323	1	True				
ANR	29331	IdentifierDecl	* message = NULL		29323	0					
ANR	29332	IdentifierDeclType	char *		29323	0					
ANR	29333	Identifier	message		29323	1					
ANR	29334	AssignmentExpression	* message = NULL		29323	2		=			
ANR	29335	Identifier	NULL		29323	0					
ANR	29336	Identifier	NULL		29323	1					
ANR	29337	IfStatement	if ( exception_ce )		29323	2					
ANR	29338	Condition	exception_ce	1303:5:38861:38872	29323	0	True				
ANR	29339	Identifier	exception_ce		29323	0					
ANR	29340	CompoundStatement		5:19:58:58	29323	1					
ANR	29341	IfStatement	"if ( ! instanceof_function ( exception_ce , zend_ce_error ) )"		29323	0					
ANR	29342	Condition	"! instanceof_function ( exception_ce , zend_ce_error )"	1304:6:38883:38931	29323	0	True				
ANR	29343	UnaryOperationExpression	"! instanceof_function ( exception_ce , zend_ce_error )"		29323	0					
ANR	29344	UnaryOperator	!		29323	0					
ANR	29345	CallExpression	"instanceof_function ( exception_ce , zend_ce_error )"		29323	1					
ANR	29346	Callee	instanceof_function		29323	0					
ANR	29347	Identifier	instanceof_function		29323	0					
ANR	29348	ArgumentList	exception_ce		29323	1					
ANR	29349	Argument	exception_ce		29323	0					
ANR	29350	Identifier	exception_ce		29323	0					
ANR	29351	Argument	zend_ce_error		29323	1					
ANR	29352	Identifier	zend_ce_error		29323	0					
ANR	29353	CompoundStatement		6:57:117:117	29323	1					
ANR	29354	ExpressionStatement	"zend_error ( E_NOTICE , ""Error exceptions must be derived from Error"" )"	1305:3:38939:39006	29323	0	True				
ANR	29355	CallExpression	"zend_error ( E_NOTICE , ""Error exceptions must be derived from Error"" )"		29323	0					
ANR	29356	Callee	zend_error		29323	0					
ANR	29357	Identifier	zend_error		29323	0					
ANR	29358	ArgumentList	E_NOTICE		29323	1					
ANR	29359	Argument	E_NOTICE		29323	0					
ANR	29360	Identifier	E_NOTICE		29323	0					
ANR	29361	Argument	"""Error exceptions must be derived from Error"""		29323	1					
ANR	29362	PrimaryExpression	"""Error exceptions must be derived from Error"""		29323	0					
ANR	29363	ExpressionStatement	exception_ce = zend_ce_error	1306:3:39011:39039	29323	1	True				
ANR	29364	AssignmentExpression	exception_ce = zend_ce_error		29323	0		=			
ANR	29365	Identifier	exception_ce		29323	0					
ANR	29366	Identifier	zend_ce_error		29323	1					
ANR	29367	ElseStatement	else		29323	0					
ANR	29368	CompoundStatement		10:8:236:236	29323	0					
ANR	29369	ExpressionStatement	exception_ce = zend_ce_error	1309:2:39057:39085	29323	0	True				
ANR	29370	AssignmentExpression	exception_ce = zend_ce_error		29323	0		=			
ANR	29371	Identifier	exception_ce		29323	0					
ANR	29372	Identifier	zend_ce_error		29323	1					
ANR	29373	ExpressionStatement	"va_start ( va , format )"	1312:1:39092:39112	29323	3	True				
ANR	29374	CallExpression	"va_start ( va , format )"		29323	0					
ANR	29375	Callee	va_start		29323	0					
ANR	29376	Identifier	va_start		29323	0					
ANR	29377	ArgumentList	va		29323	1					
ANR	29378	Argument	va		29323	0					
ANR	29379	Identifier	va		29323	0					
ANR	29380	Argument	format		29323	1					
ANR	29381	Identifier	format		29323	0					
ANR	29382	ExpressionStatement	"zend_vspprintf ( & message , 0 , format , va )"	1313:1:39115:39154	29323	4	True				
ANR	29383	CallExpression	"zend_vspprintf ( & message , 0 , format , va )"		29323	0					
ANR	29384	Callee	zend_vspprintf		29323	0					
ANR	29385	Identifier	zend_vspprintf		29323	0					
ANR	29386	ArgumentList	& message		29323	1					
ANR	29387	Argument	& message		29323	0					
ANR	29388	UnaryOperationExpression	& message		29323	0					
ANR	29389	UnaryOperator	&		29323	0					
ANR	29390	Identifier	message		29323	1					
ANR	29391	Argument	0		29323	1					
ANR	29392	PrimaryExpression	0		29323	0					
ANR	29393	Argument	format		29323	2					
ANR	29394	Identifier	format		29323	0					
ANR	29395	Argument	va		29323	3					
ANR	29396	Identifier	va		29323	0					
ANR	29397	IfStatement	if ( EG ( current_execute_data ) && ! CG ( in_compilation ) )		29323	5					
ANR	29398	Condition	EG ( current_execute_data ) && ! CG ( in_compilation )	1316:5:39229:39275	29323	0	True				
ANR	29399	AndExpression	EG ( current_execute_data ) && ! CG ( in_compilation )		29323	0		&&			
ANR	29400	CallExpression	EG ( current_execute_data )		29323	0					
ANR	29401	Callee	EG		29323	0					
ANR	29402	Identifier	EG		29323	0					
ANR	29403	ArgumentList	current_execute_data		29323	1					
ANR	29404	Argument	current_execute_data		29323	0					
ANR	29405	Identifier	current_execute_data		29323	0					
ANR	29406	UnaryOperationExpression	! CG ( in_compilation )		29323	1					
ANR	29407	UnaryOperator	!		29323	0					
ANR	29408	CallExpression	CG ( in_compilation )		29323	1					
ANR	29409	Callee	CG		29323	0					
ANR	29410	Identifier	CG		29323	0					
ANR	29411	ArgumentList	in_compilation		29323	1					
ANR	29412	Argument	in_compilation		29323	0					
ANR	29413	Identifier	in_compilation		29323	0					
ANR	29414	CompoundStatement		18:54:461:461	29323	1					
ANR	29415	ExpressionStatement	"zend_throw_exception ( exception_ce , message , 0 )"	1317:2:39282:39328	29323	0	True				
ANR	29416	CallExpression	"zend_throw_exception ( exception_ce , message , 0 )"		29323	0					
ANR	29417	Callee	zend_throw_exception		29323	0					
ANR	29418	Identifier	zend_throw_exception		29323	0					
ANR	29419	ArgumentList	exception_ce		29323	1					
ANR	29420	Argument	exception_ce		29323	0					
ANR	29421	Identifier	exception_ce		29323	0					
ANR	29422	Argument	message		29323	1					
ANR	29423	Identifier	message		29323	0					
ANR	29424	Argument	0		29323	2					
ANR	29425	PrimaryExpression	0		29323	0					
ANR	29426	ElseStatement	else		29323	0					
ANR	29427	CompoundStatement		20:8:521:521	29323	0					
ANR	29428	ExpressionStatement	"zend_error ( E_ERROR , ""%s"" , message )"	1319:2:39342:39376	29323	0	True				
ANR	29429	CallExpression	"zend_error ( E_ERROR , ""%s"" , message )"		29323	0					
ANR	29430	Callee	zend_error		29323	0					
ANR	29431	Identifier	zend_error		29323	0					
ANR	29432	ArgumentList	E_ERROR		29323	1					
ANR	29433	Argument	E_ERROR		29323	0					
ANR	29434	Identifier	E_ERROR		29323	0					
ANR	29435	Argument	"""%s"""		29323	1					
ANR	29436	PrimaryExpression	"""%s"""		29323	0					
ANR	29437	Argument	message		29323	2					
ANR	29438	Identifier	message		29323	0					
ANR	29439	ExpressionStatement	efree ( message )	1322:1:39383:39397	29323	6	True				
ANR	29440	CallExpression	efree ( message )		29323	0					
ANR	29441	Callee	efree		29323	0					
ANR	29442	Identifier	efree		29323	0					
ANR	29443	ArgumentList	message		29323	1					
ANR	29444	Argument	message		29323	0					
ANR	29445	Identifier	message		29323	0					
ANR	29446	ExpressionStatement	va_end ( va )	1323:1:39400:39410	29323	7	True				
ANR	29447	CallExpression	va_end ( va )		29323	0					
ANR	29448	Callee	va_end		29323	0					
ANR	29449	Identifier	va_end		29323	0					
ANR	29450	ArgumentList	va		29323	1					
ANR	29451	Argument	va		29323	0					
ANR	29452	Identifier	va		29323	0					
ANR	29453	ReturnType	ZEND_API ZEND_COLD void		29323	1					
ANR	29454	Identifier	zend_throw_error		29323	2					
ANR	29455	ParameterList	"zend_class_entry * exception_ce , const char * format"		29323	3					
ANR	29456	Parameter	zend_class_entry * exception_ce	1298:41:38749:38778	29323	0	True				
ANR	29457	ParameterType	zend_class_entry *		29323	0					
ANR	29458	Identifier	exception_ce		29323	1					
ANR	29459	Parameter	const char * format	1298:73:38781:38798	29323	1	True				
ANR	29460	ParameterType	const char *		29323	0					
ANR	29461	Identifier	format		29323	1					
ANR	29462	CFGEntryNode	ENTRY		29323		True				
ANR	29463	CFGExitNode	EXIT		29323		True				
ANR	29464	Symbol	instanceof_function		29323						
ANR	29465	Symbol	EG		29323						
ANR	29466	Symbol	NULL		29323						
ANR	29467	Symbol	CG		29323						
ANR	29468	Symbol	zend_ce_error		29323						
ANR	29469	Symbol	current_execute_data		29323						
ANR	29470	Symbol	format		29323						
ANR	29471	Symbol	E_NOTICE		29323						
ANR	29472	Symbol	va		29323						
ANR	29473	Symbol	message		29323						
ANR	29474	Symbol	in_compilation		29323						
ANR	29475	Symbol	exception_ce		29323						
ANR	29476	Symbol	E_ERROR		29323						
ANR	29477	Symbol	& message		29323						
ANR	29478	Function	zend_type_error	1327:0:39425:39689							
ANR	29479	FunctionDef	zend_type_error (const char * format)		29478	0					
ANR	29480	CompoundStatement		1328:0:39500:39689	29478	0					
ANR	29481	IdentifierDeclStatement	va_list va ;	1329:1:39503:39513	29478	0	True				
ANR	29482	IdentifierDecl	va		29478	0					
ANR	29483	IdentifierDeclType	va_list		29478	0					
ANR	29484	Identifier	va		29478	1					
ANR	29485	IdentifierDeclStatement	char * message = NULL ;	1330:1:39516:39536	29478	1	True				
ANR	29486	IdentifierDecl	* message = NULL		29478	0					
ANR	29487	IdentifierDeclType	char *		29478	0					
ANR	29488	Identifier	message		29478	1					
ANR	29489	AssignmentExpression	* message = NULL		29478	2		=			
ANR	29490	Identifier	NULL		29478	0					
ANR	29491	Identifier	NULL		29478	1					
ANR	29492	ExpressionStatement	"va_start ( va , format )"	1332:1:39540:39560	29478	2	True				
ANR	29493	CallExpression	"va_start ( va , format )"		29478	0					
ANR	29494	Callee	va_start		29478	0					
ANR	29495	Identifier	va_start		29478	0					
ANR	29496	ArgumentList	va		29478	1					
ANR	29497	Argument	va		29478	0					
ANR	29498	Identifier	va		29478	0					
ANR	29499	Argument	format		29478	1					
ANR	29500	Identifier	format		29478	0					
ANR	29501	ExpressionStatement	"zend_vspprintf ( & message , 0 , format , va )"	1333:1:39563:39602	29478	3	True				
ANR	29502	CallExpression	"zend_vspprintf ( & message , 0 , format , va )"		29478	0					
ANR	29503	Callee	zend_vspprintf		29478	0					
ANR	29504	Identifier	zend_vspprintf		29478	0					
ANR	29505	ArgumentList	& message		29478	1					
ANR	29506	Argument	& message		29478	0					
ANR	29507	UnaryOperationExpression	& message		29478	0					
ANR	29508	UnaryOperator	&		29478	0					
ANR	29509	Identifier	message		29478	1					
ANR	29510	Argument	0		29478	1					
ANR	29511	PrimaryExpression	0		29478	0					
ANR	29512	Argument	format		29478	2					
ANR	29513	Identifier	format		29478	0					
ANR	29514	Argument	va		29478	3					
ANR	29515	Identifier	va		29478	0					
ANR	29516	ExpressionStatement	"zend_throw_exception ( zend_ce_type_error , message , 0 )"	1334:1:39605:39657	29478	4	True				
ANR	29517	CallExpression	"zend_throw_exception ( zend_ce_type_error , message , 0 )"		29478	0					
ANR	29518	Callee	zend_throw_exception		29478	0					
ANR	29519	Identifier	zend_throw_exception		29478	0					
ANR	29520	ArgumentList	zend_ce_type_error		29478	1					
ANR	29521	Argument	zend_ce_type_error		29478	0					
ANR	29522	Identifier	zend_ce_type_error		29478	0					
ANR	29523	Argument	message		29478	1					
ANR	29524	Identifier	message		29478	0					
ANR	29525	Argument	0		29478	2					
ANR	29526	PrimaryExpression	0		29478	0					
ANR	29527	ExpressionStatement	efree ( message )	1335:1:39660:39674	29478	5	True				
ANR	29528	CallExpression	efree ( message )		29478	0					
ANR	29529	Callee	efree		29478	0					
ANR	29530	Identifier	efree		29478	0					
ANR	29531	ArgumentList	message		29478	1					
ANR	29532	Argument	message		29478	0					
ANR	29533	Identifier	message		29478	0					
ANR	29534	ExpressionStatement	va_end ( va )	1336:1:39677:39687	29478	6	True				
ANR	29535	CallExpression	va_end ( va )		29478	0					
ANR	29536	Callee	va_end		29478	0					
ANR	29537	Identifier	va_end		29478	0					
ANR	29538	ArgumentList	va		29478	1					
ANR	29539	Argument	va		29478	0					
ANR	29540	Identifier	va		29478	0					
ANR	29541	ReturnType	ZEND_API ZEND_COLD void		29478	1					
ANR	29542	Identifier	zend_type_error		29478	2					
ANR	29543	ParameterList	const char * format		29478	3					
ANR	29544	Parameter	const char * format	1327:40:39465:39482	29478	0	True				
ANR	29545	ParameterType	const char *		29478	0					
ANR	29546	Identifier	format		29478	1					
ANR	29547	CFGEntryNode	ENTRY		29478		True				
ANR	29548	CFGExitNode	EXIT		29478		True				
ANR	29549	Symbol	NULL		29478						
ANR	29550	Symbol	& message		29478						
ANR	29551	Symbol	zend_ce_type_error		29478						
ANR	29552	Symbol	format		29478						
ANR	29553	Symbol	va		29478						
ANR	29554	Symbol	message		29478						
ANR	29555	Function	zend_internal_type_error	1339:0:39702:40081							
ANR	29556	FunctionDef	"zend_internal_type_error (zend_bool throw_exception , const char * format)"		29555	0					
ANR	29557	CompoundStatement		1340:0:39813:40081	29555	0					
ANR	29558	IdentifierDeclStatement	va_list va ;	1341:1:39816:39826	29555	0	True				
ANR	29559	IdentifierDecl	va		29555	0					
ANR	29560	IdentifierDeclType	va_list		29555	0					
ANR	29561	Identifier	va		29555	1					
ANR	29562	IdentifierDeclStatement	char * message = NULL ;	1342:1:39829:39849	29555	1	True				
ANR	29563	IdentifierDecl	* message = NULL		29555	0					
ANR	29564	IdentifierDeclType	char *		29555	0					
ANR	29565	Identifier	message		29555	1					
ANR	29566	AssignmentExpression	* message = NULL		29555	2		=			
ANR	29567	Identifier	NULL		29555	0					
ANR	29568	Identifier	NULL		29555	1					
ANR	29569	ExpressionStatement	"va_start ( va , format )"	1344:1:39853:39873	29555	2	True				
ANR	29570	CallExpression	"va_start ( va , format )"		29555	0					
ANR	29571	Callee	va_start		29555	0					
ANR	29572	Identifier	va_start		29555	0					
ANR	29573	ArgumentList	va		29555	1					
ANR	29574	Argument	va		29555	0					
ANR	29575	Identifier	va		29555	0					
ANR	29576	Argument	format		29555	1					
ANR	29577	Identifier	format		29555	0					
ANR	29578	ExpressionStatement	"zend_vspprintf ( & message , 0 , format , va )"	1345:1:39876:39915	29555	3	True				
ANR	29579	CallExpression	"zend_vspprintf ( & message , 0 , format , va )"		29555	0					
ANR	29580	Callee	zend_vspprintf		29555	0					
ANR	29581	Identifier	zend_vspprintf		29555	0					
ANR	29582	ArgumentList	& message		29555	1					
ANR	29583	Argument	& message		29555	0					
ANR	29584	UnaryOperationExpression	& message		29555	0					
ANR	29585	UnaryOperator	&		29555	0					
ANR	29586	Identifier	message		29555	1					
ANR	29587	Argument	0		29555	1					
ANR	29588	PrimaryExpression	0		29555	0					
ANR	29589	Argument	format		29555	2					
ANR	29590	Identifier	format		29555	0					
ANR	29591	Argument	va		29555	3					
ANR	29592	Identifier	va		29555	0					
ANR	29593	IfStatement	if ( throw_exception )		29555	4					
ANR	29594	Condition	throw_exception	1346:5:39922:39936	29555	0	True				
ANR	29595	Identifier	throw_exception		29555	0					
ANR	29596	CompoundStatement		7:22:125:125	29555	1					
ANR	29597	ExpressionStatement	"zend_throw_exception ( zend_ce_type_error , message , 0 )"	1347:2:39943:39995	29555	0	True				
ANR	29598	CallExpression	"zend_throw_exception ( zend_ce_type_error , message , 0 )"		29555	0					
ANR	29599	Callee	zend_throw_exception		29555	0					
ANR	29600	Identifier	zend_throw_exception		29555	0					
ANR	29601	ArgumentList	zend_ce_type_error		29555	1					
ANR	29602	Argument	zend_ce_type_error		29555	0					
ANR	29603	Identifier	zend_ce_type_error		29555	0					
ANR	29604	Argument	message		29555	1					
ANR	29605	Identifier	message		29555	0					
ANR	29606	Argument	0		29555	2					
ANR	29607	PrimaryExpression	0		29555	0					
ANR	29608	ElseStatement	else		29555	0					
ANR	29609	CompoundStatement		9:8:191:191	29555	0					
ANR	29610	ExpressionStatement	"zend_error ( E_WARNING , ""%s"" , message )"	1349:2:40009:40045	29555	0	True				
ANR	29611	CallExpression	"zend_error ( E_WARNING , ""%s"" , message )"		29555	0					
ANR	29612	Callee	zend_error		29555	0					
ANR	29613	Identifier	zend_error		29555	0					
ANR	29614	ArgumentList	E_WARNING		29555	1					
ANR	29615	Argument	E_WARNING		29555	0					
ANR	29616	Identifier	E_WARNING		29555	0					
ANR	29617	Argument	"""%s"""		29555	1					
ANR	29618	PrimaryExpression	"""%s"""		29555	0					
ANR	29619	Argument	message		29555	2					
ANR	29620	Identifier	message		29555	0					
ANR	29621	ExpressionStatement	efree ( message )	1351:1:40051:40065	29555	5	True				
ANR	29622	CallExpression	efree ( message )		29555	0					
ANR	29623	Callee	efree		29555	0					
ANR	29624	Identifier	efree		29555	0					
ANR	29625	ArgumentList	message		29555	1					
ANR	29626	Argument	message		29555	0					
ANR	29627	Identifier	message		29555	0					
ANR	29628	ExpressionStatement	va_end ( va )	1353:1:40069:40079	29555	6	True				
ANR	29629	CallExpression	va_end ( va )		29555	0					
ANR	29630	Callee	va_end		29555	0					
ANR	29631	Identifier	va_end		29555	0					
ANR	29632	ArgumentList	va		29555	1					
ANR	29633	Argument	va		29555	0					
ANR	29634	Identifier	va		29555	0					
ANR	29635	ReturnType	ZEND_API ZEND_COLD void		29555	1					
ANR	29636	Identifier	zend_internal_type_error		29555	2					
ANR	29637	ParameterList	"zend_bool throw_exception , const char * format"		29555	3					
ANR	29638	Parameter	zend_bool throw_exception	1339:49:39751:39775	29555	0	True				
ANR	29639	ParameterType	zend_bool		29555	0					
ANR	29640	Identifier	throw_exception		29555	1					
ANR	29641	Parameter	const char * format	1339:76:39778:39795	29555	1	True				
ANR	29642	ParameterType	const char *		29555	0					
ANR	29643	Identifier	format		29555	1					
ANR	29644	CFGEntryNode	ENTRY		29555		True				
ANR	29645	CFGExitNode	EXIT		29555		True				
ANR	29646	Symbol	E_WARNING		29555						
ANR	29647	Symbol	throw_exception		29555						
ANR	29648	Symbol	NULL		29555						
ANR	29649	Symbol	& message		29555						
ANR	29650	Symbol	zend_ce_type_error		29555						
ANR	29651	Symbol	format		29555						
ANR	29652	Symbol	va		29555						
ANR	29653	Symbol	message		29555						
ANR	29654	Function	zend_output_debug_string	1356:0:40094:40578							
ANR	29655	FunctionDef	"zend_output_debug_string (zend_bool trigger_break , const char * format)"		29654	0					
ANR	29656	CompoundStatement		1357:0:40203:40578	29654	0					
ANR	29657	IdentifierDeclStatement	va_list args ;	1359:1:40221:40233	29654	0	True				
ANR	29658	IdentifierDecl	args		29654	0					
ANR	29659	IdentifierDeclType	va_list		29654	0					
ANR	29660	Identifier	args		29654	1					
ANR	29661	ExpressionStatement	"va_start ( args , format )"	1361:1:40237:40259	29654	1	True				
ANR	29662	CallExpression	"va_start ( args , format )"		29654	0					
ANR	29663	Callee	va_start		29654	0					
ANR	29664	Identifier	va_start		29654	0					
ANR	29665	ArgumentList	args		29654	1					
ANR	29666	Argument	args		29654	0					
ANR	29667	Identifier	args		29654	0					
ANR	29668	Argument	format		29654	1					
ANR	29669	Identifier	format		29654	0					
ANR	29670	Statement	ifdef	1362:2:40263:40267	29654	2	True				
ANR	29671	Statement	ZEND_WIN32	1362:8:40269:40278	29654	3	True				
ANR	29672	CompoundStatement		8:2:81:102	29654	4					
ANR	29673	IdentifierDeclStatement	char output_buf [ 1024 ] ;	1364:2:40285:40306	29654	0	True				
ANR	29674	IdentifierDecl	output_buf [ 1024 ]		29654	0					
ANR	29675	IdentifierDeclType	char [ 1024 ]		29654	0					
ANR	29676	Identifier	output_buf		29654	1					
ANR	29677	PrimaryExpression	1024		29654	2					
ANR	29678	ExpressionStatement	"vsnprintf ( output_buf , 1024 , format , args )"	1366:2:40311:40352	29654	1	True				
ANR	29679	CallExpression	"vsnprintf ( output_buf , 1024 , format , args )"		29654	0					
ANR	29680	Callee	vsnprintf		29654	0					
ANR	29681	Identifier	vsnprintf		29654	0					
ANR	29682	ArgumentList	output_buf		29654	1					
ANR	29683	Argument	output_buf		29654	0					
ANR	29684	Identifier	output_buf		29654	0					
ANR	29685	Argument	1024		29654	1					
ANR	29686	PrimaryExpression	1024		29654	0					
ANR	29687	Argument	format		29654	2					
ANR	29688	Identifier	format		29654	0					
ANR	29689	Argument	args		29654	3					
ANR	29690	Identifier	args		29654	0					
ANR	29691	ExpressionStatement	OutputDebugString ( output_buf )	1367:2:40356:40385	29654	2	True				
ANR	29692	CallExpression	OutputDebugString ( output_buf )		29654	0					
ANR	29693	Callee	OutputDebugString		29654	0					
ANR	29694	Identifier	OutputDebugString		29654	0					
ANR	29695	ArgumentList	output_buf		29654	1					
ANR	29696	Argument	output_buf		29654	0					
ANR	29697	Identifier	output_buf		29654	0					
ANR	29698	ExpressionStatement	"OutputDebugString ( ""\\n"" )"	1368:2:40389:40412	29654	3	True				
ANR	29699	CallExpression	"OutputDebugString ( ""\\n"" )"		29654	0					
ANR	29700	Callee	OutputDebugString		29654	0					
ANR	29701	Identifier	OutputDebugString		29654	0					
ANR	29702	ArgumentList	"""\\n"""		29654	1					
ANR	29703	Argument	"""\\n"""		29654	0					
ANR	29704	PrimaryExpression	"""\\n"""		29654	0					
ANR	29705	IfStatement	if ( trigger_break && IsDebuggerPresent ( ) )		29654	4					
ANR	29706	Condition	trigger_break && IsDebuggerPresent ( )	1369:6:40420:40455	29654	0	True				
ANR	29707	AndExpression	trigger_break && IsDebuggerPresent ( )		29654	0		&&			
ANR	29708	Identifier	trigger_break		29654	0					
ANR	29709	CallExpression	IsDebuggerPresent ( )		29654	1					
ANR	29710	Callee	IsDebuggerPresent		29654	0					
ANR	29711	Identifier	IsDebuggerPresent		29654	0					
ANR	29712	ArgumentList			29654	1					
ANR	29713	CompoundStatement		13:44:254:254	29654	1					
ANR	29714	ExpressionStatement	DebugBreak ( )	1370:3:40463:40475	29654	0	True				
ANR	29715	CallExpression	DebugBreak ( )		29654	0					
ANR	29716	Callee	DebugBreak		29654	0					
ANR	29717	Identifier	DebugBreak		29654	0					
ANR	29718	ArgumentList			29654	1					
ANR	29719	ReturnType	ZEND_API ZEND_COLD void		29654	1					
ANR	29720	Identifier	zend_output_debug_string		29654	2					
ANR	29721	ParameterList	"zend_bool trigger_break , const char * format"		29654	3					
ANR	29722	Parameter	zend_bool trigger_break	1356:49:40143:40165	29654	0	True				
ANR	29723	ParameterType	zend_bool		29654	0					
ANR	29724	Identifier	trigger_break		29654	1					
ANR	29725	Parameter	const char * format	1356:74:40168:40185	29654	1	True				
ANR	29726	ParameterType	const char *		29654	0					
ANR	29727	Identifier	format		29654	1					
ANR	29728	CFGEntryNode	ENTRY		29654		True				
ANR	29729	CFGExitNode	EXIT		29654		True				
ANR	29730	Symbol	args		29654						
ANR	29731	Symbol	output_buf		29654						
ANR	29732	Symbol	trigger_break		29654						
ANR	29733	Symbol	format		29654						
ANR	29734	Symbol	IsDebuggerPresent		29654						
ANR	29735	Function	zend_try_exception_handler	1382:0:40591:41339							
ANR	29736	FunctionDef	zend_try_exception_handler ()		29735	0					
ANR	29737	CompoundStatement		1383:0:40644:41339	29735	0					
ANR	29738	IfStatement	if ( EG ( exception ) )		29735	0					
ANR	29739	Condition	EG ( exception )	1384:5:40651:40663	29735	0	True				
ANR	29740	CallExpression	EG ( exception )		29735	0					
ANR	29741	Callee	EG		29735	0					
ANR	29742	Identifier	EG		29735	0					
ANR	29743	ArgumentList	exception		29735	1					
ANR	29744	Argument	exception		29735	0					
ANR	29745	Identifier	exception		29735	0					
ANR	29746	CompoundStatement		2:20:21:21	29735	1					
ANR	29747	IfStatement	if ( Z_TYPE ( EG ( user_exception_handler ) ) != IS_UNDEF )		29735	0					
ANR	29748	Condition	Z_TYPE ( EG ( user_exception_handler ) ) != IS_UNDEF	1385:6:40674:40719	29735	0	True				
ANR	29749	EqualityExpression	Z_TYPE ( EG ( user_exception_handler ) ) != IS_UNDEF		29735	0		!=			
ANR	29750	CallExpression	Z_TYPE ( EG ( user_exception_handler ) )		29735	0					
ANR	29751	Callee	Z_TYPE		29735	0					
ANR	29752	Identifier	Z_TYPE		29735	0					
ANR	29753	ArgumentList	EG ( user_exception_handler )		29735	1					
ANR	29754	Argument	EG ( user_exception_handler )		29735	0					
ANR	29755	CallExpression	EG ( user_exception_handler )		29735	0					
ANR	29756	Callee	EG		29735	0					
ANR	29757	Identifier	EG		29735	0					
ANR	29758	ArgumentList	user_exception_handler		29735	1					
ANR	29759	Argument	user_exception_handler		29735	0					
ANR	29760	Identifier	user_exception_handler		29735	0					
ANR	29761	Identifier	IS_UNDEF		29735	1					
ANR	29762	CompoundStatement		6:3:147:173	29735	1					
ANR	29763	IdentifierDeclStatement	zval orig_user_exception_handler ;	1386:3:40727:40759	29735	0	True				
ANR	29764	IdentifierDecl	orig_user_exception_handler		29735	0					
ANR	29765	IdentifierDeclType	zval		29735	0					
ANR	29766	Identifier	orig_user_exception_handler		29735	1					
ANR	29767	IdentifierDeclStatement	"zval params [ 1 ] , retval2 ;"	1387:3:40764:40787	29735	1	True				
ANR	29768	IdentifierDecl	params [ 1 ]		29735	0					
ANR	29769	IdentifierDeclType	zval [ 1 ]		29735	0					
ANR	29770	Identifier	params		29735	1					
ANR	29771	PrimaryExpression	1		29735	2					
ANR	29772	IdentifierDecl	retval2		29735	1					
ANR	29773	IdentifierDeclType	zval		29735	0					
ANR	29774	Identifier	retval2		29735	1					
ANR	29775	IdentifierDeclStatement	zend_object * old_exception ;	1388:3:40792:40818	29735	2	True				
ANR	29776	IdentifierDecl	* old_exception		29735	0					
ANR	29777	IdentifierDeclType	zend_object *		29735	0					
ANR	29778	Identifier	old_exception		29735	1					
ANR	29779	ExpressionStatement	old_exception = EG ( exception )	1389:3:40823:40852	29735	3	True				
ANR	29780	AssignmentExpression	old_exception = EG ( exception )		29735	0		=			
ANR	29781	Identifier	old_exception		29735	0					
ANR	29782	CallExpression	EG ( exception )		29735	1					
ANR	29783	Callee	EG		29735	0					
ANR	29784	Identifier	EG		29735	0					
ANR	29785	ArgumentList	exception		29735	1					
ANR	29786	Argument	exception		29735	0					
ANR	29787	Identifier	exception		29735	0					
ANR	29788	ExpressionStatement	EG ( exception ) = NULL	1390:3:40857:40877	29735	4	True				
ANR	29789	AssignmentExpression	EG ( exception ) = NULL		29735	0		=			
ANR	29790	CallExpression	EG ( exception )		29735	0					
ANR	29791	Callee	EG		29735	0					
ANR	29792	Identifier	EG		29735	0					
ANR	29793	ArgumentList	exception		29735	1					
ANR	29794	Argument	exception		29735	0					
ANR	29795	Identifier	exception		29735	0					
ANR	29796	Identifier	NULL		29735	1					
ANR	29797	ExpressionStatement	"ZVAL_OBJ ( & params [ 0 ] , old_exception )"	1391:3:40882:40917	29735	5	True				
ANR	29798	CallExpression	"ZVAL_OBJ ( & params [ 0 ] , old_exception )"		29735	0					
ANR	29799	Callee	ZVAL_OBJ		29735	0					
ANR	29800	Identifier	ZVAL_OBJ		29735	0					
ANR	29801	ArgumentList	& params [ 0 ]		29735	1					
ANR	29802	Argument	& params [ 0 ]		29735	0					
ANR	29803	UnaryOperationExpression	& params [ 0 ]		29735	0					
ANR	29804	UnaryOperator	&		29735	0					
ANR	29805	ArrayIndexing	params [ 0 ]		29735	1					
ANR	29806	Identifier	params		29735	0					
ANR	29807	PrimaryExpression	0		29735	1					
ANR	29808	Argument	old_exception		29735	1					
ANR	29809	Identifier	old_exception		29735	0					
ANR	29810	ExpressionStatement	"ZVAL_COPY_VALUE ( & orig_user_exception_handler , & EG ( user_exception_handler ) )"	1392:3:40922:40996	29735	6	True				
ANR	29811	CallExpression	"ZVAL_COPY_VALUE ( & orig_user_exception_handler , & EG ( user_exception_handler ) )"		29735	0					
ANR	29812	Callee	ZVAL_COPY_VALUE		29735	0					
ANR	29813	Identifier	ZVAL_COPY_VALUE		29735	0					
ANR	29814	ArgumentList	& orig_user_exception_handler		29735	1					
ANR	29815	Argument	& orig_user_exception_handler		29735	0					
ANR	29816	UnaryOperationExpression	& orig_user_exception_handler		29735	0					
ANR	29817	UnaryOperator	&		29735	0					
ANR	29818	Identifier	orig_user_exception_handler		29735	1					
ANR	29819	Argument	& EG ( user_exception_handler )		29735	1					
ANR	29820	UnaryOperationExpression	& EG ( user_exception_handler )		29735	0					
ANR	29821	UnaryOperator	&		29735	0					
ANR	29822	CallExpression	EG ( user_exception_handler )		29735	1					
ANR	29823	Callee	EG		29735	0					
ANR	29824	Identifier	EG		29735	0					
ANR	29825	ArgumentList	user_exception_handler		29735	1					
ANR	29826	Argument	user_exception_handler		29735	0					
ANR	29827	Identifier	user_exception_handler		29735	0					
ANR	29828	IfStatement	"if ( call_user_function_ex ( CG ( function_table ) , NULL , & orig_user_exception_handler , & retval2 , 1 , params , 1 , NULL ) == SUCCESS )"		29735	7					
ANR	29829	Condition	"call_user_function_ex ( CG ( function_table ) , NULL , & orig_user_exception_handler , & retval2 , 1 , params , 1 , NULL ) == SUCCESS"	1394:7:41006:41123	29735	0	True				
ANR	29830	EqualityExpression	"call_user_function_ex ( CG ( function_table ) , NULL , & orig_user_exception_handler , & retval2 , 1 , params , 1 , NULL ) == SUCCESS"		29735	0		==			
ANR	29831	CallExpression	"call_user_function_ex ( CG ( function_table ) , NULL , & orig_user_exception_handler , & retval2 , 1 , params , 1 , NULL )"		29735	0					
ANR	29832	Callee	call_user_function_ex		29735	0					
ANR	29833	Identifier	call_user_function_ex		29735	0					
ANR	29834	ArgumentList	CG ( function_table )		29735	1					
ANR	29835	Argument	CG ( function_table )		29735	0					
ANR	29836	CallExpression	CG ( function_table )		29735	0					
ANR	29837	Callee	CG		29735	0					
ANR	29838	Identifier	CG		29735	0					
ANR	29839	ArgumentList	function_table		29735	1					
ANR	29840	Argument	function_table		29735	0					
ANR	29841	Identifier	function_table		29735	0					
ANR	29842	Argument	NULL		29735	1					
ANR	29843	Identifier	NULL		29735	0					
ANR	29844	Argument	& orig_user_exception_handler		29735	2					
ANR	29845	UnaryOperationExpression	& orig_user_exception_handler		29735	0					
ANR	29846	UnaryOperator	&		29735	0					
ANR	29847	Identifier	orig_user_exception_handler		29735	1					
ANR	29848	Argument	& retval2		29735	3					
ANR	29849	UnaryOperationExpression	& retval2		29735	0					
ANR	29850	UnaryOperator	&		29735	0					
ANR	29851	Identifier	retval2		29735	1					
ANR	29852	Argument	1		29735	4					
ANR	29853	PrimaryExpression	1		29735	0					
ANR	29854	Argument	params		29735	5					
ANR	29855	Identifier	params		29735	0					
ANR	29856	Argument	1		29735	6					
ANR	29857	PrimaryExpression	1		29735	0					
ANR	29858	Argument	NULL		29735	7					
ANR	29859	Identifier	NULL		29735	0					
ANR	29860	Identifier	SUCCESS		29735	1					
ANR	29861	CompoundStatement		12:127:481:481	29735	1					
ANR	29862	ExpressionStatement	zval_ptr_dtor ( & retval2 )	1395:4:41132:41155	29735	0	True				
ANR	29863	CallExpression	zval_ptr_dtor ( & retval2 )		29735	0					
ANR	29864	Callee	zval_ptr_dtor		29735	0					
ANR	29865	Identifier	zval_ptr_dtor		29735	0					
ANR	29866	ArgumentList	& retval2		29735	1					
ANR	29867	Argument	& retval2		29735	0					
ANR	29868	UnaryOperationExpression	& retval2		29735	0					
ANR	29869	UnaryOperator	&		29735	0					
ANR	29870	Identifier	retval2		29735	1					
ANR	29871	IfStatement	if ( EG ( exception ) )		29735	1					
ANR	29872	Condition	EG ( exception )	1396:8:41165:41177	29735	0	True				
ANR	29873	CallExpression	EG ( exception )		29735	0					
ANR	29874	Callee	EG		29735	0					
ANR	29875	Identifier	EG		29735	0					
ANR	29876	ArgumentList	exception		29735	1					
ANR	29877	Argument	exception		29735	0					
ANR	29878	Identifier	exception		29735	0					
ANR	29879	CompoundStatement		14:23:535:535	29735	1					
ANR	29880	ExpressionStatement	OBJ_RELEASE ( EG ( exception ) )	1397:5:41187:41213	29735	0	True				
ANR	29881	CallExpression	OBJ_RELEASE ( EG ( exception ) )		29735	0					
ANR	29882	Callee	OBJ_RELEASE		29735	0					
ANR	29883	Identifier	OBJ_RELEASE		29735	0					
ANR	29884	ArgumentList	EG ( exception )		29735	1					
ANR	29885	Argument	EG ( exception )		29735	0					
ANR	29886	CallExpression	EG ( exception )		29735	0					
ANR	29887	Callee	EG		29735	0					
ANR	29888	Identifier	EG		29735	0					
ANR	29889	ArgumentList	exception		29735	1					
ANR	29890	Argument	exception		29735	0					
ANR	29891	Identifier	exception		29735	0					
ANR	29892	ExpressionStatement	EG ( exception ) = NULL	1398:5:41220:41240	29735	1	True				
ANR	29893	AssignmentExpression	EG ( exception ) = NULL		29735	0		=			
ANR	29894	CallExpression	EG ( exception )		29735	0					
ANR	29895	Callee	EG		29735	0					
ANR	29896	Identifier	EG		29735	0					
ANR	29897	ArgumentList	exception		29735	1					
ANR	29898	Argument	exception		29735	0					
ANR	29899	Identifier	exception		29735	0					
ANR	29900	Identifier	NULL		29735	1					
ANR	29901	ExpressionStatement	OBJ_RELEASE ( old_exception )	1400:4:41252:41278	29735	2	True				
ANR	29902	CallExpression	OBJ_RELEASE ( old_exception )		29735	0					
ANR	29903	Callee	OBJ_RELEASE		29735	0					
ANR	29904	Identifier	OBJ_RELEASE		29735	0					
ANR	29905	ArgumentList	old_exception		29735	1					
ANR	29906	Argument	old_exception		29735	0					
ANR	29907	Identifier	old_exception		29735	0					
ANR	29908	ElseStatement	else		29735	0					
ANR	29909	CompoundStatement		19:10:645:645	29735	0					
ANR	29910	ExpressionStatement	EG ( exception ) = old_exception	1402:4:41296:41325	29735	0	True				
ANR	29911	AssignmentExpression	EG ( exception ) = old_exception		29735	0		=			
ANR	29912	CallExpression	EG ( exception )		29735	0					
ANR	29913	Callee	EG		29735	0					
ANR	29914	Identifier	EG		29735	0					
ANR	29915	ArgumentList	exception		29735	1					
ANR	29916	Argument	exception		29735	0					
ANR	29917	Identifier	exception		29735	0					
ANR	29918	Identifier	old_exception		29735	1					
ANR	29919	ReturnType	ZEND_API void		29735	1					
ANR	29920	Identifier	zend_try_exception_handler		29735	2					
ANR	29921	ParameterList			29735	3					
ANR	29922	CFGEntryNode	ENTRY		29735		True				
ANR	29923	CFGExitNode	EXIT		29735		True				
ANR	29924	Symbol	exception		29735						
ANR	29925	Symbol	& orig_user_exception_handler		29735						
ANR	29926	Symbol	EG		29735						
ANR	29927	Symbol	NULL		29735						
ANR	29928	Symbol	SUCCESS		29735						
ANR	29929	Symbol	CG		29735						
ANR	29930	Symbol	Z_TYPE		29735						
ANR	29931	Symbol	orig_user_exception_handler		29735						
ANR	29932	Symbol	retval2		29735						
ANR	29933	Symbol	params		29735						
ANR	29934	Symbol	call_user_function_ex		29735						
ANR	29935	Symbol	& EG		29735						
ANR	29936	Symbol	user_exception_handler		29735						
ANR	29937	Symbol	function_table		29735						
ANR	29938	Symbol	IS_UNDEF		29735						
ANR	29939	Symbol	old_exception		29735						
ANR	29940	Symbol	& retval2		29735						
ANR	29941	Function	zend_execute_scripts	1408:0:41352:42278							
ANR	29942	FunctionDef	"zend_execute_scripts (int type , zval * retval , int file_count)"		29941	0					
ANR	29943	CompoundStatement		1409:0:41441:42278	29941	0					
ANR	29944	IdentifierDeclStatement	va_list files ;	1410:1:41444:41457	29941	0	True				
ANR	29945	IdentifierDecl	files		29941	0					
ANR	29946	IdentifierDeclType	va_list		29941	0					
ANR	29947	Identifier	files		29941	1					
ANR	29948	IdentifierDeclStatement	int i ;	1411:1:41460:41465	29941	1	True				
ANR	29949	IdentifierDecl	i		29941	0					
ANR	29950	IdentifierDeclType	int		29941	0					
ANR	29951	Identifier	i		29941	1					
ANR	29952	IdentifierDeclStatement	zend_file_handle * file_handle ;	1412:1:41468:41497	29941	2	True				
ANR	29953	IdentifierDecl	* file_handle		29941	0					
ANR	29954	IdentifierDeclType	zend_file_handle *		29941	0					
ANR	29955	Identifier	file_handle		29941	1					
ANR	29956	IdentifierDeclStatement	zend_op_array * op_array ;	1413:1:41500:41523	29941	3	True				
ANR	29957	IdentifierDecl	* op_array		29941	0					
ANR	29958	IdentifierDeclType	zend_op_array *		29941	0					
ANR	29959	Identifier	op_array		29941	1					
ANR	29960	ExpressionStatement	"va_start ( files , file_count )"	1415:1:41527:41554	29941	4	True				
ANR	29961	CallExpression	"va_start ( files , file_count )"		29941	0					
ANR	29962	Callee	va_start		29941	0					
ANR	29963	Identifier	va_start		29941	0					
ANR	29964	ArgumentList	files		29941	1					
ANR	29965	Argument	files		29941	0					
ANR	29966	Identifier	files		29941	0					
ANR	29967	Argument	file_count		29941	1					
ANR	29968	Identifier	file_count		29941	0					
ANR	29969	ForStatement	for ( i = 0 ; i < file_count ; i ++ )		29941	5					
ANR	29970	ForInit	i = 0 ;	1416:6:41562:41567	29941	0	True				
ANR	29971	AssignmentExpression	i = 0		29941	0		=			
ANR	29972	Identifier	i		29941	0					
ANR	29973	PrimaryExpression	0		29941	1					
ANR	29974	Condition	i < file_count	1416:13:41569:41582	29941	1	True				
ANR	29975	RelationalExpression	i < file_count		29941	0		<			
ANR	29976	Identifier	i		29941	0					
ANR	29977	Identifier	file_count		29941	1					
ANR	29978	PostIncDecOperationExpression	i ++	1416:29:41585:41587	29941	2	True				
ANR	29979	Identifier	i		29941	0					
ANR	29980	IncDec	++		29941	1					
ANR	29981	CompoundStatement		8:34:148:148	29941	3					
ANR	29982	Statement	file_handle	1417:2:41594:41604	29941	0	True				
ANR	29983	Statement	=	1417:14:41606:41606	29941	1	True				
ANR	29984	Statement	va_arg	1417:16:41608:41613	29941	2	True				
ANR	29985	Statement	(	1417:22:41614:41614	29941	3	True				
ANR	29986	Statement	files	1417:23:41615:41619	29941	4	True				
ANR	29987	Statement	","	1417:28:41620:41620	29941	5	True				
ANR	29988	Statement	zend_file_handle	1417:30:41622:41637	29941	6	True				
ANR	29989	Statement	*	1417:47:41639:41639	29941	7	True				
ANR	29990	Statement	)	1417:48:41640:41640	29941	8	True				
ANR	29991	ExpressionStatement		1417:49:41641:41641	29941	9	True				
ANR	29992	IfStatement	if ( ! file_handle )		29941	10					
ANR	29993	Condition	! file_handle	1418:6:41649:41660	29941	0	True				
ANR	29994	UnaryOperationExpression	! file_handle		29941	0					
ANR	29995	UnaryOperator	!		29941	0					
ANR	29996	Identifier	file_handle		29941	1					
ANR	29997	CompoundStatement		10:20:221:221	29941	1					
ANR	29998	ContinueStatement	continue ;	1419:3:41668:41676	29941	0	True				
ANR	29999	ExpressionStatement	"op_array = zend_compile_file ( file_handle , type )"	1422:2:41685:41732	29941	11	True				
ANR	30000	AssignmentExpression	"op_array = zend_compile_file ( file_handle , type )"		29941	0		=			
ANR	30001	Identifier	op_array		29941	0					
ANR	30002	CallExpression	"zend_compile_file ( file_handle , type )"		29941	1					
ANR	30003	Callee	zend_compile_file		29941	0					
ANR	30004	Identifier	zend_compile_file		29941	0					
ANR	30005	ArgumentList	file_handle		29941	1					
ANR	30006	Argument	file_handle		29941	0					
ANR	30007	Identifier	file_handle		29941	0					
ANR	30008	Argument	type		29941	1					
ANR	30009	Identifier	type		29941	0					
ANR	30010	IfStatement	if ( file_handle -> opened_path )		29941	12					
ANR	30011	Condition	file_handle -> opened_path	1423:6:41740:41763	29941	0	True				
ANR	30012	PtrMemberAccess	file_handle -> opened_path		29941	0					
ANR	30013	Identifier	file_handle		29941	0					
ANR	30014	Identifier	opened_path		29941	1					
ANR	30015	CompoundStatement		15:32:324:324	29941	1					
ANR	30016	ExpressionStatement	"zend_hash_add_empty_element ( & EG ( included_files ) , file_handle -> opened_path )"	1424:3:41771:41845	29941	0	True				
ANR	30017	CallExpression	"zend_hash_add_empty_element ( & EG ( included_files ) , file_handle -> opened_path )"		29941	0					
ANR	30018	Callee	zend_hash_add_empty_element		29941	0					
ANR	30019	Identifier	zend_hash_add_empty_element		29941	0					
ANR	30020	ArgumentList	& EG ( included_files )		29941	1					
ANR	30021	Argument	& EG ( included_files )		29941	0					
ANR	30022	UnaryOperationExpression	& EG ( included_files )		29941	0					
ANR	30023	UnaryOperator	&		29941	0					
ANR	30024	CallExpression	EG ( included_files )		29941	1					
ANR	30025	Callee	EG		29941	0					
ANR	30026	Identifier	EG		29941	0					
ANR	30027	ArgumentList	included_files		29941	1					
ANR	30028	Argument	included_files		29941	0					
ANR	30029	Identifier	included_files		29941	0					
ANR	30030	Argument	file_handle -> opened_path		29941	1					
ANR	30031	PtrMemberAccess	file_handle -> opened_path		29941	0					
ANR	30032	Identifier	file_handle		29941	0					
ANR	30033	Identifier	opened_path		29941	1					
ANR	30034	ExpressionStatement	zend_destroy_file_handle ( file_handle )	1426:2:41853:41890	29941	13	True				
ANR	30035	CallExpression	zend_destroy_file_handle ( file_handle )		29941	0					
ANR	30036	Callee	zend_destroy_file_handle		29941	0					
ANR	30037	Identifier	zend_destroy_file_handle		29941	0					
ANR	30038	ArgumentList	file_handle		29941	1					
ANR	30039	Argument	file_handle		29941	0					
ANR	30040	Identifier	file_handle		29941	0					
ANR	30041	IfStatement	if ( op_array )		29941	14					
ANR	30042	Condition	op_array	1427:6:41898:41905	29941	0	True				
ANR	30043	Identifier	op_array		29941	0					
ANR	30044	CompoundStatement		19:16:466:466	29941	1					
ANR	30045	ExpressionStatement	"zend_execute ( op_array , retval )"	1428:3:41913:41943	29941	0	True				
ANR	30046	CallExpression	"zend_execute ( op_array , retval )"		29941	0					
ANR	30047	Callee	zend_execute		29941	0					
ANR	30048	Identifier	zend_execute		29941	0					
ANR	30049	ArgumentList	op_array		29941	1					
ANR	30050	Argument	op_array		29941	0					
ANR	30051	Identifier	op_array		29941	0					
ANR	30052	Argument	retval		29941	1					
ANR	30053	Identifier	retval		29941	0					
ANR	30054	ExpressionStatement	zend_exception_restore ( )	1429:3:41948:41972	29941	1	True				
ANR	30055	CallExpression	zend_exception_restore ( )		29941	0					
ANR	30056	Callee	zend_exception_restore		29941	0					
ANR	30057	Identifier	zend_exception_restore		29941	0					
ANR	30058	ArgumentList			29941	1					
ANR	30059	ExpressionStatement	zend_try_exception_handler ( )	1430:3:41977:42005	29941	2	True				
ANR	30060	CallExpression	zend_try_exception_handler ( )		29941	0					
ANR	30061	Callee	zend_try_exception_handler		29941	0					
ANR	30062	Identifier	zend_try_exception_handler		29941	0					
ANR	30063	ArgumentList			29941	1					
ANR	30064	IfStatement	if ( EG ( exception ) )		29941	3					
ANR	30065	Condition	EG ( exception )	1431:7:42014:42026	29941	0	True				
ANR	30066	CallExpression	EG ( exception )		29941	0					
ANR	30067	Callee	EG		29941	0					
ANR	30068	Identifier	EG		29941	0					
ANR	30069	ArgumentList	exception		29941	1					
ANR	30070	Argument	exception		29941	0					
ANR	30071	Identifier	exception		29941	0					
ANR	30072	CompoundStatement		23:22:587:587	29941	1					
ANR	30073	ExpressionStatement	"zend_exception_error ( EG ( exception ) , E_ERROR )"	1432:4:42035:42079	29941	0	True				
ANR	30074	CallExpression	"zend_exception_error ( EG ( exception ) , E_ERROR )"		29941	0					
ANR	30075	Callee	zend_exception_error		29941	0					
ANR	30076	Identifier	zend_exception_error		29941	0					
ANR	30077	ArgumentList	EG ( exception )		29941	1					
ANR	30078	Argument	EG ( exception )		29941	0					
ANR	30079	CallExpression	EG ( exception )		29941	0					
ANR	30080	Callee	EG		29941	0					
ANR	30081	Identifier	EG		29941	0					
ANR	30082	ArgumentList	exception		29941	1					
ANR	30083	Argument	exception		29941	0					
ANR	30084	Identifier	exception		29941	0					
ANR	30085	Argument	E_ERROR		29941	1					
ANR	30086	Identifier	E_ERROR		29941	0					
ANR	30087	ExpressionStatement	destroy_op_array ( op_array )	1434:3:42089:42115	29941	4	True				
ANR	30088	CallExpression	destroy_op_array ( op_array )		29941	0					
ANR	30089	Callee	destroy_op_array		29941	0					
ANR	30090	Identifier	destroy_op_array		29941	0					
ANR	30091	ArgumentList	op_array		29941	1					
ANR	30092	Argument	op_array		29941	0					
ANR	30093	Identifier	op_array		29941	0					
ANR	30094	ExpressionStatement	"efree_size ( op_array , sizeof ( zend_op_array ) )"	1435:3:42120:42163	29941	5	True				
ANR	30095	CallExpression	"efree_size ( op_array , sizeof ( zend_op_array ) )"		29941	0					
ANR	30096	Callee	efree_size		29941	0					
ANR	30097	Identifier	efree_size		29941	0					
ANR	30098	ArgumentList	op_array		29941	1					
ANR	30099	Argument	op_array		29941	0					
ANR	30100	Identifier	op_array		29941	0					
ANR	30101	Argument	sizeof ( zend_op_array )		29941	1					
ANR	30102	SizeofExpression	sizeof ( zend_op_array )		29941	0					
ANR	30103	Sizeof	sizeof		29941	0					
ANR	30104	SizeofOperand	zend_op_array		29941	1					
ANR	30105	ElseStatement	else		29941	0					
ANR	30106	IfStatement	if ( type == ZEND_REQUIRE )		29941	0					
ANR	30107	Condition	type == ZEND_REQUIRE	1436:13:42178:42195	29941	0	True				
ANR	30108	EqualityExpression	type == ZEND_REQUIRE		29941	0		==			
ANR	30109	Identifier	type		29941	0					
ANR	30110	Identifier	ZEND_REQUIRE		29941	1					
ANR	30111	CompoundStatement		28:33:756:756	29941	1					
ANR	30112	ExpressionStatement	va_end ( files )	1437:3:42203:42216	29941	0	True				
ANR	30113	CallExpression	va_end ( files )		29941	0					
ANR	30114	Callee	va_end		29941	0					
ANR	30115	Identifier	va_end		29941	0					
ANR	30116	ArgumentList	files		29941	1					
ANR	30117	Argument	files		29941	0					
ANR	30118	Identifier	files		29941	0					
ANR	30119	ReturnStatement	return FAILURE ;	1438:3:42221:42235	29941	1	True				
ANR	30120	Identifier	FAILURE		29941	0					
ANR	30121	ExpressionStatement	va_end ( files )	1441:1:42245:42258	29941	6	True				
ANR	30122	CallExpression	va_end ( files )		29941	0					
ANR	30123	Callee	va_end		29941	0					
ANR	30124	Identifier	va_end		29941	0					
ANR	30125	ArgumentList	files		29941	1					
ANR	30126	Argument	files		29941	0					
ANR	30127	Identifier	files		29941	0					
ANR	30128	ReturnStatement	return SUCCESS ;	1443:1:42262:42276	29941	7	True				
ANR	30129	Identifier	SUCCESS		29941	0					
ANR	30130	ReturnType	ZEND_API int		29941	1					
ANR	30131	Identifier	zend_execute_scripts		29941	2					
ANR	30132	ParameterList	"int type , zval * retval , int file_count"		29941	3					
ANR	30133	Parameter	int type	1408:34:41386:41393	29941	0	True				
ANR	30134	ParameterType	int		29941	0					
ANR	30135	Identifier	type		29941	1					
ANR	30136	Parameter	zval * retval	1408:44:41396:41407	29941	1	True				
ANR	30137	ParameterType	zval *		29941	0					
ANR	30138	Identifier	retval		29941	1					
ANR	30139	Parameter	int file_count	1408:58:41410:41423	29941	2	True				
ANR	30140	ParameterType	int		29941	0					
ANR	30141	Identifier	file_count		29941	1					
ANR	30142	CFGEntryNode	ENTRY		29941		True				
ANR	30143	CFGExitNode	EXIT		29941		True				
ANR	30144	Symbol	file_count		29941						
ANR	30145	Symbol	exception		29941						
ANR	30146	Symbol	EG		29941						
ANR	30147	Symbol	SUCCESS		29941						
ANR	30148	Symbol	i		29941						
ANR	30149	Symbol	type		29941						
ANR	30150	Symbol	file_handle		29941						
ANR	30151	Symbol	& EG		29941						
ANR	30152	Symbol	FAILURE		29941						
ANR	30153	Symbol	retval		29941						
ANR	30154	Symbol	file_handle -> opened_path		29941						
ANR	30155	Symbol	* file_handle		29941						
ANR	30156	Symbol	E_ERROR		29941						
ANR	30157	Symbol	ZEND_REQUIRE		29941						
ANR	30158	Symbol	files		29941						
ANR	30159	Symbol	zend_compile_file		29941						
ANR	30160	Symbol	included_files		29941						
ANR	30161	Symbol	op_array		29941						
ANR	30162	Function	zend_make_compiled_string_description	1449:0:42349:42980							
ANR	30163	FunctionDef	zend_make_compiled_string_description (const char * name)		30162	0					
ANR	30164	CompoundStatement		1450:0:42430:42980	30162	0					
ANR	30165	IdentifierDeclStatement	const char * cur_filename ;	1451:1:42433:42457	30162	0	True				
ANR	30166	IdentifierDecl	* cur_filename		30162	0					
ANR	30167	IdentifierDeclType	const char *		30162	0					
ANR	30168	Identifier	cur_filename		30162	1					
ANR	30169	IdentifierDeclStatement	int cur_lineno ;	1452:1:42460:42474	30162	1	True				
ANR	30170	IdentifierDecl	cur_lineno		30162	0					
ANR	30171	IdentifierDeclType	int		30162	0					
ANR	30172	Identifier	cur_lineno		30162	1					
ANR	30173	IdentifierDeclStatement	char * compiled_string_description ;	1453:1:42477:42510	30162	2	True				
ANR	30174	IdentifierDecl	* compiled_string_description		30162	0					
ANR	30175	IdentifierDeclType	char *		30162	0					
ANR	30176	Identifier	compiled_string_description		30162	1					
ANR	30177	IfStatement	if ( zend_is_compiling ( ) )		30162	3					
ANR	30178	Condition	zend_is_compiling ( )	1455:5:42518:42536	30162	0	True				
ANR	30179	CallExpression	zend_is_compiling ( )		30162	0					
ANR	30180	Callee	zend_is_compiling		30162	0					
ANR	30181	Identifier	zend_is_compiling		30162	0					
ANR	30182	ArgumentList			30162	1					
ANR	30183	CompoundStatement		6:26:108:108	30162	1					
ANR	30184	ExpressionStatement	cur_filename = ZSTR_VAL ( zend_get_compiled_filename ( ) )	1456:2:42543:42596	30162	0	True				
ANR	30185	AssignmentExpression	cur_filename = ZSTR_VAL ( zend_get_compiled_filename ( ) )		30162	0		=			
ANR	30186	Identifier	cur_filename		30162	0					
ANR	30187	CallExpression	ZSTR_VAL ( zend_get_compiled_filename ( ) )		30162	1					
ANR	30188	Callee	ZSTR_VAL		30162	0					
ANR	30189	Identifier	ZSTR_VAL		30162	0					
ANR	30190	ArgumentList	zend_get_compiled_filename ( )		30162	1					
ANR	30191	Argument	zend_get_compiled_filename ( )		30162	0					
ANR	30192	CallExpression	zend_get_compiled_filename ( )		30162	0					
ANR	30193	Callee	zend_get_compiled_filename		30162	0					
ANR	30194	Identifier	zend_get_compiled_filename		30162	0					
ANR	30195	ArgumentList			30162	1					
ANR	30196	ExpressionStatement	cur_lineno = zend_get_compiled_lineno ( )	1457:2:42600:42639	30162	1	True				
ANR	30197	AssignmentExpression	cur_lineno = zend_get_compiled_lineno ( )		30162	0		=			
ANR	30198	Identifier	cur_lineno		30162	0					
ANR	30199	CallExpression	zend_get_compiled_lineno ( )		30162	1					
ANR	30200	Callee	zend_get_compiled_lineno		30162	0					
ANR	30201	Identifier	zend_get_compiled_lineno		30162	0					
ANR	30202	ArgumentList			30162	1					
ANR	30203	ElseStatement	else		30162	0					
ANR	30204	IfStatement	if ( zend_is_executing ( ) )		30162	0					
ANR	30205	Condition	zend_is_executing ( )	1458:12:42653:42671	30162	0	True				
ANR	30206	CallExpression	zend_is_executing ( )		30162	0					
ANR	30207	Callee	zend_is_executing		30162	0					
ANR	30208	Identifier	zend_is_executing		30162	0					
ANR	30209	ArgumentList			30162	1					
ANR	30210	CompoundStatement		9:33:243:243	30162	1					
ANR	30211	ExpressionStatement	cur_filename = zend_get_executed_filename ( )	1459:2:42678:42721	30162	0	True				
ANR	30212	AssignmentExpression	cur_filename = zend_get_executed_filename ( )		30162	0		=			
ANR	30213	Identifier	cur_filename		30162	0					
ANR	30214	CallExpression	zend_get_executed_filename ( )		30162	1					
ANR	30215	Callee	zend_get_executed_filename		30162	0					
ANR	30216	Identifier	zend_get_executed_filename		30162	0					
ANR	30217	ArgumentList			30162	1					
ANR	30218	ExpressionStatement	cur_lineno = zend_get_executed_lineno ( )	1460:2:42725:42764	30162	1	True				
ANR	30219	AssignmentExpression	cur_lineno = zend_get_executed_lineno ( )		30162	0		=			
ANR	30220	Identifier	cur_lineno		30162	0					
ANR	30221	CallExpression	zend_get_executed_lineno ( )		30162	1					
ANR	30222	Callee	zend_get_executed_lineno		30162	0					
ANR	30223	Identifier	zend_get_executed_lineno		30162	0					
ANR	30224	ArgumentList			30162	1					
ANR	30225	ElseStatement	else		30162	0					
ANR	30226	CompoundStatement		12:8:343:343	30162	0					
ANR	30227	ExpressionStatement	"cur_filename = ""Unknown"""	1462:2:42778:42802	30162	0	True				
ANR	30228	AssignmentExpression	"cur_filename = ""Unknown"""		30162	0		=			
ANR	30229	Identifier	cur_filename		30162	0					
ANR	30230	PrimaryExpression	"""Unknown"""		30162	1					
ANR	30231	ExpressionStatement	cur_lineno = 0	1463:2:42806:42820	30162	1	True				
ANR	30232	AssignmentExpression	cur_lineno = 0		30162	0		=			
ANR	30233	Identifier	cur_lineno		30162	0					
ANR	30234	PrimaryExpression	0		30162	1					
ANR	30235	ExpressionStatement	"zend_spprintf ( & compiled_string_description , 0 , COMPILED_STRING_DESCRIPTION_FORMAT , cur_filename , cur_lineno , name )"	1466:1:42827:42941	30162	4	True				
ANR	30236	CallExpression	"zend_spprintf ( & compiled_string_description , 0 , COMPILED_STRING_DESCRIPTION_FORMAT , cur_filename , cur_lineno , name )"		30162	0					
ANR	30237	Callee	zend_spprintf		30162	0					
ANR	30238	Identifier	zend_spprintf		30162	0					
ANR	30239	ArgumentList	& compiled_string_description		30162	1					
ANR	30240	Argument	& compiled_string_description		30162	0					
ANR	30241	UnaryOperationExpression	& compiled_string_description		30162	0					
ANR	30242	UnaryOperator	&		30162	0					
ANR	30243	Identifier	compiled_string_description		30162	1					
ANR	30244	Argument	0		30162	1					
ANR	30245	PrimaryExpression	0		30162	0					
ANR	30246	Argument	COMPILED_STRING_DESCRIPTION_FORMAT		30162	2					
ANR	30247	Identifier	COMPILED_STRING_DESCRIPTION_FORMAT		30162	0					
ANR	30248	Argument	cur_filename		30162	3					
ANR	30249	Identifier	cur_filename		30162	0					
ANR	30250	Argument	cur_lineno		30162	4					
ANR	30251	Identifier	cur_lineno		30162	0					
ANR	30252	Argument	name		30162	5					
ANR	30253	Identifier	name		30162	0					
ANR	30254	ReturnStatement	return compiled_string_description ;	1467:1:42944:42978	30162	5	True				
ANR	30255	Identifier	compiled_string_description		30162	0					
ANR	30256	ReturnType	ZEND_API char *		30162	1					
ANR	30257	Identifier	zend_make_compiled_string_description		30162	2					
ANR	30258	ParameterList	const char * name		30162	3					
ANR	30259	Parameter	const char * name	1449:53:42402:42417	30162	0	True				
ANR	30260	ParameterType	const char *		30162	0					
ANR	30261	Identifier	name		30162	1					
ANR	30262	CFGEntryNode	ENTRY		30162		True				
ANR	30263	CFGExitNode	EXIT		30162		True				
ANR	30264	Symbol	cur_filename		30162						
ANR	30265	Symbol	zend_is_compiling		30162						
ANR	30266	Symbol	zend_is_executing		30162						
ANR	30267	Symbol	compiled_string_description		30162						
ANR	30268	Symbol	ZSTR_VAL		30162						
ANR	30269	Symbol	zend_get_executed_lineno		30162						
ANR	30270	Symbol	zend_get_compiled_filename		30162						
ANR	30271	Symbol	zend_get_executed_filename		30162						
ANR	30272	Symbol	COMPILED_STRING_DESCRIPTION_FORMAT		30162						
ANR	30273	Symbol	name		30162						
ANR	30274	Symbol	zend_get_compiled_lineno		30162						
ANR	30275	Symbol	& compiled_string_description		30162						
ANR	30276	Symbol	cur_lineno		30162						
ANR	30277	Function	free_estring	1471:0:42993:43053							
ANR	30278	FunctionDef	free_estring (char * * str_p)		30277	0					
ANR	30279	CompoundStatement		1472:0:43035:43053	30277	0					
ANR	30280	ExpressionStatement	efree ( * str_p )	1473:1:43038:43051	30277	0	True				
ANR	30281	CallExpression	efree ( * str_p )		30277	0					
ANR	30282	Callee	efree		30277	0					
ANR	30283	Identifier	efree		30277	0					
ANR	30284	ArgumentList	* str_p		30277	1					
ANR	30285	Argument	* str_p		30277	0					
ANR	30286	UnaryOperationExpression	* str_p		30277	0					
ANR	30287	UnaryOperator	*		30277	0					
ANR	30288	Identifier	str_p		30277	1					
ANR	30289	ReturnType	void		30277	1					
ANR	30290	Identifier	free_estring		30277	2					
ANR	30291	ParameterList	char * * str_p		30277	3					
ANR	30292	Parameter	char * * str_p	1471:18:43011:43022	30277	0	True				
ANR	30293	ParameterType	char * *		30277	0					
ANR	30294	Identifier	str_p		30277	1					
ANR	30295	CFGEntryNode	ENTRY		30277		True				
ANR	30296	CFGExitNode	EXIT		30277		True				
ANR	30297	Symbol	* str_p		30277						
ANR	30298	Symbol	str_p		30277						
