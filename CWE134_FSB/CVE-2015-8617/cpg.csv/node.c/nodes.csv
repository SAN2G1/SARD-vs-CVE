command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3197324	File	data/converged/CVE-2015-8617_php-src/node.c								
ANR	3197325	DeclStmt									
ANR	3197326	Decl							const zend_function_entry	const zend_function_entry [ ]	php_dom_node_class_functions
ANR	3197327	Function	dom_reconcile_ns	162:0:6294:7128							
ANR	3197328	FunctionDef	"dom_reconcile_ns (xmlDocPtr doc , xmlNodePtr nodep)"		3197327	0					
ANR	3197329	CompoundStatement		163:0:6366:7128	3197327	0					
ANR	3197330	IdentifierDeclStatement	"xmlNsPtr nsptr , nsdftptr , curns , prevns = NULL ;"	164:1:6369:6415	3197327	0	True				
ANR	3197331	IdentifierDecl	nsptr		3197327	0					
ANR	3197332	IdentifierDeclType	xmlNsPtr		3197327	0					
ANR	3197333	Identifier	nsptr		3197327	1					
ANR	3197334	IdentifierDecl	nsdftptr		3197327	1					
ANR	3197335	IdentifierDeclType	xmlNsPtr		3197327	0					
ANR	3197336	Identifier	nsdftptr		3197327	1					
ANR	3197337	IdentifierDecl	curns		3197327	2					
ANR	3197338	IdentifierDeclType	xmlNsPtr		3197327	0					
ANR	3197339	Identifier	curns		3197327	1					
ANR	3197340	IdentifierDecl	prevns = NULL		3197327	3					
ANR	3197341	IdentifierDeclType	xmlNsPtr		3197327	0					
ANR	3197342	Identifier	prevns		3197327	1					
ANR	3197343	AssignmentExpression	prevns = NULL		3197327	2		=			
ANR	3197344	Identifier	NULL		3197327	0					
ANR	3197345	Identifier	NULL		3197327	1					
ANR	3197346	IfStatement	if ( nodep -> type == XML_ELEMENT_NODE )		3197327	1					
ANR	3197347	Condition	nodep -> type == XML_ELEMENT_NODE	166:5:6423:6453	3197327	0	True				
ANR	3197348	EqualityExpression	nodep -> type == XML_ELEMENT_NODE		3197327	0		==			
ANR	3197349	PtrMemberAccess	nodep -> type		3197327	0					
ANR	3197350	Identifier	nodep		3197327	0					
ANR	3197351	Identifier	type		3197327	1					
ANR	3197352	Identifier	XML_ELEMENT_NODE		3197327	1					
ANR	3197353	CompoundStatement		4:38:89:89	3197327	1					
ANR	3197354	IfStatement	if ( nodep -> nsDef != NULL )		3197327	0					
ANR	3197355	Condition	nodep -> nsDef != NULL	168:6:6554:6573	3197327	0	True				
ANR	3197356	EqualityExpression	nodep -> nsDef != NULL		3197327	0		!=			
ANR	3197357	PtrMemberAccess	nodep -> nsDef		3197327	0					
ANR	3197358	Identifier	nodep		3197327	0					
ANR	3197359	Identifier	nsDef		3197327	1					
ANR	3197360	Identifier	NULL		3197327	1					
ANR	3197361	CompoundStatement		6:28:209:209	3197327	1					
ANR	3197362	ExpressionStatement	curns = nodep -> nsDef	169:3:6581:6601	3197327	0	True				
ANR	3197363	AssignmentExpression	curns = nodep -> nsDef		3197327	0		=			
ANR	3197364	Identifier	curns		3197327	0					
ANR	3197365	PtrMemberAccess	nodep -> nsDef		3197327	1					
ANR	3197366	Identifier	nodep		3197327	0					
ANR	3197367	Identifier	nsDef		3197327	1					
ANR	3197368	WhileStatement	while ( curns )		3197327	1					
ANR	3197369	Condition	curns	170:10:6613:6617	3197327	0	True				
ANR	3197370	Identifier	curns		3197327	0					
ANR	3197371	CompoundStatement		8:17:253:253	3197327	1					
ANR	3197372	ExpressionStatement	nsdftptr = curns -> next	171:4:6626:6648	3197327	0	True				
ANR	3197373	AssignmentExpression	nsdftptr = curns -> next		3197327	0		=			
ANR	3197374	Identifier	nsdftptr		3197327	0					
ANR	3197375	PtrMemberAccess	curns -> next		3197327	1					
ANR	3197376	Identifier	curns		3197327	0					
ANR	3197377	Identifier	next		3197327	1					
ANR	3197378	IfStatement	if ( curns -> href != NULL )		3197327	1					
ANR	3197379	Condition	curns -> href != NULL	172:8:6658:6676	3197327	0	True				
ANR	3197380	EqualityExpression	curns -> href != NULL		3197327	0		!=			
ANR	3197381	PtrMemberAccess	curns -> href		3197327	0					
ANR	3197382	Identifier	curns		3197327	0					
ANR	3197383	Identifier	href		3197327	1					
ANR	3197384	Identifier	NULL		3197327	1					
ANR	3197385	CompoundStatement		10:29:312:312	3197327	1					
ANR	3197386	IfStatement	"if ( ( nsptr = xmlSearchNsByHref ( doc , nodep -> parent , curns -> href ) ) && ( curns -> prefix == NULL || xmlStrEqual ( nsptr -> prefix , curns -> prefix ) ) )"		3197327	0					
ANR	3197387	Condition	"( nsptr = xmlSearchNsByHref ( doc , nodep -> parent , curns -> href ) ) && ( curns -> prefix == NULL || xmlStrEqual ( nsptr -> prefix , curns -> prefix ) )"	173:8:6689:6826	3197327	0	True				
ANR	3197388	AndExpression	"( nsptr = xmlSearchNsByHref ( doc , nodep -> parent , curns -> href ) ) && ( curns -> prefix == NULL || xmlStrEqual ( nsptr -> prefix , curns -> prefix ) )"		3197327	0		&&			
ANR	3197389	AssignmentExpression	"nsptr = xmlSearchNsByHref ( doc , nodep -> parent , curns -> href )"		3197327	0		=			
ANR	3197390	Identifier	nsptr		3197327	0					
ANR	3197391	CallExpression	"xmlSearchNsByHref ( doc , nodep -> parent , curns -> href )"		3197327	1					
ANR	3197392	Callee	xmlSearchNsByHref		3197327	0					
ANR	3197393	Identifier	xmlSearchNsByHref		3197327	0					
ANR	3197394	ArgumentList	doc		3197327	1					
ANR	3197395	Argument	doc		3197327	0					
ANR	3197396	Identifier	doc		3197327	0					
ANR	3197397	Argument	nodep -> parent		3197327	1					
ANR	3197398	PtrMemberAccess	nodep -> parent		3197327	0					
ANR	3197399	Identifier	nodep		3197327	0					
ANR	3197400	Identifier	parent		3197327	1					
ANR	3197401	Argument	curns -> href		3197327	2					
ANR	3197402	PtrMemberAccess	curns -> href		3197327	0					
ANR	3197403	Identifier	curns		3197327	0					
ANR	3197404	Identifier	href		3197327	1					
ANR	3197405	OrExpression	"curns -> prefix == NULL || xmlStrEqual ( nsptr -> prefix , curns -> prefix )"		3197327	1		||			
ANR	3197406	EqualityExpression	curns -> prefix == NULL		3197327	0		==			
ANR	3197407	PtrMemberAccess	curns -> prefix		3197327	0					
ANR	3197408	Identifier	curns		3197327	0					
ANR	3197409	Identifier	prefix		3197327	1					
ANR	3197410	Identifier	NULL		3197327	1					
ANR	3197411	CallExpression	"xmlStrEqual ( nsptr -> prefix , curns -> prefix )"		3197327	1					
ANR	3197412	Callee	xmlStrEqual		3197327	0					
ANR	3197413	Identifier	xmlStrEqual		3197327	0					
ANR	3197414	ArgumentList	nsptr -> prefix		3197327	1					
ANR	3197415	Argument	nsptr -> prefix		3197327	0					
ANR	3197416	PtrMemberAccess	nsptr -> prefix		3197327	0					
ANR	3197417	Identifier	nsptr		3197327	0					
ANR	3197418	Identifier	prefix		3197327	1					
ANR	3197419	Argument	curns -> prefix		3197327	1					
ANR	3197420	PtrMemberAccess	curns -> prefix		3197327	0					
ANR	3197421	Identifier	curns		3197327	0					
ANR	3197422	Identifier	prefix		3197327	1					
ANR	3197423	CompoundStatement		12:76:462:462	3197327	1					
ANR	3197424	ExpressionStatement	curns -> next = NULL	175:6:6837:6855	3197327	0	True				
ANR	3197425	AssignmentExpression	curns -> next = NULL		3197327	0		=			
ANR	3197426	PtrMemberAccess	curns -> next		3197327	0					
ANR	3197427	Identifier	curns		3197327	0					
ANR	3197428	Identifier	next		3197327	1					
ANR	3197429	Identifier	NULL		3197327	1					
ANR	3197430	IfStatement	if ( prevns == NULL )		3197327	1					
ANR	3197431	Condition	prevns == NULL	176:10:6867:6880	3197327	0	True				
ANR	3197432	EqualityExpression	prevns == NULL		3197327	0		==			
ANR	3197433	Identifier	prevns		3197327	0					
ANR	3197434	Identifier	NULL		3197327	1					
ANR	3197435	CompoundStatement		14:26:516:516	3197327	1					
ANR	3197436	ExpressionStatement	nodep -> nsDef = nsdftptr	177:7:6892:6915	3197327	0	True				
ANR	3197437	AssignmentExpression	nodep -> nsDef = nsdftptr		3197327	0		=			
ANR	3197438	PtrMemberAccess	nodep -> nsDef		3197327	0					
ANR	3197439	Identifier	nodep		3197327	0					
ANR	3197440	Identifier	nsDef		3197327	1					
ANR	3197441	Identifier	nsdftptr		3197327	1					
ANR	3197442	ElseStatement	else		3197327	0					
ANR	3197443	CompoundStatement		16:13:563:563	3197327	0					
ANR	3197444	ExpressionStatement	prevns -> next = nsdftptr	179:7:6939:6962	3197327	0	True				
ANR	3197445	AssignmentExpression	prevns -> next = nsdftptr		3197327	0		=			
ANR	3197446	PtrMemberAccess	prevns -> next		3197327	0					
ANR	3197447	Identifier	prevns		3197327	0					
ANR	3197448	Identifier	next		3197327	1					
ANR	3197449	Identifier	nsdftptr		3197327	1					
ANR	3197450	ExpressionStatement	"dom_set_old_ns ( doc , curns )"	181:6:6978:7004	3197327	2	True				
ANR	3197451	CallExpression	"dom_set_old_ns ( doc , curns )"		3197327	0					
ANR	3197452	Callee	dom_set_old_ns		3197327	0					
ANR	3197453	Identifier	dom_set_old_ns		3197327	0					
ANR	3197454	ArgumentList	doc		3197327	1					
ANR	3197455	Argument	doc		3197327	0					
ANR	3197456	Identifier	doc		3197327	0					
ANR	3197457	Argument	curns		3197327	1					
ANR	3197458	Identifier	curns		3197327	0					
ANR	3197459	ExpressionStatement	curns = prevns	182:6:7012:7026	3197327	3	True				
ANR	3197460	AssignmentExpression	curns = prevns		3197327	0		=			
ANR	3197461	Identifier	curns		3197327	0					
ANR	3197462	Identifier	prevns		3197327	1					
ANR	3197463	ExpressionStatement	prevns = curns	185:4:7045:7059	3197327	2	True				
ANR	3197464	AssignmentExpression	prevns = curns		3197327	0		=			
ANR	3197465	Identifier	prevns		3197327	0					
ANR	3197466	Identifier	curns		3197327	1					
ANR	3197467	ExpressionStatement	curns = nsdftptr	186:4:7065:7081	3197327	3	True				
ANR	3197468	AssignmentExpression	curns = nsdftptr		3197327	0		=			
ANR	3197469	Identifier	curns		3197327	0					
ANR	3197470	Identifier	nsdftptr		3197327	1					
ANR	3197471	ExpressionStatement	"xmlReconciliateNs ( doc , nodep )"	189:2:7094:7123	3197327	1	True				
ANR	3197472	CallExpression	"xmlReconciliateNs ( doc , nodep )"		3197327	0					
ANR	3197473	Callee	xmlReconciliateNs		3197327	0					
ANR	3197474	Identifier	xmlReconciliateNs		3197327	0					
ANR	3197475	ArgumentList	doc		3197327	1					
ANR	3197476	Argument	doc		3197327	0					
ANR	3197477	Identifier	doc		3197327	0					
ANR	3197478	Argument	nodep		3197327	1					
ANR	3197479	Identifier	nodep		3197327	0					
ANR	3197480	ReturnType	static void		3197327	1					
ANR	3197481	Identifier	dom_reconcile_ns		3197327	2					
ANR	3197482	ParameterList	"xmlDocPtr doc , xmlNodePtr nodep"		3197327	3					
ANR	3197483	Parameter	xmlDocPtr doc	162:29:6323:6335	3197327	0	True				
ANR	3197484	ParameterType	xmlDocPtr		3197327	0					
ANR	3197485	Identifier	doc		3197327	1					
ANR	3197486	Parameter	xmlNodePtr nodep	162:44:6338:6353	3197327	1	True				
ANR	3197487	ParameterType	xmlNodePtr		3197327	0					
ANR	3197488	Identifier	nodep		3197327	1					
ANR	3197489	CFGEntryNode	ENTRY		3197327		True				
ANR	3197490	CFGExitNode	EXIT		3197327		True				
ANR	3197491	Symbol	nodep -> type		3197327						
ANR	3197492	Symbol	curns -> href		3197327						
ANR	3197493	Symbol	XML_ELEMENT_NODE		3197327						
ANR	3197494	Symbol	NULL		3197327						
ANR	3197495	Symbol	nodep -> nsDef		3197327						
ANR	3197496	Symbol	* prevns		3197327						
ANR	3197497	Symbol	* curns		3197327						
ANR	3197498	Symbol	curns -> next		3197327						
ANR	3197499	Symbol	nsdftptr		3197327						
ANR	3197500	Symbol	nsptr -> prefix		3197327						
ANR	3197501	Symbol	nodep		3197327						
ANR	3197502	Symbol	prevns		3197327						
ANR	3197503	Symbol	xmlStrEqual		3197327						
ANR	3197504	Symbol	nsptr		3197327						
ANR	3197505	Symbol	curns		3197327						
ANR	3197506	Symbol	nodep -> parent		3197327						
ANR	3197507	Symbol	xmlSearchNsByHref		3197327						
ANR	3197508	Symbol	prevns -> next		3197327						
ANR	3197509	Symbol	* nsptr		3197327						
ANR	3197510	Symbol	doc		3197327						
ANR	3197511	Symbol	* nodep		3197327						
ANR	3197512	Symbol	curns -> prefix		3197327						
ANR	3197513	Function	dom_node_node_name_read	199:0:7278:8932							
ANR	3197514	FunctionDef	"dom_node_node_name_read (dom_object * obj , zval * retval)"		3197513	0					
ANR	3197515	CompoundStatement		200:0:7337:8932	3197513	0					
ANR	3197516	IdentifierDeclStatement	xmlNode * nodep ;	201:1:7340:7354	3197513	0	True				
ANR	3197517	IdentifierDecl	* nodep		3197513	0					
ANR	3197518	IdentifierDeclType	xmlNode *		3197513	0					
ANR	3197519	Identifier	nodep		3197513	1					
ANR	3197520	IdentifierDeclStatement	xmlNsPtr ns ;	202:1:7357:7368	3197513	1	True				
ANR	3197521	IdentifierDecl	ns		3197513	0					
ANR	3197522	IdentifierDeclType	xmlNsPtr		3197513	0					
ANR	3197523	Identifier	ns		3197513	1					
ANR	3197524	IdentifierDeclStatement	char * str = NULL ;	203:1:7371:7387	3197513	2	True				
ANR	3197525	IdentifierDecl	* str = NULL		3197513	0					
ANR	3197526	IdentifierDeclType	char *		3197513	0					
ANR	3197527	Identifier	str		3197513	1					
ANR	3197528	AssignmentExpression	* str = NULL		3197513	2		=			
ANR	3197529	Identifier	NULL		3197513	0					
ANR	3197530	Identifier	NULL		3197513	1					
ANR	3197531	IdentifierDeclStatement	xmlChar * qname = NULL ;	204:1:7390:7411	3197513	3	True				
ANR	3197532	IdentifierDecl	* qname = NULL		3197513	0					
ANR	3197533	IdentifierDeclType	xmlChar *		3197513	0					
ANR	3197534	Identifier	qname		3197513	1					
ANR	3197535	AssignmentExpression	* qname = NULL		3197513	2		=			
ANR	3197536	Identifier	NULL		3197513	0					
ANR	3197537	Identifier	NULL		3197513	1					
ANR	3197538	ExpressionStatement	nodep = dom_object_get_node ( obj )	206:1:7415:7447	3197513	4	True				
ANR	3197539	AssignmentExpression	nodep = dom_object_get_node ( obj )		3197513	0		=			
ANR	3197540	Identifier	nodep		3197513	0					
ANR	3197541	CallExpression	dom_object_get_node ( obj )		3197513	1					
ANR	3197542	Callee	dom_object_get_node		3197513	0					
ANR	3197543	Identifier	dom_object_get_node		3197513	0					
ANR	3197544	ArgumentList	obj		3197513	1					
ANR	3197545	Argument	obj		3197513	0					
ANR	3197546	Identifier	obj		3197513	0					
ANR	3197547	IfStatement	if ( nodep == NULL )		3197513	5					
ANR	3197548	Condition	nodep == NULL	208:5:7455:7467	3197513	0	True				
ANR	3197549	EqualityExpression	nodep == NULL		3197513	0		==			
ANR	3197550	Identifier	nodep		3197513	0					
ANR	3197551	Identifier	NULL		3197513	1					
ANR	3197552	CompoundStatement		9:20:132:132	3197513	1					
ANR	3197553	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	209:2:7474:7515	3197513	0	True				
ANR	3197554	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3197513	0					
ANR	3197555	Callee	php_dom_throw_error		3197513	0					
ANR	3197556	Identifier	php_dom_throw_error		3197513	0					
ANR	3197557	ArgumentList	INVALID_STATE_ERR		3197513	1					
ANR	3197558	Argument	INVALID_STATE_ERR		3197513	0					
ANR	3197559	Identifier	INVALID_STATE_ERR		3197513	0					
ANR	3197560	Argument	0		3197513	1					
ANR	3197561	PrimaryExpression	0		3197513	0					
ANR	3197562	ReturnStatement	return FAILURE ;	210:2:7519:7533	3197513	1	True				
ANR	3197563	Identifier	FAILURE		3197513	0					
ANR	3197564	SwitchStatement	switch ( nodep -> type )		3197513	6					
ANR	3197565	Condition	nodep -> type	213:9:7548:7558	3197513	0	True				
ANR	3197566	PtrMemberAccess	nodep -> type		3197513	0					
ANR	3197567	Identifier	nodep		3197513	0					
ANR	3197568	Identifier	type		3197513	1					
ANR	3197569	CompoundStatement		14:22:223:223	3197513	1					
ANR	3197570	Label	case XML_ATTRIBUTE_NODE :	214:2:7565:7588	3197513	0	True				
ANR	3197571	Identifier	XML_ATTRIBUTE_NODE		3197513	0					
ANR	3197572	Label	case XML_ELEMENT_NODE :	215:2:7592:7613	3197513	1	True				
ANR	3197573	Identifier	XML_ELEMENT_NODE		3197513	0					
ANR	3197574	ExpressionStatement	ns = nodep -> ns	216:3:7618:7632	3197513	2	True				
ANR	3197575	AssignmentExpression	ns = nodep -> ns		3197513	0		=			
ANR	3197576	Identifier	ns		3197513	0					
ANR	3197577	PtrMemberAccess	nodep -> ns		3197513	1					
ANR	3197578	Identifier	nodep		3197513	0					
ANR	3197579	Identifier	ns		3197513	1					
ANR	3197580	IfStatement	if ( ns != NULL && ns -> prefix )		3197513	3					
ANR	3197581	Condition	ns != NULL && ns -> prefix	217:7:7641:7664	3197513	0	True				
ANR	3197582	AndExpression	ns != NULL && ns -> prefix		3197513	0		&&			
ANR	3197583	EqualityExpression	ns != NULL		3197513	0		!=			
ANR	3197584	Identifier	ns		3197513	0					
ANR	3197585	Identifier	NULL		3197513	1					
ANR	3197586	PtrMemberAccess	ns -> prefix		3197513	1					
ANR	3197587	Identifier	ns		3197513	0					
ANR	3197588	Identifier	prefix		3197513	1					
ANR	3197589	CompoundStatement		18:33:329:329	3197513	1					
ANR	3197590	ExpressionStatement	qname = xmlStrdup ( ns -> prefix )	218:4:7673:7702	3197513	0	True				
ANR	3197591	AssignmentExpression	qname = xmlStrdup ( ns -> prefix )		3197513	0		=			
ANR	3197592	Identifier	qname		3197513	0					
ANR	3197593	CallExpression	xmlStrdup ( ns -> prefix )		3197513	1					
ANR	3197594	Callee	xmlStrdup		3197513	0					
ANR	3197595	Identifier	xmlStrdup		3197513	0					
ANR	3197596	ArgumentList	ns -> prefix		3197513	1					
ANR	3197597	Argument	ns -> prefix		3197513	0					
ANR	3197598	PtrMemberAccess	ns -> prefix		3197513	0					
ANR	3197599	Identifier	ns		3197513	0					
ANR	3197600	Identifier	prefix		3197513	1					
ANR	3197601	ExpressionStatement	"qname = xmlStrcat ( qname , ( xmlChar * ) "":"" )"	219:4:7708:7749	3197513	1	True				
ANR	3197602	AssignmentExpression	"qname = xmlStrcat ( qname , ( xmlChar * ) "":"" )"		3197513	0		=			
ANR	3197603	Identifier	qname		3197513	0					
ANR	3197604	CallExpression	"xmlStrcat ( qname , ( xmlChar * ) "":"" )"		3197513	1					
ANR	3197605	Callee	xmlStrcat		3197513	0					
ANR	3197606	Identifier	xmlStrcat		3197513	0					
ANR	3197607	ArgumentList	qname		3197513	1					
ANR	3197608	Argument	qname		3197513	0					
ANR	3197609	Identifier	qname		3197513	0					
ANR	3197610	Argument	"( xmlChar * ) "":"""		3197513	1					
ANR	3197611	CastExpression	"( xmlChar * ) "":"""		3197513	0					
ANR	3197612	CastTarget	xmlChar *		3197513	0					
ANR	3197613	PrimaryExpression	""":"""		3197513	1					
ANR	3197614	ExpressionStatement	"qname = xmlStrcat ( qname , nodep -> name )"	220:4:7755:7792	3197513	2	True				
ANR	3197615	AssignmentExpression	"qname = xmlStrcat ( qname , nodep -> name )"		3197513	0		=			
ANR	3197616	Identifier	qname		3197513	0					
ANR	3197617	CallExpression	"xmlStrcat ( qname , nodep -> name )"		3197513	1					
ANR	3197618	Callee	xmlStrcat		3197513	0					
ANR	3197619	Identifier	xmlStrcat		3197513	0					
ANR	3197620	ArgumentList	qname		3197513	1					
ANR	3197621	Argument	qname		3197513	0					
ANR	3197622	Identifier	qname		3197513	0					
ANR	3197623	Argument	nodep -> name		3197513	1					
ANR	3197624	PtrMemberAccess	nodep -> name		3197513	0					
ANR	3197625	Identifier	nodep		3197513	0					
ANR	3197626	Identifier	name		3197513	1					
ANR	3197627	ExpressionStatement	str = ( char * ) qname	221:4:7798:7818	3197513	3	True				
ANR	3197628	AssignmentExpression	str = ( char * ) qname		3197513	0		=			
ANR	3197629	Identifier	str		3197513	0					
ANR	3197630	CastExpression	( char * ) qname		3197513	1					
ANR	3197631	CastTarget	char *		3197513	0					
ANR	3197632	Identifier	qname		3197513	1					
ANR	3197633	ElseStatement	else		3197513	0					
ANR	3197634	CompoundStatement		23:10:492:492	3197513	0					
ANR	3197635	ExpressionStatement	str = ( char * ) nodep -> name	223:4:7836:7862	3197513	0	True				
ANR	3197636	AssignmentExpression	str = ( char * ) nodep -> name		3197513	0		=			
ANR	3197637	Identifier	str		3197513	0					
ANR	3197638	CastExpression	( char * ) nodep -> name		3197513	1					
ANR	3197639	CastTarget	char *		3197513	0					
ANR	3197640	PtrMemberAccess	nodep -> name		3197513	1					
ANR	3197641	Identifier	nodep		3197513	0					
ANR	3197642	Identifier	name		3197513	1					
ANR	3197643	BreakStatement	break ;	225:3:7872:7877	3197513	4	True				
ANR	3197644	Label	case XML_NAMESPACE_DECL :	226:2:7881:7904	3197513	5	True				
ANR	3197645	Identifier	XML_NAMESPACE_DECL		3197513	0					
ANR	3197646	ExpressionStatement	ns = nodep -> ns	227:3:7909:7923	3197513	6	True				
ANR	3197647	AssignmentExpression	ns = nodep -> ns		3197513	0		=			
ANR	3197648	Identifier	ns		3197513	0					
ANR	3197649	PtrMemberAccess	nodep -> ns		3197513	1					
ANR	3197650	Identifier	nodep		3197513	0					
ANR	3197651	Identifier	ns		3197513	1					
ANR	3197652	IfStatement	if ( ns != NULL && ns -> prefix )		3197513	7					
ANR	3197653	Condition	ns != NULL && ns -> prefix	228:7:7932:7955	3197513	0	True				
ANR	3197654	AndExpression	ns != NULL && ns -> prefix		3197513	0		&&			
ANR	3197655	EqualityExpression	ns != NULL		3197513	0		!=			
ANR	3197656	Identifier	ns		3197513	0					
ANR	3197657	Identifier	NULL		3197513	1					
ANR	3197658	PtrMemberAccess	ns -> prefix		3197513	1					
ANR	3197659	Identifier	ns		3197513	0					
ANR	3197660	Identifier	prefix		3197513	1					
ANR	3197661	CompoundStatement		29:33:620:620	3197513	1					
ANR	3197662	ExpressionStatement	"qname = xmlStrdup ( ( xmlChar * ) ""xmlns"" )"	229:4:7964:8002	3197513	0	True				
ANR	3197663	AssignmentExpression	"qname = xmlStrdup ( ( xmlChar * ) ""xmlns"" )"		3197513	0		=			
ANR	3197664	Identifier	qname		3197513	0					
ANR	3197665	CallExpression	"xmlStrdup ( ( xmlChar * ) ""xmlns"" )"		3197513	1					
ANR	3197666	Callee	xmlStrdup		3197513	0					
ANR	3197667	Identifier	xmlStrdup		3197513	0					
ANR	3197668	ArgumentList	"( xmlChar * ) ""xmlns"""		3197513	1					
ANR	3197669	Argument	"( xmlChar * ) ""xmlns"""		3197513	0					
ANR	3197670	CastExpression	"( xmlChar * ) ""xmlns"""		3197513	0					
ANR	3197671	CastTarget	xmlChar *		3197513	0					
ANR	3197672	PrimaryExpression	"""xmlns"""		3197513	1					
ANR	3197673	ExpressionStatement	"qname = xmlStrcat ( qname , ( xmlChar * ) "":"" )"	230:4:8008:8049	3197513	1	True				
ANR	3197674	AssignmentExpression	"qname = xmlStrcat ( qname , ( xmlChar * ) "":"" )"		3197513	0		=			
ANR	3197675	Identifier	qname		3197513	0					
ANR	3197676	CallExpression	"xmlStrcat ( qname , ( xmlChar * ) "":"" )"		3197513	1					
ANR	3197677	Callee	xmlStrcat		3197513	0					
ANR	3197678	Identifier	xmlStrcat		3197513	0					
ANR	3197679	ArgumentList	qname		3197513	1					
ANR	3197680	Argument	qname		3197513	0					
ANR	3197681	Identifier	qname		3197513	0					
ANR	3197682	Argument	"( xmlChar * ) "":"""		3197513	1					
ANR	3197683	CastExpression	"( xmlChar * ) "":"""		3197513	0					
ANR	3197684	CastTarget	xmlChar *		3197513	0					
ANR	3197685	PrimaryExpression	""":"""		3197513	1					
ANR	3197686	ExpressionStatement	"qname = xmlStrcat ( qname , nodep -> name )"	231:4:8055:8092	3197513	2	True				
ANR	3197687	AssignmentExpression	"qname = xmlStrcat ( qname , nodep -> name )"		3197513	0		=			
ANR	3197688	Identifier	qname		3197513	0					
ANR	3197689	CallExpression	"xmlStrcat ( qname , nodep -> name )"		3197513	1					
ANR	3197690	Callee	xmlStrcat		3197513	0					
ANR	3197691	Identifier	xmlStrcat		3197513	0					
ANR	3197692	ArgumentList	qname		3197513	1					
ANR	3197693	Argument	qname		3197513	0					
ANR	3197694	Identifier	qname		3197513	0					
ANR	3197695	Argument	nodep -> name		3197513	1					
ANR	3197696	PtrMemberAccess	nodep -> name		3197513	0					
ANR	3197697	Identifier	nodep		3197513	0					
ANR	3197698	Identifier	name		3197513	1					
ANR	3197699	ExpressionStatement	str = ( char * ) qname	232:4:8098:8118	3197513	3	True				
ANR	3197700	AssignmentExpression	str = ( char * ) qname		3197513	0		=			
ANR	3197701	Identifier	str		3197513	0					
ANR	3197702	CastExpression	( char * ) qname		3197513	1					
ANR	3197703	CastTarget	char *		3197513	0					
ANR	3197704	Identifier	qname		3197513	1					
ANR	3197705	ElseStatement	else		3197513	0					
ANR	3197706	CompoundStatement		34:10:792:792	3197513	0					
ANR	3197707	ExpressionStatement	str = ( char * ) nodep -> name	234:4:8136:8162	3197513	0	True				
ANR	3197708	AssignmentExpression	str = ( char * ) nodep -> name		3197513	0		=			
ANR	3197709	Identifier	str		3197513	0					
ANR	3197710	CastExpression	( char * ) nodep -> name		3197513	1					
ANR	3197711	CastTarget	char *		3197513	0					
ANR	3197712	PtrMemberAccess	nodep -> name		3197513	1					
ANR	3197713	Identifier	nodep		3197513	0					
ANR	3197714	Identifier	name		3197513	1					
ANR	3197715	BreakStatement	break ;	236:3:8172:8177	3197513	8	True				
ANR	3197716	Label	case XML_DOCUMENT_TYPE_NODE :	237:2:8181:8208	3197513	9	True				
ANR	3197717	Identifier	XML_DOCUMENT_TYPE_NODE		3197513	0					
ANR	3197718	Label	case XML_DTD_NODE :	238:2:8212:8229	3197513	10	True				
ANR	3197719	Identifier	XML_DTD_NODE		3197513	0					
ANR	3197720	Label	case XML_PI_NODE :	239:2:8233:8249	3197513	11	True				
ANR	3197721	Identifier	XML_PI_NODE		3197513	0					
ANR	3197722	Label	case XML_ENTITY_DECL :	240:2:8253:8273	3197513	12	True				
ANR	3197723	Identifier	XML_ENTITY_DECL		3197513	0					
ANR	3197724	Label	case XML_ENTITY_REF_NODE :	241:2:8277:8301	3197513	13	True				
ANR	3197725	Identifier	XML_ENTITY_REF_NODE		3197513	0					
ANR	3197726	Label	case XML_NOTATION_NODE :	242:2:8305:8327	3197513	14	True				
ANR	3197727	Identifier	XML_NOTATION_NODE		3197513	0					
ANR	3197728	ExpressionStatement	str = ( char * ) nodep -> name	243:3:8332:8358	3197513	15	True				
ANR	3197729	AssignmentExpression	str = ( char * ) nodep -> name		3197513	0		=			
ANR	3197730	Identifier	str		3197513	0					
ANR	3197731	CastExpression	( char * ) nodep -> name		3197513	1					
ANR	3197732	CastTarget	char *		3197513	0					
ANR	3197733	PtrMemberAccess	nodep -> name		3197513	1					
ANR	3197734	Identifier	nodep		3197513	0					
ANR	3197735	Identifier	name		3197513	1					
ANR	3197736	BreakStatement	break ;	244:3:8363:8368	3197513	16	True				
ANR	3197737	Label	case XML_CDATA_SECTION_NODE :	245:2:8372:8399	3197513	17	True				
ANR	3197738	Identifier	XML_CDATA_SECTION_NODE		3197513	0					
ANR	3197739	ExpressionStatement	"str = ""#cdata-section"""	246:3:8404:8426	3197513	18	True				
ANR	3197740	AssignmentExpression	"str = ""#cdata-section"""		3197513	0		=			
ANR	3197741	Identifier	str		3197513	0					
ANR	3197742	PrimaryExpression	"""#cdata-section"""		3197513	1					
ANR	3197743	BreakStatement	break ;	247:3:8431:8436	3197513	19	True				
ANR	3197744	Label	case XML_COMMENT_NODE :	248:2:8440:8461	3197513	20	True				
ANR	3197745	Identifier	XML_COMMENT_NODE		3197513	0					
ANR	3197746	ExpressionStatement	"str = ""#comment"""	249:3:8466:8482	3197513	21	True				
ANR	3197747	AssignmentExpression	"str = ""#comment"""		3197513	0		=			
ANR	3197748	Identifier	str		3197513	0					
ANR	3197749	PrimaryExpression	"""#comment"""		3197513	1					
ANR	3197750	BreakStatement	break ;	250:3:8487:8492	3197513	22	True				
ANR	3197751	Label	case XML_HTML_DOCUMENT_NODE :	251:2:8496:8523	3197513	23	True				
ANR	3197752	Identifier	XML_HTML_DOCUMENT_NODE		3197513	0					
ANR	3197753	Label	case XML_DOCUMENT_NODE :	252:2:8527:8549	3197513	24	True				
ANR	3197754	Identifier	XML_DOCUMENT_NODE		3197513	0					
ANR	3197755	ExpressionStatement	"str = ""#document"""	253:3:8554:8571	3197513	25	True				
ANR	3197756	AssignmentExpression	"str = ""#document"""		3197513	0		=			
ANR	3197757	Identifier	str		3197513	0					
ANR	3197758	PrimaryExpression	"""#document"""		3197513	1					
ANR	3197759	BreakStatement	break ;	254:3:8576:8581	3197513	26	True				
ANR	3197760	Label	case XML_DOCUMENT_FRAG_NODE :	255:2:8585:8612	3197513	27	True				
ANR	3197761	Identifier	XML_DOCUMENT_FRAG_NODE		3197513	0					
ANR	3197762	ExpressionStatement	"str = ""#document-fragment"""	256:3:8617:8643	3197513	28	True				
ANR	3197763	AssignmentExpression	"str = ""#document-fragment"""		3197513	0		=			
ANR	3197764	Identifier	str		3197513	0					
ANR	3197765	PrimaryExpression	"""#document-fragment"""		3197513	1					
ANR	3197766	BreakStatement	break ;	257:3:8648:8653	3197513	29	True				
ANR	3197767	Label	case XML_TEXT_NODE :	258:2:8657:8675	3197513	30	True				
ANR	3197768	Identifier	XML_TEXT_NODE		3197513	0					
ANR	3197769	ExpressionStatement	"str = ""#text"""	259:3:8680:8693	3197513	31	True				
ANR	3197770	AssignmentExpression	"str = ""#text"""		3197513	0		=			
ANR	3197771	Identifier	str		3197513	0					
ANR	3197772	PrimaryExpression	"""#text"""		3197513	1					
ANR	3197773	BreakStatement	break ;	260:3:8698:8703	3197513	32	True				
ANR	3197774	Label	default :	261:2:8707:8714	3197513	33	True				
ANR	3197775	Identifier	default		3197513	0					
ANR	3197776	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Invalid Node Type"" )"	262:3:8719:8773	3197513	34	True				
ANR	3197777	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Invalid Node Type"" )"		3197513	0					
ANR	3197778	Callee	php_error_docref		3197513	0					
ANR	3197779	Identifier	php_error_docref		3197513	0					
ANR	3197780	ArgumentList	NULL		3197513	1					
ANR	3197781	Argument	NULL		3197513	0					
ANR	3197782	Identifier	NULL		3197513	0					
ANR	3197783	Argument	E_WARNING		3197513	1					
ANR	3197784	Identifier	E_WARNING		3197513	0					
ANR	3197785	Argument	"""Invalid Node Type"""		3197513	2					
ANR	3197786	PrimaryExpression	"""Invalid Node Type"""		3197513	0					
ANR	3197787	IfStatement	if ( str != NULL )		3197513	7					
ANR	3197788	Condition	str != NULL	265:5:8784:8794	3197513	0	True				
ANR	3197789	EqualityExpression	str != NULL		3197513	0		!=			
ANR	3197790	Identifier	str		3197513	0					
ANR	3197791	Identifier	NULL		3197513	1					
ANR	3197792	CompoundStatement		66:18:1459:1459	3197513	1					
ANR	3197793	ExpressionStatement	"ZVAL_STRING ( retval , str )"	266:2:8801:8825	3197513	0	True				
ANR	3197794	CallExpression	"ZVAL_STRING ( retval , str )"		3197513	0					
ANR	3197795	Callee	ZVAL_STRING		3197513	0					
ANR	3197796	Identifier	ZVAL_STRING		3197513	0					
ANR	3197797	ArgumentList	retval		3197513	1					
ANR	3197798	Argument	retval		3197513	0					
ANR	3197799	Identifier	retval		3197513	0					
ANR	3197800	Argument	str		3197513	1					
ANR	3197801	Identifier	str		3197513	0					
ANR	3197802	ElseStatement	else		3197513	0					
ANR	3197803	CompoundStatement		68:8:1497:1497	3197513	0					
ANR	3197804	ExpressionStatement	ZVAL_EMPTY_STRING ( retval )	268:2:8839:8864	3197513	0	True				
ANR	3197805	CallExpression	ZVAL_EMPTY_STRING ( retval )		3197513	0					
ANR	3197806	Callee	ZVAL_EMPTY_STRING		3197513	0					
ANR	3197807	Identifier	ZVAL_EMPTY_STRING		3197513	0					
ANR	3197808	ArgumentList	retval		3197513	1					
ANR	3197809	Argument	retval		3197513	0					
ANR	3197810	Identifier	retval		3197513	0					
ANR	3197811	IfStatement	if ( qname != NULL )		3197513	8					
ANR	3197812	Condition	qname != NULL	271:5:8875:8887	3197513	0	True				
ANR	3197813	EqualityExpression	qname != NULL		3197513	0		!=			
ANR	3197814	Identifier	qname		3197513	0					
ANR	3197815	Identifier	NULL		3197513	1					
ANR	3197816	CompoundStatement		72:20:1552:1552	3197513	1					
ANR	3197817	ExpressionStatement	xmlFree ( qname )	272:2:8894:8908	3197513	0	True				
ANR	3197818	CallExpression	xmlFree ( qname )		3197513	0					
ANR	3197819	Callee	xmlFree		3197513	0					
ANR	3197820	Identifier	xmlFree		3197513	0					
ANR	3197821	ArgumentList	qname		3197513	1					
ANR	3197822	Argument	qname		3197513	0					
ANR	3197823	Identifier	qname		3197513	0					
ANR	3197824	ReturnStatement	return SUCCESS ;	275:1:8915:8929	3197513	9	True				
ANR	3197825	Identifier	SUCCESS		3197513	0					
ANR	3197826	ReturnType	int		3197513	1					
ANR	3197827	Identifier	dom_node_node_name_read		3197513	2					
ANR	3197828	ParameterList	"dom_object * obj , zval * retval"		3197513	3					
ANR	3197829	Parameter	dom_object * obj	199:28:7306:7320	3197513	0	True				
ANR	3197830	ParameterType	dom_object *		3197513	0					
ANR	3197831	Identifier	obj		3197513	1					
ANR	3197832	Parameter	zval * retval	199:45:7323:7334	3197513	1	True				
ANR	3197833	ParameterType	zval *		3197513	0					
ANR	3197834	Identifier	retval		3197513	1					
ANR	3197835	CFGEntryNode	ENTRY		3197513		True				
ANR	3197836	CFGExitNode	EXIT		3197513		True				
ANR	3197837	Symbol	nodep -> type		3197513						
ANR	3197838	Symbol	INVALID_STATE_ERR		3197513						
ANR	3197839	Symbol	NULL		3197513						
ANR	3197840	Symbol	SUCCESS		3197513						
ANR	3197841	Symbol	ns		3197513						
ANR	3197842	Symbol	* ns		3197513						
ANR	3197843	Symbol	xmlStrdup		3197513						
ANR	3197844	Symbol	nodep		3197513						
ANR	3197845	Symbol	FAILURE		3197513						
ANR	3197846	Symbol	ns -> prefix		3197513						
ANR	3197847	Symbol	retval		3197513						
ANR	3197848	Symbol	str		3197513						
ANR	3197849	Symbol	E_WARNING		3197513						
ANR	3197850	Symbol	xmlStrcat		3197513						
ANR	3197851	Symbol	obj		3197513						
ANR	3197852	Symbol	qname		3197513						
ANR	3197853	Symbol	nodep -> ns		3197513						
ANR	3197854	Symbol	* nodep		3197513						
ANR	3197855	Symbol	nodep -> name		3197513						
ANR	3197856	Symbol	dom_object_get_node		3197513						
ANR	3197857	Function	dom_node_node_value_read	286:0:9083:9840							
ANR	3197858	FunctionDef	"dom_node_node_value_read (dom_object * obj , zval * retval)"		3197857	0					
ANR	3197859	CompoundStatement		287:0:9143:9840	3197857	0					
ANR	3197860	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	288:1:9146:9187	3197857	0	True				
ANR	3197861	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3197857	0					
ANR	3197862	IdentifierDeclType	xmlNode *		3197857	0					
ANR	3197863	Identifier	nodep		3197857	1					
ANR	3197864	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3197857	2		=			
ANR	3197865	Identifier	nodep		3197857	0					
ANR	3197866	CallExpression	dom_object_get_node ( obj )		3197857	1					
ANR	3197867	Callee	dom_object_get_node		3197857	0					
ANR	3197868	Identifier	dom_object_get_node		3197857	0					
ANR	3197869	ArgumentList	obj		3197857	1					
ANR	3197870	Argument	obj		3197857	0					
ANR	3197871	Identifier	obj		3197857	0					
ANR	3197872	IdentifierDeclStatement	char * str = NULL ;	289:1:9190:9206	3197857	1	True				
ANR	3197873	IdentifierDecl	* str = NULL		3197857	0					
ANR	3197874	IdentifierDeclType	char *		3197857	0					
ANR	3197875	Identifier	str		3197857	1					
ANR	3197876	AssignmentExpression	* str = NULL		3197857	2		=			
ANR	3197877	Identifier	NULL		3197857	0					
ANR	3197878	Identifier	NULL		3197857	1					
ANR	3197879	IfStatement	if ( nodep == NULL )		3197857	2					
ANR	3197880	Condition	nodep == NULL	291:5:9214:9226	3197857	0	True				
ANR	3197881	EqualityExpression	nodep == NULL		3197857	0		==			
ANR	3197882	Identifier	nodep		3197857	0					
ANR	3197883	Identifier	NULL		3197857	1					
ANR	3197884	CompoundStatement		5:20:85:85	3197857	1					
ANR	3197885	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	292:2:9233:9274	3197857	0	True				
ANR	3197886	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3197857	0					
ANR	3197887	Callee	php_dom_throw_error		3197857	0					
ANR	3197888	Identifier	php_dom_throw_error		3197857	0					
ANR	3197889	ArgumentList	INVALID_STATE_ERR		3197857	1					
ANR	3197890	Argument	INVALID_STATE_ERR		3197857	0					
ANR	3197891	Identifier	INVALID_STATE_ERR		3197857	0					
ANR	3197892	Argument	0		3197857	1					
ANR	3197893	PrimaryExpression	0		3197857	0					
ANR	3197894	ReturnStatement	return FAILURE ;	293:2:9278:9292	3197857	1	True				
ANR	3197895	Identifier	FAILURE		3197857	0					
ANR	3197896	SwitchStatement	switch ( nodep -> type )		3197857	3					
ANR	3197897	Condition	nodep -> type	297:9:9374:9384	3197857	0	True				
ANR	3197898	PtrMemberAccess	nodep -> type		3197857	0					
ANR	3197899	Identifier	nodep		3197857	0					
ANR	3197900	Identifier	type		3197857	1					
ANR	3197901	CompoundStatement		11:22:243:243	3197857	1					
ANR	3197902	Label	case XML_ATTRIBUTE_NODE :	298:2:9391:9414	3197857	0	True				
ANR	3197903	Identifier	XML_ATTRIBUTE_NODE		3197857	0					
ANR	3197904	Label	case XML_TEXT_NODE :	299:2:9418:9436	3197857	1	True				
ANR	3197905	Identifier	XML_TEXT_NODE		3197857	0					
ANR	3197906	Label	case XML_ELEMENT_NODE :	300:2:9440:9461	3197857	2	True				
ANR	3197907	Identifier	XML_ELEMENT_NODE		3197857	0					
ANR	3197908	Label	case XML_COMMENT_NODE :	301:2:9465:9486	3197857	3	True				
ANR	3197909	Identifier	XML_COMMENT_NODE		3197857	0					
ANR	3197910	Label	case XML_CDATA_SECTION_NODE :	302:2:9490:9517	3197857	4	True				
ANR	3197911	Identifier	XML_CDATA_SECTION_NODE		3197857	0					
ANR	3197912	Label	case XML_PI_NODE :	303:2:9521:9537	3197857	5	True				
ANR	3197913	Identifier	XML_PI_NODE		3197857	0					
ANR	3197914	ExpressionStatement	str = ( char * ) xmlNodeGetContent ( nodep )	304:3:9542:9581	3197857	6	True				
ANR	3197915	AssignmentExpression	str = ( char * ) xmlNodeGetContent ( nodep )		3197857	0		=			
ANR	3197916	Identifier	str		3197857	0					
ANR	3197917	CastExpression	( char * ) xmlNodeGetContent ( nodep )		3197857	1					
ANR	3197918	CastTarget	char *		3197857	0					
ANR	3197919	CallExpression	xmlNodeGetContent ( nodep )		3197857	1					
ANR	3197920	Callee	xmlNodeGetContent		3197857	0					
ANR	3197921	Identifier	xmlNodeGetContent		3197857	0					
ANR	3197922	ArgumentList	nodep		3197857	1					
ANR	3197923	Argument	nodep		3197857	0					
ANR	3197924	Identifier	nodep		3197857	0					
ANR	3197925	BreakStatement	break ;	305:3:9586:9591	3197857	7	True				
ANR	3197926	Label	case XML_NAMESPACE_DECL :	306:2:9595:9618	3197857	8	True				
ANR	3197927	Identifier	XML_NAMESPACE_DECL		3197857	0					
ANR	3197928	ExpressionStatement	str = ( char * ) xmlNodeGetContent ( nodep -> children )	307:3:9623:9672	3197857	9	True				
ANR	3197929	AssignmentExpression	str = ( char * ) xmlNodeGetContent ( nodep -> children )		3197857	0		=			
ANR	3197930	Identifier	str		3197857	0					
ANR	3197931	CastExpression	( char * ) xmlNodeGetContent ( nodep -> children )		3197857	1					
ANR	3197932	CastTarget	char *		3197857	0					
ANR	3197933	CallExpression	xmlNodeGetContent ( nodep -> children )		3197857	1					
ANR	3197934	Callee	xmlNodeGetContent		3197857	0					
ANR	3197935	Identifier	xmlNodeGetContent		3197857	0					
ANR	3197936	ArgumentList	nodep -> children		3197857	1					
ANR	3197937	Argument	nodep -> children		3197857	0					
ANR	3197938	PtrMemberAccess	nodep -> children		3197857	0					
ANR	3197939	Identifier	nodep		3197857	0					
ANR	3197940	Identifier	children		3197857	1					
ANR	3197941	BreakStatement	break ;	308:3:9677:9682	3197857	10	True				
ANR	3197942	Label	default :	309:2:9686:9693	3197857	11	True				
ANR	3197943	Identifier	default		3197857	0					
ANR	3197944	ExpressionStatement	str = NULL	310:3:9698:9708	3197857	12	True				
ANR	3197945	AssignmentExpression	str = NULL		3197857	0		=			
ANR	3197946	Identifier	str		3197857	0					
ANR	3197947	Identifier	NULL		3197857	1					
ANR	3197948	BreakStatement	break ;	311:3:9713:9718	3197857	13	True				
ANR	3197949	IfStatement	if ( str != NULL )		3197857	4					
ANR	3197950	Condition	str != NULL	314:4:9728:9738	3197857	0	True				
ANR	3197951	EqualityExpression	str != NULL		3197857	0		!=			
ANR	3197952	Identifier	str		3197857	0					
ANR	3197953	Identifier	NULL		3197857	1					
ANR	3197954	CompoundStatement		28:17:597:597	3197857	1					
ANR	3197955	ExpressionStatement	"ZVAL_STRING ( retval , str )"	315:2:9745:9769	3197857	0	True				
ANR	3197956	CallExpression	"ZVAL_STRING ( retval , str )"		3197857	0					
ANR	3197957	Callee	ZVAL_STRING		3197857	0					
ANR	3197958	Identifier	ZVAL_STRING		3197857	0					
ANR	3197959	ArgumentList	retval		3197857	1					
ANR	3197960	Argument	retval		3197857	0					
ANR	3197961	Identifier	retval		3197857	0					
ANR	3197962	Argument	str		3197857	1					
ANR	3197963	Identifier	str		3197857	0					
ANR	3197964	ExpressionStatement	xmlFree ( str )	316:2:9773:9785	3197857	1	True				
ANR	3197965	CallExpression	xmlFree ( str )		3197857	0					
ANR	3197966	Callee	xmlFree		3197857	0					
ANR	3197967	Identifier	xmlFree		3197857	0					
ANR	3197968	ArgumentList	str		3197857	1					
ANR	3197969	Argument	str		3197857	0					
ANR	3197970	Identifier	str		3197857	0					
ANR	3197971	ElseStatement	else		3197857	0					
ANR	3197972	CompoundStatement		31:8:651:651	3197857	0					
ANR	3197973	ExpressionStatement	ZVAL_NULL ( retval )	318:2:9799:9816	3197857	0	True				
ANR	3197974	CallExpression	ZVAL_NULL ( retval )		3197857	0					
ANR	3197975	Callee	ZVAL_NULL		3197857	0					
ANR	3197976	Identifier	ZVAL_NULL		3197857	0					
ANR	3197977	ArgumentList	retval		3197857	1					
ANR	3197978	Argument	retval		3197857	0					
ANR	3197979	Identifier	retval		3197857	0					
ANR	3197980	ReturnStatement	return SUCCESS ;	321:1:9823:9837	3197857	5	True				
ANR	3197981	Identifier	SUCCESS		3197857	0					
ANR	3197982	ReturnType	int		3197857	1					
ANR	3197983	Identifier	dom_node_node_value_read		3197857	2					
ANR	3197984	ParameterList	"dom_object * obj , zval * retval"		3197857	3					
ANR	3197985	Parameter	dom_object * obj	286:29:9112:9126	3197857	0	True				
ANR	3197986	ParameterType	dom_object *		3197857	0					
ANR	3197987	Identifier	obj		3197857	1					
ANR	3197988	Parameter	zval * retval	286:46:9129:9140	3197857	1	True				
ANR	3197989	ParameterType	zval *		3197857	0					
ANR	3197990	Identifier	retval		3197857	1					
ANR	3197991	CFGEntryNode	ENTRY		3197857		True				
ANR	3197992	CFGExitNode	EXIT		3197857		True				
ANR	3197993	Symbol	nodep -> type		3197857						
ANR	3197994	Symbol	INVALID_STATE_ERR		3197857						
ANR	3197995	Symbol	NULL		3197857						
ANR	3197996	Symbol	SUCCESS		3197857						
ANR	3197997	Symbol	nodep		3197857						
ANR	3197998	Symbol	FAILURE		3197857						
ANR	3197999	Symbol	retval		3197857						
ANR	3198000	Symbol	str		3197857						
ANR	3198001	Symbol	nodep -> children		3197857						
ANR	3198002	Symbol	obj		3197857						
ANR	3198003	Symbol	xmlNodeGetContent		3197857						
ANR	3198004	Symbol	* nodep		3197857						
ANR	3198005	Symbol	dom_object_get_node		3197857						
ANR	3198006	Function	dom_node_node_value_write	325:0:9843:10571							
ANR	3198007	FunctionDef	"dom_node_node_value_write (dom_object * obj , zval * newval)"		3198006	0					
ANR	3198008	CompoundStatement		326:0:9904:10571	3198006	0					
ANR	3198009	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	327:1:9907:9948	3198006	0	True				
ANR	3198010	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3198006	0					
ANR	3198011	IdentifierDeclType	xmlNode *		3198006	0					
ANR	3198012	Identifier	nodep		3198006	1					
ANR	3198013	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3198006	2		=			
ANR	3198014	Identifier	nodep		3198006	0					
ANR	3198015	CallExpression	dom_object_get_node ( obj )		3198006	1					
ANR	3198016	Callee	dom_object_get_node		3198006	0					
ANR	3198017	Identifier	dom_object_get_node		3198006	0					
ANR	3198018	ArgumentList	obj		3198006	1					
ANR	3198019	Argument	obj		3198006	0					
ANR	3198020	Identifier	obj		3198006	0					
ANR	3198021	IfStatement	if ( nodep == NULL )		3198006	1					
ANR	3198022	Condition	nodep == NULL	329:5:9956:9968	3198006	0	True				
ANR	3198023	EqualityExpression	nodep == NULL		3198006	0		==			
ANR	3198024	Identifier	nodep		3198006	0					
ANR	3198025	Identifier	NULL		3198006	1					
ANR	3198026	CompoundStatement		4:20:66:66	3198006	1					
ANR	3198027	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	330:2:9975:10016	3198006	0	True				
ANR	3198028	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198006	0					
ANR	3198029	Callee	php_dom_throw_error		3198006	0					
ANR	3198030	Identifier	php_dom_throw_error		3198006	0					
ANR	3198031	ArgumentList	INVALID_STATE_ERR		3198006	1					
ANR	3198032	Argument	INVALID_STATE_ERR		3198006	0					
ANR	3198033	Identifier	INVALID_STATE_ERR		3198006	0					
ANR	3198034	Argument	0		3198006	1					
ANR	3198035	PrimaryExpression	0		3198006	0					
ANR	3198036	ReturnStatement	return FAILURE ;	331:2:10020:10034	3198006	1	True				
ANR	3198037	Identifier	FAILURE		3198006	0					
ANR	3198038	SwitchStatement	switch ( nodep -> type )		3198006	2					
ANR	3198039	Condition	nodep -> type	335:9:10116:10126	3198006	0	True				
ANR	3198040	PtrMemberAccess	nodep -> type		3198006	0					
ANR	3198041	Identifier	nodep		3198006	0					
ANR	3198042	Identifier	type		3198006	1					
ANR	3198043	CompoundStatement		10:22:224:224	3198006	1					
ANR	3198044	Label	case XML_ELEMENT_NODE :	336:2:10133:10154	3198006	0	True				
ANR	3198045	Identifier	XML_ELEMENT_NODE		3198006	0					
ANR	3198046	Label	case XML_ATTRIBUTE_NODE :	337:2:10158:10181	3198006	1	True				
ANR	3198047	Identifier	XML_ATTRIBUTE_NODE		3198006	0					
ANR	3198048	IfStatement	if ( nodep -> children )		3198006	2					
ANR	3198049	Condition	nodep -> children	338:7:10190:10204	3198006	0	True				
ANR	3198050	PtrMemberAccess	nodep -> children		3198006	0					
ANR	3198051	Identifier	nodep		3198006	0					
ANR	3198052	Identifier	children		3198006	1					
ANR	3198053	CompoundStatement		13:24:302:302	3198006	1					
ANR	3198054	ExpressionStatement	node_list_unlink ( nodep -> children )	339:4:10213:10246	3198006	0	True				
ANR	3198055	CallExpression	node_list_unlink ( nodep -> children )		3198006	0					
ANR	3198056	Callee	node_list_unlink		3198006	0					
ANR	3198057	Identifier	node_list_unlink		3198006	0					
ANR	3198058	ArgumentList	nodep -> children		3198006	1					
ANR	3198059	Argument	nodep -> children		3198006	0					
ANR	3198060	PtrMemberAccess	nodep -> children		3198006	0					
ANR	3198061	Identifier	nodep		3198006	0					
ANR	3198062	Identifier	children		3198006	1					
ANR	3198063	Label	case XML_TEXT_NODE :	341:2:10255:10273	3198006	3	True				
ANR	3198064	Identifier	XML_TEXT_NODE		3198006	0					
ANR	3198065	Label	case XML_COMMENT_NODE :	342:2:10277:10298	3198006	4	True				
ANR	3198066	Identifier	XML_COMMENT_NODE		3198006	0					
ANR	3198067	Label	case XML_CDATA_SECTION_NODE :	343:2:10302:10329	3198006	5	True				
ANR	3198068	Identifier	XML_CDATA_SECTION_NODE		3198006	0					
ANR	3198069	Label	case XML_PI_NODE :	344:2:10333:10349	3198006	6	True				
ANR	3198070	Identifier	XML_PI_NODE		3198006	0					
ANR	3198071	CompoundStatement		21:4:455:497	3198006	7					
ANR	3198072	IdentifierDeclStatement	zend_string * str = zval_get_string ( newval ) ;	346:4:10360:10402	3198006	0	True				
ANR	3198073	IdentifierDecl	* str = zval_get_string ( newval )		3198006	0					
ANR	3198074	IdentifierDeclType	zend_string *		3198006	0					
ANR	3198075	Identifier	str		3198006	1					
ANR	3198076	AssignmentExpression	* str = zval_get_string ( newval )		3198006	2		=			
ANR	3198077	Identifier	str		3198006	0					
ANR	3198078	CallExpression	zval_get_string ( newval )		3198006	1					
ANR	3198079	Callee	zval_get_string		3198006	0					
ANR	3198080	Identifier	zval_get_string		3198006	0					
ANR	3198081	ArgumentList	newval		3198006	1					
ANR	3198082	Argument	newval		3198006	0					
ANR	3198083	Identifier	newval		3198006	0					
ANR	3198084	ExpressionStatement	"xmlNodeSetContentLen ( nodep , ( xmlChar * ) ZSTR_VAL ( str ) , ZSTR_LEN ( str ) + 1 )"	347:4:10408:10481	3198006	1	True				
ANR	3198085	CallExpression	"xmlNodeSetContentLen ( nodep , ( xmlChar * ) ZSTR_VAL ( str ) , ZSTR_LEN ( str ) + 1 )"		3198006	0					
ANR	3198086	Callee	xmlNodeSetContentLen		3198006	0					
ANR	3198087	Identifier	xmlNodeSetContentLen		3198006	0					
ANR	3198088	ArgumentList	nodep		3198006	1					
ANR	3198089	Argument	nodep		3198006	0					
ANR	3198090	Identifier	nodep		3198006	0					
ANR	3198091	Argument	( xmlChar * ) ZSTR_VAL ( str )		3198006	1					
ANR	3198092	CastExpression	( xmlChar * ) ZSTR_VAL ( str )		3198006	0					
ANR	3198093	CastTarget	xmlChar *		3198006	0					
ANR	3198094	CallExpression	ZSTR_VAL ( str )		3198006	1					
ANR	3198095	Callee	ZSTR_VAL		3198006	0					
ANR	3198096	Identifier	ZSTR_VAL		3198006	0					
ANR	3198097	ArgumentList	str		3198006	1					
ANR	3198098	Argument	str		3198006	0					
ANR	3198099	Identifier	str		3198006	0					
ANR	3198100	Argument	ZSTR_LEN ( str ) + 1		3198006	2					
ANR	3198101	AdditiveExpression	ZSTR_LEN ( str ) + 1		3198006	0		+			
ANR	3198102	CallExpression	ZSTR_LEN ( str )		3198006	0					
ANR	3198103	Callee	ZSTR_LEN		3198006	0					
ANR	3198104	Identifier	ZSTR_LEN		3198006	0					
ANR	3198105	ArgumentList	str		3198006	1					
ANR	3198106	Argument	str		3198006	0					
ANR	3198107	Identifier	str		3198006	0					
ANR	3198108	PrimaryExpression	1		3198006	1					
ANR	3198109	ExpressionStatement	zend_string_release ( str )	348:4:10487:10511	3198006	2	True				
ANR	3198110	CallExpression	zend_string_release ( str )		3198006	0					
ANR	3198111	Callee	zend_string_release		3198006	0					
ANR	3198112	Identifier	zend_string_release		3198006	0					
ANR	3198113	ArgumentList	str		3198006	1					
ANR	3198114	Argument	str		3198006	0					
ANR	3198115	Identifier	str		3198006	0					
ANR	3198116	BreakStatement	break ;	349:4:10517:10522	3198006	3	True				
ANR	3198117	Label	default :	351:2:10531:10538	3198006	8	True				
ANR	3198118	Identifier	default		3198006	0					
ANR	3198119	BreakStatement	break ;	352:3:10543:10548	3198006	9	True				
ANR	3198120	ReturnStatement	return SUCCESS ;	355:1:10555:10569	3198006	3	True				
ANR	3198121	Identifier	SUCCESS		3198006	0					
ANR	3198122	ReturnType	int		3198006	1					
ANR	3198123	Identifier	dom_node_node_value_write		3198006	2					
ANR	3198124	ParameterList	"dom_object * obj , zval * newval"		3198006	3					
ANR	3198125	Parameter	dom_object * obj	325:30:9873:9887	3198006	0	True				
ANR	3198126	ParameterType	dom_object *		3198006	0					
ANR	3198127	Identifier	obj		3198006	1					
ANR	3198128	Parameter	zval * newval	325:47:9890:9901	3198006	1	True				
ANR	3198129	ParameterType	zval *		3198006	0					
ANR	3198130	Identifier	newval		3198006	1					
ANR	3198131	CFGEntryNode	ENTRY		3198006		True				
ANR	3198132	CFGExitNode	EXIT		3198006		True				
ANR	3198133	Symbol	nodep -> type		3198006						
ANR	3198134	Symbol	INVALID_STATE_ERR		3198006						
ANR	3198135	Symbol	NULL		3198006						
ANR	3198136	Symbol	SUCCESS		3198006						
ANR	3198137	Symbol	zval_get_string		3198006						
ANR	3198138	Symbol	nodep		3198006						
ANR	3198139	Symbol	FAILURE		3198006						
ANR	3198140	Symbol	ZSTR_VAL		3198006						
ANR	3198141	Symbol	str		3198006						
ANR	3198142	Symbol	nodep -> children		3198006						
ANR	3198143	Symbol	obj		3198006						
ANR	3198144	Symbol	ZSTR_LEN		3198006						
ANR	3198145	Symbol	* nodep		3198006						
ANR	3198146	Symbol	newval		3198006						
ANR	3198147	Symbol	dom_object_get_node		3198006						
ANR	3198148	Function	dom_node_node_type_read	365:0:10721:11139							
ANR	3198149	FunctionDef	"dom_node_node_type_read (dom_object * obj , zval * retval)"		3198148	0					
ANR	3198150	CompoundStatement		366:0:10780:11139	3198148	0					
ANR	3198151	IdentifierDeclStatement	xmlNode * nodep ;	367:1:10783:10797	3198148	0	True				
ANR	3198152	IdentifierDecl	* nodep		3198148	0					
ANR	3198153	IdentifierDeclType	xmlNode *		3198148	0					
ANR	3198154	Identifier	nodep		3198148	1					
ANR	3198155	ExpressionStatement	nodep = dom_object_get_node ( obj )	369:1:10801:10833	3198148	1	True				
ANR	3198156	AssignmentExpression	nodep = dom_object_get_node ( obj )		3198148	0		=			
ANR	3198157	Identifier	nodep		3198148	0					
ANR	3198158	CallExpression	dom_object_get_node ( obj )		3198148	1					
ANR	3198159	Callee	dom_object_get_node		3198148	0					
ANR	3198160	Identifier	dom_object_get_node		3198148	0					
ANR	3198161	ArgumentList	obj		3198148	1					
ANR	3198162	Argument	obj		3198148	0					
ANR	3198163	Identifier	obj		3198148	0					
ANR	3198164	IfStatement	if ( nodep == NULL )		3198148	2					
ANR	3198165	Condition	nodep == NULL	371:5:10841:10853	3198148	0	True				
ANR	3198166	EqualityExpression	nodep == NULL		3198148	0		==			
ANR	3198167	Identifier	nodep		3198148	0					
ANR	3198168	Identifier	NULL		3198148	1					
ANR	3198169	CompoundStatement		6:20:75:75	3198148	1					
ANR	3198170	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	372:2:10860:10901	3198148	0	True				
ANR	3198171	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198148	0					
ANR	3198172	Callee	php_dom_throw_error		3198148	0					
ANR	3198173	Identifier	php_dom_throw_error		3198148	0					
ANR	3198174	ArgumentList	INVALID_STATE_ERR		3198148	1					
ANR	3198175	Argument	INVALID_STATE_ERR		3198148	0					
ANR	3198176	Identifier	INVALID_STATE_ERR		3198148	0					
ANR	3198177	Argument	0		3198148	1					
ANR	3198178	PrimaryExpression	0		3198148	0					
ANR	3198179	ReturnStatement	return FAILURE ;	373:2:10905:10919	3198148	1	True				
ANR	3198180	Identifier	FAILURE		3198148	0					
ANR	3198181	IfStatement	if ( nodep -> type == XML_DTD_NODE )		3198148	3					
ANR	3198182	Condition	nodep -> type == XML_DTD_NODE	377:5:10998:11024	3198148	0	True				
ANR	3198183	EqualityExpression	nodep -> type == XML_DTD_NODE		3198148	0		==			
ANR	3198184	PtrMemberAccess	nodep -> type		3198148	0					
ANR	3198185	Identifier	nodep		3198148	0					
ANR	3198186	Identifier	type		3198148	1					
ANR	3198187	Identifier	XML_DTD_NODE		3198148	1					
ANR	3198188	CompoundStatement		12:34:246:246	3198148	1					
ANR	3198189	ExpressionStatement	"ZVAL_LONG ( retval , XML_DOCUMENT_TYPE_NODE )"	378:2:11031:11072	3198148	0	True				
ANR	3198190	CallExpression	"ZVAL_LONG ( retval , XML_DOCUMENT_TYPE_NODE )"		3198148	0					
ANR	3198191	Callee	ZVAL_LONG		3198148	0					
ANR	3198192	Identifier	ZVAL_LONG		3198148	0					
ANR	3198193	ArgumentList	retval		3198148	1					
ANR	3198194	Argument	retval		3198148	0					
ANR	3198195	Identifier	retval		3198148	0					
ANR	3198196	Argument	XML_DOCUMENT_TYPE_NODE		3198148	1					
ANR	3198197	Identifier	XML_DOCUMENT_TYPE_NODE		3198148	0					
ANR	3198198	ElseStatement	else		3198148	0					
ANR	3198199	CompoundStatement		14:8:301:301	3198148	0					
ANR	3198200	ExpressionStatement	"ZVAL_LONG ( retval , nodep -> type )"	380:2:11086:11116	3198148	0	True				
ANR	3198201	CallExpression	"ZVAL_LONG ( retval , nodep -> type )"		3198148	0					
ANR	3198202	Callee	ZVAL_LONG		3198148	0					
ANR	3198203	Identifier	ZVAL_LONG		3198148	0					
ANR	3198204	ArgumentList	retval		3198148	1					
ANR	3198205	Argument	retval		3198148	0					
ANR	3198206	Identifier	retval		3198148	0					
ANR	3198207	Argument	nodep -> type		3198148	1					
ANR	3198208	PtrMemberAccess	nodep -> type		3198148	0					
ANR	3198209	Identifier	nodep		3198148	0					
ANR	3198210	Identifier	type		3198148	1					
ANR	3198211	ReturnStatement	return SUCCESS ;	383:1:11123:11137	3198148	4	True				
ANR	3198212	Identifier	SUCCESS		3198148	0					
ANR	3198213	ReturnType	int		3198148	1					
ANR	3198214	Identifier	dom_node_node_type_read		3198148	2					
ANR	3198215	ParameterList	"dom_object * obj , zval * retval"		3198148	3					
ANR	3198216	Parameter	dom_object * obj	365:28:10749:10763	3198148	0	True				
ANR	3198217	ParameterType	dom_object *		3198148	0					
ANR	3198218	Identifier	obj		3198148	1					
ANR	3198219	Parameter	zval * retval	365:45:10766:10777	3198148	1	True				
ANR	3198220	ParameterType	zval *		3198148	0					
ANR	3198221	Identifier	retval		3198148	1					
ANR	3198222	CFGEntryNode	ENTRY		3198148		True				
ANR	3198223	CFGExitNode	EXIT		3198148		True				
ANR	3198224	Symbol	nodep -> type		3198148						
ANR	3198225	Symbol	INVALID_STATE_ERR		3198148						
ANR	3198226	Symbol	NULL		3198148						
ANR	3198227	Symbol	SUCCESS		3198148						
ANR	3198228	Symbol	XML_DTD_NODE		3198148						
ANR	3198229	Symbol	obj		3198148						
ANR	3198230	Symbol	XML_DOCUMENT_TYPE_NODE		3198148						
ANR	3198231	Symbol	* nodep		3198148						
ANR	3198232	Symbol	nodep		3198148						
ANR	3198233	Symbol	FAILURE		3198148						
ANR	3198234	Symbol	retval		3198148						
ANR	3198235	Symbol	dom_object_get_node		3198148						
ANR	3198236	Function	dom_node_parent_node_read	393:0:11296:11673							
ANR	3198237	FunctionDef	"dom_node_parent_node_read (dom_object * obj , zval * retval)"		3198236	0					
ANR	3198238	CompoundStatement		394:0:11357:11673	3198236	0					
ANR	3198239	IdentifierDeclStatement	"xmlNode * nodep , * nodeparent ;"	395:1:11360:11387	3198236	0	True				
ANR	3198240	IdentifierDecl	* nodep		3198236	0					
ANR	3198241	IdentifierDeclType	xmlNode *		3198236	0					
ANR	3198242	Identifier	nodep		3198236	1					
ANR	3198243	IdentifierDecl	* nodeparent		3198236	1					
ANR	3198244	IdentifierDeclType	xmlNode *		3198236	0					
ANR	3198245	Identifier	nodeparent		3198236	1					
ANR	3198246	ExpressionStatement	nodep = dom_object_get_node ( obj )	397:1:11391:11423	3198236	1	True				
ANR	3198247	AssignmentExpression	nodep = dom_object_get_node ( obj )		3198236	0		=			
ANR	3198248	Identifier	nodep		3198236	0					
ANR	3198249	CallExpression	dom_object_get_node ( obj )		3198236	1					
ANR	3198250	Callee	dom_object_get_node		3198236	0					
ANR	3198251	Identifier	dom_object_get_node		3198236	0					
ANR	3198252	ArgumentList	obj		3198236	1					
ANR	3198253	Argument	obj		3198236	0					
ANR	3198254	Identifier	obj		3198236	0					
ANR	3198255	IfStatement	if ( nodep == NULL )		3198236	2					
ANR	3198256	Condition	nodep == NULL	399:5:11431:11443	3198236	0	True				
ANR	3198257	EqualityExpression	nodep == NULL		3198236	0		==			
ANR	3198258	Identifier	nodep		3198236	0					
ANR	3198259	Identifier	NULL		3198236	1					
ANR	3198260	CompoundStatement		6:20:88:88	3198236	1					
ANR	3198261	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	400:2:11450:11491	3198236	0	True				
ANR	3198262	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198236	0					
ANR	3198263	Callee	php_dom_throw_error		3198236	0					
ANR	3198264	Identifier	php_dom_throw_error		3198236	0					
ANR	3198265	ArgumentList	INVALID_STATE_ERR		3198236	1					
ANR	3198266	Argument	INVALID_STATE_ERR		3198236	0					
ANR	3198267	Identifier	INVALID_STATE_ERR		3198236	0					
ANR	3198268	Argument	0		3198236	1					
ANR	3198269	PrimaryExpression	0		3198236	0					
ANR	3198270	ReturnStatement	return FAILURE ;	401:2:11495:11509	3198236	1	True				
ANR	3198271	Identifier	FAILURE		3198236	0					
ANR	3198272	ExpressionStatement	nodeparent = nodep -> parent	404:1:11516:11542	3198236	3	True				
ANR	3198273	AssignmentExpression	nodeparent = nodep -> parent		3198236	0		=			
ANR	3198274	Identifier	nodeparent		3198236	0					
ANR	3198275	PtrMemberAccess	nodep -> parent		3198236	1					
ANR	3198276	Identifier	nodep		3198236	0					
ANR	3198277	Identifier	parent		3198236	1					
ANR	3198278	IfStatement	if ( ! nodeparent )		3198236	4					
ANR	3198279	Condition	! nodeparent	405:5:11549:11559	3198236	0	True				
ANR	3198280	UnaryOperationExpression	! nodeparent		3198236	0					
ANR	3198281	UnaryOperator	!		3198236	0					
ANR	3198282	Identifier	nodeparent		3198236	1					
ANR	3198283	CompoundStatement		12:18:204:204	3198236	1					
ANR	3198284	ExpressionStatement	ZVAL_NULL ( retval )	406:2:11566:11583	3198236	0	True				
ANR	3198285	CallExpression	ZVAL_NULL ( retval )		3198236	0					
ANR	3198286	Callee	ZVAL_NULL		3198236	0					
ANR	3198287	Identifier	ZVAL_NULL		3198236	0					
ANR	3198288	ArgumentList	retval		3198236	1					
ANR	3198289	Argument	retval		3198236	0					
ANR	3198290	Identifier	retval		3198236	0					
ANR	3198291	ReturnStatement	return SUCCESS ;	407:2:11587:11601	3198236	1	True				
ANR	3198292	Identifier	SUCCESS		3198236	0					
ANR	3198293	ExpressionStatement	"php_dom_create_object ( nodeparent , retval , obj )"	410:1:11608:11654	3198236	5	True				
ANR	3198294	CallExpression	"php_dom_create_object ( nodeparent , retval , obj )"		3198236	0					
ANR	3198295	Callee	php_dom_create_object		3198236	0					
ANR	3198296	Identifier	php_dom_create_object		3198236	0					
ANR	3198297	ArgumentList	nodeparent		3198236	1					
ANR	3198298	Argument	nodeparent		3198236	0					
ANR	3198299	Identifier	nodeparent		3198236	0					
ANR	3198300	Argument	retval		3198236	1					
ANR	3198301	Identifier	retval		3198236	0					
ANR	3198302	Argument	obj		3198236	2					
ANR	3198303	Identifier	obj		3198236	0					
ANR	3198304	ReturnStatement	return SUCCESS ;	411:1:11657:11671	3198236	6	True				
ANR	3198305	Identifier	SUCCESS		3198236	0					
ANR	3198306	ReturnType	int		3198236	1					
ANR	3198307	Identifier	dom_node_parent_node_read		3198236	2					
ANR	3198308	ParameterList	"dom_object * obj , zval * retval"		3198236	3					
ANR	3198309	Parameter	dom_object * obj	393:30:11326:11340	3198236	0	True				
ANR	3198310	ParameterType	dom_object *		3198236	0					
ANR	3198311	Identifier	obj		3198236	1					
ANR	3198312	Parameter	zval * retval	393:47:11343:11354	3198236	1	True				
ANR	3198313	ParameterType	zval *		3198236	0					
ANR	3198314	Identifier	retval		3198236	1					
ANR	3198315	CFGEntryNode	ENTRY		3198236		True				
ANR	3198316	CFGExitNode	EXIT		3198236		True				
ANR	3198317	Symbol	nodep -> parent		3198236						
ANR	3198318	Symbol	INVALID_STATE_ERR		3198236						
ANR	3198319	Symbol	NULL		3198236						
ANR	3198320	Symbol	SUCCESS		3198236						
ANR	3198321	Symbol	obj		3198236						
ANR	3198322	Symbol	* nodep		3198236						
ANR	3198323	Symbol	nodeparent		3198236						
ANR	3198324	Symbol	nodep		3198236						
ANR	3198325	Symbol	FAILURE		3198236						
ANR	3198326	Symbol	retval		3198236						
ANR	3198327	Symbol	dom_object_get_node		3198236						
ANR	3198328	Function	dom_node_child_nodes_read	421:0:11834:12306							
ANR	3198329	FunctionDef	"dom_node_child_nodes_read (dom_object * obj , zval * retval)"		3198328	0					
ANR	3198330	CompoundStatement		422:0:11895:12306	3198328	0					
ANR	3198331	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	423:1:11898:11939	3198328	0	True				
ANR	3198332	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3198328	0					
ANR	3198333	IdentifierDeclType	xmlNode *		3198328	0					
ANR	3198334	Identifier	nodep		3198328	1					
ANR	3198335	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3198328	2		=			
ANR	3198336	Identifier	nodep		3198328	0					
ANR	3198337	CallExpression	dom_object_get_node ( obj )		3198328	1					
ANR	3198338	Callee	dom_object_get_node		3198328	0					
ANR	3198339	Identifier	dom_object_get_node		3198328	0					
ANR	3198340	ArgumentList	obj		3198328	1					
ANR	3198341	Argument	obj		3198328	0					
ANR	3198342	Identifier	obj		3198328	0					
ANR	3198343	IdentifierDeclStatement	dom_object * intern ;	424:1:11942:11960	3198328	1	True				
ANR	3198344	IdentifierDecl	* intern		3198328	0					
ANR	3198345	IdentifierDeclType	dom_object *		3198328	0					
ANR	3198346	Identifier	intern		3198328	1					
ANR	3198347	IfStatement	if ( nodep == NULL )		3198328	2					
ANR	3198348	Condition	nodep == NULL	426:5:11968:11980	3198328	0	True				
ANR	3198349	EqualityExpression	nodep == NULL		3198328	0		==			
ANR	3198350	Identifier	nodep		3198328	0					
ANR	3198351	Identifier	NULL		3198328	1					
ANR	3198352	CompoundStatement		5:20:87:87	3198328	1					
ANR	3198353	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	427:2:11987:12028	3198328	0	True				
ANR	3198354	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198328	0					
ANR	3198355	Callee	php_dom_throw_error		3198328	0					
ANR	3198356	Identifier	php_dom_throw_error		3198328	0					
ANR	3198357	ArgumentList	INVALID_STATE_ERR		3198328	1					
ANR	3198358	Argument	INVALID_STATE_ERR		3198328	0					
ANR	3198359	Identifier	INVALID_STATE_ERR		3198328	0					
ANR	3198360	Argument	0		3198328	1					
ANR	3198361	PrimaryExpression	0		3198328	0					
ANR	3198362	ReturnStatement	return FAILURE ;	428:2:12032:12046	3198328	1	True				
ANR	3198363	Identifier	FAILURE		3198328	0					
ANR	3198364	IfStatement	if ( dom_node_children_valid ( nodep ) == FAILURE )		3198328	3					
ANR	3198365	Condition	dom_node_children_valid ( nodep ) == FAILURE	431:5:12057:12097	3198328	0	True				
ANR	3198366	EqualityExpression	dom_node_children_valid ( nodep ) == FAILURE		3198328	0		==			
ANR	3198367	CallExpression	dom_node_children_valid ( nodep )		3198328	0					
ANR	3198368	Callee	dom_node_children_valid		3198328	0					
ANR	3198369	Identifier	dom_node_children_valid		3198328	0					
ANR	3198370	ArgumentList	nodep		3198328	1					
ANR	3198371	Argument	nodep		3198328	0					
ANR	3198372	Identifier	nodep		3198328	0					
ANR	3198373	Identifier	FAILURE		3198328	1					
ANR	3198374	CompoundStatement		10:48:204:204	3198328	1					
ANR	3198375	ExpressionStatement	ZVAL_NULL ( retval )	432:2:12104:12121	3198328	0	True				
ANR	3198376	CallExpression	ZVAL_NULL ( retval )		3198328	0					
ANR	3198377	Callee	ZVAL_NULL		3198328	0					
ANR	3198378	Identifier	ZVAL_NULL		3198328	0					
ANR	3198379	ArgumentList	retval		3198328	1					
ANR	3198380	Argument	retval		3198328	0					
ANR	3198381	Identifier	retval		3198328	0					
ANR	3198382	ElseStatement	else		3198328	0					
ANR	3198383	CompoundStatement		12:8:235:235	3198328	0					
ANR	3198384	ExpressionStatement	"php_dom_create_interator ( retval , DOM_NODELIST )"	434:2:12135:12181	3198328	0	True				
ANR	3198385	CallExpression	"php_dom_create_interator ( retval , DOM_NODELIST )"		3198328	0					
ANR	3198386	Callee	php_dom_create_interator		3198328	0					
ANR	3198387	Identifier	php_dom_create_interator		3198328	0					
ANR	3198388	ArgumentList	retval		3198328	1					
ANR	3198389	Argument	retval		3198328	0					
ANR	3198390	Identifier	retval		3198328	0					
ANR	3198391	Argument	DOM_NODELIST		3198328	1					
ANR	3198392	Identifier	DOM_NODELIST		3198328	0					
ANR	3198393	ExpressionStatement	intern = Z_DOMOBJ_P ( retval )	435:2:12185:12212	3198328	1	True				
ANR	3198394	AssignmentExpression	intern = Z_DOMOBJ_P ( retval )		3198328	0		=			
ANR	3198395	Identifier	intern		3198328	0					
ANR	3198396	CallExpression	Z_DOMOBJ_P ( retval )		3198328	1					
ANR	3198397	Callee	Z_DOMOBJ_P		3198328	0					
ANR	3198398	Identifier	Z_DOMOBJ_P		3198328	0					
ANR	3198399	ArgumentList	retval		3198328	1					
ANR	3198400	Argument	retval		3198328	0					
ANR	3198401	Identifier	retval		3198328	0					
ANR	3198402	ExpressionStatement	"dom_namednode_iter ( obj , XML_ELEMENT_NODE , intern , NULL , NULL , NULL )"	436:2:12216:12283	3198328	2	True				
ANR	3198403	CallExpression	"dom_namednode_iter ( obj , XML_ELEMENT_NODE , intern , NULL , NULL , NULL )"		3198328	0					
ANR	3198404	Callee	dom_namednode_iter		3198328	0					
ANR	3198405	Identifier	dom_namednode_iter		3198328	0					
ANR	3198406	ArgumentList	obj		3198328	1					
ANR	3198407	Argument	obj		3198328	0					
ANR	3198408	Identifier	obj		3198328	0					
ANR	3198409	Argument	XML_ELEMENT_NODE		3198328	1					
ANR	3198410	Identifier	XML_ELEMENT_NODE		3198328	0					
ANR	3198411	Argument	intern		3198328	2					
ANR	3198412	Identifier	intern		3198328	0					
ANR	3198413	Argument	NULL		3198328	3					
ANR	3198414	Identifier	NULL		3198328	0					
ANR	3198415	Argument	NULL		3198328	4					
ANR	3198416	Identifier	NULL		3198328	0					
ANR	3198417	Argument	NULL		3198328	5					
ANR	3198418	Identifier	NULL		3198328	0					
ANR	3198419	ReturnStatement	return SUCCESS ;	439:1:12290:12304	3198328	4	True				
ANR	3198420	Identifier	SUCCESS		3198328	0					
ANR	3198421	ReturnType	int		3198328	1					
ANR	3198422	Identifier	dom_node_child_nodes_read		3198328	2					
ANR	3198423	ParameterList	"dom_object * obj , zval * retval"		3198328	3					
ANR	3198424	Parameter	dom_object * obj	421:30:11864:11878	3198328	0	True				
ANR	3198425	ParameterType	dom_object *		3198328	0					
ANR	3198426	Identifier	obj		3198328	1					
ANR	3198427	Parameter	zval * retval	421:47:11881:11892	3198328	1	True				
ANR	3198428	ParameterType	zval *		3198328	0					
ANR	3198429	Identifier	retval		3198328	1					
ANR	3198430	CFGEntryNode	ENTRY		3198328		True				
ANR	3198431	CFGExitNode	EXIT		3198328		True				
ANR	3198432	Symbol	INVALID_STATE_ERR		3198328						
ANR	3198433	Symbol	XML_ELEMENT_NODE		3198328						
ANR	3198434	Symbol	intern		3198328						
ANR	3198435	Symbol	NULL		3198328						
ANR	3198436	Symbol	SUCCESS		3198328						
ANR	3198437	Symbol	nodep		3198328						
ANR	3198438	Symbol	FAILURE		3198328						
ANR	3198439	Symbol	retval		3198328						
ANR	3198440	Symbol	obj		3198328						
ANR	3198441	Symbol	dom_node_children_valid		3198328						
ANR	3198442	Symbol	Z_DOMOBJ_P		3198328						
ANR	3198443	Symbol	DOM_NODELIST		3198328						
ANR	3198444	Symbol	dom_object_get_node		3198328						
ANR	3198445	Function	dom_node_first_child_read	449:0:12462:12883							
ANR	3198446	FunctionDef	"dom_node_first_child_read (dom_object * obj , zval * retval)"		3198445	0					
ANR	3198447	CompoundStatement		450:0:12523:12883	3198445	0					
ANR	3198448	IdentifierDeclStatement	"xmlNode * nodep , * first = NULL ;"	451:1:12526:12555	3198445	0	True				
ANR	3198449	IdentifierDecl	* nodep		3198445	0					
ANR	3198450	IdentifierDeclType	xmlNode *		3198445	0					
ANR	3198451	Identifier	nodep		3198445	1					
ANR	3198452	IdentifierDecl	* first = NULL		3198445	1					
ANR	3198453	IdentifierDeclType	xmlNode *		3198445	0					
ANR	3198454	Identifier	first		3198445	1					
ANR	3198455	AssignmentExpression	* first = NULL		3198445	2		=			
ANR	3198456	Identifier	NULL		3198445	0					
ANR	3198457	Identifier	NULL		3198445	1					
ANR	3198458	ExpressionStatement	nodep = dom_object_get_node ( obj )	453:1:12559:12591	3198445	1	True				
ANR	3198459	AssignmentExpression	nodep = dom_object_get_node ( obj )		3198445	0		=			
ANR	3198460	Identifier	nodep		3198445	0					
ANR	3198461	CallExpression	dom_object_get_node ( obj )		3198445	1					
ANR	3198462	Callee	dom_object_get_node		3198445	0					
ANR	3198463	Identifier	dom_object_get_node		3198445	0					
ANR	3198464	ArgumentList	obj		3198445	1					
ANR	3198465	Argument	obj		3198445	0					
ANR	3198466	Identifier	obj		3198445	0					
ANR	3198467	IfStatement	if ( nodep == NULL )		3198445	2					
ANR	3198468	Condition	nodep == NULL	455:5:12599:12611	3198445	0	True				
ANR	3198469	EqualityExpression	nodep == NULL		3198445	0		==			
ANR	3198470	Identifier	nodep		3198445	0					
ANR	3198471	Identifier	NULL		3198445	1					
ANR	3198472	CompoundStatement		6:20:90:90	3198445	1					
ANR	3198473	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	456:2:12618:12659	3198445	0	True				
ANR	3198474	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198445	0					
ANR	3198475	Callee	php_dom_throw_error		3198445	0					
ANR	3198476	Identifier	php_dom_throw_error		3198445	0					
ANR	3198477	ArgumentList	INVALID_STATE_ERR		3198445	1					
ANR	3198478	Argument	INVALID_STATE_ERR		3198445	0					
ANR	3198479	Identifier	INVALID_STATE_ERR		3198445	0					
ANR	3198480	Argument	0		3198445	1					
ANR	3198481	PrimaryExpression	0		3198445	0					
ANR	3198482	ReturnStatement	return FAILURE ;	457:2:12663:12677	3198445	1	True				
ANR	3198483	Identifier	FAILURE		3198445	0					
ANR	3198484	IfStatement	if ( dom_node_children_valid ( nodep ) == SUCCESS )		3198445	3					
ANR	3198485	Condition	dom_node_children_valid ( nodep ) == SUCCESS	460:5:12688:12728	3198445	0	True				
ANR	3198486	EqualityExpression	dom_node_children_valid ( nodep ) == SUCCESS		3198445	0		==			
ANR	3198487	CallExpression	dom_node_children_valid ( nodep )		3198445	0					
ANR	3198488	Callee	dom_node_children_valid		3198445	0					
ANR	3198489	Identifier	dom_node_children_valid		3198445	0					
ANR	3198490	ArgumentList	nodep		3198445	1					
ANR	3198491	Argument	nodep		3198445	0					
ANR	3198492	Identifier	nodep		3198445	0					
ANR	3198493	Identifier	SUCCESS		3198445	1					
ANR	3198494	CompoundStatement		11:48:207:207	3198445	1					
ANR	3198495	ExpressionStatement	first = nodep -> children	461:2:12735:12758	3198445	0	True				
ANR	3198496	AssignmentExpression	first = nodep -> children		3198445	0		=			
ANR	3198497	Identifier	first		3198445	0					
ANR	3198498	PtrMemberAccess	nodep -> children		3198445	1					
ANR	3198499	Identifier	nodep		3198445	0					
ANR	3198500	Identifier	children		3198445	1					
ANR	3198501	IfStatement	if ( ! first )		3198445	4					
ANR	3198502	Condition	! first	464:5:12769:12774	3198445	0	True				
ANR	3198503	UnaryOperationExpression	! first		3198445	0					
ANR	3198504	UnaryOperator	!		3198445	0					
ANR	3198505	Identifier	first		3198445	1					
ANR	3198506	CompoundStatement		15:13:253:253	3198445	1					
ANR	3198507	ExpressionStatement	ZVAL_NULL ( retval )	465:2:12781:12798	3198445	0	True				
ANR	3198508	CallExpression	ZVAL_NULL ( retval )		3198445	0					
ANR	3198509	Callee	ZVAL_NULL		3198445	0					
ANR	3198510	Identifier	ZVAL_NULL		3198445	0					
ANR	3198511	ArgumentList	retval		3198445	1					
ANR	3198512	Argument	retval		3198445	0					
ANR	3198513	Identifier	retval		3198445	0					
ANR	3198514	ReturnStatement	return SUCCESS ;	466:2:12802:12816	3198445	1	True				
ANR	3198515	Identifier	SUCCESS		3198445	0					
ANR	3198516	ExpressionStatement	"php_dom_create_object ( first , retval , obj )"	469:1:12823:12864	3198445	5	True				
ANR	3198517	CallExpression	"php_dom_create_object ( first , retval , obj )"		3198445	0					
ANR	3198518	Callee	php_dom_create_object		3198445	0					
ANR	3198519	Identifier	php_dom_create_object		3198445	0					
ANR	3198520	ArgumentList	first		3198445	1					
ANR	3198521	Argument	first		3198445	0					
ANR	3198522	Identifier	first		3198445	0					
ANR	3198523	Argument	retval		3198445	1					
ANR	3198524	Identifier	retval		3198445	0					
ANR	3198525	Argument	obj		3198445	2					
ANR	3198526	Identifier	obj		3198445	0					
ANR	3198527	ReturnStatement	return SUCCESS ;	470:1:12867:12881	3198445	6	True				
ANR	3198528	Identifier	SUCCESS		3198445	0					
ANR	3198529	ReturnType	int		3198445	1					
ANR	3198530	Identifier	dom_node_first_child_read		3198445	2					
ANR	3198531	ParameterList	"dom_object * obj , zval * retval"		3198445	3					
ANR	3198532	Parameter	dom_object * obj	449:30:12492:12506	3198445	0	True				
ANR	3198533	ParameterType	dom_object *		3198445	0					
ANR	3198534	Identifier	obj		3198445	1					
ANR	3198535	Parameter	zval * retval	449:47:12509:12520	3198445	1	True				
ANR	3198536	ParameterType	zval *		3198445	0					
ANR	3198537	Identifier	retval		3198445	1					
ANR	3198538	CFGEntryNode	ENTRY		3198445		True				
ANR	3198539	CFGExitNode	EXIT		3198445		True				
ANR	3198540	Symbol	INVALID_STATE_ERR		3198445						
ANR	3198541	Symbol	NULL		3198445						
ANR	3198542	Symbol	SUCCESS		3198445						
ANR	3198543	Symbol	nodep -> children		3198445						
ANR	3198544	Symbol	obj		3198445						
ANR	3198545	Symbol	dom_node_children_valid		3198445						
ANR	3198546	Symbol	* nodep		3198445						
ANR	3198547	Symbol	nodep		3198445						
ANR	3198548	Symbol	FAILURE		3198445						
ANR	3198549	Symbol	retval		3198445						
ANR	3198550	Symbol	first		3198445						
ANR	3198551	Symbol	dom_object_get_node		3198445						
ANR	3198552	Function	dom_node_last_child_read	480:0:13037:13449							
ANR	3198553	FunctionDef	"dom_node_last_child_read (dom_object * obj , zval * retval)"		3198552	0					
ANR	3198554	CompoundStatement		481:0:13097:13449	3198552	0					
ANR	3198555	IdentifierDeclStatement	"xmlNode * nodep , * last = NULL ;"	482:1:13100:13128	3198552	0	True				
ANR	3198556	IdentifierDecl	* nodep		3198552	0					
ANR	3198557	IdentifierDeclType	xmlNode *		3198552	0					
ANR	3198558	Identifier	nodep		3198552	1					
ANR	3198559	IdentifierDecl	* last = NULL		3198552	1					
ANR	3198560	IdentifierDeclType	xmlNode *		3198552	0					
ANR	3198561	Identifier	last		3198552	1					
ANR	3198562	AssignmentExpression	* last = NULL		3198552	2		=			
ANR	3198563	Identifier	NULL		3198552	0					
ANR	3198564	Identifier	NULL		3198552	1					
ANR	3198565	ExpressionStatement	nodep = dom_object_get_node ( obj )	484:1:13132:13164	3198552	1	True				
ANR	3198566	AssignmentExpression	nodep = dom_object_get_node ( obj )		3198552	0		=			
ANR	3198567	Identifier	nodep		3198552	0					
ANR	3198568	CallExpression	dom_object_get_node ( obj )		3198552	1					
ANR	3198569	Callee	dom_object_get_node		3198552	0					
ANR	3198570	Identifier	dom_object_get_node		3198552	0					
ANR	3198571	ArgumentList	obj		3198552	1					
ANR	3198572	Argument	obj		3198552	0					
ANR	3198573	Identifier	obj		3198552	0					
ANR	3198574	IfStatement	if ( nodep == NULL )		3198552	2					
ANR	3198575	Condition	nodep == NULL	486:5:13172:13184	3198552	0	True				
ANR	3198576	EqualityExpression	nodep == NULL		3198552	0		==			
ANR	3198577	Identifier	nodep		3198552	0					
ANR	3198578	Identifier	NULL		3198552	1					
ANR	3198579	CompoundStatement		6:20:89:89	3198552	1					
ANR	3198580	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	487:2:13191:13232	3198552	0	True				
ANR	3198581	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198552	0					
ANR	3198582	Callee	php_dom_throw_error		3198552	0					
ANR	3198583	Identifier	php_dom_throw_error		3198552	0					
ANR	3198584	ArgumentList	INVALID_STATE_ERR		3198552	1					
ANR	3198585	Argument	INVALID_STATE_ERR		3198552	0					
ANR	3198586	Identifier	INVALID_STATE_ERR		3198552	0					
ANR	3198587	Argument	0		3198552	1					
ANR	3198588	PrimaryExpression	0		3198552	0					
ANR	3198589	ReturnStatement	return FAILURE ;	488:2:13236:13250	3198552	1	True				
ANR	3198590	Identifier	FAILURE		3198552	0					
ANR	3198591	IfStatement	if ( dom_node_children_valid ( nodep ) == SUCCESS )		3198552	3					
ANR	3198592	Condition	dom_node_children_valid ( nodep ) == SUCCESS	491:5:13261:13301	3198552	0	True				
ANR	3198593	EqualityExpression	dom_node_children_valid ( nodep ) == SUCCESS		3198552	0		==			
ANR	3198594	CallExpression	dom_node_children_valid ( nodep )		3198552	0					
ANR	3198595	Callee	dom_node_children_valid		3198552	0					
ANR	3198596	Identifier	dom_node_children_valid		3198552	0					
ANR	3198597	ArgumentList	nodep		3198552	1					
ANR	3198598	Argument	nodep		3198552	0					
ANR	3198599	Identifier	nodep		3198552	0					
ANR	3198600	Identifier	SUCCESS		3198552	1					
ANR	3198601	CompoundStatement		11:48:206:206	3198552	1					
ANR	3198602	ExpressionStatement	last = nodep -> last	492:2:13308:13326	3198552	0	True				
ANR	3198603	AssignmentExpression	last = nodep -> last		3198552	0		=			
ANR	3198604	Identifier	last		3198552	0					
ANR	3198605	PtrMemberAccess	nodep -> last		3198552	1					
ANR	3198606	Identifier	nodep		3198552	0					
ANR	3198607	Identifier	last		3198552	1					
ANR	3198608	IfStatement	if ( ! last )		3198552	4					
ANR	3198609	Condition	! last	495:5:13337:13341	3198552	0	True				
ANR	3198610	UnaryOperationExpression	! last		3198552	0					
ANR	3198611	UnaryOperator	!		3198552	0					
ANR	3198612	Identifier	last		3198552	1					
ANR	3198613	CompoundStatement		15:12:246:246	3198552	1					
ANR	3198614	ExpressionStatement	ZVAL_NULL ( retval )	496:2:13348:13365	3198552	0	True				
ANR	3198615	CallExpression	ZVAL_NULL ( retval )		3198552	0					
ANR	3198616	Callee	ZVAL_NULL		3198552	0					
ANR	3198617	Identifier	ZVAL_NULL		3198552	0					
ANR	3198618	ArgumentList	retval		3198552	1					
ANR	3198619	Argument	retval		3198552	0					
ANR	3198620	Identifier	retval		3198552	0					
ANR	3198621	ReturnStatement	return SUCCESS ;	497:2:13369:13383	3198552	1	True				
ANR	3198622	Identifier	SUCCESS		3198552	0					
ANR	3198623	ExpressionStatement	"php_dom_create_object ( last , retval , obj )"	500:1:13390:13430	3198552	5	True				
ANR	3198624	CallExpression	"php_dom_create_object ( last , retval , obj )"		3198552	0					
ANR	3198625	Callee	php_dom_create_object		3198552	0					
ANR	3198626	Identifier	php_dom_create_object		3198552	0					
ANR	3198627	ArgumentList	last		3198552	1					
ANR	3198628	Argument	last		3198552	0					
ANR	3198629	Identifier	last		3198552	0					
ANR	3198630	Argument	retval		3198552	1					
ANR	3198631	Identifier	retval		3198552	0					
ANR	3198632	Argument	obj		3198552	2					
ANR	3198633	Identifier	obj		3198552	0					
ANR	3198634	ReturnStatement	return SUCCESS ;	501:1:13433:13447	3198552	6	True				
ANR	3198635	Identifier	SUCCESS		3198552	0					
ANR	3198636	ReturnType	int		3198552	1					
ANR	3198637	Identifier	dom_node_last_child_read		3198552	2					
ANR	3198638	ParameterList	"dom_object * obj , zval * retval"		3198552	3					
ANR	3198639	Parameter	dom_object * obj	480:29:13066:13080	3198552	0	True				
ANR	3198640	ParameterType	dom_object *		3198552	0					
ANR	3198641	Identifier	obj		3198552	1					
ANR	3198642	Parameter	zval * retval	480:46:13083:13094	3198552	1	True				
ANR	3198643	ParameterType	zval *		3198552	0					
ANR	3198644	Identifier	retval		3198552	1					
ANR	3198645	CFGEntryNode	ENTRY		3198552		True				
ANR	3198646	CFGExitNode	EXIT		3198552		True				
ANR	3198647	Symbol	nodep -> last		3198552						
ANR	3198648	Symbol	INVALID_STATE_ERR		3198552						
ANR	3198649	Symbol	NULL		3198552						
ANR	3198650	Symbol	SUCCESS		3198552						
ANR	3198651	Symbol	last		3198552						
ANR	3198652	Symbol	obj		3198552						
ANR	3198653	Symbol	dom_node_children_valid		3198552						
ANR	3198654	Symbol	* nodep		3198552						
ANR	3198655	Symbol	nodep		3198552						
ANR	3198656	Symbol	FAILURE		3198552						
ANR	3198657	Symbol	retval		3198552						
ANR	3198658	Symbol	dom_object_get_node		3198552						
ANR	3198659	Function	dom_node_previous_sibling_read	511:0:13609:13977							
ANR	3198660	FunctionDef	"dom_node_previous_sibling_read (dom_object * obj , zval * retval)"		3198659	0					
ANR	3198661	CompoundStatement		512:0:13675:13977	3198659	0					
ANR	3198662	IdentifierDeclStatement	"xmlNode * nodep , * prevsib ;"	513:1:13678:13702	3198659	0	True				
ANR	3198663	IdentifierDecl	* nodep		3198659	0					
ANR	3198664	IdentifierDeclType	xmlNode *		3198659	0					
ANR	3198665	Identifier	nodep		3198659	1					
ANR	3198666	IdentifierDecl	* prevsib		3198659	1					
ANR	3198667	IdentifierDeclType	xmlNode *		3198659	0					
ANR	3198668	Identifier	prevsib		3198659	1					
ANR	3198669	ExpressionStatement	nodep = dom_object_get_node ( obj )	515:1:13706:13738	3198659	1	True				
ANR	3198670	AssignmentExpression	nodep = dom_object_get_node ( obj )		3198659	0		=			
ANR	3198671	Identifier	nodep		3198659	0					
ANR	3198672	CallExpression	dom_object_get_node ( obj )		3198659	1					
ANR	3198673	Callee	dom_object_get_node		3198659	0					
ANR	3198674	Identifier	dom_object_get_node		3198659	0					
ANR	3198675	ArgumentList	obj		3198659	1					
ANR	3198676	Argument	obj		3198659	0					
ANR	3198677	Identifier	obj		3198659	0					
ANR	3198678	IfStatement	if ( nodep == NULL )		3198659	2					
ANR	3198679	Condition	nodep == NULL	517:5:13746:13758	3198659	0	True				
ANR	3198680	EqualityExpression	nodep == NULL		3198659	0		==			
ANR	3198681	Identifier	nodep		3198659	0					
ANR	3198682	Identifier	NULL		3198659	1					
ANR	3198683	CompoundStatement		6:20:85:85	3198659	1					
ANR	3198684	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	518:2:13765:13806	3198659	0	True				
ANR	3198685	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198659	0					
ANR	3198686	Callee	php_dom_throw_error		3198659	0					
ANR	3198687	Identifier	php_dom_throw_error		3198659	0					
ANR	3198688	ArgumentList	INVALID_STATE_ERR		3198659	1					
ANR	3198689	Argument	INVALID_STATE_ERR		3198659	0					
ANR	3198690	Identifier	INVALID_STATE_ERR		3198659	0					
ANR	3198691	Argument	0		3198659	1					
ANR	3198692	PrimaryExpression	0		3198659	0					
ANR	3198693	ReturnStatement	return FAILURE ;	519:2:13810:13824	3198659	1	True				
ANR	3198694	Identifier	FAILURE		3198659	0					
ANR	3198695	ExpressionStatement	prevsib = nodep -> prev	522:1:13831:13852	3198659	3	True				
ANR	3198696	AssignmentExpression	prevsib = nodep -> prev		3198659	0		=			
ANR	3198697	Identifier	prevsib		3198659	0					
ANR	3198698	PtrMemberAccess	nodep -> prev		3198659	1					
ANR	3198699	Identifier	nodep		3198659	0					
ANR	3198700	Identifier	prev		3198659	1					
ANR	3198701	IfStatement	if ( ! prevsib )		3198659	4					
ANR	3198702	Condition	! prevsib	523:5:13859:13866	3198659	0	True				
ANR	3198703	UnaryOperationExpression	! prevsib		3198659	0					
ANR	3198704	UnaryOperator	!		3198659	0					
ANR	3198705	Identifier	prevsib		3198659	1					
ANR	3198706	CompoundStatement		12:15:193:193	3198659	1					
ANR	3198707	ExpressionStatement	ZVAL_NULL ( retval )	524:2:13873:13890	3198659	0	True				
ANR	3198708	CallExpression	ZVAL_NULL ( retval )		3198659	0					
ANR	3198709	Callee	ZVAL_NULL		3198659	0					
ANR	3198710	Identifier	ZVAL_NULL		3198659	0					
ANR	3198711	ArgumentList	retval		3198659	1					
ANR	3198712	Argument	retval		3198659	0					
ANR	3198713	Identifier	retval		3198659	0					
ANR	3198714	ReturnStatement	return SUCCESS ;	525:2:13894:13908	3198659	1	True				
ANR	3198715	Identifier	SUCCESS		3198659	0					
ANR	3198716	ExpressionStatement	"php_dom_create_object ( prevsib , retval , obj )"	528:1:13915:13958	3198659	5	True				
ANR	3198717	CallExpression	"php_dom_create_object ( prevsib , retval , obj )"		3198659	0					
ANR	3198718	Callee	php_dom_create_object		3198659	0					
ANR	3198719	Identifier	php_dom_create_object		3198659	0					
ANR	3198720	ArgumentList	prevsib		3198659	1					
ANR	3198721	Argument	prevsib		3198659	0					
ANR	3198722	Identifier	prevsib		3198659	0					
ANR	3198723	Argument	retval		3198659	1					
ANR	3198724	Identifier	retval		3198659	0					
ANR	3198725	Argument	obj		3198659	2					
ANR	3198726	Identifier	obj		3198659	0					
ANR	3198727	ReturnStatement	return SUCCESS ;	529:1:13961:13975	3198659	6	True				
ANR	3198728	Identifier	SUCCESS		3198659	0					
ANR	3198729	ReturnType	int		3198659	1					
ANR	3198730	Identifier	dom_node_previous_sibling_read		3198659	2					
ANR	3198731	ParameterList	"dom_object * obj , zval * retval"		3198659	3					
ANR	3198732	Parameter	dom_object * obj	511:35:13644:13658	3198659	0	True				
ANR	3198733	ParameterType	dom_object *		3198659	0					
ANR	3198734	Identifier	obj		3198659	1					
ANR	3198735	Parameter	zval * retval	511:52:13661:13672	3198659	1	True				
ANR	3198736	ParameterType	zval *		3198659	0					
ANR	3198737	Identifier	retval		3198659	1					
ANR	3198738	CFGEntryNode	ENTRY		3198659		True				
ANR	3198739	CFGExitNode	EXIT		3198659		True				
ANR	3198740	Symbol	prevsib		3198659						
ANR	3198741	Symbol	INVALID_STATE_ERR		3198659						
ANR	3198742	Symbol	NULL		3198659						
ANR	3198743	Symbol	SUCCESS		3198659						
ANR	3198744	Symbol	nodep -> prev		3198659						
ANR	3198745	Symbol	obj		3198659						
ANR	3198746	Symbol	* nodep		3198659						
ANR	3198747	Symbol	nodep		3198659						
ANR	3198748	Symbol	FAILURE		3198659						
ANR	3198749	Symbol	retval		3198659						
ANR	3198750	Symbol	dom_object_get_node		3198659						
ANR	3198751	Function	dom_node_next_sibling_read	539:0:14133:14476							
ANR	3198752	FunctionDef	"dom_node_next_sibling_read (dom_object * obj , zval * retval)"		3198751	0					
ANR	3198753	CompoundStatement		540:0:14195:14476	3198751	0					
ANR	3198754	IdentifierDeclStatement	"xmlNode * nodep , * nextsib ;"	541:1:14198:14222	3198751	0	True				
ANR	3198755	IdentifierDecl	* nodep		3198751	0					
ANR	3198756	IdentifierDeclType	xmlNode *		3198751	0					
ANR	3198757	Identifier	nodep		3198751	1					
ANR	3198758	IdentifierDecl	* nextsib		3198751	1					
ANR	3198759	IdentifierDeclType	xmlNode *		3198751	0					
ANR	3198760	Identifier	nextsib		3198751	1					
ANR	3198761	ExpressionStatement	nodep = dom_object_get_node ( obj )	543:1:14226:14258	3198751	1	True				
ANR	3198762	AssignmentExpression	nodep = dom_object_get_node ( obj )		3198751	0		=			
ANR	3198763	Identifier	nodep		3198751	0					
ANR	3198764	CallExpression	dom_object_get_node ( obj )		3198751	1					
ANR	3198765	Callee	dom_object_get_node		3198751	0					
ANR	3198766	Identifier	dom_object_get_node		3198751	0					
ANR	3198767	ArgumentList	obj		3198751	1					
ANR	3198768	Argument	obj		3198751	0					
ANR	3198769	Identifier	obj		3198751	0					
ANR	3198770	IfStatement	if ( nodep == NULL )		3198751	2					
ANR	3198771	Condition	nodep == NULL	545:5:14266:14278	3198751	0	True				
ANR	3198772	EqualityExpression	nodep == NULL		3198751	0		==			
ANR	3198773	Identifier	nodep		3198751	0					
ANR	3198774	Identifier	NULL		3198751	1					
ANR	3198775	CompoundStatement		6:20:85:85	3198751	1					
ANR	3198776	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	546:2:14285:14326	3198751	0	True				
ANR	3198777	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198751	0					
ANR	3198778	Callee	php_dom_throw_error		3198751	0					
ANR	3198779	Identifier	php_dom_throw_error		3198751	0					
ANR	3198780	ArgumentList	INVALID_STATE_ERR		3198751	1					
ANR	3198781	Argument	INVALID_STATE_ERR		3198751	0					
ANR	3198782	Identifier	INVALID_STATE_ERR		3198751	0					
ANR	3198783	Argument	0		3198751	1					
ANR	3198784	PrimaryExpression	0		3198751	0					
ANR	3198785	ReturnStatement	return FAILURE ;	547:2:14330:14344	3198751	1	True				
ANR	3198786	Identifier	FAILURE		3198751	0					
ANR	3198787	ExpressionStatement	nextsib = nodep -> next	550:1:14351:14372	3198751	3	True				
ANR	3198788	AssignmentExpression	nextsib = nodep -> next		3198751	0		=			
ANR	3198789	Identifier	nextsib		3198751	0					
ANR	3198790	PtrMemberAccess	nodep -> next		3198751	1					
ANR	3198791	Identifier	nodep		3198751	0					
ANR	3198792	Identifier	next		3198751	1					
ANR	3198793	IfStatement	if ( ! nextsib )		3198751	4					
ANR	3198794	Condition	! nextsib	551:5:14379:14386	3198751	0	True				
ANR	3198795	UnaryOperationExpression	! nextsib		3198751	0					
ANR	3198796	UnaryOperator	!		3198751	0					
ANR	3198797	Identifier	nextsib		3198751	1					
ANR	3198798	CompoundStatement		12:15:193:193	3198751	1					
ANR	3198799	ReturnStatement	return FAILURE ;	552:2:14393:14407	3198751	0	True				
ANR	3198800	Identifier	FAILURE		3198751	0					
ANR	3198801	ExpressionStatement	"php_dom_create_object ( nextsib , retval , obj )"	555:1:14414:14457	3198751	5	True				
ANR	3198802	CallExpression	"php_dom_create_object ( nextsib , retval , obj )"		3198751	0					
ANR	3198803	Callee	php_dom_create_object		3198751	0					
ANR	3198804	Identifier	php_dom_create_object		3198751	0					
ANR	3198805	ArgumentList	nextsib		3198751	1					
ANR	3198806	Argument	nextsib		3198751	0					
ANR	3198807	Identifier	nextsib		3198751	0					
ANR	3198808	Argument	retval		3198751	1					
ANR	3198809	Identifier	retval		3198751	0					
ANR	3198810	Argument	obj		3198751	2					
ANR	3198811	Identifier	obj		3198751	0					
ANR	3198812	ReturnStatement	return SUCCESS ;	556:1:14460:14474	3198751	6	True				
ANR	3198813	Identifier	SUCCESS		3198751	0					
ANR	3198814	ReturnType	int		3198751	1					
ANR	3198815	Identifier	dom_node_next_sibling_read		3198751	2					
ANR	3198816	ParameterList	"dom_object * obj , zval * retval"		3198751	3					
ANR	3198817	Parameter	dom_object * obj	539:31:14164:14178	3198751	0	True				
ANR	3198818	ParameterType	dom_object *		3198751	0					
ANR	3198819	Identifier	obj		3198751	1					
ANR	3198820	Parameter	zval * retval	539:48:14181:14192	3198751	1	True				
ANR	3198821	ParameterType	zval *		3198751	0					
ANR	3198822	Identifier	retval		3198751	1					
ANR	3198823	CFGEntryNode	ENTRY		3198751		True				
ANR	3198824	CFGExitNode	EXIT		3198751		True				
ANR	3198825	Symbol	nextsib		3198751						
ANR	3198826	Symbol	INVALID_STATE_ERR		3198751						
ANR	3198827	Symbol	NULL		3198751						
ANR	3198828	Symbol	SUCCESS		3198751						
ANR	3198829	Symbol	nodep -> next		3198751						
ANR	3198830	Symbol	obj		3198751						
ANR	3198831	Symbol	* nodep		3198751						
ANR	3198832	Symbol	nodep		3198751						
ANR	3198833	Symbol	FAILURE		3198751						
ANR	3198834	Symbol	retval		3198751						
ANR	3198835	Symbol	dom_object_get_node		3198751						
ANR	3198836	Function	dom_node_attributes_read	566:0:14638:15105							
ANR	3198837	FunctionDef	"dom_node_attributes_read (dom_object * obj , zval * retval)"		3198836	0					
ANR	3198838	CompoundStatement		567:0:14698:15105	3198836	0					
ANR	3198839	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	568:1:14701:14742	3198836	0	True				
ANR	3198840	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3198836	0					
ANR	3198841	IdentifierDeclType	xmlNode *		3198836	0					
ANR	3198842	Identifier	nodep		3198836	1					
ANR	3198843	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3198836	2		=			
ANR	3198844	Identifier	nodep		3198836	0					
ANR	3198845	CallExpression	dom_object_get_node ( obj )		3198836	1					
ANR	3198846	Callee	dom_object_get_node		3198836	0					
ANR	3198847	Identifier	dom_object_get_node		3198836	0					
ANR	3198848	ArgumentList	obj		3198836	1					
ANR	3198849	Argument	obj		3198836	0					
ANR	3198850	Identifier	obj		3198836	0					
ANR	3198851	IdentifierDeclStatement	dom_object * intern ;	569:1:14745:14763	3198836	1	True				
ANR	3198852	IdentifierDecl	* intern		3198836	0					
ANR	3198853	IdentifierDeclType	dom_object *		3198836	0					
ANR	3198854	Identifier	intern		3198836	1					
ANR	3198855	IfStatement	if ( nodep == NULL )		3198836	2					
ANR	3198856	Condition	nodep == NULL	571:5:14771:14783	3198836	0	True				
ANR	3198857	EqualityExpression	nodep == NULL		3198836	0		==			
ANR	3198858	Identifier	nodep		3198836	0					
ANR	3198859	Identifier	NULL		3198836	1					
ANR	3198860	CompoundStatement		5:20:87:87	3198836	1					
ANR	3198861	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	572:2:14790:14831	3198836	0	True				
ANR	3198862	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198836	0					
ANR	3198863	Callee	php_dom_throw_error		3198836	0					
ANR	3198864	Identifier	php_dom_throw_error		3198836	0					
ANR	3198865	ArgumentList	INVALID_STATE_ERR		3198836	1					
ANR	3198866	Argument	INVALID_STATE_ERR		3198836	0					
ANR	3198867	Identifier	INVALID_STATE_ERR		3198836	0					
ANR	3198868	Argument	0		3198836	1					
ANR	3198869	PrimaryExpression	0		3198836	0					
ANR	3198870	ReturnStatement	return FAILURE ;	573:2:14835:14849	3198836	1	True				
ANR	3198871	Identifier	FAILURE		3198836	0					
ANR	3198872	IfStatement	if ( nodep -> type == XML_ELEMENT_NODE )		3198836	3					
ANR	3198873	Condition	nodep -> type == XML_ELEMENT_NODE	576:5:14860:14890	3198836	0	True				
ANR	3198874	EqualityExpression	nodep -> type == XML_ELEMENT_NODE		3198836	0		==			
ANR	3198875	PtrMemberAccess	nodep -> type		3198836	0					
ANR	3198876	Identifier	nodep		3198836	0					
ANR	3198877	Identifier	type		3198836	1					
ANR	3198878	Identifier	XML_ELEMENT_NODE		3198836	1					
ANR	3198879	CompoundStatement		10:38:194:194	3198836	1					
ANR	3198880	ExpressionStatement	"php_dom_create_interator ( retval , DOM_NAMEDNODEMAP )"	577:2:14897:14947	3198836	0	True				
ANR	3198881	CallExpression	"php_dom_create_interator ( retval , DOM_NAMEDNODEMAP )"		3198836	0					
ANR	3198882	Callee	php_dom_create_interator		3198836	0					
ANR	3198883	Identifier	php_dom_create_interator		3198836	0					
ANR	3198884	ArgumentList	retval		3198836	1					
ANR	3198885	Argument	retval		3198836	0					
ANR	3198886	Identifier	retval		3198836	0					
ANR	3198887	Argument	DOM_NAMEDNODEMAP		3198836	1					
ANR	3198888	Identifier	DOM_NAMEDNODEMAP		3198836	0					
ANR	3198889	ExpressionStatement	intern = Z_DOMOBJ_P ( retval )	578:2:14951:14978	3198836	1	True				
ANR	3198890	AssignmentExpression	intern = Z_DOMOBJ_P ( retval )		3198836	0		=			
ANR	3198891	Identifier	intern		3198836	0					
ANR	3198892	CallExpression	Z_DOMOBJ_P ( retval )		3198836	1					
ANR	3198893	Callee	Z_DOMOBJ_P		3198836	0					
ANR	3198894	Identifier	Z_DOMOBJ_P		3198836	0					
ANR	3198895	ArgumentList	retval		3198836	1					
ANR	3198896	Argument	retval		3198836	0					
ANR	3198897	Identifier	retval		3198836	0					
ANR	3198898	ExpressionStatement	"dom_namednode_iter ( obj , XML_ATTRIBUTE_NODE , intern , NULL , NULL , NULL )"	579:2:14982:15051	3198836	2	True				
ANR	3198899	CallExpression	"dom_namednode_iter ( obj , XML_ATTRIBUTE_NODE , intern , NULL , NULL , NULL )"		3198836	0					
ANR	3198900	Callee	dom_namednode_iter		3198836	0					
ANR	3198901	Identifier	dom_namednode_iter		3198836	0					
ANR	3198902	ArgumentList	obj		3198836	1					
ANR	3198903	Argument	obj		3198836	0					
ANR	3198904	Identifier	obj		3198836	0					
ANR	3198905	Argument	XML_ATTRIBUTE_NODE		3198836	1					
ANR	3198906	Identifier	XML_ATTRIBUTE_NODE		3198836	0					
ANR	3198907	Argument	intern		3198836	2					
ANR	3198908	Identifier	intern		3198836	0					
ANR	3198909	Argument	NULL		3198836	3					
ANR	3198910	Identifier	NULL		3198836	0					
ANR	3198911	Argument	NULL		3198836	4					
ANR	3198912	Identifier	NULL		3198836	0					
ANR	3198913	Argument	NULL		3198836	5					
ANR	3198914	Identifier	NULL		3198836	0					
ANR	3198915	ElseStatement	else		3198836	0					
ANR	3198916	CompoundStatement		14:8:362:362	3198836	0					
ANR	3198917	ExpressionStatement	ZVAL_NULL ( retval )	581:2:15065:15082	3198836	0	True				
ANR	3198918	CallExpression	ZVAL_NULL ( retval )		3198836	0					
ANR	3198919	Callee	ZVAL_NULL		3198836	0					
ANR	3198920	Identifier	ZVAL_NULL		3198836	0					
ANR	3198921	ArgumentList	retval		3198836	1					
ANR	3198922	Argument	retval		3198836	0					
ANR	3198923	Identifier	retval		3198836	0					
ANR	3198924	ReturnStatement	return SUCCESS ;	584:1:15089:15103	3198836	4	True				
ANR	3198925	Identifier	SUCCESS		3198836	0					
ANR	3198926	ReturnType	int		3198836	1					
ANR	3198927	Identifier	dom_node_attributes_read		3198836	2					
ANR	3198928	ParameterList	"dom_object * obj , zval * retval"		3198836	3					
ANR	3198929	Parameter	dom_object * obj	566:29:14667:14681	3198836	0	True				
ANR	3198930	ParameterType	dom_object *		3198836	0					
ANR	3198931	Identifier	obj		3198836	1					
ANR	3198932	Parameter	zval * retval	566:46:14684:14695	3198836	1	True				
ANR	3198933	ParameterType	zval *		3198836	0					
ANR	3198934	Identifier	retval		3198836	1					
ANR	3198935	CFGEntryNode	ENTRY		3198836		True				
ANR	3198936	CFGExitNode	EXIT		3198836		True				
ANR	3198937	Symbol	nodep -> type		3198836						
ANR	3198938	Symbol	INVALID_STATE_ERR		3198836						
ANR	3198939	Symbol	XML_ELEMENT_NODE		3198836						
ANR	3198940	Symbol	intern		3198836						
ANR	3198941	Symbol	NULL		3198836						
ANR	3198942	Symbol	SUCCESS		3198836						
ANR	3198943	Symbol	nodep		3198836						
ANR	3198944	Symbol	FAILURE		3198836						
ANR	3198945	Symbol	retval		3198836						
ANR	3198946	Symbol	obj		3198836						
ANR	3198947	Symbol	DOM_NAMEDNODEMAP		3198836						
ANR	3198948	Symbol	XML_ATTRIBUTE_NODE		3198836						
ANR	3198949	Symbol	* nodep		3198836						
ANR	3198950	Symbol	Z_DOMOBJ_P		3198836						
ANR	3198951	Symbol	dom_object_get_node		3198836						
ANR	3198952	Function	dom_node_owner_document_read	594:0:15269:15740							
ANR	3198953	FunctionDef	"dom_node_owner_document_read (dom_object * obj , zval * retval)"		3198952	0					
ANR	3198954	CompoundStatement		595:0:15333:15740	3198952	0					
ANR	3198955	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	596:1:15336:15377	3198952	0	True				
ANR	3198956	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3198952	0					
ANR	3198957	IdentifierDeclType	xmlNode *		3198952	0					
ANR	3198958	Identifier	nodep		3198952	1					
ANR	3198959	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3198952	2		=			
ANR	3198960	Identifier	nodep		3198952	0					
ANR	3198961	CallExpression	dom_object_get_node ( obj )		3198952	1					
ANR	3198962	Callee	dom_object_get_node		3198952	0					
ANR	3198963	Identifier	dom_object_get_node		3198952	0					
ANR	3198964	ArgumentList	obj		3198952	1					
ANR	3198965	Argument	obj		3198952	0					
ANR	3198966	Identifier	obj		3198952	0					
ANR	3198967	IdentifierDeclStatement	xmlDocPtr docp ;	597:1:15380:15394	3198952	1	True				
ANR	3198968	IdentifierDecl	docp		3198952	0					
ANR	3198969	IdentifierDeclType	xmlDocPtr		3198952	0					
ANR	3198970	Identifier	docp		3198952	1					
ANR	3198971	IfStatement	if ( nodep == NULL )		3198952	2					
ANR	3198972	Condition	nodep == NULL	599:5:15402:15414	3198952	0	True				
ANR	3198973	EqualityExpression	nodep == NULL		3198952	0		==			
ANR	3198974	Identifier	nodep		3198952	0					
ANR	3198975	Identifier	NULL		3198952	1					
ANR	3198976	CompoundStatement		5:20:83:83	3198952	1					
ANR	3198977	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	600:2:15421:15462	3198952	0	True				
ANR	3198978	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3198952	0					
ANR	3198979	Callee	php_dom_throw_error		3198952	0					
ANR	3198980	Identifier	php_dom_throw_error		3198952	0					
ANR	3198981	ArgumentList	INVALID_STATE_ERR		3198952	1					
ANR	3198982	Argument	INVALID_STATE_ERR		3198952	0					
ANR	3198983	Identifier	INVALID_STATE_ERR		3198952	0					
ANR	3198984	Argument	0		3198952	1					
ANR	3198985	PrimaryExpression	0		3198952	0					
ANR	3198986	ReturnStatement	return FAILURE ;	601:2:15466:15480	3198952	1	True				
ANR	3198987	Identifier	FAILURE		3198952	0					
ANR	3198988	IfStatement	if ( nodep -> type == XML_DOCUMENT_NODE || nodep -> type == XML_HTML_DOCUMENT_NODE )		3198952	3					
ANR	3198989	Condition	nodep -> type == XML_DOCUMENT_NODE || nodep -> type == XML_HTML_DOCUMENT_NODE	604:5:15491:15563	3198952	0	True				
ANR	3198990	OrExpression	nodep -> type == XML_DOCUMENT_NODE || nodep -> type == XML_HTML_DOCUMENT_NODE		3198952	0		||			
ANR	3198991	EqualityExpression	nodep -> type == XML_DOCUMENT_NODE		3198952	0		==			
ANR	3198992	PtrMemberAccess	nodep -> type		3198952	0					
ANR	3198993	Identifier	nodep		3198952	0					
ANR	3198994	Identifier	type		3198952	1					
ANR	3198995	Identifier	XML_DOCUMENT_NODE		3198952	1					
ANR	3198996	EqualityExpression	nodep -> type == XML_HTML_DOCUMENT_NODE		3198952	1		==			
ANR	3198997	PtrMemberAccess	nodep -> type		3198952	0					
ANR	3198998	Identifier	nodep		3198952	0					
ANR	3198999	Identifier	type		3198952	1					
ANR	3199000	Identifier	XML_HTML_DOCUMENT_NODE		3198952	1					
ANR	3199001	CompoundStatement		10:80:232:232	3198952	1					
ANR	3199002	ExpressionStatement	ZVAL_NULL ( retval )	605:2:15570:15587	3198952	0	True				
ANR	3199003	CallExpression	ZVAL_NULL ( retval )		3198952	0					
ANR	3199004	Callee	ZVAL_NULL		3198952	0					
ANR	3199005	Identifier	ZVAL_NULL		3198952	0					
ANR	3199006	ArgumentList	retval		3198952	1					
ANR	3199007	Argument	retval		3198952	0					
ANR	3199008	Identifier	retval		3198952	0					
ANR	3199009	ReturnStatement	return SUCCESS ;	606:2:15591:15605	3198952	1	True				
ANR	3199010	Identifier	SUCCESS		3198952	0					
ANR	3199011	ExpressionStatement	docp = nodep -> doc	609:1:15612:15629	3198952	4	True				
ANR	3199012	AssignmentExpression	docp = nodep -> doc		3198952	0		=			
ANR	3199013	Identifier	docp		3198952	0					
ANR	3199014	PtrMemberAccess	nodep -> doc		3198952	1					
ANR	3199015	Identifier	nodep		3198952	0					
ANR	3199016	Identifier	doc		3198952	1					
ANR	3199017	IfStatement	if ( ! docp )		3198952	5					
ANR	3199018	Condition	! docp	610:5:15636:15640	3198952	0	True				
ANR	3199019	UnaryOperationExpression	! docp		3198952	0					
ANR	3199020	UnaryOperator	!		3198952	0					
ANR	3199021	Identifier	docp		3198952	1					
ANR	3199022	CompoundStatement		16:12:309:309	3198952	1					
ANR	3199023	ReturnStatement	return FAILURE ;	611:2:15647:15661	3198952	0	True				
ANR	3199024	Identifier	FAILURE		3198952	0					
ANR	3199025	ExpressionStatement	"php_dom_create_object ( ( xmlNodePtr ) docp , retval , obj )"	614:1:15668:15721	3198952	6	True				
ANR	3199026	CallExpression	"php_dom_create_object ( ( xmlNodePtr ) docp , retval , obj )"		3198952	0					
ANR	3199027	Callee	php_dom_create_object		3198952	0					
ANR	3199028	Identifier	php_dom_create_object		3198952	0					
ANR	3199029	ArgumentList	( xmlNodePtr ) docp		3198952	1					
ANR	3199030	Argument	( xmlNodePtr ) docp		3198952	0					
ANR	3199031	CastExpression	( xmlNodePtr ) docp		3198952	0					
ANR	3199032	CastTarget	xmlNodePtr		3198952	0					
ANR	3199033	Identifier	docp		3198952	1					
ANR	3199034	Argument	retval		3198952	1					
ANR	3199035	Identifier	retval		3198952	0					
ANR	3199036	Argument	obj		3198952	2					
ANR	3199037	Identifier	obj		3198952	0					
ANR	3199038	ReturnStatement	return SUCCESS ;	615:1:15724:15738	3198952	7	True				
ANR	3199039	Identifier	SUCCESS		3198952	0					
ANR	3199040	ReturnType	int		3198952	1					
ANR	3199041	Identifier	dom_node_owner_document_read		3198952	2					
ANR	3199042	ParameterList	"dom_object * obj , zval * retval"		3198952	3					
ANR	3199043	Parameter	dom_object * obj	594:33:15302:15316	3198952	0	True				
ANR	3199044	ParameterType	dom_object *		3198952	0					
ANR	3199045	Identifier	obj		3198952	1					
ANR	3199046	Parameter	zval * retval	594:50:15319:15330	3198952	1	True				
ANR	3199047	ParameterType	zval *		3198952	0					
ANR	3199048	Identifier	retval		3198952	1					
ANR	3199049	CFGEntryNode	ENTRY		3198952		True				
ANR	3199050	CFGExitNode	EXIT		3198952		True				
ANR	3199051	Symbol	nodep -> type		3198952						
ANR	3199052	Symbol	INVALID_STATE_ERR		3198952						
ANR	3199053	Symbol	NULL		3198952						
ANR	3199054	Symbol	SUCCESS		3198952						
ANR	3199055	Symbol	nodep -> doc		3198952						
ANR	3199056	Symbol	XML_DOCUMENT_NODE		3198952						
ANR	3199057	Symbol	nodep		3198952						
ANR	3199058	Symbol	FAILURE		3198952						
ANR	3199059	Symbol	retval		3198952						
ANR	3199060	Symbol	XML_HTML_DOCUMENT_NODE		3198952						
ANR	3199061	Symbol	obj		3198952						
ANR	3199062	Symbol	docp		3198952						
ANR	3199063	Symbol	* nodep		3198952						
ANR	3199064	Symbol	dom_object_get_node		3198952						
ANR	3199065	Function	dom_node_namespace_uri_read	625:0:15910:16450							
ANR	3199066	FunctionDef	"dom_node_namespace_uri_read (dom_object * obj , zval * retval)"		3199065	0					
ANR	3199067	CompoundStatement		626:0:15973:16450	3199065	0					
ANR	3199068	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	627:1:15976:16017	3199065	0	True				
ANR	3199069	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3199065	0					
ANR	3199070	IdentifierDeclType	xmlNode *		3199065	0					
ANR	3199071	Identifier	nodep		3199065	1					
ANR	3199072	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3199065	2		=			
ANR	3199073	Identifier	nodep		3199065	0					
ANR	3199074	CallExpression	dom_object_get_node ( obj )		3199065	1					
ANR	3199075	Callee	dom_object_get_node		3199065	0					
ANR	3199076	Identifier	dom_object_get_node		3199065	0					
ANR	3199077	ArgumentList	obj		3199065	1					
ANR	3199078	Argument	obj		3199065	0					
ANR	3199079	Identifier	obj		3199065	0					
ANR	3199080	IdentifierDeclStatement	char * str = NULL ;	628:1:16020:16036	3199065	1	True				
ANR	3199081	IdentifierDecl	* str = NULL		3199065	0					
ANR	3199082	IdentifierDeclType	char *		3199065	0					
ANR	3199083	Identifier	str		3199065	1					
ANR	3199084	AssignmentExpression	* str = NULL		3199065	2		=			
ANR	3199085	Identifier	NULL		3199065	0					
ANR	3199086	Identifier	NULL		3199065	1					
ANR	3199087	IfStatement	if ( nodep == NULL )		3199065	2					
ANR	3199088	Condition	nodep == NULL	630:5:16044:16056	3199065	0	True				
ANR	3199089	EqualityExpression	nodep == NULL		3199065	0		==			
ANR	3199090	Identifier	nodep		3199065	0					
ANR	3199091	Identifier	NULL		3199065	1					
ANR	3199092	CompoundStatement		5:20:85:85	3199065	1					
ANR	3199093	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	631:2:16063:16104	3199065	0	True				
ANR	3199094	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3199065	0					
ANR	3199095	Callee	php_dom_throw_error		3199065	0					
ANR	3199096	Identifier	php_dom_throw_error		3199065	0					
ANR	3199097	ArgumentList	INVALID_STATE_ERR		3199065	1					
ANR	3199098	Argument	INVALID_STATE_ERR		3199065	0					
ANR	3199099	Identifier	INVALID_STATE_ERR		3199065	0					
ANR	3199100	Argument	0		3199065	1					
ANR	3199101	PrimaryExpression	0		3199065	0					
ANR	3199102	ReturnStatement	return FAILURE ;	632:2:16108:16122	3199065	1	True				
ANR	3199103	Identifier	FAILURE		3199065	0					
ANR	3199104	SwitchStatement	switch ( nodep -> type )		3199065	3					
ANR	3199105	Condition	nodep -> type	635:9:16137:16147	3199065	0	True				
ANR	3199106	PtrMemberAccess	nodep -> type		3199065	0					
ANR	3199107	Identifier	nodep		3199065	0					
ANR	3199108	Identifier	type		3199065	1					
ANR	3199109	CompoundStatement		10:22:176:176	3199065	1					
ANR	3199110	Label	case XML_ELEMENT_NODE :	636:2:16154:16175	3199065	0	True				
ANR	3199111	Identifier	XML_ELEMENT_NODE		3199065	0					
ANR	3199112	Label	case XML_ATTRIBUTE_NODE :	637:2:16179:16202	3199065	1	True				
ANR	3199113	Identifier	XML_ATTRIBUTE_NODE		3199065	0					
ANR	3199114	Label	case XML_NAMESPACE_DECL :	638:2:16206:16229	3199065	2	True				
ANR	3199115	Identifier	XML_NAMESPACE_DECL		3199065	0					
ANR	3199116	IfStatement	if ( nodep -> ns != NULL )		3199065	3					
ANR	3199117	Condition	nodep -> ns != NULL	639:7:16238:16254	3199065	0	True				
ANR	3199118	EqualityExpression	nodep -> ns != NULL		3199065	0		!=			
ANR	3199119	PtrMemberAccess	nodep -> ns		3199065	0					
ANR	3199120	Identifier	nodep		3199065	0					
ANR	3199121	Identifier	ns		3199065	1					
ANR	3199122	Identifier	NULL		3199065	1					
ANR	3199123	CompoundStatement		14:26:283:283	3199065	1					
ANR	3199124	ExpressionStatement	str = ( char * ) nodep -> ns -> href	640:4:16263:16293	3199065	0	True				
ANR	3199125	AssignmentExpression	str = ( char * ) nodep -> ns -> href		3199065	0		=			
ANR	3199126	Identifier	str		3199065	0					
ANR	3199127	CastExpression	( char * ) nodep -> ns -> href		3199065	1					
ANR	3199128	CastTarget	char *		3199065	0					
ANR	3199129	PtrMemberAccess	nodep -> ns -> href		3199065	1					
ANR	3199130	PtrMemberAccess	nodep -> ns		3199065	0					
ANR	3199131	Identifier	nodep		3199065	0					
ANR	3199132	Identifier	ns		3199065	1					
ANR	3199133	Identifier	href		3199065	1					
ANR	3199134	BreakStatement	break ;	642:3:16303:16308	3199065	4	True				
ANR	3199135	Label	default :	643:2:16312:16319	3199065	5	True				
ANR	3199136	Identifier	default		3199065	0					
ANR	3199137	ExpressionStatement	str = NULL	644:3:16324:16334	3199065	6	True				
ANR	3199138	AssignmentExpression	str = NULL		3199065	0		=			
ANR	3199139	Identifier	str		3199065	0					
ANR	3199140	Identifier	NULL		3199065	1					
ANR	3199141	BreakStatement	break ;	645:3:16339:16344	3199065	7	True				
ANR	3199142	IfStatement	if ( str != NULL )		3199065	4					
ANR	3199143	Condition	str != NULL	648:5:16355:16365	3199065	0	True				
ANR	3199144	EqualityExpression	str != NULL		3199065	0		!=			
ANR	3199145	Identifier	str		3199065	0					
ANR	3199146	Identifier	NULL		3199065	1					
ANR	3199147	CompoundStatement		23:18:394:394	3199065	1					
ANR	3199148	ExpressionStatement	"ZVAL_STRING ( retval , str )"	649:2:16372:16396	3199065	0	True				
ANR	3199149	CallExpression	"ZVAL_STRING ( retval , str )"		3199065	0					
ANR	3199150	Callee	ZVAL_STRING		3199065	0					
ANR	3199151	Identifier	ZVAL_STRING		3199065	0					
ANR	3199152	ArgumentList	retval		3199065	1					
ANR	3199153	Argument	retval		3199065	0					
ANR	3199154	Identifier	retval		3199065	0					
ANR	3199155	Argument	str		3199065	1					
ANR	3199156	Identifier	str		3199065	0					
ANR	3199157	ElseStatement	else		3199065	0					
ANR	3199158	CompoundStatement		25:8:432:432	3199065	0					
ANR	3199159	ExpressionStatement	ZVAL_NULL ( retval )	651:2:16410:16427	3199065	0	True				
ANR	3199160	CallExpression	ZVAL_NULL ( retval )		3199065	0					
ANR	3199161	Callee	ZVAL_NULL		3199065	0					
ANR	3199162	Identifier	ZVAL_NULL		3199065	0					
ANR	3199163	ArgumentList	retval		3199065	1					
ANR	3199164	Argument	retval		3199065	0					
ANR	3199165	Identifier	retval		3199065	0					
ANR	3199166	ReturnStatement	return SUCCESS ;	654:1:16434:16448	3199065	5	True				
ANR	3199167	Identifier	SUCCESS		3199065	0					
ANR	3199168	ReturnType	int		3199065	1					
ANR	3199169	Identifier	dom_node_namespace_uri_read		3199065	2					
ANR	3199170	ParameterList	"dom_object * obj , zval * retval"		3199065	3					
ANR	3199171	Parameter	dom_object * obj	625:32:15942:15956	3199065	0	True				
ANR	3199172	ParameterType	dom_object *		3199065	0					
ANR	3199173	Identifier	obj		3199065	1					
ANR	3199174	Parameter	zval * retval	625:49:15959:15970	3199065	1	True				
ANR	3199175	ParameterType	zval *		3199065	0					
ANR	3199176	Identifier	retval		3199065	1					
ANR	3199177	CFGEntryNode	ENTRY		3199065		True				
ANR	3199178	CFGExitNode	EXIT		3199065		True				
ANR	3199179	Symbol	nodep -> type		3199065						
ANR	3199180	Symbol	* * nodep		3199065						
ANR	3199181	Symbol	INVALID_STATE_ERR		3199065						
ANR	3199182	Symbol	* nodep -> ns		3199065						
ANR	3199183	Symbol	NULL		3199065						
ANR	3199184	Symbol	SUCCESS		3199065						
ANR	3199185	Symbol	nodep		3199065						
ANR	3199186	Symbol	FAILURE		3199065						
ANR	3199187	Symbol	retval		3199065						
ANR	3199188	Symbol	str		3199065						
ANR	3199189	Symbol	obj		3199065						
ANR	3199190	Symbol	nodep -> ns		3199065						
ANR	3199191	Symbol	nodep -> ns -> href		3199065						
ANR	3199192	Symbol	* nodep		3199065						
ANR	3199193	Symbol	dom_object_get_node		3199065						
ANR	3199194	Function	dom_node_prefix_read	664:0:16615:17191							
ANR	3199195	FunctionDef	"dom_node_prefix_read (dom_object * obj , zval * retval)"		3199194	0					
ANR	3199196	CompoundStatement		665:0:16671:17191	3199194	0					
ANR	3199197	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	666:1:16674:16715	3199194	0	True				
ANR	3199198	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3199194	0					
ANR	3199199	IdentifierDeclType	xmlNode *		3199194	0					
ANR	3199200	Identifier	nodep		3199194	1					
ANR	3199201	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3199194	2		=			
ANR	3199202	Identifier	nodep		3199194	0					
ANR	3199203	CallExpression	dom_object_get_node ( obj )		3199194	1					
ANR	3199204	Callee	dom_object_get_node		3199194	0					
ANR	3199205	Identifier	dom_object_get_node		3199194	0					
ANR	3199206	ArgumentList	obj		3199194	1					
ANR	3199207	Argument	obj		3199194	0					
ANR	3199208	Identifier	obj		3199194	0					
ANR	3199209	IdentifierDeclStatement	xmlNsPtr ns ;	667:1:16718:16729	3199194	1	True				
ANR	3199210	IdentifierDecl	ns		3199194	0					
ANR	3199211	IdentifierDeclType	xmlNsPtr		3199194	0					
ANR	3199212	Identifier	ns		3199194	1					
ANR	3199213	IdentifierDeclStatement	char * str = NULL ;	668:1:16732:16748	3199194	2	True				
ANR	3199214	IdentifierDecl	* str = NULL		3199194	0					
ANR	3199215	IdentifierDeclType	char *		3199194	0					
ANR	3199216	Identifier	str		3199194	1					
ANR	3199217	AssignmentExpression	* str = NULL		3199194	2		=			
ANR	3199218	Identifier	NULL		3199194	0					
ANR	3199219	Identifier	NULL		3199194	1					
ANR	3199220	IfStatement	if ( nodep == NULL )		3199194	3					
ANR	3199221	Condition	nodep == NULL	670:5:16756:16768	3199194	0	True				
ANR	3199222	EqualityExpression	nodep == NULL		3199194	0		==			
ANR	3199223	Identifier	nodep		3199194	0					
ANR	3199224	Identifier	NULL		3199194	1					
ANR	3199225	CompoundStatement		6:20:99:99	3199194	1					
ANR	3199226	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	671:2:16775:16816	3199194	0	True				
ANR	3199227	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3199194	0					
ANR	3199228	Callee	php_dom_throw_error		3199194	0					
ANR	3199229	Identifier	php_dom_throw_error		3199194	0					
ANR	3199230	ArgumentList	INVALID_STATE_ERR		3199194	1					
ANR	3199231	Argument	INVALID_STATE_ERR		3199194	0					
ANR	3199232	Identifier	INVALID_STATE_ERR		3199194	0					
ANR	3199233	Argument	0		3199194	1					
ANR	3199234	PrimaryExpression	0		3199194	0					
ANR	3199235	ReturnStatement	return FAILURE ;	672:2:16820:16834	3199194	1	True				
ANR	3199236	Identifier	FAILURE		3199194	0					
ANR	3199237	SwitchStatement	switch ( nodep -> type )		3199194	4					
ANR	3199238	Condition	nodep -> type	675:9:16849:16859	3199194	0	True				
ANR	3199239	PtrMemberAccess	nodep -> type		3199194	0					
ANR	3199240	Identifier	nodep		3199194	0					
ANR	3199241	Identifier	type		3199194	1					
ANR	3199242	CompoundStatement		11:22:190:190	3199194	1					
ANR	3199243	Label	case XML_ELEMENT_NODE :	676:2:16866:16887	3199194	0	True				
ANR	3199244	Identifier	XML_ELEMENT_NODE		3199194	0					
ANR	3199245	Label	case XML_ATTRIBUTE_NODE :	677:2:16891:16914	3199194	1	True				
ANR	3199246	Identifier	XML_ATTRIBUTE_NODE		3199194	0					
ANR	3199247	Label	case XML_NAMESPACE_DECL :	678:2:16918:16941	3199194	2	True				
ANR	3199248	Identifier	XML_NAMESPACE_DECL		3199194	0					
ANR	3199249	ExpressionStatement	ns = nodep -> ns	679:3:16946:16960	3199194	3	True				
ANR	3199250	AssignmentExpression	ns = nodep -> ns		3199194	0		=			
ANR	3199251	Identifier	ns		3199194	0					
ANR	3199252	PtrMemberAccess	nodep -> ns		3199194	1					
ANR	3199253	Identifier	nodep		3199194	0					
ANR	3199254	Identifier	ns		3199194	1					
ANR	3199255	IfStatement	if ( ns != NULL && ns -> prefix )		3199194	4					
ANR	3199256	Condition	ns != NULL && ns -> prefix	680:7:16969:16992	3199194	0	True				
ANR	3199257	AndExpression	ns != NULL && ns -> prefix		3199194	0		&&			
ANR	3199258	EqualityExpression	ns != NULL		3199194	0		!=			
ANR	3199259	Identifier	ns		3199194	0					
ANR	3199260	Identifier	NULL		3199194	1					
ANR	3199261	PtrMemberAccess	ns -> prefix		3199194	1					
ANR	3199262	Identifier	ns		3199194	0					
ANR	3199263	Identifier	prefix		3199194	1					
ANR	3199264	CompoundStatement		16:33:323:323	3199194	1					
ANR	3199265	ExpressionStatement	str = ( char * ) ns -> prefix	681:4:17001:17026	3199194	0	True				
ANR	3199266	AssignmentExpression	str = ( char * ) ns -> prefix		3199194	0		=			
ANR	3199267	Identifier	str		3199194	0					
ANR	3199268	CastExpression	( char * ) ns -> prefix		3199194	1					
ANR	3199269	CastTarget	char *		3199194	0					
ANR	3199270	PtrMemberAccess	ns -> prefix		3199194	1					
ANR	3199271	Identifier	ns		3199194	0					
ANR	3199272	Identifier	prefix		3199194	1					
ANR	3199273	BreakStatement	break ;	683:3:17036:17041	3199194	5	True				
ANR	3199274	Label	default :	684:2:17045:17052	3199194	6	True				
ANR	3199275	Identifier	default		3199194	0					
ANR	3199276	ExpressionStatement	str = NULL	685:3:17057:17067	3199194	7	True				
ANR	3199277	AssignmentExpression	str = NULL		3199194	0		=			
ANR	3199278	Identifier	str		3199194	0					
ANR	3199279	Identifier	NULL		3199194	1					
ANR	3199280	BreakStatement	break ;	686:3:17072:17077	3199194	8	True				
ANR	3199281	IfStatement	if ( str == NULL )		3199194	5					
ANR	3199282	Condition	str == NULL	689:5:17088:17098	3199194	0	True				
ANR	3199283	EqualityExpression	str == NULL		3199194	0		==			
ANR	3199284	Identifier	str		3199194	0					
ANR	3199285	Identifier	NULL		3199194	1					
ANR	3199286	CompoundStatement		25:18:429:429	3199194	1					
ANR	3199287	ExpressionStatement	ZVAL_EMPTY_STRING ( retval )	690:2:17105:17130	3199194	0	True				
ANR	3199288	CallExpression	ZVAL_EMPTY_STRING ( retval )		3199194	0					
ANR	3199289	Callee	ZVAL_EMPTY_STRING		3199194	0					
ANR	3199290	Identifier	ZVAL_EMPTY_STRING		3199194	0					
ANR	3199291	ArgumentList	retval		3199194	1					
ANR	3199292	Argument	retval		3199194	0					
ANR	3199293	Identifier	retval		3199194	0					
ANR	3199294	ElseStatement	else		3199194	0					
ANR	3199295	CompoundStatement		27:8:468:468	3199194	0					
ANR	3199296	ExpressionStatement	"ZVAL_STRING ( retval , str )"	692:2:17144:17168	3199194	0	True				
ANR	3199297	CallExpression	"ZVAL_STRING ( retval , str )"		3199194	0					
ANR	3199298	Callee	ZVAL_STRING		3199194	0					
ANR	3199299	Identifier	ZVAL_STRING		3199194	0					
ANR	3199300	ArgumentList	retval		3199194	1					
ANR	3199301	Argument	retval		3199194	0					
ANR	3199302	Identifier	retval		3199194	0					
ANR	3199303	Argument	str		3199194	1					
ANR	3199304	Identifier	str		3199194	0					
ANR	3199305	ReturnStatement	return SUCCESS ;	694:1:17174:17188	3199194	6	True				
ANR	3199306	Identifier	SUCCESS		3199194	0					
ANR	3199307	ReturnType	int		3199194	1					
ANR	3199308	Identifier	dom_node_prefix_read		3199194	2					
ANR	3199309	ParameterList	"dom_object * obj , zval * retval"		3199194	3					
ANR	3199310	Parameter	dom_object * obj	664:25:16640:16654	3199194	0	True				
ANR	3199311	ParameterType	dom_object *		3199194	0					
ANR	3199312	Identifier	obj		3199194	1					
ANR	3199313	Parameter	zval * retval	664:42:16657:16668	3199194	1	True				
ANR	3199314	ParameterType	zval *		3199194	0					
ANR	3199315	Identifier	retval		3199194	1					
ANR	3199316	CFGEntryNode	ENTRY		3199194		True				
ANR	3199317	CFGExitNode	EXIT		3199194		True				
ANR	3199318	Symbol	nodep -> type		3199194						
ANR	3199319	Symbol	INVALID_STATE_ERR		3199194						
ANR	3199320	Symbol	NULL		3199194						
ANR	3199321	Symbol	SUCCESS		3199194						
ANR	3199322	Symbol	ns		3199194						
ANR	3199323	Symbol	* ns		3199194						
ANR	3199324	Symbol	nodep		3199194						
ANR	3199325	Symbol	FAILURE		3199194						
ANR	3199326	Symbol	ns -> prefix		3199194						
ANR	3199327	Symbol	retval		3199194						
ANR	3199328	Symbol	str		3199194						
ANR	3199329	Symbol	obj		3199194						
ANR	3199330	Symbol	nodep -> ns		3199194						
ANR	3199331	Symbol	* nodep		3199194						
ANR	3199332	Symbol	dom_object_get_node		3199194						
ANR	3199333	Function	dom_node_prefix_write	698:0:17194:18868							
ANR	3199334	FunctionDef	"dom_node_prefix_write (dom_object * obj , zval * newval)"		3199333	0					
ANR	3199335	CompoundStatement		699:0:17251:18868	3199333	0					
ANR	3199336	IdentifierDeclStatement	zend_string * str ;	700:1:17254:17270	3199333	0	True				
ANR	3199337	IdentifierDecl	* str		3199333	0					
ANR	3199338	IdentifierDeclType	zend_string *		3199333	0					
ANR	3199339	Identifier	str		3199333	1					
ANR	3199340	IdentifierDeclStatement	"xmlNode * nodep , * nsnode = NULL ;"	701:1:17273:17303	3199333	1	True				
ANR	3199341	IdentifierDecl	* nodep		3199333	0					
ANR	3199342	IdentifierDeclType	xmlNode *		3199333	0					
ANR	3199343	Identifier	nodep		3199333	1					
ANR	3199344	IdentifierDecl	* nsnode = NULL		3199333	1					
ANR	3199345	IdentifierDeclType	xmlNode *		3199333	0					
ANR	3199346	Identifier	nsnode		3199333	1					
ANR	3199347	AssignmentExpression	* nsnode = NULL		3199333	2		=			
ANR	3199348	Identifier	NULL		3199333	0					
ANR	3199349	Identifier	NULL		3199333	1					
ANR	3199350	IdentifierDeclStatement	"xmlNsPtr ns = NULL , curns ;"	702:1:17306:17331	3199333	2	True				
ANR	3199351	IdentifierDecl	ns = NULL		3199333	0					
ANR	3199352	IdentifierDeclType	xmlNsPtr		3199333	0					
ANR	3199353	Identifier	ns		3199333	1					
ANR	3199354	AssignmentExpression	ns = NULL		3199333	2		=			
ANR	3199355	Identifier	NULL		3199333	0					
ANR	3199356	Identifier	NULL		3199333	1					
ANR	3199357	IdentifierDecl	curns		3199333	1					
ANR	3199358	IdentifierDeclType	xmlNsPtr		3199333	0					
ANR	3199359	Identifier	curns		3199333	1					
ANR	3199360	IdentifierDeclStatement	char * strURI ;	703:1:17334:17346	3199333	3	True				
ANR	3199361	IdentifierDecl	* strURI		3199333	0					
ANR	3199362	IdentifierDeclType	char *		3199333	0					
ANR	3199363	Identifier	strURI		3199333	1					
ANR	3199364	IdentifierDeclStatement	char * prefix ;	704:1:17349:17361	3199333	4	True				
ANR	3199365	IdentifierDecl	* prefix		3199333	0					
ANR	3199366	IdentifierDeclType	char *		3199333	0					
ANR	3199367	Identifier	prefix		3199333	1					
ANR	3199368	ExpressionStatement	nodep = dom_object_get_node ( obj )	706:1:17365:17397	3199333	5	True				
ANR	3199369	AssignmentExpression	nodep = dom_object_get_node ( obj )		3199333	0		=			
ANR	3199370	Identifier	nodep		3199333	0					
ANR	3199371	CallExpression	dom_object_get_node ( obj )		3199333	1					
ANR	3199372	Callee	dom_object_get_node		3199333	0					
ANR	3199373	Identifier	dom_object_get_node		3199333	0					
ANR	3199374	ArgumentList	obj		3199333	1					
ANR	3199375	Argument	obj		3199333	0					
ANR	3199376	Identifier	obj		3199333	0					
ANR	3199377	IfStatement	if ( nodep == NULL )		3199333	6					
ANR	3199378	Condition	nodep == NULL	708:5:17405:17417	3199333	0	True				
ANR	3199379	EqualityExpression	nodep == NULL		3199333	0		==			
ANR	3199380	Identifier	nodep		3199333	0					
ANR	3199381	Identifier	NULL		3199333	1					
ANR	3199382	CompoundStatement		10:20:168:168	3199333	1					
ANR	3199383	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	709:2:17424:17465	3199333	0	True				
ANR	3199384	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3199333	0					
ANR	3199385	Callee	php_dom_throw_error		3199333	0					
ANR	3199386	Identifier	php_dom_throw_error		3199333	0					
ANR	3199387	ArgumentList	INVALID_STATE_ERR		3199333	1					
ANR	3199388	Argument	INVALID_STATE_ERR		3199333	0					
ANR	3199389	Identifier	INVALID_STATE_ERR		3199333	0					
ANR	3199390	Argument	0		3199333	1					
ANR	3199391	PrimaryExpression	0		3199333	0					
ANR	3199392	ReturnStatement	return FAILURE ;	710:2:17469:17483	3199333	1	True				
ANR	3199393	Identifier	FAILURE		3199333	0					
ANR	3199394	SwitchStatement	switch ( nodep -> type )		3199333	7					
ANR	3199395	Condition	nodep -> type	713:9:17498:17508	3199333	0	True				
ANR	3199396	PtrMemberAccess	nodep -> type		3199333	0					
ANR	3199397	Identifier	nodep		3199333	0					
ANR	3199398	Identifier	type		3199333	1					
ANR	3199399	CompoundStatement		15:22:259:259	3199333	1					
ANR	3199400	Label	case XML_ELEMENT_NODE :	714:2:17515:17536	3199333	0	True				
ANR	3199401	Identifier	XML_ELEMENT_NODE		3199333	0					
ANR	3199402	ExpressionStatement	nsnode = nodep	715:3:17541:17555	3199333	1	True				
ANR	3199403	AssignmentExpression	nsnode = nodep		3199333	0		=			
ANR	3199404	Identifier	nsnode		3199333	0					
ANR	3199405	Identifier	nodep		3199333	1					
ANR	3199406	Label	case XML_ATTRIBUTE_NODE :	716:2:17559:17582	3199333	2	True				
ANR	3199407	Identifier	XML_ATTRIBUTE_NODE		3199333	0					
ANR	3199408	IfStatement	if ( nsnode == NULL )		3199333	3					
ANR	3199409	Condition	nsnode == NULL	717:7:17591:17604	3199333	0	True				
ANR	3199410	EqualityExpression	nsnode == NULL		3199333	0		==			
ANR	3199411	Identifier	nsnode		3199333	0					
ANR	3199412	Identifier	NULL		3199333	1					
ANR	3199413	CompoundStatement		19:23:355:355	3199333	1					
ANR	3199414	ExpressionStatement	nsnode = nodep -> parent	718:4:17613:17635	3199333	0	True				
ANR	3199415	AssignmentExpression	nsnode = nodep -> parent		3199333	0		=			
ANR	3199416	Identifier	nsnode		3199333	0					
ANR	3199417	PtrMemberAccess	nodep -> parent		3199333	1					
ANR	3199418	Identifier	nodep		3199333	0					
ANR	3199419	Identifier	parent		3199333	1					
ANR	3199420	IfStatement	if ( nsnode == NULL )		3199333	1					
ANR	3199421	Condition	nsnode == NULL	719:8:17645:17658	3199333	0	True				
ANR	3199422	EqualityExpression	nsnode == NULL		3199333	0		==			
ANR	3199423	Identifier	nsnode		3199333	0					
ANR	3199424	Identifier	NULL		3199333	1					
ANR	3199425	CompoundStatement		21:24:409:409	3199333	1					
ANR	3199426	ExpressionStatement	nsnode = xmlDocGetRootElement ( nodep -> doc )	720:5:17668:17709	3199333	0	True				
ANR	3199427	AssignmentExpression	nsnode = xmlDocGetRootElement ( nodep -> doc )		3199333	0		=			
ANR	3199428	Identifier	nsnode		3199333	0					
ANR	3199429	CallExpression	xmlDocGetRootElement ( nodep -> doc )		3199333	1					
ANR	3199430	Callee	xmlDocGetRootElement		3199333	0					
ANR	3199431	Identifier	xmlDocGetRootElement		3199333	0					
ANR	3199432	ArgumentList	nodep -> doc		3199333	1					
ANR	3199433	Argument	nodep -> doc		3199333	0					
ANR	3199434	PtrMemberAccess	nodep -> doc		3199333	0					
ANR	3199435	Identifier	nodep		3199333	0					
ANR	3199436	Identifier	doc		3199333	1					
ANR	3199437	ExpressionStatement	str = zval_get_string ( newval )	723:3:17725:17754	3199333	4	True				
ANR	3199438	AssignmentExpression	str = zval_get_string ( newval )		3199333	0		=			
ANR	3199439	Identifier	str		3199333	0					
ANR	3199440	CallExpression	zval_get_string ( newval )		3199333	1					
ANR	3199441	Callee	zval_get_string		3199333	0					
ANR	3199442	Identifier	zval_get_string		3199333	0					
ANR	3199443	ArgumentList	newval		3199333	1					
ANR	3199444	Argument	newval		3199333	0					
ANR	3199445	Identifier	newval		3199333	0					
ANR	3199446	ExpressionStatement	prefix = ZSTR_VAL ( str )	724:3:17759:17781	3199333	5	True				
ANR	3199447	AssignmentExpression	prefix = ZSTR_VAL ( str )		3199333	0		=			
ANR	3199448	Identifier	prefix		3199333	0					
ANR	3199449	CallExpression	ZSTR_VAL ( str )		3199333	1					
ANR	3199450	Callee	ZSTR_VAL		3199333	0					
ANR	3199451	Identifier	ZSTR_VAL		3199333	0					
ANR	3199452	ArgumentList	str		3199333	1					
ANR	3199453	Argument	str		3199333	0					
ANR	3199454	Identifier	str		3199333	0					
ANR	3199455	IfStatement	"if ( nsnode && nodep -> ns != NULL && ! xmlStrEqual ( nodep -> ns -> prefix , ( xmlChar * ) prefix ) )"		3199333	6					
ANR	3199456	Condition	"nsnode && nodep -> ns != NULL && ! xmlStrEqual ( nodep -> ns -> prefix , ( xmlChar * ) prefix )"	725:7:17790:17870	3199333	0	True				
ANR	3199457	AndExpression	"nsnode && nodep -> ns != NULL && ! xmlStrEqual ( nodep -> ns -> prefix , ( xmlChar * ) prefix )"		3199333	0		&&			
ANR	3199458	Identifier	nsnode		3199333	0					
ANR	3199459	AndExpression	"nodep -> ns != NULL && ! xmlStrEqual ( nodep -> ns -> prefix , ( xmlChar * ) prefix )"		3199333	1		&&			
ANR	3199460	EqualityExpression	nodep -> ns != NULL		3199333	0		!=			
ANR	3199461	PtrMemberAccess	nodep -> ns		3199333	0					
ANR	3199462	Identifier	nodep		3199333	0					
ANR	3199463	Identifier	ns		3199333	1					
ANR	3199464	Identifier	NULL		3199333	1					
ANR	3199465	UnaryOperationExpression	"! xmlStrEqual ( nodep -> ns -> prefix , ( xmlChar * ) prefix )"		3199333	1					
ANR	3199466	UnaryOperator	!		3199333	0					
ANR	3199467	CallExpression	"xmlStrEqual ( nodep -> ns -> prefix , ( xmlChar * ) prefix )"		3199333	1					
ANR	3199468	Callee	xmlStrEqual		3199333	0					
ANR	3199469	Identifier	xmlStrEqual		3199333	0					
ANR	3199470	ArgumentList	nodep -> ns -> prefix		3199333	1					
ANR	3199471	Argument	nodep -> ns -> prefix		3199333	0					
ANR	3199472	PtrMemberAccess	nodep -> ns -> prefix		3199333	0					
ANR	3199473	PtrMemberAccess	nodep -> ns		3199333	0					
ANR	3199474	Identifier	nodep		3199333	0					
ANR	3199475	Identifier	ns		3199333	1					
ANR	3199476	Identifier	prefix		3199333	1					
ANR	3199477	Argument	( xmlChar * ) prefix		3199333	1					
ANR	3199478	CastExpression	( xmlChar * ) prefix		3199333	0					
ANR	3199479	CastTarget	xmlChar *		3199333	0					
ANR	3199480	Identifier	prefix		3199333	1					
ANR	3199481	CompoundStatement		27:90:621:621	3199333	1					
ANR	3199482	ExpressionStatement	strURI = ( char * ) nodep -> ns -> href	726:4:17879:17912	3199333	0	True				
ANR	3199483	AssignmentExpression	strURI = ( char * ) nodep -> ns -> href		3199333	0		=			
ANR	3199484	Identifier	strURI		3199333	0					
ANR	3199485	CastExpression	( char * ) nodep -> ns -> href		3199333	1					
ANR	3199486	CastTarget	char *		3199333	0					
ANR	3199487	PtrMemberAccess	nodep -> ns -> href		3199333	1					
ANR	3199488	PtrMemberAccess	nodep -> ns		3199333	0					
ANR	3199489	Identifier	nodep		3199333	0					
ANR	3199490	Identifier	ns		3199333	1					
ANR	3199491	Identifier	href		3199333	1					
ANR	3199492	IfStatement	"if ( strURI == NULL || ( ! strcmp ( prefix , ""xml"" ) && strcmp ( strURI , ( char * ) XML_XML_NAMESPACE ) ) || ( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( prefix , ""xmlns"" ) && strcmp ( strURI , ( char * ) DOM_XMLNS_NAMESPACE ) ) || ( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( ( char * ) nodep -> name , ""xmlns"" ) ) )"		3199333	1					
ANR	3199493	Condition	"strURI == NULL || ( ! strcmp ( prefix , ""xml"" ) && strcmp ( strURI , ( char * ) XML_XML_NAMESPACE ) ) || ( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( prefix , ""xmlns"" ) && strcmp ( strURI , ( char * ) DOM_XMLNS_NAMESPACE ) ) || ( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( ( char * ) nodep -> name , ""xmlns"" ) )"	727:8:17922:18226	3199333	0	True				
ANR	3199494	OrExpression	"strURI == NULL || ( ! strcmp ( prefix , ""xml"" ) && strcmp ( strURI , ( char * ) XML_XML_NAMESPACE ) ) || ( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( prefix , ""xmlns"" ) && strcmp ( strURI , ( char * ) DOM_XMLNS_NAMESPACE ) ) || ( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( ( char * ) nodep -> name , ""xmlns"" ) )"		3199333	0		||			
ANR	3199495	EqualityExpression	strURI == NULL		3199333	0		==			
ANR	3199496	Identifier	strURI		3199333	0					
ANR	3199497	Identifier	NULL		3199333	1					
ANR	3199498	OrExpression	"( ! strcmp ( prefix , ""xml"" ) && strcmp ( strURI , ( char * ) XML_XML_NAMESPACE ) ) || ( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( prefix , ""xmlns"" ) && strcmp ( strURI , ( char * ) DOM_XMLNS_NAMESPACE ) ) || ( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( ( char * ) nodep -> name , ""xmlns"" ) )"		3199333	1		||			
ANR	3199499	AndExpression	"! strcmp ( prefix , ""xml"" ) && strcmp ( strURI , ( char * ) XML_XML_NAMESPACE )"		3199333	0		&&			
ANR	3199500	UnaryOperationExpression	"! strcmp ( prefix , ""xml"" )"		3199333	0					
ANR	3199501	UnaryOperator	!		3199333	0					
ANR	3199502	CallExpression	"strcmp ( prefix , ""xml"" )"		3199333	1					
ANR	3199503	Callee	strcmp		3199333	0					
ANR	3199504	Identifier	strcmp		3199333	0					
ANR	3199505	ArgumentList	prefix		3199333	1					
ANR	3199506	Argument	prefix		3199333	0					
ANR	3199507	Identifier	prefix		3199333	0					
ANR	3199508	Argument	"""xml"""		3199333	1					
ANR	3199509	PrimaryExpression	"""xml"""		3199333	0					
ANR	3199510	CallExpression	"strcmp ( strURI , ( char * ) XML_XML_NAMESPACE )"		3199333	1					
ANR	3199511	Callee	strcmp		3199333	0					
ANR	3199512	Identifier	strcmp		3199333	0					
ANR	3199513	ArgumentList	strURI		3199333	1					
ANR	3199514	Argument	strURI		3199333	0					
ANR	3199515	Identifier	strURI		3199333	0					
ANR	3199516	Argument	( char * ) XML_XML_NAMESPACE		3199333	1					
ANR	3199517	CastExpression	( char * ) XML_XML_NAMESPACE		3199333	0					
ANR	3199518	CastTarget	char *		3199333	0					
ANR	3199519	Identifier	XML_XML_NAMESPACE		3199333	1					
ANR	3199520	OrExpression	"( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( prefix , ""xmlns"" ) && strcmp ( strURI , ( char * ) DOM_XMLNS_NAMESPACE ) ) || ( nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( ( char * ) nodep -> name , ""xmlns"" ) )"		3199333	1		||			
ANR	3199521	AndExpression	"nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( prefix , ""xmlns"" ) && strcmp ( strURI , ( char * ) DOM_XMLNS_NAMESPACE )"		3199333	0		&&			
ANR	3199522	EqualityExpression	nodep -> type == XML_ATTRIBUTE_NODE		3199333	0		==			
ANR	3199523	PtrMemberAccess	nodep -> type		3199333	0					
ANR	3199524	Identifier	nodep		3199333	0					
ANR	3199525	Identifier	type		3199333	1					
ANR	3199526	Identifier	XML_ATTRIBUTE_NODE		3199333	1					
ANR	3199527	AndExpression	"! strcmp ( prefix , ""xmlns"" ) && strcmp ( strURI , ( char * ) DOM_XMLNS_NAMESPACE )"		3199333	1		&&			
ANR	3199528	UnaryOperationExpression	"! strcmp ( prefix , ""xmlns"" )"		3199333	0					
ANR	3199529	UnaryOperator	!		3199333	0					
ANR	3199530	CallExpression	"strcmp ( prefix , ""xmlns"" )"		3199333	1					
ANR	3199531	Callee	strcmp		3199333	0					
ANR	3199532	Identifier	strcmp		3199333	0					
ANR	3199533	ArgumentList	prefix		3199333	1					
ANR	3199534	Argument	prefix		3199333	0					
ANR	3199535	Identifier	prefix		3199333	0					
ANR	3199536	Argument	"""xmlns"""		3199333	1					
ANR	3199537	PrimaryExpression	"""xmlns"""		3199333	0					
ANR	3199538	CallExpression	"strcmp ( strURI , ( char * ) DOM_XMLNS_NAMESPACE )"		3199333	1					
ANR	3199539	Callee	strcmp		3199333	0					
ANR	3199540	Identifier	strcmp		3199333	0					
ANR	3199541	ArgumentList	strURI		3199333	1					
ANR	3199542	Argument	strURI		3199333	0					
ANR	3199543	Identifier	strURI		3199333	0					
ANR	3199544	Argument	( char * ) DOM_XMLNS_NAMESPACE		3199333	1					
ANR	3199545	CastExpression	( char * ) DOM_XMLNS_NAMESPACE		3199333	0					
ANR	3199546	CastTarget	char *		3199333	0					
ANR	3199547	Identifier	DOM_XMLNS_NAMESPACE		3199333	1					
ANR	3199548	AndExpression	"nodep -> type == XML_ATTRIBUTE_NODE && ! strcmp ( ( char * ) nodep -> name , ""xmlns"" )"		3199333	1		&&			
ANR	3199549	EqualityExpression	nodep -> type == XML_ATTRIBUTE_NODE		3199333	0		==			
ANR	3199550	PtrMemberAccess	nodep -> type		3199333	0					
ANR	3199551	Identifier	nodep		3199333	0					
ANR	3199552	Identifier	type		3199333	1					
ANR	3199553	Identifier	XML_ATTRIBUTE_NODE		3199333	1					
ANR	3199554	UnaryOperationExpression	"! strcmp ( ( char * ) nodep -> name , ""xmlns"" )"		3199333	1					
ANR	3199555	UnaryOperator	!		3199333	0					
ANR	3199556	CallExpression	"strcmp ( ( char * ) nodep -> name , ""xmlns"" )"		3199333	1					
ANR	3199557	Callee	strcmp		3199333	0					
ANR	3199558	Identifier	strcmp		3199333	0					
ANR	3199559	ArgumentList	( char * ) nodep -> name		3199333	1					
ANR	3199560	Argument	( char * ) nodep -> name		3199333	0					
ANR	3199561	CastExpression	( char * ) nodep -> name		3199333	0					
ANR	3199562	CastTarget	char *		3199333	0					
ANR	3199563	PtrMemberAccess	nodep -> name		3199333	1					
ANR	3199564	Identifier	nodep		3199333	0					
ANR	3199565	Identifier	name		3199333	1					
ANR	3199566	Argument	"""xmlns"""		3199333	1					
ANR	3199567	PrimaryExpression	"""xmlns"""		3199333	0					
ANR	3199568	CompoundStatement		33:84:977:977	3199333	1					
ANR	3199569	ExpressionStatement	ns = NULL	732:5:18236:18245	3199333	0	True				
ANR	3199570	AssignmentExpression	ns = NULL		3199333	0		=			
ANR	3199571	Identifier	ns		3199333	0					
ANR	3199572	Identifier	NULL		3199333	1					
ANR	3199573	ElseStatement	else		3199333	0					
ANR	3199574	CompoundStatement		35:11:1006:1006	3199333	0					
ANR	3199575	ExpressionStatement	curns = nsnode -> nsDef	734:5:18265:18286	3199333	0	True				
ANR	3199576	AssignmentExpression	curns = nsnode -> nsDef		3199333	0		=			
ANR	3199577	Identifier	curns		3199333	0					
ANR	3199578	PtrMemberAccess	nsnode -> nsDef		3199333	1					
ANR	3199579	Identifier	nsnode		3199333	0					
ANR	3199580	Identifier	nsDef		3199333	1					
ANR	3199581	WhileStatement	while ( curns != NULL )		3199333	1					
ANR	3199582	Condition	curns != NULL	735:12:18300:18312	3199333	0	True				
ANR	3199583	EqualityExpression	curns != NULL		3199333	0		!=			
ANR	3199584	Identifier	curns		3199333	0					
ANR	3199585	Identifier	NULL		3199333	1					
ANR	3199586	CompoundStatement		37:27:1063:1063	3199333	1					
ANR	3199587	IfStatement	"if ( xmlStrEqual ( ( xmlChar * ) prefix , curns -> prefix ) && xmlStrEqual ( nodep -> ns -> href , curns -> href ) )"		3199333	0					
ANR	3199588	Condition	"xmlStrEqual ( ( xmlChar * ) prefix , curns -> prefix ) && xmlStrEqual ( nodep -> ns -> href , curns -> href )"	736:10:18327:18416	3199333	0	True				
ANR	3199589	AndExpression	"xmlStrEqual ( ( xmlChar * ) prefix , curns -> prefix ) && xmlStrEqual ( nodep -> ns -> href , curns -> href )"		3199333	0		&&			
ANR	3199590	CallExpression	"xmlStrEqual ( ( xmlChar * ) prefix , curns -> prefix )"		3199333	0					
ANR	3199591	Callee	xmlStrEqual		3199333	0					
ANR	3199592	Identifier	xmlStrEqual		3199333	0					
ANR	3199593	ArgumentList	( xmlChar * ) prefix		3199333	1					
ANR	3199594	Argument	( xmlChar * ) prefix		3199333	0					
ANR	3199595	CastExpression	( xmlChar * ) prefix		3199333	0					
ANR	3199596	CastTarget	xmlChar *		3199333	0					
ANR	3199597	Identifier	prefix		3199333	1					
ANR	3199598	Argument	curns -> prefix		3199333	1					
ANR	3199599	PtrMemberAccess	curns -> prefix		3199333	0					
ANR	3199600	Identifier	curns		3199333	0					
ANR	3199601	Identifier	prefix		3199333	1					
ANR	3199602	CallExpression	"xmlStrEqual ( nodep -> ns -> href , curns -> href )"		3199333	1					
ANR	3199603	Callee	xmlStrEqual		3199333	0					
ANR	3199604	Identifier	xmlStrEqual		3199333	0					
ANR	3199605	ArgumentList	nodep -> ns -> href		3199333	1					
ANR	3199606	Argument	nodep -> ns -> href		3199333	0					
ANR	3199607	PtrMemberAccess	nodep -> ns -> href		3199333	0					
ANR	3199608	PtrMemberAccess	nodep -> ns		3199333	0					
ANR	3199609	Identifier	nodep		3199333	0					
ANR	3199610	Identifier	ns		3199333	1					
ANR	3199611	Identifier	href		3199333	1					
ANR	3199612	Argument	curns -> href		3199333	1					
ANR	3199613	PtrMemberAccess	curns -> href		3199333	0					
ANR	3199614	Identifier	curns		3199333	0					
ANR	3199615	Identifier	href		3199333	1					
ANR	3199616	CompoundStatement		38:102:1167:1167	3199333	1					
ANR	3199617	ExpressionStatement	ns = curns	737:7:18428:18438	3199333	0	True				
ANR	3199618	AssignmentExpression	ns = curns		3199333	0		=			
ANR	3199619	Identifier	ns		3199333	0					
ANR	3199620	Identifier	curns		3199333	1					
ANR	3199621	BreakStatement	break ;	738:7:18447:18452	3199333	1	True				
ANR	3199622	ExpressionStatement	curns = curns -> next	740:6:18468:18487	3199333	1	True				
ANR	3199623	AssignmentExpression	curns = curns -> next		3199333	0		=			
ANR	3199624	Identifier	curns		3199333	0					
ANR	3199625	PtrMemberAccess	curns -> next		3199333	1					
ANR	3199626	Identifier	curns		3199333	0					
ANR	3199627	Identifier	next		3199333	1					
ANR	3199628	IfStatement	if ( ns == NULL )		3199333	2					
ANR	3199629	Condition	ns == NULL	742:9:18505:18514	3199333	0	True				
ANR	3199630	EqualityExpression	ns == NULL		3199333	0		==			
ANR	3199631	Identifier	ns		3199333	0					
ANR	3199632	Identifier	NULL		3199333	1					
ANR	3199633	CompoundStatement		44:21:1265:1265	3199333	1					
ANR	3199634	ExpressionStatement	"ns = xmlNewNs ( nsnode , nodep -> ns -> href , ( xmlChar * ) prefix )"	743:6:18525:18582	3199333	0	True				
ANR	3199635	AssignmentExpression	"ns = xmlNewNs ( nsnode , nodep -> ns -> href , ( xmlChar * ) prefix )"		3199333	0		=			
ANR	3199636	Identifier	ns		3199333	0					
ANR	3199637	CallExpression	"xmlNewNs ( nsnode , nodep -> ns -> href , ( xmlChar * ) prefix )"		3199333	1					
ANR	3199638	Callee	xmlNewNs		3199333	0					
ANR	3199639	Identifier	xmlNewNs		3199333	0					
ANR	3199640	ArgumentList	nsnode		3199333	1					
ANR	3199641	Argument	nsnode		3199333	0					
ANR	3199642	Identifier	nsnode		3199333	0					
ANR	3199643	Argument	nodep -> ns -> href		3199333	1					
ANR	3199644	PtrMemberAccess	nodep -> ns -> href		3199333	0					
ANR	3199645	PtrMemberAccess	nodep -> ns		3199333	0					
ANR	3199646	Identifier	nodep		3199333	0					
ANR	3199647	Identifier	ns		3199333	1					
ANR	3199648	Identifier	href		3199333	1					
ANR	3199649	Argument	( xmlChar * ) prefix		3199333	2					
ANR	3199650	CastExpression	( xmlChar * ) prefix		3199333	0					
ANR	3199651	CastTarget	xmlChar *		3199333	0					
ANR	3199652	Identifier	prefix		3199333	1					
ANR	3199653	IfStatement	if ( ns == NULL )		3199333	2					
ANR	3199654	Condition	ns == NULL	747:8:18606:18615	3199333	0	True				
ANR	3199655	EqualityExpression	ns == NULL		3199333	0		==			
ANR	3199656	Identifier	ns		3199333	0					
ANR	3199657	Identifier	NULL		3199333	1					
ANR	3199658	CompoundStatement		49:20:1366:1366	3199333	1					
ANR	3199659	ExpressionStatement	zend_string_release ( str )	748:5:18625:18649	3199333	0	True				
ANR	3199660	CallExpression	zend_string_release ( str )		3199333	0					
ANR	3199661	Callee	zend_string_release		3199333	0					
ANR	3199662	Identifier	zend_string_release		3199333	0					
ANR	3199663	ArgumentList	str		3199333	1					
ANR	3199664	Argument	str		3199333	0					
ANR	3199665	Identifier	str		3199333	0					
ANR	3199666	ExpressionStatement	"php_dom_throw_error ( NAMESPACE_ERR , dom_get_strict_error ( obj -> document ) )"	749:5:18656:18727	3199333	1	True				
ANR	3199667	CallExpression	"php_dom_throw_error ( NAMESPACE_ERR , dom_get_strict_error ( obj -> document ) )"		3199333	0					
ANR	3199668	Callee	php_dom_throw_error		3199333	0					
ANR	3199669	Identifier	php_dom_throw_error		3199333	0					
ANR	3199670	ArgumentList	NAMESPACE_ERR		3199333	1					
ANR	3199671	Argument	NAMESPACE_ERR		3199333	0					
ANR	3199672	Identifier	NAMESPACE_ERR		3199333	0					
ANR	3199673	Argument	dom_get_strict_error ( obj -> document )		3199333	1					
ANR	3199674	CallExpression	dom_get_strict_error ( obj -> document )		3199333	0					
ANR	3199675	Callee	dom_get_strict_error		3199333	0					
ANR	3199676	Identifier	dom_get_strict_error		3199333	0					
ANR	3199677	ArgumentList	obj -> document		3199333	1					
ANR	3199678	Argument	obj -> document		3199333	0					
ANR	3199679	PtrMemberAccess	obj -> document		3199333	0					
ANR	3199680	Identifier	obj		3199333	0					
ANR	3199681	Identifier	document		3199333	1					
ANR	3199682	ReturnStatement	return FAILURE ;	750:5:18734:18748	3199333	2	True				
ANR	3199683	Identifier	FAILURE		3199333	0					
ANR	3199684	ExpressionStatement	"xmlSetNs ( nodep , ns )"	753:4:18761:18780	3199333	3	True				
ANR	3199685	CallExpression	"xmlSetNs ( nodep , ns )"		3199333	0					
ANR	3199686	Callee	xmlSetNs		3199333	0					
ANR	3199687	Identifier	xmlSetNs		3199333	0					
ANR	3199688	ArgumentList	nodep		3199333	1					
ANR	3199689	Argument	nodep		3199333	0					
ANR	3199690	Identifier	nodep		3199333	0					
ANR	3199691	Argument	ns		3199333	1					
ANR	3199692	Identifier	ns		3199333	0					
ANR	3199693	ExpressionStatement	zend_string_release ( str )	755:3:18790:18814	3199333	7	True				
ANR	3199694	CallExpression	zend_string_release ( str )		3199333	0					
ANR	3199695	Callee	zend_string_release		3199333	0					
ANR	3199696	Identifier	zend_string_release		3199333	0					
ANR	3199697	ArgumentList	str		3199333	1					
ANR	3199698	Argument	str		3199333	0					
ANR	3199699	Identifier	str		3199333	0					
ANR	3199700	BreakStatement	break ;	756:3:18819:18824	3199333	8	True				
ANR	3199701	Label	default :	757:2:18828:18835	3199333	9	True				
ANR	3199702	Identifier	default		3199333	0					
ANR	3199703	BreakStatement	break ;	758:3:18840:18845	3199333	10	True				
ANR	3199704	ReturnStatement	return SUCCESS ;	761:1:18852:18866	3199333	8	True				
ANR	3199705	Identifier	SUCCESS		3199333	0					
ANR	3199706	ReturnType	int		3199333	1					
ANR	3199707	Identifier	dom_node_prefix_write		3199333	2					
ANR	3199708	ParameterList	"dom_object * obj , zval * newval"		3199333	3					
ANR	3199709	Parameter	dom_object * obj	698:26:17220:17234	3199333	0	True				
ANR	3199710	ParameterType	dom_object *		3199333	0					
ANR	3199711	Identifier	obj		3199333	1					
ANR	3199712	Parameter	zval * newval	698:43:17237:17248	3199333	1	True				
ANR	3199713	ParameterType	zval *		3199333	0					
ANR	3199714	Identifier	newval		3199333	1					
ANR	3199715	CFGEntryNode	ENTRY		3199333		True				
ANR	3199716	CFGExitNode	EXIT		3199333		True				
ANR	3199717	Symbol	nodep -> ns -> prefix		3199333						
ANR	3199718	Symbol	* * nodep		3199333						
ANR	3199719	Symbol	curns -> href		3199333						
ANR	3199720	Symbol	INVALID_STATE_ERR		3199333						
ANR	3199721	Symbol	ns		3199333						
ANR	3199722	Symbol	nsnode -> nsDef		3199333						
ANR	3199723	Symbol	* curns		3199333						
ANR	3199724	Symbol	prefix		3199333						
ANR	3199725	Symbol	nodep -> doc		3199333						
ANR	3199726	Symbol	curns -> next		3199333						
ANR	3199727	Symbol	* nsnode		3199333						
ANR	3199728	Symbol	xmlStrEqual		3199333						
ANR	3199729	Symbol	xmlDocGetRootElement		3199333						
ANR	3199730	Symbol	DOM_XMLNS_NAMESPACE		3199333						
ANR	3199731	Symbol	nodep -> ns -> href		3199333						
ANR	3199732	Symbol	* nodep		3199333						
ANR	3199733	Symbol	nodep -> name		3199333						
ANR	3199734	Symbol	dom_object_get_node		3199333						
ANR	3199735	Symbol	nodep -> type		3199333						
ANR	3199736	Symbol	strcmp		3199333						
ANR	3199737	Symbol	* obj		3199333						
ANR	3199738	Symbol	* nodep -> ns		3199333						
ANR	3199739	Symbol	NULL		3199333						
ANR	3199740	Symbol	dom_get_strict_error		3199333						
ANR	3199741	Symbol	SUCCESS		3199333						
ANR	3199742	Symbol	XML_XML_NAMESPACE		3199333						
ANR	3199743	Symbol	obj -> document		3199333						
ANR	3199744	Symbol	zval_get_string		3199333						
ANR	3199745	Symbol	nodep		3199333						
ANR	3199746	Symbol	FAILURE		3199333						
ANR	3199747	Symbol	NAMESPACE_ERR		3199333						
ANR	3199748	Symbol	strURI		3199333						
ANR	3199749	Symbol	curns		3199333						
ANR	3199750	Symbol	ZSTR_VAL		3199333						
ANR	3199751	Symbol	str		3199333						
ANR	3199752	Symbol	nodep -> parent		3199333						
ANR	3199753	Symbol	xmlNewNs		3199333						
ANR	3199754	Symbol	obj		3199333						
ANR	3199755	Symbol	nodep -> ns		3199333						
ANR	3199756	Symbol	XML_ATTRIBUTE_NODE		3199333						
ANR	3199757	Symbol	nsnode		3199333						
ANR	3199758	Symbol	curns -> prefix		3199333						
ANR	3199759	Symbol	newval		3199333						
ANR	3199760	Function	dom_node_local_name_read	771:0:19037:19446							
ANR	3199761	FunctionDef	"dom_node_local_name_read (dom_object * obj , zval * retval)"		3199760	0					
ANR	3199762	CompoundStatement		772:0:19097:19446	3199760	0					
ANR	3199763	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	773:1:19100:19141	3199760	0	True				
ANR	3199764	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3199760	0					
ANR	3199765	IdentifierDeclType	xmlNode *		3199760	0					
ANR	3199766	Identifier	nodep		3199760	1					
ANR	3199767	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3199760	2		=			
ANR	3199768	Identifier	nodep		3199760	0					
ANR	3199769	CallExpression	dom_object_get_node ( obj )		3199760	1					
ANR	3199770	Callee	dom_object_get_node		3199760	0					
ANR	3199771	Identifier	dom_object_get_node		3199760	0					
ANR	3199772	ArgumentList	obj		3199760	1					
ANR	3199773	Argument	obj		3199760	0					
ANR	3199774	Identifier	obj		3199760	0					
ANR	3199775	IfStatement	if ( nodep == NULL )		3199760	1					
ANR	3199776	Condition	nodep == NULL	775:5:19149:19161	3199760	0	True				
ANR	3199777	EqualityExpression	nodep == NULL		3199760	0		==			
ANR	3199778	Identifier	nodep		3199760	0					
ANR	3199779	Identifier	NULL		3199760	1					
ANR	3199780	CompoundStatement		4:20:66:66	3199760	1					
ANR	3199781	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	776:2:19168:19209	3199760	0	True				
ANR	3199782	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3199760	0					
ANR	3199783	Callee	php_dom_throw_error		3199760	0					
ANR	3199784	Identifier	php_dom_throw_error		3199760	0					
ANR	3199785	ArgumentList	INVALID_STATE_ERR		3199760	1					
ANR	3199786	Argument	INVALID_STATE_ERR		3199760	0					
ANR	3199787	Identifier	INVALID_STATE_ERR		3199760	0					
ANR	3199788	Argument	0		3199760	1					
ANR	3199789	PrimaryExpression	0		3199760	0					
ANR	3199790	ReturnStatement	return FAILURE ;	777:2:19213:19227	3199760	1	True				
ANR	3199791	Identifier	FAILURE		3199760	0					
ANR	3199792	IfStatement	if ( nodep -> type == XML_ELEMENT_NODE || nodep -> type == XML_ATTRIBUTE_NODE || nodep -> type == XML_NAMESPACE_DECL )		3199760	2					
ANR	3199793	Condition	nodep -> type == XML_ELEMENT_NODE || nodep -> type == XML_ATTRIBUTE_NODE || nodep -> type == XML_NAMESPACE_DECL	780:5:19238:19342	3199760	0	True				
ANR	3199794	OrExpression	nodep -> type == XML_ELEMENT_NODE || nodep -> type == XML_ATTRIBUTE_NODE || nodep -> type == XML_NAMESPACE_DECL		3199760	0		||			
ANR	3199795	EqualityExpression	nodep -> type == XML_ELEMENT_NODE		3199760	0		==			
ANR	3199796	PtrMemberAccess	nodep -> type		3199760	0					
ANR	3199797	Identifier	nodep		3199760	0					
ANR	3199798	Identifier	type		3199760	1					
ANR	3199799	Identifier	XML_ELEMENT_NODE		3199760	1					
ANR	3199800	OrExpression	nodep -> type == XML_ATTRIBUTE_NODE || nodep -> type == XML_NAMESPACE_DECL		3199760	1		||			
ANR	3199801	EqualityExpression	nodep -> type == XML_ATTRIBUTE_NODE		3199760	0		==			
ANR	3199802	PtrMemberAccess	nodep -> type		3199760	0					
ANR	3199803	Identifier	nodep		3199760	0					
ANR	3199804	Identifier	type		3199760	1					
ANR	3199805	Identifier	XML_ATTRIBUTE_NODE		3199760	1					
ANR	3199806	EqualityExpression	nodep -> type == XML_NAMESPACE_DECL		3199760	1		==			
ANR	3199807	PtrMemberAccess	nodep -> type		3199760	0					
ANR	3199808	Identifier	nodep		3199760	0					
ANR	3199809	Identifier	type		3199760	1					
ANR	3199810	Identifier	XML_NAMESPACE_DECL		3199760	1					
ANR	3199811	CompoundStatement		9:112:247:247	3199760	1					
ANR	3199812	ExpressionStatement	"ZVAL_STRING ( retval , ( char * ) ( nodep -> name ) )"	781:2:19349:19392	3199760	0	True				
ANR	3199813	CallExpression	"ZVAL_STRING ( retval , ( char * ) ( nodep -> name ) )"		3199760	0					
ANR	3199814	Callee	ZVAL_STRING		3199760	0					
ANR	3199815	Identifier	ZVAL_STRING		3199760	0					
ANR	3199816	ArgumentList	retval		3199760	1					
ANR	3199817	Argument	retval		3199760	0					
ANR	3199818	Identifier	retval		3199760	0					
ANR	3199819	Argument	( char * ) ( nodep -> name )		3199760	1					
ANR	3199820	CastExpression	( char * ) ( nodep -> name )		3199760	0					
ANR	3199821	CastTarget	char *		3199760	0					
ANR	3199822	PtrMemberAccess	nodep -> name		3199760	1					
ANR	3199823	Identifier	nodep		3199760	0					
ANR	3199824	Identifier	name		3199760	1					
ANR	3199825	ElseStatement	else		3199760	0					
ANR	3199826	CompoundStatement		11:8:304:304	3199760	0					
ANR	3199827	ExpressionStatement	ZVAL_NULL ( retval )	783:2:19406:19423	3199760	0	True				
ANR	3199828	CallExpression	ZVAL_NULL ( retval )		3199760	0					
ANR	3199829	Callee	ZVAL_NULL		3199760	0					
ANR	3199830	Identifier	ZVAL_NULL		3199760	0					
ANR	3199831	ArgumentList	retval		3199760	1					
ANR	3199832	Argument	retval		3199760	0					
ANR	3199833	Identifier	retval		3199760	0					
ANR	3199834	ReturnStatement	return SUCCESS ;	786:1:19430:19444	3199760	3	True				
ANR	3199835	Identifier	SUCCESS		3199760	0					
ANR	3199836	ReturnType	int		3199760	1					
ANR	3199837	Identifier	dom_node_local_name_read		3199760	2					
ANR	3199838	ParameterList	"dom_object * obj , zval * retval"		3199760	3					
ANR	3199839	Parameter	dom_object * obj	771:29:19066:19080	3199760	0	True				
ANR	3199840	ParameterType	dom_object *		3199760	0					
ANR	3199841	Identifier	obj		3199760	1					
ANR	3199842	Parameter	zval * retval	771:46:19083:19094	3199760	1	True				
ANR	3199843	ParameterType	zval *		3199760	0					
ANR	3199844	Identifier	retval		3199760	1					
ANR	3199845	CFGEntryNode	ENTRY		3199760		True				
ANR	3199846	CFGExitNode	EXIT		3199760		True				
ANR	3199847	Symbol	nodep -> type		3199760						
ANR	3199848	Symbol	INVALID_STATE_ERR		3199760						
ANR	3199849	Symbol	XML_ELEMENT_NODE		3199760						
ANR	3199850	Symbol	NULL		3199760						
ANR	3199851	Symbol	SUCCESS		3199760						
ANR	3199852	Symbol	XML_NAMESPACE_DECL		3199760						
ANR	3199853	Symbol	nodep		3199760						
ANR	3199854	Symbol	FAILURE		3199760						
ANR	3199855	Symbol	retval		3199760						
ANR	3199856	Symbol	obj		3199760						
ANR	3199857	Symbol	XML_ATTRIBUTE_NODE		3199760						
ANR	3199858	Symbol	* nodep		3199760						
ANR	3199859	Symbol	nodep -> name		3199760						
ANR	3199860	Symbol	dom_object_get_node		3199760						
ANR	3199861	Function	dom_node_base_uri_read	796:0:19606:19996							
ANR	3199862	FunctionDef	"dom_node_base_uri_read (dom_object * obj , zval * retval)"		3199861	0					
ANR	3199863	CompoundStatement		797:0:19664:19996	3199861	0					
ANR	3199864	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	798:1:19667:19708	3199861	0	True				
ANR	3199865	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3199861	0					
ANR	3199866	IdentifierDeclType	xmlNode *		3199861	0					
ANR	3199867	Identifier	nodep		3199861	1					
ANR	3199868	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3199861	2		=			
ANR	3199869	Identifier	nodep		3199861	0					
ANR	3199870	CallExpression	dom_object_get_node ( obj )		3199861	1					
ANR	3199871	Callee	dom_object_get_node		3199861	0					
ANR	3199872	Identifier	dom_object_get_node		3199861	0					
ANR	3199873	ArgumentList	obj		3199861	1					
ANR	3199874	Argument	obj		3199861	0					
ANR	3199875	Identifier	obj		3199861	0					
ANR	3199876	IdentifierDeclStatement	xmlChar * baseuri ;	799:1:19711:19727	3199861	1	True				
ANR	3199877	IdentifierDecl	* baseuri		3199861	0					
ANR	3199878	IdentifierDeclType	xmlChar *		3199861	0					
ANR	3199879	Identifier	baseuri		3199861	1					
ANR	3199880	IfStatement	if ( nodep == NULL )		3199861	2					
ANR	3199881	Condition	nodep == NULL	801:5:19735:19747	3199861	0	True				
ANR	3199882	EqualityExpression	nodep == NULL		3199861	0		==			
ANR	3199883	Identifier	nodep		3199861	0					
ANR	3199884	Identifier	NULL		3199861	1					
ANR	3199885	CompoundStatement		5:20:85:85	3199861	1					
ANR	3199886	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	802:2:19754:19795	3199861	0	True				
ANR	3199887	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3199861	0					
ANR	3199888	Callee	php_dom_throw_error		3199861	0					
ANR	3199889	Identifier	php_dom_throw_error		3199861	0					
ANR	3199890	ArgumentList	INVALID_STATE_ERR		3199861	1					
ANR	3199891	Argument	INVALID_STATE_ERR		3199861	0					
ANR	3199892	Identifier	INVALID_STATE_ERR		3199861	0					
ANR	3199893	Argument	0		3199861	1					
ANR	3199894	PrimaryExpression	0		3199861	0					
ANR	3199895	ReturnStatement	return FAILURE ;	803:2:19799:19813	3199861	1	True				
ANR	3199896	Identifier	FAILURE		3199861	0					
ANR	3199897	ExpressionStatement	"baseuri = xmlNodeGetBase ( nodep -> doc , nodep )"	806:1:19820:19863	3199861	3	True				
ANR	3199898	AssignmentExpression	"baseuri = xmlNodeGetBase ( nodep -> doc , nodep )"		3199861	0		=			
ANR	3199899	Identifier	baseuri		3199861	0					
ANR	3199900	CallExpression	"xmlNodeGetBase ( nodep -> doc , nodep )"		3199861	1					
ANR	3199901	Callee	xmlNodeGetBase		3199861	0					
ANR	3199902	Identifier	xmlNodeGetBase		3199861	0					
ANR	3199903	ArgumentList	nodep -> doc		3199861	1					
ANR	3199904	Argument	nodep -> doc		3199861	0					
ANR	3199905	PtrMemberAccess	nodep -> doc		3199861	0					
ANR	3199906	Identifier	nodep		3199861	0					
ANR	3199907	Identifier	doc		3199861	1					
ANR	3199908	Argument	nodep		3199861	1					
ANR	3199909	Identifier	nodep		3199861	0					
ANR	3199910	IfStatement	if ( baseuri )		3199861	4					
ANR	3199911	Condition	baseuri	807:5:19870:19876	3199861	0	True				
ANR	3199912	Identifier	baseuri		3199861	0					
ANR	3199913	CompoundStatement		11:14:214:214	3199861	1					
ANR	3199914	ExpressionStatement	"ZVAL_STRING ( retval , ( char * ) ( baseuri ) )"	808:2:19883:19922	3199861	0	True				
ANR	3199915	CallExpression	"ZVAL_STRING ( retval , ( char * ) ( baseuri ) )"		3199861	0					
ANR	3199916	Callee	ZVAL_STRING		3199861	0					
ANR	3199917	Identifier	ZVAL_STRING		3199861	0					
ANR	3199918	ArgumentList	retval		3199861	1					
ANR	3199919	Argument	retval		3199861	0					
ANR	3199920	Identifier	retval		3199861	0					
ANR	3199921	Argument	( char * ) ( baseuri )		3199861	1					
ANR	3199922	CastExpression	( char * ) ( baseuri )		3199861	0					
ANR	3199923	CastTarget	char *		3199861	0					
ANR	3199924	Identifier	baseuri		3199861	1					
ANR	3199925	ExpressionStatement	xmlFree ( baseuri )	809:2:19926:19942	3199861	1	True				
ANR	3199926	CallExpression	xmlFree ( baseuri )		3199861	0					
ANR	3199927	Callee	xmlFree		3199861	0					
ANR	3199928	Identifier	xmlFree		3199861	0					
ANR	3199929	ArgumentList	baseuri		3199861	1					
ANR	3199930	Argument	baseuri		3199861	0					
ANR	3199931	Identifier	baseuri		3199861	0					
ANR	3199932	ElseStatement	else		3199861	0					
ANR	3199933	CompoundStatement		14:8:287:287	3199861	0					
ANR	3199934	ExpressionStatement	ZVAL_NULL ( retval )	811:2:19956:19973	3199861	0	True				
ANR	3199935	CallExpression	ZVAL_NULL ( retval )		3199861	0					
ANR	3199936	Callee	ZVAL_NULL		3199861	0					
ANR	3199937	Identifier	ZVAL_NULL		3199861	0					
ANR	3199938	ArgumentList	retval		3199861	1					
ANR	3199939	Argument	retval		3199861	0					
ANR	3199940	Identifier	retval		3199861	0					
ANR	3199941	ReturnStatement	return SUCCESS ;	814:1:19980:19994	3199861	5	True				
ANR	3199942	Identifier	SUCCESS		3199861	0					
ANR	3199943	ReturnType	int		3199861	1					
ANR	3199944	Identifier	dom_node_base_uri_read		3199861	2					
ANR	3199945	ParameterList	"dom_object * obj , zval * retval"		3199861	3					
ANR	3199946	Parameter	dom_object * obj	796:27:19633:19647	3199861	0	True				
ANR	3199947	ParameterType	dom_object *		3199861	0					
ANR	3199948	Identifier	obj		3199861	1					
ANR	3199949	Parameter	zval * retval	796:44:19650:19661	3199861	1	True				
ANR	3199950	ParameterType	zval *		3199861	0					
ANR	3199951	Identifier	retval		3199861	1					
ANR	3199952	CFGEntryNode	ENTRY		3199861		True				
ANR	3199953	CFGExitNode	EXIT		3199861		True				
ANR	3199954	Symbol	INVALID_STATE_ERR		3199861						
ANR	3199955	Symbol	NULL		3199861						
ANR	3199956	Symbol	SUCCESS		3199861						
ANR	3199957	Symbol	obj		3199861						
ANR	3199958	Symbol	baseuri		3199861						
ANR	3199959	Symbol	nodep -> doc		3199861						
ANR	3199960	Symbol	* nodep		3199861						
ANR	3199961	Symbol	nodep		3199861						
ANR	3199962	Symbol	FAILURE		3199861						
ANR	3199963	Symbol	retval		3199861						
ANR	3199964	Symbol	xmlNodeGetBase		3199861						
ANR	3199965	Symbol	dom_object_get_node		3199861						
ANR	3199966	Function	dom_node_text_content_read	824:0:20163:20547							
ANR	3199967	FunctionDef	"dom_node_text_content_read (dom_object * obj , zval * retval)"		3199966	0					
ANR	3199968	CompoundStatement		825:0:20225:20547	3199966	0					
ANR	3199969	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	826:1:20228:20269	3199966	0	True				
ANR	3199970	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3199966	0					
ANR	3199971	IdentifierDeclType	xmlNode *		3199966	0					
ANR	3199972	Identifier	nodep		3199966	1					
ANR	3199973	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3199966	2		=			
ANR	3199974	Identifier	nodep		3199966	0					
ANR	3199975	CallExpression	dom_object_get_node ( obj )		3199966	1					
ANR	3199976	Callee	dom_object_get_node		3199966	0					
ANR	3199977	Identifier	dom_object_get_node		3199966	0					
ANR	3199978	ArgumentList	obj		3199966	1					
ANR	3199979	Argument	obj		3199966	0					
ANR	3199980	Identifier	obj		3199966	0					
ANR	3199981	IdentifierDeclStatement	char * str = NULL ;	827:1:20272:20288	3199966	1	True				
ANR	3199982	IdentifierDecl	* str = NULL		3199966	0					
ANR	3199983	IdentifierDeclType	char *		3199966	0					
ANR	3199984	Identifier	str		3199966	1					
ANR	3199985	AssignmentExpression	* str = NULL		3199966	2		=			
ANR	3199986	Identifier	NULL		3199966	0					
ANR	3199987	Identifier	NULL		3199966	1					
ANR	3199988	IfStatement	if ( nodep == NULL )		3199966	2					
ANR	3199989	Condition	nodep == NULL	829:5:20296:20308	3199966	0	True				
ANR	3199990	EqualityExpression	nodep == NULL		3199966	0		==			
ANR	3199991	Identifier	nodep		3199966	0					
ANR	3199992	Identifier	NULL		3199966	1					
ANR	3199993	CompoundStatement		5:20:85:85	3199966	1					
ANR	3199994	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	830:2:20315:20356	3199966	0	True				
ANR	3199995	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3199966	0					
ANR	3199996	Callee	php_dom_throw_error		3199966	0					
ANR	3199997	Identifier	php_dom_throw_error		3199966	0					
ANR	3199998	ArgumentList	INVALID_STATE_ERR		3199966	1					
ANR	3199999	Argument	INVALID_STATE_ERR		3199966	0					
ANR	3200000	Identifier	INVALID_STATE_ERR		3199966	0					
ANR	3200001	Argument	0		3199966	1					
ANR	3200002	PrimaryExpression	0		3199966	0					
ANR	3200003	ReturnStatement	return FAILURE ;	831:2:20360:20374	3199966	1	True				
ANR	3200004	Identifier	FAILURE		3199966	0					
ANR	3200005	ExpressionStatement	str = ( char * ) xmlNodeGetContent ( nodep )	834:1:20381:20420	3199966	3	True				
ANR	3200006	AssignmentExpression	str = ( char * ) xmlNodeGetContent ( nodep )		3199966	0		=			
ANR	3200007	Identifier	str		3199966	0					
ANR	3200008	CastExpression	( char * ) xmlNodeGetContent ( nodep )		3199966	1					
ANR	3200009	CastTarget	char *		3199966	0					
ANR	3200010	CallExpression	xmlNodeGetContent ( nodep )		3199966	1					
ANR	3200011	Callee	xmlNodeGetContent		3199966	0					
ANR	3200012	Identifier	xmlNodeGetContent		3199966	0					
ANR	3200013	ArgumentList	nodep		3199966	1					
ANR	3200014	Argument	nodep		3199966	0					
ANR	3200015	Identifier	nodep		3199966	0					
ANR	3200016	IfStatement	if ( str != NULL )		3199966	4					
ANR	3200017	Condition	str != NULL	836:5:20428:20438	3199966	0	True				
ANR	3200018	EqualityExpression	str != NULL		3199966	0		!=			
ANR	3200019	Identifier	str		3199966	0					
ANR	3200020	Identifier	NULL		3199966	1					
ANR	3200021	CompoundStatement		12:18:215:215	3199966	1					
ANR	3200022	ExpressionStatement	"ZVAL_STRING ( retval , str )"	837:2:20445:20469	3199966	0	True				
ANR	3200023	CallExpression	"ZVAL_STRING ( retval , str )"		3199966	0					
ANR	3200024	Callee	ZVAL_STRING		3199966	0					
ANR	3200025	Identifier	ZVAL_STRING		3199966	0					
ANR	3200026	ArgumentList	retval		3199966	1					
ANR	3200027	Argument	retval		3199966	0					
ANR	3200028	Identifier	retval		3199966	0					
ANR	3200029	Argument	str		3199966	1					
ANR	3200030	Identifier	str		3199966	0					
ANR	3200031	ExpressionStatement	xmlFree ( str )	838:2:20473:20485	3199966	1	True				
ANR	3200032	CallExpression	xmlFree ( str )		3199966	0					
ANR	3200033	Callee	xmlFree		3199966	0					
ANR	3200034	Identifier	xmlFree		3199966	0					
ANR	3200035	ArgumentList	str		3199966	1					
ANR	3200036	Argument	str		3199966	0					
ANR	3200037	Identifier	str		3199966	0					
ANR	3200038	ElseStatement	else		3199966	0					
ANR	3200039	CompoundStatement		15:8:269:269	3199966	0					
ANR	3200040	ExpressionStatement	ZVAL_EMPTY_STRING ( retval )	840:2:20499:20524	3199966	0	True				
ANR	3200041	CallExpression	ZVAL_EMPTY_STRING ( retval )		3199966	0					
ANR	3200042	Callee	ZVAL_EMPTY_STRING		3199966	0					
ANR	3200043	Identifier	ZVAL_EMPTY_STRING		3199966	0					
ANR	3200044	ArgumentList	retval		3199966	1					
ANR	3200045	Argument	retval		3199966	0					
ANR	3200046	Identifier	retval		3199966	0					
ANR	3200047	ReturnStatement	return SUCCESS ;	843:1:20531:20545	3199966	5	True				
ANR	3200048	Identifier	SUCCESS		3199966	0					
ANR	3200049	ReturnType	int		3199966	1					
ANR	3200050	Identifier	dom_node_text_content_read		3199966	2					
ANR	3200051	ParameterList	"dom_object * obj , zval * retval"		3199966	3					
ANR	3200052	Parameter	dom_object * obj	824:31:20194:20208	3199966	0	True				
ANR	3200053	ParameterType	dom_object *		3199966	0					
ANR	3200054	Identifier	obj		3199966	1					
ANR	3200055	Parameter	zval * retval	824:48:20211:20222	3199966	1	True				
ANR	3200056	ParameterType	zval *		3199966	0					
ANR	3200057	Identifier	retval		3199966	1					
ANR	3200058	CFGEntryNode	ENTRY		3199966		True				
ANR	3200059	CFGExitNode	EXIT		3199966		True				
ANR	3200060	Symbol	str		3199966						
ANR	3200061	Symbol	INVALID_STATE_ERR		3199966						
ANR	3200062	Symbol	NULL		3199966						
ANR	3200063	Symbol	SUCCESS		3199966						
ANR	3200064	Symbol	obj		3199966						
ANR	3200065	Symbol	xmlNodeGetContent		3199966						
ANR	3200066	Symbol	nodep		3199966						
ANR	3200067	Symbol	FAILURE		3199966						
ANR	3200068	Symbol	retval		3199966						
ANR	3200069	Symbol	dom_object_get_node		3199966						
ANR	3200070	Function	dom_node_text_content_write	846:0:20550:21018							
ANR	3200071	FunctionDef	"dom_node_text_content_write (dom_object * obj , zval * newval)"		3200070	0					
ANR	3200072	CompoundStatement		847:0:20613:21018	3200070	0					
ANR	3200073	IdentifierDeclStatement	xmlNode * nodep = dom_object_get_node ( obj ) ;	848:1:20616:20657	3200070	0	True				
ANR	3200074	IdentifierDecl	* nodep = dom_object_get_node ( obj )		3200070	0					
ANR	3200075	IdentifierDeclType	xmlNode *		3200070	0					
ANR	3200076	Identifier	nodep		3200070	1					
ANR	3200077	AssignmentExpression	* nodep = dom_object_get_node ( obj )		3200070	2		=			
ANR	3200078	Identifier	nodep		3200070	0					
ANR	3200079	CallExpression	dom_object_get_node ( obj )		3200070	1					
ANR	3200080	Callee	dom_object_get_node		3200070	0					
ANR	3200081	Identifier	dom_object_get_node		3200070	0					
ANR	3200082	ArgumentList	obj		3200070	1					
ANR	3200083	Argument	obj		3200070	0					
ANR	3200084	Identifier	obj		3200070	0					
ANR	3200085	IdentifierDeclStatement	zend_string * str ;	849:1:20660:20676	3200070	1	True				
ANR	3200086	IdentifierDecl	* str		3200070	0					
ANR	3200087	IdentifierDeclType	zend_string *		3200070	0					
ANR	3200088	Identifier	str		3200070	1					
ANR	3200089	IfStatement	if ( nodep == NULL )		3200070	2					
ANR	3200090	Condition	nodep == NULL	851:5:20684:20696	3200070	0	True				
ANR	3200091	EqualityExpression	nodep == NULL		3200070	0		==			
ANR	3200092	Identifier	nodep		3200070	0					
ANR	3200093	Identifier	NULL		3200070	1					
ANR	3200094	CompoundStatement		5:20:85:85	3200070	1					
ANR	3200095	ExpressionStatement	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"	852:2:20703:20744	3200070	0	True				
ANR	3200096	CallExpression	"php_dom_throw_error ( INVALID_STATE_ERR , 0 )"		3200070	0					
ANR	3200097	Callee	php_dom_throw_error		3200070	0					
ANR	3200098	Identifier	php_dom_throw_error		3200070	0					
ANR	3200099	ArgumentList	INVALID_STATE_ERR		3200070	1					
ANR	3200100	Argument	INVALID_STATE_ERR		3200070	0					
ANR	3200101	Identifier	INVALID_STATE_ERR		3200070	0					
ANR	3200102	Argument	0		3200070	1					
ANR	3200103	PrimaryExpression	0		3200070	0					
ANR	3200104	ReturnStatement	return FAILURE ;	853:2:20748:20762	3200070	1	True				
ANR	3200105	Identifier	FAILURE		3200070	0					
ANR	3200106	ExpressionStatement	str = zval_get_string ( newval )	856:1:20769:20798	3200070	3	True				
ANR	3200107	AssignmentExpression	str = zval_get_string ( newval )		3200070	0		=			
ANR	3200108	Identifier	str		3200070	0					
ANR	3200109	CallExpression	zval_get_string ( newval )		3200070	1					
ANR	3200110	Callee	zval_get_string		3200070	0					
ANR	3200111	Identifier	zval_get_string		3200070	0					
ANR	3200112	ArgumentList	newval		3200070	1					
ANR	3200113	Argument	newval		3200070	0					
ANR	3200114	Identifier	newval		3200070	0					
ANR	3200115	ExpressionStatement	"xmlNodeSetContent ( nodep , ( xmlChar * ) """" )"	858:1:20889:20929	3200070	4	True				
ANR	3200116	CallExpression	"xmlNodeSetContent ( nodep , ( xmlChar * ) """" )"		3200070	0					
ANR	3200117	Callee	xmlNodeSetContent		3200070	0					
ANR	3200118	Identifier	xmlNodeSetContent		3200070	0					
ANR	3200119	ArgumentList	nodep		3200070	1					
ANR	3200120	Argument	nodep		3200070	0					
ANR	3200121	Identifier	nodep		3200070	0					
ANR	3200122	Argument	"( xmlChar * ) """""		3200070	1					
ANR	3200123	CastExpression	"( xmlChar * ) """""		3200070	0					
ANR	3200124	CastTarget	xmlChar *		3200070	0					
ANR	3200125	PrimaryExpression	""""""		3200070	1					
ANR	3200126	ExpressionStatement	"xmlNodeAddContent ( nodep , ZSTR_VAL ( str ) )"	859:1:20932:20971	3200070	5	True				
ANR	3200127	CallExpression	"xmlNodeAddContent ( nodep , ZSTR_VAL ( str ) )"		3200070	0					
ANR	3200128	Callee	xmlNodeAddContent		3200070	0					
ANR	3200129	Identifier	xmlNodeAddContent		3200070	0					
ANR	3200130	ArgumentList	nodep		3200070	1					
ANR	3200131	Argument	nodep		3200070	0					
ANR	3200132	Identifier	nodep		3200070	0					
ANR	3200133	Argument	ZSTR_VAL ( str )		3200070	1					
ANR	3200134	CallExpression	ZSTR_VAL ( str )		3200070	0					
ANR	3200135	Callee	ZSTR_VAL		3200070	0					
ANR	3200136	Identifier	ZSTR_VAL		3200070	0					
ANR	3200137	ArgumentList	str		3200070	1					
ANR	3200138	Argument	str		3200070	0					
ANR	3200139	Identifier	str		3200070	0					
ANR	3200140	ExpressionStatement	zend_string_release ( str )	860:1:20974:20998	3200070	6	True				
ANR	3200141	CallExpression	zend_string_release ( str )		3200070	0					
ANR	3200142	Callee	zend_string_release		3200070	0					
ANR	3200143	Identifier	zend_string_release		3200070	0					
ANR	3200144	ArgumentList	str		3200070	1					
ANR	3200145	Argument	str		3200070	0					
ANR	3200146	Identifier	str		3200070	0					
ANR	3200147	ReturnStatement	return SUCCESS ;	862:1:21002:21016	3200070	7	True				
ANR	3200148	Identifier	SUCCESS		3200070	0					
ANR	3200149	ReturnType	int		3200070	1					
ANR	3200150	Identifier	dom_node_text_content_write		3200070	2					
ANR	3200151	ParameterList	"dom_object * obj , zval * newval"		3200070	3					
ANR	3200152	Parameter	dom_object * obj	846:32:20582:20596	3200070	0	True				
ANR	3200153	ParameterType	dom_object *		3200070	0					
ANR	3200154	Identifier	obj		3200070	1					
ANR	3200155	Parameter	zval * newval	846:49:20599:20610	3200070	1	True				
ANR	3200156	ParameterType	zval *		3200070	0					
ANR	3200157	Identifier	newval		3200070	1					
ANR	3200158	CFGEntryNode	ENTRY		3200070		True				
ANR	3200159	CFGExitNode	EXIT		3200070		True				
ANR	3200160	Symbol	str		3200070						
ANR	3200161	Symbol	INVALID_STATE_ERR		3200070						
ANR	3200162	Symbol	NULL		3200070						
ANR	3200163	Symbol	SUCCESS		3200070						
ANR	3200164	Symbol	obj		3200070						
ANR	3200165	Symbol	zval_get_string		3200070						
ANR	3200166	Symbol	nodep		3200070						
ANR	3200167	Symbol	newval		3200070						
ANR	3200168	Symbol	FAILURE		3200070						
ANR	3200169	Symbol	dom_object_get_node		3200070						
ANR	3200170	Symbol	ZSTR_VAL		3200070						
ANR	3200171	Function	_php_dom_insert_fragment	867:0:21032:22049							
ANR	3200172	FunctionDef	"_php_dom_insert_fragment (xmlNodePtr nodep , xmlNodePtr prevsib , xmlNodePtr nextsib , xmlNodePtr fragment , dom_object * intern , dom_object * childobj)"		3200171	0					
ANR	3200173	CompoundStatement		868:0:21206:22049	3200171	0					
ANR	3200174	IdentifierDeclStatement	"xmlNodePtr newchild , node ;"	869:1:21209:21234	3200171	0	True				
ANR	3200175	IdentifierDecl	newchild		3200171	0					
ANR	3200176	IdentifierDeclType	xmlNodePtr		3200171	0					
ANR	3200177	Identifier	newchild		3200171	1					
ANR	3200178	IdentifierDecl	node		3200171	1					
ANR	3200179	IdentifierDeclType	xmlNodePtr		3200171	0					
ANR	3200180	Identifier	node		3200171	1					
ANR	3200181	ExpressionStatement	newchild = fragment -> children	871:1:21238:21267	3200171	1	True				
ANR	3200182	AssignmentExpression	newchild = fragment -> children		3200171	0		=			
ANR	3200183	Identifier	newchild		3200171	0					
ANR	3200184	PtrMemberAccess	fragment -> children		3200171	1					
ANR	3200185	Identifier	fragment		3200171	0					
ANR	3200186	Identifier	children		3200171	1					
ANR	3200187	IfStatement	if ( newchild )		3200171	2					
ANR	3200188	Condition	newchild	873:5:21275:21282	3200171	0	True				
ANR	3200189	Identifier	newchild		3200171	0					
ANR	3200190	CompoundStatement		6:15:78:78	3200171	1					
ANR	3200191	IfStatement	if ( prevsib == NULL )		3200171	0					
ANR	3200192	Condition	prevsib == NULL	874:6:21293:21307	3200171	0	True				
ANR	3200193	EqualityExpression	prevsib == NULL		3200171	0		==			
ANR	3200194	Identifier	prevsib		3200171	0					
ANR	3200195	Identifier	NULL		3200171	1					
ANR	3200196	CompoundStatement		7:23:103:103	3200171	1					
ANR	3200197	ExpressionStatement	nodep -> children = newchild	875:3:21315:21341	3200171	0	True				
ANR	3200198	AssignmentExpression	nodep -> children = newchild		3200171	0		=			
ANR	3200199	PtrMemberAccess	nodep -> children		3200171	0					
ANR	3200200	Identifier	nodep		3200171	0					
ANR	3200201	Identifier	children		3200171	1					
ANR	3200202	Identifier	newchild		3200171	1					
ANR	3200203	ElseStatement	else		3200171	0					
ANR	3200204	CompoundStatement		9:9:145:145	3200171	0					
ANR	3200205	ExpressionStatement	prevsib -> next = newchild	877:3:21357:21381	3200171	0	True				
ANR	3200206	AssignmentExpression	prevsib -> next = newchild		3200171	0		=			
ANR	3200207	PtrMemberAccess	prevsib -> next		3200171	0					
ANR	3200208	Identifier	prevsib		3200171	0					
ANR	3200209	Identifier	next		3200171	1					
ANR	3200210	Identifier	newchild		3200171	1					
ANR	3200211	ExpressionStatement	newchild -> prev = prevsib	879:2:21389:21413	3200171	1	True				
ANR	3200212	AssignmentExpression	newchild -> prev = prevsib		3200171	0		=			
ANR	3200213	PtrMemberAccess	newchild -> prev		3200171	0					
ANR	3200214	Identifier	newchild		3200171	0					
ANR	3200215	Identifier	prev		3200171	1					
ANR	3200216	Identifier	prevsib		3200171	1					
ANR	3200217	IfStatement	if ( nextsib == NULL )		3200171	2					
ANR	3200218	Condition	nextsib == NULL	880:6:21421:21435	3200171	0	True				
ANR	3200219	EqualityExpression	nextsib == NULL		3200171	0		==			
ANR	3200220	Identifier	nextsib		3200171	0					
ANR	3200221	Identifier	NULL		3200171	1					
ANR	3200222	CompoundStatement		13:23:231:231	3200171	1					
ANR	3200223	ExpressionStatement	nodep -> last = fragment -> last	881:3:21443:21471	3200171	0	True				
ANR	3200224	AssignmentExpression	nodep -> last = fragment -> last		3200171	0		=			
ANR	3200225	PtrMemberAccess	nodep -> last		3200171	0					
ANR	3200226	Identifier	nodep		3200171	0					
ANR	3200227	Identifier	last		3200171	1					
ANR	3200228	PtrMemberAccess	fragment -> last		3200171	1					
ANR	3200229	Identifier	fragment		3200171	0					
ANR	3200230	Identifier	last		3200171	1					
ANR	3200231	ElseStatement	else		3200171	0					
ANR	3200232	CompoundStatement		15:9:275:275	3200171	0					
ANR	3200233	ExpressionStatement	fragment -> last -> next = nextsib	883:3:21487:21517	3200171	0	True				
ANR	3200234	AssignmentExpression	fragment -> last -> next = nextsib		3200171	0		=			
ANR	3200235	PtrMemberAccess	fragment -> last -> next		3200171	0					
ANR	3200236	PtrMemberAccess	fragment -> last		3200171	0					
ANR	3200237	Identifier	fragment		3200171	0					
ANR	3200238	Identifier	last		3200171	1					
ANR	3200239	Identifier	next		3200171	1					
ANR	3200240	Identifier	nextsib		3200171	1					
ANR	3200241	ExpressionStatement	nextsib -> prev = fragment -> last	884:3:21522:21552	3200171	1	True				
ANR	3200242	AssignmentExpression	nextsib -> prev = fragment -> last		3200171	0		=			
ANR	3200243	PtrMemberAccess	nextsib -> prev		3200171	0					
ANR	3200244	Identifier	nextsib		3200171	0					
ANR	3200245	Identifier	prev		3200171	1					
ANR	3200246	PtrMemberAccess	fragment -> last		3200171	1					
ANR	3200247	Identifier	fragment		3200171	0					
ANR	3200248	Identifier	last		3200171	1					
ANR	3200249	ExpressionStatement	node = newchild	887:2:21561:21576	3200171	3	True				
ANR	3200250	AssignmentExpression	node = newchild		3200171	0		=			
ANR	3200251	Identifier	node		3200171	0					
ANR	3200252	Identifier	newchild		3200171	1					
ANR	3200253	WhileStatement	while ( node != NULL )		3200171	4					
ANR	3200254	Condition	node != NULL	888:9:21587:21598	3200171	0	True				
ANR	3200255	EqualityExpression	node != NULL		3200171	0		!=			
ANR	3200256	Identifier	node		3200171	0					
ANR	3200257	Identifier	NULL		3200171	1					
ANR	3200258	CompoundStatement		21:23:394:394	3200171	1					
ANR	3200259	ExpressionStatement	node -> parent = nodep	889:3:21606:21626	3200171	0	True				
ANR	3200260	AssignmentExpression	node -> parent = nodep		3200171	0		=			
ANR	3200261	PtrMemberAccess	node -> parent		3200171	0					
ANR	3200262	Identifier	node		3200171	0					
ANR	3200263	Identifier	parent		3200171	1					
ANR	3200264	Identifier	nodep		3200171	1					
ANR	3200265	IfStatement	if ( node -> doc != nodep -> doc )		3200171	1					
ANR	3200266	Condition	node -> doc != nodep -> doc	890:7:21635:21657	3200171	0	True				
ANR	3200267	EqualityExpression	node -> doc != nodep -> doc		3200171	0		!=			
ANR	3200268	PtrMemberAccess	node -> doc		3200171	0					
ANR	3200269	Identifier	node		3200171	0					
ANR	3200270	Identifier	doc		3200171	1					
ANR	3200271	PtrMemberAccess	nodep -> doc		3200171	1					
ANR	3200272	Identifier	nodep		3200171	0					
ANR	3200273	Identifier	doc		3200171	1					
ANR	3200274	CompoundStatement		23:32:453:453	3200171	1					
ANR	3200275	ExpressionStatement	"xmlSetTreeDoc ( node , nodep -> doc )"	891:4:21666:21697	3200171	0	True				
ANR	3200276	CallExpression	"xmlSetTreeDoc ( node , nodep -> doc )"		3200171	0					
ANR	3200277	Callee	xmlSetTreeDoc		3200171	0					
ANR	3200278	Identifier	xmlSetTreeDoc		3200171	0					
ANR	3200279	ArgumentList	node		3200171	1					
ANR	3200280	Argument	node		3200171	0					
ANR	3200281	Identifier	node		3200171	0					
ANR	3200282	Argument	nodep -> doc		3200171	1					
ANR	3200283	PtrMemberAccess	nodep -> doc		3200171	0					
ANR	3200284	Identifier	nodep		3200171	0					
ANR	3200285	Identifier	doc		3200171	1					
ANR	3200286	IfStatement	if ( node -> _private != NULL )		3200171	1					
ANR	3200287	Condition	node -> _private != NULL	892:8:21707:21728	3200171	0	True				
ANR	3200288	EqualityExpression	node -> _private != NULL		3200171	0		!=			
ANR	3200289	PtrMemberAccess	node -> _private		3200171	0					
ANR	3200290	Identifier	node		3200171	0					
ANR	3200291	Identifier	_private		3200171	1					
ANR	3200292	Identifier	NULL		3200171	1					
ANR	3200293	CompoundStatement		25:32:524:524	3200171	1					
ANR	3200294	ExpressionStatement	childobj = node -> _private	893:5:21738:21763	3200171	0	True				
ANR	3200295	AssignmentExpression	childobj = node -> _private		3200171	0		=			
ANR	3200296	Identifier	childobj		3200171	0					
ANR	3200297	PtrMemberAccess	node -> _private		3200171	1					
ANR	3200298	Identifier	node		3200171	0					
ANR	3200299	Identifier	_private		3200171	1					
ANR	3200300	ExpressionStatement	childobj -> document = intern -> document	894:5:21770:21807	3200171	1	True				
ANR	3200301	AssignmentExpression	childobj -> document = intern -> document		3200171	0		=			
ANR	3200302	PtrMemberAccess	childobj -> document		3200171	0					
ANR	3200303	Identifier	childobj		3200171	0					
ANR	3200304	Identifier	document		3200171	1					
ANR	3200305	PtrMemberAccess	intern -> document		3200171	1					
ANR	3200306	Identifier	intern		3200171	0					
ANR	3200307	Identifier	document		3200171	1					
ANR	3200308	ExpressionStatement	"php_libxml_increment_doc_ref ( ( php_libxml_node_object * ) childobj , NULL )"	895:5:21814:21884	3200171	2	True				
ANR	3200309	CallExpression	"php_libxml_increment_doc_ref ( ( php_libxml_node_object * ) childobj , NULL )"		3200171	0					
ANR	3200310	Callee	php_libxml_increment_doc_ref		3200171	0					
ANR	3200311	Identifier	php_libxml_increment_doc_ref		3200171	0					
ANR	3200312	ArgumentList	( php_libxml_node_object * ) childobj		3200171	1					
ANR	3200313	Argument	( php_libxml_node_object * ) childobj		3200171	0					
ANR	3200314	CastExpression	( php_libxml_node_object * ) childobj		3200171	0					
ANR	3200315	CastTarget	php_libxml_node_object *		3200171	0					
ANR	3200316	Identifier	childobj		3200171	1					
ANR	3200317	Argument	NULL		3200171	1					
ANR	3200318	Identifier	NULL		3200171	0					
ANR	3200319	IfStatement	if ( node == fragment -> last )		3200171	2					
ANR	3200320	Condition	node == fragment -> last	898:7:21904:21925	3200171	0	True				
ANR	3200321	EqualityExpression	node == fragment -> last		3200171	0		==			
ANR	3200322	Identifier	node		3200171	0					
ANR	3200323	PtrMemberAccess	fragment -> last		3200171	1					
ANR	3200324	Identifier	fragment		3200171	0					
ANR	3200325	Identifier	last		3200171	1					
ANR	3200326	CompoundStatement		31:31:721:721	3200171	1					
ANR	3200327	BreakStatement	break ;	899:4:21934:21939	3200171	0	True				
ANR	3200328	ExpressionStatement	node = node -> next	901:3:21949:21966	3200171	3	True				
ANR	3200329	AssignmentExpression	node = node -> next		3200171	0		=			
ANR	3200330	Identifier	node		3200171	0					
ANR	3200331	PtrMemberAccess	node -> next		3200171	1					
ANR	3200332	Identifier	node		3200171	0					
ANR	3200333	Identifier	next		3200171	1					
ANR	3200334	ExpressionStatement	fragment -> children = NULL	904:2:21975:22000	3200171	5	True				
ANR	3200335	AssignmentExpression	fragment -> children = NULL		3200171	0		=			
ANR	3200336	PtrMemberAccess	fragment -> children		3200171	0					
ANR	3200337	Identifier	fragment		3200171	0					
ANR	3200338	Identifier	children		3200171	1					
ANR	3200339	Identifier	NULL		3200171	1					
ANR	3200340	ExpressionStatement	fragment -> last = NULL	905:2:22004:22025	3200171	6	True				
ANR	3200341	AssignmentExpression	fragment -> last = NULL		3200171	0		=			
ANR	3200342	PtrMemberAccess	fragment -> last		3200171	0					
ANR	3200343	Identifier	fragment		3200171	0					
ANR	3200344	Identifier	last		3200171	1					
ANR	3200345	Identifier	NULL		3200171	1					
ANR	3200346	ReturnStatement	return newchild ;	908:1:22032:22047	3200171	3	True				
ANR	3200347	Identifier	newchild		3200171	0					
ANR	3200348	ReturnType	static xmlNodePtr		3200171	1					
ANR	3200349	Identifier	_php_dom_insert_fragment		3200171	2					
ANR	3200350	ParameterList	"xmlNodePtr nodep , xmlNodePtr prevsib , xmlNodePtr nextsib , xmlNodePtr fragment , dom_object * intern , dom_object * childobj"		3200171	3					
ANR	3200351	Parameter	xmlNodePtr nodep	867:43:21075:21090	3200171	0	True				
ANR	3200352	ParameterType	xmlNodePtr		3200171	0					
ANR	3200353	Identifier	nodep		3200171	1					
ANR	3200354	Parameter	xmlNodePtr prevsib	867:61:21093:21110	3200171	1	True				
ANR	3200355	ParameterType	xmlNodePtr		3200171	0					
ANR	3200356	Identifier	prevsib		3200171	1					
ANR	3200357	Parameter	xmlNodePtr nextsib	867:81:21113:21130	3200171	2	True				
ANR	3200358	ParameterType	xmlNodePtr		3200171	0					
ANR	3200359	Identifier	nextsib		3200171	1					
ANR	3200360	Parameter	xmlNodePtr fragment	867:101:21133:21151	3200171	3	True				
ANR	3200361	ParameterType	xmlNodePtr		3200171	0					
ANR	3200362	Identifier	fragment		3200171	1					
ANR	3200363	Parameter	dom_object * intern	867:122:21154:21171	3200171	4	True				
ANR	3200364	ParameterType	dom_object *		3200171	0					
ANR	3200365	Identifier	intern		3200171	1					
ANR	3200366	Parameter	dom_object * childobj	867:142:21174:21193	3200171	5	True				
ANR	3200367	ParameterType	dom_object *		3200171	0					
ANR	3200368	Identifier	childobj		3200171	1					
ANR	3200369	CFGEntryNode	ENTRY		3200171		True				
ANR	3200370	CFGExitNode	EXIT		3200171		True				
ANR	3200371	Symbol	nodep -> last		3200171						
ANR	3200372	Symbol	node -> _private		3200171						
ANR	3200373	Symbol	* * fragment		3200171						
ANR	3200374	Symbol	fragment -> children		3200171						
ANR	3200375	Symbol	* fragment -> last		3200171						
ANR	3200376	Symbol	nodep -> doc		3200171						
ANR	3200377	Symbol	newchild -> prev		3200171						
ANR	3200378	Symbol	childobj -> document		3200171						
ANR	3200379	Symbol	* childobj		3200171						
ANR	3200380	Symbol	* newchild		3200171						
ANR	3200381	Symbol	* nodep		3200171						
ANR	3200382	Symbol	* node		3200171						
ANR	3200383	Symbol	node -> doc		3200171						
ANR	3200384	Symbol	prevsib -> next		3200171						
ANR	3200385	Symbol	nextsib		3200171						
ANR	3200386	Symbol	* intern		3200171						
ANR	3200387	Symbol	intern		3200171						
ANR	3200388	Symbol	NULL		3200171						
ANR	3200389	Symbol	fragment -> last -> next		3200171						
ANR	3200390	Symbol	* prevsib		3200171						
ANR	3200391	Symbol	node -> next		3200171						
ANR	3200392	Symbol	nodep		3200171						
ANR	3200393	Symbol	prevsib		3200171						
ANR	3200394	Symbol	childobj		3200171						
ANR	3200395	Symbol	node		3200171						
ANR	3200396	Symbol	fragment		3200171						
ANR	3200397	Symbol	nodep -> children		3200171						
ANR	3200398	Symbol	intern -> document		3200171						
ANR	3200399	Symbol	fragment -> last		3200171						
ANR	3200400	Symbol	newchild		3200171						
ANR	3200401	Symbol	node -> parent		3200171						
ANR	3200402	Symbol	nextsib -> prev		3200171						
ANR	3200403	Symbol	* fragment		3200171						
ANR	3200404	Symbol	* nextsib		3200171						
ANR	3200405	DeclStmt									
ANR	3200406	Decl							zval	zval *	id
ANR	3200407	Decl							zval	zval *	node
ANR	3200408	Decl							zval	zval *	ref
ANR	3200409	DeclStmt									
ANR	3200410	Decl							xmlNodePtr	xmlNodePtr	child
ANR	3200411	Decl							xmlNodePtr	xmlNodePtr	new_child
ANR	3200412	Decl							xmlNodePtr	xmlNodePtr	parentp
ANR	3200413	Decl							xmlNodePtr	xmlNodePtr	refp
ANR	3200414	DeclStmt									
ANR	3200415	Decl							dom_object	dom_object *	intern
ANR	3200416	Decl							dom_object	dom_object *	childobj
ANR	3200417	Decl							dom_object	dom_object *	refpobj
ANR	3200418	DeclStmt									
ANR	3200419	Decl							int	int	ret
ANR	3200420	Decl							int	int	stricterror
ANR	3200421	DeclStmt									
ANR	3200422	Decl							xmlAttrPtr	xmlAttrPtr	lastattr
ANR	3200423	DeclStmt									
ANR	3200424	Decl							xmlAttrPtr	xmlAttrPtr	lastattr
ANR	3200425	DeclStmt									
ANR	3200426	Decl							zval	zval *	id
ANR	3200427	Decl							zval	zval *	newnode
ANR	3200428	Decl							zval	zval *	oldnode
ANR	3200429	DeclStmt									
ANR	3200430	Decl							xmlNodePtr	xmlNodePtr	children
ANR	3200431	Decl							xmlNodePtr	xmlNodePtr	newchild
ANR	3200432	Decl							xmlNodePtr	xmlNodePtr	oldchild
ANR	3200433	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	3200434	DeclStmt									
ANR	3200435	Decl							dom_object	dom_object *	intern
ANR	3200436	Decl							dom_object	dom_object *	newchildobj
ANR	3200437	Decl							dom_object	dom_object *	oldchildobj
ANR	3200438	DeclStmt									
ANR	3200439	Decl							int	int	foundoldchild
ANR	3200440	Decl							int	int	stricterror
ANR	3200441	DeclStmt									
ANR	3200442	Decl							int	int	ret
ANR	3200443	DeclStmt									
ANR	3200444	Decl							xmlNodePtr	xmlNodePtr	prevsib
ANR	3200445	Decl							xmlNodePtr	xmlNodePtr	nextsib
ANR	3200446	DeclStmt									
ANR	3200447	Decl							zval	zval *	id
ANR	3200448	Decl							zval	zval *	node
ANR	3200449	DeclStmt									
ANR	3200450	Decl							xmlNodePtr	xmlNodePtr	children
ANR	3200451	Decl							xmlNodePtr	xmlNodePtr	child
ANR	3200452	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	3200453	DeclStmt									
ANR	3200454	Decl							dom_object	dom_object *	intern
ANR	3200455	Decl							dom_object	dom_object *	childobj
ANR	3200456	DeclStmt									
ANR	3200457	Decl							int	int	ret
ANR	3200458	Decl							int	int	stricterror
ANR	3200459	DeclStmt									
ANR	3200460	Decl							zval	zval *	id
ANR	3200461	Decl							zval	zval *	node
ANR	3200462	DeclStmt									
ANR	3200463	Decl							xmlNodePtr	xmlNodePtr	child
ANR	3200464	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	3200465	Decl							xmlNodePtr	xmlNodePtr	new_child
ANR	3200466	DeclStmt									
ANR	3200467	Decl							dom_object	dom_object *	intern
ANR	3200468	Decl							dom_object	dom_object *	childobj
ANR	3200469	DeclStmt									
ANR	3200470	Decl							int	int	ret
ANR	3200471	Decl							int	int	stricterror
ANR	3200472	DeclStmt									
ANR	3200473	Decl							xmlAttrPtr	xmlAttrPtr	lastattr
ANR	3200474	DeclStmt									
ANR	3200475	Decl							zval	zval *	id
ANR	3200476	DeclStmt									
ANR	3200477	Decl							xmlNode	xmlNode *	nodep
ANR	3200478	DeclStmt									
ANR	3200479	Decl							dom_object	dom_object *	intern
ANR	3200480	DeclStmt									
ANR	3200481	Decl							zval	zval *	id
ANR	3200482	DeclStmt									
ANR	3200483	Decl							xmlNode	xmlNode *	n
ANR	3200484	Decl							xmlNode	xmlNode *	node
ANR	3200485	DeclStmt									
ANR	3200486	Decl							int	int	ret
ANR	3200487	DeclStmt									
ANR	3200488	Decl							dom_object	dom_object *	intern
ANR	3200489	DeclStmt									
ANR	3200490	Decl							zend_long	zend_long	recursive
ANR	3200491	DeclStmt									
ANR	3200492	Decl							xmlNsPtr	xmlNsPtr	ns
ANR	3200493	DeclStmt									
ANR	3200494	Decl							xmlNodePtr	xmlNodePtr	root
ANR	3200495	DeclStmt									
ANR	3200496	Decl							zval	zval *	id
ANR	3200497	DeclStmt									
ANR	3200498	Decl							xmlNode	xmlNode *	nodep
ANR	3200499	DeclStmt									
ANR	3200500	Decl							dom_object	dom_object *	intern
ANR	3200501	DeclStmt									
ANR	3200502	Decl							zval	zval *	id
ANR	3200503	DeclStmt									
ANR	3200504	Decl							size_t	size_t	feature_len
ANR	3200505	Decl							size_t	size_t	version_len
ANR	3200506	DeclStmt									
ANR	3200507	Decl							char	char *	feature
ANR	3200508	Decl							char	char *	version
ANR	3200509	DeclStmt									
ANR	3200510	Decl							zval	zval *	id
ANR	3200511	DeclStmt									
ANR	3200512	Decl							xmlNode	xmlNode *	nodep
ANR	3200513	DeclStmt									
ANR	3200514	Decl							dom_object	dom_object *	intern
ANR	3200515	DeclStmt									
ANR	3200516	Decl							zval	zval *	id
ANR	3200517	Decl							zval	zval *	node
ANR	3200518	DeclStmt									
ANR	3200519	Decl							xmlNodePtr	xmlNodePtr	nodeotherp
ANR	3200520	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	3200521	DeclStmt									
ANR	3200522	Decl							dom_object	dom_object *	intern
ANR	3200523	Decl							dom_object	dom_object *	nodeotherobj
ANR	3200524	DeclStmt									
ANR	3200525	Decl							zval	zval *	id
ANR	3200526	DeclStmt									
ANR	3200527	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	3200528	Decl							xmlNodePtr	xmlNodePtr	lookupp
ANR	3200529	DeclStmt									
ANR	3200530	Decl							dom_object	dom_object *	intern
ANR	3200531	DeclStmt									
ANR	3200532	Decl							xmlNsPtr	xmlNsPtr	nsptr
ANR	3200533	DeclStmt									
ANR	3200534	Decl							size_t	size_t	uri_len
ANR	3200535	DeclStmt									
ANR	3200536	Decl							char	char *	uri
ANR	3200537	DeclStmt									
ANR	3200538	Decl							zval	zval *	id
ANR	3200539	DeclStmt									
ANR	3200540	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	3200541	DeclStmt									
ANR	3200542	Decl							dom_object	dom_object *	intern
ANR	3200543	DeclStmt									
ANR	3200544	Decl							xmlNsPtr	xmlNsPtr	nsptr
ANR	3200545	DeclStmt									
ANR	3200546	Decl							size_t	size_t	uri_len
ANR	3200547	DeclStmt									
ANR	3200548	Decl							char	char *	uri
ANR	3200549	DeclStmt									
ANR	3200550	Decl							zval	zval *	id
ANR	3200551	DeclStmt									
ANR	3200552	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	3200553	DeclStmt									
ANR	3200554	Decl							dom_object	dom_object *	intern
ANR	3200555	DeclStmt									
ANR	3200556	Decl							xmlNsPtr	xmlNsPtr	nsptr
ANR	3200557	DeclStmt									
ANR	3200558	Decl							size_t	size_t	prefix_len
ANR	3200559	DeclStmt									
ANR	3200560	Decl							char	char *	prefix
ANR	3200561	DeclStmt									
ANR	3200562	Decl							zval	zval *	id
ANR	3200563	DeclStmt									
ANR	3200564	Decl							zval	zval *	xpath_array
ANR	3200565	Decl							zval	zval *	ns_prefixes
ANR	3200566	DeclStmt									
ANR	3200567	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	3200568	DeclStmt									
ANR	3200569	Decl							xmlDocPtr	xmlDocPtr	docp
ANR	3200570	DeclStmt									
ANR	3200571	Decl							xmlNodeSetPtr	xmlNodeSetPtr	nodeset
ANR	3200572	DeclStmt									
ANR	3200573	Decl							dom_object	dom_object *	intern
ANR	3200574	DeclStmt									
ANR	3200575	Decl							zend_bool	zend_bool	exclusive
ANR	3200576	Decl							zend_bool	zend_bool	with_comments
ANR	3200577	DeclStmt									
ANR	3200578	Decl							xmlChar	xmlChar * *	inclusive_ns_prefixes
ANR	3200579	DeclStmt									
ANR	3200580	Decl							char	char *	file
ANR	3200581	DeclStmt									
ANR	3200582	Decl							int	int	ret
ANR	3200583	DeclStmt									
ANR	3200584	Decl							size_t	size_t	file_len
ANR	3200585	DeclStmt									
ANR	3200586	Decl							xmlOutputBufferPtr	xmlOutputBufferPtr	buf
ANR	3200587	DeclStmt									
ANR	3200588	Decl							xmlXPathContextPtr	xmlXPathContextPtr	ctxp
ANR	3200589	DeclStmt									
ANR	3200590	Decl							xmlXPathObjectPtr	xmlXPathObjectPtr	xpathobjp
ANR	3200591	DeclStmt									
ANR	3200592	Decl							HashTable	HashTable *	ht
ANR	3200593	DeclStmt									
ANR	3200594	Decl							zval	zval *	tmp
ANR	3200595	DeclStmt									
ANR	3200596	Decl							char	char *	xquery
ANR	3200597	DeclStmt									
ANR	3200598	Decl							zval	zval *	tmpns
ANR	3200599	DeclStmt									
ANR	3200600	Decl							zend_string	zend_string *	prefix
ANR	3200601	DeclStmt									
ANR	3200602	Decl							zval	zval *	tmpns
ANR	3200603	DeclStmt									
ANR	3200604	Decl							int	int	nscount
ANR	3200605	DeclStmt									
ANR	3200606	Decl							int	int	bytes
ANR	3200607	DeclStmt									
ANR	3200608	Decl							zval	zval *	id
ANR	3200609	DeclStmt									
ANR	3200610	Decl							xmlNode	xmlNode *	nodep
ANR	3200611	DeclStmt									
ANR	3200612	Decl							dom_object	dom_object *	intern
ANR	3200613	DeclStmt									
ANR	3200614	Decl							char	char *	value
ANR	3200615	DeclStmt									
ANR	3200616	Decl							zval	zval *	id
ANR	3200617	DeclStmt									
ANR	3200618	Decl							xmlNode	xmlNode *	nodep
ANR	3200619	DeclStmt									
ANR	3200620	Decl							dom_object	dom_object *	intern
