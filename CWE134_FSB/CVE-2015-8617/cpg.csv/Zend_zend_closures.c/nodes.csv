command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	86581	File	data/converged/CVE-2015-8617_php-src/Zend_zend_closures.c								
ANR	86582	ClassDef	_zend_closure	40:8:1811:2021							
ANR	86583	DeclStmt									
ANR	86584	Decl							zend_object	zend_object	std
ANR	86585	DeclStmt									
ANR	86586	Decl							zend_function	zend_function	func
ANR	86587	DeclStmt									
ANR	86588	Decl							zval	zval	this_ptr
ANR	86589	DeclStmt									
ANR	86590	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	86591	DeclStmt									
ANR	86592	Decl							void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	orig_internal_handler
ANR	86593	DeclStmt									
ANR	86594	Decl							_zend_closure	_zend_closure	zend_closure
ANR	86595	DeclStmt									
ANR	86596	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_closure
ANR	86597	DeclStmt									
ANR	86598	Decl							zend_object_handlers	zend_object_handlers	closure_handlers
ANR	86599	DeclStmt									
ANR	86600	Decl							zend_function	zend_function *	func
ANR	86601	DeclStmt									
ANR	86602	Decl							zval	zval *	arguments
ANR	86603	Function	zend_valid_closure_binding	76:0:2885:4330							
ANR	86604	FunctionDef	"zend_valid_closure_binding (zend_closure * closure , zval * newthis , zend_class_entry * scope)"		86603	0					
ANR	86605	CompoundStatement		78:0:3005:4330	86603	0					
ANR	86606	IdentifierDeclStatement	zend_function * func = & closure -> func ;	79:1:3008:3044	86603	0	True				
ANR	86607	IdentifierDecl	* func = & closure -> func		86603	0					
ANR	86608	IdentifierDeclType	zend_function *		86603	0					
ANR	86609	Identifier	func		86603	1					
ANR	86610	AssignmentExpression	* func = & closure -> func		86603	2		=			
ANR	86611	Identifier	func		86603	0					
ANR	86612	UnaryOperationExpression	& closure -> func		86603	1					
ANR	86613	UnaryOperator	&		86603	0					
ANR	86614	PtrMemberAccess	closure -> func		86603	1					
ANR	86615	Identifier	closure		86603	0					
ANR	86616	Identifier	func		86603	1					
ANR	86617	IfStatement	if ( newthis )		86603	1					
ANR	86618	Condition	newthis	80:5:3051:3057	86603	0	True				
ANR	86619	Identifier	newthis		86603	0					
ANR	86620	CompoundStatement		3:14:54:54	86603	1					
ANR	86621	IfStatement	if ( func -> common . fn_flags & ZEND_ACC_STATIC )		86603	0					
ANR	86622	Condition	func -> common . fn_flags & ZEND_ACC_STATIC	81:6:3068:3106	86603	0	True				
ANR	86623	BitAndExpression	func -> common . fn_flags & ZEND_ACC_STATIC		86603	0		&			
ANR	86624	MemberAccess	func -> common . fn_flags		86603	0					
ANR	86625	PtrMemberAccess	func -> common		86603	0					
ANR	86626	Identifier	func		86603	0					
ANR	86627	Identifier	common		86603	1					
ANR	86628	Identifier	fn_flags		86603	1					
ANR	86629	Identifier	ZEND_ACC_STATIC		86603	1					
ANR	86630	CompoundStatement		4:47:103:103	86603	1					
ANR	86631	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot bind an instance to a static closure"" )"	82:3:3114:3182	86603	0	True				
ANR	86632	CallExpression	"zend_error ( E_WARNING , ""Cannot bind an instance to a static closure"" )"		86603	0					
ANR	86633	Callee	zend_error		86603	0					
ANR	86634	Identifier	zend_error		86603	0					
ANR	86635	ArgumentList	E_WARNING		86603	1					
ANR	86636	Argument	E_WARNING		86603	0					
ANR	86637	Identifier	E_WARNING		86603	0					
ANR	86638	Argument	"""Cannot bind an instance to a static closure"""		86603	1					
ANR	86639	PrimaryExpression	"""Cannot bind an instance to a static closure"""		86603	0					
ANR	86640	ReturnStatement	return 0 ;	83:3:3187:3195	86603	1	True				
ANR	86641	PrimaryExpression	0		86603	0					
ANR	86642	IfStatement	"if ( func -> type == ZEND_INTERNAL_FUNCTION && func -> common . scope && ! instanceof_function ( Z_OBJCE_P ( newthis ) , func -> common . scope ) )"		86603	1					
ANR	86643	Condition	"func -> type == ZEND_INTERNAL_FUNCTION && func -> common . scope && ! instanceof_function ( Z_OBJCE_P ( newthis ) , func -> common . scope )"	86:6:3208:3333	86603	0	True				
ANR	86644	AndExpression	"func -> type == ZEND_INTERNAL_FUNCTION && func -> common . scope && ! instanceof_function ( Z_OBJCE_P ( newthis ) , func -> common . scope )"		86603	0		&&			
ANR	86645	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		86603	0		==			
ANR	86646	PtrMemberAccess	func -> type		86603	0					
ANR	86647	Identifier	func		86603	0					
ANR	86648	Identifier	type		86603	1					
ANR	86649	Identifier	ZEND_INTERNAL_FUNCTION		86603	1					
ANR	86650	AndExpression	"func -> common . scope && ! instanceof_function ( Z_OBJCE_P ( newthis ) , func -> common . scope )"		86603	1		&&			
ANR	86651	MemberAccess	func -> common . scope		86603	0					
ANR	86652	PtrMemberAccess	func -> common		86603	0					
ANR	86653	Identifier	func		86603	0					
ANR	86654	Identifier	common		86603	1					
ANR	86655	Identifier	scope		86603	1					
ANR	86656	UnaryOperationExpression	"! instanceof_function ( Z_OBJCE_P ( newthis ) , func -> common . scope )"		86603	1					
ANR	86657	UnaryOperator	!		86603	0					
ANR	86658	CallExpression	"instanceof_function ( Z_OBJCE_P ( newthis ) , func -> common . scope )"		86603	1					
ANR	86659	Callee	instanceof_function		86603	0					
ANR	86660	Identifier	instanceof_function		86603	0					
ANR	86661	ArgumentList	Z_OBJCE_P ( newthis )		86603	1					
ANR	86662	Argument	Z_OBJCE_P ( newthis )		86603	0					
ANR	86663	CallExpression	Z_OBJCE_P ( newthis )		86603	0					
ANR	86664	Callee	Z_OBJCE_P		86603	0					
ANR	86665	Identifier	Z_OBJCE_P		86603	0					
ANR	86666	ArgumentList	newthis		86603	1					
ANR	86667	Argument	newthis		86603	0					
ANR	86668	Identifier	newthis		86603	0					
ANR	86669	Argument	func -> common . scope		86603	1					
ANR	86670	MemberAccess	func -> common . scope		86603	0					
ANR	86671	PtrMemberAccess	func -> common		86603	0					
ANR	86672	Identifier	func		86603	0					
ANR	86673	Identifier	common		86603	1					
ANR	86674	Identifier	scope		86603	1					
ANR	86675	CompoundStatement		10:66:330:330	86603	1					
ANR	86676	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot bind internal method %s::%s() to object of class %s"" , ZSTR_VAL ( func -> common . scope -> name ) , ZSTR_VAL ( func -> common . function_name ) , ZSTR_VAL ( Z_OBJCE_P ( newthis ) -> name ) )"	89:3:3417:3625	86603	0	True				
ANR	86677	CallExpression	"zend_error ( E_WARNING , ""Cannot bind internal method %s::%s() to object of class %s"" , ZSTR_VAL ( func -> common . scope -> name ) , ZSTR_VAL ( func -> common . function_name ) , ZSTR_VAL ( Z_OBJCE_P ( newthis ) -> name ) )"		86603	0					
ANR	86678	Callee	zend_error		86603	0					
ANR	86679	Identifier	zend_error		86603	0					
ANR	86680	ArgumentList	E_WARNING		86603	1					
ANR	86681	Argument	E_WARNING		86603	0					
ANR	86682	Identifier	E_WARNING		86603	0					
ANR	86683	Argument	"""Cannot bind internal method %s::%s() to object of class %s"""		86603	1					
ANR	86684	PrimaryExpression	"""Cannot bind internal method %s::%s() to object of class %s"""		86603	0					
ANR	86685	Argument	ZSTR_VAL ( func -> common . scope -> name )		86603	2					
ANR	86686	CallExpression	ZSTR_VAL ( func -> common . scope -> name )		86603	0					
ANR	86687	Callee	ZSTR_VAL		86603	0					
ANR	86688	Identifier	ZSTR_VAL		86603	0					
ANR	86689	ArgumentList	func -> common . scope -> name		86603	1					
ANR	86690	Argument	func -> common . scope -> name		86603	0					
ANR	86691	PtrMemberAccess	func -> common . scope -> name		86603	0					
ANR	86692	MemberAccess	func -> common . scope		86603	0					
ANR	86693	PtrMemberAccess	func -> common		86603	0					
ANR	86694	Identifier	func		86603	0					
ANR	86695	Identifier	common		86603	1					
ANR	86696	Identifier	scope		86603	1					
ANR	86697	Identifier	name		86603	1					
ANR	86698	Argument	ZSTR_VAL ( func -> common . function_name )		86603	3					
ANR	86699	CallExpression	ZSTR_VAL ( func -> common . function_name )		86603	0					
ANR	86700	Callee	ZSTR_VAL		86603	0					
ANR	86701	Identifier	ZSTR_VAL		86603	0					
ANR	86702	ArgumentList	func -> common . function_name		86603	1					
ANR	86703	Argument	func -> common . function_name		86603	0					
ANR	86704	MemberAccess	func -> common . function_name		86603	0					
ANR	86705	PtrMemberAccess	func -> common		86603	0					
ANR	86706	Identifier	func		86603	0					
ANR	86707	Identifier	common		86603	1					
ANR	86708	Identifier	function_name		86603	1					
ANR	86709	Argument	ZSTR_VAL ( Z_OBJCE_P ( newthis ) -> name )		86603	4					
ANR	86710	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( newthis ) -> name )		86603	0					
ANR	86711	Callee	ZSTR_VAL		86603	0					
ANR	86712	Identifier	ZSTR_VAL		86603	0					
ANR	86713	ArgumentList	Z_OBJCE_P ( newthis ) -> name		86603	1					
ANR	86714	Argument	Z_OBJCE_P ( newthis ) -> name		86603	0					
ANR	86715	PtrMemberAccess	Z_OBJCE_P ( newthis ) -> name		86603	0					
ANR	86716	CallExpression	Z_OBJCE_P ( newthis )		86603	0					
ANR	86717	Callee	Z_OBJCE_P		86603	0					
ANR	86718	Identifier	Z_OBJCE_P		86603	0					
ANR	86719	ArgumentList	newthis		86603	1					
ANR	86720	Argument	newthis		86603	0					
ANR	86721	Identifier	newthis		86603	0					
ANR	86722	Identifier	name		86603	1					
ANR	86723	ReturnStatement	return 0 ;	93:3:3630:3638	86603	1	True				
ANR	86724	PrimaryExpression	0		86603	0					
ANR	86725	ElseStatement	else		86603	0					
ANR	86726	IfStatement	if ( ! ( func -> common . fn_flags & ZEND_ACC_STATIC ) && func -> common . scope && func -> type == ZEND_INTERNAL_FUNCTION )		86603	0					
ANR	86727	Condition	! ( func -> common . fn_flags & ZEND_ACC_STATIC ) && func -> common . scope && func -> type == ZEND_INTERNAL_FUNCTION	95:12:3656:3762	86603	0	True				
ANR	86728	AndExpression	! ( func -> common . fn_flags & ZEND_ACC_STATIC ) && func -> common . scope && func -> type == ZEND_INTERNAL_FUNCTION		86603	0		&&			
ANR	86729	UnaryOperationExpression	! ( func -> common . fn_flags & ZEND_ACC_STATIC )		86603	0					
ANR	86730	UnaryOperator	!		86603	0					
ANR	86731	BitAndExpression	func -> common . fn_flags & ZEND_ACC_STATIC		86603	1		&			
ANR	86732	MemberAccess	func -> common . fn_flags		86603	0					
ANR	86733	PtrMemberAccess	func -> common		86603	0					
ANR	86734	Identifier	func		86603	0					
ANR	86735	Identifier	common		86603	1					
ANR	86736	Identifier	fn_flags		86603	1					
ANR	86737	Identifier	ZEND_ACC_STATIC		86603	1					
ANR	86738	AndExpression	func -> common . scope && func -> type == ZEND_INTERNAL_FUNCTION		86603	1		&&			
ANR	86739	MemberAccess	func -> common . scope		86603	0					
ANR	86740	PtrMemberAccess	func -> common		86603	0					
ANR	86741	Identifier	func		86603	0					
ANR	86742	Identifier	common		86603	1					
ANR	86743	Identifier	scope		86603	1					
ANR	86744	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		86603	1		==			
ANR	86745	PtrMemberAccess	func -> type		86603	0					
ANR	86746	Identifier	func		86603	0					
ANR	86747	Identifier	type		86603	1					
ANR	86748	Identifier	ZEND_INTERNAL_FUNCTION		86603	1					
ANR	86749	CompoundStatement		19:44:759:759	86603	1					
ANR	86750	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot unbind $this of internal method"" )"	97:2:3769:3832	86603	0	True				
ANR	86751	CallExpression	"zend_error ( E_WARNING , ""Cannot unbind $this of internal method"" )"		86603	0					
ANR	86752	Callee	zend_error		86603	0					
ANR	86753	Identifier	zend_error		86603	0					
ANR	86754	ArgumentList	E_WARNING		86603	1					
ANR	86755	Argument	E_WARNING		86603	0					
ANR	86756	Identifier	E_WARNING		86603	0					
ANR	86757	Argument	"""Cannot unbind $this of internal method"""		86603	1					
ANR	86758	PrimaryExpression	"""Cannot unbind $this of internal method"""		86603	0					
ANR	86759	ReturnStatement	return 0 ;	98:2:3836:3844	86603	1	True				
ANR	86760	PrimaryExpression	0		86603	0					
ANR	86761	IfStatement	if ( scope && scope != func -> common . scope && scope -> type == ZEND_INTERNAL_CLASS )		86603	2					
ANR	86762	Condition	scope && scope != func -> common . scope && scope -> type == ZEND_INTERNAL_CLASS	101:5:3855:3928	86603	0	True				
ANR	86763	AndExpression	scope && scope != func -> common . scope && scope -> type == ZEND_INTERNAL_CLASS		86603	0		&&			
ANR	86764	Identifier	scope		86603	0					
ANR	86765	AndExpression	scope != func -> common . scope && scope -> type == ZEND_INTERNAL_CLASS		86603	1		&&			
ANR	86766	EqualityExpression	scope != func -> common . scope		86603	0		!=			
ANR	86767	Identifier	scope		86603	0					
ANR	86768	MemberAccess	func -> common . scope		86603	1					
ANR	86769	PtrMemberAccess	func -> common		86603	0					
ANR	86770	Identifier	func		86603	0					
ANR	86771	Identifier	common		86603	1					
ANR	86772	Identifier	scope		86603	1					
ANR	86773	EqualityExpression	scope -> type == ZEND_INTERNAL_CLASS		86603	1		==			
ANR	86774	PtrMemberAccess	scope -> type		86603	0					
ANR	86775	Identifier	scope		86603	0					
ANR	86776	Identifier	type		86603	1					
ANR	86777	Identifier	ZEND_INTERNAL_CLASS		86603	1					
ANR	86778	CompoundStatement		24:81:925:925	86603	1					
ANR	86779	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot bind closure to scope of internal class %s"" , ZSTR_VAL ( scope -> name ) )"	103:2:3986:4087	86603	0	True				
ANR	86780	CallExpression	"zend_error ( E_WARNING , ""Cannot bind closure to scope of internal class %s"" , ZSTR_VAL ( scope -> name ) )"		86603	0					
ANR	86781	Callee	zend_error		86603	0					
ANR	86782	Identifier	zend_error		86603	0					
ANR	86783	ArgumentList	E_WARNING		86603	1					
ANR	86784	Argument	E_WARNING		86603	0					
ANR	86785	Identifier	E_WARNING		86603	0					
ANR	86786	Argument	"""Cannot bind closure to scope of internal class %s"""		86603	1					
ANR	86787	PrimaryExpression	"""Cannot bind closure to scope of internal class %s"""		86603	0					
ANR	86788	Argument	ZSTR_VAL ( scope -> name )		86603	2					
ANR	86789	CallExpression	ZSTR_VAL ( scope -> name )		86603	0					
ANR	86790	Callee	ZSTR_VAL		86603	0					
ANR	86791	Identifier	ZSTR_VAL		86603	0					
ANR	86792	ArgumentList	scope -> name		86603	1					
ANR	86793	Argument	scope -> name		86603	0					
ANR	86794	PtrMemberAccess	scope -> name		86603	0					
ANR	86795	Identifier	scope		86603	0					
ANR	86796	Identifier	name		86603	1					
ANR	86797	ReturnStatement	return 0 ;	105:2:4091:4099	86603	1	True				
ANR	86798	PrimaryExpression	0		86603	0					
ANR	86799	IfStatement	if ( ( func -> common . fn_flags & ZEND_ACC_FAKE_CLOSURE ) && scope != func -> common . scope )		86603	3					
ANR	86800	Condition	( func -> common . fn_flags & ZEND_ACC_FAKE_CLOSURE ) && scope != func -> common . scope	108:5:4110:4187	86603	0	True				
ANR	86801	AndExpression	( func -> common . fn_flags & ZEND_ACC_FAKE_CLOSURE ) && scope != func -> common . scope		86603	0		&&			
ANR	86802	BitAndExpression	func -> common . fn_flags & ZEND_ACC_FAKE_CLOSURE		86603	0		&			
ANR	86803	MemberAccess	func -> common . fn_flags		86603	0					
ANR	86804	PtrMemberAccess	func -> common		86603	0					
ANR	86805	Identifier	func		86603	0					
ANR	86806	Identifier	common		86603	1					
ANR	86807	Identifier	fn_flags		86603	1					
ANR	86808	Identifier	ZEND_ACC_FAKE_CLOSURE		86603	1					
ANR	86809	EqualityExpression	scope != func -> common . scope		86603	1		!=			
ANR	86810	Identifier	scope		86603	0					
ANR	86811	MemberAccess	func -> common . scope		86603	1					
ANR	86812	PtrMemberAccess	func -> common		86603	0					
ANR	86813	Identifier	func		86603	0					
ANR	86814	Identifier	common		86603	1					
ANR	86815	Identifier	scope		86603	1					
ANR	86816	CompoundStatement		31:85:1184:1184	86603	1					
ANR	86817	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot rebind scope of closure created by ReflectionFunctionAbstract::getClosure()"" )"	109:2:4194:4301	86603	0	True				
ANR	86818	CallExpression	"zend_error ( E_WARNING , ""Cannot rebind scope of closure created by ReflectionFunctionAbstract::getClosure()"" )"		86603	0					
ANR	86819	Callee	zend_error		86603	0					
ANR	86820	Identifier	zend_error		86603	0					
ANR	86821	ArgumentList	E_WARNING		86603	1					
ANR	86822	Argument	E_WARNING		86603	0					
ANR	86823	Identifier	E_WARNING		86603	0					
ANR	86824	Argument	"""Cannot rebind scope of closure created by ReflectionFunctionAbstract::getClosure()"""		86603	1					
ANR	86825	PrimaryExpression	"""Cannot rebind scope of closure created by ReflectionFunctionAbstract::getClosure()"""		86603	0					
ANR	86826	ReturnStatement	return 0 ;	110:2:4305:4313	86603	1	True				
ANR	86827	PrimaryExpression	0		86603	0					
ANR	86828	ReturnStatement	return 1 ;	113:1:4320:4328	86603	4	True				
ANR	86829	PrimaryExpression	1		86603	0					
ANR	86830	ReturnType	static zend_bool		86603	1					
ANR	86831	Identifier	zend_valid_closure_binding		86603	2					
ANR	86832	ParameterList	"zend_closure * closure , zval * newthis , zend_class_entry * scope"		86603	3					
ANR	86833	Parameter	zend_closure * closure	77:2:2932:2952	86603	0	True				
ANR	86834	ParameterType	zend_closure *		86603	0					
ANR	86835	Identifier	closure		86603	1					
ANR	86836	Parameter	zval * newthis	77:25:2955:2967	86603	1	True				
ANR	86837	ParameterType	zval *		86603	0					
ANR	86838	Identifier	newthis		86603	1					
ANR	86839	Parameter	zend_class_entry * scope	77:40:2970:2992	86603	2	True				
ANR	86840	ParameterType	zend_class_entry *		86603	0					
ANR	86841	Identifier	scope		86603	1					
ANR	86842	CFGEntryNode	ENTRY		86603		True				
ANR	86843	CFGExitNode	EXIT		86603		True				
ANR	86844	Symbol	instanceof_function		86603						
ANR	86845	Symbol	scope -> type		86603						
ANR	86846	Symbol	E_WARNING		86603						
ANR	86847	Symbol	ZEND_INTERNAL_FUNCTION		86603						
ANR	86848	Symbol	func -> common . scope		86603						
ANR	86849	Symbol	func -> common . scope -> name		86603						
ANR	86850	Symbol	func -> common		86603						
ANR	86851	Symbol	scope		86603						
ANR	86852	Symbol	Z_OBJCE_P		86603						
ANR	86853	Symbol	ZEND_ACC_STATIC		86603						
ANR	86854	Symbol	func -> type		86603						
ANR	86855	Symbol	Z_OBJCE_P ( newthis ) -> name		86603						
ANR	86856	Symbol	closure		86603						
ANR	86857	Symbol	* Z_OBJCE_P		86603						
ANR	86858	Symbol	ZEND_INTERNAL_CLASS		86603						
ANR	86859	Symbol	func -> common . fn_flags		86603						
ANR	86860	Symbol	* func		86603						
ANR	86861	Symbol	& closure -> func		86603						
ANR	86862	Symbol	func -> common . function_name		86603						
ANR	86863	Symbol	* * func		86603						
ANR	86864	Symbol	ZSTR_VAL		86603						
ANR	86865	Symbol	* func -> common . scope		86603						
ANR	86866	Symbol	* func -> common		86603						
ANR	86867	Symbol	newthis		86603						
ANR	86868	Symbol	func		86603						
ANR	86869	Symbol	scope -> name		86603						
ANR	86870	Symbol	* scope		86603						
ANR	86871	Symbol	ZEND_ACC_FAKE_CLOSURE		86603						
ANR	86872	DeclStmt									
ANR	86873	Decl							zval	zval *	zclosure
ANR	86874	Decl							zval	zval *	newthis
ANR	86875	Decl							zval	zval	closure_result
ANR	86876	DeclStmt									
ANR	86877	Decl							zend_closure	zend_closure *	closure
ANR	86878	DeclStmt									
ANR	86879	Decl							zend_fcall_info	zend_fcall_info	fci
ANR	86880	DeclStmt									
ANR	86881	Decl							zend_fcall_info_cache	zend_fcall_info_cache	fci_cache
ANR	86882	DeclStmt									
ANR	86883	Decl							zval	zval *	my_params
ANR	86884	DeclStmt									
ANR	86885	Decl							int	int	my_param_count
ANR	86886	DeclStmt									
ANR	86887	Decl							zend_function	zend_function	my_function
ANR	86888	DeclStmt									
ANR	86889	Decl							zend_object	zend_object *	newobj
ANR	86890	DeclStmt									
ANR	86891	Decl							zval	zval	new_closure
ANR	86892	DeclStmt									
ANR	86893	Decl							zval	zval *	newthis
ANR	86894	Decl							zval	zval *	zclosure
ANR	86895	Decl							zval	zval *	scope_arg
ANR	86896	DeclStmt									
ANR	86897	Decl							zend_closure	zend_closure *	closure
ANR	86898	Decl							zend_closure	zend_closure *	new_closure
ANR	86899	DeclStmt									
ANR	86900	Decl							zend_class_entry	zend_class_entry *	ce
ANR	86901	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	86902	DeclStmt									
ANR	86903	Decl							zend_string	zend_string *	class_name
ANR	86904	Function	zend_closure_get_constructor	243:0:8946:9124							
ANR	86905	FunctionDef	zend_closure_get_constructor (zend_object * object)		86904	0					
ANR	86906	CompoundStatement		244:0:9038:9124	86904	0					
ANR	86907	ExpressionStatement	"zend_throw_error ( NULL , ""Instantiation of 'Closure' is not allowed"" )"	245:1:9041:9108	86904	0	True				
ANR	86908	CallExpression	"zend_throw_error ( NULL , ""Instantiation of 'Closure' is not allowed"" )"		86904	0					
ANR	86909	Callee	zend_throw_error		86904	0					
ANR	86910	Identifier	zend_throw_error		86904	0					
ANR	86911	ArgumentList	NULL		86904	1					
ANR	86912	Argument	NULL		86904	0					
ANR	86913	Identifier	NULL		86904	0					
ANR	86914	Argument	"""Instantiation of 'Closure' is not allowed"""		86904	1					
ANR	86915	PrimaryExpression	"""Instantiation of 'Closure' is not allowed"""		86904	0					
ANR	86916	ReturnStatement	return NULL ;	246:1:9111:9122	86904	1	True				
ANR	86917	Identifier	NULL		86904	0					
ANR	86918	ReturnType	static ZEND_COLD zend_function *		86904	1					
ANR	86919	Identifier	zend_closure_get_constructor		86904	2					
ANR	86920	ParameterList	zend_object * object		86904	3					
ANR	86921	Parameter	zend_object * object	243:61:9007:9025	86904	0	True				
ANR	86922	ParameterType	zend_object *		86904	0					
ANR	86923	Identifier	object		86904	1					
ANR	86924	CFGEntryNode	ENTRY		86904		True				
ANR	86925	CFGExitNode	EXIT		86904		True				
ANR	86926	Symbol	NULL		86904						
ANR	86927	Symbol	object		86904						
ANR	86928	Function	zend_closure_compare_objects	250:0:9137:9247							
ANR	86929	FunctionDef	"zend_closure_compare_objects (zval * o1 , zval * o2)"		86928	0					
ANR	86930	CompoundStatement		251:0:9207:9247	86928	0					
ANR	86931	ReturnStatement	return ( Z_OBJ_P ( o1 ) != Z_OBJ_P ( o2 ) ) ;	252:1:9210:9245	86928	0	True				
ANR	86932	EqualityExpression	Z_OBJ_P ( o1 ) != Z_OBJ_P ( o2 )		86928	0		!=			
ANR	86933	CallExpression	Z_OBJ_P ( o1 )		86928	0					
ANR	86934	Callee	Z_OBJ_P		86928	0					
ANR	86935	Identifier	Z_OBJ_P		86928	0					
ANR	86936	ArgumentList	o1		86928	1					
ANR	86937	Argument	o1		86928	0					
ANR	86938	Identifier	o1		86928	0					
ANR	86939	CallExpression	Z_OBJ_P ( o2 )		86928	1					
ANR	86940	Callee	Z_OBJ_P		86928	0					
ANR	86941	Identifier	Z_OBJ_P		86928	0					
ANR	86942	ArgumentList	o2		86928	1					
ANR	86943	Argument	o2		86928	0					
ANR	86944	Identifier	o2		86928	0					
ANR	86945	ReturnType	static int		86928	1					
ANR	86946	Identifier	zend_closure_compare_objects		86928	2					
ANR	86947	ParameterList	"zval * o1 , zval * o2"		86928	3					
ANR	86948	Parameter	zval * o1	250:40:9177:9184	86928	0	True				
ANR	86949	ParameterType	zval *		86928	0					
ANR	86950	Identifier	o1		86928	1					
ANR	86951	Parameter	zval * o2	250:50:9187:9194	86928	1	True				
ANR	86952	ParameterType	zval *		86928	0					
ANR	86953	Identifier	o2		86928	1					
ANR	86954	CFGEntryNode	ENTRY		86928		True				
ANR	86955	CFGExitNode	EXIT		86928		True				
ANR	86956	Symbol	o1		86928						
ANR	86957	Symbol	o2		86928						
ANR	86958	Symbol	Z_OBJ_P		86928						
ANR	86959	Function	zend_get_closure_invoke_method	256:0:9260:10622							
ANR	86960	FunctionDef	zend_get_closure_invoke_method (zend_object * object)		86959	0					
ANR	86961	CompoundStatement		257:0:9346:10622	86959	0					
ANR	86962	IdentifierDeclStatement	zend_closure * closure = ( zend_closure * ) object ;	258:1:9349:9395	86959	0	True				
ANR	86963	IdentifierDecl	* closure = ( zend_closure * ) object		86959	0					
ANR	86964	IdentifierDeclType	zend_closure *		86959	0					
ANR	86965	Identifier	closure		86959	1					
ANR	86966	AssignmentExpression	* closure = ( zend_closure * ) object		86959	2		=			
ANR	86967	Identifier	closure		86959	0					
ANR	86968	CastExpression	( zend_closure * ) object		86959	1					
ANR	86969	CastTarget	zend_closure *		86959	0					
ANR	86970	Identifier	object		86959	1					
ANR	86971	IdentifierDeclStatement	zend_function * invoke = ( zend_function * ) emalloc ( sizeof ( zend_function ) ) ;	259:1:9398:9468	86959	1	True				
ANR	86972	IdentifierDecl	* invoke = ( zend_function * ) emalloc ( sizeof ( zend_function ) )		86959	0					
ANR	86973	IdentifierDeclType	zend_function *		86959	0					
ANR	86974	Identifier	invoke		86959	1					
ANR	86975	AssignmentExpression	* invoke = ( zend_function * ) emalloc ( sizeof ( zend_function ) )		86959	2		=			
ANR	86976	Identifier	invoke		86959	0					
ANR	86977	CastExpression	( zend_function * ) emalloc ( sizeof ( zend_function ) )		86959	1					
ANR	86978	CastTarget	zend_function *		86959	0					
ANR	86979	CallExpression	emalloc ( sizeof ( zend_function ) )		86959	1					
ANR	86980	Callee	emalloc		86959	0					
ANR	86981	Identifier	emalloc		86959	0					
ANR	86982	ArgumentList	sizeof ( zend_function )		86959	1					
ANR	86983	Argument	sizeof ( zend_function )		86959	0					
ANR	86984	SizeofExpression	sizeof ( zend_function )		86959	0					
ANR	86985	Sizeof	sizeof		86959	0					
ANR	86986	SizeofOperand	zend_function		86959	1					
ANR	86987	IdentifierDeclStatement	const uint32_t keep_flags = ZEND_ACC_RETURN_REFERENCE | ZEND_ACC_VARIADIC | ZEND_ACC_HAS_RETURN_TYPE ;	260:1:9471:9573	86959	2	True				
ANR	86988	IdentifierDecl	keep_flags = ZEND_ACC_RETURN_REFERENCE | ZEND_ACC_VARIADIC | ZEND_ACC_HAS_RETURN_TYPE		86959	0					
ANR	86989	IdentifierDeclType	const uint32_t		86959	0					
ANR	86990	Identifier	keep_flags		86959	1					
ANR	86991	AssignmentExpression	keep_flags = ZEND_ACC_RETURN_REFERENCE | ZEND_ACC_VARIADIC | ZEND_ACC_HAS_RETURN_TYPE		86959	2		=			
ANR	86992	Identifier	keep_flags		86959	0					
ANR	86993	InclusiveOrExpression	ZEND_ACC_RETURN_REFERENCE | ZEND_ACC_VARIADIC | ZEND_ACC_HAS_RETURN_TYPE		86959	1		|			
ANR	86994	Identifier	ZEND_ACC_RETURN_REFERENCE		86959	0					
ANR	86995	InclusiveOrExpression	ZEND_ACC_VARIADIC | ZEND_ACC_HAS_RETURN_TYPE		86959	1		|			
ANR	86996	Identifier	ZEND_ACC_VARIADIC		86959	0					
ANR	86997	Identifier	ZEND_ACC_HAS_RETURN_TYPE		86959	1					
ANR	86998	ExpressionStatement	invoke -> common = closure -> func . common	263:1:9577:9614	86959	3	True				
ANR	86999	AssignmentExpression	invoke -> common = closure -> func . common		86959	0		=			
ANR	87000	PtrMemberAccess	invoke -> common		86959	0					
ANR	87001	Identifier	invoke		86959	0					
ANR	87002	Identifier	common		86959	1					
ANR	87003	MemberAccess	closure -> func . common		86959	1					
ANR	87004	PtrMemberAccess	closure -> func		86959	0					
ANR	87005	Identifier	closure		86959	0					
ANR	87006	Identifier	func		86959	1					
ANR	87007	Identifier	common		86959	1					
ANR	87008	ExpressionStatement	invoke -> type = ZEND_INTERNAL_FUNCTION	269:1:9977:10014	86959	4	True				
ANR	87009	AssignmentExpression	invoke -> type = ZEND_INTERNAL_FUNCTION		86959	0		=			
ANR	87010	PtrMemberAccess	invoke -> type		86959	0					
ANR	87011	Identifier	invoke		86959	0					
ANR	87012	Identifier	type		86959	1					
ANR	87013	Identifier	ZEND_INTERNAL_FUNCTION		86959	1					
ANR	87014	ExpressionStatement	invoke -> internal_function . fn_flags = ZEND_ACC_PUBLIC | ZEND_ACC_CALL_VIA_HANDLER | ( closure -> func . common . fn_flags & keep_flags )	270:1:10017:10146	86959	5	True				
ANR	87015	AssignmentExpression	invoke -> internal_function . fn_flags = ZEND_ACC_PUBLIC | ZEND_ACC_CALL_VIA_HANDLER | ( closure -> func . common . fn_flags & keep_flags )		86959	0		=			
ANR	87016	MemberAccess	invoke -> internal_function . fn_flags		86959	0					
ANR	87017	PtrMemberAccess	invoke -> internal_function		86959	0					
ANR	87018	Identifier	invoke		86959	0					
ANR	87019	Identifier	internal_function		86959	1					
ANR	87020	Identifier	fn_flags		86959	1					
ANR	87021	InclusiveOrExpression	ZEND_ACC_PUBLIC | ZEND_ACC_CALL_VIA_HANDLER | ( closure -> func . common . fn_flags & keep_flags )		86959	1		|			
ANR	87022	Identifier	ZEND_ACC_PUBLIC		86959	0					
ANR	87023	InclusiveOrExpression	ZEND_ACC_CALL_VIA_HANDLER | ( closure -> func . common . fn_flags & keep_flags )		86959	1		|			
ANR	87024	Identifier	ZEND_ACC_CALL_VIA_HANDLER		86959	0					
ANR	87025	BitAndExpression	closure -> func . common . fn_flags & keep_flags		86959	1		&			
ANR	87026	MemberAccess	closure -> func . common . fn_flags		86959	0					
ANR	87027	MemberAccess	closure -> func . common		86959	0					
ANR	87028	PtrMemberAccess	closure -> func		86959	0					
ANR	87029	Identifier	closure		86959	0					
ANR	87030	Identifier	func		86959	1					
ANR	87031	Identifier	common		86959	1					
ANR	87032	Identifier	fn_flags		86959	1					
ANR	87033	Identifier	keep_flags		86959	1					
ANR	87034	IfStatement	if ( closure -> func . type != ZEND_INTERNAL_FUNCTION || ( closure -> func . common . fn_flags & ZEND_ACC_USER_ARG_INFO ) )		86959	6					
ANR	87035	Condition	closure -> func . type != ZEND_INTERNAL_FUNCTION || ( closure -> func . common . fn_flags & ZEND_ACC_USER_ARG_INFO )	272:5:10153:10256	86959	0	True				
ANR	87036	OrExpression	closure -> func . type != ZEND_INTERNAL_FUNCTION || ( closure -> func . common . fn_flags & ZEND_ACC_USER_ARG_INFO )		86959	0		||			
ANR	87037	EqualityExpression	closure -> func . type != ZEND_INTERNAL_FUNCTION		86959	0		!=			
ANR	87038	MemberAccess	closure -> func . type		86959	0					
ANR	87039	PtrMemberAccess	closure -> func		86959	0					
ANR	87040	Identifier	closure		86959	0					
ANR	87041	Identifier	func		86959	1					
ANR	87042	Identifier	type		86959	1					
ANR	87043	Identifier	ZEND_INTERNAL_FUNCTION		86959	1					
ANR	87044	BitAndExpression	closure -> func . common . fn_flags & ZEND_ACC_USER_ARG_INFO		86959	1		&			
ANR	87045	MemberAccess	closure -> func . common . fn_flags		86959	0					
ANR	87046	MemberAccess	closure -> func . common		86959	0					
ANR	87047	PtrMemberAccess	closure -> func		86959	0					
ANR	87048	Identifier	closure		86959	0					
ANR	87049	Identifier	func		86959	1					
ANR	87050	Identifier	common		86959	1					
ANR	87051	Identifier	fn_flags		86959	1					
ANR	87052	Identifier	ZEND_ACC_USER_ARG_INFO		86959	1					
ANR	87053	CompoundStatement		16:111:912:912	86959	1					
ANR	87054	ExpressionStatement	invoke -> internal_function . fn_flags |= ZEND_ACC_USER_ARG_INFO	273:2:10263:10326	86959	0	True				
ANR	87055	AssignmentExpression	invoke -> internal_function . fn_flags |= ZEND_ACC_USER_ARG_INFO		86959	0		|=			
ANR	87056	MemberAccess	invoke -> internal_function . fn_flags		86959	0					
ANR	87057	PtrMemberAccess	invoke -> internal_function		86959	0					
ANR	87058	Identifier	invoke		86959	0					
ANR	87059	Identifier	internal_function		86959	1					
ANR	87060	Identifier	fn_flags		86959	1					
ANR	87061	Identifier	ZEND_ACC_USER_ARG_INFO		86959	1					
ANR	87062	ExpressionStatement	invoke -> internal_function . handler = ZEND_MN ( Closure___invoke )	276:1:10332:10393	86959	7	True				
ANR	87063	AssignmentExpression	invoke -> internal_function . handler = ZEND_MN ( Closure___invoke )		86959	0		=			
ANR	87064	MemberAccess	invoke -> internal_function . handler		86959	0					
ANR	87065	PtrMemberAccess	invoke -> internal_function		86959	0					
ANR	87066	Identifier	invoke		86959	0					
ANR	87067	Identifier	internal_function		86959	1					
ANR	87068	Identifier	handler		86959	1					
ANR	87069	CallExpression	ZEND_MN ( Closure___invoke )		86959	1					
ANR	87070	Callee	ZEND_MN		86959	0					
ANR	87071	Identifier	ZEND_MN		86959	0					
ANR	87072	ArgumentList	Closure___invoke		86959	1					
ANR	87073	Argument	Closure___invoke		86959	0					
ANR	87074	Identifier	Closure___invoke		86959	0					
ANR	87075	ExpressionStatement	invoke -> internal_function . module = 0	277:1:10396:10432	86959	8	True				
ANR	87076	AssignmentExpression	invoke -> internal_function . module = 0		86959	0		=			
ANR	87077	MemberAccess	invoke -> internal_function . module		86959	0					
ANR	87078	PtrMemberAccess	invoke -> internal_function		86959	0					
ANR	87079	Identifier	invoke		86959	0					
ANR	87080	Identifier	internal_function		86959	1					
ANR	87081	Identifier	module		86959	1					
ANR	87082	PrimaryExpression	0		86959	1					
ANR	87083	ExpressionStatement	invoke -> internal_function . scope = zend_ce_closure	278:1:10435:10484	86959	9	True				
ANR	87084	AssignmentExpression	invoke -> internal_function . scope = zend_ce_closure		86959	0		=			
ANR	87085	MemberAccess	invoke -> internal_function . scope		86959	0					
ANR	87086	PtrMemberAccess	invoke -> internal_function		86959	0					
ANR	87087	Identifier	invoke		86959	0					
ANR	87088	Identifier	internal_function		86959	1					
ANR	87089	Identifier	scope		86959	1					
ANR	87090	Identifier	zend_ce_closure		86959	1					
ANR	87091	ExpressionStatement	"invoke -> internal_function . function_name = zend_string_init ( ZEND_INVOKE_FUNC_NAME , sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1 , 0 )"	279:1:10487:10604	86959	10	True				
ANR	87092	AssignmentExpression	"invoke -> internal_function . function_name = zend_string_init ( ZEND_INVOKE_FUNC_NAME , sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1 , 0 )"		86959	0		=			
ANR	87093	MemberAccess	invoke -> internal_function . function_name		86959	0					
ANR	87094	PtrMemberAccess	invoke -> internal_function		86959	0					
ANR	87095	Identifier	invoke		86959	0					
ANR	87096	Identifier	internal_function		86959	1					
ANR	87097	Identifier	function_name		86959	1					
ANR	87098	CallExpression	"zend_string_init ( ZEND_INVOKE_FUNC_NAME , sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1 , 0 )"		86959	1					
ANR	87099	Callee	zend_string_init		86959	0					
ANR	87100	Identifier	zend_string_init		86959	0					
ANR	87101	ArgumentList	ZEND_INVOKE_FUNC_NAME		86959	1					
ANR	87102	Argument	ZEND_INVOKE_FUNC_NAME		86959	0					
ANR	87103	Identifier	ZEND_INVOKE_FUNC_NAME		86959	0					
ANR	87104	Argument	sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1		86959	1					
ANR	87105	AdditiveExpression	sizeof ( ZEND_INVOKE_FUNC_NAME ) - 1		86959	0		-			
ANR	87106	SizeofExpression	sizeof ( ZEND_INVOKE_FUNC_NAME )		86959	0					
ANR	87107	Sizeof	sizeof		86959	0					
ANR	87108	SizeofOperand	ZEND_INVOKE_FUNC_NAME		86959	1					
ANR	87109	PrimaryExpression	1		86959	1					
ANR	87110	Argument	0		86959	2					
ANR	87111	PrimaryExpression	0		86959	0					
ANR	87112	ReturnStatement	return invoke ;	280:1:10607:10620	86959	11	True				
ANR	87113	Identifier	invoke		86959	0					
ANR	87114	ReturnType	ZEND_API zend_function *		86959	1					
ANR	87115	Identifier	zend_get_closure_invoke_method		86959	2					
ANR	87116	ParameterList	zend_object * object		86959	3					
ANR	87117	Parameter	zend_object * object	256:55:9315:9333	86959	0	True				
ANR	87118	ParameterType	zend_object *		86959	0					
ANR	87119	Identifier	object		86959	1					
ANR	87120	CFGEntryNode	ENTRY		86959		True				
ANR	87121	CFGExitNode	EXIT		86959		True				
ANR	87122	Symbol	zend_ce_closure		86959						
ANR	87123	Symbol	* closure		86959						
ANR	87124	Symbol	* invoke		86959						
ANR	87125	Symbol	ZEND_ACC_PUBLIC		86959						
ANR	87126	Symbol	closure -> func . type		86959						
ANR	87127	Symbol	invoke -> type		86959						
ANR	87128	Symbol	invoke		86959						
ANR	87129	Symbol	invoke -> internal_function . function_name		86959						
ANR	87130	Symbol	ZEND_INTERNAL_FUNCTION		86959						
ANR	87131	Symbol	invoke -> internal_function . module		86959						
ANR	87132	Symbol	zend_string_init		86959						
ANR	87133	Symbol	emalloc		86959						
ANR	87134	Symbol	ZEND_ACC_USER_ARG_INFO		86959						
ANR	87135	Symbol	closure		86959						
ANR	87136	Symbol	Closure___invoke		86959						
ANR	87137	Symbol	keep_flags		86959						
ANR	87138	Symbol	ZEND_MN		86959						
ANR	87139	Symbol	ZEND_ACC_HAS_RETURN_TYPE		86959						
ANR	87140	Symbol	invoke -> internal_function . fn_flags		86959						
ANR	87141	Symbol	closure -> func . common . fn_flags		86959						
ANR	87142	Symbol	ZEND_ACC_VARIADIC		86959						
ANR	87143	Symbol	closure -> func		86959						
ANR	87144	Symbol	invoke -> common		86959						
ANR	87145	Symbol	ZEND_ACC_RETURN_REFERENCE		86959						
ANR	87146	Symbol	invoke -> internal_function . handler		86959						
ANR	87147	Symbol	closure -> func . common		86959						
ANR	87148	Symbol	ZEND_INVOKE_FUNC_NAME		86959						
ANR	87149	Symbol	invoke -> internal_function		86959						
ANR	87150	Symbol	object		86959						
ANR	87151	Symbol	ZEND_ACC_CALL_VIA_HANDLER		86959						
ANR	87152	Symbol	invoke -> internal_function . scope		86959						
ANR	87153	Function	zend_get_closure_method_def	284:9:10644:10795							
ANR	87154	FunctionDef	zend_get_closure_method_def (zval * obj)		87153	0					
ANR	87155	CompoundStatement		285:0:10714:10795	87153	0					
ANR	87156	IdentifierDeclStatement	zend_closure * closure = ( zend_closure * ) Z_OBJ_P ( obj ) ;	286:1:10717:10769	87153	0	True				
ANR	87157	IdentifierDecl	* closure = ( zend_closure * ) Z_OBJ_P ( obj )		87153	0					
ANR	87158	IdentifierDeclType	zend_closure *		87153	0					
ANR	87159	Identifier	closure		87153	1					
ANR	87160	AssignmentExpression	* closure = ( zend_closure * ) Z_OBJ_P ( obj )		87153	2		=			
ANR	87161	Identifier	closure		87153	0					
ANR	87162	CastExpression	( zend_closure * ) Z_OBJ_P ( obj )		87153	1					
ANR	87163	CastTarget	zend_closure *		87153	0					
ANR	87164	CallExpression	Z_OBJ_P ( obj )		87153	1					
ANR	87165	Callee	Z_OBJ_P		87153	0					
ANR	87166	Identifier	Z_OBJ_P		87153	0					
ANR	87167	ArgumentList	obj		87153	1					
ANR	87168	Argument	obj		87153	0					
ANR	87169	Identifier	obj		87153	0					
ANR	87170	ReturnStatement	return & closure -> func ;	287:1:10772:10793	87153	1	True				
ANR	87171	UnaryOperationExpression	& closure -> func		87153	0					
ANR	87172	UnaryOperator	&		87153	0					
ANR	87173	PtrMemberAccess	closure -> func		87153	1					
ANR	87174	Identifier	closure		87153	0					
ANR	87175	Identifier	func		87153	1					
ANR	87176	ReturnType	const zend_function *		87153	1					
ANR	87177	Identifier	zend_get_closure_method_def		87153	2					
ANR	87178	ParameterList	zval * obj		87153	3					
ANR	87179	Parameter	zval * obj	284:58:10693:10701	87153	0	True				
ANR	87180	ParameterType	zval *		87153	0					
ANR	87181	Identifier	obj		87153	1					
ANR	87182	CFGEntryNode	ENTRY		87153		True				
ANR	87183	CFGExitNode	EXIT		87153		True				
ANR	87184	Symbol	obj		87153						
ANR	87185	Symbol	Z_OBJ_P		87153						
ANR	87186	Symbol	& closure -> func		87153						
ANR	87187	Symbol	closure		87153						
ANR	87188	Function	zend_get_closure_this_ptr	291:0:10808:10955							
ANR	87189	FunctionDef	zend_get_closure_this_ptr (zval * obj)		87188	0					
ANR	87190	CompoundStatement		292:0:10870:10955	87188	0					
ANR	87191	IdentifierDeclStatement	zend_closure * closure = ( zend_closure * ) Z_OBJ_P ( obj ) ;	293:1:10873:10925	87188	0	True				
ANR	87192	IdentifierDecl	* closure = ( zend_closure * ) Z_OBJ_P ( obj )		87188	0					
ANR	87193	IdentifierDeclType	zend_closure *		87188	0					
ANR	87194	Identifier	closure		87188	1					
ANR	87195	AssignmentExpression	* closure = ( zend_closure * ) Z_OBJ_P ( obj )		87188	2		=			
ANR	87196	Identifier	closure		87188	0					
ANR	87197	CastExpression	( zend_closure * ) Z_OBJ_P ( obj )		87188	1					
ANR	87198	CastTarget	zend_closure *		87188	0					
ANR	87199	CallExpression	Z_OBJ_P ( obj )		87188	1					
ANR	87200	Callee	Z_OBJ_P		87188	0					
ANR	87201	Identifier	Z_OBJ_P		87188	0					
ANR	87202	ArgumentList	obj		87188	1					
ANR	87203	Argument	obj		87188	0					
ANR	87204	Identifier	obj		87188	0					
ANR	87205	ReturnStatement	return & closure -> this_ptr ;	294:1:10928:10953	87188	1	True				
ANR	87206	UnaryOperationExpression	& closure -> this_ptr		87188	0					
ANR	87207	UnaryOperator	&		87188	0					
ANR	87208	PtrMemberAccess	closure -> this_ptr		87188	1					
ANR	87209	Identifier	closure		87188	0					
ANR	87210	Identifier	this_ptr		87188	1					
ANR	87211	ReturnType	ZEND_API zval *		87188	1					
ANR	87212	Identifier	zend_get_closure_this_ptr		87188	2					
ANR	87213	ParameterList	zval * obj		87188	3					
ANR	87214	Parameter	zval * obj	291:41:10849:10857	87188	0	True				
ANR	87215	ParameterType	zval *		87188	0					
ANR	87216	Identifier	obj		87188	1					
ANR	87217	CFGEntryNode	ENTRY		87188		True				
ANR	87218	CFGExitNode	EXIT		87188		True				
ANR	87219	Symbol	obj		87188						
ANR	87220	Symbol	Z_OBJ_P		87188						
ANR	87221	Symbol	& closure -> this_ptr		87188						
ANR	87222	Symbol	closure		87188						
ANR	87223	Function	zend_closure_get_method	298:0:10968:11393							
ANR	87224	FunctionDef	"zend_closure_get_method (zend_object * * object , zend_string * method , const zval * key)"		87223	0					
ANR	87225	CompoundStatement		299:0:11084:11393	87223	0					
ANR	87226	IdentifierDeclStatement	zend_string * lc_name ;	300:1:11087:11107	87223	0	True				
ANR	87227	IdentifierDecl	* lc_name		87223	0					
ANR	87228	IdentifierDeclType	zend_string *		87223	0					
ANR	87229	Identifier	lc_name		87223	1					
ANR	87230	ExpressionStatement	lc_name = zend_string_tolower ( method )	302:1:11111:11148	87223	1	True				
ANR	87231	AssignmentExpression	lc_name = zend_string_tolower ( method )		87223	0		=			
ANR	87232	Identifier	lc_name		87223	0					
ANR	87233	CallExpression	zend_string_tolower ( method )		87223	1					
ANR	87234	Callee	zend_string_tolower		87223	0					
ANR	87235	Identifier	zend_string_tolower		87223	0					
ANR	87236	ArgumentList	method		87223	1					
ANR	87237	Argument	method		87223	0					
ANR	87238	Identifier	method		87223	0					
ANR	87239	IfStatement	"if ( zend_string_equals_literal ( method , ZEND_INVOKE_FUNC_NAME ) )"		87223	2					
ANR	87240	Condition	"zend_string_equals_literal ( method , ZEND_INVOKE_FUNC_NAME )"	303:5:11155:11211	87223	0	True				
ANR	87241	CallExpression	"zend_string_equals_literal ( method , ZEND_INVOKE_FUNC_NAME )"		87223	0					
ANR	87242	Callee	zend_string_equals_literal		87223	0					
ANR	87243	Identifier	zend_string_equals_literal		87223	0					
ANR	87244	ArgumentList	method		87223	1					
ANR	87245	Argument	method		87223	0					
ANR	87246	Identifier	method		87223	0					
ANR	87247	Argument	ZEND_INVOKE_FUNC_NAME		87223	1					
ANR	87248	Identifier	ZEND_INVOKE_FUNC_NAME		87223	0					
ANR	87249	CompoundStatement		5:64:129:129	87223	1					
ANR	87250	ExpressionStatement	zend_string_release ( lc_name )	304:2:11218:11246	87223	0	True				
ANR	87251	CallExpression	zend_string_release ( lc_name )		87223	0					
ANR	87252	Callee	zend_string_release		87223	0					
ANR	87253	Identifier	zend_string_release		87223	0					
ANR	87254	ArgumentList	lc_name		87223	1					
ANR	87255	Argument	lc_name		87223	0					
ANR	87256	Identifier	lc_name		87223	0					
ANR	87257	ReturnStatement	return zend_get_closure_invoke_method ( * object ) ;	305:2:11250:11296	87223	1	True				
ANR	87258	CallExpression	zend_get_closure_invoke_method ( * object )		87223	0					
ANR	87259	Callee	zend_get_closure_invoke_method		87223	0					
ANR	87260	Identifier	zend_get_closure_invoke_method		87223	0					
ANR	87261	ArgumentList	* object		87223	1					
ANR	87262	Argument	* object		87223	0					
ANR	87263	UnaryOperationExpression	* object		87223	0					
ANR	87264	UnaryOperator	*		87223	0					
ANR	87265	Identifier	object		87223	1					
ANR	87266	ExpressionStatement	zend_string_release ( lc_name )	307:1:11302:11330	87223	3	True				
ANR	87267	CallExpression	zend_string_release ( lc_name )		87223	0					
ANR	87268	Callee	zend_string_release		87223	0					
ANR	87269	Identifier	zend_string_release		87223	0					
ANR	87270	ArgumentList	lc_name		87223	1					
ANR	87271	Argument	lc_name		87223	0					
ANR	87272	Identifier	lc_name		87223	0					
ANR	87273	ReturnStatement	"return std_object_handlers . get_method ( object , method , key ) ;"	308:1:11333:11391	87223	4	True				
ANR	87274	CallExpression	"std_object_handlers . get_method ( object , method , key )"		87223	0					
ANR	87275	Callee	std_object_handlers . get_method		87223	0					
ANR	87276	MemberAccess	std_object_handlers . get_method		87223	0					
ANR	87277	Identifier	std_object_handlers		87223	0					
ANR	87278	Identifier	get_method		87223	1					
ANR	87279	ArgumentList	object		87223	1					
ANR	87280	Argument	object		87223	0					
ANR	87281	Identifier	object		87223	0					
ANR	87282	Argument	method		87223	1					
ANR	87283	Identifier	method		87223	0					
ANR	87284	Argument	key		87223	2					
ANR	87285	Identifier	key		87223	0					
ANR	87286	ReturnType	static zend_function *		87223	1					
ANR	87287	Identifier	zend_closure_get_method		87223	2					
ANR	87288	ParameterList	"zend_object * * object , zend_string * method , const zval * key"		87223	3					
ANR	87289	Parameter	zend_object * * object	298:46:11014:11033	87223	0	True				
ANR	87290	ParameterType	zend_object * *		87223	0					
ANR	87291	Identifier	object		87223	1					
ANR	87292	Parameter	zend_string * method	298:68:11036:11054	87223	1	True				
ANR	87293	ParameterType	zend_string *		87223	0					
ANR	87294	Identifier	method		87223	1					
ANR	87295	Parameter	const zval * key	298:89:11057:11071	87223	2	True				
ANR	87296	ParameterType	const zval *		87223	0					
ANR	87297	Identifier	key		87223	1					
ANR	87298	CFGEntryNode	ENTRY		87223		True				
ANR	87299	CFGExitNode	EXIT		87223		True				
ANR	87300	Symbol	zend_string_equals_literal		87223						
ANR	87301	Symbol	zend_get_closure_invoke_method		87223						
ANR	87302	Symbol	std_object_handlers		87223						
ANR	87303	Symbol	std_object_handlers . get_method		87223						
ANR	87304	Symbol	method		87223						
ANR	87305	Symbol	* object		87223						
ANR	87306	Symbol	lc_name		87223						
ANR	87307	Symbol	ZEND_INVOKE_FUNC_NAME		87223						
ANR	87308	Symbol	key		87223						
ANR	87309	Symbol	zend_string_tolower		87223						
ANR	87310	Symbol	object		87223						
ANR	87311	Function	zend_closure_read_property	312:0:11406:11590							
ANR	87312	FunctionDef	"zend_closure_read_property (zval * object , zval * member , int type , void * * cache_slot , zval * rv)"		87311	0					
ANR	87313	CompoundStatement		313:0:11523:11590	87311	0					
ANR	87314	ExpressionStatement	ZEND_CLOSURE_PROPERTY_ERROR ( )	314:1:11526:11555	87311	0	True				
ANR	87315	CallExpression	ZEND_CLOSURE_PROPERTY_ERROR ( )		87311	0					
ANR	87316	Callee	ZEND_CLOSURE_PROPERTY_ERROR		87311	0					
ANR	87317	Identifier	ZEND_CLOSURE_PROPERTY_ERROR		87311	0					
ANR	87318	ArgumentList			87311	1					
ANR	87319	ReturnStatement	return & EG ( uninitialized_zval ) ;	315:1:11558:11588	87311	1	True				
ANR	87320	UnaryOperationExpression	& EG ( uninitialized_zval )		87311	0					
ANR	87321	UnaryOperator	&		87311	0					
ANR	87322	CallExpression	EG ( uninitialized_zval )		87311	1					
ANR	87323	Callee	EG		87311	0					
ANR	87324	Identifier	EG		87311	0					
ANR	87325	ArgumentList	uninitialized_zval		87311	1					
ANR	87326	Argument	uninitialized_zval		87311	0					
ANR	87327	Identifier	uninitialized_zval		87311	0					
ANR	87328	ReturnType	static zval *		87311	1					
ANR	87329	Identifier	zend_closure_read_property		87311	2					
ANR	87330	ParameterList	"zval * object , zval * member , int type , void * * cache_slot , zval * rv"		87311	3					
ANR	87331	Parameter	zval * object	312:40:11446:11457	87311	0	True				
ANR	87332	ParameterType	zval *		87311	0					
ANR	87333	Identifier	object		87311	1					
ANR	87334	Parameter	zval * member	312:54:11460:11471	87311	1	True				
ANR	87335	ParameterType	zval *		87311	0					
ANR	87336	Identifier	member		87311	1					
ANR	87337	Parameter	int type	312:68:11474:11481	87311	2	True				
ANR	87338	ParameterType	int		87311	0					
ANR	87339	Identifier	type		87311	1					
ANR	87340	Parameter	void * * cache_slot	312:78:11484:11500	87311	3	True				
ANR	87341	ParameterType	void * *		87311	0					
ANR	87342	Identifier	cache_slot		87311	1					
ANR	87343	Parameter	zval * rv	312:97:11503:11510	87311	4	True				
ANR	87344	ParameterType	zval *		87311	0					
ANR	87345	Identifier	rv		87311	1					
ANR	87346	CFGEntryNode	ENTRY		87311		True				
ANR	87347	CFGExitNode	EXIT		87311		True				
ANR	87348	Symbol	cache_slot		87311						
ANR	87349	Symbol	uninitialized_zval		87311						
ANR	87350	Symbol	rv		87311						
ANR	87351	Symbol	member		87311						
ANR	87352	Symbol	type		87311						
ANR	87353	Symbol	& EG		87311						
ANR	87354	Symbol	object		87311						
ANR	87355	Function	zend_closure_write_property	319:0:11603:11747							
ANR	87356	FunctionDef	"zend_closure_write_property (zval * object , zval * member , zval * value , void * * cache_slot)"		87355	0					
ANR	87357	CompoundStatement		320:0:11713:11747	87355	0					
ANR	87358	ExpressionStatement	ZEND_CLOSURE_PROPERTY_ERROR ( )	321:1:11716:11745	87355	0	True				
ANR	87359	CallExpression	ZEND_CLOSURE_PROPERTY_ERROR ( )		87355	0					
ANR	87360	Callee	ZEND_CLOSURE_PROPERTY_ERROR		87355	0					
ANR	87361	Identifier	ZEND_CLOSURE_PROPERTY_ERROR		87355	0					
ANR	87362	ArgumentList			87355	1					
ANR	87363	ReturnType	static void		87355	1					
ANR	87364	Identifier	zend_closure_write_property		87355	2					
ANR	87365	ParameterList	"zval * object , zval * member , zval * value , void * * cache_slot"		87355	3					
ANR	87366	Parameter	zval * object	319:40:11643:11654	87355	0	True				
ANR	87367	ParameterType	zval *		87355	0					
ANR	87368	Identifier	object		87355	1					
ANR	87369	Parameter	zval * member	319:54:11657:11668	87355	1	True				
ANR	87370	ParameterType	zval *		87355	0					
ANR	87371	Identifier	member		87355	1					
ANR	87372	Parameter	zval * value	319:68:11671:11681	87355	2	True				
ANR	87373	ParameterType	zval *		87355	0					
ANR	87374	Identifier	value		87355	1					
ANR	87375	Parameter	void * * cache_slot	319:81:11684:11700	87355	3	True				
ANR	87376	ParameterType	void * *		87355	0					
ANR	87377	Identifier	cache_slot		87355	1					
ANR	87378	CFGEntryNode	ENTRY		87355		True				
ANR	87379	CFGExitNode	EXIT		87355		True				
ANR	87380	Symbol	cache_slot		87355						
ANR	87381	Symbol	member		87355						
ANR	87382	Symbol	value		87355						
ANR	87383	Symbol	object		87355						
ANR	87384	Function	zend_closure_get_property_ptr_ptr	325:0:11760:11922							
ANR	87385	FunctionDef	"zend_closure_get_property_ptr_ptr (zval * object , zval * member , int type , void * * cache_slot)"		87384	0					
ANR	87386	CompoundStatement		326:0:11874:11922	87384	0					
ANR	87387	ExpressionStatement	ZEND_CLOSURE_PROPERTY_ERROR ( )	327:1:11877:11906	87384	0	True				
ANR	87388	CallExpression	ZEND_CLOSURE_PROPERTY_ERROR ( )		87384	0					
ANR	87389	Callee	ZEND_CLOSURE_PROPERTY_ERROR		87384	0					
ANR	87390	Identifier	ZEND_CLOSURE_PROPERTY_ERROR		87384	0					
ANR	87391	ArgumentList			87384	1					
ANR	87392	ReturnStatement	return NULL ;	328:1:11909:11920	87384	1	True				
ANR	87393	Identifier	NULL		87384	0					
ANR	87394	ReturnType	static zval *		87384	1					
ANR	87395	Identifier	zend_closure_get_property_ptr_ptr		87384	2					
ANR	87396	ParameterList	"zval * object , zval * member , int type , void * * cache_slot"		87384	3					
ANR	87397	Parameter	zval * object	325:47:11807:11818	87384	0	True				
ANR	87398	ParameterType	zval *		87384	0					
ANR	87399	Identifier	object		87384	1					
ANR	87400	Parameter	zval * member	325:61:11821:11832	87384	1	True				
ANR	87401	ParameterType	zval *		87384	0					
ANR	87402	Identifier	member		87384	1					
ANR	87403	Parameter	int type	325:75:11835:11842	87384	2	True				
ANR	87404	ParameterType	int		87384	0					
ANR	87405	Identifier	type		87384	1					
ANR	87406	Parameter	void * * cache_slot	325:85:11845:11861	87384	3	True				
ANR	87407	ParameterType	void * *		87384	0					
ANR	87408	Identifier	cache_slot		87384	1					
ANR	87409	CFGEntryNode	ENTRY		87384		True				
ANR	87410	CFGExitNode	EXIT		87384		True				
ANR	87411	Symbol	cache_slot		87384						
ANR	87412	Symbol	NULL		87384						
ANR	87413	Symbol	member		87384						
ANR	87414	Symbol	type		87384						
ANR	87415	Symbol	object		87384						
ANR	87416	Function	zend_closure_has_property	332:0:11935:12126							
ANR	87417	FunctionDef	"zend_closure_has_property (zval * object , zval * member , int has_set_exists , void * * cache_slot)"		87416	0					
ANR	87418	CompoundStatement		333:0:12049:12126	87416	0					
ANR	87419	IfStatement	if ( has_set_exists != 2 )		87416	0					
ANR	87420	Condition	has_set_exists != 2	334:5:12056:12074	87416	0	True				
ANR	87421	EqualityExpression	has_set_exists != 2		87416	0		!=			
ANR	87422	Identifier	has_set_exists		87416	0					
ANR	87423	PrimaryExpression	2		87416	1					
ANR	87424	CompoundStatement		2:26:27:27	87416	1					
ANR	87425	ExpressionStatement	ZEND_CLOSURE_PROPERTY_ERROR ( )	335:2:12081:12110	87416	0	True				
ANR	87426	CallExpression	ZEND_CLOSURE_PROPERTY_ERROR ( )		87416	0					
ANR	87427	Callee	ZEND_CLOSURE_PROPERTY_ERROR		87416	0					
ANR	87428	Identifier	ZEND_CLOSURE_PROPERTY_ERROR		87416	0					
ANR	87429	ArgumentList			87416	1					
ANR	87430	ReturnStatement	return 0 ;	337:1:12116:12124	87416	1	True				
ANR	87431	PrimaryExpression	0		87416	0					
ANR	87432	ReturnType	static int		87416	1					
ANR	87433	Identifier	zend_closure_has_property		87416	2					
ANR	87434	ParameterList	"zval * object , zval * member , int has_set_exists , void * * cache_slot"		87416	3					
ANR	87435	Parameter	zval * object	332:37:11972:11983	87416	0	True				
ANR	87436	ParameterType	zval *		87416	0					
ANR	87437	Identifier	object		87416	1					
ANR	87438	Parameter	zval * member	332:51:11986:11997	87416	1	True				
ANR	87439	ParameterType	zval *		87416	0					
ANR	87440	Identifier	member		87416	1					
ANR	87441	Parameter	int has_set_exists	332:65:12000:12017	87416	2	True				
ANR	87442	ParameterType	int		87416	0					
ANR	87443	Identifier	has_set_exists		87416	1					
ANR	87444	Parameter	void * * cache_slot	332:85:12020:12036	87416	3	True				
ANR	87445	ParameterType	void * *		87416	0					
ANR	87446	Identifier	cache_slot		87416	1					
ANR	87447	CFGEntryNode	ENTRY		87416		True				
ANR	87448	CFGExitNode	EXIT		87416		True				
ANR	87449	Symbol	cache_slot		87416						
ANR	87450	Symbol	member		87416						
ANR	87451	Symbol	has_set_exists		87416						
ANR	87452	Symbol	object		87416						
ANR	87453	Function	zend_closure_unset_property	341:0:12139:12270							
ANR	87454	FunctionDef	"zend_closure_unset_property (zval * object , zval * member , void * * cache_slot)"		87453	0					
ANR	87455	CompoundStatement		342:0:12236:12270	87453	0					
ANR	87456	ExpressionStatement	ZEND_CLOSURE_PROPERTY_ERROR ( )	343:1:12239:12268	87453	0	True				
ANR	87457	CallExpression	ZEND_CLOSURE_PROPERTY_ERROR ( )		87453	0					
ANR	87458	Callee	ZEND_CLOSURE_PROPERTY_ERROR		87453	0					
ANR	87459	Identifier	ZEND_CLOSURE_PROPERTY_ERROR		87453	0					
ANR	87460	ArgumentList			87453	1					
ANR	87461	ReturnType	static void		87453	1					
ANR	87462	Identifier	zend_closure_unset_property		87453	2					
ANR	87463	ParameterList	"zval * object , zval * member , void * * cache_slot"		87453	3					
ANR	87464	Parameter	zval * object	341:40:12179:12190	87453	0	True				
ANR	87465	ParameterType	zval *		87453	0					
ANR	87466	Identifier	object		87453	1					
ANR	87467	Parameter	zval * member	341:54:12193:12204	87453	1	True				
ANR	87468	ParameterType	zval *		87453	0					
ANR	87469	Identifier	member		87453	1					
ANR	87470	Parameter	void * * cache_slot	341:68:12207:12223	87453	2	True				
ANR	87471	ParameterType	void * *		87453	0					
ANR	87472	Identifier	cache_slot		87453	1					
ANR	87473	CFGEntryNode	ENTRY		87453		True				
ANR	87474	CFGExitNode	EXIT		87453		True				
ANR	87475	Symbol	cache_slot		87453						
ANR	87476	Symbol	member		87453						
ANR	87477	Symbol	object		87453						
ANR	87478	Function	zend_closure_free_storage	347:0:12283:12793							
ANR	87479	FunctionDef	zend_closure_free_storage (zend_object * object)		87478	0					
ANR	87480	CompoundStatement		348:0:12352:12793	87478	0					
ANR	87481	IdentifierDeclStatement	zend_closure * closure = ( zend_closure * ) object ;	349:1:12355:12401	87478	0	True				
ANR	87482	IdentifierDecl	* closure = ( zend_closure * ) object		87478	0					
ANR	87483	IdentifierDeclType	zend_closure *		87478	0					
ANR	87484	Identifier	closure		87478	1					
ANR	87485	AssignmentExpression	* closure = ( zend_closure * ) object		87478	2		=			
ANR	87486	Identifier	closure		87478	0					
ANR	87487	CastExpression	( zend_closure * ) object		87478	1					
ANR	87488	CastTarget	zend_closure *		87478	0					
ANR	87489	Identifier	object		87478	1					
ANR	87490	ExpressionStatement	zend_object_std_dtor ( & closure -> std )	351:1:12405:12440	87478	1	True				
ANR	87491	CallExpression	zend_object_std_dtor ( & closure -> std )		87478	0					
ANR	87492	Callee	zend_object_std_dtor		87478	0					
ANR	87493	Identifier	zend_object_std_dtor		87478	0					
ANR	87494	ArgumentList	& closure -> std		87478	1					
ANR	87495	Argument	& closure -> std		87478	0					
ANR	87496	UnaryOperationExpression	& closure -> std		87478	0					
ANR	87497	UnaryOperator	&		87478	0					
ANR	87498	PtrMemberAccess	closure -> std		87478	1					
ANR	87499	Identifier	closure		87478	0					
ANR	87500	Identifier	std		87478	1					
ANR	87501	IfStatement	if ( closure -> func . type == ZEND_USER_FUNCTION )		87478	2					
ANR	87502	Condition	closure -> func . type == ZEND_USER_FUNCTION	353:5:12448:12487	87478	0	True				
ANR	87503	EqualityExpression	closure -> func . type == ZEND_USER_FUNCTION		87478	0		==			
ANR	87504	MemberAccess	closure -> func . type		87478	0					
ANR	87505	PtrMemberAccess	closure -> func		87478	0					
ANR	87506	Identifier	closure		87478	0					
ANR	87507	Identifier	func		87478	1					
ANR	87508	Identifier	type		87478	1					
ANR	87509	Identifier	ZEND_USER_FUNCTION		87478	1					
ANR	87510	CompoundStatement		6:47:137:137	87478	1					
ANR	87511	IfStatement	if ( closure -> func . op_array . fn_flags & ZEND_ACC_NO_RT_ARENA )		87478	0					
ANR	87512	Condition	closure -> func . op_array . fn_flags & ZEND_ACC_NO_RT_ARENA	354:6:12498:12551	87478	0	True				
ANR	87513	BitAndExpression	closure -> func . op_array . fn_flags & ZEND_ACC_NO_RT_ARENA		87478	0		&			
ANR	87514	MemberAccess	closure -> func . op_array . fn_flags		87478	0					
ANR	87515	MemberAccess	closure -> func . op_array		87478	0					
ANR	87516	PtrMemberAccess	closure -> func		87478	0					
ANR	87517	Identifier	closure		87478	0					
ANR	87518	Identifier	func		87478	1					
ANR	87519	Identifier	op_array		87478	1					
ANR	87520	Identifier	fn_flags		87478	1					
ANR	87521	Identifier	ZEND_ACC_NO_RT_ARENA		87478	1					
ANR	87522	CompoundStatement		7:62:201:201	87478	1					
ANR	87523	ExpressionStatement	efree ( closure -> func . op_array . run_time_cache )	355:3:12559:12603	87478	0	True				
ANR	87524	CallExpression	efree ( closure -> func . op_array . run_time_cache )		87478	0					
ANR	87525	Callee	efree		87478	0					
ANR	87526	Identifier	efree		87478	0					
ANR	87527	ArgumentList	closure -> func . op_array . run_time_cache		87478	1					
ANR	87528	Argument	closure -> func . op_array . run_time_cache		87478	0					
ANR	87529	MemberAccess	closure -> func . op_array . run_time_cache		87478	0					
ANR	87530	MemberAccess	closure -> func . op_array		87478	0					
ANR	87531	PtrMemberAccess	closure -> func		87478	0					
ANR	87532	Identifier	closure		87478	0					
ANR	87533	Identifier	func		87478	1					
ANR	87534	Identifier	op_array		87478	1					
ANR	87535	Identifier	run_time_cache		87478	1					
ANR	87536	ExpressionStatement	closure -> func . op_array . run_time_cache = NULL	356:3:12608:12652	87478	1	True				
ANR	87537	AssignmentExpression	closure -> func . op_array . run_time_cache = NULL		87478	0		=			
ANR	87538	MemberAccess	closure -> func . op_array . run_time_cache		87478	0					
ANR	87539	MemberAccess	closure -> func . op_array		87478	0					
ANR	87540	PtrMemberAccess	closure -> func		87478	0					
ANR	87541	Identifier	closure		87478	0					
ANR	87542	Identifier	func		87478	1					
ANR	87543	Identifier	op_array		87478	1					
ANR	87544	Identifier	run_time_cache		87478	1					
ANR	87545	Identifier	NULL		87478	1					
ANR	87546	ExpressionStatement	destroy_op_array ( & closure -> func . op_array )	358:2:12660:12701	87478	1	True				
ANR	87547	CallExpression	destroy_op_array ( & closure -> func . op_array )		87478	0					
ANR	87548	Callee	destroy_op_array		87478	0					
ANR	87549	Identifier	destroy_op_array		87478	0					
ANR	87550	ArgumentList	& closure -> func . op_array		87478	1					
ANR	87551	Argument	& closure -> func . op_array		87478	0					
ANR	87552	UnaryOperationExpression	& closure -> func . op_array		87478	0					
ANR	87553	UnaryOperator	&		87478	0					
ANR	87554	MemberAccess	closure -> func . op_array		87478	1					
ANR	87555	PtrMemberAccess	closure -> func		87478	0					
ANR	87556	Identifier	closure		87478	0					
ANR	87557	Identifier	func		87478	1					
ANR	87558	Identifier	op_array		87478	1					
ANR	87559	IfStatement	if ( Z_TYPE ( closure -> this_ptr ) != IS_UNDEF )		87478	3					
ANR	87560	Condition	Z_TYPE ( closure -> this_ptr ) != IS_UNDEF	361:5:12712:12748	87478	0	True				
ANR	87561	EqualityExpression	Z_TYPE ( closure -> this_ptr ) != IS_UNDEF		87478	0		!=			
ANR	87562	CallExpression	Z_TYPE ( closure -> this_ptr )		87478	0					
ANR	87563	Callee	Z_TYPE		87478	0					
ANR	87564	Identifier	Z_TYPE		87478	0					
ANR	87565	ArgumentList	closure -> this_ptr		87478	1					
ANR	87566	Argument	closure -> this_ptr		87478	0					
ANR	87567	PtrMemberAccess	closure -> this_ptr		87478	0					
ANR	87568	Identifier	closure		87478	0					
ANR	87569	Identifier	this_ptr		87478	1					
ANR	87570	Identifier	IS_UNDEF		87478	1					
ANR	87571	CompoundStatement		14:44:398:398	87478	1					
ANR	87572	ExpressionStatement	zval_ptr_dtor ( & closure -> this_ptr )	362:2:12755:12788	87478	0	True				
ANR	87573	CallExpression	zval_ptr_dtor ( & closure -> this_ptr )		87478	0					
ANR	87574	Callee	zval_ptr_dtor		87478	0					
ANR	87575	Identifier	zval_ptr_dtor		87478	0					
ANR	87576	ArgumentList	& closure -> this_ptr		87478	1					
ANR	87577	Argument	& closure -> this_ptr		87478	0					
ANR	87578	UnaryOperationExpression	& closure -> this_ptr		87478	0					
ANR	87579	UnaryOperator	&		87478	0					
ANR	87580	PtrMemberAccess	closure -> this_ptr		87478	1					
ANR	87581	Identifier	closure		87478	0					
ANR	87582	Identifier	this_ptr		87478	1					
ANR	87583	ReturnType	static void		87478	1					
ANR	87584	Identifier	zend_closure_free_storage		87478	2					
ANR	87585	ParameterList	zend_object * object		87478	3					
ANR	87586	Parameter	zend_object * object	347:38:12321:12339	87478	0	True				
ANR	87587	ParameterType	zend_object *		87478	0					
ANR	87588	Identifier	object		87478	1					
ANR	87589	CFGEntryNode	ENTRY		87478		True				
ANR	87590	CFGExitNode	EXIT		87478		True				
ANR	87591	Symbol	* closure		87478						
ANR	87592	Symbol	NULL		87478						
ANR	87593	Symbol	closure -> func . type		87478						
ANR	87594	Symbol	& closure -> func		87478						
ANR	87595	Symbol	Z_TYPE		87478						
ANR	87596	Symbol	closure -> func . op_array . run_time_cache		87478						
ANR	87597	Symbol	& closure -> func . op_array		87478						
ANR	87598	Symbol	closure -> this_ptr		87478						
ANR	87599	Symbol	closure -> func . op_array . fn_flags		87478						
ANR	87600	Symbol	closure -> func		87478						
ANR	87601	Symbol	ZEND_ACC_NO_RT_ARENA		87478						
ANR	87602	Symbol	closure -> func . op_array		87478						
ANR	87603	Symbol	ZEND_USER_FUNCTION		87478						
ANR	87604	Symbol	& closure -> this_ptr		87478						
ANR	87605	Symbol	& closure -> std		87478						
ANR	87606	Symbol	closure		87478						
ANR	87607	Symbol	IS_UNDEF		87478						
ANR	87608	Symbol	object		87478						
ANR	87609	Function	zend_closure_new	367:0:12806:13122							
ANR	87610	FunctionDef	zend_closure_new (zend_class_entry * class_type)		87609	0					
ANR	87611	CompoundStatement		368:0:12883:13122	87609	0					
ANR	87612	IdentifierDeclStatement	zend_closure * closure ;	369:1:12886:12907	87609	0	True				
ANR	87613	IdentifierDecl	* closure		87609	0					
ANR	87614	IdentifierDeclType	zend_closure *		87609	0					
ANR	87615	Identifier	closure		87609	1					
ANR	87616	ExpressionStatement	closure = emalloc ( sizeof ( zend_closure ) )	371:1:12911:12950	87609	1	True				
ANR	87617	AssignmentExpression	closure = emalloc ( sizeof ( zend_closure ) )		87609	0		=			
ANR	87618	Identifier	closure		87609	0					
ANR	87619	CallExpression	emalloc ( sizeof ( zend_closure ) )		87609	1					
ANR	87620	Callee	emalloc		87609	0					
ANR	87621	Identifier	emalloc		87609	0					
ANR	87622	ArgumentList	sizeof ( zend_closure )		87609	1					
ANR	87623	Argument	sizeof ( zend_closure )		87609	0					
ANR	87624	SizeofExpression	sizeof ( zend_closure )		87609	0					
ANR	87625	Sizeof	sizeof		87609	0					
ANR	87626	SizeofOperand	zend_closure		87609	1					
ANR	87627	ExpressionStatement	"memset ( closure , 0 , sizeof ( zend_closure ) )"	372:1:12953:12993	87609	2	True				
ANR	87628	CallExpression	"memset ( closure , 0 , sizeof ( zend_closure ) )"		87609	0					
ANR	87629	Callee	memset		87609	0					
ANR	87630	Identifier	memset		87609	0					
ANR	87631	ArgumentList	closure		87609	1					
ANR	87632	Argument	closure		87609	0					
ANR	87633	Identifier	closure		87609	0					
ANR	87634	Argument	0		87609	1					
ANR	87635	PrimaryExpression	0		87609	0					
ANR	87636	Argument	sizeof ( zend_closure )		87609	2					
ANR	87637	SizeofExpression	sizeof ( zend_closure )		87609	0					
ANR	87638	Sizeof	sizeof		87609	0					
ANR	87639	SizeofOperand	zend_closure		87609	1					
ANR	87640	ExpressionStatement	"zend_object_std_init ( & closure -> std , class_type )"	374:1:12997:13044	87609	3	True				
ANR	87641	CallExpression	"zend_object_std_init ( & closure -> std , class_type )"		87609	0					
ANR	87642	Callee	zend_object_std_init		87609	0					
ANR	87643	Identifier	zend_object_std_init		87609	0					
ANR	87644	ArgumentList	& closure -> std		87609	1					
ANR	87645	Argument	& closure -> std		87609	0					
ANR	87646	UnaryOperationExpression	& closure -> std		87609	0					
ANR	87647	UnaryOperator	&		87609	0					
ANR	87648	PtrMemberAccess	closure -> std		87609	1					
ANR	87649	Identifier	closure		87609	0					
ANR	87650	Identifier	std		87609	1					
ANR	87651	Argument	class_type		87609	1					
ANR	87652	Identifier	class_type		87609	0					
ANR	87653	ExpressionStatement	closure -> std . handlers = & closure_handlers	375:1:13047:13088	87609	4	True				
ANR	87654	AssignmentExpression	closure -> std . handlers = & closure_handlers		87609	0		=			
ANR	87655	MemberAccess	closure -> std . handlers		87609	0					
ANR	87656	PtrMemberAccess	closure -> std		87609	0					
ANR	87657	Identifier	closure		87609	0					
ANR	87658	Identifier	std		87609	1					
ANR	87659	Identifier	handlers		87609	1					
ANR	87660	UnaryOperationExpression	& closure_handlers		87609	1					
ANR	87661	UnaryOperator	&		87609	0					
ANR	87662	Identifier	closure_handlers		87609	1					
ANR	87663	ReturnStatement	return ( zend_object * ) closure ;	377:1:13092:13120	87609	5	True				
ANR	87664	CastExpression	( zend_object * ) closure		87609	0					
ANR	87665	CastTarget	zend_object *		87609	0					
ANR	87666	Identifier	closure		87609	1					
ANR	87667	ReturnType	static zend_object *		87609	1					
ANR	87668	Identifier	zend_closure_new		87609	2					
ANR	87669	ParameterList	zend_class_entry * class_type		87609	3					
ANR	87670	Parameter	zend_class_entry * class_type	367:37:12843:12870	87609	0	True				
ANR	87671	ParameterType	zend_class_entry *		87609	0					
ANR	87672	Identifier	class_type		87609	1					
ANR	87673	CFGEntryNode	ENTRY		87609		True				
ANR	87674	CFGExitNode	EXIT		87609		True				
ANR	87675	Symbol	emalloc		87609						
ANR	87676	Symbol	closure -> std		87609						
ANR	87677	Symbol	class_type		87609						
ANR	87678	Symbol	closure -> std . handlers		87609						
ANR	87679	Symbol	* closure		87609						
ANR	87680	Symbol	& closure -> std		87609						
ANR	87681	Symbol	closure		87609						
ANR	87682	Symbol	& closure_handlers		87609						
ANR	87683	Function	zend_closure_clone	381:0:13135:13418							
ANR	87684	FunctionDef	zend_closure_clone (zval * zobject)		87683	0					
ANR	87685	CompoundStatement		382:0:13199:13418	87683	0					
ANR	87686	IdentifierDeclStatement	zend_closure * closure = ( zend_closure * ) Z_OBJ_P ( zobject ) ;	383:1:13202:13258	87683	0	True				
ANR	87687	IdentifierDecl	* closure = ( zend_closure * ) Z_OBJ_P ( zobject )		87683	0					
ANR	87688	IdentifierDeclType	zend_closure *		87683	0					
ANR	87689	Identifier	closure		87683	1					
ANR	87690	AssignmentExpression	* closure = ( zend_closure * ) Z_OBJ_P ( zobject )		87683	2		=			
ANR	87691	Identifier	closure		87683	0					
ANR	87692	CastExpression	( zend_closure * ) Z_OBJ_P ( zobject )		87683	1					
ANR	87693	CastTarget	zend_closure *		87683	0					
ANR	87694	CallExpression	Z_OBJ_P ( zobject )		87683	1					
ANR	87695	Callee	Z_OBJ_P		87683	0					
ANR	87696	Identifier	Z_OBJ_P		87683	0					
ANR	87697	ArgumentList	zobject		87683	1					
ANR	87698	Argument	zobject		87683	0					
ANR	87699	Identifier	zobject		87683	0					
ANR	87700	IdentifierDeclStatement	zval result ;	384:1:13261:13272	87683	1	True				
ANR	87701	IdentifierDecl	result		87683	0					
ANR	87702	IdentifierDeclType	zval		87683	0					
ANR	87703	Identifier	result		87683	1					
ANR	87704	ExpressionStatement	"zend_create_closure ( & result , & closure -> func , closure -> func . common . scope , closure -> called_scope , & closure -> this_ptr )"	386:1:13276:13393	87683	2	True				
ANR	87705	CallExpression	"zend_create_closure ( & result , & closure -> func , closure -> func . common . scope , closure -> called_scope , & closure -> this_ptr )"		87683	0					
ANR	87706	Callee	zend_create_closure		87683	0					
ANR	87707	Identifier	zend_create_closure		87683	0					
ANR	87708	ArgumentList	& result		87683	1					
ANR	87709	Argument	& result		87683	0					
ANR	87710	UnaryOperationExpression	& result		87683	0					
ANR	87711	UnaryOperator	&		87683	0					
ANR	87712	Identifier	result		87683	1					
ANR	87713	Argument	& closure -> func		87683	1					
ANR	87714	UnaryOperationExpression	& closure -> func		87683	0					
ANR	87715	UnaryOperator	&		87683	0					
ANR	87716	PtrMemberAccess	closure -> func		87683	1					
ANR	87717	Identifier	closure		87683	0					
ANR	87718	Identifier	func		87683	1					
ANR	87719	Argument	closure -> func . common . scope		87683	2					
ANR	87720	MemberAccess	closure -> func . common . scope		87683	0					
ANR	87721	MemberAccess	closure -> func . common		87683	0					
ANR	87722	PtrMemberAccess	closure -> func		87683	0					
ANR	87723	Identifier	closure		87683	0					
ANR	87724	Identifier	func		87683	1					
ANR	87725	Identifier	common		87683	1					
ANR	87726	Identifier	scope		87683	1					
ANR	87727	Argument	closure -> called_scope		87683	3					
ANR	87728	PtrMemberAccess	closure -> called_scope		87683	0					
ANR	87729	Identifier	closure		87683	0					
ANR	87730	Identifier	called_scope		87683	1					
ANR	87731	Argument	& closure -> this_ptr		87683	4					
ANR	87732	UnaryOperationExpression	& closure -> this_ptr		87683	0					
ANR	87733	UnaryOperator	&		87683	0					
ANR	87734	PtrMemberAccess	closure -> this_ptr		87683	1					
ANR	87735	Identifier	closure		87683	0					
ANR	87736	Identifier	this_ptr		87683	1					
ANR	87737	ReturnStatement	return Z_OBJ ( result ) ;	388:1:13396:13416	87683	3	True				
ANR	87738	CallExpression	Z_OBJ ( result )		87683	0					
ANR	87739	Callee	Z_OBJ		87683	0					
ANR	87740	Identifier	Z_OBJ		87683	0					
ANR	87741	ArgumentList	result		87683	1					
ANR	87742	Argument	result		87683	0					
ANR	87743	Identifier	result		87683	0					
ANR	87744	ReturnType	static zend_object *		87683	1					
ANR	87745	Identifier	zend_closure_clone		87683	2					
ANR	87746	ParameterList	zval * zobject		87683	3					
ANR	87747	Parameter	zval * zobject	381:39:13174:13186	87683	0	True				
ANR	87748	ParameterType	zval *		87683	0					
ANR	87749	Identifier	zobject		87683	1					
ANR	87750	CFGEntryNode	ENTRY		87683		True				
ANR	87751	CFGExitNode	EXIT		87683		True				
ANR	87752	Symbol	zobject		87683						
ANR	87753	Symbol	* closure		87683						
ANR	87754	Symbol	closure -> called_scope		87683						
ANR	87755	Symbol	Z_OBJ_P		87683						
ANR	87756	Symbol	& closure -> func		87683						
ANR	87757	Symbol	result		87683						
ANR	87758	Symbol	closure -> func		87683						
ANR	87759	Symbol	Z_OBJ		87683						
ANR	87760	Symbol	& result		87683						
ANR	87761	Symbol	closure -> func . common . scope		87683						
ANR	87762	Symbol	closure -> func . common		87683						
ANR	87763	Symbol	& closure -> this_ptr		87683						
ANR	87764	Symbol	closure		87683						
ANR	87765	Function	zend_closure_get_closure	392:0:13431:13904							
ANR	87766	FunctionDef	"zend_closure_get_closure (zval * obj , zend_class_entry * * ce_ptr , zend_function * * fptr_ptr , zend_object * * obj_ptr)"		87765	0					
ANR	87767	CompoundStatement		393:0:13557:13904	87765	0					
ANR	87768	IdentifierDeclStatement	zend_closure * closure ;	394:1:13560:13581	87765	0	True				
ANR	87769	IdentifierDecl	* closure		87765	0					
ANR	87770	IdentifierDeclType	zend_closure *		87765	0					
ANR	87771	Identifier	closure		87765	1					
ANR	87772	IfStatement	if ( Z_TYPE_P ( obj ) != IS_OBJECT )		87765	1					
ANR	87773	Condition	Z_TYPE_P ( obj ) != IS_OBJECT	396:5:13589:13614	87765	0	True				
ANR	87774	EqualityExpression	Z_TYPE_P ( obj ) != IS_OBJECT		87765	0		!=			
ANR	87775	CallExpression	Z_TYPE_P ( obj )		87765	0					
ANR	87776	Callee	Z_TYPE_P		87765	0					
ANR	87777	Identifier	Z_TYPE_P		87765	0					
ANR	87778	ArgumentList	obj		87765	1					
ANR	87779	Argument	obj		87765	0					
ANR	87780	Identifier	obj		87765	0					
ANR	87781	Identifier	IS_OBJECT		87765	1					
ANR	87782	CompoundStatement		4:33:59:59	87765	1					
ANR	87783	ReturnStatement	return FAILURE ;	397:2:13621:13635	87765	0	True				
ANR	87784	Identifier	FAILURE		87765	0					
ANR	87785	ExpressionStatement	closure = ( zend_closure * ) Z_OBJ_P ( obj )	400:1:13642:13680	87765	2	True				
ANR	87786	AssignmentExpression	closure = ( zend_closure * ) Z_OBJ_P ( obj )		87765	0		=			
ANR	87787	Identifier	closure		87765	0					
ANR	87788	CastExpression	( zend_closure * ) Z_OBJ_P ( obj )		87765	1					
ANR	87789	CastTarget	zend_closure *		87765	0					
ANR	87790	CallExpression	Z_OBJ_P ( obj )		87765	1					
ANR	87791	Callee	Z_OBJ_P		87765	0					
ANR	87792	Identifier	Z_OBJ_P		87765	0					
ANR	87793	ArgumentList	obj		87765	1					
ANR	87794	Argument	obj		87765	0					
ANR	87795	Identifier	obj		87765	0					
ANR	87796	ExpressionStatement	* fptr_ptr = & closure -> func	401:1:13683:13709	87765	3	True				
ANR	87797	AssignmentExpression	* fptr_ptr = & closure -> func		87765	0		=			
ANR	87798	UnaryOperationExpression	* fptr_ptr		87765	0					
ANR	87799	UnaryOperator	*		87765	0					
ANR	87800	Identifier	fptr_ptr		87765	1					
ANR	87801	UnaryOperationExpression	& closure -> func		87765	1					
ANR	87802	UnaryOperator	&		87765	0					
ANR	87803	PtrMemberAccess	closure -> func		87765	1					
ANR	87804	Identifier	closure		87765	0					
ANR	87805	Identifier	func		87765	1					
ANR	87806	ExpressionStatement	* ce_ptr = closure -> called_scope	402:1:13712:13743	87765	4	True				
ANR	87807	AssignmentExpression	* ce_ptr = closure -> called_scope		87765	0		=			
ANR	87808	UnaryOperationExpression	* ce_ptr		87765	0					
ANR	87809	UnaryOperator	*		87765	0					
ANR	87810	Identifier	ce_ptr		87765	1					
ANR	87811	PtrMemberAccess	closure -> called_scope		87765	1					
ANR	87812	Identifier	closure		87765	0					
ANR	87813	Identifier	called_scope		87765	1					
ANR	87814	IfStatement	if ( obj_ptr )		87765	5					
ANR	87815	Condition	obj_ptr	404:5:13751:13757	87765	0	True				
ANR	87816	Identifier	obj_ptr		87765	0					
ANR	87817	CompoundStatement		12:14:202:202	87765	1					
ANR	87818	IfStatement	if ( Z_TYPE ( closure -> this_ptr ) != IS_UNDEF )		87765	0					
ANR	87819	Condition	Z_TYPE ( closure -> this_ptr ) != IS_UNDEF	405:6:13768:13804	87765	0	True				
ANR	87820	EqualityExpression	Z_TYPE ( closure -> this_ptr ) != IS_UNDEF		87765	0		!=			
ANR	87821	CallExpression	Z_TYPE ( closure -> this_ptr )		87765	0					
ANR	87822	Callee	Z_TYPE		87765	0					
ANR	87823	Identifier	Z_TYPE		87765	0					
ANR	87824	ArgumentList	closure -> this_ptr		87765	1					
ANR	87825	Argument	closure -> this_ptr		87765	0					
ANR	87826	PtrMemberAccess	closure -> this_ptr		87765	0					
ANR	87827	Identifier	closure		87765	0					
ANR	87828	Identifier	this_ptr		87765	1					
ANR	87829	Identifier	IS_UNDEF		87765	1					
ANR	87830	CompoundStatement		13:45:249:249	87765	1					
ANR	87831	ExpressionStatement	* obj_ptr = Z_OBJ ( closure -> this_ptr )	406:3:13812:13847	87765	0	True				
ANR	87832	AssignmentExpression	* obj_ptr = Z_OBJ ( closure -> this_ptr )		87765	0		=			
ANR	87833	UnaryOperationExpression	* obj_ptr		87765	0					
ANR	87834	UnaryOperator	*		87765	0					
ANR	87835	Identifier	obj_ptr		87765	1					
ANR	87836	CallExpression	Z_OBJ ( closure -> this_ptr )		87765	1					
ANR	87837	Callee	Z_OBJ		87765	0					
ANR	87838	Identifier	Z_OBJ		87765	0					
ANR	87839	ArgumentList	closure -> this_ptr		87765	1					
ANR	87840	Argument	closure -> this_ptr		87765	0					
ANR	87841	PtrMemberAccess	closure -> this_ptr		87765	0					
ANR	87842	Identifier	closure		87765	0					
ANR	87843	Identifier	this_ptr		87765	1					
ANR	87844	ElseStatement	else		87765	0					
ANR	87845	CompoundStatement		15:9:300:300	87765	0					
ANR	87846	ExpressionStatement	* obj_ptr = NULL	408:3:13863:13878	87765	0	True				
ANR	87847	AssignmentExpression	* obj_ptr = NULL		87765	0		=			
ANR	87848	UnaryOperationExpression	* obj_ptr		87765	0					
ANR	87849	UnaryOperator	*		87765	0					
ANR	87850	Identifier	obj_ptr		87765	1					
ANR	87851	Identifier	NULL		87765	1					
ANR	87852	ReturnStatement	return SUCCESS ;	411:1:13888:13902	87765	6	True				
ANR	87853	Identifier	SUCCESS		87765	0					
ANR	87854	ReturnType	int		87765	1					
ANR	87855	Identifier	zend_closure_get_closure		87765	2					
ANR	87856	ParameterList	"zval * obj , zend_class_entry * * ce_ptr , zend_function * * fptr_ptr , zend_object * * obj_ptr"		87765	3					
ANR	87857	Parameter	zval * obj	392:29:13460:13468	87765	0	True				
ANR	87858	ParameterType	zval *		87765	0					
ANR	87859	Identifier	obj		87765	1					
ANR	87860	Parameter	zend_class_entry * * ce_ptr	392:40:13471:13495	87765	1	True				
ANR	87861	ParameterType	zend_class_entry * *		87765	0					
ANR	87862	Identifier	ce_ptr		87765	1					
ANR	87863	Parameter	zend_function * * fptr_ptr	392:67:13498:13521	87765	2	True				
ANR	87864	ParameterType	zend_function * *		87765	0					
ANR	87865	Identifier	fptr_ptr		87765	1					
ANR	87866	Parameter	zend_object * * obj_ptr	392:93:13524:13544	87765	3	True				
ANR	87867	ParameterType	zend_object * *		87765	0					
ANR	87868	Identifier	obj_ptr		87765	1					
ANR	87869	CFGEntryNode	ENTRY		87765		True				
ANR	87870	CFGExitNode	EXIT		87765		True				
ANR	87871	Symbol	fptr_ptr		87765						
ANR	87872	Symbol	* obj_ptr		87765						
ANR	87873	Symbol	* ce_ptr		87765						
ANR	87874	Symbol	* closure		87765						
ANR	87875	Symbol	NULL		87765						
ANR	87876	Symbol	SUCCESS		87765						
ANR	87877	Symbol	closure -> called_scope		87765						
ANR	87878	Symbol	Z_OBJ_P		87765						
ANR	87879	Symbol	& closure -> func		87765						
ANR	87880	Symbol	Z_TYPE		87765						
ANR	87881	Symbol	Z_TYPE_P		87765						
ANR	87882	Symbol	FAILURE		87765						
ANR	87883	Symbol	closure -> this_ptr		87765						
ANR	87884	Symbol	Z_OBJ		87765						
ANR	87885	Symbol	obj		87765						
ANR	87886	Symbol	obj_ptr		87765						
ANR	87887	Symbol	ce_ptr		87765						
ANR	87888	Symbol	IS_OBJECT		87765						
ANR	87889	Symbol	* fptr_ptr		87765						
ANR	87890	Symbol	closure		87765						
ANR	87891	Symbol	IS_UNDEF		87765						
ANR	87892	Function	zend_closure_get_debug_info	415:0:13917:15683							
ANR	87893	FunctionDef	"zend_closure_get_debug_info (zval * object , int * is_temp)"		87892	0					
ANR	87894	CompoundStatement		416:0:14001:15683	87892	0					
ANR	87895	IdentifierDeclStatement	zend_closure * closure = ( zend_closure * ) Z_OBJ_P ( object ) ;	417:1:14004:14059	87892	0	True				
ANR	87896	IdentifierDecl	* closure = ( zend_closure * ) Z_OBJ_P ( object )		87892	0					
ANR	87897	IdentifierDeclType	zend_closure *		87892	0					
ANR	87898	Identifier	closure		87892	1					
ANR	87899	AssignmentExpression	* closure = ( zend_closure * ) Z_OBJ_P ( object )		87892	2		=			
ANR	87900	Identifier	closure		87892	0					
ANR	87901	CastExpression	( zend_closure * ) Z_OBJ_P ( object )		87892	1					
ANR	87902	CastTarget	zend_closure *		87892	0					
ANR	87903	CallExpression	Z_OBJ_P ( object )		87892	1					
ANR	87904	Callee	Z_OBJ_P		87892	0					
ANR	87905	Identifier	Z_OBJ_P		87892	0					
ANR	87906	ArgumentList	object		87892	1					
ANR	87907	Argument	object		87892	0					
ANR	87908	Identifier	object		87892	0					
ANR	87909	IdentifierDeclStatement	zval val ;	418:1:14062:14070	87892	1	True				
ANR	87910	IdentifierDecl	val		87892	0					
ANR	87911	IdentifierDeclType	zval		87892	0					
ANR	87912	Identifier	val		87892	1					
ANR	87913	IdentifierDeclStatement	struct _zend_arg_info * arg_info = closure -> func . common . arg_info ;	419:1:14073:14136	87892	2	True				
ANR	87914	IdentifierDecl	* arg_info = closure -> func . common . arg_info		87892	0					
ANR	87915	IdentifierDeclType	struct _zend_arg_info *		87892	0					
ANR	87916	Identifier	arg_info		87892	1					
ANR	87917	AssignmentExpression	* arg_info = closure -> func . common . arg_info		87892	2		=			
ANR	87918	Identifier	arg_info		87892	0					
ANR	87919	MemberAccess	closure -> func . common . arg_info		87892	1					
ANR	87920	MemberAccess	closure -> func . common		87892	0					
ANR	87921	PtrMemberAccess	closure -> func		87892	0					
ANR	87922	Identifier	closure		87892	0					
ANR	87923	Identifier	func		87892	1					
ANR	87924	Identifier	common		87892	1					
ANR	87925	Identifier	arg_info		87892	1					
ANR	87926	IdentifierDeclStatement	HashTable * debug_info ;	420:1:14139:14160	87892	3	True				
ANR	87927	IdentifierDecl	* debug_info		87892	0					
ANR	87928	IdentifierDeclType	HashTable *		87892	0					
ANR	87929	Identifier	debug_info		87892	1					
ANR	87930	ExpressionStatement	* is_temp = 1	422:1:14164:14176	87892	4	True				
ANR	87931	AssignmentExpression	* is_temp = 1		87892	0		=			
ANR	87932	UnaryOperationExpression	* is_temp		87892	0					
ANR	87933	UnaryOperator	*		87892	0					
ANR	87934	Identifier	is_temp		87892	1					
ANR	87935	PrimaryExpression	1		87892	1					
ANR	87936	ExpressionStatement	ALLOC_HASHTABLE ( debug_info )	424:1:14180:14207	87892	5	True				
ANR	87937	CallExpression	ALLOC_HASHTABLE ( debug_info )		87892	0					
ANR	87938	Callee	ALLOC_HASHTABLE		87892	0					
ANR	87939	Identifier	ALLOC_HASHTABLE		87892	0					
ANR	87940	ArgumentList	debug_info		87892	1					
ANR	87941	Argument	debug_info		87892	0					
ANR	87942	Identifier	debug_info		87892	0					
ANR	87943	ExpressionStatement	"zend_hash_init ( debug_info , 8 , NULL , ZVAL_PTR_DTOR , 0 )"	425:1:14210:14263	87892	6	True				
ANR	87944	CallExpression	"zend_hash_init ( debug_info , 8 , NULL , ZVAL_PTR_DTOR , 0 )"		87892	0					
ANR	87945	Callee	zend_hash_init		87892	0					
ANR	87946	Identifier	zend_hash_init		87892	0					
ANR	87947	ArgumentList	debug_info		87892	1					
ANR	87948	Argument	debug_info		87892	0					
ANR	87949	Identifier	debug_info		87892	0					
ANR	87950	Argument	8		87892	1					
ANR	87951	PrimaryExpression	8		87892	0					
ANR	87952	Argument	NULL		87892	2					
ANR	87953	Identifier	NULL		87892	0					
ANR	87954	Argument	ZVAL_PTR_DTOR		87892	3					
ANR	87955	Identifier	ZVAL_PTR_DTOR		87892	0					
ANR	87956	Argument	0		87892	4					
ANR	87957	PrimaryExpression	0		87892	0					
ANR	87958	IfStatement	if ( closure -> func . type == ZEND_USER_FUNCTION && closure -> func . op_array . static_variables )		87892	7					
ANR	87959	Condition	closure -> func . type == ZEND_USER_FUNCTION && closure -> func . op_array . static_variables	427:5:14271:14353	87892	0	True				
ANR	87960	AndExpression	closure -> func . type == ZEND_USER_FUNCTION && closure -> func . op_array . static_variables		87892	0		&&			
ANR	87961	EqualityExpression	closure -> func . type == ZEND_USER_FUNCTION		87892	0		==			
ANR	87962	MemberAccess	closure -> func . type		87892	0					
ANR	87963	PtrMemberAccess	closure -> func		87892	0					
ANR	87964	Identifier	closure		87892	0					
ANR	87965	Identifier	func		87892	1					
ANR	87966	Identifier	type		87892	1					
ANR	87967	Identifier	ZEND_USER_FUNCTION		87892	1					
ANR	87968	MemberAccess	closure -> func . op_array . static_variables		87892	1					
ANR	87969	MemberAccess	closure -> func . op_array		87892	0					
ANR	87970	PtrMemberAccess	closure -> func		87892	0					
ANR	87971	Identifier	closure		87892	0					
ANR	87972	Identifier	func		87892	1					
ANR	87973	Identifier	op_array		87892	1					
ANR	87974	Identifier	static_variables		87892	1					
ANR	87975	CompoundStatement		13:2:358:427	87892	1					
ANR	87976	IdentifierDeclStatement	HashTable * static_variables = closure -> func . op_array . static_variables ;	428:2:14360:14429	87892	0	True				
ANR	87977	IdentifierDecl	* static_variables = closure -> func . op_array . static_variables		87892	0					
ANR	87978	IdentifierDeclType	HashTable *		87892	0					
ANR	87979	Identifier	static_variables		87892	1					
ANR	87980	AssignmentExpression	* static_variables = closure -> func . op_array . static_variables		87892	2		=			
ANR	87981	Identifier	static_variables		87892	0					
ANR	87982	MemberAccess	closure -> func . op_array . static_variables		87892	1					
ANR	87983	MemberAccess	closure -> func . op_array		87892	0					
ANR	87984	PtrMemberAccess	closure -> func		87892	0					
ANR	87985	Identifier	closure		87892	0					
ANR	87986	Identifier	func		87892	1					
ANR	87987	Identifier	op_array		87892	1					
ANR	87988	Identifier	static_variables		87892	1					
ANR	87989	ExpressionStatement	"ZVAL_ARR ( & val , zend_array_dup ( static_variables ) )"	429:2:14433:14481	87892	1	True				
ANR	87990	CallExpression	"ZVAL_ARR ( & val , zend_array_dup ( static_variables ) )"		87892	0					
ANR	87991	Callee	ZVAL_ARR		87892	0					
ANR	87992	Identifier	ZVAL_ARR		87892	0					
ANR	87993	ArgumentList	& val		87892	1					
ANR	87994	Argument	& val		87892	0					
ANR	87995	UnaryOperationExpression	& val		87892	0					
ANR	87996	UnaryOperator	&		87892	0					
ANR	87997	Identifier	val		87892	1					
ANR	87998	Argument	zend_array_dup ( static_variables )		87892	1					
ANR	87999	CallExpression	zend_array_dup ( static_variables )		87892	0					
ANR	88000	Callee	zend_array_dup		87892	0					
ANR	88001	Identifier	zend_array_dup		87892	0					
ANR	88002	ArgumentList	static_variables		87892	1					
ANR	88003	Argument	static_variables		87892	0					
ANR	88004	Identifier	static_variables		87892	0					
ANR	88005	ExpressionStatement	"zend_hash_str_update ( debug_info , ""static"" , sizeof ( ""static"" ) - 1 , & val )"	430:2:14485:14553	87892	2	True				
ANR	88006	CallExpression	"zend_hash_str_update ( debug_info , ""static"" , sizeof ( ""static"" ) - 1 , & val )"		87892	0					
ANR	88007	Callee	zend_hash_str_update		87892	0					
ANR	88008	Identifier	zend_hash_str_update		87892	0					
ANR	88009	ArgumentList	debug_info		87892	1					
ANR	88010	Argument	debug_info		87892	0					
ANR	88011	Identifier	debug_info		87892	0					
ANR	88012	Argument	"""static"""		87892	1					
ANR	88013	PrimaryExpression	"""static"""		87892	0					
ANR	88014	Argument	"sizeof ( ""static"" ) - 1"		87892	2					
ANR	88015	AdditiveExpression	"sizeof ( ""static"" ) - 1"		87892	0		-			
ANR	88016	SizeofExpression	"sizeof ( ""static"" )"		87892	0					
ANR	88017	Sizeof	sizeof		87892	0					
ANR	88018	PrimaryExpression	"""static"""		87892	1					
ANR	88019	PrimaryExpression	1		87892	1					
ANR	88020	Argument	& val		87892	3					
ANR	88021	UnaryOperationExpression	& val		87892	0					
ANR	88022	UnaryOperator	&		87892	0					
ANR	88023	Identifier	val		87892	1					
ANR	88024	IfStatement	if ( Z_TYPE ( closure -> this_ptr ) != IS_UNDEF )		87892	8					
ANR	88025	Condition	Z_TYPE ( closure -> this_ptr ) != IS_UNDEF	433:5:14564:14600	87892	0	True				
ANR	88026	EqualityExpression	Z_TYPE ( closure -> this_ptr ) != IS_UNDEF		87892	0		!=			
ANR	88027	CallExpression	Z_TYPE ( closure -> this_ptr )		87892	0					
ANR	88028	Callee	Z_TYPE		87892	0					
ANR	88029	Identifier	Z_TYPE		87892	0					
ANR	88030	ArgumentList	closure -> this_ptr		87892	1					
ANR	88031	Argument	closure -> this_ptr		87892	0					
ANR	88032	PtrMemberAccess	closure -> this_ptr		87892	0					
ANR	88033	Identifier	closure		87892	0					
ANR	88034	Identifier	this_ptr		87892	1					
ANR	88035	Identifier	IS_UNDEF		87892	1					
ANR	88036	CompoundStatement		18:44:601:601	87892	1					
ANR	88037	ExpressionStatement	Z_ADDREF ( closure -> this_ptr )	434:2:14607:14634	87892	0	True				
ANR	88038	CallExpression	Z_ADDREF ( closure -> this_ptr )		87892	0					
ANR	88039	Callee	Z_ADDREF		87892	0					
ANR	88040	Identifier	Z_ADDREF		87892	0					
ANR	88041	ArgumentList	closure -> this_ptr		87892	1					
ANR	88042	Argument	closure -> this_ptr		87892	0					
ANR	88043	PtrMemberAccess	closure -> this_ptr		87892	0					
ANR	88044	Identifier	closure		87892	0					
ANR	88045	Identifier	this_ptr		87892	1					
ANR	88046	ExpressionStatement	"zend_hash_str_update ( debug_info , ""this"" , sizeof ( ""this"" ) - 1 , & closure -> this_ptr )"	435:2:14638:14716	87892	1	True				
ANR	88047	CallExpression	"zend_hash_str_update ( debug_info , ""this"" , sizeof ( ""this"" ) - 1 , & closure -> this_ptr )"		87892	0					
ANR	88048	Callee	zend_hash_str_update		87892	0					
ANR	88049	Identifier	zend_hash_str_update		87892	0					
ANR	88050	ArgumentList	debug_info		87892	1					
ANR	88051	Argument	debug_info		87892	0					
ANR	88052	Identifier	debug_info		87892	0					
ANR	88053	Argument	"""this"""		87892	1					
ANR	88054	PrimaryExpression	"""this"""		87892	0					
ANR	88055	Argument	"sizeof ( ""this"" ) - 1"		87892	2					
ANR	88056	AdditiveExpression	"sizeof ( ""this"" ) - 1"		87892	0		-			
ANR	88057	SizeofExpression	"sizeof ( ""this"" )"		87892	0					
ANR	88058	Sizeof	sizeof		87892	0					
ANR	88059	PrimaryExpression	"""this"""		87892	1					
ANR	88060	PrimaryExpression	1		87892	1					
ANR	88061	Argument	& closure -> this_ptr		87892	3					
ANR	88062	UnaryOperationExpression	& closure -> this_ptr		87892	0					
ANR	88063	UnaryOperator	&		87892	0					
ANR	88064	PtrMemberAccess	closure -> this_ptr		87892	1					
ANR	88065	Identifier	closure		87892	0					
ANR	88066	Identifier	this_ptr		87892	1					
ANR	88067	IfStatement	if ( arg_info && ( closure -> func . common . num_args || ( closure -> func . common . fn_flags & ZEND_ACC_VARIADIC ) ) )		87892	9					
ANR	88068	Condition	arg_info && ( closure -> func . common . num_args || ( closure -> func . common . fn_flags & ZEND_ACC_VARIADIC ) )	438:5:14727:14829	87892	0	True				
ANR	88069	AndExpression	arg_info && ( closure -> func . common . num_args || ( closure -> func . common . fn_flags & ZEND_ACC_VARIADIC ) )		87892	0		&&			
ANR	88070	Identifier	arg_info		87892	0					
ANR	88071	OrExpression	closure -> func . common . num_args || ( closure -> func . common . fn_flags & ZEND_ACC_VARIADIC )		87892	1		||			
ANR	88072	MemberAccess	closure -> func . common . num_args		87892	0					
ANR	88073	MemberAccess	closure -> func . common		87892	0					
ANR	88074	PtrMemberAccess	closure -> func		87892	0					
ANR	88075	Identifier	closure		87892	0					
ANR	88076	Identifier	func		87892	1					
ANR	88077	Identifier	common		87892	1					
ANR	88078	Identifier	num_args		87892	1					
ANR	88079	BitAndExpression	closure -> func . common . fn_flags & ZEND_ACC_VARIADIC		87892	1		&			
ANR	88080	MemberAccess	closure -> func . common . fn_flags		87892	0					
ANR	88081	MemberAccess	closure -> func . common		87892	0					
ANR	88082	PtrMemberAccess	closure -> func		87892	0					
ANR	88083	Identifier	closure		87892	0					
ANR	88084	Identifier	func		87892	1					
ANR	88085	Identifier	common		87892	1					
ANR	88086	Identifier	fn_flags		87892	1					
ANR	88087	Identifier	ZEND_ACC_VARIADIC		87892	1					
ANR	88088	CompoundStatement		26:2:834:905	87892	1					
ANR	88089	IdentifierDeclStatement	"uint32_t i , num_args , required = closure -> func . common . required_num_args ;"	441:2:14836:14907	87892	0	True				
ANR	88090	IdentifierDecl	i		87892	0					
ANR	88091	IdentifierDeclType	uint32_t		87892	0					
ANR	88092	Identifier	i		87892	1					
ANR	88093	IdentifierDecl	num_args		87892	1					
ANR	88094	IdentifierDeclType	uint32_t		87892	0					
ANR	88095	Identifier	num_args		87892	1					
ANR	88096	IdentifierDecl	required = closure -> func . common . required_num_args		87892	2					
ANR	88097	IdentifierDeclType	uint32_t		87892	0					
ANR	88098	Identifier	required		87892	1					
ANR	88099	AssignmentExpression	required = closure -> func . common . required_num_args		87892	2		=			
ANR	88100	Identifier	required		87892	0					
ANR	88101	MemberAccess	closure -> func . common . required_num_args		87892	1					
ANR	88102	MemberAccess	closure -> func . common		87892	0					
ANR	88103	PtrMemberAccess	closure -> func		87892	0					
ANR	88104	Identifier	closure		87892	0					
ANR	88105	Identifier	func		87892	1					
ANR	88106	Identifier	common		87892	1					
ANR	88107	Identifier	required_num_args		87892	1					
ANR	88108	ExpressionStatement	array_init ( & val )	443:2:14912:14928	87892	1	True				
ANR	88109	CallExpression	array_init ( & val )		87892	0					
ANR	88110	Callee	array_init		87892	0					
ANR	88111	Identifier	array_init		87892	0					
ANR	88112	ArgumentList	& val		87892	1					
ANR	88113	Argument	& val		87892	0					
ANR	88114	UnaryOperationExpression	& val		87892	0					
ANR	88115	UnaryOperator	&		87892	0					
ANR	88116	Identifier	val		87892	1					
ANR	88117	ExpressionStatement	num_args = closure -> func . common . num_args	445:2:14933:14973	87892	2	True				
ANR	88118	AssignmentExpression	num_args = closure -> func . common . num_args		87892	0		=			
ANR	88119	Identifier	num_args		87892	0					
ANR	88120	MemberAccess	closure -> func . common . num_args		87892	1					
ANR	88121	MemberAccess	closure -> func . common		87892	0					
ANR	88122	PtrMemberAccess	closure -> func		87892	0					
ANR	88123	Identifier	closure		87892	0					
ANR	88124	Identifier	func		87892	1					
ANR	88125	Identifier	common		87892	1					
ANR	88126	Identifier	num_args		87892	1					
ANR	88127	IfStatement	if ( closure -> func . common . fn_flags & ZEND_ACC_VARIADIC )		87892	3					
ANR	88128	Condition	closure -> func . common . fn_flags & ZEND_ACC_VARIADIC	446:6:14981:15029	87892	0	True				
ANR	88129	BitAndExpression	closure -> func . common . fn_flags & ZEND_ACC_VARIADIC		87892	0		&			
ANR	88130	MemberAccess	closure -> func . common . fn_flags		87892	0					
ANR	88131	MemberAccess	closure -> func . common		87892	0					
ANR	88132	PtrMemberAccess	closure -> func		87892	0					
ANR	88133	Identifier	closure		87892	0					
ANR	88134	Identifier	func		87892	1					
ANR	88135	Identifier	common		87892	1					
ANR	88136	Identifier	fn_flags		87892	1					
ANR	88137	Identifier	ZEND_ACC_VARIADIC		87892	1					
ANR	88138	CompoundStatement		31:57:1030:1030	87892	1					
ANR	88139	ExpressionStatement	num_args ++	447:3:15037:15047	87892	0	True				
ANR	88140	PostIncDecOperationExpression	num_args ++		87892	0					
ANR	88141	Identifier	num_args		87892	0					
ANR	88142	IncDec	++		87892	1					
ANR	88143	ForStatement	for ( i = 0 ; i < num_args ; i ++ )		87892	4					
ANR	88144	ForInit	i = 0 ;	449:7:15060:15065	87892	0	True				
ANR	88145	AssignmentExpression	i = 0		87892	0		=			
ANR	88146	Identifier	i		87892	0					
ANR	88147	PrimaryExpression	0		87892	1					
ANR	88148	Condition	i < num_args	449:14:15067:15078	87892	1	True				
ANR	88149	RelationalExpression	i < num_args		87892	0		<			
ANR	88150	Identifier	i		87892	0					
ANR	88151	Identifier	num_args		87892	1					
ANR	88152	PostIncDecOperationExpression	i ++	449:28:15081:15083	87892	2	True				
ANR	88153	Identifier	i		87892	0					
ANR	88154	IncDec	++		87892	1					
ANR	88155	CompoundStatement		36:3:1111:1120	87892	3					
ANR	88156	IdentifierDeclStatement	zend_string * name ;	450:3:15091:15108	87892	0	True				
ANR	88157	IdentifierDecl	* name		87892	0					
ANR	88158	IdentifierDeclType	zend_string *		87892	0					
ANR	88159	Identifier	name		87892	1					
ANR	88160	IdentifierDeclStatement	zval info ;	451:3:15113:15122	87892	1	True				
ANR	88161	IdentifierDecl	info		87892	0					
ANR	88162	IdentifierDeclType	zval		87892	0					
ANR	88163	Identifier	info		87892	1					
ANR	88164	IfStatement	if ( arg_info -> name )		87892	2					
ANR	88165	Condition	arg_info -> name	452:7:15131:15144	87892	0	True				
ANR	88166	PtrMemberAccess	arg_info -> name		87892	0					
ANR	88167	Identifier	arg_info		87892	0					
ANR	88168	Identifier	name		87892	1					
ANR	88169	CompoundStatement		37:23:1145:1145	87892	1					
ANR	88170	ExpressionStatement	"name = zend_strpprintf ( 0 , ""%s$%s"" , arg_info -> pass_by_reference ? ""&"" : """" , ZSTR_VAL ( arg_info -> name ) )"	453:4:15153:15265	87892	0	True				
ANR	88171	AssignmentExpression	"name = zend_strpprintf ( 0 , ""%s$%s"" , arg_info -> pass_by_reference ? ""&"" : """" , ZSTR_VAL ( arg_info -> name ) )"		87892	0		=			
ANR	88172	Identifier	name		87892	0					
ANR	88173	CallExpression	"zend_strpprintf ( 0 , ""%s$%s"" , arg_info -> pass_by_reference ? ""&"" : """" , ZSTR_VAL ( arg_info -> name ) )"		87892	1					
ANR	88174	Callee	zend_strpprintf		87892	0					
ANR	88175	Identifier	zend_strpprintf		87892	0					
ANR	88176	ArgumentList	0		87892	1					
ANR	88177	Argument	0		87892	0					
ANR	88178	PrimaryExpression	0		87892	0					
ANR	88179	Argument	"""%s$%s"""		87892	1					
ANR	88180	PrimaryExpression	"""%s$%s"""		87892	0					
ANR	88181	Argument	"arg_info -> pass_by_reference ? ""&"" : """""		87892	2					
ANR	88182	ConditionalExpression	"arg_info -> pass_by_reference ? ""&"" : """""		87892	0					
ANR	88183	Condition	arg_info -> pass_by_reference		87892	0					
ANR	88184	PtrMemberAccess	arg_info -> pass_by_reference		87892	0					
ANR	88185	Identifier	arg_info		87892	0					
ANR	88186	Identifier	pass_by_reference		87892	1					
ANR	88187	PrimaryExpression	"""&"""		87892	1					
ANR	88188	PrimaryExpression	""""""		87892	2					
ANR	88189	Argument	ZSTR_VAL ( arg_info -> name )		87892	3					
ANR	88190	CallExpression	ZSTR_VAL ( arg_info -> name )		87892	0					
ANR	88191	Callee	ZSTR_VAL		87892	0					
ANR	88192	Identifier	ZSTR_VAL		87892	0					
ANR	88193	ArgumentList	arg_info -> name		87892	1					
ANR	88194	Argument	arg_info -> name		87892	0					
ANR	88195	PtrMemberAccess	arg_info -> name		87892	0					
ANR	88196	Identifier	arg_info		87892	0					
ANR	88197	Identifier	name		87892	1					
ANR	88198	ElseStatement	else		87892	0					
ANR	88199	CompoundStatement		41:10:1275:1275	87892	0					
ANR	88200	ExpressionStatement	"name = zend_strpprintf ( 0 , ""%s$param%d"" , arg_info -> pass_by_reference ? ""&"" : """" , i + 1 )"	457:4:15283:15381	87892	0	True				
ANR	88201	AssignmentExpression	"name = zend_strpprintf ( 0 , ""%s$param%d"" , arg_info -> pass_by_reference ? ""&"" : """" , i + 1 )"		87892	0		=			
ANR	88202	Identifier	name		87892	0					
ANR	88203	CallExpression	"zend_strpprintf ( 0 , ""%s$param%d"" , arg_info -> pass_by_reference ? ""&"" : """" , i + 1 )"		87892	1					
ANR	88204	Callee	zend_strpprintf		87892	0					
ANR	88205	Identifier	zend_strpprintf		87892	0					
ANR	88206	ArgumentList	0		87892	1					
ANR	88207	Argument	0		87892	0					
ANR	88208	PrimaryExpression	0		87892	0					
ANR	88209	Argument	"""%s$param%d"""		87892	1					
ANR	88210	PrimaryExpression	"""%s$param%d"""		87892	0					
ANR	88211	Argument	"arg_info -> pass_by_reference ? ""&"" : """""		87892	2					
ANR	88212	ConditionalExpression	"arg_info -> pass_by_reference ? ""&"" : """""		87892	0					
ANR	88213	Condition	arg_info -> pass_by_reference		87892	0					
ANR	88214	PtrMemberAccess	arg_info -> pass_by_reference		87892	0					
ANR	88215	Identifier	arg_info		87892	0					
ANR	88216	Identifier	pass_by_reference		87892	1					
ANR	88217	PrimaryExpression	"""&"""		87892	1					
ANR	88218	PrimaryExpression	""""""		87892	2					
ANR	88219	Argument	i + 1		87892	3					
ANR	88220	AdditiveExpression	i + 1		87892	0		+			
ANR	88221	Identifier	i		87892	0					
ANR	88222	PrimaryExpression	1		87892	1					
ANR	88223	ExpressionStatement	"ZVAL_NEW_STR ( & info , zend_strpprintf ( 0 , ""%s"" , i >= required ? ""<optional>"" : ""<required>"" ) )"	461:3:15391:15481	87892	3	True				
ANR	88224	CallExpression	"ZVAL_NEW_STR ( & info , zend_strpprintf ( 0 , ""%s"" , i >= required ? ""<optional>"" : ""<required>"" ) )"		87892	0					
ANR	88225	Callee	ZVAL_NEW_STR		87892	0					
ANR	88226	Identifier	ZVAL_NEW_STR		87892	0					
ANR	88227	ArgumentList	& info		87892	1					
ANR	88228	Argument	& info		87892	0					
ANR	88229	UnaryOperationExpression	& info		87892	0					
ANR	88230	UnaryOperator	&		87892	0					
ANR	88231	Identifier	info		87892	1					
ANR	88232	Argument	"zend_strpprintf ( 0 , ""%s"" , i >= required ? ""<optional>"" : ""<required>"" )"		87892	1					
ANR	88233	CallExpression	"zend_strpprintf ( 0 , ""%s"" , i >= required ? ""<optional>"" : ""<required>"" )"		87892	0					
ANR	88234	Callee	zend_strpprintf		87892	0					
ANR	88235	Identifier	zend_strpprintf		87892	0					
ANR	88236	ArgumentList	0		87892	1					
ANR	88237	Argument	0		87892	0					
ANR	88238	PrimaryExpression	0		87892	0					
ANR	88239	Argument	"""%s"""		87892	1					
ANR	88240	PrimaryExpression	"""%s"""		87892	0					
ANR	88241	Argument	"i >= required ? ""<optional>"" : ""<required>"""		87892	2					
ANR	88242	ConditionalExpression	"i >= required ? ""<optional>"" : ""<required>"""		87892	0					
ANR	88243	Condition	i >= required		87892	0					
ANR	88244	RelationalExpression	i >= required		87892	0		>=			
ANR	88245	Identifier	i		87892	0					
ANR	88246	Identifier	required		87892	1					
ANR	88247	PrimaryExpression	"""<optional>"""		87892	1					
ANR	88248	PrimaryExpression	"""<required>"""		87892	2					
ANR	88249	ExpressionStatement	"zend_hash_update ( Z_ARRVAL ( val ) , name , & info )"	462:3:15486:15530	87892	4	True				
ANR	88250	CallExpression	"zend_hash_update ( Z_ARRVAL ( val ) , name , & info )"		87892	0					
ANR	88251	Callee	zend_hash_update		87892	0					
ANR	88252	Identifier	zend_hash_update		87892	0					
ANR	88253	ArgumentList	Z_ARRVAL ( val )		87892	1					
ANR	88254	Argument	Z_ARRVAL ( val )		87892	0					
ANR	88255	CallExpression	Z_ARRVAL ( val )		87892	0					
ANR	88256	Callee	Z_ARRVAL		87892	0					
ANR	88257	Identifier	Z_ARRVAL		87892	0					
ANR	88258	ArgumentList	val		87892	1					
ANR	88259	Argument	val		87892	0					
ANR	88260	Identifier	val		87892	0					
ANR	88261	Argument	name		87892	1					
ANR	88262	Identifier	name		87892	0					
ANR	88263	Argument	& info		87892	2					
ANR	88264	UnaryOperationExpression	& info		87892	0					
ANR	88265	UnaryOperator	&		87892	0					
ANR	88266	Identifier	info		87892	1					
ANR	88267	ExpressionStatement	zend_string_release ( name )	463:3:15535:15560	87892	5	True				
ANR	88268	CallExpression	zend_string_release ( name )		87892	0					
ANR	88269	Callee	zend_string_release		87892	0					
ANR	88270	Identifier	zend_string_release		87892	0					
ANR	88271	ArgumentList	name		87892	1					
ANR	88272	Argument	name		87892	0					
ANR	88273	Identifier	name		87892	0					
ANR	88274	ExpressionStatement	arg_info ++	464:3:15565:15575	87892	6	True				
ANR	88275	PostIncDecOperationExpression	arg_info ++		87892	0					
ANR	88276	Identifier	arg_info		87892	0					
ANR	88277	IncDec	++		87892	1					
ANR	88278	ExpressionStatement	"zend_hash_str_update ( debug_info , ""parameter"" , sizeof ( ""parameter"" ) - 1 , & val )"	466:2:15583:15657	87892	5	True				
ANR	88279	CallExpression	"zend_hash_str_update ( debug_info , ""parameter"" , sizeof ( ""parameter"" ) - 1 , & val )"		87892	0					
ANR	88280	Callee	zend_hash_str_update		87892	0					
ANR	88281	Identifier	zend_hash_str_update		87892	0					
ANR	88282	ArgumentList	debug_info		87892	1					
ANR	88283	Argument	debug_info		87892	0					
ANR	88284	Identifier	debug_info		87892	0					
ANR	88285	Argument	"""parameter"""		87892	1					
ANR	88286	PrimaryExpression	"""parameter"""		87892	0					
ANR	88287	Argument	"sizeof ( ""parameter"" ) - 1"		87892	2					
ANR	88288	AdditiveExpression	"sizeof ( ""parameter"" ) - 1"		87892	0		-			
ANR	88289	SizeofExpression	"sizeof ( ""parameter"" )"		87892	0					
ANR	88290	Sizeof	sizeof		87892	0					
ANR	88291	PrimaryExpression	"""parameter"""		87892	1					
ANR	88292	PrimaryExpression	1		87892	1					
ANR	88293	Argument	& val		87892	3					
ANR	88294	UnaryOperationExpression	& val		87892	0					
ANR	88295	UnaryOperator	&		87892	0					
ANR	88296	Identifier	val		87892	1					
ANR	88297	ReturnStatement	return debug_info ;	469:1:15664:15681	87892	10	True				
ANR	88298	Identifier	debug_info		87892	0					
ANR	88299	ReturnType	static HashTable *		87892	1					
ANR	88300	Identifier	zend_closure_get_debug_info		87892	2					
ANR	88301	ParameterList	"zval * object , int * is_temp"		87892	3					
ANR	88302	Parameter	zval * object	415:46:13963:13974	87892	0	True				
ANR	88303	ParameterType	zval *		87892	0					
ANR	88304	Identifier	object		87892	1					
ANR	88305	Parameter	int * is_temp	415:60:13977:13988	87892	1	True				
ANR	88306	ParameterType	int *		87892	0					
ANR	88307	Identifier	is_temp		87892	1					
ANR	88308	CFGEntryNode	ENTRY		87892		True				
ANR	88309	CFGExitNode	EXIT		87892		True				
ANR	88310	Symbol	& val		87892						
ANR	88311	Symbol	* closure		87892						
ANR	88312	Symbol	Z_OBJ_P		87892						
ANR	88313	Symbol	closure -> func . type		87892						
ANR	88314	Symbol	closure -> func . common . arg_info		87892						
ANR	88315	Symbol	Z_TYPE		87892						
ANR	88316	Symbol	Z_ARRVAL		87892						
ANR	88317	Symbol	required		87892						
ANR	88318	Symbol	* arg_info		87892						
ANR	88319	Symbol	debug_info		87892						
ANR	88320	Symbol	is_temp		87892						
ANR	88321	Symbol	num_args		87892						
ANR	88322	Symbol	ZEND_USER_FUNCTION		87892						
ANR	88323	Symbol	static_variables		87892						
ANR	88324	Symbol	closure		87892						
ANR	88325	Symbol	zend_array_dup		87892						
ANR	88326	Symbol	IS_UNDEF		87892						
ANR	88327	Symbol	info		87892						
ANR	88328	Symbol	val		87892						
ANR	88329	Symbol	zend_strpprintf		87892						
ANR	88330	Symbol	NULL		87892						
ANR	88331	Symbol	& info		87892						
ANR	88332	Symbol	i		87892						
ANR	88333	Symbol	arg_info -> pass_by_reference		87892						
ANR	88334	Symbol	closure -> func . common . fn_flags		87892						
ANR	88335	Symbol	* is_temp		87892						
ANR	88336	Symbol	ZVAL_PTR_DTOR		87892						
ANR	88337	Symbol	closure -> this_ptr		87892						
ANR	88338	Symbol	ZSTR_VAL		87892						
ANR	88339	Symbol	arg_info		87892						
ANR	88340	Symbol	closure -> func		87892						
ANR	88341	Symbol	ZEND_ACC_VARIADIC		87892						
ANR	88342	Symbol	closure -> func . op_array . static_variables		87892						
ANR	88343	Symbol	closure -> func . common . required_num_args		87892						
ANR	88344	Symbol	closure -> func . op_array		87892						
ANR	88345	Symbol	closure -> func . common . num_args		87892						
ANR	88346	Symbol	arg_info -> name		87892						
ANR	88347	Symbol	name		87892						
ANR	88348	Symbol	closure -> func . common		87892						
ANR	88349	Symbol	& closure -> this_ptr		87892						
ANR	88350	Symbol	object		87892						
ANR	88351	Function	zend_closure_get_gc	473:0:15696:16066							
ANR	88352	FunctionDef	"zend_closure_get_gc (zval * obj , zval * * table , int * n)"		88351	0					
ANR	88353	CompoundStatement		474:0:15777:16066	88351	0					
ANR	88354	IdentifierDeclStatement	zend_closure * closure = ( zend_closure * ) Z_OBJ_P ( obj ) ;	475:1:15780:15832	88351	0	True				
ANR	88355	IdentifierDecl	* closure = ( zend_closure * ) Z_OBJ_P ( obj )		88351	0					
ANR	88356	IdentifierDeclType	zend_closure *		88351	0					
ANR	88357	Identifier	closure		88351	1					
ANR	88358	AssignmentExpression	* closure = ( zend_closure * ) Z_OBJ_P ( obj )		88351	2		=			
ANR	88359	Identifier	closure		88351	0					
ANR	88360	CastExpression	( zend_closure * ) Z_OBJ_P ( obj )		88351	1					
ANR	88361	CastTarget	zend_closure *		88351	0					
ANR	88362	CallExpression	Z_OBJ_P ( obj )		88351	1					
ANR	88363	Callee	Z_OBJ_P		88351	0					
ANR	88364	Identifier	Z_OBJ_P		88351	0					
ANR	88365	ArgumentList	obj		88351	1					
ANR	88366	Argument	obj		88351	0					
ANR	88367	Identifier	obj		88351	0					
ANR	88368	ExpressionStatement	* table = Z_TYPE ( closure -> this_ptr ) != IS_NULL ? & closure -> this_ptr : NULL	477:1:15836:15909	88351	1	True				
ANR	88369	AssignmentExpression	* table = Z_TYPE ( closure -> this_ptr ) != IS_NULL ? & closure -> this_ptr : NULL		88351	0		=			
ANR	88370	UnaryOperationExpression	* table		88351	0					
ANR	88371	UnaryOperator	*		88351	0					
ANR	88372	Identifier	table		88351	1					
ANR	88373	ConditionalExpression	Z_TYPE ( closure -> this_ptr ) != IS_NULL ? & closure -> this_ptr : NULL		88351	1					
ANR	88374	Condition	Z_TYPE ( closure -> this_ptr ) != IS_NULL		88351	0					
ANR	88375	EqualityExpression	Z_TYPE ( closure -> this_ptr ) != IS_NULL		88351	0		!=			
ANR	88376	CallExpression	Z_TYPE ( closure -> this_ptr )		88351	0					
ANR	88377	Callee	Z_TYPE		88351	0					
ANR	88378	Identifier	Z_TYPE		88351	0					
ANR	88379	ArgumentList	closure -> this_ptr		88351	1					
ANR	88380	Argument	closure -> this_ptr		88351	0					
ANR	88381	PtrMemberAccess	closure -> this_ptr		88351	0					
ANR	88382	Identifier	closure		88351	0					
ANR	88383	Identifier	this_ptr		88351	1					
ANR	88384	Identifier	IS_NULL		88351	1					
ANR	88385	UnaryOperationExpression	& closure -> this_ptr		88351	1					
ANR	88386	UnaryOperator	&		88351	0					
ANR	88387	PtrMemberAccess	closure -> this_ptr		88351	1					
ANR	88388	Identifier	closure		88351	0					
ANR	88389	Identifier	this_ptr		88351	1					
ANR	88390	Identifier	NULL		88351	2					
ANR	88391	ExpressionStatement	* n = Z_TYPE ( closure -> this_ptr ) != IS_NULL ? 1 : 0	478:1:15912:15961	88351	2	True				
ANR	88392	AssignmentExpression	* n = Z_TYPE ( closure -> this_ptr ) != IS_NULL ? 1 : 0		88351	0		=			
ANR	88393	UnaryOperationExpression	* n		88351	0					
ANR	88394	UnaryOperator	*		88351	0					
ANR	88395	Identifier	n		88351	1					
ANR	88396	ConditionalExpression	Z_TYPE ( closure -> this_ptr ) != IS_NULL ? 1 : 0		88351	1					
ANR	88397	Condition	Z_TYPE ( closure -> this_ptr ) != IS_NULL		88351	0					
ANR	88398	EqualityExpression	Z_TYPE ( closure -> this_ptr ) != IS_NULL		88351	0		!=			
ANR	88399	CallExpression	Z_TYPE ( closure -> this_ptr )		88351	0					
ANR	88400	Callee	Z_TYPE		88351	0					
ANR	88401	Identifier	Z_TYPE		88351	0					
ANR	88402	ArgumentList	closure -> this_ptr		88351	1					
ANR	88403	Argument	closure -> this_ptr		88351	0					
ANR	88404	PtrMemberAccess	closure -> this_ptr		88351	0					
ANR	88405	Identifier	closure		88351	0					
ANR	88406	Identifier	this_ptr		88351	1					
ANR	88407	Identifier	IS_NULL		88351	1					
ANR	88408	PrimaryExpression	1		88351	1					
ANR	88409	PrimaryExpression	0		88351	2					
ANR	88410	ReturnStatement	return ( closure -> func . type == ZEND_USER_FUNCTION ) ? closure -> func . op_array . static_variables : NULL ;	479:1:15964:16064	88351	3	True				
ANR	88411	ConditionalExpression	( closure -> func . type == ZEND_USER_FUNCTION ) ? closure -> func . op_array . static_variables : NULL		88351	0					
ANR	88412	Condition	closure -> func . type == ZEND_USER_FUNCTION		88351	0					
ANR	88413	EqualityExpression	closure -> func . type == ZEND_USER_FUNCTION		88351	0		==			
ANR	88414	MemberAccess	closure -> func . type		88351	0					
ANR	88415	PtrMemberAccess	closure -> func		88351	0					
ANR	88416	Identifier	closure		88351	0					
ANR	88417	Identifier	func		88351	1					
ANR	88418	Identifier	type		88351	1					
ANR	88419	Identifier	ZEND_USER_FUNCTION		88351	1					
ANR	88420	MemberAccess	closure -> func . op_array . static_variables		88351	1					
ANR	88421	MemberAccess	closure -> func . op_array		88351	0					
ANR	88422	PtrMemberAccess	closure -> func		88351	0					
ANR	88423	Identifier	closure		88351	0					
ANR	88424	Identifier	func		88351	1					
ANR	88425	Identifier	op_array		88351	1					
ANR	88426	Identifier	static_variables		88351	1					
ANR	88427	Identifier	NULL		88351	2					
ANR	88428	ReturnType	static HashTable *		88351	1					
ANR	88429	Identifier	zend_closure_get_gc		88351	2					
ANR	88430	ParameterList	"zval * obj , zval * * table , int * n"		88351	3					
ANR	88431	Parameter	zval * obj	473:38:15734:15742	88351	0	True				
ANR	88432	ParameterType	zval *		88351	0					
ANR	88433	Identifier	obj		88351	1					
ANR	88434	Parameter	zval * * table	473:49:15745:15756	88351	1	True				
ANR	88435	ParameterType	zval * *		88351	0					
ANR	88436	Identifier	table		88351	1					
ANR	88437	Parameter	int * n	473:63:15759:15764	88351	2	True				
ANR	88438	ParameterType	int *		88351	0					
ANR	88439	Identifier	n		88351	1					
ANR	88440	CFGEntryNode	ENTRY		88351		True				
ANR	88441	CFGExitNode	EXIT		88351		True				
ANR	88442	Symbol	* closure		88351						
ANR	88443	Symbol	NULL		88351						
ANR	88444	Symbol	Z_OBJ_P		88351						
ANR	88445	Symbol	closure -> func . type		88351						
ANR	88446	Symbol	Z_TYPE		88351						
ANR	88447	Symbol	* table		88351						
ANR	88448	Symbol	n		88351						
ANR	88449	Symbol	closure -> this_ptr		88351						
ANR	88450	Symbol	closure -> func		88351						
ANR	88451	Symbol	closure -> func . op_array . static_variables		88351						
ANR	88452	Symbol	IS_NULL		88351						
ANR	88453	Symbol	closure -> func . op_array		88351						
ANR	88454	Symbol	obj		88351						
ANR	88455	Symbol	ZEND_USER_FUNCTION		88351						
ANR	88456	Symbol	* n		88351						
ANR	88457	Symbol	& closure -> this_ptr		88351						
ANR	88458	Symbol	closure		88351						
ANR	88459	Symbol	table		88351						
ANR	88460	DeclStmt									
ANR	88461	Decl							const zend_function_entry	const zend_function_entry [ ]	closure_functions
ANR	88462	Function	zend_register_closure_ce	516:0:17073:18384							
ANR	88463	FunctionDef	zend_register_closure_ce ()		88462	0					
ANR	88464	CompoundStatement		517:0:17119:18384	88462	0					
ANR	88465	IdentifierDeclStatement	zend_class_entry ce ;	518:1:17122:17141	88462	0	True				
ANR	88466	IdentifierDecl	ce		88462	0					
ANR	88467	IdentifierDeclType	zend_class_entry		88462	0					
ANR	88468	Identifier	ce		88462	1					
ANR	88469	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""Closure"" , closure_functions )"	520:1:17145:17195	88462	1	True				
ANR	88470	CallExpression	"INIT_CLASS_ENTRY ( ce , ""Closure"" , closure_functions )"		88462	0					
ANR	88471	Callee	INIT_CLASS_ENTRY		88462	0					
ANR	88472	Identifier	INIT_CLASS_ENTRY		88462	0					
ANR	88473	ArgumentList	ce		88462	1					
ANR	88474	Argument	ce		88462	0					
ANR	88475	Identifier	ce		88462	0					
ANR	88476	Argument	"""Closure"""		88462	1					
ANR	88477	PrimaryExpression	"""Closure"""		88462	0					
ANR	88478	Argument	closure_functions		88462	2					
ANR	88479	Identifier	closure_functions		88462	0					
ANR	88480	ExpressionStatement	zend_ce_closure = zend_register_internal_class ( & ce )	521:1:17198:17249	88462	2	True				
ANR	88481	AssignmentExpression	zend_ce_closure = zend_register_internal_class ( & ce )		88462	0		=			
ANR	88482	Identifier	zend_ce_closure		88462	0					
ANR	88483	CallExpression	zend_register_internal_class ( & ce )		88462	1					
ANR	88484	Callee	zend_register_internal_class		88462	0					
ANR	88485	Identifier	zend_register_internal_class		88462	0					
ANR	88486	ArgumentList	& ce		88462	1					
ANR	88487	Argument	& ce		88462	0					
ANR	88488	UnaryOperationExpression	& ce		88462	0					
ANR	88489	UnaryOperator	&		88462	0					
ANR	88490	Identifier	ce		88462	1					
ANR	88491	ExpressionStatement	zend_ce_closure -> ce_flags |= ZEND_ACC_FINAL	522:1:17252:17295	88462	3	True				
ANR	88492	AssignmentExpression	zend_ce_closure -> ce_flags |= ZEND_ACC_FINAL		88462	0		|=			
ANR	88493	PtrMemberAccess	zend_ce_closure -> ce_flags		88462	0					
ANR	88494	Identifier	zend_ce_closure		88462	0					
ANR	88495	Identifier	ce_flags		88462	1					
ANR	88496	Identifier	ZEND_ACC_FINAL		88462	1					
ANR	88497	ExpressionStatement	zend_ce_closure -> create_object = zend_closure_new	523:1:17298:17347	88462	4	True				
ANR	88498	AssignmentExpression	zend_ce_closure -> create_object = zend_closure_new		88462	0		=			
ANR	88499	PtrMemberAccess	zend_ce_closure -> create_object		88462	0					
ANR	88500	Identifier	zend_ce_closure		88462	0					
ANR	88501	Identifier	create_object		88462	1					
ANR	88502	Identifier	zend_closure_new		88462	1					
ANR	88503	ExpressionStatement	zend_ce_closure -> serialize = zend_class_serialize_deny	524:1:17350:17404	88462	5	True				
ANR	88504	AssignmentExpression	zend_ce_closure -> serialize = zend_class_serialize_deny		88462	0		=			
ANR	88505	PtrMemberAccess	zend_ce_closure -> serialize		88462	0					
ANR	88506	Identifier	zend_ce_closure		88462	0					
ANR	88507	Identifier	serialize		88462	1					
ANR	88508	Identifier	zend_class_serialize_deny		88462	1					
ANR	88509	ExpressionStatement	zend_ce_closure -> unserialize = zend_class_unserialize_deny	525:1:17407:17465	88462	6	True				
ANR	88510	AssignmentExpression	zend_ce_closure -> unserialize = zend_class_unserialize_deny		88462	0		=			
ANR	88511	PtrMemberAccess	zend_ce_closure -> unserialize		88462	0					
ANR	88512	Identifier	zend_ce_closure		88462	0					
ANR	88513	Identifier	unserialize		88462	1					
ANR	88514	Identifier	zend_class_unserialize_deny		88462	1					
ANR	88515	ExpressionStatement	"memcpy ( & closure_handlers , zend_get_std_object_handlers ( ) , sizeof ( zend_object_handlers ) )"	527:1:17469:17556	88462	7	True				
ANR	88516	CallExpression	"memcpy ( & closure_handlers , zend_get_std_object_handlers ( ) , sizeof ( zend_object_handlers ) )"		88462	0					
ANR	88517	Callee	memcpy		88462	0					
ANR	88518	Identifier	memcpy		88462	0					
ANR	88519	ArgumentList	& closure_handlers		88462	1					
ANR	88520	Argument	& closure_handlers		88462	0					
ANR	88521	UnaryOperationExpression	& closure_handlers		88462	0					
ANR	88522	UnaryOperator	&		88462	0					
ANR	88523	Identifier	closure_handlers		88462	1					
ANR	88524	Argument	zend_get_std_object_handlers ( )		88462	1					
ANR	88525	CallExpression	zend_get_std_object_handlers ( )		88462	0					
ANR	88526	Callee	zend_get_std_object_handlers		88462	0					
ANR	88527	Identifier	zend_get_std_object_handlers		88462	0					
ANR	88528	ArgumentList			88462	1					
ANR	88529	Argument	sizeof ( zend_object_handlers )		88462	2					
ANR	88530	SizeofExpression	sizeof ( zend_object_handlers )		88462	0					
ANR	88531	Sizeof	sizeof		88462	0					
ANR	88532	SizeofOperand	zend_object_handlers		88462	1					
ANR	88533	ExpressionStatement	closure_handlers . free_obj = zend_closure_free_storage	528:1:17559:17612	88462	8	True				
ANR	88534	AssignmentExpression	closure_handlers . free_obj = zend_closure_free_storage		88462	0		=			
ANR	88535	MemberAccess	closure_handlers . free_obj		88462	0					
ANR	88536	Identifier	closure_handlers		88462	0					
ANR	88537	Identifier	free_obj		88462	1					
ANR	88538	Identifier	zend_closure_free_storage		88462	1					
ANR	88539	ExpressionStatement	closure_handlers . clone_obj = NULL	529:1:17615:17648	88462	9	True				
ANR	88540	AssignmentExpression	closure_handlers . clone_obj = NULL		88462	0		=			
ANR	88541	MemberAccess	closure_handlers . clone_obj		88462	0					
ANR	88542	Identifier	closure_handlers		88462	0					
ANR	88543	Identifier	clone_obj		88462	1					
ANR	88544	Identifier	NULL		88462	1					
ANR	88545	ExpressionStatement	closure_handlers . get_constructor = zend_closure_get_constructor	530:1:17651:17714	88462	10	True				
ANR	88546	AssignmentExpression	closure_handlers . get_constructor = zend_closure_get_constructor		88462	0		=			
ANR	88547	MemberAccess	closure_handlers . get_constructor		88462	0					
ANR	88548	Identifier	closure_handlers		88462	0					
ANR	88549	Identifier	get_constructor		88462	1					
ANR	88550	Identifier	zend_closure_get_constructor		88462	1					
ANR	88551	ExpressionStatement	closure_handlers . get_method = zend_closure_get_method	531:1:17717:17770	88462	11	True				
ANR	88552	AssignmentExpression	closure_handlers . get_method = zend_closure_get_method		88462	0		=			
ANR	88553	MemberAccess	closure_handlers . get_method		88462	0					
ANR	88554	Identifier	closure_handlers		88462	0					
ANR	88555	Identifier	get_method		88462	1					
ANR	88556	Identifier	zend_closure_get_method		88462	1					
ANR	88557	ExpressionStatement	closure_handlers . write_property = zend_closure_write_property	532:1:17773:17834	88462	12	True				
ANR	88558	AssignmentExpression	closure_handlers . write_property = zend_closure_write_property		88462	0		=			
ANR	88559	MemberAccess	closure_handlers . write_property		88462	0					
ANR	88560	Identifier	closure_handlers		88462	0					
ANR	88561	Identifier	write_property		88462	1					
ANR	88562	Identifier	zend_closure_write_property		88462	1					
ANR	88563	ExpressionStatement	closure_handlers . read_property = zend_closure_read_property	533:1:17837:17896	88462	13	True				
ANR	88564	AssignmentExpression	closure_handlers . read_property = zend_closure_read_property		88462	0		=			
ANR	88565	MemberAccess	closure_handlers . read_property		88462	0					
ANR	88566	Identifier	closure_handlers		88462	0					
ANR	88567	Identifier	read_property		88462	1					
ANR	88568	Identifier	zend_closure_read_property		88462	1					
ANR	88569	ExpressionStatement	closure_handlers . get_property_ptr_ptr = zend_closure_get_property_ptr_ptr	534:1:17899:17972	88462	14	True				
ANR	88570	AssignmentExpression	closure_handlers . get_property_ptr_ptr = zend_closure_get_property_ptr_ptr		88462	0		=			
ANR	88571	MemberAccess	closure_handlers . get_property_ptr_ptr		88462	0					
ANR	88572	Identifier	closure_handlers		88462	0					
ANR	88573	Identifier	get_property_ptr_ptr		88462	1					
ANR	88574	Identifier	zend_closure_get_property_ptr_ptr		88462	1					
ANR	88575	ExpressionStatement	closure_handlers . has_property = zend_closure_has_property	535:1:17975:18032	88462	15	True				
ANR	88576	AssignmentExpression	closure_handlers . has_property = zend_closure_has_property		88462	0		=			
ANR	88577	MemberAccess	closure_handlers . has_property		88462	0					
ANR	88578	Identifier	closure_handlers		88462	0					
ANR	88579	Identifier	has_property		88462	1					
ANR	88580	Identifier	zend_closure_has_property		88462	1					
ANR	88581	ExpressionStatement	closure_handlers . unset_property = zend_closure_unset_property	536:1:18035:18096	88462	16	True				
ANR	88582	AssignmentExpression	closure_handlers . unset_property = zend_closure_unset_property		88462	0		=			
ANR	88583	MemberAccess	closure_handlers . unset_property		88462	0					
ANR	88584	Identifier	closure_handlers		88462	0					
ANR	88585	Identifier	unset_property		88462	1					
ANR	88586	Identifier	zend_closure_unset_property		88462	1					
ANR	88587	ExpressionStatement	closure_handlers . compare_objects = zend_closure_compare_objects	537:1:18099:18162	88462	17	True				
ANR	88588	AssignmentExpression	closure_handlers . compare_objects = zend_closure_compare_objects		88462	0		=			
ANR	88589	MemberAccess	closure_handlers . compare_objects		88462	0					
ANR	88590	Identifier	closure_handlers		88462	0					
ANR	88591	Identifier	compare_objects		88462	1					
ANR	88592	Identifier	zend_closure_compare_objects		88462	1					
ANR	88593	ExpressionStatement	closure_handlers . clone_obj = zend_closure_clone	538:1:18165:18212	88462	18	True				
ANR	88594	AssignmentExpression	closure_handlers . clone_obj = zend_closure_clone		88462	0		=			
ANR	88595	MemberAccess	closure_handlers . clone_obj		88462	0					
ANR	88596	Identifier	closure_handlers		88462	0					
ANR	88597	Identifier	clone_obj		88462	1					
ANR	88598	Identifier	zend_closure_clone		88462	1					
ANR	88599	ExpressionStatement	closure_handlers . get_debug_info = zend_closure_get_debug_info	539:1:18215:18276	88462	19	True				
ANR	88600	AssignmentExpression	closure_handlers . get_debug_info = zend_closure_get_debug_info		88462	0		=			
ANR	88601	MemberAccess	closure_handlers . get_debug_info		88462	0					
ANR	88602	Identifier	closure_handlers		88462	0					
ANR	88603	Identifier	get_debug_info		88462	1					
ANR	88604	Identifier	zend_closure_get_debug_info		88462	1					
ANR	88605	ExpressionStatement	closure_handlers . get_closure = zend_closure_get_closure	540:1:18279:18334	88462	20	True				
ANR	88606	AssignmentExpression	closure_handlers . get_closure = zend_closure_get_closure		88462	0		=			
ANR	88607	MemberAccess	closure_handlers . get_closure		88462	0					
ANR	88608	Identifier	closure_handlers		88462	0					
ANR	88609	Identifier	get_closure		88462	1					
ANR	88610	Identifier	zend_closure_get_closure		88462	1					
ANR	88611	ExpressionStatement	closure_handlers . get_gc = zend_closure_get_gc	541:1:18337:18382	88462	21	True				
ANR	88612	AssignmentExpression	closure_handlers . get_gc = zend_closure_get_gc		88462	0		=			
ANR	88613	MemberAccess	closure_handlers . get_gc		88462	0					
ANR	88614	Identifier	closure_handlers		88462	0					
ANR	88615	Identifier	get_gc		88462	1					
ANR	88616	Identifier	zend_closure_get_gc		88462	1					
ANR	88617	ReturnType	void		88462	1					
ANR	88618	Identifier	zend_register_closure_ce		88462	2					
ANR	88619	ParameterList			88462	3					
ANR	88620	CFGEntryNode	ENTRY		88462		True				
ANR	88621	CFGExitNode	EXIT		88462		True				
ANR	88622	Symbol	closure_functions		88462						
ANR	88623	Symbol	zend_closure_has_property		88462						
ANR	88624	Symbol	zend_ce_closure		88462						
ANR	88625	Symbol	zend_closure_get_constructor		88462						
ANR	88626	Symbol	zend_closure_unset_property		88462						
ANR	88627	Symbol	zend_closure_new		88462						
ANR	88628	Symbol	zend_get_std_object_handlers		88462						
ANR	88629	Symbol	zend_closure_get_gc		88462						
ANR	88630	Symbol	closure_handlers . free_obj		88462						
ANR	88631	Symbol	& ce		88462						
ANR	88632	Symbol	ZEND_ACC_FINAL		88462						
ANR	88633	Symbol	& closure_handlers		88462						
ANR	88634	Symbol	closure_handlers . compare_objects		88462						
ANR	88635	Symbol	zend_ce_closure -> serialize		88462						
ANR	88636	Symbol	closure_handlers . get_property_ptr_ptr		88462						
ANR	88637	Symbol	* zend_ce_closure		88462						
ANR	88638	Symbol	zend_closure_compare_objects		88462						
ANR	88639	Symbol	closure_handlers . get_constructor		88462						
ANR	88640	Symbol	closure_handlers . read_property		88462						
ANR	88641	Symbol	zend_closure_clone		88462						
ANR	88642	Symbol	zend_closure_free_storage		88462						
ANR	88643	Symbol	closure_handlers . get_method		88462						
ANR	88644	Symbol	zend_ce_closure -> create_object		88462						
ANR	88645	Symbol	closure_handlers . get_gc		88462						
ANR	88646	Symbol	zend_class_unserialize_deny		88462						
ANR	88647	Symbol	closure_handlers . clone_obj		88462						
ANR	88648	Symbol	zend_closure_get_closure		88462						
ANR	88649	Symbol	ce		88462						
ANR	88650	Symbol	NULL		88462						
ANR	88651	Symbol	zend_closure_get_property_ptr_ptr		88462						
ANR	88652	Symbol	zend_closure_get_method		88462						
ANR	88653	Symbol	zend_ce_closure -> ce_flags		88462						
ANR	88654	Symbol	zend_class_serialize_deny		88462						
ANR	88655	Symbol	zend_closure_write_property		88462						
ANR	88656	Symbol	zend_ce_closure -> unserialize		88462						
ANR	88657	Symbol	closure_handlers . unset_property		88462						
ANR	88658	Symbol	closure_handlers . get_closure		88462						
ANR	88659	Symbol	closure_handlers		88462						
ANR	88660	Symbol	closure_handlers . get_debug_info		88462						
ANR	88661	Symbol	zend_closure_read_property		88462						
ANR	88662	Symbol	closure_handlers . write_property		88462						
ANR	88663	Symbol	closure_handlers . has_property		88462						
ANR	88664	Symbol	zend_closure_get_debug_info		88462						
ANR	88665	Symbol	zend_register_internal_class		88462						
ANR	88666	DeclStmt									
ANR	88667	Decl							zend_closure	zend_closure *	closure
ANR	88668	Function	zend_create_closure	554:0:18684:21553							
ANR	88669	FunctionDef	"zend_create_closure (zval * res , zend_function * func , zend_class_entry * scope , zend_class_entry * called_scope , zval * this_ptr)"		88668	0					
ANR	88670	CompoundStatement		555:0:18833:21553	88668	0					
ANR	88671	IdentifierDeclStatement	zend_closure * closure ;	556:1:18836:18857	88668	0	True				
ANR	88672	IdentifierDecl	* closure		88668	0					
ANR	88673	IdentifierDeclType	zend_closure *		88668	0					
ANR	88674	Identifier	closure		88668	1					
ANR	88675	ExpressionStatement	"object_init_ex ( res , zend_ce_closure )"	558:1:18861:18897	88668	1	True				
ANR	88676	CallExpression	"object_init_ex ( res , zend_ce_closure )"		88668	0					
ANR	88677	Callee	object_init_ex		88668	0					
ANR	88678	Identifier	object_init_ex		88668	0					
ANR	88679	ArgumentList	res		88668	1					
ANR	88680	Argument	res		88668	0					
ANR	88681	Identifier	res		88668	0					
ANR	88682	Argument	zend_ce_closure		88668	1					
ANR	88683	Identifier	zend_ce_closure		88668	0					
ANR	88684	ExpressionStatement	closure = ( zend_closure * ) Z_OBJ_P ( res )	560:1:18901:18939	88668	2	True				
ANR	88685	AssignmentExpression	closure = ( zend_closure * ) Z_OBJ_P ( res )		88668	0		=			
ANR	88686	Identifier	closure		88668	0					
ANR	88687	CastExpression	( zend_closure * ) Z_OBJ_P ( res )		88668	1					
ANR	88688	CastTarget	zend_closure *		88668	0					
ANR	88689	CallExpression	Z_OBJ_P ( res )		88668	1					
ANR	88690	Callee	Z_OBJ_P		88668	0					
ANR	88691	Identifier	Z_OBJ_P		88668	0					
ANR	88692	ArgumentList	res		88668	1					
ANR	88693	Argument	res		88668	0					
ANR	88694	Identifier	res		88668	0					
ANR	88695	IfStatement	if ( ( scope == NULL ) && this_ptr && ( Z_TYPE_P ( this_ptr ) != IS_UNDEF ) )		88668	3					
ANR	88696	Condition	( scope == NULL ) && this_ptr && ( Z_TYPE_P ( this_ptr ) != IS_UNDEF )	562:5:18947:19009	88668	0	True				
ANR	88697	AndExpression	( scope == NULL ) && this_ptr && ( Z_TYPE_P ( this_ptr ) != IS_UNDEF )		88668	0		&&			
ANR	88698	EqualityExpression	scope == NULL		88668	0		==			
ANR	88699	Identifier	scope		88668	0					
ANR	88700	Identifier	NULL		88668	1					
ANR	88701	AndExpression	this_ptr && ( Z_TYPE_P ( this_ptr ) != IS_UNDEF )		88668	1		&&			
ANR	88702	Identifier	this_ptr		88668	0					
ANR	88703	EqualityExpression	Z_TYPE_P ( this_ptr ) != IS_UNDEF		88668	1		!=			
ANR	88704	CallExpression	Z_TYPE_P ( this_ptr )		88668	0					
ANR	88705	Callee	Z_TYPE_P		88668	0					
ANR	88706	Identifier	Z_TYPE_P		88668	0					
ANR	88707	ArgumentList	this_ptr		88668	1					
ANR	88708	Argument	this_ptr		88668	0					
ANR	88709	Identifier	this_ptr		88668	0					
ANR	88710	Identifier	IS_UNDEF		88668	1					
ANR	88711	CompoundStatement		8:70:178:178	88668	1					
ANR	88712	ExpressionStatement	scope = zend_ce_closure	565:2:19158:19181	88668	0	True				
ANR	88713	AssignmentExpression	scope = zend_ce_closure		88668	0		=			
ANR	88714	Identifier	scope		88668	0					
ANR	88715	Identifier	zend_ce_closure		88668	1					
ANR	88716	IfStatement	if ( func -> type == ZEND_USER_FUNCTION )		88668	4					
ANR	88717	Condition	func -> type == ZEND_USER_FUNCTION	568:5:19192:19223	88668	0	True				
ANR	88718	EqualityExpression	func -> type == ZEND_USER_FUNCTION		88668	0		==			
ANR	88719	PtrMemberAccess	func -> type		88668	0					
ANR	88720	Identifier	func		88668	0					
ANR	88721	Identifier	type		88668	1					
ANR	88722	Identifier	ZEND_USER_FUNCTION		88668	1					
ANR	88723	CompoundStatement		14:39:392:392	88668	1					
ANR	88724	ExpressionStatement	"memcpy ( & closure -> func , func , sizeof ( zend_op_array ) )"	569:2:19230:19281	88668	0	True				
ANR	88725	CallExpression	"memcpy ( & closure -> func , func , sizeof ( zend_op_array ) )"		88668	0					
ANR	88726	Callee	memcpy		88668	0					
ANR	88727	Identifier	memcpy		88668	0					
ANR	88728	ArgumentList	& closure -> func		88668	1					
ANR	88729	Argument	& closure -> func		88668	0					
ANR	88730	UnaryOperationExpression	& closure -> func		88668	0					
ANR	88731	UnaryOperator	&		88668	0					
ANR	88732	PtrMemberAccess	closure -> func		88668	1					
ANR	88733	Identifier	closure		88668	0					
ANR	88734	Identifier	func		88668	1					
ANR	88735	Argument	func		88668	1					
ANR	88736	Identifier	func		88668	0					
ANR	88737	Argument	sizeof ( zend_op_array )		88668	2					
ANR	88738	SizeofExpression	sizeof ( zend_op_array )		88668	0					
ANR	88739	Sizeof	sizeof		88668	0					
ANR	88740	SizeofOperand	zend_op_array		88668	1					
ANR	88741	ExpressionStatement	closure -> func . common . prototype = ( zend_function * ) closure	570:2:19285:19341	88668	1	True				
ANR	88742	AssignmentExpression	closure -> func . common . prototype = ( zend_function * ) closure		88668	0		=			
ANR	88743	MemberAccess	closure -> func . common . prototype		88668	0					
ANR	88744	MemberAccess	closure -> func . common		88668	0					
ANR	88745	PtrMemberAccess	closure -> func		88668	0					
ANR	88746	Identifier	closure		88668	0					
ANR	88747	Identifier	func		88668	1					
ANR	88748	Identifier	common		88668	1					
ANR	88749	Identifier	prototype		88668	1					
ANR	88750	CastExpression	( zend_function * ) closure		88668	1					
ANR	88751	CastTarget	zend_function *		88668	0					
ANR	88752	Identifier	closure		88668	1					
ANR	88753	ExpressionStatement	closure -> func . common . fn_flags |= ZEND_ACC_CLOSURE	571:2:19345:19394	88668	2	True				
ANR	88754	AssignmentExpression	closure -> func . common . fn_flags |= ZEND_ACC_CLOSURE		88668	0		|=			
ANR	88755	MemberAccess	closure -> func . common . fn_flags		88668	0					
ANR	88756	MemberAccess	closure -> func . common		88668	0					
ANR	88757	PtrMemberAccess	closure -> func		88668	0					
ANR	88758	Identifier	closure		88668	0					
ANR	88759	Identifier	func		88668	1					
ANR	88760	Identifier	common		88668	1					
ANR	88761	Identifier	fn_flags		88668	1					
ANR	88762	Identifier	ZEND_ACC_CLOSURE		88668	1					
ANR	88763	IfStatement	if ( closure -> func . op_array . static_variables )		88668	3					
ANR	88764	Condition	closure -> func . op_array . static_variables	572:6:19402:19440	88668	0	True				
ANR	88765	MemberAccess	closure -> func . op_array . static_variables		88668	0					
ANR	88766	MemberAccess	closure -> func . op_array		88668	0					
ANR	88767	PtrMemberAccess	closure -> func		88668	0					
ANR	88768	Identifier	closure		88668	0					
ANR	88769	Identifier	func		88668	1					
ANR	88770	Identifier	op_array		88668	1					
ANR	88771	Identifier	static_variables		88668	1					
ANR	88772	CompoundStatement		19:3:614:683	88668	1					
ANR	88773	IdentifierDeclStatement	HashTable * static_variables = closure -> func . op_array . static_variables ;	573:3:19448:19517	88668	0	True				
ANR	88774	IdentifierDecl	* static_variables = closure -> func . op_array . static_variables		88668	0					
ANR	88775	IdentifierDeclType	HashTable *		88668	0					
ANR	88776	Identifier	static_variables		88668	1					
ANR	88777	AssignmentExpression	* static_variables = closure -> func . op_array . static_variables		88668	2		=			
ANR	88778	Identifier	static_variables		88668	0					
ANR	88779	MemberAccess	closure -> func . op_array . static_variables		88668	1					
ANR	88780	MemberAccess	closure -> func . op_array		88668	0					
ANR	88781	PtrMemberAccess	closure -> func		88668	0					
ANR	88782	Identifier	closure		88668	0					
ANR	88783	Identifier	func		88668	1					
ANR	88784	Identifier	op_array		88668	1					
ANR	88785	Identifier	static_variables		88668	1					
ANR	88786	ExpressionStatement	ALLOC_HASHTABLE ( closure -> func . op_array . static_variables )	575:3:19523:19579	88668	1	True				
ANR	88787	CallExpression	ALLOC_HASHTABLE ( closure -> func . op_array . static_variables )		88668	0					
ANR	88788	Callee	ALLOC_HASHTABLE		88668	0					
ANR	88789	Identifier	ALLOC_HASHTABLE		88668	0					
ANR	88790	ArgumentList	closure -> func . op_array . static_variables		88668	1					
ANR	88791	Argument	closure -> func . op_array . static_variables		88668	0					
ANR	88792	MemberAccess	closure -> func . op_array . static_variables		88668	0					
ANR	88793	MemberAccess	closure -> func . op_array		88668	0					
ANR	88794	PtrMemberAccess	closure -> func		88668	0					
ANR	88795	Identifier	closure		88668	0					
ANR	88796	Identifier	func		88668	1					
ANR	88797	Identifier	op_array		88668	1					
ANR	88798	Identifier	static_variables		88668	1					
ANR	88799	ExpressionStatement	"zend_hash_init ( closure -> func . op_array . static_variables , zend_hash_num_elements ( static_variables ) , NULL , ZVAL_PTR_DTOR , 0 )"	576:3:19584:19705	88668	2	True				
ANR	88800	CallExpression	"zend_hash_init ( closure -> func . op_array . static_variables , zend_hash_num_elements ( static_variables ) , NULL , ZVAL_PTR_DTOR , 0 )"		88668	0					
ANR	88801	Callee	zend_hash_init		88668	0					
ANR	88802	Identifier	zend_hash_init		88668	0					
ANR	88803	ArgumentList	closure -> func . op_array . static_variables		88668	1					
ANR	88804	Argument	closure -> func . op_array . static_variables		88668	0					
ANR	88805	MemberAccess	closure -> func . op_array . static_variables		88668	0					
ANR	88806	MemberAccess	closure -> func . op_array		88668	0					
ANR	88807	PtrMemberAccess	closure -> func		88668	0					
ANR	88808	Identifier	closure		88668	0					
ANR	88809	Identifier	func		88668	1					
ANR	88810	Identifier	op_array		88668	1					
ANR	88811	Identifier	static_variables		88668	1					
ANR	88812	Argument	zend_hash_num_elements ( static_variables )		88668	1					
ANR	88813	CallExpression	zend_hash_num_elements ( static_variables )		88668	0					
ANR	88814	Callee	zend_hash_num_elements		88668	0					
ANR	88815	Identifier	zend_hash_num_elements		88668	0					
ANR	88816	ArgumentList	static_variables		88668	1					
ANR	88817	Argument	static_variables		88668	0					
ANR	88818	Identifier	static_variables		88668	0					
ANR	88819	Argument	NULL		88668	2					
ANR	88820	Identifier	NULL		88668	0					
ANR	88821	Argument	ZVAL_PTR_DTOR		88668	3					
ANR	88822	Identifier	ZVAL_PTR_DTOR		88668	0					
ANR	88823	Argument	0		88668	4					
ANR	88824	PrimaryExpression	0		88668	0					
ANR	88825	ExpressionStatement	"zend_hash_apply_with_arguments ( static_variables , zval_copy_static_var , 1 , closure -> func . op_array . static_variables )"	577:3:19710:19824	88668	3	True				
ANR	88826	CallExpression	"zend_hash_apply_with_arguments ( static_variables , zval_copy_static_var , 1 , closure -> func . op_array . static_variables )"		88668	0					
ANR	88827	Callee	zend_hash_apply_with_arguments		88668	0					
ANR	88828	Identifier	zend_hash_apply_with_arguments		88668	0					
ANR	88829	ArgumentList	static_variables		88668	1					
ANR	88830	Argument	static_variables		88668	0					
ANR	88831	Identifier	static_variables		88668	0					
ANR	88832	Argument	zval_copy_static_var		88668	1					
ANR	88833	Identifier	zval_copy_static_var		88668	0					
ANR	88834	Argument	1		88668	2					
ANR	88835	PrimaryExpression	1		88668	0					
ANR	88836	Argument	closure -> func . op_array . static_variables		88668	3					
ANR	88837	MemberAccess	closure -> func . op_array . static_variables		88668	0					
ANR	88838	MemberAccess	closure -> func . op_array		88668	0					
ANR	88839	PtrMemberAccess	closure -> func		88668	0					
ANR	88840	Identifier	closure		88668	0					
ANR	88841	Identifier	func		88668	1					
ANR	88842	Identifier	op_array		88668	1					
ANR	88843	Identifier	static_variables		88668	1					
ANR	88844	IfStatement	if ( UNEXPECTED ( ! closure -> func . op_array . run_time_cache ) )		88668	4					
ANR	88845	Condition	UNEXPECTED ( ! closure -> func . op_array . run_time_cache )	579:6:19836:19885	88668	0	True				
ANR	88846	CallExpression	UNEXPECTED ( ! closure -> func . op_array . run_time_cache )		88668	0					
ANR	88847	Callee	UNEXPECTED		88668	0					
ANR	88848	Identifier	UNEXPECTED		88668	0					
ANR	88849	ArgumentList	! closure -> func . op_array . run_time_cache		88668	1					
ANR	88850	Argument	! closure -> func . op_array . run_time_cache		88668	0					
ANR	88851	UnaryOperationExpression	! closure -> func . op_array . run_time_cache		88668	0					
ANR	88852	UnaryOperator	!		88668	0					
ANR	88853	MemberAccess	closure -> func . op_array . run_time_cache		88668	1					
ANR	88854	MemberAccess	closure -> func . op_array		88668	0					
ANR	88855	PtrMemberAccess	closure -> func		88668	0					
ANR	88856	Identifier	closure		88668	0					
ANR	88857	Identifier	func		88668	1					
ANR	88858	Identifier	op_array		88668	1					
ANR	88859	Identifier	run_time_cache		88668	1					
ANR	88860	CompoundStatement		25:58:1054:1054	88668	1					
ANR	88861	ExpressionStatement	"closure -> func . op_array . run_time_cache = func -> op_array . run_time_cache = zend_arena_alloc ( & CG ( arena ) , func -> op_array . cache_size )"	580:3:19893:20020	88668	0	True				
ANR	88862	AssignmentExpression	"closure -> func . op_array . run_time_cache = func -> op_array . run_time_cache = zend_arena_alloc ( & CG ( arena ) , func -> op_array . cache_size )"		88668	0		=			
ANR	88863	MemberAccess	closure -> func . op_array . run_time_cache		88668	0					
ANR	88864	MemberAccess	closure -> func . op_array		88668	0					
ANR	88865	PtrMemberAccess	closure -> func		88668	0					
ANR	88866	Identifier	closure		88668	0					
ANR	88867	Identifier	func		88668	1					
ANR	88868	Identifier	op_array		88668	1					
ANR	88869	Identifier	run_time_cache		88668	1					
ANR	88870	AssignmentExpression	"func -> op_array . run_time_cache = zend_arena_alloc ( & CG ( arena ) , func -> op_array . cache_size )"		88668	1		=			
ANR	88871	MemberAccess	func -> op_array . run_time_cache		88668	0					
ANR	88872	PtrMemberAccess	func -> op_array		88668	0					
ANR	88873	Identifier	func		88668	0					
ANR	88874	Identifier	op_array		88668	1					
ANR	88875	Identifier	run_time_cache		88668	1					
ANR	88876	CallExpression	"zend_arena_alloc ( & CG ( arena ) , func -> op_array . cache_size )"		88668	1					
ANR	88877	Callee	zend_arena_alloc		88668	0					
ANR	88878	Identifier	zend_arena_alloc		88668	0					
ANR	88879	ArgumentList	& CG ( arena )		88668	1					
ANR	88880	Argument	& CG ( arena )		88668	0					
ANR	88881	UnaryOperationExpression	& CG ( arena )		88668	0					
ANR	88882	UnaryOperator	&		88668	0					
ANR	88883	CallExpression	CG ( arena )		88668	1					
ANR	88884	Callee	CG		88668	0					
ANR	88885	Identifier	CG		88668	0					
ANR	88886	ArgumentList	arena		88668	1					
ANR	88887	Argument	arena		88668	0					
ANR	88888	Identifier	arena		88668	0					
ANR	88889	Argument	func -> op_array . cache_size		88668	1					
ANR	88890	MemberAccess	func -> op_array . cache_size		88668	0					
ANR	88891	PtrMemberAccess	func -> op_array		88668	0					
ANR	88892	Identifier	func		88668	0					
ANR	88893	Identifier	op_array		88668	1					
ANR	88894	Identifier	cache_size		88668	1					
ANR	88895	ExpressionStatement	"memset ( func -> op_array . run_time_cache , 0 , func -> op_array . cache_size )"	581:3:20025:20092	88668	1	True				
ANR	88896	CallExpression	"memset ( func -> op_array . run_time_cache , 0 , func -> op_array . cache_size )"		88668	0					
ANR	88897	Callee	memset		88668	0					
ANR	88898	Identifier	memset		88668	0					
ANR	88899	ArgumentList	func -> op_array . run_time_cache		88668	1					
ANR	88900	Argument	func -> op_array . run_time_cache		88668	0					
ANR	88901	MemberAccess	func -> op_array . run_time_cache		88668	0					
ANR	88902	PtrMemberAccess	func -> op_array		88668	0					
ANR	88903	Identifier	func		88668	0					
ANR	88904	Identifier	op_array		88668	1					
ANR	88905	Identifier	run_time_cache		88668	1					
ANR	88906	Argument	0		88668	1					
ANR	88907	PrimaryExpression	0		88668	0					
ANR	88908	Argument	func -> op_array . cache_size		88668	2					
ANR	88909	MemberAccess	func -> op_array . cache_size		88668	0					
ANR	88910	PtrMemberAccess	func -> op_array		88668	0					
ANR	88911	Identifier	func		88668	0					
ANR	88912	Identifier	op_array		88668	1					
ANR	88913	Identifier	cache_size		88668	1					
ANR	88914	IfStatement	if ( closure -> func . op_array . refcount )		88668	5					
ANR	88915	Condition	closure -> func . op_array . refcount	583:6:20104:20134	88668	0	True				
ANR	88916	MemberAccess	closure -> func . op_array . refcount		88668	0					
ANR	88917	MemberAccess	closure -> func . op_array		88668	0					
ANR	88918	PtrMemberAccess	closure -> func		88668	0					
ANR	88919	Identifier	closure		88668	0					
ANR	88920	Identifier	func		88668	1					
ANR	88921	Identifier	op_array		88668	1					
ANR	88922	Identifier	refcount		88668	1					
ANR	88923	CompoundStatement		29:39:1303:1303	88668	1					
ANR	88924	ExpressionStatement	( * closure -> func . op_array . refcount ) ++	584:3:20142:20178	88668	0	True				
ANR	88925	PostIncDecOperationExpression	( * closure -> func . op_array . refcount ) ++		88668	0					
ANR	88926	UnaryOperationExpression	* closure -> func . op_array . refcount		88668	0					
ANR	88927	UnaryOperator	*		88668	0					
ANR	88928	MemberAccess	closure -> func . op_array . refcount		88668	1					
ANR	88929	MemberAccess	closure -> func . op_array		88668	0					
ANR	88930	PtrMemberAccess	closure -> func		88668	0					
ANR	88931	Identifier	closure		88668	0					
ANR	88932	Identifier	func		88668	1					
ANR	88933	Identifier	op_array		88668	1					
ANR	88934	Identifier	refcount		88668	1					
ANR	88935	IncDec	++		88668	1					
ANR	88936	ElseStatement	else		88668	0					
ANR	88937	CompoundStatement		32:8:1358:1358	88668	0					
ANR	88938	ExpressionStatement	"memcpy ( & closure -> func , func , sizeof ( zend_internal_function ) )"	587:2:20196:20256	88668	0	True				
ANR	88939	CallExpression	"memcpy ( & closure -> func , func , sizeof ( zend_internal_function ) )"		88668	0					
ANR	88940	Callee	memcpy		88668	0					
ANR	88941	Identifier	memcpy		88668	0					
ANR	88942	ArgumentList	& closure -> func		88668	1					
ANR	88943	Argument	& closure -> func		88668	0					
ANR	88944	UnaryOperationExpression	& closure -> func		88668	0					
ANR	88945	UnaryOperator	&		88668	0					
ANR	88946	PtrMemberAccess	closure -> func		88668	1					
ANR	88947	Identifier	closure		88668	0					
ANR	88948	Identifier	func		88668	1					
ANR	88949	Argument	func		88668	1					
ANR	88950	Identifier	func		88668	0					
ANR	88951	Argument	sizeof ( zend_internal_function )		88668	2					
ANR	88952	SizeofExpression	sizeof ( zend_internal_function )		88668	0					
ANR	88953	Sizeof	sizeof		88668	0					
ANR	88954	SizeofOperand	zend_internal_function		88668	1					
ANR	88955	ExpressionStatement	closure -> func . common . prototype = ( zend_function * ) closure	588:2:20260:20316	88668	1	True				
ANR	88956	AssignmentExpression	closure -> func . common . prototype = ( zend_function * ) closure		88668	0		=			
ANR	88957	MemberAccess	closure -> func . common . prototype		88668	0					
ANR	88958	MemberAccess	closure -> func . common		88668	0					
ANR	88959	PtrMemberAccess	closure -> func		88668	0					
ANR	88960	Identifier	closure		88668	0					
ANR	88961	Identifier	func		88668	1					
ANR	88962	Identifier	common		88668	1					
ANR	88963	Identifier	prototype		88668	1					
ANR	88964	CastExpression	( zend_function * ) closure		88668	1					
ANR	88965	CastTarget	zend_function *		88668	0					
ANR	88966	Identifier	closure		88668	1					
ANR	88967	ExpressionStatement	closure -> func . common . fn_flags |= ZEND_ACC_CLOSURE	589:2:20320:20369	88668	2	True				
ANR	88968	AssignmentExpression	closure -> func . common . fn_flags |= ZEND_ACC_CLOSURE		88668	0		|=			
ANR	88969	MemberAccess	closure -> func . common . fn_flags		88668	0					
ANR	88970	MemberAccess	closure -> func . common		88668	0					
ANR	88971	PtrMemberAccess	closure -> func		88668	0					
ANR	88972	Identifier	closure		88668	0					
ANR	88973	Identifier	func		88668	1					
ANR	88974	Identifier	common		88668	1					
ANR	88975	Identifier	fn_flags		88668	1					
ANR	88976	Identifier	ZEND_ACC_CLOSURE		88668	1					
ANR	88977	IfStatement	if ( UNEXPECTED ( closure -> func . internal_function . handler == zend_closure_internal_handler ) )		88668	3					
ANR	88978	Condition	UNEXPECTED ( closure -> func . internal_function . handler == zend_closure_internal_handler )	591:6:20437:20520	88668	0	True				
ANR	88979	CallExpression	UNEXPECTED ( closure -> func . internal_function . handler == zend_closure_internal_handler )		88668	0					
ANR	88980	Callee	UNEXPECTED		88668	0					
ANR	88981	Identifier	UNEXPECTED		88668	0					
ANR	88982	ArgumentList	closure -> func . internal_function . handler == zend_closure_internal_handler		88668	1					
ANR	88983	Argument	closure -> func . internal_function . handler == zend_closure_internal_handler		88668	0					
ANR	88984	EqualityExpression	closure -> func . internal_function . handler == zend_closure_internal_handler		88668	0		==			
ANR	88985	MemberAccess	closure -> func . internal_function . handler		88668	0					
ANR	88986	MemberAccess	closure -> func . internal_function		88668	0					
ANR	88987	PtrMemberAccess	closure -> func		88668	0					
ANR	88988	Identifier	closure		88668	0					
ANR	88989	Identifier	func		88668	1					
ANR	88990	Identifier	internal_function		88668	1					
ANR	88991	Identifier	handler		88668	1					
ANR	88992	Identifier	zend_closure_internal_handler		88668	1					
ANR	88993	CompoundStatement		39:3:1767:1851	88668	1					
ANR	88994	IdentifierDeclStatement	"zend_closure * nested = ( zend_closure * ) ( ( char * ) func - XtOffsetOf ( zend_closure , func ) ) ;"	593:3:20601:20685	88668	0	True				
ANR	88995	IdentifierDecl	"* nested = ( zend_closure * ) ( ( char * ) func - XtOffsetOf ( zend_closure , func ) )"		88668	0					
ANR	88996	IdentifierDeclType	zend_closure *		88668	0					
ANR	88997	Identifier	nested		88668	1					
ANR	88998	AssignmentExpression	"* nested = ( zend_closure * ) ( ( char * ) func - XtOffsetOf ( zend_closure , func ) )"		88668	2		=			
ANR	88999	Identifier	nested		88668	0					
ANR	89000	CastExpression	"( zend_closure * ) ( ( char * ) func - XtOffsetOf ( zend_closure , func ) )"		88668	1					
ANR	89001	CastTarget	zend_closure *		88668	0					
ANR	89002	AdditiveExpression	"( char * ) func - XtOffsetOf ( zend_closure , func )"		88668	1		-			
ANR	89003	CastExpression	( char * ) func		88668	0					
ANR	89004	CastTarget	char *		88668	0					
ANR	89005	Identifier	func		88668	1					
ANR	89006	CallExpression	"XtOffsetOf ( zend_closure , func )"		88668	1					
ANR	89007	Callee	XtOffsetOf		88668	0					
ANR	89008	Identifier	XtOffsetOf		88668	0					
ANR	89009	ArgumentList	zend_closure		88668	1					
ANR	89010	Argument	zend_closure		88668	0					
ANR	89011	Identifier	zend_closure		88668	0					
ANR	89012	Argument	func		88668	1					
ANR	89013	Identifier	func		88668	0					
ANR	89014	ExpressionStatement	ZEND_ASSERT ( nested -> std . ce == zend_ce_closure )	594:3:20690:20736	88668	1	True				
ANR	89015	CallExpression	ZEND_ASSERT ( nested -> std . ce == zend_ce_closure )		88668	0					
ANR	89016	Callee	ZEND_ASSERT		88668	0					
ANR	89017	Identifier	ZEND_ASSERT		88668	0					
ANR	89018	ArgumentList	nested -> std . ce == zend_ce_closure		88668	1					
ANR	89019	Argument	nested -> std . ce == zend_ce_closure		88668	0					
ANR	89020	EqualityExpression	nested -> std . ce == zend_ce_closure		88668	0		==			
ANR	89021	MemberAccess	nested -> std . ce		88668	0					
ANR	89022	PtrMemberAccess	nested -> std		88668	0					
ANR	89023	Identifier	nested		88668	0					
ANR	89024	Identifier	std		88668	1					
ANR	89025	Identifier	ce		88668	1					
ANR	89026	Identifier	zend_ce_closure		88668	1					
ANR	89027	ExpressionStatement	closure -> orig_internal_handler = nested -> orig_internal_handler	595:3:20741:20803	88668	2	True				
ANR	89028	AssignmentExpression	closure -> orig_internal_handler = nested -> orig_internal_handler		88668	0		=			
ANR	89029	PtrMemberAccess	closure -> orig_internal_handler		88668	0					
ANR	89030	Identifier	closure		88668	0					
ANR	89031	Identifier	orig_internal_handler		88668	1					
ANR	89032	PtrMemberAccess	nested -> orig_internal_handler		88668	1					
ANR	89033	Identifier	nested		88668	0					
ANR	89034	Identifier	orig_internal_handler		88668	1					
ANR	89035	ElseStatement	else		88668	0					
ANR	89036	CompoundStatement		42:9:1980:1980	88668	0					
ANR	89037	ExpressionStatement	closure -> orig_internal_handler = closure -> func . internal_function . handler	597:3:20819:20891	88668	0	True				
ANR	89038	AssignmentExpression	closure -> orig_internal_handler = closure -> func . internal_function . handler		88668	0		=			
ANR	89039	PtrMemberAccess	closure -> orig_internal_handler		88668	0					
ANR	89040	Identifier	closure		88668	0					
ANR	89041	Identifier	orig_internal_handler		88668	1					
ANR	89042	MemberAccess	closure -> func . internal_function . handler		88668	1					
ANR	89043	MemberAccess	closure -> func . internal_function		88668	0					
ANR	89044	PtrMemberAccess	closure -> func		88668	0					
ANR	89045	Identifier	closure		88668	0					
ANR	89046	Identifier	func		88668	1					
ANR	89047	Identifier	internal_function		88668	1					
ANR	89048	Identifier	handler		88668	1					
ANR	89049	ExpressionStatement	closure -> func . internal_function . handler = zend_closure_internal_handler	599:2:20899:20970	88668	4	True				
ANR	89050	AssignmentExpression	closure -> func . internal_function . handler = zend_closure_internal_handler		88668	0		=			
ANR	89051	MemberAccess	closure -> func . internal_function . handler		88668	0					
ANR	89052	MemberAccess	closure -> func . internal_function		88668	0					
ANR	89053	PtrMemberAccess	closure -> func		88668	0					
ANR	89054	Identifier	closure		88668	0					
ANR	89055	Identifier	func		88668	1					
ANR	89056	Identifier	internal_function		88668	1					
ANR	89057	Identifier	handler		88668	1					
ANR	89058	Identifier	zend_closure_internal_handler		88668	1					
ANR	89059	IfStatement	if ( ! func -> common . scope )		88668	5					
ANR	89060	Condition	! func -> common . scope	600:6:20978:20996	88668	0	True				
ANR	89061	UnaryOperationExpression	! func -> common . scope		88668	0					
ANR	89062	UnaryOperator	!		88668	0					
ANR	89063	MemberAccess	func -> common . scope		88668	1					
ANR	89064	PtrMemberAccess	func -> common		88668	0					
ANR	89065	Identifier	func		88668	0					
ANR	89066	Identifier	common		88668	1					
ANR	89067	Identifier	scope		88668	1					
ANR	89068	CompoundStatement		46:27:2165:2165	88668	1					
ANR	89069	ExpressionStatement	this_ptr = NULL	602:3:21090:21105	88668	0	True				
ANR	89070	AssignmentExpression	this_ptr = NULL		88668	0		=			
ANR	89071	Identifier	this_ptr		88668	0					
ANR	89072	Identifier	NULL		88668	1					
ANR	89073	ExpressionStatement	scope = NULL	603:3:21110:21122	88668	1	True				
ANR	89074	AssignmentExpression	scope = NULL		88668	0		=			
ANR	89075	Identifier	scope		88668	0					
ANR	89076	Identifier	NULL		88668	1					
ANR	89077	ExpressionStatement	ZVAL_UNDEF ( & closure -> this_ptr )	607:1:21133:21163	88668	5	True				
ANR	89078	CallExpression	ZVAL_UNDEF ( & closure -> this_ptr )		88668	0					
ANR	89079	Callee	ZVAL_UNDEF		88668	0					
ANR	89080	Identifier	ZVAL_UNDEF		88668	0					
ANR	89081	ArgumentList	& closure -> this_ptr		88668	1					
ANR	89082	Argument	& closure -> this_ptr		88668	0					
ANR	89083	UnaryOperationExpression	& closure -> this_ptr		88668	0					
ANR	89084	UnaryOperator	&		88668	0					
ANR	89085	PtrMemberAccess	closure -> this_ptr		88668	1					
ANR	89086	Identifier	closure		88668	0					
ANR	89087	Identifier	this_ptr		88668	1					
ANR	89088	ExpressionStatement	closure -> func . common . scope = scope	610:1:21250:21284	88668	6	True				
ANR	89089	AssignmentExpression	closure -> func . common . scope = scope		88668	0		=			
ANR	89090	MemberAccess	closure -> func . common . scope		88668	0					
ANR	89091	MemberAccess	closure -> func . common		88668	0					
ANR	89092	PtrMemberAccess	closure -> func		88668	0					
ANR	89093	Identifier	closure		88668	0					
ANR	89094	Identifier	func		88668	1					
ANR	89095	Identifier	common		88668	1					
ANR	89096	Identifier	scope		88668	1					
ANR	89097	Identifier	scope		88668	1					
ANR	89098	ExpressionStatement	closure -> called_scope = called_scope	611:1:21287:21323	88668	7	True				
ANR	89099	AssignmentExpression	closure -> called_scope = called_scope		88668	0		=			
ANR	89100	PtrMemberAccess	closure -> called_scope		88668	0					
ANR	89101	Identifier	closure		88668	0					
ANR	89102	Identifier	called_scope		88668	1					
ANR	89103	Identifier	called_scope		88668	1					
ANR	89104	IfStatement	if ( scope )		88668	8					
ANR	89105	Condition	scope	612:5:21330:21334	88668	0	True				
ANR	89106	Identifier	scope		88668	0					
ANR	89107	CompoundStatement		58:12:2503:2503	88668	1					
ANR	89108	ExpressionStatement	closure -> func . common . fn_flags |= ZEND_ACC_PUBLIC	613:2:21341:21389	88668	0	True				
ANR	89109	AssignmentExpression	closure -> func . common . fn_flags |= ZEND_ACC_PUBLIC		88668	0		|=			
ANR	89110	MemberAccess	closure -> func . common . fn_flags		88668	0					
ANR	89111	MemberAccess	closure -> func . common		88668	0					
ANR	89112	PtrMemberAccess	closure -> func		88668	0					
ANR	89113	Identifier	closure		88668	0					
ANR	89114	Identifier	func		88668	1					
ANR	89115	Identifier	common		88668	1					
ANR	89116	Identifier	fn_flags		88668	1					
ANR	89117	Identifier	ZEND_ACC_PUBLIC		88668	1					
ANR	89118	IfStatement	if ( this_ptr && Z_TYPE_P ( this_ptr ) == IS_OBJECT && ( closure -> func . common . fn_flags & ZEND_ACC_STATIC ) == 0 )		88668	1					
ANR	89119	Condition	this_ptr && Z_TYPE_P ( this_ptr ) == IS_OBJECT && ( closure -> func . common . fn_flags & ZEND_ACC_STATIC ) == 0	614:6:21397:21497	88668	0	True				
ANR	89120	AndExpression	this_ptr && Z_TYPE_P ( this_ptr ) == IS_OBJECT && ( closure -> func . common . fn_flags & ZEND_ACC_STATIC ) == 0		88668	0		&&			
ANR	89121	Identifier	this_ptr		88668	0					
ANR	89122	AndExpression	Z_TYPE_P ( this_ptr ) == IS_OBJECT && ( closure -> func . common . fn_flags & ZEND_ACC_STATIC ) == 0		88668	1		&&			
ANR	89123	EqualityExpression	Z_TYPE_P ( this_ptr ) == IS_OBJECT		88668	0		==			
ANR	89124	CallExpression	Z_TYPE_P ( this_ptr )		88668	0					
ANR	89125	Callee	Z_TYPE_P		88668	0					
ANR	89126	Identifier	Z_TYPE_P		88668	0					
ANR	89127	ArgumentList	this_ptr		88668	1					
ANR	89128	Argument	this_ptr		88668	0					
ANR	89129	Identifier	this_ptr		88668	0					
ANR	89130	Identifier	IS_OBJECT		88668	1					
ANR	89131	EqualityExpression	( closure -> func . common . fn_flags & ZEND_ACC_STATIC ) == 0		88668	1		==			
ANR	89132	BitAndExpression	closure -> func . common . fn_flags & ZEND_ACC_STATIC		88668	0		&			
ANR	89133	MemberAccess	closure -> func . common . fn_flags		88668	0					
ANR	89134	MemberAccess	closure -> func . common		88668	0					
ANR	89135	PtrMemberAccess	closure -> func		88668	0					
ANR	89136	Identifier	closure		88668	0					
ANR	89137	Identifier	func		88668	1					
ANR	89138	Identifier	common		88668	1					
ANR	89139	Identifier	fn_flags		88668	1					
ANR	89140	Identifier	ZEND_ACC_STATIC		88668	1					
ANR	89141	PrimaryExpression	0		88668	1					
ANR	89142	CompoundStatement		60:109:2666:2666	88668	1					
ANR	89143	ExpressionStatement	"ZVAL_COPY ( & closure -> this_ptr , this_ptr )"	615:3:21505:21544	88668	0	True				
ANR	89144	CallExpression	"ZVAL_COPY ( & closure -> this_ptr , this_ptr )"		88668	0					
ANR	89145	Callee	ZVAL_COPY		88668	0					
ANR	89146	Identifier	ZVAL_COPY		88668	0					
ANR	89147	ArgumentList	& closure -> this_ptr		88668	1					
ANR	89148	Argument	& closure -> this_ptr		88668	0					
ANR	89149	UnaryOperationExpression	& closure -> this_ptr		88668	0					
ANR	89150	UnaryOperator	&		88668	0					
ANR	89151	PtrMemberAccess	closure -> this_ptr		88668	1					
ANR	89152	Identifier	closure		88668	0					
ANR	89153	Identifier	this_ptr		88668	1					
ANR	89154	Argument	this_ptr		88668	1					
ANR	89155	Identifier	this_ptr		88668	0					
ANR	89156	ReturnType	ZEND_API void		88668	1					
ANR	89157	Identifier	zend_create_closure		88668	2					
ANR	89158	ParameterList	"zval * res , zend_function * func , zend_class_entry * scope , zend_class_entry * called_scope , zval * this_ptr"		88668	3					
ANR	89159	Parameter	zval * res	554:34:18718:18726	88668	0	True				
ANR	89160	ParameterType	zval *		88668	0					
ANR	89161	Identifier	res		88668	1					
ANR	89162	Parameter	zend_function * func	554:45:18729:18747	88668	1	True				
ANR	89163	ParameterType	zend_function *		88668	0					
ANR	89164	Identifier	func		88668	1					
ANR	89165	Parameter	zend_class_entry * scope	554:66:18750:18772	88668	2	True				
ANR	89166	ParameterType	zend_class_entry *		88668	0					
ANR	89167	Identifier	scope		88668	1					
ANR	89168	Parameter	zend_class_entry * called_scope	554:91:18775:18804	88668	3	True				
ANR	89169	ParameterType	zend_class_entry *		88668	0					
ANR	89170	Identifier	called_scope		88668	1					
ANR	89171	Parameter	zval * this_ptr	554:123:18807:18820	88668	4	True				
ANR	89172	ParameterType	zval *		88668	0					
ANR	89173	Identifier	this_ptr		88668	1					
ANR	89174	CFGEntryNode	ENTRY		88668		True				
ANR	89175	CFGExitNode	EXIT		88668		True				
ANR	89176	Symbol	zend_ce_closure		88668						
ANR	89177	Symbol	nested -> orig_internal_handler		88668						
ANR	89178	Symbol	called_scope		88668						
ANR	89179	Symbol	XtOffsetOf		88668						
ANR	89180	Symbol	arena		88668						
ANR	89181	Symbol	func -> op_array		88668						
ANR	89182	Symbol	* closure -> func . op_array		88668						
ANR	89183	Symbol	nested		88668						
ANR	89184	Symbol	& CG		88668						
ANR	89185	Symbol	func -> common		88668						
ANR	89186	Symbol	ZEND_USER_FUNCTION		88668						
ANR	89187	Symbol	func -> op_array . run_time_cache		88668						
ANR	89188	Symbol	static_variables		88668						
ANR	89189	Symbol	func -> op_array . cache_size		88668						
ANR	89190	Symbol	nested -> std		88668						
ANR	89191	Symbol	closure		88668						
ANR	89192	Symbol	IS_UNDEF		88668						
ANR	89193	Symbol	* nested		88668						
ANR	89194	Symbol	res		88668						
ANR	89195	Symbol	NULL		88668						
ANR	89196	Symbol	zend_arena_alloc		88668						
ANR	89197	Symbol	closure -> func . op_array . run_time_cache		88668						
ANR	89198	Symbol	closure -> func . common . fn_flags		88668						
ANR	89199	Symbol	ZVAL_PTR_DTOR		88668						
ANR	89200	Symbol	closure -> func . op_array . static_variables		88668						
ANR	89201	Symbol	zend_closure_internal_handler		88668						
ANR	89202	Symbol	& closure -> this_ptr		88668						
ANR	89203	Symbol	closure -> func . common . scope		88668						
ANR	89204	Symbol	* closure -> func		88668						
ANR	89205	Symbol	* closure		88668						
ANR	89206	Symbol	closure -> called_scope		88668						
ANR	89207	Symbol	Z_OBJ_P		88668						
ANR	89208	Symbol	ZEND_ACC_PUBLIC		88668						
ANR	89209	Symbol	UNEXPECTED		88668						
ANR	89210	Symbol	zval_copy_static_var		88668						
ANR	89211	Symbol	func -> common . scope		88668						
ANR	89212	Symbol	scope		88668						
ANR	89213	Symbol	closure -> func . common . prototype		88668						
ANR	89214	Symbol	closure -> orig_internal_handler		88668						
ANR	89215	Symbol	ZEND_ACC_STATIC		88668						
ANR	89216	Symbol	func -> type		88668						
ANR	89217	Symbol	nested -> std . ce		88668						
ANR	89218	Symbol	* func		88668						
ANR	89219	Symbol	zend_hash_num_elements		88668						
ANR	89220	Symbol	& closure -> func		88668						
ANR	89221	Symbol	closure -> func . internal_function		88668						
ANR	89222	Symbol	Z_TYPE_P		88668						
ANR	89223	Symbol	closure -> func		88668						
ANR	89224	Symbol	ZEND_ACC_CLOSURE		88668						
ANR	89225	Symbol	this_ptr		88668						
ANR	89226	Symbol	func		88668						
ANR	89227	Symbol	closure -> func . op_array		88668						
ANR	89228	Symbol	* * closure		88668						
ANR	89229	Symbol	* closure -> func . op_array . refcount		88668						
ANR	89230	Symbol	closure -> func . internal_function . handler		88668						
ANR	89231	Symbol	closure -> func . common		88668						
ANR	89232	Symbol	IS_OBJECT		88668						
ANR	89233	Symbol	closure -> func . op_array . refcount		88668						
ANR	89234	Symbol	zend_closure		88668						
ANR	89235	Function	zend_create_fake_closure	621:0:21566:21910							
ANR	89236	FunctionDef	"zend_create_fake_closure (zval * res , zend_function * func , zend_class_entry * scope , zend_class_entry * called_scope , zval * this_ptr)"		89235	0					
ANR	89237	CompoundStatement		622:0:21720:21910	89235	0					
ANR	89238	IdentifierDeclStatement	zend_closure * closure ;	623:1:21723:21744	89235	0	True				
ANR	89239	IdentifierDecl	* closure		89235	0					
ANR	89240	IdentifierDeclType	zend_closure *		89235	0					
ANR	89241	Identifier	closure		89235	1					
ANR	89242	ExpressionStatement	"zend_create_closure ( res , func , scope , called_scope , this_ptr )"	625:1:21748:21809	89235	1	True				
ANR	89243	CallExpression	"zend_create_closure ( res , func , scope , called_scope , this_ptr )"		89235	0					
ANR	89244	Callee	zend_create_closure		89235	0					
ANR	89245	Identifier	zend_create_closure		89235	0					
ANR	89246	ArgumentList	res		89235	1					
ANR	89247	Argument	res		89235	0					
ANR	89248	Identifier	res		89235	0					
ANR	89249	Argument	func		89235	1					
ANR	89250	Identifier	func		89235	0					
ANR	89251	Argument	scope		89235	2					
ANR	89252	Identifier	scope		89235	0					
ANR	89253	Argument	called_scope		89235	3					
ANR	89254	Identifier	called_scope		89235	0					
ANR	89255	Argument	this_ptr		89235	4					
ANR	89256	Identifier	this_ptr		89235	0					
ANR	89257	ExpressionStatement	closure = ( zend_closure * ) Z_OBJ_P ( res )	627:1:21813:21851	89235	2	True				
ANR	89258	AssignmentExpression	closure = ( zend_closure * ) Z_OBJ_P ( res )		89235	0		=			
ANR	89259	Identifier	closure		89235	0					
ANR	89260	CastExpression	( zend_closure * ) Z_OBJ_P ( res )		89235	1					
ANR	89261	CastTarget	zend_closure *		89235	0					
ANR	89262	CallExpression	Z_OBJ_P ( res )		89235	1					
ANR	89263	Callee	Z_OBJ_P		89235	0					
ANR	89264	Identifier	Z_OBJ_P		89235	0					
ANR	89265	ArgumentList	res		89235	1					
ANR	89266	Argument	res		89235	0					
ANR	89267	Identifier	res		89235	0					
ANR	89268	ExpressionStatement	closure -> func . common . fn_flags |= ZEND_ACC_FAKE_CLOSURE	628:1:21854:21908	89235	3	True				
ANR	89269	AssignmentExpression	closure -> func . common . fn_flags |= ZEND_ACC_FAKE_CLOSURE		89235	0		|=			
ANR	89270	MemberAccess	closure -> func . common . fn_flags		89235	0					
ANR	89271	MemberAccess	closure -> func . common		89235	0					
ANR	89272	PtrMemberAccess	closure -> func		89235	0					
ANR	89273	Identifier	closure		89235	0					
ANR	89274	Identifier	func		89235	1					
ANR	89275	Identifier	common		89235	1					
ANR	89276	Identifier	fn_flags		89235	1					
ANR	89277	Identifier	ZEND_ACC_FAKE_CLOSURE		89235	1					
ANR	89278	ReturnType	ZEND_API void		89235	1					
ANR	89279	Identifier	zend_create_fake_closure		89235	2					
ANR	89280	ParameterList	"zval * res , zend_function * func , zend_class_entry * scope , zend_class_entry * called_scope , zval * this_ptr"		89235	3					
ANR	89281	Parameter	zval * res	621:39:21605:21613	89235	0	True				
ANR	89282	ParameterType	zval *		89235	0					
ANR	89283	Identifier	res		89235	1					
ANR	89284	Parameter	zend_function * func	621:50:21616:21634	89235	1	True				
ANR	89285	ParameterType	zend_function *		89235	0					
ANR	89286	Identifier	func		89235	1					
ANR	89287	Parameter	zend_class_entry * scope	621:71:21637:21659	89235	2	True				
ANR	89288	ParameterType	zend_class_entry *		89235	0					
ANR	89289	Identifier	scope		89235	1					
ANR	89290	Parameter	zend_class_entry * called_scope	621:96:21662:21691	89235	3	True				
ANR	89291	ParameterType	zend_class_entry *		89235	0					
ANR	89292	Identifier	called_scope		89235	1					
ANR	89293	Parameter	zval * this_ptr	621:128:21694:21707	89235	4	True				
ANR	89294	ParameterType	zval *		89235	0					
ANR	89295	Identifier	this_ptr		89235	1					
ANR	89296	CFGEntryNode	ENTRY		89235		True				
ANR	89297	CFGExitNode	EXIT		89235		True				
ANR	89298	Symbol	res		89235						
ANR	89299	Symbol	closure -> func		89235						
ANR	89300	Symbol	this_ptr		89235						
ANR	89301	Symbol	* closure		89235						
ANR	89302	Symbol	func		89235						
ANR	89303	Symbol	Z_OBJ_P		89235						
ANR	89304	Symbol	scope		89235						
ANR	89305	Symbol	called_scope		89235						
ANR	89306	Symbol	closure -> func . common		89235						
ANR	89307	Symbol	ZEND_ACC_FAKE_CLOSURE		89235						
ANR	89308	Symbol	closure		89235						
ANR	89309	Symbol	closure -> func . common . fn_flags		89235						
