command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1125168	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_libmbfl_tests_conv_encoding.tests_gen_exp.c								
ANR	1125169	ClassDef	mappings_entry	7:0:99:161							
ANR	1125170	DeclStmt									
ANR	1125171	Decl							int	int	cp_uni
ANR	1125172	DeclStmt									
ANR	1125173	Decl							int	int	n
ANR	1125174	DeclStmt									
ANR	1125175	Decl							int	int [ 16 ]	cp_932
ANR	1125176	ClassDef	mappings	13:0:165:243							
ANR	1125177	DeclStmt									
ANR	1125178	Decl							size_t	size_t	n
ANR	1125179	DeclStmt									
ANR	1125180	Decl							size_t	size_t	nalloc
ANR	1125181	DeclStmt									
ANR	1125182	Decl							struct mappings_entry	struct mappings_entry *	entries
ANR	1125183	Function	mappings_init	19:0:247:347							
ANR	1125184	FunctionDef	mappings_init (struct mappings * map)		1125183	0					
ANR	1125185	CompoundStatement		20:0:295:347	1125183	0					
ANR	1125186	ExpressionStatement	map -> n = 0	21:1:298:308	1125183	0	True				
ANR	1125187	AssignmentExpression	map -> n = 0		1125183	0		=			
ANR	1125188	PtrMemberAccess	map -> n		1125183	0					
ANR	1125189	Identifier	map		1125183	0					
ANR	1125190	Identifier	n		1125183	1					
ANR	1125191	PrimaryExpression	0		1125183	1					
ANR	1125192	ExpressionStatement	map -> nalloc = 0	22:1:311:326	1125183	1	True				
ANR	1125193	AssignmentExpression	map -> nalloc = 0		1125183	0		=			
ANR	1125194	PtrMemberAccess	map -> nalloc		1125183	0					
ANR	1125195	Identifier	map		1125183	0					
ANR	1125196	Identifier	nalloc		1125183	1					
ANR	1125197	PrimaryExpression	0		1125183	1					
ANR	1125198	ExpressionStatement	map -> entries = 0	23:1:329:345	1125183	2	True				
ANR	1125199	AssignmentExpression	map -> entries = 0		1125183	0		=			
ANR	1125200	PtrMemberAccess	map -> entries		1125183	0					
ANR	1125201	Identifier	map		1125183	0					
ANR	1125202	Identifier	entries		1125183	1					
ANR	1125203	PrimaryExpression	0		1125183	1					
ANR	1125204	ReturnType	static void		1125183	1					
ANR	1125205	Identifier	mappings_init		1125183	2					
ANR	1125206	ParameterList	struct mappings * map		1125183	3					
ANR	1125207	Parameter	struct mappings * map	19:26:273:292	1125183	0	True				
ANR	1125208	ParameterType	struct mappings *		1125183	0					
ANR	1125209	Identifier	map		1125183	1					
ANR	1125210	CFGEntryNode	ENTRY		1125183		True				
ANR	1125211	CFGExitNode	EXIT		1125183		True				
ANR	1125212	Symbol	map -> n		1125183						
ANR	1125213	Symbol	map -> entries		1125183						
ANR	1125214	Symbol	* map		1125183						
ANR	1125215	Symbol	map		1125183						
ANR	1125216	Symbol	map -> nalloc		1125183						
ANR	1125217	Function	mappings_destroy	26:0:350:444							
ANR	1125218	FunctionDef	mappings_destroy (struct mappings * map)		1125217	0					
ANR	1125219	CompoundStatement		27:0:401:444	1125217	0					
ANR	1125220	IfStatement	if ( map -> entries )		1125217	0					
ANR	1125221	Condition	map -> entries	28:5:408:419	1125217	0	True				
ANR	1125222	PtrMemberAccess	map -> entries		1125217	0					
ANR	1125223	Identifier	map		1125217	0					
ANR	1125224	Identifier	entries		1125217	1					
ANR	1125225	ExpressionStatement	free ( map -> entries )	29:2:424:442	1125217	1	True				
ANR	1125226	CallExpression	free ( map -> entries )		1125217	0					
ANR	1125227	Callee	free		1125217	0					
ANR	1125228	Identifier	free		1125217	0					
ANR	1125229	ArgumentList	map -> entries		1125217	1					
ANR	1125230	Argument	map -> entries		1125217	0					
ANR	1125231	PtrMemberAccess	map -> entries		1125217	0					
ANR	1125232	Identifier	map		1125217	0					
ANR	1125233	Identifier	entries		1125217	1					
ANR	1125234	ReturnType	static void		1125217	1					
ANR	1125235	Identifier	mappings_destroy		1125217	2					
ANR	1125236	ParameterList	struct mappings * map		1125217	3					
ANR	1125237	Parameter	struct mappings * map	26:29:379:398	1125217	0	True				
ANR	1125238	ParameterType	struct mappings *		1125217	0					
ANR	1125239	Identifier	map		1125217	1					
ANR	1125240	CFGEntryNode	ENTRY		1125217		True				
ANR	1125241	CFGExitNode	EXIT		1125217		True				
ANR	1125242	Symbol	map -> entries		1125217						
ANR	1125243	Symbol	* map		1125217						
ANR	1125244	Symbol	map		1125217						
ANR	1125245	Function	mappings_grow	32:0:447:881							
ANR	1125246	FunctionDef	mappings_grow (struct mappings * map)		1125245	0					
ANR	1125247	CompoundStatement		33:0:494:881	1125245	0					
ANR	1125248	IfStatement	if ( map -> n >= map -> nalloc )		1125245	0					
ANR	1125249	Condition	map -> n >= map -> nalloc	34:5:501:521	1125245	0	True				
ANR	1125250	RelationalExpression	map -> n >= map -> nalloc		1125245	0		>=			
ANR	1125251	PtrMemberAccess	map -> n		1125245	0					
ANR	1125252	Identifier	map		1125245	0					
ANR	1125253	Identifier	n		1125245	1					
ANR	1125254	PtrMemberAccess	map -> nalloc		1125245	1					
ANR	1125255	Identifier	map		1125245	0					
ANR	1125256	Identifier	nalloc		1125245	1					
ANR	1125257	CompoundStatement		4:2:71:101	1125245	1					
ANR	1125258	IdentifierDeclStatement	struct mappings_entry * new_entries ;	35:2:528:562	1125245	0	True				
ANR	1125259	IdentifierDecl	* new_entries		1125245	0					
ANR	1125260	IdentifierDeclType	struct mappings_entry *		1125245	0					
ANR	1125261	Identifier	new_entries		1125245	1					
ANR	1125262	IdentifierDeclStatement	"size_t n = map -> nalloc << 1 , a ;"	36:2:566:596	1125245	1	True				
ANR	1125263	IdentifierDecl	n = map -> nalloc << 1		1125245	0					
ANR	1125264	IdentifierDeclType	size_t		1125245	0					
ANR	1125265	Identifier	n		1125245	1					
ANR	1125266	AssignmentExpression	n = map -> nalloc << 1		1125245	2		=			
ANR	1125267	Identifier	n		1125245	0					
ANR	1125268	ShiftExpression	map -> nalloc << 1		1125245	1		<<			
ANR	1125269	PtrMemberAccess	map -> nalloc		1125245	0					
ANR	1125270	Identifier	map		1125245	0					
ANR	1125271	Identifier	nalloc		1125245	1					
ANR	1125272	PrimaryExpression	1		1125245	1					
ANR	1125273	IdentifierDecl	a		1125245	1					
ANR	1125274	IdentifierDeclType	size_t		1125245	0					
ANR	1125275	Identifier	a		1125245	1					
ANR	1125276	IfStatement	if ( n == 0 )		1125245	2					
ANR	1125277	Condition	n == 0	37:6:604:609	1125245	0	True				
ANR	1125278	EqualityExpression	n == 0		1125245	0		==			
ANR	1125279	Identifier	n		1125245	0					
ANR	1125280	PrimaryExpression	0		1125245	1					
ANR	1125281	ExpressionStatement	n = 1	38:3:615:620	1125245	1	True				
ANR	1125282	AssignmentExpression	n = 1		1125245	0		=			
ANR	1125283	Identifier	n		1125245	0					
ANR	1125284	PrimaryExpression	1		1125245	1					
ANR	1125285	ElseStatement	else		1125245	0					
ANR	1125286	IfStatement	if ( n <= map -> n )		1125245	0					
ANR	1125287	Condition	n <= map -> n	39:11:633:643	1125245	0	True				
ANR	1125288	RelationalExpression	n <= map -> n		1125245	0		<=			
ANR	1125289	Identifier	n		1125245	0					
ANR	1125290	PtrMemberAccess	map -> n		1125245	1					
ANR	1125291	Identifier	map		1125245	0					
ANR	1125292	Identifier	n		1125245	1					
ANR	1125293	ReturnStatement	return 2 ;	40:3:649:657	1125245	1	True				
ANR	1125294	PrimaryExpression	2		1125245	0					
ANR	1125295	ExpressionStatement	a = sizeof ( * map -> entries ) * n	41:2:661:690	1125245	3	True				
ANR	1125296	AssignmentExpression	a = sizeof ( * map -> entries ) * n		1125245	0		=			
ANR	1125297	Identifier	a		1125245	0					
ANR	1125298	MultiplicativeExpression	sizeof ( * map -> entries ) * n		1125245	1		*			
ANR	1125299	SizeofExpression	sizeof ( * map -> entries )		1125245	0					
ANR	1125300	Sizeof	sizeof		1125245	0					
ANR	1125301	UnaryOperationExpression	* map -> entries		1125245	1					
ANR	1125302	UnaryOperator	*		1125245	0					
ANR	1125303	PtrMemberAccess	map -> entries		1125245	1					
ANR	1125304	Identifier	map		1125245	0					
ANR	1125305	Identifier	entries		1125245	1					
ANR	1125306	Identifier	n		1125245	1					
ANR	1125307	IfStatement	if ( a / n != sizeof ( * map -> entries ) )		1125245	4					
ANR	1125308	Condition	a / n != sizeof ( * map -> entries )	42:6:698:727	1125245	0	True				
ANR	1125309	EqualityExpression	a / n != sizeof ( * map -> entries )		1125245	0		!=			
ANR	1125310	MultiplicativeExpression	a / n		1125245	0		/			
ANR	1125311	Identifier	a		1125245	0					
ANR	1125312	Identifier	n		1125245	1					
ANR	1125313	SizeofExpression	sizeof ( * map -> entries )		1125245	1					
ANR	1125314	Sizeof	sizeof		1125245	0					
ANR	1125315	UnaryOperationExpression	* map -> entries		1125245	1					
ANR	1125316	UnaryOperator	*		1125245	0					
ANR	1125317	PtrMemberAccess	map -> entries		1125245	1					
ANR	1125318	Identifier	map		1125245	0					
ANR	1125319	Identifier	entries		1125245	1					
ANR	1125320	ReturnStatement	return 2 ;	43:3:733:741	1125245	1	True				
ANR	1125321	PrimaryExpression	2		1125245	0					
ANR	1125322	ExpressionStatement	"new_entries = realloc ( map -> entries , a )"	44:2:745:783	1125245	5	True				
ANR	1125323	AssignmentExpression	"new_entries = realloc ( map -> entries , a )"		1125245	0		=			
ANR	1125324	Identifier	new_entries		1125245	0					
ANR	1125325	CallExpression	"realloc ( map -> entries , a )"		1125245	1					
ANR	1125326	Callee	realloc		1125245	0					
ANR	1125327	Identifier	realloc		1125245	0					
ANR	1125328	ArgumentList	map -> entries		1125245	1					
ANR	1125329	Argument	map -> entries		1125245	0					
ANR	1125330	PtrMemberAccess	map -> entries		1125245	0					
ANR	1125331	Identifier	map		1125245	0					
ANR	1125332	Identifier	entries		1125245	1					
ANR	1125333	Argument	a		1125245	1					
ANR	1125334	Identifier	a		1125245	0					
ANR	1125335	IfStatement	if ( ! new_entries )		1125245	6					
ANR	1125336	Condition	! new_entries	45:6:791:802	1125245	0	True				
ANR	1125337	UnaryOperationExpression	! new_entries		1125245	0					
ANR	1125338	UnaryOperator	!		1125245	0					
ANR	1125339	Identifier	new_entries		1125245	1					
ANR	1125340	ReturnStatement	return 2 ;	46:3:808:816	1125245	1	True				
ANR	1125341	PrimaryExpression	2		1125245	0					
ANR	1125342	ExpressionStatement	map -> entries = new_entries	47:2:820:846	1125245	7	True				
ANR	1125343	AssignmentExpression	map -> entries = new_entries		1125245	0		=			
ANR	1125344	PtrMemberAccess	map -> entries		1125245	0					
ANR	1125345	Identifier	map		1125245	0					
ANR	1125346	Identifier	entries		1125245	1					
ANR	1125347	Identifier	new_entries		1125245	1					
ANR	1125348	ExpressionStatement	map -> nalloc = n	48:2:850:865	1125245	8	True				
ANR	1125349	AssignmentExpression	map -> nalloc = n		1125245	0		=			
ANR	1125350	PtrMemberAccess	map -> nalloc		1125245	0					
ANR	1125351	Identifier	map		1125245	0					
ANR	1125352	Identifier	nalloc		1125245	1					
ANR	1125353	Identifier	n		1125245	1					
ANR	1125354	ReturnStatement	return 0 ;	50:1:871:879	1125245	1	True				
ANR	1125355	PrimaryExpression	0		1125245	0					
ANR	1125356	ReturnType	static int		1125245	1					
ANR	1125357	Identifier	mappings_grow		1125245	2					
ANR	1125358	ParameterList	struct mappings * map		1125245	3					
ANR	1125359	Parameter	struct mappings * map	32:25:472:491	1125245	0	True				
ANR	1125360	ParameterType	struct mappings *		1125245	0					
ANR	1125361	Identifier	map		1125245	1					
ANR	1125362	CFGEntryNode	ENTRY		1125245		True				
ANR	1125363	CFGExitNode	EXIT		1125245		True				
ANR	1125364	Symbol	map -> n		1125245						
ANR	1125365	Symbol	* * map		1125245						
ANR	1125366	Symbol	new_entries		1125245						
ANR	1125367	Symbol	a		1125245						
ANR	1125368	Symbol	map -> entries		1125245						
ANR	1125369	Symbol	* map		1125245						
ANR	1125370	Symbol	* map -> entries		1125245						
ANR	1125371	Symbol	realloc		1125245						
ANR	1125372	Symbol	map		1125245						
ANR	1125373	Symbol	map -> nalloc		1125245						
ANR	1125374	Symbol	n		1125245						
ANR	1125375	Function	mappings_add	53:0:884:2121							
ANR	1125376	FunctionDef	"mappings_add (struct mappings * map , int cp_uni , int cp_932)"		1125375	0					
ANR	1125377	CompoundStatement		54:0:954:2121	1125375	0					
ANR	1125378	IdentifierDeclStatement	size_t i ;	55:1:957:965	1125375	0	True				
ANR	1125379	IdentifierDecl	i		1125375	0					
ANR	1125380	IdentifierDeclType	size_t		1125375	0					
ANR	1125381	Identifier	i		1125375	1					
ANR	1125382	IdentifierDeclStatement	"size_t s = 0 , e = map -> n ;"	56:1:968:992	1125375	1	True				
ANR	1125383	IdentifierDecl	s = 0		1125375	0					
ANR	1125384	IdentifierDeclType	size_t		1125375	0					
ANR	1125385	Identifier	s		1125375	1					
ANR	1125386	AssignmentExpression	s = 0		1125375	2		=			
ANR	1125387	Identifier	s		1125375	0					
ANR	1125388	PrimaryExpression	0		1125375	1					
ANR	1125389	IdentifierDecl	e = map -> n		1125375	1					
ANR	1125390	IdentifierDeclType	size_t		1125375	0					
ANR	1125391	Identifier	e		1125375	1					
ANR	1125392	AssignmentExpression	e = map -> n		1125375	2		=			
ANR	1125393	Identifier	e		1125375	0					
ANR	1125394	PtrMemberAccess	map -> n		1125375	1					
ANR	1125395	Identifier	map		1125375	0					
ANR	1125396	Identifier	n		1125375	1					
ANR	1125397	IdentifierDeclStatement	struct mappings_entry * entry ;	57:1:995:1023	1125375	2	True				
ANR	1125398	IdentifierDecl	* entry		1125375	0					
ANR	1125399	IdentifierDeclType	struct mappings_entry *		1125375	0					
ANR	1125400	Identifier	entry		1125375	1					
ANR	1125401	ForStatement	for ( ; ; )		1125375	3					
ANR	1125402	CompoundStatement		6:10:81:81	1125375	0					
ANR	1125403	ExpressionStatement	i = ( s + e ) / 2	60:2:1040:1055	1125375	0	True				
ANR	1125404	AssignmentExpression	i = ( s + e ) / 2		1125375	0		=			
ANR	1125405	Identifier	i		1125375	0					
ANR	1125406	MultiplicativeExpression	( s + e ) / 2		1125375	1		/			
ANR	1125407	AdditiveExpression	s + e		1125375	0		+			
ANR	1125408	Identifier	s		1125375	0					
ANR	1125409	Identifier	e		1125375	1					
ANR	1125410	PrimaryExpression	2		1125375	1					
ANR	1125411	ExpressionStatement	entry = & map -> entries [ i ]	61:2:1059:1083	1125375	1	True				
ANR	1125412	AssignmentExpression	entry = & map -> entries [ i ]		1125375	0		=			
ANR	1125413	Identifier	entry		1125375	0					
ANR	1125414	UnaryOperationExpression	& map -> entries [ i ]		1125375	1					
ANR	1125415	UnaryOperator	&		1125375	0					
ANR	1125416	ArrayIndexing	map -> entries [ i ]		1125375	1					
ANR	1125417	PtrMemberAccess	map -> entries		1125375	0					
ANR	1125418	Identifier	map		1125375	0					
ANR	1125419	Identifier	entries		1125375	1					
ANR	1125420	Identifier	i		1125375	1					
ANR	1125421	IfStatement	if ( e == i || entry -> cp_uni > cp_uni )		1125375	2					
ANR	1125422	Condition	e == i || entry -> cp_uni > cp_uni	62:6:1091:1122	1125375	0	True				
ANR	1125423	OrExpression	e == i || entry -> cp_uni > cp_uni		1125375	0		||			
ANR	1125424	EqualityExpression	e == i		1125375	0		==			
ANR	1125425	Identifier	e		1125375	0					
ANR	1125426	Identifier	i		1125375	1					
ANR	1125427	RelationalExpression	entry -> cp_uni > cp_uni		1125375	1		>			
ANR	1125428	PtrMemberAccess	entry -> cp_uni		1125375	0					
ANR	1125429	Identifier	entry		1125375	0					
ANR	1125430	Identifier	cp_uni		1125375	1					
ANR	1125431	Identifier	cp_uni		1125375	1					
ANR	1125432	CompoundStatement		9:40:170:170	1125375	1					
ANR	1125433	IfStatement	if ( e == i )		1125375	0					
ANR	1125434	Condition	e == i	63:7:1134:1139	1125375	0	True				
ANR	1125435	EqualityExpression	e == i		1125375	0		==			
ANR	1125436	Identifier	e		1125375	0					
ANR	1125437	Identifier	i		1125375	1					
ANR	1125438	CompoundStatement		11:4:193:219	1125375	1					
ANR	1125439	IdentifierDeclStatement	int r = mappings_grow ( map ) ;	64:4:1148:1174	1125375	0	True				
ANR	1125440	IdentifierDecl	r = mappings_grow ( map )		1125375	0					
ANR	1125441	IdentifierDeclType	int		1125375	0					
ANR	1125442	Identifier	r		1125375	1					
ANR	1125443	AssignmentExpression	r = mappings_grow ( map )		1125375	2		=			
ANR	1125444	Identifier	r		1125375	0					
ANR	1125445	CallExpression	mappings_grow ( map )		1125375	1					
ANR	1125446	Callee	mappings_grow		1125375	0					
ANR	1125447	Identifier	mappings_grow		1125375	0					
ANR	1125448	ArgumentList	map		1125375	1					
ANR	1125449	Argument	map		1125375	0					
ANR	1125450	Identifier	map		1125375	0					
ANR	1125451	IfStatement	if ( r )		1125375	1					
ANR	1125452	Condition	r	65:8:1184:1184	1125375	0	True				
ANR	1125453	Identifier	r		1125375	0					
ANR	1125454	ReturnStatement	return r ;	66:5:1192:1200	1125375	1	True				
ANR	1125455	Identifier	r		1125375	0					
ANR	1125456	IfStatement	if ( map -> n > i )		1125375	2					
ANR	1125457	Condition	map -> n > i	67:8:1210:1219	1125375	0	True				
ANR	1125458	RelationalExpression	map -> n > i		1125375	0		>			
ANR	1125459	PtrMemberAccess	map -> n		1125375	0					
ANR	1125460	Identifier	map		1125375	0					
ANR	1125461	Identifier	n		1125375	1					
ANR	1125462	Identifier	i		1125375	1					
ANR	1125463	CompoundStatement		15:5:274:326	1125375	1					
ANR	1125464	IdentifierDeclStatement	"size_t n = map -> n - i , a = sizeof ( * map -> entries ) * n ;"	68:5:1229:1281	1125375	0	True				
ANR	1125465	IdentifierDecl	n = map -> n - i		1125375	0					
ANR	1125466	IdentifierDeclType	size_t		1125375	0					
ANR	1125467	Identifier	n		1125375	1					
ANR	1125468	AssignmentExpression	n = map -> n - i		1125375	2		=			
ANR	1125469	Identifier	n		1125375	0					
ANR	1125470	AdditiveExpression	map -> n - i		1125375	1		-			
ANR	1125471	PtrMemberAccess	map -> n		1125375	0					
ANR	1125472	Identifier	map		1125375	0					
ANR	1125473	Identifier	n		1125375	1					
ANR	1125474	Identifier	i		1125375	1					
ANR	1125475	IdentifierDecl	a = sizeof ( * map -> entries ) * n		1125375	1					
ANR	1125476	IdentifierDeclType	size_t		1125375	0					
ANR	1125477	Identifier	a		1125375	1					
ANR	1125478	AssignmentExpression	a = sizeof ( * map -> entries ) * n		1125375	2		=			
ANR	1125479	Identifier	a		1125375	0					
ANR	1125480	MultiplicativeExpression	sizeof ( * map -> entries ) * n		1125375	1		*			
ANR	1125481	SizeofExpression	sizeof ( * map -> entries )		1125375	0					
ANR	1125482	Sizeof	sizeof		1125375	0					
ANR	1125483	UnaryOperationExpression	* map -> entries		1125375	1					
ANR	1125484	UnaryOperator	*		1125375	0					
ANR	1125485	PtrMemberAccess	map -> entries		1125375	1					
ANR	1125486	Identifier	map		1125375	0					
ANR	1125487	Identifier	entries		1125375	1					
ANR	1125488	Identifier	n		1125375	1					
ANR	1125489	IfStatement	if ( a / n != sizeof ( * map -> entries ) )		1125375	1					
ANR	1125490	Condition	a / n != sizeof ( * map -> entries )	69:9:1292:1321	1125375	0	True				
ANR	1125491	EqualityExpression	a / n != sizeof ( * map -> entries )		1125375	0		!=			
ANR	1125492	MultiplicativeExpression	a / n		1125375	0		/			
ANR	1125493	Identifier	a		1125375	0					
ANR	1125494	Identifier	n		1125375	1					
ANR	1125495	SizeofExpression	sizeof ( * map -> entries )		1125375	1					
ANR	1125496	Sizeof	sizeof		1125375	0					
ANR	1125497	UnaryOperationExpression	* map -> entries		1125375	1					
ANR	1125498	UnaryOperator	*		1125375	0					
ANR	1125499	PtrMemberAccess	map -> entries		1125375	1					
ANR	1125500	Identifier	map		1125375	0					
ANR	1125501	Identifier	entries		1125375	1					
ANR	1125502	ReturnStatement	return 2 ;	70:6:1330:1338	1125375	1	True				
ANR	1125503	PrimaryExpression	2		1125375	0					
ANR	1125504	ExpressionStatement	"memmove ( & map -> entries [ i + 1 ] , & map -> entries [ i ] , a )"	71:5:1345:1395	1125375	2	True				
ANR	1125505	CallExpression	"memmove ( & map -> entries [ i + 1 ] , & map -> entries [ i ] , a )"		1125375	0					
ANR	1125506	Callee	memmove		1125375	0					
ANR	1125507	Identifier	memmove		1125375	0					
ANR	1125508	ArgumentList	& map -> entries [ i + 1 ]		1125375	1					
ANR	1125509	Argument	& map -> entries [ i + 1 ]		1125375	0					
ANR	1125510	UnaryOperationExpression	& map -> entries [ i + 1 ]		1125375	0					
ANR	1125511	UnaryOperator	&		1125375	0					
ANR	1125512	ArrayIndexing	map -> entries [ i + 1 ]		1125375	1					
ANR	1125513	PtrMemberAccess	map -> entries		1125375	0					
ANR	1125514	Identifier	map		1125375	0					
ANR	1125515	Identifier	entries		1125375	1					
ANR	1125516	AdditiveExpression	i + 1		1125375	1		+			
ANR	1125517	Identifier	i		1125375	0					
ANR	1125518	PrimaryExpression	1		1125375	1					
ANR	1125519	Argument	& map -> entries [ i ]		1125375	1					
ANR	1125520	UnaryOperationExpression	& map -> entries [ i ]		1125375	0					
ANR	1125521	UnaryOperator	&		1125375	0					
ANR	1125522	ArrayIndexing	map -> entries [ i ]		1125375	1					
ANR	1125523	PtrMemberAccess	map -> entries		1125375	0					
ANR	1125524	Identifier	map		1125375	0					
ANR	1125525	Identifier	entries		1125375	1					
ANR	1125526	Identifier	i		1125375	1					
ANR	1125527	Argument	a		1125375	2					
ANR	1125528	Identifier	a		1125375	0					
ANR	1125529	ExpressionStatement	++ map -> n	73:4:1407:1415	1125375	3	True				
ANR	1125530	UnaryExpression	++ map -> n		1125375	0					
ANR	1125531	IncDec	++		1125375	0					
ANR	1125532	PtrMemberAccess	map -> n		1125375	1					
ANR	1125533	Identifier	map		1125375	0					
ANR	1125534	Identifier	n		1125375	1					
ANR	1125535	ExpressionStatement	entry = & map -> entries [ i ]	74:4:1421:1445	1125375	4	True				
ANR	1125536	AssignmentExpression	entry = & map -> entries [ i ]		1125375	0		=			
ANR	1125537	Identifier	entry		1125375	0					
ANR	1125538	UnaryOperationExpression	& map -> entries [ i ]		1125375	1					
ANR	1125539	UnaryOperator	&		1125375	0					
ANR	1125540	ArrayIndexing	map -> entries [ i ]		1125375	1					
ANR	1125541	PtrMemberAccess	map -> entries		1125375	0					
ANR	1125542	Identifier	map		1125375	0					
ANR	1125543	Identifier	entries		1125375	1					
ANR	1125544	Identifier	i		1125375	1					
ANR	1125545	ExpressionStatement	entry -> cp_uni = cp_uni	75:4:1451:1473	1125375	5	True				
ANR	1125546	AssignmentExpression	entry -> cp_uni = cp_uni		1125375	0		=			
ANR	1125547	PtrMemberAccess	entry -> cp_uni		1125375	0					
ANR	1125548	Identifier	entry		1125375	0					
ANR	1125549	Identifier	cp_uni		1125375	1					
ANR	1125550	Identifier	cp_uni		1125375	1					
ANR	1125551	ExpressionStatement	entry -> n = 0	76:4:1479:1491	1125375	6	True				
ANR	1125552	AssignmentExpression	entry -> n = 0		1125375	0		=			
ANR	1125553	PtrMemberAccess	entry -> n		1125375	0					
ANR	1125554	Identifier	entry		1125375	0					
ANR	1125555	Identifier	n		1125375	1					
ANR	1125556	PrimaryExpression	0		1125375	1					
ANR	1125557	BreakStatement	break ;	77:4:1497:1502	1125375	7	True				
ANR	1125558	ExpressionStatement	e = i	79:3:1512:1517	1125375	1	True				
ANR	1125559	AssignmentExpression	e = i		1125375	0		=			
ANR	1125560	Identifier	e		1125375	0					
ANR	1125561	Identifier	i		1125375	1					
ANR	1125562	ElseStatement	else		1125375	0					
ANR	1125563	IfStatement	if ( entry -> cp_uni < cp_uni )		1125375	0					
ANR	1125564	Condition	entry -> cp_uni < cp_uni	80:13:1532:1553	1125375	0	True				
ANR	1125565	RelationalExpression	entry -> cp_uni < cp_uni		1125375	0		<			
ANR	1125566	PtrMemberAccess	entry -> cp_uni		1125375	0					
ANR	1125567	Identifier	entry		1125375	0					
ANR	1125568	Identifier	cp_uni		1125375	1					
ANR	1125569	Identifier	cp_uni		1125375	1					
ANR	1125570	CompoundStatement		27:37:601:601	1125375	1					
ANR	1125571	IfStatement	if ( s == i )		1125375	0					
ANR	1125572	Condition	s == i	81:7:1565:1570	1125375	0	True				
ANR	1125573	EqualityExpression	s == i		1125375	0		==			
ANR	1125574	Identifier	s		1125375	0					
ANR	1125575	Identifier	i		1125375	1					
ANR	1125576	CompoundStatement		29:4:624:650	1125375	1					
ANR	1125577	IdentifierDeclStatement	int r = mappings_grow ( map ) ;	82:4:1579:1605	1125375	0	True				
ANR	1125578	IdentifierDecl	r = mappings_grow ( map )		1125375	0					
ANR	1125579	IdentifierDeclType	int		1125375	0					
ANR	1125580	Identifier	r		1125375	1					
ANR	1125581	AssignmentExpression	r = mappings_grow ( map )		1125375	2		=			
ANR	1125582	Identifier	r		1125375	0					
ANR	1125583	CallExpression	mappings_grow ( map )		1125375	1					
ANR	1125584	Callee	mappings_grow		1125375	0					
ANR	1125585	Identifier	mappings_grow		1125375	0					
ANR	1125586	ArgumentList	map		1125375	1					
ANR	1125587	Argument	map		1125375	0					
ANR	1125588	Identifier	map		1125375	0					
ANR	1125589	IfStatement	if ( r )		1125375	1					
ANR	1125590	Condition	r	83:8:1615:1615	1125375	0	True				
ANR	1125591	Identifier	r		1125375	0					
ANR	1125592	ReturnStatement	return r ;	84:5:1623:1631	1125375	1	True				
ANR	1125593	Identifier	r		1125375	0					
ANR	1125594	IfStatement	if ( map -> n > i + 1 )		1125375	2					
ANR	1125595	Condition	map -> n > i + 1	85:8:1641:1654	1125375	0	True				
ANR	1125596	RelationalExpression	map -> n > i + 1		1125375	0		>			
ANR	1125597	PtrMemberAccess	map -> n		1125375	0					
ANR	1125598	Identifier	map		1125375	0					
ANR	1125599	Identifier	n		1125375	1					
ANR	1125600	AdditiveExpression	i + 1		1125375	1		+			
ANR	1125601	Identifier	i		1125375	0					
ANR	1125602	PrimaryExpression	1		1125375	1					
ANR	1125603	CompoundStatement		33:5:709:767	1125375	1					
ANR	1125604	IdentifierDeclStatement	"size_t n = ( map -> n - i - 1 ) , a = sizeof ( * map -> entries ) * n ;"	86:5:1664:1722	1125375	0	True				
ANR	1125605	IdentifierDecl	n = ( map -> n - i - 1 )		1125375	0					
ANR	1125606	IdentifierDeclType	size_t		1125375	0					
ANR	1125607	Identifier	n		1125375	1					
ANR	1125608	AssignmentExpression	n = ( map -> n - i - 1 )		1125375	2		=			
ANR	1125609	Identifier	n		1125375	0					
ANR	1125610	AdditiveExpression	map -> n - i - 1		1125375	1		-			
ANR	1125611	PtrMemberAccess	map -> n		1125375	0					
ANR	1125612	Identifier	map		1125375	0					
ANR	1125613	Identifier	n		1125375	1					
ANR	1125614	AdditiveExpression	i - 1		1125375	1		-			
ANR	1125615	Identifier	i		1125375	0					
ANR	1125616	PrimaryExpression	1		1125375	1					
ANR	1125617	IdentifierDecl	a = sizeof ( * map -> entries ) * n		1125375	1					
ANR	1125618	IdentifierDeclType	size_t		1125375	0					
ANR	1125619	Identifier	a		1125375	1					
ANR	1125620	AssignmentExpression	a = sizeof ( * map -> entries ) * n		1125375	2		=			
ANR	1125621	Identifier	a		1125375	0					
ANR	1125622	MultiplicativeExpression	sizeof ( * map -> entries ) * n		1125375	1		*			
ANR	1125623	SizeofExpression	sizeof ( * map -> entries )		1125375	0					
ANR	1125624	Sizeof	sizeof		1125375	0					
ANR	1125625	UnaryOperationExpression	* map -> entries		1125375	1					
ANR	1125626	UnaryOperator	*		1125375	0					
ANR	1125627	PtrMemberAccess	map -> entries		1125375	1					
ANR	1125628	Identifier	map		1125375	0					
ANR	1125629	Identifier	entries		1125375	1					
ANR	1125630	Identifier	n		1125375	1					
ANR	1125631	IfStatement	if ( a / n != sizeof ( * map -> entries ) )		1125375	1					
ANR	1125632	Condition	a / n != sizeof ( * map -> entries )	87:9:1733:1762	1125375	0	True				
ANR	1125633	EqualityExpression	a / n != sizeof ( * map -> entries )		1125375	0		!=			
ANR	1125634	MultiplicativeExpression	a / n		1125375	0		/			
ANR	1125635	Identifier	a		1125375	0					
ANR	1125636	Identifier	n		1125375	1					
ANR	1125637	SizeofExpression	sizeof ( * map -> entries )		1125375	1					
ANR	1125638	Sizeof	sizeof		1125375	0					
ANR	1125639	UnaryOperationExpression	* map -> entries		1125375	1					
ANR	1125640	UnaryOperator	*		1125375	0					
ANR	1125641	PtrMemberAccess	map -> entries		1125375	1					
ANR	1125642	Identifier	map		1125375	0					
ANR	1125643	Identifier	entries		1125375	1					
ANR	1125644	ReturnStatement	return 2 ;	88:6:1771:1779	1125375	1	True				
ANR	1125645	PrimaryExpression	2		1125375	0					
ANR	1125646	ExpressionStatement	"memmove ( & map -> entries [ i + 2 ] , & map -> entries [ i + 1 ] , a )"	89:5:1786:1840	1125375	2	True				
ANR	1125647	CallExpression	"memmove ( & map -> entries [ i + 2 ] , & map -> entries [ i + 1 ] , a )"		1125375	0					
ANR	1125648	Callee	memmove		1125375	0					
ANR	1125649	Identifier	memmove		1125375	0					
ANR	1125650	ArgumentList	& map -> entries [ i + 2 ]		1125375	1					
ANR	1125651	Argument	& map -> entries [ i + 2 ]		1125375	0					
ANR	1125652	UnaryOperationExpression	& map -> entries [ i + 2 ]		1125375	0					
ANR	1125653	UnaryOperator	&		1125375	0					
ANR	1125654	ArrayIndexing	map -> entries [ i + 2 ]		1125375	1					
ANR	1125655	PtrMemberAccess	map -> entries		1125375	0					
ANR	1125656	Identifier	map		1125375	0					
ANR	1125657	Identifier	entries		1125375	1					
ANR	1125658	AdditiveExpression	i + 2		1125375	1		+			
ANR	1125659	Identifier	i		1125375	0					
ANR	1125660	PrimaryExpression	2		1125375	1					
ANR	1125661	Argument	& map -> entries [ i + 1 ]		1125375	1					
ANR	1125662	UnaryOperationExpression	& map -> entries [ i + 1 ]		1125375	0					
ANR	1125663	UnaryOperator	&		1125375	0					
ANR	1125664	ArrayIndexing	map -> entries [ i + 1 ]		1125375	1					
ANR	1125665	PtrMemberAccess	map -> entries		1125375	0					
ANR	1125666	Identifier	map		1125375	0					
ANR	1125667	Identifier	entries		1125375	1					
ANR	1125668	AdditiveExpression	i + 1		1125375	1		+			
ANR	1125669	Identifier	i		1125375	0					
ANR	1125670	PrimaryExpression	1		1125375	1					
ANR	1125671	Argument	a		1125375	2					
ANR	1125672	Identifier	a		1125375	0					
ANR	1125673	ExpressionStatement	++ map -> n	91:4:1852:1860	1125375	3	True				
ANR	1125674	UnaryExpression	++ map -> n		1125375	0					
ANR	1125675	IncDec	++		1125375	0					
ANR	1125676	PtrMemberAccess	map -> n		1125375	1					
ANR	1125677	Identifier	map		1125375	0					
ANR	1125678	Identifier	n		1125375	1					
ANR	1125679	ExpressionStatement	entry = & map -> entries [ i + 1 ]	92:4:1866:1894	1125375	4	True				
ANR	1125680	AssignmentExpression	entry = & map -> entries [ i + 1 ]		1125375	0		=			
ANR	1125681	Identifier	entry		1125375	0					
ANR	1125682	UnaryOperationExpression	& map -> entries [ i + 1 ]		1125375	1					
ANR	1125683	UnaryOperator	&		1125375	0					
ANR	1125684	ArrayIndexing	map -> entries [ i + 1 ]		1125375	1					
ANR	1125685	PtrMemberAccess	map -> entries		1125375	0					
ANR	1125686	Identifier	map		1125375	0					
ANR	1125687	Identifier	entries		1125375	1					
ANR	1125688	AdditiveExpression	i + 1		1125375	1		+			
ANR	1125689	Identifier	i		1125375	0					
ANR	1125690	PrimaryExpression	1		1125375	1					
ANR	1125691	ExpressionStatement	entry -> cp_uni = cp_uni	93:4:1900:1922	1125375	5	True				
ANR	1125692	AssignmentExpression	entry -> cp_uni = cp_uni		1125375	0		=			
ANR	1125693	PtrMemberAccess	entry -> cp_uni		1125375	0					
ANR	1125694	Identifier	entry		1125375	0					
ANR	1125695	Identifier	cp_uni		1125375	1					
ANR	1125696	Identifier	cp_uni		1125375	1					
ANR	1125697	ExpressionStatement	entry -> n = 0	94:4:1928:1940	1125375	6	True				
ANR	1125698	AssignmentExpression	entry -> n = 0		1125375	0		=			
ANR	1125699	PtrMemberAccess	entry -> n		1125375	0					
ANR	1125700	Identifier	entry		1125375	0					
ANR	1125701	Identifier	n		1125375	1					
ANR	1125702	PrimaryExpression	0		1125375	1					
ANR	1125703	BreakStatement	break ;	95:4:1946:1951	1125375	7	True				
ANR	1125704	ExpressionStatement	s = i	97:3:1961:1966	1125375	1	True				
ANR	1125705	AssignmentExpression	s = i		1125375	0		=			
ANR	1125706	Identifier	s		1125375	0					
ANR	1125707	Identifier	i		1125375	1					
ANR	1125708	ElseStatement	else		1125375	0					
ANR	1125709	CompoundStatement		45:9:1022:1022	1125375	0					
ANR	1125710	BreakStatement	break ;	99:3:1982:1987	1125375	0	True				
ANR	1125711	IfStatement	if ( entry -> n >= sizeof ( entry -> cp_932 ) / sizeof ( * entry -> cp_932 ) )		1125375	4					
ANR	1125712	Condition	entry -> n >= sizeof ( entry -> cp_932 ) / sizeof ( * entry -> cp_932 )	102:5:2001:2058	1125375	0	True				
ANR	1125713	RelationalExpression	entry -> n >= sizeof ( entry -> cp_932 ) / sizeof ( * entry -> cp_932 )		1125375	0		>=			
ANR	1125714	PtrMemberAccess	entry -> n		1125375	0					
ANR	1125715	Identifier	entry		1125375	0					
ANR	1125716	Identifier	n		1125375	1					
ANR	1125717	MultiplicativeExpression	sizeof ( entry -> cp_932 ) / sizeof ( * entry -> cp_932 )		1125375	1		/			
ANR	1125718	SizeofExpression	sizeof ( entry -> cp_932 )		1125375	0					
ANR	1125719	Sizeof	sizeof		1125375	0					
ANR	1125720	PtrMemberAccess	entry -> cp_932		1125375	1					
ANR	1125721	Identifier	entry		1125375	0					
ANR	1125722	Identifier	cp_932		1125375	1					
ANR	1125723	SizeofExpression	sizeof ( * entry -> cp_932 )		1125375	1					
ANR	1125724	Sizeof	sizeof		1125375	0					
ANR	1125725	UnaryOperationExpression	* entry -> cp_932		1125375	1					
ANR	1125726	UnaryOperator	*		1125375	0					
ANR	1125727	PtrMemberAccess	entry -> cp_932		1125375	1					
ANR	1125728	Identifier	entry		1125375	0					
ANR	1125729	Identifier	cp_932		1125375	1					
ANR	1125730	ReturnStatement	return 1 ;	103:2:2063:2071	1125375	1	True				
ANR	1125731	PrimaryExpression	1		1125375	0					
ANR	1125732	ExpressionStatement	entry -> cp_932 [ entry -> n ++ ] = cp_932	104:1:2074:2108	1125375	5	True				
ANR	1125733	AssignmentExpression	entry -> cp_932 [ entry -> n ++ ] = cp_932		1125375	0		=			
ANR	1125734	ArrayIndexing	entry -> cp_932 [ entry -> n ++ ]		1125375	0					
ANR	1125735	PtrMemberAccess	entry -> cp_932		1125375	0					
ANR	1125736	Identifier	entry		1125375	0					
ANR	1125737	Identifier	cp_932		1125375	1					
ANR	1125738	PostIncDecOperationExpression	entry -> n ++		1125375	1					
ANR	1125739	PtrMemberAccess	entry -> n		1125375	0					
ANR	1125740	Identifier	entry		1125375	0					
ANR	1125741	Identifier	n		1125375	1					
ANR	1125742	IncDec	++		1125375	1					
ANR	1125743	Identifier	cp_932		1125375	1					
ANR	1125744	ReturnStatement	return 0 ;	105:1:2111:2119	1125375	6	True				
ANR	1125745	PrimaryExpression	0		1125375	0					
ANR	1125746	ReturnType	static int		1125375	1					
ANR	1125747	Identifier	mappings_add		1125375	2					
ANR	1125748	ParameterList	"struct mappings * map , int cp_uni , int cp_932"		1125375	3					
ANR	1125749	Parameter	struct mappings * map	53:24:908:927	1125375	0	True				
ANR	1125750	ParameterType	struct mappings *		1125375	0					
ANR	1125751	Identifier	map		1125375	1					
ANR	1125752	Parameter	int cp_uni	53:46:930:939	1125375	1	True				
ANR	1125753	ParameterType	int		1125375	0					
ANR	1125754	Identifier	cp_uni		1125375	1					
ANR	1125755	Parameter	int cp_932	53:58:942:951	1125375	2	True				
ANR	1125756	ParameterType	int		1125375	0					
ANR	1125757	Identifier	cp_932		1125375	1					
ANR	1125758	CFGEntryNode	ENTRY		1125375		True				
ANR	1125759	CFGExitNode	EXIT		1125375		True				
ANR	1125760	InfiniteForNode	true		1125375		True				
ANR	1125761	Symbol	cp_932		1125375						
ANR	1125762	Symbol	a		1125375						
ANR	1125763	Symbol	entry -> cp_uni		1125375						
ANR	1125764	Symbol	map -> entries		1125375						
ANR	1125765	Symbol	e		1125375						
ANR	1125766	Symbol	* * entry		1125375						
ANR	1125767	Symbol	* map		1125375						
ANR	1125768	Symbol	* entry -> cp_932		1125375						
ANR	1125769	Symbol	i		1125375						
ANR	1125770	Symbol	mappings_grow		1125375						
ANR	1125771	Symbol	n		1125375						
ANR	1125772	Symbol	entry -> n		1125375						
ANR	1125773	Symbol	map -> n		1125375						
ANR	1125774	Symbol	* * map		1125375						
ANR	1125775	Symbol	entry		1125375						
ANR	1125776	Symbol	r		1125375						
ANR	1125777	Symbol	s		1125375						
ANR	1125778	Symbol	cp_uni		1125375						
ANR	1125779	Symbol	* map -> entries		1125375						
ANR	1125780	Symbol	entry -> cp_932		1125375						
ANR	1125781	Symbol	map		1125375						
ANR	1125782	Symbol	* entry		1125375						
ANR	1125783	ClassDef	generator_entry	108:0:2124:2262							
ANR	1125784	DeclStmt									
ANR	1125785	Decl							const char	const char *	name
ANR	1125786	DeclStmt									
ANR	1125787	Decl							const char	const char *	prologue
ANR	1125788	DeclStmt									
ANR	1125789	Decl							const char	const char *	epilogue
ANR	1125790	DeclStmt									
ANR	1125791	Decl							void ( * ) ( const struct mappings_entry * )	void ( * ) ( const struct mappings_entry * )	visitor
ANR	1125792	Function	utf32_utf8	115:0:2266:3271							
ANR	1125793	FunctionDef	"utf32_utf8 (char * buf , int k)"		1125792	0					
ANR	1125794	CompoundStatement		116:0:2306:3271	1125792	0					
ANR	1125795	IdentifierDeclStatement	int retval = 0 ;	117:1:2309:2323	1125792	0	True				
ANR	1125796	IdentifierDecl	retval = 0		1125792	0					
ANR	1125797	IdentifierDeclType	int		1125792	0					
ANR	1125798	Identifier	retval		1125792	1					
ANR	1125799	AssignmentExpression	retval = 0		1125792	2		=			
ANR	1125800	Identifier	retval		1125792	0					
ANR	1125801	PrimaryExpression	0		1125792	1					
ANR	1125802	IfStatement	if ( k < 0x80 )		1125792	1					
ANR	1125803	Condition	k < 0x80	119:5:2331:2338	1125792	0	True				
ANR	1125804	RelationalExpression	k < 0x80		1125792	0		<			
ANR	1125805	Identifier	k		1125792	0					
ANR	1125806	PrimaryExpression	0x80		1125792	1					
ANR	1125807	CompoundStatement		4:15:34:34	1125792	1					
ANR	1125808	ExpressionStatement	buf [ 0 ] = k	120:2:2345:2355	1125792	0	True				
ANR	1125809	AssignmentExpression	buf [ 0 ] = k		1125792	0		=			
ANR	1125810	ArrayIndexing	buf [ 0 ]		1125792	0					
ANR	1125811	Identifier	buf		1125792	0					
ANR	1125812	PrimaryExpression	0		1125792	1					
ANR	1125813	Identifier	k		1125792	1					
ANR	1125814	ExpressionStatement	retval = 1	121:2:2359:2369	1125792	1	True				
ANR	1125815	AssignmentExpression	retval = 1		1125792	0		=			
ANR	1125816	Identifier	retval		1125792	0					
ANR	1125817	PrimaryExpression	1		1125792	1					
ANR	1125818	ElseStatement	else		1125792	0					
ANR	1125819	IfStatement	if ( k < 0x800 )		1125792	0					
ANR	1125820	Condition	k < 0x800	122:12:2383:2391	1125792	0	True				
ANR	1125821	RelationalExpression	k < 0x800		1125792	0		<			
ANR	1125822	Identifier	k		1125792	0					
ANR	1125823	PrimaryExpression	0x800		1125792	1					
ANR	1125824	CompoundStatement		7:23:87:87	1125792	1					
ANR	1125825	ExpressionStatement	buf [ 0 ] = 0xc0 | ( k >> 6 )	123:2:2398:2422	1125792	0	True				
ANR	1125826	AssignmentExpression	buf [ 0 ] = 0xc0 | ( k >> 6 )		1125792	0		=			
ANR	1125827	ArrayIndexing	buf [ 0 ]		1125792	0					
ANR	1125828	Identifier	buf		1125792	0					
ANR	1125829	PrimaryExpression	0		1125792	1					
ANR	1125830	InclusiveOrExpression	0xc0 | ( k >> 6 )		1125792	1		|			
ANR	1125831	PrimaryExpression	0xc0		1125792	0					
ANR	1125832	ShiftExpression	k >> 6		1125792	1		>>			
ANR	1125833	Identifier	k		1125792	0					
ANR	1125834	PrimaryExpression	6		1125792	1					
ANR	1125835	ExpressionStatement	buf [ 1 ] = 0x80 | ( k & 0x3f )	124:2:2426:2452	1125792	1	True				
ANR	1125836	AssignmentExpression	buf [ 1 ] = 0x80 | ( k & 0x3f )		1125792	0		=			
ANR	1125837	ArrayIndexing	buf [ 1 ]		1125792	0					
ANR	1125838	Identifier	buf		1125792	0					
ANR	1125839	PrimaryExpression	1		1125792	1					
ANR	1125840	InclusiveOrExpression	0x80 | ( k & 0x3f )		1125792	1		|			
ANR	1125841	PrimaryExpression	0x80		1125792	0					
ANR	1125842	BitAndExpression	k & 0x3f		1125792	1		&			
ANR	1125843	Identifier	k		1125792	0					
ANR	1125844	PrimaryExpression	0x3f		1125792	1					
ANR	1125845	ExpressionStatement	retval = 2	125:2:2456:2466	1125792	2	True				
ANR	1125846	AssignmentExpression	retval = 2		1125792	0		=			
ANR	1125847	Identifier	retval		1125792	0					
ANR	1125848	PrimaryExpression	2		1125792	1					
ANR	1125849	ElseStatement	else		1125792	0					
ANR	1125850	IfStatement	if ( k < 0x10000 )		1125792	0					
ANR	1125851	Condition	k < 0x10000	126:12:2480:2490	1125792	0	True				
ANR	1125852	RelationalExpression	k < 0x10000		1125792	0		<			
ANR	1125853	Identifier	k		1125792	0					
ANR	1125854	PrimaryExpression	0x10000		1125792	1					
ANR	1125855	CompoundStatement		11:25:186:186	1125792	1					
ANR	1125856	ExpressionStatement	buf [ 0 ] = 0xe0 | ( k >> 12 )	127:2:2497:2522	1125792	0	True				
ANR	1125857	AssignmentExpression	buf [ 0 ] = 0xe0 | ( k >> 12 )		1125792	0		=			
ANR	1125858	ArrayIndexing	buf [ 0 ]		1125792	0					
ANR	1125859	Identifier	buf		1125792	0					
ANR	1125860	PrimaryExpression	0		1125792	1					
ANR	1125861	InclusiveOrExpression	0xe0 | ( k >> 12 )		1125792	1		|			
ANR	1125862	PrimaryExpression	0xe0		1125792	0					
ANR	1125863	ShiftExpression	k >> 12		1125792	1		>>			
ANR	1125864	Identifier	k		1125792	0					
ANR	1125865	PrimaryExpression	12		1125792	1					
ANR	1125866	ExpressionStatement	buf [ 1 ] = 0x80 | ( ( k >> 6 ) & 0x3f )	128:2:2526:2559	1125792	1	True				
ANR	1125867	AssignmentExpression	buf [ 1 ] = 0x80 | ( ( k >> 6 ) & 0x3f )		1125792	0		=			
ANR	1125868	ArrayIndexing	buf [ 1 ]		1125792	0					
ANR	1125869	Identifier	buf		1125792	0					
ANR	1125870	PrimaryExpression	1		1125792	1					
ANR	1125871	InclusiveOrExpression	0x80 | ( ( k >> 6 ) & 0x3f )		1125792	1		|			
ANR	1125872	PrimaryExpression	0x80		1125792	0					
ANR	1125873	BitAndExpression	( k >> 6 ) & 0x3f		1125792	1		&			
ANR	1125874	ShiftExpression	k >> 6		1125792	0		>>			
ANR	1125875	Identifier	k		1125792	0					
ANR	1125876	PrimaryExpression	6		1125792	1					
ANR	1125877	PrimaryExpression	0x3f		1125792	1					
ANR	1125878	ExpressionStatement	buf [ 2 ] = 0x80 | ( k & 0x3f )	129:2:2563:2589	1125792	2	True				
ANR	1125879	AssignmentExpression	buf [ 2 ] = 0x80 | ( k & 0x3f )		1125792	0		=			
ANR	1125880	ArrayIndexing	buf [ 2 ]		1125792	0					
ANR	1125881	Identifier	buf		1125792	0					
ANR	1125882	PrimaryExpression	2		1125792	1					
ANR	1125883	InclusiveOrExpression	0x80 | ( k & 0x3f )		1125792	1		|			
ANR	1125884	PrimaryExpression	0x80		1125792	0					
ANR	1125885	BitAndExpression	k & 0x3f		1125792	1		&			
ANR	1125886	Identifier	k		1125792	0					
ANR	1125887	PrimaryExpression	0x3f		1125792	1					
ANR	1125888	ExpressionStatement	retval = 3	130:2:2593:2603	1125792	3	True				
ANR	1125889	AssignmentExpression	retval = 3		1125792	0		=			
ANR	1125890	Identifier	retval		1125792	0					
ANR	1125891	PrimaryExpression	3		1125792	1					
ANR	1125892	ElseStatement	else		1125792	0					
ANR	1125893	IfStatement	if ( k < 0x200000 )		1125792	0					
ANR	1125894	Condition	k < 0x200000	131:12:2617:2628	1125792	0	True				
ANR	1125895	RelationalExpression	k < 0x200000		1125792	0		<			
ANR	1125896	Identifier	k		1125792	0					
ANR	1125897	PrimaryExpression	0x200000		1125792	1					
ANR	1125898	CompoundStatement		16:26:324:324	1125792	1					
ANR	1125899	ExpressionStatement	buf [ 0 ] = 0xf0 | ( k >> 18 )	132:2:2635:2660	1125792	0	True				
ANR	1125900	AssignmentExpression	buf [ 0 ] = 0xf0 | ( k >> 18 )		1125792	0		=			
ANR	1125901	ArrayIndexing	buf [ 0 ]		1125792	0					
ANR	1125902	Identifier	buf		1125792	0					
ANR	1125903	PrimaryExpression	0		1125792	1					
ANR	1125904	InclusiveOrExpression	0xf0 | ( k >> 18 )		1125792	1		|			
ANR	1125905	PrimaryExpression	0xf0		1125792	0					
ANR	1125906	ShiftExpression	k >> 18		1125792	1		>>			
ANR	1125907	Identifier	k		1125792	0					
ANR	1125908	PrimaryExpression	18		1125792	1					
ANR	1125909	ExpressionStatement	buf [ 1 ] = 0x80 | ( ( k >> 12 ) & 0x3f )	133:2:2664:2698	1125792	1	True				
ANR	1125910	AssignmentExpression	buf [ 1 ] = 0x80 | ( ( k >> 12 ) & 0x3f )		1125792	0		=			
ANR	1125911	ArrayIndexing	buf [ 1 ]		1125792	0					
ANR	1125912	Identifier	buf		1125792	0					
ANR	1125913	PrimaryExpression	1		1125792	1					
ANR	1125914	InclusiveOrExpression	0x80 | ( ( k >> 12 ) & 0x3f )		1125792	1		|			
ANR	1125915	PrimaryExpression	0x80		1125792	0					
ANR	1125916	BitAndExpression	( k >> 12 ) & 0x3f		1125792	1		&			
ANR	1125917	ShiftExpression	k >> 12		1125792	0		>>			
ANR	1125918	Identifier	k		1125792	0					
ANR	1125919	PrimaryExpression	12		1125792	1					
ANR	1125920	PrimaryExpression	0x3f		1125792	1					
ANR	1125921	ExpressionStatement	buf [ 2 ] = 0x80 | ( ( k >> 6 ) & 0x3f )	134:2:2702:2735	1125792	2	True				
ANR	1125922	AssignmentExpression	buf [ 2 ] = 0x80 | ( ( k >> 6 ) & 0x3f )		1125792	0		=			
ANR	1125923	ArrayIndexing	buf [ 2 ]		1125792	0					
ANR	1125924	Identifier	buf		1125792	0					
ANR	1125925	PrimaryExpression	2		1125792	1					
ANR	1125926	InclusiveOrExpression	0x80 | ( ( k >> 6 ) & 0x3f )		1125792	1		|			
ANR	1125927	PrimaryExpression	0x80		1125792	0					
ANR	1125928	BitAndExpression	( k >> 6 ) & 0x3f		1125792	1		&			
ANR	1125929	ShiftExpression	k >> 6		1125792	0		>>			
ANR	1125930	Identifier	k		1125792	0					
ANR	1125931	PrimaryExpression	6		1125792	1					
ANR	1125932	PrimaryExpression	0x3f		1125792	1					
ANR	1125933	ExpressionStatement	buf [ 3 ] = 0x80 | ( k & 0x3f )	135:2:2739:2765	1125792	3	True				
ANR	1125934	AssignmentExpression	buf [ 3 ] = 0x80 | ( k & 0x3f )		1125792	0		=			
ANR	1125935	ArrayIndexing	buf [ 3 ]		1125792	0					
ANR	1125936	Identifier	buf		1125792	0					
ANR	1125937	PrimaryExpression	3		1125792	1					
ANR	1125938	InclusiveOrExpression	0x80 | ( k & 0x3f )		1125792	1		|			
ANR	1125939	PrimaryExpression	0x80		1125792	0					
ANR	1125940	BitAndExpression	k & 0x3f		1125792	1		&			
ANR	1125941	Identifier	k		1125792	0					
ANR	1125942	PrimaryExpression	0x3f		1125792	1					
ANR	1125943	ExpressionStatement	retval = 4	136:2:2769:2779	1125792	4	True				
ANR	1125944	AssignmentExpression	retval = 4		1125792	0		=			
ANR	1125945	Identifier	retval		1125792	0					
ANR	1125946	PrimaryExpression	4		1125792	1					
ANR	1125947	ElseStatement	else		1125792	0					
ANR	1125948	IfStatement	if ( k < 0x4000000 )		1125792	0					
ANR	1125949	Condition	k < 0x4000000	137:12:2793:2805	1125792	0	True				
ANR	1125950	RelationalExpression	k < 0x4000000		1125792	0		<			
ANR	1125951	Identifier	k		1125792	0					
ANR	1125952	PrimaryExpression	0x4000000		1125792	1					
ANR	1125953	CompoundStatement		22:27:501:501	1125792	1					
ANR	1125954	ExpressionStatement	buf [ 0 ] = 0xf8 | ( k >> 24 )	138:2:2812:2837	1125792	0	True				
ANR	1125955	AssignmentExpression	buf [ 0 ] = 0xf8 | ( k >> 24 )		1125792	0		=			
ANR	1125956	ArrayIndexing	buf [ 0 ]		1125792	0					
ANR	1125957	Identifier	buf		1125792	0					
ANR	1125958	PrimaryExpression	0		1125792	1					
ANR	1125959	InclusiveOrExpression	0xf8 | ( k >> 24 )		1125792	1		|			
ANR	1125960	PrimaryExpression	0xf8		1125792	0					
ANR	1125961	ShiftExpression	k >> 24		1125792	1		>>			
ANR	1125962	Identifier	k		1125792	0					
ANR	1125963	PrimaryExpression	24		1125792	1					
ANR	1125964	ExpressionStatement	buf [ 1 ] = 0x80 | ( ( k >> 18 ) & 0x3f )	139:2:2841:2875	1125792	1	True				
ANR	1125965	AssignmentExpression	buf [ 1 ] = 0x80 | ( ( k >> 18 ) & 0x3f )		1125792	0		=			
ANR	1125966	ArrayIndexing	buf [ 1 ]		1125792	0					
ANR	1125967	Identifier	buf		1125792	0					
ANR	1125968	PrimaryExpression	1		1125792	1					
ANR	1125969	InclusiveOrExpression	0x80 | ( ( k >> 18 ) & 0x3f )		1125792	1		|			
ANR	1125970	PrimaryExpression	0x80		1125792	0					
ANR	1125971	BitAndExpression	( k >> 18 ) & 0x3f		1125792	1		&			
ANR	1125972	ShiftExpression	k >> 18		1125792	0		>>			
ANR	1125973	Identifier	k		1125792	0					
ANR	1125974	PrimaryExpression	18		1125792	1					
ANR	1125975	PrimaryExpression	0x3f		1125792	1					
ANR	1125976	ExpressionStatement	buf [ 2 ] = 0x80 | ( ( k >> 12 ) & 0x3f )	140:2:2879:2913	1125792	2	True				
ANR	1125977	AssignmentExpression	buf [ 2 ] = 0x80 | ( ( k >> 12 ) & 0x3f )		1125792	0		=			
ANR	1125978	ArrayIndexing	buf [ 2 ]		1125792	0					
ANR	1125979	Identifier	buf		1125792	0					
ANR	1125980	PrimaryExpression	2		1125792	1					
ANR	1125981	InclusiveOrExpression	0x80 | ( ( k >> 12 ) & 0x3f )		1125792	1		|			
ANR	1125982	PrimaryExpression	0x80		1125792	0					
ANR	1125983	BitAndExpression	( k >> 12 ) & 0x3f		1125792	1		&			
ANR	1125984	ShiftExpression	k >> 12		1125792	0		>>			
ANR	1125985	Identifier	k		1125792	0					
ANR	1125986	PrimaryExpression	12		1125792	1					
ANR	1125987	PrimaryExpression	0x3f		1125792	1					
ANR	1125988	ExpressionStatement	buf [ 3 ] = 0x80 | ( ( k >> 6 ) & 0x3f )	141:2:2917:2950	1125792	3	True				
ANR	1125989	AssignmentExpression	buf [ 3 ] = 0x80 | ( ( k >> 6 ) & 0x3f )		1125792	0		=			
ANR	1125990	ArrayIndexing	buf [ 3 ]		1125792	0					
ANR	1125991	Identifier	buf		1125792	0					
ANR	1125992	PrimaryExpression	3		1125792	1					
ANR	1125993	InclusiveOrExpression	0x80 | ( ( k >> 6 ) & 0x3f )		1125792	1		|			
ANR	1125994	PrimaryExpression	0x80		1125792	0					
ANR	1125995	BitAndExpression	( k >> 6 ) & 0x3f		1125792	1		&			
ANR	1125996	ShiftExpression	k >> 6		1125792	0		>>			
ANR	1125997	Identifier	k		1125792	0					
ANR	1125998	PrimaryExpression	6		1125792	1					
ANR	1125999	PrimaryExpression	0x3f		1125792	1					
ANR	1126000	ExpressionStatement	buf [ 4 ] = 0x80 | ( k & 0x3f )	142:2:2954:2980	1125792	4	True				
ANR	1126001	AssignmentExpression	buf [ 4 ] = 0x80 | ( k & 0x3f )		1125792	0		=			
ANR	1126002	ArrayIndexing	buf [ 4 ]		1125792	0					
ANR	1126003	Identifier	buf		1125792	0					
ANR	1126004	PrimaryExpression	4		1125792	1					
ANR	1126005	InclusiveOrExpression	0x80 | ( k & 0x3f )		1125792	1		|			
ANR	1126006	PrimaryExpression	0x80		1125792	0					
ANR	1126007	BitAndExpression	k & 0x3f		1125792	1		&			
ANR	1126008	Identifier	k		1125792	0					
ANR	1126009	PrimaryExpression	0x3f		1125792	1					
ANR	1126010	ExpressionStatement	retval = 5	143:2:2984:2994	1125792	5	True				
ANR	1126011	AssignmentExpression	retval = 5		1125792	0		=			
ANR	1126012	Identifier	retval		1125792	0					
ANR	1126013	PrimaryExpression	5		1125792	1					
ANR	1126014	ElseStatement	else		1125792	0					
ANR	1126015	CompoundStatement		29:8:697:697	1125792	0					
ANR	1126016	ExpressionStatement	buf [ 0 ] = 0xfc | ( k >> 30 )	145:2:3008:3033	1125792	0	True				
ANR	1126017	AssignmentExpression	buf [ 0 ] = 0xfc | ( k >> 30 )		1125792	0		=			
ANR	1126018	ArrayIndexing	buf [ 0 ]		1125792	0					
ANR	1126019	Identifier	buf		1125792	0					
ANR	1126020	PrimaryExpression	0		1125792	1					
ANR	1126021	InclusiveOrExpression	0xfc | ( k >> 30 )		1125792	1		|			
ANR	1126022	PrimaryExpression	0xfc		1125792	0					
ANR	1126023	ShiftExpression	k >> 30		1125792	1		>>			
ANR	1126024	Identifier	k		1125792	0					
ANR	1126025	PrimaryExpression	30		1125792	1					
ANR	1126026	ExpressionStatement	buf [ 1 ] = 0x80 | ( ( k >> 24 ) & 0x3f )	146:2:3037:3071	1125792	1	True				
ANR	1126027	AssignmentExpression	buf [ 1 ] = 0x80 | ( ( k >> 24 ) & 0x3f )		1125792	0		=			
ANR	1126028	ArrayIndexing	buf [ 1 ]		1125792	0					
ANR	1126029	Identifier	buf		1125792	0					
ANR	1126030	PrimaryExpression	1		1125792	1					
ANR	1126031	InclusiveOrExpression	0x80 | ( ( k >> 24 ) & 0x3f )		1125792	1		|			
ANR	1126032	PrimaryExpression	0x80		1125792	0					
ANR	1126033	BitAndExpression	( k >> 24 ) & 0x3f		1125792	1		&			
ANR	1126034	ShiftExpression	k >> 24		1125792	0		>>			
ANR	1126035	Identifier	k		1125792	0					
ANR	1126036	PrimaryExpression	24		1125792	1					
ANR	1126037	PrimaryExpression	0x3f		1125792	1					
ANR	1126038	ExpressionStatement	buf [ 2 ] = 0x80 | ( ( k >> 18 ) & 0x3f )	147:2:3075:3109	1125792	2	True				
ANR	1126039	AssignmentExpression	buf [ 2 ] = 0x80 | ( ( k >> 18 ) & 0x3f )		1125792	0		=			
ANR	1126040	ArrayIndexing	buf [ 2 ]		1125792	0					
ANR	1126041	Identifier	buf		1125792	0					
ANR	1126042	PrimaryExpression	2		1125792	1					
ANR	1126043	InclusiveOrExpression	0x80 | ( ( k >> 18 ) & 0x3f )		1125792	1		|			
ANR	1126044	PrimaryExpression	0x80		1125792	0					
ANR	1126045	BitAndExpression	( k >> 18 ) & 0x3f		1125792	1		&			
ANR	1126046	ShiftExpression	k >> 18		1125792	0		>>			
ANR	1126047	Identifier	k		1125792	0					
ANR	1126048	PrimaryExpression	18		1125792	1					
ANR	1126049	PrimaryExpression	0x3f		1125792	1					
ANR	1126050	ExpressionStatement	buf [ 3 ] = 0x80 | ( ( k >> 12 ) & 0x3f )	148:2:3113:3147	1125792	3	True				
ANR	1126051	AssignmentExpression	buf [ 3 ] = 0x80 | ( ( k >> 12 ) & 0x3f )		1125792	0		=			
ANR	1126052	ArrayIndexing	buf [ 3 ]		1125792	0					
ANR	1126053	Identifier	buf		1125792	0					
ANR	1126054	PrimaryExpression	3		1125792	1					
ANR	1126055	InclusiveOrExpression	0x80 | ( ( k >> 12 ) & 0x3f )		1125792	1		|			
ANR	1126056	PrimaryExpression	0x80		1125792	0					
ANR	1126057	BitAndExpression	( k >> 12 ) & 0x3f		1125792	1		&			
ANR	1126058	ShiftExpression	k >> 12		1125792	0		>>			
ANR	1126059	Identifier	k		1125792	0					
ANR	1126060	PrimaryExpression	12		1125792	1					
ANR	1126061	PrimaryExpression	0x3f		1125792	1					
ANR	1126062	ExpressionStatement	buf [ 4 ] = 0x80 | ( ( k >> 6 ) & 0x3f )	149:2:3151:3184	1125792	4	True				
ANR	1126063	AssignmentExpression	buf [ 4 ] = 0x80 | ( ( k >> 6 ) & 0x3f )		1125792	0		=			
ANR	1126064	ArrayIndexing	buf [ 4 ]		1125792	0					
ANR	1126065	Identifier	buf		1125792	0					
ANR	1126066	PrimaryExpression	4		1125792	1					
ANR	1126067	InclusiveOrExpression	0x80 | ( ( k >> 6 ) & 0x3f )		1125792	1		|			
ANR	1126068	PrimaryExpression	0x80		1125792	0					
ANR	1126069	BitAndExpression	( k >> 6 ) & 0x3f		1125792	1		&			
ANR	1126070	ShiftExpression	k >> 6		1125792	0		>>			
ANR	1126071	Identifier	k		1125792	0					
ANR	1126072	PrimaryExpression	6		1125792	1					
ANR	1126073	PrimaryExpression	0x3f		1125792	1					
ANR	1126074	ExpressionStatement	buf [ 5 ] = 0x80 | ( k & 0x3f )	150:2:3188:3214	1125792	5	True				
ANR	1126075	AssignmentExpression	buf [ 5 ] = 0x80 | ( k & 0x3f )		1125792	0		=			
ANR	1126076	ArrayIndexing	buf [ 5 ]		1125792	0					
ANR	1126077	Identifier	buf		1125792	0					
ANR	1126078	PrimaryExpression	5		1125792	1					
ANR	1126079	InclusiveOrExpression	0x80 | ( k & 0x3f )		1125792	1		|			
ANR	1126080	PrimaryExpression	0x80		1125792	0					
ANR	1126081	BitAndExpression	k & 0x3f		1125792	1		&			
ANR	1126082	Identifier	k		1125792	0					
ANR	1126083	PrimaryExpression	0x3f		1125792	1					
ANR	1126084	ExpressionStatement	retval = 6	151:2:3218:3228	1125792	6	True				
ANR	1126085	AssignmentExpression	retval = 6		1125792	0		=			
ANR	1126086	Identifier	retval		1125792	0					
ANR	1126087	PrimaryExpression	6		1125792	1					
ANR	1126088	ExpressionStatement	buf [ retval ] = '\\0'	153:1:3234:3252	1125792	2	True				
ANR	1126089	AssignmentExpression	buf [ retval ] = '\\0'		1125792	0		=			
ANR	1126090	ArrayIndexing	buf [ retval ]		1125792	0					
ANR	1126091	Identifier	buf		1125792	0					
ANR	1126092	Identifier	retval		1125792	1					
ANR	1126093	PrimaryExpression	'\\0'		1125792	1					
ANR	1126094	ReturnStatement	return retval ;	155:1:3256:3269	1125792	3	True				
ANR	1126095	Identifier	retval		1125792	0					
ANR	1126096	ReturnType	static int		1125792	1					
ANR	1126097	Identifier	utf32_utf8		1125792	2					
ANR	1126098	ParameterList	"char * buf , int k"		1125792	3					
ANR	1126099	Parameter	char * buf	115:22:2288:2296	1125792	0	True				
ANR	1126100	ParameterType	char *		1125792	0					
ANR	1126101	Identifier	buf		1125792	1					
ANR	1126102	Parameter	int k	115:33:2299:2303	1125792	1	True				
ANR	1126103	ParameterType	int		1125792	0					
ANR	1126104	Identifier	k		1125792	1					
ANR	1126105	CFGEntryNode	ENTRY		1125792		True				
ANR	1126106	CFGExitNode	EXIT		1125792		True				
ANR	1126107	Symbol	* retval		1125792						
ANR	1126108	Symbol	buf		1125792						
ANR	1126109	Symbol	* buf		1125792						
ANR	1126110	Symbol	k		1125792						
ANR	1126111	Symbol	retval		1125792						
ANR	1126112	DeclStmt									
ANR	1126113	Decl							const char	const char [ ]	epilogue
ANR	1126114	DeclStmt									
ANR	1126115	Decl							const char	const char [ ]	prologue_to_cp932
ANR	1126116	DeclStmt									
ANR	1126117	Decl							const char	const char [ ]	prologue_to_cp50220
ANR	1126118	DeclStmt									
ANR	1126119	Decl							const char	const char [ ]	prologue_to_cp50222
ANR	1126120	DeclStmt									
ANR	1126121	Decl							const char	const char [ ]	prologue_from_cp932
ANR	1126122	Function	to_cp932_visitor	197:0:4183:5109							
ANR	1126123	FunctionDef	to_cp932_visitor (const struct mappings_entry * entry)		1126122	0					
ANR	1126124	CompoundStatement		198:0:4248:5109	1126122	0					
ANR	1126125	IdentifierDeclStatement	"char buf_uni [ 32 ] , buf_cp932 [ 8 ] ;"	199:1:4251:4281	1126122	0	True				
ANR	1126126	IdentifierDecl	buf_uni [ 32 ]		1126122	0					
ANR	1126127	IdentifierDeclType	char [ 32 ]		1126122	0					
ANR	1126128	Identifier	buf_uni		1126122	1					
ANR	1126129	PrimaryExpression	32		1126122	2					
ANR	1126130	IdentifierDecl	buf_cp932 [ 8 ]		1126122	1					
ANR	1126131	IdentifierDeclType	char [ 8 ]		1126122	0					
ANR	1126132	Identifier	buf_cp932		1126122	1					
ANR	1126133	PrimaryExpression	8		1126122	2					
ANR	1126134	IdentifierDeclStatement	int i ;	200:1:4284:4289	1126122	1	True				
ANR	1126135	IdentifierDecl	i		1126122	0					
ANR	1126136	IdentifierDeclType	int		1126122	0					
ANR	1126137	Identifier	i		1126122	1					
ANR	1126138	IfStatement	if ( entry -> cp_uni < 32 || entry -> cp_uni == 127 )		1126122	2					
ANR	1126139	Condition	entry -> cp_uni < 32 || entry -> cp_uni == 127	202:5:4297:4338	1126122	0	True				
ANR	1126140	OrExpression	entry -> cp_uni < 32 || entry -> cp_uni == 127		1126122	0		||			
ANR	1126141	RelationalExpression	entry -> cp_uni < 32		1126122	0		<			
ANR	1126142	PtrMemberAccess	entry -> cp_uni		1126122	0					
ANR	1126143	Identifier	entry		1126122	0					
ANR	1126144	Identifier	cp_uni		1126122	1					
ANR	1126145	PrimaryExpression	32		1126122	1					
ANR	1126146	EqualityExpression	entry -> cp_uni == 127		1126122	1		==			
ANR	1126147	PtrMemberAccess	entry -> cp_uni		1126122	0					
ANR	1126148	Identifier	entry		1126122	0					
ANR	1126149	Identifier	cp_uni		1126122	1					
ANR	1126150	PrimaryExpression	127		1126122	1					
ANR	1126151	ReturnStatement	return ;	203:2:4343:4349	1126122	1	True				
ANR	1126152	ExpressionStatement	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"	205:1:4353:4391	1126122	3	True				
ANR	1126153	AssignmentExpression	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"		1126122	0		=			
ANR	1126154	Identifier	i		1126122	0					
ANR	1126155	CallExpression	"utf32_utf8 ( buf_uni , entry -> cp_uni )"		1126122	1					
ANR	1126156	Callee	utf32_utf8		1126122	0					
ANR	1126157	Identifier	utf32_utf8		1126122	0					
ANR	1126158	ArgumentList	buf_uni		1126122	1					
ANR	1126159	Argument	buf_uni		1126122	0					
ANR	1126160	Identifier	buf_uni		1126122	0					
ANR	1126161	Argument	entry -> cp_uni		1126122	1					
ANR	1126162	PtrMemberAccess	entry -> cp_uni		1126122	0					
ANR	1126163	Identifier	entry		1126122	0					
ANR	1126164	Identifier	cp_uni		1126122	1					
ANR	1126165	ExpressionStatement	buf_uni [ i * 4 ] = '\\0'	206:1:4394:4415	1126122	4	True				
ANR	1126166	AssignmentExpression	buf_uni [ i * 4 ] = '\\0'		1126122	0		=			
ANR	1126167	ArrayIndexing	buf_uni [ i * 4 ]		1126122	0					
ANR	1126168	Identifier	buf_uni		1126122	0					
ANR	1126169	MultiplicativeExpression	i * 4		1126122	1		*			
ANR	1126170	Identifier	i		1126122	0					
ANR	1126171	PrimaryExpression	4		1126122	1					
ANR	1126172	PrimaryExpression	'\\0'		1126122	1					
ANR	1126173	WhileStatement	while ( -- i >= 0 )		1126122	5					
ANR	1126174	Condition	-- i >= 0	207:8:4425:4432	1126122	0	True				
ANR	1126175	RelationalExpression	-- i >= 0		1126122	0		>=			
ANR	1126176	UnaryExpression	-- i		1126122	0					
ANR	1126177	IncDec	--		1126122	0					
ANR	1126178	Identifier	i		1126122	1					
ANR	1126179	PrimaryExpression	0		1126122	1					
ANR	1126180	CompoundStatement		11:2:190:237	1126122	1					
ANR	1126181	IdentifierDeclStatement	unsigned char c = ( ( unsigned char * ) buf_uni ) [ i ] ;	208:2:4439:4486	1126122	0	True				
ANR	1126182	IdentifierDecl	c = ( ( unsigned char * ) buf_uni ) [ i ]		1126122	0					
ANR	1126183	IdentifierDeclType	unsigned char		1126122	0					
ANR	1126184	Identifier	c		1126122	1					
ANR	1126185	AssignmentExpression	c = ( ( unsigned char * ) buf_uni ) [ i ]		1126122	2		=			
ANR	1126186	Identifier	c		1126122	0					
ANR	1126187	ArrayIndexing	( ( unsigned char * ) buf_uni ) [ i ]		1126122	1					
ANR	1126188	CastExpression	( unsigned char * ) buf_uni		1126122	0					
ANR	1126189	CastTarget	unsigned char *		1126122	0					
ANR	1126190	Identifier	buf_uni		1126122	1					
ANR	1126191	Identifier	i		1126122	1					
ANR	1126192	ExpressionStatement	buf_uni [ i * 4 ] = '\\\\'	209:2:4490:4511	1126122	1	True				
ANR	1126193	AssignmentExpression	buf_uni [ i * 4 ] = '\\\\'		1126122	0		=			
ANR	1126194	ArrayIndexing	buf_uni [ i * 4 ]		1126122	0					
ANR	1126195	Identifier	buf_uni		1126122	0					
ANR	1126196	MultiplicativeExpression	i * 4		1126122	1		*			
ANR	1126197	Identifier	i		1126122	0					
ANR	1126198	PrimaryExpression	4		1126122	1					
ANR	1126199	PrimaryExpression	'\\\\'		1126122	1					
ANR	1126200	ExpressionStatement	buf_uni [ i * 4 + 1 ] = 'x'	210:2:4515:4539	1126122	2	True				
ANR	1126201	AssignmentExpression	buf_uni [ i * 4 + 1 ] = 'x'		1126122	0		=			
ANR	1126202	ArrayIndexing	buf_uni [ i * 4 + 1 ]		1126122	0					
ANR	1126203	Identifier	buf_uni		1126122	0					
ANR	1126204	AdditiveExpression	i * 4 + 1		1126122	1		+			
ANR	1126205	MultiplicativeExpression	i * 4		1126122	0		*			
ANR	1126206	Identifier	i		1126122	0					
ANR	1126207	PrimaryExpression	4		1126122	1					
ANR	1126208	PrimaryExpression	1		1126122	1					
ANR	1126209	PrimaryExpression	'x'		1126122	1					
ANR	1126210	ExpressionStatement	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"	211:2:4543:4590	1126122	3	True				
ANR	1126211	AssignmentExpression	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"		1126122	0		=			
ANR	1126212	ArrayIndexing	buf_uni [ i * 4 + 2 ]		1126122	0					
ANR	1126213	Identifier	buf_uni		1126122	0					
ANR	1126214	AdditiveExpression	i * 4 + 2		1126122	1		+			
ANR	1126215	MultiplicativeExpression	i * 4		1126122	0		*			
ANR	1126216	Identifier	i		1126122	0					
ANR	1126217	PrimaryExpression	4		1126122	1					
ANR	1126218	PrimaryExpression	2		1126122	1					
ANR	1126219	ArrayIndexing	"""0123456789abcdef"" [ c >> 4 ]"		1126122	1					
ANR	1126220	PrimaryExpression	"""0123456789abcdef"""		1126122	0					
ANR	1126221	ShiftExpression	c >> 4		1126122	1		>>			
ANR	1126222	Identifier	c		1126122	0					
ANR	1126223	PrimaryExpression	4		1126122	1					
ANR	1126224	ExpressionStatement	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"	212:2:4594:4641	1126122	4	True				
ANR	1126225	AssignmentExpression	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"		1126122	0		=			
ANR	1126226	ArrayIndexing	buf_uni [ i * 4 + 3 ]		1126122	0					
ANR	1126227	Identifier	buf_uni		1126122	0					
ANR	1126228	AdditiveExpression	i * 4 + 3		1126122	1		+			
ANR	1126229	MultiplicativeExpression	i * 4		1126122	0		*			
ANR	1126230	Identifier	i		1126122	0					
ANR	1126231	PrimaryExpression	4		1126122	1					
ANR	1126232	PrimaryExpression	3		1126122	1					
ANR	1126233	ArrayIndexing	"""0123456789abcdef"" [ c & 15 ]"		1126122	1					
ANR	1126234	PrimaryExpression	"""0123456789abcdef"""		1126122	0					
ANR	1126235	BitAndExpression	c & 15		1126122	1		&			
ANR	1126236	Identifier	c		1126122	0					
ANR	1126237	PrimaryExpression	15		1126122	1					
ANR	1126238	Statement	printf	215:1:4648:4653	1126122	6	True				
ANR	1126239	Statement	(	215:7:4654:4654	1126122	7	True				
ANR	1126240	Statement	"""set test \\""U+%06X\\""\\n"""	215:8:4655:4677	1126122	8	True				
ANR	1126241	Statement	"""send -- \\""%s\\r\\""\\n"""	216:8:4687:4706	1126122	9	True				
ANR	1126242	Statement	"""sleep 0.001\\n"""	217:5:4713:4727	1126122	10	True				
ANR	1126243	Statement	"""expect {\\n"""	218:8:4737:4748	1126122	11	True				
ANR	1126244	Statement	","	218:20:4749:4749	1126122	12	True				
ANR	1126245	Statement	entry	218:22:4751:4755	1126122	13	True				
ANR	1126246	Statement	->	218:27:4756:4757	1126122	14	True				
ANR	1126247	Statement	cp_uni	218:29:4758:4763	1126122	15	True				
ANR	1126248	Statement	","	218:35:4764:4764	1126122	16	True				
ANR	1126249	Statement	buf_uni	218:37:4766:4772	1126122	17	True				
ANR	1126250	Statement	)	218:44:4773:4773	1126122	18	True				
ANR	1126251	ExpressionStatement		218:45:4774:4774	1126122	19	True				
ANR	1126252	ForStatement	for ( i = 0 ; i < entry -> n ; ++ i )		1126122	20					
ANR	1126253	ForInit	i = 0 ;	220:6:4783:4788	1126122	0	True				
ANR	1126254	AssignmentExpression	i = 0		1126122	0		=			
ANR	1126255	Identifier	i		1126122	0					
ANR	1126256	PrimaryExpression	0		1126122	1					
ANR	1126257	Condition	i < entry -> n	220:13:4790:4801	1126122	1	True				
ANR	1126258	RelationalExpression	i < entry -> n		1126122	0		<			
ANR	1126259	Identifier	i		1126122	0					
ANR	1126260	PtrMemberAccess	entry -> n		1126122	1					
ANR	1126261	Identifier	entry		1126122	0					
ANR	1126262	Identifier	n		1126122	1					
ANR	1126263	UnaryExpression	++ i	220:27:4804:4806	1126122	2	True				
ANR	1126264	IncDec	++		1126122	0					
ANR	1126265	Identifier	i		1126122	1					
ANR	1126266	CompoundStatement		25:2:579:609	1126122	3					
ANR	1126267	IdentifierDeclStatement	int len = 0 ;	221:2:4813:4824	1126122	0	True				
ANR	1126268	IdentifierDecl	len = 0		1126122	0					
ANR	1126269	IdentifierDeclType	int		1126122	0					
ANR	1126270	Identifier	len		1126122	1					
ANR	1126271	AssignmentExpression	len = 0		1126122	2		=			
ANR	1126272	Identifier	len		1126122	0					
ANR	1126273	PrimaryExpression	0		1126122	1					
ANR	1126274	IdentifierDeclStatement	const int c = entry -> cp_932 [ i ] ;	222:2:4828:4858	1126122	1	True				
ANR	1126275	IdentifierDecl	c = entry -> cp_932 [ i ]		1126122	0					
ANR	1126276	IdentifierDeclType	const int		1126122	0					
ANR	1126277	Identifier	c		1126122	1					
ANR	1126278	AssignmentExpression	c = entry -> cp_932 [ i ]		1126122	2		=			
ANR	1126279	Identifier	c		1126122	0					
ANR	1126280	ArrayIndexing	entry -> cp_932 [ i ]		1126122	1					
ANR	1126281	PtrMemberAccess	entry -> cp_932		1126122	0					
ANR	1126282	Identifier	entry		1126122	0					
ANR	1126283	Identifier	cp_932		1126122	1					
ANR	1126284	Identifier	i		1126122	1					
ANR	1126285	IfStatement	if ( c >= 0x100 )		1126122	2					
ANR	1126286	Condition	c >= 0x100	223:6:4866:4875	1126122	0	True				
ANR	1126287	RelationalExpression	c >= 0x100		1126122	0		>=			
ANR	1126288	Identifier	c		1126122	0					
ANR	1126289	PrimaryExpression	0x100		1126122	1					
ANR	1126290	CompoundStatement		26:18:629:629	1126122	1					
ANR	1126291	ExpressionStatement	len = 2	224:3:4883:4890	1126122	0	True				
ANR	1126292	AssignmentExpression	len = 2		1126122	0		=			
ANR	1126293	Identifier	len		1126122	0					
ANR	1126294	PrimaryExpression	2		1126122	1					
ANR	1126295	ExpressionStatement	"sprintf ( buf_cp932 , ""%%%02x%%%02x"" , ( c >> 8 ) & 0xff , c & 0xff )"	225:3:4895:4956	1126122	1	True				
ANR	1126296	CallExpression	"sprintf ( buf_cp932 , ""%%%02x%%%02x"" , ( c >> 8 ) & 0xff , c & 0xff )"		1126122	0					
ANR	1126297	Callee	sprintf		1126122	0					
ANR	1126298	Identifier	sprintf		1126122	0					
ANR	1126299	ArgumentList	buf_cp932		1126122	1					
ANR	1126300	Argument	buf_cp932		1126122	0					
ANR	1126301	Identifier	buf_cp932		1126122	0					
ANR	1126302	Argument	"""%%%02x%%%02x"""		1126122	1					
ANR	1126303	PrimaryExpression	"""%%%02x%%%02x"""		1126122	0					
ANR	1126304	Argument	( c >> 8 ) & 0xff		1126122	2					
ANR	1126305	BitAndExpression	( c >> 8 ) & 0xff		1126122	0		&			
ANR	1126306	ShiftExpression	c >> 8		1126122	0		>>			
ANR	1126307	Identifier	c		1126122	0					
ANR	1126308	PrimaryExpression	8		1126122	1					
ANR	1126309	PrimaryExpression	0xff		1126122	1					
ANR	1126310	Argument	c & 0xff		1126122	3					
ANR	1126311	BitAndExpression	c & 0xff		1126122	0		&			
ANR	1126312	Identifier	c		1126122	0					
ANR	1126313	PrimaryExpression	0xff		1126122	1					
ANR	1126314	ElseStatement	else		1126122	0					
ANR	1126315	CompoundStatement		29:9:718:718	1126122	0					
ANR	1126316	ExpressionStatement	len = 1	227:3:4972:4979	1126122	0	True				
ANR	1126317	AssignmentExpression	len = 1		1126122	0		=			
ANR	1126318	Identifier	len		1126122	0					
ANR	1126319	PrimaryExpression	1		1126122	1					
ANR	1126320	ExpressionStatement	"sprintf ( buf_cp932 , ""%%%02x"" , c )"	228:3:4984:5015	1126122	1	True				
ANR	1126321	CallExpression	"sprintf ( buf_cp932 , ""%%%02x"" , c )"		1126122	0					
ANR	1126322	Callee	sprintf		1126122	0					
ANR	1126323	Identifier	sprintf		1126122	0					
ANR	1126324	ArgumentList	buf_cp932		1126122	1					
ANR	1126325	Argument	buf_cp932		1126122	0					
ANR	1126326	Identifier	buf_cp932		1126122	0					
ANR	1126327	Argument	"""%%%02x"""		1126122	1					
ANR	1126328	PrimaryExpression	"""%%%02x"""		1126122	0					
ANR	1126329	Argument	c		1126122	2					
ANR	1126330	Identifier	c		1126122	0					
ANR	1126331	ExpressionStatement	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp932 , len )"	230:2:5023:5087	1126122	3	True				
ANR	1126332	CallExpression	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp932 , len )"		1126122	0					
ANR	1126333	Callee	printf		1126122	0					
ANR	1126334	Identifier	printf		1126122	0					
ANR	1126335	ArgumentList	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		1126122	1					
ANR	1126336	Argument	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		1126122	0					
ANR	1126337	PrimaryExpression	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		1126122	0					
ANR	1126338	Argument	buf_cp932		1126122	1					
ANR	1126339	Identifier	buf_cp932		1126122	0					
ANR	1126340	Argument	len		1126122	2					
ANR	1126341	Identifier	len		1126122	0					
ANR	1126342	ExpressionStatement	"printf ( ""}\\n"" )"	233:1:5094:5107	1126122	21	True				
ANR	1126343	CallExpression	"printf ( ""}\\n"" )"		1126122	0					
ANR	1126344	Callee	printf		1126122	0					
ANR	1126345	Identifier	printf		1126122	0					
ANR	1126346	ArgumentList	"""}\\n"""		1126122	1					
ANR	1126347	Argument	"""}\\n"""		1126122	0					
ANR	1126348	PrimaryExpression	"""}\\n"""		1126122	0					
ANR	1126349	ReturnType	static void		1126122	1					
ANR	1126350	Identifier	to_cp932_visitor		1126122	2					
ANR	1126351	ParameterList	const struct mappings_entry * entry		1126122	3					
ANR	1126352	Parameter	const struct mappings_entry * entry	197:29:4212:4245	1126122	0	True				
ANR	1126353	ParameterType	const struct mappings_entry *		1126122	0					
ANR	1126354	Identifier	entry		1126122	1					
ANR	1126355	CFGEntryNode	ENTRY		1126122		True				
ANR	1126356	CFGExitNode	EXIT		1126122		True				
ANR	1126357	Symbol	entry -> cp_uni		1126122						
ANR	1126358	Symbol	c		1126122						
ANR	1126359	Symbol	buf_cp932		1126122						
ANR	1126360	Symbol	* * entry		1126122						
ANR	1126361	Symbol	utf32_utf8		1126122						
ANR	1126362	Symbol	* entry -> cp_932		1126122						
ANR	1126363	Symbol	i		1126122						
ANR	1126364	Symbol	* c		1126122						
ANR	1126365	Symbol	entry -> n		1126122						
ANR	1126366	Symbol	buf_uni		1126122						
ANR	1126367	Symbol	entry		1126122						
ANR	1126368	Symbol	* i		1126122						
ANR	1126369	Symbol	len		1126122						
ANR	1126370	Symbol	entry -> cp_932		1126122						
ANR	1126371	Symbol	* buf_uni		1126122						
ANR	1126372	Symbol	* entry		1126122						
ANR	1126373	Function	from_cp932_visitor	236:0:5112:5983							
ANR	1126374	FunctionDef	from_cp932_visitor (const struct mappings_entry * entry)		1126373	0					
ANR	1126375	CompoundStatement		237:0:5179:5983	1126373	0					
ANR	1126376	IdentifierDeclStatement	"char buf_uni [ 32 ] , buf_cp932 [ 8 ] ;"	238:1:5182:5212	1126373	0	True				
ANR	1126377	IdentifierDecl	buf_uni [ 32 ]		1126373	0					
ANR	1126378	IdentifierDeclType	char [ 32 ]		1126373	0					
ANR	1126379	Identifier	buf_uni		1126373	1					
ANR	1126380	PrimaryExpression	32		1126373	2					
ANR	1126381	IdentifierDecl	buf_cp932 [ 8 ]		1126373	1					
ANR	1126382	IdentifierDeclType	char [ 8 ]		1126373	0					
ANR	1126383	Identifier	buf_cp932		1126373	1					
ANR	1126384	PrimaryExpression	8		1126373	2					
ANR	1126385	IdentifierDeclStatement	"int i , len ;"	239:1:5215:5225	1126373	1	True				
ANR	1126386	IdentifierDecl	i		1126373	0					
ANR	1126387	IdentifierDeclType	int		1126373	0					
ANR	1126388	Identifier	i		1126373	1					
ANR	1126389	IdentifierDecl	len		1126373	1					
ANR	1126390	IdentifierDeclType	int		1126373	0					
ANR	1126391	Identifier	len		1126373	1					
ANR	1126392	IfStatement	if ( entry -> cp_uni < 32 || entry -> cp_uni == 127 )		1126373	2					
ANR	1126393	Condition	entry -> cp_uni < 32 || entry -> cp_uni == 127	241:5:5233:5274	1126373	0	True				
ANR	1126394	OrExpression	entry -> cp_uni < 32 || entry -> cp_uni == 127		1126373	0		||			
ANR	1126395	RelationalExpression	entry -> cp_uni < 32		1126373	0		<			
ANR	1126396	PtrMemberAccess	entry -> cp_uni		1126373	0					
ANR	1126397	Identifier	entry		1126373	0					
ANR	1126398	Identifier	cp_uni		1126373	1					
ANR	1126399	PrimaryExpression	32		1126373	1					
ANR	1126400	EqualityExpression	entry -> cp_uni == 127		1126373	1		==			
ANR	1126401	PtrMemberAccess	entry -> cp_uni		1126373	0					
ANR	1126402	Identifier	entry		1126373	0					
ANR	1126403	Identifier	cp_uni		1126373	1					
ANR	1126404	PrimaryExpression	127		1126373	1					
ANR	1126405	ReturnStatement	return ;	242:2:5279:5285	1126373	1	True				
ANR	1126406	ExpressionStatement	"len = utf32_utf8 ( buf_uni , entry -> cp_uni )"	244:1:5289:5329	1126373	3	True				
ANR	1126407	AssignmentExpression	"len = utf32_utf8 ( buf_uni , entry -> cp_uni )"		1126373	0		=			
ANR	1126408	Identifier	len		1126373	0					
ANR	1126409	CallExpression	"utf32_utf8 ( buf_uni , entry -> cp_uni )"		1126373	1					
ANR	1126410	Callee	utf32_utf8		1126373	0					
ANR	1126411	Identifier	utf32_utf8		1126373	0					
ANR	1126412	ArgumentList	buf_uni		1126373	1					
ANR	1126413	Argument	buf_uni		1126373	0					
ANR	1126414	Identifier	buf_uni		1126373	0					
ANR	1126415	Argument	entry -> cp_uni		1126373	1					
ANR	1126416	PtrMemberAccess	entry -> cp_uni		1126373	0					
ANR	1126417	Identifier	entry		1126373	0					
ANR	1126418	Identifier	cp_uni		1126373	1					
ANR	1126419	ExpressionStatement	buf_uni [ len * 3 ] = '\\0'	245:1:5332:5355	1126373	4	True				
ANR	1126420	AssignmentExpression	buf_uni [ len * 3 ] = '\\0'		1126373	0		=			
ANR	1126421	ArrayIndexing	buf_uni [ len * 3 ]		1126373	0					
ANR	1126422	Identifier	buf_uni		1126373	0					
ANR	1126423	MultiplicativeExpression	len * 3		1126373	1		*			
ANR	1126424	Identifier	len		1126373	0					
ANR	1126425	PrimaryExpression	3		1126373	1					
ANR	1126426	PrimaryExpression	'\\0'		1126373	1					
ANR	1126427	ExpressionStatement	i = len	246:1:5358:5365	1126373	5	True				
ANR	1126428	AssignmentExpression	i = len		1126373	0		=			
ANR	1126429	Identifier	i		1126373	0					
ANR	1126430	Identifier	len		1126373	1					
ANR	1126431	WhileStatement	while ( -- i >= 0 )		1126373	6					
ANR	1126432	Condition	-- i >= 0	247:8:5375:5382	1126373	0	True				
ANR	1126433	RelationalExpression	-- i >= 0		1126373	0		>=			
ANR	1126434	UnaryExpression	-- i		1126373	0					
ANR	1126435	IncDec	--		1126373	0					
ANR	1126436	Identifier	i		1126373	1					
ANR	1126437	PrimaryExpression	0		1126373	1					
ANR	1126438	CompoundStatement		12:2:209:256	1126373	1					
ANR	1126439	IdentifierDeclStatement	unsigned char c = ( ( unsigned char * ) buf_uni ) [ i ] ;	248:2:5389:5436	1126373	0	True				
ANR	1126440	IdentifierDecl	c = ( ( unsigned char * ) buf_uni ) [ i ]		1126373	0					
ANR	1126441	IdentifierDeclType	unsigned char		1126373	0					
ANR	1126442	Identifier	c		1126373	1					
ANR	1126443	AssignmentExpression	c = ( ( unsigned char * ) buf_uni ) [ i ]		1126373	2		=			
ANR	1126444	Identifier	c		1126373	0					
ANR	1126445	ArrayIndexing	( ( unsigned char * ) buf_uni ) [ i ]		1126373	1					
ANR	1126446	CastExpression	( unsigned char * ) buf_uni		1126373	0					
ANR	1126447	CastTarget	unsigned char *		1126373	0					
ANR	1126448	Identifier	buf_uni		1126373	1					
ANR	1126449	Identifier	i		1126373	1					
ANR	1126450	ExpressionStatement	buf_uni [ i * 3 ] = '%'	249:2:5440:5460	1126373	1	True				
ANR	1126451	AssignmentExpression	buf_uni [ i * 3 ] = '%'		1126373	0		=			
ANR	1126452	ArrayIndexing	buf_uni [ i * 3 ]		1126373	0					
ANR	1126453	Identifier	buf_uni		1126373	0					
ANR	1126454	MultiplicativeExpression	i * 3		1126373	1		*			
ANR	1126455	Identifier	i		1126373	0					
ANR	1126456	PrimaryExpression	3		1126373	1					
ANR	1126457	PrimaryExpression	'%'		1126373	1					
ANR	1126458	ExpressionStatement	"buf_uni [ i * 3 + 1 ] = ""0123456789abcdef"" [ c >> 4 ]"	250:2:5464:5511	1126373	2	True				
ANR	1126459	AssignmentExpression	"buf_uni [ i * 3 + 1 ] = ""0123456789abcdef"" [ c >> 4 ]"		1126373	0		=			
ANR	1126460	ArrayIndexing	buf_uni [ i * 3 + 1 ]		1126373	0					
ANR	1126461	Identifier	buf_uni		1126373	0					
ANR	1126462	AdditiveExpression	i * 3 + 1		1126373	1		+			
ANR	1126463	MultiplicativeExpression	i * 3		1126373	0		*			
ANR	1126464	Identifier	i		1126373	0					
ANR	1126465	PrimaryExpression	3		1126373	1					
ANR	1126466	PrimaryExpression	1		1126373	1					
ANR	1126467	ArrayIndexing	"""0123456789abcdef"" [ c >> 4 ]"		1126373	1					
ANR	1126468	PrimaryExpression	"""0123456789abcdef"""		1126373	0					
ANR	1126469	ShiftExpression	c >> 4		1126373	1		>>			
ANR	1126470	Identifier	c		1126373	0					
ANR	1126471	PrimaryExpression	4		1126373	1					
ANR	1126472	ExpressionStatement	"buf_uni [ i * 3 + 2 ] = ""0123456789abcdef"" [ c & 15 ]"	251:2:5515:5562	1126373	3	True				
ANR	1126473	AssignmentExpression	"buf_uni [ i * 3 + 2 ] = ""0123456789abcdef"" [ c & 15 ]"		1126373	0		=			
ANR	1126474	ArrayIndexing	buf_uni [ i * 3 + 2 ]		1126373	0					
ANR	1126475	Identifier	buf_uni		1126373	0					
ANR	1126476	AdditiveExpression	i * 3 + 2		1126373	1		+			
ANR	1126477	MultiplicativeExpression	i * 3		1126373	0		*			
ANR	1126478	Identifier	i		1126373	0					
ANR	1126479	PrimaryExpression	3		1126373	1					
ANR	1126480	PrimaryExpression	2		1126373	1					
ANR	1126481	ArrayIndexing	"""0123456789abcdef"" [ c & 15 ]"		1126373	1					
ANR	1126482	PrimaryExpression	"""0123456789abcdef"""		1126373	0					
ANR	1126483	BitAndExpression	c & 15		1126373	1		&			
ANR	1126484	Identifier	c		1126373	0					
ANR	1126485	PrimaryExpression	15		1126373	1					
ANR	1126486	ForStatement	for ( i = 0 ; i < entry -> n ; ++ i )		1126373	7					
ANR	1126487	ForInit	i = 0 ;	254:6:5574:5579	1126373	0	True				
ANR	1126488	AssignmentExpression	i = 0		1126373	0		=			
ANR	1126489	Identifier	i		1126373	0					
ANR	1126490	PrimaryExpression	0		1126373	1					
ANR	1126491	Condition	i < entry -> n	254:13:5581:5592	1126373	1	True				
ANR	1126492	RelationalExpression	i < entry -> n		1126373	0		<			
ANR	1126493	Identifier	i		1126373	0					
ANR	1126494	PtrMemberAccess	entry -> n		1126373	1					
ANR	1126495	Identifier	entry		1126373	0					
ANR	1126496	Identifier	n		1126373	1					
ANR	1126497	UnaryExpression	++ i	254:27:5595:5597	1126373	2	True				
ANR	1126498	IncDec	++		1126373	0					
ANR	1126499	Identifier	i		1126373	1					
ANR	1126500	CompoundStatement		19:2:424:454	1126373	3					
ANR	1126501	IdentifierDeclStatement	const int c = entry -> cp_932 [ i ] ;	255:2:5604:5634	1126373	0	True				
ANR	1126502	IdentifierDecl	c = entry -> cp_932 [ i ]		1126373	0					
ANR	1126503	IdentifierDeclType	const int		1126373	0					
ANR	1126504	Identifier	c		1126373	1					
ANR	1126505	AssignmentExpression	c = entry -> cp_932 [ i ]		1126373	2		=			
ANR	1126506	Identifier	c		1126373	0					
ANR	1126507	ArrayIndexing	entry -> cp_932 [ i ]		1126373	1					
ANR	1126508	PtrMemberAccess	entry -> cp_932		1126373	0					
ANR	1126509	Identifier	entry		1126373	0					
ANR	1126510	Identifier	cp_932		1126373	1					
ANR	1126511	Identifier	i		1126373	1					
ANR	1126512	IfStatement	if ( c >= 0x100 )		1126373	1					
ANR	1126513	Condition	c >= 0x100	256:6:5642:5651	1126373	0	True				
ANR	1126514	RelationalExpression	c >= 0x100		1126373	0		>=			
ANR	1126515	Identifier	c		1126373	0					
ANR	1126516	PrimaryExpression	0x100		1126373	1					
ANR	1126517	ExpressionStatement	"sprintf ( buf_cp932 , ""\\\\x%02x\\\\x%02x"" , ( c >> 8 ) & 0xff , c & 0xff )"	257:3:5657:5720	1126373	1	True				
ANR	1126518	CallExpression	"sprintf ( buf_cp932 , ""\\\\x%02x\\\\x%02x"" , ( c >> 8 ) & 0xff , c & 0xff )"		1126373	0					
ANR	1126519	Callee	sprintf		1126373	0					
ANR	1126520	Identifier	sprintf		1126373	0					
ANR	1126521	ArgumentList	buf_cp932		1126373	1					
ANR	1126522	Argument	buf_cp932		1126373	0					
ANR	1126523	Identifier	buf_cp932		1126373	0					
ANR	1126524	Argument	"""\\\\x%02x\\\\x%02x"""		1126373	1					
ANR	1126525	PrimaryExpression	"""\\\\x%02x\\\\x%02x"""		1126373	0					
ANR	1126526	Argument	( c >> 8 ) & 0xff		1126373	2					
ANR	1126527	BitAndExpression	( c >> 8 ) & 0xff		1126373	0		&			
ANR	1126528	ShiftExpression	c >> 8		1126373	0		>>			
ANR	1126529	Identifier	c		1126373	0					
ANR	1126530	PrimaryExpression	8		1126373	1					
ANR	1126531	PrimaryExpression	0xff		1126373	1					
ANR	1126532	Argument	c & 0xff		1126373	3					
ANR	1126533	BitAndExpression	c & 0xff		1126373	0		&			
ANR	1126534	Identifier	c		1126373	0					
ANR	1126535	PrimaryExpression	0xff		1126373	1					
ANR	1126536	ElseStatement	else		1126373	0					
ANR	1126537	ExpressionStatement	"sprintf ( buf_cp932 , ""\\\\x%02x"" , c )"	259:3:5732:5764	1126373	0	True				
ANR	1126538	CallExpression	"sprintf ( buf_cp932 , ""\\\\x%02x"" , c )"		1126373	0					
ANR	1126539	Callee	sprintf		1126373	0					
ANR	1126540	Identifier	sprintf		1126373	0					
ANR	1126541	ArgumentList	buf_cp932		1126373	1					
ANR	1126542	Argument	buf_cp932		1126373	0					
ANR	1126543	Identifier	buf_cp932		1126373	0					
ANR	1126544	Argument	"""\\\\x%02x"""		1126373	1					
ANR	1126545	PrimaryExpression	"""\\\\x%02x"""		1126373	0					
ANR	1126546	Argument	c		1126373	2					
ANR	1126547	Identifier	c		1126373	0					
ANR	1126548	Statement	printf	260:2:5768:5773	1126373	2	True				
ANR	1126549	Statement	(	260:8:5774:5774	1126373	3	True				
ANR	1126550	Statement	"""set test \\""U+%06X\\""\\n"""	260:9:5775:5797	1126373	4	True				
ANR	1126551	Statement	"""send -- \\""%s\\r\\""\\n"""	261:6:5805:5824	1126373	5	True				
ANR	1126552	Statement	"""sleep 0.001\\n"""	262:6:5832:5846	1126373	6	True				
ANR	1126553	Statement	"""expect {\\n"""	263:6:5854:5865	1126373	7	True				
ANR	1126554	Statement	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""	264:9:5876:5915	1126373	8	True				
ANR	1126555	Statement	"""}\\n"""	265:9:5926:5930	1126373	9	True				
ANR	1126556	Statement	","	265:14:5931:5931	1126373	10	True				
ANR	1126557	Statement	entry	266:6:5939:5943	1126373	11	True				
ANR	1126558	Statement	->	266:11:5944:5945	1126373	12	True				
ANR	1126559	Statement	cp_uni	266:13:5946:5951	1126373	13	True				
ANR	1126560	Statement	","	266:19:5952:5952	1126373	14	True				
ANR	1126561	Statement	buf_cp932	266:21:5954:5962	1126373	15	True				
ANR	1126562	Statement	","	266:30:5963:5963	1126373	16	True				
ANR	1126563	Statement	buf_uni	266:32:5965:5971	1126373	17	True				
ANR	1126564	Statement	","	266:39:5972:5972	1126373	18	True				
ANR	1126565	Statement	len	266:41:5974:5976	1126373	19	True				
ANR	1126566	Statement	)	266:44:5977:5977	1126373	20	True				
ANR	1126567	ExpressionStatement		266:45:5978:5978	1126373	21	True				
ANR	1126568	ReturnType	static void		1126373	1					
ANR	1126569	Identifier	from_cp932_visitor		1126373	2					
ANR	1126570	ParameterList	const struct mappings_entry * entry		1126373	3					
ANR	1126571	Parameter	const struct mappings_entry * entry	236:31:5143:5176	1126373	0	True				
ANR	1126572	ParameterType	const struct mappings_entry *		1126373	0					
ANR	1126573	Identifier	entry		1126373	1					
ANR	1126574	CFGEntryNode	ENTRY		1126373		True				
ANR	1126575	CFGExitNode	EXIT		1126373		True				
ANR	1126576	Symbol	entry -> cp_uni		1126373						
ANR	1126577	Symbol	c		1126373						
ANR	1126578	Symbol	buf_cp932		1126373						
ANR	1126579	Symbol	* * entry		1126373						
ANR	1126580	Symbol	utf32_utf8		1126373						
ANR	1126581	Symbol	* entry -> cp_932		1126373						
ANR	1126582	Symbol	i		1126373						
ANR	1126583	Symbol	* c		1126373						
ANR	1126584	Symbol	entry -> n		1126373						
ANR	1126585	Symbol	buf_uni		1126373						
ANR	1126586	Symbol	entry		1126373						
ANR	1126587	Symbol	* i		1126373						
ANR	1126588	Symbol	len		1126373						
ANR	1126589	Symbol	entry -> cp_932		1126373						
ANR	1126590	Symbol	* buf_uni		1126373						
ANR	1126591	Symbol	* entry		1126373						
ANR	1126592	Symbol	* len		1126373						
ANR	1126593	Function	to_cp50220_visitor	270:0:5986:7852							
ANR	1126594	FunctionDef	to_cp50220_visitor (const struct mappings_entry * entry)		1126593	0					
ANR	1126595	CompoundStatement		271:0:6053:7852	1126593	0					
ANR	1126596	IdentifierDeclStatement	"char buf_uni [ 32 ] , buf_cp50220 [ 32 ] ;"	272:1:6056:6089	1126593	0	True				
ANR	1126597	IdentifierDecl	buf_uni [ 32 ]		1126593	0					
ANR	1126598	IdentifierDeclType	char [ 32 ]		1126593	0					
ANR	1126599	Identifier	buf_uni		1126593	1					
ANR	1126600	PrimaryExpression	32		1126593	2					
ANR	1126601	IdentifierDecl	buf_cp50220 [ 32 ]		1126593	1					
ANR	1126602	IdentifierDeclType	char [ 32 ]		1126593	0					
ANR	1126603	Identifier	buf_cp50220		1126593	1					
ANR	1126604	PrimaryExpression	32		1126593	2					
ANR	1126605	IdentifierDeclStatement	int i ;	273:1:6092:6097	1126593	1	True				
ANR	1126606	IdentifierDecl	i		1126593	0					
ANR	1126607	IdentifierDeclType	int		1126593	0					
ANR	1126608	Identifier	i		1126593	1					
ANR	1126609	IfStatement	if ( entry -> cp_uni < 32 || entry -> cp_uni == 127 )		1126593	2					
ANR	1126610	Condition	entry -> cp_uni < 32 || entry -> cp_uni == 127	275:5:6105:6146	1126593	0	True				
ANR	1126611	OrExpression	entry -> cp_uni < 32 || entry -> cp_uni == 127		1126593	0		||			
ANR	1126612	RelationalExpression	entry -> cp_uni < 32		1126593	0		<			
ANR	1126613	PtrMemberAccess	entry -> cp_uni		1126593	0					
ANR	1126614	Identifier	entry		1126593	0					
ANR	1126615	Identifier	cp_uni		1126593	1					
ANR	1126616	PrimaryExpression	32		1126593	1					
ANR	1126617	EqualityExpression	entry -> cp_uni == 127		1126593	1		==			
ANR	1126618	PtrMemberAccess	entry -> cp_uni		1126593	0					
ANR	1126619	Identifier	entry		1126593	0					
ANR	1126620	Identifier	cp_uni		1126593	1					
ANR	1126621	PrimaryExpression	127		1126593	1					
ANR	1126622	ReturnStatement	return ;	276:2:6151:6157	1126593	1	True				
ANR	1126623	ExpressionStatement	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"	278:1:6161:6199	1126593	3	True				
ANR	1126624	AssignmentExpression	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"		1126593	0		=			
ANR	1126625	Identifier	i		1126593	0					
ANR	1126626	CallExpression	"utf32_utf8 ( buf_uni , entry -> cp_uni )"		1126593	1					
ANR	1126627	Callee	utf32_utf8		1126593	0					
ANR	1126628	Identifier	utf32_utf8		1126593	0					
ANR	1126629	ArgumentList	buf_uni		1126593	1					
ANR	1126630	Argument	buf_uni		1126593	0					
ANR	1126631	Identifier	buf_uni		1126593	0					
ANR	1126632	Argument	entry -> cp_uni		1126593	1					
ANR	1126633	PtrMemberAccess	entry -> cp_uni		1126593	0					
ANR	1126634	Identifier	entry		1126593	0					
ANR	1126635	Identifier	cp_uni		1126593	1					
ANR	1126636	ExpressionStatement	buf_uni [ i * 4 ] = '\\0'	279:1:6202:6223	1126593	4	True				
ANR	1126637	AssignmentExpression	buf_uni [ i * 4 ] = '\\0'		1126593	0		=			
ANR	1126638	ArrayIndexing	buf_uni [ i * 4 ]		1126593	0					
ANR	1126639	Identifier	buf_uni		1126593	0					
ANR	1126640	MultiplicativeExpression	i * 4		1126593	1		*			
ANR	1126641	Identifier	i		1126593	0					
ANR	1126642	PrimaryExpression	4		1126593	1					
ANR	1126643	PrimaryExpression	'\\0'		1126593	1					
ANR	1126644	WhileStatement	while ( -- i >= 0 )		1126593	5					
ANR	1126645	Condition	-- i >= 0	280:8:6233:6240	1126593	0	True				
ANR	1126646	RelationalExpression	-- i >= 0		1126593	0		>=			
ANR	1126647	UnaryExpression	-- i		1126593	0					
ANR	1126648	IncDec	--		1126593	0					
ANR	1126649	Identifier	i		1126593	1					
ANR	1126650	PrimaryExpression	0		1126593	1					
ANR	1126651	CompoundStatement		11:2:193:240	1126593	1					
ANR	1126652	IdentifierDeclStatement	unsigned char c = ( ( unsigned char * ) buf_uni ) [ i ] ;	281:2:6247:6294	1126593	0	True				
ANR	1126653	IdentifierDecl	c = ( ( unsigned char * ) buf_uni ) [ i ]		1126593	0					
ANR	1126654	IdentifierDeclType	unsigned char		1126593	0					
ANR	1126655	Identifier	c		1126593	1					
ANR	1126656	AssignmentExpression	c = ( ( unsigned char * ) buf_uni ) [ i ]		1126593	2		=			
ANR	1126657	Identifier	c		1126593	0					
ANR	1126658	ArrayIndexing	( ( unsigned char * ) buf_uni ) [ i ]		1126593	1					
ANR	1126659	CastExpression	( unsigned char * ) buf_uni		1126593	0					
ANR	1126660	CastTarget	unsigned char *		1126593	0					
ANR	1126661	Identifier	buf_uni		1126593	1					
ANR	1126662	Identifier	i		1126593	1					
ANR	1126663	ExpressionStatement	buf_uni [ i * 4 ] = '\\\\'	282:2:6298:6319	1126593	1	True				
ANR	1126664	AssignmentExpression	buf_uni [ i * 4 ] = '\\\\'		1126593	0		=			
ANR	1126665	ArrayIndexing	buf_uni [ i * 4 ]		1126593	0					
ANR	1126666	Identifier	buf_uni		1126593	0					
ANR	1126667	MultiplicativeExpression	i * 4		1126593	1		*			
ANR	1126668	Identifier	i		1126593	0					
ANR	1126669	PrimaryExpression	4		1126593	1					
ANR	1126670	PrimaryExpression	'\\\\'		1126593	1					
ANR	1126671	ExpressionStatement	buf_uni [ i * 4 + 1 ] = 'x'	283:2:6323:6347	1126593	2	True				
ANR	1126672	AssignmentExpression	buf_uni [ i * 4 + 1 ] = 'x'		1126593	0		=			
ANR	1126673	ArrayIndexing	buf_uni [ i * 4 + 1 ]		1126593	0					
ANR	1126674	Identifier	buf_uni		1126593	0					
ANR	1126675	AdditiveExpression	i * 4 + 1		1126593	1		+			
ANR	1126676	MultiplicativeExpression	i * 4		1126593	0		*			
ANR	1126677	Identifier	i		1126593	0					
ANR	1126678	PrimaryExpression	4		1126593	1					
ANR	1126679	PrimaryExpression	1		1126593	1					
ANR	1126680	PrimaryExpression	'x'		1126593	1					
ANR	1126681	ExpressionStatement	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"	284:2:6351:6398	1126593	3	True				
ANR	1126682	AssignmentExpression	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"		1126593	0		=			
ANR	1126683	ArrayIndexing	buf_uni [ i * 4 + 2 ]		1126593	0					
ANR	1126684	Identifier	buf_uni		1126593	0					
ANR	1126685	AdditiveExpression	i * 4 + 2		1126593	1		+			
ANR	1126686	MultiplicativeExpression	i * 4		1126593	0		*			
ANR	1126687	Identifier	i		1126593	0					
ANR	1126688	PrimaryExpression	4		1126593	1					
ANR	1126689	PrimaryExpression	2		1126593	1					
ANR	1126690	ArrayIndexing	"""0123456789abcdef"" [ c >> 4 ]"		1126593	1					
ANR	1126691	PrimaryExpression	"""0123456789abcdef"""		1126593	0					
ANR	1126692	ShiftExpression	c >> 4		1126593	1		>>			
ANR	1126693	Identifier	c		1126593	0					
ANR	1126694	PrimaryExpression	4		1126593	1					
ANR	1126695	ExpressionStatement	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"	285:2:6402:6449	1126593	4	True				
ANR	1126696	AssignmentExpression	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"		1126593	0		=			
ANR	1126697	ArrayIndexing	buf_uni [ i * 4 + 3 ]		1126593	0					
ANR	1126698	Identifier	buf_uni		1126593	0					
ANR	1126699	AdditiveExpression	i * 4 + 3		1126593	1		+			
ANR	1126700	MultiplicativeExpression	i * 4		1126593	0		*			
ANR	1126701	Identifier	i		1126593	0					
ANR	1126702	PrimaryExpression	4		1126593	1					
ANR	1126703	PrimaryExpression	3		1126593	1					
ANR	1126704	ArrayIndexing	"""0123456789abcdef"" [ c & 15 ]"		1126593	1					
ANR	1126705	PrimaryExpression	"""0123456789abcdef"""		1126593	0					
ANR	1126706	BitAndExpression	c & 15		1126593	1		&			
ANR	1126707	Identifier	c		1126593	0					
ANR	1126708	PrimaryExpression	15		1126593	1					
ANR	1126709	Statement	printf	288:1:6456:6461	1126593	6	True				
ANR	1126710	Statement	(	288:7:6462:6462	1126593	7	True				
ANR	1126711	Statement	"""set test \\""U+%06X\\""\\n"""	288:8:6463:6485	1126593	8	True				
ANR	1126712	Statement	"""send -- \\""%s\\r\\""\\n"""	289:8:6495:6514	1126593	9	True				
ANR	1126713	Statement	"""sleep 0.001\\n"""	290:5:6521:6535	1126593	10	True				
ANR	1126714	Statement	"""expect {\\n"""	291:8:6545:6556	1126593	11	True				
ANR	1126715	Statement	","	291:20:6557:6557	1126593	12	True				
ANR	1126716	Statement	entry	291:22:6559:6563	1126593	13	True				
ANR	1126717	Statement	->	291:27:6564:6565	1126593	14	True				
ANR	1126718	Statement	cp_uni	291:29:6566:6571	1126593	15	True				
ANR	1126719	Statement	","	291:35:6572:6572	1126593	16	True				
ANR	1126720	Statement	buf_uni	291:37:6574:6580	1126593	17	True				
ANR	1126721	Statement	)	291:44:6581:6581	1126593	18	True				
ANR	1126722	ExpressionStatement		291:45:6582:6582	1126593	19	True				
ANR	1126723	ForStatement	for ( i = 0 ; i < entry -> n ; ++ i )		1126593	20					
ANR	1126724	ForInit	i = 0 ;	293:6:6591:6596	1126593	0	True				
ANR	1126725	AssignmentExpression	i = 0		1126593	0		=			
ANR	1126726	Identifier	i		1126593	0					
ANR	1126727	PrimaryExpression	0		1126593	1					
ANR	1126728	Condition	i < entry -> n	293:13:6598:6609	1126593	1	True				
ANR	1126729	RelationalExpression	i < entry -> n		1126593	0		<			
ANR	1126730	Identifier	i		1126593	0					
ANR	1126731	PtrMemberAccess	entry -> n		1126593	1					
ANR	1126732	Identifier	entry		1126593	0					
ANR	1126733	Identifier	n		1126593	1					
ANR	1126734	UnaryExpression	++ i	293:27:6612:6614	1126593	2	True				
ANR	1126735	IncDec	++		1126593	0					
ANR	1126736	Identifier	i		1126593	1					
ANR	1126737	CompoundStatement		25:2:582:612	1126593	3					
ANR	1126738	IdentifierDeclStatement	int len = 0 ;	294:2:6621:6632	1126593	0	True				
ANR	1126739	IdentifierDecl	len = 0		1126593	0					
ANR	1126740	IdentifierDeclType	int		1126593	0					
ANR	1126741	Identifier	len		1126593	1					
ANR	1126742	AssignmentExpression	len = 0		1126593	2		=			
ANR	1126743	Identifier	len		1126593	0					
ANR	1126744	PrimaryExpression	0		1126593	1					
ANR	1126745	IdentifierDeclStatement	const int c = entry -> cp_932 [ i ] ;	295:2:6636:6666	1126593	1	True				
ANR	1126746	IdentifierDecl	c = entry -> cp_932 [ i ]		1126593	0					
ANR	1126747	IdentifierDeclType	const int		1126593	0					
ANR	1126748	Identifier	c		1126593	1					
ANR	1126749	AssignmentExpression	c = entry -> cp_932 [ i ]		1126593	2		=			
ANR	1126750	Identifier	c		1126593	0					
ANR	1126751	ArrayIndexing	entry -> cp_932 [ i ]		1126593	1					
ANR	1126752	PtrMemberAccess	entry -> cp_932		1126593	0					
ANR	1126753	Identifier	entry		1126593	0					
ANR	1126754	Identifier	cp_932		1126593	1					
ANR	1126755	Identifier	i		1126593	1					
ANR	1126756	IfStatement	if ( c >= 0xa1 && c < 0xe0 )		1126593	2					
ANR	1126757	Condition	c >= 0xa1 && c < 0xe0	296:6:6674:6694	1126593	0	True				
ANR	1126758	AndExpression	c >= 0xa1 && c < 0xe0		1126593	0		&&			
ANR	1126759	RelationalExpression	c >= 0xa1		1126593	0		>=			
ANR	1126760	Identifier	c		1126593	0					
ANR	1126761	PrimaryExpression	0xa1		1126593	1					
ANR	1126762	RelationalExpression	c < 0xe0		1126593	1		<			
ANR	1126763	Identifier	c		1126593	0					
ANR	1126764	PrimaryExpression	0xe0		1126593	1					
ANR	1126765	CompoundStatement		37:3:1239:1278	1126593	1					
ANR	1126766	Statement	static	297:3:6702:6707	1126593	0	True				
ANR	1126767	IdentifierDeclStatement	"const int jisx0208_tl_map [ ] = { 0x0000 , 0x2123 , 0x2156 , 0x2157 , 0x2122 , 0x2126 , 0x2572 , 0x2521 , 0x2523 , 0x2525 , 0x2527 , 0x2529 , 0x2563 , 0x2565 , 0x2567 , 0x2543 , 0x213c , 0x2522 , 0x2524 , 0x2526 , 0x2528 , 0x252a , 0x252b , 0x252d , 0x252f , 0x2531 , 0x2533 , 0x2535 , 0x2537 , 0x2539 , 0x253b , 0x253d , 0x253f , 0x2541 , 0x2544 , 0x2546 , 0x2548 , 0x254a , 0x254b , 0x254c , 0x254d , 0x254e , 0x254f , 0x2552 , 0x2555 , 0x2558 , 0x255b , 0x255e , 0x255f , 0x2560 , 0x2561 , 0x2562 , 0x2564 , 0x2566 , 0x2568 , 0x2569 , 0x256a , 0x256b , 0x256c , 0x256d , 0x256f , 0x2573 , 0x212b , 0x212c } ;"	297:10:6709:7288	1126593	1	True				
ANR	1126768	IdentifierDecl	"jisx0208_tl_map [ ] = { 0x0000 , 0x2123 , 0x2156 , 0x2157 , 0x2122 , 0x2126 , 0x2572 , 0x2521 , 0x2523 , 0x2525 , 0x2527 , 0x2529 , 0x2563 , 0x2565 , 0x2567 , 0x2543 , 0x213c , 0x2522 , 0x2524 , 0x2526 , 0x2528 , 0x252a , 0x252b , 0x252d , 0x252f , 0x2531 , 0x2533 , 0x2535 , 0x2537 , 0x2539 , 0x253b , 0x253d , 0x253f , 0x2541 , 0x2544 , 0x2546 , 0x2548 , 0x254a , 0x254b , 0x254c , 0x254d , 0x254e , 0x254f , 0x2552 , 0x2555 , 0x2558 , 0x255b , 0x255e , 0x255f , 0x2560 , 0x2561 , 0x2562 , 0x2564 , 0x2566 , 0x2568 , 0x2569 , 0x256a , 0x256b , 0x256c , 0x256d , 0x256f , 0x2573 , 0x212b , 0x212c }"		1126593	0					
ANR	1126769	IdentifierDeclType	const int [ ]		1126593	0					
ANR	1126770	Identifier	jisx0208_tl_map		1126593	1					
ANR	1126771	AssignmentExpression	"jisx0208_tl_map [ ] = { 0x0000 , 0x2123 , 0x2156 , 0x2157 , 0x2122 , 0x2126 , 0x2572 , 0x2521 , 0x2523 , 0x2525 , 0x2527 , 0x2529 , 0x2563 , 0x2565 , 0x2567 , 0x2543 , 0x213c , 0x2522 , 0x2524 , 0x2526 , 0x2528 , 0x252a , 0x252b , 0x252d , 0x252f , 0x2531 , 0x2533 , 0x2535 , 0x2537 , 0x2539 , 0x253b , 0x253d , 0x253f , 0x2541 , 0x2544 , 0x2546 , 0x2548 , 0x254a , 0x254b , 0x254c , 0x254d , 0x254e , 0x254f , 0x2552 , 0x2555 , 0x2558 , 0x255b , 0x255e , 0x255f , 0x2560 , 0x2561 , 0x2562 , 0x2564 , 0x2566 , 0x2568 , 0x2569 , 0x256a , 0x256b , 0x256c , 0x256d , 0x256f , 0x2573 , 0x212b , 0x212c }"		1126593	2		=			
ANR	1126772	Identifier	jisx0208_tl_map		1126593	0					
ANR	1126773	InitializerList	0x0000		1126593	1					
ANR	1126774	PrimaryExpression	0x0000		1126593	0					
ANR	1126775	PrimaryExpression	0x2123		1126593	1					
ANR	1126776	PrimaryExpression	0x2156		1126593	2					
ANR	1126777	PrimaryExpression	0x2157		1126593	3					
ANR	1126778	PrimaryExpression	0x2122		1126593	4					
ANR	1126779	PrimaryExpression	0x2126		1126593	5					
ANR	1126780	PrimaryExpression	0x2572		1126593	6					
ANR	1126781	PrimaryExpression	0x2521		1126593	7					
ANR	1126782	PrimaryExpression	0x2523		1126593	8					
ANR	1126783	PrimaryExpression	0x2525		1126593	9					
ANR	1126784	PrimaryExpression	0x2527		1126593	10					
ANR	1126785	PrimaryExpression	0x2529		1126593	11					
ANR	1126786	PrimaryExpression	0x2563		1126593	12					
ANR	1126787	PrimaryExpression	0x2565		1126593	13					
ANR	1126788	PrimaryExpression	0x2567		1126593	14					
ANR	1126789	PrimaryExpression	0x2543		1126593	15					
ANR	1126790	PrimaryExpression	0x213c		1126593	16					
ANR	1126791	PrimaryExpression	0x2522		1126593	17					
ANR	1126792	PrimaryExpression	0x2524		1126593	18					
ANR	1126793	PrimaryExpression	0x2526		1126593	19					
ANR	1126794	PrimaryExpression	0x2528		1126593	20					
ANR	1126795	PrimaryExpression	0x252a		1126593	21					
ANR	1126796	PrimaryExpression	0x252b		1126593	22					
ANR	1126797	PrimaryExpression	0x252d		1126593	23					
ANR	1126798	PrimaryExpression	0x252f		1126593	24					
ANR	1126799	PrimaryExpression	0x2531		1126593	25					
ANR	1126800	PrimaryExpression	0x2533		1126593	26					
ANR	1126801	PrimaryExpression	0x2535		1126593	27					
ANR	1126802	PrimaryExpression	0x2537		1126593	28					
ANR	1126803	PrimaryExpression	0x2539		1126593	29					
ANR	1126804	PrimaryExpression	0x253b		1126593	30					
ANR	1126805	PrimaryExpression	0x253d		1126593	31					
ANR	1126806	PrimaryExpression	0x253f		1126593	32					
ANR	1126807	PrimaryExpression	0x2541		1126593	33					
ANR	1126808	PrimaryExpression	0x2544		1126593	34					
ANR	1126809	PrimaryExpression	0x2546		1126593	35					
ANR	1126810	PrimaryExpression	0x2548		1126593	36					
ANR	1126811	PrimaryExpression	0x254a		1126593	37					
ANR	1126812	PrimaryExpression	0x254b		1126593	38					
ANR	1126813	PrimaryExpression	0x254c		1126593	39					
ANR	1126814	PrimaryExpression	0x254d		1126593	40					
ANR	1126815	PrimaryExpression	0x254e		1126593	41					
ANR	1126816	PrimaryExpression	0x254f		1126593	42					
ANR	1126817	PrimaryExpression	0x2552		1126593	43					
ANR	1126818	PrimaryExpression	0x2555		1126593	44					
ANR	1126819	PrimaryExpression	0x2558		1126593	45					
ANR	1126820	PrimaryExpression	0x255b		1126593	46					
ANR	1126821	PrimaryExpression	0x255e		1126593	47					
ANR	1126822	PrimaryExpression	0x255f		1126593	48					
ANR	1126823	PrimaryExpression	0x2560		1126593	49					
ANR	1126824	PrimaryExpression	0x2561		1126593	50					
ANR	1126825	PrimaryExpression	0x2562		1126593	51					
ANR	1126826	PrimaryExpression	0x2564		1126593	52					
ANR	1126827	PrimaryExpression	0x2566		1126593	53					
ANR	1126828	PrimaryExpression	0x2568		1126593	54					
ANR	1126829	PrimaryExpression	0x2569		1126593	55					
ANR	1126830	PrimaryExpression	0x256a		1126593	56					
ANR	1126831	PrimaryExpression	0x256b		1126593	57					
ANR	1126832	PrimaryExpression	0x256c		1126593	58					
ANR	1126833	PrimaryExpression	0x256d		1126593	59					
ANR	1126834	PrimaryExpression	0x256f		1126593	60					
ANR	1126835	PrimaryExpression	0x2573		1126593	61					
ANR	1126836	PrimaryExpression	0x212b		1126593	62					
ANR	1126837	PrimaryExpression	0x212c		1126593	63					
ANR	1126838	IdentifierDeclStatement	const int j = jisx0208_tl_map [ c - 0xa0 ] ;	307:3:7293:7332	1126593	2	True				
ANR	1126839	IdentifierDecl	j = jisx0208_tl_map [ c - 0xa0 ]		1126593	0					
ANR	1126840	IdentifierDeclType	const int		1126593	0					
ANR	1126841	Identifier	j		1126593	1					
ANR	1126842	AssignmentExpression	j = jisx0208_tl_map [ c - 0xa0 ]		1126593	2		=			
ANR	1126843	Identifier	j		1126593	0					
ANR	1126844	ArrayIndexing	jisx0208_tl_map [ c - 0xa0 ]		1126593	1					
ANR	1126845	Identifier	jisx0208_tl_map		1126593	0					
ANR	1126846	AdditiveExpression	c - 0xa0		1126593	1		-			
ANR	1126847	Identifier	c		1126593	0					
ANR	1126848	PrimaryExpression	0xa0		1126593	1					
ANR	1126849	ExpressionStatement	len = 8	308:3:7337:7344	1126593	3	True				
ANR	1126850	AssignmentExpression	len = 8		1126593	0		=			
ANR	1126851	Identifier	len		1126593	0					
ANR	1126852	PrimaryExpression	8		1126593	1					
ANR	1126853	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"	309:3:7349:7427	1126593	4	True				
ANR	1126854	CallExpression	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"		1126593	0					
ANR	1126855	Callee	sprintf		1126593	0					
ANR	1126856	Identifier	sprintf		1126593	0					
ANR	1126857	ArgumentList	buf_cp50220		1126593	1					
ANR	1126858	Argument	buf_cp50220		1126593	0					
ANR	1126859	Identifier	buf_cp50220		1126593	0					
ANR	1126860	Argument	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		1126593	1					
ANR	1126861	PrimaryExpression	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		1126593	0					
ANR	1126862	Argument	j >> 8		1126593	2					
ANR	1126863	ShiftExpression	j >> 8		1126593	0		>>			
ANR	1126864	Identifier	j		1126593	0					
ANR	1126865	PrimaryExpression	8		1126593	1					
ANR	1126866	Argument	j & 0xff		1126593	3					
ANR	1126867	BitAndExpression	j & 0xff		1126593	0		&			
ANR	1126868	Identifier	j		1126593	0					
ANR	1126869	PrimaryExpression	0xff		1126593	1					
ANR	1126870	ElseStatement	else		1126593	0					
ANR	1126871	IfStatement	if ( c >= 0x100 )		1126593	0					
ANR	1126872	Condition	c >= 0x100	310:13:7442:7451	1126593	0	True				
ANR	1126873	RelationalExpression	c >= 0x100		1126593	0		>=			
ANR	1126874	Identifier	c		1126593	0					
ANR	1126875	PrimaryExpression	0x100		1126593	1					
ANR	1126876	CompoundStatement		41:3:1405:1546	1126593	1					
ANR	1126877	IdentifierDeclStatement	const int j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 ) ;	311:3:7459:7600	1126593	0	True				
ANR	1126878	IdentifierDecl	j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		1126593	0					
ANR	1126879	IdentifierDeclType	const int		1126593	0					
ANR	1126880	Identifier	j		1126593	1					
ANR	1126881	AssignmentExpression	j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		1126593	2		=			
ANR	1126882	Identifier	j		1126593	0					
ANR	1126883	AdditiveExpression	( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		1126593	1		-			
ANR	1126884	InclusiveOrExpression	( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) )		1126593	0		|			
ANR	1126885	ShiftExpression	( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1		1126593	0		<<			
ANR	1126886	AdditiveExpression	( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 )		1126593	0		-			
ANR	1126887	BitAndExpression	c & 0xff00		1126593	0		&			
ANR	1126888	Identifier	c		1126593	0					
ANR	1126889	PrimaryExpression	0xff00		1126593	1					
ANR	1126890	ConditionalExpression	c >= 0xe000 ? 0xb000 : 0x7000		1126593	1					
ANR	1126891	Condition	c >= 0xe000		1126593	0					
ANR	1126892	RelationalExpression	c >= 0xe000		1126593	0		>=			
ANR	1126893	Identifier	c		1126593	0					
ANR	1126894	PrimaryExpression	0xe000		1126593	1					
ANR	1126895	PrimaryExpression	0xb000		1126593	1					
ANR	1126896	PrimaryExpression	0x7000		1126593	2					
ANR	1126897	PrimaryExpression	1		1126593	1					
ANR	1126898	AdditiveExpression	( c & 0xff ) - ( c & 0x80 ? 32 : 31 )		1126593	1		-			
ANR	1126899	BitAndExpression	c & 0xff		1126593	0		&			
ANR	1126900	Identifier	c		1126593	0					
ANR	1126901	PrimaryExpression	0xff		1126593	1					
ANR	1126902	ConditionalExpression	c & 0x80 ? 32 : 31		1126593	1					
ANR	1126903	Condition	c & 0x80		1126593	0					
ANR	1126904	BitAndExpression	c & 0x80		1126593	0		&			
ANR	1126905	Identifier	c		1126593	0					
ANR	1126906	PrimaryExpression	0x80		1126593	1					
ANR	1126907	PrimaryExpression	32		1126593	1					
ANR	1126908	PrimaryExpression	31		1126593	2					
ANR	1126909	ConditionalExpression	( c & 0xff ) >= 159 ? 94 : 0x100		1126593	1					
ANR	1126910	Condition	( c & 0xff ) >= 159		1126593	0					
ANR	1126911	RelationalExpression	( c & 0xff ) >= 159		1126593	0		>=			
ANR	1126912	BitAndExpression	c & 0xff		1126593	0		&			
ANR	1126913	Identifier	c		1126593	0					
ANR	1126914	PrimaryExpression	0xff		1126593	1					
ANR	1126915	PrimaryExpression	159		1126593	1					
ANR	1126916	PrimaryExpression	94		1126593	1					
ANR	1126917	PrimaryExpression	0x100		1126593	2					
ANR	1126918	ExpressionStatement	len = 8	312:3:7605:7612	1126593	1	True				
ANR	1126919	AssignmentExpression	len = 8		1126593	0		=			
ANR	1126920	Identifier	len		1126593	0					
ANR	1126921	PrimaryExpression	8		1126593	1					
ANR	1126922	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"	313:3:7617:7695	1126593	2	True				
ANR	1126923	CallExpression	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"		1126593	0					
ANR	1126924	Callee	sprintf		1126593	0					
ANR	1126925	Identifier	sprintf		1126593	0					
ANR	1126926	ArgumentList	buf_cp50220		1126593	1					
ANR	1126927	Argument	buf_cp50220		1126593	0					
ANR	1126928	Identifier	buf_cp50220		1126593	0					
ANR	1126929	Argument	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		1126593	1					
ANR	1126930	PrimaryExpression	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		1126593	0					
ANR	1126931	Argument	j >> 8		1126593	2					
ANR	1126932	ShiftExpression	j >> 8		1126593	0		>>			
ANR	1126933	Identifier	j		1126593	0					
ANR	1126934	PrimaryExpression	8		1126593	1					
ANR	1126935	Argument	j & 0xff		1126593	3					
ANR	1126936	BitAndExpression	j & 0xff		1126593	0		&			
ANR	1126937	Identifier	j		1126593	0					
ANR	1126938	PrimaryExpression	0xff		1126593	1					
ANR	1126939	ElseStatement	else		1126593	0					
ANR	1126940	CompoundStatement		44:9:1652:1652	1126593	0					
ANR	1126941	ExpressionStatement	len = 1	315:3:7711:7718	1126593	0	True				
ANR	1126942	AssignmentExpression	len = 1		1126593	0		=			
ANR	1126943	Identifier	len		1126593	0					
ANR	1126944	PrimaryExpression	1		1126593	1					
ANR	1126945	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%%02x"" , c )"	316:3:7723:7756	1126593	1	True				
ANR	1126946	CallExpression	"sprintf ( buf_cp50220 , ""%%%02x"" , c )"		1126593	0					
ANR	1126947	Callee	sprintf		1126593	0					
ANR	1126948	Identifier	sprintf		1126593	0					
ANR	1126949	ArgumentList	buf_cp50220		1126593	1					
ANR	1126950	Argument	buf_cp50220		1126593	0					
ANR	1126951	Identifier	buf_cp50220		1126593	0					
ANR	1126952	Argument	"""%%%02x"""		1126593	1					
ANR	1126953	PrimaryExpression	"""%%%02x"""		1126593	0					
ANR	1126954	Argument	c		1126593	2					
ANR	1126955	Identifier	c		1126593	0					
ANR	1126956	ExpressionStatement	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp50220 , len )"	318:2:7764:7830	1126593	3	True				
ANR	1126957	CallExpression	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp50220 , len )"		1126593	0					
ANR	1126958	Callee	printf		1126593	0					
ANR	1126959	Identifier	printf		1126593	0					
ANR	1126960	ArgumentList	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		1126593	1					
ANR	1126961	Argument	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		1126593	0					
ANR	1126962	PrimaryExpression	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		1126593	0					
ANR	1126963	Argument	buf_cp50220		1126593	1					
ANR	1126964	Identifier	buf_cp50220		1126593	0					
ANR	1126965	Argument	len		1126593	2					
ANR	1126966	Identifier	len		1126593	0					
ANR	1126967	ExpressionStatement	"printf ( ""}\\n"" )"	321:1:7837:7850	1126593	21	True				
ANR	1126968	CallExpression	"printf ( ""}\\n"" )"		1126593	0					
ANR	1126969	Callee	printf		1126593	0					
ANR	1126970	Identifier	printf		1126593	0					
ANR	1126971	ArgumentList	"""}\\n"""		1126593	1					
ANR	1126972	Argument	"""}\\n"""		1126593	0					
ANR	1126973	PrimaryExpression	"""}\\n"""		1126593	0					
ANR	1126974	ReturnType	static void		1126593	1					
ANR	1126975	Identifier	to_cp50220_visitor		1126593	2					
ANR	1126976	ParameterList	const struct mappings_entry * entry		1126593	3					
ANR	1126977	Parameter	const struct mappings_entry * entry	270:31:6017:6050	1126593	0	True				
ANR	1126978	ParameterType	const struct mappings_entry *		1126593	0					
ANR	1126979	Identifier	entry		1126593	1					
ANR	1126980	CFGEntryNode	ENTRY		1126593		True				
ANR	1126981	CFGExitNode	EXIT		1126593		True				
ANR	1126982	Symbol	entry -> cp_uni		1126593						
ANR	1126983	Symbol	jisx0208_tl_map		1126593						
ANR	1126984	Symbol	c		1126593						
ANR	1126985	Symbol	* * entry		1126593						
ANR	1126986	Symbol	buf_cp50220		1126593						
ANR	1126987	Symbol	utf32_utf8		1126593						
ANR	1126988	Symbol	* entry -> cp_932		1126593						
ANR	1126989	Symbol	i		1126593						
ANR	1126990	Symbol	j		1126593						
ANR	1126991	Symbol	* c		1126593						
ANR	1126992	Symbol	* jisx0208_tl_map		1126593						
ANR	1126993	Symbol	entry -> n		1126593						
ANR	1126994	Symbol	buf_uni		1126593						
ANR	1126995	Symbol	entry		1126593						
ANR	1126996	Symbol	* i		1126593						
ANR	1126997	Symbol	len		1126593						
ANR	1126998	Symbol	entry -> cp_932		1126593						
ANR	1126999	Symbol	* buf_uni		1126593						
ANR	1127000	Symbol	* entry		1126593						
ANR	1127001	Function	to_cp50222_visitor	324:0:7855:9056							
ANR	1127002	FunctionDef	to_cp50222_visitor (const struct mappings_entry * entry)		1127001	0					
ANR	1127003	CompoundStatement		325:0:7922:9056	1127001	0					
ANR	1127004	IdentifierDeclStatement	"char buf_uni [ 32 ] , buf_cp50220 [ 32 ] ;"	326:1:7925:7958	1127001	0	True				
ANR	1127005	IdentifierDecl	buf_uni [ 32 ]		1127001	0					
ANR	1127006	IdentifierDeclType	char [ 32 ]		1127001	0					
ANR	1127007	Identifier	buf_uni		1127001	1					
ANR	1127008	PrimaryExpression	32		1127001	2					
ANR	1127009	IdentifierDecl	buf_cp50220 [ 32 ]		1127001	1					
ANR	1127010	IdentifierDeclType	char [ 32 ]		1127001	0					
ANR	1127011	Identifier	buf_cp50220		1127001	1					
ANR	1127012	PrimaryExpression	32		1127001	2					
ANR	1127013	IdentifierDeclStatement	int i ;	327:1:7961:7966	1127001	1	True				
ANR	1127014	IdentifierDecl	i		1127001	0					
ANR	1127015	IdentifierDeclType	int		1127001	0					
ANR	1127016	Identifier	i		1127001	1					
ANR	1127017	IfStatement	if ( entry -> cp_uni < 32 || entry -> cp_uni == 127 )		1127001	2					
ANR	1127018	Condition	entry -> cp_uni < 32 || entry -> cp_uni == 127	329:5:7974:8015	1127001	0	True				
ANR	1127019	OrExpression	entry -> cp_uni < 32 || entry -> cp_uni == 127		1127001	0		||			
ANR	1127020	RelationalExpression	entry -> cp_uni < 32		1127001	0		<			
ANR	1127021	PtrMemberAccess	entry -> cp_uni		1127001	0					
ANR	1127022	Identifier	entry		1127001	0					
ANR	1127023	Identifier	cp_uni		1127001	1					
ANR	1127024	PrimaryExpression	32		1127001	1					
ANR	1127025	EqualityExpression	entry -> cp_uni == 127		1127001	1		==			
ANR	1127026	PtrMemberAccess	entry -> cp_uni		1127001	0					
ANR	1127027	Identifier	entry		1127001	0					
ANR	1127028	Identifier	cp_uni		1127001	1					
ANR	1127029	PrimaryExpression	127		1127001	1					
ANR	1127030	ReturnStatement	return ;	330:2:8020:8026	1127001	1	True				
ANR	1127031	ExpressionStatement	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"	332:1:8030:8068	1127001	3	True				
ANR	1127032	AssignmentExpression	"i = utf32_utf8 ( buf_uni , entry -> cp_uni )"		1127001	0		=			
ANR	1127033	Identifier	i		1127001	0					
ANR	1127034	CallExpression	"utf32_utf8 ( buf_uni , entry -> cp_uni )"		1127001	1					
ANR	1127035	Callee	utf32_utf8		1127001	0					
ANR	1127036	Identifier	utf32_utf8		1127001	0					
ANR	1127037	ArgumentList	buf_uni		1127001	1					
ANR	1127038	Argument	buf_uni		1127001	0					
ANR	1127039	Identifier	buf_uni		1127001	0					
ANR	1127040	Argument	entry -> cp_uni		1127001	1					
ANR	1127041	PtrMemberAccess	entry -> cp_uni		1127001	0					
ANR	1127042	Identifier	entry		1127001	0					
ANR	1127043	Identifier	cp_uni		1127001	1					
ANR	1127044	ExpressionStatement	buf_uni [ i * 4 ] = '\\0'	333:1:8071:8092	1127001	4	True				
ANR	1127045	AssignmentExpression	buf_uni [ i * 4 ] = '\\0'		1127001	0		=			
ANR	1127046	ArrayIndexing	buf_uni [ i * 4 ]		1127001	0					
ANR	1127047	Identifier	buf_uni		1127001	0					
ANR	1127048	MultiplicativeExpression	i * 4		1127001	1		*			
ANR	1127049	Identifier	i		1127001	0					
ANR	1127050	PrimaryExpression	4		1127001	1					
ANR	1127051	PrimaryExpression	'\\0'		1127001	1					
ANR	1127052	WhileStatement	while ( -- i >= 0 )		1127001	5					
ANR	1127053	Condition	-- i >= 0	334:8:8102:8109	1127001	0	True				
ANR	1127054	RelationalExpression	-- i >= 0		1127001	0		>=			
ANR	1127055	UnaryExpression	-- i		1127001	0					
ANR	1127056	IncDec	--		1127001	0					
ANR	1127057	Identifier	i		1127001	1					
ANR	1127058	PrimaryExpression	0		1127001	1					
ANR	1127059	CompoundStatement		11:2:193:240	1127001	1					
ANR	1127060	IdentifierDeclStatement	unsigned char c = ( ( unsigned char * ) buf_uni ) [ i ] ;	335:2:8116:8163	1127001	0	True				
ANR	1127061	IdentifierDecl	c = ( ( unsigned char * ) buf_uni ) [ i ]		1127001	0					
ANR	1127062	IdentifierDeclType	unsigned char		1127001	0					
ANR	1127063	Identifier	c		1127001	1					
ANR	1127064	AssignmentExpression	c = ( ( unsigned char * ) buf_uni ) [ i ]		1127001	2		=			
ANR	1127065	Identifier	c		1127001	0					
ANR	1127066	ArrayIndexing	( ( unsigned char * ) buf_uni ) [ i ]		1127001	1					
ANR	1127067	CastExpression	( unsigned char * ) buf_uni		1127001	0					
ANR	1127068	CastTarget	unsigned char *		1127001	0					
ANR	1127069	Identifier	buf_uni		1127001	1					
ANR	1127070	Identifier	i		1127001	1					
ANR	1127071	ExpressionStatement	buf_uni [ i * 4 ] = '\\\\'	336:2:8167:8188	1127001	1	True				
ANR	1127072	AssignmentExpression	buf_uni [ i * 4 ] = '\\\\'		1127001	0		=			
ANR	1127073	ArrayIndexing	buf_uni [ i * 4 ]		1127001	0					
ANR	1127074	Identifier	buf_uni		1127001	0					
ANR	1127075	MultiplicativeExpression	i * 4		1127001	1		*			
ANR	1127076	Identifier	i		1127001	0					
ANR	1127077	PrimaryExpression	4		1127001	1					
ANR	1127078	PrimaryExpression	'\\\\'		1127001	1					
ANR	1127079	ExpressionStatement	buf_uni [ i * 4 + 1 ] = 'x'	337:2:8192:8216	1127001	2	True				
ANR	1127080	AssignmentExpression	buf_uni [ i * 4 + 1 ] = 'x'		1127001	0		=			
ANR	1127081	ArrayIndexing	buf_uni [ i * 4 + 1 ]		1127001	0					
ANR	1127082	Identifier	buf_uni		1127001	0					
ANR	1127083	AdditiveExpression	i * 4 + 1		1127001	1		+			
ANR	1127084	MultiplicativeExpression	i * 4		1127001	0		*			
ANR	1127085	Identifier	i		1127001	0					
ANR	1127086	PrimaryExpression	4		1127001	1					
ANR	1127087	PrimaryExpression	1		1127001	1					
ANR	1127088	PrimaryExpression	'x'		1127001	1					
ANR	1127089	ExpressionStatement	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"	338:2:8220:8267	1127001	3	True				
ANR	1127090	AssignmentExpression	"buf_uni [ i * 4 + 2 ] = ""0123456789abcdef"" [ c >> 4 ]"		1127001	0		=			
ANR	1127091	ArrayIndexing	buf_uni [ i * 4 + 2 ]		1127001	0					
ANR	1127092	Identifier	buf_uni		1127001	0					
ANR	1127093	AdditiveExpression	i * 4 + 2		1127001	1		+			
ANR	1127094	MultiplicativeExpression	i * 4		1127001	0		*			
ANR	1127095	Identifier	i		1127001	0					
ANR	1127096	PrimaryExpression	4		1127001	1					
ANR	1127097	PrimaryExpression	2		1127001	1					
ANR	1127098	ArrayIndexing	"""0123456789abcdef"" [ c >> 4 ]"		1127001	1					
ANR	1127099	PrimaryExpression	"""0123456789abcdef"""		1127001	0					
ANR	1127100	ShiftExpression	c >> 4		1127001	1		>>			
ANR	1127101	Identifier	c		1127001	0					
ANR	1127102	PrimaryExpression	4		1127001	1					
ANR	1127103	ExpressionStatement	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"	339:2:8271:8318	1127001	4	True				
ANR	1127104	AssignmentExpression	"buf_uni [ i * 4 + 3 ] = ""0123456789abcdef"" [ c & 15 ]"		1127001	0		=			
ANR	1127105	ArrayIndexing	buf_uni [ i * 4 + 3 ]		1127001	0					
ANR	1127106	Identifier	buf_uni		1127001	0					
ANR	1127107	AdditiveExpression	i * 4 + 3		1127001	1		+			
ANR	1127108	MultiplicativeExpression	i * 4		1127001	0		*			
ANR	1127109	Identifier	i		1127001	0					
ANR	1127110	PrimaryExpression	4		1127001	1					
ANR	1127111	PrimaryExpression	3		1127001	1					
ANR	1127112	ArrayIndexing	"""0123456789abcdef"" [ c & 15 ]"		1127001	1					
ANR	1127113	PrimaryExpression	"""0123456789abcdef"""		1127001	0					
ANR	1127114	BitAndExpression	c & 15		1127001	1		&			
ANR	1127115	Identifier	c		1127001	0					
ANR	1127116	PrimaryExpression	15		1127001	1					
ANR	1127117	Statement	printf	342:1:8325:8330	1127001	6	True				
ANR	1127118	Statement	(	342:7:8331:8331	1127001	7	True				
ANR	1127119	Statement	"""set test \\""U+%06X\\""\\n"""	342:8:8332:8354	1127001	8	True				
ANR	1127120	Statement	"""send -- \\""%s\\r\\""\\n"""	343:8:8364:8383	1127001	9	True				
ANR	1127121	Statement	"""sleep 0.001\\n"""	344:5:8390:8404	1127001	10	True				
ANR	1127122	Statement	"""expect {\\n"""	345:8:8414:8425	1127001	11	True				
ANR	1127123	Statement	","	345:20:8426:8426	1127001	12	True				
ANR	1127124	Statement	entry	345:22:8428:8432	1127001	13	True				
ANR	1127125	Statement	->	345:27:8433:8434	1127001	14	True				
ANR	1127126	Statement	cp_uni	345:29:8435:8440	1127001	15	True				
ANR	1127127	Statement	","	345:35:8441:8441	1127001	16	True				
ANR	1127128	Statement	buf_uni	345:37:8443:8449	1127001	17	True				
ANR	1127129	Statement	)	345:44:8450:8450	1127001	18	True				
ANR	1127130	ExpressionStatement		345:45:8451:8451	1127001	19	True				
ANR	1127131	ForStatement	for ( i = 0 ; i < entry -> n ; ++ i )		1127001	20					
ANR	1127132	ForInit	i = 0 ;	347:6:8460:8465	1127001	0	True				
ANR	1127133	AssignmentExpression	i = 0		1127001	0		=			
ANR	1127134	Identifier	i		1127001	0					
ANR	1127135	PrimaryExpression	0		1127001	1					
ANR	1127136	Condition	i < entry -> n	347:13:8467:8478	1127001	1	True				
ANR	1127137	RelationalExpression	i < entry -> n		1127001	0		<			
ANR	1127138	Identifier	i		1127001	0					
ANR	1127139	PtrMemberAccess	entry -> n		1127001	1					
ANR	1127140	Identifier	entry		1127001	0					
ANR	1127141	Identifier	n		1127001	1					
ANR	1127142	UnaryExpression	++ i	347:27:8481:8483	1127001	2	True				
ANR	1127143	IncDec	++		1127001	0					
ANR	1127144	Identifier	i		1127001	1					
ANR	1127145	CompoundStatement		25:2:582:612	1127001	3					
ANR	1127146	IdentifierDeclStatement	int len = 0 ;	348:2:8490:8501	1127001	0	True				
ANR	1127147	IdentifierDecl	len = 0		1127001	0					
ANR	1127148	IdentifierDeclType	int		1127001	0					
ANR	1127149	Identifier	len		1127001	1					
ANR	1127150	AssignmentExpression	len = 0		1127001	2		=			
ANR	1127151	Identifier	len		1127001	0					
ANR	1127152	PrimaryExpression	0		1127001	1					
ANR	1127153	IdentifierDeclStatement	const int c = entry -> cp_932 [ i ] ;	349:2:8505:8535	1127001	1	True				
ANR	1127154	IdentifierDecl	c = entry -> cp_932 [ i ]		1127001	0					
ANR	1127155	IdentifierDeclType	const int		1127001	0					
ANR	1127156	Identifier	c		1127001	1					
ANR	1127157	AssignmentExpression	c = entry -> cp_932 [ i ]		1127001	2		=			
ANR	1127158	Identifier	c		1127001	0					
ANR	1127159	ArrayIndexing	entry -> cp_932 [ i ]		1127001	1					
ANR	1127160	PtrMemberAccess	entry -> cp_932		1127001	0					
ANR	1127161	Identifier	entry		1127001	0					
ANR	1127162	Identifier	cp_932		1127001	1					
ANR	1127163	Identifier	i		1127001	1					
ANR	1127164	IfStatement	if ( c >= 0xa1 && c < 0xe0 )		1127001	2					
ANR	1127165	Condition	c >= 0xa1 && c < 0xe0	350:6:8543:8563	1127001	0	True				
ANR	1127166	AndExpression	c >= 0xa1 && c < 0xe0		1127001	0		&&			
ANR	1127167	RelationalExpression	c >= 0xa1		1127001	0		>=			
ANR	1127168	Identifier	c		1127001	0					
ANR	1127169	PrimaryExpression	0xa1		1127001	1					
ANR	1127170	RelationalExpression	c < 0xe0		1127001	1		<			
ANR	1127171	Identifier	c		1127001	0					
ANR	1127172	PrimaryExpression	0xe0		1127001	1					
ANR	1127173	CompoundStatement		26:29:643:643	1127001	1					
ANR	1127174	ExpressionStatement	len = 3	351:3:8571:8578	1127001	0	True				
ANR	1127175	AssignmentExpression	len = 3		1127001	0		=			
ANR	1127176	Identifier	len		1127001	0					
ANR	1127177	PrimaryExpression	3		1127001	1					
ANR	1127178	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%0e%%%02x%%0f"" , c - 0x80 )"	352:3:8583:8631	1127001	1	True				
ANR	1127179	CallExpression	"sprintf ( buf_cp50220 , ""%%0e%%%02x%%0f"" , c - 0x80 )"		1127001	0					
ANR	1127180	Callee	sprintf		1127001	0					
ANR	1127181	Identifier	sprintf		1127001	0					
ANR	1127182	ArgumentList	buf_cp50220		1127001	1					
ANR	1127183	Argument	buf_cp50220		1127001	0					
ANR	1127184	Identifier	buf_cp50220		1127001	0					
ANR	1127185	Argument	"""%%0e%%%02x%%0f"""		1127001	1					
ANR	1127186	PrimaryExpression	"""%%0e%%%02x%%0f"""		1127001	0					
ANR	1127187	Argument	c - 0x80		1127001	2					
ANR	1127188	AdditiveExpression	c - 0x80		1127001	0		-			
ANR	1127189	Identifier	c		1127001	0					
ANR	1127190	PrimaryExpression	0x80		1127001	1					
ANR	1127191	ElseStatement	else		1127001	0					
ANR	1127192	IfStatement	if ( c >= 0x100 )		1127001	0					
ANR	1127193	Condition	c >= 0x100	353:13:8646:8655	1127001	0	True				
ANR	1127194	RelationalExpression	c >= 0x100		1127001	0		>=			
ANR	1127195	Identifier	c		1127001	0					
ANR	1127196	PrimaryExpression	0x100		1127001	1					
ANR	1127197	CompoundStatement		30:3:740:881	1127001	1					
ANR	1127198	IdentifierDeclStatement	const int j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 ) ;	354:3:8663:8804	1127001	0	True				
ANR	1127199	IdentifierDecl	j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		1127001	0					
ANR	1127200	IdentifierDeclType	const int		1127001	0					
ANR	1127201	Identifier	j		1127001	1					
ANR	1127202	AssignmentExpression	j = ( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		1127001	2		=			
ANR	1127203	Identifier	j		1127001	0					
ANR	1127204	AdditiveExpression	( ( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) ) ) - ( ( c & 0xff ) >= 159 ? 94 : 0x100 )		1127001	1		-			
ANR	1127205	InclusiveOrExpression	( ( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1 ) | ( ( c & 0xff ) - ( c & 0x80 ? 32 : 31 ) )		1127001	0		|			
ANR	1127206	ShiftExpression	( ( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 ) ) << 1		1127001	0		<<			
ANR	1127207	AdditiveExpression	( c & 0xff00 ) - ( c >= 0xe000 ? 0xb000 : 0x7000 )		1127001	0		-			
ANR	1127208	BitAndExpression	c & 0xff00		1127001	0		&			
ANR	1127209	Identifier	c		1127001	0					
ANR	1127210	PrimaryExpression	0xff00		1127001	1					
ANR	1127211	ConditionalExpression	c >= 0xe000 ? 0xb000 : 0x7000		1127001	1					
ANR	1127212	Condition	c >= 0xe000		1127001	0					
ANR	1127213	RelationalExpression	c >= 0xe000		1127001	0		>=			
ANR	1127214	Identifier	c		1127001	0					
ANR	1127215	PrimaryExpression	0xe000		1127001	1					
ANR	1127216	PrimaryExpression	0xb000		1127001	1					
ANR	1127217	PrimaryExpression	0x7000		1127001	2					
ANR	1127218	PrimaryExpression	1		1127001	1					
ANR	1127219	AdditiveExpression	( c & 0xff ) - ( c & 0x80 ? 32 : 31 )		1127001	1		-			
ANR	1127220	BitAndExpression	c & 0xff		1127001	0		&			
ANR	1127221	Identifier	c		1127001	0					
ANR	1127222	PrimaryExpression	0xff		1127001	1					
ANR	1127223	ConditionalExpression	c & 0x80 ? 32 : 31		1127001	1					
ANR	1127224	Condition	c & 0x80		1127001	0					
ANR	1127225	BitAndExpression	c & 0x80		1127001	0		&			
ANR	1127226	Identifier	c		1127001	0					
ANR	1127227	PrimaryExpression	0x80		1127001	1					
ANR	1127228	PrimaryExpression	32		1127001	1					
ANR	1127229	PrimaryExpression	31		1127001	2					
ANR	1127230	ConditionalExpression	( c & 0xff ) >= 159 ? 94 : 0x100		1127001	1					
ANR	1127231	Condition	( c & 0xff ) >= 159		1127001	0					
ANR	1127232	RelationalExpression	( c & 0xff ) >= 159		1127001	0		>=			
ANR	1127233	BitAndExpression	c & 0xff		1127001	0		&			
ANR	1127234	Identifier	c		1127001	0					
ANR	1127235	PrimaryExpression	0xff		1127001	1					
ANR	1127236	PrimaryExpression	159		1127001	1					
ANR	1127237	PrimaryExpression	94		1127001	1					
ANR	1127238	PrimaryExpression	0x100		1127001	2					
ANR	1127239	ExpressionStatement	len = 8	355:3:8809:8816	1127001	1	True				
ANR	1127240	AssignmentExpression	len = 8		1127001	0		=			
ANR	1127241	Identifier	len		1127001	0					
ANR	1127242	PrimaryExpression	8		1127001	1					
ANR	1127243	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"	356:3:8821:8899	1127001	2	True				
ANR	1127244	CallExpression	"sprintf ( buf_cp50220 , ""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"" , j >> 8 , j & 0xff )"		1127001	0					
ANR	1127245	Callee	sprintf		1127001	0					
ANR	1127246	Identifier	sprintf		1127001	0					
ANR	1127247	ArgumentList	buf_cp50220		1127001	1					
ANR	1127248	Argument	buf_cp50220		1127001	0					
ANR	1127249	Identifier	buf_cp50220		1127001	0					
ANR	1127250	Argument	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		1127001	1					
ANR	1127251	PrimaryExpression	"""%%1b%%24%%42%%%02x%%%02x%%1b%%28%%42"""		1127001	0					
ANR	1127252	Argument	j >> 8		1127001	2					
ANR	1127253	ShiftExpression	j >> 8		1127001	0		>>			
ANR	1127254	Identifier	j		1127001	0					
ANR	1127255	PrimaryExpression	8		1127001	1					
ANR	1127256	Argument	j & 0xff		1127001	3					
ANR	1127257	BitAndExpression	j & 0xff		1127001	0		&			
ANR	1127258	Identifier	j		1127001	0					
ANR	1127259	PrimaryExpression	0xff		1127001	1					
ANR	1127260	ElseStatement	else		1127001	0					
ANR	1127261	CompoundStatement		33:9:987:987	1127001	0					
ANR	1127262	ExpressionStatement	len = 1	358:3:8915:8922	1127001	0	True				
ANR	1127263	AssignmentExpression	len = 1		1127001	0		=			
ANR	1127264	Identifier	len		1127001	0					
ANR	1127265	PrimaryExpression	1		1127001	1					
ANR	1127266	ExpressionStatement	"sprintf ( buf_cp50220 , ""%%%02x"" , c )"	359:3:8927:8960	1127001	1	True				
ANR	1127267	CallExpression	"sprintf ( buf_cp50220 , ""%%%02x"" , c )"		1127001	0					
ANR	1127268	Callee	sprintf		1127001	0					
ANR	1127269	Identifier	sprintf		1127001	0					
ANR	1127270	ArgumentList	buf_cp50220		1127001	1					
ANR	1127271	Argument	buf_cp50220		1127001	0					
ANR	1127272	Identifier	buf_cp50220		1127001	0					
ANR	1127273	Argument	"""%%%02x"""		1127001	1					
ANR	1127274	PrimaryExpression	"""%%%02x"""		1127001	0					
ANR	1127275	Argument	c		1127001	2					
ANR	1127276	Identifier	c		1127001	0					
ANR	1127277	ExpressionStatement	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp50220 , len )"	361:2:8968:9034	1127001	3	True				
ANR	1127278	CallExpression	"printf ( ""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"" , buf_cp50220 , len )"		1127001	0					
ANR	1127279	Callee	printf		1127001	0					
ANR	1127280	Identifier	printf		1127001	0					
ANR	1127281	ArgumentList	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		1127001	1					
ANR	1127282	Argument	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		1127001	0					
ANR	1127283	PrimaryExpression	"""    \\""%s (%d)\\\\r\\\\n\\"" { pass $test }\\n"""		1127001	0					
ANR	1127284	Argument	buf_cp50220		1127001	1					
ANR	1127285	Identifier	buf_cp50220		1127001	0					
ANR	1127286	Argument	len		1127001	2					
ANR	1127287	Identifier	len		1127001	0					
ANR	1127288	ExpressionStatement	"printf ( ""}\\n"" )"	364:1:9041:9054	1127001	21	True				
ANR	1127289	CallExpression	"printf ( ""}\\n"" )"		1127001	0					
ANR	1127290	Callee	printf		1127001	0					
ANR	1127291	Identifier	printf		1127001	0					
ANR	1127292	ArgumentList	"""}\\n"""		1127001	1					
ANR	1127293	Argument	"""}\\n"""		1127001	0					
ANR	1127294	PrimaryExpression	"""}\\n"""		1127001	0					
ANR	1127295	ReturnType	static void		1127001	1					
ANR	1127296	Identifier	to_cp50222_visitor		1127001	2					
ANR	1127297	ParameterList	const struct mappings_entry * entry		1127001	3					
ANR	1127298	Parameter	const struct mappings_entry * entry	324:31:7886:7919	1127001	0	True				
ANR	1127299	ParameterType	const struct mappings_entry *		1127001	0					
ANR	1127300	Identifier	entry		1127001	1					
ANR	1127301	CFGEntryNode	ENTRY		1127001		True				
ANR	1127302	CFGExitNode	EXIT		1127001		True				
ANR	1127303	Symbol	entry -> cp_uni		1127001						
ANR	1127304	Symbol	c		1127001						
ANR	1127305	Symbol	* * entry		1127001						
ANR	1127306	Symbol	buf_cp50220		1127001						
ANR	1127307	Symbol	utf32_utf8		1127001						
ANR	1127308	Symbol	* entry -> cp_932		1127001						
ANR	1127309	Symbol	i		1127001						
ANR	1127310	Symbol	j		1127001						
ANR	1127311	Symbol	* c		1127001						
ANR	1127312	Symbol	entry -> n		1127001						
ANR	1127313	Symbol	buf_uni		1127001						
ANR	1127314	Symbol	entry		1127001						
ANR	1127315	Symbol	* i		1127001						
ANR	1127316	Symbol	len		1127001						
ANR	1127317	Symbol	entry -> cp_932		1127001						
ANR	1127318	Symbol	* buf_uni		1127001						
ANR	1127319	Symbol	* entry		1127001						
ANR	1127320	DeclStmt									
ANR	1127321	Decl							struct generator_entry	struct generator_entry [ ]	entries
ANR	1127322	DeclStmt									
ANR	1127323	Decl							const char	const char [ ]	cp932_txt
ANR	1127324	Function	main	378:0:9438:11622							
ANR	1127325	FunctionDef	"main (int argc , char * * argv)"		1127324	0					
ANR	1127326	CompoundStatement		379:0:9470:11622	1127324	0					
ANR	1127327	IdentifierDeclStatement	int retval = 0 ;	380:1:9473:9487	1127324	0	True				
ANR	1127328	IdentifierDecl	retval = 0		1127324	0					
ANR	1127329	IdentifierDeclType	int		1127324	0					
ANR	1127330	Identifier	retval		1127324	1					
ANR	1127331	AssignmentExpression	retval = 0		1127324	2		=			
ANR	1127332	Identifier	retval		1127324	0					
ANR	1127333	PrimaryExpression	0		1127324	1					
ANR	1127334	IdentifierDeclStatement	FILE * fp ;	381:1:9490:9498	1127324	1	True				
ANR	1127335	IdentifierDecl	* fp		1127324	0					
ANR	1127336	IdentifierDeclType	FILE *		1127324	0					
ANR	1127337	Identifier	fp		1127324	1					
ANR	1127338	IdentifierDeclStatement	char buf [ 1024 ] ;	382:1:9501:9515	1127324	2	True				
ANR	1127339	IdentifierDecl	buf [ 1024 ]		1127324	0					
ANR	1127340	IdentifierDeclType	char [ 1024 ]		1127324	0					
ANR	1127341	Identifier	buf		1127324	1					
ANR	1127342	PrimaryExpression	1024		1127324	2					
ANR	1127343	IdentifierDeclStatement	struct generator_entry * gen ;	383:1:9518:9545	1127324	3	True				
ANR	1127344	IdentifierDecl	* gen		1127324	0					
ANR	1127345	IdentifierDeclType	struct generator_entry *		1127324	0					
ANR	1127346	Identifier	gen		1127324	1					
ANR	1127347	IdentifierDeclStatement	struct mappings map ;	384:1:9548:9567	1127324	4	True				
ANR	1127348	IdentifierDecl	map		1127324	0					
ANR	1127349	IdentifierDeclType	struct mappings		1127324	0					
ANR	1127350	Identifier	map		1127324	1					
ANR	1127351	IfStatement	if ( argc <= 1 )		1127324	5					
ANR	1127352	Condition	argc <= 1	386:5:9575:9583	1127324	0	True				
ANR	1127353	RelationalExpression	argc <= 1		1127324	0		<=			
ANR	1127354	Identifier	argc		1127324	0					
ANR	1127355	PrimaryExpression	1		1127324	1					
ANR	1127356	CompoundStatement		8:16:115:115	1127324	1					
ANR	1127357	ExpressionStatement	"fprintf ( stderr , ""usage: %s generator\\n"" , argv [ 0 ] )"	387:2:9590:9639	1127324	0	True				
ANR	1127358	CallExpression	"fprintf ( stderr , ""usage: %s generator\\n"" , argv [ 0 ] )"		1127324	0					
ANR	1127359	Callee	fprintf		1127324	0					
ANR	1127360	Identifier	fprintf		1127324	0					
ANR	1127361	ArgumentList	stderr		1127324	1					
ANR	1127362	Argument	stderr		1127324	0					
ANR	1127363	Identifier	stderr		1127324	0					
ANR	1127364	Argument	"""usage: %s generator\\n"""		1127324	1					
ANR	1127365	PrimaryExpression	"""usage: %s generator\\n"""		1127324	0					
ANR	1127366	Argument	argv [ 0 ]		1127324	2					
ANR	1127367	ArrayIndexing	argv [ 0 ]		1127324	0					
ANR	1127368	Identifier	argv		1127324	0					
ANR	1127369	PrimaryExpression	0		1127324	1					
ANR	1127370	ReturnStatement	return 255 ;	388:2:9643:9653	1127324	1	True				
ANR	1127371	PrimaryExpression	255		1127324	0					
ANR	1127372	ForStatement	for ( gen = entries ; ; ++ gen )		1127324	6					
ANR	1127373	ForInit	gen = entries ;	391:6:9665:9678	1127324	0	True				
ANR	1127374	AssignmentExpression	gen = entries		1127324	0		=			
ANR	1127375	Identifier	gen		1127324	0					
ANR	1127376	Identifier	entries		1127324	1					
ANR	1127377	UnaryExpression	++ gen	391:22:9681:9685	1127324	1	True				
ANR	1127378	IncDec	++		1127324	0					
ANR	1127379	Identifier	gen		1127324	1					
ANR	1127380	CompoundStatement		13:29:217:217	1127324	2					
ANR	1127381	IfStatement	if ( ! gen -> name )		1127324	0					
ANR	1127382	Condition	! gen -> name	392:6:9696:9705	1127324	0	True				
ANR	1127383	UnaryOperationExpression	! gen -> name		1127324	0					
ANR	1127384	UnaryOperator	!		1127324	0					
ANR	1127385	PtrMemberAccess	gen -> name		1127324	1					
ANR	1127386	Identifier	gen		1127324	0					
ANR	1127387	Identifier	name		1127324	1					
ANR	1127388	CompoundStatement		14:18:237:237	1127324	1					
ANR	1127389	ExpressionStatement	"fprintf ( stderr , ""Unknown generator: %s\\n"" , argv [ 1 ] )"	393:3:9713:9764	1127324	0	True				
ANR	1127390	CallExpression	"fprintf ( stderr , ""Unknown generator: %s\\n"" , argv [ 1 ] )"		1127324	0					
ANR	1127391	Callee	fprintf		1127324	0					
ANR	1127392	Identifier	fprintf		1127324	0					
ANR	1127393	ArgumentList	stderr		1127324	1					
ANR	1127394	Argument	stderr		1127324	0					
ANR	1127395	Identifier	stderr		1127324	0					
ANR	1127396	Argument	"""Unknown generator: %s\\n"""		1127324	1					
ANR	1127397	PrimaryExpression	"""Unknown generator: %s\\n"""		1127324	0					
ANR	1127398	Argument	argv [ 1 ]		1127324	2					
ANR	1127399	ArrayIndexing	argv [ 1 ]		1127324	0					
ANR	1127400	Identifier	argv		1127324	0					
ANR	1127401	PrimaryExpression	1		1127324	1					
ANR	1127402	ReturnStatement	return 1 ;	394:3:9769:9777	1127324	1	True				
ANR	1127403	PrimaryExpression	1		1127324	0					
ANR	1127404	IfStatement	"if ( strcmp ( gen -> name , argv [ 1 ] ) == 0 )"		1127324	1					
ANR	1127405	Condition	"strcmp ( gen -> name , argv [ 1 ] ) == 0"	396:6:9789:9819	1127324	0	True				
ANR	1127406	EqualityExpression	"strcmp ( gen -> name , argv [ 1 ] ) == 0"		1127324	0		==			
ANR	1127407	CallExpression	"strcmp ( gen -> name , argv [ 1 ] )"		1127324	0					
ANR	1127408	Callee	strcmp		1127324	0					
ANR	1127409	Identifier	strcmp		1127324	0					
ANR	1127410	ArgumentList	gen -> name		1127324	1					
ANR	1127411	Argument	gen -> name		1127324	0					
ANR	1127412	PtrMemberAccess	gen -> name		1127324	0					
ANR	1127413	Identifier	gen		1127324	0					
ANR	1127414	Identifier	name		1127324	1					
ANR	1127415	Argument	argv [ 1 ]		1127324	1					
ANR	1127416	ArrayIndexing	argv [ 1 ]		1127324	0					
ANR	1127417	Identifier	argv		1127324	0					
ANR	1127418	PrimaryExpression	1		1127324	1					
ANR	1127419	PrimaryExpression	0		1127324	1					
ANR	1127420	BreakStatement	break ;	397:3:9825:9830	1127324	1	True				
ANR	1127421	ExpressionStatement	"fp = fopen ( cp932_txt , ""r"" )"	400:4:9840:9866	1127324	7	True				
ANR	1127422	AssignmentExpression	"fp = fopen ( cp932_txt , ""r"" )"		1127324	0		=			
ANR	1127423	Identifier	fp		1127324	0					
ANR	1127424	CallExpression	"fopen ( cp932_txt , ""r"" )"		1127324	1					
ANR	1127425	Callee	fopen		1127324	0					
ANR	1127426	Identifier	fopen		1127324	0					
ANR	1127427	ArgumentList	cp932_txt		1127324	1					
ANR	1127428	Argument	cp932_txt		1127324	0					
ANR	1127429	Identifier	cp932_txt		1127324	0					
ANR	1127430	Argument	"""r"""		1127324	1					
ANR	1127431	PrimaryExpression	"""r"""		1127324	0					
ANR	1127432	IfStatement	if ( ! fp )		1127324	8					
ANR	1127433	Condition	! fp	401:5:9873:9875	1127324	0	True				
ANR	1127434	UnaryOperationExpression	! fp		1127324	0					
ANR	1127435	UnaryOperator	!		1127324	0					
ANR	1127436	Identifier	fp		1127324	1					
ANR	1127437	CompoundStatement		23:10:407:407	1127324	1					
ANR	1127438	ExpressionStatement	"fprintf ( stderr , ""Failed to open %s\\n"" , cp932_txt )"	402:2:9882:9931	1127324	0	True				
ANR	1127439	CallExpression	"fprintf ( stderr , ""Failed to open %s\\n"" , cp932_txt )"		1127324	0					
ANR	1127440	Callee	fprintf		1127324	0					
ANR	1127441	Identifier	fprintf		1127324	0					
ANR	1127442	ArgumentList	stderr		1127324	1					
ANR	1127443	Argument	stderr		1127324	0					
ANR	1127444	Identifier	stderr		1127324	0					
ANR	1127445	Argument	"""Failed to open %s\\n"""		1127324	1					
ANR	1127446	PrimaryExpression	"""Failed to open %s\\n"""		1127324	0					
ANR	1127447	Argument	cp932_txt		1127324	2					
ANR	1127448	Identifier	cp932_txt		1127324	0					
ANR	1127449	ReturnStatement	return 2 ;	403:2:9935:9943	1127324	1	True				
ANR	1127450	PrimaryExpression	2		1127324	0					
ANR	1127451	ExpressionStatement	mappings_init ( & map )	406:1:9950:9969	1127324	9	True				
ANR	1127452	CallExpression	mappings_init ( & map )		1127324	0					
ANR	1127453	Callee	mappings_init		1127324	0					
ANR	1127454	Identifier	mappings_init		1127324	0					
ANR	1127455	ArgumentList	& map		1127324	1					
ANR	1127456	Argument	& map		1127324	0					
ANR	1127457	UnaryOperationExpression	& map		1127324	0					
ANR	1127458	UnaryOperator	&		1127324	0					
ANR	1127459	Identifier	map		1127324	1					
ANR	1127460	WhileStatement	"while ( fgets ( buf , sizeof ( buf ) , fp ) )"		1127324	10					
ANR	1127461	Condition	"fgets ( buf , sizeof ( buf ) , fp )"	408:8:9980:10006	1127324	0	True				
ANR	1127462	CallExpression	"fgets ( buf , sizeof ( buf ) , fp )"		1127324	0					
ANR	1127463	Callee	fgets		1127324	0					
ANR	1127464	Identifier	fgets		1127324	0					
ANR	1127465	ArgumentList	buf		1127324	1					
ANR	1127466	Argument	buf		1127324	0					
ANR	1127467	Identifier	buf		1127324	0					
ANR	1127468	Argument	sizeof ( buf )		1127324	1					
ANR	1127469	SizeofExpression	sizeof ( buf )		1127324	0					
ANR	1127470	Sizeof	sizeof		1127324	0					
ANR	1127471	SizeofOperand	buf		1127324	1					
ANR	1127472	Argument	fp		1127324	2					
ANR	1127473	Identifier	fp		1127324	0					
ANR	1127474	CompoundStatement		34:2:602:620	1127324	1					
ANR	1127475	IdentifierDeclStatement	const char * fields [ 16 ] ;	409:2:10013:10035	1127324	0	True				
ANR	1127476	IdentifierDecl	* fields [ 16 ]		1127324	0					
ANR	1127477	IdentifierDeclType	const char * [ 16 ]		1127324	0					
ANR	1127478	Identifier	fields		1127324	1					
ANR	1127479	PrimaryExpression	16		1127324	2					
ANR	1127480	IdentifierDeclStatement	char * p = buf ;	410:2:10039:10052	1127324	1	True				
ANR	1127481	IdentifierDecl	* p = buf		1127324	0					
ANR	1127482	IdentifierDeclType	char *		1127324	0					
ANR	1127483	Identifier	p		1127324	1					
ANR	1127484	AssignmentExpression	* p = buf		1127324	2		=			
ANR	1127485	Identifier	buf		1127324	0					
ANR	1127486	Identifier	buf		1127324	1					
ANR	1127487	IdentifierDeclStatement	int field = 0 ;	411:2:10056:10069	1127324	2	True				
ANR	1127488	IdentifierDecl	field = 0		1127324	0					
ANR	1127489	IdentifierDeclType	int		1127324	0					
ANR	1127490	Identifier	field		1127324	1					
ANR	1127491	AssignmentExpression	field = 0		1127324	2		=			
ANR	1127492	Identifier	field		1127324	0					
ANR	1127493	PrimaryExpression	0		1127324	1					
ANR	1127494	IdentifierDeclStatement	"int cp_932 , cp_uni ;"	412:2:10073:10091	1127324	3	True				
ANR	1127495	IdentifierDecl	cp_932		1127324	0					
ANR	1127496	IdentifierDeclType	int		1127324	0					
ANR	1127497	Identifier	cp_932		1127324	1					
ANR	1127498	IdentifierDecl	cp_uni		1127324	1					
ANR	1127499	IdentifierDeclType	int		1127324	0					
ANR	1127500	Identifier	cp_uni		1127324	1					
ANR	1127501	ForStatement	for ( ; ; )		1127324	4					
ANR	1127502	CompoundStatement		37:3:654:665	1127324	0					
ANR	1127503	IdentifierDeclStatement	char * q = 0 ;	414:3:10109:10120	1127324	0	True				
ANR	1127504	IdentifierDecl	* q = 0		1127324	0					
ANR	1127505	IdentifierDeclType	char *		1127324	0					
ANR	1127506	Identifier	q		1127324	1					
ANR	1127507	AssignmentExpression	* q = 0		1127324	2		=			
ANR	1127508	Identifier	q		1127324	0					
ANR	1127509	PrimaryExpression	0		1127324	1					
ANR	1127510	IdentifierDeclStatement	int eol = 0 ;	415:3:10125:10136	1127324	1	True				
ANR	1127511	IdentifierDecl	eol = 0		1127324	0					
ANR	1127512	IdentifierDeclType	int		1127324	0					
ANR	1127513	Identifier	eol		1127324	1					
ANR	1127514	AssignmentExpression	eol = 0		1127324	2		=			
ANR	1127515	Identifier	eol		1127324	0					
ANR	1127516	PrimaryExpression	0		1127324	1					
ANR	1127517	IfStatement	if ( field >= sizeof ( fields ) / sizeof ( * fields ) )		1127324	2					
ANR	1127518	Condition	field >= sizeof ( fields ) / sizeof ( * fields )	417:7:10146:10186	1127324	0	True				
ANR	1127519	RelationalExpression	field >= sizeof ( fields ) / sizeof ( * fields )		1127324	0		>=			
ANR	1127520	Identifier	field		1127324	0					
ANR	1127521	MultiplicativeExpression	sizeof ( fields ) / sizeof ( * fields )		1127324	1		/			
ANR	1127522	SizeofExpression	sizeof ( fields )		1127324	0					
ANR	1127523	Sizeof	sizeof		1127324	0					
ANR	1127524	SizeofOperand	fields		1127324	1					
ANR	1127525	SizeofExpression	sizeof ( * fields )		1127324	1					
ANR	1127526	Sizeof	sizeof		1127324	0					
ANR	1127527	UnaryOperationExpression	* fields		1127324	1					
ANR	1127528	UnaryOperator	*		1127324	0					
ANR	1127529	Identifier	fields		1127324	1					
ANR	1127530	CompoundStatement		39:50:718:718	1127324	1					
ANR	1127531	ExpressionStatement	"fprintf ( stderr , ""Too many fields (incorrect file?)\\n"" )"	418:4:10195:10249	1127324	0	True				
ANR	1127532	CallExpression	"fprintf ( stderr , ""Too many fields (incorrect file?)\\n"" )"		1127324	0					
ANR	1127533	Callee	fprintf		1127324	0					
ANR	1127534	Identifier	fprintf		1127324	0					
ANR	1127535	ArgumentList	stderr		1127324	1					
ANR	1127536	Argument	stderr		1127324	0					
ANR	1127537	Identifier	stderr		1127324	0					
ANR	1127538	Argument	"""Too many fields (incorrect file?)\\n"""		1127324	1					
ANR	1127539	PrimaryExpression	"""Too many fields (incorrect file?)\\n"""		1127324	0					
ANR	1127540	ExpressionStatement	retval = 3	419:4:10255:10265	1127324	1	True				
ANR	1127541	AssignmentExpression	retval = 3		1127324	0		=			
ANR	1127542	Identifier	retval		1127324	0					
ANR	1127543	PrimaryExpression	3		1127324	1					
ANR	1127544	GotoStatement	goto out ;	420:4:10271:10279	1127324	2	True				
ANR	1127545	Identifier	out		1127324	0					
ANR	1127546	ForStatement	for ( ; ; )		1127324	3					
ANR	1127547	CompoundStatement		45:12:828:828	1127324	0					
ANR	1127548	IfStatement	if ( * p == '\\0' || * p == '#' || * p == 0x0a )		1127324	0					
ANR	1127549	Condition	* p == '\\0' || * p == '#' || * p == 0x0a	424:8:10309:10345	1127324	0	True				
ANR	1127550	OrExpression	* p == '\\0' || * p == '#' || * p == 0x0a		1127324	0		||			
ANR	1127551	EqualityExpression	* p == '\\0'		1127324	0		==			
ANR	1127552	UnaryOperationExpression	* p		1127324	0					
ANR	1127553	UnaryOperator	*		1127324	0					
ANR	1127554	Identifier	p		1127324	1					
ANR	1127555	PrimaryExpression	'\\0'		1127324	1					
ANR	1127556	OrExpression	* p == '#' || * p == 0x0a		1127324	1		||			
ANR	1127557	EqualityExpression	* p == '#'		1127324	0		==			
ANR	1127558	UnaryOperationExpression	* p		1127324	0					
ANR	1127559	UnaryOperator	*		1127324	0					
ANR	1127560	Identifier	p		1127324	1					
ANR	1127561	PrimaryExpression	'#'		1127324	1					
ANR	1127562	EqualityExpression	* p == 0x0a		1127324	1		==			
ANR	1127563	UnaryOperationExpression	* p		1127324	0					
ANR	1127564	UnaryOperator	*		1127324	0					
ANR	1127565	Identifier	p		1127324	1					
ANR	1127566	PrimaryExpression	0x0a		1127324	1					
ANR	1127567	CompoundStatement		46:47:877:877	1127324	1					
ANR	1127568	ExpressionStatement	eol = 1	425:5:10355:10362	1127324	0	True				
ANR	1127569	AssignmentExpression	eol = 1		1127324	0		=			
ANR	1127570	Identifier	eol		1127324	0					
ANR	1127571	PrimaryExpression	1		1127324	1					
ANR	1127572	BreakStatement	break ;	426:5:10369:10374	1127324	1	True				
ANR	1127573	ElseStatement	else		1127324	0					
ANR	1127574	IfStatement	if ( * p != ' ' && * p != '\\t' )		1127324	0					
ANR	1127575	Condition	* p != ' ' && * p != '\\t'	427:15:10391:10413	1127324	0	True				
ANR	1127576	AndExpression	* p != ' ' && * p != '\\t'		1127324	0		&&			
ANR	1127577	EqualityExpression	* p != ' '		1127324	0		!=			
ANR	1127578	UnaryOperationExpression	* p		1127324	0					
ANR	1127579	UnaryOperator	*		1127324	0					
ANR	1127580	Identifier	p		1127324	1					
ANR	1127581	PrimaryExpression	' '		1127324	1					
ANR	1127582	EqualityExpression	* p != '\\t'		1127324	1		!=			
ANR	1127583	UnaryOperationExpression	* p		1127324	0					
ANR	1127584	UnaryOperator	*		1127324	0					
ANR	1127585	Identifier	p		1127324	1					
ANR	1127586	PrimaryExpression	'\\t'		1127324	1					
ANR	1127587	CompoundStatement		49:40:945:945	1127324	1					
ANR	1127588	BreakStatement	break ;	428:5:10423:10428	1127324	0	True				
ANR	1127589	ExpressionStatement	++ p	430:4:10440:10443	1127324	1	True				
ANR	1127590	UnaryExpression	++ p		1127324	0					
ANR	1127591	IncDec	++		1127324	0					
ANR	1127592	Identifier	p		1127324	1					
ANR	1127593	IfStatement	if ( eol )		1127324	4					
ANR	1127594	Condition	eol	433:7:10458:10460	1127324	0	True				
ANR	1127595	Identifier	eol		1127324	0					
ANR	1127596	BreakStatement	break ;	434:4:10467:10472	1127324	1	True				
ANR	1127597	ExpressionStatement	q = p	436:3:10478:10483	1127324	5	True				
ANR	1127598	AssignmentExpression	q = p		1127324	0		=			
ANR	1127599	Identifier	q		1127324	0					
ANR	1127600	Identifier	p		1127324	1					
ANR	1127601	ForStatement	for ( ; ; )		1127324	6					
ANR	1127602	CompoundStatement		60:12:1027:1027	1127324	0					
ANR	1127603	IfStatement	if ( * p == '\\0' || * p == '#' || * p == 0x0a )		1127324	0					
ANR	1127604	Condition	* p == '\\0' || * p == '#' || * p == 0x0a	439:8:10508:10544	1127324	0	True				
ANR	1127605	OrExpression	* p == '\\0' || * p == '#' || * p == 0x0a		1127324	0		||			
ANR	1127606	EqualityExpression	* p == '\\0'		1127324	0		==			
ANR	1127607	UnaryOperationExpression	* p		1127324	0					
ANR	1127608	UnaryOperator	*		1127324	0					
ANR	1127609	Identifier	p		1127324	1					
ANR	1127610	PrimaryExpression	'\\0'		1127324	1					
ANR	1127611	OrExpression	* p == '#' || * p == 0x0a		1127324	1		||			
ANR	1127612	EqualityExpression	* p == '#'		1127324	0		==			
ANR	1127613	UnaryOperationExpression	* p		1127324	0					
ANR	1127614	UnaryOperator	*		1127324	0					
ANR	1127615	Identifier	p		1127324	1					
ANR	1127616	PrimaryExpression	'#'		1127324	1					
ANR	1127617	EqualityExpression	* p == 0x0a		1127324	1		==			
ANR	1127618	UnaryOperationExpression	* p		1127324	0					
ANR	1127619	UnaryOperator	*		1127324	0					
ANR	1127620	Identifier	p		1127324	1					
ANR	1127621	PrimaryExpression	0x0a		1127324	1					
ANR	1127622	CompoundStatement		61:47:1076:1076	1127324	1					
ANR	1127623	ExpressionStatement	eol = 1	440:5:10554:10561	1127324	0	True				
ANR	1127624	AssignmentExpression	eol = 1		1127324	0		=			
ANR	1127625	Identifier	eol		1127324	0					
ANR	1127626	PrimaryExpression	1		1127324	1					
ANR	1127627	BreakStatement	break ;	441:5:10568:10573	1127324	1	True				
ANR	1127628	ElseStatement	else		1127324	0					
ANR	1127629	IfStatement	if ( * p == ' ' || * p == '\\t' )		1127324	0					
ANR	1127630	Condition	* p == ' ' || * p == '\\t'	442:15:10590:10612	1127324	0	True				
ANR	1127631	OrExpression	* p == ' ' || * p == '\\t'		1127324	0		||			
ANR	1127632	EqualityExpression	* p == ' '		1127324	0		==			
ANR	1127633	UnaryOperationExpression	* p		1127324	0					
ANR	1127634	UnaryOperator	*		1127324	0					
ANR	1127635	Identifier	p		1127324	1					
ANR	1127636	PrimaryExpression	' '		1127324	1					
ANR	1127637	EqualityExpression	* p == '\\t'		1127324	1		==			
ANR	1127638	UnaryOperationExpression	* p		1127324	0					
ANR	1127639	UnaryOperator	*		1127324	0					
ANR	1127640	Identifier	p		1127324	1					
ANR	1127641	PrimaryExpression	'\\t'		1127324	1					
ANR	1127642	CompoundStatement		64:40:1144:1144	1127324	1					
ANR	1127643	BreakStatement	break ;	443:5:10622:10627	1127324	0	True				
ANR	1127644	ExpressionStatement	++ p	445:4:10639:10642	1127324	1	True				
ANR	1127645	UnaryExpression	++ p		1127324	0					
ANR	1127646	IncDec	++		1127324	0					
ANR	1127647	Identifier	p		1127324	1					
ANR	1127648	ExpressionStatement	* p = '\\0'	448:3:10653:10662	1127324	7	True				
ANR	1127649	AssignmentExpression	* p = '\\0'		1127324	0		=			
ANR	1127650	UnaryOperationExpression	* p		1127324	0					
ANR	1127651	UnaryOperator	*		1127324	0					
ANR	1127652	Identifier	p		1127324	1					
ANR	1127653	PrimaryExpression	'\\0'		1127324	1					
ANR	1127654	ExpressionStatement	fields [ field ++ ] = q	449:3:10667:10686	1127324	8	True				
ANR	1127655	AssignmentExpression	fields [ field ++ ] = q		1127324	0		=			
ANR	1127656	ArrayIndexing	fields [ field ++ ]		1127324	0					
ANR	1127657	Identifier	fields		1127324	0					
ANR	1127658	PostIncDecOperationExpression	field ++		1127324	1					
ANR	1127659	Identifier	field		1127324	0					
ANR	1127660	IncDec	++		1127324	1					
ANR	1127661	Identifier	q		1127324	1					
ANR	1127662	IfStatement	if ( eol )		1127324	9					
ANR	1127663	Condition	eol	451:7:10696:10698	1127324	0	True				
ANR	1127664	Identifier	eol		1127324	0					
ANR	1127665	BreakStatement	break ;	452:4:10705:10710	1127324	1	True				
ANR	1127666	ExpressionStatement	++ p	453:3:10715:10718	1127324	10	True				
ANR	1127667	UnaryExpression	++ p		1127324	0					
ANR	1127668	IncDec	++		1127324	0					
ANR	1127669	Identifier	p		1127324	1					
ANR	1127670	IfStatement	if ( field == 0 || field == 1 )		1127324	5					
ANR	1127671	Condition	field == 0 || field == 1	455:6:10730:10753	1127324	0	True				
ANR	1127672	OrExpression	field == 0 || field == 1		1127324	0		||			
ANR	1127673	EqualityExpression	field == 0		1127324	0		==			
ANR	1127674	Identifier	field		1127324	0					
ANR	1127675	PrimaryExpression	0		1127324	1					
ANR	1127676	EqualityExpression	field == 1		1127324	1		==			
ANR	1127677	Identifier	field		1127324	0					
ANR	1127678	PrimaryExpression	1		1127324	1					
ANR	1127679	CompoundStatement		77:32:1285:1285	1127324	1					
ANR	1127680	ContinueStatement	continue ;	456:3:10761:10769	1127324	0	True				
ANR	1127681	ElseStatement	else		1127324	0					
ANR	1127682	IfStatement	if ( field != 2 )		1127324	0					
ANR	1127683	Condition	field != 2	457:13:10784:10793	1127324	0	True				
ANR	1127684	EqualityExpression	field != 2		1127324	0		!=			
ANR	1127685	Identifier	field		1127324	0					
ANR	1127686	PrimaryExpression	2		1127324	1					
ANR	1127687	CompoundStatement		79:25:1325:1325	1127324	1					
ANR	1127688	ExpressionStatement	"fprintf ( stderr , ""Unexpected field count (expected 2, got %d)\\n"" , field )"	458:3:10801:10872	1127324	0	True				
ANR	1127689	CallExpression	"fprintf ( stderr , ""Unexpected field count (expected 2, got %d)\\n"" , field )"		1127324	0					
ANR	1127690	Callee	fprintf		1127324	0					
ANR	1127691	Identifier	fprintf		1127324	0					
ANR	1127692	ArgumentList	stderr		1127324	1					
ANR	1127693	Argument	stderr		1127324	0					
ANR	1127694	Identifier	stderr		1127324	0					
ANR	1127695	Argument	"""Unexpected field count (expected 2, got %d)\\n"""		1127324	1					
ANR	1127696	PrimaryExpression	"""Unexpected field count (expected 2, got %d)\\n"""		1127324	0					
ANR	1127697	Argument	field		1127324	2					
ANR	1127698	Identifier	field		1127324	0					
ANR	1127699	ExpressionStatement	retval = 3	459:3:10877:10887	1127324	1	True				
ANR	1127700	AssignmentExpression	retval = 3		1127324	0		=			
ANR	1127701	Identifier	retval		1127324	0					
ANR	1127702	PrimaryExpression	3		1127324	1					
ANR	1127703	GotoStatement	goto out ;	460:3:10892:10900	1127324	2	True				
ANR	1127704	Identifier	out		1127324	0					
ANR	1127705	ExpressionStatement	"cp_932 = strtol ( fields [ 0 ] , NULL , 0 )"	462:2:10908:10943	1127324	6	True				
ANR	1127706	AssignmentExpression	"cp_932 = strtol ( fields [ 0 ] , NULL , 0 )"		1127324	0		=			
ANR	1127707	Identifier	cp_932		1127324	0					
ANR	1127708	CallExpression	"strtol ( fields [ 0 ] , NULL , 0 )"		1127324	1					
ANR	1127709	Callee	strtol		1127324	0					
ANR	1127710	Identifier	strtol		1127324	0					
ANR	1127711	ArgumentList	fields [ 0 ]		1127324	1					
ANR	1127712	Argument	fields [ 0 ]		1127324	0					
ANR	1127713	ArrayIndexing	fields [ 0 ]		1127324	0					
ANR	1127714	Identifier	fields		1127324	0					
ANR	1127715	PrimaryExpression	0		1127324	1					
ANR	1127716	Argument	NULL		1127324	1					
ANR	1127717	Identifier	NULL		1127324	0					
ANR	1127718	Argument	0		1127324	2					
ANR	1127719	PrimaryExpression	0		1127324	0					
ANR	1127720	IfStatement	if ( errno == ERANGE || errno == EINVAL )		1127324	7					
ANR	1127721	Condition	errno == ERANGE || errno == EINVAL	463:6:10951:10984	1127324	0	True				
ANR	1127722	OrExpression	errno == ERANGE || errno == EINVAL		1127324	0		||			
ANR	1127723	EqualityExpression	errno == ERANGE		1127324	0		==			
ANR	1127724	Identifier	errno		1127324	0					
ANR	1127725	Identifier	ERANGE		1127324	1					
ANR	1127726	EqualityExpression	errno == EINVAL		1127324	1		==			
ANR	1127727	Identifier	errno		1127324	0					
ANR	1127728	Identifier	EINVAL		1127324	1					
ANR	1127729	CompoundStatement		85:42:1516:1516	1127324	1					
ANR	1127730	ExpressionStatement	"fprintf ( stderr , ""Malformed field value: %s\\n"" , fields [ 0 ] )"	464:3:10992:11049	1127324	0	True				
ANR	1127731	CallExpression	"fprintf ( stderr , ""Malformed field value: %s\\n"" , fields [ 0 ] )"		1127324	0					
ANR	1127732	Callee	fprintf		1127324	0					
ANR	1127733	Identifier	fprintf		1127324	0					
ANR	1127734	ArgumentList	stderr		1127324	1					
ANR	1127735	Argument	stderr		1127324	0					
ANR	1127736	Identifier	stderr		1127324	0					
ANR	1127737	Argument	"""Malformed field value: %s\\n"""		1127324	1					
ANR	1127738	PrimaryExpression	"""Malformed field value: %s\\n"""		1127324	0					
ANR	1127739	Argument	fields [ 0 ]		1127324	2					
ANR	1127740	ArrayIndexing	fields [ 0 ]		1127324	0					
ANR	1127741	Identifier	fields		1127324	0					
ANR	1127742	PrimaryExpression	0		1127324	1					
ANR	1127743	ExpressionStatement	retval = 4	465:3:11054:11064	1127324	1	True				
ANR	1127744	AssignmentExpression	retval = 4		1127324	0		=			
ANR	1127745	Identifier	retval		1127324	0					
ANR	1127746	PrimaryExpression	4		1127324	1					
ANR	1127747	GotoStatement	goto out ;	466:3:11069:11077	1127324	2	True				
ANR	1127748	Identifier	out		1127324	0					
ANR	1127749	ExpressionStatement	"cp_uni = strtol ( fields [ 1 ] , NULL , 0 )"	468:2:11085:11120	1127324	8	True				
ANR	1127750	AssignmentExpression	"cp_uni = strtol ( fields [ 1 ] , NULL , 0 )"		1127324	0		=			
ANR	1127751	Identifier	cp_uni		1127324	0					
ANR	1127752	CallExpression	"strtol ( fields [ 1 ] , NULL , 0 )"		1127324	1					
ANR	1127753	Callee	strtol		1127324	0					
ANR	1127754	Identifier	strtol		1127324	0					
ANR	1127755	ArgumentList	fields [ 1 ]		1127324	1					
ANR	1127756	Argument	fields [ 1 ]		1127324	0					
ANR	1127757	ArrayIndexing	fields [ 1 ]		1127324	0					
ANR	1127758	Identifier	fields		1127324	0					
ANR	1127759	PrimaryExpression	1		1127324	1					
ANR	1127760	Argument	NULL		1127324	1					
ANR	1127761	Identifier	NULL		1127324	0					
ANR	1127762	Argument	0		1127324	2					
ANR	1127763	PrimaryExpression	0		1127324	0					
ANR	1127764	IfStatement	if ( errno == ERANGE || errno == EINVAL )		1127324	9					
ANR	1127765	Condition	errno == ERANGE || errno == EINVAL	469:6:11128:11161	1127324	0	True				
ANR	1127766	OrExpression	errno == ERANGE || errno == EINVAL		1127324	0		||			
ANR	1127767	EqualityExpression	errno == ERANGE		1127324	0		==			
ANR	1127768	Identifier	errno		1127324	0					
ANR	1127769	Identifier	ERANGE		1127324	1					
ANR	1127770	EqualityExpression	errno == EINVAL		1127324	1		==			
ANR	1127771	Identifier	errno		1127324	0					
ANR	1127772	Identifier	EINVAL		1127324	1					
ANR	1127773	CompoundStatement		91:42:1693:1693	1127324	1					
ANR	1127774	ExpressionStatement	"fprintf ( stderr , ""Malformed field value: %s\\n"" , fields [ 1 ] )"	470:3:11169:11226	1127324	0	True				
ANR	1127775	CallExpression	"fprintf ( stderr , ""Malformed field value: %s\\n"" , fields [ 1 ] )"		1127324	0					
ANR	1127776	Callee	fprintf		1127324	0					
ANR	1127777	Identifier	fprintf		1127324	0					
ANR	1127778	ArgumentList	stderr		1127324	1					
ANR	1127779	Argument	stderr		1127324	0					
ANR	1127780	Identifier	stderr		1127324	0					
ANR	1127781	Argument	"""Malformed field value: %s\\n"""		1127324	1					
ANR	1127782	PrimaryExpression	"""Malformed field value: %s\\n"""		1127324	0					
ANR	1127783	Argument	fields [ 1 ]		1127324	2					
ANR	1127784	ArrayIndexing	fields [ 1 ]		1127324	0					
ANR	1127785	Identifier	fields		1127324	0					
ANR	1127786	PrimaryExpression	1		1127324	1					
ANR	1127787	ExpressionStatement	retval = 4	471:3:11231:11241	1127324	1	True				
ANR	1127788	AssignmentExpression	retval = 4		1127324	0		=			
ANR	1127789	Identifier	retval		1127324	0					
ANR	1127790	PrimaryExpression	4		1127324	1					
ANR	1127791	GotoStatement	goto out ;	472:3:11246:11254	1127324	2	True				
ANR	1127792	Identifier	out		1127324	0					
ANR	1127793	IfStatement	"if ( mappings_add ( & map , cp_uni , cp_932 ) )"		1127324	10					
ANR	1127794	Condition	"mappings_add ( & map , cp_uni , cp_932 )"	475:6:11267:11300	1127324	0	True				
ANR	1127795	CallExpression	"mappings_add ( & map , cp_uni , cp_932 )"		1127324	0					
ANR	1127796	Callee	mappings_add		1127324	0					
ANR	1127797	Identifier	mappings_add		1127324	0					
ANR	1127798	ArgumentList	& map		1127324	1					
ANR	1127799	Argument	& map		1127324	0					
ANR	1127800	UnaryOperationExpression	& map		1127324	0					
ANR	1127801	UnaryOperator	&		1127324	0					
ANR	1127802	Identifier	map		1127324	1					
ANR	1127803	Argument	cp_uni		1127324	1					
ANR	1127804	Identifier	cp_uni		1127324	0					
ANR	1127805	Argument	cp_932		1127324	2					
ANR	1127806	Identifier	cp_932		1127324	0					
ANR	1127807	CompoundStatement		97:42:1832:1832	1127324	1					
ANR	1127808	ExpressionStatement	"fprintf ( stderr , ""Too many mappings to the same Unicode codepoint (U+%06X)\\n"" , cp_uni )"	476:3:11308:11393	1127324	0	True				
ANR	1127809	CallExpression	"fprintf ( stderr , ""Too many mappings to the same Unicode codepoint (U+%06X)\\n"" , cp_uni )"		1127324	0					
ANR	1127810	Callee	fprintf		1127324	0					
ANR	1127811	Identifier	fprintf		1127324	0					
ANR	1127812	ArgumentList	stderr		1127324	1					
ANR	1127813	Argument	stderr		1127324	0					
ANR	1127814	Identifier	stderr		1127324	0					
ANR	1127815	Argument	"""Too many mappings to the same Unicode codepoint (U+%06X)\\n"""		1127324	1					
ANR	1127816	PrimaryExpression	"""Too many mappings to the same Unicode codepoint (U+%06X)\\n"""		1127324	0					
ANR	1127817	Argument	cp_uni		1127324	2					
ANR	1127818	Identifier	cp_uni		1127324	0					
ANR	1127819	ExpressionStatement	retval = 4	477:3:11398:11408	1127324	1	True				
ANR	1127820	AssignmentExpression	retval = 4		1127324	0		=			
ANR	1127821	Identifier	retval		1127324	0					
ANR	1127822	PrimaryExpression	4		1127324	1					
ANR	1127823	GotoStatement	goto out ;	478:3:11413:11421	1127324	2	True				
ANR	1127824	Identifier	out		1127324	0					
ANR	1127825	CompoundStatement		105:2:1965:1973	1127324	11					
ANR	1127826	IdentifierDeclStatement	size_t i ;	483:2:11436:11444	1127324	0	True				
ANR	1127827	IdentifierDecl	i		1127324	0					
ANR	1127828	IdentifierDeclType	size_t		1127324	0					
ANR	1127829	Identifier	i		1127324	1					
ANR	1127830	ExpressionStatement	"printf ( ""%s"" , gen -> prologue )"	484:2:11448:11475	1127324	1	True				
ANR	1127831	CallExpression	"printf ( ""%s"" , gen -> prologue )"		1127324	0					
ANR	1127832	Callee	printf		1127324	0					
ANR	1127833	Identifier	printf		1127324	0					
ANR	1127834	ArgumentList	"""%s"""		1127324	1					
ANR	1127835	Argument	"""%s"""		1127324	0					
ANR	1127836	PrimaryExpression	"""%s"""		1127324	0					
ANR	1127837	Argument	gen -> prologue		1127324	1					
ANR	1127838	PtrMemberAccess	gen -> prologue		1127324	0					
ANR	1127839	Identifier	gen		1127324	0					
ANR	1127840	Identifier	prologue		1127324	1					
ANR	1127841	ForStatement	for ( i = 0 ; i < map . n ; ++ i )		1127324	2					
ANR	1127842	ForInit	i = 0 ;	485:7:11484:11489	1127324	0	True				
ANR	1127843	AssignmentExpression	i = 0		1127324	0		=			
ANR	1127844	Identifier	i		1127324	0					
ANR	1127845	PrimaryExpression	0		1127324	1					
ANR	1127846	Condition	i < map . n	485:14:11491:11499	1127324	1	True				
ANR	1127847	RelationalExpression	i < map . n		1127324	0		<			
ANR	1127848	Identifier	i		1127324	0					
ANR	1127849	MemberAccess	map . n		1127324	1					
ANR	1127850	Identifier	map		1127324	0					
ANR	1127851	Identifier	n		1127324	1					
ANR	1127852	UnaryExpression	++ i	485:25:11502:11504	1127324	2	True				
ANR	1127853	IncDec	++		1127324	0					
ANR	1127854	Identifier	i		1127324	1					
ANR	1127855	ExpressionStatement	gen -> visitor ( & map . entries [ i ] )	486:3:11510:11539	1127324	3	True				
ANR	1127856	CallExpression	gen -> visitor ( & map . entries [ i ] )		1127324	0					
ANR	1127857	Callee	gen -> visitor		1127324	0					
ANR	1127858	PtrMemberAccess	gen -> visitor		1127324	0					
ANR	1127859	Identifier	gen		1127324	0					
ANR	1127860	Identifier	visitor		1127324	1					
ANR	1127861	ArgumentList	& map . entries [ i ]		1127324	1					
ANR	1127862	Argument	& map . entries [ i ]		1127324	0					
ANR	1127863	UnaryOperationExpression	& map . entries [ i ]		1127324	0					
ANR	1127864	UnaryOperator	&		1127324	0					
ANR	1127865	ArrayIndexing	map . entries [ i ]		1127324	1					
ANR	1127866	MemberAccess	map . entries		1127324	0					
ANR	1127867	Identifier	map		1127324	0					
ANR	1127868	Identifier	entries		1127324	1					
ANR	1127869	Identifier	i		1127324	1					
ANR	1127870	ExpressionStatement	"printf ( ""%s"" , gen -> epilogue )"	487:2:11543:11570	1127324	3	True				
ANR	1127871	CallExpression	"printf ( ""%s"" , gen -> epilogue )"		1127324	0					
ANR	1127872	Callee	printf		1127324	0					
ANR	1127873	Identifier	printf		1127324	0					
ANR	1127874	ArgumentList	"""%s"""		1127324	1					
ANR	1127875	Argument	"""%s"""		1127324	0					
ANR	1127876	PrimaryExpression	"""%s"""		1127324	0					
ANR	1127877	Argument	gen -> epilogue		1127324	1					
ANR	1127878	PtrMemberAccess	gen -> epilogue		1127324	0					
ANR	1127879	Identifier	gen		1127324	0					
ANR	1127880	Identifier	epilogue		1127324	1					
ANR	1127881	Label	out :	490:0:11576:11579	1127324	12	True				
ANR	1127882	Identifier	out		1127324	0					
ANR	1127883	ExpressionStatement	mappings_destroy ( & map )	491:1:11582:11604	1127324	13	True				
ANR	1127884	CallExpression	mappings_destroy ( & map )		1127324	0					
ANR	1127885	Callee	mappings_destroy		1127324	0					
ANR	1127886	Identifier	mappings_destroy		1127324	0					
ANR	1127887	ArgumentList	& map		1127324	1					
ANR	1127888	Argument	& map		1127324	0					
ANR	1127889	UnaryOperationExpression	& map		1127324	0					
ANR	1127890	UnaryOperator	&		1127324	0					
ANR	1127891	Identifier	map		1127324	1					
ANR	1127892	ReturnStatement	return retval ;	492:1:11607:11620	1127324	14	True				
ANR	1127893	Identifier	retval		1127324	0					
ANR	1127894	ReturnType	int		1127324	1					
ANR	1127895	Identifier	main		1127324	2					
ANR	1127896	ParameterList	"int argc , char * * argv"		1127324	3					
ANR	1127897	Parameter	int argc	378:9:9447:9454	1127324	0	True				
ANR	1127898	ParameterType	int		1127324	0					
ANR	1127899	Identifier	argc		1127324	1					
ANR	1127900	Parameter	char * * argv	378:19:9457:9467	1127324	1	True				
ANR	1127901	ParameterType	char * *		1127324	0					
ANR	1127902	Identifier	argv		1127324	1					
ANR	1127903	CFGEntryNode	ENTRY		1127324		True				
ANR	1127904	CFGExitNode	EXIT		1127324		True				
ANR	1127905	InfiniteForNode	true		1127324		True				
ANR	1127906	InfiniteForNode	true		1127324		True				
ANR	1127907	InfiniteForNode	true		1127324		True				
ANR	1127908	InfiniteForNode	true		1127324		True				
ANR	1127909	Symbol	cp_932		1127324						
ANR	1127910	Symbol	gen -> epilogue		1127324						
ANR	1127911	Symbol	eol		1127324						
ANR	1127912	Symbol	* gen		1127324						
ANR	1127913	Symbol	& map		1127324						
ANR	1127914	Symbol	fp		1127324						
ANR	1127915	Symbol	* argv		1127324						
ANR	1127916	Symbol	gen -> name		1127324						
ANR	1127917	Symbol	argv		1127324						
ANR	1127918	Symbol	cp932_txt		1127324						
ANR	1127919	Symbol	fgets		1127324						
ANR	1127920	Symbol	gen		1127324						
ANR	1127921	Symbol	* fields		1127324						
ANR	1127922	Symbol	strtol		1127324						
ANR	1127923	Symbol	ERANGE		1127324						
ANR	1127924	Symbol	cp_uni		1127324						
ANR	1127925	Symbol	map		1127324						
ANR	1127926	Symbol	argc		1127324						
ANR	1127927	Symbol	strcmp		1127324						
ANR	1127928	Symbol	fopen		1127324						
ANR	1127929	Symbol	errno		1127324						
ANR	1127930	Symbol	NULL		1127324						
ANR	1127931	Symbol	gen -> prologue		1127324						
ANR	1127932	Symbol	i		1127324						
ANR	1127933	Symbol	stderr		1127324						
ANR	1127934	Symbol	mappings_add		1127324						
ANR	1127935	Symbol	retval		1127324						
ANR	1127936	Symbol	p		1127324						
ANR	1127937	Symbol	EINVAL		1127324						
ANR	1127938	Symbol	q		1127324						
ANR	1127939	Symbol	buf		1127324						
ANR	1127940	Symbol	entries		1127324						
ANR	1127941	Symbol	map . entries		1127324						
ANR	1127942	Symbol	field		1127324						
ANR	1127943	Symbol	* p		1127324						
ANR	1127944	Symbol	fields		1127324						
ANR	1127945	Symbol	map . n		1127324						
