command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2966645	File	data/converged/CVE-2015-8617_php-src/iso8859_9.c								
ANR	2966646	DeclStmt									
ANR	2966647	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_9_ToLowerCaseTable
ANR	2966648	DeclStmt									
ANR	2966649	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_9_CtypeTable
ANR	2966650	DeclStmt									
ANR	2966651	Decl							const UChar	const UChar *	p
ANR	2966652	Function	is_mbc_ambiguous	125:0:6514:7055							
ANR	2966653	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		2966652	0					
ANR	2966654	CompoundStatement		127:0:6601:7055	2966652	0					
ANR	2966655	IdentifierDeclStatement	int v ;	128:2:6605:6610	2966652	0	True				
ANR	2966656	IdentifierDecl	v		2966652	0					
ANR	2966657	IdentifierDeclType	int		2966652	0					
ANR	2966658	Identifier	v		2966652	1					
ANR	2966659	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6614:6634	2966652	1	True				
ANR	2966660	IdentifierDecl	* p = * pp		2966652	0					
ANR	2966661	IdentifierDeclType	const UChar *		2966652	0					
ANR	2966662	Identifier	p		2966652	1					
ANR	2966663	AssignmentExpression	* p = * pp		2966652	2		=			
ANR	2966664	Identifier	p		2966652	0					
ANR	2966665	UnaryOperationExpression	* pp		2966652	1					
ANR	2966666	UnaryOperator	*		2966652	0					
ANR	2966667	Identifier	pp		2966652	1					
ANR	2966668	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		2966652	2					
ANR	2966669	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6643:6707	2966652	0	True				
ANR	2966670	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2966652	0		&&			
ANR	2966671	EqualityExpression	* p == 0xdf		2966652	0		==			
ANR	2966672	UnaryOperationExpression	* p		2966652	0					
ANR	2966673	UnaryOperator	*		2966652	0					
ANR	2966674	Identifier	p		2966652	1					
ANR	2966675	PrimaryExpression	0xdf		2966652	1					
ANR	2966676	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2966652	1		!=			
ANR	2966677	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2966652	0		&			
ANR	2966678	Identifier	flag		2966652	0					
ANR	2966679	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2966652	1					
ANR	2966680	PrimaryExpression	0		2966652	1					
ANR	2966681	CompoundStatement		5:73:108:108	2966652	1					
ANR	2966682	ExpressionStatement	( * pp ) ++	132:4:6716:6723	2966652	0	True				
ANR	2966683	PostIncDecOperationExpression	( * pp ) ++		2966652	0					
ANR	2966684	UnaryOperationExpression	* pp		2966652	0					
ANR	2966685	UnaryOperator	*		2966652	0					
ANR	2966686	Identifier	pp		2966652	1					
ANR	2966687	IncDec	++		2966652	1					
ANR	2966688	ReturnStatement	return TRUE ;	133:4:6729:6740	2966652	1	True				
ANR	2966689	Identifier	TRUE		2966652	0					
ANR	2966690	ExpressionStatement	( * pp ) ++	136:2:6749:6756	2966652	3	True				
ANR	2966691	PostIncDecOperationExpression	( * pp ) ++		2966652	0					
ANR	2966692	UnaryOperationExpression	* pp		2966652	0					
ANR	2966693	UnaryOperator	*		2966652	0					
ANR	2966694	Identifier	pp		2966652	1					
ANR	2966695	IncDec	++		2966652	1					
ANR	2966696	ExpressionStatement	v = ( EncISO_8859_9_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6760:6832	2966652	4	True				
ANR	2966697	AssignmentExpression	v = ( EncISO_8859_9_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		2966652	0		=			
ANR	2966698	Identifier	v		2966652	0					
ANR	2966699	BitAndExpression	EncISO_8859_9_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		2966652	1		&			
ANR	2966700	ArrayIndexing	EncISO_8859_9_CtypeTable [ * p ]		2966652	0					
ANR	2966701	Identifier	EncISO_8859_9_CtypeTable		2966652	0					
ANR	2966702	UnaryOperationExpression	* p		2966652	1					
ANR	2966703	UnaryOperator	*		2966652	0					
ANR	2966704	Identifier	p		2966652	1					
ANR	2966705	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		2966652	1		|			
ANR	2966706	Identifier	BIT_CTYPE_UPPER		2966652	0					
ANR	2966707	Identifier	BIT_CTYPE_LOWER		2966652	1					
ANR	2966708	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		2966652	5					
ANR	2966709	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6840:6865	2966652	0	True				
ANR	2966710	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		2966652	0		!=			
ANR	2966711	InclusiveOrExpression	v | BIT_CTYPE_LOWER		2966652	0		|			
ANR	2966712	Identifier	v		2966652	0					
ANR	2966713	Identifier	BIT_CTYPE_LOWER		2966652	1					
ANR	2966714	PrimaryExpression	0		2966652	1					
ANR	2966715	CompoundStatement		12:34:266:266	2966652	1					
ANR	2966716	IfStatement	if ( * p >= 0xaa && * p <= 0xba )		2966652	0					
ANR	2966717	Condition	* p >= 0xaa && * p <= 0xba	140:8:6942:6965	2966652	0	True				
ANR	2966718	AndExpression	* p >= 0xaa && * p <= 0xba		2966652	0		&&			
ANR	2966719	RelationalExpression	* p >= 0xaa		2966652	0		>=			
ANR	2966720	UnaryOperationExpression	* p		2966652	0					
ANR	2966721	UnaryOperator	*		2966652	0					
ANR	2966722	Identifier	p		2966652	1					
ANR	2966723	PrimaryExpression	0xaa		2966652	1					
ANR	2966724	RelationalExpression	* p <= 0xba		2966652	1		<=			
ANR	2966725	UnaryOperationExpression	* p		2966652	0					
ANR	2966726	UnaryOperator	*		2966652	0					
ANR	2966727	Identifier	p		2966652	1					
ANR	2966728	PrimaryExpression	0xba		2966652	1					
ANR	2966729	ReturnStatement	return FALSE ;	141:6:6974:6986	2966652	1	True				
ANR	2966730	Identifier	FALSE		2966652	0					
ANR	2966731	ElseStatement	else		2966652	0					
ANR	2966732	ReturnStatement	return TRUE ;	143:6:7003:7014	2966652	0	True				
ANR	2966733	Identifier	TRUE		2966652	0					
ANR	2966734	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	146:2:7023:7053	2966652	6	True				
ANR	2966735	ConditionalExpression	v != 0 ? TRUE : FALSE		2966652	0					
ANR	2966736	Condition	v != 0		2966652	0					
ANR	2966737	EqualityExpression	v != 0		2966652	0		!=			
ANR	2966738	Identifier	v		2966652	0					
ANR	2966739	PrimaryExpression	0		2966652	1					
ANR	2966740	Identifier	TRUE		2966652	1					
ANR	2966741	Identifier	FALSE		2966652	2					
ANR	2966742	ReturnType	static int		2966652	1					
ANR	2966743	Identifier	is_mbc_ambiguous		2966652	2					
ANR	2966744	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		2966652	3					
ANR	2966745	Parameter	OnigCaseFoldType flag	126:17:6542:6562	2966652	0	True				
ANR	2966746	ParameterType	OnigCaseFoldType		2966652	0					
ANR	2966747	Identifier	flag		2966652	1					
ANR	2966748	Parameter	const UChar * * pp	126:40:6565:6580	2966652	1	True				
ANR	2966749	ParameterType	const UChar * *		2966652	0					
ANR	2966750	Identifier	pp		2966652	1					
ANR	2966751	Parameter	const UChar * end	126:58:6583:6598	2966652	2	True				
ANR	2966752	ParameterType	const UChar *		2966652	0					
ANR	2966753	Identifier	end		2966652	1					
ANR	2966754	CFGEntryNode	ENTRY		2966652		True				
ANR	2966755	CFGExitNode	EXIT		2966652		True				
ANR	2966756	Symbol	pp		2966652						
ANR	2966757	Symbol	flag		2966652						
ANR	2966758	Symbol	* pp		2966652						
ANR	2966759	Symbol	TRUE		2966652						
ANR	2966760	Symbol	EncISO_8859_9_CtypeTable		2966652						
ANR	2966761	Symbol	p		2966652						
ANR	2966762	Symbol	* EncISO_8859_9_CtypeTable		2966652						
ANR	2966763	Symbol	v		2966652						
ANR	2966764	Symbol	BIT_CTYPE_LOWER		2966652						
ANR	2966765	Symbol	end		2966652						
ANR	2966766	Symbol	* p		2966652						
ANR	2966767	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2966652						
ANR	2966768	Symbol	BIT_CTYPE_UPPER		2966652						
ANR	2966769	Symbol	FALSE		2966652						
ANR	2966770	Symbol	* * p		2966652						
ANR	2966771	Function	is_code_ctype	150:0:7065:7224							
ANR	2966772	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		2966771	0					
ANR	2966773	CompoundStatement		152:0:7130:7224	2966771	0					
ANR	2966774	IfStatement	if ( code < 256 )		2966771	0					
ANR	2966775	Condition	code < 256	153:6:7138:7147	2966771	0	True				
ANR	2966776	RelationalExpression	code < 256		2966771	0		<			
ANR	2966777	Identifier	code		2966771	0					
ANR	2966778	PrimaryExpression	256		2966771	1					
ANR	2966779	ReturnStatement	"return ENC_IS_ISO_8859_9_CTYPE ( code , ctype ) ;"	154:4:7154:7197	2966771	1	True				
ANR	2966780	CallExpression	"ENC_IS_ISO_8859_9_CTYPE ( code , ctype )"		2966771	0					
ANR	2966781	Callee	ENC_IS_ISO_8859_9_CTYPE		2966771	0					
ANR	2966782	Identifier	ENC_IS_ISO_8859_9_CTYPE		2966771	0					
ANR	2966783	ArgumentList	code		2966771	1					
ANR	2966784	Argument	code		2966771	0					
ANR	2966785	Identifier	code		2966771	0					
ANR	2966786	Argument	ctype		2966771	1					
ANR	2966787	Identifier	ctype		2966771	0					
ANR	2966788	ElseStatement	else		2966771	0					
ANR	2966789	ReturnStatement	return FALSE ;	156:4:7210:7222	2966771	0	True				
ANR	2966790	Identifier	FALSE		2966771	0					
ANR	2966791	ReturnType	static int		2966771	1					
ANR	2966792	Identifier	is_code_ctype		2966771	2					
ANR	2966793	ParameterList	"OnigCodePoint code , unsigned int ctype"		2966771	3					
ANR	2966794	Parameter	OnigCodePoint code	151:14:7090:7107	2966771	0	True				
ANR	2966795	ParameterType	OnigCodePoint		2966771	0					
ANR	2966796	Identifier	code		2966771	1					
ANR	2966797	Parameter	unsigned int ctype	151:34:7110:7127	2966771	1	True				
ANR	2966798	ParameterType	unsigned int		2966771	0					
ANR	2966799	Identifier	ctype		2966771	1					
ANR	2966800	CFGEntryNode	ENTRY		2966771		True				
ANR	2966801	CFGExitNode	EXIT		2966771		True				
ANR	2966802	Symbol	ENC_IS_ISO_8859_9_CTYPE		2966771						
ANR	2966803	Symbol	code		2966771						
ANR	2966804	Symbol	ctype		2966771						
ANR	2966805	Symbol	FALSE		2966771						
ANR	2966806	DeclStmt									
ANR	2966807	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	2966808	Function	apply_all_case_fold	193:0:7824:8080							
ANR	2966809	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		2966808	0					
ANR	2966810	CompoundStatement		196:0:7923:8080	2966808	0					
ANR	2966811	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	197:2:7927:8078	2966808	0	True				
ANR	2966812	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		2966808	0					
ANR	2966813	Callee	onigenc_apply_all_case_fold_with_map		2966808	0					
ANR	2966814	Identifier	onigenc_apply_all_case_fold_with_map		2966808	0					
ANR	2966815	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966808	1					
ANR	2966816	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966808	0					
ANR	2966817	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966808	0		/			
ANR	2966818	SizeofExpression	sizeof ( CaseFoldMap )		2966808	0					
ANR	2966819	Sizeof	sizeof		2966808	0					
ANR	2966820	SizeofOperand	CaseFoldMap		2966808	1					
ANR	2966821	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2966808	1					
ANR	2966822	Sizeof	sizeof		2966808	0					
ANR	2966823	SizeofOperand	OnigPairCaseFoldCodes		2966808	1					
ANR	2966824	Argument	CaseFoldMap		2966808	1					
ANR	2966825	Identifier	CaseFoldMap		2966808	0					
ANR	2966826	Argument	1		2966808	2					
ANR	2966827	PrimaryExpression	1		2966808	0					
ANR	2966828	Argument	flag		2966808	3					
ANR	2966829	Identifier	flag		2966808	0					
ANR	2966830	Argument	f		2966808	4					
ANR	2966831	Identifier	f		2966808	0					
ANR	2966832	Argument	arg		2966808	5					
ANR	2966833	Identifier	arg		2966808	0					
ANR	2966834	ReturnType	static int		2966808	1					
ANR	2966835	Identifier	apply_all_case_fold		2966808	2					
ANR	2966836	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		2966808	3					
ANR	2966837	Parameter	OnigCaseFoldType flag	194:20:7855:7875	2966808	0	True				
ANR	2966838	ParameterType	OnigCaseFoldType		2966808	0					
ANR	2966839	Identifier	flag		2966808	1					
ANR	2966840	Parameter	OnigApplyAllCaseFoldFunc f	195:6:7884:7909	2966808	1	True				
ANR	2966841	ParameterType	OnigApplyAllCaseFoldFunc		2966808	0					
ANR	2966842	Identifier	f		2966808	1					
ANR	2966843	Parameter	void * arg	195:34:7912:7920	2966808	2	True				
ANR	2966844	ParameterType	void *		2966808	0					
ANR	2966845	Identifier	arg		2966808	1					
ANR	2966846	CFGEntryNode	ENTRY		2966808		True				
ANR	2966847	CFGExitNode	EXIT		2966808		True				
ANR	2966848	Symbol	flag		2966808						
ANR	2966849	Symbol	f		2966808						
ANR	2966850	Symbol	arg		2966808						
ANR	2966851	Symbol	CaseFoldMap		2966808						
ANR	2966852	Symbol	onigenc_apply_all_case_fold_with_map		2966808						
ANR	2966853	Function	get_case_fold_codes_by_str	202:0:8083:8377							
ANR	2966854	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		2966853	0					
ANR	2966855	CompoundStatement		205:0:8220:8377	2966853	0					
ANR	2966856	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	206:2:8224:8375	2966853	0	True				
ANR	2966857	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		2966853	0					
ANR	2966858	Callee	onigenc_get_case_fold_codes_by_str_with_map		2966853	0					
ANR	2966859	Identifier	onigenc_get_case_fold_codes_by_str_with_map		2966853	0					
ANR	2966860	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966853	1					
ANR	2966861	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966853	0					
ANR	2966862	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2966853	0		/			
ANR	2966863	SizeofExpression	sizeof ( CaseFoldMap )		2966853	0					
ANR	2966864	Sizeof	sizeof		2966853	0					
ANR	2966865	SizeofOperand	CaseFoldMap		2966853	1					
ANR	2966866	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2966853	1					
ANR	2966867	Sizeof	sizeof		2966853	0					
ANR	2966868	SizeofOperand	OnigPairCaseFoldCodes		2966853	1					
ANR	2966869	Argument	CaseFoldMap		2966853	1					
ANR	2966870	Identifier	CaseFoldMap		2966853	0					
ANR	2966871	Argument	1		2966853	2					
ANR	2966872	PrimaryExpression	1		2966853	0					
ANR	2966873	Argument	flag		2966853	3					
ANR	2966874	Identifier	flag		2966853	0					
ANR	2966875	Argument	p		2966853	4					
ANR	2966876	Identifier	p		2966853	0					
ANR	2966877	Argument	end		2966853	5					
ANR	2966878	Identifier	end		2966853	0					
ANR	2966879	Argument	items		2966853	6					
ANR	2966880	Identifier	items		2966853	0					
ANR	2966881	ReturnType	static int		2966853	1					
ANR	2966882	Identifier	get_case_fold_codes_by_str		2966853	2					
ANR	2966883	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		2966853	3					
ANR	2966884	Parameter	OnigCaseFoldType flag	203:27:8121:8141	2966853	0	True				
ANR	2966885	ParameterType	OnigCaseFoldType		2966853	0					
ANR	2966886	Identifier	flag		2966853	1					
ANR	2966887	Parameter	const OnigUChar * p	204:4:8148:8165	2966853	1	True				
ANR	2966888	ParameterType	const OnigUChar *		2966853	0					
ANR	2966889	Identifier	p		2966853	1					
ANR	2966890	Parameter	const OnigUChar * end	204:24:8168:8187	2966853	2	True				
ANR	2966891	ParameterType	const OnigUChar *		2966853	0					
ANR	2966892	Identifier	end		2966853	1					
ANR	2966893	Parameter	OnigCaseFoldCodeItem items [ ]	204:46:8190:8217	2966853	3	True				
ANR	2966894	ParameterType	OnigCaseFoldCodeItem [ ]		2966853	0					
ANR	2966895	Identifier	items		2966853	1					
ANR	2966896	CFGEntryNode	ENTRY		2966853		True				
ANR	2966897	CFGExitNode	EXIT		2966853		True				
ANR	2966898	Symbol	p		2966853						
ANR	2966899	Symbol	flag		2966853						
ANR	2966900	Symbol	end		2966853						
ANR	2966901	Symbol	CaseFoldMap		2966853						
ANR	2966902	Symbol	onigenc_get_case_fold_codes_by_str_with_map		2966853						
ANR	2966903	Symbol	items		2966853						
ANR	2966904	DeclStmt									
ANR	2966905	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_9
