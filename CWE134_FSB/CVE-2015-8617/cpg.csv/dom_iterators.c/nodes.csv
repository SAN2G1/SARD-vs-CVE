command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	489828	File	data/converged/CVE-2015-8617_php-src/dom_iterators.c								
ANR	489829	DeclStmt									
ANR	489830	Decl							struct _nodeIterator	struct _nodeIterator	nodeIterator
ANR	489831	ClassDef	_nodeIterator	32:0:1414:1475							
ANR	489832	DeclStmt									
ANR	489833	Decl							int	int	cur
ANR	489834	DeclStmt									
ANR	489835	Decl							int	int	index
ANR	489836	DeclStmt									
ANR	489837	Decl							xmlNode	xmlNode *	node
ANR	489838	DeclStmt									
ANR	489839	Decl							struct _notationIterator	struct _notationIterator	notationIterator
ANR	489840	ClassDef	_notationIterator	39:0:1530:1603							
ANR	489841	DeclStmt									
ANR	489842	Decl							int	int	cur
ANR	489843	DeclStmt									
ANR	489844	Decl							int	int	index
ANR	489845	DeclStmt									
ANR	489846	Decl							xmlNotation	xmlNotation *	notation
ANR	489847	Function	itemHashScanner	45:0:1607:1861							
ANR	489848	FunctionDef	"itemHashScanner (void * payload , void * data , xmlChar * name)"		489847	0					
ANR	489849	CompoundStatement		46:0:1688:1861	489847	0					
ANR	489850	IdentifierDeclStatement	nodeIterator * priv = ( nodeIterator * ) data ;	47:1:1691:1732	489847	0	True				
ANR	489851	IdentifierDecl	* priv = ( nodeIterator * ) data		489847	0					
ANR	489852	IdentifierDeclType	nodeIterator *		489847	0					
ANR	489853	Identifier	priv		489847	1					
ANR	489854	AssignmentExpression	* priv = ( nodeIterator * ) data		489847	2		=			
ANR	489855	Identifier	priv		489847	0					
ANR	489856	CastExpression	( nodeIterator * ) data		489847	1					
ANR	489857	CastTarget	nodeIterator *		489847	0					
ANR	489858	Identifier	data		489847	1					
ANR	489859	IfStatement	if ( priv -> cur < priv -> index )		489847	1					
ANR	489860	Condition	priv -> cur < priv -> index	49:4:1739:1761	489847	0	True				
ANR	489861	RelationalExpression	priv -> cur < priv -> index		489847	0		<			
ANR	489862	PtrMemberAccess	priv -> cur		489847	0					
ANR	489863	Identifier	priv		489847	0					
ANR	489864	Identifier	cur		489847	1					
ANR	489865	PtrMemberAccess	priv -> index		489847	1					
ANR	489866	Identifier	priv		489847	0					
ANR	489867	Identifier	index		489847	1					
ANR	489868	CompoundStatement		4:29:75:75	489847	1					
ANR	489869	ExpressionStatement	priv -> cur ++	50:2:1768:1779	489847	0	True				
ANR	489870	PostIncDecOperationExpression	priv -> cur ++		489847	0					
ANR	489871	PtrMemberAccess	priv -> cur		489847	0					
ANR	489872	Identifier	priv		489847	0					
ANR	489873	Identifier	cur		489847	1					
ANR	489874	IncDec	++		489847	1					
ANR	489875	ElseStatement	else		489847	0					
ANR	489876	CompoundStatement		6:8:100:100	489847	0					
ANR	489877	IfStatement	if ( priv -> node == NULL )		489847	0					
ANR	489878	Condition	priv -> node == NULL	52:5:1796:1813	489847	0	True				
ANR	489879	EqualityExpression	priv -> node == NULL		489847	0		==			
ANR	489880	PtrMemberAccess	priv -> node		489847	0					
ANR	489881	Identifier	priv		489847	0					
ANR	489882	Identifier	node		489847	1					
ANR	489883	Identifier	NULL		489847	1					
ANR	489884	CompoundStatement		7:25:127:127	489847	1					
ANR	489885	ExpressionStatement	priv -> node = ( xmlNode * ) payload	53:3:1821:1852	489847	0	True				
ANR	489886	AssignmentExpression	priv -> node = ( xmlNode * ) payload		489847	0		=			
ANR	489887	PtrMemberAccess	priv -> node		489847	0					
ANR	489888	Identifier	priv		489847	0					
ANR	489889	Identifier	node		489847	1					
ANR	489890	CastExpression	( xmlNode * ) payload		489847	1					
ANR	489891	CastTarget	xmlNode *		489847	0					
ANR	489892	Identifier	payload		489847	1					
ANR	489893	ReturnType	static void		489847	1					
ANR	489894	Identifier	itemHashScanner		489847	2					
ANR	489895	ParameterList	"void * payload , void * data , xmlChar * name"		489847	3					
ANR	489896	Parameter	void * payload	45:29:1636:1648	489847	0	True				
ANR	489897	ParameterType	void *		489847	0					
ANR	489898	Identifier	payload		489847	1					
ANR	489899	Parameter	void * data	45:44:1651:1660	489847	1	True				
ANR	489900	ParameterType	void *		489847	0					
ANR	489901	Identifier	data		489847	1					
ANR	489902	Parameter	xmlChar * name	45:56:1663:1675	489847	2	True				
ANR	489903	ParameterType	xmlChar *		489847	0					
ANR	489904	Identifier	name		489847	1					
ANR	489905	CFGEntryNode	ENTRY		489847		True				
ANR	489906	CFGExitNode	EXIT		489847		True				
ANR	489907	Symbol	NULL		489847						
ANR	489908	Symbol	data		489847						
ANR	489909	Symbol	payload		489847						
ANR	489910	Symbol	priv -> index		489847						
ANR	489911	Symbol	* priv		489847						
ANR	489912	Symbol	name		489847						
ANR	489913	Symbol	priv -> cur		489847						
ANR	489914	Symbol	priv		489847						
ANR	489915	Symbol	priv -> node		489847						
ANR	489916	Function	create_notation	59:0:1874:2472							
ANR	489917	FunctionDef	"create_notation (const xmlChar * name , const xmlChar * ExternalID , const xmlChar * SystemID)"		489916	0					
ANR	489918	CompoundStatement		60:0:1984:2472	489916	0					
ANR	489919	IdentifierDeclStatement	xmlEntityPtr ret ;	61:1:1987:2003	489916	0	True				
ANR	489920	IdentifierDecl	ret		489916	0					
ANR	489921	IdentifierDeclType	xmlEntityPtr		489916	0					
ANR	489922	Identifier	ret		489916	1					
ANR	489923	ExpressionStatement	ret = ( xmlEntityPtr ) xmlMalloc ( sizeof ( xmlEntity ) )	63:1:2007:2056	489916	1	True				
ANR	489924	AssignmentExpression	ret = ( xmlEntityPtr ) xmlMalloc ( sizeof ( xmlEntity ) )		489916	0		=			
ANR	489925	Identifier	ret		489916	0					
ANR	489926	CastExpression	( xmlEntityPtr ) xmlMalloc ( sizeof ( xmlEntity ) )		489916	1					
ANR	489927	CastTarget	xmlEntityPtr		489916	0					
ANR	489928	CallExpression	xmlMalloc ( sizeof ( xmlEntity ) )		489916	1					
ANR	489929	Callee	xmlMalloc		489916	0					
ANR	489930	Identifier	xmlMalloc		489916	0					
ANR	489931	ArgumentList	sizeof ( xmlEntity )		489916	1					
ANR	489932	Argument	sizeof ( xmlEntity )		489916	0					
ANR	489933	SizeofExpression	sizeof ( xmlEntity )		489916	0					
ANR	489934	Sizeof	sizeof		489916	0					
ANR	489935	SizeofOperand	xmlEntity		489916	1					
ANR	489936	ExpressionStatement	"memset ( ret , 0 , sizeof ( xmlEntity ) )"	64:4:2062:2095	489916	2	True				
ANR	489937	CallExpression	"memset ( ret , 0 , sizeof ( xmlEntity ) )"		489916	0					
ANR	489938	Callee	memset		489916	0					
ANR	489939	Identifier	memset		489916	0					
ANR	489940	ArgumentList	ret		489916	1					
ANR	489941	Argument	ret		489916	0					
ANR	489942	Identifier	ret		489916	0					
ANR	489943	Argument	0		489916	1					
ANR	489944	PrimaryExpression	0		489916	0					
ANR	489945	Argument	sizeof ( xmlEntity )		489916	2					
ANR	489946	SizeofExpression	sizeof ( xmlEntity )		489916	0					
ANR	489947	Sizeof	sizeof		489916	0					
ANR	489948	SizeofOperand	xmlEntity		489916	1					
ANR	489949	ExpressionStatement	ret -> type = XML_NOTATION_NODE	65:4:2101:2130	489916	3	True				
ANR	489950	AssignmentExpression	ret -> type = XML_NOTATION_NODE		489916	0		=			
ANR	489951	PtrMemberAccess	ret -> type		489916	0					
ANR	489952	Identifier	ret		489916	0					
ANR	489953	Identifier	type		489916	1					
ANR	489954	Identifier	XML_NOTATION_NODE		489916	1					
ANR	489955	ExpressionStatement	ret -> name = xmlStrdup ( name )	66:4:2136:2163	489916	4	True				
ANR	489956	AssignmentExpression	ret -> name = xmlStrdup ( name )		489916	0		=			
ANR	489957	PtrMemberAccess	ret -> name		489916	0					
ANR	489958	Identifier	ret		489916	0					
ANR	489959	Identifier	name		489916	1					
ANR	489960	CallExpression	xmlStrdup ( name )		489916	1					
ANR	489961	Callee	xmlStrdup		489916	0					
ANR	489962	Identifier	xmlStrdup		489916	0					
ANR	489963	ArgumentList	name		489916	1					
ANR	489964	Argument	name		489916	0					
ANR	489965	Identifier	name		489916	0					
ANR	489966	ExpressionStatement	ret -> ExternalID = xmlStrdup ( ExternalID )	67:1:2166:2205	489916	5	True				
ANR	489967	AssignmentExpression	ret -> ExternalID = xmlStrdup ( ExternalID )		489916	0		=			
ANR	489968	PtrMemberAccess	ret -> ExternalID		489916	0					
ANR	489969	Identifier	ret		489916	0					
ANR	489970	Identifier	ExternalID		489916	1					
ANR	489971	CallExpression	xmlStrdup ( ExternalID )		489916	1					
ANR	489972	Callee	xmlStrdup		489916	0					
ANR	489973	Identifier	xmlStrdup		489916	0					
ANR	489974	ArgumentList	ExternalID		489916	1					
ANR	489975	Argument	ExternalID		489916	0					
ANR	489976	Identifier	ExternalID		489916	0					
ANR	489977	ExpressionStatement	ret -> SystemID = xmlStrdup ( SystemID )	68:1:2208:2243	489916	6	True				
ANR	489978	AssignmentExpression	ret -> SystemID = xmlStrdup ( SystemID )		489916	0		=			
ANR	489979	PtrMemberAccess	ret -> SystemID		489916	0					
ANR	489980	Identifier	ret		489916	0					
ANR	489981	Identifier	SystemID		489916	1					
ANR	489982	CallExpression	xmlStrdup ( SystemID )		489916	1					
ANR	489983	Callee	xmlStrdup		489916	0					
ANR	489984	Identifier	xmlStrdup		489916	0					
ANR	489985	ArgumentList	SystemID		489916	1					
ANR	489986	Argument	SystemID		489916	0					
ANR	489987	Identifier	SystemID		489916	0					
ANR	489988	ExpressionStatement	ret -> length = 0	69:1:2246:2261	489916	7	True				
ANR	489989	AssignmentExpression	ret -> length = 0		489916	0		=			
ANR	489990	PtrMemberAccess	ret -> length		489916	0					
ANR	489991	Identifier	ret		489916	0					
ANR	489992	Identifier	length		489916	1					
ANR	489993	PrimaryExpression	0		489916	1					
ANR	489994	ExpressionStatement	ret -> content = NULL	70:1:2264:2283	489916	8	True				
ANR	489995	AssignmentExpression	ret -> content = NULL		489916	0		=			
ANR	489996	PtrMemberAccess	ret -> content		489916	0					
ANR	489997	Identifier	ret		489916	0					
ANR	489998	Identifier	content		489916	1					
ANR	489999	Identifier	NULL		489916	1					
ANR	490000	ExpressionStatement	ret -> URI = NULL	71:1:2286:2301	489916	9	True				
ANR	490001	AssignmentExpression	ret -> URI = NULL		489916	0		=			
ANR	490002	PtrMemberAccess	ret -> URI		489916	0					
ANR	490003	Identifier	ret		489916	0					
ANR	490004	Identifier	URI		489916	1					
ANR	490005	Identifier	NULL		489916	1					
ANR	490006	ExpressionStatement	ret -> orig = NULL	72:1:2304:2320	489916	10	True				
ANR	490007	AssignmentExpression	ret -> orig = NULL		489916	0		=			
ANR	490008	PtrMemberAccess	ret -> orig		489916	0					
ANR	490009	Identifier	ret		489916	0					
ANR	490010	Identifier	orig		489916	1					
ANR	490011	Identifier	NULL		489916	1					
ANR	490012	ExpressionStatement	ret -> children = NULL	73:1:2323:2343	489916	11	True				
ANR	490013	AssignmentExpression	ret -> children = NULL		489916	0		=			
ANR	490014	PtrMemberAccess	ret -> children		489916	0					
ANR	490015	Identifier	ret		489916	0					
ANR	490016	Identifier	children		489916	1					
ANR	490017	Identifier	NULL		489916	1					
ANR	490018	ExpressionStatement	ret -> parent = NULL	74:1:2346:2364	489916	12	True				
ANR	490019	AssignmentExpression	ret -> parent = NULL		489916	0		=			
ANR	490020	PtrMemberAccess	ret -> parent		489916	0					
ANR	490021	Identifier	ret		489916	0					
ANR	490022	Identifier	parent		489916	1					
ANR	490023	Identifier	NULL		489916	1					
ANR	490024	ExpressionStatement	ret -> doc = NULL	75:1:2367:2382	489916	13	True				
ANR	490025	AssignmentExpression	ret -> doc = NULL		489916	0		=			
ANR	490026	PtrMemberAccess	ret -> doc		489916	0					
ANR	490027	Identifier	ret		489916	0					
ANR	490028	Identifier	doc		489916	1					
ANR	490029	Identifier	NULL		489916	1					
ANR	490030	ExpressionStatement	ret -> _private = NULL	76:1:2385:2405	489916	14	True				
ANR	490031	AssignmentExpression	ret -> _private = NULL		489916	0		=			
ANR	490032	PtrMemberAccess	ret -> _private		489916	0					
ANR	490033	Identifier	ret		489916	0					
ANR	490034	Identifier	_private		489916	1					
ANR	490035	Identifier	NULL		489916	1					
ANR	490036	ExpressionStatement	ret -> last = NULL	77:1:2408:2424	489916	15	True				
ANR	490037	AssignmentExpression	ret -> last = NULL		489916	0		=			
ANR	490038	PtrMemberAccess	ret -> last		489916	0					
ANR	490039	Identifier	ret		489916	0					
ANR	490040	Identifier	last		489916	1					
ANR	490041	Identifier	NULL		489916	1					
ANR	490042	ExpressionStatement	ret -> prev = NULL	78:1:2427:2443	489916	16	True				
ANR	490043	AssignmentExpression	ret -> prev = NULL		489916	0		=			
ANR	490044	PtrMemberAccess	ret -> prev		489916	0					
ANR	490045	Identifier	ret		489916	0					
ANR	490046	Identifier	prev		489916	1					
ANR	490047	Identifier	NULL		489916	1					
ANR	490048	ReturnStatement	return ( ( xmlNodePtr ) ret ) ;	79:1:2446:2470	489916	17	True				
ANR	490049	CastExpression	( xmlNodePtr ) ret		489916	0					
ANR	490050	CastTarget	xmlNodePtr		489916	0					
ANR	490051	Identifier	ret		489916	1					
ANR	490052	ReturnType	xmlNodePtr		489916	1					
ANR	490053	Identifier	create_notation		489916	2					
ANR	490054	ParameterList	"const xmlChar * name , const xmlChar * ExternalID , const xmlChar * SystemID"		489916	3					
ANR	490055	Parameter	const xmlChar * name	59:27:1901:1919	489916	0	True				
ANR	490056	ParameterType	const xmlChar *		489916	0					
ANR	490057	Identifier	name		489916	1					
ANR	490058	Parameter	const xmlChar * ExternalID	59:48:1922:1946	489916	1	True				
ANR	490059	ParameterType	const xmlChar *		489916	0					
ANR	490060	Identifier	ExternalID		489916	1					
ANR	490061	Parameter	const xmlChar * SystemID	59:75:1949:1971	489916	2	True				
ANR	490062	ParameterType	const xmlChar *		489916	0					
ANR	490063	Identifier	SystemID		489916	1					
ANR	490064	CFGEntryNode	ENTRY		489916		True				
ANR	490065	CFGExitNode	EXIT		489916		True				
ANR	490066	Symbol	ret		489916						
ANR	490067	Symbol	NULL		489916						
ANR	490068	Symbol	XML_NOTATION_NODE		489916						
ANR	490069	Symbol	ret -> orig		489916						
ANR	490070	Symbol	ExternalID		489916						
ANR	490071	Symbol	SystemID		489916						
ANR	490072	Symbol	xmlStrdup		489916						
ANR	490073	Symbol	ret -> ExternalID		489916						
ANR	490074	Symbol	ret -> content		489916						
ANR	490075	Symbol	* ret		489916						
ANR	490076	Symbol	ret -> SystemID		489916						
ANR	490077	Symbol	ret -> name		489916						
ANR	490078	Symbol	ret -> doc		489916						
ANR	490079	Symbol	ret -> _private		489916						
ANR	490080	Symbol	ret -> children		489916						
ANR	490081	Symbol	ret -> length		489916						
ANR	490082	Symbol	ret -> last		489916						
ANR	490083	Symbol	ret -> prev		489916						
ANR	490084	Symbol	name		489916						
ANR	490085	Symbol	ret -> URI		489916						
ANR	490086	Symbol	ret -> parent		489916						
ANR	490087	Symbol	xmlMalloc		489916						
ANR	490088	Symbol	ret -> type		489916						
ANR	490089	Function	php_dom_libxml_hash_iter	83:0:2485:2900							
ANR	490090	FunctionDef	"php_dom_libxml_hash_iter (xmlHashTable * ht , int index)"		490089	0					
ANR	490091	CompoundStatement		84:0:2558:2900	490089	0					
ANR	490092	IdentifierDeclStatement	xmlNode * nodep = NULL ;	85:1:2561:2582	490089	0	True				
ANR	490093	IdentifierDecl	* nodep = NULL		490089	0					
ANR	490094	IdentifierDeclType	xmlNode *		490089	0					
ANR	490095	Identifier	nodep		490089	1					
ANR	490096	AssignmentExpression	* nodep = NULL		490089	2		=			
ANR	490097	Identifier	NULL		490089	0					
ANR	490098	Identifier	NULL		490089	1					
ANR	490099	IdentifierDeclStatement	nodeIterator * iter ;	86:1:2585:2603	490089	1	True				
ANR	490100	IdentifierDecl	* iter		490089	0					
ANR	490101	IdentifierDeclType	nodeIterator *		490089	0					
ANR	490102	Identifier	iter		490089	1					
ANR	490103	IdentifierDeclStatement	int htsize ;	87:1:2606:2616	490089	2	True				
ANR	490104	IdentifierDecl	htsize		490089	0					
ANR	490105	IdentifierDeclType	int		490089	0					
ANR	490106	Identifier	htsize		490089	1					
ANR	490107	IfStatement	if ( ( htsize = xmlHashSize ( ht ) ) > 0 && index < htsize )		490089	3					
ANR	490108	Condition	( htsize = xmlHashSize ( ht ) ) > 0 && index < htsize	89:5:2624:2671	490089	0	True				
ANR	490109	AndExpression	( htsize = xmlHashSize ( ht ) ) > 0 && index < htsize		490089	0		&&			
ANR	490110	RelationalExpression	( htsize = xmlHashSize ( ht ) ) > 0		490089	0		>			
ANR	490111	AssignmentExpression	htsize = xmlHashSize ( ht )		490089	0		=			
ANR	490112	Identifier	htsize		490089	0					
ANR	490113	CallExpression	xmlHashSize ( ht )		490089	1					
ANR	490114	Callee	xmlHashSize		490089	0					
ANR	490115	Identifier	xmlHashSize		490089	0					
ANR	490116	ArgumentList	ht		490089	1					
ANR	490117	Argument	ht		490089	0					
ANR	490118	Identifier	ht		490089	0					
ANR	490119	PrimaryExpression	0		490089	1					
ANR	490120	RelationalExpression	index < htsize		490089	1		<			
ANR	490121	Identifier	index		490089	0					
ANR	490122	Identifier	htsize		490089	1					
ANR	490123	CompoundStatement		6:55:115:115	490089	1					
ANR	490124	ExpressionStatement	iter = emalloc ( sizeof ( nodeIterator ) )	90:2:2678:2714	490089	0	True				
ANR	490125	AssignmentExpression	iter = emalloc ( sizeof ( nodeIterator ) )		490089	0		=			
ANR	490126	Identifier	iter		490089	0					
ANR	490127	CallExpression	emalloc ( sizeof ( nodeIterator ) )		490089	1					
ANR	490128	Callee	emalloc		490089	0					
ANR	490129	Identifier	emalloc		490089	0					
ANR	490130	ArgumentList	sizeof ( nodeIterator )		490089	1					
ANR	490131	Argument	sizeof ( nodeIterator )		490089	0					
ANR	490132	SizeofExpression	sizeof ( nodeIterator )		490089	0					
ANR	490133	Sizeof	sizeof		490089	0					
ANR	490134	SizeofOperand	nodeIterator		490089	1					
ANR	490135	ExpressionStatement	iter -> cur = 0	91:2:2718:2731	490089	1	True				
ANR	490136	AssignmentExpression	iter -> cur = 0		490089	0		=			
ANR	490137	PtrMemberAccess	iter -> cur		490089	0					
ANR	490138	Identifier	iter		490089	0					
ANR	490139	Identifier	cur		490089	1					
ANR	490140	PrimaryExpression	0		490089	1					
ANR	490141	ExpressionStatement	iter -> index = index	92:2:2735:2754	490089	2	True				
ANR	490142	AssignmentExpression	iter -> index = index		490089	0		=			
ANR	490143	PtrMemberAccess	iter -> index		490089	0					
ANR	490144	Identifier	iter		490089	0					
ANR	490145	Identifier	index		490089	1					
ANR	490146	Identifier	index		490089	1					
ANR	490147	ExpressionStatement	iter -> node = NULL	93:2:2758:2775	490089	3	True				
ANR	490148	AssignmentExpression	iter -> node = NULL		490089	0		=			
ANR	490149	PtrMemberAccess	iter -> node		490089	0					
ANR	490150	Identifier	iter		490089	0					
ANR	490151	Identifier	node		490089	1					
ANR	490152	Identifier	NULL		490089	1					
ANR	490153	ExpressionStatement	"xmlHashScan ( ht , itemHashScanner , iter )"	94:2:2779:2817	490089	4	True				
ANR	490154	CallExpression	"xmlHashScan ( ht , itemHashScanner , iter )"		490089	0					
ANR	490155	Callee	xmlHashScan		490089	0					
ANR	490156	Identifier	xmlHashScan		490089	0					
ANR	490157	ArgumentList	ht		490089	1					
ANR	490158	Argument	ht		490089	0					
ANR	490159	Identifier	ht		490089	0					
ANR	490160	Argument	itemHashScanner		490089	1					
ANR	490161	Identifier	itemHashScanner		490089	0					
ANR	490162	Argument	iter		490089	2					
ANR	490163	Identifier	iter		490089	0					
ANR	490164	ExpressionStatement	nodep = iter -> node	95:2:2821:2839	490089	5	True				
ANR	490165	AssignmentExpression	nodep = iter -> node		490089	0		=			
ANR	490166	Identifier	nodep		490089	0					
ANR	490167	PtrMemberAccess	iter -> node		490089	1					
ANR	490168	Identifier	iter		490089	0					
ANR	490169	Identifier	node		490089	1					
ANR	490170	ExpressionStatement	efree ( iter )	96:2:2843:2854	490089	6	True				
ANR	490171	CallExpression	efree ( iter )		490089	0					
ANR	490172	Callee	efree		490089	0					
ANR	490173	Identifier	efree		490089	0					
ANR	490174	ArgumentList	iter		490089	1					
ANR	490175	Argument	iter		490089	0					
ANR	490176	Identifier	iter		490089	0					
ANR	490177	ReturnStatement	return nodep ;	97:2:2858:2870	490089	7	True				
ANR	490178	Identifier	nodep		490089	0					
ANR	490179	ElseStatement	else		490089	0					
ANR	490180	CompoundStatement		15:8:321:321	490089	0					
ANR	490181	ReturnStatement	return NULL ;	99:2:2884:2895	490089	0	True				
ANR	490182	Identifier	NULL		490089	0					
ANR	490183	ReturnType	xmlNode *		490089	1					
ANR	490184	Identifier	php_dom_libxml_hash_iter		490089	2					
ANR	490185	ParameterList	"xmlHashTable * ht , int index"		490089	3					
ANR	490186	Parameter	xmlHashTable * ht	83:34:2519:2534	490089	0	True				
ANR	490187	ParameterType	xmlHashTable *		490089	0					
ANR	490188	Identifier	ht		490089	1					
ANR	490189	Parameter	int index	83:52:2537:2545	490089	1	True				
ANR	490190	ParameterType	int		490089	0					
ANR	490191	Identifier	index		490089	1					
ANR	490192	CFGEntryNode	ENTRY		490089		True				
ANR	490193	CFGExitNode	EXIT		490089		True				
ANR	490194	Symbol	xmlHashSize		490089						
ANR	490195	Symbol	NULL		490089						
ANR	490196	Symbol	index		490089						
ANR	490197	Symbol	iter		490089						
ANR	490198	Symbol	ht		490089						
ANR	490199	Symbol	nodep		490089						
ANR	490200	Symbol	iter -> index		490089						
ANR	490201	Symbol	itemHashScanner		490089						
ANR	490202	Symbol	* iter		490089						
ANR	490203	Symbol	emalloc		490089						
ANR	490204	Symbol	iter -> node		490089						
ANR	490205	Symbol	iter -> cur		490089						
ANR	490206	Symbol	htsize		490089						
ANR	490207	Function	php_dom_libxml_notation_iter	104:0:2913:3409							
ANR	490208	FunctionDef	"php_dom_libxml_notation_iter (xmlHashTable * ht , int index)"		490207	0					
ANR	490209	CompoundStatement		105:0:2990:3409	490207	0					
ANR	490210	IdentifierDeclStatement	notationIterator * iter ;	106:1:2993:3015	490207	0	True				
ANR	490211	IdentifierDecl	* iter		490207	0					
ANR	490212	IdentifierDeclType	notationIterator *		490207	0					
ANR	490213	Identifier	iter		490207	1					
ANR	490214	IdentifierDeclStatement	xmlNotation * notep = NULL ;	107:1:3018:3043	490207	1	True				
ANR	490215	IdentifierDecl	* notep = NULL		490207	0					
ANR	490216	IdentifierDeclType	xmlNotation *		490207	0					
ANR	490217	Identifier	notep		490207	1					
ANR	490218	AssignmentExpression	* notep = NULL		490207	2		=			
ANR	490219	Identifier	NULL		490207	0					
ANR	490220	Identifier	NULL		490207	1					
ANR	490221	IdentifierDeclStatement	int htsize ;	108:1:3046:3056	490207	2	True				
ANR	490222	IdentifierDecl	htsize		490207	0					
ANR	490223	IdentifierDeclType	int		490207	0					
ANR	490224	Identifier	htsize		490207	1					
ANR	490225	IfStatement	if ( ( htsize = xmlHashSize ( ht ) ) > 0 && index < htsize )		490207	3					
ANR	490226	Condition	( htsize = xmlHashSize ( ht ) ) > 0 && index < htsize	110:5:3064:3111	490207	0	True				
ANR	490227	AndExpression	( htsize = xmlHashSize ( ht ) ) > 0 && index < htsize		490207	0		&&			
ANR	490228	RelationalExpression	( htsize = xmlHashSize ( ht ) ) > 0		490207	0		>			
ANR	490229	AssignmentExpression	htsize = xmlHashSize ( ht )		490207	0		=			
ANR	490230	Identifier	htsize		490207	0					
ANR	490231	CallExpression	xmlHashSize ( ht )		490207	1					
ANR	490232	Callee	xmlHashSize		490207	0					
ANR	490233	Identifier	xmlHashSize		490207	0					
ANR	490234	ArgumentList	ht		490207	1					
ANR	490235	Argument	ht		490207	0					
ANR	490236	Identifier	ht		490207	0					
ANR	490237	PrimaryExpression	0		490207	1					
ANR	490238	RelationalExpression	index < htsize		490207	1		<			
ANR	490239	Identifier	index		490207	0					
ANR	490240	Identifier	htsize		490207	1					
ANR	490241	CompoundStatement		6:55:123:123	490207	1					
ANR	490242	ExpressionStatement	iter = emalloc ( sizeof ( notationIterator ) )	111:2:3118:3158	490207	0	True				
ANR	490243	AssignmentExpression	iter = emalloc ( sizeof ( notationIterator ) )		490207	0		=			
ANR	490244	Identifier	iter		490207	0					
ANR	490245	CallExpression	emalloc ( sizeof ( notationIterator ) )		490207	1					
ANR	490246	Callee	emalloc		490207	0					
ANR	490247	Identifier	emalloc		490207	0					
ANR	490248	ArgumentList	sizeof ( notationIterator )		490207	1					
ANR	490249	Argument	sizeof ( notationIterator )		490207	0					
ANR	490250	SizeofExpression	sizeof ( notationIterator )		490207	0					
ANR	490251	Sizeof	sizeof		490207	0					
ANR	490252	SizeofOperand	notationIterator		490207	1					
ANR	490253	ExpressionStatement	iter -> cur = 0	112:2:3162:3175	490207	1	True				
ANR	490254	AssignmentExpression	iter -> cur = 0		490207	0		=			
ANR	490255	PtrMemberAccess	iter -> cur		490207	0					
ANR	490256	Identifier	iter		490207	0					
ANR	490257	Identifier	cur		490207	1					
ANR	490258	PrimaryExpression	0		490207	1					
ANR	490259	ExpressionStatement	iter -> index = index	113:2:3179:3198	490207	2	True				
ANR	490260	AssignmentExpression	iter -> index = index		490207	0		=			
ANR	490261	PtrMemberAccess	iter -> index		490207	0					
ANR	490262	Identifier	iter		490207	0					
ANR	490263	Identifier	index		490207	1					
ANR	490264	Identifier	index		490207	1					
ANR	490265	ExpressionStatement	iter -> notation = NULL	114:2:3202:3223	490207	3	True				
ANR	490266	AssignmentExpression	iter -> notation = NULL		490207	0		=			
ANR	490267	PtrMemberAccess	iter -> notation		490207	0					
ANR	490268	Identifier	iter		490207	0					
ANR	490269	Identifier	notation		490207	1					
ANR	490270	Identifier	NULL		490207	1					
ANR	490271	ExpressionStatement	"xmlHashScan ( ht , itemHashScanner , iter )"	115:2:3227:3265	490207	4	True				
ANR	490272	CallExpression	"xmlHashScan ( ht , itemHashScanner , iter )"		490207	0					
ANR	490273	Callee	xmlHashScan		490207	0					
ANR	490274	Identifier	xmlHashScan		490207	0					
ANR	490275	ArgumentList	ht		490207	1					
ANR	490276	Argument	ht		490207	0					
ANR	490277	Identifier	ht		490207	0					
ANR	490278	Argument	itemHashScanner		490207	1					
ANR	490279	Identifier	itemHashScanner		490207	0					
ANR	490280	Argument	iter		490207	2					
ANR	490281	Identifier	iter		490207	0					
ANR	490282	ExpressionStatement	notep = iter -> notation	116:2:3269:3291	490207	5	True				
ANR	490283	AssignmentExpression	notep = iter -> notation		490207	0		=			
ANR	490284	Identifier	notep		490207	0					
ANR	490285	PtrMemberAccess	iter -> notation		490207	1					
ANR	490286	Identifier	iter		490207	0					
ANR	490287	Identifier	notation		490207	1					
ANR	490288	ExpressionStatement	efree ( iter )	117:2:3295:3306	490207	6	True				
ANR	490289	CallExpression	efree ( iter )		490207	0					
ANR	490290	Callee	efree		490207	0					
ANR	490291	Identifier	efree		490207	0					
ANR	490292	ArgumentList	iter		490207	1					
ANR	490293	Argument	iter		490207	0					
ANR	490294	Identifier	iter		490207	0					
ANR	490295	ReturnStatement	"return create_notation ( notep -> name , notep -> PublicID , notep -> SystemID ) ;"	118:2:3310:3379	490207	7	True				
ANR	490296	CallExpression	"create_notation ( notep -> name , notep -> PublicID , notep -> SystemID )"		490207	0					
ANR	490297	Callee	create_notation		490207	0					
ANR	490298	Identifier	create_notation		490207	0					
ANR	490299	ArgumentList	notep -> name		490207	1					
ANR	490300	Argument	notep -> name		490207	0					
ANR	490301	PtrMemberAccess	notep -> name		490207	0					
ANR	490302	Identifier	notep		490207	0					
ANR	490303	Identifier	name		490207	1					
ANR	490304	Argument	notep -> PublicID		490207	1					
ANR	490305	PtrMemberAccess	notep -> PublicID		490207	0					
ANR	490306	Identifier	notep		490207	0					
ANR	490307	Identifier	PublicID		490207	1					
ANR	490308	Argument	notep -> SystemID		490207	2					
ANR	490309	PtrMemberAccess	notep -> SystemID		490207	0					
ANR	490310	Identifier	notep		490207	0					
ANR	490311	Identifier	SystemID		490207	1					
ANR	490312	ElseStatement	else		490207	0					
ANR	490313	CompoundStatement		15:8:398:398	490207	0					
ANR	490314	ReturnStatement	return NULL ;	120:2:3393:3404	490207	0	True				
ANR	490315	Identifier	NULL		490207	0					
ANR	490316	ReturnType	xmlNode *		490207	1					
ANR	490317	Identifier	php_dom_libxml_notation_iter		490207	2					
ANR	490318	ParameterList	"xmlHashTable * ht , int index"		490207	3					
ANR	490319	Parameter	xmlHashTable * ht	104:38:2951:2966	490207	0	True				
ANR	490320	ParameterType	xmlHashTable *		490207	0					
ANR	490321	Identifier	ht		490207	1					
ANR	490322	Parameter	int index	104:56:2969:2977	490207	1	True				
ANR	490323	ParameterType	int		490207	0					
ANR	490324	Identifier	index		490207	1					
ANR	490325	CFGEntryNode	ENTRY		490207		True				
ANR	490326	CFGExitNode	EXIT		490207		True				
ANR	490327	Symbol	xmlHashSize		490207						
ANR	490328	Symbol	notep -> PublicID		490207						
ANR	490329	Symbol	NULL		490207						
ANR	490330	Symbol	iter -> notation		490207						
ANR	490331	Symbol	notep -> name		490207						
ANR	490332	Symbol	index		490207						
ANR	490333	Symbol	iter		490207						
ANR	490334	Symbol	notep -> SystemID		490207						
ANR	490335	Symbol	* notep		490207						
ANR	490336	Symbol	ht		490207						
ANR	490337	Symbol	iter -> index		490207						
ANR	490338	Symbol	itemHashScanner		490207						
ANR	490339	Symbol	* iter		490207						
ANR	490340	Symbol	emalloc		490207						
ANR	490341	Symbol	create_notation		490207						
ANR	490342	Symbol	notep		490207						
ANR	490343	Symbol	iter -> cur		490207						
ANR	490344	Symbol	htsize		490207						
ANR	490345	Function	php_dom_iterator_dtor	125:0:3422:3628							
ANR	490346	FunctionDef	php_dom_iterator_dtor (zend_object_iterator * iter)		490345	0					
ANR	490347	CompoundStatement		126:0:3494:3628	490345	0					
ANR	490348	IdentifierDeclStatement	php_dom_iterator * iterator = ( php_dom_iterator * ) iter ;	127:1:3497:3550	490345	0	True				
ANR	490349	IdentifierDecl	* iterator = ( php_dom_iterator * ) iter		490345	0					
ANR	490350	IdentifierDeclType	php_dom_iterator *		490345	0					
ANR	490351	Identifier	iterator		490345	1					
ANR	490352	AssignmentExpression	* iterator = ( php_dom_iterator * ) iter		490345	2		=			
ANR	490353	Identifier	iterator		490345	0					
ANR	490354	CastExpression	( php_dom_iterator * ) iter		490345	1					
ANR	490355	CastTarget	php_dom_iterator *		490345	0					
ANR	490356	Identifier	iter		490345	1					
ANR	490357	ExpressionStatement	zval_ptr_dtor ( & iterator -> intern . data )	129:1:3554:3591	490345	1	True				
ANR	490358	CallExpression	zval_ptr_dtor ( & iterator -> intern . data )		490345	0					
ANR	490359	Callee	zval_ptr_dtor		490345	0					
ANR	490360	Identifier	zval_ptr_dtor		490345	0					
ANR	490361	ArgumentList	& iterator -> intern . data		490345	1					
ANR	490362	Argument	& iterator -> intern . data		490345	0					
ANR	490363	UnaryOperationExpression	& iterator -> intern . data		490345	0					
ANR	490364	UnaryOperator	&		490345	0					
ANR	490365	MemberAccess	iterator -> intern . data		490345	1					
ANR	490366	PtrMemberAccess	iterator -> intern		490345	0					
ANR	490367	Identifier	iterator		490345	0					
ANR	490368	Identifier	intern		490345	1					
ANR	490369	Identifier	data		490345	1					
ANR	490370	ExpressionStatement	zval_ptr_dtor ( & iterator -> curobj )	130:1:3594:3626	490345	2	True				
ANR	490371	CallExpression	zval_ptr_dtor ( & iterator -> curobj )		490345	0					
ANR	490372	Callee	zval_ptr_dtor		490345	0					
ANR	490373	Identifier	zval_ptr_dtor		490345	0					
ANR	490374	ArgumentList	& iterator -> curobj		490345	1					
ANR	490375	Argument	& iterator -> curobj		490345	0					
ANR	490376	UnaryOperationExpression	& iterator -> curobj		490345	0					
ANR	490377	UnaryOperator	&		490345	0					
ANR	490378	PtrMemberAccess	iterator -> curobj		490345	1					
ANR	490379	Identifier	iterator		490345	0					
ANR	490380	Identifier	curobj		490345	1					
ANR	490381	ReturnType	static void		490345	1					
ANR	490382	Identifier	php_dom_iterator_dtor		490345	2					
ANR	490383	ParameterList	zend_object_iterator * iter		490345	3					
ANR	490384	Parameter	zend_object_iterator * iter	125:34:3456:3481	490345	0	True				
ANR	490385	ParameterType	zend_object_iterator *		490345	0					
ANR	490386	Identifier	iter		490345	1					
ANR	490387	CFGEntryNode	ENTRY		490345		True				
ANR	490388	CFGExitNode	EXIT		490345		True				
ANR	490389	Symbol	& iterator -> intern . data		490345						
ANR	490390	Symbol	iterator		490345						
ANR	490391	Symbol	iterator -> intern		490345						
ANR	490392	Symbol	* iterator		490345						
ANR	490393	Symbol	iter		490345						
ANR	490394	Symbol	& iterator -> intern		490345						
ANR	490395	Symbol	& iterator -> curobj		490345						
ANR	490396	Function	php_dom_iterator_valid	134:0:3641:3867							
ANR	490397	FunctionDef	php_dom_iterator_valid (zend_object_iterator * iter)		490396	0					
ANR	490398	CompoundStatement		135:0:3713:3867	490396	0					
ANR	490399	IdentifierDeclStatement	php_dom_iterator * iterator = ( php_dom_iterator * ) iter ;	137:1:3717:3770	490396	0	True				
ANR	490400	IdentifierDecl	* iterator = ( php_dom_iterator * ) iter		490396	0					
ANR	490401	IdentifierDeclType	php_dom_iterator *		490396	0					
ANR	490402	Identifier	iterator		490396	1					
ANR	490403	AssignmentExpression	* iterator = ( php_dom_iterator * ) iter		490396	2		=			
ANR	490404	Identifier	iterator		490396	0					
ANR	490405	CastExpression	( php_dom_iterator * ) iter		490396	1					
ANR	490406	CastTarget	php_dom_iterator *		490396	0					
ANR	490407	Identifier	iter		490396	1					
ANR	490408	IfStatement	if ( Z_TYPE ( iterator -> curobj ) != IS_UNDEF )		490396	1					
ANR	490409	Condition	Z_TYPE ( iterator -> curobj ) != IS_UNDEF	139:5:3778:3813	490396	0	True				
ANR	490410	EqualityExpression	Z_TYPE ( iterator -> curobj ) != IS_UNDEF		490396	0		!=			
ANR	490411	CallExpression	Z_TYPE ( iterator -> curobj )		490396	0					
ANR	490412	Callee	Z_TYPE		490396	0					
ANR	490413	Identifier	Z_TYPE		490396	0					
ANR	490414	ArgumentList	iterator -> curobj		490396	1					
ANR	490415	Argument	iterator -> curobj		490396	0					
ANR	490416	PtrMemberAccess	iterator -> curobj		490396	0					
ANR	490417	Identifier	iterator		490396	0					
ANR	490418	Identifier	curobj		490396	1					
ANR	490419	Identifier	IS_UNDEF		490396	1					
ANR	490420	CompoundStatement		5:43:102:102	490396	1					
ANR	490421	ReturnStatement	return SUCCESS ;	140:2:3820:3834	490396	0	True				
ANR	490422	Identifier	SUCCESS		490396	0					
ANR	490423	ElseStatement	else		490396	0					
ANR	490424	CompoundStatement		7:8:130:130	490396	0					
ANR	490425	ReturnStatement	return FAILURE ;	142:2:3848:3862	490396	0	True				
ANR	490426	Identifier	FAILURE		490396	0					
ANR	490427	ReturnType	static int		490396	1					
ANR	490428	Identifier	php_dom_iterator_valid		490396	2					
ANR	490429	ParameterList	zend_object_iterator * iter		490396	3					
ANR	490430	Parameter	zend_object_iterator * iter	134:34:3675:3700	490396	0	True				
ANR	490431	ParameterType	zend_object_iterator *		490396	0					
ANR	490432	Identifier	iter		490396	1					
ANR	490433	CFGEntryNode	ENTRY		490396		True				
ANR	490434	CFGExitNode	EXIT		490396		True				
ANR	490435	Symbol	iterator		490396						
ANR	490436	Symbol	* iterator		490396						
ANR	490437	Symbol	SUCCESS		490396						
ANR	490438	Symbol	iterator -> curobj		490396						
ANR	490439	Symbol	iter		490396						
ANR	490440	Symbol	Z_TYPE		490396						
ANR	490441	Symbol	FAILURE		490396						
ANR	490442	Symbol	IS_UNDEF		490396						
ANR	490443	Function	php_dom_iterator_current_data	147:0:3880:4040							
ANR	490444	FunctionDef	php_dom_iterator_current_data (zend_object_iterator * iter)		490443	0					
ANR	490445	CompoundStatement		148:0:3954:4040	490443	0					
ANR	490446	IdentifierDeclStatement	php_dom_iterator * iterator = ( php_dom_iterator * ) iter ;	149:1:3957:4010	490443	0	True				
ANR	490447	IdentifierDecl	* iterator = ( php_dom_iterator * ) iter		490443	0					
ANR	490448	IdentifierDeclType	php_dom_iterator *		490443	0					
ANR	490449	Identifier	iterator		490443	1					
ANR	490450	AssignmentExpression	* iterator = ( php_dom_iterator * ) iter		490443	2		=			
ANR	490451	Identifier	iterator		490443	0					
ANR	490452	CastExpression	( php_dom_iterator * ) iter		490443	1					
ANR	490453	CastTarget	php_dom_iterator *		490443	0					
ANR	490454	Identifier	iter		490443	1					
ANR	490455	ReturnStatement	return & iterator -> curobj ;	151:1:4014:4038	490443	1	True				
ANR	490456	UnaryOperationExpression	& iterator -> curobj		490443	0					
ANR	490457	UnaryOperator	&		490443	0					
ANR	490458	PtrMemberAccess	iterator -> curobj		490443	1					
ANR	490459	Identifier	iterator		490443	0					
ANR	490460	Identifier	curobj		490443	1					
ANR	490461	ReturnType	zval *		490443	1					
ANR	490462	Identifier	php_dom_iterator_current_data		490443	2					
ANR	490463	ParameterList	zend_object_iterator * iter		490443	3					
ANR	490464	Parameter	zend_object_iterator * iter	147:36:3916:3941	490443	0	True				
ANR	490465	ParameterType	zend_object_iterator *		490443	0					
ANR	490466	Identifier	iter		490443	1					
ANR	490467	CFGEntryNode	ENTRY		490443		True				
ANR	490468	CFGExitNode	EXIT		490443		True				
ANR	490469	Symbol	iterator		490443						
ANR	490470	Symbol	iter		490443						
ANR	490471	Symbol	& iterator -> curobj		490443						
ANR	490472	Function	php_dom_iterator_current_key	155:0:4053:4647							
ANR	490473	FunctionDef	"php_dom_iterator_current_key (zend_object_iterator * iter , zval * key)"		490472	0					
ANR	490474	CompoundStatement		156:0:4143:4647	490472	0					
ANR	490475	IdentifierDeclStatement	php_dom_iterator * iterator = ( php_dom_iterator * ) iter ;	157:1:4146:4199	490472	0	True				
ANR	490476	IdentifierDecl	* iterator = ( php_dom_iterator * ) iter		490472	0					
ANR	490477	IdentifierDeclType	php_dom_iterator *		490472	0					
ANR	490478	Identifier	iterator		490472	1					
ANR	490479	AssignmentExpression	* iterator = ( php_dom_iterator * ) iter		490472	2		=			
ANR	490480	Identifier	iterator		490472	0					
ANR	490481	CastExpression	( php_dom_iterator * ) iter		490472	1					
ANR	490482	CastTarget	php_dom_iterator *		490472	0					
ANR	490483	Identifier	iter		490472	1					
ANR	490484	IdentifierDeclStatement	zval * object = & iterator -> intern . data ;	158:1:4202:4239	490472	1	True				
ANR	490485	IdentifierDecl	* object = & iterator -> intern . data		490472	0					
ANR	490486	IdentifierDeclType	zval *		490472	0					
ANR	490487	Identifier	object		490472	1					
ANR	490488	AssignmentExpression	* object = & iterator -> intern . data		490472	2		=			
ANR	490489	Identifier	object		490472	0					
ANR	490490	UnaryOperationExpression	& iterator -> intern . data		490472	1					
ANR	490491	UnaryOperator	&		490472	0					
ANR	490492	MemberAccess	iterator -> intern . data		490472	1					
ANR	490493	PtrMemberAccess	iterator -> intern		490472	0					
ANR	490494	Identifier	iterator		490472	0					
ANR	490495	Identifier	intern		490472	1					
ANR	490496	Identifier	data		490472	1					
ANR	490497	IfStatement	"if ( instanceof_function ( Z_OBJCE_P ( object ) , dom_nodelist_class_entry ) )"		490472	2					
ANR	490498	Condition	"instanceof_function ( Z_OBJCE_P ( object ) , dom_nodelist_class_entry )"	160:5:4247:4310	490472	0	True				
ANR	490499	CallExpression	"instanceof_function ( Z_OBJCE_P ( object ) , dom_nodelist_class_entry )"		490472	0					
ANR	490500	Callee	instanceof_function		490472	0					
ANR	490501	Identifier	instanceof_function		490472	0					
ANR	490502	ArgumentList	Z_OBJCE_P ( object )		490472	1					
ANR	490503	Argument	Z_OBJCE_P ( object )		490472	0					
ANR	490504	CallExpression	Z_OBJCE_P ( object )		490472	0					
ANR	490505	Callee	Z_OBJCE_P		490472	0					
ANR	490506	Identifier	Z_OBJCE_P		490472	0					
ANR	490507	ArgumentList	object		490472	1					
ANR	490508	Argument	object		490472	0					
ANR	490509	Identifier	object		490472	0					
ANR	490510	Argument	dom_nodelist_class_entry		490472	1					
ANR	490511	Identifier	dom_nodelist_class_entry		490472	0					
ANR	490512	CompoundStatement		5:71:169:169	490472	1					
ANR	490513	ExpressionStatement	"ZVAL_LONG ( key , iter -> index )"	161:2:4317:4344	490472	0	True				
ANR	490514	CallExpression	"ZVAL_LONG ( key , iter -> index )"		490472	0					
ANR	490515	Callee	ZVAL_LONG		490472	0					
ANR	490516	Identifier	ZVAL_LONG		490472	0					
ANR	490517	ArgumentList	key		490472	1					
ANR	490518	Argument	key		490472	0					
ANR	490519	Identifier	key		490472	0					
ANR	490520	Argument	iter -> index		490472	1					
ANR	490521	PtrMemberAccess	iter -> index		490472	0					
ANR	490522	Identifier	iter		490472	0					
ANR	490523	Identifier	index		490472	1					
ANR	490524	ElseStatement	else		490472	0					
ANR	490525	CompoundStatement		8:2:214:264	490472	0					
ANR	490526	IdentifierDeclStatement	dom_object * intern = Z_DOMOBJ_P ( & iterator -> curobj ) ;	163:2:4358:4408	490472	0	True				
ANR	490527	IdentifierDecl	* intern = Z_DOMOBJ_P ( & iterator -> curobj )		490472	0					
ANR	490528	IdentifierDeclType	dom_object *		490472	0					
ANR	490529	Identifier	intern		490472	1					
ANR	490530	AssignmentExpression	* intern = Z_DOMOBJ_P ( & iterator -> curobj )		490472	2		=			
ANR	490531	Identifier	intern		490472	0					
ANR	490532	CallExpression	Z_DOMOBJ_P ( & iterator -> curobj )		490472	1					
ANR	490533	Callee	Z_DOMOBJ_P		490472	0					
ANR	490534	Identifier	Z_DOMOBJ_P		490472	0					
ANR	490535	ArgumentList	& iterator -> curobj		490472	1					
ANR	490536	Argument	& iterator -> curobj		490472	0					
ANR	490537	UnaryOperationExpression	& iterator -> curobj		490472	0					
ANR	490538	UnaryOperator	&		490472	0					
ANR	490539	PtrMemberAccess	iterator -> curobj		490472	1					
ANR	490540	Identifier	iterator		490472	0					
ANR	490541	Identifier	curobj		490472	1					
ANR	490542	IfStatement	if ( intern != NULL && intern -> ptr != NULL )		490472	1					
ANR	490543	Condition	intern != NULL && intern -> ptr != NULL	165:6:4417:4453	490472	0	True				
ANR	490544	AndExpression	intern != NULL && intern -> ptr != NULL		490472	0		&&			
ANR	490545	EqualityExpression	intern != NULL		490472	0		!=			
ANR	490546	Identifier	intern		490472	0					
ANR	490547	Identifier	NULL		490472	1					
ANR	490548	EqualityExpression	intern -> ptr != NULL		490472	1		!=			
ANR	490549	PtrMemberAccess	intern -> ptr		490472	0					
ANR	490550	Identifier	intern		490472	0					
ANR	490551	Identifier	ptr		490472	1					
ANR	490552	Identifier	NULL		490472	1					
ANR	490553	CompoundStatement		11:3:317:392	490472	1					
ANR	490554	IdentifierDeclStatement	xmlNodePtr curnode = ( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> ptr ) -> node ;	166:3:4461:4536	490472	0	True				
ANR	490555	IdentifierDecl	curnode = ( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> ptr ) -> node		490472	0					
ANR	490556	IdentifierDeclType	xmlNodePtr		490472	0					
ANR	490557	Identifier	curnode		490472	1					
ANR	490558	AssignmentExpression	curnode = ( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> ptr ) -> node		490472	2		=			
ANR	490559	Identifier	curnode		490472	0					
ANR	490560	CastExpression	( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> ptr ) -> node		490472	1					
ANR	490561	CastTarget	xmlNodePtr		490472	0					
ANR	490562	PtrMemberAccess	( ( php_libxml_node_ptr * ) intern -> ptr ) -> node		490472	1					
ANR	490563	CastExpression	( php_libxml_node_ptr * ) intern -> ptr		490472	0					
ANR	490564	CastTarget	php_libxml_node_ptr *		490472	0					
ANR	490565	PtrMemberAccess	intern -> ptr		490472	1					
ANR	490566	Identifier	intern		490472	0					
ANR	490567	Identifier	ptr		490472	1					
ANR	490568	Identifier	node		490472	1					
ANR	490569	ExpressionStatement	"ZVAL_STRINGL ( key , ( char * ) curnode -> name , xmlStrlen ( curnode -> name ) )"	167:3:4541:4608	490472	1	True				
ANR	490570	CallExpression	"ZVAL_STRINGL ( key , ( char * ) curnode -> name , xmlStrlen ( curnode -> name ) )"		490472	0					
ANR	490571	Callee	ZVAL_STRINGL		490472	0					
ANR	490572	Identifier	ZVAL_STRINGL		490472	0					
ANR	490573	ArgumentList	key		490472	1					
ANR	490574	Argument	key		490472	0					
ANR	490575	Identifier	key		490472	0					
ANR	490576	Argument	( char * ) curnode -> name		490472	1					
ANR	490577	CastExpression	( char * ) curnode -> name		490472	0					
ANR	490578	CastTarget	char *		490472	0					
ANR	490579	PtrMemberAccess	curnode -> name		490472	1					
ANR	490580	Identifier	curnode		490472	0					
ANR	490581	Identifier	name		490472	1					
ANR	490582	Argument	xmlStrlen ( curnode -> name )		490472	2					
ANR	490583	CallExpression	xmlStrlen ( curnode -> name )		490472	0					
ANR	490584	Callee	xmlStrlen		490472	0					
ANR	490585	Identifier	xmlStrlen		490472	0					
ANR	490586	ArgumentList	curnode -> name		490472	1					
ANR	490587	Argument	curnode -> name		490472	0					
ANR	490588	PtrMemberAccess	curnode -> name		490472	0					
ANR	490589	Identifier	curnode		490472	0					
ANR	490590	Identifier	name		490472	1					
ANR	490591	ElseStatement	else		490472	0					
ANR	490592	CompoundStatement		13:9:475:475	490472	0					
ANR	490593	ExpressionStatement	ZVAL_NULL ( key )	169:3:4624:4638	490472	0	True				
ANR	490594	CallExpression	ZVAL_NULL ( key )		490472	0					
ANR	490595	Callee	ZVAL_NULL		490472	0					
ANR	490596	Identifier	ZVAL_NULL		490472	0					
ANR	490597	ArgumentList	key		490472	1					
ANR	490598	Argument	key		490472	0					
ANR	490599	Identifier	key		490472	0					
ANR	490600	ReturnType	static void		490472	1					
ANR	490601	Identifier	php_dom_iterator_current_key		490472	2					
ANR	490602	ParameterList	"zend_object_iterator * iter , zval * key"		490472	3					
ANR	490603	Parameter	zend_object_iterator * iter	155:41:4094:4119	490472	0	True				
ANR	490604	ParameterType	zend_object_iterator *		490472	0					
ANR	490605	Identifier	iter		490472	1					
ANR	490606	Parameter	zval * key	155:69:4122:4130	490472	1	True				
ANR	490607	ParameterType	zval *		490472	0					
ANR	490608	Identifier	key		490472	1					
ANR	490609	CFGEntryNode	ENTRY		490472		True				
ANR	490610	CFGExitNode	EXIT		490472		True				
ANR	490611	Symbol	instanceof_function		490472						
ANR	490612	Symbol	* curnode		490472						
ANR	490613	Symbol	& iterator -> intern		490472						
ANR	490614	Symbol	& iterator -> curobj		490472						
ANR	490615	Symbol	iter -> index		490472						
ANR	490616	Symbol	* iter		490472						
ANR	490617	Symbol	iterator		490472						
ANR	490618	Symbol	dom_nodelist_class_entry		490472						
ANR	490619	Symbol	Z_OBJCE_P		490472						
ANR	490620	Symbol	key		490472						
ANR	490621	Symbol	& iterator -> intern . data		490472						
ANR	490622	Symbol	* intern		490472						
ANR	490623	Symbol	iterator -> intern		490472						
ANR	490624	Symbol	intern		490472						
ANR	490625	Symbol	NULL		490472						
ANR	490626	Symbol	curnode -> name		490472						
ANR	490627	Symbol	curnode		490472						
ANR	490628	Symbol	iter		490472						
ANR	490629	Symbol	( ( php_libxml_node_ptr * ) intern -> ptr ) -> node		490472						
ANR	490630	Symbol	* iterator		490472						
ANR	490631	Symbol	xmlStrlen		490472						
ANR	490632	Symbol	* * intern		490472						
ANR	490633	Symbol	Z_DOMOBJ_P		490472						
ANR	490634	Symbol	* intern -> ptr		490472						
ANR	490635	Symbol	intern -> ptr		490472						
ANR	490636	Symbol	object		490472						
ANR	490637	Function	php_dom_iterator_move_forward	175:0:4660:6773							
ANR	490638	FunctionDef	php_dom_iterator_move_forward (zend_object_iterator * iter)		490637	0					
ANR	490639	CompoundStatement		176:0:4740:6773	490637	0					
ANR	490640	IdentifierDeclStatement	zval * object ;	177:1:4743:4755	490637	0	True				
ANR	490641	IdentifierDecl	* object		490637	0					
ANR	490642	IdentifierDeclType	zval *		490637	0					
ANR	490643	Identifier	object		490637	1					
ANR	490644	IdentifierDeclStatement	"xmlNodePtr curnode = NULL , basenode ;"	178:1:4758:4793	490637	1	True				
ANR	490645	IdentifierDecl	curnode = NULL		490637	0					
ANR	490646	IdentifierDeclType	xmlNodePtr		490637	0					
ANR	490647	Identifier	curnode		490637	1					
ANR	490648	AssignmentExpression	curnode = NULL		490637	2		=			
ANR	490649	Identifier	NULL		490637	0					
ANR	490650	Identifier	NULL		490637	1					
ANR	490651	IdentifierDecl	basenode		490637	1					
ANR	490652	IdentifierDeclType	xmlNodePtr		490637	0					
ANR	490653	Identifier	basenode		490637	1					
ANR	490654	IdentifierDeclStatement	dom_object * intern ;	179:1:4796:4814	490637	2	True				
ANR	490655	IdentifierDecl	* intern		490637	0					
ANR	490656	IdentifierDeclType	dom_object *		490637	0					
ANR	490657	Identifier	intern		490637	1					
ANR	490658	IdentifierDeclStatement	dom_object * nnmap ;	180:1:4817:4834	490637	3	True				
ANR	490659	IdentifierDecl	* nnmap		490637	0					
ANR	490660	IdentifierDeclType	dom_object *		490637	0					
ANR	490661	Identifier	nnmap		490637	1					
ANR	490662	IdentifierDeclStatement	dom_nnodemap_object * objmap ;	181:1:4837:4864	490637	4	True				
ANR	490663	IdentifierDecl	* objmap		490637	0					
ANR	490664	IdentifierDeclType	dom_nnodemap_object *		490637	0					
ANR	490665	Identifier	objmap		490637	1					
ANR	490666	IdentifierDeclStatement	int previndex = 0 ;	182:1:4867:4882	490637	5	True				
ANR	490667	IdentifierDecl	previndex = 0		490637	0					
ANR	490668	IdentifierDeclType	int		490637	0					
ANR	490669	Identifier	previndex		490637	1					
ANR	490670	AssignmentExpression	previndex = 0		490637	2		=			
ANR	490671	Identifier	previndex		490637	0					
ANR	490672	PrimaryExpression	0		490637	1					
ANR	490673	IdentifierDeclStatement	HashTable * nodeht ;	183:1:4885:4902	490637	6	True				
ANR	490674	IdentifierDecl	* nodeht		490637	0					
ANR	490675	IdentifierDeclType	HashTable *		490637	0					
ANR	490676	Identifier	nodeht		490637	1					
ANR	490677	IdentifierDeclStatement	zval * entry ;	184:1:4905:4916	490637	7	True				
ANR	490678	IdentifierDecl	* entry		490637	0					
ANR	490679	IdentifierDeclType	zval *		490637	0					
ANR	490680	Identifier	entry		490637	1					
ANR	490681	IdentifierDeclStatement	zend_bool do_curobj_undef = 1 ;	185:1:4919:4948	490637	8	True				
ANR	490682	IdentifierDecl	do_curobj_undef = 1		490637	0					
ANR	490683	IdentifierDeclType	zend_bool		490637	0					
ANR	490684	Identifier	do_curobj_undef		490637	1					
ANR	490685	AssignmentExpression	do_curobj_undef = 1		490637	2		=			
ANR	490686	Identifier	do_curobj_undef		490637	0					
ANR	490687	PrimaryExpression	1		490637	1					
ANR	490688	IdentifierDeclStatement	php_dom_iterator * iterator = ( php_dom_iterator * ) iter ;	187:1:4952:5005	490637	9	True				
ANR	490689	IdentifierDecl	* iterator = ( php_dom_iterator * ) iter		490637	0					
ANR	490690	IdentifierDeclType	php_dom_iterator *		490637	0					
ANR	490691	Identifier	iterator		490637	1					
ANR	490692	AssignmentExpression	* iterator = ( php_dom_iterator * ) iter		490637	2		=			
ANR	490693	Identifier	iterator		490637	0					
ANR	490694	CastExpression	( php_dom_iterator * ) iter		490637	1					
ANR	490695	CastTarget	php_dom_iterator *		490637	0					
ANR	490696	Identifier	iter		490637	1					
ANR	490697	ExpressionStatement	object = & iterator -> intern . data	189:1:5009:5040	490637	10	True				
ANR	490698	AssignmentExpression	object = & iterator -> intern . data		490637	0		=			
ANR	490699	Identifier	object		490637	0					
ANR	490700	UnaryOperationExpression	& iterator -> intern . data		490637	1					
ANR	490701	UnaryOperator	&		490637	0					
ANR	490702	MemberAccess	iterator -> intern . data		490637	1					
ANR	490703	PtrMemberAccess	iterator -> intern		490637	0					
ANR	490704	Identifier	iterator		490637	0					
ANR	490705	Identifier	intern		490637	1					
ANR	490706	Identifier	data		490637	1					
ANR	490707	ExpressionStatement	nnmap = Z_DOMOBJ_P ( object )	190:1:5043:5069	490637	11	True				
ANR	490708	AssignmentExpression	nnmap = Z_DOMOBJ_P ( object )		490637	0		=			
ANR	490709	Identifier	nnmap		490637	0					
ANR	490710	CallExpression	Z_DOMOBJ_P ( object )		490637	1					
ANR	490711	Callee	Z_DOMOBJ_P		490637	0					
ANR	490712	Identifier	Z_DOMOBJ_P		490637	0					
ANR	490713	ArgumentList	object		490637	1					
ANR	490714	Argument	object		490637	0					
ANR	490715	Identifier	object		490637	0					
ANR	490716	ExpressionStatement	objmap = ( dom_nnodemap_object * ) nnmap -> ptr	191:1:5072:5114	490637	12	True				
ANR	490717	AssignmentExpression	objmap = ( dom_nnodemap_object * ) nnmap -> ptr		490637	0		=			
ANR	490718	Identifier	objmap		490637	0					
ANR	490719	CastExpression	( dom_nnodemap_object * ) nnmap -> ptr		490637	1					
ANR	490720	CastTarget	dom_nnodemap_object *		490637	0					
ANR	490721	PtrMemberAccess	nnmap -> ptr		490637	1					
ANR	490722	Identifier	nnmap		490637	0					
ANR	490723	Identifier	ptr		490637	1					
ANR	490724	ExpressionStatement	intern = Z_DOMOBJ_P ( & iterator -> curobj )	193:1:5118:5156	490637	13	True				
ANR	490725	AssignmentExpression	intern = Z_DOMOBJ_P ( & iterator -> curobj )		490637	0		=			
ANR	490726	Identifier	intern		490637	0					
ANR	490727	CallExpression	Z_DOMOBJ_P ( & iterator -> curobj )		490637	1					
ANR	490728	Callee	Z_DOMOBJ_P		490637	0					
ANR	490729	Identifier	Z_DOMOBJ_P		490637	0					
ANR	490730	ArgumentList	& iterator -> curobj		490637	1					
ANR	490731	Argument	& iterator -> curobj		490637	0					
ANR	490732	UnaryOperationExpression	& iterator -> curobj		490637	0					
ANR	490733	UnaryOperator	&		490637	0					
ANR	490734	PtrMemberAccess	iterator -> curobj		490637	1					
ANR	490735	Identifier	iterator		490637	0					
ANR	490736	Identifier	curobj		490637	1					
ANR	490737	IfStatement	if ( intern != NULL && intern -> ptr != NULL )		490637	14					
ANR	490738	Condition	intern != NULL && intern -> ptr != NULL	195:5:5164:5200	490637	0	True				
ANR	490739	AndExpression	intern != NULL && intern -> ptr != NULL		490637	0		&&			
ANR	490740	EqualityExpression	intern != NULL		490637	0		!=			
ANR	490741	Identifier	intern		490637	0					
ANR	490742	Identifier	NULL		490637	1					
ANR	490743	EqualityExpression	intern -> ptr != NULL		490637	1		!=			
ANR	490744	PtrMemberAccess	intern -> ptr		490637	0					
ANR	490745	Identifier	intern		490637	0					
ANR	490746	Identifier	ptr		490637	1					
ANR	490747	Identifier	NULL		490637	1					
ANR	490748	CompoundStatement		20:44:462:462	490637	1					
ANR	490749	IfStatement	if ( objmap -> nodetype != XML_ENTITY_NODE && objmap -> nodetype != XML_NOTATION_NODE )		490637	0					
ANR	490750	Condition	objmap -> nodetype != XML_ENTITY_NODE && objmap -> nodetype != XML_NOTATION_NODE	196:6:5211:5289	490637	0	True				
ANR	490751	AndExpression	objmap -> nodetype != XML_ENTITY_NODE && objmap -> nodetype != XML_NOTATION_NODE		490637	0		&&			
ANR	490752	EqualityExpression	objmap -> nodetype != XML_ENTITY_NODE		490637	0		!=			
ANR	490753	PtrMemberAccess	objmap -> nodetype		490637	0					
ANR	490754	Identifier	objmap		490637	0					
ANR	490755	Identifier	nodetype		490637	1					
ANR	490756	Identifier	XML_ENTITY_NODE		490637	1					
ANR	490757	EqualityExpression	objmap -> nodetype != XML_NOTATION_NODE		490637	1		!=			
ANR	490758	PtrMemberAccess	objmap -> nodetype		490637	0					
ANR	490759	Identifier	objmap		490637	0					
ANR	490760	Identifier	nodetype		490637	1					
ANR	490761	Identifier	XML_NOTATION_NODE		490637	1					
ANR	490762	CompoundStatement		22:42:551:551	490637	1					
ANR	490763	IfStatement	if ( objmap -> nodetype == DOM_NODESET )		490637	0					
ANR	490764	Condition	objmap -> nodetype == DOM_NODESET	198:7:5301:5331	490637	0	True				
ANR	490765	EqualityExpression	objmap -> nodetype == DOM_NODESET		490637	0		==			
ANR	490766	PtrMemberAccess	objmap -> nodetype		490637	0					
ANR	490767	Identifier	objmap		490637	0					
ANR	490768	Identifier	nodetype		490637	1					
ANR	490769	Identifier	DOM_NODESET		490637	1					
ANR	490770	CompoundStatement		23:40:593:593	490637	1					
ANR	490771	ExpressionStatement	nodeht = HASH_OF ( & objmap -> baseobj_zv )	199:4:5340:5377	490637	0	True				
ANR	490772	AssignmentExpression	nodeht = HASH_OF ( & objmap -> baseobj_zv )		490637	0		=			
ANR	490773	Identifier	nodeht		490637	0					
ANR	490774	CallExpression	HASH_OF ( & objmap -> baseobj_zv )		490637	1					
ANR	490775	Callee	HASH_OF		490637	0					
ANR	490776	Identifier	HASH_OF		490637	0					
ANR	490777	ArgumentList	& objmap -> baseobj_zv		490637	1					
ANR	490778	Argument	& objmap -> baseobj_zv		490637	0					
ANR	490779	UnaryOperationExpression	& objmap -> baseobj_zv		490637	0					
ANR	490780	UnaryOperator	&		490637	0					
ANR	490781	PtrMemberAccess	objmap -> baseobj_zv		490637	1					
ANR	490782	Identifier	objmap		490637	0					
ANR	490783	Identifier	baseobj_zv		490637	1					
ANR	490784	ExpressionStatement	zend_hash_move_forward ( nodeht )	200:4:5383:5413	490637	1	True				
ANR	490785	CallExpression	zend_hash_move_forward ( nodeht )		490637	0					
ANR	490786	Callee	zend_hash_move_forward		490637	0					
ANR	490787	Identifier	zend_hash_move_forward		490637	0					
ANR	490788	ArgumentList	nodeht		490637	1					
ANR	490789	Argument	nodeht		490637	0					
ANR	490790	Identifier	nodeht		490637	0					
ANR	490791	IfStatement	if ( ( entry = zend_hash_get_current_data ( nodeht ) ) )		490637	2					
ANR	490792	Condition	entry = zend_hash_get_current_data ( nodeht )	201:8:5423:5466	490637	0	True				
ANR	490793	AssignmentExpression	entry = zend_hash_get_current_data ( nodeht )		490637	0		=			
ANR	490794	Identifier	entry		490637	0					
ANR	490795	CallExpression	zend_hash_get_current_data ( nodeht )		490637	1					
ANR	490796	Callee	zend_hash_get_current_data		490637	0					
ANR	490797	Identifier	zend_hash_get_current_data		490637	0					
ANR	490798	ArgumentList	nodeht		490637	1					
ANR	490799	Argument	nodeht		490637	0					
ANR	490800	Identifier	nodeht		490637	0					
ANR	490801	CompoundStatement		26:54:728:728	490637	1					
ANR	490802	ExpressionStatement	zval_ptr_dtor ( & iterator -> curobj )	202:5:5476:5508	490637	0	True				
ANR	490803	CallExpression	zval_ptr_dtor ( & iterator -> curobj )		490637	0					
ANR	490804	Callee	zval_ptr_dtor		490637	0					
ANR	490805	Identifier	zval_ptr_dtor		490637	0					
ANR	490806	ArgumentList	& iterator -> curobj		490637	1					
ANR	490807	Argument	& iterator -> curobj		490637	0					
ANR	490808	UnaryOperationExpression	& iterator -> curobj		490637	0					
ANR	490809	UnaryOperator	&		490637	0					
ANR	490810	PtrMemberAccess	iterator -> curobj		490637	1					
ANR	490811	Identifier	iterator		490637	0					
ANR	490812	Identifier	curobj		490637	1					
ANR	490813	ExpressionStatement	ZVAL_UNDEF ( & iterator -> curobj )	203:5:5515:5544	490637	1	True				
ANR	490814	CallExpression	ZVAL_UNDEF ( & iterator -> curobj )		490637	0					
ANR	490815	Callee	ZVAL_UNDEF		490637	0					
ANR	490816	Identifier	ZVAL_UNDEF		490637	0					
ANR	490817	ArgumentList	& iterator -> curobj		490637	1					
ANR	490818	Argument	& iterator -> curobj		490637	0					
ANR	490819	UnaryOperationExpression	& iterator -> curobj		490637	0					
ANR	490820	UnaryOperator	&		490637	0					
ANR	490821	PtrMemberAccess	iterator -> curobj		490637	1					
ANR	490822	Identifier	iterator		490637	0					
ANR	490823	Identifier	curobj		490637	1					
ANR	490824	ExpressionStatement	"ZVAL_COPY ( & iterator -> curobj , entry )"	204:5:5551:5586	490637	2	True				
ANR	490825	CallExpression	"ZVAL_COPY ( & iterator -> curobj , entry )"		490637	0					
ANR	490826	Callee	ZVAL_COPY		490637	0					
ANR	490827	Identifier	ZVAL_COPY		490637	0					
ANR	490828	ArgumentList	& iterator -> curobj		490637	1					
ANR	490829	Argument	& iterator -> curobj		490637	0					
ANR	490830	UnaryOperationExpression	& iterator -> curobj		490637	0					
ANR	490831	UnaryOperator	&		490637	0					
ANR	490832	PtrMemberAccess	iterator -> curobj		490637	1					
ANR	490833	Identifier	iterator		490637	0					
ANR	490834	Identifier	curobj		490637	1					
ANR	490835	Argument	entry		490637	1					
ANR	490836	Identifier	entry		490637	0					
ANR	490837	ExpressionStatement	do_curobj_undef = 0	205:5:5593:5612	490637	3	True				
ANR	490838	AssignmentExpression	do_curobj_undef = 0		490637	0		=			
ANR	490839	Identifier	do_curobj_undef		490637	0					
ANR	490840	PrimaryExpression	0		490637	1					
ANR	490841	ElseStatement	else		490637	0					
ANR	490842	CompoundStatement		32:10:889:889	490637	0					
ANR	490843	ExpressionStatement	curnode = ( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> ptr ) -> node	208:4:5636:5700	490637	0	True				
ANR	490844	AssignmentExpression	curnode = ( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> ptr ) -> node		490637	0		=			
ANR	490845	Identifier	curnode		490637	0					
ANR	490846	CastExpression	( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> ptr ) -> node		490637	1					
ANR	490847	CastTarget	xmlNodePtr		490637	0					
ANR	490848	PtrMemberAccess	( ( php_libxml_node_ptr * ) intern -> ptr ) -> node		490637	1					
ANR	490849	CastExpression	( php_libxml_node_ptr * ) intern -> ptr		490637	0					
ANR	490850	CastTarget	php_libxml_node_ptr *		490637	0					
ANR	490851	PtrMemberAccess	intern -> ptr		490637	1					
ANR	490852	Identifier	intern		490637	0					
ANR	490853	Identifier	ptr		490637	1					
ANR	490854	Identifier	node		490637	1					
ANR	490855	IfStatement	if ( objmap -> nodetype == XML_ATTRIBUTE_NODE || objmap -> nodetype == XML_ELEMENT_NODE )		490637	1					
ANR	490856	Condition	objmap -> nodetype == XML_ATTRIBUTE_NODE || objmap -> nodetype == XML_ELEMENT_NODE	209:8:5710:5792	490637	0	True				
ANR	490857	OrExpression	objmap -> nodetype == XML_ATTRIBUTE_NODE || objmap -> nodetype == XML_ELEMENT_NODE		490637	0		||			
ANR	490858	EqualityExpression	objmap -> nodetype == XML_ATTRIBUTE_NODE		490637	0		==			
ANR	490859	PtrMemberAccess	objmap -> nodetype		490637	0					
ANR	490860	Identifier	objmap		490637	0					
ANR	490861	Identifier	nodetype		490637	1					
ANR	490862	Identifier	XML_ATTRIBUTE_NODE		490637	1					
ANR	490863	EqualityExpression	objmap -> nodetype == XML_ELEMENT_NODE		490637	1		==			
ANR	490864	PtrMemberAccess	objmap -> nodetype		490637	0					
ANR	490865	Identifier	objmap		490637	0					
ANR	490866	Identifier	nodetype		490637	1					
ANR	490867	Identifier	XML_ELEMENT_NODE		490637	1					
ANR	490868	CompoundStatement		35:43:1054:1054	490637	1					
ANR	490869	ExpressionStatement	curnode = curnode -> next	211:5:5802:5825	490637	0	True				
ANR	490870	AssignmentExpression	curnode = curnode -> next		490637	0		=			
ANR	490871	Identifier	curnode		490637	0					
ANR	490872	PtrMemberAccess	curnode -> next		490637	1					
ANR	490873	Identifier	curnode		490637	0					
ANR	490874	Identifier	next		490637	1					
ANR	490875	ElseStatement	else		490637	0					
ANR	490876	CompoundStatement		37:11:1097:1097	490637	0					
ANR	490877	ExpressionStatement	basenode = dom_object_get_node ( objmap -> baseobj )	214:5:5895:5942	490637	0	True				
ANR	490878	AssignmentExpression	basenode = dom_object_get_node ( objmap -> baseobj )		490637	0		=			
ANR	490879	Identifier	basenode		490637	0					
ANR	490880	CallExpression	dom_object_get_node ( objmap -> baseobj )		490637	1					
ANR	490881	Callee	dom_object_get_node		490637	0					
ANR	490882	Identifier	dom_object_get_node		490637	0					
ANR	490883	ArgumentList	objmap -> baseobj		490637	1					
ANR	490884	Argument	objmap -> baseobj		490637	0					
ANR	490885	PtrMemberAccess	objmap -> baseobj		490637	0					
ANR	490886	Identifier	objmap		490637	0					
ANR	490887	Identifier	baseobj		490637	1					
ANR	490888	IfStatement	if ( basenode && ( basenode -> type == XML_DOCUMENT_NODE || basenode -> type == XML_HTML_DOCUMENT_NODE ) )		490637	1					
ANR	490889	Condition	basenode && ( basenode -> type == XML_DOCUMENT_NODE || basenode -> type == XML_HTML_DOCUMENT_NODE )	215:9:5953:6051	490637	0	True				
ANR	490890	AndExpression	basenode && ( basenode -> type == XML_DOCUMENT_NODE || basenode -> type == XML_HTML_DOCUMENT_NODE )		490637	0		&&			
ANR	490891	Identifier	basenode		490637	0					
ANR	490892	OrExpression	basenode -> type == XML_DOCUMENT_NODE || basenode -> type == XML_HTML_DOCUMENT_NODE		490637	1		||			
ANR	490893	EqualityExpression	basenode -> type == XML_DOCUMENT_NODE		490637	0		==			
ANR	490894	PtrMemberAccess	basenode -> type		490637	0					
ANR	490895	Identifier	basenode		490637	0					
ANR	490896	Identifier	type		490637	1					
ANR	490897	Identifier	XML_DOCUMENT_NODE		490637	1					
ANR	490898	EqualityExpression	basenode -> type == XML_HTML_DOCUMENT_NODE		490637	1		==			
ANR	490899	PtrMemberAccess	basenode -> type		490637	0					
ANR	490900	Identifier	basenode		490637	0					
ANR	490901	Identifier	type		490637	1					
ANR	490902	Identifier	XML_HTML_DOCUMENT_NODE		490637	1					
ANR	490903	CompoundStatement		41:49:1313:1313	490637	1					
ANR	490904	ExpressionStatement	basenode = xmlDocGetRootElement ( ( xmlDoc * ) basenode )	217:6:6062:6114	490637	0	True				
ANR	490905	AssignmentExpression	basenode = xmlDocGetRootElement ( ( xmlDoc * ) basenode )		490637	0		=			
ANR	490906	Identifier	basenode		490637	0					
ANR	490907	CallExpression	xmlDocGetRootElement ( ( xmlDoc * ) basenode )		490637	1					
ANR	490908	Callee	xmlDocGetRootElement		490637	0					
ANR	490909	Identifier	xmlDocGetRootElement		490637	0					
ANR	490910	ArgumentList	( xmlDoc * ) basenode		490637	1					
ANR	490911	Argument	( xmlDoc * ) basenode		490637	0					
ANR	490912	CastExpression	( xmlDoc * ) basenode		490637	0					
ANR	490913	CastTarget	xmlDoc *		490637	0					
ANR	490914	Identifier	basenode		490637	1					
ANR	490915	ElseStatement	else		490637	0					
ANR	490916	IfStatement	if ( basenode )		490637	0					
ANR	490917	Condition	basenode	218:16:6132:6139	490637	0	True				
ANR	490918	Identifier	basenode		490637	0					
ANR	490919	CompoundStatement		43:26:1401:1401	490637	1					
ANR	490920	ExpressionStatement	basenode = basenode -> children	219:6:6150:6179	490637	0	True				
ANR	490921	AssignmentExpression	basenode = basenode -> children		490637	0		=			
ANR	490922	Identifier	basenode		490637	0					
ANR	490923	PtrMemberAccess	basenode -> children		490637	1					
ANR	490924	Identifier	basenode		490637	0					
ANR	490925	Identifier	children		490637	1					
ANR	490926	ElseStatement	else		490637	0					
ANR	490927	CompoundStatement		45:12:1452:1452	490637	0					
ANR	490928	GotoStatement	goto err ;	221:6:6201:6209	490637	0	True				
ANR	490929	Identifier	err		490637	0					
ANR	490930	ExpressionStatement	"curnode = dom_get_elements_by_tag_name_ns_raw ( basenode , ( char * ) objmap -> ns , ( char * ) objmap -> local , & previndex , iter -> index )"	223:5:6223:6355	490637	2	True				
ANR	490931	AssignmentExpression	"curnode = dom_get_elements_by_tag_name_ns_raw ( basenode , ( char * ) objmap -> ns , ( char * ) objmap -> local , & previndex , iter -> index )"		490637	0		=			
ANR	490932	Identifier	curnode		490637	0					
ANR	490933	CallExpression	"dom_get_elements_by_tag_name_ns_raw ( basenode , ( char * ) objmap -> ns , ( char * ) objmap -> local , & previndex , iter -> index )"		490637	1					
ANR	490934	Callee	dom_get_elements_by_tag_name_ns_raw		490637	0					
ANR	490935	Identifier	dom_get_elements_by_tag_name_ns_raw		490637	0					
ANR	490936	ArgumentList	basenode		490637	1					
ANR	490937	Argument	basenode		490637	0					
ANR	490938	Identifier	basenode		490637	0					
ANR	490939	Argument	( char * ) objmap -> ns		490637	1					
ANR	490940	CastExpression	( char * ) objmap -> ns		490637	0					
ANR	490941	CastTarget	char *		490637	0					
ANR	490942	PtrMemberAccess	objmap -> ns		490637	1					
ANR	490943	Identifier	objmap		490637	0					
ANR	490944	Identifier	ns		490637	1					
ANR	490945	Argument	( char * ) objmap -> local		490637	2					
ANR	490946	CastExpression	( char * ) objmap -> local		490637	0					
ANR	490947	CastTarget	char *		490637	0					
ANR	490948	PtrMemberAccess	objmap -> local		490637	1					
ANR	490949	Identifier	objmap		490637	0					
ANR	490950	Identifier	local		490637	1					
ANR	490951	Argument	& previndex		490637	3					
ANR	490952	UnaryOperationExpression	& previndex		490637	0					
ANR	490953	UnaryOperator	&		490637	0					
ANR	490954	Identifier	previndex		490637	1					
ANR	490955	Argument	iter -> index		490637	4					
ANR	490956	PtrMemberAccess	iter -> index		490637	0					
ANR	490957	Identifier	iter		490637	0					
ANR	490958	Identifier	index		490637	1					
ANR	490959	ElseStatement	else		490637	0					
ANR	490960	CompoundStatement		52:9:1636:1636	490637	0					
ANR	490961	IfStatement	if ( objmap -> nodetype == XML_ENTITY_NODE )		490637	0					
ANR	490962	Condition	objmap -> nodetype == XML_ENTITY_NODE	228:7:6386:6420	490637	0	True				
ANR	490963	EqualityExpression	objmap -> nodetype == XML_ENTITY_NODE		490637	0		==			
ANR	490964	PtrMemberAccess	objmap -> nodetype		490637	0					
ANR	490965	Identifier	objmap		490637	0					
ANR	490966	Identifier	nodetype		490637	1					
ANR	490967	Identifier	XML_ENTITY_NODE		490637	1					
ANR	490968	CompoundStatement		53:44:1682:1682	490637	1					
ANR	490969	ExpressionStatement	"curnode = php_dom_libxml_hash_iter ( objmap -> ht , iter -> index )"	229:4:6429:6488	490637	0	True				
ANR	490970	AssignmentExpression	"curnode = php_dom_libxml_hash_iter ( objmap -> ht , iter -> index )"		490637	0		=			
ANR	490971	Identifier	curnode		490637	0					
ANR	490972	CallExpression	"php_dom_libxml_hash_iter ( objmap -> ht , iter -> index )"		490637	1					
ANR	490973	Callee	php_dom_libxml_hash_iter		490637	0					
ANR	490974	Identifier	php_dom_libxml_hash_iter		490637	0					
ANR	490975	ArgumentList	objmap -> ht		490637	1					
ANR	490976	Argument	objmap -> ht		490637	0					
ANR	490977	PtrMemberAccess	objmap -> ht		490637	0					
ANR	490978	Identifier	objmap		490637	0					
ANR	490979	Identifier	ht		490637	1					
ANR	490980	Argument	iter -> index		490637	1					
ANR	490981	PtrMemberAccess	iter -> index		490637	0					
ANR	490982	Identifier	iter		490637	0					
ANR	490983	Identifier	index		490637	1					
ANR	490984	ElseStatement	else		490637	0					
ANR	490985	CompoundStatement		55:10:1759:1759	490637	0					
ANR	490986	ExpressionStatement	"curnode = php_dom_libxml_notation_iter ( objmap -> ht , iter -> index )"	231:4:6506:6569	490637	0	True				
ANR	490987	AssignmentExpression	"curnode = php_dom_libxml_notation_iter ( objmap -> ht , iter -> index )"		490637	0		=			
ANR	490988	Identifier	curnode		490637	0					
ANR	490989	CallExpression	"php_dom_libxml_notation_iter ( objmap -> ht , iter -> index )"		490637	1					
ANR	490990	Callee	php_dom_libxml_notation_iter		490637	0					
ANR	490991	Identifier	php_dom_libxml_notation_iter		490637	0					
ANR	490992	ArgumentList	objmap -> ht		490637	1					
ANR	490993	Argument	objmap -> ht		490637	0					
ANR	490994	PtrMemberAccess	objmap -> ht		490637	0					
ANR	490995	Identifier	objmap		490637	0					
ANR	490996	Identifier	ht		490637	1					
ANR	490997	Argument	iter -> index		490637	1					
ANR	490998	PtrMemberAccess	iter -> index		490637	0					
ANR	490999	Identifier	iter		490637	0					
ANR	491000	Identifier	index		490637	1					
ANR	491001	Label	err :	235:0:6583:6586	490637	15	True				
ANR	491002	Identifier	err		490637	0					
ANR	491003	IfStatement	if ( do_curobj_undef )		490637	16					
ANR	491004	Condition	do_curobj_undef	236:5:6593:6607	490637	0	True				
ANR	491005	Identifier	do_curobj_undef		490637	0					
ANR	491006	CompoundStatement		61:22:1869:1869	490637	1					
ANR	491007	ExpressionStatement	zval_ptr_dtor ( & iterator -> curobj )	237:2:6614:6646	490637	0	True				
ANR	491008	CallExpression	zval_ptr_dtor ( & iterator -> curobj )		490637	0					
ANR	491009	Callee	zval_ptr_dtor		490637	0					
ANR	491010	Identifier	zval_ptr_dtor		490637	0					
ANR	491011	ArgumentList	& iterator -> curobj		490637	1					
ANR	491012	Argument	& iterator -> curobj		490637	0					
ANR	491013	UnaryOperationExpression	& iterator -> curobj		490637	0					
ANR	491014	UnaryOperator	&		490637	0					
ANR	491015	PtrMemberAccess	iterator -> curobj		490637	1					
ANR	491016	Identifier	iterator		490637	0					
ANR	491017	Identifier	curobj		490637	1					
ANR	491018	ExpressionStatement	ZVAL_UNDEF ( & iterator -> curobj )	238:2:6650:6679	490637	1	True				
ANR	491019	CallExpression	ZVAL_UNDEF ( & iterator -> curobj )		490637	0					
ANR	491020	Callee	ZVAL_UNDEF		490637	0					
ANR	491021	Identifier	ZVAL_UNDEF		490637	0					
ANR	491022	ArgumentList	& iterator -> curobj		490637	1					
ANR	491023	Argument	& iterator -> curobj		490637	0					
ANR	491024	UnaryOperationExpression	& iterator -> curobj		490637	0					
ANR	491025	UnaryOperator	&		490637	0					
ANR	491026	PtrMemberAccess	iterator -> curobj		490637	1					
ANR	491027	Identifier	iterator		490637	0					
ANR	491028	Identifier	curobj		490637	1					
ANR	491029	IfStatement	if ( curnode )		490637	17					
ANR	491030	Condition	curnode	240:5:6689:6695	490637	0	True				
ANR	491031	Identifier	curnode		490637	0					
ANR	491032	CompoundStatement		65:14:1957:1957	490637	1					
ANR	491033	ExpressionStatement	"php_dom_create_object ( curnode , & iterator -> curobj , objmap -> baseobj )"	241:2:6702:6768	490637	0	True				
ANR	491034	CallExpression	"php_dom_create_object ( curnode , & iterator -> curobj , objmap -> baseobj )"		490637	0					
ANR	491035	Callee	php_dom_create_object		490637	0					
ANR	491036	Identifier	php_dom_create_object		490637	0					
ANR	491037	ArgumentList	curnode		490637	1					
ANR	491038	Argument	curnode		490637	0					
ANR	491039	Identifier	curnode		490637	0					
ANR	491040	Argument	& iterator -> curobj		490637	1					
ANR	491041	UnaryOperationExpression	& iterator -> curobj		490637	0					
ANR	491042	UnaryOperator	&		490637	0					
ANR	491043	PtrMemberAccess	iterator -> curobj		490637	1					
ANR	491044	Identifier	iterator		490637	0					
ANR	491045	Identifier	curobj		490637	1					
ANR	491046	Argument	objmap -> baseobj		490637	2					
ANR	491047	PtrMemberAccess	objmap -> baseobj		490637	0					
ANR	491048	Identifier	objmap		490637	0					
ANR	491049	Identifier	baseobj		490637	1					
ANR	491050	ReturnType	static void		490637	1					
ANR	491051	Identifier	php_dom_iterator_move_forward		490637	2					
ANR	491052	ParameterList	zend_object_iterator * iter		490637	3					
ANR	491053	Parameter	zend_object_iterator * iter	175:42:4702:4727	490637	0	True				
ANR	491054	ParameterType	zend_object_iterator *		490637	0					
ANR	491055	Identifier	iter		490637	1					
ANR	491056	CFGEntryNode	ENTRY		490637		True				
ANR	491057	CFGExitNode	EXIT		490637		True				
ANR	491058	Symbol	DOM_NODESET		490637						
ANR	491059	Symbol	& objmap -> baseobj_zv		490637						
ANR	491060	Symbol	* objmap		490637						
ANR	491061	Symbol	XML_ELEMENT_NODE		490637						
ANR	491062	Symbol	* basenode		490637						
ANR	491063	Symbol	* nnmap		490637						
ANR	491064	Symbol	XML_NOTATION_NODE		490637						
ANR	491065	Symbol	objmap		490637						
ANR	491066	Symbol	objmap -> nodetype		490637						
ANR	491067	Symbol	& previndex		490637						
ANR	491068	Symbol	php_dom_libxml_notation_iter		490637						
ANR	491069	Symbol	iter -> index		490637						
ANR	491070	Symbol	nodeht		490637						
ANR	491071	Symbol	XML_HTML_DOCUMENT_NODE		490637						
ANR	491072	Symbol	iterator		490637						
ANR	491073	Symbol	zend_hash_get_current_data		490637						
ANR	491074	Symbol	do_curobj_undef		490637						
ANR	491075	Symbol	objmap -> baseobj		490637						
ANR	491076	Symbol	previndex		490637						
ANR	491077	Symbol	basenode -> children		490637						
ANR	491078	Symbol	& iterator -> intern . data		490637						
ANR	491079	Symbol	NULL		490637						
ANR	491080	Symbol	basenode -> type		490637						
ANR	491081	Symbol	iter		490637						
ANR	491082	Symbol	objmap -> local		490637						
ANR	491083	Symbol	( ( php_libxml_node_ptr * ) intern -> ptr ) -> node		490637						
ANR	491084	Symbol	entry		490637						
ANR	491085	Symbol	* iterator		490637						
ANR	491086	Symbol	* * intern		490637						
ANR	491087	Symbol	Z_DOMOBJ_P		490637						
ANR	491088	Symbol	curnode -> next		490637						
ANR	491089	Symbol	basenode		490637						
ANR	491090	Symbol	intern -> ptr		490637						
ANR	491091	Symbol	object		490637						
ANR	491092	Symbol	* curnode		490637						
ANR	491093	Symbol	dom_get_elements_by_tag_name_ns_raw		490637						
ANR	491094	Symbol	& iterator -> intern		490637						
ANR	491095	Symbol	& iterator -> curobj		490637						
ANR	491096	Symbol	xmlDocGetRootElement		490637						
ANR	491097	Symbol	* iter		490637						
ANR	491098	Symbol	nnmap		490637						
ANR	491099	Symbol	objmap -> ht		490637						
ANR	491100	Symbol	nnmap -> ptr		490637						
ANR	491101	Symbol	dom_object_get_node		490637						
ANR	491102	Symbol	* intern		490637						
ANR	491103	Symbol	iterator -> intern		490637						
ANR	491104	Symbol	php_dom_libxml_hash_iter		490637						
ANR	491105	Symbol	intern		490637						
ANR	491106	Symbol	objmap -> ns		490637						
ANR	491107	Symbol	curnode		490637						
ANR	491108	Symbol	XML_DOCUMENT_NODE		490637						
ANR	491109	Symbol	HASH_OF		490637						
ANR	491110	Symbol	XML_ATTRIBUTE_NODE		490637						
ANR	491111	Symbol	XML_ENTITY_NODE		490637						
ANR	491112	Symbol	* intern -> ptr		490637						
ANR	491113	DeclStmt									
ANR	491114	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	php_dom_iterator_funcs
ANR	491115	Function	php_dom_get_iterator	255:0:6994:9027							
ANR	491116	FunctionDef	"php_dom_get_iterator (zend_class_entry * ce , zval * object , int by_ref)"		491115	0					
ANR	491117	CompoundStatement		256:0:7095:9027	491115	0					
ANR	491118	IdentifierDeclStatement	dom_object * intern ;	257:1:7098:7116	491115	0	True				
ANR	491119	IdentifierDecl	* intern		491115	0					
ANR	491120	IdentifierDeclType	dom_object *		491115	0					
ANR	491121	Identifier	intern		491115	1					
ANR	491122	IdentifierDeclStatement	dom_nnodemap_object * objmap ;	258:1:7119:7146	491115	1	True				
ANR	491123	IdentifierDecl	* objmap		491115	0					
ANR	491124	IdentifierDeclType	dom_nnodemap_object *		491115	0					
ANR	491125	Identifier	objmap		491115	1					
ANR	491126	IdentifierDeclStatement	"xmlNodePtr nodep , curnode = NULL ;"	259:1:7149:7179	491115	2	True				
ANR	491127	IdentifierDecl	nodep		491115	0					
ANR	491128	IdentifierDeclType	xmlNodePtr		491115	0					
ANR	491129	Identifier	nodep		491115	1					
ANR	491130	IdentifierDecl	curnode = NULL		491115	1					
ANR	491131	IdentifierDeclType	xmlNodePtr		491115	0					
ANR	491132	Identifier	curnode		491115	1					
ANR	491133	AssignmentExpression	curnode = NULL		491115	2		=			
ANR	491134	Identifier	NULL		491115	0					
ANR	491135	Identifier	NULL		491115	1					
ANR	491136	IdentifierDeclStatement	int curindex = 0 ;	260:1:7182:7198	491115	3	True				
ANR	491137	IdentifierDecl	curindex = 0		491115	0					
ANR	491138	IdentifierDeclType	int		491115	0					
ANR	491139	Identifier	curindex		491115	1					
ANR	491140	AssignmentExpression	curindex = 0		491115	2		=			
ANR	491141	Identifier	curindex		491115	0					
ANR	491142	PrimaryExpression	0		491115	1					
ANR	491143	IdentifierDeclStatement	HashTable * nodeht ;	261:1:7201:7218	491115	4	True				
ANR	491144	IdentifierDecl	* nodeht		491115	0					
ANR	491145	IdentifierDeclType	HashTable *		491115	0					
ANR	491146	Identifier	nodeht		491115	1					
ANR	491147	IdentifierDeclStatement	zval * entry ;	262:1:7221:7232	491115	5	True				
ANR	491148	IdentifierDecl	* entry		491115	0					
ANR	491149	IdentifierDeclType	zval *		491115	0					
ANR	491150	Identifier	entry		491115	1					
ANR	491151	IdentifierDeclStatement	php_dom_iterator * iterator ;	263:1:7235:7261	491115	6	True				
ANR	491152	IdentifierDecl	* iterator		491115	0					
ANR	491153	IdentifierDeclType	php_dom_iterator *		491115	0					
ANR	491154	Identifier	iterator		491115	1					
ANR	491155	IfStatement	if ( by_ref )		491115	7					
ANR	491156	Condition	by_ref	265:5:7269:7274	491115	0	True				
ANR	491157	Identifier	by_ref		491115	0					
ANR	491158	CompoundStatement		10:13:181:181	491115	1					
ANR	491159	ExpressionStatement	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"	266:2:7281:7356	491115	0	True				
ANR	491160	CallExpression	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"		491115	0					
ANR	491161	Callee	zend_error		491115	0					
ANR	491162	Identifier	zend_error		491115	0					
ANR	491163	ArgumentList	E_ERROR		491115	1					
ANR	491164	Argument	E_ERROR		491115	0					
ANR	491165	Identifier	E_ERROR		491115	0					
ANR	491166	Argument	"""An iterator cannot be used with foreach by reference"""		491115	1					
ANR	491167	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		491115	0					
ANR	491168	ExpressionStatement	iterator = emalloc ( sizeof ( php_dom_iterator ) )	268:1:7362:7406	491115	8	True				
ANR	491169	AssignmentExpression	iterator = emalloc ( sizeof ( php_dom_iterator ) )		491115	0		=			
ANR	491170	Identifier	iterator		491115	0					
ANR	491171	CallExpression	emalloc ( sizeof ( php_dom_iterator ) )		491115	1					
ANR	491172	Callee	emalloc		491115	0					
ANR	491173	Identifier	emalloc		491115	0					
ANR	491174	ArgumentList	sizeof ( php_dom_iterator )		491115	1					
ANR	491175	Argument	sizeof ( php_dom_iterator )		491115	0					
ANR	491176	SizeofExpression	sizeof ( php_dom_iterator )		491115	0					
ANR	491177	Sizeof	sizeof		491115	0					
ANR	491178	SizeofOperand	php_dom_iterator		491115	1					
ANR	491179	ExpressionStatement	zend_iterator_init ( & iterator -> intern )	269:1:7409:7446	491115	9	True				
ANR	491180	CallExpression	zend_iterator_init ( & iterator -> intern )		491115	0					
ANR	491181	Callee	zend_iterator_init		491115	0					
ANR	491182	Identifier	zend_iterator_init		491115	0					
ANR	491183	ArgumentList	& iterator -> intern		491115	1					
ANR	491184	Argument	& iterator -> intern		491115	0					
ANR	491185	UnaryOperationExpression	& iterator -> intern		491115	0					
ANR	491186	UnaryOperator	&		491115	0					
ANR	491187	PtrMemberAccess	iterator -> intern		491115	1					
ANR	491188	Identifier	iterator		491115	0					
ANR	491189	Identifier	intern		491115	1					
ANR	491190	ExpressionStatement	"ZVAL_COPY ( & iterator -> intern . data , object )"	271:1:7450:7491	491115	10	True				
ANR	491191	CallExpression	"ZVAL_COPY ( & iterator -> intern . data , object )"		491115	0					
ANR	491192	Callee	ZVAL_COPY		491115	0					
ANR	491193	Identifier	ZVAL_COPY		491115	0					
ANR	491194	ArgumentList	& iterator -> intern . data		491115	1					
ANR	491195	Argument	& iterator -> intern . data		491115	0					
ANR	491196	UnaryOperationExpression	& iterator -> intern . data		491115	0					
ANR	491197	UnaryOperator	&		491115	0					
ANR	491198	MemberAccess	iterator -> intern . data		491115	1					
ANR	491199	PtrMemberAccess	iterator -> intern		491115	0					
ANR	491200	Identifier	iterator		491115	0					
ANR	491201	Identifier	intern		491115	1					
ANR	491202	Identifier	data		491115	1					
ANR	491203	Argument	object		491115	1					
ANR	491204	Identifier	object		491115	0					
ANR	491205	ExpressionStatement	iterator -> intern . funcs = & php_dom_iterator_funcs	272:1:7494:7542	491115	11	True				
ANR	491206	AssignmentExpression	iterator -> intern . funcs = & php_dom_iterator_funcs		491115	0		=			
ANR	491207	MemberAccess	iterator -> intern . funcs		491115	0					
ANR	491208	PtrMemberAccess	iterator -> intern		491115	0					
ANR	491209	Identifier	iterator		491115	0					
ANR	491210	Identifier	intern		491115	1					
ANR	491211	Identifier	funcs		491115	1					
ANR	491212	UnaryOperationExpression	& php_dom_iterator_funcs		491115	1					
ANR	491213	UnaryOperator	&		491115	0					
ANR	491214	Identifier	php_dom_iterator_funcs		491115	1					
ANR	491215	ExpressionStatement	ZVAL_UNDEF ( & iterator -> curobj )	274:1:7546:7575	491115	12	True				
ANR	491216	CallExpression	ZVAL_UNDEF ( & iterator -> curobj )		491115	0					
ANR	491217	Callee	ZVAL_UNDEF		491115	0					
ANR	491218	Identifier	ZVAL_UNDEF		491115	0					
ANR	491219	ArgumentList	& iterator -> curobj		491115	1					
ANR	491220	Argument	& iterator -> curobj		491115	0					
ANR	491221	UnaryOperationExpression	& iterator -> curobj		491115	0					
ANR	491222	UnaryOperator	&		491115	0					
ANR	491223	PtrMemberAccess	iterator -> curobj		491115	1					
ANR	491224	Identifier	iterator		491115	0					
ANR	491225	Identifier	curobj		491115	1					
ANR	491226	ExpressionStatement	intern = Z_DOMOBJ_P ( object )	276:1:7579:7606	491115	13	True				
ANR	491227	AssignmentExpression	intern = Z_DOMOBJ_P ( object )		491115	0		=			
ANR	491228	Identifier	intern		491115	0					
ANR	491229	CallExpression	Z_DOMOBJ_P ( object )		491115	1					
ANR	491230	Callee	Z_DOMOBJ_P		491115	0					
ANR	491231	Identifier	Z_DOMOBJ_P		491115	0					
ANR	491232	ArgumentList	object		491115	1					
ANR	491233	Argument	object		491115	0					
ANR	491234	Identifier	object		491115	0					
ANR	491235	ExpressionStatement	objmap = ( dom_nnodemap_object * ) intern -> ptr	277:1:7609:7652	491115	14	True				
ANR	491236	AssignmentExpression	objmap = ( dom_nnodemap_object * ) intern -> ptr		491115	0		=			
ANR	491237	Identifier	objmap		491115	0					
ANR	491238	CastExpression	( dom_nnodemap_object * ) intern -> ptr		491115	1					
ANR	491239	CastTarget	dom_nnodemap_object *		491115	0					
ANR	491240	PtrMemberAccess	intern -> ptr		491115	1					
ANR	491241	Identifier	intern		491115	0					
ANR	491242	Identifier	ptr		491115	1					
ANR	491243	IfStatement	if ( objmap != NULL )		491115	15					
ANR	491244	Condition	objmap != NULL	278:5:7659:7672	491115	0	True				
ANR	491245	EqualityExpression	objmap != NULL		491115	0		!=			
ANR	491246	Identifier	objmap		491115	0					
ANR	491247	Identifier	NULL		491115	1					
ANR	491248	CompoundStatement		23:21:579:579	491115	1					
ANR	491249	IfStatement	if ( objmap -> nodetype != XML_ENTITY_NODE && objmap -> nodetype != XML_NOTATION_NODE )		491115	0					
ANR	491250	Condition	objmap -> nodetype != XML_ENTITY_NODE && objmap -> nodetype != XML_NOTATION_NODE	279:6:7683:7761	491115	0	True				
ANR	491251	AndExpression	objmap -> nodetype != XML_ENTITY_NODE && objmap -> nodetype != XML_NOTATION_NODE		491115	0		&&			
ANR	491252	EqualityExpression	objmap -> nodetype != XML_ENTITY_NODE		491115	0		!=			
ANR	491253	PtrMemberAccess	objmap -> nodetype		491115	0					
ANR	491254	Identifier	objmap		491115	0					
ANR	491255	Identifier	nodetype		491115	1					
ANR	491256	Identifier	XML_ENTITY_NODE		491115	1					
ANR	491257	EqualityExpression	objmap -> nodetype != XML_NOTATION_NODE		491115	1		!=			
ANR	491258	PtrMemberAccess	objmap -> nodetype		491115	0					
ANR	491259	Identifier	objmap		491115	0					
ANR	491260	Identifier	nodetype		491115	1					
ANR	491261	Identifier	XML_NOTATION_NODE		491115	1					
ANR	491262	CompoundStatement		25:42:668:668	491115	1					
ANR	491263	IfStatement	if ( objmap -> nodetype == DOM_NODESET )		491115	0					
ANR	491264	Condition	objmap -> nodetype == DOM_NODESET	281:7:7773:7803	491115	0	True				
ANR	491265	EqualityExpression	objmap -> nodetype == DOM_NODESET		491115	0		==			
ANR	491266	PtrMemberAccess	objmap -> nodetype		491115	0					
ANR	491267	Identifier	objmap		491115	0					
ANR	491268	Identifier	nodetype		491115	1					
ANR	491269	Identifier	DOM_NODESET		491115	1					
ANR	491270	CompoundStatement		26:40:710:710	491115	1					
ANR	491271	ExpressionStatement	nodeht = HASH_OF ( & objmap -> baseobj_zv )	282:4:7812:7849	491115	0	True				
ANR	491272	AssignmentExpression	nodeht = HASH_OF ( & objmap -> baseobj_zv )		491115	0		=			
ANR	491273	Identifier	nodeht		491115	0					
ANR	491274	CallExpression	HASH_OF ( & objmap -> baseobj_zv )		491115	1					
ANR	491275	Callee	HASH_OF		491115	0					
ANR	491276	Identifier	HASH_OF		491115	0					
ANR	491277	ArgumentList	& objmap -> baseobj_zv		491115	1					
ANR	491278	Argument	& objmap -> baseobj_zv		491115	0					
ANR	491279	UnaryOperationExpression	& objmap -> baseobj_zv		491115	0					
ANR	491280	UnaryOperator	&		491115	0					
ANR	491281	PtrMemberAccess	objmap -> baseobj_zv		491115	1					
ANR	491282	Identifier	objmap		491115	0					
ANR	491283	Identifier	baseobj_zv		491115	1					
ANR	491284	ExpressionStatement	zend_hash_internal_pointer_reset ( nodeht )	283:4:7855:7895	491115	1	True				
ANR	491285	CallExpression	zend_hash_internal_pointer_reset ( nodeht )		491115	0					
ANR	491286	Callee	zend_hash_internal_pointer_reset		491115	0					
ANR	491287	Identifier	zend_hash_internal_pointer_reset		491115	0					
ANR	491288	ArgumentList	nodeht		491115	1					
ANR	491289	Argument	nodeht		491115	0					
ANR	491290	Identifier	nodeht		491115	0					
ANR	491291	IfStatement	if ( ( entry = zend_hash_get_current_data ( nodeht ) ) )		491115	2					
ANR	491292	Condition	entry = zend_hash_get_current_data ( nodeht )	284:8:7905:7948	491115	0	True				
ANR	491293	AssignmentExpression	entry = zend_hash_get_current_data ( nodeht )		491115	0		=			
ANR	491294	Identifier	entry		491115	0					
ANR	491295	CallExpression	zend_hash_get_current_data ( nodeht )		491115	1					
ANR	491296	Callee	zend_hash_get_current_data		491115	0					
ANR	491297	Identifier	zend_hash_get_current_data		491115	0					
ANR	491298	ArgumentList	nodeht		491115	1					
ANR	491299	Argument	nodeht		491115	0					
ANR	491300	Identifier	nodeht		491115	0					
ANR	491301	CompoundStatement		29:54:855:855	491115	1					
ANR	491302	ExpressionStatement	"ZVAL_COPY ( & iterator -> curobj , entry )"	285:5:7958:7993	491115	0	True				
ANR	491303	CallExpression	"ZVAL_COPY ( & iterator -> curobj , entry )"		491115	0					
ANR	491304	Callee	ZVAL_COPY		491115	0					
ANR	491305	Identifier	ZVAL_COPY		491115	0					
ANR	491306	ArgumentList	& iterator -> curobj		491115	1					
ANR	491307	Argument	& iterator -> curobj		491115	0					
ANR	491308	UnaryOperationExpression	& iterator -> curobj		491115	0					
ANR	491309	UnaryOperator	&		491115	0					
ANR	491310	PtrMemberAccess	iterator -> curobj		491115	1					
ANR	491311	Identifier	iterator		491115	0					
ANR	491312	Identifier	curobj		491115	1					
ANR	491313	Argument	entry		491115	1					
ANR	491314	Identifier	entry		491115	0					
ANR	491315	ElseStatement	else		491115	0					
ANR	491316	CompoundStatement		32:10:915:915	491115	0					
ANR	491317	ExpressionStatement	nodep = ( xmlNode * ) dom_object_get_node ( objmap -> baseobj )	288:4:8017:8072	491115	0	True				
ANR	491318	AssignmentExpression	nodep = ( xmlNode * ) dom_object_get_node ( objmap -> baseobj )		491115	0		=			
ANR	491319	Identifier	nodep		491115	0					
ANR	491320	CastExpression	( xmlNode * ) dom_object_get_node ( objmap -> baseobj )		491115	1					
ANR	491321	CastTarget	xmlNode *		491115	0					
ANR	491322	CallExpression	dom_object_get_node ( objmap -> baseobj )		491115	1					
ANR	491323	Callee	dom_object_get_node		491115	0					
ANR	491324	Identifier	dom_object_get_node		491115	0					
ANR	491325	ArgumentList	objmap -> baseobj		491115	1					
ANR	491326	Argument	objmap -> baseobj		491115	0					
ANR	491327	PtrMemberAccess	objmap -> baseobj		491115	0					
ANR	491328	Identifier	objmap		491115	0					
ANR	491329	Identifier	baseobj		491115	1					
ANR	491330	IfStatement	if ( ! nodep )		491115	1					
ANR	491331	Condition	! nodep	289:8:8082:8087	491115	0	True				
ANR	491332	UnaryOperationExpression	! nodep		491115	0					
ANR	491333	UnaryOperator	!		491115	0					
ANR	491334	Identifier	nodep		491115	1					
ANR	491335	CompoundStatement		34:16:994:994	491115	1					
ANR	491336	GotoStatement	goto err ;	290:5:8097:8105	491115	0	True				
ANR	491337	Identifier	err		491115	0					
ANR	491338	IfStatement	if ( objmap -> nodetype == XML_ATTRIBUTE_NODE || objmap -> nodetype == XML_ELEMENT_NODE )		491115	2					
ANR	491339	Condition	objmap -> nodetype == XML_ATTRIBUTE_NODE || objmap -> nodetype == XML_ELEMENT_NODE	292:8:8121:8198	491115	0	True				
ANR	491340	OrExpression	objmap -> nodetype == XML_ATTRIBUTE_NODE || objmap -> nodetype == XML_ELEMENT_NODE		491115	0		||			
ANR	491341	EqualityExpression	objmap -> nodetype == XML_ATTRIBUTE_NODE		491115	0		==			
ANR	491342	PtrMemberAccess	objmap -> nodetype		491115	0					
ANR	491343	Identifier	objmap		491115	0					
ANR	491344	Identifier	nodetype		491115	1					
ANR	491345	Identifier	XML_ATTRIBUTE_NODE		491115	1					
ANR	491346	EqualityExpression	objmap -> nodetype == XML_ELEMENT_NODE		491115	1		==			
ANR	491347	PtrMemberAccess	objmap -> nodetype		491115	0					
ANR	491348	Identifier	objmap		491115	0					
ANR	491349	Identifier	nodetype		491115	1					
ANR	491350	Identifier	XML_ELEMENT_NODE		491115	1					
ANR	491351	CompoundStatement		37:88:1105:1105	491115	1					
ANR	491352	IfStatement	if ( objmap -> nodetype == XML_ATTRIBUTE_NODE )		491115	0					
ANR	491353	Condition	objmap -> nodetype == XML_ATTRIBUTE_NODE	293:9:8212:8249	491115	0	True				
ANR	491354	EqualityExpression	objmap -> nodetype == XML_ATTRIBUTE_NODE		491115	0		==			
ANR	491355	PtrMemberAccess	objmap -> nodetype		491115	0					
ANR	491356	Identifier	objmap		491115	0					
ANR	491357	Identifier	nodetype		491115	1					
ANR	491358	Identifier	XML_ATTRIBUTE_NODE		491115	1					
ANR	491359	CompoundStatement		38:49:1156:1156	491115	1					
ANR	491360	ExpressionStatement	curnode = ( xmlNodePtr ) nodep -> properties	294:6:8260:8300	491115	0	True				
ANR	491361	AssignmentExpression	curnode = ( xmlNodePtr ) nodep -> properties		491115	0		=			
ANR	491362	Identifier	curnode		491115	0					
ANR	491363	CastExpression	( xmlNodePtr ) nodep -> properties		491115	1					
ANR	491364	CastTarget	xmlNodePtr		491115	0					
ANR	491365	PtrMemberAccess	nodep -> properties		491115	1					
ANR	491366	Identifier	nodep		491115	0					
ANR	491367	Identifier	properties		491115	1					
ANR	491368	ElseStatement	else		491115	0					
ANR	491369	CompoundStatement		40:12:1218:1218	491115	0					
ANR	491370	ExpressionStatement	curnode = ( xmlNodePtr ) nodep -> children	296:6:8322:8360	491115	0	True				
ANR	491371	AssignmentExpression	curnode = ( xmlNodePtr ) nodep -> children		491115	0		=			
ANR	491372	Identifier	curnode		491115	0					
ANR	491373	CastExpression	( xmlNodePtr ) nodep -> children		491115	1					
ANR	491374	CastTarget	xmlNodePtr		491115	0					
ANR	491375	PtrMemberAccess	nodep -> children		491115	1					
ANR	491376	Identifier	nodep		491115	0					
ANR	491377	Identifier	children		491115	1					
ANR	491378	ElseStatement	else		491115	0					
ANR	491379	CompoundStatement		43:11:1284:1284	491115	0					
ANR	491380	IfStatement	if ( nodep -> type == XML_DOCUMENT_NODE || nodep -> type == XML_HTML_DOCUMENT_NODE )		491115	0					
ANR	491381	Condition	nodep -> type == XML_DOCUMENT_NODE || nodep -> type == XML_HTML_DOCUMENT_NODE	299:9:8391:8463	491115	0	True				
ANR	491382	OrExpression	nodep -> type == XML_DOCUMENT_NODE || nodep -> type == XML_HTML_DOCUMENT_NODE		491115	0		||			
ANR	491383	EqualityExpression	nodep -> type == XML_DOCUMENT_NODE		491115	0		==			
ANR	491384	PtrMemberAccess	nodep -> type		491115	0					
ANR	491385	Identifier	nodep		491115	0					
ANR	491386	Identifier	type		491115	1					
ANR	491387	Identifier	XML_DOCUMENT_NODE		491115	1					
ANR	491388	EqualityExpression	nodep -> type == XML_HTML_DOCUMENT_NODE		491115	1		==			
ANR	491389	PtrMemberAccess	nodep -> type		491115	0					
ANR	491390	Identifier	nodep		491115	0					
ANR	491391	Identifier	type		491115	1					
ANR	491392	Identifier	XML_HTML_DOCUMENT_NODE		491115	1					
ANR	491393	CompoundStatement		44:84:1370:1370	491115	1					
ANR	491394	ExpressionStatement	nodep = xmlDocGetRootElement ( ( xmlDoc * ) nodep )	300:6:8474:8520	491115	0	True				
ANR	491395	AssignmentExpression	nodep = xmlDocGetRootElement ( ( xmlDoc * ) nodep )		491115	0		=			
ANR	491396	Identifier	nodep		491115	0					
ANR	491397	CallExpression	xmlDocGetRootElement ( ( xmlDoc * ) nodep )		491115	1					
ANR	491398	Callee	xmlDocGetRootElement		491115	0					
ANR	491399	Identifier	xmlDocGetRootElement		491115	0					
ANR	491400	ArgumentList	( xmlDoc * ) nodep		491115	1					
ANR	491401	Argument	( xmlDoc * ) nodep		491115	0					
ANR	491402	CastExpression	( xmlDoc * ) nodep		491115	0					
ANR	491403	CastTarget	xmlDoc *		491115	0					
ANR	491404	Identifier	nodep		491115	1					
ANR	491405	ElseStatement	else		491115	0					
ANR	491406	CompoundStatement		46:12:1438:1438	491115	0					
ANR	491407	ExpressionStatement	nodep = nodep -> children	302:6:8542:8565	491115	0	True				
ANR	491408	AssignmentExpression	nodep = nodep -> children		491115	0		=			
ANR	491409	Identifier	nodep		491115	0					
ANR	491410	PtrMemberAccess	nodep -> children		491115	1					
ANR	491411	Identifier	nodep		491115	0					
ANR	491412	Identifier	children		491115	1					
ANR	491413	ExpressionStatement	"curnode = dom_get_elements_by_tag_name_ns_raw ( nodep , ( char * ) objmap -> ns , ( char * ) objmap -> local , & curindex , 0 )"	304:5:8579:8697	491115	1	True				
ANR	491414	AssignmentExpression	"curnode = dom_get_elements_by_tag_name_ns_raw ( nodep , ( char * ) objmap -> ns , ( char * ) objmap -> local , & curindex , 0 )"		491115	0		=			
ANR	491415	Identifier	curnode		491115	0					
ANR	491416	CallExpression	"dom_get_elements_by_tag_name_ns_raw ( nodep , ( char * ) objmap -> ns , ( char * ) objmap -> local , & curindex , 0 )"		491115	1					
ANR	491417	Callee	dom_get_elements_by_tag_name_ns_raw		491115	0					
ANR	491418	Identifier	dom_get_elements_by_tag_name_ns_raw		491115	0					
ANR	491419	ArgumentList	nodep		491115	1					
ANR	491420	Argument	nodep		491115	0					
ANR	491421	Identifier	nodep		491115	0					
ANR	491422	Argument	( char * ) objmap -> ns		491115	1					
ANR	491423	CastExpression	( char * ) objmap -> ns		491115	0					
ANR	491424	CastTarget	char *		491115	0					
ANR	491425	PtrMemberAccess	objmap -> ns		491115	1					
ANR	491426	Identifier	objmap		491115	0					
ANR	491427	Identifier	ns		491115	1					
ANR	491428	Argument	( char * ) objmap -> local		491115	2					
ANR	491429	CastExpression	( char * ) objmap -> local		491115	0					
ANR	491430	CastTarget	char *		491115	0					
ANR	491431	PtrMemberAccess	objmap -> local		491115	1					
ANR	491432	Identifier	objmap		491115	0					
ANR	491433	Identifier	local		491115	1					
ANR	491434	Argument	& curindex		491115	3					
ANR	491435	UnaryOperationExpression	& curindex		491115	0					
ANR	491436	UnaryOperator	&		491115	0					
ANR	491437	Identifier	curindex		491115	1					
ANR	491438	Argument	0		491115	4					
ANR	491439	PrimaryExpression	0		491115	0					
ANR	491440	ElseStatement	else		491115	0					
ANR	491441	CompoundStatement		53:9:1623:1623	491115	0					
ANR	491442	IfStatement	if ( objmap -> nodetype == XML_ENTITY_NODE )		491115	0					
ANR	491443	Condition	objmap -> nodetype == XML_ENTITY_NODE	309:7:8728:8762	491115	0	True				
ANR	491444	EqualityExpression	objmap -> nodetype == XML_ENTITY_NODE		491115	0		==			
ANR	491445	PtrMemberAccess	objmap -> nodetype		491115	0					
ANR	491446	Identifier	objmap		491115	0					
ANR	491447	Identifier	nodetype		491115	1					
ANR	491448	Identifier	XML_ENTITY_NODE		491115	1					
ANR	491449	CompoundStatement		54:44:1669:1669	491115	1					
ANR	491450	ExpressionStatement	"curnode = php_dom_libxml_hash_iter ( objmap -> ht , 0 )"	310:4:8771:8820	491115	0	True				
ANR	491451	AssignmentExpression	"curnode = php_dom_libxml_hash_iter ( objmap -> ht , 0 )"		491115	0		=			
ANR	491452	Identifier	curnode		491115	0					
ANR	491453	CallExpression	"php_dom_libxml_hash_iter ( objmap -> ht , 0 )"		491115	1					
ANR	491454	Callee	php_dom_libxml_hash_iter		491115	0					
ANR	491455	Identifier	php_dom_libxml_hash_iter		491115	0					
ANR	491456	ArgumentList	objmap -> ht		491115	1					
ANR	491457	Argument	objmap -> ht		491115	0					
ANR	491458	PtrMemberAccess	objmap -> ht		491115	0					
ANR	491459	Identifier	objmap		491115	0					
ANR	491460	Identifier	ht		491115	1					
ANR	491461	Argument	0		491115	1					
ANR	491462	PrimaryExpression	0		491115	0					
ANR	491463	ElseStatement	else		491115	0					
ANR	491464	CompoundStatement		56:10:1736:1736	491115	0					
ANR	491465	ExpressionStatement	"curnode = php_dom_libxml_notation_iter ( objmap -> ht , 0 )"	312:4:8838:8891	491115	0	True				
ANR	491466	AssignmentExpression	"curnode = php_dom_libxml_notation_iter ( objmap -> ht , 0 )"		491115	0		=			
ANR	491467	Identifier	curnode		491115	0					
ANR	491468	CallExpression	"php_dom_libxml_notation_iter ( objmap -> ht , 0 )"		491115	1					
ANR	491469	Callee	php_dom_libxml_notation_iter		491115	0					
ANR	491470	Identifier	php_dom_libxml_notation_iter		491115	0					
ANR	491471	ArgumentList	objmap -> ht		491115	1					
ANR	491472	Argument	objmap -> ht		491115	0					
ANR	491473	PtrMemberAccess	objmap -> ht		491115	0					
ANR	491474	Identifier	objmap		491115	0					
ANR	491475	Identifier	ht		491115	1					
ANR	491476	Argument	0		491115	1					
ANR	491477	PrimaryExpression	0		491115	0					
ANR	491478	Label	err :	316:0:8905:8908	491115	16	True				
ANR	491479	Identifier	err		491115	0					
ANR	491480	IfStatement	if ( curnode )		491115	17					
ANR	491481	Condition	curnode	317:5:8915:8921	491115	0	True				
ANR	491482	Identifier	curnode		491115	0					
ANR	491483	CompoundStatement		62:14:1828:1828	491115	1					
ANR	491484	ExpressionStatement	"php_dom_create_object ( curnode , & iterator -> curobj , objmap -> baseobj )"	318:2:8928:8994	491115	0	True				
ANR	491485	CallExpression	"php_dom_create_object ( curnode , & iterator -> curobj , objmap -> baseobj )"		491115	0					
ANR	491486	Callee	php_dom_create_object		491115	0					
ANR	491487	Identifier	php_dom_create_object		491115	0					
ANR	491488	ArgumentList	curnode		491115	1					
ANR	491489	Argument	curnode		491115	0					
ANR	491490	Identifier	curnode		491115	0					
ANR	491491	Argument	& iterator -> curobj		491115	1					
ANR	491492	UnaryOperationExpression	& iterator -> curobj		491115	0					
ANR	491493	UnaryOperator	&		491115	0					
ANR	491494	PtrMemberAccess	iterator -> curobj		491115	1					
ANR	491495	Identifier	iterator		491115	0					
ANR	491496	Identifier	curobj		491115	1					
ANR	491497	Argument	objmap -> baseobj		491115	2					
ANR	491498	PtrMemberAccess	objmap -> baseobj		491115	0					
ANR	491499	Identifier	objmap		491115	0					
ANR	491500	Identifier	baseobj		491115	1					
ANR	491501	ReturnStatement	return & iterator -> intern ;	321:1:9001:9025	491115	18	True				
ANR	491502	UnaryOperationExpression	& iterator -> intern		491115	0					
ANR	491503	UnaryOperator	&		491115	0					
ANR	491504	PtrMemberAccess	iterator -> intern		491115	1					
ANR	491505	Identifier	iterator		491115	0					
ANR	491506	Identifier	intern		491115	1					
ANR	491507	ReturnType	zend_object_iterator *		491115	1					
ANR	491508	Identifier	php_dom_get_iterator		491115	2					
ANR	491509	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		491115	3					
ANR	491510	Parameter	zend_class_entry * ce	255:43:7037:7056	491115	0	True				
ANR	491511	ParameterType	zend_class_entry *		491115	0					
ANR	491512	Identifier	ce		491115	1					
ANR	491513	Parameter	zval * object	255:65:7059:7070	491115	1	True				
ANR	491514	ParameterType	zval *		491115	0					
ANR	491515	Identifier	object		491115	1					
ANR	491516	Parameter	int by_ref	255:79:7073:7082	491115	2	True				
ANR	491517	ParameterType	int		491115	0					
ANR	491518	Identifier	by_ref		491115	1					
ANR	491519	CFGEntryNode	ENTRY		491115		True				
ANR	491520	CFGExitNode	EXIT		491115		True				
ANR	491521	Symbol	DOM_NODESET		491115						
ANR	491522	Symbol	& objmap -> baseobj_zv		491115						
ANR	491523	Symbol	* objmap		491115						
ANR	491524	Symbol	XML_ELEMENT_NODE		491115						
ANR	491525	Symbol	XML_NOTATION_NODE		491115						
ANR	491526	Symbol	objmap		491115						
ANR	491527	Symbol	objmap -> nodetype		491115						
ANR	491528	Symbol	php_dom_libxml_notation_iter		491115						
ANR	491529	Symbol	& curindex		491115						
ANR	491530	Symbol	nodeht		491115						
ANR	491531	Symbol	XML_HTML_DOCUMENT_NODE		491115						
ANR	491532	Symbol	iterator		491115						
ANR	491533	Symbol	zend_hash_get_current_data		491115						
ANR	491534	Symbol	nodep -> properties		491115						
ANR	491535	Symbol	* nodep		491115						
ANR	491536	Symbol	objmap -> baseobj		491115						
ANR	491537	Symbol	& iterator -> intern . data		491115						
ANR	491538	Symbol	nodep -> type		491115						
ANR	491539	Symbol	NULL		491115						
ANR	491540	Symbol	objmap -> local		491115						
ANR	491541	Symbol	entry		491115						
ANR	491542	Symbol	* iterator		491115						
ANR	491543	Symbol	by_ref		491115						
ANR	491544	Symbol	Z_DOMOBJ_P		491115						
ANR	491545	Symbol	intern -> ptr		491115						
ANR	491546	Symbol	object		491115						
ANR	491547	Symbol	curindex		491115						
ANR	491548	Symbol	dom_get_elements_by_tag_name_ns_raw		491115						
ANR	491549	Symbol	& iterator -> intern		491115						
ANR	491550	Symbol	& iterator -> curobj		491115						
ANR	491551	Symbol	xmlDocGetRootElement		491115						
ANR	491552	Symbol	emalloc		491115						
ANR	491553	Symbol	objmap -> ht		491115						
ANR	491554	Symbol	dom_object_get_node		491115						
ANR	491555	Symbol	* intern		491115						
ANR	491556	Symbol	ce		491115						
ANR	491557	Symbol	iterator -> intern		491115						
ANR	491558	Symbol	php_dom_libxml_hash_iter		491115						
ANR	491559	Symbol	intern		491115						
ANR	491560	Symbol	objmap -> ns		491115						
ANR	491561	Symbol	& php_dom_iterator_funcs		491115						
ANR	491562	Symbol	curnode		491115						
ANR	491563	Symbol	iterator -> intern . funcs		491115						
ANR	491564	Symbol	XML_DOCUMENT_NODE		491115						
ANR	491565	Symbol	nodep		491115						
ANR	491566	Symbol	E_ERROR		491115						
ANR	491567	Symbol	nodep -> children		491115						
ANR	491568	Symbol	HASH_OF		491115						
ANR	491569	Symbol	XML_ATTRIBUTE_NODE		491115						
ANR	491570	Symbol	XML_ENTITY_NODE		491115						
