command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1159082	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_enc_utf8.c								
ANR	1159083	DeclStmt									
ANR	1159084	Decl							const int	const int [ ]	EncLen_UTF8
ANR	1159085	Function	mbc_enc_len	62:0:2757:2824							
ANR	1159086	FunctionDef	mbc_enc_len (const UChar * p)		1159085	0					
ANR	1159087	CompoundStatement		64:0:2796:2824	1159085	0					
ANR	1159088	ReturnStatement	return EncLen_UTF8 [ * p ] ;	65:2:2800:2822	1159085	0	True				
ANR	1159089	ArrayIndexing	EncLen_UTF8 [ * p ]		1159085	0					
ANR	1159090	Identifier	EncLen_UTF8		1159085	0					
ANR	1159091	UnaryOperationExpression	* p		1159085	1					
ANR	1159092	UnaryOperator	*		1159085	0					
ANR	1159093	Identifier	p		1159085	1					
ANR	1159094	ReturnType	static int		1159085	1					
ANR	1159095	Identifier	mbc_enc_len		1159085	2					
ANR	1159096	ParameterList	const UChar * p		1159085	3					
ANR	1159097	Parameter	const UChar * p	63:12:2780:2793	1159085	0	True				
ANR	1159098	ParameterType	const UChar *		1159085	0					
ANR	1159099	Identifier	p		1159085	1					
ANR	1159100	CFGEntryNode	ENTRY		1159085		True				
ANR	1159101	CFGExitNode	EXIT		1159085		True				
ANR	1159102	Symbol	p		1159085						
ANR	1159103	Symbol	EncLen_UTF8		1159085						
ANR	1159104	Symbol	* p		1159085						
ANR	1159105	Symbol	* * p		1159085						
ANR	1159106	Symbol	* EncLen_UTF8		1159085						
ANR	1159107	Function	is_mbc_newline	68:0:2827:3313							
ANR	1159108	FunctionDef	"is_mbc_newline (const UChar * p , const UChar * end)"		1159107	0					
ANR	1159109	CompoundStatement		70:0:2887:3313	1159107	0					
ANR	1159110	IfStatement	if ( p < end )		1159107	0					
ANR	1159111	Condition	p < end	71:6:2895:2901	1159107	0	True				
ANR	1159112	RelationalExpression	p < end		1159107	0		<			
ANR	1159113	Identifier	p		1159107	0					
ANR	1159114	Identifier	end		1159107	1					
ANR	1159115	CompoundStatement		2:15:16:16	1159107	1					
ANR	1159116	IfStatement	if ( * p == 0x0a )		1159107	0					
ANR	1159117	Condition	* p == 0x0a	72:8:2914:2923	1159107	0	True				
ANR	1159118	EqualityExpression	* p == 0x0a		1159107	0		==			
ANR	1159119	UnaryOperationExpression	* p		1159107	0					
ANR	1159120	UnaryOperator	*		1159107	0					
ANR	1159121	Identifier	p		1159107	1					
ANR	1159122	PrimaryExpression	0x0a		1159107	1					
ANR	1159123	ReturnStatement	return 1 ;	72:20:2926:2934	1159107	1	True				
ANR	1159124	PrimaryExpression	1		1159107	0					
ANR	1159125	IfStatement	if ( * p == 0x0d )		1159107	1					
ANR	1159126	Condition	* p == 0x0d	76:8:3021:3030	1159107	0	True				
ANR	1159127	EqualityExpression	* p == 0x0d		1159107	0		==			
ANR	1159128	UnaryOperationExpression	* p		1159107	0					
ANR	1159129	UnaryOperator	*		1159107	0					
ANR	1159130	Identifier	p		1159107	1					
ANR	1159131	PrimaryExpression	0x0d		1159107	1					
ANR	1159132	ReturnStatement	return 1 ;	76:20:3033:3041	1159107	1	True				
ANR	1159133	PrimaryExpression	1		1159107	0					
ANR	1159134	IfStatement	if ( p + 1 < end )		1159107	2					
ANR	1159135	Condition	p + 1 < end	78:8:3058:3068	1159107	0	True				
ANR	1159136	RelationalExpression	p + 1 < end		1159107	0		<			
ANR	1159137	AdditiveExpression	p + 1		1159107	0		+			
ANR	1159138	Identifier	p		1159107	0					
ANR	1159139	PrimaryExpression	1		1159107	1					
ANR	1159140	Identifier	end		1159107	1					
ANR	1159141	CompoundStatement		9:21:183:183	1159107	1					
ANR	1159142	IfStatement	if ( * ( p + 1 ) == 0x85 && * p == 0xc2 )		1159107	0					
ANR	1159143	Condition	* ( p + 1 ) == 0x85 && * p == 0xc2	79:10:3083:3110	1159107	0	True				
ANR	1159144	AndExpression	* ( p + 1 ) == 0x85 && * p == 0xc2		1159107	0		&&			
ANR	1159145	EqualityExpression	* ( p + 1 ) == 0x85		1159107	0		==			
ANR	1159146	UnaryOperationExpression	* ( p + 1 )		1159107	0					
ANR	1159147	UnaryOperator	*		1159107	0					
ANR	1159148	AdditiveExpression	p + 1		1159107	1		+			
ANR	1159149	Identifier	p		1159107	0					
ANR	1159150	PrimaryExpression	1		1159107	1					
ANR	1159151	PrimaryExpression	0x85		1159107	1					
ANR	1159152	EqualityExpression	* p == 0xc2		1159107	1		==			
ANR	1159153	UnaryOperationExpression	* p		1159107	0					
ANR	1159154	UnaryOperator	*		1159107	0					
ANR	1159155	Identifier	p		1159107	1					
ANR	1159156	PrimaryExpression	0xc2		1159107	1					
ANR	1159157	ReturnStatement	return 1 ;	80:1:3127:3135	1159107	1	True				
ANR	1159158	PrimaryExpression	1		1159107	0					
ANR	1159159	IfStatement	if ( p + 2 < end )		1159107	1					
ANR	1159160	Condition	p + 2 < end	81:10:3147:3157	1159107	0	True				
ANR	1159161	RelationalExpression	p + 2 < end		1159107	0		<			
ANR	1159162	AdditiveExpression	p + 2		1159107	0		+			
ANR	1159163	Identifier	p		1159107	0					
ANR	1159164	PrimaryExpression	2		1159107	1					
ANR	1159165	Identifier	end		1159107	1					
ANR	1159166	CompoundStatement		12:23:272:272	1159107	1					
ANR	1159167	IfStatement	if ( ( * ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9 ) && * ( p + 1 ) == 0x80 && * p == 0xe2 )		1159107	0					
ANR	1159168	Condition	( * ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9 ) && * ( p + 1 ) == 0x80 && * p == 0xe2	82:5:3167:3237	1159107	0	True				
ANR	1159169	AndExpression	( * ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9 ) && * ( p + 1 ) == 0x80 && * p == 0xe2		1159107	0		&&			
ANR	1159170	OrExpression	* ( p + 2 ) == 0xa8 || * ( p + 2 ) == 0xa9		1159107	0		||			
ANR	1159171	EqualityExpression	* ( p + 2 ) == 0xa8		1159107	0		==			
ANR	1159172	UnaryOperationExpression	* ( p + 2 )		1159107	0					
ANR	1159173	UnaryOperator	*		1159107	0					
ANR	1159174	AdditiveExpression	p + 2		1159107	1		+			
ANR	1159175	Identifier	p		1159107	0					
ANR	1159176	PrimaryExpression	2		1159107	1					
ANR	1159177	PrimaryExpression	0xa8		1159107	1					
ANR	1159178	EqualityExpression	* ( p + 2 ) == 0xa9		1159107	1		==			
ANR	1159179	UnaryOperationExpression	* ( p + 2 )		1159107	0					
ANR	1159180	UnaryOperator	*		1159107	0					
ANR	1159181	AdditiveExpression	p + 2		1159107	1		+			
ANR	1159182	Identifier	p		1159107	0					
ANR	1159183	PrimaryExpression	2		1159107	1					
ANR	1159184	PrimaryExpression	0xa9		1159107	1					
ANR	1159185	AndExpression	* ( p + 1 ) == 0x80 && * p == 0xe2		1159107	1		&&			
ANR	1159186	EqualityExpression	* ( p + 1 ) == 0x80		1159107	0		==			
ANR	1159187	UnaryOperationExpression	* ( p + 1 )		1159107	0					
ANR	1159188	UnaryOperator	*		1159107	0					
ANR	1159189	AdditiveExpression	p + 1		1159107	1		+			
ANR	1159190	Identifier	p		1159107	0					
ANR	1159191	PrimaryExpression	1		1159107	1					
ANR	1159192	PrimaryExpression	0x80		1159107	1					
ANR	1159193	EqualityExpression	* p == 0xe2		1159107	1		==			
ANR	1159194	UnaryOperationExpression	* p		1159107	0					
ANR	1159195	UnaryOperator	*		1159107	0					
ANR	1159196	Identifier	p		1159107	1					
ANR	1159197	PrimaryExpression	0xe2		1159107	1					
ANR	1159198	ReturnStatement	return 1 ;	84:3:3265:3273	1159107	1	True				
ANR	1159199	PrimaryExpression	1		1159107	0					
ANR	1159200	ReturnStatement	return 0 ;	90:2:3303:3311	1159107	1	True				
ANR	1159201	PrimaryExpression	0		1159107	0					
ANR	1159202	ReturnType	static int		1159107	1					
ANR	1159203	Identifier	is_mbc_newline		1159107	2					
ANR	1159204	ParameterList	"const UChar * p , const UChar * end"		1159107	3					
ANR	1159205	Parameter	const UChar * p	69:15:2853:2866	1159107	0	True				
ANR	1159206	ParameterType	const UChar *		1159107	0					
ANR	1159207	Identifier	p		1159107	1					
ANR	1159208	Parameter	const UChar * end	69:31:2869:2884	1159107	1	True				
ANR	1159209	ParameterType	const UChar *		1159107	0					
ANR	1159210	Identifier	end		1159107	1					
ANR	1159211	CFGEntryNode	ENTRY		1159107		True				
ANR	1159212	CFGExitNode	EXIT		1159107		True				
ANR	1159213	Symbol	p		1159107						
ANR	1159214	Symbol	* ( p + 2 )		1159107						
ANR	1159215	Symbol	end		1159107						
ANR	1159216	Symbol	* p		1159107						
ANR	1159217	Symbol	* ( p + 1 )		1159107						
ANR	1159218	DeclStmt									
ANR	1159219	Decl							int	int	c
ANR	1159220	Decl							int	int	len
ANR	1159221	DeclStmt									
ANR	1159222	Decl							OnigCodePoint	OnigCodePoint	n
ANR	1159223	Function	code_to_mbclen	120:0:3822:4334							
ANR	1159224	FunctionDef	code_to_mbclen (OnigCodePoint code)		1159223	0					
ANR	1159225	CompoundStatement		122:0:3868:4334	1159223	0					
ANR	1159226	IfStatement	if ( ( code & 0xffffff80 ) == 0 )		1159223	0					
ANR	1159227	Condition	( code & 0xffffff80 ) == 0	123:11:3881:3904	1159223	0	True				
ANR	1159228	EqualityExpression	( code & 0xffffff80 ) == 0		1159223	0		==			
ANR	1159229	BitAndExpression	code & 0xffffff80		1159223	0		&			
ANR	1159230	Identifier	code		1159223	0					
ANR	1159231	PrimaryExpression	0xffffff80		1159223	1					
ANR	1159232	PrimaryExpression	0		1159223	1					
ANR	1159233	ReturnStatement	return 1 ;	123:37:3907:3915	1159223	1	True				
ANR	1159234	PrimaryExpression	1		1159223	0					
ANR	1159235	ElseStatement	else		1159223	0					
ANR	1159236	IfStatement	if ( ( code & 0xfffff800 ) == 0 )		1159223	0					
ANR	1159237	Condition	( code & 0xfffff800 ) == 0	124:11:3928:3951	1159223	0	True				
ANR	1159238	EqualityExpression	( code & 0xfffff800 ) == 0		1159223	0		==			
ANR	1159239	BitAndExpression	code & 0xfffff800		1159223	0		&			
ANR	1159240	Identifier	code		1159223	0					
ANR	1159241	PrimaryExpression	0xfffff800		1159223	1					
ANR	1159242	PrimaryExpression	0		1159223	1					
ANR	1159243	ReturnStatement	return 2 ;	124:37:3954:3962	1159223	1	True				
ANR	1159244	PrimaryExpression	2		1159223	0					
ANR	1159245	ElseStatement	else		1159223	0					
ANR	1159246	IfStatement	if ( ( code & 0xffff0000 ) == 0 )		1159223	0					
ANR	1159247	Condition	( code & 0xffff0000 ) == 0	125:11:3975:3998	1159223	0	True				
ANR	1159248	EqualityExpression	( code & 0xffff0000 ) == 0		1159223	0		==			
ANR	1159249	BitAndExpression	code & 0xffff0000		1159223	0		&			
ANR	1159250	Identifier	code		1159223	0					
ANR	1159251	PrimaryExpression	0xffff0000		1159223	1					
ANR	1159252	PrimaryExpression	0		1159223	1					
ANR	1159253	ReturnStatement	return 3 ;	125:37:4001:4009	1159223	1	True				
ANR	1159254	PrimaryExpression	3		1159223	0					
ANR	1159255	ElseStatement	else		1159223	0					
ANR	1159256	IfStatement	if ( ( code & 0xffe00000 ) == 0 )		1159223	0					
ANR	1159257	Condition	( code & 0xffe00000 ) == 0	126:11:4022:4045	1159223	0	True				
ANR	1159258	EqualityExpression	( code & 0xffe00000 ) == 0		1159223	0		==			
ANR	1159259	BitAndExpression	code & 0xffe00000		1159223	0		&			
ANR	1159260	Identifier	code		1159223	0					
ANR	1159261	PrimaryExpression	0xffe00000		1159223	1					
ANR	1159262	PrimaryExpression	0		1159223	1					
ANR	1159263	ReturnStatement	return 4 ;	126:37:4048:4056	1159223	1	True				
ANR	1159264	PrimaryExpression	4		1159223	0					
ANR	1159265	ElseStatement	else		1159223	0					
ANR	1159266	IfStatement	if ( ( code & 0xfc000000 ) == 0 )		1159223	0					
ANR	1159267	Condition	( code & 0xfc000000 ) == 0	127:11:4069:4092	1159223	0	True				
ANR	1159268	EqualityExpression	( code & 0xfc000000 ) == 0		1159223	0		==			
ANR	1159269	BitAndExpression	code & 0xfc000000		1159223	0		&			
ANR	1159270	Identifier	code		1159223	0					
ANR	1159271	PrimaryExpression	0xfc000000		1159223	1					
ANR	1159272	PrimaryExpression	0		1159223	1					
ANR	1159273	ReturnStatement	return 5 ;	127:37:4095:4103	1159223	1	True				
ANR	1159274	PrimaryExpression	5		1159223	0					
ANR	1159275	ElseStatement	else		1159223	0					
ANR	1159276	IfStatement	if ( ( code & 0x80000000 ) == 0 )		1159223	0					
ANR	1159277	Condition	( code & 0x80000000 ) == 0	128:11:4116:4139	1159223	0	True				
ANR	1159278	EqualityExpression	( code & 0x80000000 ) == 0		1159223	0		==			
ANR	1159279	BitAndExpression	code & 0x80000000		1159223	0		&			
ANR	1159280	Identifier	code		1159223	0					
ANR	1159281	PrimaryExpression	0x80000000		1159223	1					
ANR	1159282	PrimaryExpression	0		1159223	1					
ANR	1159283	ReturnStatement	return 6 ;	128:37:4142:4150	1159223	1	True				
ANR	1159284	PrimaryExpression	6		1159223	0					
ANR	1159285	ElseStatement	else		1159223	0					
ANR	1159286	IfStatement	if ( code == INVALID_CODE_FE )		1159223	0					
ANR	1159287	Condition	code == INVALID_CODE_FE	130:11:4194:4216	1159223	0	True				
ANR	1159288	EqualityExpression	code == INVALID_CODE_FE		1159223	0		==			
ANR	1159289	Identifier	code		1159223	0					
ANR	1159290	Identifier	INVALID_CODE_FE		1159223	1					
ANR	1159291	ReturnStatement	return 1 ;	130:36:4219:4227	1159223	1	True				
ANR	1159292	PrimaryExpression	1		1159223	0					
ANR	1159293	ElseStatement	else		1159223	0					
ANR	1159294	IfStatement	if ( code == INVALID_CODE_FF )		1159223	0					
ANR	1159295	Condition	code == INVALID_CODE_FF	131:11:4240:4262	1159223	0	True				
ANR	1159296	EqualityExpression	code == INVALID_CODE_FF		1159223	0		==			
ANR	1159297	Identifier	code		1159223	0					
ANR	1159298	Identifier	INVALID_CODE_FF		1159223	1					
ANR	1159299	ReturnStatement	return 1 ;	131:36:4265:4273	1159223	1	True				
ANR	1159300	PrimaryExpression	1		1159223	0					
ANR	1159301	ElseStatement	else		1159223	0					
ANR	1159302	ReturnStatement	return ONIGERR_INVALID_CODE_POINT_VALUE ;	134:4:4293:4332	1159223	0	True				
ANR	1159303	Identifier	ONIGERR_INVALID_CODE_POINT_VALUE		1159223	0					
ANR	1159304	ReturnType	static int		1159223	1					
ANR	1159305	Identifier	code_to_mbclen		1159223	2					
ANR	1159306	ParameterList	OnigCodePoint code		1159223	3					
ANR	1159307	Parameter	OnigCodePoint code	121:15:3848:3865	1159223	0	True				
ANR	1159308	ParameterType	OnigCodePoint		1159223	0					
ANR	1159309	Identifier	code		1159223	1					
ANR	1159310	CFGEntryNode	ENTRY		1159223		True				
ANR	1159311	CFGExitNode	EXIT		1159223		True				
ANR	1159312	Symbol	code		1159223						
ANR	1159313	Symbol	ONIGERR_INVALID_CODE_POINT_VALUE		1159223						
ANR	1159314	Symbol	INVALID_CODE_FF		1159223						
ANR	1159315	Symbol	INVALID_CODE_FE		1159223						
ANR	1159316	Function	code_to_mbc	137:0:4337:5803							
ANR	1159317	FunctionDef	"code_to_mbc (OnigCodePoint code , UChar * buf)"		1159316	0					
ANR	1159318	CompoundStatement		139:0:4392:5803	1159316	0					
ANR	1159319	Statement	define	140:1:4395:4400	1159316	0	True				
ANR	1159320	Statement	UTF8_TRAILS	140:8:4402:4412	1159316	1	True				
ANR	1159321	Statement	(	140:19:4413:4413	1159316	2	True				
ANR	1159322	Statement	code	140:20:4414:4417	1159316	3	True				
ANR	1159323	Statement	","	140:24:4418:4418	1159316	4	True				
ANR	1159324	Statement	shift	140:26:4420:4424	1159316	5	True				
ANR	1159325	Statement	)	140:31:4425:4425	1159316	6	True				
ANR	1159326	Statement	(	140:33:4427:4427	1159316	7	True				
ANR	1159327	Statement	UChar	140:34:4428:4432	1159316	8	True				
ANR	1159328	Statement	)	140:40:4434:4434	1159316	9	True				
ANR	1159329	Statement	(	140:41:4435:4435	1159316	10	True				
ANR	1159330	Statement	(	140:42:4436:4436	1159316	11	True				
ANR	1159331	Statement	(	140:43:4437:4437	1159316	12	True				
ANR	1159332	Statement	(	140:44:4438:4438	1159316	13	True				
ANR	1159333	Statement	code	140:45:4439:4442	1159316	14	True				
ANR	1159334	Statement	)	140:49:4443:4443	1159316	15	True				
ANR	1159335	Statement	>>	140:51:4445:4446	1159316	16	True				
ANR	1159336	Statement	(	140:54:4448:4448	1159316	17	True				
ANR	1159337	Statement	shift	140:55:4449:4453	1159316	18	True				
ANR	1159338	Statement	)	140:60:4454:4454	1159316	19	True				
ANR	1159339	Statement	)	140:61:4455:4455	1159316	20	True				
ANR	1159340	Statement	&	140:63:4457:4457	1159316	21	True				
ANR	1159341	Statement	0x3f	140:65:4459:4462	1159316	22	True				
ANR	1159342	Statement	)	140:69:4463:4463	1159316	23	True				
ANR	1159343	Statement	|	140:71:4465:4465	1159316	24	True				
ANR	1159344	Statement	0x80	140:73:4467:4470	1159316	25	True				
ANR	1159345	Statement	)	140:77:4471:4471	1159316	26	True				
ANR	1159346	Statement	define	141:1:4474:4479	1159316	27	True				
ANR	1159347	Statement	UTF8_TRAIL0	141:8:4481:4491	1159316	28	True				
ANR	1159348	Statement	(	141:19:4492:4492	1159316	29	True				
ANR	1159349	Statement	code	141:20:4493:4496	1159316	30	True				
ANR	1159350	Statement	)	141:24:4497:4497	1159316	31	True				
ANR	1159351	Statement	(	141:33:4506:4506	1159316	32	True				
ANR	1159352	Statement	UChar	141:34:4507:4511	1159316	33	True				
ANR	1159353	Statement	)	141:40:4513:4513	1159316	34	True				
ANR	1159354	Statement	(	141:41:4514:4514	1159316	35	True				
ANR	1159355	Statement	(	141:42:4515:4515	1159316	36	True				
ANR	1159356	Statement	(	141:43:4516:4516	1159316	37	True				
ANR	1159357	Statement	code	141:44:4517:4520	1159316	38	True				
ANR	1159358	Statement	)	141:48:4521:4521	1159316	39	True				
ANR	1159359	Statement	&	141:50:4523:4523	1159316	40	True				
ANR	1159360	Statement	0x3f	141:52:4525:4528	1159316	41	True				
ANR	1159361	Statement	)	141:56:4529:4529	1159316	42	True				
ANR	1159362	Statement	|	141:58:4531:4531	1159316	43	True				
ANR	1159363	Statement	0x80	141:60:4533:4536	1159316	44	True				
ANR	1159364	Statement	)	141:64:4537:4537	1159316	45	True				
ANR	1159365	IfStatement	if ( ( code & 0xffffff80 ) == 0 )		1159316	46					
ANR	1159366	Condition	( code & 0xffffff80 ) == 0	143:6:4546:4569	1159316	0	True				
ANR	1159367	EqualityExpression	( code & 0xffffff80 ) == 0		1159316	0		==			
ANR	1159368	BitAndExpression	code & 0xffffff80		1159316	0		&			
ANR	1159369	Identifier	code		1159316	0					
ANR	1159370	PrimaryExpression	0xffffff80		1159316	1					
ANR	1159371	PrimaryExpression	0		1159316	1					
ANR	1159372	CompoundStatement		5:32:179:179	1159316	1					
ANR	1159373	ExpressionStatement	* buf = ( UChar ) code	144:4:4578:4597	1159316	0	True				
ANR	1159374	AssignmentExpression	* buf = ( UChar ) code		1159316	0		=			
ANR	1159375	UnaryOperationExpression	* buf		1159316	0					
ANR	1159376	UnaryOperator	*		1159316	0					
ANR	1159377	Identifier	buf		1159316	1					
ANR	1159378	CastExpression	( UChar ) code		1159316	1					
ANR	1159379	CastTarget	UChar		1159316	0					
ANR	1159380	Identifier	code		1159316	1					
ANR	1159381	ReturnStatement	return 1 ;	145:4:4603:4611	1159316	1	True				
ANR	1159382	PrimaryExpression	1		1159316	0					
ANR	1159383	ElseStatement	else		1159316	0					
ANR	1159384	CompoundStatement		10:4:237:251	1159316	0					
ANR	1159385	IdentifierDeclStatement	UChar * p = buf ;	148:4:4630:4644	1159316	0	True				
ANR	1159386	IdentifierDecl	* p = buf		1159316	0					
ANR	1159387	IdentifierDeclType	UChar *		1159316	0					
ANR	1159388	Identifier	p		1159316	1					
ANR	1159389	AssignmentExpression	* p = buf		1159316	2		=			
ANR	1159390	Identifier	buf		1159316	0					
ANR	1159391	Identifier	buf		1159316	1					
ANR	1159392	IfStatement	if ( ( code & 0xfffff800 ) == 0 )		1159316	1					
ANR	1159393	Condition	( code & 0xfffff800 ) == 0	150:8:4655:4678	1159316	0	True				
ANR	1159394	EqualityExpression	( code & 0xfffff800 ) == 0		1159316	0		==			
ANR	1159395	BitAndExpression	code & 0xfffff800		1159316	0		&			
ANR	1159396	Identifier	code		1159316	0					
ANR	1159397	PrimaryExpression	0xfffff800		1159316	1					
ANR	1159398	PrimaryExpression	0		1159316	1					
ANR	1159399	CompoundStatement		12:34:288:288	1159316	1					
ANR	1159400	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 6 ) & 0x1f ) | 0xc0 )	151:6:4689:4730	1159316	0	True				
ANR	1159401	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 6 ) & 0x1f ) | 0xc0 )		1159316	0		=			
ANR	1159402	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159403	UnaryOperator	*		1159316	0					
ANR	1159404	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159405	Identifier	p		1159316	0					
ANR	1159406	IncDec	++		1159316	1					
ANR	1159407	CastExpression	( UChar ) ( ( ( code >> 6 ) & 0x1f ) | 0xc0 )		1159316	1					
ANR	1159408	CastTarget	UChar		1159316	0					
ANR	1159409	InclusiveOrExpression	( ( code >> 6 ) & 0x1f ) | 0xc0		1159316	1		|			
ANR	1159410	BitAndExpression	( code >> 6 ) & 0x1f		1159316	0		&			
ANR	1159411	ShiftExpression	code >> 6		1159316	0		>>			
ANR	1159412	Identifier	code		1159316	0					
ANR	1159413	PrimaryExpression	6		1159316	1					
ANR	1159414	PrimaryExpression	0x1f		1159316	1					
ANR	1159415	PrimaryExpression	0xc0		1159316	1					
ANR	1159416	ElseStatement	else		1159316	0					
ANR	1159417	IfStatement	if ( ( code & 0xffff0000 ) == 0 )		1159316	0					
ANR	1159418	Condition	( code & 0xffff0000 ) == 0	153:13:4751:4774	1159316	0	True				
ANR	1159419	EqualityExpression	( code & 0xffff0000 ) == 0		1159316	0		==			
ANR	1159420	BitAndExpression	code & 0xffff0000		1159316	0		&			
ANR	1159421	Identifier	code		1159316	0					
ANR	1159422	PrimaryExpression	0xffff0000		1159316	1					
ANR	1159423	PrimaryExpression	0		1159316	1					
ANR	1159424	CompoundStatement		15:39:384:384	1159316	1					
ANR	1159425	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 12 ) & 0x0f ) | 0xe0 )	154:6:4785:4828	1159316	0	True				
ANR	1159426	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 12 ) & 0x0f ) | 0xe0 )		1159316	0		=			
ANR	1159427	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159428	UnaryOperator	*		1159316	0					
ANR	1159429	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159430	Identifier	p		1159316	0					
ANR	1159431	IncDec	++		1159316	1					
ANR	1159432	CastExpression	( UChar ) ( ( ( code >> 12 ) & 0x0f ) | 0xe0 )		1159316	1					
ANR	1159433	CastTarget	UChar		1159316	0					
ANR	1159434	InclusiveOrExpression	( ( code >> 12 ) & 0x0f ) | 0xe0		1159316	1		|			
ANR	1159435	BitAndExpression	( code >> 12 ) & 0x0f		1159316	0		&			
ANR	1159436	ShiftExpression	code >> 12		1159316	0		>>			
ANR	1159437	Identifier	code		1159316	0					
ANR	1159438	PrimaryExpression	12		1159316	1					
ANR	1159439	PrimaryExpression	0x0f		1159316	1					
ANR	1159440	PrimaryExpression	0xe0		1159316	1					
ANR	1159441	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	155:6:4836:4863	1159316	1	True				
ANR	1159442	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		1159316	0		=			
ANR	1159443	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159444	UnaryOperator	*		1159316	0					
ANR	1159445	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159446	Identifier	p		1159316	0					
ANR	1159447	IncDec	++		1159316	1					
ANR	1159448	CallExpression	"UTF8_TRAILS ( code , 6 )"		1159316	1					
ANR	1159449	Callee	UTF8_TRAILS		1159316	0					
ANR	1159450	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159451	ArgumentList	code		1159316	1					
ANR	1159452	Argument	code		1159316	0					
ANR	1159453	Identifier	code		1159316	0					
ANR	1159454	Argument	6		1159316	1					
ANR	1159455	PrimaryExpression	6		1159316	0					
ANR	1159456	ElseStatement	else		1159316	0					
ANR	1159457	IfStatement	if ( ( code & 0xffe00000 ) == 0 )		1159316	0					
ANR	1159458	Condition	( code & 0xffe00000 ) == 0	157:13:4884:4907	1159316	0	True				
ANR	1159459	EqualityExpression	( code & 0xffe00000 ) == 0		1159316	0		==			
ANR	1159460	BitAndExpression	code & 0xffe00000		1159316	0		&			
ANR	1159461	Identifier	code		1159316	0					
ANR	1159462	PrimaryExpression	0xffe00000		1159316	1					
ANR	1159463	PrimaryExpression	0		1159316	1					
ANR	1159464	CompoundStatement		19:39:517:517	1159316	1					
ANR	1159465	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 18 ) & 0x07 ) | 0xf0 )	158:6:4918:4961	1159316	0	True				
ANR	1159466	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 18 ) & 0x07 ) | 0xf0 )		1159316	0		=			
ANR	1159467	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159468	UnaryOperator	*		1159316	0					
ANR	1159469	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159470	Identifier	p		1159316	0					
ANR	1159471	IncDec	++		1159316	1					
ANR	1159472	CastExpression	( UChar ) ( ( ( code >> 18 ) & 0x07 ) | 0xf0 )		1159316	1					
ANR	1159473	CastTarget	UChar		1159316	0					
ANR	1159474	InclusiveOrExpression	( ( code >> 18 ) & 0x07 ) | 0xf0		1159316	1		|			
ANR	1159475	BitAndExpression	( code >> 18 ) & 0x07		1159316	0		&			
ANR	1159476	ShiftExpression	code >> 18		1159316	0		>>			
ANR	1159477	Identifier	code		1159316	0					
ANR	1159478	PrimaryExpression	18		1159316	1					
ANR	1159479	PrimaryExpression	0x07		1159316	1					
ANR	1159480	PrimaryExpression	0xf0		1159316	1					
ANR	1159481	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 12 )"	159:6:4969:4997	1159316	1	True				
ANR	1159482	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 12 )"		1159316	0		=			
ANR	1159483	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159484	UnaryOperator	*		1159316	0					
ANR	1159485	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159486	Identifier	p		1159316	0					
ANR	1159487	IncDec	++		1159316	1					
ANR	1159488	CallExpression	"UTF8_TRAILS ( code , 12 )"		1159316	1					
ANR	1159489	Callee	UTF8_TRAILS		1159316	0					
ANR	1159490	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159491	ArgumentList	code		1159316	1					
ANR	1159492	Argument	code		1159316	0					
ANR	1159493	Identifier	code		1159316	0					
ANR	1159494	Argument	12		1159316	1					
ANR	1159495	PrimaryExpression	12		1159316	0					
ANR	1159496	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	160:6:5005:5033	1159316	2	True				
ANR	1159497	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		1159316	0		=			
ANR	1159498	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159499	UnaryOperator	*		1159316	0					
ANR	1159500	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159501	Identifier	p		1159316	0					
ANR	1159502	IncDec	++		1159316	1					
ANR	1159503	CallExpression	"UTF8_TRAILS ( code , 6 )"		1159316	1					
ANR	1159504	Callee	UTF8_TRAILS		1159316	0					
ANR	1159505	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159506	ArgumentList	code		1159316	1					
ANR	1159507	Argument	code		1159316	0					
ANR	1159508	Identifier	code		1159316	0					
ANR	1159509	Argument	6		1159316	1					
ANR	1159510	PrimaryExpression	6		1159316	0					
ANR	1159511	ElseStatement	else		1159316	0					
ANR	1159512	IfStatement	if ( ( code & 0xfc000000 ) == 0 )		1159316	0					
ANR	1159513	Condition	( code & 0xfc000000 ) == 0	162:13:5054:5077	1159316	0	True				
ANR	1159514	EqualityExpression	( code & 0xfc000000 ) == 0		1159316	0		==			
ANR	1159515	BitAndExpression	code & 0xfc000000		1159316	0		&			
ANR	1159516	Identifier	code		1159316	0					
ANR	1159517	PrimaryExpression	0xfc000000		1159316	1					
ANR	1159518	PrimaryExpression	0		1159316	1					
ANR	1159519	CompoundStatement		24:39:687:687	1159316	1					
ANR	1159520	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 24 ) & 0x03 ) | 0xf8 )	163:6:5088:5131	1159316	0	True				
ANR	1159521	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 24 ) & 0x03 ) | 0xf8 )		1159316	0		=			
ANR	1159522	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159523	UnaryOperator	*		1159316	0					
ANR	1159524	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159525	Identifier	p		1159316	0					
ANR	1159526	IncDec	++		1159316	1					
ANR	1159527	CastExpression	( UChar ) ( ( ( code >> 24 ) & 0x03 ) | 0xf8 )		1159316	1					
ANR	1159528	CastTarget	UChar		1159316	0					
ANR	1159529	InclusiveOrExpression	( ( code >> 24 ) & 0x03 ) | 0xf8		1159316	1		|			
ANR	1159530	BitAndExpression	( code >> 24 ) & 0x03		1159316	0		&			
ANR	1159531	ShiftExpression	code >> 24		1159316	0		>>			
ANR	1159532	Identifier	code		1159316	0					
ANR	1159533	PrimaryExpression	24		1159316	1					
ANR	1159534	PrimaryExpression	0x03		1159316	1					
ANR	1159535	PrimaryExpression	0xf8		1159316	1					
ANR	1159536	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 18 )"	164:6:5139:5167	1159316	1	True				
ANR	1159537	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 18 )"		1159316	0		=			
ANR	1159538	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159539	UnaryOperator	*		1159316	0					
ANR	1159540	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159541	Identifier	p		1159316	0					
ANR	1159542	IncDec	++		1159316	1					
ANR	1159543	CallExpression	"UTF8_TRAILS ( code , 18 )"		1159316	1					
ANR	1159544	Callee	UTF8_TRAILS		1159316	0					
ANR	1159545	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159546	ArgumentList	code		1159316	1					
ANR	1159547	Argument	code		1159316	0					
ANR	1159548	Identifier	code		1159316	0					
ANR	1159549	Argument	18		1159316	1					
ANR	1159550	PrimaryExpression	18		1159316	0					
ANR	1159551	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 12 )"	165:6:5175:5203	1159316	2	True				
ANR	1159552	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 12 )"		1159316	0		=			
ANR	1159553	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159554	UnaryOperator	*		1159316	0					
ANR	1159555	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159556	Identifier	p		1159316	0					
ANR	1159557	IncDec	++		1159316	1					
ANR	1159558	CallExpression	"UTF8_TRAILS ( code , 12 )"		1159316	1					
ANR	1159559	Callee	UTF8_TRAILS		1159316	0					
ANR	1159560	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159561	ArgumentList	code		1159316	1					
ANR	1159562	Argument	code		1159316	0					
ANR	1159563	Identifier	code		1159316	0					
ANR	1159564	Argument	12		1159316	1					
ANR	1159565	PrimaryExpression	12		1159316	0					
ANR	1159566	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	166:6:5211:5239	1159316	3	True				
ANR	1159567	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		1159316	0		=			
ANR	1159568	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159569	UnaryOperator	*		1159316	0					
ANR	1159570	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159571	Identifier	p		1159316	0					
ANR	1159572	IncDec	++		1159316	1					
ANR	1159573	CallExpression	"UTF8_TRAILS ( code , 6 )"		1159316	1					
ANR	1159574	Callee	UTF8_TRAILS		1159316	0					
ANR	1159575	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159576	ArgumentList	code		1159316	1					
ANR	1159577	Argument	code		1159316	0					
ANR	1159578	Identifier	code		1159316	0					
ANR	1159579	Argument	6		1159316	1					
ANR	1159580	PrimaryExpression	6		1159316	0					
ANR	1159581	ElseStatement	else		1159316	0					
ANR	1159582	IfStatement	if ( ( code & 0x80000000 ) == 0 )		1159316	0					
ANR	1159583	Condition	( code & 0x80000000 ) == 0	168:13:5260:5283	1159316	0	True				
ANR	1159584	EqualityExpression	( code & 0x80000000 ) == 0		1159316	0		==			
ANR	1159585	BitAndExpression	code & 0x80000000		1159316	0		&			
ANR	1159586	Identifier	code		1159316	0					
ANR	1159587	PrimaryExpression	0x80000000		1159316	1					
ANR	1159588	PrimaryExpression	0		1159316	1					
ANR	1159589	CompoundStatement		30:39:893:893	1159316	1					
ANR	1159590	ExpressionStatement	* p ++ = ( UChar ) ( ( ( code >> 30 ) & 0x01 ) | 0xfc )	169:6:5294:5337	1159316	0	True				
ANR	1159591	AssignmentExpression	* p ++ = ( UChar ) ( ( ( code >> 30 ) & 0x01 ) | 0xfc )		1159316	0		=			
ANR	1159592	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159593	UnaryOperator	*		1159316	0					
ANR	1159594	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159595	Identifier	p		1159316	0					
ANR	1159596	IncDec	++		1159316	1					
ANR	1159597	CastExpression	( UChar ) ( ( ( code >> 30 ) & 0x01 ) | 0xfc )		1159316	1					
ANR	1159598	CastTarget	UChar		1159316	0					
ANR	1159599	InclusiveOrExpression	( ( code >> 30 ) & 0x01 ) | 0xfc		1159316	1		|			
ANR	1159600	BitAndExpression	( code >> 30 ) & 0x01		1159316	0		&			
ANR	1159601	ShiftExpression	code >> 30		1159316	0		>>			
ANR	1159602	Identifier	code		1159316	0					
ANR	1159603	PrimaryExpression	30		1159316	1					
ANR	1159604	PrimaryExpression	0x01		1159316	1					
ANR	1159605	PrimaryExpression	0xfc		1159316	1					
ANR	1159606	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 24 )"	170:6:5345:5373	1159316	1	True				
ANR	1159607	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 24 )"		1159316	0		=			
ANR	1159608	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159609	UnaryOperator	*		1159316	0					
ANR	1159610	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159611	Identifier	p		1159316	0					
ANR	1159612	IncDec	++		1159316	1					
ANR	1159613	CallExpression	"UTF8_TRAILS ( code , 24 )"		1159316	1					
ANR	1159614	Callee	UTF8_TRAILS		1159316	0					
ANR	1159615	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159616	ArgumentList	code		1159316	1					
ANR	1159617	Argument	code		1159316	0					
ANR	1159618	Identifier	code		1159316	0					
ANR	1159619	Argument	24		1159316	1					
ANR	1159620	PrimaryExpression	24		1159316	0					
ANR	1159621	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 18 )"	171:6:5381:5409	1159316	2	True				
ANR	1159622	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 18 )"		1159316	0		=			
ANR	1159623	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159624	UnaryOperator	*		1159316	0					
ANR	1159625	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159626	Identifier	p		1159316	0					
ANR	1159627	IncDec	++		1159316	1					
ANR	1159628	CallExpression	"UTF8_TRAILS ( code , 18 )"		1159316	1					
ANR	1159629	Callee	UTF8_TRAILS		1159316	0					
ANR	1159630	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159631	ArgumentList	code		1159316	1					
ANR	1159632	Argument	code		1159316	0					
ANR	1159633	Identifier	code		1159316	0					
ANR	1159634	Argument	18		1159316	1					
ANR	1159635	PrimaryExpression	18		1159316	0					
ANR	1159636	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 12 )"	172:6:5417:5445	1159316	3	True				
ANR	1159637	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 12 )"		1159316	0		=			
ANR	1159638	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159639	UnaryOperator	*		1159316	0					
ANR	1159640	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159641	Identifier	p		1159316	0					
ANR	1159642	IncDec	++		1159316	1					
ANR	1159643	CallExpression	"UTF8_TRAILS ( code , 12 )"		1159316	1					
ANR	1159644	Callee	UTF8_TRAILS		1159316	0					
ANR	1159645	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159646	ArgumentList	code		1159316	1					
ANR	1159647	Argument	code		1159316	0					
ANR	1159648	Identifier	code		1159316	0					
ANR	1159649	Argument	12		1159316	1					
ANR	1159650	PrimaryExpression	12		1159316	0					
ANR	1159651	ExpressionStatement	"* p ++ = UTF8_TRAILS ( code , 6 )"	173:6:5453:5481	1159316	4	True				
ANR	1159652	AssignmentExpression	"* p ++ = UTF8_TRAILS ( code , 6 )"		1159316	0		=			
ANR	1159653	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159654	UnaryOperator	*		1159316	0					
ANR	1159655	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159656	Identifier	p		1159316	0					
ANR	1159657	IncDec	++		1159316	1					
ANR	1159658	CallExpression	"UTF8_TRAILS ( code , 6 )"		1159316	1					
ANR	1159659	Callee	UTF8_TRAILS		1159316	0					
ANR	1159660	Identifier	UTF8_TRAILS		1159316	0					
ANR	1159661	ArgumentList	code		1159316	1					
ANR	1159662	Argument	code		1159316	0					
ANR	1159663	Identifier	code		1159316	0					
ANR	1159664	Argument	6		1159316	1					
ANR	1159665	PrimaryExpression	6		1159316	0					
ANR	1159666	ElseStatement	else		1159316	0					
ANR	1159667	IfStatement	if ( code == INVALID_CODE_FE )		1159316	0					
ANR	1159668	Condition	code == INVALID_CODE_FE	176:13:5533:5555	1159316	0	True				
ANR	1159669	EqualityExpression	code == INVALID_CODE_FE		1159316	0		==			
ANR	1159670	Identifier	code		1159316	0					
ANR	1159671	Identifier	INVALID_CODE_FE		1159316	1					
ANR	1159672	CompoundStatement		38:38:1165:1165	1159316	1					
ANR	1159673	ExpressionStatement	* p = 0xfe	177:6:5566:5575	1159316	0	True				
ANR	1159674	AssignmentExpression	* p = 0xfe		1159316	0		=			
ANR	1159675	UnaryOperationExpression	* p		1159316	0					
ANR	1159676	UnaryOperator	*		1159316	0					
ANR	1159677	Identifier	p		1159316	1					
ANR	1159678	PrimaryExpression	0xfe		1159316	1					
ANR	1159679	ReturnStatement	return 1 ;	178:6:5583:5591	1159316	1	True				
ANR	1159680	PrimaryExpression	1		1159316	0					
ANR	1159681	ElseStatement	else		1159316	0					
ANR	1159682	IfStatement	if ( code == INVALID_CODE_FF )		1159316	0					
ANR	1159683	Condition	code == INVALID_CODE_FF	180:13:5612:5634	1159316	0	True				
ANR	1159684	EqualityExpression	code == INVALID_CODE_FF		1159316	0		==			
ANR	1159685	Identifier	code		1159316	0					
ANR	1159686	Identifier	INVALID_CODE_FF		1159316	1					
ANR	1159687	CompoundStatement		42:38:1244:1244	1159316	1					
ANR	1159688	ExpressionStatement	* p = 0xff	181:6:5645:5654	1159316	0	True				
ANR	1159689	AssignmentExpression	* p = 0xff		1159316	0		=			
ANR	1159690	UnaryOperationExpression	* p		1159316	0					
ANR	1159691	UnaryOperator	*		1159316	0					
ANR	1159692	Identifier	p		1159316	1					
ANR	1159693	PrimaryExpression	0xff		1159316	1					
ANR	1159694	ReturnStatement	return 1 ;	182:6:5662:5670	1159316	1	True				
ANR	1159695	PrimaryExpression	1		1159316	0					
ANR	1159696	ElseStatement	else		1159316	0					
ANR	1159697	CompoundStatement		47:9:1301:1301	1159316	0					
ANR	1159698	ReturnStatement	return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE ;	186:6:5702:5740	1159316	0	True				
ANR	1159699	Identifier	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		1159316	0					
ANR	1159700	ExpressionStatement	* p ++ = UTF8_TRAIL0 ( code )	189:4:5753:5777	1159316	2	True				
ANR	1159701	AssignmentExpression	* p ++ = UTF8_TRAIL0 ( code )		1159316	0		=			
ANR	1159702	UnaryOperationExpression	* p ++		1159316	0					
ANR	1159703	UnaryOperator	*		1159316	0					
ANR	1159704	PostIncDecOperationExpression	p ++		1159316	1					
ANR	1159705	Identifier	p		1159316	0					
ANR	1159706	IncDec	++		1159316	1					
ANR	1159707	CallExpression	UTF8_TRAIL0 ( code )		1159316	1					
ANR	1159708	Callee	UTF8_TRAIL0		1159316	0					
ANR	1159709	Identifier	UTF8_TRAIL0		1159316	0					
ANR	1159710	ArgumentList	code		1159316	1					
ANR	1159711	Argument	code		1159316	0					
ANR	1159712	Identifier	code		1159316	0					
ANR	1159713	ReturnStatement	return p - buf ;	190:4:5783:5797	1159316	3	True				
ANR	1159714	AdditiveExpression	p - buf		1159316	0		-			
ANR	1159715	Identifier	p		1159316	0					
ANR	1159716	Identifier	buf		1159316	1					
ANR	1159717	ReturnType	static int		1159316	1					
ANR	1159718	Identifier	code_to_mbc		1159316	2					
ANR	1159719	ParameterList	"OnigCodePoint code , UChar * buf"		1159316	3					
ANR	1159720	Parameter	OnigCodePoint code	138:12:4360:4377	1159316	0	True				
ANR	1159721	ParameterType	OnigCodePoint		1159316	0					
ANR	1159722	Identifier	code		1159316	1					
ANR	1159723	Parameter	UChar * buf	138:32:4380:4389	1159316	1	True				
ANR	1159724	ParameterType	UChar *		1159316	0					
ANR	1159725	Identifier	buf		1159316	1					
ANR	1159726	CFGEntryNode	ENTRY		1159316		True				
ANR	1159727	CFGExitNode	EXIT		1159316		True				
ANR	1159728	Symbol	p		1159316						
ANR	1159729	Symbol	UTF8_TRAIL0		1159316						
ANR	1159730	Symbol	buf		1159316						
ANR	1159731	Symbol	* buf		1159316						
ANR	1159732	Symbol	UTF8_TRAILS		1159316						
ANR	1159733	Symbol	code		1159316						
ANR	1159734	Symbol	* p ++		1159316						
ANR	1159735	Symbol	* p		1159316						
ANR	1159736	Symbol	INVALID_CODE_FF		1159316						
ANR	1159737	Symbol	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		1159316						
ANR	1159738	Symbol	INVALID_CODE_FE		1159316						
ANR	1159739	Function	mbc_case_fold	194:0:5806:6406							
ANR	1159740	FunctionDef	"mbc_case_fold (OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold)"		1159739	0					
ANR	1159741	CompoundStatement		197:0:5910:6406	1159739	0					
ANR	1159742	IdentifierDeclStatement	const UChar * p = * pp ;	198:2:5914:5934	1159739	0	True				
ANR	1159743	IdentifierDecl	* p = * pp		1159739	0					
ANR	1159744	IdentifierDeclType	const UChar *		1159739	0					
ANR	1159745	Identifier	p		1159739	1					
ANR	1159746	AssignmentExpression	* p = * pp		1159739	2		=			
ANR	1159747	Identifier	p		1159739	0					
ANR	1159748	UnaryOperationExpression	* pp		1159739	1					
ANR	1159749	UnaryOperator	*		1159739	0					
ANR	1159750	Identifier	pp		1159739	1					
ANR	1159751	IfStatement	if ( ONIGENC_IS_MBC_ASCII ( p ) )		1159739	1					
ANR	1159752	Condition	ONIGENC_IS_MBC_ASCII ( p )	200:6:5943:5965	1159739	0	True				
ANR	1159753	CallExpression	ONIGENC_IS_MBC_ASCII ( p )		1159739	0					
ANR	1159754	Callee	ONIGENC_IS_MBC_ASCII		1159739	0					
ANR	1159755	Identifier	ONIGENC_IS_MBC_ASCII		1159739	0					
ANR	1159756	ArgumentList	p		1159739	1					
ANR	1159757	Argument	p		1159739	0					
ANR	1159758	Identifier	p		1159739	0					
ANR	1159759	CompoundStatement		4:31:57:57	1159739	1					
ANR	1159760	IfStatement	if ( ( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0 )		1159739	0					
ANR	1159761	Condition	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0	202:8:6021:6065	1159739	0	True				
ANR	1159762	EqualityExpression	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0		1159739	0		!=			
ANR	1159763	BitAndExpression	flag & ONIGENC_CASE_FOLD_TURKISH_AZERI		1159739	0		&			
ANR	1159764	Identifier	flag		1159739	0					
ANR	1159765	Identifier	ONIGENC_CASE_FOLD_TURKISH_AZERI		1159739	1					
ANR	1159766	PrimaryExpression	0		1159739	1					
ANR	1159767	CompoundStatement		6:55:157:157	1159739	1					
ANR	1159768	IfStatement	if ( * p == 0x49 )		1159739	0					
ANR	1159769	Condition	* p == 0x49	203:10:6080:6089	1159739	0	True				
ANR	1159770	EqualityExpression	* p == 0x49		1159739	0		==			
ANR	1159771	UnaryOperationExpression	* p		1159739	0					
ANR	1159772	UnaryOperator	*		1159739	0					
ANR	1159773	Identifier	p		1159739	1					
ANR	1159774	PrimaryExpression	0x49		1159739	1					
ANR	1159775	CompoundStatement		7:22:181:181	1159739	1					
ANR	1159776	ExpressionStatement	* fold ++ = 0xc4	204:1:6095:6109	1159739	0	True				
ANR	1159777	AssignmentExpression	* fold ++ = 0xc4		1159739	0		=			
ANR	1159778	UnaryOperationExpression	* fold ++		1159739	0					
ANR	1159779	UnaryOperator	*		1159739	0					
ANR	1159780	PostIncDecOperationExpression	fold ++		1159739	1					
ANR	1159781	Identifier	fold		1159739	0					
ANR	1159782	IncDec	++		1159739	1					
ANR	1159783	PrimaryExpression	0xc4		1159739	1					
ANR	1159784	ExpressionStatement	* fold = 0xb1	205:1:6112:6126	1159739	1	True				
ANR	1159785	AssignmentExpression	* fold = 0xb1		1159739	0		=			
ANR	1159786	UnaryOperationExpression	* fold		1159739	0					
ANR	1159787	UnaryOperator	*		1159739	0					
ANR	1159788	Identifier	fold		1159739	1					
ANR	1159789	PrimaryExpression	0xb1		1159739	1					
ANR	1159790	ExpressionStatement	( * pp ) ++	206:1:6129:6136	1159739	2	True				
ANR	1159791	PostIncDecOperationExpression	( * pp ) ++		1159739	0					
ANR	1159792	UnaryOperationExpression	* pp		1159739	0					
ANR	1159793	UnaryOperator	*		1159739	0					
ANR	1159794	Identifier	pp		1159739	1					
ANR	1159795	IncDec	++		1159739	1					
ANR	1159796	ReturnStatement	return 2 ;	207:1:6139:6147	1159739	3	True				
ANR	1159797	PrimaryExpression	2		1159739	0					
ANR	1159798	ExpressionStatement	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )	212:4:6175:6219	1159739	1	True				
ANR	1159799	AssignmentExpression	* fold = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		1159739	0		=			
ANR	1159800	UnaryOperationExpression	* fold		1159739	0					
ANR	1159801	UnaryOperator	*		1159739	0					
ANR	1159802	Identifier	fold		1159739	1					
ANR	1159803	CallExpression	ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		1159739	1					
ANR	1159804	Callee	ONIGENC_ASCII_CODE_TO_LOWER_CASE		1159739	0					
ANR	1159805	Identifier	ONIGENC_ASCII_CODE_TO_LOWER_CASE		1159739	0					
ANR	1159806	ArgumentList	* p		1159739	1					
ANR	1159807	Argument	* p		1159739	0					
ANR	1159808	UnaryOperationExpression	* p		1159739	0					
ANR	1159809	UnaryOperator	*		1159739	0					
ANR	1159810	Identifier	p		1159739	1					
ANR	1159811	ExpressionStatement	( * pp ) ++	213:4:6225:6232	1159739	2	True				
ANR	1159812	PostIncDecOperationExpression	( * pp ) ++		1159739	0					
ANR	1159813	UnaryOperationExpression	* pp		1159739	0					
ANR	1159814	UnaryOperator	*		1159739	0					
ANR	1159815	Identifier	pp		1159739	1					
ANR	1159816	IncDec	++		1159739	1					
ANR	1159817	ReturnStatement	return 1 ;	214:4:6238:6246	1159739	3	True				
ANR	1159818	PrimaryExpression	1		1159739	0					
ANR	1159819	ElseStatement	else		1159739	0					
ANR	1159820	CompoundStatement		20:7:400:400	1159739	0					
ANR	1159821	ReturnStatement	"return onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF8 , flag , pp , end , fold ) ;"	217:4:6317:6400	1159739	0	True				
ANR	1159822	CallExpression	"onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF8 , flag , pp , end , fold )"		1159739	0					
ANR	1159823	Callee	onigenc_unicode_mbc_case_fold		1159739	0					
ANR	1159824	Identifier	onigenc_unicode_mbc_case_fold		1159739	0					
ANR	1159825	ArgumentList	ONIG_ENCODING_UTF8		1159739	1					
ANR	1159826	Argument	ONIG_ENCODING_UTF8		1159739	0					
ANR	1159827	Identifier	ONIG_ENCODING_UTF8		1159739	0					
ANR	1159828	Argument	flag		1159739	1					
ANR	1159829	Identifier	flag		1159739	0					
ANR	1159830	Argument	pp		1159739	2					
ANR	1159831	Identifier	pp		1159739	0					
ANR	1159832	Argument	end		1159739	3					
ANR	1159833	Identifier	end		1159739	0					
ANR	1159834	Argument	fold		1159739	4					
ANR	1159835	Identifier	fold		1159739	0					
ANR	1159836	ReturnType	static int		1159739	1					
ANR	1159837	Identifier	mbc_case_fold		1159739	2					
ANR	1159838	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold"		1159739	3					
ANR	1159839	Parameter	OnigCaseFoldType flag	195:14:5831:5851	1159739	0	True				
ANR	1159840	ParameterType	OnigCaseFoldType		1159739	0					
ANR	1159841	Identifier	flag		1159739	1					
ANR	1159842	Parameter	const UChar * * pp	195:37:5854:5869	1159739	1	True				
ANR	1159843	ParameterType	const UChar * *		1159739	0					
ANR	1159844	Identifier	pp		1159739	1					
ANR	1159845	Parameter	const UChar * end	196:7:5879:5894	1159739	2	True				
ANR	1159846	ParameterType	const UChar *		1159739	0					
ANR	1159847	Identifier	end		1159739	1					
ANR	1159848	Parameter	UChar * fold	196:25:5897:5907	1159739	3	True				
ANR	1159849	ParameterType	UChar *		1159739	0					
ANR	1159850	Identifier	fold		1159739	1					
ANR	1159851	CFGEntryNode	ENTRY		1159739		True				
ANR	1159852	CFGExitNode	EXIT		1159739		True				
ANR	1159853	Symbol	pp		1159739						
ANR	1159854	Symbol	flag		1159739						
ANR	1159855	Symbol	* pp		1159739						
ANR	1159856	Symbol	* fold		1159739						
ANR	1159857	Symbol	ONIG_ENCODING_UTF8		1159739						
ANR	1159858	Symbol	* fold ++		1159739						
ANR	1159859	Symbol	p		1159739						
ANR	1159860	Symbol	fold		1159739						
ANR	1159861	Symbol	ONIGENC_ASCII_CODE_TO_LOWER_CASE		1159739						
ANR	1159862	Symbol	ONIGENC_CASE_FOLD_TURKISH_AZERI		1159739						
ANR	1159863	Symbol	end		1159739						
ANR	1159864	Symbol	* p		1159739						
ANR	1159865	Symbol	ONIGENC_IS_MBC_ASCII		1159739						
ANR	1159866	Symbol	onigenc_unicode_mbc_case_fold		1159739						
ANR	1159867	Function	is_mbc_ambiguous	223:0:6415:7144							
ANR	1159868	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		1159867	0					
ANR	1159869	CompoundStatement		225:0:6502:7144	1159867	0					
ANR	1159870	IdentifierDeclStatement	const UChar * p = * pp ;	226:2:6506:6526	1159867	0	True				
ANR	1159871	IdentifierDecl	* p = * pp		1159867	0					
ANR	1159872	IdentifierDeclType	const UChar *		1159867	0					
ANR	1159873	Identifier	p		1159867	1					
ANR	1159874	AssignmentExpression	* p = * pp		1159867	2		=			
ANR	1159875	Identifier	p		1159867	0					
ANR	1159876	UnaryOperationExpression	* pp		1159867	1					
ANR	1159877	UnaryOperator	*		1159867	0					
ANR	1159878	Identifier	pp		1159867	1					
ANR	1159879	IfStatement	if ( ONIGENC_IS_MBC_ASCII ( p ) )		1159867	1					
ANR	1159880	Condition	ONIGENC_IS_MBC_ASCII ( p )	228:6:6535:6557	1159867	0	True				
ANR	1159881	CallExpression	ONIGENC_IS_MBC_ASCII ( p )		1159867	0					
ANR	1159882	Callee	ONIGENC_IS_MBC_ASCII		1159867	0					
ANR	1159883	Identifier	ONIGENC_IS_MBC_ASCII		1159867	0					
ANR	1159884	ArgumentList	p		1159867	1					
ANR	1159885	Argument	p		1159867	0					
ANR	1159886	Identifier	p		1159867	0					
ANR	1159887	CompoundStatement		4:31:57:57	1159867	1					
ANR	1159888	ExpressionStatement	( * pp ) ++	229:4:6566:6573	1159867	0	True				
ANR	1159889	PostIncDecOperationExpression	( * pp ) ++		1159867	0					
ANR	1159890	UnaryOperationExpression	* pp		1159867	0					
ANR	1159891	UnaryOperator	*		1159867	0					
ANR	1159892	Identifier	pp		1159867	1					
ANR	1159893	IncDec	++		1159867	1					
ANR	1159894	ReturnStatement	return ONIGENC_IS_ASCII_CODE_CASE_AMBIG ( * p ) ;	230:4:6579:6622	1159867	1	True				
ANR	1159895	CallExpression	ONIGENC_IS_ASCII_CODE_CASE_AMBIG ( * p )		1159867	0					
ANR	1159896	Callee	ONIGENC_IS_ASCII_CODE_CASE_AMBIG		1159867	0					
ANR	1159897	Identifier	ONIGENC_IS_ASCII_CODE_CASE_AMBIG		1159867	0					
ANR	1159898	ArgumentList	* p		1159867	1					
ANR	1159899	Argument	* p		1159867	0					
ANR	1159900	UnaryOperationExpression	* p		1159867	0					
ANR	1159901	UnaryOperator	*		1159867	0					
ANR	1159902	Identifier	p		1159867	1					
ANR	1159903	ElseStatement	else		1159867	0					
ANR	1159904	CompoundStatement		8:7:132:132	1159867	0					
ANR	1159905	ExpressionStatement	"( * pp ) += enclen ( ONIG_ENCODING_UTF8 , p )"	233:4:6641:6679	1159867	0	True				
ANR	1159906	AssignmentExpression	"( * pp ) += enclen ( ONIG_ENCODING_UTF8 , p )"		1159867	0		+=			
ANR	1159907	UnaryOperationExpression	* pp		1159867	0					
ANR	1159908	UnaryOperator	*		1159867	0					
ANR	1159909	Identifier	pp		1159867	1					
ANR	1159910	CallExpression	"enclen ( ONIG_ENCODING_UTF8 , p )"		1159867	1					
ANR	1159911	Callee	enclen		1159867	0					
ANR	1159912	Identifier	enclen		1159867	0					
ANR	1159913	ArgumentList	ONIG_ENCODING_UTF8		1159867	1					
ANR	1159914	Argument	ONIG_ENCODING_UTF8		1159867	0					
ANR	1159915	Identifier	ONIG_ENCODING_UTF8		1159867	0					
ANR	1159916	Argument	p		1159867	1					
ANR	1159917	Identifier	p		1159867	0					
ANR	1159918	IfStatement	if ( * p == 0xc3 )		1159867	1					
ANR	1159919	Condition	* p == 0xc3	235:8:6690:6699	1159867	0	True				
ANR	1159920	EqualityExpression	* p == 0xc3		1159867	0		==			
ANR	1159921	UnaryOperationExpression	* p		1159867	0					
ANR	1159922	UnaryOperator	*		1159867	0					
ANR	1159923	Identifier	p		1159867	1					
ANR	1159924	PrimaryExpression	0xc3		1159867	1					
ANR	1159925	CompoundStatement		12:6:207:223	1159867	1					
ANR	1159926	IdentifierDeclStatement	int c = * ( p + 1 ) ;	236:6:6710:6726	1159867	0	True				
ANR	1159927	IdentifierDecl	c = * ( p + 1 )		1159867	0					
ANR	1159928	IdentifierDeclType	int		1159867	0					
ANR	1159929	Identifier	c		1159867	1					
ANR	1159930	AssignmentExpression	c = * ( p + 1 )		1159867	2		=			
ANR	1159931	Identifier	c		1159867	0					
ANR	1159932	UnaryOperationExpression	* ( p + 1 )		1159867	1					
ANR	1159933	UnaryOperator	*		1159867	0					
ANR	1159934	AdditiveExpression	p + 1		1159867	1		+			
ANR	1159935	Identifier	p		1159867	0					
ANR	1159936	PrimaryExpression	1		1159867	1					
ANR	1159937	IfStatement	if ( c >= 0x80 )		1159867	1					
ANR	1159938	Condition	c >= 0x80	237:10:6738:6746	1159867	0	True				
ANR	1159939	RelationalExpression	c >= 0x80		1159867	0		>=			
ANR	1159940	Identifier	c		1159867	0					
ANR	1159941	PrimaryExpression	0x80		1159867	1					
ANR	1159942	CompoundStatement		13:21:246:246	1159867	1					
ANR	1159943	IfStatement	if ( c <= ( UChar ) 0x9e )		1159867	0					
ANR	1159944	Condition	c <= ( UChar ) 0x9e	238:5:6756:6772	1159867	0	True				
ANR	1159945	RelationalExpression	c <= ( UChar ) 0x9e		1159867	0		<=			
ANR	1159946	Identifier	c		1159867	0					
ANR	1159947	CastExpression	( UChar ) 0x9e		1159867	1					
ANR	1159948	CastTarget	UChar		1159867	0					
ANR	1159949	PrimaryExpression	0x9e		1159867	1					
ANR	1159950	CompoundStatement		14:24:272:272	1159867	1					
ANR	1159951	IfStatement	if ( c == ( UChar ) 0x97 )		1159867	0					
ANR	1159952	Condition	c == ( UChar ) 0x97	239:7:6796:6812	1159867	0	True				
ANR	1159953	EqualityExpression	c == ( UChar ) 0x97		1159867	0		==			
ANR	1159954	Identifier	c		1159867	0					
ANR	1159955	CastExpression	( UChar ) 0x97		1159867	1					
ANR	1159956	CastTarget	UChar		1159867	0					
ANR	1159957	PrimaryExpression	0x97		1159867	1					
ANR	1159958	ReturnStatement	return FALSE ;	239:26:6815:6827	1159867	1	True				
ANR	1159959	Identifier	FALSE		1159867	0					
ANR	1159960	ReturnStatement	return TRUE ;	240:3:6832:6843	1159867	1	True				
ANR	1159961	Identifier	TRUE		1159867	0					
ANR	1159962	ElseStatement	else		1159867	0					
ANR	1159963	IfStatement	if ( c >= ( UChar ) 0xa0 && c <= ( UChar ) 0xbe )		1159867	0					
ANR	1159964	Condition	c >= ( UChar ) 0xa0 && c <= ( UChar ) 0xbe	242:10:6858:6895	1159867	0	True				
ANR	1159965	AndExpression	c >= ( UChar ) 0xa0 && c <= ( UChar ) 0xbe		1159867	0		&&			
ANR	1159966	RelationalExpression	c >= ( UChar ) 0xa0		1159867	0		>=			
ANR	1159967	Identifier	c		1159867	0					
ANR	1159968	CastExpression	( UChar ) 0xa0		1159867	1					
ANR	1159969	CastTarget	UChar		1159867	0					
ANR	1159970	PrimaryExpression	0xa0		1159867	1					
ANR	1159971	RelationalExpression	c <= ( UChar ) 0xbe		1159867	1		<=			
ANR	1159972	Identifier	c		1159867	0					
ANR	1159973	CastExpression	( UChar ) 0xbe		1159867	1					
ANR	1159974	CastTarget	UChar		1159867	0					
ANR	1159975	PrimaryExpression	0xbe		1159867	1					
ANR	1159976	CompoundStatement		18:50:395:395	1159867	1					
ANR	1159977	IfStatement	if ( c == ( UChar ) '\\267' )		1159867	0					
ANR	1159978	Condition	c == ( UChar ) '\\267'	243:7:6919:6937	1159867	0	True				
ANR	1159979	EqualityExpression	c == ( UChar ) '\\267'		1159867	0		==			
ANR	1159980	Identifier	c		1159867	0					
ANR	1159981	CastExpression	( UChar ) '\\267'		1159867	1					
ANR	1159982	CastTarget	UChar		1159867	0					
ANR	1159983	PrimaryExpression	'\\267'		1159867	1					
ANR	1159984	ReturnStatement	return FALSE ;	243:28:6940:6952	1159867	1	True				
ANR	1159985	Identifier	FALSE		1159867	0					
ANR	1159986	ReturnStatement	return TRUE ;	244:3:6957:6968	1159867	1	True				
ANR	1159987	Identifier	TRUE		1159867	0					
ANR	1159988	ElseStatement	else		1159867	0					
ANR	1159989	IfStatement	if ( c == ( UChar ) 0x9f && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		1159867	0					
ANR	1159990	Condition	c == ( UChar ) 0x9f && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	246:17:6990:7078	1159867	0	True				
ANR	1159991	AndExpression	c == ( UChar ) 0x9f && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1159867	0		&&			
ANR	1159992	EqualityExpression	c == ( UChar ) 0x9f		1159867	0		==			
ANR	1159993	Identifier	c		1159867	0					
ANR	1159994	CastExpression	( UChar ) 0x9f		1159867	1					
ANR	1159995	CastTarget	UChar		1159867	0					
ANR	1159996	PrimaryExpression	0x9f		1159867	1					
ANR	1159997	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1159867	1		!=			
ANR	1159998	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1159867	0		&			
ANR	1159999	Identifier	flag		1159867	0					
ANR	1160000	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1159867	1					
ANR	1160001	PrimaryExpression	0		1159867	1					
ANR	1160002	CompoundStatement		23:70:578:578	1159867	1					
ANR	1160003	ReturnStatement	return TRUE ;	248:3:7086:7097	1159867	0	True				
ANR	1160004	Identifier	TRUE		1159867	0					
ANR	1160005	ReturnStatement	return FALSE ;	254:2:7130:7142	1159867	2	True				
ANR	1160006	Identifier	FALSE		1159867	0					
ANR	1160007	ReturnType	static int		1159867	1					
ANR	1160008	Identifier	is_mbc_ambiguous		1159867	2					
ANR	1160009	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		1159867	3					
ANR	1160010	Parameter	OnigCaseFoldType flag	224:17:6443:6463	1159867	0	True				
ANR	1160011	ParameterType	OnigCaseFoldType		1159867	0					
ANR	1160012	Identifier	flag		1159867	1					
ANR	1160013	Parameter	const UChar * * pp	224:40:6466:6481	1159867	1	True				
ANR	1160014	ParameterType	const UChar * *		1159867	0					
ANR	1160015	Identifier	pp		1159867	1					
ANR	1160016	Parameter	const UChar * end	224:58:6484:6499	1159867	2	True				
ANR	1160017	ParameterType	const UChar *		1159867	0					
ANR	1160018	Identifier	end		1159867	1					
ANR	1160019	CFGEntryNode	ENTRY		1159867		True				
ANR	1160020	CFGExitNode	EXIT		1159867		True				
ANR	1160021	Symbol	pp		1159867						
ANR	1160022	Symbol	flag		1159867						
ANR	1160023	Symbol	c		1159867						
ANR	1160024	Symbol	* pp		1159867						
ANR	1160025	Symbol	TRUE		1159867						
ANR	1160026	Symbol	ONIG_ENCODING_UTF8		1159867						
ANR	1160027	Symbol	* ( p + 1 )		1159867						
ANR	1160028	Symbol	enclen		1159867						
ANR	1160029	Symbol	p		1159867						
ANR	1160030	Symbol	ONIGENC_IS_ASCII_CODE_CASE_AMBIG		1159867						
ANR	1160031	Symbol	end		1159867						
ANR	1160032	Symbol	* p		1159867						
ANR	1160033	Symbol	FALSE		1159867						
ANR	1160034	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1159867						
ANR	1160035	Symbol	ONIGENC_IS_MBC_ASCII		1159867						
ANR	1160036	Function	get_ctype_code_range	259:0:7155:7343							
ANR	1160037	FunctionDef	"get_ctype_code_range (OnigCtype ctype , OnigCodePoint * sb_out , const OnigCodePoint * ranges [ ])"		1160036	0					
ANR	1160038	CompoundStatement		262:0:7265:7343	1160036	0					
ANR	1160039	ExpressionStatement	* sb_out = 0x80	263:2:7269:7283	1160036	0	True				
ANR	1160040	AssignmentExpression	* sb_out = 0x80		1160036	0		=			
ANR	1160041	UnaryOperationExpression	* sb_out		1160036	0					
ANR	1160042	UnaryOperator	*		1160036	0					
ANR	1160043	Identifier	sb_out		1160036	1					
ANR	1160044	PrimaryExpression	0x80		1160036	1					
ANR	1160045	ReturnStatement	"return onigenc_unicode_ctype_code_range ( ctype , ranges ) ;"	264:2:7287:7341	1160036	1	True				
ANR	1160046	CallExpression	"onigenc_unicode_ctype_code_range ( ctype , ranges )"		1160036	0					
ANR	1160047	Callee	onigenc_unicode_ctype_code_range		1160036	0					
ANR	1160048	Identifier	onigenc_unicode_ctype_code_range		1160036	0					
ANR	1160049	ArgumentList	ctype		1160036	1					
ANR	1160050	Argument	ctype		1160036	0					
ANR	1160051	Identifier	ctype		1160036	0					
ANR	1160052	Argument	ranges		1160036	1					
ANR	1160053	Identifier	ranges		1160036	0					
ANR	1160054	ReturnType	static int		1160036	1					
ANR	1160055	Identifier	get_ctype_code_range		1160036	2					
ANR	1160056	ParameterList	"OnigCtype ctype , OnigCodePoint * sb_out , const OnigCodePoint * ranges [ ]"		1160036	3					
ANR	1160057	Parameter	OnigCtype ctype	260:21:7187:7201	1160036	0	True				
ANR	1160058	ParameterType	OnigCtype		1160036	0					
ANR	1160059	Identifier	ctype		1160036	1					
ANR	1160060	Parameter	OnigCodePoint * sb_out	260:38:7204:7224	1160036	1	True				
ANR	1160061	ParameterType	OnigCodePoint *		1160036	0					
ANR	1160062	Identifier	sb_out		1160036	1					
ANR	1160063	Parameter	const OnigCodePoint * ranges [ ]	261:7:7234:7262	1160036	2	True				
ANR	1160064	ParameterType	const OnigCodePoint * [ ]		1160036	0					
ANR	1160065	Identifier	ranges		1160036	1					
ANR	1160066	CFGEntryNode	ENTRY		1160036		True				
ANR	1160067	CFGExitNode	EXIT		1160036		True				
ANR	1160068	Symbol	sb_out		1160036						
ANR	1160069	Symbol	* sb_out		1160036						
ANR	1160070	Symbol	ctype		1160036						
ANR	1160071	Symbol	ranges		1160036						
ANR	1160072	Symbol	onigenc_unicode_ctype_code_range		1160036						
ANR	1160073	Function	left_adjust_char_head	268:0:7347:7553							
ANR	1160074	FunctionDef	"left_adjust_char_head (const UChar * start , const UChar * s)"		1160073	0					
ANR	1160075	CompoundStatement		270:0:7419:7553	1160073	0					
ANR	1160076	IdentifierDeclStatement	const UChar * p ;	271:2:7423:7437	1160073	0	True				
ANR	1160077	IdentifierDecl	* p		1160073	0					
ANR	1160078	IdentifierDeclType	const UChar *		1160073	0					
ANR	1160079	Identifier	p		1160073	1					
ANR	1160080	IfStatement	if ( s <= start )		1160073	1					
ANR	1160081	Condition	s <= start	273:6:7446:7455	1160073	0	True				
ANR	1160082	RelationalExpression	s <= start		1160073	0		<=			
ANR	1160083	Identifier	s		1160073	0					
ANR	1160084	Identifier	start		1160073	1					
ANR	1160085	ReturnStatement	return ( UChar * ) s ;	273:18:7458:7475	1160073	1	True				
ANR	1160086	CastExpression	( UChar * ) s		1160073	0					
ANR	1160087	CastTarget	UChar *		1160073	0					
ANR	1160088	Identifier	s		1160073	1					
ANR	1160089	ExpressionStatement	p = s	274:2:7479:7484	1160073	2	True				
ANR	1160090	AssignmentExpression	p = s		1160073	0		=			
ANR	1160091	Identifier	p		1160073	0					
ANR	1160092	Identifier	s		1160073	1					
ANR	1160093	WhileStatement	while ( ! utf8_islead ( * p ) && p > start )		1160073	3					
ANR	1160094	Condition	! utf8_islead ( * p ) && p > start	276:9:7496:7524	1160073	0	True				
ANR	1160095	AndExpression	! utf8_islead ( * p ) && p > start		1160073	0		&&			
ANR	1160096	UnaryOperationExpression	! utf8_islead ( * p )		1160073	0					
ANR	1160097	UnaryOperator	!		1160073	0					
ANR	1160098	CallExpression	utf8_islead ( * p )		1160073	1					
ANR	1160099	Callee	utf8_islead		1160073	0					
ANR	1160100	Identifier	utf8_islead		1160073	0					
ANR	1160101	ArgumentList	* p		1160073	1					
ANR	1160102	Argument	* p		1160073	0					
ANR	1160103	UnaryOperationExpression	* p		1160073	0					
ANR	1160104	UnaryOperator	*		1160073	0					
ANR	1160105	Identifier	p		1160073	1					
ANR	1160106	RelationalExpression	p > start		1160073	1		>			
ANR	1160107	Identifier	p		1160073	0					
ANR	1160108	Identifier	start		1160073	1					
ANR	1160109	ExpressionStatement	p --	276:40:7527:7530	1160073	1	True				
ANR	1160110	PostIncDecOperationExpression	p --		1160073	0					
ANR	1160111	Identifier	p		1160073	0					
ANR	1160112	IncDec	--		1160073	1					
ANR	1160113	ReturnStatement	return ( UChar * ) p ;	277:2:7534:7551	1160073	4	True				
ANR	1160114	CastExpression	( UChar * ) p		1160073	0					
ANR	1160115	CastTarget	UChar *		1160073	0					
ANR	1160116	Identifier	p		1160073	1					
ANR	1160117	ReturnType	static UChar *		1160073	1					
ANR	1160118	Identifier	left_adjust_char_head		1160073	2					
ANR	1160119	ParameterList	"const UChar * start , const UChar * s"		1160073	3					
ANR	1160120	Parameter	const UChar * start	269:22:7383:7400	1160073	0	True				
ANR	1160121	ParameterType	const UChar *		1160073	0					
ANR	1160122	Identifier	start		1160073	1					
ANR	1160123	Parameter	const UChar * s	269:42:7403:7416	1160073	1	True				
ANR	1160124	ParameterType	const UChar *		1160073	0					
ANR	1160125	Identifier	s		1160073	1					
ANR	1160126	CFGEntryNode	ENTRY		1160073		True				
ANR	1160127	CFGExitNode	EXIT		1160073		True				
ANR	1160128	Symbol	p		1160073						
ANR	1160129	Symbol	s		1160073						
ANR	1160130	Symbol	utf8_islead		1160073						
ANR	1160131	Symbol	start		1160073						
ANR	1160132	Symbol	* p		1160073						
ANR	1160133	Function	get_case_fold_codes_by_str	280:0:7556:7799							
ANR	1160134	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		1160133	0					
ANR	1160135	CompoundStatement		283:0:7693:7799	1160133	0					
ANR	1160136	ReturnStatement	"return onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF8 , flag , p , end , items ) ;"	284:2:7697:7797	1160133	0	True				
ANR	1160137	CallExpression	"onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF8 , flag , p , end , items )"		1160133	0					
ANR	1160138	Callee	onigenc_unicode_get_case_fold_codes_by_str		1160133	0					
ANR	1160139	Identifier	onigenc_unicode_get_case_fold_codes_by_str		1160133	0					
ANR	1160140	ArgumentList	ONIG_ENCODING_UTF8		1160133	1					
ANR	1160141	Argument	ONIG_ENCODING_UTF8		1160133	0					
ANR	1160142	Identifier	ONIG_ENCODING_UTF8		1160133	0					
ANR	1160143	Argument	flag		1160133	1					
ANR	1160144	Identifier	flag		1160133	0					
ANR	1160145	Argument	p		1160133	2					
ANR	1160146	Identifier	p		1160133	0					
ANR	1160147	Argument	end		1160133	3					
ANR	1160148	Identifier	end		1160133	0					
ANR	1160149	Argument	items		1160133	4					
ANR	1160150	Identifier	items		1160133	0					
ANR	1160151	ReturnType	static int		1160133	1					
ANR	1160152	Identifier	get_case_fold_codes_by_str		1160133	2					
ANR	1160153	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		1160133	3					
ANR	1160154	Parameter	OnigCaseFoldType flag	281:27:7594:7614	1160133	0	True				
ANR	1160155	ParameterType	OnigCaseFoldType		1160133	0					
ANR	1160156	Identifier	flag		1160133	1					
ANR	1160157	Parameter	const OnigUChar * p	282:4:7621:7638	1160133	1	True				
ANR	1160158	ParameterType	const OnigUChar *		1160133	0					
ANR	1160159	Identifier	p		1160133	1					
ANR	1160160	Parameter	const OnigUChar * end	282:24:7641:7660	1160133	2	True				
ANR	1160161	ParameterType	const OnigUChar *		1160133	0					
ANR	1160162	Identifier	end		1160133	1					
ANR	1160163	Parameter	OnigCaseFoldCodeItem items [ ]	282:46:7663:7690	1160133	3	True				
ANR	1160164	ParameterType	OnigCaseFoldCodeItem [ ]		1160133	0					
ANR	1160165	Identifier	items		1160133	1					
ANR	1160166	CFGEntryNode	ENTRY		1160133		True				
ANR	1160167	CFGExitNode	EXIT		1160133		True				
ANR	1160168	Symbol	p		1160133						
ANR	1160169	Symbol	flag		1160133						
ANR	1160170	Symbol	onigenc_unicode_get_case_fold_codes_by_str		1160133						
ANR	1160171	Symbol	end		1160133						
ANR	1160172	Symbol	ONIG_ENCODING_UTF8		1160133						
ANR	1160173	Symbol	items		1160133						
ANR	1160174	DeclStmt									
ANR	1160175	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingUTF8
