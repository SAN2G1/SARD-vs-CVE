command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1565820	File	data/converged/CVE-2015-8617_php-src/ext_pcre_pcrelib_sljit_sljitNativeARM_32.c								
ANR	1565821	Function	sljit_get_platform_name	27:0:1455:1771							
ANR	1565822	FunctionDef	sljit_get_platform_name ()		1565821	0					
ANR	1565823	CompoundStatement		28:0:1528:1771	1565821	0					
ANR	1565824	Statement	return	30:1:1588:1593	1565821	0	True				
ANR	1565825	Statement	"""ARMv7"""	30:8:1595:1601	1565821	1	True				
ANR	1565826	ExpressionStatement	SLJIT_CPUINFO	30:16:1603:1616	1565821	2	True				
ANR	1565827	Identifier	SLJIT_CPUINFO		1565821	0					
ANR	1565828	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1565821	1					
ANR	1565829	Identifier	sljit_get_platform_name		1565821	2					
ANR	1565830	ParameterList			1565821	3					
ANR	1565831	CFGEntryNode	ENTRY		1565821		True				
ANR	1565832	CFGExitNode	EXIT		1565821		True				
ANR	1565833	DeclStmt									
ANR	1565834	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 6 ]	reg_map
ANR	1565835	Function	push_cpool	129:0:4542:5681							
ANR	1565836	FunctionDef	push_cpool (struct sljit_compiler * compiler)		1565835	0					
ANR	1565837	CompoundStatement		130:0:4602:5681	1565835	0					
ANR	1565838	IdentifierDeclStatement	sljit_uw * inst ;	132:1:4667:4681	1565835	0	True				
ANR	1565839	IdentifierDecl	* inst		1565835	0					
ANR	1565840	IdentifierDeclType	sljit_uw *		1565835	0					
ANR	1565841	Identifier	inst		1565835	1					
ANR	1565842	IdentifierDeclStatement	sljit_uw * cpool_ptr ;	133:1:4684:4703	1565835	1	True				
ANR	1565843	IdentifierDecl	* cpool_ptr		1565835	0					
ANR	1565844	IdentifierDeclType	sljit_uw *		1565835	0					
ANR	1565845	Identifier	cpool_ptr		1565835	1					
ANR	1565846	IdentifierDeclStatement	sljit_uw * cpool_end ;	134:1:4706:4725	1565835	2	True				
ANR	1565847	IdentifierDecl	* cpool_end		1565835	0					
ANR	1565848	IdentifierDeclType	sljit_uw *		1565835	0					
ANR	1565849	Identifier	cpool_end		1565835	1					
ANR	1565850	IdentifierDeclStatement	sljit_si i ;	135:1:4728:4738	1565835	3	True				
ANR	1565851	IdentifierDecl	i		1565835	0					
ANR	1565852	IdentifierDeclType	sljit_si		1565835	0					
ANR	1565853	Identifier	i		1565835	1					
ANR	1565854	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1565835	4					
ANR	1565855	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	138:5:4812:4879	1565835	0	True				
ANR	1565856	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1565835	0		&&			
ANR	1565857	PtrMemberAccess	compiler -> last_label		1565835	0					
ANR	1565858	Identifier	compiler		1565835	0					
ANR	1565859	Identifier	last_label		1565835	1					
ANR	1565860	EqualityExpression	compiler -> last_label -> size == compiler -> size		1565835	1		==			
ANR	1565861	PtrMemberAccess	compiler -> last_label -> size		1565835	0					
ANR	1565862	PtrMemberAccess	compiler -> last_label		1565835	0					
ANR	1565863	Identifier	compiler		1565835	0					
ANR	1565864	Identifier	last_label		1565835	1					
ANR	1565865	Identifier	size		1565835	1					
ANR	1565866	PtrMemberAccess	compiler -> size		1565835	1					
ANR	1565867	Identifier	compiler		1565835	0					
ANR	1565868	Identifier	size		1565835	1					
ANR	1565869	ExpressionStatement	compiler -> last_label -> size += compiler -> cpool_fill + ( CONST_POOL_ALIGNMENT - 1 ) + 1	139:2:4884:4967	1565835	1	True				
ANR	1565870	AssignmentExpression	compiler -> last_label -> size += compiler -> cpool_fill + ( CONST_POOL_ALIGNMENT - 1 ) + 1		1565835	0		+=			
ANR	1565871	PtrMemberAccess	compiler -> last_label -> size		1565835	0					
ANR	1565872	PtrMemberAccess	compiler -> last_label		1565835	0					
ANR	1565873	Identifier	compiler		1565835	0					
ANR	1565874	Identifier	last_label		1565835	1					
ANR	1565875	Identifier	size		1565835	1					
ANR	1565876	AdditiveExpression	compiler -> cpool_fill + ( CONST_POOL_ALIGNMENT - 1 ) + 1		1565835	1		+			
ANR	1565877	PtrMemberAccess	compiler -> cpool_fill		1565835	0					
ANR	1565878	Identifier	compiler		1565835	0					
ANR	1565879	Identifier	cpool_fill		1565835	1					
ANR	1565880	AdditiveExpression	( CONST_POOL_ALIGNMENT - 1 ) + 1		1565835	1		+			
ANR	1565881	AdditiveExpression	CONST_POOL_ALIGNMENT - 1		1565835	0		-			
ANR	1565882	Identifier	CONST_POOL_ALIGNMENT		1565835	0					
ANR	1565883	PrimaryExpression	1		1565835	1					
ANR	1565884	PrimaryExpression	1		1565835	1					
ANR	1565885	ExpressionStatement	SLJIT_ASSERT ( compiler -> cpool_fill > 0 && compiler -> cpool_fill <= CPOOL_SIZE )	141:1:4971:5047	1565835	5	True				
ANR	1565886	CallExpression	SLJIT_ASSERT ( compiler -> cpool_fill > 0 && compiler -> cpool_fill <= CPOOL_SIZE )		1565835	0					
ANR	1565887	Callee	SLJIT_ASSERT		1565835	0					
ANR	1565888	Identifier	SLJIT_ASSERT		1565835	0					
ANR	1565889	ArgumentList	compiler -> cpool_fill > 0 && compiler -> cpool_fill <= CPOOL_SIZE		1565835	1					
ANR	1565890	Argument	compiler -> cpool_fill > 0 && compiler -> cpool_fill <= CPOOL_SIZE		1565835	0					
ANR	1565891	AndExpression	compiler -> cpool_fill > 0 && compiler -> cpool_fill <= CPOOL_SIZE		1565835	0		&&			
ANR	1565892	RelationalExpression	compiler -> cpool_fill > 0		1565835	0		>			
ANR	1565893	PtrMemberAccess	compiler -> cpool_fill		1565835	0					
ANR	1565894	Identifier	compiler		1565835	0					
ANR	1565895	Identifier	cpool_fill		1565835	1					
ANR	1565896	PrimaryExpression	0		1565835	1					
ANR	1565897	RelationalExpression	compiler -> cpool_fill <= CPOOL_SIZE		1565835	1		<=			
ANR	1565898	PtrMemberAccess	compiler -> cpool_fill		1565835	0					
ANR	1565899	Identifier	compiler		1565835	0					
ANR	1565900	Identifier	cpool_fill		1565835	1					
ANR	1565901	Identifier	CPOOL_SIZE		1565835	1					
ANR	1565902	ExpressionStatement	"inst = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"	142:1:5050:5106	1565835	6	True				
ANR	1565903	AssignmentExpression	"inst = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1565835	0		=			
ANR	1565904	Identifier	inst		1565835	0					
ANR	1565905	CastExpression	"( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1565835	1					
ANR	1565906	CastTarget	sljit_uw *		1565835	0					
ANR	1565907	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1565835	1					
ANR	1565908	Callee	ensure_buf		1565835	0					
ANR	1565909	Identifier	ensure_buf		1565835	0					
ANR	1565910	ArgumentList	compiler		1565835	1					
ANR	1565911	Argument	compiler		1565835	0					
ANR	1565912	Identifier	compiler		1565835	0					
ANR	1565913	Argument	sizeof ( sljit_uw )		1565835	1					
ANR	1565914	SizeofExpression	sizeof ( sljit_uw )		1565835	0					
ANR	1565915	Sizeof	sizeof		1565835	0					
ANR	1565916	SizeofOperand	sljit_uw		1565835	1					
ANR	1565917	ExpressionStatement	FAIL_IF ( ! inst )	143:1:5109:5123	1565835	7	True				
ANR	1565918	CallExpression	FAIL_IF ( ! inst )		1565835	0					
ANR	1565919	Callee	FAIL_IF		1565835	0					
ANR	1565920	Identifier	FAIL_IF		1565835	0					
ANR	1565921	ArgumentList	! inst		1565835	1					
ANR	1565922	Argument	! inst		1565835	0					
ANR	1565923	UnaryOperationExpression	! inst		1565835	0					
ANR	1565924	UnaryOperator	!		1565835	0					
ANR	1565925	Identifier	inst		1565835	1					
ANR	1565926	ExpressionStatement	compiler -> size ++	144:1:5126:5142	1565835	8	True				
ANR	1565927	PostIncDecOperationExpression	compiler -> size ++		1565835	0					
ANR	1565928	PtrMemberAccess	compiler -> size		1565835	0					
ANR	1565929	Identifier	compiler		1565835	0					
ANR	1565930	Identifier	size		1565835	1					
ANR	1565931	IncDec	++		1565835	1					
ANR	1565932	ExpressionStatement	* inst = 0xff000000 | compiler -> cpool_fill	145:1:5145:5186	1565835	9	True				
ANR	1565933	AssignmentExpression	* inst = 0xff000000 | compiler -> cpool_fill		1565835	0		=			
ANR	1565934	UnaryOperationExpression	* inst		1565835	0					
ANR	1565935	UnaryOperator	*		1565835	0					
ANR	1565936	Identifier	inst		1565835	1					
ANR	1565937	InclusiveOrExpression	0xff000000 | compiler -> cpool_fill		1565835	1		|			
ANR	1565938	PrimaryExpression	0xff000000		1565835	0					
ANR	1565939	PtrMemberAccess	compiler -> cpool_fill		1565835	1					
ANR	1565940	Identifier	compiler		1565835	0					
ANR	1565941	Identifier	cpool_fill		1565835	1					
ANR	1565942	ForStatement	for ( i = 0 ; i < CONST_POOL_ALIGNMENT - 1 ; i ++ )		1565835	10					
ANR	1565943	ForInit	i = 0 ;	147:6:5195:5200	1565835	0	True				
ANR	1565944	AssignmentExpression	i = 0		1565835	0		=			
ANR	1565945	Identifier	i		1565835	0					
ANR	1565946	PrimaryExpression	0		1565835	1					
ANR	1565947	Condition	i < CONST_POOL_ALIGNMENT - 1	147:13:5202:5229	1565835	1	True				
ANR	1565948	RelationalExpression	i < CONST_POOL_ALIGNMENT - 1		1565835	0		<			
ANR	1565949	Identifier	i		1565835	0					
ANR	1565950	AdditiveExpression	CONST_POOL_ALIGNMENT - 1		1565835	1		-			
ANR	1565951	Identifier	CONST_POOL_ALIGNMENT		1565835	0					
ANR	1565952	PrimaryExpression	1		1565835	1					
ANR	1565953	PostIncDecOperationExpression	i ++	147:43:5232:5234	1565835	2	True				
ANR	1565954	Identifier	i		1565835	0					
ANR	1565955	IncDec	++		1565835	1					
ANR	1565956	CompoundStatement		18:48:634:634	1565835	3					
ANR	1565957	ExpressionStatement	"inst = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"	148:2:5241:5297	1565835	0	True				
ANR	1565958	AssignmentExpression	"inst = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1565835	0		=			
ANR	1565959	Identifier	inst		1565835	0					
ANR	1565960	CastExpression	"( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1565835	1					
ANR	1565961	CastTarget	sljit_uw *		1565835	0					
ANR	1565962	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1565835	1					
ANR	1565963	Callee	ensure_buf		1565835	0					
ANR	1565964	Identifier	ensure_buf		1565835	0					
ANR	1565965	ArgumentList	compiler		1565835	1					
ANR	1565966	Argument	compiler		1565835	0					
ANR	1565967	Identifier	compiler		1565835	0					
ANR	1565968	Argument	sizeof ( sljit_uw )		1565835	1					
ANR	1565969	SizeofExpression	sizeof ( sljit_uw )		1565835	0					
ANR	1565970	Sizeof	sizeof		1565835	0					
ANR	1565971	SizeofOperand	sljit_uw		1565835	1					
ANR	1565972	ExpressionStatement	FAIL_IF ( ! inst )	149:2:5301:5315	1565835	1	True				
ANR	1565973	CallExpression	FAIL_IF ( ! inst )		1565835	0					
ANR	1565974	Callee	FAIL_IF		1565835	0					
ANR	1565975	Identifier	FAIL_IF		1565835	0					
ANR	1565976	ArgumentList	! inst		1565835	1					
ANR	1565977	Argument	! inst		1565835	0					
ANR	1565978	UnaryOperationExpression	! inst		1565835	0					
ANR	1565979	UnaryOperator	!		1565835	0					
ANR	1565980	Identifier	inst		1565835	1					
ANR	1565981	ExpressionStatement	compiler -> size ++	150:2:5319:5335	1565835	2	True				
ANR	1565982	PostIncDecOperationExpression	compiler -> size ++		1565835	0					
ANR	1565983	PtrMemberAccess	compiler -> size		1565835	0					
ANR	1565984	Identifier	compiler		1565835	0					
ANR	1565985	Identifier	size		1565835	1					
ANR	1565986	IncDec	++		1565835	1					
ANR	1565987	ExpressionStatement	* inst = 0	151:2:5339:5348	1565835	3	True				
ANR	1565988	AssignmentExpression	* inst = 0		1565835	0		=			
ANR	1565989	UnaryOperationExpression	* inst		1565835	0					
ANR	1565990	UnaryOperator	*		1565835	0					
ANR	1565991	Identifier	inst		1565835	1					
ANR	1565992	PrimaryExpression	0		1565835	1					
ANR	1565993	ExpressionStatement	cpool_ptr = compiler -> cpool	154:1:5355:5382	1565835	11	True				
ANR	1565994	AssignmentExpression	cpool_ptr = compiler -> cpool		1565835	0		=			
ANR	1565995	Identifier	cpool_ptr		1565835	0					
ANR	1565996	PtrMemberAccess	compiler -> cpool		1565835	1					
ANR	1565997	Identifier	compiler		1565835	0					
ANR	1565998	Identifier	cpool		1565835	1					
ANR	1565999	ExpressionStatement	cpool_end = cpool_ptr + compiler -> cpool_fill	155:1:5385:5429	1565835	12	True				
ANR	1566000	AssignmentExpression	cpool_end = cpool_ptr + compiler -> cpool_fill		1565835	0		=			
ANR	1566001	Identifier	cpool_end		1565835	0					
ANR	1566002	AdditiveExpression	cpool_ptr + compiler -> cpool_fill		1565835	1		+			
ANR	1566003	Identifier	cpool_ptr		1565835	0					
ANR	1566004	PtrMemberAccess	compiler -> cpool_fill		1565835	1					
ANR	1566005	Identifier	compiler		1565835	0					
ANR	1566006	Identifier	cpool_fill		1565835	1					
ANR	1566007	WhileStatement	while ( cpool_ptr < cpool_end )		1565835	13					
ANR	1566008	Condition	cpool_ptr < cpool_end	156:8:5439:5459	1565835	0	True				
ANR	1566009	RelationalExpression	cpool_ptr < cpool_end		1565835	0		<			
ANR	1566010	Identifier	cpool_ptr		1565835	0					
ANR	1566011	Identifier	cpool_end		1565835	1					
ANR	1566012	CompoundStatement		27:31:859:859	1565835	1					
ANR	1566013	ExpressionStatement	"inst = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"	157:2:5466:5522	1565835	0	True				
ANR	1566014	AssignmentExpression	"inst = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1565835	0		=			
ANR	1566015	Identifier	inst		1565835	0					
ANR	1566016	CastExpression	"( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1565835	1					
ANR	1566017	CastTarget	sljit_uw *		1565835	0					
ANR	1566018	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1565835	1					
ANR	1566019	Callee	ensure_buf		1565835	0					
ANR	1566020	Identifier	ensure_buf		1565835	0					
ANR	1566021	ArgumentList	compiler		1565835	1					
ANR	1566022	Argument	compiler		1565835	0					
ANR	1566023	Identifier	compiler		1565835	0					
ANR	1566024	Argument	sizeof ( sljit_uw )		1565835	1					
ANR	1566025	SizeofExpression	sizeof ( sljit_uw )		1565835	0					
ANR	1566026	Sizeof	sizeof		1565835	0					
ANR	1566027	SizeofOperand	sljit_uw		1565835	1					
ANR	1566028	ExpressionStatement	FAIL_IF ( ! inst )	158:2:5526:5540	1565835	1	True				
ANR	1566029	CallExpression	FAIL_IF ( ! inst )		1565835	0					
ANR	1566030	Callee	FAIL_IF		1565835	0					
ANR	1566031	Identifier	FAIL_IF		1565835	0					
ANR	1566032	ArgumentList	! inst		1565835	1					
ANR	1566033	Argument	! inst		1565835	0					
ANR	1566034	UnaryOperationExpression	! inst		1565835	0					
ANR	1566035	UnaryOperator	!		1565835	0					
ANR	1566036	Identifier	inst		1565835	1					
ANR	1566037	ExpressionStatement	compiler -> size ++	159:2:5544:5560	1565835	2	True				
ANR	1566038	PostIncDecOperationExpression	compiler -> size ++		1565835	0					
ANR	1566039	PtrMemberAccess	compiler -> size		1565835	0					
ANR	1566040	Identifier	compiler		1565835	0					
ANR	1566041	Identifier	size		1565835	1					
ANR	1566042	IncDec	++		1565835	1					
ANR	1566043	ExpressionStatement	* inst = * cpool_ptr ++	160:2:5564:5584	1565835	3	True				
ANR	1566044	AssignmentExpression	* inst = * cpool_ptr ++		1565835	0		=			
ANR	1566045	UnaryOperationExpression	* inst		1565835	0					
ANR	1566046	UnaryOperator	*		1565835	0					
ANR	1566047	Identifier	inst		1565835	1					
ANR	1566048	UnaryOperationExpression	* cpool_ptr ++		1565835	1					
ANR	1566049	UnaryOperator	*		1565835	0					
ANR	1566050	PostIncDecOperationExpression	cpool_ptr ++		1565835	1					
ANR	1566051	Identifier	cpool_ptr		1565835	0					
ANR	1566052	IncDec	++		1565835	1					
ANR	1566053	ExpressionStatement	compiler -> cpool_diff = CONST_POOL_EMPTY	162:1:5590:5629	1565835	14	True				
ANR	1566054	AssignmentExpression	compiler -> cpool_diff = CONST_POOL_EMPTY		1565835	0		=			
ANR	1566055	PtrMemberAccess	compiler -> cpool_diff		1565835	0					
ANR	1566056	Identifier	compiler		1565835	0					
ANR	1566057	Identifier	cpool_diff		1565835	1					
ANR	1566058	Identifier	CONST_POOL_EMPTY		1565835	1					
ANR	1566059	ExpressionStatement	compiler -> cpool_fill = 0	163:1:5632:5656	1565835	15	True				
ANR	1566060	AssignmentExpression	compiler -> cpool_fill = 0		1565835	0		=			
ANR	1566061	PtrMemberAccess	compiler -> cpool_fill		1565835	0					
ANR	1566062	Identifier	compiler		1565835	0					
ANR	1566063	Identifier	cpool_fill		1565835	1					
ANR	1566064	PrimaryExpression	0		1565835	1					
ANR	1566065	ReturnStatement	return SLJIT_SUCCESS ;	164:1:5659:5679	1565835	16	True				
ANR	1566066	Identifier	SLJIT_SUCCESS		1565835	0					
ANR	1566067	ReturnType	static sljit_si		1565835	1					
ANR	1566068	Identifier	push_cpool		1565835	2					
ANR	1566069	ParameterList	struct sljit_compiler * compiler		1565835	3					
ANR	1566070	Parameter	struct sljit_compiler * compiler	129:27:4569:4599	1565835	0	True				
ANR	1566071	ParameterType	struct sljit_compiler *		1565835	0					
ANR	1566072	Identifier	compiler		1565835	1					
ANR	1566073	CFGEntryNode	ENTRY		1565835		True				
ANR	1566074	CFGExitNode	EXIT		1565835		True				
ANR	1566075	Symbol	* compiler -> last_label		1565835						
ANR	1566076	Symbol	compiler -> last_label		1565835						
ANR	1566077	Symbol	* inst		1565835						
ANR	1566078	Symbol	* cpool_ptr ++		1565835						
ANR	1566079	Symbol	CONST_POOL_EMPTY		1565835						
ANR	1566080	Symbol	i		1565835						
ANR	1566081	Symbol	SLJIT_SUCCESS		1565835						
ANR	1566082	Symbol	* compiler		1565835						
ANR	1566083	Symbol	cpool_end		1565835						
ANR	1566084	Symbol	compiler -> cpool_diff		1565835						
ANR	1566085	Symbol	compiler -> cpool_fill		1565835						
ANR	1566086	Symbol	compiler -> last_label -> size		1565835						
ANR	1566087	Symbol	CONST_POOL_ALIGNMENT		1565835						
ANR	1566088	Symbol	* * compiler		1565835						
ANR	1566089	Symbol	compiler -> size		1565835						
ANR	1566090	Symbol	inst		1565835						
ANR	1566091	Symbol	CPOOL_SIZE		1565835						
ANR	1566092	Symbol	ensure_buf		1565835						
ANR	1566093	Symbol	cpool_ptr		1565835						
ANR	1566094	Symbol	compiler -> cpool		1565835						
ANR	1566095	Symbol	compiler		1565835						
ANR	1566096	Function	push_inst	167:0:5684:6069							
ANR	1566097	FunctionDef	"push_inst (struct sljit_compiler * compiler , sljit_uw inst)"		1566096	0					
ANR	1566098	CompoundStatement		168:0:5758:6069	1566096	0					
ANR	1566099	IdentifierDeclStatement	sljit_uw * ptr ;	169:1:5761:5774	1566096	0	True				
ANR	1566100	IdentifierDecl	* ptr		1566096	0					
ANR	1566101	IdentifierDeclType	sljit_uw *		1566096	0					
ANR	1566102	Identifier	ptr		1566096	1					
ANR	1566103	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) ) )		1566096	1					
ANR	1566104	Condition	SLJIT_UNLIKELY ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) )	171:5:5782:5902	1566096	0	True				
ANR	1566105	CallExpression	SLJIT_UNLIKELY ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) )		1566096	0					
ANR	1566106	Callee	SLJIT_UNLIKELY		1566096	0					
ANR	1566107	Identifier	SLJIT_UNLIKELY		1566096	0					
ANR	1566108	ArgumentList	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566096	1					
ANR	1566109	Argument	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566096	0					
ANR	1566110	AndExpression	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566096	0		&&			
ANR	1566111	EqualityExpression	compiler -> cpool_diff != CONST_POOL_EMPTY		1566096	0		!=			
ANR	1566112	PtrMemberAccess	compiler -> cpool_diff		1566096	0					
ANR	1566113	Identifier	compiler		1566096	0					
ANR	1566114	Identifier	cpool_diff		1566096	1					
ANR	1566115	Identifier	CONST_POOL_EMPTY		1566096	1					
ANR	1566116	RelationalExpression	compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566096	1		>=			
ANR	1566117	AdditiveExpression	compiler -> size - compiler -> cpool_diff		1566096	0		-			
ANR	1566118	PtrMemberAccess	compiler -> size		1566096	0					
ANR	1566119	Identifier	compiler		1566096	0					
ANR	1566120	Identifier	size		1566096	1					
ANR	1566121	PtrMemberAccess	compiler -> cpool_diff		1566096	1					
ANR	1566122	Identifier	compiler		1566096	0					
ANR	1566123	Identifier	cpool_diff		1566096	1					
ANR	1566124	CallExpression	MAX_DIFFERENCE ( 4092 )		1566096	1					
ANR	1566125	Callee	MAX_DIFFERENCE		1566096	0					
ANR	1566126	Identifier	MAX_DIFFERENCE		1566096	0					
ANR	1566127	ArgumentList	4092		1566096	1					
ANR	1566128	Argument	4092		1566096	0					
ANR	1566129	PrimaryExpression	4092		1566096	0					
ANR	1566130	ExpressionStatement	FAIL_IF ( push_cpool ( compiler ) )	172:2:5907:5936	1566096	1	True				
ANR	1566131	CallExpression	FAIL_IF ( push_cpool ( compiler ) )		1566096	0					
ANR	1566132	Callee	FAIL_IF		1566096	0					
ANR	1566133	Identifier	FAIL_IF		1566096	0					
ANR	1566134	ArgumentList	push_cpool ( compiler )		1566096	1					
ANR	1566135	Argument	push_cpool ( compiler )		1566096	0					
ANR	1566136	CallExpression	push_cpool ( compiler )		1566096	0					
ANR	1566137	Callee	push_cpool		1566096	0					
ANR	1566138	Identifier	push_cpool		1566096	0					
ANR	1566139	ArgumentList	compiler		1566096	1					
ANR	1566140	Argument	compiler		1566096	0					
ANR	1566141	Identifier	compiler		1566096	0					
ANR	1566142	ExpressionStatement	"ptr = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"	174:1:5940:5995	1566096	2	True				
ANR	1566143	AssignmentExpression	"ptr = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1566096	0		=			
ANR	1566144	Identifier	ptr		1566096	0					
ANR	1566145	CastExpression	"( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1566096	1					
ANR	1566146	CastTarget	sljit_uw *		1566096	0					
ANR	1566147	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1566096	1					
ANR	1566148	Callee	ensure_buf		1566096	0					
ANR	1566149	Identifier	ensure_buf		1566096	0					
ANR	1566150	ArgumentList	compiler		1566096	1					
ANR	1566151	Argument	compiler		1566096	0					
ANR	1566152	Identifier	compiler		1566096	0					
ANR	1566153	Argument	sizeof ( sljit_uw )		1566096	1					
ANR	1566154	SizeofExpression	sizeof ( sljit_uw )		1566096	0					
ANR	1566155	Sizeof	sizeof		1566096	0					
ANR	1566156	SizeofOperand	sljit_uw		1566096	1					
ANR	1566157	ExpressionStatement	FAIL_IF ( ! ptr )	175:1:5998:6011	1566096	3	True				
ANR	1566158	CallExpression	FAIL_IF ( ! ptr )		1566096	0					
ANR	1566159	Callee	FAIL_IF		1566096	0					
ANR	1566160	Identifier	FAIL_IF		1566096	0					
ANR	1566161	ArgumentList	! ptr		1566096	1					
ANR	1566162	Argument	! ptr		1566096	0					
ANR	1566163	UnaryOperationExpression	! ptr		1566096	0					
ANR	1566164	UnaryOperator	!		1566096	0					
ANR	1566165	Identifier	ptr		1566096	1					
ANR	1566166	ExpressionStatement	compiler -> size ++	176:1:6014:6030	1566096	4	True				
ANR	1566167	PostIncDecOperationExpression	compiler -> size ++		1566096	0					
ANR	1566168	PtrMemberAccess	compiler -> size		1566096	0					
ANR	1566169	Identifier	compiler		1566096	0					
ANR	1566170	Identifier	size		1566096	1					
ANR	1566171	IncDec	++		1566096	1					
ANR	1566172	ExpressionStatement	* ptr = inst	177:1:6033:6044	1566096	5	True				
ANR	1566173	AssignmentExpression	* ptr = inst		1566096	0		=			
ANR	1566174	UnaryOperationExpression	* ptr		1566096	0					
ANR	1566175	UnaryOperator	*		1566096	0					
ANR	1566176	Identifier	ptr		1566096	1					
ANR	1566177	Identifier	inst		1566096	1					
ANR	1566178	ReturnStatement	return SLJIT_SUCCESS ;	178:1:6047:6067	1566096	6	True				
ANR	1566179	Identifier	SLJIT_SUCCESS		1566096	0					
ANR	1566180	ReturnType	static sljit_si		1566096	1					
ANR	1566181	Identifier	push_inst		1566096	2					
ANR	1566182	ParameterList	"struct sljit_compiler * compiler , sljit_uw inst"		1566096	3					
ANR	1566183	Parameter	struct sljit_compiler * compiler	167:26:5710:5740	1566096	0	True				
ANR	1566184	ParameterType	struct sljit_compiler *		1566096	0					
ANR	1566185	Identifier	compiler		1566096	1					
ANR	1566186	Parameter	sljit_uw inst	167:59:5743:5755	1566096	1	True				
ANR	1566187	ParameterType	sljit_uw		1566096	0					
ANR	1566188	Identifier	inst		1566096	1					
ANR	1566189	CFGEntryNode	ENTRY		1566096		True				
ANR	1566190	CFGExitNode	EXIT		1566096		True				
ANR	1566191	Symbol	MAX_DIFFERENCE		1566096						
ANR	1566192	Symbol	push_cpool		1566096						
ANR	1566193	Symbol	CONST_POOL_EMPTY		1566096						
ANR	1566194	Symbol	SLJIT_SUCCESS		1566096						
ANR	1566195	Symbol	* compiler		1566096						
ANR	1566196	Symbol	compiler -> cpool_diff		1566096						
ANR	1566197	Symbol	ptr		1566096						
ANR	1566198	Symbol	compiler -> size		1566096						
ANR	1566199	Symbol	inst		1566096						
ANR	1566200	Symbol	ensure_buf		1566096						
ANR	1566201	Symbol	* ptr		1566096						
ANR	1566202	Symbol	compiler		1566096						
ANR	1566203	Symbol	SLJIT_UNLIKELY		1566096						
ANR	1566204	Function	push_inst_with_literal	181:0:6072:7488							
ANR	1566205	FunctionDef	"push_inst_with_literal (struct sljit_compiler * compiler , sljit_uw inst , sljit_uw literal)"		1566204	0					
ANR	1566206	CompoundStatement		182:0:6177:7488	1566204	0					
ANR	1566207	IdentifierDeclStatement	sljit_uw * ptr ;	183:1:6180:6193	1566204	0	True				
ANR	1566208	IdentifierDecl	* ptr		1566204	0					
ANR	1566209	IdentifierDeclType	sljit_uw *		1566204	0					
ANR	1566210	Identifier	ptr		1566204	1					
ANR	1566211	IdentifierDeclStatement	sljit_uw cpool_index = CPOOL_SIZE ;	184:1:6196:6229	1566204	1	True				
ANR	1566212	IdentifierDecl	cpool_index = CPOOL_SIZE		1566204	0					
ANR	1566213	IdentifierDeclType	sljit_uw		1566204	0					
ANR	1566214	Identifier	cpool_index		1566204	1					
ANR	1566215	AssignmentExpression	cpool_index = CPOOL_SIZE		1566204	2		=			
ANR	1566216	Identifier	CPOOL_SIZE		1566204	0					
ANR	1566217	Identifier	CPOOL_SIZE		1566204	1					
ANR	1566218	IdentifierDeclStatement	sljit_uw * cpool_ptr ;	185:1:6232:6251	1566204	2	True				
ANR	1566219	IdentifierDecl	* cpool_ptr		1566204	0					
ANR	1566220	IdentifierDeclType	sljit_uw *		1566204	0					
ANR	1566221	Identifier	cpool_ptr		1566204	1					
ANR	1566222	IdentifierDeclStatement	sljit_uw * cpool_end ;	186:1:6254:6273	1566204	3	True				
ANR	1566223	IdentifierDecl	* cpool_end		1566204	0					
ANR	1566224	IdentifierDeclType	sljit_uw *		1566204	0					
ANR	1566225	Identifier	cpool_end		1566204	1					
ANR	1566226	IdentifierDeclStatement	sljit_ub * cpool_unique_ptr ;	187:1:6276:6302	1566204	4	True				
ANR	1566227	IdentifierDecl	* cpool_unique_ptr		1566204	0					
ANR	1566228	IdentifierDeclType	sljit_ub *		1566204	0					
ANR	1566229	Identifier	cpool_unique_ptr		1566204	1					
ANR	1566230	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) ) )		1566204	5					
ANR	1566231	Condition	SLJIT_UNLIKELY ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) )	189:5:6310:6430	1566204	0	True				
ANR	1566232	CallExpression	SLJIT_UNLIKELY ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) )		1566204	0					
ANR	1566233	Callee	SLJIT_UNLIKELY		1566204	0					
ANR	1566234	Identifier	SLJIT_UNLIKELY		1566204	0					
ANR	1566235	ArgumentList	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566204	1					
ANR	1566236	Argument	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566204	0					
ANR	1566237	AndExpression	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566204	0		&&			
ANR	1566238	EqualityExpression	compiler -> cpool_diff != CONST_POOL_EMPTY		1566204	0		!=			
ANR	1566239	PtrMemberAccess	compiler -> cpool_diff		1566204	0					
ANR	1566240	Identifier	compiler		1566204	0					
ANR	1566241	Identifier	cpool_diff		1566204	1					
ANR	1566242	Identifier	CONST_POOL_EMPTY		1566204	1					
ANR	1566243	RelationalExpression	compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566204	1		>=			
ANR	1566244	AdditiveExpression	compiler -> size - compiler -> cpool_diff		1566204	0		-			
ANR	1566245	PtrMemberAccess	compiler -> size		1566204	0					
ANR	1566246	Identifier	compiler		1566204	0					
ANR	1566247	Identifier	size		1566204	1					
ANR	1566248	PtrMemberAccess	compiler -> cpool_diff		1566204	1					
ANR	1566249	Identifier	compiler		1566204	0					
ANR	1566250	Identifier	cpool_diff		1566204	1					
ANR	1566251	CallExpression	MAX_DIFFERENCE ( 4092 )		1566204	1					
ANR	1566252	Callee	MAX_DIFFERENCE		1566204	0					
ANR	1566253	Identifier	MAX_DIFFERENCE		1566204	0					
ANR	1566254	ArgumentList	4092		1566204	1					
ANR	1566255	Argument	4092		1566204	0					
ANR	1566256	PrimaryExpression	4092		1566204	0					
ANR	1566257	ExpressionStatement	FAIL_IF ( push_cpool ( compiler ) )	190:2:6435:6464	1566204	1	True				
ANR	1566258	CallExpression	FAIL_IF ( push_cpool ( compiler ) )		1566204	0					
ANR	1566259	Callee	FAIL_IF		1566204	0					
ANR	1566260	Identifier	FAIL_IF		1566204	0					
ANR	1566261	ArgumentList	push_cpool ( compiler )		1566204	1					
ANR	1566262	Argument	push_cpool ( compiler )		1566204	0					
ANR	1566263	CallExpression	push_cpool ( compiler )		1566204	0					
ANR	1566264	Callee	push_cpool		1566204	0					
ANR	1566265	Identifier	push_cpool		1566204	0					
ANR	1566266	ArgumentList	compiler		1566204	1					
ANR	1566267	Argument	compiler		1566204	0					
ANR	1566268	Identifier	compiler		1566204	0					
ANR	1566269	ElseStatement	else		1566204	0					
ANR	1566270	IfStatement	if ( compiler -> cpool_fill > 0 )		1566204	0					
ANR	1566271	Condition	compiler -> cpool_fill > 0	191:10:6476:6499	1566204	0	True				
ANR	1566272	RelationalExpression	compiler -> cpool_fill > 0		1566204	0		>			
ANR	1566273	PtrMemberAccess	compiler -> cpool_fill		1566204	0					
ANR	1566274	Identifier	compiler		1566204	0					
ANR	1566275	Identifier	cpool_fill		1566204	1					
ANR	1566276	PrimaryExpression	0		1566204	1					
ANR	1566277	CompoundStatement		10:36:324:324	1566204	1					
ANR	1566278	ExpressionStatement	cpool_ptr = compiler -> cpool	192:2:6506:6533	1566204	0	True				
ANR	1566279	AssignmentExpression	cpool_ptr = compiler -> cpool		1566204	0		=			
ANR	1566280	Identifier	cpool_ptr		1566204	0					
ANR	1566281	PtrMemberAccess	compiler -> cpool		1566204	1					
ANR	1566282	Identifier	compiler		1566204	0					
ANR	1566283	Identifier	cpool		1566204	1					
ANR	1566284	ExpressionStatement	cpool_end = cpool_ptr + compiler -> cpool_fill	193:2:6537:6581	1566204	1	True				
ANR	1566285	AssignmentExpression	cpool_end = cpool_ptr + compiler -> cpool_fill		1566204	0		=			
ANR	1566286	Identifier	cpool_end		1566204	0					
ANR	1566287	AdditiveExpression	cpool_ptr + compiler -> cpool_fill		1566204	1		+			
ANR	1566288	Identifier	cpool_ptr		1566204	0					
ANR	1566289	PtrMemberAccess	compiler -> cpool_fill		1566204	1					
ANR	1566290	Identifier	compiler		1566204	0					
ANR	1566291	Identifier	cpool_fill		1566204	1					
ANR	1566292	ExpressionStatement	cpool_unique_ptr = compiler -> cpool_unique	194:2:6585:6626	1566204	2	True				
ANR	1566293	AssignmentExpression	cpool_unique_ptr = compiler -> cpool_unique		1566204	0		=			
ANR	1566294	Identifier	cpool_unique_ptr		1566204	0					
ANR	1566295	PtrMemberAccess	compiler -> cpool_unique		1566204	1					
ANR	1566296	Identifier	compiler		1566204	0					
ANR	1566297	Identifier	cpool_unique		1566204	1					
ANR	1566298	DoStatement	do		1566204	3					
ANR	1566299	CompoundStatement		14:5:455:455	1566204	0					
ANR	1566300	IfStatement	if ( ( * cpool_ptr == literal ) && ! ( * cpool_unique_ptr ) )		1566204	0					
ANR	1566301	Condition	( * cpool_ptr == literal ) && ! ( * cpool_unique_ptr )	196:7:6642:6688	1566204	0	True				
ANR	1566302	AndExpression	( * cpool_ptr == literal ) && ! ( * cpool_unique_ptr )		1566204	0		&&			
ANR	1566303	EqualityExpression	* cpool_ptr == literal		1566204	0		==			
ANR	1566304	UnaryOperationExpression	* cpool_ptr		1566204	0					
ANR	1566305	UnaryOperator	*		1566204	0					
ANR	1566306	Identifier	cpool_ptr		1566204	1					
ANR	1566307	Identifier	literal		1566204	1					
ANR	1566308	UnaryOperationExpression	! ( * cpool_unique_ptr )		1566204	1					
ANR	1566309	UnaryOperator	!		1566204	0					
ANR	1566310	UnaryOperationExpression	* cpool_unique_ptr		1566204	1					
ANR	1566311	UnaryOperator	*		1566204	0					
ANR	1566312	Identifier	cpool_unique_ptr		1566204	1					
ANR	1566313	CompoundStatement		15:56:513:513	1566204	1					
ANR	1566314	ExpressionStatement	cpool_index = cpool_ptr - compiler -> cpool	197:4:6697:6738	1566204	0	True				
ANR	1566315	AssignmentExpression	cpool_index = cpool_ptr - compiler -> cpool		1566204	0		=			
ANR	1566316	Identifier	cpool_index		1566204	0					
ANR	1566317	AdditiveExpression	cpool_ptr - compiler -> cpool		1566204	1		-			
ANR	1566318	Identifier	cpool_ptr		1566204	0					
ANR	1566319	PtrMemberAccess	compiler -> cpool		1566204	1					
ANR	1566320	Identifier	compiler		1566204	0					
ANR	1566321	Identifier	cpool		1566204	1					
ANR	1566322	BreakStatement	break ;	198:4:6744:6749	1566204	1	True				
ANR	1566323	ExpressionStatement	cpool_ptr ++	200:3:6759:6770	1566204	1	True				
ANR	1566324	PostIncDecOperationExpression	cpool_ptr ++		1566204	0					
ANR	1566325	Identifier	cpool_ptr		1566204	0					
ANR	1566326	IncDec	++		1566204	1					
ANR	1566327	ExpressionStatement	cpool_unique_ptr ++	201:3:6775:6793	1566204	2	True				
ANR	1566328	PostIncDecOperationExpression	cpool_unique_ptr ++		1566204	0					
ANR	1566329	Identifier	cpool_unique_ptr		1566204	0					
ANR	1566330	IncDec	++		1566204	1					
ANR	1566331	Condition	cpool_ptr < cpool_end	202:11:6806:6826	1566204	1	True				
ANR	1566332	RelationalExpression	cpool_ptr < cpool_end		1566204	0		<			
ANR	1566333	Identifier	cpool_ptr		1566204	0					
ANR	1566334	Identifier	cpool_end		1566204	1					
ANR	1566335	IfStatement	if ( cpool_index == CPOOL_SIZE )		1566204	6					
ANR	1566336	Condition	cpool_index == CPOOL_SIZE	205:5:6839:6863	1566204	0	True				
ANR	1566337	EqualityExpression	cpool_index == CPOOL_SIZE		1566204	0		==			
ANR	1566338	Identifier	cpool_index		1566204	0					
ANR	1566339	Identifier	CPOOL_SIZE		1566204	1					
ANR	1566340	CompoundStatement		24:32:688:688	1566204	1					
ANR	1566341	IfStatement	if ( compiler -> cpool_fill < CPOOL_SIZE )		1566204	0					
ANR	1566342	Condition	compiler -> cpool_fill < CPOOL_SIZE	207:6:6929:6961	1566204	0	True				
ANR	1566343	RelationalExpression	compiler -> cpool_fill < CPOOL_SIZE		1566204	0		<			
ANR	1566344	PtrMemberAccess	compiler -> cpool_fill		1566204	0					
ANR	1566345	Identifier	compiler		1566204	0					
ANR	1566346	Identifier	cpool_fill		1566204	1					
ANR	1566347	Identifier	CPOOL_SIZE		1566204	1					
ANR	1566348	CompoundStatement		26:41:786:786	1566204	1					
ANR	1566349	ExpressionStatement	cpool_index = compiler -> cpool_fill	208:3:6969:7003	1566204	0	True				
ANR	1566350	AssignmentExpression	cpool_index = compiler -> cpool_fill		1566204	0		=			
ANR	1566351	Identifier	cpool_index		1566204	0					
ANR	1566352	PtrMemberAccess	compiler -> cpool_fill		1566204	1					
ANR	1566353	Identifier	compiler		1566204	0					
ANR	1566354	Identifier	cpool_fill		1566204	1					
ANR	1566355	ExpressionStatement	compiler -> cpool_fill ++	209:3:7008:7030	1566204	1	True				
ANR	1566356	PostIncDecOperationExpression	compiler -> cpool_fill ++		1566204	0					
ANR	1566357	PtrMemberAccess	compiler -> cpool_fill		1566204	0					
ANR	1566358	Identifier	compiler		1566204	0					
ANR	1566359	Identifier	cpool_fill		1566204	1					
ANR	1566360	IncDec	++		1566204	1					
ANR	1566361	ElseStatement	else		1566204	0					
ANR	1566362	CompoundStatement		30:7:865:865	1566204	0					
ANR	1566363	ExpressionStatement	FAIL_IF ( push_cpool ( compiler ) )	212:3:7048:7077	1566204	0	True				
ANR	1566364	CallExpression	FAIL_IF ( push_cpool ( compiler ) )		1566204	0					
ANR	1566365	Callee	FAIL_IF		1566204	0					
ANR	1566366	Identifier	FAIL_IF		1566204	0					
ANR	1566367	ArgumentList	push_cpool ( compiler )		1566204	1					
ANR	1566368	Argument	push_cpool ( compiler )		1566204	0					
ANR	1566369	CallExpression	push_cpool ( compiler )		1566204	0					
ANR	1566370	Callee	push_cpool		1566204	0					
ANR	1566371	Identifier	push_cpool		1566204	0					
ANR	1566372	ArgumentList	compiler		1566204	1					
ANR	1566373	Argument	compiler		1566204	0					
ANR	1566374	Identifier	compiler		1566204	0					
ANR	1566375	ExpressionStatement	cpool_index = 0	213:3:7082:7097	1566204	1	True				
ANR	1566376	AssignmentExpression	cpool_index = 0		1566204	0		=			
ANR	1566377	Identifier	cpool_index		1566204	0					
ANR	1566378	PrimaryExpression	0		1566204	1					
ANR	1566379	ExpressionStatement	compiler -> cpool_fill = 1	214:3:7102:7126	1566204	2	True				
ANR	1566380	AssignmentExpression	compiler -> cpool_fill = 1		1566204	0		=			
ANR	1566381	PtrMemberAccess	compiler -> cpool_fill		1566204	0					
ANR	1566382	Identifier	compiler		1566204	0					
ANR	1566383	Identifier	cpool_fill		1566204	1					
ANR	1566384	PrimaryExpression	1		1566204	1					
ANR	1566385	ExpressionStatement	SLJIT_ASSERT ( ( inst & 0xfff ) == 0 )	218:1:7137:7170	1566204	7	True				
ANR	1566386	CallExpression	SLJIT_ASSERT ( ( inst & 0xfff ) == 0 )		1566204	0					
ANR	1566387	Callee	SLJIT_ASSERT		1566204	0					
ANR	1566388	Identifier	SLJIT_ASSERT		1566204	0					
ANR	1566389	ArgumentList	( inst & 0xfff ) == 0		1566204	1					
ANR	1566390	Argument	( inst & 0xfff ) == 0		1566204	0					
ANR	1566391	EqualityExpression	( inst & 0xfff ) == 0		1566204	0		==			
ANR	1566392	BitAndExpression	inst & 0xfff		1566204	0		&			
ANR	1566393	Identifier	inst		1566204	0					
ANR	1566394	PrimaryExpression	0xfff		1566204	1					
ANR	1566395	PrimaryExpression	0		1566204	1					
ANR	1566396	ExpressionStatement	"ptr = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"	219:1:7173:7228	1566204	8	True				
ANR	1566397	AssignmentExpression	"ptr = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1566204	0		=			
ANR	1566398	Identifier	ptr		1566204	0					
ANR	1566399	CastExpression	"( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1566204	1					
ANR	1566400	CastTarget	sljit_uw *		1566204	0					
ANR	1566401	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1566204	1					
ANR	1566402	Callee	ensure_buf		1566204	0					
ANR	1566403	Identifier	ensure_buf		1566204	0					
ANR	1566404	ArgumentList	compiler		1566204	1					
ANR	1566405	Argument	compiler		1566204	0					
ANR	1566406	Identifier	compiler		1566204	0					
ANR	1566407	Argument	sizeof ( sljit_uw )		1566204	1					
ANR	1566408	SizeofExpression	sizeof ( sljit_uw )		1566204	0					
ANR	1566409	Sizeof	sizeof		1566204	0					
ANR	1566410	SizeofOperand	sljit_uw		1566204	1					
ANR	1566411	ExpressionStatement	FAIL_IF ( ! ptr )	220:1:7231:7244	1566204	9	True				
ANR	1566412	CallExpression	FAIL_IF ( ! ptr )		1566204	0					
ANR	1566413	Callee	FAIL_IF		1566204	0					
ANR	1566414	Identifier	FAIL_IF		1566204	0					
ANR	1566415	ArgumentList	! ptr		1566204	1					
ANR	1566416	Argument	! ptr		1566204	0					
ANR	1566417	UnaryOperationExpression	! ptr		1566204	0					
ANR	1566418	UnaryOperator	!		1566204	0					
ANR	1566419	Identifier	ptr		1566204	1					
ANR	1566420	ExpressionStatement	compiler -> size ++	221:1:7247:7263	1566204	10	True				
ANR	1566421	PostIncDecOperationExpression	compiler -> size ++		1566204	0					
ANR	1566422	PtrMemberAccess	compiler -> size		1566204	0					
ANR	1566423	Identifier	compiler		1566204	0					
ANR	1566424	Identifier	size		1566204	1					
ANR	1566425	IncDec	++		1566204	1					
ANR	1566426	ExpressionStatement	* ptr = inst | cpool_index	222:1:7266:7291	1566204	11	True				
ANR	1566427	AssignmentExpression	* ptr = inst | cpool_index		1566204	0		=			
ANR	1566428	UnaryOperationExpression	* ptr		1566204	0					
ANR	1566429	UnaryOperator	*		1566204	0					
ANR	1566430	Identifier	ptr		1566204	1					
ANR	1566431	InclusiveOrExpression	inst | cpool_index		1566204	1		|			
ANR	1566432	Identifier	inst		1566204	0					
ANR	1566433	Identifier	cpool_index		1566204	1					
ANR	1566434	ExpressionStatement	compiler -> cpool [ cpool_index ] = literal	224:1:7295:7333	1566204	12	True				
ANR	1566435	AssignmentExpression	compiler -> cpool [ cpool_index ] = literal		1566204	0		=			
ANR	1566436	ArrayIndexing	compiler -> cpool [ cpool_index ]		1566204	0					
ANR	1566437	PtrMemberAccess	compiler -> cpool		1566204	0					
ANR	1566438	Identifier	compiler		1566204	0					
ANR	1566439	Identifier	cpool		1566204	1					
ANR	1566440	Identifier	cpool_index		1566204	1					
ANR	1566441	Identifier	literal		1566204	1					
ANR	1566442	ExpressionStatement	compiler -> cpool_unique [ cpool_index ] = 0	225:1:7336:7375	1566204	13	True				
ANR	1566443	AssignmentExpression	compiler -> cpool_unique [ cpool_index ] = 0		1566204	0		=			
ANR	1566444	ArrayIndexing	compiler -> cpool_unique [ cpool_index ]		1566204	0					
ANR	1566445	PtrMemberAccess	compiler -> cpool_unique		1566204	0					
ANR	1566446	Identifier	compiler		1566204	0					
ANR	1566447	Identifier	cpool_unique		1566204	1					
ANR	1566448	Identifier	cpool_index		1566204	1					
ANR	1566449	PrimaryExpression	0		1566204	1					
ANR	1566450	IfStatement	if ( compiler -> cpool_diff == CONST_POOL_EMPTY )		1566204	14					
ANR	1566451	Condition	compiler -> cpool_diff == CONST_POOL_EMPTY	226:5:7382:7421	1566204	0	True				
ANR	1566452	EqualityExpression	compiler -> cpool_diff == CONST_POOL_EMPTY		1566204	0		==			
ANR	1566453	PtrMemberAccess	compiler -> cpool_diff		1566204	0					
ANR	1566454	Identifier	compiler		1566204	0					
ANR	1566455	Identifier	cpool_diff		1566204	1					
ANR	1566456	Identifier	CONST_POOL_EMPTY		1566204	1					
ANR	1566457	ExpressionStatement	compiler -> cpool_diff = compiler -> size	227:2:7426:7463	1566204	1	True				
ANR	1566458	AssignmentExpression	compiler -> cpool_diff = compiler -> size		1566204	0		=			
ANR	1566459	PtrMemberAccess	compiler -> cpool_diff		1566204	0					
ANR	1566460	Identifier	compiler		1566204	0					
ANR	1566461	Identifier	cpool_diff		1566204	1					
ANR	1566462	PtrMemberAccess	compiler -> size		1566204	1					
ANR	1566463	Identifier	compiler		1566204	0					
ANR	1566464	Identifier	size		1566204	1					
ANR	1566465	ReturnStatement	return SLJIT_SUCCESS ;	228:1:7466:7486	1566204	15	True				
ANR	1566466	Identifier	SLJIT_SUCCESS		1566204	0					
ANR	1566467	ReturnType	static sljit_si		1566204	1					
ANR	1566468	Identifier	push_inst_with_literal		1566204	2					
ANR	1566469	ParameterList	"struct sljit_compiler * compiler , sljit_uw inst , sljit_uw literal"		1566204	3					
ANR	1566470	Parameter	struct sljit_compiler * compiler	181:39:6111:6141	1566204	0	True				
ANR	1566471	ParameterType	struct sljit_compiler *		1566204	0					
ANR	1566472	Identifier	compiler		1566204	1					
ANR	1566473	Parameter	sljit_uw inst	181:72:6144:6156	1566204	1	True				
ANR	1566474	ParameterType	sljit_uw		1566204	0					
ANR	1566475	Identifier	inst		1566204	1					
ANR	1566476	Parameter	sljit_uw literal	181:87:6159:6174	1566204	2	True				
ANR	1566477	ParameterType	sljit_uw		1566204	0					
ANR	1566478	Identifier	literal		1566204	1					
ANR	1566479	CFGEntryNode	ENTRY		1566204		True				
ANR	1566480	CFGExitNode	EXIT		1566204		True				
ANR	1566481	Symbol	MAX_DIFFERENCE		1566204						
ANR	1566482	Symbol	push_cpool		1566204						
ANR	1566483	Symbol	* cpool_unique_ptr		1566204						
ANR	1566484	Symbol	cpool_unique_ptr		1566204						
ANR	1566485	Symbol	CONST_POOL_EMPTY		1566204						
ANR	1566486	Symbol	* compiler -> cpool_unique		1566204						
ANR	1566487	Symbol	cpool_index		1566204						
ANR	1566488	Symbol	* compiler		1566204						
ANR	1566489	Symbol	cpool_end		1566204						
ANR	1566490	Symbol	compiler -> cpool_diff		1566204						
ANR	1566491	Symbol	compiler -> cpool_fill		1566204						
ANR	1566492	Symbol	literal		1566204						
ANR	1566493	Symbol	* cpool_index		1566204						
ANR	1566494	Symbol	* * compiler		1566204						
ANR	1566495	Symbol	CPOOL_SIZE		1566204						
ANR	1566496	Symbol	* ptr		1566204						
ANR	1566497	Symbol	compiler -> cpool		1566204						
ANR	1566498	Symbol	compiler		1566204						
ANR	1566499	Symbol	* compiler -> cpool		1566204						
ANR	1566500	Symbol	SLJIT_SUCCESS		1566204						
ANR	1566501	Symbol	ptr		1566204						
ANR	1566502	Symbol	* cpool_ptr		1566204						
ANR	1566503	Symbol	compiler -> size		1566204						
ANR	1566504	Symbol	compiler -> cpool_unique		1566204						
ANR	1566505	Symbol	inst		1566204						
ANR	1566506	Symbol	ensure_buf		1566204						
ANR	1566507	Symbol	cpool_ptr		1566204						
ANR	1566508	Symbol	SLJIT_UNLIKELY		1566204						
ANR	1566509	Function	push_inst_with_unique_literal	231:0:7491:8264							
ANR	1566510	FunctionDef	"push_inst_with_unique_literal (struct sljit_compiler * compiler , sljit_uw inst , sljit_uw literal)"		1566509	0					
ANR	1566511	CompoundStatement		232:0:7603:8264	1566509	0					
ANR	1566512	IdentifierDeclStatement	sljit_uw * ptr ;	233:1:7606:7619	1566509	0	True				
ANR	1566513	IdentifierDecl	* ptr		1566509	0					
ANR	1566514	IdentifierDeclType	sljit_uw *		1566509	0					
ANR	1566515	Identifier	ptr		1566509	1					
ANR	1566516	IfStatement	if ( SLJIT_UNLIKELY ( ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) ) || compiler -> cpool_fill >= CPOOL_SIZE ) )		1566509	1					
ANR	1566517	Condition	SLJIT_UNLIKELY ( ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) ) || compiler -> cpool_fill >= CPOOL_SIZE )	234:5:7626:7786	1566509	0	True				
ANR	1566518	CallExpression	SLJIT_UNLIKELY ( ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) ) || compiler -> cpool_fill >= CPOOL_SIZE )		1566509	0					
ANR	1566519	Callee	SLJIT_UNLIKELY		1566509	0					
ANR	1566520	Identifier	SLJIT_UNLIKELY		1566509	0					
ANR	1566521	ArgumentList	( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) ) || compiler -> cpool_fill >= CPOOL_SIZE		1566509	1					
ANR	1566522	Argument	( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) ) || compiler -> cpool_fill >= CPOOL_SIZE		1566509	0					
ANR	1566523	OrExpression	( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 ) ) || compiler -> cpool_fill >= CPOOL_SIZE		1566509	0		||			
ANR	1566524	AndExpression	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566509	0		&&			
ANR	1566525	EqualityExpression	compiler -> cpool_diff != CONST_POOL_EMPTY		1566509	0		!=			
ANR	1566526	PtrMemberAccess	compiler -> cpool_diff		1566509	0					
ANR	1566527	Identifier	compiler		1566509	0					
ANR	1566528	Identifier	cpool_diff		1566509	1					
ANR	1566529	Identifier	CONST_POOL_EMPTY		1566509	1					
ANR	1566530	RelationalExpression	compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4092 )		1566509	1		>=			
ANR	1566531	AdditiveExpression	compiler -> size - compiler -> cpool_diff		1566509	0		-			
ANR	1566532	PtrMemberAccess	compiler -> size		1566509	0					
ANR	1566533	Identifier	compiler		1566509	0					
ANR	1566534	Identifier	size		1566509	1					
ANR	1566535	PtrMemberAccess	compiler -> cpool_diff		1566509	1					
ANR	1566536	Identifier	compiler		1566509	0					
ANR	1566537	Identifier	cpool_diff		1566509	1					
ANR	1566538	CallExpression	MAX_DIFFERENCE ( 4092 )		1566509	1					
ANR	1566539	Callee	MAX_DIFFERENCE		1566509	0					
ANR	1566540	Identifier	MAX_DIFFERENCE		1566509	0					
ANR	1566541	ArgumentList	4092		1566509	1					
ANR	1566542	Argument	4092		1566509	0					
ANR	1566543	PrimaryExpression	4092		1566509	0					
ANR	1566544	RelationalExpression	compiler -> cpool_fill >= CPOOL_SIZE		1566509	1		>=			
ANR	1566545	PtrMemberAccess	compiler -> cpool_fill		1566509	0					
ANR	1566546	Identifier	compiler		1566509	0					
ANR	1566547	Identifier	cpool_fill		1566509	1					
ANR	1566548	Identifier	CPOOL_SIZE		1566509	1					
ANR	1566549	ExpressionStatement	FAIL_IF ( push_cpool ( compiler ) )	235:2:7791:7820	1566509	1	True				
ANR	1566550	CallExpression	FAIL_IF ( push_cpool ( compiler ) )		1566509	0					
ANR	1566551	Callee	FAIL_IF		1566509	0					
ANR	1566552	Identifier	FAIL_IF		1566509	0					
ANR	1566553	ArgumentList	push_cpool ( compiler )		1566509	1					
ANR	1566554	Argument	push_cpool ( compiler )		1566509	0					
ANR	1566555	CallExpression	push_cpool ( compiler )		1566509	0					
ANR	1566556	Callee	push_cpool		1566509	0					
ANR	1566557	Identifier	push_cpool		1566509	0					
ANR	1566558	ArgumentList	compiler		1566509	1					
ANR	1566559	Argument	compiler		1566509	0					
ANR	1566560	Identifier	compiler		1566509	0					
ANR	1566561	ExpressionStatement	SLJIT_ASSERT ( compiler -> cpool_fill < CPOOL_SIZE && ( inst & 0xfff ) == 0 )	237:1:7824:7894	1566509	2	True				
ANR	1566562	CallExpression	SLJIT_ASSERT ( compiler -> cpool_fill < CPOOL_SIZE && ( inst & 0xfff ) == 0 )		1566509	0					
ANR	1566563	Callee	SLJIT_ASSERT		1566509	0					
ANR	1566564	Identifier	SLJIT_ASSERT		1566509	0					
ANR	1566565	ArgumentList	compiler -> cpool_fill < CPOOL_SIZE && ( inst & 0xfff ) == 0		1566509	1					
ANR	1566566	Argument	compiler -> cpool_fill < CPOOL_SIZE && ( inst & 0xfff ) == 0		1566509	0					
ANR	1566567	AndExpression	compiler -> cpool_fill < CPOOL_SIZE && ( inst & 0xfff ) == 0		1566509	0		&&			
ANR	1566568	RelationalExpression	compiler -> cpool_fill < CPOOL_SIZE		1566509	0		<			
ANR	1566569	PtrMemberAccess	compiler -> cpool_fill		1566509	0					
ANR	1566570	Identifier	compiler		1566509	0					
ANR	1566571	Identifier	cpool_fill		1566509	1					
ANR	1566572	Identifier	CPOOL_SIZE		1566509	1					
ANR	1566573	EqualityExpression	( inst & 0xfff ) == 0		1566509	1		==			
ANR	1566574	BitAndExpression	inst & 0xfff		1566509	0		&			
ANR	1566575	Identifier	inst		1566509	0					
ANR	1566576	PrimaryExpression	0xfff		1566509	1					
ANR	1566577	PrimaryExpression	0		1566509	1					
ANR	1566578	ExpressionStatement	"ptr = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"	238:1:7897:7952	1566509	3	True				
ANR	1566579	AssignmentExpression	"ptr = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1566509	0		=			
ANR	1566580	Identifier	ptr		1566509	0					
ANR	1566581	CastExpression	"( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1566509	1					
ANR	1566582	CastTarget	sljit_uw *		1566509	0					
ANR	1566583	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1566509	1					
ANR	1566584	Callee	ensure_buf		1566509	0					
ANR	1566585	Identifier	ensure_buf		1566509	0					
ANR	1566586	ArgumentList	compiler		1566509	1					
ANR	1566587	Argument	compiler		1566509	0					
ANR	1566588	Identifier	compiler		1566509	0					
ANR	1566589	Argument	sizeof ( sljit_uw )		1566509	1					
ANR	1566590	SizeofExpression	sizeof ( sljit_uw )		1566509	0					
ANR	1566591	Sizeof	sizeof		1566509	0					
ANR	1566592	SizeofOperand	sljit_uw		1566509	1					
ANR	1566593	ExpressionStatement	FAIL_IF ( ! ptr )	239:1:7955:7968	1566509	4	True				
ANR	1566594	CallExpression	FAIL_IF ( ! ptr )		1566509	0					
ANR	1566595	Callee	FAIL_IF		1566509	0					
ANR	1566596	Identifier	FAIL_IF		1566509	0					
ANR	1566597	ArgumentList	! ptr		1566509	1					
ANR	1566598	Argument	! ptr		1566509	0					
ANR	1566599	UnaryOperationExpression	! ptr		1566509	0					
ANR	1566600	UnaryOperator	!		1566509	0					
ANR	1566601	Identifier	ptr		1566509	1					
ANR	1566602	ExpressionStatement	compiler -> size ++	240:1:7971:7987	1566509	5	True				
ANR	1566603	PostIncDecOperationExpression	compiler -> size ++		1566509	0					
ANR	1566604	PtrMemberAccess	compiler -> size		1566509	0					
ANR	1566605	Identifier	compiler		1566509	0					
ANR	1566606	Identifier	size		1566509	1					
ANR	1566607	IncDec	++		1566509	1					
ANR	1566608	ExpressionStatement	* ptr = inst | compiler -> cpool_fill	241:1:7990:8024	1566509	6	True				
ANR	1566609	AssignmentExpression	* ptr = inst | compiler -> cpool_fill		1566509	0		=			
ANR	1566610	UnaryOperationExpression	* ptr		1566509	0					
ANR	1566611	UnaryOperator	*		1566509	0					
ANR	1566612	Identifier	ptr		1566509	1					
ANR	1566613	InclusiveOrExpression	inst | compiler -> cpool_fill		1566509	1		|			
ANR	1566614	Identifier	inst		1566509	0					
ANR	1566615	PtrMemberAccess	compiler -> cpool_fill		1566509	1					
ANR	1566616	Identifier	compiler		1566509	0					
ANR	1566617	Identifier	cpool_fill		1566509	1					
ANR	1566618	ExpressionStatement	compiler -> cpool [ compiler -> cpool_fill ] = literal	243:1:8028:8075	1566509	7	True				
ANR	1566619	AssignmentExpression	compiler -> cpool [ compiler -> cpool_fill ] = literal		1566509	0		=			
ANR	1566620	ArrayIndexing	compiler -> cpool [ compiler -> cpool_fill ]		1566509	0					
ANR	1566621	PtrMemberAccess	compiler -> cpool		1566509	0					
ANR	1566622	Identifier	compiler		1566509	0					
ANR	1566623	Identifier	cpool		1566509	1					
ANR	1566624	PtrMemberAccess	compiler -> cpool_fill		1566509	1					
ANR	1566625	Identifier	compiler		1566509	0					
ANR	1566626	Identifier	cpool_fill		1566509	1					
ANR	1566627	Identifier	literal		1566509	1					
ANR	1566628	ExpressionStatement	compiler -> cpool_unique [ compiler -> cpool_fill ] = 1	244:1:8078:8126	1566509	8	True				
ANR	1566629	AssignmentExpression	compiler -> cpool_unique [ compiler -> cpool_fill ] = 1		1566509	0		=			
ANR	1566630	ArrayIndexing	compiler -> cpool_unique [ compiler -> cpool_fill ]		1566509	0					
ANR	1566631	PtrMemberAccess	compiler -> cpool_unique		1566509	0					
ANR	1566632	Identifier	compiler		1566509	0					
ANR	1566633	Identifier	cpool_unique		1566509	1					
ANR	1566634	PtrMemberAccess	compiler -> cpool_fill		1566509	1					
ANR	1566635	Identifier	compiler		1566509	0					
ANR	1566636	Identifier	cpool_fill		1566509	1					
ANR	1566637	PrimaryExpression	1		1566509	1					
ANR	1566638	ExpressionStatement	compiler -> cpool_fill ++	245:1:8129:8151	1566509	9	True				
ANR	1566639	PostIncDecOperationExpression	compiler -> cpool_fill ++		1566509	0					
ANR	1566640	PtrMemberAccess	compiler -> cpool_fill		1566509	0					
ANR	1566641	Identifier	compiler		1566509	0					
ANR	1566642	Identifier	cpool_fill		1566509	1					
ANR	1566643	IncDec	++		1566509	1					
ANR	1566644	IfStatement	if ( compiler -> cpool_diff == CONST_POOL_EMPTY )		1566509	10					
ANR	1566645	Condition	compiler -> cpool_diff == CONST_POOL_EMPTY	246:5:8158:8197	1566509	0	True				
ANR	1566646	EqualityExpression	compiler -> cpool_diff == CONST_POOL_EMPTY		1566509	0		==			
ANR	1566647	PtrMemberAccess	compiler -> cpool_diff		1566509	0					
ANR	1566648	Identifier	compiler		1566509	0					
ANR	1566649	Identifier	cpool_diff		1566509	1					
ANR	1566650	Identifier	CONST_POOL_EMPTY		1566509	1					
ANR	1566651	ExpressionStatement	compiler -> cpool_diff = compiler -> size	247:2:8202:8239	1566509	1	True				
ANR	1566652	AssignmentExpression	compiler -> cpool_diff = compiler -> size		1566509	0		=			
ANR	1566653	PtrMemberAccess	compiler -> cpool_diff		1566509	0					
ANR	1566654	Identifier	compiler		1566509	0					
ANR	1566655	Identifier	cpool_diff		1566509	1					
ANR	1566656	PtrMemberAccess	compiler -> size		1566509	1					
ANR	1566657	Identifier	compiler		1566509	0					
ANR	1566658	Identifier	size		1566509	1					
ANR	1566659	ReturnStatement	return SLJIT_SUCCESS ;	248:1:8242:8262	1566509	11	True				
ANR	1566660	Identifier	SLJIT_SUCCESS		1566509	0					
ANR	1566661	ReturnType	static sljit_si		1566509	1					
ANR	1566662	Identifier	push_inst_with_unique_literal		1566509	2					
ANR	1566663	ParameterList	"struct sljit_compiler * compiler , sljit_uw inst , sljit_uw literal"		1566509	3					
ANR	1566664	Parameter	struct sljit_compiler * compiler	231:46:7537:7567	1566509	0	True				
ANR	1566665	ParameterType	struct sljit_compiler *		1566509	0					
ANR	1566666	Identifier	compiler		1566509	1					
ANR	1566667	Parameter	sljit_uw inst	231:79:7570:7582	1566509	1	True				
ANR	1566668	ParameterType	sljit_uw		1566509	0					
ANR	1566669	Identifier	inst		1566509	1					
ANR	1566670	Parameter	sljit_uw literal	231:94:7585:7600	1566509	2	True				
ANR	1566671	ParameterType	sljit_uw		1566509	0					
ANR	1566672	Identifier	literal		1566509	1					
ANR	1566673	CFGEntryNode	ENTRY		1566509		True				
ANR	1566674	CFGExitNode	EXIT		1566509		True				
ANR	1566675	Symbol	MAX_DIFFERENCE		1566509						
ANR	1566676	Symbol	* compiler -> cpool		1566509						
ANR	1566677	Symbol	push_cpool		1566509						
ANR	1566678	Symbol	CONST_POOL_EMPTY		1566509						
ANR	1566679	Symbol	* compiler -> cpool_unique		1566509						
ANR	1566680	Symbol	SLJIT_SUCCESS		1566509						
ANR	1566681	Symbol	* compiler		1566509						
ANR	1566682	Symbol	compiler -> cpool_diff		1566509						
ANR	1566683	Symbol	compiler -> cpool_fill		1566509						
ANR	1566684	Symbol	literal		1566509						
ANR	1566685	Symbol	ptr		1566509						
ANR	1566686	Symbol	* * compiler		1566509						
ANR	1566687	Symbol	compiler -> size		1566509						
ANR	1566688	Symbol	compiler -> cpool_unique		1566509						
ANR	1566689	Symbol	* compiler -> cpool_fill		1566509						
ANR	1566690	Symbol	inst		1566509						
ANR	1566691	Symbol	CPOOL_SIZE		1566509						
ANR	1566692	Symbol	ensure_buf		1566509						
ANR	1566693	Symbol	* ptr		1566509						
ANR	1566694	Symbol	compiler -> cpool		1566509						
ANR	1566695	Symbol	compiler		1566509						
ANR	1566696	Symbol	SLJIT_UNLIKELY		1566509						
ANR	1566697	Function	prepare_blx	251:0:8267:8617							
ANR	1566698	FunctionDef	prepare_blx (struct sljit_compiler * compiler)		1566697	0					
ANR	1566699	CompoundStatement		252:0:8341:8617	1566697	0					
ANR	1566700	IfStatement	if ( SLJIT_UNLIKELY ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4088 ) ) )		1566697	0					
ANR	1566701	Condition	SLJIT_UNLIKELY ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4088 ) )	254:5:8440:8560	1566697	0	True				
ANR	1566702	CallExpression	SLJIT_UNLIKELY ( compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4088 ) )		1566697	0					
ANR	1566703	Callee	SLJIT_UNLIKELY		1566697	0					
ANR	1566704	Identifier	SLJIT_UNLIKELY		1566697	0					
ANR	1566705	ArgumentList	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4088 )		1566697	1					
ANR	1566706	Argument	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4088 )		1566697	0					
ANR	1566707	AndExpression	compiler -> cpool_diff != CONST_POOL_EMPTY && compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4088 )		1566697	0		&&			
ANR	1566708	EqualityExpression	compiler -> cpool_diff != CONST_POOL_EMPTY		1566697	0		!=			
ANR	1566709	PtrMemberAccess	compiler -> cpool_diff		1566697	0					
ANR	1566710	Identifier	compiler		1566697	0					
ANR	1566711	Identifier	cpool_diff		1566697	1					
ANR	1566712	Identifier	CONST_POOL_EMPTY		1566697	1					
ANR	1566713	RelationalExpression	compiler -> size - compiler -> cpool_diff >= MAX_DIFFERENCE ( 4088 )		1566697	1		>=			
ANR	1566714	AdditiveExpression	compiler -> size - compiler -> cpool_diff		1566697	0		-			
ANR	1566715	PtrMemberAccess	compiler -> size		1566697	0					
ANR	1566716	Identifier	compiler		1566697	0					
ANR	1566717	Identifier	size		1566697	1					
ANR	1566718	PtrMemberAccess	compiler -> cpool_diff		1566697	1					
ANR	1566719	Identifier	compiler		1566697	0					
ANR	1566720	Identifier	cpool_diff		1566697	1					
ANR	1566721	CallExpression	MAX_DIFFERENCE ( 4088 )		1566697	1					
ANR	1566722	Callee	MAX_DIFFERENCE		1566697	0					
ANR	1566723	Identifier	MAX_DIFFERENCE		1566697	0					
ANR	1566724	ArgumentList	4088		1566697	1					
ANR	1566725	Argument	4088		1566697	0					
ANR	1566726	PrimaryExpression	4088		1566697	0					
ANR	1566727	ReturnStatement	return push_cpool ( compiler ) ;	255:2:8565:8592	1566697	1	True				
ANR	1566728	CallExpression	push_cpool ( compiler )		1566697	0					
ANR	1566729	Callee	push_cpool		1566697	0					
ANR	1566730	Identifier	push_cpool		1566697	0					
ANR	1566731	ArgumentList	compiler		1566697	1					
ANR	1566732	Argument	compiler		1566697	0					
ANR	1566733	Identifier	compiler		1566697	0					
ANR	1566734	ReturnStatement	return SLJIT_SUCCESS ;	256:1:8595:8615	1566697	1	True				
ANR	1566735	Identifier	SLJIT_SUCCESS		1566697	0					
ANR	1566736	ReturnType	static SLJIT_INLINE sljit_si		1566697	1					
ANR	1566737	Identifier	prepare_blx		1566697	2					
ANR	1566738	ParameterList	struct sljit_compiler * compiler		1566697	3					
ANR	1566739	Parameter	struct sljit_compiler * compiler	251:41:8308:8338	1566697	0	True				
ANR	1566740	ParameterType	struct sljit_compiler *		1566697	0					
ANR	1566741	Identifier	compiler		1566697	1					
ANR	1566742	CFGEntryNode	ENTRY		1566697		True				
ANR	1566743	CFGExitNode	EXIT		1566697		True				
ANR	1566744	Symbol	MAX_DIFFERENCE		1566697						
ANR	1566745	Symbol	push_cpool		1566697						
ANR	1566746	Symbol	compiler -> size		1566697						
ANR	1566747	Symbol	CONST_POOL_EMPTY		1566697						
ANR	1566748	Symbol	SLJIT_SUCCESS		1566697						
ANR	1566749	Symbol	* compiler		1566697						
ANR	1566750	Symbol	compiler		1566697						
ANR	1566751	Symbol	compiler -> cpool_diff		1566697						
ANR	1566752	Symbol	SLJIT_UNLIKELY		1566697						
ANR	1566753	Function	emit_blx	259:0:8620:8961							
ANR	1566754	FunctionDef	emit_blx (struct sljit_compiler * compiler)		1566753	0					
ANR	1566755	CompoundStatement		260:0:8691:8961	1566753	0					
ANR	1566756	ExpressionStatement	SLJIT_ASSERT ( compiler -> cpool_diff == CONST_POOL_EMPTY || compiler -> size - compiler -> cpool_diff < MAX_DIFFERENCE ( 4092 ) )	262:1:8792:8910	1566753	0	True				
ANR	1566757	CallExpression	SLJIT_ASSERT ( compiler -> cpool_diff == CONST_POOL_EMPTY || compiler -> size - compiler -> cpool_diff < MAX_DIFFERENCE ( 4092 ) )		1566753	0					
ANR	1566758	Callee	SLJIT_ASSERT		1566753	0					
ANR	1566759	Identifier	SLJIT_ASSERT		1566753	0					
ANR	1566760	ArgumentList	compiler -> cpool_diff == CONST_POOL_EMPTY || compiler -> size - compiler -> cpool_diff < MAX_DIFFERENCE ( 4092 )		1566753	1					
ANR	1566761	Argument	compiler -> cpool_diff == CONST_POOL_EMPTY || compiler -> size - compiler -> cpool_diff < MAX_DIFFERENCE ( 4092 )		1566753	0					
ANR	1566762	OrExpression	compiler -> cpool_diff == CONST_POOL_EMPTY || compiler -> size - compiler -> cpool_diff < MAX_DIFFERENCE ( 4092 )		1566753	0		||			
ANR	1566763	EqualityExpression	compiler -> cpool_diff == CONST_POOL_EMPTY		1566753	0		==			
ANR	1566764	PtrMemberAccess	compiler -> cpool_diff		1566753	0					
ANR	1566765	Identifier	compiler		1566753	0					
ANR	1566766	Identifier	cpool_diff		1566753	1					
ANR	1566767	Identifier	CONST_POOL_EMPTY		1566753	1					
ANR	1566768	RelationalExpression	compiler -> size - compiler -> cpool_diff < MAX_DIFFERENCE ( 4092 )		1566753	1		<			
ANR	1566769	AdditiveExpression	compiler -> size - compiler -> cpool_diff		1566753	0		-			
ANR	1566770	PtrMemberAccess	compiler -> size		1566753	0					
ANR	1566771	Identifier	compiler		1566753	0					
ANR	1566772	Identifier	size		1566753	1					
ANR	1566773	PtrMemberAccess	compiler -> cpool_diff		1566753	1					
ANR	1566774	Identifier	compiler		1566753	0					
ANR	1566775	Identifier	cpool_diff		1566753	1					
ANR	1566776	CallExpression	MAX_DIFFERENCE ( 4092 )		1566753	1					
ANR	1566777	Callee	MAX_DIFFERENCE		1566753	0					
ANR	1566778	Identifier	MAX_DIFFERENCE		1566753	0					
ANR	1566779	ArgumentList	4092		1566753	1					
ANR	1566780	Argument	4092		1566753	0					
ANR	1566781	PrimaryExpression	4092		1566753	0					
ANR	1566782	ReturnStatement	"return push_inst ( compiler , BLX | RM ( TMP_REG1 ) ) ;"	263:1:8913:8959	1566753	1	True				
ANR	1566783	CallExpression	"push_inst ( compiler , BLX | RM ( TMP_REG1 ) )"		1566753	0					
ANR	1566784	Callee	push_inst		1566753	0					
ANR	1566785	Identifier	push_inst		1566753	0					
ANR	1566786	ArgumentList	compiler		1566753	1					
ANR	1566787	Argument	compiler		1566753	0					
ANR	1566788	Identifier	compiler		1566753	0					
ANR	1566789	Argument	BLX | RM ( TMP_REG1 )		1566753	1					
ANR	1566790	InclusiveOrExpression	BLX | RM ( TMP_REG1 )		1566753	0		|			
ANR	1566791	Identifier	BLX		1566753	0					
ANR	1566792	CallExpression	RM ( TMP_REG1 )		1566753	1					
ANR	1566793	Callee	RM		1566753	0					
ANR	1566794	Identifier	RM		1566753	0					
ANR	1566795	ArgumentList	TMP_REG1		1566753	1					
ANR	1566796	Argument	TMP_REG1		1566753	0					
ANR	1566797	Identifier	TMP_REG1		1566753	0					
ANR	1566798	ReturnType	static SLJIT_INLINE sljit_si		1566753	1					
ANR	1566799	Identifier	emit_blx		1566753	2					
ANR	1566800	ParameterList	struct sljit_compiler * compiler		1566753	3					
ANR	1566801	Parameter	struct sljit_compiler * compiler	259:38:8658:8688	1566753	0	True				
ANR	1566802	ParameterType	struct sljit_compiler *		1566753	0					
ANR	1566803	Identifier	compiler		1566753	1					
ANR	1566804	CFGEntryNode	ENTRY		1566753		True				
ANR	1566805	CFGExitNode	EXIT		1566753		True				
ANR	1566806	Symbol	MAX_DIFFERENCE		1566753						
ANR	1566807	Symbol	push_inst		1566753						
ANR	1566808	Symbol	TMP_REG1		1566753						
ANR	1566809	Symbol	compiler -> size		1566753						
ANR	1566810	Symbol	CONST_POOL_EMPTY		1566753						
ANR	1566811	Symbol	* compiler		1566753						
ANR	1566812	Symbol	RM		1566753						
ANR	1566813	Symbol	compiler		1566753						
ANR	1566814	Symbol	compiler -> cpool_diff		1566753						
ANR	1566815	Symbol	BLX		1566753						
ANR	1566816	Function	patch_pc_relative_loads	266:0:8964:10442							
ANR	1566817	FunctionDef	"patch_pc_relative_loads (sljit_uw * last_pc_patch , sljit_uw * code_ptr , sljit_uw * const_pool , sljit_uw cpool_size)"		1566816	0					
ANR	1566818	CompoundStatement		267:0:9092:10442	1566816	0					
ANR	1566819	IdentifierDeclStatement	sljit_uw diff ;	268:1:9095:9108	1566816	0	True				
ANR	1566820	IdentifierDecl	diff		1566816	0					
ANR	1566821	IdentifierDeclType	sljit_uw		1566816	0					
ANR	1566822	Identifier	diff		1566816	1					
ANR	1566823	IdentifierDeclStatement	sljit_uw ind ;	269:1:9111:9123	1566816	1	True				
ANR	1566824	IdentifierDecl	ind		1566816	0					
ANR	1566825	IdentifierDeclType	sljit_uw		1566816	0					
ANR	1566826	Identifier	ind		1566816	1					
ANR	1566827	IdentifierDeclStatement	sljit_uw counter = 0 ;	270:1:9126:9146	1566816	2	True				
ANR	1566828	IdentifierDecl	counter = 0		1566816	0					
ANR	1566829	IdentifierDeclType	sljit_uw		1566816	0					
ANR	1566830	Identifier	counter		1566816	1					
ANR	1566831	AssignmentExpression	counter = 0		1566816	2		=			
ANR	1566832	Identifier	counter		1566816	0					
ANR	1566833	PrimaryExpression	0		1566816	1					
ANR	1566834	IdentifierDeclStatement	sljit_uw * clear_const_pool = const_pool ;	271:1:9149:9188	1566816	3	True				
ANR	1566835	IdentifierDecl	* clear_const_pool = const_pool		1566816	0					
ANR	1566836	IdentifierDeclType	sljit_uw *		1566816	0					
ANR	1566837	Identifier	clear_const_pool		1566816	1					
ANR	1566838	AssignmentExpression	* clear_const_pool = const_pool		1566816	2		=			
ANR	1566839	Identifier	const_pool		1566816	0					
ANR	1566840	Identifier	const_pool		1566816	1					
ANR	1566841	IdentifierDeclStatement	sljit_uw * clear_const_pool_end = const_pool + cpool_size ;	272:1:9191:9247	1566816	4	True				
ANR	1566842	IdentifierDecl	* clear_const_pool_end = const_pool + cpool_size		1566816	0					
ANR	1566843	IdentifierDeclType	sljit_uw *		1566816	0					
ANR	1566844	Identifier	clear_const_pool_end		1566816	1					
ANR	1566845	AssignmentExpression	* clear_const_pool_end = const_pool + cpool_size		1566816	2		=			
ANR	1566846	Identifier	clear_const_pool_end		1566816	0					
ANR	1566847	AdditiveExpression	const_pool + cpool_size		1566816	1		+			
ANR	1566848	Identifier	const_pool		1566816	0					
ANR	1566849	Identifier	cpool_size		1566816	1					
ANR	1566850	ExpressionStatement	SLJIT_ASSERT ( const_pool - code_ptr <= CONST_POOL_ALIGNMENT )	274:1:9251:9310	1566816	5	True				
ANR	1566851	CallExpression	SLJIT_ASSERT ( const_pool - code_ptr <= CONST_POOL_ALIGNMENT )		1566816	0					
ANR	1566852	Callee	SLJIT_ASSERT		1566816	0					
ANR	1566853	Identifier	SLJIT_ASSERT		1566816	0					
ANR	1566854	ArgumentList	const_pool - code_ptr <= CONST_POOL_ALIGNMENT		1566816	1					
ANR	1566855	Argument	const_pool - code_ptr <= CONST_POOL_ALIGNMENT		1566816	0					
ANR	1566856	RelationalExpression	const_pool - code_ptr <= CONST_POOL_ALIGNMENT		1566816	0		<=			
ANR	1566857	AdditiveExpression	const_pool - code_ptr		1566816	0		-			
ANR	1566858	Identifier	const_pool		1566816	0					
ANR	1566859	Identifier	code_ptr		1566816	1					
ANR	1566860	Identifier	CONST_POOL_ALIGNMENT		1566816	1					
ANR	1566861	WhileStatement	while ( clear_const_pool < clear_const_pool_end )		1566816	6					
ANR	1566862	Condition	clear_const_pool < clear_const_pool_end	278:8:9535:9573	1566816	0	True				
ANR	1566863	RelationalExpression	clear_const_pool < clear_const_pool_end		1566816	0		<			
ANR	1566864	Identifier	clear_const_pool		1566816	0					
ANR	1566865	Identifier	clear_const_pool_end		1566816	1					
ANR	1566866	ExpressionStatement	* clear_const_pool ++ = ( sljit_uw ) ( - 1 )	279:2:9578:9614	1566816	1	True				
ANR	1566867	AssignmentExpression	* clear_const_pool ++ = ( sljit_uw ) ( - 1 )		1566816	0		=			
ANR	1566868	UnaryOperationExpression	* clear_const_pool ++		1566816	0					
ANR	1566869	UnaryOperator	*		1566816	0					
ANR	1566870	PostIncDecOperationExpression	clear_const_pool ++		1566816	1					
ANR	1566871	Identifier	clear_const_pool		1566816	0					
ANR	1566872	IncDec	++		1566816	1					
ANR	1566873	CastExpression	( sljit_uw ) ( - 1 )		1566816	1					
ANR	1566874	CastTarget	sljit_uw		1566816	0					
ANR	1566875	UnaryOperationExpression	- 1		1566816	1					
ANR	1566876	UnaryOperator	-		1566816	0					
ANR	1566877	PrimaryExpression	1		1566816	1					
ANR	1566878	WhileStatement	while ( last_pc_patch < code_ptr )		1566816	7					
ANR	1566879	Condition	last_pc_patch < code_ptr	281:8:9625:9648	1566816	0	True				
ANR	1566880	RelationalExpression	last_pc_patch < code_ptr		1566816	0		<			
ANR	1566881	Identifier	last_pc_patch		1566816	0					
ANR	1566882	Identifier	code_ptr		1566816	1					
ANR	1566883	CompoundStatement		15:34:558:558	1566816	1					
ANR	1566884	IfStatement	if ( ( * last_pc_patch & 0x0c0f0000 ) == 0x040f0000 )		1566816	0					
ANR	1566885	Condition	( * last_pc_patch & 0x0c0f0000 ) == 0x040f0000	283:6:9709:9751	1566816	0	True				
ANR	1566886	EqualityExpression	( * last_pc_patch & 0x0c0f0000 ) == 0x040f0000		1566816	0		==			
ANR	1566887	BitAndExpression	* last_pc_patch & 0x0c0f0000		1566816	0		&			
ANR	1566888	UnaryOperationExpression	* last_pc_patch		1566816	0					
ANR	1566889	UnaryOperator	*		1566816	0					
ANR	1566890	Identifier	last_pc_patch		1566816	1					
ANR	1566891	PrimaryExpression	0x0c0f0000		1566816	1					
ANR	1566892	PrimaryExpression	0x040f0000		1566816	1					
ANR	1566893	CompoundStatement		17:51:661:661	1566816	1					
ANR	1566894	ExpressionStatement	diff = const_pool - last_pc_patch	284:3:9759:9792	1566816	0	True				
ANR	1566895	AssignmentExpression	diff = const_pool - last_pc_patch		1566816	0		=			
ANR	1566896	Identifier	diff		1566816	0					
ANR	1566897	AdditiveExpression	const_pool - last_pc_patch		1566816	1		-			
ANR	1566898	Identifier	const_pool		1566816	0					
ANR	1566899	Identifier	last_pc_patch		1566816	1					
ANR	1566900	ExpressionStatement	ind = ( * last_pc_patch ) & 0xfff	285:3:9797:9827	1566816	1	True				
ANR	1566901	AssignmentExpression	ind = ( * last_pc_patch ) & 0xfff		1566816	0		=			
ANR	1566902	Identifier	ind		1566816	0					
ANR	1566903	BitAndExpression	( * last_pc_patch ) & 0xfff		1566816	1		&			
ANR	1566904	UnaryOperationExpression	* last_pc_patch		1566816	0					
ANR	1566905	UnaryOperator	*		1566816	0					
ANR	1566906	Identifier	last_pc_patch		1566816	1					
ANR	1566907	PrimaryExpression	0xfff		1566816	1					
ANR	1566908	ExpressionStatement	SLJIT_ASSERT ( ind < cpool_size && ! ( * last_pc_patch & ( 1 << 25 ) ) && ( * last_pc_patch & ( 1 << 20 ) ) )	288:3:9892:9987	1566816	2	True				
ANR	1566909	CallExpression	SLJIT_ASSERT ( ind < cpool_size && ! ( * last_pc_patch & ( 1 << 25 ) ) && ( * last_pc_patch & ( 1 << 20 ) ) )		1566816	0					
ANR	1566910	Callee	SLJIT_ASSERT		1566816	0					
ANR	1566911	Identifier	SLJIT_ASSERT		1566816	0					
ANR	1566912	ArgumentList	ind < cpool_size && ! ( * last_pc_patch & ( 1 << 25 ) ) && ( * last_pc_patch & ( 1 << 20 ) )		1566816	1					
ANR	1566913	Argument	ind < cpool_size && ! ( * last_pc_patch & ( 1 << 25 ) ) && ( * last_pc_patch & ( 1 << 20 ) )		1566816	0					
ANR	1566914	AndExpression	ind < cpool_size && ! ( * last_pc_patch & ( 1 << 25 ) ) && ( * last_pc_patch & ( 1 << 20 ) )		1566816	0		&&			
ANR	1566915	RelationalExpression	ind < cpool_size		1566816	0		<			
ANR	1566916	Identifier	ind		1566816	0					
ANR	1566917	Identifier	cpool_size		1566816	1					
ANR	1566918	AndExpression	! ( * last_pc_patch & ( 1 << 25 ) ) && ( * last_pc_patch & ( 1 << 20 ) )		1566816	1		&&			
ANR	1566919	UnaryOperationExpression	! ( * last_pc_patch & ( 1 << 25 ) )		1566816	0					
ANR	1566920	UnaryOperator	!		1566816	0					
ANR	1566921	BitAndExpression	* last_pc_patch & ( 1 << 25 )		1566816	1		&			
ANR	1566922	UnaryOperationExpression	* last_pc_patch		1566816	0					
ANR	1566923	UnaryOperator	*		1566816	0					
ANR	1566924	Identifier	last_pc_patch		1566816	1					
ANR	1566925	ShiftExpression	1 << 25		1566816	1		<<			
ANR	1566926	PrimaryExpression	1		1566816	0					
ANR	1566927	PrimaryExpression	25		1566816	1					
ANR	1566928	BitAndExpression	* last_pc_patch & ( 1 << 20 )		1566816	1		&			
ANR	1566929	UnaryOperationExpression	* last_pc_patch		1566816	0					
ANR	1566930	UnaryOperator	*		1566816	0					
ANR	1566931	Identifier	last_pc_patch		1566816	1					
ANR	1566932	ShiftExpression	1 << 20		1566816	1		<<			
ANR	1566933	PrimaryExpression	1		1566816	0					
ANR	1566934	PrimaryExpression	20		1566816	1					
ANR	1566935	IfStatement	if ( ( sljit_si ) const_pool [ ind ] < 0 )		1566816	3					
ANR	1566936	Condition	( sljit_si ) const_pool [ ind ] < 0	289:7:9996:10024	1566816	0	True				
ANR	1566937	RelationalExpression	( sljit_si ) const_pool [ ind ] < 0		1566816	0		<			
ANR	1566938	CastExpression	( sljit_si ) const_pool [ ind ]		1566816	0					
ANR	1566939	CastTarget	sljit_si		1566816	0					
ANR	1566940	ArrayIndexing	const_pool [ ind ]		1566816	1					
ANR	1566941	Identifier	const_pool		1566816	0					
ANR	1566942	Identifier	ind		1566816	1					
ANR	1566943	PrimaryExpression	0		1566816	1					
ANR	1566944	CompoundStatement		23:38:934:934	1566816	1					
ANR	1566945	ExpressionStatement	const_pool [ ind ] = counter	290:4:10033:10058	1566816	0	True				
ANR	1566946	AssignmentExpression	const_pool [ ind ] = counter		1566816	0		=			
ANR	1566947	ArrayIndexing	const_pool [ ind ]		1566816	0					
ANR	1566948	Identifier	const_pool		1566816	0					
ANR	1566949	Identifier	ind		1566816	1					
ANR	1566950	Identifier	counter		1566816	1					
ANR	1566951	ExpressionStatement	ind = counter	291:4:10064:10077	1566816	1	True				
ANR	1566952	AssignmentExpression	ind = counter		1566816	0		=			
ANR	1566953	Identifier	ind		1566816	0					
ANR	1566954	Identifier	counter		1566816	1					
ANR	1566955	ExpressionStatement	counter ++	292:4:10083:10092	1566816	2	True				
ANR	1566956	PostIncDecOperationExpression	counter ++		1566816	0					
ANR	1566957	Identifier	counter		1566816	0					
ANR	1566958	IncDec	++		1566816	1					
ANR	1566959	ElseStatement	else		1566816	0					
ANR	1566960	ExpressionStatement	ind = const_pool [ ind ]	295:4:10111:10132	1566816	0	True				
ANR	1566961	AssignmentExpression	ind = const_pool [ ind ]		1566816	0		=			
ANR	1566962	Identifier	ind		1566816	0					
ANR	1566963	ArrayIndexing	const_pool [ ind ]		1566816	1					
ANR	1566964	Identifier	const_pool		1566816	0					
ANR	1566965	Identifier	ind		1566816	1					
ANR	1566966	ExpressionStatement	SLJIT_ASSERT ( diff >= 1 )	297:3:10138:10161	1566816	4	True				
ANR	1566967	CallExpression	SLJIT_ASSERT ( diff >= 1 )		1566816	0					
ANR	1566968	Callee	SLJIT_ASSERT		1566816	0					
ANR	1566969	Identifier	SLJIT_ASSERT		1566816	0					
ANR	1566970	ArgumentList	diff >= 1		1566816	1					
ANR	1566971	Argument	diff >= 1		1566816	0					
ANR	1566972	RelationalExpression	diff >= 1		1566816	0		>=			
ANR	1566973	Identifier	diff		1566816	0					
ANR	1566974	PrimaryExpression	1		1566816	1					
ANR	1566975	IfStatement	if ( diff >= 2 || ind > 0 )		1566816	5					
ANR	1566976	Condition	diff >= 2 || ind > 0	298:7:10170:10189	1566816	0	True				
ANR	1566977	OrExpression	diff >= 2 || ind > 0		1566816	0		||			
ANR	1566978	RelationalExpression	diff >= 2		1566816	0		>=			
ANR	1566979	Identifier	diff		1566816	0					
ANR	1566980	PrimaryExpression	2		1566816	1					
ANR	1566981	RelationalExpression	ind > 0		1566816	1		>			
ANR	1566982	Identifier	ind		1566816	0					
ANR	1566983	PrimaryExpression	0		1566816	1					
ANR	1566984	CompoundStatement		32:29:1099:1099	1566816	1					
ANR	1566985	ExpressionStatement	diff = ( diff + ind - 2 ) << 2	299:4:10198:10226	1566816	0	True				
ANR	1566986	AssignmentExpression	diff = ( diff + ind - 2 ) << 2		1566816	0		=			
ANR	1566987	Identifier	diff		1566816	0					
ANR	1566988	ShiftExpression	( diff + ind - 2 ) << 2		1566816	1		<<			
ANR	1566989	AdditiveExpression	diff + ind - 2		1566816	0		+			
ANR	1566990	Identifier	diff		1566816	0					
ANR	1566991	AdditiveExpression	ind - 2		1566816	1		-			
ANR	1566992	Identifier	ind		1566816	0					
ANR	1566993	PrimaryExpression	2		1566816	1					
ANR	1566994	PrimaryExpression	2		1566816	1					
ANR	1566995	ExpressionStatement	SLJIT_ASSERT ( diff <= 0xfff )	300:4:10232:10259	1566816	1	True				
ANR	1566996	CallExpression	SLJIT_ASSERT ( diff <= 0xfff )		1566816	0					
ANR	1566997	Callee	SLJIT_ASSERT		1566816	0					
ANR	1566998	Identifier	SLJIT_ASSERT		1566816	0					
ANR	1566999	ArgumentList	diff <= 0xfff		1566816	1					
ANR	1567000	Argument	diff <= 0xfff		1566816	0					
ANR	1567001	RelationalExpression	diff <= 0xfff		1566816	0		<=			
ANR	1567002	Identifier	diff		1566816	0					
ANR	1567003	PrimaryExpression	0xfff		1566816	1					
ANR	1567004	ExpressionStatement	* last_pc_patch = ( * last_pc_patch & ~0xfff ) | diff	301:4:10265:10314	1566816	2	True				
ANR	1567005	AssignmentExpression	* last_pc_patch = ( * last_pc_patch & ~0xfff ) | diff		1566816	0		=			
ANR	1567006	UnaryOperationExpression	* last_pc_patch		1566816	0					
ANR	1567007	UnaryOperator	*		1566816	0					
ANR	1567008	Identifier	last_pc_patch		1566816	1					
ANR	1567009	InclusiveOrExpression	( * last_pc_patch & ~0xfff ) | diff		1566816	1		|			
ANR	1567010	BitAndExpression	* last_pc_patch & ~0xfff		1566816	0		&			
ANR	1567011	UnaryOperationExpression	* last_pc_patch		1566816	0					
ANR	1567012	UnaryOperator	*		1566816	0					
ANR	1567013	Identifier	last_pc_patch		1566816	1					
ANR	1567014	Identifier	~0xfff		1566816	1					
ANR	1567015	Identifier	diff		1566816	1					
ANR	1567016	ElseStatement	else		1566816	0					
ANR	1567017	ExpressionStatement	* last_pc_patch = ( * last_pc_patch & ~ ( 0xfff | ( 1 << 23 ) ) ) | 0x004	304:4:10333:10397	1566816	0	True				
ANR	1567018	AssignmentExpression	* last_pc_patch = ( * last_pc_patch & ~ ( 0xfff | ( 1 << 23 ) ) ) | 0x004		1566816	0		=			
ANR	1567019	UnaryOperationExpression	* last_pc_patch		1566816	0					
ANR	1567020	UnaryOperator	*		1566816	0					
ANR	1567021	Identifier	last_pc_patch		1566816	1					
ANR	1567022	InclusiveOrExpression	( * last_pc_patch & ~ ( 0xfff | ( 1 << 23 ) ) ) | 0x004		1566816	1		|			
ANR	1567023	BitAndExpression	* last_pc_patch & ~ ( 0xfff | ( 1 << 23 ) )		1566816	0		&			
ANR	1567024	UnaryOperationExpression	* last_pc_patch		1566816	0					
ANR	1567025	UnaryOperator	*		1566816	0					
ANR	1567026	Identifier	last_pc_patch		1566816	1					
ANR	1567027	UnaryOperationExpression	~ ( 0xfff | ( 1 << 23 ) )		1566816	1					
ANR	1567028	UnaryOperator	~		1566816	0					
ANR	1567029	InclusiveOrExpression	0xfff | ( 1 << 23 )		1566816	1		|			
ANR	1567030	PrimaryExpression	0xfff		1566816	0					
ANR	1567031	ShiftExpression	1 << 23		1566816	1		<<			
ANR	1567032	PrimaryExpression	1		1566816	0					
ANR	1567033	PrimaryExpression	23		1566816	1					
ANR	1567034	PrimaryExpression	0x004		1566816	1					
ANR	1567035	ExpressionStatement	last_pc_patch ++	306:2:10405:10420	1566816	1	True				
ANR	1567036	PostIncDecOperationExpression	last_pc_patch ++		1566816	0					
ANR	1567037	Identifier	last_pc_patch		1566816	0					
ANR	1567038	IncDec	++		1566816	1					
ANR	1567039	ReturnStatement	return counter ;	308:1:10426:10440	1566816	8	True				
ANR	1567040	Identifier	counter		1566816	0					
ANR	1567041	ReturnType	static sljit_uw		1566816	1					
ANR	1567042	Identifier	patch_pc_relative_loads		1566816	2					
ANR	1567043	ParameterList	"sljit_uw * last_pc_patch , sljit_uw * code_ptr , sljit_uw * const_pool , sljit_uw cpool_size"		1566816	3					
ANR	1567044	Parameter	sljit_uw * last_pc_patch	266:40:9004:9026	1566816	0	True				
ANR	1567045	ParameterType	sljit_uw *		1566816	0					
ANR	1567046	Identifier	last_pc_patch		1566816	1					
ANR	1567047	Parameter	sljit_uw * code_ptr	266:65:9029:9046	1566816	1	True				
ANR	1567048	ParameterType	sljit_uw *		1566816	0					
ANR	1567049	Identifier	code_ptr		1566816	1					
ANR	1567050	Parameter	sljit_uw * const_pool	266:85:9049:9068	1566816	2	True				
ANR	1567051	ParameterType	sljit_uw *		1566816	0					
ANR	1567052	Identifier	const_pool		1566816	1					
ANR	1567053	Parameter	sljit_uw cpool_size	266:107:9071:9089	1566816	3	True				
ANR	1567054	ParameterType	sljit_uw		1566816	0					
ANR	1567055	Identifier	cpool_size		1566816	1					
ANR	1567056	CFGEntryNode	ENTRY		1566816		True				
ANR	1567057	CFGExitNode	EXIT		1566816		True				
ANR	1567058	Symbol	last_pc_patch		1566816						
ANR	1567059	Symbol	* clear_const_pool ++		1566816						
ANR	1567060	Symbol	cpool_size		1566816						
ANR	1567061	Symbol	diff		1566816						
ANR	1567062	Symbol	counter		1566816						
ANR	1567063	Symbol	clear_const_pool_end		1566816						
ANR	1567064	Symbol	CONST_POOL_ALIGNMENT		1566816						
ANR	1567065	Symbol	clear_const_pool		1566816						
ANR	1567066	Symbol	* const_pool		1566816						
ANR	1567067	Symbol	code_ptr		1566816						
ANR	1567068	Symbol	* ind		1566816						
ANR	1567069	Symbol	* last_pc_patch		1566816						
ANR	1567070	Symbol	const_pool		1566816						
ANR	1567071	Symbol	ind		1566816						
ANR	1567072	Symbol	~0xfff		1566816						
ANR	1567073	ClassDef	future_patch	312:0:10544:10628							
ANR	1567074	DeclStmt									
ANR	1567075	Decl							struct future_patch	struct future_patch *	next
ANR	1567076	DeclStmt									
ANR	1567077	Decl							sljit_si	sljit_si	index
ANR	1567078	DeclStmt									
ANR	1567079	Decl							sljit_si	sljit_si	value
ANR	1567080	Function	resolve_const_pool_index	318:0:10632:12189							
ANR	1567081	FunctionDef	"resolve_const_pool_index (struct sljit_compiler * compiler , struct future_patch * * first_patch , sljit_uw cpool_current_index , sljit_uw * cpool_start_address , sljit_uw * buf_ptr)"		1567080	0					
ANR	1567082	CompoundStatement		319:0:10821:12189	1567080	0					
ANR	1567083	IdentifierDeclStatement	sljit_si value ;	320:1:10824:10838	1567080	0	True				
ANR	1567084	IdentifierDecl	value		1567080	0					
ANR	1567085	IdentifierDeclType	sljit_si		1567080	0					
ANR	1567086	Identifier	value		1567080	1					
ANR	1567087	IdentifierDeclStatement	"struct future_patch * curr_patch , * prev_patch ;"	321:1:10841:10885	1567080	1	True				
ANR	1567088	IdentifierDecl	* curr_patch		1567080	0					
ANR	1567089	IdentifierDeclType	struct future_patch *		1567080	0					
ANR	1567090	Identifier	curr_patch		1567080	1					
ANR	1567091	IdentifierDecl	* prev_patch		1567080	1					
ANR	1567092	IdentifierDeclType	struct future_patch *		1567080	0					
ANR	1567093	Identifier	prev_patch		1567080	1					
ANR	1567094	ExpressionStatement	SLJIT_UNUSED_ARG ( compiler )	323:1:10889:10915	1567080	2	True				
ANR	1567095	CallExpression	SLJIT_UNUSED_ARG ( compiler )		1567080	0					
ANR	1567096	Callee	SLJIT_UNUSED_ARG		1567080	0					
ANR	1567097	Identifier	SLJIT_UNUSED_ARG		1567080	0					
ANR	1567098	ArgumentList	compiler		1567080	1					
ANR	1567099	Argument	compiler		1567080	0					
ANR	1567100	Identifier	compiler		1567080	0					
ANR	1567101	IfStatement	if ( ! * first_patch )		1567080	3					
ANR	1567102	Condition	! * first_patch	326:5:10985:10997	1567080	0	True				
ANR	1567103	UnaryOperationExpression	! * first_patch		1567080	0					
ANR	1567104	UnaryOperator	!		1567080	0					
ANR	1567105	UnaryOperationExpression	* first_patch		1567080	1					
ANR	1567106	UnaryOperator	*		1567080	0					
ANR	1567107	Identifier	first_patch		1567080	1					
ANR	1567108	ExpressionStatement	value = ( sljit_si ) cpool_start_address [ cpool_current_index ]	327:2:11002:11060	1567080	1	True				
ANR	1567109	AssignmentExpression	value = ( sljit_si ) cpool_start_address [ cpool_current_index ]		1567080	0		=			
ANR	1567110	Identifier	value		1567080	0					
ANR	1567111	CastExpression	( sljit_si ) cpool_start_address [ cpool_current_index ]		1567080	1					
ANR	1567112	CastTarget	sljit_si		1567080	0					
ANR	1567113	ArrayIndexing	cpool_start_address [ cpool_current_index ]		1567080	1					
ANR	1567114	Identifier	cpool_start_address		1567080	0					
ANR	1567115	Identifier	cpool_current_index		1567080	1					
ANR	1567116	ElseStatement	else		1567080	0					
ANR	1567117	CompoundStatement		10:6:246:246	1567080	0					
ANR	1567118	ExpressionStatement	curr_patch = * first_patch	329:2:11072:11097	1567080	0	True				
ANR	1567119	AssignmentExpression	curr_patch = * first_patch		1567080	0		=			
ANR	1567120	Identifier	curr_patch		1567080	0					
ANR	1567121	UnaryOperationExpression	* first_patch		1567080	1					
ANR	1567122	UnaryOperator	*		1567080	0					
ANR	1567123	Identifier	first_patch		1567080	1					
ANR	1567124	ExpressionStatement	prev_patch = 0	330:2:11101:11115	1567080	1	True				
ANR	1567125	AssignmentExpression	prev_patch = 0		1567080	0		=			
ANR	1567126	Identifier	prev_patch		1567080	0					
ANR	1567127	PrimaryExpression	0		1567080	1					
ANR	1567128	WhileStatement	while ( 1 )		1567080	2					
ANR	1567129	Condition	1	331:9:11126:11126	1567080	0	True				
ANR	1567130	PrimaryExpression	1		1567080	0					
ANR	1567131	CompoundStatement		13:12:307:307	1567080	1					
ANR	1567132	IfStatement	if ( ! curr_patch )		1567080	0					
ANR	1567133	Condition	! curr_patch	332:7:11138:11148	1567080	0	True				
ANR	1567134	UnaryOperationExpression	! curr_patch		1567080	0					
ANR	1567135	UnaryOperator	!		1567080	0					
ANR	1567136	Identifier	curr_patch		1567080	1					
ANR	1567137	CompoundStatement		14:20:329:329	1567080	1					
ANR	1567138	ExpressionStatement	value = ( sljit_si ) cpool_start_address [ cpool_current_index ]	333:4:11157:11215	1567080	0	True				
ANR	1567139	AssignmentExpression	value = ( sljit_si ) cpool_start_address [ cpool_current_index ]		1567080	0		=			
ANR	1567140	Identifier	value		1567080	0					
ANR	1567141	CastExpression	( sljit_si ) cpool_start_address [ cpool_current_index ]		1567080	1					
ANR	1567142	CastTarget	sljit_si		1567080	0					
ANR	1567143	ArrayIndexing	cpool_start_address [ cpool_current_index ]		1567080	1					
ANR	1567144	Identifier	cpool_start_address		1567080	0					
ANR	1567145	Identifier	cpool_current_index		1567080	1					
ANR	1567146	BreakStatement	break ;	334:4:11221:11226	1567080	1	True				
ANR	1567147	IfStatement	if ( ( sljit_uw ) curr_patch -> index == cpool_current_index )		1567080	1					
ANR	1567148	Condition	( sljit_uw ) curr_patch -> index == cpool_current_index	336:7:11240:11289	1567080	0	True				
ANR	1567149	EqualityExpression	( sljit_uw ) curr_patch -> index == cpool_current_index		1567080	0		==			
ANR	1567150	CastExpression	( sljit_uw ) curr_patch -> index		1567080	0					
ANR	1567151	CastTarget	sljit_uw		1567080	0					
ANR	1567152	PtrMemberAccess	curr_patch -> index		1567080	1					
ANR	1567153	Identifier	curr_patch		1567080	0					
ANR	1567154	Identifier	index		1567080	1					
ANR	1567155	Identifier	cpool_current_index		1567080	1					
ANR	1567156	CompoundStatement		18:59:470:470	1567080	1					
ANR	1567157	ExpressionStatement	value = curr_patch -> value	337:4:11298:11323	1567080	0	True				
ANR	1567158	AssignmentExpression	value = curr_patch -> value		1567080	0		=			
ANR	1567159	Identifier	value		1567080	0					
ANR	1567160	PtrMemberAccess	curr_patch -> value		1567080	1					
ANR	1567161	Identifier	curr_patch		1567080	0					
ANR	1567162	Identifier	value		1567080	1					
ANR	1567163	IfStatement	if ( prev_patch )		1567080	1					
ANR	1567164	Condition	prev_patch	338:8:11333:11342	1567080	0	True				
ANR	1567165	Identifier	prev_patch		1567080	0					
ANR	1567166	ExpressionStatement	prev_patch -> next = curr_patch -> next	339:5:11350:11385	1567080	1	True				
ANR	1567167	AssignmentExpression	prev_patch -> next = curr_patch -> next		1567080	0		=			
ANR	1567168	PtrMemberAccess	prev_patch -> next		1567080	0					
ANR	1567169	Identifier	prev_patch		1567080	0					
ANR	1567170	Identifier	next		1567080	1					
ANR	1567171	PtrMemberAccess	curr_patch -> next		1567080	1					
ANR	1567172	Identifier	curr_patch		1567080	0					
ANR	1567173	Identifier	next		1567080	1					
ANR	1567174	ElseStatement	else		1567080	0					
ANR	1567175	ExpressionStatement	* first_patch = curr_patch -> next	341:5:11401:11432	1567080	0	True				
ANR	1567176	AssignmentExpression	* first_patch = curr_patch -> next		1567080	0		=			
ANR	1567177	UnaryOperationExpression	* first_patch		1567080	0					
ANR	1567178	UnaryOperator	*		1567080	0					
ANR	1567179	Identifier	first_patch		1567080	1					
ANR	1567180	PtrMemberAccess	curr_patch -> next		1567080	1					
ANR	1567181	Identifier	curr_patch		1567080	0					
ANR	1567182	Identifier	next		1567080	1					
ANR	1567183	ExpressionStatement	"SLJIT_FREE ( curr_patch , compiler -> allocator_data )"	342:4:11438:11486	1567080	2	True				
ANR	1567184	CallExpression	"SLJIT_FREE ( curr_patch , compiler -> allocator_data )"		1567080	0					
ANR	1567185	Callee	SLJIT_FREE		1567080	0					
ANR	1567186	Identifier	SLJIT_FREE		1567080	0					
ANR	1567187	ArgumentList	curr_patch		1567080	1					
ANR	1567188	Argument	curr_patch		1567080	0					
ANR	1567189	Identifier	curr_patch		1567080	0					
ANR	1567190	Argument	compiler -> allocator_data		1567080	1					
ANR	1567191	PtrMemberAccess	compiler -> allocator_data		1567080	0					
ANR	1567192	Identifier	compiler		1567080	0					
ANR	1567193	Identifier	allocator_data		1567080	1					
ANR	1567194	BreakStatement	break ;	343:4:11492:11497	1567080	3	True				
ANR	1567195	ExpressionStatement	prev_patch = curr_patch	345:3:11507:11530	1567080	2	True				
ANR	1567196	AssignmentExpression	prev_patch = curr_patch		1567080	0		=			
ANR	1567197	Identifier	prev_patch		1567080	0					
ANR	1567198	Identifier	curr_patch		1567080	1					
ANR	1567199	ExpressionStatement	curr_patch = curr_patch -> next	346:3:11535:11564	1567080	3	True				
ANR	1567200	AssignmentExpression	curr_patch = curr_patch -> next		1567080	0		=			
ANR	1567201	Identifier	curr_patch		1567080	0					
ANR	1567202	PtrMemberAccess	curr_patch -> next		1567080	1					
ANR	1567203	Identifier	curr_patch		1567080	0					
ANR	1567204	Identifier	next		1567080	1					
ANR	1567205	IfStatement	if ( value >= 0 )		1567080	4					
ANR	1567206	Condition	value >= 0	350:5:11579:11588	1567080	0	True				
ANR	1567207	RelationalExpression	value >= 0		1567080	0		>=			
ANR	1567208	Identifier	value		1567080	0					
ANR	1567209	PrimaryExpression	0		1567080	1					
ANR	1567210	CompoundStatement		32:17:769:769	1567080	1					
ANR	1567211	IfStatement	if ( ( sljit_uw ) value > cpool_current_index )		1567080	0					
ANR	1567212	Condition	( sljit_uw ) value > cpool_current_index	351:6:11599:11635	1567080	0	True				
ANR	1567213	RelationalExpression	( sljit_uw ) value > cpool_current_index		1567080	0		>			
ANR	1567214	CastExpression	( sljit_uw ) value		1567080	0					
ANR	1567215	CastTarget	sljit_uw		1567080	0					
ANR	1567216	Identifier	value		1567080	1					
ANR	1567217	Identifier	cpool_current_index		1567080	1					
ANR	1567218	CompoundStatement		33:45:816:816	1567080	1					
ANR	1567219	ExpressionStatement	"curr_patch = ( struct future_patch * ) SLJIT_MALLOC ( sizeof ( struct future_patch ) , compiler -> allocator_data )"	352:3:11643:11745	1567080	0	True				
ANR	1567220	AssignmentExpression	"curr_patch = ( struct future_patch * ) SLJIT_MALLOC ( sizeof ( struct future_patch ) , compiler -> allocator_data )"		1567080	0		=			
ANR	1567221	Identifier	curr_patch		1567080	0					
ANR	1567222	CastExpression	"( struct future_patch * ) SLJIT_MALLOC ( sizeof ( struct future_patch ) , compiler -> allocator_data )"		1567080	1					
ANR	1567223	CastTarget	struct future_patch *		1567080	0					
ANR	1567224	CallExpression	"SLJIT_MALLOC ( sizeof ( struct future_patch ) , compiler -> allocator_data )"		1567080	1					
ANR	1567225	Callee	SLJIT_MALLOC		1567080	0					
ANR	1567226	Identifier	SLJIT_MALLOC		1567080	0					
ANR	1567227	ArgumentList	sizeof ( struct future_patch )		1567080	1					
ANR	1567228	Argument	sizeof ( struct future_patch )		1567080	0					
ANR	1567229	SizeofExpression	sizeof ( struct future_patch )		1567080	0					
ANR	1567230	Sizeof	sizeof		1567080	0					
ANR	1567231	SizeofOperand	struct future_patch		1567080	1					
ANR	1567232	Argument	compiler -> allocator_data		1567080	1					
ANR	1567233	PtrMemberAccess	compiler -> allocator_data		1567080	0					
ANR	1567234	Identifier	compiler		1567080	0					
ANR	1567235	Identifier	allocator_data		1567080	1					
ANR	1567236	IfStatement	if ( ! curr_patch )		1567080	1					
ANR	1567237	Condition	! curr_patch	353:7:11754:11764	1567080	0	True				
ANR	1567238	UnaryOperationExpression	! curr_patch		1567080	0					
ANR	1567239	UnaryOperator	!		1567080	0					
ANR	1567240	Identifier	curr_patch		1567080	1					
ANR	1567241	CompoundStatement		35:20:945:945	1567080	1					
ANR	1567242	WhileStatement	while ( * first_patch )		1567080	0					
ANR	1567243	Condition	* first_patch	354:11:11780:11791	1567080	0	True				
ANR	1567244	UnaryOperationExpression	* first_patch		1567080	0					
ANR	1567245	UnaryOperator	*		1567080	0					
ANR	1567246	Identifier	first_patch		1567080	1					
ANR	1567247	CompoundStatement		36:25:972:972	1567080	1					
ANR	1567248	ExpressionStatement	curr_patch = * first_patch	355:5:11801:11826	1567080	0	True				
ANR	1567249	AssignmentExpression	curr_patch = * first_patch		1567080	0		=			
ANR	1567250	Identifier	curr_patch		1567080	0					
ANR	1567251	UnaryOperationExpression	* first_patch		1567080	1					
ANR	1567252	UnaryOperator	*		1567080	0					
ANR	1567253	Identifier	first_patch		1567080	1					
ANR	1567254	ExpressionStatement	* first_patch = ( * first_patch ) -> next	356:5:11833:11868	1567080	1	True				
ANR	1567255	AssignmentExpression	* first_patch = ( * first_patch ) -> next		1567080	0		=			
ANR	1567256	UnaryOperationExpression	* first_patch		1567080	0					
ANR	1567257	UnaryOperator	*		1567080	0					
ANR	1567258	Identifier	first_patch		1567080	1					
ANR	1567259	PtrMemberAccess	( * first_patch ) -> next		1567080	1					
ANR	1567260	UnaryOperationExpression	* first_patch		1567080	0					
ANR	1567261	UnaryOperator	*		1567080	0					
ANR	1567262	Identifier	first_patch		1567080	1					
ANR	1567263	Identifier	next		1567080	1					
ANR	1567264	ExpressionStatement	"SLJIT_FREE ( curr_patch , compiler -> allocator_data )"	357:5:11875:11923	1567080	2	True				
ANR	1567265	CallExpression	"SLJIT_FREE ( curr_patch , compiler -> allocator_data )"		1567080	0					
ANR	1567266	Callee	SLJIT_FREE		1567080	0					
ANR	1567267	Identifier	SLJIT_FREE		1567080	0					
ANR	1567268	ArgumentList	curr_patch		1567080	1					
ANR	1567269	Argument	curr_patch		1567080	0					
ANR	1567270	Identifier	curr_patch		1567080	0					
ANR	1567271	Argument	compiler -> allocator_data		1567080	1					
ANR	1567272	PtrMemberAccess	compiler -> allocator_data		1567080	0					
ANR	1567273	Identifier	compiler		1567080	0					
ANR	1567274	Identifier	allocator_data		1567080	1					
ANR	1567275	ReturnStatement	return SLJIT_ERR_ALLOC_FAILED ;	359:4:11935:11964	1567080	1	True				
ANR	1567276	Identifier	SLJIT_ERR_ALLOC_FAILED		1567080	0					
ANR	1567277	ExpressionStatement	curr_patch -> next = * first_patch	361:3:11974:12005	1567080	2	True				
ANR	1567278	AssignmentExpression	curr_patch -> next = * first_patch		1567080	0		=			
ANR	1567279	PtrMemberAccess	curr_patch -> next		1567080	0					
ANR	1567280	Identifier	curr_patch		1567080	0					
ANR	1567281	Identifier	next		1567080	1					
ANR	1567282	UnaryOperationExpression	* first_patch		1567080	1					
ANR	1567283	UnaryOperator	*		1567080	0					
ANR	1567284	Identifier	first_patch		1567080	1					
ANR	1567285	ExpressionStatement	curr_patch -> index = value	362:3:12010:12035	1567080	3	True				
ANR	1567286	AssignmentExpression	curr_patch -> index = value		1567080	0		=			
ANR	1567287	PtrMemberAccess	curr_patch -> index		1567080	0					
ANR	1567288	Identifier	curr_patch		1567080	0					
ANR	1567289	Identifier	index		1567080	1					
ANR	1567290	Identifier	value		1567080	1					
ANR	1567291	ExpressionStatement	curr_patch -> value = cpool_start_address [ value ]	363:3:12040:12086	1567080	4	True				
ANR	1567292	AssignmentExpression	curr_patch -> value = cpool_start_address [ value ]		1567080	0		=			
ANR	1567293	PtrMemberAccess	curr_patch -> value		1567080	0					
ANR	1567294	Identifier	curr_patch		1567080	0					
ANR	1567295	Identifier	value		1567080	1					
ANR	1567296	ArrayIndexing	cpool_start_address [ value ]		1567080	1					
ANR	1567297	Identifier	cpool_start_address		1567080	0					
ANR	1567298	Identifier	value		1567080	1					
ANR	1567299	ExpressionStatement	* first_patch = curr_patch	364:3:12091:12116	1567080	5	True				
ANR	1567300	AssignmentExpression	* first_patch = curr_patch		1567080	0		=			
ANR	1567301	UnaryOperationExpression	* first_patch		1567080	0					
ANR	1567302	UnaryOperator	*		1567080	0					
ANR	1567303	Identifier	first_patch		1567080	1					
ANR	1567304	Identifier	curr_patch		1567080	1					
ANR	1567305	ExpressionStatement	cpool_start_address [ value ] = * buf_ptr	366:2:12124:12161	1567080	1	True				
ANR	1567306	AssignmentExpression	cpool_start_address [ value ] = * buf_ptr		1567080	0		=			
ANR	1567307	ArrayIndexing	cpool_start_address [ value ]		1567080	0					
ANR	1567308	Identifier	cpool_start_address		1567080	0					
ANR	1567309	Identifier	value		1567080	1					
ANR	1567310	UnaryOperationExpression	* buf_ptr		1567080	1					
ANR	1567311	UnaryOperator	*		1567080	0					
ANR	1567312	Identifier	buf_ptr		1567080	1					
ANR	1567313	ReturnStatement	return SLJIT_SUCCESS ;	368:1:12167:12187	1567080	5	True				
ANR	1567314	Identifier	SLJIT_SUCCESS		1567080	0					
ANR	1567315	ReturnType	static sljit_si		1567080	1					
ANR	1567316	Identifier	resolve_const_pool_index		1567080	2					
ANR	1567317	ParameterList	"struct sljit_compiler * compiler , struct future_patch * * first_patch , sljit_uw cpool_current_index , sljit_uw * cpool_start_address , sljit_uw * buf_ptr"		1567080	3					
ANR	1567318	Parameter	struct sljit_compiler * compiler	318:41:10673:10703	1567080	0	True				
ANR	1567319	ParameterType	struct sljit_compiler *		1567080	0					
ANR	1567320	Identifier	compiler		1567080	1					
ANR	1567321	Parameter	struct future_patch * * first_patch	318:74:10706:10738	1567080	1	True				
ANR	1567322	ParameterType	struct future_patch * *		1567080	0					
ANR	1567323	Identifier	first_patch		1567080	1					
ANR	1567324	Parameter	sljit_uw cpool_current_index	318:109:10741:10768	1567080	2	True				
ANR	1567325	ParameterType	sljit_uw		1567080	0					
ANR	1567326	Identifier	cpool_current_index		1567080	1					
ANR	1567327	Parameter	sljit_uw * cpool_start_address	318:139:10771:10799	1567080	3	True				
ANR	1567328	ParameterType	sljit_uw *		1567080	0					
ANR	1567329	Identifier	cpool_start_address		1567080	1					
ANR	1567330	Parameter	sljit_uw * buf_ptr	318:170:10802:10818	1567080	4	True				
ANR	1567331	ParameterType	sljit_uw *		1567080	0					
ANR	1567332	Identifier	buf_ptr		1567080	1					
ANR	1567333	CFGEntryNode	ENTRY		1567080		True				
ANR	1567334	CFGExitNode	EXIT		1567080		True				
ANR	1567335	Symbol	curr_patch -> next		1567080						
ANR	1567336	Symbol	( * first_patch ) -> next		1567080						
ANR	1567337	Symbol	cpool_current_index		1567080						
ANR	1567338	Symbol	SLJIT_ERR_ALLOC_FAILED		1567080						
ANR	1567339	Symbol	cpool_start_address		1567080						
ANR	1567340	Symbol	* compiler		1567080						
ANR	1567341	Symbol	* cpool_start_address		1567080						
ANR	1567342	Symbol	prev_patch -> next		1567080						
ANR	1567343	Symbol	curr_patch		1567080						
ANR	1567344	Symbol	* curr_patch		1567080						
ANR	1567345	Symbol	* first_patch		1567080						
ANR	1567346	Symbol	compiler		1567080						
ANR	1567347	Symbol	value		1567080						
ANR	1567348	Symbol	first_patch		1567080						
ANR	1567349	Symbol	* * first_patch		1567080						
ANR	1567350	Symbol	* buf_ptr		1567080						
ANR	1567351	Symbol	SLJIT_MALLOC		1567080						
ANR	1567352	Symbol	SLJIT_SUCCESS		1567080						
ANR	1567353	Symbol	curr_patch -> index		1567080						
ANR	1567354	Symbol	buf_ptr		1567080						
ANR	1567355	Symbol	curr_patch -> value		1567080						
ANR	1567356	Symbol	* prev_patch		1567080						
ANR	1567357	Symbol	* cpool_current_index		1567080						
ANR	1567358	Symbol	* value		1567080						
ANR	1567359	Symbol	compiler -> allocator_data		1567080						
ANR	1567360	Symbol	prev_patch		1567080						
ANR	1567361	Function	push_inst	373:0:12199:12422							
ANR	1567362	FunctionDef	"push_inst (struct sljit_compiler * compiler , sljit_uw inst)"		1567361	0					
ANR	1567363	CompoundStatement		374:0:12273:12422	1567361	0					
ANR	1567364	IdentifierDeclStatement	sljit_uw * ptr ;	375:1:12276:12289	1567361	0	True				
ANR	1567365	IdentifierDecl	* ptr		1567361	0					
ANR	1567366	IdentifierDeclType	sljit_uw *		1567361	0					
ANR	1567367	Identifier	ptr		1567361	1					
ANR	1567368	ExpressionStatement	"ptr = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"	377:1:12293:12348	1567361	1	True				
ANR	1567369	AssignmentExpression	"ptr = ( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1567361	0		=			
ANR	1567370	Identifier	ptr		1567361	0					
ANR	1567371	CastExpression	"( sljit_uw * ) ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1567361	1					
ANR	1567372	CastTarget	sljit_uw *		1567361	0					
ANR	1567373	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_uw ) )"		1567361	1					
ANR	1567374	Callee	ensure_buf		1567361	0					
ANR	1567375	Identifier	ensure_buf		1567361	0					
ANR	1567376	ArgumentList	compiler		1567361	1					
ANR	1567377	Argument	compiler		1567361	0					
ANR	1567378	Identifier	compiler		1567361	0					
ANR	1567379	Argument	sizeof ( sljit_uw )		1567361	1					
ANR	1567380	SizeofExpression	sizeof ( sljit_uw )		1567361	0					
ANR	1567381	Sizeof	sizeof		1567361	0					
ANR	1567382	SizeofOperand	sljit_uw		1567361	1					
ANR	1567383	ExpressionStatement	FAIL_IF ( ! ptr )	378:1:12351:12364	1567361	2	True				
ANR	1567384	CallExpression	FAIL_IF ( ! ptr )		1567361	0					
ANR	1567385	Callee	FAIL_IF		1567361	0					
ANR	1567386	Identifier	FAIL_IF		1567361	0					
ANR	1567387	ArgumentList	! ptr		1567361	1					
ANR	1567388	Argument	! ptr		1567361	0					
ANR	1567389	UnaryOperationExpression	! ptr		1567361	0					
ANR	1567390	UnaryOperator	!		1567361	0					
ANR	1567391	Identifier	ptr		1567361	1					
ANR	1567392	ExpressionStatement	compiler -> size ++	379:1:12367:12383	1567361	3	True				
ANR	1567393	PostIncDecOperationExpression	compiler -> size ++		1567361	0					
ANR	1567394	PtrMemberAccess	compiler -> size		1567361	0					
ANR	1567395	Identifier	compiler		1567361	0					
ANR	1567396	Identifier	size		1567361	1					
ANR	1567397	IncDec	++		1567361	1					
ANR	1567398	ExpressionStatement	* ptr = inst	380:1:12386:12397	1567361	4	True				
ANR	1567399	AssignmentExpression	* ptr = inst		1567361	0		=			
ANR	1567400	UnaryOperationExpression	* ptr		1567361	0					
ANR	1567401	UnaryOperator	*		1567361	0					
ANR	1567402	Identifier	ptr		1567361	1					
ANR	1567403	Identifier	inst		1567361	1					
ANR	1567404	ReturnStatement	return SLJIT_SUCCESS ;	381:1:12400:12420	1567361	5	True				
ANR	1567405	Identifier	SLJIT_SUCCESS		1567361	0					
ANR	1567406	ReturnType	static sljit_si		1567361	1					
ANR	1567407	Identifier	push_inst		1567361	2					
ANR	1567408	ParameterList	"struct sljit_compiler * compiler , sljit_uw inst"		1567361	3					
ANR	1567409	Parameter	struct sljit_compiler * compiler	373:26:12225:12255	1567361	0	True				
ANR	1567410	ParameterType	struct sljit_compiler *		1567361	0					
ANR	1567411	Identifier	compiler		1567361	1					
ANR	1567412	Parameter	sljit_uw inst	373:59:12258:12270	1567361	1	True				
ANR	1567413	ParameterType	sljit_uw		1567361	0					
ANR	1567414	Identifier	inst		1567361	1					
ANR	1567415	CFGEntryNode	ENTRY		1567361		True				
ANR	1567416	CFGExitNode	EXIT		1567361		True				
ANR	1567417	Symbol	compiler -> size		1567361						
ANR	1567418	Symbol	inst		1567361						
ANR	1567419	Symbol	ensure_buf		1567361						
ANR	1567420	Symbol	* ptr		1567361						
ANR	1567421	Symbol	SLJIT_SUCCESS		1567361						
ANR	1567422	Symbol	* compiler		1567361						
ANR	1567423	Symbol	compiler		1567361						
ANR	1567424	Symbol	ptr		1567361						
ANR	1567425	Function	emit_imm	384:0:12425:12709							
ANR	1567426	FunctionDef	"emit_imm (struct sljit_compiler * compiler , sljit_si reg , sljit_sw imm)"		1567425	0					
ANR	1567427	CompoundStatement		385:0:12524:12709	1567425	0					
ANR	1567428	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff ) ) )"	386:1:12527:12612	1567425	0	True				
ANR	1567429	CallExpression	"FAIL_IF ( push_inst ( compiler , MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff ) ) )"		1567425	0					
ANR	1567430	Callee	FAIL_IF		1567425	0					
ANR	1567431	Identifier	FAIL_IF		1567425	0					
ANR	1567432	ArgumentList	"push_inst ( compiler , MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff ) )"		1567425	1					
ANR	1567433	Argument	"push_inst ( compiler , MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff ) )"		1567425	0					
ANR	1567434	CallExpression	"push_inst ( compiler , MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff ) )"		1567425	0					
ANR	1567435	Callee	push_inst		1567425	0					
ANR	1567436	Identifier	push_inst		1567425	0					
ANR	1567437	ArgumentList	compiler		1567425	1					
ANR	1567438	Argument	compiler		1567425	0					
ANR	1567439	Identifier	compiler		1567425	0					
ANR	1567440	Argument	MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff )		1567425	1					
ANR	1567441	InclusiveOrExpression	MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff )		1567425	0		|			
ANR	1567442	Identifier	MOVW		1567425	0					
ANR	1567443	InclusiveOrExpression	RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff )		1567425	1		|			
ANR	1567444	CallExpression	RD ( reg )		1567425	0					
ANR	1567445	Callee	RD		1567425	0					
ANR	1567446	Identifier	RD		1567425	0					
ANR	1567447	ArgumentList	reg		1567425	1					
ANR	1567448	Argument	reg		1567425	0					
ANR	1567449	Identifier	reg		1567425	0					
ANR	1567450	InclusiveOrExpression	( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff )		1567425	1		|			
ANR	1567451	BitAndExpression	( imm << 4 ) & 0xf0000		1567425	0		&			
ANR	1567452	ShiftExpression	imm << 4		1567425	0		<<			
ANR	1567453	Identifier	imm		1567425	0					
ANR	1567454	PrimaryExpression	4		1567425	1					
ANR	1567455	PrimaryExpression	0xf0000		1567425	1					
ANR	1567456	BitAndExpression	imm & 0xfff		1567425	1		&			
ANR	1567457	Identifier	imm		1567425	0					
ANR	1567458	PrimaryExpression	0xfff		1567425	1					
ANR	1567459	ReturnStatement	"return push_inst ( compiler , MOVT | RD ( reg ) | ( ( imm >> 12 ) & 0xf0000 ) | ( ( imm >> 16 ) & 0xfff ) ) ;"	387:1:12615:12707	1567425	1	True				
ANR	1567460	CallExpression	"push_inst ( compiler , MOVT | RD ( reg ) | ( ( imm >> 12 ) & 0xf0000 ) | ( ( imm >> 16 ) & 0xfff ) )"		1567425	0					
ANR	1567461	Callee	push_inst		1567425	0					
ANR	1567462	Identifier	push_inst		1567425	0					
ANR	1567463	ArgumentList	compiler		1567425	1					
ANR	1567464	Argument	compiler		1567425	0					
ANR	1567465	Identifier	compiler		1567425	0					
ANR	1567466	Argument	MOVT | RD ( reg ) | ( ( imm >> 12 ) & 0xf0000 ) | ( ( imm >> 16 ) & 0xfff )		1567425	1					
ANR	1567467	InclusiveOrExpression	MOVT | RD ( reg ) | ( ( imm >> 12 ) & 0xf0000 ) | ( ( imm >> 16 ) & 0xfff )		1567425	0		|			
ANR	1567468	Identifier	MOVT		1567425	0					
ANR	1567469	InclusiveOrExpression	RD ( reg ) | ( ( imm >> 12 ) & 0xf0000 ) | ( ( imm >> 16 ) & 0xfff )		1567425	1		|			
ANR	1567470	CallExpression	RD ( reg )		1567425	0					
ANR	1567471	Callee	RD		1567425	0					
ANR	1567472	Identifier	RD		1567425	0					
ANR	1567473	ArgumentList	reg		1567425	1					
ANR	1567474	Argument	reg		1567425	0					
ANR	1567475	Identifier	reg		1567425	0					
ANR	1567476	InclusiveOrExpression	( ( imm >> 12 ) & 0xf0000 ) | ( ( imm >> 16 ) & 0xfff )		1567425	1		|			
ANR	1567477	BitAndExpression	( imm >> 12 ) & 0xf0000		1567425	0		&			
ANR	1567478	ShiftExpression	imm >> 12		1567425	0		>>			
ANR	1567479	Identifier	imm		1567425	0					
ANR	1567480	PrimaryExpression	12		1567425	1					
ANR	1567481	PrimaryExpression	0xf0000		1567425	1					
ANR	1567482	BitAndExpression	( imm >> 16 ) & 0xfff		1567425	1		&			
ANR	1567483	ShiftExpression	imm >> 16		1567425	0		>>			
ANR	1567484	Identifier	imm		1567425	0					
ANR	1567485	PrimaryExpression	16		1567425	1					
ANR	1567486	PrimaryExpression	0xfff		1567425	1					
ANR	1567487	ReturnType	static SLJIT_INLINE sljit_si		1567425	1					
ANR	1567488	Identifier	emit_imm		1567425	2					
ANR	1567489	ParameterList	"struct sljit_compiler * compiler , sljit_si reg , sljit_sw imm"		1567425	3					
ANR	1567490	Parameter	struct sljit_compiler * compiler	384:38:12463:12493	1567425	0	True				
ANR	1567491	ParameterType	struct sljit_compiler *		1567425	0					
ANR	1567492	Identifier	compiler		1567425	1					
ANR	1567493	Parameter	sljit_si reg	384:71:12496:12507	1567425	1	True				
ANR	1567494	ParameterType	sljit_si		1567425	0					
ANR	1567495	Identifier	reg		1567425	1					
ANR	1567496	Parameter	sljit_sw imm	384:85:12510:12521	1567425	2	True				
ANR	1567497	ParameterType	sljit_sw		1567425	0					
ANR	1567498	Identifier	imm		1567425	1					
ANR	1567499	CFGEntryNode	ENTRY		1567425		True				
ANR	1567500	CFGExitNode	EXIT		1567425		True				
ANR	1567501	Symbol	push_inst		1567425						
ANR	1567502	Symbol	RD		1567425						
ANR	1567503	Symbol	MOVT		1567425						
ANR	1567504	Symbol	reg		1567425						
ANR	1567505	Symbol	MOVW		1567425						
ANR	1567506	Symbol	imm		1567425						
ANR	1567507	Symbol	compiler		1567425						
ANR	1567508	Function	detect_jump_type	392:0:12720:14197							
ANR	1567509	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_uw * code_ptr , sljit_uw * code)"		1567508	0					
ANR	1567510	CompoundStatement		393:0:12827:14197	1567508	0					
ANR	1567511	IdentifierDeclStatement	sljit_sw diff ;	394:1:12830:12843	1567508	0	True				
ANR	1567512	IdentifierDecl	diff		1567508	0					
ANR	1567513	IdentifierDeclType	sljit_sw		1567508	0					
ANR	1567514	Identifier	diff		1567508	1					
ANR	1567515	IfStatement	if ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1567508	1					
ANR	1567516	Condition	jump -> flags & SLJIT_REWRITABLE_JUMP	396:5:12851:12885	1567508	0	True				
ANR	1567517	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1567508	0		&			
ANR	1567518	PtrMemberAccess	jump -> flags		1567508	0					
ANR	1567519	Identifier	jump		1567508	0					
ANR	1567520	Identifier	flags		1567508	1					
ANR	1567521	Identifier	SLJIT_REWRITABLE_JUMP		1567508	1					
ANR	1567522	ReturnStatement	return 0 ;	397:2:12890:12898	1567508	1	True				
ANR	1567523	PrimaryExpression	0		1567508	0					
ANR	1567524	IfStatement	if ( jump -> flags & IS_BL )		1567508	2					
ANR	1567525	Condition	jump -> flags & IS_BL	400:5:12963:12981	1567508	0	True				
ANR	1567526	BitAndExpression	jump -> flags & IS_BL		1567508	0		&			
ANR	1567527	PtrMemberAccess	jump -> flags		1567508	0					
ANR	1567528	Identifier	jump		1567508	0					
ANR	1567529	Identifier	flags		1567508	1					
ANR	1567530	Identifier	IS_BL		1567508	1					
ANR	1567531	ExpressionStatement	code_ptr --	401:2:12986:12996	1567508	1	True				
ANR	1567532	PostIncDecOperationExpression	code_ptr --		1567508	0					
ANR	1567533	Identifier	code_ptr		1567508	0					
ANR	1567534	IncDec	--		1567508	1					
ANR	1567535	IfStatement	if ( jump -> flags & JUMP_ADDR )		1567508	3					
ANR	1567536	Condition	jump -> flags & JUMP_ADDR	403:5:13004:13026	1567508	0	True				
ANR	1567537	BitAndExpression	jump -> flags & JUMP_ADDR		1567508	0		&			
ANR	1567538	PtrMemberAccess	jump -> flags		1567508	0					
ANR	1567539	Identifier	jump		1567508	0					
ANR	1567540	Identifier	flags		1567508	1					
ANR	1567541	Identifier	JUMP_ADDR		1567508	1					
ANR	1567542	ExpressionStatement	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 ) )	404:2:13031:13091	1567508	1	True				
ANR	1567543	AssignmentExpression	diff = ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 ) )		1567508	0		=			
ANR	1567544	Identifier	diff		1567508	0					
ANR	1567545	AdditiveExpression	( sljit_sw ) jump -> u . target - ( sljit_sw ) ( code_ptr + 2 )		1567508	1		-			
ANR	1567546	CastExpression	( sljit_sw ) jump -> u . target		1567508	0					
ANR	1567547	CastTarget	sljit_sw		1567508	0					
ANR	1567548	MemberAccess	jump -> u . target		1567508	1					
ANR	1567549	PtrMemberAccess	jump -> u		1567508	0					
ANR	1567550	Identifier	jump		1567508	0					
ANR	1567551	Identifier	u		1567508	1					
ANR	1567552	Identifier	target		1567508	1					
ANR	1567553	CastExpression	( sljit_sw ) ( code_ptr + 2 )		1567508	1					
ANR	1567554	CastTarget	sljit_sw		1567508	0					
ANR	1567555	AdditiveExpression	code_ptr + 2		1567508	1		+			
ANR	1567556	Identifier	code_ptr		1567508	0					
ANR	1567557	PrimaryExpression	2		1567508	1					
ANR	1567558	ElseStatement	else		1567508	0					
ANR	1567559	CompoundStatement		13:6:271:271	1567508	0					
ANR	1567560	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	406:2:13103:13141	1567508	0	True				
ANR	1567561	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1567508	0					
ANR	1567562	Callee	SLJIT_ASSERT		1567508	0					
ANR	1567563	Identifier	SLJIT_ASSERT		1567508	0					
ANR	1567564	ArgumentList	jump -> flags & JUMP_LABEL		1567508	1					
ANR	1567565	Argument	jump -> flags & JUMP_LABEL		1567508	0					
ANR	1567566	BitAndExpression	jump -> flags & JUMP_LABEL		1567508	0		&			
ANR	1567567	PtrMemberAccess	jump -> flags		1567508	0					
ANR	1567568	Identifier	jump		1567508	0					
ANR	1567569	Identifier	flags		1567508	1					
ANR	1567570	Identifier	JUMP_LABEL		1567508	1					
ANR	1567571	ExpressionStatement	diff = ( ( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 ) )	407:2:13145:13219	1567508	1	True				
ANR	1567572	AssignmentExpression	diff = ( ( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 ) )		1567508	0		=			
ANR	1567573	Identifier	diff		1567508	0					
ANR	1567574	AdditiveExpression	( sljit_sw ) ( code + jump -> u . label -> size ) - ( sljit_sw ) ( code_ptr + 2 )		1567508	1		-			
ANR	1567575	CastExpression	( sljit_sw ) ( code + jump -> u . label -> size )		1567508	0					
ANR	1567576	CastTarget	sljit_sw		1567508	0					
ANR	1567577	AdditiveExpression	code + jump -> u . label -> size		1567508	1		+			
ANR	1567578	Identifier	code		1567508	0					
ANR	1567579	PtrMemberAccess	jump -> u . label -> size		1567508	1					
ANR	1567580	MemberAccess	jump -> u . label		1567508	0					
ANR	1567581	PtrMemberAccess	jump -> u		1567508	0					
ANR	1567582	Identifier	jump		1567508	0					
ANR	1567583	Identifier	u		1567508	1					
ANR	1567584	Identifier	label		1567508	1					
ANR	1567585	Identifier	size		1567508	1					
ANR	1567586	CastExpression	( sljit_sw ) ( code_ptr + 2 )		1567508	1					
ANR	1567587	CastTarget	sljit_sw		1567508	0					
ANR	1567588	AdditiveExpression	code_ptr + 2		1567508	1		+			
ANR	1567589	Identifier	code_ptr		1567508	0					
ANR	1567590	PrimaryExpression	2		1567508	1					
ANR	1567591	IfStatement	if ( diff & 0x3 )		1567508	4					
ANR	1567592	Condition	diff & 0x3	411:5:13286:13295	1567508	0	True				
ANR	1567593	BitAndExpression	diff & 0x3		1567508	0		&			
ANR	1567594	Identifier	diff		1567508	0					
ANR	1567595	PrimaryExpression	0x3		1567508	1					
ANR	1567596	ReturnStatement	return 0 ;	412:2:13300:13308	1567508	1	True				
ANR	1567597	PrimaryExpression	0		1567508	0					
ANR	1567598	IfStatement	if ( jump -> flags & IS_BL )		1567508	5					
ANR	1567599	Condition	jump -> flags & IS_BL	414:5:13316:13334	1567508	0	True				
ANR	1567600	BitAndExpression	jump -> flags & IS_BL		1567508	0		&			
ANR	1567601	PtrMemberAccess	jump -> flags		1567508	0					
ANR	1567602	Identifier	jump		1567508	0					
ANR	1567603	Identifier	flags		1567508	1					
ANR	1567604	Identifier	IS_BL		1567508	1					
ANR	1567605	CompoundStatement		22:26:509:509	1567508	1					
ANR	1567606	IfStatement	if ( diff <= 0x01ffffff && diff >= - 0x02000000 )		1567508	0					
ANR	1567607	Condition	diff <= 0x01ffffff && diff >= - 0x02000000	415:6:13345:13385	1567508	0	True				
ANR	1567608	AndExpression	diff <= 0x01ffffff && diff >= - 0x02000000		1567508	0		&&			
ANR	1567609	RelationalExpression	diff <= 0x01ffffff		1567508	0		<=			
ANR	1567610	Identifier	diff		1567508	0					
ANR	1567611	PrimaryExpression	0x01ffffff		1567508	1					
ANR	1567612	RelationalExpression	diff >= - 0x02000000		1567508	1		>=			
ANR	1567613	Identifier	diff		1567508	0					
ANR	1567614	UnaryOperationExpression	- 0x02000000		1567508	1					
ANR	1567615	UnaryOperator	-		1567508	0					
ANR	1567616	PrimaryExpression	0x02000000		1567508	1					
ANR	1567617	CompoundStatement		23:49:560:560	1567508	1					
ANR	1567618	ExpressionStatement	* code_ptr = ( BL - CONDITIONAL ) | ( * ( code_ptr + 1 ) & COND_MASK )	416:3:13393:13455	1567508	0	True				
ANR	1567619	AssignmentExpression	* code_ptr = ( BL - CONDITIONAL ) | ( * ( code_ptr + 1 ) & COND_MASK )		1567508	0		=			
ANR	1567620	UnaryOperationExpression	* code_ptr		1567508	0					
ANR	1567621	UnaryOperator	*		1567508	0					
ANR	1567622	Identifier	code_ptr		1567508	1					
ANR	1567623	InclusiveOrExpression	( BL - CONDITIONAL ) | ( * ( code_ptr + 1 ) & COND_MASK )		1567508	1		|			
ANR	1567624	AdditiveExpression	BL - CONDITIONAL		1567508	0		-			
ANR	1567625	Identifier	BL		1567508	0					
ANR	1567626	Identifier	CONDITIONAL		1567508	1					
ANR	1567627	BitAndExpression	* ( code_ptr + 1 ) & COND_MASK		1567508	1		&			
ANR	1567628	UnaryOperationExpression	* ( code_ptr + 1 )		1567508	0					
ANR	1567629	UnaryOperator	*		1567508	0					
ANR	1567630	AdditiveExpression	code_ptr + 1		1567508	1		+			
ANR	1567631	Identifier	code_ptr		1567508	0					
ANR	1567632	PrimaryExpression	1		1567508	1					
ANR	1567633	Identifier	COND_MASK		1567508	1					
ANR	1567634	ExpressionStatement	jump -> flags |= PATCH_B	417:3:13460:13482	1567508	1	True				
ANR	1567635	AssignmentExpression	jump -> flags |= PATCH_B		1567508	0		|=			
ANR	1567636	PtrMemberAccess	jump -> flags		1567508	0					
ANR	1567637	Identifier	jump		1567508	0					
ANR	1567638	Identifier	flags		1567508	1					
ANR	1567639	Identifier	PATCH_B		1567508	1					
ANR	1567640	ReturnStatement	return 1 ;	418:3:13487:13495	1567508	2	True				
ANR	1567641	PrimaryExpression	1		1567508	0					
ANR	1567642	ElseStatement	else		1567508	0					
ANR	1567643	CompoundStatement		29:6:682:682	1567508	0					
ANR	1567644	IfStatement	if ( diff <= 0x01ffffff && diff >= - 0x02000000 )		1567508	0					
ANR	1567645	Condition	diff <= 0x01ffffff && diff >= - 0x02000000	422:6:13518:13558	1567508	0	True				
ANR	1567646	AndExpression	diff <= 0x01ffffff && diff >= - 0x02000000		1567508	0		&&			
ANR	1567647	RelationalExpression	diff <= 0x01ffffff		1567508	0		<=			
ANR	1567648	Identifier	diff		1567508	0					
ANR	1567649	PrimaryExpression	0x01ffffff		1567508	1					
ANR	1567650	RelationalExpression	diff >= - 0x02000000		1567508	1		>=			
ANR	1567651	Identifier	diff		1567508	0					
ANR	1567652	UnaryOperationExpression	- 0x02000000		1567508	1					
ANR	1567653	UnaryOperator	-		1567508	0					
ANR	1567654	PrimaryExpression	0x02000000		1567508	1					
ANR	1567655	CompoundStatement		30:49:733:733	1567508	1					
ANR	1567656	ExpressionStatement	* code_ptr = ( B - CONDITIONAL ) | ( * code_ptr & COND_MASK )	423:3:13566:13621	1567508	0	True				
ANR	1567657	AssignmentExpression	* code_ptr = ( B - CONDITIONAL ) | ( * code_ptr & COND_MASK )		1567508	0		=			
ANR	1567658	UnaryOperationExpression	* code_ptr		1567508	0					
ANR	1567659	UnaryOperator	*		1567508	0					
ANR	1567660	Identifier	code_ptr		1567508	1					
ANR	1567661	InclusiveOrExpression	( B - CONDITIONAL ) | ( * code_ptr & COND_MASK )		1567508	1		|			
ANR	1567662	AdditiveExpression	B - CONDITIONAL		1567508	0		-			
ANR	1567663	Identifier	B		1567508	0					
ANR	1567664	Identifier	CONDITIONAL		1567508	1					
ANR	1567665	BitAndExpression	* code_ptr & COND_MASK		1567508	1		&			
ANR	1567666	UnaryOperationExpression	* code_ptr		1567508	0					
ANR	1567667	UnaryOperator	*		1567508	0					
ANR	1567668	Identifier	code_ptr		1567508	1					
ANR	1567669	Identifier	COND_MASK		1567508	1					
ANR	1567670	ExpressionStatement	jump -> flags |= PATCH_B	424:3:13626:13648	1567508	1	True				
ANR	1567671	AssignmentExpression	jump -> flags |= PATCH_B		1567508	0		|=			
ANR	1567672	PtrMemberAccess	jump -> flags		1567508	0					
ANR	1567673	Identifier	jump		1567508	0					
ANR	1567674	Identifier	flags		1567508	1					
ANR	1567675	Identifier	PATCH_B		1567508	1					
ANR	1567676	ReturnStatement	return 0 ;	446:1:14187:14195	1567508	6	True				
ANR	1567677	PrimaryExpression	0		1567508	0					
ANR	1567678	ReturnType	static SLJIT_INLINE sljit_si		1567508	1					
ANR	1567679	Identifier	detect_jump_type		1567508	2					
ANR	1567680	ParameterList	"struct sljit_jump * jump , sljit_uw * code_ptr , sljit_uw * code"		1567508	3					
ANR	1567681	Parameter	struct sljit_jump * jump	392:46:12766:12788	1567508	0	True				
ANR	1567682	ParameterType	struct sljit_jump *		1567508	0					
ANR	1567683	Identifier	jump		1567508	1					
ANR	1567684	Parameter	sljit_uw * code_ptr	392:71:12791:12808	1567508	1	True				
ANR	1567685	ParameterType	sljit_uw *		1567508	0					
ANR	1567686	Identifier	code_ptr		1567508	1					
ANR	1567687	Parameter	sljit_uw * code	392:91:12811:12824	1567508	2	True				
ANR	1567688	ParameterType	sljit_uw *		1567508	0					
ANR	1567689	Identifier	code		1567508	1					
ANR	1567690	CFGEntryNode	ENTRY		1567508		True				
ANR	1567691	CFGExitNode	EXIT		1567508		True				
ANR	1567692	Symbol	jump -> u . label -> size		1567508						
ANR	1567693	Symbol	B		1567508						
ANR	1567694	Symbol	code		1567508						
ANR	1567695	Symbol	* * jump		1567508						
ANR	1567696	Symbol	* jump		1567508						
ANR	1567697	Symbol	jump -> u		1567508						
ANR	1567698	Symbol	jump -> flags		1567508						
ANR	1567699	Symbol	JUMP_LABEL		1567508						
ANR	1567700	Symbol	diff		1567508						
ANR	1567701	Symbol	JUMP_ADDR		1567508						
ANR	1567702	Symbol	BL		1567508						
ANR	1567703	Symbol	CONDITIONAL		1567508						
ANR	1567704	Symbol	* ( code_ptr + 1 )		1567508						
ANR	1567705	Symbol	* code_ptr		1567508						
ANR	1567706	Symbol	* jump -> u . label		1567508						
ANR	1567707	Symbol	* jump -> u		1567508						
ANR	1567708	Symbol	code_ptr		1567508						
ANR	1567709	Symbol	IS_BL		1567508						
ANR	1567710	Symbol	jump -> u . target		1567508						
ANR	1567711	Symbol	PATCH_B		1567508						
ANR	1567712	Symbol	SLJIT_REWRITABLE_JUMP		1567508						
ANR	1567713	Symbol	jump -> u . label		1567508						
ANR	1567714	Symbol	COND_MASK		1567508						
ANR	1567715	Symbol	jump		1567508						
ANR	1567716	Function	inline_set_jump_addr	449:0:14200:15755							
ANR	1567717	FunctionDef	"inline_set_jump_addr (sljit_uw addr , sljit_uw new_addr , sljit_si flush)"		1567716	0					
ANR	1567718	CompoundStatement		450:0:14296:15755	1567716	0					
ANR	1567719	IdentifierDeclStatement	sljit_uw * ptr = ( sljit_uw * ) addr ;	452:1:14356:14387	1567716	0	True				
ANR	1567720	IdentifierDecl	* ptr = ( sljit_uw * ) addr		1567716	0					
ANR	1567721	IdentifierDeclType	sljit_uw *		1567716	0					
ANR	1567722	Identifier	ptr		1567716	1					
ANR	1567723	AssignmentExpression	* ptr = ( sljit_uw * ) addr		1567716	2		=			
ANR	1567724	Identifier	ptr		1567716	0					
ANR	1567725	CastExpression	( sljit_uw * ) addr		1567716	1					
ANR	1567726	CastTarget	sljit_uw *		1567716	0					
ANR	1567727	Identifier	addr		1567716	1					
ANR	1567728	IdentifierDeclStatement	sljit_uw * inst = ( sljit_uw * ) ptr [ 0 ] ;	453:1:14390:14424	1567716	1	True				
ANR	1567729	IdentifierDecl	* inst = ( sljit_uw * ) ptr [ 0 ]		1567716	0					
ANR	1567730	IdentifierDeclType	sljit_uw *		1567716	0					
ANR	1567731	Identifier	inst		1567716	1					
ANR	1567732	AssignmentExpression	* inst = ( sljit_uw * ) ptr [ 0 ]		1567716	2		=			
ANR	1567733	Identifier	inst		1567716	0					
ANR	1567734	CastExpression	( sljit_uw * ) ptr [ 0 ]		1567716	1					
ANR	1567735	CastTarget	sljit_uw *		1567716	0					
ANR	1567736	ArrayIndexing	ptr [ 0 ]		1567716	1					
ANR	1567737	Identifier	ptr		1567716	0					
ANR	1567738	PrimaryExpression	0		1567716	1					
ANR	1567739	IdentifierDeclStatement	sljit_uw mov_pc = ptr [ 1 ] ;	454:1:14427:14451	1567716	2	True				
ANR	1567740	IdentifierDecl	mov_pc = ptr [ 1 ]		1567716	0					
ANR	1567741	IdentifierDeclType	sljit_uw		1567716	0					
ANR	1567742	Identifier	mov_pc		1567716	1					
ANR	1567743	AssignmentExpression	mov_pc = ptr [ 1 ]		1567716	2		=			
ANR	1567744	Identifier	mov_pc		1567716	0					
ANR	1567745	ArrayIndexing	ptr [ 1 ]		1567716	1					
ANR	1567746	Identifier	ptr		1567716	0					
ANR	1567747	PrimaryExpression	1		1567716	1					
ANR	1567748	IdentifierDeclStatement	sljit_si bl = ( mov_pc & 0x0000f000 ) != RD ( TMP_PC ) ;	455:1:14454:14503	1567716	3	True				
ANR	1567749	IdentifierDecl	bl = ( mov_pc & 0x0000f000 ) != RD ( TMP_PC )		1567716	0					
ANR	1567750	IdentifierDeclType	sljit_si		1567716	0					
ANR	1567751	Identifier	bl		1567716	1					
ANR	1567752	AssignmentExpression	bl = ( mov_pc & 0x0000f000 ) != RD ( TMP_PC )		1567716	2		=			
ANR	1567753	Identifier	bl		1567716	0					
ANR	1567754	EqualityExpression	( mov_pc & 0x0000f000 ) != RD ( TMP_PC )		1567716	1		!=			
ANR	1567755	BitAndExpression	mov_pc & 0x0000f000		1567716	0		&			
ANR	1567756	Identifier	mov_pc		1567716	0					
ANR	1567757	PrimaryExpression	0x0000f000		1567716	1					
ANR	1567758	CallExpression	RD ( TMP_PC )		1567716	1					
ANR	1567759	Callee	RD		1567716	0					
ANR	1567760	Identifier	RD		1567716	0					
ANR	1567761	ArgumentList	TMP_PC		1567716	1					
ANR	1567762	Argument	TMP_PC		1567716	0					
ANR	1567763	Identifier	TMP_PC		1567716	0					
ANR	1567764	IdentifierDeclStatement	sljit_sw diff = ( sljit_sw ) ( ( ( sljit_sw ) new_addr - ( sljit_sw ) ( inst + 2 ) ) >> 2 ) ;	456:1:14506:14582	1567716	4	True				
ANR	1567765	IdentifierDecl	diff = ( sljit_sw ) ( ( ( sljit_sw ) new_addr - ( sljit_sw ) ( inst + 2 ) ) >> 2 )		1567716	0					
ANR	1567766	IdentifierDeclType	sljit_sw		1567716	0					
ANR	1567767	Identifier	diff		1567716	1					
ANR	1567768	AssignmentExpression	diff = ( sljit_sw ) ( ( ( sljit_sw ) new_addr - ( sljit_sw ) ( inst + 2 ) ) >> 2 )		1567716	2		=			
ANR	1567769	Identifier	diff		1567716	0					
ANR	1567770	CastExpression	( sljit_sw ) ( ( ( sljit_sw ) new_addr - ( sljit_sw ) ( inst + 2 ) ) >> 2 )		1567716	1					
ANR	1567771	CastTarget	sljit_sw		1567716	0					
ANR	1567772	ShiftExpression	( ( sljit_sw ) new_addr - ( sljit_sw ) ( inst + 2 ) ) >> 2		1567716	1		>>			
ANR	1567773	AdditiveExpression	( sljit_sw ) new_addr - ( sljit_sw ) ( inst + 2 )		1567716	0		-			
ANR	1567774	CastExpression	( sljit_sw ) new_addr		1567716	0					
ANR	1567775	CastTarget	sljit_sw		1567716	0					
ANR	1567776	Identifier	new_addr		1567716	1					
ANR	1567777	CastExpression	( sljit_sw ) ( inst + 2 )		1567716	1					
ANR	1567778	CastTarget	sljit_sw		1567716	0					
ANR	1567779	AdditiveExpression	inst + 2		1567716	1		+			
ANR	1567780	Identifier	inst		1567716	0					
ANR	1567781	PrimaryExpression	2		1567716	1					
ANR	1567782	PrimaryExpression	2		1567716	1					
ANR	1567783	IfStatement	if ( diff <= 0x7fffff && diff >= - 0x800000 )		1567716	5					
ANR	1567784	Condition	diff <= 0x7fffff && diff >= - 0x800000	458:5:14590:14626	1567716	0	True				
ANR	1567785	AndExpression	diff <= 0x7fffff && diff >= - 0x800000		1567716	0		&&			
ANR	1567786	RelationalExpression	diff <= 0x7fffff		1567716	0		<=			
ANR	1567787	Identifier	diff		1567716	0					
ANR	1567788	PrimaryExpression	0x7fffff		1567716	1					
ANR	1567789	RelationalExpression	diff >= - 0x800000		1567716	1		>=			
ANR	1567790	Identifier	diff		1567716	0					
ANR	1567791	UnaryOperationExpression	- 0x800000		1567716	1					
ANR	1567792	UnaryOperator	-		1567716	0					
ANR	1567793	PrimaryExpression	0x800000		1567716	1					
ANR	1567794	CompoundStatement		9:44:332:332	1567716	1					
ANR	1567795	IfStatement	if ( ! bl )		1567716	0					
ANR	1567796	Condition	! bl	460:6:14661:14663	1567716	0	True				
ANR	1567797	UnaryOperationExpression	! bl		1567716	0					
ANR	1567798	UnaryOperator	!		1567716	0					
ANR	1567799	Identifier	bl		1567716	1					
ANR	1567800	CompoundStatement		11:11:369:369	1567716	1					
ANR	1567801	ExpressionStatement	inst [ 0 ] = ( mov_pc & COND_MASK ) | ( B - CONDITIONAL ) | ( diff & 0xffffff )	461:3:14671:14741	1567716	0	True				
ANR	1567802	AssignmentExpression	inst [ 0 ] = ( mov_pc & COND_MASK ) | ( B - CONDITIONAL ) | ( diff & 0xffffff )		1567716	0		=			
ANR	1567803	ArrayIndexing	inst [ 0 ]		1567716	0					
ANR	1567804	Identifier	inst		1567716	0					
ANR	1567805	PrimaryExpression	0		1567716	1					
ANR	1567806	InclusiveOrExpression	( mov_pc & COND_MASK ) | ( B - CONDITIONAL ) | ( diff & 0xffffff )		1567716	1		|			
ANR	1567807	BitAndExpression	mov_pc & COND_MASK		1567716	0		&			
ANR	1567808	Identifier	mov_pc		1567716	0					
ANR	1567809	Identifier	COND_MASK		1567716	1					
ANR	1567810	InclusiveOrExpression	( B - CONDITIONAL ) | ( diff & 0xffffff )		1567716	1		|			
ANR	1567811	AdditiveExpression	B - CONDITIONAL		1567716	0		-			
ANR	1567812	Identifier	B		1567716	0					
ANR	1567813	Identifier	CONDITIONAL		1567716	1					
ANR	1567814	BitAndExpression	diff & 0xffffff		1567716	1		&			
ANR	1567815	Identifier	diff		1567716	0					
ANR	1567816	PrimaryExpression	0xffffff		1567716	1					
ANR	1567817	IfStatement	if ( flush )		1567716	1					
ANR	1567818	Condition	flush	462:7:14750:14754	1567716	0	True				
ANR	1567819	Identifier	flush		1567716	0					
ANR	1567820	CompoundStatement		13:14:460:460	1567716	1					
ANR	1567821	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"	463:4:14763:14796	1567716	0	True				
ANR	1567822	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"		1567716	0					
ANR	1567823	Callee	SLJIT_CACHE_FLUSH		1567716	0					
ANR	1567824	Identifier	SLJIT_CACHE_FLUSH		1567716	0					
ANR	1567825	ArgumentList	inst		1567716	1					
ANR	1567826	Argument	inst		1567716	0					
ANR	1567827	Identifier	inst		1567716	0					
ANR	1567828	Argument	inst + 1		1567716	1					
ANR	1567829	AdditiveExpression	inst + 1		1567716	0		+			
ANR	1567830	Identifier	inst		1567716	0					
ANR	1567831	PrimaryExpression	1		1567716	1					
ANR	1567832	ElseStatement	else		1567716	0					
ANR	1567833	CompoundStatement		16:9:515:515	1567716	0					
ANR	1567834	ExpressionStatement	inst [ 0 ] = ( mov_pc & COND_MASK ) | ( BL - CONDITIONAL ) | ( diff & 0xffffff )	466:3:14817:14888	1567716	0	True				
ANR	1567835	AssignmentExpression	inst [ 0 ] = ( mov_pc & COND_MASK ) | ( BL - CONDITIONAL ) | ( diff & 0xffffff )		1567716	0		=			
ANR	1567836	ArrayIndexing	inst [ 0 ]		1567716	0					
ANR	1567837	Identifier	inst		1567716	0					
ANR	1567838	PrimaryExpression	0		1567716	1					
ANR	1567839	InclusiveOrExpression	( mov_pc & COND_MASK ) | ( BL - CONDITIONAL ) | ( diff & 0xffffff )		1567716	1		|			
ANR	1567840	BitAndExpression	mov_pc & COND_MASK		1567716	0		&			
ANR	1567841	Identifier	mov_pc		1567716	0					
ANR	1567842	Identifier	COND_MASK		1567716	1					
ANR	1567843	InclusiveOrExpression	( BL - CONDITIONAL ) | ( diff & 0xffffff )		1567716	1		|			
ANR	1567844	AdditiveExpression	BL - CONDITIONAL		1567716	0		-			
ANR	1567845	Identifier	BL		1567716	0					
ANR	1567846	Identifier	CONDITIONAL		1567716	1					
ANR	1567847	BitAndExpression	diff & 0xffffff		1567716	1		&			
ANR	1567848	Identifier	diff		1567716	0					
ANR	1567849	PrimaryExpression	0xffffff		1567716	1					
ANR	1567850	ExpressionStatement	inst [ 1 ] = NOP	467:3:14893:14906	1567716	1	True				
ANR	1567851	AssignmentExpression	inst [ 1 ] = NOP		1567716	0		=			
ANR	1567852	ArrayIndexing	inst [ 1 ]		1567716	0					
ANR	1567853	Identifier	inst		1567716	0					
ANR	1567854	PrimaryExpression	1		1567716	1					
ANR	1567855	Identifier	NOP		1567716	1					
ANR	1567856	IfStatement	if ( flush )		1567716	2					
ANR	1567857	Condition	flush	468:7:14915:14919	1567716	0	True				
ANR	1567858	Identifier	flush		1567716	0					
ANR	1567859	CompoundStatement		19:14:625:625	1567716	1					
ANR	1567860	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 2 )"	469:4:14928:14961	1567716	0	True				
ANR	1567861	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 2 )"		1567716	0					
ANR	1567862	Callee	SLJIT_CACHE_FLUSH		1567716	0					
ANR	1567863	Identifier	SLJIT_CACHE_FLUSH		1567716	0					
ANR	1567864	ArgumentList	inst		1567716	1					
ANR	1567865	Argument	inst		1567716	0					
ANR	1567866	Identifier	inst		1567716	0					
ANR	1567867	Argument	inst + 2		1567716	1					
ANR	1567868	AdditiveExpression	inst + 2		1567716	0		+			
ANR	1567869	Identifier	inst		1567716	0					
ANR	1567870	PrimaryExpression	2		1567716	1					
ANR	1567871	ElseStatement	else		1567716	0					
ANR	1567872	CompoundStatement		23:8:683:683	1567716	0					
ANR	1567873	IfStatement	if ( mov_pc & ( 1 << 23 ) )		1567716	0					
ANR	1567874	Condition	mov_pc & ( 1 << 23 )	474:6:15030:15047	1567716	0	True				
ANR	1567875	BitAndExpression	mov_pc & ( 1 << 23 )		1567716	0		&			
ANR	1567876	Identifier	mov_pc		1567716	0					
ANR	1567877	ShiftExpression	1 << 23		1567716	1		<<			
ANR	1567878	PrimaryExpression	1		1567716	0					
ANR	1567879	PrimaryExpression	23		1567716	1					
ANR	1567880	ExpressionStatement	ptr = inst + ( ( mov_pc & 0xfff ) >> 2 ) + 2	475:3:15053:15093	1567716	1	True				
ANR	1567881	AssignmentExpression	ptr = inst + ( ( mov_pc & 0xfff ) >> 2 ) + 2		1567716	0		=			
ANR	1567882	Identifier	ptr		1567716	0					
ANR	1567883	AdditiveExpression	inst + ( ( mov_pc & 0xfff ) >> 2 ) + 2		1567716	1		+			
ANR	1567884	Identifier	inst		1567716	0					
ANR	1567885	AdditiveExpression	( ( mov_pc & 0xfff ) >> 2 ) + 2		1567716	1		+			
ANR	1567886	ShiftExpression	( mov_pc & 0xfff ) >> 2		1567716	0		>>			
ANR	1567887	BitAndExpression	mov_pc & 0xfff		1567716	0		&			
ANR	1567888	Identifier	mov_pc		1567716	0					
ANR	1567889	PrimaryExpression	0xfff		1567716	1					
ANR	1567890	PrimaryExpression	2		1567716	1					
ANR	1567891	PrimaryExpression	2		1567716	1					
ANR	1567892	ElseStatement	else		1567716	0					
ANR	1567893	ExpressionStatement	ptr = inst + 1	477:3:15105:15119	1567716	0	True				
ANR	1567894	AssignmentExpression	ptr = inst + 1		1567716	0		=			
ANR	1567895	Identifier	ptr		1567716	0					
ANR	1567896	AdditiveExpression	inst + 1		1567716	1		+			
ANR	1567897	Identifier	inst		1567716	0					
ANR	1567898	PrimaryExpression	1		1567716	1					
ANR	1567899	IfStatement	if ( * inst != mov_pc )		1567716	1					
ANR	1567900	Condition	* inst != mov_pc	479:6:15128:15142	1567716	0	True				
ANR	1567901	EqualityExpression	* inst != mov_pc		1567716	0		!=			
ANR	1567902	UnaryOperationExpression	* inst		1567716	0					
ANR	1567903	UnaryOperator	*		1567716	0					
ANR	1567904	Identifier	inst		1567716	1					
ANR	1567905	Identifier	mov_pc		1567716	1					
ANR	1567906	CompoundStatement		30:23:848:848	1567716	1					
ANR	1567907	ExpressionStatement	inst [ 0 ] = mov_pc	480:3:15150:15166	1567716	0	True				
ANR	1567908	AssignmentExpression	inst [ 0 ] = mov_pc		1567716	0		=			
ANR	1567909	ArrayIndexing	inst [ 0 ]		1567716	0					
ANR	1567910	Identifier	inst		1567716	0					
ANR	1567911	PrimaryExpression	0		1567716	1					
ANR	1567912	Identifier	mov_pc		1567716	1					
ANR	1567913	IfStatement	if ( ! bl )		1567716	1					
ANR	1567914	Condition	! bl	481:7:15175:15177	1567716	0	True				
ANR	1567915	UnaryOperationExpression	! bl		1567716	0					
ANR	1567916	UnaryOperator	!		1567716	0					
ANR	1567917	Identifier	bl		1567716	1					
ANR	1567918	CompoundStatement		32:12:883:883	1567716	1					
ANR	1567919	IfStatement	if ( flush )		1567716	0					
ANR	1567920	Condition	flush	482:8:15190:15194	1567716	0	True				
ANR	1567921	Identifier	flush		1567716	0					
ANR	1567922	CompoundStatement		33:15:900:900	1567716	1					
ANR	1567923	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"	483:5:15204:15237	1567716	0	True				
ANR	1567924	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"		1567716	0					
ANR	1567925	Callee	SLJIT_CACHE_FLUSH		1567716	0					
ANR	1567926	Identifier	SLJIT_CACHE_FLUSH		1567716	0					
ANR	1567927	ArgumentList	inst		1567716	1					
ANR	1567928	Argument	inst		1567716	0					
ANR	1567929	Identifier	inst		1567716	0					
ANR	1567930	Argument	inst + 1		1567716	1					
ANR	1567931	AdditiveExpression	inst + 1		1567716	0		+			
ANR	1567932	Identifier	inst		1567716	0					
ANR	1567933	PrimaryExpression	1		1567716	1					
ANR	1567934	ElseStatement	else		1567716	0					
ANR	1567935	CompoundStatement		36:10:958:958	1567716	0					
ANR	1567936	ExpressionStatement	inst [ 1 ] = BLX | RM ( TMP_REG1 )	486:4:15261:15289	1567716	0	True				
ANR	1567937	AssignmentExpression	inst [ 1 ] = BLX | RM ( TMP_REG1 )		1567716	0		=			
ANR	1567938	ArrayIndexing	inst [ 1 ]		1567716	0					
ANR	1567939	Identifier	inst		1567716	0					
ANR	1567940	PrimaryExpression	1		1567716	1					
ANR	1567941	InclusiveOrExpression	BLX | RM ( TMP_REG1 )		1567716	1		|			
ANR	1567942	Identifier	BLX		1567716	0					
ANR	1567943	CallExpression	RM ( TMP_REG1 )		1567716	1					
ANR	1567944	Callee	RM		1567716	0					
ANR	1567945	Identifier	RM		1567716	0					
ANR	1567946	ArgumentList	TMP_REG1		1567716	1					
ANR	1567947	Argument	TMP_REG1		1567716	0					
ANR	1567948	Identifier	TMP_REG1		1567716	0					
ANR	1567949	IfStatement	if ( flush )		1567716	1					
ANR	1567950	Condition	flush	487:8:15299:15303	1567716	0	True				
ANR	1567951	Identifier	flush		1567716	0					
ANR	1567952	CompoundStatement		38:15:1009:1009	1567716	1					
ANR	1567953	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 2 )"	488:5:15313:15346	1567716	0	True				
ANR	1567954	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 2 )"		1567716	0					
ANR	1567955	Callee	SLJIT_CACHE_FLUSH		1567716	0					
ANR	1567956	Identifier	SLJIT_CACHE_FLUSH		1567716	0					
ANR	1567957	ArgumentList	inst		1567716	1					
ANR	1567958	Argument	inst		1567716	0					
ANR	1567959	Identifier	inst		1567716	0					
ANR	1567960	Argument	inst + 2		1567716	1					
ANR	1567961	AdditiveExpression	inst + 2		1567716	0		+			
ANR	1567962	Identifier	inst		1567716	0					
ANR	1567963	PrimaryExpression	2		1567716	1					
ANR	1567964	ExpressionStatement	* ptr = new_addr	492:2:15365:15380	1567716	2	True				
ANR	1567965	AssignmentExpression	* ptr = new_addr		1567716	0		=			
ANR	1567966	UnaryOperationExpression	* ptr		1567716	0					
ANR	1567967	UnaryOperator	*		1567716	0					
ANR	1567968	Identifier	ptr		1567716	1					
ANR	1567969	Identifier	new_addr		1567716	1					
ANR	1567970	ReturnType	static SLJIT_INLINE void		1567716	1					
ANR	1567971	Identifier	inline_set_jump_addr		1567716	2					
ANR	1567972	ParameterList	"sljit_uw addr , sljit_uw new_addr , sljit_si flush"		1567716	3					
ANR	1567973	Parameter	sljit_uw addr	449:46:14246:14258	1567716	0	True				
ANR	1567974	ParameterType	sljit_uw		1567716	0					
ANR	1567975	Identifier	addr		1567716	1					
ANR	1567976	Parameter	sljit_uw new_addr	449:61:14261:14277	1567716	1	True				
ANR	1567977	ParameterType	sljit_uw		1567716	0					
ANR	1567978	Identifier	new_addr		1567716	1					
ANR	1567979	Parameter	sljit_si flush	449:80:14280:14293	1567716	2	True				
ANR	1567980	ParameterType	sljit_si		1567716	0					
ANR	1567981	Identifier	flush		1567716	1					
ANR	1567982	CFGEntryNode	ENTRY		1567716		True				
ANR	1567983	CFGExitNode	EXIT		1567716		True				
ANR	1567984	Symbol	TMP_PC		1567716						
ANR	1567985	Symbol	B		1567716						
ANR	1567986	Symbol	TMP_REG1		1567716						
ANR	1567987	Symbol	* inst		1567716						
ANR	1567988	Symbol	bl		1567716						
ANR	1567989	Symbol	diff		1567716						
ANR	1567990	Symbol	BL		1567716						
ANR	1567991	Symbol	mov_pc		1567716						
ANR	1567992	Symbol	NOP		1567716						
ANR	1567993	Symbol	ptr		1567716						
ANR	1567994	Symbol	BLX		1567716						
ANR	1567995	Symbol	CONDITIONAL		1567716						
ANR	1567996	Symbol	RD		1567716						
ANR	1567997	Symbol	flush		1567716						
ANR	1567998	Symbol	inst		1567716						
ANR	1567999	Symbol	* ptr		1567716						
ANR	1568000	Symbol	RM		1567716						
ANR	1568001	Symbol	addr		1567716						
ANR	1568002	Symbol	COND_MASK		1567716						
ANR	1568003	Symbol	new_addr		1567716						
ANR	1568004	DeclStmt									
ANR	1568005	Decl							sljit_uw	sljit_uw ( sljit_uw imm )	get_imm
ANR	1568006	Function	inline_set_const	507:0:15798:17036							
ANR	1568007	FunctionDef	"inline_set_const (sljit_uw addr , sljit_sw new_constant , sljit_si flush)"		1568006	0					
ANR	1568008	CompoundStatement		508:0:15894:17036	1568006	0					
ANR	1568009	IdentifierDeclStatement	sljit_uw * ptr = ( sljit_uw * ) addr ;	510:1:15954:15985	1568006	0	True				
ANR	1568010	IdentifierDecl	* ptr = ( sljit_uw * ) addr		1568006	0					
ANR	1568011	IdentifierDeclType	sljit_uw *		1568006	0					
ANR	1568012	Identifier	ptr		1568006	1					
ANR	1568013	AssignmentExpression	* ptr = ( sljit_uw * ) addr		1568006	2		=			
ANR	1568014	Identifier	ptr		1568006	0					
ANR	1568015	CastExpression	( sljit_uw * ) addr		1568006	1					
ANR	1568016	CastTarget	sljit_uw *		1568006	0					
ANR	1568017	Identifier	addr		1568006	1					
ANR	1568018	IdentifierDeclStatement	sljit_uw * inst = ( sljit_uw * ) ptr [ 0 ] ;	511:1:15988:16022	1568006	1	True				
ANR	1568019	IdentifierDecl	* inst = ( sljit_uw * ) ptr [ 0 ]		1568006	0					
ANR	1568020	IdentifierDeclType	sljit_uw *		1568006	0					
ANR	1568021	Identifier	inst		1568006	1					
ANR	1568022	AssignmentExpression	* inst = ( sljit_uw * ) ptr [ 0 ]		1568006	2		=			
ANR	1568023	Identifier	inst		1568006	0					
ANR	1568024	CastExpression	( sljit_uw * ) ptr [ 0 ]		1568006	1					
ANR	1568025	CastTarget	sljit_uw *		1568006	0					
ANR	1568026	ArrayIndexing	ptr [ 0 ]		1568006	1					
ANR	1568027	Identifier	ptr		1568006	0					
ANR	1568028	PrimaryExpression	0		1568006	1					
ANR	1568029	IdentifierDeclStatement	sljit_uw ldr_literal = ptr [ 1 ] ;	512:1:16025:16054	1568006	2	True				
ANR	1568030	IdentifierDecl	ldr_literal = ptr [ 1 ]		1568006	0					
ANR	1568031	IdentifierDeclType	sljit_uw		1568006	0					
ANR	1568032	Identifier	ldr_literal		1568006	1					
ANR	1568033	AssignmentExpression	ldr_literal = ptr [ 1 ]		1568006	2		=			
ANR	1568034	Identifier	ldr_literal		1568006	0					
ANR	1568035	ArrayIndexing	ptr [ 1 ]		1568006	1					
ANR	1568036	Identifier	ptr		1568006	0					
ANR	1568037	PrimaryExpression	1		1568006	1					
ANR	1568038	IdentifierDeclStatement	sljit_uw src2 ;	513:1:16057:16070	1568006	3	True				
ANR	1568039	IdentifierDecl	src2		1568006	0					
ANR	1568040	IdentifierDeclType	sljit_uw		1568006	0					
ANR	1568041	Identifier	src2		1568006	1					
ANR	1568042	ExpressionStatement	src2 = get_imm ( new_constant )	515:1:16074:16102	1568006	4	True				
ANR	1568043	AssignmentExpression	src2 = get_imm ( new_constant )		1568006	0		=			
ANR	1568044	Identifier	src2		1568006	0					
ANR	1568045	CallExpression	get_imm ( new_constant )		1568006	1					
ANR	1568046	Callee	get_imm		1568006	0					
ANR	1568047	Identifier	get_imm		1568006	0					
ANR	1568048	ArgumentList	new_constant		1568006	1					
ANR	1568049	Argument	new_constant		1568006	0					
ANR	1568050	Identifier	new_constant		1568006	0					
ANR	1568051	IfStatement	if ( src2 )		1568006	5					
ANR	1568052	Condition	src2	516:5:16109:16112	1568006	0	True				
ANR	1568053	Identifier	src2		1568006	0					
ANR	1568054	CompoundStatement		9:11:220:220	1568006	1					
ANR	1568055	ExpressionStatement	* inst = 0xe3a00000 | ( ldr_literal & 0xf000 ) | src2	517:2:16119:16169	1568006	0	True				
ANR	1568056	AssignmentExpression	* inst = 0xe3a00000 | ( ldr_literal & 0xf000 ) | src2		1568006	0		=			
ANR	1568057	UnaryOperationExpression	* inst		1568006	0					
ANR	1568058	UnaryOperator	*		1568006	0					
ANR	1568059	Identifier	inst		1568006	1					
ANR	1568060	InclusiveOrExpression	0xe3a00000 | ( ldr_literal & 0xf000 ) | src2		1568006	1		|			
ANR	1568061	PrimaryExpression	0xe3a00000		1568006	0					
ANR	1568062	InclusiveOrExpression	( ldr_literal & 0xf000 ) | src2		1568006	1		|			
ANR	1568063	BitAndExpression	ldr_literal & 0xf000		1568006	0		&			
ANR	1568064	Identifier	ldr_literal		1568006	0					
ANR	1568065	PrimaryExpression	0xf000		1568006	1					
ANR	1568066	Identifier	src2		1568006	1					
ANR	1568067	IfStatement	if ( flush )		1568006	1					
ANR	1568068	Condition	flush	518:6:16177:16181	1568006	0	True				
ANR	1568069	Identifier	flush		1568006	0					
ANR	1568070	CompoundStatement		11:13:289:289	1568006	1					
ANR	1568071	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"	519:3:16189:16222	1568006	0	True				
ANR	1568072	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"		1568006	0					
ANR	1568073	Callee	SLJIT_CACHE_FLUSH		1568006	0					
ANR	1568074	Identifier	SLJIT_CACHE_FLUSH		1568006	0					
ANR	1568075	ArgumentList	inst		1568006	1					
ANR	1568076	Argument	inst		1568006	0					
ANR	1568077	Identifier	inst		1568006	0					
ANR	1568078	Argument	inst + 1		1568006	1					
ANR	1568079	AdditiveExpression	inst + 1		1568006	0		+			
ANR	1568080	Identifier	inst		1568006	0					
ANR	1568081	PrimaryExpression	1		1568006	1					
ANR	1568082	ReturnStatement	return ;	521:2:16230:16236	1568006	2	True				
ANR	1568083	ExpressionStatement	src2 = get_imm ( ~new_constant )	524:1:16243:16272	1568006	6	True				
ANR	1568084	AssignmentExpression	src2 = get_imm ( ~new_constant )		1568006	0		=			
ANR	1568085	Identifier	src2		1568006	0					
ANR	1568086	CallExpression	get_imm ( ~new_constant )		1568006	1					
ANR	1568087	Callee	get_imm		1568006	0					
ANR	1568088	Identifier	get_imm		1568006	0					
ANR	1568089	ArgumentList	~new_constant		1568006	1					
ANR	1568090	Argument	~new_constant		1568006	0					
ANR	1568091	Identifier	~new_constant		1568006	0					
ANR	1568092	IfStatement	if ( src2 )		1568006	7					
ANR	1568093	Condition	src2	525:5:16279:16282	1568006	0	True				
ANR	1568094	Identifier	src2		1568006	0					
ANR	1568095	CompoundStatement		18:11:390:390	1568006	1					
ANR	1568096	ExpressionStatement	* inst = 0xe3e00000 | ( ldr_literal & 0xf000 ) | src2	526:2:16289:16339	1568006	0	True				
ANR	1568097	AssignmentExpression	* inst = 0xe3e00000 | ( ldr_literal & 0xf000 ) | src2		1568006	0		=			
ANR	1568098	UnaryOperationExpression	* inst		1568006	0					
ANR	1568099	UnaryOperator	*		1568006	0					
ANR	1568100	Identifier	inst		1568006	1					
ANR	1568101	InclusiveOrExpression	0xe3e00000 | ( ldr_literal & 0xf000 ) | src2		1568006	1		|			
ANR	1568102	PrimaryExpression	0xe3e00000		1568006	0					
ANR	1568103	InclusiveOrExpression	( ldr_literal & 0xf000 ) | src2		1568006	1		|			
ANR	1568104	BitAndExpression	ldr_literal & 0xf000		1568006	0		&			
ANR	1568105	Identifier	ldr_literal		1568006	0					
ANR	1568106	PrimaryExpression	0xf000		1568006	1					
ANR	1568107	Identifier	src2		1568006	1					
ANR	1568108	IfStatement	if ( flush )		1568006	1					
ANR	1568109	Condition	flush	527:6:16347:16351	1568006	0	True				
ANR	1568110	Identifier	flush		1568006	0					
ANR	1568111	CompoundStatement		20:13:459:459	1568006	1					
ANR	1568112	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"	528:3:16359:16392	1568006	0	True				
ANR	1568113	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"		1568006	0					
ANR	1568114	Callee	SLJIT_CACHE_FLUSH		1568006	0					
ANR	1568115	Identifier	SLJIT_CACHE_FLUSH		1568006	0					
ANR	1568116	ArgumentList	inst		1568006	1					
ANR	1568117	Argument	inst		1568006	0					
ANR	1568118	Identifier	inst		1568006	0					
ANR	1568119	Argument	inst + 1		1568006	1					
ANR	1568120	AdditiveExpression	inst + 1		1568006	0		+			
ANR	1568121	Identifier	inst		1568006	0					
ANR	1568122	PrimaryExpression	1		1568006	1					
ANR	1568123	ReturnStatement	return ;	530:2:16400:16406	1568006	2	True				
ANR	1568124	IfStatement	if ( ldr_literal & ( 1 << 23 ) )		1568006	8					
ANR	1568125	Condition	ldr_literal & ( 1 << 23 )	533:5:16417:16439	1568006	0	True				
ANR	1568126	BitAndExpression	ldr_literal & ( 1 << 23 )		1568006	0		&			
ANR	1568127	Identifier	ldr_literal		1568006	0					
ANR	1568128	ShiftExpression	1 << 23		1568006	1		<<			
ANR	1568129	PrimaryExpression	1		1568006	0					
ANR	1568130	PrimaryExpression	23		1568006	1					
ANR	1568131	ExpressionStatement	ptr = inst + ( ( ldr_literal & 0xfff ) >> 2 ) + 2	534:2:16444:16489	1568006	1	True				
ANR	1568132	AssignmentExpression	ptr = inst + ( ( ldr_literal & 0xfff ) >> 2 ) + 2		1568006	0		=			
ANR	1568133	Identifier	ptr		1568006	0					
ANR	1568134	AdditiveExpression	inst + ( ( ldr_literal & 0xfff ) >> 2 ) + 2		1568006	1		+			
ANR	1568135	Identifier	inst		1568006	0					
ANR	1568136	AdditiveExpression	( ( ldr_literal & 0xfff ) >> 2 ) + 2		1568006	1		+			
ANR	1568137	ShiftExpression	( ldr_literal & 0xfff ) >> 2		1568006	0		>>			
ANR	1568138	BitAndExpression	ldr_literal & 0xfff		1568006	0		&			
ANR	1568139	Identifier	ldr_literal		1568006	0					
ANR	1568140	PrimaryExpression	0xfff		1568006	1					
ANR	1568141	PrimaryExpression	2		1568006	1					
ANR	1568142	PrimaryExpression	2		1568006	1					
ANR	1568143	ElseStatement	else		1568006	0					
ANR	1568144	ExpressionStatement	ptr = inst + 1	536:2:16499:16513	1568006	0	True				
ANR	1568145	AssignmentExpression	ptr = inst + 1		1568006	0		=			
ANR	1568146	Identifier	ptr		1568006	0					
ANR	1568147	AdditiveExpression	inst + 1		1568006	1		+			
ANR	1568148	Identifier	inst		1568006	0					
ANR	1568149	PrimaryExpression	1		1568006	1					
ANR	1568150	IfStatement	if ( * inst != ldr_literal )		1568006	9					
ANR	1568151	Condition	* inst != ldr_literal	538:5:16521:16540	1568006	0	True				
ANR	1568152	EqualityExpression	* inst != ldr_literal		1568006	0		!=			
ANR	1568153	UnaryOperationExpression	* inst		1568006	0					
ANR	1568154	UnaryOperator	*		1568006	0					
ANR	1568155	Identifier	inst		1568006	1					
ANR	1568156	Identifier	ldr_literal		1568006	1					
ANR	1568157	CompoundStatement		31:27:648:648	1568006	1					
ANR	1568158	ExpressionStatement	* inst = ldr_literal	539:2:16547:16566	1568006	0	True				
ANR	1568159	AssignmentExpression	* inst = ldr_literal		1568006	0		=			
ANR	1568160	UnaryOperationExpression	* inst		1568006	0					
ANR	1568161	UnaryOperator	*		1568006	0					
ANR	1568162	Identifier	inst		1568006	1					
ANR	1568163	Identifier	ldr_literal		1568006	1					
ANR	1568164	IfStatement	if ( flush )		1568006	1					
ANR	1568165	Condition	flush	540:6:16574:16578	1568006	0	True				
ANR	1568166	Identifier	flush		1568006	0					
ANR	1568167	CompoundStatement		33:13:686:686	1568006	1					
ANR	1568168	ExpressionStatement	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"	541:3:16586:16619	1568006	0	True				
ANR	1568169	CallExpression	"SLJIT_CACHE_FLUSH ( inst , inst + 1 )"		1568006	0					
ANR	1568170	Callee	SLJIT_CACHE_FLUSH		1568006	0					
ANR	1568171	Identifier	SLJIT_CACHE_FLUSH		1568006	0					
ANR	1568172	ArgumentList	inst		1568006	1					
ANR	1568173	Argument	inst		1568006	0					
ANR	1568174	Identifier	inst		1568006	0					
ANR	1568175	Argument	inst + 1		1568006	1					
ANR	1568176	AdditiveExpression	inst + 1		1568006	0		+			
ANR	1568177	Identifier	inst		1568006	0					
ANR	1568178	PrimaryExpression	1		1568006	1					
ANR	1568179	ExpressionStatement	* ptr = new_constant	544:1:16629:16648	1568006	10	True				
ANR	1568180	AssignmentExpression	* ptr = new_constant		1568006	0		=			
ANR	1568181	UnaryOperationExpression	* ptr		1568006	0					
ANR	1568182	UnaryOperator	*		1568006	0					
ANR	1568183	Identifier	ptr		1568006	1					
ANR	1568184	Identifier	new_constant		1568006	1					
ANR	1568185	ReturnType	static SLJIT_INLINE void		1568006	1					
ANR	1568186	Identifier	inline_set_const		1568006	2					
ANR	1568187	ParameterList	"sljit_uw addr , sljit_sw new_constant , sljit_si flush"		1568006	3					
ANR	1568188	Parameter	sljit_uw addr	507:42:15840:15852	1568006	0	True				
ANR	1568189	ParameterType	sljit_uw		1568006	0					
ANR	1568190	Identifier	addr		1568006	1					
ANR	1568191	Parameter	sljit_sw new_constant	507:57:15855:15875	1568006	1	True				
ANR	1568192	ParameterType	sljit_sw		1568006	0					
ANR	1568193	Identifier	new_constant		1568006	1					
ANR	1568194	Parameter	sljit_si flush	507:80:15878:15891	1568006	2	True				
ANR	1568195	ParameterType	sljit_si		1568006	0					
ANR	1568196	Identifier	flush		1568006	1					
ANR	1568197	CFGEntryNode	ENTRY		1568006		True				
ANR	1568198	CFGExitNode	EXIT		1568006		True				
ANR	1568199	Symbol	new_constant		1568006						
ANR	1568200	Symbol	* inst		1568006						
ANR	1568201	Symbol	flush		1568006						
ANR	1568202	Symbol	inst		1568006						
ANR	1568203	Symbol	* ptr		1568006						
ANR	1568204	Symbol	get_imm		1568006						
ANR	1568205	Symbol	src2		1568006						
ANR	1568206	Symbol	addr		1568006						
ANR	1568207	Symbol	~new_constant		1568006						
ANR	1568208	Symbol	ldr_literal		1568006						
ANR	1568209	Symbol	ptr		1568006						
ANR	1568210	Function	sljit_generate_code	556:0:17039:24541							
ANR	1568211	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1568210	0					
ANR	1568212	CompoundStatement		557:0:17123:24541	1568210	0					
ANR	1568213	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	558:1:17126:17159	1568210	0	True				
ANR	1568214	IdentifierDecl	* buf		1568210	0					
ANR	1568215	IdentifierDeclType	struct sljit_memory_fragment *		1568210	0					
ANR	1568216	Identifier	buf		1568210	1					
ANR	1568217	IdentifierDeclStatement	sljit_uw * code ;	559:1:17162:17176	1568210	1	True				
ANR	1568218	IdentifierDecl	* code		1568210	0					
ANR	1568219	IdentifierDeclType	sljit_uw *		1568210	0					
ANR	1568220	Identifier	code		1568210	1					
ANR	1568221	IdentifierDeclStatement	sljit_uw * code_ptr ;	560:1:17179:17197	1568210	2	True				
ANR	1568222	IdentifierDecl	* code_ptr		1568210	0					
ANR	1568223	IdentifierDeclType	sljit_uw *		1568210	0					
ANR	1568224	Identifier	code_ptr		1568210	1					
ANR	1568225	IdentifierDeclStatement	sljit_uw * buf_ptr ;	561:1:17200:17217	1568210	3	True				
ANR	1568226	IdentifierDecl	* buf_ptr		1568210	0					
ANR	1568227	IdentifierDeclType	sljit_uw *		1568210	0					
ANR	1568228	Identifier	buf_ptr		1568210	1					
ANR	1568229	IdentifierDeclStatement	sljit_uw * buf_end ;	562:1:17220:17237	1568210	4	True				
ANR	1568230	IdentifierDecl	* buf_end		1568210	0					
ANR	1568231	IdentifierDeclType	sljit_uw *		1568210	0					
ANR	1568232	Identifier	buf_end		1568210	1					
ANR	1568233	IdentifierDeclStatement	sljit_uw size ;	563:1:17240:17253	1568210	5	True				
ANR	1568234	IdentifierDecl	size		1568210	0					
ANR	1568235	IdentifierDeclType	sljit_uw		1568210	0					
ANR	1568236	Identifier	size		1568210	1					
ANR	1568237	IdentifierDeclStatement	sljit_uw word_count ;	564:1:17256:17275	1568210	6	True				
ANR	1568238	IdentifierDecl	word_count		1568210	0					
ANR	1568239	IdentifierDeclType	sljit_uw		1568210	0					
ANR	1568240	Identifier	word_count		1568210	1					
ANR	1568241	IdentifierDeclStatement	sljit_uw cpool_size ;	566:1:17335:17354	1568210	7	True				
ANR	1568242	IdentifierDecl	cpool_size		1568210	0					
ANR	1568243	IdentifierDeclType	sljit_uw		1568210	0					
ANR	1568244	Identifier	cpool_size		1568210	1					
ANR	1568245	IdentifierDeclStatement	sljit_uw cpool_skip_alignment ;	567:1:17357:17386	1568210	8	True				
ANR	1568246	IdentifierDecl	cpool_skip_alignment		1568210	0					
ANR	1568247	IdentifierDeclType	sljit_uw		1568210	0					
ANR	1568248	Identifier	cpool_skip_alignment		1568210	1					
ANR	1568249	IdentifierDeclStatement	sljit_uw cpool_current_index ;	568:1:17389:17417	1568210	9	True				
ANR	1568250	IdentifierDecl	cpool_current_index		1568210	0					
ANR	1568251	IdentifierDeclType	sljit_uw		1568210	0					
ANR	1568252	Identifier	cpool_current_index		1568210	1					
ANR	1568253	IdentifierDeclStatement	sljit_uw * cpool_start_address ;	569:1:17420:17449	1568210	10	True				
ANR	1568254	IdentifierDecl	* cpool_start_address		1568210	0					
ANR	1568255	IdentifierDeclType	sljit_uw *		1568210	0					
ANR	1568256	Identifier	cpool_start_address		1568210	1					
ANR	1568257	IdentifierDeclStatement	sljit_uw * last_pc_patch ;	570:1:17452:17475	1568210	11	True				
ANR	1568258	IdentifierDecl	* last_pc_patch		1568210	0					
ANR	1568259	IdentifierDeclType	sljit_uw *		1568210	0					
ANR	1568260	Identifier	last_pc_patch		1568210	1					
ANR	1568261	IdentifierDeclStatement	struct future_patch * first_patch ;	571:1:17478:17510	1568210	12	True				
ANR	1568262	IdentifierDecl	* first_patch		1568210	0					
ANR	1568263	IdentifierDeclType	struct future_patch *		1568210	0					
ANR	1568264	Identifier	first_patch		1568210	1					
ANR	1568265	IdentifierDeclStatement	struct sljit_label * label ;	574:1:17521:17546	1568210	13	True				
ANR	1568266	IdentifierDecl	* label		1568210	0					
ANR	1568267	IdentifierDeclType	struct sljit_label *		1568210	0					
ANR	1568268	Identifier	label		1568210	1					
ANR	1568269	IdentifierDeclStatement	struct sljit_jump * jump ;	575:1:17549:17572	1568210	14	True				
ANR	1568270	IdentifierDecl	* jump		1568210	0					
ANR	1568271	IdentifierDeclType	struct sljit_jump *		1568210	0					
ANR	1568272	Identifier	jump		1568210	1					
ANR	1568273	IdentifierDeclStatement	struct sljit_const * const_ ;	576:1:17575:17601	1568210	15	True				
ANR	1568274	IdentifierDecl	* const_		1568210	0					
ANR	1568275	IdentifierDeclType	struct sljit_const *		1568210	0					
ANR	1568276	Identifier	const_		1568210	1					
ANR	1568277	ExpressionStatement	CHECK_ERROR_PTR ( )	578:1:17605:17622	1568210	16	True				
ANR	1568278	CallExpression	CHECK_ERROR_PTR ( )		1568210	0					
ANR	1568279	Callee	CHECK_ERROR_PTR		1568210	0					
ANR	1568280	Identifier	CHECK_ERROR_PTR		1568210	0					
ANR	1568281	ArgumentList			1568210	1					
ANR	1568282	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	579:1:17625:17671	1568210	17	True				
ANR	1568283	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1568210	0					
ANR	1568284	Callee	CHECK_PTR		1568210	0					
ANR	1568285	Identifier	CHECK_PTR		1568210	0					
ANR	1568286	ArgumentList	check_sljit_generate_code ( compiler )		1568210	1					
ANR	1568287	Argument	check_sljit_generate_code ( compiler )		1568210	0					
ANR	1568288	CallExpression	check_sljit_generate_code ( compiler )		1568210	0					
ANR	1568289	Callee	check_sljit_generate_code		1568210	0					
ANR	1568290	Identifier	check_sljit_generate_code		1568210	0					
ANR	1568291	ArgumentList	compiler		1568210	1					
ANR	1568292	Argument	compiler		1568210	0					
ANR	1568293	Identifier	compiler		1568210	0					
ANR	1568294	ExpressionStatement	reverse_buf ( compiler )	580:1:17674:17695	1568210	18	True				
ANR	1568295	CallExpression	reverse_buf ( compiler )		1568210	0					
ANR	1568296	Callee	reverse_buf		1568210	0					
ANR	1568297	Identifier	reverse_buf		1568210	0					
ANR	1568298	ArgumentList	compiler		1568210	1					
ANR	1568299	Argument	compiler		1568210	0					
ANR	1568300	Identifier	compiler		1568210	0					
ANR	1568301	ExpressionStatement	size = compiler -> size + ( compiler -> patches << 1 )	584:1:17792:17840	1568210	19	True				
ANR	1568302	AssignmentExpression	size = compiler -> size + ( compiler -> patches << 1 )		1568210	0		=			
ANR	1568303	Identifier	size		1568210	0					
ANR	1568304	AdditiveExpression	compiler -> size + ( compiler -> patches << 1 )		1568210	1		+			
ANR	1568305	PtrMemberAccess	compiler -> size		1568210	0					
ANR	1568306	Identifier	compiler		1568210	0					
ANR	1568307	Identifier	size		1568210	1					
ANR	1568308	ShiftExpression	compiler -> patches << 1		1568210	1		<<			
ANR	1568309	PtrMemberAccess	compiler -> patches		1568210	0					
ANR	1568310	Identifier	compiler		1568210	0					
ANR	1568311	Identifier	patches		1568210	1					
ANR	1568312	PrimaryExpression	1		1568210	1					
ANR	1568313	IfStatement	if ( compiler -> cpool_fill > 0 )		1568210	20					
ANR	1568314	Condition	compiler -> cpool_fill > 0	585:5:17847:17870	1568210	0	True				
ANR	1568315	RelationalExpression	compiler -> cpool_fill > 0		1568210	0		>			
ANR	1568316	PtrMemberAccess	compiler -> cpool_fill		1568210	0					
ANR	1568317	Identifier	compiler		1568210	0					
ANR	1568318	Identifier	cpool_fill		1568210	1					
ANR	1568319	PrimaryExpression	0		1568210	1					
ANR	1568320	ExpressionStatement	size += compiler -> cpool_fill + CONST_POOL_ALIGNMENT - 1	586:2:17875:17930	1568210	1	True				
ANR	1568321	AssignmentExpression	size += compiler -> cpool_fill + CONST_POOL_ALIGNMENT - 1		1568210	0		+=			
ANR	1568322	Identifier	size		1568210	0					
ANR	1568323	AdditiveExpression	compiler -> cpool_fill + CONST_POOL_ALIGNMENT - 1		1568210	1		+			
ANR	1568324	PtrMemberAccess	compiler -> cpool_fill		1568210	0					
ANR	1568325	Identifier	compiler		1568210	0					
ANR	1568326	Identifier	cpool_fill		1568210	1					
ANR	1568327	AdditiveExpression	CONST_POOL_ALIGNMENT - 1		1568210	1		-			
ANR	1568328	Identifier	CONST_POOL_ALIGNMENT		1568210	0					
ANR	1568329	PrimaryExpression	1		1568210	1					
ANR	1568330	ExpressionStatement	code = ( sljit_uw * ) SLJIT_MALLOC_EXEC ( size * sizeof ( sljit_uw ) )	590:1:17970:18030	1568210	21	True				
ANR	1568331	AssignmentExpression	code = ( sljit_uw * ) SLJIT_MALLOC_EXEC ( size * sizeof ( sljit_uw ) )		1568210	0		=			
ANR	1568332	Identifier	code		1568210	0					
ANR	1568333	CastExpression	( sljit_uw * ) SLJIT_MALLOC_EXEC ( size * sizeof ( sljit_uw ) )		1568210	1					
ANR	1568334	CastTarget	sljit_uw *		1568210	0					
ANR	1568335	CallExpression	SLJIT_MALLOC_EXEC ( size * sizeof ( sljit_uw ) )		1568210	1					
ANR	1568336	Callee	SLJIT_MALLOC_EXEC		1568210	0					
ANR	1568337	Identifier	SLJIT_MALLOC_EXEC		1568210	0					
ANR	1568338	ArgumentList	size * sizeof ( sljit_uw )		1568210	1					
ANR	1568339	Argument	size * sizeof ( sljit_uw )		1568210	0					
ANR	1568340	MultiplicativeExpression	size * sizeof ( sljit_uw )		1568210	0		*			
ANR	1568341	Identifier	size		1568210	0					
ANR	1568342	SizeofExpression	sizeof ( sljit_uw )		1568210	1					
ANR	1568343	Sizeof	sizeof		1568210	0					
ANR	1568344	SizeofOperand	sljit_uw		1568210	1					
ANR	1568345	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	591:1:18033:18060	1568210	22	True				
ANR	1568346	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1568210	0					
ANR	1568347	Callee	PTR_FAIL_WITH_EXEC_IF		1568210	0					
ANR	1568348	Identifier	PTR_FAIL_WITH_EXEC_IF		1568210	0					
ANR	1568349	ArgumentList	code		1568210	1					
ANR	1568350	Argument	code		1568210	0					
ANR	1568351	Identifier	code		1568210	0					
ANR	1568352	ExpressionStatement	buf = compiler -> buf	592:1:18063:18082	1568210	23	True				
ANR	1568353	AssignmentExpression	buf = compiler -> buf		1568210	0		=			
ANR	1568354	Identifier	buf		1568210	0					
ANR	1568355	PtrMemberAccess	compiler -> buf		1568210	1					
ANR	1568356	Identifier	compiler		1568210	0					
ANR	1568357	Identifier	buf		1568210	1					
ANR	1568358	ExpressionStatement	cpool_size = 0	595:1:18143:18157	1568210	24	True				
ANR	1568359	AssignmentExpression	cpool_size = 0		1568210	0		=			
ANR	1568360	Identifier	cpool_size		1568210	0					
ANR	1568361	PrimaryExpression	0		1568210	1					
ANR	1568362	ExpressionStatement	cpool_skip_alignment = 0	596:1:18160:18184	1568210	25	True				
ANR	1568363	AssignmentExpression	cpool_skip_alignment = 0		1568210	0		=			
ANR	1568364	Identifier	cpool_skip_alignment		1568210	0					
ANR	1568365	PrimaryExpression	0		1568210	1					
ANR	1568366	ExpressionStatement	cpool_current_index = 0	597:1:18187:18210	1568210	26	True				
ANR	1568367	AssignmentExpression	cpool_current_index = 0		1568210	0		=			
ANR	1568368	Identifier	cpool_current_index		1568210	0					
ANR	1568369	PrimaryExpression	0		1568210	1					
ANR	1568370	ExpressionStatement	cpool_start_address = NULL	598:1:18213:18239	1568210	27	True				
ANR	1568371	AssignmentExpression	cpool_start_address = NULL		1568210	0		=			
ANR	1568372	Identifier	cpool_start_address		1568210	0					
ANR	1568373	Identifier	NULL		1568210	1					
ANR	1568374	ExpressionStatement	first_patch = NULL	599:1:18242:18260	1568210	28	True				
ANR	1568375	AssignmentExpression	first_patch = NULL		1568210	0		=			
ANR	1568376	Identifier	first_patch		1568210	0					
ANR	1568377	Identifier	NULL		1568210	1					
ANR	1568378	ExpressionStatement	last_pc_patch = code	600:1:18263:18283	1568210	29	True				
ANR	1568379	AssignmentExpression	last_pc_patch = code		1568210	0		=			
ANR	1568380	Identifier	last_pc_patch		1568210	0					
ANR	1568381	Identifier	code		1568210	1					
ANR	1568382	ExpressionStatement	code_ptr = code	603:1:18294:18309	1568210	30	True				
ANR	1568383	AssignmentExpression	code_ptr = code		1568210	0		=			
ANR	1568384	Identifier	code_ptr		1568210	0					
ANR	1568385	Identifier	code		1568210	1					
ANR	1568386	ExpressionStatement	word_count = 0	604:1:18312:18326	1568210	31	True				
ANR	1568387	AssignmentExpression	word_count = 0		1568210	0		=			
ANR	1568388	Identifier	word_count		1568210	0					
ANR	1568389	PrimaryExpression	0		1568210	1					
ANR	1568390	ExpressionStatement	label = compiler -> labels	606:1:18330:18354	1568210	32	True				
ANR	1568391	AssignmentExpression	label = compiler -> labels		1568210	0		=			
ANR	1568392	Identifier	label		1568210	0					
ANR	1568393	PtrMemberAccess	compiler -> labels		1568210	1					
ANR	1568394	Identifier	compiler		1568210	0					
ANR	1568395	Identifier	labels		1568210	1					
ANR	1568396	ExpressionStatement	jump = compiler -> jumps	607:1:18357:18379	1568210	33	True				
ANR	1568397	AssignmentExpression	jump = compiler -> jumps		1568210	0		=			
ANR	1568398	Identifier	jump		1568210	0					
ANR	1568399	PtrMemberAccess	compiler -> jumps		1568210	1					
ANR	1568400	Identifier	compiler		1568210	0					
ANR	1568401	Identifier	jumps		1568210	1					
ANR	1568402	ExpressionStatement	const_ = compiler -> consts	608:1:18382:18407	1568210	34	True				
ANR	1568403	AssignmentExpression	const_ = compiler -> consts		1568210	0		=			
ANR	1568404	Identifier	const_		1568210	0					
ANR	1568405	PtrMemberAccess	compiler -> consts		1568210	1					
ANR	1568406	Identifier	compiler		1568210	0					
ANR	1568407	Identifier	consts		1568210	1					
ANR	1568408	IfStatement	if ( label && label -> size == 0 )		1568210	35					
ANR	1568409	Condition	label && label -> size == 0	610:5:18415:18439	1568210	0	True				
ANR	1568410	AndExpression	label && label -> size == 0		1568210	0		&&			
ANR	1568411	Identifier	label		1568210	0					
ANR	1568412	EqualityExpression	label -> size == 0		1568210	1		==			
ANR	1568413	PtrMemberAccess	label -> size		1568210	0					
ANR	1568414	Identifier	label		1568210	0					
ANR	1568415	Identifier	size		1568210	1					
ANR	1568416	PrimaryExpression	0		1568210	1					
ANR	1568417	CompoundStatement		54:32:1318:1318	1568210	1					
ANR	1568418	ExpressionStatement	label -> addr = ( sljit_uw ) code	611:2:18446:18474	1568210	0	True				
ANR	1568419	AssignmentExpression	label -> addr = ( sljit_uw ) code		1568210	0		=			
ANR	1568420	PtrMemberAccess	label -> addr		1568210	0					
ANR	1568421	Identifier	label		1568210	0					
ANR	1568422	Identifier	addr		1568210	1					
ANR	1568423	CastExpression	( sljit_uw ) code		1568210	1					
ANR	1568424	CastTarget	sljit_uw		1568210	0					
ANR	1568425	Identifier	code		1568210	1					
ANR	1568426	ExpressionStatement	label -> size = 0	612:2:18478:18493	1568210	1	True				
ANR	1568427	AssignmentExpression	label -> size = 0		1568210	0		=			
ANR	1568428	PtrMemberAccess	label -> size		1568210	0					
ANR	1568429	Identifier	label		1568210	0					
ANR	1568430	Identifier	size		1568210	1					
ANR	1568431	PrimaryExpression	0		1568210	1					
ANR	1568432	ExpressionStatement	label = label -> next	613:2:18497:18516	1568210	2	True				
ANR	1568433	AssignmentExpression	label = label -> next		1568210	0		=			
ANR	1568434	Identifier	label		1568210	0					
ANR	1568435	PtrMemberAccess	label -> next		1568210	1					
ANR	1568436	Identifier	label		1568210	0					
ANR	1568437	Identifier	next		1568210	1					
ANR	1568438	DoStatement	do		1568210	36					
ANR	1568439	CompoundStatement		60:4:1402:1402	1568210	0					
ANR	1568440	ExpressionStatement	buf_ptr = ( sljit_uw * ) buf -> memory	617:2:18530:18562	1568210	0	True				
ANR	1568441	AssignmentExpression	buf_ptr = ( sljit_uw * ) buf -> memory		1568210	0		=			
ANR	1568442	Identifier	buf_ptr		1568210	0					
ANR	1568443	CastExpression	( sljit_uw * ) buf -> memory		1568210	1					
ANR	1568444	CastTarget	sljit_uw *		1568210	0					
ANR	1568445	PtrMemberAccess	buf -> memory		1568210	1					
ANR	1568446	Identifier	buf		1568210	0					
ANR	1568447	Identifier	memory		1568210	1					
ANR	1568448	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 2 )	618:2:18566:18607	1568210	1	True				
ANR	1568449	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 2 )		1568210	0		=			
ANR	1568450	Identifier	buf_end		1568210	0					
ANR	1568451	AdditiveExpression	buf_ptr + ( buf -> used_size >> 2 )		1568210	1		+			
ANR	1568452	Identifier	buf_ptr		1568210	0					
ANR	1568453	ShiftExpression	buf -> used_size >> 2		1568210	1		>>			
ANR	1568454	PtrMemberAccess	buf -> used_size		1568210	0					
ANR	1568455	Identifier	buf		1568210	0					
ANR	1568456	Identifier	used_size		1568210	1					
ANR	1568457	PrimaryExpression	2		1568210	1					
ANR	1568458	DoStatement	do		1568210	2					
ANR	1568459	CompoundStatement		63:5:1490:1490	1568210	0					
ANR	1568460	ExpressionStatement	word_count ++	620:3:18619:18631	1568210	0	True				
ANR	1568461	PostIncDecOperationExpression	word_count ++		1568210	0					
ANR	1568462	Identifier	word_count		1568210	0					
ANR	1568463	IncDec	++		1568210	1					
ANR	1568464	IfStatement	if ( cpool_size > 0 )		1568210	1					
ANR	1568465	Condition	cpool_size > 0	622:7:18697:18710	1568210	0	True				
ANR	1568466	RelationalExpression	cpool_size > 0		1568210	0		>			
ANR	1568467	Identifier	cpool_size		1568210	0					
ANR	1568468	PrimaryExpression	0		1568210	1					
ANR	1568469	CompoundStatement		66:23:1589:1589	1568210	1					
ANR	1568470	IfStatement	if ( cpool_skip_alignment > 0 )		1568210	0					
ANR	1568471	Condition	cpool_skip_alignment > 0	623:8:18723:18746	1568210	0	True				
ANR	1568472	RelationalExpression	cpool_skip_alignment > 0		1568210	0		>			
ANR	1568473	Identifier	cpool_skip_alignment		1568210	0					
ANR	1568474	PrimaryExpression	0		1568210	1					
ANR	1568475	CompoundStatement		67:34:1625:1625	1568210	1					
ANR	1568476	ExpressionStatement	buf_ptr ++	624:5:18756:18765	1568210	0	True				
ANR	1568477	PostIncDecOperationExpression	buf_ptr ++		1568210	0					
ANR	1568478	Identifier	buf_ptr		1568210	0					
ANR	1568479	IncDec	++		1568210	1					
ANR	1568480	ExpressionStatement	cpool_skip_alignment --	625:5:18772:18794	1568210	1	True				
ANR	1568481	PostIncDecOperationExpression	cpool_skip_alignment --		1568210	0					
ANR	1568482	Identifier	cpool_skip_alignment		1568210	0					
ANR	1568483	IncDec	--		1568210	1					
ANR	1568484	ElseStatement	else		1568210	0					
ANR	1568485	CompoundStatement		71:9:1687:1687	1568210	0					
ANR	1568486	IfStatement	"if ( SLJIT_UNLIKELY ( resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr ) ) )"		1568210	0					
ANR	1568487	Condition	"SLJIT_UNLIKELY ( resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr ) )"	628:9:18822:18936	1568210	0	True				
ANR	1568488	CallExpression	"SLJIT_UNLIKELY ( resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr ) )"		1568210	0					
ANR	1568489	Callee	SLJIT_UNLIKELY		1568210	0					
ANR	1568490	Identifier	SLJIT_UNLIKELY		1568210	0					
ANR	1568491	ArgumentList	"resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr )"		1568210	1					
ANR	1568492	Argument	"resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr )"		1568210	0					
ANR	1568493	CallExpression	"resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr )"		1568210	0					
ANR	1568494	Callee	resolve_const_pool_index		1568210	0					
ANR	1568495	Identifier	resolve_const_pool_index		1568210	0					
ANR	1568496	ArgumentList	compiler		1568210	1					
ANR	1568497	Argument	compiler		1568210	0					
ANR	1568498	Identifier	compiler		1568210	0					
ANR	1568499	Argument	& first_patch		1568210	1					
ANR	1568500	UnaryOperationExpression	& first_patch		1568210	0					
ANR	1568501	UnaryOperator	&		1568210	0					
ANR	1568502	Identifier	first_patch		1568210	1					
ANR	1568503	Argument	cpool_current_index		1568210	2					
ANR	1568504	Identifier	cpool_current_index		1568210	0					
ANR	1568505	Argument	cpool_start_address		1568210	3					
ANR	1568506	Identifier	cpool_start_address		1568210	0					
ANR	1568507	Argument	buf_ptr		1568210	4					
ANR	1568508	Identifier	buf_ptr		1568210	0					
ANR	1568509	CompoundStatement		72:126:1815:1815	1568210	1					
ANR	1568510	ExpressionStatement	SLJIT_FREE_EXEC ( code )	629:6:18947:18968	1568210	0	True				
ANR	1568511	CallExpression	SLJIT_FREE_EXEC ( code )		1568210	0					
ANR	1568512	Callee	SLJIT_FREE_EXEC		1568210	0					
ANR	1568513	Identifier	SLJIT_FREE_EXEC		1568210	0					
ANR	1568514	ArgumentList	code		1568210	1					
ANR	1568515	Argument	code		1568210	0					
ANR	1568516	Identifier	code		1568210	0					
ANR	1568517	ExpressionStatement	compiler -> error = SLJIT_ERR_ALLOC_FAILED	630:6:18976:19016	1568210	1	True				
ANR	1568518	AssignmentExpression	compiler -> error = SLJIT_ERR_ALLOC_FAILED		1568210	0		=			
ANR	1568519	PtrMemberAccess	compiler -> error		1568210	0					
ANR	1568520	Identifier	compiler		1568210	0					
ANR	1568521	Identifier	error		1568210	1					
ANR	1568522	Identifier	SLJIT_ERR_ALLOC_FAILED		1568210	1					
ANR	1568523	ReturnStatement	return NULL ;	631:6:19024:19035	1568210	2	True				
ANR	1568524	Identifier	NULL		1568210	0					
ANR	1568525	ExpressionStatement	buf_ptr ++	633:5:19049:19058	1568210	1	True				
ANR	1568526	PostIncDecOperationExpression	buf_ptr ++		1568210	0					
ANR	1568527	Identifier	buf_ptr		1568210	0					
ANR	1568528	IncDec	++		1568210	1					
ANR	1568529	IfStatement	if ( ++ cpool_current_index >= cpool_size )		1568210	2					
ANR	1568530	Condition	++ cpool_current_index >= cpool_size	634:9:19069:19103	1568210	0	True				
ANR	1568531	RelationalExpression	++ cpool_current_index >= cpool_size		1568210	0		>=			
ANR	1568532	UnaryExpression	++ cpool_current_index		1568210	0					
ANR	1568533	IncDec	++		1568210	0					
ANR	1568534	Identifier	cpool_current_index		1568210	1					
ANR	1568535	Identifier	cpool_size		1568210	1					
ANR	1568536	CompoundStatement		78:46:1982:1982	1568210	1					
ANR	1568537	ExpressionStatement	SLJIT_ASSERT ( ! first_patch )	635:6:19114:19140	1568210	0	True				
ANR	1568538	CallExpression	SLJIT_ASSERT ( ! first_patch )		1568210	0					
ANR	1568539	Callee	SLJIT_ASSERT		1568210	0					
ANR	1568540	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1568541	ArgumentList	! first_patch		1568210	1					
ANR	1568542	Argument	! first_patch		1568210	0					
ANR	1568543	UnaryOperationExpression	! first_patch		1568210	0					
ANR	1568544	UnaryOperator	!		1568210	0					
ANR	1568545	Identifier	first_patch		1568210	1					
ANR	1568546	ExpressionStatement	cpool_size = 0	636:6:19148:19162	1568210	1	True				
ANR	1568547	AssignmentExpression	cpool_size = 0		1568210	0		=			
ANR	1568548	Identifier	cpool_size		1568210	0					
ANR	1568549	PrimaryExpression	0		1568210	1					
ANR	1568550	IfStatement	if ( label && label -> size == word_count )		1568210	2					
ANR	1568551	Condition	label && label -> size == word_count	637:10:19174:19207	1568210	0	True				
ANR	1568552	AndExpression	label && label -> size == word_count		1568210	0		&&			
ANR	1568553	Identifier	label		1568210	0					
ANR	1568554	EqualityExpression	label -> size == word_count		1568210	1		==			
ANR	1568555	PtrMemberAccess	label -> size		1568210	0					
ANR	1568556	Identifier	label		1568210	0					
ANR	1568557	Identifier	size		1568210	1					
ANR	1568558	Identifier	word_count		1568210	1					
ANR	1568559	CompoundStatement		81:46:2086:2086	1568210	1					
ANR	1568560	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	639:7:19270:19302	1568210	0	True				
ANR	1568561	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1568210	0		=			
ANR	1568562	PtrMemberAccess	label -> addr		1568210	0					
ANR	1568563	Identifier	label		1568210	0					
ANR	1568564	Identifier	addr		1568210	1					
ANR	1568565	CastExpression	( sljit_uw ) code_ptr		1568210	1					
ANR	1568566	CastTarget	sljit_uw		1568210	0					
ANR	1568567	Identifier	code_ptr		1568210	1					
ANR	1568568	ExpressionStatement	label -> size = code_ptr - code	640:7:19311:19340	1568210	1	True				
ANR	1568569	AssignmentExpression	label -> size = code_ptr - code		1568210	0		=			
ANR	1568570	PtrMemberAccess	label -> size		1568210	0					
ANR	1568571	Identifier	label		1568210	0					
ANR	1568572	Identifier	size		1568210	1					
ANR	1568573	AdditiveExpression	code_ptr - code		1568210	1		-			
ANR	1568574	Identifier	code_ptr		1568210	0					
ANR	1568575	Identifier	code		1568210	1					
ANR	1568576	ExpressionStatement	label = label -> next	641:7:19349:19368	1568210	2	True				
ANR	1568577	AssignmentExpression	label = label -> next		1568210	0		=			
ANR	1568578	Identifier	label		1568210	0					
ANR	1568579	PtrMemberAccess	label -> next		1568210	1					
ANR	1568580	Identifier	label		1568210	0					
ANR	1568581	Identifier	next		1568210	1					
ANR	1568582	ElseStatement	else		1568210	0					
ANR	1568583	IfStatement	if ( ( * buf_ptr & 0xff000000 ) != PUSH_POOL )		1568210	0					
ANR	1568584	Condition	( * buf_ptr & 0xff000000 ) != PUSH_POOL	646:12:19408:19443	1568210	0	True				
ANR	1568585	EqualityExpression	( * buf_ptr & 0xff000000 ) != PUSH_POOL		1568210	0		!=			
ANR	1568586	BitAndExpression	* buf_ptr & 0xff000000		1568210	0		&			
ANR	1568587	UnaryOperationExpression	* buf_ptr		1568210	0					
ANR	1568588	UnaryOperator	*		1568210	0					
ANR	1568589	Identifier	buf_ptr		1568210	1					
ANR	1568590	PrimaryExpression	0xff000000		1568210	1					
ANR	1568591	Identifier	PUSH_POOL		1568210	1					
ANR	1568592	CompoundStatement		90:50:2322:2322	1568210	1					
ANR	1568593	ExpressionStatement	* code_ptr = * buf_ptr ++	648:4:19459:19481	1568210	0	True				
ANR	1568594	AssignmentExpression	* code_ptr = * buf_ptr ++		1568210	0		=			
ANR	1568595	UnaryOperationExpression	* code_ptr		1568210	0					
ANR	1568596	UnaryOperator	*		1568210	0					
ANR	1568597	Identifier	code_ptr		1568210	1					
ANR	1568598	UnaryOperationExpression	* buf_ptr ++		1568210	1					
ANR	1568599	UnaryOperator	*		1568210	0					
ANR	1568600	PostIncDecOperationExpression	buf_ptr ++		1568210	1					
ANR	1568601	Identifier	buf_ptr		1568210	0					
ANR	1568602	IncDec	++		1568210	1					
ANR	1568603	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= word_count )	650:4:19544:19593	1568210	1	True				
ANR	1568604	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= word_count )		1568210	0					
ANR	1568605	Callee	SLJIT_ASSERT		1568210	0					
ANR	1568606	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1568607	ArgumentList	! label || label -> size >= word_count		1568210	1					
ANR	1568608	Argument	! label || label -> size >= word_count		1568210	0					
ANR	1568609	OrExpression	! label || label -> size >= word_count		1568210	0		||			
ANR	1568610	UnaryOperationExpression	! label		1568210	0					
ANR	1568611	UnaryOperator	!		1568210	0					
ANR	1568612	Identifier	label		1568210	1					
ANR	1568613	RelationalExpression	label -> size >= word_count		1568210	1		>=			
ANR	1568614	PtrMemberAccess	label -> size		1568210	0					
ANR	1568615	Identifier	label		1568210	0					
ANR	1568616	Identifier	size		1568210	1					
ANR	1568617	Identifier	word_count		1568210	1					
ANR	1568618	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )	651:4:19599:19646	1568210	2	True				
ANR	1568619	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )		1568210	0					
ANR	1568620	Callee	SLJIT_ASSERT		1568210	0					
ANR	1568621	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1568622	ArgumentList	! jump || jump -> addr >= word_count		1568210	1					
ANR	1568623	Argument	! jump || jump -> addr >= word_count		1568210	0					
ANR	1568624	OrExpression	! jump || jump -> addr >= word_count		1568210	0		||			
ANR	1568625	UnaryOperationExpression	! jump		1568210	0					
ANR	1568626	UnaryOperator	!		1568210	0					
ANR	1568627	Identifier	jump		1568210	1					
ANR	1568628	RelationalExpression	jump -> addr >= word_count		1568210	1		>=			
ANR	1568629	PtrMemberAccess	jump -> addr		1568210	0					
ANR	1568630	Identifier	jump		1568210	0					
ANR	1568631	Identifier	addr		1568210	1					
ANR	1568632	Identifier	word_count		1568210	1					
ANR	1568633	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )	652:4:19652:19703	1568210	3	True				
ANR	1568634	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )		1568210	0					
ANR	1568635	Callee	SLJIT_ASSERT		1568210	0					
ANR	1568636	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1568637	ArgumentList	! const_ || const_ -> addr >= word_count		1568210	1					
ANR	1568638	Argument	! const_ || const_ -> addr >= word_count		1568210	0					
ANR	1568639	OrExpression	! const_ || const_ -> addr >= word_count		1568210	0		||			
ANR	1568640	UnaryOperationExpression	! const_		1568210	0					
ANR	1568641	UnaryOperator	!		1568210	0					
ANR	1568642	Identifier	const_		1568210	1					
ANR	1568643	RelationalExpression	const_ -> addr >= word_count		1568210	1		>=			
ANR	1568644	PtrMemberAccess	const_ -> addr		1568210	0					
ANR	1568645	Identifier	const_		1568210	0					
ANR	1568646	Identifier	addr		1568210	1					
ANR	1568647	Identifier	word_count		1568210	1					
ANR	1568648	IfStatement	if ( jump && jump -> addr == word_count )		1568210	4					
ANR	1568649	Condition	jump && jump -> addr == word_count	653:8:19713:19744	1568210	0	True				
ANR	1568650	AndExpression	jump && jump -> addr == word_count		1568210	0		&&			
ANR	1568651	Identifier	jump		1568210	0					
ANR	1568652	EqualityExpression	jump -> addr == word_count		1568210	1		==			
ANR	1568653	PtrMemberAccess	jump -> addr		1568210	0					
ANR	1568654	Identifier	jump		1568210	0					
ANR	1568655	Identifier	addr		1568210	1					
ANR	1568656	Identifier	word_count		1568210	1					
ANR	1568657	CompoundStatement		97:42:2623:2623	1568210	1					
ANR	1568658	IfStatement	"if ( detect_jump_type ( jump , code_ptr , code ) )"		1568210	0					
ANR	1568659	Condition	"detect_jump_type ( jump , code_ptr , code )"	655:9:19815:19852	1568210	0	True				
ANR	1568660	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1568210	0					
ANR	1568661	Callee	detect_jump_type		1568210	0					
ANR	1568662	Identifier	detect_jump_type		1568210	0					
ANR	1568663	ArgumentList	jump		1568210	1					
ANR	1568664	Argument	jump		1568210	0					
ANR	1568665	Identifier	jump		1568210	0					
ANR	1568666	Argument	code_ptr		1568210	1					
ANR	1568667	Identifier	code_ptr		1568210	0					
ANR	1568668	Argument	code		1568210	2					
ANR	1568669	Identifier	code		1568210	0					
ANR	1568670	ExpressionStatement	code_ptr --	656:6:19861:19871	1568210	1	True				
ANR	1568671	PostIncDecOperationExpression	code_ptr --		1568210	0					
ANR	1568672	Identifier	code_ptr		1568210	0					
ANR	1568673	IncDec	--		1568210	1					
ANR	1568674	ExpressionStatement	jump -> addr = ( sljit_uw ) code_ptr	657:5:19878:19909	1568210	1	True				
ANR	1568675	AssignmentExpression	jump -> addr = ( sljit_uw ) code_ptr		1568210	0		=			
ANR	1568676	PtrMemberAccess	jump -> addr		1568210	0					
ANR	1568677	Identifier	jump		1568210	0					
ANR	1568678	Identifier	addr		1568210	1					
ANR	1568679	CastExpression	( sljit_uw ) code_ptr		1568210	1					
ANR	1568680	CastTarget	sljit_uw		1568210	0					
ANR	1568681	Identifier	code_ptr		1568210	1					
ANR	1568682	ExpressionStatement	jump = jump -> next	663:5:20043:20060	1568210	2	True				
ANR	1568683	AssignmentExpression	jump = jump -> next		1568210	0		=			
ANR	1568684	Identifier	jump		1568210	0					
ANR	1568685	PtrMemberAccess	jump -> next		1568210	1					
ANR	1568686	Identifier	jump		1568210	0					
ANR	1568687	Identifier	next		1568210	1					
ANR	1568688	IfStatement	if ( label && label -> size == word_count )		1568210	5					
ANR	1568689	Condition	label && label -> size == word_count	665:8:20076:20109	1568210	0	True				
ANR	1568690	AndExpression	label && label -> size == word_count		1568210	0		&&			
ANR	1568691	Identifier	label		1568210	0					
ANR	1568692	EqualityExpression	label -> size == word_count		1568210	1		==			
ANR	1568693	PtrMemberAccess	label -> size		1568210	0					
ANR	1568694	Identifier	label		1568210	0					
ANR	1568695	Identifier	size		1568210	1					
ANR	1568696	Identifier	word_count		1568210	1					
ANR	1568697	CompoundStatement		109:44:2988:2988	1568210	1					
ANR	1568698	ExpressionStatement	label -> addr = ( sljit_uw ) ( code_ptr + 1 )	667:5:20162:20200	1568210	0	True				
ANR	1568699	AssignmentExpression	label -> addr = ( sljit_uw ) ( code_ptr + 1 )		1568210	0		=			
ANR	1568700	PtrMemberAccess	label -> addr		1568210	0					
ANR	1568701	Identifier	label		1568210	0					
ANR	1568702	Identifier	addr		1568210	1					
ANR	1568703	CastExpression	( sljit_uw ) ( code_ptr + 1 )		1568210	1					
ANR	1568704	CastTarget	sljit_uw		1568210	0					
ANR	1568705	AdditiveExpression	code_ptr + 1		1568210	1		+			
ANR	1568706	Identifier	code_ptr		1568210	0					
ANR	1568707	PrimaryExpression	1		1568210	1					
ANR	1568708	ExpressionStatement	label -> size = ( code_ptr + 1 ) - code	668:5:20207:20242	1568210	1	True				
ANR	1568709	AssignmentExpression	label -> size = ( code_ptr + 1 ) - code		1568210	0		=			
ANR	1568710	PtrMemberAccess	label -> size		1568210	0					
ANR	1568711	Identifier	label		1568210	0					
ANR	1568712	Identifier	size		1568210	1					
ANR	1568713	AdditiveExpression	( code_ptr + 1 ) - code		1568210	1		-			
ANR	1568714	AdditiveExpression	code_ptr + 1		1568210	0		+			
ANR	1568715	Identifier	code_ptr		1568210	0					
ANR	1568716	PrimaryExpression	1		1568210	1					
ANR	1568717	Identifier	code		1568210	1					
ANR	1568718	ExpressionStatement	label = label -> next	669:5:20249:20268	1568210	2	True				
ANR	1568719	AssignmentExpression	label = label -> next		1568210	0		=			
ANR	1568720	Identifier	label		1568210	0					
ANR	1568721	PtrMemberAccess	label -> next		1568210	1					
ANR	1568722	Identifier	label		1568210	0					
ANR	1568723	Identifier	next		1568210	1					
ANR	1568724	IfStatement	if ( const_ && const_ -> addr == word_count )		1568210	6					
ANR	1568725	Condition	const_ && const_ -> addr == word_count	671:8:20284:20319	1568210	0	True				
ANR	1568726	AndExpression	const_ && const_ -> addr == word_count		1568210	0		&&			
ANR	1568727	Identifier	const_		1568210	0					
ANR	1568728	EqualityExpression	const_ -> addr == word_count		1568210	1		==			
ANR	1568729	PtrMemberAccess	const_ -> addr		1568210	0					
ANR	1568730	Identifier	const_		1568210	0					
ANR	1568731	Identifier	addr		1568210	1					
ANR	1568732	Identifier	word_count		1568210	1					
ANR	1568733	CompoundStatement		115:46:3198:3198	1568210	1					
ANR	1568734	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	673:5:20386:20419	1568210	0	True				
ANR	1568735	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1568210	0		=			
ANR	1568736	PtrMemberAccess	const_ -> addr		1568210	0					
ANR	1568737	Identifier	const_		1568210	0					
ANR	1568738	Identifier	addr		1568210	1					
ANR	1568739	CastExpression	( sljit_uw ) code_ptr		1568210	1					
ANR	1568740	CastTarget	sljit_uw		1568210	0					
ANR	1568741	Identifier	code_ptr		1568210	1					
ANR	1568742	ExpressionStatement	const_ = const_ -> next	677:5:20485:20506	1568210	1	True				
ANR	1568743	AssignmentExpression	const_ = const_ -> next		1568210	0		=			
ANR	1568744	Identifier	const_		1568210	0					
ANR	1568745	PtrMemberAccess	const_ -> next		1568210	1					
ANR	1568746	Identifier	const_		1568210	0					
ANR	1568747	Identifier	next		1568210	1					
ANR	1568748	ExpressionStatement	code_ptr ++	679:4:20518:20528	1568210	7	True				
ANR	1568749	PostIncDecOperationExpression	code_ptr ++		1568210	0					
ANR	1568750	Identifier	code_ptr		1568210	0					
ANR	1568751	IncDec	++		1568210	1					
ANR	1568752	ElseStatement	else		1568210	0					
ANR	1568753	CompoundStatement		126:8:3476:3476	1568210	0					
ANR	1568754	ExpressionStatement	cpool_size = * buf_ptr ++ & ~PUSH_POOL	684:4:20647:20683	1568210	0	True				
ANR	1568755	AssignmentExpression	cpool_size = * buf_ptr ++ & ~PUSH_POOL		1568210	0		=			
ANR	1568756	Identifier	cpool_size		1568210	0					
ANR	1568757	BitAndExpression	* buf_ptr ++ & ~PUSH_POOL		1568210	1		&			
ANR	1568758	UnaryOperationExpression	* buf_ptr ++		1568210	0					
ANR	1568759	UnaryOperator	*		1568210	0					
ANR	1568760	PostIncDecOperationExpression	buf_ptr ++		1568210	1					
ANR	1568761	Identifier	buf_ptr		1568210	0					
ANR	1568762	IncDec	++		1568210	1					
ANR	1568763	Identifier	~PUSH_POOL		1568210	1					
ANR	1568764	ExpressionStatement	SLJIT_ASSERT ( cpool_size > 0 )	685:4:20689:20717	1568210	1	True				
ANR	1568765	CallExpression	SLJIT_ASSERT ( cpool_size > 0 )		1568210	0					
ANR	1568766	Callee	SLJIT_ASSERT		1568210	0					
ANR	1568767	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1568768	ArgumentList	cpool_size > 0		1568210	1					
ANR	1568769	Argument	cpool_size > 0		1568210	0					
ANR	1568770	RelationalExpression	cpool_size > 0		1568210	0		>			
ANR	1568771	Identifier	cpool_size		1568210	0					
ANR	1568772	PrimaryExpression	0		1568210	1					
ANR	1568773	ExpressionStatement	cpool_start_address = ALIGN_INSTRUCTION ( code_ptr + 1 )	686:4:20723:20776	1568210	2	True				
ANR	1568774	AssignmentExpression	cpool_start_address = ALIGN_INSTRUCTION ( code_ptr + 1 )		1568210	0		=			
ANR	1568775	Identifier	cpool_start_address		1568210	0					
ANR	1568776	CallExpression	ALIGN_INSTRUCTION ( code_ptr + 1 )		1568210	1					
ANR	1568777	Callee	ALIGN_INSTRUCTION		1568210	0					
ANR	1568778	Identifier	ALIGN_INSTRUCTION		1568210	0					
ANR	1568779	ArgumentList	code_ptr + 1		1568210	1					
ANR	1568780	Argument	code_ptr + 1		1568210	0					
ANR	1568781	AdditiveExpression	code_ptr + 1		1568210	0		+			
ANR	1568782	Identifier	code_ptr		1568210	0					
ANR	1568783	PrimaryExpression	1		1568210	1					
ANR	1568784	ExpressionStatement	"cpool_current_index = patch_pc_relative_loads ( last_pc_patch , code_ptr , cpool_start_address , cpool_size )"	687:4:20782:20885	1568210	3	True				
ANR	1568785	AssignmentExpression	"cpool_current_index = patch_pc_relative_loads ( last_pc_patch , code_ptr , cpool_start_address , cpool_size )"		1568210	0		=			
ANR	1568786	Identifier	cpool_current_index		1568210	0					
ANR	1568787	CallExpression	"patch_pc_relative_loads ( last_pc_patch , code_ptr , cpool_start_address , cpool_size )"		1568210	1					
ANR	1568788	Callee	patch_pc_relative_loads		1568210	0					
ANR	1568789	Identifier	patch_pc_relative_loads		1568210	0					
ANR	1568790	ArgumentList	last_pc_patch		1568210	1					
ANR	1568791	Argument	last_pc_patch		1568210	0					
ANR	1568792	Identifier	last_pc_patch		1568210	0					
ANR	1568793	Argument	code_ptr		1568210	1					
ANR	1568794	Identifier	code_ptr		1568210	0					
ANR	1568795	Argument	cpool_start_address		1568210	2					
ANR	1568796	Identifier	cpool_start_address		1568210	0					
ANR	1568797	Argument	cpool_size		1568210	3					
ANR	1568798	Identifier	cpool_size		1568210	0					
ANR	1568799	IfStatement	if ( cpool_current_index > 0 )		1568210	4					
ANR	1568800	Condition	cpool_current_index > 0	688:8:20895:20917	1568210	0	True				
ANR	1568801	RelationalExpression	cpool_current_index > 0		1568210	0		>			
ANR	1568802	Identifier	cpool_current_index		1568210	0					
ANR	1568803	PrimaryExpression	0		1568210	1					
ANR	1568804	CompoundStatement		132:33:3796:3796	1568210	1					
ANR	1568805	ExpressionStatement	* code_ptr = B | ( ( ( cpool_start_address - code_ptr ) + cpool_current_index - 2 ) & ~PUSH_POOL )	690:5:20960:21051	1568210	0	True				
ANR	1568806	AssignmentExpression	* code_ptr = B | ( ( ( cpool_start_address - code_ptr ) + cpool_current_index - 2 ) & ~PUSH_POOL )		1568210	0		=			
ANR	1568807	UnaryOperationExpression	* code_ptr		1568210	0					
ANR	1568808	UnaryOperator	*		1568210	0					
ANR	1568809	Identifier	code_ptr		1568210	1					
ANR	1568810	InclusiveOrExpression	B | ( ( ( cpool_start_address - code_ptr ) + cpool_current_index - 2 ) & ~PUSH_POOL )		1568210	1		|			
ANR	1568811	Identifier	B		1568210	0					
ANR	1568812	BitAndExpression	( ( cpool_start_address - code_ptr ) + cpool_current_index - 2 ) & ~PUSH_POOL		1568210	1		&			
ANR	1568813	AdditiveExpression	( cpool_start_address - code_ptr ) + cpool_current_index - 2		1568210	0		+			
ANR	1568814	AdditiveExpression	cpool_start_address - code_ptr		1568210	0		-			
ANR	1568815	Identifier	cpool_start_address		1568210	0					
ANR	1568816	Identifier	code_ptr		1568210	1					
ANR	1568817	AdditiveExpression	cpool_current_index - 2		1568210	1		-			
ANR	1568818	Identifier	cpool_current_index		1568210	0					
ANR	1568819	PrimaryExpression	2		1568210	1					
ANR	1568820	Identifier	~PUSH_POOL		1568210	1					
ANR	1568821	ExpressionStatement	code_ptr = cpool_start_address + cpool_current_index	691:5:21058:21110	1568210	1	True				
ANR	1568822	AssignmentExpression	code_ptr = cpool_start_address + cpool_current_index		1568210	0		=			
ANR	1568823	Identifier	code_ptr		1568210	0					
ANR	1568824	AdditiveExpression	cpool_start_address + cpool_current_index		1568210	1		+			
ANR	1568825	Identifier	cpool_start_address		1568210	0					
ANR	1568826	Identifier	cpool_current_index		1568210	1					
ANR	1568827	ExpressionStatement	cpool_skip_alignment = CONST_POOL_ALIGNMENT - 1	693:4:21122:21169	1568210	5	True				
ANR	1568828	AssignmentExpression	cpool_skip_alignment = CONST_POOL_ALIGNMENT - 1		1568210	0		=			
ANR	1568829	Identifier	cpool_skip_alignment		1568210	0					
ANR	1568830	AdditiveExpression	CONST_POOL_ALIGNMENT - 1		1568210	1		-			
ANR	1568831	Identifier	CONST_POOL_ALIGNMENT		1568210	0					
ANR	1568832	PrimaryExpression	1		1568210	1					
ANR	1568833	ExpressionStatement	cpool_current_index = 0	694:4:21175:21198	1568210	6	True				
ANR	1568834	AssignmentExpression	cpool_current_index = 0		1568210	0		=			
ANR	1568835	Identifier	cpool_current_index		1568210	0					
ANR	1568836	PrimaryExpression	0		1568210	1					
ANR	1568837	ExpressionStatement	last_pc_patch = code_ptr	695:4:21204:21228	1568210	7	True				
ANR	1568838	AssignmentExpression	last_pc_patch = code_ptr		1568210	0		=			
ANR	1568839	Identifier	last_pc_patch		1568210	0					
ANR	1568840	Identifier	code_ptr		1568210	1					
ANR	1568841	Condition	buf_ptr < buf_end	698:11:21253:21269	1568210	1	True				
ANR	1568842	RelationalExpression	buf_ptr < buf_end		1568210	0		<			
ANR	1568843	Identifier	buf_ptr		1568210	0					
ANR	1568844	Identifier	buf_end		1568210	1					
ANR	1568845	ExpressionStatement	buf = buf -> next	699:2:21275:21290	1568210	3	True				
ANR	1568846	AssignmentExpression	buf = buf -> next		1568210	0		=			
ANR	1568847	Identifier	buf		1568210	0					
ANR	1568848	PtrMemberAccess	buf -> next		1568210	1					
ANR	1568849	Identifier	buf		1568210	0					
ANR	1568850	Identifier	next		1568210	1					
ANR	1568851	Condition	buf	700:10:21302:21304	1568210	1	True				
ANR	1568852	Identifier	buf		1568210	0					
ANR	1568853	ExpressionStatement	SLJIT_ASSERT ( ! label )	702:1:21310:21330	1568210	37	True				
ANR	1568854	CallExpression	SLJIT_ASSERT ( ! label )		1568210	0					
ANR	1568855	Callee	SLJIT_ASSERT		1568210	0					
ANR	1568856	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1568857	ArgumentList	! label		1568210	1					
ANR	1568858	Argument	! label		1568210	0					
ANR	1568859	UnaryOperationExpression	! label		1568210	0					
ANR	1568860	UnaryOperator	!		1568210	0					
ANR	1568861	Identifier	label		1568210	1					
ANR	1568862	ExpressionStatement	SLJIT_ASSERT ( ! jump )	703:1:21333:21352	1568210	38	True				
ANR	1568863	CallExpression	SLJIT_ASSERT ( ! jump )		1568210	0					
ANR	1568864	Callee	SLJIT_ASSERT		1568210	0					
ANR	1568865	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1568866	ArgumentList	! jump		1568210	1					
ANR	1568867	Argument	! jump		1568210	0					
ANR	1568868	UnaryOperationExpression	! jump		1568210	0					
ANR	1568869	UnaryOperator	!		1568210	0					
ANR	1568870	Identifier	jump		1568210	1					
ANR	1568871	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	704:1:21355:21376	1568210	39	True				
ANR	1568872	CallExpression	SLJIT_ASSERT ( ! const_ )		1568210	0					
ANR	1568873	Callee	SLJIT_ASSERT		1568210	0					
ANR	1568874	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1568875	ArgumentList	! const_		1568210	1					
ANR	1568876	Argument	! const_		1568210	0					
ANR	1568877	UnaryOperationExpression	! const_		1568210	0					
ANR	1568878	UnaryOperator	!		1568210	0					
ANR	1568879	Identifier	const_		1568210	1					
ANR	1568880	ExpressionStatement	SLJIT_ASSERT ( cpool_size == 0 )	707:1:21437:21466	1568210	40	True				
ANR	1568881	CallExpression	SLJIT_ASSERT ( cpool_size == 0 )		1568210	0					
ANR	1568882	Callee	SLJIT_ASSERT		1568210	0					
ANR	1568883	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1568884	ArgumentList	cpool_size == 0		1568210	1					
ANR	1568885	Argument	cpool_size == 0		1568210	0					
ANR	1568886	EqualityExpression	cpool_size == 0		1568210	0		==			
ANR	1568887	Identifier	cpool_size		1568210	0					
ANR	1568888	PrimaryExpression	0		1568210	1					
ANR	1568889	IfStatement	if ( compiler -> cpool_fill > 0 )		1568210	41					
ANR	1568890	Condition	compiler -> cpool_fill > 0	708:5:21473:21496	1568210	0	True				
ANR	1568891	RelationalExpression	compiler -> cpool_fill > 0		1568210	0		>			
ANR	1568892	PtrMemberAccess	compiler -> cpool_fill		1568210	0					
ANR	1568893	Identifier	compiler		1568210	0					
ANR	1568894	Identifier	cpool_fill		1568210	1					
ANR	1568895	PrimaryExpression	0		1568210	1					
ANR	1568896	CompoundStatement		152:31:4375:4375	1568210	1					
ANR	1568897	ExpressionStatement	cpool_start_address = ALIGN_INSTRUCTION ( code_ptr )	709:2:21503:21552	1568210	0	True				
ANR	1568898	AssignmentExpression	cpool_start_address = ALIGN_INSTRUCTION ( code_ptr )		1568210	0		=			
ANR	1568899	Identifier	cpool_start_address		1568210	0					
ANR	1568900	CallExpression	ALIGN_INSTRUCTION ( code_ptr )		1568210	1					
ANR	1568901	Callee	ALIGN_INSTRUCTION		1568210	0					
ANR	1568902	Identifier	ALIGN_INSTRUCTION		1568210	0					
ANR	1568903	ArgumentList	code_ptr		1568210	1					
ANR	1568904	Argument	code_ptr		1568210	0					
ANR	1568905	Identifier	code_ptr		1568210	0					
ANR	1568906	ExpressionStatement	"cpool_current_index = patch_pc_relative_loads ( last_pc_patch , code_ptr , cpool_start_address , compiler -> cpool_fill )"	710:2:21556:21669	1568210	1	True				
ANR	1568907	AssignmentExpression	"cpool_current_index = patch_pc_relative_loads ( last_pc_patch , code_ptr , cpool_start_address , compiler -> cpool_fill )"		1568210	0		=			
ANR	1568908	Identifier	cpool_current_index		1568210	0					
ANR	1568909	CallExpression	"patch_pc_relative_loads ( last_pc_patch , code_ptr , cpool_start_address , compiler -> cpool_fill )"		1568210	1					
ANR	1568910	Callee	patch_pc_relative_loads		1568210	0					
ANR	1568911	Identifier	patch_pc_relative_loads		1568210	0					
ANR	1568912	ArgumentList	last_pc_patch		1568210	1					
ANR	1568913	Argument	last_pc_patch		1568210	0					
ANR	1568914	Identifier	last_pc_patch		1568210	0					
ANR	1568915	Argument	code_ptr		1568210	1					
ANR	1568916	Identifier	code_ptr		1568210	0					
ANR	1568917	Argument	cpool_start_address		1568210	2					
ANR	1568918	Identifier	cpool_start_address		1568210	0					
ANR	1568919	Argument	compiler -> cpool_fill		1568210	3					
ANR	1568920	PtrMemberAccess	compiler -> cpool_fill		1568210	0					
ANR	1568921	Identifier	compiler		1568210	0					
ANR	1568922	Identifier	cpool_fill		1568210	1					
ANR	1568923	IfStatement	if ( cpool_current_index > 0 )		1568210	2					
ANR	1568924	Condition	cpool_current_index > 0	711:6:21677:21699	1568210	0	True				
ANR	1568925	RelationalExpression	cpool_current_index > 0		1568210	0		>			
ANR	1568926	Identifier	cpool_current_index		1568210	0					
ANR	1568927	PrimaryExpression	0		1568210	1					
ANR	1568928	ExpressionStatement	code_ptr = cpool_start_address + cpool_current_index	712:3:21705:21757	1568210	1	True				
ANR	1568929	AssignmentExpression	code_ptr = cpool_start_address + cpool_current_index		1568210	0		=			
ANR	1568930	Identifier	code_ptr		1568210	0					
ANR	1568931	AdditiveExpression	cpool_start_address + cpool_current_index		1568210	1		+			
ANR	1568932	Identifier	cpool_start_address		1568210	0					
ANR	1568933	Identifier	cpool_current_index		1568210	1					
ANR	1568934	ExpressionStatement	buf_ptr = compiler -> cpool	714:2:21762:21787	1568210	3	True				
ANR	1568935	AssignmentExpression	buf_ptr = compiler -> cpool		1568210	0		=			
ANR	1568936	Identifier	buf_ptr		1568210	0					
ANR	1568937	PtrMemberAccess	compiler -> cpool		1568210	1					
ANR	1568938	Identifier	compiler		1568210	0					
ANR	1568939	Identifier	cpool		1568210	1					
ANR	1568940	ExpressionStatement	buf_end = buf_ptr + compiler -> cpool_fill	715:2:21791:21831	1568210	4	True				
ANR	1568941	AssignmentExpression	buf_end = buf_ptr + compiler -> cpool_fill		1568210	0		=			
ANR	1568942	Identifier	buf_end		1568210	0					
ANR	1568943	AdditiveExpression	buf_ptr + compiler -> cpool_fill		1568210	1		+			
ANR	1568944	Identifier	buf_ptr		1568210	0					
ANR	1568945	PtrMemberAccess	compiler -> cpool_fill		1568210	1					
ANR	1568946	Identifier	compiler		1568210	0					
ANR	1568947	Identifier	cpool_fill		1568210	1					
ANR	1568948	ExpressionStatement	cpool_current_index = 0	716:2:21835:21858	1568210	5	True				
ANR	1568949	AssignmentExpression	cpool_current_index = 0		1568210	0		=			
ANR	1568950	Identifier	cpool_current_index		1568210	0					
ANR	1568951	PrimaryExpression	0		1568210	1					
ANR	1568952	WhileStatement	while ( buf_ptr < buf_end )		1568210	6					
ANR	1568953	Condition	buf_ptr < buf_end	717:9:21869:21885	1568210	0	True				
ANR	1568954	RelationalExpression	buf_ptr < buf_end		1568210	0		<			
ANR	1568955	Identifier	buf_ptr		1568210	0					
ANR	1568956	Identifier	buf_end		1568210	1					
ANR	1568957	CompoundStatement		161:28:4764:4764	1568210	1					
ANR	1568958	IfStatement	"if ( SLJIT_UNLIKELY ( resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr ) ) )"		1568210	0					
ANR	1568959	Condition	"SLJIT_UNLIKELY ( resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr ) )"	718:7:21897:22011	1568210	0	True				
ANR	1568960	CallExpression	"SLJIT_UNLIKELY ( resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr ) )"		1568210	0					
ANR	1568961	Callee	SLJIT_UNLIKELY		1568210	0					
ANR	1568962	Identifier	SLJIT_UNLIKELY		1568210	0					
ANR	1568963	ArgumentList	"resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr )"		1568210	1					
ANR	1568964	Argument	"resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr )"		1568210	0					
ANR	1568965	CallExpression	"resolve_const_pool_index ( compiler , & first_patch , cpool_current_index , cpool_start_address , buf_ptr )"		1568210	0					
ANR	1568966	Callee	resolve_const_pool_index		1568210	0					
ANR	1568967	Identifier	resolve_const_pool_index		1568210	0					
ANR	1568968	ArgumentList	compiler		1568210	1					
ANR	1568969	Argument	compiler		1568210	0					
ANR	1568970	Identifier	compiler		1568210	0					
ANR	1568971	Argument	& first_patch		1568210	1					
ANR	1568972	UnaryOperationExpression	& first_patch		1568210	0					
ANR	1568973	UnaryOperator	&		1568210	0					
ANR	1568974	Identifier	first_patch		1568210	1					
ANR	1568975	Argument	cpool_current_index		1568210	2					
ANR	1568976	Identifier	cpool_current_index		1568210	0					
ANR	1568977	Argument	cpool_start_address		1568210	3					
ANR	1568978	Identifier	cpool_start_address		1568210	0					
ANR	1568979	Argument	buf_ptr		1568210	4					
ANR	1568980	Identifier	buf_ptr		1568210	0					
ANR	1568981	CompoundStatement		162:124:4890:4890	1568210	1					
ANR	1568982	ExpressionStatement	SLJIT_FREE_EXEC ( code )	719:4:22020:22041	1568210	0	True				
ANR	1568983	CallExpression	SLJIT_FREE_EXEC ( code )		1568210	0					
ANR	1568984	Callee	SLJIT_FREE_EXEC		1568210	0					
ANR	1568985	Identifier	SLJIT_FREE_EXEC		1568210	0					
ANR	1568986	ArgumentList	code		1568210	1					
ANR	1568987	Argument	code		1568210	0					
ANR	1568988	Identifier	code		1568210	0					
ANR	1568989	ExpressionStatement	compiler -> error = SLJIT_ERR_ALLOC_FAILED	720:4:22047:22087	1568210	1	True				
ANR	1568990	AssignmentExpression	compiler -> error = SLJIT_ERR_ALLOC_FAILED		1568210	0		=			
ANR	1568991	PtrMemberAccess	compiler -> error		1568210	0					
ANR	1568992	Identifier	compiler		1568210	0					
ANR	1568993	Identifier	error		1568210	1					
ANR	1568994	Identifier	SLJIT_ERR_ALLOC_FAILED		1568210	1					
ANR	1568995	ReturnStatement	return NULL ;	721:4:22093:22104	1568210	2	True				
ANR	1568996	Identifier	NULL		1568210	0					
ANR	1568997	ExpressionStatement	buf_ptr ++	723:3:22114:22123	1568210	1	True				
ANR	1568998	PostIncDecOperationExpression	buf_ptr ++		1568210	0					
ANR	1568999	Identifier	buf_ptr		1568210	0					
ANR	1569000	IncDec	++		1568210	1					
ANR	1569001	ExpressionStatement	cpool_current_index ++	724:3:22128:22149	1568210	2	True				
ANR	1569002	PostIncDecOperationExpression	cpool_current_index ++		1568210	0					
ANR	1569003	Identifier	cpool_current_index		1568210	0					
ANR	1569004	IncDec	++		1568210	1					
ANR	1569005	ExpressionStatement	SLJIT_ASSERT ( ! first_patch )	726:2:22157:22183	1568210	7	True				
ANR	1569006	CallExpression	SLJIT_ASSERT ( ! first_patch )		1568210	0					
ANR	1569007	Callee	SLJIT_ASSERT		1568210	0					
ANR	1569008	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1569009	ArgumentList	! first_patch		1568210	1					
ANR	1569010	Argument	! first_patch		1568210	0					
ANR	1569011	UnaryOperationExpression	! first_patch		1568210	0					
ANR	1569012	UnaryOperator	!		1568210	0					
ANR	1569013	Identifier	first_patch		1568210	1					
ANR	1569014	ExpressionStatement	jump = compiler -> jumps	730:1:22197:22219	1568210	42	True				
ANR	1569015	AssignmentExpression	jump = compiler -> jumps		1568210	0		=			
ANR	1569016	Identifier	jump		1568210	0					
ANR	1569017	PtrMemberAccess	compiler -> jumps		1568210	1					
ANR	1569018	Identifier	compiler		1568210	0					
ANR	1569019	Identifier	jumps		1568210	1					
ANR	1569020	WhileStatement	while ( jump )		1568210	43					
ANR	1569021	Condition	jump	731:8:22229:22232	1568210	0	True				
ANR	1569022	Identifier	jump		1568210	0					
ANR	1569023	CompoundStatement		175:14:5111:5111	1568210	1					
ANR	1569024	ExpressionStatement	buf_ptr = ( sljit_uw * ) jump -> addr	732:2:22239:22270	1568210	0	True				
ANR	1569025	AssignmentExpression	buf_ptr = ( sljit_uw * ) jump -> addr		1568210	0		=			
ANR	1569026	Identifier	buf_ptr		1568210	0					
ANR	1569027	CastExpression	( sljit_uw * ) jump -> addr		1568210	1					
ANR	1569028	CastTarget	sljit_uw *		1568210	0					
ANR	1569029	PtrMemberAccess	jump -> addr		1568210	1					
ANR	1569030	Identifier	jump		1568210	0					
ANR	1569031	Identifier	addr		1568210	1					
ANR	1569032	IfStatement	if ( jump -> flags & PATCH_B )		1568210	1					
ANR	1569033	Condition	jump -> flags & PATCH_B	734:6:22279:22299	1568210	0	True				
ANR	1569034	BitAndExpression	jump -> flags & PATCH_B		1568210	0		&			
ANR	1569035	PtrMemberAccess	jump -> flags		1568210	0					
ANR	1569036	Identifier	jump		1568210	0					
ANR	1569037	Identifier	flags		1568210	1					
ANR	1569038	Identifier	PATCH_B		1568210	1					
ANR	1569039	CompoundStatement		178:29:5178:5178	1568210	1					
ANR	1569040	IfStatement	if ( ! ( jump -> flags & JUMP_ADDR ) )		1568210	0					
ANR	1569041	Condition	! ( jump -> flags & JUMP_ADDR )	735:7:22311:22336	1568210	0	True				
ANR	1569042	UnaryOperationExpression	! ( jump -> flags & JUMP_ADDR )		1568210	0					
ANR	1569043	UnaryOperator	!		1568210	0					
ANR	1569044	BitAndExpression	jump -> flags & JUMP_ADDR		1568210	1		&			
ANR	1569045	PtrMemberAccess	jump -> flags		1568210	0					
ANR	1569046	Identifier	jump		1568210	0					
ANR	1569047	Identifier	flags		1568210	1					
ANR	1569048	Identifier	JUMP_ADDR		1568210	1					
ANR	1569049	CompoundStatement		179:35:5215:5215	1568210	1					
ANR	1569050	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	736:4:22345:22383	1568210	0	True				
ANR	1569051	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1568210	0					
ANR	1569052	Callee	SLJIT_ASSERT		1568210	0					
ANR	1569053	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1569054	ArgumentList	jump -> flags & JUMP_LABEL		1568210	1					
ANR	1569055	Argument	jump -> flags & JUMP_LABEL		1568210	0					
ANR	1569056	BitAndExpression	jump -> flags & JUMP_LABEL		1568210	0		&			
ANR	1569057	PtrMemberAccess	jump -> flags		1568210	0					
ANR	1569058	Identifier	jump		1568210	0					
ANR	1569059	Identifier	flags		1568210	1					
ANR	1569060	Identifier	JUMP_LABEL		1568210	1					
ANR	1569061	ExpressionStatement	SLJIT_ASSERT ( ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000 )	737:4:22389:22550	1568210	1	True				
ANR	1569062	CallExpression	SLJIT_ASSERT ( ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000 )		1568210	0					
ANR	1569063	Callee	SLJIT_ASSERT		1568210	0					
ANR	1569064	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1569065	ArgumentList	( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000		1568210	1					
ANR	1569066	Argument	( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000		1568210	0					
ANR	1569067	AndExpression	( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000		1568210	0		&&			
ANR	1569068	RelationalExpression	( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff		1568210	0		<=			
ANR	1569069	AdditiveExpression	( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 )		1568210	0		-			
ANR	1569070	CastExpression	( sljit_sw ) jump -> u . label -> addr		1568210	0					
ANR	1569071	CastTarget	sljit_sw		1568210	0					
ANR	1569072	PtrMemberAccess	jump -> u . label -> addr		1568210	1					
ANR	1569073	MemberAccess	jump -> u . label		1568210	0					
ANR	1569074	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569075	Identifier	jump		1568210	0					
ANR	1569076	Identifier	u		1568210	1					
ANR	1569077	Identifier	label		1568210	1					
ANR	1569078	Identifier	addr		1568210	1					
ANR	1569079	CastExpression	( sljit_sw ) ( buf_ptr + 2 )		1568210	1					
ANR	1569080	CastTarget	sljit_sw		1568210	0					
ANR	1569081	AdditiveExpression	buf_ptr + 2		1568210	1		+			
ANR	1569082	Identifier	buf_ptr		1568210	0					
ANR	1569083	PrimaryExpression	2		1568210	1					
ANR	1569084	PrimaryExpression	0x01ffffff		1568210	1					
ANR	1569085	RelationalExpression	( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000		1568210	1		>=			
ANR	1569086	AdditiveExpression	( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 )		1568210	0		-			
ANR	1569087	CastExpression	( sljit_sw ) jump -> u . label -> addr		1568210	0					
ANR	1569088	CastTarget	sljit_sw		1568210	0					
ANR	1569089	PtrMemberAccess	jump -> u . label -> addr		1568210	1					
ANR	1569090	MemberAccess	jump -> u . label		1568210	0					
ANR	1569091	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569092	Identifier	jump		1568210	0					
ANR	1569093	Identifier	u		1568210	1					
ANR	1569094	Identifier	label		1568210	1					
ANR	1569095	Identifier	addr		1568210	1					
ANR	1569096	CastExpression	( sljit_sw ) ( buf_ptr + 2 )		1568210	1					
ANR	1569097	CastTarget	sljit_sw		1568210	0					
ANR	1569098	AdditiveExpression	buf_ptr + 2		1568210	1		+			
ANR	1569099	Identifier	buf_ptr		1568210	0					
ANR	1569100	PrimaryExpression	2		1568210	1					
ANR	1569101	UnaryOperationExpression	- 0x02000000		1568210	1					
ANR	1569102	UnaryOperator	-		1568210	0					
ANR	1569103	PrimaryExpression	0x02000000		1568210	1					
ANR	1569104	ExpressionStatement	* buf_ptr |= ( ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >> 2 ) & 0x00ffffff	738:4:22556:22645	1568210	2	True				
ANR	1569105	AssignmentExpression	* buf_ptr |= ( ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >> 2 ) & 0x00ffffff		1568210	0		|=			
ANR	1569106	UnaryOperationExpression	* buf_ptr		1568210	0					
ANR	1569107	UnaryOperator	*		1568210	0					
ANR	1569108	Identifier	buf_ptr		1568210	1					
ANR	1569109	BitAndExpression	( ( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >> 2 ) & 0x00ffffff		1568210	1		&			
ANR	1569110	ShiftExpression	( ( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 ) ) >> 2		1568210	0		>>			
ANR	1569111	AdditiveExpression	( sljit_sw ) jump -> u . label -> addr - ( sljit_sw ) ( buf_ptr + 2 )		1568210	0		-			
ANR	1569112	CastExpression	( sljit_sw ) jump -> u . label -> addr		1568210	0					
ANR	1569113	CastTarget	sljit_sw		1568210	0					
ANR	1569114	PtrMemberAccess	jump -> u . label -> addr		1568210	1					
ANR	1569115	MemberAccess	jump -> u . label		1568210	0					
ANR	1569116	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569117	Identifier	jump		1568210	0					
ANR	1569118	Identifier	u		1568210	1					
ANR	1569119	Identifier	label		1568210	1					
ANR	1569120	Identifier	addr		1568210	1					
ANR	1569121	CastExpression	( sljit_sw ) ( buf_ptr + 2 )		1568210	1					
ANR	1569122	CastTarget	sljit_sw		1568210	0					
ANR	1569123	AdditiveExpression	buf_ptr + 2		1568210	1		+			
ANR	1569124	Identifier	buf_ptr		1568210	0					
ANR	1569125	PrimaryExpression	2		1568210	1					
ANR	1569126	PrimaryExpression	2		1568210	1					
ANR	1569127	PrimaryExpression	0x00ffffff		1568210	1					
ANR	1569128	ElseStatement	else		1568210	0					
ANR	1569129	CompoundStatement		184:8:5536:5536	1568210	0					
ANR	1569130	ExpressionStatement	SLJIT_ASSERT ( ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000 )	741:4:22666:22817	1568210	0	True				
ANR	1569131	CallExpression	SLJIT_ASSERT ( ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000 )		1568210	0					
ANR	1569132	Callee	SLJIT_ASSERT		1568210	0					
ANR	1569133	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1569134	ArgumentList	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000		1568210	1					
ANR	1569135	Argument	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000		1568210	0					
ANR	1569136	AndExpression	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff && ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000		1568210	0		&&			
ANR	1569137	RelationalExpression	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) <= 0x01ffffff		1568210	0		<=			
ANR	1569138	AdditiveExpression	( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 )		1568210	0		-			
ANR	1569139	CastExpression	( sljit_sw ) jump -> u . target		1568210	0					
ANR	1569140	CastTarget	sljit_sw		1568210	0					
ANR	1569141	MemberAccess	jump -> u . target		1568210	1					
ANR	1569142	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569143	Identifier	jump		1568210	0					
ANR	1569144	Identifier	u		1568210	1					
ANR	1569145	Identifier	target		1568210	1					
ANR	1569146	CastExpression	( sljit_sw ) ( buf_ptr + 2 )		1568210	1					
ANR	1569147	CastTarget	sljit_sw		1568210	0					
ANR	1569148	AdditiveExpression	buf_ptr + 2		1568210	1		+			
ANR	1569149	Identifier	buf_ptr		1568210	0					
ANR	1569150	PrimaryExpression	2		1568210	1					
ANR	1569151	PrimaryExpression	0x01ffffff		1568210	1					
ANR	1569152	RelationalExpression	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >= - 0x02000000		1568210	1		>=			
ANR	1569153	AdditiveExpression	( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 )		1568210	0		-			
ANR	1569154	CastExpression	( sljit_sw ) jump -> u . target		1568210	0					
ANR	1569155	CastTarget	sljit_sw		1568210	0					
ANR	1569156	MemberAccess	jump -> u . target		1568210	1					
ANR	1569157	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569158	Identifier	jump		1568210	0					
ANR	1569159	Identifier	u		1568210	1					
ANR	1569160	Identifier	target		1568210	1					
ANR	1569161	CastExpression	( sljit_sw ) ( buf_ptr + 2 )		1568210	1					
ANR	1569162	CastTarget	sljit_sw		1568210	0					
ANR	1569163	AdditiveExpression	buf_ptr + 2		1568210	1		+			
ANR	1569164	Identifier	buf_ptr		1568210	0					
ANR	1569165	PrimaryExpression	2		1568210	1					
ANR	1569166	UnaryOperationExpression	- 0x02000000		1568210	1					
ANR	1569167	UnaryOperator	-		1568210	0					
ANR	1569168	PrimaryExpression	0x02000000		1568210	1					
ANR	1569169	ExpressionStatement	* buf_ptr |= ( ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >> 2 ) & 0x00ffffff	742:4:22823:22907	1568210	1	True				
ANR	1569170	AssignmentExpression	* buf_ptr |= ( ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >> 2 ) & 0x00ffffff		1568210	0		|=			
ANR	1569171	UnaryOperationExpression	* buf_ptr		1568210	0					
ANR	1569172	UnaryOperator	*		1568210	0					
ANR	1569173	Identifier	buf_ptr		1568210	1					
ANR	1569174	BitAndExpression	( ( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >> 2 ) & 0x00ffffff		1568210	1		&			
ANR	1569175	ShiftExpression	( ( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 ) ) >> 2		1568210	0		>>			
ANR	1569176	AdditiveExpression	( sljit_sw ) jump -> u . target - ( sljit_sw ) ( buf_ptr + 2 )		1568210	0		-			
ANR	1569177	CastExpression	( sljit_sw ) jump -> u . target		1568210	0					
ANR	1569178	CastTarget	sljit_sw		1568210	0					
ANR	1569179	MemberAccess	jump -> u . target		1568210	1					
ANR	1569180	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569181	Identifier	jump		1568210	0					
ANR	1569182	Identifier	u		1568210	1					
ANR	1569183	Identifier	target		1568210	1					
ANR	1569184	CastExpression	( sljit_sw ) ( buf_ptr + 2 )		1568210	1					
ANR	1569185	CastTarget	sljit_sw		1568210	0					
ANR	1569186	AdditiveExpression	buf_ptr + 2		1568210	1		+			
ANR	1569187	Identifier	buf_ptr		1568210	0					
ANR	1569188	PrimaryExpression	2		1568210	1					
ANR	1569189	PrimaryExpression	2		1568210	1					
ANR	1569190	PrimaryExpression	0x00ffffff		1568210	1					
ANR	1569191	ElseStatement	else		1568210	0					
ANR	1569192	IfStatement	if ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1568210	0					
ANR	1569193	Condition	jump -> flags & SLJIT_REWRITABLE_JUMP	745:11:22929:22963	1568210	0	True				
ANR	1569194	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1568210	0		&			
ANR	1569195	PtrMemberAccess	jump -> flags		1568210	0					
ANR	1569196	Identifier	jump		1568210	0					
ANR	1569197	Identifier	flags		1568210	1					
ANR	1569198	Identifier	SLJIT_REWRITABLE_JUMP		1568210	1					
ANR	1569199	CompoundStatement		189:48:5842:5842	1568210	1					
ANR	1569200	ExpressionStatement	jump -> addr = ( sljit_uw ) code_ptr	747:3:23028:23059	1568210	0	True				
ANR	1569201	AssignmentExpression	jump -> addr = ( sljit_uw ) code_ptr		1568210	0		=			
ANR	1569202	PtrMemberAccess	jump -> addr		1568210	0					
ANR	1569203	Identifier	jump		1568210	0					
ANR	1569204	Identifier	addr		1568210	1					
ANR	1569205	CastExpression	( sljit_uw ) code_ptr		1568210	1					
ANR	1569206	CastTarget	sljit_uw		1568210	0					
ANR	1569207	Identifier	code_ptr		1568210	1					
ANR	1569208	ExpressionStatement	code_ptr [ 0 ] = ( sljit_uw ) buf_ptr	748:3:23064:23095	1568210	1	True				
ANR	1569209	AssignmentExpression	code_ptr [ 0 ] = ( sljit_uw ) buf_ptr		1568210	0		=			
ANR	1569210	ArrayIndexing	code_ptr [ 0 ]		1568210	0					
ANR	1569211	Identifier	code_ptr		1568210	0					
ANR	1569212	PrimaryExpression	0		1568210	1					
ANR	1569213	CastExpression	( sljit_uw ) buf_ptr		1568210	1					
ANR	1569214	CastTarget	sljit_uw		1568210	0					
ANR	1569215	Identifier	buf_ptr		1568210	1					
ANR	1569216	ExpressionStatement	code_ptr [ 1 ] = * buf_ptr	749:3:23100:23122	1568210	2	True				
ANR	1569217	AssignmentExpression	code_ptr [ 1 ] = * buf_ptr		1568210	0		=			
ANR	1569218	ArrayIndexing	code_ptr [ 1 ]		1568210	0					
ANR	1569219	Identifier	code_ptr		1568210	0					
ANR	1569220	PrimaryExpression	1		1568210	1					
ANR	1569221	UnaryOperationExpression	* buf_ptr		1568210	1					
ANR	1569222	UnaryOperator	*		1568210	0					
ANR	1569223	Identifier	buf_ptr		1568210	1					
ANR	1569224	ExpressionStatement	"inline_set_jump_addr ( ( sljit_uw ) code_ptr , ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target , 0 )"	750:3:23127:23237	1568210	3	True				
ANR	1569225	CallExpression	"inline_set_jump_addr ( ( sljit_uw ) code_ptr , ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target , 0 )"		1568210	0					
ANR	1569226	Callee	inline_set_jump_addr		1568210	0					
ANR	1569227	Identifier	inline_set_jump_addr		1568210	0					
ANR	1569228	ArgumentList	( sljit_uw ) code_ptr		1568210	1					
ANR	1569229	Argument	( sljit_uw ) code_ptr		1568210	0					
ANR	1569230	CastExpression	( sljit_uw ) code_ptr		1568210	0					
ANR	1569231	CastTarget	sljit_uw		1568210	0					
ANR	1569232	Identifier	code_ptr		1568210	1					
ANR	1569233	Argument	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1568210	1					
ANR	1569234	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1568210	0					
ANR	1569235	Condition	jump -> flags & JUMP_LABEL		1568210	0					
ANR	1569236	BitAndExpression	jump -> flags & JUMP_LABEL		1568210	0		&			
ANR	1569237	PtrMemberAccess	jump -> flags		1568210	0					
ANR	1569238	Identifier	jump		1568210	0					
ANR	1569239	Identifier	flags		1568210	1					
ANR	1569240	Identifier	JUMP_LABEL		1568210	1					
ANR	1569241	PtrMemberAccess	jump -> u . label -> addr		1568210	1					
ANR	1569242	MemberAccess	jump -> u . label		1568210	0					
ANR	1569243	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569244	Identifier	jump		1568210	0					
ANR	1569245	Identifier	u		1568210	1					
ANR	1569246	Identifier	label		1568210	1					
ANR	1569247	Identifier	addr		1568210	1					
ANR	1569248	MemberAccess	jump -> u . target		1568210	2					
ANR	1569249	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569250	Identifier	jump		1568210	0					
ANR	1569251	Identifier	u		1568210	1					
ANR	1569252	Identifier	target		1568210	1					
ANR	1569253	Argument	0		1568210	2					
ANR	1569254	PrimaryExpression	0		1568210	0					
ANR	1569255	ExpressionStatement	code_ptr += 2	751:3:23242:23255	1568210	4	True				
ANR	1569256	AssignmentExpression	code_ptr += 2		1568210	0		+=			
ANR	1569257	Identifier	code_ptr		1568210	0					
ANR	1569258	PrimaryExpression	2		1568210	1					
ANR	1569259	ElseStatement	else		1568210	0					
ANR	1569260	CompoundStatement		200:7:6271:6271	1568210	0					
ANR	1569261	IfStatement	if ( jump -> flags & IS_BL )		1568210	0					
ANR	1569262	Condition	jump -> flags & IS_BL	758:7:23461:23479	1568210	0	True				
ANR	1569263	BitAndExpression	jump -> flags & IS_BL		1568210	0		&			
ANR	1569264	PtrMemberAccess	jump -> flags		1568210	0					
ANR	1569265	Identifier	jump		1568210	0					
ANR	1569266	Identifier	flags		1568210	1					
ANR	1569267	Identifier	IS_BL		1568210	1					
ANR	1569268	ExpressionStatement	buf_ptr --	759:4:23486:23495	1568210	1	True				
ANR	1569269	PostIncDecOperationExpression	buf_ptr --		1568210	0					
ANR	1569270	Identifier	buf_ptr		1568210	0					
ANR	1569271	IncDec	--		1568210	1					
ANR	1569272	IfStatement	if ( * buf_ptr & ( 1 << 23 ) )		1568210	1					
ANR	1569273	Condition	* buf_ptr & ( 1 << 23 )	760:7:23504:23523	1568210	0	True				
ANR	1569274	BitAndExpression	* buf_ptr & ( 1 << 23 )		1568210	0		&			
ANR	1569275	UnaryOperationExpression	* buf_ptr		1568210	0					
ANR	1569276	UnaryOperator	*		1568210	0					
ANR	1569277	Identifier	buf_ptr		1568210	1					
ANR	1569278	ShiftExpression	1 << 23		1568210	1		<<			
ANR	1569279	PrimaryExpression	1		1568210	0					
ANR	1569280	PrimaryExpression	23		1568210	1					
ANR	1569281	ExpressionStatement	buf_ptr += ( ( * buf_ptr & 0xfff ) >> 2 ) + 2	761:4:23530:23570	1568210	1	True				
ANR	1569282	AssignmentExpression	buf_ptr += ( ( * buf_ptr & 0xfff ) >> 2 ) + 2		1568210	0		+=			
ANR	1569283	Identifier	buf_ptr		1568210	0					
ANR	1569284	AdditiveExpression	( ( * buf_ptr & 0xfff ) >> 2 ) + 2		1568210	1		+			
ANR	1569285	ShiftExpression	( * buf_ptr & 0xfff ) >> 2		1568210	0		>>			
ANR	1569286	BitAndExpression	* buf_ptr & 0xfff		1568210	0		&			
ANR	1569287	UnaryOperationExpression	* buf_ptr		1568210	0					
ANR	1569288	UnaryOperator	*		1568210	0					
ANR	1569289	Identifier	buf_ptr		1568210	1					
ANR	1569290	PrimaryExpression	0xfff		1568210	1					
ANR	1569291	PrimaryExpression	2		1568210	1					
ANR	1569292	PrimaryExpression	2		1568210	1					
ANR	1569293	ElseStatement	else		1568210	0					
ANR	1569294	ExpressionStatement	buf_ptr += 1	763:4:23584:23596	1568210	0	True				
ANR	1569295	AssignmentExpression	buf_ptr += 1		1568210	0		+=			
ANR	1569296	Identifier	buf_ptr		1568210	0					
ANR	1569297	PrimaryExpression	1		1568210	1					
ANR	1569298	ExpressionStatement	* buf_ptr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target	764:3:23601:23677	1568210	2	True				
ANR	1569299	AssignmentExpression	* buf_ptr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1568210	0		=			
ANR	1569300	UnaryOperationExpression	* buf_ptr		1568210	0					
ANR	1569301	UnaryOperator	*		1568210	0					
ANR	1569302	Identifier	buf_ptr		1568210	1					
ANR	1569303	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1568210	1					
ANR	1569304	Condition	jump -> flags & JUMP_LABEL		1568210	0					
ANR	1569305	BitAndExpression	jump -> flags & JUMP_LABEL		1568210	0		&			
ANR	1569306	PtrMemberAccess	jump -> flags		1568210	0					
ANR	1569307	Identifier	jump		1568210	0					
ANR	1569308	Identifier	flags		1568210	1					
ANR	1569309	Identifier	JUMP_LABEL		1568210	1					
ANR	1569310	PtrMemberAccess	jump -> u . label -> addr		1568210	1					
ANR	1569311	MemberAccess	jump -> u . label		1568210	0					
ANR	1569312	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569313	Identifier	jump		1568210	0					
ANR	1569314	Identifier	u		1568210	1					
ANR	1569315	Identifier	label		1568210	1					
ANR	1569316	Identifier	addr		1568210	1					
ANR	1569317	MemberAccess	jump -> u . target		1568210	2					
ANR	1569318	PtrMemberAccess	jump -> u		1568210	0					
ANR	1569319	Identifier	jump		1568210	0					
ANR	1569320	Identifier	u		1568210	1					
ANR	1569321	Identifier	target		1568210	1					
ANR	1569322	ExpressionStatement	jump = jump -> next	769:2:23812:23829	1568210	2	True				
ANR	1569323	AssignmentExpression	jump = jump -> next		1568210	0		=			
ANR	1569324	Identifier	jump		1568210	0					
ANR	1569325	PtrMemberAccess	jump -> next		1568210	1					
ANR	1569326	Identifier	jump		1568210	0					
ANR	1569327	Identifier	next		1568210	1					
ANR	1569328	ExpressionStatement	const_ = compiler -> consts	773:1:23893:23918	1568210	44	True				
ANR	1569329	AssignmentExpression	const_ = compiler -> consts		1568210	0		=			
ANR	1569330	Identifier	const_		1568210	0					
ANR	1569331	PtrMemberAccess	compiler -> consts		1568210	1					
ANR	1569332	Identifier	compiler		1568210	0					
ANR	1569333	Identifier	consts		1568210	1					
ANR	1569334	WhileStatement	while ( const_ )		1568210	45					
ANR	1569335	Condition	const_	774:8:23928:23933	1568210	0	True				
ANR	1569336	Identifier	const_		1568210	0					
ANR	1569337	CompoundStatement		218:16:6812:6812	1568210	1					
ANR	1569338	ExpressionStatement	buf_ptr = ( sljit_uw * ) const_ -> addr	775:2:23940:23973	1568210	0	True				
ANR	1569339	AssignmentExpression	buf_ptr = ( sljit_uw * ) const_ -> addr		1568210	0		=			
ANR	1569340	Identifier	buf_ptr		1568210	0					
ANR	1569341	CastExpression	( sljit_uw * ) const_ -> addr		1568210	1					
ANR	1569342	CastTarget	sljit_uw *		1568210	0					
ANR	1569343	PtrMemberAccess	const_ -> addr		1568210	1					
ANR	1569344	Identifier	const_		1568210	0					
ANR	1569345	Identifier	addr		1568210	1					
ANR	1569346	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	776:2:23977:24010	1568210	1	True				
ANR	1569347	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1568210	0		=			
ANR	1569348	PtrMemberAccess	const_ -> addr		1568210	0					
ANR	1569349	Identifier	const_		1568210	0					
ANR	1569350	Identifier	addr		1568210	1					
ANR	1569351	CastExpression	( sljit_uw ) code_ptr		1568210	1					
ANR	1569352	CastTarget	sljit_uw		1568210	0					
ANR	1569353	Identifier	code_ptr		1568210	1					
ANR	1569354	ExpressionStatement	code_ptr [ 0 ] = ( sljit_uw ) buf_ptr	778:2:24015:24046	1568210	2	True				
ANR	1569355	AssignmentExpression	code_ptr [ 0 ] = ( sljit_uw ) buf_ptr		1568210	0		=			
ANR	1569356	ArrayIndexing	code_ptr [ 0 ]		1568210	0					
ANR	1569357	Identifier	code_ptr		1568210	0					
ANR	1569358	PrimaryExpression	0		1568210	1					
ANR	1569359	CastExpression	( sljit_uw ) buf_ptr		1568210	1					
ANR	1569360	CastTarget	sljit_uw		1568210	0					
ANR	1569361	Identifier	buf_ptr		1568210	1					
ANR	1569362	ExpressionStatement	code_ptr [ 1 ] = * buf_ptr	779:2:24050:24072	1568210	3	True				
ANR	1569363	AssignmentExpression	code_ptr [ 1 ] = * buf_ptr		1568210	0		=			
ANR	1569364	ArrayIndexing	code_ptr [ 1 ]		1568210	0					
ANR	1569365	Identifier	code_ptr		1568210	0					
ANR	1569366	PrimaryExpression	1		1568210	1					
ANR	1569367	UnaryOperationExpression	* buf_ptr		1568210	1					
ANR	1569368	UnaryOperator	*		1568210	0					
ANR	1569369	Identifier	buf_ptr		1568210	1					
ANR	1569370	IfStatement	if ( * buf_ptr & ( 1 << 23 ) )		1568210	4					
ANR	1569371	Condition	* buf_ptr & ( 1 << 23 )	780:6:24080:24099	1568210	0	True				
ANR	1569372	BitAndExpression	* buf_ptr & ( 1 << 23 )		1568210	0		&			
ANR	1569373	UnaryOperationExpression	* buf_ptr		1568210	0					
ANR	1569374	UnaryOperator	*		1568210	0					
ANR	1569375	Identifier	buf_ptr		1568210	1					
ANR	1569376	ShiftExpression	1 << 23		1568210	1		<<			
ANR	1569377	PrimaryExpression	1		1568210	0					
ANR	1569378	PrimaryExpression	23		1568210	1					
ANR	1569379	ExpressionStatement	buf_ptr += ( ( * buf_ptr & 0xfff ) >> 2 ) + 2	781:3:24105:24145	1568210	1	True				
ANR	1569380	AssignmentExpression	buf_ptr += ( ( * buf_ptr & 0xfff ) >> 2 ) + 2		1568210	0		+=			
ANR	1569381	Identifier	buf_ptr		1568210	0					
ANR	1569382	AdditiveExpression	( ( * buf_ptr & 0xfff ) >> 2 ) + 2		1568210	1		+			
ANR	1569383	ShiftExpression	( * buf_ptr & 0xfff ) >> 2		1568210	0		>>			
ANR	1569384	BitAndExpression	* buf_ptr & 0xfff		1568210	0		&			
ANR	1569385	UnaryOperationExpression	* buf_ptr		1568210	0					
ANR	1569386	UnaryOperator	*		1568210	0					
ANR	1569387	Identifier	buf_ptr		1568210	1					
ANR	1569388	PrimaryExpression	0xfff		1568210	1					
ANR	1569389	PrimaryExpression	2		1568210	1					
ANR	1569390	PrimaryExpression	2		1568210	1					
ANR	1569391	ElseStatement	else		1568210	0					
ANR	1569392	ExpressionStatement	buf_ptr += 1	783:3:24157:24169	1568210	0	True				
ANR	1569393	AssignmentExpression	buf_ptr += 1		1568210	0		+=			
ANR	1569394	Identifier	buf_ptr		1568210	0					
ANR	1569395	PrimaryExpression	1		1568210	1					
ANR	1569396	ExpressionStatement	"inline_set_const ( ( sljit_uw ) code_ptr , * buf_ptr , 0 )"	785:2:24229:24278	1568210	5	True				
ANR	1569397	CallExpression	"inline_set_const ( ( sljit_uw ) code_ptr , * buf_ptr , 0 )"		1568210	0					
ANR	1569398	Callee	inline_set_const		1568210	0					
ANR	1569399	Identifier	inline_set_const		1568210	0					
ANR	1569400	ArgumentList	( sljit_uw ) code_ptr		1568210	1					
ANR	1569401	Argument	( sljit_uw ) code_ptr		1568210	0					
ANR	1569402	CastExpression	( sljit_uw ) code_ptr		1568210	0					
ANR	1569403	CastTarget	sljit_uw		1568210	0					
ANR	1569404	Identifier	code_ptr		1568210	1					
ANR	1569405	Argument	* buf_ptr		1568210	1					
ANR	1569406	UnaryOperationExpression	* buf_ptr		1568210	0					
ANR	1569407	UnaryOperator	*		1568210	0					
ANR	1569408	Identifier	buf_ptr		1568210	1					
ANR	1569409	Argument	0		1568210	2					
ANR	1569410	PrimaryExpression	0		1568210	0					
ANR	1569411	ExpressionStatement	code_ptr += 2	786:2:24282:24295	1568210	6	True				
ANR	1569412	AssignmentExpression	code_ptr += 2		1568210	0		+=			
ANR	1569413	Identifier	code_ptr		1568210	0					
ANR	1569414	PrimaryExpression	2		1568210	1					
ANR	1569415	ExpressionStatement	const_ = const_ -> next	788:2:24300:24321	1568210	7	True				
ANR	1569416	AssignmentExpression	const_ = const_ -> next		1568210	0		=			
ANR	1569417	Identifier	const_		1568210	0					
ANR	1569418	PtrMemberAccess	const_ -> next		1568210	1					
ANR	1569419	Identifier	const_		1568210	0					
ANR	1569420	Identifier	next		1568210	1					
ANR	1569421	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_si ) size )	792:1:24335:24382	1568210	46	True				
ANR	1569422	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_si ) size )		1568210	0					
ANR	1569423	Callee	SLJIT_ASSERT		1568210	0					
ANR	1569424	Identifier	SLJIT_ASSERT		1568210	0					
ANR	1569425	ArgumentList	code_ptr - code <= ( sljit_si ) size		1568210	1					
ANR	1569426	Argument	code_ptr - code <= ( sljit_si ) size		1568210	0					
ANR	1569427	RelationalExpression	code_ptr - code <= ( sljit_si ) size		1568210	0		<=			
ANR	1569428	AdditiveExpression	code_ptr - code		1568210	0		-			
ANR	1569429	Identifier	code_ptr		1568210	0					
ANR	1569430	Identifier	code		1568210	1					
ANR	1569431	CastExpression	( sljit_si ) size		1568210	1					
ANR	1569432	CastTarget	sljit_si		1568210	0					
ANR	1569433	Identifier	size		1568210	1					
ANR	1569434	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	794:1:24386:24422	1568210	47	True				
ANR	1569435	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1568210	0		=			
ANR	1569436	PtrMemberAccess	compiler -> error		1568210	0					
ANR	1569437	Identifier	compiler		1568210	0					
ANR	1569438	Identifier	error		1568210	1					
ANR	1569439	Identifier	SLJIT_ERR_COMPILED		1568210	1					
ANR	1569440	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_uw )	795:1:24425:24489	1568210	48	True				
ANR	1569441	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_uw )		1568210	0		=			
ANR	1569442	PtrMemberAccess	compiler -> executable_size		1568210	0					
ANR	1569443	Identifier	compiler		1568210	0					
ANR	1569444	Identifier	executable_size		1568210	1					
ANR	1569445	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_uw )		1568210	1		*			
ANR	1569446	AdditiveExpression	code_ptr - code		1568210	0		-			
ANR	1569447	Identifier	code_ptr		1568210	0					
ANR	1569448	Identifier	code		1568210	1					
ANR	1569449	SizeofExpression	sizeof ( sljit_uw )		1568210	1					
ANR	1569450	Sizeof	sizeof		1568210	0					
ANR	1569451	SizeofOperand	sljit_uw		1568210	1					
ANR	1569452	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	796:1:24492:24525	1568210	49	True				
ANR	1569453	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1568210	0					
ANR	1569454	Callee	SLJIT_CACHE_FLUSH		1568210	0					
ANR	1569455	Identifier	SLJIT_CACHE_FLUSH		1568210	0					
ANR	1569456	ArgumentList	code		1568210	1					
ANR	1569457	Argument	code		1568210	0					
ANR	1569458	Identifier	code		1568210	0					
ANR	1569459	Argument	code_ptr		1568210	1					
ANR	1569460	Identifier	code_ptr		1568210	0					
ANR	1569461	ReturnStatement	return code ;	797:1:24528:24539	1568210	50	True				
ANR	1569462	Identifier	code		1568210	0					
ANR	1569463	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1568210	1					
ANR	1569464	Identifier	sljit_generate_code		1568210	2					
ANR	1569465	ParameterList	struct sljit_compiler * compiler		1568210	3					
ANR	1569466	Parameter	struct sljit_compiler * compiler	556:51:17090:17120	1568210	0	True				
ANR	1569467	ParameterType	struct sljit_compiler *		1568210	0					
ANR	1569468	Identifier	compiler		1568210	1					
ANR	1569469	CFGEntryNode	ENTRY		1568210		True				
ANR	1569470	CFGExitNode	EXIT		1568210		True				
ANR	1569471	Symbol	label -> addr		1568210						
ANR	1569472	Symbol	SLJIT_ERR_ALLOC_FAILED		1568210						
ANR	1569473	Symbol	last_pc_patch		1568210						
ANR	1569474	Symbol	compiler -> buf		1568210						
ANR	1569475	Symbol	compiler -> patches		1568210						
ANR	1569476	Symbol	SLJIT_MALLOC_EXEC		1568210						
ANR	1569477	Symbol	JUMP_LABEL		1568210						
ANR	1569478	Symbol	label -> next		1568210						
ANR	1569479	Symbol	cpool_start_address		1568210						
ANR	1569480	Symbol	* compiler		1568210						
ANR	1569481	Symbol	cpool_skip_alignment		1568210						
ANR	1569482	Symbol	const_ -> next		1568210						
ANR	1569483	Symbol	const_ -> addr		1568210						
ANR	1569484	Symbol	buf -> next		1568210						
ANR	1569485	Symbol	compiler -> cpool		1568210						
ANR	1569486	Symbol	buf_end		1568210						
ANR	1569487	Symbol	compiler -> executable_size		1568210						
ANR	1569488	Symbol	jump		1568210						
ANR	1569489	Symbol	buf -> used_size		1568210						
ANR	1569490	Symbol	check_sljit_generate_code		1568210						
ANR	1569491	Symbol	patch_pc_relative_loads		1568210						
ANR	1569492	Symbol	* buf		1568210						
ANR	1569493	Symbol	NULL		1568210						
ANR	1569494	Symbol	compiler -> labels		1568210						
ANR	1569495	Symbol	buf -> memory		1568210						
ANR	1569496	Symbol	detect_jump_type		1568210						
ANR	1569497	Symbol	PUSH_POOL		1568210						
ANR	1569498	Symbol	* buf_ptr ++		1568210						
ANR	1569499	Symbol	jump -> addr		1568210						
ANR	1569500	Symbol	CONST_POOL_ALIGNMENT		1568210						
ANR	1569501	Symbol	buf_ptr		1568210						
ANR	1569502	Symbol	& first_patch		1568210						
ANR	1569503	Symbol	* code_ptr		1568210						
ANR	1569504	Symbol	* jump -> u . label		1568210						
ANR	1569505	Symbol	size		1568210						
ANR	1569506	Symbol	jump -> u . target		1568210						
ANR	1569507	Symbol	compiler -> jumps		1568210						
ANR	1569508	Symbol	label -> size		1568210						
ANR	1569509	Symbol	jump -> next		1568210						
ANR	1569510	Symbol	ALIGN_INSTRUCTION		1568210						
ANR	1569511	Symbol	SLJIT_UNLIKELY		1568210						
ANR	1569512	Symbol	B		1568210						
ANR	1569513	Symbol	code		1568210						
ANR	1569514	Symbol	cpool_current_index		1568210						
ANR	1569515	Symbol	* * jump		1568210						
ANR	1569516	Symbol	* jump		1568210						
ANR	1569517	Symbol	jump -> u		1568210						
ANR	1569518	Symbol	cpool_size		1568210						
ANR	1569519	Symbol	jump -> flags		1568210						
ANR	1569520	Symbol	JUMP_ADDR		1568210						
ANR	1569521	Symbol	~PUSH_POOL		1568210						
ANR	1569522	Symbol	compiler -> cpool_fill		1568210						
ANR	1569523	Symbol	word_count		1568210						
ANR	1569524	Symbol	code_ptr		1568210						
ANR	1569525	Symbol	IS_BL		1568210						
ANR	1569526	Symbol	SLJIT_REWRITABLE_JUMP		1568210						
ANR	1569527	Symbol	compiler		1568210						
ANR	1569528	Symbol	first_patch		1568210						
ANR	1569529	Symbol	* buf_ptr		1568210						
ANR	1569530	Symbol	const_		1568210						
ANR	1569531	Symbol	compiler -> consts		1568210						
ANR	1569532	Symbol	* const_		1568210						
ANR	1569533	Symbol	label		1568210						
ANR	1569534	Symbol	buf		1568210						
ANR	1569535	Symbol	compiler -> size		1568210						
ANR	1569536	Symbol	* jump -> u		1568210						
ANR	1569537	Symbol	resolve_const_pool_index		1568210						
ANR	1569538	Symbol	PATCH_B		1568210						
ANR	1569539	Symbol	jump -> u . label -> addr		1568210						
ANR	1569540	Symbol	jump -> u . label		1568210						
ANR	1569541	Symbol	compiler -> error		1568210						
ANR	1569542	Symbol	SLJIT_ERR_COMPILED		1568210						
ANR	1569543	Symbol	* label		1568210						
ANR	1569544	DeclStmt									
ANR	1569545	Decl							sljit_si	"sljit_si ( struct sljit_compiler * compiler , sljit_si op , sljit_si inp_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w )"	emit_op
ANR	1569546	Function	sljit_emit_enter	828:0:25522:27077							
ANR	1569547	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1569546	0					
ANR	1569548	CompoundStatement		831:0:25738:27077	1569546	0					
ANR	1569549	IdentifierDeclStatement	"sljit_si size , i , tmp ;"	832:1:25741:25762	1569546	0	True				
ANR	1569550	IdentifierDecl	size		1569546	0					
ANR	1569551	IdentifierDeclType	sljit_si		1569546	0					
ANR	1569552	Identifier	size		1569546	1					
ANR	1569553	IdentifierDecl	i		1569546	1					
ANR	1569554	IdentifierDeclType	sljit_si		1569546	0					
ANR	1569555	Identifier	i		1569546	1					
ANR	1569556	IdentifierDecl	tmp		1569546	2					
ANR	1569557	IdentifierDeclType	sljit_si		1569546	0					
ANR	1569558	Identifier	tmp		1569546	1					
ANR	1569559	IdentifierDeclStatement	sljit_uw push ;	833:1:25765:25778	1569546	1	True				
ANR	1569560	IdentifierDecl	push		1569546	0					
ANR	1569561	IdentifierDeclType	sljit_uw		1569546	0					
ANR	1569562	Identifier	push		1569546	1					
ANR	1569563	ExpressionStatement	CHECK_ERROR ( )	835:1:25782:25795	1569546	2	True				
ANR	1569564	CallExpression	CHECK_ERROR ( )		1569546	0					
ANR	1569565	Callee	CHECK_ERROR		1569546	0					
ANR	1569566	Identifier	CHECK_ERROR		1569546	0					
ANR	1569567	ArgumentList			1569546	1					
ANR	1569568	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	836:1:25798:25904	1569546	3	True				
ANR	1569569	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1569546	0					
ANR	1569570	Callee	CHECK		1569546	0					
ANR	1569571	Identifier	CHECK		1569546	0					
ANR	1569572	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1569546	1					
ANR	1569573	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1569546	0					
ANR	1569574	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1569546	0					
ANR	1569575	Callee	check_sljit_emit_enter		1569546	0					
ANR	1569576	Identifier	check_sljit_emit_enter		1569546	0					
ANR	1569577	ArgumentList	compiler		1569546	1					
ANR	1569578	Argument	compiler		1569546	0					
ANR	1569579	Identifier	compiler		1569546	0					
ANR	1569580	Argument	options		1569546	1					
ANR	1569581	Identifier	options		1569546	0					
ANR	1569582	Argument	args		1569546	2					
ANR	1569583	Identifier	args		1569546	0					
ANR	1569584	Argument	scratches		1569546	3					
ANR	1569585	Identifier	scratches		1569546	0					
ANR	1569586	Argument	saveds		1569546	4					
ANR	1569587	Identifier	saveds		1569546	0					
ANR	1569588	Argument	fscratches		1569546	5					
ANR	1569589	Identifier	fscratches		1569546	0					
ANR	1569590	Argument	fsaveds		1569546	6					
ANR	1569591	Identifier	fsaveds		1569546	0					
ANR	1569592	Argument	local_size		1569546	7					
ANR	1569593	Identifier	local_size		1569546	0					
ANR	1569594	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	837:1:25907:25998	1569546	4	True				
ANR	1569595	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1569546	0					
ANR	1569596	Callee	set_emit_enter		1569546	0					
ANR	1569597	Identifier	set_emit_enter		1569546	0					
ANR	1569598	ArgumentList	compiler		1569546	1					
ANR	1569599	Argument	compiler		1569546	0					
ANR	1569600	Identifier	compiler		1569546	0					
ANR	1569601	Argument	options		1569546	1					
ANR	1569602	Identifier	options		1569546	0					
ANR	1569603	Argument	args		1569546	2					
ANR	1569604	Identifier	args		1569546	0					
ANR	1569605	Argument	scratches		1569546	3					
ANR	1569606	Identifier	scratches		1569546	0					
ANR	1569607	Argument	saveds		1569546	4					
ANR	1569608	Identifier	saveds		1569546	0					
ANR	1569609	Argument	fscratches		1569546	5					
ANR	1569610	Identifier	fscratches		1569546	0					
ANR	1569611	Argument	fsaveds		1569546	6					
ANR	1569612	Identifier	fsaveds		1569546	0					
ANR	1569613	Argument	local_size		1569546	7					
ANR	1569614	Identifier	local_size		1569546	0					
ANR	1569615	ExpressionStatement	push = PUSH | ( 1 << 14 )	841:1:26076:26099	1569546	5	True				
ANR	1569616	AssignmentExpression	push = PUSH | ( 1 << 14 )		1569546	0		=			
ANR	1569617	Identifier	push		1569546	0					
ANR	1569618	InclusiveOrExpression	PUSH | ( 1 << 14 )		1569546	1		|			
ANR	1569619	Identifier	PUSH		1569546	0					
ANR	1569620	ShiftExpression	1 << 14		1569546	1		<<			
ANR	1569621	PrimaryExpression	1		1569546	0					
ANR	1569622	PrimaryExpression	14		1569546	1					
ANR	1569623	ExpressionStatement	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG	843:1:26103:26199	1569546	6	True				
ANR	1569624	AssignmentExpression	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1569546	0		=			
ANR	1569625	Identifier	tmp		1569546	0					
ANR	1569626	ConditionalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1569546	1					
ANR	1569627	Condition	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1569546	0					
ANR	1569628	RelationalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1569546	0		<			
ANR	1569629	Identifier	saveds		1569546	0					
ANR	1569630	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1569546	1					
ANR	1569631	AdditiveExpression	SLJIT_S0 + 1 - saveds		1569546	1		+			
ANR	1569632	Identifier	SLJIT_S0		1569546	0					
ANR	1569633	AdditiveExpression	1 - saveds		1569546	1		-			
ANR	1569634	PrimaryExpression	1		1569546	0					
ANR	1569635	Identifier	saveds		1569546	1					
ANR	1569636	Identifier	SLJIT_FIRST_SAVED_REG		1569546	2					
ANR	1569637	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1569546	7					
ANR	1569638	ForInit	i = SLJIT_S0 ;	844:6:26207:26219	1569546	0	True				
ANR	1569639	AssignmentExpression	i = SLJIT_S0		1569546	0		=			
ANR	1569640	Identifier	i		1569546	0					
ANR	1569641	Identifier	SLJIT_S0		1569546	1					
ANR	1569642	Condition	i >= tmp	844:20:26221:26228	1569546	1	True				
ANR	1569643	RelationalExpression	i >= tmp		1569546	0		>=			
ANR	1569644	Identifier	i		1569546	0					
ANR	1569645	Identifier	tmp		1569546	1					
ANR	1569646	PostIncDecOperationExpression	i --	844:30:26231:26233	1569546	2	True				
ANR	1569647	Identifier	i		1569546	0					
ANR	1569648	IncDec	--		1569546	1					
ANR	1569649	ExpressionStatement	push |= 1 << reg_map [ i ]	845:2:26238:26261	1569546	3	True				
ANR	1569650	AssignmentExpression	push |= 1 << reg_map [ i ]		1569546	0		|=			
ANR	1569651	Identifier	push		1569546	0					
ANR	1569652	ShiftExpression	1 << reg_map [ i ]		1569546	1		<<			
ANR	1569653	PrimaryExpression	1		1569546	0					
ANR	1569654	ArrayIndexing	reg_map [ i ]		1569546	1					
ANR	1569655	Identifier	reg_map		1569546	0					
ANR	1569656	Identifier	i		1569546	1					
ANR	1569657	ForStatement	for ( i = scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1569546	8					
ANR	1569658	ForInit	i = scratches ;	847:6:26270:26283	1569546	0	True				
ANR	1569659	AssignmentExpression	i = scratches		1569546	0		=			
ANR	1569660	Identifier	i		1569546	0					
ANR	1569661	Identifier	scratches		1569546	1					
ANR	1569662	Condition	i >= SLJIT_FIRST_SAVED_REG	847:21:26285:26310	1569546	1	True				
ANR	1569663	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1569546	0		>=			
ANR	1569664	Identifier	i		1569546	0					
ANR	1569665	Identifier	SLJIT_FIRST_SAVED_REG		1569546	1					
ANR	1569666	PostIncDecOperationExpression	i --	847:49:26313:26315	1569546	2	True				
ANR	1569667	Identifier	i		1569546	0					
ANR	1569668	IncDec	--		1569546	1					
ANR	1569669	ExpressionStatement	push |= 1 << reg_map [ i ]	848:2:26320:26343	1569546	3	True				
ANR	1569670	AssignmentExpression	push |= 1 << reg_map [ i ]		1569546	0		|=			
ANR	1569671	Identifier	push		1569546	0					
ANR	1569672	ShiftExpression	1 << reg_map [ i ]		1569546	1		<<			
ANR	1569673	PrimaryExpression	1		1569546	0					
ANR	1569674	ArrayIndexing	reg_map [ i ]		1569546	1					
ANR	1569675	Identifier	reg_map		1569546	0					
ANR	1569676	Identifier	i		1569546	1					
ANR	1569677	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , push ) )"	850:1:26347:26381	1569546	9	True				
ANR	1569678	CallExpression	"FAIL_IF ( push_inst ( compiler , push ) )"		1569546	0					
ANR	1569679	Callee	FAIL_IF		1569546	0					
ANR	1569680	Identifier	FAIL_IF		1569546	0					
ANR	1569681	ArgumentList	"push_inst ( compiler , push )"		1569546	1					
ANR	1569682	Argument	"push_inst ( compiler , push )"		1569546	0					
ANR	1569683	CallExpression	"push_inst ( compiler , push )"		1569546	0					
ANR	1569684	Callee	push_inst		1569546	0					
ANR	1569685	Identifier	push_inst		1569546	0					
ANR	1569686	ArgumentList	compiler		1569546	1					
ANR	1569687	Argument	compiler		1569546	0					
ANR	1569688	Identifier	compiler		1569546	0					
ANR	1569689	Argument	push		1569546	1					
ANR	1569690	Identifier	push		1569546	0					
ANR	1569691	ExpressionStatement	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"	853:1:26426:26479	1569546	10	True				
ANR	1569692	AssignmentExpression	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1569546	0		=			
ANR	1569693	Identifier	size		1569546	0					
ANR	1569694	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1569546	1					
ANR	1569695	Callee	GET_SAVED_REGISTERS_SIZE		1569546	0					
ANR	1569696	Identifier	GET_SAVED_REGISTERS_SIZE		1569546	0					
ANR	1569697	ArgumentList	scratches		1569546	1					
ANR	1569698	Argument	scratches		1569546	0					
ANR	1569699	Identifier	scratches		1569546	0					
ANR	1569700	Argument	saveds		1569546	1					
ANR	1569701	Identifier	saveds		1569546	0					
ANR	1569702	Argument	1		1569546	2					
ANR	1569703	PrimaryExpression	1		1569546	0					
ANR	1569704	ExpressionStatement	local_size = ( ( size + local_size + 7 ) & ~7 ) - size	854:1:26482:26532	1569546	11	True				
ANR	1569705	AssignmentExpression	local_size = ( ( size + local_size + 7 ) & ~7 ) - size		1569546	0		=			
ANR	1569706	Identifier	local_size		1569546	0					
ANR	1569707	AdditiveExpression	( ( size + local_size + 7 ) & ~7 ) - size		1569546	1		-			
ANR	1569708	BitAndExpression	( size + local_size + 7 ) & ~7		1569546	0		&			
ANR	1569709	AdditiveExpression	size + local_size + 7		1569546	0		+			
ANR	1569710	Identifier	size		1569546	0					
ANR	1569711	AdditiveExpression	local_size + 7		1569546	1		+			
ANR	1569712	Identifier	local_size		1569546	0					
ANR	1569713	PrimaryExpression	7		1569546	1					
ANR	1569714	Identifier	~7		1569546	1					
ANR	1569715	Identifier	size		1569546	1					
ANR	1569716	ExpressionStatement	compiler -> local_size = local_size	855:1:26535:26568	1569546	12	True				
ANR	1569717	AssignmentExpression	compiler -> local_size = local_size		1569546	0		=			
ANR	1569718	PtrMemberAccess	compiler -> local_size		1569546	0					
ANR	1569719	Identifier	compiler		1569546	0					
ANR	1569720	Identifier	local_size		1569546	1					
ANR	1569721	Identifier	local_size		1569546	1					
ANR	1569722	IfStatement	if ( local_size > 0 )		1569546	13					
ANR	1569723	Condition	local_size > 0	856:5:26575:26588	1569546	0	True				
ANR	1569724	RelationalExpression	local_size > 0		1569546	0		>			
ANR	1569725	Identifier	local_size		1569546	0					
ANR	1569726	PrimaryExpression	0		1569546	1					
ANR	1569727	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_SUB , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , local_size ) )"	857:2:26593:26690	1569546	1	True				
ANR	1569728	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_SUB , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , local_size ) )"		1569546	0					
ANR	1569729	Callee	FAIL_IF		1569546	0					
ANR	1569730	Identifier	FAIL_IF		1569546	0					
ANR	1569731	ArgumentList	"emit_op ( compiler , SLJIT_SUB , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , local_size )"		1569546	1					
ANR	1569732	Argument	"emit_op ( compiler , SLJIT_SUB , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , local_size )"		1569546	0					
ANR	1569733	CallExpression	"emit_op ( compiler , SLJIT_SUB , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , local_size )"		1569546	0					
ANR	1569734	Callee	emit_op		1569546	0					
ANR	1569735	Identifier	emit_op		1569546	0					
ANR	1569736	ArgumentList	compiler		1569546	1					
ANR	1569737	Argument	compiler		1569546	0					
ANR	1569738	Identifier	compiler		1569546	0					
ANR	1569739	Argument	SLJIT_SUB		1569546	1					
ANR	1569740	Identifier	SLJIT_SUB		1569546	0					
ANR	1569741	Argument	ALLOW_IMM		1569546	2					
ANR	1569742	Identifier	ALLOW_IMM		1569546	0					
ANR	1569743	Argument	SLJIT_SP		1569546	3					
ANR	1569744	Identifier	SLJIT_SP		1569546	0					
ANR	1569745	Argument	0		1569546	4					
ANR	1569746	PrimaryExpression	0		1569546	0					
ANR	1569747	Argument	SLJIT_SP		1569546	5					
ANR	1569748	Identifier	SLJIT_SP		1569546	0					
ANR	1569749	Argument	0		1569546	6					
ANR	1569750	PrimaryExpression	0		1569546	0					
ANR	1569751	Argument	SLJIT_IMM		1569546	7					
ANR	1569752	Identifier	SLJIT_IMM		1569546	0					
ANR	1569753	Argument	local_size		1569546	8					
ANR	1569754	Identifier	local_size		1569546	0					
ANR	1569755	IfStatement	if ( args >= 1 )		1569546	14					
ANR	1569756	Condition	args >= 1	859:5:26698:26706	1569546	0	True				
ANR	1569757	RelationalExpression	args >= 1		1569546	0		>=			
ANR	1569758	Identifier	args		1569546	0					
ANR	1569759	PrimaryExpression	1		1569546	1					
ANR	1569760	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S0 , SLJIT_UNUSED , RM ( SLJIT_R0 ) ) ) )"	860:2:26711:26811	1569546	1	True				
ANR	1569761	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S0 , SLJIT_UNUSED , RM ( SLJIT_R0 ) ) ) )"		1569546	0					
ANR	1569762	Callee	FAIL_IF		1569546	0					
ANR	1569763	Identifier	FAIL_IF		1569546	0					
ANR	1569764	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S0 , SLJIT_UNUSED , RM ( SLJIT_R0 ) ) )"		1569546	1					
ANR	1569765	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S0 , SLJIT_UNUSED , RM ( SLJIT_R0 ) ) )"		1569546	0					
ANR	1569766	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S0 , SLJIT_UNUSED , RM ( SLJIT_R0 ) ) )"		1569546	0					
ANR	1569767	Callee	push_inst		1569546	0					
ANR	1569768	Identifier	push_inst		1569546	0					
ANR	1569769	ArgumentList	compiler		1569546	1					
ANR	1569770	Argument	compiler		1569546	0					
ANR	1569771	Identifier	compiler		1569546	0					
ANR	1569772	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S0 , SLJIT_UNUSED , RM ( SLJIT_R0 ) )"		1569546	1					
ANR	1569773	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S0 , SLJIT_UNUSED , RM ( SLJIT_R0 ) )"		1569546	0					
ANR	1569774	Callee	EMIT_DATA_PROCESS_INS		1569546	0					
ANR	1569775	Identifier	EMIT_DATA_PROCESS_INS		1569546	0					
ANR	1569776	ArgumentList	MOV_DP		1569546	1					
ANR	1569777	Argument	MOV_DP		1569546	0					
ANR	1569778	Identifier	MOV_DP		1569546	0					
ANR	1569779	Argument	0		1569546	1					
ANR	1569780	PrimaryExpression	0		1569546	0					
ANR	1569781	Argument	SLJIT_S0		1569546	2					
ANR	1569782	Identifier	SLJIT_S0		1569546	0					
ANR	1569783	Argument	SLJIT_UNUSED		1569546	3					
ANR	1569784	Identifier	SLJIT_UNUSED		1569546	0					
ANR	1569785	Argument	RM ( SLJIT_R0 )		1569546	4					
ANR	1569786	CallExpression	RM ( SLJIT_R0 )		1569546	0					
ANR	1569787	Callee	RM		1569546	0					
ANR	1569788	Identifier	RM		1569546	0					
ANR	1569789	ArgumentList	SLJIT_R0		1569546	1					
ANR	1569790	Argument	SLJIT_R0		1569546	0					
ANR	1569791	Identifier	SLJIT_R0		1569546	0					
ANR	1569792	IfStatement	if ( args >= 2 )		1569546	15					
ANR	1569793	Condition	args >= 2	861:5:26818:26826	1569546	0	True				
ANR	1569794	RelationalExpression	args >= 2		1569546	0		>=			
ANR	1569795	Identifier	args		1569546	0					
ANR	1569796	PrimaryExpression	2		1569546	1					
ANR	1569797	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S1 , SLJIT_UNUSED , RM ( SLJIT_R1 ) ) ) )"	862:2:26831:26931	1569546	1	True				
ANR	1569798	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S1 , SLJIT_UNUSED , RM ( SLJIT_R1 ) ) ) )"		1569546	0					
ANR	1569799	Callee	FAIL_IF		1569546	0					
ANR	1569800	Identifier	FAIL_IF		1569546	0					
ANR	1569801	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S1 , SLJIT_UNUSED , RM ( SLJIT_R1 ) ) )"		1569546	1					
ANR	1569802	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S1 , SLJIT_UNUSED , RM ( SLJIT_R1 ) ) )"		1569546	0					
ANR	1569803	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S1 , SLJIT_UNUSED , RM ( SLJIT_R1 ) ) )"		1569546	0					
ANR	1569804	Callee	push_inst		1569546	0					
ANR	1569805	Identifier	push_inst		1569546	0					
ANR	1569806	ArgumentList	compiler		1569546	1					
ANR	1569807	Argument	compiler		1569546	0					
ANR	1569808	Identifier	compiler		1569546	0					
ANR	1569809	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S1 , SLJIT_UNUSED , RM ( SLJIT_R1 ) )"		1569546	1					
ANR	1569810	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S1 , SLJIT_UNUSED , RM ( SLJIT_R1 ) )"		1569546	0					
ANR	1569811	Callee	EMIT_DATA_PROCESS_INS		1569546	0					
ANR	1569812	Identifier	EMIT_DATA_PROCESS_INS		1569546	0					
ANR	1569813	ArgumentList	MOV_DP		1569546	1					
ANR	1569814	Argument	MOV_DP		1569546	0					
ANR	1569815	Identifier	MOV_DP		1569546	0					
ANR	1569816	Argument	0		1569546	1					
ANR	1569817	PrimaryExpression	0		1569546	0					
ANR	1569818	Argument	SLJIT_S1		1569546	2					
ANR	1569819	Identifier	SLJIT_S1		1569546	0					
ANR	1569820	Argument	SLJIT_UNUSED		1569546	3					
ANR	1569821	Identifier	SLJIT_UNUSED		1569546	0					
ANR	1569822	Argument	RM ( SLJIT_R1 )		1569546	4					
ANR	1569823	CallExpression	RM ( SLJIT_R1 )		1569546	0					
ANR	1569824	Callee	RM		1569546	0					
ANR	1569825	Identifier	RM		1569546	0					
ANR	1569826	ArgumentList	SLJIT_R1		1569546	1					
ANR	1569827	Argument	SLJIT_R1		1569546	0					
ANR	1569828	Identifier	SLJIT_R1		1569546	0					
ANR	1569829	IfStatement	if ( args >= 3 )		1569546	16					
ANR	1569830	Condition	args >= 3	863:5:26938:26946	1569546	0	True				
ANR	1569831	RelationalExpression	args >= 3		1569546	0		>=			
ANR	1569832	Identifier	args		1569546	0					
ANR	1569833	PrimaryExpression	3		1569546	1					
ANR	1569834	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S2 , SLJIT_UNUSED , RM ( SLJIT_R2 ) ) ) )"	864:2:26951:27051	1569546	1	True				
ANR	1569835	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S2 , SLJIT_UNUSED , RM ( SLJIT_R2 ) ) ) )"		1569546	0					
ANR	1569836	Callee	FAIL_IF		1569546	0					
ANR	1569837	Identifier	FAIL_IF		1569546	0					
ANR	1569838	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S2 , SLJIT_UNUSED , RM ( SLJIT_R2 ) ) )"		1569546	1					
ANR	1569839	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S2 , SLJIT_UNUSED , RM ( SLJIT_R2 ) ) )"		1569546	0					
ANR	1569840	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S2 , SLJIT_UNUSED , RM ( SLJIT_R2 ) ) )"		1569546	0					
ANR	1569841	Callee	push_inst		1569546	0					
ANR	1569842	Identifier	push_inst		1569546	0					
ANR	1569843	ArgumentList	compiler		1569546	1					
ANR	1569844	Argument	compiler		1569546	0					
ANR	1569845	Identifier	compiler		1569546	0					
ANR	1569846	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S2 , SLJIT_UNUSED , RM ( SLJIT_R2 ) )"		1569546	1					
ANR	1569847	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , SLJIT_S2 , SLJIT_UNUSED , RM ( SLJIT_R2 ) )"		1569546	0					
ANR	1569848	Callee	EMIT_DATA_PROCESS_INS		1569546	0					
ANR	1569849	Identifier	EMIT_DATA_PROCESS_INS		1569546	0					
ANR	1569850	ArgumentList	MOV_DP		1569546	1					
ANR	1569851	Argument	MOV_DP		1569546	0					
ANR	1569852	Identifier	MOV_DP		1569546	0					
ANR	1569853	Argument	0		1569546	1					
ANR	1569854	PrimaryExpression	0		1569546	0					
ANR	1569855	Argument	SLJIT_S2		1569546	2					
ANR	1569856	Identifier	SLJIT_S2		1569546	0					
ANR	1569857	Argument	SLJIT_UNUSED		1569546	3					
ANR	1569858	Identifier	SLJIT_UNUSED		1569546	0					
ANR	1569859	Argument	RM ( SLJIT_R2 )		1569546	4					
ANR	1569860	CallExpression	RM ( SLJIT_R2 )		1569546	0					
ANR	1569861	Callee	RM		1569546	0					
ANR	1569862	Identifier	RM		1569546	0					
ANR	1569863	ArgumentList	SLJIT_R2		1569546	1					
ANR	1569864	Argument	SLJIT_R2		1569546	0					
ANR	1569865	Identifier	SLJIT_R2		1569546	0					
ANR	1569866	ReturnStatement	return SLJIT_SUCCESS ;	866:1:27055:27075	1569546	17	True				
ANR	1569867	Identifier	SLJIT_SUCCESS		1569546	0					
ANR	1569868	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1569546	1					
ANR	1569869	Identifier	sljit_emit_enter		1569546	2					
ANR	1569870	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1569546	3					
ANR	1569871	Parameter	struct sljit_compiler * compiler	828:51:25573:25603	1569546	0	True				
ANR	1569872	ParameterType	struct sljit_compiler *		1569546	0					
ANR	1569873	Identifier	compiler		1569546	1					
ANR	1569874	Parameter	sljit_si options	829:1:25607:25622	1569546	1	True				
ANR	1569875	ParameterType	sljit_si		1569546	0					
ANR	1569876	Identifier	options		1569546	1					
ANR	1569877	Parameter	sljit_si args	829:19:25625:25637	1569546	2	True				
ANR	1569878	ParameterType	sljit_si		1569546	0					
ANR	1569879	Identifier	args		1569546	1					
ANR	1569880	Parameter	sljit_si scratches	829:34:25640:25657	1569546	3	True				
ANR	1569881	ParameterType	sljit_si		1569546	0					
ANR	1569882	Identifier	scratches		1569546	1					
ANR	1569883	Parameter	sljit_si saveds	829:54:25660:25674	1569546	4	True				
ANR	1569884	ParameterType	sljit_si		1569546	0					
ANR	1569885	Identifier	saveds		1569546	1					
ANR	1569886	Parameter	sljit_si fscratches	830:1:25678:25696	1569546	5	True				
ANR	1569887	ParameterType	sljit_si		1569546	0					
ANR	1569888	Identifier	fscratches		1569546	1					
ANR	1569889	Parameter	sljit_si fsaveds	830:22:25699:25714	1569546	6	True				
ANR	1569890	ParameterType	sljit_si		1569546	0					
ANR	1569891	Identifier	fsaveds		1569546	1					
ANR	1569892	Parameter	sljit_si local_size	830:40:25717:25735	1569546	7	True				
ANR	1569893	ParameterType	sljit_si		1569546	0					
ANR	1569894	Identifier	local_size		1569546	1					
ANR	1569895	CFGEntryNode	ENTRY		1569546		True				
ANR	1569896	CFGExitNode	EXIT		1569546		True				
ANR	1569897	Symbol	scratches		1569546						
ANR	1569898	Symbol	saveds		1569546						
ANR	1569899	Symbol	reg_map		1569546						
ANR	1569900	Symbol	check_sljit_emit_enter		1569546						
ANR	1569901	Symbol	* compiler		1569546						
ANR	1569902	Symbol	ALLOW_IMM		1569546						
ANR	1569903	Symbol	SLJIT_R1		1569546						
ANR	1569904	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1569546						
ANR	1569905	Symbol	SLJIT_R2		1569546						
ANR	1569906	Symbol	SLJIT_SP		1569546						
ANR	1569907	Symbol	SLJIT_R0		1569546						
ANR	1569908	Symbol	MOV_DP		1569546						
ANR	1569909	Symbol	SLJIT_IMM		1569546						
ANR	1569910	Symbol	tmp		1569546						
ANR	1569911	Symbol	options		1569546						
ANR	1569912	Symbol	compiler		1569546						
ANR	1569913	Symbol	emit_op		1569546						
ANR	1569914	Symbol	GET_SAVED_REGISTERS_SIZE		1569546						
ANR	1569915	Symbol	local_size		1569546						
ANR	1569916	Symbol	push_inst		1569546						
ANR	1569917	Symbol	i		1569546						
ANR	1569918	Symbol	SLJIT_SUB		1569546						
ANR	1569919	Symbol	SLJIT_SUCCESS		1569546						
ANR	1569920	Symbol	* reg_map		1569546						
ANR	1569921	Symbol	SLJIT_S2		1569546						
ANR	1569922	Symbol	push		1569546						
ANR	1569923	Symbol	SLJIT_S0		1569546						
ANR	1569924	Symbol	SLJIT_S1		1569546						
ANR	1569925	Symbol	args		1569546						
ANR	1569926	Symbol	fscratches		1569546						
ANR	1569927	Symbol	* i		1569546						
ANR	1569928	Symbol	compiler -> local_size		1569546						
ANR	1569929	Symbol	fsaveds		1569546						
ANR	1569930	Symbol	size		1569546						
ANR	1569931	Symbol	SLJIT_UNUSED		1569546						
ANR	1569932	Symbol	SLJIT_FIRST_SAVED_REG		1569546						
ANR	1569933	Symbol	~7		1569546						
ANR	1569934	Symbol	RM		1569546						
ANR	1569935	Symbol	PUSH		1569546						
ANR	1569936	Symbol	EMIT_DATA_PROCESS_INS		1569546						
ANR	1569937	Function	sljit_set_context	869:0:27080:27680							
ANR	1569938	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1569937	0					
ANR	1569939	CompoundStatement		872:0:27297:27680	1569937	0					
ANR	1569940	IdentifierDeclStatement	sljit_si size ;	873:1:27300:27313	1569937	0	True				
ANR	1569941	IdentifierDecl	size		1569937	0					
ANR	1569942	IdentifierDeclType	sljit_si		1569937	0					
ANR	1569943	Identifier	size		1569937	1					
ANR	1569944	ExpressionStatement	CHECK_ERROR ( )	875:1:27317:27330	1569937	1	True				
ANR	1569945	CallExpression	CHECK_ERROR ( )		1569937	0					
ANR	1569946	Callee	CHECK_ERROR		1569937	0					
ANR	1569947	Identifier	CHECK_ERROR		1569937	0					
ANR	1569948	ArgumentList			1569937	1					
ANR	1569949	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	876:1:27333:27440	1569937	2	True				
ANR	1569950	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1569937	0					
ANR	1569951	Callee	CHECK		1569937	0					
ANR	1569952	Identifier	CHECK		1569937	0					
ANR	1569953	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1569937	1					
ANR	1569954	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1569937	0					
ANR	1569955	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1569937	0					
ANR	1569956	Callee	check_sljit_set_context		1569937	0					
ANR	1569957	Identifier	check_sljit_set_context		1569937	0					
ANR	1569958	ArgumentList	compiler		1569937	1					
ANR	1569959	Argument	compiler		1569937	0					
ANR	1569960	Identifier	compiler		1569937	0					
ANR	1569961	Argument	options		1569937	1					
ANR	1569962	Identifier	options		1569937	0					
ANR	1569963	Argument	args		1569937	2					
ANR	1569964	Identifier	args		1569937	0					
ANR	1569965	Argument	scratches		1569937	3					
ANR	1569966	Identifier	scratches		1569937	0					
ANR	1569967	Argument	saveds		1569937	4					
ANR	1569968	Identifier	saveds		1569937	0					
ANR	1569969	Argument	fscratches		1569937	5					
ANR	1569970	Identifier	fscratches		1569937	0					
ANR	1569971	Argument	fsaveds		1569937	6					
ANR	1569972	Identifier	fsaveds		1569937	0					
ANR	1569973	Argument	local_size		1569937	7					
ANR	1569974	Identifier	local_size		1569937	0					
ANR	1569975	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	877:1:27443:27535	1569937	3	True				
ANR	1569976	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1569937	0					
ANR	1569977	Callee	set_set_context		1569937	0					
ANR	1569978	Identifier	set_set_context		1569937	0					
ANR	1569979	ArgumentList	compiler		1569937	1					
ANR	1569980	Argument	compiler		1569937	0					
ANR	1569981	Identifier	compiler		1569937	0					
ANR	1569982	Argument	options		1569937	1					
ANR	1569983	Identifier	options		1569937	0					
ANR	1569984	Argument	args		1569937	2					
ANR	1569985	Identifier	args		1569937	0					
ANR	1569986	Argument	scratches		1569937	3					
ANR	1569987	Identifier	scratches		1569937	0					
ANR	1569988	Argument	saveds		1569937	4					
ANR	1569989	Identifier	saveds		1569937	0					
ANR	1569990	Argument	fscratches		1569937	5					
ANR	1569991	Identifier	fscratches		1569937	0					
ANR	1569992	Argument	fsaveds		1569937	6					
ANR	1569993	Identifier	fsaveds		1569937	0					
ANR	1569994	Argument	local_size		1569937	7					
ANR	1569995	Identifier	local_size		1569937	0					
ANR	1569996	ExpressionStatement	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"	879:1:27539:27592	1569937	4	True				
ANR	1569997	AssignmentExpression	"size = GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1569937	0		=			
ANR	1569998	Identifier	size		1569937	0					
ANR	1569999	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1569937	1					
ANR	1570000	Callee	GET_SAVED_REGISTERS_SIZE		1569937	0					
ANR	1570001	Identifier	GET_SAVED_REGISTERS_SIZE		1569937	0					
ANR	1570002	ArgumentList	scratches		1569937	1					
ANR	1570003	Argument	scratches		1569937	0					
ANR	1570004	Identifier	scratches		1569937	0					
ANR	1570005	Argument	saveds		1569937	1					
ANR	1570006	Identifier	saveds		1569937	0					
ANR	1570007	Argument	1		1569937	2					
ANR	1570008	PrimaryExpression	1		1569937	0					
ANR	1570009	ExpressionStatement	compiler -> local_size = ( ( size + local_size + 7 ) & ~7 ) - size	880:1:27595:27655	1569937	5	True				
ANR	1570010	AssignmentExpression	compiler -> local_size = ( ( size + local_size + 7 ) & ~7 ) - size		1569937	0		=			
ANR	1570011	PtrMemberAccess	compiler -> local_size		1569937	0					
ANR	1570012	Identifier	compiler		1569937	0					
ANR	1570013	Identifier	local_size		1569937	1					
ANR	1570014	AdditiveExpression	( ( size + local_size + 7 ) & ~7 ) - size		1569937	1		-			
ANR	1570015	BitAndExpression	( size + local_size + 7 ) & ~7		1569937	0		&			
ANR	1570016	AdditiveExpression	size + local_size + 7		1569937	0		+			
ANR	1570017	Identifier	size		1569937	0					
ANR	1570018	AdditiveExpression	local_size + 7		1569937	1		+			
ANR	1570019	Identifier	local_size		1569937	0					
ANR	1570020	PrimaryExpression	7		1569937	1					
ANR	1570021	Identifier	~7		1569937	1					
ANR	1570022	Identifier	size		1569937	1					
ANR	1570023	ReturnStatement	return SLJIT_SUCCESS ;	881:1:27658:27678	1569937	6	True				
ANR	1570024	Identifier	SLJIT_SUCCESS		1569937	0					
ANR	1570025	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1569937	1					
ANR	1570026	Identifier	sljit_set_context		1569937	2					
ANR	1570027	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1569937	3					
ANR	1570028	Parameter	struct sljit_compiler * compiler	869:52:27132:27162	1569937	0	True				
ANR	1570029	ParameterType	struct sljit_compiler *		1569937	0					
ANR	1570030	Identifier	compiler		1569937	1					
ANR	1570031	Parameter	sljit_si options	870:1:27166:27181	1569937	1	True				
ANR	1570032	ParameterType	sljit_si		1569937	0					
ANR	1570033	Identifier	options		1569937	1					
ANR	1570034	Parameter	sljit_si args	870:19:27184:27196	1569937	2	True				
ANR	1570035	ParameterType	sljit_si		1569937	0					
ANR	1570036	Identifier	args		1569937	1					
ANR	1570037	Parameter	sljit_si scratches	870:34:27199:27216	1569937	3	True				
ANR	1570038	ParameterType	sljit_si		1569937	0					
ANR	1570039	Identifier	scratches		1569937	1					
ANR	1570040	Parameter	sljit_si saveds	870:54:27219:27233	1569937	4	True				
ANR	1570041	ParameterType	sljit_si		1569937	0					
ANR	1570042	Identifier	saveds		1569937	1					
ANR	1570043	Parameter	sljit_si fscratches	871:1:27237:27255	1569937	5	True				
ANR	1570044	ParameterType	sljit_si		1569937	0					
ANR	1570045	Identifier	fscratches		1569937	1					
ANR	1570046	Parameter	sljit_si fsaveds	871:22:27258:27273	1569937	6	True				
ANR	1570047	ParameterType	sljit_si		1569937	0					
ANR	1570048	Identifier	fsaveds		1569937	1					
ANR	1570049	Parameter	sljit_si local_size	871:40:27276:27294	1569937	7	True				
ANR	1570050	ParameterType	sljit_si		1569937	0					
ANR	1570051	Identifier	local_size		1569937	1					
ANR	1570052	CFGEntryNode	ENTRY		1569937		True				
ANR	1570053	CFGExitNode	EXIT		1569937		True				
ANR	1570054	Symbol	GET_SAVED_REGISTERS_SIZE		1569937						
ANR	1570055	Symbol	local_size		1569937						
ANR	1570056	Symbol	scratches		1569937						
ANR	1570057	Symbol	saveds		1569937						
ANR	1570058	Symbol	check_sljit_set_context		1569937						
ANR	1570059	Symbol	SLJIT_SUCCESS		1569937						
ANR	1570060	Symbol	* compiler		1569937						
ANR	1570061	Symbol	args		1569937						
ANR	1570062	Symbol	fscratches		1569937						
ANR	1570063	Symbol	compiler -> local_size		1569937						
ANR	1570064	Symbol	fsaveds		1569937						
ANR	1570065	Symbol	size		1569937						
ANR	1570066	Symbol	options		1569937						
ANR	1570067	Symbol	~7		1569937						
ANR	1570068	Symbol	compiler		1569937						
ANR	1570069	Function	sljit_emit_return	884:0:27683:28529							
ANR	1570070	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1570069	0					
ANR	1570071	CompoundStatement		885:0:27810:28529	1570069	0					
ANR	1570072	IdentifierDeclStatement	"sljit_si i , tmp ;"	886:1:27813:27828	1570069	0	True				
ANR	1570073	IdentifierDecl	i		1570069	0					
ANR	1570074	IdentifierDeclType	sljit_si		1570069	0					
ANR	1570075	Identifier	i		1570069	1					
ANR	1570076	IdentifierDecl	tmp		1570069	1					
ANR	1570077	IdentifierDeclType	sljit_si		1570069	0					
ANR	1570078	Identifier	tmp		1570069	1					
ANR	1570079	IdentifierDeclStatement	sljit_uw pop ;	887:1:27831:27843	1570069	1	True				
ANR	1570080	IdentifierDecl	pop		1570069	0					
ANR	1570081	IdentifierDeclType	sljit_uw		1570069	0					
ANR	1570082	Identifier	pop		1570069	1					
ANR	1570083	ExpressionStatement	CHECK_ERROR ( )	889:1:27847:27860	1570069	2	True				
ANR	1570084	CallExpression	CHECK_ERROR ( )		1570069	0					
ANR	1570085	Callee	CHECK_ERROR		1570069	0					
ANR	1570086	Identifier	CHECK_ERROR		1570069	0					
ANR	1570087	ArgumentList			1570069	1					
ANR	1570088	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	890:1:27863:27918	1570069	3	True				
ANR	1570089	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1570069	0					
ANR	1570090	Callee	CHECK		1570069	0					
ANR	1570091	Identifier	CHECK		1570069	0					
ANR	1570092	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1570069	1					
ANR	1570093	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1570069	0					
ANR	1570094	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1570069	0					
ANR	1570095	Callee	check_sljit_emit_return		1570069	0					
ANR	1570096	Identifier	check_sljit_emit_return		1570069	0					
ANR	1570097	ArgumentList	compiler		1570069	1					
ANR	1570098	Argument	compiler		1570069	0					
ANR	1570099	Identifier	compiler		1570069	0					
ANR	1570100	Argument	op		1570069	1					
ANR	1570101	Identifier	op		1570069	0					
ANR	1570102	Argument	src		1570069	2					
ANR	1570103	Identifier	src		1570069	0					
ANR	1570104	Argument	srcw		1570069	3					
ANR	1570105	Identifier	srcw		1570069	0					
ANR	1570106	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	892:1:27922:27978	1570069	4	True				
ANR	1570107	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1570069	0					
ANR	1570108	Callee	FAIL_IF		1570069	0					
ANR	1570109	Identifier	FAIL_IF		1570069	0					
ANR	1570110	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1570069	1					
ANR	1570111	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1570069	0					
ANR	1570112	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1570069	0					
ANR	1570113	Callee	emit_mov_before_return		1570069	0					
ANR	1570114	Identifier	emit_mov_before_return		1570069	0					
ANR	1570115	ArgumentList	compiler		1570069	1					
ANR	1570116	Argument	compiler		1570069	0					
ANR	1570117	Identifier	compiler		1570069	0					
ANR	1570118	Argument	op		1570069	1					
ANR	1570119	Identifier	op		1570069	0					
ANR	1570120	Argument	src		1570069	2					
ANR	1570121	Identifier	src		1570069	0					
ANR	1570122	Argument	srcw		1570069	3					
ANR	1570123	Identifier	srcw		1570069	0					
ANR	1570124	IfStatement	if ( compiler -> local_size > 0 )		1570069	5					
ANR	1570125	Condition	compiler -> local_size > 0	894:5:27986:28009	1570069	0	True				
ANR	1570126	RelationalExpression	compiler -> local_size > 0		1570069	0		>			
ANR	1570127	PtrMemberAccess	compiler -> local_size		1570069	0					
ANR	1570128	Identifier	compiler		1570069	0					
ANR	1570129	Identifier	local_size		1570069	1					
ANR	1570130	PrimaryExpression	0		1570069	1					
ANR	1570131	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_ADD , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size ) )"	895:2:28014:28121	1570069	1	True				
ANR	1570132	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_ADD , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size ) )"		1570069	0					
ANR	1570133	Callee	FAIL_IF		1570069	0					
ANR	1570134	Identifier	FAIL_IF		1570069	0					
ANR	1570135	ArgumentList	"emit_op ( compiler , SLJIT_ADD , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size )"		1570069	1					
ANR	1570136	Argument	"emit_op ( compiler , SLJIT_ADD , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size )"		1570069	0					
ANR	1570137	CallExpression	"emit_op ( compiler , SLJIT_ADD , ALLOW_IMM , SLJIT_SP , 0 , SLJIT_SP , 0 , SLJIT_IMM , compiler -> local_size )"		1570069	0					
ANR	1570138	Callee	emit_op		1570069	0					
ANR	1570139	Identifier	emit_op		1570069	0					
ANR	1570140	ArgumentList	compiler		1570069	1					
ANR	1570141	Argument	compiler		1570069	0					
ANR	1570142	Identifier	compiler		1570069	0					
ANR	1570143	Argument	SLJIT_ADD		1570069	1					
ANR	1570144	Identifier	SLJIT_ADD		1570069	0					
ANR	1570145	Argument	ALLOW_IMM		1570069	2					
ANR	1570146	Identifier	ALLOW_IMM		1570069	0					
ANR	1570147	Argument	SLJIT_SP		1570069	3					
ANR	1570148	Identifier	SLJIT_SP		1570069	0					
ANR	1570149	Argument	0		1570069	4					
ANR	1570150	PrimaryExpression	0		1570069	0					
ANR	1570151	Argument	SLJIT_SP		1570069	5					
ANR	1570152	Identifier	SLJIT_SP		1570069	0					
ANR	1570153	Argument	0		1570069	6					
ANR	1570154	PrimaryExpression	0		1570069	0					
ANR	1570155	Argument	SLJIT_IMM		1570069	7					
ANR	1570156	Identifier	SLJIT_IMM		1570069	0					
ANR	1570157	Argument	compiler -> local_size		1570069	8					
ANR	1570158	PtrMemberAccess	compiler -> local_size		1570069	0					
ANR	1570159	Identifier	compiler		1570069	0					
ANR	1570160	Identifier	local_size		1570069	1					
ANR	1570161	ExpressionStatement	pop = POP | ( 1 << 15 )	899:1:28199:28220	1570069	6	True				
ANR	1570162	AssignmentExpression	pop = POP | ( 1 << 15 )		1570069	0		=			
ANR	1570163	Identifier	pop		1570069	0					
ANR	1570164	InclusiveOrExpression	POP | ( 1 << 15 )		1570069	1		|			
ANR	1570165	Identifier	POP		1570069	0					
ANR	1570166	ShiftExpression	1 << 15		1570069	1		<<			
ANR	1570167	PrimaryExpression	1		1570069	0					
ANR	1570168	PrimaryExpression	15		1570069	1					
ANR	1570169	ExpressionStatement	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG	901:1:28224:28340	1570069	7	True				
ANR	1570170	AssignmentExpression	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1570069	0		=			
ANR	1570171	Identifier	tmp		1570069	0					
ANR	1570172	ConditionalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1570069	1					
ANR	1570173	Condition	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1570069	0					
ANR	1570174	RelationalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1570069	0		<			
ANR	1570175	PtrMemberAccess	compiler -> saveds		1570069	0					
ANR	1570176	Identifier	compiler		1570069	0					
ANR	1570177	Identifier	saveds		1570069	1					
ANR	1570178	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1570069	1					
ANR	1570179	AdditiveExpression	SLJIT_S0 + 1 - compiler -> saveds		1570069	1		+			
ANR	1570180	Identifier	SLJIT_S0		1570069	0					
ANR	1570181	AdditiveExpression	1 - compiler -> saveds		1570069	1		-			
ANR	1570182	PrimaryExpression	1		1570069	0					
ANR	1570183	PtrMemberAccess	compiler -> saveds		1570069	1					
ANR	1570184	Identifier	compiler		1570069	0					
ANR	1570185	Identifier	saveds		1570069	1					
ANR	1570186	Identifier	SLJIT_FIRST_SAVED_REG		1570069	2					
ANR	1570187	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1570069	8					
ANR	1570188	ForInit	i = SLJIT_S0 ;	902:6:28348:28360	1570069	0	True				
ANR	1570189	AssignmentExpression	i = SLJIT_S0		1570069	0		=			
ANR	1570190	Identifier	i		1570069	0					
ANR	1570191	Identifier	SLJIT_S0		1570069	1					
ANR	1570192	Condition	i >= tmp	902:20:28362:28369	1570069	1	True				
ANR	1570193	RelationalExpression	i >= tmp		1570069	0		>=			
ANR	1570194	Identifier	i		1570069	0					
ANR	1570195	Identifier	tmp		1570069	1					
ANR	1570196	PostIncDecOperationExpression	i --	902:30:28372:28374	1570069	2	True				
ANR	1570197	Identifier	i		1570069	0					
ANR	1570198	IncDec	--		1570069	1					
ANR	1570199	ExpressionStatement	pop |= 1 << reg_map [ i ]	903:2:28379:28401	1570069	3	True				
ANR	1570200	AssignmentExpression	pop |= 1 << reg_map [ i ]		1570069	0		|=			
ANR	1570201	Identifier	pop		1570069	0					
ANR	1570202	ShiftExpression	1 << reg_map [ i ]		1570069	1		<<			
ANR	1570203	PrimaryExpression	1		1570069	0					
ANR	1570204	ArrayIndexing	reg_map [ i ]		1570069	1					
ANR	1570205	Identifier	reg_map		1570069	0					
ANR	1570206	Identifier	i		1570069	1					
ANR	1570207	ForStatement	for ( i = compiler -> scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1570069	9					
ANR	1570208	ForInit	i = compiler -> scratches ;	905:6:28410:28433	1570069	0	True				
ANR	1570209	AssignmentExpression	i = compiler -> scratches		1570069	0		=			
ANR	1570210	Identifier	i		1570069	0					
ANR	1570211	PtrMemberAccess	compiler -> scratches		1570069	1					
ANR	1570212	Identifier	compiler		1570069	0					
ANR	1570213	Identifier	scratches		1570069	1					
ANR	1570214	Condition	i >= SLJIT_FIRST_SAVED_REG	905:31:28435:28460	1570069	1	True				
ANR	1570215	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1570069	0		>=			
ANR	1570216	Identifier	i		1570069	0					
ANR	1570217	Identifier	SLJIT_FIRST_SAVED_REG		1570069	1					
ANR	1570218	PostIncDecOperationExpression	i --	905:59:28463:28465	1570069	2	True				
ANR	1570219	Identifier	i		1570069	0					
ANR	1570220	IncDec	--		1570069	1					
ANR	1570221	ExpressionStatement	pop |= 1 << reg_map [ i ]	906:2:28470:28492	1570069	3	True				
ANR	1570222	AssignmentExpression	pop |= 1 << reg_map [ i ]		1570069	0		|=			
ANR	1570223	Identifier	pop		1570069	0					
ANR	1570224	ShiftExpression	1 << reg_map [ i ]		1570069	1		<<			
ANR	1570225	PrimaryExpression	1		1570069	0					
ANR	1570226	ArrayIndexing	reg_map [ i ]		1570069	1					
ANR	1570227	Identifier	reg_map		1570069	0					
ANR	1570228	Identifier	i		1570069	1					
ANR	1570229	ReturnStatement	"return push_inst ( compiler , pop ) ;"	908:1:28496:28527	1570069	10	True				
ANR	1570230	CallExpression	"push_inst ( compiler , pop )"		1570069	0					
ANR	1570231	Callee	push_inst		1570069	0					
ANR	1570232	Identifier	push_inst		1570069	0					
ANR	1570233	ArgumentList	compiler		1570069	1					
ANR	1570234	Argument	compiler		1570069	0					
ANR	1570235	Identifier	compiler		1570069	0					
ANR	1570236	Argument	pop		1570069	1					
ANR	1570237	Identifier	pop		1570069	0					
ANR	1570238	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1570069	1					
ANR	1570239	Identifier	sljit_emit_return		1570069	2					
ANR	1570240	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1570069	3					
ANR	1570241	Parameter	struct sljit_compiler * compiler	884:52:27735:27765	1570069	0	True				
ANR	1570242	ParameterType	struct sljit_compiler *		1570069	0					
ANR	1570243	Identifier	compiler		1570069	1					
ANR	1570244	Parameter	sljit_si op	884:85:27768:27778	1570069	1	True				
ANR	1570245	ParameterType	sljit_si		1570069	0					
ANR	1570246	Identifier	op		1570069	1					
ANR	1570247	Parameter	sljit_si src	884:98:27781:27792	1570069	2	True				
ANR	1570248	ParameterType	sljit_si		1570069	0					
ANR	1570249	Identifier	src		1570069	1					
ANR	1570250	Parameter	sljit_sw srcw	884:112:27795:27807	1570069	3	True				
ANR	1570251	ParameterType	sljit_sw		1570069	0					
ANR	1570252	Identifier	srcw		1570069	1					
ANR	1570253	CFGEntryNode	ENTRY		1570069		True				
ANR	1570254	CFGExitNode	EXIT		1570069		True				
ANR	1570255	Symbol	compiler -> scratches		1570069						
ANR	1570256	Symbol	reg_map		1570069						
ANR	1570257	Symbol	SLJIT_ADD		1570069						
ANR	1570258	Symbol	* compiler		1570069						
ANR	1570259	Symbol	ALLOW_IMM		1570069						
ANR	1570260	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1570069						
ANR	1570261	Symbol	SLJIT_SP		1570069						
ANR	1570262	Symbol	pop		1570069						
ANR	1570263	Symbol	SLJIT_IMM		1570069						
ANR	1570264	Symbol	check_sljit_emit_return		1570069						
ANR	1570265	Symbol	tmp		1570069						
ANR	1570266	Symbol	compiler		1570069						
ANR	1570267	Symbol	emit_op		1570069						
ANR	1570268	Symbol	op		1570069						
ANR	1570269	Symbol	push_inst		1570069						
ANR	1570270	Symbol	src		1570069						
ANR	1570271	Symbol	srcw		1570069						
ANR	1570272	Symbol	i		1570069						
ANR	1570273	Symbol	* reg_map		1570069						
ANR	1570274	Symbol	SLJIT_S0		1570069						
ANR	1570275	Symbol	POP		1570069						
ANR	1570276	Symbol	compiler -> local_size		1570069						
ANR	1570277	Symbol	compiler -> saveds		1570069						
ANR	1570278	Symbol	* i		1570069						
ANR	1570279	Symbol	SLJIT_FIRST_SAVED_REG		1570069						
ANR	1570280	Symbol	emit_mov_before_return		1570069						
ANR	1570281	DeclStmt									
ANR	1570282	Decl							sljit_sw	sljit_sw [ 16 ]	data_transfer_insts
ANR	1570283	Function	emit_single_op	986:0:31753:36897							
ANR	1570284	FunctionDef	"emit_single_op (struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_si src1 , sljit_si src2)"		1570283	0					
ANR	1570285	CompoundStatement		988:0:31904:36897	1570283	0					
ANR	1570286	IdentifierDeclStatement	sljit_sw mul_inst ;	989:1:31907:31924	1570283	0	True				
ANR	1570287	IdentifierDecl	mul_inst		1570283	0					
ANR	1570288	IdentifierDeclType	sljit_sw		1570283	0					
ANR	1570289	Identifier	mul_inst		1570283	1					
ANR	1570290	SwitchStatement	switch ( GET_OPCODE ( op ) )		1570283	1					
ANR	1570291	Condition	GET_OPCODE ( op )	991:9:31936:31949	1570283	0	True				
ANR	1570292	CallExpression	GET_OPCODE ( op )		1570283	0					
ANR	1570293	Callee	GET_OPCODE		1570283	0					
ANR	1570294	Identifier	GET_OPCODE		1570283	0					
ANR	1570295	ArgumentList	op		1570283	1					
ANR	1570296	Argument	op		1570283	0					
ANR	1570297	Identifier	op		1570283	0					
ANR	1570298	CompoundStatement		4:25:47:47	1570283	1					
ANR	1570299	Label	case SLJIT_MOV :	992:1:31955:31969	1570283	0	True				
ANR	1570300	Identifier	SLJIT_MOV		1570283	0					
ANR	1570301	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED ) )	993:2:31973:32030	1570283	1	True				
ANR	1570302	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED ) )		1570283	0					
ANR	1570303	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570304	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570305	ArgumentList	src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED )		1570283	1					
ANR	1570306	Argument	src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED )		1570283	0					
ANR	1570307	AndExpression	src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED )		1570283	0		&&			
ANR	1570308	EqualityExpression	src1 == TMP_REG1		1570283	0		==			
ANR	1570309	Identifier	src1		1570283	0					
ANR	1570310	Identifier	TMP_REG1		1570283	1					
ANR	1570311	UnaryOperationExpression	! ( flags & ARGS_SWAPPED )		1570283	1					
ANR	1570312	UnaryOperator	!		1570283	0					
ANR	1570313	BitAndExpression	flags & ARGS_SWAPPED		1570283	1		&			
ANR	1570314	Identifier	flags		1570283	0					
ANR	1570315	Identifier	ARGS_SWAPPED		1570283	1					
ANR	1570316	IfStatement	if ( dst != src2 )		1570283	2					
ANR	1570317	Condition	dst != src2	994:6:32038:32048	1570283	0	True				
ANR	1570318	EqualityExpression	dst != src2		1570283	0		!=			
ANR	1570319	Identifier	dst		1570283	0					
ANR	1570320	Identifier	src2		1570283	1					
ANR	1570321	CompoundStatement		7:19:146:146	1570283	1					
ANR	1570322	IfStatement	if ( src2 & SRC2_IMM )		1570283	0					
ANR	1570323	Condition	src2 & SRC2_IMM	995:7:32060:32074	1570283	0	True				
ANR	1570324	BitAndExpression	src2 & SRC2_IMM		1570283	0		&			
ANR	1570325	Identifier	src2		1570283	0					
ANR	1570326	Identifier	SRC2_IMM		1570283	1					
ANR	1570327	CompoundStatement		8:24:172:172	1570283	1					
ANR	1570328	IfStatement	if ( flags & INV_IMM )		1570283	0					
ANR	1570329	Condition	flags & INV_IMM	996:8:32087:32101	1570283	0	True				
ANR	1570330	BitAndExpression	flags & INV_IMM		1570283	0		&			
ANR	1570331	Identifier	flags		1570283	0					
ANR	1570332	Identifier	INV_IMM		1570283	1					
ANR	1570333	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , src2 )"	997:5:32109:32179	1570283	1	True				
ANR	1570334	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , src2 )"		1570283	0					
ANR	1570335	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570336	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570337	ArgumentList	MVN_DP		1570283	1					
ANR	1570338	Argument	MVN_DP		1570283	0					
ANR	1570339	Identifier	MVN_DP		1570283	0					
ANR	1570340	Argument	dst		1570283	1					
ANR	1570341	Identifier	dst		1570283	0					
ANR	1570342	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570343	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570344	Argument	src2		1570283	3					
ANR	1570345	Identifier	src2		1570283	0					
ANR	1570346	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , src2 )"	998:4:32185:32255	1570283	1	True				
ANR	1570347	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , src2 )"		1570283	0					
ANR	1570348	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570349	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570350	ArgumentList	MOV_DP		1570283	1					
ANR	1570351	Argument	MOV_DP		1570283	0					
ANR	1570352	Identifier	MOV_DP		1570283	0					
ANR	1570353	Argument	dst		1570283	1					
ANR	1570354	Identifier	dst		1570283	0					
ANR	1570355	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570356	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570357	Argument	src2		1570283	3					
ANR	1570358	Identifier	src2		1570283	0					
ANR	1570359	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , reg_map [ src2 ] )"	1000:3:32265:32344	1570283	1	True				
ANR	1570360	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , reg_map [ src2 ] )"		1570283	0					
ANR	1570361	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570362	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570363	ArgumentList	MOV_DP		1570283	1					
ANR	1570364	Argument	MOV_DP		1570283	0					
ANR	1570365	Identifier	MOV_DP		1570283	0					
ANR	1570366	Argument	dst		1570283	1					
ANR	1570367	Identifier	dst		1570283	0					
ANR	1570368	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570369	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570370	Argument	reg_map [ src2 ]		1570283	3					
ANR	1570371	ArrayIndexing	reg_map [ src2 ]		1570283	0					
ANR	1570372	Identifier	reg_map		1570283	0					
ANR	1570373	Identifier	src2		1570283	1					
ANR	1570374	ReturnStatement	return SLJIT_SUCCESS ;	1002:2:32352:32372	1570283	3	True				
ANR	1570375	Identifier	SLJIT_SUCCESS		1570283	0					
ANR	1570376	Label	case SLJIT_MOV_UB :	1004:1:32376:32393	1570283	4	True				
ANR	1570377	Identifier	SLJIT_MOV_UB		1570283	0					
ANR	1570378	Label	case SLJIT_MOV_SB :	1005:1:32396:32413	1570283	5	True				
ANR	1570379	Identifier	SLJIT_MOV_SB		1570283	0					
ANR	1570380	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED ) )	1006:2:32417:32474	1570283	6	True				
ANR	1570381	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED ) )		1570283	0					
ANR	1570382	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570383	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570384	ArgumentList	src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED )		1570283	1					
ANR	1570385	Argument	src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED )		1570283	0					
ANR	1570386	AndExpression	src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED )		1570283	0		&&			
ANR	1570387	EqualityExpression	src1 == TMP_REG1		1570283	0		==			
ANR	1570388	Identifier	src1		1570283	0					
ANR	1570389	Identifier	TMP_REG1		1570283	1					
ANR	1570390	UnaryOperationExpression	! ( flags & ARGS_SWAPPED )		1570283	1					
ANR	1570391	UnaryOperator	!		1570283	0					
ANR	1570392	BitAndExpression	flags & ARGS_SWAPPED		1570283	1		&			
ANR	1570393	Identifier	flags		1570283	0					
ANR	1570394	Identifier	ARGS_SWAPPED		1570283	1					
ANR	1570395	IfStatement	if ( ( flags & ( REG_DEST | REG_SOURCE ) ) == ( REG_DEST | REG_SOURCE ) )		1570283	7					
ANR	1570396	Condition	( flags & ( REG_DEST | REG_SOURCE ) ) == ( REG_DEST | REG_SOURCE )	1007:6:32482:32541	1570283	0	True				
ANR	1570397	EqualityExpression	( flags & ( REG_DEST | REG_SOURCE ) ) == ( REG_DEST | REG_SOURCE )		1570283	0		==			
ANR	1570398	BitAndExpression	flags & ( REG_DEST | REG_SOURCE )		1570283	0		&			
ANR	1570399	Identifier	flags		1570283	0					
ANR	1570400	InclusiveOrExpression	REG_DEST | REG_SOURCE		1570283	1		|			
ANR	1570401	Identifier	REG_DEST		1570283	0					
ANR	1570402	Identifier	REG_SOURCE		1570283	1					
ANR	1570403	InclusiveOrExpression	REG_DEST | REG_SOURCE		1570283	1		|			
ANR	1570404	Identifier	REG_DEST		1570283	0					
ANR	1570405	Identifier	REG_SOURCE		1570283	1					
ANR	1570406	CompoundStatement		20:68:639:639	1570283	1					
ANR	1570407	IfStatement	if ( op == SLJIT_MOV_UB )		1570283	0					
ANR	1570408	Condition	op == SLJIT_MOV_UB	1009:7:32610:32627	1570283	0	True				
ANR	1570409	EqualityExpression	op == SLJIT_MOV_UB		1570283	0		==			
ANR	1570410	Identifier	op		1570283	0					
ANR	1570411	Identifier	SLJIT_MOV_UB		1570283	1					
ANR	1570412	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_PROCESS_INS ( AND_DP , 0 , dst , src2 , SRC2_IMM | 0xff ) ) ;"	1010:4:32634:32722	1570283	1	True				
ANR	1570413	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( AND_DP , 0 , dst , src2 , SRC2_IMM | 0xff ) )"		1570283	0					
ANR	1570414	Callee	push_inst		1570283	0					
ANR	1570415	Identifier	push_inst		1570283	0					
ANR	1570416	ArgumentList	compiler		1570283	1					
ANR	1570417	Argument	compiler		1570283	0					
ANR	1570418	Identifier	compiler		1570283	0					
ANR	1570419	Argument	"EMIT_DATA_PROCESS_INS ( AND_DP , 0 , dst , src2 , SRC2_IMM | 0xff )"		1570283	1					
ANR	1570420	CallExpression	"EMIT_DATA_PROCESS_INS ( AND_DP , 0 , dst , src2 , SRC2_IMM | 0xff )"		1570283	0					
ANR	1570421	Callee	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570422	Identifier	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570423	ArgumentList	AND_DP		1570283	1					
ANR	1570424	Argument	AND_DP		1570283	0					
ANR	1570425	Identifier	AND_DP		1570283	0					
ANR	1570426	Argument	0		1570283	1					
ANR	1570427	PrimaryExpression	0		1570283	0					
ANR	1570428	Argument	dst		1570283	2					
ANR	1570429	Identifier	dst		1570283	0					
ANR	1570430	Argument	src2		1570283	3					
ANR	1570431	Identifier	src2		1570283	0					
ANR	1570432	Argument	SRC2_IMM | 0xff		1570283	4					
ANR	1570433	InclusiveOrExpression	SRC2_IMM | 0xff		1570283	0		|			
ANR	1570434	Identifier	SRC2_IMM		1570283	0					
ANR	1570435	PrimaryExpression	0xff		1570283	1					
ANR	1570436	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | reg_map [ src2 ] ) ) )"	1011:3:32727:32835	1570283	1	True				
ANR	1570437	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | reg_map [ src2 ] ) ) )"		1570283	0					
ANR	1570438	Callee	FAIL_IF		1570283	0					
ANR	1570439	Identifier	FAIL_IF		1570283	0					
ANR	1570440	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | reg_map [ src2 ] ) )"		1570283	1					
ANR	1570441	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | reg_map [ src2 ] ) )"		1570283	0					
ANR	1570442	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | reg_map [ src2 ] ) )"		1570283	0					
ANR	1570443	Callee	push_inst		1570283	0					
ANR	1570444	Identifier	push_inst		1570283	0					
ANR	1570445	ArgumentList	compiler		1570283	1					
ANR	1570446	Argument	compiler		1570283	0					
ANR	1570447	Identifier	compiler		1570283	0					
ANR	1570448	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | reg_map [ src2 ] )"		1570283	1					
ANR	1570449	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | reg_map [ src2 ] )"		1570283	0					
ANR	1570450	Callee	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570451	Identifier	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570452	ArgumentList	MOV_DP		1570283	1					
ANR	1570453	Argument	MOV_DP		1570283	0					
ANR	1570454	Identifier	MOV_DP		1570283	0					
ANR	1570455	Argument	0		1570283	1					
ANR	1570456	PrimaryExpression	0		1570283	0					
ANR	1570457	Argument	dst		1570283	2					
ANR	1570458	Identifier	dst		1570283	0					
ANR	1570459	Argument	SLJIT_UNUSED		1570283	3					
ANR	1570460	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570461	Argument	( 24 << 7 ) | reg_map [ src2 ]		1570283	4					
ANR	1570462	InclusiveOrExpression	( 24 << 7 ) | reg_map [ src2 ]		1570283	0		|			
ANR	1570463	ShiftExpression	24 << 7		1570283	0		<<			
ANR	1570464	PrimaryExpression	24		1570283	0					
ANR	1570465	PrimaryExpression	7		1570283	1					
ANR	1570466	ArrayIndexing	reg_map [ src2 ]		1570283	1					
ANR	1570467	Identifier	reg_map		1570283	0					
ANR	1570468	Identifier	src2		1570283	1					
ANR	1570469	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | ( op == SLJIT_MOV_UB ? 0x20 : 0x40 ) | reg_map [ dst ] ) ) ;"	1012:3:32840:32982	1570283	2	True				
ANR	1570470	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | ( op == SLJIT_MOV_UB ? 0x20 : 0x40 ) | reg_map [ dst ] ) )"		1570283	0					
ANR	1570471	Callee	push_inst		1570283	0					
ANR	1570472	Identifier	push_inst		1570283	0					
ANR	1570473	ArgumentList	compiler		1570283	1					
ANR	1570474	Argument	compiler		1570283	0					
ANR	1570475	Identifier	compiler		1570283	0					
ANR	1570476	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | ( op == SLJIT_MOV_UB ? 0x20 : 0x40 ) | reg_map [ dst ] )"		1570283	1					
ANR	1570477	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 24 << 7 ) | ( op == SLJIT_MOV_UB ? 0x20 : 0x40 ) | reg_map [ dst ] )"		1570283	0					
ANR	1570478	Callee	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570479	Identifier	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570480	ArgumentList	MOV_DP		1570283	1					
ANR	1570481	Argument	MOV_DP		1570283	0					
ANR	1570482	Identifier	MOV_DP		1570283	0					
ANR	1570483	Argument	0		1570283	1					
ANR	1570484	PrimaryExpression	0		1570283	0					
ANR	1570485	Argument	dst		1570283	2					
ANR	1570486	Identifier	dst		1570283	0					
ANR	1570487	Argument	SLJIT_UNUSED		1570283	3					
ANR	1570488	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570489	Argument	( 24 << 7 ) | ( op == SLJIT_MOV_UB ? 0x20 : 0x40 ) | reg_map [ dst ]		1570283	4					
ANR	1570490	InclusiveOrExpression	( 24 << 7 ) | ( op == SLJIT_MOV_UB ? 0x20 : 0x40 ) | reg_map [ dst ]		1570283	0		|			
ANR	1570491	ShiftExpression	24 << 7		1570283	0		<<			
ANR	1570492	PrimaryExpression	24		1570283	0					
ANR	1570493	PrimaryExpression	7		1570283	1					
ANR	1570494	InclusiveOrExpression	( op == SLJIT_MOV_UB ? 0x20 : 0x40 ) | reg_map [ dst ]		1570283	1		|			
ANR	1570495	ConditionalExpression	op == SLJIT_MOV_UB ? 0x20 : 0x40		1570283	0					
ANR	1570496	Condition	op == SLJIT_MOV_UB		1570283	0					
ANR	1570497	EqualityExpression	op == SLJIT_MOV_UB		1570283	0		==			
ANR	1570498	Identifier	op		1570283	0					
ANR	1570499	Identifier	SLJIT_MOV_UB		1570283	1					
ANR	1570500	PrimaryExpression	0x20		1570283	1					
ANR	1570501	PrimaryExpression	0x40		1570283	2					
ANR	1570502	ArrayIndexing	reg_map [ dst ]		1570283	1					
ANR	1570503	Identifier	reg_map		1570283	0					
ANR	1570504	Identifier	dst		1570283	1					
ANR	1570505	ElseStatement	else		1570283	0					
ANR	1570506	IfStatement	if ( dst != src2 )		1570283	0					
ANR	1570507	Condition	dst != src2	1017:11:33100:33110	1570283	0	True				
ANR	1570508	EqualityExpression	dst != src2		1570283	0		!=			
ANR	1570509	Identifier	dst		1570283	0					
ANR	1570510	Identifier	src2		1570283	1					
ANR	1570511	CompoundStatement		30:24:1208:1208	1570283	1					
ANR	1570512	ExpressionStatement	SLJIT_ASSERT ( src2 & SRC2_IMM )	1018:3:33118:33147	1570283	0	True				
ANR	1570513	CallExpression	SLJIT_ASSERT ( src2 & SRC2_IMM )		1570283	0					
ANR	1570514	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570515	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570516	ArgumentList	src2 & SRC2_IMM		1570283	1					
ANR	1570517	Argument	src2 & SRC2_IMM		1570283	0					
ANR	1570518	BitAndExpression	src2 & SRC2_IMM		1570283	0		&			
ANR	1570519	Identifier	src2		1570283	0					
ANR	1570520	Identifier	SRC2_IMM		1570283	1					
ANR	1570521	IfStatement	if ( flags & INV_IMM )		1570283	1					
ANR	1570522	Condition	flags & INV_IMM	1019:7:33156:33170	1570283	0	True				
ANR	1570523	BitAndExpression	flags & INV_IMM		1570283	0		&			
ANR	1570524	Identifier	flags		1570283	0					
ANR	1570525	Identifier	INV_IMM		1570283	1					
ANR	1570526	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , src2 )"	1020:4:33177:33247	1570283	1	True				
ANR	1570527	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , src2 )"		1570283	0					
ANR	1570528	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570529	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570530	ArgumentList	MVN_DP		1570283	1					
ANR	1570531	Argument	MVN_DP		1570283	0					
ANR	1570532	Identifier	MVN_DP		1570283	0					
ANR	1570533	Argument	dst		1570283	1					
ANR	1570534	Identifier	dst		1570283	0					
ANR	1570535	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570536	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570537	Argument	src2		1570283	3					
ANR	1570538	Identifier	src2		1570283	0					
ANR	1570539	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , src2 )"	1021:3:33252:33322	1570283	2	True				
ANR	1570540	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , src2 )"		1570283	0					
ANR	1570541	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570542	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570543	ArgumentList	MOV_DP		1570283	1					
ANR	1570544	Argument	MOV_DP		1570283	0					
ANR	1570545	Identifier	MOV_DP		1570283	0					
ANR	1570546	Argument	dst		1570283	1					
ANR	1570547	Identifier	dst		1570283	0					
ANR	1570548	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570549	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570550	Argument	src2		1570283	3					
ANR	1570551	Identifier	src2		1570283	0					
ANR	1570552	ReturnStatement	return SLJIT_SUCCESS ;	1023:2:33330:33350	1570283	8	True				
ANR	1570553	Identifier	SLJIT_SUCCESS		1570283	0					
ANR	1570554	Label	case SLJIT_MOV_UH :	1025:1:33354:33371	1570283	9	True				
ANR	1570555	Identifier	SLJIT_MOV_UH		1570283	0					
ANR	1570556	Label	case SLJIT_MOV_SH :	1026:1:33374:33391	1570283	10	True				
ANR	1570557	Identifier	SLJIT_MOV_SH		1570283	0					
ANR	1570558	ExpressionStatement	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED ) )	1027:2:33395:33452	1570283	11	True				
ANR	1570559	CallExpression	SLJIT_ASSERT ( src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED ) )		1570283	0					
ANR	1570560	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570561	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570562	ArgumentList	src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED )		1570283	1					
ANR	1570563	Argument	src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED )		1570283	0					
ANR	1570564	AndExpression	src1 == TMP_REG1 && ! ( flags & ARGS_SWAPPED )		1570283	0		&&			
ANR	1570565	EqualityExpression	src1 == TMP_REG1		1570283	0		==			
ANR	1570566	Identifier	src1		1570283	0					
ANR	1570567	Identifier	TMP_REG1		1570283	1					
ANR	1570568	UnaryOperationExpression	! ( flags & ARGS_SWAPPED )		1570283	1					
ANR	1570569	UnaryOperator	!		1570283	0					
ANR	1570570	BitAndExpression	flags & ARGS_SWAPPED		1570283	1		&			
ANR	1570571	Identifier	flags		1570283	0					
ANR	1570572	Identifier	ARGS_SWAPPED		1570283	1					
ANR	1570573	IfStatement	if ( ( flags & ( REG_DEST | REG_SOURCE ) ) == ( REG_DEST | REG_SOURCE ) )		1570283	12					
ANR	1570574	Condition	( flags & ( REG_DEST | REG_SOURCE ) ) == ( REG_DEST | REG_SOURCE )	1028:6:33460:33519	1570283	0	True				
ANR	1570575	EqualityExpression	( flags & ( REG_DEST | REG_SOURCE ) ) == ( REG_DEST | REG_SOURCE )		1570283	0		==			
ANR	1570576	BitAndExpression	flags & ( REG_DEST | REG_SOURCE )		1570283	0		&			
ANR	1570577	Identifier	flags		1570283	0					
ANR	1570578	InclusiveOrExpression	REG_DEST | REG_SOURCE		1570283	1		|			
ANR	1570579	Identifier	REG_DEST		1570283	0					
ANR	1570580	Identifier	REG_SOURCE		1570283	1					
ANR	1570581	InclusiveOrExpression	REG_DEST | REG_SOURCE		1570283	1		|			
ANR	1570582	Identifier	REG_DEST		1570283	0					
ANR	1570583	Identifier	REG_SOURCE		1570283	1					
ANR	1570584	CompoundStatement		41:68:1617:1617	1570283	1					
ANR	1570585	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | reg_map [ src2 ] ) ) )"	1030:3:33584:33692	1570283	0	True				
ANR	1570586	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | reg_map [ src2 ] ) ) )"		1570283	0					
ANR	1570587	Callee	FAIL_IF		1570283	0					
ANR	1570588	Identifier	FAIL_IF		1570283	0					
ANR	1570589	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | reg_map [ src2 ] ) )"		1570283	1					
ANR	1570590	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | reg_map [ src2 ] ) )"		1570283	0					
ANR	1570591	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | reg_map [ src2 ] ) )"		1570283	0					
ANR	1570592	Callee	push_inst		1570283	0					
ANR	1570593	Identifier	push_inst		1570283	0					
ANR	1570594	ArgumentList	compiler		1570283	1					
ANR	1570595	Argument	compiler		1570283	0					
ANR	1570596	Identifier	compiler		1570283	0					
ANR	1570597	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | reg_map [ src2 ] )"		1570283	1					
ANR	1570598	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | reg_map [ src2 ] )"		1570283	0					
ANR	1570599	Callee	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570600	Identifier	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570601	ArgumentList	MOV_DP		1570283	1					
ANR	1570602	Argument	MOV_DP		1570283	0					
ANR	1570603	Identifier	MOV_DP		1570283	0					
ANR	1570604	Argument	0		1570283	1					
ANR	1570605	PrimaryExpression	0		1570283	0					
ANR	1570606	Argument	dst		1570283	2					
ANR	1570607	Identifier	dst		1570283	0					
ANR	1570608	Argument	SLJIT_UNUSED		1570283	3					
ANR	1570609	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570610	Argument	( 16 << 7 ) | reg_map [ src2 ]		1570283	4					
ANR	1570611	InclusiveOrExpression	( 16 << 7 ) | reg_map [ src2 ]		1570283	0		|			
ANR	1570612	ShiftExpression	16 << 7		1570283	0		<<			
ANR	1570613	PrimaryExpression	16		1570283	0					
ANR	1570614	PrimaryExpression	7		1570283	1					
ANR	1570615	ArrayIndexing	reg_map [ src2 ]		1570283	1					
ANR	1570616	Identifier	reg_map		1570283	0					
ANR	1570617	Identifier	src2		1570283	1					
ANR	1570618	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | ( op == SLJIT_MOV_UH ? 0x20 : 0x40 ) | reg_map [ dst ] ) ) ;"	1031:3:33697:33839	1570283	1	True				
ANR	1570619	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | ( op == SLJIT_MOV_UH ? 0x20 : 0x40 ) | reg_map [ dst ] ) )"		1570283	0					
ANR	1570620	Callee	push_inst		1570283	0					
ANR	1570621	Identifier	push_inst		1570283	0					
ANR	1570622	ArgumentList	compiler		1570283	1					
ANR	1570623	Argument	compiler		1570283	0					
ANR	1570624	Identifier	compiler		1570283	0					
ANR	1570625	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | ( op == SLJIT_MOV_UH ? 0x20 : 0x40 ) | reg_map [ dst ] )"		1570283	1					
ANR	1570626	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , ( 16 << 7 ) | ( op == SLJIT_MOV_UH ? 0x20 : 0x40 ) | reg_map [ dst ] )"		1570283	0					
ANR	1570627	Callee	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570628	Identifier	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1570629	ArgumentList	MOV_DP		1570283	1					
ANR	1570630	Argument	MOV_DP		1570283	0					
ANR	1570631	Identifier	MOV_DP		1570283	0					
ANR	1570632	Argument	0		1570283	1					
ANR	1570633	PrimaryExpression	0		1570283	0					
ANR	1570634	Argument	dst		1570283	2					
ANR	1570635	Identifier	dst		1570283	0					
ANR	1570636	Argument	SLJIT_UNUSED		1570283	3					
ANR	1570637	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570638	Argument	( 16 << 7 ) | ( op == SLJIT_MOV_UH ? 0x20 : 0x40 ) | reg_map [ dst ]		1570283	4					
ANR	1570639	InclusiveOrExpression	( 16 << 7 ) | ( op == SLJIT_MOV_UH ? 0x20 : 0x40 ) | reg_map [ dst ]		1570283	0		|			
ANR	1570640	ShiftExpression	16 << 7		1570283	0		<<			
ANR	1570641	PrimaryExpression	16		1570283	0					
ANR	1570642	PrimaryExpression	7		1570283	1					
ANR	1570643	InclusiveOrExpression	( op == SLJIT_MOV_UH ? 0x20 : 0x40 ) | reg_map [ dst ]		1570283	1		|			
ANR	1570644	ConditionalExpression	op == SLJIT_MOV_UH ? 0x20 : 0x40		1570283	0					
ANR	1570645	Condition	op == SLJIT_MOV_UH		1570283	0					
ANR	1570646	EqualityExpression	op == SLJIT_MOV_UH		1570283	0		==			
ANR	1570647	Identifier	op		1570283	0					
ANR	1570648	Identifier	SLJIT_MOV_UH		1570283	1					
ANR	1570649	PrimaryExpression	0x20		1570283	1					
ANR	1570650	PrimaryExpression	0x40		1570283	2					
ANR	1570651	ArrayIndexing	reg_map [ dst ]		1570283	1					
ANR	1570652	Identifier	reg_map		1570283	0					
ANR	1570653	Identifier	dst		1570283	1					
ANR	1570654	ElseStatement	else		1570283	0					
ANR	1570655	IfStatement	if ( dst != src2 )		1570283	0					
ANR	1570656	Condition	dst != src2	1036:11:33957:33967	1570283	0	True				
ANR	1570657	EqualityExpression	dst != src2		1570283	0		!=			
ANR	1570658	Identifier	dst		1570283	0					
ANR	1570659	Identifier	src2		1570283	1					
ANR	1570660	CompoundStatement		49:24:2065:2065	1570283	1					
ANR	1570661	ExpressionStatement	SLJIT_ASSERT ( src2 & SRC2_IMM )	1037:3:33975:34004	1570283	0	True				
ANR	1570662	CallExpression	SLJIT_ASSERT ( src2 & SRC2_IMM )		1570283	0					
ANR	1570663	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570664	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570665	ArgumentList	src2 & SRC2_IMM		1570283	1					
ANR	1570666	Argument	src2 & SRC2_IMM		1570283	0					
ANR	1570667	BitAndExpression	src2 & SRC2_IMM		1570283	0		&			
ANR	1570668	Identifier	src2		1570283	0					
ANR	1570669	Identifier	SRC2_IMM		1570283	1					
ANR	1570670	IfStatement	if ( flags & INV_IMM )		1570283	1					
ANR	1570671	Condition	flags & INV_IMM	1038:7:34013:34027	1570283	0	True				
ANR	1570672	BitAndExpression	flags & INV_IMM		1570283	0		&			
ANR	1570673	Identifier	flags		1570283	0					
ANR	1570674	Identifier	INV_IMM		1570283	1					
ANR	1570675	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , src2 )"	1039:4:34034:34104	1570283	1	True				
ANR	1570676	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , src2 )"		1570283	0					
ANR	1570677	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570678	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570679	ArgumentList	MVN_DP		1570283	1					
ANR	1570680	Argument	MVN_DP		1570283	0					
ANR	1570681	Identifier	MVN_DP		1570283	0					
ANR	1570682	Argument	dst		1570283	1					
ANR	1570683	Identifier	dst		1570283	0					
ANR	1570684	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570685	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570686	Argument	src2		1570283	3					
ANR	1570687	Identifier	src2		1570283	0					
ANR	1570688	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , src2 )"	1040:3:34109:34179	1570283	2	True				
ANR	1570689	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , src2 )"		1570283	0					
ANR	1570690	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570691	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570692	ArgumentList	MOV_DP		1570283	1					
ANR	1570693	Argument	MOV_DP		1570283	0					
ANR	1570694	Identifier	MOV_DP		1570283	0					
ANR	1570695	Argument	dst		1570283	1					
ANR	1570696	Identifier	dst		1570283	0					
ANR	1570697	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570698	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570699	Argument	src2		1570283	3					
ANR	1570700	Identifier	src2		1570283	0					
ANR	1570701	ReturnStatement	return SLJIT_SUCCESS ;	1042:2:34187:34207	1570283	13	True				
ANR	1570702	Identifier	SLJIT_SUCCESS		1570283	0					
ANR	1570703	Label	case SLJIT_NOT :	1044:1:34211:34225	1570283	14	True				
ANR	1570704	Identifier	SLJIT_NOT		1570283	0					
ANR	1570705	IfStatement	if ( src2 & SRC2_IMM )		1570283	15					
ANR	1570706	Condition	src2 & SRC2_IMM	1045:6:34233:34247	1570283	0	True				
ANR	1570707	BitAndExpression	src2 & SRC2_IMM		1570283	0		&			
ANR	1570708	Identifier	src2		1570283	0					
ANR	1570709	Identifier	SRC2_IMM		1570283	1					
ANR	1570710	CompoundStatement		58:23:2345:2345	1570283	1					
ANR	1570711	IfStatement	if ( flags & INV_IMM )		1570283	0					
ANR	1570712	Condition	flags & INV_IMM	1046:7:34259:34273	1570283	0	True				
ANR	1570713	BitAndExpression	flags & INV_IMM		1570283	0		&			
ANR	1570714	Identifier	flags		1570283	0					
ANR	1570715	Identifier	INV_IMM		1570283	1					
ANR	1570716	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , src2 )"	1047:4:34280:34350	1570283	1	True				
ANR	1570717	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MOV_DP , dst , SLJIT_UNUSED , src2 )"		1570283	0					
ANR	1570718	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570719	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570720	ArgumentList	MOV_DP		1570283	1					
ANR	1570721	Argument	MOV_DP		1570283	0					
ANR	1570722	Identifier	MOV_DP		1570283	0					
ANR	1570723	Argument	dst		1570283	1					
ANR	1570724	Identifier	dst		1570283	0					
ANR	1570725	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570726	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570727	Argument	src2		1570283	3					
ANR	1570728	Identifier	src2		1570283	0					
ANR	1570729	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , src2 )"	1048:3:34355:34425	1570283	1	True				
ANR	1570730	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , src2 )"		1570283	0					
ANR	1570731	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570732	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570733	ArgumentList	MVN_DP		1570283	1					
ANR	1570734	Argument	MVN_DP		1570283	0					
ANR	1570735	Identifier	MVN_DP		1570283	0					
ANR	1570736	Argument	dst		1570283	1					
ANR	1570737	Identifier	dst		1570283	0					
ANR	1570738	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570739	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570740	Argument	src2		1570283	3					
ANR	1570741	Identifier	src2		1570283	0					
ANR	1570742	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , RM ( src2 ) )"	1050:2:34433:34507	1570283	16	True				
ANR	1570743	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( MVN_DP , dst , SLJIT_UNUSED , RM ( src2 ) )"		1570283	0					
ANR	1570744	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570745	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570746	ArgumentList	MVN_DP		1570283	1					
ANR	1570747	Argument	MVN_DP		1570283	0					
ANR	1570748	Identifier	MVN_DP		1570283	0					
ANR	1570749	Argument	dst		1570283	1					
ANR	1570750	Identifier	dst		1570283	0					
ANR	1570751	Argument	SLJIT_UNUSED		1570283	2					
ANR	1570752	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570753	Argument	RM ( src2 )		1570283	3					
ANR	1570754	CallExpression	RM ( src2 )		1570283	0					
ANR	1570755	Callee	RM		1570283	0					
ANR	1570756	Identifier	RM		1570283	0					
ANR	1570757	ArgumentList	src2		1570283	1					
ANR	1570758	Argument	src2		1570283	0					
ANR	1570759	Identifier	src2		1570283	0					
ANR	1570760	Label	case SLJIT_CLZ :	1052:1:34511:34525	1570283	17	True				
ANR	1570761	Identifier	SLJIT_CLZ		1570283	0					
ANR	1570762	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )	1053:2:34529:34561	1570283	18	True				
ANR	1570763	CallExpression	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )		1570283	0					
ANR	1570764	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570765	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570766	ArgumentList	! ( flags & INV_IMM )		1570283	1					
ANR	1570767	Argument	! ( flags & INV_IMM )		1570283	0					
ANR	1570768	UnaryOperationExpression	! ( flags & INV_IMM )		1570283	0					
ANR	1570769	UnaryOperator	!		1570283	0					
ANR	1570770	BitAndExpression	flags & INV_IMM		1570283	1		&			
ANR	1570771	Identifier	flags		1570283	0					
ANR	1570772	Identifier	INV_IMM		1570283	1					
ANR	1570773	ExpressionStatement	SLJIT_ASSERT ( ! ( src2 & SRC2_IMM ) )	1054:2:34565:34597	1570283	19	True				
ANR	1570774	CallExpression	SLJIT_ASSERT ( ! ( src2 & SRC2_IMM ) )		1570283	0					
ANR	1570775	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570776	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570777	ArgumentList	! ( src2 & SRC2_IMM )		1570283	1					
ANR	1570778	Argument	! ( src2 & SRC2_IMM )		1570283	0					
ANR	1570779	UnaryOperationExpression	! ( src2 & SRC2_IMM )		1570283	0					
ANR	1570780	UnaryOperator	!		1570283	0					
ANR	1570781	BitAndExpression	src2 & SRC2_IMM		1570283	1		&			
ANR	1570782	Identifier	src2		1570283	0					
ANR	1570783	Identifier	SRC2_IMM		1570283	1					
ANR	1570784	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , CLZ | RD ( dst ) | RM ( src2 ) ) )"	1055:2:34601:34655	1570283	20	True				
ANR	1570785	CallExpression	"FAIL_IF ( push_inst ( compiler , CLZ | RD ( dst ) | RM ( src2 ) ) )"		1570283	0					
ANR	1570786	Callee	FAIL_IF		1570283	0					
ANR	1570787	Identifier	FAIL_IF		1570283	0					
ANR	1570788	ArgumentList	"push_inst ( compiler , CLZ | RD ( dst ) | RM ( src2 ) )"		1570283	1					
ANR	1570789	Argument	"push_inst ( compiler , CLZ | RD ( dst ) | RM ( src2 ) )"		1570283	0					
ANR	1570790	CallExpression	"push_inst ( compiler , CLZ | RD ( dst ) | RM ( src2 ) )"		1570283	0					
ANR	1570791	Callee	push_inst		1570283	0					
ANR	1570792	Identifier	push_inst		1570283	0					
ANR	1570793	ArgumentList	compiler		1570283	1					
ANR	1570794	Argument	compiler		1570283	0					
ANR	1570795	Identifier	compiler		1570283	0					
ANR	1570796	Argument	CLZ | RD ( dst ) | RM ( src2 )		1570283	1					
ANR	1570797	InclusiveOrExpression	CLZ | RD ( dst ) | RM ( src2 )		1570283	0		|			
ANR	1570798	Identifier	CLZ		1570283	0					
ANR	1570799	InclusiveOrExpression	RD ( dst ) | RM ( src2 )		1570283	1		|			
ANR	1570800	CallExpression	RD ( dst )		1570283	0					
ANR	1570801	Callee	RD		1570283	0					
ANR	1570802	Identifier	RD		1570283	0					
ANR	1570803	ArgumentList	dst		1570283	1					
ANR	1570804	Argument	dst		1570283	0					
ANR	1570805	Identifier	dst		1570283	0					
ANR	1570806	CallExpression	RM ( src2 )		1570283	1					
ANR	1570807	Callee	RM		1570283	0					
ANR	1570808	Identifier	RM		1570283	0					
ANR	1570809	ArgumentList	src2		1570283	1					
ANR	1570810	Argument	src2		1570283	0					
ANR	1570811	Identifier	src2		1570283	0					
ANR	1570812	IfStatement	if ( flags & SET_FLAGS )		1570283	21					
ANR	1570813	Condition	flags & SET_FLAGS	1056:6:34663:34679	1570283	0	True				
ANR	1570814	BitAndExpression	flags & SET_FLAGS		1570283	0		&			
ANR	1570815	Identifier	flags		1570283	0					
ANR	1570816	Identifier	SET_FLAGS		1570283	1					
ANR	1570817	ExpressionStatement	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( CMP_DP , SLJIT_UNUSED , dst , SRC2_IMM )"	1057:3:34685:34759	1570283	1	True				
ANR	1570818	CallExpression	"EMIT_FULL_DATA_PROCESS_INS_AND_RETURN ( CMP_DP , SLJIT_UNUSED , dst , SRC2_IMM )"		1570283	0					
ANR	1570819	Callee	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570820	Identifier	EMIT_FULL_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570821	ArgumentList	CMP_DP		1570283	1					
ANR	1570822	Argument	CMP_DP		1570283	0					
ANR	1570823	Identifier	CMP_DP		1570283	0					
ANR	1570824	Argument	SLJIT_UNUSED		1570283	1					
ANR	1570825	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1570826	Argument	dst		1570283	2					
ANR	1570827	Identifier	dst		1570283	0					
ANR	1570828	Argument	SRC2_IMM		1570283	3					
ANR	1570829	Identifier	SRC2_IMM		1570283	0					
ANR	1570830	ReturnStatement	return SLJIT_SUCCESS ;	1058:2:34763:34783	1570283	22	True				
ANR	1570831	Identifier	SLJIT_SUCCESS		1570283	0					
ANR	1570832	Label	case SLJIT_ADD :	1060:1:34787:34801	1570283	23	True				
ANR	1570833	Identifier	SLJIT_ADD		1570283	0					
ANR	1570834	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )	1061:2:34805:34837	1570283	24	True				
ANR	1570835	CallExpression	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )		1570283	0					
ANR	1570836	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570837	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570838	ArgumentList	! ( flags & INV_IMM )		1570283	1					
ANR	1570839	Argument	! ( flags & INV_IMM )		1570283	0					
ANR	1570840	UnaryOperationExpression	! ( flags & INV_IMM )		1570283	0					
ANR	1570841	UnaryOperator	!		1570283	0					
ANR	1570842	BitAndExpression	flags & INV_IMM		1570283	1		&			
ANR	1570843	Identifier	flags		1570283	0					
ANR	1570844	Identifier	INV_IMM		1570283	1					
ANR	1570845	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( ADD_DP )	1062:2:34841:34881	1570283	25	True				
ANR	1570846	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( ADD_DP )		1570283	0					
ANR	1570847	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570848	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570849	ArgumentList	ADD_DP		1570283	1					
ANR	1570850	Argument	ADD_DP		1570283	0					
ANR	1570851	Identifier	ADD_DP		1570283	0					
ANR	1570852	Label	case SLJIT_ADDC :	1064:1:34885:34900	1570283	26	True				
ANR	1570853	Identifier	SLJIT_ADDC		1570283	0					
ANR	1570854	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )	1065:2:34904:34936	1570283	27	True				
ANR	1570855	CallExpression	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )		1570283	0					
ANR	1570856	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570857	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570858	ArgumentList	! ( flags & INV_IMM )		1570283	1					
ANR	1570859	Argument	! ( flags & INV_IMM )		1570283	0					
ANR	1570860	UnaryOperationExpression	! ( flags & INV_IMM )		1570283	0					
ANR	1570861	UnaryOperator	!		1570283	0					
ANR	1570862	BitAndExpression	flags & INV_IMM		1570283	1		&			
ANR	1570863	Identifier	flags		1570283	0					
ANR	1570864	Identifier	INV_IMM		1570283	1					
ANR	1570865	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( ADC_DP )	1066:2:34940:34980	1570283	28	True				
ANR	1570866	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( ADC_DP )		1570283	0					
ANR	1570867	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570868	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570869	ArgumentList	ADC_DP		1570283	1					
ANR	1570870	Argument	ADC_DP		1570283	0					
ANR	1570871	Identifier	ADC_DP		1570283	0					
ANR	1570872	Label	case SLJIT_SUB :	1068:1:34984:34998	1570283	29	True				
ANR	1570873	Identifier	SLJIT_SUB		1570283	0					
ANR	1570874	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )	1069:2:35002:35034	1570283	30	True				
ANR	1570875	CallExpression	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )		1570283	0					
ANR	1570876	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570877	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570878	ArgumentList	! ( flags & INV_IMM )		1570283	1					
ANR	1570879	Argument	! ( flags & INV_IMM )		1570283	0					
ANR	1570880	UnaryOperationExpression	! ( flags & INV_IMM )		1570283	0					
ANR	1570881	UnaryOperator	!		1570283	0					
ANR	1570882	BitAndExpression	flags & INV_IMM		1570283	1		&			
ANR	1570883	Identifier	flags		1570283	0					
ANR	1570884	Identifier	INV_IMM		1570283	1					
ANR	1570885	IfStatement	if ( ! ( flags & ARGS_SWAPPED ) )		1570283	31					
ANR	1570886	Condition	! ( flags & ARGS_SWAPPED )	1070:6:35042:35064	1570283	0	True				
ANR	1570887	UnaryOperationExpression	! ( flags & ARGS_SWAPPED )		1570283	0					
ANR	1570888	UnaryOperator	!		1570283	0					
ANR	1570889	BitAndExpression	flags & ARGS_SWAPPED		1570283	1		&			
ANR	1570890	Identifier	flags		1570283	0					
ANR	1570891	Identifier	ARGS_SWAPPED		1570283	1					
ANR	1570892	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( SUB_DP )	1071:3:35070:35110	1570283	1	True				
ANR	1570893	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( SUB_DP )		1570283	0					
ANR	1570894	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570895	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570896	ArgumentList	SUB_DP		1570283	1					
ANR	1570897	Argument	SUB_DP		1570283	0					
ANR	1570898	Identifier	SUB_DP		1570283	0					
ANR	1570899	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( RSB_DP )	1072:2:35114:35154	1570283	32	True				
ANR	1570900	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( RSB_DP )		1570283	0					
ANR	1570901	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570902	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570903	ArgumentList	RSB_DP		1570283	1					
ANR	1570904	Argument	RSB_DP		1570283	0					
ANR	1570905	Identifier	RSB_DP		1570283	0					
ANR	1570906	Label	case SLJIT_SUBC :	1074:1:35158:35173	1570283	33	True				
ANR	1570907	Identifier	SLJIT_SUBC		1570283	0					
ANR	1570908	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )	1075:2:35177:35209	1570283	34	True				
ANR	1570909	CallExpression	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )		1570283	0					
ANR	1570910	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570911	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570912	ArgumentList	! ( flags & INV_IMM )		1570283	1					
ANR	1570913	Argument	! ( flags & INV_IMM )		1570283	0					
ANR	1570914	UnaryOperationExpression	! ( flags & INV_IMM )		1570283	0					
ANR	1570915	UnaryOperator	!		1570283	0					
ANR	1570916	BitAndExpression	flags & INV_IMM		1570283	1		&			
ANR	1570917	Identifier	flags		1570283	0					
ANR	1570918	Identifier	INV_IMM		1570283	1					
ANR	1570919	IfStatement	if ( ! ( flags & ARGS_SWAPPED ) )		1570283	35					
ANR	1570920	Condition	! ( flags & ARGS_SWAPPED )	1076:6:35217:35239	1570283	0	True				
ANR	1570921	UnaryOperationExpression	! ( flags & ARGS_SWAPPED )		1570283	0					
ANR	1570922	UnaryOperator	!		1570283	0					
ANR	1570923	BitAndExpression	flags & ARGS_SWAPPED		1570283	1		&			
ANR	1570924	Identifier	flags		1570283	0					
ANR	1570925	Identifier	ARGS_SWAPPED		1570283	1					
ANR	1570926	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( SBC_DP )	1077:3:35245:35285	1570283	1	True				
ANR	1570927	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( SBC_DP )		1570283	0					
ANR	1570928	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570929	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570930	ArgumentList	SBC_DP		1570283	1					
ANR	1570931	Argument	SBC_DP		1570283	0					
ANR	1570932	Identifier	SBC_DP		1570283	0					
ANR	1570933	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( RSC_DP )	1078:2:35289:35329	1570283	36	True				
ANR	1570934	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( RSC_DP )		1570283	0					
ANR	1570935	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570936	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1570937	ArgumentList	RSC_DP		1570283	1					
ANR	1570938	Argument	RSC_DP		1570283	0					
ANR	1570939	Identifier	RSC_DP		1570283	0					
ANR	1570940	Label	case SLJIT_MUL :	1080:1:35333:35347	1570283	37	True				
ANR	1570941	Identifier	SLJIT_MUL		1570283	0					
ANR	1570942	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )	1081:2:35351:35383	1570283	38	True				
ANR	1570943	CallExpression	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )		1570283	0					
ANR	1570944	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570945	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570946	ArgumentList	! ( flags & INV_IMM )		1570283	1					
ANR	1570947	Argument	! ( flags & INV_IMM )		1570283	0					
ANR	1570948	UnaryOperationExpression	! ( flags & INV_IMM )		1570283	0					
ANR	1570949	UnaryOperator	!		1570283	0					
ANR	1570950	BitAndExpression	flags & INV_IMM		1570283	1		&			
ANR	1570951	Identifier	flags		1570283	0					
ANR	1570952	Identifier	INV_IMM		1570283	1					
ANR	1570953	ExpressionStatement	SLJIT_ASSERT ( ! ( src2 & SRC2_IMM ) )	1082:2:35387:35419	1570283	39	True				
ANR	1570954	CallExpression	SLJIT_ASSERT ( ! ( src2 & SRC2_IMM ) )		1570283	0					
ANR	1570955	Callee	SLJIT_ASSERT		1570283	0					
ANR	1570956	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1570957	ArgumentList	! ( src2 & SRC2_IMM )		1570283	1					
ANR	1570958	Argument	! ( src2 & SRC2_IMM )		1570283	0					
ANR	1570959	UnaryOperationExpression	! ( src2 & SRC2_IMM )		1570283	0					
ANR	1570960	UnaryOperator	!		1570283	0					
ANR	1570961	BitAndExpression	src2 & SRC2_IMM		1570283	1		&			
ANR	1570962	Identifier	src2		1570283	0					
ANR	1570963	Identifier	SRC2_IMM		1570283	1					
ANR	1570964	IfStatement	if ( SLJIT_UNLIKELY ( op & SLJIT_SET_O ) )		1570283	40					
ANR	1570965	Condition	SLJIT_UNLIKELY ( op & SLJIT_SET_O )	1083:6:35427:35458	1570283	0	True				
ANR	1570966	CallExpression	SLJIT_UNLIKELY ( op & SLJIT_SET_O )		1570283	0					
ANR	1570967	Callee	SLJIT_UNLIKELY		1570283	0					
ANR	1570968	Identifier	SLJIT_UNLIKELY		1570283	0					
ANR	1570969	ArgumentList	op & SLJIT_SET_O		1570283	1					
ANR	1570970	Argument	op & SLJIT_SET_O		1570283	0					
ANR	1570971	BitAndExpression	op & SLJIT_SET_O		1570283	0		&			
ANR	1570972	Identifier	op		1570283	0					
ANR	1570973	Identifier	SLJIT_SET_O		1570283	1					
ANR	1570974	ExpressionStatement	mul_inst = SMULL | ( reg_map [ TMP_REG3 ] << 16 ) | ( reg_map [ dst ] << 12 )	1084:3:35464:35531	1570283	1	True				
ANR	1570975	AssignmentExpression	mul_inst = SMULL | ( reg_map [ TMP_REG3 ] << 16 ) | ( reg_map [ dst ] << 12 )		1570283	0		=			
ANR	1570976	Identifier	mul_inst		1570283	0					
ANR	1570977	InclusiveOrExpression	SMULL | ( reg_map [ TMP_REG3 ] << 16 ) | ( reg_map [ dst ] << 12 )		1570283	1		|			
ANR	1570978	Identifier	SMULL		1570283	0					
ANR	1570979	InclusiveOrExpression	( reg_map [ TMP_REG3 ] << 16 ) | ( reg_map [ dst ] << 12 )		1570283	1		|			
ANR	1570980	ShiftExpression	reg_map [ TMP_REG3 ] << 16		1570283	0		<<			
ANR	1570981	ArrayIndexing	reg_map [ TMP_REG3 ]		1570283	0					
ANR	1570982	Identifier	reg_map		1570283	0					
ANR	1570983	Identifier	TMP_REG3		1570283	1					
ANR	1570984	PrimaryExpression	16		1570283	1					
ANR	1570985	ShiftExpression	reg_map [ dst ] << 12		1570283	1		<<			
ANR	1570986	ArrayIndexing	reg_map [ dst ]		1570283	0					
ANR	1570987	Identifier	reg_map		1570283	0					
ANR	1570988	Identifier	dst		1570283	1					
ANR	1570989	PrimaryExpression	12		1570283	1					
ANR	1570990	ElseStatement	else		1570283	0					
ANR	1570991	ExpressionStatement	mul_inst = MUL | ( reg_map [ dst ] << 16 )	1086:3:35543:35580	1570283	0	True				
ANR	1570992	AssignmentExpression	mul_inst = MUL | ( reg_map [ dst ] << 16 )		1570283	0		=			
ANR	1570993	Identifier	mul_inst		1570283	0					
ANR	1570994	InclusiveOrExpression	MUL | ( reg_map [ dst ] << 16 )		1570283	1		|			
ANR	1570995	Identifier	MUL		1570283	0					
ANR	1570996	ShiftExpression	reg_map [ dst ] << 16		1570283	1		<<			
ANR	1570997	ArrayIndexing	reg_map [ dst ]		1570283	0					
ANR	1570998	Identifier	reg_map		1570283	0					
ANR	1570999	Identifier	dst		1570283	1					
ANR	1571000	PrimaryExpression	16		1570283	1					
ANR	1571001	IfStatement	if ( dst != src2 )		1570283	41					
ANR	1571002	Condition	dst != src2	1088:6:35589:35599	1570283	0	True				
ANR	1571003	EqualityExpression	dst != src2		1570283	0		!=			
ANR	1571004	Identifier	dst		1570283	0					
ANR	1571005	Identifier	src2		1570283	1					
ANR	1571006	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , mul_inst | ( reg_map [ src1 ] << 8 ) | reg_map [ src2 ] ) )"	1089:3:35605:35682	1570283	1	True				
ANR	1571007	CallExpression	"FAIL_IF ( push_inst ( compiler , mul_inst | ( reg_map [ src1 ] << 8 ) | reg_map [ src2 ] ) )"		1570283	0					
ANR	1571008	Callee	FAIL_IF		1570283	0					
ANR	1571009	Identifier	FAIL_IF		1570283	0					
ANR	1571010	ArgumentList	"push_inst ( compiler , mul_inst | ( reg_map [ src1 ] << 8 ) | reg_map [ src2 ] )"		1570283	1					
ANR	1571011	Argument	"push_inst ( compiler , mul_inst | ( reg_map [ src1 ] << 8 ) | reg_map [ src2 ] )"		1570283	0					
ANR	1571012	CallExpression	"push_inst ( compiler , mul_inst | ( reg_map [ src1 ] << 8 ) | reg_map [ src2 ] )"		1570283	0					
ANR	1571013	Callee	push_inst		1570283	0					
ANR	1571014	Identifier	push_inst		1570283	0					
ANR	1571015	ArgumentList	compiler		1570283	1					
ANR	1571016	Argument	compiler		1570283	0					
ANR	1571017	Identifier	compiler		1570283	0					
ANR	1571018	Argument	mul_inst | ( reg_map [ src1 ] << 8 ) | reg_map [ src2 ]		1570283	1					
ANR	1571019	InclusiveOrExpression	mul_inst | ( reg_map [ src1 ] << 8 ) | reg_map [ src2 ]		1570283	0		|			
ANR	1571020	Identifier	mul_inst		1570283	0					
ANR	1571021	InclusiveOrExpression	( reg_map [ src1 ] << 8 ) | reg_map [ src2 ]		1570283	1		|			
ANR	1571022	ShiftExpression	reg_map [ src1 ] << 8		1570283	0		<<			
ANR	1571023	ArrayIndexing	reg_map [ src1 ]		1570283	0					
ANR	1571024	Identifier	reg_map		1570283	0					
ANR	1571025	Identifier	src1		1570283	1					
ANR	1571026	PrimaryExpression	8		1570283	1					
ANR	1571027	ArrayIndexing	reg_map [ src2 ]		1570283	1					
ANR	1571028	Identifier	reg_map		1570283	0					
ANR	1571029	Identifier	src2		1570283	1					
ANR	1571030	ElseStatement	else		1570283	0					
ANR	1571031	IfStatement	if ( dst != src1 )		1570283	0					
ANR	1571032	Condition	dst != src1	1090:11:35695:35705	1570283	0	True				
ANR	1571033	EqualityExpression	dst != src1		1570283	0		!=			
ANR	1571034	Identifier	dst		1570283	0					
ANR	1571035	Identifier	src1		1570283	1					
ANR	1571036	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ src1 ] ) )"	1091:3:35711:35788	1570283	1	True				
ANR	1571037	CallExpression	"FAIL_IF ( push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ src1 ] ) )"		1570283	0					
ANR	1571038	Callee	FAIL_IF		1570283	0					
ANR	1571039	Identifier	FAIL_IF		1570283	0					
ANR	1571040	ArgumentList	"push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ src1 ] )"		1570283	1					
ANR	1571041	Argument	"push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ src1 ] )"		1570283	0					
ANR	1571042	CallExpression	"push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ src1 ] )"		1570283	0					
ANR	1571043	Callee	push_inst		1570283	0					
ANR	1571044	Identifier	push_inst		1570283	0					
ANR	1571045	ArgumentList	compiler		1570283	1					
ANR	1571046	Argument	compiler		1570283	0					
ANR	1571047	Identifier	compiler		1570283	0					
ANR	1571048	Argument	mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ src1 ]		1570283	1					
ANR	1571049	InclusiveOrExpression	mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ src1 ]		1570283	0		|			
ANR	1571050	Identifier	mul_inst		1570283	0					
ANR	1571051	InclusiveOrExpression	( reg_map [ src2 ] << 8 ) | reg_map [ src1 ]		1570283	1		|			
ANR	1571052	ShiftExpression	reg_map [ src2 ] << 8		1570283	0		<<			
ANR	1571053	ArrayIndexing	reg_map [ src2 ]		1570283	0					
ANR	1571054	Identifier	reg_map		1570283	0					
ANR	1571055	Identifier	src2		1570283	1					
ANR	1571056	PrimaryExpression	8		1570283	1					
ANR	1571057	ArrayIndexing	reg_map [ src1 ]		1570283	1					
ANR	1571058	Identifier	reg_map		1570283	0					
ANR	1571059	Identifier	src1		1570283	1					
ANR	1571060	ElseStatement	else		1570283	0					
ANR	1571061	CompoundStatement		105:7:3892:3892	1570283	0					
ANR	1571062	ExpressionStatement	SLJIT_ASSERT ( dst != TMP_REG1 )	1094:3:35852:35881	1570283	0	True				
ANR	1571063	CallExpression	SLJIT_ASSERT ( dst != TMP_REG1 )		1570283	0					
ANR	1571064	Callee	SLJIT_ASSERT		1570283	0					
ANR	1571065	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1571066	ArgumentList	dst != TMP_REG1		1570283	1					
ANR	1571067	Argument	dst != TMP_REG1		1570283	0					
ANR	1571068	EqualityExpression	dst != TMP_REG1		1570283	0		!=			
ANR	1571069	Identifier	dst		1570283	0					
ANR	1571070	Identifier	TMP_REG1		1570283	1					
ANR	1571071	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG1 , SLJIT_UNUSED , reg_map [ src2 ] ) ) )"	1095:3:35886:35987	1570283	1	True				
ANR	1571072	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG1 , SLJIT_UNUSED , reg_map [ src2 ] ) ) )"		1570283	0					
ANR	1571073	Callee	FAIL_IF		1570283	0					
ANR	1571074	Identifier	FAIL_IF		1570283	0					
ANR	1571075	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG1 , SLJIT_UNUSED , reg_map [ src2 ] ) )"		1570283	1					
ANR	1571076	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG1 , SLJIT_UNUSED , reg_map [ src2 ] ) )"		1570283	0					
ANR	1571077	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG1 , SLJIT_UNUSED , reg_map [ src2 ] ) )"		1570283	0					
ANR	1571078	Callee	push_inst		1570283	0					
ANR	1571079	Identifier	push_inst		1570283	0					
ANR	1571080	ArgumentList	compiler		1570283	1					
ANR	1571081	Argument	compiler		1570283	0					
ANR	1571082	Identifier	compiler		1570283	0					
ANR	1571083	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG1 , SLJIT_UNUSED , reg_map [ src2 ] )"		1570283	1					
ANR	1571084	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG1 , SLJIT_UNUSED , reg_map [ src2 ] )"		1570283	0					
ANR	1571085	Callee	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1571086	Identifier	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1571087	ArgumentList	MOV_DP		1570283	1					
ANR	1571088	Argument	MOV_DP		1570283	0					
ANR	1571089	Identifier	MOV_DP		1570283	0					
ANR	1571090	Argument	0		1570283	1					
ANR	1571091	PrimaryExpression	0		1570283	0					
ANR	1571092	Argument	TMP_REG1		1570283	2					
ANR	1571093	Identifier	TMP_REG1		1570283	0					
ANR	1571094	Argument	SLJIT_UNUSED		1570283	3					
ANR	1571095	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1571096	Argument	reg_map [ src2 ]		1570283	4					
ANR	1571097	ArrayIndexing	reg_map [ src2 ]		1570283	0					
ANR	1571098	Identifier	reg_map		1570283	0					
ANR	1571099	Identifier	src2		1570283	1					
ANR	1571100	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ TMP_REG1 ] ) )"	1096:3:35992:36073	1570283	2	True				
ANR	1571101	CallExpression	"FAIL_IF ( push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ TMP_REG1 ] ) )"		1570283	0					
ANR	1571102	Callee	FAIL_IF		1570283	0					
ANR	1571103	Identifier	FAIL_IF		1570283	0					
ANR	1571104	ArgumentList	"push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ TMP_REG1 ] )"		1570283	1					
ANR	1571105	Argument	"push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ TMP_REG1 ] )"		1570283	0					
ANR	1571106	CallExpression	"push_inst ( compiler , mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ TMP_REG1 ] )"		1570283	0					
ANR	1571107	Callee	push_inst		1570283	0					
ANR	1571108	Identifier	push_inst		1570283	0					
ANR	1571109	ArgumentList	compiler		1570283	1					
ANR	1571110	Argument	compiler		1570283	0					
ANR	1571111	Identifier	compiler		1570283	0					
ANR	1571112	Argument	mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ TMP_REG1 ]		1570283	1					
ANR	1571113	InclusiveOrExpression	mul_inst | ( reg_map [ src2 ] << 8 ) | reg_map [ TMP_REG1 ]		1570283	0		|			
ANR	1571114	Identifier	mul_inst		1570283	0					
ANR	1571115	InclusiveOrExpression	( reg_map [ src2 ] << 8 ) | reg_map [ TMP_REG1 ]		1570283	1		|			
ANR	1571116	ShiftExpression	reg_map [ src2 ] << 8		1570283	0		<<			
ANR	1571117	ArrayIndexing	reg_map [ src2 ]		1570283	0					
ANR	1571118	Identifier	reg_map		1570283	0					
ANR	1571119	Identifier	src2		1570283	1					
ANR	1571120	PrimaryExpression	8		1570283	1					
ANR	1571121	ArrayIndexing	reg_map [ TMP_REG1 ]		1570283	1					
ANR	1571122	Identifier	reg_map		1570283	0					
ANR	1571123	Identifier	TMP_REG1		1570283	1					
ANR	1571124	IfStatement	if ( ! ( op & SLJIT_SET_O ) )		1570283	42					
ANR	1571125	Condition	! ( op & SLJIT_SET_O )	1099:6:36086:36104	1570283	0	True				
ANR	1571126	UnaryOperationExpression	! ( op & SLJIT_SET_O )		1570283	0					
ANR	1571127	UnaryOperator	!		1570283	0					
ANR	1571128	BitAndExpression	op & SLJIT_SET_O		1570283	1		&			
ANR	1571129	Identifier	op		1570283	0					
ANR	1571130	Identifier	SLJIT_SET_O		1570283	1					
ANR	1571131	ReturnStatement	return SLJIT_SUCCESS ;	1100:3:36110:36130	1570283	1	True				
ANR	1571132	Identifier	SLJIT_SUCCESS		1570283	0					
ANR	1571133	ExpressionStatement	compiler -> cache_arg = 0	1103:2:36168:36191	1570283	43	True				
ANR	1571134	AssignmentExpression	compiler -> cache_arg = 0		1570283	0		=			
ANR	1571135	PtrMemberAccess	compiler -> cache_arg		1570283	0					
ANR	1571136	Identifier	compiler		1570283	0					
ANR	1571137	Identifier	cache_arg		1570283	1					
ANR	1571138	PrimaryExpression	0		1570283	1					
ANR	1571139	ExpressionStatement	compiler -> cache_argw = 0	1104:2:36195:36219	1570283	44	True				
ANR	1571140	AssignmentExpression	compiler -> cache_argw = 0		1570283	0		=			
ANR	1571141	PtrMemberAccess	compiler -> cache_argw		1570283	0					
ANR	1571142	Identifier	compiler		1570283	0					
ANR	1571143	Identifier	cache_argw		1570283	1					
ANR	1571144	PrimaryExpression	0		1570283	1					
ANR	1571145	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_PROCESS_INS ( CMP_DP , SET_FLAGS , SLJIT_UNUSED , TMP_REG3 , RM ( dst ) | 0xfc0 ) ) ;"	1106:2:36258:36367	1570283	45	True				
ANR	1571146	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( CMP_DP , SET_FLAGS , SLJIT_UNUSED , TMP_REG3 , RM ( dst ) | 0xfc0 ) )"		1570283	0					
ANR	1571147	Callee	push_inst		1570283	0					
ANR	1571148	Identifier	push_inst		1570283	0					
ANR	1571149	ArgumentList	compiler		1570283	1					
ANR	1571150	Argument	compiler		1570283	0					
ANR	1571151	Identifier	compiler		1570283	0					
ANR	1571152	Argument	"EMIT_DATA_PROCESS_INS ( CMP_DP , SET_FLAGS , SLJIT_UNUSED , TMP_REG3 , RM ( dst ) | 0xfc0 )"		1570283	1					
ANR	1571153	CallExpression	"EMIT_DATA_PROCESS_INS ( CMP_DP , SET_FLAGS , SLJIT_UNUSED , TMP_REG3 , RM ( dst ) | 0xfc0 )"		1570283	0					
ANR	1571154	Callee	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1571155	Identifier	EMIT_DATA_PROCESS_INS		1570283	0					
ANR	1571156	ArgumentList	CMP_DP		1570283	1					
ANR	1571157	Argument	CMP_DP		1570283	0					
ANR	1571158	Identifier	CMP_DP		1570283	0					
ANR	1571159	Argument	SET_FLAGS		1570283	1					
ANR	1571160	Identifier	SET_FLAGS		1570283	0					
ANR	1571161	Argument	SLJIT_UNUSED		1570283	2					
ANR	1571162	Identifier	SLJIT_UNUSED		1570283	0					
ANR	1571163	Argument	TMP_REG3		1570283	3					
ANR	1571164	Identifier	TMP_REG3		1570283	0					
ANR	1571165	Argument	RM ( dst ) | 0xfc0		1570283	4					
ANR	1571166	InclusiveOrExpression	RM ( dst ) | 0xfc0		1570283	0		|			
ANR	1571167	CallExpression	RM ( dst )		1570283	0					
ANR	1571168	Callee	RM		1570283	0					
ANR	1571169	Identifier	RM		1570283	0					
ANR	1571170	ArgumentList	dst		1570283	1					
ANR	1571171	Argument	dst		1570283	0					
ANR	1571172	Identifier	dst		1570283	0					
ANR	1571173	PrimaryExpression	0xfc0		1570283	1					
ANR	1571174	Label	case SLJIT_AND :	1108:1:36371:36385	1570283	46	True				
ANR	1571175	Identifier	SLJIT_AND		1570283	0					
ANR	1571176	IfStatement	if ( ! ( flags & INV_IMM ) )		1570283	47					
ANR	1571177	Condition	! ( flags & INV_IMM )	1109:6:36393:36410	1570283	0	True				
ANR	1571178	UnaryOperationExpression	! ( flags & INV_IMM )		1570283	0					
ANR	1571179	UnaryOperator	!		1570283	0					
ANR	1571180	BitAndExpression	flags & INV_IMM		1570283	1		&			
ANR	1571181	Identifier	flags		1570283	0					
ANR	1571182	Identifier	INV_IMM		1570283	1					
ANR	1571183	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( AND_DP )	1110:3:36416:36456	1570283	1	True				
ANR	1571184	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( AND_DP )		1570283	0					
ANR	1571185	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1571186	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1571187	ArgumentList	AND_DP		1570283	1					
ANR	1571188	Argument	AND_DP		1570283	0					
ANR	1571189	Identifier	AND_DP		1570283	0					
ANR	1571190	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( BIC_DP )	1111:2:36460:36500	1570283	48	True				
ANR	1571191	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( BIC_DP )		1570283	0					
ANR	1571192	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1571193	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1571194	ArgumentList	BIC_DP		1570283	1					
ANR	1571195	Argument	BIC_DP		1570283	0					
ANR	1571196	Identifier	BIC_DP		1570283	0					
ANR	1571197	Label	case SLJIT_OR :	1113:1:36504:36517	1570283	49	True				
ANR	1571198	Identifier	SLJIT_OR		1570283	0					
ANR	1571199	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )	1114:2:36521:36553	1570283	50	True				
ANR	1571200	CallExpression	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )		1570283	0					
ANR	1571201	Callee	SLJIT_ASSERT		1570283	0					
ANR	1571202	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1571203	ArgumentList	! ( flags & INV_IMM )		1570283	1					
ANR	1571204	Argument	! ( flags & INV_IMM )		1570283	0					
ANR	1571205	UnaryOperationExpression	! ( flags & INV_IMM )		1570283	0					
ANR	1571206	UnaryOperator	!		1570283	0					
ANR	1571207	BitAndExpression	flags & INV_IMM		1570283	1		&			
ANR	1571208	Identifier	flags		1570283	0					
ANR	1571209	Identifier	INV_IMM		1570283	1					
ANR	1571210	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( ORR_DP )	1115:2:36557:36597	1570283	51	True				
ANR	1571211	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( ORR_DP )		1570283	0					
ANR	1571212	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1571213	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1571214	ArgumentList	ORR_DP		1570283	1					
ANR	1571215	Argument	ORR_DP		1570283	0					
ANR	1571216	Identifier	ORR_DP		1570283	0					
ANR	1571217	Label	case SLJIT_XOR :	1117:1:36601:36615	1570283	52	True				
ANR	1571218	Identifier	SLJIT_XOR		1570283	0					
ANR	1571219	ExpressionStatement	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )	1118:2:36619:36651	1570283	53	True				
ANR	1571220	CallExpression	SLJIT_ASSERT ( ! ( flags & INV_IMM ) )		1570283	0					
ANR	1571221	Callee	SLJIT_ASSERT		1570283	0					
ANR	1571222	Identifier	SLJIT_ASSERT		1570283	0					
ANR	1571223	ArgumentList	! ( flags & INV_IMM )		1570283	1					
ANR	1571224	Argument	! ( flags & INV_IMM )		1570283	0					
ANR	1571225	UnaryOperationExpression	! ( flags & INV_IMM )		1570283	0					
ANR	1571226	UnaryOperator	!		1570283	0					
ANR	1571227	BitAndExpression	flags & INV_IMM		1570283	1		&			
ANR	1571228	Identifier	flags		1570283	0					
ANR	1571229	Identifier	INV_IMM		1570283	1					
ANR	1571230	ExpressionStatement	EMIT_DATA_PROCESS_INS_AND_RETURN ( EOR_DP )	1119:2:36655:36695	1570283	54	True				
ANR	1571231	CallExpression	EMIT_DATA_PROCESS_INS_AND_RETURN ( EOR_DP )		1570283	0					
ANR	1571232	Callee	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1571233	Identifier	EMIT_DATA_PROCESS_INS_AND_RETURN		1570283	0					
ANR	1571234	ArgumentList	EOR_DP		1570283	1					
ANR	1571235	Argument	EOR_DP		1570283	0					
ANR	1571236	Identifier	EOR_DP		1570283	0					
ANR	1571237	Label	case SLJIT_SHL :	1121:1:36699:36713	1570283	55	True				
ANR	1571238	Identifier	SLJIT_SHL		1570283	0					
ANR	1571239	ExpressionStatement	EMIT_SHIFT_INS_AND_RETURN ( 0 )	1122:2:36717:36745	1570283	56	True				
ANR	1571240	CallExpression	EMIT_SHIFT_INS_AND_RETURN ( 0 )		1570283	0					
ANR	1571241	Callee	EMIT_SHIFT_INS_AND_RETURN		1570283	0					
ANR	1571242	Identifier	EMIT_SHIFT_INS_AND_RETURN		1570283	0					
ANR	1571243	ArgumentList	0		1570283	1					
ANR	1571244	Argument	0		1570283	0					
ANR	1571245	PrimaryExpression	0		1570283	0					
ANR	1571246	Label	case SLJIT_LSHR :	1124:1:36749:36764	1570283	57	True				
ANR	1571247	Identifier	SLJIT_LSHR		1570283	0					
ANR	1571248	ExpressionStatement	EMIT_SHIFT_INS_AND_RETURN ( 1 )	1125:2:36768:36796	1570283	58	True				
ANR	1571249	CallExpression	EMIT_SHIFT_INS_AND_RETURN ( 1 )		1570283	0					
ANR	1571250	Callee	EMIT_SHIFT_INS_AND_RETURN		1570283	0					
ANR	1571251	Identifier	EMIT_SHIFT_INS_AND_RETURN		1570283	0					
ANR	1571252	ArgumentList	1		1570283	1					
ANR	1571253	Argument	1		1570283	0					
ANR	1571254	PrimaryExpression	1		1570283	0					
ANR	1571255	Label	case SLJIT_ASHR :	1127:1:36800:36815	1570283	59	True				
ANR	1571256	Identifier	SLJIT_ASHR		1570283	0					
ANR	1571257	ExpressionStatement	EMIT_SHIFT_INS_AND_RETURN ( 2 )	1128:2:36819:36847	1570283	60	True				
ANR	1571258	CallExpression	EMIT_SHIFT_INS_AND_RETURN ( 2 )		1570283	0					
ANR	1571259	Callee	EMIT_SHIFT_INS_AND_RETURN		1570283	0					
ANR	1571260	Identifier	EMIT_SHIFT_INS_AND_RETURN		1570283	0					
ANR	1571261	ArgumentList	2		1570283	1					
ANR	1571262	Argument	2		1570283	0					
ANR	1571263	PrimaryExpression	2		1570283	0					
ANR	1571264	ExpressionStatement	SLJIT_ASSERT_STOP ( )	1130:1:36853:36872	1570283	2	True				
ANR	1571265	CallExpression	SLJIT_ASSERT_STOP ( )		1570283	0					
ANR	1571266	Callee	SLJIT_ASSERT_STOP		1570283	0					
ANR	1571267	Identifier	SLJIT_ASSERT_STOP		1570283	0					
ANR	1571268	ArgumentList			1570283	1					
ANR	1571269	ReturnStatement	return SLJIT_SUCCESS ;	1131:1:36875:36895	1570283	3	True				
ANR	1571270	Identifier	SLJIT_SUCCESS		1570283	0					
ANR	1571271	ReturnType	static SLJIT_INLINE sljit_si		1570283	1					
ANR	1571272	Identifier	emit_single_op		1570283	2					
ANR	1571273	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si flags , sljit_si dst , sljit_si src1 , sljit_si src2"		1570283	3					
ANR	1571274	Parameter	struct sljit_compiler * compiler	986:44:31797:31827	1570283	0	True				
ANR	1571275	ParameterType	struct sljit_compiler *		1570283	0					
ANR	1571276	Identifier	compiler		1570283	1					
ANR	1571277	Parameter	sljit_si op	986:77:31830:31840	1570283	1	True				
ANR	1571278	ParameterType	sljit_si		1570283	0					
ANR	1571279	Identifier	op		1570283	1					
ANR	1571280	Parameter	sljit_si flags	986:90:31843:31856	1570283	2	True				
ANR	1571281	ParameterType	sljit_si		1570283	0					
ANR	1571282	Identifier	flags		1570283	1					
ANR	1571283	Parameter	sljit_si dst	987:1:31860:31871	1570283	3	True				
ANR	1571284	ParameterType	sljit_si		1570283	0					
ANR	1571285	Identifier	dst		1570283	1					
ANR	1571286	Parameter	sljit_si src1	987:15:31874:31886	1570283	4	True				
ANR	1571287	ParameterType	sljit_si		1570283	0					
ANR	1571288	Identifier	src1		1570283	1					
ANR	1571289	Parameter	sljit_si src2	987:30:31889:31901	1570283	5	True				
ANR	1571290	ParameterType	sljit_si		1570283	0					
ANR	1571291	Identifier	src2		1570283	1					
ANR	1571292	CFGEntryNode	ENTRY		1570283		True				
ANR	1571293	CFGExitNode	EXIT		1570283		True				
ANR	1571294	Symbol	TMP_REG3		1570283						
ANR	1571295	Symbol	TMP_REG1		1570283						
ANR	1571296	Symbol	MVN_DP		1570283						
ANR	1571297	Symbol	ORR_DP		1570283						
ANR	1571298	Symbol	reg_map		1570283						
ANR	1571299	Symbol	* compiler		1570283						
ANR	1571300	Symbol	BIC_DP		1570283						
ANR	1571301	Symbol	GET_OPCODE		1570283						
ANR	1571302	Symbol	* dst		1570283						
ANR	1571303	Symbol	CLZ		1570283						
ANR	1571304	Symbol	INV_IMM		1570283						
ANR	1571305	Symbol	SLJIT_MOV_UH		1570283						
ANR	1571306	Symbol	* TMP_REG1		1570283						
ANR	1571307	Symbol	* TMP_REG3		1570283						
ANR	1571308	Symbol	* src2		1570283						
ANR	1571309	Symbol	MUL		1570283						
ANR	1571310	Symbol	compiler -> cache_arg		1570283						
ANR	1571311	Symbol	* src1		1570283						
ANR	1571312	Symbol	* reg_map		1570283						
ANR	1571313	Symbol	SET_FLAGS		1570283						
ANR	1571314	Symbol	SLJIT_MOV_UB		1570283						
ANR	1571315	Symbol	mul_inst		1570283						
ANR	1571316	Symbol	RD		1570283						
ANR	1571317	Symbol	SBC_DP		1570283						
ANR	1571318	Symbol	REG_SOURCE		1570283						
ANR	1571319	Symbol	RM		1570283						
ANR	1571320	Symbol	REG_DEST		1570283						
ANR	1571321	Symbol	SLJIT_UNLIKELY		1570283						
ANR	1571322	Symbol	AND_DP		1570283						
ANR	1571323	Symbol	compiler -> cache_argw		1570283						
ANR	1571324	Symbol	ADD_DP		1570283						
ANR	1571325	Symbol	dst		1570283						
ANR	1571326	Symbol	SLJIT_SET_O		1570283						
ANR	1571327	Symbol	flags		1570283						
ANR	1571328	Symbol	SMULL		1570283						
ANR	1571329	Symbol	MOV_DP		1570283						
ANR	1571330	Symbol	ARGS_SWAPPED		1570283						
ANR	1571331	Symbol	RSC_DP		1570283						
ANR	1571332	Symbol	SRC2_IMM		1570283						
ANR	1571333	Symbol	compiler		1570283						
ANR	1571334	Symbol	op		1570283						
ANR	1571335	Symbol	push_inst		1570283						
ANR	1571336	Symbol	ADC_DP		1570283						
ANR	1571337	Symbol	SUB_DP		1570283						
ANR	1571338	Symbol	SLJIT_SUCCESS		1570283						
ANR	1571339	Symbol	CMP_DP		1570283						
ANR	1571340	Symbol	SLJIT_UNUSED		1570283						
ANR	1571341	Symbol	RSB_DP		1570283						
ANR	1571342	Symbol	src1		1570283						
ANR	1571343	Symbol	src2		1570283						
ANR	1571344	Symbol	EOR_DP		1570283						
ANR	1571345	Symbol	EMIT_DATA_PROCESS_INS		1570283						
ANR	1571346	Function	get_imm	1140:0:37127:37600							
ANR	1571347	FunctionDef	get_imm (sljit_uw imm)		1571346	0					
ANR	1571348	CompoundStatement		1141:0:37165:37600	1571346	0					
ANR	1571349	IdentifierDeclStatement	sljit_si rol ;	1142:1:37168:37180	1571346	0	True				
ANR	1571350	IdentifierDecl	rol		1571346	0					
ANR	1571351	IdentifierDeclType	sljit_si		1571346	0					
ANR	1571352	Identifier	rol		1571346	1					
ANR	1571353	IfStatement	if ( imm <= 0xff )		1571346	1					
ANR	1571354	Condition	imm <= 0xff	1144:5:37188:37198	1571346	0	True				
ANR	1571355	RelationalExpression	imm <= 0xff		1571346	0		<=			
ANR	1571356	Identifier	imm		1571346	0					
ANR	1571357	PrimaryExpression	0xff		1571346	1					
ANR	1571358	ReturnStatement	return SRC2_IMM | imm ;	1145:2:37203:37224	1571346	1	True				
ANR	1571359	InclusiveOrExpression	SRC2_IMM | imm		1571346	0		|			
ANR	1571360	Identifier	SRC2_IMM		1571346	0					
ANR	1571361	Identifier	imm		1571346	1					
ANR	1571362	IfStatement	if ( ! ( imm & 0xff000000 ) )		1571346	2					
ANR	1571363	Condition	! ( imm & 0xff000000 )	1147:5:37232:37250	1571346	0	True				
ANR	1571364	UnaryOperationExpression	! ( imm & 0xff000000 )		1571346	0					
ANR	1571365	UnaryOperator	!		1571346	0					
ANR	1571366	BitAndExpression	imm & 0xff000000		1571346	1		&			
ANR	1571367	Identifier	imm		1571346	0					
ANR	1571368	PrimaryExpression	0xff000000		1571346	1					
ANR	1571369	CompoundStatement		7:26:87:87	1571346	1					
ANR	1571370	ExpressionStatement	imm <<= 8	1148:2:37257:37266	1571346	0	True				
ANR	1571371	AssignmentExpression	imm <<= 8		1571346	0		<<=			
ANR	1571372	Identifier	imm		1571346	0					
ANR	1571373	PrimaryExpression	8		1571346	1					
ANR	1571374	ExpressionStatement	rol = 8	1149:2:37270:37277	1571346	1	True				
ANR	1571375	AssignmentExpression	rol = 8		1571346	0		=			
ANR	1571376	Identifier	rol		1571346	0					
ANR	1571377	PrimaryExpression	8		1571346	1					
ANR	1571378	ElseStatement	else		1571346	0					
ANR	1571379	CompoundStatement		11:6:122:122	1571346	0					
ANR	1571380	ExpressionStatement	imm = ( imm << 24 ) | ( imm >> 8 )	1152:2:37292:37322	1571346	0	True				
ANR	1571381	AssignmentExpression	imm = ( imm << 24 ) | ( imm >> 8 )		1571346	0		=			
ANR	1571382	Identifier	imm		1571346	0					
ANR	1571383	InclusiveOrExpression	( imm << 24 ) | ( imm >> 8 )		1571346	1		|			
ANR	1571384	ShiftExpression	imm << 24		1571346	0		<<			
ANR	1571385	Identifier	imm		1571346	0					
ANR	1571386	PrimaryExpression	24		1571346	1					
ANR	1571387	ShiftExpression	imm >> 8		1571346	1		>>			
ANR	1571388	Identifier	imm		1571346	0					
ANR	1571389	PrimaryExpression	8		1571346	1					
ANR	1571390	ExpressionStatement	rol = 0	1153:2:37326:37333	1571346	1	True				
ANR	1571391	AssignmentExpression	rol = 0		1571346	0		=			
ANR	1571392	Identifier	rol		1571346	0					
ANR	1571393	PrimaryExpression	0		1571346	1					
ANR	1571394	IfStatement	if ( ! ( imm & 0xff000000 ) )		1571346	3					
ANR	1571395	Condition	! ( imm & 0xff000000 )	1156:5:37344:37362	1571346	0	True				
ANR	1571396	UnaryOperationExpression	! ( imm & 0xff000000 )		1571346	0					
ANR	1571397	UnaryOperator	!		1571346	0					
ANR	1571398	BitAndExpression	imm & 0xff000000		1571346	1		&			
ANR	1571399	Identifier	imm		1571346	0					
ANR	1571400	PrimaryExpression	0xff000000		1571346	1					
ANR	1571401	CompoundStatement		16:26:199:199	1571346	1					
ANR	1571402	ExpressionStatement	imm <<= 8	1157:2:37369:37378	1571346	0	True				
ANR	1571403	AssignmentExpression	imm <<= 8		1571346	0		<<=			
ANR	1571404	Identifier	imm		1571346	0					
ANR	1571405	PrimaryExpression	8		1571346	1					
ANR	1571406	ExpressionStatement	rol += 4	1158:2:37382:37390	1571346	1	True				
ANR	1571407	AssignmentExpression	rol += 4		1571346	0		+=			
ANR	1571408	Identifier	rol		1571346	0					
ANR	1571409	PrimaryExpression	4		1571346	1					
ANR	1571410	IfStatement	if ( ! ( imm & 0xf0000000 ) )		1571346	4					
ANR	1571411	Condition	! ( imm & 0xf0000000 )	1161:5:37401:37419	1571346	0	True				
ANR	1571412	UnaryOperationExpression	! ( imm & 0xf0000000 )		1571346	0					
ANR	1571413	UnaryOperator	!		1571346	0					
ANR	1571414	BitAndExpression	imm & 0xf0000000		1571346	1		&			
ANR	1571415	Identifier	imm		1571346	0					
ANR	1571416	PrimaryExpression	0xf0000000		1571346	1					
ANR	1571417	CompoundStatement		21:26:256:256	1571346	1					
ANR	1571418	ExpressionStatement	imm <<= 4	1162:2:37426:37435	1571346	0	True				
ANR	1571419	AssignmentExpression	imm <<= 4		1571346	0		<<=			
ANR	1571420	Identifier	imm		1571346	0					
ANR	1571421	PrimaryExpression	4		1571346	1					
ANR	1571422	ExpressionStatement	rol += 2	1163:2:37439:37447	1571346	1	True				
ANR	1571423	AssignmentExpression	rol += 2		1571346	0		+=			
ANR	1571424	Identifier	rol		1571346	0					
ANR	1571425	PrimaryExpression	2		1571346	1					
ANR	1571426	IfStatement	if ( ! ( imm & 0xc0000000 ) )		1571346	5					
ANR	1571427	Condition	! ( imm & 0xc0000000 )	1166:5:37458:37476	1571346	0	True				
ANR	1571428	UnaryOperationExpression	! ( imm & 0xc0000000 )		1571346	0					
ANR	1571429	UnaryOperator	!		1571346	0					
ANR	1571430	BitAndExpression	imm & 0xc0000000		1571346	1		&			
ANR	1571431	Identifier	imm		1571346	0					
ANR	1571432	PrimaryExpression	0xc0000000		1571346	1					
ANR	1571433	CompoundStatement		26:26:313:313	1571346	1					
ANR	1571434	ExpressionStatement	imm <<= 2	1167:2:37483:37492	1571346	0	True				
ANR	1571435	AssignmentExpression	imm <<= 2		1571346	0		<<=			
ANR	1571436	Identifier	imm		1571346	0					
ANR	1571437	PrimaryExpression	2		1571346	1					
ANR	1571438	ExpressionStatement	rol += 1	1168:2:37496:37504	1571346	1	True				
ANR	1571439	AssignmentExpression	rol += 1		1571346	0		+=			
ANR	1571440	Identifier	rol		1571346	0					
ANR	1571441	PrimaryExpression	1		1571346	1					
ANR	1571442	IfStatement	if ( ! ( imm & 0x00ffffff ) )		1571346	6					
ANR	1571443	Condition	! ( imm & 0x00ffffff )	1171:5:37515:37533	1571346	0	True				
ANR	1571444	UnaryOperationExpression	! ( imm & 0x00ffffff )		1571346	0					
ANR	1571445	UnaryOperator	!		1571346	0					
ANR	1571446	BitAndExpression	imm & 0x00ffffff		1571346	1		&			
ANR	1571447	Identifier	imm		1571346	0					
ANR	1571448	PrimaryExpression	0x00ffffff		1571346	1					
ANR	1571449	ReturnStatement	return SRC2_IMM | ( imm >> 24 ) | ( rol << 8 ) ;	1172:2:37538:37580	1571346	1	True				
ANR	1571450	InclusiveOrExpression	SRC2_IMM | ( imm >> 24 ) | ( rol << 8 )		1571346	0		|			
ANR	1571451	Identifier	SRC2_IMM		1571346	0					
ANR	1571452	InclusiveOrExpression	( imm >> 24 ) | ( rol << 8 )		1571346	1		|			
ANR	1571453	ShiftExpression	imm >> 24		1571346	0		>>			
ANR	1571454	Identifier	imm		1571346	0					
ANR	1571455	PrimaryExpression	24		1571346	1					
ANR	1571456	ShiftExpression	rol << 8		1571346	1		<<			
ANR	1571457	Identifier	rol		1571346	0					
ANR	1571458	PrimaryExpression	8		1571346	1					
ANR	1571459	ElseStatement	else		1571346	0					
ANR	1571460	ReturnStatement	return 0 ;	1174:2:37590:37598	1571346	0	True				
ANR	1571461	PrimaryExpression	0		1571346	0					
ANR	1571462	ReturnType	static sljit_uw		1571346	1					
ANR	1571463	Identifier	get_imm		1571346	2					
ANR	1571464	ParameterList	sljit_uw imm		1571346	3					
ANR	1571465	Parameter	sljit_uw imm	1140:24:37151:37162	1571346	0	True				
ANR	1571466	ParameterType	sljit_uw		1571346	0					
ANR	1571467	Identifier	imm		1571346	1					
ANR	1571468	CFGEntryNode	ENTRY		1571346		True				
ANR	1571469	CFGExitNode	EXIT		1571346		True				
ANR	1571470	Symbol	imm		1571346						
ANR	1571471	Symbol	SRC2_IMM		1571346						
ANR	1571472	Symbol	rol		1571346						
ANR	1571473	Function	generate_int	1178:0:37660:39812							
ANR	1571474	FunctionDef	"generate_int (struct sljit_compiler * compiler , sljit_si reg , sljit_uw imm , sljit_si positive)"		1571473	0					
ANR	1571475	CompoundStatement		1179:0:37769:39812	1571473	0					
ANR	1571476	IdentifierDeclStatement	sljit_uw mask ;	1180:1:37772:37785	1571473	0	True				
ANR	1571477	IdentifierDecl	mask		1571473	0					
ANR	1571478	IdentifierDeclType	sljit_uw		1571473	0					
ANR	1571479	Identifier	mask		1571473	1					
ANR	1571480	IdentifierDeclStatement	sljit_uw imm1 ;	1181:1:37788:37801	1571473	1	True				
ANR	1571481	IdentifierDecl	imm1		1571473	0					
ANR	1571482	IdentifierDeclType	sljit_uw		1571473	0					
ANR	1571483	Identifier	imm1		1571473	1					
ANR	1571484	IdentifierDeclStatement	sljit_uw imm2 ;	1182:1:37804:37817	1571473	2	True				
ANR	1571485	IdentifierDecl	imm2		1571473	0					
ANR	1571486	IdentifierDeclType	sljit_uw		1571473	0					
ANR	1571487	Identifier	imm2		1571473	1					
ANR	1571488	IdentifierDeclStatement	sljit_si rol ;	1183:1:37820:37832	1571473	3	True				
ANR	1571489	IdentifierDecl	rol		1571473	0					
ANR	1571490	IdentifierDeclType	sljit_si		1571473	0					
ANR	1571491	Identifier	rol		1571473	1					
ANR	1571492	ExpressionStatement	mask = 0xff000000	1186:1:37893:37910	1571473	4	True				
ANR	1571493	AssignmentExpression	mask = 0xff000000		1571473	0		=			
ANR	1571494	Identifier	mask		1571473	0					
ANR	1571495	PrimaryExpression	0xff000000		1571473	1					
ANR	1571496	ExpressionStatement	rol = 8	1187:1:37913:37920	1571473	5	True				
ANR	1571497	AssignmentExpression	rol = 8		1571473	0		=			
ANR	1571498	Identifier	rol		1571473	0					
ANR	1571499	PrimaryExpression	8		1571473	1					
ANR	1571500	WhileStatement	while ( 1 )		1571473	6					
ANR	1571501	Condition	1	1188:7:37929:37929	1571473	0	True				
ANR	1571502	PrimaryExpression	1		1571473	0					
ANR	1571503	CompoundStatement		10:10:162:162	1571473	1					
ANR	1571504	IfStatement	if ( ! ( imm & mask ) )		1571473	0					
ANR	1571505	Condition	! ( imm & mask )	1189:6:37940:37952	1571473	0	True				
ANR	1571506	UnaryOperationExpression	! ( imm & mask )		1571473	0					
ANR	1571507	UnaryOperator	!		1571473	0					
ANR	1571508	BitAndExpression	imm & mask		1571473	1		&			
ANR	1571509	Identifier	imm		1571473	0					
ANR	1571510	Identifier	mask		1571473	1					
ANR	1571511	CompoundStatement		11:21:185:185	1571473	1					
ANR	1571512	ExpressionStatement	imm = ( imm << rol ) | ( imm >> ( 32 - rol ) )	1191:3:37985:38025	1571473	0	True				
ANR	1571513	AssignmentExpression	imm = ( imm << rol ) | ( imm >> ( 32 - rol ) )		1571473	0		=			
ANR	1571514	Identifier	imm		1571473	0					
ANR	1571515	InclusiveOrExpression	( imm << rol ) | ( imm >> ( 32 - rol ) )		1571473	1		|			
ANR	1571516	ShiftExpression	imm << rol		1571473	0		<<			
ANR	1571517	Identifier	imm		1571473	0					
ANR	1571518	Identifier	rol		1571473	1					
ANR	1571519	ShiftExpression	imm >> ( 32 - rol )		1571473	1		>>			
ANR	1571520	Identifier	imm		1571473	0					
ANR	1571521	AdditiveExpression	32 - rol		1571473	1		-			
ANR	1571522	PrimaryExpression	32		1571473	0					
ANR	1571523	Identifier	rol		1571473	1					
ANR	1571524	ExpressionStatement	rol = 4 + ( rol >> 1 )	1193:3:38058:38078	1571473	1	True				
ANR	1571525	AssignmentExpression	rol = 4 + ( rol >> 1 )		1571473	0		=			
ANR	1571526	Identifier	rol		1571473	0					
ANR	1571527	AdditiveExpression	4 + ( rol >> 1 )		1571473	1		+			
ANR	1571528	PrimaryExpression	4		1571473	0					
ANR	1571529	ShiftExpression	rol >> 1		1571473	1		>>			
ANR	1571530	Identifier	rol		1571473	0					
ANR	1571531	PrimaryExpression	1		1571473	1					
ANR	1571532	BreakStatement	break ;	1194:3:38083:38088	1571473	2	True				
ANR	1571533	ExpressionStatement	rol += 2	1196:2:38096:38104	1571473	1	True				
ANR	1571534	AssignmentExpression	rol += 2		1571473	0		+=			
ANR	1571535	Identifier	rol		1571473	0					
ANR	1571536	PrimaryExpression	2		1571473	1					
ANR	1571537	ExpressionStatement	mask >>= 2	1197:2:38108:38118	1571473	2	True				
ANR	1571538	AssignmentExpression	mask >>= 2		1571473	0		>>=			
ANR	1571539	Identifier	mask		1571473	0					
ANR	1571540	PrimaryExpression	2		1571473	1					
ANR	1571541	IfStatement	if ( mask & 0x3 )		1571473	3					
ANR	1571542	Condition	mask & 0x3	1198:6:38126:38135	1571473	0	True				
ANR	1571543	BitAndExpression	mask & 0x3		1571473	0		&			
ANR	1571544	Identifier	mask		1571473	0					
ANR	1571545	PrimaryExpression	0x3		1571473	1					
ANR	1571546	CompoundStatement		20:18:368:368	1571473	1					
ANR	1571547	ExpressionStatement	imm = ( imm << 8 ) | ( imm >> 24 )	1200:3:38162:38192	1571473	0	True				
ANR	1571548	AssignmentExpression	imm = ( imm << 8 ) | ( imm >> 24 )		1571473	0		=			
ANR	1571549	Identifier	imm		1571473	0					
ANR	1571550	InclusiveOrExpression	( imm << 8 ) | ( imm >> 24 )		1571473	1		|			
ANR	1571551	ShiftExpression	imm << 8		1571473	0		<<			
ANR	1571552	Identifier	imm		1571473	0					
ANR	1571553	PrimaryExpression	8		1571473	1					
ANR	1571554	ShiftExpression	imm >> 24		1571473	1		>>			
ANR	1571555	Identifier	imm		1571473	0					
ANR	1571556	PrimaryExpression	24		1571473	1					
ANR	1571557	ExpressionStatement	mask = 0xff00	1201:3:38197:38210	1571473	1	True				
ANR	1571558	AssignmentExpression	mask = 0xff00		1571473	0		=			
ANR	1571559	Identifier	mask		1571473	0					
ANR	1571560	PrimaryExpression	0xff00		1571473	1					
ANR	1571561	ExpressionStatement	rol = 24	1202:3:38215:38223	1571473	2	True				
ANR	1571562	AssignmentExpression	rol = 24		1571473	0		=			
ANR	1571563	Identifier	rol		1571473	0					
ANR	1571564	PrimaryExpression	24		1571473	1					
ANR	1571565	WhileStatement	while ( 1 )		1571473	3					
ANR	1571566	Condition	1	1203:10:38235:38235	1571473	0	True				
ANR	1571567	PrimaryExpression	1		1571473	0					
ANR	1571568	CompoundStatement		25:13:468:468	1571473	1					
ANR	1571569	IfStatement	if ( ! ( imm & mask ) )		1571473	0					
ANR	1571570	Condition	! ( imm & mask )	1204:8:38248:38260	1571473	0	True				
ANR	1571571	UnaryOperationExpression	! ( imm & mask )		1571473	0					
ANR	1571572	UnaryOperator	!		1571473	0					
ANR	1571573	BitAndExpression	imm & mask		1571473	1		&			
ANR	1571574	Identifier	imm		1571473	0					
ANR	1571575	Identifier	mask		1571473	1					
ANR	1571576	CompoundStatement		26:23:493:493	1571473	1					
ANR	1571577	ExpressionStatement	imm = ( imm << rol ) | ( imm >> ( 32 - rol ) )	1206:5:38297:38337	1571473	0	True				
ANR	1571578	AssignmentExpression	imm = ( imm << rol ) | ( imm >> ( 32 - rol ) )		1571473	0		=			
ANR	1571579	Identifier	imm		1571473	0					
ANR	1571580	InclusiveOrExpression	( imm << rol ) | ( imm >> ( 32 - rol ) )		1571473	1		|			
ANR	1571581	ShiftExpression	imm << rol		1571473	0		<<			
ANR	1571582	Identifier	imm		1571473	0					
ANR	1571583	Identifier	rol		1571473	1					
ANR	1571584	ShiftExpression	imm >> ( 32 - rol )		1571473	1		>>			
ANR	1571585	Identifier	imm		1571473	0					
ANR	1571586	AdditiveExpression	32 - rol		1571473	1		-			
ANR	1571587	PrimaryExpression	32		1571473	0					
ANR	1571588	Identifier	rol		1571473	1					
ANR	1571589	ExpressionStatement	rol = ( rol >> 1 ) - 8	1208:5:38374:38394	1571473	1	True				
ANR	1571590	AssignmentExpression	rol = ( rol >> 1 ) - 8		1571473	0		=			
ANR	1571591	Identifier	rol		1571473	0					
ANR	1571592	AdditiveExpression	( rol >> 1 ) - 8		1571473	1		-			
ANR	1571593	ShiftExpression	rol >> 1		1571473	0		>>			
ANR	1571594	Identifier	rol		1571473	0					
ANR	1571595	PrimaryExpression	1		1571473	1					
ANR	1571596	PrimaryExpression	8		1571473	1					
ANR	1571597	BreakStatement	break ;	1209:5:38401:38406	1571473	2	True				
ANR	1571598	ExpressionStatement	rol += 2	1211:4:38418:38426	1571473	1	True				
ANR	1571599	AssignmentExpression	rol += 2		1571473	0		+=			
ANR	1571600	Identifier	rol		1571473	0					
ANR	1571601	PrimaryExpression	2		1571473	1					
ANR	1571602	ExpressionStatement	mask >>= 2	1212:4:38432:38442	1571473	2	True				
ANR	1571603	AssignmentExpression	mask >>= 2		1571473	0		>>=			
ANR	1571604	Identifier	mask		1571473	0					
ANR	1571605	PrimaryExpression	2		1571473	1					
ANR	1571606	IfStatement	if ( mask & 0x3 )		1571473	3					
ANR	1571607	Condition	mask & 0x3	1213:8:38452:38461	1571473	0	True				
ANR	1571608	BitAndExpression	mask & 0x3		1571473	0		&			
ANR	1571609	Identifier	mask		1571473	0					
ANR	1571610	PrimaryExpression	0x3		1571473	1					
ANR	1571611	ReturnStatement	return 0 ;	1214:5:38469:38477	1571473	1	True				
ANR	1571612	PrimaryExpression	0		1571473	0					
ANR	1571613	BreakStatement	break ;	1216:3:38487:38492	1571473	4	True				
ANR	1571614	ExpressionStatement	SLJIT_ASSERT ( ! ( imm & 0xff ) )	1221:1:38538:38565	1571473	7	True				
ANR	1571615	CallExpression	SLJIT_ASSERT ( ! ( imm & 0xff ) )		1571473	0					
ANR	1571616	Callee	SLJIT_ASSERT		1571473	0					
ANR	1571617	Identifier	SLJIT_ASSERT		1571473	0					
ANR	1571618	ArgumentList	! ( imm & 0xff )		1571473	1					
ANR	1571619	Argument	! ( imm & 0xff )		1571473	0					
ANR	1571620	UnaryOperationExpression	! ( imm & 0xff )		1571473	0					
ANR	1571621	UnaryOperator	!		1571473	0					
ANR	1571622	BitAndExpression	imm & 0xff		1571473	1		&			
ANR	1571623	Identifier	imm		1571473	0					
ANR	1571624	PrimaryExpression	0xff		1571473	1					
ANR	1571625	IfStatement	if ( ! ( imm & 0xff000000 ) )		1571473	8					
ANR	1571626	Condition	! ( imm & 0xff000000 )	1223:5:38573:38591	1571473	0	True				
ANR	1571627	UnaryOperationExpression	! ( imm & 0xff000000 )		1571473	0					
ANR	1571628	UnaryOperator	!		1571473	0					
ANR	1571629	BitAndExpression	imm & 0xff000000		1571473	1		&			
ANR	1571630	Identifier	imm		1571473	0					
ANR	1571631	PrimaryExpression	0xff000000		1571473	1					
ANR	1571632	CompoundStatement		45:26:824:824	1571473	1					
ANR	1571633	ExpressionStatement	imm1 = SRC2_IMM | ( ( imm >> 16 ) & 0xff ) | ( ( ( rol + 4 ) & 0xf ) << 8 )	1224:2:38598:38663	1571473	0	True				
ANR	1571634	AssignmentExpression	imm1 = SRC2_IMM | ( ( imm >> 16 ) & 0xff ) | ( ( ( rol + 4 ) & 0xf ) << 8 )		1571473	0		=			
ANR	1571635	Identifier	imm1		1571473	0					
ANR	1571636	InclusiveOrExpression	SRC2_IMM | ( ( imm >> 16 ) & 0xff ) | ( ( ( rol + 4 ) & 0xf ) << 8 )		1571473	1		|			
ANR	1571637	Identifier	SRC2_IMM		1571473	0					
ANR	1571638	InclusiveOrExpression	( ( imm >> 16 ) & 0xff ) | ( ( ( rol + 4 ) & 0xf ) << 8 )		1571473	1		|			
ANR	1571639	BitAndExpression	( imm >> 16 ) & 0xff		1571473	0		&			
ANR	1571640	ShiftExpression	imm >> 16		1571473	0		>>			
ANR	1571641	Identifier	imm		1571473	0					
ANR	1571642	PrimaryExpression	16		1571473	1					
ANR	1571643	PrimaryExpression	0xff		1571473	1					
ANR	1571644	ShiftExpression	( ( rol + 4 ) & 0xf ) << 8		1571473	1		<<			
ANR	1571645	BitAndExpression	( rol + 4 ) & 0xf		1571473	0		&			
ANR	1571646	AdditiveExpression	rol + 4		1571473	0		+			
ANR	1571647	Identifier	rol		1571473	0					
ANR	1571648	PrimaryExpression	4		1571473	1					
ANR	1571649	PrimaryExpression	0xf		1571473	1					
ANR	1571650	PrimaryExpression	8		1571473	1					
ANR	1571651	ExpressionStatement	imm2 = SRC2_IMM | ( ( imm >> 8 ) & 0xff ) | ( ( ( rol + 8 ) & 0xf ) << 8 )	1225:2:38667:38731	1571473	1	True				
ANR	1571652	AssignmentExpression	imm2 = SRC2_IMM | ( ( imm >> 8 ) & 0xff ) | ( ( ( rol + 8 ) & 0xf ) << 8 )		1571473	0		=			
ANR	1571653	Identifier	imm2		1571473	0					
ANR	1571654	InclusiveOrExpression	SRC2_IMM | ( ( imm >> 8 ) & 0xff ) | ( ( ( rol + 8 ) & 0xf ) << 8 )		1571473	1		|			
ANR	1571655	Identifier	SRC2_IMM		1571473	0					
ANR	1571656	InclusiveOrExpression	( ( imm >> 8 ) & 0xff ) | ( ( ( rol + 8 ) & 0xf ) << 8 )		1571473	1		|			
ANR	1571657	BitAndExpression	( imm >> 8 ) & 0xff		1571473	0		&			
ANR	1571658	ShiftExpression	imm >> 8		1571473	0		>>			
ANR	1571659	Identifier	imm		1571473	0					
ANR	1571660	PrimaryExpression	8		1571473	1					
ANR	1571661	PrimaryExpression	0xff		1571473	1					
ANR	1571662	ShiftExpression	( ( rol + 8 ) & 0xf ) << 8		1571473	1		<<			
ANR	1571663	BitAndExpression	( rol + 8 ) & 0xf		1571473	0		&			
ANR	1571664	AdditiveExpression	rol + 8		1571473	0		+			
ANR	1571665	Identifier	rol		1571473	0					
ANR	1571666	PrimaryExpression	8		1571473	1					
ANR	1571667	PrimaryExpression	0xf		1571473	1					
ANR	1571668	PrimaryExpression	8		1571473	1					
ANR	1571669	ElseStatement	else		1571473	0					
ANR	1571670	IfStatement	if ( imm & 0xc0000000 )		1571473	0					
ANR	1571671	Condition	imm & 0xc0000000	1227:10:38746:38761	1571473	0	True				
ANR	1571672	BitAndExpression	imm & 0xc0000000		1571473	0		&			
ANR	1571673	Identifier	imm		1571473	0					
ANR	1571674	PrimaryExpression	0xc0000000		1571473	1					
ANR	1571675	CompoundStatement		49:28:994:994	1571473	1					
ANR	1571676	ExpressionStatement	imm1 = SRC2_IMM | ( ( imm >> 24 ) & 0xff ) | ( ( rol & 0xf ) << 8 )	1228:2:38768:38827	1571473	0	True				
ANR	1571677	AssignmentExpression	imm1 = SRC2_IMM | ( ( imm >> 24 ) & 0xff ) | ( ( rol & 0xf ) << 8 )		1571473	0		=			
ANR	1571678	Identifier	imm1		1571473	0					
ANR	1571679	InclusiveOrExpression	SRC2_IMM | ( ( imm >> 24 ) & 0xff ) | ( ( rol & 0xf ) << 8 )		1571473	1		|			
ANR	1571680	Identifier	SRC2_IMM		1571473	0					
ANR	1571681	InclusiveOrExpression	( ( imm >> 24 ) & 0xff ) | ( ( rol & 0xf ) << 8 )		1571473	1		|			
ANR	1571682	BitAndExpression	( imm >> 24 ) & 0xff		1571473	0		&			
ANR	1571683	ShiftExpression	imm >> 24		1571473	0		>>			
ANR	1571684	Identifier	imm		1571473	0					
ANR	1571685	PrimaryExpression	24		1571473	1					
ANR	1571686	PrimaryExpression	0xff		1571473	1					
ANR	1571687	ShiftExpression	( rol & 0xf ) << 8		1571473	1		<<			
ANR	1571688	BitAndExpression	rol & 0xf		1571473	0		&			
ANR	1571689	Identifier	rol		1571473	0					
ANR	1571690	PrimaryExpression	0xf		1571473	1					
ANR	1571691	PrimaryExpression	8		1571473	1					
ANR	1571692	ExpressionStatement	imm <<= 8	1229:2:38831:38840	1571473	1	True				
ANR	1571693	AssignmentExpression	imm <<= 8		1571473	0		<<=			
ANR	1571694	Identifier	imm		1571473	0					
ANR	1571695	PrimaryExpression	8		1571473	1					
ANR	1571696	ExpressionStatement	rol += 4	1230:2:38844:38852	1571473	2	True				
ANR	1571697	AssignmentExpression	rol += 4		1571473	0		+=			
ANR	1571698	Identifier	rol		1571473	0					
ANR	1571699	PrimaryExpression	4		1571473	1					
ANR	1571700	IfStatement	if ( ! ( imm & 0xff000000 ) )		1571473	3					
ANR	1571701	Condition	! ( imm & 0xff000000 )	1232:6:38861:38879	1571473	0	True				
ANR	1571702	UnaryOperationExpression	! ( imm & 0xff000000 )		1571473	0					
ANR	1571703	UnaryOperator	!		1571473	0					
ANR	1571704	BitAndExpression	imm & 0xff000000		1571473	1		&			
ANR	1571705	Identifier	imm		1571473	0					
ANR	1571706	PrimaryExpression	0xff000000		1571473	1					
ANR	1571707	CompoundStatement		54:27:1112:1112	1571473	1					
ANR	1571708	ExpressionStatement	imm <<= 8	1233:3:38887:38896	1571473	0	True				
ANR	1571709	AssignmentExpression	imm <<= 8		1571473	0		<<=			
ANR	1571710	Identifier	imm		1571473	0					
ANR	1571711	PrimaryExpression	8		1571473	1					
ANR	1571712	ExpressionStatement	rol += 4	1234:3:38901:38909	1571473	1	True				
ANR	1571713	AssignmentExpression	rol += 4		1571473	0		+=			
ANR	1571714	Identifier	rol		1571473	0					
ANR	1571715	PrimaryExpression	4		1571473	1					
ANR	1571716	IfStatement	if ( ! ( imm & 0xf0000000 ) )		1571473	4					
ANR	1571717	Condition	! ( imm & 0xf0000000 )	1237:6:38922:38940	1571473	0	True				
ANR	1571718	UnaryOperationExpression	! ( imm & 0xf0000000 )		1571473	0					
ANR	1571719	UnaryOperator	!		1571473	0					
ANR	1571720	BitAndExpression	imm & 0xf0000000		1571473	1		&			
ANR	1571721	Identifier	imm		1571473	0					
ANR	1571722	PrimaryExpression	0xf0000000		1571473	1					
ANR	1571723	CompoundStatement		59:27:1173:1173	1571473	1					
ANR	1571724	ExpressionStatement	imm <<= 4	1238:3:38948:38957	1571473	0	True				
ANR	1571725	AssignmentExpression	imm <<= 4		1571473	0		<<=			
ANR	1571726	Identifier	imm		1571473	0					
ANR	1571727	PrimaryExpression	4		1571473	1					
ANR	1571728	ExpressionStatement	rol += 2	1239:3:38962:38970	1571473	1	True				
ANR	1571729	AssignmentExpression	rol += 2		1571473	0		+=			
ANR	1571730	Identifier	rol		1571473	0					
ANR	1571731	PrimaryExpression	2		1571473	1					
ANR	1571732	IfStatement	if ( ! ( imm & 0xc0000000 ) )		1571473	5					
ANR	1571733	Condition	! ( imm & 0xc0000000 )	1242:6:38983:39001	1571473	0	True				
ANR	1571734	UnaryOperationExpression	! ( imm & 0xc0000000 )		1571473	0					
ANR	1571735	UnaryOperator	!		1571473	0					
ANR	1571736	BitAndExpression	imm & 0xc0000000		1571473	1		&			
ANR	1571737	Identifier	imm		1571473	0					
ANR	1571738	PrimaryExpression	0xc0000000		1571473	1					
ANR	1571739	CompoundStatement		64:27:1234:1234	1571473	1					
ANR	1571740	ExpressionStatement	imm <<= 2	1243:3:39009:39018	1571473	0	True				
ANR	1571741	AssignmentExpression	imm <<= 2		1571473	0		<<=			
ANR	1571742	Identifier	imm		1571473	0					
ANR	1571743	PrimaryExpression	2		1571473	1					
ANR	1571744	ExpressionStatement	rol += 1	1244:3:39023:39031	1571473	1	True				
ANR	1571745	AssignmentExpression	rol += 1		1571473	0		+=			
ANR	1571746	Identifier	rol		1571473	0					
ANR	1571747	PrimaryExpression	1		1571473	1					
ANR	1571748	IfStatement	if ( ! ( imm & 0x00ffffff ) )		1571473	6					
ANR	1571749	Condition	! ( imm & 0x00ffffff )	1247:6:39044:39062	1571473	0	True				
ANR	1571750	UnaryOperationExpression	! ( imm & 0x00ffffff )		1571473	0					
ANR	1571751	UnaryOperator	!		1571473	0					
ANR	1571752	BitAndExpression	imm & 0x00ffffff		1571473	1		&			
ANR	1571753	Identifier	imm		1571473	0					
ANR	1571754	PrimaryExpression	0x00ffffff		1571473	1					
ANR	1571755	ExpressionStatement	imm2 = SRC2_IMM | ( imm >> 24 ) | ( ( rol & 0xf ) << 8 )	1248:3:39068:39118	1571473	1	True				
ANR	1571756	AssignmentExpression	imm2 = SRC2_IMM | ( imm >> 24 ) | ( ( rol & 0xf ) << 8 )		1571473	0		=			
ANR	1571757	Identifier	imm2		1571473	0					
ANR	1571758	InclusiveOrExpression	SRC2_IMM | ( imm >> 24 ) | ( ( rol & 0xf ) << 8 )		1571473	1		|			
ANR	1571759	Identifier	SRC2_IMM		1571473	0					
ANR	1571760	InclusiveOrExpression	( imm >> 24 ) | ( ( rol & 0xf ) << 8 )		1571473	1		|			
ANR	1571761	ShiftExpression	imm >> 24		1571473	0		>>			
ANR	1571762	Identifier	imm		1571473	0					
ANR	1571763	PrimaryExpression	24		1571473	1					
ANR	1571764	ShiftExpression	( rol & 0xf ) << 8		1571473	1		<<			
ANR	1571765	BitAndExpression	rol & 0xf		1571473	0		&			
ANR	1571766	Identifier	rol		1571473	0					
ANR	1571767	PrimaryExpression	0xf		1571473	1					
ANR	1571768	PrimaryExpression	8		1571473	1					
ANR	1571769	ElseStatement	else		1571473	0					
ANR	1571770	ReturnStatement	return 0 ;	1250:3:39130:39138	1571473	0	True				
ANR	1571771	PrimaryExpression	0		1571473	0					
ANR	1571772	ElseStatement	else		1571473	0					
ANR	1571773	CompoundStatement		74:6:1379:1379	1571473	0					
ANR	1571774	IfStatement	if ( ! ( imm & 0xf0000000 ) )		1571473	0					
ANR	1571775	Condition	! ( imm & 0xf0000000 )	1253:6:39157:39175	1571473	0	True				
ANR	1571776	UnaryOperationExpression	! ( imm & 0xf0000000 )		1571473	0					
ANR	1571777	UnaryOperator	!		1571473	0					
ANR	1571778	BitAndExpression	imm & 0xf0000000		1571473	1		&			
ANR	1571779	Identifier	imm		1571473	0					
ANR	1571780	PrimaryExpression	0xf0000000		1571473	1					
ANR	1571781	CompoundStatement		75:27:1408:1408	1571473	1					
ANR	1571782	ExpressionStatement	imm <<= 4	1254:3:39183:39192	1571473	0	True				
ANR	1571783	AssignmentExpression	imm <<= 4		1571473	0		<<=			
ANR	1571784	Identifier	imm		1571473	0					
ANR	1571785	PrimaryExpression	4		1571473	1					
ANR	1571786	ExpressionStatement	rol += 2	1255:3:39197:39205	1571473	1	True				
ANR	1571787	AssignmentExpression	rol += 2		1571473	0		+=			
ANR	1571788	Identifier	rol		1571473	0					
ANR	1571789	PrimaryExpression	2		1571473	1					
ANR	1571790	IfStatement	if ( ! ( imm & 0xc0000000 ) )		1571473	1					
ANR	1571791	Condition	! ( imm & 0xc0000000 )	1258:6:39218:39236	1571473	0	True				
ANR	1571792	UnaryOperationExpression	! ( imm & 0xc0000000 )		1571473	0					
ANR	1571793	UnaryOperator	!		1571473	0					
ANR	1571794	BitAndExpression	imm & 0xc0000000		1571473	1		&			
ANR	1571795	Identifier	imm		1571473	0					
ANR	1571796	PrimaryExpression	0xc0000000		1571473	1					
ANR	1571797	CompoundStatement		80:27:1469:1469	1571473	1					
ANR	1571798	ExpressionStatement	imm <<= 2	1259:3:39244:39253	1571473	0	True				
ANR	1571799	AssignmentExpression	imm <<= 2		1571473	0		<<=			
ANR	1571800	Identifier	imm		1571473	0					
ANR	1571801	PrimaryExpression	2		1571473	1					
ANR	1571802	ExpressionStatement	rol += 1	1260:3:39258:39266	1571473	1	True				
ANR	1571803	AssignmentExpression	rol += 1		1571473	0		+=			
ANR	1571804	Identifier	rol		1571473	0					
ANR	1571805	PrimaryExpression	1		1571473	1					
ANR	1571806	ExpressionStatement	imm1 = SRC2_IMM | ( ( imm >> 24 ) & 0xff ) | ( ( rol & 0xf ) << 8 )	1263:2:39275:39334	1571473	2	True				
ANR	1571807	AssignmentExpression	imm1 = SRC2_IMM | ( ( imm >> 24 ) & 0xff ) | ( ( rol & 0xf ) << 8 )		1571473	0		=			
ANR	1571808	Identifier	imm1		1571473	0					
ANR	1571809	InclusiveOrExpression	SRC2_IMM | ( ( imm >> 24 ) & 0xff ) | ( ( rol & 0xf ) << 8 )		1571473	1		|			
ANR	1571810	Identifier	SRC2_IMM		1571473	0					
ANR	1571811	InclusiveOrExpression	( ( imm >> 24 ) & 0xff ) | ( ( rol & 0xf ) << 8 )		1571473	1		|			
ANR	1571812	BitAndExpression	( imm >> 24 ) & 0xff		1571473	0		&			
ANR	1571813	ShiftExpression	imm >> 24		1571473	0		>>			
ANR	1571814	Identifier	imm		1571473	0					
ANR	1571815	PrimaryExpression	24		1571473	1					
ANR	1571816	PrimaryExpression	0xff		1571473	1					
ANR	1571817	ShiftExpression	( rol & 0xf ) << 8		1571473	1		<<			
ANR	1571818	BitAndExpression	rol & 0xf		1571473	0		&			
ANR	1571819	Identifier	rol		1571473	0					
ANR	1571820	PrimaryExpression	0xf		1571473	1					
ANR	1571821	PrimaryExpression	8		1571473	1					
ANR	1571822	ExpressionStatement	imm <<= 8	1264:2:39338:39347	1571473	3	True				
ANR	1571823	AssignmentExpression	imm <<= 8		1571473	0		<<=			
ANR	1571824	Identifier	imm		1571473	0					
ANR	1571825	PrimaryExpression	8		1571473	1					
ANR	1571826	ExpressionStatement	rol += 4	1265:2:39351:39359	1571473	4	True				
ANR	1571827	AssignmentExpression	rol += 4		1571473	0		+=			
ANR	1571828	Identifier	rol		1571473	0					
ANR	1571829	PrimaryExpression	4		1571473	1					
ANR	1571830	IfStatement	if ( ! ( imm & 0xf0000000 ) )		1571473	5					
ANR	1571831	Condition	! ( imm & 0xf0000000 )	1267:6:39368:39386	1571473	0	True				
ANR	1571832	UnaryOperationExpression	! ( imm & 0xf0000000 )		1571473	0					
ANR	1571833	UnaryOperator	!		1571473	0					
ANR	1571834	BitAndExpression	imm & 0xf0000000		1571473	1		&			
ANR	1571835	Identifier	imm		1571473	0					
ANR	1571836	PrimaryExpression	0xf0000000		1571473	1					
ANR	1571837	CompoundStatement		89:27:1619:1619	1571473	1					
ANR	1571838	ExpressionStatement	imm <<= 4	1268:3:39394:39403	1571473	0	True				
ANR	1571839	AssignmentExpression	imm <<= 4		1571473	0		<<=			
ANR	1571840	Identifier	imm		1571473	0					
ANR	1571841	PrimaryExpression	4		1571473	1					
ANR	1571842	ExpressionStatement	rol += 2	1269:3:39408:39416	1571473	1	True				
ANR	1571843	AssignmentExpression	rol += 2		1571473	0		+=			
ANR	1571844	Identifier	rol		1571473	0					
ANR	1571845	PrimaryExpression	2		1571473	1					
ANR	1571846	IfStatement	if ( ! ( imm & 0xc0000000 ) )		1571473	6					
ANR	1571847	Condition	! ( imm & 0xc0000000 )	1272:6:39429:39447	1571473	0	True				
ANR	1571848	UnaryOperationExpression	! ( imm & 0xc0000000 )		1571473	0					
ANR	1571849	UnaryOperator	!		1571473	0					
ANR	1571850	BitAndExpression	imm & 0xc0000000		1571473	1		&			
ANR	1571851	Identifier	imm		1571473	0					
ANR	1571852	PrimaryExpression	0xc0000000		1571473	1					
ANR	1571853	CompoundStatement		94:27:1680:1680	1571473	1					
ANR	1571854	ExpressionStatement	imm <<= 2	1273:3:39455:39464	1571473	0	True				
ANR	1571855	AssignmentExpression	imm <<= 2		1571473	0		<<=			
ANR	1571856	Identifier	imm		1571473	0					
ANR	1571857	PrimaryExpression	2		1571473	1					
ANR	1571858	ExpressionStatement	rol += 1	1274:3:39469:39477	1571473	1	True				
ANR	1571859	AssignmentExpression	rol += 1		1571473	0		+=			
ANR	1571860	Identifier	rol		1571473	0					
ANR	1571861	PrimaryExpression	1		1571473	1					
ANR	1571862	IfStatement	if ( ! ( imm & 0x00ffffff ) )		1571473	7					
ANR	1571863	Condition	! ( imm & 0x00ffffff )	1277:6:39490:39508	1571473	0	True				
ANR	1571864	UnaryOperationExpression	! ( imm & 0x00ffffff )		1571473	0					
ANR	1571865	UnaryOperator	!		1571473	0					
ANR	1571866	BitAndExpression	imm & 0x00ffffff		1571473	1		&			
ANR	1571867	Identifier	imm		1571473	0					
ANR	1571868	PrimaryExpression	0x00ffffff		1571473	1					
ANR	1571869	ExpressionStatement	imm2 = SRC2_IMM | ( imm >> 24 ) | ( ( rol & 0xf ) << 8 )	1278:3:39514:39564	1571473	1	True				
ANR	1571870	AssignmentExpression	imm2 = SRC2_IMM | ( imm >> 24 ) | ( ( rol & 0xf ) << 8 )		1571473	0		=			
ANR	1571871	Identifier	imm2		1571473	0					
ANR	1571872	InclusiveOrExpression	SRC2_IMM | ( imm >> 24 ) | ( ( rol & 0xf ) << 8 )		1571473	1		|			
ANR	1571873	Identifier	SRC2_IMM		1571473	0					
ANR	1571874	InclusiveOrExpression	( imm >> 24 ) | ( ( rol & 0xf ) << 8 )		1571473	1		|			
ANR	1571875	ShiftExpression	imm >> 24		1571473	0		>>			
ANR	1571876	Identifier	imm		1571473	0					
ANR	1571877	PrimaryExpression	24		1571473	1					
ANR	1571878	ShiftExpression	( rol & 0xf ) << 8		1571473	1		<<			
ANR	1571879	BitAndExpression	rol & 0xf		1571473	0		&			
ANR	1571880	Identifier	rol		1571473	0					
ANR	1571881	PrimaryExpression	0xf		1571473	1					
ANR	1571882	PrimaryExpression	8		1571473	1					
ANR	1571883	ElseStatement	else		1571473	0					
ANR	1571884	ReturnStatement	return 0 ;	1280:3:39576:39584	1571473	0	True				
ANR	1571885	PrimaryExpression	0		1571473	0					
ANR	1571886	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? MOV_DP : MVN_DP , 0 , reg , SLJIT_UNUSED , imm1 ) ) )"	1283:1:39591:39698	1571473	9	True				
ANR	1571887	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? MOV_DP : MVN_DP , 0 , reg , SLJIT_UNUSED , imm1 ) ) )"		1571473	0					
ANR	1571888	Callee	FAIL_IF		1571473	0					
ANR	1571889	Identifier	FAIL_IF		1571473	0					
ANR	1571890	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? MOV_DP : MVN_DP , 0 , reg , SLJIT_UNUSED , imm1 ) )"		1571473	1					
ANR	1571891	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? MOV_DP : MVN_DP , 0 , reg , SLJIT_UNUSED , imm1 ) )"		1571473	0					
ANR	1571892	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? MOV_DP : MVN_DP , 0 , reg , SLJIT_UNUSED , imm1 ) )"		1571473	0					
ANR	1571893	Callee	push_inst		1571473	0					
ANR	1571894	Identifier	push_inst		1571473	0					
ANR	1571895	ArgumentList	compiler		1571473	1					
ANR	1571896	Argument	compiler		1571473	0					
ANR	1571897	Identifier	compiler		1571473	0					
ANR	1571898	Argument	"EMIT_DATA_PROCESS_INS ( positive ? MOV_DP : MVN_DP , 0 , reg , SLJIT_UNUSED , imm1 )"		1571473	1					
ANR	1571899	CallExpression	"EMIT_DATA_PROCESS_INS ( positive ? MOV_DP : MVN_DP , 0 , reg , SLJIT_UNUSED , imm1 )"		1571473	0					
ANR	1571900	Callee	EMIT_DATA_PROCESS_INS		1571473	0					
ANR	1571901	Identifier	EMIT_DATA_PROCESS_INS		1571473	0					
ANR	1571902	ArgumentList	positive ? MOV_DP : MVN_DP		1571473	1					
ANR	1571903	Argument	positive ? MOV_DP : MVN_DP		1571473	0					
ANR	1571904	ConditionalExpression	positive ? MOV_DP : MVN_DP		1571473	0					
ANR	1571905	Condition	positive		1571473	0					
ANR	1571906	Identifier	positive		1571473	0					
ANR	1571907	Identifier	MOV_DP		1571473	1					
ANR	1571908	Identifier	MVN_DP		1571473	2					
ANR	1571909	Argument	0		1571473	1					
ANR	1571910	PrimaryExpression	0		1571473	0					
ANR	1571911	Argument	reg		1571473	2					
ANR	1571912	Identifier	reg		1571473	0					
ANR	1571913	Argument	SLJIT_UNUSED		1571473	3					
ANR	1571914	Identifier	SLJIT_UNUSED		1571473	0					
ANR	1571915	Argument	imm1		1571473	4					
ANR	1571916	Identifier	imm1		1571473	0					
ANR	1571917	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? ORR_DP : BIC_DP , 0 , reg , reg , imm2 ) ) )"	1284:1:39701:39799	1571473	10	True				
ANR	1571918	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? ORR_DP : BIC_DP , 0 , reg , reg , imm2 ) ) )"		1571473	0					
ANR	1571919	Callee	FAIL_IF		1571473	0					
ANR	1571920	Identifier	FAIL_IF		1571473	0					
ANR	1571921	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? ORR_DP : BIC_DP , 0 , reg , reg , imm2 ) )"		1571473	1					
ANR	1571922	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? ORR_DP : BIC_DP , 0 , reg , reg , imm2 ) )"		1571473	0					
ANR	1571923	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( positive ? ORR_DP : BIC_DP , 0 , reg , reg , imm2 ) )"		1571473	0					
ANR	1571924	Callee	push_inst		1571473	0					
ANR	1571925	Identifier	push_inst		1571473	0					
ANR	1571926	ArgumentList	compiler		1571473	1					
ANR	1571927	Argument	compiler		1571473	0					
ANR	1571928	Identifier	compiler		1571473	0					
ANR	1571929	Argument	"EMIT_DATA_PROCESS_INS ( positive ? ORR_DP : BIC_DP , 0 , reg , reg , imm2 )"		1571473	1					
ANR	1571930	CallExpression	"EMIT_DATA_PROCESS_INS ( positive ? ORR_DP : BIC_DP , 0 , reg , reg , imm2 )"		1571473	0					
ANR	1571931	Callee	EMIT_DATA_PROCESS_INS		1571473	0					
ANR	1571932	Identifier	EMIT_DATA_PROCESS_INS		1571473	0					
ANR	1571933	ArgumentList	positive ? ORR_DP : BIC_DP		1571473	1					
ANR	1571934	Argument	positive ? ORR_DP : BIC_DP		1571473	0					
ANR	1571935	ConditionalExpression	positive ? ORR_DP : BIC_DP		1571473	0					
ANR	1571936	Condition	positive		1571473	0					
ANR	1571937	Identifier	positive		1571473	0					
ANR	1571938	Identifier	ORR_DP		1571473	1					
ANR	1571939	Identifier	BIC_DP		1571473	2					
ANR	1571940	Argument	0		1571473	1					
ANR	1571941	PrimaryExpression	0		1571473	0					
ANR	1571942	Argument	reg		1571473	2					
ANR	1571943	Identifier	reg		1571473	0					
ANR	1571944	Argument	reg		1571473	3					
ANR	1571945	Identifier	reg		1571473	0					
ANR	1571946	Argument	imm2		1571473	4					
ANR	1571947	Identifier	imm2		1571473	0					
ANR	1571948	ReturnStatement	return 1 ;	1285:1:39802:39810	1571473	11	True				
ANR	1571949	PrimaryExpression	1		1571473	0					
ANR	1571950	ReturnType	static sljit_si		1571473	1					
ANR	1571951	Identifier	generate_int		1571473	2					
ANR	1571952	ParameterList	"struct sljit_compiler * compiler , sljit_si reg , sljit_uw imm , sljit_si positive"		1571473	3					
ANR	1571953	Parameter	struct sljit_compiler * compiler	1178:29:37689:37719	1571473	0	True				
ANR	1571954	ParameterType	struct sljit_compiler *		1571473	0					
ANR	1571955	Identifier	compiler		1571473	1					
ANR	1571956	Parameter	sljit_si reg	1178:62:37722:37733	1571473	1	True				
ANR	1571957	ParameterType	sljit_si		1571473	0					
ANR	1571958	Identifier	reg		1571473	1					
ANR	1571959	Parameter	sljit_uw imm	1178:76:37736:37747	1571473	2	True				
ANR	1571960	ParameterType	sljit_uw		1571473	0					
ANR	1571961	Identifier	imm		1571473	1					
ANR	1571962	Parameter	sljit_si positive	1178:90:37750:37766	1571473	3	True				
ANR	1571963	ParameterType	sljit_si		1571473	0					
ANR	1571964	Identifier	positive		1571473	1					
ANR	1571965	CFGEntryNode	ENTRY		1571473		True				
ANR	1571966	CFGExitNode	EXIT		1571473		True				
ANR	1571967	Symbol	push_inst		1571473						
ANR	1571968	Symbol	MVN_DP		1571473						
ANR	1571969	Symbol	ORR_DP		1571473						
ANR	1571970	Symbol	imm		1571473						
ANR	1571971	Symbol	positive		1571473						
ANR	1571972	Symbol	BIC_DP		1571473						
ANR	1571973	Symbol	rol		1571473						
ANR	1571974	Symbol	MOV_DP		1571473						
ANR	1571975	Symbol	SLJIT_UNUSED		1571473						
ANR	1571976	Symbol	reg		1571473						
ANR	1571977	Symbol	imm2		1571473						
ANR	1571978	Symbol	imm1		1571473						
ANR	1571979	Symbol	SRC2_IMM		1571473						
ANR	1571980	Symbol	compiler		1571473						
ANR	1571981	Symbol	mask		1571473						
ANR	1571982	Symbol	EMIT_DATA_PROCESS_INS		1571473						
ANR	1571983	Function	load_immediate	1289:0:39822:40743							
ANR	1571984	FunctionDef	"load_immediate (struct sljit_compiler * compiler , sljit_si reg , sljit_uw imm)"		1571983	0					
ANR	1571985	CompoundStatement		1290:0:39914:40743	1571983	0					
ANR	1571986	IdentifierDeclStatement	sljit_uw tmp ;	1291:1:39917:39929	1571983	0	True				
ANR	1571987	IdentifierDecl	tmp		1571983	0					
ANR	1571988	IdentifierDeclType	sljit_uw		1571983	0					
ANR	1571989	Identifier	tmp		1571983	1					
ANR	1571990	IfStatement	if ( ! ( imm & ~0xffff ) )		1571983	1					
ANR	1571991	Condition	! ( imm & ~0xffff )	1294:5:39994:40009	1571983	0	True				
ANR	1571992	UnaryOperationExpression	! ( imm & ~0xffff )		1571983	0					
ANR	1571993	UnaryOperator	!		1571983	0					
ANR	1571994	BitAndExpression	imm & ~0xffff		1571983	1		&			
ANR	1571995	Identifier	imm		1571983	0					
ANR	1571996	Identifier	~0xffff		1571983	1					
ANR	1571997	ReturnStatement	"return push_inst ( compiler , MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff ) ) ;"	1295:2:40014:40097	1571983	1	True				
ANR	1571998	CallExpression	"push_inst ( compiler , MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff ) )"		1571983	0					
ANR	1571999	Callee	push_inst		1571983	0					
ANR	1572000	Identifier	push_inst		1571983	0					
ANR	1572001	ArgumentList	compiler		1571983	1					
ANR	1572002	Argument	compiler		1571983	0					
ANR	1572003	Identifier	compiler		1571983	0					
ANR	1572004	Argument	MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff )		1571983	1					
ANR	1572005	InclusiveOrExpression	MOVW | RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff )		1571983	0		|			
ANR	1572006	Identifier	MOVW		1571983	0					
ANR	1572007	InclusiveOrExpression	RD ( reg ) | ( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff )		1571983	1		|			
ANR	1572008	CallExpression	RD ( reg )		1571983	0					
ANR	1572009	Callee	RD		1571983	0					
ANR	1572010	Identifier	RD		1571983	0					
ANR	1572011	ArgumentList	reg		1571983	1					
ANR	1572012	Argument	reg		1571983	0					
ANR	1572013	Identifier	reg		1571983	0					
ANR	1572014	InclusiveOrExpression	( ( imm << 4 ) & 0xf0000 ) | ( imm & 0xfff )		1571983	1		|			
ANR	1572015	BitAndExpression	( imm << 4 ) & 0xf0000		1571983	0		&			
ANR	1572016	ShiftExpression	imm << 4		1571983	0		<<			
ANR	1572017	Identifier	imm		1571983	0					
ANR	1572018	PrimaryExpression	4		1571983	1					
ANR	1572019	PrimaryExpression	0xf0000		1571983	1					
ANR	1572020	BitAndExpression	imm & 0xfff		1571983	1		&			
ANR	1572021	Identifier	imm		1571983	0					
ANR	1572022	PrimaryExpression	0xfff		1571983	1					
ANR	1572023	ExpressionStatement	tmp = get_imm ( imm )	1299:1:40137:40155	1571983	2	True				
ANR	1572024	AssignmentExpression	tmp = get_imm ( imm )		1571983	0		=			
ANR	1572025	Identifier	tmp		1571983	0					
ANR	1572026	CallExpression	get_imm ( imm )		1571983	1					
ANR	1572027	Callee	get_imm		1571983	0					
ANR	1572028	Identifier	get_imm		1571983	0					
ANR	1572029	ArgumentList	imm		1571983	1					
ANR	1572030	Argument	imm		1571983	0					
ANR	1572031	Identifier	imm		1571983	0					
ANR	1572032	IfStatement	if ( tmp )		1571983	3					
ANR	1572033	Condition	tmp	1300:5:40162:40164	1571983	0	True				
ANR	1572034	Identifier	tmp		1571983	0					
ANR	1572035	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , tmp ) ) ;"	1301:2:40169:40253	1571983	1	True				
ANR	1572036	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , tmp ) )"		1571983	0					
ANR	1572037	Callee	push_inst		1571983	0					
ANR	1572038	Identifier	push_inst		1571983	0					
ANR	1572039	ArgumentList	compiler		1571983	1					
ANR	1572040	Argument	compiler		1571983	0					
ANR	1572041	Identifier	compiler		1571983	0					
ANR	1572042	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , tmp )"		1571983	1					
ANR	1572043	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , tmp )"		1571983	0					
ANR	1572044	Callee	EMIT_DATA_PROCESS_INS		1571983	0					
ANR	1572045	Identifier	EMIT_DATA_PROCESS_INS		1571983	0					
ANR	1572046	ArgumentList	MOV_DP		1571983	1					
ANR	1572047	Argument	MOV_DP		1571983	0					
ANR	1572048	Identifier	MOV_DP		1571983	0					
ANR	1572049	Argument	0		1571983	1					
ANR	1572050	PrimaryExpression	0		1571983	0					
ANR	1572051	Argument	reg		1571983	2					
ANR	1572052	Identifier	reg		1571983	0					
ANR	1572053	Argument	SLJIT_UNUSED		1571983	3					
ANR	1572054	Identifier	SLJIT_UNUSED		1571983	0					
ANR	1572055	Argument	tmp		1571983	4					
ANR	1572056	Identifier	tmp		1571983	0					
ANR	1572057	ExpressionStatement	tmp = get_imm ( ~imm )	1303:1:40257:40276	1571983	4	True				
ANR	1572058	AssignmentExpression	tmp = get_imm ( ~imm )		1571983	0		=			
ANR	1572059	Identifier	tmp		1571983	0					
ANR	1572060	CallExpression	get_imm ( ~imm )		1571983	1					
ANR	1572061	Callee	get_imm		1571983	0					
ANR	1572062	Identifier	get_imm		1571983	0					
ANR	1572063	ArgumentList	~imm		1571983	1					
ANR	1572064	Argument	~imm		1571983	0					
ANR	1572065	Identifier	~imm		1571983	0					
ANR	1572066	IfStatement	if ( tmp )		1571983	5					
ANR	1572067	Condition	tmp	1304:5:40283:40285	1571983	0	True				
ANR	1572068	Identifier	tmp		1571983	0					
ANR	1572069	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , tmp ) ) ;"	1305:2:40290:40374	1571983	1	True				
ANR	1572070	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , tmp ) )"		1571983	0					
ANR	1572071	Callee	push_inst		1571983	0					
ANR	1572072	Identifier	push_inst		1571983	0					
ANR	1572073	ArgumentList	compiler		1571983	1					
ANR	1572074	Argument	compiler		1571983	0					
ANR	1572075	Identifier	compiler		1571983	0					
ANR	1572076	Argument	"EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , tmp )"		1571983	1					
ANR	1572077	CallExpression	"EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , tmp )"		1571983	0					
ANR	1572078	Callee	EMIT_DATA_PROCESS_INS		1571983	0					
ANR	1572079	Identifier	EMIT_DATA_PROCESS_INS		1571983	0					
ANR	1572080	ArgumentList	MVN_DP		1571983	1					
ANR	1572081	Argument	MVN_DP		1571983	0					
ANR	1572082	Identifier	MVN_DP		1571983	0					
ANR	1572083	Argument	0		1571983	1					
ANR	1572084	PrimaryExpression	0		1571983	0					
ANR	1572085	Argument	reg		1571983	2					
ANR	1572086	Identifier	reg		1571983	0					
ANR	1572087	Argument	SLJIT_UNUSED		1571983	3					
ANR	1572088	Identifier	SLJIT_UNUSED		1571983	0					
ANR	1572089	Argument	tmp		1571983	4					
ANR	1572090	Identifier	tmp		1571983	0					
ANR	1572091	ExpressionStatement	"FAIL_IF ( generate_int ( compiler , reg , imm , 1 ) )"	1309:1:40464:40508	1571983	6	True				
ANR	1572092	CallExpression	"FAIL_IF ( generate_int ( compiler , reg , imm , 1 ) )"		1571983	0					
ANR	1572093	Callee	FAIL_IF		1571983	0					
ANR	1572094	Identifier	FAIL_IF		1571983	0					
ANR	1572095	ArgumentList	"generate_int ( compiler , reg , imm , 1 )"		1571983	1					
ANR	1572096	Argument	"generate_int ( compiler , reg , imm , 1 )"		1571983	0					
ANR	1572097	CallExpression	"generate_int ( compiler , reg , imm , 1 )"		1571983	0					
ANR	1572098	Callee	generate_int		1571983	0					
ANR	1572099	Identifier	generate_int		1571983	0					
ANR	1572100	ArgumentList	compiler		1571983	1					
ANR	1572101	Argument	compiler		1571983	0					
ANR	1572102	Identifier	compiler		1571983	0					
ANR	1572103	Argument	reg		1571983	1					
ANR	1572104	Identifier	reg		1571983	0					
ANR	1572105	Argument	imm		1571983	2					
ANR	1572106	Identifier	imm		1571983	0					
ANR	1572107	Argument	1		1571983	3					
ANR	1572108	PrimaryExpression	1		1571983	0					
ANR	1572109	ExpressionStatement	"FAIL_IF ( generate_int ( compiler , reg , ~imm , 0 ) )"	1310:1:40511:40556	1571983	7	True				
ANR	1572110	CallExpression	"FAIL_IF ( generate_int ( compiler , reg , ~imm , 0 ) )"		1571983	0					
ANR	1572111	Callee	FAIL_IF		1571983	0					
ANR	1572112	Identifier	FAIL_IF		1571983	0					
ANR	1572113	ArgumentList	"generate_int ( compiler , reg , ~imm , 0 )"		1571983	1					
ANR	1572114	Argument	"generate_int ( compiler , reg , ~imm , 0 )"		1571983	0					
ANR	1572115	CallExpression	"generate_int ( compiler , reg , ~imm , 0 )"		1571983	0					
ANR	1572116	Callee	generate_int		1571983	0					
ANR	1572117	Identifier	generate_int		1571983	0					
ANR	1572118	ArgumentList	compiler		1571983	1					
ANR	1572119	Argument	compiler		1571983	0					
ANR	1572120	Identifier	compiler		1571983	0					
ANR	1572121	Argument	reg		1571983	1					
ANR	1572122	Identifier	reg		1571983	0					
ANR	1572123	Argument	~imm		1571983	2					
ANR	1572124	Identifier	~imm		1571983	0					
ANR	1572125	Argument	0		1571983	3					
ANR	1572126	PrimaryExpression	0		1571983	0					
ANR	1572127	ReturnStatement	"return push_inst_with_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 ) , imm ) ;"	1313:1:40581:40690	1571983	8	True				
ANR	1572128	CallExpression	"push_inst_with_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 ) , imm )"		1571983	0					
ANR	1572129	Callee	push_inst_with_literal		1571983	0					
ANR	1572130	Identifier	push_inst_with_literal		1571983	0					
ANR	1572131	ArgumentList	compiler		1571983	1					
ANR	1572132	Argument	compiler		1571983	0					
ANR	1572133	Identifier	compiler		1571983	0					
ANR	1572134	Argument	"EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 )"		1571983	1					
ANR	1572135	CallExpression	"EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 )"		1571983	0					
ANR	1572136	Callee	EMIT_DATA_TRANSFER		1571983	0					
ANR	1572137	Identifier	EMIT_DATA_TRANSFER		1571983	0					
ANR	1572138	ArgumentList	WORD_DATA | LOAD_DATA		1571983	1					
ANR	1572139	Argument	WORD_DATA | LOAD_DATA		1571983	0					
ANR	1572140	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1571983	0		|			
ANR	1572141	Identifier	WORD_DATA		1571983	0					
ANR	1572142	Identifier	LOAD_DATA		1571983	1					
ANR	1572143	Argument	1		1571983	1					
ANR	1572144	PrimaryExpression	1		1571983	0					
ANR	1572145	Argument	0		1571983	2					
ANR	1572146	PrimaryExpression	0		1571983	0					
ANR	1572147	Argument	reg		1571983	3					
ANR	1572148	Identifier	reg		1571983	0					
ANR	1572149	Argument	TMP_PC		1571983	4					
ANR	1572150	Identifier	TMP_PC		1571983	0					
ANR	1572151	Argument	0		1571983	5					
ANR	1572152	PrimaryExpression	0		1571983	0					
ANR	1572153	Argument	imm		1571983	2					
ANR	1572154	Identifier	imm		1571983	0					
ANR	1572155	ReturnType	static sljit_si		1571983	1					
ANR	1572156	Identifier	load_immediate		1571983	2					
ANR	1572157	ParameterList	"struct sljit_compiler * compiler , sljit_si reg , sljit_uw imm"		1571983	3					
ANR	1572158	Parameter	struct sljit_compiler * compiler	1289:31:39853:39883	1571983	0	True				
ANR	1572159	ParameterType	struct sljit_compiler *		1571983	0					
ANR	1572160	Identifier	compiler		1571983	1					
ANR	1572161	Parameter	sljit_si reg	1289:64:39886:39897	1571983	1	True				
ANR	1572162	ParameterType	sljit_si		1571983	0					
ANR	1572163	Identifier	reg		1571983	1					
ANR	1572164	Parameter	sljit_uw imm	1289:78:39900:39911	1571983	2	True				
ANR	1572165	ParameterType	sljit_uw		1571983	0					
ANR	1572166	Identifier	imm		1571983	1					
ANR	1572167	CFGEntryNode	ENTRY		1571983		True				
ANR	1572168	CFGExitNode	EXIT		1571983		True				
ANR	1572169	Symbol	push_inst		1571983						
ANR	1572170	Symbol	~0xffff		1571983						
ANR	1572171	Symbol	TMP_PC		1571983						
ANR	1572172	Symbol	MVN_DP		1571983						
ANR	1572173	Symbol	LOAD_DATA		1571983						
ANR	1572174	Symbol	MOVW		1571983						
ANR	1572175	Symbol	imm		1571983						
ANR	1572176	Symbol	get_imm		1571983						
ANR	1572177	Symbol	push_inst_with_literal		1571983						
ANR	1572178	Symbol	MOV_DP		1571983						
ANR	1572179	Symbol	~imm		1571983						
ANR	1572180	Symbol	RD		1571983						
ANR	1572181	Symbol	SLJIT_UNUSED		1571983						
ANR	1572182	Symbol	reg		1571983						
ANR	1572183	Symbol	tmp		1571983						
ANR	1572184	Symbol	generate_int		1571983						
ANR	1572185	Symbol	compiler		1571983						
ANR	1572186	Symbol	WORD_DATA		1571983						
ANR	1572187	Symbol	EMIT_DATA_PROCESS_INS		1571983						
ANR	1572188	Symbol	EMIT_DATA_TRANSFER		1571983						
ANR	1572189	Function	emit_set_delta	1320:0:40845:41262							
ANR	1572190	FunctionDef	"emit_set_delta (struct sljit_compiler * compiler , sljit_si dst , sljit_si reg , sljit_sw value)"		1572189	0					
ANR	1572191	CompoundStatement		1321:0:40953:41262	1572189	0					
ANR	1572192	IfStatement	if ( value >= 0 )		1572189	0					
ANR	1572193	Condition	value >= 0	1322:5:40960:40969	1572189	0	True				
ANR	1572194	RelationalExpression	value >= 0		1572189	0		>=			
ANR	1572195	Identifier	value		1572189	0					
ANR	1572196	PrimaryExpression	0		1572189	1					
ANR	1572197	CompoundStatement		2:17:18:18	1572189	1					
ANR	1572198	ExpressionStatement	value = get_imm ( value )	1323:2:40976:40998	1572189	0	True				
ANR	1572199	AssignmentExpression	value = get_imm ( value )		1572189	0		=			
ANR	1572200	Identifier	value		1572189	0					
ANR	1572201	CallExpression	get_imm ( value )		1572189	1					
ANR	1572202	Callee	get_imm		1572189	0					
ANR	1572203	Identifier	get_imm		1572189	0					
ANR	1572204	ArgumentList	value		1572189	1					
ANR	1572205	Argument	value		1572189	0					
ANR	1572206	Identifier	value		1572189	0					
ANR	1572207	IfStatement	if ( value )		1572189	1					
ANR	1572208	Condition	value	1324:6:41006:41010	1572189	0	True				
ANR	1572209	Identifier	value		1572189	0					
ANR	1572210	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , dst , reg , value ) ) ;"	1325:3:41016:41093	1572189	1	True				
ANR	1572211	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , dst , reg , value ) )"		1572189	0					
ANR	1572212	Callee	push_inst		1572189	0					
ANR	1572213	Identifier	push_inst		1572189	0					
ANR	1572214	ArgumentList	compiler		1572189	1					
ANR	1572215	Argument	compiler		1572189	0					
ANR	1572216	Identifier	compiler		1572189	0					
ANR	1572217	Argument	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , dst , reg , value )"		1572189	1					
ANR	1572218	CallExpression	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , dst , reg , value )"		1572189	0					
ANR	1572219	Callee	EMIT_DATA_PROCESS_INS		1572189	0					
ANR	1572220	Identifier	EMIT_DATA_PROCESS_INS		1572189	0					
ANR	1572221	ArgumentList	ADD_DP		1572189	1					
ANR	1572222	Argument	ADD_DP		1572189	0					
ANR	1572223	Identifier	ADD_DP		1572189	0					
ANR	1572224	Argument	0		1572189	1					
ANR	1572225	PrimaryExpression	0		1572189	0					
ANR	1572226	Argument	dst		1572189	2					
ANR	1572227	Identifier	dst		1572189	0					
ANR	1572228	Argument	reg		1572189	3					
ANR	1572229	Identifier	reg		1572189	0					
ANR	1572230	Argument	value		1572189	4					
ANR	1572231	Identifier	value		1572189	0					
ANR	1572232	ElseStatement	else		1572189	0					
ANR	1572233	CompoundStatement		7:6:150:150	1572189	0					
ANR	1572234	ExpressionStatement	value = get_imm ( - value )	1328:2:41108:41131	1572189	0	True				
ANR	1572235	AssignmentExpression	value = get_imm ( - value )		1572189	0		=			
ANR	1572236	Identifier	value		1572189	0					
ANR	1572237	CallExpression	get_imm ( - value )		1572189	1					
ANR	1572238	Callee	get_imm		1572189	0					
ANR	1572239	Identifier	get_imm		1572189	0					
ANR	1572240	ArgumentList	- value		1572189	1					
ANR	1572241	Argument	- value		1572189	0					
ANR	1572242	UnaryOperationExpression	- value		1572189	0					
ANR	1572243	UnaryOperator	-		1572189	0					
ANR	1572244	Identifier	value		1572189	1					
ANR	1572245	IfStatement	if ( value )		1572189	1					
ANR	1572246	Condition	value	1329:6:41139:41143	1572189	0	True				
ANR	1572247	Identifier	value		1572189	0					
ANR	1572248	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , dst , reg , value ) ) ;"	1330:3:41149:41226	1572189	1	True				
ANR	1572249	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , dst , reg , value ) )"		1572189	0					
ANR	1572250	Callee	push_inst		1572189	0					
ANR	1572251	Identifier	push_inst		1572189	0					
ANR	1572252	ArgumentList	compiler		1572189	1					
ANR	1572253	Argument	compiler		1572189	0					
ANR	1572254	Identifier	compiler		1572189	0					
ANR	1572255	Argument	"EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , dst , reg , value )"		1572189	1					
ANR	1572256	CallExpression	"EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , dst , reg , value )"		1572189	0					
ANR	1572257	Callee	EMIT_DATA_PROCESS_INS		1572189	0					
ANR	1572258	Identifier	EMIT_DATA_PROCESS_INS		1572189	0					
ANR	1572259	ArgumentList	SUB_DP		1572189	1					
ANR	1572260	Argument	SUB_DP		1572189	0					
ANR	1572261	Identifier	SUB_DP		1572189	0					
ANR	1572262	Argument	0		1572189	1					
ANR	1572263	PrimaryExpression	0		1572189	0					
ANR	1572264	Argument	dst		1572189	2					
ANR	1572265	Identifier	dst		1572189	0					
ANR	1572266	Argument	reg		1572189	3					
ANR	1572267	Identifier	reg		1572189	0					
ANR	1572268	Argument	value		1572189	4					
ANR	1572269	Identifier	value		1572189	0					
ANR	1572270	ReturnStatement	return SLJIT_ERR_UNSUPPORTED ;	1332:1:41232:41260	1572189	1	True				
ANR	1572271	Identifier	SLJIT_ERR_UNSUPPORTED		1572189	0					
ANR	1572272	ReturnType	static sljit_si		1572189	1					
ANR	1572273	Identifier	emit_set_delta		1572189	2					
ANR	1572274	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_si reg , sljit_sw value"		1572189	3					
ANR	1572275	Parameter	struct sljit_compiler * compiler	1320:31:40876:40906	1572189	0	True				
ANR	1572276	ParameterType	struct sljit_compiler *		1572189	0					
ANR	1572277	Identifier	compiler		1572189	1					
ANR	1572278	Parameter	sljit_si dst	1320:64:40909:40920	1572189	1	True				
ANR	1572279	ParameterType	sljit_si		1572189	0					
ANR	1572280	Identifier	dst		1572189	1					
ANR	1572281	Parameter	sljit_si reg	1320:78:40923:40934	1572189	2	True				
ANR	1572282	ParameterType	sljit_si		1572189	0					
ANR	1572283	Identifier	reg		1572189	1					
ANR	1572284	Parameter	sljit_sw value	1320:92:40937:40950	1572189	3	True				
ANR	1572285	ParameterType	sljit_sw		1572189	0					
ANR	1572286	Identifier	value		1572189	1					
ANR	1572287	CFGEntryNode	ENTRY		1572189		True				
ANR	1572288	CFGExitNode	EXIT		1572189		True				
ANR	1572289	Symbol	push_inst		1572189						
ANR	1572290	Symbol	ADD_DP		1572189						
ANR	1572291	Symbol	dst		1572189						
ANR	1572292	Symbol	SUB_DP		1572189						
ANR	1572293	Symbol	reg		1572189						
ANR	1572294	Symbol	get_imm		1572189						
ANR	1572295	Symbol	compiler		1572189						
ANR	1572296	Symbol	value		1572189						
ANR	1572297	Symbol	EMIT_DATA_PROCESS_INS		1572189						
ANR	1572298	Symbol	SLJIT_ERR_UNSUPPORTED		1572189						
ANR	1572299	Function	getput_arg_fast	1336:0:41325:43324							
ANR	1572300	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1572299	0					
ANR	1572301	CompoundStatement		1337:0:41453:43324	1572299	0					
ANR	1572302	IdentifierDeclStatement	sljit_uw imm ;	1338:1:41456:41468	1572299	0	True				
ANR	1572303	IdentifierDecl	imm		1572299	0					
ANR	1572304	IdentifierDeclType	sljit_uw		1572299	0					
ANR	1572305	Identifier	imm		1572299	1					
ANR	1572306	IfStatement	if ( arg & SLJIT_IMM )		1572299	1					
ANR	1572307	Condition	arg & SLJIT_IMM	1340:5:41476:41490	1572299	0	True				
ANR	1572308	BitAndExpression	arg & SLJIT_IMM		1572299	0		&			
ANR	1572309	Identifier	arg		1572299	0					
ANR	1572310	Identifier	SLJIT_IMM		1572299	1					
ANR	1572311	CompoundStatement		4:22:39:39	1572299	1					
ANR	1572312	ExpressionStatement	imm = get_imm ( argw )	1341:2:41497:41516	1572299	0	True				
ANR	1572313	AssignmentExpression	imm = get_imm ( argw )		1572299	0		=			
ANR	1572314	Identifier	imm		1572299	0					
ANR	1572315	CallExpression	get_imm ( argw )		1572299	1					
ANR	1572316	Callee	get_imm		1572299	0					
ANR	1572317	Identifier	get_imm		1572299	0					
ANR	1572318	ArgumentList	argw		1572299	1					
ANR	1572319	Argument	argw		1572299	0					
ANR	1572320	Identifier	argw		1572299	0					
ANR	1572321	IfStatement	if ( imm )		1572299	1					
ANR	1572322	Condition	imm	1342:6:41524:41526	1572299	0	True				
ANR	1572323	Identifier	imm		1572299	0					
ANR	1572324	CompoundStatement		6:11:75:75	1572299	1					
ANR	1572325	IfStatement	if ( inp_flags & ARG_TEST )		1572299	0					
ANR	1572326	Condition	inp_flags & ARG_TEST	1343:7:41538:41557	1572299	0	True				
ANR	1572327	BitAndExpression	inp_flags & ARG_TEST		1572299	0		&			
ANR	1572328	Identifier	inp_flags		1572299	0					
ANR	1572329	Identifier	ARG_TEST		1572299	1					
ANR	1572330	ReturnStatement	return 1 ;	1344:4:41564:41572	1572299	1	True				
ANR	1572331	PrimaryExpression	1		1572299	0					
ANR	1572332	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , imm ) ) )"	1345:3:41577:41663	1572299	1	True				
ANR	1572333	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , imm ) ) )"		1572299	0					
ANR	1572334	Callee	FAIL_IF		1572299	0					
ANR	1572335	Identifier	FAIL_IF		1572299	0					
ANR	1572336	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , imm ) )"		1572299	1					
ANR	1572337	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , imm ) )"		1572299	0					
ANR	1572338	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , imm ) )"		1572299	0					
ANR	1572339	Callee	push_inst		1572299	0					
ANR	1572340	Identifier	push_inst		1572299	0					
ANR	1572341	ArgumentList	compiler		1572299	1					
ANR	1572342	Argument	compiler		1572299	0					
ANR	1572343	Identifier	compiler		1572299	0					
ANR	1572344	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , imm )"		1572299	1					
ANR	1572345	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , reg , SLJIT_UNUSED , imm )"		1572299	0					
ANR	1572346	Callee	EMIT_DATA_PROCESS_INS		1572299	0					
ANR	1572347	Identifier	EMIT_DATA_PROCESS_INS		1572299	0					
ANR	1572348	ArgumentList	MOV_DP		1572299	1					
ANR	1572349	Argument	MOV_DP		1572299	0					
ANR	1572350	Identifier	MOV_DP		1572299	0					
ANR	1572351	Argument	0		1572299	1					
ANR	1572352	PrimaryExpression	0		1572299	0					
ANR	1572353	Argument	reg		1572299	2					
ANR	1572354	Identifier	reg		1572299	0					
ANR	1572355	Argument	SLJIT_UNUSED		1572299	3					
ANR	1572356	Identifier	SLJIT_UNUSED		1572299	0					
ANR	1572357	Argument	imm		1572299	4					
ANR	1572358	Identifier	imm		1572299	0					
ANR	1572359	ReturnStatement	return - 1 ;	1346:3:41668:41677	1572299	2	True				
ANR	1572360	UnaryOperationExpression	- 1		1572299	0					
ANR	1572361	UnaryOperator	-		1572299	0					
ANR	1572362	PrimaryExpression	1		1572299	1					
ANR	1572363	ExpressionStatement	imm = get_imm ( ~argw )	1348:2:41685:41705	1572299	2	True				
ANR	1572364	AssignmentExpression	imm = get_imm ( ~argw )		1572299	0		=			
ANR	1572365	Identifier	imm		1572299	0					
ANR	1572366	CallExpression	get_imm ( ~argw )		1572299	1					
ANR	1572367	Callee	get_imm		1572299	0					
ANR	1572368	Identifier	get_imm		1572299	0					
ANR	1572369	ArgumentList	~argw		1572299	1					
ANR	1572370	Argument	~argw		1572299	0					
ANR	1572371	Identifier	~argw		1572299	0					
ANR	1572372	IfStatement	if ( imm )		1572299	3					
ANR	1572373	Condition	imm	1349:6:41713:41715	1572299	0	True				
ANR	1572374	Identifier	imm		1572299	0					
ANR	1572375	CompoundStatement		13:11:264:264	1572299	1					
ANR	1572376	IfStatement	if ( inp_flags & ARG_TEST )		1572299	0					
ANR	1572377	Condition	inp_flags & ARG_TEST	1350:7:41727:41746	1572299	0	True				
ANR	1572378	BitAndExpression	inp_flags & ARG_TEST		1572299	0		&			
ANR	1572379	Identifier	inp_flags		1572299	0					
ANR	1572380	Identifier	ARG_TEST		1572299	1					
ANR	1572381	ReturnStatement	return 1 ;	1351:4:41753:41761	1572299	1	True				
ANR	1572382	PrimaryExpression	1		1572299	0					
ANR	1572383	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , imm ) ) )"	1352:3:41766:41852	1572299	1	True				
ANR	1572384	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , imm ) ) )"		1572299	0					
ANR	1572385	Callee	FAIL_IF		1572299	0					
ANR	1572386	Identifier	FAIL_IF		1572299	0					
ANR	1572387	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , imm ) )"		1572299	1					
ANR	1572388	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , imm ) )"		1572299	0					
ANR	1572389	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , imm ) )"		1572299	0					
ANR	1572390	Callee	push_inst		1572299	0					
ANR	1572391	Identifier	push_inst		1572299	0					
ANR	1572392	ArgumentList	compiler		1572299	1					
ANR	1572393	Argument	compiler		1572299	0					
ANR	1572394	Identifier	compiler		1572299	0					
ANR	1572395	Argument	"EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , imm )"		1572299	1					
ANR	1572396	CallExpression	"EMIT_DATA_PROCESS_INS ( MVN_DP , 0 , reg , SLJIT_UNUSED , imm )"		1572299	0					
ANR	1572397	Callee	EMIT_DATA_PROCESS_INS		1572299	0					
ANR	1572398	Identifier	EMIT_DATA_PROCESS_INS		1572299	0					
ANR	1572399	ArgumentList	MVN_DP		1572299	1					
ANR	1572400	Argument	MVN_DP		1572299	0					
ANR	1572401	Identifier	MVN_DP		1572299	0					
ANR	1572402	Argument	0		1572299	1					
ANR	1572403	PrimaryExpression	0		1572299	0					
ANR	1572404	Argument	reg		1572299	2					
ANR	1572405	Identifier	reg		1572299	0					
ANR	1572406	Argument	SLJIT_UNUSED		1572299	3					
ANR	1572407	Identifier	SLJIT_UNUSED		1572299	0					
ANR	1572408	Argument	imm		1572299	4					
ANR	1572409	Identifier	imm		1572299	0					
ANR	1572410	ReturnStatement	return - 1 ;	1353:3:41857:41866	1572299	2	True				
ANR	1572411	UnaryOperationExpression	- 1		1572299	0					
ANR	1572412	UnaryOperator	-		1572299	0					
ANR	1572413	PrimaryExpression	1		1572299	1					
ANR	1572414	ReturnStatement	return 0 ;	1355:2:41874:41882	1572299	4	True				
ANR	1572415	PrimaryExpression	0		1572299	0					
ANR	1572416	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1358:1:41889:41918	1572299	2	True				
ANR	1572417	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1572299	0					
ANR	1572418	Callee	SLJIT_ASSERT		1572299	0					
ANR	1572419	Identifier	SLJIT_ASSERT		1572299	0					
ANR	1572420	ArgumentList	arg & SLJIT_MEM		1572299	1					
ANR	1572421	Argument	arg & SLJIT_MEM		1572299	0					
ANR	1572422	BitAndExpression	arg & SLJIT_MEM		1572299	0		&			
ANR	1572423	Identifier	arg		1572299	0					
ANR	1572424	Identifier	SLJIT_MEM		1572299	1					
ANR	1572425	IfStatement	if ( ! ( arg & REG_MASK ) )		1572299	3					
ANR	1572426	Condition	! ( arg & REG_MASK )	1361:5:41952:41968	1572299	0	True				
ANR	1572427	UnaryOperationExpression	! ( arg & REG_MASK )		1572299	0					
ANR	1572428	UnaryOperator	!		1572299	0					
ANR	1572429	BitAndExpression	arg & REG_MASK		1572299	1		&			
ANR	1572430	Identifier	arg		1572299	0					
ANR	1572431	Identifier	REG_MASK		1572299	1					
ANR	1572432	ReturnStatement	return 0 ;	1362:2:41973:41981	1572299	1	True				
ANR	1572433	PrimaryExpression	0		1572299	0					
ANR	1572434	IfStatement	if ( arg & OFFS_REG_MASK )		1572299	4					
ANR	1572435	Condition	arg & OFFS_REG_MASK	1364:5:41989:42007	1572299	0	True				
ANR	1572436	BitAndExpression	arg & OFFS_REG_MASK		1572299	0		&			
ANR	1572437	Identifier	arg		1572299	0					
ANR	1572438	Identifier	OFFS_REG_MASK		1572299	1					
ANR	1572439	CompoundStatement		28:26:556:556	1572299	1					
ANR	1572440	IfStatement	if ( ( argw & 0x3 ) != 0 && ! IS_TYPE1_TRANSFER ( inp_flags ) )		1572299	0					
ANR	1572441	Condition	( argw & 0x3 ) != 0 && ! IS_TYPE1_TRANSFER ( inp_flags )	1365:6:42018:42067	1572299	0	True				
ANR	1572442	AndExpression	( argw & 0x3 ) != 0 && ! IS_TYPE1_TRANSFER ( inp_flags )		1572299	0		&&			
ANR	1572443	EqualityExpression	( argw & 0x3 ) != 0		1572299	0		!=			
ANR	1572444	BitAndExpression	argw & 0x3		1572299	0		&			
ANR	1572445	Identifier	argw		1572299	0					
ANR	1572446	PrimaryExpression	0x3		1572299	1					
ANR	1572447	PrimaryExpression	0		1572299	1					
ANR	1572448	UnaryOperationExpression	! IS_TYPE1_TRANSFER ( inp_flags )		1572299	1					
ANR	1572449	UnaryOperator	!		1572299	0					
ANR	1572450	CallExpression	IS_TYPE1_TRANSFER ( inp_flags )		1572299	1					
ANR	1572451	Callee	IS_TYPE1_TRANSFER		1572299	0					
ANR	1572452	Identifier	IS_TYPE1_TRANSFER		1572299	0					
ANR	1572453	ArgumentList	inp_flags		1572299	1					
ANR	1572454	Argument	inp_flags		1572299	0					
ANR	1572455	Identifier	inp_flags		1572299	0					
ANR	1572456	ReturnStatement	return 0 ;	1366:3:42073:42081	1572299	1	True				
ANR	1572457	PrimaryExpression	0		1572299	0					
ANR	1572458	IfStatement	if ( inp_flags & ARG_TEST )		1572299	1					
ANR	1572459	Condition	inp_flags & ARG_TEST	1368:6:42090:42109	1572299	0	True				
ANR	1572460	BitAndExpression	inp_flags & ARG_TEST		1572299	0		&			
ANR	1572461	Identifier	inp_flags		1572299	0					
ANR	1572462	Identifier	ARG_TEST		1572299	1					
ANR	1572463	ReturnStatement	return 1 ;	1369:3:42115:42123	1572299	1	True				
ANR	1572464	PrimaryExpression	1		1572299	0					
ANR	1572465	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 ) ) ) )"	1370:2:42127:42326	1572299	2	True				
ANR	1572466	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 ) ) ) )"		1572299	0					
ANR	1572467	Callee	FAIL_IF		1572299	0					
ANR	1572468	Identifier	FAIL_IF		1572299	0					
ANR	1572469	ArgumentList	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 ) ) )"		1572299	1					
ANR	1572470	Argument	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 ) ) )"		1572299	0					
ANR	1572471	CallExpression	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 ) ) )"		1572299	0					
ANR	1572472	Callee	push_inst		1572299	0					
ANR	1572473	Identifier	push_inst		1572299	0					
ANR	1572474	ArgumentList	compiler		1572299	1					
ANR	1572475	Argument	compiler		1572299	0					
ANR	1572476	Identifier	compiler		1572299	0					
ANR	1572477	Argument	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 ) )"		1572299	1					
ANR	1572478	CallExpression	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 ) )"		1572299	0					
ANR	1572479	Callee	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572480	Identifier	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572481	ArgumentList	inp_flags		1572299	1					
ANR	1572482	Argument	inp_flags		1572299	0					
ANR	1572483	Identifier	inp_flags		1572299	0					
ANR	1572484	Argument	1		1572299	1					
ANR	1572485	PrimaryExpression	1		1572299	0					
ANR	1572486	Argument	inp_flags & WRITE_BACK		1572299	2					
ANR	1572487	BitAndExpression	inp_flags & WRITE_BACK		1572299	0		&			
ANR	1572488	Identifier	inp_flags		1572299	0					
ANR	1572489	Identifier	WRITE_BACK		1572299	1					
ANR	1572490	Argument	reg		1572299	3					
ANR	1572491	Identifier	reg		1572299	0					
ANR	1572492	Argument	arg & REG_MASK		1572299	4					
ANR	1572493	BitAndExpression	arg & REG_MASK		1572299	0		&			
ANR	1572494	Identifier	arg		1572299	0					
ANR	1572495	Identifier	REG_MASK		1572299	1					
ANR	1572496	Argument	RM ( OFFS_REG ( arg ) ) | ( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 )		1572299	5					
ANR	1572497	InclusiveOrExpression	RM ( OFFS_REG ( arg ) ) | ( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 )		1572299	0		|			
ANR	1572498	CallExpression	RM ( OFFS_REG ( arg ) )		1572299	0					
ANR	1572499	Callee	RM		1572299	0					
ANR	1572500	Identifier	RM		1572299	0					
ANR	1572501	ArgumentList	OFFS_REG ( arg )		1572299	1					
ANR	1572502	Argument	OFFS_REG ( arg )		1572299	0					
ANR	1572503	CallExpression	OFFS_REG ( arg )		1572299	0					
ANR	1572504	Callee	OFFS_REG		1572299	0					
ANR	1572505	Identifier	OFFS_REG		1572299	0					
ANR	1572506	ArgumentList	arg		1572299	1					
ANR	1572507	Argument	arg		1572299	0					
ANR	1572508	Identifier	arg		1572299	0					
ANR	1572509	InclusiveOrExpression	( IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0 ) | ( ( argw & 0x3 ) << 7 )		1572299	1		|			
ANR	1572510	ConditionalExpression	IS_TYPE1_TRANSFER ( inp_flags ) ? SRC2_IMM : 0		1572299	0					
ANR	1572511	Condition	IS_TYPE1_TRANSFER ( inp_flags )		1572299	0					
ANR	1572512	CallExpression	IS_TYPE1_TRANSFER ( inp_flags )		1572299	0					
ANR	1572513	Callee	IS_TYPE1_TRANSFER		1572299	0					
ANR	1572514	Identifier	IS_TYPE1_TRANSFER		1572299	0					
ANR	1572515	ArgumentList	inp_flags		1572299	1					
ANR	1572516	Argument	inp_flags		1572299	0					
ANR	1572517	Identifier	inp_flags		1572299	0					
ANR	1572518	Identifier	SRC2_IMM		1572299	1					
ANR	1572519	PrimaryExpression	0		1572299	2					
ANR	1572520	ShiftExpression	( argw & 0x3 ) << 7		1572299	1		<<			
ANR	1572521	BitAndExpression	argw & 0x3		1572299	0		&			
ANR	1572522	Identifier	argw		1572299	0					
ANR	1572523	PrimaryExpression	0x3		1572299	1					
ANR	1572524	PrimaryExpression	7		1572299	1					
ANR	1572525	ReturnStatement	return - 1 ;	1372:2:42330:42339	1572299	3	True				
ANR	1572526	UnaryOperationExpression	- 1		1572299	0					
ANR	1572527	UnaryOperator	-		1572299	0					
ANR	1572528	PrimaryExpression	1		1572299	1					
ANR	1572529	IfStatement	if ( IS_TYPE1_TRANSFER ( inp_flags ) )		1572299	5					
ANR	1572530	Condition	IS_TYPE1_TRANSFER ( inp_flags )	1375:5:42350:42377	1572299	0	True				
ANR	1572531	CallExpression	IS_TYPE1_TRANSFER ( inp_flags )		1572299	0					
ANR	1572532	Callee	IS_TYPE1_TRANSFER		1572299	0					
ANR	1572533	Identifier	IS_TYPE1_TRANSFER		1572299	0					
ANR	1572534	ArgumentList	inp_flags		1572299	1					
ANR	1572535	Argument	inp_flags		1572299	0					
ANR	1572536	Identifier	inp_flags		1572299	0					
ANR	1572537	CompoundStatement		39:35:926:926	1572299	1					
ANR	1572538	IfStatement	if ( argw >= 0 && argw <= 0xfff )		1572299	0					
ANR	1572539	Condition	argw >= 0 && argw <= 0xfff	1376:6:42388:42413	1572299	0	True				
ANR	1572540	AndExpression	argw >= 0 && argw <= 0xfff		1572299	0		&&			
ANR	1572541	RelationalExpression	argw >= 0		1572299	0		>=			
ANR	1572542	Identifier	argw		1572299	0					
ANR	1572543	PrimaryExpression	0		1572299	1					
ANR	1572544	RelationalExpression	argw <= 0xfff		1572299	1		<=			
ANR	1572545	Identifier	argw		1572299	0					
ANR	1572546	PrimaryExpression	0xfff		1572299	1					
ANR	1572547	CompoundStatement		40:34:962:962	1572299	1					
ANR	1572548	IfStatement	if ( inp_flags & ARG_TEST )		1572299	0					
ANR	1572549	Condition	inp_flags & ARG_TEST	1377:7:42425:42444	1572299	0	True				
ANR	1572550	BitAndExpression	inp_flags & ARG_TEST		1572299	0		&			
ANR	1572551	Identifier	inp_flags		1572299	0					
ANR	1572552	Identifier	ARG_TEST		1572299	1					
ANR	1572553	ReturnStatement	return 1 ;	1378:4:42451:42459	1572299	1	True				
ANR	1572554	PrimaryExpression	1		1572299	0					
ANR	1572555	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , argw ) ) )"	1379:3:42464:42577	1572299	1	True				
ANR	1572556	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , argw ) ) )"		1572299	0					
ANR	1572557	Callee	FAIL_IF		1572299	0					
ANR	1572558	Identifier	FAIL_IF		1572299	0					
ANR	1572559	ArgumentList	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , argw ) )"		1572299	1					
ANR	1572560	Argument	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , argw ) )"		1572299	0					
ANR	1572561	CallExpression	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , argw ) )"		1572299	0					
ANR	1572562	Callee	push_inst		1572299	0					
ANR	1572563	Identifier	push_inst		1572299	0					
ANR	1572564	ArgumentList	compiler		1572299	1					
ANR	1572565	Argument	compiler		1572299	0					
ANR	1572566	Identifier	compiler		1572299	0					
ANR	1572567	Argument	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , argw )"		1572299	1					
ANR	1572568	CallExpression	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , argw )"		1572299	0					
ANR	1572569	Callee	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572570	Identifier	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572571	ArgumentList	inp_flags		1572299	1					
ANR	1572572	Argument	inp_flags		1572299	0					
ANR	1572573	Identifier	inp_flags		1572299	0					
ANR	1572574	Argument	1		1572299	1					
ANR	1572575	PrimaryExpression	1		1572299	0					
ANR	1572576	Argument	inp_flags & WRITE_BACK		1572299	2					
ANR	1572577	BitAndExpression	inp_flags & WRITE_BACK		1572299	0		&			
ANR	1572578	Identifier	inp_flags		1572299	0					
ANR	1572579	Identifier	WRITE_BACK		1572299	1					
ANR	1572580	Argument	reg		1572299	3					
ANR	1572581	Identifier	reg		1572299	0					
ANR	1572582	Argument	arg & REG_MASK		1572299	4					
ANR	1572583	BitAndExpression	arg & REG_MASK		1572299	0		&			
ANR	1572584	Identifier	arg		1572299	0					
ANR	1572585	Identifier	REG_MASK		1572299	1					
ANR	1572586	Argument	argw		1572299	5					
ANR	1572587	Identifier	argw		1572299	0					
ANR	1572588	ReturnStatement	return - 1 ;	1380:3:42582:42591	1572299	2	True				
ANR	1572589	UnaryOperationExpression	- 1		1572299	0					
ANR	1572590	UnaryOperator	-		1572299	0					
ANR	1572591	PrimaryExpression	1		1572299	1					
ANR	1572592	IfStatement	if ( argw < 0 && argw >= - 0xfff )		1572299	1					
ANR	1572593	Condition	argw < 0 && argw >= - 0xfff	1382:6:42603:42628	1572299	0	True				
ANR	1572594	AndExpression	argw < 0 && argw >= - 0xfff		1572299	0		&&			
ANR	1572595	RelationalExpression	argw < 0		1572299	0		<			
ANR	1572596	Identifier	argw		1572299	0					
ANR	1572597	PrimaryExpression	0		1572299	1					
ANR	1572598	RelationalExpression	argw >= - 0xfff		1572299	1		>=			
ANR	1572599	Identifier	argw		1572299	0					
ANR	1572600	UnaryOperationExpression	- 0xfff		1572299	1					
ANR	1572601	UnaryOperator	-		1572299	0					
ANR	1572602	PrimaryExpression	0xfff		1572299	1					
ANR	1572603	CompoundStatement		46:34:1177:1177	1572299	1					
ANR	1572604	IfStatement	if ( inp_flags & ARG_TEST )		1572299	0					
ANR	1572605	Condition	inp_flags & ARG_TEST	1383:7:42640:42659	1572299	0	True				
ANR	1572606	BitAndExpression	inp_flags & ARG_TEST		1572299	0		&			
ANR	1572607	Identifier	inp_flags		1572299	0					
ANR	1572608	Identifier	ARG_TEST		1572299	1					
ANR	1572609	ReturnStatement	return 1 ;	1384:4:42666:42674	1572299	1	True				
ANR	1572610	PrimaryExpression	1		1572299	0					
ANR	1572611	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , - argw ) ) )"	1385:3:42679:42793	1572299	1	True				
ANR	1572612	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , - argw ) ) )"		1572299	0					
ANR	1572613	Callee	FAIL_IF		1572299	0					
ANR	1572614	Identifier	FAIL_IF		1572299	0					
ANR	1572615	ArgumentList	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , - argw ) )"		1572299	1					
ANR	1572616	Argument	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , - argw ) )"		1572299	0					
ANR	1572617	CallExpression	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , - argw ) )"		1572299	0					
ANR	1572618	Callee	push_inst		1572299	0					
ANR	1572619	Identifier	push_inst		1572299	0					
ANR	1572620	ArgumentList	compiler		1572299	1					
ANR	1572621	Argument	compiler		1572299	0					
ANR	1572622	Identifier	compiler		1572299	0					
ANR	1572623	Argument	"EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , - argw )"		1572299	1					
ANR	1572624	CallExpression	"EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , - argw )"		1572299	0					
ANR	1572625	Callee	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572626	Identifier	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572627	ArgumentList	inp_flags		1572299	1					
ANR	1572628	Argument	inp_flags		1572299	0					
ANR	1572629	Identifier	inp_flags		1572299	0					
ANR	1572630	Argument	0		1572299	1					
ANR	1572631	PrimaryExpression	0		1572299	0					
ANR	1572632	Argument	inp_flags & WRITE_BACK		1572299	2					
ANR	1572633	BitAndExpression	inp_flags & WRITE_BACK		1572299	0		&			
ANR	1572634	Identifier	inp_flags		1572299	0					
ANR	1572635	Identifier	WRITE_BACK		1572299	1					
ANR	1572636	Argument	reg		1572299	3					
ANR	1572637	Identifier	reg		1572299	0					
ANR	1572638	Argument	arg & REG_MASK		1572299	4					
ANR	1572639	BitAndExpression	arg & REG_MASK		1572299	0		&			
ANR	1572640	Identifier	arg		1572299	0					
ANR	1572641	Identifier	REG_MASK		1572299	1					
ANR	1572642	Argument	- argw		1572299	5					
ANR	1572643	UnaryOperationExpression	- argw		1572299	0					
ANR	1572644	UnaryOperator	-		1572299	0					
ANR	1572645	Identifier	argw		1572299	1					
ANR	1572646	ReturnStatement	return - 1 ;	1386:3:42798:42807	1572299	2	True				
ANR	1572647	UnaryOperationExpression	- 1		1572299	0					
ANR	1572648	UnaryOperator	-		1572299	0					
ANR	1572649	PrimaryExpression	1		1572299	1					
ANR	1572650	ElseStatement	else		1572299	0					
ANR	1572651	CompoundStatement		53:6:1368:1368	1572299	0					
ANR	1572652	IfStatement	if ( argw >= 0 && argw <= 0xff )		1572299	0					
ANR	1572653	Condition	argw >= 0 && argw <= 0xff	1390:6:42830:42854	1572299	0	True				
ANR	1572654	AndExpression	argw >= 0 && argw <= 0xff		1572299	0		&&			
ANR	1572655	RelationalExpression	argw >= 0		1572299	0		>=			
ANR	1572656	Identifier	argw		1572299	0					
ANR	1572657	PrimaryExpression	0		1572299	1					
ANR	1572658	RelationalExpression	argw <= 0xff		1572299	1		<=			
ANR	1572659	Identifier	argw		1572299	0					
ANR	1572660	PrimaryExpression	0xff		1572299	1					
ANR	1572661	CompoundStatement		54:33:1403:1403	1572299	1					
ANR	1572662	IfStatement	if ( inp_flags & ARG_TEST )		1572299	0					
ANR	1572663	Condition	inp_flags & ARG_TEST	1391:7:42866:42885	1572299	0	True				
ANR	1572664	BitAndExpression	inp_flags & ARG_TEST		1572299	0		&			
ANR	1572665	Identifier	inp_flags		1572299	0					
ANR	1572666	Identifier	ARG_TEST		1572299	1					
ANR	1572667	ReturnStatement	return 1 ;	1392:4:42892:42900	1572299	1	True				
ANR	1572668	PrimaryExpression	1		1572299	0					
ANR	1572669	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) ) )"	1393:3:42905:43038	1572299	1	True				
ANR	1572670	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) ) )"		1572299	0					
ANR	1572671	Callee	FAIL_IF		1572299	0					
ANR	1572672	Identifier	FAIL_IF		1572299	0					
ANR	1572673	ArgumentList	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) )"		1572299	1					
ANR	1572674	Argument	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) )"		1572299	0					
ANR	1572675	CallExpression	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) )"		1572299	0					
ANR	1572676	Callee	push_inst		1572299	0					
ANR	1572677	Identifier	push_inst		1572299	0					
ANR	1572678	ArgumentList	compiler		1572299	1					
ANR	1572679	Argument	compiler		1572299	0					
ANR	1572680	Identifier	compiler		1572299	0					
ANR	1572681	Argument	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) )"		1572299	1					
ANR	1572682	CallExpression	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) )"		1572299	0					
ANR	1572683	Callee	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572684	Identifier	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572685	ArgumentList	inp_flags		1572299	1					
ANR	1572686	Argument	inp_flags		1572299	0					
ANR	1572687	Identifier	inp_flags		1572299	0					
ANR	1572688	Argument	1		1572299	1					
ANR	1572689	PrimaryExpression	1		1572299	0					
ANR	1572690	Argument	inp_flags & WRITE_BACK		1572299	2					
ANR	1572691	BitAndExpression	inp_flags & WRITE_BACK		1572299	0		&			
ANR	1572692	Identifier	inp_flags		1572299	0					
ANR	1572693	Identifier	WRITE_BACK		1572299	1					
ANR	1572694	Argument	reg		1572299	3					
ANR	1572695	Identifier	reg		1572299	0					
ANR	1572696	Argument	arg & REG_MASK		1572299	4					
ANR	1572697	BitAndExpression	arg & REG_MASK		1572299	0		&			
ANR	1572698	Identifier	arg		1572299	0					
ANR	1572699	Identifier	REG_MASK		1572299	1					
ANR	1572700	Argument	TYPE2_TRANSFER_IMM ( argw )		1572299	5					
ANR	1572701	CallExpression	TYPE2_TRANSFER_IMM ( argw )		1572299	0					
ANR	1572702	Callee	TYPE2_TRANSFER_IMM		1572299	0					
ANR	1572703	Identifier	TYPE2_TRANSFER_IMM		1572299	0					
ANR	1572704	ArgumentList	argw		1572299	1					
ANR	1572705	Argument	argw		1572299	0					
ANR	1572706	Identifier	argw		1572299	0					
ANR	1572707	ReturnStatement	return - 1 ;	1394:3:43043:43052	1572299	2	True				
ANR	1572708	UnaryOperationExpression	- 1		1572299	0					
ANR	1572709	UnaryOperator	-		1572299	0					
ANR	1572710	PrimaryExpression	1		1572299	1					
ANR	1572711	IfStatement	if ( argw < 0 && argw >= - 0xff )		1572299	1					
ANR	1572712	Condition	argw < 0 && argw >= - 0xff	1396:6:43064:43088	1572299	0	True				
ANR	1572713	AndExpression	argw < 0 && argw >= - 0xff		1572299	0		&&			
ANR	1572714	RelationalExpression	argw < 0		1572299	0		<			
ANR	1572715	Identifier	argw		1572299	0					
ANR	1572716	PrimaryExpression	0		1572299	1					
ANR	1572717	RelationalExpression	argw >= - 0xff		1572299	1		>=			
ANR	1572718	Identifier	argw		1572299	0					
ANR	1572719	UnaryOperationExpression	- 0xff		1572299	1					
ANR	1572720	UnaryOperator	-		1572299	0					
ANR	1572721	PrimaryExpression	0xff		1572299	1					
ANR	1572722	CompoundStatement		60:33:1637:1637	1572299	1					
ANR	1572723	IfStatement	if ( inp_flags & ARG_TEST )		1572299	0					
ANR	1572724	Condition	inp_flags & ARG_TEST	1397:7:43100:43119	1572299	0	True				
ANR	1572725	BitAndExpression	inp_flags & ARG_TEST		1572299	0		&			
ANR	1572726	Identifier	inp_flags		1572299	0					
ANR	1572727	Identifier	ARG_TEST		1572299	1					
ANR	1572728	ReturnStatement	return 1 ;	1398:4:43126:43134	1572299	1	True				
ANR	1572729	PrimaryExpression	1		1572299	0					
ANR	1572730	ExpressionStatement	argw = - argw	1399:3:43139:43151	1572299	1	True				
ANR	1572731	AssignmentExpression	argw = - argw		1572299	0		=			
ANR	1572732	Identifier	argw		1572299	0					
ANR	1572733	UnaryOperationExpression	- argw		1572299	1					
ANR	1572734	UnaryOperator	-		1572299	0					
ANR	1572735	Identifier	argw		1572299	1					
ANR	1572736	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) ) )"	1400:3:43156:43289	1572299	2	True				
ANR	1572737	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) ) )"		1572299	0					
ANR	1572738	Callee	FAIL_IF		1572299	0					
ANR	1572739	Identifier	FAIL_IF		1572299	0					
ANR	1572740	ArgumentList	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) )"		1572299	1					
ANR	1572741	Argument	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) )"		1572299	0					
ANR	1572742	CallExpression	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) ) )"		1572299	0					
ANR	1572743	Callee	push_inst		1572299	0					
ANR	1572744	Identifier	push_inst		1572299	0					
ANR	1572745	ArgumentList	compiler		1572299	1					
ANR	1572746	Argument	compiler		1572299	0					
ANR	1572747	Identifier	compiler		1572299	0					
ANR	1572748	Argument	"EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) )"		1572299	1					
ANR	1572749	CallExpression	"EMIT_DATA_TRANSFER ( inp_flags , 0 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , TYPE2_TRANSFER_IMM ( argw ) )"		1572299	0					
ANR	1572750	Callee	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572751	Identifier	EMIT_DATA_TRANSFER		1572299	0					
ANR	1572752	ArgumentList	inp_flags		1572299	1					
ANR	1572753	Argument	inp_flags		1572299	0					
ANR	1572754	Identifier	inp_flags		1572299	0					
ANR	1572755	Argument	0		1572299	1					
ANR	1572756	PrimaryExpression	0		1572299	0					
ANR	1572757	Argument	inp_flags & WRITE_BACK		1572299	2					
ANR	1572758	BitAndExpression	inp_flags & WRITE_BACK		1572299	0		&			
ANR	1572759	Identifier	inp_flags		1572299	0					
ANR	1572760	Identifier	WRITE_BACK		1572299	1					
ANR	1572761	Argument	reg		1572299	3					
ANR	1572762	Identifier	reg		1572299	0					
ANR	1572763	Argument	arg & REG_MASK		1572299	4					
ANR	1572764	BitAndExpression	arg & REG_MASK		1572299	0		&			
ANR	1572765	Identifier	arg		1572299	0					
ANR	1572766	Identifier	REG_MASK		1572299	1					
ANR	1572767	Argument	TYPE2_TRANSFER_IMM ( argw )		1572299	5					
ANR	1572768	CallExpression	TYPE2_TRANSFER_IMM ( argw )		1572299	0					
ANR	1572769	Callee	TYPE2_TRANSFER_IMM		1572299	0					
ANR	1572770	Identifier	TYPE2_TRANSFER_IMM		1572299	0					
ANR	1572771	ArgumentList	argw		1572299	1					
ANR	1572772	Argument	argw		1572299	0					
ANR	1572773	Identifier	argw		1572299	0					
ANR	1572774	ReturnStatement	return - 1 ;	1401:3:43294:43303	1572299	3	True				
ANR	1572775	UnaryOperationExpression	- 1		1572299	0					
ANR	1572776	UnaryOperator	-		1572299	0					
ANR	1572777	PrimaryExpression	1		1572299	1					
ANR	1572778	ReturnStatement	return 0 ;	1405:1:43314:43322	1572299	6	True				
ANR	1572779	PrimaryExpression	0		1572299	0					
ANR	1572780	ReturnType	static sljit_si		1572299	1					
ANR	1572781	Identifier	getput_arg_fast		1572299	2					
ANR	1572782	ParameterList	"struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1572299	3					
ANR	1572783	Parameter	struct sljit_compiler * compiler	1336:32:41357:41387	1572299	0	True				
ANR	1572784	ParameterType	struct sljit_compiler *		1572299	0					
ANR	1572785	Identifier	compiler		1572299	1					
ANR	1572786	Parameter	sljit_si inp_flags	1336:65:41390:41407	1572299	1	True				
ANR	1572787	ParameterType	sljit_si		1572299	0					
ANR	1572788	Identifier	inp_flags		1572299	1					
ANR	1572789	Parameter	sljit_si reg	1336:85:41410:41421	1572299	2	True				
ANR	1572790	ParameterType	sljit_si		1572299	0					
ANR	1572791	Identifier	reg		1572299	1					
ANR	1572792	Parameter	sljit_si arg	1336:99:41424:41435	1572299	3	True				
ANR	1572793	ParameterType	sljit_si		1572299	0					
ANR	1572794	Identifier	arg		1572299	1					
ANR	1572795	Parameter	sljit_sw argw	1336:113:41438:41450	1572299	4	True				
ANR	1572796	ParameterType	sljit_sw		1572299	0					
ANR	1572797	Identifier	argw		1572299	1					
ANR	1572798	CFGEntryNode	ENTRY		1572299		True				
ANR	1572799	CFGExitNode	EXIT		1572299		True				
ANR	1572800	Symbol	~argw		1572299						
ANR	1572801	Symbol	MVN_DP		1572299						
ANR	1572802	Symbol	SLJIT_MEM		1572299						
ANR	1572803	Symbol	imm		1572299						
ANR	1572804	Symbol	inp_flags		1572299						
ANR	1572805	Symbol	argw		1572299						
ANR	1572806	Symbol	ARG_TEST		1572299						
ANR	1572807	Symbol	MOV_DP		1572299						
ANR	1572808	Symbol	SLJIT_IMM		1572299						
ANR	1572809	Symbol	reg		1572299						
ANR	1572810	Symbol	arg		1572299						
ANR	1572811	Symbol	SRC2_IMM		1572299						
ANR	1572812	Symbol	compiler		1572299						
ANR	1572813	Symbol	WRITE_BACK		1572299						
ANR	1572814	Symbol	push_inst		1572299						
ANR	1572815	Symbol	REG_MASK		1572299						
ANR	1572816	Symbol	OFFS_REG_MASK		1572299						
ANR	1572817	Symbol	get_imm		1572299						
ANR	1572818	Symbol	SLJIT_UNUSED		1572299						
ANR	1572819	Symbol	TYPE2_TRANSFER_IMM		1572299						
ANR	1572820	Symbol	RM		1572299						
ANR	1572821	Symbol	OFFS_REG		1572299						
ANR	1572822	Symbol	IS_TYPE1_TRANSFER		1572299						
ANR	1572823	Symbol	EMIT_DATA_PROCESS_INS		1572299						
ANR	1572824	Symbol	EMIT_DATA_TRANSFER		1572299						
ANR	1572825	Function	can_cache	1411:0:43477:44249							
ANR	1572826	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1572825	0					
ANR	1572827	CompoundStatement		1412:0:43571:44249	1572825	0					
ANR	1572828	IfStatement	if ( arg & SLJIT_IMM )		1572825	0					
ANR	1572829	Condition	arg & SLJIT_IMM	1414:5:43671:43685	1572825	0	True				
ANR	1572830	BitAndExpression	arg & SLJIT_IMM		1572825	0		&			
ANR	1572831	Identifier	arg		1572825	0					
ANR	1572832	Identifier	SLJIT_IMM		1572825	1					
ANR	1572833	ReturnStatement	return 0 ;	1415:2:43690:43698	1572825	1	True				
ANR	1572834	PrimaryExpression	0		1572825	0					
ANR	1572835	IfStatement	if ( arg & OFFS_REG_MASK )		1572825	1					
ANR	1572836	Condition	arg & OFFS_REG_MASK	1418:5:43740:43758	1572825	0	True				
ANR	1572837	BitAndExpression	arg & OFFS_REG_MASK		1572825	0		&			
ANR	1572838	Identifier	arg		1572825	0					
ANR	1572839	Identifier	OFFS_REG_MASK		1572825	1					
ANR	1572840	ReturnStatement	return 0 ;	1419:2:43763:43771	1572825	1	True				
ANR	1572841	PrimaryExpression	0		1572825	0					
ANR	1572842	IfStatement	if ( ! ( arg & REG_MASK ) )		1572825	2					
ANR	1572843	Condition	! ( arg & REG_MASK )	1421:5:43779:43795	1572825	0	True				
ANR	1572844	UnaryOperationExpression	! ( arg & REG_MASK )		1572825	0					
ANR	1572845	UnaryOperator	!		1572825	0					
ANR	1572846	BitAndExpression	arg & REG_MASK		1572825	1		&			
ANR	1572847	Identifier	arg		1572825	0					
ANR	1572848	Identifier	REG_MASK		1572825	1					
ANR	1572849	CompoundStatement		10:24:226:226	1572825	1					
ANR	1572850	IfStatement	if ( ( next_arg & SLJIT_MEM ) && ( ( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff || ( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff ) )		1572825	0					
ANR	1572851	Condition	( next_arg & SLJIT_MEM ) && ( ( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff || ( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff )	1423:6:43832:43953	1572825	0	True				
ANR	1572852	AndExpression	( next_arg & SLJIT_MEM ) && ( ( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff || ( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff )		1572825	0		&&			
ANR	1572853	BitAndExpression	next_arg & SLJIT_MEM		1572825	0		&			
ANR	1572854	Identifier	next_arg		1572825	0					
ANR	1572855	Identifier	SLJIT_MEM		1572825	1					
ANR	1572856	OrExpression	( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff || ( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff		1572825	1		||			
ANR	1572857	RelationalExpression	( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff		1572825	0		<=			
ANR	1572858	AdditiveExpression	( sljit_uw ) argw - ( sljit_uw ) next_argw		1572825	0		-			
ANR	1572859	CastExpression	( sljit_uw ) argw		1572825	0					
ANR	1572860	CastTarget	sljit_uw		1572825	0					
ANR	1572861	Identifier	argw		1572825	1					
ANR	1572862	CastExpression	( sljit_uw ) next_argw		1572825	1					
ANR	1572863	CastTarget	sljit_uw		1572825	0					
ANR	1572864	Identifier	next_argw		1572825	1					
ANR	1572865	PrimaryExpression	0xfff		1572825	1					
ANR	1572866	RelationalExpression	( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff		1572825	1		<=			
ANR	1572867	AdditiveExpression	( sljit_uw ) next_argw - ( sljit_uw ) argw		1572825	0		-			
ANR	1572868	CastExpression	( sljit_uw ) next_argw		1572825	0					
ANR	1572869	CastTarget	sljit_uw		1572825	0					
ANR	1572870	Identifier	next_argw		1572825	1					
ANR	1572871	CastExpression	( sljit_uw ) argw		1572825	1					
ANR	1572872	CastTarget	sljit_uw		1572825	0					
ANR	1572873	Identifier	argw		1572825	1					
ANR	1572874	PrimaryExpression	0xfff		1572825	1					
ANR	1572875	ReturnStatement	return 1 ;	1424:3:43959:43967	1572825	1	True				
ANR	1572876	PrimaryExpression	1		1572825	0					
ANR	1572877	ReturnStatement	return 0 ;	1425:2:43971:43979	1572825	1	True				
ANR	1572878	PrimaryExpression	0		1572825	0					
ANR	1572879	IfStatement	if ( argw <= 0xfffff && argw >= - 0xfffff )		1572825	3					
ANR	1572880	Condition	argw <= 0xfffff && argw >= - 0xfffff	1428:5:43990:44024	1572825	0	True				
ANR	1572881	AndExpression	argw <= 0xfffff && argw >= - 0xfffff		1572825	0		&&			
ANR	1572882	RelationalExpression	argw <= 0xfffff		1572825	0		<=			
ANR	1572883	Identifier	argw		1572825	0					
ANR	1572884	PrimaryExpression	0xfffff		1572825	1					
ANR	1572885	RelationalExpression	argw >= - 0xfffff		1572825	1		>=			
ANR	1572886	Identifier	argw		1572825	0					
ANR	1572887	UnaryOperationExpression	- 0xfffff		1572825	1					
ANR	1572888	UnaryOperator	-		1572825	0					
ANR	1572889	PrimaryExpression	0xfffff		1572825	1					
ANR	1572890	ReturnStatement	return 0 ;	1429:2:44029:44037	1572825	1	True				
ANR	1572891	PrimaryExpression	0		1572825	0					
ANR	1572892	IfStatement	if ( argw == next_argw && ( next_arg & SLJIT_MEM ) )		1572825	4					
ANR	1572893	Condition	argw == next_argw && ( next_arg & SLJIT_MEM )	1431:5:44045:44087	1572825	0	True				
ANR	1572894	AndExpression	argw == next_argw && ( next_arg & SLJIT_MEM )		1572825	0		&&			
ANR	1572895	EqualityExpression	argw == next_argw		1572825	0		==			
ANR	1572896	Identifier	argw		1572825	0					
ANR	1572897	Identifier	next_argw		1572825	1					
ANR	1572898	BitAndExpression	next_arg & SLJIT_MEM		1572825	1		&			
ANR	1572899	Identifier	next_arg		1572825	0					
ANR	1572900	Identifier	SLJIT_MEM		1572825	1					
ANR	1572901	ReturnStatement	return 1 ;	1432:2:44092:44100	1572825	1	True				
ANR	1572902	PrimaryExpression	1		1572825	0					
ANR	1572903	IfStatement	if ( arg == next_arg && ( ( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff || ( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff ) )		1572825	5					
ANR	1572904	Condition	arg == next_arg && ( ( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff || ( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff )	1434:5:44108:44222	1572825	0	True				
ANR	1572905	AndExpression	arg == next_arg && ( ( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff || ( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff )		1572825	0		&&			
ANR	1572906	EqualityExpression	arg == next_arg		1572825	0		==			
ANR	1572907	Identifier	arg		1572825	0					
ANR	1572908	Identifier	next_arg		1572825	1					
ANR	1572909	OrExpression	( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff || ( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff		1572825	1		||			
ANR	1572910	RelationalExpression	( sljit_uw ) argw - ( sljit_uw ) next_argw <= 0xfff		1572825	0		<=			
ANR	1572911	AdditiveExpression	( sljit_uw ) argw - ( sljit_uw ) next_argw		1572825	0		-			
ANR	1572912	CastExpression	( sljit_uw ) argw		1572825	0					
ANR	1572913	CastTarget	sljit_uw		1572825	0					
ANR	1572914	Identifier	argw		1572825	1					
ANR	1572915	CastExpression	( sljit_uw ) next_argw		1572825	1					
ANR	1572916	CastTarget	sljit_uw		1572825	0					
ANR	1572917	Identifier	next_argw		1572825	1					
ANR	1572918	PrimaryExpression	0xfff		1572825	1					
ANR	1572919	RelationalExpression	( sljit_uw ) next_argw - ( sljit_uw ) argw <= 0xfff		1572825	1		<=			
ANR	1572920	AdditiveExpression	( sljit_uw ) next_argw - ( sljit_uw ) argw		1572825	0		-			
ANR	1572921	CastExpression	( sljit_uw ) next_argw		1572825	0					
ANR	1572922	CastTarget	sljit_uw		1572825	0					
ANR	1572923	Identifier	next_argw		1572825	1					
ANR	1572924	CastExpression	( sljit_uw ) argw		1572825	1					
ANR	1572925	CastTarget	sljit_uw		1572825	0					
ANR	1572926	Identifier	argw		1572825	1					
ANR	1572927	PrimaryExpression	0xfff		1572825	1					
ANR	1572928	ReturnStatement	return 1 ;	1435:2:44227:44235	1572825	1	True				
ANR	1572929	PrimaryExpression	1		1572825	0					
ANR	1572930	ReturnStatement	return 0 ;	1437:1:44239:44247	1572825	6	True				
ANR	1572931	PrimaryExpression	0		1572825	0					
ANR	1572932	ReturnType	static sljit_si		1572825	1					
ANR	1572933	Identifier	can_cache		1572825	2					
ANR	1572934	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1572825	3					
ANR	1572935	Parameter	sljit_si arg	1411:26:43503:43514	1572825	0	True				
ANR	1572936	ParameterType	sljit_si		1572825	0					
ANR	1572937	Identifier	arg		1572825	1					
ANR	1572938	Parameter	sljit_sw argw	1411:40:43517:43529	1572825	1	True				
ANR	1572939	ParameterType	sljit_sw		1572825	0					
ANR	1572940	Identifier	argw		1572825	1					
ANR	1572941	Parameter	sljit_si next_arg	1411:55:43532:43548	1572825	2	True				
ANR	1572942	ParameterType	sljit_si		1572825	0					
ANR	1572943	Identifier	next_arg		1572825	1					
ANR	1572944	Parameter	sljit_sw next_argw	1411:74:43551:43568	1572825	3	True				
ANR	1572945	ParameterType	sljit_sw		1572825	0					
ANR	1572946	Identifier	next_argw		1572825	1					
ANR	1572947	CFGEntryNode	ENTRY		1572825		True				
ANR	1572948	CFGExitNode	EXIT		1572825		True				
ANR	1572949	Symbol	next_arg		1572825						
ANR	1572950	Symbol	SLJIT_IMM		1572825						
ANR	1572951	Symbol	REG_MASK		1572825						
ANR	1572952	Symbol	SLJIT_MEM		1572825						
ANR	1572953	Symbol	arg		1572825						
ANR	1572954	Symbol	OFFS_REG_MASK		1572825						
ANR	1572955	Symbol	next_argw		1572825						
ANR	1572956	Symbol	argw		1572825						
ANR	1572957	DeclStmt									
ANR	1572958	Decl							arg	arg &	REG_MASK
ANR	1572959	Function	getput_arg	1459:0:45001:49412							
ANR	1572960	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1572959	0					
ANR	1572961	CompoundStatement		1460:0:45163:49412	1572959	0					
ANR	1572962	IdentifierDeclStatement	sljit_si tmp_r ;	1461:1:45166:45180	1572959	0	True				
ANR	1572963	IdentifierDecl	tmp_r		1572959	0					
ANR	1572964	IdentifierDeclType	sljit_si		1572959	0					
ANR	1572965	Identifier	tmp_r		1572959	1					
ANR	1572966	IdentifierDeclStatement	sljit_sw max_delta ;	1462:1:45183:45201	1572959	1	True				
ANR	1572967	IdentifierDecl	max_delta		1572959	0					
ANR	1572968	IdentifierDeclType	sljit_sw		1572959	0					
ANR	1572969	Identifier	max_delta		1572959	1					
ANR	1572970	IdentifierDeclStatement	sljit_sw sign ;	1463:1:45204:45217	1572959	2	True				
ANR	1572971	IdentifierDecl	sign		1572959	0					
ANR	1572972	IdentifierDeclType	sljit_sw		1572959	0					
ANR	1572973	Identifier	sign		1572959	1					
ANR	1572974	IdentifierDeclStatement	sljit_uw imm ;	1464:1:45220:45232	1572959	3	True				
ANR	1572975	IdentifierDecl	imm		1572959	0					
ANR	1572976	IdentifierDeclType	sljit_uw		1572959	0					
ANR	1572977	Identifier	imm		1572959	1					
ANR	1572978	IfStatement	if ( arg & SLJIT_IMM )		1572959	4					
ANR	1572979	Condition	arg & SLJIT_IMM	1466:5:45240:45254	1572959	0	True				
ANR	1572980	BitAndExpression	arg & SLJIT_IMM		1572959	0		&			
ANR	1572981	Identifier	arg		1572959	0					
ANR	1572982	Identifier	SLJIT_IMM		1572959	1					
ANR	1572983	CompoundStatement		7:22:93:93	1572959	1					
ANR	1572984	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1467:2:45261:45296	1572959	0	True				
ANR	1572985	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1572959	0					
ANR	1572986	Callee	SLJIT_ASSERT		1572959	0					
ANR	1572987	Identifier	SLJIT_ASSERT		1572959	0					
ANR	1572988	ArgumentList	inp_flags & LOAD_DATA		1572959	1					
ANR	1572989	Argument	inp_flags & LOAD_DATA		1572959	0					
ANR	1572990	BitAndExpression	inp_flags & LOAD_DATA		1572959	0		&			
ANR	1572991	Identifier	inp_flags		1572959	0					
ANR	1572992	Identifier	LOAD_DATA		1572959	1					
ANR	1572993	ReturnStatement	"return load_immediate ( compiler , reg , argw ) ;"	1468:2:45300:45342	1572959	1	True				
ANR	1572994	CallExpression	"load_immediate ( compiler , reg , argw )"		1572959	0					
ANR	1572995	Callee	load_immediate		1572959	0					
ANR	1572996	Identifier	load_immediate		1572959	0					
ANR	1572997	ArgumentList	compiler		1572959	1					
ANR	1572998	Argument	compiler		1572959	0					
ANR	1572999	Identifier	compiler		1572959	0					
ANR	1573000	Argument	reg		1572959	1					
ANR	1573001	Identifier	reg		1572959	0					
ANR	1573002	Argument	argw		1572959	2					
ANR	1573003	Identifier	argw		1572959	0					
ANR	1573004	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	1471:1:45349:45378	1572959	5	True				
ANR	1573005	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1572959	0					
ANR	1573006	Callee	SLJIT_ASSERT		1572959	0					
ANR	1573007	Identifier	SLJIT_ASSERT		1572959	0					
ANR	1573008	ArgumentList	arg & SLJIT_MEM		1572959	1					
ANR	1573009	Argument	arg & SLJIT_MEM		1572959	0					
ANR	1573010	BitAndExpression	arg & SLJIT_MEM		1572959	0		&			
ANR	1573011	Identifier	arg		1572959	0					
ANR	1573012	Identifier	SLJIT_MEM		1572959	1					
ANR	1573013	ExpressionStatement	tmp_r = ( inp_flags & LOAD_DATA ) ? reg : TMP_REG3	1473:1:45382:45430	1572959	6	True				
ANR	1573014	AssignmentExpression	tmp_r = ( inp_flags & LOAD_DATA ) ? reg : TMP_REG3		1572959	0		=			
ANR	1573015	Identifier	tmp_r		1572959	0					
ANR	1573016	ConditionalExpression	( inp_flags & LOAD_DATA ) ? reg : TMP_REG3		1572959	1					
ANR	1573017	Condition	inp_flags & LOAD_DATA		1572959	0					
ANR	1573018	BitAndExpression	inp_flags & LOAD_DATA		1572959	0		&			
ANR	1573019	Identifier	inp_flags		1572959	0					
ANR	1573020	Identifier	LOAD_DATA		1572959	1					
ANR	1573021	Identifier	reg		1572959	1					
ANR	1573022	Identifier	TMP_REG3		1572959	2					
ANR	1573023	ExpressionStatement	max_delta = IS_TYPE1_TRANSFER ( inp_flags ) ? 0xfff : 0xff	1474:1:45433:45488	1572959	7	True				
ANR	1573024	AssignmentExpression	max_delta = IS_TYPE1_TRANSFER ( inp_flags ) ? 0xfff : 0xff		1572959	0		=			
ANR	1573025	Identifier	max_delta		1572959	0					
ANR	1573026	ConditionalExpression	IS_TYPE1_TRANSFER ( inp_flags ) ? 0xfff : 0xff		1572959	1					
ANR	1573027	Condition	IS_TYPE1_TRANSFER ( inp_flags )		1572959	0					
ANR	1573028	CallExpression	IS_TYPE1_TRANSFER ( inp_flags )		1572959	0					
ANR	1573029	Callee	IS_TYPE1_TRANSFER		1572959	0					
ANR	1573030	Identifier	IS_TYPE1_TRANSFER		1572959	0					
ANR	1573031	ArgumentList	inp_flags		1572959	1					
ANR	1573032	Argument	inp_flags		1572959	0					
ANR	1573033	Identifier	inp_flags		1572959	0					
ANR	1573034	PrimaryExpression	0xfff		1572959	1					
ANR	1573035	PrimaryExpression	0xff		1572959	2					
ANR	1573036	IfStatement	if ( ( arg & REG_MASK ) == SLJIT_UNUSED )		1572959	8					
ANR	1573037	Condition	( arg & REG_MASK ) == SLJIT_UNUSED	1476:5:45496:45527	1572959	0	True				
ANR	1573038	EqualityExpression	( arg & REG_MASK ) == SLJIT_UNUSED		1572959	0		==			
ANR	1573039	BitAndExpression	arg & REG_MASK		1572959	0		&			
ANR	1573040	Identifier	arg		1572959	0					
ANR	1573041	Identifier	REG_MASK		1572959	1					
ANR	1573042	Identifier	SLJIT_UNUSED		1572959	1					
ANR	1573043	CompoundStatement		17:39:366:366	1572959	1					
ANR	1573044	ExpressionStatement	imm = ( sljit_uw ) ( argw - compiler -> cache_argw )	1478:2:45566:45611	1572959	0	True				
ANR	1573045	AssignmentExpression	imm = ( sljit_uw ) ( argw - compiler -> cache_argw )		1572959	0		=			
ANR	1573046	Identifier	imm		1572959	0					
ANR	1573047	CastExpression	( sljit_uw ) ( argw - compiler -> cache_argw )		1572959	1					
ANR	1573048	CastTarget	sljit_uw		1572959	0					
ANR	1573049	AdditiveExpression	argw - compiler -> cache_argw		1572959	1		-			
ANR	1573050	Identifier	argw		1572959	0					
ANR	1573051	PtrMemberAccess	compiler -> cache_argw		1572959	1					
ANR	1573052	Identifier	compiler		1572959	0					
ANR	1573053	Identifier	cache_argw		1572959	1					
ANR	1573054	IfStatement	if ( ( compiler -> cache_arg & SLJIT_IMM ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta ) )		1572959	1					
ANR	1573055	Condition	( compiler -> cache_arg & SLJIT_IMM ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta )	1479:6:45619:45714	1572959	0	True				
ANR	1573056	AndExpression	( compiler -> cache_arg & SLJIT_IMM ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta )		1572959	0		&&			
ANR	1573057	BitAndExpression	compiler -> cache_arg & SLJIT_IMM		1572959	0		&			
ANR	1573058	PtrMemberAccess	compiler -> cache_arg		1572959	0					
ANR	1573059	Identifier	compiler		1572959	0					
ANR	1573060	Identifier	cache_arg		1572959	1					
ANR	1573061	Identifier	SLJIT_IMM		1572959	1					
ANR	1573062	OrExpression	imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta		1572959	1		||			
ANR	1573063	RelationalExpression	imm <= ( sljit_uw ) max_delta		1572959	0		<=			
ANR	1573064	Identifier	imm		1572959	0					
ANR	1573065	CastExpression	( sljit_uw ) max_delta		1572959	1					
ANR	1573066	CastTarget	sljit_uw		1572959	0					
ANR	1573067	Identifier	max_delta		1572959	1					
ANR	1573068	RelationalExpression	imm >= ( sljit_uw ) - max_delta		1572959	1		>=			
ANR	1573069	Identifier	imm		1572959	0					
ANR	1573070	CastExpression	( sljit_uw ) - max_delta		1572959	1					
ANR	1573071	CastTarget	sljit_uw		1572959	0					
ANR	1573072	UnaryOperationExpression	- max_delta		1572959	1					
ANR	1573073	UnaryOperator	-		1572959	0					
ANR	1573074	Identifier	max_delta		1572959	1					
ANR	1573075	CompoundStatement		20:104:553:553	1572959	1					
ANR	1573076	IfStatement	if ( imm <= ( sljit_uw ) max_delta )		1572959	0					
ANR	1573077	Condition	imm <= ( sljit_uw ) max_delta	1480:7:45726:45751	1572959	0	True				
ANR	1573078	RelationalExpression	imm <= ( sljit_uw ) max_delta		1572959	0		<=			
ANR	1573079	Identifier	imm		1572959	0					
ANR	1573080	CastExpression	( sljit_uw ) max_delta		1572959	1					
ANR	1573081	CastTarget	sljit_uw		1572959	0					
ANR	1573082	Identifier	max_delta		1572959	1					
ANR	1573083	CompoundStatement		21:35:590:590	1572959	1					
ANR	1573084	ExpressionStatement	sign = 1	1481:4:45760:45768	1572959	0	True				
ANR	1573085	AssignmentExpression	sign = 1		1572959	0		=			
ANR	1573086	Identifier	sign		1572959	0					
ANR	1573087	PrimaryExpression	1		1572959	1					
ANR	1573088	ExpressionStatement	argw = argw - compiler -> cache_argw	1482:4:45774:45808	1572959	1	True				
ANR	1573089	AssignmentExpression	argw = argw - compiler -> cache_argw		1572959	0		=			
ANR	1573090	Identifier	argw		1572959	0					
ANR	1573091	AdditiveExpression	argw - compiler -> cache_argw		1572959	1		-			
ANR	1573092	Identifier	argw		1572959	0					
ANR	1573093	PtrMemberAccess	compiler -> cache_argw		1572959	1					
ANR	1573094	Identifier	compiler		1572959	0					
ANR	1573095	Identifier	cache_argw		1572959	1					
ANR	1573096	ElseStatement	else		1572959	0					
ANR	1573097	CompoundStatement		25:8:659:659	1572959	0					
ANR	1573098	ExpressionStatement	sign = 0	1485:4:45829:45837	1572959	0	True				
ANR	1573099	AssignmentExpression	sign = 0		1572959	0		=			
ANR	1573100	Identifier	sign		1572959	0					
ANR	1573101	PrimaryExpression	0		1572959	1					
ANR	1573102	ExpressionStatement	argw = compiler -> cache_argw - argw	1486:4:45843:45877	1572959	1	True				
ANR	1573103	AssignmentExpression	argw = compiler -> cache_argw - argw		1572959	0		=			
ANR	1573104	Identifier	argw		1572959	0					
ANR	1573105	AdditiveExpression	compiler -> cache_argw - argw		1572959	1		-			
ANR	1573106	PtrMemberAccess	compiler -> cache_argw		1572959	0					
ANR	1573107	Identifier	compiler		1572959	0					
ANR	1573108	Identifier	cache_argw		1572959	1					
ANR	1573109	Identifier	argw		1572959	1					
ANR	1573110	ExpressionStatement	"GETPUT_ARG_DATA_TRANSFER ( sign , 0 , reg , TMP_REG3 , argw )"	1489:3:45888:45942	1572959	1	True				
ANR	1573111	CallExpression	"GETPUT_ARG_DATA_TRANSFER ( sign , 0 , reg , TMP_REG3 , argw )"		1572959	0					
ANR	1573112	Callee	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573113	Identifier	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573114	ArgumentList	sign		1572959	1					
ANR	1573115	Argument	sign		1572959	0					
ANR	1573116	Identifier	sign		1572959	0					
ANR	1573117	Argument	0		1572959	1					
ANR	1573118	PrimaryExpression	0		1572959	0					
ANR	1573119	Argument	reg		1572959	2					
ANR	1573120	Identifier	reg		1572959	0					
ANR	1573121	Argument	TMP_REG3		1572959	3					
ANR	1573122	Identifier	TMP_REG3		1572959	0					
ANR	1573123	Argument	argw		1572959	4					
ANR	1573124	Identifier	argw		1572959	0					
ANR	1573125	ReturnStatement	return SLJIT_SUCCESS ;	1490:3:45947:45967	1572959	2	True				
ANR	1573126	Identifier	SLJIT_SUCCESS		1572959	0					
ANR	1573127	ExpressionStatement	imm = ( sljit_uw ) ( argw - next_argw )	1495:2:46127:46161	1572959	2	True				
ANR	1573128	AssignmentExpression	imm = ( sljit_uw ) ( argw - next_argw )		1572959	0		=			
ANR	1573129	Identifier	imm		1572959	0					
ANR	1573130	CastExpression	( sljit_uw ) ( argw - next_argw )		1572959	1					
ANR	1573131	CastTarget	sljit_uw		1572959	0					
ANR	1573132	AdditiveExpression	argw - next_argw		1572959	1		-			
ANR	1573133	Identifier	argw		1572959	0					
ANR	1573134	Identifier	next_argw		1572959	1					
ANR	1573135	IfStatement	if ( ( next_arg & SLJIT_MEM ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta ) )		1572959	3					
ANR	1573136	Condition	( next_arg & SLJIT_MEM ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta )	1496:6:46169:46253	1572959	0	True				
ANR	1573137	AndExpression	( next_arg & SLJIT_MEM ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta )		1572959	0		&&			
ANR	1573138	BitAndExpression	next_arg & SLJIT_MEM		1572959	0		&			
ANR	1573139	Identifier	next_arg		1572959	0					
ANR	1573140	Identifier	SLJIT_MEM		1572959	1					
ANR	1573141	OrExpression	imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta		1572959	1		||			
ANR	1573142	RelationalExpression	imm <= ( sljit_uw ) max_delta		1572959	0		<=			
ANR	1573143	Identifier	imm		1572959	0					
ANR	1573144	CastExpression	( sljit_uw ) max_delta		1572959	1					
ANR	1573145	CastTarget	sljit_uw		1572959	0					
ANR	1573146	Identifier	max_delta		1572959	1					
ANR	1573147	RelationalExpression	imm >= ( sljit_uw ) - max_delta		1572959	1		>=			
ANR	1573148	Identifier	imm		1572959	0					
ANR	1573149	CastExpression	( sljit_uw ) - max_delta		1572959	1					
ANR	1573150	CastTarget	sljit_uw		1572959	0					
ANR	1573151	UnaryOperationExpression	- max_delta		1572959	1					
ANR	1573152	UnaryOperator	-		1572959	0					
ANR	1573153	Identifier	max_delta		1572959	1					
ANR	1573154	CompoundStatement		37:93:1092:1092	1572959	1					
ANR	1573155	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1497:3:46261:46296	1572959	0	True				
ANR	1573156	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1572959	0					
ANR	1573157	Callee	SLJIT_ASSERT		1572959	0					
ANR	1573158	Identifier	SLJIT_ASSERT		1572959	0					
ANR	1573159	ArgumentList	inp_flags & LOAD_DATA		1572959	1					
ANR	1573160	Argument	inp_flags & LOAD_DATA		1572959	0					
ANR	1573161	BitAndExpression	inp_flags & LOAD_DATA		1572959	0		&			
ANR	1573162	Identifier	inp_flags		1572959	0					
ANR	1573163	Identifier	LOAD_DATA		1572959	1					
ANR	1573164	ExpressionStatement	compiler -> cache_arg = SLJIT_IMM	1499:3:46302:46333	1572959	1	True				
ANR	1573165	AssignmentExpression	compiler -> cache_arg = SLJIT_IMM		1572959	0		=			
ANR	1573166	PtrMemberAccess	compiler -> cache_arg		1572959	0					
ANR	1573167	Identifier	compiler		1572959	0					
ANR	1573168	Identifier	cache_arg		1572959	1					
ANR	1573169	Identifier	SLJIT_IMM		1572959	1					
ANR	1573170	ExpressionStatement	compiler -> cache_argw = argw	1500:3:46338:46365	1572959	2	True				
ANR	1573171	AssignmentExpression	compiler -> cache_argw = argw		1572959	0		=			
ANR	1573172	PtrMemberAccess	compiler -> cache_argw		1572959	0					
ANR	1573173	Identifier	compiler		1572959	0					
ANR	1573174	Identifier	cache_argw		1572959	1					
ANR	1573175	Identifier	argw		1572959	1					
ANR	1573176	ExpressionStatement	tmp_r = TMP_REG3	1501:3:46370:46386	1572959	3	True				
ANR	1573177	AssignmentExpression	tmp_r = TMP_REG3		1572959	0		=			
ANR	1573178	Identifier	tmp_r		1572959	0					
ANR	1573179	Identifier	TMP_REG3		1572959	1					
ANR	1573180	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"	1504:2:46395:46441	1572959	4	True				
ANR	1573181	CallExpression	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"		1572959	0					
ANR	1573182	Callee	FAIL_IF		1572959	0					
ANR	1573183	Identifier	FAIL_IF		1572959	0					
ANR	1573184	ArgumentList	"load_immediate ( compiler , tmp_r , argw )"		1572959	1					
ANR	1573185	Argument	"load_immediate ( compiler , tmp_r , argw )"		1572959	0					
ANR	1573186	CallExpression	"load_immediate ( compiler , tmp_r , argw )"		1572959	0					
ANR	1573187	Callee	load_immediate		1572959	0					
ANR	1573188	Identifier	load_immediate		1572959	0					
ANR	1573189	ArgumentList	compiler		1572959	1					
ANR	1573190	Argument	compiler		1572959	0					
ANR	1573191	Identifier	compiler		1572959	0					
ANR	1573192	Argument	tmp_r		1572959	1					
ANR	1573193	Identifier	tmp_r		1572959	0					
ANR	1573194	Argument	argw		1572959	2					
ANR	1573195	Identifier	argw		1572959	0					
ANR	1573196	ExpressionStatement	"GETPUT_ARG_DATA_TRANSFER ( 1 , 0 , reg , tmp_r , 0 )"	1505:2:46445:46490	1572959	5	True				
ANR	1573197	CallExpression	"GETPUT_ARG_DATA_TRANSFER ( 1 , 0 , reg , tmp_r , 0 )"		1572959	0					
ANR	1573198	Callee	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573199	Identifier	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573200	ArgumentList	1		1572959	1					
ANR	1573201	Argument	1		1572959	0					
ANR	1573202	PrimaryExpression	1		1572959	0					
ANR	1573203	Argument	0		1572959	1					
ANR	1573204	PrimaryExpression	0		1572959	0					
ANR	1573205	Argument	reg		1572959	2					
ANR	1573206	Identifier	reg		1572959	0					
ANR	1573207	Argument	tmp_r		1572959	3					
ANR	1573208	Identifier	tmp_r		1572959	0					
ANR	1573209	Argument	0		1572959	4					
ANR	1573210	PrimaryExpression	0		1572959	0					
ANR	1573211	ReturnStatement	return SLJIT_SUCCESS ;	1506:2:46494:46514	1572959	6	True				
ANR	1573212	Identifier	SLJIT_SUCCESS		1572959	0					
ANR	1573213	IfStatement	if ( arg & OFFS_REG_MASK )		1572959	9					
ANR	1573214	Condition	arg & OFFS_REG_MASK	1509:5:46525:46543	1572959	0	True				
ANR	1573215	BitAndExpression	arg & OFFS_REG_MASK		1572959	0		&			
ANR	1573216	Identifier	arg		1572959	0					
ANR	1573217	Identifier	OFFS_REG_MASK		1572959	1					
ANR	1573218	CompoundStatement		50:26:1382:1382	1572959	1					
ANR	1573219	ExpressionStatement	SLJIT_ASSERT ( ( argw & 0x3 ) && ! ( max_delta & 0xf00 ) )	1510:2:46550:46600	1572959	0	True				
ANR	1573220	CallExpression	SLJIT_ASSERT ( ( argw & 0x3 ) && ! ( max_delta & 0xf00 ) )		1572959	0					
ANR	1573221	Callee	SLJIT_ASSERT		1572959	0					
ANR	1573222	Identifier	SLJIT_ASSERT		1572959	0					
ANR	1573223	ArgumentList	( argw & 0x3 ) && ! ( max_delta & 0xf00 )		1572959	1					
ANR	1573224	Argument	( argw & 0x3 ) && ! ( max_delta & 0xf00 )		1572959	0					
ANR	1573225	AndExpression	( argw & 0x3 ) && ! ( max_delta & 0xf00 )		1572959	0		&&			
ANR	1573226	BitAndExpression	argw & 0x3		1572959	0		&			
ANR	1573227	Identifier	argw		1572959	0					
ANR	1573228	PrimaryExpression	0x3		1572959	1					
ANR	1573229	UnaryOperationExpression	! ( max_delta & 0xf00 )		1572959	1					
ANR	1573230	UnaryOperator	!		1572959	0					
ANR	1573231	BitAndExpression	max_delta & 0xf00		1572959	1		&			
ANR	1573232	Identifier	max_delta		1572959	0					
ANR	1573233	PrimaryExpression	0xf00		1572959	1					
ANR	1573234	IfStatement	if ( inp_flags & WRITE_BACK )		1572959	1					
ANR	1573235	Condition	inp_flags & WRITE_BACK	1511:6:46608:46629	1572959	0	True				
ANR	1573236	BitAndExpression	inp_flags & WRITE_BACK		1572959	0		&			
ANR	1573237	Identifier	inp_flags		1572959	0					
ANR	1573238	Identifier	WRITE_BACK		1572959	1					
ANR	1573239	ExpressionStatement	tmp_r = arg & REG_MASK	1512:3:46635:46657	1572959	1	True				
ANR	1573240	AssignmentExpression	tmp_r = arg & REG_MASK		1572959	0		=			
ANR	1573241	Identifier	tmp_r		1572959	0					
ANR	1573242	BitAndExpression	arg & REG_MASK		1572959	1		&			
ANR	1573243	Identifier	arg		1572959	0					
ANR	1573244	Identifier	REG_MASK		1572959	1					
ANR	1573245	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) ) )"	1513:2:46661:46787	1572959	2	True				
ANR	1573246	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) ) )"		1572959	0					
ANR	1573247	Callee	FAIL_IF		1572959	0					
ANR	1573248	Identifier	FAIL_IF		1572959	0					
ANR	1573249	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) )"		1572959	1					
ANR	1573250	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) )"		1572959	0					
ANR	1573251	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) )"		1572959	0					
ANR	1573252	Callee	push_inst		1572959	0					
ANR	1573253	Identifier	push_inst		1572959	0					
ANR	1573254	ArgumentList	compiler		1572959	1					
ANR	1573255	Argument	compiler		1572959	0					
ANR	1573256	Identifier	compiler		1572959	0					
ANR	1573257	Argument	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) )"		1572959	1					
ANR	1573258	CallExpression	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) )"		1572959	0					
ANR	1573259	Callee	EMIT_DATA_PROCESS_INS		1572959	0					
ANR	1573260	Identifier	EMIT_DATA_PROCESS_INS		1572959	0					
ANR	1573261	ArgumentList	ADD_DP		1572959	1					
ANR	1573262	Argument	ADD_DP		1572959	0					
ANR	1573263	Identifier	ADD_DP		1572959	0					
ANR	1573264	Argument	0		1572959	1					
ANR	1573265	PrimaryExpression	0		1572959	0					
ANR	1573266	Argument	tmp_r		1572959	2					
ANR	1573267	Identifier	tmp_r		1572959	0					
ANR	1573268	Argument	arg & REG_MASK		1572959	3					
ANR	1573269	BitAndExpression	arg & REG_MASK		1572959	0		&			
ANR	1573270	Identifier	arg		1572959	0					
ANR	1573271	Identifier	REG_MASK		1572959	1					
ANR	1573272	Argument	RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 )		1572959	4					
ANR	1573273	InclusiveOrExpression	RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 )		1572959	0		|			
ANR	1573274	CallExpression	RM ( OFFS_REG ( arg ) )		1572959	0					
ANR	1573275	Callee	RM		1572959	0					
ANR	1573276	Identifier	RM		1572959	0					
ANR	1573277	ArgumentList	OFFS_REG ( arg )		1572959	1					
ANR	1573278	Argument	OFFS_REG ( arg )		1572959	0					
ANR	1573279	CallExpression	OFFS_REG ( arg )		1572959	0					
ANR	1573280	Callee	OFFS_REG		1572959	0					
ANR	1573281	Identifier	OFFS_REG		1572959	0					
ANR	1573282	ArgumentList	arg		1572959	1					
ANR	1573283	Argument	arg		1572959	0					
ANR	1573284	Identifier	arg		1572959	0					
ANR	1573285	ShiftExpression	( argw & 0x3 ) << 7		1572959	1		<<			
ANR	1573286	BitAndExpression	argw & 0x3		1572959	0		&			
ANR	1573287	Identifier	argw		1572959	0					
ANR	1573288	PrimaryExpression	0x3		1572959	1					
ANR	1573289	PrimaryExpression	7		1572959	1					
ANR	1573290	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , 0 , reg , tmp_r , TYPE2_TRANSFER_IMM ( 0 ) ) ) ;"	1514:2:46791:46889	1572959	3	True				
ANR	1573291	CallExpression	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , 0 , reg , tmp_r , TYPE2_TRANSFER_IMM ( 0 ) ) )"		1572959	0					
ANR	1573292	Callee	push_inst		1572959	0					
ANR	1573293	Identifier	push_inst		1572959	0					
ANR	1573294	ArgumentList	compiler		1572959	1					
ANR	1573295	Argument	compiler		1572959	0					
ANR	1573296	Identifier	compiler		1572959	0					
ANR	1573297	Argument	"EMIT_DATA_TRANSFER ( inp_flags , 1 , 0 , reg , tmp_r , TYPE2_TRANSFER_IMM ( 0 ) )"		1572959	1					
ANR	1573298	CallExpression	"EMIT_DATA_TRANSFER ( inp_flags , 1 , 0 , reg , tmp_r , TYPE2_TRANSFER_IMM ( 0 ) )"		1572959	0					
ANR	1573299	Callee	EMIT_DATA_TRANSFER		1572959	0					
ANR	1573300	Identifier	EMIT_DATA_TRANSFER		1572959	0					
ANR	1573301	ArgumentList	inp_flags		1572959	1					
ANR	1573302	Argument	inp_flags		1572959	0					
ANR	1573303	Identifier	inp_flags		1572959	0					
ANR	1573304	Argument	1		1572959	1					
ANR	1573305	PrimaryExpression	1		1572959	0					
ANR	1573306	Argument	0		1572959	2					
ANR	1573307	PrimaryExpression	0		1572959	0					
ANR	1573308	Argument	reg		1572959	3					
ANR	1573309	Identifier	reg		1572959	0					
ANR	1573310	Argument	tmp_r		1572959	4					
ANR	1573311	Identifier	tmp_r		1572959	0					
ANR	1573312	Argument	TYPE2_TRANSFER_IMM ( 0 )		1572959	5					
ANR	1573313	CallExpression	TYPE2_TRANSFER_IMM ( 0 )		1572959	0					
ANR	1573314	Callee	TYPE2_TRANSFER_IMM		1572959	0					
ANR	1573315	Identifier	TYPE2_TRANSFER_IMM		1572959	0					
ANR	1573316	ArgumentList	0		1572959	1					
ANR	1573317	Argument	0		1572959	0					
ANR	1573318	PrimaryExpression	0		1572959	0					
ANR	1573319	ExpressionStatement	imm = ( sljit_uw ) ( argw - compiler -> cache_argw )	1517:1:46896:46941	1572959	10	True				
ANR	1573320	AssignmentExpression	imm = ( sljit_uw ) ( argw - compiler -> cache_argw )		1572959	0		=			
ANR	1573321	Identifier	imm		1572959	0					
ANR	1573322	CastExpression	( sljit_uw ) ( argw - compiler -> cache_argw )		1572959	1					
ANR	1573323	CastTarget	sljit_uw		1572959	0					
ANR	1573324	AdditiveExpression	argw - compiler -> cache_argw		1572959	1		-			
ANR	1573325	Identifier	argw		1572959	0					
ANR	1573326	PtrMemberAccess	compiler -> cache_argw		1572959	1					
ANR	1573327	Identifier	compiler		1572959	0					
ANR	1573328	Identifier	cache_argw		1572959	1					
ANR	1573329	IfStatement	if ( compiler -> cache_arg == arg && imm <= ( sljit_uw ) max_delta )		1572959	11					
ANR	1573330	Condition	compiler -> cache_arg == arg && imm <= ( sljit_uw ) max_delta	1518:5:46948:47003	1572959	0	True				
ANR	1573331	AndExpression	compiler -> cache_arg == arg && imm <= ( sljit_uw ) max_delta		1572959	0		&&			
ANR	1573332	EqualityExpression	compiler -> cache_arg == arg		1572959	0		==			
ANR	1573333	PtrMemberAccess	compiler -> cache_arg		1572959	0					
ANR	1573334	Identifier	compiler		1572959	0					
ANR	1573335	Identifier	cache_arg		1572959	1					
ANR	1573336	Identifier	arg		1572959	1					
ANR	1573337	RelationalExpression	imm <= ( sljit_uw ) max_delta		1572959	1		<=			
ANR	1573338	Identifier	imm		1572959	0					
ANR	1573339	CastExpression	( sljit_uw ) max_delta		1572959	1					
ANR	1573340	CastTarget	sljit_uw		1572959	0					
ANR	1573341	Identifier	max_delta		1572959	1					
ANR	1573342	CompoundStatement		59:63:1842:1842	1572959	1					
ANR	1573343	ExpressionStatement	SLJIT_ASSERT ( ! ( inp_flags & WRITE_BACK ) )	1519:2:47010:47049	1572959	0	True				
ANR	1573344	CallExpression	SLJIT_ASSERT ( ! ( inp_flags & WRITE_BACK ) )		1572959	0					
ANR	1573345	Callee	SLJIT_ASSERT		1572959	0					
ANR	1573346	Identifier	SLJIT_ASSERT		1572959	0					
ANR	1573347	ArgumentList	! ( inp_flags & WRITE_BACK )		1572959	1					
ANR	1573348	Argument	! ( inp_flags & WRITE_BACK )		1572959	0					
ANR	1573349	UnaryOperationExpression	! ( inp_flags & WRITE_BACK )		1572959	0					
ANR	1573350	UnaryOperator	!		1572959	0					
ANR	1573351	BitAndExpression	inp_flags & WRITE_BACK		1572959	1		&			
ANR	1573352	Identifier	inp_flags		1572959	0					
ANR	1573353	Identifier	WRITE_BACK		1572959	1					
ANR	1573354	ExpressionStatement	"GETPUT_ARG_DATA_TRANSFER ( 1 , 0 , reg , TMP_REG3 , imm )"	1520:2:47053:47103	1572959	1	True				
ANR	1573355	CallExpression	"GETPUT_ARG_DATA_TRANSFER ( 1 , 0 , reg , TMP_REG3 , imm )"		1572959	0					
ANR	1573356	Callee	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573357	Identifier	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573358	ArgumentList	1		1572959	1					
ANR	1573359	Argument	1		1572959	0					
ANR	1573360	PrimaryExpression	1		1572959	0					
ANR	1573361	Argument	0		1572959	1					
ANR	1573362	PrimaryExpression	0		1572959	0					
ANR	1573363	Argument	reg		1572959	2					
ANR	1573364	Identifier	reg		1572959	0					
ANR	1573365	Argument	TMP_REG3		1572959	3					
ANR	1573366	Identifier	TMP_REG3		1572959	0					
ANR	1573367	Argument	imm		1572959	4					
ANR	1573368	Identifier	imm		1572959	0					
ANR	1573369	ReturnStatement	return SLJIT_SUCCESS ;	1521:2:47107:47127	1572959	2	True				
ANR	1573370	Identifier	SLJIT_SUCCESS		1572959	0					
ANR	1573371	IfStatement	if ( compiler -> cache_arg == arg && imm >= ( sljit_uw ) - max_delta )		1572959	12					
ANR	1573372	Condition	compiler -> cache_arg == arg && imm >= ( sljit_uw ) - max_delta	1523:5:47137:47193	1572959	0	True				
ANR	1573373	AndExpression	compiler -> cache_arg == arg && imm >= ( sljit_uw ) - max_delta		1572959	0		&&			
ANR	1573374	EqualityExpression	compiler -> cache_arg == arg		1572959	0		==			
ANR	1573375	PtrMemberAccess	compiler -> cache_arg		1572959	0					
ANR	1573376	Identifier	compiler		1572959	0					
ANR	1573377	Identifier	cache_arg		1572959	1					
ANR	1573378	Identifier	arg		1572959	1					
ANR	1573379	RelationalExpression	imm >= ( sljit_uw ) - max_delta		1572959	1		>=			
ANR	1573380	Identifier	imm		1572959	0					
ANR	1573381	CastExpression	( sljit_uw ) - max_delta		1572959	1					
ANR	1573382	CastTarget	sljit_uw		1572959	0					
ANR	1573383	UnaryOperationExpression	- max_delta		1572959	1					
ANR	1573384	UnaryOperator	-		1572959	0					
ANR	1573385	Identifier	max_delta		1572959	1					
ANR	1573386	CompoundStatement		64:64:2032:2032	1572959	1					
ANR	1573387	ExpressionStatement	SLJIT_ASSERT ( ! ( inp_flags & WRITE_BACK ) )	1524:2:47200:47239	1572959	0	True				
ANR	1573388	CallExpression	SLJIT_ASSERT ( ! ( inp_flags & WRITE_BACK ) )		1572959	0					
ANR	1573389	Callee	SLJIT_ASSERT		1572959	0					
ANR	1573390	Identifier	SLJIT_ASSERT		1572959	0					
ANR	1573391	ArgumentList	! ( inp_flags & WRITE_BACK )		1572959	1					
ANR	1573392	Argument	! ( inp_flags & WRITE_BACK )		1572959	0					
ANR	1573393	UnaryOperationExpression	! ( inp_flags & WRITE_BACK )		1572959	0					
ANR	1573394	UnaryOperator	!		1572959	0					
ANR	1573395	BitAndExpression	inp_flags & WRITE_BACK		1572959	1		&			
ANR	1573396	Identifier	inp_flags		1572959	0					
ANR	1573397	Identifier	WRITE_BACK		1572959	1					
ANR	1573398	ExpressionStatement	imm = ( sljit_uw ) - ( sljit_sw ) imm	1525:2:47243:47273	1572959	1	True				
ANR	1573399	AssignmentExpression	imm = ( sljit_uw ) - ( sljit_sw ) imm		1572959	0		=			
ANR	1573400	Identifier	imm		1572959	0					
ANR	1573401	CastExpression	( sljit_uw ) - ( sljit_sw ) imm		1572959	1					
ANR	1573402	CastTarget	sljit_uw		1572959	0					
ANR	1573403	UnaryOperationExpression	- ( sljit_sw ) imm		1572959	1					
ANR	1573404	UnaryOperator	-		1572959	0					
ANR	1573405	CastExpression	( sljit_sw ) imm		1572959	1					
ANR	1573406	CastTarget	sljit_sw		1572959	0					
ANR	1573407	Identifier	imm		1572959	1					
ANR	1573408	ExpressionStatement	"GETPUT_ARG_DATA_TRANSFER ( 0 , 0 , reg , TMP_REG3 , imm )"	1526:2:47277:47327	1572959	2	True				
ANR	1573409	CallExpression	"GETPUT_ARG_DATA_TRANSFER ( 0 , 0 , reg , TMP_REG3 , imm )"		1572959	0					
ANR	1573410	Callee	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573411	Identifier	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573412	ArgumentList	0		1572959	1					
ANR	1573413	Argument	0		1572959	0					
ANR	1573414	PrimaryExpression	0		1572959	0					
ANR	1573415	Argument	0		1572959	1					
ANR	1573416	PrimaryExpression	0		1572959	0					
ANR	1573417	Argument	reg		1572959	2					
ANR	1573418	Identifier	reg		1572959	0					
ANR	1573419	Argument	TMP_REG3		1572959	3					
ANR	1573420	Identifier	TMP_REG3		1572959	0					
ANR	1573421	Argument	imm		1572959	4					
ANR	1573422	Identifier	imm		1572959	0					
ANR	1573423	ReturnStatement	return SLJIT_SUCCESS ;	1527:2:47331:47351	1572959	3	True				
ANR	1573424	Identifier	SLJIT_SUCCESS		1572959	0					
ANR	1573425	ExpressionStatement	imm = get_imm ( argw & ~max_delta )	1530:1:47358:47390	1572959	13	True				
ANR	1573426	AssignmentExpression	imm = get_imm ( argw & ~max_delta )		1572959	0		=			
ANR	1573427	Identifier	imm		1572959	0					
ANR	1573428	CallExpression	get_imm ( argw & ~max_delta )		1572959	1					
ANR	1573429	Callee	get_imm		1572959	0					
ANR	1573430	Identifier	get_imm		1572959	0					
ANR	1573431	ArgumentList	argw & ~max_delta		1572959	1					
ANR	1573432	Argument	argw & ~max_delta		1572959	0					
ANR	1573433	BitAndExpression	argw & ~max_delta		1572959	0		&			
ANR	1573434	Identifier	argw		1572959	0					
ANR	1573435	Identifier	~max_delta		1572959	1					
ANR	1573436	IfStatement	if ( imm )		1572959	14					
ANR	1573437	Condition	imm	1531:5:47397:47399	1572959	0	True				
ANR	1573438	Identifier	imm		1572959	0					
ANR	1573439	CompoundStatement		72:10:2238:2238	1572959	1					
ANR	1573440	ExpressionStatement	TEST_WRITE_BACK ( )	1532:2:47406:47423	1572959	0	True				
ANR	1573441	CallExpression	TEST_WRITE_BACK ( )		1572959	0					
ANR	1573442	Callee	TEST_WRITE_BACK		1572959	0					
ANR	1573443	Identifier	TEST_WRITE_BACK		1572959	0					
ANR	1573444	ArgumentList			1572959	1					
ANR	1573445	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , imm ) ) )"	1533:2:47427:47517	1572959	1	True				
ANR	1573446	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , imm ) ) )"		1572959	0					
ANR	1573447	Callee	FAIL_IF		1572959	0					
ANR	1573448	Identifier	FAIL_IF		1572959	0					
ANR	1573449	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , imm ) )"		1572959	1					
ANR	1573450	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , imm ) )"		1572959	0					
ANR	1573451	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , imm ) )"		1572959	0					
ANR	1573452	Callee	push_inst		1572959	0					
ANR	1573453	Identifier	push_inst		1572959	0					
ANR	1573454	ArgumentList	compiler		1572959	1					
ANR	1573455	Argument	compiler		1572959	0					
ANR	1573456	Identifier	compiler		1572959	0					
ANR	1573457	Argument	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , imm )"		1572959	1					
ANR	1573458	CallExpression	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , tmp_r , arg & REG_MASK , imm )"		1572959	0					
ANR	1573459	Callee	EMIT_DATA_PROCESS_INS		1572959	0					
ANR	1573460	Identifier	EMIT_DATA_PROCESS_INS		1572959	0					
ANR	1573461	ArgumentList	ADD_DP		1572959	1					
ANR	1573462	Argument	ADD_DP		1572959	0					
ANR	1573463	Identifier	ADD_DP		1572959	0					
ANR	1573464	Argument	0		1572959	1					
ANR	1573465	PrimaryExpression	0		1572959	0					
ANR	1573466	Argument	tmp_r		1572959	2					
ANR	1573467	Identifier	tmp_r		1572959	0					
ANR	1573468	Argument	arg & REG_MASK		1572959	3					
ANR	1573469	BitAndExpression	arg & REG_MASK		1572959	0		&			
ANR	1573470	Identifier	arg		1572959	0					
ANR	1573471	Identifier	REG_MASK		1572959	1					
ANR	1573472	Argument	imm		1572959	4					
ANR	1573473	Identifier	imm		1572959	0					
ANR	1573474	ExpressionStatement	"GETPUT_ARG_DATA_TRANSFER ( 1 , inp_flags & WRITE_BACK , reg , tmp_r , argw & max_delta )"	1534:2:47521:47602	1572959	2	True				
ANR	1573475	CallExpression	"GETPUT_ARG_DATA_TRANSFER ( 1 , inp_flags & WRITE_BACK , reg , tmp_r , argw & max_delta )"		1572959	0					
ANR	1573476	Callee	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573477	Identifier	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573478	ArgumentList	1		1572959	1					
ANR	1573479	Argument	1		1572959	0					
ANR	1573480	PrimaryExpression	1		1572959	0					
ANR	1573481	Argument	inp_flags & WRITE_BACK		1572959	1					
ANR	1573482	BitAndExpression	inp_flags & WRITE_BACK		1572959	0		&			
ANR	1573483	Identifier	inp_flags		1572959	0					
ANR	1573484	Identifier	WRITE_BACK		1572959	1					
ANR	1573485	Argument	reg		1572959	2					
ANR	1573486	Identifier	reg		1572959	0					
ANR	1573487	Argument	tmp_r		1572959	3					
ANR	1573488	Identifier	tmp_r		1572959	0					
ANR	1573489	Argument	argw & max_delta		1572959	4					
ANR	1573490	BitAndExpression	argw & max_delta		1572959	0		&			
ANR	1573491	Identifier	argw		1572959	0					
ANR	1573492	Identifier	max_delta		1572959	1					
ANR	1573493	ReturnStatement	return SLJIT_SUCCESS ;	1535:2:47606:47626	1572959	3	True				
ANR	1573494	Identifier	SLJIT_SUCCESS		1572959	0					
ANR	1573495	ExpressionStatement	imm = get_imm ( - argw & ~max_delta )	1538:1:47633:47666	1572959	15	True				
ANR	1573496	AssignmentExpression	imm = get_imm ( - argw & ~max_delta )		1572959	0		=			
ANR	1573497	Identifier	imm		1572959	0					
ANR	1573498	CallExpression	get_imm ( - argw & ~max_delta )		1572959	1					
ANR	1573499	Callee	get_imm		1572959	0					
ANR	1573500	Identifier	get_imm		1572959	0					
ANR	1573501	ArgumentList	- argw & ~max_delta		1572959	1					
ANR	1573502	Argument	- argw & ~max_delta		1572959	0					
ANR	1573503	BitAndExpression	- argw & ~max_delta		1572959	0		&			
ANR	1573504	UnaryOperationExpression	- argw		1572959	0					
ANR	1573505	UnaryOperator	-		1572959	0					
ANR	1573506	Identifier	argw		1572959	1					
ANR	1573507	Identifier	~max_delta		1572959	1					
ANR	1573508	IfStatement	if ( imm )		1572959	16					
ANR	1573509	Condition	imm	1539:5:47673:47675	1572959	0	True				
ANR	1573510	Identifier	imm		1572959	0					
ANR	1573511	CompoundStatement		80:10:2514:2514	1572959	1					
ANR	1573512	ExpressionStatement	argw = - argw	1540:2:47682:47694	1572959	0	True				
ANR	1573513	AssignmentExpression	argw = - argw		1572959	0		=			
ANR	1573514	Identifier	argw		1572959	0					
ANR	1573515	UnaryOperationExpression	- argw		1572959	1					
ANR	1573516	UnaryOperator	-		1572959	0					
ANR	1573517	Identifier	argw		1572959	1					
ANR	1573518	ExpressionStatement	TEST_WRITE_BACK ( )	1541:2:47698:47715	1572959	1	True				
ANR	1573519	CallExpression	TEST_WRITE_BACK ( )		1572959	0					
ANR	1573520	Callee	TEST_WRITE_BACK		1572959	0					
ANR	1573521	Identifier	TEST_WRITE_BACK		1572959	0					
ANR	1573522	ArgumentList			1572959	1					
ANR	1573523	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , tmp_r , arg & REG_MASK , imm ) ) )"	1542:2:47719:47809	1572959	2	True				
ANR	1573524	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , tmp_r , arg & REG_MASK , imm ) ) )"		1572959	0					
ANR	1573525	Callee	FAIL_IF		1572959	0					
ANR	1573526	Identifier	FAIL_IF		1572959	0					
ANR	1573527	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , tmp_r , arg & REG_MASK , imm ) )"		1572959	1					
ANR	1573528	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , tmp_r , arg & REG_MASK , imm ) )"		1572959	0					
ANR	1573529	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , tmp_r , arg & REG_MASK , imm ) )"		1572959	0					
ANR	1573530	Callee	push_inst		1572959	0					
ANR	1573531	Identifier	push_inst		1572959	0					
ANR	1573532	ArgumentList	compiler		1572959	1					
ANR	1573533	Argument	compiler		1572959	0					
ANR	1573534	Identifier	compiler		1572959	0					
ANR	1573535	Argument	"EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , tmp_r , arg & REG_MASK , imm )"		1572959	1					
ANR	1573536	CallExpression	"EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , tmp_r , arg & REG_MASK , imm )"		1572959	0					
ANR	1573537	Callee	EMIT_DATA_PROCESS_INS		1572959	0					
ANR	1573538	Identifier	EMIT_DATA_PROCESS_INS		1572959	0					
ANR	1573539	ArgumentList	SUB_DP		1572959	1					
ANR	1573540	Argument	SUB_DP		1572959	0					
ANR	1573541	Identifier	SUB_DP		1572959	0					
ANR	1573542	Argument	0		1572959	1					
ANR	1573543	PrimaryExpression	0		1572959	0					
ANR	1573544	Argument	tmp_r		1572959	2					
ANR	1573545	Identifier	tmp_r		1572959	0					
ANR	1573546	Argument	arg & REG_MASK		1572959	3					
ANR	1573547	BitAndExpression	arg & REG_MASK		1572959	0		&			
ANR	1573548	Identifier	arg		1572959	0					
ANR	1573549	Identifier	REG_MASK		1572959	1					
ANR	1573550	Argument	imm		1572959	4					
ANR	1573551	Identifier	imm		1572959	0					
ANR	1573552	ExpressionStatement	"GETPUT_ARG_DATA_TRANSFER ( 0 , inp_flags & WRITE_BACK , reg , tmp_r , argw & max_delta )"	1543:2:47813:47894	1572959	3	True				
ANR	1573553	CallExpression	"GETPUT_ARG_DATA_TRANSFER ( 0 , inp_flags & WRITE_BACK , reg , tmp_r , argw & max_delta )"		1572959	0					
ANR	1573554	Callee	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573555	Identifier	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573556	ArgumentList	0		1572959	1					
ANR	1573557	Argument	0		1572959	0					
ANR	1573558	PrimaryExpression	0		1572959	0					
ANR	1573559	Argument	inp_flags & WRITE_BACK		1572959	1					
ANR	1573560	BitAndExpression	inp_flags & WRITE_BACK		1572959	0		&			
ANR	1573561	Identifier	inp_flags		1572959	0					
ANR	1573562	Identifier	WRITE_BACK		1572959	1					
ANR	1573563	Argument	reg		1572959	2					
ANR	1573564	Identifier	reg		1572959	0					
ANR	1573565	Argument	tmp_r		1572959	3					
ANR	1573566	Identifier	tmp_r		1572959	0					
ANR	1573567	Argument	argw & max_delta		1572959	4					
ANR	1573568	BitAndExpression	argw & max_delta		1572959	0		&			
ANR	1573569	Identifier	argw		1572959	0					
ANR	1573570	Identifier	max_delta		1572959	1					
ANR	1573571	ReturnStatement	return SLJIT_SUCCESS ;	1544:2:47898:47918	1572959	4	True				
ANR	1573572	Identifier	SLJIT_SUCCESS		1572959	0					
ANR	1573573	IfStatement	if ( ( compiler -> cache_arg & SLJIT_IMM ) && compiler -> cache_argw == argw )		1572959	17					
ANR	1573574	Condition	( compiler -> cache_arg & SLJIT_IMM ) && compiler -> cache_argw == argw	1547:5:47929:47993	1572959	0	True				
ANR	1573575	AndExpression	( compiler -> cache_arg & SLJIT_IMM ) && compiler -> cache_argw == argw		1572959	0		&&			
ANR	1573576	BitAndExpression	compiler -> cache_arg & SLJIT_IMM		1572959	0		&			
ANR	1573577	PtrMemberAccess	compiler -> cache_arg		1572959	0					
ANR	1573578	Identifier	compiler		1572959	0					
ANR	1573579	Identifier	cache_arg		1572959	1					
ANR	1573580	Identifier	SLJIT_IMM		1572959	1					
ANR	1573581	EqualityExpression	compiler -> cache_argw == argw		1572959	1		==			
ANR	1573582	PtrMemberAccess	compiler -> cache_argw		1572959	0					
ANR	1573583	Identifier	compiler		1572959	0					
ANR	1573584	Identifier	cache_argw		1572959	1					
ANR	1573585	Identifier	argw		1572959	1					
ANR	1573586	CompoundStatement		88:72:2832:2832	1572959	1					
ANR	1573587	ExpressionStatement	TEST_WRITE_BACK ( )	1548:2:48000:48017	1572959	0	True				
ANR	1573588	CallExpression	TEST_WRITE_BACK ( )		1572959	0					
ANR	1573589	Callee	TEST_WRITE_BACK		1572959	0					
ANR	1573590	Identifier	TEST_WRITE_BACK		1572959	0					
ANR	1573591	ArgumentList			1572959	1					
ANR	1573592	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) ) ) ;"	1549:2:48021:48177	1572959	1	True				
ANR	1573593	CallExpression	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) ) )"		1572959	0					
ANR	1573594	Callee	push_inst		1572959	0					
ANR	1573595	Identifier	push_inst		1572959	0					
ANR	1573596	ArgumentList	compiler		1572959	1					
ANR	1573597	Argument	compiler		1572959	0					
ANR	1573598	Identifier	compiler		1572959	0					
ANR	1573599	Argument	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) )"		1572959	1					
ANR	1573600	CallExpression	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) )"		1572959	0					
ANR	1573601	Callee	EMIT_DATA_TRANSFER		1572959	0					
ANR	1573602	Identifier	EMIT_DATA_TRANSFER		1572959	0					
ANR	1573603	ArgumentList	inp_flags		1572959	1					
ANR	1573604	Argument	inp_flags		1572959	0					
ANR	1573605	Identifier	inp_flags		1572959	0					
ANR	1573606	Argument	1		1572959	1					
ANR	1573607	PrimaryExpression	1		1572959	0					
ANR	1573608	Argument	inp_flags & WRITE_BACK		1572959	2					
ANR	1573609	BitAndExpression	inp_flags & WRITE_BACK		1572959	0		&			
ANR	1573610	Identifier	inp_flags		1572959	0					
ANR	1573611	Identifier	WRITE_BACK		1572959	1					
ANR	1573612	Argument	reg		1572959	3					
ANR	1573613	Identifier	reg		1572959	0					
ANR	1573614	Argument	arg & REG_MASK		1572959	4					
ANR	1573615	BitAndExpression	arg & REG_MASK		1572959	0		&			
ANR	1573616	Identifier	arg		1572959	0					
ANR	1573617	Identifier	REG_MASK		1572959	1					
ANR	1573618	Argument	RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 )		1572959	5					
ANR	1573619	InclusiveOrExpression	RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 )		1572959	0		|			
ANR	1573620	CallExpression	RM ( TMP_REG3 )		1572959	0					
ANR	1573621	Callee	RM		1572959	0					
ANR	1573622	Identifier	RM		1572959	0					
ANR	1573623	ArgumentList	TMP_REG3		1572959	1					
ANR	1573624	Argument	TMP_REG3		1572959	0					
ANR	1573625	Identifier	TMP_REG3		1572959	0					
ANR	1573626	ConditionalExpression	max_delta & 0xf00 ? SRC2_IMM : 0		1572959	1					
ANR	1573627	Condition	max_delta & 0xf00		1572959	0					
ANR	1573628	BitAndExpression	max_delta & 0xf00		1572959	0		&			
ANR	1573629	Identifier	max_delta		1572959	0					
ANR	1573630	PrimaryExpression	0xf00		1572959	1					
ANR	1573631	Identifier	SRC2_IMM		1572959	1					
ANR	1573632	PrimaryExpression	0		1572959	2					
ANR	1573633	IfStatement	if ( argw == next_argw && ( next_arg & SLJIT_MEM ) )		1572959	18					
ANR	1573634	Condition	argw == next_argw && ( next_arg & SLJIT_MEM )	1552:5:48188:48230	1572959	0	True				
ANR	1573635	AndExpression	argw == next_argw && ( next_arg & SLJIT_MEM )		1572959	0		&&			
ANR	1573636	EqualityExpression	argw == next_argw		1572959	0		==			
ANR	1573637	Identifier	argw		1572959	0					
ANR	1573638	Identifier	next_argw		1572959	1					
ANR	1573639	BitAndExpression	next_arg & SLJIT_MEM		1572959	1		&			
ANR	1573640	Identifier	next_arg		1572959	0					
ANR	1573641	Identifier	SLJIT_MEM		1572959	1					
ANR	1573642	CompoundStatement		93:50:3069:3069	1572959	1					
ANR	1573643	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1553:2:48237:48272	1572959	0	True				
ANR	1573644	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1572959	0					
ANR	1573645	Callee	SLJIT_ASSERT		1572959	0					
ANR	1573646	Identifier	SLJIT_ASSERT		1572959	0					
ANR	1573647	ArgumentList	inp_flags & LOAD_DATA		1572959	1					
ANR	1573648	Argument	inp_flags & LOAD_DATA		1572959	0					
ANR	1573649	BitAndExpression	inp_flags & LOAD_DATA		1572959	0		&			
ANR	1573650	Identifier	inp_flags		1572959	0					
ANR	1573651	Identifier	LOAD_DATA		1572959	1					
ANR	1573652	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1554:2:48276:48325	1572959	1	True				
ANR	1573653	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1572959	0					
ANR	1573654	Callee	FAIL_IF		1572959	0					
ANR	1573655	Identifier	FAIL_IF		1572959	0					
ANR	1573656	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1572959	1					
ANR	1573657	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1572959	0					
ANR	1573658	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1572959	0					
ANR	1573659	Callee	load_immediate		1572959	0					
ANR	1573660	Identifier	load_immediate		1572959	0					
ANR	1573661	ArgumentList	compiler		1572959	1					
ANR	1573662	Argument	compiler		1572959	0					
ANR	1573663	Identifier	compiler		1572959	0					
ANR	1573664	Argument	TMP_REG3		1572959	1					
ANR	1573665	Identifier	TMP_REG3		1572959	0					
ANR	1573666	Argument	argw		1572959	2					
ANR	1573667	Identifier	argw		1572959	0					
ANR	1573668	ExpressionStatement	compiler -> cache_arg = SLJIT_IMM	1556:2:48330:48361	1572959	2	True				
ANR	1573669	AssignmentExpression	compiler -> cache_arg = SLJIT_IMM		1572959	0		=			
ANR	1573670	PtrMemberAccess	compiler -> cache_arg		1572959	0					
ANR	1573671	Identifier	compiler		1572959	0					
ANR	1573672	Identifier	cache_arg		1572959	1					
ANR	1573673	Identifier	SLJIT_IMM		1572959	1					
ANR	1573674	ExpressionStatement	compiler -> cache_argw = argw	1557:2:48365:48392	1572959	3	True				
ANR	1573675	AssignmentExpression	compiler -> cache_argw = argw		1572959	0		=			
ANR	1573676	PtrMemberAccess	compiler -> cache_argw		1572959	0					
ANR	1573677	Identifier	compiler		1572959	0					
ANR	1573678	Identifier	cache_argw		1572959	1					
ANR	1573679	Identifier	argw		1572959	1					
ANR	1573680	ExpressionStatement	TEST_WRITE_BACK ( )	1559:2:48397:48414	1572959	4	True				
ANR	1573681	CallExpression	TEST_WRITE_BACK ( )		1572959	0					
ANR	1573682	Callee	TEST_WRITE_BACK		1572959	0					
ANR	1573683	Identifier	TEST_WRITE_BACK		1572959	0					
ANR	1573684	ArgumentList			1572959	1					
ANR	1573685	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) ) ) ;"	1560:2:48418:48574	1572959	5	True				
ANR	1573686	CallExpression	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) ) )"		1572959	0					
ANR	1573687	Callee	push_inst		1572959	0					
ANR	1573688	Identifier	push_inst		1572959	0					
ANR	1573689	ArgumentList	compiler		1572959	1					
ANR	1573690	Argument	compiler		1572959	0					
ANR	1573691	Identifier	compiler		1572959	0					
ANR	1573692	Argument	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) )"		1572959	1					
ANR	1573693	CallExpression	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) )"		1572959	0					
ANR	1573694	Callee	EMIT_DATA_TRANSFER		1572959	0					
ANR	1573695	Identifier	EMIT_DATA_TRANSFER		1572959	0					
ANR	1573696	ArgumentList	inp_flags		1572959	1					
ANR	1573697	Argument	inp_flags		1572959	0					
ANR	1573698	Identifier	inp_flags		1572959	0					
ANR	1573699	Argument	1		1572959	1					
ANR	1573700	PrimaryExpression	1		1572959	0					
ANR	1573701	Argument	inp_flags & WRITE_BACK		1572959	2					
ANR	1573702	BitAndExpression	inp_flags & WRITE_BACK		1572959	0		&			
ANR	1573703	Identifier	inp_flags		1572959	0					
ANR	1573704	Identifier	WRITE_BACK		1572959	1					
ANR	1573705	Argument	reg		1572959	3					
ANR	1573706	Identifier	reg		1572959	0					
ANR	1573707	Argument	arg & REG_MASK		1572959	4					
ANR	1573708	BitAndExpression	arg & REG_MASK		1572959	0		&			
ANR	1573709	Identifier	arg		1572959	0					
ANR	1573710	Identifier	REG_MASK		1572959	1					
ANR	1573711	Argument	RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 )		1572959	5					
ANR	1573712	InclusiveOrExpression	RM ( TMP_REG3 ) | ( max_delta & 0xf00 ? SRC2_IMM : 0 )		1572959	0		|			
ANR	1573713	CallExpression	RM ( TMP_REG3 )		1572959	0					
ANR	1573714	Callee	RM		1572959	0					
ANR	1573715	Identifier	RM		1572959	0					
ANR	1573716	ArgumentList	TMP_REG3		1572959	1					
ANR	1573717	Argument	TMP_REG3		1572959	0					
ANR	1573718	Identifier	TMP_REG3		1572959	0					
ANR	1573719	ConditionalExpression	max_delta & 0xf00 ? SRC2_IMM : 0		1572959	1					
ANR	1573720	Condition	max_delta & 0xf00		1572959	0					
ANR	1573721	BitAndExpression	max_delta & 0xf00		1572959	0		&			
ANR	1573722	Identifier	max_delta		1572959	0					
ANR	1573723	PrimaryExpression	0xf00		1572959	1					
ANR	1573724	Identifier	SRC2_IMM		1572959	1					
ANR	1573725	PrimaryExpression	0		1572959	2					
ANR	1573726	ExpressionStatement	imm = ( sljit_uw ) ( argw - next_argw )	1563:1:48581:48615	1572959	19	True				
ANR	1573727	AssignmentExpression	imm = ( sljit_uw ) ( argw - next_argw )		1572959	0		=			
ANR	1573728	Identifier	imm		1572959	0					
ANR	1573729	CastExpression	( sljit_uw ) ( argw - next_argw )		1572959	1					
ANR	1573730	CastTarget	sljit_uw		1572959	0					
ANR	1573731	AdditiveExpression	argw - next_argw		1572959	1		-			
ANR	1573732	Identifier	argw		1572959	0					
ANR	1573733	Identifier	next_argw		1572959	1					
ANR	1573734	IfStatement	if ( arg == next_arg && ! ( inp_flags & WRITE_BACK ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta ) )		1572959	20					
ANR	1573735	Condition	arg == next_arg && ! ( inp_flags & WRITE_BACK ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta )	1564:5:48622:48728	1572959	0	True				
ANR	1573736	AndExpression	arg == next_arg && ! ( inp_flags & WRITE_BACK ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta )		1572959	0		&&			
ANR	1573737	EqualityExpression	arg == next_arg		1572959	0		==			
ANR	1573738	Identifier	arg		1572959	0					
ANR	1573739	Identifier	next_arg		1572959	1					
ANR	1573740	AndExpression	! ( inp_flags & WRITE_BACK ) && ( imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta )		1572959	1		&&			
ANR	1573741	UnaryOperationExpression	! ( inp_flags & WRITE_BACK )		1572959	0					
ANR	1573742	UnaryOperator	!		1572959	0					
ANR	1573743	BitAndExpression	inp_flags & WRITE_BACK		1572959	1		&			
ANR	1573744	Identifier	inp_flags		1572959	0					
ANR	1573745	Identifier	WRITE_BACK		1572959	1					
ANR	1573746	OrExpression	imm <= ( sljit_uw ) max_delta || imm >= ( sljit_uw ) - max_delta		1572959	1		||			
ANR	1573747	RelationalExpression	imm <= ( sljit_uw ) max_delta		1572959	0		<=			
ANR	1573748	Identifier	imm		1572959	0					
ANR	1573749	CastExpression	( sljit_uw ) max_delta		1572959	1					
ANR	1573750	CastTarget	sljit_uw		1572959	0					
ANR	1573751	Identifier	max_delta		1572959	1					
ANR	1573752	RelationalExpression	imm >= ( sljit_uw ) - max_delta		1572959	1		>=			
ANR	1573753	Identifier	imm		1572959	0					
ANR	1573754	CastExpression	( sljit_uw ) - max_delta		1572959	1					
ANR	1573755	CastTarget	sljit_uw		1572959	0					
ANR	1573756	UnaryOperationExpression	- max_delta		1572959	1					
ANR	1573757	UnaryOperator	-		1572959	0					
ANR	1573758	Identifier	max_delta		1572959	1					
ANR	1573759	CompoundStatement		105:114:3567:3567	1572959	1					
ANR	1573760	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1565:2:48735:48770	1572959	0	True				
ANR	1573761	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1572959	0					
ANR	1573762	Callee	SLJIT_ASSERT		1572959	0					
ANR	1573763	Identifier	SLJIT_ASSERT		1572959	0					
ANR	1573764	ArgumentList	inp_flags & LOAD_DATA		1572959	1					
ANR	1573765	Argument	inp_flags & LOAD_DATA		1572959	0					
ANR	1573766	BitAndExpression	inp_flags & LOAD_DATA		1572959	0		&			
ANR	1573767	Identifier	inp_flags		1572959	0					
ANR	1573768	Identifier	LOAD_DATA		1572959	1					
ANR	1573769	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1566:2:48774:48823	1572959	1	True				
ANR	1573770	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1572959	0					
ANR	1573771	Callee	FAIL_IF		1572959	0					
ANR	1573772	Identifier	FAIL_IF		1572959	0					
ANR	1573773	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1572959	1					
ANR	1573774	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1572959	0					
ANR	1573775	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1572959	0					
ANR	1573776	Callee	load_immediate		1572959	0					
ANR	1573777	Identifier	load_immediate		1572959	0					
ANR	1573778	ArgumentList	compiler		1572959	1					
ANR	1573779	Argument	compiler		1572959	0					
ANR	1573780	Identifier	compiler		1572959	0					
ANR	1573781	Argument	TMP_REG3		1572959	1					
ANR	1573782	Identifier	TMP_REG3		1572959	0					
ANR	1573783	Argument	argw		1572959	2					
ANR	1573784	Identifier	argw		1572959	0					
ANR	1573785	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , TMP_REG3 , reg_map [ arg & REG_MASK ] ) ) )"	1567:2:48827:48934	1572959	2	True				
ANR	1573786	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , TMP_REG3 , reg_map [ arg & REG_MASK ] ) ) )"		1572959	0					
ANR	1573787	Callee	FAIL_IF		1572959	0					
ANR	1573788	Identifier	FAIL_IF		1572959	0					
ANR	1573789	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , TMP_REG3 , reg_map [ arg & REG_MASK ] ) )"		1572959	1					
ANR	1573790	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , TMP_REG3 , reg_map [ arg & REG_MASK ] ) )"		1572959	0					
ANR	1573791	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , TMP_REG3 , reg_map [ arg & REG_MASK ] ) )"		1572959	0					
ANR	1573792	Callee	push_inst		1572959	0					
ANR	1573793	Identifier	push_inst		1572959	0					
ANR	1573794	ArgumentList	compiler		1572959	1					
ANR	1573795	Argument	compiler		1572959	0					
ANR	1573796	Identifier	compiler		1572959	0					
ANR	1573797	Argument	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , TMP_REG3 , reg_map [ arg & REG_MASK ] )"		1572959	1					
ANR	1573798	CallExpression	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , TMP_REG3 , reg_map [ arg & REG_MASK ] )"		1572959	0					
ANR	1573799	Callee	EMIT_DATA_PROCESS_INS		1572959	0					
ANR	1573800	Identifier	EMIT_DATA_PROCESS_INS		1572959	0					
ANR	1573801	ArgumentList	ADD_DP		1572959	1					
ANR	1573802	Argument	ADD_DP		1572959	0					
ANR	1573803	Identifier	ADD_DP		1572959	0					
ANR	1573804	Argument	0		1572959	1					
ANR	1573805	PrimaryExpression	0		1572959	0					
ANR	1573806	Argument	TMP_REG3		1572959	2					
ANR	1573807	Identifier	TMP_REG3		1572959	0					
ANR	1573808	Argument	TMP_REG3		1572959	3					
ANR	1573809	Identifier	TMP_REG3		1572959	0					
ANR	1573810	Argument	reg_map [ arg & REG_MASK ]		1572959	4					
ANR	1573811	ArrayIndexing	reg_map [ arg & REG_MASK ]		1572959	0					
ANR	1573812	Identifier	reg_map		1572959	0					
ANR	1573813	BitAndExpression	arg & REG_MASK		1572959	1		&			
ANR	1573814	Identifier	arg		1572959	0					
ANR	1573815	Identifier	REG_MASK		1572959	1					
ANR	1573816	ExpressionStatement	compiler -> cache_arg = arg	1569:2:48939:48964	1572959	3	True				
ANR	1573817	AssignmentExpression	compiler -> cache_arg = arg		1572959	0		=			
ANR	1573818	PtrMemberAccess	compiler -> cache_arg		1572959	0					
ANR	1573819	Identifier	compiler		1572959	0					
ANR	1573820	Identifier	cache_arg		1572959	1					
ANR	1573821	Identifier	arg		1572959	1					
ANR	1573822	ExpressionStatement	compiler -> cache_argw = argw	1570:2:48968:48995	1572959	4	True				
ANR	1573823	AssignmentExpression	compiler -> cache_argw = argw		1572959	0		=			
ANR	1573824	PtrMemberAccess	compiler -> cache_argw		1572959	0					
ANR	1573825	Identifier	compiler		1572959	0					
ANR	1573826	Identifier	cache_argw		1572959	1					
ANR	1573827	Identifier	argw		1572959	1					
ANR	1573828	ExpressionStatement	"GETPUT_ARG_DATA_TRANSFER ( 1 , 0 , reg , TMP_REG3 , 0 )"	1572:2:49000:49048	1572959	5	True				
ANR	1573829	CallExpression	"GETPUT_ARG_DATA_TRANSFER ( 1 , 0 , reg , TMP_REG3 , 0 )"		1572959	0					
ANR	1573830	Callee	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573831	Identifier	GETPUT_ARG_DATA_TRANSFER		1572959	0					
ANR	1573832	ArgumentList	1		1572959	1					
ANR	1573833	Argument	1		1572959	0					
ANR	1573834	PrimaryExpression	1		1572959	0					
ANR	1573835	Argument	0		1572959	1					
ANR	1573836	PrimaryExpression	0		1572959	0					
ANR	1573837	Argument	reg		1572959	2					
ANR	1573838	Identifier	reg		1572959	0					
ANR	1573839	Argument	TMP_REG3		1572959	3					
ANR	1573840	Identifier	TMP_REG3		1572959	0					
ANR	1573841	Argument	0		1572959	4					
ANR	1573842	PrimaryExpression	0		1572959	0					
ANR	1573843	ReturnStatement	return SLJIT_SUCCESS ;	1573:2:49052:49072	1572959	6	True				
ANR	1573844	Identifier	SLJIT_SUCCESS		1572959	0					
ANR	1573845	IfStatement	if ( ( arg & REG_MASK ) == tmp_r )		1572959	21					
ANR	1573846	Condition	( arg & REG_MASK ) == tmp_r	1576:5:49083:49107	1572959	0	True				
ANR	1573847	EqualityExpression	( arg & REG_MASK ) == tmp_r		1572959	0		==			
ANR	1573848	BitAndExpression	arg & REG_MASK		1572959	0		&			
ANR	1573849	Identifier	arg		1572959	0					
ANR	1573850	Identifier	REG_MASK		1572959	1					
ANR	1573851	Identifier	tmp_r		1572959	1					
ANR	1573852	CompoundStatement		117:32:3946:3946	1572959	1					
ANR	1573853	ExpressionStatement	compiler -> cache_arg = SLJIT_IMM	1577:2:49114:49145	1572959	0	True				
ANR	1573854	AssignmentExpression	compiler -> cache_arg = SLJIT_IMM		1572959	0		=			
ANR	1573855	PtrMemberAccess	compiler -> cache_arg		1572959	0					
ANR	1573856	Identifier	compiler		1572959	0					
ANR	1573857	Identifier	cache_arg		1572959	1					
ANR	1573858	Identifier	SLJIT_IMM		1572959	1					
ANR	1573859	ExpressionStatement	compiler -> cache_argw = argw	1578:2:49149:49176	1572959	1	True				
ANR	1573860	AssignmentExpression	compiler -> cache_argw = argw		1572959	0		=			
ANR	1573861	PtrMemberAccess	compiler -> cache_argw		1572959	0					
ANR	1573862	Identifier	compiler		1572959	0					
ANR	1573863	Identifier	cache_argw		1572959	1					
ANR	1573864	Identifier	argw		1572959	1					
ANR	1573865	ExpressionStatement	tmp_r = TMP_REG3	1579:2:49180:49196	1572959	2	True				
ANR	1573866	AssignmentExpression	tmp_r = TMP_REG3		1572959	0		=			
ANR	1573867	Identifier	tmp_r		1572959	0					
ANR	1573868	Identifier	TMP_REG3		1572959	1					
ANR	1573869	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"	1582:1:49203:49249	1572959	22	True				
ANR	1573870	CallExpression	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"		1572959	0					
ANR	1573871	Callee	FAIL_IF		1572959	0					
ANR	1573872	Identifier	FAIL_IF		1572959	0					
ANR	1573873	ArgumentList	"load_immediate ( compiler , tmp_r , argw )"		1572959	1					
ANR	1573874	Argument	"load_immediate ( compiler , tmp_r , argw )"		1572959	0					
ANR	1573875	CallExpression	"load_immediate ( compiler , tmp_r , argw )"		1572959	0					
ANR	1573876	Callee	load_immediate		1572959	0					
ANR	1573877	Identifier	load_immediate		1572959	0					
ANR	1573878	ArgumentList	compiler		1572959	1					
ANR	1573879	Argument	compiler		1572959	0					
ANR	1573880	Identifier	compiler		1572959	0					
ANR	1573881	Argument	tmp_r		1572959	1					
ANR	1573882	Identifier	tmp_r		1572959	0					
ANR	1573883	Argument	argw		1572959	2					
ANR	1573884	Identifier	argw		1572959	0					
ANR	1573885	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , reg_map [ tmp_r ] | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) ) ) ;"	1583:1:49252:49410	1572959	23	True				
ANR	1573886	CallExpression	"push_inst ( compiler , EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , reg_map [ tmp_r ] | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) ) )"		1572959	0					
ANR	1573887	Callee	push_inst		1572959	0					
ANR	1573888	Identifier	push_inst		1572959	0					
ANR	1573889	ArgumentList	compiler		1572959	1					
ANR	1573890	Argument	compiler		1572959	0					
ANR	1573891	Identifier	compiler		1572959	0					
ANR	1573892	Argument	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , reg_map [ tmp_r ] | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) )"		1572959	1					
ANR	1573893	CallExpression	"EMIT_DATA_TRANSFER ( inp_flags , 1 , inp_flags & WRITE_BACK , reg , arg & REG_MASK , reg_map [ tmp_r ] | ( max_delta & 0xf00 ? SRC2_IMM : 0 ) )"		1572959	0					
ANR	1573894	Callee	EMIT_DATA_TRANSFER		1572959	0					
ANR	1573895	Identifier	EMIT_DATA_TRANSFER		1572959	0					
ANR	1573896	ArgumentList	inp_flags		1572959	1					
ANR	1573897	Argument	inp_flags		1572959	0					
ANR	1573898	Identifier	inp_flags		1572959	0					
ANR	1573899	Argument	1		1572959	1					
ANR	1573900	PrimaryExpression	1		1572959	0					
ANR	1573901	Argument	inp_flags & WRITE_BACK		1572959	2					
ANR	1573902	BitAndExpression	inp_flags & WRITE_BACK		1572959	0		&			
ANR	1573903	Identifier	inp_flags		1572959	0					
ANR	1573904	Identifier	WRITE_BACK		1572959	1					
ANR	1573905	Argument	reg		1572959	3					
ANR	1573906	Identifier	reg		1572959	0					
ANR	1573907	Argument	arg & REG_MASK		1572959	4					
ANR	1573908	BitAndExpression	arg & REG_MASK		1572959	0		&			
ANR	1573909	Identifier	arg		1572959	0					
ANR	1573910	Identifier	REG_MASK		1572959	1					
ANR	1573911	Argument	reg_map [ tmp_r ] | ( max_delta & 0xf00 ? SRC2_IMM : 0 )		1572959	5					
ANR	1573912	InclusiveOrExpression	reg_map [ tmp_r ] | ( max_delta & 0xf00 ? SRC2_IMM : 0 )		1572959	0		|			
ANR	1573913	ArrayIndexing	reg_map [ tmp_r ]		1572959	0					
ANR	1573914	Identifier	reg_map		1572959	0					
ANR	1573915	Identifier	tmp_r		1572959	1					
ANR	1573916	ConditionalExpression	max_delta & 0xf00 ? SRC2_IMM : 0		1572959	1					
ANR	1573917	Condition	max_delta & 0xf00		1572959	0					
ANR	1573918	BitAndExpression	max_delta & 0xf00		1572959	0		&			
ANR	1573919	Identifier	max_delta		1572959	0					
ANR	1573920	PrimaryExpression	0xf00		1572959	1					
ANR	1573921	Identifier	SRC2_IMM		1572959	1					
ANR	1573922	PrimaryExpression	0		1572959	2					
ANR	1573923	ReturnType	static sljit_si		1572959	1					
ANR	1573924	Identifier	getput_arg		1572959	2					
ANR	1573925	ParameterList	"struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1572959	3					
ANR	1573926	Parameter	struct sljit_compiler * compiler	1459:27:45028:45058	1572959	0	True				
ANR	1573927	ParameterType	struct sljit_compiler *		1572959	0					
ANR	1573928	Identifier	compiler		1572959	1					
ANR	1573929	Parameter	sljit_si inp_flags	1459:60:45061:45078	1572959	1	True				
ANR	1573930	ParameterType	sljit_si		1572959	0					
ANR	1573931	Identifier	inp_flags		1572959	1					
ANR	1573932	Parameter	sljit_si reg	1459:80:45081:45092	1572959	2	True				
ANR	1573933	ParameterType	sljit_si		1572959	0					
ANR	1573934	Identifier	reg		1572959	1					
ANR	1573935	Parameter	sljit_si arg	1459:94:45095:45106	1572959	3	True				
ANR	1573936	ParameterType	sljit_si		1572959	0					
ANR	1573937	Identifier	arg		1572959	1					
ANR	1573938	Parameter	sljit_sw argw	1459:108:45109:45121	1572959	4	True				
ANR	1573939	ParameterType	sljit_sw		1572959	0					
ANR	1573940	Identifier	argw		1572959	1					
ANR	1573941	Parameter	sljit_si next_arg	1459:123:45124:45140	1572959	5	True				
ANR	1573942	ParameterType	sljit_si		1572959	0					
ANR	1573943	Identifier	next_arg		1572959	1					
ANR	1573944	Parameter	sljit_sw next_argw	1459:142:45143:45160	1572959	6	True				
ANR	1573945	ParameterType	sljit_sw		1572959	0					
ANR	1573946	Identifier	next_argw		1572959	1					
ANR	1573947	CFGEntryNode	ENTRY		1572959		True				
ANR	1573948	CFGExitNode	EXIT		1572959		True				
ANR	1573949	Symbol	TMP_REG3		1572959						
ANR	1573950	Symbol	compiler -> cache_argw		1572959						
ANR	1573951	Symbol	* REG_MASK		1572959						
ANR	1573952	Symbol	ADD_DP		1572959						
ANR	1573953	Symbol	LOAD_DATA		1572959						
ANR	1573954	Symbol	SLJIT_MEM		1572959						
ANR	1573955	Symbol	sign		1572959						
ANR	1573956	Symbol	imm		1572959						
ANR	1573957	Symbol	reg_map		1572959						
ANR	1573958	Symbol	inp_flags		1572959						
ANR	1573959	Symbol	* compiler		1572959						
ANR	1573960	Symbol	argw		1572959						
ANR	1573961	Symbol	~max_delta		1572959						
ANR	1573962	Symbol	SLJIT_IMM		1572959						
ANR	1573963	Symbol	load_immediate		1572959						
ANR	1573964	Symbol	reg		1572959						
ANR	1573965	Symbol	arg		1572959						
ANR	1573966	Symbol	SRC2_IMM		1572959						
ANR	1573967	Symbol	compiler		1572959						
ANR	1573968	Symbol	WRITE_BACK		1572959						
ANR	1573969	Symbol	tmp_r		1572959						
ANR	1573970	Symbol	next_arg		1572959						
ANR	1573971	Symbol	push_inst		1572959						
ANR	1573972	Symbol	REG_MASK		1572959						
ANR	1573973	Symbol	* tmp_r		1572959						
ANR	1573974	Symbol	SUB_DP		1572959						
ANR	1573975	Symbol	compiler -> cache_arg		1572959						
ANR	1573976	Symbol	OFFS_REG_MASK		1572959						
ANR	1573977	Symbol	next_argw		1572959						
ANR	1573978	Symbol	SLJIT_SUCCESS		1572959						
ANR	1573979	Symbol	get_imm		1572959						
ANR	1573980	Symbol	* reg_map		1572959						
ANR	1573981	Symbol	max_delta		1572959						
ANR	1573982	Symbol	SLJIT_UNUSED		1572959						
ANR	1573983	Symbol	TYPE2_TRANSFER_IMM		1572959						
ANR	1573984	Symbol	RM		1572959						
ANR	1573985	Symbol	OFFS_REG		1572959						
ANR	1573986	Symbol	IS_TYPE1_TRANSFER		1572959						
ANR	1573987	Symbol	EMIT_DATA_PROCESS_INS		1572959						
ANR	1573988	Symbol	EMIT_DATA_TRANSFER		1572959						
ANR	1573989	Symbol	* arg		1572959						
ANR	1573990	Function	emit_op_mem	1586:0:49415:49743							
ANR	1573991	FunctionDef	"emit_op_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1573990	0					
ANR	1573992	CompoundStatement		1587:0:49548:49743	1573990	0					
ANR	1573993	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg , argw ) )"		1573990	0					
ANR	1573994	Condition	"getput_arg_fast ( compiler , flags , reg , arg , argw )"	1588:5:49555:49602	1573990	0	True				
ANR	1573995	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg , argw )"		1573990	0					
ANR	1573996	Callee	getput_arg_fast		1573990	0					
ANR	1573997	Identifier	getput_arg_fast		1573990	0					
ANR	1573998	ArgumentList	compiler		1573990	1					
ANR	1573999	Argument	compiler		1573990	0					
ANR	1574000	Identifier	compiler		1573990	0					
ANR	1574001	Argument	flags		1573990	1					
ANR	1574002	Identifier	flags		1573990	0					
ANR	1574003	Argument	reg		1573990	2					
ANR	1574004	Identifier	reg		1573990	0					
ANR	1574005	Argument	arg		1573990	3					
ANR	1574006	Identifier	arg		1573990	0					
ANR	1574007	Argument	argw		1573990	4					
ANR	1574008	Identifier	argw		1573990	0					
ANR	1574009	ReturnStatement	return compiler -> error ;	1589:2:49607:49629	1573990	1	True				
ANR	1574010	PtrMemberAccess	compiler -> error		1573990	0					
ANR	1574011	Identifier	compiler		1573990	0					
ANR	1574012	Identifier	error		1573990	1					
ANR	1574013	ExpressionStatement	compiler -> cache_arg = 0	1590:1:49632:49655	1573990	1	True				
ANR	1574014	AssignmentExpression	compiler -> cache_arg = 0		1573990	0		=			
ANR	1574015	PtrMemberAccess	compiler -> cache_arg		1573990	0					
ANR	1574016	Identifier	compiler		1573990	0					
ANR	1574017	Identifier	cache_arg		1573990	1					
ANR	1574018	PrimaryExpression	0		1573990	1					
ANR	1574019	ExpressionStatement	compiler -> cache_argw = 0	1591:1:49658:49682	1573990	2	True				
ANR	1574020	AssignmentExpression	compiler -> cache_argw = 0		1573990	0		=			
ANR	1574021	PtrMemberAccess	compiler -> cache_argw		1573990	0					
ANR	1574022	Identifier	compiler		1573990	0					
ANR	1574023	Identifier	cache_argw		1573990	1					
ANR	1574024	PrimaryExpression	0		1573990	1					
ANR	1574025	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 ) ;"	1592:1:49685:49741	1573990	3	True				
ANR	1574026	CallExpression	"getput_arg ( compiler , flags , reg , arg , argw , 0 , 0 )"		1573990	0					
ANR	1574027	Callee	getput_arg		1573990	0					
ANR	1574028	Identifier	getput_arg		1573990	0					
ANR	1574029	ArgumentList	compiler		1573990	1					
ANR	1574030	Argument	compiler		1573990	0					
ANR	1574031	Identifier	compiler		1573990	0					
ANR	1574032	Argument	flags		1573990	1					
ANR	1574033	Identifier	flags		1573990	0					
ANR	1574034	Argument	reg		1573990	2					
ANR	1574035	Identifier	reg		1573990	0					
ANR	1574036	Argument	arg		1573990	3					
ANR	1574037	Identifier	arg		1573990	0					
ANR	1574038	Argument	argw		1573990	4					
ANR	1574039	Identifier	argw		1573990	0					
ANR	1574040	Argument	0		1573990	5					
ANR	1574041	PrimaryExpression	0		1573990	0					
ANR	1574042	Argument	0		1573990	6					
ANR	1574043	PrimaryExpression	0		1573990	0					
ANR	1574044	ReturnType	static SLJIT_INLINE sljit_si		1573990	1					
ANR	1574045	Identifier	emit_op_mem		1573990	2					
ANR	1574046	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1573990	3					
ANR	1574047	Parameter	struct sljit_compiler * compiler	1586:41:49456:49486	1573990	0	True				
ANR	1574048	ParameterType	struct sljit_compiler *		1573990	0					
ANR	1574049	Identifier	compiler		1573990	1					
ANR	1574050	Parameter	sljit_si flags	1586:74:49489:49502	1573990	1	True				
ANR	1574051	ParameterType	sljit_si		1573990	0					
ANR	1574052	Identifier	flags		1573990	1					
ANR	1574053	Parameter	sljit_si reg	1586:90:49505:49516	1573990	2	True				
ANR	1574054	ParameterType	sljit_si		1573990	0					
ANR	1574055	Identifier	reg		1573990	1					
ANR	1574056	Parameter	sljit_si arg	1586:104:49519:49530	1573990	3	True				
ANR	1574057	ParameterType	sljit_si		1573990	0					
ANR	1574058	Identifier	arg		1573990	1					
ANR	1574059	Parameter	sljit_sw argw	1586:118:49533:49545	1573990	4	True				
ANR	1574060	ParameterType	sljit_sw		1573990	0					
ANR	1574061	Identifier	argw		1573990	1					
ANR	1574062	CFGEntryNode	ENTRY		1573990		True				
ANR	1574063	CFGExitNode	EXIT		1573990		True				
ANR	1574064	Symbol	compiler -> cache_argw		1573990						
ANR	1574065	Symbol	getput_arg		1573990						
ANR	1574066	Symbol	reg		1573990						
ANR	1574067	Symbol	compiler -> cache_arg		1573990						
ANR	1574068	Symbol	arg		1573990						
ANR	1574069	Symbol	flags		1573990						
ANR	1574070	Symbol	* compiler		1573990						
ANR	1574071	Symbol	compiler		1573990						
ANR	1574072	Symbol	argw		1573990						
ANR	1574073	Symbol	getput_arg_fast		1573990						
ANR	1574074	Symbol	compiler -> error		1573990						
ANR	1574075	Function	emit_op_mem2	1595:0:49746:50066							
ANR	1574076	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1574075	0					
ANR	1574077	CompoundStatement		1596:0:49913:50066	1574075	0					
ANR	1574078	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1574075	0					
ANR	1574079	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	1597:5:49920:49969	1574075	0	True				
ANR	1574080	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1574075	0					
ANR	1574081	Callee	getput_arg_fast		1574075	0					
ANR	1574082	Identifier	getput_arg_fast		1574075	0					
ANR	1574083	ArgumentList	compiler		1574075	1					
ANR	1574084	Argument	compiler		1574075	0					
ANR	1574085	Identifier	compiler		1574075	0					
ANR	1574086	Argument	flags		1574075	1					
ANR	1574087	Identifier	flags		1574075	0					
ANR	1574088	Argument	reg		1574075	2					
ANR	1574089	Identifier	reg		1574075	0					
ANR	1574090	Argument	arg1		1574075	3					
ANR	1574091	Identifier	arg1		1574075	0					
ANR	1574092	Argument	arg1w		1574075	4					
ANR	1574093	Identifier	arg1w		1574075	0					
ANR	1574094	ReturnStatement	return compiler -> error ;	1598:2:49974:49996	1574075	1	True				
ANR	1574095	PtrMemberAccess	compiler -> error		1574075	0					
ANR	1574096	Identifier	compiler		1574075	0					
ANR	1574097	Identifier	error		1574075	1					
ANR	1574098	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	1599:1:49999:50064	1574075	1	True				
ANR	1574099	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1574075	0					
ANR	1574100	Callee	getput_arg		1574075	0					
ANR	1574101	Identifier	getput_arg		1574075	0					
ANR	1574102	ArgumentList	compiler		1574075	1					
ANR	1574103	Argument	compiler		1574075	0					
ANR	1574104	Identifier	compiler		1574075	0					
ANR	1574105	Argument	flags		1574075	1					
ANR	1574106	Identifier	flags		1574075	0					
ANR	1574107	Argument	reg		1574075	2					
ANR	1574108	Identifier	reg		1574075	0					
ANR	1574109	Argument	arg1		1574075	3					
ANR	1574110	Identifier	arg1		1574075	0					
ANR	1574111	Argument	arg1w		1574075	4					
ANR	1574112	Identifier	arg1w		1574075	0					
ANR	1574113	Argument	arg2		1574075	5					
ANR	1574114	Identifier	arg2		1574075	0					
ANR	1574115	Argument	arg2w		1574075	6					
ANR	1574116	Identifier	arg2w		1574075	0					
ANR	1574117	ReturnType	static SLJIT_INLINE sljit_si		1574075	1					
ANR	1574118	Identifier	emit_op_mem2		1574075	2					
ANR	1574119	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1574075	3					
ANR	1574120	Parameter	struct sljit_compiler * compiler	1595:42:49788:49818	1574075	0	True				
ANR	1574121	ParameterType	struct sljit_compiler *		1574075	0					
ANR	1574122	Identifier	compiler		1574075	1					
ANR	1574123	Parameter	sljit_si flags	1595:75:49821:49834	1574075	1	True				
ANR	1574124	ParameterType	sljit_si		1574075	0					
ANR	1574125	Identifier	flags		1574075	1					
ANR	1574126	Parameter	sljit_si reg	1595:91:49837:49848	1574075	2	True				
ANR	1574127	ParameterType	sljit_si		1574075	0					
ANR	1574128	Identifier	reg		1574075	1					
ANR	1574129	Parameter	sljit_si arg1	1595:105:49851:49863	1574075	3	True				
ANR	1574130	ParameterType	sljit_si		1574075	0					
ANR	1574131	Identifier	arg1		1574075	1					
ANR	1574132	Parameter	sljit_sw arg1w	1595:120:49866:49879	1574075	4	True				
ANR	1574133	ParameterType	sljit_sw		1574075	0					
ANR	1574134	Identifier	arg1w		1574075	1					
ANR	1574135	Parameter	sljit_si arg2	1595:136:49882:49894	1574075	5	True				
ANR	1574136	ParameterType	sljit_si		1574075	0					
ANR	1574137	Identifier	arg2		1574075	1					
ANR	1574138	Parameter	sljit_sw arg2w	1595:151:49897:49910	1574075	6	True				
ANR	1574139	ParameterType	sljit_sw		1574075	0					
ANR	1574140	Identifier	arg2w		1574075	1					
ANR	1574141	CFGEntryNode	ENTRY		1574075		True				
ANR	1574142	CFGExitNode	EXIT		1574075		True				
ANR	1574143	Symbol	arg1w		1574075						
ANR	1574144	Symbol	arg2		1574075						
ANR	1574145	Symbol	getput_arg		1574075						
ANR	1574146	Symbol	reg		1574075						
ANR	1574147	Symbol	arg1		1574075						
ANR	1574148	Symbol	arg2w		1574075						
ANR	1574149	Symbol	flags		1574075						
ANR	1574150	Symbol	* compiler		1574075						
ANR	1574151	Symbol	compiler		1574075						
ANR	1574152	Symbol	getput_arg_fast		1574075						
ANR	1574153	Symbol	compiler -> error		1574075						
ANR	1574154	Function	emit_op	1602:0:50069:55234							
ANR	1574155	FunctionDef	"emit_op (struct sljit_compiler * compiler , sljit_si op , sljit_si inp_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1574154	0					
ANR	1574156	CompoundStatement		1606:0:50253:55234	1574154	0					
ANR	1574157	IdentifierDeclStatement	sljit_si dst_r ;	1613:1:50496:50510	1574154	0	True				
ANR	1574158	IdentifierDecl	dst_r		1574154	0					
ANR	1574159	IdentifierDeclType	sljit_si		1574154	0					
ANR	1574160	Identifier	dst_r		1574154	1					
ANR	1574161	IdentifierDeclStatement	sljit_si src1_r ;	1614:1:50513:50528	1574154	1	True				
ANR	1574162	IdentifierDecl	src1_r		1574154	0					
ANR	1574163	IdentifierDeclType	sljit_si		1574154	0					
ANR	1574164	Identifier	src1_r		1574154	1					
ANR	1574165	IdentifierDeclStatement	sljit_si src2_r = 0 ;	1615:1:50531:50550	1574154	2	True				
ANR	1574166	IdentifierDecl	src2_r = 0		1574154	0					
ANR	1574167	IdentifierDeclType	sljit_si		1574154	0					
ANR	1574168	Identifier	src2_r		1574154	1					
ANR	1574169	AssignmentExpression	src2_r = 0		1574154	2		=			
ANR	1574170	Identifier	src2_r		1574154	0					
ANR	1574171	PrimaryExpression	0		1574154	1					
ANR	1574172	IdentifierDeclStatement	sljit_si sugg_src2_r = TMP_REG2 ;	1616:1:50553:50584	1574154	3	True				
ANR	1574173	IdentifierDecl	sugg_src2_r = TMP_REG2		1574154	0					
ANR	1574174	IdentifierDeclType	sljit_si		1574154	0					
ANR	1574175	Identifier	sugg_src2_r		1574154	1					
ANR	1574176	AssignmentExpression	sugg_src2_r = TMP_REG2		1574154	2		=			
ANR	1574177	Identifier	TMP_REG2		1574154	0					
ANR	1574178	Identifier	TMP_REG2		1574154	1					
ANR	1574179	IdentifierDeclStatement	sljit_si flags = GET_FLAGS ( op ) ? SET_FLAGS : 0 ;	1617:1:50587:50633	1574154	4	True				
ANR	1574180	IdentifierDecl	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0		1574154	0					
ANR	1574181	IdentifierDeclType	sljit_si		1574154	0					
ANR	1574182	Identifier	flags		1574154	1					
ANR	1574183	AssignmentExpression	flags = GET_FLAGS ( op ) ? SET_FLAGS : 0		1574154	2		=			
ANR	1574184	Identifier	flags		1574154	0					
ANR	1574185	ConditionalExpression	GET_FLAGS ( op ) ? SET_FLAGS : 0		1574154	1					
ANR	1574186	Condition	GET_FLAGS ( op )		1574154	0					
ANR	1574187	CallExpression	GET_FLAGS ( op )		1574154	0					
ANR	1574188	Callee	GET_FLAGS		1574154	0					
ANR	1574189	Identifier	GET_FLAGS		1574154	0					
ANR	1574190	ArgumentList	op		1574154	1					
ANR	1574191	Argument	op		1574154	0					
ANR	1574192	Identifier	op		1574154	0					
ANR	1574193	Identifier	SET_FLAGS		1574154	1					
ANR	1574194	PrimaryExpression	0		1574154	2					
ANR	1574195	ExpressionStatement	compiler -> cache_arg = 0	1619:1:50637:50660	1574154	5	True				
ANR	1574196	AssignmentExpression	compiler -> cache_arg = 0		1574154	0		=			
ANR	1574197	PtrMemberAccess	compiler -> cache_arg		1574154	0					
ANR	1574198	Identifier	compiler		1574154	0					
ANR	1574199	Identifier	cache_arg		1574154	1					
ANR	1574200	PrimaryExpression	0		1574154	1					
ANR	1574201	ExpressionStatement	compiler -> cache_argw = 0	1620:1:50663:50687	1574154	6	True				
ANR	1574202	AssignmentExpression	compiler -> cache_argw = 0		1574154	0		=			
ANR	1574203	PtrMemberAccess	compiler -> cache_argw		1574154	0					
ANR	1574204	Identifier	compiler		1574154	0					
ANR	1574205	Identifier	cache_argw		1574154	1					
ANR	1574206	PrimaryExpression	0		1574154	1					
ANR	1574207	IfStatement	if ( SLJIT_UNLIKELY ( dst == SLJIT_UNUSED ) )		1574154	7					
ANR	1574208	Condition	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )	1623:5:50721:50755	1574154	0	True				
ANR	1574209	CallExpression	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )		1574154	0					
ANR	1574210	Callee	SLJIT_UNLIKELY		1574154	0					
ANR	1574211	Identifier	SLJIT_UNLIKELY		1574154	0					
ANR	1574212	ArgumentList	dst == SLJIT_UNUSED		1574154	1					
ANR	1574213	Argument	dst == SLJIT_UNUSED		1574154	0					
ANR	1574214	EqualityExpression	dst == SLJIT_UNUSED		1574154	0		==			
ANR	1574215	Identifier	dst		1574154	0					
ANR	1574216	Identifier	SLJIT_UNUSED		1574154	1					
ANR	1574217	CompoundStatement		18:42:504:504	1574154	1					
ANR	1574218	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM ) )		1574154	0					
ANR	1574219	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )	1624:6:50766:50826	1574154	0	True				
ANR	1574220	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1574154	0		&&			
ANR	1574221	RelationalExpression	op >= SLJIT_MOV		1574154	0		>=			
ANR	1574222	Identifier	op		1574154	0					
ANR	1574223	Identifier	SLJIT_MOV		1574154	1					
ANR	1574224	AndExpression	op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1574154	1		&&			
ANR	1574225	RelationalExpression	op <= SLJIT_MOVU_SI		1574154	0		<=			
ANR	1574226	Identifier	op		1574154	0					
ANR	1574227	Identifier	SLJIT_MOVU_SI		1574154	1					
ANR	1574228	UnaryOperationExpression	! ( src2 & SLJIT_MEM )		1574154	1					
ANR	1574229	UnaryOperator	!		1574154	0					
ANR	1574230	BitAndExpression	src2 & SLJIT_MEM		1574154	1		&			
ANR	1574231	Identifier	src2		1574154	0					
ANR	1574232	Identifier	SLJIT_MEM		1574154	1					
ANR	1574233	ReturnStatement	return SLJIT_SUCCESS ;	1625:3:50832:50852	1574154	1	True				
ANR	1574234	Identifier	SLJIT_SUCCESS		1574154	0					
ANR	1574235	ExpressionStatement	dst_r = TMP_REG2	1626:2:50856:50872	1574154	1	True				
ANR	1574236	AssignmentExpression	dst_r = TMP_REG2		1574154	0		=			
ANR	1574237	Identifier	dst_r		1574154	0					
ANR	1574238	Identifier	TMP_REG2		1574154	1					
ANR	1574239	ElseStatement	else		1574154	0					
ANR	1574240	IfStatement	if ( FAST_IS_REG ( dst ) )		1574154	0					
ANR	1574241	Condition	FAST_IS_REG ( dst )	1628:10:50887:50902	1574154	0	True				
ANR	1574242	CallExpression	FAST_IS_REG ( dst )		1574154	0					
ANR	1574243	Callee	FAST_IS_REG		1574154	0					
ANR	1574244	Identifier	FAST_IS_REG		1574154	0					
ANR	1574245	ArgumentList	dst		1574154	1					
ANR	1574246	Argument	dst		1574154	0					
ANR	1574247	Identifier	dst		1574154	0					
ANR	1574248	CompoundStatement		23:28:651:651	1574154	1					
ANR	1574249	ExpressionStatement	dst_r = dst	1629:2:50909:50920	1574154	0	True				
ANR	1574250	AssignmentExpression	dst_r = dst		1574154	0		=			
ANR	1574251	Identifier	dst_r		1574154	0					
ANR	1574252	Identifier	dst		1574154	1					
ANR	1574253	ExpressionStatement	flags |= REG_DEST	1630:2:50924:50941	1574154	1	True				
ANR	1574254	AssignmentExpression	flags |= REG_DEST		1574154	0		|=			
ANR	1574255	Identifier	flags		1574154	0					
ANR	1574256	Identifier	REG_DEST		1574154	1					
ANR	1574257	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1574154	2					
ANR	1574258	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	1631:6:50949:50986	1574154	0	True				
ANR	1574259	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1574154	0		&&			
ANR	1574260	RelationalExpression	op >= SLJIT_MOV		1574154	0		>=			
ANR	1574261	Identifier	op		1574154	0					
ANR	1574262	Identifier	SLJIT_MOV		1574154	1					
ANR	1574263	RelationalExpression	op <= SLJIT_MOVU_SI		1574154	1		<=			
ANR	1574264	Identifier	op		1574154	0					
ANR	1574265	Identifier	SLJIT_MOVU_SI		1574154	1					
ANR	1574266	ExpressionStatement	sugg_src2_r = dst_r	1632:3:50992:51011	1574154	1	True				
ANR	1574267	AssignmentExpression	sugg_src2_r = dst_r		1574154	0		=			
ANR	1574268	Identifier	sugg_src2_r		1574154	0					
ANR	1574269	Identifier	dst_r		1574154	1					
ANR	1574270	ElseStatement	else		1574154	0					
ANR	1574271	CompoundStatement		29:6:768:768	1574154	0					
ANR	1574272	ExpressionStatement	SLJIT_ASSERT ( dst & SLJIT_MEM )	1635:2:51026:51055	1574154	0	True				
ANR	1574273	CallExpression	SLJIT_ASSERT ( dst & SLJIT_MEM )		1574154	0					
ANR	1574274	Callee	SLJIT_ASSERT		1574154	0					
ANR	1574275	Identifier	SLJIT_ASSERT		1574154	0					
ANR	1574276	ArgumentList	dst & SLJIT_MEM		1574154	1					
ANR	1574277	Argument	dst & SLJIT_MEM		1574154	0					
ANR	1574278	BitAndExpression	dst & SLJIT_MEM		1574154	0		&			
ANR	1574279	Identifier	dst		1574154	0					
ANR	1574280	Identifier	SLJIT_MEM		1574154	1					
ANR	1574281	IfStatement	"if ( getput_arg_fast ( compiler , inp_flags | ARG_TEST , TMP_REG2 , dst , dstw ) )"		1574154	1					
ANR	1574282	Condition	"getput_arg_fast ( compiler , inp_flags | ARG_TEST , TMP_REG2 , dst , dstw )"	1636:6:51063:51130	1574154	0	True				
ANR	1574283	CallExpression	"getput_arg_fast ( compiler , inp_flags | ARG_TEST , TMP_REG2 , dst , dstw )"		1574154	0					
ANR	1574284	Callee	getput_arg_fast		1574154	0					
ANR	1574285	Identifier	getput_arg_fast		1574154	0					
ANR	1574286	ArgumentList	compiler		1574154	1					
ANR	1574287	Argument	compiler		1574154	0					
ANR	1574288	Identifier	compiler		1574154	0					
ANR	1574289	Argument	inp_flags | ARG_TEST		1574154	1					
ANR	1574290	InclusiveOrExpression	inp_flags | ARG_TEST		1574154	0		|			
ANR	1574291	Identifier	inp_flags		1574154	0					
ANR	1574292	Identifier	ARG_TEST		1574154	1					
ANR	1574293	Argument	TMP_REG2		1574154	2					
ANR	1574294	Identifier	TMP_REG2		1574154	0					
ANR	1574295	Argument	dst		1574154	3					
ANR	1574296	Identifier	dst		1574154	0					
ANR	1574297	Argument	dstw		1574154	4					
ANR	1574298	Identifier	dstw		1574154	0					
ANR	1574299	CompoundStatement		31:76:879:879	1574154	1					
ANR	1574300	ExpressionStatement	flags |= FAST_DEST	1637:3:51138:51156	1574154	0	True				
ANR	1574301	AssignmentExpression	flags |= FAST_DEST		1574154	0		|=			
ANR	1574302	Identifier	flags		1574154	0					
ANR	1574303	Identifier	FAST_DEST		1574154	1					
ANR	1574304	ExpressionStatement	dst_r = TMP_REG2	1638:3:51161:51177	1574154	1	True				
ANR	1574305	AssignmentExpression	dst_r = TMP_REG2		1574154	0		=			
ANR	1574306	Identifier	dst_r		1574154	0					
ANR	1574307	Identifier	TMP_REG2		1574154	1					
ANR	1574308	ElseStatement	else		1574154	0					
ANR	1574309	CompoundStatement		35:7:936:936	1574154	0					
ANR	1574310	ExpressionStatement	flags |= SLOW_DEST	1641:3:51195:51213	1574154	0	True				
ANR	1574311	AssignmentExpression	flags |= SLOW_DEST		1574154	0		|=			
ANR	1574312	Identifier	flags		1574154	0					
ANR	1574313	Identifier	SLOW_DEST		1574154	1					
ANR	1574314	ExpressionStatement	dst_r = 0	1642:3:51218:51227	1574154	1	True				
ANR	1574315	AssignmentExpression	dst_r = 0		1574154	0		=			
ANR	1574316	Identifier	dst_r		1574154	0					
ANR	1574317	PrimaryExpression	0		1574154	1					
ANR	1574318	IfStatement	if ( FAST_IS_REG ( src1 ) )		1574154	8					
ANR	1574319	Condition	FAST_IS_REG ( src1 )	1647:5:51259:51275	1574154	0	True				
ANR	1574320	CallExpression	FAST_IS_REG ( src1 )		1574154	0					
ANR	1574321	Callee	FAST_IS_REG		1574154	0					
ANR	1574322	Identifier	FAST_IS_REG		1574154	0					
ANR	1574323	ArgumentList	src1		1574154	1					
ANR	1574324	Argument	src1		1574154	0					
ANR	1574325	Identifier	src1		1574154	0					
ANR	1574326	ExpressionStatement	src1_r = src1	1648:2:51280:51293	1574154	1	True				
ANR	1574327	AssignmentExpression	src1_r = src1		1574154	0		=			
ANR	1574328	Identifier	src1_r		1574154	0					
ANR	1574329	Identifier	src1		1574154	1					
ANR	1574330	ElseStatement	else		1574154	0					
ANR	1574331	IfStatement	if ( FAST_IS_REG ( src2 ) )		1574154	0					
ANR	1574332	Condition	FAST_IS_REG ( src2 )	1649:10:51305:51321	1574154	0	True				
ANR	1574333	CallExpression	FAST_IS_REG ( src2 )		1574154	0					
ANR	1574334	Callee	FAST_IS_REG		1574154	0					
ANR	1574335	Identifier	FAST_IS_REG		1574154	0					
ANR	1574336	ArgumentList	src2		1574154	1					
ANR	1574337	Argument	src2		1574154	0					
ANR	1574338	Identifier	src2		1574154	0					
ANR	1574339	CompoundStatement		44:29:1070:1070	1574154	1					
ANR	1574340	ExpressionStatement	flags |= ARGS_SWAPPED	1650:2:51328:51349	1574154	0	True				
ANR	1574341	AssignmentExpression	flags |= ARGS_SWAPPED		1574154	0		|=			
ANR	1574342	Identifier	flags		1574154	0					
ANR	1574343	Identifier	ARGS_SWAPPED		1574154	1					
ANR	1574344	ExpressionStatement	src1_r = src2	1651:2:51353:51366	1574154	1	True				
ANR	1574345	AssignmentExpression	src1_r = src2		1574154	0		=			
ANR	1574346	Identifier	src1_r		1574154	0					
ANR	1574347	Identifier	src2		1574154	1					
ANR	1574348	ExpressionStatement	src2 = src1	1652:2:51370:51381	1574154	2	True				
ANR	1574349	AssignmentExpression	src2 = src1		1574154	0		=			
ANR	1574350	Identifier	src2		1574154	0					
ANR	1574351	Identifier	src1		1574154	1					
ANR	1574352	ExpressionStatement	src2w = src1w	1653:2:51385:51398	1574154	3	True				
ANR	1574353	AssignmentExpression	src2w = src1w		1574154	0		=			
ANR	1574354	Identifier	src2w		1574154	0					
ANR	1574355	Identifier	src1w		1574154	1					
ANR	1574356	ReturnType	static sljit_si		1574154	1					
ANR	1574357	Identifier	emit_op		1574154	2					
ANR	1574358	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si inp_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1574154	3					
ANR	1574359	Parameter	struct sljit_compiler * compiler	1602:24:50093:50123	1574154	0	True				
ANR	1574360	ParameterType	struct sljit_compiler *		1574154	0					
ANR	1574361	Identifier	compiler		1574154	1					
ANR	1574362	Parameter	sljit_si op	1602:57:50126:50136	1574154	1	True				
ANR	1574363	ParameterType	sljit_si		1574154	0					
ANR	1574364	Identifier	op		1574154	1					
ANR	1574365	Parameter	sljit_si inp_flags	1602:70:50139:50156	1574154	2	True				
ANR	1574366	ParameterType	sljit_si		1574154	0					
ANR	1574367	Identifier	inp_flags		1574154	1					
ANR	1574368	Parameter	sljit_si dst	1603:1:50160:50171	1574154	3	True				
ANR	1574369	ParameterType	sljit_si		1574154	0					
ANR	1574370	Identifier	dst		1574154	1					
ANR	1574371	Parameter	sljit_sw dstw	1603:15:50174:50186	1574154	4	True				
ANR	1574372	ParameterType	sljit_sw		1574154	0					
ANR	1574373	Identifier	dstw		1574154	1					
ANR	1574374	Parameter	sljit_si src1	1604:1:50190:50202	1574154	5	True				
ANR	1574375	ParameterType	sljit_si		1574154	0					
ANR	1574376	Identifier	src1		1574154	1					
ANR	1574377	Parameter	sljit_sw src1w	1604:16:50205:50218	1574154	6	True				
ANR	1574378	ParameterType	sljit_sw		1574154	0					
ANR	1574379	Identifier	src1w		1574154	1					
ANR	1574380	Parameter	sljit_si src2	1605:1:50222:50234	1574154	7	True				
ANR	1574381	ParameterType	sljit_si		1574154	0					
ANR	1574382	Identifier	src2		1574154	1					
ANR	1574383	Parameter	sljit_sw src2w	1605:16:50237:50250	1574154	8	True				
ANR	1574384	ParameterType	sljit_sw		1574154	0					
ANR	1574385	Identifier	src2w		1574154	1					
ANR	1574386	CFGEntryNode	ENTRY		1574154		True				
ANR	1574387	CFGExitNode	EXIT		1574154		True				
ANR	1574388	Symbol	TMP_REG2		1574154						
ANR	1574389	Symbol	compiler -> cache_argw		1574154						
ANR	1574390	Symbol	src1w		1574154						
ANR	1574391	Symbol	dst		1574154						
ANR	1574392	Symbol	SLJIT_MOV		1574154						
ANR	1574393	Symbol	SLOW_DEST		1574154						
ANR	1574394	Symbol	SLJIT_MEM		1574154						
ANR	1574395	Symbol	flags		1574154						
ANR	1574396	Symbol	inp_flags		1574154						
ANR	1574397	Symbol	SLJIT_MOVU_SI		1574154						
ANR	1574398	Symbol	* compiler		1574154						
ANR	1574399	Symbol	sugg_src2_r		1574154						
ANR	1574400	Symbol	ARG_TEST		1574154						
ANR	1574401	Symbol	dst_r		1574154						
ANR	1574402	Symbol	GET_FLAGS		1574154						
ANR	1574403	Symbol	ARGS_SWAPPED		1574154						
ANR	1574404	Symbol	compiler		1574154						
ANR	1574405	Symbol	FAST_DEST		1574154						
ANR	1574406	Symbol	src2w		1574154						
ANR	1574407	Symbol	op		1574154						
ANR	1574408	Symbol	FAST_IS_REG		1574154						
ANR	1574409	Symbol	compiler -> cache_arg		1574154						
ANR	1574410	Symbol	SLJIT_SUCCESS		1574154						
ANR	1574411	Symbol	SET_FLAGS		1574154						
ANR	1574412	Symbol	src2_r		1574154						
ANR	1574413	Symbol	src1_r		1574154						
ANR	1574414	Symbol	SLJIT_UNUSED		1574154						
ANR	1574415	Symbol	src1		1574154						
ANR	1574416	Symbol	src2		1574154						
ANR	1574417	Symbol	REG_DEST		1574154						
ANR	1574418	Symbol	getput_arg_fast		1574154						
ANR	1574419	Symbol	dstw		1574154						
ANR	1574420	Symbol	SLJIT_UNLIKELY		1574154						
ANR	1574421	DeclStmt									
ANR	1574422	Decl							unsigned int	"unsigned int ( unsigned int numerator , unsigned int denominator )"	__aeabi_uidivmod
ANR	1574423	DeclStmt									
ANR	1574424	Decl							extern int	"extern int ( int numerator , int denominator )"	__aeabi_idivmod
ANR	1574425	Function	sljit_emit_op0	1807:0:55536:56977							
ANR	1574426	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1574425	0					
ANR	1574427	CompoundStatement		1808:0:55631:56977	1574425	0					
ANR	1574428	ExpressionStatement	CHECK_ERROR ( )	1809:1:55634:55647	1574425	0	True				
ANR	1574429	CallExpression	CHECK_ERROR ( )		1574425	0					
ANR	1574430	Callee	CHECK_ERROR		1574425	0					
ANR	1574431	Identifier	CHECK_ERROR		1574425	0					
ANR	1574432	ArgumentList			1574425	1					
ANR	1574433	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	1810:1:55650:55691	1574425	1	True				
ANR	1574434	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1574425	0					
ANR	1574435	Callee	CHECK		1574425	0					
ANR	1574436	Identifier	CHECK		1574425	0					
ANR	1574437	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1574425	1					
ANR	1574438	Argument	"check_sljit_emit_op0 ( compiler , op )"		1574425	0					
ANR	1574439	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1574425	0					
ANR	1574440	Callee	check_sljit_emit_op0		1574425	0					
ANR	1574441	Identifier	check_sljit_emit_op0		1574425	0					
ANR	1574442	ArgumentList	compiler		1574425	1					
ANR	1574443	Argument	compiler		1574425	0					
ANR	1574444	Identifier	compiler		1574425	0					
ANR	1574445	Argument	op		1574425	1					
ANR	1574446	Identifier	op		1574425	0					
ANR	1574447	ExpressionStatement	op = GET_OPCODE ( op )	1812:1:55695:55714	1574425	2	True				
ANR	1574448	AssignmentExpression	op = GET_OPCODE ( op )		1574425	0		=			
ANR	1574449	Identifier	op		1574425	0					
ANR	1574450	CallExpression	GET_OPCODE ( op )		1574425	1					
ANR	1574451	Callee	GET_OPCODE		1574425	0					
ANR	1574452	Identifier	GET_OPCODE		1574425	0					
ANR	1574453	ArgumentList	op		1574425	1					
ANR	1574454	Argument	op		1574425	0					
ANR	1574455	Identifier	op		1574425	0					
ANR	1574456	SwitchStatement	switch ( op )		1574425	3					
ANR	1574457	Condition	op	1813:9:55725:55726	1574425	0	True				
ANR	1574458	Identifier	op		1574425	0					
ANR	1574459	CompoundStatement		6:13:97:97	1574425	1					
ANR	1574460	Label	case SLJIT_BREAKPOINT :	1814:1:55732:55753	1574425	0	True				
ANR	1574461	Identifier	SLJIT_BREAKPOINT		1574425	0					
ANR	1574462	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , BKPT ) )"	1815:2:55757:55791	1574425	1	True				
ANR	1574463	CallExpression	"FAIL_IF ( push_inst ( compiler , BKPT ) )"		1574425	0					
ANR	1574464	Callee	FAIL_IF		1574425	0					
ANR	1574465	Identifier	FAIL_IF		1574425	0					
ANR	1574466	ArgumentList	"push_inst ( compiler , BKPT )"		1574425	1					
ANR	1574467	Argument	"push_inst ( compiler , BKPT )"		1574425	0					
ANR	1574468	CallExpression	"push_inst ( compiler , BKPT )"		1574425	0					
ANR	1574469	Callee	push_inst		1574425	0					
ANR	1574470	Identifier	push_inst		1574425	0					
ANR	1574471	ArgumentList	compiler		1574425	1					
ANR	1574472	Argument	compiler		1574425	0					
ANR	1574473	Identifier	compiler		1574425	0					
ANR	1574474	Argument	BKPT		1574425	1					
ANR	1574475	Identifier	BKPT		1574425	0					
ANR	1574476	BreakStatement	break ;	1816:2:55795:55800	1574425	2	True				
ANR	1574477	Label	case SLJIT_NOP :	1817:1:55803:55817	1574425	3	True				
ANR	1574478	Identifier	SLJIT_NOP		1574425	0					
ANR	1574479	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , NOP ) )"	1818:2:55821:55854	1574425	4	True				
ANR	1574480	CallExpression	"FAIL_IF ( push_inst ( compiler , NOP ) )"		1574425	0					
ANR	1574481	Callee	FAIL_IF		1574425	0					
ANR	1574482	Identifier	FAIL_IF		1574425	0					
ANR	1574483	ArgumentList	"push_inst ( compiler , NOP )"		1574425	1					
ANR	1574484	Argument	"push_inst ( compiler , NOP )"		1574425	0					
ANR	1574485	CallExpression	"push_inst ( compiler , NOP )"		1574425	0					
ANR	1574486	Callee	push_inst		1574425	0					
ANR	1574487	Identifier	push_inst		1574425	0					
ANR	1574488	ArgumentList	compiler		1574425	1					
ANR	1574489	Argument	compiler		1574425	0					
ANR	1574490	Identifier	compiler		1574425	0					
ANR	1574491	Argument	NOP		1574425	1					
ANR	1574492	Identifier	NOP		1574425	0					
ANR	1574493	BreakStatement	break ;	1819:2:55858:55863	1574425	5	True				
ANR	1574494	Label	case SLJIT_LUMUL :	1820:1:55866:55882	1574425	6	True				
ANR	1574495	Identifier	SLJIT_LUMUL		1574425	0					
ANR	1574496	Label	case SLJIT_LSMUL :	1821:1:55885:55901	1574425	7	True				
ANR	1574497	Identifier	SLJIT_LSMUL		1574425	0					
ANR	1574498	ReturnStatement	"return push_inst ( compiler , ( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 16 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 8 ) | reg_map [ SLJIT_R1 ] ) ;"	1823:2:55962:56140	1574425	8	True				
ANR	1574499	CallExpression	"push_inst ( compiler , ( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 16 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 8 ) | reg_map [ SLJIT_R1 ] )"		1574425	0					
ANR	1574500	Callee	push_inst		1574425	0					
ANR	1574501	Identifier	push_inst		1574425	0					
ANR	1574502	ArgumentList	compiler		1574425	1					
ANR	1574503	Argument	compiler		1574425	0					
ANR	1574504	Identifier	compiler		1574425	0					
ANR	1574505	Argument	( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 16 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 8 ) | reg_map [ SLJIT_R1 ]		1574425	1					
ANR	1574506	InclusiveOrExpression	( op == SLJIT_LUMUL ? UMULL : SMULL ) | ( reg_map [ SLJIT_R1 ] << 16 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 8 ) | reg_map [ SLJIT_R1 ]		1574425	0		|			
ANR	1574507	ConditionalExpression	op == SLJIT_LUMUL ? UMULL : SMULL		1574425	0					
ANR	1574508	Condition	op == SLJIT_LUMUL		1574425	0					
ANR	1574509	EqualityExpression	op == SLJIT_LUMUL		1574425	0		==			
ANR	1574510	Identifier	op		1574425	0					
ANR	1574511	Identifier	SLJIT_LUMUL		1574425	1					
ANR	1574512	Identifier	UMULL		1574425	1					
ANR	1574513	Identifier	SMULL		1574425	2					
ANR	1574514	InclusiveOrExpression	( reg_map [ SLJIT_R1 ] << 16 ) | ( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 8 ) | reg_map [ SLJIT_R1 ]		1574425	1		|			
ANR	1574515	ShiftExpression	reg_map [ SLJIT_R1 ] << 16		1574425	0		<<			
ANR	1574516	ArrayIndexing	reg_map [ SLJIT_R1 ]		1574425	0					
ANR	1574517	Identifier	reg_map		1574425	0					
ANR	1574518	Identifier	SLJIT_R1		1574425	1					
ANR	1574519	PrimaryExpression	16		1574425	1					
ANR	1574520	InclusiveOrExpression	( reg_map [ SLJIT_R0 ] << 12 ) | ( reg_map [ SLJIT_R0 ] << 8 ) | reg_map [ SLJIT_R1 ]		1574425	1		|			
ANR	1574521	ShiftExpression	reg_map [ SLJIT_R0 ] << 12		1574425	0		<<			
ANR	1574522	ArrayIndexing	reg_map [ SLJIT_R0 ]		1574425	0					
ANR	1574523	Identifier	reg_map		1574425	0					
ANR	1574524	Identifier	SLJIT_R0		1574425	1					
ANR	1574525	PrimaryExpression	12		1574425	1					
ANR	1574526	InclusiveOrExpression	( reg_map [ SLJIT_R0 ] << 8 ) | reg_map [ SLJIT_R1 ]		1574425	1		|			
ANR	1574527	ShiftExpression	reg_map [ SLJIT_R0 ] << 8		1574425	0		<<			
ANR	1574528	ArrayIndexing	reg_map [ SLJIT_R0 ]		1574425	0					
ANR	1574529	Identifier	reg_map		1574425	0					
ANR	1574530	Identifier	SLJIT_R0		1574425	1					
ANR	1574531	PrimaryExpression	8		1574425	1					
ANR	1574532	ArrayIndexing	reg_map [ SLJIT_R1 ]		1574425	1					
ANR	1574533	Identifier	reg_map		1574425	0					
ANR	1574534	Identifier	SLJIT_R1		1574425	1					
ANR	1574535	Label	case SLJIT_LUDIV :	1836:1:56442:56458	1574425	9	True				
ANR	1574536	Identifier	SLJIT_LUDIV		1574425	0					
ANR	1574537	Label	case SLJIT_LSDIV :	1837:1:56461:56477	1574425	10	True				
ANR	1574538	Identifier	SLJIT_LSDIV		1574425	0					
ANR	1574539	IfStatement	if ( compiler -> scratches >= 3 )		1574425	11					
ANR	1574540	Condition	compiler -> scratches >= 3	1838:6:56485:56508	1574425	0	True				
ANR	1574541	RelationalExpression	compiler -> scratches >= 3		1574425	0		>=			
ANR	1574542	PtrMemberAccess	compiler -> scratches		1574425	0					
ANR	1574543	Identifier	compiler		1574425	0					
ANR	1574544	Identifier	scratches		1574425	1					
ANR	1574545	PrimaryExpression	3		1574425	1					
ANR	1574546	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , 0xe52d2008 ) )"	1839:3:56514:56579	1574425	1	True				
ANR	1574547	CallExpression	"FAIL_IF ( push_inst ( compiler , 0xe52d2008 ) )"		1574425	0					
ANR	1574548	Callee	FAIL_IF		1574425	0					
ANR	1574549	Identifier	FAIL_IF		1574425	0					
ANR	1574550	ArgumentList	"push_inst ( compiler , 0xe52d2008 )"		1574425	1					
ANR	1574551	Argument	"push_inst ( compiler , 0xe52d2008 )"		1574425	0					
ANR	1574552	CallExpression	"push_inst ( compiler , 0xe52d2008 )"		1574425	0					
ANR	1574553	Callee	push_inst		1574425	0					
ANR	1574554	Identifier	push_inst		1574425	0					
ANR	1574555	ArgumentList	compiler		1574425	1					
ANR	1574556	Argument	compiler		1574425	0					
ANR	1574557	Identifier	compiler		1574425	0					
ANR	1574558	Argument	0xe52d2008		1574425	1					
ANR	1574559	PrimaryExpression	0xe52d2008		1574425	0					
ANR	1574560	ExpressionStatement	"FAIL_IF ( sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) ) )"	1841:2:56605:56767	1574425	12	True				
ANR	1574561	CallExpression	"FAIL_IF ( sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) ) )"		1574425	0					
ANR	1574562	Callee	FAIL_IF		1574425	0					
ANR	1574563	Identifier	FAIL_IF		1574425	0					
ANR	1574564	ArgumentList	"sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) )"		1574425	1					
ANR	1574565	Argument	"sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) )"		1574425	0					
ANR	1574566	CallExpression	"sljit_emit_ijump ( compiler , SLJIT_FAST_CALL , SLJIT_IMM , ( op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod ) ) )"		1574425	0					
ANR	1574567	Callee	sljit_emit_ijump		1574425	0					
ANR	1574568	Identifier	sljit_emit_ijump		1574425	0					
ANR	1574569	ArgumentList	compiler		1574425	1					
ANR	1574570	Argument	compiler		1574425	0					
ANR	1574571	Identifier	compiler		1574425	0					
ANR	1574572	Argument	SLJIT_FAST_CALL		1574425	1					
ANR	1574573	Identifier	SLJIT_FAST_CALL		1574425	0					
ANR	1574574	Argument	SLJIT_IMM		1574425	2					
ANR	1574575	Identifier	SLJIT_IMM		1574425	0					
ANR	1574576	Argument	op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod )		1574425	3					
ANR	1574577	ConditionalExpression	op == SLJIT_LUDIV ? SLJIT_FUNC_OFFSET ( __aeabi_uidivmod ) : SLJIT_FUNC_OFFSET ( __aeabi_idivmod )		1574425	0					
ANR	1574578	Condition	op == SLJIT_LUDIV		1574425	0					
ANR	1574579	EqualityExpression	op == SLJIT_LUDIV		1574425	0		==			
ANR	1574580	Identifier	op		1574425	0					
ANR	1574581	Identifier	SLJIT_LUDIV		1574425	1					
ANR	1574582	CallExpression	SLJIT_FUNC_OFFSET ( __aeabi_uidivmod )		1574425	1					
ANR	1574583	Callee	SLJIT_FUNC_OFFSET		1574425	0					
ANR	1574584	Identifier	SLJIT_FUNC_OFFSET		1574425	0					
ANR	1574585	ArgumentList	__aeabi_uidivmod		1574425	1					
ANR	1574586	Argument	__aeabi_uidivmod		1574425	0					
ANR	1574587	Identifier	__aeabi_uidivmod		1574425	0					
ANR	1574588	CallExpression	SLJIT_FUNC_OFFSET ( __aeabi_idivmod )		1574425	2					
ANR	1574589	Callee	SLJIT_FUNC_OFFSET		1574425	0					
ANR	1574590	Identifier	SLJIT_FUNC_OFFSET		1574425	0					
ANR	1574591	ArgumentList	__aeabi_idivmod		1574425	1					
ANR	1574592	Argument	__aeabi_idivmod		1574425	0					
ANR	1574593	Identifier	__aeabi_idivmod		1574425	0					
ANR	1574594	IfStatement	if ( compiler -> scratches >= 3 )		1574425	13					
ANR	1574595	Condition	compiler -> scratches >= 3	1846:6:56834:56857	1574425	0	True				
ANR	1574596	RelationalExpression	compiler -> scratches >= 3		1574425	0		>=			
ANR	1574597	PtrMemberAccess	compiler -> scratches		1574425	0					
ANR	1574598	Identifier	compiler		1574425	0					
ANR	1574599	Identifier	scratches		1574425	1					
ANR	1574600	PrimaryExpression	3		1574425	1					
ANR	1574601	ReturnStatement	"return push_inst ( compiler , 0xe49d2008 ) ;"	1847:3:56863:56924	1574425	1	True				
ANR	1574602	CallExpression	"push_inst ( compiler , 0xe49d2008 )"		1574425	0					
ANR	1574603	Callee	push_inst		1574425	0					
ANR	1574604	Identifier	push_inst		1574425	0					
ANR	1574605	ArgumentList	compiler		1574425	1					
ANR	1574606	Argument	compiler		1574425	0					
ANR	1574607	Identifier	compiler		1574425	0					
ANR	1574608	Argument	0xe49d2008		1574425	1					
ANR	1574609	PrimaryExpression	0xe49d2008		1574425	0					
ANR	1574610	ReturnStatement	return SLJIT_SUCCESS ;	1848:2:56928:56948	1574425	14	True				
ANR	1574611	Identifier	SLJIT_SUCCESS		1574425	0					
ANR	1574612	ReturnStatement	return SLJIT_SUCCESS ;	1851:1:56955:56975	1574425	4	True				
ANR	1574613	Identifier	SLJIT_SUCCESS		1574425	0					
ANR	1574614	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1574425	1					
ANR	1574615	Identifier	sljit_emit_op0		1574425	2					
ANR	1574616	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1574425	3					
ANR	1574617	Parameter	struct sljit_compiler * compiler	1807:49:55585:55615	1574425	0	True				
ANR	1574618	ParameterType	struct sljit_compiler *		1574425	0					
ANR	1574619	Identifier	compiler		1574425	1					
ANR	1574620	Parameter	sljit_si op	1807:82:55618:55628	1574425	1	True				
ANR	1574621	ParameterType	sljit_si		1574425	0					
ANR	1574622	Identifier	op		1574425	1					
ANR	1574623	CFGEntryNode	ENTRY		1574425		True				
ANR	1574624	CFGExitNode	EXIT		1574425		True				
ANR	1574625	Symbol	compiler -> scratches		1574425						
ANR	1574626	Symbol	__aeabi_uidivmod		1574425						
ANR	1574627	Symbol	sljit_emit_ijump		1574425						
ANR	1574628	Symbol	SLJIT_LUMUL		1574425						
ANR	1574629	Symbol	reg_map		1574425						
ANR	1574630	Symbol	* compiler		1574425						
ANR	1574631	Symbol	SLJIT_R1		1574425						
ANR	1574632	Symbol	SMULL		1574425						
ANR	1574633	Symbol	GET_OPCODE		1574425						
ANR	1574634	Symbol	SLJIT_R0		1574425						
ANR	1574635	Symbol	SLJIT_FUNC_OFFSET		1574425						
ANR	1574636	Symbol	* SLJIT_R1		1574425						
ANR	1574637	Symbol	BKPT		1574425						
ANR	1574638	Symbol	SLJIT_IMM		1574425						
ANR	1574639	Symbol	SLJIT_FAST_CALL		1574425						
ANR	1574640	Symbol	compiler		1574425						
ANR	1574641	Symbol	* SLJIT_R0		1574425						
ANR	1574642	Symbol	op		1574425						
ANR	1574643	Symbol	push_inst		1574425						
ANR	1574644	Symbol	check_sljit_emit_op0		1574425						
ANR	1574645	Symbol	SLJIT_LUDIV		1574425						
ANR	1574646	Symbol	SLJIT_SUCCESS		1574425						
ANR	1574647	Symbol	* reg_map		1574425						
ANR	1574648	Symbol	NOP		1574425						
ANR	1574649	Symbol	UMULL		1574425						
ANR	1574650	Symbol	__aeabi_idivmod		1574425						
ANR	1574651	Function	sljit_emit_op1	1854:0:56980:59550							
ANR	1574652	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1574651	0					
ANR	1574653	CompoundStatement		1857:0:57135:59550	1574651	0					
ANR	1574654	ExpressionStatement	CHECK_ERROR ( )	1858:1:57138:57151	1574651	0	True				
ANR	1574655	CallExpression	CHECK_ERROR ( )		1574651	0					
ANR	1574656	Callee	CHECK_ERROR		1574651	0					
ANR	1574657	Identifier	CHECK_ERROR		1574651	0					
ANR	1574658	ArgumentList			1574651	1					
ANR	1574659	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	1859:1:57154:57217	1574651	1	True				
ANR	1574660	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1574651	0					
ANR	1574661	Callee	CHECK		1574651	0					
ANR	1574662	Identifier	CHECK		1574651	0					
ANR	1574663	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1574651	1					
ANR	1574664	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1574651	0					
ANR	1574665	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1574651	0					
ANR	1574666	Callee	check_sljit_emit_op1		1574651	0					
ANR	1574667	Identifier	check_sljit_emit_op1		1574651	0					
ANR	1574668	ArgumentList	compiler		1574651	1					
ANR	1574669	Argument	compiler		1574651	0					
ANR	1574670	Identifier	compiler		1574651	0					
ANR	1574671	Argument	op		1574651	1					
ANR	1574672	Identifier	op		1574651	0					
ANR	1574673	Argument	dst		1574651	2					
ANR	1574674	Identifier	dst		1574651	0					
ANR	1574675	Argument	dstw		1574651	3					
ANR	1574676	Identifier	dstw		1574651	0					
ANR	1574677	Argument	src		1574651	4					
ANR	1574678	Identifier	src		1574651	0					
ANR	1574679	Argument	srcw		1574651	5					
ANR	1574680	Identifier	srcw		1574651	0					
ANR	1574681	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1860:1:57220:57250	1574651	2	True				
ANR	1574682	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1574651	0					
ANR	1574683	Callee	ADJUST_LOCAL_OFFSET		1574651	0					
ANR	1574684	Identifier	ADJUST_LOCAL_OFFSET		1574651	0					
ANR	1574685	ArgumentList	dst		1574651	1					
ANR	1574686	Argument	dst		1574651	0					
ANR	1574687	Identifier	dst		1574651	0					
ANR	1574688	Argument	dstw		1574651	1					
ANR	1574689	Identifier	dstw		1574651	0					
ANR	1574690	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1861:1:57253:57283	1574651	3	True				
ANR	1574691	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1574651	0					
ANR	1574692	Callee	ADJUST_LOCAL_OFFSET		1574651	0					
ANR	1574693	Identifier	ADJUST_LOCAL_OFFSET		1574651	0					
ANR	1574694	ArgumentList	src		1574651	1					
ANR	1574695	Argument	src		1574651	0					
ANR	1574696	Identifier	src		1574651	0					
ANR	1574697	Argument	srcw		1574651	1					
ANR	1574698	Identifier	srcw		1574651	0					
ANR	1574699	SwitchStatement	switch ( GET_OPCODE ( op ) )		1574651	4					
ANR	1574700	Condition	GET_OPCODE ( op )	1863:9:57295:57308	1574651	0	True				
ANR	1574701	CallExpression	GET_OPCODE ( op )		1574651	0					
ANR	1574702	Callee	GET_OPCODE		1574651	0					
ANR	1574703	Identifier	GET_OPCODE		1574651	0					
ANR	1574704	ArgumentList	op		1574651	1					
ANR	1574705	Argument	op		1574651	0					
ANR	1574706	Identifier	op		1574651	0					
ANR	1574707	CompoundStatement		7:25:175:175	1574651	1					
ANR	1574708	Label	case SLJIT_MOV :	1864:1:57314:57328	1574651	0	True				
ANR	1574709	Identifier	SLJIT_MOV		1574651	0					
ANR	1574710	Label	case SLJIT_MOV_UI :	1865:1:57331:57348	1574651	1	True				
ANR	1574711	Identifier	SLJIT_MOV_UI		1574651	0					
ANR	1574712	Label	case SLJIT_MOV_SI :	1866:1:57351:57368	1574651	2	True				
ANR	1574713	Identifier	SLJIT_MOV_SI		1574651	0					
ANR	1574714	Label	case SLJIT_MOV_P :	1867:1:57371:57387	1574651	3	True				
ANR	1574715	Identifier	SLJIT_MOV_P		1574651	0					
ANR	1574716	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , ALLOW_ANY_IMM , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1868:2:57391:57476	1574651	4	True				
ANR	1574717	CallExpression	"emit_op ( compiler , SLJIT_MOV , ALLOW_ANY_IMM , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1574651	0					
ANR	1574718	Callee	emit_op		1574651	0					
ANR	1574719	Identifier	emit_op		1574651	0					
ANR	1574720	ArgumentList	compiler		1574651	1					
ANR	1574721	Argument	compiler		1574651	0					
ANR	1574722	Identifier	compiler		1574651	0					
ANR	1574723	Argument	SLJIT_MOV		1574651	1					
ANR	1574724	Identifier	SLJIT_MOV		1574651	0					
ANR	1574725	Argument	ALLOW_ANY_IMM		1574651	2					
ANR	1574726	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1574727	Argument	dst		1574651	3					
ANR	1574728	Identifier	dst		1574651	0					
ANR	1574729	Argument	dstw		1574651	4					
ANR	1574730	Identifier	dstw		1574651	0					
ANR	1574731	Argument	TMP_REG1		1574651	5					
ANR	1574732	Identifier	TMP_REG1		1574651	0					
ANR	1574733	Argument	0		1574651	6					
ANR	1574734	PrimaryExpression	0		1574651	0					
ANR	1574735	Argument	src		1574651	7					
ANR	1574736	Identifier	src		1574651	0					
ANR	1574737	Argument	srcw		1574651	8					
ANR	1574738	Identifier	srcw		1574651	0					
ANR	1574739	Label	case SLJIT_MOV_UB :	1870:1:57480:57497	1574651	5	True				
ANR	1574740	Identifier	SLJIT_MOV_UB		1574651	0					
ANR	1574741	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , ALLOW_ANY_IMM | BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	1871:2:57501:57638	1574651	6	True				
ANR	1574742	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , ALLOW_ANY_IMM | BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1574651	0					
ANR	1574743	Callee	emit_op		1574651	0					
ANR	1574744	Identifier	emit_op		1574651	0					
ANR	1574745	ArgumentList	compiler		1574651	1					
ANR	1574746	Argument	compiler		1574651	0					
ANR	1574747	Identifier	compiler		1574651	0					
ANR	1574748	Argument	SLJIT_MOV_UB		1574651	1					
ANR	1574749	Identifier	SLJIT_MOV_UB		1574651	0					
ANR	1574750	Argument	ALLOW_ANY_IMM | BYTE_DATA		1574651	2					
ANR	1574751	InclusiveOrExpression	ALLOW_ANY_IMM | BYTE_DATA		1574651	0		|			
ANR	1574752	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1574753	Identifier	BYTE_DATA		1574651	1					
ANR	1574754	Argument	dst		1574651	3					
ANR	1574755	Identifier	dst		1574651	0					
ANR	1574756	Argument	dstw		1574651	4					
ANR	1574757	Identifier	dstw		1574651	0					
ANR	1574758	Argument	TMP_REG1		1574651	5					
ANR	1574759	Identifier	TMP_REG1		1574651	0					
ANR	1574760	Argument	0		1574651	6					
ANR	1574761	PrimaryExpression	0		1574651	0					
ANR	1574762	Argument	src		1574651	7					
ANR	1574763	Identifier	src		1574651	0					
ANR	1574764	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1574651	8					
ANR	1574765	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1574651	0					
ANR	1574766	Condition	src & SLJIT_IMM		1574651	0					
ANR	1574767	BitAndExpression	src & SLJIT_IMM		1574651	0		&			
ANR	1574768	Identifier	src		1574651	0					
ANR	1574769	Identifier	SLJIT_IMM		1574651	1					
ANR	1574770	CastExpression	( sljit_ub ) srcw		1574651	1					
ANR	1574771	CastTarget	sljit_ub		1574651	0					
ANR	1574772	Identifier	srcw		1574651	1					
ANR	1574773	Identifier	srcw		1574651	2					
ANR	1574774	Label	case SLJIT_MOV_SB :	1873:1:57642:57659	1574651	7	True				
ANR	1574775	Identifier	SLJIT_MOV_SB		1574651	0					
ANR	1574776	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , ALLOW_ANY_IMM | SIGNED_DATA | BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	1874:2:57663:57814	1574651	8	True				
ANR	1574777	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , ALLOW_ANY_IMM | SIGNED_DATA | BYTE_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1574651	0					
ANR	1574778	Callee	emit_op		1574651	0					
ANR	1574779	Identifier	emit_op		1574651	0					
ANR	1574780	ArgumentList	compiler		1574651	1					
ANR	1574781	Argument	compiler		1574651	0					
ANR	1574782	Identifier	compiler		1574651	0					
ANR	1574783	Argument	SLJIT_MOV_SB		1574651	1					
ANR	1574784	Identifier	SLJIT_MOV_SB		1574651	0					
ANR	1574785	Argument	ALLOW_ANY_IMM | SIGNED_DATA | BYTE_DATA		1574651	2					
ANR	1574786	InclusiveOrExpression	ALLOW_ANY_IMM | SIGNED_DATA | BYTE_DATA		1574651	0		|			
ANR	1574787	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1574788	InclusiveOrExpression	SIGNED_DATA | BYTE_DATA		1574651	1		|			
ANR	1574789	Identifier	SIGNED_DATA		1574651	0					
ANR	1574790	Identifier	BYTE_DATA		1574651	1					
ANR	1574791	Argument	dst		1574651	3					
ANR	1574792	Identifier	dst		1574651	0					
ANR	1574793	Argument	dstw		1574651	4					
ANR	1574794	Identifier	dstw		1574651	0					
ANR	1574795	Argument	TMP_REG1		1574651	5					
ANR	1574796	Identifier	TMP_REG1		1574651	0					
ANR	1574797	Argument	0		1574651	6					
ANR	1574798	PrimaryExpression	0		1574651	0					
ANR	1574799	Argument	src		1574651	7					
ANR	1574800	Identifier	src		1574651	0					
ANR	1574801	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1574651	8					
ANR	1574802	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1574651	0					
ANR	1574803	Condition	src & SLJIT_IMM		1574651	0					
ANR	1574804	BitAndExpression	src & SLJIT_IMM		1574651	0		&			
ANR	1574805	Identifier	src		1574651	0					
ANR	1574806	Identifier	SLJIT_IMM		1574651	1					
ANR	1574807	CastExpression	( sljit_sb ) srcw		1574651	1					
ANR	1574808	CastTarget	sljit_sb		1574651	0					
ANR	1574809	Identifier	srcw		1574651	1					
ANR	1574810	Identifier	srcw		1574651	2					
ANR	1574811	Label	case SLJIT_MOV_UH :	1876:1:57818:57835	1574651	9	True				
ANR	1574812	Identifier	SLJIT_MOV_UH		1574651	0					
ANR	1574813	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , ALLOW_ANY_IMM | HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	1877:2:57839:57976	1574651	10	True				
ANR	1574814	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , ALLOW_ANY_IMM | HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1574651	0					
ANR	1574815	Callee	emit_op		1574651	0					
ANR	1574816	Identifier	emit_op		1574651	0					
ANR	1574817	ArgumentList	compiler		1574651	1					
ANR	1574818	Argument	compiler		1574651	0					
ANR	1574819	Identifier	compiler		1574651	0					
ANR	1574820	Argument	SLJIT_MOV_UH		1574651	1					
ANR	1574821	Identifier	SLJIT_MOV_UH		1574651	0					
ANR	1574822	Argument	ALLOW_ANY_IMM | HALF_DATA		1574651	2					
ANR	1574823	InclusiveOrExpression	ALLOW_ANY_IMM | HALF_DATA		1574651	0		|			
ANR	1574824	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1574825	Identifier	HALF_DATA		1574651	1					
ANR	1574826	Argument	dst		1574651	3					
ANR	1574827	Identifier	dst		1574651	0					
ANR	1574828	Argument	dstw		1574651	4					
ANR	1574829	Identifier	dstw		1574651	0					
ANR	1574830	Argument	TMP_REG1		1574651	5					
ANR	1574831	Identifier	TMP_REG1		1574651	0					
ANR	1574832	Argument	0		1574651	6					
ANR	1574833	PrimaryExpression	0		1574651	0					
ANR	1574834	Argument	src		1574651	7					
ANR	1574835	Identifier	src		1574651	0					
ANR	1574836	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1574651	8					
ANR	1574837	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1574651	0					
ANR	1574838	Condition	src & SLJIT_IMM		1574651	0					
ANR	1574839	BitAndExpression	src & SLJIT_IMM		1574651	0		&			
ANR	1574840	Identifier	src		1574651	0					
ANR	1574841	Identifier	SLJIT_IMM		1574651	1					
ANR	1574842	CastExpression	( sljit_uh ) srcw		1574651	1					
ANR	1574843	CastTarget	sljit_uh		1574651	0					
ANR	1574844	Identifier	srcw		1574651	1					
ANR	1574845	Identifier	srcw		1574651	2					
ANR	1574846	Label	case SLJIT_MOV_SH :	1879:1:57980:57997	1574651	11	True				
ANR	1574847	Identifier	SLJIT_MOV_SH		1574651	0					
ANR	1574848	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , ALLOW_ANY_IMM | SIGNED_DATA | HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	1880:2:58001:58152	1574651	12	True				
ANR	1574849	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , ALLOW_ANY_IMM | SIGNED_DATA | HALF_DATA , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1574651	0					
ANR	1574850	Callee	emit_op		1574651	0					
ANR	1574851	Identifier	emit_op		1574651	0					
ANR	1574852	ArgumentList	compiler		1574651	1					
ANR	1574853	Argument	compiler		1574651	0					
ANR	1574854	Identifier	compiler		1574651	0					
ANR	1574855	Argument	SLJIT_MOV_SH		1574651	1					
ANR	1574856	Identifier	SLJIT_MOV_SH		1574651	0					
ANR	1574857	Argument	ALLOW_ANY_IMM | SIGNED_DATA | HALF_DATA		1574651	2					
ANR	1574858	InclusiveOrExpression	ALLOW_ANY_IMM | SIGNED_DATA | HALF_DATA		1574651	0		|			
ANR	1574859	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1574860	InclusiveOrExpression	SIGNED_DATA | HALF_DATA		1574651	1		|			
ANR	1574861	Identifier	SIGNED_DATA		1574651	0					
ANR	1574862	Identifier	HALF_DATA		1574651	1					
ANR	1574863	Argument	dst		1574651	3					
ANR	1574864	Identifier	dst		1574651	0					
ANR	1574865	Argument	dstw		1574651	4					
ANR	1574866	Identifier	dstw		1574651	0					
ANR	1574867	Argument	TMP_REG1		1574651	5					
ANR	1574868	Identifier	TMP_REG1		1574651	0					
ANR	1574869	Argument	0		1574651	6					
ANR	1574870	PrimaryExpression	0		1574651	0					
ANR	1574871	Argument	src		1574651	7					
ANR	1574872	Identifier	src		1574651	0					
ANR	1574873	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1574651	8					
ANR	1574874	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1574651	0					
ANR	1574875	Condition	src & SLJIT_IMM		1574651	0					
ANR	1574876	BitAndExpression	src & SLJIT_IMM		1574651	0		&			
ANR	1574877	Identifier	src		1574651	0					
ANR	1574878	Identifier	SLJIT_IMM		1574651	1					
ANR	1574879	CastExpression	( sljit_sh ) srcw		1574651	1					
ANR	1574880	CastTarget	sljit_sh		1574651	0					
ANR	1574881	Identifier	srcw		1574651	1					
ANR	1574882	Identifier	srcw		1574651	2					
ANR	1574883	Label	case SLJIT_MOVU :	1882:1:58156:58171	1574651	13	True				
ANR	1574884	Identifier	SLJIT_MOVU		1574651	0					
ANR	1574885	Label	case SLJIT_MOVU_UI :	1883:1:58174:58192	1574651	14	True				
ANR	1574886	Identifier	SLJIT_MOVU_UI		1574651	0					
ANR	1574887	Label	case SLJIT_MOVU_SI :	1884:1:58195:58213	1574651	15	True				
ANR	1574888	Identifier	SLJIT_MOVU_SI		1574651	0					
ANR	1574889	Label	case SLJIT_MOVU_P :	1885:1:58216:58233	1574651	16	True				
ANR	1574890	Identifier	SLJIT_MOVU_P		1574651	0					
ANR	1574891	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , ALLOW_ANY_IMM | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1886:2:58237:58335	1574651	17	True				
ANR	1574892	CallExpression	"emit_op ( compiler , SLJIT_MOV , ALLOW_ANY_IMM | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1574651	0					
ANR	1574893	Callee	emit_op		1574651	0					
ANR	1574894	Identifier	emit_op		1574651	0					
ANR	1574895	ArgumentList	compiler		1574651	1					
ANR	1574896	Argument	compiler		1574651	0					
ANR	1574897	Identifier	compiler		1574651	0					
ANR	1574898	Argument	SLJIT_MOV		1574651	1					
ANR	1574899	Identifier	SLJIT_MOV		1574651	0					
ANR	1574900	Argument	ALLOW_ANY_IMM | WRITE_BACK		1574651	2					
ANR	1574901	InclusiveOrExpression	ALLOW_ANY_IMM | WRITE_BACK		1574651	0		|			
ANR	1574902	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1574903	Identifier	WRITE_BACK		1574651	1					
ANR	1574904	Argument	dst		1574651	3					
ANR	1574905	Identifier	dst		1574651	0					
ANR	1574906	Argument	dstw		1574651	4					
ANR	1574907	Identifier	dstw		1574651	0					
ANR	1574908	Argument	TMP_REG1		1574651	5					
ANR	1574909	Identifier	TMP_REG1		1574651	0					
ANR	1574910	Argument	0		1574651	6					
ANR	1574911	PrimaryExpression	0		1574651	0					
ANR	1574912	Argument	src		1574651	7					
ANR	1574913	Identifier	src		1574651	0					
ANR	1574914	Argument	srcw		1574651	8					
ANR	1574915	Identifier	srcw		1574651	0					
ANR	1574916	Label	case SLJIT_MOVU_UB :	1888:1:58339:58357	1574651	18	True				
ANR	1574917	Identifier	SLJIT_MOVU_UB		1574651	0					
ANR	1574918	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UB , ALLOW_ANY_IMM | BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw ) ;"	1889:2:58361:58511	1574651	19	True				
ANR	1574919	CallExpression	"emit_op ( compiler , SLJIT_MOV_UB , ALLOW_ANY_IMM | BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw )"		1574651	0					
ANR	1574920	Callee	emit_op		1574651	0					
ANR	1574921	Identifier	emit_op		1574651	0					
ANR	1574922	ArgumentList	compiler		1574651	1					
ANR	1574923	Argument	compiler		1574651	0					
ANR	1574924	Identifier	compiler		1574651	0					
ANR	1574925	Argument	SLJIT_MOV_UB		1574651	1					
ANR	1574926	Identifier	SLJIT_MOV_UB		1574651	0					
ANR	1574927	Argument	ALLOW_ANY_IMM | BYTE_DATA | WRITE_BACK		1574651	2					
ANR	1574928	InclusiveOrExpression	ALLOW_ANY_IMM | BYTE_DATA | WRITE_BACK		1574651	0		|			
ANR	1574929	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1574930	InclusiveOrExpression	BYTE_DATA | WRITE_BACK		1574651	1		|			
ANR	1574931	Identifier	BYTE_DATA		1574651	0					
ANR	1574932	Identifier	WRITE_BACK		1574651	1					
ANR	1574933	Argument	dst		1574651	3					
ANR	1574934	Identifier	dst		1574651	0					
ANR	1574935	Argument	dstw		1574651	4					
ANR	1574936	Identifier	dstw		1574651	0					
ANR	1574937	Argument	TMP_REG1		1574651	5					
ANR	1574938	Identifier	TMP_REG1		1574651	0					
ANR	1574939	Argument	0		1574651	6					
ANR	1574940	PrimaryExpression	0		1574651	0					
ANR	1574941	Argument	src		1574651	7					
ANR	1574942	Identifier	src		1574651	0					
ANR	1574943	Argument	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1574651	8					
ANR	1574944	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_ub ) srcw : srcw		1574651	0					
ANR	1574945	Condition	src & SLJIT_IMM		1574651	0					
ANR	1574946	BitAndExpression	src & SLJIT_IMM		1574651	0		&			
ANR	1574947	Identifier	src		1574651	0					
ANR	1574948	Identifier	SLJIT_IMM		1574651	1					
ANR	1574949	CastExpression	( sljit_ub ) srcw		1574651	1					
ANR	1574950	CastTarget	sljit_ub		1574651	0					
ANR	1574951	Identifier	srcw		1574651	1					
ANR	1574952	Identifier	srcw		1574651	2					
ANR	1574953	Label	case SLJIT_MOVU_SB :	1891:1:58515:58533	1574651	20	True				
ANR	1574954	Identifier	SLJIT_MOVU_SB		1574651	0					
ANR	1574955	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SB , ALLOW_ANY_IMM | SIGNED_DATA | BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw ) ;"	1892:2:58537:58701	1574651	21	True				
ANR	1574956	CallExpression	"emit_op ( compiler , SLJIT_MOV_SB , ALLOW_ANY_IMM | SIGNED_DATA | BYTE_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw )"		1574651	0					
ANR	1574957	Callee	emit_op		1574651	0					
ANR	1574958	Identifier	emit_op		1574651	0					
ANR	1574959	ArgumentList	compiler		1574651	1					
ANR	1574960	Argument	compiler		1574651	0					
ANR	1574961	Identifier	compiler		1574651	0					
ANR	1574962	Argument	SLJIT_MOV_SB		1574651	1					
ANR	1574963	Identifier	SLJIT_MOV_SB		1574651	0					
ANR	1574964	Argument	ALLOW_ANY_IMM | SIGNED_DATA | BYTE_DATA | WRITE_BACK		1574651	2					
ANR	1574965	InclusiveOrExpression	ALLOW_ANY_IMM | SIGNED_DATA | BYTE_DATA | WRITE_BACK		1574651	0		|			
ANR	1574966	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1574967	InclusiveOrExpression	SIGNED_DATA | BYTE_DATA | WRITE_BACK		1574651	1		|			
ANR	1574968	Identifier	SIGNED_DATA		1574651	0					
ANR	1574969	InclusiveOrExpression	BYTE_DATA | WRITE_BACK		1574651	1		|			
ANR	1574970	Identifier	BYTE_DATA		1574651	0					
ANR	1574971	Identifier	WRITE_BACK		1574651	1					
ANR	1574972	Argument	dst		1574651	3					
ANR	1574973	Identifier	dst		1574651	0					
ANR	1574974	Argument	dstw		1574651	4					
ANR	1574975	Identifier	dstw		1574651	0					
ANR	1574976	Argument	TMP_REG1		1574651	5					
ANR	1574977	Identifier	TMP_REG1		1574651	0					
ANR	1574978	Argument	0		1574651	6					
ANR	1574979	PrimaryExpression	0		1574651	0					
ANR	1574980	Argument	src		1574651	7					
ANR	1574981	Identifier	src		1574651	0					
ANR	1574982	Argument	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1574651	8					
ANR	1574983	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sb ) srcw : srcw		1574651	0					
ANR	1574984	Condition	src & SLJIT_IMM		1574651	0					
ANR	1574985	BitAndExpression	src & SLJIT_IMM		1574651	0		&			
ANR	1574986	Identifier	src		1574651	0					
ANR	1574987	Identifier	SLJIT_IMM		1574651	1					
ANR	1574988	CastExpression	( sljit_sb ) srcw		1574651	1					
ANR	1574989	CastTarget	sljit_sb		1574651	0					
ANR	1574990	Identifier	srcw		1574651	1					
ANR	1574991	Identifier	srcw		1574651	2					
ANR	1574992	Label	case SLJIT_MOVU_UH :	1894:1:58705:58723	1574651	22	True				
ANR	1574993	Identifier	SLJIT_MOVU_UH		1574651	0					
ANR	1574994	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_UH , ALLOW_ANY_IMM | HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw ) ;"	1895:2:58727:58877	1574651	23	True				
ANR	1574995	CallExpression	"emit_op ( compiler , SLJIT_MOV_UH , ALLOW_ANY_IMM | HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw )"		1574651	0					
ANR	1574996	Callee	emit_op		1574651	0					
ANR	1574997	Identifier	emit_op		1574651	0					
ANR	1574998	ArgumentList	compiler		1574651	1					
ANR	1574999	Argument	compiler		1574651	0					
ANR	1575000	Identifier	compiler		1574651	0					
ANR	1575001	Argument	SLJIT_MOV_UH		1574651	1					
ANR	1575002	Identifier	SLJIT_MOV_UH		1574651	0					
ANR	1575003	Argument	ALLOW_ANY_IMM | HALF_DATA | WRITE_BACK		1574651	2					
ANR	1575004	InclusiveOrExpression	ALLOW_ANY_IMM | HALF_DATA | WRITE_BACK		1574651	0		|			
ANR	1575005	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1575006	InclusiveOrExpression	HALF_DATA | WRITE_BACK		1574651	1		|			
ANR	1575007	Identifier	HALF_DATA		1574651	0					
ANR	1575008	Identifier	WRITE_BACK		1574651	1					
ANR	1575009	Argument	dst		1574651	3					
ANR	1575010	Identifier	dst		1574651	0					
ANR	1575011	Argument	dstw		1574651	4					
ANR	1575012	Identifier	dstw		1574651	0					
ANR	1575013	Argument	TMP_REG1		1574651	5					
ANR	1575014	Identifier	TMP_REG1		1574651	0					
ANR	1575015	Argument	0		1574651	6					
ANR	1575016	PrimaryExpression	0		1574651	0					
ANR	1575017	Argument	src		1574651	7					
ANR	1575018	Identifier	src		1574651	0					
ANR	1575019	Argument	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1574651	8					
ANR	1575020	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_uh ) srcw : srcw		1574651	0					
ANR	1575021	Condition	src & SLJIT_IMM		1574651	0					
ANR	1575022	BitAndExpression	src & SLJIT_IMM		1574651	0		&			
ANR	1575023	Identifier	src		1574651	0					
ANR	1575024	Identifier	SLJIT_IMM		1574651	1					
ANR	1575025	CastExpression	( sljit_uh ) srcw		1574651	1					
ANR	1575026	CastTarget	sljit_uh		1574651	0					
ANR	1575027	Identifier	srcw		1574651	1					
ANR	1575028	Identifier	srcw		1574651	2					
ANR	1575029	Label	case SLJIT_MOVU_SH :	1897:1:58881:58899	1574651	24	True				
ANR	1575030	Identifier	SLJIT_MOVU_SH		1574651	0					
ANR	1575031	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV_SH , ALLOW_ANY_IMM | SIGNED_DATA | HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw ) ;"	1898:2:58903:59067	1574651	25	True				
ANR	1575032	CallExpression	"emit_op ( compiler , SLJIT_MOV_SH , ALLOW_ANY_IMM | SIGNED_DATA | HALF_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , ( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw )"		1574651	0					
ANR	1575033	Callee	emit_op		1574651	0					
ANR	1575034	Identifier	emit_op		1574651	0					
ANR	1575035	ArgumentList	compiler		1574651	1					
ANR	1575036	Argument	compiler		1574651	0					
ANR	1575037	Identifier	compiler		1574651	0					
ANR	1575038	Argument	SLJIT_MOV_SH		1574651	1					
ANR	1575039	Identifier	SLJIT_MOV_SH		1574651	0					
ANR	1575040	Argument	ALLOW_ANY_IMM | SIGNED_DATA | HALF_DATA | WRITE_BACK		1574651	2					
ANR	1575041	InclusiveOrExpression	ALLOW_ANY_IMM | SIGNED_DATA | HALF_DATA | WRITE_BACK		1574651	0		|			
ANR	1575042	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1575043	InclusiveOrExpression	SIGNED_DATA | HALF_DATA | WRITE_BACK		1574651	1		|			
ANR	1575044	Identifier	SIGNED_DATA		1574651	0					
ANR	1575045	InclusiveOrExpression	HALF_DATA | WRITE_BACK		1574651	1		|			
ANR	1575046	Identifier	HALF_DATA		1574651	0					
ANR	1575047	Identifier	WRITE_BACK		1574651	1					
ANR	1575048	Argument	dst		1574651	3					
ANR	1575049	Identifier	dst		1574651	0					
ANR	1575050	Argument	dstw		1574651	4					
ANR	1575051	Identifier	dstw		1574651	0					
ANR	1575052	Argument	TMP_REG1		1574651	5					
ANR	1575053	Identifier	TMP_REG1		1574651	0					
ANR	1575054	Argument	0		1574651	6					
ANR	1575055	PrimaryExpression	0		1574651	0					
ANR	1575056	Argument	src		1574651	7					
ANR	1575057	Identifier	src		1574651	0					
ANR	1575058	Argument	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1574651	8					
ANR	1575059	ConditionalExpression	( src & SLJIT_IMM ) ? ( sljit_sh ) srcw : srcw		1574651	0					
ANR	1575060	Condition	src & SLJIT_IMM		1574651	0					
ANR	1575061	BitAndExpression	src & SLJIT_IMM		1574651	0		&			
ANR	1575062	Identifier	src		1574651	0					
ANR	1575063	Identifier	SLJIT_IMM		1574651	1					
ANR	1575064	CastExpression	( sljit_sh ) srcw		1574651	1					
ANR	1575065	CastTarget	sljit_sh		1574651	0					
ANR	1575066	Identifier	srcw		1574651	1					
ANR	1575067	Identifier	srcw		1574651	2					
ANR	1575068	Label	case SLJIT_NOT :	1900:1:59071:59085	1574651	26	True				
ANR	1575069	Identifier	SLJIT_NOT		1574651	0					
ANR	1575070	ReturnStatement	"return emit_op ( compiler , op , ALLOW_ANY_IMM , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1901:2:59089:59167	1574651	27	True				
ANR	1575071	CallExpression	"emit_op ( compiler , op , ALLOW_ANY_IMM , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1574651	0					
ANR	1575072	Callee	emit_op		1574651	0					
ANR	1575073	Identifier	emit_op		1574651	0					
ANR	1575074	ArgumentList	compiler		1574651	1					
ANR	1575075	Argument	compiler		1574651	0					
ANR	1575076	Identifier	compiler		1574651	0					
ANR	1575077	Argument	op		1574651	1					
ANR	1575078	Identifier	op		1574651	0					
ANR	1575079	Argument	ALLOW_ANY_IMM		1574651	2					
ANR	1575080	Identifier	ALLOW_ANY_IMM		1574651	0					
ANR	1575081	Argument	dst		1574651	3					
ANR	1575082	Identifier	dst		1574651	0					
ANR	1575083	Argument	dstw		1574651	4					
ANR	1575084	Identifier	dstw		1574651	0					
ANR	1575085	Argument	TMP_REG1		1574651	5					
ANR	1575086	Identifier	TMP_REG1		1574651	0					
ANR	1575087	Argument	0		1574651	6					
ANR	1575088	PrimaryExpression	0		1574651	0					
ANR	1575089	Argument	src		1574651	7					
ANR	1575090	Identifier	src		1574651	0					
ANR	1575091	Argument	srcw		1574651	8					
ANR	1575092	Identifier	srcw		1574651	0					
ANR	1575093	Label	case SLJIT_NEG :	1903:1:59171:59185	1574651	28	True				
ANR	1575094	Identifier	SLJIT_NEG		1574651	0					
ANR	1575095	Statement	||	1905:3:59237:59238	1574651	29	True				
ANR	1575096	Statement	(	1905:6:59240:59240	1574651	30	True				
ANR	1575097	Statement	defined	1905:7:59241:59247	1574651	31	True				
ANR	1575098	Statement	SLJIT_ARGUMENT_CHECKS	1905:15:59249:59269	1574651	32	True				
ANR	1575099	Statement	&&	1905:37:59271:59272	1574651	33	True				
ANR	1575100	Statement	SLJIT_ARGUMENT_CHECKS	1905:40:59274:59294	1574651	34	True				
ANR	1575101	Statement	)	1905:61:59295:59295	1574651	35	True				
ANR	1575102	ExpressionStatement	compiler -> skip_checks = 1	1906:2:59299:59324	1574651	36	True				
ANR	1575103	AssignmentExpression	compiler -> skip_checks = 1		1574651	0		=			
ANR	1575104	PtrMemberAccess	compiler -> skip_checks		1574651	0					
ANR	1575105	Identifier	compiler		1574651	0					
ANR	1575106	Identifier	skip_checks		1574651	1					
ANR	1575107	PrimaryExpression	1		1574651	1					
ANR	1575108	ReturnStatement	"return sljit_emit_op2 ( compiler , SLJIT_SUB | GET_ALL_FLAGS ( op ) , dst , dstw , SLJIT_IMM , 0 , src , srcw ) ;"	1908:2:59335:59433	1574651	37	True				
ANR	1575109	CallExpression	"sljit_emit_op2 ( compiler , SLJIT_SUB | GET_ALL_FLAGS ( op ) , dst , dstw , SLJIT_IMM , 0 , src , srcw )"		1574651	0					
ANR	1575110	Callee	sljit_emit_op2		1574651	0					
ANR	1575111	Identifier	sljit_emit_op2		1574651	0					
ANR	1575112	ArgumentList	compiler		1574651	1					
ANR	1575113	Argument	compiler		1574651	0					
ANR	1575114	Identifier	compiler		1574651	0					
ANR	1575115	Argument	SLJIT_SUB | GET_ALL_FLAGS ( op )		1574651	1					
ANR	1575116	InclusiveOrExpression	SLJIT_SUB | GET_ALL_FLAGS ( op )		1574651	0		|			
ANR	1575117	Identifier	SLJIT_SUB		1574651	0					
ANR	1575118	CallExpression	GET_ALL_FLAGS ( op )		1574651	1					
ANR	1575119	Callee	GET_ALL_FLAGS		1574651	0					
ANR	1575120	Identifier	GET_ALL_FLAGS		1574651	0					
ANR	1575121	ArgumentList	op		1574651	1					
ANR	1575122	Argument	op		1574651	0					
ANR	1575123	Identifier	op		1574651	0					
ANR	1575124	Argument	dst		1574651	2					
ANR	1575125	Identifier	dst		1574651	0					
ANR	1575126	Argument	dstw		1574651	3					
ANR	1575127	Identifier	dstw		1574651	0					
ANR	1575128	Argument	SLJIT_IMM		1574651	4					
ANR	1575129	Identifier	SLJIT_IMM		1574651	0					
ANR	1575130	Argument	0		1574651	5					
ANR	1575131	PrimaryExpression	0		1574651	0					
ANR	1575132	Argument	src		1574651	6					
ANR	1575133	Identifier	src		1574651	0					
ANR	1575134	Argument	srcw		1574651	7					
ANR	1575135	Identifier	srcw		1574651	0					
ANR	1575136	Label	case SLJIT_CLZ :	1910:1:59437:59451	1574651	38	True				
ANR	1575137	Identifier	SLJIT_CLZ		1574651	0					
ANR	1575138	ReturnStatement	"return emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1911:2:59455:59521	1574651	39	True				
ANR	1575139	CallExpression	"emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1574651	0					
ANR	1575140	Callee	emit_op		1574651	0					
ANR	1575141	Identifier	emit_op		1574651	0					
ANR	1575142	ArgumentList	compiler		1574651	1					
ANR	1575143	Argument	compiler		1574651	0					
ANR	1575144	Identifier	compiler		1574651	0					
ANR	1575145	Argument	op		1574651	1					
ANR	1575146	Identifier	op		1574651	0					
ANR	1575147	Argument	0		1574651	2					
ANR	1575148	PrimaryExpression	0		1574651	0					
ANR	1575149	Argument	dst		1574651	3					
ANR	1575150	Identifier	dst		1574651	0					
ANR	1575151	Argument	dstw		1574651	4					
ANR	1575152	Identifier	dstw		1574651	0					
ANR	1575153	Argument	TMP_REG1		1574651	5					
ANR	1575154	Identifier	TMP_REG1		1574651	0					
ANR	1575155	Argument	0		1574651	6					
ANR	1575156	PrimaryExpression	0		1574651	0					
ANR	1575157	Argument	src		1574651	7					
ANR	1575158	Identifier	src		1574651	0					
ANR	1575159	Argument	srcw		1574651	8					
ANR	1575160	Identifier	srcw		1574651	0					
ANR	1575161	ReturnStatement	return SLJIT_SUCCESS ;	1914:1:59528:59548	1574651	5	True				
ANR	1575162	Identifier	SLJIT_SUCCESS		1574651	0					
ANR	1575163	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1574651	1					
ANR	1575164	Identifier	sljit_emit_op1		1574651	2					
ANR	1575165	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1574651	3					
ANR	1575166	Parameter	struct sljit_compiler * compiler	1854:49:57029:57059	1574651	0	True				
ANR	1575167	ParameterType	struct sljit_compiler *		1574651	0					
ANR	1575168	Identifier	compiler		1574651	1					
ANR	1575169	Parameter	sljit_si op	1854:82:57062:57072	1574651	1	True				
ANR	1575170	ParameterType	sljit_si		1574651	0					
ANR	1575171	Identifier	op		1574651	1					
ANR	1575172	Parameter	sljit_si dst	1855:1:57076:57087	1574651	2	True				
ANR	1575173	ParameterType	sljit_si		1574651	0					
ANR	1575174	Identifier	dst		1574651	1					
ANR	1575175	Parameter	sljit_sw dstw	1855:15:57090:57102	1574651	3	True				
ANR	1575176	ParameterType	sljit_sw		1574651	0					
ANR	1575177	Identifier	dstw		1574651	1					
ANR	1575178	Parameter	sljit_si src	1856:1:57106:57117	1574651	4	True				
ANR	1575179	ParameterType	sljit_si		1574651	0					
ANR	1575180	Identifier	src		1574651	1					
ANR	1575181	Parameter	sljit_sw srcw	1856:15:57120:57132	1574651	5	True				
ANR	1575182	ParameterType	sljit_sw		1574651	0					
ANR	1575183	Identifier	srcw		1574651	1					
ANR	1575184	CFGEntryNode	ENTRY		1574651		True				
ANR	1575185	CFGExitNode	EXIT		1574651		True				
ANR	1575186	Symbol	TMP_REG1		1574651						
ANR	1575187	Symbol	sljit_emit_op2		1574651						
ANR	1575188	Symbol	dst		1574651						
ANR	1575189	Symbol	SLJIT_MOV		1574651						
ANR	1575190	Symbol	* compiler		1574651						
ANR	1575191	Symbol	GET_OPCODE		1574651						
ANR	1575192	Symbol	BYTE_DATA		1574651						
ANR	1575193	Symbol	GET_ALL_FLAGS		1574651						
ANR	1575194	Symbol	SLJIT_IMM		1574651						
ANR	1575195	Symbol	SLJIT_MOV_UH		1574651						
ANR	1575196	Symbol	SLJIT_MOV_SH		1574651						
ANR	1575197	Symbol	compiler		1574651						
ANR	1575198	Symbol	WRITE_BACK		1574651						
ANR	1575199	Symbol	emit_op		1574651						
ANR	1575200	Symbol	op		1574651						
ANR	1575201	Symbol	ALLOW_ANY_IMM		1574651						
ANR	1575202	Symbol	src		1574651						
ANR	1575203	Symbol	check_sljit_emit_op1		1574651						
ANR	1575204	Symbol	HALF_DATA		1574651						
ANR	1575205	Symbol	srcw		1574651						
ANR	1575206	Symbol	SLJIT_MOV_SB		1574651						
ANR	1575207	Symbol	SLJIT_SUB		1574651						
ANR	1575208	Symbol	SLJIT_SUCCESS		1574651						
ANR	1575209	Symbol	SLJIT_MOV_UB		1574651						
ANR	1575210	Symbol	SIGNED_DATA		1574651						
ANR	1575211	Symbol	compiler -> skip_checks		1574651						
ANR	1575212	Symbol	dstw		1574651						
ANR	1575213	Function	sljit_emit_op2	1917:0:59553:60687							
ANR	1575214	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1575213	0					
ANR	1575215	CompoundStatement		1921:0:59742:60687	1575213	0					
ANR	1575216	ExpressionStatement	CHECK_ERROR ( )	1922:1:59745:59758	1575213	0	True				
ANR	1575217	CallExpression	CHECK_ERROR ( )		1575213	0					
ANR	1575218	Callee	CHECK_ERROR		1575213	0					
ANR	1575219	Identifier	CHECK_ERROR		1575213	0					
ANR	1575220	ArgumentList			1575213	1					
ANR	1575221	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1923:1:59761:59839	1575213	1	True				
ANR	1575222	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1575213	0					
ANR	1575223	Callee	CHECK		1575213	0					
ANR	1575224	Identifier	CHECK		1575213	0					
ANR	1575225	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1575213	1					
ANR	1575226	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1575213	0					
ANR	1575227	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1575213	0					
ANR	1575228	Callee	check_sljit_emit_op2		1575213	0					
ANR	1575229	Identifier	check_sljit_emit_op2		1575213	0					
ANR	1575230	ArgumentList	compiler		1575213	1					
ANR	1575231	Argument	compiler		1575213	0					
ANR	1575232	Identifier	compiler		1575213	0					
ANR	1575233	Argument	op		1575213	1					
ANR	1575234	Identifier	op		1575213	0					
ANR	1575235	Argument	dst		1575213	2					
ANR	1575236	Identifier	dst		1575213	0					
ANR	1575237	Argument	dstw		1575213	3					
ANR	1575238	Identifier	dstw		1575213	0					
ANR	1575239	Argument	src1		1575213	4					
ANR	1575240	Identifier	src1		1575213	0					
ANR	1575241	Argument	src1w		1575213	5					
ANR	1575242	Identifier	src1w		1575213	0					
ANR	1575243	Argument	src2		1575213	6					
ANR	1575244	Identifier	src2		1575213	0					
ANR	1575245	Argument	src2w		1575213	7					
ANR	1575246	Identifier	src2w		1575213	0					
ANR	1575247	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1924:1:59842:59872	1575213	2	True				
ANR	1575248	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1575213	0					
ANR	1575249	Callee	ADJUST_LOCAL_OFFSET		1575213	0					
ANR	1575250	Identifier	ADJUST_LOCAL_OFFSET		1575213	0					
ANR	1575251	ArgumentList	dst		1575213	1					
ANR	1575252	Argument	dst		1575213	0					
ANR	1575253	Identifier	dst		1575213	0					
ANR	1575254	Argument	dstw		1575213	1					
ANR	1575255	Identifier	dstw		1575213	0					
ANR	1575256	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1925:1:59875:59907	1575213	3	True				
ANR	1575257	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1575213	0					
ANR	1575258	Callee	ADJUST_LOCAL_OFFSET		1575213	0					
ANR	1575259	Identifier	ADJUST_LOCAL_OFFSET		1575213	0					
ANR	1575260	ArgumentList	src1		1575213	1					
ANR	1575261	Argument	src1		1575213	0					
ANR	1575262	Identifier	src1		1575213	0					
ANR	1575263	Argument	src1w		1575213	1					
ANR	1575264	Identifier	src1w		1575213	0					
ANR	1575265	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1926:1:59910:59942	1575213	4	True				
ANR	1575266	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1575213	0					
ANR	1575267	Callee	ADJUST_LOCAL_OFFSET		1575213	0					
ANR	1575268	Identifier	ADJUST_LOCAL_OFFSET		1575213	0					
ANR	1575269	ArgumentList	src2		1575213	1					
ANR	1575270	Argument	src2		1575213	0					
ANR	1575271	Identifier	src2		1575213	0					
ANR	1575272	Argument	src2w		1575213	1					
ANR	1575273	Identifier	src2w		1575213	0					
ANR	1575274	SwitchStatement	switch ( GET_OPCODE ( op ) )		1575213	5					
ANR	1575275	Condition	GET_OPCODE ( op )	1928:9:59954:59967	1575213	0	True				
ANR	1575276	CallExpression	GET_OPCODE ( op )		1575213	0					
ANR	1575277	Callee	GET_OPCODE		1575213	0					
ANR	1575278	Identifier	GET_OPCODE		1575213	0					
ANR	1575279	ArgumentList	op		1575213	1					
ANR	1575280	Argument	op		1575213	0					
ANR	1575281	Identifier	op		1575213	0					
ANR	1575282	CompoundStatement		8:25:227:227	1575213	1					
ANR	1575283	Label	case SLJIT_ADD :	1929:1:59973:59987	1575213	0	True				
ANR	1575284	Identifier	SLJIT_ADD		1575213	0					
ANR	1575285	Label	case SLJIT_ADDC :	1930:1:59990:60005	1575213	1	True				
ANR	1575286	Identifier	SLJIT_ADDC		1575213	0					
ANR	1575287	Label	case SLJIT_SUB :	1931:1:60008:60022	1575213	2	True				
ANR	1575288	Identifier	SLJIT_SUB		1575213	0					
ANR	1575289	Label	case SLJIT_SUBC :	1932:1:60025:60040	1575213	3	True				
ANR	1575290	Identifier	SLJIT_SUBC		1575213	0					
ANR	1575291	Label	case SLJIT_OR :	1933:1:60043:60056	1575213	4	True				
ANR	1575292	Identifier	SLJIT_OR		1575213	0					
ANR	1575293	Label	case SLJIT_XOR :	1934:1:60059:60073	1575213	5	True				
ANR	1575294	Identifier	SLJIT_XOR		1575213	0					
ANR	1575295	ReturnStatement	"return emit_op ( compiler , op , ALLOW_IMM , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1935:2:60077:60153	1575213	6	True				
ANR	1575296	CallExpression	"emit_op ( compiler , op , ALLOW_IMM , dst , dstw , src1 , src1w , src2 , src2w )"		1575213	0					
ANR	1575297	Callee	emit_op		1575213	0					
ANR	1575298	Identifier	emit_op		1575213	0					
ANR	1575299	ArgumentList	compiler		1575213	1					
ANR	1575300	Argument	compiler		1575213	0					
ANR	1575301	Identifier	compiler		1575213	0					
ANR	1575302	Argument	op		1575213	1					
ANR	1575303	Identifier	op		1575213	0					
ANR	1575304	Argument	ALLOW_IMM		1575213	2					
ANR	1575305	Identifier	ALLOW_IMM		1575213	0					
ANR	1575306	Argument	dst		1575213	3					
ANR	1575307	Identifier	dst		1575213	0					
ANR	1575308	Argument	dstw		1575213	4					
ANR	1575309	Identifier	dstw		1575213	0					
ANR	1575310	Argument	src1		1575213	5					
ANR	1575311	Identifier	src1		1575213	0					
ANR	1575312	Argument	src1w		1575213	6					
ANR	1575313	Identifier	src1w		1575213	0					
ANR	1575314	Argument	src2		1575213	7					
ANR	1575315	Identifier	src2		1575213	0					
ANR	1575316	Argument	src2w		1575213	8					
ANR	1575317	Identifier	src2w		1575213	0					
ANR	1575318	Label	case SLJIT_MUL :	1937:1:60157:60171	1575213	7	True				
ANR	1575319	Identifier	SLJIT_MUL		1575213	0					
ANR	1575320	ReturnStatement	"return emit_op ( compiler , op , 0 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1938:2:60175:60243	1575213	8	True				
ANR	1575321	CallExpression	"emit_op ( compiler , op , 0 , dst , dstw , src1 , src1w , src2 , src2w )"		1575213	0					
ANR	1575322	Callee	emit_op		1575213	0					
ANR	1575323	Identifier	emit_op		1575213	0					
ANR	1575324	ArgumentList	compiler		1575213	1					
ANR	1575325	Argument	compiler		1575213	0					
ANR	1575326	Identifier	compiler		1575213	0					
ANR	1575327	Argument	op		1575213	1					
ANR	1575328	Identifier	op		1575213	0					
ANR	1575329	Argument	0		1575213	2					
ANR	1575330	PrimaryExpression	0		1575213	0					
ANR	1575331	Argument	dst		1575213	3					
ANR	1575332	Identifier	dst		1575213	0					
ANR	1575333	Argument	dstw		1575213	4					
ANR	1575334	Identifier	dstw		1575213	0					
ANR	1575335	Argument	src1		1575213	5					
ANR	1575336	Identifier	src1		1575213	0					
ANR	1575337	Argument	src1w		1575213	6					
ANR	1575338	Identifier	src1w		1575213	0					
ANR	1575339	Argument	src2		1575213	7					
ANR	1575340	Identifier	src2		1575213	0					
ANR	1575341	Argument	src2w		1575213	8					
ANR	1575342	Identifier	src2w		1575213	0					
ANR	1575343	Label	case SLJIT_AND :	1940:1:60247:60261	1575213	9	True				
ANR	1575344	Identifier	SLJIT_AND		1575213	0					
ANR	1575345	ReturnStatement	"return emit_op ( compiler , op , ALLOW_ANY_IMM , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1941:2:60265:60345	1575213	10	True				
ANR	1575346	CallExpression	"emit_op ( compiler , op , ALLOW_ANY_IMM , dst , dstw , src1 , src1w , src2 , src2w )"		1575213	0					
ANR	1575347	Callee	emit_op		1575213	0					
ANR	1575348	Identifier	emit_op		1575213	0					
ANR	1575349	ArgumentList	compiler		1575213	1					
ANR	1575350	Argument	compiler		1575213	0					
ANR	1575351	Identifier	compiler		1575213	0					
ANR	1575352	Argument	op		1575213	1					
ANR	1575353	Identifier	op		1575213	0					
ANR	1575354	Argument	ALLOW_ANY_IMM		1575213	2					
ANR	1575355	Identifier	ALLOW_ANY_IMM		1575213	0					
ANR	1575356	Argument	dst		1575213	3					
ANR	1575357	Identifier	dst		1575213	0					
ANR	1575358	Argument	dstw		1575213	4					
ANR	1575359	Identifier	dstw		1575213	0					
ANR	1575360	Argument	src1		1575213	5					
ANR	1575361	Identifier	src1		1575213	0					
ANR	1575362	Argument	src1w		1575213	6					
ANR	1575363	Identifier	src1w		1575213	0					
ANR	1575364	Argument	src2		1575213	7					
ANR	1575365	Identifier	src2		1575213	0					
ANR	1575366	Argument	src2w		1575213	8					
ANR	1575367	Identifier	src2w		1575213	0					
ANR	1575368	Label	case SLJIT_SHL :	1943:1:60349:60363	1575213	11	True				
ANR	1575369	Identifier	SLJIT_SHL		1575213	0					
ANR	1575370	Label	case SLJIT_LSHR :	1944:1:60366:60381	1575213	12	True				
ANR	1575371	Identifier	SLJIT_LSHR		1575213	0					
ANR	1575372	Label	case SLJIT_ASHR :	1945:1:60384:60399	1575213	13	True				
ANR	1575373	Identifier	SLJIT_ASHR		1575213	0					
ANR	1575374	IfStatement	if ( src2 & SLJIT_IMM )		1575213	14					
ANR	1575375	Condition	src2 & SLJIT_IMM	1946:6:60407:60422	1575213	0	True				
ANR	1575376	BitAndExpression	src2 & SLJIT_IMM		1575213	0		&			
ANR	1575377	Identifier	src2		1575213	0					
ANR	1575378	Identifier	SLJIT_IMM		1575213	1					
ANR	1575379	CompoundStatement		26:24:682:682	1575213	1					
ANR	1575380	ExpressionStatement	compiler -> shift_imm = src2w & 0x1f	1947:3:60430:60464	1575213	0	True				
ANR	1575381	AssignmentExpression	compiler -> shift_imm = src2w & 0x1f		1575213	0		=			
ANR	1575382	PtrMemberAccess	compiler -> shift_imm		1575213	0					
ANR	1575383	Identifier	compiler		1575213	0					
ANR	1575384	Identifier	shift_imm		1575213	1					
ANR	1575385	BitAndExpression	src2w & 0x1f		1575213	1		&			
ANR	1575386	Identifier	src2w		1575213	0					
ANR	1575387	PrimaryExpression	0x1f		1575213	1					
ANR	1575388	ReturnStatement	"return emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src1 , src1w ) ;"	1948:3:60469:60537	1575213	1	True				
ANR	1575389	CallExpression	"emit_op ( compiler , op , 0 , dst , dstw , TMP_REG1 , 0 , src1 , src1w )"		1575213	0					
ANR	1575390	Callee	emit_op		1575213	0					
ANR	1575391	Identifier	emit_op		1575213	0					
ANR	1575392	ArgumentList	compiler		1575213	1					
ANR	1575393	Argument	compiler		1575213	0					
ANR	1575394	Identifier	compiler		1575213	0					
ANR	1575395	Argument	op		1575213	1					
ANR	1575396	Identifier	op		1575213	0					
ANR	1575397	Argument	0		1575213	2					
ANR	1575398	PrimaryExpression	0		1575213	0					
ANR	1575399	Argument	dst		1575213	3					
ANR	1575400	Identifier	dst		1575213	0					
ANR	1575401	Argument	dstw		1575213	4					
ANR	1575402	Identifier	dstw		1575213	0					
ANR	1575403	Argument	TMP_REG1		1575213	5					
ANR	1575404	Identifier	TMP_REG1		1575213	0					
ANR	1575405	Argument	0		1575213	6					
ANR	1575406	PrimaryExpression	0		1575213	0					
ANR	1575407	Argument	src1		1575213	7					
ANR	1575408	Identifier	src1		1575213	0					
ANR	1575409	Argument	src1w		1575213	8					
ANR	1575410	Identifier	src1w		1575213	0					
ANR	1575411	ElseStatement	else		1575213	0					
ANR	1575412	CompoundStatement		30:7:807:807	1575213	0					
ANR	1575413	ExpressionStatement	compiler -> shift_imm = 0x20	1951:3:60555:60581	1575213	0	True				
ANR	1575414	AssignmentExpression	compiler -> shift_imm = 0x20		1575213	0		=			
ANR	1575415	PtrMemberAccess	compiler -> shift_imm		1575213	0					
ANR	1575416	Identifier	compiler		1575213	0					
ANR	1575417	Identifier	shift_imm		1575213	1					
ANR	1575418	PrimaryExpression	0x20		1575213	1					
ANR	1575419	ReturnStatement	"return emit_op ( compiler , op , 0 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1952:3:60586:60654	1575213	1	True				
ANR	1575420	CallExpression	"emit_op ( compiler , op , 0 , dst , dstw , src1 , src1w , src2 , src2w )"		1575213	0					
ANR	1575421	Callee	emit_op		1575213	0					
ANR	1575422	Identifier	emit_op		1575213	0					
ANR	1575423	ArgumentList	compiler		1575213	1					
ANR	1575424	Argument	compiler		1575213	0					
ANR	1575425	Identifier	compiler		1575213	0					
ANR	1575426	Argument	op		1575213	1					
ANR	1575427	Identifier	op		1575213	0					
ANR	1575428	Argument	0		1575213	2					
ANR	1575429	PrimaryExpression	0		1575213	0					
ANR	1575430	Argument	dst		1575213	3					
ANR	1575431	Identifier	dst		1575213	0					
ANR	1575432	Argument	dstw		1575213	4					
ANR	1575433	Identifier	dstw		1575213	0					
ANR	1575434	Argument	src1		1575213	5					
ANR	1575435	Identifier	src1		1575213	0					
ANR	1575436	Argument	src1w		1575213	6					
ANR	1575437	Identifier	src1w		1575213	0					
ANR	1575438	Argument	src2		1575213	7					
ANR	1575439	Identifier	src2		1575213	0					
ANR	1575440	Argument	src2w		1575213	8					
ANR	1575441	Identifier	src2w		1575213	0					
ANR	1575442	ReturnStatement	return SLJIT_SUCCESS ;	1956:1:60665:60685	1575213	6	True				
ANR	1575443	Identifier	SLJIT_SUCCESS		1575213	0					
ANR	1575444	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1575213	1					
ANR	1575445	Identifier	sljit_emit_op2		1575213	2					
ANR	1575446	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1575213	3					
ANR	1575447	Parameter	struct sljit_compiler * compiler	1917:49:59602:59632	1575213	0	True				
ANR	1575448	ParameterType	struct sljit_compiler *		1575213	0					
ANR	1575449	Identifier	compiler		1575213	1					
ANR	1575450	Parameter	sljit_si op	1917:82:59635:59645	1575213	1	True				
ANR	1575451	ParameterType	sljit_si		1575213	0					
ANR	1575452	Identifier	op		1575213	1					
ANR	1575453	Parameter	sljit_si dst	1918:1:59649:59660	1575213	2	True				
ANR	1575454	ParameterType	sljit_si		1575213	0					
ANR	1575455	Identifier	dst		1575213	1					
ANR	1575456	Parameter	sljit_sw dstw	1918:15:59663:59675	1575213	3	True				
ANR	1575457	ParameterType	sljit_sw		1575213	0					
ANR	1575458	Identifier	dstw		1575213	1					
ANR	1575459	Parameter	sljit_si src1	1919:1:59679:59691	1575213	4	True				
ANR	1575460	ParameterType	sljit_si		1575213	0					
ANR	1575461	Identifier	src1		1575213	1					
ANR	1575462	Parameter	sljit_sw src1w	1919:16:59694:59707	1575213	5	True				
ANR	1575463	ParameterType	sljit_sw		1575213	0					
ANR	1575464	Identifier	src1w		1575213	1					
ANR	1575465	Parameter	sljit_si src2	1920:1:59711:59723	1575213	6	True				
ANR	1575466	ParameterType	sljit_si		1575213	0					
ANR	1575467	Identifier	src2		1575213	1					
ANR	1575468	Parameter	sljit_sw src2w	1920:16:59726:59739	1575213	7	True				
ANR	1575469	ParameterType	sljit_sw		1575213	0					
ANR	1575470	Identifier	src2w		1575213	1					
ANR	1575471	CFGEntryNode	ENTRY		1575213		True				
ANR	1575472	CFGExitNode	EXIT		1575213		True				
ANR	1575473	Symbol	src2w		1575213						
ANR	1575474	Symbol	op		1575213						
ANR	1575475	Symbol	TMP_REG1		1575213						
ANR	1575476	Symbol	src1w		1575213						
ANR	1575477	Symbol	ALLOW_ANY_IMM		1575213						
ANR	1575478	Symbol	dst		1575213						
ANR	1575479	Symbol	check_sljit_emit_op2		1575213						
ANR	1575480	Symbol	SLJIT_SUCCESS		1575213						
ANR	1575481	Symbol	ALLOW_IMM		1575213						
ANR	1575482	Symbol	* compiler		1575213						
ANR	1575483	Symbol	GET_OPCODE		1575213						
ANR	1575484	Symbol	SLJIT_IMM		1575213						
ANR	1575485	Symbol	compiler -> shift_imm		1575213						
ANR	1575486	Symbol	src1		1575213						
ANR	1575487	Symbol	src2		1575213						
ANR	1575488	Symbol	compiler		1575213						
ANR	1575489	Symbol	dstw		1575213						
ANR	1575490	Symbol	emit_op		1575213						
ANR	1575491	Function	sljit_get_register_index	1959:0:60690:60842							
ANR	1575492	FunctionDef	sljit_get_register_index (sljit_si reg)		1575491	0					
ANR	1575493	CompoundStatement		1960:0:60763:60842	1575491	0					
ANR	1575494	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	1961:1:60766:60818	1575491	0	True				
ANR	1575495	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1575491	0					
ANR	1575496	Callee	CHECK_REG_INDEX		1575491	0					
ANR	1575497	Identifier	CHECK_REG_INDEX		1575491	0					
ANR	1575498	ArgumentList	check_sljit_get_register_index ( reg )		1575491	1					
ANR	1575499	Argument	check_sljit_get_register_index ( reg )		1575491	0					
ANR	1575500	CallExpression	check_sljit_get_register_index ( reg )		1575491	0					
ANR	1575501	Callee	check_sljit_get_register_index		1575491	0					
ANR	1575502	Identifier	check_sljit_get_register_index		1575491	0					
ANR	1575503	ArgumentList	reg		1575491	1					
ANR	1575504	Argument	reg		1575491	0					
ANR	1575505	Identifier	reg		1575491	0					
ANR	1575506	ReturnStatement	return reg_map [ reg ] ;	1962:1:60821:60840	1575491	1	True				
ANR	1575507	ArrayIndexing	reg_map [ reg ]		1575491	0					
ANR	1575508	Identifier	reg_map		1575491	0					
ANR	1575509	Identifier	reg		1575491	1					
ANR	1575510	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1575491	1					
ANR	1575511	Identifier	sljit_get_register_index		1575491	2					
ANR	1575512	ParameterList	sljit_si reg		1575491	3					
ANR	1575513	Parameter	sljit_si reg	1959:59:60749:60760	1575491	0	True				
ANR	1575514	ParameterType	sljit_si		1575491	0					
ANR	1575515	Identifier	reg		1575491	1					
ANR	1575516	CFGEntryNode	ENTRY		1575491		True				
ANR	1575517	CFGExitNode	EXIT		1575491		True				
ANR	1575518	Symbol	reg		1575491						
ANR	1575519	Symbol	reg_map		1575491						
ANR	1575520	Symbol	* reg_map		1575491						
ANR	1575521	Symbol	* reg		1575491						
ANR	1575522	Symbol	check_sljit_get_register_index		1575491						
ANR	1575523	Function	sljit_get_float_register_index	1965:0:60845:61005							
ANR	1575524	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1575523	0					
ANR	1575525	CompoundStatement		1966:0:60924:61005	1575523	0					
ANR	1575526	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	1967:1:60927:60985	1575523	0	True				
ANR	1575527	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1575523	0					
ANR	1575528	Callee	CHECK_REG_INDEX		1575523	0					
ANR	1575529	Identifier	CHECK_REG_INDEX		1575523	0					
ANR	1575530	ArgumentList	check_sljit_get_float_register_index ( reg )		1575523	1					
ANR	1575531	Argument	check_sljit_get_float_register_index ( reg )		1575523	0					
ANR	1575532	CallExpression	check_sljit_get_float_register_index ( reg )		1575523	0					
ANR	1575533	Callee	check_sljit_get_float_register_index		1575523	0					
ANR	1575534	Identifier	check_sljit_get_float_register_index		1575523	0					
ANR	1575535	ArgumentList	reg		1575523	1					
ANR	1575536	Argument	reg		1575523	0					
ANR	1575537	Identifier	reg		1575523	0					
ANR	1575538	ReturnStatement	return reg << 1 ;	1968:1:60988:61003	1575523	1	True				
ANR	1575539	ShiftExpression	reg << 1		1575523	0		<<			
ANR	1575540	Identifier	reg		1575523	0					
ANR	1575541	PrimaryExpression	1		1575523	1					
ANR	1575542	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1575523	1					
ANR	1575543	Identifier	sljit_get_float_register_index		1575523	2					
ANR	1575544	ParameterList	sljit_si reg		1575523	3					
ANR	1575545	Parameter	sljit_si reg	1965:65:60910:60921	1575523	0	True				
ANR	1575546	ParameterType	sljit_si		1575523	0					
ANR	1575547	Identifier	reg		1575523	1					
ANR	1575548	CFGEntryNode	ENTRY		1575523		True				
ANR	1575549	CFGExitNode	EXIT		1575523		True				
ANR	1575550	Symbol	reg		1575523						
ANR	1575551	Symbol	check_sljit_get_float_register_index		1575523						
ANR	1575552	Function	sljit_emit_op_custom	1971:0:61008:61269							
ANR	1575553	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1575552	0					
ANR	1575554	CompoundStatement		1973:0:61131:61269	1575552	0					
ANR	1575555	ExpressionStatement	CHECK_ERROR ( )	1974:1:61134:61147	1575552	0	True				
ANR	1575556	CallExpression	CHECK_ERROR ( )		1575552	0					
ANR	1575557	Callee	CHECK_ERROR		1575552	0					
ANR	1575558	Identifier	CHECK_ERROR		1575552	0					
ANR	1575559	ArgumentList			1575552	1					
ANR	1575560	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	1975:1:61150:61212	1575552	1	True				
ANR	1575561	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1575552	0					
ANR	1575562	Callee	CHECK		1575552	0					
ANR	1575563	Identifier	CHECK		1575552	0					
ANR	1575564	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1575552	1					
ANR	1575565	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1575552	0					
ANR	1575566	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1575552	0					
ANR	1575567	Callee	check_sljit_emit_op_custom		1575552	0					
ANR	1575568	Identifier	check_sljit_emit_op_custom		1575552	0					
ANR	1575569	ArgumentList	compiler		1575552	1					
ANR	1575570	Argument	compiler		1575552	0					
ANR	1575571	Identifier	compiler		1575552	0					
ANR	1575572	Argument	instruction		1575552	1					
ANR	1575573	Identifier	instruction		1575552	0					
ANR	1575574	Argument	size		1575552	2					
ANR	1575575	Identifier	size		1575552	0					
ANR	1575576	ReturnStatement	"return push_inst ( compiler , * ( sljit_uw * ) instruction ) ;"	1977:1:61216:61267	1575552	2	True				
ANR	1575577	CallExpression	"push_inst ( compiler , * ( sljit_uw * ) instruction )"		1575552	0					
ANR	1575578	Callee	push_inst		1575552	0					
ANR	1575579	Identifier	push_inst		1575552	0					
ANR	1575580	ArgumentList	compiler		1575552	1					
ANR	1575581	Argument	compiler		1575552	0					
ANR	1575582	Identifier	compiler		1575552	0					
ANR	1575583	Argument	* ( sljit_uw * ) instruction		1575552	1					
ANR	1575584	UnaryOperationExpression	* ( sljit_uw * ) instruction		1575552	0					
ANR	1575585	UnaryOperator	*		1575552	0					
ANR	1575586	CastExpression	( sljit_uw * ) instruction		1575552	1					
ANR	1575587	CastTarget	sljit_uw *		1575552	0					
ANR	1575588	Identifier	instruction		1575552	1					
ANR	1575589	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1575552	1					
ANR	1575590	Identifier	sljit_emit_op_custom		1575552	2					
ANR	1575591	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1575552	3					
ANR	1575592	Parameter	struct sljit_compiler * compiler	1971:55:61063:61093	1575552	0	True				
ANR	1575593	ParameterType	struct sljit_compiler *		1575552	0					
ANR	1575594	Identifier	compiler		1575552	1					
ANR	1575595	Parameter	void * instruction	1972:1:61097:61113	1575552	1	True				
ANR	1575596	ParameterType	void *		1575552	0					
ANR	1575597	Identifier	instruction		1575552	1					
ANR	1575598	Parameter	sljit_si size	1972:20:61116:61128	1575552	2	True				
ANR	1575599	ParameterType	sljit_si		1575552	0					
ANR	1575600	Identifier	size		1575552	1					
ANR	1575601	CFGEntryNode	ENTRY		1575552		True				
ANR	1575602	CFGExitNode	EXIT		1575552		True				
ANR	1575603	Symbol	push_inst		1575552						
ANR	1575604	Symbol	* ( sljit_uw * ) instruction		1575552						
ANR	1575605	Symbol	size		1575552						
ANR	1575606	Symbol	* instruction		1575552						
ANR	1575607	Symbol	instruction		1575552						
ANR	1575608	Symbol	check_sljit_emit_op_custom		1575552						
ANR	1575609	Symbol	compiler		1575552						
ANR	1575610	DeclStmt									
ANR	1575611	Decl							sljit_si	sljit_si	arm_fpu_type
ANR	1575612	Function	init_compiler	1990:0:61623:61781							
ANR	1575613	FunctionDef	init_compiler ()		1575612	0					
ANR	1575614	CompoundStatement		1991:0:61655:61781	1575612	0					
ANR	1575615	IfStatement	if ( arm_fpu_type != - 1 )		1575612	0					
ANR	1575616	Condition	arm_fpu_type != - 1	1992:5:61662:61679	1575612	0	True				
ANR	1575617	EqualityExpression	arm_fpu_type != - 1		1575612	0		!=			
ANR	1575618	Identifier	arm_fpu_type		1575612	0					
ANR	1575619	UnaryOperationExpression	- 1		1575612	1					
ANR	1575620	UnaryOperator	-		1575612	0					
ANR	1575621	PrimaryExpression	1		1575612	1					
ANR	1575622	ReturnStatement	return ;	1993:2:61684:61690	1575612	1	True				
ANR	1575623	ExpressionStatement	arm_fpu_type = 1	1996:1:61763:61779	1575612	1	True				
ANR	1575624	AssignmentExpression	arm_fpu_type = 1		1575612	0		=			
ANR	1575625	Identifier	arm_fpu_type		1575612	0					
ANR	1575626	PrimaryExpression	1		1575612	1					
ANR	1575627	ReturnType	static void		1575612	1					
ANR	1575628	Identifier	init_compiler		1575612	2					
ANR	1575629	ParameterList			1575612	3					
ANR	1575630	CFGEntryNode	ENTRY		1575612		True				
ANR	1575631	CFGExitNode	EXIT		1575612		True				
ANR	1575632	Symbol	arm_fpu_type		1575612						
ANR	1575633	Function	sljit_is_fpu_available	1999:0:61784:61990							
ANR	1575634	FunctionDef	sljit_is_fpu_available ()		1575633	0					
ANR	1575635	CompoundStatement		2000:0:61847:61990	1575633	0					
ANR	1575636	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	2002:1:61880:61909	1575633	0	True				
ANR	1575637	Identifier	SLJIT_IS_FPU_AVAILABLE		1575633	0					
ANR	1575638	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1575633	1					
ANR	1575639	Identifier	sljit_is_fpu_available		1575633	2					
ANR	1575640	ParameterList			1575633	3					
ANR	1575641	CFGEntryNode	ENTRY		1575633		True				
ANR	1575642	CFGExitNode	EXIT		1575633		True				
ANR	1575643	Symbol	SLJIT_IS_FPU_AVAILABLE		1575633						
ANR	1575644	Function	sljit_is_fpu_available	2014:0:62024:62125							
ANR	1575645	FunctionDef	sljit_is_fpu_available ()		1575644	0					
ANR	1575646	CompoundStatement		2015:0:62087:62125	1575644	0					
ANR	1575647	ReturnStatement	return 1 ;	2017:1:62115:62123	1575644	0	True				
ANR	1575648	PrimaryExpression	1		1575644	0					
ANR	1575649	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1575644	1					
ANR	1575650	Identifier	sljit_is_fpu_available		1575644	2					
ANR	1575651	ParameterList			1575644	3					
ANR	1575652	CFGEntryNode	ENTRY		1575644		True				
ANR	1575653	CFGExitNode	EXIT		1575644		True				
ANR	1575654	Function	emit_fop_mem	2028:0:62423:64869							
ANR	1575655	FunctionDef	"emit_fop_mem (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1575654	0					
ANR	1575656	CompoundStatement		2029:0:62544:64869	1575654	0					
ANR	1575657	IdentifierDeclStatement	sljit_sw tmp ;	2030:1:62547:62559	1575654	0	True				
ANR	1575658	IdentifierDecl	tmp		1575654	0					
ANR	1575659	IdentifierDeclType	sljit_sw		1575654	0					
ANR	1575660	Identifier	tmp		1575654	1					
ANR	1575661	IdentifierDeclStatement	sljit_uw imm ;	2031:1:62562:62574	1575654	1	True				
ANR	1575662	IdentifierDecl	imm		1575654	0					
ANR	1575663	IdentifierDeclType	sljit_uw		1575654	0					
ANR	1575664	Identifier	imm		1575654	1					
ANR	1575665	IdentifierDeclStatement	sljit_sw inst = VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) ) ;	2032:1:62577:62642	1575654	2	True				
ANR	1575666	IdentifierDecl	inst = VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) )		1575654	0					
ANR	1575667	IdentifierDeclType	sljit_sw		1575654	0					
ANR	1575668	Identifier	inst		1575654	1					
ANR	1575669	AssignmentExpression	inst = VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) )		1575654	2		=			
ANR	1575670	Identifier	inst		1575654	0					
ANR	1575671	InclusiveOrExpression	VSTR_F32 | ( flags & ( SLJIT_SINGLE_OP | FPU_LOAD ) )		1575654	1		|			
ANR	1575672	Identifier	VSTR_F32		1575654	0					
ANR	1575673	BitAndExpression	flags & ( SLJIT_SINGLE_OP | FPU_LOAD )		1575654	1		&			
ANR	1575674	Identifier	flags		1575654	0					
ANR	1575675	InclusiveOrExpression	SLJIT_SINGLE_OP | FPU_LOAD		1575654	1		|			
ANR	1575676	Identifier	SLJIT_SINGLE_OP		1575654	0					
ANR	1575677	Identifier	FPU_LOAD		1575654	1					
ANR	1575678	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	2033:1:62645:62674	1575654	3	True				
ANR	1575679	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1575654	0					
ANR	1575680	Callee	SLJIT_ASSERT		1575654	0					
ANR	1575681	Identifier	SLJIT_ASSERT		1575654	0					
ANR	1575682	ArgumentList	arg & SLJIT_MEM		1575654	1					
ANR	1575683	Argument	arg & SLJIT_MEM		1575654	0					
ANR	1575684	BitAndExpression	arg & SLJIT_MEM		1575654	0		&			
ANR	1575685	Identifier	arg		1575654	0					
ANR	1575686	Identifier	SLJIT_MEM		1575654	1					
ANR	1575687	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1575654	4					
ANR	1575688	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	2035:5:62682:62716	1575654	0	True				
ANR	1575689	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1575654	0					
ANR	1575690	Callee	SLJIT_UNLIKELY		1575654	0					
ANR	1575691	Identifier	SLJIT_UNLIKELY		1575654	0					
ANR	1575692	ArgumentList	arg & OFFS_REG_MASK		1575654	1					
ANR	1575693	Argument	arg & OFFS_REG_MASK		1575654	0					
ANR	1575694	BitAndExpression	arg & OFFS_REG_MASK		1575654	0		&			
ANR	1575695	Identifier	arg		1575654	0					
ANR	1575696	Identifier	OFFS_REG_MASK		1575654	1					
ANR	1575697	CompoundStatement		7:42:174:174	1575654	1					
ANR	1575698	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) ) )"	2036:2:62723:62852	1575654	0	True				
ANR	1575699	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) ) )"		1575654	0					
ANR	1575700	Callee	FAIL_IF		1575654	0					
ANR	1575701	Identifier	FAIL_IF		1575654	0					
ANR	1575702	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) )"		1575654	1					
ANR	1575703	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) )"		1575654	0					
ANR	1575704	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) ) )"		1575654	0					
ANR	1575705	Callee	push_inst		1575654	0					
ANR	1575706	Identifier	push_inst		1575654	0					
ANR	1575707	ArgumentList	compiler		1575654	1					
ANR	1575708	Argument	compiler		1575654	0					
ANR	1575709	Identifier	compiler		1575654	0					
ANR	1575710	Argument	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) )"		1575654	1					
ANR	1575711	CallExpression	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 ) )"		1575654	0					
ANR	1575712	Callee	EMIT_DATA_PROCESS_INS		1575654	0					
ANR	1575713	Identifier	EMIT_DATA_PROCESS_INS		1575654	0					
ANR	1575714	ArgumentList	ADD_DP		1575654	1					
ANR	1575715	Argument	ADD_DP		1575654	0					
ANR	1575716	Identifier	ADD_DP		1575654	0					
ANR	1575717	Argument	0		1575654	1					
ANR	1575718	PrimaryExpression	0		1575654	0					
ANR	1575719	Argument	TMP_REG1		1575654	2					
ANR	1575720	Identifier	TMP_REG1		1575654	0					
ANR	1575721	Argument	arg & REG_MASK		1575654	3					
ANR	1575722	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1575723	Identifier	arg		1575654	0					
ANR	1575724	Identifier	REG_MASK		1575654	1					
ANR	1575725	Argument	RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 )		1575654	4					
ANR	1575726	InclusiveOrExpression	RM ( OFFS_REG ( arg ) ) | ( ( argw & 0x3 ) << 7 )		1575654	0		|			
ANR	1575727	CallExpression	RM ( OFFS_REG ( arg ) )		1575654	0					
ANR	1575728	Callee	RM		1575654	0					
ANR	1575729	Identifier	RM		1575654	0					
ANR	1575730	ArgumentList	OFFS_REG ( arg )		1575654	1					
ANR	1575731	Argument	OFFS_REG ( arg )		1575654	0					
ANR	1575732	CallExpression	OFFS_REG ( arg )		1575654	0					
ANR	1575733	Callee	OFFS_REG		1575654	0					
ANR	1575734	Identifier	OFFS_REG		1575654	0					
ANR	1575735	ArgumentList	arg		1575654	1					
ANR	1575736	Argument	arg		1575654	0					
ANR	1575737	Identifier	arg		1575654	0					
ANR	1575738	ShiftExpression	( argw & 0x3 ) << 7		1575654	1		<<			
ANR	1575739	BitAndExpression	argw & 0x3		1575654	0		&			
ANR	1575740	Identifier	argw		1575654	0					
ANR	1575741	PrimaryExpression	0x3		1575654	1					
ANR	1575742	PrimaryExpression	7		1575654	1					
ANR	1575743	ExpressionStatement	arg = SLJIT_MEM | TMP_REG1	2037:2:62856:62882	1575654	1	True				
ANR	1575744	AssignmentExpression	arg = SLJIT_MEM | TMP_REG1		1575654	0		=			
ANR	1575745	Identifier	arg		1575654	0					
ANR	1575746	InclusiveOrExpression	SLJIT_MEM | TMP_REG1		1575654	1		|			
ANR	1575747	Identifier	SLJIT_MEM		1575654	0					
ANR	1575748	Identifier	TMP_REG1		1575654	1					
ANR	1575749	ExpressionStatement	argw = 0	2038:2:62886:62894	1575654	2	True				
ANR	1575750	AssignmentExpression	argw = 0		1575654	0		=			
ANR	1575751	Identifier	argw		1575654	0					
ANR	1575752	PrimaryExpression	0		1575654	1					
ANR	1575753	IfStatement	if ( ( arg & REG_MASK ) )		1575654	5					
ANR	1575754	Condition	arg & REG_MASK	2042:5:62935:62950	1575654	0	True				
ANR	1575755	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1575756	Identifier	arg		1575654	0					
ANR	1575757	Identifier	REG_MASK		1575654	1					
ANR	1575758	CompoundStatement		14:23:408:408	1575654	1					
ANR	1575759	IfStatement	if ( ! ( argw & ~0x3fc ) )		1575654	0					
ANR	1575760	Condition	! ( argw & ~0x3fc )	2043:6:62961:62976	1575654	0	True				
ANR	1575761	UnaryOperationExpression	! ( argw & ~0x3fc )		1575654	0					
ANR	1575762	UnaryOperator	!		1575654	0					
ANR	1575763	BitAndExpression	argw & ~0x3fc		1575654	1		&			
ANR	1575764	Identifier	argw		1575654	0					
ANR	1575765	Identifier	~0x3fc		1575654	1					
ANR	1575766	ReturnStatement	"return push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , arg & REG_MASK , reg , argw >> 2 ) ) ;"	2044:3:62982:63073	1575654	1	True				
ANR	1575767	CallExpression	"push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , arg & REG_MASK , reg , argw >> 2 ) )"		1575654	0					
ANR	1575768	Callee	push_inst		1575654	0					
ANR	1575769	Identifier	push_inst		1575654	0					
ANR	1575770	ArgumentList	compiler		1575654	1					
ANR	1575771	Argument	compiler		1575654	0					
ANR	1575772	Identifier	compiler		1575654	0					
ANR	1575773	Argument	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , arg & REG_MASK , reg , argw >> 2 )"		1575654	1					
ANR	1575774	CallExpression	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , arg & REG_MASK , reg , argw >> 2 )"		1575654	0					
ANR	1575775	Callee	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575776	Identifier	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575777	ArgumentList	inst		1575654	1					
ANR	1575778	Argument	inst		1575654	0					
ANR	1575779	Identifier	inst		1575654	0					
ANR	1575780	Argument	1		1575654	1					
ANR	1575781	PrimaryExpression	1		1575654	0					
ANR	1575782	Argument	arg & REG_MASK		1575654	2					
ANR	1575783	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1575784	Identifier	arg		1575654	0					
ANR	1575785	Identifier	REG_MASK		1575654	1					
ANR	1575786	Argument	reg		1575654	3					
ANR	1575787	Identifier	reg		1575654	0					
ANR	1575788	Argument	argw >> 2		1575654	4					
ANR	1575789	ShiftExpression	argw >> 2		1575654	0		>>			
ANR	1575790	Identifier	argw		1575654	0					
ANR	1575791	PrimaryExpression	2		1575654	1					
ANR	1575792	IfStatement	if ( ! ( - argw & ~0x3fc ) )		1575654	1					
ANR	1575793	Condition	! ( - argw & ~0x3fc )	2045:6:63081:63097	1575654	0	True				
ANR	1575794	UnaryOperationExpression	! ( - argw & ~0x3fc )		1575654	0					
ANR	1575795	UnaryOperator	!		1575654	0					
ANR	1575796	BitAndExpression	- argw & ~0x3fc		1575654	1		&			
ANR	1575797	UnaryOperationExpression	- argw		1575654	0					
ANR	1575798	UnaryOperator	-		1575654	0					
ANR	1575799	Identifier	argw		1575654	1					
ANR	1575800	Identifier	~0x3fc		1575654	1					
ANR	1575801	ReturnStatement	"return push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 0 , arg & REG_MASK , reg , ( - argw ) >> 2 ) ) ;"	2046:3:63103:63197	1575654	1	True				
ANR	1575802	CallExpression	"push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 0 , arg & REG_MASK , reg , ( - argw ) >> 2 ) )"		1575654	0					
ANR	1575803	Callee	push_inst		1575654	0					
ANR	1575804	Identifier	push_inst		1575654	0					
ANR	1575805	ArgumentList	compiler		1575654	1					
ANR	1575806	Argument	compiler		1575654	0					
ANR	1575807	Identifier	compiler		1575654	0					
ANR	1575808	Argument	"EMIT_FPU_DATA_TRANSFER ( inst , 0 , arg & REG_MASK , reg , ( - argw ) >> 2 )"		1575654	1					
ANR	1575809	CallExpression	"EMIT_FPU_DATA_TRANSFER ( inst , 0 , arg & REG_MASK , reg , ( - argw ) >> 2 )"		1575654	0					
ANR	1575810	Callee	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575811	Identifier	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575812	ArgumentList	inst		1575654	1					
ANR	1575813	Argument	inst		1575654	0					
ANR	1575814	Identifier	inst		1575654	0					
ANR	1575815	Argument	0		1575654	1					
ANR	1575816	PrimaryExpression	0		1575654	0					
ANR	1575817	Argument	arg & REG_MASK		1575654	2					
ANR	1575818	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1575819	Identifier	arg		1575654	0					
ANR	1575820	Identifier	REG_MASK		1575654	1					
ANR	1575821	Argument	reg		1575654	3					
ANR	1575822	Identifier	reg		1575654	0					
ANR	1575823	Argument	( - argw ) >> 2		1575654	4					
ANR	1575824	ShiftExpression	( - argw ) >> 2		1575654	0		>>			
ANR	1575825	UnaryOperationExpression	- argw		1575654	0					
ANR	1575826	UnaryOperator	-		1575654	0					
ANR	1575827	Identifier	argw		1575654	1					
ANR	1575828	PrimaryExpression	2		1575654	1					
ANR	1575829	IfStatement	if ( compiler -> cache_arg == arg )		1575654	6					
ANR	1575830	Condition	compiler -> cache_arg == arg	2049:5:63208:63233	1575654	0	True				
ANR	1575831	EqualityExpression	compiler -> cache_arg == arg		1575654	0		==			
ANR	1575832	PtrMemberAccess	compiler -> cache_arg		1575654	0					
ANR	1575833	Identifier	compiler		1575654	0					
ANR	1575834	Identifier	cache_arg		1575654	1					
ANR	1575835	Identifier	arg		1575654	1					
ANR	1575836	CompoundStatement		21:33:691:691	1575654	1					
ANR	1575837	ExpressionStatement	tmp = argw - compiler -> cache_argw	2050:2:63240:63273	1575654	0	True				
ANR	1575838	AssignmentExpression	tmp = argw - compiler -> cache_argw		1575654	0		=			
ANR	1575839	Identifier	tmp		1575654	0					
ANR	1575840	AdditiveExpression	argw - compiler -> cache_argw		1575654	1		-			
ANR	1575841	Identifier	argw		1575654	0					
ANR	1575842	PtrMemberAccess	compiler -> cache_argw		1575654	1					
ANR	1575843	Identifier	compiler		1575654	0					
ANR	1575844	Identifier	cache_argw		1575654	1					
ANR	1575845	IfStatement	if ( ! ( tmp & ~0x3fc ) )		1575654	1					
ANR	1575846	Condition	! ( tmp & ~0x3fc )	2051:6:63281:63295	1575654	0	True				
ANR	1575847	UnaryOperationExpression	! ( tmp & ~0x3fc )		1575654	0					
ANR	1575848	UnaryOperator	!		1575654	0					
ANR	1575849	BitAndExpression	tmp & ~0x3fc		1575654	1		&			
ANR	1575850	Identifier	tmp		1575654	0					
ANR	1575851	Identifier	~0x3fc		1575654	1					
ANR	1575852	ReturnStatement	"return push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , tmp >> 2 ) ) ;"	2052:3:63301:63385	1575654	1	True				
ANR	1575853	CallExpression	"push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , tmp >> 2 ) )"		1575654	0					
ANR	1575854	Callee	push_inst		1575654	0					
ANR	1575855	Identifier	push_inst		1575654	0					
ANR	1575856	ArgumentList	compiler		1575654	1					
ANR	1575857	Argument	compiler		1575654	0					
ANR	1575858	Identifier	compiler		1575654	0					
ANR	1575859	Argument	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , tmp >> 2 )"		1575654	1					
ANR	1575860	CallExpression	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , tmp >> 2 )"		1575654	0					
ANR	1575861	Callee	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575862	Identifier	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575863	ArgumentList	inst		1575654	1					
ANR	1575864	Argument	inst		1575654	0					
ANR	1575865	Identifier	inst		1575654	0					
ANR	1575866	Argument	1		1575654	1					
ANR	1575867	PrimaryExpression	1		1575654	0					
ANR	1575868	Argument	TMP_REG3		1575654	2					
ANR	1575869	Identifier	TMP_REG3		1575654	0					
ANR	1575870	Argument	reg		1575654	3					
ANR	1575871	Identifier	reg		1575654	0					
ANR	1575872	Argument	tmp >> 2		1575654	4					
ANR	1575873	ShiftExpression	tmp >> 2		1575654	0		>>			
ANR	1575874	Identifier	tmp		1575654	0					
ANR	1575875	PrimaryExpression	2		1575654	1					
ANR	1575876	IfStatement	if ( ! ( - tmp & ~0x3fc ) )		1575654	2					
ANR	1575877	Condition	! ( - tmp & ~0x3fc )	2053:6:63393:63408	1575654	0	True				
ANR	1575878	UnaryOperationExpression	! ( - tmp & ~0x3fc )		1575654	0					
ANR	1575879	UnaryOperator	!		1575654	0					
ANR	1575880	BitAndExpression	- tmp & ~0x3fc		1575654	1		&			
ANR	1575881	UnaryOperationExpression	- tmp		1575654	0					
ANR	1575882	UnaryOperator	-		1575654	0					
ANR	1575883	Identifier	tmp		1575654	1					
ANR	1575884	Identifier	~0x3fc		1575654	1					
ANR	1575885	ReturnStatement	"return push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 0 , TMP_REG3 , reg , - tmp >> 2 ) ) ;"	2054:3:63414:63499	1575654	1	True				
ANR	1575886	CallExpression	"push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 0 , TMP_REG3 , reg , - tmp >> 2 ) )"		1575654	0					
ANR	1575887	Callee	push_inst		1575654	0					
ANR	1575888	Identifier	push_inst		1575654	0					
ANR	1575889	ArgumentList	compiler		1575654	1					
ANR	1575890	Argument	compiler		1575654	0					
ANR	1575891	Identifier	compiler		1575654	0					
ANR	1575892	Argument	"EMIT_FPU_DATA_TRANSFER ( inst , 0 , TMP_REG3 , reg , - tmp >> 2 )"		1575654	1					
ANR	1575893	CallExpression	"EMIT_FPU_DATA_TRANSFER ( inst , 0 , TMP_REG3 , reg , - tmp >> 2 )"		1575654	0					
ANR	1575894	Callee	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575895	Identifier	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575896	ArgumentList	inst		1575654	1					
ANR	1575897	Argument	inst		1575654	0					
ANR	1575898	Identifier	inst		1575654	0					
ANR	1575899	Argument	0		1575654	1					
ANR	1575900	PrimaryExpression	0		1575654	0					
ANR	1575901	Argument	TMP_REG3		1575654	2					
ANR	1575902	Identifier	TMP_REG3		1575654	0					
ANR	1575903	Argument	reg		1575654	3					
ANR	1575904	Identifier	reg		1575654	0					
ANR	1575905	Argument	- tmp >> 2		1575654	4					
ANR	1575906	ShiftExpression	- tmp >> 2		1575654	0		>>			
ANR	1575907	UnaryOperationExpression	- tmp		1575654	0					
ANR	1575908	UnaryOperator	-		1575654	0					
ANR	1575909	Identifier	tmp		1575654	1					
ANR	1575910	PrimaryExpression	2		1575654	1					
ANR	1575911	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp ) != SLJIT_ERR_UNSUPPORTED )"		1575654	3					
ANR	1575912	Condition	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp ) != SLJIT_ERR_UNSUPPORTED"	2055:6:63507:63580	1575654	0	True				
ANR	1575913	EqualityExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp ) != SLJIT_ERR_UNSUPPORTED"		1575654	0		!=			
ANR	1575914	CallExpression	"emit_set_delta ( compiler , TMP_REG3 , TMP_REG3 , tmp )"		1575654	0					
ANR	1575915	Callee	emit_set_delta		1575654	0					
ANR	1575916	Identifier	emit_set_delta		1575654	0					
ANR	1575917	ArgumentList	compiler		1575654	1					
ANR	1575918	Argument	compiler		1575654	0					
ANR	1575919	Identifier	compiler		1575654	0					
ANR	1575920	Argument	TMP_REG3		1575654	1					
ANR	1575921	Identifier	TMP_REG3		1575654	0					
ANR	1575922	Argument	TMP_REG3		1575654	2					
ANR	1575923	Identifier	TMP_REG3		1575654	0					
ANR	1575924	Argument	tmp		1575654	3					
ANR	1575925	Identifier	tmp		1575654	0					
ANR	1575926	Identifier	SLJIT_ERR_UNSUPPORTED		1575654	1					
ANR	1575927	CompoundStatement		27:82:1038:1038	1575654	1					
ANR	1575928	ExpressionStatement	FAIL_IF ( compiler -> error )	2056:3:63588:63612	1575654	0	True				
ANR	1575929	CallExpression	FAIL_IF ( compiler -> error )		1575654	0					
ANR	1575930	Callee	FAIL_IF		1575654	0					
ANR	1575931	Identifier	FAIL_IF		1575654	0					
ANR	1575932	ArgumentList	compiler -> error		1575654	1					
ANR	1575933	Argument	compiler -> error		1575654	0					
ANR	1575934	PtrMemberAccess	compiler -> error		1575654	0					
ANR	1575935	Identifier	compiler		1575654	0					
ANR	1575936	Identifier	error		1575654	1					
ANR	1575937	ExpressionStatement	compiler -> cache_argw = argw	2057:3:63617:63644	1575654	1	True				
ANR	1575938	AssignmentExpression	compiler -> cache_argw = argw		1575654	0		=			
ANR	1575939	PtrMemberAccess	compiler -> cache_argw		1575654	0					
ANR	1575940	Identifier	compiler		1575654	0					
ANR	1575941	Identifier	cache_argw		1575654	1					
ANR	1575942	Identifier	argw		1575654	1					
ANR	1575943	ReturnStatement	"return push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , 0 ) ) ;"	2058:3:63649:63726	1575654	2	True				
ANR	1575944	CallExpression	"push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , 0 ) )"		1575654	0					
ANR	1575945	Callee	push_inst		1575654	0					
ANR	1575946	Identifier	push_inst		1575654	0					
ANR	1575947	ArgumentList	compiler		1575654	1					
ANR	1575948	Argument	compiler		1575654	0					
ANR	1575949	Identifier	compiler		1575654	0					
ANR	1575950	Argument	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , 0 )"		1575654	1					
ANR	1575951	CallExpression	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , 0 )"		1575654	0					
ANR	1575952	Callee	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575953	Identifier	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1575954	ArgumentList	inst		1575654	1					
ANR	1575955	Argument	inst		1575654	0					
ANR	1575956	Identifier	inst		1575654	0					
ANR	1575957	Argument	1		1575654	1					
ANR	1575958	PrimaryExpression	1		1575654	0					
ANR	1575959	Argument	TMP_REG3		1575654	2					
ANR	1575960	Identifier	TMP_REG3		1575654	0					
ANR	1575961	Argument	reg		1575654	3					
ANR	1575962	Identifier	reg		1575654	0					
ANR	1575963	Argument	0		1575654	4					
ANR	1575964	PrimaryExpression	0		1575654	0					
ANR	1575965	IfStatement	if ( arg & REG_MASK )		1575654	7					
ANR	1575966	Condition	arg & REG_MASK	2062:5:63741:63754	1575654	0	True				
ANR	1575967	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1575968	Identifier	arg		1575654	0					
ANR	1575969	Identifier	REG_MASK		1575654	1					
ANR	1575970	CompoundStatement		34:21:1212:1212	1575654	1					
ANR	1575971	IfStatement	"if ( emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw ) != SLJIT_ERR_UNSUPPORTED )"		1575654	0					
ANR	1575972	Condition	"emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw ) != SLJIT_ERR_UNSUPPORTED"	2063:6:63765:63845	1575654	0	True				
ANR	1575973	EqualityExpression	"emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw ) != SLJIT_ERR_UNSUPPORTED"		1575654	0		!=			
ANR	1575974	CallExpression	"emit_set_delta ( compiler , TMP_REG1 , arg & REG_MASK , argw )"		1575654	0					
ANR	1575975	Callee	emit_set_delta		1575654	0					
ANR	1575976	Identifier	emit_set_delta		1575654	0					
ANR	1575977	ArgumentList	compiler		1575654	1					
ANR	1575978	Argument	compiler		1575654	0					
ANR	1575979	Identifier	compiler		1575654	0					
ANR	1575980	Argument	TMP_REG1		1575654	1					
ANR	1575981	Identifier	TMP_REG1		1575654	0					
ANR	1575982	Argument	arg & REG_MASK		1575654	2					
ANR	1575983	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1575984	Identifier	arg		1575654	0					
ANR	1575985	Identifier	REG_MASK		1575654	1					
ANR	1575986	Argument	argw		1575654	3					
ANR	1575987	Identifier	argw		1575654	0					
ANR	1575988	Identifier	SLJIT_ERR_UNSUPPORTED		1575654	1					
ANR	1575989	CompoundStatement		35:89:1303:1303	1575654	1					
ANR	1575990	ExpressionStatement	FAIL_IF ( compiler -> error )	2064:3:63853:63877	1575654	0	True				
ANR	1575991	CallExpression	FAIL_IF ( compiler -> error )		1575654	0					
ANR	1575992	Callee	FAIL_IF		1575654	0					
ANR	1575993	Identifier	FAIL_IF		1575654	0					
ANR	1575994	ArgumentList	compiler -> error		1575654	1					
ANR	1575995	Argument	compiler -> error		1575654	0					
ANR	1575996	PtrMemberAccess	compiler -> error		1575654	0					
ANR	1575997	Identifier	compiler		1575654	0					
ANR	1575998	Identifier	error		1575654	1					
ANR	1575999	ReturnStatement	"return push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG1 , reg , 0 ) ) ;"	2065:3:63882:63959	1575654	1	True				
ANR	1576000	CallExpression	"push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG1 , reg , 0 ) )"		1575654	0					
ANR	1576001	Callee	push_inst		1575654	0					
ANR	1576002	Identifier	push_inst		1575654	0					
ANR	1576003	ArgumentList	compiler		1575654	1					
ANR	1576004	Argument	compiler		1575654	0					
ANR	1576005	Identifier	compiler		1575654	0					
ANR	1576006	Argument	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG1 , reg , 0 )"		1575654	1					
ANR	1576007	CallExpression	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG1 , reg , 0 )"		1575654	0					
ANR	1576008	Callee	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1576009	Identifier	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1576010	ArgumentList	inst		1575654	1					
ANR	1576011	Argument	inst		1575654	0					
ANR	1576012	Identifier	inst		1575654	0					
ANR	1576013	Argument	1		1575654	1					
ANR	1576014	PrimaryExpression	1		1575654	0					
ANR	1576015	Argument	TMP_REG1		1575654	2					
ANR	1576016	Identifier	TMP_REG1		1575654	0					
ANR	1576017	Argument	reg		1575654	3					
ANR	1576018	Identifier	reg		1575654	0					
ANR	1576019	Argument	0		1575654	4					
ANR	1576020	PrimaryExpression	0		1575654	0					
ANR	1576021	ExpressionStatement	imm = get_imm ( argw & ~0x3fc )	2067:2:63967:63995	1575654	1	True				
ANR	1576022	AssignmentExpression	imm = get_imm ( argw & ~0x3fc )		1575654	0		=			
ANR	1576023	Identifier	imm		1575654	0					
ANR	1576024	CallExpression	get_imm ( argw & ~0x3fc )		1575654	1					
ANR	1576025	Callee	get_imm		1575654	0					
ANR	1576026	Identifier	get_imm		1575654	0					
ANR	1576027	ArgumentList	argw & ~0x3fc		1575654	1					
ANR	1576028	Argument	argw & ~0x3fc		1575654	0					
ANR	1576029	BitAndExpression	argw & ~0x3fc		1575654	0		&			
ANR	1576030	Identifier	argw		1575654	0					
ANR	1576031	Identifier	~0x3fc		1575654	1					
ANR	1576032	IfStatement	if ( imm )		1575654	2					
ANR	1576033	Condition	imm	2068:6:64003:64005	1575654	0	True				
ANR	1576034	Identifier	imm		1575654	0					
ANR	1576035	CompoundStatement		40:11:1463:1463	1575654	1					
ANR	1576036	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) ) )"	2069:3:64013:64106	1575654	0	True				
ANR	1576037	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) ) )"		1575654	0					
ANR	1576038	Callee	FAIL_IF		1575654	0					
ANR	1576039	Identifier	FAIL_IF		1575654	0					
ANR	1576040	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) )"		1575654	1					
ANR	1576041	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) )"		1575654	0					
ANR	1576042	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) )"		1575654	0					
ANR	1576043	Callee	push_inst		1575654	0					
ANR	1576044	Identifier	push_inst		1575654	0					
ANR	1576045	ArgumentList	compiler		1575654	1					
ANR	1576046	Argument	compiler		1575654	0					
ANR	1576047	Identifier	compiler		1575654	0					
ANR	1576048	Argument	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , imm )"		1575654	1					
ANR	1576049	CallExpression	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG1 , arg & REG_MASK , imm )"		1575654	0					
ANR	1576050	Callee	EMIT_DATA_PROCESS_INS		1575654	0					
ANR	1576051	Identifier	EMIT_DATA_PROCESS_INS		1575654	0					
ANR	1576052	ArgumentList	ADD_DP		1575654	1					
ANR	1576053	Argument	ADD_DP		1575654	0					
ANR	1576054	Identifier	ADD_DP		1575654	0					
ANR	1576055	Argument	0		1575654	1					
ANR	1576056	PrimaryExpression	0		1575654	0					
ANR	1576057	Argument	TMP_REG1		1575654	2					
ANR	1576058	Identifier	TMP_REG1		1575654	0					
ANR	1576059	Argument	arg & REG_MASK		1575654	3					
ANR	1576060	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1576061	Identifier	arg		1575654	0					
ANR	1576062	Identifier	REG_MASK		1575654	1					
ANR	1576063	Argument	imm		1575654	4					
ANR	1576064	Identifier	imm		1575654	0					
ANR	1576065	ReturnStatement	"return push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG1 , reg , ( argw & 0x3fc ) >> 2 ) ) ;"	2070:3:64111:64206	1575654	1	True				
ANR	1576066	CallExpression	"push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG1 , reg , ( argw & 0x3fc ) >> 2 ) )"		1575654	0					
ANR	1576067	Callee	push_inst		1575654	0					
ANR	1576068	Identifier	push_inst		1575654	0					
ANR	1576069	ArgumentList	compiler		1575654	1					
ANR	1576070	Argument	compiler		1575654	0					
ANR	1576071	Identifier	compiler		1575654	0					
ANR	1576072	Argument	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG1 , reg , ( argw & 0x3fc ) >> 2 )"		1575654	1					
ANR	1576073	CallExpression	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG1 , reg , ( argw & 0x3fc ) >> 2 )"		1575654	0					
ANR	1576074	Callee	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1576075	Identifier	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1576076	ArgumentList	inst		1575654	1					
ANR	1576077	Argument	inst		1575654	0					
ANR	1576078	Identifier	inst		1575654	0					
ANR	1576079	Argument	1		1575654	1					
ANR	1576080	PrimaryExpression	1		1575654	0					
ANR	1576081	Argument	TMP_REG1		1575654	2					
ANR	1576082	Identifier	TMP_REG1		1575654	0					
ANR	1576083	Argument	reg		1575654	3					
ANR	1576084	Identifier	reg		1575654	0					
ANR	1576085	Argument	( argw & 0x3fc ) >> 2		1575654	4					
ANR	1576086	ShiftExpression	( argw & 0x3fc ) >> 2		1575654	0		>>			
ANR	1576087	BitAndExpression	argw & 0x3fc		1575654	0		&			
ANR	1576088	Identifier	argw		1575654	0					
ANR	1576089	PrimaryExpression	0x3fc		1575654	1					
ANR	1576090	PrimaryExpression	2		1575654	1					
ANR	1576091	ExpressionStatement	imm = get_imm ( - argw & ~0x3fc )	2072:2:64214:64243	1575654	3	True				
ANR	1576092	AssignmentExpression	imm = get_imm ( - argw & ~0x3fc )		1575654	0		=			
ANR	1576093	Identifier	imm		1575654	0					
ANR	1576094	CallExpression	get_imm ( - argw & ~0x3fc )		1575654	1					
ANR	1576095	Callee	get_imm		1575654	0					
ANR	1576096	Identifier	get_imm		1575654	0					
ANR	1576097	ArgumentList	- argw & ~0x3fc		1575654	1					
ANR	1576098	Argument	- argw & ~0x3fc		1575654	0					
ANR	1576099	BitAndExpression	- argw & ~0x3fc		1575654	0		&			
ANR	1576100	UnaryOperationExpression	- argw		1575654	0					
ANR	1576101	UnaryOperator	-		1575654	0					
ANR	1576102	Identifier	argw		1575654	1					
ANR	1576103	Identifier	~0x3fc		1575654	1					
ANR	1576104	IfStatement	if ( imm )		1575654	4					
ANR	1576105	Condition	imm	2073:6:64251:64253	1575654	0	True				
ANR	1576106	Identifier	imm		1575654	0					
ANR	1576107	CompoundStatement		45:11:1711:1711	1575654	1					
ANR	1576108	ExpressionStatement	argw = - argw	2074:3:64261:64273	1575654	0	True				
ANR	1576109	AssignmentExpression	argw = - argw		1575654	0		=			
ANR	1576110	Identifier	argw		1575654	0					
ANR	1576111	UnaryOperationExpression	- argw		1575654	1					
ANR	1576112	UnaryOperator	-		1575654	0					
ANR	1576113	Identifier	argw		1575654	1					
ANR	1576114	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) ) )"	2075:3:64278:64371	1575654	1	True				
ANR	1576115	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) ) )"		1575654	0					
ANR	1576116	Callee	FAIL_IF		1575654	0					
ANR	1576117	Identifier	FAIL_IF		1575654	0					
ANR	1576118	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) )"		1575654	1					
ANR	1576119	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) )"		1575654	0					
ANR	1576120	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , TMP_REG1 , arg & REG_MASK , imm ) )"		1575654	0					
ANR	1576121	Callee	push_inst		1575654	0					
ANR	1576122	Identifier	push_inst		1575654	0					
ANR	1576123	ArgumentList	compiler		1575654	1					
ANR	1576124	Argument	compiler		1575654	0					
ANR	1576125	Identifier	compiler		1575654	0					
ANR	1576126	Argument	"EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , TMP_REG1 , arg & REG_MASK , imm )"		1575654	1					
ANR	1576127	CallExpression	"EMIT_DATA_PROCESS_INS ( SUB_DP , 0 , TMP_REG1 , arg & REG_MASK , imm )"		1575654	0					
ANR	1576128	Callee	EMIT_DATA_PROCESS_INS		1575654	0					
ANR	1576129	Identifier	EMIT_DATA_PROCESS_INS		1575654	0					
ANR	1576130	ArgumentList	SUB_DP		1575654	1					
ANR	1576131	Argument	SUB_DP		1575654	0					
ANR	1576132	Identifier	SUB_DP		1575654	0					
ANR	1576133	Argument	0		1575654	1					
ANR	1576134	PrimaryExpression	0		1575654	0					
ANR	1576135	Argument	TMP_REG1		1575654	2					
ANR	1576136	Identifier	TMP_REG1		1575654	0					
ANR	1576137	Argument	arg & REG_MASK		1575654	3					
ANR	1576138	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1576139	Identifier	arg		1575654	0					
ANR	1576140	Identifier	REG_MASK		1575654	1					
ANR	1576141	Argument	imm		1575654	4					
ANR	1576142	Identifier	imm		1575654	0					
ANR	1576143	ReturnStatement	"return push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 0 , TMP_REG1 , reg , ( argw & 0x3fc ) >> 2 ) ) ;"	2076:3:64376:64471	1575654	2	True				
ANR	1576144	CallExpression	"push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 0 , TMP_REG1 , reg , ( argw & 0x3fc ) >> 2 ) )"		1575654	0					
ANR	1576145	Callee	push_inst		1575654	0					
ANR	1576146	Identifier	push_inst		1575654	0					
ANR	1576147	ArgumentList	compiler		1575654	1					
ANR	1576148	Argument	compiler		1575654	0					
ANR	1576149	Identifier	compiler		1575654	0					
ANR	1576150	Argument	"EMIT_FPU_DATA_TRANSFER ( inst , 0 , TMP_REG1 , reg , ( argw & 0x3fc ) >> 2 )"		1575654	1					
ANR	1576151	CallExpression	"EMIT_FPU_DATA_TRANSFER ( inst , 0 , TMP_REG1 , reg , ( argw & 0x3fc ) >> 2 )"		1575654	0					
ANR	1576152	Callee	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1576153	Identifier	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1576154	ArgumentList	inst		1575654	1					
ANR	1576155	Argument	inst		1575654	0					
ANR	1576156	Identifier	inst		1575654	0					
ANR	1576157	Argument	0		1575654	1					
ANR	1576158	PrimaryExpression	0		1575654	0					
ANR	1576159	Argument	TMP_REG1		1575654	2					
ANR	1576160	Identifier	TMP_REG1		1575654	0					
ANR	1576161	Argument	reg		1575654	3					
ANR	1576162	Identifier	reg		1575654	0					
ANR	1576163	Argument	( argw & 0x3fc ) >> 2		1575654	4					
ANR	1576164	ShiftExpression	( argw & 0x3fc ) >> 2		1575654	0		>>			
ANR	1576165	BitAndExpression	argw & 0x3fc		1575654	0		&			
ANR	1576166	Identifier	argw		1575654	0					
ANR	1576167	PrimaryExpression	0x3fc		1575654	1					
ANR	1576168	PrimaryExpression	2		1575654	1					
ANR	1576169	ExpressionStatement	compiler -> cache_arg = arg	2080:1:64482:64507	1575654	8	True				
ANR	1576170	AssignmentExpression	compiler -> cache_arg = arg		1575654	0		=			
ANR	1576171	PtrMemberAccess	compiler -> cache_arg		1575654	0					
ANR	1576172	Identifier	compiler		1575654	0					
ANR	1576173	Identifier	cache_arg		1575654	1					
ANR	1576174	Identifier	arg		1575654	1					
ANR	1576175	ExpressionStatement	compiler -> cache_argw = argw	2081:1:64510:64537	1575654	9	True				
ANR	1576176	AssignmentExpression	compiler -> cache_argw = argw		1575654	0		=			
ANR	1576177	PtrMemberAccess	compiler -> cache_argw		1575654	0					
ANR	1576178	Identifier	compiler		1575654	0					
ANR	1576179	Identifier	cache_argw		1575654	1					
ANR	1576180	Identifier	argw		1575654	1					
ANR	1576181	IfStatement	if ( arg & REG_MASK )		1575654	10					
ANR	1576182	Condition	arg & REG_MASK	2082:5:64544:64557	1575654	0	True				
ANR	1576183	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1576184	Identifier	arg		1575654	0					
ANR	1576185	Identifier	REG_MASK		1575654	1					
ANR	1576186	CompoundStatement		54:21:2015:2015	1575654	1					
ANR	1576187	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , argw ) )"	2083:2:64564:64613	1575654	0	True				
ANR	1576188	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , argw ) )"		1575654	0					
ANR	1576189	Callee	FAIL_IF		1575654	0					
ANR	1576190	Identifier	FAIL_IF		1575654	0					
ANR	1576191	ArgumentList	"load_immediate ( compiler , TMP_REG1 , argw )"		1575654	1					
ANR	1576192	Argument	"load_immediate ( compiler , TMP_REG1 , argw )"		1575654	0					
ANR	1576193	CallExpression	"load_immediate ( compiler , TMP_REG1 , argw )"		1575654	0					
ANR	1576194	Callee	load_immediate		1575654	0					
ANR	1576195	Identifier	load_immediate		1575654	0					
ANR	1576196	ArgumentList	compiler		1575654	1					
ANR	1576197	Argument	compiler		1575654	0					
ANR	1576198	Identifier	compiler		1575654	0					
ANR	1576199	Argument	TMP_REG1		1575654	1					
ANR	1576200	Identifier	TMP_REG1		1575654	0					
ANR	1576201	Argument	argw		1575654	2					
ANR	1576202	Identifier	argw		1575654	0					
ANR	1576203	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , arg & REG_MASK , reg_map [ TMP_REG1 ] ) ) )"	2084:2:64617:64724	1575654	1	True				
ANR	1576204	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , arg & REG_MASK , reg_map [ TMP_REG1 ] ) ) )"		1575654	0					
ANR	1576205	Callee	FAIL_IF		1575654	0					
ANR	1576206	Identifier	FAIL_IF		1575654	0					
ANR	1576207	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , arg & REG_MASK , reg_map [ TMP_REG1 ] ) )"		1575654	1					
ANR	1576208	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , arg & REG_MASK , reg_map [ TMP_REG1 ] ) )"		1575654	0					
ANR	1576209	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , arg & REG_MASK , reg_map [ TMP_REG1 ] ) )"		1575654	0					
ANR	1576210	Callee	push_inst		1575654	0					
ANR	1576211	Identifier	push_inst		1575654	0					
ANR	1576212	ArgumentList	compiler		1575654	1					
ANR	1576213	Argument	compiler		1575654	0					
ANR	1576214	Identifier	compiler		1575654	0					
ANR	1576215	Argument	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , arg & REG_MASK , reg_map [ TMP_REG1 ] )"		1575654	1					
ANR	1576216	CallExpression	"EMIT_DATA_PROCESS_INS ( ADD_DP , 0 , TMP_REG3 , arg & REG_MASK , reg_map [ TMP_REG1 ] )"		1575654	0					
ANR	1576217	Callee	EMIT_DATA_PROCESS_INS		1575654	0					
ANR	1576218	Identifier	EMIT_DATA_PROCESS_INS		1575654	0					
ANR	1576219	ArgumentList	ADD_DP		1575654	1					
ANR	1576220	Argument	ADD_DP		1575654	0					
ANR	1576221	Identifier	ADD_DP		1575654	0					
ANR	1576222	Argument	0		1575654	1					
ANR	1576223	PrimaryExpression	0		1575654	0					
ANR	1576224	Argument	TMP_REG3		1575654	2					
ANR	1576225	Identifier	TMP_REG3		1575654	0					
ANR	1576226	Argument	arg & REG_MASK		1575654	3					
ANR	1576227	BitAndExpression	arg & REG_MASK		1575654	0		&			
ANR	1576228	Identifier	arg		1575654	0					
ANR	1576229	Identifier	REG_MASK		1575654	1					
ANR	1576230	Argument	reg_map [ TMP_REG1 ]		1575654	4					
ANR	1576231	ArrayIndexing	reg_map [ TMP_REG1 ]		1575654	0					
ANR	1576232	Identifier	reg_map		1575654	0					
ANR	1576233	Identifier	TMP_REG1		1575654	1					
ANR	1576234	ElseStatement	else		1575654	0					
ANR	1576235	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	2087:2:64737:64786	1575654	0	True				
ANR	1576236	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1575654	0					
ANR	1576237	Callee	FAIL_IF		1575654	0					
ANR	1576238	Identifier	FAIL_IF		1575654	0					
ANR	1576239	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1575654	1					
ANR	1576240	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1575654	0					
ANR	1576241	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1575654	0					
ANR	1576242	Callee	load_immediate		1575654	0					
ANR	1576243	Identifier	load_immediate		1575654	0					
ANR	1576244	ArgumentList	compiler		1575654	1					
ANR	1576245	Argument	compiler		1575654	0					
ANR	1576246	Identifier	compiler		1575654	0					
ANR	1576247	Argument	TMP_REG3		1575654	1					
ANR	1576248	Identifier	TMP_REG3		1575654	0					
ANR	1576249	Argument	argw		1575654	2					
ANR	1576250	Identifier	argw		1575654	0					
ANR	1576251	ReturnStatement	"return push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , 0 ) ) ;"	2089:1:64790:64867	1575654	11	True				
ANR	1576252	CallExpression	"push_inst ( compiler , EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , 0 ) )"		1575654	0					
ANR	1576253	Callee	push_inst		1575654	0					
ANR	1576254	Identifier	push_inst		1575654	0					
ANR	1576255	ArgumentList	compiler		1575654	1					
ANR	1576256	Argument	compiler		1575654	0					
ANR	1576257	Identifier	compiler		1575654	0					
ANR	1576258	Argument	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , 0 )"		1575654	1					
ANR	1576259	CallExpression	"EMIT_FPU_DATA_TRANSFER ( inst , 1 , TMP_REG3 , reg , 0 )"		1575654	0					
ANR	1576260	Callee	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1576261	Identifier	EMIT_FPU_DATA_TRANSFER		1575654	0					
ANR	1576262	ArgumentList	inst		1575654	1					
ANR	1576263	Argument	inst		1575654	0					
ANR	1576264	Identifier	inst		1575654	0					
ANR	1576265	Argument	1		1575654	1					
ANR	1576266	PrimaryExpression	1		1575654	0					
ANR	1576267	Argument	TMP_REG3		1575654	2					
ANR	1576268	Identifier	TMP_REG3		1575654	0					
ANR	1576269	Argument	reg		1575654	3					
ANR	1576270	Identifier	reg		1575654	0					
ANR	1576271	Argument	0		1575654	4					
ANR	1576272	PrimaryExpression	0		1575654	0					
ANR	1576273	ReturnType	static sljit_si		1575654	1					
ANR	1576274	Identifier	emit_fop_mem		1575654	2					
ANR	1576275	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1575654	3					
ANR	1576276	Parameter	struct sljit_compiler * compiler	2028:29:62452:62482	1575654	0	True				
ANR	1576277	ParameterType	struct sljit_compiler *		1575654	0					
ANR	1576278	Identifier	compiler		1575654	1					
ANR	1576279	Parameter	sljit_si flags	2028:62:62485:62498	1575654	1	True				
ANR	1576280	ParameterType	sljit_si		1575654	0					
ANR	1576281	Identifier	flags		1575654	1					
ANR	1576282	Parameter	sljit_si reg	2028:78:62501:62512	1575654	2	True				
ANR	1576283	ParameterType	sljit_si		1575654	0					
ANR	1576284	Identifier	reg		1575654	1					
ANR	1576285	Parameter	sljit_si arg	2028:92:62515:62526	1575654	3	True				
ANR	1576286	ParameterType	sljit_si		1575654	0					
ANR	1576287	Identifier	arg		1575654	1					
ANR	1576288	Parameter	sljit_sw argw	2028:106:62529:62541	1575654	4	True				
ANR	1576289	ParameterType	sljit_sw		1575654	0					
ANR	1576290	Identifier	argw		1575654	1					
ANR	1576291	CFGEntryNode	ENTRY		1575654		True				
ANR	1576292	CFGExitNode	EXIT		1575654		True				
ANR	1576293	Symbol	TMP_REG3		1575654						
ANR	1576294	Symbol	TMP_REG1		1575654						
ANR	1576295	Symbol	compiler -> cache_argw		1575654						
ANR	1576296	Symbol	ADD_DP		1575654						
ANR	1576297	Symbol	SLJIT_MEM		1575654						
ANR	1576298	Symbol	flags		1575654						
ANR	1576299	Symbol	imm		1575654						
ANR	1576300	Symbol	reg_map		1575654						
ANR	1576301	Symbol	* compiler		1575654						
ANR	1576302	Symbol	argw		1575654						
ANR	1576303	Symbol	emit_set_delta		1575654						
ANR	1576304	Symbol	load_immediate		1575654						
ANR	1576305	Symbol	reg		1575654						
ANR	1576306	Symbol	tmp		1575654						
ANR	1576307	Symbol	arg		1575654						
ANR	1576308	Symbol	* TMP_REG1		1575654						
ANR	1576309	Symbol	compiler		1575654						
ANR	1576310	Symbol	push_inst		1575654						
ANR	1576311	Symbol	REG_MASK		1575654						
ANR	1576312	Symbol	SUB_DP		1575654						
ANR	1576313	Symbol	compiler -> cache_arg		1575654						
ANR	1576314	Symbol	SLJIT_SINGLE_OP		1575654						
ANR	1576315	Symbol	OFFS_REG_MASK		1575654						
ANR	1576316	Symbol	get_imm		1575654						
ANR	1576317	Symbol	EMIT_FPU_DATA_TRANSFER		1575654						
ANR	1576318	Symbol	* reg_map		1575654						
ANR	1576319	Symbol	VSTR_F32		1575654						
ANR	1576320	Symbol	~0x3fc		1575654						
ANR	1576321	Symbol	FPU_LOAD		1575654						
ANR	1576322	Symbol	inst		1575654						
ANR	1576323	Symbol	OFFS_REG		1575654						
ANR	1576324	Symbol	RM		1575654						
ANR	1576325	Symbol	compiler -> error		1575654						
ANR	1576326	Symbol	SLJIT_UNLIKELY		1575654						
ANR	1576327	Symbol	EMIT_DATA_PROCESS_INS		1575654						
ANR	1576328	Symbol	SLJIT_ERR_UNSUPPORTED		1575654						
ANR	1576329	Function	sljit_emit_fop1_convw_fromd	2092:0:64872:65545							
ANR	1576330	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1576329	0					
ANR	1576331	CompoundStatement		2095:0:65035:65545	1576329	0					
ANR	1576332	IfStatement	if ( src & SLJIT_MEM )		1576329	0					
ANR	1576333	Condition	src & SLJIT_MEM	2096:5:65042:65056	1576329	0	True				
ANR	1576334	BitAndExpression	src & SLJIT_MEM		1576329	0		&			
ANR	1576335	Identifier	src		1576329	0					
ANR	1576336	Identifier	SLJIT_MEM		1576329	1					
ANR	1576337	CompoundStatement		2:22:23:23	1576329	1					
ANR	1576338	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw ) )"	2097:2:65063:65151	1576329	0	True				
ANR	1576339	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw ) )"		1576329	0					
ANR	1576340	Callee	FAIL_IF		1576329	0					
ANR	1576341	Identifier	FAIL_IF		1576329	0					
ANR	1576342	ArgumentList	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw )"		1576329	1					
ANR	1576343	Argument	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw )"		1576329	0					
ANR	1576344	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src , srcw )"		1576329	0					
ANR	1576345	Callee	emit_fop_mem		1576329	0					
ANR	1576346	Identifier	emit_fop_mem		1576329	0					
ANR	1576347	ArgumentList	compiler		1576329	1					
ANR	1576348	Argument	compiler		1576329	0					
ANR	1576349	Identifier	compiler		1576329	0					
ANR	1576350	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1576329	1					
ANR	1576351	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1576329	0		|			
ANR	1576352	BitAndExpression	op & SLJIT_SINGLE_OP		1576329	0		&			
ANR	1576353	Identifier	op		1576329	0					
ANR	1576354	Identifier	SLJIT_SINGLE_OP		1576329	1					
ANR	1576355	Identifier	FPU_LOAD		1576329	1					
ANR	1576356	Argument	TMP_FREG1		1576329	2					
ANR	1576357	Identifier	TMP_FREG1		1576329	0					
ANR	1576358	Argument	src		1576329	3					
ANR	1576359	Identifier	src		1576329	0					
ANR	1576360	Argument	srcw		1576329	4					
ANR	1576361	Identifier	srcw		1576329	0					
ANR	1576362	ExpressionStatement	src = TMP_FREG1	2098:2:65155:65170	1576329	1	True				
ANR	1576363	AssignmentExpression	src = TMP_FREG1		1576329	0		=			
ANR	1576364	Identifier	src		1576329	0					
ANR	1576365	Identifier	TMP_FREG1		1576329	1					
ANR	1576366	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_S32_F32 , op & SLJIT_SINGLE_OP , TMP_FREG1 , src , 0 ) ) )"	2101:1:65177:65280	1576329	1	True				
ANR	1576367	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_S32_F32 , op & SLJIT_SINGLE_OP , TMP_FREG1 , src , 0 ) ) )"		1576329	0					
ANR	1576368	Callee	FAIL_IF		1576329	0					
ANR	1576369	Identifier	FAIL_IF		1576329	0					
ANR	1576370	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_S32_F32 , op & SLJIT_SINGLE_OP , TMP_FREG1 , src , 0 ) )"		1576329	1					
ANR	1576371	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_S32_F32 , op & SLJIT_SINGLE_OP , TMP_FREG1 , src , 0 ) )"		1576329	0					
ANR	1576372	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_S32_F32 , op & SLJIT_SINGLE_OP , TMP_FREG1 , src , 0 ) )"		1576329	0					
ANR	1576373	Callee	push_inst		1576329	0					
ANR	1576374	Identifier	push_inst		1576329	0					
ANR	1576375	ArgumentList	compiler		1576329	1					
ANR	1576376	Argument	compiler		1576329	0					
ANR	1576377	Identifier	compiler		1576329	0					
ANR	1576378	Argument	"EMIT_FPU_OPERATION ( VCVT_S32_F32 , op & SLJIT_SINGLE_OP , TMP_FREG1 , src , 0 )"		1576329	1					
ANR	1576379	CallExpression	"EMIT_FPU_OPERATION ( VCVT_S32_F32 , op & SLJIT_SINGLE_OP , TMP_FREG1 , src , 0 )"		1576329	0					
ANR	1576380	Callee	EMIT_FPU_OPERATION		1576329	0					
ANR	1576381	Identifier	EMIT_FPU_OPERATION		1576329	0					
ANR	1576382	ArgumentList	VCVT_S32_F32		1576329	1					
ANR	1576383	Argument	VCVT_S32_F32		1576329	0					
ANR	1576384	Identifier	VCVT_S32_F32		1576329	0					
ANR	1576385	Argument	op & SLJIT_SINGLE_OP		1576329	1					
ANR	1576386	BitAndExpression	op & SLJIT_SINGLE_OP		1576329	0		&			
ANR	1576387	Identifier	op		1576329	0					
ANR	1576388	Identifier	SLJIT_SINGLE_OP		1576329	1					
ANR	1576389	Argument	TMP_FREG1		1576329	2					
ANR	1576390	Identifier	TMP_FREG1		1576329	0					
ANR	1576391	Argument	src		1576329	3					
ANR	1576392	Identifier	src		1576329	0					
ANR	1576393	Argument	0		1576329	4					
ANR	1576394	PrimaryExpression	0		1576329	0					
ANR	1576395	IfStatement	if ( dst == SLJIT_UNUSED )		1576329	2					
ANR	1576396	Condition	dst == SLJIT_UNUSED	2103:5:65288:65306	1576329	0	True				
ANR	1576397	EqualityExpression	dst == SLJIT_UNUSED		1576329	0		==			
ANR	1576398	Identifier	dst		1576329	0					
ANR	1576399	Identifier	SLJIT_UNUSED		1576329	1					
ANR	1576400	ReturnStatement	return SLJIT_SUCCESS ;	2104:2:65311:65331	1576329	1	True				
ANR	1576401	Identifier	SLJIT_SUCCESS		1576329	0					
ANR	1576402	IfStatement	if ( FAST_IS_REG ( dst ) )		1576329	3					
ANR	1576403	Condition	FAST_IS_REG ( dst )	2106:5:65339:65354	1576329	0	True				
ANR	1576404	CallExpression	FAST_IS_REG ( dst )		1576329	0					
ANR	1576405	Callee	FAST_IS_REG		1576329	0					
ANR	1576406	Identifier	FAST_IS_REG		1576329	0					
ANR	1576407	ArgumentList	dst		1576329	1					
ANR	1576408	Argument	dst		1576329	0					
ANR	1576409	Identifier	dst		1576329	0					
ANR	1576410	ReturnStatement	"return push_inst ( compiler , VMOV | ( 1 << 20 ) | RD ( dst ) | ( TMP_FREG1 << 16 ) ) ;"	2107:2:65359:65433	1576329	1	True				
ANR	1576411	CallExpression	"push_inst ( compiler , VMOV | ( 1 << 20 ) | RD ( dst ) | ( TMP_FREG1 << 16 ) )"		1576329	0					
ANR	1576412	Callee	push_inst		1576329	0					
ANR	1576413	Identifier	push_inst		1576329	0					
ANR	1576414	ArgumentList	compiler		1576329	1					
ANR	1576415	Argument	compiler		1576329	0					
ANR	1576416	Identifier	compiler		1576329	0					
ANR	1576417	Argument	VMOV | ( 1 << 20 ) | RD ( dst ) | ( TMP_FREG1 << 16 )		1576329	1					
ANR	1576418	InclusiveOrExpression	VMOV | ( 1 << 20 ) | RD ( dst ) | ( TMP_FREG1 << 16 )		1576329	0		|			
ANR	1576419	Identifier	VMOV		1576329	0					
ANR	1576420	InclusiveOrExpression	( 1 << 20 ) | RD ( dst ) | ( TMP_FREG1 << 16 )		1576329	1		|			
ANR	1576421	ShiftExpression	1 << 20		1576329	0		<<			
ANR	1576422	PrimaryExpression	1		1576329	0					
ANR	1576423	PrimaryExpression	20		1576329	1					
ANR	1576424	InclusiveOrExpression	RD ( dst ) | ( TMP_FREG1 << 16 )		1576329	1		|			
ANR	1576425	CallExpression	RD ( dst )		1576329	0					
ANR	1576426	Callee	RD		1576329	0					
ANR	1576427	Identifier	RD		1576329	0					
ANR	1576428	ArgumentList	dst		1576329	1					
ANR	1576429	Argument	dst		1576329	0					
ANR	1576430	Identifier	dst		1576329	0					
ANR	1576431	ShiftExpression	TMP_FREG1 << 16		1576329	1		<<			
ANR	1576432	Identifier	TMP_FREG1		1576329	0					
ANR	1576433	PrimaryExpression	16		1576329	1					
ANR	1576434	ReturnStatement	"return emit_fop_mem ( compiler , 0 , TMP_FREG1 , dst , dstw ) ;"	2110:1:65489:65543	1576329	4	True				
ANR	1576435	CallExpression	"emit_fop_mem ( compiler , 0 , TMP_FREG1 , dst , dstw )"		1576329	0					
ANR	1576436	Callee	emit_fop_mem		1576329	0					
ANR	1576437	Identifier	emit_fop_mem		1576329	0					
ANR	1576438	ArgumentList	compiler		1576329	1					
ANR	1576439	Argument	compiler		1576329	0					
ANR	1576440	Identifier	compiler		1576329	0					
ANR	1576441	Argument	0		1576329	1					
ANR	1576442	PrimaryExpression	0		1576329	0					
ANR	1576443	Argument	TMP_FREG1		1576329	2					
ANR	1576444	Identifier	TMP_FREG1		1576329	0					
ANR	1576445	Argument	dst		1576329	3					
ANR	1576446	Identifier	dst		1576329	0					
ANR	1576447	Argument	dstw		1576329	4					
ANR	1576448	Identifier	dstw		1576329	0					
ANR	1576449	ReturnType	static SLJIT_INLINE sljit_si		1576329	1					
ANR	1576450	Identifier	sljit_emit_fop1_convw_fromd		1576329	2					
ANR	1576451	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1576329	3					
ANR	1576452	Parameter	struct sljit_compiler * compiler	2092:57:64929:64959	1576329	0	True				
ANR	1576453	ParameterType	struct sljit_compiler *		1576329	0					
ANR	1576454	Identifier	compiler		1576329	1					
ANR	1576455	Parameter	sljit_si op	2092:90:64962:64972	1576329	1	True				
ANR	1576456	ParameterType	sljit_si		1576329	0					
ANR	1576457	Identifier	op		1576329	1					
ANR	1576458	Parameter	sljit_si dst	2093:1:64976:64987	1576329	2	True				
ANR	1576459	ParameterType	sljit_si		1576329	0					
ANR	1576460	Identifier	dst		1576329	1					
ANR	1576461	Parameter	sljit_sw dstw	2093:15:64990:65002	1576329	3	True				
ANR	1576462	ParameterType	sljit_sw		1576329	0					
ANR	1576463	Identifier	dstw		1576329	1					
ANR	1576464	Parameter	sljit_si src	2094:1:65006:65017	1576329	4	True				
ANR	1576465	ParameterType	sljit_si		1576329	0					
ANR	1576466	Identifier	src		1576329	1					
ANR	1576467	Parameter	sljit_sw srcw	2094:15:65020:65032	1576329	5	True				
ANR	1576468	ParameterType	sljit_sw		1576329	0					
ANR	1576469	Identifier	srcw		1576329	1					
ANR	1576470	CFGEntryNode	ENTRY		1576329		True				
ANR	1576471	CFGExitNode	EXIT		1576329		True				
ANR	1576472	Symbol	op		1576329						
ANR	1576473	Symbol	push_inst		1576329						
ANR	1576474	Symbol	FAST_IS_REG		1576329						
ANR	1576475	Symbol	dst		1576329						
ANR	1576476	Symbol	src		1576329						
ANR	1576477	Symbol	TMP_FREG1		1576329						
ANR	1576478	Symbol	srcw		1576329						
ANR	1576479	Symbol	SLJIT_MEM		1576329						
ANR	1576480	Symbol	SLJIT_SINGLE_OP		1576329						
ANR	1576481	Symbol	SLJIT_SUCCESS		1576329						
ANR	1576482	Symbol	EMIT_FPU_OPERATION		1576329						
ANR	1576483	Symbol	RD		1576329						
ANR	1576484	Symbol	SLJIT_UNUSED		1576329						
ANR	1576485	Symbol	emit_fop_mem		1576329						
ANR	1576486	Symbol	FPU_LOAD		1576329						
ANR	1576487	Symbol	VCVT_S32_F32		1576329						
ANR	1576488	Symbol	VMOV		1576329						
ANR	1576489	Symbol	compiler		1576329						
ANR	1576490	Symbol	dstw		1576329						
ANR	1576491	Function	sljit_emit_fop1_convd_fromw	2113:0:65548:66381							
ANR	1576492	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1576491	0					
ANR	1576493	CompoundStatement		2116:0:65711:66381	1576491	0					
ANR	1576494	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1 ;	2117:1:65714:65765	1576491	0	True				
ANR	1576495	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1576491	0					
ANR	1576496	IdentifierDeclType	sljit_si		1576491	0					
ANR	1576497	Identifier	dst_r		1576491	1					
ANR	1576498	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1576491	2		=			
ANR	1576499	Identifier	dst_r		1576491	0					
ANR	1576500	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1576491	1					
ANR	1576501	Condition	FAST_IS_REG ( dst )		1576491	0					
ANR	1576502	CallExpression	FAST_IS_REG ( dst )		1576491	0					
ANR	1576503	Callee	FAST_IS_REG		1576491	0					
ANR	1576504	Identifier	FAST_IS_REG		1576491	0					
ANR	1576505	ArgumentList	dst		1576491	1					
ANR	1576506	Argument	dst		1576491	0					
ANR	1576507	Identifier	dst		1576491	0					
ANR	1576508	Identifier	dst		1576491	1					
ANR	1576509	Identifier	TMP_FREG1		1576491	2					
ANR	1576510	IfStatement	if ( FAST_IS_REG ( src ) )		1576491	1					
ANR	1576511	Condition	FAST_IS_REG ( src )	2119:5:65773:65788	1576491	0	True				
ANR	1576512	CallExpression	FAST_IS_REG ( src )		1576491	0					
ANR	1576513	Callee	FAST_IS_REG		1576491	0					
ANR	1576514	Identifier	FAST_IS_REG		1576491	0					
ANR	1576515	ArgumentList	src		1576491	1					
ANR	1576516	Argument	src		1576491	0					
ANR	1576517	Identifier	src		1576491	0					
ANR	1576518	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , VMOV | RD ( src ) | ( TMP_FREG1 << 16 ) ) )"	2120:2:65793:65857	1576491	1	True				
ANR	1576519	CallExpression	"FAIL_IF ( push_inst ( compiler , VMOV | RD ( src ) | ( TMP_FREG1 << 16 ) ) )"		1576491	0					
ANR	1576520	Callee	FAIL_IF		1576491	0					
ANR	1576521	Identifier	FAIL_IF		1576491	0					
ANR	1576522	ArgumentList	"push_inst ( compiler , VMOV | RD ( src ) | ( TMP_FREG1 << 16 ) )"		1576491	1					
ANR	1576523	Argument	"push_inst ( compiler , VMOV | RD ( src ) | ( TMP_FREG1 << 16 ) )"		1576491	0					
ANR	1576524	CallExpression	"push_inst ( compiler , VMOV | RD ( src ) | ( TMP_FREG1 << 16 ) )"		1576491	0					
ANR	1576525	Callee	push_inst		1576491	0					
ANR	1576526	Identifier	push_inst		1576491	0					
ANR	1576527	ArgumentList	compiler		1576491	1					
ANR	1576528	Argument	compiler		1576491	0					
ANR	1576529	Identifier	compiler		1576491	0					
ANR	1576530	Argument	VMOV | RD ( src ) | ( TMP_FREG1 << 16 )		1576491	1					
ANR	1576531	InclusiveOrExpression	VMOV | RD ( src ) | ( TMP_FREG1 << 16 )		1576491	0		|			
ANR	1576532	Identifier	VMOV		1576491	0					
ANR	1576533	InclusiveOrExpression	RD ( src ) | ( TMP_FREG1 << 16 )		1576491	1		|			
ANR	1576534	CallExpression	RD ( src )		1576491	0					
ANR	1576535	Callee	RD		1576491	0					
ANR	1576536	Identifier	RD		1576491	0					
ANR	1576537	ArgumentList	src		1576491	1					
ANR	1576538	Argument	src		1576491	0					
ANR	1576539	Identifier	src		1576491	0					
ANR	1576540	ShiftExpression	TMP_FREG1 << 16		1576491	1		<<			
ANR	1576541	Identifier	TMP_FREG1		1576491	0					
ANR	1576542	PrimaryExpression	16		1576491	1					
ANR	1576543	ElseStatement	else		1576491	0					
ANR	1576544	IfStatement	if ( src & SLJIT_MEM )		1576491	0					
ANR	1576545	Condition	src & SLJIT_MEM	2121:10:65869:65883	1576491	0	True				
ANR	1576546	BitAndExpression	src & SLJIT_MEM		1576491	0		&			
ANR	1576547	Identifier	src		1576491	0					
ANR	1576548	Identifier	SLJIT_MEM		1576491	1					
ANR	1576549	CompoundStatement		6:27:174:174	1576491	1					
ANR	1576550	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw ) )"	2123:2:65942:66005	1576491	0	True				
ANR	1576551	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw ) )"		1576491	0					
ANR	1576552	Callee	FAIL_IF		1576491	0					
ANR	1576553	Identifier	FAIL_IF		1576491	0					
ANR	1576554	ArgumentList	"emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw )"		1576491	1					
ANR	1576555	Argument	"emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw )"		1576491	0					
ANR	1576556	CallExpression	"emit_fop_mem ( compiler , FPU_LOAD , TMP_FREG1 , src , srcw )"		1576491	0					
ANR	1576557	Callee	emit_fop_mem		1576491	0					
ANR	1576558	Identifier	emit_fop_mem		1576491	0					
ANR	1576559	ArgumentList	compiler		1576491	1					
ANR	1576560	Argument	compiler		1576491	0					
ANR	1576561	Identifier	compiler		1576491	0					
ANR	1576562	Argument	FPU_LOAD		1576491	1					
ANR	1576563	Identifier	FPU_LOAD		1576491	0					
ANR	1576564	Argument	TMP_FREG1		1576491	2					
ANR	1576565	Identifier	TMP_FREG1		1576491	0					
ANR	1576566	Argument	src		1576491	3					
ANR	1576567	Identifier	src		1576491	0					
ANR	1576568	Argument	srcw		1576491	4					
ANR	1576569	Identifier	srcw		1576491	0					
ANR	1576570	ElseStatement	else		1576491	0					
ANR	1576571	CompoundStatement		10:6:304:304	1576491	0					
ANR	1576572	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"	2126:2:66020:66069	1576491	0	True				
ANR	1576573	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"		1576491	0					
ANR	1576574	Callee	FAIL_IF		1576491	0					
ANR	1576575	Identifier	FAIL_IF		1576491	0					
ANR	1576576	ArgumentList	"load_immediate ( compiler , TMP_REG1 , srcw )"		1576491	1					
ANR	1576577	Argument	"load_immediate ( compiler , TMP_REG1 , srcw )"		1576491	0					
ANR	1576578	CallExpression	"load_immediate ( compiler , TMP_REG1 , srcw )"		1576491	0					
ANR	1576579	Callee	load_immediate		1576491	0					
ANR	1576580	Identifier	load_immediate		1576491	0					
ANR	1576581	ArgumentList	compiler		1576491	1					
ANR	1576582	Argument	compiler		1576491	0					
ANR	1576583	Identifier	compiler		1576491	0					
ANR	1576584	Argument	TMP_REG1		1576491	1					
ANR	1576585	Identifier	TMP_REG1		1576491	0					
ANR	1576586	Argument	srcw		1576491	2					
ANR	1576587	Identifier	srcw		1576491	0					
ANR	1576588	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , VMOV | RD ( TMP_REG1 ) | ( TMP_FREG1 << 16 ) ) )"	2127:2:66073:66142	1576491	1	True				
ANR	1576589	CallExpression	"FAIL_IF ( push_inst ( compiler , VMOV | RD ( TMP_REG1 ) | ( TMP_FREG1 << 16 ) ) )"		1576491	0					
ANR	1576590	Callee	FAIL_IF		1576491	0					
ANR	1576591	Identifier	FAIL_IF		1576491	0					
ANR	1576592	ArgumentList	"push_inst ( compiler , VMOV | RD ( TMP_REG1 ) | ( TMP_FREG1 << 16 ) )"		1576491	1					
ANR	1576593	Argument	"push_inst ( compiler , VMOV | RD ( TMP_REG1 ) | ( TMP_FREG1 << 16 ) )"		1576491	0					
ANR	1576594	CallExpression	"push_inst ( compiler , VMOV | RD ( TMP_REG1 ) | ( TMP_FREG1 << 16 ) )"		1576491	0					
ANR	1576595	Callee	push_inst		1576491	0					
ANR	1576596	Identifier	push_inst		1576491	0					
ANR	1576597	ArgumentList	compiler		1576491	1					
ANR	1576598	Argument	compiler		1576491	0					
ANR	1576599	Identifier	compiler		1576491	0					
ANR	1576600	Argument	VMOV | RD ( TMP_REG1 ) | ( TMP_FREG1 << 16 )		1576491	1					
ANR	1576601	InclusiveOrExpression	VMOV | RD ( TMP_REG1 ) | ( TMP_FREG1 << 16 )		1576491	0		|			
ANR	1576602	Identifier	VMOV		1576491	0					
ANR	1576603	InclusiveOrExpression	RD ( TMP_REG1 ) | ( TMP_FREG1 << 16 )		1576491	1		|			
ANR	1576604	CallExpression	RD ( TMP_REG1 )		1576491	0					
ANR	1576605	Callee	RD		1576491	0					
ANR	1576606	Identifier	RD		1576491	0					
ANR	1576607	ArgumentList	TMP_REG1		1576491	1					
ANR	1576608	Argument	TMP_REG1		1576491	0					
ANR	1576609	Identifier	TMP_REG1		1576491	0					
ANR	1576610	ShiftExpression	TMP_FREG1 << 16		1576491	1		<<			
ANR	1576611	Identifier	TMP_FREG1		1576491	0					
ANR	1576612	PrimaryExpression	16		1576491	1					
ANR	1576613	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F32_S32 , op & SLJIT_SINGLE_OP , dst_r , TMP_FREG1 , 0 ) ) )"	2130:1:66149:66254	1576491	2	True				
ANR	1576614	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F32_S32 , op & SLJIT_SINGLE_OP , dst_r , TMP_FREG1 , 0 ) ) )"		1576491	0					
ANR	1576615	Callee	FAIL_IF		1576491	0					
ANR	1576616	Identifier	FAIL_IF		1576491	0					
ANR	1576617	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F32_S32 , op & SLJIT_SINGLE_OP , dst_r , TMP_FREG1 , 0 ) )"		1576491	1					
ANR	1576618	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F32_S32 , op & SLJIT_SINGLE_OP , dst_r , TMP_FREG1 , 0 ) )"		1576491	0					
ANR	1576619	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F32_S32 , op & SLJIT_SINGLE_OP , dst_r , TMP_FREG1 , 0 ) )"		1576491	0					
ANR	1576620	Callee	push_inst		1576491	0					
ANR	1576621	Identifier	push_inst		1576491	0					
ANR	1576622	ArgumentList	compiler		1576491	1					
ANR	1576623	Argument	compiler		1576491	0					
ANR	1576624	Identifier	compiler		1576491	0					
ANR	1576625	Argument	"EMIT_FPU_OPERATION ( VCVT_F32_S32 , op & SLJIT_SINGLE_OP , dst_r , TMP_FREG1 , 0 )"		1576491	1					
ANR	1576626	CallExpression	"EMIT_FPU_OPERATION ( VCVT_F32_S32 , op & SLJIT_SINGLE_OP , dst_r , TMP_FREG1 , 0 )"		1576491	0					
ANR	1576627	Callee	EMIT_FPU_OPERATION		1576491	0					
ANR	1576628	Identifier	EMIT_FPU_OPERATION		1576491	0					
ANR	1576629	ArgumentList	VCVT_F32_S32		1576491	1					
ANR	1576630	Argument	VCVT_F32_S32		1576491	0					
ANR	1576631	Identifier	VCVT_F32_S32		1576491	0					
ANR	1576632	Argument	op & SLJIT_SINGLE_OP		1576491	1					
ANR	1576633	BitAndExpression	op & SLJIT_SINGLE_OP		1576491	0		&			
ANR	1576634	Identifier	op		1576491	0					
ANR	1576635	Identifier	SLJIT_SINGLE_OP		1576491	1					
ANR	1576636	Argument	dst_r		1576491	2					
ANR	1576637	Identifier	dst_r		1576491	0					
ANR	1576638	Argument	TMP_FREG1		1576491	3					
ANR	1576639	Identifier	TMP_FREG1		1576491	0					
ANR	1576640	Argument	0		1576491	4					
ANR	1576641	PrimaryExpression	0		1576491	0					
ANR	1576642	IfStatement	if ( dst & SLJIT_MEM )		1576491	3					
ANR	1576643	Condition	dst & SLJIT_MEM	2132:5:66262:66276	1576491	0	True				
ANR	1576644	BitAndExpression	dst & SLJIT_MEM		1576491	0		&			
ANR	1576645	Identifier	dst		1576491	0					
ANR	1576646	Identifier	SLJIT_MEM		1576491	1					
ANR	1576647	ReturnStatement	"return emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw ) ;"	2133:2:66281:66356	1576491	1	True				
ANR	1576648	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw )"		1576491	0					
ANR	1576649	Callee	emit_fop_mem		1576491	0					
ANR	1576650	Identifier	emit_fop_mem		1576491	0					
ANR	1576651	ArgumentList	compiler		1576491	1					
ANR	1576652	Argument	compiler		1576491	0					
ANR	1576653	Identifier	compiler		1576491	0					
ANR	1576654	Argument	op & SLJIT_SINGLE_OP		1576491	1					
ANR	1576655	BitAndExpression	op & SLJIT_SINGLE_OP		1576491	0		&			
ANR	1576656	Identifier	op		1576491	0					
ANR	1576657	Identifier	SLJIT_SINGLE_OP		1576491	1					
ANR	1576658	Argument	TMP_FREG1		1576491	2					
ANR	1576659	Identifier	TMP_FREG1		1576491	0					
ANR	1576660	Argument	dst		1576491	3					
ANR	1576661	Identifier	dst		1576491	0					
ANR	1576662	Argument	dstw		1576491	4					
ANR	1576663	Identifier	dstw		1576491	0					
ANR	1576664	ReturnStatement	return SLJIT_SUCCESS ;	2134:1:66359:66379	1576491	4	True				
ANR	1576665	Identifier	SLJIT_SUCCESS		1576491	0					
ANR	1576666	ReturnType	static SLJIT_INLINE sljit_si		1576491	1					
ANR	1576667	Identifier	sljit_emit_fop1_convd_fromw		1576491	2					
ANR	1576668	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1576491	3					
ANR	1576669	Parameter	struct sljit_compiler * compiler	2113:57:65605:65635	1576491	0	True				
ANR	1576670	ParameterType	struct sljit_compiler *		1576491	0					
ANR	1576671	Identifier	compiler		1576491	1					
ANR	1576672	Parameter	sljit_si op	2113:90:65638:65648	1576491	1	True				
ANR	1576673	ParameterType	sljit_si		1576491	0					
ANR	1576674	Identifier	op		1576491	1					
ANR	1576675	Parameter	sljit_si dst	2114:1:65652:65663	1576491	2	True				
ANR	1576676	ParameterType	sljit_si		1576491	0					
ANR	1576677	Identifier	dst		1576491	1					
ANR	1576678	Parameter	sljit_sw dstw	2114:15:65666:65678	1576491	3	True				
ANR	1576679	ParameterType	sljit_sw		1576491	0					
ANR	1576680	Identifier	dstw		1576491	1					
ANR	1576681	Parameter	sljit_si src	2115:1:65682:65693	1576491	4	True				
ANR	1576682	ParameterType	sljit_si		1576491	0					
ANR	1576683	Identifier	src		1576491	1					
ANR	1576684	Parameter	sljit_sw srcw	2115:15:65696:65708	1576491	5	True				
ANR	1576685	ParameterType	sljit_sw		1576491	0					
ANR	1576686	Identifier	srcw		1576491	1					
ANR	1576687	CFGEntryNode	ENTRY		1576491		True				
ANR	1576688	CFGExitNode	EXIT		1576491		True				
ANR	1576689	Symbol	op		1576491						
ANR	1576690	Symbol	push_inst		1576491						
ANR	1576691	Symbol	TMP_REG1		1576491						
ANR	1576692	Symbol	FAST_IS_REG		1576491						
ANR	1576693	Symbol	dst		1576491						
ANR	1576694	Symbol	VCVT_F32_S32		1576491						
ANR	1576695	Symbol	src		1576491						
ANR	1576696	Symbol	TMP_FREG1		1576491						
ANR	1576697	Symbol	srcw		1576491						
ANR	1576698	Symbol	SLJIT_MEM		1576491						
ANR	1576699	Symbol	SLJIT_SINGLE_OP		1576491						
ANR	1576700	Symbol	SLJIT_SUCCESS		1576491						
ANR	1576701	Symbol	EMIT_FPU_OPERATION		1576491						
ANR	1576702	Symbol	dst_r		1576491						
ANR	1576703	Symbol	RD		1576491						
ANR	1576704	Symbol	load_immediate		1576491						
ANR	1576705	Symbol	FPU_LOAD		1576491						
ANR	1576706	Symbol	emit_fop_mem		1576491						
ANR	1576707	Symbol	VMOV		1576491						
ANR	1576708	Symbol	compiler		1576491						
ANR	1576709	Symbol	dstw		1576491						
ANR	1576710	Function	sljit_emit_fop1_cmp	2137:0:66384:66964							
ANR	1576711	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1576710	0					
ANR	1576712	CompoundStatement		2140:0:66543:66964	1576710	0					
ANR	1576713	IfStatement	if ( src1 & SLJIT_MEM )		1576710	0					
ANR	1576714	Condition	src1 & SLJIT_MEM	2141:5:66550:66565	1576710	0	True				
ANR	1576715	BitAndExpression	src1 & SLJIT_MEM		1576710	0		&			
ANR	1576716	Identifier	src1		1576710	0					
ANR	1576717	Identifier	SLJIT_MEM		1576710	1					
ANR	1576718	CompoundStatement		2:23:24:24	1576710	1					
ANR	1576719	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w ) )"	2142:2:66572:66662	1576710	0	True				
ANR	1576720	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w ) )"		1576710	0					
ANR	1576721	Callee	FAIL_IF		1576710	0					
ANR	1576722	Identifier	FAIL_IF		1576710	0					
ANR	1576723	ArgumentList	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1576710	1					
ANR	1576724	Argument	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1576710	0					
ANR	1576725	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1576710	0					
ANR	1576726	Callee	emit_fop_mem		1576710	0					
ANR	1576727	Identifier	emit_fop_mem		1576710	0					
ANR	1576728	ArgumentList	compiler		1576710	1					
ANR	1576729	Argument	compiler		1576710	0					
ANR	1576730	Identifier	compiler		1576710	0					
ANR	1576731	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1576710	1					
ANR	1576732	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1576710	0		|			
ANR	1576733	BitAndExpression	op & SLJIT_SINGLE_OP		1576710	0		&			
ANR	1576734	Identifier	op		1576710	0					
ANR	1576735	Identifier	SLJIT_SINGLE_OP		1576710	1					
ANR	1576736	Identifier	FPU_LOAD		1576710	1					
ANR	1576737	Argument	TMP_FREG1		1576710	2					
ANR	1576738	Identifier	TMP_FREG1		1576710	0					
ANR	1576739	Argument	src1		1576710	3					
ANR	1576740	Identifier	src1		1576710	0					
ANR	1576741	Argument	src1w		1576710	4					
ANR	1576742	Identifier	src1w		1576710	0					
ANR	1576743	ExpressionStatement	src1 = TMP_FREG1	2143:2:66666:66682	1576710	1	True				
ANR	1576744	AssignmentExpression	src1 = TMP_FREG1		1576710	0		=			
ANR	1576745	Identifier	src1		1576710	0					
ANR	1576746	Identifier	TMP_FREG1		1576710	1					
ANR	1576747	IfStatement	if ( src2 & SLJIT_MEM )		1576710	1					
ANR	1576748	Condition	src2 & SLJIT_MEM	2146:5:66693:66708	1576710	0	True				
ANR	1576749	BitAndExpression	src2 & SLJIT_MEM		1576710	0		&			
ANR	1576750	Identifier	src2		1576710	0					
ANR	1576751	Identifier	SLJIT_MEM		1576710	1					
ANR	1576752	CompoundStatement		7:23:167:167	1576710	1					
ANR	1576753	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w ) )"	2147:2:66715:66805	1576710	0	True				
ANR	1576754	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w ) )"		1576710	0					
ANR	1576755	Callee	FAIL_IF		1576710	0					
ANR	1576756	Identifier	FAIL_IF		1576710	0					
ANR	1576757	ArgumentList	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1576710	1					
ANR	1576758	Argument	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1576710	0					
ANR	1576759	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1576710	0					
ANR	1576760	Callee	emit_fop_mem		1576710	0					
ANR	1576761	Identifier	emit_fop_mem		1576710	0					
ANR	1576762	ArgumentList	compiler		1576710	1					
ANR	1576763	Argument	compiler		1576710	0					
ANR	1576764	Identifier	compiler		1576710	0					
ANR	1576765	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1576710	1					
ANR	1576766	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1576710	0		|			
ANR	1576767	BitAndExpression	op & SLJIT_SINGLE_OP		1576710	0		&			
ANR	1576768	Identifier	op		1576710	0					
ANR	1576769	Identifier	SLJIT_SINGLE_OP		1576710	1					
ANR	1576770	Identifier	FPU_LOAD		1576710	1					
ANR	1576771	Argument	TMP_FREG2		1576710	2					
ANR	1576772	Identifier	TMP_FREG2		1576710	0					
ANR	1576773	Argument	src2		1576710	3					
ANR	1576774	Identifier	src2		1576710	0					
ANR	1576775	Argument	src2w		1576710	4					
ANR	1576776	Identifier	src2w		1576710	0					
ANR	1576777	ExpressionStatement	src2 = TMP_FREG2	2148:2:66809:66825	1576710	1	True				
ANR	1576778	AssignmentExpression	src2 = TMP_FREG2		1576710	0		=			
ANR	1576779	Identifier	src2		1576710	0					
ANR	1576780	Identifier	TMP_FREG2		1576710	1					
ANR	1576781	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VCMP_F32 , op & SLJIT_SINGLE_OP , src1 , src2 , 0 ) ) )"	2151:1:66832:66927	1576710	2	True				
ANR	1576782	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VCMP_F32 , op & SLJIT_SINGLE_OP , src1 , src2 , 0 ) ) )"		1576710	0					
ANR	1576783	Callee	FAIL_IF		1576710	0					
ANR	1576784	Identifier	FAIL_IF		1576710	0					
ANR	1576785	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCMP_F32 , op & SLJIT_SINGLE_OP , src1 , src2 , 0 ) )"		1576710	1					
ANR	1576786	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCMP_F32 , op & SLJIT_SINGLE_OP , src1 , src2 , 0 ) )"		1576710	0					
ANR	1576787	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCMP_F32 , op & SLJIT_SINGLE_OP , src1 , src2 , 0 ) )"		1576710	0					
ANR	1576788	Callee	push_inst		1576710	0					
ANR	1576789	Identifier	push_inst		1576710	0					
ANR	1576790	ArgumentList	compiler		1576710	1					
ANR	1576791	Argument	compiler		1576710	0					
ANR	1576792	Identifier	compiler		1576710	0					
ANR	1576793	Argument	"EMIT_FPU_OPERATION ( VCMP_F32 , op & SLJIT_SINGLE_OP , src1 , src2 , 0 )"		1576710	1					
ANR	1576794	CallExpression	"EMIT_FPU_OPERATION ( VCMP_F32 , op & SLJIT_SINGLE_OP , src1 , src2 , 0 )"		1576710	0					
ANR	1576795	Callee	EMIT_FPU_OPERATION		1576710	0					
ANR	1576796	Identifier	EMIT_FPU_OPERATION		1576710	0					
ANR	1576797	ArgumentList	VCMP_F32		1576710	1					
ANR	1576798	Argument	VCMP_F32		1576710	0					
ANR	1576799	Identifier	VCMP_F32		1576710	0					
ANR	1576800	Argument	op & SLJIT_SINGLE_OP		1576710	1					
ANR	1576801	BitAndExpression	op & SLJIT_SINGLE_OP		1576710	0		&			
ANR	1576802	Identifier	op		1576710	0					
ANR	1576803	Identifier	SLJIT_SINGLE_OP		1576710	1					
ANR	1576804	Argument	src1		1576710	2					
ANR	1576805	Identifier	src1		1576710	0					
ANR	1576806	Argument	src2		1576710	3					
ANR	1576807	Identifier	src2		1576710	0					
ANR	1576808	Argument	0		1576710	4					
ANR	1576809	PrimaryExpression	0		1576710	0					
ANR	1576810	ReturnStatement	"return push_inst ( compiler , VMRS ) ;"	2152:1:66930:66962	1576710	3	True				
ANR	1576811	CallExpression	"push_inst ( compiler , VMRS )"		1576710	0					
ANR	1576812	Callee	push_inst		1576710	0					
ANR	1576813	Identifier	push_inst		1576710	0					
ANR	1576814	ArgumentList	compiler		1576710	1					
ANR	1576815	Argument	compiler		1576710	0					
ANR	1576816	Identifier	compiler		1576710	0					
ANR	1576817	Argument	VMRS		1576710	1					
ANR	1576818	Identifier	VMRS		1576710	0					
ANR	1576819	ReturnType	static SLJIT_INLINE sljit_si		1576710	1					
ANR	1576820	Identifier	sljit_emit_fop1_cmp		1576710	2					
ANR	1576821	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1576710	3					
ANR	1576822	Parameter	struct sljit_compiler * compiler	2137:49:66433:66463	1576710	0	True				
ANR	1576823	ParameterType	struct sljit_compiler *		1576710	0					
ANR	1576824	Identifier	compiler		1576710	1					
ANR	1576825	Parameter	sljit_si op	2137:82:66466:66476	1576710	1	True				
ANR	1576826	ParameterType	sljit_si		1576710	0					
ANR	1576827	Identifier	op		1576710	1					
ANR	1576828	Parameter	sljit_si src1	2138:1:66480:66492	1576710	2	True				
ANR	1576829	ParameterType	sljit_si		1576710	0					
ANR	1576830	Identifier	src1		1576710	1					
ANR	1576831	Parameter	sljit_sw src1w	2138:16:66495:66508	1576710	3	True				
ANR	1576832	ParameterType	sljit_sw		1576710	0					
ANR	1576833	Identifier	src1w		1576710	1					
ANR	1576834	Parameter	sljit_si src2	2139:1:66512:66524	1576710	4	True				
ANR	1576835	ParameterType	sljit_si		1576710	0					
ANR	1576836	Identifier	src2		1576710	1					
ANR	1576837	Parameter	sljit_sw src2w	2139:16:66527:66540	1576710	5	True				
ANR	1576838	ParameterType	sljit_sw		1576710	0					
ANR	1576839	Identifier	src2w		1576710	1					
ANR	1576840	CFGEntryNode	ENTRY		1576710		True				
ANR	1576841	CFGExitNode	EXIT		1576710		True				
ANR	1576842	Symbol	src2w		1576710						
ANR	1576843	Symbol	op		1576710						
ANR	1576844	Symbol	push_inst		1576710						
ANR	1576845	Symbol	TMP_FREG2		1576710						
ANR	1576846	Symbol	src1w		1576710						
ANR	1576847	Symbol	TMP_FREG1		1576710						
ANR	1576848	Symbol	SLJIT_MEM		1576710						
ANR	1576849	Symbol	SLJIT_SINGLE_OP		1576710						
ANR	1576850	Symbol	VCMP_F32		1576710						
ANR	1576851	Symbol	EMIT_FPU_OPERATION		1576710						
ANR	1576852	Symbol	VMRS		1576710						
ANR	1576853	Symbol	FPU_LOAD		1576710						
ANR	1576854	Symbol	emit_fop_mem		1576710						
ANR	1576855	Symbol	src1		1576710						
ANR	1576856	Symbol	src2		1576710						
ANR	1576857	Symbol	compiler		1576710						
ANR	1576858	Function	sljit_emit_fop1	2155:0:66967:68378							
ANR	1576859	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1576858	0					
ANR	1576860	CompoundStatement		2158:0:67123:68378	1576858	0					
ANR	1576861	IdentifierDeclStatement	sljit_si dst_r ;	2159:1:67126:67140	1576858	0	True				
ANR	1576862	IdentifierDecl	dst_r		1576858	0					
ANR	1576863	IdentifierDeclType	sljit_si		1576858	0					
ANR	1576864	Identifier	dst_r		1576858	1					
ANR	1576865	ExpressionStatement	CHECK_ERROR ( )	2161:1:67144:67157	1576858	1	True				
ANR	1576866	CallExpression	CHECK_ERROR ( )		1576858	0					
ANR	1576867	Callee	CHECK_ERROR		1576858	0					
ANR	1576868	Identifier	CHECK_ERROR		1576858	0					
ANR	1576869	ArgumentList			1576858	1					
ANR	1576870	ExpressionStatement	compiler -> cache_arg = 0	2162:1:67160:67183	1576858	2	True				
ANR	1576871	AssignmentExpression	compiler -> cache_arg = 0		1576858	0		=			
ANR	1576872	PtrMemberAccess	compiler -> cache_arg		1576858	0					
ANR	1576873	Identifier	compiler		1576858	0					
ANR	1576874	Identifier	cache_arg		1576858	1					
ANR	1576875	PrimaryExpression	0		1576858	1					
ANR	1576876	ExpressionStatement	compiler -> cache_argw = 0	2163:1:67186:67210	1576858	3	True				
ANR	1576877	AssignmentExpression	compiler -> cache_argw = 0		1576858	0		=			
ANR	1576878	PtrMemberAccess	compiler -> cache_argw		1576858	0					
ANR	1576879	Identifier	compiler		1576858	0					
ANR	1576880	Identifier	cache_argw		1576858	1					
ANR	1576881	PrimaryExpression	0		1576858	1					
ANR	1576882	IfStatement	if ( GET_OPCODE ( op ) != SLJIT_CONVD_FROMS )		1576858	4					
ANR	1576883	Condition	GET_OPCODE ( op ) != SLJIT_CONVD_FROMS	2164:5:67217:67251	1576858	0	True				
ANR	1576884	EqualityExpression	GET_OPCODE ( op ) != SLJIT_CONVD_FROMS		1576858	0		!=			
ANR	1576885	CallExpression	GET_OPCODE ( op )		1576858	0					
ANR	1576886	Callee	GET_OPCODE		1576858	0					
ANR	1576887	Identifier	GET_OPCODE		1576858	0					
ANR	1576888	ArgumentList	op		1576858	1					
ANR	1576889	Argument	op		1576858	0					
ANR	1576890	Identifier	op		1576858	0					
ANR	1576891	Identifier	SLJIT_CONVD_FROMS		1576858	1					
ANR	1576892	ExpressionStatement	op ^= SLJIT_SINGLE_OP	2165:2:67256:67277	1576858	1	True				
ANR	1576893	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1576858	0		^=			
ANR	1576894	Identifier	op		1576858	0					
ANR	1576895	Identifier	SLJIT_SINGLE_OP		1576858	1					
ANR	1576896	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) , float_transfer_bit_error )"	2167:1:67281:67355	1576858	5	True				
ANR	1576897	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) , float_transfer_bit_error )"		1576858	0					
ANR	1576898	Callee	SLJIT_COMPILE_ASSERT		1576858	0					
ANR	1576899	Identifier	SLJIT_COMPILE_ASSERT		1576858	0					
ANR	1576900	ArgumentList	SLJIT_SINGLE_OP == 0x100		1576858	1					
ANR	1576901	Argument	SLJIT_SINGLE_OP == 0x100		1576858	0					
ANR	1576902	EqualityExpression	SLJIT_SINGLE_OP == 0x100		1576858	0		==			
ANR	1576903	Identifier	SLJIT_SINGLE_OP		1576858	0					
ANR	1576904	PrimaryExpression	0x100		1576858	1					
ANR	1576905	Argument	float_transfer_bit_error		1576858	1					
ANR	1576906	Identifier	float_transfer_bit_error		1576858	0					
ANR	1576907	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	2168:1:67358:67427	1576858	6	True				
ANR	1576908	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1576858	0					
ANR	1576909	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1576858	0					
ANR	1576910	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1576858	0					
ANR	1576911	ArgumentList	compiler		1576858	1					
ANR	1576912	Argument	compiler		1576858	0					
ANR	1576913	Identifier	compiler		1576858	0					
ANR	1576914	Argument	op		1576858	1					
ANR	1576915	Identifier	op		1576858	0					
ANR	1576916	Argument	dst		1576858	2					
ANR	1576917	Identifier	dst		1576858	0					
ANR	1576918	Argument	dstw		1576858	3					
ANR	1576919	Identifier	dstw		1576858	0					
ANR	1576920	Argument	src		1576858	4					
ANR	1576921	Identifier	src		1576858	0					
ANR	1576922	Argument	srcw		1576858	5					
ANR	1576923	Identifier	srcw		1576858	0					
ANR	1576924	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	2170:1:67431:67473	1576858	7	True				
ANR	1576925	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1576858	0		=			
ANR	1576926	Identifier	dst_r		1576858	0					
ANR	1576927	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1576858	1					
ANR	1576928	Condition	FAST_IS_REG ( dst )		1576858	0					
ANR	1576929	CallExpression	FAST_IS_REG ( dst )		1576858	0					
ANR	1576930	Callee	FAST_IS_REG		1576858	0					
ANR	1576931	Identifier	FAST_IS_REG		1576858	0					
ANR	1576932	ArgumentList	dst		1576858	1					
ANR	1576933	Argument	dst		1576858	0					
ANR	1576934	Identifier	dst		1576858	0					
ANR	1576935	Identifier	dst		1576858	1					
ANR	1576936	Identifier	TMP_FREG1		1576858	2					
ANR	1576937	IfStatement	if ( src & SLJIT_MEM )		1576858	8					
ANR	1576938	Condition	src & SLJIT_MEM	2172:5:67481:67495	1576858	0	True				
ANR	1576939	BitAndExpression	src & SLJIT_MEM		1576858	0		&			
ANR	1576940	Identifier	src		1576858	0					
ANR	1576941	Identifier	SLJIT_MEM		1576858	1					
ANR	1576942	CompoundStatement		15:22:374:374	1576858	1					
ANR	1576943	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , dst_r , src , srcw ) )"	2173:2:67502:67586	1576858	0	True				
ANR	1576944	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , dst_r , src , srcw ) )"		1576858	0					
ANR	1576945	Callee	FAIL_IF		1576858	0					
ANR	1576946	Identifier	FAIL_IF		1576858	0					
ANR	1576947	ArgumentList	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , dst_r , src , srcw )"		1576858	1					
ANR	1576948	Argument	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , dst_r , src , srcw )"		1576858	0					
ANR	1576949	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , dst_r , src , srcw )"		1576858	0					
ANR	1576950	Callee	emit_fop_mem		1576858	0					
ANR	1576951	Identifier	emit_fop_mem		1576858	0					
ANR	1576952	ArgumentList	compiler		1576858	1					
ANR	1576953	Argument	compiler		1576858	0					
ANR	1576954	Identifier	compiler		1576858	0					
ANR	1576955	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1576858	1					
ANR	1576956	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1576858	0		|			
ANR	1576957	BitAndExpression	op & SLJIT_SINGLE_OP		1576858	0		&			
ANR	1576958	Identifier	op		1576858	0					
ANR	1576959	Identifier	SLJIT_SINGLE_OP		1576858	1					
ANR	1576960	Identifier	FPU_LOAD		1576858	1					
ANR	1576961	Argument	dst_r		1576858	2					
ANR	1576962	Identifier	dst_r		1576858	0					
ANR	1576963	Argument	src		1576858	3					
ANR	1576964	Identifier	src		1576858	0					
ANR	1576965	Argument	srcw		1576858	4					
ANR	1576966	Identifier	srcw		1576858	0					
ANR	1576967	ExpressionStatement	src = dst_r	2174:2:67590:67601	1576858	1	True				
ANR	1576968	AssignmentExpression	src = dst_r		1576858	0		=			
ANR	1576969	Identifier	src		1576858	0					
ANR	1576970	Identifier	dst_r		1576858	1					
ANR	1576971	SwitchStatement	switch ( GET_OPCODE ( op ) )		1576858	9					
ANR	1576972	Condition	GET_OPCODE ( op )	2177:9:67616:67629	1576858	0	True				
ANR	1576973	CallExpression	GET_OPCODE ( op )		1576858	0					
ANR	1576974	Callee	GET_OPCODE		1576858	0					
ANR	1576975	Identifier	GET_OPCODE		1576858	0					
ANR	1576976	ArgumentList	op		1576858	1					
ANR	1576977	Argument	op		1576858	0					
ANR	1576978	Identifier	op		1576858	0					
ANR	1576979	CompoundStatement		20:25:508:508	1576858	1					
ANR	1576980	Label	case SLJIT_DMOV :	2178:1:67635:67650	1576858	0	True				
ANR	1576981	Identifier	SLJIT_DMOV		1576858	0					
ANR	1576982	IfStatement	if ( src != dst_r )		1576858	1					
ANR	1576983	Condition	src != dst_r	2179:6:67658:67669	1576858	0	True				
ANR	1576984	EqualityExpression	src != dst_r		1576858	0		!=			
ANR	1576985	Identifier	src		1576858	0					
ANR	1576986	Identifier	dst_r		1576858	1					
ANR	1576987	CompoundStatement		22:20:548:548	1576858	1					
ANR	1576988	IfStatement	if ( dst_r != TMP_FREG1 )		1576858	0					
ANR	1576989	Condition	dst_r != TMP_FREG1	2180:7:67681:67698	1576858	0	True				
ANR	1576990	EqualityExpression	dst_r != TMP_FREG1		1576858	0		!=			
ANR	1576991	Identifier	dst_r		1576858	0					
ANR	1576992	Identifier	TMP_FREG1		1576858	1					
ANR	1576993	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VMOV_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) ) )"	2181:4:67705:67800	1576858	1	True				
ANR	1576994	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VMOV_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) ) )"		1576858	0					
ANR	1576995	Callee	FAIL_IF		1576858	0					
ANR	1576996	Identifier	FAIL_IF		1576858	0					
ANR	1576997	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VMOV_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	1					
ANR	1576998	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VMOV_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	0					
ANR	1576999	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VMOV_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	0					
ANR	1577000	Callee	push_inst		1576858	0					
ANR	1577001	Identifier	push_inst		1576858	0					
ANR	1577002	ArgumentList	compiler		1576858	1					
ANR	1577003	Argument	compiler		1576858	0					
ANR	1577004	Identifier	compiler		1576858	0					
ANR	1577005	Argument	"EMIT_FPU_OPERATION ( VMOV_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1576858	1					
ANR	1577006	CallExpression	"EMIT_FPU_OPERATION ( VMOV_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1576858	0					
ANR	1577007	Callee	EMIT_FPU_OPERATION		1576858	0					
ANR	1577008	Identifier	EMIT_FPU_OPERATION		1576858	0					
ANR	1577009	ArgumentList	VMOV_F32		1576858	1					
ANR	1577010	Argument	VMOV_F32		1576858	0					
ANR	1577011	Identifier	VMOV_F32		1576858	0					
ANR	1577012	Argument	op & SLJIT_SINGLE_OP		1576858	1					
ANR	1577013	BitAndExpression	op & SLJIT_SINGLE_OP		1576858	0		&			
ANR	1577014	Identifier	op		1576858	0					
ANR	1577015	Identifier	SLJIT_SINGLE_OP		1576858	1					
ANR	1577016	Argument	dst_r		1576858	2					
ANR	1577017	Identifier	dst_r		1576858	0					
ANR	1577018	Argument	src		1576858	3					
ANR	1577019	Identifier	src		1576858	0					
ANR	1577020	Argument	0		1576858	4					
ANR	1577021	PrimaryExpression	0		1576858	0					
ANR	1577022	ElseStatement	else		1576858	0					
ANR	1577023	ExpressionStatement	dst_r = src	2183:4:67814:67825	1576858	0	True				
ANR	1577024	AssignmentExpression	dst_r = src		1576858	0		=			
ANR	1577025	Identifier	dst_r		1576858	0					
ANR	1577026	Identifier	src		1576858	1					
ANR	1577027	BreakStatement	break ;	2185:2:67833:67838	1576858	2	True				
ANR	1577028	Label	case SLJIT_DNEG :	2186:1:67841:67856	1576858	3	True				
ANR	1577029	Identifier	SLJIT_DNEG		1576858	0					
ANR	1577030	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VNEG_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) ) )"	2187:2:67860:67955	1576858	4	True				
ANR	1577031	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VNEG_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) ) )"		1576858	0					
ANR	1577032	Callee	FAIL_IF		1576858	0					
ANR	1577033	Identifier	FAIL_IF		1576858	0					
ANR	1577034	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VNEG_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	1					
ANR	1577035	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VNEG_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	0					
ANR	1577036	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VNEG_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	0					
ANR	1577037	Callee	push_inst		1576858	0					
ANR	1577038	Identifier	push_inst		1576858	0					
ANR	1577039	ArgumentList	compiler		1576858	1					
ANR	1577040	Argument	compiler		1576858	0					
ANR	1577041	Identifier	compiler		1576858	0					
ANR	1577042	Argument	"EMIT_FPU_OPERATION ( VNEG_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1576858	1					
ANR	1577043	CallExpression	"EMIT_FPU_OPERATION ( VNEG_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1576858	0					
ANR	1577044	Callee	EMIT_FPU_OPERATION		1576858	0					
ANR	1577045	Identifier	EMIT_FPU_OPERATION		1576858	0					
ANR	1577046	ArgumentList	VNEG_F32		1576858	1					
ANR	1577047	Argument	VNEG_F32		1576858	0					
ANR	1577048	Identifier	VNEG_F32		1576858	0					
ANR	1577049	Argument	op & SLJIT_SINGLE_OP		1576858	1					
ANR	1577050	BitAndExpression	op & SLJIT_SINGLE_OP		1576858	0		&			
ANR	1577051	Identifier	op		1576858	0					
ANR	1577052	Identifier	SLJIT_SINGLE_OP		1576858	1					
ANR	1577053	Argument	dst_r		1576858	2					
ANR	1577054	Identifier	dst_r		1576858	0					
ANR	1577055	Argument	src		1576858	3					
ANR	1577056	Identifier	src		1576858	0					
ANR	1577057	Argument	0		1576858	4					
ANR	1577058	PrimaryExpression	0		1576858	0					
ANR	1577059	BreakStatement	break ;	2188:2:67959:67964	1576858	5	True				
ANR	1577060	Label	case SLJIT_DABS :	2189:1:67967:67982	1576858	6	True				
ANR	1577061	Identifier	SLJIT_DABS		1576858	0					
ANR	1577062	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VABS_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) ) )"	2190:2:67986:68081	1576858	7	True				
ANR	1577063	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VABS_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) ) )"		1576858	0					
ANR	1577064	Callee	FAIL_IF		1576858	0					
ANR	1577065	Identifier	FAIL_IF		1576858	0					
ANR	1577066	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VABS_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	1					
ANR	1577067	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VABS_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	0					
ANR	1577068	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VABS_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	0					
ANR	1577069	Callee	push_inst		1576858	0					
ANR	1577070	Identifier	push_inst		1576858	0					
ANR	1577071	ArgumentList	compiler		1576858	1					
ANR	1577072	Argument	compiler		1576858	0					
ANR	1577073	Identifier	compiler		1576858	0					
ANR	1577074	Argument	"EMIT_FPU_OPERATION ( VABS_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1576858	1					
ANR	1577075	CallExpression	"EMIT_FPU_OPERATION ( VABS_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1576858	0					
ANR	1577076	Callee	EMIT_FPU_OPERATION		1576858	0					
ANR	1577077	Identifier	EMIT_FPU_OPERATION		1576858	0					
ANR	1577078	ArgumentList	VABS_F32		1576858	1					
ANR	1577079	Argument	VABS_F32		1576858	0					
ANR	1577080	Identifier	VABS_F32		1576858	0					
ANR	1577081	Argument	op & SLJIT_SINGLE_OP		1576858	1					
ANR	1577082	BitAndExpression	op & SLJIT_SINGLE_OP		1576858	0		&			
ANR	1577083	Identifier	op		1576858	0					
ANR	1577084	Identifier	SLJIT_SINGLE_OP		1576858	1					
ANR	1577085	Argument	dst_r		1576858	2					
ANR	1577086	Identifier	dst_r		1576858	0					
ANR	1577087	Argument	src		1576858	3					
ANR	1577088	Identifier	src		1576858	0					
ANR	1577089	Argument	0		1576858	4					
ANR	1577090	PrimaryExpression	0		1576858	0					
ANR	1577091	BreakStatement	break ;	2191:2:68085:68090	1576858	8	True				
ANR	1577092	Label	case SLJIT_CONVD_FROMS :	2192:1:68093:68115	1576858	9	True				
ANR	1577093	Identifier	SLJIT_CONVD_FROMS		1576858	0					
ANR	1577094	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F64_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) ) )"	2193:2:68119:68218	1576858	10	True				
ANR	1577095	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F64_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) ) )"		1576858	0					
ANR	1577096	Callee	FAIL_IF		1576858	0					
ANR	1577097	Identifier	FAIL_IF		1576858	0					
ANR	1577098	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F64_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	1					
ANR	1577099	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F64_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	0					
ANR	1577100	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VCVT_F64_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 ) )"		1576858	0					
ANR	1577101	Callee	push_inst		1576858	0					
ANR	1577102	Identifier	push_inst		1576858	0					
ANR	1577103	ArgumentList	compiler		1576858	1					
ANR	1577104	Argument	compiler		1576858	0					
ANR	1577105	Identifier	compiler		1576858	0					
ANR	1577106	Argument	"EMIT_FPU_OPERATION ( VCVT_F64_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1576858	1					
ANR	1577107	CallExpression	"EMIT_FPU_OPERATION ( VCVT_F64_F32 , op & SLJIT_SINGLE_OP , dst_r , src , 0 )"		1576858	0					
ANR	1577108	Callee	EMIT_FPU_OPERATION		1576858	0					
ANR	1577109	Identifier	EMIT_FPU_OPERATION		1576858	0					
ANR	1577110	ArgumentList	VCVT_F64_F32		1576858	1					
ANR	1577111	Argument	VCVT_F64_F32		1576858	0					
ANR	1577112	Identifier	VCVT_F64_F32		1576858	0					
ANR	1577113	Argument	op & SLJIT_SINGLE_OP		1576858	1					
ANR	1577114	BitAndExpression	op & SLJIT_SINGLE_OP		1576858	0		&			
ANR	1577115	Identifier	op		1576858	0					
ANR	1577116	Identifier	SLJIT_SINGLE_OP		1576858	1					
ANR	1577117	Argument	dst_r		1576858	2					
ANR	1577118	Identifier	dst_r		1576858	0					
ANR	1577119	Argument	src		1576858	3					
ANR	1577120	Identifier	src		1576858	0					
ANR	1577121	Argument	0		1576858	4					
ANR	1577122	PrimaryExpression	0		1576858	0					
ANR	1577123	ExpressionStatement	op ^= SLJIT_SINGLE_OP	2194:2:68222:68243	1576858	11	True				
ANR	1577124	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1576858	0		^=			
ANR	1577125	Identifier	op		1576858	0					
ANR	1577126	Identifier	SLJIT_SINGLE_OP		1576858	1					
ANR	1577127	BreakStatement	break ;	2195:2:68247:68252	1576858	12	True				
ANR	1577128	IfStatement	if ( dst & SLJIT_MEM )		1576858	10					
ANR	1577129	Condition	dst & SLJIT_MEM	2198:5:68263:68277	1576858	0	True				
ANR	1577130	BitAndExpression	dst & SLJIT_MEM		1576858	0		&			
ANR	1577131	Identifier	dst		1576858	0					
ANR	1577132	Identifier	SLJIT_MEM		1576858	1					
ANR	1577133	ReturnStatement	"return emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , dst_r , dst , dstw ) ;"	2199:2:68282:68353	1576858	1	True				
ANR	1577134	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , dst_r , dst , dstw )"		1576858	0					
ANR	1577135	Callee	emit_fop_mem		1576858	0					
ANR	1577136	Identifier	emit_fop_mem		1576858	0					
ANR	1577137	ArgumentList	compiler		1576858	1					
ANR	1577138	Argument	compiler		1576858	0					
ANR	1577139	Identifier	compiler		1576858	0					
ANR	1577140	Argument	op & SLJIT_SINGLE_OP		1576858	1					
ANR	1577141	BitAndExpression	op & SLJIT_SINGLE_OP		1576858	0		&			
ANR	1577142	Identifier	op		1576858	0					
ANR	1577143	Identifier	SLJIT_SINGLE_OP		1576858	1					
ANR	1577144	Argument	dst_r		1576858	2					
ANR	1577145	Identifier	dst_r		1576858	0					
ANR	1577146	Argument	dst		1576858	3					
ANR	1577147	Identifier	dst		1576858	0					
ANR	1577148	Argument	dstw		1576858	4					
ANR	1577149	Identifier	dstw		1576858	0					
ANR	1577150	ReturnStatement	return SLJIT_SUCCESS ;	2200:1:68356:68376	1576858	11	True				
ANR	1577151	Identifier	SLJIT_SUCCESS		1576858	0					
ANR	1577152	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1576858	1					
ANR	1577153	Identifier	sljit_emit_fop1		1576858	2					
ANR	1577154	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1576858	3					
ANR	1577155	Parameter	struct sljit_compiler * compiler	2155:50:67017:67047	1576858	0	True				
ANR	1577156	ParameterType	struct sljit_compiler *		1576858	0					
ANR	1577157	Identifier	compiler		1576858	1					
ANR	1577158	Parameter	sljit_si op	2155:83:67050:67060	1576858	1	True				
ANR	1577159	ParameterType	sljit_si		1576858	0					
ANR	1577160	Identifier	op		1576858	1					
ANR	1577161	Parameter	sljit_si dst	2156:1:67064:67075	1576858	2	True				
ANR	1577162	ParameterType	sljit_si		1576858	0					
ANR	1577163	Identifier	dst		1576858	1					
ANR	1577164	Parameter	sljit_sw dstw	2156:15:67078:67090	1576858	3	True				
ANR	1577165	ParameterType	sljit_sw		1576858	0					
ANR	1577166	Identifier	dstw		1576858	1					
ANR	1577167	Parameter	sljit_si src	2157:1:67094:67105	1576858	4	True				
ANR	1577168	ParameterType	sljit_si		1576858	0					
ANR	1577169	Identifier	src		1576858	1					
ANR	1577170	Parameter	sljit_sw srcw	2157:15:67108:67120	1576858	5	True				
ANR	1577171	ParameterType	sljit_sw		1576858	0					
ANR	1577172	Identifier	srcw		1576858	1					
ANR	1577173	CFGEntryNode	ENTRY		1576858		True				
ANR	1577174	CFGExitNode	EXIT		1576858		True				
ANR	1577175	Symbol	compiler -> cache_argw		1576858						
ANR	1577176	Symbol	dst		1576858						
ANR	1577177	Symbol	TMP_FREG1		1576858						
ANR	1577178	Symbol	SLJIT_MEM		1576858						
ANR	1577179	Symbol	SLJIT_CONVD_FROMS		1576858						
ANR	1577180	Symbol	* compiler		1576858						
ANR	1577181	Symbol	VCVT_F64_F32		1576858						
ANR	1577182	Symbol	dst_r		1576858						
ANR	1577183	Symbol	GET_OPCODE		1576858						
ANR	1577184	Symbol	emit_fop_mem		1576858						
ANR	1577185	Symbol	VABS_F32		1576858						
ANR	1577186	Symbol	float_transfer_bit_error		1576858						
ANR	1577187	Symbol	compiler		1576858						
ANR	1577188	Symbol	VNEG_F32		1576858						
ANR	1577189	Symbol	VMOV_F32		1576858						
ANR	1577190	Symbol	op		1576858						
ANR	1577191	Symbol	push_inst		1576858						
ANR	1577192	Symbol	FAST_IS_REG		1576858						
ANR	1577193	Symbol	src		1576858						
ANR	1577194	Symbol	srcw		1576858						
ANR	1577195	Symbol	compiler -> cache_arg		1576858						
ANR	1577196	Symbol	SLJIT_SINGLE_OP		1576858						
ANR	1577197	Symbol	SLJIT_SUCCESS		1576858						
ANR	1577198	Symbol	EMIT_FPU_OPERATION		1576858						
ANR	1577199	Symbol	FPU_LOAD		1576858						
ANR	1577200	Symbol	dstw		1576858						
ANR	1577201	Function	sljit_emit_fop2	2203:0:68381:69887							
ANR	1577202	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1577201	0					
ANR	1577203	CompoundStatement		2207:0:68571:69887	1577201	0					
ANR	1577204	IdentifierDeclStatement	sljit_si dst_r ;	2208:1:68574:68588	1577201	0	True				
ANR	1577205	IdentifierDecl	dst_r		1577201	0					
ANR	1577206	IdentifierDeclType	sljit_si		1577201	0					
ANR	1577207	Identifier	dst_r		1577201	1					
ANR	1577208	ExpressionStatement	CHECK_ERROR ( )	2210:1:68592:68605	1577201	1	True				
ANR	1577209	CallExpression	CHECK_ERROR ( )		1577201	0					
ANR	1577210	Callee	CHECK_ERROR		1577201	0					
ANR	1577211	Identifier	CHECK_ERROR		1577201	0					
ANR	1577212	ArgumentList			1577201	1					
ANR	1577213	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	2211:1:68608:68687	1577201	2	True				
ANR	1577214	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1577201	0					
ANR	1577215	Callee	CHECK		1577201	0					
ANR	1577216	Identifier	CHECK		1577201	0					
ANR	1577217	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1577201	1					
ANR	1577218	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1577201	0					
ANR	1577219	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1577201	0					
ANR	1577220	Callee	check_sljit_emit_fop2		1577201	0					
ANR	1577221	Identifier	check_sljit_emit_fop2		1577201	0					
ANR	1577222	ArgumentList	compiler		1577201	1					
ANR	1577223	Argument	compiler		1577201	0					
ANR	1577224	Identifier	compiler		1577201	0					
ANR	1577225	Argument	op		1577201	1					
ANR	1577226	Identifier	op		1577201	0					
ANR	1577227	Argument	dst		1577201	2					
ANR	1577228	Identifier	dst		1577201	0					
ANR	1577229	Argument	dstw		1577201	3					
ANR	1577230	Identifier	dstw		1577201	0					
ANR	1577231	Argument	src1		1577201	4					
ANR	1577232	Identifier	src1		1577201	0					
ANR	1577233	Argument	src1w		1577201	5					
ANR	1577234	Identifier	src1w		1577201	0					
ANR	1577235	Argument	src2		1577201	6					
ANR	1577236	Identifier	src2		1577201	0					
ANR	1577237	Argument	src2w		1577201	7					
ANR	1577238	Identifier	src2w		1577201	0					
ANR	1577239	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2212:1:68690:68720	1577201	3	True				
ANR	1577240	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1577201	0					
ANR	1577241	Callee	ADJUST_LOCAL_OFFSET		1577201	0					
ANR	1577242	Identifier	ADJUST_LOCAL_OFFSET		1577201	0					
ANR	1577243	ArgumentList	dst		1577201	1					
ANR	1577244	Argument	dst		1577201	0					
ANR	1577245	Identifier	dst		1577201	0					
ANR	1577246	Argument	dstw		1577201	1					
ANR	1577247	Identifier	dstw		1577201	0					
ANR	1577248	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	2213:1:68723:68755	1577201	4	True				
ANR	1577249	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1577201	0					
ANR	1577250	Callee	ADJUST_LOCAL_OFFSET		1577201	0					
ANR	1577251	Identifier	ADJUST_LOCAL_OFFSET		1577201	0					
ANR	1577252	ArgumentList	src1		1577201	1					
ANR	1577253	Argument	src1		1577201	0					
ANR	1577254	Identifier	src1		1577201	0					
ANR	1577255	Argument	src1w		1577201	1					
ANR	1577256	Identifier	src1w		1577201	0					
ANR	1577257	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	2214:1:68758:68790	1577201	5	True				
ANR	1577258	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1577201	0					
ANR	1577259	Callee	ADJUST_LOCAL_OFFSET		1577201	0					
ANR	1577260	Identifier	ADJUST_LOCAL_OFFSET		1577201	0					
ANR	1577261	ArgumentList	src2		1577201	1					
ANR	1577262	Argument	src2		1577201	0					
ANR	1577263	Identifier	src2		1577201	0					
ANR	1577264	Argument	src2w		1577201	1					
ANR	1577265	Identifier	src2w		1577201	0					
ANR	1577266	ExpressionStatement	compiler -> cache_arg = 0	2216:1:68794:68817	1577201	6	True				
ANR	1577267	AssignmentExpression	compiler -> cache_arg = 0		1577201	0		=			
ANR	1577268	PtrMemberAccess	compiler -> cache_arg		1577201	0					
ANR	1577269	Identifier	compiler		1577201	0					
ANR	1577270	Identifier	cache_arg		1577201	1					
ANR	1577271	PrimaryExpression	0		1577201	1					
ANR	1577272	ExpressionStatement	compiler -> cache_argw = 0	2217:1:68820:68844	1577201	7	True				
ANR	1577273	AssignmentExpression	compiler -> cache_argw = 0		1577201	0		=			
ANR	1577274	PtrMemberAccess	compiler -> cache_argw		1577201	0					
ANR	1577275	Identifier	compiler		1577201	0					
ANR	1577276	Identifier	cache_argw		1577201	1					
ANR	1577277	PrimaryExpression	0		1577201	1					
ANR	1577278	ExpressionStatement	op ^= SLJIT_SINGLE_OP	2218:1:68847:68868	1577201	8	True				
ANR	1577279	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1577201	0		^=			
ANR	1577280	Identifier	op		1577201	0					
ANR	1577281	Identifier	SLJIT_SINGLE_OP		1577201	1					
ANR	1577282	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	2220:1:68872:68914	1577201	9	True				
ANR	1577283	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1577201	0		=			
ANR	1577284	Identifier	dst_r		1577201	0					
ANR	1577285	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1577201	1					
ANR	1577286	Condition	FAST_IS_REG ( dst )		1577201	0					
ANR	1577287	CallExpression	FAST_IS_REG ( dst )		1577201	0					
ANR	1577288	Callee	FAST_IS_REG		1577201	0					
ANR	1577289	Identifier	FAST_IS_REG		1577201	0					
ANR	1577290	ArgumentList	dst		1577201	1					
ANR	1577291	Argument	dst		1577201	0					
ANR	1577292	Identifier	dst		1577201	0					
ANR	1577293	Identifier	dst		1577201	1					
ANR	1577294	Identifier	TMP_FREG1		1577201	2					
ANR	1577295	IfStatement	if ( src2 & SLJIT_MEM )		1577201	10					
ANR	1577296	Condition	src2 & SLJIT_MEM	2222:5:68922:68937	1577201	0	True				
ANR	1577297	BitAndExpression	src2 & SLJIT_MEM		1577201	0		&			
ANR	1577298	Identifier	src2		1577201	0					
ANR	1577299	Identifier	SLJIT_MEM		1577201	1					
ANR	1577300	CompoundStatement		16:23:368:368	1577201	1					
ANR	1577301	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w ) )"	2223:2:68944:69034	1577201	0	True				
ANR	1577302	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w ) )"		1577201	0					
ANR	1577303	Callee	FAIL_IF		1577201	0					
ANR	1577304	Identifier	FAIL_IF		1577201	0					
ANR	1577305	ArgumentList	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1577201	1					
ANR	1577306	Argument	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1577201	0					
ANR	1577307	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG2 , src2 , src2w )"		1577201	0					
ANR	1577308	Callee	emit_fop_mem		1577201	0					
ANR	1577309	Identifier	emit_fop_mem		1577201	0					
ANR	1577310	ArgumentList	compiler		1577201	1					
ANR	1577311	Argument	compiler		1577201	0					
ANR	1577312	Identifier	compiler		1577201	0					
ANR	1577313	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1577201	1					
ANR	1577314	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1577201	0		|			
ANR	1577315	BitAndExpression	op & SLJIT_SINGLE_OP		1577201	0		&			
ANR	1577316	Identifier	op		1577201	0					
ANR	1577317	Identifier	SLJIT_SINGLE_OP		1577201	1					
ANR	1577318	Identifier	FPU_LOAD		1577201	1					
ANR	1577319	Argument	TMP_FREG2		1577201	2					
ANR	1577320	Identifier	TMP_FREG2		1577201	0					
ANR	1577321	Argument	src2		1577201	3					
ANR	1577322	Identifier	src2		1577201	0					
ANR	1577323	Argument	src2w		1577201	4					
ANR	1577324	Identifier	src2w		1577201	0					
ANR	1577325	ExpressionStatement	src2 = TMP_FREG2	2224:2:69038:69054	1577201	1	True				
ANR	1577326	AssignmentExpression	src2 = TMP_FREG2		1577201	0		=			
ANR	1577327	Identifier	src2		1577201	0					
ANR	1577328	Identifier	TMP_FREG2		1577201	1					
ANR	1577329	IfStatement	if ( src1 & SLJIT_MEM )		1577201	11					
ANR	1577330	Condition	src1 & SLJIT_MEM	2227:5:69065:69080	1577201	0	True				
ANR	1577331	BitAndExpression	src1 & SLJIT_MEM		1577201	0		&			
ANR	1577332	Identifier	src1		1577201	0					
ANR	1577333	Identifier	SLJIT_MEM		1577201	1					
ANR	1577334	CompoundStatement		21:23:511:511	1577201	1					
ANR	1577335	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w ) )"	2228:2:69087:69177	1577201	0	True				
ANR	1577336	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w ) )"		1577201	0					
ANR	1577337	Callee	FAIL_IF		1577201	0					
ANR	1577338	Identifier	FAIL_IF		1577201	0					
ANR	1577339	ArgumentList	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1577201	1					
ANR	1577340	Argument	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1577201	0					
ANR	1577341	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) | FPU_LOAD , TMP_FREG1 , src1 , src1w )"		1577201	0					
ANR	1577342	Callee	emit_fop_mem		1577201	0					
ANR	1577343	Identifier	emit_fop_mem		1577201	0					
ANR	1577344	ArgumentList	compiler		1577201	1					
ANR	1577345	Argument	compiler		1577201	0					
ANR	1577346	Identifier	compiler		1577201	0					
ANR	1577347	Argument	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1577201	1					
ANR	1577348	InclusiveOrExpression	( op & SLJIT_SINGLE_OP ) | FPU_LOAD		1577201	0		|			
ANR	1577349	BitAndExpression	op & SLJIT_SINGLE_OP		1577201	0		&			
ANR	1577350	Identifier	op		1577201	0					
ANR	1577351	Identifier	SLJIT_SINGLE_OP		1577201	1					
ANR	1577352	Identifier	FPU_LOAD		1577201	1					
ANR	1577353	Argument	TMP_FREG1		1577201	2					
ANR	1577354	Identifier	TMP_FREG1		1577201	0					
ANR	1577355	Argument	src1		1577201	3					
ANR	1577356	Identifier	src1		1577201	0					
ANR	1577357	Argument	src1w		1577201	4					
ANR	1577358	Identifier	src1w		1577201	0					
ANR	1577359	ExpressionStatement	src1 = TMP_FREG1	2229:2:69181:69197	1577201	1	True				
ANR	1577360	AssignmentExpression	src1 = TMP_FREG1		1577201	0		=			
ANR	1577361	Identifier	src1		1577201	0					
ANR	1577362	Identifier	TMP_FREG1		1577201	1					
ANR	1577363	SwitchStatement	switch ( GET_OPCODE ( op ) )		1577201	12					
ANR	1577364	Condition	GET_OPCODE ( op )	2232:9:69212:69225	1577201	0	True				
ANR	1577365	CallExpression	GET_OPCODE ( op )		1577201	0					
ANR	1577366	Callee	GET_OPCODE		1577201	0					
ANR	1577367	Identifier	GET_OPCODE		1577201	0					
ANR	1577368	ArgumentList	op		1577201	1					
ANR	1577369	Argument	op		1577201	0					
ANR	1577370	Identifier	op		1577201	0					
ANR	1577371	CompoundStatement		26:25:656:656	1577201	1					
ANR	1577372	Label	case SLJIT_DADD :	2233:1:69231:69246	1577201	0	True				
ANR	1577373	Identifier	SLJIT_DADD		1577201	0					
ANR	1577374	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VADD_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) ) )"	2234:2:69250:69349	1577201	1	True				
ANR	1577375	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VADD_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) ) )"		1577201	0					
ANR	1577376	Callee	FAIL_IF		1577201	0					
ANR	1577377	Identifier	FAIL_IF		1577201	0					
ANR	1577378	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VADD_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	1					
ANR	1577379	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VADD_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	0					
ANR	1577380	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VADD_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	0					
ANR	1577381	Callee	push_inst		1577201	0					
ANR	1577382	Identifier	push_inst		1577201	0					
ANR	1577383	ArgumentList	compiler		1577201	1					
ANR	1577384	Argument	compiler		1577201	0					
ANR	1577385	Identifier	compiler		1577201	0					
ANR	1577386	Argument	"EMIT_FPU_OPERATION ( VADD_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 )"		1577201	1					
ANR	1577387	CallExpression	"EMIT_FPU_OPERATION ( VADD_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 )"		1577201	0					
ANR	1577388	Callee	EMIT_FPU_OPERATION		1577201	0					
ANR	1577389	Identifier	EMIT_FPU_OPERATION		1577201	0					
ANR	1577390	ArgumentList	VADD_F32		1577201	1					
ANR	1577391	Argument	VADD_F32		1577201	0					
ANR	1577392	Identifier	VADD_F32		1577201	0					
ANR	1577393	Argument	op & SLJIT_SINGLE_OP		1577201	1					
ANR	1577394	BitAndExpression	op & SLJIT_SINGLE_OP		1577201	0		&			
ANR	1577395	Identifier	op		1577201	0					
ANR	1577396	Identifier	SLJIT_SINGLE_OP		1577201	1					
ANR	1577397	Argument	dst_r		1577201	2					
ANR	1577398	Identifier	dst_r		1577201	0					
ANR	1577399	Argument	src2		1577201	3					
ANR	1577400	Identifier	src2		1577201	0					
ANR	1577401	Argument	src1		1577201	4					
ANR	1577402	Identifier	src1		1577201	0					
ANR	1577403	BreakStatement	break ;	2235:2:69353:69358	1577201	2	True				
ANR	1577404	Label	case SLJIT_DSUB :	2237:1:69362:69377	1577201	3	True				
ANR	1577405	Identifier	SLJIT_DSUB		1577201	0					
ANR	1577406	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VSUB_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) ) )"	2238:2:69381:69480	1577201	4	True				
ANR	1577407	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VSUB_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) ) )"		1577201	0					
ANR	1577408	Callee	FAIL_IF		1577201	0					
ANR	1577409	Identifier	FAIL_IF		1577201	0					
ANR	1577410	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VSUB_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	1					
ANR	1577411	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VSUB_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	0					
ANR	1577412	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VSUB_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	0					
ANR	1577413	Callee	push_inst		1577201	0					
ANR	1577414	Identifier	push_inst		1577201	0					
ANR	1577415	ArgumentList	compiler		1577201	1					
ANR	1577416	Argument	compiler		1577201	0					
ANR	1577417	Identifier	compiler		1577201	0					
ANR	1577418	Argument	"EMIT_FPU_OPERATION ( VSUB_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 )"		1577201	1					
ANR	1577419	CallExpression	"EMIT_FPU_OPERATION ( VSUB_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 )"		1577201	0					
ANR	1577420	Callee	EMIT_FPU_OPERATION		1577201	0					
ANR	1577421	Identifier	EMIT_FPU_OPERATION		1577201	0					
ANR	1577422	ArgumentList	VSUB_F32		1577201	1					
ANR	1577423	Argument	VSUB_F32		1577201	0					
ANR	1577424	Identifier	VSUB_F32		1577201	0					
ANR	1577425	Argument	op & SLJIT_SINGLE_OP		1577201	1					
ANR	1577426	BitAndExpression	op & SLJIT_SINGLE_OP		1577201	0		&			
ANR	1577427	Identifier	op		1577201	0					
ANR	1577428	Identifier	SLJIT_SINGLE_OP		1577201	1					
ANR	1577429	Argument	dst_r		1577201	2					
ANR	1577430	Identifier	dst_r		1577201	0					
ANR	1577431	Argument	src2		1577201	3					
ANR	1577432	Identifier	src2		1577201	0					
ANR	1577433	Argument	src1		1577201	4					
ANR	1577434	Identifier	src1		1577201	0					
ANR	1577435	BreakStatement	break ;	2239:2:69484:69489	1577201	5	True				
ANR	1577436	Label	case SLJIT_DMUL :	2241:1:69493:69508	1577201	6	True				
ANR	1577437	Identifier	SLJIT_DMUL		1577201	0					
ANR	1577438	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VMUL_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) ) )"	2242:2:69512:69611	1577201	7	True				
ANR	1577439	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VMUL_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) ) )"		1577201	0					
ANR	1577440	Callee	FAIL_IF		1577201	0					
ANR	1577441	Identifier	FAIL_IF		1577201	0					
ANR	1577442	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VMUL_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	1					
ANR	1577443	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VMUL_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	0					
ANR	1577444	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VMUL_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	0					
ANR	1577445	Callee	push_inst		1577201	0					
ANR	1577446	Identifier	push_inst		1577201	0					
ANR	1577447	ArgumentList	compiler		1577201	1					
ANR	1577448	Argument	compiler		1577201	0					
ANR	1577449	Identifier	compiler		1577201	0					
ANR	1577450	Argument	"EMIT_FPU_OPERATION ( VMUL_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 )"		1577201	1					
ANR	1577451	CallExpression	"EMIT_FPU_OPERATION ( VMUL_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 )"		1577201	0					
ANR	1577452	Callee	EMIT_FPU_OPERATION		1577201	0					
ANR	1577453	Identifier	EMIT_FPU_OPERATION		1577201	0					
ANR	1577454	ArgumentList	VMUL_F32		1577201	1					
ANR	1577455	Argument	VMUL_F32		1577201	0					
ANR	1577456	Identifier	VMUL_F32		1577201	0					
ANR	1577457	Argument	op & SLJIT_SINGLE_OP		1577201	1					
ANR	1577458	BitAndExpression	op & SLJIT_SINGLE_OP		1577201	0		&			
ANR	1577459	Identifier	op		1577201	0					
ANR	1577460	Identifier	SLJIT_SINGLE_OP		1577201	1					
ANR	1577461	Argument	dst_r		1577201	2					
ANR	1577462	Identifier	dst_r		1577201	0					
ANR	1577463	Argument	src2		1577201	3					
ANR	1577464	Identifier	src2		1577201	0					
ANR	1577465	Argument	src1		1577201	4					
ANR	1577466	Identifier	src1		1577201	0					
ANR	1577467	BreakStatement	break ;	2243:2:69615:69620	1577201	8	True				
ANR	1577468	Label	case SLJIT_DDIV :	2245:1:69624:69639	1577201	9	True				
ANR	1577469	Identifier	SLJIT_DDIV		1577201	0					
ANR	1577470	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VDIV_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) ) )"	2246:2:69643:69742	1577201	10	True				
ANR	1577471	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_FPU_OPERATION ( VDIV_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) ) )"		1577201	0					
ANR	1577472	Callee	FAIL_IF		1577201	0					
ANR	1577473	Identifier	FAIL_IF		1577201	0					
ANR	1577474	ArgumentList	"push_inst ( compiler , EMIT_FPU_OPERATION ( VDIV_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	1					
ANR	1577475	Argument	"push_inst ( compiler , EMIT_FPU_OPERATION ( VDIV_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	0					
ANR	1577476	CallExpression	"push_inst ( compiler , EMIT_FPU_OPERATION ( VDIV_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 ) )"		1577201	0					
ANR	1577477	Callee	push_inst		1577201	0					
ANR	1577478	Identifier	push_inst		1577201	0					
ANR	1577479	ArgumentList	compiler		1577201	1					
ANR	1577480	Argument	compiler		1577201	0					
ANR	1577481	Identifier	compiler		1577201	0					
ANR	1577482	Argument	"EMIT_FPU_OPERATION ( VDIV_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 )"		1577201	1					
ANR	1577483	CallExpression	"EMIT_FPU_OPERATION ( VDIV_F32 , op & SLJIT_SINGLE_OP , dst_r , src2 , src1 )"		1577201	0					
ANR	1577484	Callee	EMIT_FPU_OPERATION		1577201	0					
ANR	1577485	Identifier	EMIT_FPU_OPERATION		1577201	0					
ANR	1577486	ArgumentList	VDIV_F32		1577201	1					
ANR	1577487	Argument	VDIV_F32		1577201	0					
ANR	1577488	Identifier	VDIV_F32		1577201	0					
ANR	1577489	Argument	op & SLJIT_SINGLE_OP		1577201	1					
ANR	1577490	BitAndExpression	op & SLJIT_SINGLE_OP		1577201	0		&			
ANR	1577491	Identifier	op		1577201	0					
ANR	1577492	Identifier	SLJIT_SINGLE_OP		1577201	1					
ANR	1577493	Argument	dst_r		1577201	2					
ANR	1577494	Identifier	dst_r		1577201	0					
ANR	1577495	Argument	src2		1577201	3					
ANR	1577496	Identifier	src2		1577201	0					
ANR	1577497	Argument	src1		1577201	4					
ANR	1577498	Identifier	src1		1577201	0					
ANR	1577499	BreakStatement	break ;	2247:2:69746:69751	1577201	11	True				
ANR	1577500	IfStatement	if ( dst_r == TMP_FREG1 )		1577201	13					
ANR	1577501	Condition	dst_r == TMP_FREG1	2250:5:69762:69779	1577201	0	True				
ANR	1577502	EqualityExpression	dst_r == TMP_FREG1		1577201	0		==			
ANR	1577503	Identifier	dst_r		1577201	0					
ANR	1577504	Identifier	TMP_FREG1		1577201	1					
ANR	1577505	ExpressionStatement	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw ) )"	2251:2:69784:69861	1577201	1	True				
ANR	1577506	CallExpression	"FAIL_IF ( emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw ) )"		1577201	0					
ANR	1577507	Callee	FAIL_IF		1577201	0					
ANR	1577508	Identifier	FAIL_IF		1577201	0					
ANR	1577509	ArgumentList	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw )"		1577201	1					
ANR	1577510	Argument	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw )"		1577201	0					
ANR	1577511	CallExpression	"emit_fop_mem ( compiler , ( op & SLJIT_SINGLE_OP ) , TMP_FREG1 , dst , dstw )"		1577201	0					
ANR	1577512	Callee	emit_fop_mem		1577201	0					
ANR	1577513	Identifier	emit_fop_mem		1577201	0					
ANR	1577514	ArgumentList	compiler		1577201	1					
ANR	1577515	Argument	compiler		1577201	0					
ANR	1577516	Identifier	compiler		1577201	0					
ANR	1577517	Argument	op & SLJIT_SINGLE_OP		1577201	1					
ANR	1577518	BitAndExpression	op & SLJIT_SINGLE_OP		1577201	0		&			
ANR	1577519	Identifier	op		1577201	0					
ANR	1577520	Identifier	SLJIT_SINGLE_OP		1577201	1					
ANR	1577521	Argument	TMP_FREG1		1577201	2					
ANR	1577522	Identifier	TMP_FREG1		1577201	0					
ANR	1577523	Argument	dst		1577201	3					
ANR	1577524	Identifier	dst		1577201	0					
ANR	1577525	Argument	dstw		1577201	4					
ANR	1577526	Identifier	dstw		1577201	0					
ANR	1577527	ReturnStatement	return SLJIT_SUCCESS ;	2253:1:69865:69885	1577201	14	True				
ANR	1577528	Identifier	SLJIT_SUCCESS		1577201	0					
ANR	1577529	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1577201	1					
ANR	1577530	Identifier	sljit_emit_fop2		1577201	2					
ANR	1577531	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1577201	3					
ANR	1577532	Parameter	struct sljit_compiler * compiler	2203:50:68431:68461	1577201	0	True				
ANR	1577533	ParameterType	struct sljit_compiler *		1577201	0					
ANR	1577534	Identifier	compiler		1577201	1					
ANR	1577535	Parameter	sljit_si op	2203:83:68464:68474	1577201	1	True				
ANR	1577536	ParameterType	sljit_si		1577201	0					
ANR	1577537	Identifier	op		1577201	1					
ANR	1577538	Parameter	sljit_si dst	2204:1:68478:68489	1577201	2	True				
ANR	1577539	ParameterType	sljit_si		1577201	0					
ANR	1577540	Identifier	dst		1577201	1					
ANR	1577541	Parameter	sljit_sw dstw	2204:15:68492:68504	1577201	3	True				
ANR	1577542	ParameterType	sljit_sw		1577201	0					
ANR	1577543	Identifier	dstw		1577201	1					
ANR	1577544	Parameter	sljit_si src1	2205:1:68508:68520	1577201	4	True				
ANR	1577545	ParameterType	sljit_si		1577201	0					
ANR	1577546	Identifier	src1		1577201	1					
ANR	1577547	Parameter	sljit_sw src1w	2205:16:68523:68536	1577201	5	True				
ANR	1577548	ParameterType	sljit_sw		1577201	0					
ANR	1577549	Identifier	src1w		1577201	1					
ANR	1577550	Parameter	sljit_si src2	2206:1:68540:68552	1577201	6	True				
ANR	1577551	ParameterType	sljit_si		1577201	0					
ANR	1577552	Identifier	src2		1577201	1					
ANR	1577553	Parameter	sljit_sw src2w	2206:16:68555:68568	1577201	7	True				
ANR	1577554	ParameterType	sljit_sw		1577201	0					
ANR	1577555	Identifier	src2w		1577201	1					
ANR	1577556	CFGEntryNode	ENTRY		1577201		True				
ANR	1577557	CFGExitNode	EXIT		1577201		True				
ANR	1577558	Symbol	compiler -> cache_argw		1577201						
ANR	1577559	Symbol	TMP_FREG2		1577201						
ANR	1577560	Symbol	src1w		1577201						
ANR	1577561	Symbol	dst		1577201						
ANR	1577562	Symbol	TMP_FREG1		1577201						
ANR	1577563	Symbol	SLJIT_MEM		1577201						
ANR	1577564	Symbol	VDIV_F32		1577201						
ANR	1577565	Symbol	* compiler		1577201						
ANR	1577566	Symbol	dst_r		1577201						
ANR	1577567	Symbol	GET_OPCODE		1577201						
ANR	1577568	Symbol	VSUB_F32		1577201						
ANR	1577569	Symbol	emit_fop_mem		1577201						
ANR	1577570	Symbol	compiler		1577201						
ANR	1577571	Symbol	VADD_F32		1577201						
ANR	1577572	Symbol	src2w		1577201						
ANR	1577573	Symbol	op		1577201						
ANR	1577574	Symbol	push_inst		1577201						
ANR	1577575	Symbol	FAST_IS_REG		1577201						
ANR	1577576	Symbol	compiler -> cache_arg		1577201						
ANR	1577577	Symbol	SLJIT_SINGLE_OP		1577201						
ANR	1577578	Symbol	SLJIT_SUCCESS		1577201						
ANR	1577579	Symbol	check_sljit_emit_fop2		1577201						
ANR	1577580	Symbol	EMIT_FPU_OPERATION		1577201						
ANR	1577581	Symbol	FPU_LOAD		1577201						
ANR	1577582	Symbol	src1		1577201						
ANR	1577583	Symbol	VMUL_F32		1577201						
ANR	1577584	Symbol	src2		1577201						
ANR	1577585	Symbol	dstw		1577201						
ANR	1577586	Function	sljit_emit_fast_enter	2256:1:69891:71005							
ANR	1577587	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1577586	0					
ANR	1577588	CompoundStatement		2265:0:70310:71005	1577586	0					
ANR	1577589	ExpressionStatement	CHECK_ERROR ( )	2266:1:70313:70326	1577586	0	True				
ANR	1577590	CallExpression	CHECK_ERROR ( )		1577586	0					
ANR	1577591	Callee	CHECK_ERROR		1577586	0					
ANR	1577592	Identifier	CHECK_ERROR		1577586	0					
ANR	1577593	ArgumentList			1577586	1					
ANR	1577594	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	2267:1:70329:70384	1577586	1	True				
ANR	1577595	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1577586	0					
ANR	1577596	Callee	CHECK		1577586	0					
ANR	1577597	Identifier	CHECK		1577586	0					
ANR	1577598	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1577586	1					
ANR	1577599	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1577586	0					
ANR	1577600	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1577586	0					
ANR	1577601	Callee	check_sljit_emit_fast_enter		1577586	0					
ANR	1577602	Identifier	check_sljit_emit_fast_enter		1577586	0					
ANR	1577603	ArgumentList	compiler		1577586	1					
ANR	1577604	Argument	compiler		1577586	0					
ANR	1577605	Identifier	compiler		1577586	0					
ANR	1577606	Argument	dst		1577586	1					
ANR	1577607	Identifier	dst		1577586	0					
ANR	1577608	Argument	dstw		1577586	2					
ANR	1577609	Identifier	dstw		1577586	0					
ANR	1577610	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2268:1:70387:70417	1577586	2	True				
ANR	1577611	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1577586	0					
ANR	1577612	Callee	ADJUST_LOCAL_OFFSET		1577586	0					
ANR	1577613	Identifier	ADJUST_LOCAL_OFFSET		1577586	0					
ANR	1577614	ArgumentList	dst		1577586	1					
ANR	1577615	Argument	dst		1577586	0					
ANR	1577616	Identifier	dst		1577586	0					
ANR	1577617	Argument	dstw		1577586	1					
ANR	1577618	Identifier	dstw		1577586	0					
ANR	1577619	IfStatement	if ( dst == SLJIT_UNUSED )		1577586	3					
ANR	1577620	Condition	dst == SLJIT_UNUSED	2271:5:70472:70490	1577586	0	True				
ANR	1577621	EqualityExpression	dst == SLJIT_UNUSED		1577586	0		==			
ANR	1577622	Identifier	dst		1577586	0					
ANR	1577623	Identifier	SLJIT_UNUSED		1577586	1					
ANR	1577624	ReturnStatement	return SLJIT_SUCCESS ;	2272:2:70495:70515	1577586	1	True				
ANR	1577625	Identifier	SLJIT_SUCCESS		1577586	0					
ANR	1577626	IfStatement	if ( FAST_IS_REG ( dst ) )		1577586	4					
ANR	1577627	Condition	FAST_IS_REG ( dst )	2274:5:70523:70538	1577586	0	True				
ANR	1577628	CallExpression	FAST_IS_REG ( dst )		1577586	0					
ANR	1577629	Callee	FAST_IS_REG		1577586	0					
ANR	1577630	Identifier	FAST_IS_REG		1577586	0					
ANR	1577631	ArgumentList	dst		1577586	1					
ANR	1577632	Argument	dst		1577586	0					
ANR	1577633	Identifier	dst		1577586	0					
ANR	1577634	ReturnStatement	"return push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , RM ( TMP_REG3 ) ) ) ;"	2275:2:70543:70636	1577586	1	True				
ANR	1577635	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , RM ( TMP_REG3 ) ) )"		1577586	0					
ANR	1577636	Callee	push_inst		1577586	0					
ANR	1577637	Identifier	push_inst		1577586	0					
ANR	1577638	ArgumentList	compiler		1577586	1					
ANR	1577639	Argument	compiler		1577586	0					
ANR	1577640	Identifier	compiler		1577586	0					
ANR	1577641	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , RM ( TMP_REG3 ) )"		1577586	1					
ANR	1577642	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst , SLJIT_UNUSED , RM ( TMP_REG3 ) )"		1577586	0					
ANR	1577643	Callee	EMIT_DATA_PROCESS_INS		1577586	0					
ANR	1577644	Identifier	EMIT_DATA_PROCESS_INS		1577586	0					
ANR	1577645	ArgumentList	MOV_DP		1577586	1					
ANR	1577646	Argument	MOV_DP		1577586	0					
ANR	1577647	Identifier	MOV_DP		1577586	0					
ANR	1577648	Argument	0		1577586	1					
ANR	1577649	PrimaryExpression	0		1577586	0					
ANR	1577650	Argument	dst		1577586	2					
ANR	1577651	Identifier	dst		1577586	0					
ANR	1577652	Argument	SLJIT_UNUSED		1577586	3					
ANR	1577653	Identifier	SLJIT_UNUSED		1577586	0					
ANR	1577654	Argument	RM ( TMP_REG3 )		1577586	4					
ANR	1577655	CallExpression	RM ( TMP_REG3 )		1577586	0					
ANR	1577656	Callee	RM		1577586	0					
ANR	1577657	Identifier	RM		1577586	0					
ANR	1577658	ArgumentList	TMP_REG3		1577586	1					
ANR	1577659	Argument	TMP_REG3		1577586	0					
ANR	1577660	Identifier	TMP_REG3		1577586	0					
ANR	1577661	IfStatement	"if ( getput_arg_fast ( compiler , WORD_DATA , TMP_REG3 , dst , dstw ) )"		1577586	5					
ANR	1577662	Condition	"getput_arg_fast ( compiler , WORD_DATA , TMP_REG3 , dst , dstw )"	2278:5:70659:70715	1577586	0	True				
ANR	1577663	CallExpression	"getput_arg_fast ( compiler , WORD_DATA , TMP_REG3 , dst , dstw )"		1577586	0					
ANR	1577664	Callee	getput_arg_fast		1577586	0					
ANR	1577665	Identifier	getput_arg_fast		1577586	0					
ANR	1577666	ArgumentList	compiler		1577586	1					
ANR	1577667	Argument	compiler		1577586	0					
ANR	1577668	Identifier	compiler		1577586	0					
ANR	1577669	Argument	WORD_DATA		1577586	1					
ANR	1577670	Identifier	WORD_DATA		1577586	0					
ANR	1577671	Argument	TMP_REG3		1577586	2					
ANR	1577672	Identifier	TMP_REG3		1577586	0					
ANR	1577673	Argument	dst		1577586	3					
ANR	1577674	Identifier	dst		1577586	0					
ANR	1577675	Argument	dstw		1577586	4					
ANR	1577676	Identifier	dstw		1577586	0					
ANR	1577677	ReturnStatement	return compiler -> error ;	2279:2:70720:70742	1577586	1	True				
ANR	1577678	PtrMemberAccess	compiler -> error		1577586	0					
ANR	1577679	Identifier	compiler		1577586	0					
ANR	1577680	Identifier	error		1577586	1					
ANR	1577681	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG2 , SLJIT_UNUSED , RM ( TMP_REG3 ) ) ) )"	2281:1:70782:70882	1577586	6	True				
ANR	1577682	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG2 , SLJIT_UNUSED , RM ( TMP_REG3 ) ) ) )"		1577586	0					
ANR	1577683	Callee	FAIL_IF		1577586	0					
ANR	1577684	Identifier	FAIL_IF		1577586	0					
ANR	1577685	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG2 , SLJIT_UNUSED , RM ( TMP_REG3 ) ) )"		1577586	1					
ANR	1577686	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG2 , SLJIT_UNUSED , RM ( TMP_REG3 ) ) )"		1577586	0					
ANR	1577687	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG2 , SLJIT_UNUSED , RM ( TMP_REG3 ) ) )"		1577586	0					
ANR	1577688	Callee	push_inst		1577586	0					
ANR	1577689	Identifier	push_inst		1577586	0					
ANR	1577690	ArgumentList	compiler		1577586	1					
ANR	1577691	Argument	compiler		1577586	0					
ANR	1577692	Identifier	compiler		1577586	0					
ANR	1577693	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG2 , SLJIT_UNUSED , RM ( TMP_REG3 ) )"		1577586	1					
ANR	1577694	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG2 , SLJIT_UNUSED , RM ( TMP_REG3 ) )"		1577586	0					
ANR	1577695	Callee	EMIT_DATA_PROCESS_INS		1577586	0					
ANR	1577696	Identifier	EMIT_DATA_PROCESS_INS		1577586	0					
ANR	1577697	ArgumentList	MOV_DP		1577586	1					
ANR	1577698	Argument	MOV_DP		1577586	0					
ANR	1577699	Identifier	MOV_DP		1577586	0					
ANR	1577700	Argument	0		1577586	1					
ANR	1577701	PrimaryExpression	0		1577586	0					
ANR	1577702	Argument	TMP_REG2		1577586	2					
ANR	1577703	Identifier	TMP_REG2		1577586	0					
ANR	1577704	Argument	SLJIT_UNUSED		1577586	3					
ANR	1577705	Identifier	SLJIT_UNUSED		1577586	0					
ANR	1577706	Argument	RM ( TMP_REG3 )		1577586	4					
ANR	1577707	CallExpression	RM ( TMP_REG3 )		1577586	0					
ANR	1577708	Callee	RM		1577586	0					
ANR	1577709	Identifier	RM		1577586	0					
ANR	1577710	ArgumentList	TMP_REG3		1577586	1					
ANR	1577711	Argument	TMP_REG3		1577586	0					
ANR	1577712	Identifier	TMP_REG3		1577586	0					
ANR	1577713	ExpressionStatement	compiler -> cache_arg = 0	2282:1:70885:70908	1577586	7	True				
ANR	1577714	AssignmentExpression	compiler -> cache_arg = 0		1577586	0		=			
ANR	1577715	PtrMemberAccess	compiler -> cache_arg		1577586	0					
ANR	1577716	Identifier	compiler		1577586	0					
ANR	1577717	Identifier	cache_arg		1577586	1					
ANR	1577718	PrimaryExpression	0		1577586	1					
ANR	1577719	ExpressionStatement	compiler -> cache_argw = 0	2283:1:70911:70935	1577586	8	True				
ANR	1577720	AssignmentExpression	compiler -> cache_argw = 0		1577586	0		=			
ANR	1577721	PtrMemberAccess	compiler -> cache_argw		1577586	0					
ANR	1577722	Identifier	compiler		1577586	0					
ANR	1577723	Identifier	cache_argw		1577586	1					
ANR	1577724	PrimaryExpression	0		1577586	1					
ANR	1577725	ReturnStatement	"return getput_arg ( compiler , WORD_DATA , TMP_REG2 , dst , dstw , 0 , 0 ) ;"	2284:1:70938:71003	1577586	9	True				
ANR	1577726	CallExpression	"getput_arg ( compiler , WORD_DATA , TMP_REG2 , dst , dstw , 0 , 0 )"		1577586	0					
ANR	1577727	Callee	getput_arg		1577586	0					
ANR	1577728	Identifier	getput_arg		1577586	0					
ANR	1577729	ArgumentList	compiler		1577586	1					
ANR	1577730	Argument	compiler		1577586	0					
ANR	1577731	Identifier	compiler		1577586	0					
ANR	1577732	Argument	WORD_DATA		1577586	1					
ANR	1577733	Identifier	WORD_DATA		1577586	0					
ANR	1577734	Argument	TMP_REG2		1577586	2					
ANR	1577735	Identifier	TMP_REG2		1577586	0					
ANR	1577736	Argument	dst		1577586	3					
ANR	1577737	Identifier	dst		1577586	0					
ANR	1577738	Argument	dstw		1577586	4					
ANR	1577739	Identifier	dstw		1577586	0					
ANR	1577740	Argument	0		1577586	5					
ANR	1577741	PrimaryExpression	0		1577586	0					
ANR	1577742	Argument	0		1577586	6					
ANR	1577743	PrimaryExpression	0		1577586	0					
ANR	1577744	ReturnType	undef FPU_LOAD undef EMIT_FPU_DATA_TRANSFER undef EMIT_FPU_OPERATION SLJIT_API_FUNC_ATTRIBUTE sljit_si		1577586	1					
ANR	1577745	Identifier	sljit_emit_fast_enter		1577586	2					
ANR	1577746	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1577586	3					
ANR	1577747	Parameter	struct sljit_compiler * compiler	2264:56:70248:70278	1577586	0	True				
ANR	1577748	ParameterType	struct sljit_compiler *		1577586	0					
ANR	1577749	Identifier	compiler		1577586	1					
ANR	1577750	Parameter	sljit_si dst	2264:89:70281:70292	1577586	1	True				
ANR	1577751	ParameterType	sljit_si		1577586	0					
ANR	1577752	Identifier	dst		1577586	1					
ANR	1577753	Parameter	sljit_sw dstw	2264:103:70295:70307	1577586	2	True				
ANR	1577754	ParameterType	sljit_sw		1577586	0					
ANR	1577755	Identifier	dstw		1577586	1					
ANR	1577756	CFGEntryNode	ENTRY		1577586		True				
ANR	1577757	CFGExitNode	EXIT		1577586		True				
ANR	1577758	Symbol	TMP_REG3		1577586						
ANR	1577759	Symbol	push_inst		1577586						
ANR	1577760	Symbol	TMP_REG2		1577586						
ANR	1577761	Symbol	check_sljit_emit_fast_enter		1577586						
ANR	1577762	Symbol	compiler -> cache_argw		1577586						
ANR	1577763	Symbol	FAST_IS_REG		1577586						
ANR	1577764	Symbol	dst		1577586						
ANR	1577765	Symbol	compiler -> cache_arg		1577586						
ANR	1577766	Symbol	SLJIT_SUCCESS		1577586						
ANR	1577767	Symbol	* compiler		1577586						
ANR	1577768	Symbol	MOV_DP		1577586						
ANR	1577769	Symbol	SLJIT_UNUSED		1577586						
ANR	1577770	Symbol	getput_arg		1577586						
ANR	1577771	Symbol	RM		1577586						
ANR	1577772	Symbol	compiler		1577586						
ANR	1577773	Symbol	getput_arg_fast		1577586						
ANR	1577774	Symbol	dstw		1577586						
ANR	1577775	Symbol	compiler -> error		1577586						
ANR	1577776	Symbol	WORD_DATA		1577586						
ANR	1577777	Symbol	EMIT_DATA_PROCESS_INS		1577586						
ANR	1577778	Function	sljit_emit_fast_return	2287:0:71008:71886							
ANR	1577779	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1577778	0					
ANR	1577780	CompoundStatement		2288:0:71127:71886	1577778	0					
ANR	1577781	ExpressionStatement	CHECK_ERROR ( )	2289:1:71130:71143	1577778	0	True				
ANR	1577782	CallExpression	CHECK_ERROR ( )		1577778	0					
ANR	1577783	Callee	CHECK_ERROR		1577778	0					
ANR	1577784	Identifier	CHECK_ERROR		1577778	0					
ANR	1577785	ArgumentList			1577778	1					
ANR	1577786	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	2290:1:71146:71202	1577778	1	True				
ANR	1577787	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1577778	0					
ANR	1577788	Callee	CHECK		1577778	0					
ANR	1577789	Identifier	CHECK		1577778	0					
ANR	1577790	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1577778	1					
ANR	1577791	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1577778	0					
ANR	1577792	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1577778	0					
ANR	1577793	Callee	check_sljit_emit_fast_return		1577778	0					
ANR	1577794	Identifier	check_sljit_emit_fast_return		1577778	0					
ANR	1577795	ArgumentList	compiler		1577778	1					
ANR	1577796	Argument	compiler		1577778	0					
ANR	1577797	Identifier	compiler		1577778	0					
ANR	1577798	Argument	src		1577778	1					
ANR	1577799	Identifier	src		1577778	0					
ANR	1577800	Argument	srcw		1577778	2					
ANR	1577801	Identifier	srcw		1577778	0					
ANR	1577802	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2291:1:71205:71235	1577778	2	True				
ANR	1577803	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1577778	0					
ANR	1577804	Callee	ADJUST_LOCAL_OFFSET		1577778	0					
ANR	1577805	Identifier	ADJUST_LOCAL_OFFSET		1577778	0					
ANR	1577806	ArgumentList	src		1577778	1					
ANR	1577807	Argument	src		1577778	0					
ANR	1577808	Identifier	src		1577778	0					
ANR	1577809	Argument	srcw		1577778	1					
ANR	1577810	Identifier	srcw		1577778	0					
ANR	1577811	IfStatement	if ( FAST_IS_REG ( src ) )		1577778	3					
ANR	1577812	Condition	FAST_IS_REG ( src )	2293:5:71243:71258	1577778	0	True				
ANR	1577813	CallExpression	FAST_IS_REG ( src )		1577778	0					
ANR	1577814	Callee	FAST_IS_REG		1577778	0					
ANR	1577815	Identifier	FAST_IS_REG		1577778	0					
ANR	1577816	ArgumentList	src		1577778	1					
ANR	1577817	Argument	src		1577778	0					
ANR	1577818	Identifier	src		1577778	0					
ANR	1577819	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( src ) ) ) )"	2294:2:71263:71358	1577778	1	True				
ANR	1577820	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( src ) ) ) )"		1577778	0					
ANR	1577821	Callee	FAIL_IF		1577778	0					
ANR	1577822	Identifier	FAIL_IF		1577778	0					
ANR	1577823	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( src ) ) )"		1577778	1					
ANR	1577824	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( src ) ) )"		1577778	0					
ANR	1577825	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( src ) ) )"		1577778	0					
ANR	1577826	Callee	push_inst		1577778	0					
ANR	1577827	Identifier	push_inst		1577778	0					
ANR	1577828	ArgumentList	compiler		1577778	1					
ANR	1577829	Argument	compiler		1577778	0					
ANR	1577830	Identifier	compiler		1577778	0					
ANR	1577831	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( src ) )"		1577778	1					
ANR	1577832	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( src ) )"		1577778	0					
ANR	1577833	Callee	EMIT_DATA_PROCESS_INS		1577778	0					
ANR	1577834	Identifier	EMIT_DATA_PROCESS_INS		1577778	0					
ANR	1577835	ArgumentList	MOV_DP		1577778	1					
ANR	1577836	Argument	MOV_DP		1577778	0					
ANR	1577837	Identifier	MOV_DP		1577778	0					
ANR	1577838	Argument	0		1577778	1					
ANR	1577839	PrimaryExpression	0		1577778	0					
ANR	1577840	Argument	TMP_REG3		1577778	2					
ANR	1577841	Identifier	TMP_REG3		1577778	0					
ANR	1577842	Argument	SLJIT_UNUSED		1577778	3					
ANR	1577843	Identifier	SLJIT_UNUSED		1577778	0					
ANR	1577844	Argument	RM ( src )		1577778	4					
ANR	1577845	CallExpression	RM ( src )		1577778	0					
ANR	1577846	Callee	RM		1577778	0					
ANR	1577847	Identifier	RM		1577778	0					
ANR	1577848	ArgumentList	src		1577778	1					
ANR	1577849	Argument	src		1577778	0					
ANR	1577850	Identifier	src		1577778	0					
ANR	1577851	ElseStatement	else		1577778	0					
ANR	1577852	IfStatement	if ( src & SLJIT_MEM )		1577778	0					
ANR	1577853	Condition	src & SLJIT_MEM	2295:10:71370:71384	1577778	0	True				
ANR	1577854	BitAndExpression	src & SLJIT_MEM		1577778	0		&			
ANR	1577855	Identifier	src		1577778	0					
ANR	1577856	Identifier	SLJIT_MEM		1577778	1					
ANR	1577857	CompoundStatement		8:27:259:259	1577778	1					
ANR	1577858	IfStatement	"if ( getput_arg_fast ( compiler , WORD_DATA | LOAD_DATA , TMP_REG3 , src , srcw ) )"		1577778	0					
ANR	1577859	Condition	"getput_arg_fast ( compiler , WORD_DATA | LOAD_DATA , TMP_REG3 , src , srcw )"	2296:6:71395:71463	1577778	0	True				
ANR	1577860	CallExpression	"getput_arg_fast ( compiler , WORD_DATA | LOAD_DATA , TMP_REG3 , src , srcw )"		1577778	0					
ANR	1577861	Callee	getput_arg_fast		1577778	0					
ANR	1577862	Identifier	getput_arg_fast		1577778	0					
ANR	1577863	ArgumentList	compiler		1577778	1					
ANR	1577864	Argument	compiler		1577778	0					
ANR	1577865	Identifier	compiler		1577778	0					
ANR	1577866	Argument	WORD_DATA | LOAD_DATA		1577778	1					
ANR	1577867	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1577778	0		|			
ANR	1577868	Identifier	WORD_DATA		1577778	0					
ANR	1577869	Identifier	LOAD_DATA		1577778	1					
ANR	1577870	Argument	TMP_REG3		1577778	2					
ANR	1577871	Identifier	TMP_REG3		1577778	0					
ANR	1577872	Argument	src		1577778	3					
ANR	1577873	Identifier	src		1577778	0					
ANR	1577874	Argument	srcw		1577778	4					
ANR	1577875	Identifier	srcw		1577778	0					
ANR	1577876	ExpressionStatement	FAIL_IF ( compiler -> error )	2297:3:71469:71493	1577778	1	True				
ANR	1577877	CallExpression	FAIL_IF ( compiler -> error )		1577778	0					
ANR	1577878	Callee	FAIL_IF		1577778	0					
ANR	1577879	Identifier	FAIL_IF		1577778	0					
ANR	1577880	ArgumentList	compiler -> error		1577778	1					
ANR	1577881	Argument	compiler -> error		1577778	0					
ANR	1577882	PtrMemberAccess	compiler -> error		1577778	0					
ANR	1577883	Identifier	compiler		1577778	0					
ANR	1577884	Identifier	error		1577778	1					
ANR	1577885	ElseStatement	else		1577778	0					
ANR	1577886	CompoundStatement		11:7:374:374	1577778	0					
ANR	1577887	ExpressionStatement	compiler -> cache_arg = 0	2299:3:71507:71530	1577778	0	True				
ANR	1577888	AssignmentExpression	compiler -> cache_arg = 0		1577778	0		=			
ANR	1577889	PtrMemberAccess	compiler -> cache_arg		1577778	0					
ANR	1577890	Identifier	compiler		1577778	0					
ANR	1577891	Identifier	cache_arg		1577778	1					
ANR	1577892	PrimaryExpression	0		1577778	1					
ANR	1577893	ExpressionStatement	compiler -> cache_argw = 0	2300:3:71535:71559	1577778	1	True				
ANR	1577894	AssignmentExpression	compiler -> cache_argw = 0		1577778	0		=			
ANR	1577895	PtrMemberAccess	compiler -> cache_argw		1577778	0					
ANR	1577896	Identifier	compiler		1577778	0					
ANR	1577897	Identifier	cache_argw		1577778	1					
ANR	1577898	PrimaryExpression	0		1577778	1					
ANR	1577899	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw , 0 , 0 ) )"	2301:3:71564:71643	1577778	2	True				
ANR	1577900	CallExpression	"FAIL_IF ( getput_arg ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw , 0 , 0 ) )"		1577778	0					
ANR	1577901	Callee	FAIL_IF		1577778	0					
ANR	1577902	Identifier	FAIL_IF		1577778	0					
ANR	1577903	ArgumentList	"getput_arg ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw , 0 , 0 )"		1577778	1					
ANR	1577904	Argument	"getput_arg ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw , 0 , 0 )"		1577778	0					
ANR	1577905	CallExpression	"getput_arg ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw , 0 , 0 )"		1577778	0					
ANR	1577906	Callee	getput_arg		1577778	0					
ANR	1577907	Identifier	getput_arg		1577778	0					
ANR	1577908	ArgumentList	compiler		1577778	1					
ANR	1577909	Argument	compiler		1577778	0					
ANR	1577910	Identifier	compiler		1577778	0					
ANR	1577911	Argument	WORD_DATA | LOAD_DATA		1577778	1					
ANR	1577912	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1577778	0		|			
ANR	1577913	Identifier	WORD_DATA		1577778	0					
ANR	1577914	Identifier	LOAD_DATA		1577778	1					
ANR	1577915	Argument	TMP_REG2		1577778	2					
ANR	1577916	Identifier	TMP_REG2		1577778	0					
ANR	1577917	Argument	src		1577778	3					
ANR	1577918	Identifier	src		1577778	0					
ANR	1577919	Argument	srcw		1577778	4					
ANR	1577920	Identifier	srcw		1577778	0					
ANR	1577921	Argument	0		1577778	5					
ANR	1577922	PrimaryExpression	0		1577778	0					
ANR	1577923	Argument	0		1577778	6					
ANR	1577924	PrimaryExpression	0		1577778	0					
ANR	1577925	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( TMP_REG2 ) ) ) )"	2302:3:71648:71748	1577778	3	True				
ANR	1577926	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( TMP_REG2 ) ) ) )"		1577778	0					
ANR	1577927	Callee	FAIL_IF		1577778	0					
ANR	1577928	Identifier	FAIL_IF		1577778	0					
ANR	1577929	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( TMP_REG2 ) ) )"		1577778	1					
ANR	1577930	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( TMP_REG2 ) ) )"		1577778	0					
ANR	1577931	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( TMP_REG2 ) ) )"		1577778	0					
ANR	1577932	Callee	push_inst		1577778	0					
ANR	1577933	Identifier	push_inst		1577778	0					
ANR	1577934	ArgumentList	compiler		1577778	1					
ANR	1577935	Argument	compiler		1577778	0					
ANR	1577936	Identifier	compiler		1577778	0					
ANR	1577937	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( TMP_REG2 ) )"		1577778	1					
ANR	1577938	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , TMP_REG3 , SLJIT_UNUSED , RM ( TMP_REG2 ) )"		1577778	0					
ANR	1577939	Callee	EMIT_DATA_PROCESS_INS		1577778	0					
ANR	1577940	Identifier	EMIT_DATA_PROCESS_INS		1577778	0					
ANR	1577941	ArgumentList	MOV_DP		1577778	1					
ANR	1577942	Argument	MOV_DP		1577778	0					
ANR	1577943	Identifier	MOV_DP		1577778	0					
ANR	1577944	Argument	0		1577778	1					
ANR	1577945	PrimaryExpression	0		1577778	0					
ANR	1577946	Argument	TMP_REG3		1577778	2					
ANR	1577947	Identifier	TMP_REG3		1577778	0					
ANR	1577948	Argument	SLJIT_UNUSED		1577778	3					
ANR	1577949	Identifier	SLJIT_UNUSED		1577778	0					
ANR	1577950	Argument	RM ( TMP_REG2 )		1577778	4					
ANR	1577951	CallExpression	RM ( TMP_REG2 )		1577778	0					
ANR	1577952	Callee	RM		1577778	0					
ANR	1577953	Identifier	RM		1577778	0					
ANR	1577954	ArgumentList	TMP_REG2		1577778	1					
ANR	1577955	Argument	TMP_REG2		1577778	0					
ANR	1577956	Identifier	TMP_REG2		1577778	0					
ANR	1577957	ElseStatement	else		1577778	0					
ANR	1577958	IfStatement	if ( src & SLJIT_IMM )		1577778	0					
ANR	1577959	Condition	src & SLJIT_IMM	2305:10:71767:71781	1577778	0	True				
ANR	1577960	BitAndExpression	src & SLJIT_IMM		1577778	0		&			
ANR	1577961	Identifier	src		1577778	0					
ANR	1577962	Identifier	SLJIT_IMM		1577778	1					
ANR	1577963	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , srcw ) )"	2306:2:71786:71835	1577778	1	True				
ANR	1577964	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , srcw ) )"		1577778	0					
ANR	1577965	Callee	FAIL_IF		1577778	0					
ANR	1577966	Identifier	FAIL_IF		1577778	0					
ANR	1577967	ArgumentList	"load_immediate ( compiler , TMP_REG3 , srcw )"		1577778	1					
ANR	1577968	Argument	"load_immediate ( compiler , TMP_REG3 , srcw )"		1577778	0					
ANR	1577969	CallExpression	"load_immediate ( compiler , TMP_REG3 , srcw )"		1577778	0					
ANR	1577970	Callee	load_immediate		1577778	0					
ANR	1577971	Identifier	load_immediate		1577778	0					
ANR	1577972	ArgumentList	compiler		1577778	1					
ANR	1577973	Argument	compiler		1577778	0					
ANR	1577974	Identifier	compiler		1577778	0					
ANR	1577975	Argument	TMP_REG3		1577778	1					
ANR	1577976	Identifier	TMP_REG3		1577778	0					
ANR	1577977	Argument	srcw		1577778	2					
ANR	1577978	Identifier	srcw		1577778	0					
ANR	1577979	ReturnStatement	"return push_inst ( compiler , BLX | RM ( TMP_REG3 ) ) ;"	2307:1:71838:71884	1577778	4	True				
ANR	1577980	CallExpression	"push_inst ( compiler , BLX | RM ( TMP_REG3 ) )"		1577778	0					
ANR	1577981	Callee	push_inst		1577778	0					
ANR	1577982	Identifier	push_inst		1577778	0					
ANR	1577983	ArgumentList	compiler		1577778	1					
ANR	1577984	Argument	compiler		1577778	0					
ANR	1577985	Identifier	compiler		1577778	0					
ANR	1577986	Argument	BLX | RM ( TMP_REG3 )		1577778	1					
ANR	1577987	InclusiveOrExpression	BLX | RM ( TMP_REG3 )		1577778	0		|			
ANR	1577988	Identifier	BLX		1577778	0					
ANR	1577989	CallExpression	RM ( TMP_REG3 )		1577778	1					
ANR	1577990	Callee	RM		1577778	0					
ANR	1577991	Identifier	RM		1577778	0					
ANR	1577992	ArgumentList	TMP_REG3		1577778	1					
ANR	1577993	Argument	TMP_REG3		1577778	0					
ANR	1577994	Identifier	TMP_REG3		1577778	0					
ANR	1577995	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1577778	1					
ANR	1577996	Identifier	sljit_emit_fast_return		1577778	2					
ANR	1577997	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1577778	3					
ANR	1577998	Parameter	struct sljit_compiler * compiler	2287:57:71065:71095	1577778	0	True				
ANR	1577999	ParameterType	struct sljit_compiler *		1577778	0					
ANR	1578000	Identifier	compiler		1577778	1					
ANR	1578001	Parameter	sljit_si src	2287:90:71098:71109	1577778	1	True				
ANR	1578002	ParameterType	sljit_si		1577778	0					
ANR	1578003	Identifier	src		1577778	1					
ANR	1578004	Parameter	sljit_sw srcw	2287:104:71112:71124	1577778	2	True				
ANR	1578005	ParameterType	sljit_sw		1577778	0					
ANR	1578006	Identifier	srcw		1577778	1					
ANR	1578007	CFGEntryNode	ENTRY		1577778		True				
ANR	1578008	CFGExitNode	EXIT		1577778		True				
ANR	1578009	Symbol	TMP_REG3		1577778						
ANR	1578010	Symbol	push_inst		1577778						
ANR	1578011	Symbol	TMP_REG2		1577778						
ANR	1578012	Symbol	compiler -> cache_argw		1577778						
ANR	1578013	Symbol	FAST_IS_REG		1577778						
ANR	1578014	Symbol	LOAD_DATA		1577778						
ANR	1578015	Symbol	src		1577778						
ANR	1578016	Symbol	srcw		1577778						
ANR	1578017	Symbol	SLJIT_MEM		1577778						
ANR	1578018	Symbol	compiler -> cache_arg		1577778						
ANR	1578019	Symbol	* compiler		1577778						
ANR	1578020	Symbol	BLX		1577778						
ANR	1578021	Symbol	MOV_DP		1577778						
ANR	1578022	Symbol	SLJIT_IMM		1577778						
ANR	1578023	Symbol	check_sljit_emit_fast_return		1577778						
ANR	1578024	Symbol	SLJIT_UNUSED		1577778						
ANR	1578025	Symbol	getput_arg		1577778						
ANR	1578026	Symbol	load_immediate		1577778						
ANR	1578027	Symbol	RM		1577778						
ANR	1578028	Symbol	compiler		1577778						
ANR	1578029	Symbol	getput_arg_fast		1577778						
ANR	1578030	Symbol	compiler -> error		1577778						
ANR	1578031	Symbol	WORD_DATA		1577778						
ANR	1578032	Symbol	EMIT_DATA_PROCESS_INS		1577778						
ANR	1578033	Function	get_cc	2314:0:72118:73066							
ANR	1578034	FunctionDef	get_cc (sljit_si type)		1578033	0					
ANR	1578035	CompoundStatement		2315:0:72156:73066	1578033	0					
ANR	1578036	SwitchStatement	switch ( type )		1578033	0					
ANR	1578037	Condition	type	2316:9:72167:72170	1578033	0	True				
ANR	1578038	Identifier	type		1578033	0					
ANR	1578039	CompoundStatement		2:15:16:16	1578033	1					
ANR	1578040	Label	case SLJIT_EQUAL :	2317:1:72176:72192	1578033	0	True				
ANR	1578041	Identifier	SLJIT_EQUAL		1578033	0					
ANR	1578042	Label	case SLJIT_MUL_NOT_OVERFLOW :	2318:1:72195:72222	1578033	1	True				
ANR	1578043	Identifier	SLJIT_MUL_NOT_OVERFLOW		1578033	0					
ANR	1578044	Label	case SLJIT_D_EQUAL :	2319:1:72225:72243	1578033	2	True				
ANR	1578045	Identifier	SLJIT_D_EQUAL		1578033	0					
ANR	1578046	ReturnStatement	return 0x00000000 ;	2320:2:72247:72264	1578033	3	True				
ANR	1578047	PrimaryExpression	0x00000000		1578033	0					
ANR	1578048	Label	case SLJIT_NOT_EQUAL :	2322:1:72268:72288	1578033	4	True				
ANR	1578049	Identifier	SLJIT_NOT_EQUAL		1578033	0					
ANR	1578050	Label	case SLJIT_MUL_OVERFLOW :	2323:1:72291:72314	1578033	5	True				
ANR	1578051	Identifier	SLJIT_MUL_OVERFLOW		1578033	0					
ANR	1578052	Label	case SLJIT_D_NOT_EQUAL :	2324:1:72317:72339	1578033	6	True				
ANR	1578053	Identifier	SLJIT_D_NOT_EQUAL		1578033	0					
ANR	1578054	ReturnStatement	return 0x10000000 ;	2325:2:72343:72360	1578033	7	True				
ANR	1578055	PrimaryExpression	0x10000000		1578033	0					
ANR	1578056	Label	case SLJIT_LESS :	2327:1:72364:72379	1578033	8	True				
ANR	1578057	Identifier	SLJIT_LESS		1578033	0					
ANR	1578058	Label	case SLJIT_D_LESS :	2328:1:72382:72399	1578033	9	True				
ANR	1578059	Identifier	SLJIT_D_LESS		1578033	0					
ANR	1578060	ReturnStatement	return 0x30000000 ;	2329:2:72403:72420	1578033	10	True				
ANR	1578061	PrimaryExpression	0x30000000		1578033	0					
ANR	1578062	Label	case SLJIT_GREATER_EQUAL :	2331:1:72424:72448	1578033	11	True				
ANR	1578063	Identifier	SLJIT_GREATER_EQUAL		1578033	0					
ANR	1578064	Label	case SLJIT_D_GREATER_EQUAL :	2332:1:72451:72477	1578033	12	True				
ANR	1578065	Identifier	SLJIT_D_GREATER_EQUAL		1578033	0					
ANR	1578066	ReturnStatement	return 0x20000000 ;	2333:2:72481:72498	1578033	13	True				
ANR	1578067	PrimaryExpression	0x20000000		1578033	0					
ANR	1578068	Label	case SLJIT_GREATER :	2335:1:72502:72520	1578033	14	True				
ANR	1578069	Identifier	SLJIT_GREATER		1578033	0					
ANR	1578070	Label	case SLJIT_D_GREATER :	2336:1:72523:72543	1578033	15	True				
ANR	1578071	Identifier	SLJIT_D_GREATER		1578033	0					
ANR	1578072	ReturnStatement	return 0x80000000 ;	2337:2:72547:72564	1578033	16	True				
ANR	1578073	PrimaryExpression	0x80000000		1578033	0					
ANR	1578074	Label	case SLJIT_LESS_EQUAL :	2339:1:72568:72589	1578033	17	True				
ANR	1578075	Identifier	SLJIT_LESS_EQUAL		1578033	0					
ANR	1578076	Label	case SLJIT_D_LESS_EQUAL :	2340:1:72592:72615	1578033	18	True				
ANR	1578077	Identifier	SLJIT_D_LESS_EQUAL		1578033	0					
ANR	1578078	ReturnStatement	return 0x90000000 ;	2341:2:72619:72636	1578033	19	True				
ANR	1578079	PrimaryExpression	0x90000000		1578033	0					
ANR	1578080	Label	case SLJIT_SIG_LESS :	2343:1:72640:72659	1578033	20	True				
ANR	1578081	Identifier	SLJIT_SIG_LESS		1578033	0					
ANR	1578082	ReturnStatement	return 0xb0000000 ;	2344:2:72663:72680	1578033	21	True				
ANR	1578083	PrimaryExpression	0xb0000000		1578033	0					
ANR	1578084	Label	case SLJIT_SIG_GREATER_EQUAL :	2346:1:72684:72712	1578033	22	True				
ANR	1578085	Identifier	SLJIT_SIG_GREATER_EQUAL		1578033	0					
ANR	1578086	ReturnStatement	return 0xa0000000 ;	2347:2:72716:72733	1578033	23	True				
ANR	1578087	PrimaryExpression	0xa0000000		1578033	0					
ANR	1578088	Label	case SLJIT_SIG_GREATER :	2349:1:72737:72759	1578033	24	True				
ANR	1578089	Identifier	SLJIT_SIG_GREATER		1578033	0					
ANR	1578090	ReturnStatement	return 0xc0000000 ;	2350:2:72763:72780	1578033	25	True				
ANR	1578091	PrimaryExpression	0xc0000000		1578033	0					
ANR	1578092	Label	case SLJIT_SIG_LESS_EQUAL :	2352:1:72784:72809	1578033	26	True				
ANR	1578093	Identifier	SLJIT_SIG_LESS_EQUAL		1578033	0					
ANR	1578094	ReturnStatement	return 0xd0000000 ;	2353:2:72813:72830	1578033	27	True				
ANR	1578095	PrimaryExpression	0xd0000000		1578033	0					
ANR	1578096	Label	case SLJIT_OVERFLOW :	2355:1:72834:72853	1578033	28	True				
ANR	1578097	Identifier	SLJIT_OVERFLOW		1578033	0					
ANR	1578098	Label	case SLJIT_D_UNORDERED :	2356:1:72856:72878	1578033	29	True				
ANR	1578099	Identifier	SLJIT_D_UNORDERED		1578033	0					
ANR	1578100	ReturnStatement	return 0x60000000 ;	2357:2:72882:72899	1578033	30	True				
ANR	1578101	PrimaryExpression	0x60000000		1578033	0					
ANR	1578102	Label	case SLJIT_NOT_OVERFLOW :	2359:1:72903:72926	1578033	31	True				
ANR	1578103	Identifier	SLJIT_NOT_OVERFLOW		1578033	0					
ANR	1578104	Label	case SLJIT_D_ORDERED :	2360:1:72929:72949	1578033	32	True				
ANR	1578105	Identifier	SLJIT_D_ORDERED		1578033	0					
ANR	1578106	ReturnStatement	return 0x70000000 ;	2361:2:72953:72970	1578033	33	True				
ANR	1578107	PrimaryExpression	0x70000000		1578033	0					
ANR	1578108	Label	default :	2363:1:72974:72981	1578033	34	True				
ANR	1578109	Identifier	default		1578033	0					
ANR	1578110	ExpressionStatement	SLJIT_ASSERT ( type >= SLJIT_JUMP && type <= SLJIT_CALL3 )	2364:2:72985:73040	1578033	35	True				
ANR	1578111	CallExpression	SLJIT_ASSERT ( type >= SLJIT_JUMP && type <= SLJIT_CALL3 )		1578033	0					
ANR	1578112	Callee	SLJIT_ASSERT		1578033	0					
ANR	1578113	Identifier	SLJIT_ASSERT		1578033	0					
ANR	1578114	ArgumentList	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1578033	1					
ANR	1578115	Argument	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1578033	0					
ANR	1578116	AndExpression	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1578033	0		&&			
ANR	1578117	RelationalExpression	type >= SLJIT_JUMP		1578033	0		>=			
ANR	1578118	Identifier	type		1578033	0					
ANR	1578119	Identifier	SLJIT_JUMP		1578033	1					
ANR	1578120	RelationalExpression	type <= SLJIT_CALL3		1578033	1		<=			
ANR	1578121	Identifier	type		1578033	0					
ANR	1578122	Identifier	SLJIT_CALL3		1578033	1					
ANR	1578123	ReturnStatement	return 0xe0000000 ;	2365:2:73044:73061	1578033	36	True				
ANR	1578124	PrimaryExpression	0xe0000000		1578033	0					
ANR	1578125	ReturnType	static sljit_uw		1578033	1					
ANR	1578126	Identifier	get_cc		1578033	2					
ANR	1578127	ParameterList	sljit_si type		1578033	3					
ANR	1578128	Parameter	sljit_si type	2314:23:72141:72153	1578033	0	True				
ANR	1578129	ParameterType	sljit_si		1578033	0					
ANR	1578130	Identifier	type		1578033	1					
ANR	1578131	CFGEntryNode	ENTRY		1578033		True				
ANR	1578132	CFGExitNode	EXIT		1578033		True				
ANR	1578133	Symbol	SLJIT_JUMP		1578033						
ANR	1578134	Symbol	SLJIT_CALL3		1578033						
ANR	1578135	Symbol	type		1578033						
ANR	1578136	Function	sljit_emit_label	2369:25:73094:73516							
ANR	1578137	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1578136	0					
ANR	1578138	CompoundStatement		2370:0:73164:73516	1578136	0					
ANR	1578139	IdentifierDeclStatement	struct sljit_label * label ;	2371:1:73167:73192	1578136	0	True				
ANR	1578140	IdentifierDecl	* label		1578136	0					
ANR	1578141	IdentifierDeclType	struct sljit_label *		1578136	0					
ANR	1578142	Identifier	label		1578136	1					
ANR	1578143	ExpressionStatement	CHECK_ERROR_PTR ( )	2373:1:73196:73213	1578136	1	True				
ANR	1578144	CallExpression	CHECK_ERROR_PTR ( )		1578136	0					
ANR	1578145	Callee	CHECK_ERROR_PTR		1578136	0					
ANR	1578146	Identifier	CHECK_ERROR_PTR		1578136	0					
ANR	1578147	ArgumentList			1578136	1					
ANR	1578148	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	2374:1:73216:73259	1578136	2	True				
ANR	1578149	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1578136	0					
ANR	1578150	Callee	CHECK_PTR		1578136	0					
ANR	1578151	Identifier	CHECK_PTR		1578136	0					
ANR	1578152	ArgumentList	check_sljit_emit_label ( compiler )		1578136	1					
ANR	1578153	Argument	check_sljit_emit_label ( compiler )		1578136	0					
ANR	1578154	CallExpression	check_sljit_emit_label ( compiler )		1578136	0					
ANR	1578155	Callee	check_sljit_emit_label		1578136	0					
ANR	1578156	Identifier	check_sljit_emit_label		1578136	0					
ANR	1578157	ArgumentList	compiler		1578136	1					
ANR	1578158	Argument	compiler		1578136	0					
ANR	1578159	Identifier	compiler		1578136	0					
ANR	1578160	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1578136	3					
ANR	1578161	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	2376:5:73267:73334	1578136	0	True				
ANR	1578162	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1578136	0		&&			
ANR	1578163	PtrMemberAccess	compiler -> last_label		1578136	0					
ANR	1578164	Identifier	compiler		1578136	0					
ANR	1578165	Identifier	last_label		1578136	1					
ANR	1578166	EqualityExpression	compiler -> last_label -> size == compiler -> size		1578136	1		==			
ANR	1578167	PtrMemberAccess	compiler -> last_label -> size		1578136	0					
ANR	1578168	PtrMemberAccess	compiler -> last_label		1578136	0					
ANR	1578169	Identifier	compiler		1578136	0					
ANR	1578170	Identifier	last_label		1578136	1					
ANR	1578171	Identifier	size		1578136	1					
ANR	1578172	PtrMemberAccess	compiler -> size		1578136	1					
ANR	1578173	Identifier	compiler		1578136	0					
ANR	1578174	Identifier	size		1578136	1					
ANR	1578175	ReturnStatement	return compiler -> last_label ;	2377:2:73339:73366	1578136	1	True				
ANR	1578176	PtrMemberAccess	compiler -> last_label		1578136	0					
ANR	1578177	Identifier	compiler		1578136	0					
ANR	1578178	Identifier	last_label		1578136	1					
ANR	1578179	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	2379:1:73370:73448	1578136	4	True				
ANR	1578180	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1578136	0		=			
ANR	1578181	Identifier	label		1578136	0					
ANR	1578182	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1578136	1					
ANR	1578183	CastTarget	struct sljit_label *		1578136	0					
ANR	1578184	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1578136	1					
ANR	1578185	Callee	ensure_abuf		1578136	0					
ANR	1578186	Identifier	ensure_abuf		1578136	0					
ANR	1578187	ArgumentList	compiler		1578136	1					
ANR	1578188	Argument	compiler		1578136	0					
ANR	1578189	Identifier	compiler		1578136	0					
ANR	1578190	Argument	sizeof ( struct sljit_label )		1578136	1					
ANR	1578191	SizeofExpression	sizeof ( struct sljit_label )		1578136	0					
ANR	1578192	Sizeof	sizeof		1578136	0					
ANR	1578193	SizeofOperand	struct sljit_label		1578136	1					
ANR	1578194	ExpressionStatement	PTR_FAIL_IF ( ! label )	2380:1:73451:73470	1578136	5	True				
ANR	1578195	CallExpression	PTR_FAIL_IF ( ! label )		1578136	0					
ANR	1578196	Callee	PTR_FAIL_IF		1578136	0					
ANR	1578197	Identifier	PTR_FAIL_IF		1578136	0					
ANR	1578198	ArgumentList	! label		1578136	1					
ANR	1578199	Argument	! label		1578136	0					
ANR	1578200	UnaryOperationExpression	! label		1578136	0					
ANR	1578201	UnaryOperator	!		1578136	0					
ANR	1578202	Identifier	label		1578136	1					
ANR	1578203	ExpressionStatement	"set_label ( label , compiler )"	2381:1:73473:73499	1578136	6	True				
ANR	1578204	CallExpression	"set_label ( label , compiler )"		1578136	0					
ANR	1578205	Callee	set_label		1578136	0					
ANR	1578206	Identifier	set_label		1578136	0					
ANR	1578207	ArgumentList	label		1578136	1					
ANR	1578208	Argument	label		1578136	0					
ANR	1578209	Identifier	label		1578136	0					
ANR	1578210	Argument	compiler		1578136	1					
ANR	1578211	Identifier	compiler		1578136	0					
ANR	1578212	ReturnStatement	return label ;	2382:1:73502:73514	1578136	7	True				
ANR	1578213	Identifier	label		1578136	0					
ANR	1578214	ReturnType	struct sljit_label *		1578136	1					
ANR	1578215	Identifier	sljit_emit_label		1578136	2					
ANR	1578216	ParameterList	struct sljit_compiler * compiler		1578136	3					
ANR	1578217	Parameter	struct sljit_compiler * compiler	2369:62:73131:73161	1578136	0	True				
ANR	1578218	ParameterType	struct sljit_compiler *		1578136	0					
ANR	1578219	Identifier	compiler		1578136	1					
ANR	1578220	CFGEntryNode	ENTRY		1578136		True				
ANR	1578221	CFGExitNode	EXIT		1578136		True				
ANR	1578222	Symbol	* compiler -> last_label		1578136						
ANR	1578223	Symbol	compiler -> last_label -> size		1578136						
ANR	1578224	Symbol	compiler -> last_label		1578136						
ANR	1578225	Symbol	* * compiler		1578136						
ANR	1578226	Symbol	compiler -> size		1578136						
ANR	1578227	Symbol	check_sljit_emit_label		1578136						
ANR	1578228	Symbol	label		1578136						
ANR	1578229	Symbol	* compiler		1578136						
ANR	1578230	Symbol	ensure_abuf		1578136						
ANR	1578231	Symbol	compiler		1578136						
ANR	1578232	Function	sljit_emit_jump	2385:25:73544:74817							
ANR	1578233	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1578232	0					
ANR	1578234	CompoundStatement		2386:0:73627:74817	1578232	0					
ANR	1578235	IdentifierDeclStatement	struct sljit_jump * jump ;	2387:1:73630:73653	1578232	0	True				
ANR	1578236	IdentifierDecl	* jump		1578232	0					
ANR	1578237	IdentifierDeclType	struct sljit_jump *		1578232	0					
ANR	1578238	Identifier	jump		1578232	1					
ANR	1578239	ExpressionStatement	CHECK_ERROR_PTR ( )	2389:1:73657:73674	1578232	1	True				
ANR	1578240	CallExpression	CHECK_ERROR_PTR ( )		1578232	0					
ANR	1578241	Callee	CHECK_ERROR_PTR		1578232	0					
ANR	1578242	Identifier	CHECK_ERROR_PTR		1578232	0					
ANR	1578243	ArgumentList			1578232	1					
ANR	1578244	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	2390:1:73677:73725	1578232	2	True				
ANR	1578245	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1578232	0					
ANR	1578246	Callee	CHECK_PTR		1578232	0					
ANR	1578247	Identifier	CHECK_PTR		1578232	0					
ANR	1578248	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1578232	1					
ANR	1578249	Argument	"check_sljit_emit_jump ( compiler , type )"		1578232	0					
ANR	1578250	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1578232	0					
ANR	1578251	Callee	check_sljit_emit_jump		1578232	0					
ANR	1578252	Identifier	check_sljit_emit_jump		1578232	0					
ANR	1578253	ArgumentList	compiler		1578232	1					
ANR	1578254	Argument	compiler		1578232	0					
ANR	1578255	Identifier	compiler		1578232	0					
ANR	1578256	Argument	type		1578232	1					
ANR	1578257	Identifier	type		1578232	0					
ANR	1578258	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2392:1:73729:73804	1578232	3	True				
ANR	1578259	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1578232	0		=			
ANR	1578260	Identifier	jump		1578232	0					
ANR	1578261	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1578232	1					
ANR	1578262	CastTarget	struct sljit_jump *		1578232	0					
ANR	1578263	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1578232	1					
ANR	1578264	Callee	ensure_abuf		1578232	0					
ANR	1578265	Identifier	ensure_abuf		1578232	0					
ANR	1578266	ArgumentList	compiler		1578232	1					
ANR	1578267	Argument	compiler		1578232	0					
ANR	1578268	Identifier	compiler		1578232	0					
ANR	1578269	Argument	sizeof ( struct sljit_jump )		1578232	1					
ANR	1578270	SizeofExpression	sizeof ( struct sljit_jump )		1578232	0					
ANR	1578271	Sizeof	sizeof		1578232	0					
ANR	1578272	SizeofOperand	struct sljit_jump		1578232	1					
ANR	1578273	ExpressionStatement	PTR_FAIL_IF ( ! jump )	2393:1:73807:73825	1578232	4	True				
ANR	1578274	CallExpression	PTR_FAIL_IF ( ! jump )		1578232	0					
ANR	1578275	Callee	PTR_FAIL_IF		1578232	0					
ANR	1578276	Identifier	PTR_FAIL_IF		1578232	0					
ANR	1578277	ArgumentList	! jump		1578232	1					
ANR	1578278	Argument	! jump		1578232	0					
ANR	1578279	UnaryOperationExpression	! jump		1578232	0					
ANR	1578280	UnaryOperator	!		1578232	0					
ANR	1578281	Identifier	jump		1578232	1					
ANR	1578282	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	2394:1:73828:73882	1578232	5	True				
ANR	1578283	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1578232	0					
ANR	1578284	Callee	set_jump		1578232	0					
ANR	1578285	Identifier	set_jump		1578232	0					
ANR	1578286	ArgumentList	jump		1578232	1					
ANR	1578287	Argument	jump		1578232	0					
ANR	1578288	Identifier	jump		1578232	0					
ANR	1578289	Argument	compiler		1578232	1					
ANR	1578290	Identifier	compiler		1578232	0					
ANR	1578291	Argument	type & SLJIT_REWRITABLE_JUMP		1578232	2					
ANR	1578292	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1578232	0		&			
ANR	1578293	Identifier	type		1578232	0					
ANR	1578294	Identifier	SLJIT_REWRITABLE_JUMP		1578232	1					
ANR	1578295	ExpressionStatement	type &= 0xff	2395:1:73885:73897	1578232	6	True				
ANR	1578296	AssignmentExpression	type &= 0xff		1578232	0		&=			
ANR	1578297	Identifier	type		1578232	0					
ANR	1578298	PrimaryExpression	0xff		1578232	1					
ANR	1578299	IfStatement	if ( type >= SLJIT_FAST_CALL )		1578232	7					
ANR	1578300	Condition	type >= SLJIT_FAST_CALL	2399:5:74015:74037	1578232	0	True				
ANR	1578301	RelationalExpression	type >= SLJIT_FAST_CALL		1578232	0		>=			
ANR	1578302	Identifier	type		1578232	0					
ANR	1578303	Identifier	SLJIT_FAST_CALL		1578232	1					
ANR	1578304	ExpressionStatement	PTR_FAIL_IF ( prepare_blx ( compiler ) )	2400:2:74042:74076	1578232	1	True				
ANR	1578305	CallExpression	PTR_FAIL_IF ( prepare_blx ( compiler ) )		1578232	0					
ANR	1578306	Callee	PTR_FAIL_IF		1578232	0					
ANR	1578307	Identifier	PTR_FAIL_IF		1578232	0					
ANR	1578308	ArgumentList	prepare_blx ( compiler )		1578232	1					
ANR	1578309	Argument	prepare_blx ( compiler )		1578232	0					
ANR	1578310	CallExpression	prepare_blx ( compiler )		1578232	0					
ANR	1578311	Callee	prepare_blx		1578232	0					
ANR	1578312	Identifier	prepare_blx		1578232	0					
ANR	1578313	ArgumentList	compiler		1578232	1					
ANR	1578314	Argument	compiler		1578232	0					
ANR	1578315	Identifier	compiler		1578232	0					
ANR	1578316	ExpressionStatement	"PTR_FAIL_IF ( push_inst_with_unique_literal ( compiler , ( ( EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) ) & ~COND_MASK ) | get_cc ( type ) , 0 ) )"	2401:1:74079:74268	1578232	8	True				
ANR	1578317	CallExpression	"PTR_FAIL_IF ( push_inst_with_unique_literal ( compiler , ( ( EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) ) & ~COND_MASK ) | get_cc ( type ) , 0 ) )"		1578232	0					
ANR	1578318	Callee	PTR_FAIL_IF		1578232	0					
ANR	1578319	Identifier	PTR_FAIL_IF		1578232	0					
ANR	1578320	ArgumentList	"push_inst_with_unique_literal ( compiler , ( ( EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) ) & ~COND_MASK ) | get_cc ( type ) , 0 )"		1578232	1					
ANR	1578321	Argument	"push_inst_with_unique_literal ( compiler , ( ( EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) ) & ~COND_MASK ) | get_cc ( type ) , 0 )"		1578232	0					
ANR	1578322	CallExpression	"push_inst_with_unique_literal ( compiler , ( ( EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) ) & ~COND_MASK ) | get_cc ( type ) , 0 )"		1578232	0					
ANR	1578323	Callee	push_inst_with_unique_literal		1578232	0					
ANR	1578324	Identifier	push_inst_with_unique_literal		1578232	0					
ANR	1578325	ArgumentList	compiler		1578232	1					
ANR	1578326	Argument	compiler		1578232	0					
ANR	1578327	Identifier	compiler		1578232	0					
ANR	1578328	Argument	"( ( EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) ) & ~COND_MASK ) | get_cc ( type )"		1578232	1					
ANR	1578329	InclusiveOrExpression	"( ( EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) ) & ~COND_MASK ) | get_cc ( type )"		1578232	0		|			
ANR	1578330	BitAndExpression	"( EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) ) & ~COND_MASK"		1578232	0		&			
ANR	1578331	CallExpression	"EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 )"		1578232	0					
ANR	1578332	Callee	EMIT_DATA_TRANSFER		1578232	0					
ANR	1578333	Identifier	EMIT_DATA_TRANSFER		1578232	0					
ANR	1578334	ArgumentList	WORD_DATA | LOAD_DATA		1578232	1					
ANR	1578335	Argument	WORD_DATA | LOAD_DATA		1578232	0					
ANR	1578336	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1578232	0		|			
ANR	1578337	Identifier	WORD_DATA		1578232	0					
ANR	1578338	Identifier	LOAD_DATA		1578232	1					
ANR	1578339	Argument	1		1578232	1					
ANR	1578340	PrimaryExpression	1		1578232	0					
ANR	1578341	Argument	0		1578232	2					
ANR	1578342	PrimaryExpression	0		1578232	0					
ANR	1578343	Argument	type <= SLJIT_JUMP ? TMP_PC : TMP_REG1		1578232	3					
ANR	1578344	ConditionalExpression	type <= SLJIT_JUMP ? TMP_PC : TMP_REG1		1578232	0					
ANR	1578345	Condition	type <= SLJIT_JUMP		1578232	0					
ANR	1578346	RelationalExpression	type <= SLJIT_JUMP		1578232	0		<=			
ANR	1578347	Identifier	type		1578232	0					
ANR	1578348	Identifier	SLJIT_JUMP		1578232	1					
ANR	1578349	Identifier	TMP_PC		1578232	1					
ANR	1578350	Identifier	TMP_REG1		1578232	2					
ANR	1578351	Argument	TMP_PC		1578232	4					
ANR	1578352	Identifier	TMP_PC		1578232	0					
ANR	1578353	Argument	0		1578232	5					
ANR	1578354	PrimaryExpression	0		1578232	0					
ANR	1578355	Identifier	~COND_MASK		1578232	1					
ANR	1578356	CallExpression	get_cc ( type )		1578232	1					
ANR	1578357	Callee	get_cc		1578232	0					
ANR	1578358	Identifier	get_cc		1578232	0					
ANR	1578359	ArgumentList	type		1578232	1					
ANR	1578360	Argument	type		1578232	0					
ANR	1578361	Identifier	type		1578232	0					
ANR	1578362	Argument	0		1578232	2					
ANR	1578363	PrimaryExpression	0		1578232	0					
ANR	1578364	IfStatement	if ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1578232	9					
ANR	1578365	Condition	jump -> flags & SLJIT_REWRITABLE_JUMP	2404:5:74276:74310	1578232	0	True				
ANR	1578366	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1578232	0		&			
ANR	1578367	PtrMemberAccess	jump -> flags		1578232	0					
ANR	1578368	Identifier	jump		1578232	0					
ANR	1578369	Identifier	flags		1578232	1					
ANR	1578370	Identifier	SLJIT_REWRITABLE_JUMP		1578232	1					
ANR	1578371	CompoundStatement		19:42:685:685	1578232	1					
ANR	1578372	ExpressionStatement	jump -> addr = compiler -> size	2405:2:74317:74344	1578232	0	True				
ANR	1578373	AssignmentExpression	jump -> addr = compiler -> size		1578232	0		=			
ANR	1578374	PtrMemberAccess	jump -> addr		1578232	0					
ANR	1578375	Identifier	jump		1578232	0					
ANR	1578376	Identifier	addr		1578232	1					
ANR	1578377	PtrMemberAccess	compiler -> size		1578232	1					
ANR	1578378	Identifier	compiler		1578232	0					
ANR	1578379	Identifier	size		1578232	1					
ANR	1578380	ExpressionStatement	compiler -> patches ++	2406:2:74348:74367	1578232	1	True				
ANR	1578381	PostIncDecOperationExpression	compiler -> patches ++		1578232	0					
ANR	1578382	PtrMemberAccess	compiler -> patches		1578232	0					
ANR	1578383	Identifier	compiler		1578232	0					
ANR	1578384	Identifier	patches		1578232	1					
ANR	1578385	IncDec	++		1578232	1					
ANR	1578386	IfStatement	if ( type >= SLJIT_FAST_CALL )		1578232	10					
ANR	1578387	Condition	type >= SLJIT_FAST_CALL	2409:5:74378:74400	1578232	0	True				
ANR	1578388	RelationalExpression	type >= SLJIT_FAST_CALL		1578232	0		>=			
ANR	1578389	Identifier	type		1578232	0					
ANR	1578390	Identifier	SLJIT_FAST_CALL		1578232	1					
ANR	1578391	CompoundStatement		24:30:775:775	1578232	1					
ANR	1578392	ExpressionStatement	jump -> flags |= IS_BL	2410:2:74407:74427	1578232	0	True				
ANR	1578393	AssignmentExpression	jump -> flags |= IS_BL		1578232	0		|=			
ANR	1578394	PtrMemberAccess	jump -> flags		1578232	0					
ANR	1578395	Identifier	jump		1578232	0					
ANR	1578396	Identifier	flags		1578232	1					
ANR	1578397	Identifier	IS_BL		1578232	1					
ANR	1578398	ExpressionStatement	PTR_FAIL_IF ( emit_blx ( compiler ) )	2411:2:74431:74462	1578232	1	True				
ANR	1578399	CallExpression	PTR_FAIL_IF ( emit_blx ( compiler ) )		1578232	0					
ANR	1578400	Callee	PTR_FAIL_IF		1578232	0					
ANR	1578401	Identifier	PTR_FAIL_IF		1578232	0					
ANR	1578402	ArgumentList	emit_blx ( compiler )		1578232	1					
ANR	1578403	Argument	emit_blx ( compiler )		1578232	0					
ANR	1578404	CallExpression	emit_blx ( compiler )		1578232	0					
ANR	1578405	Callee	emit_blx		1578232	0					
ANR	1578406	Identifier	emit_blx		1578232	0					
ANR	1578407	ArgumentList	compiler		1578232	1					
ANR	1578408	Argument	compiler		1578232	0					
ANR	1578409	Identifier	compiler		1578232	0					
ANR	1578410	IfStatement	if ( ! ( jump -> flags & SLJIT_REWRITABLE_JUMP ) )		1578232	11					
ANR	1578411	Condition	! ( jump -> flags & SLJIT_REWRITABLE_JUMP )	2414:5:74473:74510	1578232	0	True				
ANR	1578412	UnaryOperationExpression	! ( jump -> flags & SLJIT_REWRITABLE_JUMP )		1578232	0					
ANR	1578413	UnaryOperator	!		1578232	0					
ANR	1578414	BitAndExpression	jump -> flags & SLJIT_REWRITABLE_JUMP		1578232	1		&			
ANR	1578415	PtrMemberAccess	jump -> flags		1578232	0					
ANR	1578416	Identifier	jump		1578232	0					
ANR	1578417	Identifier	flags		1578232	1					
ANR	1578418	Identifier	SLJIT_REWRITABLE_JUMP		1578232	1					
ANR	1578419	ExpressionStatement	jump -> addr = compiler -> size	2415:2:74515:74542	1578232	1	True				
ANR	1578420	AssignmentExpression	jump -> addr = compiler -> size		1578232	0		=			
ANR	1578421	PtrMemberAccess	jump -> addr		1578232	0					
ANR	1578422	Identifier	jump		1578232	0					
ANR	1578423	Identifier	addr		1578232	1					
ANR	1578424	PtrMemberAccess	compiler -> size		1578232	1					
ANR	1578425	Identifier	compiler		1578232	0					
ANR	1578426	Identifier	size		1578232	1					
ANR	1578427	ReturnStatement	return jump ;	2423:1:74804:74815	1578232	12	True				
ANR	1578428	Identifier	jump		1578232	0					
ANR	1578429	ReturnType	struct sljit_jump *		1578232	1					
ANR	1578430	Identifier	sljit_emit_jump		1578232	2					
ANR	1578431	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1578232	3					
ANR	1578432	Parameter	struct sljit_compiler * compiler	2385:60:73579:73609	1578232	0	True				
ANR	1578433	ParameterType	struct sljit_compiler *		1578232	0					
ANR	1578434	Identifier	compiler		1578232	1					
ANR	1578435	Parameter	sljit_si type	2385:93:73612:73624	1578232	1	True				
ANR	1578436	ParameterType	sljit_si		1578232	0					
ANR	1578437	Identifier	type		1578232	1					
ANR	1578438	CFGEntryNode	ENTRY		1578232		True				
ANR	1578439	CFGExitNode	EXIT		1578232		True				
ANR	1578440	Symbol	TMP_PC		1578232						
ANR	1578441	Symbol	SLJIT_JUMP		1578232						
ANR	1578442	Symbol	TMP_REG1		1578232						
ANR	1578443	Symbol	LOAD_DATA		1578232						
ANR	1578444	Symbol	* jump		1578232						
ANR	1578445	Symbol	compiler -> patches		1578232						
ANR	1578446	Symbol	jump -> flags		1578232						
ANR	1578447	Symbol	* compiler		1578232						
ANR	1578448	Symbol	type		1578232						
ANR	1578449	Symbol	push_inst_with_unique_literal		1578232						
ANR	1578450	Symbol	IS_BL		1578232						
ANR	1578451	Symbol	SLJIT_FAST_CALL		1578232						
ANR	1578452	Symbol	emit_blx		1578232						
ANR	1578453	Symbol	SLJIT_REWRITABLE_JUMP		1578232						
ANR	1578454	Symbol	compiler		1578232						
ANR	1578455	Symbol	WORD_DATA		1578232						
ANR	1578456	Symbol	jump		1578232						
ANR	1578457	Symbol	get_cc		1578232						
ANR	1578458	Symbol	jump -> addr		1578232						
ANR	1578459	Symbol	ensure_abuf		1578232						
ANR	1578460	Symbol	prepare_blx		1578232						
ANR	1578461	Symbol	~COND_MASK		1578232						
ANR	1578462	Symbol	compiler -> size		1578232						
ANR	1578463	Symbol	check_sljit_emit_jump		1578232						
ANR	1578464	Symbol	EMIT_DATA_TRANSFER		1578232						
ANR	1578465	Function	sljit_emit_ijump	2426:0:74820:76182							
ANR	1578466	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1578465	0					
ANR	1578467	CompoundStatement		2427:0:74948:76182	1578465	0					
ANR	1578468	IdentifierDeclStatement	struct sljit_jump * jump ;	2428:1:74951:74974	1578465	0	True				
ANR	1578469	IdentifierDecl	* jump		1578465	0					
ANR	1578470	IdentifierDeclType	struct sljit_jump *		1578465	0					
ANR	1578471	Identifier	jump		1578465	1					
ANR	1578472	ExpressionStatement	CHECK_ERROR ( )	2430:1:74978:74991	1578465	1	True				
ANR	1578473	CallExpression	CHECK_ERROR ( )		1578465	0					
ANR	1578474	Callee	CHECK_ERROR		1578465	0					
ANR	1578475	Identifier	CHECK_ERROR		1578465	0					
ANR	1578476	ArgumentList			1578465	1					
ANR	1578477	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	2431:1:74994:75050	1578465	2	True				
ANR	1578478	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1578465	0					
ANR	1578479	Callee	CHECK		1578465	0					
ANR	1578480	Identifier	CHECK		1578465	0					
ANR	1578481	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1578465	1					
ANR	1578482	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1578465	0					
ANR	1578483	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1578465	0					
ANR	1578484	Callee	check_sljit_emit_ijump		1578465	0					
ANR	1578485	Identifier	check_sljit_emit_ijump		1578465	0					
ANR	1578486	ArgumentList	compiler		1578465	1					
ANR	1578487	Argument	compiler		1578465	0					
ANR	1578488	Identifier	compiler		1578465	0					
ANR	1578489	Argument	type		1578465	1					
ANR	1578490	Identifier	type		1578465	0					
ANR	1578491	Argument	src		1578465	2					
ANR	1578492	Identifier	src		1578465	0					
ANR	1578493	Argument	srcw		1578465	3					
ANR	1578494	Identifier	srcw		1578465	0					
ANR	1578495	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2432:1:75053:75083	1578465	3	True				
ANR	1578496	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1578465	0					
ANR	1578497	Callee	ADJUST_LOCAL_OFFSET		1578465	0					
ANR	1578498	Identifier	ADJUST_LOCAL_OFFSET		1578465	0					
ANR	1578499	ArgumentList	src		1578465	1					
ANR	1578500	Argument	src		1578465	0					
ANR	1578501	Identifier	src		1578465	0					
ANR	1578502	Argument	srcw		1578465	1					
ANR	1578503	Identifier	srcw		1578465	0					
ANR	1578504	IfStatement	if ( ! ( src & SLJIT_IMM ) )		1578465	4					
ANR	1578505	Condition	! ( src & SLJIT_IMM )	2435:5:75144:75161	1578465	0	True				
ANR	1578506	UnaryOperationExpression	! ( src & SLJIT_IMM )		1578465	0					
ANR	1578507	UnaryOperator	!		1578465	0					
ANR	1578508	BitAndExpression	src & SLJIT_IMM		1578465	1		&			
ANR	1578509	Identifier	src		1578465	0					
ANR	1578510	Identifier	SLJIT_IMM		1578465	1					
ANR	1578511	CompoundStatement		9:25:215:215	1578465	1					
ANR	1578512	IfStatement	if ( FAST_IS_REG ( src ) )		1578465	0					
ANR	1578513	Condition	FAST_IS_REG ( src )	2436:6:75172:75187	1578465	0	True				
ANR	1578514	CallExpression	FAST_IS_REG ( src )		1578465	0					
ANR	1578515	Callee	FAST_IS_REG		1578465	0					
ANR	1578516	Identifier	FAST_IS_REG		1578465	0					
ANR	1578517	ArgumentList	src		1578465	1					
ANR	1578518	Argument	src		1578465	0					
ANR	1578519	Identifier	src		1578465	0					
ANR	1578520	ReturnStatement	"return push_inst ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RM ( src ) ) ;"	2437:3:75193:75262	1578465	1	True				
ANR	1578521	CallExpression	"push_inst ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RM ( src ) )"		1578465	0					
ANR	1578522	Callee	push_inst		1578465	0					
ANR	1578523	Identifier	push_inst		1578465	0					
ANR	1578524	ArgumentList	compiler		1578465	1					
ANR	1578525	Argument	compiler		1578465	0					
ANR	1578526	Identifier	compiler		1578465	0					
ANR	1578527	Argument	( type <= SLJIT_JUMP ? BX : BLX ) | RM ( src )		1578465	1					
ANR	1578528	InclusiveOrExpression	( type <= SLJIT_JUMP ? BX : BLX ) | RM ( src )		1578465	0		|			
ANR	1578529	ConditionalExpression	type <= SLJIT_JUMP ? BX : BLX		1578465	0					
ANR	1578530	Condition	type <= SLJIT_JUMP		1578465	0					
ANR	1578531	RelationalExpression	type <= SLJIT_JUMP		1578465	0		<=			
ANR	1578532	Identifier	type		1578465	0					
ANR	1578533	Identifier	SLJIT_JUMP		1578465	1					
ANR	1578534	Identifier	BX		1578465	1					
ANR	1578535	Identifier	BLX		1578465	2					
ANR	1578536	CallExpression	RM ( src )		1578465	1					
ANR	1578537	Callee	RM		1578465	0					
ANR	1578538	Identifier	RM		1578465	0					
ANR	1578539	ArgumentList	src		1578465	1					
ANR	1578540	Argument	src		1578465	0					
ANR	1578541	Identifier	src		1578465	0					
ANR	1578542	ExpressionStatement	SLJIT_ASSERT ( src & SLJIT_MEM )	2439:2:75267:75296	1578465	1	True				
ANR	1578543	CallExpression	SLJIT_ASSERT ( src & SLJIT_MEM )		1578465	0					
ANR	1578544	Callee	SLJIT_ASSERT		1578465	0					
ANR	1578545	Identifier	SLJIT_ASSERT		1578465	0					
ANR	1578546	ArgumentList	src & SLJIT_MEM		1578465	1					
ANR	1578547	Argument	src & SLJIT_MEM		1578465	0					
ANR	1578548	BitAndExpression	src & SLJIT_MEM		1578465	0		&			
ANR	1578549	Identifier	src		1578465	0					
ANR	1578550	Identifier	SLJIT_MEM		1578465	1					
ANR	1578551	ExpressionStatement	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw ) )"	2440:2:75300:75374	1578465	2	True				
ANR	1578552	CallExpression	"FAIL_IF ( emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw ) )"		1578465	0					
ANR	1578553	Callee	FAIL_IF		1578465	0					
ANR	1578554	Identifier	FAIL_IF		1578465	0					
ANR	1578555	ArgumentList	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw )"		1578465	1					
ANR	1578556	Argument	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw )"		1578465	0					
ANR	1578557	CallExpression	"emit_op_mem ( compiler , WORD_DATA | LOAD_DATA , TMP_REG2 , src , srcw )"		1578465	0					
ANR	1578558	Callee	emit_op_mem		1578465	0					
ANR	1578559	Identifier	emit_op_mem		1578465	0					
ANR	1578560	ArgumentList	compiler		1578465	1					
ANR	1578561	Argument	compiler		1578465	0					
ANR	1578562	Identifier	compiler		1578465	0					
ANR	1578563	Argument	WORD_DATA | LOAD_DATA		1578465	1					
ANR	1578564	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1578465	0		|			
ANR	1578565	Identifier	WORD_DATA		1578465	0					
ANR	1578566	Identifier	LOAD_DATA		1578465	1					
ANR	1578567	Argument	TMP_REG2		1578465	2					
ANR	1578568	Identifier	TMP_REG2		1578465	0					
ANR	1578569	Argument	src		1578465	3					
ANR	1578570	Identifier	src		1578465	0					
ANR	1578571	Argument	srcw		1578465	4					
ANR	1578572	Identifier	srcw		1578465	0					
ANR	1578573	ReturnStatement	"return push_inst ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RM ( TMP_REG2 ) ) ;"	2441:2:75378:75452	1578465	3	True				
ANR	1578574	CallExpression	"push_inst ( compiler , ( type <= SLJIT_JUMP ? BX : BLX ) | RM ( TMP_REG2 ) )"		1578465	0					
ANR	1578575	Callee	push_inst		1578465	0					
ANR	1578576	Identifier	push_inst		1578465	0					
ANR	1578577	ArgumentList	compiler		1578465	1					
ANR	1578578	Argument	compiler		1578465	0					
ANR	1578579	Identifier	compiler		1578465	0					
ANR	1578580	Argument	( type <= SLJIT_JUMP ? BX : BLX ) | RM ( TMP_REG2 )		1578465	1					
ANR	1578581	InclusiveOrExpression	( type <= SLJIT_JUMP ? BX : BLX ) | RM ( TMP_REG2 )		1578465	0		|			
ANR	1578582	ConditionalExpression	type <= SLJIT_JUMP ? BX : BLX		1578465	0					
ANR	1578583	Condition	type <= SLJIT_JUMP		1578465	0					
ANR	1578584	RelationalExpression	type <= SLJIT_JUMP		1578465	0		<=			
ANR	1578585	Identifier	type		1578465	0					
ANR	1578586	Identifier	SLJIT_JUMP		1578465	1					
ANR	1578587	Identifier	BX		1578465	1					
ANR	1578588	Identifier	BLX		1578465	2					
ANR	1578589	CallExpression	RM ( TMP_REG2 )		1578465	1					
ANR	1578590	Callee	RM		1578465	0					
ANR	1578591	Identifier	RM		1578465	0					
ANR	1578592	ArgumentList	TMP_REG2		1578465	1					
ANR	1578593	Argument	TMP_REG2		1578465	0					
ANR	1578594	Identifier	TMP_REG2		1578465	0					
ANR	1578595	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2444:1:75459:75534	1578465	5	True				
ANR	1578596	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1578465	0		=			
ANR	1578597	Identifier	jump		1578465	0					
ANR	1578598	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1578465	1					
ANR	1578599	CastTarget	struct sljit_jump *		1578465	0					
ANR	1578600	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1578465	1					
ANR	1578601	Callee	ensure_abuf		1578465	0					
ANR	1578602	Identifier	ensure_abuf		1578465	0					
ANR	1578603	ArgumentList	compiler		1578465	1					
ANR	1578604	Argument	compiler		1578465	0					
ANR	1578605	Identifier	compiler		1578465	0					
ANR	1578606	Argument	sizeof ( struct sljit_jump )		1578465	1					
ANR	1578607	SizeofExpression	sizeof ( struct sljit_jump )		1578465	0					
ANR	1578608	Sizeof	sizeof		1578465	0					
ANR	1578609	SizeofOperand	struct sljit_jump		1578465	1					
ANR	1578610	ExpressionStatement	FAIL_IF ( ! jump )	2445:1:75537:75551	1578465	6	True				
ANR	1578611	CallExpression	FAIL_IF ( ! jump )		1578465	0					
ANR	1578612	Callee	FAIL_IF		1578465	0					
ANR	1578613	Identifier	FAIL_IF		1578465	0					
ANR	1578614	ArgumentList	! jump		1578465	1					
ANR	1578615	Argument	! jump		1578465	0					
ANR	1578616	UnaryOperationExpression	! jump		1578465	0					
ANR	1578617	UnaryOperator	!		1578465	0					
ANR	1578618	Identifier	jump		1578465	1					
ANR	1578619	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 ) )"	2446:1:75554:75631	1578465	7	True				
ANR	1578620	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 ) )"		1578465	0					
ANR	1578621	Callee	set_jump		1578465	0					
ANR	1578622	Identifier	set_jump		1578465	0					
ANR	1578623	ArgumentList	jump		1578465	1					
ANR	1578624	Argument	jump		1578465	0					
ANR	1578625	Identifier	jump		1578465	0					
ANR	1578626	Argument	compiler		1578465	1					
ANR	1578627	Identifier	compiler		1578465	0					
ANR	1578628	Argument	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 )		1578465	2					
ANR	1578629	InclusiveOrExpression	JUMP_ADDR | ( ( type >= SLJIT_FAST_CALL ) ? IS_BL : 0 )		1578465	0		|			
ANR	1578630	Identifier	JUMP_ADDR		1578465	0					
ANR	1578631	ConditionalExpression	( type >= SLJIT_FAST_CALL ) ? IS_BL : 0		1578465	1					
ANR	1578632	Condition	type >= SLJIT_FAST_CALL		1578465	0					
ANR	1578633	RelationalExpression	type >= SLJIT_FAST_CALL		1578465	0		>=			
ANR	1578634	Identifier	type		1578465	0					
ANR	1578635	Identifier	SLJIT_FAST_CALL		1578465	1					
ANR	1578636	Identifier	IS_BL		1578465	1					
ANR	1578637	PrimaryExpression	0		1578465	2					
ANR	1578638	ExpressionStatement	jump -> u . target = srcw	2447:1:75634:75655	1578465	8	True				
ANR	1578639	AssignmentExpression	jump -> u . target = srcw		1578465	0		=			
ANR	1578640	MemberAccess	jump -> u . target		1578465	0					
ANR	1578641	PtrMemberAccess	jump -> u		1578465	0					
ANR	1578642	Identifier	jump		1578465	0					
ANR	1578643	Identifier	u		1578465	1					
ANR	1578644	Identifier	target		1578465	1					
ANR	1578645	Identifier	srcw		1578465	1					
ANR	1578646	IfStatement	if ( type >= SLJIT_FAST_CALL )		1578465	9					
ANR	1578647	Condition	type >= SLJIT_FAST_CALL	2450:5:75720:75742	1578465	0	True				
ANR	1578648	RelationalExpression	type >= SLJIT_FAST_CALL		1578465	0		>=			
ANR	1578649	Identifier	type		1578465	0					
ANR	1578650	Identifier	SLJIT_FAST_CALL		1578465	1					
ANR	1578651	ExpressionStatement	FAIL_IF ( prepare_blx ( compiler ) )	2451:2:75747:75777	1578465	1	True				
ANR	1578652	CallExpression	FAIL_IF ( prepare_blx ( compiler ) )		1578465	0					
ANR	1578653	Callee	FAIL_IF		1578465	0					
ANR	1578654	Identifier	FAIL_IF		1578465	0					
ANR	1578655	ArgumentList	prepare_blx ( compiler )		1578465	1					
ANR	1578656	Argument	prepare_blx ( compiler )		1578465	0					
ANR	1578657	CallExpression	prepare_blx ( compiler )		1578465	0					
ANR	1578658	Callee	prepare_blx		1578465	0					
ANR	1578659	Identifier	prepare_blx		1578465	0					
ANR	1578660	ArgumentList	compiler		1578465	1					
ANR	1578661	Argument	compiler		1578465	0					
ANR	1578662	Identifier	compiler		1578465	0					
ANR	1578663	ExpressionStatement	"FAIL_IF ( push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) , 0 ) )"	2452:1:75780:75931	1578465	10	True				
ANR	1578664	CallExpression	"FAIL_IF ( push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) , 0 ) )"		1578465	0					
ANR	1578665	Callee	FAIL_IF		1578465	0					
ANR	1578666	Identifier	FAIL_IF		1578465	0					
ANR	1578667	ArgumentList	"push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) , 0 )"		1578465	1					
ANR	1578668	Argument	"push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) , 0 )"		1578465	0					
ANR	1578669	CallExpression	"push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 ) , 0 )"		1578465	0					
ANR	1578670	Callee	push_inst_with_unique_literal		1578465	0					
ANR	1578671	Identifier	push_inst_with_unique_literal		1578465	0					
ANR	1578672	ArgumentList	compiler		1578465	1					
ANR	1578673	Argument	compiler		1578465	0					
ANR	1578674	Identifier	compiler		1578465	0					
ANR	1578675	Argument	"EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 )"		1578465	1					
ANR	1578676	CallExpression	"EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , type <= SLJIT_JUMP ? TMP_PC : TMP_REG1 , TMP_PC , 0 )"		1578465	0					
ANR	1578677	Callee	EMIT_DATA_TRANSFER		1578465	0					
ANR	1578678	Identifier	EMIT_DATA_TRANSFER		1578465	0					
ANR	1578679	ArgumentList	WORD_DATA | LOAD_DATA		1578465	1					
ANR	1578680	Argument	WORD_DATA | LOAD_DATA		1578465	0					
ANR	1578681	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1578465	0		|			
ANR	1578682	Identifier	WORD_DATA		1578465	0					
ANR	1578683	Identifier	LOAD_DATA		1578465	1					
ANR	1578684	Argument	1		1578465	1					
ANR	1578685	PrimaryExpression	1		1578465	0					
ANR	1578686	Argument	0		1578465	2					
ANR	1578687	PrimaryExpression	0		1578465	0					
ANR	1578688	Argument	type <= SLJIT_JUMP ? TMP_PC : TMP_REG1		1578465	3					
ANR	1578689	ConditionalExpression	type <= SLJIT_JUMP ? TMP_PC : TMP_REG1		1578465	0					
ANR	1578690	Condition	type <= SLJIT_JUMP		1578465	0					
ANR	1578691	RelationalExpression	type <= SLJIT_JUMP		1578465	0		<=			
ANR	1578692	Identifier	type		1578465	0					
ANR	1578693	Identifier	SLJIT_JUMP		1578465	1					
ANR	1578694	Identifier	TMP_PC		1578465	1					
ANR	1578695	Identifier	TMP_REG1		1578465	2					
ANR	1578696	Argument	TMP_PC		1578465	4					
ANR	1578697	Identifier	TMP_PC		1578465	0					
ANR	1578698	Argument	0		1578465	5					
ANR	1578699	PrimaryExpression	0		1578465	0					
ANR	1578700	Argument	0		1578465	2					
ANR	1578701	PrimaryExpression	0		1578465	0					
ANR	1578702	IfStatement	if ( type >= SLJIT_FAST_CALL )		1578465	11					
ANR	1578703	Condition	type >= SLJIT_FAST_CALL	2453:5:75938:75960	1578465	0	True				
ANR	1578704	RelationalExpression	type >= SLJIT_FAST_CALL		1578465	0		>=			
ANR	1578705	Identifier	type		1578465	0					
ANR	1578706	Identifier	SLJIT_FAST_CALL		1578465	1					
ANR	1578707	ExpressionStatement	FAIL_IF ( emit_blx ( compiler ) )	2454:2:75965:75992	1578465	1	True				
ANR	1578708	CallExpression	FAIL_IF ( emit_blx ( compiler ) )		1578465	0					
ANR	1578709	Callee	FAIL_IF		1578465	0					
ANR	1578710	Identifier	FAIL_IF		1578465	0					
ANR	1578711	ArgumentList	emit_blx ( compiler )		1578465	1					
ANR	1578712	Argument	emit_blx ( compiler )		1578465	0					
ANR	1578713	CallExpression	emit_blx ( compiler )		1578465	0					
ANR	1578714	Callee	emit_blx		1578465	0					
ANR	1578715	Identifier	emit_blx		1578465	0					
ANR	1578716	ArgumentList	compiler		1578465	1					
ANR	1578717	Argument	compiler		1578465	0					
ANR	1578718	Identifier	compiler		1578465	0					
ANR	1578719	ExpressionStatement	jump -> addr = compiler -> size	2459:1:76130:76157	1578465	12	True				
ANR	1578720	AssignmentExpression	jump -> addr = compiler -> size		1578465	0		=			
ANR	1578721	PtrMemberAccess	jump -> addr		1578465	0					
ANR	1578722	Identifier	jump		1578465	0					
ANR	1578723	Identifier	addr		1578465	1					
ANR	1578724	PtrMemberAccess	compiler -> size		1578465	1					
ANR	1578725	Identifier	compiler		1578465	0					
ANR	1578726	Identifier	size		1578465	1					
ANR	1578727	ReturnStatement	return SLJIT_SUCCESS ;	2460:1:76160:76180	1578465	13	True				
ANR	1578728	Identifier	SLJIT_SUCCESS		1578465	0					
ANR	1578729	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1578465	1					
ANR	1578730	Identifier	sljit_emit_ijump		1578465	2					
ANR	1578731	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1578465	3					
ANR	1578732	Parameter	struct sljit_compiler * compiler	2426:51:74871:74901	1578465	0	True				
ANR	1578733	ParameterType	struct sljit_compiler *		1578465	0					
ANR	1578734	Identifier	compiler		1578465	1					
ANR	1578735	Parameter	sljit_si type	2426:84:74904:74916	1578465	1	True				
ANR	1578736	ParameterType	sljit_si		1578465	0					
ANR	1578737	Identifier	type		1578465	1					
ANR	1578738	Parameter	sljit_si src	2426:99:74919:74930	1578465	2	True				
ANR	1578739	ParameterType	sljit_si		1578465	0					
ANR	1578740	Identifier	src		1578465	1					
ANR	1578741	Parameter	sljit_sw srcw	2426:113:74933:74945	1578465	3	True				
ANR	1578742	ParameterType	sljit_sw		1578465	0					
ANR	1578743	Identifier	srcw		1578465	1					
ANR	1578744	CFGEntryNode	ENTRY		1578465		True				
ANR	1578745	CFGExitNode	EXIT		1578465		True				
ANR	1578746	Symbol	check_sljit_emit_ijump		1578465						
ANR	1578747	Symbol	TMP_REG2		1578465						
ANR	1578748	Symbol	SLJIT_JUMP		1578465						
ANR	1578749	Symbol	TMP_PC		1578465						
ANR	1578750	Symbol	TMP_REG1		1578465						
ANR	1578751	Symbol	LOAD_DATA		1578465						
ANR	1578752	Symbol	* jump		1578465						
ANR	1578753	Symbol	jump -> u		1578465						
ANR	1578754	Symbol	SLJIT_MEM		1578465						
ANR	1578755	Symbol	JUMP_ADDR		1578465						
ANR	1578756	Symbol	* compiler		1578465						
ANR	1578757	Symbol	type		1578465						
ANR	1578758	Symbol	push_inst_with_unique_literal		1578465						
ANR	1578759	Symbol	BLX		1578465						
ANR	1578760	Symbol	SLJIT_IMM		1578465						
ANR	1578761	Symbol	IS_BL		1578465						
ANR	1578762	Symbol	BX		1578465						
ANR	1578763	Symbol	SLJIT_FAST_CALL		1578465						
ANR	1578764	Symbol	emit_blx		1578465						
ANR	1578765	Symbol	compiler		1578465						
ANR	1578766	Symbol	WORD_DATA		1578465						
ANR	1578767	Symbol	jump		1578465						
ANR	1578768	Symbol	push_inst		1578465						
ANR	1578769	Symbol	FAST_IS_REG		1578465						
ANR	1578770	Symbol	src		1578465						
ANR	1578771	Symbol	srcw		1578465						
ANR	1578772	Symbol	emit_op_mem		1578465						
ANR	1578773	Symbol	jump -> addr		1578465						
ANR	1578774	Symbol	SLJIT_SUCCESS		1578465						
ANR	1578775	Symbol	ensure_abuf		1578465						
ANR	1578776	Symbol	prepare_blx		1578465						
ANR	1578777	Symbol	compiler -> size		1578465						
ANR	1578778	Symbol	jump -> u . target		1578465						
ANR	1578779	Symbol	RM		1578465						
ANR	1578780	Symbol	EMIT_DATA_TRANSFER		1578465						
ANR	1578781	Function	sljit_emit_op_flags	2463:0:76185:78364							
ANR	1578782	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1578781	0					
ANR	1578783	CompoundStatement		2467:0:76361:78364	1578781	0					
ANR	1578784	IdentifierDeclStatement	"sljit_si dst_r , flags = GET_ALL_FLAGS ( op ) ;"	2468:1:76364:76405	1578781	0	True				
ANR	1578785	IdentifierDecl	dst_r		1578781	0					
ANR	1578786	IdentifierDeclType	sljit_si		1578781	0					
ANR	1578787	Identifier	dst_r		1578781	1					
ANR	1578788	IdentifierDecl	flags = GET_ALL_FLAGS ( op )		1578781	1					
ANR	1578789	IdentifierDeclType	sljit_si		1578781	0					
ANR	1578790	Identifier	flags		1578781	1					
ANR	1578791	AssignmentExpression	flags = GET_ALL_FLAGS ( op )		1578781	2		=			
ANR	1578792	Identifier	flags		1578781	0					
ANR	1578793	CallExpression	GET_ALL_FLAGS ( op )		1578781	1					
ANR	1578794	Callee	GET_ALL_FLAGS		1578781	0					
ANR	1578795	Identifier	GET_ALL_FLAGS		1578781	0					
ANR	1578796	ArgumentList	op		1578781	1					
ANR	1578797	Argument	op		1578781	0					
ANR	1578798	Identifier	op		1578781	0					
ANR	1578799	IdentifierDeclStatement	"sljit_uw cc , ins ;"	2469:1:76408:76424	1578781	1	True				
ANR	1578800	IdentifierDecl	cc		1578781	0					
ANR	1578801	IdentifierDeclType	sljit_uw		1578781	0					
ANR	1578802	Identifier	cc		1578781	1					
ANR	1578803	IdentifierDecl	ins		1578781	1					
ANR	1578804	IdentifierDeclType	sljit_uw		1578781	0					
ANR	1578805	Identifier	ins		1578781	1					
ANR	1578806	ExpressionStatement	CHECK_ERROR ( )	2471:1:76428:76441	1578781	2	True				
ANR	1578807	CallExpression	CHECK_ERROR ( )		1578781	0					
ANR	1578808	Callee	CHECK_ERROR		1578781	0					
ANR	1578809	Identifier	CHECK_ERROR		1578781	0					
ANR	1578810	ArgumentList			1578781	1					
ANR	1578811	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	2472:1:76444:76518	1578781	3	True				
ANR	1578812	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1578781	0					
ANR	1578813	Callee	CHECK		1578781	0					
ANR	1578814	Identifier	CHECK		1578781	0					
ANR	1578815	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1578781	1					
ANR	1578816	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1578781	0					
ANR	1578817	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1578781	0					
ANR	1578818	Callee	check_sljit_emit_op_flags		1578781	0					
ANR	1578819	Identifier	check_sljit_emit_op_flags		1578781	0					
ANR	1578820	ArgumentList	compiler		1578781	1					
ANR	1578821	Argument	compiler		1578781	0					
ANR	1578822	Identifier	compiler		1578781	0					
ANR	1578823	Argument	op		1578781	1					
ANR	1578824	Identifier	op		1578781	0					
ANR	1578825	Argument	dst		1578781	2					
ANR	1578826	Identifier	dst		1578781	0					
ANR	1578827	Argument	dstw		1578781	3					
ANR	1578828	Identifier	dstw		1578781	0					
ANR	1578829	Argument	src		1578781	4					
ANR	1578830	Identifier	src		1578781	0					
ANR	1578831	Argument	srcw		1578781	5					
ANR	1578832	Identifier	srcw		1578781	0					
ANR	1578833	Argument	type		1578781	6					
ANR	1578834	Identifier	type		1578781	0					
ANR	1578835	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2473:1:76521:76551	1578781	4	True				
ANR	1578836	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1578781	0					
ANR	1578837	Callee	ADJUST_LOCAL_OFFSET		1578781	0					
ANR	1578838	Identifier	ADJUST_LOCAL_OFFSET		1578781	0					
ANR	1578839	ArgumentList	dst		1578781	1					
ANR	1578840	Argument	dst		1578781	0					
ANR	1578841	Identifier	dst		1578781	0					
ANR	1578842	Argument	dstw		1578781	1					
ANR	1578843	Identifier	dstw		1578781	0					
ANR	1578844	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2474:1:76554:76584	1578781	5	True				
ANR	1578845	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1578781	0					
ANR	1578846	Callee	ADJUST_LOCAL_OFFSET		1578781	0					
ANR	1578847	Identifier	ADJUST_LOCAL_OFFSET		1578781	0					
ANR	1578848	ArgumentList	src		1578781	1					
ANR	1578849	Argument	src		1578781	0					
ANR	1578850	Identifier	src		1578781	0					
ANR	1578851	Argument	srcw		1578781	1					
ANR	1578852	Identifier	srcw		1578781	0					
ANR	1578853	IfStatement	if ( dst == SLJIT_UNUSED )		1578781	6					
ANR	1578854	Condition	dst == SLJIT_UNUSED	2476:5:76592:76610	1578781	0	True				
ANR	1578855	EqualityExpression	dst == SLJIT_UNUSED		1578781	0		==			
ANR	1578856	Identifier	dst		1578781	0					
ANR	1578857	Identifier	SLJIT_UNUSED		1578781	1					
ANR	1578858	ReturnStatement	return SLJIT_SUCCESS ;	2477:2:76615:76635	1578781	1	True				
ANR	1578859	Identifier	SLJIT_SUCCESS		1578781	0					
ANR	1578860	ExpressionStatement	op = GET_OPCODE ( op )	2479:1:76639:76658	1578781	7	True				
ANR	1578861	AssignmentExpression	op = GET_OPCODE ( op )		1578781	0		=			
ANR	1578862	Identifier	op		1578781	0					
ANR	1578863	CallExpression	GET_OPCODE ( op )		1578781	1					
ANR	1578864	Callee	GET_OPCODE		1578781	0					
ANR	1578865	Identifier	GET_OPCODE		1578781	0					
ANR	1578866	ArgumentList	op		1578781	1					
ANR	1578867	Argument	op		1578781	0					
ANR	1578868	Identifier	op		1578781	0					
ANR	1578869	ExpressionStatement	cc = get_cc ( type & 0xff )	2480:1:76661:76685	1578781	8	True				
ANR	1578870	AssignmentExpression	cc = get_cc ( type & 0xff )		1578781	0		=			
ANR	1578871	Identifier	cc		1578781	0					
ANR	1578872	CallExpression	get_cc ( type & 0xff )		1578781	1					
ANR	1578873	Callee	get_cc		1578781	0					
ANR	1578874	Identifier	get_cc		1578781	0					
ANR	1578875	ArgumentList	type & 0xff		1578781	1					
ANR	1578876	Argument	type & 0xff		1578781	0					
ANR	1578877	BitAndExpression	type & 0xff		1578781	0		&			
ANR	1578878	Identifier	type		1578781	0					
ANR	1578879	PrimaryExpression	0xff		1578781	1					
ANR	1578880	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG2	2481:1:76688:76729	1578781	9	True				
ANR	1578881	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_REG2		1578781	0		=			
ANR	1578882	Identifier	dst_r		1578781	0					
ANR	1578883	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_REG2		1578781	1					
ANR	1578884	Condition	FAST_IS_REG ( dst )		1578781	0					
ANR	1578885	CallExpression	FAST_IS_REG ( dst )		1578781	0					
ANR	1578886	Callee	FAST_IS_REG		1578781	0					
ANR	1578887	Identifier	FAST_IS_REG		1578781	0					
ANR	1578888	ArgumentList	dst		1578781	1					
ANR	1578889	Argument	dst		1578781	0					
ANR	1578890	Identifier	dst		1578781	0					
ANR	1578891	Identifier	dst		1578781	1					
ANR	1578892	Identifier	TMP_REG2		1578781	2					
ANR	1578893	IfStatement	if ( op < SLJIT_ADD )		1578781	10					
ANR	1578894	Condition	op < SLJIT_ADD	2483:5:76737:76750	1578781	0	True				
ANR	1578895	RelationalExpression	op < SLJIT_ADD		1578781	0		<			
ANR	1578896	Identifier	op		1578781	0					
ANR	1578897	Identifier	SLJIT_ADD		1578781	1					
ANR	1578898	CompoundStatement		17:21:391:391	1578781	1					
ANR	1578899	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 0 ) ) )"	2484:2:76757:76854	1578781	0	True				
ANR	1578900	CallExpression	"FAIL_IF ( push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 0 ) ) )"		1578781	0					
ANR	1578901	Callee	FAIL_IF		1578781	0					
ANR	1578902	Identifier	FAIL_IF		1578781	0					
ANR	1578903	ArgumentList	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 0 ) )"		1578781	1					
ANR	1578904	Argument	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 0 ) )"		1578781	0					
ANR	1578905	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 0 ) )"		1578781	0					
ANR	1578906	Callee	push_inst		1578781	0					
ANR	1578907	Identifier	push_inst		1578781	0					
ANR	1578908	ArgumentList	compiler		1578781	1					
ANR	1578909	Argument	compiler		1578781	0					
ANR	1578910	Identifier	compiler		1578781	0					
ANR	1578911	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 0 )"		1578781	1					
ANR	1578912	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 0 )"		1578781	0					
ANR	1578913	Callee	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1578914	Identifier	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1578915	ArgumentList	MOV_DP		1578781	1					
ANR	1578916	Argument	MOV_DP		1578781	0					
ANR	1578917	Identifier	MOV_DP		1578781	0					
ANR	1578918	Argument	0		1578781	1					
ANR	1578919	PrimaryExpression	0		1578781	0					
ANR	1578920	Argument	dst_r		1578781	2					
ANR	1578921	Identifier	dst_r		1578781	0					
ANR	1578922	Argument	SLJIT_UNUSED		1578781	3					
ANR	1578923	Identifier	SLJIT_UNUSED		1578781	0					
ANR	1578924	Argument	SRC2_IMM | 0		1578781	4					
ANR	1578925	InclusiveOrExpression	SRC2_IMM | 0		1578781	0		|			
ANR	1578926	Identifier	SRC2_IMM		1578781	0					
ANR	1578927	PrimaryExpression	0		1578781	1					
ANR	1578928	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 1 ) & ~COND_MASK ) | cc ) )"	2485:2:76858:76975	1578781	1	True				
ANR	1578929	CallExpression	"FAIL_IF ( push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 1 ) & ~COND_MASK ) | cc ) )"		1578781	0					
ANR	1578930	Callee	FAIL_IF		1578781	0					
ANR	1578931	Identifier	FAIL_IF		1578781	0					
ANR	1578932	ArgumentList	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 1 ) & ~COND_MASK ) | cc )"		1578781	1					
ANR	1578933	Argument	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 1 ) & ~COND_MASK ) | cc )"		1578781	0					
ANR	1578934	CallExpression	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 1 ) & ~COND_MASK ) | cc )"		1578781	0					
ANR	1578935	Callee	push_inst		1578781	0					
ANR	1578936	Identifier	push_inst		1578781	0					
ANR	1578937	ArgumentList	compiler		1578781	1					
ANR	1578938	Argument	compiler		1578781	0					
ANR	1578939	Identifier	compiler		1578781	0					
ANR	1578940	Argument	"( EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 1 ) & ~COND_MASK ) | cc"		1578781	1					
ANR	1578941	InclusiveOrExpression	"( EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 1 ) & ~COND_MASK ) | cc"		1578781	0		|			
ANR	1578942	BitAndExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 1 ) & ~COND_MASK"		1578781	0		&			
ANR	1578943	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , 0 , dst_r , SLJIT_UNUSED , SRC2_IMM | 1 )"		1578781	0					
ANR	1578944	Callee	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1578945	Identifier	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1578946	ArgumentList	MOV_DP		1578781	1					
ANR	1578947	Argument	MOV_DP		1578781	0					
ANR	1578948	Identifier	MOV_DP		1578781	0					
ANR	1578949	Argument	0		1578781	1					
ANR	1578950	PrimaryExpression	0		1578781	0					
ANR	1578951	Argument	dst_r		1578781	2					
ANR	1578952	Identifier	dst_r		1578781	0					
ANR	1578953	Argument	SLJIT_UNUSED		1578781	3					
ANR	1578954	Identifier	SLJIT_UNUSED		1578781	0					
ANR	1578955	Argument	SRC2_IMM | 1		1578781	4					
ANR	1578956	InclusiveOrExpression	SRC2_IMM | 1		1578781	0		|			
ANR	1578957	Identifier	SRC2_IMM		1578781	0					
ANR	1578958	PrimaryExpression	1		1578781	1					
ANR	1578959	Identifier	~COND_MASK		1578781	1					
ANR	1578960	Identifier	cc		1578781	1					
ANR	1578961	ReturnStatement	"return ( dst_r == TMP_REG2 ) ? emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw ) : SLJIT_SUCCESS ;"	2486:2:76979:77077	1578781	2	True				
ANR	1578962	ConditionalExpression	"( dst_r == TMP_REG2 ) ? emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw ) : SLJIT_SUCCESS"		1578781	0					
ANR	1578963	Condition	dst_r == TMP_REG2		1578781	0					
ANR	1578964	EqualityExpression	dst_r == TMP_REG2		1578781	0		==			
ANR	1578965	Identifier	dst_r		1578781	0					
ANR	1578966	Identifier	TMP_REG2		1578781	1					
ANR	1578967	CallExpression	"emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw )"		1578781	1					
ANR	1578968	Callee	emit_op_mem		1578781	0					
ANR	1578969	Identifier	emit_op_mem		1578781	0					
ANR	1578970	ArgumentList	compiler		1578781	1					
ANR	1578971	Argument	compiler		1578781	0					
ANR	1578972	Identifier	compiler		1578781	0					
ANR	1578973	Argument	WORD_DATA		1578781	1					
ANR	1578974	Identifier	WORD_DATA		1578781	0					
ANR	1578975	Argument	TMP_REG2		1578781	2					
ANR	1578976	Identifier	TMP_REG2		1578781	0					
ANR	1578977	Argument	dst		1578781	3					
ANR	1578978	Identifier	dst		1578781	0					
ANR	1578979	Argument	dstw		1578781	4					
ANR	1578980	Identifier	dstw		1578781	0					
ANR	1578981	Identifier	SLJIT_SUCCESS		1578781	2					
ANR	1578982	ExpressionStatement	ins = ( op == SLJIT_AND ? AND_DP : ( op == SLJIT_OR ? ORR_DP : EOR_DP ) )	2489:1:77084:77153	1578781	11	True				
ANR	1578983	AssignmentExpression	ins = ( op == SLJIT_AND ? AND_DP : ( op == SLJIT_OR ? ORR_DP : EOR_DP ) )		1578781	0		=			
ANR	1578984	Identifier	ins		1578781	0					
ANR	1578985	ConditionalExpression	op == SLJIT_AND ? AND_DP : ( op == SLJIT_OR ? ORR_DP : EOR_DP )		1578781	1					
ANR	1578986	Condition	op == SLJIT_AND		1578781	0					
ANR	1578987	EqualityExpression	op == SLJIT_AND		1578781	0		==			
ANR	1578988	Identifier	op		1578781	0					
ANR	1578989	Identifier	SLJIT_AND		1578781	1					
ANR	1578990	Identifier	AND_DP		1578781	1					
ANR	1578991	ConditionalExpression	op == SLJIT_OR ? ORR_DP : EOR_DP		1578781	2					
ANR	1578992	Condition	op == SLJIT_OR		1578781	0					
ANR	1578993	EqualityExpression	op == SLJIT_OR		1578781	0		==			
ANR	1578994	Identifier	op		1578781	0					
ANR	1578995	Identifier	SLJIT_OR		1578781	1					
ANR	1578996	Identifier	ORR_DP		1578781	1					
ANR	1578997	Identifier	EOR_DP		1578781	2					
ANR	1578998	IfStatement	if ( ( op == SLJIT_OR || op == SLJIT_XOR ) && FAST_IS_REG ( dst ) && dst == src )		1578781	12					
ANR	1578999	Condition	( op == SLJIT_OR || op == SLJIT_XOR ) && FAST_IS_REG ( dst ) && dst == src	2490:5:77160:77228	1578781	0	True				
ANR	1579000	AndExpression	( op == SLJIT_OR || op == SLJIT_XOR ) && FAST_IS_REG ( dst ) && dst == src		1578781	0		&&			
ANR	1579001	OrExpression	op == SLJIT_OR || op == SLJIT_XOR		1578781	0		||			
ANR	1579002	EqualityExpression	op == SLJIT_OR		1578781	0		==			
ANR	1579003	Identifier	op		1578781	0					
ANR	1579004	Identifier	SLJIT_OR		1578781	1					
ANR	1579005	EqualityExpression	op == SLJIT_XOR		1578781	1		==			
ANR	1579006	Identifier	op		1578781	0					
ANR	1579007	Identifier	SLJIT_XOR		1578781	1					
ANR	1579008	AndExpression	FAST_IS_REG ( dst ) && dst == src		1578781	1		&&			
ANR	1579009	CallExpression	FAST_IS_REG ( dst )		1578781	0					
ANR	1579010	Callee	FAST_IS_REG		1578781	0					
ANR	1579011	Identifier	FAST_IS_REG		1578781	0					
ANR	1579012	ArgumentList	dst		1578781	1					
ANR	1579013	Argument	dst		1578781	0					
ANR	1579014	Identifier	dst		1578781	0					
ANR	1579015	EqualityExpression	dst == src		1578781	1		==			
ANR	1579016	Identifier	dst		1578781	0					
ANR	1579017	Identifier	src		1578781	1					
ANR	1579018	CompoundStatement		24:76:869:869	1578781	1					
ANR	1579019	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst , dst , SRC2_IMM | 1 ) & ~COND_MASK ) | cc ) )"	2491:2:77235:77338	1578781	0	True				
ANR	1579020	CallExpression	"FAIL_IF ( push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst , dst , SRC2_IMM | 1 ) & ~COND_MASK ) | cc ) )"		1578781	0					
ANR	1579021	Callee	FAIL_IF		1578781	0					
ANR	1579022	Identifier	FAIL_IF		1578781	0					
ANR	1579023	ArgumentList	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst , dst , SRC2_IMM | 1 ) & ~COND_MASK ) | cc )"		1578781	1					
ANR	1579024	Argument	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst , dst , SRC2_IMM | 1 ) & ~COND_MASK ) | cc )"		1578781	0					
ANR	1579025	CallExpression	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst , dst , SRC2_IMM | 1 ) & ~COND_MASK ) | cc )"		1578781	0					
ANR	1579026	Callee	push_inst		1578781	0					
ANR	1579027	Identifier	push_inst		1578781	0					
ANR	1579028	ArgumentList	compiler		1578781	1					
ANR	1579029	Argument	compiler		1578781	0					
ANR	1579030	Identifier	compiler		1578781	0					
ANR	1579031	Argument	"( EMIT_DATA_PROCESS_INS ( ins , 0 , dst , dst , SRC2_IMM | 1 ) & ~COND_MASK ) | cc"		1578781	1					
ANR	1579032	InclusiveOrExpression	"( EMIT_DATA_PROCESS_INS ( ins , 0 , dst , dst , SRC2_IMM | 1 ) & ~COND_MASK ) | cc"		1578781	0		|			
ANR	1579033	BitAndExpression	"EMIT_DATA_PROCESS_INS ( ins , 0 , dst , dst , SRC2_IMM | 1 ) & ~COND_MASK"		1578781	0		&			
ANR	1579034	CallExpression	"EMIT_DATA_PROCESS_INS ( ins , 0 , dst , dst , SRC2_IMM | 1 )"		1578781	0					
ANR	1579035	Callee	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579036	Identifier	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579037	ArgumentList	ins		1578781	1					
ANR	1579038	Argument	ins		1578781	0					
ANR	1579039	Identifier	ins		1578781	0					
ANR	1579040	Argument	0		1578781	1					
ANR	1579041	PrimaryExpression	0		1578781	0					
ANR	1579042	Argument	dst		1578781	2					
ANR	1579043	Identifier	dst		1578781	0					
ANR	1579044	Argument	dst		1578781	3					
ANR	1579045	Identifier	dst		1578781	0					
ANR	1579046	Argument	SRC2_IMM | 1		1578781	4					
ANR	1579047	InclusiveOrExpression	SRC2_IMM | 1		1578781	0		|			
ANR	1579048	Identifier	SRC2_IMM		1578781	0					
ANR	1579049	PrimaryExpression	1		1578781	1					
ANR	1579050	Identifier	~COND_MASK		1578781	1					
ANR	1579051	Identifier	cc		1578781	1					
ANR	1579052	ReturnStatement	"return ( flags & SLJIT_SET_E ) ? push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst ) ) ) : SLJIT_SUCCESS ;"	2493:2:77427:77568	1578781	1	True				
ANR	1579053	ConditionalExpression	"( flags & SLJIT_SET_E ) ? push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst ) ) ) : SLJIT_SUCCESS"		1578781	0					
ANR	1579054	Condition	flags & SLJIT_SET_E		1578781	0					
ANR	1579055	BitAndExpression	flags & SLJIT_SET_E		1578781	0		&			
ANR	1579056	Identifier	flags		1578781	0					
ANR	1579057	Identifier	SLJIT_SET_E		1578781	1					
ANR	1579058	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst ) ) )"		1578781	1					
ANR	1579059	Callee	push_inst		1578781	0					
ANR	1579060	Identifier	push_inst		1578781	0					
ANR	1579061	ArgumentList	compiler		1578781	1					
ANR	1579062	Argument	compiler		1578781	0					
ANR	1579063	Identifier	compiler		1578781	0					
ANR	1579064	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst ) )"		1578781	1					
ANR	1579065	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst ) )"		1578781	0					
ANR	1579066	Callee	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579067	Identifier	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579068	ArgumentList	MOV_DP		1578781	1					
ANR	1579069	Argument	MOV_DP		1578781	0					
ANR	1579070	Identifier	MOV_DP		1578781	0					
ANR	1579071	Argument	SET_FLAGS		1578781	1					
ANR	1579072	Identifier	SET_FLAGS		1578781	0					
ANR	1579073	Argument	TMP_REG1		1578781	2					
ANR	1579074	Identifier	TMP_REG1		1578781	0					
ANR	1579075	Argument	SLJIT_UNUSED		1578781	3					
ANR	1579076	Identifier	SLJIT_UNUSED		1578781	0					
ANR	1579077	Argument	RM ( dst )		1578781	4					
ANR	1579078	CallExpression	RM ( dst )		1578781	0					
ANR	1579079	Callee	RM		1578781	0					
ANR	1579080	Identifier	RM		1578781	0					
ANR	1579081	ArgumentList	dst		1578781	1					
ANR	1579082	Argument	dst		1578781	0					
ANR	1579083	Identifier	dst		1578781	0					
ANR	1579084	Identifier	SLJIT_SUCCESS		1578781	2					
ANR	1579085	ExpressionStatement	compiler -> cache_arg = 0	2496:1:77575:77598	1578781	13	True				
ANR	1579086	AssignmentExpression	compiler -> cache_arg = 0		1578781	0		=			
ANR	1579087	PtrMemberAccess	compiler -> cache_arg		1578781	0					
ANR	1579088	Identifier	compiler		1578781	0					
ANR	1579089	Identifier	cache_arg		1578781	1					
ANR	1579090	PrimaryExpression	0		1578781	1					
ANR	1579091	ExpressionStatement	compiler -> cache_argw = 0	2497:1:77601:77625	1578781	14	True				
ANR	1579092	AssignmentExpression	compiler -> cache_argw = 0		1578781	0		=			
ANR	1579093	PtrMemberAccess	compiler -> cache_argw		1578781	0					
ANR	1579094	Identifier	compiler		1578781	0					
ANR	1579095	Identifier	cache_argw		1578781	1					
ANR	1579096	PrimaryExpression	0		1578781	1					
ANR	1579097	IfStatement	if ( src & SLJIT_MEM )		1578781	15					
ANR	1579098	Condition	src & SLJIT_MEM	2498:5:77632:77646	1578781	0	True				
ANR	1579099	BitAndExpression	src & SLJIT_MEM		1578781	0		&			
ANR	1579100	Identifier	src		1578781	0					
ANR	1579101	Identifier	SLJIT_MEM		1578781	1					
ANR	1579102	CompoundStatement		32:22:1287:1287	1578781	1					
ANR	1579103	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw ) )"	2499:2:77653:77739	1578781	0	True				
ANR	1579104	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw ) )"		1578781	0					
ANR	1579105	Callee	FAIL_IF		1578781	0					
ANR	1579106	Identifier	FAIL_IF		1578781	0					
ANR	1579107	ArgumentList	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1578781	1					
ANR	1579108	Argument	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1578781	0					
ANR	1579109	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1578781	0					
ANR	1579110	Callee	emit_op_mem2		1578781	0					
ANR	1579111	Identifier	emit_op_mem2		1578781	0					
ANR	1579112	ArgumentList	compiler		1578781	1					
ANR	1579113	Argument	compiler		1578781	0					
ANR	1579114	Identifier	compiler		1578781	0					
ANR	1579115	Argument	WORD_DATA | LOAD_DATA		1578781	1					
ANR	1579116	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1578781	0		|			
ANR	1579117	Identifier	WORD_DATA		1578781	0					
ANR	1579118	Identifier	LOAD_DATA		1578781	1					
ANR	1579119	Argument	TMP_REG1		1578781	2					
ANR	1579120	Identifier	TMP_REG1		1578781	0					
ANR	1579121	Argument	src		1578781	3					
ANR	1579122	Identifier	src		1578781	0					
ANR	1579123	Argument	srcw		1578781	4					
ANR	1579124	Identifier	srcw		1578781	0					
ANR	1579125	Argument	dst		1578781	5					
ANR	1579126	Identifier	dst		1578781	0					
ANR	1579127	Argument	dstw		1578781	6					
ANR	1579128	Identifier	dstw		1578781	0					
ANR	1579129	ExpressionStatement	src = TMP_REG1	2500:2:77743:77757	1578781	1	True				
ANR	1579130	AssignmentExpression	src = TMP_REG1		1578781	0		=			
ANR	1579131	Identifier	src		1578781	0					
ANR	1579132	Identifier	TMP_REG1		1578781	1					
ANR	1579133	ExpressionStatement	srcw = 0	2501:2:77761:77769	1578781	2	True				
ANR	1579134	AssignmentExpression	srcw = 0		1578781	0		=			
ANR	1579135	Identifier	srcw		1578781	0					
ANR	1579136	PrimaryExpression	0		1578781	1					
ANR	1579137	ElseStatement	else		1578781	0					
ANR	1579138	IfStatement	if ( src & SLJIT_IMM )		1578781	0					
ANR	1579139	Condition	src & SLJIT_IMM	2502:12:77783:77797	1578781	0	True				
ANR	1579140	BitAndExpression	src & SLJIT_IMM		1578781	0		&			
ANR	1579141	Identifier	src		1578781	0					
ANR	1579142	Identifier	SLJIT_IMM		1578781	1					
ANR	1579143	CompoundStatement		36:29:1438:1438	1578781	1					
ANR	1579144	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"	2503:2:77804:77853	1578781	0	True				
ANR	1579145	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"		1578781	0					
ANR	1579146	Callee	FAIL_IF		1578781	0					
ANR	1579147	Identifier	FAIL_IF		1578781	0					
ANR	1579148	ArgumentList	"load_immediate ( compiler , TMP_REG1 , srcw )"		1578781	1					
ANR	1579149	Argument	"load_immediate ( compiler , TMP_REG1 , srcw )"		1578781	0					
ANR	1579150	CallExpression	"load_immediate ( compiler , TMP_REG1 , srcw )"		1578781	0					
ANR	1579151	Callee	load_immediate		1578781	0					
ANR	1579152	Identifier	load_immediate		1578781	0					
ANR	1579153	ArgumentList	compiler		1578781	1					
ANR	1579154	Argument	compiler		1578781	0					
ANR	1579155	Identifier	compiler		1578781	0					
ANR	1579156	Argument	TMP_REG1		1578781	1					
ANR	1579157	Identifier	TMP_REG1		1578781	0					
ANR	1579158	Argument	srcw		1578781	2					
ANR	1579159	Identifier	srcw		1578781	0					
ANR	1579160	ExpressionStatement	src = TMP_REG1	2504:2:77857:77871	1578781	1	True				
ANR	1579161	AssignmentExpression	src = TMP_REG1		1578781	0		=			
ANR	1579162	Identifier	src		1578781	0					
ANR	1579163	Identifier	TMP_REG1		1578781	1					
ANR	1579164	ExpressionStatement	srcw = 0	2505:2:77875:77883	1578781	2	True				
ANR	1579165	AssignmentExpression	srcw = 0		1578781	0		=			
ANR	1579166	Identifier	srcw		1578781	0					
ANR	1579167	PrimaryExpression	0		1578781	1					
ANR	1579168	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 1 ) & ~COND_MASK ) | cc ) )"	2508:1:77890:77995	1578781	16	True				
ANR	1579169	CallExpression	"FAIL_IF ( push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 1 ) & ~COND_MASK ) | cc ) )"		1578781	0					
ANR	1579170	Callee	FAIL_IF		1578781	0					
ANR	1579171	Identifier	FAIL_IF		1578781	0					
ANR	1579172	ArgumentList	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 1 ) & ~COND_MASK ) | cc )"		1578781	1					
ANR	1579173	Argument	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 1 ) & ~COND_MASK ) | cc )"		1578781	0					
ANR	1579174	CallExpression	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 1 ) & ~COND_MASK ) | cc )"		1578781	0					
ANR	1579175	Callee	push_inst		1578781	0					
ANR	1579176	Identifier	push_inst		1578781	0					
ANR	1579177	ArgumentList	compiler		1578781	1					
ANR	1579178	Argument	compiler		1578781	0					
ANR	1579179	Identifier	compiler		1578781	0					
ANR	1579180	Argument	"( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 1 ) & ~COND_MASK ) | cc"		1578781	1					
ANR	1579181	InclusiveOrExpression	"( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 1 ) & ~COND_MASK ) | cc"		1578781	0		|			
ANR	1579182	BitAndExpression	"EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 1 ) & ~COND_MASK"		1578781	0		&			
ANR	1579183	CallExpression	"EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 1 )"		1578781	0					
ANR	1579184	Callee	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579185	Identifier	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579186	ArgumentList	ins		1578781	1					
ANR	1579187	Argument	ins		1578781	0					
ANR	1579188	Identifier	ins		1578781	0					
ANR	1579189	Argument	0		1578781	1					
ANR	1579190	PrimaryExpression	0		1578781	0					
ANR	1579191	Argument	dst_r		1578781	2					
ANR	1579192	Identifier	dst_r		1578781	0					
ANR	1579193	Argument	src		1578781	3					
ANR	1579194	Identifier	src		1578781	0					
ANR	1579195	Argument	SRC2_IMM | 1		1578781	4					
ANR	1579196	InclusiveOrExpression	SRC2_IMM | 1		1578781	0		|			
ANR	1579197	Identifier	SRC2_IMM		1578781	0					
ANR	1579198	PrimaryExpression	1		1578781	1					
ANR	1579199	Identifier	~COND_MASK		1578781	1					
ANR	1579200	Identifier	cc		1578781	1					
ANR	1579201	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 0 ) & ~COND_MASK ) | ( cc ^ 0x10000000 ) ) )"	2509:1:77998:78118	1578781	17	True				
ANR	1579202	CallExpression	"FAIL_IF ( push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 0 ) & ~COND_MASK ) | ( cc ^ 0x10000000 ) ) )"		1578781	0					
ANR	1579203	Callee	FAIL_IF		1578781	0					
ANR	1579204	Identifier	FAIL_IF		1578781	0					
ANR	1579205	ArgumentList	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 0 ) & ~COND_MASK ) | ( cc ^ 0x10000000 ) )"		1578781	1					
ANR	1579206	Argument	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 0 ) & ~COND_MASK ) | ( cc ^ 0x10000000 ) )"		1578781	0					
ANR	1579207	CallExpression	"push_inst ( compiler , ( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 0 ) & ~COND_MASK ) | ( cc ^ 0x10000000 ) )"		1578781	0					
ANR	1579208	Callee	push_inst		1578781	0					
ANR	1579209	Identifier	push_inst		1578781	0					
ANR	1579210	ArgumentList	compiler		1578781	1					
ANR	1579211	Argument	compiler		1578781	0					
ANR	1579212	Identifier	compiler		1578781	0					
ANR	1579213	Argument	"( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 0 ) & ~COND_MASK ) | ( cc ^ 0x10000000 )"		1578781	1					
ANR	1579214	InclusiveOrExpression	"( EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 0 ) & ~COND_MASK ) | ( cc ^ 0x10000000 )"		1578781	0		|			
ANR	1579215	BitAndExpression	"EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 0 ) & ~COND_MASK"		1578781	0		&			
ANR	1579216	CallExpression	"EMIT_DATA_PROCESS_INS ( ins , 0 , dst_r , src , SRC2_IMM | 0 )"		1578781	0					
ANR	1579217	Callee	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579218	Identifier	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579219	ArgumentList	ins		1578781	1					
ANR	1579220	Argument	ins		1578781	0					
ANR	1579221	Identifier	ins		1578781	0					
ANR	1579222	Argument	0		1578781	1					
ANR	1579223	PrimaryExpression	0		1578781	0					
ANR	1579224	Argument	dst_r		1578781	2					
ANR	1579225	Identifier	dst_r		1578781	0					
ANR	1579226	Argument	src		1578781	3					
ANR	1579227	Identifier	src		1578781	0					
ANR	1579228	Argument	SRC2_IMM | 0		1578781	4					
ANR	1579229	InclusiveOrExpression	SRC2_IMM | 0		1578781	0		|			
ANR	1579230	Identifier	SRC2_IMM		1578781	0					
ANR	1579231	PrimaryExpression	0		1578781	1					
ANR	1579232	Identifier	~COND_MASK		1578781	1					
ANR	1579233	ExclusiveOrExpression	cc ^ 0x10000000		1578781	1		^			
ANR	1579234	Identifier	cc		1578781	0					
ANR	1579235	PrimaryExpression	0x10000000		1578781	1					
ANR	1579236	IfStatement	if ( dst_r == TMP_REG2 )		1578781	18					
ANR	1579237	Condition	dst_r == TMP_REG2	2510:5:78125:78141	1578781	0	True				
ANR	1579238	EqualityExpression	dst_r == TMP_REG2		1578781	0		==			
ANR	1579239	Identifier	dst_r		1578781	0					
ANR	1579240	Identifier	TMP_REG2		1578781	1					
ANR	1579241	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA , TMP_REG2 , dst , dstw , 0 , 0 ) )"	2511:2:78146:78215	1578781	1	True				
ANR	1579242	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA , TMP_REG2 , dst , dstw , 0 , 0 ) )"		1578781	0					
ANR	1579243	Callee	FAIL_IF		1578781	0					
ANR	1579244	Identifier	FAIL_IF		1578781	0					
ANR	1579245	ArgumentList	"emit_op_mem2 ( compiler , WORD_DATA , TMP_REG2 , dst , dstw , 0 , 0 )"		1578781	1					
ANR	1579246	Argument	"emit_op_mem2 ( compiler , WORD_DATA , TMP_REG2 , dst , dstw , 0 , 0 )"		1578781	0					
ANR	1579247	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA , TMP_REG2 , dst , dstw , 0 , 0 )"		1578781	0					
ANR	1579248	Callee	emit_op_mem2		1578781	0					
ANR	1579249	Identifier	emit_op_mem2		1578781	0					
ANR	1579250	ArgumentList	compiler		1578781	1					
ANR	1579251	Argument	compiler		1578781	0					
ANR	1579252	Identifier	compiler		1578781	0					
ANR	1579253	Argument	WORD_DATA		1578781	1					
ANR	1579254	Identifier	WORD_DATA		1578781	0					
ANR	1579255	Argument	TMP_REG2		1578781	2					
ANR	1579256	Identifier	TMP_REG2		1578781	0					
ANR	1579257	Argument	dst		1578781	3					
ANR	1579258	Identifier	dst		1578781	0					
ANR	1579259	Argument	dstw		1578781	4					
ANR	1579260	Identifier	dstw		1578781	0					
ANR	1579261	Argument	0		1578781	5					
ANR	1579262	PrimaryExpression	0		1578781	0					
ANR	1579263	Argument	0		1578781	6					
ANR	1579264	PrimaryExpression	0		1578781	0					
ANR	1579265	ReturnStatement	"return ( flags & SLJIT_SET_E ) ? push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst_r ) ) ) : SLJIT_SUCCESS ;"	2513:1:78219:78362	1578781	19	True				
ANR	1579266	ConditionalExpression	"( flags & SLJIT_SET_E ) ? push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst_r ) ) ) : SLJIT_SUCCESS"		1578781	0					
ANR	1579267	Condition	flags & SLJIT_SET_E		1578781	0					
ANR	1579268	BitAndExpression	flags & SLJIT_SET_E		1578781	0		&			
ANR	1579269	Identifier	flags		1578781	0					
ANR	1579270	Identifier	SLJIT_SET_E		1578781	1					
ANR	1579271	CallExpression	"push_inst ( compiler , EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst_r ) ) )"		1578781	1					
ANR	1579272	Callee	push_inst		1578781	0					
ANR	1579273	Identifier	push_inst		1578781	0					
ANR	1579274	ArgumentList	compiler		1578781	1					
ANR	1579275	Argument	compiler		1578781	0					
ANR	1579276	Identifier	compiler		1578781	0					
ANR	1579277	Argument	"EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst_r ) )"		1578781	1					
ANR	1579278	CallExpression	"EMIT_DATA_PROCESS_INS ( MOV_DP , SET_FLAGS , TMP_REG1 , SLJIT_UNUSED , RM ( dst_r ) )"		1578781	0					
ANR	1579279	Callee	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579280	Identifier	EMIT_DATA_PROCESS_INS		1578781	0					
ANR	1579281	ArgumentList	MOV_DP		1578781	1					
ANR	1579282	Argument	MOV_DP		1578781	0					
ANR	1579283	Identifier	MOV_DP		1578781	0					
ANR	1579284	Argument	SET_FLAGS		1578781	1					
ANR	1579285	Identifier	SET_FLAGS		1578781	0					
ANR	1579286	Argument	TMP_REG1		1578781	2					
ANR	1579287	Identifier	TMP_REG1		1578781	0					
ANR	1579288	Argument	SLJIT_UNUSED		1578781	3					
ANR	1579289	Identifier	SLJIT_UNUSED		1578781	0					
ANR	1579290	Argument	RM ( dst_r )		1578781	4					
ANR	1579291	CallExpression	RM ( dst_r )		1578781	0					
ANR	1579292	Callee	RM		1578781	0					
ANR	1579293	Identifier	RM		1578781	0					
ANR	1579294	ArgumentList	dst_r		1578781	1					
ANR	1579295	Argument	dst_r		1578781	0					
ANR	1579296	Identifier	dst_r		1578781	0					
ANR	1579297	Identifier	SLJIT_SUCCESS		1578781	2					
ANR	1579298	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1578781	1					
ANR	1579299	Identifier	sljit_emit_op_flags		1578781	2					
ANR	1579300	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1578781	3					
ANR	1579301	Parameter	struct sljit_compiler * compiler	2463:54:76239:76269	1578781	0	True				
ANR	1579302	ParameterType	struct sljit_compiler *		1578781	0					
ANR	1579303	Identifier	compiler		1578781	1					
ANR	1579304	Parameter	sljit_si op	2463:87:76272:76282	1578781	1	True				
ANR	1579305	ParameterType	sljit_si		1578781	0					
ANR	1579306	Identifier	op		1578781	1					
ANR	1579307	Parameter	sljit_si dst	2464:1:76286:76297	1578781	2	True				
ANR	1579308	ParameterType	sljit_si		1578781	0					
ANR	1579309	Identifier	dst		1578781	1					
ANR	1579310	Parameter	sljit_sw dstw	2464:15:76300:76312	1578781	3	True				
ANR	1579311	ParameterType	sljit_sw		1578781	0					
ANR	1579312	Identifier	dstw		1578781	1					
ANR	1579313	Parameter	sljit_si src	2465:1:76316:76327	1578781	4	True				
ANR	1579314	ParameterType	sljit_si		1578781	0					
ANR	1579315	Identifier	src		1578781	1					
ANR	1579316	Parameter	sljit_sw srcw	2465:15:76330:76342	1578781	5	True				
ANR	1579317	ParameterType	sljit_sw		1578781	0					
ANR	1579318	Identifier	srcw		1578781	1					
ANR	1579319	Parameter	sljit_si type	2466:1:76346:76358	1578781	6	True				
ANR	1579320	ParameterType	sljit_si		1578781	0					
ANR	1579321	Identifier	type		1578781	1					
ANR	1579322	CFGEntryNode	ENTRY		1578781		True				
ANR	1579323	CFGExitNode	EXIT		1578781		True				
ANR	1579324	Symbol	SLJIT_AND		1578781						
ANR	1579325	Symbol	TMP_REG2		1578781						
ANR	1579326	Symbol	AND_DP		1578781						
ANR	1579327	Symbol	TMP_REG1		1578781						
ANR	1579328	Symbol	compiler -> cache_argw		1578781						
ANR	1579329	Symbol	dst		1578781						
ANR	1579330	Symbol	LOAD_DATA		1578781						
ANR	1579331	Symbol	ORR_DP		1578781						
ANR	1579332	Symbol	SLJIT_MEM		1578781						
ANR	1579333	Symbol	flags		1578781						
ANR	1579334	Symbol	SLJIT_OR		1578781						
ANR	1579335	Symbol	SLJIT_ADD		1578781						
ANR	1579336	Symbol	* compiler		1578781						
ANR	1579337	Symbol	type		1578781						
ANR	1579338	Symbol	SLJIT_XOR		1578781						
ANR	1579339	Symbol	SLJIT_SET_E		1578781						
ANR	1579340	Symbol	dst_r		1578781						
ANR	1579341	Symbol	GET_OPCODE		1578781						
ANR	1579342	Symbol	GET_ALL_FLAGS		1578781						
ANR	1579343	Symbol	MOV_DP		1578781						
ANR	1579344	Symbol	SLJIT_IMM		1578781						
ANR	1579345	Symbol	load_immediate		1578781						
ANR	1579346	Symbol	SRC2_IMM		1578781						
ANR	1579347	Symbol	compiler		1578781						
ANR	1579348	Symbol	check_sljit_emit_op_flags		1578781						
ANR	1579349	Symbol	WORD_DATA		1578781						
ANR	1579350	Symbol	cc		1578781						
ANR	1579351	Symbol	op		1578781						
ANR	1579352	Symbol	get_cc		1578781						
ANR	1579353	Symbol	push_inst		1578781						
ANR	1579354	Symbol	FAST_IS_REG		1578781						
ANR	1579355	Symbol	src		1578781						
ANR	1579356	Symbol	srcw		1578781						
ANR	1579357	Symbol	compiler -> cache_arg		1578781						
ANR	1579358	Symbol	emit_op_mem2		1578781						
ANR	1579359	Symbol	emit_op_mem		1578781						
ANR	1579360	Symbol	SLJIT_SUCCESS		1578781						
ANR	1579361	Symbol	SET_FLAGS		1578781						
ANR	1579362	Symbol	ins		1578781						
ANR	1579363	Symbol	~COND_MASK		1578781						
ANR	1579364	Symbol	SLJIT_UNUSED		1578781						
ANR	1579365	Symbol	RM		1578781						
ANR	1579366	Symbol	dstw		1578781						
ANR	1579367	Symbol	EOR_DP		1578781						
ANR	1579368	Symbol	EMIT_DATA_PROCESS_INS		1578781						
ANR	1579369	Function	sljit_emit_const	2516:25:78392:79245							
ANR	1579370	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1579369	0					
ANR	1579371	CompoundStatement		2517:0:78512:79245	1579369	0					
ANR	1579372	IdentifierDeclStatement	struct sljit_const * const_ ;	2518:1:78515:78541	1579369	0	True				
ANR	1579373	IdentifierDecl	* const_		1579369	0					
ANR	1579374	IdentifierDeclType	struct sljit_const *		1579369	0					
ANR	1579375	Identifier	const_		1579369	1					
ANR	1579376	IdentifierDeclStatement	sljit_si reg ;	2519:1:78544:78556	1579369	1	True				
ANR	1579377	IdentifierDecl	reg		1579369	0					
ANR	1579378	IdentifierDeclType	sljit_si		1579369	0					
ANR	1579379	Identifier	reg		1579369	1					
ANR	1579380	ExpressionStatement	CHECK_ERROR_PTR ( )	2521:1:78560:78577	1579369	2	True				
ANR	1579381	CallExpression	CHECK_ERROR_PTR ( )		1579369	0					
ANR	1579382	Callee	CHECK_ERROR_PTR		1579369	0					
ANR	1579383	Identifier	CHECK_ERROR_PTR		1579369	0					
ANR	1579384	ArgumentList			1579369	1					
ANR	1579385	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2522:1:78580:78646	1579369	3	True				
ANR	1579386	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1579369	0					
ANR	1579387	Callee	CHECK_PTR		1579369	0					
ANR	1579388	Identifier	CHECK_PTR		1579369	0					
ANR	1579389	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1579369	1					
ANR	1579390	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1579369	0					
ANR	1579391	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1579369	0					
ANR	1579392	Callee	check_sljit_emit_const		1579369	0					
ANR	1579393	Identifier	check_sljit_emit_const		1579369	0					
ANR	1579394	ArgumentList	compiler		1579369	1					
ANR	1579395	Argument	compiler		1579369	0					
ANR	1579396	Identifier	compiler		1579369	0					
ANR	1579397	Argument	dst		1579369	1					
ANR	1579398	Identifier	dst		1579369	0					
ANR	1579399	Argument	dstw		1579369	2					
ANR	1579400	Identifier	dstw		1579369	0					
ANR	1579401	Argument	init_value		1579369	3					
ANR	1579402	Identifier	init_value		1579369	0					
ANR	1579403	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2523:1:78649:78679	1579369	4	True				
ANR	1579404	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1579369	0					
ANR	1579405	Callee	ADJUST_LOCAL_OFFSET		1579369	0					
ANR	1579406	Identifier	ADJUST_LOCAL_OFFSET		1579369	0					
ANR	1579407	ArgumentList	dst		1579369	1					
ANR	1579408	Argument	dst		1579369	0					
ANR	1579409	Identifier	dst		1579369	0					
ANR	1579410	Argument	dstw		1579369	1					
ANR	1579411	Identifier	dstw		1579369	0					
ANR	1579412	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2525:1:78683:78762	1579369	5	True				
ANR	1579413	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1579369	0		=			
ANR	1579414	Identifier	const_		1579369	0					
ANR	1579415	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1579369	1					
ANR	1579416	CastTarget	struct sljit_const *		1579369	0					
ANR	1579417	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1579369	1					
ANR	1579418	Callee	ensure_abuf		1579369	0					
ANR	1579419	Identifier	ensure_abuf		1579369	0					
ANR	1579420	ArgumentList	compiler		1579369	1					
ANR	1579421	Argument	compiler		1579369	0					
ANR	1579422	Identifier	compiler		1579369	0					
ANR	1579423	Argument	sizeof ( struct sljit_const )		1579369	1					
ANR	1579424	SizeofExpression	sizeof ( struct sljit_const )		1579369	0					
ANR	1579425	Sizeof	sizeof		1579369	0					
ANR	1579426	SizeofOperand	struct sljit_const		1579369	1					
ANR	1579427	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2526:1:78765:78785	1579369	6	True				
ANR	1579428	CallExpression	PTR_FAIL_IF ( ! const_ )		1579369	0					
ANR	1579429	Callee	PTR_FAIL_IF		1579369	0					
ANR	1579430	Identifier	PTR_FAIL_IF		1579369	0					
ANR	1579431	ArgumentList	! const_		1579369	1					
ANR	1579432	Argument	! const_		1579369	0					
ANR	1579433	UnaryOperationExpression	! const_		1579369	0					
ANR	1579434	UnaryOperator	!		1579369	0					
ANR	1579435	Identifier	const_		1579369	1					
ANR	1579436	ExpressionStatement	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2	2528:1:78789:78828	1579369	7	True				
ANR	1579437	AssignmentExpression	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1579369	0		=			
ANR	1579438	Identifier	reg		1579369	0					
ANR	1579439	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1579369	1					
ANR	1579440	Condition	SLOW_IS_REG ( dst )		1579369	0					
ANR	1579441	CallExpression	SLOW_IS_REG ( dst )		1579369	0					
ANR	1579442	Callee	SLOW_IS_REG		1579369	0					
ANR	1579443	Identifier	SLOW_IS_REG		1579369	0					
ANR	1579444	ArgumentList	dst		1579369	1					
ANR	1579445	Argument	dst		1579369	0					
ANR	1579446	Identifier	dst		1579369	0					
ANR	1579447	Identifier	dst		1579369	1					
ANR	1579448	Identifier	TMP_REG2		1579369	2					
ANR	1579449	ExpressionStatement	"PTR_FAIL_IF ( push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 ) , init_value ) )"	2531:1:78889:79018	1579369	8	True				
ANR	1579450	CallExpression	"PTR_FAIL_IF ( push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 ) , init_value ) )"		1579369	0					
ANR	1579451	Callee	PTR_FAIL_IF		1579369	0					
ANR	1579452	Identifier	PTR_FAIL_IF		1579369	0					
ANR	1579453	ArgumentList	"push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 ) , init_value )"		1579369	1					
ANR	1579454	Argument	"push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 ) , init_value )"		1579369	0					
ANR	1579455	CallExpression	"push_inst_with_unique_literal ( compiler , EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 ) , init_value )"		1579369	0					
ANR	1579456	Callee	push_inst_with_unique_literal		1579369	0					
ANR	1579457	Identifier	push_inst_with_unique_literal		1579369	0					
ANR	1579458	ArgumentList	compiler		1579369	1					
ANR	1579459	Argument	compiler		1579369	0					
ANR	1579460	Identifier	compiler		1579369	0					
ANR	1579461	Argument	"EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 )"		1579369	1					
ANR	1579462	CallExpression	"EMIT_DATA_TRANSFER ( WORD_DATA | LOAD_DATA , 1 , 0 , reg , TMP_PC , 0 )"		1579369	0					
ANR	1579463	Callee	EMIT_DATA_TRANSFER		1579369	0					
ANR	1579464	Identifier	EMIT_DATA_TRANSFER		1579369	0					
ANR	1579465	ArgumentList	WORD_DATA | LOAD_DATA		1579369	1					
ANR	1579466	Argument	WORD_DATA | LOAD_DATA		1579369	0					
ANR	1579467	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1579369	0		|			
ANR	1579468	Identifier	WORD_DATA		1579369	0					
ANR	1579469	Identifier	LOAD_DATA		1579369	1					
ANR	1579470	Argument	1		1579369	1					
ANR	1579471	PrimaryExpression	1		1579369	0					
ANR	1579472	Argument	0		1579369	2					
ANR	1579473	PrimaryExpression	0		1579369	0					
ANR	1579474	Argument	reg		1579369	3					
ANR	1579475	Identifier	reg		1579369	0					
ANR	1579476	Argument	TMP_PC		1579369	4					
ANR	1579477	Identifier	TMP_PC		1579369	0					
ANR	1579478	Argument	0		1579369	5					
ANR	1579479	PrimaryExpression	0		1579369	0					
ANR	1579480	Argument	init_value		1579369	2					
ANR	1579481	Identifier	init_value		1579369	0					
ANR	1579482	ExpressionStatement	compiler -> patches ++	2532:1:79021:79040	1579369	9	True				
ANR	1579483	PostIncDecOperationExpression	compiler -> patches ++		1579369	0					
ANR	1579484	PtrMemberAccess	compiler -> patches		1579369	0					
ANR	1579485	Identifier	compiler		1579369	0					
ANR	1579486	Identifier	patches		1579369	1					
ANR	1579487	IncDec	++		1579369	1					
ANR	1579488	ExpressionStatement	"set_const ( const_ , compiler )"	2536:1:79107:79134	1579369	10	True				
ANR	1579489	CallExpression	"set_const ( const_ , compiler )"		1579369	0					
ANR	1579490	Callee	set_const		1579369	0					
ANR	1579491	Identifier	set_const		1579369	0					
ANR	1579492	ArgumentList	const_		1579369	1					
ANR	1579493	Argument	const_		1579369	0					
ANR	1579494	Identifier	const_		1579369	0					
ANR	1579495	Argument	compiler		1579369	1					
ANR	1579496	Identifier	compiler		1579369	0					
ANR	1579497	IfStatement	if ( dst & SLJIT_MEM )		1579369	11					
ANR	1579498	Condition	dst & SLJIT_MEM	2538:5:79142:79156	1579369	0	True				
ANR	1579499	BitAndExpression	dst & SLJIT_MEM		1579369	0		&			
ANR	1579500	Identifier	dst		1579369	0					
ANR	1579501	Identifier	SLJIT_MEM		1579369	1					
ANR	1579502	ExpressionStatement	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw ) )"	2539:2:79161:79227	1579369	1	True				
ANR	1579503	CallExpression	"PTR_FAIL_IF ( emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw ) )"		1579369	0					
ANR	1579504	Callee	PTR_FAIL_IF		1579369	0					
ANR	1579505	Identifier	PTR_FAIL_IF		1579369	0					
ANR	1579506	ArgumentList	"emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw )"		1579369	1					
ANR	1579507	Argument	"emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw )"		1579369	0					
ANR	1579508	CallExpression	"emit_op_mem ( compiler , WORD_DATA , TMP_REG2 , dst , dstw )"		1579369	0					
ANR	1579509	Callee	emit_op_mem		1579369	0					
ANR	1579510	Identifier	emit_op_mem		1579369	0					
ANR	1579511	ArgumentList	compiler		1579369	1					
ANR	1579512	Argument	compiler		1579369	0					
ANR	1579513	Identifier	compiler		1579369	0					
ANR	1579514	Argument	WORD_DATA		1579369	1					
ANR	1579515	Identifier	WORD_DATA		1579369	0					
ANR	1579516	Argument	TMP_REG2		1579369	2					
ANR	1579517	Identifier	TMP_REG2		1579369	0					
ANR	1579518	Argument	dst		1579369	3					
ANR	1579519	Identifier	dst		1579369	0					
ANR	1579520	Argument	dstw		1579369	4					
ANR	1579521	Identifier	dstw		1579369	0					
ANR	1579522	ReturnStatement	return const_ ;	2540:1:79230:79243	1579369	12	True				
ANR	1579523	Identifier	const_		1579369	0					
ANR	1579524	ReturnType	struct sljit_const *		1579369	1					
ANR	1579525	Identifier	sljit_emit_const		1579369	2					
ANR	1579526	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1579369	3					
ANR	1579527	Parameter	struct sljit_compiler * compiler	2516:62:78429:78459	1579369	0	True				
ANR	1579528	ParameterType	struct sljit_compiler *		1579369	0					
ANR	1579529	Identifier	compiler		1579369	1					
ANR	1579530	Parameter	sljit_si dst	2516:95:78462:78473	1579369	1	True				
ANR	1579531	ParameterType	sljit_si		1579369	0					
ANR	1579532	Identifier	dst		1579369	1					
ANR	1579533	Parameter	sljit_sw dstw	2516:109:78476:78488	1579369	2	True				
ANR	1579534	ParameterType	sljit_sw		1579369	0					
ANR	1579535	Identifier	dstw		1579369	1					
ANR	1579536	Parameter	sljit_sw init_value	2516:124:78491:78509	1579369	3	True				
ANR	1579537	ParameterType	sljit_sw		1579369	0					
ANR	1579538	Identifier	init_value		1579369	1					
ANR	1579539	CFGEntryNode	ENTRY		1579369		True				
ANR	1579540	CFGExitNode	EXIT		1579369		True				
ANR	1579541	Symbol	check_sljit_emit_const		1579369						
ANR	1579542	Symbol	TMP_REG2		1579369						
ANR	1579543	Symbol	TMP_PC		1579369						
ANR	1579544	Symbol	const_		1579369						
ANR	1579545	Symbol	dst		1579369						
ANR	1579546	Symbol	LOAD_DATA		1579369						
ANR	1579547	Symbol	SLJIT_MEM		1579369						
ANR	1579548	Symbol	compiler -> patches		1579369						
ANR	1579549	Symbol	emit_op_mem		1579369						
ANR	1579550	Symbol	SLOW_IS_REG		1579369						
ANR	1579551	Symbol	ensure_abuf		1579369						
ANR	1579552	Symbol	* compiler		1579369						
ANR	1579553	Symbol	push_inst_with_unique_literal		1579369						
ANR	1579554	Symbol	reg		1579369						
ANR	1579555	Symbol	compiler		1579369						
ANR	1579556	Symbol	init_value		1579369						
ANR	1579557	Symbol	dstw		1579369						
ANR	1579558	Symbol	WORD_DATA		1579369						
ANR	1579559	Symbol	EMIT_DATA_TRANSFER		1579369						
ANR	1579560	Function	sljit_set_jump_addr	2543:0:79248:79376							
ANR	1579561	FunctionDef	"sljit_set_jump_addr (sljit_uw addr , sljit_uw new_addr)"		1579560	0					
ANR	1579562	CompoundStatement		2544:0:79332:79376	1579560	0					
ANR	1579563	ExpressionStatement	"inline_set_jump_addr ( addr , new_addr , 1 )"	2545:1:79335:79374	1579560	0	True				
ANR	1579564	CallExpression	"inline_set_jump_addr ( addr , new_addr , 1 )"		1579560	0					
ANR	1579565	Callee	inline_set_jump_addr		1579560	0					
ANR	1579566	Identifier	inline_set_jump_addr		1579560	0					
ANR	1579567	ArgumentList	addr		1579560	1					
ANR	1579568	Argument	addr		1579560	0					
ANR	1579569	Identifier	addr		1579560	0					
ANR	1579570	Argument	new_addr		1579560	1					
ANR	1579571	Identifier	new_addr		1579560	0					
ANR	1579572	Argument	1		1579560	2					
ANR	1579573	PrimaryExpression	1		1579560	0					
ANR	1579574	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1579560	1					
ANR	1579575	Identifier	sljit_set_jump_addr		1579560	2					
ANR	1579576	ParameterList	"sljit_uw addr , sljit_uw new_addr"		1579560	3					
ANR	1579577	Parameter	sljit_uw addr	2543:50:79298:79310	1579560	0	True				
ANR	1579578	ParameterType	sljit_uw		1579560	0					
ANR	1579579	Identifier	addr		1579560	1					
ANR	1579580	Parameter	sljit_uw new_addr	2543:65:79313:79329	1579560	1	True				
ANR	1579581	ParameterType	sljit_uw		1579560	0					
ANR	1579582	Identifier	new_addr		1579560	1					
ANR	1579583	CFGEntryNode	ENTRY		1579560		True				
ANR	1579584	CFGExitNode	EXIT		1579560		True				
ANR	1579585	Symbol	addr		1579560						
ANR	1579586	Symbol	new_addr		1579560						
ANR	1579587	Function	sljit_set_const	2548:0:79379:79507							
ANR	1579588	FunctionDef	"sljit_set_const (sljit_uw addr , sljit_sw new_constant)"		1579587	0					
ANR	1579589	CompoundStatement		2549:0:79463:79507	1579587	0					
ANR	1579590	ExpressionStatement	"inline_set_const ( addr , new_constant , 1 )"	2550:1:79466:79505	1579587	0	True				
ANR	1579591	CallExpression	"inline_set_const ( addr , new_constant , 1 )"		1579587	0					
ANR	1579592	Callee	inline_set_const		1579587	0					
ANR	1579593	Identifier	inline_set_const		1579587	0					
ANR	1579594	ArgumentList	addr		1579587	1					
ANR	1579595	Argument	addr		1579587	0					
ANR	1579596	Identifier	addr		1579587	0					
ANR	1579597	Argument	new_constant		1579587	1					
ANR	1579598	Identifier	new_constant		1579587	0					
ANR	1579599	Argument	1		1579587	2					
ANR	1579600	PrimaryExpression	1		1579587	0					
ANR	1579601	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1579587	1					
ANR	1579602	Identifier	sljit_set_const		1579587	2					
ANR	1579603	ParameterList	"sljit_uw addr , sljit_sw new_constant"		1579587	3					
ANR	1579604	Parameter	sljit_uw addr	2548:46:79425:79437	1579587	0	True				
ANR	1579605	ParameterType	sljit_uw		1579587	0					
ANR	1579606	Identifier	addr		1579587	1					
ANR	1579607	Parameter	sljit_sw new_constant	2548:61:79440:79460	1579587	1	True				
ANR	1579608	ParameterType	sljit_sw		1579587	0					
ANR	1579609	Identifier	new_constant		1579587	1					
ANR	1579610	CFGEntryNode	ENTRY		1579587		True				
ANR	1579611	CFGExitNode	EXIT		1579587		True				
ANR	1579612	Symbol	new_constant		1579587						
ANR	1579613	Symbol	addr		1579587						
