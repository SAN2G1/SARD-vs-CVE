command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	300111	File	data/converged/CVE-2015-8617_php-src/Zend_zend_multibyte.c								
ANR	300112	Function	dummy_encoding_fetcher	28:0:1358:1452							
ANR	300113	FunctionDef	dummy_encoding_fetcher (const char * encoding_name)		300112	0					
ANR	300114	CompoundStatement		29:0:1436:1452	300112	0					
ANR	300115	ReturnStatement	return NULL ;	30:1:1439:1450	300112	0	True				
ANR	300116	Identifier	NULL		300112	0					
ANR	300117	ReturnType	static const zend_encoding *		300112	1					
ANR	300118	Identifier	dummy_encoding_fetcher		300112	2					
ANR	300119	ParameterList	const char * encoding_name		300112	3					
ANR	300120	Parameter	const char * encoding_name	28:51:1409:1433	300112	0	True				
ANR	300121	ParameterType	const char *		300112	0					
ANR	300122	Identifier	encoding_name		300112	1					
ANR	300123	CFGEntryNode	ENTRY		300112		True				
ANR	300124	CFGExitNode	EXIT		300112		True				
ANR	300125	Symbol	encoding_name		300112						
ANR	300126	Symbol	NULL		300112						
ANR	300127	Function	dummy_encoding_name_getter	33:0:1455:1565							
ANR	300128	FunctionDef	dummy_encoding_name_getter (const zend_encoding * encoding)		300127	0					
ANR	300129	CompoundStatement		34:0:1532:1565	300127	0					
ANR	300130	ReturnStatement	return ( const char * ) encoding ;	35:1:1535:1563	300127	0	True				
ANR	300131	CastExpression	( const char * ) encoding		300127	0					
ANR	300132	CastTarget	const char *		300127	0					
ANR	300133	Identifier	encoding		300127	1					
ANR	300134	ReturnType	static const char *		300127	1					
ANR	300135	Identifier	dummy_encoding_name_getter		300127	2					
ANR	300136	ParameterList	const zend_encoding * encoding		300127	3					
ANR	300137	Parameter	const zend_encoding * encoding	33:46:1501:1529	300127	0	True				
ANR	300138	ParameterType	const zend_encoding *		300127	0					
ANR	300139	Identifier	encoding		300127	1					
ANR	300140	CFGEntryNode	ENTRY		300127		True				
ANR	300141	CFGExitNode	EXIT		300127		True				
ANR	300142	Symbol	encoding		300127						
ANR	300143	Function	dummy_encoding_lexer_compatibility_checker	38:0:1568:1666							
ANR	300144	FunctionDef	dummy_encoding_lexer_compatibility_checker (const zend_encoding * encoding)		300143	0					
ANR	300145	CompoundStatement		39:0:1653:1666	300143	0					
ANR	300146	ReturnStatement	return 0 ;	40:1:1656:1664	300143	0	True				
ANR	300147	PrimaryExpression	0		300143	0					
ANR	300148	ReturnType	static int		300143	1					
ANR	300149	Identifier	dummy_encoding_lexer_compatibility_checker		300143	2					
ANR	300150	ParameterList	const zend_encoding * encoding		300143	3					
ANR	300151	Parameter	const zend_encoding * encoding	38:54:1622:1650	300143	0	True				
ANR	300152	ParameterType	const zend_encoding *		300143	0					
ANR	300153	Identifier	encoding		300143	1					
ANR	300154	CFGEntryNode	ENTRY		300143		True				
ANR	300155	CFGExitNode	EXIT		300143		True				
ANR	300156	Symbol	encoding		300143						
ANR	300157	Function	dummy_encoding_detector	43:0:1669:1827							
ANR	300158	FunctionDef	"dummy_encoding_detector (const unsigned char * string , size_t length , const zend_encoding * * list , size_t list_size)"		300157	0					
ANR	300159	CompoundStatement		44:0:1811:1827	300157	0					
ANR	300160	ReturnStatement	return NULL ;	45:1:1814:1825	300157	0	True				
ANR	300161	Identifier	NULL		300157	0					
ANR	300162	ReturnType	static const zend_encoding *		300157	1					
ANR	300163	Identifier	dummy_encoding_detector		300157	2					
ANR	300164	ParameterList	"const unsigned char * string , size_t length , const zend_encoding * * list , size_t list_size"		300157	3					
ANR	300165	Parameter	const unsigned char * string	43:52:1721:1747	300157	0	True				
ANR	300166	ParameterType	const unsigned char *		300157	0					
ANR	300167	Identifier	string		300157	1					
ANR	300168	Parameter	size_t length	43:81:1750:1762	300157	1	True				
ANR	300169	ParameterType	size_t		300157	0					
ANR	300170	Identifier	length		300157	1					
ANR	300171	Parameter	const zend_encoding * * list	43:96:1765:1790	300157	2	True				
ANR	300172	ParameterType	const zend_encoding * *		300157	0					
ANR	300173	Identifier	list		300157	1					
ANR	300174	Parameter	size_t list_size	43:124:1793:1808	300157	3	True				
ANR	300175	ParameterType	size_t		300157	0					
ANR	300176	Identifier	list_size		300157	1					
ANR	300177	CFGEntryNode	ENTRY		300157		True				
ANR	300178	CFGExitNode	EXIT		300157		True				
ANR	300179	Symbol	NULL		300157						
ANR	300180	Symbol	string		300157						
ANR	300181	Symbol	length		300157						
ANR	300182	Symbol	list_size		300157						
ANR	300183	Symbol	list		300157						
ANR	300184	Function	dummy_encoding_converter	48:0:1830:2047							
ANR	300185	FunctionDef	"dummy_encoding_converter (unsigned char * * to , size_t * to_length , const unsigned char * from , size_t from_length , const zend_encoding * encoding_to , const zend_encoding * encoding_from)"		300184	0					
ANR	300186	CompoundStatement		49:0:2025:2047	300184	0					
ANR	300187	ReturnStatement	return ( size_t ) - 1 ;	50:1:2028:2045	300184	0	True				
ANR	300188	CastExpression	( size_t ) - 1		300184	0					
ANR	300189	CastTarget	size_t		300184	0					
ANR	300190	UnaryOperationExpression	- 1		300184	1					
ANR	300191	UnaryOperator	-		300184	0					
ANR	300192	PrimaryExpression	1		300184	1					
ANR	300193	ReturnType	static size_t		300184	1					
ANR	300194	Identifier	dummy_encoding_converter		300184	2					
ANR	300195	ParameterList	"unsigned char * * to , size_t * to_length , const unsigned char * from , size_t from_length , const zend_encoding * encoding_to , const zend_encoding * encoding_from"		300184	3					
ANR	300196	Parameter	unsigned char * * to	48:39:1869:1886	300184	0	True				
ANR	300197	ParameterType	unsigned char * *		300184	0					
ANR	300198	Identifier	to		300184	1					
ANR	300199	Parameter	size_t * to_length	48:59:1889:1905	300184	1	True				
ANR	300200	ParameterType	size_t *		300184	0					
ANR	300201	Identifier	to_length		300184	1					
ANR	300202	Parameter	const unsigned char * from	48:78:1908:1932	300184	2	True				
ANR	300203	ParameterType	const unsigned char *		300184	0					
ANR	300204	Identifier	from		300184	1					
ANR	300205	Parameter	size_t from_length	48:105:1935:1952	300184	3	True				
ANR	300206	ParameterType	size_t		300184	0					
ANR	300207	Identifier	from_length		300184	1					
ANR	300208	Parameter	const zend_encoding * encoding_to	48:125:1955:1986	300184	4	True				
ANR	300209	ParameterType	const zend_encoding *		300184	0					
ANR	300210	Identifier	encoding_to		300184	1					
ANR	300211	Parameter	const zend_encoding * encoding_from	48:159:1989:2022	300184	5	True				
ANR	300212	ParameterType	const zend_encoding *		300184	0					
ANR	300213	Identifier	encoding_from		300184	1					
ANR	300214	CFGEntryNode	ENTRY		300184		True				
ANR	300215	CFGExitNode	EXIT		300184		True				
ANR	300216	Symbol	from_length		300184						
ANR	300217	Symbol	encoding_from		300184						
ANR	300218	Symbol	to_length		300184						
ANR	300219	Symbol	from		300184						
ANR	300220	Symbol	to		300184						
ANR	300221	Symbol	encoding_to		300184						
ANR	300222	Function	dummy_encoding_list_parser	53:0:2050:2293							
ANR	300223	FunctionDef	"dummy_encoding_list_parser (const char * encoding_list , size_t encoding_list_len , const zend_encoding * * * return_list , size_t * return_size , int persistent)"		300222	0					
ANR	300224	CompoundStatement		54:0:2214:2293	300222	0					
ANR	300225	ExpressionStatement	"* return_list = pemalloc ( 0 , persistent )"	55:1:2217:2255	300222	0	True				
ANR	300226	AssignmentExpression	"* return_list = pemalloc ( 0 , persistent )"		300222	0		=			
ANR	300227	UnaryOperationExpression	* return_list		300222	0					
ANR	300228	UnaryOperator	*		300222	0					
ANR	300229	Identifier	return_list		300222	1					
ANR	300230	CallExpression	"pemalloc ( 0 , persistent )"		300222	1					
ANR	300231	Callee	pemalloc		300222	0					
ANR	300232	Identifier	pemalloc		300222	0					
ANR	300233	ArgumentList	0		300222	1					
ANR	300234	Argument	0		300222	0					
ANR	300235	PrimaryExpression	0		300222	0					
ANR	300236	Argument	persistent		300222	1					
ANR	300237	Identifier	persistent		300222	0					
ANR	300238	ExpressionStatement	* return_size = 0	56:1:2258:2274	300222	1	True				
ANR	300239	AssignmentExpression	* return_size = 0		300222	0		=			
ANR	300240	UnaryOperationExpression	* return_size		300222	0					
ANR	300241	UnaryOperator	*		300222	0					
ANR	300242	Identifier	return_size		300222	1					
ANR	300243	PrimaryExpression	0		300222	1					
ANR	300244	ReturnStatement	return SUCCESS ;	57:1:2277:2291	300222	2	True				
ANR	300245	Identifier	SUCCESS		300222	0					
ANR	300246	ReturnType	static int		300222	1					
ANR	300247	Identifier	dummy_encoding_list_parser		300222	2					
ANR	300248	ParameterList	"const char * encoding_list , size_t encoding_list_len , const zend_encoding * * * return_list , size_t * return_size , int persistent"		300222	3					
ANR	300249	Parameter	const char * encoding_list	53:38:2088:2112	300222	0	True				
ANR	300250	ParameterType	const char *		300222	0					
ANR	300251	Identifier	encoding_list		300222	1					
ANR	300252	Parameter	size_t encoding_list_len	53:65:2115:2138	300222	1	True				
ANR	300253	ParameterType	size_t		300222	0					
ANR	300254	Identifier	encoding_list_len		300222	1					
ANR	300255	Parameter	const zend_encoding * * * return_list	53:91:2141:2174	300222	2	True				
ANR	300256	ParameterType	const zend_encoding * * *		300222	0					
ANR	300257	Identifier	return_list		300222	1					
ANR	300258	Parameter	size_t * return_size	53:127:2177:2195	300222	3	True				
ANR	300259	ParameterType	size_t *		300222	0					
ANR	300260	Identifier	return_size		300222	1					
ANR	300261	Parameter	int persistent	53:148:2198:2211	300222	4	True				
ANR	300262	ParameterType	int		300222	0					
ANR	300263	Identifier	persistent		300222	1					
ANR	300264	CFGEntryNode	ENTRY		300222		True				
ANR	300265	CFGExitNode	EXIT		300222		True				
ANR	300266	Symbol	encoding_list_len		300222						
ANR	300267	Symbol	SUCCESS		300222						
ANR	300268	Symbol	* return_size		300222						
ANR	300269	Symbol	return_list		300222						
ANR	300270	Symbol	return_size		300222						
ANR	300271	Symbol	persistent		300222						
ANR	300272	Symbol	encoding_list		300222						
ANR	300273	Symbol	* return_list		300222						
ANR	300274	Symbol	pemalloc		300222						
ANR	300275	Function	dummy_internal_encoding_getter	60:0:2296:2377							
ANR	300276	FunctionDef	dummy_internal_encoding_getter ()		300275	0					
ANR	300277	CompoundStatement		61:0:2361:2377	300275	0					
ANR	300278	ReturnStatement	return NULL ;	62:1:2364:2375	300275	0	True				
ANR	300279	Identifier	NULL		300275	0					
ANR	300280	ReturnType	static const zend_encoding *		300275	1					
ANR	300281	Identifier	dummy_internal_encoding_getter		300275	2					
ANR	300282	ParameterList			300275	3					
ANR	300283	CFGEntryNode	ENTRY		300275		True				
ANR	300284	CFGExitNode	EXIT		300275		True				
ANR	300285	Symbol	NULL		300275						
ANR	300286	Function	dummy_internal_encoding_setter	65:0:2380:2472							
ANR	300287	FunctionDef	dummy_internal_encoding_setter (const zend_encoding * encoding)		300286	0					
ANR	300288	CompoundStatement		66:0:2453:2472	300286	0					
ANR	300289	ReturnStatement	return FAILURE ;	67:1:2456:2470	300286	0	True				
ANR	300290	Identifier	FAILURE		300286	0					
ANR	300291	ReturnType	static int		300286	1					
ANR	300292	Identifier	dummy_internal_encoding_setter		300286	2					
ANR	300293	ParameterList	const zend_encoding * encoding		300286	3					
ANR	300294	Parameter	const zend_encoding * encoding	65:42:2422:2450	300286	0	True				
ANR	300295	ParameterType	const zend_encoding *		300286	0					
ANR	300296	Identifier	encoding		300286	1					
ANR	300297	CFGEntryNode	ENTRY		300286		True				
ANR	300298	CFGExitNode	EXIT		300286		True				
ANR	300299	Symbol	encoding		300286						
ANR	300300	Symbol	FAILURE		300286						
ANR	300301	DeclStmt									
ANR	300302	Decl							zend_multibyte_functions	zend_multibyte_functions	multibyte_functions
ANR	300303	DeclStmt									
ANR	300304	Decl							const zend_encoding	const zend_encoding *	zend_multibyte_encoding_utf32be
ANR	300305	DeclStmt									
ANR	300306	Decl							const zend_encoding	const zend_encoding *	zend_multibyte_encoding_utf32le
ANR	300307	DeclStmt									
ANR	300308	Decl							const zend_encoding	const zend_encoding *	zend_multibyte_encoding_utf16be
ANR	300309	DeclStmt									
ANR	300310	Decl							const zend_encoding	const zend_encoding *	zend_multibyte_encoding_utf16le
ANR	300311	DeclStmt									
ANR	300312	Decl							const zend_encoding	const zend_encoding *	zend_multibyte_encoding_utf8
ANR	300313	Function	zend_multibyte_set_functions	88:0:3273:4413							
ANR	300314	FunctionDef	zend_multibyte_set_functions (const zend_multibyte_functions * functions)		300313	0					
ANR	300315	CompoundStatement		89:0:3358:4413	300313	0					
ANR	300316	ExpressionStatement	"zend_multibyte_encoding_utf32be = functions -> encoding_fetcher ( ""UTF-32BE"" )"	90:1:3361:3434	300313	0	True				
ANR	300317	AssignmentExpression	"zend_multibyte_encoding_utf32be = functions -> encoding_fetcher ( ""UTF-32BE"" )"		300313	0		=			
ANR	300318	Identifier	zend_multibyte_encoding_utf32be		300313	0					
ANR	300319	CallExpression	"functions -> encoding_fetcher ( ""UTF-32BE"" )"		300313	1					
ANR	300320	Callee	functions -> encoding_fetcher		300313	0					
ANR	300321	PtrMemberAccess	functions -> encoding_fetcher		300313	0					
ANR	300322	Identifier	functions		300313	0					
ANR	300323	Identifier	encoding_fetcher		300313	1					
ANR	300324	ArgumentList	"""UTF-32BE"""		300313	1					
ANR	300325	Argument	"""UTF-32BE"""		300313	0					
ANR	300326	PrimaryExpression	"""UTF-32BE"""		300313	0					
ANR	300327	IfStatement	if ( ! zend_multibyte_encoding_utf32be )		300313	1					
ANR	300328	Condition	! zend_multibyte_encoding_utf32be	91:5:3441:3472	300313	0	True				
ANR	300329	UnaryOperationExpression	! zend_multibyte_encoding_utf32be		300313	0					
ANR	300330	UnaryOperator	!		300313	0					
ANR	300331	Identifier	zend_multibyte_encoding_utf32be		300313	1					
ANR	300332	CompoundStatement		3:39:116:116	300313	1					
ANR	300333	ReturnStatement	return FAILURE ;	92:2:3479:3493	300313	0	True				
ANR	300334	Identifier	FAILURE		300313	0					
ANR	300335	ExpressionStatement	"zend_multibyte_encoding_utf32le = functions -> encoding_fetcher ( ""UTF-32LE"" )"	94:1:3499:3572	300313	2	True				
ANR	300336	AssignmentExpression	"zend_multibyte_encoding_utf32le = functions -> encoding_fetcher ( ""UTF-32LE"" )"		300313	0		=			
ANR	300337	Identifier	zend_multibyte_encoding_utf32le		300313	0					
ANR	300338	CallExpression	"functions -> encoding_fetcher ( ""UTF-32LE"" )"		300313	1					
ANR	300339	Callee	functions -> encoding_fetcher		300313	0					
ANR	300340	PtrMemberAccess	functions -> encoding_fetcher		300313	0					
ANR	300341	Identifier	functions		300313	0					
ANR	300342	Identifier	encoding_fetcher		300313	1					
ANR	300343	ArgumentList	"""UTF-32LE"""		300313	1					
ANR	300344	Argument	"""UTF-32LE"""		300313	0					
ANR	300345	PrimaryExpression	"""UTF-32LE"""		300313	0					
ANR	300346	IfStatement	if ( ! zend_multibyte_encoding_utf32le )		300313	3					
ANR	300347	Condition	! zend_multibyte_encoding_utf32le	95:5:3579:3610	300313	0	True				
ANR	300348	UnaryOperationExpression	! zend_multibyte_encoding_utf32le		300313	0					
ANR	300349	UnaryOperator	!		300313	0					
ANR	300350	Identifier	zend_multibyte_encoding_utf32le		300313	1					
ANR	300351	CompoundStatement		7:39:254:254	300313	1					
ANR	300352	ReturnStatement	return FAILURE ;	96:2:3617:3631	300313	0	True				
ANR	300353	Identifier	FAILURE		300313	0					
ANR	300354	ExpressionStatement	"zend_multibyte_encoding_utf16be = functions -> encoding_fetcher ( ""UTF-16BE"" )"	98:1:3637:3710	300313	4	True				
ANR	300355	AssignmentExpression	"zend_multibyte_encoding_utf16be = functions -> encoding_fetcher ( ""UTF-16BE"" )"		300313	0		=			
ANR	300356	Identifier	zend_multibyte_encoding_utf16be		300313	0					
ANR	300357	CallExpression	"functions -> encoding_fetcher ( ""UTF-16BE"" )"		300313	1					
ANR	300358	Callee	functions -> encoding_fetcher		300313	0					
ANR	300359	PtrMemberAccess	functions -> encoding_fetcher		300313	0					
ANR	300360	Identifier	functions		300313	0					
ANR	300361	Identifier	encoding_fetcher		300313	1					
ANR	300362	ArgumentList	"""UTF-16BE"""		300313	1					
ANR	300363	Argument	"""UTF-16BE"""		300313	0					
ANR	300364	PrimaryExpression	"""UTF-16BE"""		300313	0					
ANR	300365	IfStatement	if ( ! zend_multibyte_encoding_utf16be )		300313	5					
ANR	300366	Condition	! zend_multibyte_encoding_utf16be	99:5:3717:3748	300313	0	True				
ANR	300367	UnaryOperationExpression	! zend_multibyte_encoding_utf16be		300313	0					
ANR	300368	UnaryOperator	!		300313	0					
ANR	300369	Identifier	zend_multibyte_encoding_utf16be		300313	1					
ANR	300370	CompoundStatement		11:39:392:392	300313	1					
ANR	300371	ReturnStatement	return FAILURE ;	100:2:3755:3769	300313	0	True				
ANR	300372	Identifier	FAILURE		300313	0					
ANR	300373	ExpressionStatement	"zend_multibyte_encoding_utf16le = functions -> encoding_fetcher ( ""UTF-16LE"" )"	102:1:3775:3848	300313	6	True				
ANR	300374	AssignmentExpression	"zend_multibyte_encoding_utf16le = functions -> encoding_fetcher ( ""UTF-16LE"" )"		300313	0		=			
ANR	300375	Identifier	zend_multibyte_encoding_utf16le		300313	0					
ANR	300376	CallExpression	"functions -> encoding_fetcher ( ""UTF-16LE"" )"		300313	1					
ANR	300377	Callee	functions -> encoding_fetcher		300313	0					
ANR	300378	PtrMemberAccess	functions -> encoding_fetcher		300313	0					
ANR	300379	Identifier	functions		300313	0					
ANR	300380	Identifier	encoding_fetcher		300313	1					
ANR	300381	ArgumentList	"""UTF-16LE"""		300313	1					
ANR	300382	Argument	"""UTF-16LE"""		300313	0					
ANR	300383	PrimaryExpression	"""UTF-16LE"""		300313	0					
ANR	300384	IfStatement	if ( ! zend_multibyte_encoding_utf16le )		300313	7					
ANR	300385	Condition	! zend_multibyte_encoding_utf16le	103:5:3855:3886	300313	0	True				
ANR	300386	UnaryOperationExpression	! zend_multibyte_encoding_utf16le		300313	0					
ANR	300387	UnaryOperator	!		300313	0					
ANR	300388	Identifier	zend_multibyte_encoding_utf16le		300313	1					
ANR	300389	CompoundStatement		15:39:530:530	300313	1					
ANR	300390	ReturnStatement	return FAILURE ;	104:2:3893:3907	300313	0	True				
ANR	300391	Identifier	FAILURE		300313	0					
ANR	300392	ExpressionStatement	"zend_multibyte_encoding_utf8 = functions -> encoding_fetcher ( ""UTF-8"" )"	106:1:3913:3980	300313	8	True				
ANR	300393	AssignmentExpression	"zend_multibyte_encoding_utf8 = functions -> encoding_fetcher ( ""UTF-8"" )"		300313	0		=			
ANR	300394	Identifier	zend_multibyte_encoding_utf8		300313	0					
ANR	300395	CallExpression	"functions -> encoding_fetcher ( ""UTF-8"" )"		300313	1					
ANR	300396	Callee	functions -> encoding_fetcher		300313	0					
ANR	300397	PtrMemberAccess	functions -> encoding_fetcher		300313	0					
ANR	300398	Identifier	functions		300313	0					
ANR	300399	Identifier	encoding_fetcher		300313	1					
ANR	300400	ArgumentList	"""UTF-8"""		300313	1					
ANR	300401	Argument	"""UTF-8"""		300313	0					
ANR	300402	PrimaryExpression	"""UTF-8"""		300313	0					
ANR	300403	IfStatement	if ( ! zend_multibyte_encoding_utf8 )		300313	9					
ANR	300404	Condition	! zend_multibyte_encoding_utf8	107:5:3987:4015	300313	0	True				
ANR	300405	UnaryOperationExpression	! zend_multibyte_encoding_utf8		300313	0					
ANR	300406	UnaryOperator	!		300313	0					
ANR	300407	Identifier	zend_multibyte_encoding_utf8		300313	1					
ANR	300408	CompoundStatement		19:36:659:659	300313	1					
ANR	300409	ReturnStatement	return FAILURE ;	108:2:4022:4036	300313	0	True				
ANR	300410	Identifier	FAILURE		300313	0					
ANR	300411	ExpressionStatement	multibyte_functions = * functions	111:1:4043:4075	300313	10	True				
ANR	300412	AssignmentExpression	multibyte_functions = * functions		300313	0		=			
ANR	300413	Identifier	multibyte_functions		300313	0					
ANR	300414	UnaryOperationExpression	* functions		300313	1					
ANR	300415	UnaryOperator	*		300313	0					
ANR	300416	Identifier	functions		300313	1					
ANR	300417	CompoundStatement		29:2:864:962	300313	11					
ANR	300418	IdentifierDeclStatement	"const char * value = zend_ini_string ( ""zend.script_encoding"" , sizeof ( ""zend.script_encoding"" ) - 1 , 0 ) ;"	117:2:4223:4321	300313	0	True				
ANR	300419	IdentifierDecl	"* value = zend_ini_string ( ""zend.script_encoding"" , sizeof ( ""zend.script_encoding"" ) - 1 , 0 )"		300313	0					
ANR	300420	IdentifierDeclType	const char *		300313	0					
ANR	300421	Identifier	value		300313	1					
ANR	300422	AssignmentExpression	"* value = zend_ini_string ( ""zend.script_encoding"" , sizeof ( ""zend.script_encoding"" ) - 1 , 0 )"		300313	2		=			
ANR	300423	Identifier	value		300313	0					
ANR	300424	CallExpression	"zend_ini_string ( ""zend.script_encoding"" , sizeof ( ""zend.script_encoding"" ) - 1 , 0 )"		300313	1					
ANR	300425	Callee	zend_ini_string		300313	0					
ANR	300426	Identifier	zend_ini_string		300313	0					
ANR	300427	ArgumentList	"""zend.script_encoding"""		300313	1					
ANR	300428	Argument	"""zend.script_encoding"""		300313	0					
ANR	300429	PrimaryExpression	"""zend.script_encoding"""		300313	0					
ANR	300430	Argument	"sizeof ( ""zend.script_encoding"" ) - 1"		300313	1					
ANR	300431	AdditiveExpression	"sizeof ( ""zend.script_encoding"" ) - 1"		300313	0		-			
ANR	300432	SizeofExpression	"sizeof ( ""zend.script_encoding"" )"		300313	0					
ANR	300433	Sizeof	sizeof		300313	0					
ANR	300434	PrimaryExpression	"""zend.script_encoding"""		300313	1					
ANR	300435	PrimaryExpression	1		300313	1					
ANR	300436	Argument	0		300313	2					
ANR	300437	PrimaryExpression	0		300313	0					
ANR	300438	ExpressionStatement	"zend_multibyte_set_script_encoding_by_string ( value , strlen ( value ) )"	118:2:4325:4391	300313	1	True				
ANR	300439	CallExpression	"zend_multibyte_set_script_encoding_by_string ( value , strlen ( value ) )"		300313	0					
ANR	300440	Callee	zend_multibyte_set_script_encoding_by_string		300313	0					
ANR	300441	Identifier	zend_multibyte_set_script_encoding_by_string		300313	0					
ANR	300442	ArgumentList	value		300313	1					
ANR	300443	Argument	value		300313	0					
ANR	300444	Identifier	value		300313	0					
ANR	300445	Argument	strlen ( value )		300313	1					
ANR	300446	CallExpression	strlen ( value )		300313	0					
ANR	300447	Callee	strlen		300313	0					
ANR	300448	Identifier	strlen		300313	0					
ANR	300449	ArgumentList	value		300313	1					
ANR	300450	Argument	value		300313	0					
ANR	300451	Identifier	value		300313	0					
ANR	300452	ReturnStatement	return SUCCESS ;	120:1:4397:4411	300313	12	True				
ANR	300453	Identifier	SUCCESS		300313	0					
ANR	300454	ReturnType	ZEND_API int		300313	1					
ANR	300455	Identifier	zend_multibyte_set_functions		300313	2					
ANR	300456	ParameterList	const zend_multibyte_functions * functions		300313	3					
ANR	300457	Parameter	const zend_multibyte_functions * functions	88:42:3315:3355	300313	0	True				
ANR	300458	ParameterType	const zend_multibyte_functions *		300313	0					
ANR	300459	Identifier	functions		300313	1					
ANR	300460	CFGEntryNode	ENTRY		300313		True				
ANR	300461	CFGExitNode	EXIT		300313		True				
ANR	300462	Symbol	zend_ini_string		300313						
ANR	300463	Symbol	SUCCESS		300313						
ANR	300464	Symbol	functions		300313						
ANR	300465	Symbol	zend_multibyte_encoding_utf16le		300313						
ANR	300466	Symbol	zend_multibyte_encoding_utf32be		300313						
ANR	300467	Symbol	zend_multibyte_encoding_utf8		300313						
ANR	300468	Symbol	FAILURE		300313						
ANR	300469	Symbol	zend_multibyte_encoding_utf16be		300313						
ANR	300470	Symbol	strlen		300313						
ANR	300471	Symbol	* functions		300313						
ANR	300472	Symbol	multibyte_functions		300313						
ANR	300473	Symbol	functions -> encoding_fetcher		300313						
ANR	300474	Symbol	value		300313						
ANR	300475	Symbol	zend_multibyte_encoding_utf32le		300313						
ANR	300476	Function	zend_multibyte_get_functions	123:9:4425:4566							
ANR	300477	FunctionDef	zend_multibyte_get_functions ()		300476	0					
ANR	300478	CompoundStatement		124:0:4492:4566	300476	0					
ANR	300479	ReturnStatement	return multibyte_functions . provider_name ? & multibyte_functions : NULL ;	125:1:4495:4564	300476	0	True				
ANR	300480	ConditionalExpression	multibyte_functions . provider_name ? & multibyte_functions : NULL		300476	0					
ANR	300481	Condition	multibyte_functions . provider_name		300476	0					
ANR	300482	MemberAccess	multibyte_functions . provider_name		300476	0					
ANR	300483	Identifier	multibyte_functions		300476	0					
ANR	300484	Identifier	provider_name		300476	1					
ANR	300485	UnaryOperationExpression	& multibyte_functions		300476	1					
ANR	300486	UnaryOperator	&		300476	0					
ANR	300487	Identifier	multibyte_functions		300476	1					
ANR	300488	Identifier	NULL		300476	2					
ANR	300489	ReturnType	const zend_multibyte_functions *		300476	1					
ANR	300490	Identifier	zend_multibyte_get_functions		300476	2					
ANR	300491	ParameterList			300476	3					
ANR	300492	CFGEntryNode	ENTRY		300476		True				
ANR	300493	CFGExitNode	EXIT		300476		True				
ANR	300494	Symbol	NULL		300476						
ANR	300495	Symbol	& multibyte_functions		300476						
ANR	300496	Symbol	multibyte_functions		300476						
ANR	300497	Symbol	multibyte_functions . provider_name		300476						
ANR	300498	Function	zend_multibyte_fetch_encoding	128:9:4578:4701							
ANR	300499	FunctionDef	zend_multibyte_fetch_encoding (const char * name)		300498	0					
ANR	300500	CompoundStatement		129:0:4647:4701	300498	0					
ANR	300501	ReturnStatement	return multibyte_functions . encoding_fetcher ( name ) ;	130:1:4650:4699	300498	0	True				
ANR	300502	CallExpression	multibyte_functions . encoding_fetcher ( name )		300498	0					
ANR	300503	Callee	multibyte_functions . encoding_fetcher		300498	0					
ANR	300504	MemberAccess	multibyte_functions . encoding_fetcher		300498	0					
ANR	300505	Identifier	multibyte_functions		300498	0					
ANR	300506	Identifier	encoding_fetcher		300498	1					
ANR	300507	ArgumentList	name		300498	1					
ANR	300508	Argument	name		300498	0					
ANR	300509	Identifier	name		300498	0					
ANR	300510	ReturnType	const zend_encoding *		300498	1					
ANR	300511	Identifier	zend_multibyte_fetch_encoding		300498	2					
ANR	300512	ParameterList	const char * name		300498	3					
ANR	300513	Parameter	const char * name	128:60:4629:4644	300498	0	True				
ANR	300514	ParameterType	const char *		300498	0					
ANR	300515	Identifier	name		300498	1					
ANR	300516	CFGEntryNode	ENTRY		300498		True				
ANR	300517	CFGExitNode	EXIT		300498		True				
ANR	300518	Symbol	name		300498						
ANR	300519	Symbol	multibyte_functions		300498						
ANR	300520	Symbol	multibyte_functions . encoding_fetcher		300498						
ANR	300521	Function	zend_multibyte_get_encoding_name	133:9:4713:4851							
ANR	300522	FunctionDef	zend_multibyte_get_encoding_name (const zend_encoding * encoding)		300521	0					
ANR	300523	CompoundStatement		134:0:4789:4851	300521	0					
ANR	300524	ReturnStatement	return multibyte_functions . encoding_name_getter ( encoding ) ;	135:1:4792:4849	300521	0	True				
ANR	300525	CallExpression	multibyte_functions . encoding_name_getter ( encoding )		300521	0					
ANR	300526	Callee	multibyte_functions . encoding_name_getter		300521	0					
ANR	300527	MemberAccess	multibyte_functions . encoding_name_getter		300521	0					
ANR	300528	Identifier	multibyte_functions		300521	0					
ANR	300529	Identifier	encoding_name_getter		300521	1					
ANR	300530	ArgumentList	encoding		300521	1					
ANR	300531	Argument	encoding		300521	0					
ANR	300532	Identifier	encoding		300521	0					
ANR	300533	ReturnType	const char *		300521	1					
ANR	300534	Identifier	zend_multibyte_get_encoding_name		300521	2					
ANR	300535	ParameterList	const zend_encoding * encoding		300521	3					
ANR	300536	Parameter	const zend_encoding * encoding	133:54:4758:4786	300521	0	True				
ANR	300537	ParameterType	const zend_encoding *		300521	0					
ANR	300538	Identifier	encoding		300521	1					
ANR	300539	CFGEntryNode	ENTRY		300521		True				
ANR	300540	CFGExitNode	EXIT		300521		True				
ANR	300541	Symbol	multibyte_functions . encoding_name_getter		300521						
ANR	300542	Symbol	multibyte_functions		300521						
ANR	300543	Symbol	encoding		300521						
ANR	300544	Function	zend_multibyte_check_lexer_compatibility	138:0:4854:5008							
ANR	300545	FunctionDef	zend_multibyte_check_lexer_compatibility (const zend_encoding * encoding)		300544	0					
ANR	300546	CompoundStatement		139:0:4939:5008	300544	0					
ANR	300547	ReturnStatement	return multibyte_functions . lexer_compatibility_checker ( encoding ) ;	140:1:4942:5006	300544	0	True				
ANR	300548	CallExpression	multibyte_functions . lexer_compatibility_checker ( encoding )		300544	0					
ANR	300549	Callee	multibyte_functions . lexer_compatibility_checker		300544	0					
ANR	300550	MemberAccess	multibyte_functions . lexer_compatibility_checker		300544	0					
ANR	300551	Identifier	multibyte_functions		300544	0					
ANR	300552	Identifier	lexer_compatibility_checker		300544	1					
ANR	300553	ArgumentList	encoding		300544	1					
ANR	300554	Argument	encoding		300544	0					
ANR	300555	Identifier	encoding		300544	0					
ANR	300556	ReturnType	ZEND_API int		300544	1					
ANR	300557	Identifier	zend_multibyte_check_lexer_compatibility		300544	2					
ANR	300558	ParameterList	const zend_encoding * encoding		300544	3					
ANR	300559	Parameter	const zend_encoding * encoding	138:54:4908:4936	300544	0	True				
ANR	300560	ParameterType	const zend_encoding *		300544	0					
ANR	300561	Identifier	encoding		300544	1					
ANR	300562	CFGEntryNode	ENTRY		300544		True				
ANR	300563	CFGExitNode	EXIT		300544		True				
ANR	300564	Symbol	multibyte_functions . lexer_compatibility_checker		300544						
ANR	300565	Symbol	multibyte_functions		300544						
ANR	300566	Symbol	encoding		300544						
ANR	300567	Function	zend_multibyte_encoding_detector	143:9:5020:5246							
ANR	300568	FunctionDef	"zend_multibyte_encoding_detector (const unsigned char * string , size_t length , const zend_encoding * * list , size_t list_size)"		300567	0					
ANR	300569	CompoundStatement		144:0:5164:5246	300567	0					
ANR	300570	ReturnStatement	"return multibyte_functions . encoding_detector ( string , length , list , list_size ) ;"	145:1:5167:5244	300567	0	True				
ANR	300571	CallExpression	"multibyte_functions . encoding_detector ( string , length , list , list_size )"		300567	0					
ANR	300572	Callee	multibyte_functions . encoding_detector		300567	0					
ANR	300573	MemberAccess	multibyte_functions . encoding_detector		300567	0					
ANR	300574	Identifier	multibyte_functions		300567	0					
ANR	300575	Identifier	encoding_detector		300567	1					
ANR	300576	ArgumentList	string		300567	1					
ANR	300577	Argument	string		300567	0					
ANR	300578	Identifier	string		300567	0					
ANR	300579	Argument	length		300567	1					
ANR	300580	Identifier	length		300567	0					
ANR	300581	Argument	list		300567	2					
ANR	300582	Identifier	list		300567	0					
ANR	300583	Argument	list_size		300567	3					
ANR	300584	Identifier	list_size		300567	0					
ANR	300585	ReturnType	const zend_encoding *		300567	1					
ANR	300586	Identifier	zend_multibyte_encoding_detector		300567	2					
ANR	300587	ParameterList	"const unsigned char * string , size_t length , const zend_encoding * * list , size_t list_size"		300567	3					
ANR	300588	Parameter	const unsigned char * string	143:63:5074:5100	300567	0	True				
ANR	300589	ParameterType	const unsigned char *		300567	0					
ANR	300590	Identifier	string		300567	1					
ANR	300591	Parameter	size_t length	143:92:5103:5115	300567	1	True				
ANR	300592	ParameterType	size_t		300567	0					
ANR	300593	Identifier	length		300567	1					
ANR	300594	Parameter	const zend_encoding * * list	143:107:5118:5143	300567	2	True				
ANR	300595	ParameterType	const zend_encoding * *		300567	0					
ANR	300596	Identifier	list		300567	1					
ANR	300597	Parameter	size_t list_size	143:135:5146:5161	300567	3	True				
ANR	300598	ParameterType	size_t		300567	0					
ANR	300599	Identifier	list_size		300567	1					
ANR	300600	CFGEntryNode	ENTRY		300567		True				
ANR	300601	CFGExitNode	EXIT		300567		True				
ANR	300602	Symbol	string		300567						
ANR	300603	Symbol	length		300567						
ANR	300604	Symbol	multibyte_functions		300567						
ANR	300605	Symbol	multibyte_functions . encoding_detector		300567						
ANR	300606	Symbol	list_size		300567						
ANR	300607	Symbol	list		300567						
ANR	300608	Function	zend_multibyte_encoding_converter	148:0:5249:5567							
ANR	300609	FunctionDef	"zend_multibyte_encoding_converter (unsigned char * * to , size_t * to_length , const unsigned char * from , size_t from_length , const zend_encoding * encoding_to , const zend_encoding * encoding_from)"		300608	0					
ANR	300610	CompoundStatement		149:0:5455:5567	300608	0					
ANR	300611	ReturnStatement	"return multibyte_functions . encoding_converter ( to , to_length , from , from_length , encoding_to , encoding_from ) ;"	150:1:5458:5565	300608	0	True				
ANR	300612	CallExpression	"multibyte_functions . encoding_converter ( to , to_length , from , from_length , encoding_to , encoding_from )"		300608	0					
ANR	300613	Callee	multibyte_functions . encoding_converter		300608	0					
ANR	300614	MemberAccess	multibyte_functions . encoding_converter		300608	0					
ANR	300615	Identifier	multibyte_functions		300608	0					
ANR	300616	Identifier	encoding_converter		300608	1					
ANR	300617	ArgumentList	to		300608	1					
ANR	300618	Argument	to		300608	0					
ANR	300619	Identifier	to		300608	0					
ANR	300620	Argument	to_length		300608	1					
ANR	300621	Identifier	to_length		300608	0					
ANR	300622	Argument	from		300608	2					
ANR	300623	Identifier	from		300608	0					
ANR	300624	Argument	from_length		300608	3					
ANR	300625	Identifier	from_length		300608	0					
ANR	300626	Argument	encoding_to		300608	4					
ANR	300627	Identifier	encoding_to		300608	0					
ANR	300628	Argument	encoding_from		300608	5					
ANR	300629	Identifier	encoding_from		300608	0					
ANR	300630	ReturnType	ZEND_API size_t		300608	1					
ANR	300631	Identifier	zend_multibyte_encoding_converter		300608	2					
ANR	300632	ParameterList	"unsigned char * * to , size_t * to_length , const unsigned char * from , size_t from_length , const zend_encoding * encoding_to , const zend_encoding * encoding_from"		300608	3					
ANR	300633	Parameter	unsigned char * * to	148:50:5299:5316	300608	0	True				
ANR	300634	ParameterType	unsigned char * *		300608	0					
ANR	300635	Identifier	to		300608	1					
ANR	300636	Parameter	size_t * to_length	148:70:5319:5335	300608	1	True				
ANR	300637	ParameterType	size_t *		300608	0					
ANR	300638	Identifier	to_length		300608	1					
ANR	300639	Parameter	const unsigned char * from	148:89:5338:5362	300608	2	True				
ANR	300640	ParameterType	const unsigned char *		300608	0					
ANR	300641	Identifier	from		300608	1					
ANR	300642	Parameter	size_t from_length	148:116:5365:5382	300608	3	True				
ANR	300643	ParameterType	size_t		300608	0					
ANR	300644	Identifier	from_length		300608	1					
ANR	300645	Parameter	const zend_encoding * encoding_to	148:136:5385:5416	300608	4	True				
ANR	300646	ParameterType	const zend_encoding *		300608	0					
ANR	300647	Identifier	encoding_to		300608	1					
ANR	300648	Parameter	const zend_encoding * encoding_from	148:170:5419:5452	300608	5	True				
ANR	300649	ParameterType	const zend_encoding *		300608	0					
ANR	300650	Identifier	encoding_from		300608	1					
ANR	300651	CFGEntryNode	ENTRY		300608		True				
ANR	300652	CFGExitNode	EXIT		300608		True				
ANR	300653	Symbol	multibyte_functions . encoding_converter		300608						
ANR	300654	Symbol	from_length		300608						
ANR	300655	Symbol	encoding_from		300608						
ANR	300656	Symbol	to_length		300608						
ANR	300657	Symbol	from		300608						
ANR	300658	Symbol	multibyte_functions		300608						
ANR	300659	Symbol	to		300608						
ANR	300660	Symbol	encoding_to		300608						
ANR	300661	Function	zend_multibyte_parse_encoding_list	153:0:5570:5868							
ANR	300662	FunctionDef	"zend_multibyte_parse_encoding_list (const char * encoding_list , size_t encoding_list_len , const zend_encoding * * * return_list , size_t * return_size , int persistent)"		300661	0					
ANR	300663	CompoundStatement		154:0:5744:5868	300661	0					
ANR	300664	ReturnStatement	"return multibyte_functions . encoding_list_parser ( encoding_list , encoding_list_len , return_list , return_size , persistent ) ;"	155:1:5747:5866	300661	0	True				
ANR	300665	CallExpression	"multibyte_functions . encoding_list_parser ( encoding_list , encoding_list_len , return_list , return_size , persistent )"		300661	0					
ANR	300666	Callee	multibyte_functions . encoding_list_parser		300661	0					
ANR	300667	MemberAccess	multibyte_functions . encoding_list_parser		300661	0					
ANR	300668	Identifier	multibyte_functions		300661	0					
ANR	300669	Identifier	encoding_list_parser		300661	1					
ANR	300670	ArgumentList	encoding_list		300661	1					
ANR	300671	Argument	encoding_list		300661	0					
ANR	300672	Identifier	encoding_list		300661	0					
ANR	300673	Argument	encoding_list_len		300661	1					
ANR	300674	Identifier	encoding_list_len		300661	0					
ANR	300675	Argument	return_list		300661	2					
ANR	300676	Identifier	return_list		300661	0					
ANR	300677	Argument	return_size		300661	3					
ANR	300678	Identifier	return_size		300661	0					
ANR	300679	Argument	persistent		300661	4					
ANR	300680	Identifier	persistent		300661	0					
ANR	300681	ReturnType	ZEND_API int		300661	1					
ANR	300682	Identifier	zend_multibyte_parse_encoding_list		300661	2					
ANR	300683	ParameterList	"const char * encoding_list , size_t encoding_list_len , const zend_encoding * * * return_list , size_t * return_size , int persistent"		300661	3					
ANR	300684	Parameter	const char * encoding_list	153:48:5618:5642	300661	0	True				
ANR	300685	ParameterType	const char *		300661	0					
ANR	300686	Identifier	encoding_list		300661	1					
ANR	300687	Parameter	size_t encoding_list_len	153:75:5645:5668	300661	1	True				
ANR	300688	ParameterType	size_t		300661	0					
ANR	300689	Identifier	encoding_list_len		300661	1					
ANR	300690	Parameter	const zend_encoding * * * return_list	153:101:5671:5704	300661	2	True				
ANR	300691	ParameterType	const zend_encoding * * *		300661	0					
ANR	300692	Identifier	return_list		300661	1					
ANR	300693	Parameter	size_t * return_size	153:137:5707:5725	300661	3	True				
ANR	300694	ParameterType	size_t *		300661	0					
ANR	300695	Identifier	return_size		300661	1					
ANR	300696	Parameter	int persistent	153:158:5728:5741	300661	4	True				
ANR	300697	ParameterType	int		300661	0					
ANR	300698	Identifier	persistent		300661	1					
ANR	300699	CFGEntryNode	ENTRY		300661		True				
ANR	300700	CFGExitNode	EXIT		300661		True				
ANR	300701	Symbol	multibyte_functions . encoding_list_parser		300661						
ANR	300702	Symbol	encoding_list_len		300661						
ANR	300703	Symbol	return_list		300661						
ANR	300704	Symbol	return_size		300661						
ANR	300705	Symbol	multibyte_functions		300661						
ANR	300706	Symbol	persistent		300661						
ANR	300707	Symbol	encoding_list		300661						
ANR	300708	Function	zend_multibyte_get_internal_encoding	158:9:5880:6002							
ANR	300709	FunctionDef	zend_multibyte_get_internal_encoding ()		300708	0					
ANR	300710	CompoundStatement		159:0:5944:6002	300708	0					
ANR	300711	ReturnStatement	return multibyte_functions . internal_encoding_getter ( ) ;	160:1:5947:6000	300708	0	True				
ANR	300712	CallExpression	multibyte_functions . internal_encoding_getter ( )		300708	0					
ANR	300713	Callee	multibyte_functions . internal_encoding_getter		300708	0					
ANR	300714	MemberAccess	multibyte_functions . internal_encoding_getter		300708	0					
ANR	300715	Identifier	multibyte_functions		300708	0					
ANR	300716	Identifier	internal_encoding_getter		300708	1					
ANR	300717	ArgumentList			300708	1					
ANR	300718	ReturnType	const zend_encoding *		300708	1					
ANR	300719	Identifier	zend_multibyte_get_internal_encoding		300708	2					
ANR	300720	ParameterList			300708	3					
ANR	300721	CFGEntryNode	ENTRY		300708		True				
ANR	300722	CFGExitNode	EXIT		300708		True				
ANR	300723	Symbol	multibyte_functions		300708						
ANR	300724	Symbol	multibyte_functions . internal_encoding_getter		300708						
ANR	300725	Function	zend_multibyte_get_script_encoding	163:9:6014:6114							
ANR	300726	FunctionDef	zend_multibyte_get_script_encoding ()		300725	0					
ANR	300727	CompoundStatement		164:0:6076:6114	300725	0					
ANR	300728	ReturnStatement	return LANG_SCNG ( script_encoding ) ;	165:1:6079:6112	300725	0	True				
ANR	300729	CallExpression	LANG_SCNG ( script_encoding )		300725	0					
ANR	300730	Callee	LANG_SCNG		300725	0					
ANR	300731	Identifier	LANG_SCNG		300725	0					
ANR	300732	ArgumentList	script_encoding		300725	1					
ANR	300733	Argument	script_encoding		300725	0					
ANR	300734	Identifier	script_encoding		300725	0					
ANR	300735	ReturnType	const zend_encoding *		300725	1					
ANR	300736	Identifier	zend_multibyte_get_script_encoding		300725	2					
ANR	300737	ParameterList			300725	3					
ANR	300738	CFGEntryNode	ENTRY		300725		True				
ANR	300739	CFGExitNode	EXIT		300725		True				
ANR	300740	Symbol	script_encoding		300725						
ANR	300741	Symbol	LANG_SCNG		300725						
ANR	300742	Function	zend_multibyte_set_script_encoding	168:0:6117:6421							
ANR	300743	FunctionDef	"zend_multibyte_set_script_encoding (const zend_encoding * * encoding_list , size_t encoding_list_size)"		300742	0					
ANR	300744	CompoundStatement		169:0:6229:6421	300742	0					
ANR	300745	IfStatement	if ( CG ( script_encoding_list ) )		300742	0					
ANR	300746	Condition	CG ( script_encoding_list )	170:5:6236:6259	300742	0	True				
ANR	300747	CallExpression	CG ( script_encoding_list )		300742	0					
ANR	300748	Callee	CG		300742	0					
ANR	300749	Identifier	CG		300742	0					
ANR	300750	ArgumentList	script_encoding_list		300742	1					
ANR	300751	Argument	script_encoding_list		300742	0					
ANR	300752	Identifier	script_encoding_list		300742	0					
ANR	300753	CompoundStatement		2:31:32:32	300742	1					
ANR	300754	ExpressionStatement	free ( ( char * ) CG ( script_encoding_list ) )	171:2:6266:6303	300742	0	True				
ANR	300755	CallExpression	free ( ( char * ) CG ( script_encoding_list ) )		300742	0					
ANR	300756	Callee	free		300742	0					
ANR	300757	Identifier	free		300742	0					
ANR	300758	ArgumentList	( char * ) CG ( script_encoding_list )		300742	1					
ANR	300759	Argument	( char * ) CG ( script_encoding_list )		300742	0					
ANR	300760	CastExpression	( char * ) CG ( script_encoding_list )		300742	0					
ANR	300761	CastTarget	char *		300742	0					
ANR	300762	CallExpression	CG ( script_encoding_list )		300742	1					
ANR	300763	Callee	CG		300742	0					
ANR	300764	Identifier	CG		300742	0					
ANR	300765	ArgumentList	script_encoding_list		300742	1					
ANR	300766	Argument	script_encoding_list		300742	0					
ANR	300767	Identifier	script_encoding_list		300742	0					
ANR	300768	ExpressionStatement	CG ( script_encoding_list ) = encoding_list	173:1:6309:6349	300742	1	True				
ANR	300769	AssignmentExpression	CG ( script_encoding_list ) = encoding_list		300742	0		=			
ANR	300770	CallExpression	CG ( script_encoding_list )		300742	0					
ANR	300771	Callee	CG		300742	0					
ANR	300772	Identifier	CG		300742	0					
ANR	300773	ArgumentList	script_encoding_list		300742	1					
ANR	300774	Argument	script_encoding_list		300742	0					
ANR	300775	Identifier	script_encoding_list		300742	0					
ANR	300776	Identifier	encoding_list		300742	1					
ANR	300777	ExpressionStatement	CG ( script_encoding_list_size ) = encoding_list_size	174:1:6352:6402	300742	2	True				
ANR	300778	AssignmentExpression	CG ( script_encoding_list_size ) = encoding_list_size		300742	0		=			
ANR	300779	CallExpression	CG ( script_encoding_list_size )		300742	0					
ANR	300780	Callee	CG		300742	0					
ANR	300781	Identifier	CG		300742	0					
ANR	300782	ArgumentList	script_encoding_list_size		300742	1					
ANR	300783	Argument	script_encoding_list_size		300742	0					
ANR	300784	Identifier	script_encoding_list_size		300742	0					
ANR	300785	Identifier	encoding_list_size		300742	1					
ANR	300786	ReturnStatement	return SUCCESS ;	175:1:6405:6419	300742	3	True				
ANR	300787	Identifier	SUCCESS		300742	0					
ANR	300788	ReturnType	ZEND_API int		300742	1					
ANR	300789	Identifier	zend_multibyte_set_script_encoding		300742	2					
ANR	300790	ParameterList	"const zend_encoding * * encoding_list , size_t encoding_list_size"		300742	3					
ANR	300791	Parameter	const zend_encoding * * encoding_list	168:48:6165:6199	300742	0	True				
ANR	300792	ParameterType	const zend_encoding * *		300742	0					
ANR	300793	Identifier	encoding_list		300742	1					
ANR	300794	Parameter	size_t encoding_list_size	168:85:6202:6226	300742	1	True				
ANR	300795	ParameterType	size_t		300742	0					
ANR	300796	Identifier	encoding_list_size		300742	1					
ANR	300797	CFGEntryNode	ENTRY		300742		True				
ANR	300798	CFGExitNode	EXIT		300742		True				
ANR	300799	Symbol	SUCCESS		300742						
ANR	300800	Symbol	CG		300742						
ANR	300801	Symbol	script_encoding_list_size		300742						
ANR	300802	Symbol	encoding_list_size		300742						
ANR	300803	Symbol	encoding_list		300742						
ANR	300804	Symbol	script_encoding_list		300742						
ANR	300805	Function	zend_multibyte_set_internal_encoding	178:0:6424:6571							
ANR	300806	FunctionDef	zend_multibyte_set_internal_encoding (const zend_encoding * encoding)		300805	0					
ANR	300807	CompoundStatement		179:0:6505:6571	300805	0					
ANR	300808	ReturnStatement	return multibyte_functions . internal_encoding_setter ( encoding ) ;	180:1:6508:6569	300805	0	True				
ANR	300809	CallExpression	multibyte_functions . internal_encoding_setter ( encoding )		300805	0					
ANR	300810	Callee	multibyte_functions . internal_encoding_setter		300805	0					
ANR	300811	MemberAccess	multibyte_functions . internal_encoding_setter		300805	0					
ANR	300812	Identifier	multibyte_functions		300805	0					
ANR	300813	Identifier	internal_encoding_setter		300805	1					
ANR	300814	ArgumentList	encoding		300805	1					
ANR	300815	Argument	encoding		300805	0					
ANR	300816	Identifier	encoding		300805	0					
ANR	300817	ReturnType	ZEND_API int		300805	1					
ANR	300818	Identifier	zend_multibyte_set_internal_encoding		300805	2					
ANR	300819	ParameterList	const zend_encoding * encoding		300805	3					
ANR	300820	Parameter	const zend_encoding * encoding	178:50:6474:6502	300805	0	True				
ANR	300821	ParameterType	const zend_encoding *		300805	0					
ANR	300822	Identifier	encoding		300805	1					
ANR	300823	CFGEntryNode	ENTRY		300805		True				
ANR	300824	CFGExitNode	EXIT		300805		True				
ANR	300825	Symbol	multibyte_functions . internal_encoding_setter		300805						
ANR	300826	Symbol	multibyte_functions		300805						
ANR	300827	Symbol	encoding		300805						
ANR	300828	Function	zend_multibyte_set_script_encoding_by_string	183:0:6574:7115							
ANR	300829	FunctionDef	"zend_multibyte_set_script_encoding_by_string (const char * new_value , size_t new_value_length)"		300828	0					
ANR	300830	CompoundStatement		184:0:6680:7115	300828	0					
ANR	300831	IdentifierDeclStatement	const zend_encoding * * list = 0 ;	185:1:6683:6713	300828	0	True				
ANR	300832	IdentifierDecl	* * list = 0		300828	0					
ANR	300833	IdentifierDeclType	const zend_encoding * *		300828	0					
ANR	300834	Identifier	list		300828	1					
ANR	300835	AssignmentExpression	* * list = 0		300828	2		=			
ANR	300836	Identifier	list		300828	0					
ANR	300837	PrimaryExpression	0		300828	1					
ANR	300838	IdentifierDeclStatement	size_t size = 0 ;	186:1:6716:6731	300828	1	True				
ANR	300839	IdentifierDecl	size = 0		300828	0					
ANR	300840	IdentifierDeclType	size_t		300828	0					
ANR	300841	Identifier	size		300828	1					
ANR	300842	AssignmentExpression	size = 0		300828	2		=			
ANR	300843	Identifier	size		300828	0					
ANR	300844	PrimaryExpression	0		300828	1					
ANR	300845	IfStatement	if ( ! new_value )		300828	2					
ANR	300846	Condition	! new_value	188:5:6739:6748	300828	0	True				
ANR	300847	UnaryOperationExpression	! new_value		300828	0					
ANR	300848	UnaryOperator	!		300828	0					
ANR	300849	Identifier	new_value		300828	1					
ANR	300850	CompoundStatement		5:17:70:70	300828	1					
ANR	300851	ExpressionStatement	"zend_multibyte_set_script_encoding ( NULL , 0 )"	189:2:6755:6798	300828	0	True				
ANR	300852	CallExpression	"zend_multibyte_set_script_encoding ( NULL , 0 )"		300828	0					
ANR	300853	Callee	zend_multibyte_set_script_encoding		300828	0					
ANR	300854	Identifier	zend_multibyte_set_script_encoding		300828	0					
ANR	300855	ArgumentList	NULL		300828	1					
ANR	300856	Argument	NULL		300828	0					
ANR	300857	Identifier	NULL		300828	0					
ANR	300858	Argument	0		300828	1					
ANR	300859	PrimaryExpression	0		300828	0					
ANR	300860	ReturnStatement	return SUCCESS ;	190:2:6802:6816	300828	1	True				
ANR	300861	Identifier	SUCCESS		300828	0					
ANR	300862	IfStatement	"if ( FAILURE == zend_multibyte_parse_encoding_list ( new_value , new_value_length , & list , & size , 1 ) )"		300828	3					
ANR	300863	Condition	"FAILURE == zend_multibyte_parse_encoding_list ( new_value , new_value_length , & list , & size , 1 )"	193:5:6827:6917	300828	0	True				
ANR	300864	EqualityExpression	"FAILURE == zend_multibyte_parse_encoding_list ( new_value , new_value_length , & list , & size , 1 )"		300828	0		==			
ANR	300865	Identifier	FAILURE		300828	0					
ANR	300866	CallExpression	"zend_multibyte_parse_encoding_list ( new_value , new_value_length , & list , & size , 1 )"		300828	1					
ANR	300867	Callee	zend_multibyte_parse_encoding_list		300828	0					
ANR	300868	Identifier	zend_multibyte_parse_encoding_list		300828	0					
ANR	300869	ArgumentList	new_value		300828	1					
ANR	300870	Argument	new_value		300828	0					
ANR	300871	Identifier	new_value		300828	0					
ANR	300872	Argument	new_value_length		300828	1					
ANR	300873	Identifier	new_value_length		300828	0					
ANR	300874	Argument	& list		300828	2					
ANR	300875	UnaryOperationExpression	& list		300828	0					
ANR	300876	UnaryOperator	&		300828	0					
ANR	300877	Identifier	list		300828	1					
ANR	300878	Argument	& size		300828	3					
ANR	300879	UnaryOperationExpression	& size		300828	0					
ANR	300880	UnaryOperator	&		300828	0					
ANR	300881	Identifier	size		300828	1					
ANR	300882	Argument	1		300828	4					
ANR	300883	PrimaryExpression	1		300828	0					
ANR	300884	CompoundStatement		10:98:239:239	300828	1					
ANR	300885	ReturnStatement	return FAILURE ;	194:2:6924:6938	300828	0	True				
ANR	300886	Identifier	FAILURE		300828	0					
ANR	300887	IfStatement	if ( size == 0 )		300828	4					
ANR	300888	Condition	size == 0	197:5:6949:6957	300828	0	True				
ANR	300889	EqualityExpression	size == 0		300828	0		==			
ANR	300890	Identifier	size		300828	0					
ANR	300891	PrimaryExpression	0		300828	1					
ANR	300892	CompoundStatement		14:16:279:279	300828	1					
ANR	300893	ExpressionStatement	"pefree ( ( void * ) list , 1 )"	198:2:6964:6986	300828	0	True				
ANR	300894	CallExpression	"pefree ( ( void * ) list , 1 )"		300828	0					
ANR	300895	Callee	pefree		300828	0					
ANR	300896	Identifier	pefree		300828	0					
ANR	300897	ArgumentList	( void * ) list		300828	1					
ANR	300898	Argument	( void * ) list		300828	0					
ANR	300899	CastExpression	( void * ) list		300828	0					
ANR	300900	CastTarget	void *		300828	0					
ANR	300901	Identifier	list		300828	1					
ANR	300902	Argument	1		300828	1					
ANR	300903	PrimaryExpression	1		300828	0					
ANR	300904	ReturnStatement	return FAILURE ;	199:2:6990:7004	300828	1	True				
ANR	300905	Identifier	FAILURE		300828	0					
ANR	300906	IfStatement	"if ( FAILURE == zend_multibyte_set_script_encoding ( list , size ) )"		300828	5					
ANR	300907	Condition	"FAILURE == zend_multibyte_set_script_encoding ( list , size )"	202:5:7015:7071	300828	0	True				
ANR	300908	EqualityExpression	"FAILURE == zend_multibyte_set_script_encoding ( list , size )"		300828	0		==			
ANR	300909	Identifier	FAILURE		300828	0					
ANR	300910	CallExpression	"zend_multibyte_set_script_encoding ( list , size )"		300828	1					
ANR	300911	Callee	zend_multibyte_set_script_encoding		300828	0					
ANR	300912	Identifier	zend_multibyte_set_script_encoding		300828	0					
ANR	300913	ArgumentList	list		300828	1					
ANR	300914	Argument	list		300828	0					
ANR	300915	Identifier	list		300828	0					
ANR	300916	Argument	size		300828	1					
ANR	300917	Identifier	size		300828	0					
ANR	300918	CompoundStatement		19:64:393:393	300828	1					
ANR	300919	ReturnStatement	return FAILURE ;	203:2:7078:7092	300828	0	True				
ANR	300920	Identifier	FAILURE		300828	0					
ANR	300921	ReturnStatement	return SUCCESS ;	206:1:7099:7113	300828	6	True				
ANR	300922	Identifier	SUCCESS		300828	0					
ANR	300923	ReturnType	ZEND_API int		300828	1					
ANR	300924	Identifier	zend_multibyte_set_script_encoding_by_string		300828	2					
ANR	300925	ParameterList	"const char * new_value , size_t new_value_length"		300828	3					
ANR	300926	Parameter	const char * new_value	183:58:6632:6652	300828	0	True				
ANR	300927	ParameterType	const char *		300828	0					
ANR	300928	Identifier	new_value		300828	1					
ANR	300929	Parameter	size_t new_value_length	183:81:6655:6677	300828	1	True				
ANR	300930	ParameterType	size_t		300828	0					
ANR	300931	Identifier	new_value_length		300828	1					
ANR	300932	CFGEntryNode	ENTRY		300828		True				
ANR	300933	CFGExitNode	EXIT		300828		True				
ANR	300934	Symbol	NULL		300828						
ANR	300935	Symbol	SUCCESS		300828						
ANR	300936	Symbol	zend_multibyte_parse_encoding_list		300828						
ANR	300937	Symbol	new_value_length		300828						
ANR	300938	Symbol	size		300828						
ANR	300939	Symbol	& list		300828						
ANR	300940	Symbol	zend_multibyte_set_script_encoding		300828						
ANR	300941	Symbol	& size		300828						
ANR	300942	Symbol	list		300828						
ANR	300943	Symbol	FAILURE		300828						
ANR	300944	Symbol	new_value		300828						
