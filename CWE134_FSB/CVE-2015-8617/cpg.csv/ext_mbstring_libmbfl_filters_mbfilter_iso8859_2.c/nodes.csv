command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1065669	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_libmbfl_filters_mbfilter_iso8859_2.c								
ANR	1065670	DeclStmt									
ANR	1065671	Decl							const char	const char * [ ]	mbfl_encoding_8859_2_aliases
ANR	1065672	DeclStmt									
ANR	1065673	Decl							const mbfl_encoding	const mbfl_encoding	mbfl_encoding_8859_2
ANR	1065674	DeclStmt									
ANR	1065675	Decl							const struct mbfl_identify_vtbl	const struct mbfl_identify_vtbl	vtbl_identify_8859_2
ANR	1065676	DeclStmt									
ANR	1065677	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_8859_2_wchar
ANR	1065678	DeclStmt									
ANR	1065679	Decl							const struct mbfl_convert_vtbl	const struct mbfl_convert_vtbl	vtbl_wchar_8859_2
ANR	1065680	Function	mbfl_filt_conv_8859_2_wchar	80:0:2171:2591							
ANR	1065681	FunctionDef	"mbfl_filt_conv_8859_2_wchar (int c , mbfl_convert_filter * filter)"		1065680	0					
ANR	1065682	CompoundStatement		81:0:2239:2591	1065680	0					
ANR	1065683	IdentifierDeclStatement	int s ;	82:1:2242:2247	1065680	0	True				
ANR	1065684	IdentifierDecl	s		1065680	0					
ANR	1065685	IdentifierDeclType	int		1065680	0					
ANR	1065686	Identifier	s		1065680	1					
ANR	1065687	IfStatement	if ( c >= 0 && c < 0xa0 )		1065680	1					
ANR	1065688	Condition	c >= 0 && c < 0xa0	84:5:2255:2272	1065680	0	True				
ANR	1065689	AndExpression	c >= 0 && c < 0xa0		1065680	0		&&			
ANR	1065690	RelationalExpression	c >= 0		1065680	0		>=			
ANR	1065691	Identifier	c		1065680	0					
ANR	1065692	PrimaryExpression	0		1065680	1					
ANR	1065693	RelationalExpression	c < 0xa0		1065680	1		<			
ANR	1065694	Identifier	c		1065680	0					
ANR	1065695	PrimaryExpression	0xa0		1065680	1					
ANR	1065696	CompoundStatement		4:25:35:35	1065680	1					
ANR	1065697	ExpressionStatement	s = c	85:2:2279:2284	1065680	0	True				
ANR	1065698	AssignmentExpression	s = c		1065680	0		=			
ANR	1065699	Identifier	s		1065680	0					
ANR	1065700	Identifier	c		1065680	1					
ANR	1065701	ElseStatement	else		1065680	0					
ANR	1065702	IfStatement	if ( c >= 0xa0 && c < 0x100 )		1065680	0					
ANR	1065703	Condition	c >= 0xa0 && c < 0x100	86:12:2298:2319	1065680	0	True				
ANR	1065704	AndExpression	c >= 0xa0 && c < 0x100		1065680	0		&&			
ANR	1065705	RelationalExpression	c >= 0xa0		1065680	0		>=			
ANR	1065706	Identifier	c		1065680	0					
ANR	1065707	PrimaryExpression	0xa0		1065680	1					
ANR	1065708	RelationalExpression	c < 0x100		1065680	1		<			
ANR	1065709	Identifier	c		1065680	0					
ANR	1065710	PrimaryExpression	0x100		1065680	1					
ANR	1065711	CompoundStatement		6:36:82:82	1065680	1					
ANR	1065712	ExpressionStatement	s = iso8859_2_ucs_table [ c - 0xa0 ]	87:2:2326:2359	1065680	0	True				
ANR	1065713	AssignmentExpression	s = iso8859_2_ucs_table [ c - 0xa0 ]		1065680	0		=			
ANR	1065714	Identifier	s		1065680	0					
ANR	1065715	ArrayIndexing	iso8859_2_ucs_table [ c - 0xa0 ]		1065680	1					
ANR	1065716	Identifier	iso8859_2_ucs_table		1065680	0					
ANR	1065717	AdditiveExpression	c - 0xa0		1065680	1		-			
ANR	1065718	Identifier	c		1065680	0					
ANR	1065719	PrimaryExpression	0xa0		1065680	1					
ANR	1065720	IfStatement	if ( s <= 0 )		1065680	1					
ANR	1065721	Condition	s <= 0	88:6:2367:2372	1065680	0	True				
ANR	1065722	RelationalExpression	s <= 0		1065680	0		<=			
ANR	1065723	Identifier	s		1065680	0					
ANR	1065724	PrimaryExpression	0		1065680	1					
ANR	1065725	CompoundStatement		8:14:135:135	1065680	1					
ANR	1065726	ExpressionStatement	s = c	89:3:2380:2385	1065680	0	True				
ANR	1065727	AssignmentExpression	s = c		1065680	0		=			
ANR	1065728	Identifier	s		1065680	0					
ANR	1065729	Identifier	c		1065680	1					
ANR	1065730	ExpressionStatement	s &= MBFL_WCSPLANE_MASK	90:3:2390:2413	1065680	1	True				
ANR	1065731	AssignmentExpression	s &= MBFL_WCSPLANE_MASK		1065680	0		&=			
ANR	1065732	Identifier	s		1065680	0					
ANR	1065733	Identifier	MBFL_WCSPLANE_MASK		1065680	1					
ANR	1065734	ExpressionStatement	s |= MBFL_WCSPLANE_8859_2	91:3:2418:2443	1065680	2	True				
ANR	1065735	AssignmentExpression	s |= MBFL_WCSPLANE_8859_2		1065680	0		|=			
ANR	1065736	Identifier	s		1065680	0					
ANR	1065737	Identifier	MBFL_WCSPLANE_8859_2		1065680	1					
ANR	1065738	ElseStatement	else		1065680	0					
ANR	1065739	CompoundStatement		13:8:217:217	1065680	0					
ANR	1065740	ExpressionStatement	s = c	94:2:2461:2466	1065680	0	True				
ANR	1065741	AssignmentExpression	s = c		1065680	0		=			
ANR	1065742	Identifier	s		1065680	0					
ANR	1065743	Identifier	c		1065680	1					
ANR	1065744	ExpressionStatement	s &= MBFL_WCSGROUP_MASK	95:2:2470:2493	1065680	1	True				
ANR	1065745	AssignmentExpression	s &= MBFL_WCSGROUP_MASK		1065680	0		&=			
ANR	1065746	Identifier	s		1065680	0					
ANR	1065747	Identifier	MBFL_WCSGROUP_MASK		1065680	1					
ANR	1065748	ExpressionStatement	s |= MBFL_WCSGROUP_THROUGH	96:2:2497:2523	1065680	2	True				
ANR	1065749	AssignmentExpression	s |= MBFL_WCSGROUP_THROUGH		1065680	0		|=			
ANR	1065750	Identifier	s		1065680	0					
ANR	1065751	Identifier	MBFL_WCSGROUP_THROUGH		1065680	1					
ANR	1065752	ExpressionStatement	"CK ( ( * filter -> output_function ) ( s , filter -> data ) )"	99:1:2530:2577	1065680	2	True				
ANR	1065753	CallExpression	"CK ( ( * filter -> output_function ) ( s , filter -> data ) )"		1065680	0					
ANR	1065754	Callee	CK		1065680	0					
ANR	1065755	Identifier	CK		1065680	0					
ANR	1065756	ArgumentList	"( * filter -> output_function ) ( s , filter -> data )"		1065680	1					
ANR	1065757	Argument	"( * filter -> output_function ) ( s , filter -> data )"		1065680	0					
ANR	1065758	CallExpression	"( * filter -> output_function ) ( s , filter -> data )"		1065680	0					
ANR	1065759	Callee	* filter -> output_function		1065680	0					
ANR	1065760	UnaryOperationExpression	* filter -> output_function		1065680	0					
ANR	1065761	UnaryOperator	*		1065680	0					
ANR	1065762	PtrMemberAccess	filter -> output_function		1065680	1					
ANR	1065763	Identifier	filter		1065680	0					
ANR	1065764	Identifier	output_function		1065680	1					
ANR	1065765	ArgumentList	s		1065680	1					
ANR	1065766	Argument	s		1065680	0					
ANR	1065767	Identifier	s		1065680	0					
ANR	1065768	Argument	filter -> data		1065680	1					
ANR	1065769	PtrMemberAccess	filter -> data		1065680	0					
ANR	1065770	Identifier	filter		1065680	0					
ANR	1065771	Identifier	data		1065680	1					
ANR	1065772	ReturnStatement	return c ;	101:1:2581:2589	1065680	3	True				
ANR	1065773	Identifier	c		1065680	0					
ANR	1065774	ReturnType	int		1065680	1					
ANR	1065775	Identifier	mbfl_filt_conv_8859_2_wchar		1065680	2					
ANR	1065776	ParameterList	"int c , mbfl_convert_filter * filter"		1065680	3					
ANR	1065777	Parameter	int c	80:32:2203:2207	1065680	0	True				
ANR	1065778	ParameterType	int		1065680	0					
ANR	1065779	Identifier	c		1065680	1					
ANR	1065780	Parameter	mbfl_convert_filter * filter	80:39:2210:2236	1065680	1	True				
ANR	1065781	ParameterType	mbfl_convert_filter *		1065680	0					
ANR	1065782	Identifier	filter		1065680	1					
ANR	1065783	CFGEntryNode	ENTRY		1065680		True				
ANR	1065784	CFGExitNode	EXIT		1065680		True				
ANR	1065785	Symbol	c		1065680						
ANR	1065786	Symbol	MBFL_WCSGROUP_MASK		1065680						
ANR	1065787	Symbol	MBFL_WCSGROUP_THROUGH		1065680						
ANR	1065788	Symbol	* iso8859_2_ucs_table		1065680						
ANR	1065789	Symbol	* filter -> output_function		1065680						
ANR	1065790	Symbol	iso8859_2_ucs_table		1065680						
ANR	1065791	Symbol	* c		1065680						
ANR	1065792	Symbol	MBFL_WCSPLANE_MASK		1065680						
ANR	1065793	Symbol	filter -> data		1065680						
ANR	1065794	Symbol	* filter		1065680						
ANR	1065795	Symbol	filter		1065680						
ANR	1065796	Symbol	MBFL_WCSPLANE_8859_2		1065680						
ANR	1065797	Symbol	s		1065680						
ANR	1065798	Symbol	filter -> output_function		1065680						
ANR	1065799	Symbol	* * filter		1065680						
ANR	1065800	Function	mbfl_filt_conv_wchar_8859_2	107:0:2624:3196							
ANR	1065801	FunctionDef	"mbfl_filt_conv_wchar_8859_2 (int c , mbfl_convert_filter * filter)"		1065800	0					
ANR	1065802	CompoundStatement		108:0:2692:3196	1065800	0					
ANR	1065803	IdentifierDeclStatement	"int s , n ;"	109:1:2695:2703	1065800	0	True				
ANR	1065804	IdentifierDecl	s		1065800	0					
ANR	1065805	IdentifierDeclType	int		1065800	0					
ANR	1065806	Identifier	s		1065800	1					
ANR	1065807	IdentifierDecl	n		1065800	1					
ANR	1065808	IdentifierDeclType	int		1065800	0					
ANR	1065809	Identifier	n		1065800	1					
ANR	1065810	IfStatement	if ( c >= 0 && c < 0xa0 )		1065800	1					
ANR	1065811	Condition	c >= 0 && c < 0xa0	111:5:2711:2728	1065800	0	True				
ANR	1065812	AndExpression	c >= 0 && c < 0xa0		1065800	0		&&			
ANR	1065813	RelationalExpression	c >= 0		1065800	0		>=			
ANR	1065814	Identifier	c		1065800	0					
ANR	1065815	PrimaryExpression	0		1065800	1					
ANR	1065816	RelationalExpression	c < 0xa0		1065800	1		<			
ANR	1065817	Identifier	c		1065800	0					
ANR	1065818	PrimaryExpression	0xa0		1065800	1					
ANR	1065819	CompoundStatement		4:25:38:38	1065800	1					
ANR	1065820	ExpressionStatement	s = c	112:2:2735:2740	1065800	0	True				
ANR	1065821	AssignmentExpression	s = c		1065800	0		=			
ANR	1065822	Identifier	s		1065800	0					
ANR	1065823	Identifier	c		1065800	1					
ANR	1065824	ElseStatement	else		1065800	0					
ANR	1065825	CompoundStatement		6:8:57:57	1065800	0					
ANR	1065826	ExpressionStatement	s = - 1	114:2:2754:2760	1065800	0	True				
ANR	1065827	AssignmentExpression	s = - 1		1065800	0		=			
ANR	1065828	Identifier	s		1065800	0					
ANR	1065829	UnaryOperationExpression	- 1		1065800	1					
ANR	1065830	UnaryOperator	-		1065800	0					
ANR	1065831	PrimaryExpression	1		1065800	1					
ANR	1065832	ExpressionStatement	n = 95	115:2:2764:2770	1065800	1	True				
ANR	1065833	AssignmentExpression	n = 95		1065800	0		=			
ANR	1065834	Identifier	n		1065800	0					
ANR	1065835	PrimaryExpression	95		1065800	1					
ANR	1065836	WhileStatement	while ( n >= 0 )		1065800	2					
ANR	1065837	Condition	n >= 0	116:9:2781:2786	1065800	0	True				
ANR	1065838	RelationalExpression	n >= 0		1065800	0		>=			
ANR	1065839	Identifier	n		1065800	0					
ANR	1065840	PrimaryExpression	0		1065800	1					
ANR	1065841	CompoundStatement		9:17:96:96	1065800	1					
ANR	1065842	IfStatement	if ( c == iso8859_2_ucs_table [ n ] )		1065800	0					
ANR	1065843	Condition	c == iso8859_2_ucs_table [ n ]	117:7:2798:2824	1065800	0	True				
ANR	1065844	EqualityExpression	c == iso8859_2_ucs_table [ n ]		1065800	0		==			
ANR	1065845	Identifier	c		1065800	0					
ANR	1065846	ArrayIndexing	iso8859_2_ucs_table [ n ]		1065800	1					
ANR	1065847	Identifier	iso8859_2_ucs_table		1065800	0					
ANR	1065848	Identifier	n		1065800	1					
ANR	1065849	CompoundStatement		10:36:134:134	1065800	1					
ANR	1065850	ExpressionStatement	s = 0xa0 + n	118:4:2833:2845	1065800	0	True				
ANR	1065851	AssignmentExpression	s = 0xa0 + n		1065800	0		=			
ANR	1065852	Identifier	s		1065800	0					
ANR	1065853	AdditiveExpression	0xa0 + n		1065800	1		+			
ANR	1065854	PrimaryExpression	0xa0		1065800	0					
ANR	1065855	Identifier	n		1065800	1					
ANR	1065856	BreakStatement	break ;	119:4:2851:2856	1065800	1	True				
ANR	1065857	ExpressionStatement	n --	121:3:2866:2869	1065800	1	True				
ANR	1065858	PostIncDecOperationExpression	n --		1065800	0					
ANR	1065859	Identifier	n		1065800	0					
ANR	1065860	IncDec	--		1065800	1					
ANR	1065861	IfStatement	if ( s <= 0 && ( c & ~MBFL_WCSPLANE_MASK ) == MBFL_WCSPLANE_8859_2 )		1065800	3					
ANR	1065862	Condition	s <= 0 && ( c & ~MBFL_WCSPLANE_MASK ) == MBFL_WCSPLANE_8859_2	123:6:2881:2939	1065800	0	True				
ANR	1065863	AndExpression	s <= 0 && ( c & ~MBFL_WCSPLANE_MASK ) == MBFL_WCSPLANE_8859_2		1065800	0		&&			
ANR	1065864	RelationalExpression	s <= 0		1065800	0		<=			
ANR	1065865	Identifier	s		1065800	0					
ANR	1065866	PrimaryExpression	0		1065800	1					
ANR	1065867	EqualityExpression	( c & ~MBFL_WCSPLANE_MASK ) == MBFL_WCSPLANE_8859_2		1065800	1		==			
ANR	1065868	BitAndExpression	c & ~MBFL_WCSPLANE_MASK		1065800	0		&			
ANR	1065869	Identifier	c		1065800	0					
ANR	1065870	Identifier	~MBFL_WCSPLANE_MASK		1065800	1					
ANR	1065871	Identifier	MBFL_WCSPLANE_8859_2		1065800	1					
ANR	1065872	CompoundStatement		16:67:249:249	1065800	1					
ANR	1065873	ExpressionStatement	s = c & MBFL_WCSPLANE_MASK	124:3:2947:2973	1065800	0	True				
ANR	1065874	AssignmentExpression	s = c & MBFL_WCSPLANE_MASK		1065800	0		=			
ANR	1065875	Identifier	s		1065800	0					
ANR	1065876	BitAndExpression	c & MBFL_WCSPLANE_MASK		1065800	1		&			
ANR	1065877	Identifier	c		1065800	0					
ANR	1065878	Identifier	MBFL_WCSPLANE_MASK		1065800	1					
ANR	1065879	IfStatement	if ( s >= 0 )		1065800	2					
ANR	1065880	Condition	s >= 0	128:5:2988:2993	1065800	0	True				
ANR	1065881	RelationalExpression	s >= 0		1065800	0		>=			
ANR	1065882	Identifier	s		1065800	0					
ANR	1065883	PrimaryExpression	0		1065800	1					
ANR	1065884	CompoundStatement		21:13:303:303	1065800	1					
ANR	1065885	ExpressionStatement	"CK ( ( * filter -> output_function ) ( s , filter -> data ) )"	129:2:3000:3047	1065800	0	True				
ANR	1065886	CallExpression	"CK ( ( * filter -> output_function ) ( s , filter -> data ) )"		1065800	0					
ANR	1065887	Callee	CK		1065800	0					
ANR	1065888	Identifier	CK		1065800	0					
ANR	1065889	ArgumentList	"( * filter -> output_function ) ( s , filter -> data )"		1065800	1					
ANR	1065890	Argument	"( * filter -> output_function ) ( s , filter -> data )"		1065800	0					
ANR	1065891	CallExpression	"( * filter -> output_function ) ( s , filter -> data )"		1065800	0					
ANR	1065892	Callee	* filter -> output_function		1065800	0					
ANR	1065893	UnaryOperationExpression	* filter -> output_function		1065800	0					
ANR	1065894	UnaryOperator	*		1065800	0					
ANR	1065895	PtrMemberAccess	filter -> output_function		1065800	1					
ANR	1065896	Identifier	filter		1065800	0					
ANR	1065897	Identifier	output_function		1065800	1					
ANR	1065898	ArgumentList	s		1065800	1					
ANR	1065899	Argument	s		1065800	0					
ANR	1065900	Identifier	s		1065800	0					
ANR	1065901	Argument	filter -> data		1065800	1					
ANR	1065902	PtrMemberAccess	filter -> data		1065800	0					
ANR	1065903	Identifier	filter		1065800	0					
ANR	1065904	Identifier	data		1065800	1					
ANR	1065905	ElseStatement	else		1065800	0					
ANR	1065906	CompoundStatement		23:8:364:364	1065800	0					
ANR	1065907	IfStatement	if ( filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE )		1065800	0					
ANR	1065908	Condition	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE	131:6:3065:3123	1065800	0	True				
ANR	1065909	EqualityExpression	filter -> illegal_mode != MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1065800	0		!=			
ANR	1065910	PtrMemberAccess	filter -> illegal_mode		1065800	0					
ANR	1065911	Identifier	filter		1065800	0					
ANR	1065912	Identifier	illegal_mode		1065800	1					
ANR	1065913	Identifier	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1065800	1					
ANR	1065914	CompoundStatement		24:67:433:433	1065800	1					
ANR	1065915	ExpressionStatement	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"	132:3:3131:3175	1065800	0	True				
ANR	1065916	CallExpression	"CK ( mbfl_filt_conv_illegal_output ( c , filter ) )"		1065800	0					
ANR	1065917	Callee	CK		1065800	0					
ANR	1065918	Identifier	CK		1065800	0					
ANR	1065919	ArgumentList	"mbfl_filt_conv_illegal_output ( c , filter )"		1065800	1					
ANR	1065920	Argument	"mbfl_filt_conv_illegal_output ( c , filter )"		1065800	0					
ANR	1065921	CallExpression	"mbfl_filt_conv_illegal_output ( c , filter )"		1065800	0					
ANR	1065922	Callee	mbfl_filt_conv_illegal_output		1065800	0					
ANR	1065923	Identifier	mbfl_filt_conv_illegal_output		1065800	0					
ANR	1065924	ArgumentList	c		1065800	1					
ANR	1065925	Argument	c		1065800	0					
ANR	1065926	Identifier	c		1065800	0					
ANR	1065927	Argument	filter		1065800	1					
ANR	1065928	Identifier	filter		1065800	0					
ANR	1065929	ReturnStatement	return c ;	136:1:3186:3194	1065800	3	True				
ANR	1065930	Identifier	c		1065800	0					
ANR	1065931	ReturnType	int		1065800	1					
ANR	1065932	Identifier	mbfl_filt_conv_wchar_8859_2		1065800	2					
ANR	1065933	ParameterList	"int c , mbfl_convert_filter * filter"		1065800	3					
ANR	1065934	Parameter	int c	107:32:2656:2660	1065800	0	True				
ANR	1065935	ParameterType	int		1065800	0					
ANR	1065936	Identifier	c		1065800	1					
ANR	1065937	Parameter	mbfl_convert_filter * filter	107:39:2663:2689	1065800	1	True				
ANR	1065938	ParameterType	mbfl_convert_filter *		1065800	0					
ANR	1065939	Identifier	filter		1065800	1					
ANR	1065940	CFGEntryNode	ENTRY		1065800		True				
ANR	1065941	CFGExitNode	EXIT		1065800		True				
ANR	1065942	Symbol	c		1065800						
ANR	1065943	Symbol	mbfl_filt_conv_illegal_output		1065800						
ANR	1065944	Symbol	filter -> illegal_mode		1065800						
ANR	1065945	Symbol	* iso8859_2_ucs_table		1065800						
ANR	1065946	Symbol	~MBFL_WCSPLANE_MASK		1065800						
ANR	1065947	Symbol	* filter -> output_function		1065800						
ANR	1065948	Symbol	iso8859_2_ucs_table		1065800						
ANR	1065949	Symbol	MBFL_WCSPLANE_MASK		1065800						
ANR	1065950	Symbol	n		1065800						
ANR	1065951	Symbol	* filter		1065800						
ANR	1065952	Symbol	filter -> data		1065800						
ANR	1065953	Symbol	filter		1065800						
ANR	1065954	Symbol	MBFL_WCSPLANE_8859_2		1065800						
ANR	1065955	Symbol	s		1065800						
ANR	1065956	Symbol	filter -> output_function		1065800						
ANR	1065957	Symbol	* n		1065800						
ANR	1065958	Symbol	MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE		1065800						
ANR	1065959	Symbol	* * filter		1065800						
