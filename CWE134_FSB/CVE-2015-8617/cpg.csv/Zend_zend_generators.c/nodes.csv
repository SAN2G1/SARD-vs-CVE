command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	184241	File	data/converged/CVE-2015-8617_php-src/Zend_zend_generators.c								
ANR	184242	DeclStmt									
ANR	184243	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_generator
ANR	184244	DeclStmt									
ANR	184245	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry *	zend_ce_ClosedGeneratorException
ANR	184246	DeclStmt									
ANR	184247	Decl							zend_object_handlers	zend_object_handlers	zend_generator_handlers
ANR	184248	DeclStmt									
ANR	184249	Decl							zend_object	zend_object * ( zend_class_entry * class_type )	zend_generator_create
ANR	184250	Function	zend_generator_cleanup_unfinished_execution	34:0:1598:2715							
ANR	184251	FunctionDef	zend_generator_cleanup_unfinished_execution (zend_generator * generator)		184250	0					
ANR	184252	CompoundStatement		35:0:1691:2715	184250	0					
ANR	184253	IdentifierDeclStatement	zend_execute_data * execute_data = generator -> execute_data ;	36:1:1694:1751	184250	0	True				
ANR	184254	IdentifierDecl	* execute_data = generator -> execute_data		184250	0					
ANR	184255	IdentifierDeclType	zend_execute_data *		184250	0					
ANR	184256	Identifier	execute_data		184250	1					
ANR	184257	AssignmentExpression	* execute_data = generator -> execute_data		184250	2		=			
ANR	184258	Identifier	execute_data		184250	0					
ANR	184259	PtrMemberAccess	generator -> execute_data		184250	1					
ANR	184260	Identifier	generator		184250	0					
ANR	184261	Identifier	execute_data		184250	1					
ANR	184262	IfStatement	if ( generator -> send_target )		184250	1					
ANR	184263	Condition	generator -> send_target	38:5:1759:1780	184250	0	True				
ANR	184264	PtrMemberAccess	generator -> send_target		184250	0					
ANR	184265	Identifier	generator		184250	0					
ANR	184266	Identifier	send_target		184250	1					
ANR	184267	CompoundStatement		4:29:91:91	184250	1					
ANR	184268	ExpressionStatement	Z_TRY_DELREF_P ( generator -> send_target )	39:2:1787:1825	184250	0	True				
ANR	184269	CallExpression	Z_TRY_DELREF_P ( generator -> send_target )		184250	0					
ANR	184270	Callee	Z_TRY_DELREF_P		184250	0					
ANR	184271	Identifier	Z_TRY_DELREF_P		184250	0					
ANR	184272	ArgumentList	generator -> send_target		184250	1					
ANR	184273	Argument	generator -> send_target		184250	0					
ANR	184274	PtrMemberAccess	generator -> send_target		184250	0					
ANR	184275	Identifier	generator		184250	0					
ANR	184276	Identifier	send_target		184250	1					
ANR	184277	ExpressionStatement	generator -> send_target = NULL	40:2:1829:1858	184250	1	True				
ANR	184278	AssignmentExpression	generator -> send_target = NULL		184250	0		=			
ANR	184279	PtrMemberAccess	generator -> send_target		184250	0					
ANR	184280	Identifier	generator		184250	0					
ANR	184281	Identifier	send_target		184250	1					
ANR	184282	Identifier	NULL		184250	1					
ANR	184283	IfStatement	if ( execute_data -> opline != execute_data -> func -> op_array . opcodes )		184250	2					
ANR	184284	Condition	execute_data -> opline != execute_data -> func -> op_array . opcodes	43:5:1869:1928	184250	0	True				
ANR	184285	EqualityExpression	execute_data -> opline != execute_data -> func -> op_array . opcodes		184250	0		!=			
ANR	184286	PtrMemberAccess	execute_data -> opline		184250	0					
ANR	184287	Identifier	execute_data		184250	0					
ANR	184288	Identifier	opline		184250	1					
ANR	184289	MemberAccess	execute_data -> func -> op_array . opcodes		184250	1					
ANR	184290	PtrMemberAccess	execute_data -> func -> op_array		184250	0					
ANR	184291	PtrMemberAccess	execute_data -> func		184250	0					
ANR	184292	Identifier	execute_data		184250	0					
ANR	184293	Identifier	func		184250	1					
ANR	184294	Identifier	op_array		184250	1					
ANR	184295	Identifier	opcodes		184250	1					
ANR	184296	CompoundStatement		15:2:550:593	184250	1					
ANR	184297	IdentifierDeclStatement	uint32_t op_num = execute_data -> opline - execute_data -> func -> op_array . opcodes - 1 ;	45:2:2020:2101	184250	0	True				
ANR	184298	IdentifierDecl	op_num = execute_data -> opline - execute_data -> func -> op_array . opcodes - 1		184250	0					
ANR	184299	IdentifierDeclType	uint32_t		184250	0					
ANR	184300	Identifier	op_num		184250	1					
ANR	184301	AssignmentExpression	op_num = execute_data -> opline - execute_data -> func -> op_array . opcodes - 1		184250	2		=			
ANR	184302	Identifier	op_num		184250	0					
ANR	184303	AdditiveExpression	execute_data -> opline - execute_data -> func -> op_array . opcodes - 1		184250	1		-			
ANR	184304	PtrMemberAccess	execute_data -> opline		184250	0					
ANR	184305	Identifier	execute_data		184250	0					
ANR	184306	Identifier	opline		184250	1					
ANR	184307	AdditiveExpression	execute_data -> func -> op_array . opcodes - 1		184250	1		-			
ANR	184308	MemberAccess	execute_data -> func -> op_array . opcodes		184250	0					
ANR	184309	PtrMemberAccess	execute_data -> func -> op_array		184250	0					
ANR	184310	PtrMemberAccess	execute_data -> func		184250	0					
ANR	184311	Identifier	execute_data		184250	0					
ANR	184312	Identifier	func		184250	1					
ANR	184313	Identifier	op_array		184250	1					
ANR	184314	Identifier	opcodes		184250	1					
ANR	184315	PrimaryExpression	1		184250	1					
ANR	184316	IdentifierDeclStatement	zend_vm_stack original_stack = EG ( vm_stack ) ;	49:2:2242:2285	184250	1	True				
ANR	184317	IdentifierDecl	original_stack = EG ( vm_stack )		184250	0					
ANR	184318	IdentifierDeclType	zend_vm_stack		184250	0					
ANR	184319	Identifier	original_stack		184250	1					
ANR	184320	AssignmentExpression	original_stack = EG ( vm_stack )		184250	2		=			
ANR	184321	Identifier	original_stack		184250	0					
ANR	184322	CallExpression	EG ( vm_stack )		184250	1					
ANR	184323	Callee	EG		184250	0					
ANR	184324	Identifier	EG		184250	0					
ANR	184325	ArgumentList	vm_stack		184250	1					
ANR	184326	Argument	vm_stack		184250	0					
ANR	184327	Identifier	vm_stack		184250	0					
ANR	184328	ExpressionStatement	original_stack -> top = EG ( vm_stack_top )	50:2:2289:2327	184250	2	True				
ANR	184329	AssignmentExpression	original_stack -> top = EG ( vm_stack_top )		184250	0		=			
ANR	184330	PtrMemberAccess	original_stack -> top		184250	0					
ANR	184331	Identifier	original_stack		184250	0					
ANR	184332	Identifier	top		184250	1					
ANR	184333	CallExpression	EG ( vm_stack_top )		184250	1					
ANR	184334	Callee	EG		184250	0					
ANR	184335	Identifier	EG		184250	0					
ANR	184336	ArgumentList	vm_stack_top		184250	1					
ANR	184337	Argument	vm_stack_top		184250	0					
ANR	184338	Identifier	vm_stack_top		184250	0					
ANR	184339	ExpressionStatement	EG ( vm_stack_top ) = generator -> stack -> top	51:2:2331:2371	184250	3	True				
ANR	184340	AssignmentExpression	EG ( vm_stack_top ) = generator -> stack -> top		184250	0		=			
ANR	184341	CallExpression	EG ( vm_stack_top )		184250	0					
ANR	184342	Callee	EG		184250	0					
ANR	184343	Identifier	EG		184250	0					
ANR	184344	ArgumentList	vm_stack_top		184250	1					
ANR	184345	Argument	vm_stack_top		184250	0					
ANR	184346	Identifier	vm_stack_top		184250	0					
ANR	184347	PtrMemberAccess	generator -> stack -> top		184250	1					
ANR	184348	PtrMemberAccess	generator -> stack		184250	0					
ANR	184349	Identifier	generator		184250	0					
ANR	184350	Identifier	stack		184250	1					
ANR	184351	Identifier	top		184250	1					
ANR	184352	ExpressionStatement	EG ( vm_stack_end ) = generator -> stack -> end	52:2:2375:2415	184250	4	True				
ANR	184353	AssignmentExpression	EG ( vm_stack_end ) = generator -> stack -> end		184250	0		=			
ANR	184354	CallExpression	EG ( vm_stack_end )		184250	0					
ANR	184355	Callee	EG		184250	0					
ANR	184356	Identifier	EG		184250	0					
ANR	184357	ArgumentList	vm_stack_end		184250	1					
ANR	184358	Argument	vm_stack_end		184250	0					
ANR	184359	Identifier	vm_stack_end		184250	0					
ANR	184360	PtrMemberAccess	generator -> stack -> end		184250	1					
ANR	184361	PtrMemberAccess	generator -> stack		184250	0					
ANR	184362	Identifier	generator		184250	0					
ANR	184363	Identifier	stack		184250	1					
ANR	184364	Identifier	end		184250	1					
ANR	184365	ExpressionStatement	EG ( vm_stack ) = generator -> stack	53:2:2419:2450	184250	5	True				
ANR	184366	AssignmentExpression	EG ( vm_stack ) = generator -> stack		184250	0		=			
ANR	184367	CallExpression	EG ( vm_stack )		184250	0					
ANR	184368	Callee	EG		184250	0					
ANR	184369	Identifier	EG		184250	0					
ANR	184370	ArgumentList	vm_stack		184250	1					
ANR	184371	Argument	vm_stack		184250	0					
ANR	184372	Identifier	vm_stack		184250	0					
ANR	184373	PtrMemberAccess	generator -> stack		184250	1					
ANR	184374	Identifier	generator		184250	0					
ANR	184375	Identifier	stack		184250	1					
ANR	184376	ExpressionStatement	"zend_cleanup_unfinished_execution ( execute_data , op_num , 0 )"	55:2:2455:2513	184250	6	True				
ANR	184377	CallExpression	"zend_cleanup_unfinished_execution ( execute_data , op_num , 0 )"		184250	0					
ANR	184378	Callee	zend_cleanup_unfinished_execution		184250	0					
ANR	184379	Identifier	zend_cleanup_unfinished_execution		184250	0					
ANR	184380	ArgumentList	execute_data		184250	1					
ANR	184381	Argument	execute_data		184250	0					
ANR	184382	Identifier	execute_data		184250	0					
ANR	184383	Argument	op_num		184250	1					
ANR	184384	Identifier	op_num		184250	0					
ANR	184385	Argument	0		184250	2					
ANR	184386	PrimaryExpression	0		184250	0					
ANR	184387	ExpressionStatement	generator -> stack = EG ( vm_stack )	57:2:2518:2549	184250	7	True				
ANR	184388	AssignmentExpression	generator -> stack = EG ( vm_stack )		184250	0		=			
ANR	184389	PtrMemberAccess	generator -> stack		184250	0					
ANR	184390	Identifier	generator		184250	0					
ANR	184391	Identifier	stack		184250	1					
ANR	184392	CallExpression	EG ( vm_stack )		184250	1					
ANR	184393	Callee	EG		184250	0					
ANR	184394	Identifier	EG		184250	0					
ANR	184395	ArgumentList	vm_stack		184250	1					
ANR	184396	Argument	vm_stack		184250	0					
ANR	184397	Identifier	vm_stack		184250	0					
ANR	184398	ExpressionStatement	generator -> stack -> top = EG ( vm_stack_top )	58:2:2553:2593	184250	8	True				
ANR	184399	AssignmentExpression	generator -> stack -> top = EG ( vm_stack_top )		184250	0		=			
ANR	184400	PtrMemberAccess	generator -> stack -> top		184250	0					
ANR	184401	PtrMemberAccess	generator -> stack		184250	0					
ANR	184402	Identifier	generator		184250	0					
ANR	184403	Identifier	stack		184250	1					
ANR	184404	Identifier	top		184250	1					
ANR	184405	CallExpression	EG ( vm_stack_top )		184250	1					
ANR	184406	Callee	EG		184250	0					
ANR	184407	Identifier	EG		184250	0					
ANR	184408	ArgumentList	vm_stack_top		184250	1					
ANR	184409	Argument	vm_stack_top		184250	0					
ANR	184410	Identifier	vm_stack_top		184250	0					
ANR	184411	ExpressionStatement	EG ( vm_stack_top ) = original_stack -> top	59:2:2597:2635	184250	9	True				
ANR	184412	AssignmentExpression	EG ( vm_stack_top ) = original_stack -> top		184250	0		=			
ANR	184413	CallExpression	EG ( vm_stack_top )		184250	0					
ANR	184414	Callee	EG		184250	0					
ANR	184415	Identifier	EG		184250	0					
ANR	184416	ArgumentList	vm_stack_top		184250	1					
ANR	184417	Argument	vm_stack_top		184250	0					
ANR	184418	Identifier	vm_stack_top		184250	0					
ANR	184419	PtrMemberAccess	original_stack -> top		184250	1					
ANR	184420	Identifier	original_stack		184250	0					
ANR	184421	Identifier	top		184250	1					
ANR	184422	ExpressionStatement	EG ( vm_stack_end ) = original_stack -> end	60:2:2639:2677	184250	10	True				
ANR	184423	AssignmentExpression	EG ( vm_stack_end ) = original_stack -> end		184250	0		=			
ANR	184424	CallExpression	EG ( vm_stack_end )		184250	0					
ANR	184425	Callee	EG		184250	0					
ANR	184426	Identifier	EG		184250	0					
ANR	184427	ArgumentList	vm_stack_end		184250	1					
ANR	184428	Argument	vm_stack_end		184250	0					
ANR	184429	Identifier	vm_stack_end		184250	0					
ANR	184430	PtrMemberAccess	original_stack -> end		184250	1					
ANR	184431	Identifier	original_stack		184250	0					
ANR	184432	Identifier	end		184250	1					
ANR	184433	ExpressionStatement	EG ( vm_stack ) = original_stack	61:2:2681:2710	184250	11	True				
ANR	184434	AssignmentExpression	EG ( vm_stack ) = original_stack		184250	0		=			
ANR	184435	CallExpression	EG ( vm_stack )		184250	0					
ANR	184436	Callee	EG		184250	0					
ANR	184437	Identifier	EG		184250	0					
ANR	184438	ArgumentList	vm_stack		184250	1					
ANR	184439	Argument	vm_stack		184250	0					
ANR	184440	Identifier	vm_stack		184250	0					
ANR	184441	Identifier	original_stack		184250	1					
ANR	184442	ReturnType	static void		184250	1					
ANR	184443	Identifier	zend_generator_cleanup_unfinished_execution		184250	2					
ANR	184444	ParameterList	zend_generator * generator		184250	3					
ANR	184445	Parameter	zend_generator * generator	34:56:1654:1678	184250	0	True				
ANR	184446	ParameterType	zend_generator *		184250	0					
ANR	184447	Identifier	generator		184250	1					
ANR	184448	CFGEntryNode	ENTRY		184250		True				
ANR	184449	CFGExitNode	EXIT		184250		True				
ANR	184450	Symbol	generator -> stack		184250						
ANR	184451	Symbol	* execute_data -> func		184250						
ANR	184452	Symbol	generator		184250						
ANR	184453	Symbol	execute_data		184250						
ANR	184454	Symbol	execute_data -> func -> op_array . opcodes		184250						
ANR	184455	Symbol	vm_stack_top		184250						
ANR	184456	Symbol	* generator		184250						
ANR	184457	Symbol	generator -> send_target		184250						
ANR	184458	Symbol	* execute_data		184250						
ANR	184459	Symbol	vm_stack_end		184250						
ANR	184460	Symbol	original_stack		184250						
ANR	184461	Symbol	execute_data -> func -> op_array		184250						
ANR	184462	Symbol	EG		184250						
ANR	184463	Symbol	NULL		184250						
ANR	184464	Symbol	* generator -> stack		184250						
ANR	184465	Symbol	* * generator		184250						
ANR	184466	Symbol	op_num		184250						
ANR	184467	Symbol	generator -> stack -> end		184250						
ANR	184468	Symbol	execute_data -> func		184250						
ANR	184469	Symbol	original_stack -> top		184250						
ANR	184470	Symbol	generator -> stack -> top		184250						
ANR	184471	Symbol	* original_stack		184250						
ANR	184472	Symbol	generator -> execute_data		184250						
ANR	184473	Symbol	execute_data -> opline		184250						
ANR	184474	Symbol	original_stack -> end		184250						
ANR	184475	Symbol	* * execute_data		184250						
ANR	184476	Symbol	vm_stack		184250						
ANR	184477	Function	zend_generator_close	66:0:2728:4111							
ANR	184478	FunctionDef	"zend_generator_close (zend_generator * generator , zend_bool finished_execution)"		184477	0					
ANR	184479	CompoundStatement		67:0:2830:4111	184477	0					
ANR	184480	IfStatement	if ( UNEXPECTED ( Z_TYPE ( generator -> values ) != IS_UNDEF ) )		184477	0					
ANR	184481	Condition	UNEXPECTED ( Z_TYPE ( generator -> values ) != IS_UNDEF )	68:5:2837:2885	184477	0	True				
ANR	184482	CallExpression	UNEXPECTED ( Z_TYPE ( generator -> values ) != IS_UNDEF )		184477	0					
ANR	184483	Callee	UNEXPECTED		184477	0					
ANR	184484	Identifier	UNEXPECTED		184477	0					
ANR	184485	ArgumentList	Z_TYPE ( generator -> values ) != IS_UNDEF		184477	1					
ANR	184486	Argument	Z_TYPE ( generator -> values ) != IS_UNDEF		184477	0					
ANR	184487	EqualityExpression	Z_TYPE ( generator -> values ) != IS_UNDEF		184477	0		!=			
ANR	184488	CallExpression	Z_TYPE ( generator -> values )		184477	0					
ANR	184489	Callee	Z_TYPE		184477	0					
ANR	184490	Identifier	Z_TYPE		184477	0					
ANR	184491	ArgumentList	generator -> values		184477	1					
ANR	184492	Argument	generator -> values		184477	0					
ANR	184493	PtrMemberAccess	generator -> values		184477	0					
ANR	184494	Identifier	generator		184477	0					
ANR	184495	Identifier	values		184477	1					
ANR	184496	Identifier	IS_UNDEF		184477	1					
ANR	184497	CompoundStatement		2:56:57:57	184477	1					
ANR	184498	ExpressionStatement	zval_ptr_dtor ( & generator -> values )	69:2:2892:2925	184477	0	True				
ANR	184499	CallExpression	zval_ptr_dtor ( & generator -> values )		184477	0					
ANR	184500	Callee	zval_ptr_dtor		184477	0					
ANR	184501	Identifier	zval_ptr_dtor		184477	0					
ANR	184502	ArgumentList	& generator -> values		184477	1					
ANR	184503	Argument	& generator -> values		184477	0					
ANR	184504	UnaryOperationExpression	& generator -> values		184477	0					
ANR	184505	UnaryOperator	&		184477	0					
ANR	184506	PtrMemberAccess	generator -> values		184477	1					
ANR	184507	Identifier	generator		184477	0					
ANR	184508	Identifier	values		184477	1					
ANR	184509	ExpressionStatement	ZVAL_UNDEF ( & generator -> values )	70:2:2929:2959	184477	1	True				
ANR	184510	CallExpression	ZVAL_UNDEF ( & generator -> values )		184477	0					
ANR	184511	Callee	ZVAL_UNDEF		184477	0					
ANR	184512	Identifier	ZVAL_UNDEF		184477	0					
ANR	184513	ArgumentList	& generator -> values		184477	1					
ANR	184514	Argument	& generator -> values		184477	0					
ANR	184515	UnaryOperationExpression	& generator -> values		184477	0					
ANR	184516	UnaryOperator	&		184477	0					
ANR	184517	PtrMemberAccess	generator -> values		184477	1					
ANR	184518	Identifier	generator		184477	0					
ANR	184519	Identifier	values		184477	1					
ANR	184520	IfStatement	if ( EXPECTED ( generator -> execute_data ) )		184477	1					
ANR	184521	Condition	EXPECTED ( generator -> execute_data )	73:5:2970:3002	184477	0	True				
ANR	184522	CallExpression	EXPECTED ( generator -> execute_data )		184477	0					
ANR	184523	Callee	EXPECTED		184477	0					
ANR	184524	Identifier	EXPECTED		184477	0					
ANR	184525	ArgumentList	generator -> execute_data		184477	1					
ANR	184526	Argument	generator -> execute_data		184477	0					
ANR	184527	PtrMemberAccess	generator -> execute_data		184477	0					
ANR	184528	Identifier	generator		184477	0					
ANR	184529	Identifier	execute_data		184477	1					
ANR	184530	CompoundStatement		8:2:178:235	184477	1					
ANR	184531	IdentifierDeclStatement	zend_execute_data * execute_data = generator -> execute_data ;	74:2:3009:3066	184477	0	True				
ANR	184532	IdentifierDecl	* execute_data = generator -> execute_data		184477	0					
ANR	184533	IdentifierDeclType	zend_execute_data *		184477	0					
ANR	184534	Identifier	execute_data		184477	1					
ANR	184535	AssignmentExpression	* execute_data = generator -> execute_data		184477	2		=			
ANR	184536	Identifier	execute_data		184477	0					
ANR	184537	PtrMemberAccess	generator -> execute_data		184477	1					
ANR	184538	Identifier	generator		184477	0					
ANR	184539	Identifier	execute_data		184477	1					
ANR	184540	IfStatement	if ( execute_data -> symbol_table )		184477	1					
ANR	184541	Condition	execute_data -> symbol_table	76:6:3075:3100	184477	0	True				
ANR	184542	PtrMemberAccess	execute_data -> symbol_table		184477	0					
ANR	184543	Identifier	execute_data		184477	0					
ANR	184544	Identifier	symbol_table		184477	1					
ANR	184545	CompoundStatement		10:34:272:272	184477	1					
ANR	184546	ExpressionStatement	zend_clean_and_cache_symbol_table ( execute_data -> symbol_table )	77:3:3108:3169	184477	0	True				
ANR	184547	CallExpression	zend_clean_and_cache_symbol_table ( execute_data -> symbol_table )		184477	0					
ANR	184548	Callee	zend_clean_and_cache_symbol_table		184477	0					
ANR	184549	Identifier	zend_clean_and_cache_symbol_table		184477	0					
ANR	184550	ArgumentList	execute_data -> symbol_table		184477	1					
ANR	184551	Argument	execute_data -> symbol_table		184477	0					
ANR	184552	PtrMemberAccess	execute_data -> symbol_table		184477	0					
ANR	184553	Identifier	execute_data		184477	0					
ANR	184554	Identifier	symbol_table		184477	1					
ANR	184555	ExpressionStatement	zend_free_compiled_variables ( execute_data )	80:2:3257:3299	184477	2	True				
ANR	184556	CallExpression	zend_free_compiled_variables ( execute_data )		184477	0					
ANR	184557	Callee	zend_free_compiled_variables		184477	0					
ANR	184558	Identifier	zend_free_compiled_variables		184477	0					
ANR	184559	ArgumentList	execute_data		184477	1					
ANR	184560	Argument	execute_data		184477	0					
ANR	184561	Identifier	execute_data		184477	0					
ANR	184562	IfStatement	if ( Z_OBJ ( execute_data -> This ) )		184477	3					
ANR	184563	Condition	Z_OBJ ( execute_data -> This )	82:6:3308:3332	184477	0	True				
ANR	184564	CallExpression	Z_OBJ ( execute_data -> This )		184477	0					
ANR	184565	Callee	Z_OBJ		184477	0					
ANR	184566	Identifier	Z_OBJ		184477	0					
ANR	184567	ArgumentList	execute_data -> This		184477	1					
ANR	184568	Argument	execute_data -> This		184477	0					
ANR	184569	PtrMemberAccess	execute_data -> This		184477	0					
ANR	184570	Identifier	execute_data		184477	0					
ANR	184571	Identifier	This		184477	1					
ANR	184572	CompoundStatement		16:33:504:504	184477	1					
ANR	184573	ExpressionStatement	OBJ_RELEASE ( Z_OBJ ( execute_data -> This ) )	83:3:3340:3378	184477	0	True				
ANR	184574	CallExpression	OBJ_RELEASE ( Z_OBJ ( execute_data -> This ) )		184477	0					
ANR	184575	Callee	OBJ_RELEASE		184477	0					
ANR	184576	Identifier	OBJ_RELEASE		184477	0					
ANR	184577	ArgumentList	Z_OBJ ( execute_data -> This )		184477	1					
ANR	184578	Argument	Z_OBJ ( execute_data -> This )		184477	0					
ANR	184579	CallExpression	Z_OBJ ( execute_data -> This )		184477	0					
ANR	184580	Callee	Z_OBJ		184477	0					
ANR	184581	Identifier	Z_OBJ		184477	0					
ANR	184582	ArgumentList	execute_data -> This		184477	1					
ANR	184583	Argument	execute_data -> This		184477	0					
ANR	184584	PtrMemberAccess	execute_data -> This		184477	0					
ANR	184585	Identifier	execute_data		184477	0					
ANR	184586	Identifier	This		184477	1					
ANR	184587	IfStatement	if ( UNEXPECTED ( CG ( unclean_shutdown ) ) )		184477	4					
ANR	184588	Condition	UNEXPECTED ( CG ( unclean_shutdown ) )	88:6:3524:3555	184477	0	True				
ANR	184589	CallExpression	UNEXPECTED ( CG ( unclean_shutdown ) )		184477	0					
ANR	184590	Callee	UNEXPECTED		184477	0					
ANR	184591	Identifier	UNEXPECTED		184477	0					
ANR	184592	ArgumentList	CG ( unclean_shutdown )		184477	1					
ANR	184593	Argument	CG ( unclean_shutdown )		184477	0					
ANR	184594	CallExpression	CG ( unclean_shutdown )		184477	0					
ANR	184595	Callee	CG		184477	0					
ANR	184596	Identifier	CG		184477	0					
ANR	184597	ArgumentList	unclean_shutdown		184477	1					
ANR	184598	Argument	unclean_shutdown		184477	0					
ANR	184599	Identifier	unclean_shutdown		184477	0					
ANR	184600	CompoundStatement		22:40:727:727	184477	1					
ANR	184601	ExpressionStatement	generator -> execute_data = NULL	89:3:3563:3593	184477	0	True				
ANR	184602	AssignmentExpression	generator -> execute_data = NULL		184477	0		=			
ANR	184603	PtrMemberAccess	generator -> execute_data		184477	0					
ANR	184604	Identifier	generator		184477	0					
ANR	184605	Identifier	execute_data		184477	1					
ANR	184606	Identifier	NULL		184477	1					
ANR	184607	ReturnStatement	return ;	90:3:3598:3604	184477	1	True				
ANR	184608	ExpressionStatement	zend_vm_stack_free_extra_args ( generator -> execute_data )	93:2:3613:3667	184477	5	True				
ANR	184609	CallExpression	zend_vm_stack_free_extra_args ( generator -> execute_data )		184477	0					
ANR	184610	Callee	zend_vm_stack_free_extra_args		184477	0					
ANR	184611	Identifier	zend_vm_stack_free_extra_args		184477	0					
ANR	184612	ArgumentList	generator -> execute_data		184477	1					
ANR	184613	Argument	generator -> execute_data		184477	0					
ANR	184614	PtrMemberAccess	generator -> execute_data		184477	0					
ANR	184615	Identifier	generator		184477	0					
ANR	184616	Identifier	execute_data		184477	1					
ANR	184617	IfStatement	if ( UNEXPECTED ( ! finished_execution ) )		184477	6					
ANR	184618	Condition	UNEXPECTED ( ! finished_execution )	97:6:3811:3841	184477	0	True				
ANR	184619	CallExpression	UNEXPECTED ( ! finished_execution )		184477	0					
ANR	184620	Callee	UNEXPECTED		184477	0					
ANR	184621	Identifier	UNEXPECTED		184477	0					
ANR	184622	ArgumentList	! finished_execution		184477	1					
ANR	184623	Argument	! finished_execution		184477	0					
ANR	184624	UnaryOperationExpression	! finished_execution		184477	0					
ANR	184625	UnaryOperator	!		184477	0					
ANR	184626	Identifier	finished_execution		184477	1					
ANR	184627	CompoundStatement		31:39:1013:1013	184477	1					
ANR	184628	ExpressionStatement	zend_generator_cleanup_unfinished_execution ( generator )	98:3:3849:3903	184477	0	True				
ANR	184629	CallExpression	zend_generator_cleanup_unfinished_execution ( generator )		184477	0					
ANR	184630	Callee	zend_generator_cleanup_unfinished_execution		184477	0					
ANR	184631	Identifier	zend_generator_cleanup_unfinished_execution		184477	0					
ANR	184632	ArgumentList	generator		184477	1					
ANR	184633	Argument	generator		184477	0					
ANR	184634	Identifier	generator		184477	0					
ANR	184635	IfStatement	if ( EX_CALL_INFO ( ) & ZEND_CALL_CLOSURE )		184477	7					
ANR	184636	Condition	EX_CALL_INFO ( ) & ZEND_CALL_CLOSURE	102:6:3944:3977	184477	0	True				
ANR	184637	BitAndExpression	EX_CALL_INFO ( ) & ZEND_CALL_CLOSURE		184477	0		&			
ANR	184638	CallExpression	EX_CALL_INFO ( )		184477	0					
ANR	184639	Callee	EX_CALL_INFO		184477	0					
ANR	184640	Identifier	EX_CALL_INFO		184477	0					
ANR	184641	ArgumentList			184477	1					
ANR	184642	Identifier	ZEND_CALL_CLOSURE		184477	1					
ANR	184643	CompoundStatement		36:42:1149:1149	184477	1					
ANR	184644	ExpressionStatement	OBJ_RELEASE ( ( zend_object * ) EX ( func ) -> common . prototype )	103:3:3985:4040	184477	0	True				
ANR	184645	CallExpression	OBJ_RELEASE ( ( zend_object * ) EX ( func ) -> common . prototype )		184477	0					
ANR	184646	Callee	OBJ_RELEASE		184477	0					
ANR	184647	Identifier	OBJ_RELEASE		184477	0					
ANR	184648	ArgumentList	( zend_object * ) EX ( func ) -> common . prototype		184477	1					
ANR	184649	Argument	( zend_object * ) EX ( func ) -> common . prototype		184477	0					
ANR	184650	CastExpression	( zend_object * ) EX ( func ) -> common . prototype		184477	0					
ANR	184651	CastTarget	zend_object *		184477	0					
ANR	184652	MemberAccess	EX ( func ) -> common . prototype		184477	1					
ANR	184653	PtrMemberAccess	EX ( func ) -> common		184477	0					
ANR	184654	CallExpression	EX ( func )		184477	0					
ANR	184655	Callee	EX		184477	0					
ANR	184656	Identifier	EX		184477	0					
ANR	184657	ArgumentList	func		184477	1					
ANR	184658	Argument	func		184477	0					
ANR	184659	Identifier	func		184477	0					
ANR	184660	Identifier	common		184477	1					
ANR	184661	Identifier	prototype		184477	1					
ANR	184662	ExpressionStatement	efree ( generator -> stack )	106:2:4049:4072	184477	8	True				
ANR	184663	CallExpression	efree ( generator -> stack )		184477	0					
ANR	184664	Callee	efree		184477	0					
ANR	184665	Identifier	efree		184477	0					
ANR	184666	ArgumentList	generator -> stack		184477	1					
ANR	184667	Argument	generator -> stack		184477	0					
ANR	184668	PtrMemberAccess	generator -> stack		184477	0					
ANR	184669	Identifier	generator		184477	0					
ANR	184670	Identifier	stack		184477	1					
ANR	184671	ExpressionStatement	generator -> execute_data = NULL	107:2:4076:4106	184477	9	True				
ANR	184672	AssignmentExpression	generator -> execute_data = NULL		184477	0		=			
ANR	184673	PtrMemberAccess	generator -> execute_data		184477	0					
ANR	184674	Identifier	generator		184477	0					
ANR	184675	Identifier	execute_data		184477	1					
ANR	184676	Identifier	NULL		184477	1					
ANR	184677	ReturnType	ZEND_API void		184477	1					
ANR	184678	Identifier	zend_generator_close		184477	2					
ANR	184679	ParameterList	"zend_generator * generator , zend_bool finished_execution"		184477	3					
ANR	184680	Parameter	zend_generator * generator	66:35:2763:2787	184477	0	True				
ANR	184681	ParameterType	zend_generator *		184477	0					
ANR	184682	Identifier	generator		184477	1					
ANR	184683	Parameter	zend_bool finished_execution	66:62:2790:2817	184477	1	True				
ANR	184684	ParameterType	zend_bool		184477	0					
ANR	184685	Identifier	finished_execution		184477	1					
ANR	184686	CFGEntryNode	ENTRY		184477		True				
ANR	184687	CFGExitNode	EXIT		184477		True				
ANR	184688	Symbol	execute_data -> symbol_table		184477						
ANR	184689	Symbol	generator -> stack		184477						
ANR	184690	Symbol	ZEND_CALL_CLOSURE		184477						
ANR	184691	Symbol	generator		184477						
ANR	184692	Symbol	Z_TYPE		184477						
ANR	184693	Symbol	EX ( func ) -> common		184477						
ANR	184694	Symbol	execute_data		184477						
ANR	184695	Symbol	UNEXPECTED		184477						
ANR	184696	Symbol	Z_OBJ		184477						
ANR	184697	Symbol	* generator		184477						
ANR	184698	Symbol	& generator -> values		184477						
ANR	184699	Symbol	* execute_data		184477						
ANR	184700	Symbol	IS_UNDEF		184477						
ANR	184701	Symbol	EX_CALL_INFO		184477						
ANR	184702	Symbol	execute_data -> This		184477						
ANR	184703	Symbol	NULL		184477						
ANR	184704	Symbol	CG		184477						
ANR	184705	Symbol	generator -> values		184477						
ANR	184706	Symbol	finished_execution		184477						
ANR	184707	Symbol	generator -> execute_data		184477						
ANR	184708	Symbol	unclean_shutdown		184477						
ANR	184709	Symbol	EX		184477						
ANR	184710	Symbol	func		184477						
ANR	184711	Symbol	* EX		184477						
ANR	184712	Symbol	EX ( func ) -> common . prototype		184477						
ANR	184713	Symbol	EXPECTED		184477						
ANR	184714	Function	zend_generator_dtor_storage	112:0:4124:5467							
ANR	184715	FunctionDef	zend_generator_dtor_storage (zend_object * object)		184714	0					
ANR	184716	CompoundStatement		113:0:4195:5467	184714	0					
ANR	184717	IdentifierDeclStatement	zend_generator * generator = ( zend_generator * ) object ;	114:1:4198:4250	184714	0	True				
ANR	184718	IdentifierDecl	* generator = ( zend_generator * ) object		184714	0					
ANR	184719	IdentifierDeclType	zend_generator *		184714	0					
ANR	184720	Identifier	generator		184714	1					
ANR	184721	AssignmentExpression	* generator = ( zend_generator * ) object		184714	2		=			
ANR	184722	Identifier	generator		184714	0					
ANR	184723	CastExpression	( zend_generator * ) object		184714	1					
ANR	184724	CastTarget	zend_generator *		184714	0					
ANR	184725	Identifier	object		184714	1					
ANR	184726	IdentifierDeclStatement	zend_execute_data * ex = generator -> execute_data ;	115:1:4253:4300	184714	1	True				
ANR	184727	IdentifierDecl	* ex = generator -> execute_data		184714	0					
ANR	184728	IdentifierDeclType	zend_execute_data *		184714	0					
ANR	184729	Identifier	ex		184714	1					
ANR	184730	AssignmentExpression	* ex = generator -> execute_data		184714	2		=			
ANR	184731	Identifier	ex		184714	0					
ANR	184732	PtrMemberAccess	generator -> execute_data		184714	1					
ANR	184733	Identifier	generator		184714	0					
ANR	184734	Identifier	execute_data		184714	1					
ANR	184735	IdentifierDeclStatement	"uint32_t op_num , finally_op_num , finally_op_end ;"	116:1:4303:4350	184714	2	True				
ANR	184736	IdentifierDecl	op_num		184714	0					
ANR	184737	IdentifierDeclType	uint32_t		184714	0					
ANR	184738	Identifier	op_num		184714	1					
ANR	184739	IdentifierDecl	finally_op_num		184714	1					
ANR	184740	IdentifierDeclType	uint32_t		184714	0					
ANR	184741	Identifier	finally_op_num		184714	1					
ANR	184742	IdentifierDecl	finally_op_end		184714	2					
ANR	184743	IdentifierDeclType	uint32_t		184714	0					
ANR	184744	Identifier	finally_op_end		184714	1					
ANR	184745	IdentifierDeclStatement	int i ;	117:1:4353:4358	184714	3	True				
ANR	184746	IdentifierDecl	i		184714	0					
ANR	184747	IdentifierDeclType	int		184714	0					
ANR	184748	Identifier	i		184714	1					
ANR	184749	IfStatement	if ( EXPECTED ( ! ex ) || EXPECTED ( ! ( ex -> func -> op_array . fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) ) )		184714	4					
ANR	184750	Condition	EXPECTED ( ! ex ) || EXPECTED ( ! ( ex -> func -> op_array . fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) )	119:5:4366:4451	184714	0	True				
ANR	184751	OrExpression	EXPECTED ( ! ex ) || EXPECTED ( ! ( ex -> func -> op_array . fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) )		184714	0		||			
ANR	184752	CallExpression	EXPECTED ( ! ex )		184714	0					
ANR	184753	Callee	EXPECTED		184714	0					
ANR	184754	Identifier	EXPECTED		184714	0					
ANR	184755	ArgumentList	! ex		184714	1					
ANR	184756	Argument	! ex		184714	0					
ANR	184757	UnaryOperationExpression	! ex		184714	0					
ANR	184758	UnaryOperator	!		184714	0					
ANR	184759	Identifier	ex		184714	1					
ANR	184760	CallExpression	EXPECTED ( ! ( ex -> func -> op_array . fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK ) )		184714	1					
ANR	184761	Callee	EXPECTED		184714	0					
ANR	184762	Identifier	EXPECTED		184714	0					
ANR	184763	ArgumentList	! ( ex -> func -> op_array . fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK )		184714	1					
ANR	184764	Argument	! ( ex -> func -> op_array . fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK )		184714	0					
ANR	184765	UnaryOperationExpression	! ( ex -> func -> op_array . fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK )		184714	0					
ANR	184766	UnaryOperator	!		184714	0					
ANR	184767	BitAndExpression	ex -> func -> op_array . fn_flags & ZEND_ACC_HAS_FINALLY_BLOCK		184714	1		&			
ANR	184768	MemberAccess	ex -> func -> op_array . fn_flags		184714	0					
ANR	184769	PtrMemberAccess	ex -> func -> op_array		184714	0					
ANR	184770	PtrMemberAccess	ex -> func		184714	0					
ANR	184771	Identifier	ex		184714	0					
ANR	184772	Identifier	func		184714	1					
ANR	184773	Identifier	op_array		184714	1					
ANR	184774	Identifier	fn_flags		184714	1					
ANR	184775	Identifier	ZEND_ACC_HAS_FINALLY_BLOCK		184714	1					
ANR	184776	CompoundStatement		7:93:258:258	184714	1					
ANR	184777	ReturnStatement	return ;	120:2:4458:4464	184714	0	True				
ANR	184778	ExpressionStatement	op_num = ex -> opline - ex -> func -> op_array . opcodes - 1	125:1:4559:4611	184714	5	True				
ANR	184779	AssignmentExpression	op_num = ex -> opline - ex -> func -> op_array . opcodes - 1		184714	0		=			
ANR	184780	Identifier	op_num		184714	0					
ANR	184781	AdditiveExpression	ex -> opline - ex -> func -> op_array . opcodes - 1		184714	1		-			
ANR	184782	PtrMemberAccess	ex -> opline		184714	0					
ANR	184783	Identifier	ex		184714	0					
ANR	184784	Identifier	opline		184714	1					
ANR	184785	AdditiveExpression	ex -> func -> op_array . opcodes - 1		184714	1		-			
ANR	184786	MemberAccess	ex -> func -> op_array . opcodes		184714	0					
ANR	184787	PtrMemberAccess	ex -> func -> op_array		184714	0					
ANR	184788	PtrMemberAccess	ex -> func		184714	0					
ANR	184789	Identifier	ex		184714	0					
ANR	184790	Identifier	func		184714	1					
ANR	184791	Identifier	op_array		184714	1					
ANR	184792	Identifier	opcodes		184714	1					
ANR	184793	PrimaryExpression	1		184714	1					
ANR	184794	ExpressionStatement	finally_op_num = 0	128:1:4646:4664	184714	6	True				
ANR	184795	AssignmentExpression	finally_op_num = 0		184714	0		=			
ANR	184796	Identifier	finally_op_num		184714	0					
ANR	184797	PrimaryExpression	0		184714	1					
ANR	184798	ExpressionStatement	finally_op_end = 0	129:1:4667:4685	184714	7	True				
ANR	184799	AssignmentExpression	finally_op_end = 0		184714	0		=			
ANR	184800	Identifier	finally_op_end		184714	0					
ANR	184801	PrimaryExpression	0		184714	1					
ANR	184802	ForStatement	for ( i = 0 ; i < ex -> func -> op_array . last_try_catch ; i ++ )		184714	8					
ANR	184803	ForInit	i = 0 ;	130:6:4693:4698	184714	0	True				
ANR	184804	AssignmentExpression	i = 0		184714	0		=			
ANR	184805	Identifier	i		184714	0					
ANR	184806	PrimaryExpression	0		184714	1					
ANR	184807	Condition	i < ex -> func -> op_array . last_try_catch	130:13:4700:4736	184714	1	True				
ANR	184808	RelationalExpression	i < ex -> func -> op_array . last_try_catch		184714	0		<			
ANR	184809	Identifier	i		184714	0					
ANR	184810	MemberAccess	ex -> func -> op_array . last_try_catch		184714	1					
ANR	184811	PtrMemberAccess	ex -> func -> op_array		184714	0					
ANR	184812	PtrMemberAccess	ex -> func		184714	0					
ANR	184813	Identifier	ex		184714	0					
ANR	184814	Identifier	func		184714	1					
ANR	184815	Identifier	op_array		184714	1					
ANR	184816	Identifier	last_try_catch		184714	1					
ANR	184817	PostIncDecOperationExpression	i ++	130:52:4739:4741	184714	2	True				
ANR	184818	Identifier	i		184714	0					
ANR	184819	IncDec	++		184714	1					
ANR	184820	CompoundStatement		19:2:552:626	184714	3					
ANR	184821	IdentifierDeclStatement	zend_try_catch_element * try_catch = & ex -> func -> op_array . try_catch_array [ i ] ;	131:2:4748:4822	184714	0	True				
ANR	184822	IdentifierDecl	* try_catch = & ex -> func -> op_array . try_catch_array [ i ]		184714	0					
ANR	184823	IdentifierDeclType	zend_try_catch_element *		184714	0					
ANR	184824	Identifier	try_catch		184714	1					
ANR	184825	AssignmentExpression	* try_catch = & ex -> func -> op_array . try_catch_array [ i ]		184714	2		=			
ANR	184826	Identifier	try_catch		184714	0					
ANR	184827	UnaryOperationExpression	& ex -> func -> op_array . try_catch_array [ i ]		184714	1					
ANR	184828	UnaryOperator	&		184714	0					
ANR	184829	ArrayIndexing	ex -> func -> op_array . try_catch_array [ i ]		184714	1					
ANR	184830	MemberAccess	ex -> func -> op_array . try_catch_array		184714	0					
ANR	184831	PtrMemberAccess	ex -> func -> op_array		184714	0					
ANR	184832	PtrMemberAccess	ex -> func		184714	0					
ANR	184833	Identifier	ex		184714	0					
ANR	184834	Identifier	func		184714	1					
ANR	184835	Identifier	op_array		184714	1					
ANR	184836	Identifier	try_catch_array		184714	1					
ANR	184837	Identifier	i		184714	1					
ANR	184838	IfStatement	if ( op_num < try_catch -> try_op )		184714	1					
ANR	184839	Condition	op_num < try_catch -> try_op	133:6:4831:4856	184714	0	True				
ANR	184840	RelationalExpression	op_num < try_catch -> try_op		184714	0		<			
ANR	184841	Identifier	op_num		184714	0					
ANR	184842	PtrMemberAccess	try_catch -> try_op		184714	1					
ANR	184843	Identifier	try_catch		184714	0					
ANR	184844	Identifier	try_op		184714	1					
ANR	184845	CompoundStatement		21:34:663:663	184714	1					
ANR	184846	BreakStatement	break ;	134:3:4864:4869	184714	0	True				
ANR	184847	IfStatement	if ( op_num < try_catch -> finally_op )		184714	2					
ANR	184848	Condition	op_num < try_catch -> finally_op	137:6:4882:4911	184714	0	True				
ANR	184849	RelationalExpression	op_num < try_catch -> finally_op		184714	0		<			
ANR	184850	Identifier	op_num		184714	0					
ANR	184851	PtrMemberAccess	try_catch -> finally_op		184714	1					
ANR	184852	Identifier	try_catch		184714	0					
ANR	184853	Identifier	finally_op		184714	1					
ANR	184854	CompoundStatement		25:38:718:718	184714	1					
ANR	184855	ExpressionStatement	finally_op_num = try_catch -> finally_op	138:3:4919:4957	184714	0	True				
ANR	184856	AssignmentExpression	finally_op_num = try_catch -> finally_op		184714	0		=			
ANR	184857	Identifier	finally_op_num		184714	0					
ANR	184858	PtrMemberAccess	try_catch -> finally_op		184714	1					
ANR	184859	Identifier	try_catch		184714	0					
ANR	184860	Identifier	finally_op		184714	1					
ANR	184861	ExpressionStatement	finally_op_end = try_catch -> finally_end	139:3:4962:5001	184714	1	True				
ANR	184862	AssignmentExpression	finally_op_end = try_catch -> finally_end		184714	0		=			
ANR	184863	Identifier	finally_op_end		184714	0					
ANR	184864	PtrMemberAccess	try_catch -> finally_end		184714	1					
ANR	184865	Identifier	try_catch		184714	0					
ANR	184866	Identifier	finally_end		184714	1					
ANR	184867	IfStatement	if ( finally_op_num )		184714	9					
ANR	184868	Condition	finally_op_num	145:5:5105:5118	184714	0	True				
ANR	184869	Identifier	finally_op_num		184714	0					
ANR	184870	CompoundStatement		34:2:929:1016	184714	1					
ANR	184871	IdentifierDeclStatement	"zval * fast_call = ZEND_CALL_VAR ( ex , ex -> func -> op_array . opcodes [ finally_op_end ] . op1 . var ) ;"	146:2:5125:5212	184714	0	True				
ANR	184872	IdentifierDecl	"* fast_call = ZEND_CALL_VAR ( ex , ex -> func -> op_array . opcodes [ finally_op_end ] . op1 . var )"		184714	0					
ANR	184873	IdentifierDeclType	zval *		184714	0					
ANR	184874	Identifier	fast_call		184714	1					
ANR	184875	AssignmentExpression	"* fast_call = ZEND_CALL_VAR ( ex , ex -> func -> op_array . opcodes [ finally_op_end ] . op1 . var )"		184714	2		=			
ANR	184876	Identifier	fast_call		184714	0					
ANR	184877	CallExpression	"ZEND_CALL_VAR ( ex , ex -> func -> op_array . opcodes [ finally_op_end ] . op1 . var )"		184714	1					
ANR	184878	Callee	ZEND_CALL_VAR		184714	0					
ANR	184879	Identifier	ZEND_CALL_VAR		184714	0					
ANR	184880	ArgumentList	ex		184714	1					
ANR	184881	Argument	ex		184714	0					
ANR	184882	Identifier	ex		184714	0					
ANR	184883	Argument	ex -> func -> op_array . opcodes [ finally_op_end ] . op1 . var		184714	1					
ANR	184884	MemberAccess	ex -> func -> op_array . opcodes [ finally_op_end ] . op1 . var		184714	0					
ANR	184885	MemberAccess	ex -> func -> op_array . opcodes [ finally_op_end ] . op1		184714	0					
ANR	184886	ArrayIndexing	ex -> func -> op_array . opcodes [ finally_op_end ]		184714	0					
ANR	184887	MemberAccess	ex -> func -> op_array . opcodes		184714	0					
ANR	184888	PtrMemberAccess	ex -> func -> op_array		184714	0					
ANR	184889	PtrMemberAccess	ex -> func		184714	0					
ANR	184890	Identifier	ex		184714	0					
ANR	184891	Identifier	func		184714	1					
ANR	184892	Identifier	op_array		184714	1					
ANR	184893	Identifier	opcodes		184714	1					
ANR	184894	Identifier	finally_op_end		184714	1					
ANR	184895	Identifier	op1		184714	1					
ANR	184896	Identifier	var		184714	1					
ANR	184897	ExpressionStatement	Z_OBJ_P ( fast_call ) = EG ( exception )	148:2:5217:5251	184714	1	True				
ANR	184898	AssignmentExpression	Z_OBJ_P ( fast_call ) = EG ( exception )		184714	0		=			
ANR	184899	CallExpression	Z_OBJ_P ( fast_call )		184714	0					
ANR	184900	Callee	Z_OBJ_P		184714	0					
ANR	184901	Identifier	Z_OBJ_P		184714	0					
ANR	184902	ArgumentList	fast_call		184714	1					
ANR	184903	Argument	fast_call		184714	0					
ANR	184904	Identifier	fast_call		184714	0					
ANR	184905	CallExpression	EG ( exception )		184714	1					
ANR	184906	Callee	EG		184714	0					
ANR	184907	Identifier	EG		184714	0					
ANR	184908	ArgumentList	exception		184714	1					
ANR	184909	Argument	exception		184714	0					
ANR	184910	Identifier	exception		184714	0					
ANR	184911	ExpressionStatement	EG ( exception ) = NULL	149:2:5255:5275	184714	2	True				
ANR	184912	AssignmentExpression	EG ( exception ) = NULL		184714	0		=			
ANR	184913	CallExpression	EG ( exception )		184714	0					
ANR	184914	Callee	EG		184714	0					
ANR	184915	Identifier	EG		184714	0					
ANR	184916	ArgumentList	exception		184714	1					
ANR	184917	Argument	exception		184714	0					
ANR	184918	Identifier	exception		184714	0					
ANR	184919	Identifier	NULL		184714	1					
ANR	184920	ExpressionStatement	fast_call -> u2 . lineno = ( uint32_t ) - 1	150:2:5279:5314	184714	3	True				
ANR	184921	AssignmentExpression	fast_call -> u2 . lineno = ( uint32_t ) - 1		184714	0		=			
ANR	184922	MemberAccess	fast_call -> u2 . lineno		184714	0					
ANR	184923	PtrMemberAccess	fast_call -> u2		184714	0					
ANR	184924	Identifier	fast_call		184714	0					
ANR	184925	Identifier	u2		184714	1					
ANR	184926	Identifier	lineno		184714	1					
ANR	184927	CastExpression	( uint32_t ) - 1		184714	1					
ANR	184928	CastTarget	uint32_t		184714	0					
ANR	184929	UnaryOperationExpression	- 1		184714	1					
ANR	184930	UnaryOperator	-		184714	0					
ANR	184931	PrimaryExpression	1		184714	1					
ANR	184932	ExpressionStatement	ex -> opline = & ex -> func -> op_array . opcodes [ finally_op_num ]	152:2:5319:5375	184714	4	True				
ANR	184933	AssignmentExpression	ex -> opline = & ex -> func -> op_array . opcodes [ finally_op_num ]		184714	0		=			
ANR	184934	PtrMemberAccess	ex -> opline		184714	0					
ANR	184935	Identifier	ex		184714	0					
ANR	184936	Identifier	opline		184714	1					
ANR	184937	UnaryOperationExpression	& ex -> func -> op_array . opcodes [ finally_op_num ]		184714	1					
ANR	184938	UnaryOperator	&		184714	0					
ANR	184939	ArrayIndexing	ex -> func -> op_array . opcodes [ finally_op_num ]		184714	1					
ANR	184940	MemberAccess	ex -> func -> op_array . opcodes		184714	0					
ANR	184941	PtrMemberAccess	ex -> func -> op_array		184714	0					
ANR	184942	PtrMemberAccess	ex -> func		184714	0					
ANR	184943	Identifier	ex		184714	0					
ANR	184944	Identifier	func		184714	1					
ANR	184945	Identifier	op_array		184714	1					
ANR	184946	Identifier	opcodes		184714	1					
ANR	184947	Identifier	finally_op_num		184714	1					
ANR	184948	ExpressionStatement	generator -> flags |= ZEND_GENERATOR_FORCED_CLOSE	153:2:5379:5426	184714	5	True				
ANR	184949	AssignmentExpression	generator -> flags |= ZEND_GENERATOR_FORCED_CLOSE		184714	0		|=			
ANR	184950	PtrMemberAccess	generator -> flags		184714	0					
ANR	184951	Identifier	generator		184714	0					
ANR	184952	Identifier	flags		184714	1					
ANR	184953	Identifier	ZEND_GENERATOR_FORCED_CLOSE		184714	1					
ANR	184954	ExpressionStatement	zend_generator_resume ( generator )	154:2:5430:5462	184714	6	True				
ANR	184955	CallExpression	zend_generator_resume ( generator )		184714	0					
ANR	184956	Callee	zend_generator_resume		184714	0					
ANR	184957	Identifier	zend_generator_resume		184714	0					
ANR	184958	ArgumentList	generator		184714	1					
ANR	184959	Argument	generator		184714	0					
ANR	184960	Identifier	generator		184714	0					
ANR	184961	ReturnType	static void		184714	1					
ANR	184962	Identifier	zend_generator_dtor_storage		184714	2					
ANR	184963	ParameterList	zend_object * object		184714	3					
ANR	184964	Parameter	zend_object * object	112:40:4164:4182	184714	0	True				
ANR	184965	ParameterType	zend_object *		184714	0					
ANR	184966	Identifier	object		184714	1					
ANR	184967	CFGEntryNode	ENTRY		184714		True				
ANR	184968	CFGExitNode	EXIT		184714		True				
ANR	184969	Symbol	exception		184714						
ANR	184970	Symbol	* finally_op_end		184714						
ANR	184971	Symbol	ex -> func -> op_array		184714						
ANR	184972	Symbol	Z_OBJ_P		184714						
ANR	184973	Symbol	generator		184714						
ANR	184974	Symbol	* try_catch		184714						
ANR	184975	Symbol	ex -> func -> op_array . fn_flags		184714						
ANR	184976	Symbol	ex -> func		184714						
ANR	184977	Symbol	* ex -> func -> op_array		184714						
ANR	184978	Symbol	generator -> flags		184714						
ANR	184979	Symbol	ex -> func -> op_array . last_try_catch		184714						
ANR	184980	Symbol	* generator		184714						
ANR	184981	Symbol	ZEND_ACC_HAS_FINALLY_BLOCK		184714						
ANR	184982	Symbol	ex -> func -> op_array . opcodes [ finally_op_end ] . op1 . var		184714						
ANR	184983	Symbol	ex -> func -> op_array . opcodes		184714						
ANR	184984	Symbol	* * ex		184714						
ANR	184985	Symbol	try_catch		184714						
ANR	184986	Symbol	try_catch -> try_op		184714						
ANR	184987	Symbol	ex -> opline		184714						
ANR	184988	Symbol	EG		184714						
ANR	184989	Symbol	NULL		184714						
ANR	184990	Symbol	op_num		184714						
ANR	184991	Symbol	i		184714						
ANR	184992	Symbol	ex -> func -> op_array . opcodes [ finally_op_end ] . op1		184714						
ANR	184993	Symbol	finally_op_end		184714						
ANR	184994	Symbol	* * * ex		184714						
ANR	184995	Symbol	generator -> execute_data		184714						
ANR	184996	Symbol	* ex -> func -> op_array . opcodes		184714						
ANR	184997	Symbol	ex		184714						
ANR	184998	Symbol	try_catch -> finally_end		184714						
ANR	184999	Symbol	ZEND_CALL_VAR		184714						
ANR	185000	Symbol	try_catch -> finally_op		184714						
ANR	185001	Symbol	finally_op_num		184714						
ANR	185002	Symbol	ex -> func -> op_array . try_catch_array		184714						
ANR	185003	Symbol	* * ex -> func		184714						
ANR	185004	Symbol	fast_call -> u2		184714						
ANR	185005	Symbol	fast_call -> u2 . lineno		184714						
ANR	185006	Symbol	* ex		184714						
ANR	185007	Symbol	* ex -> func		184714						
ANR	185008	Symbol	* fast_call		184714						
ANR	185009	Symbol	ZEND_GENERATOR_FORCED_CLOSE		184714						
ANR	185010	Symbol	EXPECTED		184714						
ANR	185011	Symbol	object		184714						
ANR	185012	Symbol	fast_call		184714						
ANR	185013	DeclStmt									
ANR	185014	Decl							zend_generator	"zend_generator * ( zend_generator_node * node , zend_generator * leaf )"	zend_generator_get_child
ANR	185015	Function	zend_generator_free_storage	161:0:5579:6486							
ANR	185016	FunctionDef	zend_generator_free_storage (zend_object * object)		185015	0					
ANR	185017	CompoundStatement		162:0:5650:6486	185015	0					
ANR	185018	IdentifierDeclStatement	zend_generator * generator = ( zend_generator * ) object ;	163:1:5653:5705	185015	0	True				
ANR	185019	IdentifierDecl	* generator = ( zend_generator * ) object		185015	0					
ANR	185020	IdentifierDeclType	zend_generator *		185015	0					
ANR	185021	Identifier	generator		185015	1					
ANR	185022	AssignmentExpression	* generator = ( zend_generator * ) object		185015	2		=			
ANR	185023	Identifier	generator		185015	0					
ANR	185024	CastExpression	( zend_generator * ) object		185015	1					
ANR	185025	CastTarget	zend_generator *		185015	0					
ANR	185026	Identifier	object		185015	1					
ANR	185027	ExpressionStatement	"zend_generator_close ( generator , 0 )"	165:1:5709:5743	185015	1	True				
ANR	185028	CallExpression	"zend_generator_close ( generator , 0 )"		185015	0					
ANR	185029	Callee	zend_generator_close		185015	0					
ANR	185030	Identifier	zend_generator_close		185015	0					
ANR	185031	ArgumentList	generator		185015	1					
ANR	185032	Argument	generator		185015	0					
ANR	185033	Identifier	generator		185015	0					
ANR	185034	Argument	0		185015	1					
ANR	185035	PrimaryExpression	0		185015	0					
ANR	185036	ExpressionStatement	zval_ptr_dtor ( & generator -> value )	168:1:5853:5885	185015	2	True				
ANR	185037	CallExpression	zval_ptr_dtor ( & generator -> value )		185015	0					
ANR	185038	Callee	zval_ptr_dtor		185015	0					
ANR	185039	Identifier	zval_ptr_dtor		185015	0					
ANR	185040	ArgumentList	& generator -> value		185015	1					
ANR	185041	Argument	& generator -> value		185015	0					
ANR	185042	UnaryOperationExpression	& generator -> value		185015	0					
ANR	185043	UnaryOperator	&		185015	0					
ANR	185044	PtrMemberAccess	generator -> value		185015	1					
ANR	185045	Identifier	generator		185015	0					
ANR	185046	Identifier	value		185015	1					
ANR	185047	ExpressionStatement	zval_ptr_dtor ( & generator -> key )	169:1:5888:5918	185015	3	True				
ANR	185048	CallExpression	zval_ptr_dtor ( & generator -> key )		185015	0					
ANR	185049	Callee	zval_ptr_dtor		185015	0					
ANR	185050	Identifier	zval_ptr_dtor		185015	0					
ANR	185051	ArgumentList	& generator -> key		185015	1					
ANR	185052	Argument	& generator -> key		185015	0					
ANR	185053	UnaryOperationExpression	& generator -> key		185015	0					
ANR	185054	UnaryOperator	&		185015	0					
ANR	185055	PtrMemberAccess	generator -> key		185015	1					
ANR	185056	Identifier	generator		185015	0					
ANR	185057	Identifier	key		185015	1					
ANR	185058	IfStatement	if ( EXPECTED ( ! Z_ISUNDEF ( generator -> retval ) ) )		185015	4					
ANR	185059	Condition	EXPECTED ( ! Z_ISUNDEF ( generator -> retval ) )	171:5:5926:5964	185015	0	True				
ANR	185060	CallExpression	EXPECTED ( ! Z_ISUNDEF ( generator -> retval ) )		185015	0					
ANR	185061	Callee	EXPECTED		185015	0					
ANR	185062	Identifier	EXPECTED		185015	0					
ANR	185063	ArgumentList	! Z_ISUNDEF ( generator -> retval )		185015	1					
ANR	185064	Argument	! Z_ISUNDEF ( generator -> retval )		185015	0					
ANR	185065	UnaryOperationExpression	! Z_ISUNDEF ( generator -> retval )		185015	0					
ANR	185066	UnaryOperator	!		185015	0					
ANR	185067	CallExpression	Z_ISUNDEF ( generator -> retval )		185015	1					
ANR	185068	Callee	Z_ISUNDEF		185015	0					
ANR	185069	Identifier	Z_ISUNDEF		185015	0					
ANR	185070	ArgumentList	generator -> retval		185015	1					
ANR	185071	Argument	generator -> retval		185015	0					
ANR	185072	PtrMemberAccess	generator -> retval		185015	0					
ANR	185073	Identifier	generator		185015	0					
ANR	185074	Identifier	retval		185015	1					
ANR	185075	CompoundStatement		10:46:316:316	185015	1					
ANR	185076	ExpressionStatement	zval_ptr_dtor ( & generator -> retval )	172:2:5971:6004	185015	0	True				
ANR	185077	CallExpression	zval_ptr_dtor ( & generator -> retval )		185015	0					
ANR	185078	Callee	zval_ptr_dtor		185015	0					
ANR	185079	Identifier	zval_ptr_dtor		185015	0					
ANR	185080	ArgumentList	& generator -> retval		185015	1					
ANR	185081	Argument	& generator -> retval		185015	0					
ANR	185082	UnaryOperationExpression	& generator -> retval		185015	0					
ANR	185083	UnaryOperator	&		185015	0					
ANR	185084	PtrMemberAccess	generator -> retval		185015	1					
ANR	185085	Identifier	generator		185015	0					
ANR	185086	Identifier	retval		185015	1					
ANR	185087	IfStatement	if ( UNEXPECTED ( generator -> node . children > 4 ) )		185015	5					
ANR	185088	Condition	UNEXPECTED ( generator -> node . children > 4 )	175:5:6015:6054	185015	0	True				
ANR	185089	CallExpression	UNEXPECTED ( generator -> node . children > 4 )		185015	0					
ANR	185090	Callee	UNEXPECTED		185015	0					
ANR	185091	Identifier	UNEXPECTED		185015	0					
ANR	185092	ArgumentList	generator -> node . children > 4		185015	1					
ANR	185093	Argument	generator -> node . children > 4		185015	0					
ANR	185094	RelationalExpression	generator -> node . children > 4		185015	0		>			
ANR	185095	MemberAccess	generator -> node . children		185015	0					
ANR	185096	PtrMemberAccess	generator -> node		185015	0					
ANR	185097	Identifier	generator		185015	0					
ANR	185098	Identifier	node		185015	1					
ANR	185099	Identifier	children		185015	1					
ANR	185100	PrimaryExpression	4		185015	1					
ANR	185101	CompoundStatement		14:47:406:406	185015	1					
ANR	185102	ExpressionStatement	zend_hash_destroy ( & generator -> node . child . ht )	176:2:6061:6105	185015	0	True				
ANR	185103	CallExpression	zend_hash_destroy ( & generator -> node . child . ht )		185015	0					
ANR	185104	Callee	zend_hash_destroy		185015	0					
ANR	185105	Identifier	zend_hash_destroy		185015	0					
ANR	185106	ArgumentList	& generator -> node . child . ht		185015	1					
ANR	185107	Argument	& generator -> node . child . ht		185015	0					
ANR	185108	UnaryOperationExpression	& generator -> node . child . ht		185015	0					
ANR	185109	UnaryOperator	&		185015	0					
ANR	185110	MemberAccess	generator -> node . child . ht		185015	1					
ANR	185111	MemberAccess	generator -> node . child		185015	0					
ANR	185112	PtrMemberAccess	generator -> node		185015	0					
ANR	185113	Identifier	generator		185015	0					
ANR	185114	Identifier	node		185015	1					
ANR	185115	Identifier	child		185015	1					
ANR	185116	Identifier	ht		185015	1					
ANR	185117	ExpressionStatement	zend_object_std_dtor ( & generator -> std )	179:1:6112:6149	185015	6	True				
ANR	185118	CallExpression	zend_object_std_dtor ( & generator -> std )		185015	0					
ANR	185119	Callee	zend_object_std_dtor		185015	0					
ANR	185120	Identifier	zend_object_std_dtor		185015	0					
ANR	185121	ArgumentList	& generator -> std		185015	1					
ANR	185122	Argument	& generator -> std		185015	0					
ANR	185123	UnaryOperationExpression	& generator -> std		185015	0					
ANR	185124	UnaryOperator	&		185015	0					
ANR	185125	PtrMemberAccess	generator -> std		185015	1					
ANR	185126	Identifier	generator		185015	0					
ANR	185127	Identifier	std		185015	1					
ANR	185128	IfStatement	if ( generator -> iterator )		185015	7					
ANR	185129	Condition	generator -> iterator	181:5:6157:6175	185015	0	True				
ANR	185130	PtrMemberAccess	generator -> iterator		185015	0					
ANR	185131	Identifier	generator		185015	0					
ANR	185132	Identifier	iterator		185015	1					
ANR	185133	CompoundStatement		20:26:527:527	185015	1					
ANR	185134	ExpressionStatement	zend_iterator_dtor ( generator -> iterator )	182:2:6182:6221	185015	0	True				
ANR	185135	CallExpression	zend_iterator_dtor ( generator -> iterator )		185015	0					
ANR	185136	Callee	zend_iterator_dtor		185015	0					
ANR	185137	Identifier	zend_iterator_dtor		185015	0					
ANR	185138	ArgumentList	generator -> iterator		185015	1					
ANR	185139	Argument	generator -> iterator		185015	0					
ANR	185140	PtrMemberAccess	generator -> iterator		185015	0					
ANR	185141	Identifier	generator		185015	0					
ANR	185142	Identifier	iterator		185015	1					
ANR	185143	IfStatement	if ( EXPECTED ( generator -> node . children == 0 ) )		185015	8					
ANR	185144	Condition	EXPECTED ( generator -> node . children == 0 )	185:5:6232:6270	185015	0	True				
ANR	185145	CallExpression	EXPECTED ( generator -> node . children == 0 )		185015	0					
ANR	185146	Callee	EXPECTED		185015	0					
ANR	185147	Identifier	EXPECTED		185015	0					
ANR	185148	ArgumentList	generator -> node . children == 0		185015	1					
ANR	185149	Argument	generator -> node . children == 0		185015	0					
ANR	185150	EqualityExpression	generator -> node . children == 0		185015	0		==			
ANR	185151	MemberAccess	generator -> node . children		185015	0					
ANR	185152	PtrMemberAccess	generator -> node		185015	0					
ANR	185153	Identifier	generator		185015	0					
ANR	185154	Identifier	node		185015	1					
ANR	185155	Identifier	children		185015	1					
ANR	185156	PrimaryExpression	0		185015	1					
ANR	185157	CompoundStatement		25:2:626:680	185015	1					
ANR	185158	IdentifierDeclStatement	"zend_generator * root = generator -> node . ptr . root , * next ;"	186:2:6277:6331	185015	0	True				
ANR	185159	IdentifierDecl	* root = generator -> node . ptr . root		185015	0					
ANR	185160	IdentifierDeclType	zend_generator *		185015	0					
ANR	185161	Identifier	root		185015	1					
ANR	185162	AssignmentExpression	* root = generator -> node . ptr . root		185015	2		=			
ANR	185163	Identifier	root		185015	0					
ANR	185164	MemberAccess	generator -> node . ptr . root		185015	1					
ANR	185165	MemberAccess	generator -> node . ptr		185015	0					
ANR	185166	PtrMemberAccess	generator -> node		185015	0					
ANR	185167	Identifier	generator		185015	0					
ANR	185168	Identifier	node		185015	1					
ANR	185169	Identifier	ptr		185015	1					
ANR	185170	Identifier	root		185015	1					
ANR	185171	IdentifierDecl	* next		185015	1					
ANR	185172	IdentifierDeclType	zend_generator *		185015	0					
ANR	185173	Identifier	next		185015	1					
ANR	185174	WhileStatement	while ( UNEXPECTED ( root != generator ) )		185015	1					
ANR	185175	Condition	UNEXPECTED ( root != generator )	187:9:6342:6370	185015	0	True				
ANR	185176	CallExpression	UNEXPECTED ( root != generator )		185015	0					
ANR	185177	Callee	UNEXPECTED		185015	0					
ANR	185178	Identifier	UNEXPECTED		185015	0					
ANR	185179	ArgumentList	root != generator		185015	1					
ANR	185180	Argument	root != generator		185015	0					
ANR	185181	EqualityExpression	root != generator		185015	0		!=			
ANR	185182	Identifier	root		185015	0					
ANR	185183	Identifier	generator		185015	1					
ANR	185184	CompoundStatement		26:40:722:722	185015	1					
ANR	185185	ExpressionStatement	"next = zend_generator_get_child ( & root -> node , generator )"	188:3:6378:6433	185015	0	True				
ANR	185186	AssignmentExpression	"next = zend_generator_get_child ( & root -> node , generator )"		185015	0		=			
ANR	185187	Identifier	next		185015	0					
ANR	185188	CallExpression	"zend_generator_get_child ( & root -> node , generator )"		185015	1					
ANR	185189	Callee	zend_generator_get_child		185015	0					
ANR	185190	Identifier	zend_generator_get_child		185015	0					
ANR	185191	ArgumentList	& root -> node		185015	1					
ANR	185192	Argument	& root -> node		185015	0					
ANR	185193	UnaryOperationExpression	& root -> node		185015	0					
ANR	185194	UnaryOperator	&		185015	0					
ANR	185195	PtrMemberAccess	root -> node		185015	1					
ANR	185196	Identifier	root		185015	0					
ANR	185197	Identifier	node		185015	1					
ANR	185198	Argument	generator		185015	1					
ANR	185199	Identifier	generator		185015	0					
ANR	185200	ExpressionStatement	OBJ_RELEASE ( & root -> std )	189:3:6438:6461	185015	1	True				
ANR	185201	CallExpression	OBJ_RELEASE ( & root -> std )		185015	0					
ANR	185202	Callee	OBJ_RELEASE		185015	0					
ANR	185203	Identifier	OBJ_RELEASE		185015	0					
ANR	185204	ArgumentList	& root -> std		185015	1					
ANR	185205	Argument	& root -> std		185015	0					
ANR	185206	UnaryOperationExpression	& root -> std		185015	0					
ANR	185207	UnaryOperator	&		185015	0					
ANR	185208	PtrMemberAccess	root -> std		185015	1					
ANR	185209	Identifier	root		185015	0					
ANR	185210	Identifier	std		185015	1					
ANR	185211	ExpressionStatement	root = next	190:3:6466:6477	185015	2	True				
ANR	185212	AssignmentExpression	root = next		185015	0		=			
ANR	185213	Identifier	root		185015	0					
ANR	185214	Identifier	next		185015	1					
ANR	185215	ReturnType	static void		185015	1					
ANR	185216	Identifier	zend_generator_free_storage		185015	2					
ANR	185217	ParameterList	zend_object * object		185015	3					
ANR	185218	Parameter	zend_object * object	161:40:5619:5637	185015	0	True				
ANR	185219	ParameterType	zend_object *		185015	0					
ANR	185220	Identifier	object		185015	1					
ANR	185221	CFGEntryNode	ENTRY		185015		True				
ANR	185222	CFGExitNode	EXIT		185015		True				
ANR	185223	Symbol	next		185015						
ANR	185224	Symbol	& root -> node		185015						
ANR	185225	Symbol	zend_generator_get_child		185015						
ANR	185226	Symbol	generator		185015						
ANR	185227	Symbol	generator -> node . children		185015						
ANR	185228	Symbol	& generator -> retval		185015						
ANR	185229	Symbol	generator -> iterator		185015						
ANR	185230	Symbol	& generator -> value		185015						
ANR	185231	Symbol	UNEXPECTED		185015						
ANR	185232	Symbol	* generator		185015						
ANR	185233	Symbol	generator -> node . ptr		185015						
ANR	185234	Symbol	generator -> retval		185015						
ANR	185235	Symbol	root		185015						
ANR	185236	Symbol	& generator -> node		185015						
ANR	185237	Symbol	generator -> node . ptr . root		185015						
ANR	185238	Symbol	& generator -> node . child		185015						
ANR	185239	Symbol	Z_ISUNDEF		185015						
ANR	185240	Symbol	generator -> node		185015						
ANR	185241	Symbol	& root -> std		185015						
ANR	185242	Symbol	generator -> node . child		185015						
ANR	185243	Symbol	& generator -> std		185015						
ANR	185244	Symbol	& generator -> node . child . ht		185015						
ANR	185245	Symbol	& generator -> key		185015						
ANR	185246	Symbol	EXPECTED		185015						
ANR	185247	Symbol	object		185015						
ANR	185248	Function	zend_generator_create	196:0:6499:7178							
ANR	185249	FunctionDef	zend_generator_create (zend_class_entry * class_type)		185248	0					
ANR	185250	CompoundStatement		197:0:6581:7178	185248	0					
ANR	185251	IdentifierDeclStatement	zend_generator * generator ;	198:1:6584:6609	185248	0	True				
ANR	185252	IdentifierDecl	* generator		185248	0					
ANR	185253	IdentifierDeclType	zend_generator *		185248	0					
ANR	185254	Identifier	generator		185248	1					
ANR	185255	ExpressionStatement	generator = emalloc ( sizeof ( zend_generator ) )	200:1:6613:6656	185248	1	True				
ANR	185256	AssignmentExpression	generator = emalloc ( sizeof ( zend_generator ) )		185248	0		=			
ANR	185257	Identifier	generator		185248	0					
ANR	185258	CallExpression	emalloc ( sizeof ( zend_generator ) )		185248	1					
ANR	185259	Callee	emalloc		185248	0					
ANR	185260	Identifier	emalloc		185248	0					
ANR	185261	ArgumentList	sizeof ( zend_generator )		185248	1					
ANR	185262	Argument	sizeof ( zend_generator )		185248	0					
ANR	185263	SizeofExpression	sizeof ( zend_generator )		185248	0					
ANR	185264	Sizeof	sizeof		185248	0					
ANR	185265	SizeofOperand	zend_generator		185248	1					
ANR	185266	ExpressionStatement	"memset ( generator , 0 , sizeof ( zend_generator ) )"	201:1:6659:6703	185248	2	True				
ANR	185267	CallExpression	"memset ( generator , 0 , sizeof ( zend_generator ) )"		185248	0					
ANR	185268	Callee	memset		185248	0					
ANR	185269	Identifier	memset		185248	0					
ANR	185270	ArgumentList	generator		185248	1					
ANR	185271	Argument	generator		185248	0					
ANR	185272	Identifier	generator		185248	0					
ANR	185273	Argument	0		185248	1					
ANR	185274	PrimaryExpression	0		185248	0					
ANR	185275	Argument	sizeof ( zend_generator )		185248	2					
ANR	185276	SizeofExpression	sizeof ( zend_generator )		185248	0					
ANR	185277	Sizeof	sizeof		185248	0					
ANR	185278	SizeofOperand	zend_generator		185248	1					
ANR	185279	ExpressionStatement	generator -> largest_used_integer_key = - 1	204:1:6776:6816	185248	3	True				
ANR	185280	AssignmentExpression	generator -> largest_used_integer_key = - 1		185248	0		=			
ANR	185281	PtrMemberAccess	generator -> largest_used_integer_key		185248	0					
ANR	185282	Identifier	generator		185248	0					
ANR	185283	Identifier	largest_used_integer_key		185248	1					
ANR	185284	UnaryOperationExpression	- 1		185248	1					
ANR	185285	UnaryOperator	-		185248	0					
ANR	185286	PrimaryExpression	1		185248	1					
ANR	185287	ExpressionStatement	ZVAL_UNDEF ( & generator -> retval )	206:1:6820:6850	185248	4	True				
ANR	185288	CallExpression	ZVAL_UNDEF ( & generator -> retval )		185248	0					
ANR	185289	Callee	ZVAL_UNDEF		185248	0					
ANR	185290	Identifier	ZVAL_UNDEF		185248	0					
ANR	185291	ArgumentList	& generator -> retval		185248	1					
ANR	185292	Argument	& generator -> retval		185248	0					
ANR	185293	UnaryOperationExpression	& generator -> retval		185248	0					
ANR	185294	UnaryOperator	&		185248	0					
ANR	185295	PtrMemberAccess	generator -> retval		185248	1					
ANR	185296	Identifier	generator		185248	0					
ANR	185297	Identifier	retval		185248	1					
ANR	185298	ExpressionStatement	ZVAL_UNDEF ( & generator -> values )	207:1:6853:6883	185248	5	True				
ANR	185299	CallExpression	ZVAL_UNDEF ( & generator -> values )		185248	0					
ANR	185300	Callee	ZVAL_UNDEF		185248	0					
ANR	185301	Identifier	ZVAL_UNDEF		185248	0					
ANR	185302	ArgumentList	& generator -> values		185248	1					
ANR	185303	Argument	& generator -> values		185248	0					
ANR	185304	UnaryOperationExpression	& generator -> values		185248	0					
ANR	185305	UnaryOperator	&		185248	0					
ANR	185306	PtrMemberAccess	generator -> values		185248	1					
ANR	185307	Identifier	generator		185248	0					
ANR	185308	Identifier	values		185248	1					
ANR	185309	ExpressionStatement	generator -> node . parent = NULL	210:1:6937:6966	185248	6	True				
ANR	185310	AssignmentExpression	generator -> node . parent = NULL		185248	0		=			
ANR	185311	MemberAccess	generator -> node . parent		185248	0					
ANR	185312	PtrMemberAccess	generator -> node		185248	0					
ANR	185313	Identifier	generator		185248	0					
ANR	185314	Identifier	node		185248	1					
ANR	185315	Identifier	parent		185248	1					
ANR	185316	Identifier	NULL		185248	1					
ANR	185317	ExpressionStatement	generator -> node . children = 0	211:1:6969:6997	185248	7	True				
ANR	185318	AssignmentExpression	generator -> node . children = 0		185248	0		=			
ANR	185319	MemberAccess	generator -> node . children		185248	0					
ANR	185320	PtrMemberAccess	generator -> node		185248	0					
ANR	185321	Identifier	generator		185248	0					
ANR	185322	Identifier	node		185248	1					
ANR	185323	Identifier	children		185248	1					
ANR	185324	PrimaryExpression	0		185248	1					
ANR	185325	ExpressionStatement	generator -> node . ptr . root = generator	212:1:7000:7036	185248	8	True				
ANR	185326	AssignmentExpression	generator -> node . ptr . root = generator		185248	0		=			
ANR	185327	MemberAccess	generator -> node . ptr . root		185248	0					
ANR	185328	MemberAccess	generator -> node . ptr		185248	0					
ANR	185329	PtrMemberAccess	generator -> node		185248	0					
ANR	185330	Identifier	generator		185248	0					
ANR	185331	Identifier	node		185248	1					
ANR	185332	Identifier	ptr		185248	1					
ANR	185333	Identifier	root		185248	1					
ANR	185334	Identifier	generator		185248	1					
ANR	185335	ExpressionStatement	"zend_object_std_init ( & generator -> std , class_type )"	214:1:7040:7089	185248	9	True				
ANR	185336	CallExpression	"zend_object_std_init ( & generator -> std , class_type )"		185248	0					
ANR	185337	Callee	zend_object_std_init		185248	0					
ANR	185338	Identifier	zend_object_std_init		185248	0					
ANR	185339	ArgumentList	& generator -> std		185248	1					
ANR	185340	Argument	& generator -> std		185248	0					
ANR	185341	UnaryOperationExpression	& generator -> std		185248	0					
ANR	185342	UnaryOperator	&		185248	0					
ANR	185343	PtrMemberAccess	generator -> std		185248	1					
ANR	185344	Identifier	generator		185248	0					
ANR	185345	Identifier	std		185248	1					
ANR	185346	Argument	class_type		185248	1					
ANR	185347	Identifier	class_type		185248	0					
ANR	185348	ExpressionStatement	generator -> std . handlers = & zend_generator_handlers	215:1:7092:7142	185248	10	True				
ANR	185349	AssignmentExpression	generator -> std . handlers = & zend_generator_handlers		185248	0		=			
ANR	185350	MemberAccess	generator -> std . handlers		185248	0					
ANR	185351	PtrMemberAccess	generator -> std		185248	0					
ANR	185352	Identifier	generator		185248	0					
ANR	185353	Identifier	std		185248	1					
ANR	185354	Identifier	handlers		185248	1					
ANR	185355	UnaryOperationExpression	& zend_generator_handlers		185248	1					
ANR	185356	UnaryOperator	&		185248	0					
ANR	185357	Identifier	zend_generator_handlers		185248	1					
ANR	185358	ReturnStatement	return ( zend_object * ) generator ;	217:1:7146:7176	185248	11	True				
ANR	185359	CastExpression	( zend_object * ) generator		185248	0					
ANR	185360	CastTarget	zend_object *		185248	0					
ANR	185361	Identifier	generator		185248	1					
ANR	185362	ReturnType	static zend_object *		185248	1					
ANR	185363	Identifier	zend_generator_create		185248	2					
ANR	185364	ParameterList	zend_class_entry * class_type		185248	3					
ANR	185365	Parameter	zend_class_entry * class_type	196:42:6541:6568	185248	0	True				
ANR	185366	ParameterType	zend_class_entry *		185248	0					
ANR	185367	Identifier	class_type		185248	1					
ANR	185368	CFGEntryNode	ENTRY		185248		True				
ANR	185369	CFGExitNode	EXIT		185248		True				
ANR	185370	Symbol	generator -> largest_used_integer_key		185248						
ANR	185371	Symbol	NULL		185248						
ANR	185372	Symbol	generator -> node . ptr . root		185248						
ANR	185373	Symbol	generator -> std		185248						
ANR	185374	Symbol	generator		185248						
ANR	185375	Symbol	generator -> node . children		185248						
ANR	185376	Symbol	& generator -> retval		185248						
ANR	185377	Symbol	generator -> node		185248						
ANR	185378	Symbol	& generator -> std		185248						
ANR	185379	Symbol	generator -> std . handlers		185248						
ANR	185380	Symbol	emalloc		185248						
ANR	185381	Symbol	class_type		185248						
ANR	185382	Symbol	* generator		185248						
ANR	185383	Symbol	generator -> node . ptr		185248						
ANR	185384	Symbol	& generator -> values		185248						
ANR	185385	Symbol	& zend_generator_handlers		185248						
ANR	185386	Symbol	generator -> node . parent		185248						
ANR	185387	Function	zend_generator_create_zval	222:0:7264:8553							
ANR	185388	FunctionDef	"zend_generator_create_zval (zend_execute_data * call , zend_op_array * op_array , zval * return_value)"		185387	0					
ANR	185389	CompoundStatement		223:0:7385:8553	185387	0					
ANR	185390	IdentifierDeclStatement	zend_generator * generator ;	224:1:7388:7413	185387	0	True				
ANR	185391	IdentifierDecl	* generator		185387	0					
ANR	185392	IdentifierDeclType	zend_generator *		185387	0					
ANR	185393	Identifier	generator		185387	1					
ANR	185394	IdentifierDeclStatement	zend_execute_data * current_execute_data ;	225:1:7416:7455	185387	1	True				
ANR	185395	IdentifierDecl	* current_execute_data		185387	0					
ANR	185396	IdentifierDeclType	zend_execute_data *		185387	0					
ANR	185397	Identifier	current_execute_data		185387	1					
ANR	185398	IdentifierDeclStatement	zend_execute_data * execute_data ;	226:1:7458:7489	185387	2	True				
ANR	185399	IdentifierDecl	* execute_data		185387	0					
ANR	185400	IdentifierDeclType	zend_execute_data *		185387	0					
ANR	185401	Identifier	execute_data		185387	1					
ANR	185402	IdentifierDeclStatement	zend_vm_stack current_stack = EG ( vm_stack ) ;	227:1:7492:7534	185387	3	True				
ANR	185403	IdentifierDecl	current_stack = EG ( vm_stack )		185387	0					
ANR	185404	IdentifierDeclType	zend_vm_stack		185387	0					
ANR	185405	Identifier	current_stack		185387	1					
ANR	185406	AssignmentExpression	current_stack = EG ( vm_stack )		185387	2		=			
ANR	185407	Identifier	current_stack		185387	0					
ANR	185408	CallExpression	EG ( vm_stack )		185387	1					
ANR	185409	Callee	EG		185387	0					
ANR	185410	Identifier	EG		185387	0					
ANR	185411	ArgumentList	vm_stack		185387	1					
ANR	185412	Argument	vm_stack		185387	0					
ANR	185413	Identifier	vm_stack		185387	0					
ANR	185414	ExpressionStatement	current_stack -> top = EG ( vm_stack_top )	229:1:7538:7575	185387	4	True				
ANR	185415	AssignmentExpression	current_stack -> top = EG ( vm_stack_top )		185387	0		=			
ANR	185416	PtrMemberAccess	current_stack -> top		185387	0					
ANR	185417	Identifier	current_stack		185387	0					
ANR	185418	Identifier	top		185387	1					
ANR	185419	CallExpression	EG ( vm_stack_top )		185387	1					
ANR	185420	Callee	EG		185387	0					
ANR	185421	Identifier	EG		185387	0					
ANR	185422	ArgumentList	vm_stack_top		185387	1					
ANR	185423	Argument	vm_stack_top		185387	0					
ANR	185424	Identifier	vm_stack_top		185387	0					
ANR	185425	ExpressionStatement	current_execute_data = EG ( current_execute_data )	232:1:7679:7726	185387	5	True				
ANR	185426	AssignmentExpression	current_execute_data = EG ( current_execute_data )		185387	0		=			
ANR	185427	Identifier	current_execute_data		185387	0					
ANR	185428	CallExpression	EG ( current_execute_data )		185387	1					
ANR	185429	Callee	EG		185387	0					
ANR	185430	Identifier	EG		185387	0					
ANR	185431	ArgumentList	current_execute_data		185387	1					
ANR	185432	Argument	current_execute_data		185387	0					
ANR	185433	Identifier	current_execute_data		185387	0					
ANR	185434	ExpressionStatement	"execute_data = zend_create_generator_execute_data ( call , op_array , return_value )"	233:1:7729:7808	185387	6	True				
ANR	185435	AssignmentExpression	"execute_data = zend_create_generator_execute_data ( call , op_array , return_value )"		185387	0		=			
ANR	185436	Identifier	execute_data		185387	0					
ANR	185437	CallExpression	"zend_create_generator_execute_data ( call , op_array , return_value )"		185387	1					
ANR	185438	Callee	zend_create_generator_execute_data		185387	0					
ANR	185439	Identifier	zend_create_generator_execute_data		185387	0					
ANR	185440	ArgumentList	call		185387	1					
ANR	185441	Argument	call		185387	0					
ANR	185442	Identifier	call		185387	0					
ANR	185443	Argument	op_array		185387	1					
ANR	185444	Identifier	op_array		185387	0					
ANR	185445	Argument	return_value		185387	2					
ANR	185446	Identifier	return_value		185387	0					
ANR	185447	ExpressionStatement	EG ( current_execute_data ) = current_execute_data	234:1:7811:7858	185387	7	True				
ANR	185448	AssignmentExpression	EG ( current_execute_data ) = current_execute_data		185387	0		=			
ANR	185449	CallExpression	EG ( current_execute_data )		185387	0					
ANR	185450	Callee	EG		185387	0					
ANR	185451	Identifier	EG		185387	0					
ANR	185452	ArgumentList	current_execute_data		185387	1					
ANR	185453	Argument	current_execute_data		185387	0					
ANR	185454	Identifier	current_execute_data		185387	0					
ANR	185455	Identifier	current_execute_data		185387	1					
ANR	185456	ExpressionStatement	"object_init_ex ( return_value , zend_ce_generator )"	236:1:7862:7909	185387	8	True				
ANR	185457	CallExpression	"object_init_ex ( return_value , zend_ce_generator )"		185387	0					
ANR	185458	Callee	object_init_ex		185387	0					
ANR	185459	Identifier	object_init_ex		185387	0					
ANR	185460	ArgumentList	return_value		185387	1					
ANR	185461	Argument	return_value		185387	0					
ANR	185462	Identifier	return_value		185387	0					
ANR	185463	Argument	zend_ce_generator		185387	1					
ANR	185464	Identifier	zend_ce_generator		185387	0					
ANR	185465	IfStatement	if ( Z_OBJ ( call -> This ) )		185387	9					
ANR	185466	Condition	Z_OBJ ( call -> This )	238:5:7917:7933	185387	0	True				
ANR	185467	CallExpression	Z_OBJ ( call -> This )		185387	0					
ANR	185468	Callee	Z_OBJ		185387	0					
ANR	185469	Identifier	Z_OBJ		185387	0					
ANR	185470	ArgumentList	call -> This		185387	1					
ANR	185471	Argument	call -> This		185387	0					
ANR	185472	PtrMemberAccess	call -> This		185387	0					
ANR	185473	Identifier	call		185387	0					
ANR	185474	Identifier	This		185387	1					
ANR	185475	CompoundStatement		16:24:550:550	185387	1					
ANR	185476	ExpressionStatement	Z_ADDREF ( call -> This )	239:2:7940:7960	185387	0	True				
ANR	185477	CallExpression	Z_ADDREF ( call -> This )		185387	0					
ANR	185478	Callee	Z_ADDREF		185387	0					
ANR	185479	Identifier	Z_ADDREF		185387	0					
ANR	185480	ArgumentList	call -> This		185387	1					
ANR	185481	Argument	call -> This		185387	0					
ANR	185482	PtrMemberAccess	call -> This		185387	0					
ANR	185483	Identifier	call		185387	0					
ANR	185484	Identifier	This		185387	1					
ANR	185485	ExpressionStatement	generator = ( zend_generator * ) Z_OBJ_P ( return_value )	243:1:8018:8070	185387	10	True				
ANR	185486	AssignmentExpression	generator = ( zend_generator * ) Z_OBJ_P ( return_value )		185387	0		=			
ANR	185487	Identifier	generator		185387	0					
ANR	185488	CastExpression	( zend_generator * ) Z_OBJ_P ( return_value )		185387	1					
ANR	185489	CastTarget	zend_generator *		185387	0					
ANR	185490	CallExpression	Z_OBJ_P ( return_value )		185387	1					
ANR	185491	Callee	Z_OBJ_P		185387	0					
ANR	185492	Identifier	Z_OBJ_P		185387	0					
ANR	185493	ArgumentList	return_value		185387	1					
ANR	185494	Argument	return_value		185387	0					
ANR	185495	Identifier	return_value		185387	0					
ANR	185496	ExpressionStatement	generator -> execute_data = execute_data	244:1:8073:8111	185387	11	True				
ANR	185497	AssignmentExpression	generator -> execute_data = execute_data		185387	0		=			
ANR	185498	PtrMemberAccess	generator -> execute_data		185387	0					
ANR	185499	Identifier	generator		185387	0					
ANR	185500	Identifier	execute_data		185387	1					
ANR	185501	Identifier	execute_data		185387	1					
ANR	185502	ExpressionStatement	generator -> stack = EG ( vm_stack )	245:1:8114:8145	185387	12	True				
ANR	185503	AssignmentExpression	generator -> stack = EG ( vm_stack )		185387	0		=			
ANR	185504	PtrMemberAccess	generator -> stack		185387	0					
ANR	185505	Identifier	generator		185387	0					
ANR	185506	Identifier	stack		185387	1					
ANR	185507	CallExpression	EG ( vm_stack )		185387	1					
ANR	185508	Callee	EG		185387	0					
ANR	185509	Identifier	EG		185387	0					
ANR	185510	ArgumentList	vm_stack		185387	1					
ANR	185511	Argument	vm_stack		185387	0					
ANR	185512	Identifier	vm_stack		185387	0					
ANR	185513	ExpressionStatement	generator -> stack -> top = EG ( vm_stack_top )	246:1:8148:8188	185387	13	True				
ANR	185514	AssignmentExpression	generator -> stack -> top = EG ( vm_stack_top )		185387	0		=			
ANR	185515	PtrMemberAccess	generator -> stack -> top		185387	0					
ANR	185516	PtrMemberAccess	generator -> stack		185387	0					
ANR	185517	Identifier	generator		185387	0					
ANR	185518	Identifier	stack		185387	1					
ANR	185519	Identifier	top		185387	1					
ANR	185520	CallExpression	EG ( vm_stack_top )		185387	1					
ANR	185521	Callee	EG		185387	0					
ANR	185522	Identifier	EG		185387	0					
ANR	185523	ArgumentList	vm_stack_top		185387	1					
ANR	185524	Argument	vm_stack_top		185387	0					
ANR	185525	Identifier	vm_stack_top		185387	0					
ANR	185526	ExpressionStatement	EG ( vm_stack_top ) = current_stack -> top	247:1:8191:8228	185387	14	True				
ANR	185527	AssignmentExpression	EG ( vm_stack_top ) = current_stack -> top		185387	0		=			
ANR	185528	CallExpression	EG ( vm_stack_top )		185387	0					
ANR	185529	Callee	EG		185387	0					
ANR	185530	Identifier	EG		185387	0					
ANR	185531	ArgumentList	vm_stack_top		185387	1					
ANR	185532	Argument	vm_stack_top		185387	0					
ANR	185533	Identifier	vm_stack_top		185387	0					
ANR	185534	PtrMemberAccess	current_stack -> top		185387	1					
ANR	185535	Identifier	current_stack		185387	0					
ANR	185536	Identifier	top		185387	1					
ANR	185537	ExpressionStatement	EG ( vm_stack_end ) = current_stack -> end	248:1:8231:8268	185387	15	True				
ANR	185538	AssignmentExpression	EG ( vm_stack_end ) = current_stack -> end		185387	0		=			
ANR	185539	CallExpression	EG ( vm_stack_end )		185387	0					
ANR	185540	Callee	EG		185387	0					
ANR	185541	Identifier	EG		185387	0					
ANR	185542	ArgumentList	vm_stack_end		185387	1					
ANR	185543	Argument	vm_stack_end		185387	0					
ANR	185544	Identifier	vm_stack_end		185387	0					
ANR	185545	PtrMemberAccess	current_stack -> end		185387	1					
ANR	185546	Identifier	current_stack		185387	0					
ANR	185547	Identifier	end		185387	1					
ANR	185548	ExpressionStatement	EG ( vm_stack ) = current_stack	249:1:8271:8299	185387	16	True				
ANR	185549	AssignmentExpression	EG ( vm_stack ) = current_stack		185387	0		=			
ANR	185550	CallExpression	EG ( vm_stack )		185387	0					
ANR	185551	Callee	EG		185387	0					
ANR	185552	Identifier	EG		185387	0					
ANR	185553	ArgumentList	vm_stack		185387	1					
ANR	185554	Argument	vm_stack		185387	0					
ANR	185555	Identifier	vm_stack		185387	0					
ANR	185556	Identifier	current_stack		185387	1					
ANR	185557	ExpressionStatement	execute_data -> return_value = ( zval * ) generator	252:1:8374:8419	185387	17	True				
ANR	185558	AssignmentExpression	execute_data -> return_value = ( zval * ) generator		185387	0		=			
ANR	185559	PtrMemberAccess	execute_data -> return_value		185387	0					
ANR	185560	Identifier	execute_data		185387	0					
ANR	185561	Identifier	return_value		185387	1					
ANR	185562	CastExpression	( zval * ) generator		185387	1					
ANR	185563	CastTarget	zval *		185387	0					
ANR	185564	Identifier	generator		185387	1					
ANR	185565	ExpressionStatement	"memset ( & generator -> execute_fake , 0 , sizeof ( zend_execute_data ) )"	254:1:8423:8485	185387	18	True				
ANR	185566	CallExpression	"memset ( & generator -> execute_fake , 0 , sizeof ( zend_execute_data ) )"		185387	0					
ANR	185567	Callee	memset		185387	0					
ANR	185568	Identifier	memset		185387	0					
ANR	185569	ArgumentList	& generator -> execute_fake		185387	1					
ANR	185570	Argument	& generator -> execute_fake		185387	0					
ANR	185571	UnaryOperationExpression	& generator -> execute_fake		185387	0					
ANR	185572	UnaryOperator	&		185387	0					
ANR	185573	PtrMemberAccess	generator -> execute_fake		185387	1					
ANR	185574	Identifier	generator		185387	0					
ANR	185575	Identifier	execute_fake		185387	1					
ANR	185576	Argument	0		185387	1					
ANR	185577	PrimaryExpression	0		185387	0					
ANR	185578	Argument	sizeof ( zend_execute_data )		185387	2					
ANR	185579	SizeofExpression	sizeof ( zend_execute_data )		185387	0					
ANR	185580	Sizeof	sizeof		185387	0					
ANR	185581	SizeofOperand	zend_execute_data		185387	1					
ANR	185582	ExpressionStatement	Z_OBJ ( generator -> execute_fake . This ) = ( zend_object * ) generator	255:1:8488:8551	185387	19	True				
ANR	185583	AssignmentExpression	Z_OBJ ( generator -> execute_fake . This ) = ( zend_object * ) generator		185387	0		=			
ANR	185584	CallExpression	Z_OBJ ( generator -> execute_fake . This )		185387	0					
ANR	185585	Callee	Z_OBJ		185387	0					
ANR	185586	Identifier	Z_OBJ		185387	0					
ANR	185587	ArgumentList	generator -> execute_fake . This		185387	1					
ANR	185588	Argument	generator -> execute_fake . This		185387	0					
ANR	185589	MemberAccess	generator -> execute_fake . This		185387	0					
ANR	185590	PtrMemberAccess	generator -> execute_fake		185387	0					
ANR	185591	Identifier	generator		185387	0					
ANR	185592	Identifier	execute_fake		185387	1					
ANR	185593	Identifier	This		185387	1					
ANR	185594	CastExpression	( zend_object * ) generator		185387	1					
ANR	185595	CastTarget	zend_object *		185387	0					
ANR	185596	Identifier	generator		185387	1					
ANR	185597	ReturnType	ZEND_API void		185387	1					
ANR	185598	Identifier	zend_generator_create_zval		185387	2					
ANR	185599	ParameterList	"zend_execute_data * call , zend_op_array * op_array , zval * return_value"		185387	3					
ANR	185600	Parameter	zend_execute_data * call	222:41:7305:7327	185387	0	True				
ANR	185601	ParameterType	zend_execute_data *		185387	0					
ANR	185602	Identifier	call		185387	1					
ANR	185603	Parameter	zend_op_array * op_array	222:66:7330:7352	185387	1	True				
ANR	185604	ParameterType	zend_op_array *		185387	0					
ANR	185605	Identifier	op_array		185387	1					
ANR	185606	Parameter	zval * return_value	222:91:7355:7372	185387	2	True				
ANR	185607	ParameterType	zval *		185387	0					
ANR	185608	Identifier	return_value		185387	1					
ANR	185609	CFGEntryNode	ENTRY		185387		True				
ANR	185610	CFGExitNode	EXIT		185387		True				
ANR	185611	Symbol	call -> This		185387						
ANR	185612	Symbol	return_value		185387						
ANR	185613	Symbol	generator -> stack		185387						
ANR	185614	Symbol	Z_OBJ_P		185387						
ANR	185615	Symbol	current_execute_data		185387						
ANR	185616	Symbol	zend_ce_generator		185387						
ANR	185617	Symbol	* call		185387						
ANR	185618	Symbol	generator		185387						
ANR	185619	Symbol	execute_data		185387						
ANR	185620	Symbol	vm_stack_top		185387						
ANR	185621	Symbol	generator -> execute_fake . This		185387						
ANR	185622	Symbol	Z_OBJ		185387						
ANR	185623	Symbol	* generator		185387						
ANR	185624	Symbol	* current_stack		185387						
ANR	185625	Symbol	* execute_data		185387						
ANR	185626	Symbol	execute_data -> return_value		185387						
ANR	185627	Symbol	vm_stack_end		185387						
ANR	185628	Symbol	& generator -> execute_fake		185387						
ANR	185629	Symbol	current_stack		185387						
ANR	185630	Symbol	current_stack -> top		185387						
ANR	185631	Symbol	EG		185387						
ANR	185632	Symbol	* generator -> stack		185387						
ANR	185633	Symbol	* * generator		185387						
ANR	185634	Symbol	generator -> execute_fake		185387						
ANR	185635	Symbol	zend_create_generator_execute_data		185387						
ANR	185636	Symbol	generator -> stack -> top		185387						
ANR	185637	Symbol	current_stack -> end		185387						
ANR	185638	Symbol	call		185387						
ANR	185639	Symbol	generator -> execute_data		185387						
ANR	185640	Symbol	vm_stack		185387						
ANR	185641	Symbol	op_array		185387						
ANR	185642	Function	zend_generator_get_constructor	259:0:8566:8794							
ANR	185643	FunctionDef	zend_generator_get_constructor (zend_object * object)		185642	0					
ANR	185644	CompoundStatement		260:0:8660:8794	185642	0					
ANR	185645	ExpressionStatement	"zend_throw_error ( NULL , ""The \\""Generator\\"" class is reserved for internal use and cannot be manually instantiated"" )"	261:1:8663:8777	185642	0	True				
ANR	185646	CallExpression	"zend_throw_error ( NULL , ""The \\""Generator\\"" class is reserved for internal use and cannot be manually instantiated"" )"		185642	0					
ANR	185647	Callee	zend_throw_error		185642	0					
ANR	185648	Identifier	zend_throw_error		185642	0					
ANR	185649	ArgumentList	NULL		185642	1					
ANR	185650	Argument	NULL		185642	0					
ANR	185651	Identifier	NULL		185642	0					
ANR	185652	Argument	"""The \\""Generator\\"" class is reserved for internal use and cannot be manually instantiated"""		185642	1					
ANR	185653	PrimaryExpression	"""The \\""Generator\\"" class is reserved for internal use and cannot be manually instantiated"""		185642	0					
ANR	185654	ReturnStatement	return NULL ;	263:1:8781:8792	185642	1	True				
ANR	185655	Identifier	NULL		185642	0					
ANR	185656	ReturnType	static ZEND_COLD zend_function *		185642	1					
ANR	185657	Identifier	zend_generator_get_constructor		185642	2					
ANR	185658	ParameterList	zend_object * object		185642	3					
ANR	185659	Parameter	zend_object * object	259:63:8629:8647	185642	0	True				
ANR	185660	ParameterType	zend_object *		185642	0					
ANR	185661	Identifier	object		185642	1					
ANR	185662	CFGEntryNode	ENTRY		185642		True				
ANR	185663	CFGExitNode	EXIT		185642		True				
ANR	185664	Symbol	NULL		185642						
ANR	185665	Symbol	object		185642						
ANR	185666	Function	zend_generator_check_placeholder_frame	267:0:8807:9564							
ANR	185667	FunctionDef	zend_generator_check_placeholder_frame (zend_execute_data * ptr)		185666	0					
ANR	185668	CompoundStatement		268:0:8898:9564	185666	0					
ANR	185669	IfStatement	if ( ! ptr -> func && Z_OBJ ( ptr -> This ) )		185666	0					
ANR	185670	Condition	! ptr -> func && Z_OBJ ( ptr -> This )	269:5:8905:8934	185666	0	True				
ANR	185671	AndExpression	! ptr -> func && Z_OBJ ( ptr -> This )		185666	0		&&			
ANR	185672	UnaryOperationExpression	! ptr -> func		185666	0					
ANR	185673	UnaryOperator	!		185666	0					
ANR	185674	PtrMemberAccess	ptr -> func		185666	1					
ANR	185675	Identifier	ptr		185666	0					
ANR	185676	Identifier	func		185666	1					
ANR	185677	CallExpression	Z_OBJ ( ptr -> This )		185666	1					
ANR	185678	Callee	Z_OBJ		185666	0					
ANR	185679	Identifier	Z_OBJ		185666	0					
ANR	185680	ArgumentList	ptr -> This		185666	1					
ANR	185681	Argument	ptr -> This		185666	0					
ANR	185682	PtrMemberAccess	ptr -> This		185666	0					
ANR	185683	Identifier	ptr		185666	0					
ANR	185684	Identifier	This		185666	1					
ANR	185685	CompoundStatement		2:37:38:38	185666	1					
ANR	185686	IfStatement	if ( Z_OBJCE ( ptr -> This ) == zend_ce_generator )		185666	0					
ANR	185687	Condition	Z_OBJCE ( ptr -> This ) == zend_ce_generator	270:6:8945:8983	185666	0	True				
ANR	185688	EqualityExpression	Z_OBJCE ( ptr -> This ) == zend_ce_generator		185666	0		==			
ANR	185689	CallExpression	Z_OBJCE ( ptr -> This )		185666	0					
ANR	185690	Callee	Z_OBJCE		185666	0					
ANR	185691	Identifier	Z_OBJCE		185666	0					
ANR	185692	ArgumentList	ptr -> This		185666	1					
ANR	185693	Argument	ptr -> This		185666	0					
ANR	185694	PtrMemberAccess	ptr -> This		185666	0					
ANR	185695	Identifier	ptr		185666	0					
ANR	185696	Identifier	This		185666	1					
ANR	185697	Identifier	zend_ce_generator		185666	1					
ANR	185698	CompoundStatement		6:3:272:320	185666	1					
ANR	185699	IdentifierDeclStatement	zend_generator * generator = ( zend_generator * ) Z_OBJ ( ptr -> This ) ;	271:3:8991:9054	185666	0	True				
ANR	185700	IdentifierDecl	* generator = ( zend_generator * ) Z_OBJ ( ptr -> This )		185666	0					
ANR	185701	IdentifierDeclType	zend_generator *		185666	0					
ANR	185702	Identifier	generator		185666	1					
ANR	185703	AssignmentExpression	* generator = ( zend_generator * ) Z_OBJ ( ptr -> This )		185666	2		=			
ANR	185704	Identifier	generator		185666	0					
ANR	185705	CastExpression	( zend_generator * ) Z_OBJ ( ptr -> This )		185666	1					
ANR	185706	CastTarget	zend_generator *		185666	0					
ANR	185707	CallExpression	Z_OBJ ( ptr -> This )		185666	1					
ANR	185708	Callee	Z_OBJ		185666	0					
ANR	185709	Identifier	Z_OBJ		185666	0					
ANR	185710	ArgumentList	ptr -> This		185666	1					
ANR	185711	Argument	ptr -> This		185666	0					
ANR	185712	PtrMemberAccess	ptr -> This		185666	0					
ANR	185713	Identifier	ptr		185666	0					
ANR	185714	Identifier	This		185666	1					
ANR	185715	IdentifierDeclStatement	zend_generator * root = ( generator -> node . children < 1 ? generator : generator -> node . ptr . leaf ) -> node . ptr . root ;	272:3:9059:9166	185666	1	True				
ANR	185716	IdentifierDecl	* root = ( generator -> node . children < 1 ? generator : generator -> node . ptr . leaf ) -> node . ptr . root		185666	0					
ANR	185717	IdentifierDeclType	zend_generator *		185666	0					
ANR	185718	Identifier	root		185666	1					
ANR	185719	AssignmentExpression	* root = ( generator -> node . children < 1 ? generator : generator -> node . ptr . leaf ) -> node . ptr . root		185666	2		=			
ANR	185720	Identifier	root		185666	0					
ANR	185721	MemberAccess	( generator -> node . children < 1 ? generator : generator -> node . ptr . leaf ) -> node . ptr . root		185666	1					
ANR	185722	MemberAccess	( generator -> node . children < 1 ? generator : generator -> node . ptr . leaf ) -> node . ptr		185666	0					
ANR	185723	PtrMemberAccess	( generator -> node . children < 1 ? generator : generator -> node . ptr . leaf ) -> node		185666	0					
ANR	185724	ConditionalExpression	generator -> node . children < 1 ? generator : generator -> node . ptr . leaf		185666	0					
ANR	185725	Condition	generator -> node . children < 1		185666	0					
ANR	185726	RelationalExpression	generator -> node . children < 1		185666	0		<			
ANR	185727	MemberAccess	generator -> node . children		185666	0					
ANR	185728	PtrMemberAccess	generator -> node		185666	0					
ANR	185729	Identifier	generator		185666	0					
ANR	185730	Identifier	node		185666	1					
ANR	185731	Identifier	children		185666	1					
ANR	185732	PrimaryExpression	1		185666	1					
ANR	185733	Identifier	generator		185666	1					
ANR	185734	MemberAccess	generator -> node . ptr . leaf		185666	2					
ANR	185735	MemberAccess	generator -> node . ptr		185666	0					
ANR	185736	PtrMemberAccess	generator -> node		185666	0					
ANR	185737	Identifier	generator		185666	0					
ANR	185738	Identifier	node		185666	1					
ANR	185739	Identifier	ptr		185666	1					
ANR	185740	Identifier	leaf		185666	1					
ANR	185741	Identifier	node		185666	1					
ANR	185742	Identifier	ptr		185666	1					
ANR	185743	Identifier	root		185666	1					
ANR	185744	IdentifierDeclStatement	zend_execute_data * prev = ptr -> prev_execute_data ;	273:3:9171:9219	185666	2	True				
ANR	185745	IdentifierDecl	* prev = ptr -> prev_execute_data		185666	0					
ANR	185746	IdentifierDeclType	zend_execute_data *		185666	0					
ANR	185747	Identifier	prev		185666	1					
ANR	185748	AssignmentExpression	* prev = ptr -> prev_execute_data		185666	2		=			
ANR	185749	Identifier	prev		185666	0					
ANR	185750	PtrMemberAccess	ptr -> prev_execute_data		185666	1					
ANR	185751	Identifier	ptr		185666	0					
ANR	185752	Identifier	prev_execute_data		185666	1					
ANR	185753	IfStatement	if ( generator -> node . parent != root )		185666	3					
ANR	185754	Condition	generator -> node . parent != root	274:7:9228:9257	185666	0	True				
ANR	185755	EqualityExpression	generator -> node . parent != root		185666	0		!=			
ANR	185756	MemberAccess	generator -> node . parent		185666	0					
ANR	185757	PtrMemberAccess	generator -> node		185666	0					
ANR	185758	Identifier	generator		185666	0					
ANR	185759	Identifier	node		185666	1					
ANR	185760	Identifier	parent		185666	1					
ANR	185761	Identifier	root		185666	1					
ANR	185762	CompoundStatement		7:39:361:361	185666	1					
ANR	185763	DoStatement	do		185666	0					
ANR	185764	CompoundStatement		8:7:370:370	185666	0					
ANR	185765	ExpressionStatement	generator -> execute_data -> prev_execute_data = prev	276:5:9276:9325	185666	0	True				
ANR	185766	AssignmentExpression	generator -> execute_data -> prev_execute_data = prev		185666	0		=			
ANR	185767	PtrMemberAccess	generator -> execute_data -> prev_execute_data		185666	0					
ANR	185768	PtrMemberAccess	generator -> execute_data		185666	0					
ANR	185769	Identifier	generator		185666	0					
ANR	185770	Identifier	execute_data		185666	1					
ANR	185771	Identifier	prev_execute_data		185666	1					
ANR	185772	Identifier	prev		185666	1					
ANR	185773	ExpressionStatement	prev = generator -> execute_data	277:5:9332:9362	185666	1	True				
ANR	185774	AssignmentExpression	prev = generator -> execute_data		185666	0		=			
ANR	185775	Identifier	prev		185666	0					
ANR	185776	PtrMemberAccess	generator -> execute_data		185666	1					
ANR	185777	Identifier	generator		185666	0					
ANR	185778	Identifier	execute_data		185666	1					
ANR	185779	ExpressionStatement	generator = generator -> node . parent	278:5:9369:9403	185666	2	True				
ANR	185780	AssignmentExpression	generator = generator -> node . parent		185666	0		=			
ANR	185781	Identifier	generator		185666	0					
ANR	185782	MemberAccess	generator -> node . parent		185666	1					
ANR	185783	PtrMemberAccess	generator -> node		185666	0					
ANR	185784	Identifier	generator		185666	0					
ANR	185785	Identifier	node		185666	1					
ANR	185786	Identifier	parent		185666	1					
ANR	185787	Condition	generator -> node . parent != root	279:13:9418:9447	185666	1	True				
ANR	185788	EqualityExpression	generator -> node . parent != root		185666	0		!=			
ANR	185789	MemberAccess	generator -> node . parent		185666	0					
ANR	185790	PtrMemberAccess	generator -> node		185666	0					
ANR	185791	Identifier	generator		185666	0					
ANR	185792	Identifier	node		185666	1					
ANR	185793	Identifier	parent		185666	1					
ANR	185794	Identifier	root		185666	1					
ANR	185795	ExpressionStatement	generator -> execute_data -> prev_execute_data = prev	281:3:9459:9508	185666	4	True				
ANR	185796	AssignmentExpression	generator -> execute_data -> prev_execute_data = prev		185666	0		=			
ANR	185797	PtrMemberAccess	generator -> execute_data -> prev_execute_data		185666	0					
ANR	185798	PtrMemberAccess	generator -> execute_data		185666	0					
ANR	185799	Identifier	generator		185666	0					
ANR	185800	Identifier	execute_data		185666	1					
ANR	185801	Identifier	prev_execute_data		185666	1					
ANR	185802	Identifier	prev		185666	1					
ANR	185803	ExpressionStatement	ptr = generator -> execute_data	282:3:9513:9542	185666	5	True				
ANR	185804	AssignmentExpression	ptr = generator -> execute_data		185666	0		=			
ANR	185805	Identifier	ptr		185666	0					
ANR	185806	PtrMemberAccess	generator -> execute_data		185666	1					
ANR	185807	Identifier	generator		185666	0					
ANR	185808	Identifier	execute_data		185666	1					
ANR	185809	ReturnStatement	return ptr ;	285:1:9552:9562	185666	1	True				
ANR	185810	Identifier	ptr		185666	0					
ANR	185811	ReturnType	ZEND_API zend_execute_data *		185666	1					
ANR	185812	Identifier	zend_generator_check_placeholder_frame		185666	2					
ANR	185813	ParameterList	zend_execute_data * ptr		185666	3					
ANR	185814	Parameter	zend_execute_data * ptr	267:67:8874:8895	185666	0	True				
ANR	185815	ParameterType	zend_execute_data *		185666	0					
ANR	185816	Identifier	ptr		185666	1					
ANR	185817	CFGEntryNode	ENTRY		185666		True				
ANR	185818	CFGExitNode	EXIT		185666		True				
ANR	185819	Symbol	( generator -> node . children < 1 ? generator : generator -> node . ptr . leaf ) -> node . ptr		185666						
ANR	185820	Symbol	zend_ce_generator		185666						
ANR	185821	Symbol	prev		185666						
ANR	185822	Symbol	generator		185666						
ANR	185823	Symbol	generator -> node . children		185666						
ANR	185824	Symbol	( generator -> node . children < 1 ? generator : generator -> node . ptr . leaf ) -> node		185666						
ANR	185825	Symbol	ptr -> func		185666						
ANR	185826	Symbol	Z_OBJCE		185666						
ANR	185827	Symbol	Z_OBJ		185666						
ANR	185828	Symbol	* generator		185666						
ANR	185829	Symbol	* generator -> node . children		185666						
ANR	185830	Symbol	generator -> node . ptr		185666						
ANR	185831	Symbol	* generator -> node		185666						
ANR	185832	Symbol	root		185666						
ANR	185833	Symbol	* ptr		185666						
ANR	185834	Symbol	* * generator		185666						
ANR	185835	Symbol	generator -> node		185666						
ANR	185836	Symbol	ptr		185666						
ANR	185837	Symbol	generator -> execute_data		185666						
ANR	185838	Symbol	ptr -> prev_execute_data		185666						
ANR	185839	Symbol	* generator -> node . ptr . leaf		185666						
ANR	185840	Symbol	generator -> execute_data -> prev_execute_data		185666						
ANR	185841	Symbol	generator -> node . parent		185666						
ANR	185842	Symbol	* generator -> node . ptr		185666						
ANR	185843	Symbol	( generator -> node . children < 1 ? generator : generator -> node . ptr . leaf ) -> node . ptr . root		185666						
ANR	185844	Symbol	generator -> node . ptr . leaf		185666						
ANR	185845	Symbol	* generator -> execute_data		185666						
ANR	185846	Symbol	ptr -> This		185666						
ANR	185847	Function	zend_generator_throw_exception	288:0:9567:10432							
ANR	185848	FunctionDef	"zend_generator_throw_exception (zend_generator * generator , zval * exception)"		185847	0					
ANR	185849	CompoundStatement		289:0:9654:10432	185847	0					
ANR	185850	IfStatement	if ( UNEXPECTED ( Z_TYPE ( generator -> values ) != IS_UNDEF ) )		185847	0					
ANR	185851	Condition	UNEXPECTED ( Z_TYPE ( generator -> values ) != IS_UNDEF )	291:5:9799:9847	185847	0	True				
ANR	185852	CallExpression	UNEXPECTED ( Z_TYPE ( generator -> values ) != IS_UNDEF )		185847	0					
ANR	185853	Callee	UNEXPECTED		185847	0					
ANR	185854	Identifier	UNEXPECTED		185847	0					
ANR	185855	ArgumentList	Z_TYPE ( generator -> values ) != IS_UNDEF		185847	1					
ANR	185856	Argument	Z_TYPE ( generator -> values ) != IS_UNDEF		185847	0					
ANR	185857	EqualityExpression	Z_TYPE ( generator -> values ) != IS_UNDEF		185847	0		!=			
ANR	185858	CallExpression	Z_TYPE ( generator -> values )		185847	0					
ANR	185859	Callee	Z_TYPE		185847	0					
ANR	185860	Identifier	Z_TYPE		185847	0					
ANR	185861	ArgumentList	generator -> values		185847	1					
ANR	185862	Argument	generator -> values		185847	0					
ANR	185863	PtrMemberAccess	generator -> values		185847	0					
ANR	185864	Identifier	generator		185847	0					
ANR	185865	Identifier	values		185847	1					
ANR	185866	Identifier	IS_UNDEF		185847	1					
ANR	185867	CompoundStatement		3:56:195:195	185847	1					
ANR	185868	ExpressionStatement	zval_ptr_dtor ( & generator -> values )	292:2:9854:9887	185847	0	True				
ANR	185869	CallExpression	zval_ptr_dtor ( & generator -> values )		185847	0					
ANR	185870	Callee	zval_ptr_dtor		185847	0					
ANR	185871	Identifier	zval_ptr_dtor		185847	0					
ANR	185872	ArgumentList	& generator -> values		185847	1					
ANR	185873	Argument	& generator -> values		185847	0					
ANR	185874	UnaryOperationExpression	& generator -> values		185847	0					
ANR	185875	UnaryOperator	&		185847	0					
ANR	185876	PtrMemberAccess	generator -> values		185847	1					
ANR	185877	Identifier	generator		185847	0					
ANR	185878	Identifier	values		185847	1					
ANR	185879	ExpressionStatement	ZVAL_UNDEF ( & generator -> values )	293:2:9891:9921	185847	1	True				
ANR	185880	CallExpression	ZVAL_UNDEF ( & generator -> values )		185847	0					
ANR	185881	Callee	ZVAL_UNDEF		185847	0					
ANR	185882	Identifier	ZVAL_UNDEF		185847	0					
ANR	185883	ArgumentList	& generator -> values		185847	1					
ANR	185884	Argument	& generator -> values		185847	0					
ANR	185885	UnaryOperationExpression	& generator -> values		185847	0					
ANR	185886	UnaryOperator	&		185847	0					
ANR	185887	PtrMemberAccess	generator -> values		185847	1					
ANR	185888	Identifier	generator		185847	0					
ANR	185889	Identifier	values		185847	1					
ANR	185890	IdentifierDeclStatement	zend_execute_data * original_execute_data = EG ( current_execute_data ) ;	298:1:10075:10142	185847	1	True				
ANR	185891	IdentifierDecl	* original_execute_data = EG ( current_execute_data )		185847	0					
ANR	185892	IdentifierDeclType	zend_execute_data *		185847	0					
ANR	185893	Identifier	original_execute_data		185847	1					
ANR	185894	AssignmentExpression	* original_execute_data = EG ( current_execute_data )		185847	2		=			
ANR	185895	Identifier	original_execute_data		185847	0					
ANR	185896	CallExpression	EG ( current_execute_data )		185847	1					
ANR	185897	Callee	EG		185847	0					
ANR	185898	Identifier	EG		185847	0					
ANR	185899	ArgumentList	current_execute_data		185847	1					
ANR	185900	Argument	current_execute_data		185847	0					
ANR	185901	Identifier	current_execute_data		185847	0					
ANR	185902	ExpressionStatement	EG ( current_execute_data ) = generator -> execute_data	299:1:10145:10195	185847	2	True				
ANR	185903	AssignmentExpression	EG ( current_execute_data ) = generator -> execute_data		185847	0		=			
ANR	185904	CallExpression	EG ( current_execute_data )		185847	0					
ANR	185905	Callee	EG		185847	0					
ANR	185906	Identifier	EG		185847	0					
ANR	185907	ArgumentList	current_execute_data		185847	1					
ANR	185908	Argument	current_execute_data		185847	0					
ANR	185909	Identifier	current_execute_data		185847	0					
ANR	185910	PtrMemberAccess	generator -> execute_data		185847	1					
ANR	185911	Identifier	generator		185847	0					
ANR	185912	Identifier	execute_data		185847	1					
ANR	185913	ExpressionStatement	generator -> execute_data -> opline --	300:1:10198:10231	185847	3	True				
ANR	185914	PostIncDecOperationExpression	generator -> execute_data -> opline --		185847	0					
ANR	185915	PtrMemberAccess	generator -> execute_data -> opline		185847	0					
ANR	185916	PtrMemberAccess	generator -> execute_data		185847	0					
ANR	185917	Identifier	generator		185847	0					
ANR	185918	Identifier	execute_data		185847	1					
ANR	185919	Identifier	opline		185847	1					
ANR	185920	IncDec	--		185847	1					
ANR	185921	IfStatement	if ( exception )		185847	4					
ANR	185922	Condition	exception	301:5:10238:10246	185847	0	True				
ANR	185923	Identifier	exception		185847	0					
ANR	185924	CompoundStatement		13:16:594:594	185847	1					
ANR	185925	ExpressionStatement	zend_throw_exception_object ( exception )	302:2:10253:10291	185847	0	True				
ANR	185926	CallExpression	zend_throw_exception_object ( exception )		185847	0					
ANR	185927	Callee	zend_throw_exception_object		185847	0					
ANR	185928	Identifier	zend_throw_exception_object		185847	0					
ANR	185929	ArgumentList	exception		185847	1					
ANR	185930	Argument	exception		185847	0					
ANR	185931	Identifier	exception		185847	0					
ANR	185932	ElseStatement	else		185847	0					
ANR	185933	CompoundStatement		15:8:646:646	185847	0					
ANR	185934	ExpressionStatement	zend_throw_exception_internal ( NULL )	304:2:10305:10340	185847	0	True				
ANR	185935	CallExpression	zend_throw_exception_internal ( NULL )		185847	0					
ANR	185936	Callee	zend_throw_exception_internal		185847	0					
ANR	185937	Identifier	zend_throw_exception_internal		185847	0					
ANR	185938	ArgumentList	NULL		185847	1					
ANR	185939	Argument	NULL		185847	0					
ANR	185940	Identifier	NULL		185847	0					
ANR	185941	ExpressionStatement	generator -> execute_data -> opline ++	306:1:10346:10379	185847	5	True				
ANR	185942	PostIncDecOperationExpression	generator -> execute_data -> opline ++		185847	0					
ANR	185943	PtrMemberAccess	generator -> execute_data -> opline		185847	0					
ANR	185944	PtrMemberAccess	generator -> execute_data		185847	0					
ANR	185945	Identifier	generator		185847	0					
ANR	185946	Identifier	execute_data		185847	1					
ANR	185947	Identifier	opline		185847	1					
ANR	185948	IncDec	++		185847	1					
ANR	185949	ExpressionStatement	EG ( current_execute_data ) = original_execute_data	307:1:10382:10430	185847	6	True				
ANR	185950	AssignmentExpression	EG ( current_execute_data ) = original_execute_data		185847	0		=			
ANR	185951	CallExpression	EG ( current_execute_data )		185847	0					
ANR	185952	Callee	EG		185847	0					
ANR	185953	Identifier	EG		185847	0					
ANR	185954	ArgumentList	current_execute_data		185847	1					
ANR	185955	Argument	current_execute_data		185847	0					
ANR	185956	Identifier	current_execute_data		185847	0					
ANR	185957	Identifier	original_execute_data		185847	1					
ANR	185958	ReturnType	static void		185847	1					
ANR	185959	Identifier	zend_generator_throw_exception		185847	2					
ANR	185960	ParameterList	"zend_generator * generator , zval * exception"		185847	3					
ANR	185961	Parameter	zend_generator * generator	288:43:9610:9634	185847	0	True				
ANR	185962	ParameterType	zend_generator *		185847	0					
ANR	185963	Identifier	generator		185847	1					
ANR	185964	Parameter	zval * exception	288:70:9637:9651	185847	1	True				
ANR	185965	ParameterType	zval *		185847	0					
ANR	185966	Identifier	exception		185847	1					
ANR	185967	CFGEntryNode	ENTRY		185847		True				
ANR	185968	CFGExitNode	EXIT		185847		True				
ANR	185969	Symbol	exception		185847						
ANR	185970	Symbol	EG		185847						
ANR	185971	Symbol	NULL		185847						
ANR	185972	Symbol	* * generator		185847						
ANR	185973	Symbol	current_execute_data		185847						
ANR	185974	Symbol	generator -> values		185847						
ANR	185975	Symbol	generator		185847						
ANR	185976	Symbol	Z_TYPE		185847						
ANR	185977	Symbol	UNEXPECTED		185847						
ANR	185978	Symbol	generator -> execute_data		185847						
ANR	185979	Symbol	* generator		185847						
ANR	185980	Symbol	& generator -> values		185847						
ANR	185981	Symbol	original_execute_data		185847						
ANR	185982	Symbol	generator -> execute_data -> opline		185847						
ANR	185983	Symbol	IS_UNDEF		185847						
ANR	185984	Symbol	* generator -> execute_data		185847						
ANR	185985	Function	zend_generator_get_child	310:0:10435:11025							
ANR	185986	FunctionDef	"zend_generator_get_child (zend_generator_node * node , zend_generator * leaf)"		185985	0					
ANR	185987	CompoundStatement		311:0:10532:11025	185985	0					
ANR	185988	SwitchStatement	switch ( node -> children )		185985	0					
ANR	185989	Condition	node -> children	312:9:10543:10556	185985	0	True				
ANR	185990	PtrMemberAccess	node -> children		185985	0					
ANR	185991	Identifier	node		185985	0					
ANR	185992	Identifier	children		185985	1					
ANR	185993	CompoundStatement		2:25:26:26	185985	1					
ANR	185994	Label	case 0 :	313:2:10563:10569	185985	0	True				
ANR	185995	ReturnStatement	return NULL ;	314:3:10574:10585	185985	1	True				
ANR	185996	Identifier	NULL		185985	0					
ANR	185997	Label	case 1 :	315:2:10589:10595	185985	2	True				
ANR	185998	ReturnStatement	return node -> child . array [ 0 ] . child ;	316:3:10600:10633	185985	3	True				
ANR	185999	MemberAccess	node -> child . array [ 0 ] . child		185985	0					
ANR	186000	ArrayIndexing	node -> child . array [ 0 ]		185985	0					
ANR	186001	MemberAccess	node -> child . array		185985	0					
ANR	186002	PtrMemberAccess	node -> child		185985	0					
ANR	186003	Identifier	node		185985	0					
ANR	186004	Identifier	child		185985	1					
ANR	186005	Identifier	array		185985	1					
ANR	186006	PrimaryExpression	0		185985	1					
ANR	186007	Identifier	child		185985	1					
ANR	186008	Statement	define	318:1:10637:10642	185985	4	True				
ANR	186009	Statement	ZEND_GEN_GET_CHILD	318:8:10644:10661	185985	5	True				
ANR	186010	Statement	(	318:26:10662:10662	185985	6	True				
ANR	186011	Statement	x	318:27:10663:10663	185985	7	True				
ANR	186012	Statement	)	318:28:10664:10664	185985	8	True				
ANR	186013	IfStatement	if ( node -> child . array [ x ] . leaf == leaf )		185985	9					
ANR	186014	Condition	node -> child . array [ x ] . leaf == leaf	319:7:10675:10707	185985	0	True				
ANR	186015	EqualityExpression	node -> child . array [ x ] . leaf == leaf		185985	0		==			
ANR	186016	MemberAccess	node -> child . array [ x ] . leaf		185985	0					
ANR	186017	ArrayIndexing	node -> child . array [ x ]		185985	0					
ANR	186018	MemberAccess	node -> child . array		185985	0					
ANR	186019	PtrMemberAccess	node -> child		185985	0					
ANR	186020	Identifier	node		185985	0					
ANR	186021	Identifier	child		185985	1					
ANR	186022	Identifier	array		185985	1					
ANR	186023	Identifier	x		185985	1					
ANR	186024	Identifier	leaf		185985	1					
ANR	186025	Identifier	leaf		185985	1					
ANR	186026	CompoundStatement		9:42:177:177	185985	1					
ANR	186027	ReturnStatement	return node -> child . array [ x ] . child ;	320:4:10718:10751	185985	0	True				
ANR	186028	MemberAccess	node -> child . array [ x ] . child		185985	0					
ANR	186029	ArrayIndexing	node -> child . array [ x ]		185985	0					
ANR	186030	MemberAccess	node -> child . array		185985	0					
ANR	186031	PtrMemberAccess	node -> child		185985	0					
ANR	186032	Identifier	node		185985	0					
ANR	186033	Identifier	child		185985	1					
ANR	186034	Identifier	array		185985	1					
ANR	186035	Identifier	x		185985	1					
ANR	186036	Identifier	child		185985	1					
ANR	186037	Label	case 4 :	322:2:10762:10768	185985	10	True				
ANR	186038	Statement	ZEND_GEN_GET_CHILD	323:3:10773:10790	185985	11	True				
ANR	186039	Statement	(	323:21:10791:10791	185985	12	True				
ANR	186040	Statement	3	323:22:10792:10792	185985	13	True				
ANR	186041	Statement	)	323:23:10793:10793	185985	14	True				
ANR	186042	Label	case 3 :	324:2:10797:10803	185985	15	True				
ANR	186043	Statement	ZEND_GEN_GET_CHILD	325:3:10808:10825	185985	16	True				
ANR	186044	Statement	(	325:21:10826:10826	185985	17	True				
ANR	186045	Statement	2	325:22:10827:10827	185985	18	True				
ANR	186046	Statement	)	325:23:10828:10828	185985	19	True				
ANR	186047	Label	case 2 :	326:2:10832:10838	185985	20	True				
ANR	186048	Statement	ZEND_GEN_GET_CHILD	327:3:10843:10860	185985	21	True				
ANR	186049	Statement	(	327:21:10861:10861	185985	22	True				
ANR	186050	Statement	1	327:22:10862:10862	185985	23	True				
ANR	186051	Statement	)	327:23:10863:10863	185985	24	True				
ANR	186052	Statement	ZEND_GEN_GET_CHILD	328:3:10868:10885	185985	25	True				
ANR	186053	Statement	(	328:21:10886:10886	185985	26	True				
ANR	186054	Statement	0	328:22:10887:10887	185985	27	True				
ANR	186055	Statement	)	328:23:10888:10888	185985	28	True				
ANR	186056	ExpressionStatement	ZEND_ASSERT ( 0 )	329:3:10893:10907	185985	29	True				
ANR	186057	CallExpression	ZEND_ASSERT ( 0 )		185985	0					
ANR	186058	Callee	ZEND_ASSERT		185985	0					
ANR	186059	Identifier	ZEND_ASSERT		185985	0					
ANR	186060	ArgumentList	0		185985	1					
ANR	186061	Argument	0		185985	0					
ANR	186062	PrimaryExpression	0		185985	0					
ANR	186063	ReturnStatement	"return zend_hash_index_find_ptr ( & node -> child . ht , ( zend_ulong ) leaf ) ;"	332:1:10956:11023	185985	1	True				
ANR	186064	CallExpression	"zend_hash_index_find_ptr ( & node -> child . ht , ( zend_ulong ) leaf )"		185985	0					
ANR	186065	Callee	zend_hash_index_find_ptr		185985	0					
ANR	186066	Identifier	zend_hash_index_find_ptr		185985	0					
ANR	186067	ArgumentList	& node -> child . ht		185985	1					
ANR	186068	Argument	& node -> child . ht		185985	0					
ANR	186069	UnaryOperationExpression	& node -> child . ht		185985	0					
ANR	186070	UnaryOperator	&		185985	0					
ANR	186071	MemberAccess	node -> child . ht		185985	1					
ANR	186072	PtrMemberAccess	node -> child		185985	0					
ANR	186073	Identifier	node		185985	0					
ANR	186074	Identifier	child		185985	1					
ANR	186075	Identifier	ht		185985	1					
ANR	186076	Argument	( zend_ulong ) leaf		185985	1					
ANR	186077	CastExpression	( zend_ulong ) leaf		185985	0					
ANR	186078	CastTarget	zend_ulong		185985	0					
ANR	186079	Identifier	leaf		185985	1					
ANR	186080	ReturnType	static zend_generator *		185985	1					
ANR	186081	Identifier	zend_generator_get_child		185985	2					
ANR	186082	ParameterList	"zend_generator_node * node , zend_generator * leaf"		185985	3					
ANR	186083	Parameter	zend_generator_node * node	310:48:10483:10507	185985	0	True				
ANR	186084	ParameterType	zend_generator_node *		185985	0					
ANR	186085	Identifier	node		185985	1					
ANR	186086	Parameter	zend_generator * leaf	310:75:10510:10529	185985	1	True				
ANR	186087	ParameterType	zend_generator *		185985	0					
ANR	186088	Identifier	leaf		185985	1					
ANR	186089	CFGEntryNode	ENTRY		185985		True				
ANR	186090	CFGExitNode	EXIT		185985		True				
ANR	186091	Symbol	* x		185985						
ANR	186092	Symbol	NULL		185985						
ANR	186093	Symbol	* node -> child . array		185985						
ANR	186094	Symbol	& node -> child		185985						
ANR	186095	Symbol	node -> child . array [ 0 ] . child		185985						
ANR	186096	Symbol	zend_hash_index_find_ptr		185985						
ANR	186097	Symbol	* node -> child		185985						
ANR	186098	Symbol	leaf		185985						
ANR	186099	Symbol	node -> child		185985						
ANR	186100	Symbol	node		185985						
ANR	186101	Symbol	& node -> child . ht		185985						
ANR	186102	Symbol	* * node		185985						
ANR	186103	Symbol	node -> child . array		185985						
ANR	186104	Symbol	x		185985						
ANR	186105	Symbol	node -> child . array [ x ] . child		185985						
ANR	186106	Symbol	* node		185985						
ANR	186107	Symbol	node -> child . array [ x ] . leaf		185985						
ANR	186108	Symbol	node -> children		185985						
ANR	186109	Function	zend_generator_search_multi_children_node	335:0:11028:11247							
ANR	186110	FunctionDef	zend_generator_search_multi_children_node (zend_generator_node * node)		186109	0					
ANR	186111	CompoundStatement		336:0:11125:11247	186109	0					
ANR	186112	WhileStatement	while ( node -> children == 1 )		186109	0					
ANR	186113	Condition	node -> children == 1	337:8:11135:11153	186109	0	True				
ANR	186114	EqualityExpression	node -> children == 1		186109	0		==			
ANR	186115	PtrMemberAccess	node -> children		186109	0					
ANR	186116	Identifier	node		186109	0					
ANR	186117	Identifier	children		186109	1					
ANR	186118	PrimaryExpression	1		186109	1					
ANR	186119	CompoundStatement		2:29:30:30	186109	1					
ANR	186120	ExpressionStatement	node = & node -> child . array [ 0 ] . child -> node	338:2:11160:11200	186109	0	True				
ANR	186121	AssignmentExpression	node = & node -> child . array [ 0 ] . child -> node		186109	0		=			
ANR	186122	Identifier	node		186109	0					
ANR	186123	UnaryOperationExpression	& node -> child . array [ 0 ] . child -> node		186109	1					
ANR	186124	UnaryOperator	&		186109	0					
ANR	186125	PtrMemberAccess	node -> child . array [ 0 ] . child -> node		186109	1					
ANR	186126	MemberAccess	node -> child . array [ 0 ] . child		186109	0					
ANR	186127	ArrayIndexing	node -> child . array [ 0 ]		186109	0					
ANR	186128	MemberAccess	node -> child . array		186109	0					
ANR	186129	PtrMemberAccess	node -> child		186109	0					
ANR	186130	Identifier	node		186109	0					
ANR	186131	Identifier	child		186109	1					
ANR	186132	Identifier	array		186109	1					
ANR	186133	PrimaryExpression	0		186109	1					
ANR	186134	Identifier	child		186109	1					
ANR	186135	Identifier	node		186109	1					
ANR	186136	ReturnStatement	return node -> children > 1 ? node : NULL ;	340:1:11206:11245	186109	1	True				
ANR	186137	ConditionalExpression	node -> children > 1 ? node : NULL		186109	0					
ANR	186138	Condition	node -> children > 1		186109	0					
ANR	186139	RelationalExpression	node -> children > 1		186109	0		>			
ANR	186140	PtrMemberAccess	node -> children		186109	0					
ANR	186141	Identifier	node		186109	0					
ANR	186142	Identifier	children		186109	1					
ANR	186143	PrimaryExpression	1		186109	1					
ANR	186144	Identifier	node		186109	1					
ANR	186145	Identifier	NULL		186109	2					
ANR	186146	ReturnType	static zend_generator_node *		186109	1					
ANR	186147	Identifier	zend_generator_search_multi_children_node		186109	2					
ANR	186148	ParameterList	zend_generator_node * node		186109	3					
ANR	186149	Parameter	zend_generator_node * node	335:70:11098:11122	186109	0	True				
ANR	186150	ParameterType	zend_generator_node *		186109	0					
ANR	186151	Identifier	node		186109	1					
ANR	186152	CFGEntryNode	ENTRY		186109		True				
ANR	186153	CFGExitNode	EXIT		186109		True				
ANR	186154	Symbol	node		186109						
ANR	186155	Symbol	* node -> child . array		186109						
ANR	186156	Symbol	& node -> child . array [ 0 ] . child -> node		186109						
ANR	186157	Symbol	NULL		186109						
ANR	186158	Symbol	* * node		186109						
ANR	186159	Symbol	node -> child . array [ 0 ] . child		186109						
ANR	186160	Symbol	node -> child . array		186109						
ANR	186161	Symbol	* node		186109						
ANR	186162	Symbol	* node -> child		186109						
ANR	186163	Symbol	node -> child		186109						
ANR	186164	Symbol	node -> children		186109						
ANR	186165	Function	zend_generator_add_single_child	343:0:11250:12015							
ANR	186166	FunctionDef	"zend_generator_add_single_child (zend_generator_node * node , zend_generator * child , zend_generator * leaf)"		186165	0					
ANR	186167	CompoundStatement		344:0:11366:12015	186165	0					
ANR	186168	IfStatement	if ( node -> children < 4 )		186165	0					
ANR	186169	Condition	node -> children < 4	345:5:11373:11390	186165	0	True				
ANR	186170	RelationalExpression	node -> children < 4		186165	0		<			
ANR	186171	PtrMemberAccess	node -> children		186165	0					
ANR	186172	Identifier	node		186165	0					
ANR	186173	Identifier	children		186165	1					
ANR	186174	PrimaryExpression	4		186165	1					
ANR	186175	CompoundStatement		2:25:26:26	186165	1					
ANR	186176	ExpressionStatement	node -> child . array [ node -> children ] . leaf = leaf	346:2:11397:11442	186165	0	True				
ANR	186177	AssignmentExpression	node -> child . array [ node -> children ] . leaf = leaf		186165	0		=			
ANR	186178	MemberAccess	node -> child . array [ node -> children ] . leaf		186165	0					
ANR	186179	ArrayIndexing	node -> child . array [ node -> children ]		186165	0					
ANR	186180	MemberAccess	node -> child . array		186165	0					
ANR	186181	PtrMemberAccess	node -> child		186165	0					
ANR	186182	Identifier	node		186165	0					
ANR	186183	Identifier	child		186165	1					
ANR	186184	Identifier	array		186165	1					
ANR	186185	PtrMemberAccess	node -> children		186165	1					
ANR	186186	Identifier	node		186165	0					
ANR	186187	Identifier	children		186165	1					
ANR	186188	Identifier	leaf		186165	1					
ANR	186189	Identifier	leaf		186165	1					
ANR	186190	ExpressionStatement	node -> child . array [ node -> children ] . child = child	347:2:11446:11493	186165	1	True				
ANR	186191	AssignmentExpression	node -> child . array [ node -> children ] . child = child		186165	0		=			
ANR	186192	MemberAccess	node -> child . array [ node -> children ] . child		186165	0					
ANR	186193	ArrayIndexing	node -> child . array [ node -> children ]		186165	0					
ANR	186194	MemberAccess	node -> child . array		186165	0					
ANR	186195	PtrMemberAccess	node -> child		186165	0					
ANR	186196	Identifier	node		186165	0					
ANR	186197	Identifier	child		186165	1					
ANR	186198	Identifier	array		186165	1					
ANR	186199	PtrMemberAccess	node -> children		186165	1					
ANR	186200	Identifier	node		186165	0					
ANR	186201	Identifier	children		186165	1					
ANR	186202	Identifier	child		186165	1					
ANR	186203	Identifier	child		186165	1					
ANR	186204	ElseStatement	else		186165	0					
ANR	186205	IfStatement	if ( node -> children > 4 )		186165	0					
ANR	186206	Condition	node -> children > 4	348:12:11507:11524	186165	0	True				
ANR	186207	RelationalExpression	node -> children > 4		186165	0		>			
ANR	186208	PtrMemberAccess	node -> children		186165	0					
ANR	186209	Identifier	node		186165	0					
ANR	186210	Identifier	children		186165	1					
ANR	186211	PrimaryExpression	4		186165	1					
ANR	186212	CompoundStatement		5:32:160:160	186165	1					
ANR	186213	ExpressionStatement	"zend_hash_index_add_ptr ( & node -> child . ht , ( zend_ulong ) leaf , child )"	349:2:11531:11597	186165	0	True				
ANR	186214	CallExpression	"zend_hash_index_add_ptr ( & node -> child . ht , ( zend_ulong ) leaf , child )"		186165	0					
ANR	186215	Callee	zend_hash_index_add_ptr		186165	0					
ANR	186216	Identifier	zend_hash_index_add_ptr		186165	0					
ANR	186217	ArgumentList	& node -> child . ht		186165	1					
ANR	186218	Argument	& node -> child . ht		186165	0					
ANR	186219	UnaryOperationExpression	& node -> child . ht		186165	0					
ANR	186220	UnaryOperator	&		186165	0					
ANR	186221	MemberAccess	node -> child . ht		186165	1					
ANR	186222	PtrMemberAccess	node -> child		186165	0					
ANR	186223	Identifier	node		186165	0					
ANR	186224	Identifier	child		186165	1					
ANR	186225	Identifier	ht		186165	1					
ANR	186226	Argument	( zend_ulong ) leaf		186165	1					
ANR	186227	CastExpression	( zend_ulong ) leaf		186165	0					
ANR	186228	CastTarget	zend_ulong		186165	0					
ANR	186229	Identifier	leaf		186165	1					
ANR	186230	Argument	child		186165	2					
ANR	186231	Identifier	child		186165	0					
ANR	186232	ElseStatement	else		186165	0					
ANR	186233	CompoundStatement		12:2:320:325	186165	0					
ANR	186234	ClassDefStatement	struct { zend_generator * leaf ; zend_generator * child ; } array [ 4 ] ;	351:2:11611:11683	186165	0	True				
ANR	186235	IdentifierDecl	array [ 4 ]		186165	0					
ANR	186236	IdentifierDeclType	 [ 4 ]		186165	0					
ANR	186237	Identifier	array		186165	1					
ANR	186238	PrimaryExpression	4		186165	2					
ANR	186239	IdentifierDeclStatement	int i ;	355:2:11687:11692	186165	1	True				
ANR	186240	IdentifierDecl	i		186165	0					
ANR	186241	IdentifierDeclType	int		186165	0					
ANR	186242	Identifier	i		186165	1					
ANR	186243	ExpressionStatement	"memcpy ( & array , & node -> child . array , sizeof ( array ) )"	357:2:11697:11746	186165	2	True				
ANR	186244	CallExpression	"memcpy ( & array , & node -> child . array , sizeof ( array ) )"		186165	0					
ANR	186245	Callee	memcpy		186165	0					
ANR	186246	Identifier	memcpy		186165	0					
ANR	186247	ArgumentList	& array		186165	1					
ANR	186248	Argument	& array		186165	0					
ANR	186249	UnaryOperationExpression	& array		186165	0					
ANR	186250	UnaryOperator	&		186165	0					
ANR	186251	Identifier	array		186165	1					
ANR	186252	Argument	& node -> child . array		186165	1					
ANR	186253	UnaryOperationExpression	& node -> child . array		186165	0					
ANR	186254	UnaryOperator	&		186165	0					
ANR	186255	MemberAccess	node -> child . array		186165	1					
ANR	186256	PtrMemberAccess	node -> child		186165	0					
ANR	186257	Identifier	node		186165	0					
ANR	186258	Identifier	child		186165	1					
ANR	186259	Identifier	array		186165	1					
ANR	186260	Argument	sizeof ( array )		186165	2					
ANR	186261	SizeofExpression	sizeof ( array )		186165	0					
ANR	186262	Sizeof	sizeof		186165	0					
ANR	186263	SizeofOperand	array		186165	1					
ANR	186264	ExpressionStatement	"zend_hash_init ( & node -> child . ht , 5 , sigh , NULL , 0 )"	358:2:11750:11799	186165	3	True				
ANR	186265	CallExpression	"zend_hash_init ( & node -> child . ht , 5 , sigh , NULL , 0 )"		186165	0					
ANR	186266	Callee	zend_hash_init		186165	0					
ANR	186267	Identifier	zend_hash_init		186165	0					
ANR	186268	ArgumentList	& node -> child . ht		186165	1					
ANR	186269	Argument	& node -> child . ht		186165	0					
ANR	186270	UnaryOperationExpression	& node -> child . ht		186165	0					
ANR	186271	UnaryOperator	&		186165	0					
ANR	186272	MemberAccess	node -> child . ht		186165	1					
ANR	186273	PtrMemberAccess	node -> child		186165	0					
ANR	186274	Identifier	node		186165	0					
ANR	186275	Identifier	child		186165	1					
ANR	186276	Identifier	ht		186165	1					
ANR	186277	Argument	5		186165	1					
ANR	186278	PrimaryExpression	5		186165	0					
ANR	186279	Argument	sigh		186165	2					
ANR	186280	Identifier	sigh		186165	0					
ANR	186281	Argument	NULL		186165	3					
ANR	186282	Identifier	NULL		186165	0					
ANR	186283	Argument	0		186165	4					
ANR	186284	PrimaryExpression	0		186165	0					
ANR	186285	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		186165	4					
ANR	186286	ForInit	i = 0 ;	359:7:11808:11813	186165	0	True				
ANR	186287	AssignmentExpression	i = 0		186165	0		=			
ANR	186288	Identifier	i		186165	0					
ANR	186289	PrimaryExpression	0		186165	1					
ANR	186290	Condition	i < 4	359:14:11815:11819	186165	1	True				
ANR	186291	RelationalExpression	i < 4		186165	0		<			
ANR	186292	Identifier	i		186165	0					
ANR	186293	PrimaryExpression	4		186165	1					
ANR	186294	PostIncDecOperationExpression	i ++	359:21:11822:11824	186165	2	True				
ANR	186295	Identifier	i		186165	0					
ANR	186296	IncDec	++		186165	1					
ANR	186297	CompoundStatement		16:26:460:460	186165	3					
ANR	186298	ExpressionStatement	"zend_hash_index_add_ptr ( & node -> child . ht , ( zend_ulong ) array [ i ] . leaf , array [ i ] . child )"	360:3:11832:11916	186165	0	True				
ANR	186299	CallExpression	"zend_hash_index_add_ptr ( & node -> child . ht , ( zend_ulong ) array [ i ] . leaf , array [ i ] . child )"		186165	0					
ANR	186300	Callee	zend_hash_index_add_ptr		186165	0					
ANR	186301	Identifier	zend_hash_index_add_ptr		186165	0					
ANR	186302	ArgumentList	& node -> child . ht		186165	1					
ANR	186303	Argument	& node -> child . ht		186165	0					
ANR	186304	UnaryOperationExpression	& node -> child . ht		186165	0					
ANR	186305	UnaryOperator	&		186165	0					
ANR	186306	MemberAccess	node -> child . ht		186165	1					
ANR	186307	PtrMemberAccess	node -> child		186165	0					
ANR	186308	Identifier	node		186165	0					
ANR	186309	Identifier	child		186165	1					
ANR	186310	Identifier	ht		186165	1					
ANR	186311	Argument	( zend_ulong ) array [ i ] . leaf		186165	1					
ANR	186312	CastExpression	( zend_ulong ) array [ i ] . leaf		186165	0					
ANR	186313	CastTarget	zend_ulong		186165	0					
ANR	186314	MemberAccess	array [ i ] . leaf		186165	1					
ANR	186315	ArrayIndexing	array [ i ]		186165	0					
ANR	186316	Identifier	array		186165	0					
ANR	186317	Identifier	i		186165	1					
ANR	186318	Identifier	leaf		186165	1					
ANR	186319	Argument	array [ i ] . child		186165	2					
ANR	186320	MemberAccess	array [ i ] . child		186165	0					
ANR	186321	ArrayIndexing	array [ i ]		186165	0					
ANR	186322	Identifier	array		186165	0					
ANR	186323	Identifier	i		186165	1					
ANR	186324	Identifier	child		186165	1					
ANR	186325	ExpressionStatement	"zend_hash_index_add_ptr ( & node -> child . ht , ( zend_ulong ) leaf , child )"	362:2:11924:11990	186165	5	True				
ANR	186326	CallExpression	"zend_hash_index_add_ptr ( & node -> child . ht , ( zend_ulong ) leaf , child )"		186165	0					
ANR	186327	Callee	zend_hash_index_add_ptr		186165	0					
ANR	186328	Identifier	zend_hash_index_add_ptr		186165	0					
ANR	186329	ArgumentList	& node -> child . ht		186165	1					
ANR	186330	Argument	& node -> child . ht		186165	0					
ANR	186331	UnaryOperationExpression	& node -> child . ht		186165	0					
ANR	186332	UnaryOperator	&		186165	0					
ANR	186333	MemberAccess	node -> child . ht		186165	1					
ANR	186334	PtrMemberAccess	node -> child		186165	0					
ANR	186335	Identifier	node		186165	0					
ANR	186336	Identifier	child		186165	1					
ANR	186337	Identifier	ht		186165	1					
ANR	186338	Argument	( zend_ulong ) leaf		186165	1					
ANR	186339	CastExpression	( zend_ulong ) leaf		186165	0					
ANR	186340	CastTarget	zend_ulong		186165	0					
ANR	186341	Identifier	leaf		186165	1					
ANR	186342	Argument	child		186165	2					
ANR	186343	Identifier	child		186165	0					
ANR	186344	ExpressionStatement	node -> children ++	365:1:11997:12013	186165	1	True				
ANR	186345	PostIncDecOperationExpression	node -> children ++		186165	0					
ANR	186346	PtrMemberAccess	node -> children		186165	0					
ANR	186347	Identifier	node		186165	0					
ANR	186348	Identifier	children		186165	1					
ANR	186349	IncDec	++		186165	1					
ANR	186350	ReturnType	static void		186165	1					
ANR	186351	Identifier	zend_generator_add_single_child		186165	2					
ANR	186352	ParameterList	"zend_generator_node * node , zend_generator * child , zend_generator * leaf"		186165	3					
ANR	186353	Parameter	zend_generator_node * node	343:44:11294:11318	186165	0	True				
ANR	186354	ParameterType	zend_generator_node *		186165	0					
ANR	186355	Identifier	node		186165	1					
ANR	186356	Parameter	zend_generator * child	343:71:11321:11341	186165	1	True				
ANR	186357	ParameterType	zend_generator *		186165	0					
ANR	186358	Identifier	child		186165	1					
ANR	186359	Parameter	zend_generator * leaf	343:94:11344:11363	186165	2	True				
ANR	186360	ParameterType	zend_generator *		186165	0					
ANR	186361	Identifier	leaf		186165	1					
ANR	186362	CFGEntryNode	ENTRY		186165		True				
ANR	186363	CFGExitNode	EXIT		186165		True				
ANR	186364	Symbol	& node -> child . array		186165						
ANR	186365	Symbol	sigh		186165						
ANR	186366	Symbol	* node -> child . array		186165						
ANR	186367	Symbol	& node -> child		186165						
ANR	186368	Symbol	& array		186165						
ANR	186369	Symbol	node -> child		186165						
ANR	186370	Symbol	* array		186165						
ANR	186371	Symbol	& node -> child . ht		186165						
ANR	186372	Symbol	array		186165						
ANR	186373	Symbol	node -> child . array		186165						
ANR	186374	Symbol	* node		186165						
ANR	186375	Symbol	* node -> children		186165						
ANR	186376	Symbol	NULL		186165						
ANR	186377	Symbol	array [ i ] . child		186165						
ANR	186378	Symbol	i		186165						
ANR	186379	Symbol	* node -> child		186165						
ANR	186380	Symbol	leaf		186165						
ANR	186381	Symbol	node -> child . array [ node -> children ] . child		186165						
ANR	186382	Symbol	node -> child . array [ node -> children ] . leaf		186165						
ANR	186383	Symbol	node		186165						
ANR	186384	Symbol	* i		186165						
ANR	186385	Symbol	* * node		186165						
ANR	186386	Symbol	array [ i ] . leaf		186165						
ANR	186387	Symbol	node -> children		186165						
ANR	186388	Symbol	child		186165						
ANR	186389	Function	zend_generator_merge_child_nodes	368:0:12018:12475							
ANR	186390	FunctionDef	"zend_generator_merge_child_nodes (zend_generator_node * dest , zend_generator_node * src , zend_generator * child)"		186389	0					
ANR	186391	CompoundStatement		369:0:12139:12475	186389	0					
ANR	186392	IfStatement	if ( src -> children <= 4 )		186389	0					
ANR	186393	Condition	src -> children <= 4	370:5:12146:12163	186389	0	True				
ANR	186394	RelationalExpression	src -> children <= 4		186389	0		<=			
ANR	186395	PtrMemberAccess	src -> children		186389	0					
ANR	186396	Identifier	src		186389	0					
ANR	186397	Identifier	children		186389	1					
ANR	186398	PrimaryExpression	4		186389	1					
ANR	186399	CompoundStatement		3:2:30:51	186389	1					
ANR	186400	IdentifierDeclStatement	int i = src -> children ;	371:2:12170:12191	186389	0	True				
ANR	186401	IdentifierDecl	i = src -> children		186389	0					
ANR	186402	IdentifierDeclType	int		186389	0					
ANR	186403	Identifier	i		186389	1					
ANR	186404	AssignmentExpression	i = src -> children		186389	2		=			
ANR	186405	Identifier	i		186389	0					
ANR	186406	PtrMemberAccess	src -> children		186389	1					
ANR	186407	Identifier	src		186389	0					
ANR	186408	Identifier	children		186389	1					
ANR	186409	WhileStatement	while ( i -- )		186389	1					
ANR	186410	Condition	i --	372:9:12202:12204	186389	0	True				
ANR	186411	PostIncDecOperationExpression	i --		186389	0					
ANR	186412	Identifier	i		186389	0					
ANR	186413	IncDec	--		186389	1					
ANR	186414	CompoundStatement		4:14:67:67	186389	1					
ANR	186415	ExpressionStatement	"zend_generator_add_single_child ( dest , child , src -> child . array [ i ] . leaf )"	373:3:12212:12282	186389	0	True				
ANR	186416	CallExpression	"zend_generator_add_single_child ( dest , child , src -> child . array [ i ] . leaf )"		186389	0					
ANR	186417	Callee	zend_generator_add_single_child		186389	0					
ANR	186418	Identifier	zend_generator_add_single_child		186389	0					
ANR	186419	ArgumentList	dest		186389	1					
ANR	186420	Argument	dest		186389	0					
ANR	186421	Identifier	dest		186389	0					
ANR	186422	Argument	child		186389	1					
ANR	186423	Identifier	child		186389	0					
ANR	186424	Argument	src -> child . array [ i ] . leaf		186389	2					
ANR	186425	MemberAccess	src -> child . array [ i ] . leaf		186389	0					
ANR	186426	ArrayIndexing	src -> child . array [ i ]		186389	0					
ANR	186427	MemberAccess	src -> child . array		186389	0					
ANR	186428	PtrMemberAccess	src -> child		186389	0					
ANR	186429	Identifier	src		186389	0					
ANR	186430	Identifier	child		186389	1					
ANR	186431	Identifier	array		186389	1					
ANR	186432	Identifier	i		186389	1					
ANR	186433	Identifier	leaf		186389	1					
ANR	186434	ElseStatement	else		186389	0					
ANR	186435	CompoundStatement		8:2:160:175	186389	0					
ANR	186436	IdentifierDeclStatement	zend_ulong leaf ;	376:2:12300:12315	186389	0	True				
ANR	186437	IdentifierDecl	leaf		186389	0					
ANR	186438	IdentifierDeclType	zend_ulong		186389	0					
ANR	186439	Identifier	leaf		186389	1					
ANR	186440	Statement	ZEND_HASH_FOREACH_NUM_KEY	377:2:12319:12343	186389	1	True				
ANR	186441	Statement	(	377:27:12344:12344	186389	2	True				
ANR	186442	Statement	&	377:28:12345:12345	186389	3	True				
ANR	186443	Statement	src	377:29:12346:12348	186389	4	True				
ANR	186444	Statement	->	377:32:12349:12350	186389	5	True				
ANR	186445	Statement	child	377:34:12351:12355	186389	6	True				
ANR	186446	Statement	.	377:39:12356:12356	186389	7	True				
ANR	186447	Statement	ht	377:40:12357:12358	186389	8	True				
ANR	186448	Statement	","	377:42:12359:12359	186389	9	True				
ANR	186449	Statement	leaf	377:44:12361:12364	186389	10	True				
ANR	186450	Statement	)	377:48:12365:12365	186389	11	True				
ANR	186451	CompoundStatement		9:50:227:227	186389	12					
ANR	186452	ExpressionStatement	"zend_generator_add_single_child ( dest , child , ( zend_generator * ) leaf )"	378:3:12372:12441	186389	0	True				
ANR	186453	CallExpression	"zend_generator_add_single_child ( dest , child , ( zend_generator * ) leaf )"		186389	0					
ANR	186454	Callee	zend_generator_add_single_child		186389	0					
ANR	186455	Identifier	zend_generator_add_single_child		186389	0					
ANR	186456	ArgumentList	dest		186389	1					
ANR	186457	Argument	dest		186389	0					
ANR	186458	Identifier	dest		186389	0					
ANR	186459	Argument	child		186389	1					
ANR	186460	Identifier	child		186389	0					
ANR	186461	Argument	( zend_generator * ) leaf		186389	2					
ANR	186462	CastExpression	( zend_generator * ) leaf		186389	0					
ANR	186463	CastTarget	zend_generator *		186389	0					
ANR	186464	Identifier	leaf		186389	1					
ANR	186465	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	379:4:12447:12470	186389	13	True				
ANR	186466	CallExpression	ZEND_HASH_FOREACH_END ( )		186389	0					
ANR	186467	Callee	ZEND_HASH_FOREACH_END		186389	0					
ANR	186468	Identifier	ZEND_HASH_FOREACH_END		186389	0					
ANR	186469	ArgumentList			186389	1					
ANR	186470	ReturnType	static void		186389	1					
ANR	186471	Identifier	zend_generator_merge_child_nodes		186389	2					
ANR	186472	ParameterList	"zend_generator_node * dest , zend_generator_node * src , zend_generator * child"		186389	3					
ANR	186473	Parameter	zend_generator_node * dest	368:45:12063:12087	186389	0	True				
ANR	186474	ParameterType	zend_generator_node *		186389	0					
ANR	186475	Identifier	dest		186389	1					
ANR	186476	Parameter	zend_generator_node * src	368:72:12090:12113	186389	1	True				
ANR	186477	ParameterType	zend_generator_node *		186389	0					
ANR	186478	Identifier	src		186389	1					
ANR	186479	Parameter	zend_generator * child	368:98:12116:12136	186389	2	True				
ANR	186480	ParameterType	zend_generator *		186389	0					
ANR	186481	Identifier	child		186389	1					
ANR	186482	CFGEntryNode	ENTRY		186389		True				
ANR	186483	CFGExitNode	EXIT		186389		True				
ANR	186484	Symbol	src		186389						
ANR	186485	Symbol	src -> child		186389						
ANR	186486	Symbol	i		186389						
ANR	186487	Symbol	dest		186389						
ANR	186488	Symbol	* src -> child		186389						
ANR	186489	Symbol	leaf		186389						
ANR	186490	Symbol	* src		186389						
ANR	186491	Symbol	src -> child . array [ i ] . leaf		186389						
ANR	186492	Symbol	src -> child . array		186389						
ANR	186493	Symbol	* i		186389						
ANR	186494	Symbol	* src -> child . array		186389						
ANR	186495	Symbol	* * src		186389						
ANR	186496	Symbol	src -> children		186389						
ANR	186497	Symbol	child		186389						
ANR	186498	Function	zend_generator_add_child	384:0:12583:15384							
ANR	186499	FunctionDef	"zend_generator_add_child (zend_generator * generator , zend_generator * child)"		186498	0					
ANR	186500	CompoundStatement		385:0:12670:15384	186498	0					
ANR	186501	IdentifierDeclStatement	zend_generator * leaf = child -> node . children ? child -> node . ptr . leaf : child ;	386:1:12673:12747	186498	0	True				
ANR	186502	IdentifierDecl	* leaf = child -> node . children ? child -> node . ptr . leaf : child		186498	0					
ANR	186503	IdentifierDeclType	zend_generator *		186498	0					
ANR	186504	Identifier	leaf		186498	1					
ANR	186505	AssignmentExpression	* leaf = child -> node . children ? child -> node . ptr . leaf : child		186498	2		=			
ANR	186506	Identifier	leaf		186498	0					
ANR	186507	ConditionalExpression	child -> node . children ? child -> node . ptr . leaf : child		186498	1					
ANR	186508	Condition	child -> node . children		186498	0					
ANR	186509	MemberAccess	child -> node . children		186498	0					
ANR	186510	PtrMemberAccess	child -> node		186498	0					
ANR	186511	Identifier	child		186498	0					
ANR	186512	Identifier	node		186498	1					
ANR	186513	Identifier	children		186498	1					
ANR	186514	MemberAccess	child -> node . ptr . leaf		186498	1					
ANR	186515	MemberAccess	child -> node . ptr		186498	0					
ANR	186516	PtrMemberAccess	child -> node		186498	0					
ANR	186517	Identifier	child		186498	0					
ANR	186518	Identifier	node		186498	1					
ANR	186519	Identifier	ptr		186498	1					
ANR	186520	Identifier	leaf		186498	1					
ANR	186521	Identifier	child		186498	2					
ANR	186522	IdentifierDeclStatement	zend_generator_node * multi_children_node ;	387:1:12750:12790	186498	1	True				
ANR	186523	IdentifierDecl	* multi_children_node		186498	0					
ANR	186524	IdentifierDeclType	zend_generator_node *		186498	0					
ANR	186525	Identifier	multi_children_node		186498	1					
ANR	186526	IdentifierDeclStatement	zend_bool was_leaf = generator -> node . children == 0 ;	388:1:12793:12843	186498	2	True				
ANR	186527	IdentifierDecl	was_leaf = generator -> node . children == 0		186498	0					
ANR	186528	IdentifierDeclType	zend_bool		186498	0					
ANR	186529	Identifier	was_leaf		186498	1					
ANR	186530	AssignmentExpression	was_leaf = generator -> node . children == 0		186498	2		=			
ANR	186531	Identifier	was_leaf		186498	0					
ANR	186532	EqualityExpression	generator -> node . children == 0		186498	1		==			
ANR	186533	MemberAccess	generator -> node . children		186498	0					
ANR	186534	PtrMemberAccess	generator -> node		186498	0					
ANR	186535	Identifier	generator		186498	0					
ANR	186536	Identifier	node		186498	1					
ANR	186537	Identifier	children		186498	1					
ANR	186538	PrimaryExpression	0		186498	1					
ANR	186539	IfStatement	if ( was_leaf )		186498	3					
ANR	186540	Condition	was_leaf	390:5:12851:12858	186498	0	True				
ANR	186541	Identifier	was_leaf		186498	0					
ANR	186542	CompoundStatement		7:2:194:239	186498	1					
ANR	186543	IdentifierDeclStatement	zend_generator * next = generator -> node . parent ;	391:2:12865:12910	186498	0	True				
ANR	186544	IdentifierDecl	* next = generator -> node . parent		186498	0					
ANR	186545	IdentifierDeclType	zend_generator *		186498	0					
ANR	186546	Identifier	next		186498	1					
ANR	186547	AssignmentExpression	* next = generator -> node . parent		186498	2		=			
ANR	186548	Identifier	next		186498	0					
ANR	186549	MemberAccess	generator -> node . parent		186498	1					
ANR	186550	PtrMemberAccess	generator -> node		186498	0					
ANR	186551	Identifier	generator		186498	0					
ANR	186552	Identifier	node		186498	1					
ANR	186553	Identifier	parent		186498	1					
ANR	186554	ExpressionStatement	leaf -> node . ptr . root = generator -> node . ptr . root	392:2:12914:12960	186498	1	True				
ANR	186555	AssignmentExpression	leaf -> node . ptr . root = generator -> node . ptr . root		186498	0		=			
ANR	186556	MemberAccess	leaf -> node . ptr . root		186498	0					
ANR	186557	MemberAccess	leaf -> node . ptr		186498	0					
ANR	186558	PtrMemberAccess	leaf -> node		186498	0					
ANR	186559	Identifier	leaf		186498	0					
ANR	186560	Identifier	node		186498	1					
ANR	186561	Identifier	ptr		186498	1					
ANR	186562	Identifier	root		186498	1					
ANR	186563	MemberAccess	generator -> node . ptr . root		186498	1					
ANR	186564	MemberAccess	generator -> node . ptr		186498	0					
ANR	186565	PtrMemberAccess	generator -> node		186498	0					
ANR	186566	Identifier	generator		186498	0					
ANR	186567	Identifier	node		186498	1					
ANR	186568	Identifier	ptr		186498	1					
ANR	186569	Identifier	root		186498	1					
ANR	186570	ExpressionStatement	++ GC_REFCOUNT ( & generator -> std )	393:2:12964:12994	186498	2	True				
ANR	186571	UnaryExpression	++ GC_REFCOUNT ( & generator -> std )		186498	0					
ANR	186572	IncDec	++		186498	0					
ANR	186573	CallExpression	GC_REFCOUNT ( & generator -> std )		186498	1					
ANR	186574	Callee	GC_REFCOUNT		186498	0					
ANR	186575	Identifier	GC_REFCOUNT		186498	0					
ANR	186576	ArgumentList	& generator -> std		186498	1					
ANR	186577	Argument	& generator -> std		186498	0					
ANR	186578	UnaryOperationExpression	& generator -> std		186498	0					
ANR	186579	UnaryOperator	&		186498	0					
ANR	186580	PtrMemberAccess	generator -> std		186498	1					
ANR	186581	Identifier	generator		186498	0					
ANR	186582	Identifier	std		186498	1					
ANR	186583	ExpressionStatement	generator -> node . ptr . leaf = leaf	394:2:13169:13200	186498	3	True				
ANR	186584	AssignmentExpression	generator -> node . ptr . leaf = leaf		186498	0		=			
ANR	186585	MemberAccess	generator -> node . ptr . leaf		186498	0					
ANR	186586	MemberAccess	generator -> node . ptr		186498	0					
ANR	186587	PtrMemberAccess	generator -> node		186498	0					
ANR	186588	Identifier	generator		186498	0					
ANR	186589	Identifier	node		186498	1					
ANR	186590	Identifier	ptr		186498	1					
ANR	186591	Identifier	leaf		186498	1					
ANR	186592	Identifier	leaf		186498	1					
ANR	186593	WhileStatement	while ( next )		186498	4					
ANR	186594	Condition	next	396:9:13212:13215	186498	0	True				
ANR	186595	Identifier	next		186498	0					
ANR	186596	CompoundStatement		12:15:547:547	186498	1					
ANR	186597	IfStatement	if ( next -> node . children > 1 )		186498	0					
ANR	186598	Condition	next -> node . children > 1	397:7:13227:13249	186498	0	True				
ANR	186599	RelationalExpression	next -> node . children > 1		186498	0		>			
ANR	186600	MemberAccess	next -> node . children		186498	0					
ANR	186601	PtrMemberAccess	next -> node		186498	0					
ANR	186602	Identifier	next		186498	0					
ANR	186603	Identifier	node		186498	1					
ANR	186604	Identifier	children		186498	1					
ANR	186605	PrimaryExpression	1		186498	1					
ANR	186606	CompoundStatement		13:32:581:581	186498	1					
ANR	186607	IfStatement	if ( next -> node . children > 4 )		186498	0					
ANR	186608	Condition	next -> node . children > 4	398:8:13262:13284	186498	0	True				
ANR	186609	RelationalExpression	next -> node . children > 4		186498	0		>			
ANR	186610	MemberAccess	next -> node . children		186498	0					
ANR	186611	PtrMemberAccess	next -> node		186498	0					
ANR	186612	Identifier	next		186498	0					
ANR	186613	Identifier	node		186498	1					
ANR	186614	Identifier	children		186498	1					
ANR	186615	PrimaryExpression	4		186498	1					
ANR	186616	CompoundStatement		15:5:623:717	186498	1					
ANR	186617	IdentifierDeclStatement	"zend_generator * child = zend_hash_index_find_ptr ( & next -> node . child . ht , ( zend_ulong ) generator ) ;"	399:5:13294:13388	186498	0	True				
ANR	186618	IdentifierDecl	"* child = zend_hash_index_find_ptr ( & next -> node . child . ht , ( zend_ulong ) generator )"		186498	0					
ANR	186619	IdentifierDeclType	zend_generator *		186498	0					
ANR	186620	Identifier	child		186498	1					
ANR	186621	AssignmentExpression	"* child = zend_hash_index_find_ptr ( & next -> node . child . ht , ( zend_ulong ) generator )"		186498	2		=			
ANR	186622	Identifier	child		186498	0					
ANR	186623	CallExpression	"zend_hash_index_find_ptr ( & next -> node . child . ht , ( zend_ulong ) generator )"		186498	1					
ANR	186624	Callee	zend_hash_index_find_ptr		186498	0					
ANR	186625	Identifier	zend_hash_index_find_ptr		186498	0					
ANR	186626	ArgumentList	& next -> node . child . ht		186498	1					
ANR	186627	Argument	& next -> node . child . ht		186498	0					
ANR	186628	UnaryOperationExpression	& next -> node . child . ht		186498	0					
ANR	186629	UnaryOperator	&		186498	0					
ANR	186630	MemberAccess	next -> node . child . ht		186498	1					
ANR	186631	MemberAccess	next -> node . child		186498	0					
ANR	186632	PtrMemberAccess	next -> node		186498	0					
ANR	186633	Identifier	next		186498	0					
ANR	186634	Identifier	node		186498	1					
ANR	186635	Identifier	child		186498	1					
ANR	186636	Identifier	ht		186498	1					
ANR	186637	Argument	( zend_ulong ) generator		186498	1					
ANR	186638	CastExpression	( zend_ulong ) generator		186498	0					
ANR	186639	CastTarget	zend_ulong		186498	0					
ANR	186640	Identifier	generator		186498	1					
ANR	186641	ExpressionStatement	"zend_hash_index_del ( & next -> node . child . ht , ( zend_ulong ) generator )"	400:5:13395:13460	186498	1	True				
ANR	186642	CallExpression	"zend_hash_index_del ( & next -> node . child . ht , ( zend_ulong ) generator )"		186498	0					
ANR	186643	Callee	zend_hash_index_del		186498	0					
ANR	186644	Identifier	zend_hash_index_del		186498	0					
ANR	186645	ArgumentList	& next -> node . child . ht		186498	1					
ANR	186646	Argument	& next -> node . child . ht		186498	0					
ANR	186647	UnaryOperationExpression	& next -> node . child . ht		186498	0					
ANR	186648	UnaryOperator	&		186498	0					
ANR	186649	MemberAccess	next -> node . child . ht		186498	1					
ANR	186650	MemberAccess	next -> node . child		186498	0					
ANR	186651	PtrMemberAccess	next -> node		186498	0					
ANR	186652	Identifier	next		186498	0					
ANR	186653	Identifier	node		186498	1					
ANR	186654	Identifier	child		186498	1					
ANR	186655	Identifier	ht		186498	1					
ANR	186656	Argument	( zend_ulong ) generator		186498	1					
ANR	186657	CastExpression	( zend_ulong ) generator		186498	0					
ANR	186658	CastTarget	zend_ulong		186498	0					
ANR	186659	Identifier	generator		186498	1					
ANR	186660	ExpressionStatement	"zend_hash_index_add_ptr ( & next -> node . child . ht , ( zend_ulong ) leaf , child )"	401:5:13467:13538	186498	2	True				
ANR	186661	CallExpression	"zend_hash_index_add_ptr ( & next -> node . child . ht , ( zend_ulong ) leaf , child )"		186498	0					
ANR	186662	Callee	zend_hash_index_add_ptr		186498	0					
ANR	186663	Identifier	zend_hash_index_add_ptr		186498	0					
ANR	186664	ArgumentList	& next -> node . child . ht		186498	1					
ANR	186665	Argument	& next -> node . child . ht		186498	0					
ANR	186666	UnaryOperationExpression	& next -> node . child . ht		186498	0					
ANR	186667	UnaryOperator	&		186498	0					
ANR	186668	MemberAccess	next -> node . child . ht		186498	1					
ANR	186669	MemberAccess	next -> node . child		186498	0					
ANR	186670	PtrMemberAccess	next -> node		186498	0					
ANR	186671	Identifier	next		186498	0					
ANR	186672	Identifier	node		186498	1					
ANR	186673	Identifier	child		186498	1					
ANR	186674	Identifier	ht		186498	1					
ANR	186675	Argument	( zend_ulong ) leaf		186498	1					
ANR	186676	CastExpression	( zend_ulong ) leaf		186498	0					
ANR	186677	CastTarget	zend_ulong		186498	0					
ANR	186678	Identifier	leaf		186498	1					
ANR	186679	Argument	child		186498	2					
ANR	186680	Identifier	child		186498	0					
ANR	186681	ElseStatement	else		186498	0					
ANR	186682	CompoundStatement		18:11:880:880	186498	0					
ANR	186683	SwitchStatement	switch ( next -> node . children )		186498	0					
ANR	186684	Condition	next -> node . children	403:13:13566:13584	186498	0	True				
ANR	186685	MemberAccess	next -> node . children		186498	0					
ANR	186686	PtrMemberAccess	next -> node		186498	0					
ANR	186687	Identifier	next		186498	0					
ANR	186688	Identifier	node		186498	1					
ANR	186689	Identifier	children		186498	1					
ANR	186690	CompoundStatement		19:34:916:916	186498	1					
ANR	186691	Statement	define	404:1:13590:13595	186498	0	True				
ANR	186692	Statement	ZEND_GEN_UPDATE_CHILD	404:8:13597:13617	186498	1	True				
ANR	186693	Statement	(	404:29:13618:13618	186498	2	True				
ANR	186694	Statement	x	404:30:13619:13619	186498	3	True				
ANR	186695	Statement	)	404:31:13620:13620	186498	4	True				
ANR	186696	IfStatement	if ( next -> node . child . array [ x ] . leaf == generator )		186498	5					
ANR	186697	Condition	next -> node . child . array [ x ] . leaf == generator	405:11:13635:13677	186498	0	True				
ANR	186698	EqualityExpression	next -> node . child . array [ x ] . leaf == generator		186498	0		==			
ANR	186699	MemberAccess	next -> node . child . array [ x ] . leaf		186498	0					
ANR	186700	ArrayIndexing	next -> node . child . array [ x ]		186498	0					
ANR	186701	MemberAccess	next -> node . child . array		186498	0					
ANR	186702	MemberAccess	next -> node . child		186498	0					
ANR	186703	PtrMemberAccess	next -> node		186498	0					
ANR	186704	Identifier	next		186498	0					
ANR	186705	Identifier	node		186498	1					
ANR	186706	Identifier	child		186498	1					
ANR	186707	Identifier	array		186498	1					
ANR	186708	Identifier	x		186498	1					
ANR	186709	Identifier	leaf		186498	1					
ANR	186710	Identifier	generator		186498	1					
ANR	186711	CompoundStatement		21:56:1009:1009	186498	1					
ANR	186712	ExpressionStatement	next -> node . child . array [ x ] . leaf = leaf	406:8:13692:13729	186498	0	True				
ANR	186713	AssignmentExpression	next -> node . child . array [ x ] . leaf = leaf		186498	0		=			
ANR	186714	MemberAccess	next -> node . child . array [ x ] . leaf		186498	0					
ANR	186715	ArrayIndexing	next -> node . child . array [ x ]		186498	0					
ANR	186716	MemberAccess	next -> node . child . array		186498	0					
ANR	186717	MemberAccess	next -> node . child		186498	0					
ANR	186718	PtrMemberAccess	next -> node		186498	0					
ANR	186719	Identifier	next		186498	0					
ANR	186720	Identifier	node		186498	1					
ANR	186721	Identifier	child		186498	1					
ANR	186722	Identifier	array		186498	1					
ANR	186723	Identifier	x		186498	1					
ANR	186724	Identifier	leaf		186498	1					
ANR	186725	Identifier	leaf		186498	1					
ANR	186726	BreakStatement	break ;	407:8:13741:13746	186498	1	True				
ANR	186727	Label	case 4 :	409:6:13765:13771	186498	6	True				
ANR	186728	Statement	ZEND_GEN_UPDATE_CHILD	410:7:13780:13800	186498	7	True				
ANR	186729	Statement	(	410:28:13801:13801	186498	8	True				
ANR	186730	Statement	3	410:29:13802:13802	186498	9	True				
ANR	186731	Statement	)	410:30:13803:13803	186498	10	True				
ANR	186732	Label	case 3 :	411:6:13811:13817	186498	11	True				
ANR	186733	Statement	ZEND_GEN_UPDATE_CHILD	412:7:13826:13846	186498	12	True				
ANR	186734	Statement	(	412:28:13847:13847	186498	13	True				
ANR	186735	Statement	2	412:29:13848:13848	186498	14	True				
ANR	186736	Statement	)	412:30:13849:13849	186498	15	True				
ANR	186737	Label	case 2 :	413:6:13857:13863	186498	16	True				
ANR	186738	Statement	ZEND_GEN_UPDATE_CHILD	414:7:13872:13892	186498	17	True				
ANR	186739	Statement	(	414:28:13893:13893	186498	18	True				
ANR	186740	Statement	1	414:29:13894:13894	186498	19	True				
ANR	186741	Statement	)	414:30:13895:13895	186498	20	True				
ANR	186742	Statement	ZEND_GEN_UPDATE_CHILD	415:7:13904:13924	186498	21	True				
ANR	186743	Statement	(	415:28:13925:13925	186498	22	True				
ANR	186744	Statement	0	415:29:13926:13926	186498	23	True				
ANR	186745	Statement	)	415:30:13927:13927	186498	24	True				
ANR	186746	ExpressionStatement	ZEND_ASSERT ( 0 )	416:7:13936:13950	186498	25	True				
ANR	186747	CallExpression	ZEND_ASSERT ( 0 )		186498	0					
ANR	186748	Callee	ZEND_ASSERT		186498	0					
ANR	186749	Identifier	ZEND_ASSERT		186498	0					
ANR	186750	ArgumentList	0		186498	1					
ANR	186751	Argument	0		186498	0					
ANR	186752	PrimaryExpression	0		186498	0					
ANR	186753	ExpressionStatement	next -> node . ptr . leaf = leaf	421:3:14016:14042	186498	1	True				
ANR	186754	AssignmentExpression	next -> node . ptr . leaf = leaf		186498	0		=			
ANR	186755	MemberAccess	next -> node . ptr . leaf		186498	0					
ANR	186756	MemberAccess	next -> node . ptr		186498	0					
ANR	186757	PtrMemberAccess	next -> node		186498	0					
ANR	186758	Identifier	next		186498	0					
ANR	186759	Identifier	node		186498	1					
ANR	186760	Identifier	ptr		186498	1					
ANR	186761	Identifier	leaf		186498	1					
ANR	186762	Identifier	leaf		186498	1					
ANR	186763	ExpressionStatement	next = next -> node . parent	422:3:14047:14071	186498	2	True				
ANR	186764	AssignmentExpression	next = next -> node . parent		186498	0		=			
ANR	186765	Identifier	next		186498	0					
ANR	186766	MemberAccess	next -> node . parent		186498	1					
ANR	186767	PtrMemberAccess	next -> node		186498	0					
ANR	186768	Identifier	next		186498	0					
ANR	186769	Identifier	node		186498	1					
ANR	186770	Identifier	parent		186498	1					
ANR	186771	ExpressionStatement	"zend_generator_add_single_child ( & generator -> node , child , leaf )"	425:2:14080:14142	186498	5	True				
ANR	186772	CallExpression	"zend_generator_add_single_child ( & generator -> node , child , leaf )"		186498	0					
ANR	186773	Callee	zend_generator_add_single_child		186498	0					
ANR	186774	Identifier	zend_generator_add_single_child		186498	0					
ANR	186775	ArgumentList	& generator -> node		186498	1					
ANR	186776	Argument	& generator -> node		186498	0					
ANR	186777	UnaryOperationExpression	& generator -> node		186498	0					
ANR	186778	UnaryOperator	&		186498	0					
ANR	186779	PtrMemberAccess	generator -> node		186498	1					
ANR	186780	Identifier	generator		186498	0					
ANR	186781	Identifier	node		186498	1					
ANR	186782	Argument	child		186498	1					
ANR	186783	Identifier	child		186498	0					
ANR	186784	Argument	leaf		186498	2					
ANR	186785	Identifier	leaf		186498	0					
ANR	186786	ElseStatement	else		186498	0					
ANR	186787	IfStatement	if ( generator -> node . children == 1 )		186498	0					
ANR	186788	Condition	generator -> node . children == 1	426:12:14156:14184	186498	0	True				
ANR	186789	EqualityExpression	generator -> node . children == 1		186498	0		==			
ANR	186790	MemberAccess	generator -> node . children		186498	0					
ANR	186791	PtrMemberAccess	generator -> node		186498	0					
ANR	186792	Identifier	generator		186498	0					
ANR	186793	Identifier	node		186498	1					
ANR	186794	Identifier	children		186498	1					
ANR	186795	PrimaryExpression	1		186498	1					
ANR	186796	CompoundStatement		42:43:1516:1516	186498	1					
ANR	186797	ExpressionStatement	multi_children_node = zend_generator_search_multi_children_node ( & generator -> node )	427:2:14191:14272	186498	0	True				
ANR	186798	AssignmentExpression	multi_children_node = zend_generator_search_multi_children_node ( & generator -> node )		186498	0		=			
ANR	186799	Identifier	multi_children_node		186498	0					
ANR	186800	CallExpression	zend_generator_search_multi_children_node ( & generator -> node )		186498	1					
ANR	186801	Callee	zend_generator_search_multi_children_node		186498	0					
ANR	186802	Identifier	zend_generator_search_multi_children_node		186498	0					
ANR	186803	ArgumentList	& generator -> node		186498	1					
ANR	186804	Argument	& generator -> node		186498	0					
ANR	186805	UnaryOperationExpression	& generator -> node		186498	0					
ANR	186806	UnaryOperator	&		186498	0					
ANR	186807	PtrMemberAccess	generator -> node		186498	1					
ANR	186808	Identifier	generator		186498	0					
ANR	186809	Identifier	node		186498	1					
ANR	186810	IfStatement	if ( multi_children_node )		186498	1					
ANR	186811	Condition	multi_children_node	428:6:14280:14298	186498	0	True				
ANR	186812	Identifier	multi_children_node		186498	0					
ANR	186813	CompoundStatement		44:27:1630:1630	186498	1					
ANR	186814	ExpressionStatement	generator -> node . children = 0	429:3:14306:14334	186498	0	True				
ANR	186815	AssignmentExpression	generator -> node . children = 0		186498	0		=			
ANR	186816	MemberAccess	generator -> node . children		186498	0					
ANR	186817	PtrMemberAccess	generator -> node		186498	0					
ANR	186818	Identifier	generator		186498	0					
ANR	186819	Identifier	node		186498	1					
ANR	186820	Identifier	children		186498	1					
ANR	186821	PrimaryExpression	0		186498	1					
ANR	186822	ExpressionStatement	"zend_generator_merge_child_nodes ( & generator -> node , multi_children_node , generator -> node . child . array [ 0 ] . child )"	430:3:14339:14448	186498	1	True				
ANR	186823	CallExpression	"zend_generator_merge_child_nodes ( & generator -> node , multi_children_node , generator -> node . child . array [ 0 ] . child )"		186498	0					
ANR	186824	Callee	zend_generator_merge_child_nodes		186498	0					
ANR	186825	Identifier	zend_generator_merge_child_nodes		186498	0					
ANR	186826	ArgumentList	& generator -> node		186498	1					
ANR	186827	Argument	& generator -> node		186498	0					
ANR	186828	UnaryOperationExpression	& generator -> node		186498	0					
ANR	186829	UnaryOperator	&		186498	0					
ANR	186830	PtrMemberAccess	generator -> node		186498	1					
ANR	186831	Identifier	generator		186498	0					
ANR	186832	Identifier	node		186498	1					
ANR	186833	Argument	multi_children_node		186498	1					
ANR	186834	Identifier	multi_children_node		186498	0					
ANR	186835	Argument	generator -> node . child . array [ 0 ] . child		186498	2					
ANR	186836	MemberAccess	generator -> node . child . array [ 0 ] . child		186498	0					
ANR	186837	ArrayIndexing	generator -> node . child . array [ 0 ]		186498	0					
ANR	186838	MemberAccess	generator -> node . child . array		186498	0					
ANR	186839	MemberAccess	generator -> node . child		186498	0					
ANR	186840	PtrMemberAccess	generator -> node		186498	0					
ANR	186841	Identifier	generator		186498	0					
ANR	186842	Identifier	node		186498	1					
ANR	186843	Identifier	child		186498	1					
ANR	186844	Identifier	array		186498	1					
ANR	186845	PrimaryExpression	0		186498	1					
ANR	186846	Identifier	child		186498	1					
ANR	186847	IfStatement	if ( ! was_leaf )		186498	4					
ANR	186848	Condition	! was_leaf	434:5:14463:14471	186498	0	True				
ANR	186849	UnaryOperationExpression	! was_leaf		186498	0					
ANR	186850	UnaryOperator	!		186498	0					
ANR	186851	Identifier	was_leaf		186498	1					
ANR	186852	CompoundStatement		50:16:1803:1803	186498	1					
ANR	186853	ExpressionStatement	multi_children_node = zend_generator_search_multi_children_node ( & child -> node )	435:2:14478:14555	186498	0	True				
ANR	186854	AssignmentExpression	multi_children_node = zend_generator_search_multi_children_node ( & child -> node )		186498	0		=			
ANR	186855	Identifier	multi_children_node		186498	0					
ANR	186856	CallExpression	zend_generator_search_multi_children_node ( & child -> node )		186498	1					
ANR	186857	Callee	zend_generator_search_multi_children_node		186498	0					
ANR	186858	Identifier	zend_generator_search_multi_children_node		186498	0					
ANR	186859	ArgumentList	& child -> node		186498	1					
ANR	186860	Argument	& child -> node		186498	0					
ANR	186861	UnaryOperationExpression	& child -> node		186498	0					
ANR	186862	UnaryOperator	&		186498	0					
ANR	186863	PtrMemberAccess	child -> node		186498	1					
ANR	186864	Identifier	child		186498	0					
ANR	186865	Identifier	node		186498	1					
ANR	186866	ElseStatement	else		186498	0					
ANR	186867	CompoundStatement		52:8:1894:1894	186498	0					
ANR	186868	ExpressionStatement	multi_children_node = ( zend_generator_node * ) 0x1	437:2:14569:14618	186498	0	True				
ANR	186869	AssignmentExpression	multi_children_node = ( zend_generator_node * ) 0x1		186498	0		=			
ANR	186870	Identifier	multi_children_node		186498	0					
ANR	186871	CastExpression	( zend_generator_node * ) 0x1		186498	1					
ANR	186872	CastTarget	zend_generator_node *		186498	0					
ANR	186873	PrimaryExpression	0x1		186498	1					
ANR	186874	CompoundStatement		57:2:1958:2023	186498	5					
ANR	186875	IdentifierDeclStatement	"zend_generator * parent = generator -> node . parent , * cur = generator ;"	441:2:14629:14694	186498	0	True				
ANR	186876	IdentifierDecl	* parent = generator -> node . parent		186498	0					
ANR	186877	IdentifierDeclType	zend_generator *		186498	0					
ANR	186878	Identifier	parent		186498	1					
ANR	186879	AssignmentExpression	* parent = generator -> node . parent		186498	2		=			
ANR	186880	Identifier	parent		186498	0					
ANR	186881	MemberAccess	generator -> node . parent		186498	1					
ANR	186882	PtrMemberAccess	generator -> node		186498	0					
ANR	186883	Identifier	generator		186498	0					
ANR	186884	Identifier	node		186498	1					
ANR	186885	Identifier	parent		186498	1					
ANR	186886	IdentifierDecl	* cur = generator		186498	1					
ANR	186887	IdentifierDeclType	zend_generator *		186498	0					
ANR	186888	Identifier	cur		186498	1					
ANR	186889	AssignmentExpression	* cur = generator		186498	2		=			
ANR	186890	Identifier	generator		186498	0					
ANR	186891	Identifier	generator		186498	1					
ANR	186892	IfStatement	if ( multi_children_node > ( zend_generator_node * ) 0x1 )		186498	1					
ANR	186893	Condition	multi_children_node > ( zend_generator_node * ) 0x1	443:6:14703:14751	186498	0	True				
ANR	186894	RelationalExpression	multi_children_node > ( zend_generator_node * ) 0x1		186498	0		>			
ANR	186895	Identifier	multi_children_node		186498	0					
ANR	186896	CastExpression	( zend_generator_node * ) 0x1		186498	1					
ANR	186897	CastTarget	zend_generator_node *		186498	0					
ANR	186898	PrimaryExpression	0x1		186498	1					
ANR	186899	CompoundStatement		59:57:2083:2083	186498	1					
ANR	186900	ExpressionStatement	"zend_generator_merge_child_nodes ( & generator -> node , multi_children_node , child )"	444:3:14759:14837	186498	0	True				
ANR	186901	CallExpression	"zend_generator_merge_child_nodes ( & generator -> node , multi_children_node , child )"		186498	0					
ANR	186902	Callee	zend_generator_merge_child_nodes		186498	0					
ANR	186903	Identifier	zend_generator_merge_child_nodes		186498	0					
ANR	186904	ArgumentList	& generator -> node		186498	1					
ANR	186905	Argument	& generator -> node		186498	0					
ANR	186906	UnaryOperationExpression	& generator -> node		186498	0					
ANR	186907	UnaryOperator	&		186498	0					
ANR	186908	PtrMemberAccess	generator -> node		186498	1					
ANR	186909	Identifier	generator		186498	0					
ANR	186910	Identifier	node		186498	1					
ANR	186911	Argument	multi_children_node		186498	1					
ANR	186912	Identifier	multi_children_node		186498	0					
ANR	186913	Argument	child		186498	2					
ANR	186914	Identifier	child		186498	0					
ANR	186915	ElseStatement	else		186498	0					
ANR	186916	CompoundStatement		61:9:2177:2177	186498	0					
ANR	186917	ExpressionStatement	"zend_generator_add_single_child ( & generator -> node , child , leaf )"	446:3:14853:14915	186498	0	True				
ANR	186918	CallExpression	"zend_generator_add_single_child ( & generator -> node , child , leaf )"		186498	0					
ANR	186919	Callee	zend_generator_add_single_child		186498	0					
ANR	186920	Identifier	zend_generator_add_single_child		186498	0					
ANR	186921	ArgumentList	& generator -> node		186498	1					
ANR	186922	Argument	& generator -> node		186498	0					
ANR	186923	UnaryOperationExpression	& generator -> node		186498	0					
ANR	186924	UnaryOperator	&		186498	0					
ANR	186925	PtrMemberAccess	generator -> node		186498	1					
ANR	186926	Identifier	generator		186498	0					
ANR	186927	Identifier	node		186498	1					
ANR	186928	Argument	child		186498	1					
ANR	186929	Identifier	child		186498	0					
ANR	186930	Argument	leaf		186498	2					
ANR	186931	Identifier	leaf		186498	0					
ANR	186932	WhileStatement	while ( parent )		186498	2					
ANR	186933	Condition	parent	448:9:14930:14935	186498	0	True				
ANR	186934	Identifier	parent		186498	0					
ANR	186935	CompoundStatement		64:17:2267:2267	186498	1					
ANR	186936	IfStatement	if ( parent -> node . children > 1 )		186498	0					
ANR	186937	Condition	parent -> node . children > 1	449:7:14947:14971	186498	0	True				
ANR	186938	RelationalExpression	parent -> node . children > 1		186498	0		>			
ANR	186939	MemberAccess	parent -> node . children		186498	0					
ANR	186940	PtrMemberAccess	parent -> node		186498	0					
ANR	186941	Identifier	parent		186498	0					
ANR	186942	Identifier	node		186498	1					
ANR	186943	Identifier	children		186498	1					
ANR	186944	PrimaryExpression	1		186498	1					
ANR	186945	CompoundStatement		65:34:2303:2303	186498	1					
ANR	186946	IfStatement	if ( multi_children_node == ( zend_generator_node * ) 0x1 )		186498	0					
ANR	186947	Condition	multi_children_node == ( zend_generator_node * ) 0x1	450:8:14984:15033	186498	0	True				
ANR	186948	EqualityExpression	multi_children_node == ( zend_generator_node * ) 0x1		186498	0		==			
ANR	186949	Identifier	multi_children_node		186498	0					
ANR	186950	CastExpression	( zend_generator_node * ) 0x1		186498	1					
ANR	186951	CastTarget	zend_generator_node *		186498	0					
ANR	186952	PrimaryExpression	0x1		186498	1					
ANR	186953	CompoundStatement		66:60:2365:2365	186498	1					
ANR	186954	ExpressionStatement	multi_children_node = zend_generator_search_multi_children_node ( & child -> node )	451:5:15043:15120	186498	0	True				
ANR	186955	AssignmentExpression	multi_children_node = zend_generator_search_multi_children_node ( & child -> node )		186498	0		=			
ANR	186956	Identifier	multi_children_node		186498	0					
ANR	186957	CallExpression	zend_generator_search_multi_children_node ( & child -> node )		186498	1					
ANR	186958	Callee	zend_generator_search_multi_children_node		186498	0					
ANR	186959	Identifier	zend_generator_search_multi_children_node		186498	0					
ANR	186960	ArgumentList	& child -> node		186498	1					
ANR	186961	Argument	& child -> node		186498	0					
ANR	186962	UnaryOperationExpression	& child -> node		186498	0					
ANR	186963	UnaryOperator	&		186498	0					
ANR	186964	PtrMemberAccess	child -> node		186498	1					
ANR	186965	Identifier	child		186498	0					
ANR	186966	Identifier	node		186498	1					
ANR	186967	IfStatement	if ( multi_children_node )		186498	1					
ANR	186968	Condition	multi_children_node	453:8:15136:15154	186498	0	True				
ANR	186969	Identifier	multi_children_node		186498	0					
ANR	186970	CompoundStatement		69:29:2486:2486	186498	1					
ANR	186971	ExpressionStatement	"zend_generator_merge_child_nodes ( & parent -> node , multi_children_node , cur )"	454:5:15164:15237	186498	0	True				
ANR	186972	CallExpression	"zend_generator_merge_child_nodes ( & parent -> node , multi_children_node , cur )"		186498	0					
ANR	186973	Callee	zend_generator_merge_child_nodes		186498	0					
ANR	186974	Identifier	zend_generator_merge_child_nodes		186498	0					
ANR	186975	ArgumentList	& parent -> node		186498	1					
ANR	186976	Argument	& parent -> node		186498	0					
ANR	186977	UnaryOperationExpression	& parent -> node		186498	0					
ANR	186978	UnaryOperator	&		186498	0					
ANR	186979	PtrMemberAccess	parent -> node		186498	1					
ANR	186980	Identifier	parent		186498	0					
ANR	186981	Identifier	node		186498	1					
ANR	186982	Argument	multi_children_node		186498	1					
ANR	186983	Identifier	multi_children_node		186498	0					
ANR	186984	Argument	cur		186498	2					
ANR	186985	Identifier	cur		186498	0					
ANR	186986	ElseStatement	else		186498	0					
ANR	186987	CompoundStatement		71:11:2579:2579	186498	0					
ANR	186988	ExpressionStatement	"zend_generator_add_single_child ( & parent -> node , cur , leaf )"	456:5:15257:15314	186498	0	True				
ANR	186989	CallExpression	"zend_generator_add_single_child ( & parent -> node , cur , leaf )"		186498	0					
ANR	186990	Callee	zend_generator_add_single_child		186498	0					
ANR	186991	Identifier	zend_generator_add_single_child		186498	0					
ANR	186992	ArgumentList	& parent -> node		186498	1					
ANR	186993	Argument	& parent -> node		186498	0					
ANR	186994	UnaryOperationExpression	& parent -> node		186498	0					
ANR	186995	UnaryOperator	&		186498	0					
ANR	186996	PtrMemberAccess	parent -> node		186498	1					
ANR	186997	Identifier	parent		186498	0					
ANR	186998	Identifier	node		186498	1					
ANR	186999	Argument	cur		186498	1					
ANR	187000	Identifier	cur		186498	0					
ANR	187001	Argument	leaf		186498	2					
ANR	187002	Identifier	leaf		186498	0					
ANR	187003	ExpressionStatement	cur = parent	459:3:15330:15342	186498	1	True				
ANR	187004	AssignmentExpression	cur = parent		186498	0		=			
ANR	187005	Identifier	cur		186498	0					
ANR	187006	Identifier	parent		186498	1					
ANR	187007	ExpressionStatement	parent = parent -> node . parent	460:3:15347:15375	186498	2	True				
ANR	187008	AssignmentExpression	parent = parent -> node . parent		186498	0		=			
ANR	187009	Identifier	parent		186498	0					
ANR	187010	MemberAccess	parent -> node . parent		186498	1					
ANR	187011	PtrMemberAccess	parent -> node		186498	0					
ANR	187012	Identifier	parent		186498	0					
ANR	187013	Identifier	node		186498	1					
ANR	187014	Identifier	parent		186498	1					
ANR	187015	ReturnType	static void		186498	1					
ANR	187016	Identifier	zend_generator_add_child		186498	2					
ANR	187017	ParameterList	"zend_generator * generator , zend_generator * child"		186498	3					
ANR	187018	Parameter	zend_generator * generator	384:37:12620:12644	186498	0	True				
ANR	187019	ParameterType	zend_generator *		186498	0					
ANR	187020	Identifier	generator		186498	1					
ANR	187021	Parameter	zend_generator * child	384:64:12647:12667	186498	1	True				
ANR	187022	ParameterType	zend_generator *		186498	0					
ANR	187023	Identifier	child		186498	1					
ANR	187024	CFGEntryNode	ENTRY		186498		True				
ANR	187025	CFGExitNode	EXIT		186498		True				
ANR	187026	Symbol	child -> node . ptr		186498						
ANR	187027	Symbol	parent		186498						
ANR	187028	Symbol	* x		186498						
ANR	187029	Symbol	* parent		186498						
ANR	187030	Symbol	next -> node		186498						
ANR	187031	Symbol	child -> node . children		186498						
ANR	187032	Symbol	* * next		186498						
ANR	187033	Symbol	* next		186498						
ANR	187034	Symbol	next -> node . children		186498						
ANR	187035	Symbol	* generator		186498						
ANR	187036	Symbol	& child -> node		186498						
ANR	187037	Symbol	next -> node . child . array [ x ] . leaf		186498						
ANR	187038	Symbol	* generator -> node		186498						
ANR	187039	Symbol	next -> node . child		186498						
ANR	187040	Symbol	* generator -> node . child . array		186498						
ANR	187041	Symbol	* child		186498						
ANR	187042	Symbol	generator -> node . ptr . root		186498						
ANR	187043	Symbol	zend_hash_index_find_ptr		186498						
ANR	187044	Symbol	* next -> node . child		186498						
ANR	187045	Symbol	* generator -> node . child		186498						
ANR	187046	Symbol	child -> node		186498						
ANR	187047	Symbol	generator -> node . child		186498						
ANR	187048	Symbol	& next -> node		186498						
ANR	187049	Symbol	leaf -> node . ptr		186498						
ANR	187050	Symbol	next -> node . ptr . leaf		186498						
ANR	187051	Symbol	* leaf		186498						
ANR	187052	Symbol	* next -> node		186498						
ANR	187053	Symbol	parent -> node . parent		186498						
ANR	187054	Symbol	generator -> node . ptr . leaf		186498						
ANR	187055	Symbol	parent -> node . children		186498						
ANR	187056	Symbol	child		186498						
ANR	187057	Symbol	next		186498						
ANR	187058	Symbol	cur		186498						
ANR	187059	Symbol	& next -> node . child		186498						
ANR	187060	Symbol	generator		186498						
ANR	187061	Symbol	leaf -> node . ptr . root		186498						
ANR	187062	Symbol	generator -> node . children		186498						
ANR	187063	Symbol	& next -> node . child . ht		186498						
ANR	187064	Symbol	generator -> node . ptr		186498						
ANR	187065	Symbol	next -> node . ptr		186498						
ANR	187066	Symbol	zend_generator_search_multi_children_node		186498						
ANR	187067	Symbol	multi_children_node		186498						
ANR	187068	Symbol	& parent -> node		186498						
ANR	187069	Symbol	child -> node . ptr . leaf		186498						
ANR	187070	Symbol	& generator -> node		186498						
ANR	187071	Symbol	was_leaf		186498						
ANR	187072	Symbol	* * generator		186498						
ANR	187073	Symbol	generator -> node . child . array [ 0 ] . child		186498						
ANR	187074	Symbol	generator -> node . child . array		186498						
ANR	187075	Symbol	leaf -> node		186498						
ANR	187076	Symbol	leaf		186498						
ANR	187077	Symbol	generator -> node		186498						
ANR	187078	Symbol	parent -> node		186498						
ANR	187079	Symbol	& generator -> std		186498						
ANR	187080	Symbol	* next -> node . child . array		186498						
ANR	187081	Symbol	generator -> node . parent		186498						
ANR	187082	Symbol	x		186498						
ANR	187083	Symbol	next -> node . parent		186498						
ANR	187084	Symbol	next -> node . child . array		186498						
ANR	187085	Function	zend_generator_yield_from	465:0:15387:15614							
ANR	187086	FunctionDef	"zend_generator_yield_from (zend_generator * generator , zend_generator * from)"		187085	0					
ANR	187087	CompoundStatement		466:0:15467:15614	187085	0					
ANR	187088	ExpressionStatement	"zend_generator_add_child ( from , generator )"	467:1:15470:15511	187085	0	True				
ANR	187089	CallExpression	"zend_generator_add_child ( from , generator )"		187085	0					
ANR	187090	Callee	zend_generator_add_child		187085	0					
ANR	187091	Identifier	zend_generator_add_child		187085	0					
ANR	187092	ArgumentList	from		187085	1					
ANR	187093	Argument	from		187085	0					
ANR	187094	Identifier	from		187085	0					
ANR	187095	Argument	generator		187085	1					
ANR	187096	Identifier	generator		187085	0					
ANR	187097	ExpressionStatement	generator -> node . parent = from	469:1:15515:15544	187085	1	True				
ANR	187098	AssignmentExpression	generator -> node . parent = from		187085	0		=			
ANR	187099	MemberAccess	generator -> node . parent		187085	0					
ANR	187100	PtrMemberAccess	generator -> node		187085	0					
ANR	187101	Identifier	generator		187085	0					
ANR	187102	Identifier	node		187085	1					
ANR	187103	Identifier	parent		187085	1					
ANR	187104	Identifier	from		187085	1					
ANR	187105	ExpressionStatement	zend_generator_get_current ( generator )	470:1:15547:15584	187085	2	True				
ANR	187106	CallExpression	zend_generator_get_current ( generator )		187085	0					
ANR	187107	Callee	zend_generator_get_current		187085	0					
ANR	187108	Identifier	zend_generator_get_current		187085	0					
ANR	187109	ArgumentList	generator		187085	1					
ANR	187110	Argument	generator		187085	0					
ANR	187111	Identifier	generator		187085	0					
ANR	187112	ExpressionStatement	-- GC_REFCOUNT ( & from -> std )	471:1:15587:15612	187085	3	True				
ANR	187113	UnaryExpression	-- GC_REFCOUNT ( & from -> std )		187085	0					
ANR	187114	IncDec	--		187085	0					
ANR	187115	CallExpression	GC_REFCOUNT ( & from -> std )		187085	1					
ANR	187116	Callee	GC_REFCOUNT		187085	0					
ANR	187117	Identifier	GC_REFCOUNT		187085	0					
ANR	187118	ArgumentList	& from -> std		187085	1					
ANR	187119	Argument	& from -> std		187085	0					
ANR	187120	UnaryOperationExpression	& from -> std		187085	0					
ANR	187121	UnaryOperator	&		187085	0					
ANR	187122	PtrMemberAccess	from -> std		187085	1					
ANR	187123	Identifier	from		187085	0					
ANR	187124	Identifier	std		187085	1					
ANR	187125	ReturnType	void		187085	1					
ANR	187126	Identifier	zend_generator_yield_from		187085	2					
ANR	187127	ParameterList	"zend_generator * generator , zend_generator * from"		187085	3					
ANR	187128	Parameter	zend_generator * generator	465:31:15418:15442	187085	0	True				
ANR	187129	ParameterType	zend_generator *		187085	0					
ANR	187130	Identifier	generator		187085	1					
ANR	187131	Parameter	zend_generator * from	465:58:15445:15464	187085	1	True				
ANR	187132	ParameterType	zend_generator *		187085	0					
ANR	187133	Identifier	from		187085	1					
ANR	187134	CFGEntryNode	ENTRY		187085		True				
ANR	187135	CFGExitNode	EXIT		187085		True				
ANR	187136	Symbol	& from -> std		187085						
ANR	187137	Symbol	* generator		187085						
ANR	187138	Symbol	generator -> node . parent		187085						
ANR	187139	Symbol	generator		187085						
ANR	187140	Symbol	from		187085						
ANR	187141	Symbol	generator -> node		187085						
ANR	187142	Function	zend_generator_update_current	474:0:15617:17528							
ANR	187143	FunctionDef	"zend_generator_update_current (zend_generator * generator , zend_generator * leaf)"		187142	0					
ANR	187144	CompoundStatement		475:0:15721:17528	187142	0					
ANR	187145	IdentifierDeclStatement	"zend_generator * old_root , * root = leaf -> node . ptr . root ;"	476:1:15724:15777	187142	0	True				
ANR	187146	IdentifierDecl	* old_root		187142	0					
ANR	187147	IdentifierDeclType	zend_generator *		187142	0					
ANR	187148	Identifier	old_root		187142	1					
ANR	187149	IdentifierDecl	* root = leaf -> node . ptr . root		187142	1					
ANR	187150	IdentifierDeclType	zend_generator *		187142	0					
ANR	187151	Identifier	root		187142	1					
ANR	187152	AssignmentExpression	* root = leaf -> node . ptr . root		187142	2		=			
ANR	187153	Identifier	root		187142	0					
ANR	187154	MemberAccess	leaf -> node . ptr . root		187142	1					
ANR	187155	MemberAccess	leaf -> node . ptr		187142	0					
ANR	187156	PtrMemberAccess	leaf -> node		187142	0					
ANR	187157	Identifier	leaf		187142	0					
ANR	187158	Identifier	node		187142	1					
ANR	187159	Identifier	ptr		187142	1					
ANR	187160	Identifier	root		187142	1					
ANR	187161	IfStatement	if ( root != generator )		187142	1					
ANR	187162	Condition	root != generator	479:5:15826:15842	187142	0	True				
ANR	187163	EqualityExpression	root != generator		187142	0		!=			
ANR	187164	Identifier	root		187142	0					
ANR	187165	Identifier	generator		187142	1					
ANR	187166	CompoundStatement		5:24:123:123	187142	1					
ANR	187167	ExpressionStatement	old_root = root	480:2:15849:15864	187142	0	True				
ANR	187168	AssignmentExpression	old_root = root		187142	0		=			
ANR	187169	Identifier	old_root		187142	0					
ANR	187170	Identifier	root		187142	1					
ANR	187171	ExpressionStatement	"root = zend_generator_get_child ( & root -> node , leaf )"	481:2:15868:15918	187142	1	True				
ANR	187172	AssignmentExpression	"root = zend_generator_get_child ( & root -> node , leaf )"		187142	0		=			
ANR	187173	Identifier	root		187142	0					
ANR	187174	CallExpression	"zend_generator_get_child ( & root -> node , leaf )"		187142	1					
ANR	187175	Callee	zend_generator_get_child		187142	0					
ANR	187176	Identifier	zend_generator_get_child		187142	0					
ANR	187177	ArgumentList	& root -> node		187142	1					
ANR	187178	Argument	& root -> node		187142	0					
ANR	187179	UnaryOperationExpression	& root -> node		187142	0					
ANR	187180	UnaryOperator	&		187142	0					
ANR	187181	PtrMemberAccess	root -> node		187142	1					
ANR	187182	Identifier	root		187142	0					
ANR	187183	Identifier	node		187142	1					
ANR	187184	Argument	leaf		187142	1					
ANR	187185	Identifier	leaf		187142	0					
ANR	187186	ElseStatement	else		187142	0					
ANR	187187	CompoundStatement		8:8:206:206	187142	0					
ANR	187188	ExpressionStatement	old_root = NULL	483:2:15932:15947	187142	0	True				
ANR	187189	AssignmentExpression	old_root = NULL		187142	0		=			
ANR	187190	Identifier	old_root		187142	0					
ANR	187191	Identifier	NULL		187142	1					
ANR	187192	WhileStatement	while ( ! root -> execute_data && root != generator )		187142	2					
ANR	187193	Condition	! root -> execute_data && root != generator	486:8:15961:16000	187142	0	True				
ANR	187194	AndExpression	! root -> execute_data && root != generator		187142	0		&&			
ANR	187195	UnaryOperationExpression	! root -> execute_data		187142	0					
ANR	187196	UnaryOperator	!		187142	0					
ANR	187197	PtrMemberAccess	root -> execute_data		187142	1					
ANR	187198	Identifier	root		187142	0					
ANR	187199	Identifier	execute_data		187142	1					
ANR	187200	EqualityExpression	root != generator		187142	1		!=			
ANR	187201	Identifier	root		187142	0					
ANR	187202	Identifier	generator		187142	1					
ANR	187203	CompoundStatement		12:50:281:281	187142	1					
ANR	187204	ExpressionStatement	OBJ_RELEASE ( & old_root -> std )	487:2:16007:16034	187142	0	True				
ANR	187205	CallExpression	OBJ_RELEASE ( & old_root -> std )		187142	0					
ANR	187206	Callee	OBJ_RELEASE		187142	0					
ANR	187207	Identifier	OBJ_RELEASE		187142	0					
ANR	187208	ArgumentList	& old_root -> std		187142	1					
ANR	187209	Argument	& old_root -> std		187142	0					
ANR	187210	UnaryOperationExpression	& old_root -> std		187142	0					
ANR	187211	UnaryOperator	&		187142	0					
ANR	187212	PtrMemberAccess	old_root -> std		187142	1					
ANR	187213	Identifier	old_root		187142	0					
ANR	187214	Identifier	std		187142	1					
ANR	187215	ExpressionStatement	old_root = root	488:2:16038:16053	187142	1	True				
ANR	187216	AssignmentExpression	old_root = root		187142	0		=			
ANR	187217	Identifier	old_root		187142	0					
ANR	187218	Identifier	root		187142	1					
ANR	187219	ExpressionStatement	"root = zend_generator_get_child ( & root -> node , leaf )"	490:2:16058:16108	187142	2	True				
ANR	187220	AssignmentExpression	"root = zend_generator_get_child ( & root -> node , leaf )"		187142	0		=			
ANR	187221	Identifier	root		187142	0					
ANR	187222	CallExpression	"zend_generator_get_child ( & root -> node , leaf )"		187142	1					
ANR	187223	Callee	zend_generator_get_child		187142	0					
ANR	187224	Identifier	zend_generator_get_child		187142	0					
ANR	187225	ArgumentList	& root -> node		187142	1					
ANR	187226	Argument	& root -> node		187142	0					
ANR	187227	UnaryOperationExpression	& root -> node		187142	0					
ANR	187228	UnaryOperator	&		187142	0					
ANR	187229	PtrMemberAccess	root -> node		187142	1					
ANR	187230	Identifier	root		187142	0					
ANR	187231	Identifier	node		187142	1					
ANR	187232	Argument	leaf		187142	1					
ANR	187233	Identifier	leaf		187142	0					
ANR	187234	IfStatement	if ( root -> node . parent )		187142	3					
ANR	187235	Condition	root -> node . parent	493:5:16119:16135	187142	0	True				
ANR	187236	MemberAccess	root -> node . parent		187142	0					
ANR	187237	PtrMemberAccess	root -> node		187142	0					
ANR	187238	Identifier	root		187142	0					
ANR	187239	Identifier	node		187142	1					
ANR	187240	Identifier	parent		187142	1					
ANR	187241	CompoundStatement		19:24:416:416	187142	1					
ANR	187242	IfStatement	if ( root -> node . parent -> execute_data == NULL )		187142	0					
ANR	187243	Condition	root -> node . parent -> execute_data == NULL	494:6:16146:16184	187142	0	True				
ANR	187244	EqualityExpression	root -> node . parent -> execute_data == NULL		187142	0		==			
ANR	187245	PtrMemberAccess	root -> node . parent -> execute_data		187142	0					
ANR	187246	MemberAccess	root -> node . parent		187142	0					
ANR	187247	PtrMemberAccess	root -> node		187142	0					
ANR	187248	Identifier	root		187142	0					
ANR	187249	Identifier	node		187142	1					
ANR	187250	Identifier	parent		187142	1					
ANR	187251	Identifier	execute_data		187142	1					
ANR	187252	Identifier	NULL		187142	1					
ANR	187253	CompoundStatement		20:47:465:465	187142	1					
ANR	187254	IfStatement	if ( EXPECTED ( EG ( exception ) == NULL ) )		187142	0					
ANR	187255	Condition	EXPECTED ( EG ( exception ) == NULL )	495:7:16196:16226	187142	0	True				
ANR	187256	CallExpression	EXPECTED ( EG ( exception ) == NULL )		187142	0					
ANR	187257	Callee	EXPECTED		187142	0					
ANR	187258	Identifier	EXPECTED		187142	0					
ANR	187259	ArgumentList	EG ( exception ) == NULL		187142	1					
ANR	187260	Argument	EG ( exception ) == NULL		187142	0					
ANR	187261	EqualityExpression	EG ( exception ) == NULL		187142	0		==			
ANR	187262	CallExpression	EG ( exception )		187142	0					
ANR	187263	Callee	EG		187142	0					
ANR	187264	Identifier	EG		187142	0					
ANR	187265	ArgumentList	exception		187142	1					
ANR	187266	Argument	exception		187142	0					
ANR	187267	Identifier	exception		187142	0					
ANR	187268	Identifier	NULL		187142	1					
ANR	187269	CompoundStatement		22:4:513:577	187142	1					
ANR	187270	IdentifierDeclStatement	zend_op * yield_from = ( zend_op * ) root -> execute_data -> opline - 1 ;	496:4:16235:16299	187142	0	True				
ANR	187271	IdentifierDecl	* yield_from = ( zend_op * ) root -> execute_data -> opline - 1		187142	0					
ANR	187272	IdentifierDeclType	zend_op *		187142	0					
ANR	187273	Identifier	yield_from		187142	1					
ANR	187274	AssignmentExpression	* yield_from = ( zend_op * ) root -> execute_data -> opline - 1		187142	2		=			
ANR	187275	Identifier	yield_from		187142	0					
ANR	187276	AdditiveExpression	( zend_op * ) root -> execute_data -> opline - 1		187142	1		-			
ANR	187277	CastExpression	( zend_op * ) root -> execute_data -> opline		187142	0					
ANR	187278	CastTarget	zend_op *		187142	0					
ANR	187279	PtrMemberAccess	root -> execute_data -> opline		187142	1					
ANR	187280	PtrMemberAccess	root -> execute_data		187142	0					
ANR	187281	Identifier	root		187142	0					
ANR	187282	Identifier	execute_data		187142	1					
ANR	187283	Identifier	opline		187142	1					
ANR	187284	PrimaryExpression	1		187142	1					
ANR	187285	IfStatement	if ( yield_from -> opcode == ZEND_YIELD_FROM && ! ( yield_from -> result_type & EXT_TYPE_UNUSED ) )		187142	1					
ANR	187286	Condition	yield_from -> opcode == ZEND_YIELD_FROM && ! ( yield_from -> result_type & EXT_TYPE_UNUSED )	498:8:16310:16394	187142	0	True				
ANR	187287	AndExpression	yield_from -> opcode == ZEND_YIELD_FROM && ! ( yield_from -> result_type & EXT_TYPE_UNUSED )		187142	0		&&			
ANR	187288	EqualityExpression	yield_from -> opcode == ZEND_YIELD_FROM		187142	0		==			
ANR	187289	PtrMemberAccess	yield_from -> opcode		187142	0					
ANR	187290	Identifier	yield_from		187142	0					
ANR	187291	Identifier	opcode		187142	1					
ANR	187292	Identifier	ZEND_YIELD_FROM		187142	1					
ANR	187293	UnaryOperationExpression	! ( yield_from -> result_type & EXT_TYPE_UNUSED )		187142	1					
ANR	187294	UnaryOperator	!		187142	0					
ANR	187295	BitAndExpression	yield_from -> result_type & EXT_TYPE_UNUSED		187142	1		&			
ANR	187296	PtrMemberAccess	yield_from -> result_type		187142	0					
ANR	187297	Identifier	yield_from		187142	0					
ANR	187298	Identifier	result_type		187142	1					
ANR	187299	Identifier	EXT_TYPE_UNUSED		187142	1					
ANR	187300	CompoundStatement		24:95:675:675	187142	1					
ANR	187301	IfStatement	if ( Z_ISUNDEF ( root -> node . parent -> retval ) )		187142	0					
ANR	187302	Condition	Z_ISUNDEF ( root -> node . parent -> retval )	499:9:16408:16443	187142	0	True				
ANR	187303	CallExpression	Z_ISUNDEF ( root -> node . parent -> retval )		187142	0					
ANR	187304	Callee	Z_ISUNDEF		187142	0					
ANR	187305	Identifier	Z_ISUNDEF		187142	0					
ANR	187306	ArgumentList	root -> node . parent -> retval		187142	1					
ANR	187307	Argument	root -> node . parent -> retval		187142	0					
ANR	187308	PtrMemberAccess	root -> node . parent -> retval		187142	0					
ANR	187309	MemberAccess	root -> node . parent		187142	0					
ANR	187310	PtrMemberAccess	root -> node		187142	0					
ANR	187311	Identifier	root		187142	0					
ANR	187312	Identifier	node		187142	1					
ANR	187313	Identifier	parent		187142	1					
ANR	187314	Identifier	retval		187142	1					
ANR	187315	CompoundStatement		27:6:796:863	187142	1					
ANR	187316	IdentifierDeclStatement	zend_execute_data * original_execute_data = EG ( current_execute_data ) ;	501:6:16518:16585	187142	0	True				
ANR	187317	IdentifierDecl	* original_execute_data = EG ( current_execute_data )		187142	0					
ANR	187318	IdentifierDeclType	zend_execute_data *		187142	0					
ANR	187319	Identifier	original_execute_data		187142	1					
ANR	187320	AssignmentExpression	* original_execute_data = EG ( current_execute_data )		187142	2		=			
ANR	187321	Identifier	original_execute_data		187142	0					
ANR	187322	CallExpression	EG ( current_execute_data )		187142	1					
ANR	187323	Callee	EG		187142	0					
ANR	187324	Identifier	EG		187142	0					
ANR	187325	ArgumentList	current_execute_data		187142	1					
ANR	187326	Argument	current_execute_data		187142	0					
ANR	187327	Identifier	current_execute_data		187142	0					
ANR	187328	ExpressionStatement	EG ( current_execute_data ) = root -> execute_data	502:6:16593:16638	187142	1	True				
ANR	187329	AssignmentExpression	EG ( current_execute_data ) = root -> execute_data		187142	0		=			
ANR	187330	CallExpression	EG ( current_execute_data )		187142	0					
ANR	187331	Callee	EG		187142	0					
ANR	187332	Identifier	EG		187142	0					
ANR	187333	ArgumentList	current_execute_data		187142	1					
ANR	187334	Argument	current_execute_data		187142	0					
ANR	187335	Identifier	current_execute_data		187142	0					
ANR	187336	PtrMemberAccess	root -> execute_data		187142	1					
ANR	187337	Identifier	root		187142	0					
ANR	187338	Identifier	execute_data		187142	1					
ANR	187339	IfStatement	if ( root == generator )		187142	2					
ANR	187340	Condition	root == generator	504:10:16651:16667	187142	0	True				
ANR	187341	EqualityExpression	root == generator		187142	0		==			
ANR	187342	Identifier	root		187142	0					
ANR	187343	Identifier	generator		187142	1					
ANR	187344	CompoundStatement		30:29:948:948	187142	1					
ANR	187345	ExpressionStatement	root -> execute_data -> prev_execute_data = original_execute_data	505:7:16679:16740	187142	0	True				
ANR	187346	AssignmentExpression	root -> execute_data -> prev_execute_data = original_execute_data		187142	0		=			
ANR	187347	PtrMemberAccess	root -> execute_data -> prev_execute_data		187142	0					
ANR	187348	PtrMemberAccess	root -> execute_data		187142	0					
ANR	187349	Identifier	root		187142	0					
ANR	187350	Identifier	execute_data		187142	1					
ANR	187351	Identifier	prev_execute_data		187142	1					
ANR	187352	Identifier	original_execute_data		187142	1					
ANR	187353	ElseStatement	else		187142	0					
ANR	187354	CompoundStatement		32:13:1033:1033	187142	0					
ANR	187355	ExpressionStatement	root -> execute_data -> prev_execute_data = & generator -> execute_fake	507:7:16764:16828	187142	0	True				
ANR	187356	AssignmentExpression	root -> execute_data -> prev_execute_data = & generator -> execute_fake		187142	0		=			
ANR	187357	PtrMemberAccess	root -> execute_data -> prev_execute_data		187142	0					
ANR	187358	PtrMemberAccess	root -> execute_data		187142	0					
ANR	187359	Identifier	root		187142	0					
ANR	187360	Identifier	execute_data		187142	1					
ANR	187361	Identifier	prev_execute_data		187142	1					
ANR	187362	UnaryOperationExpression	& generator -> execute_fake		187142	1					
ANR	187363	UnaryOperator	&		187142	0					
ANR	187364	PtrMemberAccess	generator -> execute_fake		187142	1					
ANR	187365	Identifier	generator		187142	0					
ANR	187366	Identifier	execute_fake		187142	1					
ANR	187367	ExpressionStatement	generator -> execute_fake . prev_execute_data = original_execute_data	508:7:16837:16902	187142	1	True				
ANR	187368	AssignmentExpression	generator -> execute_fake . prev_execute_data = original_execute_data		187142	0		=			
ANR	187369	MemberAccess	generator -> execute_fake . prev_execute_data		187142	0					
ANR	187370	PtrMemberAccess	generator -> execute_fake		187142	0					
ANR	187371	Identifier	generator		187142	0					
ANR	187372	Identifier	execute_fake		187142	1					
ANR	187373	Identifier	prev_execute_data		187142	1					
ANR	187374	Identifier	original_execute_data		187142	1					
ANR	187375	ExpressionStatement	"zend_throw_exception ( zend_ce_ClosedGeneratorException , ""Generator yielded from aborted, no return value available"" , 0 )"	511:6:16919:17037	187142	3	True				
ANR	187376	CallExpression	"zend_throw_exception ( zend_ce_ClosedGeneratorException , ""Generator yielded from aborted, no return value available"" , 0 )"		187142	0					
ANR	187377	Callee	zend_throw_exception		187142	0					
ANR	187378	Identifier	zend_throw_exception		187142	0					
ANR	187379	ArgumentList	zend_ce_ClosedGeneratorException		187142	1					
ANR	187380	Argument	zend_ce_ClosedGeneratorException		187142	0					
ANR	187381	Identifier	zend_ce_ClosedGeneratorException		187142	0					
ANR	187382	Argument	"""Generator yielded from aborted, no return value available"""		187142	1					
ANR	187383	PrimaryExpression	"""Generator yielded from aborted, no return value available"""		187142	0					
ANR	187384	Argument	0		187142	2					
ANR	187385	PrimaryExpression	0		187142	0					
ANR	187386	ExpressionStatement	EG ( current_execute_data ) = original_execute_data	513:6:17046:17094	187142	4	True				
ANR	187387	AssignmentExpression	EG ( current_execute_data ) = original_execute_data		187142	0		=			
ANR	187388	CallExpression	EG ( current_execute_data )		187142	0					
ANR	187389	Callee	EG		187142	0					
ANR	187390	Identifier	EG		187142	0					
ANR	187391	ArgumentList	current_execute_data		187142	1					
ANR	187392	Argument	current_execute_data		187142	0					
ANR	187393	Identifier	current_execute_data		187142	0					
ANR	187394	Identifier	original_execute_data		187142	1					
ANR	187395	ElseStatement	else		187142	0					
ANR	187396	CompoundStatement		40:12:1386:1386	187142	0					
ANR	187397	ExpressionStatement	"ZVAL_COPY ( & root -> value , & root -> node . parent -> value )"	515:6:17116:17166	187142	0	True				
ANR	187398	CallExpression	"ZVAL_COPY ( & root -> value , & root -> node . parent -> value )"		187142	0					
ANR	187399	Callee	ZVAL_COPY		187142	0					
ANR	187400	Identifier	ZVAL_COPY		187142	0					
ANR	187401	ArgumentList	& root -> value		187142	1					
ANR	187402	Argument	& root -> value		187142	0					
ANR	187403	UnaryOperationExpression	& root -> value		187142	0					
ANR	187404	UnaryOperator	&		187142	0					
ANR	187405	PtrMemberAccess	root -> value		187142	1					
ANR	187406	Identifier	root		187142	0					
ANR	187407	Identifier	value		187142	1					
ANR	187408	Argument	& root -> node . parent -> value		187142	1					
ANR	187409	UnaryOperationExpression	& root -> node . parent -> value		187142	0					
ANR	187410	UnaryOperator	&		187142	0					
ANR	187411	PtrMemberAccess	root -> node . parent -> value		187142	1					
ANR	187412	MemberAccess	root -> node . parent		187142	0					
ANR	187413	PtrMemberAccess	root -> node		187142	0					
ANR	187414	Identifier	root		187142	0					
ANR	187415	Identifier	node		187142	1					
ANR	187416	Identifier	parent		187142	1					
ANR	187417	Identifier	value		187142	1					
ANR	187418	ExpressionStatement	"ZVAL_COPY ( ZEND_CALL_VAR ( root -> execute_data , yield_from -> result . var ) , & root -> node . parent -> retval )"	516:6:17174:17270	187142	1	True				
ANR	187419	CallExpression	"ZVAL_COPY ( ZEND_CALL_VAR ( root -> execute_data , yield_from -> result . var ) , & root -> node . parent -> retval )"		187142	0					
ANR	187420	Callee	ZVAL_COPY		187142	0					
ANR	187421	Identifier	ZVAL_COPY		187142	0					
ANR	187422	ArgumentList	"ZEND_CALL_VAR ( root -> execute_data , yield_from -> result . var )"		187142	1					
ANR	187423	Argument	"ZEND_CALL_VAR ( root -> execute_data , yield_from -> result . var )"		187142	0					
ANR	187424	CallExpression	"ZEND_CALL_VAR ( root -> execute_data , yield_from -> result . var )"		187142	0					
ANR	187425	Callee	ZEND_CALL_VAR		187142	0					
ANR	187426	Identifier	ZEND_CALL_VAR		187142	0					
ANR	187427	ArgumentList	root -> execute_data		187142	1					
ANR	187428	Argument	root -> execute_data		187142	0					
ANR	187429	PtrMemberAccess	root -> execute_data		187142	0					
ANR	187430	Identifier	root		187142	0					
ANR	187431	Identifier	execute_data		187142	1					
ANR	187432	Argument	yield_from -> result . var		187142	1					
ANR	187433	MemberAccess	yield_from -> result . var		187142	0					
ANR	187434	PtrMemberAccess	yield_from -> result		187142	0					
ANR	187435	Identifier	yield_from		187142	0					
ANR	187436	Identifier	result		187142	1					
ANR	187437	Identifier	var		187142	1					
ANR	187438	Argument	& root -> node . parent -> retval		187142	1					
ANR	187439	UnaryOperationExpression	& root -> node . parent -> retval		187142	0					
ANR	187440	UnaryOperator	&		187142	0					
ANR	187441	PtrMemberAccess	root -> node . parent -> retval		187142	1					
ANR	187442	MemberAccess	root -> node . parent		187142	0					
ANR	187443	PtrMemberAccess	root -> node		187142	0					
ANR	187444	Identifier	root		187142	0					
ANR	187445	Identifier	node		187142	1					
ANR	187446	Identifier	parent		187142	1					
ANR	187447	Identifier	retval		187142	1					
ANR	187448	ExpressionStatement	root -> node . parent = NULL	521:3:17294:17318	187142	1	True				
ANR	187449	AssignmentExpression	root -> node . parent = NULL		187142	0		=			
ANR	187450	MemberAccess	root -> node . parent		187142	0					
ANR	187451	PtrMemberAccess	root -> node		187142	0					
ANR	187452	Identifier	root		187142	0					
ANR	187453	Identifier	node		187142	1					
ANR	187454	Identifier	parent		187142	1					
ANR	187455	Identifier	NULL		187142	1					
ANR	187456	ElseStatement	else		187142	0					
ANR	187457	CompoundStatement		48:9:1607:1607	187142	0					
ANR	187458	DoStatement	do		187142	0					
ANR	187459	CompoundStatement		49:6:1615:1615	187142	0					
ANR	187460	ExpressionStatement	root = root -> node . parent	524:4:17343:17367	187142	0	True				
ANR	187461	AssignmentExpression	root = root -> node . parent		187142	0		=			
ANR	187462	Identifier	root		187142	0					
ANR	187463	MemberAccess	root -> node . parent		187142	1					
ANR	187464	PtrMemberAccess	root -> node		187142	0					
ANR	187465	Identifier	root		187142	0					
ANR	187466	Identifier	node		187142	1					
ANR	187467	Identifier	parent		187142	1					
ANR	187468	ExpressionStatement	++ GC_REFCOUNT ( & root -> std )	525:4:17373:17398	187142	1	True				
ANR	187469	UnaryExpression	++ GC_REFCOUNT ( & root -> std )		187142	0					
ANR	187470	IncDec	++		187142	0					
ANR	187471	CallExpression	GC_REFCOUNT ( & root -> std )		187142	1					
ANR	187472	Callee	GC_REFCOUNT		187142	0					
ANR	187473	Identifier	GC_REFCOUNT		187142	0					
ANR	187474	ArgumentList	& root -> std		187142	1					
ANR	187475	Argument	& root -> std		187142	0					
ANR	187476	UnaryOperationExpression	& root -> std		187142	0					
ANR	187477	UnaryOperator	&		187142	0					
ANR	187478	PtrMemberAccess	root -> std		187142	1					
ANR	187479	Identifier	root		187142	0					
ANR	187480	Identifier	std		187142	1					
ANR	187481	Condition	root -> node . parent	526:12:17412:17428	187142	1	True				
ANR	187482	MemberAccess	root -> node . parent		187142	0					
ANR	187483	PtrMemberAccess	root -> node		187142	0					
ANR	187484	Identifier	root		187142	0					
ANR	187485	Identifier	node		187142	1					
ANR	187486	Identifier	parent		187142	1					
ANR	187487	IfStatement	if ( old_root )		187142	4					
ANR	187488	Condition	old_root	530:5:17445:17452	187142	0	True				
ANR	187489	Identifier	old_root		187142	0					
ANR	187490	CompoundStatement		56:15:1733:1733	187142	1					
ANR	187491	ExpressionStatement	OBJ_RELEASE ( & old_root -> std )	531:2:17459:17486	187142	0	True				
ANR	187492	CallExpression	OBJ_RELEASE ( & old_root -> std )		187142	0					
ANR	187493	Callee	OBJ_RELEASE		187142	0					
ANR	187494	Identifier	OBJ_RELEASE		187142	0					
ANR	187495	ArgumentList	& old_root -> std		187142	1					
ANR	187496	Argument	& old_root -> std		187142	0					
ANR	187497	UnaryOperationExpression	& old_root -> std		187142	0					
ANR	187498	UnaryOperator	&		187142	0					
ANR	187499	PtrMemberAccess	old_root -> std		187142	1					
ANR	187500	Identifier	old_root		187142	0					
ANR	187501	Identifier	std		187142	1					
ANR	187502	ReturnStatement	return leaf -> node . ptr . root = root ;	534:1:17493:17526	187142	5	True				
ANR	187503	AssignmentExpression	leaf -> node . ptr . root = root		187142	0		=			
ANR	187504	MemberAccess	leaf -> node . ptr . root		187142	0					
ANR	187505	MemberAccess	leaf -> node . ptr		187142	0					
ANR	187506	PtrMemberAccess	leaf -> node		187142	0					
ANR	187507	Identifier	leaf		187142	0					
ANR	187508	Identifier	node		187142	1					
ANR	187509	Identifier	ptr		187142	1					
ANR	187510	Identifier	root		187142	1					
ANR	187511	Identifier	root		187142	1					
ANR	187512	ReturnType	ZEND_API zend_generator *		187142	1					
ANR	187513	Identifier	zend_generator_update_current		187142	2					
ANR	187514	ParameterList	"zend_generator * generator , zend_generator * leaf"		187142	3					
ANR	187515	Parameter	zend_generator * generator	474:55:15672:15696	187142	0	True				
ANR	187516	ParameterType	zend_generator *		187142	0					
ANR	187517	Identifier	generator		187142	1					
ANR	187518	Parameter	zend_generator * leaf	474:82:15699:15718	187142	1	True				
ANR	187519	ParameterType	zend_generator *		187142	0					
ANR	187520	Identifier	leaf		187142	1					
ANR	187521	CFGEntryNode	ENTRY		187142		True				
ANR	187522	CFGExitNode	EXIT		187142		True				
ANR	187523	Symbol	zend_generator_get_child		187142						
ANR	187524	Symbol	& root -> node		187142						
ANR	187525	Symbol	exception		187142						
ANR	187526	Symbol	zend_ce_ClosedGeneratorException		187142						
ANR	187527	Symbol	yield_from -> result_type		187142						
ANR	187528	Symbol	current_execute_data		187142						
ANR	187529	Symbol	generator		187142						
ANR	187530	Symbol	leaf -> node . ptr . root		187142						
ANR	187531	Symbol	* root -> node		187142						
ANR	187532	Symbol	root -> execute_data -> prev_execute_data		187142						
ANR	187533	Symbol	& root -> value		187142						
ANR	187534	Symbol	root -> execute_data		187142						
ANR	187535	Symbol	& old_root -> std		187142						
ANR	187536	Symbol	* * root		187142						
ANR	187537	Symbol	root -> node . parent		187142						
ANR	187538	Symbol	root -> node		187142						
ANR	187539	Symbol	yield_from		187142						
ANR	187540	Symbol	* generator		187142						
ANR	187541	Symbol	root		187142						
ANR	187542	Symbol	* yield_from		187142						
ANR	187543	Symbol	yield_from -> result		187142						
ANR	187544	Symbol	generator -> execute_fake . prev_execute_data		187142						
ANR	187545	Symbol	EXT_TYPE_UNUSED		187142						
ANR	187546	Symbol	& generator -> execute_fake		187142						
ANR	187547	Symbol	& root -> node . parent -> retval		187142						
ANR	187548	Symbol	old_root		187142						
ANR	187549	Symbol	EG		187142						
ANR	187550	Symbol	* root -> execute_data		187142						
ANR	187551	Symbol	NULL		187142						
ANR	187552	Symbol	* root -> node . parent		187142						
ANR	187553	Symbol	root -> execute_data -> opline		187142						
ANR	187554	Symbol	Z_ISUNDEF		187142						
ANR	187555	Symbol	generator -> execute_fake		187142						
ANR	187556	Symbol	leaf -> node		187142						
ANR	187557	Symbol	leaf		187142						
ANR	187558	Symbol	root -> node . parent -> retval		187142						
ANR	187559	Symbol	& root -> std		187142						
ANR	187560	Symbol	leaf -> node . ptr		187142						
ANR	187561	Symbol	ZEND_CALL_VAR		187142						
ANR	187562	Symbol	* leaf		187142						
ANR	187563	Symbol	root -> node . parent -> execute_data		187142						
ANR	187564	Symbol	& root -> node . parent -> value		187142						
ANR	187565	Symbol	ZEND_YIELD_FROM		187142						
ANR	187566	Symbol	* root		187142						
ANR	187567	Symbol	yield_from -> result . var		187142						
ANR	187568	Symbol	EXPECTED		187142						
ANR	187569	Symbol	original_execute_data		187142						
ANR	187570	Symbol	yield_from -> opcode		187142						
ANR	187571	Function	zend_generator_get_next_delegated_value	537:0:17531:19492							
ANR	187572	FunctionDef	zend_generator_get_next_delegated_value (zend_generator * generator)		187571	0					
ANR	187573	CompoundStatement		538:0:17619:19492	187571	0					
ANR	187574	IdentifierDeclStatement	zval * value ;	539:1:17622:17633	187571	0	True				
ANR	187575	IdentifierDecl	* value		187571	0					
ANR	187576	IdentifierDeclType	zval *		187571	0					
ANR	187577	Identifier	value		187571	1					
ANR	187578	IfStatement	if ( Z_TYPE ( generator -> values ) == IS_ARRAY )		187571	1					
ANR	187579	Condition	Z_TYPE ( generator -> values ) == IS_ARRAY	540:5:17640:17676	187571	0	True				
ANR	187580	EqualityExpression	Z_TYPE ( generator -> values ) == IS_ARRAY		187571	0		==			
ANR	187581	CallExpression	Z_TYPE ( generator -> values )		187571	0					
ANR	187582	Callee	Z_TYPE		187571	0					
ANR	187583	Identifier	Z_TYPE		187571	0					
ANR	187584	ArgumentList	generator -> values		187571	1					
ANR	187585	Argument	generator -> values		187571	0					
ANR	187586	PtrMemberAccess	generator -> values		187571	0					
ANR	187587	Identifier	generator		187571	0					
ANR	187588	Identifier	values		187571	1					
ANR	187589	Identifier	IS_ARRAY		187571	1					
ANR	187590	CompoundStatement		7:2:158:167	187571	1					
ANR	187591	IdentifierDeclStatement	HashTable * ht = Z_ARR ( generator -> values ) ;	541:2:17683:17723	187571	0	True				
ANR	187592	IdentifierDecl	* ht = Z_ARR ( generator -> values )		187571	0					
ANR	187593	IdentifierDeclType	HashTable *		187571	0					
ANR	187594	Identifier	ht		187571	1					
ANR	187595	AssignmentExpression	* ht = Z_ARR ( generator -> values )		187571	2		=			
ANR	187596	Identifier	ht		187571	0					
ANR	187597	CallExpression	Z_ARR ( generator -> values )		187571	1					
ANR	187598	Callee	Z_ARR		187571	0					
ANR	187599	Identifier	Z_ARR		187571	0					
ANR	187600	ArgumentList	generator -> values		187571	1					
ANR	187601	Argument	generator -> values		187571	0					
ANR	187602	PtrMemberAccess	generator -> values		187571	0					
ANR	187603	Identifier	generator		187571	0					
ANR	187604	Identifier	values		187571	1					
ANR	187605	IdentifierDeclStatement	HashPosition pos = Z_FE_POS ( generator -> values ) ;	542:2:17727:17773	187571	1	True				
ANR	187606	IdentifierDecl	pos = Z_FE_POS ( generator -> values )		187571	0					
ANR	187607	IdentifierDeclType	HashPosition		187571	0					
ANR	187608	Identifier	pos		187571	1					
ANR	187609	AssignmentExpression	pos = Z_FE_POS ( generator -> values )		187571	2		=			
ANR	187610	Identifier	pos		187571	0					
ANR	187611	CallExpression	Z_FE_POS ( generator -> values )		187571	1					
ANR	187612	Callee	Z_FE_POS		187571	0					
ANR	187613	Identifier	Z_FE_POS		187571	0					
ANR	187614	ArgumentList	generator -> values		187571	1					
ANR	187615	Argument	generator -> values		187571	0					
ANR	187616	PtrMemberAccess	generator -> values		187571	0					
ANR	187617	Identifier	generator		187571	0					
ANR	187618	Identifier	values		187571	1					
ANR	187619	IdentifierDeclStatement	Bucket * p ;	544:2:17778:17787	187571	2	True				
ANR	187620	IdentifierDecl	* p		187571	0					
ANR	187621	IdentifierDeclType	Bucket *		187571	0					
ANR	187622	Identifier	p		187571	1					
ANR	187623	DoStatement	do		187571	3					
ANR	187624	CompoundStatement		8:5:174:174	187571	0					
ANR	187625	IfStatement	if ( UNEXPECTED ( pos >= ht -> nNumUsed ) )		187571	0					
ANR	187626	Condition	UNEXPECTED ( pos >= ht -> nNumUsed )	546:7:17803:17833	187571	0	True				
ANR	187627	CallExpression	UNEXPECTED ( pos >= ht -> nNumUsed )		187571	0					
ANR	187628	Callee	UNEXPECTED		187571	0					
ANR	187629	Identifier	UNEXPECTED		187571	0					
ANR	187630	ArgumentList	pos >= ht -> nNumUsed		187571	1					
ANR	187631	Argument	pos >= ht -> nNumUsed		187571	0					
ANR	187632	RelationalExpression	pos >= ht -> nNumUsed		187571	0		>=			
ANR	187633	Identifier	pos		187571	0					
ANR	187634	PtrMemberAccess	ht -> nNumUsed		187571	1					
ANR	187635	Identifier	ht		187571	0					
ANR	187636	Identifier	nNumUsed		187571	1					
ANR	187637	CompoundStatement		9:40:216:216	187571	1					
ANR	187638	GotoStatement	goto failure ;	548:4:17873:17885	187571	0	True				
ANR	187639	Identifier	failure		187571	0					
ANR	187640	ExpressionStatement	p = & ht -> arData [ pos ]	551:3:17896:17916	187571	1	True				
ANR	187641	AssignmentExpression	p = & ht -> arData [ pos ]		187571	0		=			
ANR	187642	Identifier	p		187571	0					
ANR	187643	UnaryOperationExpression	& ht -> arData [ pos ]		187571	1					
ANR	187644	UnaryOperator	&		187571	0					
ANR	187645	ArrayIndexing	ht -> arData [ pos ]		187571	1					
ANR	187646	PtrMemberAccess	ht -> arData		187571	0					
ANR	187647	Identifier	ht		187571	0					
ANR	187648	Identifier	arData		187571	1					
ANR	187649	Identifier	pos		187571	1					
ANR	187650	ExpressionStatement	value = & p -> val	552:3:17921:17936	187571	2	True				
ANR	187651	AssignmentExpression	value = & p -> val		187571	0		=			
ANR	187652	Identifier	value		187571	0					
ANR	187653	UnaryOperationExpression	& p -> val		187571	1					
ANR	187654	UnaryOperator	&		187571	0					
ANR	187655	PtrMemberAccess	p -> val		187571	1					
ANR	187656	Identifier	p		187571	0					
ANR	187657	Identifier	val		187571	1					
ANR	187658	IfStatement	if ( Z_TYPE_P ( value ) == IS_INDIRECT )		187571	3					
ANR	187659	Condition	Z_TYPE_P ( value ) == IS_INDIRECT	553:7:17945:17974	187571	0	True				
ANR	187660	EqualityExpression	Z_TYPE_P ( value ) == IS_INDIRECT		187571	0		==			
ANR	187661	CallExpression	Z_TYPE_P ( value )		187571	0					
ANR	187662	Callee	Z_TYPE_P		187571	0					
ANR	187663	Identifier	Z_TYPE_P		187571	0					
ANR	187664	ArgumentList	value		187571	1					
ANR	187665	Argument	value		187571	0					
ANR	187666	Identifier	value		187571	0					
ANR	187667	Identifier	IS_INDIRECT		187571	1					
ANR	187668	CompoundStatement		16:39:357:357	187571	1					
ANR	187669	ExpressionStatement	value = Z_INDIRECT_P ( value )	554:4:17983:18010	187571	0	True				
ANR	187670	AssignmentExpression	value = Z_INDIRECT_P ( value )		187571	0		=			
ANR	187671	Identifier	value		187571	0					
ANR	187672	CallExpression	Z_INDIRECT_P ( value )		187571	1					
ANR	187673	Callee	Z_INDIRECT_P		187571	0					
ANR	187674	Identifier	Z_INDIRECT_P		187571	0					
ANR	187675	ArgumentList	value		187571	1					
ANR	187676	Argument	value		187571	0					
ANR	187677	Identifier	value		187571	0					
ANR	187678	ExpressionStatement	pos ++	556:3:18020:18025	187571	4	True				
ANR	187679	PostIncDecOperationExpression	pos ++		187571	0					
ANR	187680	Identifier	pos		187571	0					
ANR	187681	IncDec	++		187571	1					
ANR	187682	Condition	Z_ISUNDEF_P ( value )	557:11:18038:18055	187571	1	True				
ANR	187683	CallExpression	Z_ISUNDEF_P ( value )		187571	0					
ANR	187684	Callee	Z_ISUNDEF_P		187571	0					
ANR	187685	Identifier	Z_ISUNDEF_P		187571	0					
ANR	187686	ArgumentList	value		187571	1					
ANR	187687	Argument	value		187571	0					
ANR	187688	Identifier	value		187571	0					
ANR	187689	ExpressionStatement	zval_ptr_dtor ( & generator -> value )	559:2:18062:18094	187571	4	True				
ANR	187690	CallExpression	zval_ptr_dtor ( & generator -> value )		187571	0					
ANR	187691	Callee	zval_ptr_dtor		187571	0					
ANR	187692	Identifier	zval_ptr_dtor		187571	0					
ANR	187693	ArgumentList	& generator -> value		187571	1					
ANR	187694	Argument	& generator -> value		187571	0					
ANR	187695	UnaryOperationExpression	& generator -> value		187571	0					
ANR	187696	UnaryOperator	&		187571	0					
ANR	187697	PtrMemberAccess	generator -> value		187571	1					
ANR	187698	Identifier	generator		187571	0					
ANR	187699	Identifier	value		187571	1					
ANR	187700	ExpressionStatement	"ZVAL_COPY ( & generator -> value , value )"	560:2:18098:18133	187571	5	True				
ANR	187701	CallExpression	"ZVAL_COPY ( & generator -> value , value )"		187571	0					
ANR	187702	Callee	ZVAL_COPY		187571	0					
ANR	187703	Identifier	ZVAL_COPY		187571	0					
ANR	187704	ArgumentList	& generator -> value		187571	1					
ANR	187705	Argument	& generator -> value		187571	0					
ANR	187706	UnaryOperationExpression	& generator -> value		187571	0					
ANR	187707	UnaryOperator	&		187571	0					
ANR	187708	PtrMemberAccess	generator -> value		187571	1					
ANR	187709	Identifier	generator		187571	0					
ANR	187710	Identifier	value		187571	1					
ANR	187711	Argument	value		187571	1					
ANR	187712	Identifier	value		187571	0					
ANR	187713	ExpressionStatement	zval_ptr_dtor ( & generator -> key )	562:2:18138:18168	187571	6	True				
ANR	187714	CallExpression	zval_ptr_dtor ( & generator -> key )		187571	0					
ANR	187715	Callee	zval_ptr_dtor		187571	0					
ANR	187716	Identifier	zval_ptr_dtor		187571	0					
ANR	187717	ArgumentList	& generator -> key		187571	1					
ANR	187718	Argument	& generator -> key		187571	0					
ANR	187719	UnaryOperationExpression	& generator -> key		187571	0					
ANR	187720	UnaryOperator	&		187571	0					
ANR	187721	PtrMemberAccess	generator -> key		187571	1					
ANR	187722	Identifier	generator		187571	0					
ANR	187723	Identifier	key		187571	1					
ANR	187724	IfStatement	if ( p -> key )		187571	7					
ANR	187725	Condition	p -> key	563:6:18176:18181	187571	0	True				
ANR	187726	PtrMemberAccess	p -> key		187571	0					
ANR	187727	Identifier	p		187571	0					
ANR	187728	Identifier	key		187571	1					
ANR	187729	CompoundStatement		26:14:564:564	187571	1					
ANR	187730	ExpressionStatement	"ZVAL_STR_COPY ( & generator -> key , p -> key )"	564:3:18189:18227	187571	0	True				
ANR	187731	CallExpression	"ZVAL_STR_COPY ( & generator -> key , p -> key )"		187571	0					
ANR	187732	Callee	ZVAL_STR_COPY		187571	0					
ANR	187733	Identifier	ZVAL_STR_COPY		187571	0					
ANR	187734	ArgumentList	& generator -> key		187571	1					
ANR	187735	Argument	& generator -> key		187571	0					
ANR	187736	UnaryOperationExpression	& generator -> key		187571	0					
ANR	187737	UnaryOperator	&		187571	0					
ANR	187738	PtrMemberAccess	generator -> key		187571	1					
ANR	187739	Identifier	generator		187571	0					
ANR	187740	Identifier	key		187571	1					
ANR	187741	Argument	p -> key		187571	1					
ANR	187742	PtrMemberAccess	p -> key		187571	0					
ANR	187743	Identifier	p		187571	0					
ANR	187744	Identifier	key		187571	1					
ANR	187745	ElseStatement	else		187571	0					
ANR	187746	CompoundStatement		28:9:618:618	187571	0					
ANR	187747	ExpressionStatement	"ZVAL_LONG ( & generator -> key , p -> h )"	566:3:18243:18275	187571	0	True				
ANR	187748	CallExpression	"ZVAL_LONG ( & generator -> key , p -> h )"		187571	0					
ANR	187749	Callee	ZVAL_LONG		187571	0					
ANR	187750	Identifier	ZVAL_LONG		187571	0					
ANR	187751	ArgumentList	& generator -> key		187571	1					
ANR	187752	Argument	& generator -> key		187571	0					
ANR	187753	UnaryOperationExpression	& generator -> key		187571	0					
ANR	187754	UnaryOperator	&		187571	0					
ANR	187755	PtrMemberAccess	generator -> key		187571	1					
ANR	187756	Identifier	generator		187571	0					
ANR	187757	Identifier	key		187571	1					
ANR	187758	Argument	p -> h		187571	1					
ANR	187759	PtrMemberAccess	p -> h		187571	0					
ANR	187760	Identifier	p		187571	0					
ANR	187761	Identifier	h		187571	1					
ANR	187762	ExpressionStatement	Z_FE_POS ( generator -> values ) = pos	569:2:18284:18317	187571	8	True				
ANR	187763	AssignmentExpression	Z_FE_POS ( generator -> values ) = pos		187571	0		=			
ANR	187764	CallExpression	Z_FE_POS ( generator -> values )		187571	0					
ANR	187765	Callee	Z_FE_POS		187571	0					
ANR	187766	Identifier	Z_FE_POS		187571	0					
ANR	187767	ArgumentList	generator -> values		187571	1					
ANR	187768	Argument	generator -> values		187571	0					
ANR	187769	PtrMemberAccess	generator -> values		187571	0					
ANR	187770	Identifier	generator		187571	0					
ANR	187771	Identifier	values		187571	1					
ANR	187772	Identifier	pos		187571	1					
ANR	187773	ElseStatement	else		187571	0					
ANR	187774	CompoundStatement		34:2:711:789	187571	0					
ANR	187775	IdentifierDeclStatement	zend_object_iterator * iter = ( zend_object_iterator * ) Z_OBJ ( generator -> values ) ;	571:2:18331:18409	187571	0	True				
ANR	187776	IdentifierDecl	* iter = ( zend_object_iterator * ) Z_OBJ ( generator -> values )		187571	0					
ANR	187777	IdentifierDeclType	zend_object_iterator *		187571	0					
ANR	187778	Identifier	iter		187571	1					
ANR	187779	AssignmentExpression	* iter = ( zend_object_iterator * ) Z_OBJ ( generator -> values )		187571	2		=			
ANR	187780	Identifier	iter		187571	0					
ANR	187781	CastExpression	( zend_object_iterator * ) Z_OBJ ( generator -> values )		187571	1					
ANR	187782	CastTarget	zend_object_iterator *		187571	0					
ANR	187783	CallExpression	Z_OBJ ( generator -> values )		187571	1					
ANR	187784	Callee	Z_OBJ		187571	0					
ANR	187785	Identifier	Z_OBJ		187571	0					
ANR	187786	ArgumentList	generator -> values		187571	1					
ANR	187787	Argument	generator -> values		187571	0					
ANR	187788	PtrMemberAccess	generator -> values		187571	0					
ANR	187789	Identifier	generator		187571	0					
ANR	187790	Identifier	values		187571	1					
ANR	187791	IfStatement	if ( iter -> index ++ > 0 )		187571	1					
ANR	187792	Condition	iter -> index ++ > 0	573:6:18418:18434	187571	0	True				
ANR	187793	RelationalExpression	iter -> index ++ > 0		187571	0		>			
ANR	187794	PostIncDecOperationExpression	iter -> index ++		187571	0					
ANR	187795	PtrMemberAccess	iter -> index		187571	0					
ANR	187796	Identifier	iter		187571	0					
ANR	187797	Identifier	index		187571	1					
ANR	187798	IncDec	++		187571	1					
ANR	187799	PrimaryExpression	0		187571	1					
ANR	187800	CompoundStatement		36:25:817:817	187571	1					
ANR	187801	ExpressionStatement	iter -> funcs -> move_forward ( iter )	574:3:18442:18473	187571	0	True				
ANR	187802	CallExpression	iter -> funcs -> move_forward ( iter )		187571	0					
ANR	187803	Callee	iter -> funcs -> move_forward		187571	0					
ANR	187804	PtrMemberAccess	iter -> funcs -> move_forward		187571	0					
ANR	187805	PtrMemberAccess	iter -> funcs		187571	0					
ANR	187806	Identifier	iter		187571	0					
ANR	187807	Identifier	funcs		187571	1					
ANR	187808	Identifier	move_forward		187571	1					
ANR	187809	ArgumentList	iter		187571	1					
ANR	187810	Argument	iter		187571	0					
ANR	187811	Identifier	iter		187571	0					
ANR	187812	IfStatement	if ( UNEXPECTED ( EG ( exception ) != NULL ) )		187571	1					
ANR	187813	Condition	UNEXPECTED ( EG ( exception ) != NULL )	575:7:18482:18514	187571	0	True				
ANR	187814	CallExpression	UNEXPECTED ( EG ( exception ) != NULL )		187571	0					
ANR	187815	Callee	UNEXPECTED		187571	0					
ANR	187816	Identifier	UNEXPECTED		187571	0					
ANR	187817	ArgumentList	EG ( exception ) != NULL		187571	1					
ANR	187818	Argument	EG ( exception ) != NULL		187571	0					
ANR	187819	EqualityExpression	EG ( exception ) != NULL		187571	0		!=			
ANR	187820	CallExpression	EG ( exception )		187571	0					
ANR	187821	Callee	EG		187571	0					
ANR	187822	Identifier	EG		187571	0					
ANR	187823	ArgumentList	exception		187571	1					
ANR	187824	Argument	exception		187571	0					
ANR	187825	Identifier	exception		187571	0					
ANR	187826	Identifier	NULL		187571	1					
ANR	187827	CompoundStatement		38:42:897:897	187571	1					
ANR	187828	GotoStatement	goto exception ;	576:4:18523:18537	187571	0	True				
ANR	187829	Identifier	exception		187571	0					
ANR	187830	IfStatement	if ( iter -> funcs -> valid ( iter ) == FAILURE )		187571	2					
ANR	187831	Condition	iter -> funcs -> valid ( iter ) == FAILURE	580:6:18555:18589	187571	0	True				
ANR	187832	EqualityExpression	iter -> funcs -> valid ( iter ) == FAILURE		187571	0		==			
ANR	187833	CallExpression	iter -> funcs -> valid ( iter )		187571	0					
ANR	187834	Callee	iter -> funcs -> valid		187571	0					
ANR	187835	PtrMemberAccess	iter -> funcs -> valid		187571	0					
ANR	187836	PtrMemberAccess	iter -> funcs		187571	0					
ANR	187837	Identifier	iter		187571	0					
ANR	187838	Identifier	funcs		187571	1					
ANR	187839	Identifier	valid		187571	1					
ANR	187840	ArgumentList	iter		187571	1					
ANR	187841	Argument	iter		187571	0					
ANR	187842	Identifier	iter		187571	0					
ANR	187843	Identifier	FAILURE		187571	1					
ANR	187844	CompoundStatement		43:43:972:972	187571	1					
ANR	187845	GotoStatement	goto failure ;	582:3:18631:18643	187571	0	True				
ANR	187846	Identifier	failure		187571	0					
ANR	187847	ExpressionStatement	value = iter -> funcs -> get_current_data ( iter )	585:2:18652:18695	187571	3	True				
ANR	187848	AssignmentExpression	value = iter -> funcs -> get_current_data ( iter )		187571	0		=			
ANR	187849	Identifier	value		187571	0					
ANR	187850	CallExpression	iter -> funcs -> get_current_data ( iter )		187571	1					
ANR	187851	Callee	iter -> funcs -> get_current_data		187571	0					
ANR	187852	PtrMemberAccess	iter -> funcs -> get_current_data		187571	0					
ANR	187853	PtrMemberAccess	iter -> funcs		187571	0					
ANR	187854	Identifier	iter		187571	0					
ANR	187855	Identifier	funcs		187571	1					
ANR	187856	Identifier	get_current_data		187571	1					
ANR	187857	ArgumentList	iter		187571	1					
ANR	187858	Argument	iter		187571	0					
ANR	187859	Identifier	iter		187571	0					
ANR	187860	IfStatement	if ( UNEXPECTED ( EG ( exception ) != NULL ) )		187571	4					
ANR	187861	Condition	UNEXPECTED ( EG ( exception ) != NULL )	586:6:18703:18735	187571	0	True				
ANR	187862	CallExpression	UNEXPECTED ( EG ( exception ) != NULL )		187571	0					
ANR	187863	Callee	UNEXPECTED		187571	0					
ANR	187864	Identifier	UNEXPECTED		187571	0					
ANR	187865	ArgumentList	EG ( exception ) != NULL		187571	1					
ANR	187866	Argument	EG ( exception ) != NULL		187571	0					
ANR	187867	EqualityExpression	EG ( exception ) != NULL		187571	0		!=			
ANR	187868	CallExpression	EG ( exception )		187571	0					
ANR	187869	Callee	EG		187571	0					
ANR	187870	Identifier	EG		187571	0					
ANR	187871	ArgumentList	exception		187571	1					
ANR	187872	Argument	exception		187571	0					
ANR	187873	Identifier	exception		187571	0					
ANR	187874	Identifier	NULL		187571	1					
ANR	187875	CompoundStatement		49:41:1118:1118	187571	1					
ANR	187876	GotoStatement	goto exception ;	587:3:18743:18757	187571	0	True				
ANR	187877	Identifier	exception		187571	0					
ANR	187878	ElseStatement	else		187571	0					
ANR	187879	IfStatement	if ( UNEXPECTED ( ! value ) )		187571	0					
ANR	187880	Condition	UNEXPECTED ( ! value )	588:13:18772:18789	187571	0	True				
ANR	187881	CallExpression	UNEXPECTED ( ! value )		187571	0					
ANR	187882	Callee	UNEXPECTED		187571	0					
ANR	187883	Identifier	UNEXPECTED		187571	0					
ANR	187884	ArgumentList	! value		187571	1					
ANR	187885	Argument	! value		187571	0					
ANR	187886	UnaryOperationExpression	! value		187571	0					
ANR	187887	UnaryOperator	!		187571	0					
ANR	187888	Identifier	value		187571	1					
ANR	187889	CompoundStatement		51:33:1172:1172	187571	1					
ANR	187890	GotoStatement	goto failure ;	589:3:18797:18809	187571	0	True				
ANR	187891	Identifier	failure		187571	0					
ANR	187892	ExpressionStatement	zval_ptr_dtor ( & generator -> value )	592:2:18818:18850	187571	5	True				
ANR	187893	CallExpression	zval_ptr_dtor ( & generator -> value )		187571	0					
ANR	187894	Callee	zval_ptr_dtor		187571	0					
ANR	187895	Identifier	zval_ptr_dtor		187571	0					
ANR	187896	ArgumentList	& generator -> value		187571	1					
ANR	187897	Argument	& generator -> value		187571	0					
ANR	187898	UnaryOperationExpression	& generator -> value		187571	0					
ANR	187899	UnaryOperator	&		187571	0					
ANR	187900	PtrMemberAccess	generator -> value		187571	1					
ANR	187901	Identifier	generator		187571	0					
ANR	187902	Identifier	value		187571	1					
ANR	187903	ExpressionStatement	"ZVAL_COPY ( & generator -> value , value )"	593:2:18854:18889	187571	6	True				
ANR	187904	CallExpression	"ZVAL_COPY ( & generator -> value , value )"		187571	0					
ANR	187905	Callee	ZVAL_COPY		187571	0					
ANR	187906	Identifier	ZVAL_COPY		187571	0					
ANR	187907	ArgumentList	& generator -> value		187571	1					
ANR	187908	Argument	& generator -> value		187571	0					
ANR	187909	UnaryOperationExpression	& generator -> value		187571	0					
ANR	187910	UnaryOperator	&		187571	0					
ANR	187911	PtrMemberAccess	generator -> value		187571	1					
ANR	187912	Identifier	generator		187571	0					
ANR	187913	Identifier	value		187571	1					
ANR	187914	Argument	value		187571	1					
ANR	187915	Identifier	value		187571	0					
ANR	187916	ExpressionStatement	zval_ptr_dtor ( & generator -> key )	595:2:18894:18924	187571	7	True				
ANR	187917	CallExpression	zval_ptr_dtor ( & generator -> key )		187571	0					
ANR	187918	Callee	zval_ptr_dtor		187571	0					
ANR	187919	Identifier	zval_ptr_dtor		187571	0					
ANR	187920	ArgumentList	& generator -> key		187571	1					
ANR	187921	Argument	& generator -> key		187571	0					
ANR	187922	UnaryOperationExpression	& generator -> key		187571	0					
ANR	187923	UnaryOperator	&		187571	0					
ANR	187924	PtrMemberAccess	generator -> key		187571	1					
ANR	187925	Identifier	generator		187571	0					
ANR	187926	Identifier	key		187571	1					
ANR	187927	IfStatement	if ( iter -> funcs -> get_current_key )		187571	8					
ANR	187928	Condition	iter -> funcs -> get_current_key	596:6:18932:18959	187571	0	True				
ANR	187929	PtrMemberAccess	iter -> funcs -> get_current_key		187571	0					
ANR	187930	PtrMemberAccess	iter -> funcs		187571	0					
ANR	187931	Identifier	iter		187571	0					
ANR	187932	Identifier	funcs		187571	1					
ANR	187933	Identifier	get_current_key		187571	1					
ANR	187934	CompoundStatement		59:36:1342:1342	187571	1					
ANR	187935	ExpressionStatement	"iter -> funcs -> get_current_key ( iter , & generator -> key )"	597:3:18967:19018	187571	0	True				
ANR	187936	CallExpression	"iter -> funcs -> get_current_key ( iter , & generator -> key )"		187571	0					
ANR	187937	Callee	iter -> funcs -> get_current_key		187571	0					
ANR	187938	PtrMemberAccess	iter -> funcs -> get_current_key		187571	0					
ANR	187939	PtrMemberAccess	iter -> funcs		187571	0					
ANR	187940	Identifier	iter		187571	0					
ANR	187941	Identifier	funcs		187571	1					
ANR	187942	Identifier	get_current_key		187571	1					
ANR	187943	ArgumentList	iter		187571	1					
ANR	187944	Argument	iter		187571	0					
ANR	187945	Identifier	iter		187571	0					
ANR	187946	Argument	& generator -> key		187571	1					
ANR	187947	UnaryOperationExpression	& generator -> key		187571	0					
ANR	187948	UnaryOperator	&		187571	0					
ANR	187949	PtrMemberAccess	generator -> key		187571	1					
ANR	187950	Identifier	generator		187571	0					
ANR	187951	Identifier	key		187571	1					
ANR	187952	IfStatement	if ( UNEXPECTED ( EG ( exception ) != NULL ) )		187571	1					
ANR	187953	Condition	UNEXPECTED ( EG ( exception ) != NULL )	598:7:19027:19059	187571	0	True				
ANR	187954	CallExpression	UNEXPECTED ( EG ( exception ) != NULL )		187571	0					
ANR	187955	Callee	UNEXPECTED		187571	0					
ANR	187956	Identifier	UNEXPECTED		187571	0					
ANR	187957	ArgumentList	EG ( exception ) != NULL		187571	1					
ANR	187958	Argument	EG ( exception ) != NULL		187571	0					
ANR	187959	EqualityExpression	EG ( exception ) != NULL		187571	0		!=			
ANR	187960	CallExpression	EG ( exception )		187571	0					
ANR	187961	Callee	EG		187571	0					
ANR	187962	Identifier	EG		187571	0					
ANR	187963	ArgumentList	exception		187571	1					
ANR	187964	Argument	exception		187571	0					
ANR	187965	Identifier	exception		187571	0					
ANR	187966	Identifier	NULL		187571	1					
ANR	187967	CompoundStatement		61:42:1442:1442	187571	1					
ANR	187968	ExpressionStatement	ZVAL_UNDEF ( & generator -> key )	599:4:19068:19095	187571	0	True				
ANR	187969	CallExpression	ZVAL_UNDEF ( & generator -> key )		187571	0					
ANR	187970	Callee	ZVAL_UNDEF		187571	0					
ANR	187971	Identifier	ZVAL_UNDEF		187571	0					
ANR	187972	ArgumentList	& generator -> key		187571	1					
ANR	187973	Argument	& generator -> key		187571	0					
ANR	187974	UnaryOperationExpression	& generator -> key		187571	0					
ANR	187975	UnaryOperator	&		187571	0					
ANR	187976	PtrMemberAccess	generator -> key		187571	1					
ANR	187977	Identifier	generator		187571	0					
ANR	187978	Identifier	key		187571	1					
ANR	187979	GotoStatement	goto exception ;	600:4:19101:19115	187571	1	True				
ANR	187980	Identifier	exception		187571	0					
ANR	187981	ElseStatement	else		187571	0					
ANR	187982	CompoundStatement		65:9:1511:1511	187571	0					
ANR	187983	ExpressionStatement	"ZVAL_LONG ( & generator -> key , iter -> index )"	603:3:19136:19175	187571	0	True				
ANR	187984	CallExpression	"ZVAL_LONG ( & generator -> key , iter -> index )"		187571	0					
ANR	187985	Callee	ZVAL_LONG		187571	0					
ANR	187986	Identifier	ZVAL_LONG		187571	0					
ANR	187987	ArgumentList	& generator -> key		187571	1					
ANR	187988	Argument	& generator -> key		187571	0					
ANR	187989	UnaryOperationExpression	& generator -> key		187571	0					
ANR	187990	UnaryOperator	&		187571	0					
ANR	187991	PtrMemberAccess	generator -> key		187571	1					
ANR	187992	Identifier	generator		187571	0					
ANR	187993	Identifier	key		187571	1					
ANR	187994	Argument	iter -> index		187571	1					
ANR	187995	PtrMemberAccess	iter -> index		187571	0					
ANR	187996	Identifier	iter		187571	0					
ANR	187997	Identifier	index		187571	1					
ANR	187998	ReturnStatement	return SUCCESS ;	606:1:19185:19199	187571	2	True				
ANR	187999	Identifier	SUCCESS		187571	0					
ANR	188000	Label	exception :	608:0:19202:19211	187571	3	True				
ANR	188001	Identifier	exception		187571	0					
ANR	188002	CompoundStatement		72:2:1597:1645	187571	4					
ANR	188003	IdentifierDeclStatement	zend_execute_data * ex = EG ( current_execute_data ) ;	609:2:19217:19265	187571	0	True				
ANR	188004	IdentifierDecl	* ex = EG ( current_execute_data )		187571	0					
ANR	188005	IdentifierDeclType	zend_execute_data *		187571	0					
ANR	188006	Identifier	ex		187571	1					
ANR	188007	AssignmentExpression	* ex = EG ( current_execute_data )		187571	2		=			
ANR	188008	Identifier	ex		187571	0					
ANR	188009	CallExpression	EG ( current_execute_data )		187571	1					
ANR	188010	Callee	EG		187571	0					
ANR	188011	Identifier	EG		187571	0					
ANR	188012	ArgumentList	current_execute_data		187571	1					
ANR	188013	Argument	current_execute_data		187571	0					
ANR	188014	Identifier	current_execute_data		187571	0					
ANR	188015	ExpressionStatement	EG ( current_execute_data ) = generator -> execute_data	610:2:19269:19319	187571	1	True				
ANR	188016	AssignmentExpression	EG ( current_execute_data ) = generator -> execute_data		187571	0		=			
ANR	188017	CallExpression	EG ( current_execute_data )		187571	0					
ANR	188018	Callee	EG		187571	0					
ANR	188019	Identifier	EG		187571	0					
ANR	188020	ArgumentList	current_execute_data		187571	1					
ANR	188021	Argument	current_execute_data		187571	0					
ANR	188022	Identifier	current_execute_data		187571	0					
ANR	188023	PtrMemberAccess	generator -> execute_data		187571	1					
ANR	188024	Identifier	generator		187571	0					
ANR	188025	Identifier	execute_data		187571	1					
ANR	188026	ExpressionStatement	zend_throw_exception_internal ( NULL )	611:2:19323:19358	187571	2	True				
ANR	188027	CallExpression	zend_throw_exception_internal ( NULL )		187571	0					
ANR	188028	Callee	zend_throw_exception_internal		187571	0					
ANR	188029	Identifier	zend_throw_exception_internal		187571	0					
ANR	188030	ArgumentList	NULL		187571	1					
ANR	188031	Argument	NULL		187571	0					
ANR	188032	Identifier	NULL		187571	0					
ANR	188033	ExpressionStatement	EG ( current_execute_data ) = ex	612:2:19362:19391	187571	3	True				
ANR	188034	AssignmentExpression	EG ( current_execute_data ) = ex		187571	0		=			
ANR	188035	CallExpression	EG ( current_execute_data )		187571	0					
ANR	188036	Callee	EG		187571	0					
ANR	188037	Identifier	EG		187571	0					
ANR	188038	ArgumentList	current_execute_data		187571	1					
ANR	188039	Argument	current_execute_data		187571	0					
ANR	188040	Identifier	current_execute_data		187571	0					
ANR	188041	Identifier	ex		187571	1					
ANR	188042	Label	failure :	615:0:19397:19404	187571	5	True				
ANR	188043	Identifier	failure		187571	0					
ANR	188044	ExpressionStatement	zval_ptr_dtor ( & generator -> values )	616:1:19407:19440	187571	6	True				
ANR	188045	CallExpression	zval_ptr_dtor ( & generator -> values )		187571	0					
ANR	188046	Callee	zval_ptr_dtor		187571	0					
ANR	188047	Identifier	zval_ptr_dtor		187571	0					
ANR	188048	ArgumentList	& generator -> values		187571	1					
ANR	188049	Argument	& generator -> values		187571	0					
ANR	188050	UnaryOperationExpression	& generator -> values		187571	0					
ANR	188051	UnaryOperator	&		187571	0					
ANR	188052	PtrMemberAccess	generator -> values		187571	1					
ANR	188053	Identifier	generator		187571	0					
ANR	188054	Identifier	values		187571	1					
ANR	188055	ExpressionStatement	ZVAL_UNDEF ( & generator -> values )	617:1:19443:19473	187571	7	True				
ANR	188056	CallExpression	ZVAL_UNDEF ( & generator -> values )		187571	0					
ANR	188057	Callee	ZVAL_UNDEF		187571	0					
ANR	188058	Identifier	ZVAL_UNDEF		187571	0					
ANR	188059	ArgumentList	& generator -> values		187571	1					
ANR	188060	Argument	& generator -> values		187571	0					
ANR	188061	UnaryOperationExpression	& generator -> values		187571	0					
ANR	188062	UnaryOperator	&		187571	0					
ANR	188063	PtrMemberAccess	generator -> values		187571	1					
ANR	188064	Identifier	generator		187571	0					
ANR	188065	Identifier	values		187571	1					
ANR	188066	ReturnStatement	return FAILURE ;	618:1:19476:19490	187571	8	True				
ANR	188067	Identifier	FAILURE		187571	0					
ANR	188068	ReturnType	static int		187571	1					
ANR	188069	Identifier	zend_generator_get_next_delegated_value		187571	2					
ANR	188070	ParameterList	zend_generator * generator		187571	3					
ANR	188071	Parameter	zend_generator * generator	537:51:17582:17606	187571	0	True				
ANR	188072	ParameterType	zend_generator *		187571	0					
ANR	188073	Identifier	generator		187571	1					
ANR	188074	CFGEntryNode	ENTRY		187571		True				
ANR	188075	CFGExitNode	EXIT		187571		True				
ANR	188076	Symbol	exception		187571						
ANR	188077	Symbol	iter -> funcs -> get_current_data		187571						
ANR	188078	Symbol	iter -> funcs -> get_current_key		187571						
ANR	188079	Symbol	current_execute_data		187571						
ANR	188080	Symbol	generator		187571						
ANR	188081	Symbol	Z_TYPE		187571						
ANR	188082	Symbol	ht -> arData		187571						
ANR	188083	Symbol	Z_INDIRECT_P		187571						
ANR	188084	Symbol	iter -> funcs -> valid		187571						
ANR	188085	Symbol	ht		187571						
ANR	188086	Symbol	iter -> index		187571						
ANR	188087	Symbol	UNEXPECTED		187571						
ANR	188088	Symbol	& generator -> value		187571						
ANR	188089	Symbol	* ht		187571						
ANR	188090	Symbol	* iter		187571						
ANR	188091	Symbol	Z_OBJ		187571						
ANR	188092	Symbol	* generator		187571						
ANR	188093	Symbol	IS_ARRAY		187571						
ANR	188094	Symbol	pos		187571						
ANR	188095	Symbol	& generator -> values		187571						
ANR	188096	Symbol	* * iter		187571						
ANR	188097	Symbol	value		187571						
ANR	188098	Symbol	p -> h		187571						
ANR	188099	Symbol	& p -> val		187571						
ANR	188100	Symbol	EG		187571						
ANR	188101	Symbol	NULL		187571						
ANR	188102	Symbol	SUCCESS		187571						
ANR	188103	Symbol	generator -> values		187571						
ANR	188104	Symbol	iter		187571						
ANR	188105	Symbol	* iter -> funcs		187571						
ANR	188106	Symbol	Z_TYPE_P		187571						
ANR	188107	Symbol	FAILURE		187571						
ANR	188108	Symbol	p -> key		187571						
ANR	188109	Symbol	p		187571						
ANR	188110	Symbol	generator -> execute_data		187571						
ANR	188111	Symbol	ex		187571						
ANR	188112	Symbol	iter -> funcs		187571						
ANR	188113	Symbol	Z_ISUNDEF_P		187571						
ANR	188114	Symbol	* p		187571						
ANR	188115	Symbol	Z_ARR		187571						
ANR	188116	Symbol	Z_FE_POS		187571						
ANR	188117	Symbol	& generator -> key		187571						
ANR	188118	Symbol	ht -> nNumUsed		187571						
ANR	188119	Symbol	IS_INDIRECT		187571						
ANR	188120	Function	zend_generator_resume	622:0:19505:23122							
ANR	188121	FunctionDef	zend_generator_resume (zend_generator * orig_generator)		188120	0					
ANR	188122	CompoundStatement		623:0:19583:23122	188120	0					
ANR	188123	IdentifierDeclStatement	zend_generator * generator ;	624:1:19586:19611	188120	0	True				
ANR	188124	IdentifierDecl	* generator		188120	0					
ANR	188125	IdentifierDeclType	zend_generator *		188120	0					
ANR	188126	Identifier	generator		188120	1					
ANR	188127	IfStatement	if ( UNEXPECTED ( ! orig_generator -> execute_data ) )		188120	1					
ANR	188128	Condition	UNEXPECTED ( ! orig_generator -> execute_data )	627:5:19677:19717	188120	0	True				
ANR	188129	CallExpression	UNEXPECTED ( ! orig_generator -> execute_data )		188120	0					
ANR	188130	Callee	UNEXPECTED		188120	0					
ANR	188131	Identifier	UNEXPECTED		188120	0					
ANR	188132	ArgumentList	! orig_generator -> execute_data		188120	1					
ANR	188133	Argument	! orig_generator -> execute_data		188120	0					
ANR	188134	UnaryOperationExpression	! orig_generator -> execute_data		188120	0					
ANR	188135	UnaryOperator	!		188120	0					
ANR	188136	PtrMemberAccess	orig_generator -> execute_data		188120	1					
ANR	188137	Identifier	orig_generator		188120	0					
ANR	188138	Identifier	execute_data		188120	1					
ANR	188139	CompoundStatement		5:48:136:136	188120	1					
ANR	188140	ReturnStatement	return ;	628:2:19724:19730	188120	0	True				
ANR	188141	ExpressionStatement	generator = zend_generator_get_current ( orig_generator )	631:1:19737:19791	188120	2	True				
ANR	188142	AssignmentExpression	generator = zend_generator_get_current ( orig_generator )		188120	0		=			
ANR	188143	Identifier	generator		188120	0					
ANR	188144	CallExpression	zend_generator_get_current ( orig_generator )		188120	1					
ANR	188145	Callee	zend_generator_get_current		188120	0					
ANR	188146	Identifier	zend_generator_get_current		188120	0					
ANR	188147	ArgumentList	orig_generator		188120	1					
ANR	188148	Argument	orig_generator		188120	0					
ANR	188149	Identifier	orig_generator		188120	0					
ANR	188150	Label	try_again :	633:0:19794:19803	188120	3	True				
ANR	188151	Identifier	try_again		188120	0					
ANR	188152	IfStatement	if ( generator -> flags & ZEND_GENERATOR_CURRENTLY_RUNNING )		188120	4					
ANR	188153	Condition	generator -> flags & ZEND_GENERATOR_CURRENTLY_RUNNING	634:5:19810:19860	188120	0	True				
ANR	188154	BitAndExpression	generator -> flags & ZEND_GENERATOR_CURRENTLY_RUNNING		188120	0		&			
ANR	188155	PtrMemberAccess	generator -> flags		188120	0					
ANR	188156	Identifier	generator		188120	0					
ANR	188157	Identifier	flags		188120	1					
ANR	188158	Identifier	ZEND_GENERATOR_CURRENTLY_RUNNING		188120	1					
ANR	188159	CompoundStatement		12:58:279:279	188120	1					
ANR	188160	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot resume an already running generator"" )"	635:2:19867:19935	188120	0	True				
ANR	188161	CallExpression	"zend_throw_error ( NULL , ""Cannot resume an already running generator"" )"		188120	0					
ANR	188162	Callee	zend_throw_error		188120	0					
ANR	188163	Identifier	zend_throw_error		188120	0					
ANR	188164	ArgumentList	NULL		188120	1					
ANR	188165	Argument	NULL		188120	0					
ANR	188166	Identifier	NULL		188120	0					
ANR	188167	Argument	"""Cannot resume an already running generator"""		188120	1					
ANR	188168	PrimaryExpression	"""Cannot resume an already running generator"""		188120	0					
ANR	188169	ReturnStatement	return ;	636:2:19939:19945	188120	1	True				
ANR	188170	IfStatement	if ( UNEXPECTED ( ( orig_generator -> flags & ZEND_GENERATOR_DO_INIT ) != 0 && ! Z_ISUNDEF ( generator -> value ) ) )		188120	5					
ANR	188171	Condition	UNEXPECTED ( ( orig_generator -> flags & ZEND_GENERATOR_DO_INIT ) != 0 && ! Z_ISUNDEF ( generator -> value ) )	639:5:19956:20052	188120	0	True				
ANR	188172	CallExpression	UNEXPECTED ( ( orig_generator -> flags & ZEND_GENERATOR_DO_INIT ) != 0 && ! Z_ISUNDEF ( generator -> value ) )		188120	0					
ANR	188173	Callee	UNEXPECTED		188120	0					
ANR	188174	Identifier	UNEXPECTED		188120	0					
ANR	188175	ArgumentList	( orig_generator -> flags & ZEND_GENERATOR_DO_INIT ) != 0 && ! Z_ISUNDEF ( generator -> value )		188120	1					
ANR	188176	Argument	( orig_generator -> flags & ZEND_GENERATOR_DO_INIT ) != 0 && ! Z_ISUNDEF ( generator -> value )		188120	0					
ANR	188177	AndExpression	( orig_generator -> flags & ZEND_GENERATOR_DO_INIT ) != 0 && ! Z_ISUNDEF ( generator -> value )		188120	0		&&			
ANR	188178	EqualityExpression	( orig_generator -> flags & ZEND_GENERATOR_DO_INIT ) != 0		188120	0		!=			
ANR	188179	BitAndExpression	orig_generator -> flags & ZEND_GENERATOR_DO_INIT		188120	0		&			
ANR	188180	PtrMemberAccess	orig_generator -> flags		188120	0					
ANR	188181	Identifier	orig_generator		188120	0					
ANR	188182	Identifier	flags		188120	1					
ANR	188183	Identifier	ZEND_GENERATOR_DO_INIT		188120	1					
ANR	188184	PrimaryExpression	0		188120	1					
ANR	188185	UnaryOperationExpression	! Z_ISUNDEF ( generator -> value )		188120	1					
ANR	188186	UnaryOperator	!		188120	0					
ANR	188187	CallExpression	Z_ISUNDEF ( generator -> value )		188120	1					
ANR	188188	Callee	Z_ISUNDEF		188120	0					
ANR	188189	Identifier	Z_ISUNDEF		188120	0					
ANR	188190	ArgumentList	generator -> value		188120	1					
ANR	188191	Argument	generator -> value		188120	0					
ANR	188192	PtrMemberAccess	generator -> value		188120	0					
ANR	188193	Identifier	generator		188120	0					
ANR	188194	Identifier	value		188120	1					
ANR	188195	CompoundStatement		17:104:471:471	188120	1					
ANR	188196	ReturnStatement	return ;	641:2:20146:20152	188120	0	True				
ANR	188197	IfStatement	if ( UNEXPECTED ( ! Z_ISUNDEF ( generator -> values ) ) )		188120	6					
ANR	188198	Condition	UNEXPECTED ( ! Z_ISUNDEF ( generator -> values ) )	644:5:20163:20203	188120	0	True				
ANR	188199	CallExpression	UNEXPECTED ( ! Z_ISUNDEF ( generator -> values ) )		188120	0					
ANR	188200	Callee	UNEXPECTED		188120	0					
ANR	188201	Identifier	UNEXPECTED		188120	0					
ANR	188202	ArgumentList	! Z_ISUNDEF ( generator -> values )		188120	1					
ANR	188203	Argument	! Z_ISUNDEF ( generator -> values )		188120	0					
ANR	188204	UnaryOperationExpression	! Z_ISUNDEF ( generator -> values )		188120	0					
ANR	188205	UnaryOperator	!		188120	0					
ANR	188206	CallExpression	Z_ISUNDEF ( generator -> values )		188120	1					
ANR	188207	Callee	Z_ISUNDEF		188120	0					
ANR	188208	Identifier	Z_ISUNDEF		188120	0					
ANR	188209	ArgumentList	generator -> values		188120	1					
ANR	188210	Argument	generator -> values		188120	0					
ANR	188211	PtrMemberAccess	generator -> values		188120	0					
ANR	188212	Identifier	generator		188120	0					
ANR	188213	Identifier	values		188120	1					
ANR	188214	CompoundStatement		22:48:622:622	188120	1					
ANR	188215	IfStatement	if ( EXPECTED ( zend_generator_get_next_delegated_value ( generator ) == SUCCESS ) )		188120	0					
ANR	188216	Condition	EXPECTED ( zend_generator_get_next_delegated_value ( generator ) == SUCCESS )	645:6:20214:20284	188120	0	True				
ANR	188217	CallExpression	EXPECTED ( zend_generator_get_next_delegated_value ( generator ) == SUCCESS )		188120	0					
ANR	188218	Callee	EXPECTED		188120	0					
ANR	188219	Identifier	EXPECTED		188120	0					
ANR	188220	ArgumentList	zend_generator_get_next_delegated_value ( generator ) == SUCCESS		188120	1					
ANR	188221	Argument	zend_generator_get_next_delegated_value ( generator ) == SUCCESS		188120	0					
ANR	188222	EqualityExpression	zend_generator_get_next_delegated_value ( generator ) == SUCCESS		188120	0		==			
ANR	188223	CallExpression	zend_generator_get_next_delegated_value ( generator )		188120	0					
ANR	188224	Callee	zend_generator_get_next_delegated_value		188120	0					
ANR	188225	Identifier	zend_generator_get_next_delegated_value		188120	0					
ANR	188226	ArgumentList	generator		188120	1					
ANR	188227	Argument	generator		188120	0					
ANR	188228	Identifier	generator		188120	0					
ANR	188229	Identifier	SUCCESS		188120	1					
ANR	188230	CompoundStatement		23:79:703:703	188120	1					
ANR	188231	ReturnStatement	return ;	646:3:20292:20298	188120	0	True				
ANR	188232	ExpressionStatement	orig_generator -> flags &= ~ZEND_GENERATOR_AT_FIRST_YIELD	653:1:20455:20510	188120	7	True				
ANR	188233	AssignmentExpression	orig_generator -> flags &= ~ZEND_GENERATOR_AT_FIRST_YIELD		188120	0		&=			
ANR	188234	PtrMemberAccess	orig_generator -> flags		188120	0					
ANR	188235	Identifier	orig_generator		188120	0					
ANR	188236	Identifier	flags		188120	1					
ANR	188237	Identifier	~ZEND_GENERATOR_AT_FIRST_YIELD		188120	1					
ANR	188238	CompoundStatement		37:2:1085:1128	188120	8					
ANR	188239	IdentifierDeclStatement	zend_execute_data * original_execute_data = EG ( current_execute_data ) ;	657:2:20550:20617	188120	0	True				
ANR	188240	IdentifierDecl	* original_execute_data = EG ( current_execute_data )		188120	0					
ANR	188241	IdentifierDeclType	zend_execute_data *		188120	0					
ANR	188242	Identifier	original_execute_data		188120	1					
ANR	188243	AssignmentExpression	* original_execute_data = EG ( current_execute_data )		188120	2		=			
ANR	188244	Identifier	original_execute_data		188120	0					
ANR	188245	CallExpression	EG ( current_execute_data )		188120	1					
ANR	188246	Callee	EG		188120	0					
ANR	188247	Identifier	EG		188120	0					
ANR	188248	ArgumentList	current_execute_data		188120	1					
ANR	188249	Argument	current_execute_data		188120	0					
ANR	188250	Identifier	current_execute_data		188120	0					
ANR	188251	IdentifierDeclStatement	zend_class_entry * original_scope = EG ( scope ) ;	658:2:20621:20665	188120	1	True				
ANR	188252	IdentifierDecl	* original_scope = EG ( scope )		188120	0					
ANR	188253	IdentifierDeclType	zend_class_entry *		188120	0					
ANR	188254	Identifier	original_scope		188120	1					
ANR	188255	AssignmentExpression	* original_scope = EG ( scope )		188120	2		=			
ANR	188256	Identifier	original_scope		188120	0					
ANR	188257	CallExpression	EG ( scope )		188120	1					
ANR	188258	Callee	EG		188120	0					
ANR	188259	Identifier	EG		188120	0					
ANR	188260	ArgumentList	scope		188120	1					
ANR	188261	Argument	scope		188120	0					
ANR	188262	Identifier	scope		188120	0					
ANR	188263	IdentifierDeclStatement	zend_vm_stack original_stack = EG ( vm_stack ) ;	659:2:20669:20712	188120	2	True				
ANR	188264	IdentifierDecl	original_stack = EG ( vm_stack )		188120	0					
ANR	188265	IdentifierDeclType	zend_vm_stack		188120	0					
ANR	188266	Identifier	original_stack		188120	1					
ANR	188267	AssignmentExpression	original_stack = EG ( vm_stack )		188120	2		=			
ANR	188268	Identifier	original_stack		188120	0					
ANR	188269	CallExpression	EG ( vm_stack )		188120	1					
ANR	188270	Callee	EG		188120	0					
ANR	188271	Identifier	EG		188120	0					
ANR	188272	ArgumentList	vm_stack		188120	1					
ANR	188273	Argument	vm_stack		188120	0					
ANR	188274	Identifier	vm_stack		188120	0					
ANR	188275	ExpressionStatement	original_stack -> top = EG ( vm_stack_top )	660:2:20716:20754	188120	3	True				
ANR	188276	AssignmentExpression	original_stack -> top = EG ( vm_stack_top )		188120	0		=			
ANR	188277	PtrMemberAccess	original_stack -> top		188120	0					
ANR	188278	Identifier	original_stack		188120	0					
ANR	188279	Identifier	top		188120	1					
ANR	188280	CallExpression	EG ( vm_stack_top )		188120	1					
ANR	188281	Callee	EG		188120	0					
ANR	188282	Identifier	EG		188120	0					
ANR	188283	ArgumentList	vm_stack_top		188120	1					
ANR	188284	Argument	vm_stack_top		188120	0					
ANR	188285	Identifier	vm_stack_top		188120	0					
ANR	188286	ExpressionStatement	EG ( current_execute_data ) = generator -> execute_data	663:2:20788:20838	188120	4	True				
ANR	188287	AssignmentExpression	EG ( current_execute_data ) = generator -> execute_data		188120	0		=			
ANR	188288	CallExpression	EG ( current_execute_data )		188120	0					
ANR	188289	Callee	EG		188120	0					
ANR	188290	Identifier	EG		188120	0					
ANR	188291	ArgumentList	current_execute_data		188120	1					
ANR	188292	Argument	current_execute_data		188120	0					
ANR	188293	Identifier	current_execute_data		188120	0					
ANR	188294	PtrMemberAccess	generator -> execute_data		188120	1					
ANR	188295	Identifier	generator		188120	0					
ANR	188296	Identifier	execute_data		188120	1					
ANR	188297	ExpressionStatement	EG ( scope ) = generator -> execute_data -> func -> common . scope	664:2:20842:20897	188120	5	True				
ANR	188298	AssignmentExpression	EG ( scope ) = generator -> execute_data -> func -> common . scope		188120	0		=			
ANR	188299	CallExpression	EG ( scope )		188120	0					
ANR	188300	Callee	EG		188120	0					
ANR	188301	Identifier	EG		188120	0					
ANR	188302	ArgumentList	scope		188120	1					
ANR	188303	Argument	scope		188120	0					
ANR	188304	Identifier	scope		188120	0					
ANR	188305	MemberAccess	generator -> execute_data -> func -> common . scope		188120	1					
ANR	188306	PtrMemberAccess	generator -> execute_data -> func -> common		188120	0					
ANR	188307	PtrMemberAccess	generator -> execute_data -> func		188120	0					
ANR	188308	PtrMemberAccess	generator -> execute_data		188120	0					
ANR	188309	Identifier	generator		188120	0					
ANR	188310	Identifier	execute_data		188120	1					
ANR	188311	Identifier	func		188120	1					
ANR	188312	Identifier	common		188120	1					
ANR	188313	Identifier	scope		188120	1					
ANR	188314	ExpressionStatement	EG ( vm_stack_top ) = generator -> stack -> top	665:2:20901:20941	188120	6	True				
ANR	188315	AssignmentExpression	EG ( vm_stack_top ) = generator -> stack -> top		188120	0		=			
ANR	188316	CallExpression	EG ( vm_stack_top )		188120	0					
ANR	188317	Callee	EG		188120	0					
ANR	188318	Identifier	EG		188120	0					
ANR	188319	ArgumentList	vm_stack_top		188120	1					
ANR	188320	Argument	vm_stack_top		188120	0					
ANR	188321	Identifier	vm_stack_top		188120	0					
ANR	188322	PtrMemberAccess	generator -> stack -> top		188120	1					
ANR	188323	PtrMemberAccess	generator -> stack		188120	0					
ANR	188324	Identifier	generator		188120	0					
ANR	188325	Identifier	stack		188120	1					
ANR	188326	Identifier	top		188120	1					
ANR	188327	ExpressionStatement	EG ( vm_stack_end ) = generator -> stack -> end	666:2:20945:20985	188120	7	True				
ANR	188328	AssignmentExpression	EG ( vm_stack_end ) = generator -> stack -> end		188120	0		=			
ANR	188329	CallExpression	EG ( vm_stack_end )		188120	0					
ANR	188330	Callee	EG		188120	0					
ANR	188331	Identifier	EG		188120	0					
ANR	188332	ArgumentList	vm_stack_end		188120	1					
ANR	188333	Argument	vm_stack_end		188120	0					
ANR	188334	Identifier	vm_stack_end		188120	0					
ANR	188335	PtrMemberAccess	generator -> stack -> end		188120	1					
ANR	188336	PtrMemberAccess	generator -> stack		188120	0					
ANR	188337	Identifier	generator		188120	0					
ANR	188338	Identifier	stack		188120	1					
ANR	188339	Identifier	end		188120	1					
ANR	188340	ExpressionStatement	EG ( vm_stack ) = generator -> stack	667:2:20989:21020	188120	8	True				
ANR	188341	AssignmentExpression	EG ( vm_stack ) = generator -> stack		188120	0		=			
ANR	188342	CallExpression	EG ( vm_stack )		188120	0					
ANR	188343	Callee	EG		188120	0					
ANR	188344	Identifier	EG		188120	0					
ANR	188345	ArgumentList	vm_stack		188120	1					
ANR	188346	Argument	vm_stack		188120	0					
ANR	188347	Identifier	vm_stack		188120	0					
ANR	188348	PtrMemberAccess	generator -> stack		188120	1					
ANR	188349	Identifier	generator		188120	0					
ANR	188350	Identifier	stack		188120	1					
ANR	188351	IfStatement	if ( generator == orig_generator )		188120	9					
ANR	188352	Condition	generator == orig_generator	672:6:21240:21266	188120	0	True				
ANR	188353	EqualityExpression	generator == orig_generator		188120	0		==			
ANR	188354	Identifier	generator		188120	0					
ANR	188355	Identifier	orig_generator		188120	1					
ANR	188356	CompoundStatement		50:35:1685:1685	188120	1					
ANR	188357	ExpressionStatement	generator -> execute_data -> prev_execute_data = original_execute_data	673:3:21274:21340	188120	0	True				
ANR	188358	AssignmentExpression	generator -> execute_data -> prev_execute_data = original_execute_data		188120	0		=			
ANR	188359	PtrMemberAccess	generator -> execute_data -> prev_execute_data		188120	0					
ANR	188360	PtrMemberAccess	generator -> execute_data		188120	0					
ANR	188361	Identifier	generator		188120	0					
ANR	188362	Identifier	execute_data		188120	1					
ANR	188363	Identifier	prev_execute_data		188120	1					
ANR	188364	Identifier	original_execute_data		188120	1					
ANR	188365	ElseStatement	else		188120	0					
ANR	188366	CompoundStatement		52:9:1767:1767	188120	0					
ANR	188367	ExpressionStatement	generator -> execute_data -> prev_execute_data = & orig_generator -> execute_fake	677:3:21474:21548	188120	0	True				
ANR	188368	AssignmentExpression	generator -> execute_data -> prev_execute_data = & orig_generator -> execute_fake		188120	0		=			
ANR	188369	PtrMemberAccess	generator -> execute_data -> prev_execute_data		188120	0					
ANR	188370	PtrMemberAccess	generator -> execute_data		188120	0					
ANR	188371	Identifier	generator		188120	0					
ANR	188372	Identifier	execute_data		188120	1					
ANR	188373	Identifier	prev_execute_data		188120	1					
ANR	188374	UnaryOperationExpression	& orig_generator -> execute_fake		188120	1					
ANR	188375	UnaryOperator	&		188120	0					
ANR	188376	PtrMemberAccess	orig_generator -> execute_fake		188120	1					
ANR	188377	Identifier	orig_generator		188120	0					
ANR	188378	Identifier	execute_fake		188120	1					
ANR	188379	ExpressionStatement	orig_generator -> execute_fake . prev_execute_data = original_execute_data	678:3:21553:21623	188120	1	True				
ANR	188380	AssignmentExpression	orig_generator -> execute_fake . prev_execute_data = original_execute_data		188120	0		=			
ANR	188381	MemberAccess	orig_generator -> execute_fake . prev_execute_data		188120	0					
ANR	188382	PtrMemberAccess	orig_generator -> execute_fake		188120	0					
ANR	188383	Identifier	orig_generator		188120	0					
ANR	188384	Identifier	execute_fake		188120	1					
ANR	188385	Identifier	prev_execute_data		188120	1					
ANR	188386	Identifier	original_execute_data		188120	1					
ANR	188387	ExpressionStatement	generator -> flags |= ZEND_GENERATOR_CURRENTLY_RUNNING	682:2:21657:21709	188120	10	True				
ANR	188388	AssignmentExpression	generator -> flags |= ZEND_GENERATOR_CURRENTLY_RUNNING		188120	0		|=			
ANR	188389	PtrMemberAccess	generator -> flags		188120	0					
ANR	188390	Identifier	generator		188120	0					
ANR	188391	Identifier	flags		188120	1					
ANR	188392	Identifier	ZEND_GENERATOR_CURRENTLY_RUNNING		188120	1					
ANR	188393	ExpressionStatement	zend_execute_ex ( generator -> execute_data )	683:2:21713:21753	188120	11	True				
ANR	188394	CallExpression	zend_execute_ex ( generator -> execute_data )		188120	0					
ANR	188395	Callee	zend_execute_ex		188120	0					
ANR	188396	Identifier	zend_execute_ex		188120	0					
ANR	188397	ArgumentList	generator -> execute_data		188120	1					
ANR	188398	Argument	generator -> execute_data		188120	0					
ANR	188399	PtrMemberAccess	generator -> execute_data		188120	0					
ANR	188400	Identifier	generator		188120	0					
ANR	188401	Identifier	execute_data		188120	1					
ANR	188402	ExpressionStatement	generator -> flags &= ~ZEND_GENERATOR_CURRENTLY_RUNNING	684:2:21757:21810	188120	12	True				
ANR	188403	AssignmentExpression	generator -> flags &= ~ZEND_GENERATOR_CURRENTLY_RUNNING		188120	0		&=			
ANR	188404	PtrMemberAccess	generator -> flags		188120	0					
ANR	188405	Identifier	generator		188120	0					
ANR	188406	Identifier	flags		188120	1					
ANR	188407	Identifier	~ZEND_GENERATOR_CURRENTLY_RUNNING		188120	1					
ANR	188408	IfStatement	if ( EXPECTED ( generator -> execute_data ) )		188120	13					
ANR	188409	Condition	EXPECTED ( generator -> execute_data )	687:6:21895:21927	188120	0	True				
ANR	188410	CallExpression	EXPECTED ( generator -> execute_data )		188120	0					
ANR	188411	Callee	EXPECTED		188120	0					
ANR	188412	Identifier	EXPECTED		188120	0					
ANR	188413	ArgumentList	generator -> execute_data		188120	1					
ANR	188414	Argument	generator -> execute_data		188120	0					
ANR	188415	PtrMemberAccess	generator -> execute_data		188120	0					
ANR	188416	Identifier	generator		188120	0					
ANR	188417	Identifier	execute_data		188120	1					
ANR	188418	CompoundStatement		65:41:2346:2346	188120	1					
ANR	188419	ExpressionStatement	generator -> stack = EG ( vm_stack )	688:3:21935:21966	188120	0	True				
ANR	188420	AssignmentExpression	generator -> stack = EG ( vm_stack )		188120	0		=			
ANR	188421	PtrMemberAccess	generator -> stack		188120	0					
ANR	188422	Identifier	generator		188120	0					
ANR	188423	Identifier	stack		188120	1					
ANR	188424	CallExpression	EG ( vm_stack )		188120	1					
ANR	188425	Callee	EG		188120	0					
ANR	188426	Identifier	EG		188120	0					
ANR	188427	ArgumentList	vm_stack		188120	1					
ANR	188428	Argument	vm_stack		188120	0					
ANR	188429	Identifier	vm_stack		188120	0					
ANR	188430	ExpressionStatement	generator -> stack -> top = EG ( vm_stack_top )	689:3:21971:22011	188120	1	True				
ANR	188431	AssignmentExpression	generator -> stack -> top = EG ( vm_stack_top )		188120	0		=			
ANR	188432	PtrMemberAccess	generator -> stack -> top		188120	0					
ANR	188433	PtrMemberAccess	generator -> stack		188120	0					
ANR	188434	Identifier	generator		188120	0					
ANR	188435	Identifier	stack		188120	1					
ANR	188436	Identifier	top		188120	1					
ANR	188437	CallExpression	EG ( vm_stack_top )		188120	1					
ANR	188438	Callee	EG		188120	0					
ANR	188439	Identifier	EG		188120	0					
ANR	188440	ArgumentList	vm_stack_top		188120	1					
ANR	188441	Argument	vm_stack_top		188120	0					
ANR	188442	Identifier	vm_stack_top		188120	0					
ANR	188443	ExpressionStatement	EG ( current_execute_data ) = original_execute_data	693:2:22053:22101	188120	14	True				
ANR	188444	AssignmentExpression	EG ( current_execute_data ) = original_execute_data		188120	0		=			
ANR	188445	CallExpression	EG ( current_execute_data )		188120	0					
ANR	188446	Callee	EG		188120	0					
ANR	188447	Identifier	EG		188120	0					
ANR	188448	ArgumentList	current_execute_data		188120	1					
ANR	188449	Argument	current_execute_data		188120	0					
ANR	188450	Identifier	current_execute_data		188120	0					
ANR	188451	Identifier	original_execute_data		188120	1					
ANR	188452	ExpressionStatement	EG ( scope ) = original_scope	694:2:22105:22131	188120	15	True				
ANR	188453	AssignmentExpression	EG ( scope ) = original_scope		188120	0		=			
ANR	188454	CallExpression	EG ( scope )		188120	0					
ANR	188455	Callee	EG		188120	0					
ANR	188456	Identifier	EG		188120	0					
ANR	188457	ArgumentList	scope		188120	1					
ANR	188458	Argument	scope		188120	0					
ANR	188459	Identifier	scope		188120	0					
ANR	188460	Identifier	original_scope		188120	1					
ANR	188461	ExpressionStatement	EG ( vm_stack_top ) = original_stack -> top	695:2:22135:22173	188120	16	True				
ANR	188462	AssignmentExpression	EG ( vm_stack_top ) = original_stack -> top		188120	0		=			
ANR	188463	CallExpression	EG ( vm_stack_top )		188120	0					
ANR	188464	Callee	EG		188120	0					
ANR	188465	Identifier	EG		188120	0					
ANR	188466	ArgumentList	vm_stack_top		188120	1					
ANR	188467	Argument	vm_stack_top		188120	0					
ANR	188468	Identifier	vm_stack_top		188120	0					
ANR	188469	PtrMemberAccess	original_stack -> top		188120	1					
ANR	188470	Identifier	original_stack		188120	0					
ANR	188471	Identifier	top		188120	1					
ANR	188472	ExpressionStatement	EG ( vm_stack_end ) = original_stack -> end	696:2:22177:22215	188120	17	True				
ANR	188473	AssignmentExpression	EG ( vm_stack_end ) = original_stack -> end		188120	0		=			
ANR	188474	CallExpression	EG ( vm_stack_end )		188120	0					
ANR	188475	Callee	EG		188120	0					
ANR	188476	Identifier	EG		188120	0					
ANR	188477	ArgumentList	vm_stack_end		188120	1					
ANR	188478	Argument	vm_stack_end		188120	0					
ANR	188479	Identifier	vm_stack_end		188120	0					
ANR	188480	PtrMemberAccess	original_stack -> end		188120	1					
ANR	188481	Identifier	original_stack		188120	0					
ANR	188482	Identifier	end		188120	1					
ANR	188483	ExpressionStatement	EG ( vm_stack ) = original_stack	697:2:22219:22248	188120	18	True				
ANR	188484	AssignmentExpression	EG ( vm_stack ) = original_stack		188120	0		=			
ANR	188485	CallExpression	EG ( vm_stack )		188120	0					
ANR	188486	Callee	EG		188120	0					
ANR	188487	Identifier	EG		188120	0					
ANR	188488	ArgumentList	vm_stack		188120	1					
ANR	188489	Argument	vm_stack		188120	0					
ANR	188490	Identifier	vm_stack		188120	0					
ANR	188491	Identifier	original_stack		188120	1					
ANR	188492	IfStatement	if ( UNEXPECTED ( EG ( exception ) != NULL ) )		188120	19					
ANR	188493	Condition	UNEXPECTED ( EG ( exception ) != NULL )	703:6:22496:22528	188120	0	True				
ANR	188494	CallExpression	UNEXPECTED ( EG ( exception ) != NULL )		188120	0					
ANR	188495	Callee	UNEXPECTED		188120	0					
ANR	188496	Identifier	UNEXPECTED		188120	0					
ANR	188497	ArgumentList	EG ( exception ) != NULL		188120	1					
ANR	188498	Argument	EG ( exception ) != NULL		188120	0					
ANR	188499	EqualityExpression	EG ( exception ) != NULL		188120	0		!=			
ANR	188500	CallExpression	EG ( exception )		188120	0					
ANR	188501	Callee	EG		188120	0					
ANR	188502	Identifier	EG		188120	0					
ANR	188503	ArgumentList	exception		188120	1					
ANR	188504	Argument	exception		188120	0					
ANR	188505	Identifier	exception		188120	0					
ANR	188506	Identifier	NULL		188120	1					
ANR	188507	CompoundStatement		81:41:2947:2947	188120	1					
ANR	188508	IfStatement	if ( generator == orig_generator )		188120	0					
ANR	188509	Condition	generator == orig_generator	704:7:22540:22566	188120	0	True				
ANR	188510	EqualityExpression	generator == orig_generator		188120	0		==			
ANR	188511	Identifier	generator		188120	0					
ANR	188512	Identifier	orig_generator		188120	1					
ANR	188513	CompoundStatement		82:36:2985:2985	188120	1					
ANR	188514	ExpressionStatement	"zend_generator_close ( generator , 0 )"	705:4:22575:22609	188120	0	True				
ANR	188515	CallExpression	"zend_generator_close ( generator , 0 )"		188120	0					
ANR	188516	Callee	zend_generator_close		188120	0					
ANR	188517	Identifier	zend_generator_close		188120	0					
ANR	188518	ArgumentList	generator		188120	1					
ANR	188519	Argument	generator		188120	0					
ANR	188520	Identifier	generator		188120	0					
ANR	188521	Argument	0		188120	1					
ANR	188522	PrimaryExpression	0		188120	0					
ANR	188523	ExpressionStatement	zend_throw_exception_internal ( NULL )	706:4:22615:22650	188120	1	True				
ANR	188524	CallExpression	zend_throw_exception_internal ( NULL )		188120	0					
ANR	188525	Callee	zend_throw_exception_internal		188120	0					
ANR	188526	Identifier	zend_throw_exception_internal		188120	0					
ANR	188527	ArgumentList	NULL		188120	1					
ANR	188528	Argument	NULL		188120	0					
ANR	188529	Identifier	NULL		188120	0					
ANR	188530	ElseStatement	else		188120	0					
ANR	188531	CompoundStatement		85:10:3078:3078	188120	0					
ANR	188532	ExpressionStatement	generator = zend_generator_get_current ( orig_generator )	708:4:22668:22722	188120	0	True				
ANR	188533	AssignmentExpression	generator = zend_generator_get_current ( orig_generator )		188120	0		=			
ANR	188534	Identifier	generator		188120	0					
ANR	188535	CallExpression	zend_generator_get_current ( orig_generator )		188120	1					
ANR	188536	Callee	zend_generator_get_current		188120	0					
ANR	188537	Identifier	zend_generator_get_current		188120	0					
ANR	188538	ArgumentList	orig_generator		188120	1					
ANR	188539	Argument	orig_generator		188120	0					
ANR	188540	Identifier	orig_generator		188120	0					
ANR	188541	ExpressionStatement	"zend_generator_throw_exception ( generator , NULL )"	709:4:22728:22775	188120	1	True				
ANR	188542	CallExpression	"zend_generator_throw_exception ( generator , NULL )"		188120	0					
ANR	188543	Callee	zend_generator_throw_exception		188120	0					
ANR	188544	Identifier	zend_generator_throw_exception		188120	0					
ANR	188545	ArgumentList	generator		188120	1					
ANR	188546	Argument	generator		188120	0					
ANR	188547	Identifier	generator		188120	0					
ANR	188548	Argument	NULL		188120	1					
ANR	188549	Identifier	NULL		188120	0					
ANR	188550	GotoStatement	goto try_again ;	710:4:22781:22795	188120	2	True				
ANR	188551	Identifier	try_again		188120	0					
ANR	188552	IfStatement	if ( UNEXPECTED ( ( generator != orig_generator && ! Z_ISUNDEF ( generator -> retval ) ) || ( generator -> execute_data && ( generator -> execute_data -> opline - 1 ) -> opcode == ZEND_YIELD_FROM ) ) )		188120	20					
ANR	188553	Condition	UNEXPECTED ( ( generator != orig_generator && ! Z_ISUNDEF ( generator -> retval ) ) || ( generator -> execute_data && ( generator -> execute_data -> opline - 1 ) -> opcode == ZEND_YIELD_FROM ) )	715:6:22862:23032	188120	0	True				
ANR	188554	CallExpression	UNEXPECTED ( ( generator != orig_generator && ! Z_ISUNDEF ( generator -> retval ) ) || ( generator -> execute_data && ( generator -> execute_data -> opline - 1 ) -> opcode == ZEND_YIELD_FROM ) )		188120	0					
ANR	188555	Callee	UNEXPECTED		188120	0					
ANR	188556	Identifier	UNEXPECTED		188120	0					
ANR	188557	ArgumentList	( generator != orig_generator && ! Z_ISUNDEF ( generator -> retval ) ) || ( generator -> execute_data && ( generator -> execute_data -> opline - 1 ) -> opcode == ZEND_YIELD_FROM )		188120	1					
ANR	188558	Argument	( generator != orig_generator && ! Z_ISUNDEF ( generator -> retval ) ) || ( generator -> execute_data && ( generator -> execute_data -> opline - 1 ) -> opcode == ZEND_YIELD_FROM )		188120	0					
ANR	188559	OrExpression	( generator != orig_generator && ! Z_ISUNDEF ( generator -> retval ) ) || ( generator -> execute_data && ( generator -> execute_data -> opline - 1 ) -> opcode == ZEND_YIELD_FROM )		188120	0		||			
ANR	188560	AndExpression	generator != orig_generator && ! Z_ISUNDEF ( generator -> retval )		188120	0		&&			
ANR	188561	EqualityExpression	generator != orig_generator		188120	0		!=			
ANR	188562	Identifier	generator		188120	0					
ANR	188563	Identifier	orig_generator		188120	1					
ANR	188564	UnaryOperationExpression	! Z_ISUNDEF ( generator -> retval )		188120	1					
ANR	188565	UnaryOperator	!		188120	0					
ANR	188566	CallExpression	Z_ISUNDEF ( generator -> retval )		188120	1					
ANR	188567	Callee	Z_ISUNDEF		188120	0					
ANR	188568	Identifier	Z_ISUNDEF		188120	0					
ANR	188569	ArgumentList	generator -> retval		188120	1					
ANR	188570	Argument	generator -> retval		188120	0					
ANR	188571	PtrMemberAccess	generator -> retval		188120	0					
ANR	188572	Identifier	generator		188120	0					
ANR	188573	Identifier	retval		188120	1					
ANR	188574	AndExpression	generator -> execute_data && ( generator -> execute_data -> opline - 1 ) -> opcode == ZEND_YIELD_FROM		188120	1		&&			
ANR	188575	PtrMemberAccess	generator -> execute_data		188120	0					
ANR	188576	Identifier	generator		188120	0					
ANR	188577	Identifier	execute_data		188120	1					
ANR	188578	EqualityExpression	( generator -> execute_data -> opline - 1 ) -> opcode == ZEND_YIELD_FROM		188120	1		==			
ANR	188579	PtrMemberAccess	( generator -> execute_data -> opline - 1 ) -> opcode		188120	0					
ANR	188580	AdditiveExpression	generator -> execute_data -> opline - 1		188120	0		-			
ANR	188581	PtrMemberAccess	generator -> execute_data -> opline		188120	0					
ANR	188582	PtrMemberAccess	generator -> execute_data		188120	0					
ANR	188583	Identifier	generator		188120	0					
ANR	188584	Identifier	execute_data		188120	1					
ANR	188585	Identifier	opline		188120	1					
ANR	188586	PrimaryExpression	1		188120	1					
ANR	188587	Identifier	opcode		188120	1					
ANR	188588	Identifier	ZEND_YIELD_FROM		188120	1					
ANR	188589	CompoundStatement		93:179:3451:3451	188120	1					
ANR	188590	ExpressionStatement	generator = zend_generator_get_current ( orig_generator )	716:3:23040:23094	188120	0	True				
ANR	188591	AssignmentExpression	generator = zend_generator_get_current ( orig_generator )		188120	0		=			
ANR	188592	Identifier	generator		188120	0					
ANR	188593	CallExpression	zend_generator_get_current ( orig_generator )		188120	1					
ANR	188594	Callee	zend_generator_get_current		188120	0					
ANR	188595	Identifier	zend_generator_get_current		188120	0					
ANR	188596	ArgumentList	orig_generator		188120	1					
ANR	188597	Argument	orig_generator		188120	0					
ANR	188598	Identifier	orig_generator		188120	0					
ANR	188599	GotoStatement	goto try_again ;	717:3:23099:23113	188120	1	True				
ANR	188600	Identifier	try_again		188120	0					
ANR	188601	ReturnType	ZEND_API void		188120	1					
ANR	188602	Identifier	zend_generator_resume		188120	2					
ANR	188603	ParameterList	zend_generator * orig_generator		188120	3					
ANR	188604	Parameter	zend_generator * orig_generator	622:36:19541:19570	188120	0	True				
ANR	188605	ParameterType	zend_generator *		188120	0					
ANR	188606	Identifier	orig_generator		188120	1					
ANR	188607	CFGEntryNode	ENTRY		188120		True				
ANR	188608	CFGExitNode	EXIT		188120		True				
ANR	188609	Symbol	exception		188120						
ANR	188610	Symbol	current_execute_data		188120						
ANR	188611	Symbol	generator -> value		188120						
ANR	188612	Symbol	( generator -> execute_data -> opline - 1 ) -> opcode		188120						
ANR	188613	Symbol	ZEND_GENERATOR_DO_INIT		188120						
ANR	188614	Symbol	generator -> flags		188120						
ANR	188615	Symbol	* orig_generator		188120						
ANR	188616	Symbol	vm_stack_top		188120						
ANR	188617	Symbol	* generator		188120						
ANR	188618	Symbol	orig_generator -> execute_fake		188120						
ANR	188619	Symbol	vm_stack_end		188120						
ANR	188620	Symbol	original_scope		188120						
ANR	188621	Symbol	original_stack		188120						
ANR	188622	Symbol	& orig_generator -> execute_fake		188120						
ANR	188623	Symbol	EG		188120						
ANR	188624	Symbol	generator -> execute_data -> func -> common		188120						
ANR	188625	Symbol	NULL		188120						
ANR	188626	Symbol	* generator -> stack		188120						
ANR	188627	Symbol	generator -> execute_data -> func -> common . scope		188120						
ANR	188628	Symbol	generator -> stack -> end		188120						
ANR	188629	Symbol	original_stack -> top		188120						
ANR	188630	Symbol	generator -> stack -> top		188120						
ANR	188631	Symbol	* original_stack		188120						
ANR	188632	Symbol	generator -> execute_data		188120						
ANR	188633	Symbol	* generator -> execute_data -> opline		188120						
ANR	188634	Symbol	generator -> execute_data -> prev_execute_data		188120						
ANR	188635	Symbol	original_stack -> end		188120						
ANR	188636	Symbol	original_execute_data		188120						
ANR	188637	Symbol	generator -> execute_data -> opline		188120						
ANR	188638	Symbol	zend_generator_get_next_delegated_value		188120						
ANR	188639	Symbol	* generator -> execute_data		188120						
ANR	188640	Symbol	orig_generator -> execute_data		188120						
ANR	188641	Symbol	generator -> stack		188120						
ANR	188642	Symbol	* generator -> execute_data -> func		188120						
ANR	188643	Symbol	generator		188120						
ANR	188644	Symbol	* * * generator		188120						
ANR	188645	Symbol	ZEND_GENERATOR_CURRENTLY_RUNNING		188120						
ANR	188646	Symbol	UNEXPECTED		188120						
ANR	188647	Symbol	scope		188120						
ANR	188648	Symbol	generator -> retval		188120						
ANR	188649	Symbol	orig_generator -> execute_fake . prev_execute_data		188120						
ANR	188650	Symbol	generator -> execute_data -> func		188120						
ANR	188651	Symbol	SUCCESS		188120						
ANR	188652	Symbol	~ZEND_GENERATOR_CURRENTLY_RUNNING		188120						
ANR	188653	Symbol	* * generator		188120						
ANR	188654	Symbol	Z_ISUNDEF		188120						
ANR	188655	Symbol	generator -> values		188120						
ANR	188656	Symbol	orig_generator		188120						
ANR	188657	Symbol	orig_generator -> flags		188120						
ANR	188658	Symbol	* * generator -> execute_data		188120						
ANR	188659	Symbol	zend_generator_get_current		188120						
ANR	188660	Symbol	vm_stack		188120						
ANR	188661	Symbol	~ZEND_GENERATOR_AT_FIRST_YIELD		188120						
ANR	188662	Symbol	ZEND_YIELD_FROM		188120						
ANR	188663	Symbol	EXPECTED		188120						
ANR	188664	Function	zend_generator_ensure_initialized	723:19:23154:23550							
ANR	188665	FunctionDef	zend_generator_ensure_initialized (zend_generator * generator)		188664	0					
ANR	188666	CompoundStatement		724:0:23225:23550	188664	0					
ANR	188667	IfStatement	if ( UNEXPECTED ( Z_TYPE ( generator -> value ) == IS_UNDEF ) && EXPECTED ( generator -> execute_data ) && EXPECTED ( generator -> node . parent == NULL ) )		188664	0					
ANR	188668	Condition	UNEXPECTED ( Z_TYPE ( generator -> value ) == IS_UNDEF ) && EXPECTED ( generator -> execute_data ) && EXPECTED ( generator -> node . parent == NULL )	725:5:23232:23360	188664	0	True				
ANR	188669	AndExpression	UNEXPECTED ( Z_TYPE ( generator -> value ) == IS_UNDEF ) && EXPECTED ( generator -> execute_data ) && EXPECTED ( generator -> node . parent == NULL )		188664	0		&&			
ANR	188670	CallExpression	UNEXPECTED ( Z_TYPE ( generator -> value ) == IS_UNDEF )		188664	0					
ANR	188671	Callee	UNEXPECTED		188664	0					
ANR	188672	Identifier	UNEXPECTED		188664	0					
ANR	188673	ArgumentList	Z_TYPE ( generator -> value ) == IS_UNDEF		188664	1					
ANR	188674	Argument	Z_TYPE ( generator -> value ) == IS_UNDEF		188664	0					
ANR	188675	EqualityExpression	Z_TYPE ( generator -> value ) == IS_UNDEF		188664	0		==			
ANR	188676	CallExpression	Z_TYPE ( generator -> value )		188664	0					
ANR	188677	Callee	Z_TYPE		188664	0					
ANR	188678	Identifier	Z_TYPE		188664	0					
ANR	188679	ArgumentList	generator -> value		188664	1					
ANR	188680	Argument	generator -> value		188664	0					
ANR	188681	PtrMemberAccess	generator -> value		188664	0					
ANR	188682	Identifier	generator		188664	0					
ANR	188683	Identifier	value		188664	1					
ANR	188684	Identifier	IS_UNDEF		188664	1					
ANR	188685	AndExpression	EXPECTED ( generator -> execute_data ) && EXPECTED ( generator -> node . parent == NULL )		188664	1		&&			
ANR	188686	CallExpression	EXPECTED ( generator -> execute_data )		188664	0					
ANR	188687	Callee	EXPECTED		188664	0					
ANR	188688	Identifier	EXPECTED		188664	0					
ANR	188689	ArgumentList	generator -> execute_data		188664	1					
ANR	188690	Argument	generator -> execute_data		188664	0					
ANR	188691	PtrMemberAccess	generator -> execute_data		188664	0					
ANR	188692	Identifier	generator		188664	0					
ANR	188693	Identifier	execute_data		188664	1					
ANR	188694	CallExpression	EXPECTED ( generator -> node . parent == NULL )		188664	1					
ANR	188695	Callee	EXPECTED		188664	0					
ANR	188696	Identifier	EXPECTED		188664	0					
ANR	188697	ArgumentList	generator -> node . parent == NULL		188664	1					
ANR	188698	Argument	generator -> node . parent == NULL		188664	0					
ANR	188699	EqualityExpression	generator -> node . parent == NULL		188664	0		==			
ANR	188700	MemberAccess	generator -> node . parent		188664	0					
ANR	188701	PtrMemberAccess	generator -> node		188664	0					
ANR	188702	Identifier	generator		188664	0					
ANR	188703	Identifier	node		188664	1					
ANR	188704	Identifier	parent		188664	1					
ANR	188705	Identifier	NULL		188664	1					
ANR	188706	CompoundStatement		2:136:137:137	188664	1					
ANR	188707	ExpressionStatement	generator -> flags |= ZEND_GENERATOR_DO_INIT	726:2:23367:23409	188664	0	True				
ANR	188708	AssignmentExpression	generator -> flags |= ZEND_GENERATOR_DO_INIT		188664	0		|=			
ANR	188709	PtrMemberAccess	generator -> flags		188664	0					
ANR	188710	Identifier	generator		188664	0					
ANR	188711	Identifier	flags		188664	1					
ANR	188712	Identifier	ZEND_GENERATOR_DO_INIT		188664	1					
ANR	188713	ExpressionStatement	zend_generator_resume ( generator )	727:2:23413:23445	188664	1	True				
ANR	188714	CallExpression	zend_generator_resume ( generator )		188664	0					
ANR	188715	Callee	zend_generator_resume		188664	0					
ANR	188716	Identifier	zend_generator_resume		188664	0					
ANR	188717	ArgumentList	generator		188664	1					
ANR	188718	Argument	generator		188664	0					
ANR	188719	Identifier	generator		188664	0					
ANR	188720	ExpressionStatement	generator -> flags &= ~ZEND_GENERATOR_DO_INIT	728:2:23449:23492	188664	2	True				
ANR	188721	AssignmentExpression	generator -> flags &= ~ZEND_GENERATOR_DO_INIT		188664	0		&=			
ANR	188722	PtrMemberAccess	generator -> flags		188664	0					
ANR	188723	Identifier	generator		188664	0					
ANR	188724	Identifier	flags		188664	1					
ANR	188725	Identifier	~ZEND_GENERATOR_DO_INIT		188664	1					
ANR	188726	ExpressionStatement	generator -> flags |= ZEND_GENERATOR_AT_FIRST_YIELD	729:2:23496:23545	188664	3	True				
ANR	188727	AssignmentExpression	generator -> flags |= ZEND_GENERATOR_AT_FIRST_YIELD		188664	0		|=			
ANR	188728	PtrMemberAccess	generator -> flags		188664	0					
ANR	188729	Identifier	generator		188664	0					
ANR	188730	Identifier	flags		188664	1					
ANR	188731	Identifier	ZEND_GENERATOR_AT_FIRST_YIELD		188664	1					
ANR	188732	Identifier	zend_generator_ensure_initialized		188664	1					
ANR	188733	ParameterList	zend_generator * generator		188664	2					
ANR	188734	Parameter	zend_generator * generator	723:53:23188:23212	188664	0	True				
ANR	188735	ParameterType	zend_generator *		188664	0					
ANR	188736	Identifier	generator		188664	1					
ANR	188737	CFGEntryNode	ENTRY		188664		True				
ANR	188738	CFGExitNode	EXIT		188664		True				
ANR	188739	Symbol	NULL		188664						
ANR	188740	Symbol	generator -> value		188664						
ANR	188741	Symbol	generator		188664						
ANR	188742	Symbol	Z_TYPE		188664						
ANR	188743	Symbol	generator -> node		188664						
ANR	188744	Symbol	ZEND_GENERATOR_DO_INIT		188664						
ANR	188745	Symbol	generator -> flags		188664						
ANR	188746	Symbol	UNEXPECTED		188664						
ANR	188747	Symbol	generator -> execute_data		188664						
ANR	188748	Symbol	* generator		188664						
ANR	188749	Symbol	generator -> node . parent		188664						
ANR	188750	Symbol	~ZEND_GENERATOR_DO_INIT		188664						
ANR	188751	Symbol	ZEND_GENERATOR_AT_FIRST_YIELD		188664						
ANR	188752	Symbol	EXPECTED		188664						
ANR	188753	Symbol	IS_UNDEF		188664						
ANR	188754	Function	zend_generator_rewind	734:19:23582:23837							
ANR	188755	FunctionDef	zend_generator_rewind (zend_generator * generator)		188754	0					
ANR	188756	CompoundStatement		735:0:23641:23837	188754	0					
ANR	188757	ExpressionStatement	zend_generator_ensure_initialized ( generator )	736:1:23644:23688	188754	0	True				
ANR	188758	CallExpression	zend_generator_ensure_initialized ( generator )		188754	0					
ANR	188759	Callee	zend_generator_ensure_initialized		188754	0					
ANR	188760	Identifier	zend_generator_ensure_initialized		188754	0					
ANR	188761	ArgumentList	generator		188754	1					
ANR	188762	Argument	generator		188754	0					
ANR	188763	Identifier	generator		188754	0					
ANR	188764	IfStatement	if ( ! ( generator -> flags & ZEND_GENERATOR_AT_FIRST_YIELD ) )		188754	1					
ANR	188765	Condition	! ( generator -> flags & ZEND_GENERATOR_AT_FIRST_YIELD )	738:5:23696:23746	188754	0	True				
ANR	188766	UnaryOperationExpression	! ( generator -> flags & ZEND_GENERATOR_AT_FIRST_YIELD )		188754	0					
ANR	188767	UnaryOperator	!		188754	0					
ANR	188768	BitAndExpression	generator -> flags & ZEND_GENERATOR_AT_FIRST_YIELD		188754	1		&			
ANR	188769	PtrMemberAccess	generator -> flags		188754	0					
ANR	188770	Identifier	generator		188754	0					
ANR	188771	Identifier	flags		188754	1					
ANR	188772	Identifier	ZEND_GENERATOR_AT_FIRST_YIELD		188754	1					
ANR	188773	CompoundStatement		4:58:107:107	188754	1					
ANR	188774	ExpressionStatement	"zend_throw_exception ( NULL , ""Cannot rewind a generator that was already run"" , 0 )"	739:2:23753:23832	188754	0	True				
ANR	188775	CallExpression	"zend_throw_exception ( NULL , ""Cannot rewind a generator that was already run"" , 0 )"		188754	0					
ANR	188776	Callee	zend_throw_exception		188754	0					
ANR	188777	Identifier	zend_throw_exception		188754	0					
ANR	188778	ArgumentList	NULL		188754	1					
ANR	188779	Argument	NULL		188754	0					
ANR	188780	Identifier	NULL		188754	0					
ANR	188781	Argument	"""Cannot rewind a generator that was already run"""		188754	1					
ANR	188782	PrimaryExpression	"""Cannot rewind a generator that was already run"""		188754	0					
ANR	188783	Argument	0		188754	2					
ANR	188784	PrimaryExpression	0		188754	0					
ANR	188785	Identifier	zend_generator_rewind		188754	1					
ANR	188786	ParameterList	zend_generator * generator		188754	2					
ANR	188787	Parameter	zend_generator * generator	734:41:23604:23628	188754	0	True				
ANR	188788	ParameterType	zend_generator *		188754	0					
ANR	188789	Identifier	generator		188754	1					
ANR	188790	CFGEntryNode	ENTRY		188754		True				
ANR	188791	CFGExitNode	EXIT		188754		True				
ANR	188792	Symbol	* generator		188754						
ANR	188793	Symbol	NULL		188754						
ANR	188794	Symbol	generator		188754						
ANR	188795	Symbol	ZEND_GENERATOR_AT_FIRST_YIELD		188754						
ANR	188796	Symbol	generator -> flags		188754						
ANR	188797	DeclStmt									
ANR	188798	Decl							zend_generator	zend_generator *	generator
ANR	188799	DeclStmt									
ANR	188800	Decl							zend_generator	zend_generator *	generator
ANR	188801	DeclStmt									
ANR	188802	Decl							zend_generator	zend_generator *	generator
ANR	188803	Decl							zend_generator	zend_generator *	root
ANR	188804	DeclStmt									
ANR	188805	Decl							zval	zval *	value
ANR	188806	DeclStmt									
ANR	188807	Decl							zend_generator	zend_generator *	generator
ANR	188808	Decl							zend_generator	zend_generator *	root
ANR	188809	DeclStmt									
ANR	188810	Decl							zval	zval *	key
ANR	188811	DeclStmt									
ANR	188812	Decl							zend_generator	zend_generator *	generator
ANR	188813	DeclStmt									
ANR	188814	Decl							zval	zval *	value
ANR	188815	DeclStmt									
ANR	188816	Decl							zend_generator	zend_generator *	generator
ANR	188817	Decl							zend_generator	zend_generator *	root
ANR	188818	DeclStmt									
ANR	188819	Decl							zval	zval *	value
ANR	188820	DeclStmt									
ANR	188821	Decl							zval	zval *	exception
ANR	188822	Decl							zval	zval	exception_copy
ANR	188823	DeclStmt									
ANR	188824	Decl							zend_generator	zend_generator *	generator
ANR	188825	DeclStmt									
ANR	188826	Decl							zend_generator	zend_generator *	root
ANR	188827	DeclStmt									
ANR	188828	Decl							zval	zval *	value
ANR	188829	DeclStmt									
ANR	188830	Decl							zend_generator	zend_generator *	generator
ANR	188831	Function	zend_generator_iterator_dtor	982:0:29186:29433							
ANR	188832	FunctionDef	zend_generator_iterator_dtor (zend_object_iterator * iterator)		188831	0					
ANR	188833	CompoundStatement		983:0:29269:29433	188831	0					
ANR	188834	IdentifierDeclStatement	zend_generator * generator = ( zend_generator * ) Z_OBJ ( iterator -> data ) ;	984:1:29272:29338	188831	0	True				
ANR	188835	IdentifierDecl	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		188831	0					
ANR	188836	IdentifierDeclType	zend_generator *		188831	0					
ANR	188837	Identifier	generator		188831	1					
ANR	188838	AssignmentExpression	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		188831	2		=			
ANR	188839	Identifier	generator		188831	0					
ANR	188840	CastExpression	( zend_generator * ) Z_OBJ ( iterator -> data )		188831	1					
ANR	188841	CastTarget	zend_generator *		188831	0					
ANR	188842	CallExpression	Z_OBJ ( iterator -> data )		188831	1					
ANR	188843	Callee	Z_OBJ		188831	0					
ANR	188844	Identifier	Z_OBJ		188831	0					
ANR	188845	ArgumentList	iterator -> data		188831	1					
ANR	188846	Argument	iterator -> data		188831	0					
ANR	188847	PtrMemberAccess	iterator -> data		188831	0					
ANR	188848	Identifier	iterator		188831	0					
ANR	188849	Identifier	data		188831	1					
ANR	188850	ExpressionStatement	generator -> iterator = NULL	985:1:29341:29367	188831	1	True				
ANR	188851	AssignmentExpression	generator -> iterator = NULL		188831	0		=			
ANR	188852	PtrMemberAccess	generator -> iterator		188831	0					
ANR	188853	Identifier	generator		188831	0					
ANR	188854	Identifier	iterator		188831	1					
ANR	188855	Identifier	NULL		188831	1					
ANR	188856	ExpressionStatement	zval_ptr_dtor ( & iterator -> data )	986:1:29370:29400	188831	2	True				
ANR	188857	CallExpression	zval_ptr_dtor ( & iterator -> data )		188831	0					
ANR	188858	Callee	zval_ptr_dtor		188831	0					
ANR	188859	Identifier	zval_ptr_dtor		188831	0					
ANR	188860	ArgumentList	& iterator -> data		188831	1					
ANR	188861	Argument	& iterator -> data		188831	0					
ANR	188862	UnaryOperationExpression	& iterator -> data		188831	0					
ANR	188863	UnaryOperator	&		188831	0					
ANR	188864	PtrMemberAccess	iterator -> data		188831	1					
ANR	188865	Identifier	iterator		188831	0					
ANR	188866	Identifier	data		188831	1					
ANR	188867	ExpressionStatement	zend_iterator_dtor ( iterator )	987:1:29403:29431	188831	3	True				
ANR	188868	CallExpression	zend_iterator_dtor ( iterator )		188831	0					
ANR	188869	Callee	zend_iterator_dtor		188831	0					
ANR	188870	Identifier	zend_iterator_dtor		188831	0					
ANR	188871	ArgumentList	iterator		188831	1					
ANR	188872	Argument	iterator		188831	0					
ANR	188873	Identifier	iterator		188831	0					
ANR	188874	ReturnType	static void		188831	1					
ANR	188875	Identifier	zend_generator_iterator_dtor		188831	2					
ANR	188876	ParameterList	zend_object_iterator * iterator		188831	3					
ANR	188877	Parameter	zend_object_iterator * iterator	982:41:29227:29256	188831	0	True				
ANR	188878	ParameterType	zend_object_iterator *		188831	0					
ANR	188879	Identifier	iterator		188831	1					
ANR	188880	CFGEntryNode	ENTRY		188831		True				
ANR	188881	CFGExitNode	EXIT		188831		True				
ANR	188882	Symbol	iterator		188831						
ANR	188883	Symbol	Z_OBJ		188831						
ANR	188884	Symbol	* iterator		188831						
ANR	188885	Symbol	NULL		188831						
ANR	188886	Symbol	* generator		188831						
ANR	188887	Symbol	generator		188831						
ANR	188888	Symbol	& iterator -> data		188831						
ANR	188889	Symbol	generator -> iterator		188831						
ANR	188890	Symbol	iterator -> data		188831						
ANR	188891	Function	zend_generator_iterator_valid	991:0:29446:29743							
ANR	188892	FunctionDef	zend_generator_iterator_valid (zend_object_iterator * iterator)		188891	0					
ANR	188893	CompoundStatement		992:0:29529:29743	188891	0					
ANR	188894	IdentifierDeclStatement	zend_generator * generator = ( zend_generator * ) Z_OBJ ( iterator -> data ) ;	993:1:29532:29598	188891	0	True				
ANR	188895	IdentifierDecl	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		188891	0					
ANR	188896	IdentifierDeclType	zend_generator *		188891	0					
ANR	188897	Identifier	generator		188891	1					
ANR	188898	AssignmentExpression	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		188891	2		=			
ANR	188899	Identifier	generator		188891	0					
ANR	188900	CastExpression	( zend_generator * ) Z_OBJ ( iterator -> data )		188891	1					
ANR	188901	CastTarget	zend_generator *		188891	0					
ANR	188902	CallExpression	Z_OBJ ( iterator -> data )		188891	1					
ANR	188903	Callee	Z_OBJ		188891	0					
ANR	188904	Identifier	Z_OBJ		188891	0					
ANR	188905	ArgumentList	iterator -> data		188891	1					
ANR	188906	Argument	iterator -> data		188891	0					
ANR	188907	PtrMemberAccess	iterator -> data		188891	0					
ANR	188908	Identifier	iterator		188891	0					
ANR	188909	Identifier	data		188891	1					
ANR	188910	ExpressionStatement	zend_generator_ensure_initialized ( generator )	995:1:29602:29646	188891	1	True				
ANR	188911	CallExpression	zend_generator_ensure_initialized ( generator )		188891	0					
ANR	188912	Callee	zend_generator_ensure_initialized		188891	0					
ANR	188913	Identifier	zend_generator_ensure_initialized		188891	0					
ANR	188914	ArgumentList	generator		188891	1					
ANR	188915	Argument	generator		188891	0					
ANR	188916	Identifier	generator		188891	0					
ANR	188917	ExpressionStatement	zend_generator_get_current ( generator )	997:1:29650:29687	188891	2	True				
ANR	188918	CallExpression	zend_generator_get_current ( generator )		188891	0					
ANR	188919	Callee	zend_generator_get_current		188891	0					
ANR	188920	Identifier	zend_generator_get_current		188891	0					
ANR	188921	ArgumentList	generator		188891	1					
ANR	188922	Argument	generator		188891	0					
ANR	188923	Identifier	generator		188891	0					
ANR	188924	ReturnStatement	return generator -> execute_data ? SUCCESS : FAILURE ;	999:1:29691:29741	188891	3	True				
ANR	188925	ConditionalExpression	generator -> execute_data ? SUCCESS : FAILURE		188891	0					
ANR	188926	Condition	generator -> execute_data		188891	0					
ANR	188927	PtrMemberAccess	generator -> execute_data		188891	0					
ANR	188928	Identifier	generator		188891	0					
ANR	188929	Identifier	execute_data		188891	1					
ANR	188930	Identifier	SUCCESS		188891	1					
ANR	188931	Identifier	FAILURE		188891	2					
ANR	188932	ReturnType	static int		188891	1					
ANR	188933	Identifier	zend_generator_iterator_valid		188891	2					
ANR	188934	ParameterList	zend_object_iterator * iterator		188891	3					
ANR	188935	Parameter	zend_object_iterator * iterator	991:41:29487:29516	188891	0	True				
ANR	188936	ParameterType	zend_object_iterator *		188891	0					
ANR	188937	Identifier	iterator		188891	1					
ANR	188938	CFGEntryNode	ENTRY		188891		True				
ANR	188939	CFGExitNode	EXIT		188891		True				
ANR	188940	Symbol	generator -> execute_data		188891						
ANR	188941	Symbol	iterator		188891						
ANR	188942	Symbol	Z_OBJ		188891						
ANR	188943	Symbol	* iterator		188891						
ANR	188944	Symbol	SUCCESS		188891						
ANR	188945	Symbol	* generator		188891						
ANR	188946	Symbol	generator		188891						
ANR	188947	Symbol	FAILURE		188891						
ANR	188948	Symbol	iterator -> data		188891						
ANR	188949	Function	zend_generator_iterator_get_data	1003:0:29756:30041							
ANR	188950	FunctionDef	zend_generator_iterator_get_data (zend_object_iterator * iterator)		188949	0					
ANR	188951	CompoundStatement		1004:0:29844:30041	188949	0					
ANR	188952	IdentifierDeclStatement	"zend_generator * generator = ( zend_generator * ) Z_OBJ ( iterator -> data ) , * root ;"	1005:1:29847:29920	188949	0	True				
ANR	188953	IdentifierDecl	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		188949	0					
ANR	188954	IdentifierDeclType	zend_generator *		188949	0					
ANR	188955	Identifier	generator		188949	1					
ANR	188956	AssignmentExpression	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		188949	2		=			
ANR	188957	Identifier	generator		188949	0					
ANR	188958	CastExpression	( zend_generator * ) Z_OBJ ( iterator -> data )		188949	1					
ANR	188959	CastTarget	zend_generator *		188949	0					
ANR	188960	CallExpression	Z_OBJ ( iterator -> data )		188949	1					
ANR	188961	Callee	Z_OBJ		188949	0					
ANR	188962	Identifier	Z_OBJ		188949	0					
ANR	188963	ArgumentList	iterator -> data		188949	1					
ANR	188964	Argument	iterator -> data		188949	0					
ANR	188965	PtrMemberAccess	iterator -> data		188949	0					
ANR	188966	Identifier	iterator		188949	0					
ANR	188967	Identifier	data		188949	1					
ANR	188968	IdentifierDecl	* root		188949	1					
ANR	188969	IdentifierDeclType	zend_generator *		188949	0					
ANR	188970	Identifier	root		188949	1					
ANR	188971	ExpressionStatement	zend_generator_ensure_initialized ( generator )	1007:1:29924:29968	188949	1	True				
ANR	188972	CallExpression	zend_generator_ensure_initialized ( generator )		188949	0					
ANR	188973	Callee	zend_generator_ensure_initialized		188949	0					
ANR	188974	Identifier	zend_generator_ensure_initialized		188949	0					
ANR	188975	ArgumentList	generator		188949	1					
ANR	188976	Argument	generator		188949	0					
ANR	188977	Identifier	generator		188949	0					
ANR	188978	ExpressionStatement	root = zend_generator_get_current ( generator )	1009:1:29972:30016	188949	2	True				
ANR	188979	AssignmentExpression	root = zend_generator_get_current ( generator )		188949	0		=			
ANR	188980	Identifier	root		188949	0					
ANR	188981	CallExpression	zend_generator_get_current ( generator )		188949	1					
ANR	188982	Callee	zend_generator_get_current		188949	0					
ANR	188983	Identifier	zend_generator_get_current		188949	0					
ANR	188984	ArgumentList	generator		188949	1					
ANR	188985	Argument	generator		188949	0					
ANR	188986	Identifier	generator		188949	0					
ANR	188987	ReturnStatement	return & root -> value ;	1011:1:30020:30039	188949	3	True				
ANR	188988	UnaryOperationExpression	& root -> value		188949	0					
ANR	188989	UnaryOperator	&		188949	0					
ANR	188990	PtrMemberAccess	root -> value		188949	1					
ANR	188991	Identifier	root		188949	0					
ANR	188992	Identifier	value		188949	1					
ANR	188993	ReturnType	static zval *		188949	1					
ANR	188994	Identifier	zend_generator_iterator_get_data		188949	2					
ANR	188995	ParameterList	zend_object_iterator * iterator		188949	3					
ANR	188996	Parameter	zend_object_iterator * iterator	1003:46:29802:29831	188949	0	True				
ANR	188997	ParameterType	zend_object_iterator *		188949	0					
ANR	188998	Identifier	iterator		188949	1					
ANR	188999	CFGEntryNode	ENTRY		188949		True				
ANR	189000	CFGExitNode	EXIT		188949		True				
ANR	189001	Symbol	iterator		188949						
ANR	189002	Symbol	Z_OBJ		188949						
ANR	189003	Symbol	* iterator		188949						
ANR	189004	Symbol	zend_generator_get_current		188949						
ANR	189005	Symbol	root		188949						
ANR	189006	Symbol	generator		188949						
ANR	189007	Symbol	& root -> value		188949						
ANR	189008	Symbol	iterator -> data		188949						
ANR	189009	Function	zend_generator_iterator_get_key	1015:0:30054:30471							
ANR	189010	FunctionDef	"zend_generator_iterator_get_key (zend_object_iterator * iterator , zval * key)"		189009	0					
ANR	189011	CompoundStatement		1016:0:30151:30471	189009	0					
ANR	189012	IdentifierDeclStatement	"zend_generator * generator = ( zend_generator * ) Z_OBJ ( iterator -> data ) , * root ;"	1017:1:30154:30227	189009	0	True				
ANR	189013	IdentifierDecl	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		189009	0					
ANR	189014	IdentifierDeclType	zend_generator *		189009	0					
ANR	189015	Identifier	generator		189009	1					
ANR	189016	AssignmentExpression	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		189009	2		=			
ANR	189017	Identifier	generator		189009	0					
ANR	189018	CastExpression	( zend_generator * ) Z_OBJ ( iterator -> data )		189009	1					
ANR	189019	CastTarget	zend_generator *		189009	0					
ANR	189020	CallExpression	Z_OBJ ( iterator -> data )		189009	1					
ANR	189021	Callee	Z_OBJ		189009	0					
ANR	189022	Identifier	Z_OBJ		189009	0					
ANR	189023	ArgumentList	iterator -> data		189009	1					
ANR	189024	Argument	iterator -> data		189009	0					
ANR	189025	PtrMemberAccess	iterator -> data		189009	0					
ANR	189026	Identifier	iterator		189009	0					
ANR	189027	Identifier	data		189009	1					
ANR	189028	IdentifierDecl	* root		189009	1					
ANR	189029	IdentifierDeclType	zend_generator *		189009	0					
ANR	189030	Identifier	root		189009	1					
ANR	189031	ExpressionStatement	zend_generator_ensure_initialized ( generator )	1019:1:30231:30275	189009	1	True				
ANR	189032	CallExpression	zend_generator_ensure_initialized ( generator )		189009	0					
ANR	189033	Callee	zend_generator_ensure_initialized		189009	0					
ANR	189034	Identifier	zend_generator_ensure_initialized		189009	0					
ANR	189035	ArgumentList	generator		189009	1					
ANR	189036	Argument	generator		189009	0					
ANR	189037	Identifier	generator		189009	0					
ANR	189038	ExpressionStatement	root = zend_generator_get_current ( generator )	1021:1:30279:30323	189009	2	True				
ANR	189039	AssignmentExpression	root = zend_generator_get_current ( generator )		189009	0		=			
ANR	189040	Identifier	root		189009	0					
ANR	189041	CallExpression	zend_generator_get_current ( generator )		189009	1					
ANR	189042	Callee	zend_generator_get_current		189009	0					
ANR	189043	Identifier	zend_generator_get_current		189009	0					
ANR	189044	ArgumentList	generator		189009	1					
ANR	189045	Argument	generator		189009	0					
ANR	189046	Identifier	generator		189009	0					
ANR	189047	IfStatement	if ( EXPECTED ( Z_TYPE ( root -> key ) != IS_UNDEF ) )		189009	3					
ANR	189048	Condition	EXPECTED ( Z_TYPE ( root -> key ) != IS_UNDEF )	1023:5:30331:30369	189009	0	True				
ANR	189049	CallExpression	EXPECTED ( Z_TYPE ( root -> key ) != IS_UNDEF )		189009	0					
ANR	189050	Callee	EXPECTED		189009	0					
ANR	189051	Identifier	EXPECTED		189009	0					
ANR	189052	ArgumentList	Z_TYPE ( root -> key ) != IS_UNDEF		189009	1					
ANR	189053	Argument	Z_TYPE ( root -> key ) != IS_UNDEF		189009	0					
ANR	189054	EqualityExpression	Z_TYPE ( root -> key ) != IS_UNDEF		189009	0		!=			
ANR	189055	CallExpression	Z_TYPE ( root -> key )		189009	0					
ANR	189056	Callee	Z_TYPE		189009	0					
ANR	189057	Identifier	Z_TYPE		189009	0					
ANR	189058	ArgumentList	root -> key		189009	1					
ANR	189059	Argument	root -> key		189009	0					
ANR	189060	PtrMemberAccess	root -> key		189009	0					
ANR	189061	Identifier	root		189009	0					
ANR	189062	Identifier	key		189009	1					
ANR	189063	Identifier	IS_UNDEF		189009	1					
ANR	189064	CompoundStatement		9:2:224:245	189009	1					
ANR	189065	IdentifierDeclStatement	zval * zv = & root -> key ;	1024:2:30376:30397	189009	0	True				
ANR	189066	IdentifierDecl	* zv = & root -> key		189009	0					
ANR	189067	IdentifierDeclType	zval *		189009	0					
ANR	189068	Identifier	zv		189009	1					
ANR	189069	AssignmentExpression	* zv = & root -> key		189009	2		=			
ANR	189070	Identifier	zv		189009	0					
ANR	189071	UnaryOperationExpression	& root -> key		189009	1					
ANR	189072	UnaryOperator	&		189009	0					
ANR	189073	PtrMemberAccess	root -> key		189009	1					
ANR	189074	Identifier	root		189009	0					
ANR	189075	Identifier	key		189009	1					
ANR	189076	ExpressionStatement	ZVAL_DEREF ( zv )	1026:2:30402:30416	189009	1	True				
ANR	189077	CallExpression	ZVAL_DEREF ( zv )		189009	0					
ANR	189078	Callee	ZVAL_DEREF		189009	0					
ANR	189079	Identifier	ZVAL_DEREF		189009	0					
ANR	189080	ArgumentList	zv		189009	1					
ANR	189081	Argument	zv		189009	0					
ANR	189082	Identifier	zv		189009	0					
ANR	189083	ExpressionStatement	"ZVAL_COPY ( key , zv )"	1027:2:30420:30438	189009	2	True				
ANR	189084	CallExpression	"ZVAL_COPY ( key , zv )"		189009	0					
ANR	189085	Callee	ZVAL_COPY		189009	0					
ANR	189086	Identifier	ZVAL_COPY		189009	0					
ANR	189087	ArgumentList	key		189009	1					
ANR	189088	Argument	key		189009	0					
ANR	189089	Identifier	key		189009	0					
ANR	189090	Argument	zv		189009	1					
ANR	189091	Identifier	zv		189009	0					
ANR	189092	ElseStatement	else		189009	0					
ANR	189093	CompoundStatement		13:8:296:296	189009	0					
ANR	189094	ExpressionStatement	ZVAL_NULL ( key )	1029:2:30452:30466	189009	0	True				
ANR	189095	CallExpression	ZVAL_NULL ( key )		189009	0					
ANR	189096	Callee	ZVAL_NULL		189009	0					
ANR	189097	Identifier	ZVAL_NULL		189009	0					
ANR	189098	ArgumentList	key		189009	1					
ANR	189099	Argument	key		189009	0					
ANR	189100	Identifier	key		189009	0					
ANR	189101	ReturnType	static void		189009	1					
ANR	189102	Identifier	zend_generator_iterator_get_key		189009	2					
ANR	189103	ParameterList	"zend_object_iterator * iterator , zval * key"		189009	3					
ANR	189104	Parameter	zend_object_iterator * iterator	1015:44:30098:30127	189009	0	True				
ANR	189105	ParameterType	zend_object_iterator *		189009	0					
ANR	189106	Identifier	iterator		189009	1					
ANR	189107	Parameter	zval * key	1015:76:30130:30138	189009	1	True				
ANR	189108	ParameterType	zval *		189009	0					
ANR	189109	Identifier	key		189009	1					
ANR	189110	CFGEntryNode	ENTRY		189009		True				
ANR	189111	CFGExitNode	EXIT		189009		True				
ANR	189112	Symbol	root -> key		189009						
ANR	189113	Symbol	& root -> key		189009						
ANR	189114	Symbol	generator		189009						
ANR	189115	Symbol	Z_TYPE		189009						
ANR	189116	Symbol	iterator		189009						
ANR	189117	Symbol	Z_OBJ		189009						
ANR	189118	Symbol	* iterator		189009						
ANR	189119	Symbol	zend_generator_get_current		189009						
ANR	189120	Symbol	root		189009						
ANR	189121	Symbol	* root		189009						
ANR	189122	Symbol	zv		189009						
ANR	189123	Symbol	EXPECTED		189009						
ANR	189124	Symbol	key		189009						
ANR	189125	Symbol	IS_UNDEF		189009						
ANR	189126	Symbol	iterator -> data		189009						
ANR	189127	Function	zend_generator_iterator_move_forward	1034:0:30484:30730							
ANR	189128	FunctionDef	zend_generator_iterator_move_forward (zend_object_iterator * iterator)		189127	0					
ANR	189129	CompoundStatement		1035:0:30575:30730	189127	0					
ANR	189130	IdentifierDeclStatement	zend_generator * generator = ( zend_generator * ) Z_OBJ ( iterator -> data ) ;	1036:1:30578:30644	189127	0	True				
ANR	189131	IdentifierDecl	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		189127	0					
ANR	189132	IdentifierDeclType	zend_generator *		189127	0					
ANR	189133	Identifier	generator		189127	1					
ANR	189134	AssignmentExpression	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		189127	2		=			
ANR	189135	Identifier	generator		189127	0					
ANR	189136	CastExpression	( zend_generator * ) Z_OBJ ( iterator -> data )		189127	1					
ANR	189137	CastTarget	zend_generator *		189127	0					
ANR	189138	CallExpression	Z_OBJ ( iterator -> data )		189127	1					
ANR	189139	Callee	Z_OBJ		189127	0					
ANR	189140	Identifier	Z_OBJ		189127	0					
ANR	189141	ArgumentList	iterator -> data		189127	1					
ANR	189142	Argument	iterator -> data		189127	0					
ANR	189143	PtrMemberAccess	iterator -> data		189127	0					
ANR	189144	Identifier	iterator		189127	0					
ANR	189145	Identifier	data		189127	1					
ANR	189146	ExpressionStatement	zend_generator_ensure_initialized ( generator )	1038:1:30648:30692	189127	1	True				
ANR	189147	CallExpression	zend_generator_ensure_initialized ( generator )		189127	0					
ANR	189148	Callee	zend_generator_ensure_initialized		189127	0					
ANR	189149	Identifier	zend_generator_ensure_initialized		189127	0					
ANR	189150	ArgumentList	generator		189127	1					
ANR	189151	Argument	generator		189127	0					
ANR	189152	Identifier	generator		189127	0					
ANR	189153	ExpressionStatement	zend_generator_resume ( generator )	1040:1:30696:30728	189127	2	True				
ANR	189154	CallExpression	zend_generator_resume ( generator )		189127	0					
ANR	189155	Callee	zend_generator_resume		189127	0					
ANR	189156	Identifier	zend_generator_resume		189127	0					
ANR	189157	ArgumentList	generator		189127	1					
ANR	189158	Argument	generator		189127	0					
ANR	189159	Identifier	generator		189127	0					
ANR	189160	ReturnType	static void		189127	1					
ANR	189161	Identifier	zend_generator_iterator_move_forward		189127	2					
ANR	189162	ParameterList	zend_object_iterator * iterator		189127	3					
ANR	189163	Parameter	zend_object_iterator * iterator	1034:49:30533:30562	189127	0	True				
ANR	189164	ParameterType	zend_object_iterator *		189127	0					
ANR	189165	Identifier	iterator		189127	1					
ANR	189166	CFGEntryNode	ENTRY		189127		True				
ANR	189167	CFGExitNode	EXIT		189127		True				
ANR	189168	Symbol	iterator		189127						
ANR	189169	Symbol	Z_OBJ		189127						
ANR	189170	Symbol	* iterator		189127						
ANR	189171	Symbol	generator		189127						
ANR	189172	Symbol	iterator -> data		189127						
ANR	189173	Function	zend_generator_iterator_rewind	1044:0:30743:30935							
ANR	189174	FunctionDef	zend_generator_iterator_rewind (zend_object_iterator * iterator)		189173	0					
ANR	189175	CompoundStatement		1045:0:30828:30935	189173	0					
ANR	189176	IdentifierDeclStatement	zend_generator * generator = ( zend_generator * ) Z_OBJ ( iterator -> data ) ;	1046:1:30831:30897	189173	0	True				
ANR	189177	IdentifierDecl	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		189173	0					
ANR	189178	IdentifierDeclType	zend_generator *		189173	0					
ANR	189179	Identifier	generator		189173	1					
ANR	189180	AssignmentExpression	* generator = ( zend_generator * ) Z_OBJ ( iterator -> data )		189173	2		=			
ANR	189181	Identifier	generator		189173	0					
ANR	189182	CastExpression	( zend_generator * ) Z_OBJ ( iterator -> data )		189173	1					
ANR	189183	CastTarget	zend_generator *		189173	0					
ANR	189184	CallExpression	Z_OBJ ( iterator -> data )		189173	1					
ANR	189185	Callee	Z_OBJ		189173	0					
ANR	189186	Identifier	Z_OBJ		189173	0					
ANR	189187	ArgumentList	iterator -> data		189173	1					
ANR	189188	Argument	iterator -> data		189173	0					
ANR	189189	PtrMemberAccess	iterator -> data		189173	0					
ANR	189190	Identifier	iterator		189173	0					
ANR	189191	Identifier	data		189173	1					
ANR	189192	ExpressionStatement	zend_generator_rewind ( generator )	1048:1:30901:30933	189173	1	True				
ANR	189193	CallExpression	zend_generator_rewind ( generator )		189173	0					
ANR	189194	Callee	zend_generator_rewind		189173	0					
ANR	189195	Identifier	zend_generator_rewind		189173	0					
ANR	189196	ArgumentList	generator		189173	1					
ANR	189197	Argument	generator		189173	0					
ANR	189198	Identifier	generator		189173	0					
ANR	189199	ReturnType	static void		189173	1					
ANR	189200	Identifier	zend_generator_iterator_rewind		189173	2					
ANR	189201	ParameterList	zend_object_iterator * iterator		189173	3					
ANR	189202	Parameter	zend_object_iterator * iterator	1044:43:30786:30815	189173	0	True				
ANR	189203	ParameterType	zend_object_iterator *		189173	0					
ANR	189204	Identifier	iterator		189173	1					
ANR	189205	CFGEntryNode	ENTRY		189173		True				
ANR	189206	CFGExitNode	EXIT		189173		True				
ANR	189207	Symbol	iterator		189173						
ANR	189208	Symbol	* iterator		189173						
ANR	189209	Symbol	Z_OBJ		189173						
ANR	189210	Symbol	generator		189173						
ANR	189211	Symbol	iterator -> data		189173						
ANR	189212	DeclStmt									
ANR	189213	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	zend_generator_iterator_functions
ANR	189214	Function	zend_generator_get_iterator	1061:0:31227:32037							
ANR	189215	FunctionDef	"zend_generator_get_iterator (zend_class_entry * ce , zval * object , int by_ref)"		189214	0					
ANR	189216	CompoundStatement		1062:0:31335:32037	189214	0					
ANR	189217	IdentifierDeclStatement	zend_object_iterator * iterator ;	1063:1:31338:31368	189214	0	True				
ANR	189218	IdentifierDecl	* iterator		189214	0					
ANR	189219	IdentifierDeclType	zend_object_iterator *		189214	0					
ANR	189220	Identifier	iterator		189214	1					
ANR	189221	IdentifierDeclStatement	zend_generator * generator = ( zend_generator * ) Z_OBJ_P ( object ) ;	1064:1:31371:31431	189214	1	True				
ANR	189222	IdentifierDecl	* generator = ( zend_generator * ) Z_OBJ_P ( object )		189214	0					
ANR	189223	IdentifierDeclType	zend_generator *		189214	0					
ANR	189224	Identifier	generator		189214	1					
ANR	189225	AssignmentExpression	* generator = ( zend_generator * ) Z_OBJ_P ( object )		189214	2		=			
ANR	189226	Identifier	generator		189214	0					
ANR	189227	CastExpression	( zend_generator * ) Z_OBJ_P ( object )		189214	1					
ANR	189228	CastTarget	zend_generator *		189214	0					
ANR	189229	CallExpression	Z_OBJ_P ( object )		189214	1					
ANR	189230	Callee	Z_OBJ_P		189214	0					
ANR	189231	Identifier	Z_OBJ_P		189214	0					
ANR	189232	ArgumentList	object		189214	1					
ANR	189233	Argument	object		189214	0					
ANR	189234	Identifier	object		189214	0					
ANR	189235	IfStatement	if ( ! generator -> execute_data )		189214	2					
ANR	189236	Condition	! generator -> execute_data	1066:5:31439:31462	189214	0	True				
ANR	189237	UnaryOperationExpression	! generator -> execute_data		189214	0					
ANR	189238	UnaryOperator	!		189214	0					
ANR	189239	PtrMemberAccess	generator -> execute_data		189214	1					
ANR	189240	Identifier	generator		189214	0					
ANR	189241	Identifier	execute_data		189214	1					
ANR	189242	CompoundStatement		5:31:129:129	189214	1					
ANR	189243	ExpressionStatement	"zend_throw_exception ( NULL , ""Cannot traverse an already closed generator"" , 0 )"	1067:2:31469:31545	189214	0	True				
ANR	189244	CallExpression	"zend_throw_exception ( NULL , ""Cannot traverse an already closed generator"" , 0 )"		189214	0					
ANR	189245	Callee	zend_throw_exception		189214	0					
ANR	189246	Identifier	zend_throw_exception		189214	0					
ANR	189247	ArgumentList	NULL		189214	1					
ANR	189248	Argument	NULL		189214	0					
ANR	189249	Identifier	NULL		189214	0					
ANR	189250	Argument	"""Cannot traverse an already closed generator"""		189214	1					
ANR	189251	PrimaryExpression	"""Cannot traverse an already closed generator"""		189214	0					
ANR	189252	Argument	0		189214	2					
ANR	189253	PrimaryExpression	0		189214	0					
ANR	189254	ReturnStatement	return NULL ;	1068:2:31549:31560	189214	1	True				
ANR	189255	Identifier	NULL		189214	0					
ANR	189256	IfStatement	if ( UNEXPECTED ( by_ref ) && ! ( generator -> execute_data -> func -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE ) )		189214	3					
ANR	189257	Condition	UNEXPECTED ( by_ref ) && ! ( generator -> execute_data -> func -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE )	1071:5:31571:31671	189214	0	True				
ANR	189258	AndExpression	UNEXPECTED ( by_ref ) && ! ( generator -> execute_data -> func -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE )		189214	0		&&			
ANR	189259	CallExpression	UNEXPECTED ( by_ref )		189214	0					
ANR	189260	Callee	UNEXPECTED		189214	0					
ANR	189261	Identifier	UNEXPECTED		189214	0					
ANR	189262	ArgumentList	by_ref		189214	1					
ANR	189263	Argument	by_ref		189214	0					
ANR	189264	Identifier	by_ref		189214	0					
ANR	189265	UnaryOperationExpression	! ( generator -> execute_data -> func -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE )		189214	1					
ANR	189266	UnaryOperator	!		189214	0					
ANR	189267	BitAndExpression	generator -> execute_data -> func -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE		189214	1		&			
ANR	189268	MemberAccess	generator -> execute_data -> func -> op_array . fn_flags		189214	0					
ANR	189269	PtrMemberAccess	generator -> execute_data -> func -> op_array		189214	0					
ANR	189270	PtrMemberAccess	generator -> execute_data -> func		189214	0					
ANR	189271	PtrMemberAccess	generator -> execute_data		189214	0					
ANR	189272	Identifier	generator		189214	0					
ANR	189273	Identifier	execute_data		189214	1					
ANR	189274	Identifier	func		189214	1					
ANR	189275	Identifier	op_array		189214	1					
ANR	189276	Identifier	fn_flags		189214	1					
ANR	189277	Identifier	ZEND_ACC_RETURN_REFERENCE		189214	1					
ANR	189278	CompoundStatement		10:108:338:338	189214	1					
ANR	189279	ExpressionStatement	"zend_throw_exception ( NULL , ""You can only iterate a generator by-reference if it declared that it yields by-reference"" , 0 )"	1072:2:31678:31799	189214	0	True				
ANR	189280	CallExpression	"zend_throw_exception ( NULL , ""You can only iterate a generator by-reference if it declared that it yields by-reference"" , 0 )"		189214	0					
ANR	189281	Callee	zend_throw_exception		189214	0					
ANR	189282	Identifier	zend_throw_exception		189214	0					
ANR	189283	ArgumentList	NULL		189214	1					
ANR	189284	Argument	NULL		189214	0					
ANR	189285	Identifier	NULL		189214	0					
ANR	189286	Argument	"""You can only iterate a generator by-reference if it declared that it yields by-reference"""		189214	1					
ANR	189287	PrimaryExpression	"""You can only iterate a generator by-reference if it declared that it yields by-reference"""		189214	0					
ANR	189288	Argument	0		189214	2					
ANR	189289	PrimaryExpression	0		189214	0					
ANR	189290	ReturnStatement	return NULL ;	1073:2:31803:31814	189214	1	True				
ANR	189291	Identifier	NULL		189214	0					
ANR	189292	ExpressionStatement	iterator = generator -> iterator = emalloc ( sizeof ( zend_object_iterator ) )	1076:1:31821:31891	189214	4	True				
ANR	189293	AssignmentExpression	iterator = generator -> iterator = emalloc ( sizeof ( zend_object_iterator ) )		189214	0		=			
ANR	189294	Identifier	iterator		189214	0					
ANR	189295	AssignmentExpression	generator -> iterator = emalloc ( sizeof ( zend_object_iterator ) )		189214	1		=			
ANR	189296	PtrMemberAccess	generator -> iterator		189214	0					
ANR	189297	Identifier	generator		189214	0					
ANR	189298	Identifier	iterator		189214	1					
ANR	189299	CallExpression	emalloc ( sizeof ( zend_object_iterator ) )		189214	1					
ANR	189300	Callee	emalloc		189214	0					
ANR	189301	Identifier	emalloc		189214	0					
ANR	189302	ArgumentList	sizeof ( zend_object_iterator )		189214	1					
ANR	189303	Argument	sizeof ( zend_object_iterator )		189214	0					
ANR	189304	SizeofExpression	sizeof ( zend_object_iterator )		189214	0					
ANR	189305	Sizeof	sizeof		189214	0					
ANR	189306	SizeofOperand	zend_object_iterator		189214	1					
ANR	189307	ExpressionStatement	zend_iterator_init ( iterator )	1078:1:31895:31923	189214	5	True				
ANR	189308	CallExpression	zend_iterator_init ( iterator )		189214	0					
ANR	189309	Callee	zend_iterator_init		189214	0					
ANR	189310	Identifier	zend_iterator_init		189214	0					
ANR	189311	ArgumentList	iterator		189214	1					
ANR	189312	Argument	iterator		189214	0					
ANR	189313	Identifier	iterator		189214	0					
ANR	189314	ExpressionStatement	iterator -> funcs = & zend_generator_iterator_functions	1080:1:31927:31979	189214	6	True				
ANR	189315	AssignmentExpression	iterator -> funcs = & zend_generator_iterator_functions		189214	0		=			
ANR	189316	PtrMemberAccess	iterator -> funcs		189214	0					
ANR	189317	Identifier	iterator		189214	0					
ANR	189318	Identifier	funcs		189214	1					
ANR	189319	UnaryOperationExpression	& zend_generator_iterator_functions		189214	1					
ANR	189320	UnaryOperator	&		189214	0					
ANR	189321	Identifier	zend_generator_iterator_functions		189214	1					
ANR	189322	ExpressionStatement	"ZVAL_COPY ( & iterator -> data , object )"	1081:1:31982:32016	189214	7	True				
ANR	189323	CallExpression	"ZVAL_COPY ( & iterator -> data , object )"		189214	0					
ANR	189324	Callee	ZVAL_COPY		189214	0					
ANR	189325	Identifier	ZVAL_COPY		189214	0					
ANR	189326	ArgumentList	& iterator -> data		189214	1					
ANR	189327	Argument	& iterator -> data		189214	0					
ANR	189328	UnaryOperationExpression	& iterator -> data		189214	0					
ANR	189329	UnaryOperator	&		189214	0					
ANR	189330	PtrMemberAccess	iterator -> data		189214	1					
ANR	189331	Identifier	iterator		189214	0					
ANR	189332	Identifier	data		189214	1					
ANR	189333	Argument	object		189214	1					
ANR	189334	Identifier	object		189214	0					
ANR	189335	ReturnStatement	return iterator ;	1083:1:32020:32035	189214	8	True				
ANR	189336	Identifier	iterator		189214	0					
ANR	189337	ReturnType	zend_object_iterator *		189214	1					
ANR	189338	Identifier	zend_generator_get_iterator		189214	2					
ANR	189339	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		189214	3					
ANR	189340	Parameter	zend_class_entry * ce	1061:50:31277:31296	189214	0	True				
ANR	189341	ParameterType	zend_class_entry *		189214	0					
ANR	189342	Identifier	ce		189214	1					
ANR	189343	Parameter	zval * object	1061:72:31299:31310	189214	1	True				
ANR	189344	ParameterType	zval *		189214	0					
ANR	189345	Identifier	object		189214	1					
ANR	189346	Parameter	int by_ref	1061:86:31313:31322	189214	2	True				
ANR	189347	ParameterType	int		189214	0					
ANR	189348	Identifier	by_ref		189214	1					
ANR	189349	CFGEntryNode	ENTRY		189214		True				
ANR	189350	CFGExitNode	EXIT		189214		True				
ANR	189351	Symbol	Z_OBJ_P		189214						
ANR	189352	Symbol	* generator -> execute_data -> func		189214						
ANR	189353	Symbol	generator		189214						
ANR	189354	Symbol	* * * generator		189214						
ANR	189355	Symbol	generator -> iterator		189214						
ANR	189356	Symbol	UNEXPECTED		189214						
ANR	189357	Symbol	generator -> execute_data -> func -> op_array		189214						
ANR	189358	Symbol	iterator		189214						
ANR	189359	Symbol	emalloc		189214						
ANR	189360	Symbol	* generator		189214						
ANR	189361	Symbol	& zend_generator_iterator_functions		189214						
ANR	189362	Symbol	generator -> execute_data -> func		189214						
ANR	189363	Symbol	& iterator -> data		189214						
ANR	189364	Symbol	iterator -> funcs		189214						
ANR	189365	Symbol	ce		189214						
ANR	189366	Symbol	NULL		189214						
ANR	189367	Symbol	* * generator		189214						
ANR	189368	Symbol	generator -> execute_data -> func -> op_array . fn_flags		189214						
ANR	189369	Symbol	generator -> execute_data		189214						
ANR	189370	Symbol	* * generator -> execute_data		189214						
ANR	189371	Symbol	* iterator		189214						
ANR	189372	Symbol	ZEND_ACC_RETURN_REFERENCE		189214						
ANR	189373	Symbol	by_ref		189214						
ANR	189374	Symbol	* generator -> execute_data		189214						
ANR	189375	Symbol	object		189214						
ANR	189376	DeclStmt									
ANR	189377	Decl							const zend_function_entry	const zend_function_entry [ ]	generator_functions
ANR	189378	Function	zend_register_generator_ce	1111:0:33043:34237							
ANR	189379	FunctionDef	zend_register_generator_ce ()		189378	0					
ANR	189380	CompoundStatement		1112:0:33091:34237	189378	0					
ANR	189381	IdentifierDeclStatement	zend_class_entry ce ;	1113:1:33094:33113	189378	0	True				
ANR	189382	IdentifierDecl	ce		189378	0					
ANR	189383	IdentifierDeclType	zend_class_entry		189378	0					
ANR	189384	Identifier	ce		189378	1					
ANR	189385	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""Generator"" , generator_functions )"	1115:1:33117:33171	189378	1	True				
ANR	189386	CallExpression	"INIT_CLASS_ENTRY ( ce , ""Generator"" , generator_functions )"		189378	0					
ANR	189387	Callee	INIT_CLASS_ENTRY		189378	0					
ANR	189388	Identifier	INIT_CLASS_ENTRY		189378	0					
ANR	189389	ArgumentList	ce		189378	1					
ANR	189390	Argument	ce		189378	0					
ANR	189391	Identifier	ce		189378	0					
ANR	189392	Argument	"""Generator"""		189378	1					
ANR	189393	PrimaryExpression	"""Generator"""		189378	0					
ANR	189394	Argument	generator_functions		189378	2					
ANR	189395	Identifier	generator_functions		189378	0					
ANR	189396	ExpressionStatement	zend_ce_generator = zend_register_internal_class ( & ce )	1116:1:33174:33227	189378	2	True				
ANR	189397	AssignmentExpression	zend_ce_generator = zend_register_internal_class ( & ce )		189378	0		=			
ANR	189398	Identifier	zend_ce_generator		189378	0					
ANR	189399	CallExpression	zend_register_internal_class ( & ce )		189378	1					
ANR	189400	Callee	zend_register_internal_class		189378	0					
ANR	189401	Identifier	zend_register_internal_class		189378	0					
ANR	189402	ArgumentList	& ce		189378	1					
ANR	189403	Argument	& ce		189378	0					
ANR	189404	UnaryOperationExpression	& ce		189378	0					
ANR	189405	UnaryOperator	&		189378	0					
ANR	189406	Identifier	ce		189378	1					
ANR	189407	ExpressionStatement	zend_ce_generator -> ce_flags |= ZEND_ACC_FINAL	1117:1:33230:33275	189378	3	True				
ANR	189408	AssignmentExpression	zend_ce_generator -> ce_flags |= ZEND_ACC_FINAL		189378	0		|=			
ANR	189409	PtrMemberAccess	zend_ce_generator -> ce_flags		189378	0					
ANR	189410	Identifier	zend_ce_generator		189378	0					
ANR	189411	Identifier	ce_flags		189378	1					
ANR	189412	Identifier	ZEND_ACC_FINAL		189378	1					
ANR	189413	ExpressionStatement	zend_ce_generator -> create_object = zend_generator_create	1118:1:33278:33334	189378	4	True				
ANR	189414	AssignmentExpression	zend_ce_generator -> create_object = zend_generator_create		189378	0		=			
ANR	189415	PtrMemberAccess	zend_ce_generator -> create_object		189378	0					
ANR	189416	Identifier	zend_ce_generator		189378	0					
ANR	189417	Identifier	create_object		189378	1					
ANR	189418	Identifier	zend_generator_create		189378	1					
ANR	189419	ExpressionStatement	zend_ce_generator -> serialize = zend_class_serialize_deny	1119:1:33337:33393	189378	5	True				
ANR	189420	AssignmentExpression	zend_ce_generator -> serialize = zend_class_serialize_deny		189378	0		=			
ANR	189421	PtrMemberAccess	zend_ce_generator -> serialize		189378	0					
ANR	189422	Identifier	zend_ce_generator		189378	0					
ANR	189423	Identifier	serialize		189378	1					
ANR	189424	Identifier	zend_class_serialize_deny		189378	1					
ANR	189425	ExpressionStatement	zend_ce_generator -> unserialize = zend_class_unserialize_deny	1120:1:33396:33456	189378	6	True				
ANR	189426	AssignmentExpression	zend_ce_generator -> unserialize = zend_class_unserialize_deny		189378	0		=			
ANR	189427	PtrMemberAccess	zend_ce_generator -> unserialize		189378	0					
ANR	189428	Identifier	zend_ce_generator		189378	0					
ANR	189429	Identifier	unserialize		189378	1					
ANR	189430	Identifier	zend_class_unserialize_deny		189378	1					
ANR	189431	ExpressionStatement	"zend_class_implements ( zend_ce_generator , 1 , zend_ce_iterator )"	1123:1:33534:33595	189378	7	True				
ANR	189432	CallExpression	"zend_class_implements ( zend_ce_generator , 1 , zend_ce_iterator )"		189378	0					
ANR	189433	Callee	zend_class_implements		189378	0					
ANR	189434	Identifier	zend_class_implements		189378	0					
ANR	189435	ArgumentList	zend_ce_generator		189378	1					
ANR	189436	Argument	zend_ce_generator		189378	0					
ANR	189437	Identifier	zend_ce_generator		189378	0					
ANR	189438	Argument	1		189378	1					
ANR	189439	PrimaryExpression	1		189378	0					
ANR	189440	Argument	zend_ce_iterator		189378	2					
ANR	189441	Identifier	zend_ce_iterator		189378	0					
ANR	189442	ExpressionStatement	zend_ce_generator -> get_iterator = zend_generator_get_iterator	1124:1:33598:33659	189378	8	True				
ANR	189443	AssignmentExpression	zend_ce_generator -> get_iterator = zend_generator_get_iterator		189378	0		=			
ANR	189444	PtrMemberAccess	zend_ce_generator -> get_iterator		189378	0					
ANR	189445	Identifier	zend_ce_generator		189378	0					
ANR	189446	Identifier	get_iterator		189378	1					
ANR	189447	Identifier	zend_generator_get_iterator		189378	1					
ANR	189448	ExpressionStatement	zend_ce_generator -> iterator_funcs . funcs = & zend_generator_iterator_functions	1125:1:33662:33738	189378	9	True				
ANR	189449	AssignmentExpression	zend_ce_generator -> iterator_funcs . funcs = & zend_generator_iterator_functions		189378	0		=			
ANR	189450	MemberAccess	zend_ce_generator -> iterator_funcs . funcs		189378	0					
ANR	189451	PtrMemberAccess	zend_ce_generator -> iterator_funcs		189378	0					
ANR	189452	Identifier	zend_ce_generator		189378	0					
ANR	189453	Identifier	iterator_funcs		189378	1					
ANR	189454	Identifier	funcs		189378	1					
ANR	189455	UnaryOperationExpression	& zend_generator_iterator_functions		189378	1					
ANR	189456	UnaryOperator	&		189378	0					
ANR	189457	Identifier	zend_generator_iterator_functions		189378	1					
ANR	189458	ExpressionStatement	"memcpy ( & zend_generator_handlers , zend_get_std_object_handlers ( ) , sizeof ( zend_object_handlers ) )"	1127:1:33742:33836	189378	10	True				
ANR	189459	CallExpression	"memcpy ( & zend_generator_handlers , zend_get_std_object_handlers ( ) , sizeof ( zend_object_handlers ) )"		189378	0					
ANR	189460	Callee	memcpy		189378	0					
ANR	189461	Identifier	memcpy		189378	0					
ANR	189462	ArgumentList	& zend_generator_handlers		189378	1					
ANR	189463	Argument	& zend_generator_handlers		189378	0					
ANR	189464	UnaryOperationExpression	& zend_generator_handlers		189378	0					
ANR	189465	UnaryOperator	&		189378	0					
ANR	189466	Identifier	zend_generator_handlers		189378	1					
ANR	189467	Argument	zend_get_std_object_handlers ( )		189378	1					
ANR	189468	CallExpression	zend_get_std_object_handlers ( )		189378	0					
ANR	189469	Callee	zend_get_std_object_handlers		189378	0					
ANR	189470	Identifier	zend_get_std_object_handlers		189378	0					
ANR	189471	ArgumentList			189378	1					
ANR	189472	Argument	sizeof ( zend_object_handlers )		189378	2					
ANR	189473	SizeofExpression	sizeof ( zend_object_handlers )		189378	0					
ANR	189474	Sizeof	sizeof		189378	0					
ANR	189475	SizeofOperand	zend_object_handlers		189378	1					
ANR	189476	ExpressionStatement	zend_generator_handlers . free_obj = zend_generator_free_storage	1128:1:33839:33901	189378	11	True				
ANR	189477	AssignmentExpression	zend_generator_handlers . free_obj = zend_generator_free_storage		189378	0		=			
ANR	189478	MemberAccess	zend_generator_handlers . free_obj		189378	0					
ANR	189479	Identifier	zend_generator_handlers		189378	0					
ANR	189480	Identifier	free_obj		189378	1					
ANR	189481	Identifier	zend_generator_free_storage		189378	1					
ANR	189482	ExpressionStatement	zend_generator_handlers . dtor_obj = zend_generator_dtor_storage	1129:1:33904:33966	189378	12	True				
ANR	189483	AssignmentExpression	zend_generator_handlers . dtor_obj = zend_generator_dtor_storage		189378	0		=			
ANR	189484	MemberAccess	zend_generator_handlers . dtor_obj		189378	0					
ANR	189485	Identifier	zend_generator_handlers		189378	0					
ANR	189486	Identifier	dtor_obj		189378	1					
ANR	189487	Identifier	zend_generator_dtor_storage		189378	1					
ANR	189488	ExpressionStatement	zend_generator_handlers . clone_obj = NULL	1130:1:33969:34009	189378	13	True				
ANR	189489	AssignmentExpression	zend_generator_handlers . clone_obj = NULL		189378	0		=			
ANR	189490	MemberAccess	zend_generator_handlers . clone_obj		189378	0					
ANR	189491	Identifier	zend_generator_handlers		189378	0					
ANR	189492	Identifier	clone_obj		189378	1					
ANR	189493	Identifier	NULL		189378	1					
ANR	189494	ExpressionStatement	zend_generator_handlers . get_constructor = zend_generator_get_constructor	1131:1:34012:34084	189378	14	True				
ANR	189495	AssignmentExpression	zend_generator_handlers . get_constructor = zend_generator_get_constructor		189378	0		=			
ANR	189496	MemberAccess	zend_generator_handlers . get_constructor		189378	0					
ANR	189497	Identifier	zend_generator_handlers		189378	0					
ANR	189498	Identifier	get_constructor		189378	1					
ANR	189499	Identifier	zend_generator_get_constructor		189378	1					
ANR	189500	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""ClosedGeneratorException"" , NULL )"	1133:1:34088:34142	189378	15	True				
ANR	189501	CallExpression	"INIT_CLASS_ENTRY ( ce , ""ClosedGeneratorException"" , NULL )"		189378	0					
ANR	189502	Callee	INIT_CLASS_ENTRY		189378	0					
ANR	189503	Identifier	INIT_CLASS_ENTRY		189378	0					
ANR	189504	ArgumentList	ce		189378	1					
ANR	189505	Argument	ce		189378	0					
ANR	189506	Identifier	ce		189378	0					
ANR	189507	Argument	"""ClosedGeneratorException"""		189378	1					
ANR	189508	PrimaryExpression	"""ClosedGeneratorException"""		189378	0					
ANR	189509	Argument	NULL		189378	2					
ANR	189510	Identifier	NULL		189378	0					
ANR	189511	ExpressionStatement	"zend_ce_ClosedGeneratorException = zend_register_internal_class_ex ( & ce , zend_ce_exception )"	1134:1:34145:34235	189378	16	True				
ANR	189512	AssignmentExpression	"zend_ce_ClosedGeneratorException = zend_register_internal_class_ex ( & ce , zend_ce_exception )"		189378	0		=			
ANR	189513	Identifier	zend_ce_ClosedGeneratorException		189378	0					
ANR	189514	CallExpression	"zend_register_internal_class_ex ( & ce , zend_ce_exception )"		189378	1					
ANR	189515	Callee	zend_register_internal_class_ex		189378	0					
ANR	189516	Identifier	zend_register_internal_class_ex		189378	0					
ANR	189517	ArgumentList	& ce		189378	1					
ANR	189518	Argument	& ce		189378	0					
ANR	189519	UnaryOperationExpression	& ce		189378	0					
ANR	189520	UnaryOperator	&		189378	0					
ANR	189521	Identifier	ce		189378	1					
ANR	189522	Argument	zend_ce_exception		189378	1					
ANR	189523	Identifier	zend_ce_exception		189378	0					
ANR	189524	ReturnType	void		189378	1					
ANR	189525	Identifier	zend_register_generator_ce		189378	2					
ANR	189526	ParameterList			189378	3					
ANR	189527	CFGEntryNode	ENTRY		189378		True				
ANR	189528	CFGExitNode	EXIT		189378		True				
ANR	189529	Symbol	zend_ce_generator -> iterator_funcs . funcs		189378						
ANR	189530	Symbol	zend_ce_iterator		189378						
ANR	189531	Symbol	zend_get_std_object_handlers		189378						
ANR	189532	Symbol	zend_generator_handlers . get_constructor		189378						
ANR	189533	Symbol	zend_ce_ClosedGeneratorException		189378						
ANR	189534	Symbol	zend_ce_generator		189378						
ANR	189535	Symbol	zend_ce_generator -> create_object		189378						
ANR	189536	Symbol	zend_generator_create		189378						
ANR	189537	Symbol	& ce		189378						
ANR	189538	Symbol	ZEND_ACC_FINAL		189378						
ANR	189539	Symbol	& zend_generator_iterator_functions		189378						
ANR	189540	Symbol	& zend_generator_handlers		189378						
ANR	189541	Symbol	zend_ce_exception		189378						
ANR	189542	Symbol	zend_generator_handlers . clone_obj		189378						
ANR	189543	Symbol	zend_generator_get_iterator		189378						
ANR	189544	Symbol	* zend_ce_generator		189378						
ANR	189545	Symbol	zend_class_unserialize_deny		189378						
ANR	189546	Symbol	ce		189378						
ANR	189547	Symbol	zend_ce_generator -> iterator_funcs		189378						
ANR	189548	Symbol	zend_ce_generator -> serialize		189378						
ANR	189549	Symbol	zend_ce_generator -> get_iterator		189378						
ANR	189550	Symbol	zend_generator_handlers		189378						
ANR	189551	Symbol	zend_generator_handlers . free_obj		189378						
ANR	189552	Symbol	NULL		189378						
ANR	189553	Symbol	zend_class_serialize_deny		189378						
ANR	189554	Symbol	zend_generator_get_constructor		189378						
ANR	189555	Symbol	zend_generator_free_storage		189378						
ANR	189556	Symbol	zend_ce_generator -> unserialize		189378						
ANR	189557	Symbol	generator_functions		189378						
ANR	189558	Symbol	zend_generator_dtor_storage		189378						
ANR	189559	Symbol	zend_register_internal_class_ex		189378						
ANR	189560	Symbol	zend_generator_handlers . dtor_obj		189378						
ANR	189561	Symbol	zend_ce_generator -> ce_flags		189378						
ANR	189562	Symbol	zend_register_internal_class		189378						
