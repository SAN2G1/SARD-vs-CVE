command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3200917	File	data/converged/CVE-2015-8617_php-src/nop_removal.c								
ANR	3200918	Function	zend_optimizer_nop_removal	34:0:1609:4876							
ANR	3200919	FunctionDef	zend_optimizer_nop_removal (zend_op_array * op_array)		3200918	0					
ANR	3200920	CompoundStatement		35:0:1666:4876	3200918	0					
ANR	3200921	IdentifierDeclStatement	"zend_op * end , * opline ;"	36:1:1669:1690	3200918	0	True				
ANR	3200922	IdentifierDecl	* end		3200918	0					
ANR	3200923	IdentifierDeclType	zend_op *		3200918	0					
ANR	3200924	Identifier	end		3200918	1					
ANR	3200925	IdentifierDecl	* opline		3200918	1					
ANR	3200926	IdentifierDeclType	zend_op *		3200918	0					
ANR	3200927	Identifier	opline		3200918	1					
ANR	3200928	IdentifierDeclStatement	"uint32_t new_count , i , shift ;"	37:1:1693:1721	3200918	1	True				
ANR	3200929	IdentifierDecl	new_count		3200918	0					
ANR	3200930	IdentifierDeclType	uint32_t		3200918	0					
ANR	3200931	Identifier	new_count		3200918	1					
ANR	3200932	IdentifierDecl	i		3200918	1					
ANR	3200933	IdentifierDeclType	uint32_t		3200918	0					
ANR	3200934	Identifier	i		3200918	1					
ANR	3200935	IdentifierDecl	shift		3200918	2					
ANR	3200936	IdentifierDeclType	uint32_t		3200918	0					
ANR	3200937	Identifier	shift		3200918	1					
ANR	3200938	IdentifierDeclStatement	int j ;	38:1:1724:1729	3200918	2	True				
ANR	3200939	IdentifierDecl	j		3200918	0					
ANR	3200940	IdentifierDeclType	int		3200918	0					
ANR	3200941	Identifier	j		3200918	1					
ANR	3200942	IdentifierDeclStatement	uint32_t * shiftlist ;	39:1:1732:1751	3200918	3	True				
ANR	3200943	IdentifierDecl	* shiftlist		3200918	0					
ANR	3200944	IdentifierDeclType	uint32_t *		3200918	0					
ANR	3200945	Identifier	shiftlist		3200918	1					
ANR	3200946	ExpressionStatement	ALLOCA_FLAG ( use_heap )	40:1:1754:1775	3200918	4	True				
ANR	3200947	CallExpression	ALLOCA_FLAG ( use_heap )		3200918	0					
ANR	3200948	Callee	ALLOCA_FLAG		3200918	0					
ANR	3200949	Identifier	ALLOCA_FLAG		3200918	0					
ANR	3200950	ArgumentList	use_heap		3200918	1					
ANR	3200951	Argument	use_heap		3200918	0					
ANR	3200952	Identifier	use_heap		3200918	0					
ANR	3200953	ExpressionStatement	shiftlist = ( uint32_t * ) DO_ALLOCA ( sizeof ( uint32_t ) * op_array -> last )	42:1:1779:1847	3200918	5	True				
ANR	3200954	AssignmentExpression	shiftlist = ( uint32_t * ) DO_ALLOCA ( sizeof ( uint32_t ) * op_array -> last )		3200918	0		=			
ANR	3200955	Identifier	shiftlist		3200918	0					
ANR	3200956	CastExpression	( uint32_t * ) DO_ALLOCA ( sizeof ( uint32_t ) * op_array -> last )		3200918	1					
ANR	3200957	CastTarget	uint32_t *		3200918	0					
ANR	3200958	CallExpression	DO_ALLOCA ( sizeof ( uint32_t ) * op_array -> last )		3200918	1					
ANR	3200959	Callee	DO_ALLOCA		3200918	0					
ANR	3200960	Identifier	DO_ALLOCA		3200918	0					
ANR	3200961	ArgumentList	sizeof ( uint32_t ) * op_array -> last		3200918	1					
ANR	3200962	Argument	sizeof ( uint32_t ) * op_array -> last		3200918	0					
ANR	3200963	MultiplicativeExpression	sizeof ( uint32_t ) * op_array -> last		3200918	0		*			
ANR	3200964	SizeofExpression	sizeof ( uint32_t )		3200918	0					
ANR	3200965	Sizeof	sizeof		3200918	0					
ANR	3200966	SizeofOperand	uint32_t		3200918	1					
ANR	3200967	PtrMemberAccess	op_array -> last		3200918	1					
ANR	3200968	Identifier	op_array		3200918	0					
ANR	3200969	Identifier	last		3200918	1					
ANR	3200970	ExpressionStatement	i = new_count = shift = 0	43:1:1850:1875	3200918	6	True				
ANR	3200971	AssignmentExpression	i = new_count = shift = 0		3200918	0		=			
ANR	3200972	Identifier	i		3200918	0					
ANR	3200973	AssignmentExpression	new_count = shift = 0		3200918	1		=			
ANR	3200974	Identifier	new_count		3200918	0					
ANR	3200975	AssignmentExpression	shift = 0		3200918	1		=			
ANR	3200976	Identifier	shift		3200918	0					
ANR	3200977	PrimaryExpression	0		3200918	1					
ANR	3200978	ExpressionStatement	end = op_array -> opcodes + op_array -> last	44:1:1878:1918	3200918	7	True				
ANR	3200979	AssignmentExpression	end = op_array -> opcodes + op_array -> last		3200918	0		=			
ANR	3200980	Identifier	end		3200918	0					
ANR	3200981	AdditiveExpression	op_array -> opcodes + op_array -> last		3200918	1		+			
ANR	3200982	PtrMemberAccess	op_array -> opcodes		3200918	0					
ANR	3200983	Identifier	op_array		3200918	0					
ANR	3200984	Identifier	opcodes		3200918	1					
ANR	3200985	PtrMemberAccess	op_array -> last		3200918	1					
ANR	3200986	Identifier	op_array		3200918	0					
ANR	3200987	Identifier	last		3200918	1					
ANR	3200988	ForStatement	for ( opline = op_array -> opcodes ; opline < end ; opline ++ )		3200918	8					
ANR	3200989	ForInit	opline = op_array -> opcodes ;	45:6:1926:1952	3200918	0	True				
ANR	3200990	AssignmentExpression	opline = op_array -> opcodes		3200918	0		=			
ANR	3200991	Identifier	opline		3200918	0					
ANR	3200992	PtrMemberAccess	op_array -> opcodes		3200918	1					
ANR	3200993	Identifier	op_array		3200918	0					
ANR	3200994	Identifier	opcodes		3200918	1					
ANR	3200995	Condition	opline < end	45:34:1954:1965	3200918	1	True				
ANR	3200996	RelationalExpression	opline < end		3200918	0		<			
ANR	3200997	Identifier	opline		3200918	0					
ANR	3200998	Identifier	end		3200918	1					
ANR	3200999	PostIncDecOperationExpression	opline ++	45:48:1968:1975	3200918	2	True				
ANR	3201000	Identifier	opline		3200918	0					
ANR	3201001	IncDec	++		3200918	1					
ANR	3201002	CompoundStatement		11:58:311:311	3200918	3					
ANR	3201003	IfStatement	if ( opline -> opcode == ZEND_JMP && ZEND_OP1 ( opline ) . opline_num > i )		3200918	0					
ANR	3201004	Condition	opline -> opcode == ZEND_JMP && ZEND_OP1 ( opline ) . opline_num > i	48:6:2015:2075	3200918	0	True				
ANR	3201005	AndExpression	opline -> opcode == ZEND_JMP && ZEND_OP1 ( opline ) . opline_num > i		3200918	0		&&			
ANR	3201006	EqualityExpression	opline -> opcode == ZEND_JMP		3200918	0		==			
ANR	3201007	PtrMemberAccess	opline -> opcode		3200918	0					
ANR	3201008	Identifier	opline		3200918	0					
ANR	3201009	Identifier	opcode		3200918	1					
ANR	3201010	Identifier	ZEND_JMP		3200918	1					
ANR	3201011	RelationalExpression	ZEND_OP1 ( opline ) . opline_num > i		3200918	1		>			
ANR	3201012	MemberAccess	ZEND_OP1 ( opline ) . opline_num		3200918	0					
ANR	3201013	CallExpression	ZEND_OP1 ( opline )		3200918	0					
ANR	3201014	Callee	ZEND_OP1		3200918	0					
ANR	3201015	Identifier	ZEND_OP1		3200918	0					
ANR	3201016	ArgumentList	opline		3200918	1					
ANR	3201017	Argument	opline		3200918	0					
ANR	3201018	Identifier	opline		3200918	0					
ANR	3201019	Identifier	opline_num		3200918	1					
ANR	3201020	Identifier	i		3200918	1					
ANR	3201021	CompoundStatement		16:3:471:540	3200918	1					
ANR	3201022	IdentifierDeclStatement	zend_op * target = op_array -> opcodes + ZEND_OP1 ( opline ) . opline_num - 1 ;	50:3:2138:2207	3200918	0	True				
ANR	3201023	IdentifierDecl	* target = op_array -> opcodes + ZEND_OP1 ( opline ) . opline_num - 1		3200918	0					
ANR	3201024	IdentifierDeclType	zend_op *		3200918	0					
ANR	3201025	Identifier	target		3200918	1					
ANR	3201026	AssignmentExpression	* target = op_array -> opcodes + ZEND_OP1 ( opline ) . opline_num - 1		3200918	2		=			
ANR	3201027	Identifier	target		3200918	0					
ANR	3201028	AdditiveExpression	op_array -> opcodes + ZEND_OP1 ( opline ) . opline_num - 1		3200918	1		+			
ANR	3201029	PtrMemberAccess	op_array -> opcodes		3200918	0					
ANR	3201030	Identifier	op_array		3200918	0					
ANR	3201031	Identifier	opcodes		3200918	1					
ANR	3201032	AdditiveExpression	ZEND_OP1 ( opline ) . opline_num - 1		3200918	1		-			
ANR	3201033	MemberAccess	ZEND_OP1 ( opline ) . opline_num		3200918	0					
ANR	3201034	CallExpression	ZEND_OP1 ( opline )		3200918	0					
ANR	3201035	Callee	ZEND_OP1		3200918	0					
ANR	3201036	Identifier	ZEND_OP1		3200918	0					
ANR	3201037	ArgumentList	opline		3200918	1					
ANR	3201038	Argument	opline		3200918	0					
ANR	3201039	Identifier	opline		3200918	0					
ANR	3201040	Identifier	opline_num		3200918	1					
ANR	3201041	PrimaryExpression	1		3200918	1					
ANR	3201042	WhileStatement	while ( target -> opcode == ZEND_NOP )		3200918	1					
ANR	3201043	Condition	target -> opcode == ZEND_NOP	52:10:2220:2245	3200918	0	True				
ANR	3201044	EqualityExpression	target -> opcode == ZEND_NOP		3200918	0		==			
ANR	3201045	PtrMemberAccess	target -> opcode		3200918	0					
ANR	3201046	Identifier	target		3200918	0					
ANR	3201047	Identifier	opcode		3200918	1					
ANR	3201048	Identifier	ZEND_NOP		3200918	1					
ANR	3201049	CompoundStatement		18:38:581:581	3200918	1					
ANR	3201050	ExpressionStatement	target --	53:4:2254:2262	3200918	0	True				
ANR	3201051	PostIncDecOperationExpression	target --		3200918	0					
ANR	3201052	Identifier	target		3200918	0					
ANR	3201053	IncDec	--		3200918	1					
ANR	3201054	IfStatement	if ( target == opline )		3200918	2					
ANR	3201055	Condition	target == opline	55:7:2276:2291	3200918	0	True				
ANR	3201056	EqualityExpression	target == opline		3200918	0		==			
ANR	3201057	Identifier	target		3200918	0					
ANR	3201058	Identifier	opline		3200918	1					
ANR	3201059	CompoundStatement		21:25:627:627	3200918	1					
ANR	3201060	ExpressionStatement	opline -> opcode = ZEND_NOP	57:4:2320:2345	3200918	0	True				
ANR	3201061	AssignmentExpression	opline -> opcode = ZEND_NOP		3200918	0		=			
ANR	3201062	PtrMemberAccess	opline -> opcode		3200918	0					
ANR	3201063	Identifier	opline		3200918	0					
ANR	3201064	Identifier	opcode		3200918	1					
ANR	3201065	Identifier	ZEND_NOP		3200918	1					
ANR	3201066	ExpressionStatement	shiftlist [ i ++ ] = shift	61:2:2359:2381	3200918	1	True				
ANR	3201067	AssignmentExpression	shiftlist [ i ++ ] = shift		3200918	0		=			
ANR	3201068	ArrayIndexing	shiftlist [ i ++ ]		3200918	0					
ANR	3201069	Identifier	shiftlist		3200918	0					
ANR	3201070	PostIncDecOperationExpression	i ++		3200918	1					
ANR	3201071	Identifier	i		3200918	0					
ANR	3201072	IncDec	++		3200918	1					
ANR	3201073	Identifier	shift		3200918	1					
ANR	3201074	IfStatement	if ( opline -> opcode == ZEND_NOP )		3200918	2					
ANR	3201075	Condition	opline -> opcode == ZEND_NOP	62:6:2389:2414	3200918	0	True				
ANR	3201076	EqualityExpression	opline -> opcode == ZEND_NOP		3200918	0		==			
ANR	3201077	PtrMemberAccess	opline -> opcode		3200918	0					
ANR	3201078	Identifier	opline		3200918	0					
ANR	3201079	Identifier	opcode		3200918	1					
ANR	3201080	Identifier	ZEND_NOP		3200918	1					
ANR	3201081	CompoundStatement		28:34:750:750	3200918	1					
ANR	3201082	ExpressionStatement	shift ++	63:3:2422:2429	3200918	0	True				
ANR	3201083	PostIncDecOperationExpression	shift ++		3200918	0					
ANR	3201084	Identifier	shift		3200918	0					
ANR	3201085	IncDec	++		3200918	1					
ANR	3201086	ElseStatement	else		3200918	0					
ANR	3201087	CompoundStatement		30:9:773:773	3200918	0					
ANR	3201088	IfStatement	if ( shift )		3200918	0					
ANR	3201089	Condition	shift	65:7:2449:2453	3200918	0	True				
ANR	3201090	Identifier	shift		3200918	0					
ANR	3201091	CompoundStatement		31:14:789:789	3200918	1					
ANR	3201092	ExpressionStatement	op_array -> opcodes [ new_count ] = * opline	66:4:2462:2500	3200918	0	True				
ANR	3201093	AssignmentExpression	op_array -> opcodes [ new_count ] = * opline		3200918	0		=			
ANR	3201094	ArrayIndexing	op_array -> opcodes [ new_count ]		3200918	0					
ANR	3201095	PtrMemberAccess	op_array -> opcodes		3200918	0					
ANR	3201096	Identifier	op_array		3200918	0					
ANR	3201097	Identifier	opcodes		3200918	1					
ANR	3201098	Identifier	new_count		3200918	1					
ANR	3201099	UnaryOperationExpression	* opline		3200918	1					
ANR	3201100	UnaryOperator	*		3200918	0					
ANR	3201101	Identifier	opline		3200918	1					
ANR	3201102	ExpressionStatement	new_count ++	68:3:2510:2521	3200918	1	True				
ANR	3201103	PostIncDecOperationExpression	new_count ++		3200918	0					
ANR	3201104	Identifier	new_count		3200918	0					
ANR	3201105	IncDec	++		3200918	1					
ANR	3201106	IfStatement	if ( shift )		3200918	9					
ANR	3201107	Condition	shift	72:5:2536:2540	3200918	0	True				
ANR	3201108	Identifier	shift		3200918	0					
ANR	3201109	CompoundStatement		38:12:876:876	3200918	1					
ANR	3201110	ExpressionStatement	op_array -> last = new_count	73:2:2547:2573	3200918	0	True				
ANR	3201111	AssignmentExpression	op_array -> last = new_count		3200918	0		=			
ANR	3201112	PtrMemberAccess	op_array -> last		3200918	0					
ANR	3201113	Identifier	op_array		3200918	0					
ANR	3201114	Identifier	last		3200918	1					
ANR	3201115	Identifier	new_count		3200918	1					
ANR	3201116	ExpressionStatement	end = op_array -> opcodes + op_array -> last	74:2:2577:2617	3200918	1	True				
ANR	3201117	AssignmentExpression	end = op_array -> opcodes + op_array -> last		3200918	0		=			
ANR	3201118	Identifier	end		3200918	0					
ANR	3201119	AdditiveExpression	op_array -> opcodes + op_array -> last		3200918	1		+			
ANR	3201120	PtrMemberAccess	op_array -> opcodes		3200918	0					
ANR	3201121	Identifier	op_array		3200918	0					
ANR	3201122	Identifier	opcodes		3200918	1					
ANR	3201123	PtrMemberAccess	op_array -> last		3200918	1					
ANR	3201124	Identifier	op_array		3200918	0					
ANR	3201125	Identifier	last		3200918	1					
ANR	3201126	ForStatement	for ( opline = op_array -> opcodes ; opline < end ; opline ++ )		3200918	2					
ANR	3201127	ForInit	opline = op_array -> opcodes ;	77:7:2647:2673	3200918	0	True				
ANR	3201128	AssignmentExpression	opline = op_array -> opcodes		3200918	0		=			
ANR	3201129	Identifier	opline		3200918	0					
ANR	3201130	PtrMemberAccess	op_array -> opcodes		3200918	1					
ANR	3201131	Identifier	op_array		3200918	0					
ANR	3201132	Identifier	opcodes		3200918	1					
ANR	3201133	Condition	opline < end	77:35:2675:2684	3200918	1	True				
ANR	3201134	RelationalExpression	opline < end		3200918	0		<			
ANR	3201135	Identifier	opline		3200918	0					
ANR	3201136	Identifier	end		3200918	1					
ANR	3201137	PostIncDecOperationExpression	opline ++	77:47:2687:2694	3200918	2	True				
ANR	3201138	Identifier	opline		3200918	0					
ANR	3201139	IncDec	++		3200918	1					
ANR	3201140	CompoundStatement		43:57:1030:1030	3200918	3					
ANR	3201141	SwitchStatement	switch ( opline -> opcode )		3200918	0					
ANR	3201142	Condition	opline -> opcode	78:11:2710:2723	3200918	0	True				
ANR	3201143	PtrMemberAccess	opline -> opcode		3200918	0					
ANR	3201144	Identifier	opline		3200918	0					
ANR	3201145	Identifier	opcode		3200918	1					
ANR	3201146	CompoundStatement		44:27:1059:1059	3200918	1					
ANR	3201147	Label	case ZEND_JMP :	79:4:2732:2745	3200918	0	True				
ANR	3201148	Identifier	ZEND_JMP		3200918	0					
ANR	3201149	Label	case ZEND_FAST_CALL :	80:4:2751:2770	3200918	1	True				
ANR	3201150	Identifier	ZEND_FAST_CALL		3200918	0					
ANR	3201151	Label	case ZEND_DECLARE_ANON_CLASS :	81:4:2776:2804	3200918	2	True				
ANR	3201152	Identifier	ZEND_DECLARE_ANON_CLASS		3200918	0					
ANR	3201153	Label	case ZEND_DECLARE_ANON_INHERITED_CLASS :	82:4:2810:2848	3200918	3	True				
ANR	3201154	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS		3200918	0					
ANR	3201155	ExpressionStatement	ZEND_OP1 ( opline ) . opline_num -= shiftlist [ ZEND_OP1 ( opline ) . opline_num ]	83:5:2855:2924	3200918	4	True				
ANR	3201156	AssignmentExpression	ZEND_OP1 ( opline ) . opline_num -= shiftlist [ ZEND_OP1 ( opline ) . opline_num ]		3200918	0		-=			
ANR	3201157	MemberAccess	ZEND_OP1 ( opline ) . opline_num		3200918	0					
ANR	3201158	CallExpression	ZEND_OP1 ( opline )		3200918	0					
ANR	3201159	Callee	ZEND_OP1		3200918	0					
ANR	3201160	Identifier	ZEND_OP1		3200918	0					
ANR	3201161	ArgumentList	opline		3200918	1					
ANR	3201162	Argument	opline		3200918	0					
ANR	3201163	Identifier	opline		3200918	0					
ANR	3201164	Identifier	opline_num		3200918	1					
ANR	3201165	ArrayIndexing	shiftlist [ ZEND_OP1 ( opline ) . opline_num ]		3200918	1					
ANR	3201166	Identifier	shiftlist		3200918	0					
ANR	3201167	MemberAccess	ZEND_OP1 ( opline ) . opline_num		3200918	1					
ANR	3201168	CallExpression	ZEND_OP1 ( opline )		3200918	0					
ANR	3201169	Callee	ZEND_OP1		3200918	0					
ANR	3201170	Identifier	ZEND_OP1		3200918	0					
ANR	3201171	ArgumentList	opline		3200918	1					
ANR	3201172	Argument	opline		3200918	0					
ANR	3201173	Identifier	opline		3200918	0					
ANR	3201174	Identifier	opline_num		3200918	1					
ANR	3201175	BreakStatement	break ;	84:5:2931:2936	3200918	5	True				
ANR	3201176	Label	case ZEND_JMPZ :	85:4:2942:2956	3200918	6	True				
ANR	3201177	Identifier	ZEND_JMPZ		3200918	0					
ANR	3201178	Label	case ZEND_JMPNZ :	86:4:2962:2977	3200918	7	True				
ANR	3201179	Identifier	ZEND_JMPNZ		3200918	0					
ANR	3201180	Label	case ZEND_JMPZ_EX :	87:4:2983:3000	3200918	8	True				
ANR	3201181	Identifier	ZEND_JMPZ_EX		3200918	0					
ANR	3201182	Label	case ZEND_JMPNZ_EX :	88:4:3006:3024	3200918	9	True				
ANR	3201183	Identifier	ZEND_JMPNZ_EX		3200918	0					
ANR	3201184	Label	case ZEND_FE_RESET_R :	89:4:3030:3050	3200918	10	True				
ANR	3201185	Identifier	ZEND_FE_RESET_R		3200918	0					
ANR	3201186	Label	case ZEND_FE_RESET_RW :	90:4:3056:3077	3200918	11	True				
ANR	3201187	Identifier	ZEND_FE_RESET_RW		3200918	0					
ANR	3201188	Label	case ZEND_NEW :	91:4:3083:3096	3200918	12	True				
ANR	3201189	Identifier	ZEND_NEW		3200918	0					
ANR	3201190	Label	case ZEND_JMP_SET :	92:4:3102:3119	3200918	13	True				
ANR	3201191	Identifier	ZEND_JMP_SET		3200918	0					
ANR	3201192	Label	case ZEND_COALESCE :	93:4:3125:3143	3200918	14	True				
ANR	3201193	Identifier	ZEND_COALESCE		3200918	0					
ANR	3201194	Label	case ZEND_ASSERT_CHECK :	94:4:3149:3171	3200918	15	True				
ANR	3201195	Identifier	ZEND_ASSERT_CHECK		3200918	0					
ANR	3201196	ExpressionStatement	ZEND_OP2 ( opline ) . opline_num -= shiftlist [ ZEND_OP2 ( opline ) . opline_num ]	95:5:3178:3247	3200918	16	True				
ANR	3201197	AssignmentExpression	ZEND_OP2 ( opline ) . opline_num -= shiftlist [ ZEND_OP2 ( opline ) . opline_num ]		3200918	0		-=			
ANR	3201198	MemberAccess	ZEND_OP2 ( opline ) . opline_num		3200918	0					
ANR	3201199	CallExpression	ZEND_OP2 ( opline )		3200918	0					
ANR	3201200	Callee	ZEND_OP2		3200918	0					
ANR	3201201	Identifier	ZEND_OP2		3200918	0					
ANR	3201202	ArgumentList	opline		3200918	1					
ANR	3201203	Argument	opline		3200918	0					
ANR	3201204	Identifier	opline		3200918	0					
ANR	3201205	Identifier	opline_num		3200918	1					
ANR	3201206	ArrayIndexing	shiftlist [ ZEND_OP2 ( opline ) . opline_num ]		3200918	1					
ANR	3201207	Identifier	shiftlist		3200918	0					
ANR	3201208	MemberAccess	ZEND_OP2 ( opline ) . opline_num		3200918	1					
ANR	3201209	CallExpression	ZEND_OP2 ( opline )		3200918	0					
ANR	3201210	Callee	ZEND_OP2		3200918	0					
ANR	3201211	Identifier	ZEND_OP2		3200918	0					
ANR	3201212	ArgumentList	opline		3200918	1					
ANR	3201213	Argument	opline		3200918	0					
ANR	3201214	Identifier	opline		3200918	0					
ANR	3201215	Identifier	opline_num		3200918	1					
ANR	3201216	BreakStatement	break ;	96:5:3254:3259	3200918	17	True				
ANR	3201217	Label	case ZEND_FE_FETCH_R :	97:4:3265:3285	3200918	18	True				
ANR	3201218	Identifier	ZEND_FE_FETCH_R		3200918	0					
ANR	3201219	Label	case ZEND_FE_FETCH_RW :	98:4:3291:3312	3200918	19	True				
ANR	3201220	Identifier	ZEND_FE_FETCH_RW		3200918	0					
ANR	3201221	ExpressionStatement	opline -> extended_value -= shiftlist [ opline -> extended_value ]	99:5:3319:3378	3200918	20	True				
ANR	3201222	AssignmentExpression	opline -> extended_value -= shiftlist [ opline -> extended_value ]		3200918	0		-=			
ANR	3201223	PtrMemberAccess	opline -> extended_value		3200918	0					
ANR	3201224	Identifier	opline		3200918	0					
ANR	3201225	Identifier	extended_value		3200918	1					
ANR	3201226	ArrayIndexing	shiftlist [ opline -> extended_value ]		3200918	1					
ANR	3201227	Identifier	shiftlist		3200918	0					
ANR	3201228	PtrMemberAccess	opline -> extended_value		3200918	1					
ANR	3201229	Identifier	opline		3200918	0					
ANR	3201230	Identifier	extended_value		3200918	1					
ANR	3201231	BreakStatement	break ;	100:5:3385:3390	3200918	21	True				
ANR	3201232	Label	case ZEND_JMPZNZ :	101:4:3396:3412	3200918	22	True				
ANR	3201233	Identifier	ZEND_JMPZNZ		3200918	0					
ANR	3201234	ExpressionStatement	ZEND_OP2 ( opline ) . opline_num -= shiftlist [ ZEND_OP2 ( opline ) . opline_num ]	102:5:3419:3488	3200918	23	True				
ANR	3201235	AssignmentExpression	ZEND_OP2 ( opline ) . opline_num -= shiftlist [ ZEND_OP2 ( opline ) . opline_num ]		3200918	0		-=			
ANR	3201236	MemberAccess	ZEND_OP2 ( opline ) . opline_num		3200918	0					
ANR	3201237	CallExpression	ZEND_OP2 ( opline )		3200918	0					
ANR	3201238	Callee	ZEND_OP2		3200918	0					
ANR	3201239	Identifier	ZEND_OP2		3200918	0					
ANR	3201240	ArgumentList	opline		3200918	1					
ANR	3201241	Argument	opline		3200918	0					
ANR	3201242	Identifier	opline		3200918	0					
ANR	3201243	Identifier	opline_num		3200918	1					
ANR	3201244	ArrayIndexing	shiftlist [ ZEND_OP2 ( opline ) . opline_num ]		3200918	1					
ANR	3201245	Identifier	shiftlist		3200918	0					
ANR	3201246	MemberAccess	ZEND_OP2 ( opline ) . opline_num		3200918	1					
ANR	3201247	CallExpression	ZEND_OP2 ( opline )		3200918	0					
ANR	3201248	Callee	ZEND_OP2		3200918	0					
ANR	3201249	Identifier	ZEND_OP2		3200918	0					
ANR	3201250	ArgumentList	opline		3200918	1					
ANR	3201251	Argument	opline		3200918	0					
ANR	3201252	Identifier	opline		3200918	0					
ANR	3201253	Identifier	opline_num		3200918	1					
ANR	3201254	ExpressionStatement	opline -> extended_value -= shiftlist [ opline -> extended_value ]	103:5:3495:3554	3200918	24	True				
ANR	3201255	AssignmentExpression	opline -> extended_value -= shiftlist [ opline -> extended_value ]		3200918	0		-=			
ANR	3201256	PtrMemberAccess	opline -> extended_value		3200918	0					
ANR	3201257	Identifier	opline		3200918	0					
ANR	3201258	Identifier	extended_value		3200918	1					
ANR	3201259	ArrayIndexing	shiftlist [ opline -> extended_value ]		3200918	1					
ANR	3201260	Identifier	shiftlist		3200918	0					
ANR	3201261	PtrMemberAccess	opline -> extended_value		3200918	1					
ANR	3201262	Identifier	opline		3200918	0					
ANR	3201263	Identifier	extended_value		3200918	1					
ANR	3201264	BreakStatement	break ;	104:5:3561:3566	3200918	25	True				
ANR	3201265	Label	case ZEND_CATCH :	105:4:3572:3587	3200918	26	True				
ANR	3201266	Identifier	ZEND_CATCH		3200918	0					
ANR	3201267	ExpressionStatement	opline -> extended_value -= shiftlist [ opline -> extended_value ]	106:5:3594:3653	3200918	27	True				
ANR	3201268	AssignmentExpression	opline -> extended_value -= shiftlist [ opline -> extended_value ]		3200918	0		-=			
ANR	3201269	PtrMemberAccess	opline -> extended_value		3200918	0					
ANR	3201270	Identifier	opline		3200918	0					
ANR	3201271	Identifier	extended_value		3200918	1					
ANR	3201272	ArrayIndexing	shiftlist [ opline -> extended_value ]		3200918	1					
ANR	3201273	Identifier	shiftlist		3200918	0					
ANR	3201274	PtrMemberAccess	opline -> extended_value		3200918	1					
ANR	3201275	Identifier	opline		3200918	0					
ANR	3201276	Identifier	extended_value		3200918	1					
ANR	3201277	BreakStatement	break ;	107:5:3660:3665	3200918	28	True				
ANR	3201278	ForStatement	for ( j = 0 ; j < op_array -> last_brk_cont ; j ++ )		3200918	3					
ANR	3201279	ForInit	j = 0 ;	112:7:3714:3719	3200918	0	True				
ANR	3201280	AssignmentExpression	j = 0		3200918	0		=			
ANR	3201281	Identifier	j		3200918	0					
ANR	3201282	PrimaryExpression	0		3200918	1					
ANR	3201283	Condition	j < op_array -> last_brk_cont	112:14:3721:3747	3200918	1	True				
ANR	3201284	RelationalExpression	j < op_array -> last_brk_cont		3200918	0		<			
ANR	3201285	Identifier	j		3200918	0					
ANR	3201286	PtrMemberAccess	op_array -> last_brk_cont		3200918	1					
ANR	3201287	Identifier	op_array		3200918	0					
ANR	3201288	Identifier	last_brk_cont		3200918	1					
ANR	3201289	PostIncDecOperationExpression	j ++	112:43:3750:3752	3200918	2	True				
ANR	3201290	Identifier	j		3200918	0					
ANR	3201291	IncDec	++		3200918	1					
ANR	3201292	CompoundStatement		78:48:2088:2088	3200918	3					
ANR	3201293	ExpressionStatement	op_array -> brk_cont_array [ j ] . brk -= shiftlist [ op_array -> brk_cont_array [ j ] . brk ]	113:3:3760:3837	3200918	0	True				
ANR	3201294	AssignmentExpression	op_array -> brk_cont_array [ j ] . brk -= shiftlist [ op_array -> brk_cont_array [ j ] . brk ]		3200918	0		-=			
ANR	3201295	MemberAccess	op_array -> brk_cont_array [ j ] . brk		3200918	0					
ANR	3201296	ArrayIndexing	op_array -> brk_cont_array [ j ]		3200918	0					
ANR	3201297	PtrMemberAccess	op_array -> brk_cont_array		3200918	0					
ANR	3201298	Identifier	op_array		3200918	0					
ANR	3201299	Identifier	brk_cont_array		3200918	1					
ANR	3201300	Identifier	j		3200918	1					
ANR	3201301	Identifier	brk		3200918	1					
ANR	3201302	ArrayIndexing	shiftlist [ op_array -> brk_cont_array [ j ] . brk ]		3200918	1					
ANR	3201303	Identifier	shiftlist		3200918	0					
ANR	3201304	MemberAccess	op_array -> brk_cont_array [ j ] . brk		3200918	1					
ANR	3201305	ArrayIndexing	op_array -> brk_cont_array [ j ]		3200918	0					
ANR	3201306	PtrMemberAccess	op_array -> brk_cont_array		3200918	0					
ANR	3201307	Identifier	op_array		3200918	0					
ANR	3201308	Identifier	brk_cont_array		3200918	1					
ANR	3201309	Identifier	j		3200918	1					
ANR	3201310	Identifier	brk		3200918	1					
ANR	3201311	ExpressionStatement	op_array -> brk_cont_array [ j ] . cont -= shiftlist [ op_array -> brk_cont_array [ j ] . cont ]	114:3:3842:3921	3200918	1	True				
ANR	3201312	AssignmentExpression	op_array -> brk_cont_array [ j ] . cont -= shiftlist [ op_array -> brk_cont_array [ j ] . cont ]		3200918	0		-=			
ANR	3201313	MemberAccess	op_array -> brk_cont_array [ j ] . cont		3200918	0					
ANR	3201314	ArrayIndexing	op_array -> brk_cont_array [ j ]		3200918	0					
ANR	3201315	PtrMemberAccess	op_array -> brk_cont_array		3200918	0					
ANR	3201316	Identifier	op_array		3200918	0					
ANR	3201317	Identifier	brk_cont_array		3200918	1					
ANR	3201318	Identifier	j		3200918	1					
ANR	3201319	Identifier	cont		3200918	1					
ANR	3201320	ArrayIndexing	shiftlist [ op_array -> brk_cont_array [ j ] . cont ]		3200918	1					
ANR	3201321	Identifier	shiftlist		3200918	0					
ANR	3201322	MemberAccess	op_array -> brk_cont_array [ j ] . cont		3200918	1					
ANR	3201323	ArrayIndexing	op_array -> brk_cont_array [ j ]		3200918	0					
ANR	3201324	PtrMemberAccess	op_array -> brk_cont_array		3200918	0					
ANR	3201325	Identifier	op_array		3200918	0					
ANR	3201326	Identifier	brk_cont_array		3200918	1					
ANR	3201327	Identifier	j		3200918	1					
ANR	3201328	Identifier	cont		3200918	1					
ANR	3201329	ExpressionStatement	op_array -> brk_cont_array [ j ] . start -= shiftlist [ op_array -> brk_cont_array [ j ] . start ]	115:3:3926:4007	3200918	2	True				
ANR	3201330	AssignmentExpression	op_array -> brk_cont_array [ j ] . start -= shiftlist [ op_array -> brk_cont_array [ j ] . start ]		3200918	0		-=			
ANR	3201331	MemberAccess	op_array -> brk_cont_array [ j ] . start		3200918	0					
ANR	3201332	ArrayIndexing	op_array -> brk_cont_array [ j ]		3200918	0					
ANR	3201333	PtrMemberAccess	op_array -> brk_cont_array		3200918	0					
ANR	3201334	Identifier	op_array		3200918	0					
ANR	3201335	Identifier	brk_cont_array		3200918	1					
ANR	3201336	Identifier	j		3200918	1					
ANR	3201337	Identifier	start		3200918	1					
ANR	3201338	ArrayIndexing	shiftlist [ op_array -> brk_cont_array [ j ] . start ]		3200918	1					
ANR	3201339	Identifier	shiftlist		3200918	0					
ANR	3201340	MemberAccess	op_array -> brk_cont_array [ j ] . start		3200918	1					
ANR	3201341	ArrayIndexing	op_array -> brk_cont_array [ j ]		3200918	0					
ANR	3201342	PtrMemberAccess	op_array -> brk_cont_array		3200918	0					
ANR	3201343	Identifier	op_array		3200918	0					
ANR	3201344	Identifier	brk_cont_array		3200918	1					
ANR	3201345	Identifier	j		3200918	1					
ANR	3201346	Identifier	start		3200918	1					
ANR	3201347	ForStatement	for ( j = 0 ; j < op_array -> last_try_catch ; j ++ )		3200918	4					
ANR	3201348	ForInit	j = 0 ;	119:7:4052:4057	3200918	0	True				
ANR	3201349	AssignmentExpression	j = 0		3200918	0		=			
ANR	3201350	Identifier	j		3200918	0					
ANR	3201351	PrimaryExpression	0		3200918	1					
ANR	3201352	Condition	j < op_array -> last_try_catch	119:14:4059:4086	3200918	1	True				
ANR	3201353	RelationalExpression	j < op_array -> last_try_catch		3200918	0		<			
ANR	3201354	Identifier	j		3200918	0					
ANR	3201355	PtrMemberAccess	op_array -> last_try_catch		3200918	1					
ANR	3201356	Identifier	op_array		3200918	0					
ANR	3201357	Identifier	last_try_catch		3200918	1					
ANR	3201358	PostIncDecOperationExpression	j ++	119:44:4089:4091	3200918	2	True				
ANR	3201359	Identifier	j		3200918	0					
ANR	3201360	IncDec	++		3200918	1					
ANR	3201361	CompoundStatement		85:49:2427:2427	3200918	3					
ANR	3201362	ExpressionStatement	op_array -> try_catch_array [ j ] . try_op -= shiftlist [ op_array -> try_catch_array [ j ] . try_op ]	120:3:4099:4184	3200918	0	True				
ANR	3201363	AssignmentExpression	op_array -> try_catch_array [ j ] . try_op -= shiftlist [ op_array -> try_catch_array [ j ] . try_op ]		3200918	0		-=			
ANR	3201364	MemberAccess	op_array -> try_catch_array [ j ] . try_op		3200918	0					
ANR	3201365	ArrayIndexing	op_array -> try_catch_array [ j ]		3200918	0					
ANR	3201366	PtrMemberAccess	op_array -> try_catch_array		3200918	0					
ANR	3201367	Identifier	op_array		3200918	0					
ANR	3201368	Identifier	try_catch_array		3200918	1					
ANR	3201369	Identifier	j		3200918	1					
ANR	3201370	Identifier	try_op		3200918	1					
ANR	3201371	ArrayIndexing	shiftlist [ op_array -> try_catch_array [ j ] . try_op ]		3200918	1					
ANR	3201372	Identifier	shiftlist		3200918	0					
ANR	3201373	MemberAccess	op_array -> try_catch_array [ j ] . try_op		3200918	1					
ANR	3201374	ArrayIndexing	op_array -> try_catch_array [ j ]		3200918	0					
ANR	3201375	PtrMemberAccess	op_array -> try_catch_array		3200918	0					
ANR	3201376	Identifier	op_array		3200918	0					
ANR	3201377	Identifier	try_catch_array		3200918	1					
ANR	3201378	Identifier	j		3200918	1					
ANR	3201379	Identifier	try_op		3200918	1					
ANR	3201380	ExpressionStatement	op_array -> try_catch_array [ j ] . catch_op -= shiftlist [ op_array -> try_catch_array [ j ] . catch_op ]	121:3:4189:4278	3200918	1	True				
ANR	3201381	AssignmentExpression	op_array -> try_catch_array [ j ] . catch_op -= shiftlist [ op_array -> try_catch_array [ j ] . catch_op ]		3200918	0		-=			
ANR	3201382	MemberAccess	op_array -> try_catch_array [ j ] . catch_op		3200918	0					
ANR	3201383	ArrayIndexing	op_array -> try_catch_array [ j ]		3200918	0					
ANR	3201384	PtrMemberAccess	op_array -> try_catch_array		3200918	0					
ANR	3201385	Identifier	op_array		3200918	0					
ANR	3201386	Identifier	try_catch_array		3200918	1					
ANR	3201387	Identifier	j		3200918	1					
ANR	3201388	Identifier	catch_op		3200918	1					
ANR	3201389	ArrayIndexing	shiftlist [ op_array -> try_catch_array [ j ] . catch_op ]		3200918	1					
ANR	3201390	Identifier	shiftlist		3200918	0					
ANR	3201391	MemberAccess	op_array -> try_catch_array [ j ] . catch_op		3200918	1					
ANR	3201392	ArrayIndexing	op_array -> try_catch_array [ j ]		3200918	0					
ANR	3201393	PtrMemberAccess	op_array -> try_catch_array		3200918	0					
ANR	3201394	Identifier	op_array		3200918	0					
ANR	3201395	Identifier	try_catch_array		3200918	1					
ANR	3201396	Identifier	j		3200918	1					
ANR	3201397	Identifier	catch_op		3200918	1					
ANR	3201398	IfStatement	if ( op_array -> try_catch_array [ j ] . finally_op )		3200918	2					
ANR	3201399	Condition	op_array -> try_catch_array [ j ] . finally_op	122:7:4287:4325	3200918	0	True				
ANR	3201400	MemberAccess	op_array -> try_catch_array [ j ] . finally_op		3200918	0					
ANR	3201401	ArrayIndexing	op_array -> try_catch_array [ j ]		3200918	0					
ANR	3201402	PtrMemberAccess	op_array -> try_catch_array		3200918	0					
ANR	3201403	Identifier	op_array		3200918	0					
ANR	3201404	Identifier	try_catch_array		3200918	1					
ANR	3201405	Identifier	j		3200918	1					
ANR	3201406	Identifier	finally_op		3200918	1					
ANR	3201407	CompoundStatement		88:48:2661:2661	3200918	1					
ANR	3201408	ExpressionStatement	op_array -> try_catch_array [ j ] . finally_op -= shiftlist [ op_array -> try_catch_array [ j ] . finally_op ]	123:4:4334:4427	3200918	0	True				
ANR	3201409	AssignmentExpression	op_array -> try_catch_array [ j ] . finally_op -= shiftlist [ op_array -> try_catch_array [ j ] . finally_op ]		3200918	0		-=			
ANR	3201410	MemberAccess	op_array -> try_catch_array [ j ] . finally_op		3200918	0					
ANR	3201411	ArrayIndexing	op_array -> try_catch_array [ j ]		3200918	0					
ANR	3201412	PtrMemberAccess	op_array -> try_catch_array		3200918	0					
ANR	3201413	Identifier	op_array		3200918	0					
ANR	3201414	Identifier	try_catch_array		3200918	1					
ANR	3201415	Identifier	j		3200918	1					
ANR	3201416	Identifier	finally_op		3200918	1					
ANR	3201417	ArrayIndexing	shiftlist [ op_array -> try_catch_array [ j ] . finally_op ]		3200918	1					
ANR	3201418	Identifier	shiftlist		3200918	0					
ANR	3201419	MemberAccess	op_array -> try_catch_array [ j ] . finally_op		3200918	1					
ANR	3201420	ArrayIndexing	op_array -> try_catch_array [ j ]		3200918	0					
ANR	3201421	PtrMemberAccess	op_array -> try_catch_array		3200918	0					
ANR	3201422	Identifier	op_array		3200918	0					
ANR	3201423	Identifier	try_catch_array		3200918	1					
ANR	3201424	Identifier	j		3200918	1					
ANR	3201425	Identifier	finally_op		3200918	1					
ANR	3201426	ExpressionStatement	op_array -> try_catch_array [ j ] . finally_end -= shiftlist [ op_array -> try_catch_array [ j ] . finally_end ]	124:4:4433:4528	3200918	1	True				
ANR	3201427	AssignmentExpression	op_array -> try_catch_array [ j ] . finally_end -= shiftlist [ op_array -> try_catch_array [ j ] . finally_end ]		3200918	0		-=			
ANR	3201428	MemberAccess	op_array -> try_catch_array [ j ] . finally_end		3200918	0					
ANR	3201429	ArrayIndexing	op_array -> try_catch_array [ j ]		3200918	0					
ANR	3201430	PtrMemberAccess	op_array -> try_catch_array		3200918	0					
ANR	3201431	Identifier	op_array		3200918	0					
ANR	3201432	Identifier	try_catch_array		3200918	1					
ANR	3201433	Identifier	j		3200918	1					
ANR	3201434	Identifier	finally_end		3200918	1					
ANR	3201435	ArrayIndexing	shiftlist [ op_array -> try_catch_array [ j ] . finally_end ]		3200918	1					
ANR	3201436	Identifier	shiftlist		3200918	0					
ANR	3201437	MemberAccess	op_array -> try_catch_array [ j ] . finally_end		3200918	1					
ANR	3201438	ArrayIndexing	op_array -> try_catch_array [ j ]		3200918	0					
ANR	3201439	PtrMemberAccess	op_array -> try_catch_array		3200918	0					
ANR	3201440	Identifier	op_array		3200918	0					
ANR	3201441	Identifier	try_catch_array		3200918	1					
ANR	3201442	Identifier	j		3200918	1					
ANR	3201443	Identifier	finally_end		3200918	1					
ANR	3201444	IfStatement	if ( op_array -> early_binding != ( uint32_t ) - 1 )		3200918	5					
ANR	3201445	Condition	op_array -> early_binding != ( uint32_t ) - 1	129:6:4580:4618	3200918	0	True				
ANR	3201446	EqualityExpression	op_array -> early_binding != ( uint32_t ) - 1		3200918	0		!=			
ANR	3201447	PtrMemberAccess	op_array -> early_binding		3200918	0					
ANR	3201448	Identifier	op_array		3200918	0					
ANR	3201449	Identifier	early_binding		3200918	1					
ANR	3201450	CastExpression	( uint32_t ) - 1		3200918	1					
ANR	3201451	CastTarget	uint32_t		3200918	0					
ANR	3201452	UnaryOperationExpression	- 1		3200918	1					
ANR	3201453	UnaryOperator	-		3200918	0					
ANR	3201454	PrimaryExpression	1		3200918	1					
ANR	3201455	CompoundStatement		96:3:2959:3006	3200918	1					
ANR	3201456	IdentifierDeclStatement	uint32_t * opline_num = & op_array -> early_binding ;	130:3:4626:4673	3200918	0	True				
ANR	3201457	IdentifierDecl	* opline_num = & op_array -> early_binding		3200918	0					
ANR	3201458	IdentifierDeclType	uint32_t *		3200918	0					
ANR	3201459	Identifier	opline_num		3200918	1					
ANR	3201460	AssignmentExpression	* opline_num = & op_array -> early_binding		3200918	2		=			
ANR	3201461	Identifier	opline_num		3200918	0					
ANR	3201462	UnaryOperationExpression	& op_array -> early_binding		3200918	1					
ANR	3201463	UnaryOperator	&		3200918	0					
ANR	3201464	PtrMemberAccess	op_array -> early_binding		3200918	1					
ANR	3201465	Identifier	op_array		3200918	0					
ANR	3201466	Identifier	early_binding		3200918	1					
ANR	3201467	DoStatement	do		3200918	1					
ANR	3201468	CompoundStatement		98:6:3015:3015	3200918	0					
ANR	3201469	ExpressionStatement	* opline_num -= shiftlist [ * opline_num ]	133:4:4688:4725	3200918	0	True				
ANR	3201470	AssignmentExpression	* opline_num -= shiftlist [ * opline_num ]		3200918	0		-=			
ANR	3201471	UnaryOperationExpression	* opline_num		3200918	0					
ANR	3201472	UnaryOperator	*		3200918	0					
ANR	3201473	Identifier	opline_num		3200918	1					
ANR	3201474	ArrayIndexing	shiftlist [ * opline_num ]		3200918	1					
ANR	3201475	Identifier	shiftlist		3200918	0					
ANR	3201476	UnaryOperationExpression	* opline_num		3200918	1					
ANR	3201477	UnaryOperator	*		3200918	0					
ANR	3201478	Identifier	opline_num		3200918	1					
ANR	3201479	ExpressionStatement	opline_num = & ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num	134:4:4731:4800	3200918	1	True				
ANR	3201480	AssignmentExpression	opline_num = & ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num		3200918	0		=			
ANR	3201481	Identifier	opline_num		3200918	0					
ANR	3201482	UnaryOperationExpression	& ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num		3200918	1					
ANR	3201483	UnaryOperator	&		3200918	0					
ANR	3201484	MemberAccess	ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num		3200918	1					
ANR	3201485	CallExpression	ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] )		3200918	0					
ANR	3201486	Callee	ZEND_RESULT		3200918	0					
ANR	3201487	Identifier	ZEND_RESULT		3200918	0					
ANR	3201488	ArgumentList	& op_array -> opcodes [ * opline_num ]		3200918	1					
ANR	3201489	Argument	& op_array -> opcodes [ * opline_num ]		3200918	0					
ANR	3201490	UnaryOperationExpression	& op_array -> opcodes [ * opline_num ]		3200918	0					
ANR	3201491	UnaryOperator	&		3200918	0					
ANR	3201492	ArrayIndexing	op_array -> opcodes [ * opline_num ]		3200918	1					
ANR	3201493	PtrMemberAccess	op_array -> opcodes		3200918	0					
ANR	3201494	Identifier	op_array		3200918	0					
ANR	3201495	Identifier	opcodes		3200918	1					
ANR	3201496	UnaryOperationExpression	* opline_num		3200918	1					
ANR	3201497	UnaryOperator	*		3200918	0					
ANR	3201498	Identifier	opline_num		3200918	1					
ANR	3201499	Identifier	opline_num		3200918	1					
ANR	3201500	Condition	* opline_num != ( uint32_t ) - 1	135:12:4814:4840	3200918	1	True				
ANR	3201501	EqualityExpression	* opline_num != ( uint32_t ) - 1		3200918	0		!=			
ANR	3201502	UnaryOperationExpression	* opline_num		3200918	0					
ANR	3201503	UnaryOperator	*		3200918	0					
ANR	3201504	Identifier	opline_num		3200918	1					
ANR	3201505	CastExpression	( uint32_t ) - 1		3200918	1					
ANR	3201506	CastTarget	uint32_t		3200918	0					
ANR	3201507	UnaryOperationExpression	- 1		3200918	1					
ANR	3201508	UnaryOperator	-		3200918	0					
ANR	3201509	PrimaryExpression	1		3200918	1					
ANR	3201510	ExpressionStatement	FREE_ALLOCA ( shiftlist )	138:1:4852:4874	3200918	10	True				
ANR	3201511	CallExpression	FREE_ALLOCA ( shiftlist )		3200918	0					
ANR	3201512	Callee	FREE_ALLOCA		3200918	0					
ANR	3201513	Identifier	FREE_ALLOCA		3200918	0					
ANR	3201514	ArgumentList	shiftlist		3200918	1					
ANR	3201515	Argument	shiftlist		3200918	0					
ANR	3201516	Identifier	shiftlist		3200918	0					
ANR	3201517	ReturnType	void		3200918	1					
ANR	3201518	Identifier	zend_optimizer_nop_removal		3200918	2					
ANR	3201519	ParameterList	zend_op_array * op_array		3200918	3					
ANR	3201520	Parameter	zend_op_array * op_array	34:32:1641:1663	3200918	0	True				
ANR	3201521	ParameterType	zend_op_array *		3200918	0					
ANR	3201522	Identifier	op_array		3200918	1					
ANR	3201523	CFGEntryNode	ENTRY		3200918		True				
ANR	3201524	CFGExitNode	EXIT		3200918		True				
ANR	3201525	Symbol	* * op_array -> brk_cont_array		3200918						
ANR	3201526	Symbol	* op_array -> try_catch_array [ j ] . finally_end		3200918						
ANR	3201527	Symbol	* new_count		3200918						
ANR	3201528	Symbol	* * * op_array		3200918						
ANR	3201529	Symbol	ZEND_OP1 ( opline ) . opline_num		3200918						
ANR	3201530	Symbol	* * op_array -> try_catch_array		3200918						
ANR	3201531	Symbol	shift		3200918						
ANR	3201532	Symbol	& ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num		3200918						
ANR	3201533	Symbol	opline -> extended_value		3200918						
ANR	3201534	Symbol	op_array -> brk_cont_array [ j ] . brk		3200918						
ANR	3201535	Symbol	opline		3200918						
ANR	3201536	Symbol	op_array -> early_binding		3200918						
ANR	3201537	Symbol	op_array -> try_catch_array [ j ] . try_op		3200918						
ANR	3201538	Symbol	op_array -> try_catch_array		3200918						
ANR	3201539	Symbol	& op_array -> early_binding		3200918						
ANR	3201540	Symbol	* * j		3200918						
ANR	3201541	Symbol	* op_array -> try_catch_array [ j ] . finally_op		3200918						
ANR	3201542	Symbol	* op_array -> try_catch_array [ j ] . catch_op		3200918						
ANR	3201543	Symbol	ZEND_NOP		3200918						
ANR	3201544	Symbol	* ZEND_OP2 ( opline ) . opline_num		3200918						
ANR	3201545	Symbol	* op_array		3200918						
ANR	3201546	Symbol	* * opline_num		3200918						
ANR	3201547	Symbol	op_array -> last		3200918						
ANR	3201548	Symbol	* opline_num		3200918						
ANR	3201549	Symbol	ZEND_OP2 ( opline ) . opline_num		3200918						
ANR	3201550	Symbol	new_count		3200918						
ANR	3201551	Symbol	* opline -> extended_value		3200918						
ANR	3201552	Symbol	opline_num		3200918						
ANR	3201553	Symbol	* * op_array		3200918						
ANR	3201554	Symbol	op_array -> try_catch_array [ j ] . catch_op		3200918						
ANR	3201555	Symbol	use_heap		3200918						
ANR	3201556	Symbol	* op_array -> try_catch_array		3200918						
ANR	3201557	Symbol	op_array -> brk_cont_array [ j ] . cont		3200918						
ANR	3201558	Symbol	op_array -> brk_cont_array		3200918						
ANR	3201559	Symbol	op_array -> opcodes		3200918						
ANR	3201560	Symbol	* op_array -> try_catch_array [ j ] . try_op		3200918						
ANR	3201561	Symbol	& ZEND_RESULT		3200918						
ANR	3201562	Symbol	* shiftlist		3200918						
ANR	3201563	Symbol	ZEND_RESULT		3200918						
ANR	3201564	Symbol	DO_ALLOCA		3200918						
ANR	3201565	Symbol	end		3200918						
ANR	3201566	Symbol	* * opline		3200918						
ANR	3201567	Symbol	op_array -> try_catch_array [ j ] . finally_op		3200918						
ANR	3201568	Symbol	* ZEND_OP1		3200918						
ANR	3201569	Symbol	* op_array -> brk_cont_array [ j ] . cont		3200918						
ANR	3201570	Symbol	op_array -> brk_cont_array [ j ] . start		3200918						
ANR	3201571	Symbol	* ZEND_OP2		3200918						
ANR	3201572	Symbol	* op_array -> brk_cont_array		3200918						
ANR	3201573	Symbol	i		3200918						
ANR	3201574	Symbol	* op_array -> brk_cont_array [ j ] . brk		3200918						
ANR	3201575	Symbol	j		3200918						
ANR	3201576	Symbol	shiftlist		3200918						
ANR	3201577	Symbol	ZEND_OP1		3200918						
ANR	3201578	Symbol	target		3200918						
ANR	3201579	Symbol	ZEND_OP2		3200918						
ANR	3201580	Symbol	op_array -> last_brk_cont		3200918						
ANR	3201581	Symbol	op_array -> last_try_catch		3200918						
ANR	3201582	Symbol	op_array -> try_catch_array [ j ] . finally_end		3200918						
ANR	3201583	Symbol	* target		3200918						
ANR	3201584	Symbol	* op_array -> brk_cont_array [ j ] . start		3200918						
ANR	3201585	Symbol	ZEND_JMP		3200918						
ANR	3201586	Symbol	* opline		3200918						
ANR	3201587	Symbol	* j		3200918						
ANR	3201588	Symbol	opline -> opcode		3200918						
ANR	3201589	Symbol	target -> opcode		3200918						
ANR	3201590	Symbol	* ZEND_OP1 ( opline ) . opline_num		3200918						
ANR	3201591	Symbol	op_array		3200918						
ANR	3201592	Symbol	* op_array -> opcodes		3200918						
