command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3773524	File	data/converged/CVE-2015-8617_php-src/str2num.c								
ANR	3773525	Function	bc_str2num	43:0:1460:2928							
ANR	3773526	FunctionDef	"bc_str2num (bc_num * num , char * str , int scale)"		3773525	0					
ANR	3773527	CompoundStatement		45:0:1512:2928	3773525	0					
ANR	3773528	IdentifierDeclStatement	"int digits , strscale ;"	46:2:1516:1536	3773525	0	True				
ANR	3773529	IdentifierDecl	digits		3773525	0					
ANR	3773530	IdentifierDeclType	int		3773525	0					
ANR	3773531	Identifier	digits		3773525	1					
ANR	3773532	IdentifierDecl	strscale		3773525	1					
ANR	3773533	IdentifierDeclType	int		3773525	0					
ANR	3773534	Identifier	strscale		3773525	1					
ANR	3773535	IdentifierDeclStatement	"char * ptr , * nptr ;"	47:2:1540:1556	3773525	1	True				
ANR	3773536	IdentifierDecl	* ptr		3773525	0					
ANR	3773537	IdentifierDeclType	char *		3773525	0					
ANR	3773538	Identifier	ptr		3773525	1					
ANR	3773539	IdentifierDecl	* nptr		3773525	1					
ANR	3773540	IdentifierDeclType	char *		3773525	0					
ANR	3773541	Identifier	nptr		3773525	1					
ANR	3773542	IdentifierDeclStatement	char zero_int ;	48:2:1560:1573	3773525	2	True				
ANR	3773543	IdentifierDecl	zero_int		3773525	0					
ANR	3773544	IdentifierDeclType	char		3773525	0					
ANR	3773545	Identifier	zero_int		3773525	1					
ANR	3773546	ExpressionStatement	bc_free_num ( num )	51:2:1599:1616	3773525	3	True				
ANR	3773547	CallExpression	bc_free_num ( num )		3773525	0					
ANR	3773548	Callee	bc_free_num		3773525	0					
ANR	3773549	Identifier	bc_free_num		3773525	0					
ANR	3773550	ArgumentList	num		3773525	1					
ANR	3773551	Argument	num		3773525	0					
ANR	3773552	Identifier	num		3773525	0					
ANR	3773553	ExpressionStatement	ptr = str	54:2:1670:1679	3773525	4	True				
ANR	3773554	AssignmentExpression	ptr = str		3773525	0		=			
ANR	3773555	Identifier	ptr		3773525	0					
ANR	3773556	Identifier	str		3773525	1					
ANR	3773557	ExpressionStatement	digits = 0	55:2:1683:1693	3773525	5	True				
ANR	3773558	AssignmentExpression	digits = 0		3773525	0		=			
ANR	3773559	Identifier	digits		3773525	0					
ANR	3773560	PrimaryExpression	0		3773525	1					
ANR	3773561	ExpressionStatement	strscale = 0	56:2:1697:1709	3773525	6	True				
ANR	3773562	AssignmentExpression	strscale = 0		3773525	0		=			
ANR	3773563	Identifier	strscale		3773525	0					
ANR	3773564	PrimaryExpression	0		3773525	1					
ANR	3773565	ExpressionStatement	zero_int = FALSE	57:2:1713:1729	3773525	7	True				
ANR	3773566	AssignmentExpression	zero_int = FALSE		3773525	0		=			
ANR	3773567	Identifier	zero_int		3773525	0					
ANR	3773568	Identifier	FALSE		3773525	1					
ANR	3773569	IfStatement	if ( ( * ptr == '+' ) || ( * ptr == '-' ) )		3773525	8					
ANR	3773570	Condition	( * ptr == '+' ) || ( * ptr == '-' )	58:7:1738:1767	3773525	0	True				
ANR	3773571	OrExpression	( * ptr == '+' ) || ( * ptr == '-' )		3773525	0		||			
ANR	3773572	EqualityExpression	* ptr == '+'		3773525	0		==			
ANR	3773573	UnaryOperationExpression	* ptr		3773525	0					
ANR	3773574	UnaryOperator	*		3773525	0					
ANR	3773575	Identifier	ptr		3773525	1					
ANR	3773576	PrimaryExpression	'+'		3773525	1					
ANR	3773577	EqualityExpression	* ptr == '-'		3773525	1		==			
ANR	3773578	UnaryOperationExpression	* ptr		3773525	0					
ANR	3773579	UnaryOperator	*		3773525	0					
ANR	3773580	Identifier	ptr		3773525	1					
ANR	3773581	PrimaryExpression	'-'		3773525	1					
ANR	3773582	ExpressionStatement	ptr ++	58:40:1771:1776	3773525	1	True				
ANR	3773583	PostIncDecOperationExpression	ptr ++		3773525	0					
ANR	3773584	Identifier	ptr		3773525	0					
ANR	3773585	IncDec	++		3773525	1					
ANR	3773586	WhileStatement	while ( * ptr == '0' )		3773525	9					
ANR	3773587	Condition	* ptr == '0'	59:9:1799:1809	3773525	0	True				
ANR	3773588	EqualityExpression	* ptr == '0'		3773525	0		==			
ANR	3773589	UnaryOperationExpression	* ptr		3773525	0					
ANR	3773590	UnaryOperator	*		3773525	0					
ANR	3773591	Identifier	ptr		3773525	1					
ANR	3773592	PrimaryExpression	'0'		3773525	1					
ANR	3773593	ExpressionStatement	ptr ++	59:22:1812:1817	3773525	1	True				
ANR	3773594	PostIncDecOperationExpression	ptr ++		3773525	0					
ANR	3773595	Identifier	ptr		3773525	0					
ANR	3773596	IncDec	++		3773525	1					
ANR	3773597	WhileStatement	while ( isdigit ( ( int ) * ptr ) )		3773525	10					
ANR	3773598	Condition	isdigit ( ( int ) * ptr )	60:9:1856:1873	3773525	0	True				
ANR	3773599	CallExpression	isdigit ( ( int ) * ptr )		3773525	0					
ANR	3773600	Callee	isdigit		3773525	0					
ANR	3773601	Identifier	isdigit		3773525	0					
ANR	3773602	ArgumentList	( int ) * ptr		3773525	1					
ANR	3773603	Argument	( int ) * ptr		3773525	0					
ANR	3773604	CastExpression	( int ) * ptr		3773525	0					
ANR	3773605	CastTarget	int		3773525	0					
ANR	3773606	UnaryOperationExpression	* ptr		3773525	1					
ANR	3773607	UnaryOperator	*		3773525	0					
ANR	3773608	Identifier	ptr		3773525	1					
ANR	3773609	ExpressionStatement	"ptr ++ , digits ++"	60:29:1876:1891	3773525	1	True				
ANR	3773610	Expression	"ptr ++ , digits ++"		3773525	0					
ANR	3773611	PostIncDecOperationExpression	ptr ++		3773525	0					
ANR	3773612	Identifier	ptr		3773525	0					
ANR	3773613	IncDec	++		3773525	1					
ANR	3773614	PostIncDecOperationExpression	digits ++		3773525	1					
ANR	3773615	Identifier	digits		3773525	0					
ANR	3773616	IncDec	++		3773525	1					
ANR	3773617	IfStatement	if ( * ptr == '.' )		3773525	11					
ANR	3773618	Condition	* ptr == '.'	61:6:1912:1922	3773525	0	True				
ANR	3773619	EqualityExpression	* ptr == '.'		3773525	0		==			
ANR	3773620	UnaryOperationExpression	* ptr		3773525	0					
ANR	3773621	UnaryOperator	*		3773525	0					
ANR	3773622	Identifier	ptr		3773525	1					
ANR	3773623	PrimaryExpression	'.'		3773525	1					
ANR	3773624	ExpressionStatement	ptr ++	61:19:1925:1930	3773525	1	True				
ANR	3773625	PostIncDecOperationExpression	ptr ++		3773525	0					
ANR	3773626	Identifier	ptr		3773525	0					
ANR	3773627	IncDec	++		3773525	1					
ANR	3773628	WhileStatement	while ( isdigit ( ( int ) * ptr ) )		3773525	12					
ANR	3773629	Condition	isdigit ( ( int ) * ptr )	62:9:1963:1980	3773525	0	True				
ANR	3773630	CallExpression	isdigit ( ( int ) * ptr )		3773525	0					
ANR	3773631	Callee	isdigit		3773525	0					
ANR	3773632	Identifier	isdigit		3773525	0					
ANR	3773633	ArgumentList	( int ) * ptr		3773525	1					
ANR	3773634	Argument	( int ) * ptr		3773525	0					
ANR	3773635	CastExpression	( int ) * ptr		3773525	0					
ANR	3773636	CastTarget	int		3773525	0					
ANR	3773637	UnaryOperationExpression	* ptr		3773525	1					
ANR	3773638	UnaryOperator	*		3773525	0					
ANR	3773639	Identifier	ptr		3773525	1					
ANR	3773640	ExpressionStatement	"ptr ++ , strscale ++"	62:29:1983:2000	3773525	1	True				
ANR	3773641	Expression	"ptr ++ , strscale ++"		3773525	0					
ANR	3773642	PostIncDecOperationExpression	ptr ++		3773525	0					
ANR	3773643	Identifier	ptr		3773525	0					
ANR	3773644	IncDec	++		3773525	1					
ANR	3773645	PostIncDecOperationExpression	strscale ++		3773525	1					
ANR	3773646	Identifier	strscale		3773525	0					
ANR	3773647	IncDec	++		3773525	1					
ANR	3773648	IfStatement	if ( ( * ptr != '\\0' ) || ( digits + strscale == 0 ) )		3773525	13					
ANR	3773649	Condition	( * ptr != '\\0' ) || ( digits + strscale == 0 )	63:6:2021:2060	3773525	0	True				
ANR	3773650	OrExpression	( * ptr != '\\0' ) || ( digits + strscale == 0 )		3773525	0		||			
ANR	3773651	EqualityExpression	* ptr != '\\0'		3773525	0		!=			
ANR	3773652	UnaryOperationExpression	* ptr		3773525	0					
ANR	3773653	UnaryOperator	*		3773525	0					
ANR	3773654	Identifier	ptr		3773525	1					
ANR	3773655	PrimaryExpression	'\\0'		3773525	1					
ANR	3773656	EqualityExpression	digits + strscale == 0		3773525	1		==			
ANR	3773657	AdditiveExpression	digits + strscale		3773525	0		+			
ANR	3773658	Identifier	digits		3773525	0					
ANR	3773659	Identifier	strscale		3773525	1					
ANR	3773660	PrimaryExpression	0		3773525	1					
ANR	3773661	CompoundStatement		20:4:554:554	3773525	1					
ANR	3773662	ExpressionStatement	* num = bc_copy_num ( BCG ( _zero_ ) )	65:6:2075:2107	3773525	0	True				
ANR	3773663	AssignmentExpression	* num = bc_copy_num ( BCG ( _zero_ ) )		3773525	0		=			
ANR	3773664	UnaryOperationExpression	* num		3773525	0					
ANR	3773665	UnaryOperator	*		3773525	0					
ANR	3773666	Identifier	num		3773525	1					
ANR	3773667	CallExpression	bc_copy_num ( BCG ( _zero_ ) )		3773525	1					
ANR	3773668	Callee	bc_copy_num		3773525	0					
ANR	3773669	Identifier	bc_copy_num		3773525	0					
ANR	3773670	ArgumentList	BCG ( _zero_ )		3773525	1					
ANR	3773671	Argument	BCG ( _zero_ )		3773525	0					
ANR	3773672	CallExpression	BCG ( _zero_ )		3773525	0					
ANR	3773673	Callee	BCG		3773525	0					
ANR	3773674	Identifier	BCG		3773525	0					
ANR	3773675	ArgumentList	_zero_		3773525	1					
ANR	3773676	Argument	_zero_		3773525	0					
ANR	3773677	Identifier	_zero_		3773525	0					
ANR	3773678	ReturnStatement	return ;	66:6:2115:2121	3773525	1	True				
ANR	3773679	ExpressionStatement	"strscale = MIN ( strscale , scale )"	70:2:2199:2230	3773525	14	True				
ANR	3773680	AssignmentExpression	"strscale = MIN ( strscale , scale )"		3773525	0		=			
ANR	3773681	Identifier	strscale		3773525	0					
ANR	3773682	CallExpression	"MIN ( strscale , scale )"		3773525	1					
ANR	3773683	Callee	MIN		3773525	0					
ANR	3773684	Identifier	MIN		3773525	0					
ANR	3773685	ArgumentList	strscale		3773525	1					
ANR	3773686	Argument	strscale		3773525	0					
ANR	3773687	Identifier	strscale		3773525	0					
ANR	3773688	Argument	scale		3773525	1					
ANR	3773689	Identifier	scale		3773525	0					
ANR	3773690	IfStatement	if ( digits == 0 )		3773525	15					
ANR	3773691	Condition	digits == 0	71:6:2238:2248	3773525	0	True				
ANR	3773692	EqualityExpression	digits == 0		3773525	0		==			
ANR	3773693	Identifier	digits		3773525	0					
ANR	3773694	PrimaryExpression	0		3773525	1					
ANR	3773695	CompoundStatement		28:4:742:742	3773525	1					
ANR	3773696	ExpressionStatement	zero_int = TRUE	73:6:2263:2278	3773525	0	True				
ANR	3773697	AssignmentExpression	zero_int = TRUE		3773525	0		=			
ANR	3773698	Identifier	zero_int		3773525	0					
ANR	3773699	Identifier	TRUE		3773525	1					
ANR	3773700	ExpressionStatement	digits = 1	74:6:2286:2296	3773525	1	True				
ANR	3773701	AssignmentExpression	digits = 1		3773525	0		=			
ANR	3773702	Identifier	digits		3773525	0					
ANR	3773703	PrimaryExpression	1		3773525	1					
ANR	3773704	ExpressionStatement	"* num = bc_new_num ( digits , strscale )"	76:2:2306:2342	3773525	16	True				
ANR	3773705	AssignmentExpression	"* num = bc_new_num ( digits , strscale )"		3773525	0		=			
ANR	3773706	UnaryOperationExpression	* num		3773525	0					
ANR	3773707	UnaryOperator	*		3773525	0					
ANR	3773708	Identifier	num		3773525	1					
ANR	3773709	CallExpression	"bc_new_num ( digits , strscale )"		3773525	1					
ANR	3773710	Callee	bc_new_num		3773525	0					
ANR	3773711	Identifier	bc_new_num		3773525	0					
ANR	3773712	ArgumentList	digits		3773525	1					
ANR	3773713	Argument	digits		3773525	0					
ANR	3773714	Identifier	digits		3773525	0					
ANR	3773715	Argument	strscale		3773525	1					
ANR	3773716	Identifier	strscale		3773525	0					
ANR	3773717	ExpressionStatement	ptr = str	79:2:2379:2388	3773525	17	True				
ANR	3773718	AssignmentExpression	ptr = str		3773525	0		=			
ANR	3773719	Identifier	ptr		3773525	0					
ANR	3773720	Identifier	str		3773525	1					
ANR	3773721	IfStatement	if ( * ptr == '-' )		3773525	18					
ANR	3773722	Condition	* ptr == '-'	80:6:2396:2406	3773525	0	True				
ANR	3773723	EqualityExpression	* ptr == '-'		3773525	0		==			
ANR	3773724	UnaryOperationExpression	* ptr		3773525	0					
ANR	3773725	UnaryOperator	*		3773525	0					
ANR	3773726	Identifier	ptr		3773525	1					
ANR	3773727	PrimaryExpression	'-'		3773525	1					
ANR	3773728	CompoundStatement		37:4:900:900	3773525	1					
ANR	3773729	ExpressionStatement	( * num ) -> n_sign = MINUS	82:6:2421:2443	3773525	0	True				
ANR	3773730	AssignmentExpression	( * num ) -> n_sign = MINUS		3773525	0		=			
ANR	3773731	PtrMemberAccess	( * num ) -> n_sign		3773525	0					
ANR	3773732	UnaryOperationExpression	* num		3773525	0					
ANR	3773733	UnaryOperator	*		3773525	0					
ANR	3773734	Identifier	num		3773525	1					
ANR	3773735	Identifier	n_sign		3773525	1					
ANR	3773736	Identifier	MINUS		3773525	1					
ANR	3773737	ExpressionStatement	ptr ++	83:6:2451:2456	3773525	1	True				
ANR	3773738	PostIncDecOperationExpression	ptr ++		3773525	0					
ANR	3773739	Identifier	ptr		3773525	0					
ANR	3773740	IncDec	++		3773525	1					
ANR	3773741	ElseStatement	else		3773525	0					
ANR	3773742	CompoundStatement		42:4:962:962	3773525	0					
ANR	3773743	ExpressionStatement	( * num ) -> n_sign = PLUS	87:6:2483:2504	3773525	0	True				
ANR	3773744	AssignmentExpression	( * num ) -> n_sign = PLUS		3773525	0		=			
ANR	3773745	PtrMemberAccess	( * num ) -> n_sign		3773525	0					
ANR	3773746	UnaryOperationExpression	* num		3773525	0					
ANR	3773747	UnaryOperator	*		3773525	0					
ANR	3773748	Identifier	num		3773525	1					
ANR	3773749	Identifier	n_sign		3773525	1					
ANR	3773750	Identifier	PLUS		3773525	1					
ANR	3773751	IfStatement	if ( * ptr == '+' )		3773525	1					
ANR	3773752	Condition	* ptr == '+'	88:10:2516:2526	3773525	0	True				
ANR	3773753	EqualityExpression	* ptr == '+'		3773525	0		==			
ANR	3773754	UnaryOperationExpression	* ptr		3773525	0					
ANR	3773755	UnaryOperator	*		3773525	0					
ANR	3773756	Identifier	ptr		3773525	1					
ANR	3773757	PrimaryExpression	'+'		3773525	1					
ANR	3773758	ExpressionStatement	ptr ++	88:23:2529:2534	3773525	1	True				
ANR	3773759	PostIncDecOperationExpression	ptr ++		3773525	0					
ANR	3773760	Identifier	ptr		3773525	0					
ANR	3773761	IncDec	++		3773525	1					
ANR	3773762	WhileStatement	while ( * ptr == '0' )		3773525	19					
ANR	3773763	Condition	* ptr == '0'	90:9:2551:2561	3773525	0	True				
ANR	3773764	EqualityExpression	* ptr == '0'		3773525	0		==			
ANR	3773765	UnaryOperationExpression	* ptr		3773525	0					
ANR	3773766	UnaryOperator	*		3773525	0					
ANR	3773767	Identifier	ptr		3773525	1					
ANR	3773768	PrimaryExpression	'0'		3773525	1					
ANR	3773769	ExpressionStatement	ptr ++	90:22:2564:2569	3773525	1	True				
ANR	3773770	PostIncDecOperationExpression	ptr ++		3773525	0					
ANR	3773771	Identifier	ptr		3773525	0					
ANR	3773772	IncDec	++		3773525	1					
ANR	3773773	ExpressionStatement	nptr = ( * num ) -> n_value	91:2:2601:2623	3773525	20	True				
ANR	3773774	AssignmentExpression	nptr = ( * num ) -> n_value		3773525	0		=			
ANR	3773775	Identifier	nptr		3773525	0					
ANR	3773776	PtrMemberAccess	( * num ) -> n_value		3773525	1					
ANR	3773777	UnaryOperationExpression	* num		3773525	0					
ANR	3773778	UnaryOperator	*		3773525	0					
ANR	3773779	Identifier	num		3773525	1					
ANR	3773780	Identifier	n_value		3773525	1					
ANR	3773781	IfStatement	if ( zero_int )		3773525	21					
ANR	3773782	Condition	zero_int	92:6:2631:2638	3773525	0	True				
ANR	3773783	Identifier	zero_int		3773525	0					
ANR	3773784	CompoundStatement		49:4:1132:1132	3773525	1					
ANR	3773785	ExpressionStatement	* nptr ++ = 0	94:6:2653:2664	3773525	0	True				
ANR	3773786	AssignmentExpression	* nptr ++ = 0		3773525	0		=			
ANR	3773787	UnaryOperationExpression	* nptr ++		3773525	0					
ANR	3773788	UnaryOperator	*		3773525	0					
ANR	3773789	PostIncDecOperationExpression	nptr ++		3773525	1					
ANR	3773790	Identifier	nptr		3773525	0					
ANR	3773791	IncDec	++		3773525	1					
ANR	3773792	PrimaryExpression	0		3773525	1					
ANR	3773793	ExpressionStatement	digits = 0	95:6:2672:2682	3773525	1	True				
ANR	3773794	AssignmentExpression	digits = 0		3773525	0		=			
ANR	3773795	Identifier	digits		3773525	0					
ANR	3773796	PrimaryExpression	0		3773525	1					
ANR	3773797	ForStatement	for ( ; digits > 0 ; digits -- )		3773525	22					
ANR	3773798	Condition	digits > 0	97:8:2698:2707	3773525	0	True				
ANR	3773799	RelationalExpression	digits > 0		3773525	0		>			
ANR	3773800	Identifier	digits		3773525	0					
ANR	3773801	PrimaryExpression	0		3773525	1					
ANR	3773802	PostIncDecOperationExpression	digits --	97:20:2710:2717	3773525	1	True				
ANR	3773803	Identifier	digits		3773525	0					
ANR	3773804	IncDec	--		3773525	1					
ANR	3773805	ExpressionStatement	* nptr ++ = CH_VAL ( * ptr ++ )	98:4:2724:2748	3773525	2	True				
ANR	3773806	AssignmentExpression	* nptr ++ = CH_VAL ( * ptr ++ )		3773525	0		=			
ANR	3773807	UnaryOperationExpression	* nptr ++		3773525	0					
ANR	3773808	UnaryOperator	*		3773525	0					
ANR	3773809	PostIncDecOperationExpression	nptr ++		3773525	1					
ANR	3773810	Identifier	nptr		3773525	0					
ANR	3773811	IncDec	++		3773525	1					
ANR	3773812	CallExpression	CH_VAL ( * ptr ++ )		3773525	1					
ANR	3773813	Callee	CH_VAL		3773525	0					
ANR	3773814	Identifier	CH_VAL		3773525	0					
ANR	3773815	ArgumentList	* ptr ++		3773525	1					
ANR	3773816	Argument	* ptr ++		3773525	0					
ANR	3773817	UnaryOperationExpression	* ptr ++		3773525	0					
ANR	3773818	UnaryOperator	*		3773525	0					
ANR	3773819	PostIncDecOperationExpression	ptr ++		3773525	1					
ANR	3773820	Identifier	ptr		3773525	0					
ANR	3773821	IncDec	++		3773525	1					
ANR	3773822	IfStatement	if ( strscale > 0 )		3773525	23					
ANR	3773823	Condition	strscale > 0	102:6:2793:2804	3773525	0	True				
ANR	3773824	RelationalExpression	strscale > 0		3773525	0		>			
ANR	3773825	Identifier	strscale		3773525	0					
ANR	3773826	PrimaryExpression	0		3773525	1					
ANR	3773827	CompoundStatement		59:4:1298:1298	3773525	1					
ANR	3773828	ExpressionStatement	ptr ++	104:6:2819:2824	3773525	0	True				
ANR	3773829	PostIncDecOperationExpression	ptr ++		3773525	0					
ANR	3773830	Identifier	ptr		3773525	0					
ANR	3773831	IncDec	++		3773525	1					
ANR	3773832	ForStatement	for ( ; strscale > 0 ; strscale -- )		3773525	1					
ANR	3773833	Condition	strscale > 0	105:12:2869:2880	3773525	0	True				
ANR	3773834	RelationalExpression	strscale > 0		3773525	0		>			
ANR	3773835	Identifier	strscale		3773525	0					
ANR	3773836	PrimaryExpression	0		3773525	1					
ANR	3773837	PostIncDecOperationExpression	strscale --	105:26:2883:2892	3773525	1	True				
ANR	3773838	Identifier	strscale		3773525	0					
ANR	3773839	IncDec	--		3773525	1					
ANR	3773840	ExpressionStatement	* nptr ++ = CH_VAL ( * ptr ++ )	106:1:2896:2920	3773525	2	True				
ANR	3773841	AssignmentExpression	* nptr ++ = CH_VAL ( * ptr ++ )		3773525	0		=			
ANR	3773842	UnaryOperationExpression	* nptr ++		3773525	0					
ANR	3773843	UnaryOperator	*		3773525	0					
ANR	3773844	PostIncDecOperationExpression	nptr ++		3773525	1					
ANR	3773845	Identifier	nptr		3773525	0					
ANR	3773846	IncDec	++		3773525	1					
ANR	3773847	CallExpression	CH_VAL ( * ptr ++ )		3773525	1					
ANR	3773848	Callee	CH_VAL		3773525	0					
ANR	3773849	Identifier	CH_VAL		3773525	0					
ANR	3773850	ArgumentList	* ptr ++		3773525	1					
ANR	3773851	Argument	* ptr ++		3773525	0					
ANR	3773852	UnaryOperationExpression	* ptr ++		3773525	0					
ANR	3773853	UnaryOperator	*		3773525	0					
ANR	3773854	PostIncDecOperationExpression	ptr ++		3773525	1					
ANR	3773855	Identifier	ptr		3773525	0					
ANR	3773856	IncDec	++		3773525	1					
ANR	3773857	ReturnType	void		3773525	1					
ANR	3773858	Identifier	bc_str2num		3773525	2					
ANR	3773859	ParameterList	"bc_num * num , char * str , int scale"		3773525	3					
ANR	3773860	Parameter	bc_num * num	44:12:1477:1487	3773525	0	True				
ANR	3773861	ParameterType	bc_num *		3773525	0					
ANR	3773862	Identifier	num		3773525	1					
ANR	3773863	Parameter	char * str	44:25:1490:1498	3773525	1	True				
ANR	3773864	ParameterType	char *		3773525	0					
ANR	3773865	Identifier	str		3773525	1					
ANR	3773866	Parameter	int scale	44:36:1501:1509	3773525	2	True				
ANR	3773867	ParameterType	int		3773525	0					
ANR	3773868	Identifier	scale		3773525	1					
ANR	3773869	CFGEntryNode	ENTRY		3773525		True				
ANR	3773870	CFGExitNode	EXIT		3773525		True				
ANR	3773871	Symbol	num		3773525						
ANR	3773872	Symbol	scale		3773525						
ANR	3773873	Symbol	* nptr ++		3773525						
ANR	3773874	Symbol	bc_new_num		3773525						
ANR	3773875	Symbol	bc_copy_num		3773525						
ANR	3773876	Symbol	MINUS		3773525						
ANR	3773877	Symbol	CH_VAL		3773525						
ANR	3773878	Symbol	* ptr		3773525						
ANR	3773879	Symbol	* * num		3773525						
ANR	3773880	Symbol	( * num ) -> n_sign		3773525						
ANR	3773881	Symbol	isdigit		3773525						
ANR	3773882	Symbol	* ptr ++		3773525						
ANR	3773883	Symbol	BCG		3773525						
ANR	3773884	Symbol	TRUE		3773525						
ANR	3773885	Symbol	zero_int		3773525						
ANR	3773886	Symbol	ptr		3773525						
ANR	3773887	Symbol	str		3773525						
ANR	3773888	Symbol	* num		3773525						
ANR	3773889	Symbol	nptr		3773525						
ANR	3773890	Symbol	MIN		3773525						
ANR	3773891	Symbol	( * num ) -> n_value		3773525						
ANR	3773892	Symbol	digits		3773525						
ANR	3773893	Symbol	FALSE		3773525						
ANR	3773894	Symbol	_zero_		3773525						
ANR	3773895	Symbol	strscale		3773525						
ANR	3773896	Symbol	PLUS		3773525						
